Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private String internalGet(URL get) throws IOException, ClientProtocolException, URISyntaxException [ CD ]
Line_2 $$ private String internalGet(URL get) throws IOException, ClientProtocolException, URISyntaxException -->Line_3 $$ HttpUriRequest request = RequestBuilder.get().setUri(get.toURI()).setHeader("User-Agent", this.userAgent).build()[ CD ]
Line_3 $$ HttpUriRequest request = RequestBuilder.get().setUri(get.toURI()).setHeader("User-Agent", this.userAgent).build()-->Line_3 $$ HttpUriRequest request = RequestBuilder.get().setUri(get.toURI()).setHeader("User-Agent", this.userAgent).build()[ CD ]
Line_2 $$ private String internalGet(URL get) throws IOException, ClientProtocolException, URISyntaxException -->Line_3 $$ HttpUriRequest request = RequestBuilder.get().setUri(get.toURI()).setHeader("User-Agent", this.userAgent).build()[ FD ]
Line_2 $$ private String internalGet(URL get) throws IOException, ClientProtocolException, URISyntaxException -->Line_4 $$ CloseableHttpResponse execute = this.httpclient.execute(request)[ CD ]
Line_4 $$ CloseableHttpResponse execute = this.httpclient.execute(request)-->Line_4 $$ CloseableHttpResponse execute = this.httpclient.execute(request)[ CD ]
Line_3 $$ HttpUriRequest request = RequestBuilder.get().setUri(get.toURI()).setHeader("User-Agent", this.userAgent).build()-->Line_4 $$ CloseableHttpResponse execute = this.httpclient.execute(request)[ FD ]
Line_2 $$ private String internalGet(URL get) throws IOException, ClientProtocolException, URISyntaxException -->Line_5 $$ HttpEntity entity = execute.getEntity()[ CD ]
Line_5 $$ HttpEntity entity = execute.getEntity()-->Line_5 $$ HttpEntity entity = execute.getEntity()[ CD ]
Line_4 $$ CloseableHttpResponse execute = this.httpclient.execute(request)-->Line_5 $$ HttpEntity entity = execute.getEntity()[ FD ]
Line_2 $$ private String internalGet(URL get) throws IOException, ClientProtocolException, URISyntaxException -->Line_6 $$ InputStream contentIS = entity.getContent()[ CD ]
Line_6 $$ InputStream contentIS = entity.getContent()-->Line_6 $$ InputStream contentIS = entity.getContent()[ CD ]
Line_5 $$ HttpEntity entity = execute.getEntity()-->Line_6 $$ InputStream contentIS = entity.getContent()[ FD ]
Line_2 $$ private String internalGet(URL get) throws IOException, ClientProtocolException, URISyntaxException -->Line_7 $$ Header contentType = entity.getContentType()[ CD ]
Line_7 $$ Header contentType = entity.getContentType()-->Line_7 $$ Header contentType = entity.getContentType()[ CD ]
Line_5 $$ HttpEntity entity = execute.getEntity()-->Line_7 $$ Header contentType = entity.getContentType()[ FD ]
Line_2 $$ private String internalGet(URL get) throws IOException, ClientProtocolException, URISyntaxException -->Line_8 $$ HeaderElement[] elements = contentType.getElements()[ CD ]
Line_8 $$ HeaderElement[] elements = contentType.getElements()-->Line_8 $$ HeaderElement[] elements = contentType.getElements()[ CD ]
Line_7 $$ Header contentType = entity.getContentType()-->Line_8 $$ HeaderElement[] elements = contentType.getElements()[ FD ]
Line_2 $$ private String internalGet(URL get) throws IOException, ClientProtocolException, URISyntaxException -->Line_9 $$ HeaderElement headerElement = elements[0][ CD ]
Line_2 $$ private String internalGet(URL get) throws IOException, ClientProtocolException, URISyntaxException -->Line_10 $$ NameValuePair parameterByName = headerElement.getParameterByName("charset")[ CD ]
Line_10 $$ NameValuePair parameterByName = headerElement.getParameterByName("charset")-->Line_10 $$ NameValuePair parameterByName = headerElement.getParameterByName("charset")[ CD ]
Line_9 $$ HeaderElement headerElement = elements[0]-->Line_10 $$ NameValuePair parameterByName = headerElement.getParameterByName("charset")[ FD ]
Line_2 $$ private String internalGet(URL get) throws IOException, ClientProtocolException, URISyntaxException -->Line_11 $$ String encoding = "UTF-8"[ CD ]
Line_2 $$ private String internalGet(URL get) throws IOException, ClientProtocolException, URISyntaxException -->Line_12 $$ if (parameterByName != null)[ CD ]
Line_10 $$ NameValuePair parameterByName = headerElement.getParameterByName("charset")-->Line_12 $$ if (parameterByName != null)[ FD ]
Line_12 $$ if (parameterByName != null)-->Line_13 $$ encoding = parameterByName.getValue()[ CD ]
Line_11 $$ String encoding = "UTF-8"-->Line_13 $$ encoding = parameterByName.getValue()[ FD ]
Line_13 $$ encoding = parameterByName.getValue()-->Line_13 $$ encoding = parameterByName.getValue()[ FD ]
Line_13 $$ encoding = parameterByName.getValue()-->Line_13 $$ encoding = parameterByName.getValue()[ CD ]
Line_10 $$ NameValuePair parameterByName = headerElement.getParameterByName("charset")-->Line_13 $$ encoding = parameterByName.getValue()[ FD ]
Line_2 $$ private String internalGet(URL get) throws IOException, ClientProtocolException, URISyntaxException -->Line_14 $$ if (encoding != null && encoding.equals("ISO-8859-1"))[ CD ]
Line_11 $$ String encoding = "UTF-8"-->Line_14 $$ if (encoding != null && encoding.equals("ISO-8859-1"))[ FD ]
Line_13 $$ encoding = parameterByName.getValue()-->Line_14 $$ if (encoding != null && encoding.equals("ISO-8859-1"))[ FD ]
Line_14 $$ if (encoding != null && encoding.equals("ISO-8859-1"))-->Line_15 $$ encoding = "CP1252"[ CD ]
Line_11 $$ String encoding = "UTF-8"-->Line_15 $$ encoding = "CP1252"[ FD ]
Line_13 $$ encoding = parameterByName.getValue()-->Line_15 $$ encoding = "CP1252"[ FD ]
Line_15 $$ encoding = "CP1252"-->Line_15 $$ encoding = "CP1252"[ FD ]
Line_2 $$ private String internalGet(URL get) throws IOException, ClientProtocolException, URISyntaxException -->Line_16 $$ String content = IOUtils.toString(contentIS, encoding)[ CD ]
Line_16 $$ String content = IOUtils.toString(contentIS, encoding)-->Line_16 $$ String content = IOUtils.toString(contentIS, encoding)[ CD ]
Line_6 $$ InputStream contentIS = entity.getContent()-->Line_16 $$ String content = IOUtils.toString(contentIS, encoding)[ FD ]
Line_11 $$ String encoding = "UTF-8"-->Line_16 $$ String content = IOUtils.toString(contentIS, encoding)[ FD ]
Line_13 $$ encoding = parameterByName.getValue()-->Line_16 $$ String content = IOUtils.toString(contentIS, encoding)[ FD ]
Line_15 $$ encoding = "CP1252"-->Line_16 $$ String content = IOUtils.toString(contentIS, encoding)[ FD ]
Line_2 $$ private String internalGet(URL get) throws IOException, ClientProtocolException, URISyntaxException -->Line_17 $$ contentIS.close()[ CD ]
Line_6 $$ InputStream contentIS = entity.getContent()-->Line_17 $$ contentIS.close()[ FD ]
Line_2 $$ private String internalGet(URL get) throws IOException, ClientProtocolException, URISyntaxException -->Line_18 $$ return content[ CD ]
