Line_2 $$ public Connection open() throws ClassNotFoundException, SQLException, InstantiationException, IllegalAccessException --> Line_3 $$ Driver d = null [CD]
Line_2 $$ public Connection open() throws ClassNotFoundException, SQLException, InstantiationException, IllegalAccessException --> Line_4 $$ if (!registry.containsKey(drv)) [CD]
Line_4 $$ if (!registry.containsKey(drv)) --> Line_5 $$ Class c = (loader == null) ? Class.forName(drv) : Class.forName(drv, true, loader) [CD]
Line_4 $$ if (!registry.containsKey(drv)) --> Line_6 $$ d = (Driver) c.newInstance() [CD]
Line_3 $$ Driver d = null --> Line_6 $$ d = (Driver) c.newInstance() [FD]
Line_5 $$ Class c = (loader == null) ? Class.forName(drv) : Class.forName(drv, true, loader) --> Line_6 $$ d = (Driver) c.newInstance() [FD]
Line_4 $$ if (!registry.containsKey(drv)) --> Line_10 $$ d = (Driver) registry.get(drv) [CD]
Line_3 $$ Driver d = null --> Line_10 $$ d = (Driver) registry.get(drv) [FD]
Line_6 $$ d = (Driver) c.newInstance() --> Line_10 $$ d = (Driver) registry.get(drv) [FD]
Line_2 $$ public Connection open() throws ClassNotFoundException, SQLException, InstantiationException, IllegalAccessException --> Line_12 $$ Properties info = new Properties() [CD]
Line_2 $$ public Connection open() throws ClassNotFoundException, SQLException, InstantiationException, IllegalAccessException --> Line_15 $$ return d.connect(url, info); [CD]
Line_3 $$ Driver d = null --> Line_15 $$ return d.connect(url, info); [FD]
Line_6 $$ d = (Driver) c.newInstance() --> Line_15 $$ return d.connect(url, info); [FD]
Line_10 $$ d = (Driver) registry.get(drv) --> Line_15 $$ return d.connect(url, info); [FD]
Line_12 $$ Properties info = new Properties() --> Line_15 $$ return d.connect(url, info); [FD]
