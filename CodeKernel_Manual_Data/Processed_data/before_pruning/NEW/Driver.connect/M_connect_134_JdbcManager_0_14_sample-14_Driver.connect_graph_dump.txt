Line_0 $$ Entry-->Line_1 $$ public class A [ CD ]
Line_1 $$ public class A -->Line_2 $$ public static Connection connect(String url, String user, String password) throws SQLException [ CD ]
Line_2 $$ public static Connection connect(String url, String user, String password) throws SQLException -->Line_3 $$ for (int i = 0; i < vDrivers.size(); i++) [ CD ]
Line_2 $$ public static Connection connect(String url, String user, String password) throws SQLException -->Line_2 $$ public static Connection connect(String url, String user, String password) throws SQLException [ CD ]
Line_3 $$ for (int i = 0; i < vDrivers.size(); i++) -->Line_3 $$ for (int i = 0; i < vDrivers.size(); i++) [ CD ]
Line_3 $$ for (int i = 0; i < vDrivers.size(); i++) -->Line_3 $$ for (int i = 0; i < vDrivers.size(); i++) [ CD ]
Line_3 $$ for (int i = 0; i < vDrivers.size(); i++) -->Line_3 $$ for (int i = 0; i < vDrivers.size(); i++) [ CD ]
Line_3 $$ for (int i = 0; i < vDrivers.size(); i++) -->Line_3 $$ for (int i = 0; i < vDrivers.size(); i++) [ FD ]
Line_3 $$ for (int i = 0; i < vDrivers.size(); i++) -->Line_4 $$ JdbcDriver jdbcDrv = (JdbcDriver) vDrivers.elementAt(i)[ CD ]
Line_3 $$ for (int i = 0; i < vDrivers.size(); i++) -->Line_4 $$ JdbcDriver jdbcDrv = (JdbcDriver) vDrivers.elementAt(i)[ FD ]
Line_3 $$ for (int i = 0; i < vDrivers.size(); i++) -->Line_5 $$ if (jdbcDrv.isLoaded()) [ CD ]
Line_4 $$ JdbcDriver jdbcDrv = (JdbcDriver) vDrivers.elementAt(i)-->Line_5 $$ if (jdbcDrv.isLoaded()) [ FD ]
Line_5 $$ if (jdbcDrv.isLoaded()) -->Line_5 $$ if (jdbcDrv.isLoaded()) [ CD ]
Line_4 $$ JdbcDriver jdbcDrv = (JdbcDriver) vDrivers.elementAt(i)-->Line_5 $$ if (jdbcDrv.isLoaded()) [ FD ]
Line_5 $$ if (jdbcDrv.isLoaded()) -->Line_6 $$ Driver drv = jdbcDrv.getDriver()[ CD ]
Line_6 $$ Driver drv = jdbcDrv.getDriver()-->Line_6 $$ Driver drv = jdbcDrv.getDriver()[ CD ]
Line_4 $$ JdbcDriver jdbcDrv = (JdbcDriver) vDrivers.elementAt(i)-->Line_6 $$ Driver drv = jdbcDrv.getDriver()[ FD ]
Line_5 $$ if (jdbcDrv.isLoaded()) -->Line_7 $$ Properties p = new Properties()[ CD ]
Line_5 $$ if (jdbcDrv.isLoaded()) -->Line_8 $$ p.setProperty("user", user)[ CD ]
Line_7 $$ Properties p = new Properties()-->Line_8 $$ p.setProperty("user", user)[ FD ]
Line_2 $$ public static Connection connect(String url, String user, String password) throws SQLException -->Line_8 $$ p.setProperty("user", user)[ FD ]
Line_5 $$ if (jdbcDrv.isLoaded()) -->Line_9 $$ p.setProperty("password", password)[ CD ]
Line_7 $$ Properties p = new Properties()-->Line_9 $$ p.setProperty("password", password)[ FD ]
Line_2 $$ public static Connection connect(String url, String user, String password) throws SQLException -->Line_9 $$ p.setProperty("password", password)[ FD ]
Line_5 $$ if (jdbcDrv.isLoaded()) -->Line_10 $$ if (drv.getClass().getName().indexOf("oracle.") > -1)[ CD ]
Line_6 $$ Driver drv = jdbcDrv.getDriver()-->Line_10 $$ if (drv.getClass().getName().indexOf("oracle.") > -1)[ FD ]
Line_10 $$ if (drv.getClass().getName().indexOf("oracle.") > -1)-->Line_10 $$ p.setProperty("remarksReporting", "true")[ CD ]
Line_7 $$ Properties p = new Properties()-->Line_10 $$ p.setProperty("remarksReporting", "true")[ FD ]
Line_5 $$ if (jdbcDrv.isLoaded()) -->Line_11 $$ Connection sqlConn = drv.connect(url, p)[ CD ]
Line_11 $$ Connection sqlConn = drv.connect(url, p)-->Line_11 $$ Connection sqlConn = drv.connect(url, p)[ CD ]
Line_6 $$ Driver drv = jdbcDrv.getDriver()-->Line_11 $$ Connection sqlConn = drv.connect(url, p)[ FD ]
Line_2 $$ public static Connection connect(String url, String user, String password) throws SQLException -->Line_11 $$ Connection sqlConn = drv.connect(url, p)[ FD ]
Line_7 $$ Properties p = new Properties()-->Line_11 $$ Connection sqlConn = drv.connect(url, p)[ FD ]
Line_5 $$ if (jdbcDrv.isLoaded()) -->Line_12 $$ if (sqlConn != null)[ CD ]
Line_11 $$ Connection sqlConn = drv.connect(url, p)-->Line_12 $$ if (sqlConn != null)[ FD ]
Line_11 $$ Connection sqlConn = drv.connect(url, p)-->Line_12 $$ if (sqlConn != null)[ FD ]
Line_12 $$ if (sqlConn != null)-->Line_12 $$ return sqlConn[ CD ]
Line_2 $$ public static Connection connect(String url, String user, String password) throws SQLException -->Line_15 $$ return null[ CD ]
Line_3 $$ for (int i = 0; i < vDrivers.size(); i++) -->Line_3 $$ for (int i = 0; i < vDrivers.size(); i++) [ FD ]
Line_3 $$ for (int i = 0; i < vDrivers.size(); i++) -->Line_3 $$ for (int i = 0; i < vDrivers.size(); i++) [ FD ]
Line_3 $$ for (int i = 0; i < vDrivers.size(); i++) -->Line_3 $$ for (int i = 0; i < vDrivers.size(); i++) [ FD ]
Line_3 $$ for (int i = 0; i < vDrivers.size(); i++) -->Line_4 $$ JdbcDriver jdbcDrv = (JdbcDriver) vDrivers.elementAt(i)[ FD ]
Line_4 $$ JdbcDriver jdbcDrv = (JdbcDriver) vDrivers.elementAt(i)-->Line_5 $$ if (jdbcDrv.isLoaded()) [ FD ]
Line_4 $$ JdbcDriver jdbcDrv = (JdbcDriver) vDrivers.elementAt(i)-->Line_5 $$ if (jdbcDrv.isLoaded()) [ FD ]
Line_4 $$ JdbcDriver jdbcDrv = (JdbcDriver) vDrivers.elementAt(i)-->Line_6 $$ Driver drv = jdbcDrv.getDriver()[ FD ]
Line_7 $$ Properties p = new Properties()-->Line_8 $$ p.setProperty("user", user)[ FD ]
Line_7 $$ Properties p = new Properties()-->Line_9 $$ p.setProperty("password", password)[ FD ]
Line_6 $$ Driver drv = jdbcDrv.getDriver()-->Line_10 $$ if (drv.getClass().getName().indexOf("oracle.") > -1)[ FD ]
Line_7 $$ Properties p = new Properties()-->Line_10 $$ p.setProperty("remarksReporting", "true")[ FD ]
Line_6 $$ Driver drv = jdbcDrv.getDriver()-->Line_11 $$ Connection sqlConn = drv.connect(url, p)[ FD ]
Line_7 $$ Properties p = new Properties()-->Line_11 $$ Connection sqlConn = drv.connect(url, p)[ FD ]
Line_11 $$ Connection sqlConn = drv.connect(url, p)-->Line_12 $$ if (sqlConn != null)[ FD ]
Line_11 $$ Connection sqlConn = drv.connect(url, p)-->Line_12 $$ if (sqlConn != null)[ FD ]
