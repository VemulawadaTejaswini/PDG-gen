Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public List<FileInfo> readFiles(final String path) throws IOException, InstantiationException, IllegalAccessException [ CD ]
Line_2 $$ public List<FileInfo> readFiles(final String path) throws IOException, InstantiationException, IllegalAccessException -->Line_4 $$ log.debug("Scanning directory: " + path)[ CD ]
Line_2 $$ public List<FileInfo> readFiles(final String path) throws IOException, InstantiationException, IllegalAccessException -->Line_5 $$ final File directory = new File(path)[ CD ]
Line_2 $$ public List<FileInfo> readFiles(final String path) throws IOException, InstantiationException, IllegalAccessException -->Line_6 $$ final Collection<File> allFiles = getAllFiles(directory)[ CD ]
Line_6 $$ final Collection<File> allFiles = getAllFiles(directory)-->Line_6 $$ final Collection<File> allFiles = getAllFiles(directory)[ CD ]
Line_5 $$ final File directory = new File(path)-->Line_6 $$ final Collection<File> allFiles = getAllFiles(directory)[ FD ]
Line_2 $$ public List<FileInfo> readFiles(final String path) throws IOException, InstantiationException, IllegalAccessException -->Line_7 $$ if (allFiles.isEmpty()) [ CD ]
Line_6 $$ final Collection<File> allFiles = getAllFiles(directory)-->Line_7 $$ if (allFiles.isEmpty()) [ FD ]
Line_7 $$ if (allFiles.isEmpty()) -->Line_7 $$ if (allFiles.isEmpty()) [ CD ]
Line_6 $$ final Collection<File> allFiles = getAllFiles(directory)-->Line_7 $$ if (allFiles.isEmpty()) [ FD ]
Line_7 $$ if (allFiles.isEmpty()) -->Line_8 $$ log.warn("No files found in directory: " + path)[ CD ]
Line_2 $$ public List<FileInfo> readFiles(final String path) throws IOException, InstantiationException, IllegalAccessException -->Line_10 $$ final List<FileInfo> allFilesInfo = new ArrayList<FileInfo>(allFiles.size())[ CD ]
Line_6 $$ final Collection<File> allFiles = getAllFiles(directory)-->Line_10 $$ final List<FileInfo> allFilesInfo = new ArrayList<FileInfo>(allFiles.size())[ FD ]
Line_2 $$ public List<FileInfo> readFiles(final String path) throws IOException, InstantiationException, IllegalAccessException -->Line_11 $$ final String canonicalBaseDirectory = directory.getCanonicalPath()[ CD ]
Line_11 $$ final String canonicalBaseDirectory = directory.getCanonicalPath()-->Line_11 $$ final String canonicalBaseDirectory = directory.getCanonicalPath()[ CD ]
Line_5 $$ final File directory = new File(path)-->Line_11 $$ final String canonicalBaseDirectory = directory.getCanonicalPath()[ FD ]
Line_14 $$ final String canonicalFilePath = FilenameUtils.getFullPathNoEndSeparator(file.getCanonicalPath())-->Line_14 $$ final String canonicalFilePath = FilenameUtils.getFullPathNoEndSeparator(file.getCanonicalPath())[ CD ]
Line_12 $$ for (final File file : allFiles) -->Line_14 $$ final String canonicalFilePath = FilenameUtils.getFullPathNoEndSeparator(file.getCanonicalPath())[ FD ]
Line_15 $$ final String subDirectory = FilenameUtils.normalize(StringUtils.replaceOnce(canonicalFilePath, canonicalBaseDirectory, "") + pathSeparator)-->Line_15 $$ final String subDirectory = FilenameUtils.normalize(StringUtils.replaceOnce(canonicalFilePath, canonicalBaseDirectory, "") + pathSeparator)[ CD ]
Line_14 $$ final String canonicalFilePath = FilenameUtils.getFullPathNoEndSeparator(file.getCanonicalPath())-->Line_15 $$ final String subDirectory = FilenameUtils.normalize(StringUtils.replaceOnce(canonicalFilePath, canonicalBaseDirectory, "") + pathSeparator)[ FD ]
Line_11 $$ final String canonicalBaseDirectory = directory.getCanonicalPath()-->Line_15 $$ final String subDirectory = FilenameUtils.normalize(StringUtils.replaceOnce(canonicalFilePath, canonicalBaseDirectory, "") + pathSeparator)[ FD ]
Line_13 $$ final FileInfo fileInfo = new FileInfo(file)-->Line_17 $$ fileInfo.setRelativeSubDirectory(subDirectory)[ FD ]
Line_15 $$ final String subDirectory = FilenameUtils.normalize(StringUtils.replaceOnce(canonicalFilePath, canonicalBaseDirectory, "") + pathSeparator)-->Line_17 $$ fileInfo.setRelativeSubDirectory(subDirectory)[ FD ]
Line_10 $$ final List<FileInfo> allFilesInfo = new ArrayList<FileInfo>(allFiles.size())-->Line_18 $$ allFilesInfo.add(fileInfo)[ FD ]
Line_13 $$ final FileInfo fileInfo = new FileInfo(file)-->Line_18 $$ allFilesInfo.add(fileInfo)[ FD ]
Line_2 $$ public List<FileInfo> readFiles(final String path) throws IOException, InstantiationException, IllegalAccessException -->Line_20 $$ return allFilesInfo[ CD ]
