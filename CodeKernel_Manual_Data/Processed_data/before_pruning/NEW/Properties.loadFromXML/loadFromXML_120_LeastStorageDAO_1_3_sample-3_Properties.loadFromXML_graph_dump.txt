Line_0 $$ Entry-->Line_1 $$ public class A [ CD ]
Line_1 $$ public class A -->Line_2 $$ public static DBInfo[] getAllDBInfo() [ CD ]
Line_2 $$ public static DBInfo[] getAllDBInfo() -->Line_3 $$ int STORE_ID = 1[ CD ]
Line_2 $$ public static DBInfo[] getAllDBInfo() -->Line_4 $$ int TBL = 2[ CD ]
Line_2 $$ public static DBInfo[] getAllDBInfo() -->Line_5 $$ int MAX_STORAGE = 3[ CD ]
Line_2 $$ public static DBInfo[] getAllDBInfo() -->Line_6 $$ int CONCURRENT_STORAGE = 4[ CD ]
Line_2 $$ public static DBInfo[] getAllDBInfo() -->Line_7 $$ int CONCURRENT_WX = 5[ CD ]
Line_2 $$ public static DBInfo[] getAllDBInfo() -->Line_8 $$ int MAX_WX = 6[ CD ]
Line_2 $$ public static DBInfo[] getAllDBInfo() -->Line_9 $$ int CONFIG_FILE = 7[ CD ]
Line_2 $$ public static DBInfo[] getAllDBInfo() -->Line_10 $$ int BLOCK_SIZE = 8[ CD ]
Line_2 $$ public static DBInfo[] getAllDBInfo() -->Line_11 $$ int DB_CONFIG = 9[ CD ]
Line_2 $$ public static DBInfo[] getAllDBInfo() -->Line_12 $$ Connection conn = null[ CD ]
Line_2 $$ public static DBInfo[] getAllDBInfo() -->Line_13 $$ ResultSet rs = null[ CD ]
Line_2 $$ public static DBInfo[] getAllDBInfo() -->Line_14 $$ PreparedStatement ps = null[ CD ]
Line_2 $$ public static DBInfo[] getAllDBInfo() -->Line_15 $$ Collection<DBInfo> array = new ArrayList<DBInfo>()[ CD ]
Line_2 $$ public static DBInfo[] getAllDBInfo() -->Line_16 $$ DBInfo dbinfo = null[ CD ]
Line_2 $$ public static DBInfo[] getAllDBInfo() -->Line_17 $$ InputStream in = null[ CD ]
Line_2 $$ public static DBInfo[] getAllDBInfo() -->Line_18 $$ Properties prop = null[ CD ]
Line_12 $$ Connection conn = null-->Line_20 $$ conn = DBRegistryManager.getConnection()[ FD ]
Line_20 $$ conn = DBRegistryManager.getConnection()-->Line_20 $$ conn = DBRegistryManager.getConnection()[ FD ]
Line_20 $$ conn = DBRegistryManager.getConnection()-->Line_20 $$ conn = DBRegistryManager.getConnection()[ CD ]
Line_14 $$ PreparedStatement ps = null-->Line_21 $$ ps = conn.prepareStatement("select STORE_ID, TBL, MAX_STORAGE, CURRENT_STORAGE, CONCURRENT_WRITE, MAX_CONCURRENT_WRITE, " + "CONFIG_FILE, BLOCK_SIZE, DB_CONFIG from db_info where " + "STATUS=? ")[ FD ]
Line_21 $$ ps = conn.prepareStatement("select STORE_ID, TBL, MAX_STORAGE, CURRENT_STORAGE, CONCURRENT_WRITE, MAX_CONCURRENT_WRITE, " + "CONFIG_FILE, BLOCK_SIZE, DB_CONFIG from db_info where " + "STATUS=? ")-->Line_21 $$ ps = conn.prepareStatement("select STORE_ID, TBL, MAX_STORAGE, CURRENT_STORAGE, CONCURRENT_WRITE, MAX_CONCURRENT_WRITE, " + "CONFIG_FILE, BLOCK_SIZE, DB_CONFIG from db_info where " + "STATUS=? ")[ FD ]
Line_21 $$ ps = conn.prepareStatement("select STORE_ID, TBL, MAX_STORAGE, CURRENT_STORAGE, CONCURRENT_WRITE, MAX_CONCURRENT_WRITE, " + "CONFIG_FILE, BLOCK_SIZE, DB_CONFIG from db_info where " + "STATUS=? ")-->Line_21 $$ ps = conn.prepareStatement("select STORE_ID, TBL, MAX_STORAGE, CURRENT_STORAGE, CONCURRENT_WRITE, MAX_CONCURRENT_WRITE, " + "CONFIG_FILE, BLOCK_SIZE, DB_CONFIG from db_info where " + "STATUS=? ")[ CD ]
Line_12 $$ Connection conn = null-->Line_21 $$ ps = conn.prepareStatement("select STORE_ID, TBL, MAX_STORAGE, CURRENT_STORAGE, CONCURRENT_WRITE, MAX_CONCURRENT_WRITE, " + "CONFIG_FILE, BLOCK_SIZE, DB_CONFIG from db_info where " + "STATUS=? ")[ FD ]
Line_20 $$ conn = DBRegistryManager.getConnection()-->Line_21 $$ ps = conn.prepareStatement("select STORE_ID, TBL, MAX_STORAGE, CURRENT_STORAGE, CONCURRENT_WRITE, MAX_CONCURRENT_WRITE, " + "CONFIG_FILE, BLOCK_SIZE, DB_CONFIG from db_info where " + "STATUS=? ")[ FD ]
Line_14 $$ PreparedStatement ps = null-->Line_22 $$ ps.setString(1, DB_READY)[ FD ]
Line_21 $$ ps = conn.prepareStatement("select STORE_ID, TBL, MAX_STORAGE, CURRENT_STORAGE, CONCURRENT_WRITE, MAX_CONCURRENT_WRITE, " + "CONFIG_FILE, BLOCK_SIZE, DB_CONFIG from db_info where " + "STATUS=? ")-->Line_22 $$ ps.setString(1, DB_READY)[ FD ]
Line_13 $$ ResultSet rs = null-->Line_23 $$ rs = ps.executeQuery()[ FD ]
Line_23 $$ rs = ps.executeQuery()-->Line_23 $$ rs = ps.executeQuery()[ FD ]
Line_23 $$ rs = ps.executeQuery()-->Line_23 $$ rs = ps.executeQuery()[ CD ]
Line_14 $$ PreparedStatement ps = null-->Line_23 $$ rs = ps.executeQuery()[ FD ]
Line_21 $$ ps = conn.prepareStatement("select STORE_ID, TBL, MAX_STORAGE, CURRENT_STORAGE, CONCURRENT_WRITE, MAX_CONCURRENT_WRITE, " + "CONFIG_FILE, BLOCK_SIZE, DB_CONFIG from db_info where " + "STATUS=? ")-->Line_23 $$ rs = ps.executeQuery()[ FD ]
Line_24 $$ while (rs.next()) -->Line_24 $$ while (rs.next()) [ CD ]
Line_13 $$ ResultSet rs = null-->Line_24 $$ while (rs.next()) [ FD ]
Line_23 $$ rs = ps.executeQuery()-->Line_24 $$ while (rs.next()) [ FD ]
Line_24 $$ while (rs.next()) -->Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))[ CD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))[ FD ]
Line_13 $$ ResultSet rs = null-->Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))[ FD ]
Line_23 $$ rs = ps.executeQuery()-->Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))[ FD ]
Line_3 $$ int STORE_ID = 1-->Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))[ FD ]
Line_24 $$ while (rs.next()) -->Line_26 $$ Logger.logDebug(LeastStorageDAO.class, "Get from dbregistry " + rs.getString(STORE_ID))[ CD ]
Line_13 $$ ResultSet rs = null-->Line_26 $$ Logger.logDebug(LeastStorageDAO.class, "Get from dbregistry " + rs.getString(STORE_ID))[ FD ]
Line_23 $$ rs = ps.executeQuery()-->Line_26 $$ Logger.logDebug(LeastStorageDAO.class, "Get from dbregistry " + rs.getString(STORE_ID))[ FD ]
Line_3 $$ int STORE_ID = 1-->Line_26 $$ Logger.logDebug(LeastStorageDAO.class, "Get from dbregistry " + rs.getString(STORE_ID))[ FD ]
Line_24 $$ while (rs.next()) -->Line_27 $$ dbinfo.setTbl(rs.getString(TBL))[ CD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_27 $$ dbinfo.setTbl(rs.getString(TBL))[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_27 $$ dbinfo.setTbl(rs.getString(TBL))[ FD ]
Line_13 $$ ResultSet rs = null-->Line_27 $$ dbinfo.setTbl(rs.getString(TBL))[ FD ]
Line_23 $$ rs = ps.executeQuery()-->Line_27 $$ dbinfo.setTbl(rs.getString(TBL))[ FD ]
Line_4 $$ int TBL = 2-->Line_27 $$ dbinfo.setTbl(rs.getString(TBL))[ FD ]
Line_24 $$ while (rs.next()) -->Line_28 $$ dbinfo.setMaxStorage(rs.getDouble(MAX_STORAGE))[ CD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_28 $$ dbinfo.setMaxStorage(rs.getDouble(MAX_STORAGE))[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_28 $$ dbinfo.setMaxStorage(rs.getDouble(MAX_STORAGE))[ FD ]
Line_13 $$ ResultSet rs = null-->Line_28 $$ dbinfo.setMaxStorage(rs.getDouble(MAX_STORAGE))[ FD ]
Line_23 $$ rs = ps.executeQuery()-->Line_28 $$ dbinfo.setMaxStorage(rs.getDouble(MAX_STORAGE))[ FD ]
Line_5 $$ int MAX_STORAGE = 3-->Line_28 $$ dbinfo.setMaxStorage(rs.getDouble(MAX_STORAGE))[ FD ]
Line_24 $$ while (rs.next()) -->Line_29 $$ dbinfo.setCurrentStorage(rs.getDouble(CONCURRENT_STORAGE))[ CD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_29 $$ dbinfo.setCurrentStorage(rs.getDouble(CONCURRENT_STORAGE))[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_29 $$ dbinfo.setCurrentStorage(rs.getDouble(CONCURRENT_STORAGE))[ FD ]
Line_13 $$ ResultSet rs = null-->Line_29 $$ dbinfo.setCurrentStorage(rs.getDouble(CONCURRENT_STORAGE))[ FD ]
Line_23 $$ rs = ps.executeQuery()-->Line_29 $$ dbinfo.setCurrentStorage(rs.getDouble(CONCURRENT_STORAGE))[ FD ]
Line_6 $$ int CONCURRENT_STORAGE = 4-->Line_29 $$ dbinfo.setCurrentStorage(rs.getDouble(CONCURRENT_STORAGE))[ FD ]
Line_24 $$ while (rs.next()) -->Line_30 $$ dbinfo.setConcurrentWrite(rs.getInt(CONCURRENT_WX))[ CD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_30 $$ dbinfo.setConcurrentWrite(rs.getInt(CONCURRENT_WX))[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_30 $$ dbinfo.setConcurrentWrite(rs.getInt(CONCURRENT_WX))[ FD ]
Line_13 $$ ResultSet rs = null-->Line_30 $$ dbinfo.setConcurrentWrite(rs.getInt(CONCURRENT_WX))[ FD ]
Line_23 $$ rs = ps.executeQuery()-->Line_30 $$ dbinfo.setConcurrentWrite(rs.getInt(CONCURRENT_WX))[ FD ]
Line_7 $$ int CONCURRENT_WX = 5-->Line_30 $$ dbinfo.setConcurrentWrite(rs.getInt(CONCURRENT_WX))[ FD ]
Line_24 $$ while (rs.next()) -->Line_31 $$ dbinfo.setMaxConcurrentWrite(rs.getInt(MAX_WX))[ CD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_31 $$ dbinfo.setMaxConcurrentWrite(rs.getInt(MAX_WX))[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_31 $$ dbinfo.setMaxConcurrentWrite(rs.getInt(MAX_WX))[ FD ]
Line_13 $$ ResultSet rs = null-->Line_31 $$ dbinfo.setMaxConcurrentWrite(rs.getInt(MAX_WX))[ FD ]
Line_23 $$ rs = ps.executeQuery()-->Line_31 $$ dbinfo.setMaxConcurrentWrite(rs.getInt(MAX_WX))[ FD ]
Line_8 $$ int MAX_WX = 6-->Line_31 $$ dbinfo.setMaxConcurrentWrite(rs.getInt(MAX_WX))[ FD ]
Line_24 $$ while (rs.next()) -->Line_32 $$ dbinfo.setConfigFile(rs.getString(CONFIG_FILE))[ CD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_32 $$ dbinfo.setConfigFile(rs.getString(CONFIG_FILE))[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_32 $$ dbinfo.setConfigFile(rs.getString(CONFIG_FILE))[ FD ]
Line_13 $$ ResultSet rs = null-->Line_32 $$ dbinfo.setConfigFile(rs.getString(CONFIG_FILE))[ FD ]
Line_23 $$ rs = ps.executeQuery()-->Line_32 $$ dbinfo.setConfigFile(rs.getString(CONFIG_FILE))[ FD ]
Line_9 $$ int CONFIG_FILE = 7-->Line_32 $$ dbinfo.setConfigFile(rs.getString(CONFIG_FILE))[ FD ]
Line_24 $$ while (rs.next()) -->Line_33 $$ dbinfo.setBlockSize(rs.getInt(BLOCK_SIZE))[ CD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_33 $$ dbinfo.setBlockSize(rs.getInt(BLOCK_SIZE))[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_33 $$ dbinfo.setBlockSize(rs.getInt(BLOCK_SIZE))[ FD ]
Line_13 $$ ResultSet rs = null-->Line_33 $$ dbinfo.setBlockSize(rs.getInt(BLOCK_SIZE))[ FD ]
Line_23 $$ rs = ps.executeQuery()-->Line_33 $$ dbinfo.setBlockSize(rs.getInt(BLOCK_SIZE))[ FD ]
Line_10 $$ int BLOCK_SIZE = 8-->Line_33 $$ dbinfo.setBlockSize(rs.getInt(BLOCK_SIZE))[ FD ]
Line_24 $$ while (rs.next()) -->Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)[ CD ]
Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)[ FD ]
Line_17 $$ InputStream in = null-->Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)[ FD ]
Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)[ CD ]
Line_13 $$ ResultSet rs = null-->Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)[ FD ]
Line_23 $$ rs = ps.executeQuery()-->Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)[ FD ]
Line_11 $$ int DB_CONFIG = 9-->Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)[ FD ]
Line_24 $$ while (rs.next()) -->Line_35 $$ if (in != null) [ CD ]
Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_35 $$ if (in != null) [ FD ]
Line_17 $$ InputStream in = null-->Line_35 $$ if (in != null) [ FD ]
Line_35 $$ if (in != null) -->Line_36 $$ if (in.available() > 0) [ CD ]
Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_36 $$ if (in.available() > 0) [ FD ]
Line_17 $$ InputStream in = null-->Line_36 $$ if (in.available() > 0) [ FD ]
Line_36 $$ if (in.available() > 0) -->Line_37 $$ prop = new Properties()[ CD ]
Line_37 $$ prop = new Properties()-->Line_37 $$ prop = new Properties()[ FD ]
Line_18 $$ Properties prop = null-->Line_37 $$ prop = new Properties()[ FD ]
Line_36 $$ if (in.available() > 0) -->Line_38 $$ prop.loadFromXML(rs.getBinaryStream(DB_CONFIG))[ CD ]
Line_37 $$ prop = new Properties()-->Line_38 $$ prop.loadFromXML(rs.getBinaryStream(DB_CONFIG))[ FD ]
Line_18 $$ Properties prop = null-->Line_38 $$ prop.loadFromXML(rs.getBinaryStream(DB_CONFIG))[ FD ]
Line_13 $$ ResultSet rs = null-->Line_38 $$ prop.loadFromXML(rs.getBinaryStream(DB_CONFIG))[ FD ]
Line_23 $$ rs = ps.executeQuery()-->Line_38 $$ prop.loadFromXML(rs.getBinaryStream(DB_CONFIG))[ FD ]
Line_11 $$ int DB_CONFIG = 9-->Line_38 $$ prop.loadFromXML(rs.getBinaryStream(DB_CONFIG))[ FD ]
Line_36 $$ if (in.available() > 0) -->Line_39 $$ dbinfo.setDbcfg(prop)[ CD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_39 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_39 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_37 $$ prop = new Properties()-->Line_39 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_18 $$ Properties prop = null-->Line_39 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_36 $$ if (in.available() > 0) -->Line_40 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ CD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_40 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_40 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ FD ]
Line_37 $$ prop = new Properties()-->Line_40 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ FD ]
Line_18 $$ Properties prop = null-->Line_40 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ FD ]
Line_35 $$ if (in != null) -->Line_42 $$ in.close()[ CD ]
Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_42 $$ in.close()[ FD ]
Line_17 $$ InputStream in = null-->Line_42 $$ in.close()[ FD ]
Line_24 $$ while (rs.next()) -->Line_44 $$ if (dbinfo.getDbcfg() == null) [ CD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_44 $$ if (dbinfo.getDbcfg() == null) [ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_44 $$ if (dbinfo.getDbcfg() == null) [ FD ]
Line_44 $$ if (dbinfo.getDbcfg() == null) -->Line_45 $$ prop = new Properties()[ CD ]
Line_37 $$ prop = new Properties()-->Line_45 $$ prop = new Properties()[ FD ]
Line_45 $$ prop = new Properties()-->Line_45 $$ prop = new Properties()[ FD ]
Line_18 $$ Properties prop = null-->Line_45 $$ prop = new Properties()[ FD ]
Line_44 $$ if (dbinfo.getDbcfg() == null) -->Line_46 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())[ CD ]
Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_46 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())[ FD ]
Line_46 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_46 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())[ FD ]
Line_17 $$ InputStream in = null-->Line_46 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())[ FD ]
Line_46 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_46 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())[ CD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_46 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_46 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())[ FD ]
Line_44 $$ if (dbinfo.getDbcfg() == null) -->Line_47 $$ if (in != null) [ CD ]
Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_47 $$ if (in != null) [ FD ]
Line_46 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_47 $$ if (in != null) [ FD ]
Line_17 $$ InputStream in = null-->Line_47 $$ if (in != null) [ FD ]
Line_47 $$ if (in != null) -->Line_48 $$ prop.load(in)[ CD ]
Line_37 $$ prop = new Properties()-->Line_48 $$ prop.load(in)[ FD ]
Line_45 $$ prop = new Properties()-->Line_48 $$ prop.load(in)[ FD ]
Line_18 $$ Properties prop = null-->Line_48 $$ prop.load(in)[ FD ]
Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_48 $$ prop.load(in)[ FD ]
Line_46 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_48 $$ prop.load(in)[ FD ]
Line_17 $$ InputStream in = null-->Line_48 $$ prop.load(in)[ FD ]
Line_44 $$ if (dbinfo.getDbcfg() == null) -->Line_50 $$ in.close()[ CD ]
Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_50 $$ in.close()[ FD ]
Line_46 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_50 $$ in.close()[ FD ]
Line_17 $$ InputStream in = null-->Line_50 $$ in.close()[ FD ]
Line_44 $$ if (dbinfo.getDbcfg() == null) -->Line_51 $$ StringWriter writer = new StringWriter()[ CD ]
Line_44 $$ if (dbinfo.getDbcfg() == null) -->Line_52 $$ OutputStream out = new XMLOutputStream()[ CD ]
Line_44 $$ if (dbinfo.getDbcfg() == null) -->Line_53 $$ prop.storeToXML(out, "STORE ID " + dbinfo.getStoreId(), "UTF-8")[ CD ]
Line_37 $$ prop = new Properties()-->Line_53 $$ prop.storeToXML(out, "STORE ID " + dbinfo.getStoreId(), "UTF-8")[ FD ]
Line_45 $$ prop = new Properties()-->Line_53 $$ prop.storeToXML(out, "STORE ID " + dbinfo.getStoreId(), "UTF-8")[ FD ]
Line_18 $$ Properties prop = null-->Line_53 $$ prop.storeToXML(out, "STORE ID " + dbinfo.getStoreId(), "UTF-8")[ FD ]
Line_52 $$ OutputStream out = new XMLOutputStream()-->Line_53 $$ prop.storeToXML(out, "STORE ID " + dbinfo.getStoreId(), "UTF-8")[ FD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_53 $$ prop.storeToXML(out, "STORE ID " + dbinfo.getStoreId(), "UTF-8")[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_53 $$ prop.storeToXML(out, "STORE ID " + dbinfo.getStoreId(), "UTF-8")[ FD ]
Line_44 $$ if (dbinfo.getDbcfg() == null) -->Line_54 $$ dbinfo.setDbcfg(prop)[ CD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_54 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_54 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_37 $$ prop = new Properties()-->Line_54 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_45 $$ prop = new Properties()-->Line_54 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_18 $$ Properties prop = null-->Line_54 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_44 $$ if (dbinfo.getDbcfg() == null) -->Line_55 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ CD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_55 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_55 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ FD ]
Line_37 $$ prop = new Properties()-->Line_55 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ FD ]
Line_45 $$ prop = new Properties()-->Line_55 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ FD ]
Line_18 $$ Properties prop = null-->Line_55 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ FD ]
Line_44 $$ if (dbinfo.getDbcfg() == null) -->Line_56 $$ DBRegistryDAO.updateDBConfig(dbinfo.getStoreId(), out.toString(), prop.getProperty("DB_URL"), prop.getProperty("DB_URL"), conn)[ CD ]
Line_12 $$ Connection conn = null-->Line_56 $$ DBRegistryDAO.updateDBConfig(dbinfo.getStoreId(), out.toString(), prop.getProperty("DB_URL"), prop.getProperty("DB_URL"), conn)[ FD ]
Line_20 $$ conn = DBRegistryManager.getConnection()-->Line_56 $$ DBRegistryDAO.updateDBConfig(dbinfo.getStoreId(), out.toString(), prop.getProperty("DB_URL"), prop.getProperty("DB_URL"), conn)[ FD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_56 $$ DBRegistryDAO.updateDBConfig(dbinfo.getStoreId(), out.toString(), prop.getProperty("DB_URL"), prop.getProperty("DB_URL"), conn)[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_56 $$ DBRegistryDAO.updateDBConfig(dbinfo.getStoreId(), out.toString(), prop.getProperty("DB_URL"), prop.getProperty("DB_URL"), conn)[ FD ]
Line_52 $$ OutputStream out = new XMLOutputStream()-->Line_56 $$ DBRegistryDAO.updateDBConfig(dbinfo.getStoreId(), out.toString(), prop.getProperty("DB_URL"), prop.getProperty("DB_URL"), conn)[ FD ]
Line_37 $$ prop = new Properties()-->Line_56 $$ DBRegistryDAO.updateDBConfig(dbinfo.getStoreId(), out.toString(), prop.getProperty("DB_URL"), prop.getProperty("DB_URL"), conn)[ FD ]
Line_45 $$ prop = new Properties()-->Line_56 $$ DBRegistryDAO.updateDBConfig(dbinfo.getStoreId(), out.toString(), prop.getProperty("DB_URL"), prop.getProperty("DB_URL"), conn)[ FD ]
Line_18 $$ Properties prop = null-->Line_56 $$ DBRegistryDAO.updateDBConfig(dbinfo.getStoreId(), out.toString(), prop.getProperty("DB_URL"), prop.getProperty("DB_URL"), conn)[ FD ]
Line_37 $$ prop = new Properties()-->Line_56 $$ DBRegistryDAO.updateDBConfig(dbinfo.getStoreId(), out.toString(), prop.getProperty("DB_URL"), prop.getProperty("DB_URL"), conn)[ FD ]
Line_45 $$ prop = new Properties()-->Line_56 $$ DBRegistryDAO.updateDBConfig(dbinfo.getStoreId(), out.toString(), prop.getProperty("DB_URL"), prop.getProperty("DB_URL"), conn)[ FD ]
Line_18 $$ Properties prop = null-->Line_56 $$ DBRegistryDAO.updateDBConfig(dbinfo.getStoreId(), out.toString(), prop.getProperty("DB_URL"), prop.getProperty("DB_URL"), conn)[ FD ]
Line_44 $$ if (dbinfo.getDbcfg() == null) -->Line_57 $$ in.close()[ CD ]
Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_57 $$ in.close()[ FD ]
Line_46 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_57 $$ in.close()[ FD ]
Line_17 $$ InputStream in = null-->Line_57 $$ in.close()[ FD ]
Line_44 $$ if (dbinfo.getDbcfg() == null) -->Line_58 $$ out.close()[ CD ]
Line_52 $$ OutputStream out = new XMLOutputStream()-->Line_58 $$ out.close()[ FD ]
Line_24 $$ while (rs.next()) -->Line_60 $$ array.add(dbinfo)[ CD ]
Line_15 $$ Collection<DBInfo> array = new ArrayList<DBInfo>()-->Line_60 $$ array.add(dbinfo)[ FD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_60 $$ array.add(dbinfo)[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_60 $$ array.add(dbinfo)[ FD ]
Line_15 $$ Collection<DBInfo> array = new ArrayList<DBInfo>()-->Line_62 $$ return (DBInfo[]) array.toArray(new DBInfo[array.size()])[ FD ]
Line_15 $$ Collection<DBInfo> array = new ArrayList<DBInfo>()-->Line_62 $$ return (DBInfo[]) array.toArray(new DBInfo[array.size()])[ FD ]
Line_14 $$ PreparedStatement ps = null-->Line_68 $$ if (ps != null)[ FD ]
Line_21 $$ ps = conn.prepareStatement("select STORE_ID, TBL, MAX_STORAGE, CURRENT_STORAGE, CONCURRENT_WRITE, MAX_CONCURRENT_WRITE, " + "CONFIG_FILE, BLOCK_SIZE, DB_CONFIG from db_info where " + "STATUS=? ")-->Line_68 $$ if (ps != null)[ FD ]
Line_68 $$ if (ps != null)-->Line_68 $$ ps.close()[ CD ]
Line_14 $$ PreparedStatement ps = null-->Line_68 $$ ps.close()[ FD ]
Line_21 $$ ps = conn.prepareStatement("select STORE_ID, TBL, MAX_STORAGE, CURRENT_STORAGE, CONCURRENT_WRITE, MAX_CONCURRENT_WRITE, " + "CONFIG_FILE, BLOCK_SIZE, DB_CONFIG from db_info where " + "STATUS=? ")-->Line_68 $$ ps.close()[ FD ]
Line_13 $$ ResultSet rs = null-->Line_69 $$ if (rs != null)[ FD ]
Line_23 $$ rs = ps.executeQuery()-->Line_69 $$ if (rs != null)[ FD ]
Line_69 $$ if (rs != null)-->Line_69 $$ rs.close()[ CD ]
Line_13 $$ ResultSet rs = null-->Line_69 $$ rs.close()[ FD ]
Line_23 $$ rs = ps.executeQuery()-->Line_69 $$ rs.close()[ FD ]
Line_12 $$ Connection conn = null-->Line_70 $$ if (conn != null)[ FD ]
Line_20 $$ conn = DBRegistryManager.getConnection()-->Line_70 $$ if (conn != null)[ FD ]
Line_70 $$ if (conn != null)-->Line_70 $$ conn.close()[ CD ]
Line_12 $$ Connection conn = null-->Line_70 $$ conn.close()[ FD ]
Line_20 $$ conn = DBRegistryManager.getConnection()-->Line_70 $$ conn.close()[ FD ]
Line_2 $$ public static DBInfo[] getAllDBInfo() -->Line_73 $$ return new DBInfo[0][ CD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_27 $$ dbinfo.setTbl(rs.getString(TBL))[ FD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_28 $$ dbinfo.setMaxStorage(rs.getDouble(MAX_STORAGE))[ FD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_29 $$ dbinfo.setCurrentStorage(rs.getDouble(CONCURRENT_STORAGE))[ FD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_30 $$ dbinfo.setConcurrentWrite(rs.getInt(CONCURRENT_WX))[ FD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_31 $$ dbinfo.setMaxConcurrentWrite(rs.getInt(MAX_WX))[ FD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_32 $$ dbinfo.setConfigFile(rs.getString(CONFIG_FILE))[ FD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_33 $$ dbinfo.setBlockSize(rs.getInt(BLOCK_SIZE))[ FD ]
Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_35 $$ if (in != null) [ FD ]
Line_46 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_35 $$ if (in != null) [ FD ]
Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_36 $$ if (in.available() > 0) [ FD ]
Line_46 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_36 $$ if (in.available() > 0) [ FD ]
Line_37 $$ prop = new Properties()-->Line_38 $$ prop.loadFromXML(rs.getBinaryStream(DB_CONFIG))[ FD ]
Line_45 $$ prop = new Properties()-->Line_38 $$ prop.loadFromXML(rs.getBinaryStream(DB_CONFIG))[ FD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_39 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_37 $$ prop = new Properties()-->Line_39 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_45 $$ prop = new Properties()-->Line_39 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_40 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ FD ]
Line_37 $$ prop = new Properties()-->Line_40 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ FD ]
Line_45 $$ prop = new Properties()-->Line_40 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ FD ]
Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_42 $$ in.close()[ FD ]
Line_46 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_42 $$ in.close()[ FD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_44 $$ if (dbinfo.getDbcfg() == null) [ FD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_46 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())[ FD ]
Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_47 $$ if (in != null) [ FD ]
Line_46 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_47 $$ if (in != null) [ FD ]
Line_37 $$ prop = new Properties()-->Line_48 $$ prop.load(in)[ FD ]
Line_45 $$ prop = new Properties()-->Line_48 $$ prop.load(in)[ FD ]
Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_48 $$ prop.load(in)[ FD ]
Line_46 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_48 $$ prop.load(in)[ FD ]
Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_50 $$ in.close()[ FD ]
Line_46 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_50 $$ in.close()[ FD ]
Line_37 $$ prop = new Properties()-->Line_53 $$ prop.storeToXML(out, "STORE ID " + dbinfo.getStoreId(), "UTF-8")[ FD ]
Line_45 $$ prop = new Properties()-->Line_53 $$ prop.storeToXML(out, "STORE ID " + dbinfo.getStoreId(), "UTF-8")[ FD ]
Line_52 $$ OutputStream out = new XMLOutputStream()-->Line_53 $$ prop.storeToXML(out, "STORE ID " + dbinfo.getStoreId(), "UTF-8")[ FD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_53 $$ prop.storeToXML(out, "STORE ID " + dbinfo.getStoreId(), "UTF-8")[ FD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_54 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_37 $$ prop = new Properties()-->Line_54 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_45 $$ prop = new Properties()-->Line_54 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_55 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ FD ]
Line_37 $$ prop = new Properties()-->Line_55 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ FD ]
Line_45 $$ prop = new Properties()-->Line_55 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ FD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_56 $$ DBRegistryDAO.updateDBConfig(dbinfo.getStoreId(), out.toString(), prop.getProperty("DB_URL"), prop.getProperty("DB_URL"), conn)[ FD ]
Line_52 $$ OutputStream out = new XMLOutputStream()-->Line_56 $$ DBRegistryDAO.updateDBConfig(dbinfo.getStoreId(), out.toString(), prop.getProperty("DB_URL"), prop.getProperty("DB_URL"), conn)[ FD ]
Line_37 $$ prop = new Properties()-->Line_56 $$ DBRegistryDAO.updateDBConfig(dbinfo.getStoreId(), out.toString(), prop.getProperty("DB_URL"), prop.getProperty("DB_URL"), conn)[ FD ]
Line_45 $$ prop = new Properties()-->Line_56 $$ DBRegistryDAO.updateDBConfig(dbinfo.getStoreId(), out.toString(), prop.getProperty("DB_URL"), prop.getProperty("DB_URL"), conn)[ FD ]
Line_37 $$ prop = new Properties()-->Line_56 $$ DBRegistryDAO.updateDBConfig(dbinfo.getStoreId(), out.toString(), prop.getProperty("DB_URL"), prop.getProperty("DB_URL"), conn)[ FD ]
Line_45 $$ prop = new Properties()-->Line_56 $$ DBRegistryDAO.updateDBConfig(dbinfo.getStoreId(), out.toString(), prop.getProperty("DB_URL"), prop.getProperty("DB_URL"), conn)[ FD ]
Line_34 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_57 $$ in.close()[ FD ]
Line_46 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_57 $$ in.close()[ FD ]
Line_52 $$ OutputStream out = new XMLOutputStream()-->Line_58 $$ out.close()[ FD ]
Line_25 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_60 $$ array.add(dbinfo)[ FD ]
