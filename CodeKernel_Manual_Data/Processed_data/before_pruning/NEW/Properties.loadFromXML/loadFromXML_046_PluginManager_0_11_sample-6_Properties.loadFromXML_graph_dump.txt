Line_0 $$ Entry-->Line_1 $$ public class A [ CD ]
Line_1 $$ public class A -->Line_2 $$ public static void load_plugin(File f) [ CD ]
Line_2 $$ public static void load_plugin(File f) -->Line_3 $$ JarFile tmpjar[ CD ]
Line_3 $$ JarFile tmpjar-->Line_5 $$ tmpjar = new JarFile(f)[ FD ]
Line_5 $$ tmpjar = new JarFile(f)-->Line_5 $$ tmpjar = new JarFile(f)[ FD ]
Line_2 $$ public static void load_plugin(File f) -->Line_10 $$ ZipEntry tmpman = tmpjar.getEntry("plugin.xml")[ CD ]
Line_10 $$ ZipEntry tmpman = tmpjar.getEntry("plugin.xml")-->Line_10 $$ ZipEntry tmpman = tmpjar.getEntry("plugin.xml")[ CD ]
Line_3 $$ JarFile tmpjar-->Line_10 $$ ZipEntry tmpman = tmpjar.getEntry("plugin.xml")[ FD ]
Line_5 $$ tmpjar = new JarFile(f)-->Line_10 $$ ZipEntry tmpman = tmpjar.getEntry("plugin.xml")[ FD ]
Line_2 $$ public static void load_plugin(File f) -->Line_11 $$ if (tmpman == null)[ CD ]
Line_10 $$ ZipEntry tmpman = tmpjar.getEntry("plugin.xml")-->Line_11 $$ if (tmpman == null)[ FD ]
Line_11 $$ if (tmpman == null)-->Line_11 $$ return[ CD ]
Line_2 $$ public static void load_plugin(File f) -->Line_12 $$ Properties pluginpro = new Properties()[ CD ]
Line_12 $$ Properties pluginpro = new Properties()-->Line_14 $$ pluginpro.loadFromXML(tmpjar.getInputStream(tmpman))[ FD ]
Line_3 $$ JarFile tmpjar-->Line_14 $$ pluginpro.loadFromXML(tmpjar.getInputStream(tmpman))[ FD ]
Line_5 $$ tmpjar = new JarFile(f)-->Line_14 $$ pluginpro.loadFromXML(tmpjar.getInputStream(tmpman))[ FD ]
Line_10 $$ ZipEntry tmpman = tmpjar.getEntry("plugin.xml")-->Line_14 $$ pluginpro.loadFromXML(tmpjar.getInputStream(tmpman))[ FD ]
Line_2 $$ public static void load_plugin(File f) -->Line_17 $$ String main = pluginpro.getProperty("Plugin-Main")[ CD ]
Line_17 $$ String main = pluginpro.getProperty("Plugin-Main")-->Line_17 $$ String main = pluginpro.getProperty("Plugin-Main")[ CD ]
Line_12 $$ Properties pluginpro = new Properties()-->Line_17 $$ String main = pluginpro.getProperty("Plugin-Main")[ FD ]
Line_2 $$ public static void load_plugin(File f) -->Line_18 $$ if (main == null)[ CD ]
Line_17 $$ String main = pluginpro.getProperty("Plugin-Main")-->Line_18 $$ if (main == null)[ FD ]
Line_18 $$ if (main == null)-->Line_18 $$ return[ CD ]
Line_2 $$ public static void load_plugin(File f) -->Line_20 $$ addURL(f.toURI().toURL())[ FD ]
Line_2 $$ public static void load_plugin(File f) -->Line_25 $$ Plugin tmp[ CD ]
Line_27 $$ Class piin = Class.forName(main)-->Line_27 $$ Class piin = Class.forName(main)[ CD ]
Line_17 $$ String main = pluginpro.getProperty("Plugin-Main")-->Line_27 $$ Class piin = Class.forName(main)[ FD ]
Line_25 $$ Plugin tmp-->Line_28 $$ tmp = (Plugin) piin.newInstance()[ FD ]
Line_28 $$ tmp = (Plugin) piin.newInstance()-->Line_28 $$ tmp = (Plugin) piin.newInstance()[ FD ]
Line_27 $$ Class piin = Class.forName(main)-->Line_28 $$ tmp = (Plugin) piin.newInstance()[ FD ]
Line_12 $$ Properties pluginpro = new Properties()-->Line_31 $$ switch(Integer.parseInt(pluginpro.getProperty("Load-Time", "3"))) [ FD ]
Line_25 $$ Plugin tmp-->Line_32 $$ plugins.add(tmp)[ FD ]
Line_28 $$ tmp = (Plugin) piin.newInstance()-->Line_32 $$ plugins.add(tmp)[ FD ]
Line_25 $$ Plugin tmp-->Line_33 $$ lbw.add(tmp)[ FD ]
Line_28 $$ tmp = (Plugin) piin.newInstance()-->Line_33 $$ lbw.add(tmp)[ FD ]
Line_25 $$ Plugin tmp-->Line_35 $$ plugins.add(tmp)[ FD ]
Line_28 $$ tmp = (Plugin) piin.newInstance()-->Line_35 $$ plugins.add(tmp)[ FD ]
Line_25 $$ Plugin tmp-->Line_36 $$ lbm.add(tmp)[ FD ]
Line_28 $$ tmp = (Plugin) piin.newInstance()-->Line_36 $$ lbm.add(tmp)[ FD ]
Line_25 $$ Plugin tmp-->Line_38 $$ plugins.add(tmp)[ FD ]
Line_28 $$ tmp = (Plugin) piin.newInstance()-->Line_38 $$ plugins.add(tmp)[ FD ]
Line_25 $$ Plugin tmp-->Line_39 $$ lam.add(tmp)[ FD ]
Line_28 $$ tmp = (Plugin) piin.newInstance()-->Line_39 $$ lam.add(tmp)[ FD ]
Line_25 $$ Plugin tmp-->Line_41 $$ plugins.add(tmp)[ FD ]
Line_28 $$ tmp = (Plugin) piin.newInstance()-->Line_41 $$ plugins.add(tmp)[ FD ]
