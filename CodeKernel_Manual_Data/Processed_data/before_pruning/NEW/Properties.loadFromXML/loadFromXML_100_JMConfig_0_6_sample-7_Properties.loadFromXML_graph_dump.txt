Line_0 $$ Entry-->Line_1 $$ public class A [ CD ]
Line_1 $$ public class A -->Line_2 $$ private boolean load() [ CD ]
Line_2 $$ private boolean load() -->Line_3 $$ InputStream input[ CD ]
Line_3 $$ InputStream input-->Line_5 $$ input = inputURL.openStream()[ FD ]
Line_5 $$ input = inputURL.openStream()-->Line_5 $$ input = inputURL.openStream()[ FD ]
Line_5 $$ input = inputURL.openStream()-->Line_5 $$ input = inputURL.openStream()[ CD ]
Line_7 $$ if (inputURL.getFile().toLowerCase().endsWith(".xml")) -->Line_7 $$ if (inputURL.getFile().toLowerCase().endsWith(".xml")) [ CD ]
Line_7 $$ if (inputURL.getFile().toLowerCase().endsWith(".xml")) -->Line_8 $$ return loadFromXML(input)[ CD ]
Line_8 $$ return loadFromXML(input)-->Line_8 $$ return loadFromXML(input)[ CD ]
Line_3 $$ InputStream input-->Line_8 $$ return loadFromXML(input)[ FD ]
Line_5 $$ input = inputURL.openStream()-->Line_8 $$ return loadFromXML(input)[ FD ]
Line_7 $$ if (inputURL.getFile().toLowerCase().endsWith(".xml")) -->Line_10 $$ return loadFromFile(input)[ CD ]
Line_10 $$ return loadFromFile(input)-->Line_10 $$ return loadFromFile(input)[ CD ]
Line_3 $$ InputStream input-->Line_10 $$ return loadFromFile(input)[ FD ]
Line_5 $$ input = inputURL.openStream()-->Line_10 $$ return loadFromFile(input)[ FD ]
Line_3 $$ InputStream input-->Line_13 $$ input.close()[ FD ]
Line_5 $$ input = inputURL.openStream()-->Line_13 $$ input.close()[ FD ]
Line_2 $$ private boolean load() -->Line_18 $$ return false[ CD ]
