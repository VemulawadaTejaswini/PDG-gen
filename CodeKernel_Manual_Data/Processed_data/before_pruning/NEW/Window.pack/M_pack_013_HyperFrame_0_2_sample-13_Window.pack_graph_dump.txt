Line_0 $$ Entry-->Line_1 $$ public class A [ CD ]
Line_1 $$ public class A -->Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) [ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_3 $$ Dimension tDimension[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_4 $$ int wDiff[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_5 $$ int hDiff[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_9 $$ tApplet.setStub(this)[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_9 $$ tApplet.setStub(this)[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_10 $$ name = applet.getClass().getName()[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_11 $$ Properties properties = System.getProperties()[ CD ]
Line_11 $$ Properties properties = System.getProperties()-->Line_11 $$ Properties properties = System.getProperties()[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_12 $$ properties.put("browser", "HyperFrame(" + HyperConstants.HYPERVIEWVERSION + ")")[ CD ]
Line_11 $$ Properties properties = System.getProperties()-->Line_12 $$ properties.put("browser", "HyperFrame(" + HyperConstants.HYPERVIEWVERSION + ")")[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_13 $$ properties.put("browser.version", "May 19 2007")[ CD ]
Line_11 $$ Properties properties = System.getProperties()-->Line_13 $$ properties.put("browser.version", "May 19 2007")[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_14 $$ properties.put("browser.vendor", "Tony Swain")[ CD ]
Line_11 $$ Properties properties = System.getProperties()-->Line_14 $$ properties.put("browser.vendor", "Tony Swain")[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_15 $$ if (args != null)[ CD ]
Line_15 $$ if (args != null)-->Line_15 $$ parseArgs(args, properties)[ CD ]
Line_11 $$ Properties properties = System.getProperties()-->Line_15 $$ parseArgs(args, properties)[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_16 $$ String widthStr = getParameter("width")[ CD ]
Line_16 $$ String widthStr = getParameter("width")-->Line_16 $$ String widthStr = getParameter("width")[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_17 $$ if (widthStr != null) [ CD ]
Line_16 $$ String widthStr = getParameter("width")-->Line_17 $$ if (widthStr != null) [ FD ]
Line_17 $$ if (widthStr != null) -->Line_18 $$ width = Integer.parseInt(widthStr)[ CD ]
Line_16 $$ String widthStr = getParameter("width")-->Line_18 $$ width = Integer.parseInt(widthStr)[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_23 $$ String heightStr = getParameter("height")[ CD ]
Line_23 $$ String heightStr = getParameter("height")-->Line_23 $$ String heightStr = getParameter("height")[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_24 $$ if (heightStr != null) [ CD ]
Line_23 $$ String heightStr = getParameter("height")-->Line_24 $$ if (heightStr != null) [ FD ]
Line_24 $$ if (heightStr != null) -->Line_25 $$ height = Integer.parseInt(heightStr)[ CD ]
Line_23 $$ String heightStr = getParameter("height")-->Line_25 $$ height = Integer.parseInt(heightStr)[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_30 $$ if (width == -1 || height == -1) [ CD ]
Line_30 $$ if (width == -1 || height == -1) -->Line_31 $$ System.err.println("HyperFrame Width and height must be specified.")[ CD ]
Line_30 $$ if (width == -1 || height == -1) -->Line_32 $$ System.exit(1)[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_34 $$ String menuEnaStr = getParameter("peerMenuEna")[ CD ]
Line_34 $$ String menuEnaStr = getParameter("peerMenuEna")-->Line_34 $$ String menuEnaStr = getParameter("peerMenuEna")[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_35 $$ if (menuEnaStr != null && menuEnaStr.equals("true"))[ CD ]
Line_34 $$ String menuEnaStr = getParameter("peerMenuEna")-->Line_35 $$ if (menuEnaStr != null && menuEnaStr.equals("true"))[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_36 $$ if (!peerMenuEna) [ CD ]
Line_36 $$ if (!peerMenuEna) -->Line_37 $$ MenuBar menuBar = new MenuBar()[ CD ]
Line_36 $$ if (!peerMenuEna) -->Line_39 $$ menu.add(new MenuItem("Restart (Reentrant crash bug!)"))[ CD ]
Line_36 $$ if (!peerMenuEna) -->Line_40 $$ menu.add(new MenuItem("New View   (These Should work)"))[ CD ]
Line_36 $$ if (!peerMenuEna) -->Line_41 $$ menu.add(new MenuItem("Close"))[ CD ]
Line_36 $$ if (!peerMenuEna) -->Line_42 $$ menu.add(new MenuItem("Quit"))[ CD ]
Line_36 $$ if (!peerMenuEna) -->Line_43 $$ menuBar.add(menu)[ CD ]
Line_37 $$ MenuBar menuBar = new MenuBar()-->Line_43 $$ menuBar.add(menu)[ FD ]
Line_36 $$ if (!peerMenuEna) -->Line_44 $$ setMenuBar(menuBar)[ CD ]
Line_37 $$ MenuBar menuBar = new MenuBar()-->Line_44 $$ setMenuBar(menuBar)[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_46 $$ setLayout(new BorderLayout())[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_47 $$ add("Center", tApplet)[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_47 $$ add("Center", tApplet)[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_48 $$ setSize(tWidth, tHeight)[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_48 $$ setSize(tWidth, tHeight)[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_48 $$ setSize(tWidth, tHeight)[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_49 $$ pack()[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_50 $$ setVisible(true)[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_51 $$ Insets insets = getInsets()[ CD ]
Line_51 $$ Insets insets = getInsets()-->Line_51 $$ Insets insets = getInsets()[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_52 $$ int h = insets.top + insets.bottom[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_53 $$ tHeight += h[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_53 $$ tHeight += h[ FD ]
Line_53 $$ tHeight += h-->Line_53 $$ tHeight += h[ FD ]
Line_52 $$ int h = insets.top + insets.bottom-->Line_53 $$ tHeight += h[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_54 $$ tWidth += (insets.left << 1)[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_54 $$ tWidth += (insets.left << 1)[ FD ]
Line_54 $$ tWidth += (insets.left << 1)-->Line_54 $$ tWidth += (insets.left << 1)[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_55 $$ tDimension = new Dimension(tWidth, tHeight)[ CD ]
Line_3 $$ Dimension tDimension-->Line_55 $$ tDimension = new Dimension(tWidth, tHeight)[ FD ]
Line_55 $$ tDimension = new Dimension(tWidth, tHeight)-->Line_55 $$ tDimension = new Dimension(tWidth, tHeight)[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_58 $$ setPreferredSize(tDimension)[ CD ]
Line_3 $$ Dimension tDimension-->Line_58 $$ setPreferredSize(tDimension)[ FD ]
Line_55 $$ tDimension = new Dimension(tWidth, tHeight)-->Line_58 $$ setPreferredSize(tDimension)[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_59 $$ setBounds(0, 0, tWidth, tHeight)[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_59 $$ setBounds(0, 0, tWidth, tHeight)[ FD ]
Line_54 $$ tWidth += (insets.left << 1)-->Line_59 $$ setBounds(0, 0, tWidth, tHeight)[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_59 $$ setBounds(0, 0, tWidth, tHeight)[ FD ]
Line_53 $$ tHeight += h-->Line_59 $$ setBounds(0, 0, tWidth, tHeight)[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_60 $$ setSize(tWidth, tHeight)[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_60 $$ setSize(tWidth, tHeight)[ FD ]
Line_54 $$ tWidth += (insets.left << 1)-->Line_60 $$ setSize(tWidth, tHeight)[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_60 $$ setSize(tWidth, tHeight)[ FD ]
Line_53 $$ tHeight += h-->Line_60 $$ setSize(tWidth, tHeight)[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_61 $$ pack()[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_62 $$ GraphicsConfiguration gc = getGraphicsConfiguration()[ CD ]
Line_62 $$ GraphicsConfiguration gc = getGraphicsConfiguration()-->Line_62 $$ GraphicsConfiguration gc = getGraphicsConfiguration()[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_63 $$ Rectangle gcBounds = gc.getBounds()[ CD ]
Line_63 $$ Rectangle gcBounds = gc.getBounds()-->Line_63 $$ Rectangle gcBounds = gc.getBounds()[ CD ]
Line_62 $$ GraphicsConfiguration gc = getGraphicsConfiguration()-->Line_63 $$ Rectangle gcBounds = gc.getBounds()[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_64 $$ wDiff = gcBounds.width - tWidth[ CD ]
Line_4 $$ int wDiff-->Line_64 $$ wDiff = gcBounds.width - tWidth[ FD ]
Line_64 $$ wDiff = gcBounds.width - tWidth-->Line_64 $$ wDiff = gcBounds.width - tWidth[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_64 $$ wDiff = gcBounds.width - tWidth[ FD ]
Line_54 $$ tWidth += (insets.left << 1)-->Line_64 $$ wDiff = gcBounds.width - tWidth[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_65 $$ hDiff = gcBounds.height - tHeight[ CD ]
Line_5 $$ int hDiff-->Line_65 $$ hDiff = gcBounds.height - tHeight[ FD ]
Line_65 $$ hDiff = gcBounds.height - tHeight-->Line_65 $$ hDiff = gcBounds.height - tHeight[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_65 $$ hDiff = gcBounds.height - tHeight[ FD ]
Line_53 $$ tHeight += h-->Line_65 $$ hDiff = gcBounds.height - tHeight[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_66 $$ setLocation(((wDiff) >> 1), ((hDiff) >> 1))[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_67 $$ if (wDiff < 0) [ CD ]
Line_4 $$ int wDiff-->Line_67 $$ if (wDiff < 0) [ FD ]
Line_64 $$ wDiff = gcBounds.width - tWidth-->Line_67 $$ if (wDiff < 0) [ FD ]
Line_67 $$ if (wDiff < 0) -->Line_68 $$ ((HyperView) tApplet).horizontalScrollEnable = true[ CD ]
Line_67 $$ if (wDiff < 0) -->Line_69 $$ wDiff = 0[ CD ]
Line_4 $$ int wDiff-->Line_69 $$ wDiff = 0[ FD ]
Line_64 $$ wDiff = gcBounds.width - tWidth-->Line_69 $$ wDiff = 0[ FD ]
Line_69 $$ wDiff = 0-->Line_69 $$ wDiff = 0[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_71 $$ if (hDiff < 0) [ CD ]
Line_5 $$ int hDiff-->Line_71 $$ if (hDiff < 0) [ FD ]
Line_65 $$ hDiff = gcBounds.height - tHeight-->Line_71 $$ if (hDiff < 0) [ FD ]
Line_71 $$ if (hDiff < 0) -->Line_72 $$ ((HyperView) tApplet).verticalScrollEnable = true[ CD ]
Line_71 $$ if (hDiff < 0) -->Line_73 $$ hDiff = 0[ CD ]
Line_5 $$ int hDiff-->Line_73 $$ hDiff = 0[ FD ]
Line_65 $$ hDiff = gcBounds.height - tHeight-->Line_73 $$ hDiff = 0[ FD ]
Line_73 $$ hDiff = 0-->Line_73 $$ hDiff = 0[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_75 $$ tApplet.start()[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_75 $$ tApplet.start()[ FD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_76 $$ toFront()[ CD ]
Line_2 $$ private void makeApplet(STDInputHandler tHandler, Applet tApplet, int tID, String[] tArgs, int tWidth, int tHeight) -->Line_77 $$ Toolkit.getDefaultToolkit().addAWTEventListener((AWTEventListener) this, AWTEvent.ACTION_EVENT_MASK | AWTEvent.MOUSE_EVENT_MASK | AWTEvent.MOUSE_MOTION_EVENT_MASK | AWTEvent.WINDOW_EVENT_MASK | AWTEvent.KEY_EVENT_MASK | MouseEvent.MOUSE_WHEEL_EVENT_MASK)[ CD ]
