Line_0 $$ Entry-->Line_1 $$ public class A [ CD ]
Line_1 $$ public class A -->Line_2 $$ protected int build_message(String title, String message, boolean mode) [ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_3 $$ setModal(mode)[ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_4 $$ setTitle(title)[ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_5 $$ int i, n, m[ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_6 $$ Label l[ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_7 $$ TextArea t[ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_8 $$ StringTokenizer st[ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_9 $$ String s[ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_10 $$ if (message == null)[ CD ]
Line_10 $$ if (message == null)-->Line_10 $$ message = ""[ CD ]
Line_10 $$ message = ""-->Line_10 $$ message = ""[ FD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_11 $$ -1[ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_12 $$ setLayout(new BorderLayout())[ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_15 $$ st = new StringTokenizer(message, "\n")[ CD ]
Line_8 $$ StringTokenizer st-->Line_15 $$ st = new StringTokenizer(message, "\n")[ FD ]
Line_15 $$ st = new StringTokenizer(message, "\n")-->Line_15 $$ st = new StringTokenizer(message, "\n")[ FD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_16 $$ n = st.countTokens()[ CD ]
Line_5 $$ int i, n, m-->Line_16 $$ n = st.countTokens()[ FD ]
Line_16 $$ n = st.countTokens()-->Line_16 $$ n = st.countTokens()[ FD ]
Line_16 $$ n = st.countTokens()-->Line_16 $$ st.countTokens()[ CD ]
Line_8 $$ StringTokenizer st-->Line_16 $$ st.countTokens()[ FD ]
Line_15 $$ st = new StringTokenizer(message, "\n")-->Line_16 $$ st.countTokens()[ FD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_17 $$ m = -1[ CD ]
Line_5 $$ int i, n, m-->Line_17 $$ m = -1[ FD ]
Line_17 $$ m = -1-->Line_17 $$ m = -1[ FD ]
Line_17 $$ m = -1-->Line_17 $$ -1[ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_18 $$ while (st.hasMoreTokens()) [ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_2 $$ protected int build_message(String title, String message, boolean mode) [ CD ]
Line_18 $$ while (st.hasMoreTokens()) -->Line_18 $$ st.hasMoreTokens()[ CD ]
Line_8 $$ StringTokenizer st-->Line_18 $$ st.hasMoreTokens()[ FD ]
Line_15 $$ st = new StringTokenizer(message, "\n")-->Line_18 $$ st.hasMoreTokens()[ FD ]
Line_18 $$ while (st.hasMoreTokens()) -->Line_19 $$ s = st.nextToken()[ CD ]
Line_19 $$ s = st.nextToken()-->Line_19 $$ s = st.nextToken()[ FD ]
Line_9 $$ String s-->Line_19 $$ s = st.nextToken()[ FD ]
Line_19 $$ s = st.nextToken()-->Line_19 $$ st.nextToken()[ CD ]
Line_8 $$ StringTokenizer st-->Line_19 $$ st.nextToken()[ FD ]
Line_15 $$ st = new StringTokenizer(message, "\n")-->Line_19 $$ st.nextToken()[ FD ]
Line_18 $$ while (st.hasMoreTokens()) -->Line_20 $$ if (s.length() > m)[ CD ]
Line_5 $$ int i, n, m-->Line_20 $$ if (s.length() > m)[ FD ]
Line_17 $$ m = -1-->Line_20 $$ if (s.length() > m)[ FD ]
Line_19 $$ s = st.nextToken()-->Line_20 $$ s.length()[ FD ]
Line_9 $$ String s-->Line_20 $$ s.length()[ FD ]
Line_20 $$ if (s.length() > m)-->Line_20 $$ m = s.length()[ CD ]
Line_20 $$ m = s.length()-->Line_20 $$ m = s.length()[ FD ]
Line_5 $$ int i, n, m-->Line_20 $$ m = s.length()[ FD ]
Line_17 $$ m = -1-->Line_20 $$ m = s.length()[ FD ]
Line_20 $$ m = s.length()-->Line_20 $$ s.length()[ CD ]
Line_19 $$ s = st.nextToken()-->Line_20 $$ s.length()[ FD ]
Line_9 $$ String s-->Line_20 $$ s.length()[ FD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_22 $$ if (useMultiLabels) [ CD ]
Line_22 $$ if (useMultiLabels) -->Line_23 $$ msg.setLayout(new GridLayout(n + 2, 1))[ CD ]
Line_22 $$ if (useMultiLabels) -->Line_24 $$ msg.add(new Label(" "))[ CD ]
Line_22 $$ if (useMultiLabels) -->Line_25 $$ for (i = 0; i < n; i++) [ CD ]
Line_22 $$ if (useMultiLabels) -->Line_22 $$ if (useMultiLabels) [ CD ]
Line_5 $$ int i, n, m-->Line_25 $$ for (i = 0; i < n; i++) [ FD ]
Line_5 $$ int i, n, m-->Line_25 $$ for (i = 0; i < n; i++) [ FD ]
Line_16 $$ n = st.countTokens()-->Line_25 $$ for (i = 0; i < n; i++) [ FD ]
Line_25 $$ for (i = 0; i < n; i++) -->Line_25 $$ i = 0[ CD ]
Line_25 $$ i = 0-->Line_25 $$ i = 0[ FD ]
Line_5 $$ int i, n, m-->Line_25 $$ i = 0[ FD ]
Line_25 $$ for (i = 0; i < n; i++) -->Line_25 $$ i++[ CD ]
Line_25 $$ i = 0-->Line_25 $$ i++[ FD ]
Line_5 $$ int i, n, m-->Line_25 $$ i++[ FD ]
Line_25 $$ for (i = 0; i < n; i++) -->Line_26 $$ l = new Label()[ CD ]
Line_26 $$ l = new Label()-->Line_26 $$ l = new Label()[ FD ]
Line_6 $$ Label l-->Line_26 $$ l = new Label()[ FD ]
Line_25 $$ for (i = 0; i < n; i++) -->Line_27 $$ v.addElement(l)[ CD ]
Line_26 $$ l = new Label()-->Line_27 $$ v.addElement(l)[ FD ]
Line_6 $$ Label l-->Line_27 $$ v.addElement(l)[ FD ]
Line_25 $$ for (i = 0; i < n; i++) -->Line_28 $$ msg.add(l)[ CD ]
Line_26 $$ l = new Label()-->Line_28 $$ msg.add(l)[ FD ]
Line_6 $$ Label l-->Line_28 $$ msg.add(l)[ FD ]
Line_22 $$ if (useMultiLabels) -->Line_31 $$ msg.setLayout(new BorderLayout())[ CD ]
Line_22 $$ if (useMultiLabels) -->Line_32 $$ n = (n > 20) ? 20 : ((n < 1) ? 1 : n)[ CD ]
Line_5 $$ int i, n, m-->Line_32 $$ n = (n > 20) ? 20 : ((n < 1) ? 1 : n)[ FD ]
Line_16 $$ n = st.countTokens()-->Line_32 $$ n = (n > 20) ? 20 : ((n < 1) ? 1 : n)[ FD ]
Line_32 $$ n = (n > 20) ? 20 : ((n < 1) ? 1 : n)-->Line_32 $$ n = (n > 20) ? 20 : ((n < 1) ? 1 : n)[ FD ]
Line_22 $$ if (useMultiLabels) -->Line_33 $$ m = (m > 100) ? 100 : ((m < 30) ? 30 : m)[ CD ]
Line_20 $$ m = s.length()-->Line_33 $$ m = (m > 100) ? 100 : ((m < 30) ? 30 : m)[ FD ]
Line_5 $$ int i, n, m-->Line_33 $$ m = (m > 100) ? 100 : ((m < 30) ? 30 : m)[ FD ]
Line_17 $$ m = -1-->Line_33 $$ m = (m > 100) ? 100 : ((m < 30) ? 30 : m)[ FD ]
Line_33 $$ m = (m > 100) ? 100 : ((m < 30) ? 30 : m)-->Line_33 $$ m = (m > 100) ? 100 : ((m < 30) ? 30 : m)[ FD ]
Line_22 $$ if (useMultiLabels) -->Line_34 $$ if (trows == -1)[ CD ]
Line_34 $$ if (trows == -1)-->Line_34 $$ -1[ CD ]
Line_22 $$ if (useMultiLabels) -->Line_35 $$ if (tcols == -1)[ CD ]
Line_35 $$ if (tcols == -1)-->Line_35 $$ -1[ CD ]
Line_22 $$ if (useMultiLabels) -->Line_36 $$ t = new TextArea(trows, tcols)[ CD ]
Line_7 $$ TextArea t-->Line_36 $$ t = new TextArea(trows, tcols)[ FD ]
Line_36 $$ t = new TextArea(trows, tcols)-->Line_36 $$ t = new TextArea(trows, tcols)[ FD ]
Line_22 $$ if (useMultiLabels) -->Line_37 $$ t.setEditable(editableArea)[ CD ]
Line_7 $$ TextArea t-->Line_37 $$ t.setEditable(editableArea)[ FD ]
Line_36 $$ t = new TextArea(trows, tcols)-->Line_37 $$ t.setEditable(editableArea)[ FD ]
Line_22 $$ if (useMultiLabels) -->Line_38 $$ v.addElement(t)[ CD ]
Line_7 $$ TextArea t-->Line_38 $$ v.addElement(t)[ FD ]
Line_36 $$ t = new TextArea(trows, tcols)-->Line_38 $$ v.addElement(t)[ FD ]
Line_22 $$ if (useMultiLabels) -->Line_39 $$ msg.add(t, BorderLayout.CENTER)[ CD ]
Line_7 $$ TextArea t-->Line_39 $$ msg.add(t, BorderLayout.CENTER)[ FD ]
Line_36 $$ t = new TextArea(trows, tcols)-->Line_39 $$ msg.add(t, BorderLayout.CENTER)[ FD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_41 $$ add(msg, BorderLayout.CENTER)[ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_43 $$ buttons.setLayout(new FlowLayout(FlowLayout.CENTER))[ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_44 $$ if (b1 != null) [ CD ]
Line_44 $$ if (b1 != null) -->Line_45 $$ buttons.add(b1)[ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_47 $$ if (b2 != null)[ CD ]
Line_47 $$ if (b2 != null)-->Line_47 $$ buttons.add(b2)[ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_48 $$ if (b3 != null)[ CD ]
Line_48 $$ if (b3 != null)-->Line_48 $$ buttons.add(b3)[ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_49 $$ add(buttons, BorderLayout.SOUTH)[ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_50 $$ setMessage(message)[ CD ]
Line_10 $$ message = ""-->Line_50 $$ setMessage(message)[ FD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_51 $$ addListeners()[ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_52 $$ pack()[ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_53 $$ center()[ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_54 $$ if (cursorAreaEnd && !useMultiLabels) [ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_60 $$ setVisible(true)[ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_61 $$ if (!waitF) [ CD ]
Line_61 $$ if (!waitF) -->Line_62 $$ return 0;[ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_64 $$ while (isShowing()) [ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_2 $$ protected int build_message(String title, String message, boolean mode) [ CD ]
Line_64 $$ while (isShowing()) -->Line_64 $$ isShowing()[ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_72 $$ removeListeners()[ CD ]
Line_2 $$ protected int build_message(String title, String message, boolean mode) -->Line_73 $$ return answer;[ CD ]
Line_20 $$ m = s.length()-->Line_20 $$ if (s.length() > m)[ FD ]
Line_19 $$ s = st.nextToken()-->Line_20 $$ s.length()[ FD ]
Line_19 $$ s = st.nextToken()-->Line_20 $$ s.length()[ FD ]
Line_25 $$ i = 0-->Line_25 $$ for (i = 0; i < n; i++) [ FD ]
Line_25 $$ i = 0-->Line_25 $$ for (i = 0; i < n; i++) [ FD ]
Line_25 $$ i = 0-->Line_25 $$ i++[ FD ]
Line_26 $$ l = new Label()-->Line_27 $$ v.addElement(l)[ FD ]
Line_26 $$ l = new Label()-->Line_28 $$ msg.add(l)[ FD ]
