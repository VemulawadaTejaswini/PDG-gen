Line_0 $$ Entry-->Line_1 $$ public class A [ CD ]
Line_1 $$ public class A -->Line_2 $$ public org.omg.CosConcurrencyControl.LockSet getLockSet(java.lang.String objectName, boolean create) throws org.openorb.ccs.LockSetNotFound [ CD ]
Line_2 $$ public org.omg.CosConcurrencyControl.LockSet getLockSet(java.lang.String objectName, boolean create) throws org.openorb.ccs.LockSetNotFound -->Line_3 $$ if (s_lock_sets.containsKey(objectName)) [ CD ]
Line_3 $$ if (s_lock_sets.containsKey(objectName)) -->Line_3 $$ s_lock_sets.containsKey(objectName)[ CD ]
Line_3 $$ if (s_lock_sets.containsKey(objectName)) -->Line_4 $$ return (org.omg.CosConcurrencyControl.LockSet) s_lock_sets.get(objectName);[ CD ]
Line_2 $$ public org.omg.CosConcurrencyControl.LockSet getLockSet(java.lang.String objectName, boolean create) throws org.openorb.ccs.LockSetNotFound -->Line_6 $$ if (create) [ CD ]
Line_6 $$ if (create) -->Line_7 $$ org.openorb.ccs.kernel.LockSet lockSet = new org.openorb.ccs.kernel.LockSet()[ CD ]
Line_7 $$ org.openorb.ccs.kernel.LockSet lockSet = new org.openorb.ccs.kernel.LockSet()-->Line_9 $$ _poa().activate_object(lockSet)[ FD ]
Line_6 $$ if (create) -->Line_14 $$ s_lock_sets.put(objectName, lockSet._this())[ CD ]
Line_7 $$ org.openorb.ccs.kernel.LockSet lockSet = new org.openorb.ccs.kernel.LockSet()-->Line_14 $$ lockSet._this()[ FD ]
Line_6 $$ if (create) -->Line_15 $$ return lockSet._this();[ CD ]
Line_15 $$ return lockSet._this();-->Line_15 $$ lockSet._this()[ CD ]
Line_7 $$ org.openorb.ccs.kernel.LockSet lockSet = new org.openorb.ccs.kernel.LockSet()-->Line_15 $$ lockSet._this()[ FD ]
