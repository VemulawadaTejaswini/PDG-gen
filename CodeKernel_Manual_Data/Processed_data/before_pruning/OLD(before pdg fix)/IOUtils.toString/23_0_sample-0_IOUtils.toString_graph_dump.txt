Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private JaxbBundle bundle(final Bout bout, final Attachment attachment) throws IOException [ CD ]
Line_2 $$ private JaxbBundle bundle(final Bout bout, final Attachment attachment) throws IOException -->Line_4 $$ JaxbBundle bundle = new JaxbBundle("attachment").add("name", attachment.name()).up().add("ctype", attachment.ctype()).up().add("etag", attachment.etag()).up().add("unseen", Boolean.toString(attachment.unseen())).up().link(new Link("delete", this.uriInfo().getBaseUriBuilder().clone().path(BoutRs.class).path(BoutRs.class, "delete").queryParam("name", "[ CD ]
Line_4 $$ JaxbBundle bundle = new JaxbBundle("attachment").add("name", attachment.name()).up().add("ctype", attachment.ctype()).up().add("etag", attachment.etag()).up().add("unseen", Boolean.toString(attachment.unseen())).up().link(new Link("delete", this.uriInfo().getBaseUriBuilder().clone().path(BoutRs.class).path(BoutRs.class, "delete").queryParam("name", "-->Line_4 $$ new JaxbBundle("attachment").add("name", attachment.name()).up().add("ctype", attachment.ctype()).up().add("etag", attachment.etag()).up().add("unseen", Boolean.toString(attachment.unseen())).up().link(new Link("delete", this.uriInfo().getBaseUriBuilder().clone().path(BoutRs.class).path(BoutRs.class, "delete").queryParam("name", "[ CD ]
Line_2 $$ private JaxbBundle bundle(final Bout bout, final Attachment attachment) throws IOException -->Line_30 $$ if (attachment.ctype().equals(Attachment.MARKDOWN)) [ CD ]
Line_30 $$ if (attachment.ctype().equals(Attachment.MARKDOWN)) -->Line_30 $$ attachment.ctype().equals(Attachment.MARKDOWN)[ CD ]
Line_30 $$ if (attachment.ctype().equals(Attachment.MARKDOWN)) -->Line_31 $$ bundle = bundle.link(new Link("open", this.uriInfo().getBaseUriBuilder().clone().path(BoutRs.class).queryParam("open", "[ CD ]
Line_4 $$ JaxbBundle bundle = new JaxbBundle("attachment").add("name", attachment.name()).up().add("ctype", attachment.ctype()).up().add("etag", attachment.etag()).up().add("unseen", Boolean.toString(attachment.unseen())).up().link(new Link("delete", this.uriInfo().getBaseUriBuilder().clone().path(BoutRs.class).path(BoutRs.class, "delete").queryParam("name", "-->Line_31 $$ bundle = bundle.link(new Link("open", this.uriInfo().getBaseUriBuilder().clone().path(BoutRs.class).queryParam("open", "[ FD ]
Line_31 $$ bundle = bundle.link(new Link("open", this.uriInfo().getBaseUriBuilder().clone().path(BoutRs.class).queryParam("open", "-->Line_31 $$ bundle = bundle.link(new Link("open", this.uriInfo().getBaseUriBuilder().clone().path(BoutRs.class).queryParam("open", "[ FD ]
Line_31 $$ bundle = bundle.link(new Link("open", this.uriInfo().getBaseUriBuilder().clone().path(BoutRs.class).queryParam("open", "-->Line_31 $$ bundle.link(new Link("open", this.uriInfo().getBaseUriBuilder().clone().path(BoutRs.class).queryParam("open", "[ CD ]
Line_4 $$ JaxbBundle bundle = new JaxbBundle("attachment").add("name", attachment.name()).up().add("ctype", attachment.ctype()).up().add("etag", attachment.etag()).up().add("unseen", Boolean.toString(attachment.unseen())).up().link(new Link("delete", this.uriInfo().getBaseUriBuilder().clone().path(BoutRs.class).path(BoutRs.class, "delete").queryParam("name", "-->Line_31 $$ bundle.link(new Link("open", this.uriInfo().getBaseUriBuilder().clone().path(BoutRs.class).queryParam("open", "[ FD ]
Line_31 $$ bundle = bundle.link(new Link("open", this.uriInfo().getBaseUriBuilder().clone().path(BoutRs.class).queryParam("open", "-->Line_31 $$ bundle.link(new Link("open", this.uriInfo().getBaseUriBuilder().clone().path(BoutRs.class).queryParam("open", "[ FD ]
Line_2 $$ private JaxbBundle bundle(final Bout bout, final Attachment attachment) throws IOException -->Line_41 $$ if (attachment.name().equals(this.open) && attachment.ctype().equals(Attachment.MARKDOWN)) [ CD ]
Line_41 $$ if (attachment.name().equals(this.open) && attachment.ctype().equals(Attachment.MARKDOWN)) -->Line_43 $$ bundle = bundle.add("html", new Markdown(IOUtils.toString(attachment.read(), CharEncoding.UTF_8)).html()).up()[ CD ]
Line_4 $$ JaxbBundle bundle = new JaxbBundle("attachment").add("name", attachment.name()).up().add("ctype", attachment.ctype()).up().add("etag", attachment.etag()).up().add("unseen", Boolean.toString(attachment.unseen())).up().link(new Link("delete", this.uriInfo().getBaseUriBuilder().clone().path(BoutRs.class).path(BoutRs.class, "delete").queryParam("name", "-->Line_43 $$ bundle = bundle.add("html", new Markdown(IOUtils.toString(attachment.read(), CharEncoding.UTF_8)).html()).up()[ FD ]
Line_31 $$ bundle = bundle.link(new Link("open", this.uriInfo().getBaseUriBuilder().clone().path(BoutRs.class).queryParam("open", "-->Line_43 $$ bundle = bundle.add("html", new Markdown(IOUtils.toString(attachment.read(), CharEncoding.UTF_8)).html()).up()[ FD ]
Line_43 $$ bundle = bundle.add("html", new Markdown(IOUtils.toString(attachment.read(), CharEncoding.UTF_8)).html()).up()-->Line_43 $$ bundle = bundle.add("html", new Markdown(IOUtils.toString(attachment.read(), CharEncoding.UTF_8)).html()).up()[ FD ]
Line_43 $$ bundle = bundle.add("html", new Markdown(IOUtils.toString(attachment.read(), CharEncoding.UTF_8)).html()).up()-->Line_43 $$ bundle.add("html", new Markdown(IOUtils.toString(attachment.read(), CharEncoding.UTF_8)).html()).up()[ CD ]
Line_4 $$ JaxbBundle bundle = new JaxbBundle("attachment").add("name", attachment.name()).up().add("ctype", attachment.ctype()).up().add("etag", attachment.etag()).up().add("unseen", Boolean.toString(attachment.unseen())).up().link(new Link("delete", this.uriInfo().getBaseUriBuilder().clone().path(BoutRs.class).path(BoutRs.class, "delete").queryParam("name", "-->Line_43 $$ bundle.add("html", new Markdown(IOUtils.toString(attachment.read(), CharEncoding.UTF_8)).html())[ FD ]
Line_31 $$ bundle = bundle.link(new Link("open", this.uriInfo().getBaseUriBuilder().clone().path(BoutRs.class).queryParam("open", "-->Line_43 $$ bundle.add("html", new Markdown(IOUtils.toString(attachment.read(), CharEncoding.UTF_8)).html())[ FD ]
Line_43 $$ bundle = bundle.add("html", new Markdown(IOUtils.toString(attachment.read(), CharEncoding.UTF_8)).html()).up()-->Line_43 $$ bundle.add("html", new Markdown(IOUtils.toString(attachment.read(), CharEncoding.UTF_8)).html())[ FD ]
Line_2 $$ private JaxbBundle bundle(final Bout bout, final Attachment attachment) throws IOException -->Line_50 $$ return bundle;[ CD ]
