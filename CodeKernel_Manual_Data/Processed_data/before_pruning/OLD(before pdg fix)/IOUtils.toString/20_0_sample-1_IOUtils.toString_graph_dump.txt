Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public Result<NewT> addPicT(String accessToken, String oauthConsumerKey, String openId, String content, byte[] pic, String clientIp, Double lon, Double lat, Boolean sync, Boolean compatible) [ CD ]
Line_2 $$ public Result<NewT> addPicT(String accessToken, String oauthConsumerKey, String openId, String content, byte[] pic, String clientIp, Double lon, Double lat, Boolean sync, Boolean compatible) -->Line_5 $$ HttpPost request = new HttpPost("https://graph.qq.com/t/add_pic_t")[ CD ]
Line_2 $$ public Result<NewT> addPicT(String accessToken, String oauthConsumerKey, String openId, String content, byte[] pic, String clientIp, Double lon, Double lat, Boolean sync, Boolean compatible) -->Line_6 $$ MultipartEntityBuilder builder = MultipartEntityBuilder.create().addBinaryBody("pic", pic)[ CD ]
Line_6 $$ MultipartEntityBuilder builder = MultipartEntityBuilder.create().addBinaryBody("pic", pic)-->Line_6 $$ MultipartEntityBuilder.create().addBinaryBody("pic", pic)[ CD ]
Line_2 $$ public Result<NewT> addPicT(String accessToken, String oauthConsumerKey, String openId, String content, byte[] pic, String clientIp, Double lon, Double lat, Boolean sync, Boolean compatible) -->Line_7 $$ List<NameValuePair> params = new ArrayList<NameValuePair>()[ CD ]
Line_2 $$ public Result<NewT> addPicT(String accessToken, String oauthConsumerKey, String openId, String content, byte[] pic, String clientIp, Double lon, Double lat, Boolean sync, Boolean compatible) -->Line_8 $$ addParameter(params, "access_token", accessToken)[ CD ]
Line_7 $$ List<NameValuePair> params = new ArrayList<NameValuePair>()-->Line_8 $$ addParameter(params, "access_token", accessToken)[ FD ]
Line_2 $$ public Result<NewT> addPicT(String accessToken, String oauthConsumerKey, String openId, String content, byte[] pic, String clientIp, Double lon, Double lat, Boolean sync, Boolean compatible) -->Line_9 $$ addParameter(params, "oauth_consumer_key", oauthConsumerKey)[ CD ]
Line_7 $$ List<NameValuePair> params = new ArrayList<NameValuePair>()-->Line_9 $$ addParameter(params, "oauth_consumer_key", oauthConsumerKey)[ FD ]
Line_2 $$ public Result<NewT> addPicT(String accessToken, String oauthConsumerKey, String openId, String content, byte[] pic, String clientIp, Double lon, Double lat, Boolean sync, Boolean compatible) -->Line_10 $$ addParameter(params, "openid", openId)[ CD ]
Line_7 $$ List<NameValuePair> params = new ArrayList<NameValuePair>()-->Line_10 $$ addParameter(params, "openid", openId)[ FD ]
Line_2 $$ public Result<NewT> addPicT(String accessToken, String oauthConsumerKey, String openId, String content, byte[] pic, String clientIp, Double lon, Double lat, Boolean sync, Boolean compatible) -->Line_11 $$ addParameter(params, "content", content)[ CD ]
Line_7 $$ List<NameValuePair> params = new ArrayList<NameValuePair>()-->Line_11 $$ addParameter(params, "content", content)[ FD ]
Line_2 $$ public Result<NewT> addPicT(String accessToken, String oauthConsumerKey, String openId, String content, byte[] pic, String clientIp, Double lon, Double lat, Boolean sync, Boolean compatible) -->Line_12 $$ addNotNullParameter(params, "clientip", clientIp)[ CD ]
Line_7 $$ List<NameValuePair> params = new ArrayList<NameValuePair>()-->Line_12 $$ addNotNullParameter(params, "clientip", clientIp)[ FD ]
Line_2 $$ public Result<NewT> addPicT(String accessToken, String oauthConsumerKey, String openId, String content, byte[] pic, String clientIp, Double lon, Double lat, Boolean sync, Boolean compatible) -->Line_13 $$ addNotNullParameter(params, "lon", lon)[ CD ]
Line_7 $$ List<NameValuePair> params = new ArrayList<NameValuePair>()-->Line_13 $$ addNotNullParameter(params, "lon", lon)[ FD ]
Line_2 $$ public Result<NewT> addPicT(String accessToken, String oauthConsumerKey, String openId, String content, byte[] pic, String clientIp, Double lon, Double lat, Boolean sync, Boolean compatible) -->Line_14 $$ addNotNullParameter(params, "lat", lat)[ CD ]
Line_7 $$ List<NameValuePair> params = new ArrayList<NameValuePair>()-->Line_14 $$ addNotNullParameter(params, "lat", lat)[ FD ]
Line_2 $$ public Result<NewT> addPicT(String accessToken, String oauthConsumerKey, String openId, String content, byte[] pic, String clientIp, Double lon, Double lat, Boolean sync, Boolean compatible) -->Line_15 $$ if (sync != null) [ CD ]
Line_15 $$ if (sync != null) -->Line_16 $$ addParameter(params, "syncflag", sync ? "0" : "1")[ CD ]
Line_7 $$ List<NameValuePair> params = new ArrayList<NameValuePair>()-->Line_16 $$ addParameter(params, "syncflag", sync ? "0" : "1")[ FD ]
Line_2 $$ public Result<NewT> addPicT(String accessToken, String oauthConsumerKey, String openId, String content, byte[] pic, String clientIp, Double lon, Double lat, Boolean sync, Boolean compatible) -->Line_18 $$ if (compatible != null) [ CD ]
Line_18 $$ if (compatible != null) -->Line_19 $$ addParameter(params, "compatibleflag", compatible ? "0" : "0x20")[ CD ]
Line_7 $$ List<NameValuePair> params = new ArrayList<NameValuePair>()-->Line_19 $$ addParameter(params, "compatibleflag", compatible ? "0" : "0x20")[ FD ]
Line_2 $$ public Result<NewT> addPicT(String accessToken, String oauthConsumerKey, String openId, String content, byte[] pic, String clientIp, Double lon, Double lat, Boolean sync, Boolean compatible) -->Line_21 $$ addParameter(params, "format", "json")[ CD ]
Line_7 $$ List<NameValuePair> params = new ArrayList<NameValuePair>()-->Line_21 $$ addParameter(params, "format", "json")[ FD ]
Line_6 $$ MultipartEntityBuilder builder = MultipartEntityBuilder.create().addBinaryBody("pic", pic)-->Line_23 $$ builder.addTextBody(nameValuePair.getName(), nameValuePair.getValue())[ FD ]
Line_22 $$ NameValuePair nameValuePair-->Line_23 $$ nameValuePair.getName()[ FD ]
Line_22 $$ NameValuePair nameValuePair-->Line_23 $$ nameValuePair.getValue()[ FD ]
Line_2 $$ public Result<NewT> addPicT(String accessToken, String oauthConsumerKey, String openId, String content, byte[] pic, String clientIp, Double lon, Double lat, Boolean sync, Boolean compatible) -->Line_25 $$ request.setEntity(builder.build())[ CD ]
Line_5 $$ HttpPost request = new HttpPost("https://graph.qq.com/t/add_pic_t")-->Line_25 $$ request.setEntity(builder.build())[ FD ]
Line_6 $$ MultipartEntityBuilder builder = MultipartEntityBuilder.create().addBinaryBody("pic", pic)-->Line_25 $$ builder.build()[ FD ]
Line_27 $$ HttpResponse response = Http.CLIENT.execute(request)-->Line_27 $$ Http.CLIENT.execute(request)[ CD ]
Line_5 $$ HttpPost request = new HttpPost("https://graph.qq.com/t/add_pic_t")-->Line_27 $$ Http.CLIENT.execute(request)[ FD ]
Line_28 $$ String json = IOUtils.toString(response.getEntity().getContent())-->Line_28 $$ IOUtils.toString(response.getEntity().getContent())[ CD ]
Line_27 $$ HttpResponse response = Http.CLIENT.execute(request)-->Line_28 $$ response.getEntity()[ FD ]
Line_30 $$ Error error = Error.parse(jsonObject)-->Line_30 $$ Error.parse(jsonObject)[ CD ]
Line_29 $$ JSONObject jsonObject = new JSONObject(json)-->Line_30 $$ Error.parse(jsonObject)[ FD ]
Line_30 $$ Error error = Error.parse(jsonObject)-->Line_31 $$ if (error != null) [ FD ]
Line_31 $$ if (error != null) -->Line_32 $$ return new Result<NewT>(error);[ CD ]
Line_34 $$ return Result.parse(jsonObject.getJSONObject("data"), NewT.class);-->Line_34 $$ Result.parse(jsonObject.getJSONObject("data"), NewT.class)[ CD ]
Line_29 $$ JSONObject jsonObject = new JSONObject(json)-->Line_34 $$ jsonObject.getJSONObject("data")[ FD ]
Line_5 $$ HttpPost request = new HttpPost("https://graph.qq.com/t/add_pic_t")-->Line_40 $$ request.releaseConnection()[ FD ]
