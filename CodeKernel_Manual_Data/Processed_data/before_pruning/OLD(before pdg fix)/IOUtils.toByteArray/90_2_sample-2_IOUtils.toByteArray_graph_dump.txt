Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void addTestJars(final Element elem, final DaemonConfig daemonConfig) throws IOException [ CD ]
Line_2 $$ private void addTestJars(final Element elem, final DaemonConfig daemonConfig) throws IOException -->Line_3 $$ @SuppressWarnings("unchecked") List<Element> jarElems = elem.element("testJars").elements()[ CD ]
Line_3 $$ @SuppressWarnings("unchecked") List<Element> jarElems = elem.element("testJars").elements()-->Line_4 $$ elem.element("testJars").elements()[ CD ]
Line_6 $$ String fileName = jarElem.attributeValue("name")-->Line_6 $$ jarElem.attributeValue("name")[ CD ]
Line_5 $$ Element jarElem-->Line_6 $$ jarElem.attributeValue("name")[ FD ]
Line_7 $$ String fileLocation = jarElem.attributeValue("dir")-->Line_7 $$ jarElem.attributeValue("dir")[ CD ]
Line_5 $$ Element jarElem-->Line_7 $$ jarElem.attributeValue("dir")[ FD ]
Line_9 $$ InputStream is = null-->Line_11 $$ is = new FileInputStream(jarFile)[ FD ]
Line_11 $$ is = new FileInputStream(jarFile)-->Line_11 $$ is = new FileInputStream(jarFile)[ FD ]
Line_12 $$ byte[] jarBytes = IOUtils.toByteArray(is)-->Line_12 $$ IOUtils.toByteArray(is)[ CD ]
Line_9 $$ InputStream is = null-->Line_12 $$ IOUtils.toByteArray(is)[ FD ]
Line_11 $$ is = new FileInputStream(jarFile)-->Line_12 $$ IOUtils.toByteArray(is)[ FD ]
Line_6 $$ String fileName = jarElem.attributeValue("name")-->Line_13 $$ daemonConfig.addTestJar(fileName, jarBytes)[ FD ]
Line_12 $$ byte[] jarBytes = IOUtils.toByteArray(is)-->Line_13 $$ daemonConfig.addTestJar(fileName, jarBytes)[ FD ]
Line_9 $$ InputStream is = null-->Line_15 $$ IOUtils.closeQuietly(is)[ FD ]
Line_11 $$ is = new FileInputStream(jarFile)-->Line_15 $$ IOUtils.closeQuietly(is)[ FD ]
