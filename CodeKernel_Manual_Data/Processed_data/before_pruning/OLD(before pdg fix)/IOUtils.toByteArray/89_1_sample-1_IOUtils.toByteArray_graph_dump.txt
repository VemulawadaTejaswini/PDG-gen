Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public <T> T sendRequest(final Request msg, final ScepResponseHandler<T> handler) throws TransportException [ CD ]
Line_2 $$ public <T> T sendRequest(final Request msg, final ScepResponseHandler<T> handler) throws TransportException -->Line_4 $$ if (!PkiOperationRequest.class.isAssignableFrom(msg.getClass())) [ CD ]
Line_4 $$ if (!PkiOperationRequest.class.isAssignableFrom(msg.getClass())) -->Line_4 $$ !PkiOperationRequest.class.isAssignableFrom(msg.getClass())[ CD ]
Line_4 $$ !PkiOperationRequest.class.isAssignableFrom(msg.getClass())-->Line_4 $$ PkiOperationRequest.class.isAssignableFrom(msg.getClass())[ CD ]
Line_2 $$ public <T> T sendRequest(final Request msg, final ScepResponseHandler<T> handler) throws TransportException -->Line_9 $$ URL url = getUrl(msg.getOperation())[ CD ]
Line_9 $$ URL url = getUrl(msg.getOperation())-->Line_9 $$ getUrl(msg.getOperation())[ CD ]
Line_2 $$ public <T> T sendRequest(final Request msg, final ScepResponseHandler<T> handler) throws TransportException -->Line_10 $$ HttpURLConnection conn[ CD ]
Line_10 $$ HttpURLConnection conn-->Line_12 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_12 $$ conn = (HttpURLConnection) url.openConnection()-->Line_12 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_9 $$ URL url = getUrl(msg.getOperation())-->Line_12 $$ url.openConnection()[ FD ]
Line_10 $$ HttpURLConnection conn-->Line_13 $$ conn.setRequestMethod("POST")[ FD ]
Line_12 $$ conn = (HttpURLConnection) url.openConnection()-->Line_13 $$ conn.setRequestMethod("POST")[ FD ]
Line_10 $$ HttpURLConnection conn-->Line_14 $$ conn.setRequestProperty("Content-Type", "application/octet-stream")[ FD ]
Line_12 $$ conn = (HttpURLConnection) url.openConnection()-->Line_14 $$ conn.setRequestProperty("Content-Type", "application/octet-stream")[ FD ]
Line_2 $$ public <T> T sendRequest(final Request msg, final ScepResponseHandler<T> handler) throws TransportException -->Line_18 $$ conn.setDoOutput(true)[ CD ]
Line_10 $$ HttpURLConnection conn-->Line_18 $$ conn.setDoOutput(true)[ FD ]
Line_12 $$ conn = (HttpURLConnection) url.openConnection()-->Line_18 $$ conn.setDoOutput(true)[ FD ]
Line_2 $$ public <T> T sendRequest(final Request msg, final ScepResponseHandler<T> handler) throws TransportException -->Line_19 $$ byte[] message[ CD ]
Line_19 $$ byte[] message-->Line_21 $$ message = Base64.decode(msg.getMessage().getBytes(Charsets.US_ASCII.name()))[ FD ]
Line_21 $$ message = Base64.decode(msg.getMessage().getBytes(Charsets.US_ASCII.name()))-->Line_21 $$ message = Base64.decode(msg.getMessage().getBytes(Charsets.US_ASCII.name()))[ FD ]
Line_21 $$ message = Base64.decode(msg.getMessage().getBytes(Charsets.US_ASCII.name()))-->Line_21 $$ Base64.decode(msg.getMessage().getBytes(Charsets.US_ASCII.name()))[ CD ]
Line_2 $$ public <T> T sendRequest(final Request msg, final ScepResponseHandler<T> handler) throws TransportException -->Line_26 $$ OutputStream stream = null[ CD ]
Line_26 $$ OutputStream stream = null-->Line_28 $$ stream = new BufferedOutputStream(conn.getOutputStream())[ FD ]
Line_28 $$ stream = new BufferedOutputStream(conn.getOutputStream())-->Line_28 $$ stream = new BufferedOutputStream(conn.getOutputStream())[ FD ]
Line_10 $$ HttpURLConnection conn-->Line_28 $$ conn.getOutputStream()[ FD ]
Line_12 $$ conn = (HttpURLConnection) url.openConnection()-->Line_28 $$ conn.getOutputStream()[ FD ]
Line_26 $$ OutputStream stream = null-->Line_29 $$ stream.write(message)[ FD ]
Line_28 $$ stream = new BufferedOutputStream(conn.getOutputStream())-->Line_29 $$ stream.write(message)[ FD ]
Line_19 $$ byte[] message-->Line_29 $$ stream.write(message)[ FD ]
Line_21 $$ message = Base64.decode(msg.getMessage().getBytes(Charsets.US_ASCII.name()))-->Line_29 $$ stream.write(message)[ FD ]
Line_26 $$ OutputStream stream = null-->Line_33 $$ if (stream != null) [ FD ]
Line_28 $$ stream = new BufferedOutputStream(conn.getOutputStream())-->Line_33 $$ if (stream != null) [ FD ]
Line_26 $$ OutputStream stream = null-->Line_35 $$ stream.close()[ FD ]
Line_28 $$ stream = new BufferedOutputStream(conn.getOutputStream())-->Line_35 $$ stream.close()[ FD ]
Line_42 $$ int responseCode = conn.getResponseCode()-->Line_42 $$ conn.getResponseCode()[ CD ]
Line_10 $$ HttpURLConnection conn-->Line_42 $$ conn.getResponseCode()[ FD ]
Line_12 $$ conn = (HttpURLConnection) url.openConnection()-->Line_42 $$ conn.getResponseCode()[ FD ]
Line_43 $$ String responseMessage = conn.getResponseMessage()-->Line_43 $$ conn.getResponseMessage()[ CD ]
Line_10 $$ HttpURLConnection conn-->Line_43 $$ conn.getResponseMessage()[ FD ]
Line_12 $$ conn = (HttpURLConnection) url.openConnection()-->Line_43 $$ conn.getResponseMessage()[ FD ]
Line_42 $$ int responseCode = conn.getResponseCode()-->Line_45 $$ varargs(responseCode, responseMessage, msg, url)[ FD ]
Line_43 $$ String responseMessage = conn.getResponseMessage()-->Line_45 $$ varargs(responseCode, responseMessage, msg, url)[ FD ]
Line_9 $$ URL url = getUrl(msg.getOperation())-->Line_45 $$ varargs(responseCode, responseMessage, msg, url)[ FD ]
Line_42 $$ int responseCode = conn.getResponseCode()-->Line_46 $$ if (responseCode != HttpURLConnection.HTTP_OK) [ FD ]
Line_2 $$ public <T> T sendRequest(final Request msg, final ScepResponseHandler<T> handler) throws TransportException -->Line_53 $$ byte[] response[ CD ]
Line_53 $$ byte[] response-->Line_55 $$ response = IOUtils.toByteArray(conn.getInputStream())[ FD ]
Line_55 $$ response = IOUtils.toByteArray(conn.getInputStream())-->Line_55 $$ response = IOUtils.toByteArray(conn.getInputStream())[ FD ]
Line_55 $$ response = IOUtils.toByteArray(conn.getInputStream())-->Line_55 $$ IOUtils.toByteArray(conn.getInputStream())[ CD ]
Line_10 $$ HttpURLConnection conn-->Line_55 $$ conn.getInputStream()[ FD ]
Line_12 $$ conn = (HttpURLConnection) url.openConnection()-->Line_55 $$ conn.getInputStream()[ FD ]
Line_2 $$ public <T> T sendRequest(final Request msg, final ScepResponseHandler<T> handler) throws TransportException -->Line_59 $$ return handler.getResponse(response, conn.getContentType());[ CD ]
Line_59 $$ return handler.getResponse(response, conn.getContentType());-->Line_59 $$ handler.getResponse(response, conn.getContentType())[ CD ]
Line_53 $$ byte[] response-->Line_59 $$ handler.getResponse(response, conn.getContentType())[ FD ]
Line_55 $$ response = IOUtils.toByteArray(conn.getInputStream())-->Line_59 $$ handler.getResponse(response, conn.getContentType())[ FD ]
Line_10 $$ HttpURLConnection conn-->Line_59 $$ conn.getContentType()[ FD ]
Line_12 $$ conn = (HttpURLConnection) url.openConnection()-->Line_59 $$ conn.getContentType()[ FD ]
