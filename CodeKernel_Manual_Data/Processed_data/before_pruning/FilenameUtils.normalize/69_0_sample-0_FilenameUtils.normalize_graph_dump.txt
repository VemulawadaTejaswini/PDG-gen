Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String rewritePath(String oldValue, String newValue) [ CD ]
Line_2 $$ public static String rewritePath(String oldValue, String newValue) -->Line_3 $$ String path = newValue[ CD ]
Line_2 $$ public static String rewritePath(String oldValue, String newValue) -->Line_4 $$ String filename[ CD ]
Line_2 $$ public static String rewritePath(String oldValue, String newValue) -->Line_5 $$ if ("".equals(FilenameUtils.getExtension(newValue))) [ CD ]
Line_5 $$ if ("".equals(FilenameUtils.getExtension(newValue))) -->Line_5 $$ "".equals(FilenameUtils.getExtension(newValue))[ CD ]
Line_5 $$ if ("".equals(FilenameUtils.getExtension(newValue))) -->Line_6 $$ filename = FilenameUtils.getName(oldValue)[ CD ]
Line_4 $$ String filename-->Line_6 $$ filename = FilenameUtils.getName(oldValue)[ FD ]
Line_6 $$ filename = FilenameUtils.getName(oldValue)-->Line_6 $$ filename = FilenameUtils.getName(oldValue)[ FD ]
Line_6 $$ filename = FilenameUtils.getName(oldValue)-->Line_6 $$ FilenameUtils.getName(oldValue)[ CD ]
Line_5 $$ if ("".equals(FilenameUtils.getExtension(newValue))) -->Line_8 $$ path = FilenameUtils.getPath(newValue)[ CD ]
Line_3 $$ String path = newValue-->Line_8 $$ path = FilenameUtils.getPath(newValue)[ FD ]
Line_8 $$ path = FilenameUtils.getPath(newValue)-->Line_8 $$ path = FilenameUtils.getPath(newValue)[ FD ]
Line_8 $$ path = FilenameUtils.getPath(newValue)-->Line_8 $$ FilenameUtils.getPath(newValue)[ CD ]
Line_5 $$ if ("".equals(FilenameUtils.getExtension(newValue))) -->Line_9 $$ filename = FilenameUtils.getName(newValue)[ CD ]
Line_4 $$ String filename-->Line_9 $$ filename = FilenameUtils.getName(newValue)[ FD ]
Line_6 $$ filename = FilenameUtils.getName(oldValue)-->Line_9 $$ filename = FilenameUtils.getName(newValue)[ FD ]
Line_9 $$ filename = FilenameUtils.getName(newValue)-->Line_9 $$ filename = FilenameUtils.getName(newValue)[ FD ]
Line_9 $$ filename = FilenameUtils.getName(newValue)-->Line_9 $$ FilenameUtils.getName(newValue)[ CD ]
Line_2 $$ public static String rewritePath(String oldValue, String newValue) -->Line_11 $$ Pattern p = Pattern.compile("(.*?)#(.*?)(?:$|(/.*))")[ CD ]
Line_11 $$ Pattern p = Pattern.compile("(.*?)#(.*?)(?:$|(/.*))")-->Line_11 $$ Pattern.compile("(.*?)#(.*?)(?:$|(/.*))")[ CD ]
Line_2 $$ public static String rewritePath(String oldValue, String newValue) -->Line_12 $$ Matcher m = p.matcher(path)[ CD ]
Line_12 $$ Matcher m = p.matcher(path)-->Line_12 $$ p.matcher(path)[ CD ]
Line_11 $$ Pattern p = Pattern.compile("(.*?)#(.*?)(?:$|(/.*))")-->Line_12 $$ p.matcher(path)[ FD ]
Line_3 $$ String path = newValue-->Line_12 $$ p.matcher(path)[ FD ]
Line_8 $$ path = FilenameUtils.getPath(newValue)-->Line_12 $$ p.matcher(path)[ FD ]
Line_2 $$ public static String rewritePath(String oldValue, String newValue) -->Line_13 $$ if (m.find()) [ CD ]
Line_12 $$ Matcher m = p.matcher(path)-->Line_13 $$ if (m.find()) [ FD ]
Line_13 $$ if (m.find()) -->Line_13 $$ m.find()[ CD ]
Line_12 $$ Matcher m = p.matcher(path)-->Line_13 $$ m.find()[ FD ]
Line_13 $$ if (m.find()) -->Line_14 $$ String prefix = m.group(1)[ CD ]
Line_14 $$ String prefix = m.group(1)-->Line_14 $$ m.group(1)[ CD ]
Line_12 $$ Matcher m = p.matcher(path)-->Line_14 $$ m.group(1)[ FD ]
Line_13 $$ if (m.find()) -->Line_15 $$ String dir = m.group(2)[ CD ]
Line_15 $$ String dir = m.group(2)-->Line_15 $$ m.group(2)[ CD ]
Line_12 $$ Matcher m = p.matcher(path)-->Line_15 $$ m.group(2)[ FD ]
Line_13 $$ if (m.find()) -->Line_16 $$ String suffix = m.group(3)[ CD ]
Line_16 $$ String suffix = m.group(3)-->Line_16 $$ m.group(3)[ CD ]
Line_12 $$ Matcher m = p.matcher(path)-->Line_16 $$ m.group(3)[ FD ]
Line_13 $$ if (m.find()) -->Line_17 $$ int index = oldValue.indexOf(dir)[ CD ]
Line_17 $$ int index = oldValue.indexOf(dir)-->Line_17 $$ oldValue.indexOf(dir)[ CD ]
Line_15 $$ String dir = m.group(2)-->Line_17 $$ oldValue.indexOf(dir)[ FD ]
Line_13 $$ if (m.find()) -->Line_18 $$ int length = dir.length()[ CD ]
Line_18 $$ int length = dir.length()-->Line_18 $$ dir.length()[ CD ]
Line_15 $$ String dir = m.group(2)-->Line_18 $$ dir.length()[ FD ]
Line_13 $$ if (m.find()) -->Line_19 $$ String remainder = FilenameUtils.getPath(oldValue.substring(index + length))[ CD ]
Line_19 $$ String remainder = FilenameUtils.getPath(oldValue.substring(index + length))-->Line_19 $$ FilenameUtils.getPath(oldValue.substring(index + length))[ CD ]
Line_13 $$ if (m.find()) -->Line_20 $$ if (prefix != null && !prefix.equals("")) [ CD ]
Line_20 $$ !prefix.equals("")-->Line_20 $$ prefix.equals("")[ CD ]
Line_14 $$ String prefix = m.group(1)-->Line_20 $$ prefix.equals("")[ FD ]
Line_20 $$ if (prefix != null && !prefix.equals("")) -->Line_21 $$ path = prefix + remainder[ CD ]
Line_3 $$ String path = newValue-->Line_21 $$ path = prefix + remainder[ FD ]
Line_8 $$ path = FilenameUtils.getPath(newValue)-->Line_21 $$ path = prefix + remainder[ FD ]
Line_21 $$ path = prefix + remainder-->Line_21 $$ path = prefix + remainder[ FD ]
Line_14 $$ String prefix = m.group(1)-->Line_21 $$ path = prefix + remainder[ FD ]
Line_19 $$ String remainder = FilenameUtils.getPath(oldValue.substring(index + length))-->Line_21 $$ path = prefix + remainder[ FD ]
Line_20 $$ if (prefix != null && !prefix.equals("")) -->Line_23 $$ path = remainder[ CD ]
Line_3 $$ String path = newValue-->Line_23 $$ path = remainder[ FD ]
Line_8 $$ path = FilenameUtils.getPath(newValue)-->Line_23 $$ path = remainder[ FD ]
Line_21 $$ path = prefix + remainder-->Line_23 $$ path = remainder[ FD ]
Line_23 $$ path = remainder-->Line_23 $$ path = remainder[ FD ]
Line_19 $$ String remainder = FilenameUtils.getPath(oldValue.substring(index + length))-->Line_23 $$ path = remainder[ FD ]
Line_13 $$ if (m.find()) -->Line_25 $$ if (suffix != null && !suffix.equals("")) [ CD ]
Line_25 $$ !suffix.equals("")-->Line_25 $$ suffix.equals("")[ CD ]
Line_16 $$ String suffix = m.group(3)-->Line_25 $$ suffix.equals("")[ FD ]
Line_25 $$ if (suffix != null && !suffix.equals("")) -->Line_26 $$ path += suffix[ CD ]
Line_3 $$ String path = newValue-->Line_26 $$ path += suffix[ FD ]
Line_8 $$ path = FilenameUtils.getPath(newValue)-->Line_26 $$ path += suffix[ FD ]
Line_21 $$ path = prefix + remainder-->Line_26 $$ path += suffix[ FD ]
Line_23 $$ path = remainder-->Line_26 $$ path += suffix[ FD ]
Line_26 $$ path += suffix-->Line_26 $$ path += suffix[ FD ]
Line_16 $$ String suffix = m.group(3)-->Line_26 $$ path += suffix[ FD ]
Line_2 $$ public static String rewritePath(String oldValue, String newValue) -->Line_29 $$ return FilenameUtils.normalize(path + "/" + filename);[ CD ]
Line_29 $$ return FilenameUtils.normalize(path + "/" + filename);-->Line_29 $$ FilenameUtils.normalize(path + "/" + filename)[ CD ]
