Line_0 $$ Entry-->Line_1 $$ public class A [ CD ]
Line_1 $$ public class A -->Line_2 $$ public static DBInfo[] getStoreIDForStore(String storageID, byte[] content) [ CD ]
Line_2 $$ public static DBInfo[] getStoreIDForStore(String storageID, byte[] content) -->Line_3 $$ int STORE_ID = 1[ CD ]
Line_2 $$ public static DBInfo[] getStoreIDForStore(String storageID, byte[] content) -->Line_4 $$ int TBL = 2[ CD ]
Line_2 $$ public static DBInfo[] getStoreIDForStore(String storageID, byte[] content) -->Line_5 $$ int MAX_STORAGE = 3[ CD ]
Line_2 $$ public static DBInfo[] getStoreIDForStore(String storageID, byte[] content) -->Line_6 $$ int CONCURRENT_STORAGE = 4[ CD ]
Line_2 $$ public static DBInfo[] getStoreIDForStore(String storageID, byte[] content) -->Line_7 $$ int CONCURRENT_WX = 5[ CD ]
Line_2 $$ public static DBInfo[] getStoreIDForStore(String storageID, byte[] content) -->Line_8 $$ int MAX_WX = 6[ CD ]
Line_2 $$ public static DBInfo[] getStoreIDForStore(String storageID, byte[] content) -->Line_9 $$ int CONFIG_FILE = 7[ CD ]
Line_2 $$ public static DBInfo[] getStoreIDForStore(String storageID, byte[] content) -->Line_10 $$ int BLOCK_SIZE = 8[ CD ]
Line_2 $$ public static DBInfo[] getStoreIDForStore(String storageID, byte[] content) -->Line_11 $$ int DB_CONFIG = 9[ CD ]
Line_2 $$ public static DBInfo[] getStoreIDForStore(String storageID, byte[] content) -->Line_12 $$ Connection conn = null[ CD ]
Line_2 $$ public static DBInfo[] getStoreIDForStore(String storageID, byte[] content) -->Line_13 $$ ResultSet rs = null[ CD ]
Line_2 $$ public static DBInfo[] getStoreIDForStore(String storageID, byte[] content) -->Line_14 $$ PreparedStatement ps = null[ CD ]
Line_2 $$ public static DBInfo[] getStoreIDForStore(String storageID, byte[] content) -->Line_15 $$ Collection<DBInfo> array = new ArrayList<DBInfo>()[ CD ]
Line_2 $$ public static DBInfo[] getStoreIDForStore(String storageID, byte[] content) -->Line_16 $$ DBInfo dbinfo = null[ CD ]
Line_2 $$ public static DBInfo[] getStoreIDForStore(String storageID, byte[] content) -->Line_17 $$ InputStream in = null[ CD ]
Line_2 $$ public static DBInfo[] getStoreIDForStore(String storageID, byte[] content) -->Line_18 $$ Properties prop = null[ CD ]
Line_12 $$ Connection conn = null-->Line_20 $$ conn = DBRegistryManager.getConnection()[ FD ]
Line_20 $$ conn = DBRegistryManager.getConnection()-->Line_20 $$ conn = DBRegistryManager.getConnection()[ FD ]
Line_20 $$ conn = DBRegistryManager.getConnection()-->Line_20 $$ DBRegistryManager.getConnection()[ CD ]
Line_14 $$ PreparedStatement ps = null-->Line_21 $$ ps = conn.prepareStatement("select STORE_ID, TBL, MAX_STORAGE, CURRENT_STORAGE, CONCURRENT_WRITE, MAX_CONCURRENT_WRITE, " + "CONFIG_FILE, BLOCK_SIZE, DB_CONFIG from db_info where " + "STATUS=? and MAX_STORAGE>CURRENT_STORAGE and MAX_CONCURRENT_WRITE>CONCURRENT_WRITE and " + "MAX_STORAGE>CURRENT_STORAGE and MAX_STORAGE>(CURRENT_STORAGE + ?) order by CURRENT_STORAGE asc")[ FD ]
Line_21 $$ ps = conn.prepareStatement("select STORE_ID, TBL, MAX_STORAGE, CURRENT_STORAGE, CONCURRENT_WRITE, MAX_CONCURRENT_WRITE, " + "CONFIG_FILE, BLOCK_SIZE, DB_CONFIG from db_info where " + "STATUS=? and MAX_STORAGE>CURRENT_STORAGE and MAX_CONCURRENT_WRITE>CONCURRENT_WRITE and " + "MAX_STORAGE>CURRENT_STORAGE and MAX_STORAGE>(CURRENT_STORAGE + ?) order by CURRENT_STORAGE asc")-->Line_21 $$ ps = conn.prepareStatement("select STORE_ID, TBL, MAX_STORAGE, CURRENT_STORAGE, CONCURRENT_WRITE, MAX_CONCURRENT_WRITE, " + "CONFIG_FILE, BLOCK_SIZE, DB_CONFIG from db_info where " + "STATUS=? and MAX_STORAGE>CURRENT_STORAGE and MAX_CONCURRENT_WRITE>CONCURRENT_WRITE and " + "MAX_STORAGE>CURRENT_STORAGE and MAX_STORAGE>(CURRENT_STORAGE + ?) order by CURRENT_STORAGE asc")[ FD ]
Line_21 $$ ps = conn.prepareStatement("select STORE_ID, TBL, MAX_STORAGE, CURRENT_STORAGE, CONCURRENT_WRITE, MAX_CONCURRENT_WRITE, " + "CONFIG_FILE, BLOCK_SIZE, DB_CONFIG from db_info where " + "STATUS=? and MAX_STORAGE>CURRENT_STORAGE and MAX_CONCURRENT_WRITE>CONCURRENT_WRITE and " + "MAX_STORAGE>CURRENT_STORAGE and MAX_STORAGE>(CURRENT_STORAGE + ?) order by CURRENT_STORAGE asc")-->Line_21 $$ conn.prepareStatement("select STORE_ID, TBL, MAX_STORAGE, CURRENT_STORAGE, CONCURRENT_WRITE, MAX_CONCURRENT_WRITE, " + "CONFIG_FILE, BLOCK_SIZE, DB_CONFIG from db_info where " + "STATUS=? and MAX_STORAGE>CURRENT_STORAGE and MAX_CONCURRENT_WRITE>CONCURRENT_WRITE and " + "MAX_STORAGE>CURRENT_STORAGE and MAX_STORAGE>(CURRENT_STORAGE + ?) order by CURRENT_STORAGE asc")[ CD ]
Line_12 $$ Connection conn = null-->Line_21 $$ conn.prepareStatement("select STORE_ID, TBL, MAX_STORAGE, CURRENT_STORAGE, CONCURRENT_WRITE, MAX_CONCURRENT_WRITE, " + "CONFIG_FILE, BLOCK_SIZE, DB_CONFIG from db_info where " + "STATUS=? and MAX_STORAGE>CURRENT_STORAGE and MAX_CONCURRENT_WRITE>CONCURRENT_WRITE and " + "MAX_STORAGE>CURRENT_STORAGE and MAX_STORAGE>(CURRENT_STORAGE + ?) order by CURRENT_STORAGE asc")[ FD ]
Line_20 $$ conn = DBRegistryManager.getConnection()-->Line_21 $$ conn.prepareStatement("select STORE_ID, TBL, MAX_STORAGE, CURRENT_STORAGE, CONCURRENT_WRITE, MAX_CONCURRENT_WRITE, " + "CONFIG_FILE, BLOCK_SIZE, DB_CONFIG from db_info where " + "STATUS=? and MAX_STORAGE>CURRENT_STORAGE and MAX_CONCURRENT_WRITE>CONCURRENT_WRITE and " + "MAX_STORAGE>CURRENT_STORAGE and MAX_STORAGE>(CURRENT_STORAGE + ?) order by CURRENT_STORAGE asc")[ FD ]
Line_14 $$ PreparedStatement ps = null-->Line_22 $$ ps.setString(1, DB_READY)[ FD ]
Line_21 $$ ps = conn.prepareStatement("select STORE_ID, TBL, MAX_STORAGE, CURRENT_STORAGE, CONCURRENT_WRITE, MAX_CONCURRENT_WRITE, " + "CONFIG_FILE, BLOCK_SIZE, DB_CONFIG from db_info where " + "STATUS=? and MAX_STORAGE>CURRENT_STORAGE and MAX_CONCURRENT_WRITE>CONCURRENT_WRITE and " + "MAX_STORAGE>CURRENT_STORAGE and MAX_STORAGE>(CURRENT_STORAGE + ?) order by CURRENT_STORAGE asc")-->Line_22 $$ ps.setString(1, DB_READY)[ FD ]
Line_14 $$ PreparedStatement ps = null-->Line_23 $$ ps.setDouble(2, (double) content.length / 1000000)[ FD ]
Line_21 $$ ps = conn.prepareStatement("select STORE_ID, TBL, MAX_STORAGE, CURRENT_STORAGE, CONCURRENT_WRITE, MAX_CONCURRENT_WRITE, " + "CONFIG_FILE, BLOCK_SIZE, DB_CONFIG from db_info where " + "STATUS=? and MAX_STORAGE>CURRENT_STORAGE and MAX_CONCURRENT_WRITE>CONCURRENT_WRITE and " + "MAX_STORAGE>CURRENT_STORAGE and MAX_STORAGE>(CURRENT_STORAGE + ?) order by CURRENT_STORAGE asc")-->Line_23 $$ ps.setDouble(2, (double) content.length / 1000000)[ FD ]
Line_13 $$ ResultSet rs = null-->Line_24 $$ rs = ps.executeQuery()[ FD ]
Line_24 $$ rs = ps.executeQuery()-->Line_24 $$ rs = ps.executeQuery()[ FD ]
Line_24 $$ rs = ps.executeQuery()-->Line_24 $$ ps.executeQuery()[ CD ]
Line_14 $$ PreparedStatement ps = null-->Line_24 $$ ps.executeQuery()[ FD ]
Line_21 $$ ps = conn.prepareStatement("select STORE_ID, TBL, MAX_STORAGE, CURRENT_STORAGE, CONCURRENT_WRITE, MAX_CONCURRENT_WRITE, " + "CONFIG_FILE, BLOCK_SIZE, DB_CONFIG from db_info where " + "STATUS=? and MAX_STORAGE>CURRENT_STORAGE and MAX_CONCURRENT_WRITE>CONCURRENT_WRITE and " + "MAX_STORAGE>CURRENT_STORAGE and MAX_STORAGE>(CURRENT_STORAGE + ?) order by CURRENT_STORAGE asc")-->Line_24 $$ ps.executeQuery()[ FD ]
Line_25 $$ while (rs.next()) -->Line_25 $$ rs.next()[ CD ]
Line_13 $$ ResultSet rs = null-->Line_25 $$ rs.next()[ FD ]
Line_24 $$ rs = ps.executeQuery()-->Line_25 $$ rs.next()[ FD ]
Line_25 $$ while (rs.next()) -->Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))[ CD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))[ FD ]
Line_13 $$ ResultSet rs = null-->Line_26 $$ rs.getString(STORE_ID)[ FD ]
Line_24 $$ rs = ps.executeQuery()-->Line_26 $$ rs.getString(STORE_ID)[ FD ]
Line_3 $$ int STORE_ID = 1-->Line_26 $$ rs.getString(STORE_ID)[ FD ]
Line_25 $$ while (rs.next()) -->Line_27 $$ Logger.logDebug(LeastStorageDAO.class, "Get from dbregistry " + rs.getString(STORE_ID))[ CD ]
Line_13 $$ ResultSet rs = null-->Line_27 $$ rs.getString(STORE_ID)[ FD ]
Line_24 $$ rs = ps.executeQuery()-->Line_27 $$ rs.getString(STORE_ID)[ FD ]
Line_3 $$ int STORE_ID = 1-->Line_27 $$ rs.getString(STORE_ID)[ FD ]
Line_25 $$ while (rs.next()) -->Line_28 $$ dbinfo.setTbl(rs.getString(TBL))[ CD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_28 $$ dbinfo.setTbl(rs.getString(TBL))[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_28 $$ dbinfo.setTbl(rs.getString(TBL))[ FD ]
Line_13 $$ ResultSet rs = null-->Line_28 $$ rs.getString(TBL)[ FD ]
Line_24 $$ rs = ps.executeQuery()-->Line_28 $$ rs.getString(TBL)[ FD ]
Line_4 $$ int TBL = 2-->Line_28 $$ rs.getString(TBL)[ FD ]
Line_25 $$ while (rs.next()) -->Line_29 $$ dbinfo.setMaxStorage(rs.getDouble(MAX_STORAGE))[ CD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_29 $$ dbinfo.setMaxStorage(rs.getDouble(MAX_STORAGE))[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_29 $$ dbinfo.setMaxStorage(rs.getDouble(MAX_STORAGE))[ FD ]
Line_13 $$ ResultSet rs = null-->Line_29 $$ rs.getDouble(MAX_STORAGE)[ FD ]
Line_24 $$ rs = ps.executeQuery()-->Line_29 $$ rs.getDouble(MAX_STORAGE)[ FD ]
Line_5 $$ int MAX_STORAGE = 3-->Line_29 $$ rs.getDouble(MAX_STORAGE)[ FD ]
Line_25 $$ while (rs.next()) -->Line_30 $$ dbinfo.setCurrentStorage(rs.getDouble(CONCURRENT_STORAGE))[ CD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_30 $$ dbinfo.setCurrentStorage(rs.getDouble(CONCURRENT_STORAGE))[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_30 $$ dbinfo.setCurrentStorage(rs.getDouble(CONCURRENT_STORAGE))[ FD ]
Line_13 $$ ResultSet rs = null-->Line_30 $$ rs.getDouble(CONCURRENT_STORAGE)[ FD ]
Line_24 $$ rs = ps.executeQuery()-->Line_30 $$ rs.getDouble(CONCURRENT_STORAGE)[ FD ]
Line_6 $$ int CONCURRENT_STORAGE = 4-->Line_30 $$ rs.getDouble(CONCURRENT_STORAGE)[ FD ]
Line_25 $$ while (rs.next()) -->Line_31 $$ dbinfo.setConcurrentWrite(rs.getInt(CONCURRENT_WX))[ CD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_31 $$ dbinfo.setConcurrentWrite(rs.getInt(CONCURRENT_WX))[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_31 $$ dbinfo.setConcurrentWrite(rs.getInt(CONCURRENT_WX))[ FD ]
Line_13 $$ ResultSet rs = null-->Line_31 $$ rs.getInt(CONCURRENT_WX)[ FD ]
Line_24 $$ rs = ps.executeQuery()-->Line_31 $$ rs.getInt(CONCURRENT_WX)[ FD ]
Line_7 $$ int CONCURRENT_WX = 5-->Line_31 $$ rs.getInt(CONCURRENT_WX)[ FD ]
Line_25 $$ while (rs.next()) -->Line_32 $$ dbinfo.setMaxConcurrentWrite(rs.getInt(MAX_WX))[ CD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_32 $$ dbinfo.setMaxConcurrentWrite(rs.getInt(MAX_WX))[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_32 $$ dbinfo.setMaxConcurrentWrite(rs.getInt(MAX_WX))[ FD ]
Line_13 $$ ResultSet rs = null-->Line_32 $$ rs.getInt(MAX_WX)[ FD ]
Line_24 $$ rs = ps.executeQuery()-->Line_32 $$ rs.getInt(MAX_WX)[ FD ]
Line_8 $$ int MAX_WX = 6-->Line_32 $$ rs.getInt(MAX_WX)[ FD ]
Line_25 $$ while (rs.next()) -->Line_33 $$ dbinfo.setStorageID(storageID)[ CD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_33 $$ dbinfo.setStorageID(storageID)[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_33 $$ dbinfo.setStorageID(storageID)[ FD ]
Line_25 $$ while (rs.next()) -->Line_34 $$ dbinfo.setConfigFile(rs.getString(CONFIG_FILE))[ CD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_34 $$ dbinfo.setConfigFile(rs.getString(CONFIG_FILE))[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_34 $$ dbinfo.setConfigFile(rs.getString(CONFIG_FILE))[ FD ]
Line_13 $$ ResultSet rs = null-->Line_34 $$ rs.getString(CONFIG_FILE)[ FD ]
Line_24 $$ rs = ps.executeQuery()-->Line_34 $$ rs.getString(CONFIG_FILE)[ FD ]
Line_9 $$ int CONFIG_FILE = 7-->Line_34 $$ rs.getString(CONFIG_FILE)[ FD ]
Line_25 $$ while (rs.next()) -->Line_35 $$ dbinfo.setBlockSize(rs.getInt(BLOCK_SIZE))[ CD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_35 $$ dbinfo.setBlockSize(rs.getInt(BLOCK_SIZE))[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_35 $$ dbinfo.setBlockSize(rs.getInt(BLOCK_SIZE))[ FD ]
Line_13 $$ ResultSet rs = null-->Line_35 $$ rs.getInt(BLOCK_SIZE)[ FD ]
Line_24 $$ rs = ps.executeQuery()-->Line_35 $$ rs.getInt(BLOCK_SIZE)[ FD ]
Line_10 $$ int BLOCK_SIZE = 8-->Line_35 $$ rs.getInt(BLOCK_SIZE)[ FD ]
Line_25 $$ while (rs.next()) -->Line_36 $$ in = rs.getBinaryStream(DB_CONFIG)[ CD ]
Line_36 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_36 $$ in = rs.getBinaryStream(DB_CONFIG)[ FD ]
Line_17 $$ InputStream in = null-->Line_36 $$ in = rs.getBinaryStream(DB_CONFIG)[ FD ]
Line_36 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_36 $$ rs.getBinaryStream(DB_CONFIG)[ CD ]
Line_13 $$ ResultSet rs = null-->Line_36 $$ rs.getBinaryStream(DB_CONFIG)[ FD ]
Line_24 $$ rs = ps.executeQuery()-->Line_36 $$ rs.getBinaryStream(DB_CONFIG)[ FD ]
Line_11 $$ int DB_CONFIG = 9-->Line_36 $$ rs.getBinaryStream(DB_CONFIG)[ FD ]
Line_25 $$ while (rs.next()) -->Line_37 $$ if (in != null) [ CD ]
Line_36 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_37 $$ if (in != null) [ FD ]
Line_17 $$ InputStream in = null-->Line_37 $$ if (in != null) [ FD ]
Line_37 $$ if (in != null) -->Line_38 $$ if (in.available() > 0) [ CD ]
Line_36 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_38 $$ in.available()[ FD ]
Line_17 $$ InputStream in = null-->Line_38 $$ in.available()[ FD ]
Line_38 $$ if (in.available() > 0) -->Line_39 $$ prop = new Properties()[ CD ]
Line_39 $$ prop = new Properties()-->Line_39 $$ prop = new Properties()[ FD ]
Line_18 $$ Properties prop = null-->Line_39 $$ prop = new Properties()[ FD ]
Line_38 $$ if (in.available() > 0) -->Line_40 $$ prop.loadFromXML(rs.getBinaryStream(DB_CONFIG))[ CD ]
Line_39 $$ prop = new Properties()-->Line_40 $$ prop.loadFromXML(rs.getBinaryStream(DB_CONFIG))[ FD ]
Line_18 $$ Properties prop = null-->Line_40 $$ prop.loadFromXML(rs.getBinaryStream(DB_CONFIG))[ FD ]
Line_13 $$ ResultSet rs = null-->Line_40 $$ rs.getBinaryStream(DB_CONFIG)[ FD ]
Line_24 $$ rs = ps.executeQuery()-->Line_40 $$ rs.getBinaryStream(DB_CONFIG)[ FD ]
Line_11 $$ int DB_CONFIG = 9-->Line_40 $$ rs.getBinaryStream(DB_CONFIG)[ FD ]
Line_38 $$ if (in.available() > 0) -->Line_41 $$ dbinfo.setDbcfg(prop)[ CD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_41 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_41 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_39 $$ prop = new Properties()-->Line_41 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_18 $$ Properties prop = null-->Line_41 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_38 $$ if (in.available() > 0) -->Line_42 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ CD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_42 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_42 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ FD ]
Line_39 $$ prop = new Properties()-->Line_42 $$ prop.getProperty("DB_URL")[ FD ]
Line_18 $$ Properties prop = null-->Line_42 $$ prop.getProperty("DB_URL")[ FD ]
Line_37 $$ if (in != null) -->Line_44 $$ in.close()[ CD ]
Line_36 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_44 $$ in.close()[ FD ]
Line_17 $$ InputStream in = null-->Line_44 $$ in.close()[ FD ]
Line_25 $$ while (rs.next()) -->Line_46 $$ if (dbinfo.getDbcfg() == null) [ CD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_46 $$ dbinfo.getDbcfg()[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_46 $$ dbinfo.getDbcfg()[ FD ]
Line_46 $$ if (dbinfo.getDbcfg() == null) -->Line_47 $$ prop = new Properties()[ CD ]
Line_39 $$ prop = new Properties()-->Line_47 $$ prop = new Properties()[ FD ]
Line_47 $$ prop = new Properties()-->Line_47 $$ prop = new Properties()[ FD ]
Line_18 $$ Properties prop = null-->Line_47 $$ prop = new Properties()[ FD ]
Line_46 $$ if (dbinfo.getDbcfg() == null) -->Line_48 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())[ CD ]
Line_36 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_48 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())[ FD ]
Line_48 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_48 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())[ FD ]
Line_17 $$ InputStream in = null-->Line_48 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())[ FD ]
Line_48 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_48 $$ ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())[ CD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_48 $$ dbinfo.getConfigFile()[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_48 $$ dbinfo.getConfigFile()[ FD ]
Line_46 $$ if (dbinfo.getDbcfg() == null) -->Line_49 $$ if (in != null) [ CD ]
Line_36 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_49 $$ if (in != null) [ FD ]
Line_48 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_49 $$ if (in != null) [ FD ]
Line_17 $$ InputStream in = null-->Line_49 $$ if (in != null) [ FD ]
Line_49 $$ if (in != null) -->Line_50 $$ prop.load(in)[ CD ]
Line_39 $$ prop = new Properties()-->Line_50 $$ prop.load(in)[ FD ]
Line_47 $$ prop = new Properties()-->Line_50 $$ prop.load(in)[ FD ]
Line_18 $$ Properties prop = null-->Line_50 $$ prop.load(in)[ FD ]
Line_36 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_50 $$ prop.load(in)[ FD ]
Line_48 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_50 $$ prop.load(in)[ FD ]
Line_17 $$ InputStream in = null-->Line_50 $$ prop.load(in)[ FD ]
Line_46 $$ if (dbinfo.getDbcfg() == null) -->Line_52 $$ in.close()[ CD ]
Line_36 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_52 $$ in.close()[ FD ]
Line_48 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_52 $$ in.close()[ FD ]
Line_17 $$ InputStream in = null-->Line_52 $$ in.close()[ FD ]
Line_46 $$ if (dbinfo.getDbcfg() == null) -->Line_53 $$ StringWriter writer = new StringWriter()[ CD ]
Line_46 $$ if (dbinfo.getDbcfg() == null) -->Line_54 $$ OutputStream out = new XMLOutputStream()[ CD ]
Line_46 $$ if (dbinfo.getDbcfg() == null) -->Line_55 $$ prop.storeToXML(out, "STORE ID " + dbinfo.getStoreId(), "UTF-8")[ CD ]
Line_39 $$ prop = new Properties()-->Line_55 $$ prop.storeToXML(out, "STORE ID " + dbinfo.getStoreId(), "UTF-8")[ FD ]
Line_47 $$ prop = new Properties()-->Line_55 $$ prop.storeToXML(out, "STORE ID " + dbinfo.getStoreId(), "UTF-8")[ FD ]
Line_18 $$ Properties prop = null-->Line_55 $$ prop.storeToXML(out, "STORE ID " + dbinfo.getStoreId(), "UTF-8")[ FD ]
Line_54 $$ OutputStream out = new XMLOutputStream()-->Line_55 $$ prop.storeToXML(out, "STORE ID " + dbinfo.getStoreId(), "UTF-8")[ FD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_55 $$ dbinfo.getStoreId()[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_55 $$ dbinfo.getStoreId()[ FD ]
Line_46 $$ if (dbinfo.getDbcfg() == null) -->Line_56 $$ dbinfo.setDbcfg(prop)[ CD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_56 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_56 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_39 $$ prop = new Properties()-->Line_56 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_47 $$ prop = new Properties()-->Line_56 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_18 $$ Properties prop = null-->Line_56 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_46 $$ if (dbinfo.getDbcfg() == null) -->Line_57 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ CD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_57 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_57 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ FD ]
Line_39 $$ prop = new Properties()-->Line_57 $$ prop.getProperty("DB_URL")[ FD ]
Line_47 $$ prop = new Properties()-->Line_57 $$ prop.getProperty("DB_URL")[ FD ]
Line_18 $$ Properties prop = null-->Line_57 $$ prop.getProperty("DB_URL")[ FD ]
Line_46 $$ if (dbinfo.getDbcfg() == null) -->Line_58 $$ DBRegistryDAO.updateDBConfig(dbinfo.getStoreId(), out.toString(), prop.getProperty("DB_URL"), prop.getProperty("DB_URL"), conn)[ CD ]
Line_12 $$ Connection conn = null-->Line_58 $$ DBRegistryDAO.updateDBConfig(dbinfo.getStoreId(), out.toString(), prop.getProperty("DB_URL"), prop.getProperty("DB_URL"), conn)[ FD ]
Line_20 $$ conn = DBRegistryManager.getConnection()-->Line_58 $$ DBRegistryDAO.updateDBConfig(dbinfo.getStoreId(), out.toString(), prop.getProperty("DB_URL"), prop.getProperty("DB_URL"), conn)[ FD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_58 $$ dbinfo.getStoreId()[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_58 $$ dbinfo.getStoreId()[ FD ]
Line_54 $$ OutputStream out = new XMLOutputStream()-->Line_58 $$ out.toString()[ FD ]
Line_39 $$ prop = new Properties()-->Line_58 $$ prop.getProperty("DB_URL")[ FD ]
Line_47 $$ prop = new Properties()-->Line_58 $$ prop.getProperty("DB_URL")[ FD ]
Line_18 $$ Properties prop = null-->Line_58 $$ prop.getProperty("DB_URL")[ FD ]
Line_39 $$ prop = new Properties()-->Line_58 $$ prop.getProperty("DB_URL")[ FD ]
Line_47 $$ prop = new Properties()-->Line_58 $$ prop.getProperty("DB_URL")[ FD ]
Line_18 $$ Properties prop = null-->Line_58 $$ prop.getProperty("DB_URL")[ FD ]
Line_46 $$ if (dbinfo.getDbcfg() == null) -->Line_59 $$ in.close()[ CD ]
Line_36 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_59 $$ in.close()[ FD ]
Line_48 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_59 $$ in.close()[ FD ]
Line_17 $$ InputStream in = null-->Line_59 $$ in.close()[ FD ]
Line_46 $$ if (dbinfo.getDbcfg() == null) -->Line_60 $$ out.close()[ CD ]
Line_54 $$ OutputStream out = new XMLOutputStream()-->Line_60 $$ out.close()[ FD ]
Line_25 $$ while (rs.next()) -->Line_62 $$ array.add(dbinfo)[ CD ]
Line_15 $$ Collection<DBInfo> array = new ArrayList<DBInfo>()-->Line_62 $$ array.add(dbinfo)[ FD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_62 $$ array.add(dbinfo)[ FD ]
Line_16 $$ DBInfo dbinfo = null-->Line_62 $$ array.add(dbinfo)[ FD ]
Line_15 $$ Collection<DBInfo> array = new ArrayList<DBInfo>()-->Line_64 $$ array.toArray(new DBInfo[array.size()])[ FD ]
Line_15 $$ Collection<DBInfo> array = new ArrayList<DBInfo>()-->Line_64 $$ array.size()[ FD ]
Line_14 $$ PreparedStatement ps = null-->Line_70 $$ if (ps != null)[ FD ]
Line_21 $$ ps = conn.prepareStatement("select STORE_ID, TBL, MAX_STORAGE, CURRENT_STORAGE, CONCURRENT_WRITE, MAX_CONCURRENT_WRITE, " + "CONFIG_FILE, BLOCK_SIZE, DB_CONFIG from db_info where " + "STATUS=? and MAX_STORAGE>CURRENT_STORAGE and MAX_CONCURRENT_WRITE>CONCURRENT_WRITE and " + "MAX_STORAGE>CURRENT_STORAGE and MAX_STORAGE>(CURRENT_STORAGE + ?) order by CURRENT_STORAGE asc")-->Line_70 $$ if (ps != null)[ FD ]
Line_70 $$ if (ps != null)-->Line_70 $$ ps.close()[ CD ]
Line_14 $$ PreparedStatement ps = null-->Line_70 $$ ps.close()[ FD ]
Line_21 $$ ps = conn.prepareStatement("select STORE_ID, TBL, MAX_STORAGE, CURRENT_STORAGE, CONCURRENT_WRITE, MAX_CONCURRENT_WRITE, " + "CONFIG_FILE, BLOCK_SIZE, DB_CONFIG from db_info where " + "STATUS=? and MAX_STORAGE>CURRENT_STORAGE and MAX_CONCURRENT_WRITE>CONCURRENT_WRITE and " + "MAX_STORAGE>CURRENT_STORAGE and MAX_STORAGE>(CURRENT_STORAGE + ?) order by CURRENT_STORAGE asc")-->Line_70 $$ ps.close()[ FD ]
Line_13 $$ ResultSet rs = null-->Line_71 $$ if (rs != null)[ FD ]
Line_24 $$ rs = ps.executeQuery()-->Line_71 $$ if (rs != null)[ FD ]
Line_71 $$ if (rs != null)-->Line_71 $$ rs.close()[ CD ]
Line_13 $$ ResultSet rs = null-->Line_71 $$ rs.close()[ FD ]
Line_24 $$ rs = ps.executeQuery()-->Line_71 $$ rs.close()[ FD ]
Line_12 $$ Connection conn = null-->Line_72 $$ if (conn != null)[ FD ]
Line_20 $$ conn = DBRegistryManager.getConnection()-->Line_72 $$ if (conn != null)[ FD ]
Line_72 $$ if (conn != null)-->Line_72 $$ conn.close()[ CD ]
Line_12 $$ Connection conn = null-->Line_72 $$ conn.close()[ FD ]
Line_20 $$ conn = DBRegistryManager.getConnection()-->Line_72 $$ conn.close()[ FD ]
Line_2 $$ public static DBInfo[] getStoreIDForStore(String storageID, byte[] content) -->Line_75 $$ return new DBInfo[0];[ CD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_28 $$ dbinfo.setTbl(rs.getString(TBL))[ FD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_29 $$ dbinfo.setMaxStorage(rs.getDouble(MAX_STORAGE))[ FD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_30 $$ dbinfo.setCurrentStorage(rs.getDouble(CONCURRENT_STORAGE))[ FD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_31 $$ dbinfo.setConcurrentWrite(rs.getInt(CONCURRENT_WX))[ FD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_32 $$ dbinfo.setMaxConcurrentWrite(rs.getInt(MAX_WX))[ FD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_33 $$ dbinfo.setStorageID(storageID)[ FD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_34 $$ dbinfo.setConfigFile(rs.getString(CONFIG_FILE))[ FD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_35 $$ dbinfo.setBlockSize(rs.getInt(BLOCK_SIZE))[ FD ]
Line_36 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_37 $$ if (in != null) [ FD ]
Line_48 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_37 $$ if (in != null) [ FD ]
Line_36 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_38 $$ in.available()[ FD ]
Line_48 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_38 $$ in.available()[ FD ]
Line_39 $$ prop = new Properties()-->Line_40 $$ prop.loadFromXML(rs.getBinaryStream(DB_CONFIG))[ FD ]
Line_47 $$ prop = new Properties()-->Line_40 $$ prop.loadFromXML(rs.getBinaryStream(DB_CONFIG))[ FD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_41 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_39 $$ prop = new Properties()-->Line_41 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_47 $$ prop = new Properties()-->Line_41 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_42 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ FD ]
Line_39 $$ prop = new Properties()-->Line_42 $$ prop.getProperty("DB_URL")[ FD ]
Line_47 $$ prop = new Properties()-->Line_42 $$ prop.getProperty("DB_URL")[ FD ]
Line_36 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_44 $$ in.close()[ FD ]
Line_48 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_44 $$ in.close()[ FD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_46 $$ dbinfo.getDbcfg()[ FD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_48 $$ dbinfo.getConfigFile()[ FD ]
Line_36 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_49 $$ if (in != null) [ FD ]
Line_48 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_49 $$ if (in != null) [ FD ]
Line_39 $$ prop = new Properties()-->Line_50 $$ prop.load(in)[ FD ]
Line_47 $$ prop = new Properties()-->Line_50 $$ prop.load(in)[ FD ]
Line_36 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_50 $$ prop.load(in)[ FD ]
Line_48 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_50 $$ prop.load(in)[ FD ]
Line_36 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_52 $$ in.close()[ FD ]
Line_48 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_52 $$ in.close()[ FD ]
Line_39 $$ prop = new Properties()-->Line_55 $$ prop.storeToXML(out, "STORE ID " + dbinfo.getStoreId(), "UTF-8")[ FD ]
Line_47 $$ prop = new Properties()-->Line_55 $$ prop.storeToXML(out, "STORE ID " + dbinfo.getStoreId(), "UTF-8")[ FD ]
Line_54 $$ OutputStream out = new XMLOutputStream()-->Line_55 $$ prop.storeToXML(out, "STORE ID " + dbinfo.getStoreId(), "UTF-8")[ FD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_55 $$ dbinfo.getStoreId()[ FD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_56 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_39 $$ prop = new Properties()-->Line_56 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_47 $$ prop = new Properties()-->Line_56 $$ dbinfo.setDbcfg(prop)[ FD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_57 $$ dbinfo.setDBUrl1(prop.getProperty("DB_URL"))[ FD ]
Line_39 $$ prop = new Properties()-->Line_57 $$ prop.getProperty("DB_URL")[ FD ]
Line_47 $$ prop = new Properties()-->Line_57 $$ prop.getProperty("DB_URL")[ FD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_58 $$ dbinfo.getStoreId()[ FD ]
Line_54 $$ OutputStream out = new XMLOutputStream()-->Line_58 $$ out.toString()[ FD ]
Line_39 $$ prop = new Properties()-->Line_58 $$ prop.getProperty("DB_URL")[ FD ]
Line_47 $$ prop = new Properties()-->Line_58 $$ prop.getProperty("DB_URL")[ FD ]
Line_39 $$ prop = new Properties()-->Line_58 $$ prop.getProperty("DB_URL")[ FD ]
Line_47 $$ prop = new Properties()-->Line_58 $$ prop.getProperty("DB_URL")[ FD ]
Line_36 $$ in = rs.getBinaryStream(DB_CONFIG)-->Line_59 $$ in.close()[ FD ]
Line_48 $$ in = ClassLoader.getSystemResourceAsStream(dbinfo.getConfigFile())-->Line_59 $$ in.close()[ FD ]
Line_54 $$ OutputStream out = new XMLOutputStream()-->Line_60 $$ out.close()[ FD ]
Line_26 $$ dbinfo = new DBInfo(rs.getString(STORE_ID))-->Line_62 $$ array.add(dbinfo)[ FD ]
