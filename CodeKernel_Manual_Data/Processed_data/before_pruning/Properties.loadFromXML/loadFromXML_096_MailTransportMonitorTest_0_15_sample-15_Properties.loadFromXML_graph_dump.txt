Line_0 $$ Entry-->Line_1 $$ public class A [ CD ]
Line_1 $$ public class A -->Line_2 $$ public void testLoadXmlProperties() throws InvalidPropertiesFormatException, IOException [ CD ]
Line_2 $$ public void testLoadXmlProperties() throws InvalidPropertiesFormatException, IOException -->Line_3 $$ Properties props = new Properties()[ CD ]
Line_2 $$ public void testLoadXmlProperties() throws InvalidPropertiesFormatException, IOException -->Line_4 $$ Reader reader = new StringReader("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "<properties>\n" + "<comment>Hi</comment>\n" + "<entry key=\"foo\">1</entry>\n" + "<entry key=\"fu\">baz</entry>\n" + "</properties>")[ CD ]
Line_2 $$ public void testLoadXmlProperties() throws InvalidPropertiesFormatException, IOException -->Line_5 $$ InputStream stream = new ReaderInputStream(reader)[ CD ]
Line_2 $$ public void testLoadXmlProperties() throws InvalidPropertiesFormatException, IOException -->Line_6 $$ props.loadFromXML(stream)[ CD ]
Line_3 $$ Properties props = new Properties()-->Line_6 $$ props.loadFromXML(stream)[ FD ]
Line_5 $$ InputStream stream = new ReaderInputStream(reader)-->Line_6 $$ props.loadFromXML(stream)[ FD ]
Line_2 $$ public void testLoadXmlProperties() throws InvalidPropertiesFormatException, IOException -->Line_7 $$ assertEquals("1", props.get("foo"))[ CD ]
Line_3 $$ Properties props = new Properties()-->Line_7 $$ props.get("foo")[ FD ]
