Line_3 $$ public void nextPage() -->Line_4 $$ if (RELATIVE_LINK_NOT_FOUND.equals(nextPageUrl)) [ CD ]
Line_3 $$ public void nextPage() -->Line_7 $$ URL url = new URL(nextPageUrl)[ CD ]
Line_3 $$ public void nextPage() -->Line_8 $$ LOG.info("GitHub API querying issue page [ CD ]
Line_7 $$ URL url = new URL(nextPageUrl)-->Line_8 $$ queryParamValue(url, "page")[ FD ]
Line_3 $$ public void nextPage() -->Line_9 $$ URLConnection urlConnection = url.openConnection()[ CD ]
Line_7 $$ URL url = new URL(nextPageUrl)-->Line_9 $$ url.openConnection()[ FD ]
Line_3 $$ public void nextPage() -->Line_10 $$ LOG.info("GitHub API rate info => Remaining : [ CD ]
Line_9 $$ URLConnection urlConnection = url.openConnection()-->Line_11 $$ urlConnection.getHeaderField("X-RateLimit-Remaining")[ FD ]
Line_9 $$ URLConnection urlConnection = url.openConnection()-->Line_12 $$ urlConnection.getHeaderField("X-RateLimit-Limit")[ FD ]
Line_3 $$ public void nextPage() -->Line_14 $$ extractRelativeLink(urlConnection.getHeaderField("Link"), "next")[ CD ]
Line_9 $$ URLConnection urlConnection = url.openConnection()-->Line_14 $$ urlConnection.getHeaderField("Link")[ FD ]
Line_9 $$ URLConnection urlConnection = url.openConnection()-->Line_15 $$ parseJsonFrom(urlConnection)[ FD ]
