Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void readAsString(String filename, String newLineString) [ CD ]
Line_2 $$ public void readAsString(String filename, String newLineString) -->Line_3 $$ File file = new File(filename)[ CD ]
Line_2 $$ public void readAsString(String filename, String newLineString) -->Line_4 $$ FileInputStream fis = new FileInputStream(file)[ CD ]
Line_2 $$ public void readAsString(String filename, String newLineString) -->Line_5 $$ BufferedInputStream bis = new BufferedInputStream(fis)[ CD ]
Line_2 $$ public void readAsString(String filename, String newLineString) -->Line_6 $$ DataInputStream dis = new DataInputStream(bis)[ CD ]
Line_2 $$ public void readAsString(String filename, String newLineString) -->Line_7 $$ while (dis.available() != 0) [ CD ]
Line_2 $$ public void readAsString(String filename, String newLineString) -->Line_2 $$ public void readAsString(String filename, String newLineString) [ CD ]
Line_6 $$ DataInputStream dis = new DataInputStream(bis)-->Line_7 $$ while (dis.available() != 0) [ FD ]
Line_7 $$ while (dis.available() != 0) -->Line_8 $$ sb.append((new StringBuilder()).append(dis.readLine()).append(newLineString))[ CD ]
Line_2 $$ public void readAsString(String filename, String newLineString) -->Line_8 $$ sb.append((new StringBuilder()).append(dis.readLine()).append(newLineString))[ FD ]
Line_6 $$ DataInputStream dis = new DataInputStream(bis)-->Line_8 $$ sb.append((new StringBuilder()).append(dis.readLine()).append(newLineString))[ FD ]
Line_2 $$ public void readAsString(String filename, String newLineString) -->Line_10 $$ fis.close()[ CD ]
Line_4 $$ FileInputStream fis = new FileInputStream(file)-->Line_10 $$ fis.close()[ FD ]
