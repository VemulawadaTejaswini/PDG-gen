Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getContent(ResourceCollection rc, String path) [ CD ]
Line_2 $$ public void getContent(ResourceCollection rc, String path) -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(rc.addPath(path).getURL().openStream()))[ CD ]
Line_2 $$ public void getContent(ResourceCollection rc, String path) -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(rc.addPath(path).getURL().openStream()))[ FD ]
Line_2 $$ public void getContent(ResourceCollection rc, String path) -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(rc.addPath(path).getURL().openStream()))[ FD ]
Line_2 $$ public void getContent(ResourceCollection rc, String path) -->Line_4 $$ while ((line = br.readLine()) != null) buffer.append(line)[ CD ]
Line_2 $$ public void getContent(ResourceCollection rc, String path) -->Line_2 $$ public void getContent(ResourceCollection rc, String path) [ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(rc.addPath(path).getURL().openStream()))-->Line_4 $$ while ((line = br.readLine()) != null) buffer.append(line)[ FD ]
Line_4 $$ while ((line = br.readLine()) != null) buffer.append(line)-->Line_5 $$ buffer.append(line)[ CD ]
Line_2 $$ public void getContent(ResourceCollection rc, String path) -->Line_6 $$ br.close()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(rc.addPath(path).getURL().openStream()))-->Line_6 $$ br.close()[ FD ]
