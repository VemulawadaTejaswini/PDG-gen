Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void test_readLine_interaction_with_read() [ CD ]
Line_2 $$ public void test_readLine_interaction_with_read() -->Line_3 $$ BufferedReader r = new BufferedReader(new StringReader("1\r\n2"))[ CD ]
Line_2 $$ public void test_readLine_interaction_with_read() -->Line_4 $$ assertEquals('1', r.read())[ CD ]
Line_3 $$ BufferedReader r = new BufferedReader(new StringReader("1\r\n2"))-->Line_4 $$ assertEquals('1', r.read())[ FD ]
Line_2 $$ public void test_readLine_interaction_with_read() -->Line_5 $$ assertEquals('\r', r.read())[ CD ]
Line_3 $$ BufferedReader r = new BufferedReader(new StringReader("1\r\n2"))-->Line_5 $$ assertEquals('\r', r.read())[ FD ]
Line_2 $$ public void test_readLine_interaction_with_read() -->Line_6 $$ assertEquals("", r.readLine())[ CD ]
Line_3 $$ BufferedReader r = new BufferedReader(new StringReader("1\r\n2"))-->Line_6 $$ assertEquals("", r.readLine())[ FD ]
Line_2 $$ public void test_readLine_interaction_with_read() -->Line_7 $$ assertEquals("2", r.readLine())[ CD ]
Line_3 $$ BufferedReader r = new BufferedReader(new StringReader("1\r\n2"))-->Line_7 $$ assertEquals("2", r.readLine())[ FD ]
Line_2 $$ public void test_readLine_interaction_with_read() -->Line_8 $$ assertNull(r.readLine())[ CD ]
Line_3 $$ BufferedReader r = new BufferedReader(new StringReader("1\r\n2"))-->Line_8 $$ assertNull(r.readLine())[ FD ]
