Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getCpuMemStats() [ CD ]
Line_2 $$ public void getCpuMemStats() -->Line_3 $$ Runtime rt = Runtime.getRuntime()[ CD ]
Line_3 $$ Runtime rt = Runtime.getRuntime()-->Line_3 $$ Runtime rt = Runtime.getRuntime()[ CD ]
Line_2 $$ public void getCpuMemStats() -->Line_4 $$ long totalMem = rt.totalMemory()[ CD ]
Line_4 $$ long totalMem = rt.totalMemory()-->Line_4 $$ long totalMem = rt.totalMemory()[ CD ]
Line_3 $$ Runtime rt = Runtime.getRuntime()-->Line_4 $$ long totalMem = rt.totalMemory()[ FD ]
Line_2 $$ public void getCpuMemStats() -->Line_5 $$ long maxMem = rt.maxMemory()[ CD ]
Line_5 $$ long maxMem = rt.maxMemory()-->Line_5 $$ long maxMem = rt.maxMemory()[ CD ]
Line_3 $$ Runtime rt = Runtime.getRuntime()-->Line_5 $$ long maxMem = rt.maxMemory()[ FD ]
Line_2 $$ public void getCpuMemStats() -->Line_6 $$ long freeMem = rt.freeMemory()[ CD ]
Line_6 $$ long freeMem = rt.freeMemory()-->Line_6 $$ long freeMem = rt.freeMemory()[ CD ]
Line_3 $$ Runtime rt = Runtime.getRuntime()-->Line_6 $$ long freeMem = rt.freeMemory()[ FD ]
Line_2 $$ public void getCpuMemStats() -->Line_7 $$ return String.format(msg, totalMem / megs, usedMem / megs, maxMem / megs)[ CD ]
Line_7 $$ return String.format(msg, totalMem / megs, usedMem / megs, maxMem / megs)-->Line_7 $$ return String.format(msg, totalMem / megs, usedMem / megs, maxMem / megs)[ CD ]
