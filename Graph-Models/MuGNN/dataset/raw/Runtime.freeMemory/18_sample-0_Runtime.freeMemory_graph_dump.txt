Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getMemory() [ CD ]
Line_2 $$ public void getMemory() -->Line_3 $$ Runtime runtime = Runtime.getRuntime()[ CD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_3 $$ Runtime runtime = Runtime.getRuntime()[ CD ]
Line_2 $$ public void getMemory() -->Line_4 $$ long presentMemory = (runtime.totalMemory() - runtime.freeMemory())[ CD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_4 $$ long presentMemory = (runtime.totalMemory() - runtime.freeMemory())[ FD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_4 $$ long presentMemory = (runtime.totalMemory() - runtime.freeMemory())[ FD ]
Line_2 $$ public void getMemory() -->Line_5 $$ while (presentMemory < memory) [ CD ]
Line_2 $$ public void getMemory() -->Line_2 $$ public void getMemory() [ CD ]
Line_4 $$ long presentMemory = (runtime.totalMemory() - runtime.freeMemory())-->Line_5 $$ while (presentMemory < memory) [ FD ]
Line_5 $$ while (presentMemory < memory) -->Line_8 $$ doGarbageCollection()[ CD ]
Line_5 $$ while (presentMemory < memory) -->Line_9 $$ presentMemory = (runtime.totalMemory() - runtime.freeMemory())[ CD ]
Line_9 $$ presentMemory = (runtime.totalMemory() - runtime.freeMemory())-->Line_9 $$ presentMemory = (runtime.totalMemory() - runtime.freeMemory())[ FD ]
Line_4 $$ long presentMemory = (runtime.totalMemory() - runtime.freeMemory())-->Line_9 $$ presentMemory = (runtime.totalMemory() - runtime.freeMemory())[ FD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_9 $$ presentMemory = (runtime.totalMemory() - runtime.freeMemory())[ FD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_9 $$ presentMemory = (runtime.totalMemory() - runtime.freeMemory())[ FD ]
Line_9 $$ presentMemory = (runtime.totalMemory() - runtime.freeMemory())-->Line_5 $$ while (presentMemory < memory) [ FD ]
Line_9 $$ presentMemory = (runtime.totalMemory() - runtime.freeMemory())-->Line_5 $$ while (presentMemory < memory) [ FD ]
