Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testOnlyPartOfBlobServedWhenResponseContainsBlobRangeHeader(@ArquillianResource URL url) [ CD ]
Line_2 $$ public void testOnlyPartOfBlobServedWhenResponseContainsBlobRangeHeader(@ArquillianResource URL url) -->Line_3 $$ URL pageUrl = new URL(url, "serveblob?name=testrange.txt&mimeType=text/plain&contents=" + CONTENTS + "&blobRange=bytes=2-5")[ CD ]
Line_2 $$ public void testOnlyPartOfBlobServedWhenResponseContainsBlobRangeHeader(@ArquillianResource URL url) -->Line_4 $$ HttpURLConnection connection = (HttpURLConnection) pageUrl.openConnection()[ CD ]
Line_3 $$ URL pageUrl = new URL(url, "serveblob?name=testrange.txt&mimeType=text/plain&contents=" + CONTENTS + "&blobRange=bytes=2-5")-->Line_4 $$ HttpURLConnection connection = (HttpURLConnection) pageUrl.openConnection()[ FD ]
Line_2 $$ public void testOnlyPartOfBlobServedWhenResponseContainsBlobRangeHeader(@ArquillianResource URL url) -->Line_5 $$ String response = readFullyAndClose(connection.getInputStream())[ CD ]
Line_5 $$ String response = readFullyAndClose(connection.getInputStream())-->Line_5 $$ String response = readFullyAndClose(connection.getInputStream())[ CD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) pageUrl.openConnection()-->Line_5 $$ String response = readFullyAndClose(connection.getInputStream())[ FD ]
Line_2 $$ public void testOnlyPartOfBlobServedWhenResponseContainsBlobRangeHeader(@ArquillianResource URL url) -->Line_6 $$ assertEquals(PARTIAL_CONTENT, connection.getResponseCode())[ CD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) pageUrl.openConnection()-->Line_6 $$ assertEquals(PARTIAL_CONTENT, connection.getResponseCode())[ FD ]
Line_2 $$ public void testOnlyPartOfBlobServedWhenResponseContainsBlobRangeHeader(@ArquillianResource URL url) -->Line_7 $$ assertEquals("bytes 2-5/26", connection.getHeaderField("Content-Range"))[ CD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) pageUrl.openConnection()-->Line_7 $$ assertEquals("bytes 2-5/26", connection.getHeaderField("Content-Range"))[ FD ]
Line_2 $$ public void testOnlyPartOfBlobServedWhenResponseContainsBlobRangeHeader(@ArquillianResource URL url) -->Line_8 $$ assertEquals(CONTENTS.substring(2, 5 + 1), response)[ CD ]
Line_5 $$ String response = readFullyAndClose(connection.getInputStream())-->Line_8 $$ assertEquals(CONTENTS.substring(2, 5 + 1), response)[ FD ]
Line_2 $$ public void testOnlyPartOfBlobServedWhenResponseContainsBlobRangeHeader(@ArquillianResource URL url) -->Line_9 $$ assertNull("header should have been removed from response", connection.getHeaderField("X-AppEngine-BlobRange"))[ CD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) pageUrl.openConnection()-->Line_9 $$ assertNull("header should have been removed from response", connection.getHeaderField("X-AppEngine-BlobRange"))[ FD ]
Line_2 $$ public void testOnlyPartOfBlobServedWhenResponseContainsBlobRangeHeader(@ArquillianResource URL url) -->Line_10 $$ connection.disconnect()[ CD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) pageUrl.openConnection()-->Line_10 $$ connection.disconnect()[ FD ]
