Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getInputStream(ClassLoader loader, boolean reload, String resourceName) [ CD ]
Line_2 $$ public void getInputStream(ClassLoader loader, boolean reload, String resourceName) -->Line_3 $$ if (!reload) [ CD ]
Line_2 $$ public void getInputStream(ClassLoader loader, boolean reload, String resourceName) -->Line_3 $$ if (!reload) [ FD ]
Line_3 $$ if (!reload) -->Line_3 $$ if (!reload) [ CD ]
Line_2 $$ public void getInputStream(ClassLoader loader, boolean reload, String resourceName) -->Line_3 $$ if (!reload) [ FD ]
Line_3 $$ if (!reload) -->Line_3 $$ return loader.getResourceAsStream(resourceName)[ CD ]
Line_3 $$ return loader.getResourceAsStream(resourceName)-->Line_3 $$ return loader.getResourceAsStream(resourceName)[ CD ]
Line_2 $$ public void getInputStream(ClassLoader loader, boolean reload, String resourceName) -->Line_3 $$ return loader.getResourceAsStream(resourceName)[ FD ]
Line_2 $$ public void getInputStream(ClassLoader loader, boolean reload, String resourceName) -->Line_3 $$ return loader.getResourceAsStream(resourceName)[ FD ]
Line_2 $$ public void getInputStream(ClassLoader loader, boolean reload, String resourceName) -->Line_4 $$ URL url = loader.getResource(resourceName)[ CD ]
Line_4 $$ URL url = loader.getResource(resourceName)-->Line_4 $$ URL url = loader.getResource(resourceName)[ CD ]
Line_2 $$ public void getInputStream(ClassLoader loader, boolean reload, String resourceName) -->Line_4 $$ URL url = loader.getResource(resourceName)[ FD ]
Line_2 $$ public void getInputStream(ClassLoader loader, boolean reload, String resourceName) -->Line_4 $$ URL url = loader.getResource(resourceName)[ FD ]
Line_2 $$ public void getInputStream(ClassLoader loader, boolean reload, String resourceName) -->Line_5 $$ if (url == null) [ CD ]
Line_4 $$ URL url = loader.getResource(resourceName)-->Line_5 $$ if (url == null) [ FD ]
Line_5 $$ if (url == null) -->Line_5 $$ return null[ CD ]
Line_2 $$ public void getInputStream(ClassLoader loader, boolean reload, String resourceName) -->Line_6 $$ URLConnection connection = url.openConnection()[ CD ]
Line_6 $$ URLConnection connection = url.openConnection()-->Line_6 $$ URLConnection connection = url.openConnection()[ CD ]
Line_4 $$ URL url = loader.getResource(resourceName)-->Line_6 $$ URLConnection connection = url.openConnection()[ FD ]
Line_2 $$ public void getInputStream(ClassLoader loader, boolean reload, String resourceName) -->Line_7 $$ if (connection == null) [ CD ]
Line_6 $$ URLConnection connection = url.openConnection()-->Line_7 $$ if (connection == null) [ FD ]
Line_7 $$ if (connection == null) -->Line_7 $$ return null[ CD ]
Line_2 $$ public void getInputStream(ClassLoader loader, boolean reload, String resourceName) -->Line_8 $$ connection.setUseCaches(false)[ CD ]
Line_6 $$ URLConnection connection = url.openConnection()-->Line_8 $$ connection.setUseCaches(false)[ FD ]
Line_2 $$ public void getInputStream(ClassLoader loader, boolean reload, String resourceName) -->Line_9 $$ return connection.getInputStream()[ CD ]
Line_9 $$ return connection.getInputStream()-->Line_9 $$ return connection.getInputStream()[ CD ]
Line_6 $$ URLConnection connection = url.openConnection()-->Line_9 $$ return connection.getInputStream()[ FD ]
