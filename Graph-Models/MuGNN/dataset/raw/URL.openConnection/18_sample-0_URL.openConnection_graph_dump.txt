Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void awsApiCall(String url) [ CD ]
Line_2 $$ public void awsApiCall(String url) -->Line_3 $$ HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection()[ CD ]
Line_2 $$ public void awsApiCall(String url) -->Line_4 $$ conn.setRequestMethod("GET")[ CD ]
Line_3 $$ HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection()-->Line_4 $$ conn.setRequestMethod("GET")[ FD ]
Line_2 $$ public void awsApiCall(String url) -->Line_5 $$ if (conn.getResponseCode() != 200)[ CD ]
Line_3 $$ HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection()-->Line_5 $$ if (conn.getResponseCode() != 200)[ FD ]
Line_2 $$ public void awsApiCall(String url) -->Line_7 $$ int cl = conn.getContentLength()[ CD ]
Line_7 $$ int cl = conn.getContentLength()-->Line_7 $$ int cl = conn.getContentLength()[ CD ]
Line_3 $$ HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection()-->Line_7 $$ int cl = conn.getContentLength()[ FD ]
Line_3 $$ HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection()-->Line_8 $$ d = new DataInputStream((FilterInputStream) conn.getContent())[ FD ]
Line_2 $$ public void awsApiCall(String url) -->Line_9 $$ d.readFully(b)[ CD ]
Line_2 $$ public void awsApiCall(String url) -->Line_10 $$ return new String(b, StandardCharsets.UTF_8)[ CD ]
Line_2 $$ public void awsApiCall(String url) -->Line_11 $$ FileUtils.close(d)[ CD ]
Line_2 $$ public void awsApiCall(String url) -->Line_12 $$ conn.disconnect()[ CD ]
Line_3 $$ HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection()-->Line_12 $$ conn.disconnect()[ FD ]
