Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void runThreadByLimitedTime(long limitTime, Thread testThread) [ CD ]
Line_2 $$ public void runThreadByLimitedTime(long limitTime, Thread testThread) -->Line_3 $$ testThread.start()[ CD ]
Line_2 $$ public void runThreadByLimitedTime(long limitTime, Thread testThread) -->Line_3 $$ testThread.start()[ FD ]
Line_2 $$ public void runThreadByLimitedTime(long limitTime, Thread testThread) -->Line_4 $$ testThread.join(limitTime)[ CD ]
Line_2 $$ public void runThreadByLimitedTime(long limitTime, Thread testThread) -->Line_4 $$ testThread.join(limitTime)[ FD ]
Line_2 $$ public void runThreadByLimitedTime(long limitTime, Thread testThread) -->Line_4 $$ testThread.join(limitTime)[ FD ]
Line_2 $$ public void runThreadByLimitedTime(long limitTime, Thread testThread) -->Line_5 $$ if (testThread.isAlive()) [ CD ]
Line_2 $$ public void runThreadByLimitedTime(long limitTime, Thread testThread) -->Line_5 $$ if (testThread.isAlive()) [ FD ]
Line_5 $$ if (testThread.isAlive()) -->Line_5 $$ if (testThread.isAlive()) [ CD ]
Line_2 $$ public void runThreadByLimitedTime(long limitTime, Thread testThread) -->Line_5 $$ if (testThread.isAlive()) [ FD ]
Line_5 $$ if (testThread.isAlive()) -->Line_6 $$ testThread.interrupt()[ CD ]
Line_2 $$ public void runThreadByLimitedTime(long limitTime, Thread testThread) -->Line_6 $$ testThread.interrupt()[ FD ]
Line_5 $$ if (testThread.isAlive()) -->Line_7 $$ fail("timeout by " + limitTime / 1000 + " seconds")[ CD ]
