Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void loadStrategyFromClassName(String strategyClassName) [ CD ]
Line_2 $$ public void loadStrategyFromClassName(String strategyClassName) -->Line_3 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()[ CD ]
Line_3 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_3 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()[ CD ]
Line_2 $$ public void loadStrategyFromClassName(String strategyClassName) -->Line_4 $$ if (classLoader != null) [ CD ]
Line_3 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_4 $$ if (classLoader != null) [ FD ]
Line_6 $$ Class<?> clazz = classLoader.loadClass(strategyClassName)-->Line_6 $$ Class<?> clazz = classLoader.loadClass(strategyClassName)[ CD ]
Line_3 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_6 $$ Class<?> clazz = classLoader.loadClass(strategyClassName)[ FD ]
Line_2 $$ public void loadStrategyFromClassName(String strategyClassName) -->Line_6 $$ Class<?> clazz = classLoader.loadClass(strategyClassName)[ FD ]
Line_6 $$ Class<?> clazz = classLoader.loadClass(strategyClassName)-->Line_7 $$ return (CellMappingStrategy) clazz.newInstance()[ FD ]
Line_2 $$ public void loadStrategyFromClassName(String strategyClassName) -->Line_9 $$ LOG.warn("Failed to load HBase cell mapping strategy from class [ FD ]
