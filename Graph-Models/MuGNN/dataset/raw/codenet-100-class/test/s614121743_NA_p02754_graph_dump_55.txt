Line_4 $$ StringTokenizer s = new StringTokenizer(br.readLine())-->Line_6 $$ long blue = Long.parseLong(s.nextToken())[ FD ]
Line_4 $$ StringTokenizer s = new StringTokenizer(br.readLine())-->Line_7 $$ long red = Long.parseLong(s.nextToken())[ FD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_4 $$ StringTokenizer s = new StringTokenizer(br.readLine())[ CD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_6 $$ long blue = Long.parseLong(s.nextToken())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader((System.in)))-->Line_4 $$ StringTokenizer s = new StringTokenizer(br.readLine())[ FD ]
Line_4 $$ StringTokenizer s = new StringTokenizer(br.readLine())-->Line_5 $$ long n = Long.parseLong(s.nextToken())[ FD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_10 $$ System.out.println(totalBlue + Math.min(n % (blue + red), blue))[ CD ]
Line_6 $$ long blue = Long.parseLong(s.nextToken())-->Line_10 $$ System.out.println(totalBlue + Math.min(n % (blue + red), blue))[ FD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_7 $$ long red = Long.parseLong(s.nextToken())[ CD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_9 $$ long totalBlue = blue * periods[ CD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_8 $$ long periods = n / (blue + red)[ CD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader((System.in)))[ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws java.lang.Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_5 $$ long n = Long.parseLong(s.nextToken())[ CD ]
