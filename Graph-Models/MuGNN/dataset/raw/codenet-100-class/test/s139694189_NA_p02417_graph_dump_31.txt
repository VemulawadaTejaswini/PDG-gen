Line_12 $$ for (i = 0; i < input.length(); i++) -->Line_13 $$ String c = input.substring(i, i + 1).toLowerCase()[ CD ]
Line_3 $$ Scanner in = new Scanner(System.in)-->Line_10 $$ while (in.hasNext()) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ String abc = "abcdefghijklmnopqrstuvwxyz"[ CD ]
Line_14 $$ if (map.containsKey(c)) -->Line_15 $$ map.put(c, map.get(c) + 1)[ CD ]
Line_6 $$ int i-->Line_7 $$ for (i = 0; i < abc.length(); i++) [ FD ]
Line_6 $$ int i-->Line_8 $$ map.put(abc.substring(i, i + 1), 0)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ Map<String, Integer> map = new LinkedHashMap<String, Integer>()[ CD ]
Line_5 $$ Map<String, Integer> map = new LinkedHashMap<String, Integer>()-->Line_14 $$ if (map.containsKey(c)) [ FD ]
Line_10 $$ while (in.hasNext()) -->Line_12 $$ for (i = 0; i < input.length(); i++) [ CD ]
Line_13 $$ String c = input.substring(i, i + 1).toLowerCase()-->Line_14 $$ if (map.containsKey(c)) [ FD ]
Line_10 $$ while (in.hasNext()) -->Line_11 $$ String input = in.next()[ CD ]
Line_3 $$ Scanner in = new Scanner(System.in)-->Line_11 $$ String input = in.next()[ FD ]
Line_4 $$ String abc = "abcdefghijklmnopqrstuvwxyz"-->Line_7 $$ for (i = 0; i < abc.length(); i++) [ FD ]
Line_7 $$ for (i = 0; i < abc.length(); i++) -->Line_12 $$ for (i = 0; i < input.length(); i++) [ FD ]
Line_6 $$ int i-->Line_12 $$ for (i = 0; i < input.length(); i++) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (i = 0; i < abc.length(); i++) [ CD ]
Line_4 $$ String abc = "abcdefghijklmnopqrstuvwxyz"-->Line_8 $$ map.put(abc.substring(i, i + 1), 0)[ FD ]
Line_11 $$ String input = in.next()-->Line_13 $$ String c = input.substring(i, i + 1).toLowerCase()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ while (in.hasNext()) [ CD ]
Line_13 $$ String c = input.substring(i, i + 1).toLowerCase()-->Line_15 $$ map.put(c, map.get(c) + 1)[ FD ]
Line_5 $$ Map<String, Integer> map = new LinkedHashMap<String, Integer>()-->Line_8 $$ map.put(abc.substring(i, i + 1), 0)[ FD ]
Line_12 $$ for (i = 0; i < input.length(); i++) -->Line_13 $$ String c = input.substring(i, i + 1).toLowerCase()[ FD ]
Line_5 $$ Map<String, Integer> map = new LinkedHashMap<String, Integer>()-->Line_15 $$ map.put(c, map.get(c) + 1)[ FD ]
Line_7 $$ for (i = 0; i < abc.length(); i++) -->Line_8 $$ map.put(abc.substring(i, i + 1), 0)[ FD ]
Line_19 $$ for (Map.Entry<String, Integer> e : map.entrySet()) -->Line_20 $$ System.out.println(e.getKey() + " : " + e.getValue())[ FD ]
Line_12 $$ for (i = 0; i < input.length(); i++) -->Line_14 $$ if (map.containsKey(c)) [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner in = new Scanner(System.in)[ CD ]
Line_11 $$ String input = in.next()-->Line_12 $$ for (i = 0; i < input.length(); i++) [ FD ]
Line_7 $$ for (i = 0; i < abc.length(); i++) -->Line_8 $$ map.put(abc.substring(i, i + 1), 0)[ CD ]
Line_5 $$ Map<String, Integer> map = new LinkedHashMap<String, Integer>()-->Line_19 $$ for (Map.Entry<String, Integer> e : map.entrySet()) [ FD ]
Line_7 $$ for (i = 0; i < abc.length(); i++) -->Line_13 $$ String c = input.substring(i, i + 1).toLowerCase()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int i[ CD ]
Line_6 $$ int i-->Line_13 $$ String c = input.substring(i, i + 1).toLowerCase()[ FD ]
