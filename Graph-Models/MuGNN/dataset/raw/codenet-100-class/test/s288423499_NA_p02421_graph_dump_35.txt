Line_10 $$ int compareResult = playerAnimal[0].compareTo(playerAnimal[1])-->Line_13 $$ if (compareResult < 0) [ FD ]
Line_11 $$ if (compareResult > 0) -->Line_13 $$ if (compareResult < 0) [ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_4 $$ int player1Score = 0[ CD ]
Line_14 $$ player2Score += 3-->Line_17 $$ player2Score += 1[ FD ]
Line_4 $$ int player1Score = 0-->Line_12 $$ player1Score += 3[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException [ CD ]
Line_8 $$ for (int i = 0; i < turnNum; i++) -->Line_9 $$ String[] playerAnimal = (br.readLine()).split(" ")[ CD ]
Line_10 $$ int compareResult = playerAnimal[0].compareTo(playerAnimal[1])-->Line_11 $$ if (compareResult > 0) [ FD ]
Line_3 $$ int turnNum = 0-->Line_8 $$ for (int i = 0; i < turnNum; i++) [ FD ]
Line_5 $$ int player2Score = 0-->Line_14 $$ player2Score += 3[ FD ]
Line_3 $$ int turnNum = 0-->Line_7 $$ turnNum = Integer.parseInt(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_20 $$ System.out.println(player1Score + " " + player2Score)[ CD ]
Line_10 $$ int compareResult = playerAnimal[0].compareTo(playerAnimal[1])-->Line_15 $$ if (compareResult == 0) [ FD ]
Line_11 $$ if (compareResult > 0) -->Line_12 $$ player1Score += 3[ CD ]
Line_15 $$ if (compareResult == 0) -->Line_17 $$ player2Score += 1[ CD ]
Line_15 $$ if (compareResult == 0) -->Line_16 $$ player1Score += 1[ CD ]
Line_5 $$ int player2Score = 0-->Line_17 $$ player2Score += 1[ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_5 $$ int player2Score = 0[ CD ]
Line_8 $$ for (int i = 0; i < turnNum; i++) -->Line_10 $$ int compareResult = playerAnimal[0].compareTo(playerAnimal[1])[ CD ]
Line_4 $$ int player1Score = 0-->Line_16 $$ player1Score += 1[ FD ]
Line_7 $$ turnNum = Integer.parseInt(br.readLine())-->Line_8 $$ for (int i = 0; i < turnNum; i++) [ FD ]
Line_13 $$ if (compareResult < 0) -->Line_15 $$ if (compareResult == 0) [ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_6 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_8 $$ for (int i = 0; i < turnNum; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_7 $$ turnNum = Integer.parseInt(br.readLine())[ CD ]
Line_6 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_9 $$ String[] playerAnimal = (br.readLine()).split(" ")[ FD ]
Line_6 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_7 $$ turnNum = Integer.parseInt(br.readLine())[ FD ]
Line_8 $$ for (int i = 0; i < turnNum; i++) -->Line_11 $$ if (compareResult > 0) [ CD ]
Line_13 $$ if (compareResult < 0) -->Line_14 $$ player2Score += 3[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_3 $$ int turnNum = 0[ CD ]
Line_12 $$ player1Score += 3-->Line_16 $$ player1Score += 1[ FD ]
