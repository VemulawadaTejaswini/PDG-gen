Line_5 $$ int l = 0-->Line_39 $$ for (int j = 0; j < l; j++) [ FD ]
Line_16 $$ n = Integer.parseInt(st.nextToken())-->Line_20 $$ if (a != n) [ FD ]
Line_14 $$ while (st.hasMoreTokens()) -->Line_15 $$ if (n == 0 && m == 0 && l == 0) [ CD ]
Line_38 $$ for (int i = 0; i < n; i++) -->Line_45 $$ for (int i = 0; i < matrix_C.length; i++) [ FD ]
Line_46 $$ for (int j = 0; j < matrix_C[i].length; j++) -->Line_47 $$ System.out.print(matrix_C[i][j])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ int l = 0[ CD ]
Line_20 $$ if (a != n) -->Line_21 $$ for (int i = 0; i < m; i++) [ CD ]
Line_17 $$ m = Integer.parseInt(st.nextToken())-->Line_40 $$ for (int k = 0; k < m; k++) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ int matrix_A[][] = new int[100][100][ CD ]
Line_10 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_12 $$ while ((line = br.readLine()) != null) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ int m = 0[ CD ]
Line_8 $$ int a = 0-->Line_20 $$ if (a != n) [ FD ]
Line_46 $$ for (int j = 0; j < matrix_C[i].length; j++) -->Line_48 $$ if (!(j == l - 1))[ CD ]
Line_20 $$ if (a != n) -->Line_24 $$ a++[ CD ]
Line_18 $$ l = Integer.parseInt(st.nextToken())-->Line_26 $$ for (int i = 0; i < l; i++) [ FD ]
Line_3 $$ int n = 0-->Line_16 $$ n = Integer.parseInt(st.nextToken())[ FD ]
Line_39 $$ for (int j = 0; j < l; j++) -->Line_40 $$ for (int k = 0; k < m; k++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ int a = 0[ CD ]
Line_45 $$ for (int i = 0; i < matrix_C.length; i++) -->Line_46 $$ for (int j = 0; j < matrix_C[i].length; j++) [ CD ]
Line_12 $$ while ((line = br.readLine()) != null) -->Line_33 $$ if (a == n && b == m) [ CD ]
Line_13 $$ java.util.StringTokenizer st = new StringTokenizer(line, " ")-->Line_14 $$ while (st.hasMoreTokens()) [ FD ]
Line_5 $$ int l = 0-->Line_18 $$ l = Integer.parseInt(st.nextToken())[ FD ]
Line_20 $$ if (a != n) -->Line_29 $$ b++[ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_17 $$ m = Integer.parseInt(st.nextToken())-->Line_21 $$ for (int i = 0; i < m; i++) [ FD ]
Line_4 $$ int m = 0-->Line_17 $$ m = Integer.parseInt(st.nextToken())[ FD ]
Line_15 $$ if (n == 0 && m == 0 && l == 0) -->Line_16 $$ n = Integer.parseInt(st.nextToken())[ CD ]
Line_21 $$ for (int i = 0; i < m; i++) -->Line_45 $$ for (int i = 0; i < matrix_C.length; i++) [ FD ]
Line_20 $$ if (a != n) -->Line_26 $$ for (int i = 0; i < l; i++) [ CD ]
Line_8 $$ int a = 0-->Line_24 $$ a++[ FD ]
Line_5 $$ int l = 0-->Line_26 $$ for (int i = 0; i < l; i++) [ FD ]
Line_13 $$ java.util.StringTokenizer st = new StringTokenizer(line, " ")-->Line_22 $$ matrix_A[a][i] = Integer.parseInt(st.nextToken())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_12 $$ while ((line = br.readLine()) != null) [ CD ]
Line_13 $$ java.util.StringTokenizer st = new StringTokenizer(line, " ")-->Line_17 $$ m = Integer.parseInt(st.nextToken())[ FD ]
Line_4 $$ int m = 0-->Line_40 $$ for (int k = 0; k < m; k++) [ FD ]
Line_3 $$ int n = 0-->Line_38 $$ for (int i = 0; i < n; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ int b = 0[ CD ]
Line_21 $$ for (int i = 0; i < m; i++) -->Line_38 $$ for (int i = 0; i < n; i++) [ FD ]
Line_4 $$ int m = 0-->Line_21 $$ for (int i = 0; i < m; i++) [ FD ]
Line_45 $$ for (int i = 0; i < matrix_C.length; i++) -->Line_50 $$ System.out.println("")[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_11 $$ String line[ CD ]
Line_12 $$ while ((line = br.readLine()) != null) -->Line_13 $$ java.util.StringTokenizer st = new StringTokenizer(line, " ")[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_45 $$ for (int i = 0; i < matrix_C.length; i++) [ CD ]
Line_16 $$ n = Integer.parseInt(st.nextToken())-->Line_38 $$ for (int i = 0; i < n; i++) [ FD ]
Line_26 $$ for (int i = 0; i < l; i++) -->Line_27 $$ matrix_B[b][i] = Integer.parseInt(st.nextToken())[ CD ]
Line_9 $$ int b = 0-->Line_29 $$ b++[ FD ]
Line_39 $$ for (int j = 0; j < l; j++) -->Line_46 $$ for (int j = 0; j < matrix_C[i].length; j++) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_38 $$ for (int i = 0; i < n; i++) [ CD ]
Line_13 $$ java.util.StringTokenizer st = new StringTokenizer(line, " ")-->Line_18 $$ l = Integer.parseInt(st.nextToken())[ FD ]
Line_26 $$ for (int i = 0; i < l; i++) -->Line_45 $$ for (int i = 0; i < matrix_C.length; i++) [ FD ]
Line_13 $$ java.util.StringTokenizer st = new StringTokenizer(line, " ")-->Line_16 $$ n = Integer.parseInt(st.nextToken())[ FD ]
Line_21 $$ for (int i = 0; i < m; i++) -->Line_26 $$ for (int i = 0; i < l; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ int n = 0[ CD ]
Line_15 $$ if (n == 0 && m == 0 && l == 0) -->Line_20 $$ if (a != n) [ CD ]
Line_38 $$ for (int i = 0; i < n; i++) -->Line_39 $$ for (int j = 0; j < l; j++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_37 $$ long matrix_C[][] = new long[n][l][ CD ]
Line_18 $$ l = Integer.parseInt(st.nextToken())-->Line_39 $$ for (int j = 0; j < l; j++) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ int matrix_B[][] = new int[100][100][ CD ]
Line_12 $$ while ((line = br.readLine()) != null) -->Line_14 $$ while (st.hasMoreTokens()) [ CD ]
Line_15 $$ if (n == 0 && m == 0 && l == 0) -->Line_18 $$ l = Integer.parseInt(st.nextToken())[ CD ]
Line_13 $$ java.util.StringTokenizer st = new StringTokenizer(line, " ")-->Line_27 $$ matrix_B[b][i] = Integer.parseInt(st.nextToken())[ FD ]
Line_3 $$ int n = 0-->Line_20 $$ if (a != n) [ FD ]
Line_40 $$ for (int k = 0; k < m; k++) -->Line_41 $$ matrix_C[i][j] += (matrix_A[i][k] * matrix_B[k][j])[ CD ]
Line_15 $$ if (n == 0 && m == 0 && l == 0) -->Line_17 $$ m = Integer.parseInt(st.nextToken())[ CD ]
Line_11 $$ String line-->Line_12 $$ while ((line = br.readLine()) != null) [ FD ]
Line_21 $$ for (int i = 0; i < m; i++) -->Line_22 $$ matrix_A[a][i] = Integer.parseInt(st.nextToken())[ CD ]
Line_26 $$ for (int i = 0; i < l; i++) -->Line_38 $$ for (int i = 0; i < n; i++) [ FD ]
