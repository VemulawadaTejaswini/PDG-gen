Line_4 $$ String line = br.readLine()-->Line_5 $$ int str = line.length()[ FD ]
Line_4 $$ String line = br.readLine()-->Line_10 $$ if (line.charAt(i) == 'Z') [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ int str = line.length()[ CD ]
Line_6 $$ int end = 0-->Line_11 $$ end = Math.max(end, i)[ FD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ String line = br.readLine()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ for (int i = 0; i < line.length(); i++) [ CD ]
Line_8 $$ if (line.charAt(i) == 'A') -->Line_9 $$ str = Math.min(str, i)[ CD ]
Line_4 $$ String line = br.readLine()-->Line_8 $$ if (line.charAt(i) == 'A') [ FD ]
Line_8 $$ if (line.charAt(i) == 'A') -->Line_10 $$ if (line.charAt(i) == 'Z') [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_7 $$ for (int i = 0; i < line.length(); i++) -->Line_11 $$ end = Math.max(end, i)[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ String line = br.readLine()[ CD ]
Line_7 $$ for (int i = 0; i < line.length(); i++) -->Line_10 $$ if (line.charAt(i) == 'Z') [ FD ]
Line_7 $$ for (int i = 0; i < line.length(); i++) -->Line_8 $$ if (line.charAt(i) == 'A') [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_14 $$ System.out.println(end - str + 1)[ CD ]
Line_5 $$ int str = line.length()-->Line_9 $$ str = Math.min(str, i)[ FD ]
Line_10 $$ if (line.charAt(i) == 'Z') -->Line_11 $$ end = Math.max(end, i)[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ int end = 0[ CD ]
Line_7 $$ for (int i = 0; i < line.length(); i++) -->Line_8 $$ if (line.charAt(i) == 'A') [ CD ]
Line_4 $$ String line = br.readLine()-->Line_7 $$ for (int i = 0; i < line.length(); i++) [ FD ]
Line_7 $$ for (int i = 0; i < line.length(); i++) -->Line_9 $$ str = Math.min(str, i)[ FD ]
