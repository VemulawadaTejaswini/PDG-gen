Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ int M = Integer.parseInt(tmp[1])[ CD ]
Line_15 $$ for (int l = X; l > 0; l--) -->Line_16 $$ if (A.contains(l))[ CD ]
Line_8 $$ List<Integer> A = new ArrayList<Integer>()-->Line_16 $$ if (A.contains(l))[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ tmp = br.readLine().split(" ")[ CD ]
Line_18 $$ for (int r = X; r <= N; r++) -->Line_19 $$ if (A.contains(r))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ for (int i = 0; i < M; i++) [ CD ]
Line_10 $$ for (int i = 0; i < M; i++) -->Line_11 $$ A.add(Integer.parseInt(tmp[i]))[ CD ]
Line_5 $$ int N = Integer.parseInt(tmp[0])-->Line_18 $$ for (int r = X; r <= N; r++) [ FD ]
Line_18 $$ for (int r = X; r <= N; r++) -->Line_19 $$ if (A.contains(r))[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ String[] tmp = br.readLine().split(" ")[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ int N = Integer.parseInt(tmp[0])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ int X = Integer.parseInt(tmp[2])[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_9 $$ tmp = br.readLine().split(" ")[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ String[] tmp = br.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ List<Integer> A = new ArrayList<Integer>()[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_14 $$ int countR = 0[ CD ]
Line_8 $$ List<Integer> A = new ArrayList<Integer>()-->Line_19 $$ if (A.contains(r))[ FD ]
Line_6 $$ int M = Integer.parseInt(tmp[1])-->Line_10 $$ for (int i = 0; i < M; i++) [ FD ]
Line_13 $$ int countL = 0-->Line_21 $$ System.out.println(Math.min(countL, countR))[ FD ]
Line_15 $$ for (int l = X; l > 0; l--) -->Line_16 $$ if (A.contains(l))[ FD ]
Line_13 $$ int countL = 0-->Line_16 $$ countL++[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_21 $$ System.out.println(Math.min(countL, countR))[ CD ]
Line_14 $$ int countR = 0-->Line_21 $$ System.out.println(Math.min(countL, countR))[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_13 $$ int countL = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_18 $$ for (int r = X; r <= N; r++) [ CD ]
Line_8 $$ List<Integer> A = new ArrayList<Integer>()-->Line_11 $$ A.add(Integer.parseInt(tmp[i]))[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_15 $$ for (int l = X; l > 0; l--) [ CD ]
Line_14 $$ int countR = 0-->Line_19 $$ countR++[ FD ]
Line_4 $$ String[] tmp = br.readLine().split(" ")-->Line_9 $$ tmp = br.readLine().split(" ")[ FD ]
