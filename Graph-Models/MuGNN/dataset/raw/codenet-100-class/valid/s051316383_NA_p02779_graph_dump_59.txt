Line_6 $$ List<String> list = new ArrayList<String>()-->Line_8 $$ list.add(strArray[i])[ FD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_10 $$ List<String> newList = new ArrayList<String>(new HashSet(list))[ CD ]
Line_7 $$ for (int i = 0; i < length; i++) -->Line_8 $$ list.add(strArray[i])[ CD ]
Line_6 $$ List<String> list = new ArrayList<String>()-->Line_11 $$ if (list.size() == newList.size())[ FD ]
Line_4 $$ int length = Integer.parseInt(br.readLine())-->Line_7 $$ for (int i = 0; i < length; i++) [ FD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ int length = Integer.parseInt(br.readLine())[ FD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_4 $$ int length = Integer.parseInt(br.readLine())[ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_5 $$ String strArray[] = br.readLine().split(" ")[ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_10 $$ List<String> newList = new ArrayList<String>(new HashSet(list))-->Line_11 $$ if (list.size() == newList.size())[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String args[]) throws IOException [ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_6 $$ List<String> list = new ArrayList<String>()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ String strArray[] = br.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_7 $$ for (int i = 0; i < length; i++) [ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_11 $$ if (list.size() == newList.size())[ CD ]
Line_11 $$ if (list.size() == newList.size())-->Line_12 $$ System.out.println("YES")[ CD ]
Line_11 $$ if (list.size() == newList.size())-->Line_14 $$ System.out.println("NO")[ CD ]
