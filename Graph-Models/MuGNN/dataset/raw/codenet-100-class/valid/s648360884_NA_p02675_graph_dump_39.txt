Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ Integer num = Integer.parseInt(String.valueOf(n[n.length - 1]))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ if (Arrays.asList(HonPT).contains(num)) [ CD ]
Line_3 $$ final Integer[] HonPT = new Integer[] -->Line_8 $$ if (Arrays.asList(HonPT).contains(num)) [ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_15 $$ scan.close()[ CD ]
Line_4 $$ final Integer[] PonPT = new Integer[] -->Line_10 $$ if (Arrays.asList(PonPT).contains(num)) [ FD ]
Line_7 $$ Integer num = Integer.parseInt(String.valueOf(n[n.length - 1]))-->Line_8 $$ if (Arrays.asList(HonPT).contains(num)) [ FD ]
Line_10 $$ if (Arrays.asList(PonPT).contains(num)) -->Line_13 $$ System.out.println("bon")[ CD ]
Line_8 $$ if (Arrays.asList(HonPT).contains(num)) -->Line_9 $$ System.out.println("hon")[ CD ]
Line_5 $$ Scanner scan = new Scanner(System.in)-->Line_15 $$ scan.close()[ FD ]
Line_8 $$ if (Arrays.asList(HonPT).contains(num)) -->Line_10 $$ if (Arrays.asList(PonPT).contains(num)) [ CD ]
Line_10 $$ if (Arrays.asList(PonPT).contains(num)) -->Line_11 $$ System.out.println("pon")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ final Integer[] PonPT = new Integer[] [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ char[] n = scan.nextLine().toCharArray()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ final Integer[] HonPT = new Integer[] [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ Scanner scan = new Scanner(System.in)[ CD ]
Line_7 $$ Integer num = Integer.parseInt(String.valueOf(n[n.length - 1]))-->Line_10 $$ if (Arrays.asList(PonPT).contains(num)) [ FD ]
Line_5 $$ Scanner scan = new Scanner(System.in)-->Line_6 $$ char[] n = scan.nextLine().toCharArray()[ FD ]
