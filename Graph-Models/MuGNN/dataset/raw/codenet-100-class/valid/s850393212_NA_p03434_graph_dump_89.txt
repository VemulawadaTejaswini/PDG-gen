Line_8 $$ List<Integer> iCards = new ArrayList()-->Line_10 $$ iCards.add(Integer.parseInt(sCards[i]))[ FD ]
Line_13 $$ int max = 0-->Line_20 $$ bob += max[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ for (int n = 0; n < N; n++) [ CD ]
Line_17 $$ if (n == 0 || n % 2 == 0) -->Line_20 $$ bob += max[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int alice = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int bob = 0[ CD ]
Line_12 $$ for (int n = 0; n < N; n++) -->Line_13 $$ int max = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (int i = 0; i < N; i++) [ CD ]
Line_12 $$ for (int n = 0; n < N; n++) -->Line_22 $$ iCards.remove(iCards.indexOf(max))[ CD ]
Line_13 $$ int max = 0-->Line_15 $$ max = Math.max(max, c)[ FD ]
Line_12 $$ for (int n = 0; n < N; n++) -->Line_17 $$ if (n == 0 || n % 2 == 0) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_24 $$ System.out.println(alice - bob)[ CD ]
Line_5 $$ int bob = 0-->Line_20 $$ bob += max[ FD ]
Line_3 $$ Scanner sc = new java.util.Scanner(System.in)-->Line_7 $$ String[] sCards = sc.nextLine().split(" ")[ FD ]
Line_9 $$ for (int i = 0; i < N; i++) -->Line_10 $$ iCards.add(Integer.parseInt(sCards[i]))[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new java.util.Scanner(System.in)[ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_17 $$ if (n == 0 || n % 2 == 0) -->Line_18 $$ alice += max[ CD ]
Line_6 $$ int N = Integer.parseInt(sc.nextLine())-->Line_9 $$ for (int i = 0; i < N; i++) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int N = Integer.parseInt(sc.nextLine())[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ String[] sCards = sc.nextLine().split(" ")[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ List<Integer> iCards = new ArrayList()[ CD ]
Line_8 $$ List<Integer> iCards = new ArrayList()-->Line_22 $$ iCards.remove(iCards.indexOf(max))[ FD ]
Line_13 $$ int max = 0-->Line_22 $$ iCards.remove(iCards.indexOf(max))[ FD ]
Line_15 $$ max = Math.max(max, c)-->Line_22 $$ iCards.remove(iCards.indexOf(max))[ FD ]
Line_15 $$ max = Math.max(max, c)-->Line_20 $$ bob += max[ FD ]
Line_4 $$ int alice = 0-->Line_18 $$ alice += max[ FD ]
Line_15 $$ max = Math.max(max, c)-->Line_18 $$ alice += max[ FD ]
Line_14 $$ for (int c : iCards) -->Line_15 $$ max = Math.max(max, c)[ FD ]
Line_6 $$ int N = Integer.parseInt(sc.nextLine())-->Line_12 $$ for (int n = 0; n < N; n++) [ FD ]
Line_3 $$ Scanner sc = new java.util.Scanner(System.in)-->Line_6 $$ int N = Integer.parseInt(sc.nextLine())[ FD ]
Line_13 $$ int max = 0-->Line_18 $$ alice += max[ FD ]
