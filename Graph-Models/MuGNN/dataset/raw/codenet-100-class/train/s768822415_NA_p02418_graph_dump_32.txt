Line_13 $$ if (k == original.length) -->Line_14 $$ k = 0[ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_4 $$ String[] original = br.readLine().split("")[ CD ]
Line_16 $$ if (serch[j].equals(original[k])) -->Line_17 $$ count++[ CD ]
Line_20 $$ if (count == serch.length) -->Line_21 $$ flag = 1[ CD ]
Line_8 $$ if (serch[0].equals(original[i])) -->Line_10 $$ int k = i[ CD ]
Line_8 $$ if (serch[0].equals(original[i])) -->Line_9 $$ int j[ CD ]
Line_11 $$ int count = 0-->Line_20 $$ if (count == serch.length) [ FD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ String[] original = br.readLine().split("")[ FD ]
Line_12 $$ for (j = 0; j < serch.length; j++, k++) -->Line_13 $$ if (k == original.length) [ CD ]
Line_7 $$ for (int i = 0; i < original.length; i++) -->Line_8 $$ if (serch[0].equals(original[i])) [ CD ]
Line_8 $$ if (serch[0].equals(original[i])) -->Line_12 $$ for (j = 0; j < serch.length; j++, k++) [ CD ]
Line_10 $$ int k = i-->Line_12 $$ for (j = 0; j < serch.length; j++, k++) [ FD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String args[]) throws IOException [ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_6 $$ int flag = 0[ CD ]
Line_10 $$ int k = i-->Line_13 $$ if (k == original.length) [ FD ]
Line_6 $$ int flag = 0-->Line_25 $$ if (flag == 1) [ FD ]
Line_8 $$ if (serch[0].equals(original[i])) -->Line_20 $$ if (count == serch.length) [ CD ]
Line_14 $$ k = 0-->Line_12 $$ for (j = 0; j < serch.length; j++, k++) [ FD ]
Line_14 $$ k = 0-->Line_13 $$ if (k == original.length) [ FD ]
Line_10 $$ int k = i-->Line_14 $$ k = 0[ FD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_7 $$ for (int i = 0; i < original.length; i++) [ CD ]
Line_21 $$ flag = 1-->Line_25 $$ if (flag == 1) [ FD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_25 $$ if (flag == 1) [ CD ]
Line_12 $$ for (j = 0; j < serch.length; j++, k++) -->Line_16 $$ if (serch[j].equals(original[k])) [ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ String[] serch = br.readLine().split("")[ FD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_5 $$ String[] serch = br.readLine().split("")[ CD ]
Line_25 $$ if (flag == 1) -->Line_26 $$ System.out.println("Yes")[ CD ]
Line_8 $$ if (serch[0].equals(original[i])) -->Line_11 $$ int count = 0[ CD ]
Line_11 $$ int count = 0-->Line_17 $$ count++[ FD ]
Line_25 $$ if (flag == 1) -->Line_28 $$ System.out.println("No")[ CD ]
Line_6 $$ int flag = 0-->Line_21 $$ flag = 1[ FD ]
Line_9 $$ int j-->Line_12 $$ for (j = 0; j < serch.length; j++, k++) [ FD ]
