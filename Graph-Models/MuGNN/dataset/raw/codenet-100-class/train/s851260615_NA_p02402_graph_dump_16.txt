Line_7 $$ long sum = 0-->Line_12 $$ sum += nxt[ FD ]
Line_8 $$ for (int i = 1; i <= n; i++) -->Line_10 $$ if (max < nxt)[ CD ]
Line_9 $$ int nxt = Integer.parseInt(std.next())-->Line_11 $$ min = nxt[ FD ]
Line_3 $$ Scanner std = new Scanner(System.in)-->Line_4 $$ int n = Integer.parseInt(std.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int min = 1000001[ CD ]
Line_8 $$ for (int i = 1; i <= n; i++) -->Line_11 $$ if (nxt < min)[ CD ]
Line_6 $$ int min = 1000001-->Line_11 $$ if (nxt < min)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner std = new Scanner(System.in)[ CD ]
Line_5 $$ int max = -1000001-->Line_10 $$ max = nxt[ FD ]
Line_6 $$ int min = 1000001-->Line_11 $$ min = nxt[ FD ]
Line_9 $$ int nxt = Integer.parseInt(std.next())-->Line_10 $$ if (max < nxt)[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int max = -1000001[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ System.out.println(min + " " + max + " " + sum)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = Integer.parseInt(std.next())[ CD ]
Line_8 $$ for (int i = 1; i <= n; i++) -->Line_12 $$ sum += nxt[ CD ]
Line_5 $$ int max = -1000001-->Line_10 $$ if (max < nxt)[ FD ]
Line_8 $$ for (int i = 1; i <= n; i++) -->Line_9 $$ int nxt = Integer.parseInt(std.next())[ CD ]
Line_4 $$ int n = Integer.parseInt(std.next())-->Line_8 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_9 $$ int nxt = Integer.parseInt(std.next())-->Line_12 $$ sum += nxt[ FD ]
Line_9 $$ int nxt = Integer.parseInt(std.next())-->Line_10 $$ max = nxt[ FD ]
Line_3 $$ Scanner std = new Scanner(System.in)-->Line_9 $$ int nxt = Integer.parseInt(std.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ long sum = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 1; i <= n; i++) [ CD ]
Line_9 $$ int nxt = Integer.parseInt(std.next())-->Line_11 $$ if (nxt < min)[ FD ]
