Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ a[i] = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_12 $$ diff += a[2 * i] - a[2 * i + 1]-->Line_15 $$ diff += a[n - 1][ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ Arrays.sort(a, Comparator.reverseOrder())[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ for (int i = 0; i < n / 2; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ int diff = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ if ((n & 1) == 1)[ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_10 $$ int diff = 0-->Line_12 $$ diff += a[2 * i] - a[2 * i + 1][ FD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_12 $$ diff += a[2 * i] - a[2 * i + 1]-->Line_16 $$ System.out.println(diff)[ FD ]
Line_10 $$ int diff = 0-->Line_16 $$ System.out.println(diff)[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n / 2; i++) [ FD ]
Line_10 $$ int diff = 0-->Line_15 $$ diff += a[n - 1][ FD ]
Line_2 $$ public static void main(String[] args) -->Line_16 $$ System.out.println(diff)[ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_7 $$ a[i] = sc.nextInt()[ CD ]
Line_14 $$ if ((n & 1) == 1)-->Line_15 $$ diff += a[n - 1][ CD ]
Line_15 $$ diff += a[n - 1]-->Line_16 $$ System.out.println(diff)[ FD ]
Line_11 $$ for (int i = 0; i < n / 2; i++) -->Line_12 $$ diff += a[2 * i] - a[2 * i + 1][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ Integer[] a = new Integer[n][ CD ]
Line_5 $$ Integer[] a = new Integer[n]-->Line_9 $$ Arrays.sort(a, Comparator.reverseOrder())[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_4 $$ int n = sc.nextInt()-->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
