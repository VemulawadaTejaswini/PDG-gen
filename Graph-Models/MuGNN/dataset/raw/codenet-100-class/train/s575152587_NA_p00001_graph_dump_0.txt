Line_4 $$ for (int i = 0; i < 3; i++) -->Line_23 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_12 $$ for (int i = 0; i < 3; i++) -->Line_13 $$ tmpTop.add(top3[i])[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_7 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_10 $$ if (h >= 0 && h <= 10000) -->Line_12 $$ for (int i = 0; i < 3; i++) [ CD ]
Line_4 $$ for (int i = 0; i < 3; i++) -->Line_12 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_18 $$ for (int i = 0; i < 3; i++) -->Line_23 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_12 $$ for (int i = 0; i < 3; i++) -->Line_19 $$ top3[i] = tmpTop.get(i)[ FD ]
Line_8 $$ for (int x = 1; x <= 10; x++) -->Line_9 $$ Integer h = Integer.parseInt(in.readLine())[ CD ]
Line_10 $$ if (h >= 0 && h <= 10000) -->Line_11 $$ ArrayList<Integer> tmpTop = new ArrayList<Integer>(4)[ CD ]
Line_12 $$ for (int i = 0; i < 3; i++) -->Line_18 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_18 $$ for (int i = 0; i < 3; i++) -->Line_19 $$ top3[i] = tmpTop.get(i)[ FD ]
Line_11 $$ ArrayList<Integer> tmpTop = new ArrayList<Integer>(4)-->Line_16 $$ Collections.sort(tmpTop)[ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_4 $$ for (int i = 0; i < 3; i++) [ CD ]
Line_11 $$ ArrayList<Integer> tmpTop = new ArrayList<Integer>(4)-->Line_17 $$ Collections.reverse(tmpTop)[ FD ]
Line_4 $$ for (int i = 0; i < 3; i++) -->Line_19 $$ top3[i] = tmpTop.get(i)[ FD ]
Line_23 $$ for (int i = 0; i < 3; i++) -->Line_24 $$ System.out.println(top3[i])[ CD ]
Line_7 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))-->Line_9 $$ Integer h = Integer.parseInt(in.readLine())[ FD ]
Line_4 $$ for (int i = 0; i < 3; i++) -->Line_18 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException [ CD ]
Line_10 $$ if (h >= 0 && h <= 10000) -->Line_17 $$ Collections.reverse(tmpTop)[ CD ]
Line_11 $$ ArrayList<Integer> tmpTop = new ArrayList<Integer>(4)-->Line_15 $$ tmpTop.add(h)[ FD ]
Line_10 $$ if (h >= 0 && h <= 10000) -->Line_18 $$ for (int i = 0; i < 3; i++) [ CD ]
Line_9 $$ Integer h = Integer.parseInt(in.readLine())-->Line_15 $$ tmpTop.add(h)[ FD ]
Line_11 $$ ArrayList<Integer> tmpTop = new ArrayList<Integer>(4)-->Line_13 $$ tmpTop.add(top3[i])[ FD ]
Line_10 $$ if (h >= 0 && h <= 10000) -->Line_15 $$ tmpTop.add(h)[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_3 $$ Integer top3[] = new Integer[3][ CD ]
Line_4 $$ for (int i = 0; i < 3; i++) -->Line_5 $$ top3[i] = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_23 $$ for (int i = 0; i < 3; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_8 $$ for (int x = 1; x <= 10; x++) [ CD ]
Line_11 $$ ArrayList<Integer> tmpTop = new ArrayList<Integer>(4)-->Line_19 $$ top3[i] = tmpTop.get(i)[ FD ]
Line_8 $$ for (int x = 1; x <= 10; x++) -->Line_10 $$ if (h >= 0 && h <= 10000) [ CD ]
Line_18 $$ for (int i = 0; i < 3; i++) -->Line_19 $$ top3[i] = tmpTop.get(i)[ CD ]
Line_12 $$ for (int i = 0; i < 3; i++) -->Line_23 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_10 $$ if (h >= 0 && h <= 10000) -->Line_16 $$ Collections.sort(tmpTop)[ CD ]
