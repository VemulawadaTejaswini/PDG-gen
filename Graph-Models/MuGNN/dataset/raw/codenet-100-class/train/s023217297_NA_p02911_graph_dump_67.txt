Line_8 $$ TreeMap<Integer, Integer> map = new TreeMap<Integer, Integer>()-->Line_12 $$ map.put(a[i], map.get(a[i]) + 1)[ FD ]
Line_9 $$ for (int i = 0; i < a.length; i++) -->Line_31 $$ if (yes.containsKey(i)) [ FD ]
Line_11 $$ if (map.containsKey(a[i])) -->Line_14 $$ map.put(a[i], 1)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ TreeMap<Integer, Integer> map = new TreeMap<Integer, Integer>()[ CD ]
Line_17 $$ if (K > Q) -->Line_18 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_23 $$ long req = Q - K + 1[ CD ]
Line_8 $$ TreeMap<Integer, Integer> map = new TreeMap<Integer, Integer>()-->Line_25 $$ for (Map.Entry<Integer, Integer> e : map.entrySet()) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (int i = 0; i < a.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < a.length; i++) -->Line_30 $$ for (int i = 1; i < N + 1; i++) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int a[] = new int[Q][ CD ]
Line_24 $$ Map<Integer, Integer> yes = new HashMap()-->Line_27 $$ yes.put(e.getKey(), 1)[ FD ]
Line_25 $$ for (Map.Entry<Integer, Integer> e : map.entrySet()) -->Line_27 $$ yes.put(e.getKey(), 1)[ FD ]
Line_4 $$ int N = sc.nextInt()-->Line_18 $$ for (int i = 0; i < N; i++) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ long K = sc.nextLong()[ FD ]
Line_5 $$ long K = sc.nextLong()-->Line_17 $$ if (K > Q) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_24 $$ Map<Integer, Integer> yes = new HashMap()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_30 $$ for (int i = 1; i < N + 1; i++) [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_17 $$ if (K > Q) -->Line_21 $$ return[ CD ]
Line_9 $$ for (int i = 0; i < a.length; i++) -->Line_10 $$ a[i] = sc.nextInt()[ CD ]
Line_31 $$ if (yes.containsKey(i)) -->Line_32 $$ System.out.println("Yes")[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int Q = sc.nextInt()[ CD ]
Line_9 $$ for (int i = 0; i < a.length; i++) -->Line_11 $$ if (map.containsKey(a[i])) [ CD ]
Line_26 $$ if (e.getValue() >= req) -->Line_27 $$ yes.put(e.getKey(), 1)[ CD ]
Line_8 $$ TreeMap<Integer, Integer> map = new TreeMap<Integer, Integer>()-->Line_14 $$ map.put(a[i], 1)[ FD ]
Line_18 $$ for (int i = 0; i < N; i++) -->Line_31 $$ if (yes.containsKey(i)) [ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_10 $$ a[i] = sc.nextInt()[ FD ]
Line_31 $$ if (yes.containsKey(i)) -->Line_34 $$ System.out.println("No")[ CD ]
Line_30 $$ for (int i = 1; i < N + 1; i++) -->Line_31 $$ if (yes.containsKey(i)) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ if (K > Q) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ long K = sc.nextLong()[ CD ]
Line_25 $$ for (Map.Entry<Integer, Integer> e : map.entrySet()) -->Line_26 $$ if (e.getValue() >= req) [ FD ]
Line_30 $$ for (int i = 1; i < N + 1; i++) -->Line_31 $$ if (yes.containsKey(i)) [ CD ]
Line_11 $$ if (map.containsKey(a[i])) -->Line_12 $$ map.put(a[i], map.get(a[i]) + 1)[ CD ]
Line_23 $$ long req = Q - K + 1-->Line_26 $$ if (e.getValue() >= req) [ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ int Q = sc.nextInt()[ FD ]
Line_6 $$ int Q = sc.nextInt()-->Line_17 $$ if (K > Q) [ FD ]
Line_8 $$ TreeMap<Integer, Integer> map = new TreeMap<Integer, Integer>()-->Line_11 $$ if (map.containsKey(a[i])) [ FD ]
Line_18 $$ for (int i = 0; i < N; i++) -->Line_30 $$ for (int i = 1; i < N + 1; i++) [ FD ]
Line_9 $$ for (int i = 0; i < a.length; i++) -->Line_18 $$ for (int i = 0; i < N; i++) [ FD ]
Line_24 $$ Map<Integer, Integer> yes = new HashMap()-->Line_31 $$ if (yes.containsKey(i)) [ FD ]
Line_18 $$ for (int i = 0; i < N; i++) -->Line_19 $$ System.out.println("Yes")[ CD ]
