Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ while (sc.hasNext()) [ CD ]
Line_12 $$ for (int i = 0; i < num; i++) -->Line_13 $$ System.out.println(ans.pollLast())[ CD ]
Line_5 $$ while (sc.hasNext()) -->Line_7 $$ StringBuffer t = new StringBuffer(s)[ CD ]
Line_5 $$ while (sc.hasNext()) -->Line_6 $$ String s = sc.next()[ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ while (sc.hasNext()) [ FD ]
Line_4 $$ ArrayDeque<String> ans = new ArrayDeque<String>()-->Line_13 $$ System.out.println(ans.pollLast())[ FD ]
Line_11 $$ int num = ans.size()-->Line_12 $$ for (int i = 0; i < num; i++) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ for (int i = 0; i < num; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ int num = ans.size()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ String s = sc.next()[ FD ]
Line_7 $$ StringBuffer t = new StringBuffer(s)-->Line_9 $$ ans.push(t.toString())[ FD ]
Line_5 $$ while (sc.hasNext()) -->Line_8 $$ t.reverse()[ CD ]
Line_5 $$ while (sc.hasNext()) -->Line_9 $$ ans.push(t.toString())[ CD ]
Line_4 $$ ArrayDeque<String> ans = new ArrayDeque<String>()-->Line_11 $$ int num = ans.size()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ ArrayDeque<String> ans = new ArrayDeque<String>()[ CD ]
Line_4 $$ ArrayDeque<String> ans = new ArrayDeque<String>()-->Line_9 $$ ans.push(t.toString())[ FD ]
Line_7 $$ StringBuffer t = new StringBuffer(s)-->Line_8 $$ t.reverse()[ FD ]
