Line_9 $$ int vote = Integer.parseInt(sc.next())-->Line_11 $$ allVote += vote[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_10 $$ list.add(vote)[ CD ]
Line_9 $$ int vote = Integer.parseInt(sc.next())-->Line_10 $$ list.add(vote)[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_9 $$ int vote = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ try (Scanner sc = new Scanner(System.in)) -->Line_5 $$ long m = Long.parseLong(sc.next())[ FD ]
Line_4 $$ long n = Long.parseLong(sc.next())-->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_16 $$ if ((double) judge < (double) allVote / (4 * (double) m))-->Line_17 $$ System.out.println("Yes")[ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_7 $$ List<Integer> list = new ArrayList()-->Line_14 $$ Collections.reverse(list)[ FD ]
Line_6 $$ long allVote = 0-->Line_11 $$ allVote += vote[ FD ]
Line_7 $$ List<Integer> list = new ArrayList()-->Line_15 $$ int judge = list.get((int) m - 1)[ FD ]
Line_7 $$ List<Integer> list = new ArrayList()-->Line_10 $$ list.add(vote)[ FD ]
Line_3 $$ try (Scanner sc = new Scanner(System.in)) -->Line_9 $$ int vote = Integer.parseInt(sc.next())[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_11 $$ allVote += vote[ CD ]
Line_7 $$ List<Integer> list = new ArrayList()-->Line_13 $$ Collections.sort(list)[ FD ]
Line_3 $$ try (Scanner sc = new Scanner(System.in)) -->Line_4 $$ long n = Long.parseLong(sc.next())[ FD ]
