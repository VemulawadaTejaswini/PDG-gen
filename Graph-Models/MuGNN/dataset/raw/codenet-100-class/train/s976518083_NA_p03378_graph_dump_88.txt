Line_15 $$ for (int i = x; i > 0; i--) -->Line_16 $$ if (existRyokin[i]) [ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_5 $$ int m = sc.nextInt()[ CD ]
Line_15 $$ for (int i = x; i > 0; i--) -->Line_21 $$ if (existRyokin[i]) [ FD ]
Line_9 $$ for (int i = 0; i < m; i++) -->Line_16 $$ if (existRyokin[i]) [ FD ]
Line_9 $$ for (int i = 0; i < m; i++) -->Line_15 $$ for (int i = x; i > 0; i--) [ FD ]
Line_9 $$ for (int i = 0; i < m; i++) -->Line_20 $$ for (int i = x; i < n; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_20 $$ for (int i = x; i < n; i++) [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException [ CD ]
Line_15 $$ for (int i = x; i > 0; i--) -->Line_20 $$ for (int i = x; i < n; i++) [ FD ]
Line_14 $$ int rightCost = 0-->Line_25 $$ System.out.println(Math.min(leftCost, rightCost))[ FD ]
Line_20 $$ for (int i = x; i < n; i++) -->Line_21 $$ if (existRyokin[i]) [ CD ]
Line_14 $$ int rightCost = 0-->Line_22 $$ rightCost++[ FD ]
Line_13 $$ int leftCost = 0-->Line_17 $$ leftCost++[ FD ]
Line_7 $$ int a-->Line_10 $$ a = sc.nextInt()[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_10 $$ a = sc.nextInt()[ FD ]
Line_9 $$ for (int i = 0; i < m; i++) -->Line_21 $$ if (existRyokin[i]) [ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_9 $$ for (int i = 0; i < m; i++) [ CD ]
Line_13 $$ int leftCost = 0-->Line_25 $$ System.out.println(Math.min(leftCost, rightCost))[ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_15 $$ for (int i = x; i > 0; i--) [ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int m = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_5 $$ int m = sc.nextInt()-->Line_9 $$ for (int i = 0; i < m; i++) [ FD ]
Line_16 $$ if (existRyokin[i]) -->Line_17 $$ leftCost++[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_8 $$ boolean existRyokin[] = new boolean[n][ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_13 $$ int leftCost = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_6 $$ int x = sc.nextInt()[ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_20 $$ for (int i = x; i < n; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_14 $$ int rightCost = 0[ CD ]
Line_20 $$ for (int i = x; i < n; i++) -->Line_21 $$ if (existRyokin[i]) [ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_25 $$ System.out.println(Math.min(leftCost, rightCost))[ CD ]
Line_9 $$ for (int i = 0; i < m; i++) -->Line_11 $$ existRyokin[a] = true[ CD ]
Line_21 $$ if (existRyokin[i]) -->Line_22 $$ rightCost++[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ int x = sc.nextInt()[ FD ]
Line_9 $$ for (int i = 0; i < m; i++) -->Line_10 $$ a = sc.nextInt()[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_15 $$ for (int i = x; i > 0; i--) -->Line_16 $$ if (existRyokin[i]) [ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_7 $$ int a[ CD ]
