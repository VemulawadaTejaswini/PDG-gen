Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_7 $$ int x = scanner.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int c = scanner.nextInt()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int b = scanner.nextInt()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (int i = 0; i <= a; i++) [ CD ]
Line_8 $$ int cnt = 0-->Line_18 $$ System.out.println(cnt)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scanner = new Scanner(System.in)[ CD ]
Line_11 $$ for (int k = 0; k <= c; k++) -->Line_12 $$ if (((500 * i) + (100 * j) + (50 * k)) == x) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int a = scanner.nextInt()[ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_18 $$ System.out.println(cnt)[ CD ]
Line_4 $$ int a = scanner.nextInt()-->Line_9 $$ for (int i = 0; i <= a; i++) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int x = scanner.nextInt()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_4 $$ int a = scanner.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int cnt = 0[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_5 $$ int b = scanner.nextInt()[ FD ]
Line_8 $$ int cnt = 0-->Line_13 $$ cnt++[ FD ]
Line_5 $$ int b = scanner.nextInt()-->Line_10 $$ for (int j = 0; j <= b; j++) [ FD ]
Line_6 $$ int c = scanner.nextInt()-->Line_11 $$ for (int k = 0; k <= c; k++) [ FD ]
Line_10 $$ for (int j = 0; j <= b; j++) -->Line_11 $$ for (int k = 0; k <= c; k++) [ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_6 $$ int c = scanner.nextInt()[ FD ]
Line_12 $$ if (((500 * i) + (100 * j) + (50 * k)) == x) -->Line_13 $$ cnt++[ CD ]
Line_9 $$ for (int i = 0; i <= a; i++) -->Line_10 $$ for (int j = 0; j <= b; j++) [ CD ]
Line_7 $$ int x = scanner.nextInt()-->Line_12 $$ if (((500 * i) + (100 * j) + (50 * k)) == x) [ FD ]
