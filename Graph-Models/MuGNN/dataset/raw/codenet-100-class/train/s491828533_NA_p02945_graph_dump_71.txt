Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_10 $$ int max = -100000000-->Line_14 $$ System.out.println(max)[ FD ]
Line_5 $$ int B = sc.nextInt()-->Line_8 $$ ans[1] = A - B[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int A = sc.nextInt()[ FD ]
Line_5 $$ int B = sc.nextInt()-->Line_9 $$ ans[2] = A * B[ FD ]
Line_5 $$ int B = sc.nextInt()-->Line_7 $$ ans[0] = A + B[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_10 $$ int max = -100000000[ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_12 $$ max = Math.max(max, ans[i])-->Line_14 $$ System.out.println(max)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ int B = sc.nextInt()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ int A = sc.nextInt()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_14 $$ System.out.println(max)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_11 $$ for (int i = 0; i < 3; i++) [ CD ]
Line_10 $$ int max = -100000000-->Line_12 $$ max = Math.max(max, ans[i])[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int B = sc.nextInt()[ FD ]
Line_4 $$ int A = sc.nextInt()-->Line_7 $$ ans[0] = A + B[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_9 $$ ans[2] = A * B[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ int[] ans = new int[3][ CD ]
Line_11 $$ for (int i = 0; i < 3; i++) -->Line_12 $$ max = Math.max(max, ans[i])[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ ans[1] = A - B[ CD ]
Line_4 $$ int A = sc.nextInt()-->Line_9 $$ ans[2] = A * B[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ ans[0] = A + B[ CD ]
Line_4 $$ int A = sc.nextInt()-->Line_8 $$ ans[1] = A - B[ FD ]
