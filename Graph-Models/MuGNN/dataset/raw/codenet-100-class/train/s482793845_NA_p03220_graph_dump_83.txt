Line_7 $$ Map<Integer, Double> map = new TreeMap()-->Line_11 $$ System.out.println(map.entrySet().stream().sorted(Map.Entry.comparingByValue()).findFirst().get().getKey())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int T = scanner.nextInt()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = scanner.nextInt()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_9 $$ map.put(i + 1, Math.abs(A - (T - (scanner.nextInt() * 0.006))))[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ double A = (double) scanner.nextInt()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < N; i++) [ CD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_9 $$ map.put(i + 1, Math.abs(A - (T - (scanner.nextInt() * 0.006))))[ CD ]
Line_4 $$ int N = scanner.nextInt()-->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_6 $$ double A = (double) scanner.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ System.out.println(map.entrySet().stream().sorted(Map.Entry.comparingByValue()).findFirst().get().getKey())[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ Map<Integer, Double> map = new TreeMap()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scanner = new Scanner(System.in)[ CD ]
Line_7 $$ Map<Integer, Double> map = new TreeMap()-->Line_9 $$ map.put(i + 1, Math.abs(A - (T - (scanner.nextInt() * 0.006))))[ FD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_5 $$ int T = scanner.nextInt()[ FD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_4 $$ int N = scanner.nextInt()[ FD ]
