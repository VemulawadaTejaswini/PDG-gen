Line_6 $$ int sTimes = 0-->Line_11 $$ sTimes = Integer.parseInt(br.readLine())[ FD ]
Line_9 $$ if ((line = br.readLine()).equals("-"))-->Line_10 $$ cards.append(line)[ FD ]
Line_8 $$ while (true) -->Line_10 $$ cards.append(line)[ CD ]
Line_12 $$ for (int i = 0; i < sTimes; i++) -->Line_13 $$ cuts = Integer.parseInt(br.readLine())[ CD ]
Line_3 $$ try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) -->Line_13 $$ cuts = Integer.parseInt(br.readLine())[ FD ]
Line_13 $$ cuts = Integer.parseInt(br.readLine())-->Line_15 $$ cards.delete(0, cuts)[ FD ]
Line_3 $$ try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) -->Line_9 $$ if ((line = br.readLine()).equals("-"))[ FD ]
Line_5 $$ StringBuilder cards = new StringBuilder()-->Line_15 $$ cards.delete(0, cuts)[ FD ]
Line_5 $$ StringBuilder cards = new StringBuilder()-->Line_17 $$ System.out.println(cards)[ FD ]
Line_7 $$ int cuts = 0-->Line_15 $$ cards.delete(0, cuts)[ FD ]
Line_4 $$ String line-->Line_10 $$ cards.append(line)[ FD ]
Line_8 $$ while (true) -->Line_18 $$ cards.setLength(0)[ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_5 $$ StringBuilder cards = new StringBuilder()-->Line_18 $$ cards.setLength(0)[ FD ]
Line_5 $$ StringBuilder cards = new StringBuilder()-->Line_10 $$ cards.append(line)[ FD ]
Line_5 $$ StringBuilder cards = new StringBuilder()-->Line_14 $$ cards.append(cards.substring(0, cuts))[ FD ]
Line_8 $$ while (true) -->Line_12 $$ for (int i = 0; i < sTimes; i++) [ CD ]
Line_12 $$ for (int i = 0; i < sTimes; i++) -->Line_14 $$ cards.append(cards.substring(0, cuts))[ CD ]
Line_6 $$ int sTimes = 0-->Line_12 $$ for (int i = 0; i < sTimes; i++) [ FD ]
Line_12 $$ for (int i = 0; i < sTimes; i++) -->Line_15 $$ cards.delete(0, cuts)[ CD ]
Line_8 $$ while (true) -->Line_9 $$ if ((line = br.readLine()).equals("-"))[ CD ]
Line_7 $$ int cuts = 0-->Line_14 $$ cards.append(cards.substring(0, cuts))[ FD ]
Line_8 $$ while (true) -->Line_11 $$ sTimes = Integer.parseInt(br.readLine())[ CD ]
Line_3 $$ try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) -->Line_11 $$ sTimes = Integer.parseInt(br.readLine())[ FD ]
Line_13 $$ cuts = Integer.parseInt(br.readLine())-->Line_14 $$ cards.append(cards.substring(0, cuts))[ FD ]
Line_4 $$ String line-->Line_9 $$ if ((line = br.readLine()).equals("-"))[ FD ]
Line_7 $$ int cuts = 0-->Line_13 $$ cuts = Integer.parseInt(br.readLine())[ FD ]
Line_8 $$ while (true) -->Line_17 $$ System.out.println(cards)[ CD ]
Line_11 $$ sTimes = Integer.parseInt(br.readLine())-->Line_12 $$ for (int i = 0; i < sTimes; i++) [ FD ]
