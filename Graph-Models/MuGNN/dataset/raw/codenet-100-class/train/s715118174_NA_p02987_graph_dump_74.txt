Line_4 $$ List<Long> s = stdin.nextLine().chars().boxed().collect(Collectors.groupingBy(Function.identity(), Collectors.counting())).values().stream().collect(Collectors.toList())-->Line_11 $$ String ans = s.equals(Arrays.asList(2L, 2L)) ? "Yes" : "No"[ FD ]
Line_11 $$ String ans = s.equals(Arrays.asList(2L, 2L)) ? "Yes" : "No"-->Line_12 $$ System.out.println(ans)[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner stdin = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ String ans = s.equals(Arrays.asList(2L, 2L)) ? "Yes" : "No"[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ System.out.println(ans)[ CD ]
Line_3 $$ Scanner stdin = new Scanner(System.in)-->Line_4 $$ List<Long> s = stdin.nextLine().chars().boxed().collect(Collectors.groupingBy(Function.identity(), Collectors.counting())).values().stream().collect(Collectors.toList())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ List<Long> s = stdin.nextLine().chars().boxed().collect(Collectors.groupingBy(Function.identity(), Collectors.counting())).values().stream().collect(Collectors.toList())[ CD ]
