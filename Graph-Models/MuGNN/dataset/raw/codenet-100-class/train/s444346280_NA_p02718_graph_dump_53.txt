Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_6 $$ StringTokenizer st = new StringTokenizer(infile.readLine())[ CD ]
Line_20 $$ if (x >= lim)-->Line_21 $$ cnt++[ CD ]
Line_8 $$ int M = Integer.parseInt(st.nextToken())-->Line_22 $$ if (cnt >= M)[ FD ]
Line_13 $$ int sum = 0-->Line_17 $$ lim *= sum[ FD ]
Line_18 $$ int cnt = 0-->Line_21 $$ cnt++[ FD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_8 $$ int M = Integer.parseInt(st.nextToken())[ CD ]
Line_1 $$ public class Main -->Line_3 $$ public static void main(String omkar[]) throws Exception [ CD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_7 $$ int N = Integer.parseInt(st.nextToken())[ CD ]
Line_14 $$ for (int x : arr) sum += x-->Line_15 $$ sum += x[ FD ]
Line_15 $$ sum += x-->Line_17 $$ lim *= sum[ FD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_11 $$ for (int i = 0; i < N; i++) arr[i] = Integer.parseInt(st.nextToken())[ CD ]
Line_13 $$ int sum = 0-->Line_15 $$ sum += x[ FD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_16 $$ double lim = 1.0 / (4 * M)[ CD ]
Line_14 $$ for (int x : arr) sum += x-->Line_20 $$ if (x >= lim)[ FD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_22 $$ if (cnt >= M)[ CD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_10 $$ st = new StringTokenizer(infile.readLine())[ CD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_18 $$ int cnt = 0[ CD ]
Line_11 $$ for (int i = 0; i < N; i++) arr[i] = Integer.parseInt(st.nextToken())-->Line_12 $$ arr[i] = Integer.parseInt(st.nextToken())[ CD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_17 $$ lim *= sum[ CD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_13 $$ int sum = 0[ CD ]
Line_22 $$ if (cnt >= M)-->Line_23 $$ System.out.println("Yes")[ CD ]
Line_18 $$ int cnt = 0-->Line_22 $$ if (cnt >= M)[ FD ]
Line_16 $$ double lim = 1.0 / (4 * M)-->Line_20 $$ if (x >= lim)[ FD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(infile.readLine())-->Line_7 $$ int N = Integer.parseInt(st.nextToken())[ FD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(infile.readLine())-->Line_10 $$ st = new StringTokenizer(infile.readLine())[ FD ]
Line_7 $$ int N = Integer.parseInt(st.nextToken())-->Line_11 $$ for (int i = 0; i < N; i++) arr[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(infile.readLine())-->Line_12 $$ arr[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_16 $$ double lim = 1.0 / (4 * M)-->Line_17 $$ lim *= sum[ FD ]
Line_5 $$ BufferedReader infile = new BufferedReader(new InputStreamReader(System.in))-->Line_10 $$ st = new StringTokenizer(infile.readLine())[ FD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_5 $$ BufferedReader infile = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_22 $$ if (cnt >= M)-->Line_25 $$ System.out.println("No")[ CD ]
Line_10 $$ st = new StringTokenizer(infile.readLine())-->Line_12 $$ arr[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_17 $$ lim *= sum-->Line_20 $$ if (x >= lim)[ FD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_9 $$ int[] arr = new int[N][ CD ]
Line_5 $$ BufferedReader infile = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ StringTokenizer st = new StringTokenizer(infile.readLine())[ FD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(infile.readLine())-->Line_8 $$ int M = Integer.parseInt(st.nextToken())[ FD ]
