Line_10 $$ double theta = Math.abs(hTheta - mTHeta)-->Line_18 $$ ans = Math.sqrt(bDash * bDash + Math.sin(Math.toRadians(theta)) * a * Math.sin(Math.toRadians(theta)) * a)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_23 $$ System.out.println(ans)[ CD ]
Line_12 $$ double bDash = 0-->Line_20 $$ bDash = b - (Math.cos(Math.toRadians(theta)) * a)[ FD ]
Line_10 $$ double theta = Math.abs(hTheta - mTHeta)-->Line_15 $$ if (theta > 180) [ FD ]
Line_5 $$ double b = sc.nextDouble()-->Line_20 $$ bDash = b - (Math.cos(Math.toRadians(theta)) * a)[ FD ]
Line_15 $$ if (theta > 180) -->Line_16 $$ theta = 360 - theta[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ double a = sc.nextDouble()[ FD ]
Line_10 $$ double theta = Math.abs(hTheta - mTHeta)-->Line_20 $$ bDash = b - (Math.cos(Math.toRadians(theta)) * a)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ double a = sc.nextDouble()[ CD ]
Line_11 $$ double ans = 0-->Line_13 $$ ans = Math.abs(b - a)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ double m = sc.nextDouble()[ CD ]
Line_10 $$ double theta = Math.abs(hTheta - mTHeta)-->Line_16 $$ theta = 360 - theta[ FD ]
Line_16 $$ theta = 360 - theta-->Line_17 $$ bDash = b - (Math.cos(Math.toRadians(theta)) * a)[ FD ]
Line_15 $$ if (theta > 180) -->Line_20 $$ bDash = b - (Math.cos(Math.toRadians(theta)) * a)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ double mTHeta = 6 * m[ CD ]
Line_15 $$ if (theta > 180) -->Line_17 $$ bDash = b - (Math.cos(Math.toRadians(theta)) * a)[ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_17 $$ bDash = b - (Math.cos(Math.toRadians(theta)) * a)-->Line_20 $$ bDash = b - (Math.cos(Math.toRadians(theta)) * a)[ FD ]
Line_14 $$ ans = b + a-->Line_21 $$ ans = Math.sqrt(bDash * bDash + Math.sin(Math.toRadians(theta)) * a * Math.sin(Math.toRadians(theta)) * a)[ FD ]
Line_10 $$ double theta = Math.abs(hTheta - mTHeta)-->Line_21 $$ ans = Math.sqrt(bDash * bDash + Math.sin(Math.toRadians(theta)) * a * Math.sin(Math.toRadians(theta)) * a)[ FD ]
Line_15 $$ if (theta > 180) -->Line_21 $$ ans = Math.sqrt(bDash * bDash + Math.sin(Math.toRadians(theta)) * a * Math.sin(Math.toRadians(theta)) * a)[ CD ]
Line_11 $$ double ans = 0-->Line_23 $$ System.out.println(ans)[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ double b = sc.nextDouble()[ FD ]
Line_15 $$ if (theta > 180) -->Line_18 $$ ans = Math.sqrt(bDash * bDash + Math.sin(Math.toRadians(theta)) * a * Math.sin(Math.toRadians(theta)) * a)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ if (theta == 0 || theta == 360)[ CD ]
Line_16 $$ theta = 360 - theta-->Line_21 $$ ans = Math.sqrt(bDash * bDash + Math.sin(Math.toRadians(theta)) * a * Math.sin(Math.toRadians(theta)) * a)[ FD ]
Line_5 $$ double b = sc.nextDouble()-->Line_14 $$ ans = b + a[ FD ]
Line_11 $$ double ans = 0-->Line_14 $$ ans = b + a[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ double b = sc.nextDouble()[ CD ]
Line_13 $$ ans = Math.abs(b - a)-->Line_18 $$ ans = Math.sqrt(bDash * bDash + Math.sin(Math.toRadians(theta)) * a * Math.sin(Math.toRadians(theta)) * a)[ FD ]
Line_13 $$ ans = Math.abs(b - a)-->Line_23 $$ System.out.println(ans)[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ double h = sc.nextDouble()[ FD ]
Line_16 $$ theta = 360 - theta-->Line_18 $$ ans = Math.sqrt(bDash * bDash + Math.sin(Math.toRadians(theta)) * a * Math.sin(Math.toRadians(theta)) * a)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ double bDash = 0[ CD ]
Line_14 $$ ans = b + a-->Line_18 $$ ans = Math.sqrt(bDash * bDash + Math.sin(Math.toRadians(theta)) * a * Math.sin(Math.toRadians(theta)) * a)[ FD ]
Line_14 $$ if (theta == 180)-->Line_15 $$ if (theta > 180) [ CD ]
Line_13 $$ if (theta == 0 || theta == 360)-->Line_14 $$ if (theta == 180)[ CD ]
Line_12 $$ double bDash = 0-->Line_17 $$ bDash = b - (Math.cos(Math.toRadians(theta)) * a)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ double hTheta = 30 * h + 0.5 * m[ CD ]
Line_14 $$ ans = b + a-->Line_23 $$ System.out.println(ans)[ FD ]
Line_13 $$ ans = Math.abs(b - a)-->Line_14 $$ ans = b + a[ FD ]
Line_10 $$ double theta = Math.abs(hTheta - mTHeta)-->Line_17 $$ bDash = b - (Math.cos(Math.toRadians(theta)) * a)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ double theta = Math.abs(hTheta - mTHeta)[ CD ]
Line_21 $$ ans = Math.sqrt(bDash * bDash + Math.sin(Math.toRadians(theta)) * a * Math.sin(Math.toRadians(theta)) * a)-->Line_23 $$ System.out.println(ans)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ double ans = 0[ CD ]
Line_4 $$ double a = sc.nextDouble()-->Line_14 $$ ans = b + a[ FD ]
Line_11 $$ double ans = 0-->Line_18 $$ ans = Math.sqrt(bDash * bDash + Math.sin(Math.toRadians(theta)) * a * Math.sin(Math.toRadians(theta)) * a)[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ double m = sc.nextDouble()[ FD ]
Line_13 $$ ans = Math.abs(b - a)-->Line_21 $$ ans = Math.sqrt(bDash * bDash + Math.sin(Math.toRadians(theta)) * a * Math.sin(Math.toRadians(theta)) * a)[ FD ]
Line_18 $$ ans = Math.sqrt(bDash * bDash + Math.sin(Math.toRadians(theta)) * a * Math.sin(Math.toRadians(theta)) * a)-->Line_21 $$ ans = Math.sqrt(bDash * bDash + Math.sin(Math.toRadians(theta)) * a * Math.sin(Math.toRadians(theta)) * a)[ FD ]
Line_18 $$ ans = Math.sqrt(bDash * bDash + Math.sin(Math.toRadians(theta)) * a * Math.sin(Math.toRadians(theta)) * a)-->Line_23 $$ System.out.println(ans)[ FD ]
Line_10 $$ double theta = Math.abs(hTheta - mTHeta)-->Line_14 $$ if (theta == 180)[ FD ]
Line_16 $$ theta = 360 - theta-->Line_20 $$ bDash = b - (Math.cos(Math.toRadians(theta)) * a)[ FD ]
Line_5 $$ double b = sc.nextDouble()-->Line_17 $$ bDash = b - (Math.cos(Math.toRadians(theta)) * a)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ double h = sc.nextDouble()[ CD ]
Line_11 $$ double ans = 0-->Line_21 $$ ans = Math.sqrt(bDash * bDash + Math.sin(Math.toRadians(theta)) * a * Math.sin(Math.toRadians(theta)) * a)[ FD ]
