Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ String[] matrixStr = br.readLine().split(" ")[ FD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_12 $$ String[] inputStr = br.readLine().split(" ")[ FD ]
Line_8 $$ int colNum = Integer.parseInt(matrixStr[1])-->Line_13 $$ for (int j = 0; j < colNum; j++) [ FD ]
Line_20 $$ for (int j = 0; j < colNum; j++) -->Line_21 $$ for (int i = 0; i < rowNum; i++) [ CD ]
Line_13 $$ for (int j = 0; j < colNum; j++) -->Line_15 $$ resultArray[i][colNum] = resultArray[i][colNum] + resultArray[i][j][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ int rowNum = Integer.parseInt(matrixStr[0])[ CD ]
Line_11 $$ for (int i = 0; i < rowNum; i++) -->Line_12 $$ String[] inputStr = br.readLine().split(" ")[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ int lastNum = 0[ CD ]
Line_10 $$ int lastNum = 0-->Line_25 $$ lastNum = lastNum + resultArray[rowNum][j][ FD ]
Line_20 $$ for (int j = 0; j < colNum; j++) -->Line_25 $$ lastNum = lastNum + resultArray[rowNum][j][ CD ]
Line_13 $$ for (int j = 0; j < colNum; j++) -->Line_20 $$ for (int j = 0; j < colNum; j++) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ String[] matrixStr = br.readLine().split(" ")[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_27 $$ sb.append(lastNum + "\n")[ CD ]
Line_11 $$ for (int i = 0; i < rowNum; i++) -->Line_13 $$ for (int j = 0; j < colNum; j++) [ CD ]
Line_5 $$ StringBuilder sb = new StringBuilder()-->Line_24 $$ sb.append(resultArray[rowNum][j] + " ")[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_5 $$ StringBuilder sb = new StringBuilder()-->Line_27 $$ sb.append(lastNum + "\n")[ FD ]
Line_11 $$ for (int i = 0; i < rowNum; i++) -->Line_18 $$ sb.append(resultArray[i][colNum] + "\n")[ CD ]
Line_20 $$ for (int j = 0; j < colNum; j++) -->Line_24 $$ sb.append(resultArray[rowNum][j] + " ")[ CD ]
Line_8 $$ int colNum = Integer.parseInt(matrixStr[1])-->Line_20 $$ for (int j = 0; j < colNum; j++) [ FD ]
Line_11 $$ for (int i = 0; i < rowNum; i++) -->Line_21 $$ for (int i = 0; i < rowNum; i++) [ FD ]
Line_5 $$ StringBuilder sb = new StringBuilder()-->Line_18 $$ sb.append(resultArray[i][colNum] + "\n")[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ int colNum = Integer.parseInt(matrixStr[1])[ CD ]
Line_5 $$ StringBuilder sb = new StringBuilder()-->Line_16 $$ sb.append(resultArray[i][j] + " ")[ FD ]
Line_13 $$ for (int j = 0; j < colNum; j++) -->Line_16 $$ sb.append(resultArray[i][j] + " ")[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ int[][] resultArray = new int[rowNum + 1][colNum + 1][ CD ]
Line_7 $$ int rowNum = Integer.parseInt(matrixStr[0])-->Line_21 $$ for (int i = 0; i < rowNum; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_11 $$ for (int i = 0; i < rowNum; i++) [ CD ]
Line_13 $$ for (int j = 0; j < colNum; j++) -->Line_14 $$ resultArray[i][j] = Integer.parseInt(inputStr[j])[ CD ]
Line_7 $$ int rowNum = Integer.parseInt(matrixStr[0])-->Line_11 $$ for (int i = 0; i < rowNum; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_20 $$ for (int j = 0; j < colNum; j++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_28 $$ System.out.print(sb.toString())[ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_21 $$ for (int i = 0; i < rowNum; i++) -->Line_22 $$ resultArray[rowNum][j] = resultArray[rowNum][j] + resultArray[i][j][ CD ]
Line_5 $$ StringBuilder sb = new StringBuilder()-->Line_28 $$ System.out.print(sb.toString())[ FD ]
