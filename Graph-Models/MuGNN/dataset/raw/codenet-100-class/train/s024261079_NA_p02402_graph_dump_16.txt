Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ String line = br.readLine().trim()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ br.close()[ CD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_14 $$ min = Math.min(min, v)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_18 $$ System.out.println(min + " " + max + " " + sum)[ CD ]
Line_11 $$ long sum = 0-->Line_16 $$ sum += v[ FD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ line = br.readLine().trim()[ FD ]
Line_6 $$ line = br.readLine().trim()-->Line_7 $$ String[] arr = line.split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ final int n = Integer.parseInt(line)[ CD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_15 $$ max = Math.max(max, v)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ line = br.readLine().trim()[ CD ]
Line_13 $$ long v = Long.parseLong(arr[i])-->Line_14 $$ min = Math.min(min, v)[ FD ]
Line_4 $$ String line = br.readLine().trim()-->Line_7 $$ String[] arr = line.split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_9 $$ long min = 1000000[ CD ]
Line_4 $$ String line = br.readLine().trim()-->Line_5 $$ final int n = Integer.parseInt(line)[ FD ]
Line_10 $$ long max = -1000000-->Line_15 $$ max = Math.max(max, v)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_12 $$ for (int i = 0; i < n; i++) [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_16 $$ sum += v[ CD ]
Line_9 $$ long min = 1000000-->Line_14 $$ min = Math.min(min, v)[ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_13 $$ long v = Long.parseLong(arr[i])[ CD ]
Line_13 $$ long v = Long.parseLong(arr[i])-->Line_16 $$ sum += v[ FD ]
Line_5 $$ final int n = Integer.parseInt(line)-->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_10 $$ long max = -1000000[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ String line = br.readLine().trim()[ FD ]
Line_4 $$ String line = br.readLine().trim()-->Line_6 $$ line = br.readLine().trim()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ String[] arr = line.split(" ")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_11 $$ long sum = 0[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_8 $$ br.close()[ FD ]
Line_13 $$ long v = Long.parseLong(arr[i])-->Line_15 $$ max = Math.max(max, v)[ FD ]
