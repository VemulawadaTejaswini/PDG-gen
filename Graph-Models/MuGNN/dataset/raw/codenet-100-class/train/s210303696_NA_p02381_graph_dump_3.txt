Line_6 $$ while (true) -->Line_19 $$ ave /= n[ CD ]
Line_6 $$ while (true) -->Line_20 $$ for (int i = 0; i < n; i++) [ CD ]
Line_5 $$ int n-->Line_20 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ n = Integer.parseInt(br.readLine())-->Line_23 $$ alpha /= n[ FD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_20 $$ for (int i = 0; i < n; i++) [ FD ]
Line_17 $$ ave += line[i]-->Line_19 $$ ave /= n[ FD ]
Line_12 $$ double ave = 0-->Line_17 $$ ave += line[i][ FD ]
Line_5 $$ int n-->Line_19 $$ ave /= n[ FD ]
Line_5 $$ int n-->Line_23 $$ alpha /= n[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ while (true) [ CD ]
Line_23 $$ alpha /= n-->Line_24 $$ sb.append(Math.sqrt(alpha)).append("\n")[ FD ]
Line_6 $$ while (true) -->Line_11 $$ String[] str = br.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_11 $$ String[] str = br.readLine().split(" ")[ FD ]
Line_6 $$ while (true) -->Line_13 $$ double alpha = 0[ CD ]
Line_13 $$ double alpha = 0-->Line_23 $$ alpha /= n[ FD ]
Line_5 $$ int n-->Line_7 $$ n = Integer.parseInt(br.readLine())[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_7 $$ n = Integer.parseInt(br.readLine())-->Line_8 $$ if (n == 0) [ FD ]
Line_6 $$ while (true) -->Line_8 $$ if (n == 0) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_26 $$ System.out.print(sb.toString())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_7 $$ n = Integer.parseInt(br.readLine())[ FD ]
Line_7 $$ n = Integer.parseInt(br.readLine())-->Line_20 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ n = Integer.parseInt(br.readLine())-->Line_19 $$ ave /= n[ FD ]
Line_6 $$ while (true) -->Line_24 $$ sb.append(Math.sqrt(alpha)).append("\n")[ CD ]
Line_13 $$ double alpha = 0-->Line_21 $$ alpha += Math.pow((line[i] - ave), 2)[ FD ]
Line_6 $$ while (true) -->Line_15 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ int n[ CD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_17 $$ ave += line[i][ CD ]
Line_5 $$ int n-->Line_15 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ while (true) -->Line_23 $$ alpha /= n[ CD ]
Line_21 $$ alpha += Math.pow((line[i] - ave), 2)-->Line_23 $$ alpha /= n[ FD ]
Line_6 $$ while (true) -->Line_12 $$ double ave = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_12 $$ double ave = 0-->Line_19 $$ ave /= n[ FD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_16 $$ line[i] = Double.parseDouble(str[i])[ CD ]
Line_5 $$ int n-->Line_8 $$ if (n == 0) [ FD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_24 $$ sb.append(Math.sqrt(alpha)).append("\n")[ FD ]
Line_13 $$ double alpha = 0-->Line_24 $$ sb.append(Math.sqrt(alpha)).append("\n")[ FD ]
Line_20 $$ for (int i = 0; i < n; i++) -->Line_21 $$ alpha += Math.pow((line[i] - ave), 2)[ CD ]
Line_6 $$ while (true) -->Line_14 $$ double[] line = new double[n][ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_26 $$ System.out.print(sb.toString())[ FD ]
Line_6 $$ while (true) -->Line_7 $$ n = Integer.parseInt(br.readLine())[ CD ]
Line_7 $$ n = Integer.parseInt(br.readLine())-->Line_15 $$ for (int i = 0; i < n; i++) [ FD ]
Line_21 $$ alpha += Math.pow((line[i] - ave), 2)-->Line_24 $$ sb.append(Math.sqrt(alpha)).append("\n")[ FD ]
