Line_17 $$ String charToString = String.valueOf(taroChar[i])-->Line_19 $$ charToString = String.valueOf(hanakoChar[i])[ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_7 $$ int taroWin = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_9 $$ for (int kaisuu = 0; kaisuu < n; kaisuu++) [ CD ]
Line_9 $$ for (int kaisuu = 0; kaisuu < n; kaisuu++) -->Line_12 $$ taro = taro + "0"[ CD ]
Line_8 $$ int hanakoWin = 0-->Line_23 $$ hanakoWin -= 1[ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_35 $$ System.out.println(taroWin + " " + hanakoWin)[ CD ]
Line_19 $$ charToString = String.valueOf(hanakoChar[i])-->Line_18 $$ byte[] taroNumber = charToString.getBytes("US-ASCII")[ FD ]
Line_19 $$ charToString = String.valueOf(hanakoChar[i])-->Line_20 $$ byte[] hanakoNumber = charToString.getBytes("US-ASCII")[ FD ]
Line_5 $$ String taro-->Line_16 $$ for (int i = 0; i < taro.length() && i < hanako.length(); i++) [ FD ]
Line_12 $$ taro = taro + "0"-->Line_16 $$ for (int i = 0; i < taro.length() && i < hanako.length(); i++) [ FD ]
Line_11 $$ hanako = scan.next()-->Line_16 $$ for (int i = 0; i < taro.length() && i < hanako.length(); i++) [ FD ]
Line_13 $$ hanako = hanako + "0"-->Line_16 $$ for (int i = 0; i < taro.length() && i < hanako.length(); i++) [ FD ]
Line_27 $$ hanakoWin += 2-->Line_33 $$ hanakoWin += 1[ FD ]
Line_16 $$ for (int i = 0; i < taro.length() && i < hanako.length(); i++) -->Line_20 $$ byte[] hanakoNumber = charToString.getBytes("US-ASCII")[ CD ]
Line_7 $$ int taroWin = 0-->Line_22 $$ taroWin += 2[ FD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_11 $$ hanako = scan.next()[ FD ]
Line_9 $$ for (int kaisuu = 0; kaisuu < n; kaisuu++) -->Line_14 $$ char[] taroChar = taro.toCharArray()[ CD ]
Line_9 $$ for (int kaisuu = 0; kaisuu < n; kaisuu++) -->Line_33 $$ hanakoWin += 1[ CD ]
Line_17 $$ String charToString = String.valueOf(taroChar[i])-->Line_20 $$ byte[] hanakoNumber = charToString.getBytes("US-ASCII")[ FD ]
Line_11 $$ hanako = scan.next()-->Line_13 $$ hanako = hanako + "0"[ FD ]
Line_21 $$ if (taroNumber[0] > hanakoNumber[0]) -->Line_26 $$ if (taroNumber[0] < hanakoNumber[0]) [ CD ]
Line_28 $$ taroWin -= 1-->Line_32 $$ taroWin += 1[ FD ]
Line_23 $$ hanakoWin -= 1-->Line_27 $$ hanakoWin += 2[ FD ]
Line_12 $$ taro = taro + "0"-->Line_14 $$ char[] taroChar = taro.toCharArray()[ FD ]
Line_16 $$ for (int i = 0; i < taro.length() && i < hanako.length(); i++) -->Line_21 $$ if (taroNumber[0] > hanakoNumber[0]) [ CD ]
Line_9 $$ for (int kaisuu = 0; kaisuu < n; kaisuu++) -->Line_11 $$ hanako = scan.next()[ CD ]
Line_5 $$ String taro-->Line_14 $$ char[] taroChar = taro.toCharArray()[ FD ]
Line_9 $$ for (int kaisuu = 0; kaisuu < n; kaisuu++) -->Line_10 $$ taro = scan.next()[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_6 $$ String hanako[ CD ]
Line_21 $$ if (taroNumber[0] > hanakoNumber[0]) -->Line_23 $$ hanakoWin -= 1[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_10 $$ taro = scan.next()[ FD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_8 $$ int hanakoWin = 0[ CD ]
Line_9 $$ for (int kaisuu = 0; kaisuu < n; kaisuu++) -->Line_16 $$ for (int i = 0; i < taro.length() && i < hanako.length(); i++) [ CD ]
Line_10 $$ taro = scan.next()-->Line_12 $$ taro = taro + "0"[ FD ]
Line_23 $$ hanakoWin -= 1-->Line_33 $$ hanakoWin += 1[ FD ]
Line_11 $$ hanako = scan.next()-->Line_15 $$ char[] hanakoChar = hanako.toCharArray()[ FD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_4 $$ int n = scan.nextInt()[ FD ]
Line_17 $$ String charToString = String.valueOf(taroChar[i])-->Line_18 $$ byte[] taroNumber = charToString.getBytes("US-ASCII")[ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_3 $$ Scanner scan = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_4 $$ int n = scan.nextInt()[ CD ]
Line_16 $$ for (int i = 0; i < taro.length() && i < hanako.length(); i++) -->Line_17 $$ String charToString = String.valueOf(taroChar[i])[ CD ]
Line_9 $$ for (int kaisuu = 0; kaisuu < n; kaisuu++) -->Line_13 $$ hanako = hanako + "0"[ CD ]
Line_6 $$ String hanako-->Line_13 $$ hanako = hanako + "0"[ FD ]
Line_5 $$ String taro-->Line_10 $$ taro = scan.next()[ FD ]
Line_7 $$ int taroWin = 0-->Line_32 $$ taroWin += 1[ FD ]
Line_5 $$ String taro-->Line_12 $$ taro = taro + "0"[ FD ]
Line_10 $$ taro = scan.next()-->Line_14 $$ char[] taroChar = taro.toCharArray()[ FD ]
Line_6 $$ String hanako-->Line_15 $$ char[] hanakoChar = hanako.toCharArray()[ FD ]
Line_9 $$ for (int kaisuu = 0; kaisuu < n; kaisuu++) -->Line_32 $$ taroWin += 1[ CD ]
Line_26 $$ if (taroNumber[0] < hanakoNumber[0]) -->Line_28 $$ taroWin -= 1[ CD ]
Line_4 $$ int n = scan.nextInt()-->Line_9 $$ for (int kaisuu = 0; kaisuu < n; kaisuu++) [ FD ]
Line_16 $$ for (int i = 0; i < taro.length() && i < hanako.length(); i++) -->Line_18 $$ byte[] taroNumber = charToString.getBytes("US-ASCII")[ CD ]
Line_6 $$ String hanako-->Line_11 $$ hanako = scan.next()[ FD ]
Line_16 $$ for (int i = 0; i < taro.length() && i < hanako.length(); i++) -->Line_19 $$ charToString = String.valueOf(hanakoChar[i])[ CD ]
Line_22 $$ taroWin += 2-->Line_32 $$ taroWin += 1[ FD ]
Line_9 $$ for (int kaisuu = 0; kaisuu < n; kaisuu++) -->Line_15 $$ char[] hanakoChar = hanako.toCharArray()[ CD ]
Line_10 $$ taro = scan.next()-->Line_16 $$ for (int i = 0; i < taro.length() && i < hanako.length(); i++) [ FD ]
Line_21 $$ if (taroNumber[0] > hanakoNumber[0]) -->Line_22 $$ taroWin += 2[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_5 $$ String taro[ CD ]
Line_8 $$ int hanakoWin = 0-->Line_33 $$ hanakoWin += 1[ FD ]
Line_13 $$ hanako = hanako + "0"-->Line_15 $$ char[] hanakoChar = hanako.toCharArray()[ FD ]
Line_8 $$ int hanakoWin = 0-->Line_27 $$ hanakoWin += 2[ FD ]
Line_22 $$ taroWin += 2-->Line_28 $$ taroWin -= 1[ FD ]
Line_26 $$ if (taroNumber[0] < hanakoNumber[0]) -->Line_27 $$ hanakoWin += 2[ CD ]
Line_6 $$ String hanako-->Line_16 $$ for (int i = 0; i < taro.length() && i < hanako.length(); i++) [ FD ]
Line_7 $$ int taroWin = 0-->Line_28 $$ taroWin -= 1[ FD ]
