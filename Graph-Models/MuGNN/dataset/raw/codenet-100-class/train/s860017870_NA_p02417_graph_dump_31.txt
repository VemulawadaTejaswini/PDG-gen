Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ while ((line = br.readLine()) != null) [ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ String line = ""[ CD ]
Line_6 $$ while ((line = br.readLine()) != null) -->Line_7 $$ for (int i = 0; i < line.length(); i++) [ FD ]
Line_16 $$ StringBuilder sb = new StringBuilder()-->Line_18 $$ sb.append(c).append(" : ")[ FD ]
Line_6 $$ while ((line = br.readLine()) != null) -->Line_7 $$ for (int i = 0; i < line.length(); i++) [ CD ]
Line_16 $$ StringBuilder sb = new StringBuilder()-->Line_21 $$ sb.append(ans.get(keyChar))[ FD ]
Line_7 $$ for (int i = 0; i < line.length(); i++) -->Line_8 $$ String str = Character.toString(line.charAt(i)).toLowerCase()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_16 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_20 $$ if (ans.containsKey(keyChar)) -->Line_21 $$ sb.append(ans.get(keyChar))[ CD ]
Line_4 $$ String line = ""-->Line_8 $$ String str = Character.toString(line.charAt(i)).toLowerCase()[ FD ]
Line_8 $$ String str = Character.toString(line.charAt(i)).toLowerCase()-->Line_12 $$ ans.put(str, 1)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_17 $$ for (char c = 'a'; c <= 'z'; c++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ while ((line = br.readLine()) != null) [ CD ]
Line_17 $$ for (char c = 'a'; c <= 'z'; c++) -->Line_19 $$ String keyChar = Character.toString(c)[ FD ]
Line_7 $$ for (int i = 0; i < line.length(); i++) -->Line_9 $$ if (ans.containsKey(str)) [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_17 $$ for (char c = 'a'; c <= 'z'; c++) -->Line_25 $$ sb.append("\n")[ CD ]
Line_9 $$ if (ans.containsKey(str)) -->Line_10 $$ ans.put(str, ans.get(str) + 1)[ CD ]
Line_5 $$ HashMap<String, Integer> ans = new HashMap<String, Integer>()-->Line_12 $$ ans.put(str, 1)[ FD ]
Line_19 $$ String keyChar = Character.toString(c)-->Line_21 $$ sb.append(ans.get(keyChar))[ FD ]
Line_5 $$ HashMap<String, Integer> ans = new HashMap<String, Integer>()-->Line_10 $$ ans.put(str, ans.get(str) + 1)[ FD ]
Line_9 $$ if (ans.containsKey(str)) -->Line_12 $$ ans.put(str, 1)[ CD ]
Line_17 $$ for (char c = 'a'; c <= 'z'; c++) -->Line_18 $$ sb.append(c).append(" : ")[ FD ]
Line_16 $$ StringBuilder sb = new StringBuilder()-->Line_27 $$ System.out.print(sb.toString())[ FD ]
Line_4 $$ String line = ""-->Line_7 $$ for (int i = 0; i < line.length(); i++) [ FD ]
Line_8 $$ String str = Character.toString(line.charAt(i)).toLowerCase()-->Line_9 $$ if (ans.containsKey(str)) [ FD ]
Line_4 $$ String line = ""-->Line_6 $$ while ((line = br.readLine()) != null) [ FD ]
Line_17 $$ for (char c = 'a'; c <= 'z'; c++) -->Line_18 $$ sb.append(c).append(" : ")[ CD ]
Line_16 $$ StringBuilder sb = new StringBuilder()-->Line_23 $$ sb.append("0")[ FD ]
Line_16 $$ StringBuilder sb = new StringBuilder()-->Line_25 $$ sb.append("\n")[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_27 $$ System.out.print(sb.toString())[ CD ]
Line_5 $$ HashMap<String, Integer> ans = new HashMap<String, Integer>()-->Line_20 $$ if (ans.containsKey(keyChar)) [ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ HashMap<String, Integer> ans = new HashMap<String, Integer>()[ CD ]
Line_17 $$ for (char c = 'a'; c <= 'z'; c++) -->Line_20 $$ if (ans.containsKey(keyChar)) [ CD ]
Line_8 $$ String str = Character.toString(line.charAt(i)).toLowerCase()-->Line_10 $$ ans.put(str, ans.get(str) + 1)[ FD ]
Line_20 $$ if (ans.containsKey(keyChar)) -->Line_23 $$ sb.append("0")[ CD ]
Line_6 $$ while ((line = br.readLine()) != null) -->Line_8 $$ String str = Character.toString(line.charAt(i)).toLowerCase()[ FD ]
Line_7 $$ for (int i = 0; i < line.length(); i++) -->Line_8 $$ String str = Character.toString(line.charAt(i)).toLowerCase()[ CD ]
Line_19 $$ String keyChar = Character.toString(c)-->Line_20 $$ if (ans.containsKey(keyChar)) [ FD ]
Line_5 $$ HashMap<String, Integer> ans = new HashMap<String, Integer>()-->Line_21 $$ sb.append(ans.get(keyChar))[ FD ]
Line_5 $$ HashMap<String, Integer> ans = new HashMap<String, Integer>()-->Line_9 $$ if (ans.containsKey(str)) [ FD ]
Line_17 $$ for (char c = 'a'; c <= 'z'; c++) -->Line_19 $$ String keyChar = Character.toString(c)[ CD ]
