Line_4 $$ int numRoutes = sc.nextInt()-->Line_8 $$ for (int i = 0; i < numRoutes; i++) [ FD ]
Line_13 $$ for (int i = 0; i < numRoutes; i++) -->Line_22 $$ optimalRoute = i[ FD ]
Line_8 $$ for (int i = 0; i < numRoutes; i++) -->Line_9 $$ c[i] = sc.nextInt()[ CD ]
Line_25 $$ if (optimalRoute == -1) -->Line_28 $$ System.out.println(c[optimalRoute])[ CD ]
Line_8 $$ for (int i = 0; i < numRoutes; i++) -->Line_10 $$ t[i] = sc.nextInt()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int numRoutes = sc.nextInt()[ CD ]
Line_12 $$ int optimalRoute = -1-->Line_25 $$ if (optimalRoute == -1) [ FD ]
Line_13 $$ for (int i = 0; i < numRoutes; i++) -->Line_14 $$ if (t[i] > timeLimit) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int timeLimit = sc.nextInt()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_25 $$ if (optimalRoute == -1) [ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ c[i] = sc.nextInt()[ FD ]
Line_8 $$ for (int i = 0; i < numRoutes; i++) -->Line_13 $$ for (int i = 0; i < numRoutes; i++) [ FD ]
Line_18 $$ optimalRoute = i-->Line_17 $$ if (optimalRoute == -1) [ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_13 $$ for (int i = 0; i < numRoutes; i++) -->Line_17 $$ if (optimalRoute == -1) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < numRoutes; i++) [ CD ]
Line_25 $$ if (optimalRoute == -1) -->Line_26 $$ System.out.println("TLE")[ CD ]
Line_13 $$ for (int i = 0; i < numRoutes; i++) -->Line_21 $$ if (c[i] < c[optimalRoute]) [ CD ]
Line_8 $$ for (int i = 0; i < numRoutes; i++) -->Line_18 $$ optimalRoute = i[ FD ]
Line_12 $$ int optimalRoute = -1-->Line_18 $$ optimalRoute = i[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ for (int i = 0; i < numRoutes; i++) [ CD ]
Line_12 $$ int optimalRoute = -1-->Line_17 $$ if (optimalRoute == -1) [ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_10 $$ t[i] = sc.nextInt()[ FD ]
Line_21 $$ if (c[i] < c[optimalRoute]) -->Line_22 $$ optimalRoute = i[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ int optimalRoute = -1[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int[] c = new int[numRoutes][ CD ]
Line_18 $$ optimalRoute = i-->Line_22 $$ optimalRoute = i[ FD ]
Line_18 $$ optimalRoute = i-->Line_25 $$ if (optimalRoute == -1) [ FD ]
Line_22 $$ optimalRoute = i-->Line_25 $$ if (optimalRoute == -1) [ FD ]
Line_22 $$ optimalRoute = i-->Line_17 $$ if (optimalRoute == -1) [ FD ]
Line_13 $$ for (int i = 0; i < numRoutes; i++) -->Line_18 $$ optimalRoute = i[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int[] t = new int[numRoutes][ CD ]
Line_8 $$ for (int i = 0; i < numRoutes; i++) -->Line_22 $$ optimalRoute = i[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int numRoutes = sc.nextInt()[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int timeLimit = sc.nextInt()[ FD ]
Line_4 $$ int numRoutes = sc.nextInt()-->Line_13 $$ for (int i = 0; i < numRoutes; i++) [ FD ]
Line_12 $$ int optimalRoute = -1-->Line_22 $$ optimalRoute = i[ FD ]
Line_17 $$ if (optimalRoute == -1) -->Line_18 $$ optimalRoute = i[ CD ]
Line_5 $$ int timeLimit = sc.nextInt()-->Line_14 $$ if (t[i] > timeLimit) [ FD ]
