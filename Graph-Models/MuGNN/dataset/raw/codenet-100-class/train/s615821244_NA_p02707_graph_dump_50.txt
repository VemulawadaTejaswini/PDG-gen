Line_2 $$ public static void main(String[] args) -->Line_20 $$ sc.close()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int[] a = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ for (int i = 0; i < n; i++) [ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_17 $$ for (int i = 0; i < n; i++) [ FD ]
Line_14 $$ if (a[i] != 0)-->Line_15 $$ ans[a[i] - 1]++[ CD ]
Line_8 $$ for (int i = 0; i < n - 1; i++) -->Line_17 $$ for (int i = 0; i < n; i++) [ FD ]
Line_5 $$ int n = sc.nextInt()-->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ boolean f = false[ CD ]
Line_5 $$ int n = sc.nextInt()-->Line_17 $$ for (int i = 0; i < n; i++) [ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_17 $$ for (int i = 0; i < n; i++) -->Line_18 $$ System.out.println(ans[i])[ CD ]
Line_8 $$ for (int i = 0; i < n - 1; i++) -->Line_10 $$ ans[i] = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int n = sc.nextInt()[ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_14 $$ if (a[i] != 0)[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_20 $$ sc.close()[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int n = sc.nextInt()[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ a[i] = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ ans[n - 1] = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int[] ans = new int[n][ CD ]
Line_8 $$ for (int i = 0; i < n - 1; i++) -->Line_9 $$ a[i] = sc.nextInt()[ CD ]
Line_8 $$ for (int i = 0; i < n - 1; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
