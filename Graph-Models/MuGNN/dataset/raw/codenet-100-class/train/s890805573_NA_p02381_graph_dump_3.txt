Line_19 $$ n = sc.nextInt()-->Line_13 $$ ave /= n * 1.0[ FD ]
Line_5 $$ while (n != 0) -->Line_8 $$ double val = 0.0[ CD ]
Line_5 $$ while (n != 0) -->Line_18 $$ System.out.printf("%f\n", sgm)[ CD ]
Line_5 $$ while (n != 0) -->Line_17 $$ double sgm = Math.sqrt(val)[ CD ]
Line_7 $$ double ave = 0.0-->Line_13 $$ ave /= n * 1.0[ FD ]
Line_4 $$ int n = sc.nextInt()-->Line_5 $$ while (n != 0) [ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_19 $$ n = sc.nextInt()[ FD ]
Line_5 $$ while (n != 0) -->Line_13 $$ ave /= n * 1.0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_8 $$ double val = 0.0-->Line_15 $$ val += (score[i] - ave) * (score[i] - ave)[ FD ]
Line_15 $$ val += (score[i] - ave) * (score[i] - ave)-->Line_17 $$ double sgm = Math.sqrt(val)[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_14 $$ for (int i = 0; i < n; i++) val += (score[i] - ave) * (score[i] - ave)-->Line_15 $$ val += (score[i] - ave) * (score[i] - ave)[ CD ]
Line_16 $$ val /= n * 1.0-->Line_17 $$ double sgm = Math.sqrt(val)[ FD ]
Line_5 $$ while (n != 0) -->Line_16 $$ val /= n * 1.0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_5 $$ while (n != 0) -->Line_14 $$ for (int i = 0; i < n; i++) val += (score[i] - ave) * (score[i] - ave)[ CD ]
Line_5 $$ while (n != 0) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_21 $$ sc.close()[ CD ]
Line_7 $$ double ave = 0.0-->Line_11 $$ ave += score[i][ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_10 $$ score[i] = sc.nextInt()[ CD ]
Line_15 $$ val += (score[i] - ave) * (score[i] - ave)-->Line_16 $$ val /= n * 1.0[ FD ]
Line_4 $$ int n = sc.nextInt()-->Line_19 $$ n = sc.nextInt()[ FD ]
Line_4 $$ int n = sc.nextInt()-->Line_16 $$ val /= n * 1.0[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_10 $$ score[i] = sc.nextInt()[ FD ]
Line_4 $$ int n = sc.nextInt()-->Line_14 $$ for (int i = 0; i < n; i++) val += (score[i] - ave) * (score[i] - ave)[ FD ]
Line_8 $$ double val = 0.0-->Line_16 $$ val /= n * 1.0[ FD ]
Line_5 $$ while (n != 0) -->Line_6 $$ int[] score = new int[n][ CD ]
Line_5 $$ while (n != 0) -->Line_19 $$ n = sc.nextInt()[ CD ]
Line_19 $$ n = sc.nextInt()-->Line_16 $$ val /= n * 1.0[ FD ]
Line_11 $$ ave += score[i]-->Line_13 $$ ave /= n * 1.0[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_21 $$ sc.close()[ FD ]
Line_19 $$ n = sc.nextInt()-->Line_5 $$ while (n != 0) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_11 $$ ave += score[i][ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_14 $$ for (int i = 0; i < n; i++) val += (score[i] - ave) * (score[i] - ave)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ while (n != 0) [ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_5 $$ while (n != 0) -->Line_7 $$ double ave = 0.0[ CD ]
Line_8 $$ double val = 0.0-->Line_17 $$ double sgm = Math.sqrt(val)[ FD ]
Line_4 $$ int n = sc.nextInt()-->Line_13 $$ ave /= n * 1.0[ FD ]
