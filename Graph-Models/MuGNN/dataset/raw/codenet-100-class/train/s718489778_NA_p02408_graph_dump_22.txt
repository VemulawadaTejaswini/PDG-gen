Line_3 $$ int n-->Line_15 $$ for (int i = 0; i < n; i++) [ FD ]
Line_18 $$ if (token[0].equals("S")) -->Line_20 $$ if (token[0].equals("H")) [ CD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_16 $$ token = br.readLine().split(" ")[ CD ]
Line_31 $$ for (int i = 0; i < 13; i++) -->Line_37 $$ for (int i = 0; i < 13; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_13 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_28 $$ for (int i = 0; i < 13; i++) -->Line_37 $$ for (int i = 0; i < 13; i++) [ FD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_31 $$ for (int i = 0; i < 13; i++) [ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException [ CD ]
Line_31 $$ for (int i = 0; i < 13; i++) -->Line_32 $$ if (!H[i])[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_4 $$ String[] token[ CD ]
Line_37 $$ for (int i = 0; i < 13; i++) -->Line_38 $$ if (!D[i])[ CD ]
Line_34 $$ for (int i = 0; i < 13; i++) -->Line_37 $$ for (int i = 0; i < 13; i++) [ FD ]
Line_24 $$ if (token[0].equals("D")) -->Line_25 $$ D[rank - 1] = true[ CD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_37 $$ for (int i = 0; i < 13; i++) [ FD ]
Line_20 $$ if (token[0].equals("H")) -->Line_21 $$ H[rank - 1] = true[ CD ]
Line_28 $$ for (int i = 0; i < 13; i++) -->Line_29 $$ if (!S[i])[ CD ]
Line_18 $$ if (token[0].equals("S")) -->Line_19 $$ S[rank - 1] = true[ CD ]
Line_10 $$ for (int i = 0; i < 13; i++) -->Line_31 $$ for (int i = 0; i < 13; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_10 $$ for (int i = 0; i < 13; i++) [ CD ]
Line_31 $$ for (int i = 0; i < 13; i++) -->Line_34 $$ for (int i = 0; i < 13; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_7 $$ boolean[] H = new boolean[13][ CD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_17 $$ rank = Integer.parseInt(token[1])[ CD ]
Line_34 $$ for (int i = 0; i < 13; i++) -->Line_35 $$ if (!C[i])[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_14 $$ n = Integer.parseInt(br.readLine())[ CD ]
Line_14 $$ n = Integer.parseInt(br.readLine())-->Line_15 $$ for (int i = 0; i < n; i++) [ FD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_18 $$ if (token[0].equals("S")) [ CD ]
Line_13 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_14 $$ n = Integer.parseInt(br.readLine())[ FD ]
Line_22 $$ if (token[0].equals("C")) -->Line_24 $$ if (token[0].equals("D")) [ CD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_34 $$ for (int i = 0; i < 13; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_37 $$ for (int i = 0; i < 13; i++) [ CD ]
Line_10 $$ for (int i = 0; i < 13; i++) -->Line_15 $$ for (int i = 0; i < n; i++) [ FD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_28 $$ for (int i = 0; i < 13; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_8 $$ boolean[] C = new boolean[13][ CD ]
Line_4 $$ String[] token-->Line_16 $$ token = br.readLine().split(" ")[ FD ]
Line_28 $$ for (int i = 0; i < 13; i++) -->Line_34 $$ for (int i = 0; i < 13; i++) [ FD ]
Line_10 $$ for (int i = 0; i < 13; i++) -->Line_37 $$ for (int i = 0; i < 13; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_3 $$ int n[ CD ]
Line_28 $$ for (int i = 0; i < 13; i++) -->Line_31 $$ for (int i = 0; i < 13; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_28 $$ for (int i = 0; i < 13; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_34 $$ for (int i = 0; i < 13; i++) [ CD ]
Line_10 $$ for (int i = 0; i < 13; i++) -->Line_28 $$ for (int i = 0; i < 13; i++) [ FD ]
Line_10 $$ for (int i = 0; i < 13; i++) -->Line_11 $$ S[i] = H[i] = C[i] = D[i] = false[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_5 $$ int rank[ CD ]
Line_3 $$ int n-->Line_14 $$ n = Integer.parseInt(br.readLine())[ FD ]
Line_5 $$ int rank-->Line_17 $$ rank = Integer.parseInt(token[1])[ FD ]
Line_20 $$ if (token[0].equals("H")) -->Line_22 $$ if (token[0].equals("C")) [ CD ]
Line_22 $$ if (token[0].equals("C")) -->Line_23 $$ C[rank - 1] = true[ CD ]
Line_10 $$ for (int i = 0; i < 13; i++) -->Line_34 $$ for (int i = 0; i < 13; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_15 $$ for (int i = 0; i < n; i++) [ CD ]
Line_13 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_16 $$ token = br.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_31 $$ for (int i = 0; i < 13; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_6 $$ boolean[] S = new boolean[13][ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_9 $$ boolean[] D = new boolean[13][ CD ]
