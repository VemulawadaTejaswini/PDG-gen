Line_8 $$ for (String s : line.split(" ")) -->Line_9 $$ ls.add(Long.valueOf(s))[ FD ]
Line_13 $$ long others = 0-->Line_15 $$ others += ls.get(i)[ FD ]
Line_6 $$ List<Long> ls = new ArrayList<Long>()-->Line_12 $$ long max = ls.get(ls.size() - 1)[ FD ]
Line_17 $$ if (max < others) -->Line_18 $$ System.out.println("Yes")[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_12 $$ long max = ls.get(ls.size() - 1)[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_13 $$ long others = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_11 $$ Collections.sort(ls)[ CD ]
Line_17 $$ if (max < others) -->Line_20 $$ System.out.println("No")[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ List<Long> ls = new ArrayList<Long>()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ String line = br.readLine()[ FD ]
Line_6 $$ List<Long> ls = new ArrayList<Long>()-->Line_11 $$ Collections.sort(ls)[ FD ]
Line_14 $$ for (int i = 0; i < ls.size() - 1; i++) -->Line_15 $$ others += ls.get(i)[ CD ]
Line_4 $$ String line = br.readLine()-->Line_8 $$ for (String s : line.split(" ")) [ FD ]
Line_14 $$ for (int i = 0; i < ls.size() - 1; i++) -->Line_15 $$ others += ls.get(i)[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_7 $$ line = br.readLine()-->Line_8 $$ for (String s : line.split(" ")) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ String line = br.readLine()[ CD ]
Line_6 $$ List<Long> ls = new ArrayList<Long>()-->Line_14 $$ for (int i = 0; i < ls.size() - 1; i++) [ FD ]
Line_4 $$ String line = br.readLine()-->Line_5 $$ long N = Long.parseLong(line)[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ line = br.readLine()[ CD ]
Line_6 $$ List<Long> ls = new ArrayList<Long>()-->Line_15 $$ others += ls.get(i)[ FD ]
Line_4 $$ String line = br.readLine()-->Line_7 $$ line = br.readLine()[ FD ]
Line_13 $$ long others = 0-->Line_17 $$ if (max < others) [ FD ]
Line_12 $$ long max = ls.get(ls.size() - 1)-->Line_17 $$ if (max < others) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_17 $$ if (max < others) [ CD ]
Line_15 $$ others += ls.get(i)-->Line_17 $$ if (max < others) [ FD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_7 $$ line = br.readLine()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_14 $$ for (int i = 0; i < ls.size() - 1; i++) [ CD ]
Line_6 $$ List<Long> ls = new ArrayList<Long>()-->Line_9 $$ ls.add(Long.valueOf(s))[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ long N = Long.parseLong(line)[ CD ]
