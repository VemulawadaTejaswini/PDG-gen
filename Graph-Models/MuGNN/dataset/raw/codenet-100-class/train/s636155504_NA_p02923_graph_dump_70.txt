Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_12 $$ if (h[i] >= h[i + 1]) -->Line_16 $$ cur = 0[ CD ]
Line_16 $$ cur = 0-->Line_19 $$ mx = Math.max(cur, mx)[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_7 $$ h[i] = in.nextInt()[ CD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_12 $$ if (h[i] >= h[i + 1]) [ CD ]
Line_16 $$ cur = 0-->Line_15 $$ mx = Math.max(cur, mx)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int[] h = new int[n][ CD ]
Line_15 $$ mx = Math.max(cur, mx)-->Line_19 $$ mx = Math.max(cur, mx)[ FD ]
Line_16 $$ cur = 0-->Line_13 $$ cur++[ FD ]
Line_9 $$ int mx = 0-->Line_20 $$ System.out.println(mx)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_20 $$ System.out.println(mx)[ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_10 $$ int cur = 0-->Line_15 $$ mx = Math.max(cur, mx)[ FD ]
Line_9 $$ int mx = 0-->Line_15 $$ mx = Math.max(cur, mx)[ FD ]
Line_19 $$ mx = Math.max(cur, mx)-->Line_20 $$ System.out.println(mx)[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_4 $$ int n = in.nextInt()-->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_3 $$ Scanner in = new Scanner(System.in)-->Line_4 $$ int n = in.nextInt()[ FD ]
Line_15 $$ mx = Math.max(cur, mx)-->Line_20 $$ System.out.println(mx)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ int mx = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ int cur = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner in = new Scanner(System.in)[ CD ]
Line_12 $$ if (h[i] >= h[i + 1]) -->Line_13 $$ cur++[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_19 $$ mx = Math.max(cur, mx)[ CD ]
Line_3 $$ Scanner in = new Scanner(System.in)-->Line_7 $$ h[i] = in.nextInt()[ FD ]
Line_12 $$ if (h[i] >= h[i + 1]) -->Line_15 $$ mx = Math.max(cur, mx)[ CD ]
Line_10 $$ int cur = 0-->Line_16 $$ cur = 0[ FD ]
Line_10 $$ int cur = 0-->Line_13 $$ cur++[ FD ]
Line_10 $$ int cur = 0-->Line_19 $$ mx = Math.max(cur, mx)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = in.nextInt()[ CD ]
Line_9 $$ int mx = 0-->Line_19 $$ mx = Math.max(cur, mx)[ FD ]
