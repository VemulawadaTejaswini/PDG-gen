Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ String[] str = br.readLine().split(" ")[ FD ]
Line_9 $$ int v = 0-->Line_22 $$ sort[i] = v[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_18 $$ for (int i = 1; i < sort.length; i++) [ CD ]
Line_13 $$ v = sort[i - 1]-->Line_20 $$ v = sort[i - 1][ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ String[] str = br.readLine().split(" ")[ CD ]
Line_9 $$ int v = 0-->Line_13 $$ v = sort[i - 1][ FD ]
Line_20 $$ v = sort[i - 1]-->Line_22 $$ sort[i] = v[ FD ]
Line_9 $$ int v = 0-->Line_20 $$ v = sort[i - 1][ FD ]
Line_19 $$ if (sort[i - 1] > sort[i]) -->Line_22 $$ sort[i] = v[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ int v = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ int a = Integer.parseInt(str[0])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_12 $$ if (sort[i - 1] > sort[i]) -->Line_14 $$ sort[i - 1] = sort[i][ CD ]
Line_11 $$ for (int i = 1; i < sort.length; i++) -->Line_18 $$ for (int i = 1; i < sort.length; i++) [ FD ]
Line_13 $$ v = sort[i - 1]-->Line_15 $$ sort[i] = v[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ int c = Integer.parseInt(str[2])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ int[] sort = [ CD ]
Line_18 $$ for (int i = 1; i < sort.length; i++) -->Line_19 $$ if (sort[i - 1] > sort[i]) [ CD ]
Line_13 $$ v = sort[i - 1]-->Line_22 $$ sort[i] = v[ FD ]
Line_12 $$ if (sort[i - 1] > sort[i]) -->Line_15 $$ sort[i] = v[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_11 $$ for (int i = 1; i < sort.length; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_25 $$ System.out.println(sort[0] + " " + sort[1] + " " + sort[2])[ CD ]
Line_9 $$ int v = 0-->Line_15 $$ sort[i] = v[ FD ]
Line_11 $$ for (int i = 1; i < sort.length; i++) -->Line_12 $$ if (sort[i - 1] > sort[i]) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ int b = Integer.parseInt(str[1])[ CD ]
Line_12 $$ if (sort[i - 1] > sort[i]) -->Line_13 $$ v = sort[i - 1][ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_19 $$ if (sort[i - 1] > sort[i]) -->Line_20 $$ v = sort[i - 1][ CD ]
Line_19 $$ if (sort[i - 1] > sort[i]) -->Line_21 $$ sort[i - 1] = sort[i][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ if (!(a >= 1 || b >= 1 || c >= 1 || a <= 10000 || b <= 10000 || c <= 10000)) [ CD ]
