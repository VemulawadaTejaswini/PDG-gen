Line_7 $$ SecretKey key = keyGen.generateKey()-->Line_9 $$ cipher.init(Cipher.ENCRYPT_MODE, key)[ FD ]
Line_11 $$ private static void go2() -->Line_12 $$ CRYPTO = DEFAULT_CRYPTO.toCharArray()[ CD ]
Line_1 $$ public class Dummy -->Line_2 $$ public static final String DEFAULT_CRYPTO = "RC2";[ CD ]
Line_1 $$ public class Dummy -->Line_5 $$ public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException [ CD ]
Line_17 $$ public static void main(String[] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException -->Line_18 $$ Dummy bc = new Dummy()[ CD ]
Line_1 $$ public class Dummy -->Line_3 $$ private static char[] CRYPTO;[ CD ]
Line_1 $$ public class Dummy -->Line_14 $$ private static void go3() [ CD ]
Line_5 $$ public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException -->Line_7 $$ SecretKey key = keyGen.generateKey()[ CD ]
Line_17 $$ public static void main(String[] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException -->Line_21 $$ bc.go()[ CD ]
Line_17 $$ public static void main(String[] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException -->Line_19 $$ go2()[ CD ]
Line_1 $$ public class Dummy -->Line_11 $$ private static void go2() [ CD ]
Line_5 $$ public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException -->Line_8 $$ Cipher cipher = Cipher.getInstance(String.valueOf(crypto))[ CD ]
Line_6 $$ KeyGenerator keyGen = KeyGenerator.getInstance(String.valueOf(crypto))-->Line_7 $$ SecretKey key = keyGen.generateKey()[ FD ]
Line_8 $$ Cipher cipher = Cipher.getInstance(String.valueOf(crypto))-->Line_9 $$ cipher.init(Cipher.ENCRYPT_MODE, key)[ FD ]
Line_5 $$ public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException -->Line_9 $$ cipher.init(Cipher.ENCRYPT_MODE, key)[ CD ]
Line_5 $$ public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException -->Line_6 $$ KeyGenerator keyGen = KeyGenerator.getInstance(String.valueOf(crypto))[ CD ]
Line_1 $$ public class Dummy -->Line_17 $$ public static void main(String[] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException [ CD ]
Line_18 $$ Dummy bc = new Dummy()-->Line_21 $$ bc.go()[ FD ]
Line_17 $$ public static void main(String[] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException -->Line_20 $$ go3()[ CD ]
