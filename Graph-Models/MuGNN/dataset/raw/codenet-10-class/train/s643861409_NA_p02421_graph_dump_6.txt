Line_6 $$ String wordB-->Line_15 $$ result = wordA.compareTo(wordB)[ FD ]
Line_7 $$ int turn = Integer.parseInt(br.readLine())-->Line_11 $$ for (int i = 0; i < turn; i++) [ FD ]
Line_11 $$ for (int i = 0; i < turn; i++) -->Line_17 $$ pointB += result == 0 ? 1 : result < 0 ? 3 : 0[ CD ]
Line_5 $$ String wordA-->Line_15 $$ result = wordA.compareTo(wordB)[ FD ]
Line_11 $$ for (int i = 0; i < turn; i++) -->Line_13 $$ wordA = line.substring(0, line.indexOf(" "))[ CD ]
Line_3 $$ try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) -->Line_7 $$ int turn = Integer.parseInt(br.readLine())[ FD ]
Line_10 $$ int result = 0-->Line_15 $$ result = wordA.compareTo(wordB)[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_11 $$ for (int i = 0; i < turn; i++) -->Line_14 $$ wordB = line.substring(line.indexOf(" ") + 1, line.length())[ CD ]
Line_4 $$ StringBuilder line = new StringBuilder()-->Line_13 $$ wordA = line.substring(0, line.indexOf(" "))[ FD ]
Line_4 $$ StringBuilder line = new StringBuilder()-->Line_14 $$ wordB = line.substring(line.indexOf(" ") + 1, line.length())[ FD ]
Line_11 $$ for (int i = 0; i < turn; i++) -->Line_15 $$ result = wordA.compareTo(wordB)[ CD ]
Line_11 $$ for (int i = 0; i < turn; i++) -->Line_16 $$ pointA += result == 0 ? 1 : result < 0 ? 0 : 3[ CD ]
Line_4 $$ StringBuilder line = new StringBuilder()-->Line_18 $$ line.setLength(0)[ FD ]
Line_6 $$ String wordB-->Line_14 $$ wordB = line.substring(line.indexOf(" ") + 1, line.length())[ FD ]
Line_14 $$ wordB = line.substring(line.indexOf(" ") + 1, line.length())-->Line_15 $$ result = wordA.compareTo(wordB)[ FD ]
Line_11 $$ for (int i = 0; i < turn; i++) -->Line_18 $$ line.setLength(0)[ CD ]
Line_4 $$ StringBuilder line = new StringBuilder()-->Line_12 $$ line.append(br.readLine())[ FD ]
Line_5 $$ String wordA-->Line_13 $$ wordA = line.substring(0, line.indexOf(" "))[ FD ]
Line_11 $$ for (int i = 0; i < turn; i++) -->Line_12 $$ line.append(br.readLine())[ CD ]
Line_13 $$ wordA = line.substring(0, line.indexOf(" "))-->Line_15 $$ result = wordA.compareTo(wordB)[ FD ]
Line_9 $$ int pointB = 0-->Line_17 $$ pointB += result == 0 ? 1 : result < 0 ? 3 : 0[ FD ]
Line_3 $$ try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) -->Line_12 $$ line.append(br.readLine())[ FD ]
Line_8 $$ int pointA = 0-->Line_16 $$ pointA += result == 0 ? 1 : result < 0 ? 0 : 3[ FD ]
