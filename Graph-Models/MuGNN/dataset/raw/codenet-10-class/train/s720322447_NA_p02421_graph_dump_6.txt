Line_4 $$ BufferedReader read = new BufferedReader(in)-->Line_9 $$ String line = read.readLine()[ FD ]
Line_19 $$ hanaP = hanaP + 1-->Line_15 $$ hanaP = hanaP + 3[ FD ]
Line_12 $$ taroP = taroP + 3-->Line_18 $$ taroP = taroP + 1[ FD ]
Line_5 $$ int n = Integer.parseInt(read.readLine())-->Line_8 $$ for (int N = 0; N < n; N++) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ int n = Integer.parseInt(read.readLine())[ CD ]
Line_15 $$ hanaP = hanaP + 3-->Line_19 $$ hanaP = hanaP + 1[ FD ]
Line_4 $$ BufferedReader read = new BufferedReader(in)-->Line_5 $$ int n = Integer.parseInt(read.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ int taroP = 0[ CD ]
Line_7 $$ int hanaP = 0-->Line_19 $$ hanaP = hanaP + 1[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ InputStreamReader in = new InputStreamReader(System.in)[ CD ]
Line_8 $$ for (int N = 0; N < n; N++) -->Line_9 $$ String line = read.readLine()[ CD ]
Line_17 $$ if (tarohana[0].compareTo(tarohana[1]) == 0) -->Line_18 $$ taroP = taroP + 1[ CD ]
Line_17 $$ if (tarohana[0].compareTo(tarohana[1]) == 0) -->Line_19 $$ hanaP = hanaP + 1[ CD ]
Line_8 $$ for (int N = 0; N < n; N++) -->Line_11 $$ if (tarohana[0].compareTo(tarohana[1]) > 0) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ BufferedReader read = new BufferedReader(in)[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_22 $$ System.out.println(taroP + " " + hanaP)[ CD ]
Line_8 $$ for (int N = 0; N < n; N++) -->Line_10 $$ String[] tarohana = line.split(" ")[ CD ]
Line_11 $$ if (tarohana[0].compareTo(tarohana[1]) > 0) -->Line_14 $$ if (tarohana[0].compareTo(tarohana[1]) < 0) [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_14 $$ if (tarohana[0].compareTo(tarohana[1]) < 0) -->Line_15 $$ hanaP = hanaP + 3[ CD ]
Line_9 $$ String line = read.readLine()-->Line_10 $$ String[] tarohana = line.split(" ")[ FD ]
Line_18 $$ taroP = taroP + 1-->Line_12 $$ taroP = taroP + 3[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ int hanaP = 0[ CD ]
Line_14 $$ if (tarohana[0].compareTo(tarohana[1]) < 0) -->Line_17 $$ if (tarohana[0].compareTo(tarohana[1]) == 0) [ CD ]
Line_6 $$ int taroP = 0-->Line_12 $$ taroP = taroP + 3[ FD ]
Line_6 $$ int taroP = 0-->Line_18 $$ taroP = taroP + 1[ FD ]
Line_7 $$ int hanaP = 0-->Line_15 $$ hanaP = hanaP + 3[ FD ]
Line_11 $$ if (tarohana[0].compareTo(tarohana[1]) > 0) -->Line_12 $$ taroP = taroP + 3[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ for (int N = 0; N < n; N++) [ CD ]
