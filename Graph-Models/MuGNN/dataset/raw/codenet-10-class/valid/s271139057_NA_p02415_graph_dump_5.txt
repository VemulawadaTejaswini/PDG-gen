Line_5 $$ String str = br.readLine()-->Line_6 $$ char[] upper = str.toUpperCase().toCharArray()[ FD ]
Line_6 $$ char[] upper = str.toUpperCase().toCharArray()-->Line_15 $$ System.out.println(String.valueOf(upper))[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ String str = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ String str = br.readLine()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ char[] upper = str.toUpperCase().toCharArray()[ CD ]
Line_4 $$ Pattern p = Pattern.compile("[A-Z]")-->Line_10 $$ if (p.matcher(String.valueOf(origin[i])).find()) [ FD ]
Line_9 $$ if (origin[i] == upper[i]) -->Line_10 $$ if (p.matcher(String.valueOf(origin[i])).find()) [ CD ]
Line_5 $$ String str = br.readLine()-->Line_7 $$ char[] origin = str.toCharArray()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_8 $$ for (int i = 0; i < origin.length; i++) -->Line_9 $$ if (origin[i] == upper[i]) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_15 $$ System.out.println(String.valueOf(upper))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ char[] origin = str.toCharArray()[ CD ]
Line_10 $$ if (p.matcher(String.valueOf(origin[i])).find()) -->Line_11 $$ upper[i] = String.valueOf(origin[i]).toLowerCase().charAt(0)[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ for (int i = 0; i < origin.length; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ Pattern p = Pattern.compile("[A-Z]")[ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
