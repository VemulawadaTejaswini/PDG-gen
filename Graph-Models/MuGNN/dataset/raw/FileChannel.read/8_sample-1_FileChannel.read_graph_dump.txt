Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void NeoStoreUtil(String storeDir) [ CD ]
Line_2 $$ public void NeoStoreUtil(String storeDir) -->Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(4 * 9)[ CD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(4 * 9)-->Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(4 * 9)[ CD ]
Line_2 $$ public void NeoStoreUtil(String storeDir) -->Line_4 $$ if (fileChannel.read(buf) != 4 * 9) [ CD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(4 * 9)-->Line_4 $$ if (fileChannel.read(buf) != 4 * 9) [ FD ]
Line_2 $$ public void NeoStoreUtil(String storeDir) -->Line_8 $$ buf.flip()[ CD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(4 * 9)-->Line_8 $$ buf.flip()[ FD ]
Line_2 $$ public void NeoStoreUtil(String storeDir) -->Line_9 $$ buf.get()[ CD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(4 * 9)-->Line_9 $$ buf.get()[ FD ]
Line_2 $$ public void NeoStoreUtil(String storeDir) -->Line_10 $$ creationTime = buf.getLong()[ CD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(4 * 9)-->Line_10 $$ creationTime = buf.getLong()[ FD ]
Line_2 $$ public void NeoStoreUtil(String storeDir) -->Line_11 $$ buf.get()[ CD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(4 * 9)-->Line_11 $$ buf.get()[ FD ]
Line_2 $$ public void NeoStoreUtil(String storeDir) -->Line_12 $$ storeId = buf.getLong()[ CD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(4 * 9)-->Line_12 $$ storeId = buf.getLong()[ FD ]
Line_2 $$ public void NeoStoreUtil(String storeDir) -->Line_13 $$ buf.get()[ CD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(4 * 9)-->Line_13 $$ buf.get()[ FD ]
Line_2 $$ public void NeoStoreUtil(String storeDir) -->Line_14 $$ version = buf.getLong()[ CD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(4 * 9)-->Line_14 $$ version = buf.getLong()[ FD ]
Line_2 $$ public void NeoStoreUtil(String storeDir) -->Line_15 $$ buf.get()[ CD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(4 * 9)-->Line_15 $$ buf.get()[ FD ]
Line_2 $$ public void NeoStoreUtil(String storeDir) -->Line_16 $$ txId = buf.getLong()[ CD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(4 * 9)-->Line_16 $$ txId = buf.getLong()[ FD ]
