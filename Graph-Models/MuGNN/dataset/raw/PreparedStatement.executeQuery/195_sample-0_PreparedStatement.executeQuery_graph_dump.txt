Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void tableExists(ResourceContext<PostgresDatabaseComponent> context) [ CD ]
Line_2 $$ public void tableExists(ResourceContext<PostgresDatabaseComponent> context) -->Line_3 $$ statement.setString(1, getSchemaNameFromContext(context))[ CD ]
Line_2 $$ public void tableExists(ResourceContext<PostgresDatabaseComponent> context) -->Line_3 $$ statement.setString(1, getSchemaNameFromContext(context))[ FD ]
Line_2 $$ public void tableExists(ResourceContext<PostgresDatabaseComponent> context) -->Line_4 $$ statement.setString(2, getTableNameFromContext(context))[ CD ]
Line_2 $$ public void tableExists(ResourceContext<PostgresDatabaseComponent> context) -->Line_4 $$ statement.setString(2, getTableNameFromContext(context))[ FD ]
Line_2 $$ public void tableExists(ResourceContext<PostgresDatabaseComponent> context) -->Line_5 $$ resultSet = statement.executeQuery()[ CD ]
Line_2 $$ public void tableExists(ResourceContext<PostgresDatabaseComponent> context) -->Line_6 $$ return resultSet.next()[ CD ]
Line_6 $$ return resultSet.next()-->Line_6 $$ return resultSet.next()[ CD ]
Line_2 $$ public void tableExists(ResourceContext<PostgresDatabaseComponent> context) -->Line_7 $$ safeClose(connection, statement, resultSet)[ CD ]
