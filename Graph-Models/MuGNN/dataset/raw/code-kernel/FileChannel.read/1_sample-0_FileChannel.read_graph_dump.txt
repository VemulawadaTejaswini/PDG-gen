Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void performTransfer(FileChannel source, IoCallback callback) [ CD ]
Line_2 $$ public void performTransfer(FileChannel source, IoCallback callback) -->Line_3 $$ long pos = source.position()[ CD ]
Line_3 $$ long pos = source.position()-->Line_3 $$ long pos = source.position()[ CD ]
Line_2 $$ public void performTransfer(FileChannel source, IoCallback callback) -->Line_3 $$ long pos = source.position()[ FD ]
Line_2 $$ public void performTransfer(FileChannel source, IoCallback callback) -->Line_4 $$ long size = source.size()[ CD ]
Line_4 $$ long size = source.size()-->Line_4 $$ long size = source.size()[ CD ]
Line_2 $$ public void performTransfer(FileChannel source, IoCallback callback) -->Line_4 $$ long size = source.size()[ FD ]
Line_2 $$ public void performTransfer(FileChannel source, IoCallback callback) -->Line_5 $$ while (size - pos > 0) [ CD ]
Line_2 $$ public void performTransfer(FileChannel source, IoCallback callback) -->Line_2 $$ public void performTransfer(FileChannel source, IoCallback callback) [ CD ]
Line_5 $$ while (size - pos > 0) -->Line_6 $$ int ret = source.read(buffer)[ CD ]
Line_6 $$ int ret = source.read(buffer)-->Line_6 $$ int ret = source.read(buffer)[ CD ]
Line_2 $$ public void performTransfer(FileChannel source, IoCallback callback) -->Line_6 $$ int ret = source.read(buffer)[ FD ]
Line_5 $$ while (size - pos > 0) -->Line_7 $$ if (ret <= 0) [ CD ]
Line_6 $$ int ret = source.read(buffer)-->Line_7 $$ if (ret <= 0) [ FD ]
Line_5 $$ while (size - pos > 0) -->Line_10 $$ pos += ret[ CD ]
Line_10 $$ pos += ret-->Line_10 $$ pos += ret[ FD ]
Line_3 $$ long pos = source.position()-->Line_10 $$ pos += ret[ FD ]
Line_6 $$ int ret = source.read(buffer)-->Line_10 $$ pos += ret[ FD ]
Line_5 $$ while (size - pos > 0) -->Line_11 $$ buffer.flip()[ CD ]
Line_5 $$ while (size - pos > 0) -->Line_12 $$ if (!writeBuffer(buffer, callback)) [ CD ]
Line_12 $$ if (!writeBuffer(buffer, callback)) -->Line_12 $$ if (!writeBuffer(buffer, callback)) [ CD ]
Line_12 $$ if (!writeBuffer(buffer, callback)) -->Line_12 $$ if (!writeBuffer(buffer, callback)) [ CD ]
Line_2 $$ public void performTransfer(FileChannel source, IoCallback callback) -->Line_12 $$ if (!writeBuffer(buffer, callback)) [ FD ]
Line_12 $$ if (!writeBuffer(buffer, callback)) -->Line_13 $$ return[ CD ]
Line_5 $$ while (size - pos > 0) -->Line_15 $$ buffer.clear()[ CD ]
Line_2 $$ public void performTransfer(FileChannel source, IoCallback callback) -->Line_17 $$ if (pos != size) [ CD ]
Line_10 $$ pos += ret-->Line_17 $$ if (pos != size) [ FD ]
Line_3 $$ long pos = source.position()-->Line_17 $$ if (pos != size) [ FD ]
Line_4 $$ long size = source.size()-->Line_17 $$ if (pos != size) [ FD ]
Line_6 $$ int ret = source.read(buffer)-->Line_7 $$ if (ret <= 0) [ FD ]
Line_6 $$ int ret = source.read(buffer)-->Line_10 $$ pos += ret[ FD ]
