Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void readV2Tag(File file, int loadOptions, int startByte) [ CD ]
Line_2 $$ public void readV2Tag(File file, int loadOptions, int startByte) -->Line_4 $$ fc = fis.getChannel()[ CD ]
Line_2 $$ public void readV2Tag(File file, int loadOptions, int startByte) -->Line_5 $$ bb = fc.map(FileChannel.MapMode.READ_ONLY, 0, startByte)[ CD ]
Line_2 $$ public void readV2Tag(File file, int loadOptions, int startByte) -->Line_5 $$ bb = fc.map(FileChannel.MapMode.READ_ONLY, 0, startByte)[ FD ]
Line_2 $$ public void readV2Tag(File file, int loadOptions, int startByte) -->Line_6 $$ bb = ByteBuffer.allocate(startByte)[ CD ]
Line_2 $$ public void readV2Tag(File file, int loadOptions, int startByte) -->Line_6 $$ bb = ByteBuffer.allocate(startByte)[ FD ]
Line_2 $$ public void readV2Tag(File file, int loadOptions, int startByte) -->Line_7 $$ fc.read(bb, 0)[ CD ]
Line_2 $$ public void readV2Tag(File file, int loadOptions, int startByte) -->Line_8 $$ if (fc != null) [ CD ]
Line_8 $$ if (fc != null) -->Line_10 $$ fc.close()[ CD ]
Line_2 $$ public void readV2Tag(File file, int loadOptions, int startByte) -->Line_12 $$ if (fis != null) [ CD ]
Line_12 $$ if (fis != null) -->Line_14 $$ fis.close()[ CD ]
