Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void read(FileChannel ch, ByteBuffer bb, final long start_position) [ CD ]
Line_2 $$ public void read(FileChannel ch, ByteBuffer bb, final long start_position) -->Line_3 $$ while (bb.hasRemaining()) [ CD ]
Line_2 $$ public void read(FileChannel ch, ByteBuffer bb, final long start_position) -->Line_2 $$ public void read(FileChannel ch, ByteBuffer bb, final long start_position) [ CD ]
Line_3 $$ while (bb.hasRemaining()) -->Line_3 $$ while (bb.hasRemaining()) [ CD ]
Line_2 $$ public void read(FileChannel ch, ByteBuffer bb, final long start_position) -->Line_3 $$ while (bb.hasRemaining()) [ FD ]
Line_3 $$ while (bb.hasRemaining()) -->Line_5 $$ int read = ch.read(bb, position)[ CD ]
Line_5 $$ int read = ch.read(bb, position)-->Line_5 $$ int read = ch.read(bb, position)[ CD ]
Line_2 $$ public void read(FileChannel ch, ByteBuffer bb, final long start_position) -->Line_5 $$ int read = ch.read(bb, position)[ FD ]
Line_2 $$ public void read(FileChannel ch, ByteBuffer bb, final long start_position) -->Line_5 $$ int read = ch.read(bb, position)[ FD ]
Line_3 $$ while (bb.hasRemaining()) -->Line_6 $$ if (read >= 0) [ CD ]
Line_5 $$ int read = ch.read(bb, position)-->Line_6 $$ if (read >= 0) [ FD ]
Line_6 $$ if (read >= 0) -->Line_9 $$ if (read == 0) [ CD ]
Line_5 $$ int read = ch.read(bb, position)-->Line_9 $$ if (read == 0) [ FD ]
Line_9 $$ if (read == 0) -->Line_11 $$ Thread.yield()[ CD ]
Line_6 $$ if (read >= 0) -->Line_15 $$ return 0[ CD ]
Line_5 $$ int read = ch.read(bb, position)-->Line_6 $$ if (read >= 0) [ FD ]
Line_5 $$ int read = ch.read(bb, position)-->Line_9 $$ if (read == 0) [ FD ]
