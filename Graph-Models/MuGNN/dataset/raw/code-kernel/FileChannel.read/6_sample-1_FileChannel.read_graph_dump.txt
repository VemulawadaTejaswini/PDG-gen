Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void main(String[] args) [ CD ]
Line_2 $$ public void main(String[] args) -->Line_3 $$ ByteBuffer buff = ByteBuffer.allocate(32 * 1024)[ CD ]
Line_3 $$ ByteBuffer buff = ByteBuffer.allocate(32 * 1024)-->Line_3 $$ ByteBuffer buff = ByteBuffer.allocate(32 * 1024)[ CD ]
Line_2 $$ public void main(String[] args) -->Line_4 $$ while (in.read(buff) > 0) [ CD ]
Line_2 $$ public void main(String[] args) -->Line_2 $$ public void main(String[] args) [ CD ]
Line_3 $$ ByteBuffer buff = ByteBuffer.allocate(32 * 1024)-->Line_4 $$ while (in.read(buff) > 0) [ FD ]
Line_4 $$ while (in.read(buff) > 0) -->Line_5 $$ buff.flip()[ CD ]
Line_3 $$ ByteBuffer buff = ByteBuffer.allocate(32 * 1024)-->Line_5 $$ buff.flip()[ FD ]
Line_4 $$ while (in.read(buff) > 0) -->Line_6 $$ out.write(buff)[ CD ]
Line_3 $$ ByteBuffer buff = ByteBuffer.allocate(32 * 1024)-->Line_6 $$ out.write(buff)[ FD ]
Line_4 $$ while (in.read(buff) > 0) -->Line_7 $$ buff.clear()[ CD ]
Line_3 $$ ByteBuffer buff = ByteBuffer.allocate(32 * 1024)-->Line_7 $$ buff.clear()[ FD ]
Line_2 $$ public void main(String[] args) -->Line_9 $$ in.close()[ CD ]
