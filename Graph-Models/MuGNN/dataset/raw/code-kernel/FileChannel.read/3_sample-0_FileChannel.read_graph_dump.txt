Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void executeOnSlave() [ CD ]
Line_2 $$ public void executeOnSlave() -->Line_3 $$ long initPos = fileChannel.position()[ CD ]
Line_3 $$ long initPos = fileChannel.position()-->Line_3 $$ long initPos = fileChannel.position()[ CD ]
Line_2 $$ public void executeOnSlave() -->Line_4 $$ String key = Integer.toString(slaveState.getSlaveIndex()) + "-" + Long.toString(initPos)[ CD ]
Line_3 $$ long initPos = fileChannel.position()-->Line_4 $$ String key = Integer.toString(slaveState.getSlaveIndex()) + "-" + Long.toString(initPos)[ FD ]
Line_2 $$ public void executeOnSlave() -->Line_5 $$ int bytesRead = fileChannel.read(buffer)[ CD ]
Line_5 $$ int bytesRead = fileChannel.read(buffer)-->Line_5 $$ int bytesRead = fileChannel.read(buffer)[ CD ]
Line_2 $$ public void executeOnSlave() -->Line_6 $$ if (bytesRead != -1) [ CD ]
Line_5 $$ int bytesRead = fileChannel.read(buffer)-->Line_6 $$ if (bytesRead != -1) [ FD ]
Line_6 $$ if (bytesRead != -1) -->Line_7 $$ while (bytesRead != valueSize) [ CD ]
Line_6 $$ if (bytesRead != -1) -->Line_6 $$ if (bytesRead != -1) [ CD ]
Line_5 $$ int bytesRead = fileChannel.read(buffer)-->Line_7 $$ while (bytesRead != valueSize) [ FD ]
Line_7 $$ while (bytesRead != valueSize) -->Line_8 $$ int readBytes = fileChannel.read(buffer)[ CD ]
Line_8 $$ int readBytes = fileChannel.read(buffer)-->Line_8 $$ int readBytes = fileChannel.read(buffer)[ CD ]
Line_7 $$ while (bytesRead != valueSize) -->Line_9 $$ if (readBytes == -1) [ CD ]
Line_8 $$ int readBytes = fileChannel.read(buffer)-->Line_9 $$ if (readBytes == -1) [ FD ]
Line_9 $$ if (readBytes == -1) -->Line_12 $$ bytesRead += readBytes[ CD ]
Line_12 $$ bytesRead += readBytes-->Line_12 $$ bytesRead += readBytes[ FD ]
Line_5 $$ int bytesRead = fileChannel.read(buffer)-->Line_12 $$ bytesRead += readBytes[ FD ]
Line_8 $$ int readBytes = fileChannel.read(buffer)-->Line_12 $$ bytesRead += readBytes[ FD ]
Line_6 $$ if (bytesRead != -1) -->Line_16 $$ if (putCount % 5000 == 0) [ CD ]
Line_16 $$ if (putCount % 5000 == 0) -->Line_17 $$ log.info("Writing " + bytesRead + " bytes to cache key: " + key + " at position " + fileChannel.position())[ CD ]
Line_6 $$ if (bytesRead != -1) -->Line_20 $$ buffer.rewind()[ CD ]
Line_6 $$ if (bytesRead != -1) -->Line_21 $$ long start = System.nanoTime()[ CD ]
Line_21 $$ long start = System.nanoTime()-->Line_21 $$ long start = System.nanoTime()[ CD ]
Line_6 $$ if (bytesRead != -1) -->Line_22 $$ if (stringData) [ CD ]
Line_22 $$ if (stringData) -->Line_23 $$ String cacheData = buffer.asCharBuffer().toString()[ CD ]
Line_23 $$ String cacheData = buffer.asCharBuffer().toString()-->Line_23 $$ String cacheData = buffer.asCharBuffer().toString()[ CD ]
Line_22 $$ if (stringData) -->Line_24 $$ start = System.nanoTime()[ CD ]
Line_21 $$ long start = System.nanoTime()-->Line_24 $$ start = System.nanoTime()[ FD ]
Line_24 $$ start = System.nanoTime()-->Line_24 $$ start = System.nanoTime()[ FD ]
Line_24 $$ start = System.nanoTime()-->Line_24 $$ start = System.nanoTime()[ CD ]
Line_22 $$ if (stringData) -->Line_25 $$ cache.put(key, cacheData)[ CD ]
Line_4 $$ String key = Integer.toString(slaveState.getSlaveIndex()) + "-" + Long.toString(initPos)-->Line_25 $$ cache.put(key, cacheData)[ FD ]
Line_23 $$ String cacheData = buffer.asCharBuffer().toString()-->Line_25 $$ cache.put(key, cacheData)[ FD ]
Line_22 $$ if (stringData) -->Line_27 $$ cache.put(key, buffer.array())[ CD ]
Line_4 $$ String key = Integer.toString(slaveState.getSlaveIndex()) + "-" + Long.toString(initPos)-->Line_27 $$ cache.put(key, buffer.array())[ FD ]
Line_6 $$ if (bytesRead != -1) -->Line_29 $$ if (printWriteStatistics) [ CD ]
Line_29 $$ if (printWriteStatistics) -->Line_30 $$ log.info("Put on slave-" + slaveState.getSlaveIndex() + " took " + Utils.prettyPrintTime(System.nanoTime() - start, TimeUnit.NANOSECONDS))[ CD ]
Line_6 $$ if (bytesRead != -1) -->Line_34 $$ fileChannel.position(initPos + (valueSize * totalWriters))[ CD ]
Line_6 $$ if (bytesRead != -1) -->Line_35 $$ buffer.clear()[ CD ]
Line_6 $$ if (bytesRead != -1) -->Line_37 $$ file.close()[ CD ]
Line_2 $$ public void executeOnSlave() -->Line_41 $$ return new ResultAck(slaveState, putCount, totalBytesRead)[ CD ]
Line_12 $$ bytesRead += readBytes-->Line_7 $$ while (bytesRead != valueSize) [ FD ]
Line_12 $$ bytesRead += readBytes-->Line_7 $$ while (bytesRead != valueSize) [ FD ]
Line_8 $$ int readBytes = fileChannel.read(buffer)-->Line_9 $$ if (readBytes == -1) [ FD ]
Line_8 $$ int readBytes = fileChannel.read(buffer)-->Line_12 $$ bytesRead += readBytes[ FD ]
