Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testPayload() [ CD ]
Line_2 $$ public void testPayload() -->Line_3 $$ Statement s = conn.createStatement()[ CD ]
Line_3 $$ Statement s = conn.createStatement()-->Line_3 $$ Statement s = conn.createStatement()[ CD ]
Line_2 $$ public void testPayload() -->Line_4 $$ assertFalse(s.execute("SET PAYLOAD x y"))[ CD ]
Line_3 $$ Statement s = conn.createStatement()-->Line_4 $$ assertFalse(s.execute("SET PAYLOAD x y"))[ FD ]
Line_2 $$ public void testPayload() -->Line_5 $$ assertTrue(s.execute("SELECT commandpayload('x')"))[ CD ]
Line_3 $$ Statement s = conn.createStatement()-->Line_5 $$ assertTrue(s.execute("SELECT commandpayload('x')"))[ FD ]
Line_2 $$ public void testPayload() -->Line_6 $$ ResultSet rs = s.getResultSet()[ CD ]
Line_6 $$ ResultSet rs = s.getResultSet()-->Line_6 $$ ResultSet rs = s.getResultSet()[ CD ]
Line_3 $$ Statement s = conn.createStatement()-->Line_6 $$ ResultSet rs = s.getResultSet()[ FD ]
Line_2 $$ public void testPayload() -->Line_7 $$ assertTrue(rs.next())[ CD ]
Line_6 $$ ResultSet rs = s.getResultSet()-->Line_7 $$ assertTrue(rs.next())[ FD ]
Line_2 $$ public void testPayload() -->Line_8 $$ String str = rs.getString(1)[ CD ]
Line_8 $$ String str = rs.getString(1)-->Line_8 $$ String str = rs.getString(1)[ CD ]
Line_6 $$ ResultSet rs = s.getResultSet()-->Line_8 $$ String str = rs.getString(1)[ FD ]
Line_2 $$ public void testPayload() -->Line_9 $$ assertEquals("y", str)[ CD ]
Line_8 $$ String str = rs.getString(1)-->Line_9 $$ assertEquals("y", str)[ FD ]
