Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testCountDistinctNotNull() [ CD ]
Line_2 $$ public void testCountDistinctNotNull() -->Line_3 $$ deleteDb("cases")[ CD ]
Line_2 $$ public void testCountDistinctNotNull() -->Line_4 $$ Connection conn = getConnection("cases")[ CD ]
Line_4 $$ Connection conn = getConnection("cases")-->Line_4 $$ Connection conn = getConnection("cases")[ CD ]
Line_2 $$ public void testCountDistinctNotNull() -->Line_5 $$ Statement stat = conn.createStatement()[ CD ]
Line_5 $$ Statement stat = conn.createStatement()-->Line_5 $$ Statement stat = conn.createStatement()[ CD ]
Line_4 $$ Connection conn = getConnection("cases")-->Line_5 $$ Statement stat = conn.createStatement()[ FD ]
Line_2 $$ public void testCountDistinctNotNull() -->Line_6 $$ stat.execute("create table test(id int not null) as " + "select 1 from system_range(1, 10)")[ CD ]
Line_5 $$ Statement stat = conn.createStatement()-->Line_6 $$ stat.execute("create table test(id int not null) as " + "select 1 from system_range(1, 10)")[ FD ]
Line_2 $$ public void testCountDistinctNotNull() -->Line_8 $$ ResultSet rs = stat.executeQuery("select count(distinct id) from test")[ CD ]
Line_8 $$ ResultSet rs = stat.executeQuery("select count(distinct id) from test")-->Line_8 $$ ResultSet rs = stat.executeQuery("select count(distinct id) from test")[ CD ]
Line_5 $$ Statement stat = conn.createStatement()-->Line_8 $$ ResultSet rs = stat.executeQuery("select count(distinct id) from test")[ FD ]
Line_2 $$ public void testCountDistinctNotNull() -->Line_9 $$ rs.next()[ CD ]
Line_8 $$ ResultSet rs = stat.executeQuery("select count(distinct id) from test")-->Line_9 $$ rs.next()[ FD ]
Line_2 $$ public void testCountDistinctNotNull() -->Line_10 $$ assertEquals(1, rs.getInt(1))[ CD ]
Line_8 $$ ResultSet rs = stat.executeQuery("select count(distinct id) from test")-->Line_10 $$ assertEquals(1, rs.getInt(1))[ FD ]
Line_2 $$ public void testCountDistinctNotNull() -->Line_11 $$ conn.close()[ CD ]
Line_4 $$ Connection conn = getConnection("cases")-->Line_11 $$ conn.close()[ FD ]
