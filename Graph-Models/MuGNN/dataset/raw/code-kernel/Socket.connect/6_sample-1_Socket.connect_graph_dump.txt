Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getStream(String request) [ CD ]
Line_2 $$ public void getStream(String request) -->Line_3 $$ Socket s = socketPool.poll()[ CD ]
Line_3 $$ Socket s = socketPool.poll()-->Line_3 $$ Socket s = socketPool.poll()[ CD ]
Line_2 $$ public void getStream(String request) -->Line_4 $$ if (s == null || s.isClosed() || s.isOutputShutdown() || s.isInputShutdown()) [ CD ]
Line_3 $$ Socket s = socketPool.poll()-->Line_4 $$ if (s == null || s.isClosed() || s.isOutputShutdown() || s.isInputShutdown()) [ FD ]
Line_3 $$ Socket s = socketPool.poll()-->Line_4 $$ if (s == null || s.isClosed() || s.isOutputShutdown() || s.isInputShutdown()) [ FD ]
Line_3 $$ Socket s = socketPool.poll()-->Line_4 $$ if (s == null || s.isClosed() || s.isOutputShutdown() || s.isInputShutdown()) [ FD ]
Line_4 $$ if (s == null || s.isClosed() || s.isOutputShutdown() || s.isInputShutdown()) -->Line_6 $$ s = new Socket()[ CD ]
Line_3 $$ Socket s = socketPool.poll()-->Line_6 $$ s = new Socket()[ FD ]
Line_6 $$ s = new Socket()-->Line_6 $$ s = new Socket()[ FD ]
Line_4 $$ if (s == null || s.isClosed() || s.isOutputShutdown() || s.isInputShutdown()) -->Line_7 $$ s.connect(address)[ CD ]
Line_3 $$ Socket s = socketPool.poll()-->Line_7 $$ s.connect(address)[ FD ]
Line_6 $$ s = new Socket()-->Line_7 $$ s.connect(address)[ FD ]
Line_2 $$ public void getStream(String request) -->Line_9 $$ DataOutputStream o = new DataOutputStream(s.getOutputStream())[ CD ]
Line_3 $$ Socket s = socketPool.poll()-->Line_9 $$ DataOutputStream o = new DataOutputStream(s.getOutputStream())[ FD ]
Line_6 $$ s = new Socket()-->Line_9 $$ DataOutputStream o = new DataOutputStream(s.getOutputStream())[ FD ]
Line_2 $$ public void getStream(String request) -->Line_10 $$ o.writeInt(path.length)[ CD ]
Line_9 $$ DataOutputStream o = new DataOutputStream(s.getOutputStream())-->Line_10 $$ o.writeInt(path.length)[ FD ]
Line_2 $$ public void getStream(String request) -->Line_11 $$ o.write(path)[ CD ]
Line_9 $$ DataOutputStream o = new DataOutputStream(s.getOutputStream())-->Line_11 $$ o.write(path)[ FD ]
Line_2 $$ public void getStream(String request) -->Line_12 $$ o.flush()[ CD ]
Line_9 $$ DataOutputStream o = new DataOutputStream(s.getOutputStream())-->Line_12 $$ o.flush()[ FD ]
