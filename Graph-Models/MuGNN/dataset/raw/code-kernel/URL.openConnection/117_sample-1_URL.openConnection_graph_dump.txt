Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void main(String[] args) [ CD ]
Line_2 $$ public void main(String[] args) -->Line_3 $$ File f = File.createTempFile("test", null)[ CD ]
Line_3 $$ File f = File.createTempFile("test", null)-->Line_3 $$ File f = File.createTempFile("test", null)[ CD ]
Line_2 $$ public void main(String[] args) -->Line_4 $$ f.deleteOnExit()[ CD ]
Line_3 $$ File f = File.createTempFile("test", null)-->Line_4 $$ f.deleteOnExit()[ FD ]
Line_2 $$ public void main(String[] args) -->Line_5 $$ String s = f.getAbsolutePath()[ CD ]
Line_5 $$ String s = f.getAbsolutePath()-->Line_5 $$ String s = f.getAbsolutePath()[ CD ]
Line_3 $$ File f = File.createTempFile("test", null)-->Line_5 $$ String s = f.getAbsolutePath()[ FD ]
Line_2 $$ public void main(String[] args) -->Line_6 $$ s = s.startsWith("/") ? s : "/" + s[ CD ]
Line_5 $$ String s = f.getAbsolutePath()-->Line_6 $$ s = s.startsWith("/") ? s : "/" + s[ FD ]
Line_6 $$ s = s.startsWith("/") ? s : "/" + s-->Line_6 $$ s = s.startsWith("/") ? s : "/" + s[ FD ]
Line_5 $$ String s = f.getAbsolutePath()-->Line_6 $$ s = s.startsWith("/") ? s : "/" + s[ FD ]
Line_6 $$ s = s.startsWith("/") ? s : "/" + s-->Line_6 $$ s = s.startsWith("/") ? s : "/" + s[ FD ]
Line_2 $$ public void main(String[] args) -->Line_7 $$ URL url = new URL("file://localhost" + s)[ CD ]
Line_2 $$ public void main(String[] args) -->Line_8 $$ conn = url.openConnection()[ CD ]
Line_7 $$ URL url = new URL("file://localhost" + s)-->Line_8 $$ conn = url.openConnection()[ FD ]
Line_2 $$ public void main(String[] args) -->Line_9 $$ conn.connect()[ CD ]
Line_2 $$ public void main(String[] args) -->Line_10 $$ if (f.lastModified() != conn.getLastModified())[ CD ]
Line_3 $$ File f = File.createTempFile("test", null)-->Line_10 $$ if (f.lastModified() != conn.getLastModified())[ FD ]
Line_2 $$ public void main(String[] args) -->Line_12 $$ f.delete()[ CD ]
Line_3 $$ File f = File.createTempFile("test", null)-->Line_12 $$ f.delete()[ FD ]
