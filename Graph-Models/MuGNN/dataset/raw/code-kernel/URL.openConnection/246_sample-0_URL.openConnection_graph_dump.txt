Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void readUrlAsDocument(String urlAsString, int timeout) [ CD ]
Line_2 $$ public void readUrlAsDocument(String urlAsString, int timeout) -->Line_3 $$ URL url = new URL(urlAsString)[ CD ]
Line_2 $$ public void readUrlAsDocument(String urlAsString, int timeout) -->Line_4 $$ HttpURLConnection hConn = (HttpURLConnection) url.openConnection()[ CD ]
Line_3 $$ URL url = new URL(urlAsString)-->Line_4 $$ HttpURLConnection hConn = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ public void readUrlAsDocument(String urlAsString, int timeout) -->Line_5 $$ hConn.setReadTimeout(timeout)[ CD ]
Line_4 $$ HttpURLConnection hConn = (HttpURLConnection) url.openConnection()-->Line_5 $$ hConn.setReadTimeout(timeout)[ FD ]
Line_2 $$ public void readUrlAsDocument(String urlAsString, int timeout) -->Line_5 $$ hConn.setReadTimeout(timeout)[ FD ]
Line_2 $$ public void readUrlAsDocument(String urlAsString, int timeout) -->Line_6 $$ hConn.setConnectTimeout(timeout)[ CD ]
Line_4 $$ HttpURLConnection hConn = (HttpURLConnection) url.openConnection()-->Line_6 $$ hConn.setConnectTimeout(timeout)[ FD ]
Line_2 $$ public void readUrlAsDocument(String urlAsString, int timeout) -->Line_6 $$ hConn.setConnectTimeout(timeout)[ FD ]
Line_2 $$ public void readUrlAsDocument(String urlAsString, int timeout) -->Line_7 $$ return newDocumentBuilder().parse(hConn.getInputStream())[ CD ]
Line_7 $$ return newDocumentBuilder().parse(hConn.getInputStream())-->Line_7 $$ return newDocumentBuilder().parse(hConn.getInputStream())[ CD ]
Line_4 $$ HttpURLConnection hConn = (HttpURLConnection) url.openConnection()-->Line_7 $$ return newDocumentBuilder().parse(hConn.getInputStream())[ FD ]
