Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void writeResources(String srcPath, File cacheDir, String date) [ CD ]
Line_2 $$ public void writeResources(String srcPath, File cacheDir, String date) -->Line_3 $$ URL url = new URL(srcPath)[ CD ]
Line_2 $$ public void writeResources(String srcPath, File cacheDir, String date) -->Line_4 $$ URLConnection urlConnection = url.openConnection()[ CD ]
Line_4 $$ URLConnection urlConnection = url.openConnection()-->Line_4 $$ URLConnection urlConnection = url.openConnection()[ CD ]
Line_3 $$ URL url = new URL(srcPath)-->Line_4 $$ URLConnection urlConnection = url.openConnection()[ FD ]
Line_2 $$ public void writeResources(String srcPath, File cacheDir, String date) -->Line_5 $$ long last = urlConnection.getLastModified()[ CD ]
Line_5 $$ long last = urlConnection.getLastModified()-->Line_5 $$ long last = urlConnection.getLastModified()[ CD ]
Line_4 $$ URLConnection urlConnection = url.openConnection()-->Line_5 $$ long last = urlConnection.getLastModified()[ FD ]
Line_2 $$ public void writeResources(String srcPath, File cacheDir, String date) -->Line_6 $$ if (last != 0) [ CD ]
Line_5 $$ long last = urlConnection.getLastModified()-->Line_6 $$ if (last != 0) [ FD ]
Line_6 $$ if (last != 0) -->Line_7 $$ fileDate = Long.toString(last)[ CD ]
Line_5 $$ long last = urlConnection.getLastModified()-->Line_7 $$ fileDate = Long.toString(last)[ FD ]
Line_2 $$ public void writeResources(String srcPath, File cacheDir, String date) -->Line_9 $$ if (!cacheDir.canRead() || date == null || !date.equals(fileDate)) [ CD ]
Line_9 $$ if (!cacheDir.canRead() || date == null || !date.equals(fileDate)) -->Line_9 $$ if (!cacheDir.canRead() || date == null || !date.equals(fileDate)) [ CD ]
Line_2 $$ public void writeResources(String srcPath, File cacheDir, String date) -->Line_9 $$ if (!cacheDir.canRead() || date == null || !date.equals(fileDate)) [ FD ]
Line_9 $$ if (!cacheDir.canRead() || date == null || !date.equals(fileDate)) -->Line_9 $$ if (!cacheDir.canRead() || date == null || !date.equals(fileDate)) [ CD ]
Line_2 $$ public void writeResources(String srcPath, File cacheDir, String date) -->Line_9 $$ if (!cacheDir.canRead() || date == null || !date.equals(fileDate)) [ FD ]
Line_9 $$ if (!cacheDir.canRead() || date == null || !date.equals(fileDate)) -->Line_10 $$ recursiveDelete(cacheDir, false)[ CD ]
Line_2 $$ public void writeResources(String srcPath, File cacheDir, String date) -->Line_10 $$ recursiveDelete(cacheDir, false)[ FD ]
Line_9 $$ if (!cacheDir.canRead() || date == null || !date.equals(fileDate)) -->Line_11 $$ unzip(urlConnection.getInputStream(), cacheDir)[ CD ]
Line_2 $$ public void writeResources(String srcPath, File cacheDir, String date) -->Line_11 $$ unzip(urlConnection.getInputStream(), cacheDir)[ FD ]
Line_4 $$ URLConnection urlConnection = url.openConnection()-->Line_11 $$ unzip(urlConnection.getInputStream(), cacheDir)[ FD ]
