Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getUrl(HttpRequest request) [ CD ]
Line_2 $$ public void getUrl(HttpRequest request) -->Line_3 $$ URL url = request.getUrl()[ CD ]
Line_3 $$ URL url = request.getUrl()-->Line_3 $$ URL url = request.getUrl()[ CD ]
Line_2 $$ public void getUrl(HttpRequest request) -->Line_3 $$ URL url = request.getUrl()[ FD ]
Line_2 $$ public void getUrl(HttpRequest request) -->Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_3 $$ URL url = request.getUrl()-->Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ public void getUrl(HttpRequest request) -->Line_5 $$ copyHeadersExceptEncoding(request, conn)[ CD ]
Line_2 $$ public void getUrl(HttpRequest request) -->Line_5 $$ copyHeadersExceptEncoding(request, conn)[ FD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_5 $$ copyHeadersExceptEncoding(request, conn)[ FD ]
Line_2 $$ public void getUrl(HttpRequest request) -->Line_6 $$ return ioUtils.toString(conn.getInputStream())[ CD ]
Line_6 $$ return ioUtils.toString(conn.getInputStream())-->Line_6 $$ return ioUtils.toString(conn.getInputStream())[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_6 $$ return ioUtils.toString(conn.getInputStream())[ FD ]
