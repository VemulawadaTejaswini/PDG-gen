Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void fetchUrl(String url, int expectedResponseCode) [ CD ]
Line_2 $$ public void fetchUrl(String url, int expectedResponseCode) -->Line_3 $$ URLConnection conn = new URL(url).openConnection()[ CD ]
Line_3 $$ URLConnection conn = new URL(url).openConnection()-->Line_3 $$ URLConnection conn = new URL(url).openConnection()[ CD ]
Line_2 $$ public void fetchUrl(String url, int expectedResponseCode) -->Line_4 $$ Assert.assertTrue("URLConenction is not HttpURLConnection: " + conn, conn instanceof HttpURLConnection)[ CD ]
Line_2 $$ public void fetchUrl(String url, int expectedResponseCode) -->Line_5 $$ HttpURLConnection connection = (HttpURLConnection) conn[ CD ]
Line_2 $$ public void fetchUrl(String url, int expectedResponseCode) -->Line_6 $$ connection.connect()[ CD ]
Line_5 $$ HttpURLConnection connection = (HttpURLConnection) conn-->Line_6 $$ connection.connect()[ FD ]
Line_2 $$ public void fetchUrl(String url, int expectedResponseCode) -->Line_7 $$ int responseCode = connection.getResponseCode()[ CD ]
Line_7 $$ int responseCode = connection.getResponseCode()-->Line_7 $$ int responseCode = connection.getResponseCode()[ CD ]
Line_5 $$ HttpURLConnection connection = (HttpURLConnection) conn-->Line_7 $$ int responseCode = connection.getResponseCode()[ FD ]
Line_2 $$ public void fetchUrl(String url, int expectedResponseCode) -->Line_8 $$ assertEquals(url, expectedResponseCode, responseCode)[ CD ]
Line_2 $$ public void fetchUrl(String url, int expectedResponseCode) -->Line_8 $$ assertEquals(url, expectedResponseCode, responseCode)[ FD ]
Line_2 $$ public void fetchUrl(String url, int expectedResponseCode) -->Line_8 $$ assertEquals(url, expectedResponseCode, responseCode)[ FD ]
Line_7 $$ int responseCode = connection.getResponseCode()-->Line_8 $$ assertEquals(url, expectedResponseCode, responseCode)[ FD ]
Line_2 $$ public void fetchUrl(String url, int expectedResponseCode) -->Line_9 $$ return (responseCode == OK) ? getContent(conn) : null[ CD ]
Line_3 $$ URLConnection conn = new URL(url).openConnection()-->Line_9 $$ return (responseCode == OK) ? getContent(conn) : null[ FD ]
