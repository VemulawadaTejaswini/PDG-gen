Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testJetty() [ CD ]
Line_2 $$ public void testJetty() -->Line_3 $$ URL url = new URL(getJettyURL(), "/bar")[ CD ]
Line_2 $$ public void testJetty() -->Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_3 $$ URL url = new URL(getJettyURL(), "/bar")-->Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ public void testJetty() -->Line_5 $$ Assert.assertEquals(conn.getResponseCode(), HttpURLConnection.HTTP_OK)[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_5 $$ Assert.assertEquals(conn.getResponseCode(), HttpURLConnection.HTTP_OK)[ FD ]
Line_2 $$ public void testJetty() -->Line_6 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_6 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_2 $$ public void testJetty() -->Line_7 $$ Assert.assertEquals(reader.readLine(), "foo")[ CD ]
Line_6 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_7 $$ Assert.assertEquals(reader.readLine(), "foo")[ FD ]
Line_2 $$ public void testJetty() -->Line_8 $$ reader.close()[ CD ]
Line_6 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_8 $$ reader.close()[ FD ]
