Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testAnonymousAllowed() [ CD ]
Line_2 $$ public void testAnonymousAllowed() -->Line_3 $$ auth.start()[ CD ]
Line_2 $$ public void testAnonymousAllowed() -->Line_4 $$ URL url = new URL(auth.getBaseURL())[ CD ]
Line_2 $$ public void testAnonymousAllowed() -->Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_4 $$ URL url = new URL(auth.getBaseURL())-->Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ public void testAnonymousAllowed() -->Line_6 $$ conn.connect()[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_6 $$ conn.connect()[ FD ]
Line_2 $$ public void testAnonymousAllowed() -->Line_7 $$ Assert.assertEquals(HttpURLConnection.HTTP_OK, conn.getResponseCode())[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_7 $$ Assert.assertEquals(HttpURLConnection.HTTP_OK, conn.getResponseCode())[ FD ]
Line_2 $$ public void testAnonymousAllowed() -->Line_8 $$ auth.stop()[ CD ]
