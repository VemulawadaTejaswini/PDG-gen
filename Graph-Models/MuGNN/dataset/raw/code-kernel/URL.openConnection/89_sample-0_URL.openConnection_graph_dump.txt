Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void doTestForbiddenMethods(int port, String method) [ CD ]
Line_2 $$ public void doTestForbiddenMethods(int port, String method) -->Line_3 $$ URL url = new URL("http://0.0.0.0:" + String.valueOf(port) + "/metrics")[ CD ]
Line_2 $$ public void doTestForbiddenMethods(int port, String method) -->Line_3 $$ URL url = new URL("http://0.0.0.0:" + String.valueOf(port) + "/metrics")[ FD ]
Line_2 $$ public void doTestForbiddenMethods(int port, String method) -->Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_3 $$ URL url = new URL("http://0.0.0.0:" + String.valueOf(port) + "/metrics")-->Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ public void doTestForbiddenMethods(int port, String method) -->Line_5 $$ conn.setRequestMethod(method)[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_5 $$ conn.setRequestMethod(method)[ FD ]
Line_2 $$ public void doTestForbiddenMethods(int port, String method) -->Line_5 $$ conn.setRequestMethod(method)[ FD ]
Line_2 $$ public void doTestForbiddenMethods(int port, String method) -->Line_6 $$ Assert.assertEquals(HttpServletResponse.SC_FORBIDDEN, conn.getResponseCode())[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_6 $$ Assert.assertEquals(HttpServletResponse.SC_FORBIDDEN, conn.getResponseCode())[ FD ]
