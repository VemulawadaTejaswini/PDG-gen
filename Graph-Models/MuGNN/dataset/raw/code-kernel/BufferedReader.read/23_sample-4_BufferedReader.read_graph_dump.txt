Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getStartOfSelected(String val) [ CD ]
Line_2 $$ public void getStartOfSelected(String val) -->Line_3 $$ while ((cur = in.read()) != -1) [ CD ]
Line_2 $$ public void getStartOfSelected(String val) -->Line_2 $$ public void getStartOfSelected(String val) [ CD ]
Line_3 $$ while ((cur = in.read()) != -1) -->Line_4 $$ char c = (char) cur[ CD ]
Line_3 $$ while ((cur = in.read()) != -1) -->Line_5 $$ if (c == '\n' || ("" + c).equals(System.getProperty("line.separator"))) [ CD ]
Line_5 $$ if (c == '\n' || ("" + c).equals(System.getProperty("line.separator"))) -->Line_6 $$ int index = line.indexOf(search)[ CD ]
Line_6 $$ int index = line.indexOf(search)-->Line_6 $$ int index = line.indexOf(search)[ CD ]
Line_5 $$ if (c == '\n' || ("" + c).equals(System.getProperty("line.separator"))) -->Line_7 $$ if (index != -1) [ CD ]
Line_6 $$ int index = line.indexOf(search)-->Line_7 $$ if (index != -1) [ FD ]
Line_7 $$ if (index != -1) -->Line_8 $$ return count - line.length() + index[ CD ]
Line_6 $$ int index = line.indexOf(search)-->Line_7 $$ if (index != -1) [ FD ]
