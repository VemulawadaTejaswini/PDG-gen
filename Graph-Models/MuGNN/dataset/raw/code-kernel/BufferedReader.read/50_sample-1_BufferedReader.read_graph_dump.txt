Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void doInBackground(Void... arg0) [ CD ]
Line_2 $$ public void doInBackground(Void... arg0) -->Line_3 $$ File file = new File(path.toString())[ CD ]
Line_2 $$ public void doInBackground(Void... arg0) -->Line_4 $$ if (!file.canRead()) [ CD ]
Line_4 $$ if (!file.canRead()) -->Line_4 $$ if (!file.canRead()) [ CD ]
Line_4 $$ if (!file.canRead()) -->Line_4 $$ if (!file.canRead()) [ CD ]
Line_3 $$ File file = new File(path.toString())-->Line_4 $$ if (!file.canRead()) [ FD ]
Line_4 $$ if (!file.canRead()) -->Line_8 $$ /*[ CD ]
Line_8 $$ /*-->Line_8 $$ /*[ CD ]
Line_3 $$ File file = new File(path.toString())-->Line_8 $$ /*[ FD ]
Line_4 $$ if (!file.canRead()) -->Line_9 $$ while ((read = re.read(buffer, 0, 1000)) != -1) rea.append(buffer, 0, read)[ CD ]
Line_4 $$ if (!file.canRead()) -->Line_4 $$ if (!file.canRead()) [ CD ]
Line_8 $$ /*-->Line_9 $$ while ((read = re.read(buffer, 0, 1000)) != -1) rea.append(buffer, 0, read)[ FD ]
Line_9 $$ while ((read = re.read(buffer, 0, 1000)) != -1) rea.append(buffer, 0, read)-->Line_10 $$ rea.append(buffer, 0, read)[ CD ]
Line_4 $$ if (!file.canRead()) -->Line_11 $$ re.close()[ CD ]
Line_8 $$ /*-->Line_11 $$ re.close()[ FD ]
Line_4 $$ if (!file.canRead()) -->Line_12 $$ openFile(path, rea)[ CD ]
Line_4 $$ if (!file.canRead()) -->Line_13 $$ return null[ CD ]
Line_2 $$ public void doInBackground(Void... arg0) -->Line_15 $$ FileReader reader = new FileReader(new File(path.toString()))[ CD ]
