Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getSqlStatements(InputStream stream) [ CD ]
Line_2 $$ public void getSqlStatements(InputStream stream) -->Line_3 $$ while ((r = reader.read()) != END_OF_STREAM) [ CD ]
Line_2 $$ public void getSqlStatements(InputStream stream) -->Line_2 $$ public void getSqlStatements(InputStream stream) [ CD ]
Line_3 $$ while ((r = reader.read()) != END_OF_STREAM) -->Line_4 $$ char character = (char) r[ CD ]
Line_3 $$ while ((r = reader.read()) != END_OF_STREAM) -->Line_5 $$ sb.append(character)[ CD ]
Line_4 $$ char character = (char) r-->Line_5 $$ sb.append(character)[ FD ]
Line_2 $$ public void getSqlStatements(InputStream stream) -->Line_7 $$ return COMMENT_PATTERN.matcher(sb).replaceAll(Strings.EMPTY).split(STATEMENT_DELIMITER)[ CD ]
Line_7 $$ return COMMENT_PATTERN.matcher(sb).replaceAll(Strings.EMPTY).split(STATEMENT_DELIMITER)-->Line_7 $$ return COMMENT_PATTERN.matcher(sb).replaceAll(Strings.EMPTY).split(STATEMENT_DELIMITER)[ CD ]
Line_4 $$ char character = (char) r-->Line_5 $$ sb.append(character)[ FD ]
