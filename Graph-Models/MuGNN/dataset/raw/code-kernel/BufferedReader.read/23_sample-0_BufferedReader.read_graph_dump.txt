Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void readStreamAsString(final InputStream iStream) [ CD ]
Line_2 $$ public void readStreamAsString(final InputStream iStream) -->Line_3 $$ final BufferedReader reader = new BufferedReader(new InputStreamReader(iStream))[ CD ]
Line_2 $$ public void readStreamAsString(final InputStream iStream) -->Line_4 $$ while ((numRead = reader.read(buf)) != -1) [ CD ]
Line_2 $$ public void readStreamAsString(final InputStream iStream) -->Line_2 $$ public void readStreamAsString(final InputStream iStream) [ CD ]
Line_3 $$ final BufferedReader reader = new BufferedReader(new InputStreamReader(iStream))-->Line_4 $$ while ((numRead = reader.read(buf)) != -1) [ FD ]
Line_4 $$ while ((numRead = reader.read(buf)) != -1) -->Line_5 $$ String readData = String.valueOf(buf, 0, numRead)[ CD ]
Line_5 $$ String readData = String.valueOf(buf, 0, numRead)-->Line_5 $$ String readData = String.valueOf(buf, 0, numRead)[ CD ]
Line_4 $$ while ((numRead = reader.read(buf)) != -1) -->Line_6 $$ if (fileData.length() == 0 && readData.startsWith(UTF8_BOM))[ CD ]
Line_5 $$ String readData = String.valueOf(buf, 0, numRead)-->Line_6 $$ if (fileData.length() == 0 && readData.startsWith(UTF8_BOM))[ FD ]
Line_6 $$ if (fileData.length() == 0 && readData.startsWith(UTF8_BOM))-->Line_7 $$ readData = readData.substring(1)[ CD ]
Line_5 $$ String readData = String.valueOf(buf, 0, numRead)-->Line_7 $$ readData = readData.substring(1)[ FD ]
Line_7 $$ readData = readData.substring(1)-->Line_7 $$ readData = readData.substring(1)[ FD ]
Line_7 $$ readData = readData.substring(1)-->Line_7 $$ readData = readData.substring(1)[ CD ]
Line_5 $$ String readData = String.valueOf(buf, 0, numRead)-->Line_7 $$ readData = readData.substring(1)[ FD ]
Line_7 $$ readData = readData.substring(1)-->Line_7 $$ readData = readData.substring(1)[ FD ]
Line_4 $$ while ((numRead = reader.read(buf)) != -1) -->Line_8 $$ fileData.append(readData)[ CD ]
Line_5 $$ String readData = String.valueOf(buf, 0, numRead)-->Line_8 $$ fileData.append(readData)[ FD ]
Line_7 $$ readData = readData.substring(1)-->Line_8 $$ fileData.append(readData)[ FD ]
Line_2 $$ public void readStreamAsString(final InputStream iStream) -->Line_10 $$ reader.close()[ CD ]
Line_3 $$ final BufferedReader reader = new BufferedReader(new InputStreamReader(iStream))-->Line_10 $$ reader.close()[ FD ]
Line_5 $$ String readData = String.valueOf(buf, 0, numRead)-->Line_6 $$ if (fileData.length() == 0 && readData.startsWith(UTF8_BOM))[ FD ]
Line_7 $$ readData = readData.substring(1)-->Line_6 $$ if (fileData.length() == 0 && readData.startsWith(UTF8_BOM))[ FD ]
Line_5 $$ String readData = String.valueOf(buf, 0, numRead)-->Line_7 $$ readData = readData.substring(1)[ FD ]
Line_7 $$ readData = readData.substring(1)-->Line_7 $$ readData = readData.substring(1)[ FD ]
Line_5 $$ String readData = String.valueOf(buf, 0, numRead)-->Line_8 $$ fileData.append(readData)[ FD ]
Line_7 $$ readData = readData.substring(1)-->Line_8 $$ fileData.append(readData)[ FD ]
