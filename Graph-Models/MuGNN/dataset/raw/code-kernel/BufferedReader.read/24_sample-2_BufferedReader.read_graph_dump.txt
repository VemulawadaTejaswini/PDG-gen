Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void updateConsoleLog(File dest, InputStream in, LineListener lineListener) [ CD ]
Line_2 $$ public void updateConsoleLog(File dest, InputStream in, LineListener lineListener) -->Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(in))[ CD ]
Line_2 $$ public void updateConsoleLog(File dest, InputStream in, LineListener lineListener) -->Line_4 $$ while ((hasRead = reader.read(data, offset, data.length - offset)) != -1) [ CD ]
Line_2 $$ public void updateConsoleLog(File dest, InputStream in, LineListener lineListener) -->Line_2 $$ public void updateConsoleLog(File dest, InputStream in, LineListener lineListener) [ CD ]
Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(in))-->Line_4 $$ while ((hasRead = reader.read(data, offset, data.length - offset)) != -1) [ FD ]
Line_4 $$ while ((hasRead = reader.read(data, offset, data.length - offset)) != -1) -->Line_7 $$ for (int i = end; i > 0; i--) [ CD ]
Line_4 $$ while ((hasRead = reader.read(data, offset, data.length - offset)) != -1) -->Line_4 $$ while ((hasRead = reader.read(data, offset, data.length - offset)) != -1) [ CD ]
Line_7 $$ for (int i = end; i > 0; i--) -->Line_7 $$ for (int i = end; i > 0; i--) [ CD ]
Line_7 $$ for (int i = end; i > 0; i--) -->Line_7 $$ for (int i = end; i > 0; i--) [ CD ]
Line_7 $$ for (int i = end; i > 0; i--) -->Line_7 $$ for (int i = end; i > 0; i--) [ FD ]
Line_7 $$ for (int i = end; i > 0; i--) -->Line_8 $$ int index = i - 1[ CD ]
Line_7 $$ for (int i = end; i > 0; i--) -->Line_9 $$ char c = data[index][ CD ]
Line_7 $$ for (int i = end; i > 0; i--) -->Line_10 $$ if ('\n' == c) [ CD ]
Line_9 $$ char c = data[index]-->Line_10 $$ if ('\n' == c) [ FD ]
Line_7 $$ for (int i = end; i > 0; i--) -->Line_13 $$ overflow[index] = data[index][ CD ]
Line_4 $$ while ((hasRead = reader.read(data, offset, data.length - offset)) != -1) -->Line_16 $$ if (overflowIndex == 0) [ CD ]
Line_16 $$ if (overflowIndex == 0) -->Line_17 $$ if (end == data.length) [ CD ]
Line_17 $$ if (end == data.length) -->Line_18 $$ data = realloc(data)[ CD ]
Line_17 $$ if (end == data.length) -->Line_19 $$ overflow = realloc(overflow)[ CD ]
Line_4 $$ while ((hasRead = reader.read(data, offset, data.length - offset)) != -1) -->Line_27 $$ lineListener.copyLine(new CharArraySequence(data, 0, overflowIndex))[ CD ]
Line_2 $$ public void updateConsoleLog(File dest, InputStream in, LineListener lineListener) -->Line_27 $$ lineListener.copyLine(new CharArraySequence(data, 0, overflowIndex))[ FD ]
Line_4 $$ while ((hasRead = reader.read(data, offset, data.length - offset)) != -1) -->Line_28 $$ writer.write(data, 0, overflowIndex)[ CD ]
Line_4 $$ while ((hasRead = reader.read(data, offset, data.length - offset)) != -1) -->Line_29 $$ for (int i = overflowIndex; i < end; i++) [ CD ]
Line_4 $$ while ((hasRead = reader.read(data, offset, data.length - offset)) != -1) -->Line_4 $$ while ((hasRead = reader.read(data, offset, data.length - offset)) != -1) [ CD ]
Line_7 $$ for (int i = end; i > 0; i--) -->Line_29 $$ for (int i = overflowIndex; i < end; i++) [ FD ]
Line_29 $$ for (int i = overflowIndex; i < end; i++) -->Line_29 $$ for (int i = overflowIndex; i < end; i++) [ CD ]
Line_29 $$ for (int i = overflowIndex; i < end; i++) -->Line_29 $$ for (int i = overflowIndex; i < end; i++) [ CD ]
Line_29 $$ for (int i = overflowIndex; i < end; i++) -->Line_29 $$ for (int i = overflowIndex; i < end; i++) [ FD ]
Line_7 $$ for (int i = end; i > 0; i--) -->Line_29 $$ for (int i = overflowIndex; i < end; i++) [ FD ]
Line_29 $$ for (int i = overflowIndex; i < end; i++) -->Line_30 $$ data[i - overflowIndex] = overflow[i][ CD ]
Line_7 $$ for (int i = end; i > 0; i--) -->Line_7 $$ for (int i = end; i > 0; i--) [ FD ]
Line_7 $$ for (int i = end; i > 0; i--) -->Line_7 $$ for (int i = end; i > 0; i--) [ FD ]
Line_7 $$ for (int i = end; i > 0; i--) -->Line_7 $$ for (int i = end; i > 0; i--) [ FD ]
Line_9 $$ char c = data[index]-->Line_10 $$ if ('\n' == c) [ FD ]
Line_29 $$ for (int i = overflowIndex; i < end; i++) -->Line_29 $$ for (int i = overflowIndex; i < end; i++) [ FD ]
Line_29 $$ for (int i = overflowIndex; i < end; i++) -->Line_29 $$ for (int i = overflowIndex; i < end; i++) [ FD ]
Line_29 $$ for (int i = overflowIndex; i < end; i++) -->Line_29 $$ for (int i = overflowIndex; i < end; i++) [ FD ]
