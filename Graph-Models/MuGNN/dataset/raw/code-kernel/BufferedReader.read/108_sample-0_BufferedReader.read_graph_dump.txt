Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void loadRawTextResourceAsString(Context context, int resourceId) [ CD ]
Line_2 $$ public void loadRawTextResourceAsString(Context context, int resourceId) -->Line_3 $$ reader = new BufferedReader(new InputStreamReader(context.getResources().openRawResource(resourceId)))[ FD ]
Line_2 $$ public void loadRawTextResourceAsString(Context context, int resourceId) -->Line_3 $$ reader = new BufferedReader(new InputStreamReader(context.getResources().openRawResource(resourceId)))[ FD ]
Line_2 $$ public void loadRawTextResourceAsString(Context context, int resourceId) -->Line_4 $$ while ((count = reader.read(buf, 0, READ_BUF_LEN)) != -1) [ CD ]
Line_2 $$ public void loadRawTextResourceAsString(Context context, int resourceId) -->Line_2 $$ public void loadRawTextResourceAsString(Context context, int resourceId) [ CD ]
Line_4 $$ while ((count = reader.read(buf, 0, READ_BUF_LEN)) != -1) -->Line_5 $$ builder.append(buf, 0, count)[ CD ]
Line_2 $$ public void loadRawTextResourceAsString(Context context, int resourceId) -->Line_7 $$ return builder.toString()[ CD ]
Line_7 $$ return builder.toString()-->Line_7 $$ return builder.toString()[ CD ]
