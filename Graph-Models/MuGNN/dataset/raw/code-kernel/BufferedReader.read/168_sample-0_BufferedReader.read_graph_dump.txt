Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testSSLOpenRequestClose() [ CD ]
Line_2 $$ public void testSSLOpenRequestClose() -->Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream()))[ CD ]
Line_2 $$ public void testSSLOpenRequestClose() -->Line_4 $$ SimpleHttpResponse response = httpParser.readResponse(reader)[ CD ]
Line_4 $$ SimpleHttpResponse response = httpParser.readResponse(reader)-->Line_4 $$ SimpleHttpResponse response = httpParser.readResponse(reader)[ CD ]
Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream()))-->Line_4 $$ SimpleHttpResponse response = httpParser.readResponse(reader)[ FD ]
Line_2 $$ public void testSSLOpenRequestClose() -->Line_5 $$ Assert.assertEquals("200", response.getCode())[ CD ]
Line_4 $$ SimpleHttpResponse response = httpParser.readResponse(reader)-->Line_5 $$ Assert.assertEquals("200", response.getCode())[ FD ]
Line_2 $$ public void testSSLOpenRequestClose() -->Line_6 $$ Assert.assertEquals(-1, reader.read())[ CD ]
Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream()))-->Line_6 $$ Assert.assertEquals(-1, reader.read())[ FD ]
Line_2 $$ public void testSSLOpenRequestClose() -->Line_7 $$ socket.close()[ CD ]
