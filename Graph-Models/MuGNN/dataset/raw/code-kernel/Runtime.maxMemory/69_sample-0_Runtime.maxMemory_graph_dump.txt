Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void writeReport(final PrintWriter writer, ExceptionAnalysis analysis) [ CD ]
Line_2 $$ public void writeReport(final PrintWriter writer, ExceptionAnalysis analysis) -->Line_3 $$ Runtime runtime = Runtime.getRuntime()[ CD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_3 $$ Runtime runtime = Runtime.getRuntime()[ CD ]
Line_2 $$ public void writeReport(final PrintWriter writer, ExceptionAnalysis analysis) -->Line_4 $$ writer.printf("%n%nMemory:%n  %,15d bytes free%n  %,15d bytes total%n  %,15d bytes max%n", runtime.freeMemory(), runtime.totalMemory(), runtime.maxMemory())[ CD ]
Line_2 $$ public void writeReport(final PrintWriter writer, ExceptionAnalysis analysis) -->Line_4 $$ writer.printf("%n%nMemory:%n  %,15d bytes free%n  %,15d bytes total%n  %,15d bytes max%n", runtime.freeMemory(), runtime.totalMemory(), runtime.maxMemory())[ FD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_4 $$ writer.printf("%n%nMemory:%n  %,15d bytes free%n  %,15d bytes total%n  %,15d bytes max%n", runtime.freeMemory(), runtime.totalMemory(), runtime.maxMemory())[ FD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_4 $$ writer.printf("%n%nMemory:%n  %,15d bytes free%n  %,15d bytes total%n  %,15d bytes max%n", runtime.freeMemory(), runtime.totalMemory(), runtime.maxMemory())[ FD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_4 $$ writer.printf("%n%nMemory:%n  %,15d bytes free%n  %,15d bytes total%n  %,15d bytes max%n", runtime.freeMemory(), runtime.totalMemory(), runtime.maxMemory())[ FD ]
