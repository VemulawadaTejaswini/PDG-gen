Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void logProgress(Object info) [ CD ]
Line_2 $$ public void logProgress(Object info) -->Line_3 $$ Runtime runtime = Runtime.getRuntime()[ CD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_3 $$ Runtime runtime = Runtime.getRuntime()[ CD ]
Line_2 $$ public void logProgress(Object info) -->Line_4 $$ logger.debug("Step: " + info + " memory: free / total / max MB " + runtime.freeMemory() / (1000 * 1000) + " / " + runtime.totalMemory() / (1000 * 1000) + " / " + runtime.maxMemory() / (1000 * 1000))[ CD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_4 $$ logger.debug("Step: " + info + " memory: free / total / max MB " + runtime.freeMemory() / (1000 * 1000) + " / " + runtime.totalMemory() / (1000 * 1000) + " / " + runtime.maxMemory() / (1000 * 1000))[ FD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_4 $$ logger.debug("Step: " + info + " memory: free / total / max MB " + runtime.freeMemory() / (1000 * 1000) + " / " + runtime.totalMemory() / (1000 * 1000) + " / " + runtime.maxMemory() / (1000 * 1000))[ FD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_4 $$ logger.debug("Step: " + info + " memory: free / total / max MB " + runtime.freeMemory() / (1000 * 1000) + " / " + runtime.totalMemory() / (1000 * 1000) + " / " + runtime.maxMemory() / (1000 * 1000))[ FD ]
