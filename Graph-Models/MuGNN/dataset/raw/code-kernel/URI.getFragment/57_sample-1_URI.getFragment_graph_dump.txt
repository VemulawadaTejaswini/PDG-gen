Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void extractData(ClientHttpResponse response) [ CD ]
Line_2 $$ public void extractData(ClientHttpResponse response) -->Line_3 $$ URI location = response.getHeaders().getLocation()[ CD ]
Line_3 $$ URI location = response.getHeaders().getLocation()-->Line_3 $$ URI location = response.getHeaders().getLocation()[ CD ]
Line_2 $$ public void extractData(ClientHttpResponse response) -->Line_3 $$ URI location = response.getHeaders().getLocation()[ FD ]
Line_2 $$ public void extractData(ClientHttpResponse response) -->Line_4 $$ if (location == null) [ CD ]
Line_3 $$ URI location = response.getHeaders().getLocation()-->Line_4 $$ if (location == null) [ FD ]
Line_4 $$ if (location == null) -->Line_5 $$ return null[ CD ]
Line_2 $$ public void extractData(ClientHttpResponse response) -->Line_7 $$ String fragment = location.getFragment()[ CD ]
Line_7 $$ String fragment = location.getFragment()-->Line_7 $$ String fragment = location.getFragment()[ CD ]
Line_3 $$ URI location = response.getHeaders().getLocation()-->Line_7 $$ String fragment = location.getFragment()[ FD ]
Line_2 $$ public void extractData(ClientHttpResponse response) -->Line_8 $$ OAuth2AccessToken accessToken = DefaultOAuth2AccessToken.valueOf(OAuth2Utils.extractMap(fragment))[ CD ]
Line_8 $$ OAuth2AccessToken accessToken = DefaultOAuth2AccessToken.valueOf(OAuth2Utils.extractMap(fragment))-->Line_8 $$ OAuth2AccessToken accessToken = DefaultOAuth2AccessToken.valueOf(OAuth2Utils.extractMap(fragment))[ CD ]
Line_7 $$ String fragment = location.getFragment()-->Line_8 $$ OAuth2AccessToken accessToken = DefaultOAuth2AccessToken.valueOf(OAuth2Utils.extractMap(fragment))[ FD ]
Line_2 $$ public void extractData(ClientHttpResponse response) -->Line_9 $$ if (accessToken.getValue() == null) [ CD ]
Line_8 $$ OAuth2AccessToken accessToken = DefaultOAuth2AccessToken.valueOf(OAuth2Utils.extractMap(fragment))-->Line_9 $$ if (accessToken.getValue() == null) [ FD ]
Line_3 $$ URI location = response.getHeaders().getLocation()-->Line_10 $$ throw new UserRedirectRequiredException(location.toString(), Collections.<String, String>emptyMap())[ FD ]
