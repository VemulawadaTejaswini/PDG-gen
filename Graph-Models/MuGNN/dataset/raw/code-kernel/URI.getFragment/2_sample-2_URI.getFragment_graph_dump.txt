Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void HarPathHelper(HiveConf hconf, URI archive, URI originalBase) [ CD ]
Line_2 $$ public void HarPathHelper(HiveConf hconf, URI archive, URI originalBase) -->Line_3 $$ String parentHost = archive.getHost()[ CD ]
Line_3 $$ String parentHost = archive.getHost()-->Line_3 $$ String parentHost = archive.getHost()[ CD ]
Line_2 $$ public void HarPathHelper(HiveConf hconf, URI archive, URI originalBase) -->Line_3 $$ String parentHost = archive.getHost()[ FD ]
Line_2 $$ public void HarPathHelper(HiveConf hconf, URI archive, URI originalBase) -->Line_4 $$ if (parentHost == null) [ CD ]
Line_3 $$ String parentHost = archive.getHost()-->Line_4 $$ if (parentHost == null) [ FD ]
Line_2 $$ public void HarPathHelper(HiveConf hconf, URI archive, URI originalBase) -->Line_5 $$ harHost = archive.getScheme() + "-localhost"[ FD ]
Line_2 $$ public void HarPathHelper(HiveConf hconf, URI archive, URI originalBase) -->Line_7 $$ harHost = archive.getScheme() + "-" + parentHost[ FD ]
Line_2 $$ public void HarPathHelper(HiveConf hconf, URI archive, URI originalBase) -->Line_9 $$ String path = addSlash(archive.getPath())[ CD ]
Line_9 $$ String path = addSlash(archive.getPath())-->Line_9 $$ String path = addSlash(archive.getPath())[ CD ]
Line_2 $$ public void HarPathHelper(HiveConf hconf, URI archive, URI originalBase) -->Line_9 $$ String path = addSlash(archive.getPath())[ FD ]
Line_2 $$ public void HarPathHelper(HiveConf hconf, URI archive, URI originalBase) -->Line_10 $$ if (!path.endsWith(".har/")) [ CD ]
Line_10 $$ if (!path.endsWith(".har/")) -->Line_10 $$ if (!path.endsWith(".har/")) [ CD ]
Line_10 $$ if (!path.endsWith(".har/")) -->Line_10 $$ if (!path.endsWith(".har/")) [ CD ]
Line_9 $$ String path = addSlash(archive.getPath())-->Line_10 $$ if (!path.endsWith(".har/")) [ FD ]
Line_2 $$ public void HarPathHelper(HiveConf hconf, URI archive, URI originalBase) -->Line_13 $$ base = new URI("har", archive.getUserInfo(), harHost, archive.getPort(), path, archive.getQuery(), archive.getFragment())[ FD ]
Line_2 $$ public void HarPathHelper(HiveConf hconf, URI archive, URI originalBase) -->Line_13 $$ base = new URI("har", archive.getUserInfo(), harHost, archive.getPort(), path, archive.getQuery(), archive.getFragment())[ FD ]
Line_2 $$ public void HarPathHelper(HiveConf hconf, URI archive, URI originalBase) -->Line_13 $$ base = new URI("har", archive.getUserInfo(), harHost, archive.getPort(), path, archive.getQuery(), archive.getFragment())[ FD ]
Line_2 $$ public void HarPathHelper(HiveConf hconf, URI archive, URI originalBase) -->Line_13 $$ base = new URI("har", archive.getUserInfo(), harHost, archive.getPort(), path, archive.getQuery(), archive.getFragment())[ FD ]
