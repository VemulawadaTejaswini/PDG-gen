Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void NetconfProtocolSession(ProtocolSessionContext protocolSessionContext, String sessionID) [ CD ]
Line_2 $$ public void NetconfProtocolSession(ProtocolSessionContext protocolSessionContext, String sessionID) -->Line_3 $$ if (authentication.equals(SessionContext.AuthType.PASSWORD)) [ CD ]
Line_3 $$ if (authentication.equals(SessionContext.AuthType.PASSWORD)) -->Line_3 $$ if (authentication.equals(SessionContext.AuthType.PASSWORD)) [ CD ]
Line_3 $$ if (authentication.equals(SessionContext.AuthType.PASSWORD)) -->Line_4 $$ context.setAuthenticationType(SessionContext.AuthType.PASSWORD)[ CD ]
Line_3 $$ if (authentication.equals(SessionContext.AuthType.PASSWORD)) -->Line_5 $$ String userName = (String) protocolSessionContext.getSessionParameters().get(ProtocolSessionContext.USERNAME)[ CD ]
Line_2 $$ public void NetconfProtocolSession(ProtocolSessionContext protocolSessionContext, String sessionID) -->Line_5 $$ String userName = (String) protocolSessionContext.getSessionParameters().get(ProtocolSessionContext.USERNAME)[ FD ]
Line_3 $$ if (authentication.equals(SessionContext.AuthType.PASSWORD)) -->Line_6 $$ String password = (String) protocolSessionContext.getSessionParameters().get(ProtocolSessionContext.PASSWORD)[ CD ]
Line_2 $$ public void NetconfProtocolSession(ProtocolSessionContext protocolSessionContext, String sessionID) -->Line_6 $$ String password = (String) protocolSessionContext.getSessionParameters().get(ProtocolSessionContext.PASSWORD)[ FD ]
Line_3 $$ if (authentication.equals(SessionContext.AuthType.PASSWORD)) -->Line_7 $$ String userInfo = userName + ":" + password[ CD ]
Line_3 $$ if (authentication.equals(SessionContext.AuthType.PASSWORD)) -->Line_8 $$ URI uri1 = new URI(uri)[ CD ]
Line_3 $$ if (authentication.equals(SessionContext.AuthType.PASSWORD)) -->Line_9 $$ URI uri2 = new URI(uri1.getScheme(), userInfo, uri1.getHost(), uri1.getPort(), uri1.getPath(), uri1.getQuery(), uri1.getFragment())[ CD ]
Line_8 $$ URI uri1 = new URI(uri)-->Line_9 $$ URI uri2 = new URI(uri1.getScheme(), userInfo, uri1.getHost(), uri1.getPort(), uri1.getPath(), uri1.getQuery(), uri1.getFragment())[ FD ]
Line_8 $$ URI uri1 = new URI(uri)-->Line_9 $$ URI uri2 = new URI(uri1.getScheme(), userInfo, uri1.getHost(), uri1.getPort(), uri1.getPath(), uri1.getQuery(), uri1.getFragment())[ FD ]
Line_8 $$ URI uri1 = new URI(uri)-->Line_9 $$ URI uri2 = new URI(uri1.getScheme(), userInfo, uri1.getHost(), uri1.getPort(), uri1.getPath(), uri1.getQuery(), uri1.getFragment())[ FD ]
Line_8 $$ URI uri1 = new URI(uri)-->Line_9 $$ URI uri2 = new URI(uri1.getScheme(), userInfo, uri1.getHost(), uri1.getPort(), uri1.getPath(), uri1.getQuery(), uri1.getFragment())[ FD ]
Line_8 $$ URI uri1 = new URI(uri)-->Line_9 $$ URI uri2 = new URI(uri1.getScheme(), userInfo, uri1.getHost(), uri1.getPort(), uri1.getPath(), uri1.getQuery(), uri1.getFragment())[ FD ]
Line_8 $$ URI uri1 = new URI(uri)-->Line_9 $$ URI uri2 = new URI(uri1.getScheme(), userInfo, uri1.getHost(), uri1.getPort(), uri1.getPath(), uri1.getQuery(), uri1.getFragment())[ FD ]
Line_3 $$ if (authentication.equals(SessionContext.AuthType.PASSWORD)) -->Line_13 $$ context.setURI(uri2)[ CD ]
Line_9 $$ URI uri2 = new URI(uri1.getScheme(), userInfo, uri1.getHost(), uri1.getPort(), uri1.getPath(), uri1.getQuery(), uri1.getFragment())-->Line_13 $$ context.setURI(uri2)[ FD ]
Line_3 $$ if (authentication.equals(SessionContext.AuthType.PASSWORD)) -->Line_15 $$ if (authentication.equals(SessionContext.AuthType.PUBLICKEY)) [ CD ]
Line_15 $$ if (authentication.equals(SessionContext.AuthType.PUBLICKEY)) -->Line_15 $$ if (authentication.equals(SessionContext.AuthType.PUBLICKEY)) [ CD ]
Line_15 $$ if (authentication.equals(SessionContext.AuthType.PUBLICKEY)) -->Line_16 $$ String keyURI = (String) protocolSessionContext.getSessionParameters().get(ProtocolSessionContext.KEY_PATH)[ CD ]
Line_2 $$ public void NetconfProtocolSession(ProtocolSessionContext protocolSessionContext, String sessionID) -->Line_16 $$ String keyURI = (String) protocolSessionContext.getSessionParameters().get(ProtocolSessionContext.KEY_PATH)[ FD ]
Line_15 $$ if (authentication.equals(SessionContext.AuthType.PUBLICKEY)) -->Line_17 $$ if ((keyURI == null) || (keyURI.length() == 0)) [ CD ]
Line_16 $$ String keyURI = (String) protocolSessionContext.getSessionParameters().get(ProtocolSessionContext.KEY_PATH)-->Line_17 $$ if ((keyURI == null) || (keyURI.length() == 0)) [ FD ]
Line_15 $$ if (authentication.equals(SessionContext.AuthType.PUBLICKEY)) -->Line_21 $$ context.setKeyUsername((String) protocolSessionContext.getSessionParameters().get(ProtocolSessionContext.KEY_USERNAME))[ CD ]
Line_2 $$ public void NetconfProtocolSession(ProtocolSessionContext protocolSessionContext, String sessionID) -->Line_21 $$ context.setKeyUsername((String) protocolSessionContext.getSessionParameters().get(ProtocolSessionContext.KEY_USERNAME))[ FD ]
Line_15 $$ if (authentication.equals(SessionContext.AuthType.PUBLICKEY)) -->Line_22 $$ context.setKeyPassword((String) protocolSessionContext.getSessionParameters().get(ProtocolSessionContext.KEY_PASSPHRASE))[ CD ]
Line_2 $$ public void NetconfProtocolSession(ProtocolSessionContext protocolSessionContext, String sessionID) -->Line_22 $$ context.setKeyPassword((String) protocolSessionContext.getSessionParameters().get(ProtocolSessionContext.KEY_PASSPHRASE))[ FD ]
Line_15 $$ if (authentication.equals(SessionContext.AuthType.PUBLICKEY)) -->Line_23 $$ context.setKeyLocation((String) protocolSessionContext.getSessionParameters().get(ProtocolSessionContext.KEY_PATH))[ CD ]
Line_2 $$ public void NetconfProtocolSession(ProtocolSessionContext protocolSessionContext, String sessionID) -->Line_23 $$ context.setKeyLocation((String) protocolSessionContext.getSessionParameters().get(ProtocolSessionContext.KEY_PATH))[ FD ]
Line_15 $$ if (authentication.equals(SessionContext.AuthType.PUBLICKEY)) -->Line_24 $$ context.setAuthenticationType(SessionContext.AuthType.PUBLICKEY)[ CD ]
