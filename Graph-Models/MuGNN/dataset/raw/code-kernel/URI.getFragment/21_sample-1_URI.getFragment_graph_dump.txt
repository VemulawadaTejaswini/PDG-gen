Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void addShareLib(Configuration conf, String[] actionShareLibNames) [ CD ]
Line_4 $$ List<Path> listOfPaths = shareLibService.getShareLibJars(actionShareLibName)-->Line_4 $$ List<Path> listOfPaths = shareLibService.getShareLibJars(actionShareLibName)[ CD ]
Line_3 $$ for (String actionShareLibName : actionShareLibNames) -->Line_4 $$ List<Path> listOfPaths = shareLibService.getShareLibJars(actionShareLibName)[ FD ]
Line_5 $$ if (listOfPaths != null && !listOfPaths.isEmpty()) -->Line_5 $$ if (listOfPaths != null && !listOfPaths.isEmpty()) [ CD ]
Line_4 $$ List<Path> listOfPaths = shareLibService.getShareLibJars(actionShareLibName)-->Line_5 $$ if (listOfPaths != null && !listOfPaths.isEmpty()) [ FD ]
Line_7 $$ String fragmentName = new URI(actionLibPath.toString()).getFragment()-->Line_7 $$ String fragmentName = new URI(actionLibPath.toString()).getFragment()[ CD ]
Line_6 $$ for (Path actionLibPath : listOfPaths) -->Line_7 $$ String fragmentName = new URI(actionLibPath.toString()).getFragment()[ FD ]
Line_6 $$ for (Path actionLibPath : listOfPaths) -->Line_8 $$ Path pathWithFragment = fragmentName == null ? actionLibPath : new Path(new URI(actionLibPath.toString()).getPath())[ FD ]
Line_6 $$ for (Path actionLibPath : listOfPaths) -->Line_10 $$ String fileName = fragmentName == null ? actionLibPath.getName() : fragmentName[ FD ]
Line_10 $$ String fileName = fragmentName == null ? actionLibPath.getName() : fragmentName-->Line_11 $$ if (confSet.contains(fileName)) [ FD ]
Line_11 $$ if (confSet.contains(fileName)) -->Line_11 $$ if (confSet.contains(fileName)) [ CD ]
Line_10 $$ String fileName = fragmentName == null ? actionLibPath.getName() : fragmentName-->Line_11 $$ if (confSet.contains(fileName)) [ FD ]
Line_11 $$ if (confSet.contains(fileName)) -->Line_12 $$ Configuration jobXmlConf = shareLibService.getShareLibConf(actionShareLibName, pathWithFragment)[ CD ]
Line_12 $$ Configuration jobXmlConf = shareLibService.getShareLibConf(actionShareLibName, pathWithFragment)-->Line_12 $$ Configuration jobXmlConf = shareLibService.getShareLibConf(actionShareLibName, pathWithFragment)[ CD ]
Line_3 $$ for (String actionShareLibName : actionShareLibNames) -->Line_12 $$ Configuration jobXmlConf = shareLibService.getShareLibConf(actionShareLibName, pathWithFragment)[ FD ]
Line_8 $$ Path pathWithFragment = fragmentName == null ? actionLibPath : new Path(new URI(actionLibPath.toString()).getPath())-->Line_12 $$ Configuration jobXmlConf = shareLibService.getShareLibConf(actionShareLibName, pathWithFragment)[ FD ]
Line_11 $$ if (confSet.contains(fileName)) -->Line_14 $$ checkForDisallowedProps(jobXmlConf, actionLibPath.getName())[ CD ]
Line_12 $$ Configuration jobXmlConf = shareLibService.getShareLibConf(actionShareLibName, pathWithFragment)-->Line_14 $$ checkForDisallowedProps(jobXmlConf, actionLibPath.getName())[ FD ]
Line_6 $$ for (Path actionLibPath : listOfPaths) -->Line_14 $$ checkForDisallowedProps(jobXmlConf, actionLibPath.getName())[ FD ]
Line_11 $$ if (confSet.contains(fileName)) -->Line_15 $$ XConfiguration.injectDefaults(jobXmlConf, conf)[ CD ]
Line_12 $$ Configuration jobXmlConf = shareLibService.getShareLibConf(actionShareLibName, pathWithFragment)-->Line_15 $$ XConfiguration.injectDefaults(jobXmlConf, conf)[ FD ]
Line_2 $$ public void addShareLib(Configuration conf, String[] actionShareLibNames) -->Line_15 $$ XConfiguration.injectDefaults(jobXmlConf, conf)[ FD ]
Line_11 $$ if (confSet.contains(fileName)) -->Line_16 $$ LOG.trace("Adding properties of " + actionLibPath + " to job conf")[ CD ]
Line_11 $$ if (confSet.contains(fileName)) -->Line_19 $$ sharelibList.add(new Path(actionLibPath.toUri()) [ CD ]
Line_6 $$ for (Path actionLibPath : listOfPaths) -->Line_19 $$ sharelibList.add(new Path(actionLibPath.toUri()) [ FD ]
Line_19 $$ sharelibList.add(new Path(actionLibPath.toUri()) -->Line_22 $$ return getName().hashCode()[ CD ]
Line_22 $$ return getName().hashCode()-->Line_22 $$ return getName().hashCode()[ CD ]
Line_19 $$ sharelibList.add(new Path(actionLibPath.toUri()) -->Line_36 $$ if (input == null) [ CD ]
Line_19 $$ sharelibList.add(new Path(actionLibPath.toUri()) -->Line_36 $$ if (input == null) [ FD ]
Line_36 $$ if (input == null) -->Line_37 $$ return false[ CD ]
Line_19 $$ sharelibList.add(new Path(actionLibPath.toUri()) -->Line_39 $$ if (input == this) [ CD ]
Line_19 $$ sharelibList.add(new Path(actionLibPath.toUri()) -->Line_39 $$ if (input == this) [ FD ]
Line_39 $$ if (input == this) -->Line_40 $$ return true[ CD ]
Line_19 $$ sharelibList.add(new Path(actionLibPath.toUri()) -->Line_42 $$ if (!(input instanceof Path)) [ CD ]
Line_42 $$ if (!(input instanceof Path)) -->Line_42 $$ if (!(input instanceof Path)) [ CD ]
Line_42 $$ if (!(input instanceof Path)) -->Line_43 $$ return false[ CD ]
Line_19 $$ sharelibList.add(new Path(actionLibPath.toUri()) -->Line_45 $$ return getName().equals(((Path) input).getName())[ CD ]
Line_45 $$ return getName().equals(((Path) input).getName())-->Line_45 $$ return getName().equals(((Path) input).getName())[ CD ]
Line_2 $$ public void addShareLib(Configuration conf, String[] actionShareLibNames) -->Line_53 $$ addToCache(conf, libPath, libPath.toUri().getPath(), false)[ FD ]
