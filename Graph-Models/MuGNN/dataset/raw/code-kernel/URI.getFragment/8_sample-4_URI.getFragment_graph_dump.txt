Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void changeScheme(URI uri, String newScheme) [ CD ]
Line_2 $$ public void changeScheme(URI uri, String newScheme) -->Line_3 $$ return create(newScheme, getCorrectAuthority(uri), uri.getPath(), uri.getQuery(), uri.getFragment())[ CD ]
Line_3 $$ return create(newScheme, getCorrectAuthority(uri), uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_3 $$ return create(newScheme, getCorrectAuthority(uri), uri.getPath(), uri.getQuery(), uri.getFragment())[ CD ]
Line_2 $$ public void changeScheme(URI uri, String newScheme) -->Line_3 $$ return create(newScheme, getCorrectAuthority(uri), uri.getPath(), uri.getQuery(), uri.getFragment())[ FD ]
Line_2 $$ public void changeScheme(URI uri, String newScheme) -->Line_3 $$ return create(newScheme, getCorrectAuthority(uri), uri.getPath(), uri.getQuery(), uri.getFragment())[ FD ]
Line_2 $$ public void changeScheme(URI uri, String newScheme) -->Line_3 $$ return create(newScheme, getCorrectAuthority(uri), uri.getPath(), uri.getQuery(), uri.getFragment())[ FD ]
Line_2 $$ public void changeScheme(URI uri, String newScheme) -->Line_3 $$ return create(newScheme, getCorrectAuthority(uri), uri.getPath(), uri.getQuery(), uri.getFragment())[ FD ]
Line_2 $$ public void changeScheme(URI uri, String newScheme) -->Line_3 $$ return create(newScheme, getCorrectAuthority(uri), uri.getPath(), uri.getQuery(), uri.getFragment())[ FD ]
