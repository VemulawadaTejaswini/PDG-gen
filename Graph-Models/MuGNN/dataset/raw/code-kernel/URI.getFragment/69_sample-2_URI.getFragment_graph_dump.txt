Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getTrashFileSystem(Configuration conf) [ CD ]
Line_2 $$ public void getTrashFileSystem(Configuration conf) -->Line_3 $$ conf = new Configuration(conf)[ CD ]
Line_2 $$ public void getTrashFileSystem(Configuration conf) -->Line_3 $$ conf = new Configuration(conf)[ FD ]
Line_3 $$ conf = new Configuration(conf)-->Line_3 $$ conf = new Configuration(conf)[ FD ]
Line_2 $$ public void getTrashFileSystem(Configuration conf) -->Line_4 $$ InetSocketAddress serviceAddress = NameNode.getDNProtocolAddress(conf)[ CD ]
Line_4 $$ InetSocketAddress serviceAddress = NameNode.getDNProtocolAddress(conf)-->Line_4 $$ InetSocketAddress serviceAddress = NameNode.getDNProtocolAddress(conf)[ CD ]
Line_2 $$ public void getTrashFileSystem(Configuration conf) -->Line_4 $$ InetSocketAddress serviceAddress = NameNode.getDNProtocolAddress(conf)[ FD ]
Line_3 $$ conf = new Configuration(conf)-->Line_4 $$ InetSocketAddress serviceAddress = NameNode.getDNProtocolAddress(conf)[ FD ]
Line_2 $$ public void getTrashFileSystem(Configuration conf) -->Line_5 $$ if (serviceAddress != null) [ CD ]
Line_4 $$ InetSocketAddress serviceAddress = NameNode.getDNProtocolAddress(conf)-->Line_5 $$ if (serviceAddress != null) [ FD ]
Line_5 $$ if (serviceAddress != null) -->Line_6 $$ URI defaultUri = FileSystem.getDefaultUri(conf)[ CD ]
Line_6 $$ URI defaultUri = FileSystem.getDefaultUri(conf)-->Line_6 $$ URI defaultUri = FileSystem.getDefaultUri(conf)[ CD ]
Line_2 $$ public void getTrashFileSystem(Configuration conf) -->Line_6 $$ URI defaultUri = FileSystem.getDefaultUri(conf)[ FD ]
Line_3 $$ conf = new Configuration(conf)-->Line_6 $$ URI defaultUri = FileSystem.getDefaultUri(conf)[ FD ]
Line_5 $$ if (serviceAddress != null) -->Line_7 $$ URI serviceUri = null[ CD ]
Line_7 $$ URI serviceUri = null-->Line_9 $$ serviceUri = new URI(defaultUri.getScheme(), defaultUri.getUserInfo(), serviceAddress.getAddress().getHostAddress(), serviceAddress.getPort(), defaultUri.getPath(), defaultUri.getQuery(), defaultUri.getFragment())[ FD ]
Line_9 $$ serviceUri = new URI(defaultUri.getScheme(), defaultUri.getUserInfo(), serviceAddress.getAddress().getHostAddress(), serviceAddress.getPort(), defaultUri.getPath(), defaultUri.getQuery(), defaultUri.getFragment())-->Line_9 $$ serviceUri = new URI(defaultUri.getScheme(), defaultUri.getUserInfo(), serviceAddress.getAddress().getHostAddress(), serviceAddress.getPort(), defaultUri.getPath(), defaultUri.getQuery(), defaultUri.getFragment())[ FD ]
Line_6 $$ URI defaultUri = FileSystem.getDefaultUri(conf)-->Line_9 $$ serviceUri = new URI(defaultUri.getScheme(), defaultUri.getUserInfo(), serviceAddress.getAddress().getHostAddress(), serviceAddress.getPort(), defaultUri.getPath(), defaultUri.getQuery(), defaultUri.getFragment())[ FD ]
Line_6 $$ URI defaultUri = FileSystem.getDefaultUri(conf)-->Line_9 $$ serviceUri = new URI(defaultUri.getScheme(), defaultUri.getUserInfo(), serviceAddress.getAddress().getHostAddress(), serviceAddress.getPort(), defaultUri.getPath(), defaultUri.getQuery(), defaultUri.getFragment())[ FD ]
Line_4 $$ InetSocketAddress serviceAddress = NameNode.getDNProtocolAddress(conf)-->Line_9 $$ serviceUri = new URI(defaultUri.getScheme(), defaultUri.getUserInfo(), serviceAddress.getAddress().getHostAddress(), serviceAddress.getPort(), defaultUri.getPath(), defaultUri.getQuery(), defaultUri.getFragment())[ FD ]
Line_4 $$ InetSocketAddress serviceAddress = NameNode.getDNProtocolAddress(conf)-->Line_9 $$ serviceUri = new URI(defaultUri.getScheme(), defaultUri.getUserInfo(), serviceAddress.getAddress().getHostAddress(), serviceAddress.getPort(), defaultUri.getPath(), defaultUri.getQuery(), defaultUri.getFragment())[ FD ]
Line_6 $$ URI defaultUri = FileSystem.getDefaultUri(conf)-->Line_9 $$ serviceUri = new URI(defaultUri.getScheme(), defaultUri.getUserInfo(), serviceAddress.getAddress().getHostAddress(), serviceAddress.getPort(), defaultUri.getPath(), defaultUri.getQuery(), defaultUri.getFragment())[ FD ]
Line_6 $$ URI defaultUri = FileSystem.getDefaultUri(conf)-->Line_9 $$ serviceUri = new URI(defaultUri.getScheme(), defaultUri.getUserInfo(), serviceAddress.getAddress().getHostAddress(), serviceAddress.getPort(), defaultUri.getPath(), defaultUri.getQuery(), defaultUri.getFragment())[ FD ]
Line_6 $$ URI defaultUri = FileSystem.getDefaultUri(conf)-->Line_9 $$ serviceUri = new URI(defaultUri.getScheme(), defaultUri.getUserInfo(), serviceAddress.getAddress().getHostAddress(), serviceAddress.getPort(), defaultUri.getPath(), defaultUri.getQuery(), defaultUri.getFragment())[ FD ]
Line_5 $$ if (serviceAddress != null) -->Line_16 $$ Path trashFsPath = new Path(serviceUri.toString())[ CD ]
Line_7 $$ URI serviceUri = null-->Line_16 $$ Path trashFsPath = new Path(serviceUri.toString())[ FD ]
Line_9 $$ serviceUri = new URI(defaultUri.getScheme(), defaultUri.getUserInfo(), serviceAddress.getAddress().getHostAddress(), serviceAddress.getPort(), defaultUri.getPath(), defaultUri.getQuery(), defaultUri.getFragment())-->Line_16 $$ Path trashFsPath = new Path(serviceUri.toString())[ FD ]
Line_5 $$ if (serviceAddress != null) -->Line_17 $$ return trashFsPath.getFileSystem(conf)[ CD ]
Line_17 $$ return trashFsPath.getFileSystem(conf)-->Line_17 $$ return trashFsPath.getFileSystem(conf)[ CD ]
Line_16 $$ Path trashFsPath = new Path(serviceUri.toString())-->Line_17 $$ return trashFsPath.getFileSystem(conf)[ FD ]
Line_2 $$ public void getTrashFileSystem(Configuration conf) -->Line_17 $$ return trashFsPath.getFileSystem(conf)[ FD ]
Line_3 $$ conf = new Configuration(conf)-->Line_17 $$ return trashFsPath.getFileSystem(conf)[ FD ]
Line_5 $$ if (serviceAddress != null) -->Line_19 $$ return FileSystem.get(conf)[ CD ]
Line_19 $$ return FileSystem.get(conf)-->Line_19 $$ return FileSystem.get(conf)[ CD ]
Line_2 $$ public void getTrashFileSystem(Configuration conf) -->Line_19 $$ return FileSystem.get(conf)[ FD ]
Line_3 $$ conf = new Configuration(conf)-->Line_19 $$ return FileSystem.get(conf)[ FD ]
