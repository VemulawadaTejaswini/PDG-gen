Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testBasicDateFormat() [ CD ]
Line_2 $$ public void testBasicDateFormat() -->Line_3 $$ final Calendar calendar = Calendar.getInstance()[ CD ]
Line_3 $$ final Calendar calendar = Calendar.getInstance()-->Line_3 $$ final Calendar calendar = Calendar.getInstance()[ CD ]
Line_2 $$ public void testBasicDateFormat() -->Line_4 $$ calendar.setTimeZone(DateUtils.GMT)[ CD ]
Line_3 $$ final Calendar calendar = Calendar.getInstance()-->Line_4 $$ calendar.setTimeZone(DateUtils.GMT)[ FD ]
Line_2 $$ public void testBasicDateFormat() -->Line_5 $$ calendar.set(Calendar.MILLISECOND, 0)[ CD ]
Line_3 $$ final Calendar calendar = Calendar.getInstance()-->Line_5 $$ calendar.set(Calendar.MILLISECOND, 0)[ FD ]
Line_2 $$ public void testBasicDateFormat() -->Line_6 $$ final Date date = calendar.getTime()[ CD ]
Line_6 $$ final Date date = calendar.getTime()-->Line_6 $$ final Date date = calendar.getTime()[ CD ]
Line_3 $$ final Calendar calendar = Calendar.getInstance()-->Line_6 $$ final Date date = calendar.getTime()[ FD ]
Line_2 $$ public void testBasicDateFormat() -->Line_7 $$ Assert.assertEquals("Fri, 14 Oct 2005 00:00:00 GMT", DateUtils.formatDate(date))[ CD ]
Line_6 $$ final Date date = calendar.getTime()-->Line_7 $$ Assert.assertEquals("Fri, 14 Oct 2005 00:00:00 GMT", DateUtils.formatDate(date))[ FD ]
Line_2 $$ public void testBasicDateFormat() -->Line_8 $$ Assert.assertEquals("Fri, 14 Oct 2005 00:00:00 GMT", DateUtils.formatDate(date, DateUtils.PATTERN_RFC1123))[ CD ]
Line_6 $$ final Date date = calendar.getTime()-->Line_8 $$ Assert.assertEquals("Fri, 14 Oct 2005 00:00:00 GMT", DateUtils.formatDate(date, DateUtils.PATTERN_RFC1123))[ FD ]
