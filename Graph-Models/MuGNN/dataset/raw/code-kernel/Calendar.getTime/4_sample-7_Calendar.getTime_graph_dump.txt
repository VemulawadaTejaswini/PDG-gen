Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testInterlining() [ CD ]
Line_2 $$ public void testInterlining() -->Line_3 $$ calendar.setTimeZone(TimeZone.getTimeZone("America/New_York"))[ CD ]
Line_2 $$ public void testInterlining() -->Line_4 $$ long time = calendar.getTime().getTime() / 1000[ CD ]
Line_2 $$ public void testInterlining() -->Line_5 $$ Leg[] legs = plan(time, "stop0", "stop3", null, false, false, null, null, null, 2)[ CD ]
Line_5 $$ Leg[] legs = plan(time, "stop0", "stop3", null, false, false, null, null, null, 2)-->Line_5 $$ Leg[] legs = plan(time, "stop0", "stop3", null, false, false, null, null, null, 2)[ CD ]
Line_4 $$ long time = calendar.getTime().getTime() / 1000-->Line_5 $$ Leg[] legs = plan(time, "stop0", "stop3", null, false, false, null, null, null, 2)[ FD ]
Line_2 $$ public void testInterlining() -->Line_6 $$ assertEquals(legs[1].routeId, "route1")[ CD ]
Line_2 $$ public void testInterlining() -->Line_7 $$ assertTrue(itinerary.transfers == 0)[ CD ]
