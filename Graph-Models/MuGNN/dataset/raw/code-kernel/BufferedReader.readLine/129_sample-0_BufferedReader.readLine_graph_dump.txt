Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void shouldHandleNullStreams3() [ CD ]
Line_2 $$ public void shouldHandleNullStreams3() -->Line_3 $$ InputStream stream = InputStreamMerger.merge(stream1, stream2, null)[ CD ]
Line_3 $$ InputStream stream = InputStreamMerger.merge(stream1, stream2, null)-->Line_3 $$ InputStream stream = InputStreamMerger.merge(stream1, stream2, null)[ CD ]
Line_2 $$ public void shouldHandleNullStreams3() -->Line_4 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(stream))[ CD ]
Line_2 $$ public void shouldHandleNullStreams3() -->Line_5 $$ String result = reader.readLine()[ CD ]
Line_5 $$ String result = reader.readLine()-->Line_5 $$ String result = reader.readLine()[ CD ]
Line_4 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(stream))-->Line_5 $$ String result = reader.readLine()[ FD ]
Line_2 $$ public void shouldHandleNullStreams3() -->Line_6 $$ assertEquals(expected, result)[ CD ]
Line_5 $$ String result = reader.readLine()-->Line_6 $$ assertEquals(expected, result)[ FD ]
