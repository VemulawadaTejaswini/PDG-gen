Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void handleStreams(DataOutputStream out, InputStream in, String[] parameters) [ CD ]
Line_2 $$ public void handleStreams(DataOutputStream out, InputStream in, String[] parameters) -->Line_3 $$ String line = dis.readLine().trim()[ CD ]
Line_3 $$ String line = dis.readLine().trim()-->Line_3 $$ String line = dis.readLine().trim()[ CD ]
Line_2 $$ public void handleStreams(DataOutputStream out, InputStream in, String[] parameters) -->Line_4 $$ if (line.length() == 0)[ CD ]
Line_3 $$ String line = dis.readLine().trim()-->Line_4 $$ if (line.length() == 0)[ FD ]
Line_2 $$ public void handleStreams(DataOutputStream out, InputStream in, String[] parameters) -->Line_6 $$ if (line.equals("exit")) [ CD ]
Line_3 $$ String line = dis.readLine().trim()-->Line_6 $$ if (line.equals("exit")) [ FD ]
Line_6 $$ if (line.equals("exit")) -->Line_6 $$ if (line.equals("exit")) [ CD ]
Line_3 $$ String line = dis.readLine().trim()-->Line_6 $$ if (line.equals("exit")) [ FD ]
Line_6 $$ if (line.equals("exit")) -->Line_7 $$ boolean mayExit = true[ CD ]
Line_6 $$ if (line.equals("exit")) -->Line_8 $$ for (int i = 0; i < runningStages.size(); i++) [ CD ]
Line_6 $$ if (line.equals("exit")) -->Line_6 $$ if (line.equals("exit")) [ CD ]
Line_8 $$ for (int i = 0; i < runningStages.size(); i++) -->Line_8 $$ for (int i = 0; i < runningStages.size(); i++) [ CD ]
Line_8 $$ for (int i = 0; i < runningStages.size(); i++) -->Line_8 $$ for (int i = 0; i < runningStages.size(); i++) [ CD ]
Line_8 $$ for (int i = 0; i < runningStages.size(); i++) -->Line_8 $$ for (int i = 0; i < runningStages.size(); i++) [ CD ]
Line_8 $$ for (int i = 0; i < runningStages.size(); i++) -->Line_8 $$ for (int i = 0; i < runningStages.size(); i++) [ FD ]
Line_8 $$ for (int i = 0; i < runningStages.size(); i++) -->Line_9 $$ Stage stage = (Stage) runningStages.get(i)[ CD ]
Line_8 $$ for (int i = 0; i < runningStages.size(); i++) -->Line_9 $$ Stage stage = (Stage) runningStages.get(i)[ FD ]
Line_8 $$ for (int i = 0; i < runningStages.size(); i++) -->Line_10 $$ if (stage.isAlive()) [ CD ]
Line_9 $$ Stage stage = (Stage) runningStages.get(i)-->Line_10 $$ if (stage.isAlive()) [ FD ]
Line_10 $$ if (stage.isAlive()) -->Line_10 $$ if (stage.isAlive()) [ CD ]
Line_9 $$ Stage stage = (Stage) runningStages.get(i)-->Line_10 $$ if (stage.isAlive()) [ FD ]
Line_10 $$ if (stage.isAlive()) -->Line_11 $$ consoleOut.println("There are still running stages.")[ CD ]
Line_10 $$ if (stage.isAlive()) -->Line_12 $$ mayExit = false[ CD ]
Line_12 $$ mayExit = false-->Line_12 $$ mayExit = false[ FD ]
Line_7 $$ boolean mayExit = true-->Line_12 $$ mayExit = false[ FD ]
Line_6 $$ if (line.equals("exit")) -->Line_16 $$ if (mayExit)[ CD ]
Line_2 $$ public void handleStreams(DataOutputStream out, InputStream in, String[] parameters) -->Line_21 $$ if (line.equals("help")) [ CD ]
Line_3 $$ String line = dis.readLine().trim()-->Line_21 $$ if (line.equals("help")) [ FD ]
Line_21 $$ if (line.equals("help")) -->Line_21 $$ if (line.equals("help")) [ CD ]
Line_3 $$ String line = dis.readLine().trim()-->Line_21 $$ if (line.equals("help")) [ FD ]
Line_21 $$ if (line.equals("help")) -->Line_22 $$ consoleOut.println("Type a number to switch to that stage.")[ CD ]
Line_21 $$ if (line.equals("help")) -->Line_23 $$ consoleOut.println("Type a new stage with args to run it.")[ CD ]
Line_21 $$ if (line.equals("help")) -->Line_24 $$ consoleOut.println("While connected, type ]> to get back to this prompt.")[ CD ]
Line_2 $$ public void handleStreams(DataOutputStream out, InputStream in, String[] parameters) -->Line_27 $$ int number = Integer.parseInt(line)[ CD ]
Line_27 $$ int number = Integer.parseInt(line)-->Line_27 $$ int number = Integer.parseInt(line)[ CD ]
Line_3 $$ String line = dis.readLine().trim()-->Line_27 $$ int number = Integer.parseInt(line)[ FD ]
Line_8 $$ for (int i = 0; i < runningStages.size(); i++) -->Line_8 $$ for (int i = 0; i < runningStages.size(); i++) [ FD ]
Line_8 $$ for (int i = 0; i < runningStages.size(); i++) -->Line_8 $$ for (int i = 0; i < runningStages.size(); i++) [ FD ]
Line_8 $$ for (int i = 0; i < runningStages.size(); i++) -->Line_8 $$ for (int i = 0; i < runningStages.size(); i++) [ FD ]
Line_8 $$ for (int i = 0; i < runningStages.size(); i++) -->Line_9 $$ Stage stage = (Stage) runningStages.get(i)[ FD ]
Line_9 $$ Stage stage = (Stage) runningStages.get(i)-->Line_10 $$ if (stage.isAlive()) [ FD ]
Line_9 $$ Stage stage = (Stage) runningStages.get(i)-->Line_10 $$ if (stage.isAlive()) [ FD ]
