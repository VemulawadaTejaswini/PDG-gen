Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void DBToasterEngine(String queryClass) [ CD ]
Line_2 $$ public void DBToasterEngine(String queryClass) -->Line_3 $$ ClassLoader cl = this.getClass().getClassLoader()[ CD ]
Line_3 $$ ClassLoader cl = this.getClass().getClassLoader()-->Line_3 $$ ClassLoader cl = this.getClass().getClassLoader()[ CD ]
Line_2 $$ public void DBToasterEngine(String queryClass) -->Line_4 $$ if (cl == null)[ CD ]
Line_3 $$ ClassLoader cl = this.getClass().getClassLoader()-->Line_4 $$ if (cl == null)[ FD ]
Line_4 $$ if (cl == null)-->Line_4 $$ cl = ClassLoader.getSystemClassLoader()[ CD ]
Line_3 $$ ClassLoader cl = this.getClass().getClassLoader()-->Line_4 $$ cl = ClassLoader.getSystemClassLoader()[ FD ]
Line_4 $$ cl = ClassLoader.getSystemClassLoader()-->Line_4 $$ cl = ClassLoader.getSystemClassLoader()[ FD ]
Line_4 $$ cl = ClassLoader.getSystemClassLoader()-->Line_4 $$ cl = ClassLoader.getSystemClassLoader()[ CD ]
Line_3 $$ ClassLoader cl = this.getClass().getClassLoader()-->Line_5 $$ _query = (IQuery) cl.loadClass(queryClass).newInstance()[ FD ]
Line_4 $$ cl = ClassLoader.getSystemClassLoader()-->Line_5 $$ _query = (IQuery) cl.loadClass(queryClass).newInstance()[ FD ]
Line_2 $$ public void DBToasterEngine(String queryClass) -->Line_5 $$ _query = (IQuery) cl.loadClass(queryClass).newInstance()[ FD ]
