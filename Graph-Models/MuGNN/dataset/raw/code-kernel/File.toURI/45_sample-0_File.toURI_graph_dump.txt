Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getRelativeBaseDirPath(String baseDir) [ CD ]
Line_2 $$ public void getRelativeBaseDirPath(String baseDir) -->Line_3 $$ String path = new File(".").toURI().relativize(new File(baseDir).toURI()).getPath()[ CD ]
Line_3 $$ String path = new File(".").toURI().relativize(new File(baseDir).toURI()).getPath()-->Line_3 $$ String path = new File(".").toURI().relativize(new File(baseDir).toURI()).getPath()[ CD ]
Line_2 $$ public void getRelativeBaseDirPath(String baseDir) -->Line_4 $$ if (StringUtils.isEmpty(path)) [ CD ]
Line_3 $$ String path = new File(".").toURI().relativize(new File(baseDir).toURI()).getPath()-->Line_4 $$ if (StringUtils.isEmpty(path)) [ FD ]
Line_4 $$ if (StringUtils.isEmpty(path)) -->Line_4 $$ if (StringUtils.isEmpty(path)) [ CD ]
Line_3 $$ String path = new File(".").toURI().relativize(new File(baseDir).toURI()).getPath()-->Line_4 $$ if (StringUtils.isEmpty(path)) [ FD ]
Line_4 $$ if (StringUtils.isEmpty(path)) -->Line_5 $$ path = "."[ CD ]
Line_3 $$ String path = new File(".").toURI().relativize(new File(baseDir).toURI()).getPath()-->Line_5 $$ path = "."[ FD ]
Line_5 $$ path = "."-->Line_5 $$ path = "."[ FD ]
