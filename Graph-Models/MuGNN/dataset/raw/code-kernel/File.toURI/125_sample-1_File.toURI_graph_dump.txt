Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testBundleWiringDTO() [ CD ]
Line_2 $$ public void testBundleWiringDTO() -->Line_3 $$ File bf = createBundle(mf)[ CD ]
Line_3 $$ File bf = createBundle(mf)-->Line_3 $$ File bf = createBundle(mf)[ CD ]
Line_2 $$ public void testBundleWiringDTO() -->Line_4 $$ Bundle bundle = framework.getBundleContext().installBundle(bf.toURI().toURL().toExternalForm())[ CD ]
Line_4 $$ Bundle bundle = framework.getBundleContext().installBundle(bf.toURI().toURL().toExternalForm())-->Line_4 $$ Bundle bundle = framework.getBundleContext().installBundle(bf.toURI().toURL().toExternalForm())[ CD ]
Line_3 $$ File bf = createBundle(mf)-->Line_4 $$ Bundle bundle = framework.getBundleContext().installBundle(bf.toURI().toURL().toExternalForm())[ FD ]
Line_2 $$ public void testBundleWiringDTO() -->Line_5 $$ bundle.start()[ CD ]
Line_4 $$ Bundle bundle = framework.getBundleContext().installBundle(bf.toURI().toURL().toExternalForm())-->Line_5 $$ bundle.start()[ FD ]
Line_2 $$ public void testBundleWiringDTO() -->Line_6 $$ assertEquals("Precondition", Bundle.ACTIVE, bundle.getState())[ CD ]
Line_4 $$ Bundle bundle = framework.getBundleContext().installBundle(bf.toURI().toURL().toExternalForm())-->Line_6 $$ assertEquals("Precondition", Bundle.ACTIVE, bundle.getState())[ FD ]
Line_2 $$ public void testBundleWiringDTO() -->Line_7 $$ BundleWiringDTO dto = bundle.adapt(BundleWiringDTO.class)[ CD ]
Line_7 $$ BundleWiringDTO dto = bundle.adapt(BundleWiringDTO.class)-->Line_7 $$ BundleWiringDTO dto = bundle.adapt(BundleWiringDTO.class)[ CD ]
Line_4 $$ Bundle bundle = framework.getBundleContext().installBundle(bf.toURI().toURL().toExternalForm())-->Line_7 $$ BundleWiringDTO dto = bundle.adapt(BundleWiringDTO.class)[ FD ]
Line_2 $$ public void testBundleWiringDTO() -->Line_8 $$ assertEquals(bundle.getBundleId(), dto.bundle)[ CD ]
Line_4 $$ Bundle bundle = framework.getBundleContext().installBundle(bf.toURI().toURL().toExternalForm())-->Line_8 $$ assertEquals(bundle.getBundleId(), dto.bundle)[ FD ]
