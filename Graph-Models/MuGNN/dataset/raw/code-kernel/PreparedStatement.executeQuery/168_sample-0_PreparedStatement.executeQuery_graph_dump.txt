Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testFetchLargeClobs() [ CD ]
Line_2 $$ public void testFetchLargeClobs() -->Line_3 $$ PreparedStatement ps = prepareStatement("select dClob, length from largeClobs")[ CD ]
Line_3 $$ PreparedStatement ps = prepareStatement("select dClob, length from largeClobs")-->Line_3 $$ PreparedStatement ps = prepareStatement("select dClob, length from largeClobs")[ CD ]
Line_2 $$ public void testFetchLargeClobs() -->Line_5 $$ ResultSet rs = ps.executeQuery()[ CD ]
Line_5 $$ ResultSet rs = ps.executeQuery()-->Line_5 $$ ResultSet rs = ps.executeQuery()[ CD ]
Line_3 $$ PreparedStatement ps = prepareStatement("select dClob, length from largeClobs")-->Line_5 $$ ResultSet rs = ps.executeQuery()[ FD ]
Line_2 $$ public void testFetchLargeClobs() -->Line_6 $$ while (rs.next()) [ CD ]
Line_2 $$ public void testFetchLargeClobs() -->Line_2 $$ public void testFetchLargeClobs() [ CD ]
Line_6 $$ while (rs.next()) -->Line_6 $$ while (rs.next()) [ CD ]
Line_5 $$ ResultSet rs = ps.executeQuery()-->Line_6 $$ while (rs.next()) [ FD ]
Line_6 $$ while (rs.next()) -->Line_7 $$ Clob clob = rs.getClob(1)[ CD ]
Line_7 $$ Clob clob = rs.getClob(1)-->Line_7 $$ Clob clob = rs.getClob(1)[ CD ]
Line_5 $$ ResultSet rs = ps.executeQuery()-->Line_7 $$ Clob clob = rs.getClob(1)[ FD ]
Line_6 $$ while (rs.next()) -->Line_8 $$ Reader content = clob.getCharacterStream()[ CD ]
Line_8 $$ Reader content = clob.getCharacterStream()-->Line_8 $$ Reader content = clob.getCharacterStream()[ CD ]
Line_7 $$ Clob clob = rs.getClob(1)-->Line_8 $$ Reader content = clob.getCharacterStream()[ FD ]
Line_6 $$ while (rs.next()) -->Line_9 $$ long remaining = rs.getInt(2)[ CD ]
Line_9 $$ long remaining = rs.getInt(2)-->Line_9 $$ long remaining = rs.getInt(2)[ CD ]
Line_5 $$ ResultSet rs = ps.executeQuery()-->Line_9 $$ long remaining = rs.getInt(2)[ FD ]
Line_6 $$ while (rs.next()) -->Line_10 $$ while (remaining > 0) [ CD ]
Line_6 $$ while (rs.next()) -->Line_6 $$ while (rs.next()) [ CD ]
Line_9 $$ long remaining = rs.getInt(2)-->Line_10 $$ while (remaining > 0) [ FD ]
Line_10 $$ while (remaining > 0) -->Line_11 $$ remaining -= content.read(charBuf)[ CD ]
Line_11 $$ remaining -= content.read(charBuf)-->Line_11 $$ remaining -= content.read(charBuf)[ FD ]
Line_9 $$ long remaining = rs.getInt(2)-->Line_11 $$ remaining -= content.read(charBuf)[ FD ]
Line_11 $$ remaining -= content.read(charBuf)-->Line_11 $$ remaining -= content.read(charBuf)[ CD ]
Line_8 $$ Reader content = clob.getCharacterStream()-->Line_11 $$ remaining -= content.read(charBuf)[ FD ]
Line_6 $$ while (rs.next()) -->Line_13 $$ content.close()[ CD ]
Line_8 $$ Reader content = clob.getCharacterStream()-->Line_13 $$ content.close()[ FD ]
Line_2 $$ public void testFetchLargeClobs() -->Line_15 $$ rs.close()[ CD ]
Line_5 $$ ResultSet rs = ps.executeQuery()-->Line_15 $$ rs.close()[ FD ]
Line_7 $$ Clob clob = rs.getClob(1)-->Line_8 $$ Reader content = clob.getCharacterStream()[ FD ]
Line_8 $$ Reader content = clob.getCharacterStream()-->Line_13 $$ content.close()[ FD ]
Line_11 $$ remaining -= content.read(charBuf)-->Line_10 $$ while (remaining > 0) [ FD ]
Line_11 $$ remaining -= content.read(charBuf)-->Line_10 $$ while (remaining > 0) [ FD ]
