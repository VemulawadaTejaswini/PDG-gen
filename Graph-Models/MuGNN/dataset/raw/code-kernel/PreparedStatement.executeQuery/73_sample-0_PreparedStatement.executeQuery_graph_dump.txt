Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void executeStatement(PreparedStatement statement) [ CD ]
Line_2 $$ public void executeStatement(PreparedStatement statement) -->Line_4 $$ statement.setString(index++, parameter)[ FD ]
Line_3 $$ for (String parameter : parameters) -->Line_4 $$ statement.setString(index++, parameter)[ FD ]
Line_2 $$ public void executeStatement(PreparedStatement statement) -->Line_6 $$ ResultSet columns = statement.executeQuery()[ CD ]
Line_6 $$ ResultSet columns = statement.executeQuery()-->Line_6 $$ ResultSet columns = statement.executeQuery()[ CD ]
Line_2 $$ public void executeStatement(PreparedStatement statement) -->Line_6 $$ ResultSet columns = statement.executeQuery()[ FD ]
Line_2 $$ public void executeStatement(PreparedStatement statement) -->Line_7 $$ while (columns.next()) [ CD ]
Line_2 $$ public void executeStatement(PreparedStatement statement) -->Line_2 $$ public void executeStatement(PreparedStatement statement) [ CD ]
Line_7 $$ while (columns.next()) -->Line_7 $$ while (columns.next()) [ CD ]
Line_6 $$ ResultSet columns = statement.executeQuery()-->Line_7 $$ while (columns.next()) [ FD ]
Line_7 $$ while (columns.next()) -->Line_8 $$ Table table = addTable(inspectionResults, columns.getString("TABLE_SCHEMA"), null, columns.getString("TABLE_NAME"))[ CD ]
Line_8 $$ Table table = addTable(inspectionResults, columns.getString("TABLE_SCHEMA"), null, columns.getString("TABLE_NAME"))-->Line_8 $$ Table table = addTable(inspectionResults, columns.getString("TABLE_SCHEMA"), null, columns.getString("TABLE_NAME"))[ CD ]
Line_6 $$ ResultSet columns = statement.executeQuery()-->Line_8 $$ Table table = addTable(inspectionResults, columns.getString("TABLE_SCHEMA"), null, columns.getString("TABLE_NAME"))[ FD ]
Line_6 $$ ResultSet columns = statement.executeQuery()-->Line_8 $$ Table table = addTable(inspectionResults, columns.getString("TABLE_SCHEMA"), null, columns.getString("TABLE_NAME"))[ FD ]
Line_7 $$ while (columns.next()) -->Line_10 $$ Column column = table.addColumn(columns.getString("COLUMN_NAME"))[ CD ]
Line_10 $$ Column column = table.addColumn(columns.getString("COLUMN_NAME"))-->Line_10 $$ Column column = table.addColumn(columns.getString("COLUMN_NAME"))[ CD ]
Line_8 $$ Table table = addTable(inspectionResults, columns.getString("TABLE_SCHEMA"), null, columns.getString("TABLE_NAME"))-->Line_10 $$ Column column = table.addColumn(columns.getString("COLUMN_NAME"))[ FD ]
Line_6 $$ ResultSet columns = statement.executeQuery()-->Line_10 $$ Column column = table.addColumn(columns.getString("COLUMN_NAME"))[ FD ]
Line_7 $$ while (columns.next()) -->Line_11 $$ column.setJdbcType(getJdbcType(column.getJdbcType(), columns.getString("COLUMN_TYPE")))[ CD ]
Line_10 $$ Column column = table.addColumn(columns.getString("COLUMN_NAME"))-->Line_11 $$ column.setJdbcType(getJdbcType(column.getJdbcType(), columns.getString("COLUMN_TYPE")))[ FD ]
Line_10 $$ Column column = table.addColumn(columns.getString("COLUMN_NAME"))-->Line_11 $$ column.setJdbcType(getJdbcType(column.getJdbcType(), columns.getString("COLUMN_TYPE")))[ FD ]
Line_6 $$ ResultSet columns = statement.executeQuery()-->Line_11 $$ column.setJdbcType(getJdbcType(column.getJdbcType(), columns.getString("COLUMN_TYPE")))[ FD ]
Line_8 $$ Table table = addTable(inspectionResults, columns.getString("TABLE_SCHEMA"), null, columns.getString("TABLE_NAME"))-->Line_10 $$ Column column = table.addColumn(columns.getString("COLUMN_NAME"))[ FD ]
Line_10 $$ Column column = table.addColumn(columns.getString("COLUMN_NAME"))-->Line_11 $$ column.setJdbcType(getJdbcType(column.getJdbcType(), columns.getString("COLUMN_TYPE")))[ FD ]
Line_10 $$ Column column = table.addColumn(columns.getString("COLUMN_NAME"))-->Line_11 $$ column.setJdbcType(getJdbcType(column.getJdbcType(), columns.getString("COLUMN_TYPE")))[ FD ]
