Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getTentativeJournalHeadersForUser(Connection con, String userId) [ CD ]
Line_2 $$ public void getTentativeJournalHeadersForUser(Connection con, String userId) -->Line_3 $$ prepStmt = getTentativePreparedStatement(con, userId)[ CD ]
Line_2 $$ public void getTentativeJournalHeadersForUser(Connection con, String userId) -->Line_3 $$ prepStmt = getTentativePreparedStatement(con, userId)[ FD ]
Line_2 $$ public void getTentativeJournalHeadersForUser(Connection con, String userId) -->Line_3 $$ prepStmt = getTentativePreparedStatement(con, userId)[ FD ]
Line_2 $$ public void getTentativeJournalHeadersForUser(Connection con, String userId) -->Line_4 $$ rs = prepStmt.executeQuery()[ CD ]
Line_2 $$ public void getTentativeJournalHeadersForUser(Connection con, String userId) -->Line_5 $$ while (rs.next()) [ CD ]
Line_2 $$ public void getTentativeJournalHeadersForUser(Connection con, String userId) -->Line_2 $$ public void getTentativeJournalHeadersForUser(Connection con, String userId) [ CD ]
Line_5 $$ while (rs.next()) -->Line_5 $$ while (rs.next()) [ CD ]
Line_5 $$ while (rs.next()) -->Line_6 $$ JournalHeader journal = getJournalHeaderFromResultSet(rs)[ CD ]
Line_6 $$ JournalHeader journal = getJournalHeaderFromResultSet(rs)-->Line_6 $$ JournalHeader journal = getJournalHeaderFromResultSet(rs)[ CD ]
Line_5 $$ while (rs.next()) -->Line_7 $$ list.add(journal)[ CD ]
Line_6 $$ JournalHeader journal = getJournalHeaderFromResultSet(rs)-->Line_7 $$ list.add(journal)[ FD ]
Line_2 $$ public void getTentativeJournalHeadersForUser(Connection con, String userId) -->Line_9 $$ DBUtil.close(rs, prepStmt)[ CD ]
Line_6 $$ JournalHeader journal = getJournalHeaderFromResultSet(rs)-->Line_7 $$ list.add(journal)[ FD ]
