Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void routineExists(Connection conn, String functionName) [ CD ]
Line_2 $$ public void routineExists(Connection conn, String functionName) -->Line_3 $$ PreparedStatement ps = chattyPrepare(conn, "select count (*) from sys.sysaliases where alias = ?")[ CD ]
Line_3 $$ PreparedStatement ps = chattyPrepare(conn, "select count (*) from sys.sysaliases where alias = ?")-->Line_3 $$ PreparedStatement ps = chattyPrepare(conn, "select count (*) from sys.sysaliases where alias = ?")[ CD ]
Line_2 $$ public void routineExists(Connection conn, String functionName) -->Line_3 $$ PreparedStatement ps = chattyPrepare(conn, "select count (*) from sys.sysaliases where alias = ?")[ FD ]
Line_2 $$ public void routineExists(Connection conn, String functionName) -->Line_4 $$ ps.setString(1, functionName)[ CD ]
Line_3 $$ PreparedStatement ps = chattyPrepare(conn, "select count (*) from sys.sysaliases where alias = ?")-->Line_4 $$ ps.setString(1, functionName)[ FD ]
Line_2 $$ public void routineExists(Connection conn, String functionName) -->Line_4 $$ ps.setString(1, functionName)[ FD ]
Line_2 $$ public void routineExists(Connection conn, String functionName) -->Line_5 $$ ResultSet rs = ps.executeQuery()[ CD ]
Line_5 $$ ResultSet rs = ps.executeQuery()-->Line_5 $$ ResultSet rs = ps.executeQuery()[ CD ]
Line_3 $$ PreparedStatement ps = chattyPrepare(conn, "select count (*) from sys.sysaliases where alias = ?")-->Line_5 $$ ResultSet rs = ps.executeQuery()[ FD ]
Line_2 $$ public void routineExists(Connection conn, String functionName) -->Line_6 $$ rs.next()[ CD ]
Line_5 $$ ResultSet rs = ps.executeQuery()-->Line_6 $$ rs.next()[ FD ]
Line_2 $$ public void routineExists(Connection conn, String functionName) -->Line_7 $$ boolean retval = rs.getInt(1) > 0 ? true : false[ CD ]
Line_5 $$ ResultSet rs = ps.executeQuery()-->Line_7 $$ boolean retval = rs.getInt(1) > 0 ? true : false[ FD ]
Line_2 $$ public void routineExists(Connection conn, String functionName) -->Line_8 $$ rs.close()[ CD ]
Line_5 $$ ResultSet rs = ps.executeQuery()-->Line_8 $$ rs.close()[ FD ]
