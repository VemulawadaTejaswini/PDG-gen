Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void notifyWriteSpillBegin(Spillable spillable, int spillSize, String spillReason) [ CD ]
Line_2 $$ public void notifyWriteSpillBegin(Spillable spillable, int spillSize, String spillReason) -->Line_3 $$ int numFiles = spillable.spillCount()[ CD ]
Line_3 $$ int numFiles = spillable.spillCount()-->Line_3 $$ int numFiles = spillable.spillCount()[ CD ]
Line_2 $$ public void notifyWriteSpillBegin(Spillable spillable, int spillSize, String spillReason) -->Line_3 $$ int numFiles = spillable.spillCount()[ FD ]
Line_2 $$ public void notifyWriteSpillBegin(Spillable spillable, int spillSize, String spillReason) -->Line_4 $$ if (numFiles % 10 == 0) [ CD ]
Line_4 $$ if (numFiles % 10 == 0) -->Line_6 $$ LOG.info("spilling group: [ CD ]
Line_2 $$ public void notifyWriteSpillBegin(Spillable spillable, int spillSize, String spillReason) -->Line_6 $$ LOG.info("spilling group: [ FD ]
Line_4 $$ if (numFiles % 10 == 0) -->Line_8 $$ Runtime runtime = Runtime.getRuntime()[ CD ]
Line_8 $$ Runtime runtime = Runtime.getRuntime()-->Line_8 $$ Runtime runtime = Runtime.getRuntime()[ CD ]
Line_4 $$ if (numFiles % 10 == 0) -->Line_9 $$ long freeMem = runtime.freeMemory() / 1024 / 1024[ CD ]
Line_8 $$ Runtime runtime = Runtime.getRuntime()-->Line_9 $$ long freeMem = runtime.freeMemory() / 1024 / 1024[ FD ]
Line_4 $$ if (numFiles % 10 == 0) -->Line_10 $$ long maxMem = runtime.maxMemory() / 1024 / 1024[ CD ]
Line_8 $$ Runtime runtime = Runtime.getRuntime()-->Line_10 $$ long maxMem = runtime.maxMemory() / 1024 / 1024[ FD ]
Line_4 $$ if (numFiles % 10 == 0) -->Line_11 $$ long totalMem = runtime.totalMemory() / 1024 / 1024[ CD ]
Line_8 $$ Runtime runtime = Runtime.getRuntime()-->Line_11 $$ long totalMem = runtime.totalMemory() / 1024 / 1024[ FD ]
Line_4 $$ if (numFiles % 10 == 0) -->Line_12 $$ LOG.info("mem on spill (mb), free: " + freeMem + ", total: " + totalMem + ", max: " + maxMem)[ CD ]
Line_2 $$ public void notifyWriteSpillBegin(Spillable spillable, int spillSize, String spillReason) -->Line_14 $$ LOG.info("spilling [ CD ]
Line_2 $$ public void notifyWriteSpillBegin(Spillable spillable, int spillSize, String spillReason) -->Line_14 $$ LOG.info("spilling [ FD ]
Line_2 $$ public void notifyWriteSpillBegin(Spillable spillable, int spillSize, String spillReason) -->Line_15 $$ flowProcess.increment(Spill.Num_Tuples_Spilled, spillSize)[ CD ]
Line_2 $$ public void notifyWriteSpillBegin(Spillable spillable, int spillSize, String spillReason) -->Line_15 $$ flowProcess.increment(Spill.Num_Tuples_Spilled, spillSize)[ FD ]
