Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void collectOperatingSystemCounters(Map scalars) [ CD ]
Line_2 $$ public void collectOperatingSystemCounters(Map scalars) -->Line_3 $$ Runtime runtime = Runtime.getRuntime()[ CD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_3 $$ Runtime runtime = Runtime.getRuntime()[ CD ]
Line_2 $$ public void collectOperatingSystemCounters(Map scalars) -->Line_4 $$ addScalar(scalars, InternalDimensions.USED_JAVA_HEAP, runtime.totalMemory() - runtime.freeMemory())[ CD ]
Line_2 $$ public void collectOperatingSystemCounters(Map scalars) -->Line_4 $$ addScalar(scalars, InternalDimensions.USED_JAVA_HEAP, runtime.totalMemory() - runtime.freeMemory())[ FD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_4 $$ addScalar(scalars, InternalDimensions.USED_JAVA_HEAP, runtime.totalMemory() - runtime.freeMemory())[ FD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_4 $$ addScalar(scalars, InternalDimensions.USED_JAVA_HEAP, runtime.totalMemory() - runtime.freeMemory())[ FD ]
