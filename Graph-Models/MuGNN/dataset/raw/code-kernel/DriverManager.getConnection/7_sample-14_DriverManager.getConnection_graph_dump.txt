Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testAndFalseFilter() [ CD ]
Line_2 $$ public void testAndFalseFilter() -->Line_3 $$ PhoenixConnection pconn = DriverManager.getConnection(getUrl(), PropertiesUtil.deepCopy(TEST_PROPERTIES)).unwrap(PhoenixConnection.class)[ CD ]
Line_3 $$ PhoenixConnection pconn = DriverManager.getConnection(getUrl(), PropertiesUtil.deepCopy(TEST_PROPERTIES)).unwrap(PhoenixConnection.class)-->Line_3 $$ PhoenixConnection pconn = DriverManager.getConnection(getUrl(), PropertiesUtil.deepCopy(TEST_PROPERTIES)).unwrap(PhoenixConnection.class)[ CD ]
Line_2 $$ public void testAndFalseFilter() -->Line_4 $$ PhoenixPreparedStatement pstmt = newPreparedStatement(pconn, query)[ CD ]
Line_4 $$ PhoenixPreparedStatement pstmt = newPreparedStatement(pconn, query)-->Line_4 $$ PhoenixPreparedStatement pstmt = newPreparedStatement(pconn, query)[ CD ]
Line_3 $$ PhoenixConnection pconn = DriverManager.getConnection(getUrl(), PropertiesUtil.deepCopy(TEST_PROPERTIES)).unwrap(PhoenixConnection.class)-->Line_4 $$ PhoenixPreparedStatement pstmt = newPreparedStatement(pconn, query)[ FD ]
Line_2 $$ public void testAndFalseFilter() -->Line_5 $$ QueryPlan plan = pstmt.optimizeQuery()[ CD ]
Line_5 $$ QueryPlan plan = pstmt.optimizeQuery()-->Line_5 $$ QueryPlan plan = pstmt.optimizeQuery()[ CD ]
Line_4 $$ PhoenixPreparedStatement pstmt = newPreparedStatement(pconn, query)-->Line_5 $$ QueryPlan plan = pstmt.optimizeQuery()[ FD ]
Line_2 $$ public void testAndFalseFilter() -->Line_6 $$ assertDegenerate(plan.getContext())[ CD ]
Line_5 $$ QueryPlan plan = pstmt.optimizeQuery()-->Line_6 $$ assertDegenerate(plan.getContext())[ FD ]
