Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testChooseTableForSelection() [ CD ]
Line_2 $$ public void testChooseTableForSelection() -->Line_3 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_3 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_2 $$ public void testChooseTableForSelection() -->Line_4 $$ conn.createStatement().execute("CREATE TABLE t (k INTEGER NOT NULL PRIMARY KEY, v1 VARCHAR, v2 VARCHAR) IMMUTABLE_ROWS=true")[ CD ]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_4 $$ conn.createStatement().execute("CREATE TABLE t (k INTEGER NOT NULL PRIMARY KEY, v1 VARCHAR, v2 VARCHAR) IMMUTABLE_ROWS=true")[ FD ]
Line_2 $$ public void testChooseTableForSelection() -->Line_5 $$ conn.createStatement().execute("CREATE INDEX idx ON t(v1)")[ CD ]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_5 $$ conn.createStatement().execute("CREATE INDEX idx ON t(v1)")[ FD ]
Line_2 $$ public void testChooseTableForSelection() -->Line_6 $$ PhoenixStatement stmt = conn.createStatement().unwrap(PhoenixStatement.class)[ CD ]
Line_6 $$ PhoenixStatement stmt = conn.createStatement().unwrap(PhoenixStatement.class)-->Line_6 $$ PhoenixStatement stmt = conn.createStatement().unwrap(PhoenixStatement.class)[ CD ]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_6 $$ PhoenixStatement stmt = conn.createStatement().unwrap(PhoenixStatement.class)[ FD ]
Line_2 $$ public void testChooseTableForSelection() -->Line_7 $$ QueryPlan plan = stmt.optimizeQuery("SELECT v1,v2 FROM t WHERE v1 = 'bar'")[ CD ]
Line_7 $$ QueryPlan plan = stmt.optimizeQuery("SELECT v1,v2 FROM t WHERE v1 = 'bar'")-->Line_7 $$ QueryPlan plan = stmt.optimizeQuery("SELECT v1,v2 FROM t WHERE v1 = 'bar'")[ CD ]
Line_6 $$ PhoenixStatement stmt = conn.createStatement().unwrap(PhoenixStatement.class)-->Line_7 $$ QueryPlan plan = stmt.optimizeQuery("SELECT v1,v2 FROM t WHERE v1 = 'bar'")[ FD ]
Line_2 $$ public void testChooseTableForSelection() -->Line_8 $$ assertEquals("T", plan.getTableRef().getTable().getTableName().getString())[ CD ]
Line_7 $$ QueryPlan plan = stmt.optimizeQuery("SELECT v1,v2 FROM t WHERE v1 = 'bar'")-->Line_8 $$ assertEquals("T", plan.getTableRef().getTable().getTableName().getString())[ FD ]
