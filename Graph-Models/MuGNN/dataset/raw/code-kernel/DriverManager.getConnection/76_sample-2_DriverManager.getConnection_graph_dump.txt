Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void exists(final int id) [ CD ]
Line_2 $$ public void exists(final int id) -->Line_3 $$ final Connection connection = DriverManager.getConnection(URL, USER, PASSWORD)[ CD ]
Line_3 $$ final Connection connection = DriverManager.getConnection(URL, USER, PASSWORD)-->Line_3 $$ final Connection connection = DriverManager.getConnection(URL, USER, PASSWORD)[ CD ]
Line_2 $$ public void exists(final int id) -->Line_4 $$ final Statement statement = connection.createStatement()[ CD ]
Line_4 $$ final Statement statement = connection.createStatement()-->Line_4 $$ final Statement statement = connection.createStatement()[ CD ]
Line_3 $$ final Connection connection = DriverManager.getConnection(URL, USER, PASSWORD)-->Line_4 $$ final Statement statement = connection.createStatement()[ FD ]
Line_2 $$ public void exists(final int id) -->Line_5 $$ final ResultSet result = statement.executeQuery("SELECT count(*) AS NB FROM " + TABLE + " WHERE ID = " + id)[ CD ]
Line_5 $$ final ResultSet result = statement.executeQuery("SELECT count(*) AS NB FROM " + TABLE + " WHERE ID = " + id)-->Line_5 $$ final ResultSet result = statement.executeQuery("SELECT count(*) AS NB FROM " + TABLE + " WHERE ID = " + id)[ CD ]
Line_4 $$ final Statement statement = connection.createStatement()-->Line_5 $$ final ResultSet result = statement.executeQuery("SELECT count(*) AS NB FROM " + TABLE + " WHERE ID = " + id)[ FD ]
Line_2 $$ public void exists(final int id) -->Line_6 $$ assertTrue(result.next())[ CD ]
Line_5 $$ final ResultSet result = statement.executeQuery("SELECT count(*) AS NB FROM " + TABLE + " WHERE ID = " + id)-->Line_6 $$ assertTrue(result.next())[ FD ]
Line_2 $$ public void exists(final int id) -->Line_7 $$ return result.getInt(1) == 1[ CD ]
Line_5 $$ final ResultSet result = statement.executeQuery("SELECT count(*) AS NB FROM " + TABLE + " WHERE ID = " + id)-->Line_7 $$ return result.getInt(1) == 1[ FD ]
