Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void makeGetRequest(String urlString, HashMap<String, String> queryParams, boolean enableCache, int cacheMaxAge) [ CD ]
Line_2 $$ public void makeGetRequest(String urlString, HashMap<String, String> queryParams, boolean enableCache, int cacheMaxAge) -->Line_3 $$ if (queryParams != null && queryParams.size() > 0) [ CD ]
Line_2 $$ public void makeGetRequest(String urlString, HashMap<String, String> queryParams, boolean enableCache, int cacheMaxAge) -->Line_3 $$ if (queryParams != null && queryParams.size() > 0) [ FD ]
Line_3 $$ if (queryParams != null && queryParams.size() > 0) -->Line_4 $$ List<NameValuePair> pairs = Lists.newArrayListWithCapacity(queryParams.size())[ CD ]
Line_4 $$ List<NameValuePair> pairs = Lists.newArrayListWithCapacity(queryParams.size())-->Line_4 $$ List<NameValuePair> pairs = Lists.newArrayListWithCapacity(queryParams.size())[ CD ]
Line_2 $$ public void makeGetRequest(String urlString, HashMap<String, String> queryParams, boolean enableCache, int cacheMaxAge) -->Line_4 $$ List<NameValuePair> pairs = Lists.newArrayListWithCapacity(queryParams.size())[ FD ]
Line_2 $$ public void makeGetRequest(String urlString, HashMap<String, String> queryParams, boolean enableCache, int cacheMaxAge) -->Line_5 $$ for (String paramName : queryParams.keySet()) [ FD ]
Line_4 $$ List<NameValuePair> pairs = Lists.newArrayListWithCapacity(queryParams.size())-->Line_6 $$ pairs.add(new BasicNameValuePair(paramName, queryParams.get(paramName)))[ FD ]
Line_2 $$ public void makeGetRequest(String urlString, HashMap<String, String> queryParams, boolean enableCache, int cacheMaxAge) -->Line_6 $$ pairs.add(new BasicNameValuePair(paramName, queryParams.get(paramName)))[ FD ]
Line_5 $$ for (String paramName : queryParams.keySet()) -->Line_6 $$ pairs.add(new BasicNameValuePair(paramName, queryParams.get(paramName)))[ FD ]
Line_4 $$ List<NameValuePair> pairs = Lists.newArrayListWithCapacity(queryParams.size())-->Line_8 $$ uri = new URI(uri.getScheme(), uri.getUserInfo(), uri.getHost(), uri.getPort(), uri.getPath(), URLEncodedUtils.format(pairs, "UTF-8"), uri.getFragment())[ FD ]
Line_2 $$ public void makeGetRequest(String urlString, HashMap<String, String> queryParams, boolean enableCache, int cacheMaxAge) -->Line_10 $$ HttpGet request = new HttpGet(uri)[ CD ]
Line_2 $$ public void makeGetRequest(String urlString, HashMap<String, String> queryParams, boolean enableCache, int cacheMaxAge) -->Line_11 $$ addDefaultHeaders(request)[ CD ]
Line_10 $$ HttpGet request = new HttpGet(uri)-->Line_11 $$ addDefaultHeaders(request)[ FD ]
Line_2 $$ public void makeGetRequest(String urlString, HashMap<String, String> queryParams, boolean enableCache, int cacheMaxAge) -->Line_12 $$ Gdx.app.debug(TAG, "REQ: GET " + uri)[ CD ]
