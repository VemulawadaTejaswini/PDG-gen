Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testToUri() [ CD ]
Line_2 $$ public void testToUri() -->Line_3 $$ assertEquals("file:///asd%20/sd", VfsUtil.toUri(new File("/asd /sd")).toASCIIString())[ CD ]
Line_2 $$ public void testToUri() -->Line_4 $$ URI uri = VfsUtil.toUri("file:///asd")[ CD ]
Line_4 $$ URI uri = VfsUtil.toUri("file:///asd")-->Line_4 $$ URI uri = VfsUtil.toUri("file:///asd")[ CD ]
Line_2 $$ public void testToUri() -->Line_5 $$ assertNotNull(uri)[ CD ]
Line_4 $$ URI uri = VfsUtil.toUri("file:///asd")-->Line_5 $$ assertNotNull(uri)[ FD ]
Line_2 $$ public void testToUri() -->Line_6 $$ assertEquals("file", uri.getScheme())[ CD ]
Line_4 $$ URI uri = VfsUtil.toUri("file:///asd")-->Line_6 $$ assertEquals("file", uri.getScheme())[ FD ]
Line_2 $$ public void testToUri() -->Line_7 $$ assertEquals("/asd", uri.getPath())[ CD ]
Line_4 $$ URI uri = VfsUtil.toUri("file:///asd")-->Line_7 $$ assertEquals("/asd", uri.getPath())[ FD ]
Line_2 $$ public void testToUri() -->Line_8 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#test")[ CD ]
Line_4 $$ URI uri = VfsUtil.toUri("file:///asd")-->Line_8 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#test")[ FD ]
Line_8 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#test")-->Line_8 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#test")[ FD ]
Line_8 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#test")-->Line_8 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#test")[ CD ]
Line_2 $$ public void testToUri() -->Line_9 $$ assertNotNull(uri)[ CD ]
Line_4 $$ URI uri = VfsUtil.toUri("file:///asd")-->Line_9 $$ assertNotNull(uri)[ FD ]
Line_8 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#test")-->Line_9 $$ assertNotNull(uri)[ FD ]
Line_2 $$ public void testToUri() -->Line_10 $$ assertEquals("file", uri.getScheme())[ CD ]
Line_4 $$ URI uri = VfsUtil.toUri("file:///asd")-->Line_10 $$ assertEquals("file", uri.getScheme())[ FD ]
Line_8 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#test")-->Line_10 $$ assertEquals("file", uri.getScheme())[ FD ]
Line_2 $$ public void testToUri() -->Line_11 $$ assertEquals("/asd/ ads/ad", uri.getPath())[ CD ]
Line_4 $$ URI uri = VfsUtil.toUri("file:///asd")-->Line_11 $$ assertEquals("/asd/ ads/ad", uri.getPath())[ FD ]
Line_8 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#test")-->Line_11 $$ assertEquals("/asd/ ads/ad", uri.getPath())[ FD ]
Line_2 $$ public void testToUri() -->Line_12 $$ assertEquals("test", uri.getFragment())[ CD ]
Line_4 $$ URI uri = VfsUtil.toUri("file:///asd")-->Line_12 $$ assertEquals("test", uri.getFragment())[ FD ]
Line_8 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#test")-->Line_12 $$ assertEquals("test", uri.getFragment())[ FD ]
Line_2 $$ public void testToUri() -->Line_13 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#")[ CD ]
Line_4 $$ URI uri = VfsUtil.toUri("file:///asd")-->Line_13 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#")[ FD ]
Line_8 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#test")-->Line_13 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#")[ FD ]
Line_13 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#")-->Line_13 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#")[ FD ]
Line_13 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#")-->Line_13 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#")[ CD ]
Line_2 $$ public void testToUri() -->Line_14 $$ assertNotNull(uri)[ CD ]
Line_4 $$ URI uri = VfsUtil.toUri("file:///asd")-->Line_14 $$ assertNotNull(uri)[ FD ]
Line_8 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#test")-->Line_14 $$ assertNotNull(uri)[ FD ]
Line_13 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#")-->Line_14 $$ assertNotNull(uri)[ FD ]
Line_2 $$ public void testToUri() -->Line_15 $$ assertEquals("file:///asd/%20ads/ad#", uri.toString())[ CD ]
Line_4 $$ URI uri = VfsUtil.toUri("file:///asd")-->Line_15 $$ assertEquals("file:///asd/%20ads/ad#", uri.toString())[ FD ]
Line_8 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#test")-->Line_15 $$ assertEquals("file:///asd/%20ads/ad#", uri.toString())[ FD ]
Line_13 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#")-->Line_15 $$ assertEquals("file:///asd/%20ads/ad#", uri.toString())[ FD ]
Line_2 $$ public void testToUri() -->Line_16 $$ uri = VfsUtil.toUri("mailto:someone@example.com")[ CD ]
Line_4 $$ URI uri = VfsUtil.toUri("file:///asd")-->Line_16 $$ uri = VfsUtil.toUri("mailto:someone@example.com")[ FD ]
Line_8 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#test")-->Line_16 $$ uri = VfsUtil.toUri("mailto:someone@example.com")[ FD ]
Line_13 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#")-->Line_16 $$ uri = VfsUtil.toUri("mailto:someone@example.com")[ FD ]
Line_16 $$ uri = VfsUtil.toUri("mailto:someone@example.com")-->Line_16 $$ uri = VfsUtil.toUri("mailto:someone@example.com")[ FD ]
Line_16 $$ uri = VfsUtil.toUri("mailto:someone@example.com")-->Line_16 $$ uri = VfsUtil.toUri("mailto:someone@example.com")[ CD ]
Line_2 $$ public void testToUri() -->Line_17 $$ assertNotNull(uri)[ CD ]
Line_4 $$ URI uri = VfsUtil.toUri("file:///asd")-->Line_17 $$ assertNotNull(uri)[ FD ]
Line_8 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#test")-->Line_17 $$ assertNotNull(uri)[ FD ]
Line_13 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#")-->Line_17 $$ assertNotNull(uri)[ FD ]
Line_16 $$ uri = VfsUtil.toUri("mailto:someone@example.com")-->Line_17 $$ assertNotNull(uri)[ FD ]
Line_2 $$ public void testToUri() -->Line_18 $$ assertEquals("someone@example.com", uri.getSchemeSpecificPart())[ CD ]
Line_4 $$ URI uri = VfsUtil.toUri("file:///asd")-->Line_18 $$ assertEquals("someone@example.com", uri.getSchemeSpecificPart())[ FD ]
Line_8 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#test")-->Line_18 $$ assertEquals("someone@example.com", uri.getSchemeSpecificPart())[ FD ]
Line_13 $$ uri = VfsUtil.toUri("file:///asd/ ads/ad#")-->Line_18 $$ assertEquals("someone@example.com", uri.getSchemeSpecificPart())[ FD ]
Line_16 $$ uri = VfsUtil.toUri("mailto:someone@example.com")-->Line_18 $$ assertEquals("someone@example.com", uri.getSchemeSpecificPart())[ FD ]
