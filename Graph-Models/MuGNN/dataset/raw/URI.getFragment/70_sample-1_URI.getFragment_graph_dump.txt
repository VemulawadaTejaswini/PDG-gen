Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void createUri(URI uri, String queryString) [ CD ]
Line_2 $$ public void createUri(URI uri, String queryString) -->Line_3 $$ String fragmentPart = uri.getFragment() == null ? "" : "#" + uri.getRawFragment()[ CD ]
Line_2 $$ public void createUri(URI uri, String queryString) -->Line_3 $$ String fragmentPart = uri.getFragment() == null ? "" : "#" + uri.getRawFragment()[ FD ]
Line_2 $$ public void createUri(URI uri, String queryString) -->Line_3 $$ String fragmentPart = uri.getFragment() == null ? "" : "#" + uri.getRawFragment()[ FD ]
Line_2 $$ public void createUri(URI uri, String queryString) -->Line_4 $$ URI pathonly = new URI(uri.getScheme(), uri.getUserInfo(), uri.getHost(), uri.getPort(), uri.getPath(), null, null)[ CD ]
Line_2 $$ public void createUri(URI uri, String queryString) -->Line_4 $$ URI pathonly = new URI(uri.getScheme(), uri.getUserInfo(), uri.getHost(), uri.getPort(), uri.getPath(), null, null)[ FD ]
Line_2 $$ public void createUri(URI uri, String queryString) -->Line_4 $$ URI pathonly = new URI(uri.getScheme(), uri.getUserInfo(), uri.getHost(), uri.getPort(), uri.getPath(), null, null)[ FD ]
Line_2 $$ public void createUri(URI uri, String queryString) -->Line_4 $$ URI pathonly = new URI(uri.getScheme(), uri.getUserInfo(), uri.getHost(), uri.getPort(), uri.getPath(), null, null)[ FD ]
Line_2 $$ public void createUri(URI uri, String queryString) -->Line_4 $$ URI pathonly = new URI(uri.getScheme(), uri.getUserInfo(), uri.getHost(), uri.getPort(), uri.getPath(), null, null)[ FD ]
Line_2 $$ public void createUri(URI uri, String queryString) -->Line_4 $$ URI pathonly = new URI(uri.getScheme(), uri.getUserInfo(), uri.getHost(), uri.getPort(), uri.getPath(), null, null)[ FD ]
