Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void addParams(final URI uri, final Multimap<String, String> params, final Set<String> overrideParams) [ CD ]
Line_2 $$ public void addParams(final URI uri, final Multimap<String, String> params, final Set<String> overrideParams) -->Line_3 $$ for (Map.Entry<String, Collection<String>> param : params.asMap().entrySet()) [ FD ]
Line_4 $$ final String key = param.getKey()-->Line_4 $$ final String key = param.getKey()[ CD ]
Line_3 $$ for (Map.Entry<String, Collection<String>> param : params.asMap().entrySet()) -->Line_4 $$ final String key = param.getKey()[ FD ]
Line_5 $$ Collection<String> origList = origParams.remove(key)-->Line_5 $$ Collection<String> origList = origParams.remove(key)[ CD ]
Line_4 $$ final String key = param.getKey()-->Line_5 $$ Collection<String> origList = origParams.remove(key)[ FD ]
Line_6 $$ if (origList != null && (overrideParams == null || !overrideParams.contains(key))) -->Line_6 $$ if (origList != null && (overrideParams == null || !overrideParams.contains(key))) [ CD ]
Line_2 $$ public void addParams(final URI uri, final Multimap<String, String> params, final Set<String> overrideParams) -->Line_6 $$ if (origList != null && (overrideParams == null || !overrideParams.contains(key))) [ FD ]
Line_4 $$ final String key = param.getKey()-->Line_6 $$ if (origList != null && (overrideParams == null || !overrideParams.contains(key))) [ FD ]
Line_6 $$ if (origList != null && (overrideParams == null || !overrideParams.contains(key))) -->Line_7 $$ first = addParams(result, first, key, origList)[ CD ]
Line_4 $$ final String key = param.getKey()-->Line_7 $$ first = addParams(result, first, key, origList)[ FD ]
Line_5 $$ Collection<String> origList = origParams.remove(key)-->Line_7 $$ first = addParams(result, first, key, origList)[ FD ]
Line_9 $$ Collection<String> list = param.getValue()-->Line_9 $$ Collection<String> list = param.getValue()[ CD ]
Line_3 $$ for (Map.Entry<String, Collection<String>> param : params.asMap().entrySet()) -->Line_9 $$ Collection<String> list = param.getValue()[ FD ]
Line_4 $$ final String key = param.getKey()-->Line_10 $$ first = addParams(result, first, key, list)[ FD ]
Line_9 $$ Collection<String> list = param.getValue()-->Line_10 $$ first = addParams(result, first, key, list)[ FD ]
Line_3 $$ for (Map.Entry<String, Collection<String>> param : params.asMap().entrySet()) -->Line_13 $$ final String key = param.getKey()[ FD ]
Line_3 $$ for (Map.Entry<String, Collection<String>> param : params.asMap().entrySet()) -->Line_14 $$ Collection<String> list = param.getValue()[ FD ]
Line_4 $$ final String key = param.getKey()-->Line_15 $$ first = addParams(result, first, key, list)[ FD ]
Line_9 $$ Collection<String> list = param.getValue()-->Line_15 $$ first = addParams(result, first, key, list)[ FD ]
Line_2 $$ public void addParams(final URI uri, final Multimap<String, String> params, final Set<String> overrideParams) -->Line_17 $$ if (uri.getFragment() != null) [ CD ]
Line_2 $$ public void addParams(final URI uri, final Multimap<String, String> params, final Set<String> overrideParams) -->Line_17 $$ if (uri.getFragment() != null) [ FD ]
Line_17 $$ if (uri.getFragment() != null) -->Line_18 $$ result.append('#').append(uri.getRawFragment())[ CD ]
Line_2 $$ public void addParams(final URI uri, final Multimap<String, String> params, final Set<String> overrideParams) -->Line_18 $$ result.append('#').append(uri.getRawFragment())[ FD ]
