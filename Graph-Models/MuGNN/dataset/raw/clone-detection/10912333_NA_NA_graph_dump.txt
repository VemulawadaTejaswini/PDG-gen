Line_4 $$ if (espaciosLlenos()) --> Line_5 $$ guardarCantidad() [CD]
Line_4 $$ if (espaciosLlenos()) --> Line_6 $$ String dat = "" [CD]
Line_4 $$ if (espaciosLlenos()) --> Line_7 $$ String filenametxt = String.valueOf("recordatorio" + cantidadArchivos + ".txt") [CD]
Line_4 $$ if (espaciosLlenos()) --> Line_8 $$ String filenamezip = String.valueOf("recordatorio" + cantidadArchivos + ".zip") [CD]
Line_4 $$ if (espaciosLlenos()) --> Line_10 $$ dat += identificarDato(datoSeleccionado) + "\n" [CD]
Line_6 $$ String dat = "" --> Line_10 $$ dat += identificarDato(datoSeleccionado) + "\n" [FD]
Line_4 $$ if (espaciosLlenos()) --> Line_11 $$ dat += String.valueOf(mesTemporal) + "\n" [CD]
Line_6 $$ String dat = "" --> Line_11 $$ dat += String.valueOf(mesTemporal) + "\n" [FD]
Line_10 $$ dat += identificarDato(datoSeleccionado) + "\n" --> Line_11 $$ dat += String.valueOf(mesTemporal) + "\n" [FD]
Line_4 $$ if (espaciosLlenos()) --> Line_12 $$ dat += String.valueOf(anoTemporal) + "\n" [CD]
Line_6 $$ String dat = "" --> Line_12 $$ dat += String.valueOf(anoTemporal) + "\n" [FD]
Line_10 $$ dat += identificarDato(datoSeleccionado) + "\n" --> Line_12 $$ dat += String.valueOf(anoTemporal) + "\n" [FD]
Line_11 $$ dat += String.valueOf(mesTemporal) + "\n" --> Line_12 $$ dat += String.valueOf(anoTemporal) + "\n" [FD]
Line_4 $$ if (espaciosLlenos()) --> Line_13 $$ dat += horaT.getText() + "\n" [CD]
Line_6 $$ String dat = "" --> Line_13 $$ dat += horaT.getText() + "\n" [FD]
Line_10 $$ dat += identificarDato(datoSeleccionado) + "\n" --> Line_13 $$ dat += horaT.getText() + "\n" [FD]
Line_11 $$ dat += String.valueOf(mesTemporal) + "\n" --> Line_13 $$ dat += horaT.getText() + "\n" [FD]
Line_12 $$ dat += String.valueOf(anoTemporal) + "\n" --> Line_13 $$ dat += horaT.getText() + "\n" [FD]
Line_4 $$ if (espaciosLlenos()) --> Line_14 $$ dat += lugarT.getText() + "\n" [CD]
Line_6 $$ String dat = "" --> Line_14 $$ dat += lugarT.getText() + "\n" [FD]
Line_10 $$ dat += identificarDato(datoSeleccionado) + "\n" --> Line_14 $$ dat += lugarT.getText() + "\n" [FD]
Line_11 $$ dat += String.valueOf(mesTemporal) + "\n" --> Line_14 $$ dat += lugarT.getText() + "\n" [FD]
Line_12 $$ dat += String.valueOf(anoTemporal) + "\n" --> Line_14 $$ dat += lugarT.getText() + "\n" [FD]
Line_13 $$ dat += horaT.getText() + "\n" --> Line_14 $$ dat += lugarT.getText() + "\n" [FD]
Line_4 $$ if (espaciosLlenos()) --> Line_15 $$ dat += actividadT.getText() + "\n" [CD]
Line_6 $$ String dat = "" --> Line_15 $$ dat += actividadT.getText() + "\n" [FD]
Line_10 $$ dat += identificarDato(datoSeleccionado) + "\n" --> Line_15 $$ dat += actividadT.getText() + "\n" [FD]
Line_11 $$ dat += String.valueOf(mesTemporal) + "\n" --> Line_15 $$ dat += actividadT.getText() + "\n" [FD]
Line_12 $$ dat += String.valueOf(anoTemporal) + "\n" --> Line_15 $$ dat += actividadT.getText() + "\n" [FD]
Line_13 $$ dat += horaT.getText() + "\n" --> Line_15 $$ dat += actividadT.getText() + "\n" [FD]
Line_14 $$ dat += lugarT.getText() + "\n" --> Line_15 $$ dat += actividadT.getText() + "\n" [FD]
Line_4 $$ if (espaciosLlenos()) --> Line_16 $$ File archivo = new File(filenametxt) [CD]
Line_4 $$ if (espaciosLlenos()) --> Line_17 $$ FileWriter fw = new FileWriter(archivo) [CD]
Line_4 $$ if (espaciosLlenos()) --> Line_18 $$ BufferedWriter bw = new BufferedWriter(fw) [CD]
Line_4 $$ if (espaciosLlenos()) --> Line_19 $$ PrintWriter salida = new PrintWriter(bw) [CD]
Line_4 $$ if (espaciosLlenos()) --> Line_20 $$ salida.print(dat) [CD]
Line_19 $$ PrintWriter salida = new PrintWriter(bw) --> Line_20 $$ salida.print(dat) [FD]
Line_6 $$ String dat = "" --> Line_20 $$ salida.print(dat) [FD]
Line_10 $$ dat += identificarDato(datoSeleccionado) + "\n" --> Line_20 $$ salida.print(dat) [FD]
Line_11 $$ dat += String.valueOf(mesTemporal) + "\n" --> Line_20 $$ salida.print(dat) [FD]
Line_12 $$ dat += String.valueOf(anoTemporal) + "\n" --> Line_20 $$ salida.print(dat) [FD]
Line_13 $$ dat += horaT.getText() + "\n" --> Line_20 $$ salida.print(dat) [FD]
Line_14 $$ dat += lugarT.getText() + "\n" --> Line_20 $$ salida.print(dat) [FD]
Line_15 $$ dat += actividadT.getText() + "\n" --> Line_20 $$ salida.print(dat) [FD]
Line_4 $$ if (espaciosLlenos()) --> Line_21 $$ salida.close() [CD]
Line_19 $$ PrintWriter salida = new PrintWriter(bw) --> Line_21 $$ salida.close() [FD]
Line_4 $$ if (espaciosLlenos()) --> Line_22 $$ BufferedInputStream origin = null [CD]
Line_4 $$ if (espaciosLlenos()) --> Line_23 $$ FileOutputStream dest = new FileOutputStream(filenamezip) [CD]
Line_4 $$ if (espaciosLlenos()) --> Line_24 $$ ZipOutputStream out = new ZipOutputStream(new BufferedOutputStream(dest)) [CD]
Line_4 $$ if (espaciosLlenos()) --> Line_25 $$ byte data[] = new byte[buffer] [CD]
Line_4 $$ if (espaciosLlenos()) --> Line_26 $$ File f = new File(filenametxt) [CD]
Line_4 $$ if (espaciosLlenos()) --> Line_27 $$ FileInputStream fi = new FileInputStream(f) [CD]
Line_4 $$ if (espaciosLlenos()) --> Line_28 $$ origin = new BufferedInputStream(fi, buffer) [CD]
Line_22 $$ BufferedInputStream origin = null --> Line_28 $$ origin = new BufferedInputStream(fi, buffer) [FD]
Line_4 $$ if (espaciosLlenos()) --> Line_29 $$ ZipEntry entry = new ZipEntry(filenametxt) [CD]
Line_4 $$ if (espaciosLlenos()) --> Line_30 $$ out.putNextEntry(entry) [CD]
Line_24 $$ ZipOutputStream out = new ZipOutputStream(new BufferedOutputStream(dest)) --> Line_30 $$ out.putNextEntry(entry) [FD]
Line_4 $$ if (espaciosLlenos()) --> Line_31 $$ int count [CD]
Line_4 $$ if (espaciosLlenos()) --> Line_32 $$ while ((count = origin.read(data, 0, buffer)) != -1) out.write(data, 0, count) [CD]
Line_31 $$ int count --> Line_32 $$ while ((count = origin.read(data, 0, buffer)) != -1) out.write(data, 0, count) [FD]
Line_22 $$ BufferedInputStream origin = null --> Line_32 $$ while ((count = origin.read(data, 0, buffer)) != -1) out.write(data, 0, count) [FD]
Line_28 $$ origin = new BufferedInputStream(fi, buffer) --> Line_32 $$ while ((count = origin.read(data, 0, buffer)) != -1) out.write(data, 0, count) [FD]
Line_24 $$ ZipOutputStream out = new ZipOutputStream(new BufferedOutputStream(dest)) --> Line_32 $$ while ((count = origin.read(data, 0, buffer)) != -1) out.write(data, 0, count) [FD]
Line_4 $$ if (espaciosLlenos()) --> Line_33 $$ out.close() [CD]
Line_24 $$ ZipOutputStream out = new ZipOutputStream(new BufferedOutputStream(dest)) --> Line_33 $$ out.close() [FD]
Line_4 $$ if (espaciosLlenos()) --> Line_34 $$ JOptionPane.showMessageDialog(null, "El recordatorio ha sido guardado con exito", "Recordatorio Guardado", JOptionPane.INFORMATION_MESSAGE) [CD]
Line_4 $$ if (espaciosLlenos()) --> Line_35 $$ marco.hide() [CD]
Line_4 $$ if (espaciosLlenos()) --> Line_36 $$ marco.dispose() [CD]
Line_4 $$ if (espaciosLlenos()) --> Line_37 $$ establecerMarca() [CD]
Line_4 $$ if (espaciosLlenos()) --> Line_38 $$ table.clearSelection() [CD]
Line_4 $$ if (espaciosLlenos()) --> Line_39 $$ JOptionPane.showMessageDialog(null, "Debe llenar los espacios de Hora, Lugar y Actividad", "Error", JOptionPane.ERROR_MESSAGE) [CD]
