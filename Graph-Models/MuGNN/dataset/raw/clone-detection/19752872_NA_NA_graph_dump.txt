Line_2 $$ public void searchEntity(HttpServletRequest req, HttpServletResponse resp, SearchCommand command) --> Line_3 $$ setHeader(resp) [CD]
Line_2 $$ public void searchEntity(HttpServletRequest req, HttpServletResponse resp, SearchCommand command) --> Line_3 $$ setHeader(resp) [FD]
Line_2 $$ public void searchEntity(HttpServletRequest req, HttpServletResponse resp, SearchCommand command) --> Line_4 $$ logger.debug("Search: Looking for the entity with the id:" + command.getSearchedid()) [CD]
Line_2 $$ public void searchEntity(HttpServletRequest req, HttpServletResponse resp, SearchCommand command) --> Line_4 $$ logger.debug("Search: Looking for the entity with the id:" + command.getSearchedid()) [FD]
Line_2 $$ public void searchEntity(HttpServletRequest req, HttpServletResponse resp, SearchCommand command) --> Line_5 $$ String login = command.getLogin() [CD]
Line_2 $$ public void searchEntity(HttpServletRequest req, HttpServletResponse resp, SearchCommand command) --> Line_5 $$ String login = command.getLogin() [FD]
Line_2 $$ public void searchEntity(HttpServletRequest req, HttpServletResponse resp, SearchCommand command) --> Line_6 $$ String password = command.getPassword() [CD]
Line_2 $$ public void searchEntity(HttpServletRequest req, HttpServletResponse resp, SearchCommand command) --> Line_6 $$ String password = command.getPassword() [FD]
Line_2 $$ public void searchEntity(HttpServletRequest req, HttpServletResponse resp, SearchCommand command) --> Line_7 $$ SynchronizableUser currentUser = userAccessControl.authenticate(login, password) [CD]
Line_5 $$ String login = command.getLogin() --> Line_7 $$ SynchronizableUser currentUser = userAccessControl.authenticate(login, password) [FD]
Line_6 $$ String password = command.getPassword() --> Line_7 $$ SynchronizableUser currentUser = userAccessControl.authenticate(login, password) [FD]
Line_2 $$ public void searchEntity(HttpServletRequest req, HttpServletResponse resp, SearchCommand command) --> Line_8 $$ if (currentUser != null) [CD]
Line_7 $$ SynchronizableUser currentUser = userAccessControl.authenticate(login, password) --> Line_8 $$ if (currentUser != null) [FD]
Line_7 $$ SynchronizableUser currentUser = userAccessControl.authenticate(login, password) --> Line_12 $$ syncServer.searchEntity(currentUser, command.getSearchedid(), fos) [FD]
Line_11 $$ OutputStream fos = new FileOutputStream(tempFile) --> Line_12 $$ syncServer.searchEntity(currentUser, command.getSearchedid(), fos) [FD]
Line_2 $$ public void searchEntity(HttpServletRequest req, HttpServletResponse resp, SearchCommand command) --> Line_12 $$ syncServer.searchEntity(currentUser, command.getSearchedid(), fos) [FD]
Line_2 $$ public void searchEntity(HttpServletRequest req, HttpServletResponse resp, SearchCommand command) --> Line_14 $$ resp.setContentLength(fis.available()) [FD]
Line_13 $$ InputStream fis = new FileInputStream(tempFile) --> Line_14 $$ resp.setContentLength(fis.available()) [FD]
Line_13 $$ InputStream fis = new FileInputStream(tempFile) --> Line_15 $$ while (fis.available() > 0) [FD]
Line_15 $$ while (fis.available() > 0) --> Line_16 $$ resp.getOutputStream().write(fis.read()) [CD]
Line_2 $$ public void searchEntity(HttpServletRequest req, HttpServletResponse resp, SearchCommand command) --> Line_16 $$ resp.getOutputStream().write(fis.read()) [FD]
Line_13 $$ InputStream fis = new FileInputStream(tempFile) --> Line_16 $$ resp.getOutputStream().write(fis.read()) [FD]
Line_2 $$ public void searchEntity(HttpServletRequest req, HttpServletResponse resp, SearchCommand command) --> Line_18 $$ resp.getOutputStream().flush() [FD]
Line_2 $$ public void searchEntity(HttpServletRequest req, HttpServletResponse resp, SearchCommand command) --> Line_19 $$ resp.flushBuffer() [FD]
Line_2 $$ public void searchEntity(HttpServletRequest req, HttpServletResponse resp, SearchCommand command) --> Line_27 $$ OutputStream out = resp.getOutputStream() [FD]
Line_27 $$ OutputStream out = resp.getOutputStream() --> Line_28 $$ out.write("-ERROR-".getBytes()) [FD]
Line_27 $$ OutputStream out = resp.getOutputStream() --> Line_29 $$ out.flush() [FD]
Line_27 $$ OutputStream out = resp.getOutputStream() --> Line_30 $$ out.close() [FD]
