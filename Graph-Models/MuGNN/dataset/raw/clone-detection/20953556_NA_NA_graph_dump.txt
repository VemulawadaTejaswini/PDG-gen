Line_2 $$ public String loadFileContent(final String _resourceURI) --> Line_3 $$ final Lock readLock = this.fileLock.readLock() [CD]
Line_2 $$ public String loadFileContent(final String _resourceURI) --> Line_4 $$ final Lock writeLock = this.fileLock.writeLock() [CD]
Line_2 $$ public String loadFileContent(final String _resourceURI) --> Line_5 $$ boolean hasReadLock = false [CD]
Line_2 $$ public String loadFileContent(final String _resourceURI) --> Line_6 $$ boolean hasWriteLock = false [CD]
Line_3 $$ final Lock readLock = this.fileLock.readLock() --> Line_8 $$ readLock.lock() [FD]
Line_5 $$ boolean hasReadLock = false --> Line_9 $$ hasReadLock = true [FD]
Line_2 $$ public String loadFileContent(final String _resourceURI) --> Line_10 $$ if (!this.cachedResources.containsKey(_resourceURI)) [FD]
Line_10 $$ if (!this.cachedResources.containsKey(_resourceURI)) --> Line_11 $$ readLock.unlock() [CD]
Line_3 $$ final Lock readLock = this.fileLock.readLock() --> Line_11 $$ readLock.unlock() [FD]
Line_10 $$ if (!this.cachedResources.containsKey(_resourceURI)) --> Line_12 $$ hasReadLock = false [CD]
Line_5 $$ boolean hasReadLock = false --> Line_12 $$ hasReadLock = false [FD]
Line_9 $$ hasReadLock = true --> Line_12 $$ hasReadLock = false [FD]
Line_10 $$ if (!this.cachedResources.containsKey(_resourceURI)) --> Line_13 $$ writeLock.lock() [CD]
Line_4 $$ final Lock writeLock = this.fileLock.writeLock() --> Line_13 $$ writeLock.lock() [FD]
Line_10 $$ if (!this.cachedResources.containsKey(_resourceURI)) --> Line_14 $$ hasWriteLock = true [CD]
Line_6 $$ boolean hasWriteLock = false --> Line_14 $$ hasWriteLock = true [FD]
Line_10 $$ if (!this.cachedResources.containsKey(_resourceURI)) --> Line_15 $$ if (!this.cachedResources.containsKey(_resourceURI)) [CD]
Line_2 $$ public String loadFileContent(final String _resourceURI) --> Line_15 $$ if (!this.cachedResources.containsKey(_resourceURI)) [FD]
Line_15 $$ if (!this.cachedResources.containsKey(_resourceURI)) --> Line_16 $$ final InputStream resourceAsStream = this.getClass().getResourceAsStream(_resourceURI) [CD]
Line_2 $$ public String loadFileContent(final String _resourceURI) --> Line_16 $$ final InputStream resourceAsStream = this.getClass().getResourceAsStream(_resourceURI) [FD]
Line_15 $$ if (!this.cachedResources.containsKey(_resourceURI)) --> Line_17 $$ final StringWriter writer = new StringWriter() [CD]
Line_16 $$ final InputStream resourceAsStream = this.getClass().getResourceAsStream(_resourceURI) --> Line_19 $$ IOUtils.copy(resourceAsStream, writer) [FD]
Line_17 $$ final StringWriter writer = new StringWriter() --> Line_19 $$ IOUtils.copy(resourceAsStream, writer) [FD]
Line_15 $$ if (!this.cachedResources.containsKey(_resourceURI)) --> Line_23 $$ final String loadedResource = writer.toString() [CD]
Line_17 $$ final StringWriter writer = new StringWriter() --> Line_23 $$ final String loadedResource = writer.toString() [FD]
Line_15 $$ if (!this.cachedResources.containsKey(_resourceURI)) --> Line_24 $$ this.cachedResources.put(_resourceURI, loadedResource) [CD]
Line_2 $$ public String loadFileContent(final String _resourceURI) --> Line_24 $$ this.cachedResources.put(_resourceURI, loadedResource) [FD]
Line_23 $$ final String loadedResource = writer.toString() --> Line_24 $$ this.cachedResources.put(_resourceURI, loadedResource) [FD]
Line_10 $$ if (!this.cachedResources.containsKey(_resourceURI)) --> Line_26 $$ writeLock.unlock() [CD]
Line_4 $$ final Lock writeLock = this.fileLock.writeLock() --> Line_26 $$ writeLock.unlock() [FD]
Line_10 $$ if (!this.cachedResources.containsKey(_resourceURI)) --> Line_27 $$ hasWriteLock = false [CD]
Line_6 $$ boolean hasWriteLock = false --> Line_27 $$ hasWriteLock = false [FD]
Line_14 $$ hasWriteLock = true --> Line_27 $$ hasWriteLock = false [FD]
Line_10 $$ if (!this.cachedResources.containsKey(_resourceURI)) --> Line_28 $$ readLock.lock() [CD]
Line_3 $$ final Lock readLock = this.fileLock.readLock() --> Line_28 $$ readLock.lock() [FD]
Line_10 $$ if (!this.cachedResources.containsKey(_resourceURI)) --> Line_29 $$ hasReadLock = true [CD]
Line_5 $$ boolean hasReadLock = false --> Line_29 $$ hasReadLock = true [FD]
Line_9 $$ hasReadLock = true --> Line_29 $$ hasReadLock = true [FD]
Line_12 $$ hasReadLock = false --> Line_29 $$ hasReadLock = true [FD]
Line_2 $$ public String loadFileContent(final String _resourceURI) --> Line_31 $$ return this.cachedResources.get(_resourceURI) [FD]
Line_33 $$ if (hasReadLock) --> Line_34 $$ readLock.unlock() [CD]
Line_3 $$ final Lock readLock = this.fileLock.readLock() --> Line_34 $$ readLock.unlock() [FD]
Line_36 $$ if (hasWriteLock) --> Line_37 $$ writeLock.unlock() [CD]
Line_4 $$ final Lock writeLock = this.fileLock.writeLock() --> Line_37 $$ writeLock.unlock() [FD]
