Line_2 $$ private List<String> getLogFile() --> Line_3 $$ String homeServer = "" [CD]
Line_2 $$ private List<String> getLogFile() --> Line_4 $$ Realm realm = null [CD]
Line_2 $$ private List<String> getLogFile() --> Line_5 $$ if (null == node) [CD]
Line_5 $$ if (null == node) --> Line_6 $$ if (null != System.getProperty("ThinClientManager.server.Codebase")) [CD]
Line_3 $$ String homeServer = "" --> Line_7 $$ homeServer = new URL(System.getProperty("ThinClientManager.server.Codebase")).getHost() [FD]
Line_5 $$ if (null == node) --> Line_12 $$ realm = (Realm) node.getLookup().lookup(Realm.class) [CD]
Line_4 $$ Realm realm = null --> Line_12 $$ realm = (Realm) node.getLookup().lookup(Realm.class) [FD]
Line_5 $$ if (null == node) --> Line_13 $$ if (null != realm.getConnectionDescriptor().getHostname()) [CD]
Line_4 $$ Realm realm = null --> Line_13 $$ if (null != realm.getConnectionDescriptor().getHostname()) [FD]
Line_3 $$ String homeServer = "" --> Line_13 $$ if (null != realm.getConnectionDescriptor().getHostname()) [FD]
Line_7 $$ homeServer = new URL(System.getProperty("ThinClientManager.server.Codebase")).getHost() --> Line_13 $$ if (null != realm.getConnectionDescriptor().getHostname()) [FD]
Line_2 $$ private List<String> getLogFile() --> Line_15 $$ if (homeServer.length() == 0) [CD]
Line_3 $$ String homeServer = "" --> Line_15 $$ if (homeServer.length() == 0) [FD]
Line_7 $$ homeServer = new URL(System.getProperty("ThinClientManager.server.Codebase")).getHost() --> Line_15 $$ if (homeServer.length() == 0) [FD]
Line_13 $$ if (null != realm.getConnectionDescriptor().getHostname()) --> Line_15 $$ if (homeServer.length() == 0) [FD]
Line_17 $$ final URL url = new URL("http", homeServer, 8080, fileName) --> Line_18 $$ final BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream())) [FD]
Line_21 $$ if (isClient) --> Line_22 $$ while ((line = br.readLine()) != null) if (line.contains(macAdress)) [CD]
Line_20 $$ String line --> Line_22 $$ while ((line = br.readLine()) != null) if (line.contains(macAdress)) [FD]
Line_18 $$ final BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_22 $$ while ((line = br.readLine()) != null) if (line.contains(macAdress)) [FD]
Line_19 $$ final ArrayList<String> lines = new ArrayList<String>() --> Line_22 $$ while ((line = br.readLine()) != null) if (line.contains(macAdress)) [FD]
Line_21 $$ if (isClient) --> Line_23 $$ lines.add(Messages.getString("LogDetailView.getLogFile.NoEntrysForTC", macAdress)) [CD]
Line_19 $$ final ArrayList<String> lines = new ArrayList<String>() --> Line_23 $$ lines.add(Messages.getString("LogDetailView.getLogFile.NoEntrysForTC", macAdress)) [FD]
Line_21 $$ if (isClient) --> Line_24 $$ while ((line = br.readLine()) != null) lines.add(line) [CD]
Line_22 $$ while ((line = br.readLine()) != null) if (line.contains(macAdress)) --> Line_24 $$ while ((line = br.readLine()) != null) lines.add(line) [FD]
Line_20 $$ String line --> Line_24 $$ while ((line = br.readLine()) != null) lines.add(line) [FD]
Line_18 $$ final BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_24 $$ while ((line = br.readLine()) != null) lines.add(line) [FD]
Line_19 $$ final ArrayList<String> lines = new ArrayList<String>() --> Line_24 $$ while ((line = br.readLine()) != null) lines.add(line) [FD]
Line_18 $$ final BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_25 $$ br.close() [FD]
Line_19 $$ final ArrayList<String> lines = new ArrayList<String>() --> Line_26 $$ lines.add(Messages.getString("LogDetailView.getLogFile.NoEntrys")) [FD]
Line_2 $$ private List<String> getLogFile() --> Line_35 $$ return Collections.EMPTY_LIST [CD]
