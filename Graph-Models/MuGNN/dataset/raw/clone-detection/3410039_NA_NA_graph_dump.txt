Line_2 $$ public void fillTableValues() --> Line_3 $$ java.util.ArrayList cpool = newgen.presentation.NewGenMain.getAppletInstance().getCataloguingPool() [CD]
Line_2 $$ public void fillTableValues() --> Line_4 $$ String xmlreq = AdministrationXMLGenerator.getInstance().getPoolChronologicalSubDivision("4", cpool) [CD]
Line_3 $$ java.util.ArrayList cpool = newgen.presentation.NewGenMain.getAppletInstance().getCataloguingPool() --> Line_4 $$ String xmlreq = AdministrationXMLGenerator.getInstance().getPoolChronologicalSubDivision("4", cpool) [FD]
Line_2 $$ public void fillTableValues() --> Line_5 $$ System.out.println(xmlreq) [CD]
Line_4 $$ String xmlreq = AdministrationXMLGenerator.getInstance().getPoolChronologicalSubDivision("4", cpool) --> Line_5 $$ System.out.println(xmlreq) [FD]
Line_7 $$ java.net.URL url = new java.net.URL(ResourceBundle.getBundle("Administration").getString("ServerURL") + ResourceBundle.getBundle("Administration").getString("ServletSubPath") + "SubDivisionServlet") --> Line_8 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection() [FD]
Line_8 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection() --> Line_9 $$ urlconn.setDoOutput(true) [FD]
Line_8 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection() --> Line_10 $$ java.io.OutputStream dos = urlconn.getOutputStream() [FD]
Line_10 $$ java.io.OutputStream dos = urlconn.getOutputStream() --> Line_11 $$ dos.write(xmlreq.getBytes()) [FD]
Line_4 $$ String xmlreq = AdministrationXMLGenerator.getInstance().getPoolChronologicalSubDivision("4", cpool) --> Line_11 $$ dos.write(xmlreq.getBytes()) [FD]
Line_8 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection() --> Line_12 $$ java.io.InputStream ios = urlconn.getInputStream() [FD]
Line_13 $$ SAXBuilder saxb = new SAXBuilder() --> Line_14 $$ Document retdoc = saxb.build(ios) [FD]
Line_12 $$ java.io.InputStream ios = urlconn.getInputStream() --> Line_14 $$ Document retdoc = saxb.build(ios) [FD]
Line_14 $$ Document retdoc = saxb.build(ios) --> Line_15 $$ Element rootelement = retdoc.getRootElement() [FD]
Line_15 $$ Element rootelement = retdoc.getRootElement() --> Line_16 $$ java.util.List onelist = rootelement.getChildren() [FD]
Line_16 $$ java.util.List onelist = rootelement.getChildren() --> Line_17 $$ for (int i = 0; i < onelist.size(); i++) [FD]
Line_17 $$ for (int i = 0; i < onelist.size(); i++) --> Line_18 $$ Element rec = (Element) onelist.get(i) [CD]
Line_17 $$ for (int i = 0; i < onelist.size(); i++) --> Line_18 $$ Element rec = (Element) onelist.get(i) [FD]
Line_16 $$ java.util.List onelist = rootelement.getChildren() --> Line_18 $$ Element rec = (Element) onelist.get(i) [FD]
Line_17 $$ for (int i = 0; i < onelist.size(); i++) --> Line_19 $$ Object[] r = new Object[7] [CD]
Line_17 $$ for (int i = 0; i < onelist.size(); i++) --> Line_20 $$ String[] chronolib = new String[2] [CD]
Line_17 $$ for (int i = 0; i < onelist.size(); i++) --> Line_21 $$ chronolib[0] = rec.getChild("ChronologicalSubDivisionId").getText() [CD]
Line_18 $$ Element rec = (Element) onelist.get(i) --> Line_21 $$ chronolib[0] = rec.getChild("ChronologicalSubDivisionId").getText() [FD]
Line_17 $$ for (int i = 0; i < onelist.size(); i++) --> Line_22 $$ chronolib[1] = rec.getChild("LibraryId").getText() [CD]
Line_18 $$ Element rec = (Element) onelist.get(i) --> Line_22 $$ chronolib[1] = rec.getChild("LibraryId").getText() [FD]
Line_17 $$ for (int i = 0; i < onelist.size(); i++) --> Line_23 $$ this.chronoid_libid.add(chronolib) [CD]
Line_20 $$ String[] chronolib = new String[2] --> Line_23 $$ this.chronoid_libid.add(chronolib) [FD]
Line_17 $$ for (int i = 0; i < onelist.size(); i++) --> Line_24 $$ r[0] = rec.getChild("ChronologicalSubDivision").getText() [CD]
Line_18 $$ Element rec = (Element) onelist.get(i) --> Line_24 $$ r[0] = rec.getChild("ChronologicalSubDivision").getText() [FD]
Line_17 $$ for (int i = 0; i < onelist.size(); i++) --> Line_25 $$ this.dtmSearch.addRow(r) [CD]
Line_19 $$ Object[] r = new Object[7] --> Line_25 $$ this.dtmSearch.addRow(r) [FD]
