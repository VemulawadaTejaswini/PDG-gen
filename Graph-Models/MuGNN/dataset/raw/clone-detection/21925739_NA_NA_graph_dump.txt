Line_6 $$ for (int i = 1; i <= 17770; i++) --> Line_7 $$ File outFile = new File(completePath + fSep + "SmartGRAPE" + fSep + slopeOneDataFolderName + fSep + "Movie-" + i + "-SlopeOneData.txt") [CD]
Line_6 $$ for (int i = 1; i <= 17770; i++) --> Line_8 $$ FileChannel outC = new FileOutputStream(outFile).getChannel() [CD]
Line_6 $$ for (int i = 1; i <= 17770; i++) --> Line_9 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 10) [CD]
Line_6 $$ for (int i = 1; i <= 17770; i++) --> Line_10 $$ for (int j = 1; j < i; j++) [CD]
Line_6 $$ for (int i = 1; i <= 17770; i++) --> Line_10 $$ for (int j = 1; j < i; j++) [FD]
Line_10 $$ for (int j = 1; j < i; j++) --> Line_11 $$ ByteBuffer bbuf = ByteBuffer.allocate(12) [CD]
Line_10 $$ for (int j = 1; j < i; j++) --> Line_12 $$ inC.position((17769 * 17770 * 6) - ((17769 - (j - 1)) * (17770 - (j - 1)) * 6) + (i - j - 1) * 12) [CD]
Line_5 $$ FileChannel inC = new FileInputStream(inFile).getChannel() --> Line_12 $$ inC.position((17769 * 17770 * 6) - ((17769 - (j - 1)) * (17770 - (j - 1)) * 6) + (i - j - 1) * 12) [FD]
Line_10 $$ for (int j = 1; j < i; j++) --> Line_13 $$ inC.read(bbuf) [CD]
Line_5 $$ FileChannel inC = new FileInputStream(inFile).getChannel() --> Line_13 $$ inC.read(bbuf) [FD]
Line_11 $$ ByteBuffer bbuf = ByteBuffer.allocate(12) --> Line_13 $$ inC.read(bbuf) [FD]
Line_10 $$ for (int j = 1; j < i; j++) --> Line_14 $$ bbuf.flip() [CD]
Line_11 $$ ByteBuffer bbuf = ByteBuffer.allocate(12) --> Line_14 $$ bbuf.flip() [FD]
Line_10 $$ for (int j = 1; j < i; j++) --> Line_15 $$ buf.putShort(bbuf.getShort()) [CD]
Line_9 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 10) --> Line_15 $$ buf.putShort(bbuf.getShort()) [FD]
Line_11 $$ ByteBuffer bbuf = ByteBuffer.allocate(12) --> Line_15 $$ buf.putShort(bbuf.getShort()) [FD]
Line_10 $$ for (int j = 1; j < i; j++) --> Line_16 $$ bbuf.getShort() [CD]
Line_11 $$ ByteBuffer bbuf = ByteBuffer.allocate(12) --> Line_16 $$ bbuf.getShort() [FD]
Line_10 $$ for (int j = 1; j < i; j++) --> Line_17 $$ buf.putInt(bbuf.getInt()) [CD]
Line_9 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 10) --> Line_17 $$ buf.putInt(bbuf.getInt()) [FD]
Line_11 $$ ByteBuffer bbuf = ByteBuffer.allocate(12) --> Line_17 $$ buf.putInt(bbuf.getInt()) [FD]
Line_10 $$ for (int j = 1; j < i; j++) --> Line_18 $$ buf.putFloat(-bbuf.getFloat()) [CD]
Line_9 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 10) --> Line_18 $$ buf.putFloat(-bbuf.getFloat()) [FD]
Line_11 $$ ByteBuffer bbuf = ByteBuffer.allocate(12) --> Line_18 $$ buf.putFloat(-bbuf.getFloat()) [FD]
Line_6 $$ for (int i = 1; i <= 17770; i++) --> Line_20 $$ buf.putShort(new Integer(i).shortValue()) [CD]
Line_9 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 10) --> Line_20 $$ buf.putShort(new Integer(i).shortValue()) [FD]
Line_6 $$ for (int i = 1; i <= 17770; i++) --> Line_21 $$ buf.putInt(0) [CD]
Line_9 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 10) --> Line_21 $$ buf.putInt(0) [FD]
Line_6 $$ for (int i = 1; i <= 17770; i++) --> Line_22 $$ buf.putFloat(0.0f) [CD]
Line_9 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 10) --> Line_22 $$ buf.putFloat(0.0f) [FD]
Line_6 $$ for (int i = 1; i <= 17770; i++) --> Line_23 $$ ByteBuffer remainingBuf = inC.map(FileChannel.MapMode.READ_ONLY, (17769 * 17770 * 6) - ((17769 - (i - 1)) * (17770 - (i - 1)) * 6), (17770 - i) * 12) [CD]
Line_5 $$ FileChannel inC = new FileInputStream(inFile).getChannel() --> Line_23 $$ ByteBuffer remainingBuf = inC.map(FileChannel.MapMode.READ_ONLY, (17769 * 17770 * 6) - ((17769 - (i - 1)) * (17770 - (i - 1)) * 6), (17770 - i) * 12) [FD]
Line_6 $$ for (int i = 1; i <= 17770; i++) --> Line_24 $$ while (remainingBuf.hasRemaining()) [CD]
Line_24 $$ while (remainingBuf.hasRemaining()) --> Line_25 $$ remainingBuf.getShort() [CD]
Line_24 $$ while (remainingBuf.hasRemaining()) --> Line_26 $$ buf.putShort(remainingBuf.getShort()) [CD]
Line_9 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 10) --> Line_26 $$ buf.putShort(remainingBuf.getShort()) [FD]
Line_24 $$ while (remainingBuf.hasRemaining()) --> Line_27 $$ buf.putInt(remainingBuf.getInt()) [CD]
Line_9 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 10) --> Line_27 $$ buf.putInt(remainingBuf.getInt()) [FD]
Line_24 $$ while (remainingBuf.hasRemaining()) --> Line_28 $$ buf.putFloat(remainingBuf.getFloat()) [CD]
Line_9 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 10) --> Line_28 $$ buf.putFloat(remainingBuf.getFloat()) [FD]
Line_6 $$ for (int i = 1; i <= 17770; i++) --> Line_30 $$ buf.flip() [CD]
Line_9 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 10) --> Line_30 $$ buf.flip() [FD]
Line_6 $$ for (int i = 1; i <= 17770; i++) --> Line_31 $$ outC.write(buf) [CD]
Line_8 $$ FileChannel outC = new FileOutputStream(outFile).getChannel() --> Line_31 $$ outC.write(buf) [FD]
Line_9 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 10) --> Line_31 $$ outC.write(buf) [FD]
Line_6 $$ for (int i = 1; i <= 17770; i++) --> Line_32 $$ buf.clear() [CD]
Line_9 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 10) --> Line_32 $$ buf.clear() [FD]
Line_6 $$ for (int i = 1; i <= 17770; i++) --> Line_33 $$ outC.close() [CD]
Line_8 $$ FileChannel outC = new FileOutputStream(outFile).getChannel() --> Line_33 $$ outC.close() [FD]
