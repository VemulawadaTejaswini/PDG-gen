Line_2 $$ private List<Intrebare> citesteIntrebari() throws IOException --> Line_3 $$ ArrayList<Intrebare> intrebari = new ArrayList<Intrebare>() [CD]
Line_5 $$ URL url = new URL(getCodeBase(), "../intrebari.txt") --> Line_6 $$ BufferedReader reader = new BufferedReader(new InputStreamReader((url.openStream()))) [FD]
Line_7 $$ String intrebare --> Line_8 $$ while ((intrebare = reader.readLine()) != null) [FD]
Line_6 $$ BufferedReader reader = new BufferedReader(new InputStreamReader((url.openStream()))) --> Line_8 $$ while ((intrebare = reader.readLine()) != null) [FD]
Line_8 $$ while ((intrebare = reader.readLine()) != null) --> Line_9 $$ Collection<String> raspunsuri = new ArrayList<String>() [CD]
Line_8 $$ while ((intrebare = reader.readLine()) != null) --> Line_10 $$ Collection<String> predicate = new ArrayList<String>() [CD]
Line_8 $$ while ((intrebare = reader.readLine()) != null) --> Line_11 $$ String raspuns = "" [CD]
Line_8 $$ while ((intrebare = reader.readLine()) != null) --> Line_12 $$ while (!"".equals(raspuns = reader.readLine())) [CD]
Line_11 $$ String raspuns = "" --> Line_12 $$ while (!"".equals(raspuns = reader.readLine())) [FD]
Line_6 $$ BufferedReader reader = new BufferedReader(new InputStreamReader((url.openStream()))) --> Line_12 $$ while (!"".equals(raspuns = reader.readLine())) [FD]
Line_12 $$ while (!"".equals(raspuns = reader.readLine())) --> Line_13 $$ raspunsuri.add(raspuns) [CD]
Line_12 $$ while (!"".equals(raspuns = reader.readLine())) --> Line_13 $$ raspunsuri.add(raspuns) [FD]
Line_9 $$ Collection<String> raspunsuri = new ArrayList<String>() --> Line_13 $$ raspunsuri.add(raspuns) [FD]
Line_11 $$ String raspuns = "" --> Line_13 $$ raspunsuri.add(raspuns) [FD]
Line_12 $$ while (!"".equals(raspuns = reader.readLine())) --> Line_14 $$ predicate.add(reader.readLine()) [CD]
Line_10 $$ Collection<String> predicate = new ArrayList<String>() --> Line_14 $$ predicate.add(reader.readLine()) [FD]
Line_6 $$ BufferedReader reader = new BufferedReader(new InputStreamReader((url.openStream()))) --> Line_14 $$ predicate.add(reader.readLine()) [FD]
Line_9 $$ Collection<String> raspunsuri = new ArrayList<String>() --> Line_16 $$ Intrebare i = new Intrebare(intrebare, raspunsuri.toArray(new String[raspunsuri.size()]), predicate.toArray(new String[predicate.size()])) [FD]
Line_10 $$ Collection<String> predicate = new ArrayList<String>() --> Line_16 $$ Intrebare i = new Intrebare(intrebare, raspunsuri.toArray(new String[raspunsuri.size()]), predicate.toArray(new String[predicate.size()])) [FD]
Line_8 $$ while ((intrebare = reader.readLine()) != null) --> Line_17 $$ intrebari.add(i) [CD]
Line_3 $$ ArrayList<Intrebare> intrebari = new ArrayList<Intrebare>() --> Line_17 $$ intrebari.add(i) [FD]
Line_2 $$ private List<Intrebare> citesteIntrebari() throws IOException --> Line_22 $$ return intrebari [CD]
