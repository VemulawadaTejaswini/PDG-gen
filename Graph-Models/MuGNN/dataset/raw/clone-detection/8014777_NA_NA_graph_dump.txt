Line_2 $$ private static void downloadImages(String uriPrefix, String fileWithListOfImages, String outputDir) throws Exception --> Line_3 $$ Properties list = new Properties() [CD]
Line_2 $$ private static void downloadImages(String uriPrefix, String fileWithListOfImages, String outputDir) throws Exception --> Line_4 $$ list.load(new FileInputStream(fileWithListOfImages)) [CD]
Line_3 $$ Properties list = new Properties() --> Line_4 $$ list.load(new FileInputStream(fileWithListOfImages)) [FD]
Line_2 $$ private static void downloadImages(String uriPrefix, String fileWithListOfImages, String outputDir) throws Exception --> Line_5 $$ long current = 0 [CD]
Line_2 $$ private static void downloadImages(String uriPrefix, String fileWithListOfImages, String outputDir) throws Exception --> Line_6 $$ long startTime = System.currentTimeMillis() [CD]
Line_2 $$ private static void downloadImages(String uriPrefix, String fileWithListOfImages, String outputDir) throws Exception --> Line_7 $$ System.out.println("Downloading files from " + uriPrefix + " to " + outputDir) [CD]
Line_2 $$ private static void downloadImages(String uriPrefix, String fileWithListOfImages, String outputDir) throws Exception --> Line_8 $$ System.out.println("Total " + list.size() + " files, think of 1 sec per file") [CD]
Line_3 $$ Properties list = new Properties() --> Line_8 $$ System.out.println("Total " + list.size() + " files, think of 1 sec per file") [FD]
Line_2 $$ private static void downloadImages(String uriPrefix, String fileWithListOfImages, String outputDir) throws Exception --> Line_9 $$ System.out.println("Images with the same size as the 'no-image' image are ignored and not displayed") [CD]
Line_2 $$ private static void downloadImages(String uriPrefix, String fileWithListOfImages, String outputDir) throws Exception --> Line_10 $$ for (Iterator<Object> it = list.keySet().iterator(); it.hasNext(); ) [CD]
Line_3 $$ Properties list = new Properties() --> Line_10 $$ for (Iterator<Object> it = list.keySet().iterator(); it.hasNext(); ) [FD]
Line_10 $$ for (Iterator<Object> it = list.keySet().iterator(); it.hasNext(); ) --> Line_11 $$ String urlString = it.next().toString().replace('\\', '/') [CD]
Line_10 $$ for (Iterator<Object> it = list.keySet().iterator(); it.hasNext(); ) --> Line_11 $$ String urlString = it.next().toString().replace('\\', '/') [FD]
Line_10 $$ for (Iterator<Object> it = list.keySet().iterator(); it.hasNext(); ) --> Line_12 $$ if (urlString.contains("=")) [CD]
Line_11 $$ String urlString = it.next().toString().replace('\\', '/') --> Line_12 $$ if (urlString.contains("=")) [FD]
Line_2 $$ private static void downloadImages(String uriPrefix, String fileWithListOfImages, String outputDir) throws Exception --> Line_14 $$ for (Iterator<Object> it = list.keySet().iterator(); it.hasNext(); ) [CD]
Line_10 $$ for (Iterator<Object> it = list.keySet().iterator(); it.hasNext(); ) --> Line_14 $$ for (Iterator<Object> it = list.keySet().iterator(); it.hasNext(); ) [FD]
Line_3 $$ Properties list = new Properties() --> Line_14 $$ for (Iterator<Object> it = list.keySet().iterator(); it.hasNext(); ) [FD]
Line_14 $$ for (Iterator<Object> it = list.keySet().iterator(); it.hasNext(); ) --> Line_15 $$ String urlString = it.next().toString().replace('\\', '/') [CD]
Line_14 $$ for (Iterator<Object> it = list.keySet().iterator(); it.hasNext(); ) --> Line_15 $$ String urlString = it.next().toString().replace('\\', '/') [FD]
Line_10 $$ for (Iterator<Object> it = list.keySet().iterator(); it.hasNext(); ) --> Line_15 $$ String urlString = it.next().toString().replace('\\', '/') [FD]
Line_14 $$ for (Iterator<Object> it = list.keySet().iterator(); it.hasNext(); ) --> Line_16 $$ URL url = new URL(uriPrefix + urlString) [CD]
Line_14 $$ for (Iterator<Object> it = list.keySet().iterator(); it.hasNext(); ) --> Line_17 $$ File file = new File(outputDir + "/" + imageNameToFileName(urlString)) [CD]
Line_15 $$ String urlString = it.next().toString().replace('\\', '/') --> Line_17 $$ File file = new File(outputDir + "/" + imageNameToFileName(urlString)) [FD]
Line_11 $$ String urlString = it.next().toString().replace('\\', '/') --> Line_17 $$ File file = new File(outputDir + "/" + imageNameToFileName(urlString)) [FD]
Line_14 $$ for (Iterator<Object> it = list.keySet().iterator(); it.hasNext(); ) --> Line_18 $$ current++ [CD]
Line_5 $$ long current = 0 --> Line_18 $$ current++ [FD]
Line_14 $$ for (Iterator<Object> it = list.keySet().iterator(); it.hasNext(); ) --> Line_19 $$ if (!file.exists()) [CD]
Line_17 $$ File file = new File(outputDir + "/" + imageNameToFileName(urlString)) --> Line_19 $$ if (!file.exists()) [FD]
Line_16 $$ URL url = new URL(uriPrefix + urlString) --> Line_21 $$ BufferedInputStream in = new BufferedInputStream(url.openStream(), 64000) [FD]
Line_23 $$ int c --> Line_24 $$ while ((c = in.read()) != -1) [FD]
Line_21 $$ BufferedInputStream in = new BufferedInputStream(url.openStream(), 64000) --> Line_24 $$ while ((c = in.read()) != -1) [FD]
Line_24 $$ while ((c = in.read()) != -1) --> Line_25 $$ out.write(c) [CD]
Line_24 $$ while ((c = in.read()) != -1) --> Line_25 $$ out.write(c) [FD]
Line_22 $$ BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(file), 64000) --> Line_25 $$ out.write(c) [FD]
Line_23 $$ int c --> Line_25 $$ out.write(c) [FD]
Line_22 $$ BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(file), 64000) --> Line_27 $$ out.close() [FD]
Line_21 $$ BufferedInputStream in = new BufferedInputStream(url.openStream(), 64000) --> Line_28 $$ in.close() [FD]
Line_3 $$ Properties list = new Properties() --> Line_29 $$ System.out.print(current + " /" + list.size() + ". " + file.getName() + ", ") [FD]
Line_17 $$ File file = new File(outputDir + "/" + imageNameToFileName(urlString)) --> Line_29 $$ System.out.print(current + " /" + list.size() + ". " + file.getName() + ", ") [FD]
Line_3 $$ Properties list = new Properties() --> Line_32 $$ System.out.print(current + " /" + list.size() + ". " + file.getName() + ", FAILED, error: " + e.getMessage()) [FD]
Line_17 $$ File file = new File(outputDir + "/" + imageNameToFileName(urlString)) --> Line_32 $$ System.out.print(current + " /" + list.size() + ". " + file.getName() + ", FAILED, error: " + e.getMessage()) [FD]
Line_19 $$ if (!file.exists()) --> Line_35 $$ System.out.print(current + " /" + list.size() + ". " + file.getName() + ", ") [CD]
Line_3 $$ Properties list = new Properties() --> Line_35 $$ System.out.print(current + " /" + list.size() + ". " + file.getName() + ", ") [FD]
Line_17 $$ File file = new File(outputDir + "/" + imageNameToFileName(urlString)) --> Line_35 $$ System.out.print(current + " /" + list.size() + ". " + file.getName() + ", ") [FD]
Line_19 $$ if (!file.exists()) --> Line_36 $$ System.out.println("already exists") [CD]
Line_14 $$ for (Iterator<Object> it = list.keySet().iterator(); it.hasNext(); ) --> Line_38 $$ if (current / 100 == current / 100.0) [CD]
Line_38 $$ if (current / 100 == current / 100.0) --> Line_40 $$ System.out.println("Total time " + delta + " ms, " + (delta / current) + " ms/file") [CD]
Line_2 $$ private static void downloadImages(String uriPrefix, String fileWithListOfImages, String outputDir) throws Exception --> Line_43 $$ long delta = (System.currentTimeMillis() - startTime) [CD]
Line_2 $$ private static void downloadImages(String uriPrefix, String fileWithListOfImages, String outputDir) throws Exception --> Line_44 $$ System.out.println("Total time " + delta + " ms, " + (delta / list.size()) + " ms/file") [CD]
Line_3 $$ Properties list = new Properties() --> Line_44 $$ System.out.println("Total time " + delta + " ms, " + (delta / list.size()) + " ms/file") [FD]
