Line_2 $$ public void addFinance(int clubid, int quarterid, String date, String desc, String loc, BigDecimal amount) throws FinanceException, SQLException --> Line_3 $$ String budgetQuery = "SELECT used, available FROM Budget WHERE club_id=" + clubid + " and quarter_id=" + quarterid + ";" [CD]
Line_2 $$ public void addFinance(int clubid, int quarterid, String date, String desc, String loc, BigDecimal amount) throws FinanceException, SQLException --> Line_4 $$ String financeUpdate = "INSERT INTO Finance (`club_id`, `transaction_date`, `description`, `location`, `amount`) VALUES ('" + clubid + "', '" + date + "', '" + desc + "', '" + "', '" + loc + "', '" + amount + "');" [CD]
Line_2 $$ public void addFinance(int clubid, int quarterid, String date, String desc, String loc, BigDecimal amount) throws FinanceException, SQLException --> Line_5 $$ Budget b = new Budget() [CD]
Line_8 $$ Statement sm = cn.createStatement() --> Line_9 $$ ResultSet rs = sm.executeQuery(budgetQuery) [FD]
Line_3 $$ String budgetQuery = "SELECT used, available FROM Budget WHERE club_id=" + clubid + " and quarter_id=" + quarterid + ";" --> Line_9 $$ ResultSet rs = sm.executeQuery(budgetQuery) [FD]
Line_9 $$ ResultSet rs = sm.executeQuery(budgetQuery) --> Line_10 $$ if (rs.first()) [FD]
Line_10 $$ if (rs.first()) --> Line_11 $$ b.used = rs.getBigDecimal(1) [CD]
Line_9 $$ ResultSet rs = sm.executeQuery(budgetQuery) --> Line_11 $$ b.used = rs.getBigDecimal(1) [FD]
Line_10 $$ if (rs.first()) --> Line_12 $$ b.available = rs.getBigDecimal(2) [CD]
Line_9 $$ ResultSet rs = sm.executeQuery(budgetQuery) --> Line_12 $$ b.available = rs.getBigDecimal(2) [FD]
Line_2 $$ public void addFinance(int clubid, int quarterid, String date, String desc, String loc, BigDecimal amount) throws FinanceException, SQLException --> Line_16 $$ if (b.available.compareTo(amount.negate()) >= 0) [FD]
Line_16 $$ if (b.available.compareTo(amount.negate()) >= 0) --> Line_17 $$ if (amount.equals(new BigDecimal(0))) [CD]
Line_2 $$ public void addFinance(int clubid, int quarterid, String date, String desc, String loc, BigDecimal amount) throws FinanceException, SQLException --> Line_17 $$ if (amount.equals(new BigDecimal(0))) [FD]
Line_16 $$ if (b.available.compareTo(amount.negate()) >= 0) --> Line_19 $$ b.used = b.used.subtract(amount) [CD]
Line_2 $$ public void addFinance(int clubid, int quarterid, String date, String desc, String loc, BigDecimal amount) throws FinanceException, SQLException --> Line_19 $$ b.used = b.used.subtract(amount) [FD]
Line_16 $$ if (b.available.compareTo(amount.negate()) >= 0) --> Line_21 $$ b.available = b.available.add(amount) [CD]
Line_2 $$ public void addFinance(int clubid, int quarterid, String date, String desc, String loc, BigDecimal amount) throws FinanceException, SQLException --> Line_21 $$ b.available = b.available.add(amount) [FD]
Line_16 $$ if (b.available.compareTo(amount.negate()) >= 0) --> Line_22 $$ sm = cn.createStatement() [CD]
Line_8 $$ Statement sm = cn.createStatement() --> Line_22 $$ sm = cn.createStatement() [FD]
Line_16 $$ if (b.available.compareTo(amount.negate()) >= 0) --> Line_23 $$ sm.executeUpdate(financeUpdate) [CD]
Line_8 $$ Statement sm = cn.createStatement() --> Line_23 $$ sm.executeUpdate(financeUpdate) [FD]
Line_22 $$ sm = cn.createStatement() --> Line_23 $$ sm.executeUpdate(financeUpdate) [FD]
Line_4 $$ String financeUpdate = "INSERT INTO Finance (`club_id`, `transaction_date`, `description`, `location`, `amount`) VALUES ('" + clubid + "', '" + date + "', '" + desc + "', '" + "', '" + loc + "', '" + amount + "');" --> Line_23 $$ sm.executeUpdate(financeUpdate) [FD]
Line_16 $$ if (b.available.compareTo(amount.negate()) >= 0) --> Line_24 $$ sm = cn.createStatement() [CD]
Line_8 $$ Statement sm = cn.createStatement() --> Line_24 $$ sm = cn.createStatement() [FD]
Line_22 $$ sm = cn.createStatement() --> Line_24 $$ sm = cn.createStatement() [FD]
Line_16 $$ if (b.available.compareTo(amount.negate()) >= 0) --> Line_25 $$ sm.executeUpdate("Update Budget SET used = " + b.used + ", amount = " + b.available + " WHERE club_id=" + clubid + " and quarter_id=" + quarterid + ";") [CD]
Line_8 $$ Statement sm = cn.createStatement() --> Line_25 $$ sm.executeUpdate("Update Budget SET used = " + b.used + ", amount = " + b.available + " WHERE club_id=" + clubid + " and quarter_id=" + quarterid + ";") [FD]
Line_22 $$ sm = cn.createStatement() --> Line_25 $$ sm.executeUpdate("Update Budget SET used = " + b.used + ", amount = " + b.available + " WHERE club_id=" + clubid + " and quarter_id=" + quarterid + ";") [FD]
Line_24 $$ sm = cn.createStatement() --> Line_25 $$ sm.executeUpdate("Update Budget SET used = " + b.used + ", amount = " + b.available + " WHERE club_id=" + clubid + " and quarter_id=" + quarterid + ";") [FD]
Line_16 $$ if (b.available.compareTo(amount.negate()) >= 0) --> Line_26 $$ cn.commit() [CD]
