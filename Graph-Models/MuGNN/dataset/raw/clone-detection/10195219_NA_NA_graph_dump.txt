Line_2 $$ public void configureKerberos(boolean overwriteExistingSetup) throws Exception --> Line_3 $$ OutputStream keyTabOut = null [CD]
Line_2 $$ public void configureKerberos(boolean overwriteExistingSetup) throws Exception --> Line_4 $$ InputStream keyTabIn = null [CD]
Line_2 $$ public void configureKerberos(boolean overwriteExistingSetup) throws Exception --> Line_5 $$ OutputStream krb5ConfOut = null [CD]
Line_4 $$ InputStream keyTabIn = null --> Line_7 $$ keyTabIn = loadKeyTabResource(keyTabResource) [FD]
Line_2 $$ public void configureKerberos(boolean overwriteExistingSetup) throws Exception --> Line_9 $$ if (!file.exists() || overwriteExistingSetup) [FD]
Line_8 $$ File file = new File(keyTabRepository + keyTabResource) --> Line_9 $$ if (!file.exists() || overwriteExistingSetup) [FD]
Line_9 $$ if (!file.exists() || overwriteExistingSetup) --> Line_10 $$ keyTabOut = new FileOutputStream(file, false) [CD]
Line_3 $$ OutputStream keyTabOut = null --> Line_10 $$ keyTabOut = new FileOutputStream(file, false) [FD]
Line_9 $$ if (!file.exists() || overwriteExistingSetup) --> Line_11 $$ logger.debug("Installing keytab file to : " + file.getAbsolutePath()) [CD]
Line_8 $$ File file = new File(keyTabRepository + keyTabResource) --> Line_11 $$ logger.debug("Installing keytab file to : " + file.getAbsolutePath()) [FD]
Line_9 $$ if (!file.exists() || overwriteExistingSetup) --> Line_12 $$ IOUtils.copy(keyTabIn, keyTabOut) [CD]
Line_4 $$ InputStream keyTabIn = null --> Line_12 $$ IOUtils.copy(keyTabIn, keyTabOut) [FD]
Line_7 $$ keyTabIn = loadKeyTabResource(keyTabResource) --> Line_12 $$ IOUtils.copy(keyTabIn, keyTabOut) [FD]
Line_3 $$ OutputStream keyTabOut = null --> Line_12 $$ IOUtils.copy(keyTabIn, keyTabOut) [FD]
Line_10 $$ keyTabOut = new FileOutputStream(file, false) --> Line_12 $$ IOUtils.copy(keyTabIn, keyTabOut) [FD]
Line_14 $$ File krb5ConfFile = new File(System.getProperty("java.security.krb5.conf", defaultKrb5Config)) --> Line_15 $$ logger.debug("Using Kerberos config file : " + krb5ConfFile.getAbsolutePath()) [FD]
Line_14 $$ File krb5ConfFile = new File(System.getProperty("java.security.krb5.conf", defaultKrb5Config)) --> Line_16 $$ throw new Exception("Kerberos config file not found : " + krb5ConfFile.getAbsolutePath()) [FD]
Line_17 $$ FileInputStream fis = new FileInputStream(krb5ConfFile) --> Line_18 $$ Wini krb5Conf = new Wini(KerberosConfigUtil.toIni(fis)) [FD]
Line_18 $$ Wini krb5Conf = new Wini(KerberosConfigUtil.toIni(fis)) --> Line_19 $$ Ini.Section krb5Realms = krb5Conf.get("realms") [FD]
Line_19 $$ Ini.Section krb5Realms = krb5Conf.get("realms") --> Line_20 $$ String windowsDomainSetup = krb5Realms.get(kerberosRealm) [FD]
Line_2 $$ public void configureKerberos(boolean overwriteExistingSetup) throws Exception --> Line_21 $$ if (kerberosRealm == null || overwriteExistingSetup) [FD]
Line_21 $$ if (kerberosRealm == null || overwriteExistingSetup) --> Line_22 $$ windowsDomainSetup = " [CD]
Line_20 $$ String windowsDomainSetup = krb5Realms.get(kerberosRealm) --> Line_22 $$ windowsDomainSetup = " [FD]
Line_21 $$ if (kerberosRealm == null || overwriteExistingSetup) --> Line_23 $$ krb5Realms.put(kerberosRealm, windowsDomainSetup) [CD]
Line_19 $$ Ini.Section krb5Realms = krb5Conf.get("realms") --> Line_23 $$ krb5Realms.put(kerberosRealm, windowsDomainSetup) [FD]
Line_20 $$ String windowsDomainSetup = krb5Realms.get(kerberosRealm) --> Line_23 $$ krb5Realms.put(kerberosRealm, windowsDomainSetup) [FD]
Line_22 $$ windowsDomainSetup = " --> Line_23 $$ krb5Realms.put(kerberosRealm, windowsDomainSetup) [FD]
Line_18 $$ Wini krb5Conf = new Wini(KerberosConfigUtil.toIni(fis)) --> Line_25 $$ Ini.Section krb5DomainRealms = krb5Conf.get("domain_realm") [FD]
Line_25 $$ Ini.Section krb5DomainRealms = krb5Conf.get("domain_realm") --> Line_26 $$ String domainRealmSetup = krb5DomainRealms.get(kerberosRealm.toLowerCase()) [FD]
Line_2 $$ public void configureKerberos(boolean overwriteExistingSetup) throws Exception --> Line_27 $$ if (domainRealmSetup == null || overwriteExistingSetup) [FD]
Line_27 $$ if (domainRealmSetup == null || overwriteExistingSetup) --> Line_28 $$ krb5DomainRealms.put(kerberosRealm.toLowerCase(), kerberosRealm) [CD]
Line_25 $$ Ini.Section krb5DomainRealms = krb5Conf.get("domain_realm") --> Line_28 $$ krb5DomainRealms.put(kerberosRealm.toLowerCase(), kerberosRealm) [FD]
Line_27 $$ if (domainRealmSetup == null || overwriteExistingSetup) --> Line_29 $$ krb5DomainRealms.put("." + kerberosRealm.toLowerCase(), kerberosRealm) [CD]
Line_25 $$ Ini.Section krb5DomainRealms = krb5Conf.get("domain_realm") --> Line_29 $$ krb5DomainRealms.put("." + kerberosRealm.toLowerCase(), kerberosRealm) [FD]
Line_18 $$ Wini krb5Conf = new Wini(KerberosConfigUtil.toIni(fis)) --> Line_32 $$ krb5Conf.store(baos) [FD]
Line_31 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() --> Line_32 $$ krb5Conf.store(baos) [FD]
Line_31 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() --> Line_33 $$ InputStream bios = new ByteArrayInputStream(baos.toByteArray()) [FD]
Line_33 $$ InputStream bios = new ByteArrayInputStream(baos.toByteArray()) --> Line_34 $$ bios = KerberosConfigUtil.toKrb5(bios) [FD]
Line_5 $$ OutputStream krb5ConfOut = null --> Line_35 $$ krb5ConfOut = new FileOutputStream(krb5ConfFile, false) [FD]
Line_33 $$ InputStream bios = new ByteArrayInputStream(baos.toByteArray()) --> Line_36 $$ IOUtils.copy(bios, krb5ConfOut) [FD]
Line_34 $$ bios = KerberosConfigUtil.toKrb5(bios) --> Line_36 $$ IOUtils.copy(bios, krb5ConfOut) [FD]
Line_5 $$ OutputStream krb5ConfOut = null --> Line_36 $$ IOUtils.copy(bios, krb5ConfOut) [FD]
Line_35 $$ krb5ConfOut = new FileOutputStream(krb5ConfFile, false) --> Line_36 $$ IOUtils.copy(bios, krb5ConfOut) [FD]
Line_3 $$ OutputStream keyTabOut = null --> Line_41 $$ IOUtils.closeQuietly(keyTabOut) [FD]
Line_10 $$ keyTabOut = new FileOutputStream(file, false) --> Line_41 $$ IOUtils.closeQuietly(keyTabOut) [FD]
Line_4 $$ InputStream keyTabIn = null --> Line_42 $$ IOUtils.closeQuietly(keyTabIn) [FD]
Line_7 $$ keyTabIn = loadKeyTabResource(keyTabResource) --> Line_42 $$ IOUtils.closeQuietly(keyTabIn) [FD]
Line_5 $$ OutputStream krb5ConfOut = null --> Line_43 $$ IOUtils.closeQuietly(krb5ConfOut) [FD]
Line_35 $$ krb5ConfOut = new FileOutputStream(krb5ConfFile, false) --> Line_43 $$ IOUtils.closeQuietly(krb5ConfOut) [FD]
