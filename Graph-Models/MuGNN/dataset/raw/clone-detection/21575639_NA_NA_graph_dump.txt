Line_2 $$ protected byte[] readGZippedBytes(TupleInput in) --> Line_3 $$ final boolean is_compressed = in.readBoolean() [CD]
Line_2 $$ protected byte[] readGZippedBytes(TupleInput in) --> Line_3 $$ final boolean is_compressed = in.readBoolean() [FD]
Line_2 $$ protected byte[] readGZippedBytes(TupleInput in) --> Line_4 $$ byte array[] = readBytes(in) [CD]
Line_2 $$ protected byte[] readGZippedBytes(TupleInput in) --> Line_4 $$ byte array[] = readBytes(in) [FD]
Line_2 $$ protected byte[] readGZippedBytes(TupleInput in) --> Line_5 $$ if (array == null) [CD]
Line_2 $$ protected byte[] readGZippedBytes(TupleInput in) --> Line_6 $$ if (!is_compressed) [CD]
Line_3 $$ final boolean is_compressed = in.readBoolean() --> Line_6 $$ if (!is_compressed) [FD]
Line_6 $$ if (!is_compressed) --> Line_7 $$ return array [CD]
Line_11 $$ GZIPInputStream gzin = new GZIPInputStream(bais) --> Line_13 $$ IOUtils.copyTo(gzin, baos) [FD]
Line_12 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream(array.length) --> Line_13 $$ IOUtils.copyTo(gzin, baos) [FD]
Line_11 $$ GZIPInputStream gzin = new GZIPInputStream(bais) --> Line_14 $$ gzin.close() [FD]
Line_10 $$ ByteArrayInputStream bais = new ByteArrayInputStream(array) --> Line_15 $$ bais.close() [FD]
Line_12 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream(array.length) --> Line_16 $$ return baos.toByteArray() [FD]
