Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_3 $$ String email = pRequest.getParameter("email") [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_3 $$ String email = pRequest.getParameter("email") [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_4 $$ MessageDigest md [CD]
Line_4 $$ MessageDigest md --> Line_6 $$ md = MessageDigest.getInstance("SHA") [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_10 $$ md.update(pRequest.getParameter("password").getBytes()) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_10 $$ md.update(pRequest.getParameter("password").getBytes()) [FD]
Line_4 $$ MessageDigest md --> Line_10 $$ md.update(pRequest.getParameter("password").getBytes()) [FD]
Line_6 $$ md = MessageDigest.getInstance("SHA") --> Line_10 $$ md.update(pRequest.getParameter("password").getBytes()) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_11 $$ String password = (new BASE64Encoder()).encode(md.digest()) [CD]
Line_4 $$ MessageDigest md --> Line_11 $$ String password = (new BASE64Encoder()).encode(md.digest()) [FD]
Line_6 $$ md = MessageDigest.getInstance("SHA") --> Line_11 $$ String password = (new BASE64Encoder()).encode(md.digest()) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_12 $$ String remember = pRequest.getParameter("rememberLogin") [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_12 $$ String remember = pRequest.getParameter("rememberLogin") [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_13 $$ User user = database.acquireUserByEmail(email) [CD]
Line_3 $$ String email = pRequest.getParameter("email") --> Line_13 $$ User user = database.acquireUserByEmail(email) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_14 $$ if (user == null || user.equals(User.anonymous()) || !user.getActive()) [CD]
Line_13 $$ User user = database.acquireUserByEmail(email) --> Line_14 $$ if (user == null || user.equals(User.anonymous()) || !user.getActive()) [FD]
Line_14 $$ if (user == null || user.equals(User.anonymous()) || !user.getActive()) --> Line_15 $$ return pMapping.findForward("invalid") [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_15 $$ return pMapping.findForward("invalid") [FD]
Line_14 $$ if (user == null || user.equals(User.anonymous()) || !user.getActive()) --> Line_16 $$ if (user.getPassword().equals(password)) [CD]
Line_11 $$ String password = (new BASE64Encoder()).encode(md.digest()) --> Line_16 $$ if (user.getPassword().equals(password)) [FD]
Line_13 $$ User user = database.acquireUserByEmail(email) --> Line_16 $$ if (user.getPassword().equals(password)) [FD]
Line_16 $$ if (user.getPassword().equals(password)) --> Line_17 $$ pRequest.getSession().setAttribute("login", user) [CD]
Line_13 $$ User user = database.acquireUserByEmail(email) --> Line_17 $$ pRequest.getSession().setAttribute("login", user) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_17 $$ pRequest.getSession().setAttribute("login", user) [FD]
Line_16 $$ if (user.getPassword().equals(password)) --> Line_18 $$ if (remember != null) [CD]
Line_12 $$ String remember = pRequest.getParameter("rememberLogin") --> Line_18 $$ if (remember != null) [FD]
Line_18 $$ if (remember != null) --> Line_19 $$ Cookie usercookie = new Cookie("bib.username", email) [CD]
Line_18 $$ if (remember != null) --> Line_20 $$ Cookie passcookie = new Cookie("bib.password", password.toString()) [CD]
Line_11 $$ String password = (new BASE64Encoder()).encode(md.digest()) --> Line_20 $$ Cookie passcookie = new Cookie("bib.password", password.toString()) [FD]
Line_18 $$ if (remember != null) --> Line_21 $$ usercookie.setPath("/") [CD]
Line_19 $$ Cookie usercookie = new Cookie("bib.username", email) --> Line_21 $$ usercookie.setPath("/") [FD]
Line_18 $$ if (remember != null) --> Line_22 $$ passcookie.setPath("/") [CD]
Line_20 $$ Cookie passcookie = new Cookie("bib.password", password.toString()) --> Line_22 $$ passcookie.setPath("/") [FD]
Line_18 $$ if (remember != null) --> Line_23 $$ usercookie.setMaxAge(60 * 60 * 24 * 365) [CD]
Line_19 $$ Cookie usercookie = new Cookie("bib.username", email) --> Line_23 $$ usercookie.setMaxAge(60 * 60 * 24 * 365) [FD]
Line_18 $$ if (remember != null) --> Line_24 $$ passcookie.setMaxAge(60 * 60 * 24 * 365) [CD]
Line_20 $$ Cookie passcookie = new Cookie("bib.password", password.toString()) --> Line_24 $$ passcookie.setMaxAge(60 * 60 * 24 * 365) [FD]
Line_18 $$ if (remember != null) --> Line_25 $$ pResponse.addCookie(usercookie) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_25 $$ pResponse.addCookie(usercookie) [FD]
Line_19 $$ Cookie usercookie = new Cookie("bib.username", email) --> Line_25 $$ pResponse.addCookie(usercookie) [FD]
Line_18 $$ if (remember != null) --> Line_26 $$ pResponse.addCookie(passcookie) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_26 $$ pResponse.addCookie(passcookie) [FD]
Line_20 $$ Cookie passcookie = new Cookie("bib.password", password.toString()) --> Line_26 $$ pResponse.addCookie(passcookie) [FD]
Line_16 $$ if (user.getPassword().equals(password)) --> Line_28 $$ return pMapping.findForward("success") [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_28 $$ return pMapping.findForward("success") [FD]
Line_16 $$ if (user.getPassword().equals(password)) --> Line_30 $$ return pMapping.findForward("invalid") [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_30 $$ return pMapping.findForward("invalid") [FD]
