Line_2 $$ private void updateDataSetSelected(URL url) --> Line_3 $$ InputStream in = null [CD]
Line_3 $$ InputStream in = null --> Line_5 $$ in = url.openStream() [FD]
Line_2 $$ private void updateDataSetSelected(URL url) --> Line_5 $$ in = url.openStream() [FD]
Line_3 $$ InputStream in = null --> Line_7 $$ int by = in.read() [FD]
Line_5 $$ in = url.openStream() --> Line_7 $$ int by = in.read() [FD]
Line_7 $$ int by = in.read() --> Line_8 $$ while (by != -1) [FD]
Line_8 $$ while (by != -1) --> Line_9 $$ sb.append((char) by) [CD]
Line_6 $$ StringBuilder sb = new StringBuilder() --> Line_9 $$ sb.append((char) by) [FD]
Line_8 $$ while (by != -1) --> Line_10 $$ by = in.read() [CD]
Line_7 $$ int by = in.read() --> Line_10 $$ by = in.read() [FD]
Line_3 $$ InputStream in = null --> Line_10 $$ by = in.read() [FD]
Line_5 $$ in = url.openStream() --> Line_10 $$ by = in.read() [FD]
Line_3 $$ InputStream in = null --> Line_12 $$ in.close() [FD]
Line_5 $$ in = url.openStream() --> Line_12 $$ in.close() [FD]
Line_6 $$ StringBuilder sb = new StringBuilder() --> Line_13 $$ String s = sb.toString() [FD]
Line_13 $$ String s = sb.toString() --> Line_15 $$ int contentLength = Integer.parseInt(s.substring(4, packetTagLength)) [FD]
Line_14 $$ final int packetTagLength = 10 --> Line_15 $$ int contentLength = Integer.parseInt(s.substring(4, packetTagLength)) [FD]
Line_13 $$ String s = sb.toString() --> Line_16 $$ String sxml = s.substring(packetTagLength, packetTagLength + contentLength) [FD]
Line_14 $$ final int packetTagLength = 10 --> Line_16 $$ String sxml = s.substring(packetTagLength, packetTagLength + contentLength) [FD]
Line_18 $$ DocumentBuilder builder --> Line_19 $$ builder = DocumentBuilderFactory.newInstance().newDocumentBuilder() [FD]
Line_18 $$ DocumentBuilder builder --> Line_21 $$ final Document document = builder.parse(source) [FD]
Line_19 $$ builder = DocumentBuilderFactory.newInstance().newDocumentBuilder() --> Line_21 $$ final Document document = builder.parse(source) [FD]
Line_20 $$ InputSource source = new InputSource(xin) --> Line_21 $$ final Document document = builder.parse(source) [FD]
Line_25 $$ XPathFactory factory = XPathFactory.newInstance() --> Line_26 $$ XPath xpath = (XPath) factory.newXPath() [FD]
Line_26 $$ XPath xpath = (XPath) factory.newXPath() --> Line_28 $$ Node description = (Node) xpath.evaluate("/stream/properties/@description", document, XPathConstants.NODE) [FD]
Line_21 $$ final Document document = builder.parse(source) --> Line_28 $$ Node description = (Node) xpath.evaluate("/stream/properties/@description", document, XPathConstants.NODE) [FD]
Line_28 $$ Node description = (Node) xpath.evaluate("/stream/properties/@description", document, XPathConstants.NODE) --> Line_29 $$ descriptionLabel.setText(description == null ? "" : description.getNodeValue()) [FD]
Line_26 $$ XPath xpath = (XPath) factory.newXPath() --> Line_30 $$ Node exampleRange = (Node) xpath.evaluate("/stream/properties/@exampleRange", document, XPathConstants.NODE) [FD]
Line_21 $$ final Document document = builder.parse(source) --> Line_30 $$ Node exampleRange = (Node) xpath.evaluate("/stream/properties/@exampleRange", document, XPathConstants.NODE) [FD]
Line_27 $$ String curr = Das2ServerDataSourceEditorPanel.this.timeRangeTextField.getText() --> Line_31 $$ if (exampleRange != null && curr.equals(DEFAULT_TIMERANGE)) [FD]
Line_31 $$ if (exampleRange != null && curr.equals(DEFAULT_TIMERANGE)) --> Line_32 $$ Das2ServerDataSourceEditorPanel.this.timeRangeTextField.setText(exampleRange.getNodeValue()) [CD]
Line_30 $$ Node exampleRange = (Node) xpath.evaluate("/stream/properties/@exampleRange", document, XPathConstants.NODE) --> Line_32 $$ Das2ServerDataSourceEditorPanel.this.timeRangeTextField.setText(exampleRange.getNodeValue()) [FD]
Line_30 $$ Node exampleRange = (Node) xpath.evaluate("/stream/properties/@exampleRange", document, XPathConstants.NODE) --> Line_34 $$ if (exampleRange != null) [FD]
Line_34 $$ if (exampleRange != null) --> Line_35 $$ DefaultComboBoxModel model = new DefaultComboBoxModel(new String[] [CD]
Line_30 $$ Node exampleRange = (Node) xpath.evaluate("/stream/properties/@exampleRange", document, XPathConstants.NODE) --> Line_35 $$ DefaultComboBoxModel model = new DefaultComboBoxModel(new String[] [FD]
Line_34 $$ if (exampleRange != null) --> Line_36 $$ Das2ServerDataSourceEditorPanel.this.examplesComboBox.setModel(model) [CD]
Line_35 $$ DefaultComboBoxModel model = new DefaultComboBoxModel(new String[] --> Line_36 $$ Das2ServerDataSourceEditorPanel.this.examplesComboBox.setModel(model) [FD]
Line_34 $$ if (exampleRange != null) --> Line_37 $$ Das2ServerDataSourceEditorPanel.this.examplesComboBox.setEnabled(true) [CD]
Line_34 $$ if (exampleRange != null) --> Line_40 $$ Das2ServerDataSourceEditorPanel.this.examplesComboBox.setModel(model) [CD]
Line_35 $$ DefaultComboBoxModel model = new DefaultComboBoxModel(new String[] --> Line_40 $$ Das2ServerDataSourceEditorPanel.this.examplesComboBox.setModel(model) [FD]
Line_34 $$ if (exampleRange != null) --> Line_41 $$ Das2ServerDataSourceEditorPanel.this.examplesComboBox.setEnabled(false) [CD]
Line_30 $$ Node exampleRange = (Node) xpath.evaluate("/stream/properties/@exampleRange", document, XPathConstants.NODE) --> Line_43 $$ if (exampleRange == null) [FD]
Line_43 $$ if (exampleRange == null) --> Line_44 $$ exampleRange = (Node) xpath.evaluate("/stream/properties/@x_range", document, XPathConstants.NODE) [CD]
Line_30 $$ Node exampleRange = (Node) xpath.evaluate("/stream/properties/@exampleRange", document, XPathConstants.NODE) --> Line_44 $$ exampleRange = (Node) xpath.evaluate("/stream/properties/@x_range", document, XPathConstants.NODE) [FD]
Line_26 $$ XPath xpath = (XPath) factory.newXPath() --> Line_44 $$ exampleRange = (Node) xpath.evaluate("/stream/properties/@x_range", document, XPathConstants.NODE) [FD]
Line_21 $$ final Document document = builder.parse(source) --> Line_44 $$ exampleRange = (Node) xpath.evaluate("/stream/properties/@x_range", document, XPathConstants.NODE) [FD]
Line_43 $$ if (exampleRange == null) --> Line_45 $$ if (exampleRange != null && curr.equals(DEFAULT_TIMERANGE)) [CD]
Line_27 $$ String curr = Das2ServerDataSourceEditorPanel.this.timeRangeTextField.getText() --> Line_45 $$ if (exampleRange != null && curr.equals(DEFAULT_TIMERANGE)) [FD]
Line_45 $$ if (exampleRange != null && curr.equals(DEFAULT_TIMERANGE)) --> Line_46 $$ Das2ServerDataSourceEditorPanel.this.timeRangeTextField.setText(exampleRange.getNodeValue()) [CD]
Line_30 $$ Node exampleRange = (Node) xpath.evaluate("/stream/properties/@exampleRange", document, XPathConstants.NODE) --> Line_46 $$ Das2ServerDataSourceEditorPanel.this.timeRangeTextField.setText(exampleRange.getNodeValue()) [FD]
Line_44 $$ exampleRange = (Node) xpath.evaluate("/stream/properties/@x_range", document, XPathConstants.NODE) --> Line_46 $$ Das2ServerDataSourceEditorPanel.this.timeRangeTextField.setText(exampleRange.getNodeValue()) [FD]
Line_26 $$ XPath xpath = (XPath) factory.newXPath() --> Line_49 $$ Node validRange = (Node) xpath.evaluate("/stream/properties/@validRange", document, XPathConstants.NODE) [FD]
Line_21 $$ final Document document = builder.parse(source) --> Line_49 $$ Node validRange = (Node) xpath.evaluate("/stream/properties/@validRange", document, XPathConstants.NODE) [FD]
Line_49 $$ Node validRange = (Node) xpath.evaluate("/stream/properties/@validRange", document, XPathConstants.NODE) --> Line_50 $$ if (validRange != null) [FD]
Line_50 $$ if (validRange != null) --> Line_51 $$ Das2ServerDataSourceEditorPanel.this.validRangeLabel.setText("valid range: " + validRange.getNodeValue()) [CD]
Line_49 $$ Node validRange = (Node) xpath.evaluate("/stream/properties/@validRange", document, XPathConstants.NODE) --> Line_51 $$ Das2ServerDataSourceEditorPanel.this.validRangeLabel.setText("valid range: " + validRange.getNodeValue()) [FD]
Line_50 $$ if (validRange != null) --> Line_53 $$ Das2ServerDataSourceEditorPanel.this.validRangeLabel.setText("<html><em>no valid range for dataset provided</em></html>") [CD]
Line_22 $$ Runnable run = new Runnable() --> Line_60 $$ SwingUtilities.invokeLater(run) [FD]
Line_3 $$ InputStream in = null --> Line_75 $$ if (in != null) [FD]
Line_5 $$ in = url.openStream() --> Line_75 $$ if (in != null) [FD]
Line_10 $$ by = in.read() --> Line_8 $$ while (by != -1) [FD]
