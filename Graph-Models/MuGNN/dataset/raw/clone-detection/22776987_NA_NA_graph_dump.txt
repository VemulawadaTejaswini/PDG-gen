Line_5 $$ if (saltPhrase != null) --> Line_6 $$ digest.update(saltPhrase.getBytes(charset)) [CD]
Line_4 $$ MessageDigest digest = MessageDigest.getInstance(digestAlgorithm) --> Line_6 $$ digest.update(saltPhrase.getBytes(charset)) [FD]
Line_5 $$ if (saltPhrase != null) --> Line_7 $$ byte[] salt = digest.digest() [CD]
Line_4 $$ MessageDigest digest = MessageDigest.getInstance(digestAlgorithm) --> Line_7 $$ byte[] salt = digest.digest() [FD]
Line_5 $$ if (saltPhrase != null) --> Line_8 $$ digest.reset() [CD]
Line_4 $$ MessageDigest digest = MessageDigest.getInstance(digestAlgorithm) --> Line_8 $$ digest.reset() [FD]
Line_5 $$ if (saltPhrase != null) --> Line_9 $$ digest.update(plainTextPassword.getBytes(charset)) [CD]
Line_4 $$ MessageDigest digest = MessageDigest.getInstance(digestAlgorithm) --> Line_9 $$ digest.update(plainTextPassword.getBytes(charset)) [FD]
Line_2 $$ public String hash(String plainTextPassword) --> Line_9 $$ digest.update(plainTextPassword.getBytes(charset)) [FD]
Line_5 $$ if (saltPhrase != null) --> Line_10 $$ digest.update(salt) [CD]
Line_4 $$ MessageDigest digest = MessageDigest.getInstance(digestAlgorithm) --> Line_10 $$ digest.update(salt) [FD]
Line_7 $$ byte[] salt = digest.digest() --> Line_10 $$ digest.update(salt) [FD]
Line_5 $$ if (saltPhrase != null) --> Line_12 $$ digest.update(plainTextPassword.getBytes(charset)) [CD]
Line_4 $$ MessageDigest digest = MessageDigest.getInstance(digestAlgorithm) --> Line_12 $$ digest.update(plainTextPassword.getBytes(charset)) [FD]
Line_2 $$ public String hash(String plainTextPassword) --> Line_12 $$ digest.update(plainTextPassword.getBytes(charset)) [FD]
Line_4 $$ MessageDigest digest = MessageDigest.getInstance(digestAlgorithm) --> Line_14 $$ byte[] rawHash = digest.digest() [FD]
Line_15 $$ if (encoding != null && encoding.equals(Encoding.base64)) --> Line_16 $$ return Base64.encodeBytes(rawHash) [CD]
Line_14 $$ byte[] rawHash = digest.digest() --> Line_16 $$ return Base64.encodeBytes(rawHash) [FD]
Line_15 $$ if (encoding != null && encoding.equals(Encoding.base64)) --> Line_18 $$ return new String(Hex.encodeHex(rawHash)) [CD]
Line_14 $$ byte[] rawHash = digest.digest() --> Line_18 $$ return new String(Hex.encodeHex(rawHash)) [FD]
