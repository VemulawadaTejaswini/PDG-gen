Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_3 $$ HttpRequestBase proxyReq = buildProxyRequest(req) [CD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_3 $$ HttpRequestBase proxyReq = buildProxyRequest(req) [FD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_4 $$ URI reqUri = proxyReq.getURI() [CD]
Line_3 $$ HttpRequestBase proxyReq = buildProxyRequest(req) --> Line_4 $$ URI reqUri = proxyReq.getURI() [FD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_5 $$ String cookieDomain = reqUri.getHost() [CD]
Line_4 $$ URI reqUri = proxyReq.getURI() --> Line_5 $$ String cookieDomain = reqUri.getHost() [FD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_6 $$ DefaultHttpClient httpClient = new DefaultHttpClient() [CD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_7 $$ HttpContext httpContext = new BasicHttpContext() [CD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_8 $$ httpContext.setAttribute("org.atricorel.idbus.kernel.main.binding.http.HttpServletRequest", req) [CD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_8 $$ httpContext.setAttribute("org.atricorel.idbus.kernel.main.binding.http.HttpServletRequest", req) [FD]
Line_7 $$ HttpContext httpContext = new BasicHttpContext() --> Line_8 $$ httpContext.setAttribute("org.atricorel.idbus.kernel.main.binding.http.HttpServletRequest", req) [FD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_9 $$ int intIdx = 0 [CD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_10 $$ for (int i = 0; i < httpClient.getRequestInterceptorCount(); i++) [CD]
Line_6 $$ DefaultHttpClient httpClient = new DefaultHttpClient() --> Line_10 $$ for (int i = 0; i < httpClient.getRequestInterceptorCount(); i++) [FD]
Line_10 $$ for (int i = 0; i < httpClient.getRequestInterceptorCount(); i++) --> Line_11 $$ if (httpClient.getRequestInterceptor(i) instanceof RequestAddCookies) [CD]
Line_10 $$ for (int i = 0; i < httpClient.getRequestInterceptorCount(); i++) --> Line_11 $$ if (httpClient.getRequestInterceptor(i) instanceof RequestAddCookies) [FD]
Line_6 $$ DefaultHttpClient httpClient = new DefaultHttpClient() --> Line_11 $$ if (httpClient.getRequestInterceptor(i) instanceof RequestAddCookies) [FD]
Line_11 $$ if (httpClient.getRequestInterceptor(i) instanceof RequestAddCookies) --> Line_12 $$ intIdx = i [CD]
Line_9 $$ int intIdx = 0 --> Line_12 $$ intIdx = i [FD]
Line_10 $$ for (int i = 0; i < httpClient.getRequestInterceptorCount(); i++) --> Line_12 $$ intIdx = i [FD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_16 $$ IDBusRequestAddCookies interceptor = new IDBusRequestAddCookies(cookieDomain) [CD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_17 $$ httpClient.removeRequestInterceptorByClass(RequestAddCookies.class) [CD]
Line_6 $$ DefaultHttpClient httpClient = new DefaultHttpClient() --> Line_17 $$ httpClient.removeRequestInterceptorByClass(RequestAddCookies.class) [FD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_18 $$ httpClient.addRequestInterceptor(interceptor, intIdx) [CD]
Line_6 $$ DefaultHttpClient httpClient = new DefaultHttpClient() --> Line_18 $$ httpClient.addRequestInterceptor(interceptor, intIdx) [FD]
Line_16 $$ IDBusRequestAddCookies interceptor = new IDBusRequestAddCookies(cookieDomain) --> Line_18 $$ httpClient.addRequestInterceptor(interceptor, intIdx) [FD]
Line_12 $$ intIdx = i --> Line_18 $$ httpClient.addRequestInterceptor(interceptor, intIdx) [FD]
Line_9 $$ int intIdx = 0 --> Line_18 $$ httpClient.addRequestInterceptor(interceptor, intIdx) [FD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_19 $$ httpClient.getParams().setParameter(ClientPNames.HANDLE_REDIRECTS, false) [CD]
Line_6 $$ DefaultHttpClient httpClient = new DefaultHttpClient() --> Line_19 $$ httpClient.getParams().setParameter(ClientPNames.HANDLE_REDIRECTS, false) [FD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_20 $$ httpClient.getParams().setParameter(ClientPNames.COOKIE_POLICY, CookiePolicy.BROWSER_COMPATIBILITY) [CD]
Line_6 $$ DefaultHttpClient httpClient = new DefaultHttpClient() --> Line_20 $$ httpClient.getParams().setParameter(ClientPNames.COOKIE_POLICY, CookiePolicy.BROWSER_COMPATIBILITY) [FD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_21 $$ logger.trace("Staring to follow redirects for " + req.getPathInfo()) [CD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_21 $$ logger.trace("Staring to follow redirects for " + req.getPathInfo()) [FD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_22 $$ HttpResponse proxyRes = null [CD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_23 $$ List<Header> storedHeaders = new ArrayList<Header>(40) [CD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_24 $$ boolean followTargetUrl = true [CD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_25 $$ byte[] buff = new byte[1024] [CD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_26 $$ while (followTargetUrl) [CD]
Line_26 $$ while (followTargetUrl) --> Line_27 $$ logger.trace("Sending internal request " + proxyReq) [CD]
Line_26 $$ while (followTargetUrl) --> Line_28 $$ proxyRes = httpClient.execute(proxyReq, httpContext) [CD]
Line_22 $$ HttpResponse proxyRes = null --> Line_28 $$ proxyRes = httpClient.execute(proxyReq, httpContext) [FD]
Line_6 $$ DefaultHttpClient httpClient = new DefaultHttpClient() --> Line_28 $$ proxyRes = httpClient.execute(proxyReq, httpContext) [FD]
Line_3 $$ HttpRequestBase proxyReq = buildProxyRequest(req) --> Line_28 $$ proxyRes = httpClient.execute(proxyReq, httpContext) [FD]
Line_7 $$ HttpContext httpContext = new BasicHttpContext() --> Line_28 $$ proxyRes = httpClient.execute(proxyReq, httpContext) [FD]
Line_26 $$ while (followTargetUrl) --> Line_29 $$ String targetUrl = null [CD]
Line_26 $$ while (followTargetUrl) --> Line_30 $$ Header[] headers = proxyRes.getAllHeaders() [CD]
Line_28 $$ proxyRes = httpClient.execute(proxyReq, httpContext) --> Line_30 $$ Header[] headers = proxyRes.getAllHeaders() [FD]
Line_22 $$ HttpResponse proxyRes = null --> Line_30 $$ Header[] headers = proxyRes.getAllHeaders() [FD]
Line_31 $$ for (Header header : headers) --> Line_32 $$ if (header.getName().equals("Server")) [FD]
Line_31 $$ for (Header header : headers) --> Line_33 $$ if (header.getName().equals("Transfer-Encoding")) [FD]
Line_31 $$ for (Header header : headers) --> Line_34 $$ if (header.getName().equals("Location")) [FD]
Line_31 $$ for (Header header : headers) --> Line_35 $$ if (header.getName().equals("Expires")) [FD]
Line_31 $$ for (Header header : headers) --> Line_36 $$ if (header.getName().equals("Content-Length")) [FD]
Line_31 $$ for (Header header : headers) --> Line_37 $$ if (header.getName().equals("Content-Type")) [FD]
Line_23 $$ List<Header> storedHeaders = new ArrayList<Header>(40) --> Line_38 $$ storedHeaders.add(header) [FD]
Line_31 $$ for (Header header : headers) --> Line_38 $$ storedHeaders.add(header) [FD]
Line_26 $$ while (followTargetUrl) --> Line_40 $$ logger.trace("HTTP/STATUS:" + proxyRes.getStatusLine().getStatusCode() + "[" + proxyReq + "]") [CD]
Line_28 $$ proxyRes = httpClient.execute(proxyReq, httpContext) --> Line_40 $$ logger.trace("HTTP/STATUS:" + proxyRes.getStatusLine().getStatusCode() + "[" + proxyReq + "]") [FD]
Line_22 $$ HttpResponse proxyRes = null --> Line_40 $$ logger.trace("HTTP/STATUS:" + proxyRes.getStatusLine().getStatusCode() + "[" + proxyReq + "]") [FD]
Line_28 $$ proxyRes = httpClient.execute(proxyReq, httpContext) --> Line_41 $$ switch(proxyRes.getStatusLine().getStatusCode()) [FD]
Line_22 $$ HttpResponse proxyRes = null --> Line_41 $$ switch(proxyRes.getStatusLine().getStatusCode()) [FD]
Line_24 $$ boolean followTargetUrl = true --> Line_43 $$ followTargetUrl = false [FD]
Line_43 $$ followTargetUrl = false --> Line_46 $$ followTargetUrl = false [FD]
Line_24 $$ boolean followTargetUrl = true --> Line_46 $$ followTargetUrl = false [FD]
Line_43 $$ followTargetUrl = false --> Line_49 $$ followTargetUrl = false [FD]
Line_46 $$ followTargetUrl = false --> Line_49 $$ followTargetUrl = false [FD]
Line_24 $$ boolean followTargetUrl = true --> Line_49 $$ followTargetUrl = false [FD]
Line_28 $$ proxyRes = httpClient.execute(proxyReq, httpContext) --> Line_52 $$ Header location = proxyRes.getFirstHeader("Location") [FD]
Line_22 $$ HttpResponse proxyRes = null --> Line_52 $$ Header location = proxyRes.getFirstHeader("Location") [FD]
Line_29 $$ String targetUrl = null --> Line_53 $$ targetUrl = location.getValue() [FD]
Line_52 $$ Header location = proxyRes.getFirstHeader("Location") --> Line_53 $$ targetUrl = location.getValue() [FD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_54 $$ if (!internalProcessingPolicy.match(req, targetUrl)) [FD]
Line_29 $$ String targetUrl = null --> Line_54 $$ if (!internalProcessingPolicy.match(req, targetUrl)) [FD]
Line_53 $$ targetUrl = location.getValue() --> Line_54 $$ if (!internalProcessingPolicy.match(req, targetUrl)) [FD]
Line_54 $$ if (!internalProcessingPolicy.match(req, targetUrl)) --> Line_55 $$ logger.trace("Do not follow HTTP 302 to [" + location.getValue() + "]") [CD]
Line_52 $$ Header location = proxyRes.getFirstHeader("Location") --> Line_55 $$ logger.trace("Do not follow HTTP 302 to [" + location.getValue() + "]") [FD]
Line_54 $$ if (!internalProcessingPolicy.match(req, targetUrl)) --> Line_56 $$ Collections.addAll(storedHeaders, proxyRes.getHeaders("Location")) [CD]
Line_23 $$ List<Header> storedHeaders = new ArrayList<Header>(40) --> Line_56 $$ Collections.addAll(storedHeaders, proxyRes.getHeaders("Location")) [FD]
Line_28 $$ proxyRes = httpClient.execute(proxyReq, httpContext) --> Line_56 $$ Collections.addAll(storedHeaders, proxyRes.getHeaders("Location")) [FD]
Line_22 $$ HttpResponse proxyRes = null --> Line_56 $$ Collections.addAll(storedHeaders, proxyRes.getHeaders("Location")) [FD]
Line_54 $$ if (!internalProcessingPolicy.match(req, targetUrl)) --> Line_57 $$ followTargetUrl = false [CD]
Line_43 $$ followTargetUrl = false --> Line_57 $$ followTargetUrl = false [FD]
Line_46 $$ followTargetUrl = false --> Line_57 $$ followTargetUrl = false [FD]
Line_49 $$ followTargetUrl = false --> Line_57 $$ followTargetUrl = false [FD]
Line_24 $$ boolean followTargetUrl = true --> Line_57 $$ followTargetUrl = false [FD]
Line_54 $$ if (!internalProcessingPolicy.match(req, targetUrl)) --> Line_59 $$ logger.trace("Do follow HTTP 302 to [" + location.getValue() + "]") [CD]
Line_52 $$ Header location = proxyRes.getFirstHeader("Location") --> Line_59 $$ logger.trace("Do follow HTTP 302 to [" + location.getValue() + "]") [FD]
Line_54 $$ if (!internalProcessingPolicy.match(req, targetUrl)) --> Line_60 $$ followTargetUrl = true [CD]
Line_43 $$ followTargetUrl = false --> Line_60 $$ followTargetUrl = true [FD]
Line_46 $$ followTargetUrl = false --> Line_60 $$ followTargetUrl = true [FD]
Line_49 $$ followTargetUrl = false --> Line_60 $$ followTargetUrl = true [FD]
Line_57 $$ followTargetUrl = false --> Line_60 $$ followTargetUrl = true [FD]
Line_24 $$ boolean followTargetUrl = true --> Line_60 $$ followTargetUrl = true [FD]
Line_43 $$ followTargetUrl = false --> Line_64 $$ followTargetUrl = false [FD]
Line_46 $$ followTargetUrl = false --> Line_64 $$ followTargetUrl = false [FD]
Line_49 $$ followTargetUrl = false --> Line_64 $$ followTargetUrl = false [FD]
Line_57 $$ followTargetUrl = false --> Line_64 $$ followTargetUrl = false [FD]
Line_60 $$ followTargetUrl = true --> Line_64 $$ followTargetUrl = false [FD]
Line_24 $$ boolean followTargetUrl = true --> Line_64 $$ followTargetUrl = false [FD]
Line_26 $$ while (followTargetUrl) --> Line_67 $$ HttpEntity entity = proxyRes.getEntity() [CD]
Line_28 $$ proxyRes = httpClient.execute(proxyReq, httpContext) --> Line_67 $$ HttpEntity entity = proxyRes.getEntity() [FD]
Line_22 $$ HttpResponse proxyRes = null --> Line_67 $$ HttpEntity entity = proxyRes.getEntity() [FD]
Line_26 $$ while (followTargetUrl) --> Line_68 $$ if (entity != null) [CD]
Line_67 $$ HttpEntity entity = proxyRes.getEntity() --> Line_68 $$ if (entity != null) [FD]
Line_68 $$ if (entity != null) --> Line_69 $$ InputStream instream = entity.getContent() [CD]
Line_67 $$ HttpEntity entity = proxyRes.getEntity() --> Line_69 $$ InputStream instream = entity.getContent() [FD]
Line_43 $$ followTargetUrl = false --> Line_71 $$ if (!followTargetUrl) [FD]
Line_46 $$ followTargetUrl = false --> Line_71 $$ if (!followTargetUrl) [FD]
Line_49 $$ followTargetUrl = false --> Line_71 $$ if (!followTargetUrl) [FD]
Line_57 $$ followTargetUrl = false --> Line_71 $$ if (!followTargetUrl) [FD]
Line_60 $$ followTargetUrl = true --> Line_71 $$ if (!followTargetUrl) [FD]
Line_64 $$ followTargetUrl = false --> Line_71 $$ if (!followTargetUrl) [FD]
Line_24 $$ boolean followTargetUrl = true --> Line_71 $$ if (!followTargetUrl) [FD]
Line_31 $$ for (Header header : headers) --> Line_73 $$ res.setHeader(header.getName(), header.getValue()) [FD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_73 $$ res.setHeader(header.getName(), header.getValue()) [FD]
Line_31 $$ for (Header header : headers) --> Line_74 $$ res.setHeader(header.getName(), header.getValue()) [FD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_74 $$ res.setHeader(header.getName(), header.getValue()) [FD]
Line_71 $$ if (!followTargetUrl) --> Line_76 $$ res.setStatus(proxyRes.getStatusLine().getStatusCode()) [CD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_76 $$ res.setStatus(proxyRes.getStatusLine().getStatusCode()) [FD]
Line_28 $$ proxyRes = httpClient.execute(proxyReq, httpContext) --> Line_76 $$ res.setStatus(proxyRes.getStatusLine().getStatusCode()) [FD]
Line_22 $$ HttpResponse proxyRes = null --> Line_76 $$ res.setStatus(proxyRes.getStatusLine().getStatusCode()) [FD]
Line_31 $$ for (Header header : headers) --> Line_78 $$ res.addHeader(header.getName(), header.getValue()) [FD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_78 $$ res.addHeader(header.getName(), header.getValue()) [FD]
Line_71 $$ if (!followTargetUrl) --> Line_80 $$ IOUtils.copy(instream, res.getOutputStream()) [CD]
Line_69 $$ InputStream instream = entity.getContent() --> Line_80 $$ IOUtils.copy(instream, res.getOutputStream()) [FD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_80 $$ IOUtils.copy(instream, res.getOutputStream()) [FD]
Line_71 $$ if (!followTargetUrl) --> Line_81 $$ res.getOutputStream().flush() [CD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_81 $$ res.getOutputStream().flush() [FD]
Line_71 $$ if (!followTargetUrl) --> Line_83 $$ int r = instream.read(buff) [CD]
Line_69 $$ InputStream instream = entity.getContent() --> Line_83 $$ int r = instream.read(buff) [FD]
Line_25 $$ byte[] buff = new byte[1024] --> Line_83 $$ int r = instream.read(buff) [FD]
Line_71 $$ if (!followTargetUrl) --> Line_84 $$ int total = r [CD]
Line_71 $$ if (!followTargetUrl) --> Line_85 $$ while (r > 0) [CD]
Line_83 $$ int r = instream.read(buff) --> Line_85 $$ while (r > 0) [FD]
Line_85 $$ while (r > 0) --> Line_86 $$ r = instream.read(buff) [CD]
Line_83 $$ int r = instream.read(buff) --> Line_86 $$ r = instream.read(buff) [FD]
Line_69 $$ InputStream instream = entity.getContent() --> Line_86 $$ r = instream.read(buff) [FD]
Line_25 $$ byte[] buff = new byte[1024] --> Line_86 $$ r = instream.read(buff) [FD]
Line_85 $$ while (r > 0) --> Line_87 $$ total += r [CD]
Line_84 $$ int total = r --> Line_87 $$ total += r [FD]
Line_86 $$ r = instream.read(buff) --> Line_87 $$ total += r [FD]
Line_83 $$ int r = instream.read(buff) --> Line_87 $$ total += r [FD]
Line_71 $$ if (!followTargetUrl) --> Line_89 $$ logger.warn("Ignoring response content size : " + total) [CD]
Line_87 $$ total += r --> Line_89 $$ logger.warn("Ignoring response content size : " + total) [FD]
Line_84 $$ int total = r --> Line_89 $$ logger.warn("Ignoring response content size : " + total) [FD]
Line_3 $$ HttpRequestBase proxyReq = buildProxyRequest(req) --> Line_94 $$ proxyReq.abort() [FD]
Line_69 $$ InputStream instream = entity.getContent() --> Line_98 $$ instream.close() [FD]
Line_68 $$ if (entity != null) --> Line_103 $$ if (!followTargetUrl) [CD]
Line_43 $$ followTargetUrl = false --> Line_103 $$ if (!followTargetUrl) [FD]
Line_46 $$ followTargetUrl = false --> Line_103 $$ if (!followTargetUrl) [FD]
Line_49 $$ followTargetUrl = false --> Line_103 $$ if (!followTargetUrl) [FD]
Line_57 $$ followTargetUrl = false --> Line_103 $$ if (!followTargetUrl) [FD]
Line_60 $$ followTargetUrl = true --> Line_103 $$ if (!followTargetUrl) [FD]
Line_64 $$ followTargetUrl = false --> Line_103 $$ if (!followTargetUrl) [FD]
Line_24 $$ boolean followTargetUrl = true --> Line_103 $$ if (!followTargetUrl) [FD]
Line_103 $$ if (!followTargetUrl) --> Line_104 $$ res.setStatus(proxyRes.getStatusLine().getStatusCode()) [CD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_104 $$ res.setStatus(proxyRes.getStatusLine().getStatusCode()) [FD]
Line_28 $$ proxyRes = httpClient.execute(proxyReq, httpContext) --> Line_104 $$ res.setStatus(proxyRes.getStatusLine().getStatusCode()) [FD]
Line_22 $$ HttpResponse proxyRes = null --> Line_104 $$ res.setStatus(proxyRes.getStatusLine().getStatusCode()) [FD]
Line_31 $$ for (Header header : headers) --> Line_106 $$ res.setHeader(header.getName(), header.getValue()) [FD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_106 $$ res.setHeader(header.getName(), header.getValue()) [FD]
Line_31 $$ for (Header header : headers) --> Line_107 $$ res.setHeader(header.getName(), header.getValue()) [FD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_107 $$ res.setHeader(header.getName(), header.getValue()) [FD]
Line_31 $$ for (Header header : headers) --> Line_110 $$ res.addHeader(header.getName(), header.getValue()) [FD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_110 $$ res.addHeader(header.getName(), header.getValue()) [FD]
Line_26 $$ while (followTargetUrl) --> Line_114 $$ if (followTargetUrl) [CD]
Line_114 $$ if (followTargetUrl) --> Line_115 $$ proxyReq = buildProxyRequest(targetUrl) [CD]
Line_3 $$ HttpRequestBase proxyReq = buildProxyRequest(req) --> Line_115 $$ proxyReq = buildProxyRequest(targetUrl) [FD]
Line_29 $$ String targetUrl = null --> Line_115 $$ proxyReq = buildProxyRequest(targetUrl) [FD]
Line_53 $$ targetUrl = location.getValue() --> Line_115 $$ proxyReq = buildProxyRequest(targetUrl) [FD]
Line_114 $$ if (followTargetUrl) --> Line_116 $$ httpContext = null [CD]
Line_7 $$ HttpContext httpContext = new BasicHttpContext() --> Line_116 $$ httpContext = null [FD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_119 $$ logger.trace("Ended following redirects for " + req.getPathInfo()) [CD]
Line_2 $$ protected void doProxyInternally(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException --> Line_119 $$ logger.trace("Ended following redirects for " + req.getPathInfo()) [FD]
Line_115 $$ proxyReq = buildProxyRequest(targetUrl) --> Line_28 $$ proxyRes = httpClient.execute(proxyReq, httpContext) [FD]
Line_116 $$ httpContext = null --> Line_28 $$ proxyRes = httpClient.execute(proxyReq, httpContext) [FD]
Line_115 $$ proxyReq = buildProxyRequest(targetUrl) --> Line_94 $$ proxyReq.abort() [FD]
Line_86 $$ r = instream.read(buff) --> Line_85 $$ while (r > 0) [FD]
