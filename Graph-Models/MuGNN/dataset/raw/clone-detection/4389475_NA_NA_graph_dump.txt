Line_2 $$ public URLConnection openConnection(URL url) throws IOException --> Line_3 $$ if (!url.getProtocol().equals("file")) [CD]
Line_2 $$ public URLConnection openConnection(URL url) throws IOException --> Line_3 $$ if (!url.getProtocol().equals("file")) [FD]
Line_3 $$ if (!url.getProtocol().equals("file")) --> Line_4 $$ String name = url.getFile() [CD]
Line_2 $$ public URLConnection openConnection(URL url) throws IOException --> Line_4 $$ String name = url.getFile() [FD]
Line_3 $$ if (!url.getProtocol().equals("file")) --> Line_5 $$ File f = new File(cacheFolder, ((name.charAt(0) == '/') ? name.substring(1) : name).replace('/', File.separatorChar)) [CD]
Line_4 $$ String name = url.getFile() --> Line_5 $$ File f = new File(cacheFolder, ((name.charAt(0) == '/') ? name.substring(1) : name).replace('/', File.separatorChar)) [FD]
Line_3 $$ if (!url.getProtocol().equals("file")) --> Line_6 $$ if (!f.exists()) [CD]
Line_5 $$ File f = new File(cacheFolder, ((name.charAt(0) == '/') ? name.substring(1) : name).replace('/', File.separatorChar)) --> Line_6 $$ if (!f.exists()) [FD]
Line_6 $$ if (!f.exists()) --> Line_7 $$ File f2 = new File(f.getParentFile(), f.getName() + "-not_found") [CD]
Line_5 $$ File f = new File(cacheFolder, ((name.charAt(0) == '/') ? name.substring(1) : name).replace('/', File.separatorChar)) --> Line_7 $$ File f2 = new File(f.getParentFile(), f.getName() + "-not_found") [FD]
Line_6 $$ if (!f.exists()) --> Line_8 $$ if (!f2.exists()) [CD]
Line_7 $$ File f2 = new File(f.getParentFile(), f.getName() + "-not_found") --> Line_8 $$ if (!f2.exists()) [FD]
Line_5 $$ File f = new File(cacheFolder, ((name.charAt(0) == '/') ? name.substring(1) : name).replace('/', File.separatorChar)) --> Line_10 $$ f.getParentFile().mkdirs() [FD]
Line_2 $$ public URLConnection openConnection(URL url) throws IOException --> Line_11 $$ downloadFile(url, f) [FD]
Line_5 $$ File f = new File(cacheFolder, ((name.charAt(0) == '/') ? name.substring(1) : name).replace('/', File.separatorChar)) --> Line_11 $$ downloadFile(url, f) [FD]
Line_5 $$ File f = new File(cacheFolder, ((name.charAt(0) == '/') ? name.substring(1) : name).replace('/', File.separatorChar)) --> Line_13 $$ f.delete() [FD]
Line_3 $$ if (!url.getProtocol().equals("file")) --> Line_18 $$ return f.toURI().toURL().openConnection() [CD]
Line_5 $$ File f = new File(cacheFolder, ((name.charAt(0) == '/') ? name.substring(1) : name).replace('/', File.separatorChar)) --> Line_18 $$ return f.toURI().toURL().openConnection() [FD]
Line_2 $$ public URLConnection openConnection(URL url) throws IOException --> Line_20 $$ return super.openConnection(url) [CD]
Line_2 $$ public URLConnection openConnection(URL url) throws IOException --> Line_20 $$ return super.openConnection(url) [FD]
