Line_2 $$ private void process(String zipFileName, String directory, String db) throws SQLException --> Line_3 $$ InputStream in = null [CD]
Line_2 $$ private void process(String zipFileName, String directory, String db) throws SQLException --> Line_5 $$ if (!FileUtils.exists(zipFileName)) [FD]
Line_2 $$ private void process(String zipFileName, String directory, String db) throws SQLException --> Line_10 $$ if (db != null) [FD]
Line_10 $$ if (db != null) --> Line_11 $$ originalDbName = getOriginalDbName(zipFileName, db) [CD]
Line_8 $$ String originalDbName = null --> Line_11 $$ originalDbName = getOriginalDbName(zipFileName, db) [FD]
Line_2 $$ private void process(String zipFileName, String directory, String db) throws SQLException --> Line_11 $$ originalDbName = getOriginalDbName(zipFileName, db) [FD]
Line_10 $$ if (db != null) --> Line_12 $$ if (originalDbName == null) [CD]
Line_8 $$ String originalDbName = null --> Line_12 $$ if (originalDbName == null) [FD]
Line_11 $$ originalDbName = getOriginalDbName(zipFileName, db) --> Line_12 $$ if (originalDbName == null) [FD]
Line_10 $$ if (db != null) --> Line_15 $$ if (originalDbName.startsWith(File.separator)) [CD]
Line_8 $$ String originalDbName = null --> Line_15 $$ if (originalDbName.startsWith(File.separator)) [FD]
Line_11 $$ originalDbName = getOriginalDbName(zipFileName, db) --> Line_15 $$ if (originalDbName.startsWith(File.separator)) [FD]
Line_15 $$ if (originalDbName.startsWith(File.separator)) --> Line_16 $$ originalDbName = originalDbName.substring(1) [CD]
Line_8 $$ String originalDbName = null --> Line_16 $$ originalDbName = originalDbName.substring(1) [FD]
Line_11 $$ originalDbName = getOriginalDbName(zipFileName, db) --> Line_16 $$ originalDbName = originalDbName.substring(1) [FD]
Line_10 $$ if (db != null) --> Line_18 $$ originalDbLen = originalDbName.length() [CD]
Line_9 $$ int originalDbLen = 0 --> Line_18 $$ originalDbLen = originalDbName.length() [FD]
Line_8 $$ String originalDbName = null --> Line_18 $$ originalDbLen = originalDbName.length() [FD]
Line_11 $$ originalDbName = getOriginalDbName(zipFileName, db) --> Line_18 $$ originalDbLen = originalDbName.length() [FD]
Line_16 $$ originalDbName = originalDbName.substring(1) --> Line_18 $$ originalDbLen = originalDbName.length() [FD]
Line_3 $$ InputStream in = null --> Line_20 $$ in = FileUtils.openFileInputStream(zipFileName) [FD]
Line_2 $$ private void process(String zipFileName, String directory, String db) throws SQLException --> Line_20 $$ in = FileUtils.openFileInputStream(zipFileName) [FD]
Line_22 $$ while (true) --> Line_23 $$ ZipEntry entry = zipIn.getNextEntry() [CD]
Line_21 $$ ZipInputStream zipIn = new ZipInputStream(in) --> Line_23 $$ ZipEntry entry = zipIn.getNextEntry() [FD]
Line_22 $$ while (true) --> Line_24 $$ if (entry == null) [CD]
Line_22 $$ while (true) --> Line_27 $$ String fileName = entry.getName() [CD]
Line_22 $$ while (true) --> Line_28 $$ fileName = fileName.replace('\\', File.separatorChar) [CD]
Line_27 $$ String fileName = entry.getName() --> Line_28 $$ fileName = fileName.replace('\\', File.separatorChar) [FD]
Line_22 $$ while (true) --> Line_29 $$ fileName = fileName.replace('/', File.separatorChar) [CD]
Line_27 $$ String fileName = entry.getName() --> Line_29 $$ fileName = fileName.replace('/', File.separatorChar) [FD]
Line_28 $$ fileName = fileName.replace('\\', File.separatorChar) --> Line_29 $$ fileName = fileName.replace('/', File.separatorChar) [FD]
Line_22 $$ while (true) --> Line_30 $$ if (fileName.startsWith(File.separator)) [CD]
Line_27 $$ String fileName = entry.getName() --> Line_30 $$ if (fileName.startsWith(File.separator)) [FD]
Line_28 $$ fileName = fileName.replace('\\', File.separatorChar) --> Line_30 $$ if (fileName.startsWith(File.separator)) [FD]
Line_29 $$ fileName = fileName.replace('/', File.separatorChar) --> Line_30 $$ if (fileName.startsWith(File.separator)) [FD]
Line_30 $$ if (fileName.startsWith(File.separator)) --> Line_31 $$ fileName = fileName.substring(1) [CD]
Line_27 $$ String fileName = entry.getName() --> Line_31 $$ fileName = fileName.substring(1) [FD]
Line_28 $$ fileName = fileName.replace('\\', File.separatorChar) --> Line_31 $$ fileName = fileName.substring(1) [FD]
Line_29 $$ fileName = fileName.replace('/', File.separatorChar) --> Line_31 $$ fileName = fileName.substring(1) [FD]
Line_22 $$ while (true) --> Line_33 $$ boolean copy = false [CD]
Line_22 $$ while (true) --> Line_34 $$ if (db == null) [CD]
Line_2 $$ private void process(String zipFileName, String directory, String db) throws SQLException --> Line_34 $$ if (db == null) [FD]
Line_34 $$ if (db == null) --> Line_35 $$ copy = true [CD]
Line_33 $$ boolean copy = false --> Line_35 $$ copy = true [FD]
Line_34 $$ if (db == null) --> Line_36 $$ if (fileName.startsWith(originalDbName + ".")) [CD]
Line_27 $$ String fileName = entry.getName() --> Line_36 $$ if (fileName.startsWith(originalDbName + ".")) [FD]
Line_28 $$ fileName = fileName.replace('\\', File.separatorChar) --> Line_36 $$ if (fileName.startsWith(originalDbName + ".")) [FD]
Line_29 $$ fileName = fileName.replace('/', File.separatorChar) --> Line_36 $$ if (fileName.startsWith(originalDbName + ".")) [FD]
Line_31 $$ fileName = fileName.substring(1) --> Line_36 $$ if (fileName.startsWith(originalDbName + ".")) [FD]
Line_36 $$ if (fileName.startsWith(originalDbName + ".")) --> Line_37 $$ fileName = db + fileName.substring(originalDbLen) [CD]
Line_27 $$ String fileName = entry.getName() --> Line_37 $$ fileName = db + fileName.substring(originalDbLen) [FD]
Line_28 $$ fileName = fileName.replace('\\', File.separatorChar) --> Line_37 $$ fileName = db + fileName.substring(originalDbLen) [FD]
Line_29 $$ fileName = fileName.replace('/', File.separatorChar) --> Line_37 $$ fileName = db + fileName.substring(originalDbLen) [FD]
Line_31 $$ fileName = fileName.substring(1) --> Line_37 $$ fileName = db + fileName.substring(originalDbLen) [FD]
Line_2 $$ private void process(String zipFileName, String directory, String db) throws SQLException --> Line_37 $$ fileName = db + fileName.substring(originalDbLen) [FD]
Line_9 $$ int originalDbLen = 0 --> Line_37 $$ fileName = db + fileName.substring(originalDbLen) [FD]
Line_18 $$ originalDbLen = originalDbName.length() --> Line_37 $$ fileName = db + fileName.substring(originalDbLen) [FD]
Line_36 $$ if (fileName.startsWith(originalDbName + ".")) --> Line_38 $$ copy = true [CD]
Line_33 $$ boolean copy = false --> Line_38 $$ copy = true [FD]
Line_35 $$ copy = true --> Line_38 $$ copy = true [FD]
Line_22 $$ while (true) --> Line_40 $$ if (copy) [CD]
Line_40 $$ if (copy) --> Line_41 $$ OutputStream out = null [CD]
Line_41 $$ OutputStream out = null --> Line_43 $$ out = FileUtils.openFileOutputStream(directory + File.separator + fileName, false) [FD]
Line_21 $$ ZipInputStream zipIn = new ZipInputStream(in) --> Line_44 $$ IOUtils.copy(zipIn, out) [FD]
Line_41 $$ OutputStream out = null --> Line_44 $$ IOUtils.copy(zipIn, out) [FD]
Line_43 $$ out = FileUtils.openFileOutputStream(directory + File.separator + fileName, false) --> Line_44 $$ IOUtils.copy(zipIn, out) [FD]
Line_41 $$ OutputStream out = null --> Line_45 $$ out.close() [FD]
Line_43 $$ out = FileUtils.openFileOutputStream(directory + File.separator + fileName, false) --> Line_45 $$ out.close() [FD]
Line_41 $$ OutputStream out = null --> Line_47 $$ IOUtils.closeSilently(out) [FD]
Line_43 $$ out = FileUtils.openFileOutputStream(directory + File.separator + fileName, false) --> Line_47 $$ IOUtils.closeSilently(out) [FD]
Line_22 $$ while (true) --> Line_50 $$ zipIn.closeEntry() [CD]
Line_21 $$ ZipInputStream zipIn = new ZipInputStream(in) --> Line_50 $$ zipIn.closeEntry() [FD]
Line_21 $$ ZipInputStream zipIn = new ZipInputStream(in) --> Line_52 $$ zipIn.closeEntry() [FD]
Line_21 $$ ZipInputStream zipIn = new ZipInputStream(in) --> Line_53 $$ zipIn.close() [FD]
Line_2 $$ private void process(String zipFileName, String directory, String db) throws SQLException --> Line_55 $$ throw Message.convertIOException(e, zipFileName) [FD]
Line_3 $$ InputStream in = null --> Line_57 $$ IOUtils.closeSilently(in) [FD]
Line_20 $$ in = FileUtils.openFileInputStream(zipFileName) --> Line_57 $$ IOUtils.closeSilently(in) [FD]
Line_29 $$ fileName = fileName.replace('/', File.separatorChar) --> Line_28 $$ fileName = fileName.replace('\\', File.separatorChar) [FD]
Line_31 $$ fileName = fileName.substring(1) --> Line_28 $$ fileName = fileName.replace('\\', File.separatorChar) [FD]
Line_37 $$ fileName = db + fileName.substring(originalDbLen) --> Line_28 $$ fileName = fileName.replace('\\', File.separatorChar) [FD]
Line_31 $$ fileName = fileName.substring(1) --> Line_29 $$ fileName = fileName.replace('/', File.separatorChar) [FD]
Line_37 $$ fileName = db + fileName.substring(originalDbLen) --> Line_29 $$ fileName = fileName.replace('/', File.separatorChar) [FD]
Line_31 $$ fileName = fileName.substring(1) --> Line_30 $$ if (fileName.startsWith(File.separator)) [FD]
Line_37 $$ fileName = db + fileName.substring(originalDbLen) --> Line_30 $$ if (fileName.startsWith(File.separator)) [FD]
Line_37 $$ fileName = db + fileName.substring(originalDbLen) --> Line_31 $$ fileName = fileName.substring(1) [FD]
Line_37 $$ fileName = db + fileName.substring(originalDbLen) --> Line_36 $$ if (fileName.startsWith(originalDbName + ".")) [FD]
