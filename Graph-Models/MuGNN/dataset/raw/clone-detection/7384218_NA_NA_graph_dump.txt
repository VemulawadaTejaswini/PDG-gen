Line_2 $$ public void run() --> Line_4 $$ Log.debug("Fetching news") [CD]
Line_2 $$ public void run() --> Line_5 $$ Session session = botService.getSession() [CD]
Line_2 $$ public void run() --> Line_6 $$ if (session == null) [CD]
Line_5 $$ Session session = botService.getSession() --> Line_6 $$ if (session == null) [FD]
Line_6 $$ if (session == null) --> Line_7 $$ Log.warn("No current IRC session") [CD]
Line_6 $$ if (session == null) --> Line_8 $$ return [CD]
Line_2 $$ public void run() --> Line_10 $$ final List<Channel> channels = session.getChannels() [CD]
Line_5 $$ Session session = botService.getSession() --> Line_10 $$ final List<Channel> channels = session.getChannels() [FD]
Line_2 $$ public void run() --> Line_11 $$ if (channels.isEmpty()) [CD]
Line_10 $$ final List<Channel> channels = session.getChannels() --> Line_11 $$ if (channels.isEmpty()) [FD]
Line_11 $$ if (channels.isEmpty()) --> Line_12 $$ Log.warn("No channel for the current IRC session") [CD]
Line_11 $$ if (channels.isEmpty()) --> Line_13 $$ return [CD]
Line_2 $$ public void run() --> Line_15 $$ if (StringUtils.isEmpty(feedURL)) [CD]
Line_15 $$ if (StringUtils.isEmpty(feedURL)) --> Line_16 $$ Log.warn("No feed provided") [CD]
Line_15 $$ if (StringUtils.isEmpty(feedURL)) --> Line_17 $$ return [CD]
Line_2 $$ public void run() --> Line_19 $$ Log.debug("Creating feedListener") [CD]
Line_2 $$ public void run() --> Line_20 $$ FeedParserListener feedParserListener = new DefaultFeedParserListener() [CD]
Line_20 $$ FeedParserListener feedParserListener = new DefaultFeedParserListener() --> Line_22 $$ Log.debug("onChannel:" + title + "," + link + "," + description) [CD]
Line_20 $$ FeedParserListener feedParserListener = new DefaultFeedParserListener() --> Line_25 $$ if (counter >= MAX_FEEDS) [CD]
Line_20 $$ FeedParserListener feedParserListener = new DefaultFeedParserListener() --> Line_28 $$ boolean canAnnounce = false [CD]
Line_30 $$ if (lastDigest == null) --> Line_31 $$ MessageDigest md = MessageDigest.getInstance(HASH_ALGORITHM) [CD]
Line_30 $$ if (lastDigest == null) --> Line_32 $$ md.update(title.getBytes()) [CD]
Line_31 $$ MessageDigest md = MessageDigest.getInstance(HASH_ALGORITHM) --> Line_32 $$ md.update(title.getBytes()) [FD]
Line_20 $$ FeedParserListener feedParserListener = new DefaultFeedParserListener() --> Line_32 $$ md.update(title.getBytes()) [FD]
Line_30 $$ if (lastDigest == null) --> Line_33 $$ lastDigest = md.digest() [CD]
Line_31 $$ MessageDigest md = MessageDigest.getInstance(HASH_ALGORITHM) --> Line_33 $$ lastDigest = md.digest() [FD]
Line_30 $$ if (lastDigest == null) --> Line_34 $$ canAnnounce = true [CD]
Line_28 $$ boolean canAnnounce = false --> Line_34 $$ canAnnounce = true [FD]
Line_30 $$ if (lastDigest == null) --> Line_36 $$ MessageDigest md = MessageDigest.getInstance(HASH_ALGORITHM) [CD]
Line_30 $$ if (lastDigest == null) --> Line_37 $$ md.update(title.getBytes()) [CD]
Line_31 $$ MessageDigest md = MessageDigest.getInstance(HASH_ALGORITHM) --> Line_37 $$ md.update(title.getBytes()) [FD]
Line_20 $$ FeedParserListener feedParserListener = new DefaultFeedParserListener() --> Line_37 $$ md.update(title.getBytes()) [FD]
Line_30 $$ if (lastDigest == null) --> Line_38 $$ byte[] currentDigest = md.digest() [CD]
Line_31 $$ MessageDigest md = MessageDigest.getInstance(HASH_ALGORITHM) --> Line_38 $$ byte[] currentDigest = md.digest() [FD]
Line_30 $$ if (lastDigest == null) --> Line_39 $$ if (!MessageDigest.isEqual(currentDigest, lastDigest)) [CD]
Line_38 $$ byte[] currentDigest = md.digest() --> Line_39 $$ if (!MessageDigest.isEqual(currentDigest, lastDigest)) [FD]
Line_39 $$ if (!MessageDigest.isEqual(currentDigest, lastDigest)) --> Line_41 $$ canAnnounce = true [CD]
Line_28 $$ boolean canAnnounce = false --> Line_41 $$ canAnnounce = true [FD]
Line_34 $$ canAnnounce = true --> Line_41 $$ canAnnounce = true [FD]
Line_44 $$ if (canAnnounce) --> Line_45 $$ String shortTitle = title [CD]
Line_44 $$ if (canAnnounce) --> Line_46 $$ if (shortTitle.length() > TITLE_MAX_LEN) [CD]
Line_45 $$ String shortTitle = title --> Line_46 $$ if (shortTitle.length() > TITLE_MAX_LEN) [FD]
Line_46 $$ if (shortTitle.length() > TITLE_MAX_LEN) --> Line_47 $$ shortTitle = shortTitle.substring(0, TITLE_MAX_LEN) + " ..." [CD]
Line_45 $$ String shortTitle = title --> Line_47 $$ shortTitle = shortTitle.substring(0, TITLE_MAX_LEN) + " ..." [FD]
Line_44 $$ if (canAnnounce) --> Line_49 $$ String shortLink = IOUtil.getTinyUrl(link) [CD]
Line_20 $$ FeedParserListener feedParserListener = new DefaultFeedParserListener() --> Line_49 $$ String shortLink = IOUtil.getTinyUrl(link) [FD]
Line_44 $$ if (canAnnounce) --> Line_50 $$ Log.debug("Link:" + shortLink) [CD]
Line_51 $$ for (Channel channel : channels) --> Line_52 $$ channel.say(String.format("%s, %s", shortTitle, shortLink)) [FD]
Line_45 $$ String shortTitle = title --> Line_52 $$ channel.say(String.format("%s, %s", shortTitle, shortLink)) [FD]
Line_47 $$ shortTitle = shortTitle.substring(0, TITLE_MAX_LEN) + " ..." --> Line_52 $$ channel.say(String.format("%s, %s", shortTitle, shortLink)) [FD]
Line_49 $$ String shortLink = IOUtil.getTinyUrl(link) --> Line_52 $$ channel.say(String.format("%s, %s", shortTitle, shortLink)) [FD]
Line_2 $$ public void run() --> Line_63 $$ if (parser != null) [CD]
Line_20 $$ FeedParserListener feedParserListener = new DefaultFeedParserListener() --> Line_68 $$ parser.parse(feedParserListener, is, feedURL) [FD]
Line_51 $$ for (Channel channel : channels) --> Line_75 $$ channel.say(e.getMessage()) [FD]
Line_63 $$ if (parser != null) --> Line_81 $$ Log.warn("Wasn't able to create feed parser") [CD]
