Line_2 $$ public static boolean copy(File from, File to, Override override) throws IOException --> Line_3 $$ FileInputStream in = null [CD]
Line_2 $$ public static boolean copy(File from, File to, Override override) throws IOException --> Line_4 $$ FileOutputStream out = null [CD]
Line_2 $$ public static boolean copy(File from, File to, Override override) throws IOException --> Line_5 $$ FileChannel srcChannel = null [CD]
Line_2 $$ public static boolean copy(File from, File to, Override override) throws IOException --> Line_6 $$ FileChannel destChannel = null [CD]
Line_2 $$ public static boolean copy(File from, File to, Override override) throws IOException --> Line_7 $$ override = Override.NEWER [CD]
Line_2 $$ public static boolean copy(File from, File to, Override override) throws IOException --> Line_7 $$ override = Override.NEWER [FD]
Line_2 $$ public static boolean copy(File from, File to, Override override) throws IOException --> Line_10 $$ if (to.isFile()) [FD]
Line_2 $$ public static boolean copy(File from, File to, Override override) throws IOException --> Line_13 $$ if (to.isFile() && (from.lastModified() - LASTMODIFIED_DIFF_MILLIS) < to.lastModified()) [FD]
Line_2 $$ public static boolean copy(File from, File to, Override override) throws IOException --> Line_16 $$ to.getParentFile().mkdirs() [CD]
Line_2 $$ public static boolean copy(File from, File to, Override override) throws IOException --> Line_16 $$ to.getParentFile().mkdirs() [FD]
Line_3 $$ FileInputStream in = null --> Line_18 $$ in = new FileInputStream(from) [FD]
Line_4 $$ FileOutputStream out = null --> Line_19 $$ out = new FileOutputStream(to) [FD]
Line_5 $$ FileChannel srcChannel = null --> Line_20 $$ srcChannel = in.getChannel() [FD]
Line_3 $$ FileInputStream in = null --> Line_20 $$ srcChannel = in.getChannel() [FD]
Line_18 $$ in = new FileInputStream(from) --> Line_20 $$ srcChannel = in.getChannel() [FD]
Line_6 $$ FileChannel destChannel = null --> Line_21 $$ destChannel = out.getChannel() [FD]
Line_4 $$ FileOutputStream out = null --> Line_21 $$ destChannel = out.getChannel() [FD]
Line_19 $$ out = new FileOutputStream(to) --> Line_21 $$ destChannel = out.getChannel() [FD]
Line_5 $$ FileChannel srcChannel = null --> Line_23 $$ long count = srcChannel.size() [FD]
Line_20 $$ srcChannel = in.getChannel() --> Line_23 $$ long count = srcChannel.size() [FD]
Line_22 $$ long position = 0L --> Line_24 $$ while (position < count) [FD]
Line_23 $$ long count = srcChannel.size() --> Line_24 $$ while (position < count) [FD]
Line_24 $$ while (position < count) --> Line_25 $$ long chunk = Math.min(MAX_IO_CHUNK_SIZE, count - position) [CD]
Line_24 $$ while (position < count) --> Line_26 $$ position += destChannel.transferFrom(srcChannel, position, chunk) [CD]
Line_22 $$ long position = 0L --> Line_26 $$ position += destChannel.transferFrom(srcChannel, position, chunk) [FD]
Line_6 $$ FileChannel destChannel = null --> Line_26 $$ position += destChannel.transferFrom(srcChannel, position, chunk) [FD]
Line_21 $$ destChannel = out.getChannel() --> Line_26 $$ position += destChannel.transferFrom(srcChannel, position, chunk) [FD]
Line_5 $$ FileChannel srcChannel = null --> Line_26 $$ position += destChannel.transferFrom(srcChannel, position, chunk) [FD]
Line_20 $$ srcChannel = in.getChannel() --> Line_26 $$ position += destChannel.transferFrom(srcChannel, position, chunk) [FD]
Line_25 $$ long chunk = Math.min(MAX_IO_CHUNK_SIZE, count - position) --> Line_26 $$ position += destChannel.transferFrom(srcChannel, position, chunk) [FD]
Line_2 $$ public static boolean copy(File from, File to, Override override) throws IOException --> Line_28 $$ to.setLastModified(from.lastModified()) [FD]
Line_5 $$ FileChannel srcChannel = null --> Line_31 $$ CommonUtils.close(srcChannel) [FD]
Line_20 $$ srcChannel = in.getChannel() --> Line_31 $$ CommonUtils.close(srcChannel) [FD]
Line_6 $$ FileChannel destChannel = null --> Line_32 $$ CommonUtils.close(destChannel) [FD]
Line_21 $$ destChannel = out.getChannel() --> Line_32 $$ CommonUtils.close(destChannel) [FD]
Line_4 $$ FileOutputStream out = null --> Line_33 $$ CommonUtils.close(out) [FD]
Line_19 $$ out = new FileOutputStream(to) --> Line_33 $$ CommonUtils.close(out) [FD]
Line_3 $$ FileInputStream in = null --> Line_34 $$ CommonUtils.close(in) [FD]
Line_18 $$ in = new FileInputStream(from) --> Line_34 $$ CommonUtils.close(in) [FD]
Line_26 $$ position += destChannel.transferFrom(srcChannel, position, chunk) --> Line_24 $$ while (position < count) [FD]
