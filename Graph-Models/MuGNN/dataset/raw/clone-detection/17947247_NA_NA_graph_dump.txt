Line_2 $$ public String postURL(String urlLocation, ArrayList headers, String content, HashMap postVariables, RenderEngine c) throws Exception --> Line_3 $$ String postContent = null [CD]
Line_2 $$ public String postURL(String urlLocation, ArrayList headers, String content, HashMap postVariables, RenderEngine c) throws Exception --> Line_4 $$ if (postVariables != null) [CD]
Line_2 $$ public String postURL(String urlLocation, ArrayList headers, String content, HashMap postVariables, RenderEngine c) throws Exception --> Line_4 $$ if (postVariables != null) [FD]
Line_4 $$ if (postVariables != null) --> Line_5 $$ boolean firstElement = true [CD]
Line_4 $$ if (postVariables != null) --> Line_6 $$ postContent = new String() [CD]
Line_3 $$ String postContent = null --> Line_6 $$ postContent = new String() [FD]
Line_4 $$ if (postVariables != null) --> Line_7 $$ Iterator elements = postVariables.keySet().iterator() [CD]
Line_2 $$ public String postURL(String urlLocation, ArrayList headers, String content, HashMap postVariables, RenderEngine c) throws Exception --> Line_7 $$ Iterator elements = postVariables.keySet().iterator() [FD]
Line_4 $$ if (postVariables != null) --> Line_8 $$ while (elements.hasNext()) [CD]
Line_7 $$ Iterator elements = postVariables.keySet().iterator() --> Line_8 $$ while (elements.hasNext()) [FD]
Line_8 $$ while (elements.hasNext()) --> Line_9 $$ String key = (String) elements.next() [CD]
Line_7 $$ Iterator elements = postVariables.keySet().iterator() --> Line_9 $$ String key = (String) elements.next() [FD]
Line_8 $$ while (elements.hasNext()) --> Line_10 $$ String val = (String) postVariables.get(key) [CD]
Line_2 $$ public String postURL(String urlLocation, ArrayList headers, String content, HashMap postVariables, RenderEngine c) throws Exception --> Line_10 $$ String val = (String) postVariables.get(key) [FD]
Line_9 $$ String key = (String) elements.next() --> Line_10 $$ String val = (String) postVariables.get(key) [FD]
Line_8 $$ while (elements.hasNext()) --> Line_11 $$ if (firstElement) [CD]
Line_11 $$ if (firstElement) --> Line_12 $$ postContent += Encoder.URLEncode(key) + "=" + Encoder.URLEncode(val) [CD]
Line_3 $$ String postContent = null --> Line_12 $$ postContent += Encoder.URLEncode(key) + "=" + Encoder.URLEncode(val) [FD]
Line_6 $$ postContent = new String() --> Line_12 $$ postContent += Encoder.URLEncode(key) + "=" + Encoder.URLEncode(val) [FD]
Line_9 $$ String key = (String) elements.next() --> Line_12 $$ postContent += Encoder.URLEncode(key) + "=" + Encoder.URLEncode(val) [FD]
Line_10 $$ String val = (String) postVariables.get(key) --> Line_12 $$ postContent += Encoder.URLEncode(key) + "=" + Encoder.URLEncode(val) [FD]
Line_11 $$ if (firstElement) --> Line_13 $$ firstElement = false [CD]
Line_5 $$ boolean firstElement = true --> Line_13 $$ firstElement = false [FD]
Line_11 $$ if (firstElement) --> Line_15 $$ postContent += "&" + Encoder.URLEncode(key) + "=" + Encoder.URLEncode(val) [CD]
Line_12 $$ postContent += Encoder.URLEncode(key) + "=" + Encoder.URLEncode(val) --> Line_15 $$ postContent += "&" + Encoder.URLEncode(key) + "=" + Encoder.URLEncode(val) [FD]
Line_3 $$ String postContent = null --> Line_15 $$ postContent += "&" + Encoder.URLEncode(key) + "=" + Encoder.URLEncode(val) [FD]
Line_6 $$ postContent = new String() --> Line_15 $$ postContent += "&" + Encoder.URLEncode(key) + "=" + Encoder.URLEncode(val) [FD]
Line_9 $$ String key = (String) elements.next() --> Line_15 $$ postContent += "&" + Encoder.URLEncode(key) + "=" + Encoder.URLEncode(val) [FD]
Line_10 $$ String val = (String) postVariables.get(key) --> Line_15 $$ postContent += "&" + Encoder.URLEncode(key) + "=" + Encoder.URLEncode(val) [FD]
Line_4 $$ if (postVariables != null) --> Line_18 $$ elements = null [CD]
Line_7 $$ Iterator elements = postVariables.keySet().iterator() --> Line_18 $$ elements = null [FD]
Line_4 $$ if (postVariables != null) --> Line_20 $$ postContent = content [CD]
Line_12 $$ postContent += Encoder.URLEncode(key) + "=" + Encoder.URLEncode(val) --> Line_20 $$ postContent = content [FD]
Line_15 $$ postContent += "&" + Encoder.URLEncode(key) + "=" + Encoder.URLEncode(val) --> Line_20 $$ postContent = content [FD]
Line_3 $$ String postContent = null --> Line_20 $$ postContent = content [FD]
Line_6 $$ postContent = new String() --> Line_20 $$ postContent = content [FD]
Line_2 $$ public String postURL(String urlLocation, ArrayList headers, String content, HashMap postVariables, RenderEngine c) throws Exception --> Line_20 $$ postContent = content [FD]
Line_2 $$ public String postURL(String urlLocation, ArrayList headers, String content, HashMap postVariables, RenderEngine c) throws Exception --> Line_22 $$ Debug.log("Connecting to URL '" + urlLocation + "', content '" + postContent + "'") [CD]
Line_2 $$ public String postURL(String urlLocation, ArrayList headers, String content, HashMap postVariables, RenderEngine c) throws Exception --> Line_23 $$ URL url = null [CD]
Line_23 $$ URL url = null --> Line_25 $$ url = new URL(urlLocation) [FD]
Line_2 $$ public String postURL(String urlLocation, ArrayList headers, String content, HashMap postVariables, RenderEngine c) throws Exception --> Line_30 $$ StringBuffer lines = new StringBuffer() [CD]
Line_2 $$ public String postURL(String urlLocation, ArrayList headers, String content, HashMap postVariables, RenderEngine c) throws Exception --> Line_31 $$ HttpURLConnection conn = null [CD]
Line_2 $$ public String postURL(String urlLocation, ArrayList headers, String content, HashMap postVariables, RenderEngine c) throws Exception --> Line_32 $$ boolean contentLengthFound = false [CD]
Line_31 $$ HttpURLConnection conn = null --> Line_34 $$ conn = (HttpURLConnection) url.openConnection() [FD]
Line_23 $$ URL url = null --> Line_34 $$ conn = (HttpURLConnection) url.openConnection() [FD]
Line_25 $$ url = new URL(urlLocation) --> Line_34 $$ conn = (HttpURLConnection) url.openConnection() [FD]
Line_2 $$ public String postURL(String urlLocation, ArrayList headers, String content, HashMap postVariables, RenderEngine c) throws Exception --> Line_35 $$ loadCookies(urlLocation, conn, c) [FD]
Line_31 $$ HttpURLConnection conn = null --> Line_35 $$ loadCookies(urlLocation, conn, c) [FD]
Line_34 $$ conn = (HttpURLConnection) url.openConnection() --> Line_35 $$ loadCookies(urlLocation, conn, c) [FD]
Line_2 $$ public String postURL(String urlLocation, ArrayList headers, String content, HashMap postVariables, RenderEngine c) throws Exception --> Line_36 $$ if (headers != null) [FD]
Line_36 $$ if (headers != null) --> Line_37 $$ for (int i = 0; i < headers.size(); i++) [CD]
Line_2 $$ public String postURL(String urlLocation, ArrayList headers, String content, HashMap postVariables, RenderEngine c) throws Exception --> Line_37 $$ for (int i = 0; i < headers.size(); i++) [FD]
Line_37 $$ for (int i = 0; i < headers.size(); i++) --> Line_38 $$ String header = (String) headers.get(i) [CD]
Line_37 $$ for (int i = 0; i < headers.size(); i++) --> Line_38 $$ String header = (String) headers.get(i) [FD]
Line_2 $$ public String postURL(String urlLocation, ArrayList headers, String content, HashMap postVariables, RenderEngine c) throws Exception --> Line_38 $$ String header = (String) headers.get(i) [FD]
Line_37 $$ for (int i = 0; i < headers.size(); i++) --> Line_39 $$ String key = header.substring(0, header.indexOf(":")) [CD]
Line_38 $$ String header = (String) headers.get(i) --> Line_39 $$ String key = header.substring(0, header.indexOf(":")) [FD]
Line_37 $$ for (int i = 0; i < headers.size(); i++) --> Line_40 $$ String value = header.substring(header.indexOf(":") + 2) [CD]
Line_38 $$ String header = (String) headers.get(i) --> Line_40 $$ String value = header.substring(header.indexOf(":") + 2) [FD]
Line_37 $$ for (int i = 0; i < headers.size(); i++) --> Line_41 $$ if (key != null && key.equalsIgnoreCase("content-length")) [CD]
Line_39 $$ String key = header.substring(0, header.indexOf(":")) --> Line_41 $$ if (key != null && key.equalsIgnoreCase("content-length")) [FD]
Line_9 $$ String key = (String) elements.next() --> Line_41 $$ if (key != null && key.equalsIgnoreCase("content-length")) [FD]
Line_41 $$ if (key != null && key.equalsIgnoreCase("content-length")) --> Line_42 $$ contentLengthFound = true [CD]
Line_32 $$ boolean contentLengthFound = false --> Line_42 $$ contentLengthFound = true [FD]
Line_37 $$ for (int i = 0; i < headers.size(); i++) --> Line_44 $$ Debug.log("Adding new request header '" + key + "'='" + value + "'") [CD]
Line_37 $$ for (int i = 0; i < headers.size(); i++) --> Line_45 $$ conn.setRequestProperty(key, value) [CD]
Line_31 $$ HttpURLConnection conn = null --> Line_45 $$ conn.setRequestProperty(key, value) [FD]
Line_34 $$ conn = (HttpURLConnection) url.openConnection() --> Line_45 $$ conn.setRequestProperty(key, value) [FD]
Line_39 $$ String key = header.substring(0, header.indexOf(":")) --> Line_45 $$ conn.setRequestProperty(key, value) [FD]
Line_9 $$ String key = (String) elements.next() --> Line_45 $$ conn.setRequestProperty(key, value) [FD]
Line_40 $$ String value = header.substring(header.indexOf(":") + 2) --> Line_45 $$ conn.setRequestProperty(key, value) [FD]
Line_42 $$ contentLengthFound = true --> Line_48 $$ if (!contentLengthFound) [FD]
Line_32 $$ boolean contentLengthFound = false --> Line_48 $$ if (!contentLengthFound) [FD]
Line_48 $$ if (!contentLengthFound) --> Line_49 $$ Debug.log("Adding new request header 'Content-Length'='" + postContent.length() + "'") [CD]
Line_12 $$ postContent += Encoder.URLEncode(key) + "=" + Encoder.URLEncode(val) --> Line_49 $$ Debug.log("Adding new request header 'Content-Length'='" + postContent.length() + "'") [FD]
Line_15 $$ postContent += "&" + Encoder.URLEncode(key) + "=" + Encoder.URLEncode(val) --> Line_49 $$ Debug.log("Adding new request header 'Content-Length'='" + postContent.length() + "'") [FD]
Line_3 $$ String postContent = null --> Line_49 $$ Debug.log("Adding new request header 'Content-Length'='" + postContent.length() + "'") [FD]
Line_6 $$ postContent = new String() --> Line_49 $$ Debug.log("Adding new request header 'Content-Length'='" + postContent.length() + "'") [FD]
Line_20 $$ postContent = content --> Line_49 $$ Debug.log("Adding new request header 'Content-Length'='" + postContent.length() + "'") [FD]
Line_48 $$ if (!contentLengthFound) --> Line_50 $$ conn.setRequestProperty("Content-Length", Integer.toString(postContent.length())) [CD]
Line_31 $$ HttpURLConnection conn = null --> Line_50 $$ conn.setRequestProperty("Content-Length", Integer.toString(postContent.length())) [FD]
Line_34 $$ conn = (HttpURLConnection) url.openConnection() --> Line_50 $$ conn.setRequestProperty("Content-Length", Integer.toString(postContent.length())) [FD]
Line_12 $$ postContent += Encoder.URLEncode(key) + "=" + Encoder.URLEncode(val) --> Line_50 $$ conn.setRequestProperty("Content-Length", Integer.toString(postContent.length())) [FD]
Line_15 $$ postContent += "&" + Encoder.URLEncode(key) + "=" + Encoder.URLEncode(val) --> Line_50 $$ conn.setRequestProperty("Content-Length", Integer.toString(postContent.length())) [FD]
Line_3 $$ String postContent = null --> Line_50 $$ conn.setRequestProperty("Content-Length", Integer.toString(postContent.length())) [FD]
Line_6 $$ postContent = new String() --> Line_50 $$ conn.setRequestProperty("Content-Length", Integer.toString(postContent.length())) [FD]
Line_20 $$ postContent = content --> Line_50 $$ conn.setRequestProperty("Content-Length", Integer.toString(postContent.length())) [FD]
Line_31 $$ HttpURLConnection conn = null --> Line_52 $$ conn.setDoOutput(true) [FD]
Line_34 $$ conn = (HttpURLConnection) url.openConnection() --> Line_52 $$ conn.setDoOutput(true) [FD]
Line_31 $$ HttpURLConnection conn = null --> Line_53 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream()) [FD]
Line_34 $$ conn = (HttpURLConnection) url.openConnection() --> Line_53 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream()) [FD]
Line_53 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream()) --> Line_54 $$ wr.write(postContent) [FD]
Line_12 $$ postContent += Encoder.URLEncode(key) + "=" + Encoder.URLEncode(val) --> Line_54 $$ wr.write(postContent) [FD]
Line_15 $$ postContent += "&" + Encoder.URLEncode(key) + "=" + Encoder.URLEncode(val) --> Line_54 $$ wr.write(postContent) [FD]
Line_3 $$ String postContent = null --> Line_54 $$ wr.write(postContent) [FD]
Line_6 $$ postContent = new String() --> Line_54 $$ wr.write(postContent) [FD]
Line_20 $$ postContent = content --> Line_54 $$ wr.write(postContent) [FD]
Line_53 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream()) --> Line_55 $$ wr.flush() [FD]
Line_31 $$ HttpURLConnection conn = null --> Line_56 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())) [FD]
Line_34 $$ conn = (HttpURLConnection) url.openConnection() --> Line_56 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())) [FD]
Line_57 $$ String line = null --> Line_58 $$ while ((line = rd.readLine()) != null) [FD]
Line_56 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())) --> Line_58 $$ while ((line = rd.readLine()) != null) [FD]
Line_58 $$ while ((line = rd.readLine()) != null) --> Line_59 $$ lines.append(line) [CD]
Line_58 $$ while ((line = rd.readLine()) != null) --> Line_59 $$ lines.append(line) [FD]
Line_30 $$ StringBuffer lines = new StringBuffer() --> Line_59 $$ lines.append(line) [FD]
Line_57 $$ String line = null --> Line_59 $$ lines.append(line) [FD]
Line_58 $$ while ((line = rd.readLine()) != null) --> Line_60 $$ lines.append("\r\n") [CD]
Line_30 $$ StringBuffer lines = new StringBuffer() --> Line_60 $$ lines.append("\r\n") [FD]
Line_2 $$ public String postURL(String urlLocation, ArrayList headers, String content, HashMap postVariables, RenderEngine c) throws Exception --> Line_62 $$ handleHeaders(urlLocation, conn.getHeaderFields()) [FD]
Line_31 $$ HttpURLConnection conn = null --> Line_62 $$ handleHeaders(urlLocation, conn.getHeaderFields()) [FD]
Line_34 $$ conn = (HttpURLConnection) url.openConnection() --> Line_62 $$ handleHeaders(urlLocation, conn.getHeaderFields()) [FD]
Line_53 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream()) --> Line_63 $$ wr.close() [FD]
Line_56 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())) --> Line_64 $$ rd.close() [FD]
Line_53 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream()) --> Line_65 $$ wr = null [FD]
Line_56 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())) --> Line_66 $$ rd = null [FD]
Line_31 $$ HttpURLConnection conn = null --> Line_68 $$ if (conn != null) [FD]
Line_34 $$ conn = (HttpURLConnection) url.openConnection() --> Line_68 $$ if (conn != null) [FD]
Line_68 $$ if (conn != null) --> Line_69 $$ lines = new StringBuffer() [CD]
Line_30 $$ StringBuffer lines = new StringBuffer() --> Line_69 $$ lines = new StringBuffer() [FD]
Line_31 $$ HttpURLConnection conn = null --> Line_71 $$ throw new Exception("Server returned error code '" + conn.getResponseCode() + "': " + conn.getResponseMessage()) [FD]
Line_34 $$ conn = (HttpURLConnection) url.openConnection() --> Line_71 $$ throw new Exception("Server returned error code '" + conn.getResponseCode() + "': " + conn.getResponseMessage()) [FD]
Line_30 $$ StringBuffer lines = new StringBuffer() --> Line_77 $$ return lines.toString().trim() [FD]
Line_69 $$ lines = new StringBuffer() --> Line_77 $$ return lines.toString().trim() [FD]
Line_2 $$ public String postURL(String urlLocation, ArrayList headers, String content, HashMap postVariables, RenderEngine c) throws Exception --> Line_80 $$ url = null [CD]
Line_23 $$ URL url = null --> Line_80 $$ url = null [FD]
Line_25 $$ url = new URL(urlLocation) --> Line_80 $$ url = null [FD]
Line_2 $$ public String postURL(String urlLocation, ArrayList headers, String content, HashMap postVariables, RenderEngine c) throws Exception --> Line_81 $$ conn = null [CD]
Line_31 $$ HttpURLConnection conn = null --> Line_81 $$ conn = null [FD]
Line_34 $$ conn = (HttpURLConnection) url.openConnection() --> Line_81 $$ conn = null [FD]
Line_2 $$ public String postURL(String urlLocation, ArrayList headers, String content, HashMap postVariables, RenderEngine c) throws Exception --> Line_82 $$ return lines.toString().trim() [CD]
Line_30 $$ StringBuffer lines = new StringBuffer() --> Line_82 $$ return lines.toString().trim() [FD]
Line_69 $$ lines = new StringBuffer() --> Line_82 $$ return lines.toString().trim() [FD]
