Line_4 $$ GregorianCalendar calendar = new GregorianCalendar() --> Line_5 $$ calendar.setTime(from) [FD]
Line_2 $$ public static ArrayList<Quote> fetchAllQuotes(String symbol, Date from, Date to) --> Line_5 $$ calendar.setTime(from) [FD]
Line_4 $$ GregorianCalendar calendar = new GregorianCalendar() --> Line_6 $$ String monthFrom = (new Integer(calendar.get(GregorianCalendar.MONTH))).toString() [FD]
Line_4 $$ GregorianCalendar calendar = new GregorianCalendar() --> Line_7 $$ String dayFrom = (new Integer(calendar.get(GregorianCalendar.DAY_OF_MONTH))).toString() [FD]
Line_4 $$ GregorianCalendar calendar = new GregorianCalendar() --> Line_8 $$ String yearFrom = (new Integer(calendar.get(GregorianCalendar.YEAR))).toString() [FD]
Line_4 $$ GregorianCalendar calendar = new GregorianCalendar() --> Line_9 $$ calendar.setTime(to) [FD]
Line_2 $$ public static ArrayList<Quote> fetchAllQuotes(String symbol, Date from, Date to) --> Line_9 $$ calendar.setTime(to) [FD]
Line_4 $$ GregorianCalendar calendar = new GregorianCalendar() --> Line_10 $$ String monthTo = (new Integer(calendar.get(GregorianCalendar.MONTH))).toString() [FD]
Line_4 $$ GregorianCalendar calendar = new GregorianCalendar() --> Line_11 $$ String dayTo = (new Integer(calendar.get(GregorianCalendar.DAY_OF_MONTH))).toString() [FD]
Line_4 $$ GregorianCalendar calendar = new GregorianCalendar() --> Line_12 $$ String yearTo = (new Integer(calendar.get(GregorianCalendar.YEAR))).toString() [FD]
Line_13 $$ URL url = new URL("http://ichart.finance.yahoo.com/table.csv?s=" + symbol + "&a=" + monthFrom + "&b=" + dayFrom + "&c=" + yearFrom + "&d=" + monthTo + "&e=" + dayTo + "&f=" + yearTo + "&g=d&ignore=.csv") --> Line_14 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream())) [FD]
Line_14 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_17 $$ reader.readLine() [FD]
Line_15 $$ String line --> Line_18 $$ while ((line = reader.readLine()) != null) [FD]
Line_14 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_18 $$ while ((line = reader.readLine()) != null) [FD]
Line_18 $$ while ((line = reader.readLine()) != null) --> Line_19 $$ String[] values = line.split(",") [CD]
Line_18 $$ while ((line = reader.readLine()) != null) --> Line_19 $$ String[] values = line.split(",") [FD]
Line_15 $$ String line --> Line_19 $$ String[] values = line.split(",") [FD]
Line_18 $$ while ((line = reader.readLine()) != null) --> Line_20 $$ String date = values[0] [CD]
Line_18 $$ while ((line = reader.readLine()) != null) --> Line_21 $$ Date dateQuote = new SimpleDateFormat("yyyy-MM-dd").parse(date) [CD]
Line_20 $$ String date = values[0] --> Line_21 $$ Date dateQuote = new SimpleDateFormat("yyyy-MM-dd").parse(date) [FD]
Line_18 $$ while ((line = reader.readLine()) != null) --> Line_22 $$ double open = Double.valueOf(values[1]) [CD]
Line_18 $$ while ((line = reader.readLine()) != null) --> Line_23 $$ double high = Double.valueOf(values[2]) [CD]
Line_18 $$ while ((line = reader.readLine()) != null) --> Line_24 $$ double low = Double.valueOf(values[3]) [CD]
Line_18 $$ while ((line = reader.readLine()) != null) --> Line_25 $$ double close = Double.valueOf(values[4]) [CD]
Line_18 $$ while ((line = reader.readLine()) != null) --> Line_26 $$ long volume = Long.valueOf(values[5]) [CD]
Line_18 $$ while ((line = reader.readLine()) != null) --> Line_27 $$ double adjClose = Double.valueOf(values[6]) [CD]
Line_18 $$ while ((line = reader.readLine()) != null) --> Line_28 $$ Quote q = new Quote(dateQuote, open, high, low, close, volume, adjClose) [CD]
Line_18 $$ while ((line = reader.readLine()) != null) --> Line_29 $$ result.add(q) [CD]
Line_16 $$ ArrayList<Quote> result = new ArrayList<Quote>() --> Line_29 $$ result.add(q) [FD]
Line_28 $$ Quote q = new Quote(dateQuote, open, high, low, close, volume, adjClose) --> Line_29 $$ result.add(q) [FD]
Line_14 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_31 $$ reader.close() [FD]
Line_16 $$ ArrayList<Quote> result = new ArrayList<Quote>() --> Line_32 $$ Collections.reverse(result) [FD]
Line_2 $$ public static ArrayList<Quote> fetchAllQuotes(String symbol, Date from, Date to) --> Line_41 $$ return null [CD]
