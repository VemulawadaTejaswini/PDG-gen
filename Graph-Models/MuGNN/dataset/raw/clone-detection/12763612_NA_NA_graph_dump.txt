Line_2 $$ protected String doInBackground(MarketData... market) --> Line_3 $$ publishProgress(-1) [CD]
Line_2 $$ protected String doInBackground(MarketData... market) --> Line_4 $$ InputStream input = null [CD]
Line_2 $$ protected String doInBackground(MarketData... market) --> Line_5 $$ OutputStream output = null [CD]
Line_2 $$ protected String doInBackground(MarketData... market) --> Line_6 $$ long lenghtOfFile = 0 [CD]
Line_2 $$ protected String doInBackground(MarketData... market) --> Line_7 $$ int lengthRead = 0 [CD]
Line_9 $$ HttpGet newReq = new HttpGet(market[0].apkURL) --> Line_10 $$ HttpResponse response = HttpManager.execute(newReq) [FD]
Line_10 $$ HttpResponse response = HttpManager.execute(newReq) --> Line_11 $$ Log.i(Main.TAG, "req:" + response.getStatusLine().getStatusCode()) [FD]
Line_10 $$ HttpResponse response = HttpManager.execute(newReq) --> Line_12 $$ while (response.getStatusLine().getStatusCode() == HttpStatus.SC_MOVED_TEMPORARILY || response.getStatusLine().getStatusCode() == HttpStatus.SC_MOVED_PERMANENTLY) [FD]
Line_12 $$ while (response.getStatusLine().getStatusCode() == HttpStatus.SC_MOVED_TEMPORARILY || response.getStatusLine().getStatusCode() == HttpStatus.SC_MOVED_PERMANENTLY) --> Line_13 $$ Log.i(Main.TAG, "redirect to:" + response.getFirstHeader("Location").getValue()) [CD]
Line_10 $$ HttpResponse response = HttpManager.execute(newReq) --> Line_13 $$ Log.i(Main.TAG, "redirect to:" + response.getFirstHeader("Location").getValue()) [FD]
Line_12 $$ while (response.getStatusLine().getStatusCode() == HttpStatus.SC_MOVED_TEMPORARILY || response.getStatusLine().getStatusCode() == HttpStatus.SC_MOVED_PERMANENTLY) --> Line_14 $$ newReq = new HttpGet(response.getFirstHeader("Location").getValue()) [CD]
Line_9 $$ HttpGet newReq = new HttpGet(market[0].apkURL) --> Line_14 $$ newReq = new HttpGet(response.getFirstHeader("Location").getValue()) [FD]
Line_10 $$ HttpResponse response = HttpManager.execute(newReq) --> Line_14 $$ newReq = new HttpGet(response.getFirstHeader("Location").getValue()) [FD]
Line_12 $$ while (response.getStatusLine().getStatusCode() == HttpStatus.SC_MOVED_TEMPORARILY || response.getStatusLine().getStatusCode() == HttpStatus.SC_MOVED_PERMANENTLY) --> Line_15 $$ response = HttpManager.execute(newReq) [CD]
Line_10 $$ HttpResponse response = HttpManager.execute(newReq) --> Line_15 $$ response = HttpManager.execute(newReq) [FD]
Line_14 $$ newReq = new HttpGet(response.getFirstHeader("Location").getValue()) --> Line_15 $$ response = HttpManager.execute(newReq) [FD]
Line_9 $$ HttpGet newReq = new HttpGet(market[0].apkURL) --> Line_15 $$ response = HttpManager.execute(newReq) [FD]
Line_12 $$ while (response.getStatusLine().getStatusCode() == HttpStatus.SC_MOVED_TEMPORARILY || response.getStatusLine().getStatusCode() == HttpStatus.SC_MOVED_PERMANENTLY) --> Line_16 $$ Log.i(Main.TAG, "req:" + response.getStatusLine().getStatusCode()) [CD]
Line_15 $$ response = HttpManager.execute(newReq) --> Line_16 $$ Log.i(Main.TAG, "req:" + response.getStatusLine().getStatusCode()) [FD]
Line_10 $$ HttpResponse response = HttpManager.execute(newReq) --> Line_16 $$ Log.i(Main.TAG, "req:" + response.getStatusLine().getStatusCode()) [FD]
Line_6 $$ long lenghtOfFile = 0 --> Line_18 $$ lenghtOfFile = response.getEntity().getContentLength() [FD]
Line_15 $$ response = HttpManager.execute(newReq) --> Line_18 $$ lenghtOfFile = response.getEntity().getContentLength() [FD]
Line_10 $$ HttpResponse response = HttpManager.execute(newReq) --> Line_18 $$ lenghtOfFile = response.getEntity().getContentLength() [FD]
Line_4 $$ InputStream input = null --> Line_19 $$ input = response.getEntity().getContent() [FD]
Line_15 $$ response = HttpManager.execute(newReq) --> Line_19 $$ input = response.getEntity().getContent() [FD]
Line_10 $$ HttpResponse response = HttpManager.execute(newReq) --> Line_19 $$ input = response.getEntity().getContent() [FD]
Line_5 $$ OutputStream output = null --> Line_20 $$ output = new FileOutputStream(market[0].getFile()) [FD]
Line_7 $$ int lengthRead = 0 --> Line_21 $$ lengthRead = copy(input, output, lenghtOfFile) [FD]
Line_4 $$ InputStream input = null --> Line_21 $$ lengthRead = copy(input, output, lenghtOfFile) [FD]
Line_19 $$ input = response.getEntity().getContent() --> Line_21 $$ lengthRead = copy(input, output, lenghtOfFile) [FD]
Line_5 $$ OutputStream output = null --> Line_21 $$ lengthRead = copy(input, output, lenghtOfFile) [FD]
Line_20 $$ output = new FileOutputStream(market[0].getFile()) --> Line_21 $$ lengthRead = copy(input, output, lenghtOfFile) [FD]
Line_6 $$ long lenghtOfFile = 0 --> Line_21 $$ lengthRead = copy(input, output, lenghtOfFile) [FD]
Line_18 $$ lenghtOfFile = response.getEntity().getContentLength() --> Line_21 $$ lengthRead = copy(input, output, lenghtOfFile) [FD]
Line_28 $$ if (lenghtOfFile != 0 && lengthRead != lenghtOfFile) --> Line_29 $$ Log.w(Main.TAG, "failed to download " + market[0].apkURL + " " + lengthRead + "/" + lenghtOfFile) [CD]
Line_4 $$ InputStream input = null --> Line_31 $$ if (input != null) [FD]
Line_19 $$ input = response.getEntity().getContent() --> Line_31 $$ if (input != null) [FD]
Line_5 $$ OutputStream output = null --> Line_32 $$ if (output != null) [FD]
Line_20 $$ output = new FileOutputStream(market[0].getFile()) --> Line_32 $$ if (output != null) [FD]
Line_2 $$ protected String doInBackground(MarketData... market) --> Line_39 $$ Log.v(Main.TAG, "copied " + market[0].apkURL + " to " + market[0].getFile()) [CD]
Line_2 $$ protected String doInBackground(MarketData... market) --> Line_40 $$ return null [CD]
Line_15 $$ response = HttpManager.execute(newReq) --> Line_12 $$ while (response.getStatusLine().getStatusCode() == HttpStatus.SC_MOVED_TEMPORARILY || response.getStatusLine().getStatusCode() == HttpStatus.SC_MOVED_PERMANENTLY) [FD]
Line_15 $$ response = HttpManager.execute(newReq) --> Line_13 $$ Log.i(Main.TAG, "redirect to:" + response.getFirstHeader("Location").getValue()) [FD]
Line_15 $$ response = HttpManager.execute(newReq) --> Line_14 $$ newReq = new HttpGet(response.getFirstHeader("Location").getValue()) [FD]
