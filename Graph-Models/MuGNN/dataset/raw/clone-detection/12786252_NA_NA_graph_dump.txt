Line_2 $$ private OSD downloadList() throws IOException, IllegalStateException, ParseException, URISyntaxException --> Line_3 $$ OSD osd = null [CD]
Line_2 $$ private OSD downloadList() throws IOException, IllegalStateException, ParseException, URISyntaxException --> Line_4 $$ HttpClient client = new DefaultHttpClient() [CD]
Line_2 $$ private OSD downloadList() throws IOException, IllegalStateException, ParseException, URISyntaxException --> Line_5 $$ HttpGet getMethod = new HttpGet(new URI(listUri)) [CD]
Line_4 $$ HttpClient client = new DefaultHttpClient() --> Line_7 $$ HttpResponse response = client.execute(getMethod) [FD]
Line_5 $$ HttpGet getMethod = new HttpGet(new URI(listUri)) --> Line_7 $$ HttpResponse response = client.execute(getMethod) [FD]
Line_7 $$ HttpResponse response = client.execute(getMethod) --> Line_8 $$ if (response.getStatusLine().getStatusCode() != HttpStatus.SC_OK) [FD]
Line_7 $$ HttpResponse response = client.execute(getMethod) --> Line_9 $$ throw new HttpResponseException(response.getStatusLine().getStatusCode(), response.getStatusLine().getReasonPhrase()) [FD]
Line_7 $$ HttpResponse response = client.execute(getMethod) --> Line_11 $$ HttpEntity entity = response.getEntity() [FD]
Line_11 $$ HttpEntity entity = response.getEntity() --> Line_12 $$ if (entity != null) [FD]
Line_12 $$ if (entity != null) --> Line_13 $$ InputStream stream = entity.getContent() [CD]
Line_11 $$ HttpEntity entity = response.getEntity() --> Line_13 $$ InputStream stream = entity.getContent() [FD]
Line_12 $$ if (entity != null) --> Line_14 $$ String charset = null [CD]
Line_12 $$ if (entity != null) --> Line_15 $$ if (entity.getContentType() != null) [CD]
Line_11 $$ HttpEntity entity = response.getEntity() --> Line_15 $$ if (entity.getContentType() != null) [FD]
Line_15 $$ if (entity.getContentType() != null) --> Line_16 $$ HeaderElement values[] = entity.getContentType().getElements() [CD]
Line_11 $$ HttpEntity entity = response.getEntity() --> Line_16 $$ HeaderElement values[] = entity.getContentType().getElements() [FD]
Line_15 $$ if (entity.getContentType() != null) --> Line_17 $$ if (values.length > 0) [CD]
Line_17 $$ if (values.length > 0) --> Line_18 $$ NameValuePair param = values[0].getParameterByName("charset") [CD]
Line_17 $$ if (values.length > 0) --> Line_19 $$ if (param != null) [CD]
Line_18 $$ NameValuePair param = values[0].getParameterByName("charset") --> Line_19 $$ if (param != null) [FD]
Line_19 $$ if (param != null) --> Line_20 $$ charset = param.getValue() [CD]
Line_14 $$ String charset = null --> Line_20 $$ charset = param.getValue() [FD]
Line_18 $$ NameValuePair param = values[0].getParameterByName("charset") --> Line_20 $$ charset = param.getValue() [FD]
Line_12 $$ if (entity != null) --> Line_24 $$ if (charset == null) [CD]
Line_14 $$ String charset = null --> Line_24 $$ if (charset == null) [FD]
Line_20 $$ charset = param.getValue() --> Line_24 $$ if (charset == null) [FD]
Line_24 $$ if (charset == null) --> Line_25 $$ charset = HTTP.DEFAULT_CONTENT_CHARSET [CD]
Line_14 $$ String charset = null --> Line_25 $$ charset = HTTP.DEFAULT_CONTENT_CHARSET [FD]
Line_20 $$ charset = param.getValue() --> Line_25 $$ charset = HTTP.DEFAULT_CONTENT_CHARSET [FD]
Line_12 $$ if (entity != null) --> Line_27 $$ osd = OSD.parse(stream, charset) [CD]
Line_3 $$ OSD osd = null --> Line_27 $$ osd = OSD.parse(stream, charset) [FD]
Line_13 $$ InputStream stream = entity.getContent() --> Line_27 $$ osd = OSD.parse(stream, charset) [FD]
Line_14 $$ String charset = null --> Line_27 $$ osd = OSD.parse(stream, charset) [FD]
Line_20 $$ charset = param.getValue() --> Line_27 $$ osd = OSD.parse(stream, charset) [FD]
Line_25 $$ charset = HTTP.DEFAULT_CONTENT_CHARSET --> Line_27 $$ osd = OSD.parse(stream, charset) [FD]
Line_5 $$ HttpGet getMethod = new HttpGet(new URI(listUri)) --> Line_30 $$ getMethod.abort() [FD]
Line_2 $$ private OSD downloadList() throws IOException, IllegalStateException, ParseException, URISyntaxException --> Line_32 $$ return osd [CD]
