Line_2 $$ public static String[] loadAllPropertiesFromClassLoader(Properties properties, String... resourceNames) throws IOException --> Line_3 $$ List successLoadProperties = new ArrayList() [CD]
Line_4 $$ for (String resourceName : resourceNames) --> Line_5 $$ URL url = GeneratorProperties.class.getResource(resourceName) [FD]
Line_6 $$ if (url != null) --> Line_7 $$ successLoadProperties.add(url.getFile()) [CD]
Line_3 $$ List successLoadProperties = new ArrayList() --> Line_7 $$ successLoadProperties.add(url.getFile()) [FD]
Line_6 $$ if (url != null) --> Line_8 $$ InputStream input = null [CD]
Line_10 $$ URLConnection con = url.openConnection() --> Line_11 $$ con.setUseCaches(false) [FD]
Line_8 $$ InputStream input = null --> Line_12 $$ input = con.getInputStream() [FD]
Line_10 $$ URLConnection con = url.openConnection() --> Line_12 $$ input = con.getInputStream() [FD]
Line_4 $$ for (String resourceName : resourceNames) --> Line_13 $$ if (resourceName.endsWith(".xml")) [FD]
Line_13 $$ if (resourceName.endsWith(".xml")) --> Line_14 $$ properties.loadFromXML(input) [CD]
Line_2 $$ public static String[] loadAllPropertiesFromClassLoader(Properties properties, String... resourceNames) throws IOException --> Line_14 $$ properties.loadFromXML(input) [FD]
Line_8 $$ InputStream input = null --> Line_14 $$ properties.loadFromXML(input) [FD]
Line_12 $$ input = con.getInputStream() --> Line_14 $$ properties.loadFromXML(input) [FD]
Line_13 $$ if (resourceName.endsWith(".xml")) --> Line_16 $$ properties.load(input) [CD]
Line_2 $$ public static String[] loadAllPropertiesFromClassLoader(Properties properties, String... resourceNames) throws IOException --> Line_16 $$ properties.load(input) [FD]
Line_8 $$ InputStream input = null --> Line_16 $$ properties.load(input) [FD]
Line_12 $$ input = con.getInputStream() --> Line_16 $$ properties.load(input) [FD]
Line_8 $$ InputStream input = null --> Line_19 $$ if (input != null) [FD]
Line_12 $$ input = con.getInputStream() --> Line_19 $$ if (input != null) [FD]
Line_19 $$ if (input != null) --> Line_20 $$ input.close() [CD]
Line_8 $$ InputStream input = null --> Line_20 $$ input.close() [FD]
Line_12 $$ input = con.getInputStream() --> Line_20 $$ input.close() [FD]
Line_2 $$ public static String[] loadAllPropertiesFromClassLoader(Properties properties, String... resourceNames) throws IOException --> Line_25 $$ return (String[]) successLoadProperties.toArray(new String[0]) [CD]
Line_3 $$ List successLoadProperties = new ArrayList() --> Line_25 $$ return (String[]) successLoadProperties.toArray(new String[0]) [FD]
