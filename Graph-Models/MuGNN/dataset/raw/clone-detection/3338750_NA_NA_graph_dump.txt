Line_2 $$ public void sortPlayersTurn() --> Line_3 $$ Token tempT = new Token() [CD]
Line_2 $$ public void sortPlayersTurn() --> Line_4 $$ Player tempP = new Player("test name", tempT) [CD]
Line_2 $$ public void sortPlayersTurn() --> Line_5 $$ int tempN = 0 [CD]
Line_2 $$ public void sortPlayersTurn() --> Line_6 $$ boolean exchangeMade = true [CD]
Line_2 $$ public void sortPlayersTurn() --> Line_7 $$ for (int i = 0; i < playerNum - 1 && exchangeMade; i++) [CD]
Line_6 $$ boolean exchangeMade = true --> Line_7 $$ for (int i = 0; i < playerNum - 1 && exchangeMade; i++) [FD]
Line_7 $$ for (int i = 0; i < playerNum - 1 && exchangeMade; i++) --> Line_8 $$ exchangeMade = false [CD]
Line_6 $$ boolean exchangeMade = true --> Line_8 $$ exchangeMade = false [FD]
Line_7 $$ for (int i = 0; i < playerNum - 1 && exchangeMade; i++) --> Line_9 $$ for (int j = 0; j < playerNum - 1 - i; j++) [CD]
Line_9 $$ for (int j = 0; j < playerNum - 1 - i; j++) --> Line_10 $$ if (diceSum[j] < diceSum[j + 1]) [CD]
Line_10 $$ if (diceSum[j] < diceSum[j + 1]) --> Line_11 $$ tempP = players[j] [CD]
Line_4 $$ Player tempP = new Player("test name", tempT) --> Line_11 $$ tempP = players[j] [FD]
Line_10 $$ if (diceSum[j] < diceSum[j + 1]) --> Line_12 $$ tempN = diceSum[j] [CD]
Line_5 $$ int tempN = 0 --> Line_12 $$ tempN = diceSum[j] [FD]
Line_10 $$ if (diceSum[j] < diceSum[j + 1]) --> Line_13 $$ players[j] = players[j + 1] [CD]
Line_10 $$ if (diceSum[j] < diceSum[j + 1]) --> Line_14 $$ diceSum[j] = diceSum[j + 1] [CD]
Line_10 $$ if (diceSum[j] < diceSum[j + 1]) --> Line_15 $$ players[j + 1] = tempP [CD]
Line_11 $$ tempP = players[j] --> Line_15 $$ players[j + 1] = tempP [FD]
Line_4 $$ Player tempP = new Player("test name", tempT) --> Line_15 $$ players[j + 1] = tempP [FD]
Line_10 $$ if (diceSum[j] < diceSum[j + 1]) --> Line_16 $$ diceSum[j + 1] = tempN [CD]
Line_12 $$ tempN = diceSum[j] --> Line_16 $$ diceSum[j + 1] = tempN [FD]
Line_5 $$ int tempN = 0 --> Line_16 $$ diceSum[j + 1] = tempN [FD]
Line_10 $$ if (diceSum[j] < diceSum[j + 1]) --> Line_17 $$ exchangeMade = true [CD]
Line_8 $$ exchangeMade = false --> Line_17 $$ exchangeMade = true [FD]
Line_6 $$ boolean exchangeMade = true --> Line_17 $$ exchangeMade = true [FD]
Line_8 $$ exchangeMade = false --> Line_7 $$ for (int i = 0; i < playerNum - 1 && exchangeMade; i++) [FD]
