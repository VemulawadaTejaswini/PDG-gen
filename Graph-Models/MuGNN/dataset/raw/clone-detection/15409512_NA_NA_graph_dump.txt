Line_2 $$ public static void main(String args[]) throws IOException --> Line_3 $$ String inFileName = args[0] [CD]
Line_2 $$ public static void main(String args[]) throws IOException --> Line_4 $$ String outFileName = args[1] [CD]
Line_2 $$ public static void main(String args[]) throws IOException --> Line_5 $$ long position = 0L [CD]
Line_5 $$ long position = 0L --> Line_7 $$ position = Long.parseLong(args[2]) [FD]
Line_5 $$ long position = 0L --> Line_10 $$ position = Long.parseLong(args[2], 16) [FD]
Line_7 $$ position = Long.parseLong(args[2]) --> Line_10 $$ position = Long.parseLong(args[2], 16) [FD]
Line_2 $$ public static void main(String args[]) throws IOException --> Line_16 $$ if (position < 1L) [CD]
Line_5 $$ long position = 0L --> Line_16 $$ if (position < 1L) [FD]
Line_7 $$ position = Long.parseLong(args[2]) --> Line_16 $$ if (position < 1L) [FD]
Line_10 $$ position = Long.parseLong(args[2], 16) --> Line_16 $$ if (position < 1L) [FD]
Line_16 $$ if (position < 1L) --> Line_17 $$ System.err.println("Wrong offset. Must be more than 0") [CD]
Line_16 $$ if (position < 1L) --> Line_18 $$ System.exit(0) [CD]
Line_2 $$ public static void main(String args[]) throws IOException --> Line_20 $$ System.out.println("Copying  input: " + inFileName) [CD]
Line_2 $$ public static void main(String args[]) throws IOException --> Line_21 $$ System.out.println("        output: " + outFileName) [CD]
Line_2 $$ public static void main(String args[]) throws IOException --> Line_22 $$ System.out.println("          from: " + position) [CD]
Line_2 $$ public static void main(String args[]) throws IOException --> Line_23 $$ BufferedInputStream bis = new BufferedInputStream(new FileInputStream(inFileName)) [CD]
Line_2 $$ public static void main(String args[]) throws IOException --> Line_24 $$ BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(outFileName)) [CD]
Line_2 $$ public static void main(String args[]) throws IOException --> Line_25 $$ bis.skip(position) [CD]
Line_23 $$ BufferedInputStream bis = new BufferedInputStream(new FileInputStream(inFileName)) --> Line_25 $$ bis.skip(position) [FD]
Line_5 $$ long position = 0L --> Line_25 $$ bis.skip(position) [FD]
Line_7 $$ position = Long.parseLong(args[2]) --> Line_25 $$ bis.skip(position) [FD]
Line_10 $$ position = Long.parseLong(args[2], 16) --> Line_25 $$ bis.skip(position) [FD]
Line_2 $$ public static void main(String args[]) throws IOException --> Line_26 $$ for (byte[] b = new byte[1]; bis.read(b) > 0; bos.write(b)) [CD]
Line_23 $$ BufferedInputStream bis = new BufferedInputStream(new FileInputStream(inFileName)) --> Line_26 $$ for (byte[] b = new byte[1]; bis.read(b) > 0; bos.write(b)) [FD]
Line_24 $$ BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(outFileName)) --> Line_26 $$ for (byte[] b = new byte[1]; bis.read(b) > 0; bos.write(b)) [FD]
Line_2 $$ public static void main(String args[]) throws IOException --> Line_27 $$ bis.close() [CD]
Line_23 $$ BufferedInputStream bis = new BufferedInputStream(new FileInputStream(inFileName)) --> Line_27 $$ bis.close() [FD]
Line_2 $$ public static void main(String args[]) throws IOException --> Line_28 $$ bos.close() [CD]
Line_24 $$ BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(outFileName)) --> Line_28 $$ bos.close() [FD]
