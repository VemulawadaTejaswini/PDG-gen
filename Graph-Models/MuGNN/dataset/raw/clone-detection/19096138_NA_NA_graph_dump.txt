Line_2 $$ public static void main(String[] args) --> Line_3 $$ String logFileName = args[0] [CD]
Line_2 $$ public static void main(String[] args) --> Line_4 $$ int extractLineEvery = new Integer(args[1]).intValue() [CD]
Line_2 $$ public static void main(String[] args) --> Line_5 $$ String filterToken = "P0" [CD]
Line_2 $$ public static void main(String[] args) --> Line_6 $$ if (args.length > 2) [CD]
Line_6 $$ if (args.length > 2) --> Line_7 $$ filterToken = args[2] [CD]
Line_5 $$ String filterToken = "P0" --> Line_7 $$ filterToken = args[2] [FD]
Line_12 $$ String readLine --> Line_14 $$ while ((readLine = br.readLine()) != null) [FD]
Line_10 $$ BufferedReader br = new BufferedReader(new FileReader(logFileName)) --> Line_14 $$ while ((readLine = br.readLine()) != null) [FD]
Line_14 $$ while ((readLine = br.readLine()) != null) --> Line_15 $$ if ((x++ % extractLineEvery == 0) && readLine.startsWith(filterToken)) [CD]
Line_14 $$ while ((readLine = br.readLine()) != null) --> Line_15 $$ if ((x++ % extractLineEvery == 0) && readLine.startsWith(filterToken)) [FD]
Line_13 $$ int x = 0 --> Line_15 $$ if ((x++ % extractLineEvery == 0) && readLine.startsWith(filterToken)) [FD]
Line_12 $$ String readLine --> Line_15 $$ if ((x++ % extractLineEvery == 0) && readLine.startsWith(filterToken)) [FD]
Line_5 $$ String filterToken = "P0" --> Line_15 $$ if ((x++ % extractLineEvery == 0) && readLine.startsWith(filterToken)) [FD]
Line_7 $$ filterToken = args[2] --> Line_15 $$ if ((x++ % extractLineEvery == 0) && readLine.startsWith(filterToken)) [FD]
Line_15 $$ if ((x++ % extractLineEvery == 0) && readLine.startsWith(filterToken)) --> Line_16 $$ bw.write(readLine + "\n") [CD]
Line_11 $$ BufferedWriter bw = new BufferedWriter(new FileWriter(new File(logFileName + ".trim"))) --> Line_16 $$ bw.write(readLine + "\n") [FD]
Line_11 $$ BufferedWriter bw = new BufferedWriter(new FileWriter(new File(logFileName + ".trim"))) --> Line_19 $$ bw.flush() [FD]
Line_11 $$ BufferedWriter bw = new BufferedWriter(new FileWriter(new File(logFileName + ".trim"))) --> Line_20 $$ bw.close() [FD]
