Line_2 $$ public static void main(String[] args) --> Line_3 $$ FileInputStream in [CD]
Line_2 $$ public static void main(String[] args) --> Line_4 $$ DeflaterOutputStream out [CD]
Line_2 $$ public static void main(String[] args) --> Line_5 $$ FileOutputStream fos [CD]
Line_2 $$ public static void main(String[] args) --> Line_6 $$ FileDialog fd [CD]
Line_2 $$ public static void main(String[] args) --> Line_7 $$ fd = new FileDialog(new Frame(), "Find a file to deflate", FileDialog.LOAD) [CD]
Line_6 $$ FileDialog fd --> Line_7 $$ fd = new FileDialog(new Frame(), "Find a file to deflate", FileDialog.LOAD) [FD]
Line_2 $$ public static void main(String[] args) --> Line_8 $$ fd.show() [CD]
Line_6 $$ FileDialog fd --> Line_8 $$ fd.show() [FD]
Line_7 $$ fd = new FileDialog(new Frame(), "Find a file to deflate", FileDialog.LOAD) --> Line_8 $$ fd.show() [FD]
Line_2 $$ public static void main(String[] args) --> Line_9 $$ if (fd.getFile() != null) [CD]
Line_6 $$ FileDialog fd --> Line_9 $$ if (fd.getFile() != null) [FD]
Line_7 $$ fd = new FileDialog(new Frame(), "Find a file to deflate", FileDialog.LOAD) --> Line_9 $$ if (fd.getFile() != null) [FD]
Line_3 $$ FileInputStream in --> Line_11 $$ in = new FileInputStream(new File(fd.getDirectory(), fd.getFile())) [FD]
Line_6 $$ FileDialog fd --> Line_11 $$ in = new FileInputStream(new File(fd.getDirectory(), fd.getFile())) [FD]
Line_7 $$ fd = new FileDialog(new Frame(), "Find a file to deflate", FileDialog.LOAD) --> Line_11 $$ in = new FileInputStream(new File(fd.getDirectory(), fd.getFile())) [FD]
Line_5 $$ FileOutputStream fos --> Line_12 $$ fos = new FileOutputStream(new File("Deflated.out")) [FD]
Line_4 $$ DeflaterOutputStream out --> Line_13 $$ out = new DeflaterOutputStream(fos, new Deflater(Deflater.DEFLATED, true)) [FD]
Line_14 $$ int bytes_read = 0 --> Line_16 $$ while ((bytes_read = in.read(buffer)) != -1) [FD]
Line_3 $$ FileInputStream in --> Line_16 $$ while ((bytes_read = in.read(buffer)) != -1) [FD]
Line_11 $$ in = new FileInputStream(new File(fd.getDirectory(), fd.getFile())) --> Line_16 $$ while ((bytes_read = in.read(buffer)) != -1) [FD]
Line_15 $$ byte[] buffer = new byte[1024] --> Line_16 $$ while ((bytes_read = in.read(buffer)) != -1) [FD]
Line_16 $$ while ((bytes_read = in.read(buffer)) != -1) --> Line_17 $$ out.write(buffer, 0, bytes_read) [CD]
Line_16 $$ while ((bytes_read = in.read(buffer)) != -1) --> Line_17 $$ out.write(buffer, 0, bytes_read) [FD]
Line_4 $$ DeflaterOutputStream out --> Line_17 $$ out.write(buffer, 0, bytes_read) [FD]
Line_13 $$ out = new DeflaterOutputStream(fos, new Deflater(Deflater.DEFLATED, true)) --> Line_17 $$ out.write(buffer, 0, bytes_read) [FD]
Line_15 $$ byte[] buffer = new byte[1024] --> Line_17 $$ out.write(buffer, 0, bytes_read) [FD]
Line_14 $$ int bytes_read = 0 --> Line_17 $$ out.write(buffer, 0, bytes_read) [FD]
Line_5 $$ FileOutputStream fos --> Line_19 $$ fos.flush() [FD]
Line_12 $$ fos = new FileOutputStream(new File("Deflated.out")) --> Line_19 $$ fos.flush() [FD]
Line_5 $$ FileOutputStream fos --> Line_20 $$ fos.close() [FD]
Line_12 $$ fos = new FileOutputStream(new File("Deflated.out")) --> Line_20 $$ fos.close() [FD]
Line_4 $$ DeflaterOutputStream out --> Line_21 $$ out.flush() [FD]
Line_13 $$ out = new DeflaterOutputStream(fos, new Deflater(Deflater.DEFLATED, true)) --> Line_21 $$ out.flush() [FD]
Line_4 $$ DeflaterOutputStream out --> Line_22 $$ out.close() [FD]
Line_13 $$ out = new DeflaterOutputStream(fos, new Deflater(Deflater.DEFLATED, true)) --> Line_22 $$ out.close() [FD]
Line_3 $$ FileInputStream in --> Line_23 $$ in.close() [FD]
Line_11 $$ in = new FileInputStream(new File(fd.getDirectory(), fd.getFile())) --> Line_23 $$ in.close() [FD]
Line_9 $$ if (fd.getFile() != null) --> Line_27 $$ System.out.println("Done") [CD]
