Line_2 $$ public static void copy(File src, File dest) throws IOException --> Line_3 $$ log.info("Copying " + src.getAbsolutePath() + " to " + dest.getAbsolutePath()) [CD]
Line_2 $$ public static void copy(File src, File dest) throws IOException --> Line_3 $$ log.info("Copying " + src.getAbsolutePath() + " to " + dest.getAbsolutePath()) [FD]
Line_2 $$ public static void copy(File src, File dest) throws IOException --> Line_4 $$ throw new IOException("File not found: " + src.getAbsolutePath()) [CD]
Line_2 $$ public static void copy(File src, File dest) throws IOException --> Line_4 $$ throw new IOException("File not found: " + src.getAbsolutePath()) [FD]
Line_2 $$ public static void copy(File src, File dest) throws IOException --> Line_5 $$ throw new IOException("Source not readable: " + src.getAbsolutePath()) [CD]
Line_2 $$ public static void copy(File src, File dest) throws IOException --> Line_5 $$ throw new IOException("Source not readable: " + src.getAbsolutePath()) [FD]
Line_2 $$ public static void copy(File src, File dest) throws IOException --> Line_6 $$ if (src.isDirectory()) [CD]
Line_2 $$ public static void copy(File src, File dest) throws IOException --> Line_6 $$ if (src.isDirectory()) [FD]
Line_6 $$ if (src.isDirectory()) --> Line_7 $$ throw new IOException("Could not create direcotry: " + dest.getAbsolutePath()) [CD]
Line_2 $$ public static void copy(File src, File dest) throws IOException --> Line_7 $$ throw new IOException("Could not create direcotry: " + dest.getAbsolutePath()) [FD]
Line_6 $$ if (src.isDirectory()) --> Line_8 $$ String children[] = src.list() [CD]
Line_2 $$ public static void copy(File src, File dest) throws IOException --> Line_8 $$ String children[] = src.list() [FD]
Line_10 $$ File src1 = new File(src, child) --> Line_12 $$ copy(src1, dst1) [FD]
Line_11 $$ File dst1 = new File(dest, child) --> Line_12 $$ copy(src1, dst1) [FD]
Line_6 $$ if (src.isDirectory()) --> Line_15 $$ FileInputStream fin = null [CD]
Line_6 $$ if (src.isDirectory()) --> Line_16 $$ FileOutputStream fout = null [CD]
Line_6 $$ if (src.isDirectory()) --> Line_17 $$ byte[] buffer = new byte[4096] [CD]
Line_6 $$ if (src.isDirectory()) --> Line_18 $$ int bytesRead [CD]
Line_6 $$ if (src.isDirectory()) --> Line_19 $$ fin = new FileInputStream(src) [CD]
Line_15 $$ FileInputStream fin = null --> Line_19 $$ fin = new FileInputStream(src) [FD]
Line_6 $$ if (src.isDirectory()) --> Line_20 $$ fout = new FileOutputStream(dest) [CD]
Line_16 $$ FileOutputStream fout = null --> Line_20 $$ fout = new FileOutputStream(dest) [FD]
Line_6 $$ if (src.isDirectory()) --> Line_21 $$ while ((bytesRead = fin.read(buffer)) >= 0) fout.write(buffer, 0, bytesRead) [CD]
Line_18 $$ int bytesRead --> Line_21 $$ while ((bytesRead = fin.read(buffer)) >= 0) fout.write(buffer, 0, bytesRead) [FD]
Line_15 $$ FileInputStream fin = null --> Line_21 $$ while ((bytesRead = fin.read(buffer)) >= 0) fout.write(buffer, 0, bytesRead) [FD]
Line_19 $$ fin = new FileInputStream(src) --> Line_21 $$ while ((bytesRead = fin.read(buffer)) >= 0) fout.write(buffer, 0, bytesRead) [FD]
Line_17 $$ byte[] buffer = new byte[4096] --> Line_21 $$ while ((bytesRead = fin.read(buffer)) >= 0) fout.write(buffer, 0, bytesRead) [FD]
Line_16 $$ FileOutputStream fout = null --> Line_21 $$ while ((bytesRead = fin.read(buffer)) >= 0) fout.write(buffer, 0, bytesRead) [FD]
Line_20 $$ fout = new FileOutputStream(dest) --> Line_21 $$ while ((bytesRead = fin.read(buffer)) >= 0) fout.write(buffer, 0, bytesRead) [FD]
Line_6 $$ if (src.isDirectory()) --> Line_22 $$ if (fin != null) [CD]
Line_15 $$ FileInputStream fin = null --> Line_22 $$ if (fin != null) [FD]
Line_19 $$ fin = new FileInputStream(src) --> Line_22 $$ if (fin != null) [FD]
Line_22 $$ if (fin != null) --> Line_23 $$ fin.close() [CD]
Line_15 $$ FileInputStream fin = null --> Line_23 $$ fin.close() [FD]
Line_19 $$ fin = new FileInputStream(src) --> Line_23 $$ fin.close() [FD]
Line_6 $$ if (src.isDirectory()) --> Line_25 $$ if (fout != null) [CD]
Line_16 $$ FileOutputStream fout = null --> Line_25 $$ if (fout != null) [FD]
Line_20 $$ fout = new FileOutputStream(dest) --> Line_25 $$ if (fout != null) [FD]
Line_25 $$ if (fout != null) --> Line_26 $$ fout.close() [CD]
Line_16 $$ FileOutputStream fout = null --> Line_26 $$ fout.close() [FD]
Line_20 $$ fout = new FileOutputStream(dest) --> Line_26 $$ fout.close() [FD]
