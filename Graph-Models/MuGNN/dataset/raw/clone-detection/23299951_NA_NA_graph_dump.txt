Line_2 $$ private void readFromFile1() throws DException --> Line_3 $$ URL url1 = null [CD]
Line_2 $$ private void readFromFile1() throws DException --> Line_4 $$ if (url == null) [CD]
Line_4 $$ if (url == null) --> Line_5 $$ url = getClass().getResource("/com/daffodilwoods/daffodildb/utils/parser/parser.schema") [CD]
Line_3 $$ URL url1 = null --> Line_13 $$ url1 = new URL(url.getProtocol() + ":" + url.getPath() + "/parser.schema") [FD]
Line_4 $$ if (url == null) --> Line_17 $$ if (url1 == null) [CD]
Line_3 $$ URL url1 = null --> Line_17 $$ if (url1 == null) [FD]
Line_13 $$ url1 = new URL(url.getProtocol() + ":" + url.getPath() + "/parser.schema") --> Line_17 $$ if (url1 == null) [FD]
Line_3 $$ URL url1 = null --> Line_22 $$ url1 = new URL(url.getProtocol() + ":" + url.getPath() + "/parser.schema") [FD]
Line_13 $$ url1 = new URL(url.getProtocol() + ":" + url.getPath() + "/parser.schema") --> Line_22 $$ url1 = new URL(url.getProtocol() + ":" + url.getPath() + "/parser.schema") [FD]
Line_2 $$ private void readFromFile1() throws DException --> Line_27 $$ ArrayList arr1 = null [CD]
Line_2 $$ private void readFromFile1() throws DException --> Line_28 $$ StringBuffer rule = null [CD]
Line_3 $$ URL url1 = null --> Line_30 $$ LineNumberReader raf = new LineNumberReader(new BufferedReader(new InputStreamReader(url1.openStream()))) [FD]
Line_13 $$ url1 = new URL(url.getProtocol() + ":" + url.getPath() + "/parser.schema") --> Line_30 $$ LineNumberReader raf = new LineNumberReader(new BufferedReader(new InputStreamReader(url1.openStream()))) [FD]
Line_22 $$ url1 = new URL(url.getProtocol() + ":" + url.getPath() + "/parser.schema") --> Line_30 $$ LineNumberReader raf = new LineNumberReader(new BufferedReader(new InputStreamReader(url1.openStream()))) [FD]
Line_27 $$ ArrayList arr1 = null --> Line_31 $$ arr1 = new ArrayList() [FD]
Line_28 $$ StringBuffer rule = null --> Line_32 $$ rule = new StringBuffer("") [FD]
Line_33 $$ while (true) --> Line_34 $$ String str1 = raf.readLine() [CD]
Line_30 $$ LineNumberReader raf = new LineNumberReader(new BufferedReader(new InputStreamReader(url1.openStream()))) --> Line_34 $$ String str1 = raf.readLine() [FD]
Line_33 $$ while (true) --> Line_35 $$ if (str1 == null) [CD]
Line_34 $$ String str1 = raf.readLine() --> Line_35 $$ if (str1 == null) [FD]
Line_33 $$ while (true) --> Line_38 $$ String str = str1.trim() [CD]
Line_34 $$ String str1 = raf.readLine() --> Line_38 $$ String str = str1.trim() [FD]
Line_33 $$ while (true) --> Line_39 $$ if (str.length() == 0) [CD]
Line_38 $$ String str = str1.trim() --> Line_39 $$ if (str.length() == 0) [FD]
Line_39 $$ if (str.length() == 0) --> Line_40 $$ if (rule.length() > 0) [CD]
Line_28 $$ StringBuffer rule = null --> Line_40 $$ if (rule.length() > 0) [FD]
Line_32 $$ rule = new StringBuffer("") --> Line_40 $$ if (rule.length() > 0) [FD]
Line_40 $$ if (rule.length() > 0) --> Line_41 $$ arr1.add(rule.toString()) [CD]
Line_27 $$ ArrayList arr1 = null --> Line_41 $$ arr1.add(rule.toString()) [FD]
Line_31 $$ arr1 = new ArrayList() --> Line_41 $$ arr1.add(rule.toString()) [FD]
Line_28 $$ StringBuffer rule = null --> Line_41 $$ arr1.add(rule.toString()) [FD]
Line_32 $$ rule = new StringBuffer("") --> Line_41 $$ arr1.add(rule.toString()) [FD]
Line_39 $$ if (str.length() == 0) --> Line_43 $$ rule = new StringBuffer("") [CD]
Line_28 $$ StringBuffer rule = null --> Line_43 $$ rule = new StringBuffer("") [FD]
Line_32 $$ rule = new StringBuffer("") --> Line_43 $$ rule = new StringBuffer("") [FD]
Line_39 $$ if (str.length() == 0) --> Line_45 $$ rule.append(" ").append(str) [CD]
Line_38 $$ String str = str1.trim() --> Line_45 $$ rule.append(" ").append(str) [FD]
Line_43 $$ rule = new StringBuffer("") --> Line_45 $$ rule.append(" ").append(str) [FD]
Line_28 $$ StringBuffer rule = null --> Line_45 $$ rule.append(" ").append(str) [FD]
Line_32 $$ rule = new StringBuffer("") --> Line_45 $$ rule.append(" ").append(str) [FD]
Line_30 $$ LineNumberReader raf = new LineNumberReader(new BufferedReader(new InputStreamReader(url1.openStream()))) --> Line_48 $$ raf.close() [FD]
Line_2 $$ private void readFromFile1() throws DException --> Line_53 $$ arr1.add(rule.toString()) [CD]
Line_43 $$ rule = new StringBuffer("") --> Line_53 $$ arr1.add(rule.toString()) [FD]
Line_28 $$ StringBuffer rule = null --> Line_53 $$ arr1.add(rule.toString()) [FD]
Line_32 $$ rule = new StringBuffer("") --> Line_53 $$ arr1.add(rule.toString()) [FD]
Line_27 $$ ArrayList arr1 = null --> Line_53 $$ arr1.add(rule.toString()) [FD]
Line_31 $$ arr1 = new ArrayList() --> Line_53 $$ arr1.add(rule.toString()) [FD]
Line_2 $$ private void readFromFile1() throws DException --> Line_54 $$ for (int i = 0; i < arr1.size(); i++) [CD]
Line_27 $$ ArrayList arr1 = null --> Line_54 $$ for (int i = 0; i < arr1.size(); i++) [FD]
Line_31 $$ arr1 = new ArrayList() --> Line_54 $$ for (int i = 0; i < arr1.size(); i++) [FD]
Line_54 $$ for (int i = 0; i < arr1.size(); i++) --> Line_55 $$ String str = (String) arr1.get(i) [CD]
Line_54 $$ for (int i = 0; i < arr1.size(); i++) --> Line_55 $$ String str = (String) arr1.get(i) [FD]
Line_27 $$ ArrayList arr1 = null --> Line_55 $$ String str = (String) arr1.get(i) [FD]
Line_31 $$ arr1 = new ArrayList() --> Line_55 $$ String str = (String) arr1.get(i) [FD]
Line_54 $$ for (int i = 0; i < arr1.size(); i++) --> Line_56 $$ int index = str.indexOf("::=") [CD]
Line_55 $$ String str = (String) arr1.get(i) --> Line_56 $$ int index = str.indexOf("::=") [FD]
Line_38 $$ String str = str1.trim() --> Line_56 $$ int index = str.indexOf("::=") [FD]
Line_54 $$ for (int i = 0; i < arr1.size(); i++) --> Line_57 $$ if (index == -1) [CD]
Line_56 $$ int index = str.indexOf("::=") --> Line_57 $$ if (index == -1) [FD]
Line_57 $$ if (index == -1) --> Line_58 $$ P.pln("Error " + str) [CD]
Line_54 $$ for (int i = 0; i < arr1.size(); i++) --> Line_61 $$ String key = str.substring(0, index).trim() [CD]
Line_55 $$ String str = (String) arr1.get(i) --> Line_61 $$ String key = str.substring(0, index).trim() [FD]
Line_38 $$ String str = str1.trim() --> Line_61 $$ String key = str.substring(0, index).trim() [FD]
Line_56 $$ int index = str.indexOf("::=") --> Line_61 $$ String key = str.substring(0, index).trim() [FD]
Line_54 $$ for (int i = 0; i < arr1.size(); i++) --> Line_62 $$ String value = str.substring(index + 3).trim() [CD]
Line_55 $$ String str = (String) arr1.get(i) --> Line_62 $$ String value = str.substring(index + 3).trim() [FD]
Line_38 $$ String str = str1.trim() --> Line_62 $$ String value = str.substring(index + 3).trim() [FD]
Line_54 $$ for (int i = 0; i < arr1.size(); i++) --> Line_63 $$ Object o = fileEntries.put(key, value) [CD]
Line_61 $$ String key = str.substring(0, index).trim() --> Line_63 $$ Object o = fileEntries.put(key, value) [FD]
Line_62 $$ String value = str.substring(index + 3).trim() --> Line_63 $$ Object o = fileEntries.put(key, value) [FD]
Line_54 $$ for (int i = 0; i < arr1.size(); i++) --> Line_64 $$ if (o != null) [CD]
Line_63 $$ Object o = fileEntries.put(key, value) --> Line_64 $$ if (o != null) [FD]
Line_64 $$ if (o != null) --> Line_65 $$ new Exception("Duplicate Defination for Rule [" + key + "] Value [" + value + "] Is Replaced By  [" + o + "]").printStackTrace() [CD]
Line_43 $$ rule = new StringBuffer("") --> Line_40 $$ if (rule.length() > 0) [FD]
Line_43 $$ rule = new StringBuffer("") --> Line_41 $$ arr1.add(rule.toString()) [FD]
