Line_2 $$ public static void main(String[] args) --> Line_3 $$ System.out.println("Chapter 16: example SignedPdf") [CD]
Line_2 $$ public static void main(String[] args) --> Line_4 $$ System.out.println("-> Creates a signed PDF;") [CD]
Line_2 $$ public static void main(String[] args) --> Line_5 $$ System.out.println("-> jars needed: iText.jar") [CD]
Line_2 $$ public static void main(String[] args) --> Line_6 $$ System.out.println("-> files generated in /results subdirectory:") [CD]
Line_2 $$ public static void main(String[] args) --> Line_7 $$ System.out.println("   Resource needed: .keystore") [CD]
Line_2 $$ public static void main(String[] args) --> Line_8 $$ System.out.println("-> Resulting PDFs: unsigned_message.pdf, signed_message.pdf,") [CD]
Line_2 $$ public static void main(String[] args) --> Line_9 $$ System.out.println("   corrupted_message.pdf, signed_message_invisible.pdf,") [CD]
Line_2 $$ public static void main(String[] args) --> Line_10 $$ System.out.println("   double_signed_message.pdf, revision_1.pdf and revision_2.pdf") [CD]
Line_2 $$ public static void main(String[] args) --> Line_11 $$ createPdf() [CD]
Line_2 $$ public static void main(String[] args) --> Line_12 $$ PdfReader reader [CD]
Line_14 $$ KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType()) --> Line_15 $$ ks.load(new FileInputStream("resources/in_action/chapter16/.keystore"), "f00b4r".toCharArray()) [FD]
Line_14 $$ KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType()) --> Line_16 $$ PrivateKey key = (PrivateKey) ks.getKey("foobar", "r4b00f".toCharArray()) [FD]
Line_14 $$ KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType()) --> Line_17 $$ Certificate[] chain = ks.getCertificateChain("foobar") [FD]
Line_12 $$ PdfReader reader --> Line_18 $$ reader = new PdfReader("results/in_action/chapter16/unsigned_message.pdf") [FD]
Line_12 $$ PdfReader reader --> Line_20 $$ PdfStamper stamper = PdfStamper.createSignature(reader, os, '\0') [FD]
Line_18 $$ reader = new PdfReader("results/in_action/chapter16/unsigned_message.pdf") --> Line_20 $$ PdfStamper stamper = PdfStamper.createSignature(reader, os, '\0') [FD]
Line_19 $$ FileOutputStream os = new FileOutputStream("results/in_action/chapter16/signed_message.pdf") --> Line_20 $$ PdfStamper stamper = PdfStamper.createSignature(reader, os, '\0') [FD]
Line_20 $$ PdfStamper stamper = PdfStamper.createSignature(reader, os, '\0') --> Line_21 $$ PdfSignatureAppearance appearance = stamper.getSignatureAppearance() [FD]
Line_21 $$ PdfSignatureAppearance appearance = stamper.getSignatureAppearance() --> Line_22 $$ appearance.setCrypto(key, chain, null, PdfSignatureAppearance.SELF_SIGNED) [FD]
Line_16 $$ PrivateKey key = (PrivateKey) ks.getKey("foobar", "r4b00f".toCharArray()) --> Line_22 $$ appearance.setCrypto(key, chain, null, PdfSignatureAppearance.SELF_SIGNED) [FD]
Line_17 $$ Certificate[] chain = ks.getCertificateChain("foobar") --> Line_22 $$ appearance.setCrypto(key, chain, null, PdfSignatureAppearance.SELF_SIGNED) [FD]
Line_21 $$ PdfSignatureAppearance appearance = stamper.getSignatureAppearance() --> Line_23 $$ appearance.setCertificationLevel(PdfSignatureAppearance.CERTIFIED_FORM_FILLING) [FD]
Line_21 $$ PdfSignatureAppearance appearance = stamper.getSignatureAppearance() --> Line_24 $$ appearance.setReason("It's personal.") [FD]
Line_21 $$ PdfSignatureAppearance appearance = stamper.getSignatureAppearance() --> Line_25 $$ appearance.setLocation("Foobar") [FD]
Line_21 $$ PdfSignatureAppearance appearance = stamper.getSignatureAppearance() --> Line_26 $$ appearance.setVisibleSignature(new Rectangle(30, 750, 500, 565), 1, null) [FD]
Line_20 $$ PdfStamper stamper = PdfStamper.createSignature(reader, os, '\0') --> Line_27 $$ stamper.close() [FD]
Line_12 $$ PdfReader reader --> Line_44 $$ reader = new PdfReader("results/in_action/chapter16/signed_message.pdf") [FD]
Line_18 $$ reader = new PdfReader("results/in_action/chapter16/unsigned_message.pdf") --> Line_44 $$ reader = new PdfReader("results/in_action/chapter16/signed_message.pdf") [FD]
Line_12 $$ PdfReader reader --> Line_45 $$ Document document = new Document(reader.getPageSizeWithRotation(1)) [FD]
Line_18 $$ reader = new PdfReader("results/in_action/chapter16/unsigned_message.pdf") --> Line_45 $$ Document document = new Document(reader.getPageSizeWithRotation(1)) [FD]
Line_44 $$ reader = new PdfReader("results/in_action/chapter16/signed_message.pdf") --> Line_45 $$ Document document = new Document(reader.getPageSizeWithRotation(1)) [FD]
Line_45 $$ Document document = new Document(reader.getPageSizeWithRotation(1)) --> Line_47 $$ document.open() [FD]
Line_46 $$ PdfCopy copy = new PdfCopy(document, new FileOutputStream("results/in_action/chapter16/corrupted_message.pdf")) --> Line_48 $$ copy.addPage(copy.getImportedPage(reader, 1)) [FD]
Line_12 $$ PdfReader reader --> Line_48 $$ copy.addPage(copy.getImportedPage(reader, 1)) [FD]
Line_18 $$ reader = new PdfReader("results/in_action/chapter16/unsigned_message.pdf") --> Line_48 $$ copy.addPage(copy.getImportedPage(reader, 1)) [FD]
Line_44 $$ reader = new PdfReader("results/in_action/chapter16/signed_message.pdf") --> Line_48 $$ copy.addPage(copy.getImportedPage(reader, 1)) [FD]
Line_45 $$ Document document = new Document(reader.getPageSizeWithRotation(1)) --> Line_49 $$ document.close() [FD]
Line_14 $$ KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType()) --> Line_57 $$ ks.load(new FileInputStream("resources/in_action/chapter16/.keystore"), "f00b4r".toCharArray()) [FD]
Line_14 $$ KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType()) --> Line_58 $$ PrivateKey key = (PrivateKey) ks.getKey("foobar", "r4b00f".toCharArray()) [FD]
Line_14 $$ KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType()) --> Line_59 $$ Certificate[] chain = ks.getCertificateChain("foobar") [FD]
Line_12 $$ PdfReader reader --> Line_60 $$ reader = new PdfReader("results/in_action/chapter16/unsigned_message.pdf") [FD]
Line_18 $$ reader = new PdfReader("results/in_action/chapter16/unsigned_message.pdf") --> Line_60 $$ reader = new PdfReader("results/in_action/chapter16/unsigned_message.pdf") [FD]
Line_44 $$ reader = new PdfReader("results/in_action/chapter16/signed_message.pdf") --> Line_60 $$ reader = new PdfReader("results/in_action/chapter16/unsigned_message.pdf") [FD]
Line_12 $$ PdfReader reader --> Line_62 $$ PdfStamper stamper = PdfStamper.createSignature(reader, os, '\0') [FD]
Line_18 $$ reader = new PdfReader("results/in_action/chapter16/unsigned_message.pdf") --> Line_62 $$ PdfStamper stamper = PdfStamper.createSignature(reader, os, '\0') [FD]
Line_44 $$ reader = new PdfReader("results/in_action/chapter16/signed_message.pdf") --> Line_62 $$ PdfStamper stamper = PdfStamper.createSignature(reader, os, '\0') [FD]
Line_60 $$ reader = new PdfReader("results/in_action/chapter16/unsigned_message.pdf") --> Line_62 $$ PdfStamper stamper = PdfStamper.createSignature(reader, os, '\0') [FD]
Line_19 $$ FileOutputStream os = new FileOutputStream("results/in_action/chapter16/signed_message.pdf") --> Line_62 $$ PdfStamper stamper = PdfStamper.createSignature(reader, os, '\0') [FD]
Line_20 $$ PdfStamper stamper = PdfStamper.createSignature(reader, os, '\0') --> Line_63 $$ PdfSignatureAppearance appearance = stamper.getSignatureAppearance() [FD]
Line_21 $$ PdfSignatureAppearance appearance = stamper.getSignatureAppearance() --> Line_64 $$ appearance.setCrypto(key, chain, null, PdfSignatureAppearance.SELF_SIGNED) [FD]
Line_16 $$ PrivateKey key = (PrivateKey) ks.getKey("foobar", "r4b00f".toCharArray()) --> Line_64 $$ appearance.setCrypto(key, chain, null, PdfSignatureAppearance.SELF_SIGNED) [FD]
Line_17 $$ Certificate[] chain = ks.getCertificateChain("foobar") --> Line_64 $$ appearance.setCrypto(key, chain, null, PdfSignatureAppearance.SELF_SIGNED) [FD]
Line_21 $$ PdfSignatureAppearance appearance = stamper.getSignatureAppearance() --> Line_65 $$ appearance.setReason("It's personal.") [FD]
Line_21 $$ PdfSignatureAppearance appearance = stamper.getSignatureAppearance() --> Line_66 $$ appearance.setLocation("Foobar") [FD]
Line_20 $$ PdfStamper stamper = PdfStamper.createSignature(reader, os, '\0') --> Line_67 $$ stamper.close() [FD]
Line_12 $$ PdfReader reader --> Line_72 $$ reader = new PdfReader("results/in_action/chapter16/signed_message.pdf") [FD]
Line_18 $$ reader = new PdfReader("results/in_action/chapter16/unsigned_message.pdf") --> Line_72 $$ reader = new PdfReader("results/in_action/chapter16/signed_message.pdf") [FD]
Line_44 $$ reader = new PdfReader("results/in_action/chapter16/signed_message.pdf") --> Line_72 $$ reader = new PdfReader("results/in_action/chapter16/signed_message.pdf") [FD]
Line_60 $$ reader = new PdfReader("results/in_action/chapter16/unsigned_message.pdf") --> Line_72 $$ reader = new PdfReader("results/in_action/chapter16/signed_message.pdf") [FD]
Line_14 $$ KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType()) --> Line_74 $$ ks.load(new FileInputStream("resources/in_action/chapter16/.keystore"), "f00b4r".toCharArray()) [FD]
Line_14 $$ KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType()) --> Line_75 $$ PrivateKey key = (PrivateKey) ks.getKey("foobar", "r4b00f".toCharArray()) [FD]
Line_14 $$ KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType()) --> Line_76 $$ Certificate[] chain = ks.getCertificateChain("foobar") [FD]
Line_12 $$ PdfReader reader --> Line_78 $$ PdfStamper stamper = PdfStamper.createSignature(reader, os, '\0', null, true) [FD]
Line_18 $$ reader = new PdfReader("results/in_action/chapter16/unsigned_message.pdf") --> Line_78 $$ PdfStamper stamper = PdfStamper.createSignature(reader, os, '\0', null, true) [FD]
Line_44 $$ reader = new PdfReader("results/in_action/chapter16/signed_message.pdf") --> Line_78 $$ PdfStamper stamper = PdfStamper.createSignature(reader, os, '\0', null, true) [FD]
Line_60 $$ reader = new PdfReader("results/in_action/chapter16/unsigned_message.pdf") --> Line_78 $$ PdfStamper stamper = PdfStamper.createSignature(reader, os, '\0', null, true) [FD]
Line_72 $$ reader = new PdfReader("results/in_action/chapter16/signed_message.pdf") --> Line_78 $$ PdfStamper stamper = PdfStamper.createSignature(reader, os, '\0', null, true) [FD]
Line_19 $$ FileOutputStream os = new FileOutputStream("results/in_action/chapter16/signed_message.pdf") --> Line_78 $$ PdfStamper stamper = PdfStamper.createSignature(reader, os, '\0', null, true) [FD]
Line_20 $$ PdfStamper stamper = PdfStamper.createSignature(reader, os, '\0') --> Line_79 $$ PdfSignatureAppearance appearance = stamper.getSignatureAppearance() [FD]
Line_21 $$ PdfSignatureAppearance appearance = stamper.getSignatureAppearance() --> Line_80 $$ appearance.setCrypto(key, chain, null, PdfSignatureAppearance.SELF_SIGNED) [FD]
Line_16 $$ PrivateKey key = (PrivateKey) ks.getKey("foobar", "r4b00f".toCharArray()) --> Line_80 $$ appearance.setCrypto(key, chain, null, PdfSignatureAppearance.SELF_SIGNED) [FD]
Line_17 $$ Certificate[] chain = ks.getCertificateChain("foobar") --> Line_80 $$ appearance.setCrypto(key, chain, null, PdfSignatureAppearance.SELF_SIGNED) [FD]
Line_21 $$ PdfSignatureAppearance appearance = stamper.getSignatureAppearance() --> Line_81 $$ appearance.setReason("Double signed.") [FD]
Line_21 $$ PdfSignatureAppearance appearance = stamper.getSignatureAppearance() --> Line_82 $$ appearance.setLocation("Foobar") [FD]
Line_21 $$ PdfSignatureAppearance appearance = stamper.getSignatureAppearance() --> Line_83 $$ appearance.setVisibleSignature(new Rectangle(300, 750, 500, 800), 1, "secondsig") [FD]
Line_20 $$ PdfStamper stamper = PdfStamper.createSignature(reader, os, '\0') --> Line_84 $$ stamper.close() [FD]
Line_89 $$ CertificateFactory cf = CertificateFactory.getInstance("X509") --> Line_90 $$ Collection col = cf.generateCertificates(new FileInputStream("resources/in_action/chapter16/foobar.cer")) [FD]
Line_14 $$ KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType()) --> Line_92 $$ ks.load(null, null) [FD]
Line_90 $$ Collection col = cf.generateCertificates(new FileInputStream("resources/in_action/chapter16/foobar.cer")) --> Line_93 $$ for (Iterator it = col.iterator(); it.hasNext(); ) [FD]
Line_93 $$ for (Iterator it = col.iterator(); it.hasNext(); ) --> Line_94 $$ X509Certificate cert = (X509Certificate) it.next() [CD]
Line_93 $$ for (Iterator it = col.iterator(); it.hasNext(); ) --> Line_94 $$ X509Certificate cert = (X509Certificate) it.next() [FD]
Line_93 $$ for (Iterator it = col.iterator(); it.hasNext(); ) --> Line_95 $$ System.out.println(cert.getIssuerDN().getName()) [CD]
Line_94 $$ X509Certificate cert = (X509Certificate) it.next() --> Line_95 $$ System.out.println(cert.getIssuerDN().getName()) [FD]
Line_93 $$ for (Iterator it = col.iterator(); it.hasNext(); ) --> Line_96 $$ ks.setCertificateEntry(cert.getSerialNumber().toString(Character.MAX_RADIX), cert) [CD]
Line_14 $$ KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType()) --> Line_96 $$ ks.setCertificateEntry(cert.getSerialNumber().toString(Character.MAX_RADIX), cert) [FD]
Line_94 $$ X509Certificate cert = (X509Certificate) it.next() --> Line_96 $$ ks.setCertificateEntry(cert.getSerialNumber().toString(Character.MAX_RADIX), cert) [FD]
Line_12 $$ PdfReader reader --> Line_98 $$ reader = new PdfReader("results/in_action/chapter16/double_signed_message.pdf") [FD]
Line_18 $$ reader = new PdfReader("results/in_action/chapter16/unsigned_message.pdf") --> Line_98 $$ reader = new PdfReader("results/in_action/chapter16/double_signed_message.pdf") [FD]
Line_44 $$ reader = new PdfReader("results/in_action/chapter16/signed_message.pdf") --> Line_98 $$ reader = new PdfReader("results/in_action/chapter16/double_signed_message.pdf") [FD]
Line_60 $$ reader = new PdfReader("results/in_action/chapter16/unsigned_message.pdf") --> Line_98 $$ reader = new PdfReader("results/in_action/chapter16/double_signed_message.pdf") [FD]
Line_72 $$ reader = new PdfReader("results/in_action/chapter16/signed_message.pdf") --> Line_98 $$ reader = new PdfReader("results/in_action/chapter16/double_signed_message.pdf") [FD]
Line_12 $$ PdfReader reader --> Line_99 $$ AcroFields af = reader.getAcroFields() [FD]
Line_18 $$ reader = new PdfReader("results/in_action/chapter16/unsigned_message.pdf") --> Line_99 $$ AcroFields af = reader.getAcroFields() [FD]
Line_44 $$ reader = new PdfReader("results/in_action/chapter16/signed_message.pdf") --> Line_99 $$ AcroFields af = reader.getAcroFields() [FD]
Line_60 $$ reader = new PdfReader("results/in_action/chapter16/unsigned_message.pdf") --> Line_99 $$ AcroFields af = reader.getAcroFields() [FD]
Line_72 $$ reader = new PdfReader("results/in_action/chapter16/signed_message.pdf") --> Line_99 $$ AcroFields af = reader.getAcroFields() [FD]
Line_98 $$ reader = new PdfReader("results/in_action/chapter16/double_signed_message.pdf") --> Line_99 $$ AcroFields af = reader.getAcroFields() [FD]
Line_99 $$ AcroFields af = reader.getAcroFields() --> Line_100 $$ ArrayList names = af.getSignatureNames() [FD]
Line_93 $$ for (Iterator it = col.iterator(); it.hasNext(); ) --> Line_102 $$ for (Iterator it = names.iterator(); it.hasNext(); ) [FD]
Line_100 $$ ArrayList names = af.getSignatureNames() --> Line_102 $$ for (Iterator it = names.iterator(); it.hasNext(); ) [FD]
Line_102 $$ for (Iterator it = names.iterator(); it.hasNext(); ) --> Line_103 $$ name = (String) it.next() [CD]
Line_102 $$ for (Iterator it = names.iterator(); it.hasNext(); ) --> Line_103 $$ name = (String) it.next() [FD]
Line_101 $$ String name --> Line_103 $$ name = (String) it.next() [FD]
Line_93 $$ for (Iterator it = col.iterator(); it.hasNext(); ) --> Line_103 $$ name = (String) it.next() [FD]
Line_102 $$ for (Iterator it = names.iterator(); it.hasNext(); ) --> Line_104 $$ System.out.println("Signature name: " + name) [CD]
Line_102 $$ for (Iterator it = names.iterator(); it.hasNext(); ) --> Line_105 $$ System.out.println("Signature covers whole document: " + af.signatureCoversWholeDocument(name)) [CD]
Line_99 $$ AcroFields af = reader.getAcroFields() --> Line_105 $$ System.out.println("Signature covers whole document: " + af.signatureCoversWholeDocument(name)) [FD]
Line_103 $$ name = (String) it.next() --> Line_105 $$ System.out.println("Signature covers whole document: " + af.signatureCoversWholeDocument(name)) [FD]
Line_101 $$ String name --> Line_105 $$ System.out.println("Signature covers whole document: " + af.signatureCoversWholeDocument(name)) [FD]
Line_102 $$ for (Iterator it = names.iterator(); it.hasNext(); ) --> Line_106 $$ System.out.println("Document revision: " + af.getRevision(name) + " of " + af.getTotalRevisions()) [CD]
Line_99 $$ AcroFields af = reader.getAcroFields() --> Line_106 $$ System.out.println("Document revision: " + af.getRevision(name) + " of " + af.getTotalRevisions()) [FD]
Line_103 $$ name = (String) it.next() --> Line_106 $$ System.out.println("Document revision: " + af.getRevision(name) + " of " + af.getTotalRevisions()) [FD]
Line_101 $$ String name --> Line_106 $$ System.out.println("Document revision: " + af.getRevision(name) + " of " + af.getTotalRevisions()) [FD]
Line_102 $$ for (Iterator it = names.iterator(); it.hasNext(); ) --> Line_107 $$ FileOutputStream os = new FileOutputStream("results/in_action/chapter16/revision_" + af.getRevision(name) + ".pdf") [CD]
Line_99 $$ AcroFields af = reader.getAcroFields() --> Line_107 $$ FileOutputStream os = new FileOutputStream("results/in_action/chapter16/revision_" + af.getRevision(name) + ".pdf") [FD]
Line_103 $$ name = (String) it.next() --> Line_107 $$ FileOutputStream os = new FileOutputStream("results/in_action/chapter16/revision_" + af.getRevision(name) + ".pdf") [FD]
Line_101 $$ String name --> Line_107 $$ FileOutputStream os = new FileOutputStream("results/in_action/chapter16/revision_" + af.getRevision(name) + ".pdf") [FD]
Line_102 $$ for (Iterator it = names.iterator(); it.hasNext(); ) --> Line_108 $$ byte bb[] = new byte[8192] [CD]
Line_102 $$ for (Iterator it = names.iterator(); it.hasNext(); ) --> Line_109 $$ InputStream ip = af.extractRevision(name) [CD]
Line_99 $$ AcroFields af = reader.getAcroFields() --> Line_109 $$ InputStream ip = af.extractRevision(name) [FD]
Line_103 $$ name = (String) it.next() --> Line_109 $$ InputStream ip = af.extractRevision(name) [FD]
Line_101 $$ String name --> Line_109 $$ InputStream ip = af.extractRevision(name) [FD]
Line_102 $$ for (Iterator it = names.iterator(); it.hasNext(); ) --> Line_110 $$ int n = 0 [CD]
Line_102 $$ for (Iterator it = names.iterator(); it.hasNext(); ) --> Line_111 $$ while ((n = ip.read(bb)) > 0) os.write(bb, 0, n) [CD]
Line_110 $$ int n = 0 --> Line_111 $$ while ((n = ip.read(bb)) > 0) os.write(bb, 0, n) [FD]
Line_109 $$ InputStream ip = af.extractRevision(name) --> Line_111 $$ while ((n = ip.read(bb)) > 0) os.write(bb, 0, n) [FD]
Line_107 $$ FileOutputStream os = new FileOutputStream("results/in_action/chapter16/revision_" + af.getRevision(name) + ".pdf") --> Line_111 $$ while ((n = ip.read(bb)) > 0) os.write(bb, 0, n) [FD]
Line_19 $$ FileOutputStream os = new FileOutputStream("results/in_action/chapter16/signed_message.pdf") --> Line_111 $$ while ((n = ip.read(bb)) > 0) os.write(bb, 0, n) [FD]
Line_102 $$ for (Iterator it = names.iterator(); it.hasNext(); ) --> Line_112 $$ os.close() [CD]
Line_107 $$ FileOutputStream os = new FileOutputStream("results/in_action/chapter16/revision_" + af.getRevision(name) + ".pdf") --> Line_112 $$ os.close() [FD]
Line_19 $$ FileOutputStream os = new FileOutputStream("results/in_action/chapter16/signed_message.pdf") --> Line_112 $$ os.close() [FD]
Line_102 $$ for (Iterator it = names.iterator(); it.hasNext(); ) --> Line_113 $$ ip.close() [CD]
Line_109 $$ InputStream ip = af.extractRevision(name) --> Line_113 $$ ip.close() [FD]
Line_102 $$ for (Iterator it = names.iterator(); it.hasNext(); ) --> Line_114 $$ PdfPKCS7 pk = af.verifySignature(name) [CD]
Line_99 $$ AcroFields af = reader.getAcroFields() --> Line_114 $$ PdfPKCS7 pk = af.verifySignature(name) [FD]
Line_103 $$ name = (String) it.next() --> Line_114 $$ PdfPKCS7 pk = af.verifySignature(name) [FD]
Line_101 $$ String name --> Line_114 $$ PdfPKCS7 pk = af.verifySignature(name) [FD]
Line_102 $$ for (Iterator it = names.iterator(); it.hasNext(); ) --> Line_115 $$ Calendar cal = pk.getSignDate() [CD]
Line_102 $$ for (Iterator it = names.iterator(); it.hasNext(); ) --> Line_116 $$ Certificate pkc[] = pk.getCertificates() [CD]
Line_102 $$ for (Iterator it = names.iterator(); it.hasNext(); ) --> Line_117 $$ System.out.println("Subject: " + PdfPKCS7.getSubjectFields(pk.getSigningCertificate())) [CD]
Line_102 $$ for (Iterator it = names.iterator(); it.hasNext(); ) --> Line_118 $$ System.out.println("Document modified: " + !pk.verify()) [CD]
Line_102 $$ for (Iterator it = names.iterator(); it.hasNext(); ) --> Line_119 $$ Object fails[] = PdfPKCS7.verifyCertificates(pkc, ks, null, cal) [CD]
Line_14 $$ KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType()) --> Line_119 $$ Object fails[] = PdfPKCS7.verifyCertificates(pkc, ks, null, cal) [FD]
Line_102 $$ for (Iterator it = names.iterator(); it.hasNext(); ) --> Line_120 $$ System.out.println("Certificates verified against the KeyStore") [CD]
