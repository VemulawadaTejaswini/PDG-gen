Line_2 $$ public static String[] parseM3U(String strURL, Context c) --> Line_3 $$ URL url [CD]
Line_2 $$ public static String[] parseM3U(String strURL, Context c) --> Line_4 $$ URLConnection urlConn = null [CD]
Line_2 $$ public static String[] parseM3U(String strURL, Context c) --> Line_5 $$ String TAG = "parseM3U" [CD]
Line_2 $$ public static String[] parseM3U(String strURL, Context c) --> Line_6 $$ Vector<String> radio = new Vector<String>() [CD]
Line_2 $$ public static String[] parseM3U(String strURL, Context c) --> Line_7 $$ final String filetoken = "http" [CD]
Line_3 $$ URL url --> Line_9 $$ url = new URL(strURL) [FD]
Line_4 $$ URLConnection urlConn = null --> Line_10 $$ urlConn = url.openConnection() [FD]
Line_3 $$ URL url --> Line_10 $$ urlConn = url.openConnection() [FD]
Line_9 $$ url = new URL(strURL) --> Line_10 $$ urlConn = url.openConnection() [FD]
Line_5 $$ String TAG = "parseM3U" --> Line_11 $$ Log.d(TAG, "Got data") [FD]
Line_5 $$ String TAG = "parseM3U" --> Line_13 $$ Log.e(TAG, "Could not connect to " + strURL) [FD]
Line_4 $$ URLConnection urlConn = null --> Line_16 $$ DataInputStream in = new DataInputStream(urlConn.getInputStream()) [FD]
Line_10 $$ urlConn = url.openConnection() --> Line_16 $$ DataInputStream in = new DataInputStream(urlConn.getInputStream()) [FD]
Line_18 $$ String strLine --> Line_19 $$ while ((strLine = br.readLine()) != null) [FD]
Line_17 $$ BufferedReader br = new BufferedReader(new InputStreamReader(in)) --> Line_19 $$ while ((strLine = br.readLine()) != null) [FD]
Line_19 $$ while ((strLine = br.readLine()) != null) --> Line_20 $$ String temp = strLine.toLowerCase() [CD]
Line_19 $$ while ((strLine = br.readLine()) != null) --> Line_20 $$ String temp = strLine.toLowerCase() [FD]
Line_18 $$ String strLine --> Line_20 $$ String temp = strLine.toLowerCase() [FD]
Line_19 $$ while ((strLine = br.readLine()) != null) --> Line_21 $$ Log.d(TAG, strLine) [CD]
Line_19 $$ while ((strLine = br.readLine()) != null) --> Line_21 $$ Log.d(TAG, strLine) [FD]
Line_5 $$ String TAG = "parseM3U" --> Line_21 $$ Log.d(TAG, strLine) [FD]
Line_18 $$ String strLine --> Line_21 $$ Log.d(TAG, strLine) [FD]
Line_19 $$ while ((strLine = br.readLine()) != null) --> Line_22 $$ if (temp.startsWith(filetoken)) [CD]
Line_20 $$ String temp = strLine.toLowerCase() --> Line_22 $$ if (temp.startsWith(filetoken)) [FD]
Line_7 $$ final String filetoken = "http" --> Line_22 $$ if (temp.startsWith(filetoken)) [FD]
Line_22 $$ if (temp.startsWith(filetoken)) --> Line_23 $$ radio.add(temp) [CD]
Line_6 $$ Vector<String> radio = new Vector<String>() --> Line_23 $$ radio.add(temp) [FD]
Line_20 $$ String temp = strLine.toLowerCase() --> Line_23 $$ radio.add(temp) [FD]
Line_22 $$ if (temp.startsWith(filetoken)) --> Line_24 $$ Log.d(TAG, "Found audio " + temp) [CD]
Line_5 $$ String TAG = "parseM3U" --> Line_24 $$ Log.d(TAG, "Found audio " + temp) [FD]
Line_17 $$ BufferedReader br = new BufferedReader(new InputStreamReader(in)) --> Line_27 $$ br.close() [FD]
Line_16 $$ DataInputStream in = new DataInputStream(urlConn.getInputStream()) --> Line_28 $$ in.close() [FD]
Line_5 $$ String TAG = "parseM3U" --> Line_30 $$ Log.e(TAG, "Trouble reading file: " + e.getMessage()) [FD]
Line_2 $$ public static String[] parseM3U(String strURL, Context c) --> Line_32 $$ String[] t = new String[0] [CD]
Line_2 $$ public static String[] parseM3U(String strURL, Context c) --> Line_33 $$ String[] r = null [CD]
Line_2 $$ public static String[] parseM3U(String strURL, Context c) --> Line_34 $$ if (radio.size() != 0) [CD]
Line_6 $$ Vector<String> radio = new Vector<String>() --> Line_34 $$ if (radio.size() != 0) [FD]
Line_34 $$ if (radio.size() != 0) --> Line_35 $$ r = (String[]) radio.toArray(t) [CD]
Line_33 $$ String[] r = null --> Line_35 $$ r = (String[]) radio.toArray(t) [FD]
Line_6 $$ Vector<String> radio = new Vector<String>() --> Line_35 $$ r = (String[]) radio.toArray(t) [FD]
Line_32 $$ String[] t = new String[0] --> Line_35 $$ r = (String[]) radio.toArray(t) [FD]
Line_34 $$ if (radio.size() != 0) --> Line_36 $$ Log.d(TAG, "Found total: " + String.valueOf(r.length)) [CD]
Line_5 $$ String TAG = "parseM3U" --> Line_36 $$ Log.d(TAG, "Found total: " + String.valueOf(r.length)) [FD]
Line_2 $$ public static String[] parseM3U(String strURL, Context c) --> Line_38 $$ return r [CD]
