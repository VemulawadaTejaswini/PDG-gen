Line_2 $$ protected void unZip() throws PersistenceException --> Line_3 $$ boolean newZip = false [CD]
Line_5 $$ if (null == backup) --> Line_7 $$ if (null == mode) [CD]
Line_5 $$ if (null == backup) --> Line_9 $$ logger.debug("Got backup directory [CD]
Line_5 $$ if (null == backup) --> Line_10 $$ if (!backupDirectory.exists() && mode.equals(Context.MODE_NAME_BACKUP)) [CD]
Line_10 $$ if (!backupDirectory.exists() && mode.equals(Context.MODE_NAME_BACKUP)) --> Line_11 $$ newZip = true [CD]
Line_3 $$ boolean newZip = false --> Line_11 $$ newZip = true [FD]
Line_10 $$ if (!backupDirectory.exists() && mode.equals(Context.MODE_NAME_BACKUP)) --> Line_12 $$ backupDirectory.mkdirs() [CD]
Line_10 $$ if (!backupDirectory.exists() && mode.equals(Context.MODE_NAME_BACKUP)) --> Line_13 $$ if (!backupDirectory.exists()) [CD]
Line_5 $$ if (null == backup) --> Line_17 $$ logger.debug("Got zip file [CD]
Line_19 $$ File _explodedDirectory = File.createTempFile("exploded-" + backup.getName() + "-", ".zip") --> Line_20 $$ _explodedDirectory.mkdirs() [FD]
Line_19 $$ File _explodedDirectory = File.createTempFile("exploded-" + backup.getName() + "-", ".zip") --> Line_21 $$ _explodedDirectory.delete() [FD]
Line_19 $$ File _explodedDirectory = File.createTempFile("exploded-" + backup.getName() + "-", ".zip") --> Line_22 $$ backupDirectory = new File(_explodedDirectory.getParentFile(), _explodedDirectory.getName()) [FD]
Line_25 $$ if (!backup.exists() && mode.equals(Context.MODE_NAME_BACKUP)) --> Line_26 $$ newZip = true [CD]
Line_3 $$ boolean newZip = false --> Line_26 $$ newZip = true [FD]
Line_11 $$ newZip = true --> Line_26 $$ newZip = true [FD]
Line_25 $$ if (!backup.exists() && mode.equals(Context.MODE_NAME_BACKUP)) --> Line_27 $$ backup.createNewFile() [CD]
Line_25 $$ if (!backup.exists() && mode.equals(Context.MODE_NAME_BACKUP)) --> Line_28 $$ if (!backup.exists()) [CD]
Line_32 $$ ZipFile zip = new ZipFile(backup) --> Line_33 $$ Enumeration zipFileEntries = zip.entries() [FD]
Line_33 $$ Enumeration zipFileEntries = zip.entries() --> Line_34 $$ while (zipFileEntries.hasMoreElements()) [FD]
Line_34 $$ while (zipFileEntries.hasMoreElements()) --> Line_35 $$ ZipEntry entry = (ZipEntry) zipFileEntries.nextElement() [CD]
Line_33 $$ Enumeration zipFileEntries = zip.entries() --> Line_35 $$ ZipEntry entry = (ZipEntry) zipFileEntries.nextElement() [FD]
Line_34 $$ while (zipFileEntries.hasMoreElements()) --> Line_36 $$ String currentEntry = entry.getName() [CD]
Line_34 $$ while (zipFileEntries.hasMoreElements()) --> Line_37 $$ logger.debug("Inflating: " + entry) [CD]
Line_34 $$ while (zipFileEntries.hasMoreElements()) --> Line_38 $$ File destFile = new File(backupDirectory, currentEntry) [CD]
Line_34 $$ while (zipFileEntries.hasMoreElements()) --> Line_39 $$ File destinationParent = destFile.getParentFile() [CD]
Line_34 $$ while (zipFileEntries.hasMoreElements()) --> Line_40 $$ destinationParent.mkdirs() [CD]
Line_39 $$ File destinationParent = destFile.getParentFile() --> Line_40 $$ destinationParent.mkdirs() [FD]
Line_34 $$ while (zipFileEntries.hasMoreElements()) --> Line_41 $$ if (!entry.isDirectory()) [CD]
Line_41 $$ if (!entry.isDirectory()) --> Line_42 $$ InputStream in = null [CD]
Line_41 $$ if (!entry.isDirectory()) --> Line_43 $$ OutputStream out = null [CD]
Line_42 $$ InputStream in = null --> Line_45 $$ in = zip.getInputStream(entry) [FD]
Line_32 $$ ZipFile zip = new ZipFile(backup) --> Line_45 $$ in = zip.getInputStream(entry) [FD]
Line_43 $$ OutputStream out = null --> Line_46 $$ out = new FileOutputStream(destFile) [FD]
Line_42 $$ InputStream in = null --> Line_47 $$ IOUtils.copy(in, out) [FD]
Line_45 $$ in = zip.getInputStream(entry) --> Line_47 $$ IOUtils.copy(in, out) [FD]
Line_43 $$ OutputStream out = null --> Line_47 $$ IOUtils.copy(in, out) [FD]
Line_46 $$ out = new FileOutputStream(destFile) --> Line_47 $$ IOUtils.copy(in, out) [FD]
Line_43 $$ OutputStream out = null --> Line_49 $$ if (null != out) [FD]
Line_46 $$ out = new FileOutputStream(destFile) --> Line_49 $$ if (null != out) [FD]
Line_42 $$ InputStream in = null --> Line_50 $$ if (null != in) [FD]
Line_45 $$ in = zip.getInputStream(entry) --> Line_50 $$ if (null != in) [FD]
