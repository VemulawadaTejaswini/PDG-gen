Line_2 $$ private static void loadParentProperties(Properties props, ClassLoader cl) throws IOException --> Line_3 $$ String pName = props.getProperty(PARENT_PROPERTIES) [CD]
Line_2 $$ private static void loadParentProperties(Properties props, ClassLoader cl) throws IOException --> Line_3 $$ String pName = props.getProperty(PARENT_PROPERTIES) [FD]
Line_2 $$ private static void loadParentProperties(Properties props, ClassLoader cl) throws IOException --> Line_4 $$ if (pName == null) [CD]
Line_3 $$ String pName = props.getProperty(PARENT_PROPERTIES) --> Line_4 $$ if (pName == null) [FD]
Line_4 $$ if (pName == null) --> Line_5 $$ return [CD]
Line_2 $$ private static void loadParentProperties(Properties props, ClassLoader cl) throws IOException --> Line_7 $$ URL url = cl.getResource(pName) [CD]
Line_2 $$ private static void loadParentProperties(Properties props, ClassLoader cl) throws IOException --> Line_7 $$ URL url = cl.getResource(pName) [FD]
Line_3 $$ String pName = props.getProperty(PARENT_PROPERTIES) --> Line_7 $$ URL url = cl.getResource(pName) [FD]
Line_2 $$ private static void loadParentProperties(Properties props, ClassLoader cl) throws IOException --> Line_8 $$ if (url == null) [CD]
Line_7 $$ URL url = cl.getResource(pName) --> Line_8 $$ if (url == null) [FD]
Line_8 $$ if (url == null) --> Line_9 $$ return [CD]
Line_2 $$ private static void loadParentProperties(Properties props, ClassLoader cl) throws IOException --> Line_11 $$ InputStream is = url.openStream() [CD]
Line_7 $$ URL url = cl.getResource(pName) --> Line_11 $$ InputStream is = url.openStream() [FD]
Line_2 $$ private static void loadParentProperties(Properties props, ClassLoader cl) throws IOException --> Line_12 $$ if (is != null) [CD]
Line_11 $$ InputStream is = url.openStream() --> Line_12 $$ if (is != null) [FD]
Line_12 $$ if (is != null) --> Line_13 $$ Properties tmpProps = new Properties() [CD]
Line_12 $$ if (is != null) --> Line_14 $$ tmpProps.load(is) [CD]
Line_13 $$ Properties tmpProps = new Properties() --> Line_14 $$ tmpProps.load(is) [FD]
Line_11 $$ InputStream is = url.openStream() --> Line_14 $$ tmpProps.load(is) [FD]
Line_12 $$ if (is != null) --> Line_15 $$ is.close() [CD]
Line_11 $$ InputStream is = url.openStream() --> Line_15 $$ is.close() [FD]
Line_12 $$ if (is != null) --> Line_16 $$ loadParentProperties(tmpProps, cl) [CD]
Line_13 $$ Properties tmpProps = new Properties() --> Line_16 $$ loadParentProperties(tmpProps, cl) [FD]
Line_2 $$ private static void loadParentProperties(Properties props, ClassLoader cl) throws IOException --> Line_16 $$ loadParentProperties(tmpProps, cl) [FD]
Line_12 $$ if (is != null) --> Line_17 $$ Iterator itr = tmpProps.entrySet().iterator() [CD]
Line_13 $$ Properties tmpProps = new Properties() --> Line_17 $$ Iterator itr = tmpProps.entrySet().iterator() [FD]
Line_12 $$ if (is != null) --> Line_18 $$ while (itr.hasNext()) [CD]
Line_17 $$ Iterator itr = tmpProps.entrySet().iterator() --> Line_18 $$ while (itr.hasNext()) [FD]
Line_18 $$ while (itr.hasNext()) --> Line_19 $$ Map.Entry entry = (Map.Entry) itr.next() [CD]
Line_17 $$ Iterator itr = tmpProps.entrySet().iterator() --> Line_19 $$ Map.Entry entry = (Map.Entry) itr.next() [FD]
Line_18 $$ while (itr.hasNext()) --> Line_20 $$ if (!props.containsKey(entry.getKey())) [CD]
Line_2 $$ private static void loadParentProperties(Properties props, ClassLoader cl) throws IOException --> Line_20 $$ if (!props.containsKey(entry.getKey())) [FD]
Line_20 $$ if (!props.containsKey(entry.getKey())) --> Line_21 $$ props.put(entry.getKey(), entry.getValue()) [CD]
Line_2 $$ private static void loadParentProperties(Properties props, ClassLoader cl) throws IOException --> Line_21 $$ props.put(entry.getKey(), entry.getValue()) [FD]
