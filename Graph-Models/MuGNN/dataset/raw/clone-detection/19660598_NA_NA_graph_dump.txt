Line_2 $$ private static void replaceEntityMappings(File signserverearpath, File entityMappingXML) throws ZipException, IOException --> Line_3 $$ ZipInputStream earFile = new ZipInputStream(new FileInputStream(signserverearpath)) [CD]
Line_2 $$ private static void replaceEntityMappings(File signserverearpath, File entityMappingXML) throws ZipException, IOException --> Line_4 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() [CD]
Line_2 $$ private static void replaceEntityMappings(File signserverearpath, File entityMappingXML) throws ZipException, IOException --> Line_5 $$ ZipOutputStream tempZip = new ZipOutputStream(baos) [CD]
Line_2 $$ private static void replaceEntityMappings(File signserverearpath, File entityMappingXML) throws ZipException, IOException --> Line_6 $$ ZipEntry next = earFile.getNextEntry() [CD]
Line_3 $$ ZipInputStream earFile = new ZipInputStream(new FileInputStream(signserverearpath)) --> Line_6 $$ ZipEntry next = earFile.getNextEntry() [FD]
Line_2 $$ private static void replaceEntityMappings(File signserverearpath, File entityMappingXML) throws ZipException, IOException --> Line_7 $$ while (next != null) [CD]
Line_7 $$ while (next != null) --> Line_8 $$ ByteArrayOutputStream content = new ByteArrayOutputStream() [CD]
Line_7 $$ while (next != null) --> Line_9 $$ byte[] data = new byte[30000] [CD]
Line_7 $$ while (next != null) --> Line_10 $$ int numberread [CD]
Line_7 $$ while (next != null) --> Line_11 $$ while ((numberread = earFile.read(data)) != -1) [CD]
Line_10 $$ int numberread --> Line_11 $$ while ((numberread = earFile.read(data)) != -1) [FD]
Line_3 $$ ZipInputStream earFile = new ZipInputStream(new FileInputStream(signserverearpath)) --> Line_11 $$ while ((numberread = earFile.read(data)) != -1) [FD]
Line_9 $$ byte[] data = new byte[30000] --> Line_11 $$ while ((numberread = earFile.read(data)) != -1) [FD]
Line_11 $$ while ((numberread = earFile.read(data)) != -1) --> Line_12 $$ content.write(data, 0, numberread) [CD]
Line_11 $$ while ((numberread = earFile.read(data)) != -1) --> Line_12 $$ content.write(data, 0, numberread) [FD]
Line_8 $$ ByteArrayOutputStream content = new ByteArrayOutputStream() --> Line_12 $$ content.write(data, 0, numberread) [FD]
Line_9 $$ byte[] data = new byte[30000] --> Line_12 $$ content.write(data, 0, numberread) [FD]
Line_10 $$ int numberread --> Line_12 $$ content.write(data, 0, numberread) [FD]
Line_7 $$ while (next != null) --> Line_14 $$ if (next.getName().equals("signserver-ejb.jar")) [CD]
Line_14 $$ if (next.getName().equals("signserver-ejb.jar")) --> Line_15 $$ content = replaceEntityMappings(content, entityMappingXML) [CD]
Line_8 $$ ByteArrayOutputStream content = new ByteArrayOutputStream() --> Line_15 $$ content = replaceEntityMappings(content, entityMappingXML) [FD]
Line_2 $$ private static void replaceEntityMappings(File signserverearpath, File entityMappingXML) throws ZipException, IOException --> Line_15 $$ content = replaceEntityMappings(content, entityMappingXML) [FD]
Line_14 $$ if (next.getName().equals("signserver-ejb.jar")) --> Line_16 $$ next = new ZipEntry("signserver-ejb.jar") [CD]
Line_7 $$ while (next != null) --> Line_18 $$ tempZip.putNextEntry(next) [CD]
Line_5 $$ ZipOutputStream tempZip = new ZipOutputStream(baos) --> Line_18 $$ tempZip.putNextEntry(next) [FD]
Line_7 $$ while (next != null) --> Line_19 $$ tempZip.write(content.toByteArray()) [CD]
Line_5 $$ ZipOutputStream tempZip = new ZipOutputStream(baos) --> Line_19 $$ tempZip.write(content.toByteArray()) [FD]
Line_8 $$ ByteArrayOutputStream content = new ByteArrayOutputStream() --> Line_19 $$ tempZip.write(content.toByteArray()) [FD]
Line_15 $$ content = replaceEntityMappings(content, entityMappingXML) --> Line_19 $$ tempZip.write(content.toByteArray()) [FD]
Line_7 $$ while (next != null) --> Line_20 $$ next = earFile.getNextEntry() [CD]
Line_3 $$ ZipInputStream earFile = new ZipInputStream(new FileInputStream(signserverearpath)) --> Line_20 $$ next = earFile.getNextEntry() [FD]
Line_2 $$ private static void replaceEntityMappings(File signserverearpath, File entityMappingXML) throws ZipException, IOException --> Line_22 $$ earFile.close() [CD]
Line_3 $$ ZipInputStream earFile = new ZipInputStream(new FileInputStream(signserverearpath)) --> Line_22 $$ earFile.close() [FD]
Line_2 $$ private static void replaceEntityMappings(File signserverearpath, File entityMappingXML) throws ZipException, IOException --> Line_23 $$ tempZip.close() [CD]
Line_5 $$ ZipOutputStream tempZip = new ZipOutputStream(baos) --> Line_23 $$ tempZip.close() [FD]
Line_2 $$ private static void replaceEntityMappings(File signserverearpath, File entityMappingXML) throws ZipException, IOException --> Line_24 $$ FileOutputStream fos = new FileOutputStream(signserverearpath) [CD]
Line_2 $$ private static void replaceEntityMappings(File signserverearpath, File entityMappingXML) throws ZipException, IOException --> Line_25 $$ fos.write(baos.toByteArray()) [CD]
Line_24 $$ FileOutputStream fos = new FileOutputStream(signserverearpath) --> Line_25 $$ fos.write(baos.toByteArray()) [FD]
Line_4 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() --> Line_25 $$ fos.write(baos.toByteArray()) [FD]
Line_2 $$ private static void replaceEntityMappings(File signserverearpath, File entityMappingXML) throws ZipException, IOException --> Line_26 $$ fos.close() [CD]
Line_24 $$ FileOutputStream fos = new FileOutputStream(signserverearpath) --> Line_26 $$ fos.close() [FD]
