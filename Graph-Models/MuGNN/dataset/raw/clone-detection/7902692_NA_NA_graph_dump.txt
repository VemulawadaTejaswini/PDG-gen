Line_2 $$ public MapInfo getMap(int mapId) --> Line_3 $$ MapInfo info = mapCache.get(mapId) [CD]
Line_2 $$ public MapInfo getMap(int mapId) --> Line_3 $$ MapInfo info = mapCache.get(mapId) [FD]
Line_2 $$ public MapInfo getMap(int mapId) --> Line_4 $$ if (info != null && info.getContent() == null) [CD]
Line_3 $$ MapInfo info = mapCache.get(mapId) --> Line_4 $$ if (info != null && info.getContent() == null) [FD]
Line_4 $$ if (info != null && info.getContent() == null) --> Line_5 $$ if (info.getInfo().get("fileName") == null) [CD]
Line_3 $$ MapInfo info = mapCache.get(mapId) --> Line_5 $$ if (info.getInfo().get("fileName") == null) [FD]
Line_5 $$ if (info.getInfo().get("fileName") == null) --> Line_6 $$ if (mapId != lastRequestedMap) [CD]
Line_2 $$ public MapInfo getMap(int mapId) --> Line_6 $$ if (mapId != lastRequestedMap) [FD]
Line_6 $$ if (mapId != lastRequestedMap) --> Line_8 $$ System.out.println("MapLoaderClient::getMap:requesting map from server " + mapId) [CD]
Line_6 $$ if (mapId != lastRequestedMap) --> Line_9 $$ serverConnection.sendMessage(new MessageFetch(FetchType.map.name(), mapId)) [CD]
Line_3 $$ MapInfo info = mapCache.get(mapId) --> Line_13 $$ System.out.println("MapLoaderClient::getMap:loading map from file " + info.getInfo().get("fileName")) [FD]
Line_3 $$ MapInfo info = mapCache.get(mapId) --> Line_15 $$ URL fetchUrl = new URL(localMapContextUrl, info.getInfo().get("fileName")) [FD]
Line_15 $$ URL fetchUrl = new URL(localMapContextUrl, info.getInfo().get("fileName")) --> Line_16 $$ URLConnection urlconnection = fetchUrl.openConnection() [FD]
Line_16 $$ URLConnection urlconnection = fetchUrl.openConnection() --> Line_17 $$ if (urlconnection.getContentEncoding() != null) [FD]
Line_17 $$ if (urlconnection.getContentEncoding() != null) --> Line_18 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), urlconnection.getContentEncoding())) [CD]
Line_14 $$ BufferedReader bufferedreader --> Line_18 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), urlconnection.getContentEncoding())) [FD]
Line_16 $$ URLConnection urlconnection = fetchUrl.openConnection() --> Line_18 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), urlconnection.getContentEncoding())) [FD]
Line_17 $$ if (urlconnection.getContentEncoding() != null) --> Line_20 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), "utf-8")) [CD]
Line_14 $$ BufferedReader bufferedreader --> Line_20 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), "utf-8")) [FD]
Line_18 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), urlconnection.getContentEncoding())) --> Line_20 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), "utf-8")) [FD]
Line_16 $$ URLConnection urlconnection = fetchUrl.openConnection() --> Line_20 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), "utf-8")) [FD]
Line_22 $$ String line --> Line_24 $$ while ((line = bufferedreader.readLine()) != null) [FD]
Line_14 $$ BufferedReader bufferedreader --> Line_24 $$ while ((line = bufferedreader.readLine()) != null) [FD]
Line_18 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), urlconnection.getContentEncoding())) --> Line_24 $$ while ((line = bufferedreader.readLine()) != null) [FD]
Line_20 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), "utf-8")) --> Line_24 $$ while ((line = bufferedreader.readLine()) != null) [FD]
Line_24 $$ while ((line = bufferedreader.readLine()) != null) --> Line_25 $$ mapContent.append(line) [CD]
Line_24 $$ while ((line = bufferedreader.readLine()) != null) --> Line_25 $$ mapContent.append(line) [FD]
Line_23 $$ StringBuilder mapContent = new StringBuilder() --> Line_25 $$ mapContent.append(line) [FD]
Line_22 $$ String line --> Line_25 $$ mapContent.append(line) [FD]
Line_24 $$ while ((line = bufferedreader.readLine()) != null) --> Line_26 $$ mapContent.append("\n") [CD]
Line_23 $$ StringBuilder mapContent = new StringBuilder() --> Line_26 $$ mapContent.append("\n") [FD]
Line_3 $$ MapInfo info = mapCache.get(mapId) --> Line_28 $$ info.setContent(mapContent.toString()) [FD]
Line_23 $$ StringBuilder mapContent = new StringBuilder() --> Line_28 $$ info.setContent(mapContent.toString()) [FD]
Line_3 $$ MapInfo info = mapCache.get(mapId) --> Line_29 $$ fireMapChanged(info) [FD]
Line_3 $$ MapInfo info = mapCache.get(mapId) --> Line_31 $$ System.err.println("MapLoaderClient::getMap:: Can't read from " + info.getInfo().get("fileName")) [FD]
Line_2 $$ public MapInfo getMap(int mapId) --> Line_35 $$ return info [CD]
