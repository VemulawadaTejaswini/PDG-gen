Line_2 $$ private void RotaDraw(GeoPoint orig, GeoPoint dest, int color, MapView mapa) --> Line_3 $$ StringBuilder urlString = new StringBuilder() [CD]
Line_2 $$ private void RotaDraw(GeoPoint orig, GeoPoint dest, int color, MapView mapa) --> Line_4 $$ urlString.append("http://maps.google.com/maps?f=d&hl=en") [CD]
Line_3 $$ StringBuilder urlString = new StringBuilder() --> Line_4 $$ urlString.append("http://maps.google.com/maps?f=d&hl=en") [FD]
Line_2 $$ private void RotaDraw(GeoPoint orig, GeoPoint dest, int color, MapView mapa) --> Line_5 $$ urlString.append("&saddr=") [CD]
Line_3 $$ StringBuilder urlString = new StringBuilder() --> Line_5 $$ urlString.append("&saddr=") [FD]
Line_2 $$ private void RotaDraw(GeoPoint orig, GeoPoint dest, int color, MapView mapa) --> Line_6 $$ urlString.append(Double.toString((double) orig.getLatitudeE6() / 1.0E6)) [CD]
Line_2 $$ private void RotaDraw(GeoPoint orig, GeoPoint dest, int color, MapView mapa) --> Line_6 $$ urlString.append(Double.toString((double) orig.getLatitudeE6() / 1.0E6)) [FD]
Line_3 $$ StringBuilder urlString = new StringBuilder() --> Line_6 $$ urlString.append(Double.toString((double) orig.getLatitudeE6() / 1.0E6)) [FD]
Line_2 $$ private void RotaDraw(GeoPoint orig, GeoPoint dest, int color, MapView mapa) --> Line_7 $$ urlString.append(",") [CD]
Line_3 $$ StringBuilder urlString = new StringBuilder() --> Line_7 $$ urlString.append(",") [FD]
Line_2 $$ private void RotaDraw(GeoPoint orig, GeoPoint dest, int color, MapView mapa) --> Line_8 $$ urlString.append(Double.toString((double) orig.getLongitudeE6() / 1.0E6)) [CD]
Line_2 $$ private void RotaDraw(GeoPoint orig, GeoPoint dest, int color, MapView mapa) --> Line_8 $$ urlString.append(Double.toString((double) orig.getLongitudeE6() / 1.0E6)) [FD]
Line_3 $$ StringBuilder urlString = new StringBuilder() --> Line_8 $$ urlString.append(Double.toString((double) orig.getLongitudeE6() / 1.0E6)) [FD]
Line_2 $$ private void RotaDraw(GeoPoint orig, GeoPoint dest, int color, MapView mapa) --> Line_9 $$ urlString.append("&daddr=") [CD]
Line_3 $$ StringBuilder urlString = new StringBuilder() --> Line_9 $$ urlString.append("&daddr=") [FD]
Line_2 $$ private void RotaDraw(GeoPoint orig, GeoPoint dest, int color, MapView mapa) --> Line_10 $$ urlString.append(Double.toString((double) dest.getLatitudeE6() / 1.0E6)) [CD]
Line_2 $$ private void RotaDraw(GeoPoint orig, GeoPoint dest, int color, MapView mapa) --> Line_10 $$ urlString.append(Double.toString((double) dest.getLatitudeE6() / 1.0E6)) [FD]
Line_3 $$ StringBuilder urlString = new StringBuilder() --> Line_10 $$ urlString.append(Double.toString((double) dest.getLatitudeE6() / 1.0E6)) [FD]
Line_2 $$ private void RotaDraw(GeoPoint orig, GeoPoint dest, int color, MapView mapa) --> Line_11 $$ urlString.append(",") [CD]
Line_3 $$ StringBuilder urlString = new StringBuilder() --> Line_11 $$ urlString.append(",") [FD]
Line_2 $$ private void RotaDraw(GeoPoint orig, GeoPoint dest, int color, MapView mapa) --> Line_12 $$ urlString.append(Double.toString((double) dest.getLongitudeE6() / 1.0E6)) [CD]
Line_2 $$ private void RotaDraw(GeoPoint orig, GeoPoint dest, int color, MapView mapa) --> Line_12 $$ urlString.append(Double.toString((double) dest.getLongitudeE6() / 1.0E6)) [FD]
Line_3 $$ StringBuilder urlString = new StringBuilder() --> Line_12 $$ urlString.append(Double.toString((double) dest.getLongitudeE6() / 1.0E6)) [FD]
Line_2 $$ private void RotaDraw(GeoPoint orig, GeoPoint dest, int color, MapView mapa) --> Line_13 $$ urlString.append("&ie=UTF8&0&om=0&output=kml") [CD]
Line_3 $$ StringBuilder urlString = new StringBuilder() --> Line_13 $$ urlString.append("&ie=UTF8&0&om=0&output=kml") [FD]
Line_2 $$ private void RotaDraw(GeoPoint orig, GeoPoint dest, int color, MapView mapa) --> Line_14 $$ Document doc = null [CD]
Line_2 $$ private void RotaDraw(GeoPoint orig, GeoPoint dest, int color, MapView mapa) --> Line_15 $$ HttpURLConnection urlConnection = null [CD]
Line_2 $$ private void RotaDraw(GeoPoint orig, GeoPoint dest, int color, MapView mapa) --> Line_16 $$ URL url = null [CD]
Line_16 $$ URL url = null --> Line_18 $$ url = new URL(urlString.toString()) [FD]
Line_3 $$ StringBuilder urlString = new StringBuilder() --> Line_18 $$ url = new URL(urlString.toString()) [FD]
Line_15 $$ HttpURLConnection urlConnection = null --> Line_19 $$ urlConnection = (HttpURLConnection) url.openConnection() [FD]
Line_16 $$ URL url = null --> Line_19 $$ urlConnection = (HttpURLConnection) url.openConnection() [FD]
Line_18 $$ url = new URL(urlString.toString()) --> Line_19 $$ urlConnection = (HttpURLConnection) url.openConnection() [FD]
Line_15 $$ HttpURLConnection urlConnection = null --> Line_20 $$ urlConnection.setRequestMethod("GET") [FD]
Line_19 $$ urlConnection = (HttpURLConnection) url.openConnection() --> Line_20 $$ urlConnection.setRequestMethod("GET") [FD]
Line_15 $$ HttpURLConnection urlConnection = null --> Line_21 $$ urlConnection.setDoOutput(true) [FD]
Line_19 $$ urlConnection = (HttpURLConnection) url.openConnection() --> Line_21 $$ urlConnection.setDoOutput(true) [FD]
Line_15 $$ HttpURLConnection urlConnection = null --> Line_22 $$ urlConnection.setDoInput(true) [FD]
Line_19 $$ urlConnection = (HttpURLConnection) url.openConnection() --> Line_22 $$ urlConnection.setDoInput(true) [FD]
Line_15 $$ HttpURLConnection urlConnection = null --> Line_23 $$ urlConnection.connect() [FD]
Line_19 $$ urlConnection = (HttpURLConnection) url.openConnection() --> Line_23 $$ urlConnection.connect() [FD]
Line_24 $$ DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance() --> Line_25 $$ DocumentBuilder db = dbf.newDocumentBuilder() [FD]
Line_14 $$ Document doc = null --> Line_26 $$ doc = db.parse(urlConnection.getInputStream()) [FD]
Line_25 $$ DocumentBuilder db = dbf.newDocumentBuilder() --> Line_26 $$ doc = db.parse(urlConnection.getInputStream()) [FD]
Line_15 $$ HttpURLConnection urlConnection = null --> Line_26 $$ doc = db.parse(urlConnection.getInputStream()) [FD]
Line_19 $$ urlConnection = (HttpURLConnection) url.openConnection() --> Line_26 $$ doc = db.parse(urlConnection.getInputStream()) [FD]
Line_14 $$ Document doc = null --> Line_27 $$ if (doc.getElementsByTagName("GeometryCollection").getLength() > 0) [FD]
Line_26 $$ doc = db.parse(urlConnection.getInputStream()) --> Line_27 $$ if (doc.getElementsByTagName("GeometryCollection").getLength() > 0) [FD]
Line_27 $$ if (doc.getElementsByTagName("GeometryCollection").getLength() > 0) --> Line_28 $$ String path = doc.getElementsByTagName("GeometryCollection").item(0).getFirstChild().getFirstChild().getFirstChild().getNodeValue() [CD]
Line_14 $$ Document doc = null --> Line_28 $$ String path = doc.getElementsByTagName("GeometryCollection").item(0).getFirstChild().getFirstChild().getFirstChild().getNodeValue() [FD]
Line_26 $$ doc = db.parse(urlConnection.getInputStream()) --> Line_28 $$ String path = doc.getElementsByTagName("GeometryCollection").item(0).getFirstChild().getFirstChild().getFirstChild().getNodeValue() [FD]
Line_27 $$ if (doc.getElementsByTagName("GeometryCollection").getLength() > 0) --> Line_29 $$ Log.d("xxx", "path=" + path) [CD]
Line_27 $$ if (doc.getElementsByTagName("GeometryCollection").getLength() > 0) --> Line_30 $$ String[] pairs = path.split(" ") [CD]
Line_28 $$ String path = doc.getElementsByTagName("GeometryCollection").item(0).getFirstChild().getFirstChild().getFirstChild().getNodeValue() --> Line_30 $$ String[] pairs = path.split(" ") [FD]
Line_27 $$ if (doc.getElementsByTagName("GeometryCollection").getLength() > 0) --> Line_31 $$ String[] lngLat = pairs[0].split(",") [CD]
Line_27 $$ if (doc.getElementsByTagName("GeometryCollection").getLength() > 0) --> Line_32 $$ GeoPoint startGP = new GeoPoint((int) (Double.parseDouble(lngLat[1]) * 1E6), (int) (Double.parseDouble(lngLat[0]) * 1E6)) [CD]
Line_27 $$ if (doc.getElementsByTagName("GeometryCollection").getLength() > 0) --> Line_33 $$ mapa.getOverlays().add(new CamadaGS(startGP, startGP, 1)) [CD]
Line_2 $$ private void RotaDraw(GeoPoint orig, GeoPoint dest, int color, MapView mapa) --> Line_33 $$ mapa.getOverlays().add(new CamadaGS(startGP, startGP, 1)) [FD]
Line_27 $$ if (doc.getElementsByTagName("GeometryCollection").getLength() > 0) --> Line_34 $$ GeoPoint gp1 [CD]
Line_27 $$ if (doc.getElementsByTagName("GeometryCollection").getLength() > 0) --> Line_35 $$ GeoPoint gp2 = startGP [CD]
Line_27 $$ if (doc.getElementsByTagName("GeometryCollection").getLength() > 0) --> Line_36 $$ for (int i = 1; i < pairs.length; i++) [CD]
Line_36 $$ for (int i = 1; i < pairs.length; i++) --> Line_37 $$ lngLat = pairs[i].split(",") [CD]
Line_31 $$ String[] lngLat = pairs[0].split(",") --> Line_37 $$ lngLat = pairs[i].split(",") [FD]
Line_36 $$ for (int i = 1; i < pairs.length; i++) --> Line_38 $$ gp1 = gp2 [CD]
Line_34 $$ GeoPoint gp1 --> Line_38 $$ gp1 = gp2 [FD]
Line_35 $$ GeoPoint gp2 = startGP --> Line_38 $$ gp1 = gp2 [FD]
Line_36 $$ for (int i = 1; i < pairs.length; i++) --> Line_39 $$ gp2 = new GeoPoint((int) (Double.parseDouble(lngLat[1]) * 1E6), (int) (Double.parseDouble(lngLat[0]) * 1E6)) [CD]
Line_35 $$ GeoPoint gp2 = startGP --> Line_39 $$ gp2 = new GeoPoint((int) (Double.parseDouble(lngLat[1]) * 1E6), (int) (Double.parseDouble(lngLat[0]) * 1E6)) [FD]
Line_36 $$ for (int i = 1; i < pairs.length; i++) --> Line_40 $$ mapa.getOverlays().add(new CamadaGS(gp1, gp2, 2, color)) [CD]
Line_2 $$ private void RotaDraw(GeoPoint orig, GeoPoint dest, int color, MapView mapa) --> Line_40 $$ mapa.getOverlays().add(new CamadaGS(gp1, gp2, 2, color)) [FD]
Line_36 $$ for (int i = 1; i < pairs.length; i++) --> Line_41 $$ Log.d("xxx", "pair:" + pairs[i]) [CD]
Line_27 $$ if (doc.getElementsByTagName("GeometryCollection").getLength() > 0) --> Line_43 $$ mapa.getOverlays().add(new CamadaGS(dest, dest, 3)) [CD]
Line_2 $$ private void RotaDraw(GeoPoint orig, GeoPoint dest, int color, MapView mapa) --> Line_43 $$ mapa.getOverlays().add(new CamadaGS(dest, dest, 3)) [FD]
Line_39 $$ gp2 = new GeoPoint((int) (Double.parseDouble(lngLat[1]) * 1E6), (int) (Double.parseDouble(lngLat[0]) * 1E6)) --> Line_38 $$ gp1 = gp2 [FD]
