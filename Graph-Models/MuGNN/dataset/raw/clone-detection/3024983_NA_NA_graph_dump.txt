Line_2 $$ public void testCopy_inputStreamToWriter_Encoding_nullEncoding() throws Exception --> Line_3 $$ InputStream in = new ByteArrayInputStream(inData) [CD]
Line_2 $$ public void testCopy_inputStreamToWriter_Encoding_nullEncoding() throws Exception --> Line_4 $$ in = new YellOnCloseInputStreamTest(in) [CD]
Line_3 $$ InputStream in = new ByteArrayInputStream(inData) --> Line_4 $$ in = new YellOnCloseInputStreamTest(in) [FD]
Line_2 $$ public void testCopy_inputStreamToWriter_Encoding_nullEncoding() throws Exception --> Line_5 $$ ByteArrayOutputStream baout = new ByteArrayOutputStream() [CD]
Line_2 $$ public void testCopy_inputStreamToWriter_Encoding_nullEncoding() throws Exception --> Line_6 $$ YellOnFlushAndCloseOutputStreamTest out = new YellOnFlushAndCloseOutputStreamTest(baout, true, true) [CD]
Line_2 $$ public void testCopy_inputStreamToWriter_Encoding_nullEncoding() throws Exception --> Line_7 $$ Writer writer = new OutputStreamWriter(baout, "US-ASCII") [CD]
Line_2 $$ public void testCopy_inputStreamToWriter_Encoding_nullEncoding() throws Exception --> Line_8 $$ IOUtils.copy(in, writer, null) [CD]
Line_3 $$ InputStream in = new ByteArrayInputStream(inData) --> Line_8 $$ IOUtils.copy(in, writer, null) [FD]
Line_4 $$ in = new YellOnCloseInputStreamTest(in) --> Line_8 $$ IOUtils.copy(in, writer, null) [FD]
Line_7 $$ Writer writer = new OutputStreamWriter(baout, "US-ASCII") --> Line_8 $$ IOUtils.copy(in, writer, null) [FD]
Line_2 $$ public void testCopy_inputStreamToWriter_Encoding_nullEncoding() throws Exception --> Line_9 $$ out.off() [CD]
Line_6 $$ YellOnFlushAndCloseOutputStreamTest out = new YellOnFlushAndCloseOutputStreamTest(baout, true, true) --> Line_9 $$ out.off() [FD]
Line_2 $$ public void testCopy_inputStreamToWriter_Encoding_nullEncoding() throws Exception --> Line_10 $$ writer.flush() [CD]
Line_7 $$ Writer writer = new OutputStreamWriter(baout, "US-ASCII") --> Line_10 $$ writer.flush() [FD]
Line_2 $$ public void testCopy_inputStreamToWriter_Encoding_nullEncoding() throws Exception --> Line_11 $$ assertTrue("Not all bytes were read", in.available() == 0) [CD]
Line_3 $$ InputStream in = new ByteArrayInputStream(inData) --> Line_11 $$ assertTrue("Not all bytes were read", in.available() == 0) [FD]
Line_4 $$ in = new YellOnCloseInputStreamTest(in) --> Line_11 $$ assertTrue("Not all bytes were read", in.available() == 0) [FD]
Line_2 $$ public void testCopy_inputStreamToWriter_Encoding_nullEncoding() throws Exception --> Line_12 $$ assertEquals("Sizes differ", inData.length, baout.size()) [CD]
Line_5 $$ ByteArrayOutputStream baout = new ByteArrayOutputStream() --> Line_12 $$ assertEquals("Sizes differ", inData.length, baout.size()) [FD]
Line_2 $$ public void testCopy_inputStreamToWriter_Encoding_nullEncoding() throws Exception --> Line_13 $$ assertTrue("Content differs", Arrays.equals(inData, baout.toByteArray())) [CD]
Line_5 $$ ByteArrayOutputStream baout = new ByteArrayOutputStream() --> Line_13 $$ assertTrue("Content differs", Arrays.equals(inData, baout.toByteArray())) [FD]
