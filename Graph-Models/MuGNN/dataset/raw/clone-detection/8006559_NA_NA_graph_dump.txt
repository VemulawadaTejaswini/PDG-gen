Line_5 $$ List knownLocations = new ArrayList() --> Line_6 $$ knownLocations.add(location) [FD]
Line_5 $$ List knownLocations = new ArrayList() --> Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) [FD]
Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) --> Line_8 $$ URL url = (URL) knownLocations.get(loc) [CD]
Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) --> Line_8 $$ URL url = (URL) knownLocations.get(loc) [FD]
Line_5 $$ List knownLocations = new ArrayList() --> Line_8 $$ URL url = (URL) knownLocations.get(loc) [FD]
Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) --> Line_9 $$ File directory = new File(url.getFile()) [CD]
Line_8 $$ URL url = (URL) knownLocations.get(loc) --> Line_9 $$ File directory = new File(url.getFile()) [FD]
Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) --> Line_10 $$ if (directory.exists()) [CD]
Line_9 $$ File directory = new File(url.getFile()) --> Line_10 $$ if (directory.exists()) [FD]
Line_10 $$ if (directory.exists()) --> Line_11 $$ File[] files = directory.listFiles(CLASSES_ONLY) [CD]
Line_9 $$ File directory = new File(url.getFile()) --> Line_11 $$ File[] files = directory.listFiles(CLASSES_ONLY) [FD]
Line_10 $$ if (directory.exists()) --> Line_12 $$ for (int i = 0; i < files.length; i++) [CD]
Line_12 $$ for (int i = 0; i < files.length; i++) --> Line_13 $$ String filename = files[i].getName() [CD]
Line_12 $$ for (int i = 0; i < files.length; i++) --> Line_14 $$ String classname = filename.substring(0, filename.length() - 6) [CD]
Line_13 $$ String filename = files[i].getName() --> Line_14 $$ String classname = filename.substring(0, filename.length() - 6) [FD]
Line_4 $$ String fqcn = searchClass.getName() --> Line_16 $$ if (!fqcn.equals(packageName + "." + classname)) [FD]
Line_8 $$ URL url = (URL) knownLocations.get(loc) --> Line_18 $$ manageClass(setOfClasses, superClass, c, url) [FD]
Line_8 $$ URL url = (URL) knownLocations.get(loc) --> Line_26 $$ JarURLConnection conn = (JarURLConnection) url.openConnection() [FD]
Line_29 $$ while (e.hasMoreElements()) --> Line_30 $$ JarEntry entry = (JarEntry) e.nextElement() [CD]
Line_29 $$ while (e.hasMoreElements()) --> Line_31 $$ String entryname = entry.getName() [CD]
Line_29 $$ while (e.hasMoreElements()) --> Line_32 $$ if (!entry.isDirectory() && entryname.endsWith(".class")) [CD]
Line_31 $$ String entryname = entry.getName() --> Line_32 $$ if (!entry.isDirectory() && entryname.endsWith(".class")) [FD]
Line_31 $$ String entryname = entry.getName() --> Line_33 $$ String classname = entryname.substring(0, entryname.length() - 6) [FD]
Line_4 $$ String fqcn = searchClass.getName() --> Line_37 $$ if (!fqcn.equals(classname)) [FD]
Line_8 $$ URL url = (URL) knownLocations.get(loc) --> Line_39 $$ manageClass(setOfClasses, superClass, c, url) [FD]
