Line_2 $$ public void call(String soapAction, SoapEnvelope envelope) throws IOException, XmlPullParserException --> Line_3 $$ if (soapAction == null) [CD]
Line_2 $$ public void call(String soapAction, SoapEnvelope envelope) throws IOException, XmlPullParserException --> Line_3 $$ if (soapAction == null) [FD]
Line_3 $$ if (soapAction == null) --> Line_4 $$ soapAction = "\"\"" [CD]
Line_2 $$ public void call(String soapAction, SoapEnvelope envelope) throws IOException, XmlPullParserException --> Line_4 $$ soapAction = "\"\"" [FD]
Line_2 $$ public void call(String soapAction, SoapEnvelope envelope) throws IOException, XmlPullParserException --> Line_6 $$ byte[] requestData = createRequestData(envelope) [CD]
Line_2 $$ public void call(String soapAction, SoapEnvelope envelope) throws IOException, XmlPullParserException --> Line_6 $$ byte[] requestData = createRequestData(envelope) [FD]
Line_2 $$ public void call(String soapAction, SoapEnvelope envelope) throws IOException, XmlPullParserException --> Line_9 $$ HttpPost method = new HttpPost(url) [CD]
Line_2 $$ public void call(String soapAction, SoapEnvelope envelope) throws IOException, XmlPullParserException --> Line_10 $$ method.addHeader("User-Agent", "kSOAP/2.0-Excilys") [CD]
Line_9 $$ HttpPost method = new HttpPost(url) --> Line_10 $$ method.addHeader("User-Agent", "kSOAP/2.0-Excilys") [FD]
Line_2 $$ public void call(String soapAction, SoapEnvelope envelope) throws IOException, XmlPullParserException --> Line_11 $$ method.addHeader("SOAPAction", soapAction) [CD]
Line_2 $$ public void call(String soapAction, SoapEnvelope envelope) throws IOException, XmlPullParserException --> Line_11 $$ method.addHeader("SOAPAction", soapAction) [FD]
Line_9 $$ HttpPost method = new HttpPost(url) --> Line_11 $$ method.addHeader("SOAPAction", soapAction) [FD]
Line_4 $$ soapAction = "\"\"" --> Line_11 $$ method.addHeader("SOAPAction", soapAction) [FD]
Line_2 $$ public void call(String soapAction, SoapEnvelope envelope) throws IOException, XmlPullParserException --> Line_12 $$ method.addHeader("Content-Type", "text/xml") [CD]
Line_9 $$ HttpPost method = new HttpPost(url) --> Line_12 $$ method.addHeader("Content-Type", "text/xml") [FD]
Line_2 $$ public void call(String soapAction, SoapEnvelope envelope) throws IOException, XmlPullParserException --> Line_13 $$ HttpEntity entity = new ByteArrayEntity(requestData) [CD]
Line_2 $$ public void call(String soapAction, SoapEnvelope envelope) throws IOException, XmlPullParserException --> Line_14 $$ method.setEntity(entity) [CD]
Line_9 $$ HttpPost method = new HttpPost(url) --> Line_14 $$ method.setEntity(entity) [FD]
Line_13 $$ HttpEntity entity = new ByteArrayEntity(requestData) --> Line_14 $$ method.setEntity(entity) [FD]
Line_2 $$ public void call(String soapAction, SoapEnvelope envelope) throws IOException, XmlPullParserException --> Line_15 $$ HttpResponse response = httpClient.execute(method) [CD]
Line_9 $$ HttpPost method = new HttpPost(url) --> Line_15 $$ HttpResponse response = httpClient.execute(method) [FD]
Line_2 $$ public void call(String soapAction, SoapEnvelope envelope) throws IOException, XmlPullParserException --> Line_16 $$ InputStream inputStream = response.getEntity().getContent() [CD]
Line_15 $$ HttpResponse response = httpClient.execute(method) --> Line_16 $$ InputStream inputStream = response.getEntity().getContent() [FD]
Line_2 $$ public void call(String soapAction, SoapEnvelope envelope) throws IOException, XmlPullParserException --> Line_17 $$ if (debug) [CD]
Line_17 $$ if (debug) --> Line_18 $$ ByteArrayOutputStream bos = new ByteArrayOutputStream() [CD]
Line_17 $$ if (debug) --> Line_19 $$ byte[] buf = new byte[256] [CD]
Line_17 $$ if (debug) --> Line_20 $$ while (true) [CD]
Line_20 $$ while (true) --> Line_21 $$ int rd = inputStream.read(buf, 0, 256) [CD]
Line_16 $$ InputStream inputStream = response.getEntity().getContent() --> Line_21 $$ int rd = inputStream.read(buf, 0, 256) [FD]
Line_19 $$ byte[] buf = new byte[256] --> Line_21 $$ int rd = inputStream.read(buf, 0, 256) [FD]
Line_20 $$ while (true) --> Line_22 $$ if (rd == -1) [CD]
Line_21 $$ int rd = inputStream.read(buf, 0, 256) --> Line_22 $$ if (rd == -1) [FD]
Line_20 $$ while (true) --> Line_25 $$ bos.write(buf, 0, rd) [CD]
Line_18 $$ ByteArrayOutputStream bos = new ByteArrayOutputStream() --> Line_25 $$ bos.write(buf, 0, rd) [FD]
Line_19 $$ byte[] buf = new byte[256] --> Line_25 $$ bos.write(buf, 0, rd) [FD]
Line_21 $$ int rd = inputStream.read(buf, 0, 256) --> Line_25 $$ bos.write(buf, 0, rd) [FD]
Line_17 $$ if (debug) --> Line_27 $$ bos.flush() [CD]
Line_18 $$ ByteArrayOutputStream bos = new ByteArrayOutputStream() --> Line_27 $$ bos.flush() [FD]
Line_17 $$ if (debug) --> Line_28 $$ buf = bos.toByteArray() [CD]
Line_19 $$ byte[] buf = new byte[256] --> Line_28 $$ buf = bos.toByteArray() [FD]
Line_18 $$ ByteArrayOutputStream bos = new ByteArrayOutputStream() --> Line_28 $$ buf = bos.toByteArray() [FD]
Line_17 $$ if (debug) --> Line_30 $$ inputStream.close() [CD]
Line_16 $$ InputStream inputStream = response.getEntity().getContent() --> Line_30 $$ inputStream.close() [FD]
Line_17 $$ if (debug) --> Line_31 $$ inputStream = new ByteArrayInputStream(buf) [CD]
Line_16 $$ InputStream inputStream = response.getEntity().getContent() --> Line_31 $$ inputStream = new ByteArrayInputStream(buf) [FD]
Line_2 $$ public void call(String soapAction, SoapEnvelope envelope) throws IOException, XmlPullParserException --> Line_33 $$ parseResponse(envelope, inputStream) [CD]
Line_2 $$ public void call(String soapAction, SoapEnvelope envelope) throws IOException, XmlPullParserException --> Line_33 $$ parseResponse(envelope, inputStream) [FD]
Line_16 $$ InputStream inputStream = response.getEntity().getContent() --> Line_33 $$ parseResponse(envelope, inputStream) [FD]
Line_31 $$ inputStream = new ByteArrayInputStream(buf) --> Line_33 $$ parseResponse(envelope, inputStream) [FD]
Line_2 $$ public void call(String soapAction, SoapEnvelope envelope) throws IOException, XmlPullParserException --> Line_34 $$ inputStream.close() [CD]
Line_16 $$ InputStream inputStream = response.getEntity().getContent() --> Line_34 $$ inputStream.close() [FD]
Line_31 $$ inputStream = new ByteArrayInputStream(buf) --> Line_34 $$ inputStream.close() [FD]
