Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_3 $$ if (_url == null || _url.length() <= 0) [CD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_3 $$ if (_url == null || _url.length() <= 0) [FD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_4 $$ String temp = _url.toLowerCase() [CD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_4 $$ String temp = _url.toLowerCase() [FD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_5 $$ if (!temp.startsWith("http://") && !temp.startsWith("https://")) [CD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_5 $$ if (!temp.startsWith("http://") && !temp.startsWith("https://")) [FD]
Line_4 $$ String temp = _url.toLowerCase() --> Line_5 $$ if (!temp.startsWith("http://") && !temp.startsWith("https://")) [FD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_6 $$ HttpMethod method = null [CD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_7 $$ if (_stringOrStream == null && (_params == null || _params.size() <= 0)) [CD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_7 $$ if (_stringOrStream == null && (_params == null || _params.size() <= 0)) [FD]
Line_6 $$ HttpMethod method = null --> Line_7 $$ if (_stringOrStream == null && (_params == null || _params.size() <= 0)) [FD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_8 $$ HttpMethodParams params = ((HttpMethodBase) method).getParams() [CD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_9 $$ if (params == null) [CD]
Line_8 $$ HttpMethodParams params = ((HttpMethodBase) method).getParams() --> Line_9 $$ if (params == null) [FD]
Line_9 $$ if (params == null) --> Line_10 $$ params = new HttpMethodParams() [CD]
Line_8 $$ HttpMethodParams params = ((HttpMethodBase) method).getParams() --> Line_10 $$ params = new HttpMethodParams() [FD]
Line_9 $$ if (params == null) --> Line_11 $$ ((HttpMethodBase) method).setParams(params) [CD]
Line_8 $$ HttpMethodParams params = ((HttpMethodBase) method).getParams() --> Line_11 $$ ((HttpMethodBase) method).setParams(params) [FD]
Line_10 $$ params = new HttpMethodParams() --> Line_11 $$ ((HttpMethodBase) method).setParams(params) [FD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_13 $$ params.setSoTimeout(_timeout) [CD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_13 $$ params.setSoTimeout(_timeout) [FD]
Line_8 $$ HttpMethodParams params = ((HttpMethodBase) method).getParams() --> Line_13 $$ params.setSoTimeout(_timeout) [FD]
Line_10 $$ params = new HttpMethodParams() --> Line_13 $$ params.setSoTimeout(_timeout) [FD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_14 $$ if (_contentType != null && _contentType.length() > 0) [CD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_14 $$ if (_contentType != null && _contentType.length() > 0) [FD]
Line_14 $$ if (_contentType != null && _contentType.length() > 0) --> Line_15 $$ _headers = new HashMap() [CD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_15 $$ _headers = new HashMap() [FD]
Line_14 $$ if (_contentType != null && _contentType.length() > 0) --> Line_16 $$ _headers.put("Content-Type", _contentType) [CD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_16 $$ _headers.put("Content-Type", _contentType) [FD]
Line_15 $$ _headers = new HashMap() --> Line_16 $$ _headers.put("Content-Type", _contentType) [FD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_18 $$ if (_headers != null) [CD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_18 $$ if (_headers != null) [FD]
Line_15 $$ _headers = new HashMap() --> Line_18 $$ if (_headers != null) [FD]
Line_18 $$ if (_headers != null) --> Line_19 $$ Iterator iter = _headers.entrySet().iterator() [CD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_19 $$ Iterator iter = _headers.entrySet().iterator() [FD]
Line_15 $$ _headers = new HashMap() --> Line_19 $$ Iterator iter = _headers.entrySet().iterator() [FD]
Line_18 $$ if (_headers != null) --> Line_20 $$ while (iter.hasNext()) [CD]
Line_19 $$ Iterator iter = _headers.entrySet().iterator() --> Line_20 $$ while (iter.hasNext()) [FD]
Line_20 $$ while (iter.hasNext()) --> Line_21 $$ Map.Entry entry = (Map.Entry) iter.next() [CD]
Line_19 $$ Iterator iter = _headers.entrySet().iterator() --> Line_21 $$ Map.Entry entry = (Map.Entry) iter.next() [FD]
Line_20 $$ while (iter.hasNext()) --> Line_22 $$ method.setRequestHeader((String) entry.getKey(), (String) entry.getValue()) [CD]
Line_6 $$ HttpMethod method = null --> Line_22 $$ method.setRequestHeader((String) entry.getKey(), (String) entry.getValue()) [FD]
Line_7 $$ if (_stringOrStream == null && (_params == null || _params.size() <= 0)) --> Line_22 $$ method.setRequestHeader((String) entry.getKey(), (String) entry.getValue()) [FD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_25 $$ if (method instanceof PostMethod && (_params != null && _params.size() > 0)) [CD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_25 $$ if (method instanceof PostMethod && (_params != null && _params.size() > 0)) [FD]
Line_25 $$ if (method instanceof PostMethod && (_params != null && _params.size() > 0)) --> Line_26 $$ Iterator iter = _params.entrySet().iterator() [CD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_26 $$ Iterator iter = _params.entrySet().iterator() [FD]
Line_25 $$ if (method instanceof PostMethod && (_params != null && _params.size() > 0)) --> Line_27 $$ while (iter.hasNext()) [CD]
Line_19 $$ Iterator iter = _headers.entrySet().iterator() --> Line_27 $$ while (iter.hasNext()) [FD]
Line_27 $$ while (iter.hasNext()) --> Line_28 $$ Map.Entry entry = (Map.Entry) iter.next() [CD]
Line_19 $$ Iterator iter = _headers.entrySet().iterator() --> Line_28 $$ Map.Entry entry = (Map.Entry) iter.next() [FD]
Line_27 $$ while (iter.hasNext()) --> Line_29 $$ ((PostMethod) method).addParameter((String) entry.getKey(), (String) entry.getValue()) [CD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_32 $$ if (method instanceof EntityEnclosingMethod && _stringOrStream != null) [CD]
Line_32 $$ if (method instanceof EntityEnclosingMethod && _stringOrStream != null) --> Line_33 $$ if (_stringOrStream instanceof InputStream) [CD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_33 $$ if (_stringOrStream instanceof InputStream) [FD]
Line_33 $$ if (_stringOrStream instanceof InputStream) --> Line_34 $$ RequestEntity entity = new InputStreamRequestEntity((InputStream) _stringOrStream) [CD]
Line_33 $$ if (_stringOrStream instanceof InputStream) --> Line_35 $$ ((EntityEnclosingMethod) method).setRequestEntity(entity) [CD]
Line_34 $$ RequestEntity entity = new InputStreamRequestEntity((InputStream) _stringOrStream) --> Line_35 $$ ((EntityEnclosingMethod) method).setRequestEntity(entity) [FD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_37 $$ RequestEntity entity = new StringRequestEntity(_stringOrStream.toString(), _contentType, null) [FD]
Line_33 $$ if (_stringOrStream instanceof InputStream) --> Line_38 $$ ((EntityEnclosingMethod) method).setRequestEntity(entity) [CD]
Line_34 $$ RequestEntity entity = new InputStreamRequestEntity((InputStream) _stringOrStream) --> Line_38 $$ ((EntityEnclosingMethod) method).setRequestEntity(entity) [FD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_41 $$ HttpClient httpClient = new HttpClient(new org.apache.commons.httpclient.SimpleHttpConnectionManager()) [CD]
Line_41 $$ HttpClient httpClient = new HttpClient(new org.apache.commons.httpclient.SimpleHttpConnectionManager()) --> Line_43 $$ int status = httpClient.executeMethod(method) [FD]
Line_6 $$ HttpMethod method = null --> Line_43 $$ int status = httpClient.executeMethod(method) [FD]
Line_7 $$ if (_stringOrStream == null && (_params == null || _params.size() <= 0)) --> Line_43 $$ int status = httpClient.executeMethod(method) [FD]
Line_43 $$ int status = httpClient.executeMethod(method) --> Line_44 $$ if (status != HttpStatus.SC_OK) [FD]
Line_44 $$ if (status != HttpStatus.SC_OK) --> Line_45 $$ if (status >= 500 && status < 600) [CD]
Line_6 $$ HttpMethod method = null --> Line_47 $$ InputStream instream = method.getResponseBodyAsStream() [FD]
Line_7 $$ if (_stringOrStream == null && (_params == null || _params.size() <= 0)) --> Line_47 $$ InputStream instream = method.getResponseBodyAsStream() [FD]
Line_47 $$ InputStream instream = method.getResponseBodyAsStream() --> Line_48 $$ IOUtils.copy(instream, _stream) [FD]
Line_2 $$ public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException --> Line_48 $$ IOUtils.copy(instream, _stream) [FD]
Line_47 $$ InputStream instream = method.getResponseBodyAsStream() --> Line_49 $$ instream.close() [FD]
Line_6 $$ HttpMethod method = null --> Line_53 $$ method.releaseConnection() [FD]
Line_7 $$ if (_stringOrStream == null && (_params == null || _params.size() <= 0)) --> Line_53 $$ method.releaseConnection() [FD]
