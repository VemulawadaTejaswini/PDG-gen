Line_2 $$ private void insertContent(ImageData imageData, Element element) --> Line_3 $$ URL url = getClass().getResource(imageData.getURL()) [CD]
Line_2 $$ private void insertContent(ImageData imageData, Element element) --> Line_3 $$ URL url = getClass().getResource(imageData.getURL()) [FD]
Line_3 $$ URL url = getClass().getResource(imageData.getURL()) --> Line_5 $$ File imageFileRead = new File(url.toURI()) [FD]
Line_2 $$ private void insertContent(ImageData imageData, Element element) --> Line_7 $$ String imageFileWritePath = "htmlReportFiles" + "/" + imageData.getURL() [FD]
Line_7 $$ String imageFileWritePath = "htmlReportFiles" + "/" + imageData.getURL() --> Line_9 $$ String[] filePathTokens = imageFileWritePath.split("/") [FD]
Line_11 $$ int i = 1 --> Line_12 $$ while (i < filePathTokens.length - 1) [FD]
Line_12 $$ while (i < filePathTokens.length - 1) --> Line_13 $$ directoryPathCreate = directoryPathCreate + "/" + filePathTokens[i] [CD]
Line_10 $$ String directoryPathCreate = filePathTokens[0] --> Line_13 $$ directoryPathCreate = directoryPathCreate + "/" + filePathTokens[i] [FD]
Line_12 $$ while (i < filePathTokens.length - 1) --> Line_14 $$ i++ [CD]
Line_11 $$ int i = 1 --> Line_14 $$ i++ [FD]
Line_16 $$ File fileDirectoryPathCreate = new File(directoryPathCreate) --> Line_17 $$ if (!fileDirectoryPathCreate.exists()) [FD]
Line_17 $$ if (!fileDirectoryPathCreate.exists()) --> Line_18 $$ boolean successfulFileCreation = fileDirectoryPathCreate.mkdirs() [CD]
Line_16 $$ File fileDirectoryPathCreate = new File(directoryPathCreate) --> Line_18 $$ boolean successfulFileCreation = fileDirectoryPathCreate.mkdirs() [FD]
Line_17 $$ if (!fileDirectoryPathCreate.exists()) --> Line_19 $$ if (successfulFileCreation == false) [CD]
Line_18 $$ boolean successfulFileCreation = fileDirectoryPathCreate.mkdirs() --> Line_19 $$ if (successfulFileCreation == false) [FD]
Line_25 $$ int readDataNumberOfBytes = 0 --> Line_26 $$ while (readDataNumberOfBytes != -1) [FD]
Line_26 $$ while (readDataNumberOfBytes != -1) --> Line_27 $$ readDataNumberOfBytes = inputStream.read(data, 0, data.length) [CD]
Line_25 $$ int readDataNumberOfBytes = 0 --> Line_27 $$ readDataNumberOfBytes = inputStream.read(data, 0, data.length) [FD]
Line_6 $$ FileInputStream inputStream = new FileInputStream(imageFileRead) --> Line_27 $$ readDataNumberOfBytes = inputStream.read(data, 0, data.length) [FD]
Line_24 $$ byte[] data = new byte[1024] --> Line_27 $$ readDataNumberOfBytes = inputStream.read(data, 0, data.length) [FD]
Line_26 $$ while (readDataNumberOfBytes != -1) --> Line_28 $$ if (readDataNumberOfBytes != -1) [CD]
Line_27 $$ readDataNumberOfBytes = inputStream.read(data, 0, data.length) --> Line_28 $$ if (readDataNumberOfBytes != -1) [FD]
Line_25 $$ int readDataNumberOfBytes = 0 --> Line_28 $$ if (readDataNumberOfBytes != -1) [FD]
Line_28 $$ if (readDataNumberOfBytes != -1) --> Line_29 $$ fileOutputStream.write(data, 0, readDataNumberOfBytes) [CD]
Line_23 $$ FileOutputStream fileOutputStream = new FileOutputStream(imageFileWrite) --> Line_29 $$ fileOutputStream.write(data, 0, readDataNumberOfBytes) [FD]
Line_24 $$ byte[] data = new byte[1024] --> Line_29 $$ fileOutputStream.write(data, 0, readDataNumberOfBytes) [FD]
Line_27 $$ readDataNumberOfBytes = inputStream.read(data, 0, data.length) --> Line_29 $$ fileOutputStream.write(data, 0, readDataNumberOfBytes) [FD]
Line_25 $$ int readDataNumberOfBytes = 0 --> Line_29 $$ fileOutputStream.write(data, 0, readDataNumberOfBytes) [FD]
Line_6 $$ FileInputStream inputStream = new FileInputStream(imageFileRead) --> Line_32 $$ inputStream.close() [FD]
Line_23 $$ FileOutputStream fileOutputStream = new FileOutputStream(imageFileWrite) --> Line_33 $$ fileOutputStream.close() [FD]
Line_2 $$ private void insertContent(ImageData imageData, Element element) --> Line_37 $$ String caption = imageData.getCaption() [CD]
Line_2 $$ private void insertContent(ImageData imageData, Element element) --> Line_37 $$ String caption = imageData.getCaption() [FD]
Line_2 $$ private void insertContent(ImageData imageData, Element element) --> Line_38 $$ Element imageElement = element.addElement("img") [CD]
Line_2 $$ private void insertContent(ImageData imageData, Element element) --> Line_38 $$ Element imageElement = element.addElement("img") [FD]
Line_2 $$ private void insertContent(ImageData imageData, Element element) --> Line_39 $$ imageElement.addAttribute("src", "htmlReportFiles" + "/" + imageData.getURL()) [CD]
Line_2 $$ private void insertContent(ImageData imageData, Element element) --> Line_39 $$ imageElement.addAttribute("src", "htmlReportFiles" + "/" + imageData.getURL()) [FD]
Line_38 $$ Element imageElement = element.addElement("img") --> Line_39 $$ imageElement.addAttribute("src", "htmlReportFiles" + "/" + imageData.getURL()) [FD]
Line_2 $$ private void insertContent(ImageData imageData, Element element) --> Line_40 $$ imageElement.addAttribute("alt", "image not available") [CD]
Line_38 $$ Element imageElement = element.addElement("img") --> Line_40 $$ imageElement.addAttribute("alt", "image not available") [FD]
Line_2 $$ private void insertContent(ImageData imageData, Element element) --> Line_41 $$ if (caption != null) [CD]
Line_37 $$ String caption = imageData.getCaption() --> Line_41 $$ if (caption != null) [FD]
Line_41 $$ if (caption != null) --> Line_42 $$ element.addElement("br") [CD]
Line_2 $$ private void insertContent(ImageData imageData, Element element) --> Line_42 $$ element.addElement("br") [FD]
Line_41 $$ if (caption != null) --> Line_43 $$ element.addText(caption) [CD]
Line_2 $$ private void insertContent(ImageData imageData, Element element) --> Line_43 $$ element.addText(caption) [FD]
Line_37 $$ String caption = imageData.getCaption() --> Line_43 $$ element.addText(caption) [FD]
Line_27 $$ readDataNumberOfBytes = inputStream.read(data, 0, data.length) --> Line_26 $$ while (readDataNumberOfBytes != -1) [FD]
