Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_3 $$ String proto = url.getProtocol().toLowerCase() [CD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_3 $$ String proto = url.getProtocol().toLowerCase() [FD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_4 $$ if (!("http".equals(proto) || "https".equals(proto))) [CD]
Line_3 $$ String proto = url.getProtocol().toLowerCase() --> Line_4 $$ if (!("http".equals(proto) || "https".equals(proto))) [FD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() [CD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() [FD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_6 $$ StringBuilder ua = new StringBuilder("Java/") [CD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_7 $$ ua.append(System.getProperty("java.version")) [CD]
Line_6 $$ StringBuilder ua = new StringBuilder("Java/") --> Line_7 $$ ua.append(System.getProperty("java.version")) [FD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_8 $$ ua.append(" (") [CD]
Line_6 $$ StringBuilder ua = new StringBuilder("Java/") --> Line_8 $$ ua.append(" (") [FD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_9 $$ ua.append(OAIHarvester.class.getName()) [CD]
Line_6 $$ StringBuilder ua = new StringBuilder("Java/") --> Line_9 $$ ua.append(OAIHarvester.class.getName()) [FD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_10 $$ ua.append(')') [CD]
Line_6 $$ StringBuilder ua = new StringBuilder("Java/") --> Line_10 $$ ua.append(')') [FD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_11 $$ conn.setRequestProperty("User-Agent", ua.toString()) [CD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_11 $$ conn.setRequestProperty("User-Agent", ua.toString()) [FD]
Line_6 $$ StringBuilder ua = new StringBuilder("Java/") --> Line_11 $$ conn.setRequestProperty("User-Agent", ua.toString()) [FD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_12 $$ conn.setRequestProperty("Accept-Encoding", "gzip, deflate, identity;q=0.3, *;q=0") [CD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_12 $$ conn.setRequestProperty("Accept-Encoding", "gzip, deflate, identity;q=0.3, *;q=0") [FD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_13 $$ conn.setRequestProperty("Accept-Charset", "utf-8, *;q=0.1") [CD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_13 $$ conn.setRequestProperty("Accept-Charset", "utf-8, *;q=0.1") [FD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_14 $$ conn.setRequestProperty("Accept", "text/xml, application/xml, *;q=0.1") [CD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_14 $$ conn.setRequestProperty("Accept", "text/xml, application/xml, *;q=0.1") [FD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_15 $$ conn.setUseCaches(false) [CD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_15 $$ conn.setUseCaches(false) [FD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_16 $$ conn.setFollowRedirects(true) [CD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_16 $$ conn.setFollowRedirects(true) [FD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_17 $$ log.debug("Opening connection...") [CD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_18 $$ InputStream in = null [CD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_20 $$ conn.connect() [FD]
Line_18 $$ InputStream in = null --> Line_21 $$ in = conn.getInputStream() [FD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_21 $$ in = conn.getInputStream() [FD]
Line_23 $$ int after, code --> Line_25 $$ after = conn.getHeaderFieldInt("Retry-After", -1) [FD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_25 $$ after = conn.getHeaderFieldInt("Retry-After", -1) [FD]
Line_23 $$ int after, code --> Line_26 $$ code = conn.getResponseCode() [FD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_26 $$ code = conn.getResponseCode() [FD]
Line_23 $$ int after, code --> Line_28 $$ after = -1 [FD]
Line_25 $$ after = conn.getHeaderFieldInt("Retry-After", -1) --> Line_28 $$ after = -1 [FD]
Line_23 $$ int after, code --> Line_29 $$ code = -1 [FD]
Line_26 $$ code = conn.getResponseCode() --> Line_29 $$ code = -1 [FD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_34 $$ String encoding = conn.getContentEncoding() [CD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_34 $$ String encoding = conn.getContentEncoding() [FD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_35 $$ if (encoding == null) [CD]
Line_34 $$ String encoding = conn.getContentEncoding() --> Line_35 $$ if (encoding == null) [FD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_36 $$ encoding = encoding.toLowerCase() [CD]
Line_34 $$ String encoding = conn.getContentEncoding() --> Line_36 $$ encoding = encoding.toLowerCase() [FD]
Line_35 $$ if (encoding == null) --> Line_36 $$ encoding = encoding.toLowerCase() [FD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_37 $$ log.debug("HTTP server uses " + encoding + " content encoding.") [CD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_38 $$ if (!"identity".equals(encoding)) [CD]
Line_34 $$ String encoding = conn.getContentEncoding() --> Line_38 $$ if (!"identity".equals(encoding)) [FD]
Line_35 $$ if (encoding == null) --> Line_38 $$ if (!"identity".equals(encoding)) [FD]
Line_36 $$ encoding = encoding.toLowerCase() --> Line_38 $$ if (!"identity".equals(encoding)) [FD]
Line_18 $$ InputStream in = null --> Line_38 $$ if (!"identity".equals(encoding)) [FD]
Line_21 $$ in = conn.getInputStream() --> Line_38 $$ if (!"identity".equals(encoding)) [FD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_39 $$ String contentType = conn.getContentType() [CD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_39 $$ String contentType = conn.getContentType() [FD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_40 $$ String charset = null [CD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_41 $$ if (contentType != null) [CD]
Line_39 $$ String contentType = conn.getContentType() --> Line_41 $$ if (contentType != null) [FD]
Line_41 $$ if (contentType != null) --> Line_42 $$ contentType = contentType.toLowerCase() [CD]
Line_39 $$ String contentType = conn.getContentType() --> Line_42 $$ contentType = contentType.toLowerCase() [FD]
Line_41 $$ if (contentType != null) --> Line_43 $$ int charsetStart = contentType.indexOf("charset=") [CD]
Line_39 $$ String contentType = conn.getContentType() --> Line_43 $$ int charsetStart = contentType.indexOf("charset=") [FD]
Line_42 $$ contentType = contentType.toLowerCase() --> Line_43 $$ int charsetStart = contentType.indexOf("charset=") [FD]
Line_41 $$ if (contentType != null) --> Line_44 $$ if (charsetStart >= 0) [CD]
Line_43 $$ int charsetStart = contentType.indexOf("charset=") --> Line_44 $$ if (charsetStart >= 0) [FD]
Line_44 $$ if (charsetStart >= 0) --> Line_45 $$ int charsetEnd = contentType.indexOf(";", charsetStart) [CD]
Line_39 $$ String contentType = conn.getContentType() --> Line_45 $$ int charsetEnd = contentType.indexOf(";", charsetStart) [FD]
Line_42 $$ contentType = contentType.toLowerCase() --> Line_45 $$ int charsetEnd = contentType.indexOf(";", charsetStart) [FD]
Line_43 $$ int charsetStart = contentType.indexOf("charset=") --> Line_45 $$ int charsetEnd = contentType.indexOf(";", charsetStart) [FD]
Line_44 $$ if (charsetStart >= 0) --> Line_46 $$ charsetEnd = contentType.length() [CD]
Line_45 $$ int charsetEnd = contentType.indexOf(";", charsetStart) --> Line_46 $$ charsetEnd = contentType.length() [FD]
Line_39 $$ String contentType = conn.getContentType() --> Line_46 $$ charsetEnd = contentType.length() [FD]
Line_42 $$ contentType = contentType.toLowerCase() --> Line_46 $$ charsetEnd = contentType.length() [FD]
Line_44 $$ if (charsetStart >= 0) --> Line_47 $$ charsetStart += "charset=".length() [CD]
Line_43 $$ int charsetStart = contentType.indexOf("charset=") --> Line_47 $$ charsetStart += "charset=".length() [FD]
Line_44 $$ if (charsetStart >= 0) --> Line_48 $$ charset = contentType.substring(charsetStart, charsetEnd).trim() [CD]
Line_40 $$ String charset = null --> Line_48 $$ charset = contentType.substring(charsetStart, charsetEnd).trim() [FD]
Line_39 $$ String contentType = conn.getContentType() --> Line_48 $$ charset = contentType.substring(charsetStart, charsetEnd).trim() [FD]
Line_42 $$ contentType = contentType.toLowerCase() --> Line_48 $$ charset = contentType.substring(charsetStart, charsetEnd).trim() [FD]
Line_43 $$ int charsetStart = contentType.indexOf("charset=") --> Line_48 $$ charset = contentType.substring(charsetStart, charsetEnd).trim() [FD]
Line_47 $$ charsetStart += "charset=".length() --> Line_48 $$ charset = contentType.substring(charsetStart, charsetEnd).trim() [FD]
Line_45 $$ int charsetEnd = contentType.indexOf(";", charsetStart) --> Line_48 $$ charset = contentType.substring(charsetStart, charsetEnd).trim() [FD]
Line_46 $$ charsetEnd = contentType.length() --> Line_48 $$ charset = contentType.substring(charsetStart, charsetEnd).trim() [FD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_51 $$ log.debug("Charset from Content-Type: '" + charset + "'") [CD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_52 $$ InputSource src = new InputSource(in) [CD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_53 $$ src.setSystemId(url.toString()) [CD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_53 $$ src.setSystemId(url.toString()) [FD]
Line_52 $$ InputSource src = new InputSource(in) --> Line_53 $$ src.setSystemId(url.toString()) [FD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_54 $$ src.setEncoding(charset) [CD]
Line_52 $$ InputSource src = new InputSource(in) --> Line_54 $$ src.setEncoding(charset) [FD]
Line_40 $$ String charset = null --> Line_54 $$ src.setEncoding(charset) [FD]
Line_48 $$ charset = contentType.substring(charsetStart, charsetEnd).trim() --> Line_54 $$ src.setEncoding(charset) [FD]
Line_2 $$ public static InputSource getInputSource(URL url) throws IOException --> Line_55 $$ return src [CD]
