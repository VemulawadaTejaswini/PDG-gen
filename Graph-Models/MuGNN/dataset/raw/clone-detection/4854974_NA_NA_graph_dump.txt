Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_3 $$ log.debug("Starting FTP FilePull") [CD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_4 $$ String sourceNode = attributes.get("src_name") [CD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_4 $$ String sourceNode = attributes.get("src_name") [FD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_5 $$ String sourceUser = attributes.get("src_user") [CD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_5 $$ String sourceUser = attributes.get("src_user") [FD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_6 $$ String sourcePassword = attributes.get("src_password") [CD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_6 $$ String sourcePassword = attributes.get("src_password") [FD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_7 $$ String sourceFile = attributes.get("src_file") [CD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_7 $$ String sourceFile = attributes.get("src_file") [FD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_8 $$ String messageID = attributes.get("messageID") [CD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_8 $$ String messageID = attributes.get("messageID") [FD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_9 $$ String sourceMD5 = attributes.get("src_md5") [CD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_9 $$ String sourceMD5 = attributes.get("src_md5") [FD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_10 $$ String sourceFileType = attributes.get("src_file_type") [CD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_10 $$ String sourceFileType = attributes.get("src_file_type") [FD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_11 $$ Integer sourcePort = 21 [CD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_12 $$ String sourcePortString = attributes.get("src_port") [CD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_12 $$ String sourcePortString = attributes.get("src_port") [FD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_13 $$ if ((sourcePortString != null) && (sourcePortString.equals(""))) [CD]
Line_12 $$ String sourcePortString = attributes.get("src_port") --> Line_13 $$ if ((sourcePortString != null) && (sourcePortString.equals(""))) [FD]
Line_11 $$ Integer sourcePort = 21 --> Line_15 $$ sourcePort = Integer.parseInt(sourcePortString) [FD]
Line_12 $$ String sourcePortString = attributes.get("src_port") --> Line_15 $$ sourcePort = Integer.parseInt(sourcePortString) [FD]
Line_11 $$ Integer sourcePort = 21 --> Line_17 $$ sourcePort = 21 [FD]
Line_15 $$ sourcePort = Integer.parseInt(sourcePortString) --> Line_17 $$ sourcePort = 21 [FD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_21 $$ log.info("Starting FTP pull of \"" + sourceFile + "\" from \"" + sourceNode) [CD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_22 $$ if ((sourceUser == null) || (sourceUser.equals(""))) [CD]
Line_5 $$ String sourceUser = attributes.get("src_user") --> Line_22 $$ if ((sourceUser == null) || (sourceUser.equals(""))) [FD]
Line_22 $$ if ((sourceUser == null) || (sourceUser.equals(""))) --> Line_23 $$ List userDBVal = axt.db.GeneralDAO.getNodeValue(sourceNode, "ftpUser") [CD]
Line_4 $$ String sourceNode = attributes.get("src_name") --> Line_23 $$ List userDBVal = axt.db.GeneralDAO.getNodeValue(sourceNode, "ftpUser") [FD]
Line_22 $$ if ((sourceUser == null) || (sourceUser.equals(""))) --> Line_24 $$ if (userDBVal.size() < 1) [CD]
Line_23 $$ List userDBVal = axt.db.GeneralDAO.getNodeValue(sourceNode, "ftpUser") --> Line_24 $$ if (userDBVal.size() < 1) [FD]
Line_24 $$ if (userDBVal.size() < 1) --> Line_25 $$ sourceUser = DEFAULTUSER [CD]
Line_5 $$ String sourceUser = attributes.get("src_user") --> Line_25 $$ sourceUser = DEFAULTUSER [FD]
Line_24 $$ if (userDBVal.size() < 1) --> Line_27 $$ sourceUser = (String) userDBVal.get(0) [CD]
Line_5 $$ String sourceUser = attributes.get("src_user") --> Line_27 $$ sourceUser = (String) userDBVal.get(0) [FD]
Line_25 $$ sourceUser = DEFAULTUSER --> Line_27 $$ sourceUser = (String) userDBVal.get(0) [FD]
Line_23 $$ List userDBVal = axt.db.GeneralDAO.getNodeValue(sourceNode, "ftpUser") --> Line_27 $$ sourceUser = (String) userDBVal.get(0) [FD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_30 $$ if ((sourcePassword == null) || (sourcePassword.equals(""))) [CD]
Line_6 $$ String sourcePassword = attributes.get("src_password") --> Line_30 $$ if ((sourcePassword == null) || (sourcePassword.equals(""))) [FD]
Line_30 $$ if ((sourcePassword == null) || (sourcePassword.equals(""))) --> Line_31 $$ List passwordDBVal = axt.db.GeneralDAO.getNodeValue(sourceNode, "ftpPassword") [CD]
Line_4 $$ String sourceNode = attributes.get("src_name") --> Line_31 $$ List passwordDBVal = axt.db.GeneralDAO.getNodeValue(sourceNode, "ftpPassword") [FD]
Line_30 $$ if ((sourcePassword == null) || (sourcePassword.equals(""))) --> Line_32 $$ if (passwordDBVal.size() < 1) [CD]
Line_31 $$ List passwordDBVal = axt.db.GeneralDAO.getNodeValue(sourceNode, "ftpPassword") --> Line_32 $$ if (passwordDBVal.size() < 1) [FD]
Line_32 $$ if (passwordDBVal.size() < 1) --> Line_33 $$ sourcePassword = DEFAULTPASSWORD [CD]
Line_6 $$ String sourcePassword = attributes.get("src_password") --> Line_33 $$ sourcePassword = DEFAULTPASSWORD [FD]
Line_32 $$ if (passwordDBVal.size() < 1) --> Line_35 $$ sourcePassword = (String) passwordDBVal.get(0) [CD]
Line_6 $$ String sourcePassword = attributes.get("src_password") --> Line_35 $$ sourcePassword = (String) passwordDBVal.get(0) [FD]
Line_33 $$ sourcePassword = DEFAULTPASSWORD --> Line_35 $$ sourcePassword = (String) passwordDBVal.get(0) [FD]
Line_31 $$ List passwordDBVal = axt.db.GeneralDAO.getNodeValue(sourceNode, "ftpPassword") --> Line_35 $$ sourcePassword = (String) passwordDBVal.get(0) [FD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_38 $$ String stageFile = null [CD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_39 $$ int stageFileID [CD]
Line_39 $$ int stageFileID --> Line_41 $$ stageFileID = axt.db.GeneralDAO.getStageFile(messageID) [FD]
Line_8 $$ String messageID = attributes.get("messageID") --> Line_41 $$ stageFileID = axt.db.GeneralDAO.getStageFile(messageID) [FD]
Line_38 $$ String stageFile = null --> Line_42 $$ stageFile = STAGINGDIR + "/" + stageFileID [FD]
Line_39 $$ int stageFileID --> Line_42 $$ stageFile = STAGINGDIR + "/" + stageFileID [FD]
Line_41 $$ stageFileID = axt.db.GeneralDAO.getStageFile(messageID) --> Line_42 $$ stageFile = STAGINGDIR + "/" + stageFileID [FD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_46 $$ FileOutputStream fos [CD]
Line_46 $$ FileOutputStream fos --> Line_48 $$ fos = new FileOutputStream(stageFile) [FD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_52 $$ FTPClient ftp = new FTPClient() [CD]
Line_52 $$ FTPClient ftp = new FTPClient() --> Line_55 $$ ftp.connect(sourceNode, sourcePort) [FD]
Line_4 $$ String sourceNode = attributes.get("src_name") --> Line_55 $$ ftp.connect(sourceNode, sourcePort) [FD]
Line_11 $$ Integer sourcePort = 21 --> Line_55 $$ ftp.connect(sourceNode, sourcePort) [FD]
Line_15 $$ sourcePort = Integer.parseInt(sourcePortString) --> Line_55 $$ ftp.connect(sourceNode, sourcePort) [FD]
Line_17 $$ sourcePort = 21 --> Line_55 $$ ftp.connect(sourceNode, sourcePort) [FD]
Line_52 $$ FTPClient ftp = new FTPClient() --> Line_57 $$ int reply = ftp.getReplyCode() [FD]
Line_57 $$ int reply = ftp.getReplyCode() --> Line_58 $$ if (!FTPReply.isPositiveCompletion(reply)) [FD]
Line_58 $$ if (!FTPReply.isPositiveCompletion(reply)) --> Line_59 $$ ftp.disconnect() [CD]
Line_52 $$ FTPClient ftp = new FTPClient() --> Line_59 $$ ftp.disconnect() [FD]
Line_52 $$ FTPClient ftp = new FTPClient() --> Line_60 $$ throw new Exception("Failed to connect to \"" + sourceNode + "\"  as user \"" + sourceUser + "\" - ERROR: " + ftp.getReplyString()) [FD]
Line_52 $$ FTPClient ftp = new FTPClient() --> Line_63 $$ if (!ftp.login(sourceUser, sourcePassword)) [FD]
Line_5 $$ String sourceUser = attributes.get("src_user") --> Line_63 $$ if (!ftp.login(sourceUser, sourcePassword)) [FD]
Line_25 $$ sourceUser = DEFAULTUSER --> Line_63 $$ if (!ftp.login(sourceUser, sourcePassword)) [FD]
Line_27 $$ sourceUser = (String) userDBVal.get(0) --> Line_63 $$ if (!ftp.login(sourceUser, sourcePassword)) [FD]
Line_6 $$ String sourcePassword = attributes.get("src_password") --> Line_63 $$ if (!ftp.login(sourceUser, sourcePassword)) [FD]
Line_33 $$ sourcePassword = DEFAULTPASSWORD --> Line_63 $$ if (!ftp.login(sourceUser, sourcePassword)) [FD]
Line_35 $$ sourcePassword = (String) passwordDBVal.get(0) --> Line_63 $$ if (!ftp.login(sourceUser, sourcePassword)) [FD]
Line_63 $$ if (!ftp.login(sourceUser, sourcePassword)) --> Line_64 $$ ftp.disconnect() [CD]
Line_52 $$ FTPClient ftp = new FTPClient() --> Line_64 $$ ftp.disconnect() [FD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_72 $$ log.debug("Performing Site Commands") [CD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_73 $$ Iterator siteIterator = GeneralDAO.getNodeValue(sourceNode, "ftpSite").iterator() [CD]
Line_4 $$ String sourceNode = attributes.get("src_name") --> Line_73 $$ Iterator siteIterator = GeneralDAO.getNodeValue(sourceNode, "ftpSite").iterator() [FD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_74 $$ while (siteIterator.hasNext()) [CD]
Line_73 $$ Iterator siteIterator = GeneralDAO.getNodeValue(sourceNode, "ftpSite").iterator() --> Line_74 $$ while (siteIterator.hasNext()) [FD]
Line_74 $$ while (siteIterator.hasNext()) --> Line_75 $$ String siteCommand = null [CD]
Line_75 $$ String siteCommand = null --> Line_77 $$ siteCommand = (String) siteIterator.next() [FD]
Line_73 $$ Iterator siteIterator = GeneralDAO.getNodeValue(sourceNode, "ftpSite").iterator() --> Line_77 $$ siteCommand = (String) siteIterator.next() [FD]
Line_52 $$ FTPClient ftp = new FTPClient() --> Line_78 $$ ftp.site(siteCommand) [FD]
Line_75 $$ String siteCommand = null --> Line_78 $$ ftp.site(siteCommand) [FD]
Line_77 $$ siteCommand = (String) siteIterator.next() --> Line_78 $$ ftp.site(siteCommand) [FD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_83 $$ if (sourceFileType != null) [CD]
Line_10 $$ String sourceFileType = attributes.get("src_file_type") --> Line_83 $$ if (sourceFileType != null) [FD]
Line_83 $$ if (sourceFileType != null) --> Line_84 $$ if (sourceFileType.equals("A")) [CD]
Line_10 $$ String sourceFileType = attributes.get("src_file_type") --> Line_84 $$ if (sourceFileType.equals("A")) [FD]
Line_84 $$ if (sourceFileType.equals("A")) --> Line_85 $$ log.debug("Set File Type to ASCII") [CD]
Line_84 $$ if (sourceFileType.equals("A")) --> Line_86 $$ ftp.setFileType(FTP.ASCII_FILE_TYPE) [CD]
Line_52 $$ FTPClient ftp = new FTPClient() --> Line_86 $$ ftp.setFileType(FTP.ASCII_FILE_TYPE) [FD]
Line_84 $$ if (sourceFileType.equals("A")) --> Line_87 $$ if (sourceFileType.equals("B")) [CD]
Line_10 $$ String sourceFileType = attributes.get("src_file_type") --> Line_87 $$ if (sourceFileType.equals("B")) [FD]
Line_87 $$ if (sourceFileType.equals("B")) --> Line_88 $$ log.debug("Set File Type to BINARY") [CD]
Line_87 $$ if (sourceFileType.equals("B")) --> Line_89 $$ ftp.setFileType(FTP.BINARY_FILE_TYPE) [CD]
Line_52 $$ FTPClient ftp = new FTPClient() --> Line_89 $$ ftp.setFileType(FTP.BINARY_FILE_TYPE) [FD]
Line_87 $$ if (sourceFileType.equals("B")) --> Line_90 $$ if (sourceFileType.equals("E")) [CD]
Line_10 $$ String sourceFileType = attributes.get("src_file_type") --> Line_90 $$ if (sourceFileType.equals("E")) [FD]
Line_90 $$ if (sourceFileType.equals("E")) --> Line_91 $$ log.debug("Set File Type to EBCDIC") [CD]
Line_90 $$ if (sourceFileType.equals("E")) --> Line_92 $$ ftp.setFileType(FTP.EBCDIC_FILE_TYPE) [CD]
Line_52 $$ FTPClient ftp = new FTPClient() --> Line_92 $$ ftp.setFileType(FTP.EBCDIC_FILE_TYPE) [FD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_95 $$ log.debug("Opening the File Stream") [CD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_96 $$ InputStream in = null [CD]
Line_96 $$ InputStream in = null --> Line_98 $$ in = ftp.retrieveFileStream(sourceFile) [FD]
Line_52 $$ FTPClient ftp = new FTPClient() --> Line_98 $$ in = ftp.retrieveFileStream(sourceFile) [FD]
Line_7 $$ String sourceFile = attributes.get("src_file") --> Line_98 $$ in = ftp.retrieveFileStream(sourceFile) [FD]
Line_96 $$ InputStream in = null --> Line_99 $$ if (in == null) [FD]
Line_98 $$ in = ftp.retrieveFileStream(sourceFile) --> Line_99 $$ if (in == null) [FD]
Line_52 $$ FTPClient ftp = new FTPClient() --> Line_100 $$ throw new Exception("Failed get the file \"" + sourceFile + "\" from \"" + sourceNode + "\"  - ERROR: " + ftp.getReplyString()) [FD]
Line_52 $$ FTPClient ftp = new FTPClient() --> Line_103 $$ ftp.disconnect() [FD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_107 $$ log.debug("Starting the read") [CD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_108 $$ DESCrypt encrypter = null [CD]
Line_108 $$ DESCrypt encrypter = null --> Line_110 $$ encrypter = new DESCrypt() [FD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_114 $$ String receivedMD5 = null [CD]
Line_108 $$ DESCrypt encrypter = null --> Line_116 $$ Object[] returnValues = encrypter.encrypt(in, fos) [FD]
Line_110 $$ encrypter = new DESCrypt() --> Line_116 $$ Object[] returnValues = encrypter.encrypt(in, fos) [FD]
Line_96 $$ InputStream in = null --> Line_116 $$ Object[] returnValues = encrypter.encrypt(in, fos) [FD]
Line_98 $$ in = ftp.retrieveFileStream(sourceFile) --> Line_116 $$ Object[] returnValues = encrypter.encrypt(in, fos) [FD]
Line_46 $$ FileOutputStream fos --> Line_116 $$ Object[] returnValues = encrypter.encrypt(in, fos) [FD]
Line_48 $$ fos = new FileOutputStream(stageFile) --> Line_116 $$ Object[] returnValues = encrypter.encrypt(in, fos) [FD]
Line_114 $$ String receivedMD5 = null --> Line_117 $$ receivedMD5 = (String) returnValues[0] [FD]
Line_39 $$ int stageFileID --> Line_118 $$ GeneralDAO.setStageFileSize(stageFileID, (Long) returnValues[1]) [FD]
Line_41 $$ stageFileID = axt.db.GeneralDAO.getStageFile(messageID) --> Line_118 $$ GeneralDAO.setStageFileSize(stageFileID, (Long) returnValues[1]) [FD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_123 $$ log.debug("Logging Out") [CD]
Line_52 $$ FTPClient ftp = new FTPClient() --> Line_125 $$ ftp.logout() [FD]
Line_46 $$ FileOutputStream fos --> Line_126 $$ fos.close() [FD]
Line_48 $$ fos = new FileOutputStream(stageFile) --> Line_126 $$ fos.close() [FD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_130 $$ log.debug("Setting the File Digest") [CD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_131 $$ GeneralDAO.setStageFileDigest(stageFileID, receivedMD5) [CD]
Line_39 $$ int stageFileID --> Line_131 $$ GeneralDAO.setStageFileDigest(stageFileID, receivedMD5) [FD]
Line_41 $$ stageFileID = axt.db.GeneralDAO.getStageFile(messageID) --> Line_131 $$ GeneralDAO.setStageFileDigest(stageFileID, receivedMD5) [FD]
Line_114 $$ String receivedMD5 = null --> Line_131 $$ GeneralDAO.setStageFileDigest(stageFileID, receivedMD5) [FD]
Line_117 $$ receivedMD5 = (String) returnValues[0] --> Line_131 $$ GeneralDAO.setStageFileDigest(stageFileID, receivedMD5) [FD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_132 $$ if ((sourceMD5 != null) && (!sourceMD5.equals(""))) [CD]
Line_9 $$ String sourceMD5 = attributes.get("src_md5") --> Line_132 $$ if ((sourceMD5 != null) && (!sourceMD5.equals(""))) [FD]
Line_132 $$ if ((sourceMD5 != null) && (!sourceMD5.equals(""))) --> Line_133 $$ log.debug("File DIGEST compare - Source: " + sourceMD5.toLowerCase() + " | Received: " + receivedMD5) [CD]
Line_9 $$ String sourceMD5 = attributes.get("src_md5") --> Line_133 $$ log.debug("File DIGEST compare - Source: " + sourceMD5.toLowerCase() + " | Received: " + receivedMD5) [FD]
Line_132 $$ if ((sourceMD5 != null) && (!sourceMD5.equals(""))) --> Line_134 $$ if (!receivedMD5.equals(sourceMD5.toLowerCase())) [CD]
Line_114 $$ String receivedMD5 = null --> Line_134 $$ if (!receivedMD5.equals(sourceMD5.toLowerCase())) [FD]
Line_117 $$ receivedMD5 = (String) returnValues[0] --> Line_134 $$ if (!receivedMD5.equals(sourceMD5.toLowerCase())) [FD]
Line_9 $$ String sourceMD5 = attributes.get("src_md5") --> Line_134 $$ if (!receivedMD5.equals(sourceMD5.toLowerCase())) [FD]
Line_2 $$ public void GetFile(ClientConnector cc, Map<String, String> attributes) throws Exception --> Line_138 $$ return [CD]
