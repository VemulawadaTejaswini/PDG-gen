Line_3 $$ if (m_transContext == DOTranslationUtility.SERIALIZE_EXPORT_ARCHIVE && !m_format.equals(ATOM_ZIP1_1)) --> Line_4 $$ String mimeType = vds.DSMIME [CD]
Line_3 $$ if (m_transContext == DOTranslationUtility.SERIALIZE_EXPORT_ARCHIVE && !m_format.equals(ATOM_ZIP1_1)) --> Line_5 $$ if (MimeTypeHelper.isText(mimeType) || MimeTypeHelper.isXml(mimeType)) [CD]
Line_4 $$ String mimeType = vds.DSMIME --> Line_5 $$ if (MimeTypeHelper.isText(mimeType) || MimeTypeHelper.isXml(mimeType)) [FD]
Line_4 $$ String mimeType = vds.DSMIME --> Line_7 $$ entry.setContent(IOUtils.toString(vds.getContentStream(), m_encoding), mimeType) [FD]
Line_5 $$ if (MimeTypeHelper.isText(mimeType) || MimeTypeHelper.isXml(mimeType)) --> Line_12 $$ entry.setContent(vds.getContentStream(), mimeType) [CD]
Line_4 $$ String mimeType = vds.DSMIME --> Line_12 $$ entry.setContent(vds.getContentStream(), mimeType) [FD]
Line_3 $$ if (m_transContext == DOTranslationUtility.SERIALIZE_EXPORT_ARCHIVE && !m_format.equals(ATOM_ZIP1_1)) --> Line_15 $$ String dsLocation [CD]
Line_3 $$ if (m_transContext == DOTranslationUtility.SERIALIZE_EXPORT_ARCHIVE && !m_format.equals(ATOM_ZIP1_1)) --> Line_16 $$ IRI iri [CD]
Line_3 $$ if (m_transContext == DOTranslationUtility.SERIALIZE_EXPORT_ARCHIVE && !m_format.equals(ATOM_ZIP1_1)) --> Line_17 $$ if (m_format.equals(ATOM_ZIP1_1) && m_transContext != DOTranslationUtility.AS_IS) [CD]
Line_17 $$ if (m_format.equals(ATOM_ZIP1_1) && m_transContext != DOTranslationUtility.AS_IS) --> Line_18 $$ dsLocation = vds.DSVersionID + "." + MimeTypeUtils.fileExtensionForMIMEType(vds.DSMIME) [CD]
Line_15 $$ String dsLocation --> Line_18 $$ dsLocation = vds.DSVersionID + "." + MimeTypeUtils.fileExtensionForMIMEType(vds.DSMIME) [FD]
Line_21 $$ InputStream is = vds.getContentStream() --> Line_22 $$ IOUtils.copy(is, m_zout) [FD]
Line_21 $$ InputStream is = vds.getContentStream() --> Line_23 $$ is.close() [FD]
Line_17 $$ if (m_format.equals(ATOM_ZIP1_1) && m_transContext != DOTranslationUtility.AS_IS) --> Line_29 $$ dsLocation = StreamUtility.enc(DOTranslationUtility.normalizeDSLocationURLs(m_obj.getPid(), vds, m_transContext).DSLocation) [CD]
Line_15 $$ String dsLocation --> Line_29 $$ dsLocation = StreamUtility.enc(DOTranslationUtility.normalizeDSLocationURLs(m_obj.getPid(), vds, m_transContext).DSLocation) [FD]
Line_18 $$ dsLocation = vds.DSVersionID + "." + MimeTypeUtils.fileExtensionForMIMEType(vds.DSMIME) --> Line_29 $$ dsLocation = StreamUtility.enc(DOTranslationUtility.normalizeDSLocationURLs(m_obj.getPid(), vds, m_transContext).DSLocation) [FD]
Line_3 $$ if (m_transContext == DOTranslationUtility.SERIALIZE_EXPORT_ARCHIVE && !m_format.equals(ATOM_ZIP1_1)) --> Line_31 $$ iri = new IRI(dsLocation) [CD]
Line_16 $$ IRI iri --> Line_31 $$ iri = new IRI(dsLocation) [FD]
Line_3 $$ if (m_transContext == DOTranslationUtility.SERIALIZE_EXPORT_ARCHIVE && !m_format.equals(ATOM_ZIP1_1)) --> Line_32 $$ entry.setSummary(vds.DSVersionID) [CD]
Line_3 $$ if (m_transContext == DOTranslationUtility.SERIALIZE_EXPORT_ARCHIVE && !m_format.equals(ATOM_ZIP1_1)) --> Line_33 $$ entry.setContent(iri, vds.DSMIME) [CD]
Line_16 $$ IRI iri --> Line_33 $$ entry.setContent(iri, vds.DSMIME) [FD]
Line_31 $$ iri = new IRI(dsLocation) --> Line_33 $$ entry.setContent(iri, vds.DSMIME) [FD]
