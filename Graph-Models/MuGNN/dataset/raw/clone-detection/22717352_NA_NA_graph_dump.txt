Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer") --> Line_4 $$ if (con == null) [FD]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer") --> Line_8 $$ con.setAutoCommit(false) [FD]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer") --> Line_10 $$ PreparedStatement ps = con.prepareStatement("INSERT INTO USERS (id,firstname,lastname,username) VALUES (?,?,?,?)") [FD]
Line_10 $$ PreparedStatement ps = con.prepareStatement("INSERT INTO USERS (id,firstname,lastname,username) VALUES (?,?,?,?)") --> Line_11 $$ ps.setInt(1, 5) [FD]
Line_10 $$ PreparedStatement ps = con.prepareStatement("INSERT INTO USERS (id,firstname,lastname,username) VALUES (?,?,?,?)") --> Line_12 $$ ps.setString(2, entry.getEntry().getAttribute(db2ldap.get("firstname")).getStringValue()) [FD]
Line_9 $$ HashMap<String, String> db2ldap = (HashMap<String, String>) chain.getRequest().get(JdbcInsert.MYVD_DB_DB2LDAP + "LDAPBaseServer") --> Line_12 $$ ps.setString(2, entry.getEntry().getAttribute(db2ldap.get("firstname")).getStringValue()) [FD]
Line_10 $$ PreparedStatement ps = con.prepareStatement("INSERT INTO USERS (id,firstname,lastname,username) VALUES (?,?,?,?)") --> Line_13 $$ ps.setString(3, entry.getEntry().getAttribute(db2ldap.get("lastname")).getStringValue()) [FD]
Line_9 $$ HashMap<String, String> db2ldap = (HashMap<String, String>) chain.getRequest().get(JdbcInsert.MYVD_DB_DB2LDAP + "LDAPBaseServer") --> Line_13 $$ ps.setString(3, entry.getEntry().getAttribute(db2ldap.get("lastname")).getStringValue()) [FD]
Line_10 $$ PreparedStatement ps = con.prepareStatement("INSERT INTO USERS (id,firstname,lastname,username) VALUES (?,?,?,?)") --> Line_14 $$ ps.setString(4, entry.getEntry().getAttribute(db2ldap.get("username")).getStringValue()) [FD]
Line_9 $$ HashMap<String, String> db2ldap = (HashMap<String, String>) chain.getRequest().get(JdbcInsert.MYVD_DB_DB2LDAP + "LDAPBaseServer") --> Line_14 $$ ps.setString(4, entry.getEntry().getAttribute(db2ldap.get("username")).getStringValue()) [FD]
Line_10 $$ PreparedStatement ps = con.prepareStatement("INSERT INTO USERS (id,firstname,lastname,username) VALUES (?,?,?,?)") --> Line_15 $$ ps.executeUpdate() [FD]
Line_10 $$ PreparedStatement ps = con.prepareStatement("INSERT INTO USERS (id,firstname,lastname,username) VALUES (?,?,?,?)") --> Line_16 $$ ps.close() [FD]
Line_10 $$ PreparedStatement ps = con.prepareStatement("INSERT INTO USERS (id,firstname,lastname,username) VALUES (?,?,?,?)") --> Line_17 $$ ps = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?") [FD]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer") --> Line_17 $$ ps = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?") [FD]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer") --> Line_18 $$ PreparedStatement inst = con.prepareStatement("INSERT INTO LOCATIONMAP (person,location) VALUES (?,?)") [FD]
Line_9 $$ HashMap<String, String> db2ldap = (HashMap<String, String>) chain.getRequest().get(JdbcInsert.MYVD_DB_DB2LDAP + "LDAPBaseServer") --> Line_19 $$ LDAPAttribute l = entry.getEntry().getAttribute(db2ldap.get("name")) [FD]
Line_20 $$ if (l == null) --> Line_21 $$ con.rollback() [CD]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer") --> Line_21 $$ con.rollback() [FD]
Line_25 $$ for (int i = 0; i < vals.length; i++) --> Line_26 $$ ps.setString(1, vals[i]) [CD]
Line_10 $$ PreparedStatement ps = con.prepareStatement("INSERT INTO USERS (id,firstname,lastname,username) VALUES (?,?,?,?)") --> Line_26 $$ ps.setString(1, vals[i]) [FD]
Line_17 $$ ps = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?") --> Line_26 $$ ps.setString(1, vals[i]) [FD]
Line_25 $$ for (int i = 0; i < vals.length; i++) --> Line_27 $$ ResultSet rs = ps.executeQuery() [CD]
Line_10 $$ PreparedStatement ps = con.prepareStatement("INSERT INTO USERS (id,firstname,lastname,username) VALUES (?,?,?,?)") --> Line_27 $$ ResultSet rs = ps.executeQuery() [FD]
Line_17 $$ ps = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?") --> Line_27 $$ ResultSet rs = ps.executeQuery() [FD]
Line_25 $$ for (int i = 0; i < vals.length; i++) --> Line_28 $$ if (!rs.next()) [CD]
Line_27 $$ ResultSet rs = ps.executeQuery() --> Line_28 $$ if (!rs.next()) [FD]
Line_28 $$ if (!rs.next()) --> Line_29 $$ con.rollback() [CD]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer") --> Line_29 $$ con.rollback() [FD]
Line_25 $$ for (int i = 0; i < vals.length; i++) --> Line_32 $$ inst.setInt(1, 5) [CD]
Line_18 $$ PreparedStatement inst = con.prepareStatement("INSERT INTO LOCATIONMAP (person,location) VALUES (?,?)") --> Line_32 $$ inst.setInt(1, 5) [FD]
Line_25 $$ for (int i = 0; i < vals.length; i++) --> Line_33 $$ inst.setInt(2, rs.getInt("id")) [CD]
Line_18 $$ PreparedStatement inst = con.prepareStatement("INSERT INTO LOCATIONMAP (person,location) VALUES (?,?)") --> Line_33 $$ inst.setInt(2, rs.getInt("id")) [FD]
Line_27 $$ ResultSet rs = ps.executeQuery() --> Line_33 $$ inst.setInt(2, rs.getInt("id")) [FD]
Line_25 $$ for (int i = 0; i < vals.length; i++) --> Line_34 $$ inst.executeUpdate() [CD]
Line_18 $$ PreparedStatement inst = con.prepareStatement("INSERT INTO LOCATIONMAP (person,location) VALUES (?,?)") --> Line_34 $$ inst.executeUpdate() [FD]
Line_10 $$ PreparedStatement ps = con.prepareStatement("INSERT INTO USERS (id,firstname,lastname,username) VALUES (?,?,?,?)") --> Line_36 $$ ps.close() [FD]
Line_17 $$ ps = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?") --> Line_36 $$ ps.close() [FD]
Line_18 $$ PreparedStatement inst = con.prepareStatement("INSERT INTO LOCATIONMAP (person,location) VALUES (?,?)") --> Line_37 $$ inst.close() [FD]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer") --> Line_38 $$ con.commit() [FD]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer") --> Line_41 $$ con.rollback() [FD]
