Line_2 $$ private boolean extract(File archive, File dir, IProgressMonitor monitor) --> Line_3 $$ monitor.subTask("Extract : " + archive.getName()) [CD]
Line_2 $$ private boolean extract(File archive, File dir, IProgressMonitor monitor) --> Line_3 $$ monitor.subTask("Extract : " + archive.getName()) [FD]
Line_2 $$ private boolean extract(File archive, File dir, IProgressMonitor monitor) --> Line_4 $$ if (!dir.exists()) [CD]
Line_2 $$ private boolean extract(File archive, File dir, IProgressMonitor monitor) --> Line_4 $$ if (!dir.exists()) [FD]
Line_4 $$ if (!dir.exists()) --> Line_5 $$ dir.mkdirs() [CD]
Line_2 $$ private boolean extract(File archive, File dir, IProgressMonitor monitor) --> Line_5 $$ dir.mkdirs() [FD]
Line_4 $$ if (!dir.exists()) --> Line_7 $$ File[] files = dir.listFiles() [CD]
Line_2 $$ private boolean extract(File archive, File dir, IProgressMonitor monitor) --> Line_7 $$ File[] files = dir.listFiles() [FD]
Line_4 $$ if (!dir.exists()) --> Line_8 $$ for (int j = 0; j < files.length; j++) [CD]
Line_8 $$ for (int j = 0; j < files.length; j++) --> Line_9 $$ files[j].delete() [CD]
Line_2 $$ private boolean extract(File archive, File dir, IProgressMonitor monitor) --> Line_12 $$ ZipInputStream zis = null [CD]
Line_12 $$ ZipInputStream zis = null --> Line_14 $$ zis = new ZipInputStream(new FileInputStream(archive)) [FD]
Line_12 $$ ZipInputStream zis = null --> Line_16 $$ while ((entry = zis.getNextEntry()) != null) [FD]
Line_14 $$ zis = new ZipInputStream(new FileInputStream(archive)) --> Line_16 $$ while ((entry = zis.getNextEntry()) != null) [FD]
Line_18 $$ FileOutputStream fos = null --> Line_20 $$ fos = new FileOutputStream(indexFile) [FD]
Line_12 $$ ZipInputStream zis = null --> Line_21 $$ IOUtils.copy(zis, fos) [FD]
Line_14 $$ zis = new ZipInputStream(new FileInputStream(archive)) --> Line_21 $$ IOUtils.copy(zis, fos) [FD]
Line_18 $$ FileOutputStream fos = null --> Line_21 $$ IOUtils.copy(zis, fos) [FD]
Line_20 $$ fos = new FileOutputStream(indexFile) --> Line_21 $$ IOUtils.copy(zis, fos) [FD]
Line_18 $$ FileOutputStream fos = null --> Line_23 $$ IOUtils.closeQuietly(fos) [FD]
Line_20 $$ fos = new FileOutputStream(indexFile) --> Line_23 $$ IOUtils.closeQuietly(fos) [FD]
Line_2 $$ private boolean extract(File archive, File dir, IProgressMonitor monitor) --> Line_28 $$ M4EclipsePlugin.log(new Status(IStatus.ERROR, M4EclipsePlugin.PLUGIN_ID, -1, "For index '" + dir.getName() + "' Unable to initialize indexes", ex)) [FD]
Line_12 $$ ZipInputStream zis = null --> Line_30 $$ IOUtils.closeQuietly(zis) [FD]
Line_14 $$ zis = new ZipInputStream(new FileInputStream(archive)) --> Line_30 $$ IOUtils.closeQuietly(zis) [FD]
Line_2 $$ private boolean extract(File archive, File dir, IProgressMonitor monitor) --> Line_32 $$ return false [CD]
