Line_2 $$ private static void generateGIF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_3 $$ System.out.println("ImageCropper.generateGIF begin") [CD]
Line_2 $$ private static void generateGIF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_4 $$ MapContext map_context = new MapContext("test", new Configuration()) [CD]
Line_6 $$ Map map = new Map(map_context, area_label, new Configuration()) --> Line_7 $$ map.setCoordSys(ProjectionCategories.default_coordinate_system) [FD]
Line_6 $$ Map map = new Map(map_context, area_label, new Configuration()) --> Line_8 $$ map.setPatternOutline(new XPatternOutline(new XPatternPaint(Color.white))) [FD]
Line_6 $$ Map map = new Map(map_context, area_label, new Configuration()) --> Line_10 $$ RasterLayer rlayer = getRasterLayer(map, raster_label, getLinuxPathEquivalent(source_filename), getLinuxPathEquivalent(diff_filename), type, getLinuxPathEquivalent(legend_filename)) [FD]
Line_2 $$ private static void generateGIF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_10 $$ RasterLayer rlayer = getRasterLayer(map, raster_label, getLinuxPathEquivalent(source_filename), getLinuxPathEquivalent(diff_filename), type, getLinuxPathEquivalent(legend_filename)) [FD]
Line_9 $$ String type = null --> Line_10 $$ RasterLayer rlayer = getRasterLayer(map, raster_label, getLinuxPathEquivalent(source_filename), getLinuxPathEquivalent(diff_filename), type, getLinuxPathEquivalent(legend_filename)) [FD]
Line_6 $$ Map map = new Map(map_context, area_label, new Configuration()) --> Line_11 $$ map.addLayer(rlayer, true) [FD]
Line_10 $$ RasterLayer rlayer = getRasterLayer(map, raster_label, getLinuxPathEquivalent(source_filename), getLinuxPathEquivalent(diff_filename), type, getLinuxPathEquivalent(legend_filename)) --> Line_11 $$ map.addLayer(rlayer, true) [FD]
Line_6 $$ Map map = new Map(map_context, area_label, new Configuration()) --> Line_12 $$ map.setBounds2DImage(bounds, true) [FD]
Line_2 $$ private static void generateGIF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_12 $$ map.setBounds2DImage(bounds, true) [FD]
Line_13 $$ Dimension image_dim = null --> Line_14 $$ image_dim = new Dimension((int) rlayer.raster.getDeviceBounds().getWidth() + 1, (int) rlayer.raster.getDeviceBounds().getHeight() + 1) [FD]
Line_2 $$ private static void generateGIF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_15 $$ if (output_maximum_size > 0) [FD]
Line_15 $$ if (output_maximum_size > 0) --> Line_16 $$ double width_factor = image_dim.getWidth() / output_maximum_size [CD]
Line_13 $$ Dimension image_dim = null --> Line_16 $$ double width_factor = image_dim.getWidth() / output_maximum_size [FD]
Line_14 $$ image_dim = new Dimension((int) rlayer.raster.getDeviceBounds().getWidth() + 1, (int) rlayer.raster.getDeviceBounds().getHeight() + 1) --> Line_16 $$ double width_factor = image_dim.getWidth() / output_maximum_size [FD]
Line_15 $$ if (output_maximum_size > 0) --> Line_17 $$ double height_factor = image_dim.getHeight() / output_maximum_size [CD]
Line_13 $$ Dimension image_dim = null --> Line_17 $$ double height_factor = image_dim.getHeight() / output_maximum_size [FD]
Line_14 $$ image_dim = new Dimension((int) rlayer.raster.getDeviceBounds().getWidth() + 1, (int) rlayer.raster.getDeviceBounds().getHeight() + 1) --> Line_17 $$ double height_factor = image_dim.getHeight() / output_maximum_size [FD]
Line_15 $$ if (output_maximum_size > 0) --> Line_18 $$ double factor = Math.max(width_factor, height_factor) [CD]
Line_16 $$ double width_factor = image_dim.getWidth() / output_maximum_size --> Line_18 $$ double factor = Math.max(width_factor, height_factor) [FD]
Line_17 $$ double height_factor = image_dim.getHeight() / output_maximum_size --> Line_18 $$ double factor = Math.max(width_factor, height_factor) [FD]
Line_15 $$ if (output_maximum_size > 0) --> Line_19 $$ if (factor > 1.0) [CD]
Line_18 $$ double factor = Math.max(width_factor, height_factor) --> Line_19 $$ if (factor > 1.0) [FD]
Line_19 $$ if (factor > 1.0) --> Line_20 $$ image_dim.setSize(image_dim.getWidth() / factor, image_dim.getHeight() / factor) [CD]
Line_13 $$ Dimension image_dim = null --> Line_20 $$ image_dim.setSize(image_dim.getWidth() / factor, image_dim.getHeight() / factor) [FD]
Line_14 $$ image_dim = new Dimension((int) rlayer.raster.getDeviceBounds().getWidth() + 1, (int) rlayer.raster.getDeviceBounds().getHeight() + 1) --> Line_20 $$ image_dim.setSize(image_dim.getWidth() / factor, image_dim.getHeight() / factor) [FD]
Line_6 $$ Map map = new Map(map_context, area_label, new Configuration()) --> Line_23 $$ map.setImageDimension(image_dim) [FD]
Line_13 $$ Dimension image_dim = null --> Line_23 $$ map.setImageDimension(image_dim) [FD]
Line_14 $$ image_dim = new Dimension((int) rlayer.raster.getDeviceBounds().getWidth() + 1, (int) rlayer.raster.getDeviceBounds().getHeight() + 1) --> Line_23 $$ map.setImageDimension(image_dim) [FD]
Line_6 $$ Map map = new Map(map_context, area_label, new Configuration()) --> Line_24 $$ map.scale() [FD]
Line_13 $$ Dimension image_dim = null --> Line_25 $$ image_dim = new Dimension((int) map.getBounds2DImage().getWidth(), (int) map.getBounds2DImage().getHeight()) [FD]
Line_14 $$ image_dim = new Dimension((int) rlayer.raster.getDeviceBounds().getWidth() + 1, (int) rlayer.raster.getDeviceBounds().getHeight() + 1) --> Line_25 $$ image_dim = new Dimension((int) map.getBounds2DImage().getWidth(), (int) map.getBounds2DImage().getHeight()) [FD]
Line_6 $$ Map map = new Map(map_context, area_label, new Configuration()) --> Line_25 $$ image_dim = new Dimension((int) map.getBounds2DImage().getWidth(), (int) map.getBounds2DImage().getHeight()) [FD]
Line_26 $$ Image image = null --> Line_28 $$ image = ImageCreator.getImage(image_dim) [FD]
Line_13 $$ Dimension image_dim = null --> Line_28 $$ image = ImageCreator.getImage(image_dim) [FD]
Line_14 $$ image_dim = new Dimension((int) rlayer.raster.getDeviceBounds().getWidth() + 1, (int) rlayer.raster.getDeviceBounds().getHeight() + 1) --> Line_28 $$ image = ImageCreator.getImage(image_dim) [FD]
Line_25 $$ image_dim = new Dimension((int) map.getBounds2DImage().getWidth(), (int) map.getBounds2DImage().getHeight()) --> Line_28 $$ image = ImageCreator.getImage(image_dim) [FD]
Line_27 $$ Graphics gr = null --> Line_29 $$ gr = image.getGraphics() [FD]
Line_26 $$ Image image = null --> Line_29 $$ gr = image.getGraphics() [FD]
Line_28 $$ image = ImageCreator.getImage(image_dim) --> Line_29 $$ gr = image.getGraphics() [FD]
Line_6 $$ Map map = new Map(map_context, area_label, new Configuration()) --> Line_31 $$ map.paint(gr) [FD]
Line_27 $$ Graphics gr = null --> Line_31 $$ map.paint(gr) [FD]
Line_29 $$ gr = image.getGraphics() --> Line_31 $$ map.paint(gr) [FD]
Line_35 $$ String gif_filename = "" --> Line_37 $$ gif_filename = formatPath(category, timeseries, output_filename) [FD]
Line_2 $$ private static void generateGIF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_37 $$ gif_filename = formatPath(category, timeseries, output_filename) [FD]
Line_2 $$ private static void generateGIF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_46 $$ String delete_raster = "delete raster_layer where " + "label='" + gif_name.trim() + "' and category='" + category.trim() + "' and area_code=' " + area_code.trim() + "'" [FD]
Line_44 $$ PreparedStatement pstmt = null --> Line_47 $$ pstmt = con.prepareStatement(delete_raster) [FD]
Line_2 $$ private static void generateGIF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_47 $$ pstmt = con.prepareStatement(delete_raster) [FD]
Line_46 $$ String delete_raster = "delete raster_layer where " + "label='" + gif_name.trim() + "' and category='" + category.trim() + "' and area_code=' " + area_code.trim() + "'" --> Line_47 $$ pstmt = con.prepareStatement(delete_raster) [FD]
Line_44 $$ PreparedStatement pstmt = null --> Line_48 $$ boolean del = pstmt.execute() [FD]
Line_47 $$ pstmt = con.prepareStatement(delete_raster) --> Line_48 $$ boolean del = pstmt.execute() [FD]
Line_44 $$ PreparedStatement pstmt = null --> Line_49 $$ pstmt.close() [FD]
Line_47 $$ pstmt = con.prepareStatement(delete_raster) --> Line_49 $$ pstmt.close() [FD]
Line_44 $$ PreparedStatement pstmt = null --> Line_51 $$ pstmt = con.prepareStatement(insert_raster) [FD]
Line_47 $$ pstmt = con.prepareStatement(delete_raster) --> Line_51 $$ pstmt = con.prepareStatement(insert_raster) [FD]
Line_2 $$ private static void generateGIF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_51 $$ pstmt = con.prepareStatement(insert_raster) [FD]
Line_50 $$ String insert_raster = "insert into RASTER_LAYER " + "values(RASTER_LAYER_ID.nextval, ?, ?, ?, " + "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, " + "SYSDATE, ?)" --> Line_51 $$ pstmt = con.prepareStatement(insert_raster) [FD]
Line_44 $$ PreparedStatement pstmt = null --> Line_52 $$ pstmt.setString(1, gif_name) [FD]
Line_47 $$ pstmt = con.prepareStatement(delete_raster) --> Line_52 $$ pstmt.setString(1, gif_name) [FD]
Line_51 $$ pstmt = con.prepareStatement(insert_raster) --> Line_52 $$ pstmt.setString(1, gif_name) [FD]
Line_44 $$ PreparedStatement pstmt = null --> Line_53 $$ pstmt.setString(2, category) [FD]
Line_47 $$ pstmt = con.prepareStatement(delete_raster) --> Line_53 $$ pstmt.setString(2, category) [FD]
Line_51 $$ pstmt = con.prepareStatement(insert_raster) --> Line_53 $$ pstmt.setString(2, category) [FD]
Line_2 $$ private static void generateGIF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_53 $$ pstmt.setString(2, category) [FD]
Line_44 $$ PreparedStatement pstmt = null --> Line_54 $$ pstmt.setString(3, area_code) [FD]
Line_47 $$ pstmt = con.prepareStatement(delete_raster) --> Line_54 $$ pstmt.setString(3, area_code) [FD]
Line_51 $$ pstmt = con.prepareStatement(insert_raster) --> Line_54 $$ pstmt.setString(3, area_code) [FD]
Line_2 $$ private static void generateGIF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_54 $$ pstmt.setString(3, area_code) [FD]
Line_44 $$ PreparedStatement pstmt = null --> Line_55 $$ pstmt.setString(4, topic_code) [FD]
Line_47 $$ pstmt = con.prepareStatement(delete_raster) --> Line_55 $$ pstmt.setString(4, topic_code) [FD]
Line_51 $$ pstmt = con.prepareStatement(insert_raster) --> Line_55 $$ pstmt.setString(4, topic_code) [FD]
Line_2 $$ private static void generateGIF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_55 $$ pstmt.setString(4, topic_code) [FD]
Line_2 $$ private static void generateGIF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_56 $$ if (time == null) [FD]
Line_56 $$ if (time == null) --> Line_57 $$ pstmt.setNull(5, java.sql.Types.DATE) [CD]
Line_44 $$ PreparedStatement pstmt = null --> Line_57 $$ pstmt.setNull(5, java.sql.Types.DATE) [FD]
Line_47 $$ pstmt = con.prepareStatement(delete_raster) --> Line_57 $$ pstmt.setNull(5, java.sql.Types.DATE) [FD]
Line_51 $$ pstmt = con.prepareStatement(insert_raster) --> Line_57 $$ pstmt.setNull(5, java.sql.Types.DATE) [FD]
Line_56 $$ if (time == null) --> Line_59 $$ pstmt.setDate(5, new java.sql.Date(time.getTimeInMillis())) [CD]
Line_44 $$ PreparedStatement pstmt = null --> Line_59 $$ pstmt.setDate(5, new java.sql.Date(time.getTimeInMillis())) [FD]
Line_47 $$ pstmt = con.prepareStatement(delete_raster) --> Line_59 $$ pstmt.setDate(5, new java.sql.Date(time.getTimeInMillis())) [FD]
Line_51 $$ pstmt = con.prepareStatement(insert_raster) --> Line_59 $$ pstmt.setDate(5, new java.sql.Date(time.getTimeInMillis())) [FD]
Line_2 $$ private static void generateGIF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_59 $$ pstmt.setDate(5, new java.sql.Date(time.getTimeInMillis())) [FD]
Line_44 $$ PreparedStatement pstmt = null --> Line_61 $$ pstmt.setString(6, timeseries) [FD]
Line_47 $$ pstmt = con.prepareStatement(delete_raster) --> Line_61 $$ pstmt.setString(6, timeseries) [FD]
Line_51 $$ pstmt = con.prepareStatement(insert_raster) --> Line_61 $$ pstmt.setString(6, timeseries) [FD]
Line_2 $$ private static void generateGIF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_61 $$ pstmt.setString(6, timeseries) [FD]
Line_44 $$ PreparedStatement pstmt = null --> Line_62 $$ pstmt.setString(7, gif_filename) [FD]
Line_47 $$ pstmt = con.prepareStatement(delete_raster) --> Line_62 $$ pstmt.setString(7, gif_filename) [FD]
Line_51 $$ pstmt = con.prepareStatement(insert_raster) --> Line_62 $$ pstmt.setString(7, gif_filename) [FD]
Line_35 $$ String gif_filename = "" --> Line_62 $$ pstmt.setString(7, gif_filename) [FD]
Line_37 $$ gif_filename = formatPath(category, timeseries, output_filename) --> Line_62 $$ pstmt.setString(7, gif_filename) [FD]
Line_44 $$ PreparedStatement pstmt = null --> Line_63 $$ pstmt.setNull(8, java.sql.Types.INTEGER) [FD]
Line_47 $$ pstmt = con.prepareStatement(delete_raster) --> Line_63 $$ pstmt.setNull(8, java.sql.Types.INTEGER) [FD]
Line_51 $$ pstmt = con.prepareStatement(insert_raster) --> Line_63 $$ pstmt.setNull(8, java.sql.Types.INTEGER) [FD]
Line_44 $$ PreparedStatement pstmt = null --> Line_64 $$ pstmt.setNull(9, java.sql.Types.INTEGER) [FD]
Line_47 $$ pstmt = con.prepareStatement(delete_raster) --> Line_64 $$ pstmt.setNull(9, java.sql.Types.INTEGER) [FD]
Line_51 $$ pstmt = con.prepareStatement(insert_raster) --> Line_64 $$ pstmt.setNull(9, java.sql.Types.INTEGER) [FD]
Line_44 $$ PreparedStatement pstmt = null --> Line_65 $$ pstmt.setDouble(10, raster_bounds.getX()) [FD]
Line_47 $$ pstmt = con.prepareStatement(delete_raster) --> Line_65 $$ pstmt.setDouble(10, raster_bounds.getX()) [FD]
Line_51 $$ pstmt = con.prepareStatement(insert_raster) --> Line_65 $$ pstmt.setDouble(10, raster_bounds.getX()) [FD]
Line_2 $$ private static void generateGIF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_65 $$ pstmt.setDouble(10, raster_bounds.getX()) [FD]
Line_44 $$ PreparedStatement pstmt = null --> Line_66 $$ pstmt.setDouble(11, raster_bounds.getY()) [FD]
Line_47 $$ pstmt = con.prepareStatement(delete_raster) --> Line_66 $$ pstmt.setDouble(11, raster_bounds.getY()) [FD]
Line_51 $$ pstmt = con.prepareStatement(insert_raster) --> Line_66 $$ pstmt.setDouble(11, raster_bounds.getY()) [FD]
Line_2 $$ private static void generateGIF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_66 $$ pstmt.setDouble(11, raster_bounds.getY()) [FD]
Line_44 $$ PreparedStatement pstmt = null --> Line_67 $$ pstmt.setDouble(12, raster_bounds.getWidth()) [FD]
Line_47 $$ pstmt = con.prepareStatement(delete_raster) --> Line_67 $$ pstmt.setDouble(12, raster_bounds.getWidth()) [FD]
Line_51 $$ pstmt = con.prepareStatement(insert_raster) --> Line_67 $$ pstmt.setDouble(12, raster_bounds.getWidth()) [FD]
Line_2 $$ private static void generateGIF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_67 $$ pstmt.setDouble(12, raster_bounds.getWidth()) [FD]
Line_44 $$ PreparedStatement pstmt = null --> Line_68 $$ pstmt.setDouble(13, raster_bounds.getHeight()) [FD]
Line_47 $$ pstmt = con.prepareStatement(delete_raster) --> Line_68 $$ pstmt.setDouble(13, raster_bounds.getHeight()) [FD]
Line_51 $$ pstmt = con.prepareStatement(insert_raster) --> Line_68 $$ pstmt.setDouble(13, raster_bounds.getHeight()) [FD]
Line_2 $$ private static void generateGIF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_68 $$ pstmt.setDouble(13, raster_bounds.getHeight()) [FD]
Line_44 $$ PreparedStatement pstmt = null --> Line_69 $$ pstmt.setString(14, note) [FD]
Line_47 $$ pstmt = con.prepareStatement(delete_raster) --> Line_69 $$ pstmt.setString(14, note) [FD]
Line_51 $$ pstmt = con.prepareStatement(insert_raster) --> Line_69 $$ pstmt.setString(14, note) [FD]
Line_2 $$ private static void generateGIF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_69 $$ pstmt.setString(14, note) [FD]
Line_71 $$ if (gif_name.endsWith("DP")) --> Line_72 $$ sequence = 1 [CD]
Line_70 $$ int sequence = 0 --> Line_72 $$ sequence = 1 [FD]
Line_71 $$ if (gif_name.endsWith("DP")) --> Line_73 $$ if (gif_name.endsWith("DY")) [CD]
Line_73 $$ if (gif_name.endsWith("DY")) --> Line_74 $$ sequence = 2 [CD]
Line_70 $$ int sequence = 0 --> Line_74 $$ sequence = 2 [FD]
Line_72 $$ sequence = 1 --> Line_74 $$ sequence = 2 [FD]
Line_73 $$ if (gif_name.endsWith("DY")) --> Line_75 $$ if (gif_name.endsWith("DA")) [CD]
Line_75 $$ if (gif_name.endsWith("DA")) --> Line_76 $$ sequence = 3 [CD]
Line_70 $$ int sequence = 0 --> Line_76 $$ sequence = 3 [FD]
Line_72 $$ sequence = 1 --> Line_76 $$ sequence = 3 [FD]
Line_74 $$ sequence = 2 --> Line_76 $$ sequence = 3 [FD]
Line_44 $$ PreparedStatement pstmt = null --> Line_78 $$ pstmt.setInt(15, sequence) [FD]
Line_47 $$ pstmt = con.prepareStatement(delete_raster) --> Line_78 $$ pstmt.setInt(15, sequence) [FD]
Line_51 $$ pstmt = con.prepareStatement(insert_raster) --> Line_78 $$ pstmt.setInt(15, sequence) [FD]
Line_70 $$ int sequence = 0 --> Line_78 $$ pstmt.setInt(15, sequence) [FD]
Line_72 $$ sequence = 1 --> Line_78 $$ pstmt.setInt(15, sequence) [FD]
Line_74 $$ sequence = 2 --> Line_78 $$ pstmt.setInt(15, sequence) [FD]
Line_76 $$ sequence = 3 --> Line_78 $$ pstmt.setInt(15, sequence) [FD]
Line_44 $$ PreparedStatement pstmt = null --> Line_79 $$ pstmt.executeUpdate() [FD]
Line_47 $$ pstmt = con.prepareStatement(delete_raster) --> Line_79 $$ pstmt.executeUpdate() [FD]
Line_51 $$ pstmt = con.prepareStatement(insert_raster) --> Line_79 $$ pstmt.executeUpdate() [FD]
Line_2 $$ private static void generateGIF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_82 $$ con.rollback() [FD]
Line_44 $$ PreparedStatement pstmt = null --> Line_85 $$ pstmt.close() [FD]
Line_47 $$ pstmt = con.prepareStatement(delete_raster) --> Line_85 $$ pstmt.close() [FD]
Line_51 $$ pstmt = con.prepareStatement(insert_raster) --> Line_85 $$ pstmt.close() [FD]
Line_2 $$ private static void generateGIF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_90 $$ System.out.println("ImageCropper.generateGIF end") [CD]
