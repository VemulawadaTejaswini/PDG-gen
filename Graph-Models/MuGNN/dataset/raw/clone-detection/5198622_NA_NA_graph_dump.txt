Line_2 $$ public byte[] getFile(final String file) throws IOException --> Line_3 $$ if (this.files.contains(file)) [CD]
Line_2 $$ public byte[] getFile(final String file) throws IOException --> Line_3 $$ if (this.files.contains(file)) [FD]
Line_3 $$ if (this.files.contains(file)) --> Line_4 $$ ZipInputStream input = new ZipInputStream(new ByteArrayInputStream(this.bytes)) [CD]
Line_3 $$ if (this.files.contains(file)) --> Line_5 $$ ZipEntry entry = input.getNextEntry() [CD]
Line_4 $$ ZipInputStream input = new ZipInputStream(new ByteArrayInputStream(this.bytes)) --> Line_5 $$ ZipEntry entry = input.getNextEntry() [FD]
Line_3 $$ if (this.files.contains(file)) --> Line_6 $$ while (entry != null) [CD]
Line_6 $$ while (entry != null) --> Line_7 $$ entry = input.getNextEntry() [CD]
Line_4 $$ ZipInputStream input = new ZipInputStream(new ByteArrayInputStream(this.bytes)) --> Line_7 $$ entry = input.getNextEntry() [FD]
Line_6 $$ while (entry != null) --> Line_8 $$ if ((entry.getName().equals(file)) && (!entry.isDirectory())) [CD]
Line_2 $$ public byte[] getFile(final String file) throws IOException --> Line_8 $$ if ((entry.getName().equals(file)) && (!entry.isDirectory())) [FD]
Line_8 $$ if ((entry.getName().equals(file)) && (!entry.isDirectory())) --> Line_9 $$ ByteArrayOutputStream output = new ByteArrayOutputStream() [CD]
Line_8 $$ if ((entry.getName().equals(file)) && (!entry.isDirectory())) --> Line_10 $$ IOUtils.copy(input, output) [CD]
Line_4 $$ ZipInputStream input = new ZipInputStream(new ByteArrayInputStream(this.bytes)) --> Line_10 $$ IOUtils.copy(input, output) [FD]
Line_9 $$ ByteArrayOutputStream output = new ByteArrayOutputStream() --> Line_10 $$ IOUtils.copy(input, output) [FD]
Line_8 $$ if ((entry.getName().equals(file)) && (!entry.isDirectory())) --> Line_11 $$ output.close() [CD]
Line_9 $$ ByteArrayOutputStream output = new ByteArrayOutputStream() --> Line_11 $$ output.close() [FD]
Line_8 $$ if ((entry.getName().equals(file)) && (!entry.isDirectory())) --> Line_12 $$ input.close() [CD]
Line_4 $$ ZipInputStream input = new ZipInputStream(new ByteArrayInputStream(this.bytes)) --> Line_12 $$ input.close() [FD]
Line_8 $$ if ((entry.getName().equals(file)) && (!entry.isDirectory())) --> Line_13 $$ return output.toByteArray() [CD]
Line_9 $$ ByteArrayOutputStream output = new ByteArrayOutputStream() --> Line_13 $$ return output.toByteArray() [FD]
Line_3 $$ if (this.files.contains(file)) --> Line_16 $$ input.close() [CD]
Line_4 $$ ZipInputStream input = new ZipInputStream(new ByteArrayInputStream(this.bytes)) --> Line_16 $$ input.close() [FD]
Line_2 $$ public byte[] getFile(final String file) throws IOException --> Line_18 $$ return null [CD]
