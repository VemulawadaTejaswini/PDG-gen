Line_2 $$ private static String getSignature(String data) --> Line_3 $$ MessageDigest md [CD]
Line_3 $$ MessageDigest md --> Line_5 $$ md = MessageDigest.getInstance("MD5") [FD]
Line_2 $$ private static String getSignature(String data) --> Line_9 $$ md.update(data.getBytes()) [CD]
Line_2 $$ private static String getSignature(String data) --> Line_9 $$ md.update(data.getBytes()) [FD]
Line_3 $$ MessageDigest md --> Line_9 $$ md.update(data.getBytes()) [FD]
Line_5 $$ md = MessageDigest.getInstance("MD5") --> Line_9 $$ md.update(data.getBytes()) [FD]
Line_2 $$ private static String getSignature(String data) --> Line_10 $$ StringBuffer sb = new StringBuffer() [CD]
Line_2 $$ private static String getSignature(String data) --> Line_11 $$ byte[] sign = md.digest() [CD]
Line_3 $$ MessageDigest md --> Line_11 $$ byte[] sign = md.digest() [FD]
Line_5 $$ md = MessageDigest.getInstance("MD5") --> Line_11 $$ byte[] sign = md.digest() [FD]
Line_2 $$ private static String getSignature(String data) --> Line_12 $$ for (int i = 0; i < sign.length; i++) [CD]
Line_12 $$ for (int i = 0; i < sign.length; i++) --> Line_13 $$ byte b = sign[i] [CD]
Line_12 $$ for (int i = 0; i < sign.length; i++) --> Line_14 $$ int in = (int) b [CD]
Line_12 $$ for (int i = 0; i < sign.length; i++) --> Line_15 $$ in = 127 - b [CD]
Line_14 $$ int in = (int) b --> Line_15 $$ in = 127 - b [FD]
Line_13 $$ byte b = sign[i] --> Line_15 $$ in = 127 - b [FD]
Line_12 $$ for (int i = 0; i < sign.length; i++) --> Line_16 $$ String hex = Integer.toHexString(in).toUpperCase() [CD]
Line_14 $$ int in = (int) b --> Line_16 $$ String hex = Integer.toHexString(in).toUpperCase() [FD]
Line_15 $$ in = 127 - b --> Line_16 $$ String hex = Integer.toHexString(in).toUpperCase() [FD]
Line_12 $$ for (int i = 0; i < sign.length; i++) --> Line_17 $$ if (hex.length() == 1) [CD]
Line_16 $$ String hex = Integer.toHexString(in).toUpperCase() --> Line_17 $$ if (hex.length() == 1) [FD]
Line_12 $$ for (int i = 0; i < sign.length; i++) --> Line_18 $$ sb.append(hex) [CD]
Line_10 $$ StringBuffer sb = new StringBuffer() --> Line_18 $$ sb.append(hex) [FD]
Line_16 $$ String hex = Integer.toHexString(in).toUpperCase() --> Line_18 $$ sb.append(hex) [FD]
Line_17 $$ if (hex.length() == 1) --> Line_18 $$ sb.append(hex) [FD]
Line_2 $$ private static String getSignature(String data) --> Line_20 $$ return sb.toString() [CD]
Line_10 $$ StringBuffer sb = new StringBuffer() --> Line_20 $$ return sb.toString() [FD]
