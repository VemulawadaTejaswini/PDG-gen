Line_2 $$ protected Scanner createScanner(InputSource source) --> Line_3 $$ documentURI = source.getURI() [CD]
Line_2 $$ protected Scanner createScanner(InputSource source) --> Line_3 $$ documentURI = source.getURI() [FD]
Line_2 $$ protected Scanner createScanner(InputSource source) --> Line_4 $$ if (documentURI == null) [CD]
Line_2 $$ protected Scanner createScanner(InputSource source) --> Line_7 $$ Reader r = source.getCharacterStream() [CD]
Line_2 $$ protected Scanner createScanner(InputSource source) --> Line_7 $$ Reader r = source.getCharacterStream() [FD]
Line_2 $$ protected Scanner createScanner(InputSource source) --> Line_8 $$ if (r != null) [CD]
Line_7 $$ Reader r = source.getCharacterStream() --> Line_8 $$ if (r != null) [FD]
Line_8 $$ if (r != null) --> Line_9 $$ return new Scanner(r) [CD]
Line_2 $$ protected Scanner createScanner(InputSource source) --> Line_11 $$ InputStream is = source.getByteStream() [CD]
Line_2 $$ protected Scanner createScanner(InputSource source) --> Line_11 $$ InputStream is = source.getByteStream() [FD]
Line_2 $$ protected Scanner createScanner(InputSource source) --> Line_12 $$ if (is != null) [CD]
Line_11 $$ InputStream is = source.getByteStream() --> Line_12 $$ if (is != null) [FD]
Line_12 $$ if (is != null) --> Line_13 $$ return new Scanner(is, source.getEncoding()) [CD]
Line_2 $$ protected Scanner createScanner(InputSource source) --> Line_13 $$ return new Scanner(is, source.getEncoding()) [FD]
Line_2 $$ protected Scanner createScanner(InputSource source) --> Line_15 $$ String uri = source.getURI() [CD]
Line_2 $$ protected Scanner createScanner(InputSource source) --> Line_15 $$ String uri = source.getURI() [FD]
Line_2 $$ protected Scanner createScanner(InputSource source) --> Line_16 $$ if (uri == null) [CD]
Line_15 $$ String uri = source.getURI() --> Line_16 $$ if (uri == null) [FD]
Line_11 $$ InputStream is = source.getByteStream() --> Line_21 $$ is = purl.openStreamRaw(CSSConstants.CSS_MIME_TYPE) [FD]
Line_20 $$ ParsedURL purl = new ParsedURL(uri) --> Line_21 $$ is = purl.openStreamRaw(CSSConstants.CSS_MIME_TYPE) [FD]
Line_2 $$ protected Scanner createScanner(InputSource source) --> Line_22 $$ return new Scanner(is, source.getEncoding()) [FD]
