Line_2 $$ protected Object getMethodKey(String methodName, Object[] args) --> Line_3 $$ StringBuffer key = new StringBuffer(methodName.trim().replace(" ", ".")).append(".") [CD]
Line_2 $$ protected Object getMethodKey(String methodName, Object[] args) --> Line_3 $$ StringBuffer key = new StringBuffer(methodName.trim().replace(" ", ".")).append(".") [FD]
Line_4 $$ for (Object o : args) --> Line_5 $$ key.append(o.hashCode()) [FD]
Line_3 $$ StringBuffer key = new StringBuffer(methodName.trim().replace(" ", ".")).append(".") --> Line_5 $$ key.append(o.hashCode()) [FD]
Line_2 $$ protected Object getMethodKey(String methodName, Object[] args) --> Line_7 $$ LOGGER.info("Generation key ->" + key.toString()) [CD]
Line_3 $$ StringBuffer key = new StringBuffer(methodName.trim().replace(" ", ".")).append(".") --> Line_7 $$ LOGGER.info("Generation key ->" + key.toString()) [FD]
Line_9 $$ MessageDigest messageDigest = MessageDigest.getInstance("SHA-512") --> Line_10 $$ messageDigest.reset() [FD]
Line_9 $$ MessageDigest messageDigest = MessageDigest.getInstance("SHA-512") --> Line_11 $$ messageDigest.update(key.toString().getBytes(Charset.forName("UTF8"))) [FD]
Line_3 $$ StringBuffer key = new StringBuffer(methodName.trim().replace(" ", ".")).append(".") --> Line_11 $$ messageDigest.update(key.toString().getBytes(Charset.forName("UTF8"))) [FD]
Line_9 $$ MessageDigest messageDigest = MessageDigest.getInstance("SHA-512") --> Line_12 $$ final byte[] resultByte = messageDigest.digest() [FD]
Line_14 $$ for (int i = 0; i < resultByte.length; i++) --> Line_15 $$ hex = Integer.toHexString(0xFF & resultByte[i]) [CD]
Line_13 $$ String hex = null --> Line_15 $$ hex = Integer.toHexString(0xFF & resultByte[i]) [FD]
Line_14 $$ for (int i = 0; i < resultByte.length; i++) --> Line_16 $$ if (hex.length() < 2) [CD]
Line_15 $$ hex = Integer.toHexString(0xFF & resultByte[i]) --> Line_16 $$ if (hex.length() < 2) [FD]
Line_13 $$ String hex = null --> Line_16 $$ if (hex.length() < 2) [FD]
Line_16 $$ if (hex.length() < 2) --> Line_17 $$ key.append("0") [CD]
Line_3 $$ StringBuffer key = new StringBuffer(methodName.trim().replace(" ", ".")).append(".") --> Line_17 $$ key.append("0") [FD]
Line_14 $$ for (int i = 0; i < resultByte.length; i++) --> Line_19 $$ key.append(hex) [CD]
Line_3 $$ StringBuffer key = new StringBuffer(methodName.trim().replace(" ", ".")).append(".") --> Line_19 $$ key.append(hex) [FD]
Line_15 $$ hex = Integer.toHexString(0xFF & resultByte[i]) --> Line_19 $$ key.append(hex) [FD]
Line_13 $$ String hex = null --> Line_19 $$ key.append(hex) [FD]
Line_2 $$ protected Object getMethodKey(String methodName, Object[] args) --> Line_24 $$ LOGGER.info("Generation key ->" + key.toString()) [CD]
Line_3 $$ StringBuffer key = new StringBuffer(methodName.trim().replace(" ", ".")).append(".") --> Line_24 $$ LOGGER.info("Generation key ->" + key.toString()) [FD]
Line_2 $$ protected Object getMethodKey(String methodName, Object[] args) --> Line_25 $$ return new String(key) [CD]
