Line_2 $$ private boolean authenticateWithServer(String user, String password) --> Line_3 $$ Object o [CD]
Line_2 $$ private boolean authenticateWithServer(String user, String password) --> Line_4 $$ String response [CD]
Line_2 $$ private boolean authenticateWithServer(String user, String password) --> Line_5 $$ byte[] dataKey [CD]
Line_3 $$ Object o --> Line_7 $$ o = objectIn.readObject() [FD]
Line_3 $$ Object o --> Line_8 $$ if (o instanceof String) [FD]
Line_7 $$ o = objectIn.readObject() --> Line_8 $$ if (o instanceof String) [FD]
Line_8 $$ if (o instanceof String) --> Line_9 $$ response = (String) o [CD]
Line_4 $$ String response --> Line_9 $$ response = (String) o [FD]
Line_8 $$ if (o instanceof String) --> Line_10 $$ Debug.netMsg("Connected to JFritz Server: " + response) [CD]
Line_8 $$ if (o instanceof String) --> Line_11 $$ if (!response.equals("JFRITZ SERVER 1.1")) [CD]
Line_4 $$ String response --> Line_11 $$ if (!response.equals("JFRITZ SERVER 1.1")) [FD]
Line_9 $$ response = (String) o --> Line_11 $$ if (!response.equals("JFRITZ SERVER 1.1")) [FD]
Line_11 $$ if (!response.equals("JFRITZ SERVER 1.1")) --> Line_12 $$ Debug.netMsg("Unkown Server version, newer JFritz protocoll version?") [CD]
Line_11 $$ if (!response.equals("JFRITZ SERVER 1.1")) --> Line_13 $$ Debug.netMsg("Canceling login attempt!") [CD]
Line_8 $$ if (o instanceof String) --> Line_15 $$ objectOut.writeObject(user) [CD]
Line_2 $$ private boolean authenticateWithServer(String user, String password) --> Line_15 $$ objectOut.writeObject(user) [FD]
Line_8 $$ if (o instanceof String) --> Line_16 $$ objectOut.flush() [CD]
Line_8 $$ if (o instanceof String) --> Line_17 $$ MessageDigest md = MessageDigest.getInstance("MD5") [CD]
Line_8 $$ if (o instanceof String) --> Line_18 $$ md.update(password.getBytes()) [CD]
Line_17 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_18 $$ md.update(password.getBytes()) [FD]
Line_2 $$ private boolean authenticateWithServer(String user, String password) --> Line_18 $$ md.update(password.getBytes()) [FD]
Line_8 $$ if (o instanceof String) --> Line_19 $$ DESKeySpec desKeySpec = new DESKeySpec(md.digest()) [CD]
Line_17 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_19 $$ DESKeySpec desKeySpec = new DESKeySpec(md.digest()) [FD]
Line_8 $$ if (o instanceof String) --> Line_20 $$ SecretKeyFactory keyFactory = SecretKeyFactory.getInstance("DES") [CD]
Line_8 $$ if (o instanceof String) --> Line_21 $$ SecretKey secretKey = keyFactory.generateSecret(desKeySpec) [CD]
Line_20 $$ SecretKeyFactory keyFactory = SecretKeyFactory.getInstance("DES") --> Line_21 $$ SecretKey secretKey = keyFactory.generateSecret(desKeySpec) [FD]
Line_19 $$ DESKeySpec desKeySpec = new DESKeySpec(md.digest()) --> Line_21 $$ SecretKey secretKey = keyFactory.generateSecret(desKeySpec) [FD]
Line_8 $$ if (o instanceof String) --> Line_22 $$ Cipher desCipher = Cipher.getInstance("DES/ECB/PKCS5Padding") [CD]
Line_8 $$ if (o instanceof String) --> Line_23 $$ desCipher.init(Cipher.DECRYPT_MODE, secretKey) [CD]
Line_22 $$ Cipher desCipher = Cipher.getInstance("DES/ECB/PKCS5Padding") --> Line_23 $$ desCipher.init(Cipher.DECRYPT_MODE, secretKey) [FD]
Line_21 $$ SecretKey secretKey = keyFactory.generateSecret(desKeySpec) --> Line_23 $$ desCipher.init(Cipher.DECRYPT_MODE, secretKey) [FD]
Line_8 $$ if (o instanceof String) --> Line_24 $$ SealedObject sealedObject = (SealedObject) objectIn.readObject() [CD]
Line_8 $$ if (o instanceof String) --> Line_25 $$ o = sealedObject.getObject(desCipher) [CD]
Line_3 $$ Object o --> Line_25 $$ o = sealedObject.getObject(desCipher) [FD]
Line_7 $$ o = objectIn.readObject() --> Line_25 $$ o = sealedObject.getObject(desCipher) [FD]
Line_24 $$ SealedObject sealedObject = (SealedObject) objectIn.readObject() --> Line_25 $$ o = sealedObject.getObject(desCipher) [FD]
Line_22 $$ Cipher desCipher = Cipher.getInstance("DES/ECB/PKCS5Padding") --> Line_25 $$ o = sealedObject.getObject(desCipher) [FD]
Line_8 $$ if (o instanceof String) --> Line_26 $$ if (o instanceof byte[]) [CD]
Line_3 $$ Object o --> Line_26 $$ if (o instanceof byte[]) [FD]
Line_7 $$ o = objectIn.readObject() --> Line_26 $$ if (o instanceof byte[]) [FD]
Line_25 $$ o = sealedObject.getObject(desCipher) --> Line_26 $$ if (o instanceof byte[]) [FD]
Line_26 $$ if (o instanceof byte[]) --> Line_27 $$ dataKey = (byte[]) o [CD]
Line_5 $$ byte[] dataKey --> Line_27 $$ dataKey = (byte[]) o [FD]
Line_26 $$ if (o instanceof byte[]) --> Line_28 $$ desKeySpec = new DESKeySpec(dataKey) [CD]
Line_19 $$ DESKeySpec desKeySpec = new DESKeySpec(md.digest()) --> Line_28 $$ desKeySpec = new DESKeySpec(dataKey) [FD]
Line_26 $$ if (o instanceof byte[]) --> Line_29 $$ secretKey = keyFactory.generateSecret(desKeySpec) [CD]
Line_21 $$ SecretKey secretKey = keyFactory.generateSecret(desKeySpec) --> Line_29 $$ secretKey = keyFactory.generateSecret(desKeySpec) [FD]
Line_20 $$ SecretKeyFactory keyFactory = SecretKeyFactory.getInstance("DES") --> Line_29 $$ secretKey = keyFactory.generateSecret(desKeySpec) [FD]
Line_19 $$ DESKeySpec desKeySpec = new DESKeySpec(md.digest()) --> Line_29 $$ secretKey = keyFactory.generateSecret(desKeySpec) [FD]
Line_28 $$ desKeySpec = new DESKeySpec(dataKey) --> Line_29 $$ secretKey = keyFactory.generateSecret(desKeySpec) [FD]
Line_26 $$ if (o instanceof byte[]) --> Line_30 $$ inCipher = Cipher.getInstance("DES/ECB/PKCS5Padding") [CD]
Line_26 $$ if (o instanceof byte[]) --> Line_31 $$ outCipher = Cipher.getInstance("DES/ECB/PKCS5Padding") [CD]
Line_26 $$ if (o instanceof byte[]) --> Line_32 $$ inCipher.init(Cipher.DECRYPT_MODE, secretKey) [CD]
Line_21 $$ SecretKey secretKey = keyFactory.generateSecret(desKeySpec) --> Line_32 $$ inCipher.init(Cipher.DECRYPT_MODE, secretKey) [FD]
Line_29 $$ secretKey = keyFactory.generateSecret(desKeySpec) --> Line_32 $$ inCipher.init(Cipher.DECRYPT_MODE, secretKey) [FD]
Line_26 $$ if (o instanceof byte[]) --> Line_33 $$ outCipher.init(Cipher.ENCRYPT_MODE, secretKey) [CD]
Line_21 $$ SecretKey secretKey = keyFactory.generateSecret(desKeySpec) --> Line_33 $$ outCipher.init(Cipher.ENCRYPT_MODE, secretKey) [FD]
Line_29 $$ secretKey = keyFactory.generateSecret(desKeySpec) --> Line_33 $$ outCipher.init(Cipher.ENCRYPT_MODE, secretKey) [FD]
Line_26 $$ if (o instanceof byte[]) --> Line_34 $$ SealedObject sealed_ok = new SealedObject("OK", outCipher) [CD]
Line_26 $$ if (o instanceof byte[]) --> Line_35 $$ objectOut.writeObject(sealed_ok) [CD]
Line_34 $$ SealedObject sealed_ok = new SealedObject("OK", outCipher) --> Line_35 $$ objectOut.writeObject(sealed_ok) [FD]
Line_26 $$ if (o instanceof byte[]) --> Line_36 $$ SealedObject sealed_response = (SealedObject) objectIn.readObject() [CD]
Line_26 $$ if (o instanceof byte[]) --> Line_37 $$ o = sealed_response.getObject(inCipher) [CD]
Line_3 $$ Object o --> Line_37 $$ o = sealed_response.getObject(inCipher) [FD]
Line_7 $$ o = objectIn.readObject() --> Line_37 $$ o = sealed_response.getObject(inCipher) [FD]
Line_25 $$ o = sealedObject.getObject(desCipher) --> Line_37 $$ o = sealed_response.getObject(inCipher) [FD]
Line_36 $$ SealedObject sealed_response = (SealedObject) objectIn.readObject() --> Line_37 $$ o = sealed_response.getObject(inCipher) [FD]
Line_26 $$ if (o instanceof byte[]) --> Line_38 $$ if (o instanceof String) [CD]
Line_3 $$ Object o --> Line_38 $$ if (o instanceof String) [FD]
Line_7 $$ o = objectIn.readObject() --> Line_38 $$ if (o instanceof String) [FD]
Line_25 $$ o = sealedObject.getObject(desCipher) --> Line_38 $$ if (o instanceof String) [FD]
Line_37 $$ o = sealed_response.getObject(inCipher) --> Line_38 $$ if (o instanceof String) [FD]
Line_38 $$ if (o instanceof String) --> Line_39 $$ if (o.equals("OK")) [CD]
Line_3 $$ Object o --> Line_39 $$ if (o.equals("OK")) [FD]
Line_7 $$ o = objectIn.readObject() --> Line_39 $$ if (o.equals("OK")) [FD]
Line_25 $$ o = sealedObject.getObject(desCipher) --> Line_39 $$ if (o.equals("OK")) [FD]
Line_37 $$ o = sealed_response.getObject(inCipher) --> Line_39 $$ if (o.equals("OK")) [FD]
Line_39 $$ if (o.equals("OK")) --> Line_40 $$ return true [CD]
Line_39 $$ if (o.equals("OK")) --> Line_42 $$ Debug.netMsg("Server sent wrong string as response to authentication challenge!") [CD]
Line_38 $$ if (o instanceof String) --> Line_45 $$ Debug.netMsg("Server sent wrong object as response to authentication challenge!") [CD]
Line_26 $$ if (o instanceof byte[]) --> Line_48 $$ Debug.netMsg("Server sent wrong type for data key!") [CD]
Line_2 $$ private boolean authenticateWithServer(String user, String password) --> Line_92 $$ return false [CD]
