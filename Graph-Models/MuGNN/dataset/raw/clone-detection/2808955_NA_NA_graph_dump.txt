Line_3 $$ if (!SourceCache.contains(url)) --> Line_4 $$ SSL.certify(url) [CD]
Line_15 $$ while (true) --> Line_16 $$ int amountRead = is.read(buffer) [CD]
Line_13 $$ InputStream is = url.openStream() --> Line_16 $$ int amountRead = is.read(buffer) [FD]
Line_14 $$ byte[] buffer = new byte[100000] --> Line_16 $$ int amountRead = is.read(buffer) [FD]
Line_15 $$ while (true) --> Line_17 $$ if (amountRead == -1) [CD]
Line_16 $$ int amountRead = is.read(buffer) --> Line_17 $$ if (amountRead == -1) [FD]
Line_15 $$ while (true) --> Line_20 $$ forParser.write(buffer, 0, amountRead) [CD]
Line_8 $$ final PipedOutputStream forParser = new PipedOutputStream(in) --> Line_20 $$ forParser.write(buffer, 0, amountRead) [FD]
Line_14 $$ byte[] buffer = new byte[100000] --> Line_20 $$ forParser.write(buffer, 0, amountRead) [FD]
Line_16 $$ int amountRead = is.read(buffer) --> Line_20 $$ forParser.write(buffer, 0, amountRead) [FD]
Line_15 $$ while (true) --> Line_21 $$ out.write(buffer, 0, amountRead) [CD]
Line_12 $$ OutputStream out = SourceCache.startCaching(url) --> Line_21 $$ out.write(buffer, 0, amountRead) [FD]
Line_14 $$ byte[] buffer = new byte[100000] --> Line_21 $$ out.write(buffer, 0, amountRead) [FD]
Line_16 $$ int amountRead = is.read(buffer) --> Line_21 $$ out.write(buffer, 0, amountRead) [FD]
Line_8 $$ final PipedOutputStream forParser = new PipedOutputStream(in) --> Line_23 $$ forParser.close() [FD]
Line_12 $$ OutputStream out = SourceCache.startCaching(url) --> Line_24 $$ out.close() [FD]
Line_7 $$ final PipedInputStream in = new PipedInputStream() --> Line_31 $$ super.setIos(in) [FD]
Line_3 $$ if (!SourceCache.contains(url)) --> Line_35 $$ return super.read(set) [CD]
