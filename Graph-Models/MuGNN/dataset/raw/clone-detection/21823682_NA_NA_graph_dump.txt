Line_2 $$ protected void displayFreeMarkerResponse(HttpServletRequest request, HttpServletResponse response, String templateName, Map<String, Object> variableMap) throws IOException --> Line_3 $$ Enumeration<String> attrNameEnum = request.getSession().getAttributeNames() [CD]
Line_2 $$ protected void displayFreeMarkerResponse(HttpServletRequest request, HttpServletResponse response, String templateName, Map<String, Object> variableMap) throws IOException --> Line_3 $$ Enumeration<String> attrNameEnum = request.getSession().getAttributeNames() [FD]
Line_2 $$ protected void displayFreeMarkerResponse(HttpServletRequest request, HttpServletResponse response, String templateName, Map<String, Object> variableMap) throws IOException --> Line_4 $$ String attrName [CD]
Line_2 $$ protected void displayFreeMarkerResponse(HttpServletRequest request, HttpServletResponse response, String templateName, Map<String, Object> variableMap) throws IOException --> Line_5 $$ while (attrNameEnum.hasMoreElements()) [CD]
Line_3 $$ Enumeration<String> attrNameEnum = request.getSession().getAttributeNames() --> Line_5 $$ while (attrNameEnum.hasMoreElements()) [FD]
Line_5 $$ while (attrNameEnum.hasMoreElements()) --> Line_6 $$ attrName = attrNameEnum.nextElement() [CD]
Line_4 $$ String attrName --> Line_6 $$ attrName = attrNameEnum.nextElement() [FD]
Line_3 $$ Enumeration<String> attrNameEnum = request.getSession().getAttributeNames() --> Line_6 $$ attrName = attrNameEnum.nextElement() [FD]
Line_5 $$ while (attrNameEnum.hasMoreElements()) --> Line_7 $$ if (attrName != null && attrName.startsWith(ADMIN4J_SESSION_VARIABLE_PREFIX)) [CD]
Line_6 $$ attrName = attrNameEnum.nextElement() --> Line_7 $$ if (attrName != null && attrName.startsWith(ADMIN4J_SESSION_VARIABLE_PREFIX)) [FD]
Line_4 $$ String attrName --> Line_7 $$ if (attrName != null && attrName.startsWith(ADMIN4J_SESSION_VARIABLE_PREFIX)) [FD]
Line_7 $$ if (attrName != null && attrName.startsWith(ADMIN4J_SESSION_VARIABLE_PREFIX)) --> Line_8 $$ variableMap.put("Session" + attrName, request.getSession().getAttribute(attrName)) [CD]
Line_2 $$ protected void displayFreeMarkerResponse(HttpServletRequest request, HttpServletResponse response, String templateName, Map<String, Object> variableMap) throws IOException --> Line_8 $$ variableMap.put("Session" + attrName, request.getSession().getAttribute(attrName)) [FD]
Line_6 $$ attrName = attrNameEnum.nextElement() --> Line_8 $$ variableMap.put("Session" + attrName, request.getSession().getAttribute(attrName)) [FD]
Line_4 $$ String attrName --> Line_8 $$ variableMap.put("Session" + attrName, request.getSession().getAttribute(attrName)) [FD]
Line_2 $$ protected void displayFreeMarkerResponse(HttpServletRequest request, HttpServletResponse response, String templateName, Map<String, Object> variableMap) throws IOException --> Line_11 $$ variableMap.put("RequestAdmin4jCurrentUri", request.getRequestURI()) [CD]
Line_2 $$ protected void displayFreeMarkerResponse(HttpServletRequest request, HttpServletResponse response, String templateName, Map<String, Object> variableMap) throws IOException --> Line_11 $$ variableMap.put("RequestAdmin4jCurrentUri", request.getRequestURI()) [FD]
Line_2 $$ protected void displayFreeMarkerResponse(HttpServletRequest request, HttpServletResponse response, String templateName, Map<String, Object> variableMap) throws IOException --> Line_12 $$ Template temp = FreemarkerUtils.createConfiguredTemplate(this.getClass(), templateName) [CD]
Line_2 $$ protected void displayFreeMarkerResponse(HttpServletRequest request, HttpServletResponse response, String templateName, Map<String, Object> variableMap) throws IOException --> Line_12 $$ Template temp = FreemarkerUtils.createConfiguredTemplate(this.getClass(), templateName) [FD]
Line_2 $$ protected void displayFreeMarkerResponse(HttpServletRequest request, HttpServletResponse response, String templateName, Map<String, Object> variableMap) throws IOException --> Line_13 $$ ByteArrayOutputStream outStream = new ByteArrayOutputStream() [CD]
Line_12 $$ Template temp = FreemarkerUtils.createConfiguredTemplate(this.getClass(), templateName) --> Line_15 $$ temp.process(variableMap, new OutputStreamWriter(outStream)) [FD]
Line_2 $$ protected void displayFreeMarkerResponse(HttpServletRequest request, HttpServletResponse response, String templateName, Map<String, Object> variableMap) throws IOException --> Line_15 $$ temp.process(variableMap, new OutputStreamWriter(outStream)) [FD]
Line_2 $$ protected void displayFreeMarkerResponse(HttpServletRequest request, HttpServletResponse response, String templateName, Map<String, Object> variableMap) throws IOException --> Line_16 $$ response.setContentLength(outStream.size()) [FD]
Line_13 $$ ByteArrayOutputStream outStream = new ByteArrayOutputStream() --> Line_16 $$ response.setContentLength(outStream.size()) [FD]
Line_13 $$ ByteArrayOutputStream outStream = new ByteArrayOutputStream() --> Line_17 $$ IOUtils.copy(new ByteArrayInputStream(outStream.toByteArray()), response.getOutputStream()) [FD]
Line_2 $$ protected void displayFreeMarkerResponse(HttpServletRequest request, HttpServletResponse response, String templateName, Map<String, Object> variableMap) throws IOException --> Line_17 $$ IOUtils.copy(new ByteArrayInputStream(outStream.toByteArray()), response.getOutputStream()) [FD]
Line_2 $$ protected void displayFreeMarkerResponse(HttpServletRequest request, HttpServletResponse response, String templateName, Map<String, Object> variableMap) throws IOException --> Line_18 $$ response.getOutputStream().flush() [FD]
Line_2 $$ protected void displayFreeMarkerResponse(HttpServletRequest request, HttpServletResponse response, String templateName, Map<String, Object> variableMap) throws IOException --> Line_19 $$ response.getOutputStream().close() [FD]
