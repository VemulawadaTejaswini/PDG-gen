Line_2 $$ public void fetchPublicContent(int id) throws IOException --> Line_3 $$ String fileName = FILE_NAME_PREFIX + id + ".xml" [CD]
Line_2 $$ public void fetchPublicContent(int id) throws IOException --> Line_4 $$ File file = new File(fileName) [CD]
Line_2 $$ public void fetchPublicContent(int id) throws IOException --> Line_5 $$ if (file.exists()) [CD]
Line_4 $$ File file = new File(fileName) --> Line_5 $$ if (file.exists()) [FD]
Line_5 $$ if (file.exists()) --> Line_6 $$ System.out.println("user: " + id + " not fetched because it already exists") [CD]
Line_5 $$ if (file.exists()) --> Line_7 $$ return [CD]
Line_2 $$ public void fetchPublicContent(int id) throws IOException --> Line_9 $$ OutputStream out = new FileOutputStream(file, false) [CD]
Line_2 $$ public void fetchPublicContent(int id) throws IOException --> Line_10 $$ URL url = new URL("http://twitter.com/statuses/followers.xml?id=" + id) [CD]
Line_2 $$ public void fetchPublicContent(int id) throws IOException --> Line_11 $$ URLConnection conn = url.openConnection() [CD]
Line_10 $$ URL url = new URL("http://twitter.com/statuses/followers.xml?id=" + id) --> Line_11 $$ URLConnection conn = url.openConnection() [FD]
Line_2 $$ public void fetchPublicContent(int id) throws IOException --> Line_12 $$ InputStream in = conn.getInputStream() [CD]
Line_11 $$ URLConnection conn = url.openConnection() --> Line_12 $$ InputStream in = conn.getInputStream() [FD]
Line_2 $$ public void fetchPublicContent(int id) throws IOException --> Line_13 $$ int i = 0 [CD]
Line_2 $$ public void fetchPublicContent(int id) throws IOException --> Line_14 $$ while ((i = in.read()) != -1) [CD]
Line_13 $$ int i = 0 --> Line_14 $$ while ((i = in.read()) != -1) [FD]
Line_12 $$ InputStream in = conn.getInputStream() --> Line_14 $$ while ((i = in.read()) != -1) [FD]
Line_14 $$ while ((i = in.read()) != -1) --> Line_15 $$ out.write(i) [CD]
Line_14 $$ while ((i = in.read()) != -1) --> Line_15 $$ out.write(i) [FD]
Line_9 $$ OutputStream out = new FileOutputStream(file, false) --> Line_15 $$ out.write(i) [FD]
Line_13 $$ int i = 0 --> Line_15 $$ out.write(i) [FD]
Line_2 $$ public void fetchPublicContent(int id) throws IOException --> Line_17 $$ in.close() [CD]
Line_12 $$ InputStream in = conn.getInputStream() --> Line_17 $$ in.close() [FD]
Line_2 $$ public void fetchPublicContent(int id) throws IOException --> Line_18 $$ out.close() [CD]
Line_9 $$ OutputStream out = new FileOutputStream(file, false) --> Line_18 $$ out.close() [FD]
