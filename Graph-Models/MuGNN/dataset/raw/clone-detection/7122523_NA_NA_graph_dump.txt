Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_3 $$ InstanciaDelegate delegate = RegistroManager.recuperarInstancia(request) [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_3 $$ InstanciaDelegate delegate = RegistroManager.recuperarInstancia(request) [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_4 $$ if (delegate == null) [CD]
Line_3 $$ InstanciaDelegate delegate = RegistroManager.recuperarInstancia(request) --> Line_4 $$ if (delegate == null) [FD]
Line_4 $$ if (delegate == null) --> Line_5 $$ ActionErrors errors = new ActionErrors() [CD]
Line_4 $$ if (delegate == null) --> Line_6 $$ errors.add(null, new ActionError("errors.session")) [CD]
Line_5 $$ ActionErrors errors = new ActionErrors() --> Line_6 $$ errors.add(null, new ActionError("errors.session")) [FD]
Line_4 $$ if (delegate == null) --> Line_7 $$ saveErrors(request, errors) [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_7 $$ saveErrors(request, errors) [FD]
Line_5 $$ ActionErrors errors = new ActionErrors() --> Line_7 $$ saveErrors(request, errors) [FD]
Line_4 $$ if (delegate == null) --> Line_8 $$ return mapping.findForward("fail") [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_8 $$ return mapping.findForward("fail") [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_10 $$ AyudaPantalla ayudaPantalla = delegate.obtenerAyudaPantalla() [CD]
Line_3 $$ InstanciaDelegate delegate = RegistroManager.recuperarInstancia(request) --> Line_10 $$ AyudaPantalla ayudaPantalla = delegate.obtenerAyudaPantalla() [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_11 $$ TraAyudaPantalla traAyudaPantalla = (TraAyudaPantalla) ayudaPantalla.getTraduccion() [CD]
Line_10 $$ AyudaPantalla ayudaPantalla = delegate.obtenerAyudaPantalla() --> Line_11 $$ TraAyudaPantalla traAyudaPantalla = (TraAyudaPantalla) ayudaPantalla.getTraduccion() [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_12 $$ String urlSonido = traAyudaPantalla.getUrlSonido() [CD]
Line_11 $$ TraAyudaPantalla traAyudaPantalla = (TraAyudaPantalla) ayudaPantalla.getTraduccion() --> Line_12 $$ String urlSonido = traAyudaPantalla.getUrlSonido() [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_13 $$ if (urlSonido == null) [CD]
Line_12 $$ String urlSonido = traAyudaPantalla.getUrlSonido() --> Line_13 $$ if (urlSonido == null) [FD]
Line_13 $$ if (urlSonido == null) --> Line_14 $$ return null [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_16 $$ URL url = new URL(urlSonido) [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_17 $$ URLConnection urlConnection = url.openConnection() [CD]
Line_16 $$ URL url = new URL(urlSonido) --> Line_17 $$ URLConnection urlConnection = url.openConnection() [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_18 $$ urlConnection.connect() [CD]
Line_17 $$ URLConnection urlConnection = url.openConnection() --> Line_18 $$ urlConnection.connect() [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_19 $$ String tipoMime = urlConnection.getContentType() [CD]
Line_17 $$ URLConnection urlConnection = url.openConnection() --> Line_19 $$ String tipoMime = urlConnection.getContentType() [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_20 $$ log.debug("Tipo Mime: " + tipoMime) [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_21 $$ Map audioOptions = new HashMap() [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_22 $$ if (tipoMime.indexOf("audio") != -1 || tipoMime.indexOf("asf") != -1 || tipoMime.equals("unknown/unknown")) [CD]
Line_19 $$ String tipoMime = urlConnection.getContentType() --> Line_22 $$ if (tipoMime.indexOf("audio") != -1 || tipoMime.indexOf("asf") != -1 || tipoMime.equals("unknown/unknown")) [FD]
Line_22 $$ if (tipoMime.indexOf("audio") != -1 || tipoMime.indexOf("asf") != -1 || tipoMime.equals("unknown/unknown")) --> Line_23 $$ audioOptions.put("id", "MediaPlayer") [CD]
Line_21 $$ Map audioOptions = new HashMap() --> Line_23 $$ audioOptions.put("id", "MediaPlayer") [FD]
Line_22 $$ if (tipoMime.indexOf("audio") != -1 || tipoMime.indexOf("asf") != -1 || tipoMime.equals("unknown/unknown")) --> Line_24 $$ audioOptions.put("codeBase", "http://activex.microsoft.com/activex/controls/mplayer/en/nsmp2inf.cab#Version=6,4,7,1112") [CD]
Line_21 $$ Map audioOptions = new HashMap() --> Line_24 $$ audioOptions.put("codeBase", "http://activex.microsoft.com/activex/controls/mplayer/en/nsmp2inf.cab#Version=6,4,7,1112") [FD]
Line_22 $$ if (tipoMime.indexOf("audio") != -1 || tipoMime.indexOf("asf") != -1 || tipoMime.equals("unknown/unknown")) --> Line_25 $$ audioOptions.put("classId", "CLSID:22D6F312-B0F6-11D0-94AB-0080C74C7E95") [CD]
Line_21 $$ Map audioOptions = new HashMap() --> Line_25 $$ audioOptions.put("classId", "CLSID:22D6F312-B0F6-11D0-94AB-0080C74C7E95") [FD]
Line_22 $$ if (tipoMime.indexOf("audio") != -1 || tipoMime.indexOf("asf") != -1 || tipoMime.equals("unknown/unknown")) --> Line_26 $$ audioOptions.put("mimeType", "application/x-mplayer2") [CD]
Line_21 $$ Map audioOptions = new HashMap() --> Line_26 $$ audioOptions.put("mimeType", "application/x-mplayer2") [FD]
Line_22 $$ if (tipoMime.indexOf("audio") != -1 || tipoMime.indexOf("asf") != -1 || tipoMime.equals("unknown/unknown")) --> Line_27 $$ audioOptions.put("urlSonido", urlSonido) [CD]
Line_21 $$ Map audioOptions = new HashMap() --> Line_27 $$ audioOptions.put("urlSonido", urlSonido) [FD]
Line_12 $$ String urlSonido = traAyudaPantalla.getUrlSonido() --> Line_27 $$ audioOptions.put("urlSonido", urlSonido) [FD]
Line_22 $$ if (tipoMime.indexOf("audio") != -1 || tipoMime.indexOf("asf") != -1 || tipoMime.equals("unknown/unknown")) --> Line_28 $$ audioOptions.put("pluginSpage", "http://www.microsoft.com/Windows/Downloads/Contents/Products/MediaPlayer/") [CD]
Line_21 $$ Map audioOptions = new HashMap() --> Line_28 $$ audioOptions.put("pluginSpage", "http://www.microsoft.com/Windows/Downloads/Contents/Products/MediaPlayer/") [FD]
Line_22 $$ if (tipoMime.indexOf("audio") != -1 || tipoMime.indexOf("asf") != -1 || tipoMime.equals("unknown/unknown")) --> Line_29 $$ if (tipoMime.indexOf("real") != -1) [CD]
Line_19 $$ String tipoMime = urlConnection.getContentType() --> Line_29 $$ if (tipoMime.indexOf("real") != -1) [FD]
Line_29 $$ if (tipoMime.indexOf("real") != -1) --> Line_30 $$ audioOptions.put("id", "RVOCX") [CD]
Line_21 $$ Map audioOptions = new HashMap() --> Line_30 $$ audioOptions.put("id", "RVOCX") [FD]
Line_29 $$ if (tipoMime.indexOf("real") != -1) --> Line_31 $$ audioOptions.put("codeBase", "") [CD]
Line_21 $$ Map audioOptions = new HashMap() --> Line_31 $$ audioOptions.put("codeBase", "") [FD]
Line_29 $$ if (tipoMime.indexOf("real") != -1) --> Line_32 $$ audioOptions.put("classId", "clsid:CFCDAA03-8BE4-11cf-B84B-0020AFBBCCFA") [CD]
Line_21 $$ Map audioOptions = new HashMap() --> Line_32 $$ audioOptions.put("classId", "clsid:CFCDAA03-8BE4-11cf-B84B-0020AFBBCCFA") [FD]
Line_29 $$ if (tipoMime.indexOf("real") != -1) --> Line_33 $$ audioOptions.put("mimeType", "audio/x-pn-realaudio-plugin") [CD]
Line_21 $$ Map audioOptions = new HashMap() --> Line_33 $$ audioOptions.put("mimeType", "audio/x-pn-realaudio-plugin") [FD]
Line_29 $$ if (tipoMime.indexOf("real") != -1) --> Line_34 $$ audioOptions.put("urlSonido", urlSonido) [CD]
Line_21 $$ Map audioOptions = new HashMap() --> Line_34 $$ audioOptions.put("urlSonido", urlSonido) [FD]
Line_12 $$ String urlSonido = traAyudaPantalla.getUrlSonido() --> Line_34 $$ audioOptions.put("urlSonido", urlSonido) [FD]
Line_29 $$ if (tipoMime.indexOf("real") != -1) --> Line_35 $$ audioOptions.put("pluginSpage", "") [CD]
Line_21 $$ Map audioOptions = new HashMap() --> Line_35 $$ audioOptions.put("pluginSpage", "") [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_37 $$ request.setAttribute("audioOptions", audioOptions) [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_37 $$ request.setAttribute("audioOptions", audioOptions) [FD]
Line_21 $$ Map audioOptions = new HashMap() --> Line_37 $$ request.setAttribute("audioOptions", audioOptions) [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_38 $$ log.debug("entra success") [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_39 $$ return mapping.findForward("success") [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_39 $$ return mapping.findForward("success") [FD]
