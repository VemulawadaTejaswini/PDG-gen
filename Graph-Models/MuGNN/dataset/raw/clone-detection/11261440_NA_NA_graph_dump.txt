Line_2 $$ private static String func(String sf) --> Line_3 $$ int total = 0, temp [CD]
Line_2 $$ private static String func(String sf) --> Line_4 $$ String fnctn[] = [CD]
Line_2 $$ private static String func(String sf) --> Line_5 $$ int pos[] = new int[7] [CD]
Line_2 $$ private static String func(String sf) --> Line_6 $$ for (int n = 0; n < fnctn.length; n++) [CD]
Line_6 $$ for (int n = 0; n < fnctn.length; n++) --> Line_7 $$ pos[n] = sf.lastIndexOf(fnctn[n]) [CD]
Line_2 $$ private static String func(String sf) --> Line_7 $$ pos[n] = sf.lastIndexOf(fnctn[n]) [FD]
Line_2 $$ private static String func(String sf) --> Line_9 $$ for (int m = 0; m < fnctn.length; m++) [CD]
Line_9 $$ for (int m = 0; m < fnctn.length; m++) --> Line_10 $$ total += pos[m] [CD]
Line_3 $$ int total = 0, temp --> Line_10 $$ total += pos[m] [FD]
Line_2 $$ private static String func(String sf) --> Line_12 $$ if (total == -7) [CD]
Line_10 $$ total += pos[m] --> Line_12 $$ if (total == -7) [FD]
Line_3 $$ int total = 0, temp --> Line_12 $$ if (total == -7) [FD]
Line_12 $$ if (total == -7) --> Line_13 $$ return sf [CD]
Line_2 $$ private static String func(String sf) --> Line_15 $$ for (int i = pos.length; i > 1; i--) [CD]
Line_15 $$ for (int i = pos.length; i > 1; i--) --> Line_16 $$ for (int j = 0; j < i - 1; j++) [CD]
Line_16 $$ for (int j = 0; j < i - 1; j++) --> Line_17 $$ if (pos[j] < pos[j + 1]) [CD]
Line_17 $$ if (pos[j] < pos[j + 1]) --> Line_18 $$ temp = pos[j] [CD]
Line_3 $$ int total = 0, temp --> Line_18 $$ temp = pos[j] [FD]
Line_17 $$ if (pos[j] < pos[j + 1]) --> Line_19 $$ pos[j] = pos[j + 1] [CD]
Line_17 $$ if (pos[j] < pos[j + 1]) --> Line_20 $$ pos[j + 1] = temp [CD]
Line_18 $$ temp = pos[j] --> Line_20 $$ pos[j + 1] = temp [FD]
Line_3 $$ int total = 0, temp --> Line_20 $$ pos[j + 1] = temp [FD]
Line_17 $$ if (pos[j] < pos[j + 1]) --> Line_21 $$ temp2 = fnctn[j] [CD]
Line_4 $$ String fnctn[] = --> Line_21 $$ temp2 = fnctn[j] [FD]
Line_17 $$ if (pos[j] < pos[j + 1]) --> Line_22 $$ fnctn[j] = fnctn[j + 1] [CD]
Line_17 $$ if (pos[j] < pos[j + 1]) --> Line_23 $$ fnctn[j + 1] = temp2 [CD]
Line_21 $$ temp2 = fnctn[j] --> Line_23 $$ fnctn[j + 1] = temp2 [FD]
Line_4 $$ String fnctn[] = --> Line_23 $$ fnctn[j + 1] = temp2 [FD]
Line_2 $$ private static String func(String sf) --> Line_27 $$ if (fnctn[0].equals("sin")) [CD]
Line_27 $$ if (fnctn[0].equals("sin")) --> Line_28 $$ if ((pos[0] == 0 || sf.charAt(pos[0] - 1) != 'a')) [CD]
Line_2 $$ private static String func(String sf) --> Line_28 $$ if ((pos[0] == 0 || sf.charAt(pos[0] - 1) != 'a')) [FD]
Line_28 $$ if ((pos[0] == 0 || sf.charAt(pos[0] - 1) != 'a')) --> Line_29 $$ return func(Functions.sine(sf, pos[0], false)) [CD]
Line_2 $$ private static String func(String sf) --> Line_29 $$ return func(Functions.sine(sf, pos[0], false)) [FD]
Line_28 $$ if ((pos[0] == 0 || sf.charAt(pos[0] - 1) != 'a')) --> Line_31 $$ return func(Functions.asin(sf, pos[0], false)) [CD]
Line_2 $$ private static String func(String sf) --> Line_31 $$ return func(Functions.asin(sf, pos[0], false)) [FD]
Line_27 $$ if (fnctn[0].equals("sin")) --> Line_33 $$ if (fnctn[0].equals("cos")) [CD]
Line_33 $$ if (fnctn[0].equals("cos")) --> Line_34 $$ if ((pos[0] == 0 || sf.charAt(pos[0] - 1) != 'a')) [CD]
Line_2 $$ private static String func(String sf) --> Line_34 $$ if ((pos[0] == 0 || sf.charAt(pos[0] - 1) != 'a')) [FD]
Line_34 $$ if ((pos[0] == 0 || sf.charAt(pos[0] - 1) != 'a')) --> Line_35 $$ return func(Functions.cosine(sf, pos[0], false)) [CD]
Line_2 $$ private static String func(String sf) --> Line_35 $$ return func(Functions.cosine(sf, pos[0], false)) [FD]
Line_34 $$ if ((pos[0] == 0 || sf.charAt(pos[0] - 1) != 'a')) --> Line_37 $$ return func(Functions.acos(sf, pos[0], false)) [CD]
Line_2 $$ private static String func(String sf) --> Line_37 $$ return func(Functions.acos(sf, pos[0], false)) [FD]
Line_33 $$ if (fnctn[0].equals("cos")) --> Line_39 $$ if (fnctn[0].equals("tan")) [CD]
Line_39 $$ if (fnctn[0].equals("tan")) --> Line_40 $$ if ((pos[0] == 0 || sf.charAt(pos[0] - 1) != 'a')) [CD]
Line_2 $$ private static String func(String sf) --> Line_40 $$ if ((pos[0] == 0 || sf.charAt(pos[0] - 1) != 'a')) [FD]
Line_40 $$ if ((pos[0] == 0 || sf.charAt(pos[0] - 1) != 'a')) --> Line_41 $$ return func(Functions.tangent(sf, pos[0], false)) [CD]
Line_2 $$ private static String func(String sf) --> Line_41 $$ return func(Functions.tangent(sf, pos[0], false)) [FD]
Line_40 $$ if ((pos[0] == 0 || sf.charAt(pos[0] - 1) != 'a')) --> Line_43 $$ return func(Functions.atan(sf, pos[0], false)) [CD]
Line_2 $$ private static String func(String sf) --> Line_43 $$ return func(Functions.atan(sf, pos[0], false)) [FD]
Line_39 $$ if (fnctn[0].equals("tan")) --> Line_45 $$ if (fnctn[0].equals("log")) [CD]
Line_45 $$ if (fnctn[0].equals("log")) --> Line_46 $$ return func(Functions.logarithm(sf, pos[0])) [CD]
Line_2 $$ private static String func(String sf) --> Line_46 $$ return func(Functions.logarithm(sf, pos[0])) [FD]
Line_45 $$ if (fnctn[0].equals("log")) --> Line_47 $$ if (fnctn[0].equals("ln")) [CD]
Line_47 $$ if (fnctn[0].equals("ln")) --> Line_48 $$ return func(Functions.lnat(sf, pos[0])) [CD]
Line_2 $$ private static String func(String sf) --> Line_48 $$ return func(Functions.lnat(sf, pos[0])) [FD]
Line_47 $$ if (fnctn[0].equals("ln")) --> Line_49 $$ if (fnctn[0].equals("sqrt")) [CD]
Line_49 $$ if (fnctn[0].equals("sqrt")) --> Line_50 $$ return func(Functions.sqroot(sf, pos[0])) [CD]
Line_2 $$ private static String func(String sf) --> Line_50 $$ return func(Functions.sqroot(sf, pos[0])) [FD]
Line_49 $$ if (fnctn[0].equals("sqrt")) --> Line_52 $$ return func(Functions.factorial(sf, pos[0])) [CD]
Line_2 $$ private static String func(String sf) --> Line_52 $$ return func(Functions.factorial(sf, pos[0])) [FD]
