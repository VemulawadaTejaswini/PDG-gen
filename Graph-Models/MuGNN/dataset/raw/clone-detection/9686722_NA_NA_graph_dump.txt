Line_2 $$ public static void initConfigurationV2(String cuttleConfiguration, javax.servlet.ServletContext context, List configFileList) throws Exception --> Line_3 $$ ConfigureDigester.clearMap() [CD]
Line_2 $$ public static void initConfigurationV2(String cuttleConfiguration, javax.servlet.ServletContext context, List configFileList) throws Exception --> Line_4 $$ List rootList = new ArrayList() [CD]
Line_2 $$ public static void initConfigurationV2(String cuttleConfiguration, javax.servlet.ServletContext context, List configFileList) throws Exception --> Line_5 $$ InputStream is = null [CD]
Line_2 $$ public static void initConfigurationV2(String cuttleConfiguration, javax.servlet.ServletContext context, List configFileList) throws Exception --> Line_6 $$ if (cuttleConfiguration == null) [CD]
Line_2 $$ public static void initConfigurationV2(String cuttleConfiguration, javax.servlet.ServletContext context, List configFileList) throws Exception --> Line_6 $$ if (cuttleConfiguration == null) [FD]
Line_6 $$ if (cuttleConfiguration == null) --> Line_7 $$ URL url = CompositePageUtil.class.getResource("/cuttle.xml") [CD]
Line_6 $$ if (cuttleConfiguration == null) --> Line_8 $$ url = CompositePageUtil.class.getClassLoader().getResource("/cuttle.xml") [CD]
Line_6 $$ if (cuttleConfiguration == null) --> Line_9 $$ is = url.openStream() [CD]
Line_5 $$ InputStream is = null --> Line_9 $$ is = url.openStream() [FD]
Line_6 $$ if (cuttleConfiguration == null) --> Line_11 $$ is = context.getResourceAsStream(cuttleConfiguration) [CD]
Line_5 $$ InputStream is = null --> Line_11 $$ is = context.getResourceAsStream(cuttleConfiguration) [FD]
Line_9 $$ is = url.openStream() --> Line_11 $$ is = context.getResourceAsStream(cuttleConfiguration) [FD]
Line_2 $$ public static void initConfigurationV2(String cuttleConfiguration, javax.servlet.ServletContext context, List configFileList) throws Exception --> Line_11 $$ is = context.getResourceAsStream(cuttleConfiguration) [FD]
Line_2 $$ public static void initConfigurationV2(String cuttleConfiguration, javax.servlet.ServletContext context, List configFileList) throws Exception --> Line_13 $$ parseConfigV2(rootList, is, context, configFileList) [CD]
Line_2 $$ public static void initConfigurationV2(String cuttleConfiguration, javax.servlet.ServletContext context, List configFileList) throws Exception --> Line_13 $$ parseConfigV2(rootList, is, context, configFileList) [FD]
Line_4 $$ List rootList = new ArrayList() --> Line_13 $$ parseConfigV2(rootList, is, context, configFileList) [FD]
Line_5 $$ InputStream is = null --> Line_13 $$ parseConfigV2(rootList, is, context, configFileList) [FD]
Line_9 $$ is = url.openStream() --> Line_13 $$ parseConfigV2(rootList, is, context, configFileList) [FD]
Line_11 $$ is = context.getResourceAsStream(cuttleConfiguration) --> Line_13 $$ parseConfigV2(rootList, is, context, configFileList) [FD]
Line_2 $$ public static void initConfigurationV2(String cuttleConfiguration, javax.servlet.ServletContext context, List configFileList) throws Exception --> Line_14 $$ if (ConfigureDigester.getXmlCuttleConfiguration() != null && ConfigureDigester.getXmlCuttleConfiguration().getPlugins() != null) [CD]
Line_14 $$ if (ConfigureDigester.getXmlCuttleConfiguration() != null && ConfigureDigester.getXmlCuttleConfiguration().getPlugins() != null) --> Line_15 $$ for (int i = 0; i < ConfigureDigester.getXmlCuttleConfiguration().getPlugins().size(); i++) [CD]
Line_15 $$ for (int i = 0; i < ConfigureDigester.getXmlCuttleConfiguration().getPlugins().size(); i++) --> Line_16 $$ XMLPlugin plugin = (XMLPlugin) ConfigureDigester.getXmlCuttleConfiguration().getPlugins().get(i) [CD]
Line_15 $$ for (int i = 0; i < ConfigureDigester.getXmlCuttleConfiguration().getPlugins().size(); i++) --> Line_16 $$ XMLPlugin plugin = (XMLPlugin) ConfigureDigester.getXmlCuttleConfiguration().getPlugins().get(i) [FD]
Line_15 $$ for (int i = 0; i < ConfigureDigester.getXmlCuttleConfiguration().getPlugins().size(); i++) --> Line_17 $$ if (plugin.getConfigurePlugable() != null && !plugin.getConfigurePlugable().equals("")) [CD]
Line_16 $$ XMLPlugin plugin = (XMLPlugin) ConfigureDigester.getXmlCuttleConfiguration().getPlugins().get(i) --> Line_17 $$ if (plugin.getConfigurePlugable() != null && !plugin.getConfigurePlugable().equals("")) [FD]
Line_17 $$ if (plugin.getConfigurePlugable() != null && !plugin.getConfigurePlugable().equals("")) --> Line_18 $$ Class pluginable = Class.forName(plugin.getConfigurePlugable()) [CD]
Line_16 $$ XMLPlugin plugin = (XMLPlugin) ConfigureDigester.getXmlCuttleConfiguration().getPlugins().get(i) --> Line_18 $$ Class pluginable = Class.forName(plugin.getConfigurePlugable()) [FD]
Line_17 $$ if (plugin.getConfigurePlugable() != null && !plugin.getConfigurePlugable().equals("")) --> Line_19 $$ ConfigurePlugable pluginableObj = (ConfigurePlugable) pluginable.newInstance() [CD]
Line_18 $$ Class pluginable = Class.forName(plugin.getConfigurePlugable()) --> Line_19 $$ ConfigurePlugable pluginableObj = (ConfigurePlugable) pluginable.newInstance() [FD]
Line_17 $$ if (plugin.getConfigurePlugable() != null && !plugin.getConfigurePlugable().equals("")) --> Line_20 $$ pluginableObj.initConfiguration(plugin.getConfigurationPath(), context) [CD]
Line_19 $$ ConfigurePlugable pluginableObj = (ConfigurePlugable) pluginable.newInstance() --> Line_20 $$ pluginableObj.initConfiguration(plugin.getConfigurationPath(), context) [FD]
Line_2 $$ public static void initConfigurationV2(String cuttleConfiguration, javax.servlet.ServletContext context, List configFileList) throws Exception --> Line_20 $$ pluginableObj.initConfiguration(plugin.getConfigurationPath(), context) [FD]
Line_16 $$ XMLPlugin plugin = (XMLPlugin) ConfigureDigester.getXmlCuttleConfiguration().getPlugins().get(i) --> Line_20 $$ pluginableObj.initConfiguration(plugin.getConfigurationPath(), context) [FD]
