Line_2 $$ public void shouldProgateStagingRepoToYumGroupRepo() throws Exception --> Line_3 $$ givenGroupRepository(GROUP_REPO_ID, "maven2yum") [CD]
Line_2 $$ public void shouldProgateStagingRepoToYumGroupRepo() throws Exception --> Line_4 $$ givenClosedStagingRepoWithRpm(ARTIFACT_ID_1, "4.3.2") [CD]
Line_2 $$ public void shouldProgateStagingRepoToYumGroupRepo() throws Exception --> Line_5 $$ givenClosedStagingRepoWithRpm(ARTIFACT_ID_2, "2.3.4") [CD]
Line_2 $$ public void shouldProgateStagingRepoToYumGroupRepo() throws Exception --> Line_6 $$ wait(10, SECONDS) [CD]
Line_2 $$ public void shouldProgateStagingRepoToYumGroupRepo() throws Exception --> Line_7 $$ final HttpResponse response = executeGetWithResponse(NEXUS_BASE_URL + "/content/groups/staging-test-group/repodata/primary.xml.gz") [CD]
Line_2 $$ public void shouldProgateStagingRepoToYumGroupRepo() throws Exception --> Line_8 $$ final String repoContent = IOUtils.toString(new GZIPInputStream(new ByteArrayInputStream(toByteArray(response.getEntity())))) [CD]
Line_7 $$ final HttpResponse response = executeGetWithResponse(NEXUS_BASE_URL + "/content/groups/staging-test-group/repodata/primary.xml.gz") --> Line_8 $$ final String repoContent = IOUtils.toString(new GZIPInputStream(new ByteArrayInputStream(toByteArray(response.getEntity())))) [FD]
Line_2 $$ public void shouldProgateStagingRepoToYumGroupRepo() throws Exception --> Line_9 $$ assertThat(response.getStatusLine().getStatusCode(), is(200)) [CD]
Line_7 $$ final HttpResponse response = executeGetWithResponse(NEXUS_BASE_URL + "/content/groups/staging-test-group/repodata/primary.xml.gz") --> Line_9 $$ assertThat(response.getStatusLine().getStatusCode(), is(200)) [FD]
Line_2 $$ public void shouldProgateStagingRepoToYumGroupRepo() throws Exception --> Line_10 $$ assertThat(repoContent, containsString(ARTIFACT_ID_1)) [CD]
Line_8 $$ final String repoContent = IOUtils.toString(new GZIPInputStream(new ByteArrayInputStream(toByteArray(response.getEntity())))) --> Line_10 $$ assertThat(repoContent, containsString(ARTIFACT_ID_1)) [FD]
Line_2 $$ public void shouldProgateStagingRepoToYumGroupRepo() throws Exception --> Line_11 $$ assertThat(repoContent, containsString(ARTIFACT_ID_2)) [CD]
Line_8 $$ final String repoContent = IOUtils.toString(new GZIPInputStream(new ByteArrayInputStream(toByteArray(response.getEntity())))) --> Line_11 $$ assertThat(repoContent, containsString(ARTIFACT_ID_2)) [FD]
