Line_2 $$ public boolean copy(Class<?> subCls, String subCol, long id) --> Line_3 $$ boolean bool = false [CD]
Line_2 $$ public boolean copy(Class<?> subCls, String subCol, long id) --> Line_4 $$ this.result = null [CD]
Line_2 $$ public boolean copy(Class<?> subCls, String subCol, long id) --> Line_5 $$ Connection conn = null [CD]
Line_2 $$ public boolean copy(Class<?> subCls, String subCol, long id) --> Line_6 $$ Object vo = null [CD]
Line_5 $$ Connection conn = null --> Line_8 $$ conn = ConnectUtil.getConnect() [FD]
Line_5 $$ Connection conn = null --> Line_9 $$ conn.setAutoCommit(false) [FD]
Line_8 $$ conn = ConnectUtil.getConnect() --> Line_9 $$ conn.setAutoCommit(false) [FD]
Line_6 $$ Object vo = null --> Line_12 $$ vo = this.findById(conn, "select * from " + parser.getTableName(cls) + " where " + parser.getPriamryKey(cls) + "=" + id) [FD]
Line_5 $$ Connection conn = null --> Line_12 $$ vo = this.findById(conn, "select * from " + parser.getTableName(cls) + " where " + parser.getPriamryKey(cls) + "=" + id) [FD]
Line_8 $$ conn = ConnectUtil.getConnect() --> Line_12 $$ vo = this.findById(conn, "select * from " + parser.getTableName(cls) + " where " + parser.getPriamryKey(cls) + "=" + id) [FD]
Line_10 $$ PojoParser parser = PojoParser.getInstances() --> Line_12 $$ vo = this.findById(conn, "select * from " + parser.getTableName(cls) + " where " + parser.getPriamryKey(cls) + "=" + id) [FD]
Line_10 $$ PojoParser parser = PojoParser.getInstances() --> Line_13 $$ String pk = parser.getPriamryKey(cls) [FD]
Line_6 $$ Object vo = null --> Line_14 $$ this.getCls().getMethod("set" + SqlUtil.getFieldName(pk), new Class[] [FD]
Line_12 $$ vo = this.findById(conn, "select * from " + parser.getTableName(cls) + " where " + parser.getPriamryKey(cls) + "=" + id) --> Line_14 $$ this.getCls().getMethod("set" + SqlUtil.getFieldName(pk), new Class[] [FD]
Line_13 $$ String pk = parser.getPriamryKey(cls) --> Line_14 $$ this.getCls().getMethod("set" + SqlUtil.getFieldName(pk), new Class[] [FD]
Line_5 $$ Connection conn = null --> Line_15 $$ PreparedStatement ps = conn.prepareStatement(sql) [FD]
Line_8 $$ conn = ConnectUtil.getConnect() --> Line_15 $$ PreparedStatement ps = conn.prepareStatement(sql) [FD]
Line_11 $$ String sql = SqlUtil.getInsertSql(this.getCls()) --> Line_15 $$ PreparedStatement ps = conn.prepareStatement(sql) [FD]
Line_15 $$ PreparedStatement ps = conn.prepareStatement(sql) --> Line_16 $$ setPsParams(ps, vo) [FD]
Line_6 $$ Object vo = null --> Line_16 $$ setPsParams(ps, vo) [FD]
Line_12 $$ vo = this.findById(conn, "select * from " + parser.getTableName(cls) + " where " + parser.getPriamryKey(cls) + "=" + id) --> Line_16 $$ setPsParams(ps, vo) [FD]
Line_15 $$ PreparedStatement ps = conn.prepareStatement(sql) --> Line_17 $$ ps.executeUpdate() [FD]
Line_15 $$ PreparedStatement ps = conn.prepareStatement(sql) --> Line_18 $$ ps.close() [FD]
Line_10 $$ PojoParser parser = PojoParser.getInstances() --> Line_20 $$ parser = PojoParser.getInstances() [FD]
Line_11 $$ String sql = SqlUtil.getInsertSql(this.getCls()) --> Line_21 $$ sql = SqlUtil.getInsertSql(subCls) [FD]
Line_2 $$ public boolean copy(Class<?> subCls, String subCol, long id) --> Line_21 $$ sql = SqlUtil.getInsertSql(subCls) [FD]
Line_2 $$ public boolean copy(Class<?> subCls, String subCol, long id) --> Line_23 $$ this.cls = subCls [FD]
Line_15 $$ PreparedStatement ps = conn.prepareStatement(sql) --> Line_24 $$ ps = conn.prepareStatement("select * from " + parser.getTableName(subCls) + " where " + subCol + "=" + id) [FD]
Line_5 $$ Connection conn = null --> Line_24 $$ ps = conn.prepareStatement("select * from " + parser.getTableName(subCls) + " where " + subCol + "=" + id) [FD]
Line_8 $$ conn = ConnectUtil.getConnect() --> Line_24 $$ ps = conn.prepareStatement("select * from " + parser.getTableName(subCls) + " where " + subCol + "=" + id) [FD]
Line_10 $$ PojoParser parser = PojoParser.getInstances() --> Line_24 $$ ps = conn.prepareStatement("select * from " + parser.getTableName(subCls) + " where " + subCol + "=" + id) [FD]
Line_20 $$ parser = PojoParser.getInstances() --> Line_24 $$ ps = conn.prepareStatement("select * from " + parser.getTableName(subCls) + " where " + subCol + "=" + id) [FD]
Line_2 $$ public boolean copy(Class<?> subCls, String subCol, long id) --> Line_24 $$ ps = conn.prepareStatement("select * from " + parser.getTableName(subCls) + " where " + subCol + "=" + id) [FD]
Line_15 $$ PreparedStatement ps = conn.prepareStatement(sql) --> Line_25 $$ this.assembleObjToList(ps) [FD]
Line_24 $$ ps = conn.prepareStatement("select * from " + parser.getTableName(subCls) + " where " + subCol + "=" + id) --> Line_25 $$ this.assembleObjToList(ps) [FD]
Line_15 $$ PreparedStatement ps = conn.prepareStatement(sql) --> Line_26 $$ ps = conn.prepareStatement(sql) [FD]
Line_24 $$ ps = conn.prepareStatement("select * from " + parser.getTableName(subCls) + " where " + subCol + "=" + id) --> Line_26 $$ ps = conn.prepareStatement(sql) [FD]
Line_5 $$ Connection conn = null --> Line_26 $$ ps = conn.prepareStatement(sql) [FD]
Line_8 $$ conn = ConnectUtil.getConnect() --> Line_26 $$ ps = conn.prepareStatement(sql) [FD]
Line_11 $$ String sql = SqlUtil.getInsertSql(this.getCls()) --> Line_26 $$ ps = conn.prepareStatement(sql) [FD]
Line_21 $$ sql = SqlUtil.getInsertSql(subCls) --> Line_26 $$ ps = conn.prepareStatement(sql) [FD]
Line_2 $$ public boolean copy(Class<?> subCls, String subCol, long id) --> Line_28 $$ Method m = subCls.getMethod("set" + SqlUtil.getFieldName(subCol), new Class[] [FD]
Line_29 $$ for (int i = 0; i < orgList.size(); ++i) --> Line_30 $$ Object obj = orgList.get(i) [CD]
Line_29 $$ for (int i = 0; i < orgList.size(); ++i) --> Line_30 $$ Object obj = orgList.get(i) [FD]
Line_29 $$ for (int i = 0; i < orgList.size(); ++i) --> Line_31 $$ subCls.getMethod("set" + SqlUtil.getFieldName(parser.getPriamryKey(subCls)), new Class[] [CD]
Line_30 $$ Object obj = orgList.get(i) --> Line_31 $$ subCls.getMethod("set" + SqlUtil.getFieldName(parser.getPriamryKey(subCls)), new Class[] [FD]
Line_2 $$ public boolean copy(Class<?> subCls, String subCol, long id) --> Line_31 $$ subCls.getMethod("set" + SqlUtil.getFieldName(parser.getPriamryKey(subCls)), new Class[] [FD]
Line_10 $$ PojoParser parser = PojoParser.getInstances() --> Line_31 $$ subCls.getMethod("set" + SqlUtil.getFieldName(parser.getPriamryKey(subCls)), new Class[] [FD]
Line_20 $$ parser = PojoParser.getInstances() --> Line_31 $$ subCls.getMethod("set" + SqlUtil.getFieldName(parser.getPriamryKey(subCls)), new Class[] [FD]
Line_29 $$ for (int i = 0; i < orgList.size(); ++i) --> Line_32 $$ m.invoke(obj, new Object[] [CD]
Line_28 $$ Method m = subCls.getMethod("set" + SqlUtil.getFieldName(subCol), new Class[] --> Line_32 $$ m.invoke(obj, new Object[] [FD]
Line_30 $$ Object obj = orgList.get(i) --> Line_32 $$ m.invoke(obj, new Object[] [FD]
Line_29 $$ for (int i = 0; i < orgList.size(); ++i) --> Line_33 $$ setPsParams(ps, obj) [CD]
Line_15 $$ PreparedStatement ps = conn.prepareStatement(sql) --> Line_33 $$ setPsParams(ps, obj) [FD]
Line_24 $$ ps = conn.prepareStatement("select * from " + parser.getTableName(subCls) + " where " + subCol + "=" + id) --> Line_33 $$ setPsParams(ps, obj) [FD]
Line_26 $$ ps = conn.prepareStatement(sql) --> Line_33 $$ setPsParams(ps, obj) [FD]
Line_30 $$ Object obj = orgList.get(i) --> Line_33 $$ setPsParams(ps, obj) [FD]
Line_29 $$ for (int i = 0; i < orgList.size(); ++i) --> Line_34 $$ ps.addBatch() [CD]
Line_15 $$ PreparedStatement ps = conn.prepareStatement(sql) --> Line_34 $$ ps.addBatch() [FD]
Line_24 $$ ps = conn.prepareStatement("select * from " + parser.getTableName(subCls) + " where " + subCol + "=" + id) --> Line_34 $$ ps.addBatch() [FD]
Line_26 $$ ps = conn.prepareStatement(sql) --> Line_34 $$ ps.addBatch() [FD]
Line_29 $$ for (int i = 0; i < orgList.size(); ++i) --> Line_35 $$ if ((i % 100) == 0) [CD]
Line_15 $$ PreparedStatement ps = conn.prepareStatement(sql) --> Line_35 $$ if ((i % 100) == 0) [FD]
Line_24 $$ ps = conn.prepareStatement("select * from " + parser.getTableName(subCls) + " where " + subCol + "=" + id) --> Line_35 $$ if ((i % 100) == 0) [FD]
Line_26 $$ ps = conn.prepareStatement(sql) --> Line_35 $$ if ((i % 100) == 0) [FD]
Line_29 $$ for (int i = 0; i < orgList.size(); ++i) --> Line_36 $$ ids[i] = this.id [CD]
Line_15 $$ PreparedStatement ps = conn.prepareStatement(sql) --> Line_38 $$ ps.executeBatch() [FD]
Line_24 $$ ps = conn.prepareStatement("select * from " + parser.getTableName(subCls) + " where " + subCol + "=" + id) --> Line_38 $$ ps.executeBatch() [FD]
Line_26 $$ ps = conn.prepareStatement(sql) --> Line_38 $$ ps.executeBatch() [FD]
Line_15 $$ PreparedStatement ps = conn.prepareStatement(sql) --> Line_39 $$ ps.close() [FD]
Line_24 $$ ps = conn.prepareStatement("select * from " + parser.getTableName(subCls) + " where " + subCol + "=" + id) --> Line_39 $$ ps.close() [FD]
Line_26 $$ ps = conn.prepareStatement(sql) --> Line_39 $$ ps.close() [FD]
Line_5 $$ Connection conn = null --> Line_40 $$ conn.commit() [FD]
Line_8 $$ conn = ConnectUtil.getConnect() --> Line_40 $$ conn.commit() [FD]
Line_22 $$ Class<?> clses = this.cls --> Line_41 $$ this.cls = clses [FD]
Line_19 $$ long key = this.id --> Line_42 $$ this.id = key [FD]
Line_3 $$ boolean bool = false --> Line_43 $$ bool = true [FD]
Line_5 $$ Connection conn = null --> Line_46 $$ conn.rollback() [FD]
Line_8 $$ conn = ConnectUtil.getConnect() --> Line_46 $$ conn.rollback() [FD]
Line_5 $$ Connection conn = null --> Line_52 $$ this.closeConnectWithTransaction(conn) [FD]
Line_8 $$ conn = ConnectUtil.getConnect() --> Line_52 $$ this.closeConnectWithTransaction(conn) [FD]
Line_2 $$ public boolean copy(Class<?> subCls, String subCol, long id) --> Line_54 $$ return bool [CD]
