Line_2 $$ private static void generateTIFF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_3 $$ Debug.println("ImageCropper.generateTIFF begin") [CD]
Line_2 $$ private static void generateTIFF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_4 $$ MapContext map_context = new MapContext("test", new Configuration()) [CD]
Line_6 $$ Map map = new Map(map_context, area_label, new Configuration()) --> Line_7 $$ map.setCoordSys(ProjectionCategories.default_coordinate_system) [FD]
Line_6 $$ Map map = new Map(map_context, area_label, new Configuration()) --> Line_8 $$ map.setPatternOutline(new XPatternOutline(new XPatternPaint(Color.white))) [FD]
Line_6 $$ Map map = new Map(map_context, area_label, new Configuration()) --> Line_10 $$ RasterLayer rlayer = getRasterLayer(map, raster_label, getLinuxPathEquivalent(source_filename), getLinuxPathEquivalent(diff_filename), type, getLinuxPathEquivalent(legend_filename)) [FD]
Line_2 $$ private static void generateTIFF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_10 $$ RasterLayer rlayer = getRasterLayer(map, raster_label, getLinuxPathEquivalent(source_filename), getLinuxPathEquivalent(diff_filename), type, getLinuxPathEquivalent(legend_filename)) [FD]
Line_9 $$ String type = null --> Line_10 $$ RasterLayer rlayer = getRasterLayer(map, raster_label, getLinuxPathEquivalent(source_filename), getLinuxPathEquivalent(diff_filename), type, getLinuxPathEquivalent(legend_filename)) [FD]
Line_6 $$ Map map = new Map(map_context, area_label, new Configuration()) --> Line_11 $$ map.addLayer(rlayer, true) [FD]
Line_10 $$ RasterLayer rlayer = getRasterLayer(map, raster_label, getLinuxPathEquivalent(source_filename), getLinuxPathEquivalent(diff_filename), type, getLinuxPathEquivalent(legend_filename)) --> Line_11 $$ map.addLayer(rlayer, true) [FD]
Line_6 $$ Map map = new Map(map_context, area_label, new Configuration()) --> Line_12 $$ map.setBounds2DImage(bounds, true) [FD]
Line_2 $$ private static void generateTIFF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_12 $$ map.setBounds2DImage(bounds, true) [FD]
Line_13 $$ Dimension image_dim = null --> Line_14 $$ image_dim = new Dimension((int) rlayer.raster.getDeviceBounds().getWidth() + 1, (int) rlayer.raster.getDeviceBounds().getHeight() + 1) [FD]
Line_2 $$ private static void generateTIFF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_15 $$ if (output_maximum_size > 0) [FD]
Line_15 $$ if (output_maximum_size > 0) --> Line_16 $$ double width_factor = image_dim.getWidth() / output_maximum_size [CD]
Line_13 $$ Dimension image_dim = null --> Line_16 $$ double width_factor = image_dim.getWidth() / output_maximum_size [FD]
Line_14 $$ image_dim = new Dimension((int) rlayer.raster.getDeviceBounds().getWidth() + 1, (int) rlayer.raster.getDeviceBounds().getHeight() + 1) --> Line_16 $$ double width_factor = image_dim.getWidth() / output_maximum_size [FD]
Line_15 $$ if (output_maximum_size > 0) --> Line_17 $$ double height_factor = image_dim.getHeight() / output_maximum_size [CD]
Line_13 $$ Dimension image_dim = null --> Line_17 $$ double height_factor = image_dim.getHeight() / output_maximum_size [FD]
Line_14 $$ image_dim = new Dimension((int) rlayer.raster.getDeviceBounds().getWidth() + 1, (int) rlayer.raster.getDeviceBounds().getHeight() + 1) --> Line_17 $$ double height_factor = image_dim.getHeight() / output_maximum_size [FD]
Line_15 $$ if (output_maximum_size > 0) --> Line_18 $$ double factor = Math.max(width_factor, height_factor) [CD]
Line_16 $$ double width_factor = image_dim.getWidth() / output_maximum_size --> Line_18 $$ double factor = Math.max(width_factor, height_factor) [FD]
Line_17 $$ double height_factor = image_dim.getHeight() / output_maximum_size --> Line_18 $$ double factor = Math.max(width_factor, height_factor) [FD]
Line_15 $$ if (output_maximum_size > 0) --> Line_19 $$ if (factor > 1.0) [CD]
Line_18 $$ double factor = Math.max(width_factor, height_factor) --> Line_19 $$ if (factor > 1.0) [FD]
Line_19 $$ if (factor > 1.0) --> Line_20 $$ image_dim.setSize(image_dim.getWidth() / factor, image_dim.getHeight() / factor) [CD]
Line_13 $$ Dimension image_dim = null --> Line_20 $$ image_dim.setSize(image_dim.getWidth() / factor, image_dim.getHeight() / factor) [FD]
Line_14 $$ image_dim = new Dimension((int) rlayer.raster.getDeviceBounds().getWidth() + 1, (int) rlayer.raster.getDeviceBounds().getHeight() + 1) --> Line_20 $$ image_dim.setSize(image_dim.getWidth() / factor, image_dim.getHeight() / factor) [FD]
Line_6 $$ Map map = new Map(map_context, area_label, new Configuration()) --> Line_23 $$ map.setImageDimension(image_dim) [FD]
Line_13 $$ Dimension image_dim = null --> Line_23 $$ map.setImageDimension(image_dim) [FD]
Line_14 $$ image_dim = new Dimension((int) rlayer.raster.getDeviceBounds().getWidth() + 1, (int) rlayer.raster.getDeviceBounds().getHeight() + 1) --> Line_23 $$ map.setImageDimension(image_dim) [FD]
Line_6 $$ Map map = new Map(map_context, area_label, new Configuration()) --> Line_24 $$ map.scale() [FD]
Line_13 $$ Dimension image_dim = null --> Line_25 $$ image_dim = new Dimension((int) map.getBounds2DImage().getWidth(), (int) map.getBounds2DImage().getHeight()) [FD]
Line_14 $$ image_dim = new Dimension((int) rlayer.raster.getDeviceBounds().getWidth() + 1, (int) rlayer.raster.getDeviceBounds().getHeight() + 1) --> Line_25 $$ image_dim = new Dimension((int) map.getBounds2DImage().getWidth(), (int) map.getBounds2DImage().getHeight()) [FD]
Line_6 $$ Map map = new Map(map_context, area_label, new Configuration()) --> Line_25 $$ image_dim = new Dimension((int) map.getBounds2DImage().getWidth(), (int) map.getBounds2DImage().getHeight()) [FD]
Line_26 $$ Image image = null --> Line_28 $$ image = ImageCreator.getImage(image_dim) [FD]
Line_13 $$ Dimension image_dim = null --> Line_28 $$ image = ImageCreator.getImage(image_dim) [FD]
Line_14 $$ image_dim = new Dimension((int) rlayer.raster.getDeviceBounds().getWidth() + 1, (int) rlayer.raster.getDeviceBounds().getHeight() + 1) --> Line_28 $$ image = ImageCreator.getImage(image_dim) [FD]
Line_25 $$ image_dim = new Dimension((int) map.getBounds2DImage().getWidth(), (int) map.getBounds2DImage().getHeight()) --> Line_28 $$ image = ImageCreator.getImage(image_dim) [FD]
Line_27 $$ Graphics gr = null --> Line_29 $$ gr = image.getGraphics() [FD]
Line_26 $$ Image image = null --> Line_29 $$ gr = image.getGraphics() [FD]
Line_28 $$ image = ImageCreator.getImage(image_dim) --> Line_29 $$ gr = image.getGraphics() [FD]
Line_6 $$ Map map = new Map(map_context, area_label, new Configuration()) --> Line_31 $$ map.paint(gr) [FD]
Line_27 $$ Graphics gr = null --> Line_31 $$ map.paint(gr) [FD]
Line_29 $$ gr = image.getGraphics() --> Line_31 $$ map.paint(gr) [FD]
Line_35 $$ String tiff_filename = "" --> Line_37 $$ tiff_filename = formatPath(category, timeseries, output_filename) [FD]
Line_2 $$ private static void generateTIFF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_37 $$ tiff_filename = formatPath(category, timeseries, output_filename) [FD]
Line_26 $$ Image image = null --> Line_40 $$ BufferedImage bi = new BufferedImage(image.getWidth(null), image.getHeight(null), BufferedImage.TYPE_BYTE_INDEXED) [FD]
Line_28 $$ image = ImageCreator.getImage(image_dim) --> Line_40 $$ BufferedImage bi = new BufferedImage(image.getWidth(null), image.getHeight(null), BufferedImage.TYPE_BYTE_INDEXED) [FD]
Line_26 $$ Image image = null --> Line_41 $$ bi.createGraphics().drawImage(image, 0, 0, null) [FD]
Line_28 $$ image = ImageCreator.getImage(image_dim) --> Line_41 $$ bi.createGraphics().drawImage(image, 0, 0, null) [FD]
Line_40 $$ BufferedImage bi = new BufferedImage(image.getWidth(null), image.getHeight(null), BufferedImage.TYPE_BYTE_INDEXED) --> Line_41 $$ bi.createGraphics().drawImage(image, 0, 0, null) [FD]
Line_44 $$ TIFFEncodeParam param = new TIFFEncodeParam() --> Line_45 $$ param.setCompression(TIFFEncodeParam.COMPRESSION_PACKBITS) [FD]
Line_43 $$ FileOutputStream out = new FileOutputStream(f) --> Line_46 $$ TIFFImageEncoder encoder = (TIFFImageEncoder) TIFFCodec.createImageEncoder("tiff", out, param) [FD]
Line_44 $$ TIFFEncodeParam param = new TIFFEncodeParam() --> Line_46 $$ TIFFImageEncoder encoder = (TIFFImageEncoder) TIFFCodec.createImageEncoder("tiff", out, param) [FD]
Line_46 $$ TIFFImageEncoder encoder = (TIFFImageEncoder) TIFFCodec.createImageEncoder("tiff", out, param) --> Line_47 $$ encoder.encode(bi) [FD]
Line_40 $$ BufferedImage bi = new BufferedImage(image.getWidth(null), image.getHeight(null), BufferedImage.TYPE_BYTE_INDEXED) --> Line_47 $$ encoder.encode(bi) [FD]
Line_43 $$ FileOutputStream out = new FileOutputStream(f) --> Line_48 $$ out.close() [FD]
Line_2 $$ private static void generateTIFF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_55 $$ String query = "select Proj_ID, AccessType_Code from project " + "where Proj_Code= '" + area_code.trim() + "'" [FD]
Line_56 $$ Statement stmt = null --> Line_60 $$ stmt = con.createStatement() [FD]
Line_2 $$ private static void generateTIFF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_60 $$ stmt = con.createStatement() [FD]
Line_57 $$ ResultSet rs = null --> Line_61 $$ rs = stmt.executeQuery(query) [FD]
Line_56 $$ Statement stmt = null --> Line_61 $$ rs = stmt.executeQuery(query) [FD]
Line_60 $$ stmt = con.createStatement() --> Line_61 $$ rs = stmt.executeQuery(query) [FD]
Line_55 $$ String query = "select Proj_ID, AccessType_Code from project " + "where Proj_Code= '" + area_code.trim() + "'" --> Line_61 $$ rs = stmt.executeQuery(query) [FD]
Line_57 $$ ResultSet rs = null --> Line_62 $$ if (rs.next()) [FD]
Line_61 $$ rs = stmt.executeQuery(query) --> Line_62 $$ if (rs.next()) [FD]
Line_62 $$ if (rs.next()) --> Line_63 $$ proj_id = rs.getInt(1) [CD]
Line_58 $$ int proj_id = -1 --> Line_63 $$ proj_id = rs.getInt(1) [FD]
Line_57 $$ ResultSet rs = null --> Line_63 $$ proj_id = rs.getInt(1) [FD]
Line_61 $$ rs = stmt.executeQuery(query) --> Line_63 $$ proj_id = rs.getInt(1) [FD]
Line_62 $$ if (rs.next()) --> Line_64 $$ access_code = rs.getInt(2) [CD]
Line_59 $$ int access_code = -1 --> Line_64 $$ access_code = rs.getInt(2) [FD]
Line_57 $$ ResultSet rs = null --> Line_64 $$ access_code = rs.getInt(2) [FD]
Line_61 $$ rs = stmt.executeQuery(query) --> Line_64 $$ access_code = rs.getInt(2) [FD]
Line_57 $$ ResultSet rs = null --> Line_66 $$ rs.close() [FD]
Line_61 $$ rs = stmt.executeQuery(query) --> Line_66 $$ rs.close() [FD]
Line_56 $$ Statement stmt = null --> Line_67 $$ stmt.close() [FD]
Line_60 $$ stmt = con.createStatement() --> Line_67 $$ stmt.close() [FD]
Line_2 $$ private static void generateTIFF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_68 $$ String delete_raster = "delete from rasterlayer where " + "Raster_Name='" + tiff_name.trim() + "' and Group_Code='" + category.trim() + "' and Proj_ID =" + proj_id [FD]
Line_53 $$ PreparedStatement pstmt = null --> Line_70 $$ pstmt = con.prepareStatement(delete_raster) [FD]
Line_2 $$ private static void generateTIFF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_70 $$ pstmt = con.prepareStatement(delete_raster) [FD]
Line_68 $$ String delete_raster = "delete from rasterlayer where " + "Raster_Name='" + tiff_name.trim() + "' and Group_Code='" + category.trim() + "' and Proj_ID =" + proj_id --> Line_70 $$ pstmt = con.prepareStatement(delete_raster) [FD]
Line_53 $$ PreparedStatement pstmt = null --> Line_71 $$ boolean del = pstmt.execute() [FD]
Line_70 $$ pstmt = con.prepareStatement(delete_raster) --> Line_71 $$ boolean del = pstmt.execute() [FD]
Line_53 $$ PreparedStatement pstmt = null --> Line_72 $$ pstmt.close() [FD]
Line_70 $$ pstmt = con.prepareStatement(delete_raster) --> Line_72 $$ pstmt.close() [FD]
Line_53 $$ PreparedStatement pstmt = null --> Line_74 $$ pstmt = con.prepareStatement(insert_raster) [FD]
Line_70 $$ pstmt = con.prepareStatement(delete_raster) --> Line_74 $$ pstmt = con.prepareStatement(insert_raster) [FD]
Line_2 $$ private static void generateTIFF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_74 $$ pstmt = con.prepareStatement(insert_raster) [FD]
Line_73 $$ String insert_raster = "insert into rasterlayer(Raster_Name, " + "Group_Code, Proj_ID, Raster_TimeCode, Raster_Xmin, " + "Raster_Ymin, Raster_Area_Xmin, Raster_Area_Ymin, " + "Raster_Visibility, Raster_Order, Raster_Path, " + "AccessType_Code, Raster_TimePeriod) values(?,?,?,?, " + "?,?,?,?,?,?,?,?,?)" --> Line_74 $$ pstmt = con.prepareStatement(insert_raster) [FD]
Line_53 $$ PreparedStatement pstmt = null --> Line_75 $$ pstmt.setString(1, tiff_name) [FD]
Line_70 $$ pstmt = con.prepareStatement(delete_raster) --> Line_75 $$ pstmt.setString(1, tiff_name) [FD]
Line_74 $$ pstmt = con.prepareStatement(insert_raster) --> Line_75 $$ pstmt.setString(1, tiff_name) [FD]
Line_53 $$ PreparedStatement pstmt = null --> Line_76 $$ pstmt.setString(2, category) [FD]
Line_70 $$ pstmt = con.prepareStatement(delete_raster) --> Line_76 $$ pstmt.setString(2, category) [FD]
Line_74 $$ pstmt = con.prepareStatement(insert_raster) --> Line_76 $$ pstmt.setString(2, category) [FD]
Line_2 $$ private static void generateTIFF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_76 $$ pstmt.setString(2, category) [FD]
Line_53 $$ PreparedStatement pstmt = null --> Line_77 $$ pstmt.setInt(3, proj_id) [FD]
Line_70 $$ pstmt = con.prepareStatement(delete_raster) --> Line_77 $$ pstmt.setInt(3, proj_id) [FD]
Line_74 $$ pstmt = con.prepareStatement(insert_raster) --> Line_77 $$ pstmt.setInt(3, proj_id) [FD]
Line_58 $$ int proj_id = -1 --> Line_77 $$ pstmt.setInt(3, proj_id) [FD]
Line_63 $$ proj_id = rs.getInt(1) --> Line_77 $$ pstmt.setInt(3, proj_id) [FD]
Line_53 $$ PreparedStatement pstmt = null --> Line_78 $$ pstmt.setString(4, timeseries) [FD]
Line_70 $$ pstmt = con.prepareStatement(delete_raster) --> Line_78 $$ pstmt.setString(4, timeseries) [FD]
Line_74 $$ pstmt = con.prepareStatement(insert_raster) --> Line_78 $$ pstmt.setString(4, timeseries) [FD]
Line_2 $$ private static void generateTIFF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_78 $$ pstmt.setString(4, timeseries) [FD]
Line_53 $$ PreparedStatement pstmt = null --> Line_79 $$ pstmt.setDouble(5, raster_bounds.getX()) [FD]
Line_70 $$ pstmt = con.prepareStatement(delete_raster) --> Line_79 $$ pstmt.setDouble(5, raster_bounds.getX()) [FD]
Line_74 $$ pstmt = con.prepareStatement(insert_raster) --> Line_79 $$ pstmt.setDouble(5, raster_bounds.getX()) [FD]
Line_2 $$ private static void generateTIFF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_79 $$ pstmt.setDouble(5, raster_bounds.getX()) [FD]
Line_53 $$ PreparedStatement pstmt = null --> Line_80 $$ pstmt.setDouble(6, raster_bounds.getY()) [FD]
Line_70 $$ pstmt = con.prepareStatement(delete_raster) --> Line_80 $$ pstmt.setDouble(6, raster_bounds.getY()) [FD]
Line_74 $$ pstmt = con.prepareStatement(insert_raster) --> Line_80 $$ pstmt.setDouble(6, raster_bounds.getY()) [FD]
Line_2 $$ private static void generateTIFF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_80 $$ pstmt.setDouble(6, raster_bounds.getY()) [FD]
Line_53 $$ PreparedStatement pstmt = null --> Line_81 $$ pstmt.setDouble(7, raster_bounds.getWidth()) [FD]
Line_70 $$ pstmt = con.prepareStatement(delete_raster) --> Line_81 $$ pstmt.setDouble(7, raster_bounds.getWidth()) [FD]
Line_74 $$ pstmt = con.prepareStatement(insert_raster) --> Line_81 $$ pstmt.setDouble(7, raster_bounds.getWidth()) [FD]
Line_2 $$ private static void generateTIFF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_81 $$ pstmt.setDouble(7, raster_bounds.getWidth()) [FD]
Line_53 $$ PreparedStatement pstmt = null --> Line_82 $$ pstmt.setDouble(8, raster_bounds.getHeight()) [FD]
Line_70 $$ pstmt = con.prepareStatement(delete_raster) --> Line_82 $$ pstmt.setDouble(8, raster_bounds.getHeight()) [FD]
Line_74 $$ pstmt = con.prepareStatement(insert_raster) --> Line_82 $$ pstmt.setDouble(8, raster_bounds.getHeight()) [FD]
Line_2 $$ private static void generateTIFF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_82 $$ pstmt.setDouble(8, raster_bounds.getHeight()) [FD]
Line_53 $$ PreparedStatement pstmt = null --> Line_83 $$ pstmt.setString(9, "false") [FD]
Line_70 $$ pstmt = con.prepareStatement(delete_raster) --> Line_83 $$ pstmt.setString(9, "false") [FD]
Line_74 $$ pstmt = con.prepareStatement(insert_raster) --> Line_83 $$ pstmt.setString(9, "false") [FD]
Line_85 $$ if (tiff_name.endsWith("DP")) --> Line_86 $$ sequence = 1 [CD]
Line_84 $$ int sequence = 0 --> Line_86 $$ sequence = 1 [FD]
Line_85 $$ if (tiff_name.endsWith("DP")) --> Line_87 $$ if (tiff_name.endsWith("DY")) [CD]
Line_87 $$ if (tiff_name.endsWith("DY")) --> Line_88 $$ sequence = 2 [CD]
Line_84 $$ int sequence = 0 --> Line_88 $$ sequence = 2 [FD]
Line_86 $$ sequence = 1 --> Line_88 $$ sequence = 2 [FD]
Line_87 $$ if (tiff_name.endsWith("DY")) --> Line_89 $$ if (tiff_name.endsWith("DA")) [CD]
Line_89 $$ if (tiff_name.endsWith("DA")) --> Line_90 $$ sequence = 3 [CD]
Line_84 $$ int sequence = 0 --> Line_90 $$ sequence = 3 [FD]
Line_86 $$ sequence = 1 --> Line_90 $$ sequence = 3 [FD]
Line_88 $$ sequence = 2 --> Line_90 $$ sequence = 3 [FD]
Line_53 $$ PreparedStatement pstmt = null --> Line_92 $$ pstmt.setInt(10, sequence) [FD]
Line_70 $$ pstmt = con.prepareStatement(delete_raster) --> Line_92 $$ pstmt.setInt(10, sequence) [FD]
Line_74 $$ pstmt = con.prepareStatement(insert_raster) --> Line_92 $$ pstmt.setInt(10, sequence) [FD]
Line_84 $$ int sequence = 0 --> Line_92 $$ pstmt.setInt(10, sequence) [FD]
Line_86 $$ sequence = 1 --> Line_92 $$ pstmt.setInt(10, sequence) [FD]
Line_88 $$ sequence = 2 --> Line_92 $$ pstmt.setInt(10, sequence) [FD]
Line_90 $$ sequence = 3 --> Line_92 $$ pstmt.setInt(10, sequence) [FD]
Line_53 $$ PreparedStatement pstmt = null --> Line_93 $$ pstmt.setString(11, tiff_filename) [FD]
Line_70 $$ pstmt = con.prepareStatement(delete_raster) --> Line_93 $$ pstmt.setString(11, tiff_filename) [FD]
Line_74 $$ pstmt = con.prepareStatement(insert_raster) --> Line_93 $$ pstmt.setString(11, tiff_filename) [FD]
Line_35 $$ String tiff_filename = "" --> Line_93 $$ pstmt.setString(11, tiff_filename) [FD]
Line_37 $$ tiff_filename = formatPath(category, timeseries, output_filename) --> Line_93 $$ pstmt.setString(11, tiff_filename) [FD]
Line_53 $$ PreparedStatement pstmt = null --> Line_94 $$ pstmt.setInt(12, access_code) [FD]
Line_70 $$ pstmt = con.prepareStatement(delete_raster) --> Line_94 $$ pstmt.setInt(12, access_code) [FD]
Line_74 $$ pstmt = con.prepareStatement(insert_raster) --> Line_94 $$ pstmt.setInt(12, access_code) [FD]
Line_59 $$ int access_code = -1 --> Line_94 $$ pstmt.setInt(12, access_code) [FD]
Line_64 $$ access_code = rs.getInt(2) --> Line_94 $$ pstmt.setInt(12, access_code) [FD]
Line_2 $$ private static void generateTIFF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_95 $$ if (time == null) [FD]
Line_95 $$ if (time == null) --> Line_96 $$ pstmt.setNull(13, java.sql.Types.DATE) [CD]
Line_53 $$ PreparedStatement pstmt = null --> Line_96 $$ pstmt.setNull(13, java.sql.Types.DATE) [FD]
Line_70 $$ pstmt = con.prepareStatement(delete_raster) --> Line_96 $$ pstmt.setNull(13, java.sql.Types.DATE) [FD]
Line_74 $$ pstmt = con.prepareStatement(insert_raster) --> Line_96 $$ pstmt.setNull(13, java.sql.Types.DATE) [FD]
Line_95 $$ if (time == null) --> Line_98 $$ pstmt.setDate(13, new java.sql.Date(time.getTimeInMillis())) [CD]
Line_53 $$ PreparedStatement pstmt = null --> Line_98 $$ pstmt.setDate(13, new java.sql.Date(time.getTimeInMillis())) [FD]
Line_70 $$ pstmt = con.prepareStatement(delete_raster) --> Line_98 $$ pstmt.setDate(13, new java.sql.Date(time.getTimeInMillis())) [FD]
Line_74 $$ pstmt = con.prepareStatement(insert_raster) --> Line_98 $$ pstmt.setDate(13, new java.sql.Date(time.getTimeInMillis())) [FD]
Line_2 $$ private static void generateTIFF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_98 $$ pstmt.setDate(13, new java.sql.Date(time.getTimeInMillis())) [FD]
Line_53 $$ PreparedStatement pstmt = null --> Line_100 $$ pstmt.executeUpdate() [FD]
Line_70 $$ pstmt = con.prepareStatement(delete_raster) --> Line_100 $$ pstmt.executeUpdate() [FD]
Line_74 $$ pstmt = con.prepareStatement(insert_raster) --> Line_100 $$ pstmt.executeUpdate() [FD]
Line_2 $$ private static void generateTIFF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_103 $$ con.rollback() [FD]
Line_53 $$ PreparedStatement pstmt = null --> Line_106 $$ pstmt.close() [FD]
Line_70 $$ pstmt = con.prepareStatement(delete_raster) --> Line_106 $$ pstmt.close() [FD]
Line_74 $$ pstmt = con.prepareStatement(insert_raster) --> Line_106 $$ pstmt.close() [FD]
Line_2 $$ private static void generateTIFF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException --> Line_111 $$ Debug.println("ImageCropper.generateTIFF end") [CD]
