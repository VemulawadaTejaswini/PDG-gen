Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_3 $$ final boolean stripHtmlEnabled = true [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_4 $$ final boolean injectSecretTokensEnabled = true [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_5 $$ final boolean encryptQueryStringsEnabled = true [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_6 $$ final boolean protectParamsAndFormsEnabled = true [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_7 $$ final boolean applyExtraProtectionForDisabledFormFields = true [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_8 $$ final boolean applyExtraProtectionForReadonlyFormFields = false [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_9 $$ final boolean applyExtraProtectionForRequestParamValueCount = false [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_10 $$ final ContentInjectionHelper helper = new ContentInjectionHelper() [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_11 $$ final RuleFileLoader ruleFileLoaderModificationExcludes = new ClasspathZipRuleFileLoader() [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_12 $$ ruleFileLoaderModificationExcludes.setPath(WebCastellumFilter.MODIFICATION_EXCLUDES_DEFAULT) [CD]
Line_11 $$ final RuleFileLoader ruleFileLoaderModificationExcludes = new ClasspathZipRuleFileLoader() --> Line_12 $$ ruleFileLoaderModificationExcludes.setPath(WebCastellumFilter.MODIFICATION_EXCLUDES_DEFAULT) [FD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_13 $$ final ContentModificationExcludeDefinitionContainer containerModExcludes = new ContentModificationExcludeDefinitionContainer(ruleFileLoaderModificationExcludes) [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_14 $$ containerModExcludes.parseDefinitions() [CD]
Line_13 $$ final ContentModificationExcludeDefinitionContainer containerModExcludes = new ContentModificationExcludeDefinitionContainer(ruleFileLoaderModificationExcludes) --> Line_14 $$ containerModExcludes.parseDefinitions() [FD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_15 $$ helper.setContentModificationExcludeDefinitions(containerModExcludes) [CD]
Line_10 $$ final ContentInjectionHelper helper = new ContentInjectionHelper() --> Line_15 $$ helper.setContentModificationExcludeDefinitions(containerModExcludes) [FD]
Line_13 $$ final ContentModificationExcludeDefinitionContainer containerModExcludes = new ContentModificationExcludeDefinitionContainer(ruleFileLoaderModificationExcludes) --> Line_15 $$ helper.setContentModificationExcludeDefinitions(containerModExcludes) [FD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_16 $$ final AttackHandler attackHandler = new AttackHandler(null, 123, 600000, 100000, 300000, 300000, null, "MOCK", false, false, 0, false, false, Pattern.compile("sjghggfakgfjagfgajgfjasgfs"), Pattern.compile("sjghggfakgfjagfgajgfjasgfs"), true) [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_17 $$ final SessionCreationTracker sessionCreationTracker = new SessionCreationTracker(attackHandler, 0, 600000, 300000, 0, "", "", "", "") [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_18 $$ final RequestWrapper request = new RequestWrapper(new RequestMock(), helper, sessionCreationTracker, "123.456.789.000", false, true, true) [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_19 $$ final RuleFileLoader ruleFileLoaderResponseModifications = new ClasspathZipRuleFileLoader() [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_20 $$ ruleFileLoaderResponseModifications.setPath(WebCastellumFilter.RESPONSE_MODIFICATIONS_DEFAULT) [CD]
Line_19 $$ final RuleFileLoader ruleFileLoaderResponseModifications = new ClasspathZipRuleFileLoader() --> Line_20 $$ ruleFileLoaderResponseModifications.setPath(WebCastellumFilter.RESPONSE_MODIFICATIONS_DEFAULT) [FD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_21 $$ final ResponseModificationDefinitionContainer container = new ResponseModificationDefinitionContainer(ruleFileLoaderResponseModifications) [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_22 $$ container.parseDefinitions() [CD]
Line_21 $$ final ResponseModificationDefinitionContainer container = new ResponseModificationDefinitionContainer(ruleFileLoaderResponseModifications) --> Line_22 $$ container.parseDefinitions() [FD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_23 $$ final ResponseModificationDefinition[] responseModificationDefinitions = downCast(container.getAllEnabledRequestDefinitions()) [CD]
Line_21 $$ final ResponseModificationDefinitionContainer container = new ResponseModificationDefinitionContainer(ruleFileLoaderResponseModifications) --> Line_23 $$ final ResponseModificationDefinition[] responseModificationDefinitions = downCast(container.getAllEnabledRequestDefinitions()) [FD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_24 $$ final List tmpPatternsToExcludeCompleteTag = new ArrayList(responseModificationDefinitions.length) [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_25 $$ final List tmpPatternsToExcludeCompleteScript = new ArrayList(responseModificationDefinitions.length) [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_26 $$ final List tmpPatternsToExcludeLinksWithinScripts = new ArrayList(responseModificationDefinitions.length) [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_27 $$ final List tmpPatternsToExcludeLinksWithinTags = new ArrayList(responseModificationDefinitions.length) [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_28 $$ final List tmpPatternsToCaptureLinksWithinScripts = new ArrayList(responseModificationDefinitions.length) [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_29 $$ final List tmpPatternsToCaptureLinksWithinTags = new ArrayList(responseModificationDefinitions.length) [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_30 $$ final List tmpPrefiltersToExcludeCompleteTag = new ArrayList(responseModificationDefinitions.length) [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_31 $$ final List tmpPrefiltersToExcludeCompleteScript = new ArrayList(responseModificationDefinitions.length) [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_32 $$ final List tmpPrefiltersToExcludeLinksWithinScripts = new ArrayList(responseModificationDefinitions.length) [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_33 $$ final List tmpPrefiltersToExcludeLinksWithinTags = new ArrayList(responseModificationDefinitions.length) [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_34 $$ final List tmpPrefiltersToCaptureLinksWithinScripts = new ArrayList(responseModificationDefinitions.length) [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_35 $$ final List tmpPrefiltersToCaptureLinksWithinTags = new ArrayList(responseModificationDefinitions.length) [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_36 $$ final List tmpGroupNumbersToCaptureLinksWithinScripts = new ArrayList(responseModificationDefinitions.length) [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_37 $$ final List tmpGroupNumbersToCaptureLinksWithinTags = new ArrayList(responseModificationDefinitions.length) [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_38 $$ for (int i = 0; i < responseModificationDefinitions.length; i++) [CD]
Line_38 $$ for (int i = 0; i < responseModificationDefinitions.length; i++) --> Line_39 $$ final ResponseModificationDefinition responseModificationDefinition = responseModificationDefinitions[i] [CD]
Line_38 $$ for (int i = 0; i < responseModificationDefinitions.length; i++) --> Line_40 $$ if (responseModificationDefinition.isMatchesScripts()) [CD]
Line_39 $$ final ResponseModificationDefinition responseModificationDefinition = responseModificationDefinitions[i] --> Line_40 $$ if (responseModificationDefinition.isMatchesScripts()) [FD]
Line_40 $$ if (responseModificationDefinition.isMatchesScripts()) --> Line_41 $$ tmpPatternsToExcludeCompleteScript.add(responseModificationDefinition.getScriptExclusionPattern()) [CD]
Line_25 $$ final List tmpPatternsToExcludeCompleteScript = new ArrayList(responseModificationDefinitions.length) --> Line_41 $$ tmpPatternsToExcludeCompleteScript.add(responseModificationDefinition.getScriptExclusionPattern()) [FD]
Line_39 $$ final ResponseModificationDefinition responseModificationDefinition = responseModificationDefinitions[i] --> Line_41 $$ tmpPatternsToExcludeCompleteScript.add(responseModificationDefinition.getScriptExclusionPattern()) [FD]
Line_40 $$ if (responseModificationDefinition.isMatchesScripts()) --> Line_42 $$ tmpPrefiltersToExcludeCompleteScript.add(responseModificationDefinition.getScriptExclusionPrefilter()) [CD]
Line_31 $$ final List tmpPrefiltersToExcludeCompleteScript = new ArrayList(responseModificationDefinitions.length) --> Line_42 $$ tmpPrefiltersToExcludeCompleteScript.add(responseModificationDefinition.getScriptExclusionPrefilter()) [FD]
Line_39 $$ final ResponseModificationDefinition responseModificationDefinition = responseModificationDefinitions[i] --> Line_42 $$ tmpPrefiltersToExcludeCompleteScript.add(responseModificationDefinition.getScriptExclusionPrefilter()) [FD]
Line_40 $$ if (responseModificationDefinition.isMatchesScripts()) --> Line_43 $$ tmpPatternsToExcludeLinksWithinScripts.add(responseModificationDefinition.getUrlExclusionPattern()) [CD]
Line_26 $$ final List tmpPatternsToExcludeLinksWithinScripts = new ArrayList(responseModificationDefinitions.length) --> Line_43 $$ tmpPatternsToExcludeLinksWithinScripts.add(responseModificationDefinition.getUrlExclusionPattern()) [FD]
Line_39 $$ final ResponseModificationDefinition responseModificationDefinition = responseModificationDefinitions[i] --> Line_43 $$ tmpPatternsToExcludeLinksWithinScripts.add(responseModificationDefinition.getUrlExclusionPattern()) [FD]
Line_40 $$ if (responseModificationDefinition.isMatchesScripts()) --> Line_44 $$ tmpPrefiltersToExcludeLinksWithinScripts.add(responseModificationDefinition.getUrlExclusionPrefilter()) [CD]
Line_32 $$ final List tmpPrefiltersToExcludeLinksWithinScripts = new ArrayList(responseModificationDefinitions.length) --> Line_44 $$ tmpPrefiltersToExcludeLinksWithinScripts.add(responseModificationDefinition.getUrlExclusionPrefilter()) [FD]
Line_39 $$ final ResponseModificationDefinition responseModificationDefinition = responseModificationDefinitions[i] --> Line_44 $$ tmpPrefiltersToExcludeLinksWithinScripts.add(responseModificationDefinition.getUrlExclusionPrefilter()) [FD]
Line_40 $$ if (responseModificationDefinition.isMatchesScripts()) --> Line_45 $$ tmpPatternsToCaptureLinksWithinScripts.add(responseModificationDefinition.getUrlCapturingPattern()) [CD]
Line_28 $$ final List tmpPatternsToCaptureLinksWithinScripts = new ArrayList(responseModificationDefinitions.length) --> Line_45 $$ tmpPatternsToCaptureLinksWithinScripts.add(responseModificationDefinition.getUrlCapturingPattern()) [FD]
Line_39 $$ final ResponseModificationDefinition responseModificationDefinition = responseModificationDefinitions[i] --> Line_45 $$ tmpPatternsToCaptureLinksWithinScripts.add(responseModificationDefinition.getUrlCapturingPattern()) [FD]
Line_40 $$ if (responseModificationDefinition.isMatchesScripts()) --> Line_46 $$ tmpPrefiltersToCaptureLinksWithinScripts.add(responseModificationDefinition.getUrlCapturingPrefilter()) [CD]
Line_34 $$ final List tmpPrefiltersToCaptureLinksWithinScripts = new ArrayList(responseModificationDefinitions.length) --> Line_46 $$ tmpPrefiltersToCaptureLinksWithinScripts.add(responseModificationDefinition.getUrlCapturingPrefilter()) [FD]
Line_39 $$ final ResponseModificationDefinition responseModificationDefinition = responseModificationDefinitions[i] --> Line_46 $$ tmpPrefiltersToCaptureLinksWithinScripts.add(responseModificationDefinition.getUrlCapturingPrefilter()) [FD]
Line_40 $$ if (responseModificationDefinition.isMatchesScripts()) --> Line_47 $$ tmpGroupNumbersToCaptureLinksWithinScripts.add(ServerUtils.convertSimpleToObjectArray(responseModificationDefinition.getCapturingGroupNumbers())) [CD]
Line_36 $$ final List tmpGroupNumbersToCaptureLinksWithinScripts = new ArrayList(responseModificationDefinitions.length) --> Line_47 $$ tmpGroupNumbersToCaptureLinksWithinScripts.add(ServerUtils.convertSimpleToObjectArray(responseModificationDefinition.getCapturingGroupNumbers())) [FD]
Line_39 $$ final ResponseModificationDefinition responseModificationDefinition = responseModificationDefinitions[i] --> Line_47 $$ tmpGroupNumbersToCaptureLinksWithinScripts.add(ServerUtils.convertSimpleToObjectArray(responseModificationDefinition.getCapturingGroupNumbers())) [FD]
Line_38 $$ for (int i = 0; i < responseModificationDefinitions.length; i++) --> Line_49 $$ if (responseModificationDefinition.isMatchesTags()) [CD]
Line_39 $$ final ResponseModificationDefinition responseModificationDefinition = responseModificationDefinitions[i] --> Line_49 $$ if (responseModificationDefinition.isMatchesTags()) [FD]
Line_49 $$ if (responseModificationDefinition.isMatchesTags()) --> Line_50 $$ tmpPatternsToExcludeCompleteTag.add(responseModificationDefinition.getTagExclusionPattern()) [CD]
Line_24 $$ final List tmpPatternsToExcludeCompleteTag = new ArrayList(responseModificationDefinitions.length) --> Line_50 $$ tmpPatternsToExcludeCompleteTag.add(responseModificationDefinition.getTagExclusionPattern()) [FD]
Line_39 $$ final ResponseModificationDefinition responseModificationDefinition = responseModificationDefinitions[i] --> Line_50 $$ tmpPatternsToExcludeCompleteTag.add(responseModificationDefinition.getTagExclusionPattern()) [FD]
Line_49 $$ if (responseModificationDefinition.isMatchesTags()) --> Line_51 $$ tmpPrefiltersToExcludeCompleteTag.add(responseModificationDefinition.getTagExclusionPrefilter()) [CD]
Line_30 $$ final List tmpPrefiltersToExcludeCompleteTag = new ArrayList(responseModificationDefinitions.length) --> Line_51 $$ tmpPrefiltersToExcludeCompleteTag.add(responseModificationDefinition.getTagExclusionPrefilter()) [FD]
Line_39 $$ final ResponseModificationDefinition responseModificationDefinition = responseModificationDefinitions[i] --> Line_51 $$ tmpPrefiltersToExcludeCompleteTag.add(responseModificationDefinition.getTagExclusionPrefilter()) [FD]
Line_49 $$ if (responseModificationDefinition.isMatchesTags()) --> Line_52 $$ tmpPatternsToExcludeLinksWithinTags.add(responseModificationDefinition.getUrlExclusionPattern()) [CD]
Line_27 $$ final List tmpPatternsToExcludeLinksWithinTags = new ArrayList(responseModificationDefinitions.length) --> Line_52 $$ tmpPatternsToExcludeLinksWithinTags.add(responseModificationDefinition.getUrlExclusionPattern()) [FD]
Line_39 $$ final ResponseModificationDefinition responseModificationDefinition = responseModificationDefinitions[i] --> Line_52 $$ tmpPatternsToExcludeLinksWithinTags.add(responseModificationDefinition.getUrlExclusionPattern()) [FD]
Line_49 $$ if (responseModificationDefinition.isMatchesTags()) --> Line_53 $$ tmpPrefiltersToExcludeLinksWithinTags.add(responseModificationDefinition.getUrlExclusionPrefilter()) [CD]
Line_33 $$ final List tmpPrefiltersToExcludeLinksWithinTags = new ArrayList(responseModificationDefinitions.length) --> Line_53 $$ tmpPrefiltersToExcludeLinksWithinTags.add(responseModificationDefinition.getUrlExclusionPrefilter()) [FD]
Line_39 $$ final ResponseModificationDefinition responseModificationDefinition = responseModificationDefinitions[i] --> Line_53 $$ tmpPrefiltersToExcludeLinksWithinTags.add(responseModificationDefinition.getUrlExclusionPrefilter()) [FD]
Line_49 $$ if (responseModificationDefinition.isMatchesTags()) --> Line_54 $$ tmpPatternsToCaptureLinksWithinTags.add(responseModificationDefinition.getUrlCapturingPattern()) [CD]
Line_29 $$ final List tmpPatternsToCaptureLinksWithinTags = new ArrayList(responseModificationDefinitions.length) --> Line_54 $$ tmpPatternsToCaptureLinksWithinTags.add(responseModificationDefinition.getUrlCapturingPattern()) [FD]
Line_39 $$ final ResponseModificationDefinition responseModificationDefinition = responseModificationDefinitions[i] --> Line_54 $$ tmpPatternsToCaptureLinksWithinTags.add(responseModificationDefinition.getUrlCapturingPattern()) [FD]
Line_49 $$ if (responseModificationDefinition.isMatchesTags()) --> Line_55 $$ tmpPrefiltersToCaptureLinksWithinTags.add(responseModificationDefinition.getUrlCapturingPrefilter()) [CD]
Line_35 $$ final List tmpPrefiltersToCaptureLinksWithinTags = new ArrayList(responseModificationDefinitions.length) --> Line_55 $$ tmpPrefiltersToCaptureLinksWithinTags.add(responseModificationDefinition.getUrlCapturingPrefilter()) [FD]
Line_39 $$ final ResponseModificationDefinition responseModificationDefinition = responseModificationDefinitions[i] --> Line_55 $$ tmpPrefiltersToCaptureLinksWithinTags.add(responseModificationDefinition.getUrlCapturingPrefilter()) [FD]
Line_49 $$ if (responseModificationDefinition.isMatchesTags()) --> Line_56 $$ tmpGroupNumbersToCaptureLinksWithinTags.add(ServerUtils.convertSimpleToObjectArray(responseModificationDefinition.getCapturingGroupNumbers())) [CD]
Line_37 $$ final List tmpGroupNumbersToCaptureLinksWithinTags = new ArrayList(responseModificationDefinitions.length) --> Line_56 $$ tmpGroupNumbersToCaptureLinksWithinTags.add(ServerUtils.convertSimpleToObjectArray(responseModificationDefinition.getCapturingGroupNumbers())) [FD]
Line_39 $$ final ResponseModificationDefinition responseModificationDefinition = responseModificationDefinitions[i] --> Line_56 $$ tmpGroupNumbersToCaptureLinksWithinTags.add(ServerUtils.convertSimpleToObjectArray(responseModificationDefinition.getCapturingGroupNumbers())) [FD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_59 $$ final Matcher[] matchersToExcludeCompleteTag = ServerUtils.convertListOfPatternToArrayOfMatcher(tmpPatternsToExcludeCompleteTag) [CD]
Line_24 $$ final List tmpPatternsToExcludeCompleteTag = new ArrayList(responseModificationDefinitions.length) --> Line_59 $$ final Matcher[] matchersToExcludeCompleteTag = ServerUtils.convertListOfPatternToArrayOfMatcher(tmpPatternsToExcludeCompleteTag) [FD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_60 $$ final Matcher[] matchersToExcludeCompleteScript = ServerUtils.convertListOfPatternToArrayOfMatcher(tmpPatternsToExcludeCompleteScript) [CD]
Line_25 $$ final List tmpPatternsToExcludeCompleteScript = new ArrayList(responseModificationDefinitions.length) --> Line_60 $$ final Matcher[] matchersToExcludeCompleteScript = ServerUtils.convertListOfPatternToArrayOfMatcher(tmpPatternsToExcludeCompleteScript) [FD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_61 $$ final Matcher[] matchersToExcludeLinksWithinScripts = ServerUtils.convertListOfPatternToArrayOfMatcher(tmpPatternsToExcludeLinksWithinScripts) [CD]
Line_26 $$ final List tmpPatternsToExcludeLinksWithinScripts = new ArrayList(responseModificationDefinitions.length) --> Line_61 $$ final Matcher[] matchersToExcludeLinksWithinScripts = ServerUtils.convertListOfPatternToArrayOfMatcher(tmpPatternsToExcludeLinksWithinScripts) [FD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_62 $$ final Matcher[] matchersToExcludeLinksWithinTags = ServerUtils.convertListOfPatternToArrayOfMatcher(tmpPatternsToExcludeLinksWithinTags) [CD]
Line_27 $$ final List tmpPatternsToExcludeLinksWithinTags = new ArrayList(responseModificationDefinitions.length) --> Line_62 $$ final Matcher[] matchersToExcludeLinksWithinTags = ServerUtils.convertListOfPatternToArrayOfMatcher(tmpPatternsToExcludeLinksWithinTags) [FD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_63 $$ final Matcher[] matchersToCaptureLinksWithinScripts = ServerUtils.convertListOfPatternToArrayOfMatcher(tmpPatternsToCaptureLinksWithinScripts) [CD]
Line_28 $$ final List tmpPatternsToCaptureLinksWithinScripts = new ArrayList(responseModificationDefinitions.length) --> Line_63 $$ final Matcher[] matchersToCaptureLinksWithinScripts = ServerUtils.convertListOfPatternToArrayOfMatcher(tmpPatternsToCaptureLinksWithinScripts) [FD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_64 $$ final Matcher[] matchersToCaptureLinksWithinTags = ServerUtils.convertListOfPatternToArrayOfMatcher(tmpPatternsToCaptureLinksWithinTags) [CD]
Line_29 $$ final List tmpPatternsToCaptureLinksWithinTags = new ArrayList(responseModificationDefinitions.length) --> Line_64 $$ final Matcher[] matchersToCaptureLinksWithinTags = ServerUtils.convertListOfPatternToArrayOfMatcher(tmpPatternsToCaptureLinksWithinTags) [FD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_65 $$ final WordDictionary[] prefiltersToExcludeCompleteTag = (WordDictionary[]) tmpPrefiltersToExcludeCompleteTag.toArray(new WordDictionary[0]) [CD]
Line_30 $$ final List tmpPrefiltersToExcludeCompleteTag = new ArrayList(responseModificationDefinitions.length) --> Line_65 $$ final WordDictionary[] prefiltersToExcludeCompleteTag = (WordDictionary[]) tmpPrefiltersToExcludeCompleteTag.toArray(new WordDictionary[0]) [FD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_66 $$ final WordDictionary[] prefiltersToExcludeCompleteScript = (WordDictionary[]) tmpPrefiltersToExcludeCompleteScript.toArray(new WordDictionary[0]) [CD]
Line_31 $$ final List tmpPrefiltersToExcludeCompleteScript = new ArrayList(responseModificationDefinitions.length) --> Line_66 $$ final WordDictionary[] prefiltersToExcludeCompleteScript = (WordDictionary[]) tmpPrefiltersToExcludeCompleteScript.toArray(new WordDictionary[0]) [FD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_67 $$ final WordDictionary[] prefiltersToExcludeLinksWithinScripts = (WordDictionary[]) tmpPrefiltersToExcludeLinksWithinScripts.toArray(new WordDictionary[0]) [CD]
Line_32 $$ final List tmpPrefiltersToExcludeLinksWithinScripts = new ArrayList(responseModificationDefinitions.length) --> Line_67 $$ final WordDictionary[] prefiltersToExcludeLinksWithinScripts = (WordDictionary[]) tmpPrefiltersToExcludeLinksWithinScripts.toArray(new WordDictionary[0]) [FD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_68 $$ final WordDictionary[] prefiltersToExcludeLinksWithinTags = (WordDictionary[]) tmpPrefiltersToExcludeLinksWithinTags.toArray(new WordDictionary[0]) [CD]
Line_33 $$ final List tmpPrefiltersToExcludeLinksWithinTags = new ArrayList(responseModificationDefinitions.length) --> Line_68 $$ final WordDictionary[] prefiltersToExcludeLinksWithinTags = (WordDictionary[]) tmpPrefiltersToExcludeLinksWithinTags.toArray(new WordDictionary[0]) [FD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_69 $$ final WordDictionary[] prefiltersToCaptureLinksWithinScripts = (WordDictionary[]) tmpPrefiltersToCaptureLinksWithinScripts.toArray(new WordDictionary[0]) [CD]
Line_34 $$ final List tmpPrefiltersToCaptureLinksWithinScripts = new ArrayList(responseModificationDefinitions.length) --> Line_69 $$ final WordDictionary[] prefiltersToCaptureLinksWithinScripts = (WordDictionary[]) tmpPrefiltersToCaptureLinksWithinScripts.toArray(new WordDictionary[0]) [FD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_70 $$ final WordDictionary[] prefiltersToCaptureLinksWithinTags = (WordDictionary[]) tmpPrefiltersToCaptureLinksWithinTags.toArray(new WordDictionary[0]) [CD]
Line_35 $$ final List tmpPrefiltersToCaptureLinksWithinTags = new ArrayList(responseModificationDefinitions.length) --> Line_70 $$ final WordDictionary[] prefiltersToCaptureLinksWithinTags = (WordDictionary[]) tmpPrefiltersToCaptureLinksWithinTags.toArray(new WordDictionary[0]) [FD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_71 $$ final int[][] groupNumbersToCaptureLinksWithinScripts = ServerUtils.convertArrayIntegerListTo2DimIntArray(tmpGroupNumbersToCaptureLinksWithinScripts) [CD]
Line_36 $$ final List tmpGroupNumbersToCaptureLinksWithinScripts = new ArrayList(responseModificationDefinitions.length) --> Line_71 $$ final int[][] groupNumbersToCaptureLinksWithinScripts = ServerUtils.convertArrayIntegerListTo2DimIntArray(tmpGroupNumbersToCaptureLinksWithinScripts) [FD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_72 $$ final int[][] groupNumbersToCaptureLinksWithinTags = ServerUtils.convertArrayIntegerListTo2DimIntArray(tmpGroupNumbersToCaptureLinksWithinTags) [CD]
Line_37 $$ final List tmpGroupNumbersToCaptureLinksWithinTags = new ArrayList(responseModificationDefinitions.length) --> Line_72 $$ final int[][] groupNumbersToCaptureLinksWithinTags = ServerUtils.convertArrayIntegerListTo2DimIntArray(tmpGroupNumbersToCaptureLinksWithinTags) [FD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_73 $$ final Cipher cipher = CryptoUtils.getCipher() [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_74 $$ final CryptoKeyAndSalt key = CryptoUtils.generateRandomCryptoKeyAndSalt(false) [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_75 $$ Cipher.getInstance("AES") [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_76 $$ MessageDigest.getInstance("SHA-1") [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_77 $$ final ResponseWrapper response = new ResponseWrapper(new ResponseMock(), request, attackHandler, helper, false, "___ENCRYPTED___", cipher, key, "___SEC-KEY___", "___SEC-VALUE___", "___PROT-KEY___", false, false, false, false, "123.456.789.000", new HashSet(), prefiltersToExcludeCompleteScript, matchersToExcludeCompleteScript, prefiltersToExcludeCompleteTag, matchersToExcludeCompleteTag, prefiltersToExcludeLinksWithinScripts, matchersToExcludeLinksWithinScripts, prefiltersToExcludeLinksWithinTags, matchersToExcludeLinksWithinTags, prefiltersToCaptureLinksWithinScripts, matchersToCaptureLinksWithinScripts, prefiltersToCaptureLinksWithinTags, matchersToCaptureLinksWithinTags, groupNumbersToCaptureLinksWithinScripts, groupNumbersToCaptureLinksWithinTags, true, false, true, true, true, true, true, true, true, true, true, false, false, true, "", "", (short) 3, true, false, false) [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_78 $$ final List durations = new ArrayList() [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_79 $$ for (int i = 0; i < executionCount; i++) [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_79 $$ for (int i = 0; i < executionCount; i++) [FD]
Line_38 $$ for (int i = 0; i < responseModificationDefinitions.length; i++) --> Line_79 $$ for (int i = 0; i < executionCount; i++) [FD]
Line_79 $$ for (int i = 0; i < executionCount; i++) --> Line_80 $$ final long start = System.currentTimeMillis() [CD]
Line_79 $$ for (int i = 0; i < executionCount; i++) --> Line_81 $$ Reader reader = null [CD]
Line_79 $$ for (int i = 0; i < executionCount; i++) --> Line_82 $$ Writer writer = null [CD]
Line_81 $$ Reader reader = null --> Line_84 $$ reader = new BufferedReader(new FileReader(this.htmlFile)) [FD]
Line_82 $$ Writer writer = null --> Line_85 $$ writer = new FileWriter(this.outputFile) [FD]
Line_86 $$ if (applyFilter) --> Line_87 $$ writer = new ResponseFilterWriter(writer, true, "http://127.0.0.1/test/sample", "/test", "/test", "___SEC-KEY___", "___SEC-VALUE___", "___PROT-KEY___", cipher, key, helper, "___ENCRYPTED___", request, response, stripHtmlEnabled, injectSecretTokensEnabled, protectParamsAndFormsEnabled, encryptQueryStringsEnabled, applyExtraProtectionForDisabledFormFields, applyExtraProtectionForReadonlyFormFields, applyExtraProtectionForRequestParamValueCount, prefiltersToExcludeCompleteScript, matchersToExcludeCompleteScript, prefiltersToExcludeCompleteTag, matchersToExcludeCompleteTag, prefiltersToExcludeLinksWithinScripts, matchersToExcludeLinksWithinScripts, prefiltersToExcludeLinksWithinTags, matchersToExcludeLinksWithinTags, prefiltersToCaptureLinksWithinScripts, matchersToCaptureLinksWithinScripts, prefiltersToCaptureLinksWithinTags, matchersToCaptureLinksWithinTags, groupNumbersToCaptureLinksWithinScripts, groupNumbersToCaptureLinksWithinTags, true, true, false, true, true, true, true, true, true, true, true, false, false, true, "", "", (short) 3, true, false) [CD]
Line_82 $$ Writer writer = null --> Line_87 $$ writer = new ResponseFilterWriter(writer, true, "http://127.0.0.1/test/sample", "/test", "/test", "___SEC-KEY___", "___SEC-VALUE___", "___PROT-KEY___", cipher, key, helper, "___ENCRYPTED___", request, response, stripHtmlEnabled, injectSecretTokensEnabled, protectParamsAndFormsEnabled, encryptQueryStringsEnabled, applyExtraProtectionForDisabledFormFields, applyExtraProtectionForReadonlyFormFields, applyExtraProtectionForRequestParamValueCount, prefiltersToExcludeCompleteScript, matchersToExcludeCompleteScript, prefiltersToExcludeCompleteTag, matchersToExcludeCompleteTag, prefiltersToExcludeLinksWithinScripts, matchersToExcludeLinksWithinScripts, prefiltersToExcludeLinksWithinTags, matchersToExcludeLinksWithinTags, prefiltersToCaptureLinksWithinScripts, matchersToCaptureLinksWithinScripts, prefiltersToCaptureLinksWithinTags, matchersToCaptureLinksWithinTags, groupNumbersToCaptureLinksWithinScripts, groupNumbersToCaptureLinksWithinTags, true, true, false, true, true, true, true, true, true, true, true, false, false, true, "", "", (short) 3, true, false) [FD]
Line_85 $$ writer = new FileWriter(this.outputFile) --> Line_87 $$ writer = new ResponseFilterWriter(writer, true, "http://127.0.0.1/test/sample", "/test", "/test", "___SEC-KEY___", "___SEC-VALUE___", "___PROT-KEY___", cipher, key, helper, "___ENCRYPTED___", request, response, stripHtmlEnabled, injectSecretTokensEnabled, protectParamsAndFormsEnabled, encryptQueryStringsEnabled, applyExtraProtectionForDisabledFormFields, applyExtraProtectionForReadonlyFormFields, applyExtraProtectionForRequestParamValueCount, prefiltersToExcludeCompleteScript, matchersToExcludeCompleteScript, prefiltersToExcludeCompleteTag, matchersToExcludeCompleteTag, prefiltersToExcludeLinksWithinScripts, matchersToExcludeLinksWithinScripts, prefiltersToExcludeLinksWithinTags, matchersToExcludeLinksWithinTags, prefiltersToCaptureLinksWithinScripts, matchersToCaptureLinksWithinScripts, prefiltersToCaptureLinksWithinTags, matchersToCaptureLinksWithinTags, groupNumbersToCaptureLinksWithinScripts, groupNumbersToCaptureLinksWithinTags, true, true, false, true, true, true, true, true, true, true, true, false, false, true, "", "", (short) 3, true, false) [FD]
Line_86 $$ if (applyFilter) --> Line_88 $$ writer = new BufferedWriter(writer) [CD]
Line_82 $$ Writer writer = null --> Line_88 $$ writer = new BufferedWriter(writer) [FD]
Line_85 $$ writer = new FileWriter(this.outputFile) --> Line_88 $$ writer = new BufferedWriter(writer) [FD]
Line_87 $$ writer = new ResponseFilterWriter(writer, true, "http://127.0.0.1/test/sample", "/test", "/test", "___SEC-KEY___", "___SEC-VALUE___", "___PROT-KEY___", cipher, key, helper, "___ENCRYPTED___", request, response, stripHtmlEnabled, injectSecretTokensEnabled, protectParamsAndFormsEnabled, encryptQueryStringsEnabled, applyExtraProtectionForDisabledFormFields, applyExtraProtectionForReadonlyFormFields, applyExtraProtectionForRequestParamValueCount, prefiltersToExcludeCompleteScript, matchersToExcludeCompleteScript, prefiltersToExcludeCompleteTag, matchersToExcludeCompleteTag, prefiltersToExcludeLinksWithinScripts, matchersToExcludeLinksWithinScripts, prefiltersToExcludeLinksWithinTags, matchersToExcludeLinksWithinTags, prefiltersToCaptureLinksWithinScripts, matchersToCaptureLinksWithinScripts, prefiltersToCaptureLinksWithinTags, matchersToCaptureLinksWithinTags, groupNumbersToCaptureLinksWithinScripts, groupNumbersToCaptureLinksWithinTags, true, true, false, true, true, true, true, true, true, true, true, false, false, true, "", "", (short) 3, true, false) --> Line_88 $$ writer = new BufferedWriter(writer) [FD]
Line_91 $$ int read --> Line_92 $$ while ((read = reader.read(chars)) != -1) [FD]
Line_81 $$ Reader reader = null --> Line_92 $$ while ((read = reader.read(chars)) != -1) [FD]
Line_84 $$ reader = new BufferedReader(new FileReader(this.htmlFile)) --> Line_92 $$ while ((read = reader.read(chars)) != -1) [FD]
Line_90 $$ char[] chars = new char[16 * 1024] --> Line_92 $$ while ((read = reader.read(chars)) != -1) [FD]
Line_92 $$ while ((read = reader.read(chars)) != -1) --> Line_93 $$ if (read > 0) [CD]
Line_92 $$ while ((read = reader.read(chars)) != -1) --> Line_93 $$ if (read > 0) [FD]
Line_91 $$ int read --> Line_93 $$ if (read > 0) [FD]
Line_93 $$ if (read > 0) --> Line_94 $$ writer.write(chars, 0, read) [CD]
Line_82 $$ Writer writer = null --> Line_94 $$ writer.write(chars, 0, read) [FD]
Line_85 $$ writer = new FileWriter(this.outputFile) --> Line_94 $$ writer.write(chars, 0, read) [FD]
Line_87 $$ writer = new ResponseFilterWriter(writer, true, "http://127.0.0.1/test/sample", "/test", "/test", "___SEC-KEY___", "___SEC-VALUE___", "___PROT-KEY___", cipher, key, helper, "___ENCRYPTED___", request, response, stripHtmlEnabled, injectSecretTokensEnabled, protectParamsAndFormsEnabled, encryptQueryStringsEnabled, applyExtraProtectionForDisabledFormFields, applyExtraProtectionForReadonlyFormFields, applyExtraProtectionForRequestParamValueCount, prefiltersToExcludeCompleteScript, matchersToExcludeCompleteScript, prefiltersToExcludeCompleteTag, matchersToExcludeCompleteTag, prefiltersToExcludeLinksWithinScripts, matchersToExcludeLinksWithinScripts, prefiltersToExcludeLinksWithinTags, matchersToExcludeLinksWithinTags, prefiltersToCaptureLinksWithinScripts, matchersToCaptureLinksWithinScripts, prefiltersToCaptureLinksWithinTags, matchersToCaptureLinksWithinTags, groupNumbersToCaptureLinksWithinScripts, groupNumbersToCaptureLinksWithinTags, true, true, false, true, true, true, true, true, true, true, true, false, false, true, "", "", (short) 3, true, false) --> Line_94 $$ writer.write(chars, 0, read) [FD]
Line_88 $$ writer = new BufferedWriter(writer) --> Line_94 $$ writer.write(chars, 0, read) [FD]
Line_90 $$ char[] chars = new char[16 * 1024] --> Line_94 $$ writer.write(chars, 0, read) [FD]
Line_92 $$ while ((read = reader.read(chars)) != -1) --> Line_94 $$ writer.write(chars, 0, read) [FD]
Line_91 $$ int read --> Line_94 $$ writer.write(chars, 0, read) [FD]
Line_78 $$ final List durations = new ArrayList() --> Line_97 $$ durations.add(new Long(System.currentTimeMillis() - start)) [FD]
Line_81 $$ Reader reader = null --> Line_99 $$ if (reader != null) [FD]
Line_84 $$ reader = new BufferedReader(new FileReader(this.htmlFile)) --> Line_99 $$ if (reader != null) [FD]
Line_81 $$ Reader reader = null --> Line_101 $$ reader.close() [FD]
Line_84 $$ reader = new BufferedReader(new FileReader(this.htmlFile)) --> Line_101 $$ reader.close() [FD]
Line_82 $$ Writer writer = null --> Line_105 $$ if (writer != null) [FD]
Line_85 $$ writer = new FileWriter(this.outputFile) --> Line_105 $$ if (writer != null) [FD]
Line_87 $$ writer = new ResponseFilterWriter(writer, true, "http://127.0.0.1/test/sample", "/test", "/test", "___SEC-KEY___", "___SEC-VALUE___", "___PROT-KEY___", cipher, key, helper, "___ENCRYPTED___", request, response, stripHtmlEnabled, injectSecretTokensEnabled, protectParamsAndFormsEnabled, encryptQueryStringsEnabled, applyExtraProtectionForDisabledFormFields, applyExtraProtectionForReadonlyFormFields, applyExtraProtectionForRequestParamValueCount, prefiltersToExcludeCompleteScript, matchersToExcludeCompleteScript, prefiltersToExcludeCompleteTag, matchersToExcludeCompleteTag, prefiltersToExcludeLinksWithinScripts, matchersToExcludeLinksWithinScripts, prefiltersToExcludeLinksWithinTags, matchersToExcludeLinksWithinTags, prefiltersToCaptureLinksWithinScripts, matchersToCaptureLinksWithinScripts, prefiltersToCaptureLinksWithinTags, matchersToCaptureLinksWithinTags, groupNumbersToCaptureLinksWithinScripts, groupNumbersToCaptureLinksWithinTags, true, true, false, true, true, true, true, true, true, true, true, false, false, true, "", "", (short) 3, true, false) --> Line_105 $$ if (writer != null) [FD]
Line_88 $$ writer = new BufferedWriter(writer) --> Line_105 $$ if (writer != null) [FD]
Line_82 $$ Writer writer = null --> Line_107 $$ writer.close() [FD]
Line_85 $$ writer = new FileWriter(this.outputFile) --> Line_107 $$ writer.close() [FD]
Line_87 $$ writer = new ResponseFilterWriter(writer, true, "http://127.0.0.1/test/sample", "/test", "/test", "___SEC-KEY___", "___SEC-VALUE___", "___PROT-KEY___", cipher, key, helper, "___ENCRYPTED___", request, response, stripHtmlEnabled, injectSecretTokensEnabled, protectParamsAndFormsEnabled, encryptQueryStringsEnabled, applyExtraProtectionForDisabledFormFields, applyExtraProtectionForReadonlyFormFields, applyExtraProtectionForRequestParamValueCount, prefiltersToExcludeCompleteScript, matchersToExcludeCompleteScript, prefiltersToExcludeCompleteTag, matchersToExcludeCompleteTag, prefiltersToExcludeLinksWithinScripts, matchersToExcludeLinksWithinScripts, prefiltersToExcludeLinksWithinTags, matchersToExcludeLinksWithinTags, prefiltersToCaptureLinksWithinScripts, matchersToCaptureLinksWithinScripts, prefiltersToCaptureLinksWithinTags, matchersToCaptureLinksWithinTags, groupNumbersToCaptureLinksWithinScripts, groupNumbersToCaptureLinksWithinTags, true, true, false, true, true, true, true, true, true, true, true, false, false, true, "", "", (short) 3, true, false) --> Line_107 $$ writer.close() [FD]
Line_88 $$ writer = new BufferedWriter(writer) --> Line_107 $$ writer.close() [FD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_113 $$ long sum = 0 [CD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_114 $$ for (final Iterator iter = durations.iterator(); iter.hasNext(); ) [CD]
Line_78 $$ final List durations = new ArrayList() --> Line_114 $$ for (final Iterator iter = durations.iterator(); iter.hasNext(); ) [FD]
Line_114 $$ for (final Iterator iter = durations.iterator(); iter.hasNext(); ) --> Line_115 $$ Long value = (Long) iter.next() [CD]
Line_114 $$ for (final Iterator iter = durations.iterator(); iter.hasNext(); ) --> Line_115 $$ Long value = (Long) iter.next() [FD]
Line_114 $$ for (final Iterator iter = durations.iterator(); iter.hasNext(); ) --> Line_116 $$ sum += value.longValue() [CD]
Line_113 $$ long sum = 0 --> Line_116 $$ sum += value.longValue() [FD]
Line_115 $$ Long value = (Long) iter.next() --> Line_116 $$ sum += value.longValue() [FD]
Line_2 $$ private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException --> Line_118 $$ return sum / durations.size() [CD]
Line_78 $$ final List durations = new ArrayList() --> Line_118 $$ return sum / durations.size() [FD]
