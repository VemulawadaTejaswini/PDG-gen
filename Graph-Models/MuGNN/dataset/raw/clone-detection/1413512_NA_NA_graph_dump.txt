Line_2 $$ public String uploadReport(Collection c) --> Line_5 $$ Iterator iter = c.iterator() [FD]
Line_6 $$ URL url = new URL(ZorobotSystem.props.getProperty("zoro.url") + "auplo2.jsp") --> Line_7 $$ URLConnection connection = url.openConnection() [FD]
Line_7 $$ URLConnection connection = url.openConnection() --> Line_8 $$ connection.setDoOutput(true) [FD]
Line_7 $$ URLConnection connection = url.openConnection() --> Line_9 $$ PrintWriter out = new PrintWriter(connection.getOutputStream()) [FD]
Line_9 $$ PrintWriter out = new PrintWriter(connection.getOutputStream()) --> Line_10 $$ out.print("id=" + id + "&") [FD]
Line_5 $$ Iterator iter = c.iterator() --> Line_13 $$ while (iter.hasNext()) [FD]
Line_13 $$ while (iter.hasNext()) --> Line_14 $$ if (gg++ >= 500) [CD]
Line_12 $$ int gg = 0 --> Line_14 $$ if (gg++ >= 500) [FD]
Line_13 $$ while (iter.hasNext()) --> Line_15 $$ Question tq = (Question) iter.next() [CD]
Line_5 $$ Iterator iter = c.iterator() --> Line_15 $$ Question tq = (Question) iter.next() [FD]
Line_13 $$ while (iter.hasNext()) --> Line_16 $$ sb.append("a=") [CD]
Line_11 $$ StringBuffer sb = new StringBuffer() --> Line_16 $$ sb.append("a=") [FD]
Line_13 $$ while (iter.hasNext()) --> Line_17 $$ sb.append(URLEncoder.encode(tq.question, "UTF-8")) [CD]
Line_11 $$ StringBuffer sb = new StringBuffer() --> Line_17 $$ sb.append(URLEncoder.encode(tq.question, "UTF-8")) [FD]
Line_13 $$ while (iter.hasNext()) --> Line_18 $$ sb.append("*") [CD]
Line_11 $$ StringBuffer sb = new StringBuffer() --> Line_18 $$ sb.append("*") [FD]
Line_13 $$ while (iter.hasNext()) --> Line_19 $$ StringBuffer ss = new StringBuffer() [CD]
Line_13 $$ while (iter.hasNext()) --> Line_20 $$ String[] ans [CD]
Line_13 $$ while (iter.hasNext()) --> Line_21 $$ if (tq.ansDisplay != null) [CD]
Line_21 $$ if (tq.ansDisplay != null) --> Line_22 $$ ans = tq.ansDisplay [CD]
Line_20 $$ String[] ans --> Line_22 $$ ans = tq.ansDisplay [FD]
Line_21 $$ if (tq.ansDisplay != null) --> Line_24 $$ ans = tq.answer [CD]
Line_20 $$ String[] ans --> Line_24 $$ ans = tq.answer [FD]
Line_22 $$ ans = tq.ansDisplay --> Line_24 $$ ans = tq.answer [FD]
Line_13 $$ while (iter.hasNext()) --> Line_26 $$ for (int j = 0; j < ans.length; j++) [CD]
Line_26 $$ for (int j = 0; j < ans.length; j++) --> Line_27 $$ ss.append("*") [CD]
Line_26 $$ for (int j = 0; j < ans.length; j++) --> Line_27 $$ ss.append("*") [FD]
Line_19 $$ StringBuffer ss = new StringBuffer() --> Line_27 $$ ss.append("*") [FD]
Line_26 $$ for (int j = 0; j < ans.length; j++) --> Line_28 $$ ss.append(ans[j]) [CD]
Line_19 $$ StringBuffer ss = new StringBuffer() --> Line_28 $$ ss.append(ans[j]) [FD]
Line_13 $$ while (iter.hasNext()) --> Line_30 $$ sb.append(URLEncoder.encode(ss.toString(), "UTF-8")) [CD]
Line_11 $$ StringBuffer sb = new StringBuffer() --> Line_30 $$ sb.append(URLEncoder.encode(ss.toString(), "UTF-8")) [FD]
Line_19 $$ StringBuffer ss = new StringBuffer() --> Line_30 $$ sb.append(URLEncoder.encode(ss.toString(), "UTF-8")) [FD]
Line_13 $$ while (iter.hasNext()) --> Line_31 $$ if (iter.hasNext() && gg < 500) [CD]
Line_5 $$ Iterator iter = c.iterator() --> Line_31 $$ if (iter.hasNext() && gg < 500) [FD]
Line_11 $$ StringBuffer sb = new StringBuffer() --> Line_31 $$ if (iter.hasNext() && gg < 500) [FD]
Line_9 $$ PrintWriter out = new PrintWriter(connection.getOutputStream()) --> Line_33 $$ out.println(sb.toString()) [FD]
Line_11 $$ StringBuffer sb = new StringBuffer() --> Line_33 $$ out.println(sb.toString()) [FD]
Line_9 $$ PrintWriter out = new PrintWriter(connection.getOutputStream()) --> Line_34 $$ out.close() [FD]
Line_7 $$ URLConnection connection = url.openConnection() --> Line_35 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream())) [FD]
Line_36 $$ String inputLine --> Line_37 $$ if ((inputLine = in.readLine()) != null) [FD]
Line_35 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream())) --> Line_37 $$ if ((inputLine = in.readLine()) != null) [FD]
Line_37 $$ if ((inputLine = in.readLine()) != null) --> Line_38 $$ if (!inputLine.equals("OK!") && inputLine.length() > 3) [CD]
Line_37 $$ if ((inputLine = in.readLine()) != null) --> Line_38 $$ if (!inputLine.equals("OK!") && inputLine.length() > 3) [FD]
Line_36 $$ String inputLine --> Line_38 $$ if (!inputLine.equals("OK!") && inputLine.length() > 3) [FD]
Line_38 $$ if (!inputLine.equals("OK!") && inputLine.length() > 3) --> Line_39 $$ System.out.println("Not OK: " + inputLine) [CD]
Line_38 $$ if (!inputLine.equals("OK!") && inputLine.length() > 3) --> Line_40 $$ return "xxxxxxxxxx" [CD]
Line_35 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream())) --> Line_43 $$ in.close() [FD]
Line_2 $$ public String uploadReport(Collection c) --> Line_48 $$ return null [CD]
