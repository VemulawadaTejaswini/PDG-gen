Line_2 $$ public void cpFile(File source, File target, boolean replace, int bufferSize) throws IOException --> Line_3 $$ if (!source.exists()) [CD]
Line_2 $$ public void cpFile(File source, File target, boolean replace, int bufferSize) throws IOException --> Line_3 $$ if (!source.exists()) [FD]
Line_2 $$ public void cpFile(File source, File target, boolean replace, int bufferSize) throws IOException --> Line_4 $$ if (!source.isFile()) [CD]
Line_2 $$ public void cpFile(File source, File target, boolean replace, int bufferSize) throws IOException --> Line_4 $$ if (!source.isFile()) [FD]
Line_2 $$ public void cpFile(File source, File target, boolean replace, int bufferSize) throws IOException --> Line_5 $$ InputStream src = new FileInputStream(source) [CD]
Line_2 $$ public void cpFile(File source, File target, boolean replace, int bufferSize) throws IOException --> Line_6 $$ File tarn = target [CD]
Line_2 $$ public void cpFile(File source, File target, boolean replace, int bufferSize) throws IOException --> Line_7 $$ if (target.isDirectory() || !(!(target.exists()) || replace)) [CD]
Line_2 $$ public void cpFile(File source, File target, boolean replace, int bufferSize) throws IOException --> Line_7 $$ if (target.isDirectory() || !(!(target.exists()) || replace)) [FD]
Line_7 $$ if (target.isDirectory() || !(!(target.exists()) || replace)) --> Line_8 $$ String tardir = target.isDirectory() ? target.getPath() : target.getParent() [CD]
Line_2 $$ public void cpFile(File source, File target, boolean replace, int bufferSize) throws IOException --> Line_8 $$ String tardir = target.isDirectory() ? target.getPath() : target.getParent() [FD]
Line_7 $$ if (target.isDirectory() || !(!(target.exists()) || replace)) --> Line_9 $$ tarn = new File(tardir + File.separator + source.getName()) [CD]
Line_6 $$ File tarn = target --> Line_9 $$ tarn = new File(tardir + File.separator + source.getName()) [FD]
Line_2 $$ public void cpFile(File source, File target, boolean replace, int bufferSize) throws IOException --> Line_9 $$ tarn = new File(tardir + File.separator + source.getName()) [FD]
Line_7 $$ if (target.isDirectory() || !(!(target.exists()) || replace)) --> Line_10 $$ int n = 1 [CD]
Line_7 $$ if (target.isDirectory() || !(!(target.exists()) || replace)) --> Line_11 $$ while (!(!tarn.exists() || replace)) [CD]
Line_6 $$ File tarn = target --> Line_11 $$ while (!(!tarn.exists() || replace)) [FD]
Line_9 $$ tarn = new File(tardir + File.separator + source.getName()) --> Line_11 $$ while (!(!tarn.exists() || replace)) [FD]
Line_11 $$ while (!(!tarn.exists() || replace)) --> Line_12 $$ tarn = new File(tardir + File.separator + String.valueOf(n) + " copy of " + source.getName()) [CD]
Line_6 $$ File tarn = target --> Line_12 $$ tarn = new File(tardir + File.separator + String.valueOf(n) + " copy of " + source.getName()) [FD]
Line_9 $$ tarn = new File(tardir + File.separator + source.getName()) --> Line_12 $$ tarn = new File(tardir + File.separator + String.valueOf(n) + " copy of " + source.getName()) [FD]
Line_10 $$ int n = 1 --> Line_12 $$ tarn = new File(tardir + File.separator + String.valueOf(n) + " copy of " + source.getName()) [FD]
Line_2 $$ public void cpFile(File source, File target, boolean replace, int bufferSize) throws IOException --> Line_12 $$ tarn = new File(tardir + File.separator + String.valueOf(n) + " copy of " + source.getName()) [FD]
Line_11 $$ while (!(!tarn.exists() || replace)) --> Line_13 $$ n++ [CD]
Line_10 $$ int n = 1 --> Line_13 $$ n++ [FD]
Line_2 $$ public void cpFile(File source, File target, boolean replace, int bufferSize) throws IOException --> Line_16 $$ if (source.getPath().equals(tarn.getPath()) && replace) [CD]
Line_2 $$ public void cpFile(File source, File target, boolean replace, int bufferSize) throws IOException --> Line_16 $$ if (source.getPath().equals(tarn.getPath()) && replace) [FD]
Line_12 $$ tarn = new File(tardir + File.separator + String.valueOf(n) + " copy of " + source.getName()) --> Line_16 $$ if (source.getPath().equals(tarn.getPath()) && replace) [FD]
Line_6 $$ File tarn = target --> Line_16 $$ if (source.getPath().equals(tarn.getPath()) && replace) [FD]
Line_9 $$ tarn = new File(tardir + File.separator + source.getName()) --> Line_16 $$ if (source.getPath().equals(tarn.getPath()) && replace) [FD]
Line_2 $$ public void cpFile(File source, File target, boolean replace, int bufferSize) throws IOException --> Line_17 $$ OutputStream tar = new FileOutputStream(tarn) [CD]
Line_2 $$ public void cpFile(File source, File target, boolean replace, int bufferSize) throws IOException --> Line_18 $$ byte[] bytes = new byte[bufferSize] [CD]
Line_2 $$ public void cpFile(File source, File target, boolean replace, int bufferSize) throws IOException --> Line_19 $$ int readn = -1 [CD]
Line_2 $$ public void cpFile(File source, File target, boolean replace, int bufferSize) throws IOException --> Line_20 $$ while ((readn = src.read(bytes)) > 0) [CD]
Line_19 $$ int readn = -1 --> Line_20 $$ while ((readn = src.read(bytes)) > 0) [FD]
Line_5 $$ InputStream src = new FileInputStream(source) --> Line_20 $$ while ((readn = src.read(bytes)) > 0) [FD]
Line_18 $$ byte[] bytes = new byte[bufferSize] --> Line_20 $$ while ((readn = src.read(bytes)) > 0) [FD]
Line_20 $$ while ((readn = src.read(bytes)) > 0) --> Line_21 $$ tar.write(bytes, 0, readn) [CD]
Line_20 $$ while ((readn = src.read(bytes)) > 0) --> Line_21 $$ tar.write(bytes, 0, readn) [FD]
Line_17 $$ OutputStream tar = new FileOutputStream(tarn) --> Line_21 $$ tar.write(bytes, 0, readn) [FD]
Line_18 $$ byte[] bytes = new byte[bufferSize] --> Line_21 $$ tar.write(bytes, 0, readn) [FD]
Line_19 $$ int readn = -1 --> Line_21 $$ tar.write(bytes, 0, readn) [FD]
Line_2 $$ public void cpFile(File source, File target, boolean replace, int bufferSize) throws IOException --> Line_23 $$ tar.flush() [CD]
Line_17 $$ OutputStream tar = new FileOutputStream(tarn) --> Line_23 $$ tar.flush() [FD]
Line_2 $$ public void cpFile(File source, File target, boolean replace, int bufferSize) throws IOException --> Line_24 $$ tar.close() [CD]
Line_17 $$ OutputStream tar = new FileOutputStream(tarn) --> Line_24 $$ tar.close() [FD]
Line_2 $$ public void cpFile(File source, File target, boolean replace, int bufferSize) throws IOException --> Line_25 $$ src.close() [CD]
Line_5 $$ InputStream src = new FileInputStream(source) --> Line_25 $$ src.close() [FD]
Line_12 $$ tarn = new File(tardir + File.separator + String.valueOf(n) + " copy of " + source.getName()) --> Line_11 $$ while (!(!tarn.exists() || replace)) [FD]
