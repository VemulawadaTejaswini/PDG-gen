Line_2 $$ private static List runITQLQuery(String itqlQuery) throws Exception --> Line_3 $$ String escapedItqlQuery = URLEncoder.encode(itqlQuery, "UTF-8") [CD]
Line_2 $$ private static List runITQLQuery(String itqlQuery) throws Exception --> Line_3 $$ String escapedItqlQuery = URLEncoder.encode(itqlQuery, "UTF-8") [FD]
Line_2 $$ private static List runITQLQuery(String itqlQuery) throws Exception --> Line_4 $$ String url = "http://" + Config.getProperty("FEDORA_SOAP_HOST") + ":" + Config.getProperty("FEDORA_SOAP_ACCESS_PORT") + "/fedora/risearch?type=tuples" + "&lang=iTQL" + "&format=CSV" + "&distinct=on" + "&stream=on" + "&query=" + escapedItqlQuery [CD]
Line_2 $$ private static List runITQLQuery(String itqlQuery) throws Exception --> Line_5 $$ logger.debug("url for risearch query: " + url) [CD]
Line_2 $$ private static List runITQLQuery(String itqlQuery) throws Exception --> Line_6 $$ URL urlObject = new URL(url) [CD]
Line_2 $$ private static List runITQLQuery(String itqlQuery) throws Exception --> Line_7 $$ HttpURLConnection con = (HttpURLConnection) urlObject.openConnection() [CD]
Line_6 $$ URL urlObject = new URL(url) --> Line_7 $$ HttpURLConnection con = (HttpURLConnection) urlObject.openConnection() [FD]
Line_2 $$ private static List runITQLQuery(String itqlQuery) throws Exception --> Line_8 $$ BufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream())) [CD]
Line_7 $$ HttpURLConnection con = (HttpURLConnection) urlObject.openConnection() --> Line_8 $$ BufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream())) [FD]
Line_2 $$ private static List runITQLQuery(String itqlQuery) throws Exception --> Line_9 $$ logger.debug("response code: " + con.getResponseCode()) [CD]
Line_7 $$ HttpURLConnection con = (HttpURLConnection) urlObject.openConnection() --> Line_9 $$ logger.debug("response code: " + con.getResponseCode()) [FD]
Line_2 $$ private static List runITQLQuery(String itqlQuery) throws Exception --> Line_10 $$ if (con.getResponseCode() != 200 && con.getResponseCode() != 302) [CD]
Line_7 $$ HttpURLConnection con = (HttpURLConnection) urlObject.openConnection() --> Line_10 $$ if (con.getResponseCode() != 200 && con.getResponseCode() != 302) [FD]
Line_2 $$ private static List runITQLQuery(String itqlQuery) throws Exception --> Line_13 $$ ArrayList arrayList = new ArrayList() [CD]
Line_2 $$ private static List runITQLQuery(String itqlQuery) throws Exception --> Line_14 $$ String inputLine [CD]
Line_2 $$ private static List runITQLQuery(String itqlQuery) throws Exception --> Line_15 $$ int counter = 0 [CD]
Line_2 $$ private static List runITQLQuery(String itqlQuery) throws Exception --> Line_16 $$ while ((inputLine = br.readLine()) != null) [CD]
Line_14 $$ String inputLine --> Line_16 $$ while ((inputLine = br.readLine()) != null) [FD]
Line_8 $$ BufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream())) --> Line_16 $$ while ((inputLine = br.readLine()) != null) [FD]
Line_16 $$ while ((inputLine = br.readLine()) != null) --> Line_17 $$ logger.debug("reading line:" + inputLine) [CD]
Line_16 $$ while ((inputLine = br.readLine()) != null) --> Line_18 $$ if (inputLine.indexOf("<html>") >= 0) [CD]
Line_16 $$ while ((inputLine = br.readLine()) != null) --> Line_18 $$ if (inputLine.indexOf("<html>") >= 0) [FD]
Line_14 $$ String inputLine --> Line_18 $$ if (inputLine.indexOf("<html>") >= 0) [FD]
Line_18 $$ if (inputLine.indexOf("<html>") >= 0) --> Line_19 $$ logger.error("problem quering the relationship") [CD]
Line_16 $$ while ((inputLine = br.readLine()) != null) --> Line_22 $$ if (counter >= 1 && inputLine.indexOf("/") >= 0 && inputLine.trim().length() > 0) [CD]
Line_16 $$ while ((inputLine = br.readLine()) != null) --> Line_22 $$ if (counter >= 1 && inputLine.indexOf("/") >= 0 && inputLine.trim().length() > 0) [FD]
Line_14 $$ String inputLine --> Line_22 $$ if (counter >= 1 && inputLine.indexOf("/") >= 0 && inputLine.trim().length() > 0) [FD]
Line_22 $$ if (counter >= 1 && inputLine.indexOf("/") >= 0 && inputLine.trim().length() > 0) --> Line_23 $$ logger.debug("adding line:" + inputLine) [CD]
Line_22 $$ if (counter >= 1 && inputLine.indexOf("/") >= 0 && inputLine.trim().length() > 0) --> Line_24 $$ inputLine = inputLine.substring(inputLine.indexOf("/") + 1) [CD]
Line_16 $$ while ((inputLine = br.readLine()) != null) --> Line_24 $$ inputLine = inputLine.substring(inputLine.indexOf("/") + 1) [FD]
Line_14 $$ String inputLine --> Line_24 $$ inputLine = inputLine.substring(inputLine.indexOf("/") + 1) [FD]
Line_22 $$ if (counter >= 1 && inputLine.indexOf("/") >= 0 && inputLine.trim().length() > 0) --> Line_25 $$ arrayList.add(inputLine) [CD]
Line_13 $$ ArrayList arrayList = new ArrayList() --> Line_25 $$ arrayList.add(inputLine) [FD]
Line_16 $$ while ((inputLine = br.readLine()) != null) --> Line_25 $$ arrayList.add(inputLine) [FD]
Line_24 $$ inputLine = inputLine.substring(inputLine.indexOf("/") + 1) --> Line_25 $$ arrayList.add(inputLine) [FD]
Line_14 $$ String inputLine --> Line_25 $$ arrayList.add(inputLine) [FD]
Line_22 $$ if (counter >= 1 && inputLine.indexOf("/") >= 0 && inputLine.trim().length() > 0) --> Line_26 $$ logger.debug("found relationship to item: " + inputLine) [CD]
Line_16 $$ while ((inputLine = br.readLine()) != null) --> Line_28 $$ counter++ [CD]
Line_15 $$ int counter = 0 --> Line_28 $$ counter++ [FD]
Line_2 $$ private static List runITQLQuery(String itqlQuery) throws Exception --> Line_30 $$ br.close() [CD]
Line_8 $$ BufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream())) --> Line_30 $$ br.close() [FD]
Line_2 $$ private static List runITQLQuery(String itqlQuery) throws Exception --> Line_31 $$ logger.debug("num relationships found: " + arrayList.size()) [CD]
Line_13 $$ ArrayList arrayList = new ArrayList() --> Line_31 $$ logger.debug("num relationships found: " + arrayList.size()) [FD]
Line_2 $$ private static List runITQLQuery(String itqlQuery) throws Exception --> Line_32 $$ return arrayList [CD]
Line_24 $$ inputLine = inputLine.substring(inputLine.indexOf("/") + 1) --> Line_18 $$ if (inputLine.indexOf("<html>") >= 0) [FD]
Line_24 $$ inputLine = inputLine.substring(inputLine.indexOf("/") + 1) --> Line_22 $$ if (counter >= 1 && inputLine.indexOf("/") >= 0 && inputLine.trim().length() > 0) [FD]
