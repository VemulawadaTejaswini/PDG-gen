Line_2 $$ public void actionPerformed(ActionEvent e) --> Line_3 $$ if (path.compareTo("") != 0) [CD]
Line_3 $$ if (path.compareTo("") != 0) --> Line_5 $$ File imageFile = new File(path) [CD]
Line_3 $$ if (path.compareTo("") != 0) --> Line_7 $$ File directory = new File(directoryPath) [CD]
Line_3 $$ if (path.compareTo("") != 0) --> Line_8 $$ directory.mkdirs() [CD]
Line_7 $$ File directory = new File(directoryPath) --> Line_8 $$ directory.mkdirs() [FD]
Line_3 $$ if (path.compareTo("") != 0) --> Line_10 $$ File newFile = new File(imagePath) [CD]
Line_3 $$ if (path.compareTo("") != 0) --> Line_11 $$ int i = 1 [CD]
Line_3 $$ if (path.compareTo("") != 0) --> Line_12 $$ while (newFile.exists()) [CD]
Line_10 $$ File newFile = new File(imagePath) --> Line_12 $$ while (newFile.exists()) [FD]
Line_12 $$ while (newFile.exists()) --> Line_14 $$ newFile = new File(imagePath) [CD]
Line_10 $$ File newFile = new File(imagePath) --> Line_14 $$ newFile = new File(imagePath) [FD]
Line_12 $$ while (newFile.exists()) --> Line_15 $$ i++ [CD]
Line_11 $$ int i = 1 --> Line_15 $$ i++ [FD]
Line_3 $$ if (path.compareTo("") != 0) --> Line_17 $$ imagePathThumb = (imagePath.substring(0, imagePath.lastIndexOf("."))).concat("_th.jpg") [CD]
Line_3 $$ if (path.compareTo("") != 0) --> Line_18 $$ dataBase.insertDB(theConcepts, imageName, imageName.substring(0, imageName.lastIndexOf('.'))) [CD]
Line_21 $$ FileChannel dstChannel = new FileOutputStream(imagePath).getChannel() --> Line_22 $$ dstChannel.transferFrom(srcChannel, 0, srcChannel.size()) [FD]
Line_20 $$ FileChannel srcChannel = new FileInputStream(path).getChannel() --> Line_22 $$ dstChannel.transferFrom(srcChannel, 0, srcChannel.size()) [FD]
Line_20 $$ FileChannel srcChannel = new FileInputStream(path).getChannel() --> Line_23 $$ srcChannel.close() [FD]
Line_21 $$ FileChannel dstChannel = new FileOutputStream(imagePath).getChannel() --> Line_24 $$ dstChannel.close() [FD]
Line_3 $$ if (path.compareTo("") != 0) --> Line_30 $$ if (imageFile != null) [CD]
Line_5 $$ File imageFile = new File(path) --> Line_30 $$ if (imageFile != null) [FD]
Line_30 $$ if (imageFile != null) --> Line_31 $$ if (TFileUtils.isJAIRequired(imageFile)) [CD]
Line_5 $$ File imageFile = new File(path) --> Line_31 $$ if (TFileUtils.isJAIRequired(imageFile)) [FD]
Line_31 $$ if (TFileUtils.isJAIRequired(imageFile)) --> Line_32 $$ RenderedOp src = JAI.create("fileload", imageFile.getAbsolutePath()) [CD]
Line_5 $$ File imageFile = new File(path) --> Line_32 $$ RenderedOp src = JAI.create("fileload", imageFile.getAbsolutePath()) [FD]
Line_31 $$ if (TFileUtils.isJAIRequired(imageFile)) --> Line_33 $$ BufferedImage bufferedImage = src.getAsBufferedImage() [CD]
Line_32 $$ RenderedOp src = JAI.create("fileload", imageFile.getAbsolutePath()) --> Line_33 $$ BufferedImage bufferedImage = src.getAsBufferedImage() [FD]
Line_5 $$ File imageFile = new File(path) --> Line_36 $$ image = new ImageIcon(imageFile.getAbsolutePath()) [FD]
Line_30 $$ if (imageFile != null) --> Line_38 $$ if (image.getImageLoadStatus() == MediaTracker.ERRORED) [CD]
Line_38 $$ if (image.getImageLoadStatus() == MediaTracker.ERRORED) --> Line_39 $$ int choosenOption = JOptionPane.NO_OPTION [CD]
Line_38 $$ if (image.getImageLoadStatus() == MediaTracker.ERRORED) --> Line_40 $$ choosenOption = JOptionPane.showConfirmDialog(null, TLanguage.getString("TIGInsertImageAction.MESSAGE"), TLanguage.getString("TIGInsertImageAction.NAME"), JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE) [CD]
Line_39 $$ int choosenOption = JOptionPane.NO_OPTION --> Line_40 $$ choosenOption = JOptionPane.showConfirmDialog(null, TLanguage.getString("TIGInsertImageAction.MESSAGE"), TLanguage.getString("TIGInsertImageAction.NAME"), JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE) [FD]
Line_45 $$ double thumbRatio = (double) thumbWidth / (double) thumbHeight --> Line_49 $$ if (thumbRatio < imageRatio) [FD]
Line_48 $$ double imageRatio = (double) imageWidth / (double) imageHeight --> Line_49 $$ if (thumbRatio < imageRatio) [FD]
Line_49 $$ if (thumbRatio < imageRatio) --> Line_50 $$ thumbHeight = (int) (thumbWidth / imageRatio) [CD]
Line_44 $$ int thumbHeight = PREVIEW_HEIGHT --> Line_50 $$ thumbHeight = (int) (thumbWidth / imageRatio) [FD]
Line_49 $$ if (thumbRatio < imageRatio) --> Line_52 $$ thumbWidth = (int) (thumbHeight * imageRatio) [CD]
Line_43 $$ int thumbWidth = PREVIEW_WIDTH --> Line_52 $$ thumbWidth = (int) (thumbHeight * imageRatio) [FD]
Line_54 $$ BufferedImage thumbImage = new BufferedImage(thumbWidth, thumbHeight, BufferedImage.TYPE_INT_RGB) --> Line_55 $$ Graphics2D graphics2D = thumbImage.createGraphics() [FD]
Line_55 $$ Graphics2D graphics2D = thumbImage.createGraphics() --> Line_56 $$ graphics2D.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR) [FD]
Line_55 $$ Graphics2D graphics2D = thumbImage.createGraphics() --> Line_57 $$ graphics2D.drawImage(image.getImage(), 0, 0, thumbWidth, thumbHeight, null) [FD]
Line_43 $$ int thumbWidth = PREVIEW_WIDTH --> Line_57 $$ graphics2D.drawImage(image.getImage(), 0, 0, thumbWidth, thumbHeight, null) [FD]
Line_52 $$ thumbWidth = (int) (thumbHeight * imageRatio) --> Line_57 $$ graphics2D.drawImage(image.getImage(), 0, 0, thumbWidth, thumbHeight, null) [FD]
Line_44 $$ int thumbHeight = PREVIEW_HEIGHT --> Line_57 $$ graphics2D.drawImage(image.getImage(), 0, 0, thumbWidth, thumbHeight, null) [FD]
Line_50 $$ thumbHeight = (int) (thumbWidth / imageRatio) --> Line_57 $$ graphics2D.drawImage(image.getImage(), 0, 0, thumbWidth, thumbHeight, null) [FD]
Line_58 $$ BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(imagePathThumb)) --> Line_59 $$ JPEGImageEncoder encoder = JPEGCodec.createJPEGEncoder(out) [FD]
Line_59 $$ JPEGImageEncoder encoder = JPEGCodec.createJPEGEncoder(out) --> Line_60 $$ JPEGEncodeParam param = encoder.getDefaultJPEGEncodeParam(thumbImage) [FD]
Line_54 $$ BufferedImage thumbImage = new BufferedImage(thumbWidth, thumbHeight, BufferedImage.TYPE_INT_RGB) --> Line_60 $$ JPEGEncodeParam param = encoder.getDefaultJPEGEncodeParam(thumbImage) [FD]
Line_61 $$ int quality = 100 --> Line_62 $$ quality = Math.max(0, Math.min(quality, 100)) [FD]
Line_60 $$ JPEGEncodeParam param = encoder.getDefaultJPEGEncodeParam(thumbImage) --> Line_63 $$ param.setQuality((float) quality / 100.0f, false) [FD]
Line_59 $$ JPEGImageEncoder encoder = JPEGCodec.createJPEGEncoder(out) --> Line_64 $$ encoder.setJPEGEncodeParam(param) [FD]
Line_60 $$ JPEGEncodeParam param = encoder.getDefaultJPEGEncodeParam(thumbImage) --> Line_64 $$ encoder.setJPEGEncodeParam(param) [FD]
Line_59 $$ JPEGImageEncoder encoder = JPEGCodec.createJPEGEncoder(out) --> Line_65 $$ encoder.encode(thumbImage) [FD]
Line_54 $$ BufferedImage thumbImage = new BufferedImage(thumbWidth, thumbHeight, BufferedImage.TYPE_INT_RGB) --> Line_65 $$ encoder.encode(thumbImage) [FD]
Line_58 $$ BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(imagePathThumb)) --> Line_66 $$ out.close() [FD]
Line_14 $$ newFile = new File(imagePath) --> Line_12 $$ while (newFile.exists()) [FD]
