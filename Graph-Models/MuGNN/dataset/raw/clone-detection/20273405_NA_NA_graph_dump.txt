Line_2 $$ public static void decompress(final File file, final File folder, final boolean deleteZipAfter) throws IOException --> Line_3 $$ final ZipInputStream zis = new ZipInputStream(new BufferedInputStream(new FileInputStream(file.getCanonicalFile()))) [CD]
Line_2 $$ public static void decompress(final File file, final File folder, final boolean deleteZipAfter) throws IOException --> Line_3 $$ final ZipInputStream zis = new ZipInputStream(new BufferedInputStream(new FileInputStream(file.getCanonicalFile()))) [FD]
Line_2 $$ public static void decompress(final File file, final File folder, final boolean deleteZipAfter) throws IOException --> Line_4 $$ ZipEntry ze [CD]
Line_3 $$ final ZipInputStream zis = new ZipInputStream(new BufferedInputStream(new FileInputStream(file.getCanonicalFile()))) --> Line_6 $$ while (null != (ze = zis.getNextEntry())) [FD]
Line_2 $$ public static void decompress(final File file, final File folder, final boolean deleteZipAfter) throws IOException --> Line_7 $$ final File f = new File(folder.getCanonicalPath(), ze.getName()) [FD]
Line_7 $$ final File f = new File(folder.getCanonicalPath(), ze.getName()) --> Line_8 $$ if (f.exists()) [FD]
Line_9 $$ if (ze.isDirectory()) --> Line_10 $$ f.mkdirs() [CD]
Line_7 $$ final File f = new File(folder.getCanonicalPath(), ze.getName()) --> Line_10 $$ f.mkdirs() [FD]
Line_7 $$ final File f = new File(folder.getCanonicalPath(), ze.getName()) --> Line_13 $$ f.getParentFile().mkdirs() [FD]
Line_18 $$ int bytesRead --> Line_19 $$ while (-1 != (bytesRead = zis.read(buf))) fos.write(buf, 0, bytesRead) [FD]
Line_3 $$ final ZipInputStream zis = new ZipInputStream(new BufferedInputStream(new FileInputStream(file.getCanonicalFile()))) --> Line_19 $$ while (-1 != (bytesRead = zis.read(buf))) fos.write(buf, 0, bytesRead) [FD]
Line_17 $$ final byte[] buf = new byte[8192] --> Line_19 $$ while (-1 != (bytesRead = zis.read(buf))) fos.write(buf, 0, bytesRead) [FD]
Line_14 $$ final OutputStream fos = new BufferedOutputStream(new FileOutputStream(f)) --> Line_19 $$ while (-1 != (bytesRead = zis.read(buf))) fos.write(buf, 0, bytesRead) [FD]
Line_14 $$ final OutputStream fos = new BufferedOutputStream(new FileOutputStream(f)) --> Line_21 $$ fos.close() [FD]
Line_7 $$ final File f = new File(folder.getCanonicalPath(), ze.getName()) --> Line_24 $$ f.delete() [FD]
Line_3 $$ final ZipInputStream zis = new ZipInputStream(new BufferedInputStream(new FileInputStream(file.getCanonicalFile()))) --> Line_29 $$ zis.close() [FD]
Line_2 $$ public static void decompress(final File file, final File folder, final boolean deleteZipAfter) throws IOException --> Line_31 $$ if (deleteZipAfter) [CD]
Line_2 $$ public static void decompress(final File file, final File folder, final boolean deleteZipAfter) throws IOException --> Line_31 $$ if (deleteZipAfter) [FD]
