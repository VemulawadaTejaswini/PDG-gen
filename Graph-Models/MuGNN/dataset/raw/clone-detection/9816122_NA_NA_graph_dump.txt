Line_2 $$ public Request call() --> Line_3 $$ InputStream is = null [CD]
Line_6 $$ HttpGet httpGet = new HttpGet(request.uri.toString()) --> Line_7 $$ httpGet.addHeader("Accept-Encoding", "gzip") [FD]
Line_6 $$ HttpGet httpGet = new HttpGet(request.uri.toString()) --> Line_8 $$ HttpResponse response = mHttpClient.execute(httpGet) [FD]
Line_8 $$ HttpResponse response = mHttpClient.execute(httpGet) --> Line_9 $$ String mimeType = response.getHeaders("Content-Type")[0].getValue() [FD]
Line_9 $$ String mimeType = response.getHeaders("Content-Type")[0].getValue() --> Line_11 $$ if (mimeType.startsWith("image")) [FD]
Line_11 $$ if (mimeType.startsWith("image")) --> Line_12 $$ HttpEntity entity = response.getEntity() [CD]
Line_8 $$ HttpResponse response = mHttpClient.execute(httpGet) --> Line_12 $$ HttpEntity entity = response.getEntity() [FD]
Line_11 $$ if (mimeType.startsWith("image")) --> Line_13 $$ is = getUngzippedContent(entity) [CD]
Line_3 $$ InputStream is = null --> Line_13 $$ is = getUngzippedContent(entity) [FD]
Line_12 $$ HttpEntity entity = response.getEntity() --> Line_13 $$ is = getUngzippedContent(entity) [FD]
Line_11 $$ if (mimeType.startsWith("image")) --> Line_14 $$ Bitmap bitmap = BitmapFactory.decodeStream(is) [CD]
Line_3 $$ InputStream is = null --> Line_14 $$ Bitmap bitmap = BitmapFactory.decodeStream(is) [FD]
Line_13 $$ is = getUngzippedContent(entity) --> Line_14 $$ Bitmap bitmap = BitmapFactory.decodeStream(is) [FD]
Line_11 $$ if (mimeType.startsWith("image")) --> Line_15 $$ if (mResourceCache.store(request.hash, bitmap)) [CD]
Line_14 $$ Bitmap bitmap = BitmapFactory.decodeStream(is) --> Line_15 $$ if (mResourceCache.store(request.hash, bitmap)) [FD]
Line_15 $$ if (mResourceCache.store(request.hash, bitmap)) --> Line_16 $$ mCache.put(request.uri.toString(), new SoftReference<Bitmap>(bitmap)) [CD]
Line_15 $$ if (mResourceCache.store(request.hash, bitmap)) --> Line_17 $$ Log.d(TAG, "Request successful: " + request.uri) [CD]
Line_15 $$ if (mResourceCache.store(request.hash, bitmap)) --> Line_19 $$ mResourceCache.invalidate(request.hash) [CD]
Line_3 $$ InputStream is = null --> Line_27 $$ if (is != null) [FD]
Line_13 $$ is = getUngzippedContent(entity) --> Line_27 $$ if (is != null) [FD]
Line_27 $$ if (is != null) --> Line_28 $$ notifyObservers(request.uri) [CD]
Line_3 $$ InputStream is = null --> Line_31 $$ if (is != null) [FD]
Line_13 $$ is = getUngzippedContent(entity) --> Line_31 $$ if (is != null) [FD]
Line_31 $$ if (is != null) --> Line_32 $$ is.close() [CD]
Line_3 $$ InputStream is = null --> Line_32 $$ is.close() [FD]
Line_13 $$ is = getUngzippedContent(entity) --> Line_32 $$ is.close() [FD]
Line_2 $$ public Request call() --> Line_38 $$ return request [CD]
