Line_2 $$ private boolean checkHashBack(Facade facade, HttpServletRequest req) --> Line_3 $$ String txtTransactionID = req.getParameter("txtTransactionID") [CD]
Line_2 $$ private boolean checkHashBack(Facade facade, HttpServletRequest req) --> Line_3 $$ String txtTransactionID = req.getParameter("txtTransactionID") [FD]
Line_2 $$ private boolean checkHashBack(Facade facade, HttpServletRequest req) --> Line_4 $$ String txtOrderTotal = req.getParameter("txtOrderTotal") [CD]
Line_2 $$ private boolean checkHashBack(Facade facade, HttpServletRequest req) --> Line_4 $$ String txtOrderTotal = req.getParameter("txtOrderTotal") [FD]
Line_2 $$ private boolean checkHashBack(Facade facade, HttpServletRequest req) --> Line_5 $$ String txtShopId = facade.getSystemParameter(GlobalParameter.yellowPayMDMasterShopID) [CD]
Line_2 $$ private boolean checkHashBack(Facade facade, HttpServletRequest req) --> Line_5 $$ String txtShopId = facade.getSystemParameter(GlobalParameter.yellowPayMDMasterShopID) [FD]
Line_2 $$ private boolean checkHashBack(Facade facade, HttpServletRequest req) --> Line_6 $$ String txtArtCurrency = facade.getSystemParameter(GlobalParameter.yellowPayMDCurrency) [CD]
Line_2 $$ private boolean checkHashBack(Facade facade, HttpServletRequest req) --> Line_6 $$ String txtArtCurrency = facade.getSystemParameter(GlobalParameter.yellowPayMDCurrency) [FD]
Line_2 $$ private boolean checkHashBack(Facade facade, HttpServletRequest req) --> Line_7 $$ String txtHashBack = req.getParameter("txtHashBack") [CD]
Line_2 $$ private boolean checkHashBack(Facade facade, HttpServletRequest req) --> Line_7 $$ String txtHashBack = req.getParameter("txtHashBack") [FD]
Line_2 $$ private boolean checkHashBack(Facade facade, HttpServletRequest req) --> Line_8 $$ String hashSeed = facade.getSystemParameter(GlobalParameter.yellowPayMDHashSeed) [CD]
Line_2 $$ private boolean checkHashBack(Facade facade, HttpServletRequest req) --> Line_8 $$ String hashSeed = facade.getSystemParameter(GlobalParameter.yellowPayMDHashSeed) [FD]
Line_2 $$ private boolean checkHashBack(Facade facade, HttpServletRequest req) --> Line_9 $$ String securityValue = txtShopId + txtArtCurrency + txtOrderTotal + hashSeed + txtTransactionID [CD]
Line_2 $$ private boolean checkHashBack(Facade facade, HttpServletRequest req) --> Line_10 $$ MessageDigest digest [CD]
Line_10 $$ MessageDigest digest --> Line_12 $$ digest = java.security.MessageDigest.getInstance("MD5") [FD]
Line_10 $$ MessageDigest digest --> Line_13 $$ digest.update(securityValue.getBytes()) [FD]
Line_12 $$ digest = java.security.MessageDigest.getInstance("MD5") --> Line_13 $$ digest.update(securityValue.getBytes()) [FD]
Line_9 $$ String securityValue = txtShopId + txtArtCurrency + txtOrderTotal + hashSeed + txtTransactionID --> Line_13 $$ digest.update(securityValue.getBytes()) [FD]
Line_10 $$ MessageDigest digest --> Line_14 $$ byte[] array = digest.digest() [FD]
Line_12 $$ digest = java.security.MessageDigest.getInstance("MD5") --> Line_14 $$ byte[] array = digest.digest() [FD]
Line_16 $$ for (int j = 0; j < array.length; ++j) --> Line_17 $$ int b = array[j] & 0xFF [CD]
Line_16 $$ for (int j = 0; j < array.length; ++j) --> Line_18 $$ sb.append('0') [CD]
Line_17 $$ int b = array[j] & 0xFF --> Line_18 $$ sb.append('0') [FD]
Line_15 $$ StringBuffer sb = new StringBuffer() --> Line_18 $$ sb.append('0') [FD]
Line_16 $$ for (int j = 0; j < array.length; ++j) --> Line_19 $$ sb.append(Integer.toHexString(b)) [CD]
Line_15 $$ StringBuffer sb = new StringBuffer() --> Line_19 $$ sb.append(Integer.toHexString(b)) [FD]
Line_17 $$ int b = array[j] & 0xFF --> Line_19 $$ sb.append(Integer.toHexString(b)) [FD]
Line_15 $$ StringBuffer sb = new StringBuffer() --> Line_21 $$ String hash = sb.toString() [FD]
Line_7 $$ String txtHashBack = req.getParameter("txtHashBack") --> Line_23 $$ if (txtHashBack.equals(hash)) [FD]
Line_21 $$ String hash = sb.toString() --> Line_23 $$ if (txtHashBack.equals(hash)) [FD]
Line_23 $$ if (txtHashBack.equals(hash)) --> Line_24 $$ return true [CD]
Line_2 $$ private boolean checkHashBack(Facade facade, HttpServletRequest req) --> Line_29 $$ return false [CD]
