Line_2 $$ public static String recoverPassword(String token) --> Line_4 $$ token = encryptGeneral1(token) [FD]
Line_2 $$ public static String recoverPassword(String token) --> Line_5 $$ String data = URLEncoder.encode("key", "UTF-8") + "=" + URLEncoder.encode(token, "UTF-8") [FD]
Line_4 $$ token = encryptGeneral1(token) --> Line_5 $$ String data = URLEncoder.encode("key", "UTF-8") + "=" + URLEncoder.encode(token, "UTF-8") [FD]
Line_6 $$ URL url = new URL("https://mypasswords-server.appspot.com/recover_password") --> Line_7 $$ URLConnection conn = url.openConnection() [FD]
Line_7 $$ URLConnection conn = url.openConnection() --> Line_8 $$ conn.setDoOutput(true) [FD]
Line_7 $$ URLConnection conn = url.openConnection() --> Line_9 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream()) [FD]
Line_9 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream()) --> Line_10 $$ wr.write(data) [FD]
Line_5 $$ String data = URLEncoder.encode("key", "UTF-8") + "=" + URLEncoder.encode(token, "UTF-8") --> Line_10 $$ wr.write(data) [FD]
Line_9 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream()) --> Line_11 $$ wr.flush() [FD]
Line_7 $$ URLConnection conn = url.openConnection() --> Line_12 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())) [FD]
Line_14 $$ String line --> Line_15 $$ while ((line = rd.readLine()) != null) [FD]
Line_12 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())) --> Line_15 $$ while ((line = rd.readLine()) != null) [FD]
Line_15 $$ while ((line = rd.readLine()) != null) --> Line_16 $$ finalResult.append(line) [CD]
Line_15 $$ while ((line = rd.readLine()) != null) --> Line_16 $$ finalResult.append(line) [FD]
Line_13 $$ StringBuilder finalResult = new StringBuilder() --> Line_16 $$ finalResult.append(line) [FD]
Line_14 $$ String line --> Line_16 $$ finalResult.append(line) [FD]
Line_9 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream()) --> Line_18 $$ wr.close() [FD]
Line_12 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())) --> Line_19 $$ rd.close() [FD]
Line_20 $$ DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance() --> Line_21 $$ DocumentBuilder db = dbf.newDocumentBuilder() [FD]
Line_21 $$ DocumentBuilder db = dbf.newDocumentBuilder() --> Line_22 $$ Document document = db.parse(new InputSource(new StringReader(finalResult.toString()))) [FD]
Line_13 $$ StringBuilder finalResult = new StringBuilder() --> Line_22 $$ Document document = db.parse(new InputSource(new StringReader(finalResult.toString()))) [FD]
Line_22 $$ Document document = db.parse(new InputSource(new StringReader(finalResult.toString()))) --> Line_23 $$ document.normalizeDocument() [FD]
Line_22 $$ Document document = db.parse(new InputSource(new StringReader(finalResult.toString()))) --> Line_24 $$ Element root = document.getDocumentElement() [FD]
Line_24 $$ Element root = document.getDocumentElement() --> Line_25 $$ String password = root.getTextContent() [FD]
Line_25 $$ String password = root.getTextContent() --> Line_26 $$ password = decryptGeneral1(password) [FD]
Line_2 $$ public static String recoverPassword(String token) --> Line_31 $$ return null [CD]
