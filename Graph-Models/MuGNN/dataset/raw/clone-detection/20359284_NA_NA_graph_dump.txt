Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_3 $$ Object archiveObj = layer.getBlackboard().get("ArchiveFileName") [CD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_3 $$ Object archiveObj = layer.getBlackboard().get("ArchiveFileName") [FD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_4 $$ Object entryObj = layer.getBlackboard().get("ArchiveEntryPrefix") [CD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_4 $$ Object entryObj = layer.getBlackboard().get("ArchiveEntryPrefix") [FD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_5 $$ if ((archiveObj == null) || (entryObj == null)) [CD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_6 $$ String archiveName = archiveObj.toString() [CD]
Line_3 $$ Object archiveObj = layer.getBlackboard().get("ArchiveFileName") --> Line_6 $$ String archiveName = archiveObj.toString() [FD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_7 $$ String entryPrefix = entryObj.toString() [CD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_8 $$ if ((archiveName == "") || (entryPrefix == "")) [CD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_9 $$ File tempZip = File.createTempFile("tmp", ".zip") [CD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_10 $$ InputStream in = new BufferedInputStream(new FileInputStream(archiveName)) [CD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_11 $$ OutputStream out = new BufferedOutputStream(new FileOutputStream(tempZip)) [CD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_12 $$ copy(in, out) [CD]
Line_10 $$ InputStream in = new BufferedInputStream(new FileInputStream(archiveName)) --> Line_12 $$ copy(in, out) [FD]
Line_11 $$ OutputStream out = new BufferedOutputStream(new FileOutputStream(tempZip)) --> Line_12 $$ copy(in, out) [FD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_13 $$ in.close() [CD]
Line_10 $$ InputStream in = new BufferedInputStream(new FileInputStream(archiveName)) --> Line_13 $$ in.close() [FD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_14 $$ out.close() [CD]
Line_11 $$ OutputStream out = new BufferedOutputStream(new FileOutputStream(tempZip)) --> Line_14 $$ out.close() [FD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_15 $$ ZipFile zipFile = new ZipFile(tempZip) [CD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_16 $$ ZipOutputStream zout = new ZipOutputStream(new BufferedOutputStream(new FileOutputStream(archiveName))) [CD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_17 $$ ZipInputStream zin = new ZipInputStream(new FileInputStream(tempZip)) [CD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_18 $$ ZipEntry entry = zin.getNextEntry() [CD]
Line_17 $$ ZipInputStream zin = new ZipInputStream(new FileInputStream(tempZip)) --> Line_18 $$ ZipEntry entry = zin.getNextEntry() [FD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_19 $$ while (entry != null) [CD]
Line_19 $$ while (entry != null) --> Line_20 $$ String entryName = entry.getName() [CD]
Line_19 $$ while (entry != null) --> Line_21 $$ String en = GUIUtil.nameWithoutExtension(new File(entryName)) [CD]
Line_19 $$ while (entry != null) --> Line_22 $$ if (en.equalsIgnoreCase(entryPrefix)) [CD]
Line_21 $$ String en = GUIUtil.nameWithoutExtension(new File(entryName)) --> Line_22 $$ if (en.equalsIgnoreCase(entryPrefix)) [FD]
Line_7 $$ String entryPrefix = entryObj.toString() --> Line_22 $$ if (en.equalsIgnoreCase(entryPrefix)) [FD]
Line_22 $$ if (en.equalsIgnoreCase(entryPrefix)) --> Line_23 $$ if (entryName.endsWith(".jmp")) [CD]
Line_20 $$ String entryName = entry.getName() --> Line_23 $$ if (entryName.endsWith(".jmp")) [FD]
Line_23 $$ if (entryName.endsWith(".jmp")) --> Line_24 $$ String layerTaskPath = CreateArchivePlugIn.createLayerTask(layer, archiveName, entryPrefix) [CD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_24 $$ String layerTaskPath = CreateArchivePlugIn.createLayerTask(layer, archiveName, entryPrefix) [FD]
Line_6 $$ String archiveName = archiveObj.toString() --> Line_24 $$ String layerTaskPath = CreateArchivePlugIn.createLayerTask(layer, archiveName, entryPrefix) [FD]
Line_7 $$ String entryPrefix = entryObj.toString() --> Line_24 $$ String layerTaskPath = CreateArchivePlugIn.createLayerTask(layer, archiveName, entryPrefix) [FD]
Line_23 $$ if (entryName.endsWith(".jmp")) --> Line_25 $$ CreateArchivePlugIn.WriteZipEntry(layerTaskPath, entryPrefix, zout) [CD]
Line_24 $$ String layerTaskPath = CreateArchivePlugIn.createLayerTask(layer, archiveName, entryPrefix) --> Line_25 $$ CreateArchivePlugIn.WriteZipEntry(layerTaskPath, entryPrefix, zout) [FD]
Line_7 $$ String entryPrefix = entryObj.toString() --> Line_25 $$ CreateArchivePlugIn.WriteZipEntry(layerTaskPath, entryPrefix, zout) [FD]
Line_16 $$ ZipOutputStream zout = new ZipOutputStream(new BufferedOutputStream(new FileOutputStream(archiveName))) --> Line_25 $$ CreateArchivePlugIn.WriteZipEntry(layerTaskPath, entryPrefix, zout) [FD]
Line_23 $$ if (entryName.endsWith(".jmp")) --> Line_26 $$ if ((!entryName.endsWith(".shx")) && (!entryName.endsWith(".dbf")) && (!entryName.endsWith(".shp.xml")) && (!entryName.endsWith(".prj"))) [CD]
Line_20 $$ String entryName = entry.getName() --> Line_26 $$ if ((!entryName.endsWith(".shx")) && (!entryName.endsWith(".dbf")) && (!entryName.endsWith(".shp.xml")) && (!entryName.endsWith(".prj"))) [FD]
Line_26 $$ if ((!entryName.endsWith(".shx")) && (!entryName.endsWith(".dbf")) && (!entryName.endsWith(".shp.xml")) && (!entryName.endsWith(".prj"))) --> Line_27 $$ CreateArchivePlugIn.WriteZipEntry(layerFileName, entryPrefix, zout) [CD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_27 $$ CreateArchivePlugIn.WriteZipEntry(layerFileName, entryPrefix, zout) [FD]
Line_7 $$ String entryPrefix = entryObj.toString() --> Line_27 $$ CreateArchivePlugIn.WriteZipEntry(layerFileName, entryPrefix, zout) [FD]
Line_16 $$ ZipOutputStream zout = new ZipOutputStream(new BufferedOutputStream(new FileOutputStream(archiveName))) --> Line_27 $$ CreateArchivePlugIn.WriteZipEntry(layerFileName, entryPrefix, zout) [FD]
Line_22 $$ if (en.equalsIgnoreCase(entryPrefix)) --> Line_30 $$ zout.putNextEntry(entry) [CD]
Line_16 $$ ZipOutputStream zout = new ZipOutputStream(new BufferedOutputStream(new FileOutputStream(archiveName))) --> Line_30 $$ zout.putNextEntry(entry) [FD]
Line_22 $$ if (en.equalsIgnoreCase(entryPrefix)) --> Line_31 $$ copy(zin, zout) [CD]
Line_17 $$ ZipInputStream zin = new ZipInputStream(new FileInputStream(tempZip)) --> Line_31 $$ copy(zin, zout) [FD]
Line_16 $$ ZipOutputStream zout = new ZipOutputStream(new BufferedOutputStream(new FileOutputStream(archiveName))) --> Line_31 $$ copy(zin, zout) [FD]
Line_19 $$ while (entry != null) --> Line_33 $$ entry = zin.getNextEntry() [CD]
Line_17 $$ ZipInputStream zin = new ZipInputStream(new FileInputStream(tempZip)) --> Line_33 $$ entry = zin.getNextEntry() [FD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_35 $$ zin.close() [CD]
Line_17 $$ ZipInputStream zin = new ZipInputStream(new FileInputStream(tempZip)) --> Line_35 $$ zin.close() [FD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_36 $$ zout.close() [CD]
Line_16 $$ ZipOutputStream zout = new ZipOutputStream(new BufferedOutputStream(new FileOutputStream(archiveName))) --> Line_36 $$ zout.close() [FD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_37 $$ zipFile.close() [CD]
Line_15 $$ ZipFile zipFile = new ZipFile(tempZip) --> Line_37 $$ zipFile.close() [FD]
Line_2 $$ private void SaveToArchive(Layer layer, String layerFileName) throws Exception --> Line_38 $$ tempZip.delete() [CD]
Line_9 $$ File tempZip = File.createTempFile("tmp", ".zip") --> Line_38 $$ tempZip.delete() [FD]
