Line_2 $$ public void process(HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_3 $$ String userAgentGroup = processUserAgent(request) [CD]
Line_2 $$ public void process(HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_3 $$ String userAgentGroup = processUserAgent(request) [FD]
Line_2 $$ public void process(HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_4 $$ final LiwenxRequest lRequest = new LiwenxRequestImpl(request, response, messageSource, userAgentGroup) [CD]
Line_2 $$ public void process(HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_5 $$ Locator loc = router.route(lRequest) [CD]
Line_4 $$ final LiwenxRequest lRequest = new LiwenxRequestImpl(request, response, messageSource, userAgentGroup) --> Line_5 $$ Locator loc = router.route(lRequest) [FD]
Line_2 $$ public void process(HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_6 $$ if (loc instanceof RedirectLocator) [CD]
Line_5 $$ Locator loc = router.route(lRequest) --> Line_6 $$ if (loc instanceof RedirectLocator) [FD]
Line_6 $$ if (loc instanceof RedirectLocator) --> Line_7 $$ response.sendRedirect(((RedirectLocator) loc).getPage()) [CD]
Line_2 $$ public void process(HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_7 $$ response.sendRedirect(((RedirectLocator) loc).getPage()) [FD]
Line_6 $$ if (loc instanceof RedirectLocator) --> Line_9 $$ ((AbstractLiwenxRequest) lRequest).setRequestedLocator(loc) [CD]
Line_5 $$ Locator loc = router.route(lRequest) --> Line_9 $$ ((AbstractLiwenxRequest) lRequest).setRequestedLocator(loc) [FD]
Line_4 $$ final LiwenxRequest lRequest = new LiwenxRequestImpl(request, response, messageSource, userAgentGroup) --> Line_11 $$ LiwenxResponse resp = processPage(lRequest, lRequest.getRequestedLocator(), maxRedirections) [FD]
Line_11 $$ LiwenxResponse resp = processPage(lRequest, lRequest.getRequestedLocator(), maxRedirections) --> Line_12 $$ processHeaders(resp, response) [FD]
Line_2 $$ public void process(HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_12 $$ processHeaders(resp, response) [FD]
Line_11 $$ LiwenxResponse resp = processPage(lRequest, lRequest.getRequestedLocator(), maxRedirections) --> Line_13 $$ processCookies(resp, response) [FD]
Line_2 $$ public void process(HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_13 $$ processCookies(resp, response) [FD]
Line_11 $$ LiwenxResponse resp = processPage(lRequest, lRequest.getRequestedLocator(), maxRedirections) --> Line_14 $$ if (resp instanceof ExternalRedirectionResponse) [FD]
Line_14 $$ if (resp instanceof ExternalRedirectionResponse) --> Line_15 $$ response.sendRedirect(((ExternalRedirectionResponse) resp).getRedirectTo()) [CD]
Line_2 $$ public void process(HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_15 $$ response.sendRedirect(((ExternalRedirectionResponse) resp).getRedirectTo()) [FD]
Line_14 $$ if (resp instanceof ExternalRedirectionResponse) --> Line_16 $$ if (resp instanceof BinaryResponse) [CD]
Line_11 $$ LiwenxResponse resp = processPage(lRequest, lRequest.getRequestedLocator(), maxRedirections) --> Line_16 $$ if (resp instanceof BinaryResponse) [FD]
Line_16 $$ if (resp instanceof BinaryResponse) --> Line_17 $$ BinaryResponse bResp = (BinaryResponse) resp [CD]
Line_16 $$ if (resp instanceof BinaryResponse) --> Line_18 $$ response.setContentType(bResp.getMimeType().toString()) [CD]
Line_2 $$ public void process(HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_18 $$ response.setContentType(bResp.getMimeType().toString()) [FD]
Line_17 $$ BinaryResponse bResp = (BinaryResponse) resp --> Line_18 $$ response.setContentType(bResp.getMimeType().toString()) [FD]
Line_16 $$ if (resp instanceof BinaryResponse) --> Line_19 $$ IOUtils.copy(bResp.getInputStream(), response.getOutputStream()) [CD]
Line_17 $$ BinaryResponse bResp = (BinaryResponse) resp --> Line_19 $$ IOUtils.copy(bResp.getInputStream(), response.getOutputStream()) [FD]
Line_2 $$ public void process(HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_19 $$ IOUtils.copy(bResp.getInputStream(), response.getOutputStream()) [FD]
Line_16 $$ if (resp instanceof BinaryResponse) --> Line_20 $$ if (resp instanceof XmlResponse) [CD]
Line_11 $$ LiwenxResponse resp = processPage(lRequest, lRequest.getRequestedLocator(), maxRedirections) --> Line_20 $$ if (resp instanceof XmlResponse) [FD]
Line_20 $$ if (resp instanceof XmlResponse) --> Line_21 $$ final Element root = ((XmlResponse) resp).getXml() [CD]
Line_20 $$ if (resp instanceof XmlResponse) --> Line_22 $$ Document doc = root.getDocument() [CD]
Line_21 $$ final Element root = ((XmlResponse) resp).getXml() --> Line_22 $$ Document doc = root.getDocument() [FD]
Line_20 $$ if (resp instanceof XmlResponse) --> Line_23 $$ if (doc == null) [CD]
Line_22 $$ Document doc = root.getDocument() --> Line_23 $$ if (doc == null) [FD]
Line_23 $$ if (doc == null) --> Line_24 $$ doc = new Document(root) [CD]
Line_22 $$ Document doc = root.getDocument() --> Line_24 $$ doc = new Document(root) [FD]
Line_20 $$ if (resp instanceof XmlResponse) --> Line_26 $$ final Locator l = lRequest.getCurrentLocator() [CD]
Line_4 $$ final LiwenxRequest lRequest = new LiwenxRequestImpl(request, response, messageSource, userAgentGroup) --> Line_26 $$ final Locator l = lRequest.getCurrentLocator() [FD]
Line_20 $$ if (resp instanceof XmlResponse) --> Line_27 $$ final Device device = l.getDevice() [CD]
Line_26 $$ final Locator l = lRequest.getCurrentLocator() --> Line_27 $$ final Device device = l.getDevice() [FD]
Line_20 $$ if (resp instanceof XmlResponse) --> Line_28 $$ response.setContentType(calculateContentType(device)) [CD]
Line_2 $$ public void process(HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_28 $$ response.setContentType(calculateContentType(device)) [FD]
Line_27 $$ final Device device = l.getDevice() --> Line_28 $$ response.setContentType(calculateContentType(device)) [FD]
Line_20 $$ if (resp instanceof XmlResponse) --> Line_29 $$ response.setCharacterEncoding(encoding) [CD]
Line_2 $$ public void process(HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_29 $$ response.setCharacterEncoding(encoding) [FD]
Line_20 $$ if (resp instanceof XmlResponse) --> Line_30 $$ if (device == Device.HTML) [CD]
Line_27 $$ final Device device = l.getDevice() --> Line_30 $$ if (device == Device.HTML) [FD]
Line_30 $$ if (device == Device.HTML) --> Line_31 $$ view.processView(doc, l.getLocale(), userAgentGroup, response.getWriter()) [CD]
Line_22 $$ Document doc = root.getDocument() --> Line_31 $$ view.processView(doc, l.getLocale(), userAgentGroup, response.getWriter()) [FD]
Line_24 $$ doc = new Document(root) --> Line_31 $$ view.processView(doc, l.getLocale(), userAgentGroup, response.getWriter()) [FD]
Line_3 $$ String userAgentGroup = processUserAgent(request) --> Line_31 $$ view.processView(doc, l.getLocale(), userAgentGroup, response.getWriter()) [FD]
Line_26 $$ final Locator l = lRequest.getCurrentLocator() --> Line_31 $$ view.processView(doc, l.getLocale(), userAgentGroup, response.getWriter()) [FD]
Line_2 $$ public void process(HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_31 $$ view.processView(doc, l.getLocale(), userAgentGroup, response.getWriter()) [FD]
Line_30 $$ if (device == Device.HTML) --> Line_33 $$ Serializer s = new Serializer(response.getOutputStream(), encoding) [CD]
Line_2 $$ public void process(HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_33 $$ Serializer s = new Serializer(response.getOutputStream(), encoding) [FD]
Line_30 $$ if (device == Device.HTML) --> Line_34 $$ s.write(doc) [CD]
Line_33 $$ Serializer s = new Serializer(response.getOutputStream(), encoding) --> Line_34 $$ s.write(doc) [FD]
Line_22 $$ Document doc = root.getDocument() --> Line_34 $$ s.write(doc) [FD]
Line_24 $$ doc = new Document(root) --> Line_34 $$ s.write(doc) [FD]
Line_2 $$ public void process(HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_38 $$ response.sendError(HttpServletResponse.SC_NOT_FOUND) [FD]
