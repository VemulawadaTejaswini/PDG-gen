Line_2 $$ public void testExplicitHeaders() throws Exception --> Line_3 $$ String headerString = "X-Foo=bar&X-Bar=baz%20foo" [CD]
Line_2 $$ public void testExplicitHeaders() throws Exception --> Line_4 $$ HttpRequest expected = new HttpRequest(REQUEST_URL).addHeader("X-Foo", "bar").addHeader("X-Bar", "baz foo") [CD]
Line_2 $$ public void testExplicitHeaders() throws Exception --> Line_5 $$ expect(pipeline.execute(expected)).andReturn(new HttpResponse(RESPONSE_BODY)) [CD]
Line_4 $$ HttpRequest expected = new HttpRequest(REQUEST_URL).addHeader("X-Foo", "bar").addHeader("X-Bar", "baz foo") --> Line_5 $$ expect(pipeline.execute(expected)).andReturn(new HttpResponse(RESPONSE_BODY)) [FD]
Line_2 $$ public void testExplicitHeaders() throws Exception --> Line_6 $$ expect(request.getParameter(MakeRequestHandler.HEADERS_PARAM)).andReturn(headerString) [CD]
Line_3 $$ String headerString = "X-Foo=bar&X-Bar=baz%20foo" --> Line_6 $$ expect(request.getParameter(MakeRequestHandler.HEADERS_PARAM)).andReturn(headerString) [FD]
Line_2 $$ public void testExplicitHeaders() throws Exception --> Line_7 $$ replay() [CD]
Line_2 $$ public void testExplicitHeaders() throws Exception --> Line_8 $$ handler.fetch(request, recorder) [CD]
Line_2 $$ public void testExplicitHeaders() throws Exception --> Line_9 $$ verify() [CD]
Line_2 $$ public void testExplicitHeaders() throws Exception --> Line_10 $$ JSONObject results = extractJsonFromResponse() [CD]
Line_2 $$ public void testExplicitHeaders() throws Exception --> Line_11 $$ assertEquals(HttpResponse.SC_OK, results.getInt("rc")) [CD]
Line_10 $$ JSONObject results = extractJsonFromResponse() --> Line_11 $$ assertEquals(HttpResponse.SC_OK, results.getInt("rc")) [FD]
Line_2 $$ public void testExplicitHeaders() throws Exception --> Line_12 $$ assertEquals(RESPONSE_BODY, results.get("body")) [CD]
Line_10 $$ JSONObject results = extractJsonFromResponse() --> Line_12 $$ assertEquals(RESPONSE_BODY, results.get("body")) [FD]
Line_2 $$ public void testExplicitHeaders() throws Exception --> Line_13 $$ assertTrue(rewriter.responseWasRewritten()) [CD]
