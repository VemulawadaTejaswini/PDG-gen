Line_2 $$ private void redirect(TargetApp app, HttpServletRequest request, HttpServletResponse response) throws IOException --> Line_3 $$ URL url = new URL(app.getUrl() + request.getRequestURI()) [CD]
Line_2 $$ private void redirect(TargetApp app, HttpServletRequest request, HttpServletResponse response) throws IOException --> Line_3 $$ URL url = new URL(app.getUrl() + request.getRequestURI()) [FD]
Line_2 $$ private void redirect(TargetApp app, HttpServletRequest request, HttpServletResponse response) throws IOException --> Line_4 $$ s_log.debug("Redirecting to " + url) [CD]
Line_2 $$ private void redirect(TargetApp app, HttpServletRequest request, HttpServletResponse response) throws IOException --> Line_5 $$ URLConnection urlConnection = url.openConnection() [CD]
Line_3 $$ URL url = new URL(app.getUrl() + request.getRequestURI()) --> Line_5 $$ URLConnection urlConnection = url.openConnection() [FD]
Line_2 $$ private void redirect(TargetApp app, HttpServletRequest request, HttpServletResponse response) throws IOException --> Line_6 $$ Map<String, List<String>> fields = urlConnection.getHeaderFields() [CD]
Line_5 $$ URLConnection urlConnection = url.openConnection() --> Line_6 $$ Map<String, List<String>> fields = urlConnection.getHeaderFields() [FD]
Line_6 $$ Map<String, List<String>> fields = urlConnection.getHeaderFields() --> Line_7 $$ for (String key : fields.keySet()) [FD]
Line_6 $$ Map<String, List<String>> fields = urlConnection.getHeaderFields() --> Line_10 $$ for (String value : fields.get(key)) [FD]
Line_7 $$ for (String key : fields.keySet()) --> Line_10 $$ for (String value : fields.get(key)) [FD]
Line_11 $$ if (comma) --> Line_12 $$ values.append(", ") [CD]
Line_8 $$ StringBuffer values = new StringBuffer() --> Line_12 $$ values.append(", ") [FD]
Line_8 $$ StringBuffer values = new StringBuffer() --> Line_14 $$ values.append(value) [FD]
Line_10 $$ for (String value : fields.get(key)) --> Line_14 $$ values.append(value) [FD]
Line_9 $$ boolean comma = false --> Line_15 $$ comma = true [FD]
Line_7 $$ for (String key : fields.keySet()) --> Line_17 $$ if (key != null) [FD]
Line_17 $$ if (key != null) --> Line_18 $$ response.setHeader(key, values.toString()) [CD]
Line_2 $$ private void redirect(TargetApp app, HttpServletRequest request, HttpServletResponse response) throws IOException --> Line_18 $$ response.setHeader(key, values.toString()) [FD]
Line_7 $$ for (String key : fields.keySet()) --> Line_18 $$ response.setHeader(key, values.toString()) [FD]
Line_8 $$ StringBuffer values = new StringBuffer() --> Line_18 $$ response.setHeader(key, values.toString()) [FD]
Line_17 $$ if (key != null) --> Line_20 $$ response.setStatus(Integer.parseInt(values.toString().split(" ")[1])) [CD]
Line_2 $$ private void redirect(TargetApp app, HttpServletRequest request, HttpServletResponse response) throws IOException --> Line_20 $$ response.setStatus(Integer.parseInt(values.toString().split(" ")[1])) [FD]
Line_8 $$ StringBuffer values = new StringBuffer() --> Line_20 $$ response.setStatus(Integer.parseInt(values.toString().split(" ")[1])) [FD]
Line_2 $$ private void redirect(TargetApp app, HttpServletRequest request, HttpServletResponse response) throws IOException --> Line_23 $$ InputStream in = urlConnection.getInputStream() [CD]
Line_5 $$ URLConnection urlConnection = url.openConnection() --> Line_23 $$ InputStream in = urlConnection.getInputStream() [FD]
Line_2 $$ private void redirect(TargetApp app, HttpServletRequest request, HttpServletResponse response) throws IOException --> Line_25 $$ ServletOutputStream out = response.getOutputStream() [FD]
Line_27 $$ int len --> Line_28 $$ while ((len = in.read(buff)) != -1) [FD]
Line_23 $$ InputStream in = urlConnection.getInputStream() --> Line_28 $$ while ((len = in.read(buff)) != -1) [FD]
Line_26 $$ byte[] buff = new byte[1024] --> Line_28 $$ while ((len = in.read(buff)) != -1) [FD]
Line_28 $$ while ((len = in.read(buff)) != -1) --> Line_29 $$ out.write(buff, 0, len) [CD]
Line_28 $$ while ((len = in.read(buff)) != -1) --> Line_29 $$ out.write(buff, 0, len) [FD]
Line_25 $$ ServletOutputStream out = response.getOutputStream() --> Line_29 $$ out.write(buff, 0, len) [FD]
Line_26 $$ byte[] buff = new byte[1024] --> Line_29 $$ out.write(buff, 0, len) [FD]
Line_27 $$ int len --> Line_29 $$ out.write(buff, 0, len) [FD]
Line_23 $$ InputStream in = urlConnection.getInputStream() --> Line_32 $$ in.close() [FD]
