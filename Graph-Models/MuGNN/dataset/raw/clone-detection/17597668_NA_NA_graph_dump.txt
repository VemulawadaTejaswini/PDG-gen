Line_2 $$ private boolean copyFiles(File sourceDir, File destinationDir) --> Line_3 $$ boolean result = false [CD]
Line_2 $$ private boolean copyFiles(File sourceDir, File destinationDir) --> Line_5 $$ if (sourceDir != null && destinationDir != null && sourceDir.exists() && destinationDir.exists() && sourceDir.isDirectory() && destinationDir.isDirectory()) [FD]
Line_5 $$ if (sourceDir != null && destinationDir != null && sourceDir.exists() && destinationDir.exists() && sourceDir.isDirectory() && destinationDir.isDirectory()) --> Line_6 $$ File sourceFiles[] = sourceDir.listFiles() [CD]
Line_2 $$ private boolean copyFiles(File sourceDir, File destinationDir) --> Line_6 $$ File sourceFiles[] = sourceDir.listFiles() [FD]
Line_5 $$ if (sourceDir != null && destinationDir != null && sourceDir.exists() && destinationDir.exists() && sourceDir.isDirectory() && destinationDir.isDirectory()) --> Line_7 $$ if (sourceFiles != null && sourceFiles.length > 0) [CD]
Line_7 $$ if (sourceFiles != null && sourceFiles.length > 0) --> Line_8 $$ File destFiles[] = destinationDir.listFiles() [CD]
Line_2 $$ private boolean copyFiles(File sourceDir, File destinationDir) --> Line_8 $$ File destFiles[] = destinationDir.listFiles() [FD]
Line_7 $$ if (sourceFiles != null && sourceFiles.length > 0) --> Line_9 $$ if (destFiles != null && destFiles.length > 0) [CD]
Line_9 $$ if (destFiles != null && destFiles.length > 0) --> Line_10 $$ for (int i = 0; i < destFiles.length; i++) [CD]
Line_10 $$ for (int i = 0; i < destFiles.length; i++) --> Line_11 $$ if (destFiles[i] != null) [CD]
Line_11 $$ if (destFiles[i] != null) --> Line_12 $$ destFiles[i].delete() [CD]
Line_7 $$ if (sourceFiles != null && sourceFiles.length > 0) --> Line_16 $$ for (int i = 0; i < sourceFiles.length; i++) [CD]
Line_10 $$ for (int i = 0; i < destFiles.length; i++) --> Line_16 $$ for (int i = 0; i < sourceFiles.length; i++) [FD]
Line_16 $$ for (int i = 0; i < sourceFiles.length; i++) --> Line_17 $$ if (sourceFiles[i] != null && sourceFiles[i].exists() && sourceFiles[i].isFile()) [CD]
Line_17 $$ if (sourceFiles[i] != null && sourceFiles[i].exists() && sourceFiles[i].isFile()) --> Line_18 $$ String fileName = destFiles[i].getName() [CD]
Line_17 $$ if (sourceFiles[i] != null && sourceFiles[i].exists() && sourceFiles[i].isFile()) --> Line_19 $$ File destFile = new File(destinationDir.getAbsolutePath() + "/" + fileName) [CD]
Line_2 $$ private boolean copyFiles(File sourceDir, File destinationDir) --> Line_19 $$ File destFile = new File(destinationDir.getAbsolutePath() + "/" + fileName) [FD]
Line_17 $$ if (sourceFiles[i] != null && sourceFiles[i].exists() && sourceFiles[i].isFile()) --> Line_20 $$ destFile.createNewFile() [CD]
Line_19 $$ File destFile = new File(destinationDir.getAbsolutePath() + "/" + fileName) --> Line_20 $$ destFile.createNewFile() [FD]
Line_17 $$ if (sourceFiles[i] != null && sourceFiles[i].exists() && sourceFiles[i].isFile()) --> Line_21 $$ FileInputStream in = new FileInputStream(sourceFiles[i]) [CD]
Line_17 $$ if (sourceFiles[i] != null && sourceFiles[i].exists() && sourceFiles[i].isFile()) --> Line_22 $$ FileOutputStream out = new FileOutputStream(destFile) [CD]
Line_17 $$ if (sourceFiles[i] != null && sourceFiles[i].exists() && sourceFiles[i].isFile()) --> Line_23 $$ FileChannel fcIn = in.getChannel() [CD]
Line_21 $$ FileInputStream in = new FileInputStream(sourceFiles[i]) --> Line_23 $$ FileChannel fcIn = in.getChannel() [FD]
Line_17 $$ if (sourceFiles[i] != null && sourceFiles[i].exists() && sourceFiles[i].isFile()) --> Line_24 $$ FileChannel fcOut = out.getChannel() [CD]
Line_22 $$ FileOutputStream out = new FileOutputStream(destFile) --> Line_24 $$ FileChannel fcOut = out.getChannel() [FD]
Line_17 $$ if (sourceFiles[i] != null && sourceFiles[i].exists() && sourceFiles[i].isFile()) --> Line_25 $$ fcIn.transferTo(0, fcIn.size(), fcOut) [CD]
Line_23 $$ FileChannel fcIn = in.getChannel() --> Line_25 $$ fcIn.transferTo(0, fcIn.size(), fcOut) [FD]
Line_24 $$ FileChannel fcOut = out.getChannel() --> Line_25 $$ fcIn.transferTo(0, fcIn.size(), fcOut) [FD]
Line_3 $$ boolean result = false --> Line_30 $$ result = true [FD]
Line_2 $$ private boolean copyFiles(File sourceDir, File destinationDir) --> Line_34 $$ return result [CD]
