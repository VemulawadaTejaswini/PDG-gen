Line_2 $$ private static void loadProperties(Properties props, String res, boolean warnIfNotFound) throws IOException --> Line_3 $$ log.debug("Reading properties from resource " + res) [CD]
Line_2 $$ private static void loadProperties(Properties props, String res, boolean warnIfNotFound) throws IOException --> Line_4 $$ URL url = ResourceFileStorageFactory.class.getResource(res) [CD]
Line_2 $$ private static void loadProperties(Properties props, String res, boolean warnIfNotFound) throws IOException --> Line_4 $$ URL url = ResourceFileStorageFactory.class.getResource(res) [FD]
Line_2 $$ private static void loadProperties(Properties props, String res, boolean warnIfNotFound) throws IOException --> Line_5 $$ if (null == url) [CD]
Line_5 $$ if (null == url) --> Line_6 $$ if (warnIfNotFound) [CD]
Line_6 $$ if (warnIfNotFound) --> Line_7 $$ log.warn("Resource " + res + " was not found") [CD]
Line_6 $$ if (warnIfNotFound) --> Line_9 $$ log.debug("Resource " + res + " was not found") [CD]
Line_5 $$ if (null == url) --> Line_12 $$ InputStream in = url.openStream() [CD]
Line_2 $$ private static void loadProperties(Properties props, String res, boolean warnIfNotFound) throws IOException --> Line_14 $$ props.load(in) [FD]
Line_12 $$ InputStream in = url.openStream() --> Line_14 $$ props.load(in) [FD]
Line_12 $$ InputStream in = url.openStream() --> Line_16 $$ in.close() [FD]
