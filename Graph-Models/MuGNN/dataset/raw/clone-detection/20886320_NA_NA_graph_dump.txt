Line_2 $$ public List<SearchResult> search(String query, SortOrder order, int maxResults) throws Exception --> Line_3 $$ if (query == null) [CD]
Line_2 $$ public List<SearchResult> search(String query, SortOrder order, int maxResults) throws Exception --> Line_3 $$ if (query == null) [FD]
Line_3 $$ if (query == null) --> Line_4 $$ return null [CD]
Line_2 $$ public List<SearchResult> search(String query, SortOrder order, int maxResults) throws Exception --> Line_6 $$ String encodedQuery = "" [CD]
Line_6 $$ String encodedQuery = "" --> Line_8 $$ encodedQuery = URLEncoder.encode(query, "UTF-8") [FD]
Line_2 $$ public List<SearchResult> search(String query, SortOrder order, int maxResults) throws Exception --> Line_8 $$ encodedQuery = URLEncoder.encode(query, "UTF-8") [FD]
Line_2 $$ public List<SearchResult> search(String query, SortOrder order, int maxResults) throws Exception --> Line_12 $$ final int startAt = 0 [CD]
Line_2 $$ public List<SearchResult> search(String query, SortOrder order, int maxResults) throws Exception --> Line_13 $$ final int pageNr = (startAt - 1) / 30 [CD]
Line_2 $$ public List<SearchResult> search(String query, SortOrder order, int maxResults) throws Exception --> Line_14 $$ final String url = String.format(QUERYURL, encodedQuery, String.valueOf(pageNr), (order == SortOrder.BySeeders ? SORT_SEEDS : SORT_COMPOSITE)) [CD]
Line_6 $$ String encodedQuery = "" --> Line_14 $$ final String url = String.format(QUERYURL, encodedQuery, String.valueOf(pageNr), (order == SortOrder.BySeeders ? SORT_SEEDS : SORT_COMPOSITE)) [FD]
Line_8 $$ encodedQuery = URLEncoder.encode(query, "UTF-8") --> Line_14 $$ final String url = String.format(QUERYURL, encodedQuery, String.valueOf(pageNr), (order == SortOrder.BySeeders ? SORT_SEEDS : SORT_COMPOSITE)) [FD]
Line_13 $$ final int pageNr = (startAt - 1) / 30 --> Line_14 $$ final String url = String.format(QUERYURL, encodedQuery, String.valueOf(pageNr), (order == SortOrder.BySeeders ? SORT_SEEDS : SORT_COMPOSITE)) [FD]
Line_2 $$ public List<SearchResult> search(String query, SortOrder order, int maxResults) throws Exception --> Line_15 $$ HttpParams httpparams = new BasicHttpParams() [CD]
Line_2 $$ public List<SearchResult> search(String query, SortOrder order, int maxResults) throws Exception --> Line_16 $$ HttpConnectionParams.setConnectionTimeout(httpparams, CONNECTION_TIMEOUT) [CD]
Line_15 $$ HttpParams httpparams = new BasicHttpParams() --> Line_16 $$ HttpConnectionParams.setConnectionTimeout(httpparams, CONNECTION_TIMEOUT) [FD]
Line_2 $$ public List<SearchResult> search(String query, SortOrder order, int maxResults) throws Exception --> Line_17 $$ HttpConnectionParams.setSoTimeout(httpparams, CONNECTION_TIMEOUT) [CD]
Line_15 $$ HttpParams httpparams = new BasicHttpParams() --> Line_17 $$ HttpConnectionParams.setSoTimeout(httpparams, CONNECTION_TIMEOUT) [FD]
Line_2 $$ public List<SearchResult> search(String query, SortOrder order, int maxResults) throws Exception --> Line_18 $$ DefaultHttpClient httpclient = new DefaultHttpClient(httpparams) [CD]
Line_2 $$ public List<SearchResult> search(String query, SortOrder order, int maxResults) throws Exception --> Line_19 $$ httpclient.getParams().setParameter("http.useragent", "Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.2) Gecko/20100316 Firefox/3.6.2") [CD]
Line_18 $$ DefaultHttpClient httpclient = new DefaultHttpClient(httpparams) --> Line_19 $$ httpclient.getParams().setParameter("http.useragent", "Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.2) Gecko/20100316 Firefox/3.6.2") [FD]
Line_2 $$ public List<SearchResult> search(String query, SortOrder order, int maxResults) throws Exception --> Line_20 $$ HttpGet httpget = new HttpGet(url) [CD]
Line_2 $$ public List<SearchResult> search(String query, SortOrder order, int maxResults) throws Exception --> Line_21 $$ HttpResponse response = httpclient.execute(httpget) [CD]
Line_18 $$ DefaultHttpClient httpclient = new DefaultHttpClient(httpparams) --> Line_21 $$ HttpResponse response = httpclient.execute(httpget) [FD]
Line_20 $$ HttpGet httpget = new HttpGet(url) --> Line_21 $$ HttpResponse response = httpclient.execute(httpget) [FD]
Line_2 $$ public List<SearchResult> search(String query, SortOrder order, int maxResults) throws Exception --> Line_22 $$ InputStream instream = response.getEntity().getContent() [CD]
Line_21 $$ HttpResponse response = httpclient.execute(httpget) --> Line_22 $$ InputStream instream = response.getEntity().getContent() [FD]
Line_2 $$ public List<SearchResult> search(String query, SortOrder order, int maxResults) throws Exception --> Line_23 $$ String html = HttpHelper.ConvertStreamToString(instream) [CD]
Line_22 $$ InputStream instream = response.getEntity().getContent() --> Line_23 $$ String html = HttpHelper.ConvertStreamToString(instream) [FD]
Line_2 $$ public List<SearchResult> search(String query, SortOrder order, int maxResults) throws Exception --> Line_24 $$ instream.close() [CD]
Line_22 $$ InputStream instream = response.getEntity().getContent() --> Line_24 $$ instream.close() [FD]
Line_2 $$ public List<SearchResult> search(String query, SortOrder order, int maxResults) throws Exception --> Line_25 $$ return parseHtml(html) [CD]
Line_23 $$ String html = HttpHelper.ConvertStreamToString(instream) --> Line_25 $$ return parseHtml(html) [FD]
