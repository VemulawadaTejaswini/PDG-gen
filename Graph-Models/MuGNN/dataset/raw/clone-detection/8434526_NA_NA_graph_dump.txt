Line_4 $$ ZipInputStream zipInputStream = new ZipInputStream(this.getOfficeOpenXMLDocumentURL().openStream()) --> Line_7 $$ while (null != (zipEntry = zipInputStream.getNextEntry())) [FD]
Line_3 $$ ZipOutputStream zipOutputStream = new ZipOutputStream(signedOOXMLOutputStream) --> Line_10 $$ zipOutputStream.putNextEntry(newZipEntry) [FD]
Line_4 $$ ZipInputStream zipInputStream = new ZipInputStream(this.getOfficeOpenXMLDocumentURL().openStream()) --> Line_12 $$ Document contentTypesDocument = loadDocumentNoClose(zipInputStream) [FD]
Line_12 $$ Document contentTypesDocument = loadDocumentNoClose(zipInputStream) --> Line_13 $$ Element typesElement = contentTypesDocument.getDocumentElement() [FD]
Line_12 $$ Document contentTypesDocument = loadDocumentNoClose(zipInputStream) --> Line_14 $$ Element overrideElement = contentTypesDocument.createElementNS("http://schemas.openxmlformats.org/package/2006/content-types", "Override") [FD]
Line_14 $$ Element overrideElement = contentTypesDocument.createElementNS("http://schemas.openxmlformats.org/package/2006/content-types", "Override") --> Line_15 $$ overrideElement.setAttribute("PartName", "/" + signatureZipEntryName) [FD]
Line_14 $$ Element overrideElement = contentTypesDocument.createElementNS("http://schemas.openxmlformats.org/package/2006/content-types", "Override") --> Line_16 $$ overrideElement.setAttribute("ContentType", "application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml") [FD]
Line_13 $$ Element typesElement = contentTypesDocument.getDocumentElement() --> Line_17 $$ typesElement.appendChild(overrideElement) [FD]
Line_14 $$ Element overrideElement = contentTypesDocument.createElementNS("http://schemas.openxmlformats.org/package/2006/content-types", "Override") --> Line_17 $$ typesElement.appendChild(overrideElement) [FD]
Line_12 $$ Document contentTypesDocument = loadDocumentNoClose(zipInputStream) --> Line_18 $$ Element nsElement = contentTypesDocument.createElement("ns") [FD]
Line_18 $$ Element nsElement = contentTypesDocument.createElement("ns") --> Line_19 $$ nsElement.setAttributeNS(Constants.NamespaceSpecNS, "xmlns:tns", "http://schemas.openxmlformats.org/package/2006/content-types") [FD]
Line_12 $$ Document contentTypesDocument = loadDocumentNoClose(zipInputStream) --> Line_20 $$ NodeList nodeList = XPathAPI.selectNodeList(contentTypesDocument, "/tns:Types/tns:Default[@Extension='sigs']", nsElement) [FD]
Line_18 $$ Element nsElement = contentTypesDocument.createElement("ns") --> Line_20 $$ NodeList nodeList = XPathAPI.selectNodeList(contentTypesDocument, "/tns:Types/tns:Default[@Extension='sigs']", nsElement) [FD]
Line_20 $$ NodeList nodeList = XPathAPI.selectNodeList(contentTypesDocument, "/tns:Types/tns:Default[@Extension='sigs']", nsElement) --> Line_21 $$ if (0 == nodeList.getLength()) [FD]
Line_21 $$ if (0 == nodeList.getLength()) --> Line_22 $$ Element defaultElement = contentTypesDocument.createElementNS("http://schemas.openxmlformats.org/package/2006/content-types", "Default") [CD]
Line_12 $$ Document contentTypesDocument = loadDocumentNoClose(zipInputStream) --> Line_22 $$ Element defaultElement = contentTypesDocument.createElementNS("http://schemas.openxmlformats.org/package/2006/content-types", "Default") [FD]
Line_21 $$ if (0 == nodeList.getLength()) --> Line_23 $$ defaultElement.setAttribute("Extension", "sigs") [CD]
Line_22 $$ Element defaultElement = contentTypesDocument.createElementNS("http://schemas.openxmlformats.org/package/2006/content-types", "Default") --> Line_23 $$ defaultElement.setAttribute("Extension", "sigs") [FD]
Line_21 $$ if (0 == nodeList.getLength()) --> Line_24 $$ defaultElement.setAttribute("ContentType", "application/vnd.openxmlformats-package.digital-signature-origin") [CD]
Line_22 $$ Element defaultElement = contentTypesDocument.createElementNS("http://schemas.openxmlformats.org/package/2006/content-types", "Default") --> Line_24 $$ defaultElement.setAttribute("ContentType", "application/vnd.openxmlformats-package.digital-signature-origin") [FD]
Line_21 $$ if (0 == nodeList.getLength()) --> Line_25 $$ typesElement.appendChild(defaultElement) [CD]
Line_13 $$ Element typesElement = contentTypesDocument.getDocumentElement() --> Line_25 $$ typesElement.appendChild(defaultElement) [FD]
Line_22 $$ Element defaultElement = contentTypesDocument.createElementNS("http://schemas.openxmlformats.org/package/2006/content-types", "Default") --> Line_25 $$ typesElement.appendChild(defaultElement) [FD]
Line_12 $$ Document contentTypesDocument = loadDocumentNoClose(zipInputStream) --> Line_27 $$ writeDocumentNoClosing(contentTypesDocument, zipOutputStream, false) [FD]
Line_3 $$ ZipOutputStream zipOutputStream = new ZipOutputStream(signedOOXMLOutputStream) --> Line_27 $$ writeDocumentNoClosing(contentTypesDocument, zipOutputStream, false) [FD]
Line_4 $$ ZipInputStream zipInputStream = new ZipInputStream(this.getOfficeOpenXMLDocumentURL().openStream()) --> Line_29 $$ Document relsDocument = loadDocumentNoClose(zipInputStream) [FD]
Line_29 $$ Document relsDocument = loadDocumentNoClose(zipInputStream) --> Line_30 $$ Element nsElement = relsDocument.createElement("ns") [FD]
Line_18 $$ Element nsElement = contentTypesDocument.createElement("ns") --> Line_31 $$ nsElement.setAttributeNS(Constants.NamespaceSpecNS, "xmlns:tns", "http://schemas.openxmlformats.org/package/2006/relationships") [FD]
Line_29 $$ Document relsDocument = loadDocumentNoClose(zipInputStream) --> Line_32 $$ NodeList nodeList = XPathAPI.selectNodeList(relsDocument, "/tns:Relationships/tns:Relationship[@Target='_xmlsignatures/origin.sigs']", nsElement) [FD]
Line_18 $$ Element nsElement = contentTypesDocument.createElement("ns") --> Line_32 $$ NodeList nodeList = XPathAPI.selectNodeList(relsDocument, "/tns:Relationships/tns:Relationship[@Target='_xmlsignatures/origin.sigs']", nsElement) [FD]
Line_20 $$ NodeList nodeList = XPathAPI.selectNodeList(contentTypesDocument, "/tns:Types/tns:Default[@Extension='sigs']", nsElement) --> Line_33 $$ if (0 == nodeList.getLength()) [FD]
Line_33 $$ if (0 == nodeList.getLength()) --> Line_34 $$ Element relationshipElement = relsDocument.createElementNS("http://schemas.openxmlformats.org/package/2006/relationships", "Relationship") [CD]
Line_29 $$ Document relsDocument = loadDocumentNoClose(zipInputStream) --> Line_34 $$ Element relationshipElement = relsDocument.createElementNS("http://schemas.openxmlformats.org/package/2006/relationships", "Relationship") [FD]
Line_33 $$ if (0 == nodeList.getLength()) --> Line_35 $$ relationshipElement.setAttribute("Id", "rel-id-" + UUID.randomUUID().toString()) [CD]
Line_34 $$ Element relationshipElement = relsDocument.createElementNS("http://schemas.openxmlformats.org/package/2006/relationships", "Relationship") --> Line_35 $$ relationshipElement.setAttribute("Id", "rel-id-" + UUID.randomUUID().toString()) [FD]
Line_33 $$ if (0 == nodeList.getLength()) --> Line_36 $$ relationshipElement.setAttribute("Type", "http://schemas.openxmlformats.org/package/2006/relationships/digital-signature/origin") [CD]
Line_34 $$ Element relationshipElement = relsDocument.createElementNS("http://schemas.openxmlformats.org/package/2006/relationships", "Relationship") --> Line_36 $$ relationshipElement.setAttribute("Type", "http://schemas.openxmlformats.org/package/2006/relationships/digital-signature/origin") [FD]
Line_33 $$ if (0 == nodeList.getLength()) --> Line_37 $$ relationshipElement.setAttribute("Target", "_xmlsignatures/origin.sigs") [CD]
Line_34 $$ Element relationshipElement = relsDocument.createElementNS("http://schemas.openxmlformats.org/package/2006/relationships", "Relationship") --> Line_37 $$ relationshipElement.setAttribute("Target", "_xmlsignatures/origin.sigs") [FD]
Line_33 $$ if (0 == nodeList.getLength()) --> Line_38 $$ relsDocument.getDocumentElement().appendChild(relationshipElement) [CD]
Line_34 $$ Element relationshipElement = relsDocument.createElementNS("http://schemas.openxmlformats.org/package/2006/relationships", "Relationship") --> Line_38 $$ relsDocument.getDocumentElement().appendChild(relationshipElement) [FD]
Line_29 $$ Document relsDocument = loadDocumentNoClose(zipInputStream) --> Line_38 $$ relsDocument.getDocumentElement().appendChild(relationshipElement) [FD]
Line_29 $$ Document relsDocument = loadDocumentNoClose(zipInputStream) --> Line_40 $$ writeDocumentNoClosing(relsDocument, zipOutputStream, false) [FD]
Line_3 $$ ZipOutputStream zipOutputStream = new ZipOutputStream(signedOOXMLOutputStream) --> Line_40 $$ writeDocumentNoClosing(relsDocument, zipOutputStream, false) [FD]
Line_6 $$ boolean hasOriginSigsRels = false --> Line_42 $$ hasOriginSigsRels = true [FD]
Line_4 $$ ZipInputStream zipInputStream = new ZipInputStream(this.getOfficeOpenXMLDocumentURL().openStream()) --> Line_43 $$ Document originSignRelsDocument = loadDocumentNoClose(zipInputStream) [FD]
Line_43 $$ Document originSignRelsDocument = loadDocumentNoClose(zipInputStream) --> Line_44 $$ Element relationshipElement = originSignRelsDocument.createElementNS("http://schemas.openxmlformats.org/package/2006/relationships", "Relationship") [FD]
Line_34 $$ Element relationshipElement = relsDocument.createElementNS("http://schemas.openxmlformats.org/package/2006/relationships", "Relationship") --> Line_46 $$ relationshipElement.setAttribute("Id", relationshipId) [FD]
Line_45 $$ String relationshipId = "rel-" + UUID.randomUUID().toString() --> Line_46 $$ relationshipElement.setAttribute("Id", relationshipId) [FD]
Line_34 $$ Element relationshipElement = relsDocument.createElementNS("http://schemas.openxmlformats.org/package/2006/relationships", "Relationship") --> Line_47 $$ relationshipElement.setAttribute("Type", "http://schemas.openxmlformats.org/package/2006/relationships/digital-signature/signature") [FD]
Line_34 $$ Element relationshipElement = relsDocument.createElementNS("http://schemas.openxmlformats.org/package/2006/relationships", "Relationship") --> Line_50 $$ relationshipElement.setAttribute("Target", target) [FD]
Line_34 $$ Element relationshipElement = relsDocument.createElementNS("http://schemas.openxmlformats.org/package/2006/relationships", "Relationship") --> Line_51 $$ originSignRelsDocument.getDocumentElement().appendChild(relationshipElement) [FD]
Line_43 $$ Document originSignRelsDocument = loadDocumentNoClose(zipInputStream) --> Line_51 $$ originSignRelsDocument.getDocumentElement().appendChild(relationshipElement) [FD]
Line_43 $$ Document originSignRelsDocument = loadDocumentNoClose(zipInputStream) --> Line_52 $$ writeDocumentNoClosing(originSignRelsDocument, zipOutputStream, false) [FD]
Line_3 $$ ZipOutputStream zipOutputStream = new ZipOutputStream(signedOOXMLOutputStream) --> Line_52 $$ writeDocumentNoClosing(originSignRelsDocument, zipOutputStream, false) [FD]
Line_4 $$ ZipInputStream zipInputStream = new ZipInputStream(this.getOfficeOpenXMLDocumentURL().openStream()) --> Line_54 $$ IOUtils.copy(zipInputStream, zipOutputStream) [FD]
Line_3 $$ ZipOutputStream zipOutputStream = new ZipOutputStream(signedOOXMLOutputStream) --> Line_54 $$ IOUtils.copy(zipInputStream, zipOutputStream) [FD]
Line_42 $$ hasOriginSigsRels = true --> Line_57 $$ if (false == hasOriginSigsRels) [FD]
Line_6 $$ boolean hasOriginSigsRels = false --> Line_57 $$ if (false == hasOriginSigsRels) [FD]
Line_57 $$ if (false == hasOriginSigsRels) --> Line_58 $$ addOriginSigsRels(signatureZipEntryName, zipOutputStream) [CD]
Line_3 $$ ZipOutputStream zipOutputStream = new ZipOutputStream(signedOOXMLOutputStream) --> Line_58 $$ addOriginSigsRels(signatureZipEntryName, zipOutputStream) [FD]
Line_57 $$ if (false == hasOriginSigsRels) --> Line_59 $$ addOriginSigs(zipOutputStream) [CD]
Line_3 $$ ZipOutputStream zipOutputStream = new ZipOutputStream(signedOOXMLOutputStream) --> Line_59 $$ addOriginSigs(zipOutputStream) [FD]
Line_4 $$ ZipInputStream zipInputStream = new ZipInputStream(this.getOfficeOpenXMLDocumentURL().openStream()) --> Line_61 $$ zipInputStream.close() [FD]
