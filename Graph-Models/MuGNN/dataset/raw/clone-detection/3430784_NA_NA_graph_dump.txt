Line_2 $$ public static Body decodeBody(InputStream in, String contentTransferEncoding) throws IOException --> Line_3 $$ if (contentTransferEncoding != null) [CD]
Line_2 $$ public static Body decodeBody(InputStream in, String contentTransferEncoding) throws IOException --> Line_3 $$ if (contentTransferEncoding != null) [FD]
Line_3 $$ if (contentTransferEncoding != null) --> Line_4 $$ contentTransferEncoding = MimeUtility.getHeaderParameter(contentTransferEncoding, null) [CD]
Line_2 $$ public static Body decodeBody(InputStream in, String contentTransferEncoding) throws IOException --> Line_4 $$ contentTransferEncoding = MimeUtility.getHeaderParameter(contentTransferEncoding, null) [FD]
Line_3 $$ if (contentTransferEncoding != null) --> Line_5 $$ if ("quoted-printable".equalsIgnoreCase(contentTransferEncoding)) [CD]
Line_2 $$ public static Body decodeBody(InputStream in, String contentTransferEncoding) throws IOException --> Line_5 $$ if ("quoted-printable".equalsIgnoreCase(contentTransferEncoding)) [FD]
Line_4 $$ contentTransferEncoding = MimeUtility.getHeaderParameter(contentTransferEncoding, null) --> Line_5 $$ if ("quoted-printable".equalsIgnoreCase(contentTransferEncoding)) [FD]
Line_5 $$ if ("quoted-printable".equalsIgnoreCase(contentTransferEncoding)) --> Line_6 $$ in = new QuotedPrintableInputStream(in) [CD]
Line_2 $$ public static Body decodeBody(InputStream in, String contentTransferEncoding) throws IOException --> Line_6 $$ in = new QuotedPrintableInputStream(in) [FD]
Line_5 $$ if ("quoted-printable".equalsIgnoreCase(contentTransferEncoding)) --> Line_7 $$ if ("base64".equalsIgnoreCase(contentTransferEncoding)) [CD]
Line_2 $$ public static Body decodeBody(InputStream in, String contentTransferEncoding) throws IOException --> Line_7 $$ if ("base64".equalsIgnoreCase(contentTransferEncoding)) [FD]
Line_4 $$ contentTransferEncoding = MimeUtility.getHeaderParameter(contentTransferEncoding, null) --> Line_7 $$ if ("base64".equalsIgnoreCase(contentTransferEncoding)) [FD]
Line_7 $$ if ("base64".equalsIgnoreCase(contentTransferEncoding)) --> Line_8 $$ in = new Base64InputStream(in) [CD]
Line_2 $$ public static Body decodeBody(InputStream in, String contentTransferEncoding) throws IOException --> Line_8 $$ in = new Base64InputStream(in) [FD]
Line_6 $$ in = new QuotedPrintableInputStream(in) --> Line_8 $$ in = new Base64InputStream(in) [FD]
Line_2 $$ public static Body decodeBody(InputStream in, String contentTransferEncoding) throws IOException --> Line_11 $$ BinaryTempFileBody tempBody = new BinaryTempFileBody() [CD]
Line_2 $$ public static Body decodeBody(InputStream in, String contentTransferEncoding) throws IOException --> Line_12 $$ OutputStream out = tempBody.getOutputStream() [CD]
Line_11 $$ BinaryTempFileBody tempBody = new BinaryTempFileBody() --> Line_12 $$ OutputStream out = tempBody.getOutputStream() [FD]
Line_2 $$ public static Body decodeBody(InputStream in, String contentTransferEncoding) throws IOException --> Line_13 $$ IOUtils.copy(in, out) [CD]
Line_2 $$ public static Body decodeBody(InputStream in, String contentTransferEncoding) throws IOException --> Line_13 $$ IOUtils.copy(in, out) [FD]
Line_6 $$ in = new QuotedPrintableInputStream(in) --> Line_13 $$ IOUtils.copy(in, out) [FD]
Line_8 $$ in = new Base64InputStream(in) --> Line_13 $$ IOUtils.copy(in, out) [FD]
Line_12 $$ OutputStream out = tempBody.getOutputStream() --> Line_13 $$ IOUtils.copy(in, out) [FD]
Line_2 $$ public static Body decodeBody(InputStream in, String contentTransferEncoding) throws IOException --> Line_14 $$ out.close() [CD]
Line_12 $$ OutputStream out = tempBody.getOutputStream() --> Line_14 $$ out.close() [FD]
Line_2 $$ public static Body decodeBody(InputStream in, String contentTransferEncoding) throws IOException --> Line_15 $$ return tempBody [CD]
