Line_2 $$ public static JSGFRuleGrammar newGrammarFromJSGF(URL url, JSGFRuleGrammarFactory factory) throws JSGFGrammarParseException, IOException --> Line_3 $$ Reader reader [CD]
Line_2 $$ public static JSGFRuleGrammar newGrammarFromJSGF(URL url, JSGFRuleGrammarFactory factory) throws JSGFGrammarParseException, IOException --> Line_4 $$ BufferedInputStream stream = new BufferedInputStream(url.openStream(), 256) [CD]
Line_2 $$ public static JSGFRuleGrammar newGrammarFromJSGF(URL url, JSGFRuleGrammarFactory factory) throws JSGFGrammarParseException, IOException --> Line_4 $$ BufferedInputStream stream = new BufferedInputStream(url.openStream(), 256) [FD]
Line_2 $$ public static JSGFRuleGrammar newGrammarFromJSGF(URL url, JSGFRuleGrammarFactory factory) throws JSGFGrammarParseException, IOException --> Line_5 $$ JSGFEncoding encoding = getJSGFEncoding(stream) [CD]
Line_4 $$ BufferedInputStream stream = new BufferedInputStream(url.openStream(), 256) --> Line_5 $$ JSGFEncoding encoding = getJSGFEncoding(stream) [FD]
Line_2 $$ public static JSGFRuleGrammar newGrammarFromJSGF(URL url, JSGFRuleGrammarFactory factory) throws JSGFGrammarParseException, IOException --> Line_6 $$ if ((encoding != null) && (encoding.encoding != null)) [CD]
Line_6 $$ if ((encoding != null) && (encoding.encoding != null)) --> Line_7 $$ System.out.println("Grammar Character Encoding \"" + encoding.encoding + "\"") [CD]
Line_6 $$ if ((encoding != null) && (encoding.encoding != null)) --> Line_8 $$ reader = new InputStreamReader(stream, encoding.encoding) [CD]
Line_3 $$ Reader reader --> Line_8 $$ reader = new InputStreamReader(stream, encoding.encoding) [FD]
Line_6 $$ if ((encoding != null) && (encoding.encoding != null)) --> Line_10 $$ System.out.println("WARNING: Grammar missing self identifying header") [CD]
Line_5 $$ JSGFEncoding encoding = getJSGFEncoding(stream) --> Line_10 $$ System.out.println("WARNING: Grammar missing self identifying header") [FD]
Line_6 $$ if ((encoding != null) && (encoding.encoding != null)) --> Line_11 $$ reader = new InputStreamReader(stream) [CD]
Line_3 $$ Reader reader --> Line_11 $$ reader = new InputStreamReader(stream) [FD]
Line_8 $$ reader = new InputStreamReader(stream, encoding.encoding) --> Line_11 $$ reader = new InputStreamReader(stream) [FD]
Line_2 $$ public static JSGFRuleGrammar newGrammarFromJSGF(URL url, JSGFRuleGrammarFactory factory) throws JSGFGrammarParseException, IOException --> Line_13 $$ return newGrammarFromJSGF(reader, factory) [CD]
Line_2 $$ public static JSGFRuleGrammar newGrammarFromJSGF(URL url, JSGFRuleGrammarFactory factory) throws JSGFGrammarParseException, IOException --> Line_13 $$ return newGrammarFromJSGF(reader, factory) [FD]
Line_3 $$ Reader reader --> Line_13 $$ return newGrammarFromJSGF(reader, factory) [FD]
Line_8 $$ reader = new InputStreamReader(stream, encoding.encoding) --> Line_13 $$ return newGrammarFromJSGF(reader, factory) [FD]
Line_11 $$ reader = new InputStreamReader(stream) --> Line_13 $$ return newGrammarFromJSGF(reader, factory) [FD]
