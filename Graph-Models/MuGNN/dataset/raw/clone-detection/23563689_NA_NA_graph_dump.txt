Line_2 $$ protected String doInBackground(Location... params) --> Line_3 $$ if (params == null || params.length == 0 || params[0] == null) [CD]
Line_3 $$ if (params == null || params.length == 0 || params[0] == null) --> Line_4 $$ return null [CD]
Line_2 $$ protected String doInBackground(Location... params) --> Line_6 $$ Location location = params[0] [CD]
Line_2 $$ protected String doInBackground(Location... params) --> Line_7 $$ String address = "" [CD]
Line_2 $$ protected String doInBackground(Location... params) --> Line_8 $$ String cachedAddress = DataService.GetInstance(mContext).getAddressFormLocationCache(location.getLatitude(), location.getLongitude()) [CD]
Line_6 $$ Location location = params[0] --> Line_8 $$ String cachedAddress = DataService.GetInstance(mContext).getAddressFormLocationCache(location.getLatitude(), location.getLongitude()) [FD]
Line_2 $$ protected String doInBackground(Location... params) --> Line_9 $$ if (!TextUtils.isEmpty(cachedAddress)) [CD]
Line_8 $$ String cachedAddress = DataService.GetInstance(mContext).getAddressFormLocationCache(location.getLatitude(), location.getLongitude()) --> Line_9 $$ if (!TextUtils.isEmpty(cachedAddress)) [FD]
Line_9 $$ if (!TextUtils.isEmpty(cachedAddress)) --> Line_10 $$ address = cachedAddress [CD]
Line_7 $$ String address = "" --> Line_10 $$ address = cachedAddress [FD]
Line_8 $$ String cachedAddress = DataService.GetInstance(mContext).getAddressFormLocationCache(location.getLatitude(), location.getLongitude()) --> Line_10 $$ address = cachedAddress [FD]
Line_9 $$ if (!TextUtils.isEmpty(cachedAddress)) --> Line_12 $$ StringBuilder jsonText = new StringBuilder() [CD]
Line_9 $$ if (!TextUtils.isEmpty(cachedAddress)) --> Line_13 $$ HttpClient client = new DefaultHttpClient() [CD]
Line_9 $$ if (!TextUtils.isEmpty(cachedAddress)) --> Line_14 $$ String url = String.format(GoogleMapAPITemplate, location.getLatitude(), location.getLongitude()) [CD]
Line_6 $$ Location location = params[0] --> Line_14 $$ String url = String.format(GoogleMapAPITemplate, location.getLatitude(), location.getLongitude()) [FD]
Line_9 $$ if (!TextUtils.isEmpty(cachedAddress)) --> Line_15 $$ HttpGet httpGet = new HttpGet(url) [CD]
Line_13 $$ HttpClient client = new DefaultHttpClient() --> Line_17 $$ HttpResponse response = client.execute(httpGet) [FD]
Line_15 $$ HttpGet httpGet = new HttpGet(url) --> Line_17 $$ HttpResponse response = client.execute(httpGet) [FD]
Line_17 $$ HttpResponse response = client.execute(httpGet) --> Line_18 $$ StatusLine statusLine = response.getStatusLine() [FD]
Line_18 $$ StatusLine statusLine = response.getStatusLine() --> Line_19 $$ int statusCode = statusLine.getStatusCode() [FD]
Line_19 $$ int statusCode = statusLine.getStatusCode() --> Line_20 $$ if (statusCode == 200) [FD]
Line_20 $$ if (statusCode == 200) --> Line_21 $$ HttpEntity entity = response.getEntity() [CD]
Line_17 $$ HttpResponse response = client.execute(httpGet) --> Line_21 $$ HttpEntity entity = response.getEntity() [FD]
Line_20 $$ if (statusCode == 200) --> Line_22 $$ InputStream content = entity.getContent() [CD]
Line_21 $$ HttpEntity entity = response.getEntity() --> Line_22 $$ InputStream content = entity.getContent() [FD]
Line_20 $$ if (statusCode == 200) --> Line_23 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(content)) [CD]
Line_20 $$ if (statusCode == 200) --> Line_24 $$ String line [CD]
Line_20 $$ if (statusCode == 200) --> Line_25 $$ while ((line = reader.readLine()) != null) [CD]
Line_24 $$ String line --> Line_25 $$ while ((line = reader.readLine()) != null) [FD]
Line_23 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(content)) --> Line_25 $$ while ((line = reader.readLine()) != null) [FD]
Line_25 $$ while ((line = reader.readLine()) != null) --> Line_26 $$ jsonText.append(line) [CD]
Line_25 $$ while ((line = reader.readLine()) != null) --> Line_26 $$ jsonText.append(line) [FD]
Line_12 $$ StringBuilder jsonText = new StringBuilder() --> Line_26 $$ jsonText.append(line) [FD]
Line_24 $$ String line --> Line_26 $$ jsonText.append(line) [FD]
Line_20 $$ if (statusCode == 200) --> Line_28 $$ JSONObject result = new JSONObject(jsonText.toString()) [CD]
Line_12 $$ StringBuilder jsonText = new StringBuilder() --> Line_28 $$ JSONObject result = new JSONObject(jsonText.toString()) [FD]
Line_20 $$ if (statusCode == 200) --> Line_29 $$ String status = result.getString(GoogleMapStatusSchema.status) [CD]
Line_28 $$ JSONObject result = new JSONObject(jsonText.toString()) --> Line_29 $$ String status = result.getString(GoogleMapStatusSchema.status) [FD]
Line_20 $$ if (statusCode == 200) --> Line_30 $$ if (GoogleMapStatusCodes.OK.equals(status)) [CD]
Line_29 $$ String status = result.getString(GoogleMapStatusSchema.status) --> Line_30 $$ if (GoogleMapStatusCodes.OK.equals(status)) [FD]
Line_30 $$ if (GoogleMapStatusCodes.OK.equals(status)) --> Line_31 $$ JSONArray addresses = result.getJSONArray(GoogleMapStatusSchema.results) [CD]
Line_28 $$ JSONObject result = new JSONObject(jsonText.toString()) --> Line_31 $$ JSONArray addresses = result.getJSONArray(GoogleMapStatusSchema.results) [FD]
Line_30 $$ if (GoogleMapStatusCodes.OK.equals(status)) --> Line_32 $$ if (addresses.length() > 0) [CD]
Line_31 $$ JSONArray addresses = result.getJSONArray(GoogleMapStatusSchema.results) --> Line_32 $$ if (addresses.length() > 0) [FD]
Line_32 $$ if (addresses.length() > 0) --> Line_33 $$ address = addresses.getJSONObject(0).getString(GoogleMapStatusSchema.formatted_address) [CD]
Line_7 $$ String address = "" --> Line_33 $$ address = addresses.getJSONObject(0).getString(GoogleMapStatusSchema.formatted_address) [FD]
Line_10 $$ address = cachedAddress --> Line_33 $$ address = addresses.getJSONObject(0).getString(GoogleMapStatusSchema.formatted_address) [FD]
Line_31 $$ JSONArray addresses = result.getJSONArray(GoogleMapStatusSchema.results) --> Line_33 $$ address = addresses.getJSONObject(0).getString(GoogleMapStatusSchema.formatted_address) [FD]
Line_32 $$ if (addresses.length() > 0) --> Line_34 $$ if (!TextUtils.isEmpty(currentBestLocationAddress)) [CD]
Line_34 $$ if (!TextUtils.isEmpty(currentBestLocationAddress)) --> Line_35 $$ DataService.GetInstance(mContext).updateAddressToLocationCache(location.getLatitude(), location.getLongitude(), currentBestLocationAddress) [CD]
Line_6 $$ Location location = params[0] --> Line_35 $$ DataService.GetInstance(mContext).updateAddressToLocationCache(location.getLatitude(), location.getLongitude(), currentBestLocationAddress) [FD]
Line_20 $$ if (statusCode == 200) --> Line_40 $$ Log.e("Error", "Failed to get address via google map API.") [CD]
Line_2 $$ protected String doInBackground(Location... params) --> Line_51 $$ return address [CD]
