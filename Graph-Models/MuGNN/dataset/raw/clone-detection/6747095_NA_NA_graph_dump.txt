Line_2 $$ public void notifyTerminated(Writer r) --> Line_3 $$ all_writers.remove(r) [CD]
Line_2 $$ public void notifyTerminated(Writer r) --> Line_3 $$ all_writers.remove(r) [FD]
Line_2 $$ public void notifyTerminated(Writer r) --> Line_4 $$ if (all_writers.isEmpty()) [CD]
Line_4 $$ if (all_writers.isEmpty()) --> Line_6 $$ Iterator iterator = open_files.iterator() [CD]
Line_4 $$ if (all_writers.isEmpty()) --> Line_7 $$ while (iterator.hasNext()) [CD]
Line_6 $$ Iterator iterator = open_files.iterator() --> Line_7 $$ while (iterator.hasNext()) [FD]
Line_7 $$ while (iterator.hasNext()) --> Line_8 $$ FileWriter.FileChunk fc = (FileWriter.FileChunk) iterator.next() [CD]
Line_6 $$ Iterator iterator = open_files.iterator() --> Line_8 $$ FileWriter.FileChunk fc = (FileWriter.FileChunk) iterator.next() [FD]
Line_7 $$ while (iterator.hasNext()) --> Line_9 $$ do [CD]
Line_8 $$ FileWriter.FileChunk fc = (FileWriter.FileChunk) iterator.next() --> Line_9 $$ do [FD]
Line_9 $$ do --> Line_15 $$ fc = fc.next [CD]
Line_8 $$ FileWriter.FileChunk fc = (FileWriter.FileChunk) iterator.next() --> Line_15 $$ fc = fc.next [FD]
Line_4 $$ if (all_writers.isEmpty()) --> Line_18 $$ iterator = open_files.iterator() [CD]
Line_6 $$ Iterator iterator = open_files.iterator() --> Line_18 $$ iterator = open_files.iterator() [FD]
Line_4 $$ if (all_writers.isEmpty()) --> Line_19 $$ boolean all_ok = true [CD]
Line_4 $$ if (all_writers.isEmpty()) --> Line_20 $$ while (iterator.hasNext()) [CD]
Line_6 $$ Iterator iterator = open_files.iterator() --> Line_20 $$ while (iterator.hasNext()) [FD]
Line_18 $$ iterator = open_files.iterator() --> Line_20 $$ while (iterator.hasNext()) [FD]
Line_20 $$ while (iterator.hasNext()) --> Line_21 $$ FileWriter.FileChunk fc = (FileWriter.FileChunk) iterator.next() [CD]
Line_6 $$ Iterator iterator = open_files.iterator() --> Line_21 $$ FileWriter.FileChunk fc = (FileWriter.FileChunk) iterator.next() [FD]
Line_18 $$ iterator = open_files.iterator() --> Line_21 $$ FileWriter.FileChunk fc = (FileWriter.FileChunk) iterator.next() [FD]
Line_20 $$ while (iterator.hasNext()) --> Line_22 $$ logger.logComment("File chunk <" + fc.name + "> " + fc.start_byte + " " + fc.position + " " + fc.actual_file) [CD]
Line_20 $$ while (iterator.hasNext()) --> Line_23 $$ boolean ok = true [CD]
Line_20 $$ while (iterator.hasNext()) --> Line_24 $$ while (fc.next != null) [CD]
Line_24 $$ while (fc.next != null) --> Line_25 $$ ok = ok && (fc.start_byte + fc.actual_file.length()) == fc.next.start_byte [CD]
Line_23 $$ boolean ok = true --> Line_25 $$ ok = ok && (fc.start_byte + fc.actual_file.length()) == fc.next.start_byte [FD]
Line_24 $$ while (fc.next != null) --> Line_26 $$ fc = fc.next [CD]
Line_21 $$ FileWriter.FileChunk fc = (FileWriter.FileChunk) iterator.next() --> Line_26 $$ fc = fc.next [FD]
Line_15 $$ fc = fc.next --> Line_26 $$ fc = fc.next [FD]
Line_8 $$ FileWriter.FileChunk fc = (FileWriter.FileChunk) iterator.next() --> Line_26 $$ fc = fc.next [FD]
Line_20 $$ while (iterator.hasNext()) --> Line_28 $$ if (ok) [CD]
Line_28 $$ if (ok) --> Line_29 $$ logger.logComment("Received file <" + fc.name + "> is contiguous (and hopefully complete)") [CD]
Line_28 $$ if (ok) --> Line_31 $$ logger.logError("Received file <" + fc.name + "> is NOT contiguous") [CD]
Line_28 $$ if (ok) --> Line_32 $$ all_ok = false [CD]
Line_19 $$ boolean all_ok = true --> Line_32 $$ all_ok = false [FD]
Line_4 $$ if (all_writers.isEmpty()) --> Line_35 $$ if (all_ok) [CD]
Line_35 $$ if (all_ok) --> Line_36 $$ byte[] buffer = new byte[16384] [CD]
Line_35 $$ if (all_ok) --> Line_37 $$ iterator = open_files.iterator() [CD]
Line_6 $$ Iterator iterator = open_files.iterator() --> Line_37 $$ iterator = open_files.iterator() [FD]
Line_18 $$ iterator = open_files.iterator() --> Line_37 $$ iterator = open_files.iterator() [FD]
Line_35 $$ if (all_ok) --> Line_38 $$ while (iterator.hasNext()) [CD]
Line_6 $$ Iterator iterator = open_files.iterator() --> Line_38 $$ while (iterator.hasNext()) [FD]
Line_18 $$ iterator = open_files.iterator() --> Line_38 $$ while (iterator.hasNext()) [FD]
Line_37 $$ iterator = open_files.iterator() --> Line_38 $$ while (iterator.hasNext()) [FD]
Line_38 $$ while (iterator.hasNext()) --> Line_39 $$ FileWriter.FileChunk fc = (FileWriter.FileChunk) iterator.next() [CD]
Line_6 $$ Iterator iterator = open_files.iterator() --> Line_39 $$ FileWriter.FileChunk fc = (FileWriter.FileChunk) iterator.next() [FD]
Line_18 $$ iterator = open_files.iterator() --> Line_39 $$ FileWriter.FileChunk fc = (FileWriter.FileChunk) iterator.next() [FD]
Line_37 $$ iterator = open_files.iterator() --> Line_39 $$ FileWriter.FileChunk fc = (FileWriter.FileChunk) iterator.next() [FD]
Line_41 $$ if (fc.next != null) --> Line_42 $$ FileOutputStream fos = new FileOutputStream(fc.actual_file, true) [CD]
Line_41 $$ if (fc.next != null) --> Line_43 $$ fc = fc.next [CD]
Line_39 $$ FileWriter.FileChunk fc = (FileWriter.FileChunk) iterator.next() --> Line_43 $$ fc = fc.next [FD]
Line_26 $$ fc = fc.next --> Line_43 $$ fc = fc.next [FD]
Line_21 $$ FileWriter.FileChunk fc = (FileWriter.FileChunk) iterator.next() --> Line_43 $$ fc = fc.next [FD]
Line_15 $$ fc = fc.next --> Line_43 $$ fc = fc.next [FD]
Line_8 $$ FileWriter.FileChunk fc = (FileWriter.FileChunk) iterator.next() --> Line_43 $$ fc = fc.next [FD]
Line_41 $$ if (fc.next != null) --> Line_44 $$ while (fc != null) [CD]
Line_39 $$ FileWriter.FileChunk fc = (FileWriter.FileChunk) iterator.next() --> Line_44 $$ while (fc != null) [FD]
Line_43 $$ fc = fc.next --> Line_44 $$ while (fc != null) [FD]
Line_26 $$ fc = fc.next --> Line_44 $$ while (fc != null) [FD]
Line_21 $$ FileWriter.FileChunk fc = (FileWriter.FileChunk) iterator.next() --> Line_44 $$ while (fc != null) [FD]
Line_15 $$ fc = fc.next --> Line_44 $$ while (fc != null) [FD]
Line_8 $$ FileWriter.FileChunk fc = (FileWriter.FileChunk) iterator.next() --> Line_44 $$ while (fc != null) [FD]
Line_44 $$ while (fc != null) --> Line_45 $$ FileInputStream fis = new FileInputStream(fc.actual_file) [CD]
Line_44 $$ while (fc != null) --> Line_46 $$ int actually_read = fis.read(buffer) [CD]
Line_45 $$ FileInputStream fis = new FileInputStream(fc.actual_file) --> Line_46 $$ int actually_read = fis.read(buffer) [FD]
Line_36 $$ byte[] buffer = new byte[16384] --> Line_46 $$ int actually_read = fis.read(buffer) [FD]
Line_44 $$ while (fc != null) --> Line_47 $$ while (actually_read != -1) [CD]
Line_46 $$ int actually_read = fis.read(buffer) --> Line_47 $$ while (actually_read != -1) [FD]
Line_47 $$ while (actually_read != -1) --> Line_48 $$ fos.write(buffer, 0, actually_read) [CD]
Line_42 $$ FileOutputStream fos = new FileOutputStream(fc.actual_file, true) --> Line_48 $$ fos.write(buffer, 0, actually_read) [FD]
Line_36 $$ byte[] buffer = new byte[16384] --> Line_48 $$ fos.write(buffer, 0, actually_read) [FD]
Line_46 $$ int actually_read = fis.read(buffer) --> Line_48 $$ fos.write(buffer, 0, actually_read) [FD]
Line_47 $$ while (actually_read != -1) --> Line_49 $$ actually_read = fis.read(buffer) [CD]
Line_46 $$ int actually_read = fis.read(buffer) --> Line_49 $$ actually_read = fis.read(buffer) [FD]
Line_45 $$ FileInputStream fis = new FileInputStream(fc.actual_file) --> Line_49 $$ actually_read = fis.read(buffer) [FD]
Line_36 $$ byte[] buffer = new byte[16384] --> Line_49 $$ actually_read = fis.read(buffer) [FD]
Line_44 $$ while (fc != null) --> Line_51 $$ fc.actual_file.delete() [CD]
Line_44 $$ while (fc != null) --> Line_52 $$ fc = fc.next [CD]
Line_39 $$ FileWriter.FileChunk fc = (FileWriter.FileChunk) iterator.next() --> Line_52 $$ fc = fc.next [FD]
Line_43 $$ fc = fc.next --> Line_52 $$ fc = fc.next [FD]
Line_26 $$ fc = fc.next --> Line_52 $$ fc = fc.next [FD]
Line_21 $$ FileWriter.FileChunk fc = (FileWriter.FileChunk) iterator.next() --> Line_52 $$ fc = fc.next [FD]
Line_15 $$ fc = fc.next --> Line_52 $$ fc = fc.next [FD]
Line_8 $$ FileWriter.FileChunk fc = (FileWriter.FileChunk) iterator.next() --> Line_52 $$ fc = fc.next [FD]
Line_4 $$ if (all_writers.isEmpty()) --> Line_62 $$ fte.allWritersTerminated() [CD]
Line_15 $$ fc = fc.next --> Line_9 $$ do [FD]
Line_52 $$ fc = fc.next --> Line_44 $$ while (fc != null) [FD]
Line_49 $$ actually_read = fis.read(buffer) --> Line_47 $$ while (actually_read != -1) [FD]
Line_49 $$ actually_read = fis.read(buffer) --> Line_48 $$ fos.write(buffer, 0, actually_read) [FD]
