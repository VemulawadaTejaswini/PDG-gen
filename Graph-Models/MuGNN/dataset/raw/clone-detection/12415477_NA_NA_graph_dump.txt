Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_3 $$ String limitsSet = "" [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_4 $$ String synstatus = SystemFilesLoader.getInstance().getNewgenlibProperties().getProperty("SYNDETICS", "OFF") [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_5 $$ String synncode = SystemFilesLoader.getInstance().getNewgenlibProperties().getProperty("SYNDETICS_CLIENT_CODE", "") [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_7 $$ if (request.getSession().getAttribute("searchLimits") != null) [FD]
Line_7 $$ if (request.getSession().getAttribute("searchLimits") != null) --> Line_8 $$ System.out.println("searchLimits set") [CD]
Line_7 $$ if (request.getSession().getAttribute("searchLimits") != null) --> Line_9 $$ limitsSet = "SET" [CD]
Line_3 $$ String limitsSet = "" --> Line_9 $$ limitsSet = "SET" [FD]
Line_7 $$ if (request.getSession().getAttribute("searchLimits") != null) --> Line_10 $$ java.util.Hashtable htLimits = new java.util.Hashtable() [CD]
Line_7 $$ if (request.getSession().getAttribute("searchLimits") != null) --> Line_11 $$ htLimits = (java.util.Hashtable) request.getSession().getAttribute("searchLimits") [CD]
Line_10 $$ java.util.Hashtable htLimits = new java.util.Hashtable() --> Line_11 $$ htLimits = (java.util.Hashtable) request.getSession().getAttribute("searchLimits") [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_11 $$ htLimits = (java.util.Hashtable) request.getSession().getAttribute("searchLimits") [FD]
Line_7 $$ if (request.getSession().getAttribute("searchLimits") != null) --> Line_13 $$ limitsSet = "UNSET" [CD]
Line_3 $$ String limitsSet = "" --> Line_13 $$ limitsSet = "UNSET" [FD]
Line_9 $$ limitsSet = "SET" --> Line_13 $$ limitsSet = "UNSET" [FD]
Line_7 $$ if (request.getSession().getAttribute("searchLimits") != null) --> Line_14 $$ System.out.println("searchLimits not set") [CD]
Line_16 $$ java.util.Properties prop = System.getProperties() --> Line_17 $$ prop.load(new FileInputStream(ejb.bprocess.util.NewGenLibRoot.getRoot() + java.io.File.separator + "SystemFiles" + java.io.File.separator + "ENV_VAR.txt")) [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_22 $$ String forward = "searchView" [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_23 $$ int link = 0, singleLink = 0 [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_24 $$ java.util.Vector vecThisPage = new java.util.Vector() [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_26 $$ svF.setSyndeticsStatus(synstatus) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_26 $$ svF.setSyndeticsStatus(synstatus) [FD]
Line_4 $$ String synstatus = SystemFilesLoader.getInstance().getNewgenlibProperties().getProperty("SYNDETICS", "OFF") --> Line_26 $$ svF.setSyndeticsStatus(synstatus) [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_27 $$ svF.setSyndeticsClientCode(synncode) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_27 $$ svF.setSyndeticsClientCode(synncode) [FD]
Line_5 $$ String synncode = SystemFilesLoader.getInstance().getNewgenlibProperties().getProperty("SYNDETICS_CLIENT_CODE", "") --> Line_27 $$ svF.setSyndeticsClientCode(synncode) [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_29 $$ ejb.bprocess.opac.xcql.OPACUtilities opacUt = opacHm.create() [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_30 $$ System.out.println("CLASS NO " + request.getParameter("ClassNo") + " ClassNoForwarded " + session.getAttribute("ClassNoForwarded")) [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_30 $$ System.out.println("CLASS NO " + request.getParameter("ClassNo") + " ClassNoForwarded " + session.getAttribute("ClassNoForwarded")) [FD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_30 $$ System.out.println("CLASS NO " + request.getParameter("ClassNo") + " ClassNoForwarded " + session.getAttribute("ClassNoForwarded")) [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_31 $$ if (svF.getExportRec() == null || !(svF.getExportRec().equals("export"))) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_31 $$ if (svF.getExportRec() == null || !(svF.getExportRec().equals("export"))) [FD]
Line_31 $$ if (svF.getExportRec() == null || !(svF.getExportRec().equals("export"))) --> Line_32 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null && request.getParameter("relation") != null && !(session.getAttribute("HostItemDisplay") != null && session.getAttribute("HostItemDisplay").toString().equals("false"))) [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_32 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null && request.getParameter("relation") != null && !(session.getAttribute("HostItemDisplay") != null && session.getAttribute("HostItemDisplay").toString().equals("false"))) [FD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_32 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null && request.getParameter("relation") != null && !(session.getAttribute("HostItemDisplay") != null && session.getAttribute("HostItemDisplay").toString().equals("false"))) [FD]
Line_32 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null && request.getParameter("relation") != null && !(session.getAttribute("HostItemDisplay") != null && session.getAttribute("HostItemDisplay").toString().equals("false"))) --> Line_34 $$ ejb.bprocess.opac.xcql.SearchSRUWCatalogue searchCat = home.create() [CD]
Line_32 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null && request.getParameter("relation") != null && !(session.getAttribute("HostItemDisplay") != null && session.getAttribute("HostItemDisplay").toString().equals("false"))) --> Line_35 $$ String catId1 = request.getParameter("CatId") [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_35 $$ String catId1 = request.getParameter("CatId") [FD]
Line_32 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null && request.getParameter("relation") != null && !(session.getAttribute("HostItemDisplay") != null && session.getAttribute("HostItemDisplay").toString().equals("false"))) --> Line_36 $$ String ownId1 = request.getParameter("OwnerId") [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_36 $$ String ownId1 = request.getParameter("OwnerId") [FD]
Line_32 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null && request.getParameter("relation") != null && !(session.getAttribute("HostItemDisplay") != null && session.getAttribute("HostItemDisplay").toString().equals("false"))) --> Line_37 $$ System.out.println("*********************CatId1: " + catId1) [CD]
Line_32 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null && request.getParameter("relation") != null && !(session.getAttribute("HostItemDisplay") != null && session.getAttribute("HostItemDisplay").toString().equals("false"))) --> Line_38 $$ svF.setCatalogueRecordId(catId1) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_38 $$ svF.setCatalogueRecordId(catId1) [FD]
Line_35 $$ String catId1 = request.getParameter("CatId") --> Line_38 $$ svF.setCatalogueRecordId(catId1) [FD]
Line_32 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null && request.getParameter("relation") != null && !(session.getAttribute("HostItemDisplay") != null && session.getAttribute("HostItemDisplay").toString().equals("false"))) --> Line_39 $$ svF.setOwnerLibraryId(ownId1) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_39 $$ svF.setOwnerLibraryId(ownId1) [FD]
Line_36 $$ String ownId1 = request.getParameter("OwnerId") --> Line_39 $$ svF.setOwnerLibraryId(ownId1) [FD]
Line_32 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null && request.getParameter("relation") != null && !(session.getAttribute("HostItemDisplay") != null && session.getAttribute("HostItemDisplay").toString().equals("false"))) --> Line_40 $$ String rel = request.getParameter("relation") [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_40 $$ String rel = request.getParameter("relation") [FD]
Line_32 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null && request.getParameter("relation") != null && !(session.getAttribute("HostItemDisplay") != null && session.getAttribute("HostItemDisplay").toString().equals("false"))) --> Line_41 $$ java.util.Vector vecL = searchCat.getRelatedCatalogueRecords(null, catId1, ownId1, rel) [CD]
Line_34 $$ ejb.bprocess.opac.xcql.SearchSRUWCatalogue searchCat = home.create() --> Line_41 $$ java.util.Vector vecL = searchCat.getRelatedCatalogueRecords(null, catId1, ownId1, rel) [FD]
Line_35 $$ String catId1 = request.getParameter("CatId") --> Line_41 $$ java.util.Vector vecL = searchCat.getRelatedCatalogueRecords(null, catId1, ownId1, rel) [FD]
Line_36 $$ String ownId1 = request.getParameter("OwnerId") --> Line_41 $$ java.util.Vector vecL = searchCat.getRelatedCatalogueRecords(null, catId1, ownId1, rel) [FD]
Line_40 $$ String rel = request.getParameter("relation") --> Line_41 $$ java.util.Vector vecL = searchCat.getRelatedCatalogueRecords(null, catId1, ownId1, rel) [FD]
Line_32 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null && request.getParameter("relation") != null && !(session.getAttribute("HostItemDisplay") != null && session.getAttribute("HostItemDisplay").toString().equals("false"))) --> Line_42 $$ request.setAttribute("LuceneVector", vecL) [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_42 $$ request.setAttribute("LuceneVector", vecL) [FD]
Line_41 $$ java.util.Vector vecL = searchCat.getRelatedCatalogueRecords(null, catId1, ownId1, rel) --> Line_42 $$ request.setAttribute("LuceneVector", vecL) [FD]
Line_32 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null && request.getParameter("relation") != null && !(session.getAttribute("HostItemDisplay") != null && session.getAttribute("HostItemDisplay").toString().equals("false"))) --> Line_43 $$ session.setAttribute("searchVec", vecL) [CD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_43 $$ session.setAttribute("searchVec", vecL) [FD]
Line_41 $$ java.util.Vector vecL = searchCat.getRelatedCatalogueRecords(null, catId1, ownId1, rel) --> Line_43 $$ session.setAttribute("searchVec", vecL) [FD]
Line_32 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null && request.getParameter("relation") != null && !(session.getAttribute("HostItemDisplay") != null && session.getAttribute("HostItemDisplay").toString().equals("false"))) --> Line_44 $$ singleLink = 1 [CD]
Line_23 $$ int link = 0, singleLink = 0 --> Line_44 $$ singleLink = 1 [FD]
Line_32 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null && request.getParameter("relation") != null && !(session.getAttribute("HostItemDisplay") != null && session.getAttribute("HostItemDisplay").toString().equals("false"))) --> Line_45 $$ session.setAttribute("HostItemDisplay", "false") [CD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_45 $$ session.setAttribute("HostItemDisplay", "false") [FD]
Line_32 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null && request.getParameter("relation") != null && !(session.getAttribute("HostItemDisplay") != null && session.getAttribute("HostItemDisplay").toString().equals("false"))) --> Line_46 $$ link = 1 [CD]
Line_23 $$ int link = 0, singleLink = 0 --> Line_46 $$ link = 1 [FD]
Line_32 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null && request.getParameter("relation") != null && !(session.getAttribute("HostItemDisplay") != null && session.getAttribute("HostItemDisplay").toString().equals("false"))) --> Line_47 $$ forward = "searchRes" [CD]
Line_22 $$ String forward = "searchView" --> Line_47 $$ forward = "searchRes" [FD]
Line_32 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null && request.getParameter("relation") != null && !(session.getAttribute("HostItemDisplay") != null && session.getAttribute("HostItemDisplay").toString().equals("false"))) --> Line_48 $$ vecThisPage.addElement(catId1) [CD]
Line_24 $$ java.util.Vector vecThisPage = new java.util.Vector() --> Line_48 $$ vecThisPage.addElement(catId1) [FD]
Line_35 $$ String catId1 = request.getParameter("CatId") --> Line_48 $$ vecThisPage.addElement(catId1) [FD]
Line_32 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null && request.getParameter("relation") != null && !(session.getAttribute("HostItemDisplay") != null && session.getAttribute("HostItemDisplay").toString().equals("false"))) --> Line_49 $$ vecThisPage.addElement(ownId1) [CD]
Line_24 $$ java.util.Vector vecThisPage = new java.util.Vector() --> Line_49 $$ vecThisPage.addElement(ownId1) [FD]
Line_36 $$ String ownId1 = request.getParameter("OwnerId") --> Line_49 $$ vecThisPage.addElement(ownId1) [FD]
Line_32 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null && request.getParameter("relation") != null && !(session.getAttribute("HostItemDisplay") != null && session.getAttribute("HostItemDisplay").toString().equals("false"))) --> Line_50 $$ if (link == 0 || singleLink == 1) [CD]
Line_50 $$ if (link == 0 || singleLink == 1) --> Line_51 $$ System.out.println("LINK AND SINGLE LINK " + link + " single " + singleLink) [CD]
Line_50 $$ if (link == 0 || singleLink == 1) --> Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) [FD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_53 $$ System.out.println("action called for class no.") [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_54 $$ String classificNo = request.getParameter("ClassNo") [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_54 $$ String classificNo = request.getParameter("ClassNo") [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_55 $$ System.out.println("TITLE WORDS ") [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_57 $$ ejb.bprocess.opac.xcql.SearchSRUWCatalogue searchCat = home.create() [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_58 $$ String rawSearchText = (new beans.miscellaneous.RequestStringProcessor()).processString("*" + classificNo + "*") [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_59 $$ System.out.println("raw search Text" + rawSearchText) [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_60 $$ String searchText = "classificationNumber=" + rawSearchText [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_61 $$ System.out.println("search text is " + searchText) [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_62 $$ String xmlRes = (new org.z3950.zing.cql.CQLParser()).parse(searchText).toXCQL(0) [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_63 $$ java.util.Hashtable hs = new java.util.Hashtable() [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_64 $$ java.util.Vector v1 = new java.util.Vector() [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_65 $$ if (session.getAttribute("searchLimits") != null) [CD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_65 $$ if (session.getAttribute("searchLimits") != null) [FD]
Line_65 $$ if (session.getAttribute("searchLimits") != null) --> Line_66 $$ hs = (java.util.Hashtable) session.getAttribute("searchLimits") [CD]
Line_63 $$ java.util.Hashtable hs = new java.util.Hashtable() --> Line_66 $$ hs = (java.util.Hashtable) session.getAttribute("searchLimits") [FD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_66 $$ hs = (java.util.Hashtable) session.getAttribute("searchLimits") [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_68 $$ Vector vec = new Vector() [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_69 $$ String solrQuery = Utility.getInstance().simplifiedSolrQuery(classificNo, "classificationNumber") [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_70 $$ if (limitsSet.equalsIgnoreCase("SET")) [CD]
Line_3 $$ String limitsSet = "" --> Line_70 $$ if (limitsSet.equalsIgnoreCase("SET")) [FD]
Line_9 $$ limitsSet = "SET" --> Line_70 $$ if (limitsSet.equalsIgnoreCase("SET")) [FD]
Line_13 $$ limitsSet = "UNSET" --> Line_70 $$ if (limitsSet.equalsIgnoreCase("SET")) [FD]
Line_70 $$ if (limitsSet.equalsIgnoreCase("SET")) --> Line_71 $$ String limitsQuery = limitsSolrQuery(hs) [CD]
Line_63 $$ java.util.Hashtable hs = new java.util.Hashtable() --> Line_71 $$ String limitsQuery = limitsSolrQuery(hs) [FD]
Line_66 $$ hs = (java.util.Hashtable) session.getAttribute("searchLimits") --> Line_71 $$ String limitsQuery = limitsSolrQuery(hs) [FD]
Line_70 $$ if (limitsSet.equalsIgnoreCase("SET")) --> Line_72 $$ solrQuery += limitsQuery [CD]
Line_71 $$ String limitsQuery = limitsSolrQuery(hs) --> Line_72 $$ solrQuery += limitsQuery [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_74 $$ solrQuery += " & " [CD]
Line_72 $$ solrQuery += limitsQuery --> Line_74 $$ solrQuery += " & " [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_75 $$ Vector newRetvec = searchCat.processSolrQuery(1, 25, solrQuery, "245_Tag", "asc") [CD]
Line_34 $$ ejb.bprocess.opac.xcql.SearchSRUWCatalogue searchCat = home.create() --> Line_75 $$ Vector newRetvec = searchCat.processSolrQuery(1, 25, solrQuery, "245_Tag", "asc") [FD]
Line_72 $$ solrQuery += limitsQuery --> Line_75 $$ Vector newRetvec = searchCat.processSolrQuery(1, 25, solrQuery, "245_Tag", "asc") [FD]
Line_74 $$ solrQuery += " & " --> Line_75 $$ Vector newRetvec = searchCat.processSolrQuery(1, 25, solrQuery, "245_Tag", "asc") [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_76 $$ Hashtable ht = (Hashtable) newRetvec.get(0) [CD]
Line_75 $$ Vector newRetvec = searchCat.processSolrQuery(1, 25, solrQuery, "245_Tag", "asc") --> Line_76 $$ Hashtable ht = (Hashtable) newRetvec.get(0) [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_77 $$ String totrec = (String) ht.get("HITS") [CD]
Line_76 $$ Hashtable ht = (Hashtable) newRetvec.get(0) --> Line_77 $$ String totrec = (String) ht.get("HITS") [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_78 $$ session.setAttribute("TOTALREC", Integer.parseInt(totrec)) [CD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_78 $$ session.setAttribute("TOTALREC", Integer.parseInt(totrec)) [FD]
Line_77 $$ String totrec = (String) ht.get("HITS") --> Line_78 $$ session.setAttribute("TOTALREC", Integer.parseInt(totrec)) [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_79 $$ v1 = (Vector) ht.get("RESULTS") [CD]
Line_64 $$ java.util.Vector v1 = new java.util.Vector() --> Line_79 $$ v1 = (Vector) ht.get("RESULTS") [FD]
Line_76 $$ Hashtable ht = (Hashtable) newRetvec.get(0) --> Line_79 $$ v1 = (Vector) ht.get("RESULTS") [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_80 $$ hs.put("Query", solrQuery) [CD]
Line_63 $$ java.util.Hashtable hs = new java.util.Hashtable() --> Line_80 $$ hs.put("Query", solrQuery) [FD]
Line_66 $$ hs = (java.util.Hashtable) session.getAttribute("searchLimits") --> Line_80 $$ hs.put("Query", solrQuery) [FD]
Line_72 $$ solrQuery += limitsQuery --> Line_80 $$ hs.put("Query", solrQuery) [FD]
Line_74 $$ solrQuery += " & " --> Line_80 $$ hs.put("Query", solrQuery) [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_81 $$ if (v1.size() > 0) [CD]
Line_64 $$ java.util.Vector v1 = new java.util.Vector() --> Line_81 $$ if (v1.size() > 0) [FD]
Line_79 $$ v1 = (Vector) ht.get("RESULTS") --> Line_81 $$ if (v1.size() > 0) [FD]
Line_81 $$ if (v1.size() > 0) --> Line_82 $$ hs.put("searchText", rawSearchText) [CD]
Line_63 $$ java.util.Hashtable hs = new java.util.Hashtable() --> Line_82 $$ hs.put("searchText", rawSearchText) [FD]
Line_66 $$ hs = (java.util.Hashtable) session.getAttribute("searchLimits") --> Line_82 $$ hs.put("searchText", rawSearchText) [FD]
Line_81 $$ if (v1.size() > 0) --> Line_83 $$ hs.put("noOfRecords", 25) [CD]
Line_63 $$ java.util.Hashtable hs = new java.util.Hashtable() --> Line_83 $$ hs.put("noOfRecords", 25) [FD]
Line_66 $$ hs = (java.util.Hashtable) session.getAttribute("searchLimits") --> Line_83 $$ hs.put("noOfRecords", 25) [FD]
Line_81 $$ if (v1.size() > 0) --> Line_84 $$ hs.put("browseType", "Classification Number") [CD]
Line_63 $$ java.util.Hashtable hs = new java.util.Hashtable() --> Line_84 $$ hs.put("browseType", "Classification Number") [FD]
Line_66 $$ hs = (java.util.Hashtable) session.getAttribute("searchLimits") --> Line_84 $$ hs.put("browseType", "Classification Number") [FD]
Line_81 $$ if (v1.size() > 0) --> Line_85 $$ session.setAttribute("searchEntry", hs) [CD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_85 $$ session.setAttribute("searchEntry", hs) [FD]
Line_63 $$ java.util.Hashtable hs = new java.util.Hashtable() --> Line_85 $$ session.setAttribute("searchEntry", hs) [FD]
Line_66 $$ hs = (java.util.Hashtable) session.getAttribute("searchLimits") --> Line_85 $$ session.setAttribute("searchEntry", hs) [FD]
Line_81 $$ if (v1.size() > 0) --> Line_86 $$ session.setAttribute("searchVec", v1) [CD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_86 $$ session.setAttribute("searchVec", v1) [FD]
Line_64 $$ java.util.Vector v1 = new java.util.Vector() --> Line_86 $$ session.setAttribute("searchVec", v1) [FD]
Line_79 $$ v1 = (Vector) ht.get("RESULTS") --> Line_86 $$ session.setAttribute("searchVec", v1) [FD]
Line_81 $$ if (v1.size() > 0) --> Line_87 $$ forward = "searchRes" [CD]
Line_22 $$ String forward = "searchView" --> Line_87 $$ forward = "searchRes" [FD]
Line_47 $$ forward = "searchRes" --> Line_87 $$ forward = "searchRes" [FD]
Line_81 $$ if (v1.size() > 0) --> Line_89 $$ forward = "home" [CD]
Line_22 $$ String forward = "searchView" --> Line_89 $$ forward = "home" [FD]
Line_47 $$ forward = "searchRes" --> Line_89 $$ forward = "home" [FD]
Line_87 $$ forward = "searchRes" --> Line_89 $$ forward = "home" [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_92 $$ System.out.println("ELSE CALLED ") [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_93 $$ String record = request.getParameter("record") [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_93 $$ String record = request.getParameter("record") [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_94 $$ String recNo = request.getParameter("recNo") [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_94 $$ String recNo = request.getParameter("recNo") [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_95 $$ Integer catId = 0, ownerId = 0 [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_96 $$ String title = "" [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_97 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null) [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_97 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null) [FD]
Line_97 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null) --> Line_98 $$ catId = new Integer(request.getParameter("CatId")).intValue() [CD]
Line_95 $$ Integer catId = 0, ownerId = 0 --> Line_98 $$ catId = new Integer(request.getParameter("CatId")).intValue() [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_98 $$ catId = new Integer(request.getParameter("CatId")).intValue() [FD]
Line_97 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null) --> Line_99 $$ ownerId = new Integer(request.getParameter("OwnerId")).intValue() [CD]
Line_95 $$ Integer catId = 0, ownerId = 0 --> Line_99 $$ ownerId = new Integer(request.getParameter("OwnerId")).intValue() [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_99 $$ ownerId = new Integer(request.getParameter("OwnerId")).intValue() [FD]
Line_97 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null) --> Line_100 $$ System.out.println("catId is +++=" + catId) [CD]
Line_97 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null) --> Line_101 $$ System.out.println("OwnerId is +++=" + ownerId) [CD]
Line_97 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null) --> Line_102 $$ title = request.getParameter("title") [CD]
Line_96 $$ String title = "" --> Line_102 $$ title = request.getParameter("title") [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_102 $$ title = request.getParameter("title") [FD]
Line_97 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null) --> Line_103 $$ svF.setCatalogueRecordId(request.getParameter("CatId")) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_103 $$ svF.setCatalogueRecordId(request.getParameter("CatId")) [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_103 $$ svF.setCatalogueRecordId(request.getParameter("CatId")) [FD]
Line_97 $$ if (request.getParameter("CatId") != null && request.getParameter("OwnerId") != null) --> Line_104 $$ svF.setOwnerLibraryId(request.getParameter("OwnerId")) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_104 $$ svF.setOwnerLibraryId(request.getParameter("OwnerId")) [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_104 $$ svF.setOwnerLibraryId(request.getParameter("OwnerId")) [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_106 $$ System.out.println("%%%%%%%%%%%%%%%%%%%%%%%%%VVVVVVVVVVVVVVVVVVVVVV") [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_107 $$ ArrayList alOtherBooks = ((ejb.bprocess.opac.SearchCatalogue) ejb.bprocess.util.HomeFactory.getInstance().getHome("SearchCatalogue")).getOtherBooksInTheRack(null, catId.toString(), ownerId.toString(), ownerId.toString()) [CD]
Line_95 $$ Integer catId = 0, ownerId = 0 --> Line_107 $$ ArrayList alOtherBooks = ((ejb.bprocess.opac.SearchCatalogue) ejb.bprocess.util.HomeFactory.getInstance().getHome("SearchCatalogue")).getOtherBooksInTheRack(null, catId.toString(), ownerId.toString(), ownerId.toString()) [FD]
Line_98 $$ catId = new Integer(request.getParameter("CatId")).intValue() --> Line_107 $$ ArrayList alOtherBooks = ((ejb.bprocess.opac.SearchCatalogue) ejb.bprocess.util.HomeFactory.getInstance().getHome("SearchCatalogue")).getOtherBooksInTheRack(null, catId.toString(), ownerId.toString(), ownerId.toString()) [FD]
Line_99 $$ ownerId = new Integer(request.getParameter("OwnerId")).intValue() --> Line_107 $$ ArrayList alOtherBooks = ((ejb.bprocess.opac.SearchCatalogue) ejb.bprocess.util.HomeFactory.getInstance().getHome("SearchCatalogue")).getOtherBooksInTheRack(null, catId.toString(), ownerId.toString(), ownerId.toString()) [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_108 $$ System.out.println("alOtherBooks size is  " + alOtherBooks.size()) [CD]
Line_107 $$ ArrayList alOtherBooks = ((ejb.bprocess.opac.SearchCatalogue) ejb.bprocess.util.HomeFactory.getInstance().getHome("SearchCatalogue")).getOtherBooksInTheRack(null, catId.toString(), ownerId.toString(), ownerId.toString()) --> Line_108 $$ System.out.println("alOtherBooks size is  " + alOtherBooks.size()) [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_109 $$ Vector vOtherBooks = new Vector() [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_110 $$ Session catrecsession = DBConnector.getInstance().getSession() [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_111 $$ utility = ejb.bprocess.util.Utility.getInstance(catrecsession) [CD]
Line_110 $$ Session catrecsession = DBConnector.getInstance().getSession() --> Line_111 $$ utility = ejb.bprocess.util.Utility.getInstance(catrecsession) [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_112 $$ for (int i = 0; i < alOtherBooks.size(); i++) [CD]
Line_107 $$ ArrayList alOtherBooks = ((ejb.bprocess.opac.SearchCatalogue) ejb.bprocess.util.HomeFactory.getInstance().getHome("SearchCatalogue")).getOtherBooksInTheRack(null, catId.toString(), ownerId.toString(), ownerId.toString()) --> Line_112 $$ for (int i = 0; i < alOtherBooks.size(); i++) [FD]
Line_112 $$ for (int i = 0; i < alOtherBooks.size(); i++) --> Line_113 $$ String[] scData = (String[]) (alOtherBooks.get(i)) [CD]
Line_112 $$ for (int i = 0; i < alOtherBooks.size(); i++) --> Line_113 $$ String[] scData = (String[]) (alOtherBooks.get(i)) [FD]
Line_107 $$ ArrayList alOtherBooks = ((ejb.bprocess.opac.SearchCatalogue) ejb.bprocess.util.HomeFactory.getInstance().getHome("SearchCatalogue")).getOtherBooksInTheRack(null, catId.toString(), ownerId.toString(), ownerId.toString()) --> Line_113 $$ String[] scData = (String[]) (alOtherBooks.get(i)) [FD]
Line_112 $$ for (int i = 0; i < alOtherBooks.size(); i++) --> Line_114 $$ String catalogueId = scData[0] [CD]
Line_112 $$ for (int i = 0; i < alOtherBooks.size(); i++) --> Line_115 $$ String ownerLibId = scData[1] [CD]
Line_112 $$ for (int i = 0; i < alOtherBooks.size(); i++) --> Line_116 $$ System.out.println("catId is +++=" + catalogueId) [CD]
Line_112 $$ for (int i = 0; i < alOtherBooks.size(); i++) --> Line_117 $$ System.out.println("OwnerId is +++=" + ownerLibId) [CD]
Line_112 $$ for (int i = 0; i < alOtherBooks.size(); i++) --> Line_118 $$ String xmlWholeRecord = "" [CD]
Line_112 $$ for (int i = 0; i < alOtherBooks.size(); i++) --> Line_119 $$ String titleD = "" [CD]
Line_112 $$ for (int i = 0; i < alOtherBooks.size(); i++) --> Line_120 $$ String titleV = "" [CD]
Line_112 $$ for (int i = 0; i < alOtherBooks.size(); i++) --> Line_121 $$ String authorV = "" [CD]
Line_112 $$ for (int i = 0; i < alOtherBooks.size(); i++) --> Line_122 $$ String isbnNumber = "" [CD]
Line_112 $$ for (int i = 0; i < alOtherBooks.size(); i++) --> Line_123 $$ if (catalogueId != null && ownerLibId != null) [CD]
Line_126 $$ Hashtable htDetails = utility.getCatalogueRecord(new Integer(catalogueId), new Integer(ownerLibId)) --> Line_128 $$ if (htDetails != null && !htDetails.isEmpty()) [FD]
Line_128 $$ if (htDetails != null && !htDetails.isEmpty()) --> Line_129 $$ System.out.println("htDetails" + htDetails.toString()) [CD]
Line_126 $$ Hashtable htDetails = utility.getCatalogueRecord(new Integer(catalogueId), new Integer(ownerLibId)) --> Line_129 $$ System.out.println("htDetails" + htDetails.toString()) [FD]
Line_128 $$ if (htDetails != null && !htDetails.isEmpty()) --> Line_130 $$ titleV = utility.getTestedString(htDetails.get("Title")) [CD]
Line_120 $$ String titleV = "" --> Line_130 $$ titleV = utility.getTestedString(htDetails.get("Title")) [FD]
Line_126 $$ Hashtable htDetails = utility.getCatalogueRecord(new Integer(catalogueId), new Integer(ownerLibId)) --> Line_130 $$ titleV = utility.getTestedString(htDetails.get("Title")) [FD]
Line_128 $$ if (htDetails != null && !htDetails.isEmpty()) --> Line_131 $$ authorV = utility.getTestedString(htDetails.get("Author")) [CD]
Line_121 $$ String authorV = "" --> Line_131 $$ authorV = utility.getTestedString(htDetails.get("Author")) [FD]
Line_126 $$ Hashtable htDetails = utility.getCatalogueRecord(new Integer(catalogueId), new Integer(ownerLibId)) --> Line_131 $$ authorV = utility.getTestedString(htDetails.get("Author")) [FD]
Line_128 $$ if (htDetails != null && !htDetails.isEmpty()) --> Line_132 $$ isbnNumber = utility.getTestedString(htDetails.get("ISBN")) [CD]
Line_122 $$ String isbnNumber = "" --> Line_132 $$ isbnNumber = utility.getTestedString(htDetails.get("ISBN")) [FD]
Line_126 $$ Hashtable htDetails = utility.getCatalogueRecord(new Integer(catalogueId), new Integer(ownerLibId)) --> Line_132 $$ isbnNumber = utility.getTestedString(htDetails.get("ISBN")) [FD]
Line_128 $$ if (htDetails != null && !htDetails.isEmpty()) --> Line_133 $$ String[] str1 = titleV.split("/") [CD]
Line_120 $$ String titleV = "" --> Line_133 $$ String[] str1 = titleV.split("/") [FD]
Line_130 $$ titleV = utility.getTestedString(htDetails.get("Title")) --> Line_133 $$ String[] str1 = titleV.split("/") [FD]
Line_128 $$ if (htDetails != null && !htDetails.isEmpty()) --> Line_134 $$ if (str1.length > 0) [CD]
Line_134 $$ if (str1.length > 0) --> Line_135 $$ titleD = str1[0] [CD]
Line_119 $$ String titleD = "" --> Line_135 $$ titleD = str1[0] [FD]
Line_134 $$ if (str1.length > 0) --> Line_136 $$ if (titleD.length() > 45) [CD]
Line_119 $$ String titleD = "" --> Line_136 $$ if (titleD.length() > 45) [FD]
Line_135 $$ titleD = str1[0] --> Line_136 $$ if (titleD.length() > 45) [FD]
Line_136 $$ if (titleD.length() > 45) --> Line_137 $$ titleD = titleD.substring(0, 45) + "..." [CD]
Line_119 $$ String titleD = "" --> Line_137 $$ titleD = titleD.substring(0, 45) + "..." [FD]
Line_135 $$ titleD = str1[0] --> Line_137 $$ titleD = titleD.substring(0, 45) + "..." [FD]
Line_128 $$ if (htDetails != null && !htDetails.isEmpty()) --> Line_140 $$ String[] str = new String[5] [CD]
Line_128 $$ if (htDetails != null && !htDetails.isEmpty()) --> Line_141 $$ str[0] = titleD [CD]
Line_119 $$ String titleD = "" --> Line_141 $$ str[0] = titleD [FD]
Line_135 $$ titleD = str1[0] --> Line_141 $$ str[0] = titleD [FD]
Line_137 $$ titleD = titleD.substring(0, 45) + "..." --> Line_141 $$ str[0] = titleD [FD]
Line_128 $$ if (htDetails != null && !htDetails.isEmpty()) --> Line_142 $$ str[1] = authorV [CD]
Line_121 $$ String authorV = "" --> Line_142 $$ str[1] = authorV [FD]
Line_131 $$ authorV = utility.getTestedString(htDetails.get("Author")) --> Line_142 $$ str[1] = authorV [FD]
Line_128 $$ if (htDetails != null && !htDetails.isEmpty()) --> Line_143 $$ str[2] = isbnNumber [CD]
Line_122 $$ String isbnNumber = "" --> Line_143 $$ str[2] = isbnNumber [FD]
Line_132 $$ isbnNumber = utility.getTestedString(htDetails.get("ISBN")) --> Line_143 $$ str[2] = isbnNumber [FD]
Line_128 $$ if (htDetails != null && !htDetails.isEmpty()) --> Line_144 $$ str[3] = catalogueId [CD]
Line_114 $$ String catalogueId = scData[0] --> Line_144 $$ str[3] = catalogueId [FD]
Line_128 $$ if (htDetails != null && !htDetails.isEmpty()) --> Line_145 $$ str[4] = ownerLibId [CD]
Line_115 $$ String ownerLibId = scData[1] --> Line_145 $$ str[4] = ownerLibId [FD]
Line_128 $$ if (htDetails != null && !htDetails.isEmpty()) --> Line_146 $$ vOtherBooks.add(str) [CD]
Line_109 $$ Vector vOtherBooks = new Vector() --> Line_146 $$ vOtherBooks.add(str) [FD]
Line_140 $$ String[] str = new String[5] --> Line_146 $$ vOtherBooks.add(str) [FD]
Line_128 $$ if (htDetails != null && !htDetails.isEmpty()) --> Line_147 $$ System.out.println("Other Books size is " + vOtherBooks.size()) [CD]
Line_109 $$ Vector vOtherBooks = new Vector() --> Line_147 $$ System.out.println("Other Books size is " + vOtherBooks.size()) [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_154 $$ System.out.println("Other Books vector is *************************** \n ") [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_155 $$ for (int i = 0; i < vOtherBooks.size(); i++) [CD]
Line_112 $$ for (int i = 0; i < alOtherBooks.size(); i++) --> Line_155 $$ for (int i = 0; i < vOtherBooks.size(); i++) [FD]
Line_109 $$ Vector vOtherBooks = new Vector() --> Line_155 $$ for (int i = 0; i < vOtherBooks.size(); i++) [FD]
Line_155 $$ for (int i = 0; i < vOtherBooks.size(); i++) --> Line_156 $$ String[] str = (String[]) vOtherBooks.get(i) [CD]
Line_155 $$ for (int i = 0; i < vOtherBooks.size(); i++) --> Line_156 $$ String[] str = (String[]) vOtherBooks.get(i) [FD]
Line_109 $$ Vector vOtherBooks = new Vector() --> Line_156 $$ String[] str = (String[]) vOtherBooks.get(i) [FD]
Line_112 $$ for (int i = 0; i < alOtherBooks.size(); i++) --> Line_156 $$ String[] str = (String[]) vOtherBooks.get(i) [FD]
Line_155 $$ for (int i = 0; i < vOtherBooks.size(); i++) --> Line_157 $$ System.out.println("title   :" + str[0].toString()) [CD]
Line_155 $$ for (int i = 0; i < vOtherBooks.size(); i++) --> Line_158 $$ System.out.println("author  :" + str[1].toString()) [CD]
Line_155 $$ for (int i = 0; i < vOtherBooks.size(); i++) --> Line_159 $$ System.out.println("isbn  :" + str[2].toString()) [CD]
Line_155 $$ for (int i = 0; i < vOtherBooks.size(); i++) --> Line_160 $$ System.out.println("catID  :" + str[3].toString()) [CD]
Line_155 $$ for (int i = 0; i < vOtherBooks.size(); i++) --> Line_161 $$ System.out.println("ownerLibId  :" + str[4].toString()) [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_163 $$ System.out.println("&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&") [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_164 $$ request.setAttribute("fisheyedata", vOtherBooks) [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_164 $$ request.setAttribute("fisheyedata", vOtherBooks) [FD]
Line_109 $$ Vector vOtherBooks = new Vector() --> Line_164 $$ request.setAttribute("fisheyedata", vOtherBooks) [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_165 $$ catrecsession.close() [CD]
Line_110 $$ Session catrecsession = DBConnector.getInstance().getSession() --> Line_165 $$ catrecsession.close() [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_166 $$ session.setAttribute("SingleViewExport", vecThisPage) [CD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_166 $$ session.setAttribute("SingleViewExport", vecThisPage) [FD]
Line_24 $$ java.util.Vector vecThisPage = new java.util.Vector() --> Line_166 $$ session.setAttribute("SingleViewExport", vecThisPage) [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_167 $$ if (session.getAttribute("OnlySingleRec") != null && session.getAttribute("OnlySingleRec").toString().equals("true")) [CD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_167 $$ if (session.getAttribute("OnlySingleRec") != null && session.getAttribute("OnlySingleRec").toString().equals("true")) [FD]
Line_167 $$ if (session.getAttribute("OnlySingleRec") != null && session.getAttribute("OnlySingleRec").toString().equals("true")) --> Line_169 $$ System.out.println("SEARCH MODE " + searchmode) [CD]
Line_167 $$ if (session.getAttribute("OnlySingleRec") != null && session.getAttribute("OnlySingleRec").toString().equals("true")) --> Line_170 $$ if (searchmode.equalsIgnoreCase("a")) [CD]
Line_170 $$ if (searchmode.equalsIgnoreCase("a")) --> Line_171 $$ System.out.println("SEARCHMODE IN SEARCH VIEW ACTION (IF) " + searchmode) [CD]
Line_170 $$ if (searchmode.equalsIgnoreCase("a")) --> Line_172 $$ v1 = (java.util.Vector) request.getAttribute("LuceneVector") [CD]
Line_64 $$ java.util.Vector v1 = new java.util.Vector() --> Line_172 $$ v1 = (java.util.Vector) request.getAttribute("LuceneVector") [FD]
Line_79 $$ v1 = (Vector) ht.get("RESULTS") --> Line_172 $$ v1 = (java.util.Vector) request.getAttribute("LuceneVector") [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_172 $$ v1 = (java.util.Vector) request.getAttribute("LuceneVector") [FD]
Line_170 $$ if (searchmode.equalsIgnoreCase("a")) --> Line_173 $$ System.out.println("VECTOR V1 " + v1) [CD]
Line_170 $$ if (searchmode.equalsIgnoreCase("a")) --> Line_175 $$ System.out.println("SEARCHMODE IN SEARCH VIEW ACTION (ELSE)" + searchmode) [CD]
Line_170 $$ if (searchmode.equalsIgnoreCase("a")) --> Line_176 $$ v1 = (java.util.Vector) session.getAttribute("searchVec") [CD]
Line_64 $$ java.util.Vector v1 = new java.util.Vector() --> Line_176 $$ v1 = (java.util.Vector) session.getAttribute("searchVec") [FD]
Line_79 $$ v1 = (Vector) ht.get("RESULTS") --> Line_176 $$ v1 = (java.util.Vector) session.getAttribute("searchVec") [FD]
Line_172 $$ v1 = (java.util.Vector) request.getAttribute("LuceneVector") --> Line_176 $$ v1 = (java.util.Vector) session.getAttribute("searchVec") [FD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_176 $$ v1 = (java.util.Vector) session.getAttribute("searchVec") [FD]
Line_167 $$ if (session.getAttribute("OnlySingleRec") != null && session.getAttribute("OnlySingleRec").toString().equals("true")) --> Line_178 $$ Object[] obj = (Object[]) v1.elementAt(0) [CD]
Line_64 $$ java.util.Vector v1 = new java.util.Vector() --> Line_178 $$ Object[] obj = (Object[]) v1.elementAt(0) [FD]
Line_79 $$ v1 = (Vector) ht.get("RESULTS") --> Line_178 $$ Object[] obj = (Object[]) v1.elementAt(0) [FD]
Line_172 $$ v1 = (java.util.Vector) request.getAttribute("LuceneVector") --> Line_178 $$ Object[] obj = (Object[]) v1.elementAt(0) [FD]
Line_176 $$ v1 = (java.util.Vector) session.getAttribute("searchVec") --> Line_178 $$ Object[] obj = (Object[]) v1.elementAt(0) [FD]
Line_167 $$ if (session.getAttribute("OnlySingleRec") != null && session.getAttribute("OnlySingleRec").toString().equals("true")) --> Line_179 $$ String str[] = (String[]) obj[0] [CD]
Line_167 $$ if (session.getAttribute("OnlySingleRec") != null && session.getAttribute("OnlySingleRec").toString().equals("true")) --> Line_180 $$ java.util.Hashtable h = new java.util.Hashtable() [CD]
Line_167 $$ if (session.getAttribute("OnlySingleRec") != null && session.getAttribute("OnlySingleRec").toString().equals("true")) --> Line_181 $$ String tit = "" [CD]
Line_167 $$ if (session.getAttribute("OnlySingleRec") != null && session.getAttribute("OnlySingleRec").toString().equals("true")) --> Line_182 $$ h = (java.util.Hashtable) obj[1] [CD]
Line_180 $$ java.util.Hashtable h = new java.util.Hashtable() --> Line_182 $$ h = (java.util.Hashtable) obj[1] [FD]
Line_167 $$ if (session.getAttribute("OnlySingleRec") != null && session.getAttribute("OnlySingleRec").toString().equals("true")) --> Line_183 $$ System.out.println("HASH TABLE in view action " + h) [CD]
Line_167 $$ if (session.getAttribute("OnlySingleRec") != null && session.getAttribute("OnlySingleRec").toString().equals("true")) --> Line_184 $$ catId = new Integer(str[0]).intValue() [CD]
Line_95 $$ Integer catId = 0, ownerId = 0 --> Line_184 $$ catId = new Integer(str[0]).intValue() [FD]
Line_98 $$ catId = new Integer(request.getParameter("CatId")).intValue() --> Line_184 $$ catId = new Integer(str[0]).intValue() [FD]
Line_167 $$ if (session.getAttribute("OnlySingleRec") != null && session.getAttribute("OnlySingleRec").toString().equals("true")) --> Line_185 $$ ownerId = new Integer(str[1]).intValue() [CD]
Line_95 $$ Integer catId = 0, ownerId = 0 --> Line_185 $$ ownerId = new Integer(str[1]).intValue() [FD]
Line_99 $$ ownerId = new Integer(request.getParameter("OwnerId")).intValue() --> Line_185 $$ ownerId = new Integer(str[1]).intValue() [FD]
Line_167 $$ if (session.getAttribute("OnlySingleRec") != null && session.getAttribute("OnlySingleRec").toString().equals("true")) --> Line_186 $$ title = h.get("TITLE").toString() [CD]
Line_96 $$ String title = "" --> Line_186 $$ title = h.get("TITLE").toString() [FD]
Line_102 $$ title = request.getParameter("title") --> Line_186 $$ title = h.get("TITLE").toString() [FD]
Line_180 $$ java.util.Hashtable h = new java.util.Hashtable() --> Line_186 $$ title = h.get("TITLE").toString() [FD]
Line_182 $$ h = (java.util.Hashtable) obj[1] --> Line_186 $$ title = h.get("TITLE").toString() [FD]
Line_167 $$ if (session.getAttribute("OnlySingleRec") != null && session.getAttribute("OnlySingleRec").toString().equals("true")) --> Line_187 $$ svF.setAttachmentsAndUrl("") [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_187 $$ svF.setAttachmentsAndUrl("") [FD]
Line_167 $$ if (session.getAttribute("OnlySingleRec") != null && session.getAttribute("OnlySingleRec").toString().equals("true")) --> Line_188 $$ if ((h.get("ATTACHMENTS") != null && h.get("ATTACHMENTS").equals("AVAILABLE"))) [CD]
Line_180 $$ java.util.Hashtable h = new java.util.Hashtable() --> Line_188 $$ if ((h.get("ATTACHMENTS") != null && h.get("ATTACHMENTS").equals("AVAILABLE"))) [FD]
Line_182 $$ h = (java.util.Hashtable) obj[1] --> Line_188 $$ if ((h.get("ATTACHMENTS") != null && h.get("ATTACHMENTS").equals("AVAILABLE"))) [FD]
Line_188 $$ if ((h.get("ATTACHMENTS") != null && h.get("ATTACHMENTS").equals("AVAILABLE"))) --> Line_189 $$ svF.setAttachmentsAndUrl("available") [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_189 $$ svF.setAttachmentsAndUrl("available") [FD]
Line_167 $$ if (session.getAttribute("OnlySingleRec") != null && session.getAttribute("OnlySingleRec").toString().equals("true")) --> Line_191 $$ record = "full" [CD]
Line_93 $$ String record = request.getParameter("record") --> Line_191 $$ record = "full" [FD]
Line_167 $$ if (session.getAttribute("OnlySingleRec") != null && session.getAttribute("OnlySingleRec").toString().equals("true")) --> Line_192 $$ recNo = "1" [CD]
Line_94 $$ String recNo = request.getParameter("recNo") --> Line_192 $$ recNo = "1" [FD]
Line_167 $$ if (session.getAttribute("OnlySingleRec") != null && session.getAttribute("OnlySingleRec").toString().equals("true")) --> Line_193 $$ session.removeAttribute("OnlySingleRec") [CD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_193 $$ session.removeAttribute("OnlySingleRec") [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_195 $$ if (session.getAttribute("HostItemDisplay") != null && session.getAttribute("HostItemDisplay").equals("false")) [CD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_195 $$ if (session.getAttribute("HostItemDisplay") != null && session.getAttribute("HostItemDisplay").equals("false")) [FD]
Line_195 $$ if (session.getAttribute("HostItemDisplay") != null && session.getAttribute("HostItemDisplay").equals("false")) --> Line_196 $$ session.removeAttribute("HostItemDisplay") [CD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_196 $$ session.removeAttribute("HostItemDisplay") [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_198 $$ session.setAttribute("Title", title) [CD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_198 $$ session.setAttribute("Title", title) [FD]
Line_96 $$ String title = "" --> Line_198 $$ session.setAttribute("Title", title) [FD]
Line_102 $$ title = request.getParameter("title") --> Line_198 $$ session.setAttribute("Title", title) [FD]
Line_186 $$ title = h.get("TITLE").toString() --> Line_198 $$ session.setAttribute("Title", title) [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_199 $$ java.util.Hashtable hash1 = opacUt.getDetailsForSingleCatalogueRecord(catId, ownerId) [CD]
Line_29 $$ ejb.bprocess.opac.xcql.OPACUtilities opacUt = opacHm.create() --> Line_199 $$ java.util.Hashtable hash1 = opacUt.getDetailsForSingleCatalogueRecord(catId, ownerId) [FD]
Line_95 $$ Integer catId = 0, ownerId = 0 --> Line_199 $$ java.util.Hashtable hash1 = opacUt.getDetailsForSingleCatalogueRecord(catId, ownerId) [FD]
Line_98 $$ catId = new Integer(request.getParameter("CatId")).intValue() --> Line_199 $$ java.util.Hashtable hash1 = opacUt.getDetailsForSingleCatalogueRecord(catId, ownerId) [FD]
Line_184 $$ catId = new Integer(str[0]).intValue() --> Line_199 $$ java.util.Hashtable hash1 = opacUt.getDetailsForSingleCatalogueRecord(catId, ownerId) [FD]
Line_99 $$ ownerId = new Integer(request.getParameter("OwnerId")).intValue() --> Line_199 $$ java.util.Hashtable hash1 = opacUt.getDetailsForSingleCatalogueRecord(catId, ownerId) [FD]
Line_185 $$ ownerId = new Integer(str[1]).intValue() --> Line_199 $$ java.util.Hashtable hash1 = opacUt.getDetailsForSingleCatalogueRecord(catId, ownerId) [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_200 $$ vecThisPage.addElement(String.valueOf(catId)) [CD]
Line_24 $$ java.util.Vector vecThisPage = new java.util.Vector() --> Line_200 $$ vecThisPage.addElement(String.valueOf(catId)) [FD]
Line_95 $$ Integer catId = 0, ownerId = 0 --> Line_200 $$ vecThisPage.addElement(String.valueOf(catId)) [FD]
Line_98 $$ catId = new Integer(request.getParameter("CatId")).intValue() --> Line_200 $$ vecThisPage.addElement(String.valueOf(catId)) [FD]
Line_184 $$ catId = new Integer(str[0]).intValue() --> Line_200 $$ vecThisPage.addElement(String.valueOf(catId)) [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_201 $$ vecThisPage.addElement(String.valueOf(ownerId)) [CD]
Line_24 $$ java.util.Vector vecThisPage = new java.util.Vector() --> Line_201 $$ vecThisPage.addElement(String.valueOf(ownerId)) [FD]
Line_95 $$ Integer catId = 0, ownerId = 0 --> Line_201 $$ vecThisPage.addElement(String.valueOf(ownerId)) [FD]
Line_99 $$ ownerId = new Integer(request.getParameter("OwnerId")).intValue() --> Line_201 $$ vecThisPage.addElement(String.valueOf(ownerId)) [FD]
Line_185 $$ ownerId = new Integer(str[1]).intValue() --> Line_201 $$ vecThisPage.addElement(String.valueOf(ownerId)) [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_202 $$ svF.setAttachmentsAndUrl("") [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_202 $$ svF.setAttachmentsAndUrl("") [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_203 $$ if (hash1.get("ATTACHMENTS") != null && hash1.get("ATTACHMENTS").toString().equals("AVAILABLE")) [CD]
Line_199 $$ java.util.Hashtable hash1 = opacUt.getDetailsForSingleCatalogueRecord(catId, ownerId) --> Line_203 $$ if (hash1.get("ATTACHMENTS") != null && hash1.get("ATTACHMENTS").toString().equals("AVAILABLE")) [FD]
Line_203 $$ if (hash1.get("ATTACHMENTS") != null && hash1.get("ATTACHMENTS").toString().equals("AVAILABLE")) --> Line_204 $$ svF.setAttachmentsAndUrl("available") [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_204 $$ svF.setAttachmentsAndUrl("available") [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_206 $$ svF.setRecordNo(recNo) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_206 $$ svF.setRecordNo(recNo) [FD]
Line_94 $$ String recNo = request.getParameter("recNo") --> Line_206 $$ svF.setRecordNo(recNo) [FD]
Line_192 $$ recNo = "1" --> Line_206 $$ svF.setRecordNo(recNo) [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_207 $$ session.setAttribute("record", record) [CD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_207 $$ session.setAttribute("record", record) [FD]
Line_93 $$ String record = request.getParameter("record") --> Line_207 $$ session.setAttribute("record", record) [FD]
Line_191 $$ record = "full" --> Line_207 $$ session.setAttribute("record", record) [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_208 $$ java.util.Vector vecCO = (java.util.Vector) session.getAttribute("CatAndOwner") [CD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_208 $$ java.util.Vector vecCO = (java.util.Vector) session.getAttribute("CatAndOwner") [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_209 $$ svF.setCatCur(catId) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_209 $$ svF.setCatCur(catId) [FD]
Line_95 $$ Integer catId = 0, ownerId = 0 --> Line_209 $$ svF.setCatCur(catId) [FD]
Line_98 $$ catId = new Integer(request.getParameter("CatId")).intValue() --> Line_209 $$ svF.setCatCur(catId) [FD]
Line_184 $$ catId = new Integer(str[0]).intValue() --> Line_209 $$ svF.setCatCur(catId) [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_210 $$ svF.setOwnerCur(ownerId) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_210 $$ svF.setOwnerCur(ownerId) [FD]
Line_95 $$ Integer catId = 0, ownerId = 0 --> Line_210 $$ svF.setOwnerCur(ownerId) [FD]
Line_99 $$ ownerId = new Integer(request.getParameter("OwnerId")).intValue() --> Line_210 $$ svF.setOwnerCur(ownerId) [FD]
Line_185 $$ ownerId = new Integer(str[1]).intValue() --> Line_210 $$ svF.setOwnerCur(ownerId) [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_211 $$ svF.setPrevExists("no") [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_211 $$ svF.setPrevExists("no") [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_212 $$ svF.setNextExists("no") [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_212 $$ svF.setNextExists("no") [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_213 $$ if (vecCO != null) [CD]
Line_208 $$ java.util.Vector vecCO = (java.util.Vector) session.getAttribute("CatAndOwner") --> Line_213 $$ if (vecCO != null) [FD]
Line_213 $$ if (vecCO != null) --> Line_214 $$ for (int j = 0; j < vecCO.size(); j = j + 4) [CD]
Line_208 $$ java.util.Vector vecCO = (java.util.Vector) session.getAttribute("CatAndOwner") --> Line_214 $$ for (int j = 0; j < vecCO.size(); j = j + 4) [FD]
Line_214 $$ for (int j = 0; j < vecCO.size(); j = j + 4) --> Line_215 $$ int c = new Integer(vecCO.elementAt(j).toString()).intValue() [CD]
Line_214 $$ for (int j = 0; j < vecCO.size(); j = j + 4) --> Line_215 $$ int c = new Integer(vecCO.elementAt(j).toString()).intValue() [FD]
Line_208 $$ java.util.Vector vecCO = (java.util.Vector) session.getAttribute("CatAndOwner") --> Line_215 $$ int c = new Integer(vecCO.elementAt(j).toString()).intValue() [FD]
Line_214 $$ for (int j = 0; j < vecCO.size(); j = j + 4) --> Line_216 $$ int o = new Integer(vecCO.elementAt(j + 1).toString()).intValue() [CD]
Line_208 $$ java.util.Vector vecCO = (java.util.Vector) session.getAttribute("CatAndOwner") --> Line_216 $$ int o = new Integer(vecCO.elementAt(j + 1).toString()).intValue() [FD]
Line_214 $$ for (int j = 0; j < vecCO.size(); j = j + 4) --> Line_217 $$ if (c == catId && o == ownerId) [CD]
Line_217 $$ if (c == catId && o == ownerId) --> Line_218 $$ if (j != 0) [CD]
Line_214 $$ for (int j = 0; j < vecCO.size(); j = j + 4) --> Line_218 $$ if (j != 0) [FD]
Line_218 $$ if (j != 0) --> Line_219 $$ int catPrev = new Integer(vecCO.elementAt(j - 4).toString()).intValue() [CD]
Line_208 $$ java.util.Vector vecCO = (java.util.Vector) session.getAttribute("CatAndOwner") --> Line_219 $$ int catPrev = new Integer(vecCO.elementAt(j - 4).toString()).intValue() [FD]
Line_218 $$ if (j != 0) --> Line_220 $$ int ownerPrev = new Integer(vecCO.elementAt(j - 3).toString()).intValue() [CD]
Line_208 $$ java.util.Vector vecCO = (java.util.Vector) session.getAttribute("CatAndOwner") --> Line_220 $$ int ownerPrev = new Integer(vecCO.elementAt(j - 3).toString()).intValue() [FD]
Line_218 $$ if (j != 0) --> Line_221 $$ svF.setCatPrev(catPrev) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_221 $$ svF.setCatPrev(catPrev) [FD]
Line_219 $$ int catPrev = new Integer(vecCO.elementAt(j - 4).toString()).intValue() --> Line_221 $$ svF.setCatPrev(catPrev) [FD]
Line_218 $$ if (j != 0) --> Line_222 $$ svF.setOwnerPrev(ownerPrev) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_222 $$ svF.setOwnerPrev(ownerPrev) [FD]
Line_220 $$ int ownerPrev = new Integer(vecCO.elementAt(j - 3).toString()).intValue() --> Line_222 $$ svF.setOwnerPrev(ownerPrev) [FD]
Line_218 $$ if (j != 0) --> Line_223 $$ svF.setTitlePrev(vecCO.elementAt(j - 2).toString()) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_223 $$ svF.setTitlePrev(vecCO.elementAt(j - 2).toString()) [FD]
Line_208 $$ java.util.Vector vecCO = (java.util.Vector) session.getAttribute("CatAndOwner") --> Line_223 $$ svF.setTitlePrev(vecCO.elementAt(j - 2).toString()) [FD]
Line_218 $$ if (j != 0) --> Line_224 $$ svF.setRecPrev(vecCO.elementAt(j - 1).toString()) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_224 $$ svF.setRecPrev(vecCO.elementAt(j - 1).toString()) [FD]
Line_208 $$ java.util.Vector vecCO = (java.util.Vector) session.getAttribute("CatAndOwner") --> Line_224 $$ svF.setRecPrev(vecCO.elementAt(j - 1).toString()) [FD]
Line_218 $$ if (j != 0) --> Line_225 $$ svF.setPrevExists("yes") [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_225 $$ svF.setPrevExists("yes") [FD]
Line_217 $$ if (c == catId && o == ownerId) --> Line_227 $$ if (j < vecCO.size() - 4) [CD]
Line_214 $$ for (int j = 0; j < vecCO.size(); j = j + 4) --> Line_227 $$ if (j < vecCO.size() - 4) [FD]
Line_208 $$ java.util.Vector vecCO = (java.util.Vector) session.getAttribute("CatAndOwner") --> Line_227 $$ if (j < vecCO.size() - 4) [FD]
Line_227 $$ if (j < vecCO.size() - 4) --> Line_228 $$ int catNext = new Integer(vecCO.elementAt(j + 4).toString()).intValue() [CD]
Line_208 $$ java.util.Vector vecCO = (java.util.Vector) session.getAttribute("CatAndOwner") --> Line_228 $$ int catNext = new Integer(vecCO.elementAt(j + 4).toString()).intValue() [FD]
Line_227 $$ if (j < vecCO.size() - 4) --> Line_229 $$ int ownerNext = new Integer(vecCO.elementAt(j + 5).toString()).intValue() [CD]
Line_208 $$ java.util.Vector vecCO = (java.util.Vector) session.getAttribute("CatAndOwner") --> Line_229 $$ int ownerNext = new Integer(vecCO.elementAt(j + 5).toString()).intValue() [FD]
Line_227 $$ if (j < vecCO.size() - 4) --> Line_230 $$ svF.setCatNext(catNext) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_230 $$ svF.setCatNext(catNext) [FD]
Line_228 $$ int catNext = new Integer(vecCO.elementAt(j + 4).toString()).intValue() --> Line_230 $$ svF.setCatNext(catNext) [FD]
Line_227 $$ if (j < vecCO.size() - 4) --> Line_231 $$ svF.setOwnerNext(ownerNext) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_231 $$ svF.setOwnerNext(ownerNext) [FD]
Line_229 $$ int ownerNext = new Integer(vecCO.elementAt(j + 5).toString()).intValue() --> Line_231 $$ svF.setOwnerNext(ownerNext) [FD]
Line_227 $$ if (j < vecCO.size() - 4) --> Line_232 $$ svF.setTitleNext(vecCO.elementAt(j + 6).toString()) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_232 $$ svF.setTitleNext(vecCO.elementAt(j + 6).toString()) [FD]
Line_208 $$ java.util.Vector vecCO = (java.util.Vector) session.getAttribute("CatAndOwner") --> Line_232 $$ svF.setTitleNext(vecCO.elementAt(j + 6).toString()) [FD]
Line_227 $$ if (j < vecCO.size() - 4) --> Line_233 $$ svF.setRecNext(vecCO.elementAt(j + 7).toString()) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_233 $$ svF.setRecNext(vecCO.elementAt(j + 7).toString()) [FD]
Line_208 $$ java.util.Vector vecCO = (java.util.Vector) session.getAttribute("CatAndOwner") --> Line_233 $$ svF.setRecNext(vecCO.elementAt(j + 7).toString()) [FD]
Line_227 $$ if (j < vecCO.size() - 4) --> Line_234 $$ svF.setNextExists("yes") [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_234 $$ svF.setNextExists("yes") [FD]
Line_199 $$ java.util.Hashtable hash1 = opacUt.getDetailsForSingleCatalogueRecord(catId, ownerId) --> Line_239 $$ String str[] = (String[]) hash1.get("Biblo_Mat") [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_240 $$ int bib_id = new Integer(str[0]).intValue() [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_241 $$ int mat_id = new Integer(str[1]).intValue() [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_242 $$ aportal.view.RecordView rv = new aportal.view.DesignFactory().getCorView(bib_id, mat_id, record) [CD]
Line_240 $$ int bib_id = new Integer(str[0]).intValue() --> Line_242 $$ aportal.view.RecordView rv = new aportal.view.DesignFactory().getCorView(bib_id, mat_id, record) [FD]
Line_241 $$ int mat_id = new Integer(str[1]).intValue() --> Line_242 $$ aportal.view.RecordView rv = new aportal.view.DesignFactory().getCorView(bib_id, mat_id, record) [FD]
Line_93 $$ String record = request.getParameter("record") --> Line_242 $$ aportal.view.RecordView rv = new aportal.view.DesignFactory().getCorView(bib_id, mat_id, record) [FD]
Line_191 $$ record = "full" --> Line_242 $$ aportal.view.RecordView rv = new aportal.view.DesignFactory().getCorView(bib_id, mat_id, record) [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_243 $$ String type = "" [CD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_244 $$ if (bib_id == 3 && mat_id == 1) [CD]
Line_244 $$ if (bib_id == 3 && mat_id == 1) --> Line_245 $$ type = "Book" [CD]
Line_243 $$ String type = "" --> Line_245 $$ type = "Book" [FD]
Line_244 $$ if (bib_id == 3 && mat_id == 1) --> Line_246 $$ if (bib_id == 4 && mat_id == 1) [CD]
Line_246 $$ if (bib_id == 4 && mat_id == 1) --> Line_247 $$ type = "Serial" [CD]
Line_243 $$ String type = "" --> Line_247 $$ type = "Serial" [FD]
Line_245 $$ type = "Book" --> Line_247 $$ type = "Serial" [FD]
Line_246 $$ if (bib_id == 4 && mat_id == 1) --> Line_248 $$ if (bib_id == 1 && mat_id == 1) [CD]
Line_248 $$ if (bib_id == 1 && mat_id == 1) --> Line_249 $$ type = "Book Chapter" [CD]
Line_243 $$ String type = "" --> Line_249 $$ type = "Book Chapter" [FD]
Line_245 $$ type = "Book" --> Line_249 $$ type = "Book Chapter" [FD]
Line_247 $$ type = "Serial" --> Line_249 $$ type = "Book Chapter" [FD]
Line_248 $$ if (bib_id == 1 && mat_id == 1) --> Line_250 $$ if (bib_id == 2 && mat_id == 1) [CD]
Line_250 $$ if (bib_id == 2 && mat_id == 1) --> Line_251 $$ type = "Serial Article" [CD]
Line_243 $$ String type = "" --> Line_251 $$ type = "Serial Article" [FD]
Line_245 $$ type = "Book" --> Line_251 $$ type = "Serial Article" [FD]
Line_247 $$ type = "Serial" --> Line_251 $$ type = "Serial Article" [FD]
Line_249 $$ type = "Book Chapter" --> Line_251 $$ type = "Serial Article" [FD]
Line_250 $$ if (bib_id == 2 && mat_id == 1) --> Line_253 $$ type = ejb.bprocess.util.TypeDefinition.getInstance().getTypeDefinition(String.valueOf(bib_id), String.valueOf(mat_id)) [CD]
Line_243 $$ String type = "" --> Line_253 $$ type = ejb.bprocess.util.TypeDefinition.getInstance().getTypeDefinition(String.valueOf(bib_id), String.valueOf(mat_id)) [FD]
Line_245 $$ type = "Book" --> Line_253 $$ type = ejb.bprocess.util.TypeDefinition.getInstance().getTypeDefinition(String.valueOf(bib_id), String.valueOf(mat_id)) [FD]
Line_247 $$ type = "Serial" --> Line_253 $$ type = ejb.bprocess.util.TypeDefinition.getInstance().getTypeDefinition(String.valueOf(bib_id), String.valueOf(mat_id)) [FD]
Line_249 $$ type = "Book Chapter" --> Line_253 $$ type = ejb.bprocess.util.TypeDefinition.getInstance().getTypeDefinition(String.valueOf(bib_id), String.valueOf(mat_id)) [FD]
Line_251 $$ type = "Serial Article" --> Line_253 $$ type = ejb.bprocess.util.TypeDefinition.getInstance().getTypeDefinition(String.valueOf(bib_id), String.valueOf(mat_id)) [FD]
Line_240 $$ int bib_id = new Integer(str[0]).intValue() --> Line_253 $$ type = ejb.bprocess.util.TypeDefinition.getInstance().getTypeDefinition(String.valueOf(bib_id), String.valueOf(mat_id)) [FD]
Line_241 $$ int mat_id = new Integer(str[1]).intValue() --> Line_253 $$ type = ejb.bprocess.util.TypeDefinition.getInstance().getTypeDefinition(String.valueOf(bib_id), String.valueOf(mat_id)) [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_255 $$ java.util.Hashtable hMono = (java.util.Hashtable) hash1.get("MonoGraphRecords") [CD]
Line_199 $$ java.util.Hashtable hash1 = opacUt.getDetailsForSingleCatalogueRecord(catId, ownerId) --> Line_255 $$ java.util.Hashtable hMono = (java.util.Hashtable) hash1.get("MonoGraphRecords") [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_256 $$ java.util.Hashtable h4 = rv.getView(hash1) [CD]
Line_242 $$ aportal.view.RecordView rv = new aportal.view.DesignFactory().getCorView(bib_id, mat_id, record) --> Line_256 $$ java.util.Hashtable h4 = rv.getView(hash1) [FD]
Line_199 $$ java.util.Hashtable hash1 = opacUt.getDetailsForSingleCatalogueRecord(catId, ownerId) --> Line_256 $$ java.util.Hashtable h4 = rv.getView(hash1) [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_257 $$ h4.put("Type", type) [CD]
Line_256 $$ java.util.Hashtable h4 = rv.getView(hash1) --> Line_257 $$ h4.put("Type", type) [FD]
Line_243 $$ String type = "" --> Line_257 $$ h4.put("Type", type) [FD]
Line_245 $$ type = "Book" --> Line_257 $$ h4.put("Type", type) [FD]
Line_247 $$ type = "Serial" --> Line_257 $$ h4.put("Type", type) [FD]
Line_249 $$ type = "Book Chapter" --> Line_257 $$ h4.put("Type", type) [FD]
Line_251 $$ type = "Serial Article" --> Line_257 $$ h4.put("Type", type) [FD]
Line_253 $$ type = ejb.bprocess.util.TypeDefinition.getInstance().getTypeDefinition(String.valueOf(bib_id), String.valueOf(mat_id)) --> Line_257 $$ h4.put("Type", type) [FD]
Line_256 $$ java.util.Hashtable h4 = rv.getView(hash1) --> Line_258 $$ Hashtable ht = (Hashtable) h4.get("NoLink") [FD]
Line_52 $$ if ((request.getParameter("ClassNo") != null) && session.getAttribute("ClassNoForwarded") == null) --> Line_259 $$ if (ht != null && ht.get("URLS_856") != null) [CD]
Line_76 $$ Hashtable ht = (Hashtable) newRetvec.get(0) --> Line_259 $$ if (ht != null && ht.get("URLS_856") != null) [FD]
Line_259 $$ if (ht != null && ht.get("URLS_856") != null) --> Line_260 $$ Vector urls856 = (Vector) ht.get("URLS_856") [CD]
Line_76 $$ Hashtable ht = (Hashtable) newRetvec.get(0) --> Line_260 $$ Vector urls856 = (Vector) ht.get("URLS_856") [FD]
Line_259 $$ if (ht != null && ht.get("URLS_856") != null) --> Line_261 $$ if (urls856.size() > 0) [CD]
Line_260 $$ Vector urls856 = (Vector) ht.get("URLS_856") --> Line_261 $$ if (urls856.size() > 0) [FD]
Line_261 $$ if (urls856.size() > 0) --> Line_262 $$ Hashtable linksAndText = new Hashtable() [CD]
Line_261 $$ if (urls856.size() > 0) --> Line_263 $$ Hashtable url856 = new Hashtable() [CD]
Line_261 $$ if (urls856.size() > 0) --> Line_264 $$ for (int i = 0; i < urls856.size(); i += 2) [CD]
Line_155 $$ for (int i = 0; i < vOtherBooks.size(); i++) --> Line_264 $$ for (int i = 0; i < urls856.size(); i += 2) [FD]
Line_112 $$ for (int i = 0; i < alOtherBooks.size(); i++) --> Line_264 $$ for (int i = 0; i < urls856.size(); i += 2) [FD]
Line_260 $$ Vector urls856 = (Vector) ht.get("URLS_856") --> Line_264 $$ for (int i = 0; i < urls856.size(); i += 2) [FD]
Line_264 $$ for (int i = 0; i < urls856.size(); i += 2) --> Line_265 $$ url856.put(urls856.elementAt(i), urls856.elementAt(i + 1)) [CD]
Line_264 $$ for (int i = 0; i < urls856.size(); i += 2) --> Line_265 $$ url856.put(urls856.elementAt(i), urls856.elementAt(i + 1)) [FD]
Line_263 $$ Hashtable url856 = new Hashtable() --> Line_265 $$ url856.put(urls856.elementAt(i), urls856.elementAt(i + 1)) [FD]
Line_260 $$ Vector urls856 = (Vector) ht.get("URLS_856") --> Line_265 $$ url856.put(urls856.elementAt(i), urls856.elementAt(i + 1)) [FD]
Line_155 $$ for (int i = 0; i < vOtherBooks.size(); i++) --> Line_265 $$ url856.put(urls856.elementAt(i), urls856.elementAt(i + 1)) [FD]
Line_112 $$ for (int i = 0; i < alOtherBooks.size(); i++) --> Line_265 $$ url856.put(urls856.elementAt(i), urls856.elementAt(i + 1)) [FD]
Line_261 $$ if (urls856.size() > 0) --> Line_267 $$ linksAndText.put("URL", url856) [CD]
Line_262 $$ Hashtable linksAndText = new Hashtable() --> Line_267 $$ linksAndText.put("URL", url856) [FD]
Line_263 $$ Hashtable url856 = new Hashtable() --> Line_267 $$ linksAndText.put("URL", url856) [FD]
Line_261 $$ if (urls856.size() > 0) --> Line_268 $$ h4.put("URLS_856", linksAndText) [CD]
Line_256 $$ java.util.Hashtable h4 = rv.getView(hash1) --> Line_268 $$ h4.put("URLS_856", linksAndText) [FD]
Line_262 $$ Hashtable linksAndText = new Hashtable() --> Line_268 $$ h4.put("URLS_856", linksAndText) [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_272 $$ String sessionid = request.getSession().getId() [FD]
Line_274 $$ java.util.Vector vecLib = new java.util.Vector() --> Line_275 $$ vecLib.addElement("1") [FD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_276 $$ if (session.getAttribute("Libraries") != null) [FD]
Line_276 $$ if (session.getAttribute("Libraries") != null) --> Line_277 $$ vecLib = (java.util.Vector) session.getAttribute("Libraries") [CD]
Line_274 $$ java.util.Vector vecLib = new java.util.Vector() --> Line_277 $$ vecLib = (java.util.Vector) session.getAttribute("Libraries") [FD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_277 $$ vecLib = (java.util.Vector) session.getAttribute("Libraries") [FD]
Line_274 $$ java.util.Vector vecLib = new java.util.Vector() --> Line_280 $$ for (int p = 0; p < vecLib.size(); p++) [FD]
Line_277 $$ vecLib = (java.util.Vector) session.getAttribute("Libraries") --> Line_280 $$ for (int p = 0; p < vecLib.size(); p++) [FD]
Line_280 $$ for (int p = 0; p < vecLib.size(); p++) --> Line_281 $$ if (p != 0) [CD]
Line_280 $$ for (int p = 0; p < vecLib.size(); p++) --> Line_281 $$ if (p != 0) [FD]
Line_281 $$ if (p != 0) --> Line_282 $$ libIds += "," [CD]
Line_279 $$ String libIds = "" --> Line_282 $$ libIds += "," [FD]
Line_280 $$ for (int p = 0; p < vecLib.size(); p++) --> Line_284 $$ String libName = vecLib.elementAt(p).toString() [CD]
Line_280 $$ for (int p = 0; p < vecLib.size(); p++) --> Line_284 $$ String libName = vecLib.elementAt(p).toString() [FD]
Line_274 $$ java.util.Vector vecLib = new java.util.Vector() --> Line_284 $$ String libName = vecLib.elementAt(p).toString() [FD]
Line_277 $$ vecLib = (java.util.Vector) session.getAttribute("Libraries") --> Line_284 $$ String libName = vecLib.elementAt(p).toString() [FD]
Line_280 $$ for (int p = 0; p < vecLib.size(); p++) --> Line_285 $$ Session session1 = DBConnector.getInstance().getSession() [CD]
Line_280 $$ for (int p = 0; p < vecLib.size(); p++) --> Line_286 $$ libIds += ejb.bprocess.util.Utility.getInstance(session1).getLibraryId(libName) [CD]
Line_282 $$ libIds += "," --> Line_286 $$ libIds += ejb.bprocess.util.Utility.getInstance(session1).getLibraryId(libName) [FD]
Line_279 $$ String libIds = "" --> Line_286 $$ libIds += ejb.bprocess.util.Utility.getInstance(session1).getLibraryId(libName) [FD]
Line_284 $$ String libName = vecLib.elementAt(p).toString() --> Line_286 $$ libIds += ejb.bprocess.util.Utility.getInstance(session1).getLibraryId(libName) [FD]
Line_285 $$ Session session1 = DBConnector.getInstance().getSession() --> Line_286 $$ libIds += ejb.bprocess.util.Utility.getInstance(session1).getLibraryId(libName) [FD]
Line_280 $$ for (int p = 0; p < vecLib.size(); p++) --> Line_287 $$ session1.close() [CD]
Line_285 $$ Session session1 = DBConnector.getInstance().getSession() --> Line_287 $$ session1.close() [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_289 $$ request.setAttribute("catRecId", String.valueOf(catId)) [FD]
Line_95 $$ Integer catId = 0, ownerId = 0 --> Line_289 $$ request.setAttribute("catRecId", String.valueOf(catId)) [FD]
Line_98 $$ catId = new Integer(request.getParameter("CatId")).intValue() --> Line_289 $$ request.setAttribute("catRecId", String.valueOf(catId)) [FD]
Line_184 $$ catId = new Integer(str[0]).intValue() --> Line_289 $$ request.setAttribute("catRecId", String.valueOf(catId)) [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_290 $$ request.setAttribute("ownLibId", String.valueOf(ownerId)) [FD]
Line_95 $$ Integer catId = 0, ownerId = 0 --> Line_290 $$ request.setAttribute("ownLibId", String.valueOf(ownerId)) [FD]
Line_99 $$ ownerId = new Integer(request.getParameter("OwnerId")).intValue() --> Line_290 $$ request.setAttribute("ownLibId", String.valueOf(ownerId)) [FD]
Line_185 $$ ownerId = new Integer(str[1]).intValue() --> Line_290 $$ request.setAttribute("ownLibId", String.valueOf(ownerId)) [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_291 $$ request.setAttribute("libIds", String.valueOf(libIds)) [FD]
Line_282 $$ libIds += "," --> Line_291 $$ request.setAttribute("libIds", String.valueOf(libIds)) [FD]
Line_286 $$ libIds += ejb.bprocess.util.Utility.getInstance(session1).getLibraryId(libName) --> Line_291 $$ request.setAttribute("libIds", String.valueOf(libIds)) [FD]
Line_279 $$ String libIds = "" --> Line_291 $$ request.setAttribute("libIds", String.valueOf(libIds)) [FD]
Line_95 $$ Integer catId = 0, ownerId = 0 --> Line_293 $$ JSONObject jsonCatOwnId = new JSONObject().put("Id", catId).put("LibId", ownerId) [FD]
Line_99 $$ ownerId = new Integer(request.getParameter("OwnerId")).intValue() --> Line_293 $$ JSONObject jsonCatOwnId = new JSONObject().put("Id", catId).put("LibId", ownerId) [FD]
Line_185 $$ ownerId = new Integer(str[1]).intValue() --> Line_293 $$ JSONObject jsonCatOwnId = new JSONObject().put("Id", catId).put("LibId", ownerId) [FD]
Line_98 $$ catId = new Integer(request.getParameter("CatId")).intValue() --> Line_293 $$ JSONObject jsonCatOwnId = new JSONObject().put("Id", catId).put("LibId", ownerId) [FD]
Line_184 $$ catId = new Integer(str[0]).intValue() --> Line_293 $$ JSONObject jsonCatOwnId = new JSONObject().put("Id", catId).put("LibId", ownerId) [FD]
Line_294 $$ ejb.bprocess.opac.SearchCatalogue searchCatAttach = ((ejb.bprocess.opac.SearchCatalogueHome) ejb.bprocess.util.HomeFactory.getInstance().getRemoteHome("SearchCatalogue")).create() --> Line_295 $$ String strAttach = searchCatAttach.getAttachmentDetails(jsonCatOwnId.toString()) [FD]
Line_293 $$ JSONObject jsonCatOwnId = new JSONObject().put("Id", catId).put("LibId", ownerId) --> Line_295 $$ String strAttach = searchCatAttach.getAttachmentDetails(jsonCatOwnId.toString()) [FD]
Line_295 $$ String strAttach = searchCatAttach.getAttachmentDetails(jsonCatOwnId.toString()) --> Line_296 $$ if (!strAttach.equals("")) [FD]
Line_296 $$ if (!strAttach.equals("")) --> Line_297 $$ JSONObject jsonAttach = new JSONObject(strAttach) [CD]
Line_296 $$ if (!strAttach.equals("")) --> Line_298 $$ if (jsonAttach != null) [CD]
Line_297 $$ JSONObject jsonAttach = new JSONObject(strAttach) --> Line_298 $$ if (jsonAttach != null) [FD]
Line_298 $$ if (jsonAttach != null) --> Line_299 $$ if (!jsonAttach.isNull("BookCover")) [CD]
Line_297 $$ JSONObject jsonAttach = new JSONObject(strAttach) --> Line_299 $$ if (!jsonAttach.isNull("BookCover")) [FD]
Line_299 $$ if (!jsonAttach.isNull("BookCover")) --> Line_300 $$ ArrayList albookcover = new ArrayList() [CD]
Line_299 $$ if (!jsonAttach.isNull("BookCover")) --> Line_301 $$ JSONArray jsonarr = (JSONArray) jsonAttach.get("BookCover") [CD]
Line_297 $$ JSONObject jsonAttach = new JSONObject(strAttach) --> Line_301 $$ JSONArray jsonarr = (JSONArray) jsonAttach.get("BookCover") [FD]
Line_299 $$ if (!jsonAttach.isNull("BookCover")) --> Line_302 $$ if (jsonarr != null) [CD]
Line_301 $$ JSONArray jsonarr = (JSONArray) jsonAttach.get("BookCover") --> Line_302 $$ if (jsonarr != null) [FD]
Line_302 $$ if (jsonarr != null) --> Line_303 $$ for (int j = 0; j < jsonarr.length(); j++) [CD]
Line_214 $$ for (int j = 0; j < vecCO.size(); j = j + 4) --> Line_303 $$ for (int j = 0; j < jsonarr.length(); j++) [FD]
Line_301 $$ JSONArray jsonarr = (JSONArray) jsonAttach.get("BookCover") --> Line_303 $$ for (int j = 0; j < jsonarr.length(); j++) [FD]
Line_303 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_304 $$ albookcover.add(jsonarr.getString(j)) [CD]
Line_303 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_304 $$ albookcover.add(jsonarr.getString(j)) [FD]
Line_300 $$ ArrayList albookcover = new ArrayList() --> Line_304 $$ albookcover.add(jsonarr.getString(j)) [FD]
Line_301 $$ JSONArray jsonarr = (JSONArray) jsonAttach.get("BookCover") --> Line_304 $$ albookcover.add(jsonarr.getString(j)) [FD]
Line_214 $$ for (int j = 0; j < vecCO.size(); j = j + 4) --> Line_304 $$ albookcover.add(jsonarr.getString(j)) [FD]
Line_302 $$ if (jsonarr != null) --> Line_306 $$ onerecordattach.put("BookCover", albookcover) [CD]
Line_292 $$ Hashtable onerecordattach = new Hashtable() --> Line_306 $$ onerecordattach.put("BookCover", albookcover) [FD]
Line_300 $$ ArrayList albookcover = new ArrayList() --> Line_306 $$ onerecordattach.put("BookCover", albookcover) [FD]
Line_298 $$ if (jsonAttach != null) --> Line_309 $$ if (!jsonAttach.isNull("TOC")) [CD]
Line_297 $$ JSONObject jsonAttach = new JSONObject(strAttach) --> Line_309 $$ if (!jsonAttach.isNull("TOC")) [FD]
Line_309 $$ if (!jsonAttach.isNull("TOC")) --> Line_310 $$ ArrayList alTOC = new ArrayList() [CD]
Line_297 $$ JSONObject jsonAttach = new JSONObject(strAttach) --> Line_311 $$ JSONArray jsonarr = (JSONArray) jsonAttach.get("TOC") [FD]
Line_309 $$ if (!jsonAttach.isNull("TOC")) --> Line_312 $$ if (jsonarr != null) [CD]
Line_301 $$ JSONArray jsonarr = (JSONArray) jsonAttach.get("BookCover") --> Line_312 $$ if (jsonarr != null) [FD]
Line_312 $$ if (jsonarr != null) --> Line_313 $$ for (int j = 0; j < jsonarr.length(); j++) [CD]
Line_303 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_313 $$ for (int j = 0; j < jsonarr.length(); j++) [FD]
Line_214 $$ for (int j = 0; j < vecCO.size(); j = j + 4) --> Line_313 $$ for (int j = 0; j < jsonarr.length(); j++) [FD]
Line_301 $$ JSONArray jsonarr = (JSONArray) jsonAttach.get("BookCover") --> Line_313 $$ for (int j = 0; j < jsonarr.length(); j++) [FD]
Line_313 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_314 $$ alTOC.add(jsonarr.getString(j)) [CD]
Line_313 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_314 $$ alTOC.add(jsonarr.getString(j)) [FD]
Line_310 $$ ArrayList alTOC = new ArrayList() --> Line_314 $$ alTOC.add(jsonarr.getString(j)) [FD]
Line_301 $$ JSONArray jsonarr = (JSONArray) jsonAttach.get("BookCover") --> Line_314 $$ alTOC.add(jsonarr.getString(j)) [FD]
Line_303 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_314 $$ alTOC.add(jsonarr.getString(j)) [FD]
Line_214 $$ for (int j = 0; j < vecCO.size(); j = j + 4) --> Line_314 $$ alTOC.add(jsonarr.getString(j)) [FD]
Line_312 $$ if (jsonarr != null) --> Line_316 $$ onerecordattach.put("TOC", alTOC) [CD]
Line_292 $$ Hashtable onerecordattach = new Hashtable() --> Line_316 $$ onerecordattach.put("TOC", alTOC) [FD]
Line_310 $$ ArrayList alTOC = new ArrayList() --> Line_316 $$ onerecordattach.put("TOC", alTOC) [FD]
Line_298 $$ if (jsonAttach != null) --> Line_319 $$ if (!jsonAttach.isNull("Preview")) [CD]
Line_297 $$ JSONObject jsonAttach = new JSONObject(strAttach) --> Line_319 $$ if (!jsonAttach.isNull("Preview")) [FD]
Line_319 $$ if (!jsonAttach.isNull("Preview")) --> Line_320 $$ ArrayList alPreview = new ArrayList() [CD]
Line_297 $$ JSONObject jsonAttach = new JSONObject(strAttach) --> Line_321 $$ JSONArray jsonarr = (JSONArray) jsonAttach.get("Preview") [FD]
Line_319 $$ if (!jsonAttach.isNull("Preview")) --> Line_322 $$ if (jsonarr != null) [CD]
Line_301 $$ JSONArray jsonarr = (JSONArray) jsonAttach.get("BookCover") --> Line_322 $$ if (jsonarr != null) [FD]
Line_322 $$ if (jsonarr != null) --> Line_323 $$ for (int j = 0; j < jsonarr.length(); j++) [CD]
Line_313 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_323 $$ for (int j = 0; j < jsonarr.length(); j++) [FD]
Line_303 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_323 $$ for (int j = 0; j < jsonarr.length(); j++) [FD]
Line_214 $$ for (int j = 0; j < vecCO.size(); j = j + 4) --> Line_323 $$ for (int j = 0; j < jsonarr.length(); j++) [FD]
Line_301 $$ JSONArray jsonarr = (JSONArray) jsonAttach.get("BookCover") --> Line_323 $$ for (int j = 0; j < jsonarr.length(); j++) [FD]
Line_323 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_324 $$ alPreview.add(jsonarr.getString(j)) [CD]
Line_323 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_324 $$ alPreview.add(jsonarr.getString(j)) [FD]
Line_320 $$ ArrayList alPreview = new ArrayList() --> Line_324 $$ alPreview.add(jsonarr.getString(j)) [FD]
Line_301 $$ JSONArray jsonarr = (JSONArray) jsonAttach.get("BookCover") --> Line_324 $$ alPreview.add(jsonarr.getString(j)) [FD]
Line_313 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_324 $$ alPreview.add(jsonarr.getString(j)) [FD]
Line_303 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_324 $$ alPreview.add(jsonarr.getString(j)) [FD]
Line_214 $$ for (int j = 0; j < vecCO.size(); j = j + 4) --> Line_324 $$ alPreview.add(jsonarr.getString(j)) [FD]
Line_322 $$ if (jsonarr != null) --> Line_326 $$ onerecordattach.put("Preview", alPreview) [CD]
Line_292 $$ Hashtable onerecordattach = new Hashtable() --> Line_326 $$ onerecordattach.put("Preview", alPreview) [FD]
Line_320 $$ ArrayList alPreview = new ArrayList() --> Line_326 $$ onerecordattach.put("Preview", alPreview) [FD]
Line_298 $$ if (jsonAttach != null) --> Line_329 $$ if (!jsonAttach.isNull("FullView")) [CD]
Line_297 $$ JSONObject jsonAttach = new JSONObject(strAttach) --> Line_329 $$ if (!jsonAttach.isNull("FullView")) [FD]
Line_329 $$ if (!jsonAttach.isNull("FullView")) --> Line_330 $$ ArrayList alFullView = new ArrayList() [CD]
Line_297 $$ JSONObject jsonAttach = new JSONObject(strAttach) --> Line_331 $$ JSONArray jsonarr = (JSONArray) jsonAttach.get("FullView") [FD]
Line_329 $$ if (!jsonAttach.isNull("FullView")) --> Line_332 $$ if (jsonarr != null) [CD]
Line_301 $$ JSONArray jsonarr = (JSONArray) jsonAttach.get("BookCover") --> Line_332 $$ if (jsonarr != null) [FD]
Line_332 $$ if (jsonarr != null) --> Line_333 $$ for (int j = 0; j < jsonarr.length(); j++) [CD]
Line_323 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_333 $$ for (int j = 0; j < jsonarr.length(); j++) [FD]
Line_313 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_333 $$ for (int j = 0; j < jsonarr.length(); j++) [FD]
Line_303 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_333 $$ for (int j = 0; j < jsonarr.length(); j++) [FD]
Line_214 $$ for (int j = 0; j < vecCO.size(); j = j + 4) --> Line_333 $$ for (int j = 0; j < jsonarr.length(); j++) [FD]
Line_301 $$ JSONArray jsonarr = (JSONArray) jsonAttach.get("BookCover") --> Line_333 $$ for (int j = 0; j < jsonarr.length(); j++) [FD]
Line_333 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_334 $$ alFullView.add(jsonarr.getString(j)) [CD]
Line_333 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_334 $$ alFullView.add(jsonarr.getString(j)) [FD]
Line_330 $$ ArrayList alFullView = new ArrayList() --> Line_334 $$ alFullView.add(jsonarr.getString(j)) [FD]
Line_301 $$ JSONArray jsonarr = (JSONArray) jsonAttach.get("BookCover") --> Line_334 $$ alFullView.add(jsonarr.getString(j)) [FD]
Line_323 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_334 $$ alFullView.add(jsonarr.getString(j)) [FD]
Line_313 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_334 $$ alFullView.add(jsonarr.getString(j)) [FD]
Line_303 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_334 $$ alFullView.add(jsonarr.getString(j)) [FD]
Line_214 $$ for (int j = 0; j < vecCO.size(); j = j + 4) --> Line_334 $$ alFullView.add(jsonarr.getString(j)) [FD]
Line_332 $$ if (jsonarr != null) --> Line_336 $$ onerecordattach.put("FullView", alFullView) [CD]
Line_292 $$ Hashtable onerecordattach = new Hashtable() --> Line_336 $$ onerecordattach.put("FullView", alFullView) [FD]
Line_330 $$ ArrayList alFullView = new ArrayList() --> Line_336 $$ onerecordattach.put("FullView", alFullView) [FD]
Line_298 $$ if (jsonAttach != null) --> Line_339 $$ if (!jsonAttach.isNull("Attachment")) [CD]
Line_297 $$ JSONObject jsonAttach = new JSONObject(strAttach) --> Line_339 $$ if (!jsonAttach.isNull("Attachment")) [FD]
Line_339 $$ if (!jsonAttach.isNull("Attachment")) --> Line_340 $$ ArrayList alAttachment = new ArrayList() [CD]
Line_297 $$ JSONObject jsonAttach = new JSONObject(strAttach) --> Line_341 $$ JSONArray jsonarr = (JSONArray) jsonAttach.get("Attachment") [FD]
Line_339 $$ if (!jsonAttach.isNull("Attachment")) --> Line_342 $$ if (jsonarr != null) [CD]
Line_301 $$ JSONArray jsonarr = (JSONArray) jsonAttach.get("BookCover") --> Line_342 $$ if (jsonarr != null) [FD]
Line_342 $$ if (jsonarr != null) --> Line_343 $$ for (int j = 0; j < jsonarr.length(); j++) [CD]
Line_333 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_343 $$ for (int j = 0; j < jsonarr.length(); j++) [FD]
Line_323 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_343 $$ for (int j = 0; j < jsonarr.length(); j++) [FD]
Line_313 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_343 $$ for (int j = 0; j < jsonarr.length(); j++) [FD]
Line_303 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_343 $$ for (int j = 0; j < jsonarr.length(); j++) [FD]
Line_214 $$ for (int j = 0; j < vecCO.size(); j = j + 4) --> Line_343 $$ for (int j = 0; j < jsonarr.length(); j++) [FD]
Line_301 $$ JSONArray jsonarr = (JSONArray) jsonAttach.get("BookCover") --> Line_343 $$ for (int j = 0; j < jsonarr.length(); j++) [FD]
Line_343 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_344 $$ alAttachment.add(jsonarr.getString(j)) [CD]
Line_343 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_344 $$ alAttachment.add(jsonarr.getString(j)) [FD]
Line_340 $$ ArrayList alAttachment = new ArrayList() --> Line_344 $$ alAttachment.add(jsonarr.getString(j)) [FD]
Line_301 $$ JSONArray jsonarr = (JSONArray) jsonAttach.get("BookCover") --> Line_344 $$ alAttachment.add(jsonarr.getString(j)) [FD]
Line_333 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_344 $$ alAttachment.add(jsonarr.getString(j)) [FD]
Line_323 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_344 $$ alAttachment.add(jsonarr.getString(j)) [FD]
Line_313 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_344 $$ alAttachment.add(jsonarr.getString(j)) [FD]
Line_303 $$ for (int j = 0; j < jsonarr.length(); j++) --> Line_344 $$ alAttachment.add(jsonarr.getString(j)) [FD]
Line_214 $$ for (int j = 0; j < vecCO.size(); j = j + 4) --> Line_344 $$ alAttachment.add(jsonarr.getString(j)) [FD]
Line_342 $$ if (jsonarr != null) --> Line_346 $$ onerecordattach.put("Attachment", alAttachment) [CD]
Line_292 $$ Hashtable onerecordattach = new Hashtable() --> Line_346 $$ onerecordattach.put("Attachment", alAttachment) [FD]
Line_340 $$ ArrayList alAttachment = new ArrayList() --> Line_346 $$ onerecordattach.put("Attachment", alAttachment) [FD]
Line_298 $$ if (jsonAttach != null) --> Line_349 $$ if (onerecordattach != null && !onerecordattach.isEmpty()) [CD]
Line_292 $$ Hashtable onerecordattach = new Hashtable() --> Line_349 $$ if (onerecordattach != null && !onerecordattach.isEmpty()) [FD]
Line_349 $$ if (onerecordattach != null && !onerecordattach.isEmpty()) --> Line_350 $$ h4.put("dAttachment", onerecordattach) [CD]
Line_256 $$ java.util.Hashtable h4 = rv.getView(hash1) --> Line_350 $$ h4.put("dAttachment", onerecordattach) [FD]
Line_292 $$ Hashtable onerecordattach = new Hashtable() --> Line_350 $$ h4.put("dAttachment", onerecordattach) [FD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_354 $$ svF.setHashSing(h4) [FD]
Line_256 $$ java.util.Hashtable h4 = rv.getView(hash1) --> Line_354 $$ svF.setHashSing(h4) [FD]
Line_256 $$ java.util.Hashtable h4 = rv.getView(hash1) --> Line_356 $$ Enumeration enumx = h4.keys() [FD]
Line_356 $$ Enumeration enumx = h4.keys() --> Line_357 $$ while (enumx.hasMoreElements()) [FD]
Line_357 $$ while (enumx.hasMoreElements()) --> Line_358 $$ String key = enumx.nextElement().toString() [CD]
Line_356 $$ Enumeration enumx = h4.keys() --> Line_358 $$ String key = enumx.nextElement().toString() [FD]
Line_357 $$ while (enumx.hasMoreElements()) --> Line_359 $$ System.out.println("Key: " + key + "-----value: " + h4.get(key)) [CD]
Line_256 $$ java.util.Hashtable h4 = rv.getView(hash1) --> Line_359 $$ System.out.println("Key: " + key + "-----value: " + h4.get(key)) [FD]
Line_358 $$ String key = enumx.nextElement().toString() --> Line_359 $$ System.out.println("Key: " + key + "-----value: " + h4.get(key)) [FD]
Line_31 $$ if (svF.getExportRec() == null || !(svF.getExportRec().equals("export"))) --> Line_367 $$ if (svF.getExportRec() != null && svF.getExportRec().equals("export")) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_367 $$ if (svF.getExportRec() != null && svF.getExportRec().equals("export")) [FD]
Line_367 $$ if (svF.getExportRec() != null && svF.getExportRec().equals("export")) --> Line_368 $$ svF.setExportRec(null) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_368 $$ svF.setExportRec(null) [FD]
Line_367 $$ if (svF.getExportRec() != null && svF.getExportRec().equals("export")) --> Line_369 $$ vecThisPage = (java.util.Vector) session.getAttribute("SingleViewExport") [CD]
Line_24 $$ java.util.Vector vecThisPage = new java.util.Vector() --> Line_369 $$ vecThisPage = (java.util.Vector) session.getAttribute("SingleViewExport") [FD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_369 $$ vecThisPage = (java.util.Vector) session.getAttribute("SingleViewExport") [FD]
Line_367 $$ if (svF.getExportRec() != null && svF.getExportRec().equals("export")) --> Line_370 $$ String format = svF.getSf() [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_370 $$ String format = svF.getSf() [FD]
Line_367 $$ if (svF.getExportRec() != null && svF.getExportRec().equals("export")) --> Line_371 $$ if (format.equals("marc")) [CD]
Line_370 $$ String format = svF.getSf() --> Line_371 $$ if (format.equals("marc")) [FD]
Line_371 $$ if (format.equals("marc")) --> Line_372 $$ String marc = opacUt.getDetailsForMultiRecordViewMARC(vecThisPage) [CD]
Line_29 $$ ejb.bprocess.opac.xcql.OPACUtilities opacUt = opacHm.create() --> Line_372 $$ String marc = opacUt.getDetailsForMultiRecordViewMARC(vecThisPage) [FD]
Line_24 $$ java.util.Vector vecThisPage = new java.util.Vector() --> Line_372 $$ String marc = opacUt.getDetailsForMultiRecordViewMARC(vecThisPage) [FD]
Line_369 $$ vecThisPage = (java.util.Vector) session.getAttribute("SingleViewExport") --> Line_372 $$ String marc = opacUt.getDetailsForMultiRecordViewMARC(vecThisPage) [FD]
Line_371 $$ if (format.equals("marc")) --> Line_373 $$ svF.setDisplayFormat(marc) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_373 $$ svF.setDisplayFormat(marc) [FD]
Line_372 $$ String marc = opacUt.getDetailsForMultiRecordViewMARC(vecThisPage) --> Line_373 $$ svF.setDisplayFormat(marc) [FD]
Line_371 $$ if (format.equals("marc")) --> Line_374 $$ session.setAttribute("RecordDisplay", marc) [CD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_374 $$ session.setAttribute("RecordDisplay", marc) [FD]
Line_372 $$ String marc = opacUt.getDetailsForMultiRecordViewMARC(vecThisPage) --> Line_374 $$ session.setAttribute("RecordDisplay", marc) [FD]
Line_371 $$ if (format.equals("marc")) --> Line_375 $$ forward = "RecordFormat" [CD]
Line_22 $$ String forward = "searchView" --> Line_375 $$ forward = "RecordFormat" [FD]
Line_47 $$ forward = "searchRes" --> Line_375 $$ forward = "RecordFormat" [FD]
Line_87 $$ forward = "searchRes" --> Line_375 $$ forward = "RecordFormat" [FD]
Line_89 $$ forward = "home" --> Line_375 $$ forward = "RecordFormat" [FD]
Line_371 $$ if (format.equals("marc")) --> Line_376 $$ if (format.equals("marcXml")) [CD]
Line_370 $$ String format = svF.getSf() --> Line_376 $$ if (format.equals("marcXml")) [FD]
Line_376 $$ if (format.equals("marcXml")) --> Line_377 $$ String marcXML = opacUt.getDetailsForMultiRecordViewMARCXML(vecThisPage) [CD]
Line_29 $$ ejb.bprocess.opac.xcql.OPACUtilities opacUt = opacHm.create() --> Line_377 $$ String marcXML = opacUt.getDetailsForMultiRecordViewMARCXML(vecThisPage) [FD]
Line_24 $$ java.util.Vector vecThisPage = new java.util.Vector() --> Line_377 $$ String marcXML = opacUt.getDetailsForMultiRecordViewMARCXML(vecThisPage) [FD]
Line_369 $$ vecThisPage = (java.util.Vector) session.getAttribute("SingleViewExport") --> Line_377 $$ String marcXML = opacUt.getDetailsForMultiRecordViewMARCXML(vecThisPage) [FD]
Line_376 $$ if (format.equals("marcXml")) --> Line_378 $$ svF.setDisplayFormat(marcXML) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_378 $$ svF.setDisplayFormat(marcXML) [FD]
Line_377 $$ String marcXML = opacUt.getDetailsForMultiRecordViewMARCXML(vecThisPage) --> Line_378 $$ svF.setDisplayFormat(marcXML) [FD]
Line_376 $$ if (format.equals("marcXml")) --> Line_379 $$ response.setContentType("text/xml") [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_379 $$ response.setContentType("text/xml") [FD]
Line_376 $$ if (format.equals("marcXml")) --> Line_380 $$ session.setAttribute("RecordDisplay", marcXML) [CD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_380 $$ session.setAttribute("RecordDisplay", marcXML) [FD]
Line_377 $$ String marcXML = opacUt.getDetailsForMultiRecordViewMARCXML(vecThisPage) --> Line_380 $$ session.setAttribute("RecordDisplay", marcXML) [FD]
Line_376 $$ if (format.equals("marcXml")) --> Line_381 $$ forward = "RecordFormat" [CD]
Line_22 $$ String forward = "searchView" --> Line_381 $$ forward = "RecordFormat" [FD]
Line_47 $$ forward = "searchRes" --> Line_381 $$ forward = "RecordFormat" [FD]
Line_87 $$ forward = "searchRes" --> Line_381 $$ forward = "RecordFormat" [FD]
Line_89 $$ forward = "home" --> Line_381 $$ forward = "RecordFormat" [FD]
Line_375 $$ forward = "RecordFormat" --> Line_381 $$ forward = "RecordFormat" [FD]
Line_376 $$ if (format.equals("marcXml")) --> Line_382 $$ if (format.equals("mods")) [CD]
Line_370 $$ String format = svF.getSf() --> Line_382 $$ if (format.equals("mods")) [FD]
Line_382 $$ if (format.equals("mods")) --> Line_383 $$ String mods = opacUt.getDetailsForMultiRecordViewMODS(vecThisPage) [CD]
Line_29 $$ ejb.bprocess.opac.xcql.OPACUtilities opacUt = opacHm.create() --> Line_383 $$ String mods = opacUt.getDetailsForMultiRecordViewMODS(vecThisPage) [FD]
Line_24 $$ java.util.Vector vecThisPage = new java.util.Vector() --> Line_383 $$ String mods = opacUt.getDetailsForMultiRecordViewMODS(vecThisPage) [FD]
Line_369 $$ vecThisPage = (java.util.Vector) session.getAttribute("SingleViewExport") --> Line_383 $$ String mods = opacUt.getDetailsForMultiRecordViewMODS(vecThisPage) [FD]
Line_382 $$ if (format.equals("mods")) --> Line_384 $$ svF.setDisplayFormat(mods) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_384 $$ svF.setDisplayFormat(mods) [FD]
Line_383 $$ String mods = opacUt.getDetailsForMultiRecordViewMODS(vecThisPage) --> Line_384 $$ svF.setDisplayFormat(mods) [FD]
Line_382 $$ if (format.equals("mods")) --> Line_385 $$ session.setAttribute("RecordDisplay", mods) [CD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_385 $$ session.setAttribute("RecordDisplay", mods) [FD]
Line_383 $$ String mods = opacUt.getDetailsForMultiRecordViewMODS(vecThisPage) --> Line_385 $$ session.setAttribute("RecordDisplay", mods) [FD]
Line_382 $$ if (format.equals("mods")) --> Line_386 $$ forward = "RecordFormat" [CD]
Line_22 $$ String forward = "searchView" --> Line_386 $$ forward = "RecordFormat" [FD]
Line_47 $$ forward = "searchRes" --> Line_386 $$ forward = "RecordFormat" [FD]
Line_87 $$ forward = "searchRes" --> Line_386 $$ forward = "RecordFormat" [FD]
Line_89 $$ forward = "home" --> Line_386 $$ forward = "RecordFormat" [FD]
Line_375 $$ forward = "RecordFormat" --> Line_386 $$ forward = "RecordFormat" [FD]
Line_381 $$ forward = "RecordFormat" --> Line_386 $$ forward = "RecordFormat" [FD]
Line_382 $$ if (format.equals("mods")) --> Line_387 $$ if (format.equals("dc")) [CD]
Line_370 $$ String format = svF.getSf() --> Line_387 $$ if (format.equals("dc")) [FD]
Line_387 $$ if (format.equals("dc")) --> Line_388 $$ String dc = opacUt.getDetailsForMultiRecordViewDublinCore(vecThisPage) [CD]
Line_29 $$ ejb.bprocess.opac.xcql.OPACUtilities opacUt = opacHm.create() --> Line_388 $$ String dc = opacUt.getDetailsForMultiRecordViewDublinCore(vecThisPage) [FD]
Line_24 $$ java.util.Vector vecThisPage = new java.util.Vector() --> Line_388 $$ String dc = opacUt.getDetailsForMultiRecordViewDublinCore(vecThisPage) [FD]
Line_369 $$ vecThisPage = (java.util.Vector) session.getAttribute("SingleViewExport") --> Line_388 $$ String dc = opacUt.getDetailsForMultiRecordViewDublinCore(vecThisPage) [FD]
Line_387 $$ if (format.equals("dc")) --> Line_389 $$ svF.setDisplayFormat(dc) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_389 $$ svF.setDisplayFormat(dc) [FD]
Line_388 $$ String dc = opacUt.getDetailsForMultiRecordViewDublinCore(vecThisPage) --> Line_389 $$ svF.setDisplayFormat(dc) [FD]
Line_387 $$ if (format.equals("dc")) --> Line_390 $$ session.setAttribute("RecordDisplay", dc) [CD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_390 $$ session.setAttribute("RecordDisplay", dc) [FD]
Line_388 $$ String dc = opacUt.getDetailsForMultiRecordViewDublinCore(vecThisPage) --> Line_390 $$ session.setAttribute("RecordDisplay", dc) [FD]
Line_387 $$ if (format.equals("dc")) --> Line_391 $$ forward = "RecordFormat" [CD]
Line_22 $$ String forward = "searchView" --> Line_391 $$ forward = "RecordFormat" [FD]
Line_47 $$ forward = "searchRes" --> Line_391 $$ forward = "RecordFormat" [FD]
Line_87 $$ forward = "searchRes" --> Line_391 $$ forward = "RecordFormat" [FD]
Line_89 $$ forward = "home" --> Line_391 $$ forward = "RecordFormat" [FD]
Line_375 $$ forward = "RecordFormat" --> Line_391 $$ forward = "RecordFormat" [FD]
Line_381 $$ forward = "RecordFormat" --> Line_391 $$ forward = "RecordFormat" [FD]
Line_386 $$ forward = "RecordFormat" --> Line_391 $$ forward = "RecordFormat" [FD]
Line_387 $$ if (format.equals("dc")) --> Line_392 $$ if (format.equals("agris")) [CD]
Line_370 $$ String format = svF.getSf() --> Line_392 $$ if (format.equals("agris")) [FD]
Line_392 $$ if (format.equals("agris")) --> Line_393 $$ String agr = opacUt.getDetailsForMultiRecordViewAgris(vecThisPage) [CD]
Line_29 $$ ejb.bprocess.opac.xcql.OPACUtilities opacUt = opacHm.create() --> Line_393 $$ String agr = opacUt.getDetailsForMultiRecordViewAgris(vecThisPage) [FD]
Line_24 $$ java.util.Vector vecThisPage = new java.util.Vector() --> Line_393 $$ String agr = opacUt.getDetailsForMultiRecordViewAgris(vecThisPage) [FD]
Line_369 $$ vecThisPage = (java.util.Vector) session.getAttribute("SingleViewExport") --> Line_393 $$ String agr = opacUt.getDetailsForMultiRecordViewAgris(vecThisPage) [FD]
Line_392 $$ if (format.equals("agris")) --> Line_394 $$ svF.setDisplayFormat(agr) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_394 $$ svF.setDisplayFormat(agr) [FD]
Line_393 $$ String agr = opacUt.getDetailsForMultiRecordViewAgris(vecThisPage) --> Line_394 $$ svF.setDisplayFormat(agr) [FD]
Line_392 $$ if (format.equals("agris")) --> Line_395 $$ session.setAttribute("RecordDisplay", agr) [CD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_395 $$ session.setAttribute("RecordDisplay", agr) [FD]
Line_393 $$ String agr = opacUt.getDetailsForMultiRecordViewAgris(vecThisPage) --> Line_395 $$ session.setAttribute("RecordDisplay", agr) [FD]
Line_392 $$ if (format.equals("agris")) --> Line_396 $$ forward = "RecordFormat" [CD]
Line_22 $$ String forward = "searchView" --> Line_396 $$ forward = "RecordFormat" [FD]
Line_47 $$ forward = "searchRes" --> Line_396 $$ forward = "RecordFormat" [FD]
Line_87 $$ forward = "searchRes" --> Line_396 $$ forward = "RecordFormat" [FD]
Line_89 $$ forward = "home" --> Line_396 $$ forward = "RecordFormat" [FD]
Line_375 $$ forward = "RecordFormat" --> Line_396 $$ forward = "RecordFormat" [FD]
Line_381 $$ forward = "RecordFormat" --> Line_396 $$ forward = "RecordFormat" [FD]
Line_386 $$ forward = "RecordFormat" --> Line_396 $$ forward = "RecordFormat" [FD]
Line_391 $$ forward = "RecordFormat" --> Line_396 $$ forward = "RecordFormat" [FD]
Line_392 $$ if (format.equals("agris")) --> Line_397 $$ if (format.equals("text")) [CD]
Line_370 $$ String format = svF.getSf() --> Line_397 $$ if (format.equals("text")) [FD]
Line_397 $$ if (format.equals("text")) --> Line_398 $$ java.util.Vector vecTextDis = new java.util.Vector() [CD]
Line_397 $$ if (format.equals("text")) --> Line_399 $$ for (int i2 = 0; i2 < vecThisPage.size(); i2 = i2 + 2) [CD]
Line_24 $$ java.util.Vector vecThisPage = new java.util.Vector() --> Line_399 $$ for (int i2 = 0; i2 < vecThisPage.size(); i2 = i2 + 2) [FD]
Line_369 $$ vecThisPage = (java.util.Vector) session.getAttribute("SingleViewExport") --> Line_399 $$ for (int i2 = 0; i2 < vecThisPage.size(); i2 = i2 + 2) [FD]
Line_399 $$ for (int i2 = 0; i2 < vecThisPage.size(); i2 = i2 + 2) --> Line_400 $$ java.util.Hashtable hash1 = opacUt.getDetailsForSingleCatalogueRecord(new Integer(vecThisPage.elementAt(i2).toString()).intValue(), new Integer(vecThisPage.elementAt(i2 + 1).toString()).intValue()) [CD]
Line_399 $$ for (int i2 = 0; i2 < vecThisPage.size(); i2 = i2 + 2) --> Line_400 $$ java.util.Hashtable hash1 = opacUt.getDetailsForSingleCatalogueRecord(new Integer(vecThisPage.elementAt(i2).toString()).intValue(), new Integer(vecThisPage.elementAt(i2 + 1).toString()).intValue()) [FD]
Line_29 $$ ejb.bprocess.opac.xcql.OPACUtilities opacUt = opacHm.create() --> Line_400 $$ java.util.Hashtable hash1 = opacUt.getDetailsForSingleCatalogueRecord(new Integer(vecThisPage.elementAt(i2).toString()).intValue(), new Integer(vecThisPage.elementAt(i2 + 1).toString()).intValue()) [FD]
Line_24 $$ java.util.Vector vecThisPage = new java.util.Vector() --> Line_400 $$ java.util.Hashtable hash1 = opacUt.getDetailsForSingleCatalogueRecord(new Integer(vecThisPage.elementAt(i2).toString()).intValue(), new Integer(vecThisPage.elementAt(i2 + 1).toString()).intValue()) [FD]
Line_369 $$ vecThisPage = (java.util.Vector) session.getAttribute("SingleViewExport") --> Line_400 $$ java.util.Hashtable hash1 = opacUt.getDetailsForSingleCatalogueRecord(new Integer(vecThisPage.elementAt(i2).toString()).intValue(), new Integer(vecThisPage.elementAt(i2 + 1).toString()).intValue()) [FD]
Line_399 $$ for (int i2 = 0; i2 < vecThisPage.size(); i2 = i2 + 2) --> Line_401 $$ aportal.view.ISBDView fullView = new aportal.view.ISBDView() [CD]
Line_399 $$ for (int i2 = 0; i2 < vecThisPage.size(); i2 = i2 + 2) --> Line_402 $$ java.util.Hashtable hashCit = fullView.getView(hash1) [CD]
Line_401 $$ aportal.view.ISBDView fullView = new aportal.view.ISBDView() --> Line_402 $$ java.util.Hashtable hashCit = fullView.getView(hash1) [FD]
Line_400 $$ java.util.Hashtable hash1 = opacUt.getDetailsForSingleCatalogueRecord(new Integer(vecThisPage.elementAt(i2).toString()).intValue(), new Integer(vecThisPage.elementAt(i2 + 1).toString()).intValue()) --> Line_402 $$ java.util.Hashtable hashCit = fullView.getView(hash1) [FD]
Line_199 $$ java.util.Hashtable hash1 = opacUt.getDetailsForSingleCatalogueRecord(catId, ownerId) --> Line_402 $$ java.util.Hashtable hashCit = fullView.getView(hash1) [FD]
Line_399 $$ for (int i2 = 0; i2 < vecThisPage.size(); i2 = i2 + 2) --> Line_403 $$ vecTextDis.addElement(hashCit) [CD]
Line_398 $$ java.util.Vector vecTextDis = new java.util.Vector() --> Line_403 $$ vecTextDis.addElement(hashCit) [FD]
Line_402 $$ java.util.Hashtable hashCit = fullView.getView(hash1) --> Line_403 $$ vecTextDis.addElement(hashCit) [FD]
Line_399 $$ for (int i2 = 0; i2 < vecThisPage.size(); i2 = i2 + 2) --> Line_404 $$ forward = "RecordFormatText" [CD]
Line_22 $$ String forward = "searchView" --> Line_404 $$ forward = "RecordFormatText" [FD]
Line_47 $$ forward = "searchRes" --> Line_404 $$ forward = "RecordFormatText" [FD]
Line_87 $$ forward = "searchRes" --> Line_404 $$ forward = "RecordFormatText" [FD]
Line_89 $$ forward = "home" --> Line_404 $$ forward = "RecordFormatText" [FD]
Line_375 $$ forward = "RecordFormat" --> Line_404 $$ forward = "RecordFormatText" [FD]
Line_381 $$ forward = "RecordFormat" --> Line_404 $$ forward = "RecordFormatText" [FD]
Line_386 $$ forward = "RecordFormat" --> Line_404 $$ forward = "RecordFormatText" [FD]
Line_391 $$ forward = "RecordFormat" --> Line_404 $$ forward = "RecordFormatText" [FD]
Line_396 $$ forward = "RecordFormat" --> Line_404 $$ forward = "RecordFormatText" [FD]
Line_397 $$ if (format.equals("text")) --> Line_406 $$ session.setAttribute("RecordTextDisplay", vecTextDis) [CD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_406 $$ session.setAttribute("RecordTextDisplay", vecTextDis) [FD]
Line_398 $$ java.util.Vector vecTextDis = new java.util.Vector() --> Line_406 $$ session.setAttribute("RecordTextDisplay", vecTextDis) [FD]
Line_397 $$ if (format.equals("text")) --> Line_407 $$ if (svF.getPs() != null && svF.getPs().equals("email")) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_407 $$ if (svF.getPs() != null && svF.getPs().equals("email")) [FD]
Line_407 $$ if (svF.getPs() != null && svF.getPs().equals("email")) --> Line_408 $$ boolean flag = false [CD]
Line_407 $$ if (svF.getPs() != null && svF.getPs().equals("email")) --> Line_409 $$ if (svF.getEmail() != null && !(svF.getEmail().equals(""))) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_409 $$ if (svF.getEmail() != null && !(svF.getEmail().equals(""))) [FD]
Line_409 $$ if (svF.getEmail() != null && !(svF.getEmail().equals(""))) --> Line_410 $$ String emailId = svF.getEmail() [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_410 $$ String emailId = svF.getEmail() [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_412 $$ String sessionid = request.getSession().getId() [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_413 $$ java.net.URL url = new java.net.URL("http://localhost:" + request.getServerPort() + "/newgenlibctxt/jsp/aportal/cataloguing/RecordDisplayText.jsp;jsessionid=" + sessionid) [FD]
Line_413 $$ java.net.URL url = new java.net.URL("http://localhost:" + request.getServerPort() + "/newgenlibctxt/jsp/aportal/cataloguing/RecordDisplayText.jsp;jsessionid=" + sessionid) --> Line_414 $$ java.net.URLConnection urlCon = url.openConnection() [FD]
Line_414 $$ java.net.URLConnection urlCon = url.openConnection() --> Line_415 $$ java.io.InputStream is = urlCon.getInputStream() [FD]
Line_418 $$ String line = "" --> Line_419 $$ while ((line = br.readLine()) != null) [FD]
Line_417 $$ java.io.BufferedReader br = new java.io.BufferedReader(new java.io.InputStreamReader(is)) --> Line_419 $$ while ((line = br.readLine()) != null) [FD]
Line_419 $$ while ((line = br.readLine()) != null) --> Line_420 $$ htmlContent = htmlContent + line [CD]
Line_419 $$ while ((line = br.readLine()) != null) --> Line_420 $$ htmlContent = htmlContent + line [FD]
Line_416 $$ String htmlContent = "" --> Line_420 $$ htmlContent = htmlContent + line [FD]
Line_418 $$ String line = "" --> Line_420 $$ htmlContent = htmlContent + line [FD]
Line_422 $$ String[] emailids = --> Line_423 $$ int status = SendEmail.getInstance().sendMail(emailids, "OPAC results", htmlContent, "html") [FD]
Line_420 $$ htmlContent = htmlContent + line --> Line_423 $$ int status = SendEmail.getInstance().sendMail(emailids, "OPAC results", htmlContent, "html") [FD]
Line_416 $$ String htmlContent = "" --> Line_423 $$ int status = SendEmail.getInstance().sendMail(emailids, "OPAC results", htmlContent, "html") [FD]
Line_423 $$ int status = SendEmail.getInstance().sendMail(emailids, "OPAC results", htmlContent, "html") --> Line_424 $$ if (status == 0) [FD]
Line_408 $$ boolean flag = false --> Line_424 $$ if (status == 0) [FD]
Line_407 $$ if (svF.getPs() != null && svF.getPs().equals("email")) --> Line_429 $$ String mailMessage = "The selected records have been successfully mailed to " + svF.getEmail() [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_429 $$ String mailMessage = "The selected records have been successfully mailed to " + svF.getEmail() [FD]
Line_407 $$ if (svF.getPs() != null && svF.getPs().equals("email")) --> Line_430 $$ if (flag == false) [CD]
Line_408 $$ boolean flag = false --> Line_430 $$ if (flag == false) [FD]
Line_424 $$ if (status == 0) --> Line_430 $$ if (flag == false) [FD]
Line_430 $$ if (flag == false) --> Line_431 $$ mailMessage = "<h4><p>The selected records could not be mailed to " + svF.getEmail() + "&nbsp; These might be the possible reasons.</p></h4>" + "<h5><ol> <li>The email id entered is not a valid one</font></li>" + "<li>The email id domain might not be in the list of allowed  recipient&nbsp; hosts</li>" + "<li>There might a error in connectivity to the mail server</li></ol></h5>" + "<h4><p>Please contact the  Network Administrator </p></h4>" [CD]
Line_429 $$ String mailMessage = "The selected records have been successfully mailed to " + svF.getEmail() --> Line_431 $$ mailMessage = "<h4><p>The selected records could not be mailed to " + svF.getEmail() + "&nbsp; These might be the possible reasons.</p></h4>" + "<h5><ol> <li>The email id entered is not a valid one</font></li>" + "<li>The email id domain might not be in the list of allowed  recipient&nbsp; hosts</li>" + "<li>There might a error in connectivity to the mail server</li></ol></h5>" + "<h4><p>Please contact the  Network Administrator </p></h4>" [FD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_431 $$ mailMessage = "<h4><p>The selected records could not be mailed to " + svF.getEmail() + "&nbsp; These might be the possible reasons.</p></h4>" + "<h5><ol> <li>The email id entered is not a valid one</font></li>" + "<li>The email id domain might not be in the list of allowed  recipient&nbsp; hosts</li>" + "<li>There might a error in connectivity to the mail server</li></ol></h5>" + "<h4><p>Please contact the  Network Administrator </p></h4>" [FD]
Line_407 $$ if (svF.getPs() != null && svF.getPs().equals("email")) --> Line_433 $$ session.setAttribute("MailStatus", mailMessage) [CD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_433 $$ session.setAttribute("MailStatus", mailMessage) [FD]
Line_429 $$ String mailMessage = "The selected records have been successfully mailed to " + svF.getEmail() --> Line_433 $$ session.setAttribute("MailStatus", mailMessage) [FD]
Line_431 $$ mailMessage = "<h4><p>The selected records could not be mailed to " + svF.getEmail() + "&nbsp; These might be the possible reasons.</p></h4>" + "<h5><ol> <li>The email id entered is not a valid one</font></li>" + "<li>The email id domain might not be in the list of allowed  recipient&nbsp; hosts</li>" + "<li>There might a error in connectivity to the mail server</li></ol></h5>" + "<h4><p>Please contact the  Network Administrator </p></h4>" --> Line_433 $$ session.setAttribute("MailStatus", mailMessage) [FD]
Line_407 $$ if (svF.getPs() != null && svF.getPs().equals("email")) --> Line_434 $$ forward = "SendEmail" [CD]
Line_404 $$ forward = "RecordFormatText" --> Line_434 $$ forward = "SendEmail" [FD]
Line_22 $$ String forward = "searchView" --> Line_434 $$ forward = "SendEmail" [FD]
Line_47 $$ forward = "searchRes" --> Line_434 $$ forward = "SendEmail" [FD]
Line_87 $$ forward = "searchRes" --> Line_434 $$ forward = "SendEmail" [FD]
Line_89 $$ forward = "home" --> Line_434 $$ forward = "SendEmail" [FD]
Line_375 $$ forward = "RecordFormat" --> Line_434 $$ forward = "SendEmail" [FD]
Line_381 $$ forward = "RecordFormat" --> Line_434 $$ forward = "SendEmail" [FD]
Line_386 $$ forward = "RecordFormat" --> Line_434 $$ forward = "SendEmail" [FD]
Line_391 $$ forward = "RecordFormat" --> Line_434 $$ forward = "SendEmail" [FD]
Line_396 $$ forward = "RecordFormat" --> Line_434 $$ forward = "SendEmail" [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_438 $$ String version = ejb.bprocess.util.StaticValues.getInstance().getVersion() [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_439 $$ if (version != null && !version.equals("")) [CD]
Line_438 $$ String version = ejb.bprocess.util.StaticValues.getInstance().getVersion() --> Line_439 $$ if (version != null && !version.equals("")) [FD]
Line_439 $$ if (version != null && !version.equals("")) --> Line_440 $$ svF.setVersion(version) [CD]
Line_25 $$ aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form --> Line_440 $$ svF.setVersion(version) [FD]
Line_438 $$ String version = ejb.bprocess.util.StaticValues.getInstance().getVersion() --> Line_440 $$ svF.setVersion(version) [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_442 $$ if (session.getAttribute("ClassNoForwarded") != null) [CD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_442 $$ if (session.getAttribute("ClassNoForwarded") != null) [FD]
Line_442 $$ if (session.getAttribute("ClassNoForwarded") != null) --> Line_443 $$ session.removeAttribute("ClassNoForwarded") [CD]
Line_21 $$ javax.servlet.http.HttpSession session = request.getSession() --> Line_443 $$ session.removeAttribute("ClassNoForwarded") [FD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_445 $$ return mapping.findForward(forward) [CD]
Line_2 $$ public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception --> Line_445 $$ return mapping.findForward(forward) [FD]
Line_404 $$ forward = "RecordFormatText" --> Line_445 $$ return mapping.findForward(forward) [FD]
Line_22 $$ String forward = "searchView" --> Line_445 $$ return mapping.findForward(forward) [FD]
Line_47 $$ forward = "searchRes" --> Line_445 $$ return mapping.findForward(forward) [FD]
Line_87 $$ forward = "searchRes" --> Line_445 $$ return mapping.findForward(forward) [FD]
Line_89 $$ forward = "home" --> Line_445 $$ return mapping.findForward(forward) [FD]
Line_375 $$ forward = "RecordFormat" --> Line_445 $$ return mapping.findForward(forward) [FD]
Line_381 $$ forward = "RecordFormat" --> Line_445 $$ return mapping.findForward(forward) [FD]
Line_386 $$ forward = "RecordFormat" --> Line_445 $$ return mapping.findForward(forward) [FD]
Line_391 $$ forward = "RecordFormat" --> Line_445 $$ return mapping.findForward(forward) [FD]
Line_396 $$ forward = "RecordFormat" --> Line_445 $$ return mapping.findForward(forward) [FD]
Line_434 $$ forward = "SendEmail" --> Line_445 $$ return mapping.findForward(forward) [FD]
Line_137 $$ titleD = titleD.substring(0, 45) + "..." --> Line_136 $$ if (titleD.length() > 45) [FD]
