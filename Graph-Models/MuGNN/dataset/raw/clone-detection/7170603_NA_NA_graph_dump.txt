Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_3 $$ File milestoneDefFile = new File(milestoneDefFileName) [CD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_4 $$ if (!milestoneDefFile.exists()) [CD]
Line_3 $$ File milestoneDefFile = new File(milestoneDefFileName) --> Line_4 $$ if (!milestoneDefFile.exists()) [FD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_7 $$ if (!milestoneDefFile.isFile()) [CD]
Line_3 $$ File milestoneDefFile = new File(milestoneDefFileName) --> Line_7 $$ if (!milestoneDefFile.isFile()) [FD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_10 $$ if (!milestoneDefFile.canRead()) [CD]
Line_3 $$ File milestoneDefFile = new File(milestoneDefFileName) --> Line_10 $$ if (!milestoneDefFile.canRead()) [FD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_13 $$ File sqlDirectory = new File(sqlDirectoryName) [CD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_14 $$ if (!sqlDirectory.exists()) [CD]
Line_13 $$ File sqlDirectory = new File(sqlDirectoryName) --> Line_14 $$ if (!sqlDirectory.exists()) [FD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_17 $$ if (!sqlDirectory.isDirectory()) [CD]
Line_13 $$ File sqlDirectory = new File(sqlDirectoryName) --> Line_17 $$ if (!sqlDirectory.isDirectory()) [FD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_20 $$ if (!sqlDirectory.canRead()) [CD]
Line_13 $$ File sqlDirectory = new File(sqlDirectoryName) --> Line_20 $$ if (!sqlDirectory.canRead()) [FD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_23 $$ File destFile = new File(destFileName) [CD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_24 $$ if (destFile.exists()) [CD]
Line_23 $$ File destFile = new File(destFileName) --> Line_24 $$ if (destFile.exists()) [FD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_27 $$ destFile.createNewFile() [CD]
Line_23 $$ File destFile = new File(destFileName) --> Line_27 $$ destFile.createNewFile() [FD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_28 $$ SqlUpgradeXmlParser parser = SqlUpgradeXmlParser.newParser() [CD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_29 $$ FileInputStream milestoneDefFIS = null [CD]
Line_29 $$ FileInputStream milestoneDefFIS = null --> Line_31 $$ milestoneDefFIS = new FileInputStream(milestoneDefFile) [FD]
Line_28 $$ SqlUpgradeXmlParser parser = SqlUpgradeXmlParser.newParser() --> Line_32 $$ parser.parse(milestoneDefFIS) [FD]
Line_29 $$ FileInputStream milestoneDefFIS = null --> Line_32 $$ parser.parse(milestoneDefFIS) [FD]
Line_31 $$ milestoneDefFIS = new FileInputStream(milestoneDefFile) --> Line_32 $$ parser.parse(milestoneDefFIS) [FD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_34 $$ printXmlError(e, milestoneDefFileName) [FD]
Line_29 $$ FileInputStream milestoneDefFIS = null --> Line_37 $$ if (milestoneDefFIS != null) [FD]
Line_31 $$ milestoneDefFIS = new FileInputStream(milestoneDefFile) --> Line_37 $$ if (milestoneDefFIS != null) [FD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_42 $$ int fromMilestoneIdx = parser.getMilestoneIndex(fromMilestone) [CD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_42 $$ int fromMilestoneIdx = parser.getMilestoneIndex(fromMilestone) [FD]
Line_28 $$ SqlUpgradeXmlParser parser = SqlUpgradeXmlParser.newParser() --> Line_42 $$ int fromMilestoneIdx = parser.getMilestoneIndex(fromMilestone) [FD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_43 $$ int toMilestoneIdx = parser.getMilestoneIndex(destMilestone) [CD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_43 $$ int toMilestoneIdx = parser.getMilestoneIndex(destMilestone) [FD]
Line_28 $$ SqlUpgradeXmlParser parser = SqlUpgradeXmlParser.newParser() --> Line_43 $$ int toMilestoneIdx = parser.getMilestoneIndex(destMilestone) [FD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_44 $$ if (fromMilestoneIdx < 0) [CD]
Line_42 $$ int fromMilestoneIdx = parser.getMilestoneIndex(fromMilestone) --> Line_44 $$ if (fromMilestoneIdx < 0) [FD]
Line_28 $$ SqlUpgradeXmlParser parser = SqlUpgradeXmlParser.newParser() --> Line_45 $$ throw new IllegalArgumentException("Cannot upgrade from milestone [" + fromMilestone + "] : does not exist . (Exisiting milestones " + parser.listMilestones() + ")") [FD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_47 $$ if (toMilestoneIdx < 0) [CD]
Line_43 $$ int toMilestoneIdx = parser.getMilestoneIndex(destMilestone) --> Line_47 $$ if (toMilestoneIdx < 0) [FD]
Line_28 $$ SqlUpgradeXmlParser parser = SqlUpgradeXmlParser.newParser() --> Line_48 $$ throw new IllegalArgumentException("Cannot upgrade to milestone [" + destMilestone + "] : does not exist . (Exisiting milestones " + parser.listMilestones() + ")") [FD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_50 $$ if (fromMilestoneIdx == toMilestoneIdx) [CD]
Line_42 $$ int fromMilestoneIdx = parser.getMilestoneIndex(fromMilestone) --> Line_50 $$ if (fromMilestoneIdx == toMilestoneIdx) [FD]
Line_43 $$ int toMilestoneIdx = parser.getMilestoneIndex(destMilestone) --> Line_50 $$ if (fromMilestoneIdx == toMilestoneIdx) [FD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_53 $$ List<String> files = parser.getFilesForMilestones(fromMilestoneIdx, toMilestoneIdx) [CD]
Line_28 $$ SqlUpgradeXmlParser parser = SqlUpgradeXmlParser.newParser() --> Line_53 $$ List<String> files = parser.getFilesForMilestones(fromMilestoneIdx, toMilestoneIdx) [FD]
Line_42 $$ int fromMilestoneIdx = parser.getMilestoneIndex(fromMilestone) --> Line_53 $$ List<String> files = parser.getFilesForMilestones(fromMilestoneIdx, toMilestoneIdx) [FD]
Line_43 $$ int toMilestoneIdx = parser.getMilestoneIndex(destMilestone) --> Line_53 $$ List<String> files = parser.getFilesForMilestones(fromMilestoneIdx, toMilestoneIdx) [FD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_54 $$ List<String> views = parser.getViewsForMilestones(fromMilestoneIdx, toMilestoneIdx) [CD]
Line_28 $$ SqlUpgradeXmlParser parser = SqlUpgradeXmlParser.newParser() --> Line_54 $$ List<String> views = parser.getViewsForMilestones(fromMilestoneIdx, toMilestoneIdx) [FD]
Line_42 $$ int fromMilestoneIdx = parser.getMilestoneIndex(fromMilestone) --> Line_54 $$ List<String> views = parser.getViewsForMilestones(fromMilestoneIdx, toMilestoneIdx) [FD]
Line_43 $$ int toMilestoneIdx = parser.getMilestoneIndex(destMilestone) --> Line_54 $$ List<String> views = parser.getViewsForMilestones(fromMilestoneIdx, toMilestoneIdx) [FD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_55 $$ FileOutputStream fos = null [CD]
Line_55 $$ FileOutputStream fos = null --> Line_57 $$ fos = new FileOutputStream(destFile) [FD]
Line_53 $$ List<String> files = parser.getFilesForMilestones(fromMilestoneIdx, toMilestoneIdx) --> Line_58 $$ for (Iterator<String> it = files.iterator(); it.hasNext(); ) [FD]
Line_58 $$ for (Iterator<String> it = files.iterator(); it.hasNext(); ) --> Line_59 $$ appendFileToOutputStream(fos, sqlDirectory, it.next()) [CD]
Line_58 $$ for (Iterator<String> it = files.iterator(); it.hasNext(); ) --> Line_59 $$ appendFileToOutputStream(fos, sqlDirectory, it.next()) [FD]
Line_55 $$ FileOutputStream fos = null --> Line_59 $$ appendFileToOutputStream(fos, sqlDirectory, it.next()) [FD]
Line_57 $$ fos = new FileOutputStream(destFile) --> Line_59 $$ appendFileToOutputStream(fos, sqlDirectory, it.next()) [FD]
Line_13 $$ File sqlDirectory = new File(sqlDirectoryName) --> Line_59 $$ appendFileToOutputStream(fos, sqlDirectory, it.next()) [FD]
Line_58 $$ for (Iterator<String> it = files.iterator(); it.hasNext(); ) --> Line_61 $$ for (Iterator<String> it = views.iterator(); it.hasNext(); ) [FD]
Line_54 $$ List<String> views = parser.getViewsForMilestones(fromMilestoneIdx, toMilestoneIdx) --> Line_61 $$ for (Iterator<String> it = views.iterator(); it.hasNext(); ) [FD]
Line_61 $$ for (Iterator<String> it = views.iterator(); it.hasNext(); ) --> Line_62 $$ appendFileToOutputStream(fos, sqlDirectory, it.next()) [CD]
Line_61 $$ for (Iterator<String> it = views.iterator(); it.hasNext(); ) --> Line_62 $$ appendFileToOutputStream(fos, sqlDirectory, it.next()) [FD]
Line_55 $$ FileOutputStream fos = null --> Line_62 $$ appendFileToOutputStream(fos, sqlDirectory, it.next()) [FD]
Line_57 $$ fos = new FileOutputStream(destFile) --> Line_62 $$ appendFileToOutputStream(fos, sqlDirectory, it.next()) [FD]
Line_13 $$ File sqlDirectory = new File(sqlDirectoryName) --> Line_62 $$ appendFileToOutputStream(fos, sqlDirectory, it.next()) [FD]
Line_58 $$ for (Iterator<String> it = files.iterator(); it.hasNext(); ) --> Line_62 $$ appendFileToOutputStream(fos, sqlDirectory, it.next()) [FD]
Line_55 $$ FileOutputStream fos = null --> Line_65 $$ fos.close() [FD]
Line_57 $$ fos = new FileOutputStream(destFile) --> Line_65 $$ fos.close() [FD]
Line_23 $$ File destFile = new File(destFileName) --> Line_66 $$ destFile.delete() [FD]
Line_55 $$ FileOutputStream fos = null --> Line_70 $$ if (fos != null) [FD]
Line_57 $$ fos = new FileOutputStream(destFile) --> Line_70 $$ if (fos != null) [FD]
Line_2 $$ private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception --> Line_75 $$ System.out.println("An SQL update file has been generated to " + destFileName + ".") [CD]
