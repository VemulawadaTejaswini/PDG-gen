Line_2 $$ public static void proxyRequest(IPageContext context, Writer writer, String proxyPath) throws IOException --> Line_3 $$ URLConnection connection = new URL(proxyPath).openConnection() [CD]
Line_2 $$ public static void proxyRequest(IPageContext context, Writer writer, String proxyPath) throws IOException --> Line_4 $$ connection.setDoInput(true) [CD]
Line_3 $$ URLConnection connection = new URL(proxyPath).openConnection() --> Line_4 $$ connection.setDoInput(true) [FD]
Line_2 $$ public static void proxyRequest(IPageContext context, Writer writer, String proxyPath) throws IOException --> Line_5 $$ connection.setDoOutput(false) [CD]
Line_3 $$ URLConnection connection = new URL(proxyPath).openConnection() --> Line_5 $$ connection.setDoOutput(false) [FD]
Line_2 $$ public static void proxyRequest(IPageContext context, Writer writer, String proxyPath) throws IOException --> Line_6 $$ connection.setUseCaches(false) [CD]
Line_3 $$ URLConnection connection = new URL(proxyPath).openConnection() --> Line_6 $$ connection.setUseCaches(false) [FD]
Line_2 $$ public static void proxyRequest(IPageContext context, Writer writer, String proxyPath) throws IOException --> Line_7 $$ connection.setRequestProperty("Content-Type", "text/html; charset=UTF-8") [CD]
Line_3 $$ URLConnection connection = new URL(proxyPath).openConnection() --> Line_7 $$ connection.setRequestProperty("Content-Type", "text/html; charset=UTF-8") [FD]
Line_2 $$ public static void proxyRequest(IPageContext context, Writer writer, String proxyPath) throws IOException --> Line_8 $$ connection.setReadTimeout(30000) [CD]
Line_3 $$ URLConnection connection = new URL(proxyPath).openConnection() --> Line_8 $$ connection.setReadTimeout(30000) [FD]
Line_2 $$ public static void proxyRequest(IPageContext context, Writer writer, String proxyPath) throws IOException --> Line_9 $$ connection.setConnectTimeout(5000) [CD]
Line_3 $$ URLConnection connection = new URL(proxyPath).openConnection() --> Line_9 $$ connection.setConnectTimeout(5000) [FD]
Line_2 $$ public static void proxyRequest(IPageContext context, Writer writer, String proxyPath) throws IOException --> Line_10 $$ Enumeration<String> e = context.httpRequest().getHeaderNames() [CD]
Line_2 $$ public static void proxyRequest(IPageContext context, Writer writer, String proxyPath) throws IOException --> Line_10 $$ Enumeration<String> e = context.httpRequest().getHeaderNames() [FD]
Line_2 $$ public static void proxyRequest(IPageContext context, Writer writer, String proxyPath) throws IOException --> Line_11 $$ while (e.hasMoreElements()) [CD]
Line_10 $$ Enumeration<String> e = context.httpRequest().getHeaderNames() --> Line_11 $$ while (e.hasMoreElements()) [FD]
Line_11 $$ while (e.hasMoreElements()) --> Line_12 $$ String name = e.nextElement() [CD]
Line_10 $$ Enumeration<String> e = context.httpRequest().getHeaderNames() --> Line_12 $$ String name = e.nextElement() [FD]
Line_11 $$ while (e.hasMoreElements()) --> Line_13 $$ if (name.equalsIgnoreCase("HOST") || name.equalsIgnoreCase("Accept-Encoding") || name.equalsIgnoreCase("Authorization")) [CD]
Line_12 $$ String name = e.nextElement() --> Line_13 $$ if (name.equalsIgnoreCase("HOST") || name.equalsIgnoreCase("Accept-Encoding") || name.equalsIgnoreCase("Authorization")) [FD]
Line_11 $$ while (e.hasMoreElements()) --> Line_14 $$ Enumeration<String> headers = context.httpRequest().getHeaders(name) [CD]
Line_12 $$ String name = e.nextElement() --> Line_14 $$ Enumeration<String> headers = context.httpRequest().getHeaders(name) [FD]
Line_2 $$ public static void proxyRequest(IPageContext context, Writer writer, String proxyPath) throws IOException --> Line_14 $$ Enumeration<String> headers = context.httpRequest().getHeaders(name) [FD]
Line_11 $$ while (e.hasMoreElements()) --> Line_15 $$ while (headers.hasMoreElements()) [CD]
Line_14 $$ Enumeration<String> headers = context.httpRequest().getHeaders(name) --> Line_15 $$ while (headers.hasMoreElements()) [FD]
Line_15 $$ while (headers.hasMoreElements()) --> Line_16 $$ String header = headers.nextElement() [CD]
Line_14 $$ Enumeration<String> headers = context.httpRequest().getHeaders(name) --> Line_16 $$ String header = headers.nextElement() [FD]
Line_15 $$ while (headers.hasMoreElements()) --> Line_17 $$ connection.setRequestProperty(name, header) [CD]
Line_3 $$ URLConnection connection = new URL(proxyPath).openConnection() --> Line_17 $$ connection.setRequestProperty(name, header) [FD]
Line_12 $$ String name = e.nextElement() --> Line_17 $$ connection.setRequestProperty(name, header) [FD]
Line_16 $$ String header = headers.nextElement() --> Line_17 $$ connection.setRequestProperty(name, header) [FD]
Line_2 $$ public static void proxyRequest(IPageContext context, Writer writer, String proxyPath) throws IOException --> Line_20 $$ if (connection instanceof HttpURLConnection) [CD]
Line_3 $$ URLConnection connection = new URL(proxyPath).openConnection() --> Line_20 $$ if (connection instanceof HttpURLConnection) [FD]
Line_20 $$ if (connection instanceof HttpURLConnection) --> Line_21 $$ HttpURLConnection httpConnection = (HttpURLConnection) connection [CD]
Line_20 $$ if (connection instanceof HttpURLConnection) --> Line_22 $$ httpConnection.setRequestMethod(context.httpRequest().getMethod()) [CD]
Line_21 $$ HttpURLConnection httpConnection = (HttpURLConnection) connection --> Line_22 $$ httpConnection.setRequestMethod(context.httpRequest().getMethod()) [FD]
Line_2 $$ public static void proxyRequest(IPageContext context, Writer writer, String proxyPath) throws IOException --> Line_22 $$ httpConnection.setRequestMethod(context.httpRequest().getMethod()) [FD]
Line_20 $$ if (connection instanceof HttpURLConnection) --> Line_23 $$ if ("POST".equalsIgnoreCase(context.httpRequest().getMethod()) || "PUT".equalsIgnoreCase(context.httpRequest().getMethod())) [CD]
Line_2 $$ public static void proxyRequest(IPageContext context, Writer writer, String proxyPath) throws IOException --> Line_23 $$ if ("POST".equalsIgnoreCase(context.httpRequest().getMethod()) || "PUT".equalsIgnoreCase(context.httpRequest().getMethod())) [FD]
Line_23 $$ if ("POST".equalsIgnoreCase(context.httpRequest().getMethod()) || "PUT".equalsIgnoreCase(context.httpRequest().getMethod())) --> Line_24 $$ Enumeration<String> names = context.httpRequest().getParameterNames() [CD]
Line_2 $$ public static void proxyRequest(IPageContext context, Writer writer, String proxyPath) throws IOException --> Line_24 $$ Enumeration<String> names = context.httpRequest().getParameterNames() [FD]
Line_23 $$ if ("POST".equalsIgnoreCase(context.httpRequest().getMethod()) || "PUT".equalsIgnoreCase(context.httpRequest().getMethod())) --> Line_25 $$ StringBuilder body = new StringBuilder() [CD]
Line_23 $$ if ("POST".equalsIgnoreCase(context.httpRequest().getMethod()) || "PUT".equalsIgnoreCase(context.httpRequest().getMethod())) --> Line_26 $$ while (names.hasMoreElements()) [CD]
Line_24 $$ Enumeration<String> names = context.httpRequest().getParameterNames() --> Line_26 $$ while (names.hasMoreElements()) [FD]
Line_26 $$ while (names.hasMoreElements()) --> Line_27 $$ String key = names.nextElement() [CD]
Line_24 $$ Enumeration<String> names = context.httpRequest().getParameterNames() --> Line_27 $$ String key = names.nextElement() [FD]
Line_2 $$ public static void proxyRequest(IPageContext context, Writer writer, String proxyPath) throws IOException --> Line_28 $$ for (String value : context.parameters(key)) [FD]
Line_27 $$ String key = names.nextElement() --> Line_28 $$ for (String value : context.parameters(key)) [FD]
Line_25 $$ StringBuilder body = new StringBuilder() --> Line_29 $$ if (body.length() > 0) [FD]
Line_29 $$ if (body.length() > 0) --> Line_30 $$ body.append('&') [CD]
Line_25 $$ StringBuilder body = new StringBuilder() --> Line_30 $$ body.append('&') [FD]
Line_25 $$ StringBuilder body = new StringBuilder() --> Line_33 $$ body.append(key).append("=").append(URLEncoder.encode(value, "UTF-8")) [FD]
Line_27 $$ String key = names.nextElement() --> Line_33 $$ body.append(key).append("=").append(URLEncoder.encode(value, "UTF-8")) [FD]
Line_28 $$ for (String value : context.parameters(key)) --> Line_33 $$ body.append(key).append("=").append(URLEncoder.encode(value, "UTF-8")) [FD]
Line_23 $$ if ("POST".equalsIgnoreCase(context.httpRequest().getMethod()) || "PUT".equalsIgnoreCase(context.httpRequest().getMethod())) --> Line_38 $$ if (body.length() > 0) [CD]
Line_25 $$ StringBuilder body = new StringBuilder() --> Line_38 $$ if (body.length() > 0) [FD]
Line_38 $$ if (body.length() > 0) --> Line_39 $$ connection.setDoOutput(true) [CD]
Line_3 $$ URLConnection connection = new URL(proxyPath).openConnection() --> Line_39 $$ connection.setDoOutput(true) [FD]
Line_38 $$ if (body.length() > 0) --> Line_40 $$ OutputStreamWriter out = new OutputStreamWriter(connection.getOutputStream()) [CD]
Line_3 $$ URLConnection connection = new URL(proxyPath).openConnection() --> Line_40 $$ OutputStreamWriter out = new OutputStreamWriter(connection.getOutputStream()) [FD]
Line_38 $$ if (body.length() > 0) --> Line_41 $$ out.write(body.toString()) [CD]
Line_40 $$ OutputStreamWriter out = new OutputStreamWriter(connection.getOutputStream()) --> Line_41 $$ out.write(body.toString()) [FD]
Line_25 $$ StringBuilder body = new StringBuilder() --> Line_41 $$ out.write(body.toString()) [FD]
Line_38 $$ if (body.length() > 0) --> Line_42 $$ out.close() [CD]
Line_40 $$ OutputStreamWriter out = new OutputStreamWriter(connection.getOutputStream()) --> Line_42 $$ out.close() [FD]
Line_2 $$ public static void proxyRequest(IPageContext context, Writer writer, String proxyPath) throws IOException --> Line_47 $$ IOUtils.copy(connection.getInputStream(), writer) [FD]
Line_3 $$ URLConnection connection = new URL(proxyPath).openConnection() --> Line_47 $$ IOUtils.copy(connection.getInputStream(), writer) [FD]
Line_2 $$ public static void proxyRequest(IPageContext context, Writer writer, String proxyPath) throws IOException --> Line_49 $$ writer.write("<span>SSI Error: " + ex.getMessage() + "</span>") [FD]
