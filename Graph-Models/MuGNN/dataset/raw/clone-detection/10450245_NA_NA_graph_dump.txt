Line_2 $$ public Map<String, String> getMetadata(WebFileObject fo) throws IOException --> Line_3 $$ if (!fo.wfs.getRootURL().getProtocol().equals("ftp")) [CD]
Line_3 $$ if (!fo.wfs.getRootURL().getProtocol().equals("ftp")) --> Line_4 $$ String realName = fo.pathname [CD]
Line_3 $$ if (!fo.wfs.getRootURL().getProtocol().equals("ftp")) --> Line_5 $$ boolean exists [CD]
Line_3 $$ if (!fo.wfs.getRootURL().getProtocol().equals("ftp")) --> Line_6 $$ URL ur = new URL(fo.wfs.getRootURL(), realName) [CD]
Line_3 $$ if (!fo.wfs.getRootURL().getProtocol().equals("ftp")) --> Line_7 $$ HttpURLConnection connect = (HttpURLConnection) ur.openConnection() [CD]
Line_6 $$ URL ur = new URL(fo.wfs.getRootURL(), realName) --> Line_7 $$ HttpURLConnection connect = (HttpURLConnection) ur.openConnection() [FD]
Line_3 $$ if (!fo.wfs.getRootURL().getProtocol().equals("ftp")) --> Line_8 $$ connect.setRequestMethod("HEAD") [CD]
Line_7 $$ HttpURLConnection connect = (HttpURLConnection) ur.openConnection() --> Line_8 $$ connect.setRequestMethod("HEAD") [FD]
Line_3 $$ if (!fo.wfs.getRootURL().getProtocol().equals("ftp")) --> Line_9 $$ HttpURLConnection.setFollowRedirects(false) [CD]
Line_3 $$ if (!fo.wfs.getRootURL().getProtocol().equals("ftp")) --> Line_10 $$ connect.connect() [CD]
Line_7 $$ HttpURLConnection connect = (HttpURLConnection) ur.openConnection() --> Line_10 $$ connect.connect() [FD]
Line_3 $$ if (!fo.wfs.getRootURL().getProtocol().equals("ftp")) --> Line_11 $$ HttpURLConnection.setFollowRedirects(true) [CD]
Line_3 $$ if (!fo.wfs.getRootURL().getProtocol().equals("ftp")) --> Line_12 $$ if (connect.getResponseCode() == 303) [CD]
Line_7 $$ HttpURLConnection connect = (HttpURLConnection) ur.openConnection() --> Line_12 $$ if (connect.getResponseCode() == 303) [FD]
Line_12 $$ if (connect.getResponseCode() == 303) --> Line_13 $$ String surl = connect.getHeaderField("Location") [CD]
Line_7 $$ HttpURLConnection connect = (HttpURLConnection) ur.openConnection() --> Line_13 $$ String surl = connect.getHeaderField("Location") [FD]
Line_12 $$ if (connect.getResponseCode() == 303) --> Line_14 $$ if (surl.startsWith(fo.wfs.root.toString())) [CD]
Line_13 $$ String surl = connect.getHeaderField("Location") --> Line_14 $$ if (surl.startsWith(fo.wfs.root.toString())) [FD]
Line_14 $$ if (surl.startsWith(fo.wfs.root.toString())) --> Line_15 $$ realName = surl.substring(fo.wfs.root.toString().length()) [CD]
Line_4 $$ String realName = fo.pathname --> Line_15 $$ realName = surl.substring(fo.wfs.root.toString().length()) [FD]
Line_13 $$ String surl = connect.getHeaderField("Location") --> Line_15 $$ realName = surl.substring(fo.wfs.root.toString().length()) [FD]
Line_12 $$ if (connect.getResponseCode() == 303) --> Line_17 $$ connect.disconnect() [CD]
Line_7 $$ HttpURLConnection connect = (HttpURLConnection) ur.openConnection() --> Line_17 $$ connect.disconnect() [FD]
Line_12 $$ if (connect.getResponseCode() == 303) --> Line_18 $$ ur = new URL(fo.wfs.getRootURL(), realName) [CD]
Line_6 $$ URL ur = new URL(fo.wfs.getRootURL(), realName) --> Line_18 $$ ur = new URL(fo.wfs.getRootURL(), realName) [FD]
Line_12 $$ if (connect.getResponseCode() == 303) --> Line_19 $$ connect = (HttpURLConnection) ur.openConnection() [CD]
Line_7 $$ HttpURLConnection connect = (HttpURLConnection) ur.openConnection() --> Line_19 $$ connect = (HttpURLConnection) ur.openConnection() [FD]
Line_6 $$ URL ur = new URL(fo.wfs.getRootURL(), realName) --> Line_19 $$ connect = (HttpURLConnection) ur.openConnection() [FD]
Line_18 $$ ur = new URL(fo.wfs.getRootURL(), realName) --> Line_19 $$ connect = (HttpURLConnection) ur.openConnection() [FD]
Line_12 $$ if (connect.getResponseCode() == 303) --> Line_20 $$ connect.setRequestMethod("HEAD") [CD]
Line_7 $$ HttpURLConnection connect = (HttpURLConnection) ur.openConnection() --> Line_20 $$ connect.setRequestMethod("HEAD") [FD]
Line_19 $$ connect = (HttpURLConnection) ur.openConnection() --> Line_20 $$ connect.setRequestMethod("HEAD") [FD]
Line_12 $$ if (connect.getResponseCode() == 303) --> Line_21 $$ connect.connect() [CD]
Line_7 $$ HttpURLConnection connect = (HttpURLConnection) ur.openConnection() --> Line_21 $$ connect.connect() [FD]
Line_19 $$ connect = (HttpURLConnection) ur.openConnection() --> Line_21 $$ connect.connect() [FD]
Line_3 $$ if (!fo.wfs.getRootURL().getProtocol().equals("ftp")) --> Line_23 $$ exists = connect.getResponseCode() != 404 [CD]
Line_5 $$ boolean exists --> Line_23 $$ exists = connect.getResponseCode() != 404 [FD]
Line_7 $$ HttpURLConnection connect = (HttpURLConnection) ur.openConnection() --> Line_23 $$ exists = connect.getResponseCode() != 404 [FD]
Line_19 $$ connect = (HttpURLConnection) ur.openConnection() --> Line_23 $$ exists = connect.getResponseCode() != 404 [FD]
Line_3 $$ if (!fo.wfs.getRootURL().getProtocol().equals("ftp")) --> Line_24 $$ Map<String, String> result = new HashMap<String, String>() [CD]
Line_3 $$ if (!fo.wfs.getRootURL().getProtocol().equals("ftp")) --> Line_25 $$ Map<String, List<String>> fields = connect.getHeaderFields() [CD]
Line_7 $$ HttpURLConnection connect = (HttpURLConnection) ur.openConnection() --> Line_25 $$ Map<String, List<String>> fields = connect.getHeaderFields() [FD]
Line_19 $$ connect = (HttpURLConnection) ur.openConnection() --> Line_25 $$ Map<String, List<String>> fields = connect.getHeaderFields() [FD]
Line_25 $$ Map<String, List<String>> fields = connect.getHeaderFields() --> Line_26 $$ for (Entry<String, List<String>> e : fields.entrySet()) [FD]
Line_24 $$ Map<String, String> result = new HashMap<String, String>() --> Line_29 $$ result.put(key, value.get(0)) [FD]
Line_27 $$ String key = e.getKey() --> Line_29 $$ result.put(key, value.get(0)) [FD]
Line_28 $$ List<String> value = e.getValue() --> Line_29 $$ result.put(key, value.get(0)) [FD]
Line_3 $$ if (!fo.wfs.getRootURL().getProtocol().equals("ftp")) --> Line_31 $$ result.put(META_EXIST, String.valueOf(exists)) [CD]
Line_24 $$ Map<String, String> result = new HashMap<String, String>() --> Line_31 $$ result.put(META_EXIST, String.valueOf(exists)) [FD]
Line_5 $$ boolean exists --> Line_31 $$ result.put(META_EXIST, String.valueOf(exists)) [FD]
Line_23 $$ exists = connect.getResponseCode() != 404 --> Line_31 $$ result.put(META_EXIST, String.valueOf(exists)) [FD]
Line_3 $$ if (!fo.wfs.getRootURL().getProtocol().equals("ftp")) --> Line_32 $$ connect.disconnect() [CD]
Line_7 $$ HttpURLConnection connect = (HttpURLConnection) ur.openConnection() --> Line_32 $$ connect.disconnect() [FD]
Line_19 $$ connect = (HttpURLConnection) ur.openConnection() --> Line_32 $$ connect.disconnect() [FD]
Line_3 $$ if (!fo.wfs.getRootURL().getProtocol().equals("ftp")) --> Line_33 $$ return result [CD]
Line_3 $$ if (!fo.wfs.getRootURL().getProtocol().equals("ftp")) --> Line_36 $$ URL url = new URL(fo.wfs.getRootURL(), fo.pathname) [CD]
Line_3 $$ if (!fo.wfs.getRootURL().getProtocol().equals("ftp")) --> Line_37 $$ URLConnection urlc = url.openConnection() [CD]
Line_36 $$ URL url = new URL(fo.wfs.getRootURL(), fo.pathname) --> Line_37 $$ URLConnection urlc = url.openConnection() [FD]
Line_37 $$ URLConnection urlc = url.openConnection() --> Line_39 $$ urlc.connect() [FD]
Line_37 $$ URLConnection urlc = url.openConnection() --> Line_40 $$ urlc.getInputStream().close() [FD]
Line_24 $$ Map<String, String> result = new HashMap<String, String>() --> Line_41 $$ result.put(META_EXIST, "true") [FD]
Line_24 $$ Map<String, String> result = new HashMap<String, String>() --> Line_43 $$ result.put(META_EXIST, "false") [FD]
Line_3 $$ if (!fo.wfs.getRootURL().getProtocol().equals("ftp")) --> Line_45 $$ return result [CD]
