Line_2 $$ public static boolean isSameHttpContent(final String url, final File localFile, UsernamePasswordCredentials creds) throws IOException --> Line_3 $$ if (localFile.isFile()) [CD]
Line_2 $$ public static boolean isSameHttpContent(final String url, final File localFile, UsernamePasswordCredentials creds) throws IOException --> Line_3 $$ if (localFile.isFile()) [FD]
Line_3 $$ if (localFile.isFile()) --> Line_4 $$ long localContentLength = localFile.length() [CD]
Line_2 $$ public static boolean isSameHttpContent(final String url, final File localFile, UsernamePasswordCredentials creds) throws IOException --> Line_4 $$ long localContentLength = localFile.length() [FD]
Line_3 $$ if (localFile.isFile()) --> Line_5 $$ long localLastModified = localFile.lastModified() / 1000 [CD]
Line_2 $$ public static boolean isSameHttpContent(final String url, final File localFile, UsernamePasswordCredentials creds) throws IOException --> Line_5 $$ long localLastModified = localFile.lastModified() / 1000 [FD]
Line_3 $$ if (localFile.isFile()) --> Line_6 $$ long contentLength = -1 [CD]
Line_3 $$ if (localFile.isFile()) --> Line_7 $$ long lastModified = -1 [CD]
Line_3 $$ if (localFile.isFile()) --> Line_8 $$ HttpClient httpclient = createHttpClient(creds) [CD]
Line_2 $$ public static boolean isSameHttpContent(final String url, final File localFile, UsernamePasswordCredentials creds) throws IOException --> Line_8 $$ HttpClient httpclient = createHttpClient(creds) [FD]
Line_8 $$ HttpClient httpclient = createHttpClient(creds) --> Line_11 $$ HttpResponse response = httpclient.execute(httphead) [FD]
Line_10 $$ HttpHead httphead = new HttpHead(url) --> Line_11 $$ HttpResponse response = httpclient.execute(httphead) [FD]
Line_11 $$ HttpResponse response = httpclient.execute(httphead) --> Line_12 $$ if (response != null) [FD]
Line_12 $$ if (response != null) --> Line_13 $$ StatusLine statusLine = response.getStatusLine() [CD]
Line_11 $$ HttpResponse response = httpclient.execute(httphead) --> Line_13 $$ StatusLine statusLine = response.getStatusLine() [FD]
Line_12 $$ if (response != null) --> Line_14 $$ int status = statusLine.getStatusCode() / 100 [CD]
Line_13 $$ StatusLine statusLine = response.getStatusLine() --> Line_14 $$ int status = statusLine.getStatusCode() / 100 [FD]
Line_12 $$ if (response != null) --> Line_15 $$ if (status == 2) [CD]
Line_14 $$ int status = statusLine.getStatusCode() / 100 --> Line_15 $$ if (status == 2) [FD]
Line_15 $$ if (status == 2) --> Line_16 $$ Header lastModifiedHeader = response.getFirstHeader("Last-Modified") [CD]
Line_11 $$ HttpResponse response = httpclient.execute(httphead) --> Line_16 $$ Header lastModifiedHeader = response.getFirstHeader("Last-Modified") [FD]
Line_15 $$ if (status == 2) --> Line_17 $$ Header contentLengthHeader = response.getFirstHeader("Content-Length") [CD]
Line_11 $$ HttpResponse response = httpclient.execute(httphead) --> Line_17 $$ Header contentLengthHeader = response.getFirstHeader("Content-Length") [FD]
Line_15 $$ if (status == 2) --> Line_18 $$ if (contentLengthHeader != null) [CD]
Line_17 $$ Header contentLengthHeader = response.getFirstHeader("Content-Length") --> Line_18 $$ if (contentLengthHeader != null) [FD]
Line_18 $$ if (contentLengthHeader != null) --> Line_19 $$ contentLength = Integer.parseInt(contentLengthHeader.getValue()) [CD]
Line_6 $$ long contentLength = -1 --> Line_19 $$ contentLength = Integer.parseInt(contentLengthHeader.getValue()) [FD]
Line_17 $$ Header contentLengthHeader = response.getFirstHeader("Content-Length") --> Line_19 $$ contentLength = Integer.parseInt(contentLengthHeader.getValue()) [FD]
Line_15 $$ if (status == 2) --> Line_21 $$ if (lastModifiedHeader != null) [CD]
Line_16 $$ Header lastModifiedHeader = response.getFirstHeader("Last-Modified") --> Line_21 $$ if (lastModifiedHeader != null) [FD]
Line_21 $$ if (lastModifiedHeader != null) --> Line_22 $$ SimpleDateFormat formatter = new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss zzz") [CD]
Line_21 $$ if (lastModifiedHeader != null) --> Line_23 $$ formatter.setDateFormatSymbols(new DateFormatSymbols(Locale.US)) [CD]
Line_22 $$ SimpleDateFormat formatter = new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss zzz") --> Line_23 $$ formatter.setDateFormatSymbols(new DateFormatSymbols(Locale.US)) [FD]
Line_7 $$ long lastModified = -1 --> Line_25 $$ lastModified = formatter.parse(lastModifiedHeader.getValue()).getTime() / 1000 [FD]
Line_22 $$ SimpleDateFormat formatter = new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss zzz") --> Line_25 $$ lastModified = formatter.parse(lastModifiedHeader.getValue()).getTime() / 1000 [FD]
Line_16 $$ Header lastModifiedHeader = response.getFirstHeader("Last-Modified") --> Line_25 $$ lastModified = formatter.parse(lastModifiedHeader.getValue()).getTime() / 1000 [FD]
Line_15 $$ if (status == 2) --> Line_31 $$ return true [CD]
Line_8 $$ HttpClient httpclient = createHttpClient(creds) --> Line_35 $$ httpclient.getConnectionManager().shutdown() [FD]
Line_3 $$ if (localFile.isFile()) --> Line_37 $$ if (logger.isDebugEnabled()) [CD]
Line_37 $$ if (logger.isDebugEnabled()) --> Line_38 $$ logger.debug("local:" + localContentLength + " " + localLastModified) [CD]
Line_37 $$ if (logger.isDebugEnabled()) --> Line_39 $$ logger.debug("remote:" + contentLength + " " + lastModified) [CD]
Line_3 $$ if (localFile.isFile()) --> Line_41 $$ if (contentLength != -1 && localContentLength != contentLength) [CD]
Line_3 $$ if (localFile.isFile()) --> Line_42 $$ if (lastModified != -1 && lastModified != localLastModified) [CD]
Line_3 $$ if (localFile.isFile()) --> Line_43 $$ if (contentLength == -1 && lastModified == -1) [CD]
Line_3 $$ if (localFile.isFile()) --> Line_44 $$ return true [CD]
Line_2 $$ public static boolean isSameHttpContent(final String url, final File localFile, UsernamePasswordCredentials creds) throws IOException --> Line_46 $$ return false [CD]
