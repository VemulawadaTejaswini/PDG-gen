Line_2 $$ public static long getFileTimeStamp(String fileClassPath, String mockWebUrl) throws Exception --> Line_3 $$ if (fileClassPath == null) [CD]
Line_2 $$ public static long getFileTimeStamp(String fileClassPath, String mockWebUrl) throws Exception --> Line_3 $$ if (fileClassPath == null) [FD]
Line_2 $$ public static long getFileTimeStamp(String fileClassPath, String mockWebUrl) throws Exception --> Line_4 $$ if (fileClassPath.startsWith("/")) [CD]
Line_2 $$ public static long getFileTimeStamp(String fileClassPath, String mockWebUrl) throws Exception --> Line_4 $$ if (fileClassPath.startsWith("/")) [FD]
Line_4 $$ if (fileClassPath.startsWith("/")) --> Line_5 $$ fileClassPath = fileClassPath.substring(1, fileClassPath.length()) [CD]
Line_2 $$ public static long getFileTimeStamp(String fileClassPath, String mockWebUrl) throws Exception --> Line_5 $$ fileClassPath = fileClassPath.substring(1, fileClassPath.length()) [FD]
Line_4 $$ if (fileClassPath.startsWith("/")) --> Line_6 $$ if (mockWebUrl != null && fileClassPath.startsWith(mockWebUrl)) [CD]
Line_2 $$ public static long getFileTimeStamp(String fileClassPath, String mockWebUrl) throws Exception --> Line_6 $$ if (mockWebUrl != null && fileClassPath.startsWith(mockWebUrl)) [FD]
Line_5 $$ fileClassPath = fileClassPath.substring(1, fileClassPath.length()) --> Line_6 $$ if (mockWebUrl != null && fileClassPath.startsWith(mockWebUrl)) [FD]
Line_6 $$ if (mockWebUrl != null && fileClassPath.startsWith(mockWebUrl)) --> Line_7 $$ fileClassPath = fileClassPath.substring(mockWebUrl.length()) [CD]
Line_2 $$ public static long getFileTimeStamp(String fileClassPath, String mockWebUrl) throws Exception --> Line_7 $$ fileClassPath = fileClassPath.substring(mockWebUrl.length()) [FD]
Line_5 $$ fileClassPath = fileClassPath.substring(1, fileClassPath.length()) --> Line_7 $$ fileClassPath = fileClassPath.substring(mockWebUrl.length()) [FD]
Line_2 $$ public static long getFileTimeStamp(String fileClassPath, String mockWebUrl) throws Exception --> Line_9 $$ URL url = Thread.currentThread().getContextClassLoader().getResource(fileClassPath) [CD]
Line_2 $$ public static long getFileTimeStamp(String fileClassPath, String mockWebUrl) throws Exception --> Line_9 $$ URL url = Thread.currentThread().getContextClassLoader().getResource(fileClassPath) [FD]
Line_5 $$ fileClassPath = fileClassPath.substring(1, fileClassPath.length()) --> Line_9 $$ URL url = Thread.currentThread().getContextClassLoader().getResource(fileClassPath) [FD]
Line_7 $$ fileClassPath = fileClassPath.substring(mockWebUrl.length()) --> Line_9 $$ URL url = Thread.currentThread().getContextClassLoader().getResource(fileClassPath) [FD]
Line_2 $$ public static long getFileTimeStamp(String fileClassPath, String mockWebUrl) throws Exception --> Line_10 $$ URLConnection urlCnx = null [CD]
Line_9 $$ URL url = Thread.currentThread().getContextClassLoader().getResource(fileClassPath) --> Line_12 $$ if (url == null) [FD]
Line_12 $$ if (url == null) --> Line_13 $$ return 0 [CD]
Line_10 $$ URLConnection urlCnx = null --> Line_15 $$ urlCnx = url.openConnection() [FD]
Line_9 $$ URL url = Thread.currentThread().getContextClassLoader().getResource(fileClassPath) --> Line_15 $$ urlCnx = url.openConnection() [FD]
Line_10 $$ URLConnection urlCnx = null --> Line_16 $$ return urlCnx.getLastModified() [FD]
Line_15 $$ urlCnx = url.openConnection() --> Line_16 $$ return urlCnx.getLastModified() [FD]
Line_10 $$ URLConnection urlCnx = null --> Line_18 $$ if (urlCnx != null && urlCnx.getInputStream() != null) [FD]
Line_15 $$ urlCnx = url.openConnection() --> Line_18 $$ if (urlCnx != null && urlCnx.getInputStream() != null) [FD]
