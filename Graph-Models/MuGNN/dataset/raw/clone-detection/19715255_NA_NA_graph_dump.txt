Line_2 $$ static Object executeMethod(HttpMethod method, int timeout, boolean array) throws HttpRequestFailureException, HttpException, IOException, HttpRequestTimeoutException --> Line_4 $$ method.getParams().setSoTimeout(timeout * 1000) [FD]
Line_2 $$ static Object executeMethod(HttpMethod method, int timeout, boolean array) throws HttpRequestFailureException, HttpException, IOException, HttpRequestTimeoutException --> Line_7 $$ System.out.println("Execute method: " + method.getPath() + " " + method.getQueryString()) [FD]
Line_8 $$ TwitterclipseConfig config = TwitterclipsePlugin.getDefault().getTwitterclipseConfiguration() --> Line_9 $$ HttpClient httpClient = HttpClientUtils.createHttpClient(TWITTER_BASE_URL, config.getUserId(), config.getPassword()) [FD]
Line_5 $$ int status = -1 --> Line_10 $$ status = httpClient.executeMethod(method) [FD]
Line_9 $$ HttpClient httpClient = HttpClientUtils.createHttpClient(TWITTER_BASE_URL, config.getUserId(), config.getPassword()) --> Line_10 $$ status = httpClient.executeMethod(method) [FD]
Line_2 $$ static Object executeMethod(HttpMethod method, int timeout, boolean array) throws HttpRequestFailureException, HttpException, IOException, HttpRequestTimeoutException --> Line_10 $$ status = httpClient.executeMethod(method) [FD]
Line_5 $$ int status = -1 --> Line_12 $$ if (status == HttpStatus.SC_OK) [FD]
Line_10 $$ status = httpClient.executeMethod(method) --> Line_12 $$ if (status == HttpStatus.SC_OK) [FD]
Line_12 $$ if (status == HttpStatus.SC_OK) --> Line_13 $$ InputStream inputStream = method.getResponseBodyAsStream() [CD]
Line_2 $$ static Object executeMethod(HttpMethod method, int timeout, boolean array) throws HttpRequestFailureException, HttpException, IOException, HttpRequestTimeoutException --> Line_13 $$ InputStream inputStream = method.getResponseBodyAsStream() [FD]
Line_12 $$ if (status == HttpStatus.SC_OK) --> Line_14 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() [CD]
Line_12 $$ if (status == HttpStatus.SC_OK) --> Line_15 $$ IOUtils.copy(inputStream, baos) [CD]
Line_13 $$ InputStream inputStream = method.getResponseBodyAsStream() --> Line_15 $$ IOUtils.copy(inputStream, baos) [FD]
Line_14 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() --> Line_15 $$ IOUtils.copy(inputStream, baos) [FD]
Line_12 $$ if (status == HttpStatus.SC_OK) --> Line_16 $$ String response = new String(baos.toByteArray(), "UTF-8") [CD]
Line_14 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() --> Line_16 $$ String response = new String(baos.toByteArray(), "UTF-8") [FD]
Line_12 $$ if (status == HttpStatus.SC_OK) --> Line_17 $$ System.out.println(response) [CD]
Line_16 $$ String response = new String(baos.toByteArray(), "UTF-8") --> Line_17 $$ System.out.println(response) [FD]
Line_12 $$ if (status == HttpStatus.SC_OK) --> Line_18 $$ result = JSONObject.fromString(response) [CD]
Line_6 $$ Object result = null --> Line_18 $$ result = JSONObject.fromString(response) [FD]
Line_16 $$ String response = new String(baos.toByteArray(), "UTF-8") --> Line_18 $$ result = JSONObject.fromString(response) [FD]
Line_2 $$ static Object executeMethod(HttpMethod method, int timeout, boolean array) throws HttpRequestFailureException, HttpException, IOException, HttpRequestTimeoutException --> Line_26 $$ method.releaseConnection() [FD]
