Line_2 $$ private void importUrl(String str) throws Exception --> Line_3 $$ URL url = new URL(str) [CD]
Line_2 $$ private void importUrl(String str) throws Exception --> Line_4 $$ InputStream xmlStream = url.openStream() [CD]
Line_3 $$ URL url = new URL(str) --> Line_4 $$ InputStream xmlStream = url.openStream() [FD]
Line_2 $$ private void importUrl(String str) throws Exception --> Line_5 $$ DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance() [CD]
Line_2 $$ private void importUrl(String str) throws Exception --> Line_6 $$ MessageHolder messages = MessageHolder.getInstance() [CD]
Line_2 $$ private void importUrl(String str) throws Exception --> Line_7 $$ DocumentBuilder builder = factory.newDocumentBuilder() [CD]
Line_5 $$ DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance() --> Line_7 $$ DocumentBuilder builder = factory.newDocumentBuilder() [FD]
Line_2 $$ private void importUrl(String str) throws Exception --> Line_8 $$ Document document = builder.parse(xmlStream) [CD]
Line_7 $$ DocumentBuilder builder = factory.newDocumentBuilder() --> Line_8 $$ Document document = builder.parse(xmlStream) [FD]
Line_4 $$ InputStream xmlStream = url.openStream() --> Line_8 $$ Document document = builder.parse(xmlStream) [FD]
Line_2 $$ private void importUrl(String str) throws Exception --> Line_9 $$ Element rootElement = document.getDocumentElement() [CD]
Line_8 $$ Document document = builder.parse(xmlStream) --> Line_9 $$ Element rootElement = document.getDocumentElement() [FD]
Line_2 $$ private void importUrl(String str) throws Exception --> Line_10 $$ EntrySetParser entrySetParser = new EntrySetParser() [CD]
Line_2 $$ private void importUrl(String str) throws Exception --> Line_11 $$ EntrySetTag entrySet = entrySetParser.process(rootElement) [CD]
Line_9 $$ Element rootElement = document.getDocumentElement() --> Line_11 $$ EntrySetTag entrySet = entrySetParser.process(rootElement) [FD]
Line_2 $$ private void importUrl(String str) throws Exception --> Line_12 $$ UpdateProteinsI proteinFactory = new UpdateProteins() [CD]
Line_2 $$ private void importUrl(String str) throws Exception --> Line_13 $$ BioSourceFactory bioSourceFactory = new BioSourceFactory() [CD]
Line_2 $$ private void importUrl(String str) throws Exception --> Line_14 $$ ControlledVocabularyRepository.check() [CD]
Line_2 $$ private void importUrl(String str) throws Exception --> Line_15 $$ EntrySetChecker.check(entrySet, proteinFactory, bioSourceFactory) [CD]
Line_12 $$ UpdateProteinsI proteinFactory = new UpdateProteins() --> Line_15 $$ EntrySetChecker.check(entrySet, proteinFactory, bioSourceFactory) [FD]
Line_13 $$ BioSourceFactory bioSourceFactory = new BioSourceFactory() --> Line_15 $$ EntrySetChecker.check(entrySet, proteinFactory, bioSourceFactory) [FD]
Line_2 $$ private void importUrl(String str) throws Exception --> Line_16 $$ if (messages.checkerMessageExists()) [CD]
Line_6 $$ MessageHolder messages = MessageHolder.getInstance() --> Line_16 $$ if (messages.checkerMessageExists()) [FD]
Line_16 $$ if (messages.checkerMessageExists()) --> Line_17 $$ MessageHolder.getInstance().printCheckerReport(System.err) [CD]
Line_16 $$ if (messages.checkerMessageExists()) --> Line_19 $$ EntrySetPersister.persist(entrySet) [CD]
Line_16 $$ if (messages.checkerMessageExists()) --> Line_20 $$ if (messages.checkerMessageExists()) [CD]
Line_6 $$ MessageHolder messages = MessageHolder.getInstance() --> Line_20 $$ if (messages.checkerMessageExists()) [FD]
Line_20 $$ if (messages.checkerMessageExists()) --> Line_21 $$ MessageHolder.getInstance().printPersisterReport(System.err) [CD]
Line_20 $$ if (messages.checkerMessageExists()) --> Line_23 $$ System.out.println("The data have been successfully saved in your Intact node.") [CD]
