Line_2 $$ public String makeLeoNounCall(String noun) --> Line_3 $$ String ret = "" [CD]
Line_2 $$ public String makeLeoNounCall(String noun) --> Line_4 $$ StringBuffer buf = new StringBuffer() [CD]
Line_6 $$ URL url = new URL("http://dict.leo.org" + noun) --> Line_7 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream(), Charset.forName("ISO8859_1"))) [FD]
Line_8 $$ String inputLine --> Line_10 $$ while ((inputLine = in.readLine()) != null) [FD]
Line_7 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream(), Charset.forName("ISO8859_1"))) --> Line_10 $$ while ((inputLine = in.readLine()) != null) [FD]
Line_10 $$ while ((inputLine = in.readLine()) != null) --> Line_11 $$ if (inputLine.contains("contentholder")) [CD]
Line_10 $$ while ((inputLine = in.readLine()) != null) --> Line_11 $$ if (inputLine.contains("contentholder")) [FD]
Line_8 $$ String inputLine --> Line_11 $$ if (inputLine.contains("contentholder")) [FD]
Line_11 $$ if (inputLine.contains("contentholder")) --> Line_12 $$ display = true [CD]
Line_9 $$ boolean display = false --> Line_12 $$ display = true [FD]
Line_10 $$ while ((inputLine = in.readLine()) != null) --> Line_14 $$ buf.append(inputLine) [CD]
Line_10 $$ while ((inputLine = in.readLine()) != null) --> Line_14 $$ buf.append(inputLine) [FD]
Line_4 $$ StringBuffer buf = new StringBuffer() --> Line_14 $$ buf.append(inputLine) [FD]
Line_8 $$ String inputLine --> Line_14 $$ buf.append(inputLine) [FD]
Line_3 $$ String ret = "" --> Line_16 $$ ret = FilterFunctions.findEndTag("<td", buf.toString()) [FD]
Line_4 $$ StringBuffer buf = new StringBuffer() --> Line_16 $$ ret = FilterFunctions.findEndTag("<td", buf.toString()) [FD]
Line_2 $$ public String makeLeoNounCall(String noun) --> Line_21 $$ return ret [CD]
