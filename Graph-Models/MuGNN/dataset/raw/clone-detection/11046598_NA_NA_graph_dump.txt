Line_2 $$ private String hash(String clearPassword) --> Line_3 $$ if (salt == 0) [CD]
Line_2 $$ private String hash(String clearPassword) --> Line_4 $$ MessageDigest md = null [CD]
Line_4 $$ MessageDigest md = null --> Line_6 $$ md = MessageDigest.getInstance("SHA1") [FD]
Line_2 $$ private String hash(String clearPassword) --> Line_10 $$ String saltString = String.valueOf(salt) [CD]
Line_2 $$ private String hash(String clearPassword) --> Line_11 $$ md.update(saltString.getBytes()) [CD]
Line_4 $$ MessageDigest md = null --> Line_11 $$ md.update(saltString.getBytes()) [FD]
Line_6 $$ md = MessageDigest.getInstance("SHA1") --> Line_11 $$ md.update(saltString.getBytes()) [FD]
Line_10 $$ String saltString = String.valueOf(salt) --> Line_11 $$ md.update(saltString.getBytes()) [FD]
Line_2 $$ private String hash(String clearPassword) --> Line_12 $$ md.update(clearPassword.getBytes()) [CD]
Line_2 $$ private String hash(String clearPassword) --> Line_12 $$ md.update(clearPassword.getBytes()) [FD]
Line_4 $$ MessageDigest md = null --> Line_12 $$ md.update(clearPassword.getBytes()) [FD]
Line_6 $$ md = MessageDigest.getInstance("SHA1") --> Line_12 $$ md.update(clearPassword.getBytes()) [FD]
Line_2 $$ private String hash(String clearPassword) --> Line_13 $$ byte[] digestBytes = md.digest() [CD]
Line_4 $$ MessageDigest md = null --> Line_13 $$ byte[] digestBytes = md.digest() [FD]
Line_6 $$ md = MessageDigest.getInstance("SHA1") --> Line_13 $$ byte[] digestBytes = md.digest() [FD]
Line_2 $$ private String hash(String clearPassword) --> Line_14 $$ StringBuffer digestSB = new StringBuffer() [CD]
Line_2 $$ private String hash(String clearPassword) --> Line_15 $$ for (int i = 0; i < digestBytes.length; i++) [CD]
Line_15 $$ for (int i = 0; i < digestBytes.length; i++) --> Line_16 $$ int lowNibble = digestBytes[i] & 0x0f [CD]
Line_15 $$ for (int i = 0; i < digestBytes.length; i++) --> Line_17 $$ int highNibble = (digestBytes[i] >> 4) & 0x0f [CD]
Line_15 $$ for (int i = 0; i < digestBytes.length; i++) --> Line_18 $$ digestSB.append(Integer.toHexString(highNibble)) [CD]
Line_14 $$ StringBuffer digestSB = new StringBuffer() --> Line_18 $$ digestSB.append(Integer.toHexString(highNibble)) [FD]
Line_17 $$ int highNibble = (digestBytes[i] >> 4) & 0x0f --> Line_18 $$ digestSB.append(Integer.toHexString(highNibble)) [FD]
Line_15 $$ for (int i = 0; i < digestBytes.length; i++) --> Line_19 $$ digestSB.append(Integer.toHexString(lowNibble)) [CD]
Line_14 $$ StringBuffer digestSB = new StringBuffer() --> Line_19 $$ digestSB.append(Integer.toHexString(lowNibble)) [FD]
Line_16 $$ int lowNibble = digestBytes[i] & 0x0f --> Line_19 $$ digestSB.append(Integer.toHexString(lowNibble)) [FD]
Line_2 $$ private String hash(String clearPassword) --> Line_21 $$ String digestStr = digestSB.toString() [CD]
Line_14 $$ StringBuffer digestSB = new StringBuffer() --> Line_21 $$ String digestStr = digestSB.toString() [FD]
Line_2 $$ private String hash(String clearPassword) --> Line_22 $$ return digestStr [CD]
