Line_2 $$ public void importarHistoricoDeCotacoesDosPapeis(File[] pArquivosTXT, boolean pApagarDadosImportadosAnteriormente, Andamento pAndamento) throws FileNotFoundException, SQLException --> Line_3 $$ if (pApagarDadosImportadosAnteriormente) [CD]
Line_3 $$ if (pApagarDadosImportadosAnteriormente) --> Line_4 $$ Statement stmtLimpezaInicialDestino = conDestino.createStatement() [CD]
Line_3 $$ if (pApagarDadosImportadosAnteriormente) --> Line_5 $$ String sql = "TRUNCATE TABLE TMP_TB_COTACAO_AVISTA_LOTE_PDR" [CD]
Line_3 $$ if (pApagarDadosImportadosAnteriormente) --> Line_6 $$ stmtLimpezaInicialDestino.executeUpdate(sql) [CD]
Line_4 $$ Statement stmtLimpezaInicialDestino = conDestino.createStatement() --> Line_6 $$ stmtLimpezaInicialDestino.executeUpdate(sql) [FD]
Line_5 $$ String sql = "TRUNCATE TABLE TMP_TB_COTACAO_AVISTA_LOTE_PDR" --> Line_6 $$ stmtLimpezaInicialDestino.executeUpdate(sql) [FD]
Line_3 $$ if (pApagarDadosImportadosAnteriormente) --> Line_7 $$ sql = "TRUNCATE TABLE TMP_TB_COTACAO_OUTROS_MERCADOS" [CD]
Line_5 $$ String sql = "TRUNCATE TABLE TMP_TB_COTACAO_AVISTA_LOTE_PDR" --> Line_7 $$ sql = "TRUNCATE TABLE TMP_TB_COTACAO_OUTROS_MERCADOS" [FD]
Line_3 $$ if (pApagarDadosImportadosAnteriormente) --> Line_8 $$ stmtLimpezaInicialDestino.executeUpdate(sql) [CD]
Line_4 $$ Statement stmtLimpezaInicialDestino = conDestino.createStatement() --> Line_8 $$ stmtLimpezaInicialDestino.executeUpdate(sql) [FD]
Line_5 $$ String sql = "TRUNCATE TABLE TMP_TB_COTACAO_AVISTA_LOTE_PDR" --> Line_8 $$ stmtLimpezaInicialDestino.executeUpdate(sql) [FD]
Line_7 $$ sql = "TRUNCATE TABLE TMP_TB_COTACAO_OUTROS_MERCADOS" --> Line_8 $$ stmtLimpezaInicialDestino.executeUpdate(sql) [FD]
Line_2 $$ public void importarHistoricoDeCotacoesDosPapeis(File[] pArquivosTXT, boolean pApagarDadosImportadosAnteriormente, Andamento pAndamento) throws FileNotFoundException, SQLException --> Line_10 $$ final int TAMANHO_DO_REGISTRO = 245 [CD]
Line_2 $$ public void importarHistoricoDeCotacoesDosPapeis(File[] pArquivosTXT, boolean pApagarDadosImportadosAnteriormente, Andamento pAndamento) throws FileNotFoundException, SQLException --> Line_11 $$ long TAMANHO_DOS_METADADOS_DO_ARQUIVO = 2 * TAMANHO_DO_REGISTRO [CD]
Line_2 $$ public void importarHistoricoDeCotacoesDosPapeis(File[] pArquivosTXT, boolean pApagarDadosImportadosAnteriormente, Andamento pAndamento) throws FileNotFoundException, SQLException --> Line_12 $$ long tamanhoDosArquivos = 0 [CD]
Line_13 $$ for (File arquivoTXT : pArquivosTXT) --> Line_14 $$ long tamanhoDoArquivo = arquivoTXT.length() [FD]
Line_12 $$ long tamanhoDosArquivos = 0 --> Line_15 $$ tamanhoDosArquivos += tamanhoDoArquivo [FD]
Line_14 $$ long tamanhoDoArquivo = arquivoTXT.length() --> Line_15 $$ tamanhoDosArquivos += tamanhoDoArquivo [FD]
Line_2 $$ public void importarHistoricoDeCotacoesDosPapeis(File[] pArquivosTXT, boolean pApagarDadosImportadosAnteriormente, Andamento pAndamento) throws FileNotFoundException, SQLException --> Line_17 $$ int quantidadeEstimadaDeRegistros = (int) ((tamanhoDosArquivos - (pArquivosTXT.length * TAMANHO_DOS_METADADOS_DO_ARQUIVO)) / TAMANHO_DO_REGISTRO) [CD]
Line_2 $$ public void importarHistoricoDeCotacoesDosPapeis(File[] pArquivosTXT, boolean pApagarDadosImportadosAnteriormente, Andamento pAndamento) throws FileNotFoundException, SQLException --> Line_18 $$ String sqlMercadoAVistaLotePadrao = "INSERT INTO TMP_TB_COTACAO_AVISTA_LOTE_PDR(DATA_PREGAO, CODBDI, CODNEG, TPMERC, NOMRES, ESPECI, PRAZOT, MODREF, PREABE, PREMAX, PREMIN, PREMED, PREULT, PREOFC, PREOFV, TOTNEG, QUATOT, VOLTOT, PREEXE, INDOPC, DATVEN, FATCOT, PTOEXE, CODISI, DISMES) VALUES(:DATA_PREGAO, :CODBDI, :CODNEG, :TPMERC, :NOMRES, :ESPECI, :PRAZOT, :MODREF, :PREABE, :PREMAX, :PREMIN, :PREMED, :PREULT, :PREOFC, :PREOFV, :TOTNEG, :QUATOT, :VOLTOT, :PREEXE, :INDOPC, :DATVEN, :FATCOT, :PTOEXE, :CODISI, :DISMES)" [CD]
Line_2 $$ public void importarHistoricoDeCotacoesDosPapeis(File[] pArquivosTXT, boolean pApagarDadosImportadosAnteriormente, Andamento pAndamento) throws FileNotFoundException, SQLException --> Line_19 $$ OraclePreparedStatement stmtDestinoMercadoAVistaLotePadrao = (OraclePreparedStatement) conDestino.prepareStatement(sqlMercadoAVistaLotePadrao) [CD]
Line_18 $$ String sqlMercadoAVistaLotePadrao = "INSERT INTO TMP_TB_COTACAO_AVISTA_LOTE_PDR(DATA_PREGAO, CODBDI, CODNEG, TPMERC, NOMRES, ESPECI, PRAZOT, MODREF, PREABE, PREMAX, PREMIN, PREMED, PREULT, PREOFC, PREOFV, TOTNEG, QUATOT, VOLTOT, PREEXE, INDOPC, DATVEN, FATCOT, PTOEXE, CODISI, DISMES) VALUES(:DATA_PREGAO, :CODBDI, :CODNEG, :TPMERC, :NOMRES, :ESPECI, :PRAZOT, :MODREF, :PREABE, :PREMAX, :PREMIN, :PREMED, :PREULT, :PREOFC, :PREOFV, :TOTNEG, :QUATOT, :VOLTOT, :PREEXE, :INDOPC, :DATVEN, :FATCOT, :PTOEXE, :CODISI, :DISMES)" --> Line_19 $$ OraclePreparedStatement stmtDestinoMercadoAVistaLotePadrao = (OraclePreparedStatement) conDestino.prepareStatement(sqlMercadoAVistaLotePadrao) [FD]
Line_2 $$ public void importarHistoricoDeCotacoesDosPapeis(File[] pArquivosTXT, boolean pApagarDadosImportadosAnteriormente, Andamento pAndamento) throws FileNotFoundException, SQLException --> Line_20 $$ stmtDestinoMercadoAVistaLotePadrao.setExecuteBatch(COMANDOS_POR_LOTE) [CD]
Line_19 $$ OraclePreparedStatement stmtDestinoMercadoAVistaLotePadrao = (OraclePreparedStatement) conDestino.prepareStatement(sqlMercadoAVistaLotePadrao) --> Line_20 $$ stmtDestinoMercadoAVistaLotePadrao.setExecuteBatch(COMANDOS_POR_LOTE) [FD]
Line_2 $$ public void importarHistoricoDeCotacoesDosPapeis(File[] pArquivosTXT, boolean pApagarDadosImportadosAnteriormente, Andamento pAndamento) throws FileNotFoundException, SQLException --> Line_21 $$ String sqlOutrosMercados = "INSERT INTO TMP_TB_COTACAO_OUTROS_MERCADOS(DATA_PREGAO, CODBDI, CODNEG, TPMERC, NOMRES, ESPECI, PRAZOT, MODREF, PREABE, PREMAX, PREMIN, PREMED, PREULT, PREOFC, PREOFV, TOTNEG, QUATOT, VOLTOT, PREEXE, INDOPC, DATVEN, FATCOT, PTOEXE, CODISI, DISMES) VALUES(:DATA_PREGAO, :CODBDI, :CODNEG, :TPMERC, :NOMRES, :ESPECI, :PRAZOT, :MODREF, :PREABE, :PREMAX, :PREMIN, :PREMED, :PREULT, :PREOFC, :PREOFV, :TOTNEG, :QUATOT, :VOLTOT, :PREEXE, :INDOPC, :DATVEN, :FATCOT, :PTOEXE, :CODISI, :DISMES)" [CD]
Line_2 $$ public void importarHistoricoDeCotacoesDosPapeis(File[] pArquivosTXT, boolean pApagarDadosImportadosAnteriormente, Andamento pAndamento) throws FileNotFoundException, SQLException --> Line_22 $$ OraclePreparedStatement stmtDestinoOutrosMercados = (OraclePreparedStatement) conDestino.prepareStatement(sqlOutrosMercados) [CD]
Line_21 $$ String sqlOutrosMercados = "INSERT INTO TMP_TB_COTACAO_OUTROS_MERCADOS(DATA_PREGAO, CODBDI, CODNEG, TPMERC, NOMRES, ESPECI, PRAZOT, MODREF, PREABE, PREMAX, PREMIN, PREMED, PREULT, PREOFC, PREOFV, TOTNEG, QUATOT, VOLTOT, PREEXE, INDOPC, DATVEN, FATCOT, PTOEXE, CODISI, DISMES) VALUES(:DATA_PREGAO, :CODBDI, :CODNEG, :TPMERC, :NOMRES, :ESPECI, :PRAZOT, :MODREF, :PREABE, :PREMAX, :PREMIN, :PREMED, :PREULT, :PREOFC, :PREOFV, :TOTNEG, :QUATOT, :VOLTOT, :PREEXE, :INDOPC, :DATVEN, :FATCOT, :PTOEXE, :CODISI, :DISMES)" --> Line_22 $$ OraclePreparedStatement stmtDestinoOutrosMercados = (OraclePreparedStatement) conDestino.prepareStatement(sqlOutrosMercados) [FD]
Line_2 $$ public void importarHistoricoDeCotacoesDosPapeis(File[] pArquivosTXT, boolean pApagarDadosImportadosAnteriormente, Andamento pAndamento) throws FileNotFoundException, SQLException --> Line_23 $$ stmtDestinoOutrosMercados.setExecuteBatch(COMANDOS_POR_LOTE) [CD]
Line_22 $$ OraclePreparedStatement stmtDestinoOutrosMercados = (OraclePreparedStatement) conDestino.prepareStatement(sqlOutrosMercados) --> Line_23 $$ stmtDestinoOutrosMercados.setExecuteBatch(COMANDOS_POR_LOTE) [FD]
Line_2 $$ public void importarHistoricoDeCotacoesDosPapeis(File[] pArquivosTXT, boolean pApagarDadosImportadosAnteriormente, Andamento pAndamento) throws FileNotFoundException, SQLException --> Line_24 $$ int quantidadeDeRegistrosImportadosDosArquivos = 0 [CD]
Line_2 $$ public void importarHistoricoDeCotacoesDosPapeis(File[] pArquivosTXT, boolean pApagarDadosImportadosAnteriormente, Andamento pAndamento) throws FileNotFoundException, SQLException --> Line_25 $$ Scanner in = null [CD]
Line_2 $$ public void importarHistoricoDeCotacoesDosPapeis(File[] pArquivosTXT, boolean pApagarDadosImportadosAnteriormente, Andamento pAndamento) throws FileNotFoundException, SQLException --> Line_26 $$ int numeroDoRegistro = -1 [CD]
Line_25 $$ Scanner in = null --> Line_32 $$ in = new Scanner(new FileInputStream(arquivoTXT), Constantes.CONJUNTO_DE_CARACTERES_DOS_ARQUIVOS_TEXTO_DA_BOVESPA.name()) [FD]
Line_26 $$ int numeroDoRegistro = -1 --> Line_34 $$ numeroDoRegistro = 0 [FD]
Line_25 $$ Scanner in = null --> Line_35 $$ while (in.hasNextLine()) [FD]
Line_32 $$ in = new Scanner(new FileInputStream(arquivoTXT), Constantes.CONJUNTO_DE_CARACTERES_DOS_ARQUIVOS_TEXTO_DA_BOVESPA.name()) --> Line_35 $$ while (in.hasNextLine()) [FD]
Line_35 $$ while (in.hasNextLine()) --> Line_36 $$ ++numeroDoRegistro [CD]
Line_26 $$ int numeroDoRegistro = -1 --> Line_36 $$ ++numeroDoRegistro [FD]
Line_34 $$ numeroDoRegistro = 0 --> Line_36 $$ ++numeroDoRegistro [FD]
Line_35 $$ while (in.hasNextLine()) --> Line_37 $$ registro = in.nextLine() [CD]
Line_33 $$ String registro --> Line_37 $$ registro = in.nextLine() [FD]
Line_25 $$ Scanner in = null --> Line_37 $$ registro = in.nextLine() [FD]
Line_32 $$ in = new Scanner(new FileInputStream(arquivoTXT), Constantes.CONJUNTO_DE_CARACTERES_DOS_ARQUIVOS_TEXTO_DA_BOVESPA.name()) --> Line_37 $$ registro = in.nextLine() [FD]
Line_35 $$ while (in.hasNextLine()) --> Line_38 $$ if (registro.length() != TAMANHO_DO_REGISTRO) [CD]
Line_10 $$ final int TAMANHO_DO_REGISTRO = 245 --> Line_38 $$ if (registro.length() != TAMANHO_DO_REGISTRO) [FD]
Line_37 $$ registro = in.nextLine() --> Line_38 $$ if (registro.length() != TAMANHO_DO_REGISTRO) [FD]
Line_33 $$ String registro --> Line_38 $$ if (registro.length() != TAMANHO_DO_REGISTRO) [FD]
Line_35 $$ while (in.hasNextLine()) --> Line_39 $$ if (registro.startsWith("01")) [CD]
Line_37 $$ registro = in.nextLine() --> Line_39 $$ if (registro.startsWith("01")) [FD]
Line_33 $$ String registro --> Line_39 $$ if (registro.startsWith("01")) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_40 $$ stmtDestinoMercadoAVistaLotePadrao.clearParameters() [CD]
Line_19 $$ OraclePreparedStatement stmtDestinoMercadoAVistaLotePadrao = (OraclePreparedStatement) conDestino.prepareStatement(sqlMercadoAVistaLotePadrao) --> Line_40 $$ stmtDestinoMercadoAVistaLotePadrao.clearParameters() [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_41 $$ stmtDestinoOutrosMercados.clearParameters() [CD]
Line_22 $$ OraclePreparedStatement stmtDestinoOutrosMercados = (OraclePreparedStatement) conDestino.prepareStatement(sqlOutrosMercados) --> Line_41 $$ stmtDestinoOutrosMercados.clearParameters() [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_42 $$ vDATA_PREGAO = Integer.parseInt(registro.substring(2, 10).trim()) [CD]
Line_30 $$ int vDATA_PREGAO --> Line_42 $$ vDATA_PREGAO = Integer.parseInt(registro.substring(2, 10).trim()) [FD]
Line_37 $$ registro = in.nextLine() --> Line_42 $$ vDATA_PREGAO = Integer.parseInt(registro.substring(2, 10).trim()) [FD]
Line_33 $$ String registro --> Line_42 $$ vDATA_PREGAO = Integer.parseInt(registro.substring(2, 10).trim()) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_43 $$ int vCODBDI = Integer.parseInt(registro.substring(10, 12).trim()) [CD]
Line_37 $$ registro = in.nextLine() --> Line_43 $$ int vCODBDI = Integer.parseInt(registro.substring(10, 12).trim()) [FD]
Line_33 $$ String registro --> Line_43 $$ int vCODBDI = Integer.parseInt(registro.substring(10, 12).trim()) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_44 $$ String vCODNEG = registro.substring(12, 24).trim() [CD]
Line_37 $$ registro = in.nextLine() --> Line_44 $$ String vCODNEG = registro.substring(12, 24).trim() [FD]
Line_33 $$ String registro --> Line_44 $$ String vCODNEG = registro.substring(12, 24).trim() [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_45 $$ int vTPMERC = Integer.parseInt(registro.substring(24, 27).trim()) [CD]
Line_37 $$ registro = in.nextLine() --> Line_45 $$ int vTPMERC = Integer.parseInt(registro.substring(24, 27).trim()) [FD]
Line_33 $$ String registro --> Line_45 $$ int vTPMERC = Integer.parseInt(registro.substring(24, 27).trim()) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_46 $$ String vNOMRES = registro.substring(27, 39).trim() [CD]
Line_37 $$ registro = in.nextLine() --> Line_46 $$ String vNOMRES = registro.substring(27, 39).trim() [FD]
Line_33 $$ String registro --> Line_46 $$ String vNOMRES = registro.substring(27, 39).trim() [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_47 $$ String vESPECI = registro.substring(39, 49).trim() [CD]
Line_37 $$ registro = in.nextLine() --> Line_47 $$ String vESPECI = registro.substring(39, 49).trim() [FD]
Line_33 $$ String registro --> Line_47 $$ String vESPECI = registro.substring(39, 49).trim() [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_48 $$ String vPRAZOT = registro.substring(49, 52).trim() [CD]
Line_37 $$ registro = in.nextLine() --> Line_48 $$ String vPRAZOT = registro.substring(49, 52).trim() [FD]
Line_33 $$ String registro --> Line_48 $$ String vPRAZOT = registro.substring(49, 52).trim() [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_49 $$ String vMODREF = registro.substring(52, 56).trim() [CD]
Line_37 $$ registro = in.nextLine() --> Line_49 $$ String vMODREF = registro.substring(52, 56).trim() [FD]
Line_33 $$ String registro --> Line_49 $$ String vMODREF = registro.substring(52, 56).trim() [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_50 $$ BigDecimal vPREABE = obterBigDecimal(registro.substring(56, 69).trim(), 13, 2) [CD]
Line_37 $$ registro = in.nextLine() --> Line_50 $$ BigDecimal vPREABE = obterBigDecimal(registro.substring(56, 69).trim(), 13, 2) [FD]
Line_33 $$ String registro --> Line_50 $$ BigDecimal vPREABE = obterBigDecimal(registro.substring(56, 69).trim(), 13, 2) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_51 $$ BigDecimal vPREMAX = obterBigDecimal(registro.substring(69, 82).trim(), 13, 2) [CD]
Line_37 $$ registro = in.nextLine() --> Line_51 $$ BigDecimal vPREMAX = obterBigDecimal(registro.substring(69, 82).trim(), 13, 2) [FD]
Line_33 $$ String registro --> Line_51 $$ BigDecimal vPREMAX = obterBigDecimal(registro.substring(69, 82).trim(), 13, 2) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_52 $$ BigDecimal vPREMIN = obterBigDecimal(registro.substring(82, 95).trim(), 13, 2) [CD]
Line_37 $$ registro = in.nextLine() --> Line_52 $$ BigDecimal vPREMIN = obterBigDecimal(registro.substring(82, 95).trim(), 13, 2) [FD]
Line_33 $$ String registro --> Line_52 $$ BigDecimal vPREMIN = obterBigDecimal(registro.substring(82, 95).trim(), 13, 2) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_53 $$ BigDecimal vPREMED = obterBigDecimal(registro.substring(95, 108).trim(), 13, 2) [CD]
Line_37 $$ registro = in.nextLine() --> Line_53 $$ BigDecimal vPREMED = obterBigDecimal(registro.substring(95, 108).trim(), 13, 2) [FD]
Line_33 $$ String registro --> Line_53 $$ BigDecimal vPREMED = obterBigDecimal(registro.substring(95, 108).trim(), 13, 2) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_54 $$ BigDecimal vPREULT = obterBigDecimal(registro.substring(108, 121).trim(), 13, 2) [CD]
Line_37 $$ registro = in.nextLine() --> Line_54 $$ BigDecimal vPREULT = obterBigDecimal(registro.substring(108, 121).trim(), 13, 2) [FD]
Line_33 $$ String registro --> Line_54 $$ BigDecimal vPREULT = obterBigDecimal(registro.substring(108, 121).trim(), 13, 2) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_55 $$ BigDecimal vPREOFC = obterBigDecimal(registro.substring(121, 134).trim(), 13, 2) [CD]
Line_37 $$ registro = in.nextLine() --> Line_55 $$ BigDecimal vPREOFC = obterBigDecimal(registro.substring(121, 134).trim(), 13, 2) [FD]
Line_33 $$ String registro --> Line_55 $$ BigDecimal vPREOFC = obterBigDecimal(registro.substring(121, 134).trim(), 13, 2) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_56 $$ BigDecimal vPREOFV = obterBigDecimal(registro.substring(134, 147).trim(), 13, 2) [CD]
Line_37 $$ registro = in.nextLine() --> Line_56 $$ BigDecimal vPREOFV = obterBigDecimal(registro.substring(134, 147).trim(), 13, 2) [FD]
Line_33 $$ String registro --> Line_56 $$ BigDecimal vPREOFV = obterBigDecimal(registro.substring(134, 147).trim(), 13, 2) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_57 $$ int vTOTNEG = Integer.parseInt(registro.substring(147, 152).trim()) [CD]
Line_37 $$ registro = in.nextLine() --> Line_57 $$ int vTOTNEG = Integer.parseInt(registro.substring(147, 152).trim()) [FD]
Line_33 $$ String registro --> Line_57 $$ int vTOTNEG = Integer.parseInt(registro.substring(147, 152).trim()) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_58 $$ BigDecimal vQUATOT = new BigDecimal(registro.substring(152, 170).trim()) [CD]
Line_37 $$ registro = in.nextLine() --> Line_58 $$ BigDecimal vQUATOT = new BigDecimal(registro.substring(152, 170).trim()) [FD]
Line_33 $$ String registro --> Line_58 $$ BigDecimal vQUATOT = new BigDecimal(registro.substring(152, 170).trim()) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_59 $$ BigDecimal vVOLTOT = obterBigDecimal(registro.substring(170, 188).trim(), 18, 2) [CD]
Line_37 $$ registro = in.nextLine() --> Line_59 $$ BigDecimal vVOLTOT = obterBigDecimal(registro.substring(170, 188).trim(), 18, 2) [FD]
Line_33 $$ String registro --> Line_59 $$ BigDecimal vVOLTOT = obterBigDecimal(registro.substring(170, 188).trim(), 18, 2) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_60 $$ BigDecimal vPREEXE = obterBigDecimal(registro.substring(188, 201).trim(), 13, 2) [CD]
Line_37 $$ registro = in.nextLine() --> Line_60 $$ BigDecimal vPREEXE = obterBigDecimal(registro.substring(188, 201).trim(), 13, 2) [FD]
Line_33 $$ String registro --> Line_60 $$ BigDecimal vPREEXE = obterBigDecimal(registro.substring(188, 201).trim(), 13, 2) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_61 $$ int vINDOPC = Integer.parseInt(registro.substring(201, 202).trim()) [CD]
Line_37 $$ registro = in.nextLine() --> Line_61 $$ int vINDOPC = Integer.parseInt(registro.substring(201, 202).trim()) [FD]
Line_33 $$ String registro --> Line_61 $$ int vINDOPC = Integer.parseInt(registro.substring(201, 202).trim()) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_62 $$ int vDATVEN = Integer.parseInt(registro.substring(202, 210).trim()) [CD]
Line_37 $$ registro = in.nextLine() --> Line_62 $$ int vDATVEN = Integer.parseInt(registro.substring(202, 210).trim()) [FD]
Line_33 $$ String registro --> Line_62 $$ int vDATVEN = Integer.parseInt(registro.substring(202, 210).trim()) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_63 $$ int vFATCOT = Integer.parseInt(registro.substring(210, 217).trim()) [CD]
Line_37 $$ registro = in.nextLine() --> Line_63 $$ int vFATCOT = Integer.parseInt(registro.substring(210, 217).trim()) [FD]
Line_33 $$ String registro --> Line_63 $$ int vFATCOT = Integer.parseInt(registro.substring(210, 217).trim()) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_64 $$ BigDecimal vPTOEXE = obterBigDecimal(registro.substring(217, 230).trim(), 13, 6) [CD]
Line_37 $$ registro = in.nextLine() --> Line_64 $$ BigDecimal vPTOEXE = obterBigDecimal(registro.substring(217, 230).trim(), 13, 6) [FD]
Line_33 $$ String registro --> Line_64 $$ BigDecimal vPTOEXE = obterBigDecimal(registro.substring(217, 230).trim(), 13, 6) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_65 $$ String vCODISI = registro.substring(230, 242).trim() [CD]
Line_37 $$ registro = in.nextLine() --> Line_65 $$ String vCODISI = registro.substring(230, 242).trim() [FD]
Line_33 $$ String registro --> Line_65 $$ String vCODISI = registro.substring(230, 242).trim() [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_66 $$ int vDISMES = Integer.parseInt(registro.substring(242, 245).trim()) [CD]
Line_37 $$ registro = in.nextLine() --> Line_66 $$ int vDISMES = Integer.parseInt(registro.substring(242, 245).trim()) [FD]
Line_33 $$ String registro --> Line_66 $$ int vDISMES = Integer.parseInt(registro.substring(242, 245).trim()) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_67 $$ boolean mercadoAVistaLotePadrao = (vTPMERC == 10 && vCODBDI == 2) [CD]
Line_39 $$ if (registro.startsWith("01")) --> Line_68 $$ OraclePreparedStatement stmtDestino [CD]
Line_39 $$ if (registro.startsWith("01")) --> Line_69 $$ if (mercadoAVistaLotePadrao) [CD]
Line_69 $$ if (mercadoAVistaLotePadrao) --> Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao [FD]
Line_19 $$ OraclePreparedStatement stmtDestinoMercadoAVistaLotePadrao = (OraclePreparedStatement) conDestino.prepareStatement(sqlMercadoAVistaLotePadrao) --> Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao [FD]
Line_69 $$ if (mercadoAVistaLotePadrao) --> Line_72 $$ stmtDestino = stmtDestinoOutrosMercados [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_72 $$ stmtDestino = stmtDestinoOutrosMercados [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_72 $$ stmtDestino = stmtDestinoOutrosMercados [FD]
Line_22 $$ OraclePreparedStatement stmtDestinoOutrosMercados = (OraclePreparedStatement) conDestino.prepareStatement(sqlOutrosMercados) --> Line_72 $$ stmtDestino = stmtDestinoOutrosMercados [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_74 $$ stmtDestino.setIntAtName("DATA_PREGAO", vDATA_PREGAO) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_74 $$ stmtDestino.setIntAtName("DATA_PREGAO", vDATA_PREGAO) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_74 $$ stmtDestino.setIntAtName("DATA_PREGAO", vDATA_PREGAO) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_74 $$ stmtDestino.setIntAtName("DATA_PREGAO", vDATA_PREGAO) [FD]
Line_42 $$ vDATA_PREGAO = Integer.parseInt(registro.substring(2, 10).trim()) --> Line_74 $$ stmtDestino.setIntAtName("DATA_PREGAO", vDATA_PREGAO) [FD]
Line_30 $$ int vDATA_PREGAO --> Line_74 $$ stmtDestino.setIntAtName("DATA_PREGAO", vDATA_PREGAO) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_75 $$ stmtDestino.setIntAtName("CODBDI", vCODBDI) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_75 $$ stmtDestino.setIntAtName("CODBDI", vCODBDI) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_75 $$ stmtDestino.setIntAtName("CODBDI", vCODBDI) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_75 $$ stmtDestino.setIntAtName("CODBDI", vCODBDI) [FD]
Line_43 $$ int vCODBDI = Integer.parseInt(registro.substring(10, 12).trim()) --> Line_75 $$ stmtDestino.setIntAtName("CODBDI", vCODBDI) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_76 $$ stmtDestino.setStringAtName("CODNEG", vCODNEG) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_76 $$ stmtDestino.setStringAtName("CODNEG", vCODNEG) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_76 $$ stmtDestino.setStringAtName("CODNEG", vCODNEG) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_76 $$ stmtDestino.setStringAtName("CODNEG", vCODNEG) [FD]
Line_44 $$ String vCODNEG = registro.substring(12, 24).trim() --> Line_76 $$ stmtDestino.setStringAtName("CODNEG", vCODNEG) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_77 $$ stmtDestino.setIntAtName("TPMERC", vTPMERC) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_77 $$ stmtDestino.setIntAtName("TPMERC", vTPMERC) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_77 $$ stmtDestino.setIntAtName("TPMERC", vTPMERC) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_77 $$ stmtDestino.setIntAtName("TPMERC", vTPMERC) [FD]
Line_45 $$ int vTPMERC = Integer.parseInt(registro.substring(24, 27).trim()) --> Line_77 $$ stmtDestino.setIntAtName("TPMERC", vTPMERC) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_78 $$ stmtDestino.setStringAtName("NOMRES", vNOMRES) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_78 $$ stmtDestino.setStringAtName("NOMRES", vNOMRES) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_78 $$ stmtDestino.setStringAtName("NOMRES", vNOMRES) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_78 $$ stmtDestino.setStringAtName("NOMRES", vNOMRES) [FD]
Line_46 $$ String vNOMRES = registro.substring(27, 39).trim() --> Line_78 $$ stmtDestino.setStringAtName("NOMRES", vNOMRES) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_79 $$ stmtDestino.setStringAtName("ESPECI", vESPECI) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_79 $$ stmtDestino.setStringAtName("ESPECI", vESPECI) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_79 $$ stmtDestino.setStringAtName("ESPECI", vESPECI) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_79 $$ stmtDestino.setStringAtName("ESPECI", vESPECI) [FD]
Line_47 $$ String vESPECI = registro.substring(39, 49).trim() --> Line_79 $$ stmtDestino.setStringAtName("ESPECI", vESPECI) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_80 $$ stmtDestino.setStringAtName("PRAZOT", vPRAZOT) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_80 $$ stmtDestino.setStringAtName("PRAZOT", vPRAZOT) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_80 $$ stmtDestino.setStringAtName("PRAZOT", vPRAZOT) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_80 $$ stmtDestino.setStringAtName("PRAZOT", vPRAZOT) [FD]
Line_48 $$ String vPRAZOT = registro.substring(49, 52).trim() --> Line_80 $$ stmtDestino.setStringAtName("PRAZOT", vPRAZOT) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_81 $$ stmtDestino.setStringAtName("MODREF", vMODREF) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_81 $$ stmtDestino.setStringAtName("MODREF", vMODREF) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_81 $$ stmtDestino.setStringAtName("MODREF", vMODREF) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_81 $$ stmtDestino.setStringAtName("MODREF", vMODREF) [FD]
Line_49 $$ String vMODREF = registro.substring(52, 56).trim() --> Line_81 $$ stmtDestino.setStringAtName("MODREF", vMODREF) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_82 $$ stmtDestino.setBigDecimalAtName("PREABE", vPREABE) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_82 $$ stmtDestino.setBigDecimalAtName("PREABE", vPREABE) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_82 $$ stmtDestino.setBigDecimalAtName("PREABE", vPREABE) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_82 $$ stmtDestino.setBigDecimalAtName("PREABE", vPREABE) [FD]
Line_50 $$ BigDecimal vPREABE = obterBigDecimal(registro.substring(56, 69).trim(), 13, 2) --> Line_82 $$ stmtDestino.setBigDecimalAtName("PREABE", vPREABE) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_83 $$ stmtDestino.setBigDecimalAtName("PREMAX", vPREMAX) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_83 $$ stmtDestino.setBigDecimalAtName("PREMAX", vPREMAX) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_83 $$ stmtDestino.setBigDecimalAtName("PREMAX", vPREMAX) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_83 $$ stmtDestino.setBigDecimalAtName("PREMAX", vPREMAX) [FD]
Line_51 $$ BigDecimal vPREMAX = obterBigDecimal(registro.substring(69, 82).trim(), 13, 2) --> Line_83 $$ stmtDestino.setBigDecimalAtName("PREMAX", vPREMAX) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_84 $$ stmtDestino.setBigDecimalAtName("PREMIN", vPREMIN) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_84 $$ stmtDestino.setBigDecimalAtName("PREMIN", vPREMIN) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_84 $$ stmtDestino.setBigDecimalAtName("PREMIN", vPREMIN) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_84 $$ stmtDestino.setBigDecimalAtName("PREMIN", vPREMIN) [FD]
Line_52 $$ BigDecimal vPREMIN = obterBigDecimal(registro.substring(82, 95).trim(), 13, 2) --> Line_84 $$ stmtDestino.setBigDecimalAtName("PREMIN", vPREMIN) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_85 $$ stmtDestino.setBigDecimalAtName("PREMED", vPREMED) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_85 $$ stmtDestino.setBigDecimalAtName("PREMED", vPREMED) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_85 $$ stmtDestino.setBigDecimalAtName("PREMED", vPREMED) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_85 $$ stmtDestino.setBigDecimalAtName("PREMED", vPREMED) [FD]
Line_53 $$ BigDecimal vPREMED = obterBigDecimal(registro.substring(95, 108).trim(), 13, 2) --> Line_85 $$ stmtDestino.setBigDecimalAtName("PREMED", vPREMED) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_86 $$ stmtDestino.setBigDecimalAtName("PREULT", vPREULT) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_86 $$ stmtDestino.setBigDecimalAtName("PREULT", vPREULT) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_86 $$ stmtDestino.setBigDecimalAtName("PREULT", vPREULT) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_86 $$ stmtDestino.setBigDecimalAtName("PREULT", vPREULT) [FD]
Line_54 $$ BigDecimal vPREULT = obterBigDecimal(registro.substring(108, 121).trim(), 13, 2) --> Line_86 $$ stmtDestino.setBigDecimalAtName("PREULT", vPREULT) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_87 $$ stmtDestino.setBigDecimalAtName("PREOFC", vPREOFC) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_87 $$ stmtDestino.setBigDecimalAtName("PREOFC", vPREOFC) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_87 $$ stmtDestino.setBigDecimalAtName("PREOFC", vPREOFC) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_87 $$ stmtDestino.setBigDecimalAtName("PREOFC", vPREOFC) [FD]
Line_55 $$ BigDecimal vPREOFC = obterBigDecimal(registro.substring(121, 134).trim(), 13, 2) --> Line_87 $$ stmtDestino.setBigDecimalAtName("PREOFC", vPREOFC) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_88 $$ stmtDestino.setBigDecimalAtName("PREOFV", vPREOFV) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_88 $$ stmtDestino.setBigDecimalAtName("PREOFV", vPREOFV) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_88 $$ stmtDestino.setBigDecimalAtName("PREOFV", vPREOFV) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_88 $$ stmtDestino.setBigDecimalAtName("PREOFV", vPREOFV) [FD]
Line_56 $$ BigDecimal vPREOFV = obterBigDecimal(registro.substring(134, 147).trim(), 13, 2) --> Line_88 $$ stmtDestino.setBigDecimalAtName("PREOFV", vPREOFV) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_89 $$ stmtDestino.setIntAtName("TOTNEG", vTOTNEG) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_89 $$ stmtDestino.setIntAtName("TOTNEG", vTOTNEG) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_89 $$ stmtDestino.setIntAtName("TOTNEG", vTOTNEG) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_89 $$ stmtDestino.setIntAtName("TOTNEG", vTOTNEG) [FD]
Line_57 $$ int vTOTNEG = Integer.parseInt(registro.substring(147, 152).trim()) --> Line_89 $$ stmtDestino.setIntAtName("TOTNEG", vTOTNEG) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_90 $$ stmtDestino.setBigDecimalAtName("QUATOT", vQUATOT) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_90 $$ stmtDestino.setBigDecimalAtName("QUATOT", vQUATOT) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_90 $$ stmtDestino.setBigDecimalAtName("QUATOT", vQUATOT) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_90 $$ stmtDestino.setBigDecimalAtName("QUATOT", vQUATOT) [FD]
Line_58 $$ BigDecimal vQUATOT = new BigDecimal(registro.substring(152, 170).trim()) --> Line_90 $$ stmtDestino.setBigDecimalAtName("QUATOT", vQUATOT) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_91 $$ stmtDestino.setBigDecimalAtName("VOLTOT", vVOLTOT) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_91 $$ stmtDestino.setBigDecimalAtName("VOLTOT", vVOLTOT) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_91 $$ stmtDestino.setBigDecimalAtName("VOLTOT", vVOLTOT) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_91 $$ stmtDestino.setBigDecimalAtName("VOLTOT", vVOLTOT) [FD]
Line_59 $$ BigDecimal vVOLTOT = obterBigDecimal(registro.substring(170, 188).trim(), 18, 2) --> Line_91 $$ stmtDestino.setBigDecimalAtName("VOLTOT", vVOLTOT) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_92 $$ stmtDestino.setBigDecimalAtName("PREEXE", vPREEXE) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_92 $$ stmtDestino.setBigDecimalAtName("PREEXE", vPREEXE) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_92 $$ stmtDestino.setBigDecimalAtName("PREEXE", vPREEXE) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_92 $$ stmtDestino.setBigDecimalAtName("PREEXE", vPREEXE) [FD]
Line_60 $$ BigDecimal vPREEXE = obterBigDecimal(registro.substring(188, 201).trim(), 13, 2) --> Line_92 $$ stmtDestino.setBigDecimalAtName("PREEXE", vPREEXE) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_93 $$ stmtDestino.setIntAtName("INDOPC", vINDOPC) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_93 $$ stmtDestino.setIntAtName("INDOPC", vINDOPC) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_93 $$ stmtDestino.setIntAtName("INDOPC", vINDOPC) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_93 $$ stmtDestino.setIntAtName("INDOPC", vINDOPC) [FD]
Line_61 $$ int vINDOPC = Integer.parseInt(registro.substring(201, 202).trim()) --> Line_93 $$ stmtDestino.setIntAtName("INDOPC", vINDOPC) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_94 $$ stmtDestino.setIntAtName("DATVEN", vDATVEN) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_94 $$ stmtDestino.setIntAtName("DATVEN", vDATVEN) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_94 $$ stmtDestino.setIntAtName("DATVEN", vDATVEN) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_94 $$ stmtDestino.setIntAtName("DATVEN", vDATVEN) [FD]
Line_62 $$ int vDATVEN = Integer.parseInt(registro.substring(202, 210).trim()) --> Line_94 $$ stmtDestino.setIntAtName("DATVEN", vDATVEN) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_95 $$ stmtDestino.setIntAtName("FATCOT", vFATCOT) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_95 $$ stmtDestino.setIntAtName("FATCOT", vFATCOT) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_95 $$ stmtDestino.setIntAtName("FATCOT", vFATCOT) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_95 $$ stmtDestino.setIntAtName("FATCOT", vFATCOT) [FD]
Line_63 $$ int vFATCOT = Integer.parseInt(registro.substring(210, 217).trim()) --> Line_95 $$ stmtDestino.setIntAtName("FATCOT", vFATCOT) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_96 $$ stmtDestino.setBigDecimalAtName("PTOEXE", vPTOEXE) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_96 $$ stmtDestino.setBigDecimalAtName("PTOEXE", vPTOEXE) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_96 $$ stmtDestino.setBigDecimalAtName("PTOEXE", vPTOEXE) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_96 $$ stmtDestino.setBigDecimalAtName("PTOEXE", vPTOEXE) [FD]
Line_64 $$ BigDecimal vPTOEXE = obterBigDecimal(registro.substring(217, 230).trim(), 13, 6) --> Line_96 $$ stmtDestino.setBigDecimalAtName("PTOEXE", vPTOEXE) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_97 $$ stmtDestino.setStringAtName("CODISI", vCODISI) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_97 $$ stmtDestino.setStringAtName("CODISI", vCODISI) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_97 $$ stmtDestino.setStringAtName("CODISI", vCODISI) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_97 $$ stmtDestino.setStringAtName("CODISI", vCODISI) [FD]
Line_65 $$ String vCODISI = registro.substring(230, 242).trim() --> Line_97 $$ stmtDestino.setStringAtName("CODISI", vCODISI) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_98 $$ stmtDestino.setIntAtName("DISMES", vDISMES) [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_98 $$ stmtDestino.setIntAtName("DISMES", vDISMES) [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_98 $$ stmtDestino.setIntAtName("DISMES", vDISMES) [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_98 $$ stmtDestino.setIntAtName("DISMES", vDISMES) [FD]
Line_66 $$ int vDISMES = Integer.parseInt(registro.substring(242, 245).trim()) --> Line_98 $$ stmtDestino.setIntAtName("DISMES", vDISMES) [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_99 $$ int contagemDasInsercoes = stmtDestino.executeUpdate() [CD]
Line_68 $$ OraclePreparedStatement stmtDestino --> Line_99 $$ int contagemDasInsercoes = stmtDestino.executeUpdate() [FD]
Line_70 $$ stmtDestino = stmtDestinoMercadoAVistaLotePadrao --> Line_99 $$ int contagemDasInsercoes = stmtDestino.executeUpdate() [FD]
Line_72 $$ stmtDestino = stmtDestinoOutrosMercados --> Line_99 $$ int contagemDasInsercoes = stmtDestino.executeUpdate() [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_100 $$ quantidadeDeRegistrosImportadosDoArquivoAtual++ [CD]
Line_29 $$ int quantidadeDeRegistrosImportadosDoArquivoAtual = 0 --> Line_100 $$ quantidadeDeRegistrosImportadosDoArquivoAtual++ [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_101 $$ quantidadeDeRegistrosImportadosDosArquivos++ [CD]
Line_24 $$ int quantidadeDeRegistrosImportadosDosArquivos = 0 --> Line_101 $$ quantidadeDeRegistrosImportadosDosArquivos++ [FD]
Line_39 $$ if (registro.startsWith("01")) --> Line_102 $$ if (registro.startsWith("99")) [CD]
Line_37 $$ registro = in.nextLine() --> Line_102 $$ if (registro.startsWith("99")) [FD]
Line_33 $$ String registro --> Line_102 $$ if (registro.startsWith("99")) [FD]
Line_102 $$ if (registro.startsWith("99")) --> Line_103 $$ BigDecimal totalDeRegistros = obterBigDecimal(registro.substring(31, 42).trim(), 11, 0) [CD]
Line_37 $$ registro = in.nextLine() --> Line_103 $$ BigDecimal totalDeRegistros = obterBigDecimal(registro.substring(31, 42).trim(), 11, 0) [FD]
Line_33 $$ String registro --> Line_103 $$ BigDecimal totalDeRegistros = obterBigDecimal(registro.substring(31, 42).trim(), 11, 0) [FD]
Line_103 $$ BigDecimal totalDeRegistros = obterBigDecimal(registro.substring(31, 42).trim(), 11, 0) --> Line_104 $$ assert (totalDeRegistros.intValue() - 2) == quantidadeDeRegistrosImportadosDoArquivoAtual : "Quantidade de registros divergente" [FD]
Line_35 $$ while (in.hasNextLine()) --> Line_107 $$ double percentualCompleto = (double) quantidadeDeRegistrosImportadosDosArquivos / quantidadeEstimadaDeRegistros * 100 [CD]
Line_35 $$ while (in.hasNextLine()) --> Line_108 $$ pAndamento.setPercentualCompleto((int) percentualCompleto) [CD]
Line_2 $$ public void importarHistoricoDeCotacoesDosPapeis(File[] pArquivosTXT, boolean pApagarDadosImportadosAnteriormente, Andamento pAndamento) throws FileNotFoundException, SQLException --> Line_108 $$ pAndamento.setPercentualCompleto((int) percentualCompleto) [FD]
Line_13 $$ for (File arquivoTXT : pArquivosTXT) --> Line_114 $$ problemaDetalhado.nomeDoArquivo = arquivoTXT.getName() [FD]
Line_26 $$ int numeroDoRegistro = -1 --> Line_115 $$ problemaDetalhado.linhaProblematicaDoArquivo = numeroDoRegistro [FD]
Line_34 $$ numeroDoRegistro = 0 --> Line_115 $$ problemaDetalhado.linhaProblematicaDoArquivo = numeroDoRegistro [FD]
Line_25 $$ Scanner in = null --> Line_119 $$ in.close() [FD]
Line_32 $$ in = new Scanner(new FileInputStream(arquivoTXT), Constantes.CONJUNTO_DE_CARACTERES_DOS_ARQUIVOS_TEXTO_DA_BOVESPA.name()) --> Line_119 $$ in.close() [FD]
Line_2 $$ public void importarHistoricoDeCotacoesDosPapeis(File[] pArquivosTXT, boolean pApagarDadosImportadosAnteriormente, Andamento pAndamento) throws FileNotFoundException, SQLException --> Line_123 $$ pAndamento.setPercentualCompleto(100) [FD]
Line_19 $$ OraclePreparedStatement stmtDestinoMercadoAVistaLotePadrao = (OraclePreparedStatement) conDestino.prepareStatement(sqlMercadoAVistaLotePadrao) --> Line_124 $$ stmtDestinoMercadoAVistaLotePadrao.close() [FD]
Line_22 $$ OraclePreparedStatement stmtDestinoOutrosMercados = (OraclePreparedStatement) conDestino.prepareStatement(sqlOutrosMercados) --> Line_125 $$ stmtDestinoOutrosMercados.close() [FD]
