Line_2 $$ public final boolean save() throws RecordException, RecordValidationException, RecordValidationSyntax --> Line_3 $$ if (frozen) [CD]
Line_2 $$ public final boolean save() throws RecordException, RecordValidationException, RecordValidationSyntax --> Line_6 $$ boolean toReturn = false [CD]
Line_2 $$ public final boolean save() throws RecordException, RecordValidationException, RecordValidationSyntax --> Line_7 $$ Class<? extends Record> actualClass = this.getClass() [CD]
Line_2 $$ public final boolean save() throws RecordException, RecordValidationException, RecordValidationSyntax --> Line_8 $$ HashMap<String, Integer> columns = getColumns(TableNameResolver.getTableName(actualClass)) [CD]
Line_7 $$ Class<? extends Record> actualClass = this.getClass() --> Line_8 $$ HashMap<String, Integer> columns = getColumns(TableNameResolver.getTableName(actualClass)) [FD]
Line_2 $$ public final boolean save() throws RecordException, RecordValidationException, RecordValidationSyntax --> Line_9 $$ Connection conn = ConnectionManager.getConnection() [CD]
Line_2 $$ public final boolean save() throws RecordException, RecordValidationException, RecordValidationSyntax --> Line_10 $$ LoggableStatement pStat = null [CD]
Line_12 $$ if (exists()) --> Line_13 $$ doValidations(true) [CD]
Line_12 $$ if (exists()) --> Line_14 $$ StatementBuilder builder = new StatementBuilder("update " + TableNameResolver.getTableName(actualClass) + " set") [CD]
Line_7 $$ Class<? extends Record> actualClass = this.getClass() --> Line_14 $$ StatementBuilder builder = new StatementBuilder("update " + TableNameResolver.getTableName(actualClass) + " set") [FD]
Line_12 $$ if (exists()) --> Line_15 $$ String updates = "" [CD]
Line_8 $$ HashMap<String, Integer> columns = getColumns(TableNameResolver.getTableName(actualClass)) --> Line_16 $$ for (String key : columns.keySet()) [FD]
Line_16 $$ for (String key : columns.keySet()) --> Line_17 $$ if (!key.equals("id")) [FD]
Line_17 $$ if (!key.equals("id")) --> Line_18 $$ Field f = null [CD]
Line_18 $$ Field f = null --> Line_20 $$ f = FieldHandler.findField(actualClass, key) [FD]
Line_7 $$ Class<? extends Record> actualClass = this.getClass() --> Line_20 $$ f = FieldHandler.findField(actualClass, key) [FD]
Line_16 $$ for (String key : columns.keySet()) --> Line_20 $$ f = FieldHandler.findField(actualClass, key) [FD]
Line_7 $$ Class<? extends Record> actualClass = this.getClass() --> Line_22 $$ throw new RecordException("Database column name >" + key + "< not found in class " + actualClass.getCanonicalName()) [FD]
Line_17 $$ if (!key.equals("id")) --> Line_24 $$ updates += key + " = :" + key + ", " [CD]
Line_15 $$ String updates = "" --> Line_24 $$ updates += key + " = :" + key + ", " [FD]
Line_17 $$ if (!key.equals("id")) --> Line_25 $$ builder.set(key, FieldHandler.getValue(f, this)) [CD]
Line_14 $$ StatementBuilder builder = new StatementBuilder("update " + TableNameResolver.getTableName(actualClass) + " set") --> Line_25 $$ builder.set(key, FieldHandler.getValue(f, this)) [FD]
Line_16 $$ for (String key : columns.keySet()) --> Line_25 $$ builder.set(key, FieldHandler.getValue(f, this)) [FD]
Line_18 $$ Field f = null --> Line_25 $$ builder.set(key, FieldHandler.getValue(f, this)) [FD]
Line_20 $$ f = FieldHandler.findField(actualClass, key) --> Line_25 $$ builder.set(key, FieldHandler.getValue(f, this)) [FD]
Line_12 $$ if (exists()) --> Line_28 $$ builder.append(updates.substring(0, updates.length() - 2)) [CD]
Line_14 $$ StatementBuilder builder = new StatementBuilder("update " + TableNameResolver.getTableName(actualClass) + " set") --> Line_28 $$ builder.append(updates.substring(0, updates.length() - 2)) [FD]
Line_15 $$ String updates = "" --> Line_28 $$ builder.append(updates.substring(0, updates.length() - 2)) [FD]
Line_24 $$ updates += key + " = :" + key + ", " --> Line_28 $$ builder.append(updates.substring(0, updates.length() - 2)) [FD]
Line_12 $$ if (exists()) --> Line_29 $$ builder.append("where id = :id") [CD]
Line_14 $$ StatementBuilder builder = new StatementBuilder("update " + TableNameResolver.getTableName(actualClass) + " set") --> Line_29 $$ builder.append("where id = :id") [FD]
Line_12 $$ if (exists()) --> Line_30 $$ builder.set(":id", FieldHandler.getValue(FieldHandler.findField(actualClass, "id"), this)) [CD]
Line_14 $$ StatementBuilder builder = new StatementBuilder("update " + TableNameResolver.getTableName(actualClass) + " set") --> Line_30 $$ builder.set(":id", FieldHandler.getValue(FieldHandler.findField(actualClass, "id"), this)) [FD]
Line_7 $$ Class<? extends Record> actualClass = this.getClass() --> Line_30 $$ builder.set(":id", FieldHandler.getValue(FieldHandler.findField(actualClass, "id"), this)) [FD]
Line_12 $$ if (exists()) --> Line_31 $$ pStat = builder.getPreparedStatement(conn) [CD]
Line_10 $$ LoggableStatement pStat = null --> Line_31 $$ pStat = builder.getPreparedStatement(conn) [FD]
Line_14 $$ StatementBuilder builder = new StatementBuilder("update " + TableNameResolver.getTableName(actualClass) + " set") --> Line_31 $$ pStat = builder.getPreparedStatement(conn) [FD]
Line_9 $$ Connection conn = ConnectionManager.getConnection() --> Line_31 $$ pStat = builder.getPreparedStatement(conn) [FD]
Line_12 $$ if (exists()) --> Line_32 $$ log.log(pStat.getQueryString()) [CD]
Line_10 $$ LoggableStatement pStat = null --> Line_32 $$ log.log(pStat.getQueryString()) [FD]
Line_31 $$ pStat = builder.getPreparedStatement(conn) --> Line_32 $$ log.log(pStat.getQueryString()) [FD]
Line_12 $$ if (exists()) --> Line_33 $$ int i = pStat.executeUpdate() [CD]
Line_10 $$ LoggableStatement pStat = null --> Line_33 $$ int i = pStat.executeUpdate() [FD]
Line_31 $$ pStat = builder.getPreparedStatement(conn) --> Line_33 $$ int i = pStat.executeUpdate() [FD]
Line_12 $$ if (exists()) --> Line_34 $$ toReturn = i == 1 [CD]
Line_6 $$ boolean toReturn = false --> Line_34 $$ toReturn = i == 1 [FD]
Line_33 $$ int i = pStat.executeUpdate() --> Line_34 $$ toReturn = i == 1 [FD]
Line_12 $$ if (exists()) --> Line_36 $$ doValidations(false) [CD]
Line_7 $$ Class<? extends Record> actualClass = this.getClass() --> Line_37 $$ StatementBuilder builder = new StatementBuilder("insert into " + TableNameResolver.getTableName(actualClass) + " ") [FD]
Line_12 $$ if (exists()) --> Line_38 $$ String names = "" [CD]
Line_12 $$ if (exists()) --> Line_39 $$ String values = "" [CD]
Line_8 $$ HashMap<String, Integer> columns = getColumns(TableNameResolver.getTableName(actualClass)) --> Line_40 $$ for (String key : columns.keySet()) [FD]
Line_18 $$ Field f = null --> Line_43 $$ f = FieldHandler.findField(actualClass, key) [FD]
Line_20 $$ f = FieldHandler.findField(actualClass, key) --> Line_43 $$ f = FieldHandler.findField(actualClass, key) [FD]
Line_7 $$ Class<? extends Record> actualClass = this.getClass() --> Line_43 $$ f = FieldHandler.findField(actualClass, key) [FD]
Line_16 $$ for (String key : columns.keySet()) --> Line_43 $$ f = FieldHandler.findField(actualClass, key) [FD]
Line_7 $$ Class<? extends Record> actualClass = this.getClass() --> Line_45 $$ throw new RecordException("Database column name >" + key + "< not found in class " + actualClass.getCanonicalName()) [FD]
Line_16 $$ for (String key : columns.keySet()) --> Line_47 $$ if (key.equals("id") && (Integer) FieldHandler.getValue(f, this) == 0) [FD]
Line_18 $$ Field f = null --> Line_47 $$ if (key.equals("id") && (Integer) FieldHandler.getValue(f, this) == 0) [FD]
Line_20 $$ f = FieldHandler.findField(actualClass, key) --> Line_47 $$ if (key.equals("id") && (Integer) FieldHandler.getValue(f, this) == 0) [FD]
Line_43 $$ f = FieldHandler.findField(actualClass, key) --> Line_47 $$ if (key.equals("id") && (Integer) FieldHandler.getValue(f, this) == 0) [FD]
Line_38 $$ String names = "" --> Line_50 $$ names += key + ", " [FD]
Line_16 $$ for (String key : columns.keySet()) --> Line_50 $$ names += key + ", " [FD]
Line_39 $$ String values = "" --> Line_51 $$ values += ":" + key + ", " [FD]
Line_14 $$ StatementBuilder builder = new StatementBuilder("update " + TableNameResolver.getTableName(actualClass) + " set") --> Line_52 $$ builder.set(key, f.get(this)) [FD]
Line_16 $$ for (String key : columns.keySet()) --> Line_52 $$ builder.set(key, f.get(this)) [FD]
Line_18 $$ Field f = null --> Line_52 $$ builder.set(key, f.get(this)) [FD]
Line_20 $$ f = FieldHandler.findField(actualClass, key) --> Line_52 $$ builder.set(key, f.get(this)) [FD]
Line_43 $$ f = FieldHandler.findField(actualClass, key) --> Line_52 $$ builder.set(key, f.get(this)) [FD]
Line_12 $$ if (exists()) --> Line_54 $$ names = names.substring(0, names.length() - 2) [CD]
Line_38 $$ String names = "" --> Line_54 $$ names = names.substring(0, names.length() - 2) [FD]
Line_50 $$ names += key + ", " --> Line_54 $$ names = names.substring(0, names.length() - 2) [FD]
Line_12 $$ if (exists()) --> Line_55 $$ values = values.substring(0, values.length() - 2) [CD]
Line_39 $$ String values = "" --> Line_55 $$ values = values.substring(0, values.length() - 2) [FD]
Line_51 $$ values += ":" + key + ", " --> Line_55 $$ values = values.substring(0, values.length() - 2) [FD]
Line_12 $$ if (exists()) --> Line_56 $$ builder.append("(" + names + ")") [CD]
Line_14 $$ StatementBuilder builder = new StatementBuilder("update " + TableNameResolver.getTableName(actualClass) + " set") --> Line_56 $$ builder.append("(" + names + ")") [FD]
Line_12 $$ if (exists()) --> Line_57 $$ builder.append("values") [CD]
Line_14 $$ StatementBuilder builder = new StatementBuilder("update " + TableNameResolver.getTableName(actualClass) + " set") --> Line_57 $$ builder.append("values") [FD]
Line_12 $$ if (exists()) --> Line_58 $$ builder.append("(" + values + ")") [CD]
Line_14 $$ StatementBuilder builder = new StatementBuilder("update " + TableNameResolver.getTableName(actualClass) + " set") --> Line_58 $$ builder.append("(" + values + ")") [FD]
Line_12 $$ if (exists()) --> Line_59 $$ pStat = builder.getPreparedStatement(conn) [CD]
Line_10 $$ LoggableStatement pStat = null --> Line_59 $$ pStat = builder.getPreparedStatement(conn) [FD]
Line_31 $$ pStat = builder.getPreparedStatement(conn) --> Line_59 $$ pStat = builder.getPreparedStatement(conn) [FD]
Line_14 $$ StatementBuilder builder = new StatementBuilder("update " + TableNameResolver.getTableName(actualClass) + " set") --> Line_59 $$ pStat = builder.getPreparedStatement(conn) [FD]
Line_9 $$ Connection conn = ConnectionManager.getConnection() --> Line_59 $$ pStat = builder.getPreparedStatement(conn) [FD]
Line_12 $$ if (exists()) --> Line_60 $$ log.log(pStat.getQueryString()) [CD]
Line_10 $$ LoggableStatement pStat = null --> Line_60 $$ log.log(pStat.getQueryString()) [FD]
Line_31 $$ pStat = builder.getPreparedStatement(conn) --> Line_60 $$ log.log(pStat.getQueryString()) [FD]
Line_59 $$ pStat = builder.getPreparedStatement(conn) --> Line_60 $$ log.log(pStat.getQueryString()) [FD]
Line_12 $$ if (exists()) --> Line_61 $$ int i = pStat.executeUpdate() [CD]
Line_10 $$ LoggableStatement pStat = null --> Line_61 $$ int i = pStat.executeUpdate() [FD]
Line_31 $$ pStat = builder.getPreparedStatement(conn) --> Line_61 $$ int i = pStat.executeUpdate() [FD]
Line_59 $$ pStat = builder.getPreparedStatement(conn) --> Line_61 $$ int i = pStat.executeUpdate() [FD]
Line_12 $$ if (exists()) --> Line_62 $$ toReturn = i == 1 [CD]
Line_6 $$ boolean toReturn = false --> Line_62 $$ toReturn = i == 1 [FD]
Line_34 $$ toReturn = i == 1 --> Line_62 $$ toReturn = i == 1 [FD]
Line_33 $$ int i = pStat.executeUpdate() --> Line_62 $$ toReturn = i == 1 [FD]
Line_64 $$ if (childList != null) --> Line_65 $$ if (childObjects == null) [CD]
Line_68 $$ for (Class<? extends Record> c : childList.keySet()) --> Line_69 $$ if (childObjects.get(c) != null) [FD]
Line_69 $$ if (childObjects.get(c) != null) --> Line_70 $$ childObjects.get(c).save() [CD]
Line_68 $$ for (Class<? extends Record> c : childList.keySet()) --> Line_70 $$ childObjects.get(c).save() [FD]
Line_74 $$ if (childrenList != null) --> Line_75 $$ if (childrenObjects == null) [CD]
Line_68 $$ for (Class<? extends Record> c : childList.keySet()) --> Line_79 $$ if (childrenObjects.get(c) != null) [FD]
Line_68 $$ for (Class<? extends Record> c : childList.keySet()) --> Line_80 $$ for (Record r : childrenObjects.get(c)) [FD]
Line_80 $$ for (Record r : childrenObjects.get(c)) --> Line_81 $$ r.save() [FD]
Line_86 $$ if (relatedList != null) --> Line_87 $$ if (childrenObjects == null) [CD]
Line_68 $$ for (Class<? extends Record> c : childList.keySet()) --> Line_91 $$ if (childrenObjects.get(c) != null) [FD]
Line_68 $$ for (Class<? extends Record> c : childList.keySet()) --> Line_92 $$ for (Record r : childrenObjects.get(c)) [FD]
Line_80 $$ for (Record r : childrenObjects.get(c)) --> Line_93 $$ r.save() [FD]
Line_9 $$ Connection conn = ConnectionManager.getConnection() --> Line_107 $$ conn.rollback() [FD]
Line_10 $$ LoggableStatement pStat = null --> Line_114 $$ if (pStat != null) [FD]
Line_31 $$ pStat = builder.getPreparedStatement(conn) --> Line_114 $$ if (pStat != null) [FD]
Line_59 $$ pStat = builder.getPreparedStatement(conn) --> Line_114 $$ if (pStat != null) [FD]
Line_114 $$ if (pStat != null) --> Line_115 $$ pStat.close() [CD]
Line_10 $$ LoggableStatement pStat = null --> Line_115 $$ pStat.close() [FD]
Line_31 $$ pStat = builder.getPreparedStatement(conn) --> Line_115 $$ pStat.close() [FD]
Line_59 $$ pStat = builder.getPreparedStatement(conn) --> Line_115 $$ pStat.close() [FD]
Line_9 $$ Connection conn = ConnectionManager.getConnection() --> Line_117 $$ conn.commit() [FD]
Line_9 $$ Connection conn = ConnectionManager.getConnection() --> Line_118 $$ conn.close() [FD]
