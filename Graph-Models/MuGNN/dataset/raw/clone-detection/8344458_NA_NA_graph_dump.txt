Line_2 $$ public static void extractZipPackage(String fileName, String destinationFolder) throws Exception --> Line_3 $$ if (NullStatus.isNull(destinationFolder)) [CD]
Line_2 $$ public static void extractZipPackage(String fileName, String destinationFolder) throws Exception --> Line_3 $$ if (NullStatus.isNull(destinationFolder)) [FD]
Line_3 $$ if (NullStatus.isNull(destinationFolder)) --> Line_4 $$ destinationFolder = "" [CD]
Line_2 $$ public static void extractZipPackage(String fileName, String destinationFolder) throws Exception --> Line_4 $$ destinationFolder = "" [FD]
Line_2 $$ public static void extractZipPackage(String fileName, String destinationFolder) throws Exception --> Line_6 $$ new File(destinationFolder).mkdirs() [CD]
Line_2 $$ public static void extractZipPackage(String fileName, String destinationFolder) throws Exception --> Line_7 $$ File inputFile = new File(fileName) [CD]
Line_2 $$ public static void extractZipPackage(String fileName, String destinationFolder) throws Exception --> Line_8 $$ ZipFile zipFile = new ZipFile(inputFile) [CD]
Line_2 $$ public static void extractZipPackage(String fileName, String destinationFolder) throws Exception --> Line_9 $$ Enumeration<? extends ZipEntry> oEnum = zipFile.entries() [CD]
Line_8 $$ ZipFile zipFile = new ZipFile(inputFile) --> Line_9 $$ Enumeration<? extends ZipEntry> oEnum = zipFile.entries() [FD]
Line_2 $$ public static void extractZipPackage(String fileName, String destinationFolder) throws Exception --> Line_10 $$ while (oEnum.hasMoreElements()) [CD]
Line_10 $$ while (oEnum.hasMoreElements()) --> Line_11 $$ ZipEntry zipEntry = oEnum.nextElement() [CD]
Line_10 $$ while (oEnum.hasMoreElements()) --> Line_12 $$ File file = new File(destinationFolder + "/" + zipEntry.getName()) [CD]
Line_10 $$ while (oEnum.hasMoreElements()) --> Line_13 $$ if (zipEntry.isDirectory()) [CD]
Line_19 $$ FileOutputStream fos = new FileOutputStream(file) --> Line_20 $$ IOUtils.copy(zipFile.getInputStream(zipEntry), fos) [FD]
Line_8 $$ ZipFile zipFile = new ZipFile(inputFile) --> Line_20 $$ IOUtils.copy(zipFile.getInputStream(zipEntry), fos) [FD]
Line_19 $$ FileOutputStream fos = new FileOutputStream(file) --> Line_21 $$ fos.close() [FD]
