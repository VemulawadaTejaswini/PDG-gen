Line_2 $$ public static synchronized BaseFont getL2BaseFont() --> Line_3 $$ if (l2baseFont == null) [CD]
Line_3 $$ if (l2baseFont == null) --> Line_4 $$ final ConfigProvider conf = ConfigProvider.getInstance() [CD]
Line_4 $$ final ConfigProvider conf = ConfigProvider.getInstance() --> Line_7 $$ String fontPath = conf.getNotEmptyProperty("font.path", null) [FD]
Line_7 $$ String fontPath = conf.getNotEmptyProperty("font.path", null) --> Line_11 $$ if (fontPath != null) [FD]
Line_11 $$ if (fontPath != null) --> Line_12 $$ fontName = conf.getNotEmptyProperty("font.name", null) [CD]
Line_8 $$ String fontName --> Line_12 $$ fontName = conf.getNotEmptyProperty("font.name", null) [FD]
Line_4 $$ final ConfigProvider conf = ConfigProvider.getInstance() --> Line_12 $$ fontName = conf.getNotEmptyProperty("font.name", null) [FD]
Line_11 $$ if (fontPath != null) --> Line_13 $$ if (fontName == null) [CD]
Line_8 $$ String fontName --> Line_13 $$ if (fontName == null) [FD]
Line_12 $$ fontName = conf.getNotEmptyProperty("font.name", null) --> Line_13 $$ if (fontName == null) [FD]
Line_13 $$ if (fontName == null) --> Line_14 $$ fontName = new File(fontPath).getName() [CD]
Line_8 $$ String fontName --> Line_14 $$ fontName = new File(fontPath).getName() [FD]
Line_12 $$ fontName = conf.getNotEmptyProperty("font.name", null) --> Line_14 $$ fontName = new File(fontPath).getName() [FD]
Line_11 $$ if (fontPath != null) --> Line_16 $$ fontEncoding = conf.getNotEmptyProperty("font.encoding", null) [CD]
Line_9 $$ String fontEncoding --> Line_16 $$ fontEncoding = conf.getNotEmptyProperty("font.encoding", null) [FD]
Line_4 $$ final ConfigProvider conf = ConfigProvider.getInstance() --> Line_16 $$ fontEncoding = conf.getNotEmptyProperty("font.encoding", null) [FD]
Line_11 $$ if (fontPath != null) --> Line_17 $$ if (fontEncoding == null) [CD]
Line_9 $$ String fontEncoding --> Line_17 $$ if (fontEncoding == null) [FD]
Line_16 $$ fontEncoding = conf.getNotEmptyProperty("font.encoding", null) --> Line_17 $$ if (fontEncoding == null) [FD]
Line_17 $$ if (fontEncoding == null) --> Line_18 $$ fontEncoding = BaseFont.WINANSI [CD]
Line_9 $$ String fontEncoding --> Line_18 $$ fontEncoding = BaseFont.WINANSI [FD]
Line_16 $$ fontEncoding = conf.getNotEmptyProperty("font.encoding", null) --> Line_18 $$ fontEncoding = BaseFont.WINANSI [FD]
Line_11 $$ if (fontPath != null) --> Line_20 $$ tmpIs = new FileInputStream(fontPath) [CD]
Line_10 $$ InputStream tmpIs --> Line_20 $$ tmpIs = new FileInputStream(fontPath) [FD]
Line_11 $$ if (fontPath != null) --> Line_22 $$ fontName = Constants.L2TEXT_FONT_NAME [CD]
Line_8 $$ String fontName --> Line_22 $$ fontName = Constants.L2TEXT_FONT_NAME [FD]
Line_12 $$ fontName = conf.getNotEmptyProperty("font.name", null) --> Line_22 $$ fontName = Constants.L2TEXT_FONT_NAME [FD]
Line_14 $$ fontName = new File(fontPath).getName() --> Line_22 $$ fontName = Constants.L2TEXT_FONT_NAME [FD]
Line_11 $$ if (fontPath != null) --> Line_23 $$ fontEncoding = BaseFont.IDENTITY_H [CD]
Line_9 $$ String fontEncoding --> Line_23 $$ fontEncoding = BaseFont.IDENTITY_H [FD]
Line_16 $$ fontEncoding = conf.getNotEmptyProperty("font.encoding", null) --> Line_23 $$ fontEncoding = BaseFont.IDENTITY_H [FD]
Line_18 $$ fontEncoding = BaseFont.WINANSI --> Line_23 $$ fontEncoding = BaseFont.IDENTITY_H [FD]
Line_11 $$ if (fontPath != null) --> Line_24 $$ tmpIs = FontUtils.class.getResourceAsStream(Constants.L2TEXT_FONT_PATH) [CD]
Line_10 $$ InputStream tmpIs --> Line_24 $$ tmpIs = FontUtils.class.getResourceAsStream(Constants.L2TEXT_FONT_PATH) [FD]
Line_20 $$ tmpIs = new FileInputStream(fontPath) --> Line_24 $$ tmpIs = FontUtils.class.getResourceAsStream(Constants.L2TEXT_FONT_PATH) [FD]
Line_10 $$ InputStream tmpIs --> Line_26 $$ IOUtils.copy(tmpIs, tmpBaos) [FD]
Line_20 $$ tmpIs = new FileInputStream(fontPath) --> Line_26 $$ IOUtils.copy(tmpIs, tmpBaos) [FD]
Line_6 $$ final ByteArrayOutputStream tmpBaos = new ByteArrayOutputStream() --> Line_26 $$ IOUtils.copy(tmpIs, tmpBaos) [FD]
Line_10 $$ InputStream tmpIs --> Line_27 $$ tmpIs.close() [FD]
Line_20 $$ tmpIs = new FileInputStream(fontPath) --> Line_27 $$ tmpIs.close() [FD]
Line_6 $$ final ByteArrayOutputStream tmpBaos = new ByteArrayOutputStream() --> Line_28 $$ tmpBaos.close() [FD]
Line_8 $$ String fontName --> Line_29 $$ l2baseFont = BaseFont.createFont(fontName, fontEncoding, BaseFont.EMBEDDED, BaseFont.CACHED, tmpBaos.toByteArray(), null) [FD]
Line_12 $$ fontName = conf.getNotEmptyProperty("font.name", null) --> Line_29 $$ l2baseFont = BaseFont.createFont(fontName, fontEncoding, BaseFont.EMBEDDED, BaseFont.CACHED, tmpBaos.toByteArray(), null) [FD]
Line_14 $$ fontName = new File(fontPath).getName() --> Line_29 $$ l2baseFont = BaseFont.createFont(fontName, fontEncoding, BaseFont.EMBEDDED, BaseFont.CACHED, tmpBaos.toByteArray(), null) [FD]
Line_22 $$ fontName = Constants.L2TEXT_FONT_NAME --> Line_29 $$ l2baseFont = BaseFont.createFont(fontName, fontEncoding, BaseFont.EMBEDDED, BaseFont.CACHED, tmpBaos.toByteArray(), null) [FD]
Line_9 $$ String fontEncoding --> Line_29 $$ l2baseFont = BaseFont.createFont(fontName, fontEncoding, BaseFont.EMBEDDED, BaseFont.CACHED, tmpBaos.toByteArray(), null) [FD]
Line_16 $$ fontEncoding = conf.getNotEmptyProperty("font.encoding", null) --> Line_29 $$ l2baseFont = BaseFont.createFont(fontName, fontEncoding, BaseFont.EMBEDDED, BaseFont.CACHED, tmpBaos.toByteArray(), null) [FD]
Line_18 $$ fontEncoding = BaseFont.WINANSI --> Line_29 $$ l2baseFont = BaseFont.createFont(fontName, fontEncoding, BaseFont.EMBEDDED, BaseFont.CACHED, tmpBaos.toByteArray(), null) [FD]
Line_23 $$ fontEncoding = BaseFont.IDENTITY_H --> Line_29 $$ l2baseFont = BaseFont.createFont(fontName, fontEncoding, BaseFont.EMBEDDED, BaseFont.CACHED, tmpBaos.toByteArray(), null) [FD]
Line_6 $$ final ByteArrayOutputStream tmpBaos = new ByteArrayOutputStream() --> Line_29 $$ l2baseFont = BaseFont.createFont(fontName, fontEncoding, BaseFont.EMBEDDED, BaseFont.CACHED, tmpBaos.toByteArray(), null) [FD]
Line_2 $$ public static synchronized BaseFont getL2BaseFont() --> Line_38 $$ return l2baseFont [CD]
