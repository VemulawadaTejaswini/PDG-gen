Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_3 $$ xformer = annoMan.getTransformer() [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_3 $$ xformer = annoMan.getTransformer() [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_4 $$ builder = annoMan.getBuilder() [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_4 $$ builder = annoMan.getBuilder() [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_5 $$ String annohash = "" [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_6 $$ if (document == null) [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_6 $$ if (document == null) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_7 $$ NodeList ndlist = document.getElementsByTagNameNS(annoNS, "body") [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_7 $$ NodeList ndlist = document.getElementsByTagNameNS(annoNS, "body") [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_8 $$ if (ndlist.getLength() != 1) [CD]
Line_7 $$ NodeList ndlist = document.getElementsByTagNameNS(annoNS, "body") --> Line_8 $$ if (ndlist.getLength() != 1) [FD]
Line_8 $$ if (ndlist.getLength() != 1) --> Line_9 $$ System.out.println("Sorry Annotation Body was found " + ndlist.getLength() + " times") [CD]
Line_7 $$ NodeList ndlist = document.getElementsByTagNameNS(annoNS, "body") --> Line_9 $$ System.out.println("Sorry Annotation Body was found " + ndlist.getLength() + " times") [FD]
Line_8 $$ if (ndlist.getLength() != 1) --> Line_10 $$ return [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_12 $$ Element bodynode = (Element) ndlist.item(0) [CD]
Line_7 $$ NodeList ndlist = document.getElementsByTagNameNS(annoNS, "body") --> Line_12 $$ Element bodynode = (Element) ndlist.item(0) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_13 $$ Node htmlNode = bodynode.getElementsByTagName("html").item(0) [CD]
Line_12 $$ Element bodynode = (Element) ndlist.item(0) --> Line_13 $$ Node htmlNode = bodynode.getElementsByTagName("html").item(0) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_14 $$ htmlNode = bodynode.getElementsByTagName("HTML").item(0) [CD]
Line_13 $$ Node htmlNode = bodynode.getElementsByTagName("html").item(0) --> Line_14 $$ htmlNode = bodynode.getElementsByTagName("HTML").item(0) [FD]
Line_12 $$ Element bodynode = (Element) ndlist.item(0) --> Line_14 $$ htmlNode = bodynode.getElementsByTagName("HTML").item(0) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_15 $$ Document newdoc = builder.newDocument() [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_16 $$ Element rootelem = newdoc.createElementNS(rdfNS, "r:RDF") [CD]
Line_15 $$ Document newdoc = builder.newDocument() --> Line_16 $$ Element rootelem = newdoc.createElementNS(rdfNS, "r:RDF") [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_17 $$ rootelem.setAttribute("xmlns:r", rdfNS) [CD]
Line_16 $$ Element rootelem = newdoc.createElementNS(rdfNS, "r:RDF") --> Line_17 $$ rootelem.setAttribute("xmlns:r", rdfNS) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_18 $$ rootelem.setAttribute("xmlns:a", annoNS) [CD]
Line_16 $$ Element rootelem = newdoc.createElementNS(rdfNS, "r:RDF") --> Line_18 $$ rootelem.setAttribute("xmlns:a", annoNS) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_19 $$ rootelem.setAttribute("xmlns:d", dubNS) [CD]
Line_16 $$ Element rootelem = newdoc.createElementNS(rdfNS, "r:RDF") --> Line_19 $$ rootelem.setAttribute("xmlns:d", dubNS) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_20 $$ rootelem.setAttribute("xmlns:t", threadNS) [CD]
Line_16 $$ Element rootelem = newdoc.createElementNS(rdfNS, "r:RDF") --> Line_20 $$ rootelem.setAttribute("xmlns:t", threadNS) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_21 $$ newdoc.appendChild(rootelem) [CD]
Line_15 $$ Document newdoc = builder.newDocument() --> Line_21 $$ newdoc.appendChild(rootelem) [FD]
Line_16 $$ Element rootelem = newdoc.createElementNS(rdfNS, "r:RDF") --> Line_21 $$ newdoc.appendChild(rootelem) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_22 $$ Element tmpelem [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_23 $$ NodeList tmpndlist [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_24 $$ Element annoElem = newdoc.createElementNS(annoNS, "a:Annotation") [CD]
Line_15 $$ Document newdoc = builder.newDocument() --> Line_24 $$ Element annoElem = newdoc.createElementNS(annoNS, "a:Annotation") [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_25 $$ rootelem.appendChild(annoElem) [CD]
Line_16 $$ Element rootelem = newdoc.createElementNS(rdfNS, "r:RDF") --> Line_25 $$ rootelem.appendChild(annoElem) [FD]
Line_24 $$ Element annoElem = newdoc.createElementNS(annoNS, "a:Annotation") --> Line_25 $$ rootelem.appendChild(annoElem) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_26 $$ tmpelem = (Element) document.getElementsByTagNameNS(annoNS, "context").item(0) [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_26 $$ tmpelem = (Element) document.getElementsByTagNameNS(annoNS, "context").item(0) [FD]
Line_22 $$ Element tmpelem --> Line_26 $$ tmpelem = (Element) document.getElementsByTagNameNS(annoNS, "context").item(0) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_27 $$ String context = tmpelem.getChildNodes().item(0).getNodeValue() [CD]
Line_22 $$ Element tmpelem --> Line_27 $$ String context = tmpelem.getChildNodes().item(0).getNodeValue() [FD]
Line_26 $$ tmpelem = (Element) document.getElementsByTagNameNS(annoNS, "context").item(0) --> Line_27 $$ String context = tmpelem.getChildNodes().item(0).getNodeValue() [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_28 $$ annoElem.setAttributeNS(annoNS, "a:context", context) [CD]
Line_24 $$ Element annoElem = newdoc.createElementNS(annoNS, "a:Annotation") --> Line_28 $$ annoElem.setAttributeNS(annoNS, "a:context", context) [FD]
Line_27 $$ String context = tmpelem.getChildNodes().item(0).getNodeValue() --> Line_28 $$ annoElem.setAttributeNS(annoNS, "a:context", context) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_29 $$ NodeList elemcontl = tmpelem.getElementsByTagNameNS(alNS, "context-element") [CD]
Line_22 $$ Element tmpelem --> Line_29 $$ NodeList elemcontl = tmpelem.getElementsByTagNameNS(alNS, "context-element") [FD]
Line_26 $$ tmpelem = (Element) document.getElementsByTagNameNS(annoNS, "context").item(0) --> Line_29 $$ NodeList elemcontl = tmpelem.getElementsByTagNameNS(alNS, "context-element") [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_30 $$ Node ncontext_element = null [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_31 $$ if (elemcontl.getLength() > 0) [CD]
Line_29 $$ NodeList elemcontl = tmpelem.getElementsByTagNameNS(alNS, "context-element") --> Line_31 $$ if (elemcontl.getLength() > 0) [FD]
Line_31 $$ if (elemcontl.getLength() > 0) --> Line_32 $$ Node old_context_element = elemcontl.item(0) [CD]
Line_29 $$ NodeList elemcontl = tmpelem.getElementsByTagNameNS(alNS, "context-element") --> Line_32 $$ Node old_context_element = elemcontl.item(0) [FD]
Line_31 $$ if (elemcontl.getLength() > 0) --> Line_33 $$ ncontext_element = newdoc.importNode(old_context_element, true) [CD]
Line_30 $$ Node ncontext_element = null --> Line_33 $$ ncontext_element = newdoc.importNode(old_context_element, true) [FD]
Line_15 $$ Document newdoc = builder.newDocument() --> Line_33 $$ ncontext_element = newdoc.importNode(old_context_element, true) [FD]
Line_32 $$ Node old_context_element = elemcontl.item(0) --> Line_33 $$ ncontext_element = newdoc.importNode(old_context_element, true) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_35 $$ tmpndlist = document.getElementsByTagNameNS(dubNS, "title") [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_35 $$ tmpndlist = document.getElementsByTagNameNS(dubNS, "title") [FD]
Line_23 $$ NodeList tmpndlist --> Line_35 $$ tmpndlist = document.getElementsByTagNameNS(dubNS, "title") [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_36 $$ annoElem.setAttributeNS(dubNS, "d:title", tmpndlist.getLength() > 0 ? tmpndlist.item(0).getChildNodes().item(0).getNodeValue() : "Default") [CD]
Line_24 $$ Element annoElem = newdoc.createElementNS(annoNS, "a:Annotation") --> Line_36 $$ annoElem.setAttributeNS(dubNS, "d:title", tmpndlist.getLength() > 0 ? tmpndlist.item(0).getChildNodes().item(0).getNodeValue() : "Default") [FD]
Line_23 $$ NodeList tmpndlist --> Line_36 $$ annoElem.setAttributeNS(dubNS, "d:title", tmpndlist.getLength() > 0 ? tmpndlist.item(0).getChildNodes().item(0).getNodeValue() : "Default") [FD]
Line_35 $$ tmpndlist = document.getElementsByTagNameNS(dubNS, "title") --> Line_36 $$ annoElem.setAttributeNS(dubNS, "d:title", tmpndlist.getLength() > 0 ? tmpndlist.item(0).getChildNodes().item(0).getNodeValue() : "Default") [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_37 $$ tmpelem = (Element) document.getElementsByTagNameNS(dubNS, "creator").item(0) [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_37 $$ tmpelem = (Element) document.getElementsByTagNameNS(dubNS, "creator").item(0) [FD]
Line_22 $$ Element tmpelem --> Line_37 $$ tmpelem = (Element) document.getElementsByTagNameNS(dubNS, "creator").item(0) [FD]
Line_26 $$ tmpelem = (Element) document.getElementsByTagNameNS(annoNS, "context").item(0) --> Line_37 $$ tmpelem = (Element) document.getElementsByTagNameNS(dubNS, "creator").item(0) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_38 $$ annoElem.setAttributeNS(dubNS, "d:creator", tmpelem.getChildNodes().item(0).getNodeValue()) [CD]
Line_24 $$ Element annoElem = newdoc.createElementNS(annoNS, "a:Annotation") --> Line_38 $$ annoElem.setAttributeNS(dubNS, "d:creator", tmpelem.getChildNodes().item(0).getNodeValue()) [FD]
Line_22 $$ Element tmpelem --> Line_38 $$ annoElem.setAttributeNS(dubNS, "d:creator", tmpelem.getChildNodes().item(0).getNodeValue()) [FD]
Line_26 $$ tmpelem = (Element) document.getElementsByTagNameNS(annoNS, "context").item(0) --> Line_38 $$ annoElem.setAttributeNS(dubNS, "d:creator", tmpelem.getChildNodes().item(0).getNodeValue()) [FD]
Line_37 $$ tmpelem = (Element) document.getElementsByTagNameNS(dubNS, "creator").item(0) --> Line_38 $$ annoElem.setAttributeNS(dubNS, "d:creator", tmpelem.getChildNodes().item(0).getNodeValue()) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_39 $$ tmpelem = (Element) document.getElementsByTagNameNS(annoNS, "created").item(0) [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_39 $$ tmpelem = (Element) document.getElementsByTagNameNS(annoNS, "created").item(0) [FD]
Line_22 $$ Element tmpelem --> Line_39 $$ tmpelem = (Element) document.getElementsByTagNameNS(annoNS, "created").item(0) [FD]
Line_26 $$ tmpelem = (Element) document.getElementsByTagNameNS(annoNS, "context").item(0) --> Line_39 $$ tmpelem = (Element) document.getElementsByTagNameNS(annoNS, "created").item(0) [FD]
Line_37 $$ tmpelem = (Element) document.getElementsByTagNameNS(dubNS, "creator").item(0) --> Line_39 $$ tmpelem = (Element) document.getElementsByTagNameNS(annoNS, "created").item(0) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_40 $$ annoElem.setAttributeNS(annoNS, "a:created", tmpelem.getChildNodes().item(0).getNodeValue()) [CD]
Line_24 $$ Element annoElem = newdoc.createElementNS(annoNS, "a:Annotation") --> Line_40 $$ annoElem.setAttributeNS(annoNS, "a:created", tmpelem.getChildNodes().item(0).getNodeValue()) [FD]
Line_22 $$ Element tmpelem --> Line_40 $$ annoElem.setAttributeNS(annoNS, "a:created", tmpelem.getChildNodes().item(0).getNodeValue()) [FD]
Line_26 $$ tmpelem = (Element) document.getElementsByTagNameNS(annoNS, "context").item(0) --> Line_40 $$ annoElem.setAttributeNS(annoNS, "a:created", tmpelem.getChildNodes().item(0).getNodeValue()) [FD]
Line_37 $$ tmpelem = (Element) document.getElementsByTagNameNS(dubNS, "creator").item(0) --> Line_40 $$ annoElem.setAttributeNS(annoNS, "a:created", tmpelem.getChildNodes().item(0).getNodeValue()) [FD]
Line_39 $$ tmpelem = (Element) document.getElementsByTagNameNS(annoNS, "created").item(0) --> Line_40 $$ annoElem.setAttributeNS(annoNS, "a:created", tmpelem.getChildNodes().item(0).getNodeValue()) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_41 $$ tmpelem = (Element) document.getElementsByTagNameNS(dubNS, "date").item(0) [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_41 $$ tmpelem = (Element) document.getElementsByTagNameNS(dubNS, "date").item(0) [FD]
Line_22 $$ Element tmpelem --> Line_41 $$ tmpelem = (Element) document.getElementsByTagNameNS(dubNS, "date").item(0) [FD]
Line_26 $$ tmpelem = (Element) document.getElementsByTagNameNS(annoNS, "context").item(0) --> Line_41 $$ tmpelem = (Element) document.getElementsByTagNameNS(dubNS, "date").item(0) [FD]
Line_37 $$ tmpelem = (Element) document.getElementsByTagNameNS(dubNS, "creator").item(0) --> Line_41 $$ tmpelem = (Element) document.getElementsByTagNameNS(dubNS, "date").item(0) [FD]
Line_39 $$ tmpelem = (Element) document.getElementsByTagNameNS(annoNS, "created").item(0) --> Line_41 $$ tmpelem = (Element) document.getElementsByTagNameNS(dubNS, "date").item(0) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_42 $$ annoElem.setAttributeNS(dubNS, "d:date", tmpelem.getChildNodes().item(0).getNodeValue()) [CD]
Line_24 $$ Element annoElem = newdoc.createElementNS(annoNS, "a:Annotation") --> Line_42 $$ annoElem.setAttributeNS(dubNS, "d:date", tmpelem.getChildNodes().item(0).getNodeValue()) [FD]
Line_22 $$ Element tmpelem --> Line_42 $$ annoElem.setAttributeNS(dubNS, "d:date", tmpelem.getChildNodes().item(0).getNodeValue()) [FD]
Line_26 $$ tmpelem = (Element) document.getElementsByTagNameNS(annoNS, "context").item(0) --> Line_42 $$ annoElem.setAttributeNS(dubNS, "d:date", tmpelem.getChildNodes().item(0).getNodeValue()) [FD]
Line_37 $$ tmpelem = (Element) document.getElementsByTagNameNS(dubNS, "creator").item(0) --> Line_42 $$ annoElem.setAttributeNS(dubNS, "d:date", tmpelem.getChildNodes().item(0).getNodeValue()) [FD]
Line_39 $$ tmpelem = (Element) document.getElementsByTagNameNS(annoNS, "created").item(0) --> Line_42 $$ annoElem.setAttributeNS(dubNS, "d:date", tmpelem.getChildNodes().item(0).getNodeValue()) [FD]
Line_41 $$ tmpelem = (Element) document.getElementsByTagNameNS(dubNS, "date").item(0) --> Line_42 $$ annoElem.setAttributeNS(dubNS, "d:date", tmpelem.getChildNodes().item(0).getNodeValue()) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_43 $$ tmpndlist = document.getElementsByTagNameNS(dubNS, "language") [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_43 $$ tmpndlist = document.getElementsByTagNameNS(dubNS, "language") [FD]
Line_23 $$ NodeList tmpndlist --> Line_43 $$ tmpndlist = document.getElementsByTagNameNS(dubNS, "language") [FD]
Line_35 $$ tmpndlist = document.getElementsByTagNameNS(dubNS, "title") --> Line_43 $$ tmpndlist = document.getElementsByTagNameNS(dubNS, "language") [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_44 $$ String language = (tmpndlist.getLength() > 0 ? tmpndlist.item(0).getChildNodes().item(0).getNodeValue() : "en") [CD]
Line_23 $$ NodeList tmpndlist --> Line_44 $$ String language = (tmpndlist.getLength() > 0 ? tmpndlist.item(0).getChildNodes().item(0).getNodeValue() : "en") [FD]
Line_35 $$ tmpndlist = document.getElementsByTagNameNS(dubNS, "title") --> Line_44 $$ String language = (tmpndlist.getLength() > 0 ? tmpndlist.item(0).getChildNodes().item(0).getNodeValue() : "en") [FD]
Line_43 $$ tmpndlist = document.getElementsByTagNameNS(dubNS, "language") --> Line_44 $$ String language = (tmpndlist.getLength() > 0 ? tmpndlist.item(0).getChildNodes().item(0).getNodeValue() : "en") [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_45 $$ annoElem.setAttributeNS(dubNS, "d:language", language) [CD]
Line_24 $$ Element annoElem = newdoc.createElementNS(annoNS, "a:Annotation") --> Line_45 $$ annoElem.setAttributeNS(dubNS, "d:language", language) [FD]
Line_44 $$ String language = (tmpndlist.getLength() > 0 ? tmpndlist.item(0).getChildNodes().item(0).getNodeValue() : "en") --> Line_45 $$ annoElem.setAttributeNS(dubNS, "d:language", language) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_46 $$ Node typen = newdoc.importNode(document.getElementsByTagNameNS(rdfNS, "type").item(0), true) [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_46 $$ Node typen = newdoc.importNode(document.getElementsByTagNameNS(rdfNS, "type").item(0), true) [FD]
Line_15 $$ Document newdoc = builder.newDocument() --> Line_46 $$ Node typen = newdoc.importNode(document.getElementsByTagNameNS(rdfNS, "type").item(0), true) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_47 $$ annoElem.appendChild(typen) [CD]
Line_24 $$ Element annoElem = newdoc.createElementNS(annoNS, "a:Annotation") --> Line_47 $$ annoElem.appendChild(typen) [FD]
Line_46 $$ Node typen = newdoc.importNode(document.getElementsByTagNameNS(rdfNS, "type").item(0), true) --> Line_47 $$ annoElem.appendChild(typen) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_48 $$ Element contextn = newdoc.createElementNS(annoNS, "a:context") [CD]
Line_15 $$ Document newdoc = builder.newDocument() --> Line_48 $$ Element contextn = newdoc.createElementNS(annoNS, "a:context") [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_49 $$ contextn.setAttributeNS(rdfNS, "r:resource", context) [CD]
Line_48 $$ Element contextn = newdoc.createElementNS(annoNS, "a:context") --> Line_49 $$ contextn.setAttributeNS(rdfNS, "r:resource", context) [FD]
Line_27 $$ String context = tmpelem.getChildNodes().item(0).getNodeValue() --> Line_49 $$ contextn.setAttributeNS(rdfNS, "r:resource", context) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_50 $$ annoElem.appendChild(contextn) [CD]
Line_24 $$ Element annoElem = newdoc.createElementNS(annoNS, "a:Annotation") --> Line_50 $$ annoElem.appendChild(contextn) [FD]
Line_48 $$ Element contextn = newdoc.createElementNS(annoNS, "a:context") --> Line_50 $$ annoElem.appendChild(contextn) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_51 $$ Node annotatesn = newdoc.importNode(document.getElementsByTagNameNS(annoNS, "annotates").item(0), true) [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_51 $$ Node annotatesn = newdoc.importNode(document.getElementsByTagNameNS(annoNS, "annotates").item(0), true) [FD]
Line_15 $$ Document newdoc = builder.newDocument() --> Line_51 $$ Node annotatesn = newdoc.importNode(document.getElementsByTagNameNS(annoNS, "annotates").item(0), true) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_52 $$ annoElem.appendChild(annotatesn) [CD]
Line_24 $$ Element annoElem = newdoc.createElementNS(annoNS, "a:Annotation") --> Line_52 $$ annoElem.appendChild(annotatesn) [FD]
Line_51 $$ Node annotatesn = newdoc.importNode(document.getElementsByTagNameNS(annoNS, "annotates").item(0), true) --> Line_52 $$ annoElem.appendChild(annotatesn) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_53 $$ Element newbodynode = newdoc.createElementNS(annoNS, "a:body") [CD]
Line_15 $$ Document newdoc = builder.newDocument() --> Line_53 $$ Element newbodynode = newdoc.createElementNS(annoNS, "a:body") [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_54 $$ annoElem.appendChild(newbodynode) [CD]
Line_24 $$ Element annoElem = newdoc.createElementNS(annoNS, "a:Annotation") --> Line_54 $$ annoElem.appendChild(newbodynode) [FD]
Line_53 $$ Element newbodynode = newdoc.createElementNS(annoNS, "a:body") --> Line_54 $$ annoElem.appendChild(newbodynode) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_55 $$ if (ncontext_element != null) [CD]
Line_30 $$ Node ncontext_element = null --> Line_55 $$ if (ncontext_element != null) [FD]
Line_33 $$ ncontext_element = newdoc.importNode(old_context_element, true) --> Line_55 $$ if (ncontext_element != null) [FD]
Line_55 $$ if (ncontext_element != null) --> Line_56 $$ contextn.appendChild(ncontext_element) [CD]
Line_48 $$ Element contextn = newdoc.createElementNS(annoNS, "a:context") --> Line_56 $$ contextn.appendChild(ncontext_element) [FD]
Line_30 $$ Node ncontext_element = null --> Line_56 $$ contextn.appendChild(ncontext_element) [FD]
Line_33 $$ ncontext_element = newdoc.importNode(old_context_element, true) --> Line_56 $$ contextn.appendChild(ncontext_element) [FD]
Line_55 $$ if (ncontext_element != null) --> Line_58 $$ System.out.println("No context element found, we create one...") [CD]
Line_60 $$ XPointer xptr = new XPointer(htmldoc) --> Line_61 $$ NodeRange xprange = xptr.getRange(context, htmldoc) [FD]
Line_27 $$ String context = tmpelem.getChildNodes().item(0).getNodeValue() --> Line_61 $$ NodeRange xprange = xptr.getRange(context, htmldoc) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_61 $$ NodeRange xprange = xptr.getRange(context, htmldoc) [FD]
Line_15 $$ Document newdoc = builder.newDocument() --> Line_62 $$ Element context_elem = newdoc.createElementNS(alNS, "al:context-element") [FD]
Line_62 $$ Element context_elem = newdoc.createElementNS(alNS, "al:context-element") --> Line_63 $$ context_elem.setAttributeNS(alNS, "al:text", xprange.getContentString()) [FD]
Line_61 $$ NodeRange xprange = xptr.getRange(context, htmldoc) --> Line_63 $$ context_elem.setAttributeNS(alNS, "al:text", xprange.getContentString()) [FD]
Line_62 $$ Element context_elem = newdoc.createElementNS(alNS, "al:context-element") --> Line_64 $$ context_elem.appendChild(newdoc.createTextNode(annoMan.generateContextString(xprange))) [FD]
Line_15 $$ Document newdoc = builder.newDocument() --> Line_64 $$ context_elem.appendChild(newdoc.createTextNode(annoMan.generateContextString(xprange))) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_64 $$ context_elem.appendChild(newdoc.createTextNode(annoMan.generateContextString(xprange))) [FD]
Line_61 $$ NodeRange xprange = xptr.getRange(context, htmldoc) --> Line_64 $$ context_elem.appendChild(newdoc.createTextNode(annoMan.generateContextString(xprange))) [FD]
Line_48 $$ Element contextn = newdoc.createElementNS(annoNS, "a:context") --> Line_65 $$ contextn.appendChild(context_elem) [FD]
Line_62 $$ Element context_elem = newdoc.createElementNS(alNS, "al:context-element") --> Line_65 $$ contextn.appendChild(context_elem) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_70 $$ WordFreq wf = new WordFreq(annoMan.extractTextFromNode(htmldoc)) [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_70 $$ WordFreq wf = new WordFreq(annoMan.extractTextFromNode(htmldoc)) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_71 $$ Element docident = newdoc.createElementNS(alNS, "al:document-identifier") [CD]
Line_15 $$ Document newdoc = builder.newDocument() --> Line_71 $$ Element docident = newdoc.createElementNS(alNS, "al:document-identifier") [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_72 $$ annotatesn.appendChild(docident) [CD]
Line_51 $$ Node annotatesn = newdoc.importNode(document.getElementsByTagNameNS(annoNS, "annotates").item(0), true) --> Line_72 $$ annotatesn.appendChild(docident) [FD]
Line_71 $$ Element docident = newdoc.createElementNS(alNS, "al:document-identifier") --> Line_72 $$ annotatesn.appendChild(docident) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_73 $$ docident.setAttributeNS(alNS, "al:orig-url", ((Element) annotatesn).getAttributeNS(rdfNS, "resource")) [CD]
Line_71 $$ Element docident = newdoc.createElementNS(alNS, "al:document-identifier") --> Line_73 $$ docident.setAttributeNS(alNS, "al:orig-url", ((Element) annotatesn).getAttributeNS(rdfNS, "resource")) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_74 $$ docident.setAttributeNS(alNS, "al:version", "1") [CD]
Line_71 $$ Element docident = newdoc.createElementNS(alNS, "al:document-identifier") --> Line_74 $$ docident.setAttributeNS(alNS, "al:version", "1") [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_75 $$ Iterator it = null [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_76 $$ it = wf.getSortedWordlist() [CD]
Line_75 $$ Iterator it = null --> Line_76 $$ it = wf.getSortedWordlist() [FD]
Line_70 $$ WordFreq wf = new WordFreq(annoMan.extractTextFromNode(htmldoc)) --> Line_76 $$ it = wf.getSortedWordlist() [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_77 $$ Map.Entry ent [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_78 $$ String word [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_79 $$ int count [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_80 $$ int i = 0 [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_81 $$ while (it.hasNext()) [CD]
Line_75 $$ Iterator it = null --> Line_81 $$ while (it.hasNext()) [FD]
Line_76 $$ it = wf.getSortedWordlist() --> Line_81 $$ while (it.hasNext()) [FD]
Line_81 $$ while (it.hasNext()) --> Line_82 $$ ent = (Map.Entry) it.next() [CD]
Line_75 $$ Iterator it = null --> Line_82 $$ ent = (Map.Entry) it.next() [FD]
Line_76 $$ it = wf.getSortedWordlist() --> Line_82 $$ ent = (Map.Entry) it.next() [FD]
Line_81 $$ while (it.hasNext()) --> Line_83 $$ word = ((String) ent.getKey()) [CD]
Line_78 $$ String word --> Line_83 $$ word = ((String) ent.getKey()) [FD]
Line_81 $$ while (it.hasNext()) --> Line_84 $$ count = ((Counter) ent.getValue()).count [CD]
Line_79 $$ int count --> Line_84 $$ count = ((Counter) ent.getValue()).count [FD]
Line_81 $$ while (it.hasNext()) --> Line_85 $$ if ((word.length() > 4) && (i < 10)) [CD]
Line_83 $$ word = ((String) ent.getKey()) --> Line_85 $$ if ((word.length() > 4) && (i < 10)) [FD]
Line_78 $$ String word --> Line_85 $$ if ((word.length() > 4) && (i < 10)) [FD]
Line_85 $$ if ((word.length() > 4) && (i < 10)) --> Line_86 $$ Element wordelem = newdoc.createElementNS(alNS, "al:word") [CD]
Line_15 $$ Document newdoc = builder.newDocument() --> Line_86 $$ Element wordelem = newdoc.createElementNS(alNS, "al:word") [FD]
Line_85 $$ if ((word.length() > 4) && (i < 10)) --> Line_87 $$ wordelem.setAttributeNS(alNS, "al:freq", Integer.toString(count)) [CD]
Line_86 $$ Element wordelem = newdoc.createElementNS(alNS, "al:word") --> Line_87 $$ wordelem.setAttributeNS(alNS, "al:freq", Integer.toString(count)) [FD]
Line_84 $$ count = ((Counter) ent.getValue()).count --> Line_87 $$ wordelem.setAttributeNS(alNS, "al:freq", Integer.toString(count)) [FD]
Line_79 $$ int count --> Line_87 $$ wordelem.setAttributeNS(alNS, "al:freq", Integer.toString(count)) [FD]
Line_85 $$ if ((word.length() > 4) && (i < 10)) --> Line_88 $$ wordelem.appendChild(newdoc.createTextNode(word)) [CD]
Line_86 $$ Element wordelem = newdoc.createElementNS(alNS, "al:word") --> Line_88 $$ wordelem.appendChild(newdoc.createTextNode(word)) [FD]
Line_15 $$ Document newdoc = builder.newDocument() --> Line_88 $$ wordelem.appendChild(newdoc.createTextNode(word)) [FD]
Line_83 $$ word = ((String) ent.getKey()) --> Line_88 $$ wordelem.appendChild(newdoc.createTextNode(word)) [FD]
Line_78 $$ String word --> Line_88 $$ wordelem.appendChild(newdoc.createTextNode(word)) [FD]
Line_85 $$ if ((word.length() > 4) && (i < 10)) --> Line_89 $$ docident.appendChild(wordelem) [CD]
Line_71 $$ Element docident = newdoc.createElementNS(alNS, "al:document-identifier") --> Line_89 $$ docident.appendChild(wordelem) [FD]
Line_86 $$ Element wordelem = newdoc.createElementNS(alNS, "al:word") --> Line_89 $$ docident.appendChild(wordelem) [FD]
Line_85 $$ if ((word.length() > 4) && (i < 10)) --> Line_90 $$ i++ [CD]
Line_80 $$ int i = 0 --> Line_90 $$ i++ [FD]
Line_95 $$ MessageDigest messagedigest = MessageDigest.getInstance("MD5") --> Line_97 $$ messagedigest.update(strw.toString().getBytes()) [FD]
Line_94 $$ StringWriter strw = new StringWriter() --> Line_97 $$ messagedigest.update(strw.toString().getBytes()) [FD]
Line_95 $$ MessageDigest messagedigest = MessageDigest.getInstance("MD5") --> Line_98 $$ byte[] md5bytes = messagedigest.digest() [FD]
Line_5 $$ String annohash = "" --> Line_99 $$ annohash = "" [FD]
Line_100 $$ for (int b = 0; b < md5bytes.length; b++) --> Line_101 $$ String s = Integer.toHexString(md5bytes[b] & 0xFF) [CD]
Line_100 $$ for (int b = 0; b < md5bytes.length; b++) --> Line_102 $$ annohash = annohash + ((s.length() == 1) ? "0" + s : s) [CD]
Line_5 $$ String annohash = "" --> Line_102 $$ annohash = annohash + ((s.length() == 1) ? "0" + s : s) [FD]
Line_99 $$ annohash = "" --> Line_102 $$ annohash = annohash + ((s.length() == 1) ? "0" + s : s) [FD]
Line_101 $$ String s = Integer.toHexString(md5bytes[b] & 0xFF) --> Line_102 $$ annohash = annohash + ((s.length() == 1) ? "0" + s : s) [FD]
Line_102 $$ annohash = annohash + ((s.length() == 1) ? "0" + s : s) --> Line_104 $$ this.annohash = annohash [FD]
Line_5 $$ String annohash = "" --> Line_104 $$ this.annohash = annohash [FD]
Line_99 $$ annohash = "" --> Line_104 $$ this.annohash = annohash [FD]
Line_24 $$ Element annoElem = newdoc.createElementNS(annoNS, "a:Annotation") --> Line_105 $$ annoElem.setAttribute("xmlns:al", alNS) [FD]
Line_24 $$ Element annoElem = newdoc.createElementNS(annoNS, "a:Annotation") --> Line_106 $$ annoElem.setAttributeNS(alNS, "al:id", getAnnohash()) [FD]
Line_24 $$ Element annoElem = newdoc.createElementNS(annoNS, "a:Annotation") --> Line_108 $$ annoElem.setAttributeNS(rdfNS, "r:about", Location) [FD]
Line_53 $$ Element newbodynode = newdoc.createElementNS(annoNS, "a:body") --> Line_109 $$ newbodynode.setAttributeNS(rdfNS, "r:resource", baseurl + "/annotation/body/" + getAnnohash()) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_115 $$ annoMan.store(newdoc.getDocumentElement()) [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_115 $$ annoMan.store(newdoc.getDocumentElement()) [FD]
Line_15 $$ Document newdoc = builder.newDocument() --> Line_115 $$ annoMan.store(newdoc.getDocumentElement()) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_116 $$ annoMan.createAnnoResource(newdoc.getDocumentElement(), getAnnohash()) [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_116 $$ annoMan.createAnnoResource(newdoc.getDocumentElement(), getAnnohash()) [FD]
Line_15 $$ Document newdoc = builder.newDocument() --> Line_116 $$ annoMan.createAnnoResource(newdoc.getDocumentElement(), getAnnohash()) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_117 $$ annoMan.createAnnoBody(htmlNode, getAnnohash()) [CD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_117 $$ annoMan.createAnnoBody(htmlNode, getAnnohash()) [FD]
Line_13 $$ Node htmlNode = bodynode.getElementsByTagName("html").item(0) --> Line_117 $$ annoMan.createAnnoBody(htmlNode, getAnnohash()) [FD]
Line_14 $$ htmlNode = bodynode.getElementsByTagName("HTML").item(0) --> Line_117 $$ annoMan.createAnnoBody(htmlNode, getAnnohash()) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_119 $$ annoElem.setAttributeNS(rdfNS, "r:about", Location) [CD]
Line_24 $$ Element annoElem = newdoc.createElementNS(annoNS, "a:Annotation") --> Line_119 $$ annoElem.setAttributeNS(rdfNS, "r:about", Location) [FD]
Line_2 $$ private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) --> Line_120 $$ this.responseDoc = newdoc [CD]
Line_15 $$ Document newdoc = builder.newDocument() --> Line_120 $$ this.responseDoc = newdoc [FD]
