Line_2 $$ public InputStream getStream(String uri) throws IOException --> Line_3 $$ debug.print("uri=" + uri) [CD]
Line_2 $$ public InputStream getStream(String uri) throws IOException --> Line_4 $$ boolean isStreamFile = false [CD]
Line_2 $$ public InputStream getStream(String uri) throws IOException --> Line_5 $$ for (int i = 0; i < GLOBAL.extList.length; i++) [CD]
Line_5 $$ for (int i = 0; i < GLOBAL.extList.length; i++) --> Line_6 $$ if (uri.toLowerCase().endsWith(GLOBAL.extList[i].toLowerCase())) [CD]
Line_2 $$ public InputStream getStream(String uri) throws IOException --> Line_6 $$ if (uri.toLowerCase().endsWith(GLOBAL.extList[i].toLowerCase())) [FD]
Line_6 $$ if (uri.toLowerCase().endsWith(GLOBAL.extList[i].toLowerCase())) --> Line_7 $$ isStreamFile = true [CD]
Line_4 $$ boolean isStreamFile = false --> Line_7 $$ isStreamFile = true [FD]
Line_2 $$ public InputStream getStream(String uri) throws IOException --> Line_10 $$ if (isStreamFile) [CD]
Line_10 $$ if (isStreamFile) --> Line_11 $$ GLOBAL.streamFile = DIR + File.separator + uri [CD]
Line_2 $$ public InputStream getStream(String uri) throws IOException --> Line_11 $$ GLOBAL.streamFile = DIR + File.separator + uri [FD]
Line_10 $$ if (isStreamFile) --> Line_12 $$ File file = new File(GLOBAL.streamFile) [CD]
Line_10 $$ if (isStreamFile) --> Line_13 $$ URL url = file.toURI().toURL() [CD]
Line_12 $$ File file = new File(GLOBAL.streamFile) --> Line_13 $$ URL url = file.toURI().toURL() [FD]
Line_10 $$ if (isStreamFile) --> Line_14 $$ System.out.println("url=" + url) [CD]
Line_10 $$ if (isStreamFile) --> Line_15 $$ GLOBAL.cstream = new CountInputStream(url.openStream()) [CD]
Line_13 $$ URL url = file.toURI().toURL() --> Line_15 $$ GLOBAL.cstream = new CountInputStream(url.openStream()) [FD]
Line_10 $$ if (isStreamFile) --> Line_16 $$ if (GLOBAL.Resume && GLOBAL.positions.containsKey(GLOBAL.streamFile)) [CD]
Line_16 $$ if (GLOBAL.Resume && GLOBAL.positions.containsKey(GLOBAL.streamFile)) --> Line_17 $$ GLOBAL.Resume = false [CD]
Line_16 $$ if (GLOBAL.Resume && GLOBAL.positions.containsKey(GLOBAL.streamFile)) --> Line_18 $$ if (uri.toLowerCase().endsWith(".mpg") || uri.toLowerCase().endsWith(".vob") || uri.toLowerCase().endsWith(".mp2") || uri.toLowerCase().endsWith(".mpeg") || uri.toLowerCase().endsWith(".mpeg2")) [CD]
Line_2 $$ public InputStream getStream(String uri) throws IOException --> Line_18 $$ if (uri.toLowerCase().endsWith(".mpg") || uri.toLowerCase().endsWith(".vob") || uri.toLowerCase().endsWith(".mp2") || uri.toLowerCase().endsWith(".mpeg") || uri.toLowerCase().endsWith(".mpeg2")) [FD]
Line_18 $$ if (uri.toLowerCase().endsWith(".mpg") || uri.toLowerCase().endsWith(".vob") || uri.toLowerCase().endsWith(".mp2") || uri.toLowerCase().endsWith(".mpeg") || uri.toLowerCase().endsWith(".mpeg2")) --> Line_19 $$ System.out.println("--Skipping to last bookmark=" + GLOBAL.positions.get(GLOBAL.streamFile)) [CD]
Line_18 $$ if (uri.toLowerCase().endsWith(".mpg") || uri.toLowerCase().endsWith(".vob") || uri.toLowerCase().endsWith(".mp2") || uri.toLowerCase().endsWith(".mpeg") || uri.toLowerCase().endsWith(".mpeg2")) --> Line_20 $$ GLOBAL.cstream.skip(GLOBAL.positions.get(GLOBAL.streamFile)) [CD]
Line_10 $$ if (isStreamFile) --> Line_23 $$ return GLOBAL.cstream [CD]
Line_2 $$ public InputStream getStream(String uri) throws IOException --> Line_25 $$ return super.getStream(uri) [CD]
Line_2 $$ public InputStream getStream(String uri) throws IOException --> Line_25 $$ return super.getStream(uri) [FD]
