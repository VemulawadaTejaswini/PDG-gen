Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_3 $$ String mode = "".equals(getParam("applicant_id_gen").trim()) ? "update" : "insert" [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_4 $$ String applicant_id = getParam("applicant_id") [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_5 $$ String password = getParam("password") [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_6 $$ applicant_id = getParam("applicant_id_gen") [CD]
Line_4 $$ String applicant_id = getParam("applicant_id") --> Line_6 $$ applicant_id = getParam("applicant_id_gen") [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_7 $$ if ("".equals(getParam("applicant_name"))) [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_8 $$ applicantInfo.put("id", applicant_id) [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_8 $$ applicantInfo.put("id", applicant_id) [FD]
Line_4 $$ String applicant_id = getParam("applicant_id") --> Line_8 $$ applicantInfo.put("id", applicant_id) [FD]
Line_6 $$ applicant_id = getParam("applicant_id_gen") --> Line_8 $$ applicantInfo.put("id", applicant_id) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_9 $$ applicantInfo.put("password", password) [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_9 $$ applicantInfo.put("password", password) [FD]
Line_5 $$ String password = getParam("password") --> Line_9 $$ applicantInfo.put("password", password) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_10 $$ applicantInfo.put("name", getParam("applicant_name")) [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_10 $$ applicantInfo.put("name", getParam("applicant_name")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_11 $$ applicantInfo.put("address1", getParam("address1")) [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_11 $$ applicantInfo.put("address1", getParam("address1")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_12 $$ applicantInfo.put("address2", getParam("address2")) [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_12 $$ applicantInfo.put("address2", getParam("address2")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_13 $$ applicantInfo.put("address3", getParam("address3")) [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_13 $$ applicantInfo.put("address3", getParam("address3")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_14 $$ applicantInfo.put("city", getParam("city")) [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_14 $$ applicantInfo.put("city", getParam("city")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_15 $$ applicantInfo.put("state", getParam("state")) [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_15 $$ applicantInfo.put("state", getParam("state")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_16 $$ applicantInfo.put("poscode", getParam("poscode")) [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_16 $$ applicantInfo.put("poscode", getParam("poscode")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_17 $$ applicantInfo.put("country_code", getParam("country_list")) [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_17 $$ applicantInfo.put("country_code", getParam("country_list")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_18 $$ applicantInfo.put("email", getParam("email")) [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_18 $$ applicantInfo.put("email", getParam("email")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_19 $$ applicantInfo.put("phone", getParam("phone")) [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_19 $$ applicantInfo.put("phone", getParam("phone")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_20 $$ String birth_year = getParam("birth_year") [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_21 $$ String birth_month = getParam("birth_month") [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_22 $$ String birth_day = getParam("birth_day") [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_23 $$ applicantInfo.put("birth_year", birth_year) [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_23 $$ applicantInfo.put("birth_year", birth_year) [FD]
Line_20 $$ String birth_year = getParam("birth_year") --> Line_23 $$ applicantInfo.put("birth_year", birth_year) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_24 $$ applicantInfo.put("birth_month", birth_month) [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_24 $$ applicantInfo.put("birth_month", birth_month) [FD]
Line_21 $$ String birth_month = getParam("birth_month") --> Line_24 $$ applicantInfo.put("birth_month", birth_month) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_25 $$ applicantInfo.put("birth_day", birth_day) [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_25 $$ applicantInfo.put("birth_day", birth_day) [FD]
Line_22 $$ String birth_day = getParam("birth_day") --> Line_25 $$ applicantInfo.put("birth_day", birth_day) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_26 $$ applicantInfo.put("gender", getParam("gender")) [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_26 $$ applicantInfo.put("gender", getParam("gender")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_27 $$ String birth_date = birth_year + "-" + fmt(birth_month) + "-" + fmt(birth_day) [CD]
Line_21 $$ String birth_month = getParam("birth_month") --> Line_27 $$ String birth_date = birth_year + "-" + fmt(birth_month) + "-" + fmt(birth_day) [FD]
Line_22 $$ String birth_day = getParam("birth_day") --> Line_27 $$ String birth_date = birth_year + "-" + fmt(birth_month) + "-" + fmt(birth_day) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_28 $$ applicantInfo.put("birth_date", birth_date) [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_28 $$ applicantInfo.put("birth_date", birth_date) [FD]
Line_27 $$ String birth_date = birth_year + "-" + fmt(birth_month) + "-" + fmt(birth_day) --> Line_28 $$ applicantInfo.put("birth_date", birth_date) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_29 $$ Db db = null [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_30 $$ String sql = "" [CD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_31 $$ Connection conn = null [CD]
Line_29 $$ Db db = null --> Line_33 $$ db = new Db() [FD]
Line_31 $$ Connection conn = null --> Line_34 $$ conn = db.getConnection() [FD]
Line_29 $$ Db db = null --> Line_34 $$ conn = db.getConnection() [FD]
Line_33 $$ db = new Db() --> Line_34 $$ conn = db.getConnection() [FD]
Line_31 $$ Connection conn = null --> Line_35 $$ conn.setAutoCommit(false) [FD]
Line_34 $$ conn = db.getConnection() --> Line_35 $$ conn.setAutoCommit(false) [FD]
Line_29 $$ Db db = null --> Line_36 $$ Statement stmt = db.getStatement() [FD]
Line_33 $$ db = new Db() --> Line_36 $$ Statement stmt = db.getStatement() [FD]
Line_37 $$ SQLRenderer r = new SQLRenderer() --> Line_40 $$ r.add("applicant_id") [FD]
Line_37 $$ SQLRenderer r = new SQLRenderer() --> Line_41 $$ r.add("applicant_id", (String) applicantInfo.get("id")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_41 $$ r.add("applicant_id", (String) applicantInfo.get("id")) [FD]
Line_30 $$ String sql = "" --> Line_42 $$ sql = r.getSQLSelect("adm_applicant") [FD]
Line_37 $$ SQLRenderer r = new SQLRenderer() --> Line_42 $$ sql = r.getSQLSelect("adm_applicant") [FD]
Line_36 $$ Statement stmt = db.getStatement() --> Line_43 $$ ResultSet rs = stmt.executeQuery(sql) [FD]
Line_30 $$ String sql = "" --> Line_43 $$ ResultSet rs = stmt.executeQuery(sql) [FD]
Line_42 $$ sql = r.getSQLSelect("adm_applicant") --> Line_43 $$ ResultSet rs = stmt.executeQuery(sql) [FD]
Line_43 $$ ResultSet rs = stmt.executeQuery(sql) --> Line_44 $$ if (rs.next()) [FD]
Line_38 $$ boolean found = false --> Line_44 $$ if (rs.next()) [FD]
Line_38 $$ boolean found = false --> Line_46 $$ if (found && !"update".equals(mode)) [FD]
Line_44 $$ if (rs.next()) --> Line_46 $$ if (found && !"update".equals(mode)) [FD]
Line_3 $$ String mode = "".equals(getParam("applicant_id_gen").trim()) ? "update" : "insert" --> Line_46 $$ if (found && !"update".equals(mode)) [FD]
Line_37 $$ SQLRenderer r = new SQLRenderer() --> Line_48 $$ r.clear() [FD]
Line_37 $$ SQLRenderer r = new SQLRenderer() --> Line_49 $$ r.add("password", (String) applicantInfo.get("password")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_49 $$ r.add("password", (String) applicantInfo.get("password")) [FD]
Line_37 $$ SQLRenderer r = new SQLRenderer() --> Line_50 $$ r.add("applicant_name", (String) applicantInfo.get("name")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_50 $$ r.add("applicant_name", (String) applicantInfo.get("name")) [FD]
Line_37 $$ SQLRenderer r = new SQLRenderer() --> Line_51 $$ r.add("address1", (String) applicantInfo.get("address1")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_51 $$ r.add("address1", (String) applicantInfo.get("address1")) [FD]
Line_37 $$ SQLRenderer r = new SQLRenderer() --> Line_52 $$ r.add("address2", (String) applicantInfo.get("address2")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_52 $$ r.add("address2", (String) applicantInfo.get("address2")) [FD]
Line_37 $$ SQLRenderer r = new SQLRenderer() --> Line_53 $$ r.add("address3", (String) applicantInfo.get("address3")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_53 $$ r.add("address3", (String) applicantInfo.get("address3")) [FD]
Line_37 $$ SQLRenderer r = new SQLRenderer() --> Line_54 $$ r.add("city", (String) applicantInfo.get("city")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_54 $$ r.add("city", (String) applicantInfo.get("city")) [FD]
Line_37 $$ SQLRenderer r = new SQLRenderer() --> Line_55 $$ r.add("state", (String) applicantInfo.get("state")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_55 $$ r.add("state", (String) applicantInfo.get("state")) [FD]
Line_37 $$ SQLRenderer r = new SQLRenderer() --> Line_56 $$ r.add("poscode", (String) applicantInfo.get("poscode")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_56 $$ r.add("poscode", (String) applicantInfo.get("poscode")) [FD]
Line_37 $$ SQLRenderer r = new SQLRenderer() --> Line_57 $$ r.add("country_code", (String) applicantInfo.get("country_code")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_57 $$ r.add("country_code", (String) applicantInfo.get("country_code")) [FD]
Line_37 $$ SQLRenderer r = new SQLRenderer() --> Line_58 $$ r.add("phone", (String) applicantInfo.get("phone")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_58 $$ r.add("phone", (String) applicantInfo.get("phone")) [FD]
Line_37 $$ SQLRenderer r = new SQLRenderer() --> Line_59 $$ r.add("birth_date", (String) applicantInfo.get("birth_date")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_59 $$ r.add("birth_date", (String) applicantInfo.get("birth_date")) [FD]
Line_37 $$ SQLRenderer r = new SQLRenderer() --> Line_60 $$ r.add("gender", (String) applicantInfo.get("gender")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_60 $$ r.add("gender", (String) applicantInfo.get("gender")) [FD]
Line_38 $$ boolean found = false --> Line_62 $$ if (!found) [FD]
Line_44 $$ if (rs.next()) --> Line_62 $$ if (!found) [FD]
Line_62 $$ if (!found) --> Line_63 $$ r.add("applicant_id", (String) applicantInfo.get("id")) [CD]
Line_37 $$ SQLRenderer r = new SQLRenderer() --> Line_63 $$ r.add("applicant_id", (String) applicantInfo.get("id")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_63 $$ r.add("applicant_id", (String) applicantInfo.get("id")) [FD]
Line_62 $$ if (!found) --> Line_64 $$ sql = r.getSQLInsert("adm_applicant") [CD]
Line_30 $$ String sql = "" --> Line_64 $$ sql = r.getSQLInsert("adm_applicant") [FD]
Line_42 $$ sql = r.getSQLSelect("adm_applicant") --> Line_64 $$ sql = r.getSQLInsert("adm_applicant") [FD]
Line_37 $$ SQLRenderer r = new SQLRenderer() --> Line_64 $$ sql = r.getSQLInsert("adm_applicant") [FD]
Line_62 $$ if (!found) --> Line_65 $$ stmt.executeUpdate(sql) [CD]
Line_36 $$ Statement stmt = db.getStatement() --> Line_65 $$ stmt.executeUpdate(sql) [FD]
Line_30 $$ String sql = "" --> Line_65 $$ stmt.executeUpdate(sql) [FD]
Line_42 $$ sql = r.getSQLSelect("adm_applicant") --> Line_65 $$ stmt.executeUpdate(sql) [FD]
Line_64 $$ sql = r.getSQLInsert("adm_applicant") --> Line_65 $$ stmt.executeUpdate(sql) [FD]
Line_62 $$ if (!found) --> Line_67 $$ r.update("applicant_id", (String) applicantInfo.get("id")) [CD]
Line_37 $$ SQLRenderer r = new SQLRenderer() --> Line_67 $$ r.update("applicant_id", (String) applicantInfo.get("id")) [FD]
Line_2 $$ private void add(Hashtable applicantInfo) throws Exception --> Line_67 $$ r.update("applicant_id", (String) applicantInfo.get("id")) [FD]
Line_62 $$ if (!found) --> Line_68 $$ sql = r.getSQLUpdate("adm_applicant") [CD]
Line_30 $$ String sql = "" --> Line_68 $$ sql = r.getSQLUpdate("adm_applicant") [FD]
Line_42 $$ sql = r.getSQLSelect("adm_applicant") --> Line_68 $$ sql = r.getSQLUpdate("adm_applicant") [FD]
Line_64 $$ sql = r.getSQLInsert("adm_applicant") --> Line_68 $$ sql = r.getSQLUpdate("adm_applicant") [FD]
Line_37 $$ SQLRenderer r = new SQLRenderer() --> Line_68 $$ sql = r.getSQLUpdate("adm_applicant") [FD]
Line_62 $$ if (!found) --> Line_69 $$ stmt.executeUpdate(sql) [CD]
Line_36 $$ Statement stmt = db.getStatement() --> Line_69 $$ stmt.executeUpdate(sql) [FD]
Line_30 $$ String sql = "" --> Line_69 $$ stmt.executeUpdate(sql) [FD]
Line_42 $$ sql = r.getSQLSelect("adm_applicant") --> Line_69 $$ stmt.executeUpdate(sql) [FD]
Line_64 $$ sql = r.getSQLInsert("adm_applicant") --> Line_69 $$ stmt.executeUpdate(sql) [FD]
Line_68 $$ sql = r.getSQLUpdate("adm_applicant") --> Line_69 $$ stmt.executeUpdate(sql) [FD]
Line_31 $$ Connection conn = null --> Line_71 $$ conn.commit() [FD]
Line_34 $$ conn = db.getConnection() --> Line_71 $$ conn.commit() [FD]
Line_31 $$ Connection conn = null --> Line_76 $$ conn.rollback() [FD]
Line_34 $$ conn = db.getConnection() --> Line_76 $$ conn.rollback() [FD]
Line_29 $$ Db db = null --> Line_81 $$ if (db != null) [FD]
Line_33 $$ db = new Db() --> Line_81 $$ if (db != null) [FD]
