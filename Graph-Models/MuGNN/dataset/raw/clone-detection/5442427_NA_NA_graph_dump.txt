Line_4 $$ Document doc = getParent().getDocument() --> Line_5 $$ Nodes places = doc.query(getPosition().getXpath()) [FD]
Line_5 $$ Nodes places = doc.query(getPosition().getXpath()) --> Line_6 $$ if (places.size() == 0) [FD]
Line_6 $$ if (places.size() == 0) --> Line_7 $$ places = doc.query("//html") [CD]
Line_5 $$ Nodes places = doc.query(getPosition().getXpath()) --> Line_7 $$ places = doc.query("//html") [FD]
Line_4 $$ Document doc = getParent().getDocument() --> Line_7 $$ places = doc.query("//html") [FD]
Line_5 $$ Nodes places = doc.query(getPosition().getXpath()) --> Line_9 $$ if (places.size() > 0 && places.get(0) instanceof Element) [FD]
Line_7 $$ places = doc.query("//html") --> Line_9 $$ if (places.size() > 0 && places.get(0) instanceof Element) [FD]
Line_9 $$ if (places.size() > 0 && places.get(0) instanceof Element) --> Line_10 $$ Element target = (Element) places.get(0) [CD]
Line_5 $$ Nodes places = doc.query(getPosition().getXpath()) --> Line_10 $$ Element target = (Element) places.get(0) [FD]
Line_7 $$ places = doc.query("//html") --> Line_10 $$ Element target = (Element) places.get(0) [FD]
Line_9 $$ if (places.size() > 0 && places.get(0) instanceof Element) --> Line_11 $$ List<URL> urls = getResourceURLs() [CD]
Line_9 $$ if (places.size() > 0 && places.get(0) instanceof Element) --> Line_12 $$ if (getType() == EType.TEXT) [CD]
Line_12 $$ if (getType() == EType.TEXT) --> Line_13 $$ Element tag = getHeaderTag() [CD]
Line_12 $$ if (getType() == EType.TEXT) --> Line_14 $$ ByteArrayOutputStream out = new ByteArrayOutputStream() [CD]
Line_12 $$ if (getType() == EType.TEXT) --> Line_15 $$ UtilIO.writeAllTo(urls, out) [CD]
Line_11 $$ List<URL> urls = getResourceURLs() --> Line_15 $$ UtilIO.writeAllTo(urls, out) [FD]
Line_14 $$ ByteArrayOutputStream out = new ByteArrayOutputStream() --> Line_15 $$ UtilIO.writeAllTo(urls, out) [FD]
Line_12 $$ if (getType() == EType.TEXT) --> Line_16 $$ String content = out.toString() [CD]
Line_14 $$ ByteArrayOutputStream out = new ByteArrayOutputStream() --> Line_16 $$ String content = out.toString() [FD]
Line_12 $$ if (getType() == EType.TEXT) --> Line_17 $$ out.close() [CD]
Line_14 $$ ByteArrayOutputStream out = new ByteArrayOutputStream() --> Line_17 $$ out.close() [FD]
Line_12 $$ if (getType() == EType.TEXT) --> Line_18 $$ tag.appendChild(content) [CD]
Line_13 $$ Element tag = getHeaderTag() --> Line_18 $$ tag.appendChild(content) [FD]
Line_16 $$ String content = out.toString() --> Line_18 $$ tag.appendChild(content) [FD]
Line_12 $$ if (getType() == EType.TEXT) --> Line_19 $$ if (getPosition().getPlace() == EPlace.START) [CD]
Line_19 $$ if (getPosition().getPlace() == EPlace.START) --> Line_20 $$ target.insertChild(tag, 0) [CD]
Line_10 $$ Element target = (Element) places.get(0) --> Line_20 $$ target.insertChild(tag, 0) [FD]
Line_13 $$ Element tag = getHeaderTag() --> Line_20 $$ target.insertChild(tag, 0) [FD]
Line_19 $$ if (getPosition().getPlace() == EPlace.START) --> Line_22 $$ target.appendChild(tag) [CD]
Line_10 $$ Element target = (Element) places.get(0) --> Line_22 $$ target.appendChild(tag) [FD]
Line_13 $$ Element tag = getHeaderTag() --> Line_22 $$ target.appendChild(tag) [FD]
Line_25 $$ for (URL url : urls) --> Line_26 $$ String file = url.toString() [FD]
Line_26 $$ String file = url.toString() --> Line_27 $$ String name = file.substring(file.lastIndexOf("/") + 1) + "_res_" + (serialNumber++) [FD]
Line_2 $$ public ISource writeTo(ISource output) throws ResourceException --> Line_28 $$ Element tag = getHeaderTag(output, name) [FD]
Line_27 $$ String name = file.substring(file.lastIndexOf("/") + 1) + "_res_" + (serialNumber++) --> Line_28 $$ Element tag = getHeaderTag(output, name) [FD]
Line_2 $$ public ISource writeTo(ISource output) throws ResourceException --> Line_29 $$ File resFile = getFile(output, name) [FD]
Line_27 $$ String name = file.substring(file.lastIndexOf("/") + 1) + "_res_" + (serialNumber++) --> Line_29 $$ File resFile = getFile(output, name) [FD]
Line_29 $$ File resFile = getFile(output, name) --> Line_30 $$ if (!resFile.getParentFile().exists()) [FD]
Line_30 $$ if (!resFile.getParentFile().exists()) --> Line_31 $$ if (!resFile.getParentFile().mkdirs()) [CD]
Line_29 $$ File resFile = getFile(output, name) --> Line_31 $$ if (!resFile.getParentFile().mkdirs()) [FD]
Line_29 $$ File resFile = getFile(output, name) --> Line_32 $$ throw new ResourceException("Could not create resource directory '" + resFile.getParent() + "'.") [FD]
Line_25 $$ for (URL url : urls) --> Line_35 $$ UtilIO.writeToClose(url.openStream(), new FileOutputStream(resFile)) [FD]
Line_36 $$ if (getPosition().getPlace() == EPlace.START) --> Line_37 $$ target.insertChild(tag, 0) [CD]
Line_10 $$ Element target = (Element) places.get(0) --> Line_37 $$ target.insertChild(tag, 0) [FD]
Line_13 $$ Element tag = getHeaderTag() --> Line_37 $$ target.insertChild(tag, 0) [FD]
Line_36 $$ if (getPosition().getPlace() == EPlace.START) --> Line_39 $$ target.appendChild(tag) [CD]
Line_10 $$ Element target = (Element) places.get(0) --> Line_39 $$ target.appendChild(tag) [FD]
Line_13 $$ Element tag = getHeaderTag() --> Line_39 $$ target.appendChild(tag) [FD]
Line_2 $$ public ISource writeTo(ISource output) throws ResourceException --> Line_51 $$ return output [CD]
