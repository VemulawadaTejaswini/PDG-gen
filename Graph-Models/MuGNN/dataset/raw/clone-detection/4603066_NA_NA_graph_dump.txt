Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_3 $$ DBConnection con = null [CD]
Line_3 $$ DBConnection con = null --> Line_5 $$ con = DBServiceManager.allocateConnection() [FD]
Line_3 $$ DBConnection con = null --> Line_6 $$ con.setAutoCommit(false) [FD]
Line_5 $$ con = DBServiceManager.allocateConnection() --> Line_6 $$ con.setAutoCommit(false) [FD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_7 $$ String userId = (String) userData.get(HamboUser.USER_ID) [FD]
Line_3 $$ DBConnection con = null --> Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) [FD]
Line_5 $$ con = DBServiceManager.allocateConnection() --> Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) [FD]
Line_8 $$ String sql = "insert into user_UserAccount " + "(userid,firstname,lastname,street,zipcode,city," + "province,country,email,cellph,gender,password," + "language,timezn,birthday,datecreated,lastlogin," + "disabled,wapsigned,ldapInSync,offerings,firstcb) " + "values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)" --> Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_10 $$ ps.setString(1, userId) [FD]
Line_7 $$ String userId = (String) userData.get(HamboUser.USER_ID) --> Line_10 $$ ps.setString(1, userId) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_11 $$ ps.setString(2, (String) userData.get(HamboUser.FIRST_NAME)) [FD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_11 $$ ps.setString(2, (String) userData.get(HamboUser.FIRST_NAME)) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_12 $$ ps.setString(3, (String) userData.get(HamboUser.LAST_NAME)) [FD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_12 $$ ps.setString(3, (String) userData.get(HamboUser.LAST_NAME)) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_13 $$ ps.setString(4, (String) userData.get(HamboUser.STREET_ADDRESS)) [FD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_13 $$ ps.setString(4, (String) userData.get(HamboUser.STREET_ADDRESS)) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_14 $$ ps.setString(5, (String) userData.get(HamboUser.ZIP_CODE)) [FD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_14 $$ ps.setString(5, (String) userData.get(HamboUser.ZIP_CODE)) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_15 $$ ps.setString(6, (String) userData.get(HamboUser.CITY)) [FD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_15 $$ ps.setString(6, (String) userData.get(HamboUser.CITY)) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_16 $$ ps.setString(7, (String) userData.get(HamboUser.STATE)) [FD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_16 $$ ps.setString(7, (String) userData.get(HamboUser.STATE)) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_17 $$ ps.setString(8, (String) userData.get(HamboUser.COUNTRY)) [FD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_17 $$ ps.setString(8, (String) userData.get(HamboUser.COUNTRY)) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_18 $$ ps.setString(9, (String) userData.get(HamboUser.EXTERNAL_EMAIL_ADDRESS)) [FD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_18 $$ ps.setString(9, (String) userData.get(HamboUser.EXTERNAL_EMAIL_ADDRESS)) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_19 $$ ps.setString(10, (String) userData.get(HamboUser.MOBILE_NUMBER)) [FD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_19 $$ ps.setString(10, (String) userData.get(HamboUser.MOBILE_NUMBER)) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_20 $$ ps.setString(11, (String) userData.get(HamboUser.GENDER)) [FD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_20 $$ ps.setString(11, (String) userData.get(HamboUser.GENDER)) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_21 $$ ps.setString(12, (String) userData.get(HamboUser.PASSWORD)) [FD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_21 $$ ps.setString(12, (String) userData.get(HamboUser.PASSWORD)) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_22 $$ ps.setString(13, (String) userData.get(HamboUser.LANGUAGE)) [FD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_22 $$ ps.setString(13, (String) userData.get(HamboUser.LANGUAGE)) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_23 $$ ps.setString(14, (String) userData.get(HamboUser.TIME_ZONE)) [FD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_23 $$ ps.setString(14, (String) userData.get(HamboUser.TIME_ZONE)) [FD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_24 $$ java.sql.Date date = (java.sql.Date) userData.get(HamboUser.BIRTHDAY) [FD]
Line_24 $$ java.sql.Date date = (java.sql.Date) userData.get(HamboUser.BIRTHDAY) --> Line_25 $$ ps.setNull(15, Types.DATE) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_25 $$ ps.setNull(15, Types.DATE) [FD]
Line_24 $$ java.sql.Date date = (java.sql.Date) userData.get(HamboUser.BIRTHDAY) --> Line_26 $$ date = (java.sql.Date) userData.get(HamboUser.CREATED) [FD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_26 $$ date = (java.sql.Date) userData.get(HamboUser.CREATED) [FD]
Line_24 $$ java.sql.Date date = (java.sql.Date) userData.get(HamboUser.BIRTHDAY) --> Line_27 $$ ps.setNull(16, Types.DATE) [FD]
Line_26 $$ date = (java.sql.Date) userData.get(HamboUser.CREATED) --> Line_27 $$ ps.setNull(16, Types.DATE) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_27 $$ ps.setNull(16, Types.DATE) [FD]
Line_24 $$ java.sql.Date date = (java.sql.Date) userData.get(HamboUser.BIRTHDAY) --> Line_28 $$ date = (java.sql.Date) userData.get(HamboUser.LAST_LOGIN) [FD]
Line_26 $$ date = (java.sql.Date) userData.get(HamboUser.CREATED) --> Line_28 $$ date = (java.sql.Date) userData.get(HamboUser.LAST_LOGIN) [FD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_28 $$ date = (java.sql.Date) userData.get(HamboUser.LAST_LOGIN) [FD]
Line_24 $$ java.sql.Date date = (java.sql.Date) userData.get(HamboUser.BIRTHDAY) --> Line_29 $$ ps.setNull(17, Types.DATE) [FD]
Line_26 $$ date = (java.sql.Date) userData.get(HamboUser.CREATED) --> Line_29 $$ ps.setNull(17, Types.DATE) [FD]
Line_28 $$ date = (java.sql.Date) userData.get(HamboUser.LAST_LOGIN) --> Line_29 $$ ps.setNull(17, Types.DATE) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_29 $$ ps.setNull(17, Types.DATE) [FD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_30 $$ Boolean bool = (Boolean) userData.get(HamboUser.DISABLED) [FD]
Line_30 $$ Boolean bool = (Boolean) userData.get(HamboUser.DISABLED) --> Line_31 $$ ps.setBoolean(18, UserAccountInfo.DEFAULT_DISABLED) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_31 $$ ps.setBoolean(18, UserAccountInfo.DEFAULT_DISABLED) [FD]
Line_30 $$ Boolean bool = (Boolean) userData.get(HamboUser.DISABLED) --> Line_32 $$ bool = (Boolean) userData.get(HamboUser.WAP_ACCOUNT) [FD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_32 $$ bool = (Boolean) userData.get(HamboUser.WAP_ACCOUNT) [FD]
Line_30 $$ Boolean bool = (Boolean) userData.get(HamboUser.DISABLED) --> Line_33 $$ ps.setBoolean(19, UserAccountInfo.DEFAULT_WAP_ACCOUNT) [FD]
Line_32 $$ bool = (Boolean) userData.get(HamboUser.WAP_ACCOUNT) --> Line_33 $$ ps.setBoolean(19, UserAccountInfo.DEFAULT_WAP_ACCOUNT) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_33 $$ ps.setBoolean(19, UserAccountInfo.DEFAULT_WAP_ACCOUNT) [FD]
Line_30 $$ Boolean bool = (Boolean) userData.get(HamboUser.DISABLED) --> Line_34 $$ bool = (Boolean) userData.get(HamboUser.LDAP_IN_SYNC) [FD]
Line_32 $$ bool = (Boolean) userData.get(HamboUser.WAP_ACCOUNT) --> Line_34 $$ bool = (Boolean) userData.get(HamboUser.LDAP_IN_SYNC) [FD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_34 $$ bool = (Boolean) userData.get(HamboUser.LDAP_IN_SYNC) [FD]
Line_30 $$ Boolean bool = (Boolean) userData.get(HamboUser.DISABLED) --> Line_35 $$ ps.setBoolean(20, UserAccountInfo.DEFAULT_LDAP_IN_SYNC) [FD]
Line_32 $$ bool = (Boolean) userData.get(HamboUser.WAP_ACCOUNT) --> Line_35 $$ ps.setBoolean(20, UserAccountInfo.DEFAULT_LDAP_IN_SYNC) [FD]
Line_34 $$ bool = (Boolean) userData.get(HamboUser.LDAP_IN_SYNC) --> Line_35 $$ ps.setBoolean(20, UserAccountInfo.DEFAULT_LDAP_IN_SYNC) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_35 $$ ps.setBoolean(20, UserAccountInfo.DEFAULT_LDAP_IN_SYNC) [FD]
Line_30 $$ Boolean bool = (Boolean) userData.get(HamboUser.DISABLED) --> Line_36 $$ bool = (Boolean) userData.get(HamboUser.OFFERINGS) [FD]
Line_32 $$ bool = (Boolean) userData.get(HamboUser.WAP_ACCOUNT) --> Line_36 $$ bool = (Boolean) userData.get(HamboUser.OFFERINGS) [FD]
Line_34 $$ bool = (Boolean) userData.get(HamboUser.LDAP_IN_SYNC) --> Line_36 $$ bool = (Boolean) userData.get(HamboUser.OFFERINGS) [FD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_36 $$ bool = (Boolean) userData.get(HamboUser.OFFERINGS) [FD]
Line_30 $$ Boolean bool = (Boolean) userData.get(HamboUser.DISABLED) --> Line_37 $$ ps.setBoolean(21, UserAccountInfo.DEFAULT_OFFERINGS) [FD]
Line_32 $$ bool = (Boolean) userData.get(HamboUser.WAP_ACCOUNT) --> Line_37 $$ ps.setBoolean(21, UserAccountInfo.DEFAULT_OFFERINGS) [FD]
Line_34 $$ bool = (Boolean) userData.get(HamboUser.LDAP_IN_SYNC) --> Line_37 $$ ps.setBoolean(21, UserAccountInfo.DEFAULT_OFFERINGS) [FD]
Line_36 $$ bool = (Boolean) userData.get(HamboUser.OFFERINGS) --> Line_37 $$ ps.setBoolean(21, UserAccountInfo.DEFAULT_OFFERINGS) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_37 $$ ps.setBoolean(21, UserAccountInfo.DEFAULT_OFFERINGS) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_38 $$ ps.setString(22, (String) userData.get(HamboUser.COBRANDING_ID)) [FD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_38 $$ ps.setString(22, (String) userData.get(HamboUser.COBRANDING_ID)) [FD]
Line_3 $$ DBConnection con = null --> Line_39 $$ con.executeUpdate(ps, null) [FD]
Line_5 $$ con = DBServiceManager.allocateConnection() --> Line_39 $$ con.executeUpdate(ps, null) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_39 $$ con.executeUpdate(ps, null) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_40 $$ ps = con.prepareStatement(DBUtil.getQueryCurrentOID(con, "user_UserAccount", "newoid")) [FD]
Line_3 $$ DBConnection con = null --> Line_40 $$ ps = con.prepareStatement(DBUtil.getQueryCurrentOID(con, "user_UserAccount", "newoid")) [FD]
Line_5 $$ con = DBServiceManager.allocateConnection() --> Line_40 $$ ps = con.prepareStatement(DBUtil.getQueryCurrentOID(con, "user_UserAccount", "newoid")) [FD]
Line_3 $$ DBConnection con = null --> Line_41 $$ ResultSet rs = con.executeQuery(ps, null) [FD]
Line_5 $$ con = DBServiceManager.allocateConnection() --> Line_41 $$ ResultSet rs = con.executeQuery(ps, null) [FD]
Line_9 $$ PreparedStatement ps = con.prepareStatement(sql) --> Line_41 $$ ResultSet rs = con.executeQuery(ps, null) [FD]
Line_40 $$ ps = con.prepareStatement(DBUtil.getQueryCurrentOID(con, "user_UserAccount", "newoid")) --> Line_41 $$ ResultSet rs = con.executeQuery(ps, null) [FD]
Line_41 $$ ResultSet rs = con.executeQuery(ps, null) --> Line_42 $$ if (rs.next()) [FD]
Line_42 $$ if (rs.next()) --> Line_43 $$ OID newOID = new OID(rs.getBigDecimal("newoid").doubleValue()) [CD]
Line_41 $$ ResultSet rs = con.executeQuery(ps, null) --> Line_43 $$ OID newOID = new OID(rs.getBigDecimal("newoid").doubleValue()) [FD]
Line_42 $$ if (rs.next()) --> Line_44 $$ userData.put(HamboUser.OID, newOID) [CD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_44 $$ userData.put(HamboUser.OID, newOID) [FD]
Line_43 $$ OID newOID = new OID(rs.getBigDecimal("newoid").doubleValue()) --> Line_44 $$ userData.put(HamboUser.OID, newOID) [FD]
Line_3 $$ DBConnection con = null --> Line_46 $$ con.commit() [FD]
Line_5 $$ con = DBServiceManager.allocateConnection() --> Line_46 $$ con.commit() [FD]
Line_3 $$ DBConnection con = null --> Line_48 $$ if (con != null) [FD]
Line_5 $$ con = DBServiceManager.allocateConnection() --> Line_48 $$ if (con != null) [FD]
Line_3 $$ DBConnection con = null --> Line_49 $$ con.rollback() [FD]
Line_5 $$ con = DBServiceManager.allocateConnection() --> Line_49 $$ con.rollback() [FD]
Line_3 $$ DBConnection con = null --> Line_54 $$ if (con != null) [FD]
Line_5 $$ con = DBServiceManager.allocateConnection() --> Line_54 $$ if (con != null) [FD]
Line_3 $$ DBConnection con = null --> Line_55 $$ con.reset() [FD]
Line_5 $$ con = DBServiceManager.allocateConnection() --> Line_55 $$ con.reset() [FD]
Line_3 $$ DBConnection con = null --> Line_58 $$ if (con != null) [FD]
Line_5 $$ con = DBServiceManager.allocateConnection() --> Line_58 $$ if (con != null) [FD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_60 $$ return buildUser(userData) [CD]
Line_2 $$ public User createUser(Map userData) throws HamboFatalException --> Line_60 $$ return buildUser(userData) [FD]
