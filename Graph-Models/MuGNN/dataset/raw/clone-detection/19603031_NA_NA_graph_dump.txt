Line_2 $$ public static String convetToSignature(Map<String, String> keyVal, String apiSecret) --> Line_3 $$ if (keyVal == null || apiSecret == null || keyVal.size() <= 0 || apiSecret.trim().equals("")) [CD]
Line_2 $$ public static String convetToSignature(Map<String, String> keyVal, String apiSecret) --> Line_3 $$ if (keyVal == null || apiSecret == null || keyVal.size() <= 0 || apiSecret.trim().equals("")) [FD]
Line_2 $$ public static String convetToSignature(Map<String, String> keyVal, String apiSecret) --> Line_6 $$ Iterator<Entry<String, String>> iterator = keyVal.entrySet().iterator() [CD]
Line_2 $$ public static String convetToSignature(Map<String, String> keyVal, String apiSecret) --> Line_6 $$ Iterator<Entry<String, String>> iterator = keyVal.entrySet().iterator() [FD]
Line_2 $$ public static String convetToSignature(Map<String, String> keyVal, String apiSecret) --> Line_7 $$ StringBuffer rslt = new StringBuffer() [CD]
Line_2 $$ public static String convetToSignature(Map<String, String> keyVal, String apiSecret) --> Line_8 $$ byte[] signature = null [CD]
Line_2 $$ public static String convetToSignature(Map<String, String> keyVal, String apiSecret) --> Line_9 $$ while (iterator.hasNext()) [CD]
Line_9 $$ while (iterator.hasNext()) --> Line_10 $$ Entry<String, String> entry = iterator.next() [CD]
Line_9 $$ while (iterator.hasNext()) --> Line_11 $$ rslt.append(entry.getKey()) [CD]
Line_7 $$ StringBuffer rslt = new StringBuffer() --> Line_11 $$ rslt.append(entry.getKey()) [FD]
Line_9 $$ while (iterator.hasNext()) --> Line_12 $$ rslt.append("=") [CD]
Line_7 $$ StringBuffer rslt = new StringBuffer() --> Line_12 $$ rslt.append("=") [FD]
Line_9 $$ while (iterator.hasNext()) --> Line_13 $$ rslt.append(entry.getValue()) [CD]
Line_7 $$ StringBuffer rslt = new StringBuffer() --> Line_13 $$ rslt.append(entry.getValue()) [FD]
Line_2 $$ public static String convetToSignature(Map<String, String> keyVal, String apiSecret) --> Line_15 $$ rslt.append(apiSecret) [CD]
Line_2 $$ public static String convetToSignature(Map<String, String> keyVal, String apiSecret) --> Line_15 $$ rslt.append(apiSecret) [FD]
Line_7 $$ StringBuffer rslt = new StringBuffer() --> Line_15 $$ rslt.append(apiSecret) [FD]
Line_17 $$ MessageDigest md5 = MessageDigest.getInstance(HASHING_METHOD) --> Line_18 $$ md5.reset() [FD]
Line_17 $$ MessageDigest md5 = MessageDigest.getInstance(HASHING_METHOD) --> Line_19 $$ md5.update(rslt.toString().getBytes()) [FD]
Line_7 $$ StringBuffer rslt = new StringBuffer() --> Line_19 $$ md5.update(rslt.toString().getBytes()) [FD]
Line_7 $$ StringBuffer rslt = new StringBuffer() --> Line_20 $$ rslt.delete(0, rslt.length()) [FD]
Line_8 $$ byte[] signature = null --> Line_21 $$ signature = md5.digest() [FD]
Line_17 $$ MessageDigest md5 = MessageDigest.getInstance(HASHING_METHOD) --> Line_21 $$ signature = md5.digest() [FD]
Line_22 $$ for (int i = 0; i < signature.length; i++) --> Line_23 $$ String hex = Integer.toHexString(0xff & signature[i]) [CD]
Line_22 $$ for (int i = 0; i < signature.length; i++) --> Line_24 $$ if (hex.length() == 1) [CD]
Line_23 $$ String hex = Integer.toHexString(0xff & signature[i]) --> Line_24 $$ if (hex.length() == 1) [FD]
Line_24 $$ if (hex.length() == 1) --> Line_25 $$ rslt.append('0') [CD]
Line_7 $$ StringBuffer rslt = new StringBuffer() --> Line_25 $$ rslt.append('0') [FD]
Line_22 $$ for (int i = 0; i < signature.length; i++) --> Line_27 $$ rslt.append(hex) [CD]
Line_7 $$ StringBuffer rslt = new StringBuffer() --> Line_27 $$ rslt.append(hex) [FD]
Line_23 $$ String hex = Integer.toHexString(0xff & signature[i]) --> Line_27 $$ rslt.append(hex) [FD]
Line_2 $$ public static String convetToSignature(Map<String, String> keyVal, String apiSecret) --> Line_32 $$ return rslt.toString() [CD]
Line_7 $$ StringBuffer rslt = new StringBuffer() --> Line_32 $$ return rslt.toString() [FD]
