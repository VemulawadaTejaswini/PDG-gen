Line_2 $$ byte[] loadUrlByteArray(String szName, int offset, int size) --> Line_3 $$ byte[] baBuffer = new byte[size] [CD]
Line_5 $$ URL url = new URL(waba.applet.Applet.currentApplet.getCodeBase(), szName) --> Line_7 $$ InputStream file = url.openStream() [FD]
Line_2 $$ byte[] loadUrlByteArray(String szName, int offset, int size) --> Line_8 $$ if (size == 0) [FD]
Line_8 $$ if (size == 0) --> Line_9 $$ int n = file.available() [CD]
Line_7 $$ InputStream file = url.openStream() --> Line_9 $$ int n = file.available() [FD]
Line_8 $$ if (size == 0) --> Line_10 $$ baBuffer = new byte[n - offset] [CD]
Line_3 $$ byte[] baBuffer = new byte[size] --> Line_10 $$ baBuffer = new byte[n - offset] [FD]
Line_12 $$ DataInputStream dataFile = new DataInputStream(file) --> Line_14 $$ dataFile.skip(offset) [FD]
Line_2 $$ byte[] loadUrlByteArray(String szName, int offset, int size) --> Line_14 $$ dataFile.skip(offset) [FD]
Line_12 $$ DataInputStream dataFile = new DataInputStream(file) --> Line_15 $$ dataFile.readFully(baBuffer) [FD]
Line_3 $$ byte[] baBuffer = new byte[size] --> Line_15 $$ dataFile.readFully(baBuffer) [FD]
Line_10 $$ baBuffer = new byte[n - offset] --> Line_15 $$ dataFile.readFully(baBuffer) [FD]
Line_7 $$ InputStream file = url.openStream() --> Line_19 $$ file.close() [FD]
Line_2 $$ byte[] loadUrlByteArray(String szName, int offset, int size) --> Line_26 $$ return baBuffer [CD]
