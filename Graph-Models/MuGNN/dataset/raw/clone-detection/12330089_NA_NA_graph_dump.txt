Line_2 $$ public static void main(String[] args) throws Exception --> Line_3 $$ final URL url = new URL("http://www.ebi.ac.uk/Tools/webservices/psicquic/registry/registry?action=ACTIVE&format=txt") [CD]
Line_2 $$ public static void main(String[] args) throws Exception --> Line_4 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream())) [CD]
Line_3 $$ final URL url = new URL("http://www.ebi.ac.uk/Tools/webservices/psicquic/registry/registry?action=ACTIVE&format=txt") --> Line_4 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream())) [FD]
Line_2 $$ public static void main(String[] args) throws Exception --> Line_5 $$ String str [CD]
Line_2 $$ public static void main(String[] args) throws Exception --> Line_6 $$ Map<String, String> psiqcuicServices = new HashMap<String, String>() [CD]
Line_2 $$ public static void main(String[] args) throws Exception --> Line_7 $$ while ((str = in.readLine()) != null) [CD]
Line_5 $$ String str --> Line_7 $$ while ((str = in.readLine()) != null) [FD]
Line_4 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_7 $$ while ((str = in.readLine()) != null) [FD]
Line_7 $$ while ((str = in.readLine()) != null) --> Line_8 $$ final int idx = str.indexOf('=') [CD]
Line_7 $$ while ((str = in.readLine()) != null) --> Line_8 $$ final int idx = str.indexOf('=') [FD]
Line_5 $$ String str --> Line_8 $$ final int idx = str.indexOf('=') [FD]
Line_7 $$ while ((str = in.readLine()) != null) --> Line_9 $$ psiqcuicServices.put(str.substring(0, idx), str.substring(idx + 1, str.length())) [CD]
Line_7 $$ while ((str = in.readLine()) != null) --> Line_9 $$ psiqcuicServices.put(str.substring(0, idx), str.substring(idx + 1, str.length())) [FD]
Line_6 $$ Map<String, String> psiqcuicServices = new HashMap<String, String>() --> Line_9 $$ psiqcuicServices.put(str.substring(0, idx), str.substring(idx + 1, str.length())) [FD]
Line_5 $$ String str --> Line_9 $$ psiqcuicServices.put(str.substring(0, idx), str.substring(idx + 1, str.length())) [FD]
Line_8 $$ final int idx = str.indexOf('=') --> Line_9 $$ psiqcuicServices.put(str.substring(0, idx), str.substring(idx + 1, str.length())) [FD]
Line_2 $$ public static void main(String[] args) throws Exception --> Line_11 $$ in.close() [CD]
Line_4 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_11 $$ in.close() [FD]
Line_2 $$ public static void main(String[] args) throws Exception --> Line_12 $$ System.out.println("Found " + psiqcuicServices.size() + " active service(s).") [CD]
Line_6 $$ Map<String, String> psiqcuicServices = new HashMap<String, String>() --> Line_12 $$ System.out.println("Found " + psiqcuicServices.size() + " active service(s).") [FD]
Line_6 $$ Map<String, String> psiqcuicServices = new HashMap<String, String>() --> Line_13 $$ for (Object o : psiqcuicServices.keySet()) [FD]
Line_6 $$ Map<String, String> psiqcuicServices = new HashMap<String, String>() --> Line_15 $$ String serviceUrl = psiqcuicServices.get(serviceName) [FD]
Line_14 $$ String serviceName = (String) o --> Line_15 $$ String serviceUrl = psiqcuicServices.get(serviceName) [FD]
Line_17 $$ UniversalPsicquicClient client = new UniversalPsicquicClient(serviceUrl) --> Line_19 $$ SearchResult<?> result = client.getByInteractor("brca2", 0, 50) [FD]
Line_19 $$ SearchResult<?> result = client.getByInteractor("brca2", 0, 50) --> Line_20 $$ System.out.println("Interactions found: " + result.getTotalCount()) [FD]
Line_19 $$ SearchResult<?> result = client.getByInteractor("brca2", 0, 50) --> Line_21 $$ for (BinaryInteraction binaryInteraction : result.getData()) [FD]
Line_21 $$ for (BinaryInteraction binaryInteraction : result.getData()) --> Line_22 $$ String interactorIdA = binaryInteraction.getInteractorA().getIdentifiers().iterator().next().getIdentifier() [FD]
Line_21 $$ for (BinaryInteraction binaryInteraction : result.getData()) --> Line_23 $$ String interactorIdB = binaryInteraction.getInteractorB().getIdentifiers().iterator().next().getIdentifier() [FD]
Line_21 $$ for (BinaryInteraction binaryInteraction : result.getData()) --> Line_25 $$ if (!binaryInteraction.getInteractionAcs().isEmpty()) [FD]
Line_25 $$ if (!binaryInteraction.getInteractionAcs().isEmpty()) --> Line_26 $$ CrossReference cr = (CrossReference) binaryInteraction.getInteractionAcs().iterator().next() [CD]
Line_21 $$ for (BinaryInteraction binaryInteraction : result.getData()) --> Line_26 $$ CrossReference cr = (CrossReference) binaryInteraction.getInteractionAcs().iterator().next() [FD]
Line_25 $$ if (!binaryInteraction.getInteractionAcs().isEmpty()) --> Line_27 $$ interactionAc = cr.getIdentifier() [CD]
Line_24 $$ String interactionAc = "-" --> Line_27 $$ interactionAc = cr.getIdentifier() [FD]
Line_26 $$ CrossReference cr = (CrossReference) binaryInteraction.getInteractionAcs().iterator().next() --> Line_27 $$ interactionAc = cr.getIdentifier() [FD]
