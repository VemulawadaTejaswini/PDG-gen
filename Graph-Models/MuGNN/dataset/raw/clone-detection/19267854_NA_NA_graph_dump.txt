Line_2 $$ public static void insertTableData(Connection dest, TableMetaData tableMetaData) throws Exception --> Line_3 $$ PreparedStatement ps = null [CD]
Line_2 $$ public static void insertTableData(Connection dest, TableMetaData tableMetaData) throws Exception --> Line_5 $$ dest.setAutoCommit(false) [FD]
Line_2 $$ public static void insertTableData(Connection dest, TableMetaData tableMetaData) throws Exception --> Line_6 $$ String sql = "INSERT INTO " + tableMetaData.getSchema() + "." + tableMetaData.getTableName() + " (" [FD]
Line_2 $$ public static void insertTableData(Connection dest, TableMetaData tableMetaData) throws Exception --> Line_7 $$ for (String columnName : tableMetaData.getColumnsNames()) [FD]
Line_6 $$ String sql = "INSERT INTO " + tableMetaData.getSchema() + "." + tableMetaData.getTableName() + " (" --> Line_8 $$ sql += columnName + "," [FD]
Line_7 $$ for (String columnName : tableMetaData.getColumnsNames()) --> Line_8 $$ sql += columnName + "," [FD]
Line_6 $$ String sql = "INSERT INTO " + tableMetaData.getSchema() + "." + tableMetaData.getTableName() + " (" --> Line_10 $$ sql = sql.substring(0, sql.length() - 1) [FD]
Line_8 $$ sql += columnName + "," --> Line_10 $$ sql = sql.substring(0, sql.length() - 1) [FD]
Line_6 $$ String sql = "INSERT INTO " + tableMetaData.getSchema() + "." + tableMetaData.getTableName() + " (" --> Line_11 $$ sql += ") VALUES (" [FD]
Line_8 $$ sql += columnName + "," --> Line_11 $$ sql += ") VALUES (" [FD]
Line_10 $$ sql = sql.substring(0, sql.length() - 1) --> Line_11 $$ sql += ") VALUES (" [FD]
Line_2 $$ public static void insertTableData(Connection dest, TableMetaData tableMetaData) throws Exception --> Line_12 $$ for (String columnName : tableMetaData.getColumnsNames()) [FD]
Line_6 $$ String sql = "INSERT INTO " + tableMetaData.getSchema() + "." + tableMetaData.getTableName() + " (" --> Line_13 $$ sql += "?" + "," [FD]
Line_8 $$ sql += columnName + "," --> Line_13 $$ sql += "?" + "," [FD]
Line_10 $$ sql = sql.substring(0, sql.length() - 1) --> Line_13 $$ sql += "?" + "," [FD]
Line_11 $$ sql += ") VALUES (" --> Line_13 $$ sql += "?" + "," [FD]
Line_6 $$ String sql = "INSERT INTO " + tableMetaData.getSchema() + "." + tableMetaData.getTableName() + " (" --> Line_15 $$ sql = sql.substring(0, sql.length() - 1) [FD]
Line_8 $$ sql += columnName + "," --> Line_15 $$ sql = sql.substring(0, sql.length() - 1) [FD]
Line_10 $$ sql = sql.substring(0, sql.length() - 1) --> Line_15 $$ sql = sql.substring(0, sql.length() - 1) [FD]
Line_11 $$ sql += ") VALUES (" --> Line_15 $$ sql = sql.substring(0, sql.length() - 1) [FD]
Line_13 $$ sql += "?" + "," --> Line_15 $$ sql = sql.substring(0, sql.length() - 1) [FD]
Line_6 $$ String sql = "INSERT INTO " + tableMetaData.getSchema() + "." + tableMetaData.getTableName() + " (" --> Line_16 $$ sql += ")" [FD]
Line_8 $$ sql += columnName + "," --> Line_16 $$ sql += ")" [FD]
Line_10 $$ sql = sql.substring(0, sql.length() - 1) --> Line_16 $$ sql += ")" [FD]
Line_11 $$ sql += ") VALUES (" --> Line_16 $$ sql += ")" [FD]
Line_13 $$ sql += "?" + "," --> Line_16 $$ sql += ")" [FD]
Line_15 $$ sql = sql.substring(0, sql.length() - 1) --> Line_16 $$ sql += ")" [FD]
Line_6 $$ String sql = "INSERT INTO " + tableMetaData.getSchema() + "." + tableMetaData.getTableName() + " (" --> Line_17 $$ IOHelper.writeInfo(sql) [FD]
Line_8 $$ sql += columnName + "," --> Line_17 $$ IOHelper.writeInfo(sql) [FD]
Line_10 $$ sql = sql.substring(0, sql.length() - 1) --> Line_17 $$ IOHelper.writeInfo(sql) [FD]
Line_11 $$ sql += ") VALUES (" --> Line_17 $$ IOHelper.writeInfo(sql) [FD]
Line_13 $$ sql += "?" + "," --> Line_17 $$ IOHelper.writeInfo(sql) [FD]
Line_15 $$ sql = sql.substring(0, sql.length() - 1) --> Line_17 $$ IOHelper.writeInfo(sql) [FD]
Line_16 $$ sql += ")" --> Line_17 $$ IOHelper.writeInfo(sql) [FD]
Line_3 $$ PreparedStatement ps = null --> Line_18 $$ ps = dest.prepareStatement(sql) [FD]
Line_2 $$ public static void insertTableData(Connection dest, TableMetaData tableMetaData) throws Exception --> Line_18 $$ ps = dest.prepareStatement(sql) [FD]
Line_6 $$ String sql = "INSERT INTO " + tableMetaData.getSchema() + "." + tableMetaData.getTableName() + " (" --> Line_18 $$ ps = dest.prepareStatement(sql) [FD]
Line_8 $$ sql += columnName + "," --> Line_18 $$ ps = dest.prepareStatement(sql) [FD]
Line_10 $$ sql = sql.substring(0, sql.length() - 1) --> Line_18 $$ ps = dest.prepareStatement(sql) [FD]
Line_11 $$ sql += ") VALUES (" --> Line_18 $$ ps = dest.prepareStatement(sql) [FD]
Line_13 $$ sql += "?" + "," --> Line_18 $$ ps = dest.prepareStatement(sql) [FD]
Line_15 $$ sql = sql.substring(0, sql.length() - 1) --> Line_18 $$ ps = dest.prepareStatement(sql) [FD]
Line_16 $$ sql += ")" --> Line_18 $$ ps = dest.prepareStatement(sql) [FD]
Line_2 $$ public static void insertTableData(Connection dest, TableMetaData tableMetaData) throws Exception --> Line_19 $$ for (Row r : tableMetaData.getData()) [FD]
Line_2 $$ public static void insertTableData(Connection dest, TableMetaData tableMetaData) throws Exception --> Line_22 $$ for (String columnName : tableMetaData.getColumnsNames()) [FD]
Line_2 $$ public static void insertTableData(Connection dest, TableMetaData tableMetaData) throws Exception --> Line_23 $$ if (dest instanceof OracleConnection) [FD]
Line_23 $$ if (dest instanceof OracleConnection) --> Line_24 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("BLOB")) [CD]
Line_7 $$ for (String columnName : tableMetaData.getColumnsNames()) --> Line_24 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("BLOB")) [FD]
Line_2 $$ public static void insertTableData(Connection dest, TableMetaData tableMetaData) throws Exception --> Line_24 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("BLOB")) [FD]
Line_24 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("BLOB")) --> Line_25 $$ BLOB blob = new BLOB((OracleConnection) dest, (byte[]) r.getRowData().get(columnName)) [CD]
Line_7 $$ for (String columnName : tableMetaData.getColumnsNames()) --> Line_25 $$ BLOB blob = new BLOB((OracleConnection) dest, (byte[]) r.getRowData().get(columnName)) [FD]
Line_19 $$ for (Row r : tableMetaData.getData()) --> Line_25 $$ BLOB blob = new BLOB((OracleConnection) dest, (byte[]) r.getRowData().get(columnName)) [FD]
Line_24 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("BLOB")) --> Line_26 $$ ((OraclePreparedStatement) ps).setBLOB(param, blob) [CD]
Line_21 $$ int param = 1 --> Line_26 $$ ((OraclePreparedStatement) ps).setBLOB(param, blob) [FD]
Line_25 $$ BLOB blob = new BLOB((OracleConnection) dest, (byte[]) r.getRowData().get(columnName)) --> Line_26 $$ ((OraclePreparedStatement) ps).setBLOB(param, blob) [FD]
Line_24 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("BLOB")) --> Line_27 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("CLOB")) [CD]
Line_7 $$ for (String columnName : tableMetaData.getColumnsNames()) --> Line_27 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("CLOB")) [FD]
Line_2 $$ public static void insertTableData(Connection dest, TableMetaData tableMetaData) throws Exception --> Line_27 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("CLOB")) [FD]
Line_27 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("CLOB")) --> Line_28 $$ ((OraclePreparedStatement) ps).setStringForClob(param, (String) r.getRowData().get(columnName)) [CD]
Line_21 $$ int param = 1 --> Line_28 $$ ((OraclePreparedStatement) ps).setStringForClob(param, (String) r.getRowData().get(columnName)) [FD]
Line_7 $$ for (String columnName : tableMetaData.getColumnsNames()) --> Line_28 $$ ((OraclePreparedStatement) ps).setStringForClob(param, (String) r.getRowData().get(columnName)) [FD]
Line_19 $$ for (Row r : tableMetaData.getData()) --> Line_28 $$ ((OraclePreparedStatement) ps).setStringForClob(param, (String) r.getRowData().get(columnName)) [FD]
Line_27 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("CLOB")) --> Line_29 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("LONG")) [CD]
Line_7 $$ for (String columnName : tableMetaData.getColumnsNames()) --> Line_29 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("LONG")) [FD]
Line_2 $$ public static void insertTableData(Connection dest, TableMetaData tableMetaData) throws Exception --> Line_29 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("LONG")) [FD]
Line_29 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("LONG")) --> Line_30 $$ ps.setBytes(param, (byte[]) r.getRowData().get(columnName)) [CD]
Line_3 $$ PreparedStatement ps = null --> Line_30 $$ ps.setBytes(param, (byte[]) r.getRowData().get(columnName)) [FD]
Line_18 $$ ps = dest.prepareStatement(sql) --> Line_30 $$ ps.setBytes(param, (byte[]) r.getRowData().get(columnName)) [FD]
Line_21 $$ int param = 1 --> Line_30 $$ ps.setBytes(param, (byte[]) r.getRowData().get(columnName)) [FD]
Line_7 $$ for (String columnName : tableMetaData.getColumnsNames()) --> Line_30 $$ ps.setBytes(param, (byte[]) r.getRowData().get(columnName)) [FD]
Line_19 $$ for (Row r : tableMetaData.getData()) --> Line_30 $$ ps.setBytes(param, (byte[]) r.getRowData().get(columnName)) [FD]
Line_23 $$ if (dest instanceof OracleConnection) --> Line_33 $$ IOHelper.writeInfo(columnName + " = " + r.getRowData().get(columnName)) [CD]
Line_7 $$ for (String columnName : tableMetaData.getColumnsNames()) --> Line_33 $$ IOHelper.writeInfo(columnName + " = " + r.getRowData().get(columnName)) [FD]
Line_19 $$ for (Row r : tableMetaData.getData()) --> Line_33 $$ IOHelper.writeInfo(columnName + " = " + r.getRowData().get(columnName)) [FD]
Line_23 $$ if (dest instanceof OracleConnection) --> Line_34 $$ ps.setObject(param, r.getRowData().get(columnName)) [CD]
Line_3 $$ PreparedStatement ps = null --> Line_34 $$ ps.setObject(param, r.getRowData().get(columnName)) [FD]
Line_18 $$ ps = dest.prepareStatement(sql) --> Line_34 $$ ps.setObject(param, r.getRowData().get(columnName)) [FD]
Line_21 $$ int param = 1 --> Line_34 $$ ps.setObject(param, r.getRowData().get(columnName)) [FD]
Line_7 $$ for (String columnName : tableMetaData.getColumnsNames()) --> Line_34 $$ ps.setObject(param, r.getRowData().get(columnName)) [FD]
Line_19 $$ for (Row r : tableMetaData.getData()) --> Line_34 $$ ps.setObject(param, r.getRowData().get(columnName)) [FD]
Line_21 $$ int param = 1 --> Line_36 $$ param++ [FD]
Line_3 $$ PreparedStatement ps = null --> Line_38 $$ if (ps.executeUpdate() != 1) [FD]
Line_18 $$ ps = dest.prepareStatement(sql) --> Line_38 $$ if (ps.executeUpdate() != 1) [FD]
Line_38 $$ if (ps.executeUpdate() != 1) --> Line_39 $$ dest.rollback() [CD]
Line_2 $$ public static void insertTableData(Connection dest, TableMetaData tableMetaData) throws Exception --> Line_39 $$ dest.rollback() [FD]
Line_38 $$ if (ps.executeUpdate() != 1) --> Line_40 $$ updateTableData(dest, tableMetaData, r) [CD]
Line_2 $$ public static void insertTableData(Connection dest, TableMetaData tableMetaData) throws Exception --> Line_40 $$ updateTableData(dest, tableMetaData, r) [FD]
Line_19 $$ for (Row r : tableMetaData.getData()) --> Line_40 $$ updateTableData(dest, tableMetaData, r) [FD]
Line_2 $$ public static void insertTableData(Connection dest, TableMetaData tableMetaData) throws Exception --> Line_44 $$ dest.rollback() [FD]
Line_2 $$ public static void insertTableData(Connection dest, TableMetaData tableMetaData) throws Exception --> Line_45 $$ updateTableData(dest, tableMetaData, r) [FD]
Line_19 $$ for (Row r : tableMetaData.getData()) --> Line_45 $$ updateTableData(dest, tableMetaData, r) [FD]
Line_3 $$ PreparedStatement ps = null --> Line_50 $$ ps.clearParameters() [FD]
Line_18 $$ ps = dest.prepareStatement(sql) --> Line_50 $$ ps.clearParameters() [FD]
Line_2 $$ public static void insertTableData(Connection dest, TableMetaData tableMetaData) throws Exception --> Line_52 $$ dest.commit() [FD]
Line_2 $$ public static void insertTableData(Connection dest, TableMetaData tableMetaData) throws Exception --> Line_53 $$ dest.setAutoCommit(true) [FD]
Line_3 $$ PreparedStatement ps = null --> Line_55 $$ if (ps != null) [FD]
Line_18 $$ ps = dest.prepareStatement(sql) --> Line_55 $$ if (ps != null) [FD]
