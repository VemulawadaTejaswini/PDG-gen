Line_5 $$ StringBuffer urlBuff = new StringBuffer(psdUrl + psdCgi + "?") --> Line_6 $$ urlBuff.append("DATA_SET_NAME=" + dataSet) [FD]
Line_5 $$ StringBuffer urlBuff = new StringBuffer(psdUrl + psdCgi + "?") --> Line_7 $$ urlBuff.append("&VERSION=" + version) [FD]
Line_5 $$ StringBuffer urlBuff = new StringBuffer(psdUrl + psdCgi + "?") --> Line_8 $$ urlBuff.append("&PIXEL_TYPE=" + pixelType) [FD]
Line_5 $$ StringBuffer urlBuff = new StringBuffer(psdUrl + psdCgi + "?") --> Line_9 $$ urlBuff.append("&PROJECTION=" + projection) [FD]
Line_5 $$ StringBuffer urlBuff = new StringBuffer(psdUrl + psdCgi + "?") --> Line_10 $$ urlBuff.append("&STRETCH=" + stretch) [FD]
Line_5 $$ StringBuffer urlBuff = new StringBuffer(psdUrl + psdCgi + "?") --> Line_11 $$ urlBuff.append("&GRIDLINE_FREQUENCY=" + gridlineFrequency) [FD]
Line_5 $$ StringBuffer urlBuff = new StringBuffer(psdUrl + psdCgi + "?") --> Line_12 $$ urlBuff.append("&SCALE=" + URLEncoder.encode(scale)) [FD]
Line_5 $$ StringBuffer urlBuff = new StringBuffer(psdUrl + psdCgi + "?") --> Line_13 $$ urlBuff.append("&RESOLUTION=" + resolution) [FD]
Line_5 $$ StringBuffer urlBuff = new StringBuffer(psdUrl + psdCgi + "?") --> Line_14 $$ urlBuff.append("&LATBOX=" + latbox) [FD]
Line_5 $$ StringBuffer urlBuff = new StringBuffer(psdUrl + psdCgi + "?") --> Line_15 $$ urlBuff.append("&LONBOX=" + lonbox) [FD]
Line_5 $$ StringBuffer urlBuff = new StringBuffer(psdUrl + psdCgi + "?") --> Line_16 $$ urlBuff.append("&BANDS_SELECTED=" + bandsSelected) [FD]
Line_5 $$ StringBuffer urlBuff = new StringBuffer(psdUrl + psdCgi + "?") --> Line_17 $$ urlBuff.append("&LAT=" + lat) [FD]
Line_5 $$ StringBuffer urlBuff = new StringBuffer(psdUrl + psdCgi + "?") --> Line_18 $$ urlBuff.append("&LON=" + lon) [FD]
Line_5 $$ StringBuffer urlBuff = new StringBuffer(psdUrl + psdCgi + "?") --> Line_19 $$ URL url = new URL(urlBuff.toString()) [FD]
Line_19 $$ URL url = new URL(urlBuff.toString()) --> Line_20 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream())) [FD]
Line_22 $$ String line --> Line_25 $$ while ((line = in.readLine()) != null) [FD]
Line_20 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_25 $$ while ((line = in.readLine()) != null) [FD]
Line_25 $$ while ((line = in.readLine()) != null) --> Line_26 $$ if (count == 6) [CD]
Line_25 $$ while ((line = in.readLine()) != null) --> Line_26 $$ if (count == 6) [FD]
Line_24 $$ int count = 0 --> Line_26 $$ if (count == 6) [FD]
Line_21 $$ String result = null --> Line_26 $$ if (count == 6) [FD]
Line_22 $$ String line --> Line_26 $$ if (count == 6) [FD]
Line_25 $$ while ((line = in.readLine()) != null) --> Line_27 $$ count++ [CD]
Line_24 $$ int count = 0 --> Line_27 $$ count++ [FD]
Line_26 $$ if (count == 6) --> Line_29 $$ int startIndex = result.indexOf("<TH COLSPAN=2 ROWSPAN=2><IMG SRC = \"") + 36 [FD]
Line_21 $$ String result = null --> Line_29 $$ int startIndex = result.indexOf("<TH COLSPAN=2 ROWSPAN=2><IMG SRC = \"") + 36 [FD]
Line_26 $$ if (count == 6) --> Line_30 $$ int endIndex = result.indexOf("\"", startIndex) [FD]
Line_21 $$ String result = null --> Line_30 $$ int endIndex = result.indexOf("\"", startIndex) [FD]
Line_29 $$ int startIndex = result.indexOf("<TH COLSPAN=2 ROWSPAN=2><IMG SRC = \"") + 36 --> Line_30 $$ int endIndex = result.indexOf("\"", startIndex) [FD]
Line_23 $$ String imageSrc --> Line_31 $$ imageSrc = result.substring(startIndex, endIndex) [FD]
Line_26 $$ if (count == 6) --> Line_31 $$ imageSrc = result.substring(startIndex, endIndex) [FD]
Line_21 $$ String result = null --> Line_31 $$ imageSrc = result.substring(startIndex, endIndex) [FD]
Line_29 $$ int startIndex = result.indexOf("<TH COLSPAN=2 ROWSPAN=2><IMG SRC = \"") + 36 --> Line_31 $$ imageSrc = result.substring(startIndex, endIndex) [FD]
Line_30 $$ int endIndex = result.indexOf("\"", startIndex) --> Line_31 $$ imageSrc = result.substring(startIndex, endIndex) [FD]
Line_32 $$ URL imageUrl = new URL(imageSrc) --> Line_33 $$ return (Toolkit.getDefaultToolkit().getImage(imageUrl)) [FD]
Line_2 $$ private Image retrievePdsImage(double lat, double lon) --> Line_37 $$ return null [CD]
