Line_2 $$ private void doIt() throws Throwable --> Line_3 $$ GenericDAO<User> dao = DAOFactory.createDAO(User.class) [CD]
Line_5 $$ final User user = dao.findUniqueByCriteria(Expression.eq("login", login)) --> Line_6 $$ if (user == null) [FD]
Line_7 $$ if (srcDir.isDirectory() && srcDir.exists()) --> Line_8 $$ final String[] fileList = srcDir.list(new XFilenameFilter() [CD]
Line_8 $$ final String[] fileList = srcDir.list(new XFilenameFilter() --> Line_10 $$ String[] fNArr = file.split("\\.") [CD]
Line_8 $$ final String[] fileList = srcDir.list(new XFilenameFilter() --> Line_10 $$ String[] fNArr = file.split("\\.") [FD]
Line_8 $$ final String[] fileList = srcDir.list(new XFilenameFilter() --> Line_11 $$ return (fNArr.length > 1 && (fNArr[fNArr.length - 1].equalsIgnoreCase("map") || fNArr[fNArr.length - 1].equalsIgnoreCase("plt") || fNArr[fNArr.length - 1].equalsIgnoreCase("wpt"))) [CD]
Line_36 $$ if (isOziMAP || isOziPLT || isOziWPT || isKML) --> Line_37 $$ in.close() [CD]
Line_41 $$ if (isOziWPT) --> Line_47 $$ if (wp != null) [CD]
Line_47 $$ if (wp != null) --> Line_48 $$ Set<WayPointRow> rows = wp.getPoints() [CD]
Line_5 $$ final User user = dao.findUniqueByCriteria(Expression.eq("login", login)) --> Line_50 $$ final UserMapPoint p = BeanFactory.createUserPoint(row, user) [FD]
Line_47 $$ if (wp != null) --> Line_53 $$ pointsCounter += rows.size() [CD]
Line_41 $$ if (isOziWPT) --> Line_55 $$ if (isOziPLT) [CD]
Line_55 $$ if (isOziPLT) --> Line_62 $$ if (plt != null) [CD]
Line_62 $$ if (plt != null) --> Line_63 $$ final UserMapTrack t = BeanFactory.createUserTrack(plt, user) [CD]
Line_5 $$ final User user = dao.findUniqueByCriteria(Expression.eq("login", login)) --> Line_63 $$ final UserMapTrack t = BeanFactory.createUserTrack(plt, user) [FD]
Line_62 $$ if (plt != null) --> Line_64 $$ tracks.add(new MapTrackPointsScaleRequest(t)) [CD]
Line_62 $$ if (plt != null) --> Line_66 $$ logger.info("track:" + t.getGuid()) [CD]
Line_55 $$ if (isOziPLT) --> Line_68 $$ if (isOziMAP) [CD]
Line_68 $$ if (isOziMAP) --> Line_76 $$ if (projection != null && projection.getPoints() != null && projection.getPoints().size() >= 2) [CD]
Line_76 $$ if (projection != null && projection.getPoints() != null && projection.getPoints().size() >= 2) --> Line_77 $$ GenericDAO<UserMapOriginal> mapDao = DAOFactory.createDAO(UserMapOriginal.class) [CD]
Line_76 $$ if (projection != null && projection.getPoints() != null && projection.getPoints().size() >= 2) --> Line_79 $$ mapOriginal.setName(projection.getTitle()) [CD]
Line_76 $$ if (projection != null && projection.getPoints() != null && projection.getPoints().size() >= 2) --> Line_80 $$ mapOriginal.setUser(user) [CD]
Line_5 $$ final User user = dao.findUniqueByCriteria(Expression.eq("login", login)) --> Line_80 $$ mapOriginal.setUser(user) [FD]
Line_76 $$ if (projection != null && projection.getPoints() != null && projection.getPoints().size() >= 2) --> Line_81 $$ mapOriginal.setState(UserMapOriginal.State.UPLOAD) [CD]
Line_76 $$ if (projection != null && projection.getPoints() != null && projection.getPoints().size() >= 2) --> Line_82 $$ mapOriginal.setSubstate(UserMapOriginal.SubState.COMPLETE) [CD]
Line_76 $$ if (projection != null && projection.getPoints() != null && projection.getPoints().size() >= 2) --> Line_83 $$ MapManager.updateProjection(projection, mapOriginal) [CD]
Line_76 $$ if (projection != null && projection.getPoints() != null && projection.getPoints().size() >= 2) --> Line_85 $$ if (!srcFile.exists() || !srcFile.isFile()) [CD]
Line_76 $$ if (projection != null && projection.getPoints() != null && projection.getPoints().size() >= 2) --> Line_87 $$ mapStorage.mkdir() [CD]
Line_76 $$ if (projection != null && projection.getPoints() != null && projection.getPoints().size() >= 2) --> Line_91 $$ IOUtils.copy(inImg, out) [CD]
Line_76 $$ if (projection != null && projection.getPoints() != null && projection.getPoints().size() >= 2) --> Line_92 $$ out.flush() [CD]
Line_76 $$ if (projection != null && projection.getPoints() != null && projection.getPoints().size() >= 2) --> Line_93 $$ out.close() [CD]
Line_76 $$ if (projection != null && projection.getPoints() != null && projection.getPoints().size() >= 2) --> Line_94 $$ inImg.close() [CD]
Line_76 $$ if (projection != null && projection.getPoints() != null && projection.getPoints().size() >= 2) --> Line_95 $$ mapDao.save(mapOriginal) [CD]
Line_76 $$ if (projection != null && projection.getPoints() != null && projection.getPoints().size() >= 2) --> Line_96 $$ maps.add(mapOriginal) [CD]
Line_76 $$ if (projection != null && projection.getPoints() != null && projection.getPoints().size() >= 2) --> Line_97 $$ srcFile.delete() [CD]
Line_76 $$ if (projection != null && projection.getPoints() != null && projection.getPoints().size() >= 2) --> Line_99 $$ logger.info("map:" + mapOriginal.getGuid()) [CD]
Line_68 $$ if (isOziMAP) --> Line_101 $$ logger.warn("unsupported file format: " + file.getName()) [CD]
Line_8 $$ final String[] fileList = srcDir.list(new XFilenameFilter() --> Line_101 $$ logger.warn("unsupported file format: " + file.getName()) [FD]
Line_8 $$ final String[] fileList = srcDir.list(new XFilenameFilter() --> Line_119 $$ file.delete() [FD]
Line_7 $$ if (srcDir.isDirectory() && srcDir.exists()) --> Line_122 $$ logger.info("waypoints: " + pointsCounter + "\ntracks: " + tracksCounter + "\nmaps: " + mapsCounter) [CD]
