Line_2 $$ private File copyFile(File currFile) throws IOException --> Line_3 $$ String relativePath = currFile.getPath().substring(_distDir.length() + 1) [CD]
Line_2 $$ private File copyFile(File currFile) throws IOException --> Line_3 $$ String relativePath = currFile.getPath().substring(_distDir.length() + 1) [FD]
Line_2 $$ private File copyFile(File currFile) throws IOException --> Line_4 $$ File targetFile = new File(_installDir, relativePath) [CD]
Line_2 $$ private File copyFile(File currFile) throws IOException --> Line_5 $$ if (targetFile.exists()) [CD]
Line_4 $$ File targetFile = new File(_installDir, relativePath) --> Line_5 $$ if (targetFile.exists()) [FD]
Line_5 $$ if (targetFile.exists()) --> Line_6 $$ log(targetFile.getPath() + " already exists, skipping libcopy", Project.MSG_INFO) [CD]
Line_4 $$ File targetFile = new File(_installDir, relativePath) --> Line_6 $$ log(targetFile.getPath() + " already exists, skipping libcopy", Project.MSG_INFO) [FD]
Line_5 $$ if (targetFile.exists()) --> Line_7 $$ return targetFile [CD]
Line_5 $$ if (targetFile.exists()) --> Line_9 $$ if (!targetFile.getParentFile().exists()) [CD]
Line_4 $$ File targetFile = new File(_installDir, relativePath) --> Line_9 $$ if (!targetFile.getParentFile().exists()) [FD]
Line_9 $$ if (!targetFile.getParentFile().exists()) --> Line_10 $$ if (!targetFile.getParentFile().mkdirs()) [CD]
Line_4 $$ File targetFile = new File(_installDir, relativePath) --> Line_10 $$ if (!targetFile.getParentFile().mkdirs()) [FD]
Line_10 $$ if (!targetFile.getParentFile().mkdirs()) --> Line_11 $$ log("Unable to create target dir tree for " + targetFile.getPath(), Project.MSG_ERR) [CD]
Line_4 $$ File targetFile = new File(_installDir, relativePath) --> Line_11 $$ log("Unable to create target dir tree for " + targetFile.getPath(), Project.MSG_ERR) [FD]
Line_2 $$ private File copyFile(File currFile) throws IOException --> Line_16 $$ FileInputStream fis = null [CD]
Line_2 $$ private File copyFile(File currFile) throws IOException --> Line_17 $$ FileOutputStream fos = null [CD]
Line_16 $$ FileInputStream fis = null --> Line_19 $$ fis = new FileInputStream(currFile) [FD]
Line_2 $$ private File copyFile(File currFile) throws IOException --> Line_21 $$ log("Library from plugin manifest appears to have been deleted: " + currFile.getPath(), Project.MSG_ERR) [FD]
Line_17 $$ FileOutputStream fos = null --> Line_25 $$ fos = new FileOutputStream(targetFile) [FD]
Line_4 $$ File targetFile = new File(_installDir, relativePath) --> Line_27 $$ log("Unable to create target file to write to: " + targetFile.getPath(), Project.MSG_ERR) [FD]
Line_2 $$ private File copyFile(File currFile) throws IOException --> Line_30 $$ BufferedInputStream bis = new BufferedInputStream(fis) [CD]
Line_2 $$ private File copyFile(File currFile) throws IOException --> Line_31 $$ BufferedOutputStream bos = new BufferedOutputStream(fos) [CD]
Line_2 $$ private File copyFile(File currFile) throws IOException --> Line_32 $$ int read = 0 [CD]
Line_2 $$ private File copyFile(File currFile) throws IOException --> Line_33 $$ byte[] buff = new byte[65536] [CD]
Line_2 $$ private File copyFile(File currFile) throws IOException --> Line_34 $$ boolean success = true [CD]
Line_2 $$ private File copyFile(File currFile) throws IOException --> Line_35 $$ while (read != -1 && success) [CD]
Line_34 $$ boolean success = true --> Line_35 $$ while (read != -1 && success) [FD]
Line_32 $$ int read = 0 --> Line_37 $$ read = bis.read(buff, 0, 65536) [FD]
Line_30 $$ BufferedInputStream bis = new BufferedInputStream(fis) --> Line_37 $$ read = bis.read(buff, 0, 65536) [FD]
Line_33 $$ byte[] buff = new byte[65536] --> Line_37 $$ read = bis.read(buff, 0, 65536) [FD]
Line_2 $$ private File copyFile(File currFile) throws IOException --> Line_39 $$ log("Read error whilst reading from: " + currFile.getPath(), Project.MSG_ERR) [FD]
Line_34 $$ boolean success = true --> Line_40 $$ success = false [FD]
Line_35 $$ while (read != -1 && success) --> Line_42 $$ if (read != -1 && success) [CD]
Line_40 $$ success = false --> Line_42 $$ if (read != -1 && success) [FD]
Line_34 $$ boolean success = true --> Line_42 $$ if (read != -1 && success) [FD]
Line_31 $$ BufferedOutputStream bos = new BufferedOutputStream(fos) --> Line_44 $$ bos.write(buff, 0, read) [FD]
Line_33 $$ byte[] buff = new byte[65536] --> Line_44 $$ bos.write(buff, 0, read) [FD]
Line_37 $$ read = bis.read(buff, 0, 65536) --> Line_44 $$ bos.write(buff, 0, read) [FD]
Line_32 $$ int read = 0 --> Line_44 $$ bos.write(buff, 0, read) [FD]
Line_4 $$ File targetFile = new File(_installDir, relativePath) --> Line_46 $$ log("Write error whilst writing to: " + targetFile.getPath(), Project.MSG_ERR) [FD]
Line_40 $$ success = false --> Line_47 $$ success = false [FD]
Line_34 $$ boolean success = true --> Line_47 $$ success = false [FD]
Line_30 $$ BufferedInputStream bis = new BufferedInputStream(fis) --> Line_52 $$ bis.close() [FD]
Line_31 $$ BufferedOutputStream bos = new BufferedOutputStream(fos) --> Line_56 $$ bos.close() [FD]
Line_16 $$ FileInputStream fis = null --> Line_60 $$ fis.close() [FD]
Line_19 $$ fis = new FileInputStream(currFile) --> Line_60 $$ fis.close() [FD]
Line_17 $$ FileOutputStream fos = null --> Line_64 $$ fos.close() [FD]
Line_25 $$ fos = new FileOutputStream(targetFile) --> Line_64 $$ fos.close() [FD]
Line_2 $$ private File copyFile(File currFile) throws IOException --> Line_67 $$ if (!success) [CD]
Line_40 $$ success = false --> Line_67 $$ if (!success) [FD]
Line_47 $$ success = false --> Line_67 $$ if (!success) [FD]
Line_34 $$ boolean success = true --> Line_67 $$ if (!success) [FD]
Line_2 $$ private File copyFile(File currFile) throws IOException --> Line_70 $$ return targetFile [CD]
Line_40 $$ success = false --> Line_35 $$ while (read != -1 && success) [FD]
Line_47 $$ success = false --> Line_35 $$ while (read != -1 && success) [FD]
Line_47 $$ success = false --> Line_42 $$ if (read != -1 && success) [FD]
