Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_3 $$ String s [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_4 $$ String firstName [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_5 $$ String header [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_6 $$ String name = null [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_7 $$ Integer PVLoggerID = new Integer(0) [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_8 $$ String[] tokens [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_9 $$ int nvalues = 0 [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_10 $$ double num1, num2, num3 [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_11 $$ double xoffset = 1.0 [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_12 $$ double xdelta = 1.0 [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_13 $$ double yoffset = 1.0 [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_14 $$ double ydelta = 1.0 [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_15 $$ double zoffset = 1.0 [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_16 $$ double zdelta = 1.0 [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_17 $$ boolean readfit = false [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_18 $$ boolean readraw = false [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_19 $$ boolean zerodata = false [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_20 $$ boolean baddata = false [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_21 $$ boolean harpdata = false [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_22 $$ ArrayList fitparams = new ArrayList() [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_23 $$ ArrayList xraw = new ArrayList() [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_24 $$ ArrayList yraw = new ArrayList() [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_25 $$ ArrayList zraw = new ArrayList() [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_26 $$ ArrayList sraw = new ArrayList() [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_27 $$ ArrayList sxraw = new ArrayList() [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_28 $$ ArrayList syraw = new ArrayList() [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_29 $$ ArrayList szraw = new ArrayList() [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_30 $$ URL url = newfile.toURI().toURL() [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_30 $$ URL url = newfile.toURI().toURL() [FD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_31 $$ InputStream is = url.openStream() [CD]
Line_30 $$ URL url = newfile.toURI().toURL() --> Line_31 $$ InputStream is = url.openStream() [FD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_32 $$ InputStreamReader isr = new InputStreamReader(is) [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_33 $$ BufferedReader br = new BufferedReader(isr) [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_34 $$ while ((s = br.readLine()) != null) [CD]
Line_3 $$ String s --> Line_34 $$ while ((s = br.readLine()) != null) [FD]
Line_33 $$ BufferedReader br = new BufferedReader(isr) --> Line_34 $$ while ((s = br.readLine()) != null) [FD]
Line_34 $$ while ((s = br.readLine()) != null) --> Line_35 $$ tokens = s.split("\\s+") [CD]
Line_34 $$ while ((s = br.readLine()) != null) --> Line_35 $$ tokens = s.split("\\s+") [FD]
Line_8 $$ String[] tokens --> Line_35 $$ tokens = s.split("\\s+") [FD]
Line_3 $$ String s --> Line_35 $$ tokens = s.split("\\s+") [FD]
Line_34 $$ while ((s = br.readLine()) != null) --> Line_36 $$ nvalues = tokens.length [CD]
Line_9 $$ int nvalues = 0 --> Line_36 $$ nvalues = tokens.length [FD]
Line_34 $$ while ((s = br.readLine()) != null) --> Line_37 $$ firstName = (String) tokens[0] [CD]
Line_4 $$ String firstName --> Line_37 $$ firstName = (String) tokens[0] [FD]
Line_34 $$ while ((s = br.readLine()) != null) --> Line_38 $$ if (((String) tokens[0]).length() == 0) [CD]
Line_38 $$ if (((String) tokens[0]).length() == 0) --> Line_39 $$ readraw = false [CD]
Line_18 $$ boolean readraw = false --> Line_39 $$ readraw = false [FD]
Line_38 $$ if (((String) tokens[0]).length() == 0) --> Line_40 $$ readfit = false [CD]
Line_17 $$ boolean readfit = false --> Line_40 $$ readfit = false [FD]
Line_34 $$ while ((s = br.readLine()) != null) --> Line_43 $$ if ((nvalues == 4) && (!firstName.startsWith("---"))) [CD]
Line_37 $$ firstName = (String) tokens[0] --> Line_43 $$ if ((nvalues == 4) && (!firstName.startsWith("---"))) [FD]
Line_4 $$ String firstName --> Line_43 $$ if ((nvalues == 4) && (!firstName.startsWith("---"))) [FD]
Line_43 $$ if ((nvalues == 4) && (!firstName.startsWith("---"))) --> Line_44 $$ if ((Double.parseDouble(tokens[1]) == 0.) && (Double.parseDouble(tokens[2]) == 0.) && (Double.parseDouble(tokens[3]) == 0.)) [CD]
Line_44 $$ if ((Double.parseDouble(tokens[1]) == 0.) && (Double.parseDouble(tokens[2]) == 0.) && (Double.parseDouble(tokens[3]) == 0.)) --> Line_45 $$ zerodata = true [CD]
Line_19 $$ boolean zerodata = false --> Line_45 $$ zerodata = true [FD]
Line_44 $$ if ((Double.parseDouble(tokens[1]) == 0.) && (Double.parseDouble(tokens[2]) == 0.) && (Double.parseDouble(tokens[3]) == 0.)) --> Line_47 $$ zerodata = false [CD]
Line_45 $$ zerodata = true --> Line_47 $$ zerodata = false [FD]
Line_19 $$ boolean zerodata = false --> Line_47 $$ zerodata = false [FD]
Line_43 $$ if ((nvalues == 4) && (!firstName.startsWith("---"))) --> Line_49 $$ if (tokens[1].equals("NaN") || tokens[2].equals("NaN") || tokens[3].equals("NaN")) [CD]
Line_49 $$ if (tokens[1].equals("NaN") || tokens[2].equals("NaN") || tokens[3].equals("NaN")) --> Line_50 $$ baddata = true [CD]
Line_20 $$ boolean baddata = false --> Line_50 $$ baddata = true [FD]
Line_49 $$ if (tokens[1].equals("NaN") || tokens[2].equals("NaN") || tokens[3].equals("NaN")) --> Line_52 $$ baddata = false [CD]
Line_50 $$ baddata = true --> Line_52 $$ baddata = false [FD]
Line_20 $$ boolean baddata = false --> Line_52 $$ baddata = false [FD]
Line_34 $$ while ((s = br.readLine()) != null) --> Line_55 $$ if (firstName.startsWith("start")) [CD]
Line_37 $$ firstName = (String) tokens[0] --> Line_55 $$ if (firstName.startsWith("start")) [FD]
Line_4 $$ String firstName --> Line_55 $$ if (firstName.startsWith("start")) [FD]
Line_55 $$ if (firstName.startsWith("start")) --> Line_56 $$ header = s [CD]
Line_5 $$ String header --> Line_56 $$ header = s [FD]
Line_34 $$ while ((s = br.readLine()) != null) --> Line_56 $$ header = s [FD]
Line_3 $$ String s --> Line_56 $$ header = s [FD]
Line_34 $$ while ((s = br.readLine()) != null) --> Line_58 $$ if (firstName.indexOf("WS") > 0) [CD]
Line_37 $$ firstName = (String) tokens[0] --> Line_58 $$ if (firstName.indexOf("WS") > 0) [FD]
Line_4 $$ String firstName --> Line_58 $$ if (firstName.indexOf("WS") > 0) [FD]
Line_58 $$ if (firstName.indexOf("WS") > 0) --> Line_59 $$ if (name != null) [CD]
Line_6 $$ String name = null --> Line_59 $$ if (name != null) [FD]
Line_59 $$ if (name != null) --> Line_60 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [CD]
Line_6 $$ String name = null --> Line_60 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [FD]
Line_22 $$ ArrayList fitparams = new ArrayList() --> Line_60 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [FD]
Line_26 $$ ArrayList sraw = new ArrayList() --> Line_60 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [FD]
Line_27 $$ ArrayList sxraw = new ArrayList() --> Line_60 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [FD]
Line_28 $$ ArrayList syraw = new ArrayList() --> Line_60 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [FD]
Line_29 $$ ArrayList szraw = new ArrayList() --> Line_60 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [FD]
Line_24 $$ ArrayList yraw = new ArrayList() --> Line_60 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [FD]
Line_25 $$ ArrayList zraw = new ArrayList() --> Line_60 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [FD]
Line_23 $$ ArrayList xraw = new ArrayList() --> Line_60 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [FD]
Line_58 $$ if (firstName.indexOf("WS") > 0) --> Line_62 $$ name = tokens[0] [CD]
Line_6 $$ String name = null --> Line_62 $$ name = tokens[0] [FD]
Line_58 $$ if (firstName.indexOf("WS") > 0) --> Line_63 $$ readraw = false [CD]
Line_39 $$ readraw = false --> Line_63 $$ readraw = false [FD]
Line_18 $$ boolean readraw = false --> Line_63 $$ readraw = false [FD]
Line_58 $$ if (firstName.indexOf("WS") > 0) --> Line_64 $$ readfit = false [CD]
Line_40 $$ readfit = false --> Line_64 $$ readfit = false [FD]
Line_17 $$ boolean readfit = false --> Line_64 $$ readfit = false [FD]
Line_58 $$ if (firstName.indexOf("WS") > 0) --> Line_65 $$ zerodata = false [CD]
Line_45 $$ zerodata = true --> Line_65 $$ zerodata = false [FD]
Line_47 $$ zerodata = false --> Line_65 $$ zerodata = false [FD]
Line_19 $$ boolean zerodata = false --> Line_65 $$ zerodata = false [FD]
Line_58 $$ if (firstName.indexOf("WS") > 0) --> Line_66 $$ baddata = false [CD]
Line_50 $$ baddata = true --> Line_66 $$ baddata = false [FD]
Line_52 $$ baddata = false --> Line_66 $$ baddata = false [FD]
Line_20 $$ boolean baddata = false --> Line_66 $$ baddata = false [FD]
Line_58 $$ if (firstName.indexOf("WS") > 0) --> Line_67 $$ harpdata = false [CD]
Line_21 $$ boolean harpdata = false --> Line_67 $$ harpdata = false [FD]
Line_58 $$ if (firstName.indexOf("WS") > 0) --> Line_68 $$ fitparams.clear() [CD]
Line_22 $$ ArrayList fitparams = new ArrayList() --> Line_68 $$ fitparams.clear() [FD]
Line_58 $$ if (firstName.indexOf("WS") > 0) --> Line_69 $$ xraw.clear() [CD]
Line_23 $$ ArrayList xraw = new ArrayList() --> Line_69 $$ xraw.clear() [FD]
Line_58 $$ if (firstName.indexOf("WS") > 0) --> Line_70 $$ yraw.clear() [CD]
Line_24 $$ ArrayList yraw = new ArrayList() --> Line_70 $$ yraw.clear() [FD]
Line_58 $$ if (firstName.indexOf("WS") > 0) --> Line_71 $$ zraw.clear() [CD]
Line_25 $$ ArrayList zraw = new ArrayList() --> Line_71 $$ zraw.clear() [FD]
Line_58 $$ if (firstName.indexOf("WS") > 0) --> Line_72 $$ sraw.clear() [CD]
Line_26 $$ ArrayList sraw = new ArrayList() --> Line_72 $$ sraw.clear() [FD]
Line_58 $$ if (firstName.indexOf("WS") > 0) --> Line_73 $$ sxraw.clear() [CD]
Line_27 $$ ArrayList sxraw = new ArrayList() --> Line_73 $$ sxraw.clear() [FD]
Line_58 $$ if (firstName.indexOf("WS") > 0) --> Line_74 $$ syraw.clear() [CD]
Line_28 $$ ArrayList syraw = new ArrayList() --> Line_74 $$ syraw.clear() [FD]
Line_58 $$ if (firstName.indexOf("WS") > 0) --> Line_75 $$ szraw.clear() [CD]
Line_29 $$ ArrayList szraw = new ArrayList() --> Line_75 $$ szraw.clear() [FD]
Line_34 $$ while ((s = br.readLine()) != null) --> Line_77 $$ if (firstName.startsWith("Area")) [CD]
Line_37 $$ firstName = (String) tokens[0] --> Line_77 $$ if (firstName.startsWith("Area")) [FD]
Line_4 $$ String firstName --> Line_77 $$ if (firstName.startsWith("Area")) [FD]
Line_34 $$ while ((s = br.readLine()) != null) --> Line_78 $$ if (firstName.startsWith("Ampl")) [CD]
Line_37 $$ firstName = (String) tokens[0] --> Line_78 $$ if (firstName.startsWith("Ampl")) [FD]
Line_4 $$ String firstName --> Line_78 $$ if (firstName.startsWith("Ampl")) [FD]
Line_34 $$ while ((s = br.readLine()) != null) --> Line_79 $$ if (firstName.startsWith("Mean")) [CD]
Line_37 $$ firstName = (String) tokens[0] --> Line_79 $$ if (firstName.startsWith("Mean")) [FD]
Line_4 $$ String firstName --> Line_79 $$ if (firstName.startsWith("Mean")) [FD]
Line_34 $$ while ((s = br.readLine()) != null) --> Line_80 $$ if (firstName.startsWith("Sigma")) [CD]
Line_37 $$ firstName = (String) tokens[0] --> Line_80 $$ if (firstName.startsWith("Sigma")) [FD]
Line_4 $$ String firstName --> Line_80 $$ if (firstName.startsWith("Sigma")) [FD]
Line_80 $$ if (firstName.startsWith("Sigma")) --> Line_81 $$ fitparams.add(new Double(Double.parseDouble(tokens[3]))) [CD]
Line_22 $$ ArrayList fitparams = new ArrayList() --> Line_81 $$ fitparams.add(new Double(Double.parseDouble(tokens[3]))) [FD]
Line_80 $$ if (firstName.startsWith("Sigma")) --> Line_82 $$ fitparams.add(new Double(Double.parseDouble(tokens[1]))) [CD]
Line_22 $$ ArrayList fitparams = new ArrayList() --> Line_82 $$ fitparams.add(new Double(Double.parseDouble(tokens[1]))) [FD]
Line_80 $$ if (firstName.startsWith("Sigma")) --> Line_83 $$ fitparams.add(new Double(Double.parseDouble(tokens[5]))) [CD]
Line_22 $$ ArrayList fitparams = new ArrayList() --> Line_83 $$ fitparams.add(new Double(Double.parseDouble(tokens[5]))) [FD]
Line_34 $$ while ((s = br.readLine()) != null) --> Line_85 $$ if (firstName.startsWith("Offset")) [CD]
Line_37 $$ firstName = (String) tokens[0] --> Line_85 $$ if (firstName.startsWith("Offset")) [FD]
Line_4 $$ String firstName --> Line_85 $$ if (firstName.startsWith("Offset")) [FD]
Line_34 $$ while ((s = br.readLine()) != null) --> Line_86 $$ if (firstName.startsWith("Slope")) [CD]
Line_37 $$ firstName = (String) tokens[0] --> Line_86 $$ if (firstName.startsWith("Slope")) [FD]
Line_4 $$ String firstName --> Line_86 $$ if (firstName.startsWith("Slope")) [FD]
Line_34 $$ while ((s = br.readLine()) != null) --> Line_87 $$ if ((firstName.equals("Position")) && (((String) tokens[2]).equals("Raw"))) [CD]
Line_37 $$ firstName = (String) tokens[0] --> Line_87 $$ if ((firstName.equals("Position")) && (((String) tokens[2]).equals("Raw"))) [FD]
Line_4 $$ String firstName --> Line_87 $$ if ((firstName.equals("Position")) && (((String) tokens[2]).equals("Raw"))) [FD]
Line_87 $$ if ((firstName.equals("Position")) && (((String) tokens[2]).equals("Raw"))) --> Line_88 $$ readraw = true [CD]
Line_39 $$ readraw = false --> Line_88 $$ readraw = true [FD]
Line_63 $$ readraw = false --> Line_88 $$ readraw = true [FD]
Line_18 $$ boolean readraw = false --> Line_88 $$ readraw = true [FD]
Line_34 $$ while ((s = br.readLine()) != null) --> Line_91 $$ if ((firstName.equals("Position")) && (((String) tokens[2]).equals("Fit"))) [CD]
Line_37 $$ firstName = (String) tokens[0] --> Line_91 $$ if ((firstName.equals("Position")) && (((String) tokens[2]).equals("Fit"))) [FD]
Line_4 $$ String firstName --> Line_91 $$ if ((firstName.equals("Position")) && (((String) tokens[2]).equals("Fit"))) [FD]
Line_91 $$ if ((firstName.equals("Position")) && (((String) tokens[2]).equals("Fit"))) --> Line_92 $$ readfit = true [CD]
Line_40 $$ readfit = false --> Line_92 $$ readfit = true [FD]
Line_64 $$ readfit = false --> Line_92 $$ readfit = true [FD]
Line_17 $$ boolean readfit = false --> Line_92 $$ readfit = true [FD]
Line_34 $$ while ((s = br.readLine()) != null) --> Line_95 $$ if ((firstName.contains("Harp"))) [CD]
Line_37 $$ firstName = (String) tokens[0] --> Line_95 $$ if ((firstName.contains("Harp"))) [FD]
Line_4 $$ String firstName --> Line_95 $$ if ((firstName.contains("Harp"))) [FD]
Line_95 $$ if ((firstName.contains("Harp"))) --> Line_96 $$ xraw.clear() [CD]
Line_23 $$ ArrayList xraw = new ArrayList() --> Line_96 $$ xraw.clear() [FD]
Line_95 $$ if ((firstName.contains("Harp"))) --> Line_97 $$ yraw.clear() [CD]
Line_24 $$ ArrayList yraw = new ArrayList() --> Line_97 $$ yraw.clear() [FD]
Line_95 $$ if ((firstName.contains("Harp"))) --> Line_98 $$ zraw.clear() [CD]
Line_25 $$ ArrayList zraw = new ArrayList() --> Line_98 $$ zraw.clear() [FD]
Line_95 $$ if ((firstName.contains("Harp"))) --> Line_99 $$ sraw.clear() [CD]
Line_26 $$ ArrayList sraw = new ArrayList() --> Line_99 $$ sraw.clear() [FD]
Line_95 $$ if ((firstName.contains("Harp"))) --> Line_100 $$ sxraw.clear() [CD]
Line_27 $$ ArrayList sxraw = new ArrayList() --> Line_100 $$ sxraw.clear() [FD]
Line_95 $$ if ((firstName.contains("Harp"))) --> Line_101 $$ syraw.clear() [CD]
Line_28 $$ ArrayList syraw = new ArrayList() --> Line_101 $$ syraw.clear() [FD]
Line_95 $$ if ((firstName.contains("Harp"))) --> Line_102 $$ szraw.clear() [CD]
Line_29 $$ ArrayList szraw = new ArrayList() --> Line_102 $$ szraw.clear() [FD]
Line_95 $$ if ((firstName.contains("Harp"))) --> Line_103 $$ harpdata = true [CD]
Line_67 $$ harpdata = false --> Line_103 $$ harpdata = true [FD]
Line_21 $$ boolean harpdata = false --> Line_103 $$ harpdata = true [FD]
Line_95 $$ if ((firstName.contains("Harp"))) --> Line_104 $$ readraw = true [CD]
Line_39 $$ readraw = false --> Line_104 $$ readraw = true [FD]
Line_63 $$ readraw = false --> Line_104 $$ readraw = true [FD]
Line_88 $$ readraw = true --> Line_104 $$ readraw = true [FD]
Line_18 $$ boolean readraw = false --> Line_104 $$ readraw = true [FD]
Line_95 $$ if ((firstName.contains("Harp"))) --> Line_105 $$ name = tokens[0] [CD]
Line_62 $$ name = tokens[0] --> Line_105 $$ name = tokens[0] [FD]
Line_6 $$ String name = null --> Line_105 $$ name = tokens[0] [FD]
Line_34 $$ while ((s = br.readLine()) != null) --> Line_108 $$ if (firstName.startsWith("---")) [CD]
Line_37 $$ firstName = (String) tokens[0] --> Line_108 $$ if (firstName.startsWith("---")) [FD]
Line_4 $$ String firstName --> Line_108 $$ if (firstName.startsWith("---")) [FD]
Line_34 $$ while ((s = br.readLine()) != null) --> Line_109 $$ if (harpdata == true) [CD]
Line_67 $$ harpdata = false --> Line_109 $$ if (harpdata == true) [FD]
Line_103 $$ harpdata = true --> Line_109 $$ if (harpdata == true) [FD]
Line_21 $$ boolean harpdata = false --> Line_109 $$ if (harpdata == true) [FD]
Line_109 $$ if (harpdata == true) --> Line_110 $$ if (((String) tokens[0]).length() != 0) [CD]
Line_110 $$ if (((String) tokens[0]).length() != 0) --> Line_111 $$ if (firstName.startsWith("PVLogger")) [CD]
Line_37 $$ firstName = (String) tokens[0] --> Line_111 $$ if (firstName.startsWith("PVLogger")) [FD]
Line_4 $$ String firstName --> Line_111 $$ if (firstName.startsWith("PVLogger")) [FD]
Line_7 $$ Integer PVLoggerID = new Integer(0) --> Line_113 $$ PVLoggerID = new Integer(Integer.parseInt(tokens[2])) [FD]
Line_111 $$ if (firstName.startsWith("PVLogger")) --> Line_117 $$ sxraw.add(new Double(Double.parseDouble(tokens[0]))) [CD]
Line_27 $$ ArrayList sxraw = new ArrayList() --> Line_117 $$ sxraw.add(new Double(Double.parseDouble(tokens[0]))) [FD]
Line_111 $$ if (firstName.startsWith("PVLogger")) --> Line_118 $$ xraw.add(new Double(Double.parseDouble(tokens[1]))) [CD]
Line_23 $$ ArrayList xraw = new ArrayList() --> Line_118 $$ xraw.add(new Double(Double.parseDouble(tokens[1]))) [FD]
Line_111 $$ if (firstName.startsWith("PVLogger")) --> Line_119 $$ syraw.add(new Double(Double.parseDouble(tokens[2]))) [CD]
Line_28 $$ ArrayList syraw = new ArrayList() --> Line_119 $$ syraw.add(new Double(Double.parseDouble(tokens[2]))) [FD]
Line_111 $$ if (firstName.startsWith("PVLogger")) --> Line_120 $$ yraw.add(new Double(Double.parseDouble(tokens[3]))) [CD]
Line_24 $$ ArrayList yraw = new ArrayList() --> Line_120 $$ yraw.add(new Double(Double.parseDouble(tokens[3]))) [FD]
Line_111 $$ if (firstName.startsWith("PVLogger")) --> Line_121 $$ szraw.add(new Double(Double.parseDouble(tokens[4]))) [CD]
Line_29 $$ ArrayList szraw = new ArrayList() --> Line_121 $$ szraw.add(new Double(Double.parseDouble(tokens[4]))) [FD]
Line_111 $$ if (firstName.startsWith("PVLogger")) --> Line_122 $$ zraw.add(new Double(Double.parseDouble(tokens[5]))) [CD]
Line_25 $$ ArrayList zraw = new ArrayList() --> Line_122 $$ zraw.add(new Double(Double.parseDouble(tokens[5]))) [FD]
Line_34 $$ while ((s = br.readLine()) != null) --> Line_127 $$ if (readraw && (!zerodata) && (!baddata)) [CD]
Line_45 $$ zerodata = true --> Line_127 $$ if (readraw && (!zerodata) && (!baddata)) [FD]
Line_47 $$ zerodata = false --> Line_127 $$ if (readraw && (!zerodata) && (!baddata)) [FD]
Line_65 $$ zerodata = false --> Line_127 $$ if (readraw && (!zerodata) && (!baddata)) [FD]
Line_19 $$ boolean zerodata = false --> Line_127 $$ if (readraw && (!zerodata) && (!baddata)) [FD]
Line_50 $$ baddata = true --> Line_127 $$ if (readraw && (!zerodata) && (!baddata)) [FD]
Line_52 $$ baddata = false --> Line_127 $$ if (readraw && (!zerodata) && (!baddata)) [FD]
Line_66 $$ baddata = false --> Line_127 $$ if (readraw && (!zerodata) && (!baddata)) [FD]
Line_20 $$ boolean baddata = false --> Line_127 $$ if (readraw && (!zerodata) && (!baddata)) [FD]
Line_127 $$ if (readraw && (!zerodata) && (!baddata)) --> Line_128 $$ sraw.add(new Double(Double.parseDouble(tokens[0]) / Math.sqrt(2.0))) [CD]
Line_26 $$ ArrayList sraw = new ArrayList() --> Line_128 $$ sraw.add(new Double(Double.parseDouble(tokens[0]) / Math.sqrt(2.0))) [FD]
Line_127 $$ if (readraw && (!zerodata) && (!baddata)) --> Line_129 $$ sxraw.add(new Double(Double.parseDouble(tokens[0]) / Math.sqrt(2.0))) [CD]
Line_27 $$ ArrayList sxraw = new ArrayList() --> Line_129 $$ sxraw.add(new Double(Double.parseDouble(tokens[0]) / Math.sqrt(2.0))) [FD]
Line_127 $$ if (readraw && (!zerodata) && (!baddata)) --> Line_130 $$ syraw.add(new Double(Double.parseDouble(tokens[0]) / Math.sqrt(2.0))) [CD]
Line_28 $$ ArrayList syraw = new ArrayList() --> Line_130 $$ syraw.add(new Double(Double.parseDouble(tokens[0]) / Math.sqrt(2.0))) [FD]
Line_127 $$ if (readraw && (!zerodata) && (!baddata)) --> Line_131 $$ szraw.add(new Double(Double.parseDouble(tokens[0]))) [CD]
Line_29 $$ ArrayList szraw = new ArrayList() --> Line_131 $$ szraw.add(new Double(Double.parseDouble(tokens[0]))) [FD]
Line_127 $$ if (readraw && (!zerodata) && (!baddata)) --> Line_132 $$ yraw.add(new Double(Double.parseDouble(tokens[1]))) [CD]
Line_24 $$ ArrayList yraw = new ArrayList() --> Line_132 $$ yraw.add(new Double(Double.parseDouble(tokens[1]))) [FD]
Line_127 $$ if (readraw && (!zerodata) && (!baddata)) --> Line_133 $$ zraw.add(new Double(Double.parseDouble(tokens[2]))) [CD]
Line_25 $$ ArrayList zraw = new ArrayList() --> Line_133 $$ zraw.add(new Double(Double.parseDouble(tokens[2]))) [FD]
Line_127 $$ if (readraw && (!zerodata) && (!baddata)) --> Line_134 $$ xraw.add(new Double(Double.parseDouble(tokens[3]))) [CD]
Line_23 $$ ArrayList xraw = new ArrayList() --> Line_134 $$ xraw.add(new Double(Double.parseDouble(tokens[3]))) [FD]
Line_34 $$ while ((s = br.readLine()) != null) --> Line_136 $$ if (firstName.startsWith("PVLogger")) [CD]
Line_37 $$ firstName = (String) tokens[0] --> Line_136 $$ if (firstName.startsWith("PVLogger")) [FD]
Line_4 $$ String firstName --> Line_136 $$ if (firstName.startsWith("PVLogger")) [FD]
Line_113 $$ PVLoggerID = new Integer(Integer.parseInt(tokens[2])) --> Line_138 $$ PVLoggerID = new Integer(Integer.parseInt(tokens[2])) [FD]
Line_7 $$ Integer PVLoggerID = new Integer(0) --> Line_138 $$ PVLoggerID = new Integer(Integer.parseInt(tokens[2])) [FD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_143 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [CD]
Line_62 $$ name = tokens[0] --> Line_143 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [FD]
Line_105 $$ name = tokens[0] --> Line_143 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [FD]
Line_6 $$ String name = null --> Line_143 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [FD]
Line_22 $$ ArrayList fitparams = new ArrayList() --> Line_143 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [FD]
Line_26 $$ ArrayList sraw = new ArrayList() --> Line_143 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [FD]
Line_27 $$ ArrayList sxraw = new ArrayList() --> Line_143 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [FD]
Line_28 $$ ArrayList syraw = new ArrayList() --> Line_143 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [FD]
Line_29 $$ ArrayList szraw = new ArrayList() --> Line_143 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [FD]
Line_24 $$ ArrayList yraw = new ArrayList() --> Line_143 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [FD]
Line_25 $$ ArrayList zraw = new ArrayList() --> Line_143 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [FD]
Line_23 $$ ArrayList xraw = new ArrayList() --> Line_143 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [FD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_144 $$ wiredata.add((Integer) PVLoggerID) [CD]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException --> Line_145 $$ return wiredata [CD]
Line_62 $$ name = tokens[0] --> Line_59 $$ if (name != null) [FD]
Line_105 $$ name = tokens[0] --> Line_59 $$ if (name != null) [FD]
Line_62 $$ name = tokens[0] --> Line_60 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [FD]
Line_105 $$ name = tokens[0] --> Line_60 $$ dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw) [FD]
