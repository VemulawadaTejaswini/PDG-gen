Line_2 $$ public void jsFunction_addFile(ScriptableFile infile) throws IOException --> Line_3 $$ if (!infile.jsFunction_exists()) [CD]
Line_2 $$ public void jsFunction_addFile(ScriptableFile infile) throws IOException --> Line_3 $$ if (!infile.jsFunction_exists()) [FD]
Line_2 $$ public void jsFunction_addFile(ScriptableFile infile) throws IOException --> Line_4 $$ ZipArchiveEntry entry = new ZipArchiveEntry(infile.getName()) [CD]
Line_2 $$ public void jsFunction_addFile(ScriptableFile infile) throws IOException --> Line_4 $$ ZipArchiveEntry entry = new ZipArchiveEntry(infile.getName()) [FD]
Line_2 $$ public void jsFunction_addFile(ScriptableFile infile) throws IOException --> Line_5 $$ entry.setSize(infile.jsFunction_getSize()) [CD]
Line_2 $$ public void jsFunction_addFile(ScriptableFile infile) throws IOException --> Line_5 $$ entry.setSize(infile.jsFunction_getSize()) [FD]
Line_2 $$ public void jsFunction_addFile(ScriptableFile infile) throws IOException --> Line_6 $$ out.putArchiveEntry(entry) [CD]
Line_2 $$ public void jsFunction_addFile(ScriptableFile infile) throws IOException --> Line_8 $$ InputStream inStream = infile.jsFunction_createInputStream() [FD]
Line_8 $$ InputStream inStream = infile.jsFunction_createInputStream() --> Line_9 $$ IOUtils.copy(inStream, out) [FD]
Line_8 $$ InputStream inStream = infile.jsFunction_createInputStream() --> Line_10 $$ inStream.close() [FD]
