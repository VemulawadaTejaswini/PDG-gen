Line_2 $$ private SpequlosResponse executeGet(String targetURL, String urlParameters) --> Line_3 $$ URL url [CD]
Line_2 $$ private SpequlosResponse executeGet(String targetURL, String urlParameters) --> Line_4 $$ HttpURLConnection connection = null [CD]
Line_2 $$ private SpequlosResponse executeGet(String targetURL, String urlParameters) --> Line_5 $$ boolean succ = false [CD]
Line_3 $$ URL url --> Line_7 $$ url = new URL(targetURL + "?" + urlParameters) [FD]
Line_4 $$ HttpURLConnection connection = null --> Line_8 $$ connection = (HttpURLConnection) url.openConnection() [FD]
Line_3 $$ URL url --> Line_8 $$ connection = (HttpURLConnection) url.openConnection() [FD]
Line_7 $$ url = new URL(targetURL + "?" + urlParameters) --> Line_8 $$ connection = (HttpURLConnection) url.openConnection() [FD]
Line_4 $$ HttpURLConnection connection = null --> Line_9 $$ connection.setRequestMethod("GET") [FD]
Line_8 $$ connection = (HttpURLConnection) url.openConnection() --> Line_9 $$ connection.setRequestMethod("GET") [FD]
Line_4 $$ HttpURLConnection connection = null --> Line_10 $$ connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded") [FD]
Line_8 $$ connection = (HttpURLConnection) url.openConnection() --> Line_10 $$ connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded") [FD]
Line_4 $$ HttpURLConnection connection = null --> Line_11 $$ connection.setRequestProperty("Content-Length", "" + Integer.toString(urlParameters.getBytes().length)) [FD]
Line_8 $$ connection = (HttpURLConnection) url.openConnection() --> Line_11 $$ connection.setRequestProperty("Content-Length", "" + Integer.toString(urlParameters.getBytes().length)) [FD]
Line_2 $$ private SpequlosResponse executeGet(String targetURL, String urlParameters) --> Line_11 $$ connection.setRequestProperty("Content-Length", "" + Integer.toString(urlParameters.getBytes().length)) [FD]
Line_4 $$ HttpURLConnection connection = null --> Line_12 $$ connection.setRequestProperty("Content-Language", "en-US") [FD]
Line_8 $$ connection = (HttpURLConnection) url.openConnection() --> Line_12 $$ connection.setRequestProperty("Content-Language", "en-US") [FD]
Line_4 $$ HttpURLConnection connection = null --> Line_13 $$ connection.setUseCaches(false) [FD]
Line_8 $$ connection = (HttpURLConnection) url.openConnection() --> Line_13 $$ connection.setUseCaches(false) [FD]
Line_4 $$ HttpURLConnection connection = null --> Line_14 $$ connection.setDoInput(true) [FD]
Line_8 $$ connection = (HttpURLConnection) url.openConnection() --> Line_14 $$ connection.setDoInput(true) [FD]
Line_4 $$ HttpURLConnection connection = null --> Line_15 $$ connection.setDoOutput(true) [FD]
Line_8 $$ connection = (HttpURLConnection) url.openConnection() --> Line_15 $$ connection.setDoOutput(true) [FD]
Line_4 $$ HttpURLConnection connection = null --> Line_16 $$ InputStream is = connection.getInputStream() [FD]
Line_8 $$ connection = (HttpURLConnection) url.openConnection() --> Line_16 $$ InputStream is = connection.getInputStream() [FD]
Line_18 $$ String line --> Line_21 $$ while ((line = rd.readLine()) != null) [FD]
Line_17 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(is)) --> Line_21 $$ while ((line = rd.readLine()) != null) [FD]
Line_21 $$ while ((line = rd.readLine()) != null) --> Line_22 $$ if (line.startsWith("<div class=\"qos\">")) [CD]
Line_21 $$ while ((line = rd.readLine()) != null) --> Line_22 $$ if (line.startsWith("<div class=\"qos\">")) [FD]
Line_18 $$ String line --> Line_22 $$ if (line.startsWith("<div class=\"qos\">")) [FD]
Line_21 $$ while ((line = rd.readLine()) != null) --> Line_24 $$ String resp = line.split(">")[1].split("<")[0] [FD]
Line_18 $$ String line --> Line_24 $$ String resp = line.split(">")[1].split("<")[0] [FD]
Line_24 $$ String resp = line.split(">")[1].split("<")[0] --> Line_26 $$ if (!resp.startsWith("None")) [FD]
Line_26 $$ if (!resp.startsWith("None")) --> Line_27 $$ succ = true [CD]
Line_5 $$ boolean succ = false --> Line_27 $$ succ = true [FD]
Line_26 $$ if (!resp.startsWith("None")) --> Line_28 $$ String[] values = resp.split(" ") [CD]
Line_24 $$ String resp = line.split(">")[1].split("<")[0] --> Line_28 $$ String[] values = resp.split(" ") [FD]
Line_26 $$ if (!resp.startsWith("None")) --> Line_29 $$ ArrayList<String> realvalues = new ArrayList<String>() [CD]
Line_29 $$ ArrayList<String> realvalues = new ArrayList<String>() --> Line_31 $$ realvalues.add(s) [FD]
Line_30 $$ for (String s : values) --> Line_31 $$ realvalues.add(s) [FD]
Line_26 $$ if (!resp.startsWith("None")) --> Line_33 $$ if (realvalues.size() == 5) [CD]
Line_29 $$ ArrayList<String> realvalues = new ArrayList<String>() --> Line_33 $$ if (realvalues.size() == 5) [FD]
Line_33 $$ if (realvalues.size() == 5) --> Line_34 $$ realvalues.add(2, realvalues.get(2) + " " + realvalues.get(3)) [CD]
Line_29 $$ ArrayList<String> realvalues = new ArrayList<String>() --> Line_34 $$ realvalues.add(2, realvalues.get(2) + " " + realvalues.get(3)) [FD]
Line_33 $$ if (realvalues.size() == 5) --> Line_35 $$ realvalues.remove(3) [CD]
Line_29 $$ ArrayList<String> realvalues = new ArrayList<String>() --> Line_35 $$ realvalues.remove(3) [FD]
Line_33 $$ if (realvalues.size() == 5) --> Line_36 $$ realvalues.remove(3) [CD]
Line_29 $$ ArrayList<String> realvalues = new ArrayList<String>() --> Line_36 $$ realvalues.remove(3) [FD]
Line_20 $$ ArrayList<String> response = new ArrayList<String>() --> Line_39 $$ response.add(n) [FD]
Line_38 $$ for (String n : realvalues) --> Line_39 $$ response.add(n) [FD]
Line_19 $$ StringBuffer log = new StringBuffer() --> Line_43 $$ log.append(line) [FD]
Line_21 $$ while ((line = rd.readLine()) != null) --> Line_43 $$ log.append(line) [FD]
Line_18 $$ String line --> Line_43 $$ log.append(line) [FD]
Line_19 $$ StringBuffer log = new StringBuffer() --> Line_44 $$ log.append('\r') [FD]
Line_17 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(is)) --> Line_47 $$ rd.close() [FD]
Line_19 $$ StringBuffer log = new StringBuffer() --> Line_48 $$ SpequlosResponse speqresp = new SpequlosResponse(response, log.toString(), succ) [FD]
Line_4 $$ HttpURLConnection connection = null --> Line_55 $$ if (connection != null) [FD]
Line_8 $$ connection = (HttpURLConnection) url.openConnection() --> Line_55 $$ if (connection != null) [FD]
