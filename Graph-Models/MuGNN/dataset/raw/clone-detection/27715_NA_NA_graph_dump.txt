Line_5 $$ if (args[0].equals("-e")) --> Line_6 $$ encodeFlag = Base64.ENCODE [CD]
Line_4 $$ int encodeFlag = 0 --> Line_6 $$ encodeFlag = Base64.ENCODE [FD]
Line_5 $$ if (args[0].equals("-e")) --> Line_7 $$ if (args[0].equals("-d")) [CD]
Line_7 $$ if (args[0].equals("-d")) --> Line_8 $$ encodeFlag = Base64.DECODE [CD]
Line_4 $$ int encodeFlag = 0 --> Line_8 $$ encodeFlag = Base64.DECODE [FD]
Line_6 $$ encodeFlag = Base64.ENCODE --> Line_8 $$ encodeFlag = Base64.DECODE [FD]
Line_20 $$ int read = -1 --> Line_21 $$ while ((read = b64in.read(buff)) >= 0) [FD]
Line_15 $$ Base64.InputStream b64in = new Base64.InputStream(bis, encodeFlag | Base64.DO_BREAK_LINES) --> Line_21 $$ while ((read = b64in.read(buff)) >= 0) [FD]
Line_19 $$ byte[] buff = new byte[1024] --> Line_21 $$ while ((read = b64in.read(buff)) >= 0) [FD]
Line_21 $$ while ((read = b64in.read(buff)) >= 0) --> Line_22 $$ bos.write(buff, 0, read) [CD]
Line_21 $$ while ((read = b64in.read(buff)) >= 0) --> Line_22 $$ bos.write(buff, 0, read) [FD]
Line_18 $$ BufferedOutputStream bos = new BufferedOutputStream(fos) --> Line_22 $$ bos.write(buff, 0, read) [FD]
Line_19 $$ byte[] buff = new byte[1024] --> Line_22 $$ bos.write(buff, 0, read) [FD]
Line_20 $$ int read = -1 --> Line_22 $$ bos.write(buff, 0, read) [FD]
Line_18 $$ BufferedOutputStream bos = new BufferedOutputStream(fos) --> Line_24 $$ bos.close() [FD]
Line_15 $$ Base64.InputStream b64in = new Base64.InputStream(bis, encodeFlag | Base64.DO_BREAK_LINES) --> Line_25 $$ b64in.close() [FD]
