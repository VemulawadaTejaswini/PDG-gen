Line_2 $$ private void translate(String sender, String message) --> Line_3 $$ StringTokenizer st = new StringTokenizer(message, " ") [CD]
Line_2 $$ private void translate(String sender, String message) --> Line_4 $$ message = message.replaceFirst(st.nextToken(), "") [CD]
Line_2 $$ private void translate(String sender, String message) --> Line_4 $$ message = message.replaceFirst(st.nextToken(), "") [FD]
Line_3 $$ StringTokenizer st = new StringTokenizer(message, " ") --> Line_4 $$ message = message.replaceFirst(st.nextToken(), "") [FD]
Line_2 $$ private void translate(String sender, String message) --> Line_5 $$ String typeCode = st.nextToken() [CD]
Line_3 $$ StringTokenizer st = new StringTokenizer(message, " ") --> Line_5 $$ String typeCode = st.nextToken() [FD]
Line_2 $$ private void translate(String sender, String message) --> Line_6 $$ message = message.replaceFirst(typeCode, "") [CD]
Line_2 $$ private void translate(String sender, String message) --> Line_6 $$ message = message.replaceFirst(typeCode, "") [FD]
Line_4 $$ message = message.replaceFirst(st.nextToken(), "") --> Line_6 $$ message = message.replaceFirst(typeCode, "") [FD]
Line_5 $$ String typeCode = st.nextToken() --> Line_6 $$ message = message.replaceFirst(typeCode, "") [FD]
Line_2 $$ private void translate(String sender, String message) --> Line_8 $$ String data = URLEncoder.encode(message, "UTF-8") [FD]
Line_4 $$ message = message.replaceFirst(st.nextToken(), "") --> Line_8 $$ String data = URLEncoder.encode(message, "UTF-8") [FD]
Line_6 $$ message = message.replaceFirst(typeCode, "") --> Line_8 $$ String data = URLEncoder.encode(message, "UTF-8") [FD]
Line_9 $$ URL url = new URL("http://babelfish.altavista.com/babelfish/tr?doit=done&urltext=" + data + "&lp=" + typeCode) --> Line_10 $$ URLConnection conn = url.openConnection() [FD]
Line_10 $$ URLConnection conn = url.openConnection() --> Line_11 $$ conn.setDoOutput(true) [FD]
Line_10 $$ URLConnection conn = url.openConnection() --> Line_12 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream()) [FD]
Line_12 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream()) --> Line_13 $$ wr.write(data) [FD]
Line_8 $$ String data = URLEncoder.encode(message, "UTF-8") --> Line_13 $$ wr.write(data) [FD]
Line_12 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream()) --> Line_14 $$ wr.flush() [FD]
Line_10 $$ URLConnection conn = url.openConnection() --> Line_15 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())) [FD]
Line_16 $$ String line --> Line_17 $$ while ((line = rd.readLine()) != null) [FD]
Line_15 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())) --> Line_17 $$ while ((line = rd.readLine()) != null) [FD]
Line_17 $$ while ((line = rd.readLine()) != null) --> Line_18 $$ if (line.contains("input type=hidden name=\"q\"")) [CD]
Line_17 $$ while ((line = rd.readLine()) != null) --> Line_18 $$ if (line.contains("input type=hidden name=\"q\"")) [FD]
Line_16 $$ String line --> Line_18 $$ if (line.contains("input type=hidden name=\"q\"")) [FD]
Line_18 $$ if (line.contains("input type=hidden name=\"q\"")) --> Line_19 $$ String[] tokens = line.split("\"") [CD]
Line_17 $$ while ((line = rd.readLine()) != null) --> Line_19 $$ String[] tokens = line.split("\"") [FD]
Line_16 $$ String line --> Line_19 $$ String[] tokens = line.split("\"") [FD]
Line_18 $$ if (line.contains("input type=hidden name=\"q\"")) --> Line_20 $$ sendMessage(sender, tokens[3]) [CD]
Line_2 $$ private void translate(String sender, String message) --> Line_20 $$ sendMessage(sender, tokens[3]) [FD]
Line_12 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream()) --> Line_23 $$ wr.close() [FD]
Line_15 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())) --> Line_24 $$ rd.close() [FD]
