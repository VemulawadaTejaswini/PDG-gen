Line_2 $$ protected Object unmarshallXml(final Unmarshaller unmarshaller, final String accessUrl, final String nameSpace, final String replace, final String with) throws Exception --> Line_3 $$ final URL url = new URL(accessUrl) [CD]
Line_2 $$ protected Object unmarshallXml(final Unmarshaller unmarshaller, final String accessUrl, final String nameSpace, final String replace, final String with) throws Exception --> Line_4 $$ final BufferedReader inputStream = new BufferedReader(new InputStreamReader(url.openStream())) [CD]
Line_3 $$ final URL url = new URL(accessUrl) --> Line_4 $$ final BufferedReader inputStream = new BufferedReader(new InputStreamReader(url.openStream())) [FD]
Line_2 $$ protected Object unmarshallXml(final Unmarshaller unmarshaller, final String accessUrl, final String nameSpace, final String replace, final String with) throws Exception --> Line_5 $$ String xmlContent = readWithStringBuffer(inputStream) [CD]
Line_4 $$ final BufferedReader inputStream = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_5 $$ String xmlContent = readWithStringBuffer(inputStream) [FD]
Line_2 $$ protected Object unmarshallXml(final Unmarshaller unmarshaller, final String accessUrl, final String nameSpace, final String replace, final String with) throws Exception --> Line_6 $$ if (replace != null) [CD]
Line_2 $$ protected Object unmarshallXml(final Unmarshaller unmarshaller, final String accessUrl, final String nameSpace, final String replace, final String with) throws Exception --> Line_6 $$ if (replace != null) [FD]
Line_6 $$ if (replace != null) --> Line_7 $$ xmlContent = xmlContent.replace(replace, with) [CD]
Line_5 $$ String xmlContent = readWithStringBuffer(inputStream) --> Line_7 $$ xmlContent = xmlContent.replace(replace, with) [FD]
Line_2 $$ protected Object unmarshallXml(final Unmarshaller unmarshaller, final String accessUrl, final String nameSpace, final String replace, final String with) throws Exception --> Line_7 $$ xmlContent = xmlContent.replace(replace, with) [FD]
Line_2 $$ protected Object unmarshallXml(final Unmarshaller unmarshaller, final String accessUrl, final String nameSpace, final String replace, final String with) throws Exception --> Line_9 $$ LOGGER.info("Calls " + accessUrl) [CD]
Line_2 $$ protected Object unmarshallXml(final Unmarshaller unmarshaller, final String accessUrl, final String nameSpace, final String replace, final String with) throws Exception --> Line_10 $$ if (LOGGER.isDebugEnabled()) [CD]
Line_10 $$ if (LOGGER.isDebugEnabled()) --> Line_11 $$ LOGGER.debug("\nXml:" + accessUrl + "\n" + xmlContent) [CD]
Line_2 $$ protected Object unmarshallXml(final Unmarshaller unmarshaller, final String accessUrl, final String nameSpace, final String replace, final String with) throws Exception --> Line_13 $$ if (LOGGER.isDebugEnabled()) [CD]
Line_13 $$ if (LOGGER.isDebugEnabled()) --> Line_14 $$ final BufferedWriter out = new BufferedWriter(new FileWriter("target/XmlAgentLog" + xmlRequestNumber++ + ".txt")) [CD]
Line_13 $$ if (LOGGER.isDebugEnabled()) --> Line_15 $$ out.write(xmlContent) [CD]
Line_14 $$ final BufferedWriter out = new BufferedWriter(new FileWriter("target/XmlAgentLog" + xmlRequestNumber++ + ".txt")) --> Line_15 $$ out.write(xmlContent) [FD]
Line_5 $$ String xmlContent = readWithStringBuffer(inputStream) --> Line_15 $$ out.write(xmlContent) [FD]
Line_7 $$ xmlContent = xmlContent.replace(replace, with) --> Line_15 $$ out.write(xmlContent) [FD]
Line_13 $$ if (LOGGER.isDebugEnabled()) --> Line_16 $$ out.close() [CD]
Line_14 $$ final BufferedWriter out = new BufferedWriter(new FileWriter("target/XmlAgentLog" + xmlRequestNumber++ + ".txt")) --> Line_16 $$ out.close() [FD]
Line_2 $$ protected Object unmarshallXml(final Unmarshaller unmarshaller, final String accessUrl, final String nameSpace, final String replace, final String with) throws Exception --> Line_18 $$ final ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xmlContent.getBytes()) [CD]
Line_5 $$ String xmlContent = readWithStringBuffer(inputStream) --> Line_18 $$ final ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xmlContent.getBytes()) [FD]
Line_7 $$ xmlContent = xmlContent.replace(replace, with) --> Line_18 $$ final ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xmlContent.getBytes()) [FD]
Line_2 $$ protected Object unmarshallXml(final Unmarshaller unmarshaller, final String accessUrl, final String nameSpace, final String replace, final String with) throws Exception --> Line_19 $$ Source source [CD]
Line_2 $$ protected Object unmarshallXml(final Unmarshaller unmarshaller, final String accessUrl, final String nameSpace, final String replace, final String with) throws Exception --> Line_20 $$ if (nameSpace != null) [CD]
Line_2 $$ protected Object unmarshallXml(final Unmarshaller unmarshaller, final String accessUrl, final String nameSpace, final String replace, final String with) throws Exception --> Line_20 $$ if (nameSpace != null) [FD]
Line_20 $$ if (nameSpace != null) --> Line_21 $$ source = setNameSpaceOnXmlStream(byteArrayInputStream, nameSpace) [CD]
Line_19 $$ Source source --> Line_21 $$ source = setNameSpaceOnXmlStream(byteArrayInputStream, nameSpace) [FD]
Line_18 $$ final ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xmlContent.getBytes()) --> Line_21 $$ source = setNameSpaceOnXmlStream(byteArrayInputStream, nameSpace) [FD]
Line_2 $$ protected Object unmarshallXml(final Unmarshaller unmarshaller, final String accessUrl, final String nameSpace, final String replace, final String with) throws Exception --> Line_21 $$ source = setNameSpaceOnXmlStream(byteArrayInputStream, nameSpace) [FD]
Line_20 $$ if (nameSpace != null) --> Line_23 $$ source = new StreamSource(byteArrayInputStream) [CD]
Line_19 $$ Source source --> Line_23 $$ source = new StreamSource(byteArrayInputStream) [FD]
Line_21 $$ source = setNameSpaceOnXmlStream(byteArrayInputStream, nameSpace) --> Line_23 $$ source = new StreamSource(byteArrayInputStream) [FD]
Line_2 $$ protected Object unmarshallXml(final Unmarshaller unmarshaller, final String accessUrl, final String nameSpace, final String replace, final String with) throws Exception --> Line_25 $$ return unmarshaller.unmarshal(source) [CD]
Line_2 $$ protected Object unmarshallXml(final Unmarshaller unmarshaller, final String accessUrl, final String nameSpace, final String replace, final String with) throws Exception --> Line_25 $$ return unmarshaller.unmarshal(source) [FD]
Line_19 $$ Source source --> Line_25 $$ return unmarshaller.unmarshal(source) [FD]
Line_21 $$ source = setNameSpaceOnXmlStream(byteArrayInputStream, nameSpace) --> Line_25 $$ return unmarshaller.unmarshal(source) [FD]
Line_23 $$ source = new StreamSource(byteArrayInputStream) --> Line_25 $$ return unmarshaller.unmarshal(source) [FD]
