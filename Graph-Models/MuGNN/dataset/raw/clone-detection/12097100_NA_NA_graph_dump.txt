Line_2 $$ public void getStation(String prefecture, String line) --> Line_3 $$ HttpClient httpclient = null [CD]
Line_3 $$ HttpClient httpclient = null --> Line_5 $$ httpclient = new DefaultHttpClient() [FD]
Line_6 $$ List<NameValuePair> qparams = new ArrayList<NameValuePair>() --> Line_7 $$ qparams.add(new BasicNameValuePair("method", "getStations")) [FD]
Line_6 $$ List<NameValuePair> qparams = new ArrayList<NameValuePair>() --> Line_8 $$ qparams.add(new BasicNameValuePair("prefecture", prefecture)) [FD]
Line_6 $$ List<NameValuePair> qparams = new ArrayList<NameValuePair>() --> Line_9 $$ qparams.add(new BasicNameValuePair("line", line)) [FD]
Line_6 $$ List<NameValuePair> qparams = new ArrayList<NameValuePair>() --> Line_10 $$ URI uri = URIUtils.createURI("http", "express.heartrails.com", -1, "/api/xml", URLEncodedUtils.format(qparams, "UTF-8"), null) [FD]
Line_3 $$ HttpClient httpclient = null --> Line_12 $$ HttpResponse response = httpclient.execute(httpget) [FD]
Line_5 $$ httpclient = new DefaultHttpClient() --> Line_12 $$ HttpResponse response = httpclient.execute(httpget) [FD]
Line_11 $$ HttpGet httpget = new HttpGet(uri) --> Line_12 $$ HttpResponse response = httpclient.execute(httpget) [FD]
Line_12 $$ HttpResponse response = httpclient.execute(httpget) --> Line_13 $$ HttpEntity entity = response.getEntity() [FD]
Line_13 $$ HttpEntity entity = response.getEntity() --> Line_14 $$ InputStream instream = entity.getContent() [FD]
Line_17 $$ String str --> Line_18 $$ while ((str = reader.readLine()) != null) [FD]
Line_15 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(instream, "UTF-8")) --> Line_18 $$ while ((str = reader.readLine()) != null) [FD]
Line_18 $$ while ((str = reader.readLine()) != null) --> Line_19 $$ buf.append(str) [CD]
Line_18 $$ while ((str = reader.readLine()) != null) --> Line_19 $$ buf.append(str) [FD]
Line_16 $$ StringBuffer buf = new StringBuffer() --> Line_19 $$ buf.append(str) [FD]
Line_17 $$ String str --> Line_19 $$ buf.append(str) [FD]
Line_18 $$ while ((str = reader.readLine()) != null) --> Line_20 $$ buf.append("\n") [CD]
Line_16 $$ StringBuffer buf = new StringBuffer() --> Line_20 $$ buf.append("\n") [FD]
Line_15 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(instream, "UTF-8")) --> Line_22 $$ reader.close() [FD]
Line_16 $$ StringBuffer buf = new StringBuffer() --> Line_23 $$ stationRes = new StationResponse(buf.toString()) [FD]
