Line_2 $$ protected void setRankOrder() --> Line_3 $$ this.rankOrder = new int[values.length] [CD]
Line_2 $$ protected void setRankOrder() --> Line_4 $$ for (int i = 0; i < rankOrder.length; i++) [CD]
Line_4 $$ for (int i = 0; i < rankOrder.length; i++) --> Line_5 $$ rankOrder[i] = i [CD]
Line_4 $$ for (int i = 0; i < rankOrder.length; i++) --> Line_5 $$ rankOrder[i] = i [FD]
Line_2 $$ protected void setRankOrder() --> Line_8 $$ for (int i = rankOrder.length - 1; i >= 0; i--) [CD]
Line_4 $$ for (int i = 0; i < rankOrder.length; i++) --> Line_8 $$ for (int i = rankOrder.length - 1; i >= 0; i--) [FD]
Line_8 $$ for (int i = rankOrder.length - 1; i >= 0; i--) --> Line_9 $$ boolean swapped = false [CD]
Line_8 $$ for (int i = rankOrder.length - 1; i >= 0; i--) --> Line_10 $$ for (int j = 0; j < i; j++) if (values[rankOrder[j]] < values[rankOrder[j + 1]]) [CD]
Line_8 $$ for (int i = rankOrder.length - 1; i >= 0; i--) --> Line_10 $$ for (int j = 0; j < i; j++) if (values[rankOrder[j]] < values[rankOrder[j + 1]]) [FD]
Line_4 $$ for (int i = 0; i < rankOrder.length; i++) --> Line_10 $$ for (int j = 0; j < i; j++) if (values[rankOrder[j]] < values[rankOrder[j + 1]]) [FD]
Line_10 $$ for (int j = 0; j < i; j++) if (values[rankOrder[j]] < values[rankOrder[j + 1]]) --> Line_11 $$ int r = rankOrder[j] [CD]
Line_10 $$ for (int j = 0; j < i; j++) if (values[rankOrder[j]] < values[rankOrder[j + 1]]) --> Line_12 $$ rankOrder[j] = rankOrder[j + 1] [CD]
Line_10 $$ for (int j = 0; j < i; j++) if (values[rankOrder[j]] < values[rankOrder[j + 1]]) --> Line_13 $$ rankOrder[j + 1] = r [CD]
Line_11 $$ int r = rankOrder[j] --> Line_13 $$ rankOrder[j + 1] = r [FD]
