Line_2 $$ public boolean receiveFile(FileDescriptor fileDescriptor) --> Line_7 $$ File dir = new File(Constants.DOWNLOAD_DIR + fileDescriptor.getLocation()) [FD]
Line_7 $$ File dir = new File(Constants.DOWNLOAD_DIR + fileDescriptor.getLocation()) --> Line_8 $$ if (!dir.exists()) [FD]
Line_8 $$ if (!dir.exists()) --> Line_9 $$ dir.mkdirs() [CD]
Line_7 $$ File dir = new File(Constants.DOWNLOAD_DIR + fileDescriptor.getLocation()) --> Line_9 $$ dir.mkdirs() [FD]
Line_2 $$ public boolean receiveFile(FileDescriptor fileDescriptor) --> Line_11 $$ File file = new File(Constants.DOWNLOAD_DIR + fileDescriptor.getLocation() + fileDescriptor.getName()) [FD]
Line_11 $$ File file = new File(Constants.DOWNLOAD_DIR + fileDescriptor.getLocation() + fileDescriptor.getName()) --> Line_12 $$ if (!file.exists()) [FD]
Line_12 $$ if (!file.exists()) --> Line_13 $$ file.createNewFile() [CD]
Line_11 $$ File file = new File(Constants.DOWNLOAD_DIR + fileDescriptor.getLocation() + fileDescriptor.getName()) --> Line_13 $$ file.createNewFile() [FD]
Line_15 $$ SSLSocket sslsocket = getFileTransferConectionConnectMode(ServerAdress.getServerAdress()) --> Line_17 $$ InputStream dataIn = sslsocket.getInputStream() [FD]
Line_5 $$ int sizeRead = 0 --> Line_18 $$ while ((sizeRead = dataIn.read(block)) >= 0) [FD]
Line_17 $$ InputStream dataIn = sslsocket.getInputStream() --> Line_18 $$ while ((sizeRead = dataIn.read(block)) >= 0) [FD]
Line_4 $$ byte[] block = new byte[1024] --> Line_18 $$ while ((sizeRead = dataIn.read(block)) >= 0) [FD]
Line_18 $$ while ((sizeRead = dataIn.read(block)) >= 0) --> Line_19 $$ totalRead += sizeRead [CD]
Line_18 $$ while ((sizeRead = dataIn.read(block)) >= 0) --> Line_19 $$ totalRead += sizeRead [FD]
Line_6 $$ int totalRead = 0 --> Line_19 $$ totalRead += sizeRead [FD]
Line_5 $$ int sizeRead = 0 --> Line_19 $$ totalRead += sizeRead [FD]
Line_18 $$ while ((sizeRead = dataIn.read(block)) >= 0) --> Line_20 $$ fileOut.write(block, 0, sizeRead) [CD]
Line_18 $$ while ((sizeRead = dataIn.read(block)) >= 0) --> Line_20 $$ fileOut.write(block, 0, sizeRead) [FD]
Line_16 $$ OutputStream fileOut = new FileOutputStream(file) --> Line_20 $$ fileOut.write(block, 0, sizeRead) [FD]
Line_4 $$ byte[] block = new byte[1024] --> Line_20 $$ fileOut.write(block, 0, sizeRead) [FD]
Line_5 $$ int sizeRead = 0 --> Line_20 $$ fileOut.write(block, 0, sizeRead) [FD]
Line_18 $$ while ((sizeRead = dataIn.read(block)) >= 0) --> Line_21 $$ propertyChangeSupport.firePropertyChange("fileByte", 0, totalRead) [CD]
Line_19 $$ totalRead += sizeRead --> Line_21 $$ propertyChangeSupport.firePropertyChange("fileByte", 0, totalRead) [FD]
Line_6 $$ int totalRead = 0 --> Line_21 $$ propertyChangeSupport.firePropertyChange("fileByte", 0, totalRead) [FD]
Line_16 $$ OutputStream fileOut = new FileOutputStream(file) --> Line_23 $$ fileOut.close() [FD]
Line_17 $$ InputStream dataIn = sslsocket.getInputStream() --> Line_24 $$ dataIn.close() [FD]
Line_15 $$ SSLSocket sslsocket = getFileTransferConectionConnectMode(ServerAdress.getServerAdress()) --> Line_25 $$ sslsocket.close() [FD]
Line_2 $$ public boolean receiveFile(FileDescriptor fileDescriptor) --> Line_26 $$ if (fileDescriptor.getName().contains(".snapshot")) [FD]
Line_2 $$ public boolean receiveFile(FileDescriptor fileDescriptor) --> Line_28 $$ File fileData = new File(Constants.DOWNLOAD_DIR + fileDescriptor.getLocation() + fileDescriptor.getName()) [FD]
Line_28 $$ File fileData = new File(Constants.DOWNLOAD_DIR + fileDescriptor.getLocation() + fileDescriptor.getName()) --> Line_30 $$ File destino = new File(dirData, fileData.getName()) [FD]
Line_28 $$ File fileData = new File(Constants.DOWNLOAD_DIR + fileDescriptor.getLocation() + fileDescriptor.getName()) --> Line_31 $$ boolean success = fileData.renameTo(destino) [FD]
Line_30 $$ File destino = new File(dirData, fileData.getName()) --> Line_31 $$ boolean success = fileData.renameTo(destino) [FD]
Line_31 $$ boolean success = fileData.renameTo(destino) --> Line_32 $$ if (!success) [FD]
Line_32 $$ if (!success) --> Line_33 $$ deleteDir(Constants.DOWNLOAD_DIR) [CD]
Line_32 $$ if (!success) --> Line_34 $$ return false [CD]
Line_26 $$ if (fileDescriptor.getName().contains(".snapshot")) --> Line_41 $$ if (Server.isServerOpen()) [CD]
Line_41 $$ if (Server.isServerOpen()) --> Line_42 $$ FileChannel inFileChannel = new FileInputStream(file).getChannel() [CD]
Line_41 $$ if (Server.isServerOpen()) --> Line_43 $$ File dirServer = new File(Constants.DOWNLOAD_DIR + fileDescriptor.getLocation()) [CD]
Line_2 $$ public boolean receiveFile(FileDescriptor fileDescriptor) --> Line_43 $$ File dirServer = new File(Constants.DOWNLOAD_DIR + fileDescriptor.getLocation()) [FD]
Line_41 $$ if (Server.isServerOpen()) --> Line_44 $$ if (!dirServer.exists()) [CD]
Line_43 $$ File dirServer = new File(Constants.DOWNLOAD_DIR + fileDescriptor.getLocation()) --> Line_44 $$ if (!dirServer.exists()) [FD]
Line_44 $$ if (!dirServer.exists()) --> Line_45 $$ dirServer.mkdirs() [CD]
Line_43 $$ File dirServer = new File(Constants.DOWNLOAD_DIR + fileDescriptor.getLocation()) --> Line_45 $$ dirServer.mkdirs() [FD]
Line_41 $$ if (Server.isServerOpen()) --> Line_47 $$ File fileServer = new File(Constants.DOWNLOAD_DIR + fileDescriptor.getName()) [CD]
Line_2 $$ public boolean receiveFile(FileDescriptor fileDescriptor) --> Line_47 $$ File fileServer = new File(Constants.DOWNLOAD_DIR + fileDescriptor.getName()) [FD]
Line_41 $$ if (Server.isServerOpen()) --> Line_48 $$ if (!fileServer.exists()) [CD]
Line_47 $$ File fileServer = new File(Constants.DOWNLOAD_DIR + fileDescriptor.getName()) --> Line_48 $$ if (!fileServer.exists()) [FD]
Line_48 $$ if (!fileServer.exists()) --> Line_49 $$ fileServer.createNewFile() [CD]
Line_47 $$ File fileServer = new File(Constants.DOWNLOAD_DIR + fileDescriptor.getName()) --> Line_49 $$ fileServer.createNewFile() [FD]
Line_41 $$ if (Server.isServerOpen()) --> Line_51 $$ inFileChannel.transferTo(0, inFileChannel.size(), new FileOutputStream(fileServer).getChannel()) [CD]
Line_42 $$ FileChannel inFileChannel = new FileInputStream(file).getChannel() --> Line_51 $$ inFileChannel.transferTo(0, inFileChannel.size(), new FileOutputStream(fileServer).getChannel()) [FD]
Line_41 $$ if (Server.isServerOpen()) --> Line_52 $$ inFileChannel.close() [CD]
Line_42 $$ FileChannel inFileChannel = new FileInputStream(file).getChannel() --> Line_52 $$ inFileChannel.close() [FD]
Line_19 $$ totalRead += sizeRead --> Line_55 $$ if (totalRead == fileDescriptor.getSize()) [FD]
Line_6 $$ int totalRead = 0 --> Line_55 $$ if (totalRead == fileDescriptor.getSize()) [FD]
Line_2 $$ public boolean receiveFile(FileDescriptor fileDescriptor) --> Line_55 $$ if (totalRead == fileDescriptor.getSize()) [FD]
Line_55 $$ if (totalRead == fileDescriptor.getSize()) --> Line_56 $$ return true [CD]
Line_2 $$ public boolean receiveFile(FileDescriptor fileDescriptor) --> Line_61 $$ return false [CD]
