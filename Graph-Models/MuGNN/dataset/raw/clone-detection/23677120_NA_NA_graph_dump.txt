Line_2 $$ public static void unzip1(File zipfile, File outputdir) throws IOException --> Line_4 $$ //Buffer for copying the files out of the zip input stream [CD]
Line_2 $$ public static void unzip1(File zipfile, File outputdir) throws IOException --> Line_6 $$ //Create parent output directory if it doesn't exist [CD]
Line_2 $$ public static void unzip1(File zipfile, File outputdir) throws IOException --> Line_6 $$ //Create parent output directory if it doesn't exist [FD]
Line_6 $$ //Create parent output directory if it doesn't exist --> Line_7 $$ outputdir.mkdirs() [CD]
Line_2 $$ public static void unzip1(File zipfile, File outputdir) throws IOException --> Line_7 $$ outputdir.mkdirs() [FD]
Line_2 $$ public static void unzip1(File zipfile, File outputdir) throws IOException --> Line_11 $$ //Create the zip input stream [CD]
Line_2 $$ public static void unzip1(File zipfile, File outputdir) throws IOException --> Line_13 $$ //Iterate through the entries of the zip file, and extract them to the output directory [CD]
Line_11 $$ //Create the zip input stream --> Line_13 $$ //Iterate through the entries of the zip file, and extract them to the output directory [FD]
Line_2 $$ public static void unzip1(File zipfile, File outputdir) throws IOException --> Line_14 $$ while (ae != null) [CD]
Line_13 $$ //Iterate through the entries of the zip file, and extract them to the output directory --> Line_14 $$ while (ae != null) [FD]
Line_14 $$ while (ae != null) --> Line_16 $$ //Resolve new file [CD]
Line_13 $$ //Iterate through the entries of the zip file, and extract them to the output directory --> Line_16 $$ //Resolve new file [FD]
Line_14 $$ while (ae != null) --> Line_18 $$ //Create parent directories if not exists [CD]
Line_16 $$ //Resolve new file --> Line_18 $$ //Create parent directories if not exists [FD]
Line_18 $$ //Create parent directories if not exists --> Line_19 $$ newFile.getParentFile().mkdirs() [CD]
Line_16 $$ //Resolve new file --> Line_19 $$ newFile.getParentFile().mkdirs() [FD]
Line_14 $$ while (ae != null) --> Line_20 $$ if (//If directory, create if not exists [CD]
Line_13 $$ //Iterate through the entries of the zip file, and extract them to the output directory --> Line_20 $$ if (//If directory, create if not exists [FD]
Line_20 $$ if (//If directory, create if not exists --> Line_21 $$ if (!newFile.exists()) [CD]
Line_16 $$ //Resolve new file --> Line_21 $$ if (!newFile.exists()) [FD]
Line_21 $$ if (!newFile.exists()) --> Line_22 $$ newFile.mkdir() [CD]
Line_16 $$ //Resolve new file --> Line_22 $$ newFile.mkdir() [FD]
Line_20 $$ if (//If directory, create if not exists --> Line_24 $$ FileOutputStream fos = new FileOutputStream(newFile) [CD]
Line_20 $$ if (//If directory, create if not exists --> Line_25 $$ int len [CD]
Line_20 $$ if (//If directory, create if not exists --> Line_26 $$ while ((len = zis.read(buffer)) > 0) [CD]
Line_25 $$ int len --> Line_26 $$ while ((len = zis.read(buffer)) > 0) [FD]
Line_11 $$ //Create the zip input stream --> Line_26 $$ while ((len = zis.read(buffer)) > 0) [FD]
Line_4 $$ //Buffer for copying the files out of the zip input stream --> Line_26 $$ while ((len = zis.read(buffer)) > 0) [FD]
Line_26 $$ while ((len = zis.read(buffer)) > 0) --> Line_27 $$ fos.write(buffer, 0, len) [CD]
Line_26 $$ while ((len = zis.read(buffer)) > 0) --> Line_27 $$ fos.write(buffer, 0, len) [FD]
Line_24 $$ FileOutputStream fos = new FileOutputStream(newFile) --> Line_27 $$ fos.write(buffer, 0, len) [FD]
Line_4 $$ //Buffer for copying the files out of the zip input stream --> Line_27 $$ fos.write(buffer, 0, len) [FD]
Line_25 $$ int len --> Line_27 $$ fos.write(buffer, 0, len) [FD]
Line_20 $$ if (//If directory, create if not exists --> Line_29 $$ fos.close() [CD]
Line_24 $$ FileOutputStream fos = new FileOutputStream(newFile) --> Line_29 $$ fos.close() [FD]
Line_14 $$ while (ae != null) --> Line_32 $$ //Proceed to the next entry in the zip file [CD]
Line_13 $$ //Iterate through the entries of the zip file, and extract them to the output directory --> Line_32 $$ //Proceed to the next entry in the zip file [FD]
Line_11 $$ //Create the zip input stream --> Line_32 $$ //Proceed to the next entry in the zip file [FD]
Line_2 $$ public static void unzip1(File zipfile, File outputdir) throws IOException --> Line_35 $$ //Cleanup [CD]
Line_11 $$ //Create the zip input stream --> Line_35 $$ //Cleanup [FD]
Line_32 $$ //Proceed to the next entry in the zip file --> Line_14 $$ while (ae != null) [FD]
Line_32 $$ //Proceed to the next entry in the zip file --> Line_16 $$ //Resolve new file [FD]
Line_32 $$ //Proceed to the next entry in the zip file --> Line_20 $$ if (//If directory, create if not exists [FD]
