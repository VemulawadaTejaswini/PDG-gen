Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException --> Line_3 $$ Git git = Git.getCurrent(req.getSession()) [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException --> Line_3 $$ Git git = Git.getCurrent(req.getSession()) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException --> Line_4 $$ GitComponentReader gitReader = git.getComponentReader("warpinjector") [CD]
Line_3 $$ Git git = Git.getCurrent(req.getSession()) --> Line_4 $$ GitComponentReader gitReader = git.getComponentReader("warpinjector") [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException --> Line_5 $$ String id = req.getParameter("id") [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException --> Line_5 $$ String id = req.getParameter("id") [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException --> Line_6 $$ GitElement element = gitReader.getElement(id) [CD]
Line_4 $$ GitComponentReader gitReader = git.getComponentReader("warpinjector") --> Line_6 $$ GitElement element = gitReader.getElement(id) [FD]
Line_5 $$ String id = req.getParameter("id") --> Line_6 $$ GitElement element = gitReader.getElement(id) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException --> Line_7 $$ String path = (String) element.getAttribute("targetdir") [CD]
Line_6 $$ GitElement element = gitReader.getElement(id) --> Line_7 $$ String path = (String) element.getAttribute("targetdir") [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException --> Line_8 $$ File folder = new File(path) [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException --> Line_9 $$ PrintWriter out = helper.getPrintWriter(resp) [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException --> Line_9 $$ PrintWriter out = helper.getPrintWriter(resp) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException --> Line_10 $$ MessageBundle messageBundle = new MessageBundle("net.sf.warpcore.cms/servlets/InjectorServletMessages") [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException --> Line_11 $$ Locale locale = req.getLocale() [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException --> Line_11 $$ Locale locale = req.getLocale() [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException --> Line_12 $$ helper.header(out, messageBundle, locale) [CD]
Line_9 $$ PrintWriter out = helper.getPrintWriter(resp) --> Line_12 $$ helper.header(out, messageBundle, locale) [FD]
Line_10 $$ MessageBundle messageBundle = new MessageBundle("net.sf.warpcore.cms/servlets/InjectorServletMessages") --> Line_12 $$ helper.header(out, messageBundle, locale) [FD]
Line_11 $$ Locale locale = req.getLocale() --> Line_12 $$ helper.header(out, messageBundle, locale) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException --> Line_13 $$ if (git.getUser() == null) [CD]
Line_3 $$ Git git = Git.getCurrent(req.getSession()) --> Line_13 $$ if (git.getUser() == null) [FD]
Line_13 $$ if (git.getUser() == null) --> Line_14 $$ helper.notLoggedIn(out, messageBundle, locale) [CD]
Line_9 $$ PrintWriter out = helper.getPrintWriter(resp) --> Line_14 $$ helper.notLoggedIn(out, messageBundle, locale) [FD]
Line_10 $$ MessageBundle messageBundle = new MessageBundle("net.sf.warpcore.cms/servlets/InjectorServletMessages") --> Line_14 $$ helper.notLoggedIn(out, messageBundle, locale) [FD]
Line_11 $$ Locale locale = req.getLocale() --> Line_14 $$ helper.notLoggedIn(out, messageBundle, locale) [FD]
Line_17 $$ MultiPartRequest request = new MultiPartRequest(req) --> Line_18 $$ FileInfo info = request.getFileInfo("userfile") [FD]
Line_18 $$ FileInfo info = request.getFileInfo("userfile") --> Line_19 $$ File file = info.getFile() [FD]
Line_9 $$ PrintWriter out = helper.getPrintWriter(resp) --> Line_20 $$ out.println("tempfile found: " + file.getPath() + "<br>") [FD]
Line_19 $$ File file = info.getFile() --> Line_20 $$ out.println("tempfile found: " + file.getPath() + "<br>") [FD]
Line_18 $$ FileInfo info = request.getFileInfo("userfile") --> Line_21 $$ String fileName = info.getFileName() [FD]
Line_9 $$ PrintWriter out = helper.getPrintWriter(resp) --> Line_23 $$ out.println("copying tempfile to: " + target.getPath() + "<br>") [FD]
Line_22 $$ File target = new File(folder, fileName) --> Line_23 $$ out.println("copying tempfile to: " + target.getPath() + "<br>") [FD]
Line_27 $$ int n --> Line_28 $$ while ((n = fis.read(buf)) > 0) fos.write(buf, 0, n) [FD]
Line_24 $$ FileInputStream fis = new FileInputStream(file) --> Line_28 $$ while ((n = fis.read(buf)) > 0) fos.write(buf, 0, n) [FD]
Line_25 $$ FileOutputStream fos = new FileOutputStream(target) --> Line_28 $$ while ((n = fis.read(buf)) > 0) fos.write(buf, 0, n) [FD]
Line_24 $$ FileInputStream fis = new FileInputStream(file) --> Line_29 $$ fis.close() [FD]
Line_25 $$ FileOutputStream fos = new FileOutputStream(target) --> Line_30 $$ fos.close() [FD]
Line_9 $$ PrintWriter out = helper.getPrintWriter(resp) --> Line_31 $$ out.println("copy successful - deleting old tempfile<br>") [FD]
Line_9 $$ PrintWriter out = helper.getPrintWriter(resp) --> Line_32 $$ out.println("deletion result. " + file.delete() + "<p>") [FD]
Line_19 $$ File file = info.getFile() --> Line_32 $$ out.println("deletion result. " + file.delete() + "<p>") [FD]
Line_9 $$ PrintWriter out = helper.getPrintWriter(resp) --> Line_33 $$ out.println(messageBundle.getMessage("Done. The file [FD]
Line_10 $$ MessageBundle messageBundle = new MessageBundle("net.sf.warpcore.cms/servlets/InjectorServletMessages") --> Line_33 $$ out.println(messageBundle.getMessage("Done. The file [FD]
Line_11 $$ Locale locale = req.getLocale() --> Line_33 $$ out.println(messageBundle.getMessage("Done. The file [FD]
Line_9 $$ PrintWriter out = helper.getPrintWriter(resp) --> Line_34 $$ out.println("<p><a href=\"" + req.getRequestURI() + "?id=" + req.getParameter("id") + "\">" + messageBundle.getMessage("Click here to import another file.", locale) + "</a>") [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException --> Line_34 $$ out.println("<p><a href=\"" + req.getRequestURI() + "?id=" + req.getParameter("id") + "\">" + messageBundle.getMessage("Click here to import another file.", locale) + "</a>") [FD]
Line_10 $$ MessageBundle messageBundle = new MessageBundle("net.sf.warpcore.cms/servlets/InjectorServletMessages") --> Line_34 $$ out.println("<p><a href=\"" + req.getRequestURI() + "?id=" + req.getParameter("id") + "\">" + messageBundle.getMessage("Click here to import another file.", locale) + "</a>") [FD]
Line_11 $$ Locale locale = req.getLocale() --> Line_34 $$ out.println("<p><a href=\"" + req.getRequestURI() + "?id=" + req.getParameter("id") + "\">" + messageBundle.getMessage("Click here to import another file.", locale) + "</a>") [FD]
Line_9 $$ PrintWriter out = helper.getPrintWriter(resp) --> Line_36 $$ out.println(messageBundle.getMessage("An error occured: [FD]
Line_10 $$ MessageBundle messageBundle = new MessageBundle("net.sf.warpcore.cms/servlets/InjectorServletMessages") --> Line_36 $$ out.println(messageBundle.getMessage("An error occured: [FD]
Line_11 $$ Locale locale = req.getLocale() --> Line_36 $$ out.println(messageBundle.getMessage("An error occured: [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException --> Line_39 $$ helper.footer(out) [CD]
Line_9 $$ PrintWriter out = helper.getPrintWriter(resp) --> Line_39 $$ helper.footer(out) [FD]
