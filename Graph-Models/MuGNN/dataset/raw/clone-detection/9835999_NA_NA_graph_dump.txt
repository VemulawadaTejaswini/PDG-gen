Line_2 $$ public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException --> Line_8 $$ monitor.beginTask("Uploading log to placelab.org", 100) [FD]
Line_9 $$ StringBuffer dfsb = new SimpleDateFormat("M/dd/yyyy").format(new java.util.Date(), new StringBuffer(), new FieldPosition(0)) --> Line_10 $$ String dateStr = dfsb.toString() [FD]
Line_2 $$ public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException --> Line_11 $$ monitor.subTask("Connecting") [FD]
Line_2 $$ public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException --> Line_12 $$ if (monitor.isCanceled()) [FD]
Line_4 $$ URL url --> Line_13 $$ url = new URL(urlString) [FD]
Line_5 $$ URLConnection urlConn --> Line_14 $$ urlConn = url.openConnection() [FD]
Line_4 $$ URL url --> Line_14 $$ urlConn = url.openConnection() [FD]
Line_13 $$ url = new URL(urlString) --> Line_14 $$ urlConn = url.openConnection() [FD]
Line_5 $$ URLConnection urlConn --> Line_15 $$ urlConn.setDoInput(true) [FD]
Line_14 $$ urlConn = url.openConnection() --> Line_15 $$ urlConn.setDoInput(true) [FD]
Line_5 $$ URLConnection urlConn --> Line_16 $$ urlConn.setDoOutput(true) [FD]
Line_14 $$ urlConn = url.openConnection() --> Line_16 $$ urlConn.setDoOutput(true) [FD]
Line_5 $$ URLConnection urlConn --> Line_17 $$ urlConn.setUseCaches(false) [FD]
Line_14 $$ urlConn = url.openConnection() --> Line_17 $$ urlConn.setUseCaches(false) [FD]
Line_5 $$ URLConnection urlConn --> Line_18 $$ urlConn.setRequestProperty("Content-Type", "application/x-www-form-urlencoded") [FD]
Line_14 $$ urlConn = url.openConnection() --> Line_18 $$ urlConn.setRequestProperty("Content-Type", "application/x-www-form-urlencoded") [FD]
Line_6 $$ DataOutputStream dos --> Line_19 $$ dos = new DataOutputStream(urlConn.getOutputStream()) [FD]
Line_5 $$ URLConnection urlConn --> Line_19 $$ dos = new DataOutputStream(urlConn.getOutputStream()) [FD]
Line_14 $$ urlConn = url.openConnection() --> Line_19 $$ dos = new DataOutputStream(urlConn.getOutputStream()) [FD]
Line_2 $$ public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException --> Line_20 $$ monitor.worked(10) [FD]
Line_2 $$ public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException --> Line_21 $$ monitor.subTask("Encoding headers") [FD]
Line_2 $$ public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException --> Line_22 $$ if (monitor.isCanceled()) [FD]
Line_10 $$ String dateStr = dfsb.toString() --> Line_23 $$ String args = "username=" + URLEncoder.encode(username) + "&" + "passwd=" + URLEncoder.encode(passwd) + "&" + "readDisclaimer=agree&" + "cvt_to_ns=true&" + "trace_device=" + URLEncoder.encode(device) + "&" + "trace_descr=" + URLEncoder.encode(description) + "&" + "mailBack=on&" + "simple_output=true&" + "trace_date=" + URLEncoder.encode(dateStr) + "&" + "trace_data=" [FD]
Line_24 $$ if (header != null) --> Line_25 $$ args = args + URLEncoder.encode(header) [CD]
Line_23 $$ String args = "username=" + URLEncoder.encode(username) + "&" + "passwd=" + URLEncoder.encode(passwd) + "&" + "readDisclaimer=agree&" + "cvt_to_ns=true&" + "trace_device=" + URLEncoder.encode(device) + "&" + "trace_descr=" + URLEncoder.encode(description) + "&" + "mailBack=on&" + "simple_output=true&" + "trace_date=" + URLEncoder.encode(dateStr) + "&" + "trace_data=" --> Line_25 $$ args = args + URLEncoder.encode(header) [FD]
Line_6 $$ DataOutputStream dos --> Line_28 $$ dos.writeBytes(args) [FD]
Line_19 $$ dos = new DataOutputStream(urlConn.getOutputStream()) --> Line_28 $$ dos.writeBytes(args) [FD]
Line_23 $$ String args = "username=" + URLEncoder.encode(username) + "&" + "passwd=" + URLEncoder.encode(passwd) + "&" + "readDisclaimer=agree&" + "cvt_to_ns=true&" + "trace_device=" + URLEncoder.encode(device) + "&" + "trace_descr=" + URLEncoder.encode(description) + "&" + "mailBack=on&" + "simple_output=true&" + "trace_date=" + URLEncoder.encode(dateStr) + "&" + "trace_data=" --> Line_28 $$ dos.writeBytes(args) [FD]
Line_25 $$ args = args + URLEncoder.encode(header) --> Line_28 $$ dos.writeBytes(args) [FD]
Line_2 $$ public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException --> Line_29 $$ monitor.worked(5) [FD]
Line_2 $$ public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException --> Line_30 $$ monitor.subTask("Sending log") [FD]
Line_2 $$ public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException --> Line_31 $$ if (monitor.isCanceled()) [FD]
Line_32 $$ File f = new File(file) --> Line_33 $$ long numBytes = f.length() [FD]
Line_35 $$ boolean done = false --> Line_37 $$ while (!done) [FD]
Line_37 $$ while (!done) --> Line_38 $$ int cnt = is.read(buf, 0, buf.length) [CD]
Line_34 $$ FileInputStream is = new FileInputStream(file) --> Line_38 $$ int cnt = is.read(buf, 0, buf.length) [FD]
Line_36 $$ byte[] buf = new byte[1024] --> Line_38 $$ int cnt = is.read(buf, 0, buf.length) [FD]
Line_37 $$ while (!done) --> Line_39 $$ if (cnt == -1) [CD]
Line_38 $$ int cnt = is.read(buf, 0, buf.length) --> Line_39 $$ if (cnt == -1) [FD]
Line_39 $$ if (cnt == -1) --> Line_40 $$ done = true [CD]
Line_35 $$ boolean done = false --> Line_40 $$ done = true [FD]
Line_39 $$ if (cnt == -1) --> Line_42 $$ if (monitor.isCanceled()) [CD]
Line_2 $$ public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException --> Line_42 $$ if (monitor.isCanceled()) [FD]
Line_39 $$ if (cnt == -1) --> Line_43 $$ dos.writeBytes(URLEncoder.encode(new String(buf, 0, cnt))) [CD]
Line_6 $$ DataOutputStream dos --> Line_43 $$ dos.writeBytes(URLEncoder.encode(new String(buf, 0, cnt))) [FD]
Line_19 $$ dos = new DataOutputStream(urlConn.getOutputStream()) --> Line_43 $$ dos.writeBytes(URLEncoder.encode(new String(buf, 0, cnt))) [FD]
Line_39 $$ if (cnt == -1) --> Line_44 $$ Logger.println(URLEncoder.encode(new String(buf, 0, cnt)), Logger.HIGH) [CD]
Line_39 $$ if (cnt == -1) --> Line_45 $$ monitor.worked((int) (((double) cnt / (double) numBytes) * 80)) [CD]
Line_2 $$ public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException --> Line_45 $$ monitor.worked((int) (((double) cnt / (double) numBytes) * 80)) [FD]
Line_34 $$ FileInputStream is = new FileInputStream(file) --> Line_48 $$ is.close() [FD]
Line_6 $$ DataOutputStream dos --> Line_49 $$ dos.flush() [FD]
Line_19 $$ dos = new DataOutputStream(urlConn.getOutputStream()) --> Line_49 $$ dos.flush() [FD]
Line_6 $$ DataOutputStream dos --> Line_50 $$ dos.close() [FD]
Line_19 $$ dos = new DataOutputStream(urlConn.getOutputStream()) --> Line_50 $$ dos.close() [FD]
Line_2 $$ public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException --> Line_51 $$ monitor.subTask("getting response from placelab.org") [FD]
Line_2 $$ public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException --> Line_52 $$ if (monitor.isCanceled()) [FD]
Line_7 $$ DataInputStream dis --> Line_53 $$ dis = new DataInputStream(urlConn.getInputStream()) [FD]
Line_5 $$ URLConnection urlConn --> Line_53 $$ dis = new DataInputStream(urlConn.getInputStream()) [FD]
Line_14 $$ urlConn = url.openConnection() --> Line_53 $$ dis = new DataInputStream(urlConn.getInputStream()) [FD]
Line_40 $$ done = true --> Line_55 $$ done = false [FD]
Line_35 $$ boolean done = false --> Line_55 $$ done = false [FD]
Line_40 $$ done = true --> Line_56 $$ while (!done) [FD]
Line_35 $$ boolean done = false --> Line_56 $$ while (!done) [FD]
Line_55 $$ done = false --> Line_56 $$ while (!done) [FD]
Line_56 $$ while (!done) --> Line_57 $$ int read = dis.read(buf, 0, buf.length) [CD]
Line_7 $$ DataInputStream dis --> Line_57 $$ int read = dis.read(buf, 0, buf.length) [FD]
Line_53 $$ dis = new DataInputStream(urlConn.getInputStream()) --> Line_57 $$ int read = dis.read(buf, 0, buf.length) [FD]
Line_36 $$ byte[] buf = new byte[1024] --> Line_57 $$ int read = dis.read(buf, 0, buf.length) [FD]
Line_56 $$ while (!done) --> Line_58 $$ if (read == -1) [CD]
Line_57 $$ int read = dis.read(buf, 0, buf.length) --> Line_58 $$ if (read == -1) [FD]
Line_58 $$ if (read == -1) --> Line_59 $$ done = true [CD]
Line_40 $$ done = true --> Line_59 $$ done = true [FD]
Line_35 $$ boolean done = false --> Line_59 $$ done = true [FD]
Line_55 $$ done = false --> Line_59 $$ done = true [FD]
Line_58 $$ if (read == -1) --> Line_61 $$ sb.append(new String(buf, 0, read)) [CD]
Line_54 $$ StringBuffer sb = new StringBuffer() --> Line_61 $$ sb.append(new String(buf, 0, read)) [FD]
Line_54 $$ StringBuffer sb = new StringBuffer() --> Line_64 $$ String s = sb.toString() [FD]
Line_7 $$ DataInputStream dis --> Line_65 $$ dis.close() [FD]
Line_53 $$ dis = new DataInputStream(urlConn.getInputStream()) --> Line_65 $$ dis.close() [FD]
Line_64 $$ String s = sb.toString() --> Line_67 $$ if (s.equals("SUCCESS")) [FD]
Line_67 $$ if (s.equals("SUCCESS")) --> Line_68 $$ Logger.println("Whoo!!!", Logger.HIGH) [CD]
Line_67 $$ if (s.equals("SUCCESS")) --> Line_70 $$ Logger.println("Post Error!", Logger.HIGH) [CD]
Line_2 $$ public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException --> Line_73 $$ monitor.worked(5) [FD]
Line_2 $$ public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException --> Line_74 $$ monitor.done() [FD]
Line_40 $$ done = true --> Line_37 $$ while (!done) [FD]
Line_59 $$ done = true --> Line_56 $$ while (!done) [FD]
