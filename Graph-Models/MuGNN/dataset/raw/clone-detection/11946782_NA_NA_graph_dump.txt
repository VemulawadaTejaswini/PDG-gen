Line_2 $$ public static void addIntegrityEnforcements(Session session) throws HibernateException --> Line_3 $$ Transaction tx = null [CD]
Line_3 $$ Transaction tx = null --> Line_5 $$ tx = session.beginTransaction() [FD]
Line_2 $$ public static void addIntegrityEnforcements(Session session) throws HibernateException --> Line_5 $$ tx = session.beginTransaction() [FD]
Line_2 $$ public static void addIntegrityEnforcements(Session session) throws HibernateException --> Line_6 $$ Statement st = session.connection().createStatement() [FD]
Line_6 $$ Statement st = session.connection().createStatement() --> Line_7 $$ st.executeUpdate("DROP TABLE hresperformsrole;" + "CREATE TABLE hresperformsrole" + "(" + "hresid varchar(255) NOT NULL," + "rolename varchar(255) NOT NULL," + "CONSTRAINT hresperformsrole_pkey PRIMARY KEY (hresid, rolename)," + "CONSTRAINT ResourceFK FOREIGN KEY (hresid) REFERENCES resserposid (id) ON UPDATE CASCADE ON DELETE CASCADE," + "CONSTRAINT RoleFK FOREIGN KEY (rolename) REFERENCES role (rolename) ON UPDATE CASCADE ON DELETE CASCADE" + ");") [FD]
Line_3 $$ Transaction tx = null --> Line_8 $$ tx.commit() [FD]
Line_5 $$ tx = session.beginTransaction() --> Line_8 $$ tx.commit() [FD]
Line_3 $$ Transaction tx = null --> Line_10 $$ tx.rollback() [FD]
Line_5 $$ tx = session.beginTransaction() --> Line_10 $$ tx.rollback() [FD]
