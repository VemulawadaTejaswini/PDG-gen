Line_2 $$ public String post(final FetchInfos fetchInfos, final String data) throws HttpException --> Line_3 $$ URL url = null [CD]
Line_3 $$ URL url = null --> Line_5 $$ url = new URL(fetchInfos.getUri()) [FD]
Line_2 $$ public String post(final FetchInfos fetchInfos, final String data) throws HttpException --> Line_5 $$ url = new URL(fetchInfos.getUri()) [FD]
Line_2 $$ public String post(final FetchInfos fetchInfos, final String data) throws HttpException --> Line_7 $$ throw new HttpException("uri is malformed '" + fetchInfos.getUri() + "'", exception) [FD]
Line_2 $$ public String post(final FetchInfos fetchInfos, final String data) throws HttpException --> Line_9 $$ HttpURLConnection connection = null [CD]
Line_9 $$ HttpURLConnection connection = null --> Line_11 $$ connection = (HttpURLConnection) url.openConnection() [FD]
Line_3 $$ URL url = null --> Line_11 $$ connection = (HttpURLConnection) url.openConnection() [FD]
Line_5 $$ url = new URL(fetchInfos.getUri()) --> Line_11 $$ connection = (HttpURLConnection) url.openConnection() [FD]
Line_2 $$ public String post(final FetchInfos fetchInfos, final String data) throws HttpException --> Line_13 $$ fetchInfos.setResult(FETCHING_RESULT.IO_ERROR) [FD]
Line_2 $$ public String post(final FetchInfos fetchInfos, final String data) throws HttpException --> Line_14 $$ throw new HttpException("get '" + fetchInfos.getUri() + "' failed", exception) [FD]
Line_2 $$ public String post(final FetchInfos fetchInfos, final String data) throws HttpException --> Line_16 $$ InputStream input = null [CD]
Line_9 $$ HttpURLConnection connection = null --> Line_18 $$ connection.setRequestMethod("POST") [FD]
Line_11 $$ connection = (HttpURLConnection) url.openConnection() --> Line_18 $$ connection.setRequestMethod("POST") [FD]
Line_9 $$ HttpURLConnection connection = null --> Line_19 $$ connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded") [FD]
Line_11 $$ connection = (HttpURLConnection) url.openConnection() --> Line_19 $$ connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded") [FD]
Line_9 $$ HttpURLConnection connection = null --> Line_20 $$ connection.setRequestProperty("Content-Length", "" + Integer.toString(data.getBytes().length)) [FD]
Line_11 $$ connection = (HttpURLConnection) url.openConnection() --> Line_20 $$ connection.setRequestProperty("Content-Length", "" + Integer.toString(data.getBytes().length)) [FD]
Line_2 $$ public String post(final FetchInfos fetchInfos, final String data) throws HttpException --> Line_20 $$ connection.setRequestProperty("Content-Length", "" + Integer.toString(data.getBytes().length)) [FD]
Line_9 $$ HttpURLConnection connection = null --> Line_21 $$ final DataOutputStream wr = new DataOutputStream(connection.getOutputStream()) [FD]
Line_11 $$ connection = (HttpURLConnection) url.openConnection() --> Line_21 $$ final DataOutputStream wr = new DataOutputStream(connection.getOutputStream()) [FD]
Line_21 $$ final DataOutputStream wr = new DataOutputStream(connection.getOutputStream()) --> Line_22 $$ wr.writeBytes(data) [FD]
Line_2 $$ public String post(final FetchInfos fetchInfos, final String data) throws HttpException --> Line_22 $$ wr.writeBytes(data) [FD]
Line_21 $$ final DataOutputStream wr = new DataOutputStream(connection.getOutputStream()) --> Line_23 $$ wr.flush() [FD]
Line_21 $$ final DataOutputStream wr = new DataOutputStream(connection.getOutputStream()) --> Line_24 $$ wr.close() [FD]
Line_16 $$ InputStream input = null --> Line_25 $$ input = connection.getInputStream() [FD]
Line_9 $$ HttpURLConnection connection = null --> Line_25 $$ input = connection.getInputStream() [FD]
Line_11 $$ connection = (HttpURLConnection) url.openConnection() --> Line_25 $$ input = connection.getInputStream() [FD]
Line_9 $$ HttpURLConnection connection = null --> Line_26 $$ if ("gzip".equals(connection.getHeaderField("content-encoding"))) [FD]
Line_11 $$ connection = (HttpURLConnection) url.openConnection() --> Line_26 $$ if ("gzip".equals(connection.getHeaderField("content-encoding"))) [FD]
Line_26 $$ if ("gzip".equals(connection.getHeaderField("content-encoding"))) --> Line_27 $$ input = new GZIPInputStream(input) [CD]
Line_16 $$ InputStream input = null --> Line_27 $$ input = new GZIPInputStream(input) [FD]
Line_25 $$ input = connection.getInputStream() --> Line_27 $$ input = new GZIPInputStream(input) [FD]
Line_29 $$ if (HttpServiceImpl.LOGGER.isDebugEnabled()) --> Line_30 $$ this.logConnection(connection) [CD]
Line_9 $$ HttpURLConnection connection = null --> Line_30 $$ this.logConnection(connection) [FD]
Line_11 $$ connection = (HttpURLConnection) url.openConnection() --> Line_30 $$ this.logConnection(connection) [FD]
Line_29 $$ if (HttpServiceImpl.LOGGER.isDebugEnabled()) --> Line_31 $$ input = new LoggingInputStream(input) [CD]
Line_16 $$ InputStream input = null --> Line_31 $$ input = new LoggingInputStream(input) [FD]
Line_25 $$ input = connection.getInputStream() --> Line_31 $$ input = new LoggingInputStream(input) [FD]
Line_27 $$ input = new GZIPInputStream(input) --> Line_31 $$ input = new LoggingInputStream(input) [FD]
Line_2 $$ public String post(final FetchInfos fetchInfos, final String data) throws HttpException --> Line_34 $$ fetchInfos.setResult(FETCHING_RESULT.TIME_OUT) [FD]
Line_2 $$ public String post(final FetchInfos fetchInfos, final String data) throws HttpException --> Line_35 $$ throw new HttpException("get '" + fetchInfos.getUri() + "' timeout", exception) [FD]
Line_2 $$ public String post(final FetchInfos fetchInfos, final String data) throws HttpException --> Line_37 $$ fetchInfos.setResult(FETCHING_RESULT.IO_ERROR) [FD]
Line_2 $$ public String post(final FetchInfos fetchInfos, final String data) throws HttpException --> Line_38 $$ throw new HttpException("get '" + fetchInfos.getUri() + "' failed", exception) [FD]
Line_2 $$ public String post(final FetchInfos fetchInfos, final String data) throws HttpException --> Line_40 $$ fetchInfos.setResult(FETCHING_RESULT.OK) [CD]
Line_2 $$ public String post(final FetchInfos fetchInfos, final String data) throws HttpException --> Line_40 $$ fetchInfos.setResult(FETCHING_RESULT.OK) [FD]
Line_2 $$ public String post(final FetchInfos fetchInfos, final String data) throws HttpException --> Line_41 $$ String response = null [CD]
Line_41 $$ String response = null --> Line_43 $$ response = this.toString(input) [FD]
Line_16 $$ InputStream input = null --> Line_43 $$ response = this.toString(input) [FD]
Line_25 $$ input = connection.getInputStream() --> Line_43 $$ response = this.toString(input) [FD]
Line_27 $$ input = new GZIPInputStream(input) --> Line_43 $$ response = this.toString(input) [FD]
Line_31 $$ input = new LoggingInputStream(input) --> Line_43 $$ response = this.toString(input) [FD]
Line_2 $$ public String post(final FetchInfos fetchInfos, final String data) throws HttpException --> Line_47 $$ return response [CD]
