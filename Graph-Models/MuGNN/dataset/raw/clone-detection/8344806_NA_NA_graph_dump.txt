Line_2 $$ public void unpack(File destDirectory, boolean delete) --> Line_3 $$ delete(destDirectory) [CD]
Line_2 $$ public void unpack(File destDirectory, boolean delete) --> Line_3 $$ delete(destDirectory) [FD]
Line_2 $$ public void unpack(File destDirectory, boolean delete) --> Line_4 $$ if (destDirectory.exists()) [CD]
Line_2 $$ public void unpack(File destDirectory, boolean delete) --> Line_4 $$ if (destDirectory.exists()) [FD]
Line_2 $$ public void unpack(File destDirectory, boolean delete) --> Line_5 $$ this.destDirectory = destDirectory [CD]
Line_2 $$ public void unpack(File destDirectory, boolean delete) --> Line_5 $$ this.destDirectory = destDirectory [FD]
Line_2 $$ public void unpack(File destDirectory, boolean delete) --> Line_6 $$ this.manifestFile = new File(destDirectory, MANIFEST_FILE_NAME) [CD]
Line_16 $$ int length --> Line_17 $$ while ((length = zipInputStream.read(buffer, 0, BUFFER_SIZE)) != -1) output.write(buffer, 0, length) [FD]
Line_15 $$ byte[] buffer = new byte[BUFFER_SIZE] --> Line_17 $$ while ((length = zipInputStream.read(buffer, 0, BUFFER_SIZE)) != -1) output.write(buffer, 0, length) [FD]
Line_14 $$ BufferedOutputStream output = new BufferedOutputStream(new FileOutputStream(destFile), BUFFER_SIZE) --> Line_17 $$ while ((length = zipInputStream.read(buffer, 0, BUFFER_SIZE)) != -1) output.write(buffer, 0, length) [FD]
Line_14 $$ BufferedOutputStream output = new BufferedOutputStream(new FileOutputStream(destFile), BUFFER_SIZE) --> Line_18 $$ output.close() [FD]
