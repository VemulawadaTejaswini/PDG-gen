Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_3 $$ init() [CD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_4 $$ message = message.substring(0, Math.min(MAX_PAYLOAD, message.length())) [CD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_4 $$ message = message.substring(0, Math.min(MAX_PAYLOAD, message.length())) [FD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_5 $$ message = message.replace('\r', ' ') [CD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_5 $$ message = message.replace('\r', ' ') [FD]
Line_4 $$ message = message.substring(0, Math.min(MAX_PAYLOAD, message.length())) --> Line_5 $$ message = message.replace('\r', ' ') [FD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_6 $$ message = message.replace('\n', ' ') [CD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_6 $$ message = message.replace('\n', ' ') [FD]
Line_4 $$ message = message.substring(0, Math.min(MAX_PAYLOAD, message.length())) --> Line_6 $$ message = message.replace('\n', ' ') [FD]
Line_5 $$ message = message.replace('\r', ' ') --> Line_6 $$ message = message.replace('\n', ' ') [FD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_7 $$ ActualFormParameters params = new ActualFormParameters() [CD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_8 $$ String strippedNumber = strip(number) [CD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_8 $$ String strippedNumber = strip(number) [FD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_9 $$ ActualFormParameter number1Param [CD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_10 $$ ActualFormParameter number2Param [CD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_11 $$ strippedNumber = "+49" + strippedNumber.substring(1) [CD]
Line_8 $$ String strippedNumber = strip(number) --> Line_11 $$ strippedNumber = "+49" + strippedNumber.substring(1) [FD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_12 $$ number1Param = new ActualFormParameter(number1InputElement.getName(), strippedNumber.substring(0, 6)) [CD]
Line_9 $$ ActualFormParameter number1Param --> Line_12 $$ number1Param = new ActualFormParameter(number1InputElement.getName(), strippedNumber.substring(0, 6)) [FD]
Line_8 $$ String strippedNumber = strip(number) --> Line_12 $$ number1Param = new ActualFormParameter(number1InputElement.getName(), strippedNumber.substring(0, 6)) [FD]
Line_11 $$ strippedNumber = "+49" + strippedNumber.substring(1) --> Line_12 $$ number1Param = new ActualFormParameter(number1InputElement.getName(), strippedNumber.substring(0, 6)) [FD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_13 $$ number2Param = new ActualFormParameter(number2InputElement.getName(), strippedNumber.substring(6)) [CD]
Line_10 $$ ActualFormParameter number2Param --> Line_13 $$ number2Param = new ActualFormParameter(number2InputElement.getName(), strippedNumber.substring(6)) [FD]
Line_8 $$ String strippedNumber = strip(number) --> Line_13 $$ number2Param = new ActualFormParameter(number2InputElement.getName(), strippedNumber.substring(6)) [FD]
Line_11 $$ strippedNumber = "+49" + strippedNumber.substring(1) --> Line_13 $$ number2Param = new ActualFormParameter(number2InputElement.getName(), strippedNumber.substring(6)) [FD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_14 $$ params.add(number1Param) [CD]
Line_7 $$ ActualFormParameters params = new ActualFormParameters() --> Line_14 $$ params.add(number1Param) [FD]
Line_9 $$ ActualFormParameter number1Param --> Line_14 $$ params.add(number1Param) [FD]
Line_12 $$ number1Param = new ActualFormParameter(number1InputElement.getName(), strippedNumber.substring(0, 6)) --> Line_14 $$ params.add(number1Param) [FD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_15 $$ params.add(number2Param) [CD]
Line_7 $$ ActualFormParameters params = new ActualFormParameters() --> Line_15 $$ params.add(number2Param) [FD]
Line_10 $$ ActualFormParameter number2Param --> Line_15 $$ params.add(number2Param) [FD]
Line_13 $$ number2Param = new ActualFormParameter(number2InputElement.getName(), strippedNumber.substring(6)) --> Line_15 $$ params.add(number2Param) [FD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_16 $$ ActualFormParameter messageParam = new ActualFormParameter(messageInputElement.getName(), message) [CD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_17 $$ params.add(messageParam) [CD]
Line_7 $$ ActualFormParameters params = new ActualFormParameters() --> Line_17 $$ params.add(messageParam) [FD]
Line_16 $$ ActualFormParameter messageParam = new ActualFormParameter(messageInputElement.getName(), message) --> Line_17 $$ params.add(messageParam) [FD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_18 $$ ActualFormParameter letterCountParam = new ActualFormParameter(letterCountInputElement.getName(), "" + (MAX_PAYLOAD - message.length())) [CD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_18 $$ ActualFormParameter letterCountParam = new ActualFormParameter(letterCountInputElement.getName(), "" + (MAX_PAYLOAD - message.length())) [FD]
Line_4 $$ message = message.substring(0, Math.min(MAX_PAYLOAD, message.length())) --> Line_18 $$ ActualFormParameter letterCountParam = new ActualFormParameter(letterCountInputElement.getName(), "" + (MAX_PAYLOAD - message.length())) [FD]
Line_5 $$ message = message.replace('\r', ' ') --> Line_18 $$ ActualFormParameter letterCountParam = new ActualFormParameter(letterCountInputElement.getName(), "" + (MAX_PAYLOAD - message.length())) [FD]
Line_6 $$ message = message.replace('\n', ' ') --> Line_18 $$ ActualFormParameter letterCountParam = new ActualFormParameter(letterCountInputElement.getName(), "" + (MAX_PAYLOAD - message.length())) [FD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_19 $$ params.add(letterCountParam) [CD]
Line_7 $$ ActualFormParameters params = new ActualFormParameters() --> Line_19 $$ params.add(letterCountParam) [FD]
Line_18 $$ ActualFormParameter letterCountParam = new ActualFormParameter(letterCountInputElement.getName(), "" + (MAX_PAYLOAD - message.length())) --> Line_19 $$ params.add(letterCountParam) [FD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_20 $$ form.addDefaultParametersTo(params) [CD]
Line_7 $$ ActualFormParameters params = new ActualFormParameters() --> Line_20 $$ form.addDefaultParametersTo(params) [FD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_21 $$ Reader r = form.submitForm(params, form.getNetscapeRequestProperties()) [CD]
Line_7 $$ ActualFormParameters params = new ActualFormParameters() --> Line_21 $$ Reader r = form.submitForm(params, form.getNetscapeRequestProperties()) [FD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_22 $$ String result = getStringFromReader(r) [CD]
Line_21 $$ Reader r = form.submitForm(params, form.getNetscapeRequestProperties()) --> Line_22 $$ String result = getStringFromReader(r) [FD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_23 $$ String pattern = "<meta http-equiv = \"refresh\" content=\"1; url=" [CD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_24 $$ int patternIndex = result.indexOf(pattern) [CD]
Line_22 $$ String result = getStringFromReader(r) --> Line_24 $$ int patternIndex = result.indexOf(pattern) [FD]
Line_23 $$ String pattern = "<meta http-equiv = \"refresh\" content=\"1; url=" --> Line_24 $$ int patternIndex = result.indexOf(pattern) [FD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_25 $$ if (patternIndex < 0) [CD]
Line_24 $$ int patternIndex = result.indexOf(pattern) --> Line_25 $$ if (patternIndex < 0) [FD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_26 $$ int end = result.lastIndexOf("\">") [CD]
Line_22 $$ String result = getStringFromReader(r) --> Line_26 $$ int end = result.lastIndexOf("\">") [FD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_27 $$ if (end < 0) [CD]
Line_26 $$ int end = result.lastIndexOf("\">") --> Line_27 $$ if (end < 0) [FD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_28 $$ String url = result.substring(patternIndex + pattern.length(), end) [CD]
Line_22 $$ String result = getStringFromReader(r) --> Line_28 $$ String url = result.substring(patternIndex + pattern.length(), end) [FD]
Line_26 $$ int end = result.lastIndexOf("\">") --> Line_28 $$ String url = result.substring(patternIndex + pattern.length(), end) [FD]
Line_23 $$ String pattern = "<meta http-equiv = \"refresh\" content=\"1; url=" --> Line_28 $$ String url = result.substring(patternIndex + pattern.length(), end) [FD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_29 $$ result = getStringFromReader(new InputStreamReader(new URL(url).openStream())) [CD]
Line_22 $$ String result = getStringFromReader(r) --> Line_29 $$ result = getStringFromReader(new InputStreamReader(new URL(url).openStream())) [FD]
Line_2 $$ public boolean send(String number, String message) throws IOException --> Line_30 $$ return result.indexOf("wurde erfolgreich verschickt") >= 0 [CD]
Line_22 $$ String result = getStringFromReader(r) --> Line_30 $$ return result.indexOf("wurde erfolgreich verschickt") >= 0 [FD]
Line_29 $$ result = getStringFromReader(new InputStreamReader(new URL(url).openStream())) --> Line_30 $$ return result.indexOf("wurde erfolgreich verschickt") >= 0 [FD]
