Line_2 $$ public void retrieveChallenge() throws MalformedURLException, IOException, FBConnectionException, FBErrorException --> Line_3 $$ URL url = new URL(getHost() + getPath()) [CD]
Line_2 $$ public void retrieveChallenge() throws MalformedURLException, IOException, FBConnectionException, FBErrorException --> Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() [CD]
Line_3 $$ URL url = new URL(getHost() + getPath()) --> Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() [FD]
Line_2 $$ public void retrieveChallenge() throws MalformedURLException, IOException, FBConnectionException, FBErrorException --> Line_5 $$ conn.setRequestProperty("X-FB-User", getUser()) [CD]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_5 $$ conn.setRequestProperty("X-FB-User", getUser()) [FD]
Line_2 $$ public void retrieveChallenge() throws MalformedURLException, IOException, FBConnectionException, FBErrorException --> Line_6 $$ conn.setRequestProperty("X-FB-Mode", "GetChallenge") [CD]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_6 $$ conn.setRequestProperty("X-FB-Mode", "GetChallenge") [FD]
Line_2 $$ public void retrieveChallenge() throws MalformedURLException, IOException, FBConnectionException, FBErrorException --> Line_7 $$ conn.connect() [CD]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_7 $$ conn.connect() [FD]
Line_2 $$ public void retrieveChallenge() throws MalformedURLException, IOException, FBConnectionException, FBErrorException --> Line_8 $$ Element fbresponse [CD]
Line_8 $$ Element fbresponse --> Line_10 $$ fbresponse = readXML(conn) [FD]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_10 $$ fbresponse = readXML(conn) [FD]
Line_19 $$ FBConnectionException fbce = new FBConnectionException("XML parsing failed") --> Line_20 $$ fbce.attachSubException(e) [FD]
Line_2 $$ public void retrieveChallenge() throws MalformedURLException, IOException, FBConnectionException, FBErrorException --> Line_23 $$ NodeList nl = fbresponse.getElementsByTagName("GetChallengeResponse") [CD]
Line_8 $$ Element fbresponse --> Line_23 $$ NodeList nl = fbresponse.getElementsByTagName("GetChallengeResponse") [FD]
Line_10 $$ fbresponse = readXML(conn) --> Line_23 $$ NodeList nl = fbresponse.getElementsByTagName("GetChallengeResponse") [FD]
Line_2 $$ public void retrieveChallenge() throws MalformedURLException, IOException, FBConnectionException, FBErrorException --> Line_24 $$ for (int i = 0; i < nl.getLength(); i++) [CD]
Line_23 $$ NodeList nl = fbresponse.getElementsByTagName("GetChallengeResponse") --> Line_24 $$ for (int i = 0; i < nl.getLength(); i++) [FD]
Line_24 $$ for (int i = 0; i < nl.getLength(); i++) --> Line_25 $$ if (nl.item(i) instanceof Element && hasError((Element) nl.item(i))) [CD]
Line_24 $$ for (int i = 0; i < nl.getLength(); i++) --> Line_25 $$ if (nl.item(i) instanceof Element && hasError((Element) nl.item(i))) [FD]
Line_23 $$ NodeList nl = fbresponse.getElementsByTagName("GetChallengeResponse") --> Line_25 $$ if (nl.item(i) instanceof Element && hasError((Element) nl.item(i))) [FD]
Line_25 $$ if (nl.item(i) instanceof Element && hasError((Element) nl.item(i))) --> Line_27 $$ FBErrorException e = new FBErrorException() [CD]
Line_25 $$ if (nl.item(i) instanceof Element && hasError((Element) nl.item(i))) --> Line_28 $$ e.setErrorCode(errorcode) [CD]
Line_27 $$ FBErrorException e = new FBErrorException() --> Line_28 $$ e.setErrorCode(errorcode) [FD]
Line_25 $$ if (nl.item(i) instanceof Element && hasError((Element) nl.item(i))) --> Line_29 $$ e.setErrorText(errortext) [CD]
Line_27 $$ FBErrorException e = new FBErrorException() --> Line_29 $$ e.setErrorText(errortext) [FD]
Line_2 $$ public void retrieveChallenge() throws MalformedURLException, IOException, FBConnectionException, FBErrorException --> Line_33 $$ NodeList challenge = fbresponse.getElementsByTagName("Challenge") [CD]
Line_8 $$ Element fbresponse --> Line_33 $$ NodeList challenge = fbresponse.getElementsByTagName("Challenge") [FD]
Line_10 $$ fbresponse = readXML(conn) --> Line_33 $$ NodeList challenge = fbresponse.getElementsByTagName("Challenge") [FD]
Line_2 $$ public void retrieveChallenge() throws MalformedURLException, IOException, FBConnectionException, FBErrorException --> Line_34 $$ for (int i = 0; i < challenge.getLength(); i++) [CD]
Line_24 $$ for (int i = 0; i < nl.getLength(); i++) --> Line_34 $$ for (int i = 0; i < challenge.getLength(); i++) [FD]
Line_33 $$ NodeList challenge = fbresponse.getElementsByTagName("Challenge") --> Line_34 $$ for (int i = 0; i < challenge.getLength(); i++) [FD]
Line_34 $$ for (int i = 0; i < challenge.getLength(); i++) --> Line_35 $$ NodeList children = challenge.item(i).getChildNodes() [CD]
Line_34 $$ for (int i = 0; i < challenge.getLength(); i++) --> Line_35 $$ NodeList children = challenge.item(i).getChildNodes() [FD]
Line_33 $$ NodeList challenge = fbresponse.getElementsByTagName("Challenge") --> Line_35 $$ NodeList children = challenge.item(i).getChildNodes() [FD]
Line_24 $$ for (int i = 0; i < nl.getLength(); i++) --> Line_35 $$ NodeList children = challenge.item(i).getChildNodes() [FD]
Line_34 $$ for (int i = 0; i < challenge.getLength(); i++) --> Line_36 $$ for (int j = 0; j < children.getLength(); j++) [CD]
Line_35 $$ NodeList children = challenge.item(i).getChildNodes() --> Line_36 $$ for (int j = 0; j < children.getLength(); j++) [FD]
Line_36 $$ for (int j = 0; j < children.getLength(); j++) --> Line_37 $$ if (children.item(j) instanceof Text) [CD]
Line_36 $$ for (int j = 0; j < children.getLength(); j++) --> Line_37 $$ if (children.item(j) instanceof Text) [FD]
Line_35 $$ NodeList children = challenge.item(i).getChildNodes() --> Line_37 $$ if (children.item(j) instanceof Text) [FD]
Line_37 $$ if (children.item(j) instanceof Text) --> Line_38 $$ challenges.offer(children.item(j).getNodeValue()) [CD]
Line_35 $$ NodeList children = challenge.item(i).getChildNodes() --> Line_38 $$ challenges.offer(children.item(j).getNodeValue()) [FD]
Line_36 $$ for (int j = 0; j < children.getLength(); j++) --> Line_38 $$ challenges.offer(children.item(j).getNodeValue()) [FD]
