Line_2 $$ private Document getResponse(HttpGet request) throws ClientProtocolException, IOException, ParserConfigurationException, IllegalStateException, SAXException, NoRoutesException --> Line_3 $$ HttpClient httpClient = new DefaultHttpClient() [CD]
Line_2 $$ private Document getResponse(HttpGet request) throws ClientProtocolException, IOException, ParserConfigurationException, IllegalStateException, SAXException, NoRoutesException --> Line_4 $$ HttpResponse response = httpClient.execute(request) [CD]
Line_2 $$ private Document getResponse(HttpGet request) throws ClientProtocolException, IOException, ParserConfigurationException, IllegalStateException, SAXException, NoRoutesException --> Line_4 $$ HttpResponse response = httpClient.execute(request) [FD]
Line_3 $$ HttpClient httpClient = new DefaultHttpClient() --> Line_4 $$ HttpResponse response = httpClient.execute(request) [FD]
Line_2 $$ private Document getResponse(HttpGet request) throws ClientProtocolException, IOException, ParserConfigurationException, IllegalStateException, SAXException, NoRoutesException --> Line_5 $$ if (response.getStatusLine().getStatusCode() != HTTP_STATUS_OK) [CD]
Line_4 $$ HttpResponse response = httpClient.execute(request) --> Line_5 $$ if (response.getStatusLine().getStatusCode() != HTTP_STATUS_OK) [FD]
Line_2 $$ private Document getResponse(HttpGet request) throws ClientProtocolException, IOException, ParserConfigurationException, IllegalStateException, SAXException, NoRoutesException --> Line_6 $$ allResponse = EntityUtils.toString(response.getEntity()) [CD]
Line_4 $$ HttpResponse response = httpClient.execute(request) --> Line_6 $$ allResponse = EntityUtils.toString(response.getEntity()) [FD]
Line_2 $$ private Document getResponse(HttpGet request) throws ClientProtocolException, IOException, ParserConfigurationException, IllegalStateException, SAXException, NoRoutesException --> Line_7 $$ String responseText = "" [CD]
Line_7 $$ String responseText = "" --> Line_11 $$ responseText = allResponse.substring(allResponse.indexOf("<ol"), allResponse.indexOf("</ol>") + 5) [FD]
Line_7 $$ String responseText = "" --> Line_18 $$ responseText = allResponse.substring(allResponse.indexOf("<ol"), allResponse.indexOf("</ol>") + 5) [FD]
Line_11 $$ responseText = allResponse.substring(allResponse.indexOf("<ol"), allResponse.indexOf("</ol>") + 5) --> Line_18 $$ responseText = allResponse.substring(allResponse.indexOf("<ol"), allResponse.indexOf("</ol>") + 5) [FD]
Line_24 $$ String responseWithErrors = "" --> Line_26 $$ responseWithErrors = allResponse.substring(allResponse.indexOf("<div id=\"tsp\">"), allResponse.indexOf("<div class=\"ddwpt\" id=\"panel_ddw1\" oi=\"wi1\">")) [FD]
Line_7 $$ String responseText = "" --> Line_30 $$ responseText = responseWithErrors.replaceAll(".gif\">", ".gif\"/>").replaceAll("colspan=2", "colspan=\"2\"").replaceAll("nowrap", "").replaceAll("&laquo;", "").replaceAll("&nbsp;", "").replaceAll("&raquo;", "") [FD]
Line_11 $$ responseText = allResponse.substring(allResponse.indexOf("<ol"), allResponse.indexOf("</ol>") + 5) --> Line_30 $$ responseText = responseWithErrors.replaceAll(".gif\">", ".gif\"/>").replaceAll("colspan=2", "colspan=\"2\"").replaceAll("nowrap", "").replaceAll("&laquo;", "").replaceAll("&nbsp;", "").replaceAll("&raquo;", "") [FD]
Line_18 $$ responseText = allResponse.substring(allResponse.indexOf("<ol"), allResponse.indexOf("</ol>") + 5) --> Line_30 $$ responseText = responseWithErrors.replaceAll(".gif\">", ".gif\"/>").replaceAll("colspan=2", "colspan=\"2\"").replaceAll("nowrap", "").replaceAll("&laquo;", "").replaceAll("&nbsp;", "").replaceAll("&raquo;", "") [FD]
Line_24 $$ String responseWithErrors = "" --> Line_30 $$ responseText = responseWithErrors.replaceAll(".gif\">", ".gif\"/>").replaceAll("colspan=2", "colspan=\"2\"").replaceAll("nowrap", "").replaceAll("&laquo;", "").replaceAll("&nbsp;", "").replaceAll("&raquo;", "") [FD]
Line_2 $$ private Document getResponse(HttpGet request) throws ClientProtocolException, IOException, ParserConfigurationException, IllegalStateException, SAXException, NoRoutesException --> Line_33 $$ File xmlFile = new File("./data/temp/response.xml") [CD]
Line_2 $$ private Document getResponse(HttpGet request) throws ClientProtocolException, IOException, ParserConfigurationException, IllegalStateException, SAXException, NoRoutesException --> Line_34 $$ PrintWriter writer = new PrintWriter(xmlFile) [CD]
Line_2 $$ private Document getResponse(HttpGet request) throws ClientProtocolException, IOException, ParserConfigurationException, IllegalStateException, SAXException, NoRoutesException --> Line_35 $$ writer.println(responseText) [CD]
Line_34 $$ PrintWriter writer = new PrintWriter(xmlFile) --> Line_35 $$ writer.println(responseText) [FD]
Line_7 $$ String responseText = "" --> Line_35 $$ writer.println(responseText) [FD]
Line_11 $$ responseText = allResponse.substring(allResponse.indexOf("<ol"), allResponse.indexOf("</ol>") + 5) --> Line_35 $$ writer.println(responseText) [FD]
Line_18 $$ responseText = allResponse.substring(allResponse.indexOf("<ol"), allResponse.indexOf("</ol>") + 5) --> Line_35 $$ writer.println(responseText) [FD]
Line_30 $$ responseText = responseWithErrors.replaceAll(".gif\">", ".gif\"/>").replaceAll("colspan=2", "colspan=\"2\"").replaceAll("nowrap", "").replaceAll("&laquo;", "").replaceAll("&nbsp;", "").replaceAll("&raquo;", "") --> Line_35 $$ writer.println(responseText) [FD]
Line_2 $$ private Document getResponse(HttpGet request) throws ClientProtocolException, IOException, ParserConfigurationException, IllegalStateException, SAXException, NoRoutesException --> Line_36 $$ writer.close() [CD]
Line_34 $$ PrintWriter writer = new PrintWriter(xmlFile) --> Line_36 $$ writer.close() [FD]
Line_2 $$ private Document getResponse(HttpGet request) throws ClientProtocolException, IOException, ParserConfigurationException, IllegalStateException, SAXException, NoRoutesException --> Line_37 $$ DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance() [CD]
Line_2 $$ private Document getResponse(HttpGet request) throws ClientProtocolException, IOException, ParserConfigurationException, IllegalStateException, SAXException, NoRoutesException --> Line_38 $$ DocumentBuilder dBuilder = dbFactory.newDocumentBuilder() [CD]
Line_37 $$ DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance() --> Line_38 $$ DocumentBuilder dBuilder = dbFactory.newDocumentBuilder() [FD]
Line_2 $$ private Document getResponse(HttpGet request) throws ClientProtocolException, IOException, ParserConfigurationException, IllegalStateException, SAXException, NoRoutesException --> Line_39 $$ return dBuilder.parse(xmlFile) [CD]
Line_38 $$ DocumentBuilder dBuilder = dbFactory.newDocumentBuilder() --> Line_39 $$ return dBuilder.parse(xmlFile) [FD]
Line_33 $$ File xmlFile = new File("./data/temp/response.xml") --> Line_39 $$ return dBuilder.parse(xmlFile) [FD]
