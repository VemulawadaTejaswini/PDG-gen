Line_2 $$ public File convert(URI uri) throws DjatokaException --> Line_3 $$ processing.add(uri.toString()) [CD]
Line_2 $$ public File convert(URI uri) throws DjatokaException --> Line_3 $$ processing.add(uri.toString()) [FD]
Line_2 $$ public File convert(URI uri) throws DjatokaException --> Line_4 $$ File urlLocal = null [CD]
Line_2 $$ public File convert(URI uri) throws DjatokaException --> Line_6 $$ logger.info("processingRemoteURI: " + uri.toURL()) [FD]
Line_2 $$ public File convert(URI uri) throws DjatokaException --> Line_8 $$ InputStream src = IOUtils.getInputStream(uri.toURL()) [FD]
Line_2 $$ public File convert(URI uri) throws DjatokaException --> Line_9 $$ String ext = uri.toURL().toString().substring(uri.toURL().toString().lastIndexOf(".") + 1).toLowerCase() [FD]
Line_9 $$ String ext = uri.toURL().toString().substring(uri.toURL().toString().lastIndexOf(".") + 1).toLowerCase() --> Line_10 $$ if (ext.equals(FORMAT_ID_TIF) || ext.equals(FORMAT_ID_TIFF)) [FD]
Line_10 $$ if (ext.equals(FORMAT_ID_TIF) || ext.equals(FORMAT_ID_TIFF)) --> Line_11 $$ urlLocal = File.createTempFile("convert" + uri.hashCode(), "." + FORMAT_ID_TIF) [CD]
Line_4 $$ File urlLocal = null --> Line_11 $$ urlLocal = File.createTempFile("convert" + uri.hashCode(), "." + FORMAT_ID_TIF) [FD]
Line_2 $$ public File convert(URI uri) throws DjatokaException --> Line_11 $$ urlLocal = File.createTempFile("convert" + uri.hashCode(), "." + FORMAT_ID_TIF) [FD]
Line_10 $$ if (ext.equals(FORMAT_ID_TIF) || ext.equals(FORMAT_ID_TIFF)) --> Line_12 $$ if (formatMap.containsKey(ext) && (formatMap.get(ext).equals(FORMAT_MIMEYPE_JP2) || formatMap.get(ext).equals(FORMAT_MIMEYPE_JPX))) [CD]
Line_9 $$ String ext = uri.toURL().toString().substring(uri.toURL().toString().lastIndexOf(".") + 1).toLowerCase() --> Line_12 $$ if (formatMap.containsKey(ext) && (formatMap.get(ext).equals(FORMAT_MIMEYPE_JP2) || formatMap.get(ext).equals(FORMAT_MIMEYPE_JPX))) [FD]
Line_12 $$ if (formatMap.containsKey(ext) && (formatMap.get(ext).equals(FORMAT_MIMEYPE_JP2) || formatMap.get(ext).equals(FORMAT_MIMEYPE_JPX))) --> Line_13 $$ urlLocal = File.createTempFile("cache" + uri.hashCode(), "." + ext) [CD]
Line_4 $$ File urlLocal = null --> Line_13 $$ urlLocal = File.createTempFile("cache" + uri.hashCode(), "." + ext) [FD]
Line_11 $$ urlLocal = File.createTempFile("convert" + uri.hashCode(), "." + FORMAT_ID_TIF) --> Line_13 $$ urlLocal = File.createTempFile("cache" + uri.hashCode(), "." + ext) [FD]
Line_2 $$ public File convert(URI uri) throws DjatokaException --> Line_13 $$ urlLocal = File.createTempFile("cache" + uri.hashCode(), "." + ext) [FD]
Line_12 $$ if (formatMap.containsKey(ext) && (formatMap.get(ext).equals(FORMAT_MIMEYPE_JP2) || formatMap.get(ext).equals(FORMAT_MIMEYPE_JPX))) --> Line_14 $$ isJp2 = true [CD]
Line_7 $$ boolean isJp2 = false --> Line_14 $$ isJp2 = true [FD]
Line_12 $$ if (formatMap.containsKey(ext) && (formatMap.get(ext).equals(FORMAT_MIMEYPE_JP2) || formatMap.get(ext).equals(FORMAT_MIMEYPE_JPX))) --> Line_16 $$ if (src.markSupported()) [CD]
Line_8 $$ InputStream src = IOUtils.getInputStream(uri.toURL()) --> Line_16 $$ if (src.markSupported()) [FD]
Line_12 $$ if (formatMap.containsKey(ext) && (formatMap.get(ext).equals(FORMAT_MIMEYPE_JP2) || formatMap.get(ext).equals(FORMAT_MIMEYPE_JPX))) --> Line_17 $$ urlLocal = File.createTempFile("cache" + uri.hashCode(), "." + FORMAT_ID_JP2) [CD]
Line_8 $$ InputStream src = IOUtils.getInputStream(uri.toURL()) --> Line_17 $$ urlLocal = File.createTempFile("cache" + uri.hashCode(), "." + FORMAT_ID_JP2) [FD]
Line_4 $$ File urlLocal = null --> Line_17 $$ urlLocal = File.createTempFile("cache" + uri.hashCode(), "." + FORMAT_ID_JP2) [FD]
Line_11 $$ urlLocal = File.createTempFile("convert" + uri.hashCode(), "." + FORMAT_ID_TIF) --> Line_17 $$ urlLocal = File.createTempFile("cache" + uri.hashCode(), "." + FORMAT_ID_JP2) [FD]
Line_13 $$ urlLocal = File.createTempFile("cache" + uri.hashCode(), "." + ext) --> Line_17 $$ urlLocal = File.createTempFile("cache" + uri.hashCode(), "." + FORMAT_ID_JP2) [FD]
Line_2 $$ public File convert(URI uri) throws DjatokaException --> Line_17 $$ urlLocal = File.createTempFile("cache" + uri.hashCode(), "." + FORMAT_ID_JP2) [FD]
Line_12 $$ if (formatMap.containsKey(ext) && (formatMap.get(ext).equals(FORMAT_MIMEYPE_JP2) || formatMap.get(ext).equals(FORMAT_MIMEYPE_JPX))) --> Line_18 $$ if (src.markSupported()) [CD]
Line_8 $$ InputStream src = IOUtils.getInputStream(uri.toURL()) --> Line_18 $$ if (src.markSupported()) [FD]
Line_18 $$ if (src.markSupported()) --> Line_19 $$ src.close() [CD]
Line_8 $$ InputStream src = IOUtils.getInputStream(uri.toURL()) --> Line_19 $$ src.close() [FD]
Line_18 $$ if (src.markSupported()) --> Line_20 $$ src = IOUtils.getInputStream(uri.toURL()) [CD]
Line_8 $$ InputStream src = IOUtils.getInputStream(uri.toURL()) --> Line_20 $$ src = IOUtils.getInputStream(uri.toURL()) [FD]
Line_2 $$ public File convert(URI uri) throws DjatokaException --> Line_20 $$ src = IOUtils.getInputStream(uri.toURL()) [FD]
Line_4 $$ File urlLocal = null --> Line_23 $$ if (urlLocal == null) [FD]
Line_11 $$ urlLocal = File.createTempFile("convert" + uri.hashCode(), "." + FORMAT_ID_TIF) --> Line_23 $$ if (urlLocal == null) [FD]
Line_13 $$ urlLocal = File.createTempFile("cache" + uri.hashCode(), "." + ext) --> Line_23 $$ if (urlLocal == null) [FD]
Line_17 $$ urlLocal = File.createTempFile("cache" + uri.hashCode(), "." + FORMAT_ID_JP2) --> Line_23 $$ if (urlLocal == null) [FD]
Line_23 $$ if (urlLocal == null) --> Line_24 $$ urlLocal = File.createTempFile("convert" + uri.hashCode(), ".img") [CD]
Line_4 $$ File urlLocal = null --> Line_24 $$ urlLocal = File.createTempFile("convert" + uri.hashCode(), ".img") [FD]
Line_11 $$ urlLocal = File.createTempFile("convert" + uri.hashCode(), "." + FORMAT_ID_TIF) --> Line_24 $$ urlLocal = File.createTempFile("convert" + uri.hashCode(), ".img") [FD]
Line_13 $$ urlLocal = File.createTempFile("cache" + uri.hashCode(), "." + ext) --> Line_24 $$ urlLocal = File.createTempFile("convert" + uri.hashCode(), ".img") [FD]
Line_17 $$ urlLocal = File.createTempFile("cache" + uri.hashCode(), "." + FORMAT_ID_JP2) --> Line_24 $$ urlLocal = File.createTempFile("convert" + uri.hashCode(), ".img") [FD]
Line_2 $$ public File convert(URI uri) throws DjatokaException --> Line_24 $$ urlLocal = File.createTempFile("convert" + uri.hashCode(), ".img") [FD]
Line_4 $$ File urlLocal = null --> Line_26 $$ urlLocal.deleteOnExit() [FD]
Line_11 $$ urlLocal = File.createTempFile("convert" + uri.hashCode(), "." + FORMAT_ID_TIF) --> Line_26 $$ urlLocal.deleteOnExit() [FD]
Line_13 $$ urlLocal = File.createTempFile("cache" + uri.hashCode(), "." + ext) --> Line_26 $$ urlLocal.deleteOnExit() [FD]
Line_17 $$ urlLocal = File.createTempFile("cache" + uri.hashCode(), "." + FORMAT_ID_JP2) --> Line_26 $$ urlLocal.deleteOnExit() [FD]
Line_24 $$ urlLocal = File.createTempFile("convert" + uri.hashCode(), ".img") --> Line_26 $$ urlLocal.deleteOnExit() [FD]
Line_8 $$ InputStream src = IOUtils.getInputStream(uri.toURL()) --> Line_28 $$ IOUtils.copyStream(src, dest) [FD]
Line_20 $$ src = IOUtils.getInputStream(uri.toURL()) --> Line_28 $$ IOUtils.copyStream(src, dest) [FD]
Line_27 $$ FileOutputStream dest = new FileOutputStream(urlLocal) --> Line_28 $$ IOUtils.copyStream(src, dest) [FD]
Line_7 $$ boolean isJp2 = false --> Line_29 $$ urlLocal = processImage(urlLocal, uri) [FD]
Line_14 $$ isJp2 = true --> Line_29 $$ urlLocal = processImage(urlLocal, uri) [FD]
Line_4 $$ File urlLocal = null --> Line_29 $$ urlLocal = processImage(urlLocal, uri) [FD]
Line_11 $$ urlLocal = File.createTempFile("convert" + uri.hashCode(), "." + FORMAT_ID_TIF) --> Line_29 $$ urlLocal = processImage(urlLocal, uri) [FD]
Line_13 $$ urlLocal = File.createTempFile("cache" + uri.hashCode(), "." + ext) --> Line_29 $$ urlLocal = processImage(urlLocal, uri) [FD]
Line_17 $$ urlLocal = File.createTempFile("cache" + uri.hashCode(), "." + FORMAT_ID_JP2) --> Line_29 $$ urlLocal = processImage(urlLocal, uri) [FD]
Line_24 $$ urlLocal = File.createTempFile("convert" + uri.hashCode(), ".img") --> Line_29 $$ urlLocal = processImage(urlLocal, uri) [FD]
Line_2 $$ public File convert(URI uri) throws DjatokaException --> Line_29 $$ urlLocal = processImage(urlLocal, uri) [FD]
Line_8 $$ InputStream src = IOUtils.getInputStream(uri.toURL()) --> Line_30 $$ src.close() [FD]
Line_20 $$ src = IOUtils.getInputStream(uri.toURL()) --> Line_30 $$ src.close() [FD]
Line_27 $$ FileOutputStream dest = new FileOutputStream(urlLocal) --> Line_31 $$ dest.close() [FD]
Line_4 $$ File urlLocal = null --> Line_34 $$ urlLocal.delete() [FD]
Line_11 $$ urlLocal = File.createTempFile("convert" + uri.hashCode(), "." + FORMAT_ID_TIF) --> Line_34 $$ urlLocal.delete() [FD]
Line_13 $$ urlLocal = File.createTempFile("cache" + uri.hashCode(), "." + ext) --> Line_34 $$ urlLocal.delete() [FD]
Line_17 $$ urlLocal = File.createTempFile("cache" + uri.hashCode(), "." + FORMAT_ID_JP2) --> Line_34 $$ urlLocal.delete() [FD]
Line_24 $$ urlLocal = File.createTempFile("convert" + uri.hashCode(), ".img") --> Line_34 $$ urlLocal.delete() [FD]
Line_29 $$ urlLocal = processImage(urlLocal, uri) --> Line_34 $$ urlLocal.delete() [FD]
Line_2 $$ public File convert(URI uri) throws DjatokaException --> Line_37 $$ if (processing.contains(uri.toString())) [FD]
