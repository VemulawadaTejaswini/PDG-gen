Line_2 $$ public static void unzip(File zipInFile, File outputDir) throws Exception --> Line_3 $$ Enumeration<? extends ZipEntry> entries [CD]
Line_2 $$ public static void unzip(File zipInFile, File outputDir) throws Exception --> Line_4 $$ ZipFile zipFile = new ZipFile(zipInFile) [CD]
Line_2 $$ public static void unzip(File zipInFile, File outputDir) throws Exception --> Line_5 $$ ZipInputStream zipInputStream = new ZipInputStream(new FileInputStream(zipInFile)) [CD]
Line_2 $$ public static void unzip(File zipInFile, File outputDir) throws Exception --> Line_6 $$ ZipEntry entry = (ZipEntry) zipInputStream.getNextEntry() [CD]
Line_5 $$ ZipInputStream zipInputStream = new ZipInputStream(new FileInputStream(zipInFile)) --> Line_6 $$ ZipEntry entry = (ZipEntry) zipInputStream.getNextEntry() [FD]
Line_2 $$ public static void unzip(File zipInFile, File outputDir) throws Exception --> Line_7 $$ File curOutDir = outputDir [CD]
Line_2 $$ public static void unzip(File zipInFile, File outputDir) throws Exception --> Line_8 $$ while (entry != null) [CD]
Line_8 $$ while (entry != null) --> Line_9 $$ if (entry.isDirectory()) [CD]
Line_9 $$ if (entry.isDirectory()) --> Line_10 $$ curOutDir = new File(curOutDir, entry.getName()) [CD]
Line_7 $$ File curOutDir = outputDir --> Line_10 $$ curOutDir = new File(curOutDir, entry.getName()) [FD]
Line_9 $$ if (entry.isDirectory()) --> Line_11 $$ curOutDir.mkdirs() [CD]
Line_10 $$ curOutDir = new File(curOutDir, entry.getName()) --> Line_11 $$ curOutDir.mkdirs() [FD]
Line_7 $$ File curOutDir = outputDir --> Line_11 $$ curOutDir.mkdirs() [FD]
Line_8 $$ while (entry != null) --> Line_14 $$ File outFile = new File(curOutDir, entry.getName()) [CD]
Line_8 $$ while (entry != null) --> Line_15 $$ File tempDir = outFile.getParentFile() [CD]
Line_14 $$ File outFile = new File(curOutDir, entry.getName()) --> Line_15 $$ File tempDir = outFile.getParentFile() [FD]
Line_8 $$ while (entry != null) --> Line_16 $$ if (!tempDir.exists()) [CD]
Line_15 $$ File tempDir = outFile.getParentFile() --> Line_16 $$ if (!tempDir.exists()) [FD]
Line_8 $$ while (entry != null) --> Line_17 $$ outFile.createNewFile() [CD]
Line_14 $$ File outFile = new File(curOutDir, entry.getName()) --> Line_17 $$ outFile.createNewFile() [FD]
Line_8 $$ while (entry != null) --> Line_18 $$ BufferedOutputStream outstream = new BufferedOutputStream(new FileOutputStream(outFile)) [CD]
Line_8 $$ while (entry != null) --> Line_19 $$ int n [CD]
Line_8 $$ while (entry != null) --> Line_20 $$ byte[] buf = new byte[1024] [CD]
Line_8 $$ while (entry != null) --> Line_21 $$ while ((n = zipInputStream.read(buf, 0, 1024)) > -1) outstream.write(buf, 0, n) [CD]
Line_19 $$ int n --> Line_21 $$ while ((n = zipInputStream.read(buf, 0, 1024)) > -1) outstream.write(buf, 0, n) [FD]
Line_5 $$ ZipInputStream zipInputStream = new ZipInputStream(new FileInputStream(zipInFile)) --> Line_21 $$ while ((n = zipInputStream.read(buf, 0, 1024)) > -1) outstream.write(buf, 0, n) [FD]
Line_20 $$ byte[] buf = new byte[1024] --> Line_21 $$ while ((n = zipInputStream.read(buf, 0, 1024)) > -1) outstream.write(buf, 0, n) [FD]
Line_18 $$ BufferedOutputStream outstream = new BufferedOutputStream(new FileOutputStream(outFile)) --> Line_21 $$ while ((n = zipInputStream.read(buf, 0, 1024)) > -1) outstream.write(buf, 0, n) [FD]
Line_8 $$ while (entry != null) --> Line_22 $$ outstream.flush() [CD]
Line_18 $$ BufferedOutputStream outstream = new BufferedOutputStream(new FileOutputStream(outFile)) --> Line_22 $$ outstream.flush() [FD]
Line_8 $$ while (entry != null) --> Line_23 $$ outstream.close() [CD]
Line_18 $$ BufferedOutputStream outstream = new BufferedOutputStream(new FileOutputStream(outFile)) --> Line_23 $$ outstream.close() [FD]
Line_8 $$ while (entry != null) --> Line_24 $$ zipInputStream.closeEntry() [CD]
Line_5 $$ ZipInputStream zipInputStream = new ZipInputStream(new FileInputStream(zipInFile)) --> Line_24 $$ zipInputStream.closeEntry() [FD]
Line_8 $$ while (entry != null) --> Line_25 $$ entry = zipInputStream.getNextEntry() [CD]
Line_5 $$ ZipInputStream zipInputStream = new ZipInputStream(new FileInputStream(zipInFile)) --> Line_25 $$ entry = zipInputStream.getNextEntry() [FD]
Line_2 $$ public static void unzip(File zipInFile, File outputDir) throws Exception --> Line_27 $$ zipInputStream.close() [CD]
Line_5 $$ ZipInputStream zipInputStream = new ZipInputStream(new FileInputStream(zipInFile)) --> Line_27 $$ zipInputStream.close() [FD]
Line_2 $$ public static void unzip(File zipInFile, File outputDir) throws Exception --> Line_28 $$ zipFile.close() [CD]
Line_4 $$ ZipFile zipFile = new ZipFile(zipInFile) --> Line_28 $$ zipFile.close() [FD]
