Line_2 $$ public static boolean BMPfromURL(URL url, MainClass mc) --> Line_3 $$ TextField TF = mc.TF [CD]
Line_2 $$ public static boolean BMPfromURL(URL url, MainClass mc) --> Line_4 $$ PixCanvas canvas = mc.canvas [CD]
Line_2 $$ public static boolean BMPfromURL(URL url, MainClass mc) --> Line_5 $$ Image image = null [CD]
Line_5 $$ Image image = null --> Line_7 $$ image = Toolkit.getDefaultToolkit().createImage(BMPReader.getBMPImage(url.openStream())) [FD]
Line_2 $$ public static boolean BMPfromURL(URL url, MainClass mc) --> Line_7 $$ image = Toolkit.getDefaultToolkit().createImage(BMPReader.getBMPImage(url.openStream())) [FD]
Line_2 $$ public static boolean BMPfromURL(URL url, MainClass mc) --> Line_11 $$ if (image == null) [CD]
Line_5 $$ Image image = null --> Line_11 $$ if (image == null) [FD]
Line_7 $$ image = Toolkit.getDefaultToolkit().createImage(BMPReader.getBMPImage(url.openStream())) --> Line_11 $$ if (image == null) [FD]
Line_11 $$ if (image == null) --> Line_12 $$ TF.setText("Error not a typical image BMP format") [CD]
Line_3 $$ TextField TF = mc.TF --> Line_12 $$ TF.setText("Error not a typical image BMP format") [FD]
Line_11 $$ if (image == null) --> Line_13 $$ return false [CD]
Line_2 $$ public static boolean BMPfromURL(URL url, MainClass mc) --> Line_15 $$ MediaTracker tr = new MediaTracker(canvas) [CD]
Line_2 $$ public static boolean BMPfromURL(URL url, MainClass mc) --> Line_16 $$ tr.addImage(image, 0) [CD]
Line_15 $$ MediaTracker tr = new MediaTracker(canvas) --> Line_16 $$ tr.addImage(image, 0) [FD]
Line_5 $$ Image image = null --> Line_16 $$ tr.addImage(image, 0) [FD]
Line_7 $$ image = Toolkit.getDefaultToolkit().createImage(BMPReader.getBMPImage(url.openStream())) --> Line_16 $$ tr.addImage(image, 0) [FD]
Line_15 $$ MediaTracker tr = new MediaTracker(canvas) --> Line_18 $$ tr.waitForID(0) [FD]
Line_2 $$ public static boolean BMPfromURL(URL url, MainClass mc) --> Line_22 $$ if (tr.isErrorID(0)) [CD]
Line_15 $$ MediaTracker tr = new MediaTracker(canvas) --> Line_22 $$ if (tr.isErrorID(0)) [FD]
Line_22 $$ if (tr.isErrorID(0)) --> Line_23 $$ Tools.debug(OpenOther.class, "Tracker error " + tr.getErrorsAny().toString()) [CD]
Line_15 $$ MediaTracker tr = new MediaTracker(canvas) --> Line_23 $$ Tools.debug(OpenOther.class, "Tracker error " + tr.getErrorsAny().toString()) [FD]
Line_22 $$ if (tr.isErrorID(0)) --> Line_24 $$ return false [CD]
Line_2 $$ public static boolean BMPfromURL(URL url, MainClass mc) --> Line_26 $$ PixObject po = new PixObject(url, image, canvas, false, null) [CD]
Line_2 $$ public static boolean BMPfromURL(URL url, MainClass mc) --> Line_27 $$ mc.vimages.addElement(po) [CD]
Line_26 $$ PixObject po = new PixObject(url, image, canvas, false, null) --> Line_27 $$ mc.vimages.addElement(po) [FD]
Line_2 $$ public static boolean BMPfromURL(URL url, MainClass mc) --> Line_28 $$ TF.setText(url.toString()) [CD]
Line_2 $$ public static boolean BMPfromURL(URL url, MainClass mc) --> Line_28 $$ TF.setText(url.toString()) [FD]
Line_3 $$ TextField TF = mc.TF --> Line_28 $$ TF.setText(url.toString()) [FD]
Line_2 $$ public static boolean BMPfromURL(URL url, MainClass mc) --> Line_29 $$ canvas.repaint() [CD]
Line_4 $$ PixCanvas canvas = mc.canvas --> Line_29 $$ canvas.repaint() [FD]
Line_2 $$ public static boolean BMPfromURL(URL url, MainClass mc) --> Line_30 $$ return true [CD]
