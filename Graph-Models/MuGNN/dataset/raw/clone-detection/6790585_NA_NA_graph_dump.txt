Line_2 $$ private void sendToServer(String fichaID, String respostas) throws FileNotFoundException, ParserConfigurationException, SAXException, IOException, URISyntaxException --> Line_3 $$ ArrayList params = new ArrayList() [CD]
Line_2 $$ private void sendToServer(String fichaID, String respostas) throws FileNotFoundException, ParserConfigurationException, SAXException, IOException, URISyntaxException --> Line_4 $$ params.add(new BasicNameValuePair("xml", respostas)) [CD]
Line_3 $$ ArrayList params = new ArrayList() --> Line_4 $$ params.add(new BasicNameValuePair("xml", respostas)) [FD]
Line_2 $$ private void sendToServer(String fichaID, String respostas) throws FileNotFoundException, ParserConfigurationException, SAXException, IOException, URISyntaxException --> Line_5 $$ params.add(new BasicNameValuePair("idForm", fichaID)) [CD]
Line_3 $$ ArrayList params = new ArrayList() --> Line_5 $$ params.add(new BasicNameValuePair("idForm", fichaID)) [FD]
Line_2 $$ private void sendToServer(String fichaID, String respostas) throws FileNotFoundException, ParserConfigurationException, SAXException, IOException, URISyntaxException --> Line_6 $$ URI uri = URIUtils.createURI("http", "172.20.9.144", 8080, "/PSFServer/SaveAnswers", URLEncodedUtils.format(params, "UTF-8"), null) [CD]
Line_3 $$ ArrayList params = new ArrayList() --> Line_6 $$ URI uri = URIUtils.createURI("http", "172.20.9.144", 8080, "/PSFServer/SaveAnswers", URLEncodedUtils.format(params, "UTF-8"), null) [FD]
Line_2 $$ private void sendToServer(String fichaID, String respostas) throws FileNotFoundException, ParserConfigurationException, SAXException, IOException, URISyntaxException --> Line_7 $$ HttpPost request = new HttpPost(uri) [CD]
Line_2 $$ private void sendToServer(String fichaID, String respostas) throws FileNotFoundException, ParserConfigurationException, SAXException, IOException, URISyntaxException --> Line_8 $$ request.setEntity(new UrlEncodedFormEntity(params, HTTP.UTF_8)) [CD]
Line_7 $$ HttpPost request = new HttpPost(uri) --> Line_8 $$ request.setEntity(new UrlEncodedFormEntity(params, HTTP.UTF_8)) [FD]
Line_2 $$ private void sendToServer(String fichaID, String respostas) throws FileNotFoundException, ParserConfigurationException, SAXException, IOException, URISyntaxException --> Line_9 $$ HttpClient client = new DefaultHttpClient() [CD]
Line_2 $$ private void sendToServer(String fichaID, String respostas) throws FileNotFoundException, ParserConfigurationException, SAXException, IOException, URISyntaxException --> Line_10 $$ HttpResponse httpResponse = client.execute(request) [CD]
Line_9 $$ HttpClient client = new DefaultHttpClient() --> Line_10 $$ HttpResponse httpResponse = client.execute(request) [FD]
Line_7 $$ HttpPost request = new HttpPost(uri) --> Line_10 $$ HttpResponse httpResponse = client.execute(request) [FD]
Line_2 $$ private void sendToServer(String fichaID, String respostas) throws FileNotFoundException, ParserConfigurationException, SAXException, IOException, URISyntaxException --> Line_11 $$ BufferedReader in = new BufferedReader(new InputStreamReader(httpResponse.getEntity().getContent())) [CD]
Line_10 $$ HttpResponse httpResponse = client.execute(request) --> Line_11 $$ BufferedReader in = new BufferedReader(new InputStreamReader(httpResponse.getEntity().getContent())) [FD]
Line_2 $$ private void sendToServer(String fichaID, String respostas) throws FileNotFoundException, ParserConfigurationException, SAXException, IOException, URISyntaxException --> Line_12 $$ StringBuffer sb = new StringBuffer("") [CD]
Line_2 $$ private void sendToServer(String fichaID, String respostas) throws FileNotFoundException, ParserConfigurationException, SAXException, IOException, URISyntaxException --> Line_13 $$ String line = "" [CD]
Line_2 $$ private void sendToServer(String fichaID, String respostas) throws FileNotFoundException, ParserConfigurationException, SAXException, IOException, URISyntaxException --> Line_14 $$ String NL = System.getProperty("line.separator") [CD]
Line_2 $$ private void sendToServer(String fichaID, String respostas) throws FileNotFoundException, ParserConfigurationException, SAXException, IOException, URISyntaxException --> Line_15 $$ while ((line = in.readLine()) != null) [CD]
Line_13 $$ String line = "" --> Line_15 $$ while ((line = in.readLine()) != null) [FD]
Line_11 $$ BufferedReader in = new BufferedReader(new InputStreamReader(httpResponse.getEntity().getContent())) --> Line_15 $$ while ((line = in.readLine()) != null) [FD]
Line_15 $$ while ((line = in.readLine()) != null) --> Line_16 $$ sb.append(line + NL) [CD]
Line_12 $$ StringBuffer sb = new StringBuffer("") --> Line_16 $$ sb.append(line + NL) [FD]
Line_2 $$ private void sendToServer(String fichaID, String respostas) throws FileNotFoundException, ParserConfigurationException, SAXException, IOException, URISyntaxException --> Line_18 $$ in.close() [CD]
Line_11 $$ BufferedReader in = new BufferedReader(new InputStreamReader(httpResponse.getEntity().getContent())) --> Line_18 $$ in.close() [FD]
Line_2 $$ private void sendToServer(String fichaID, String respostas) throws FileNotFoundException, ParserConfigurationException, SAXException, IOException, URISyntaxException --> Line_19 $$ String resposta = sb.toString() [CD]
Line_12 $$ StringBuffer sb = new StringBuffer("") --> Line_19 $$ String resposta = sb.toString() [FD]
Line_2 $$ private void sendToServer(String fichaID, String respostas) throws FileNotFoundException, ParserConfigurationException, SAXException, IOException, URISyntaxException --> Line_20 $$ if (resposta != null || resposta != "") [CD]
Line_20 $$ if (resposta != null || resposta != "") --> Line_21 $$ new DatabaseManager(this).getWritableDatabase().execSQL("delete from " + DatabaseManager.getTableDados()) [CD]
Line_2 $$ private void sendToServer(String fichaID, String respostas) throws FileNotFoundException, ParserConfigurationException, SAXException, IOException, URISyntaxException --> Line_23 $$ backToMain() [CD]
