Line_2 $$ public static void unZip(String unZipfileName, String outputDirectory) throws IOException, FileNotFoundException --> Line_3 $$ FileOutputStream fileOut [CD]
Line_2 $$ public static void unZip(String unZipfileName, String outputDirectory) throws IOException, FileNotFoundException --> Line_4 $$ File file [CD]
Line_2 $$ public static void unZip(String unZipfileName, String outputDirectory) throws IOException, FileNotFoundException --> Line_5 $$ ZipEntry zipEntry [CD]
Line_2 $$ public static void unZip(String unZipfileName, String outputDirectory) throws IOException, FileNotFoundException --> Line_6 $$ ZipInputStream zipIn = new ZipInputStream(new BufferedInputStream(new FileInputStream(unZipfileName)), encoder) [CD]
Line_2 $$ public static void unZip(String unZipfileName, String outputDirectory) throws IOException, FileNotFoundException --> Line_7 $$ while ((zipEntry = zipIn.getNextEntry()) != null) [CD]
Line_6 $$ ZipInputStream zipIn = new ZipInputStream(new BufferedInputStream(new FileInputStream(unZipfileName)), encoder) --> Line_7 $$ while ((zipEntry = zipIn.getNextEntry()) != null) [FD]
Line_4 $$ File file --> Line_8 $$ file = new File(outputDirectory + File.separator + zipEntry.getName()) [FD]
Line_4 $$ File file --> Line_10 $$ createDirectory(file.getPath(), "") [FD]
Line_4 $$ File file --> Line_12 $$ File parent = file.getParentFile() [FD]
Line_12 $$ File parent = file.getParentFile() --> Line_13 $$ if (!parent.exists()) [FD]
Line_13 $$ if (!parent.exists()) --> Line_14 $$ createDirectory(parent.getPath(), "") [CD]
Line_12 $$ File parent = file.getParentFile() --> Line_14 $$ createDirectory(parent.getPath(), "") [FD]
Line_3 $$ FileOutputStream fileOut --> Line_16 $$ fileOut = new FileOutputStream(file) [FD]
Line_17 $$ int readedBytes --> Line_18 $$ while ((readedBytes = zipIn.read(buf)) > 0) [FD]
Line_6 $$ ZipInputStream zipIn = new ZipInputStream(new BufferedInputStream(new FileInputStream(unZipfileName)), encoder) --> Line_18 $$ while ((readedBytes = zipIn.read(buf)) > 0) [FD]
Line_18 $$ while ((readedBytes = zipIn.read(buf)) > 0) --> Line_19 $$ fileOut.write(buf, 0, readedBytes) [CD]
Line_18 $$ while ((readedBytes = zipIn.read(buf)) > 0) --> Line_19 $$ fileOut.write(buf, 0, readedBytes) [FD]
Line_16 $$ fileOut = new FileOutputStream(file) --> Line_19 $$ fileOut.write(buf, 0, readedBytes) [FD]
Line_3 $$ FileOutputStream fileOut --> Line_19 $$ fileOut.write(buf, 0, readedBytes) [FD]
Line_17 $$ int readedBytes --> Line_19 $$ fileOut.write(buf, 0, readedBytes) [FD]
Line_16 $$ fileOut = new FileOutputStream(file) --> Line_21 $$ fileOut.close() [FD]
Line_3 $$ FileOutputStream fileOut --> Line_21 $$ fileOut.close() [FD]
Line_6 $$ ZipInputStream zipIn = new ZipInputStream(new BufferedInputStream(new FileInputStream(unZipfileName)), encoder) --> Line_23 $$ zipIn.closeEntry() [FD]
