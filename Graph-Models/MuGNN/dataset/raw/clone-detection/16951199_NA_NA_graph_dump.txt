Line_2 $$ public void testReleaseOnIOException() throws Exception --> Line_3 $$ localServer.register("/dropdead", new HttpRequestHandler() [CD]
Line_3 $$ localServer.register("/dropdead", new HttpRequestHandler() --> Line_5 $$ BasicHttpEntity entity = new BasicHttpEntity() [CD]
Line_5 $$ BasicHttpEntity entity = new BasicHttpEntity() --> Line_7 $$ byte[] tmp = new byte[5] [CD]
Line_5 $$ BasicHttpEntity entity = new BasicHttpEntity() --> Line_8 $$ outstream.write(tmp) [CD]
Line_5 $$ BasicHttpEntity entity = new BasicHttpEntity() --> Line_8 $$ outstream.write(tmp) [FD]
Line_7 $$ byte[] tmp = new byte[5] --> Line_8 $$ outstream.write(tmp) [FD]
Line_5 $$ BasicHttpEntity entity = new BasicHttpEntity() --> Line_9 $$ outstream.flush() [CD]
Line_5 $$ BasicHttpEntity entity = new BasicHttpEntity() --> Line_9 $$ outstream.flush() [FD]
Line_5 $$ BasicHttpEntity entity = new BasicHttpEntity() --> Line_10 $$ DefaultHttpServerConnection conn = (DefaultHttpServerConnection) context.getAttribute(ExecutionContext.HTTP_CONNECTION) [CD]
Line_3 $$ localServer.register("/dropdead", new HttpRequestHandler() --> Line_10 $$ DefaultHttpServerConnection conn = (DefaultHttpServerConnection) context.getAttribute(ExecutionContext.HTTP_CONNECTION) [FD]
Line_10 $$ DefaultHttpServerConnection conn = (DefaultHttpServerConnection) context.getAttribute(ExecutionContext.HTTP_CONNECTION) --> Line_12 $$ conn.sendResponseHeader(response) [FD]
Line_3 $$ localServer.register("/dropdead", new HttpRequestHandler() --> Line_12 $$ conn.sendResponseHeader(response) [FD]
Line_3 $$ localServer.register("/dropdead", new HttpRequestHandler() --> Line_17 $$ entity.setChunked(true) [CD]
Line_5 $$ BasicHttpEntity entity = new BasicHttpEntity() --> Line_17 $$ entity.setChunked(true) [FD]
Line_3 $$ localServer.register("/dropdead", new HttpRequestHandler() --> Line_18 $$ response.setEntity(entity) [CD]
Line_3 $$ localServer.register("/dropdead", new HttpRequestHandler() --> Line_18 $$ response.setEntity(entity) [FD]
Line_5 $$ BasicHttpEntity entity = new BasicHttpEntity() --> Line_18 $$ response.setEntity(entity) [FD]
Line_2 $$ public void testReleaseOnIOException() throws Exception --> Line_21 $$ HttpParams params = defaultParams.copy() [CD]
Line_2 $$ public void testReleaseOnIOException() throws Exception --> Line_22 $$ ConnManagerParams.setMaxTotalConnections(params, 1) [CD]
Line_2 $$ public void testReleaseOnIOException() throws Exception --> Line_23 $$ ConnManagerParams.setMaxConnectionsPerRoute(params, new ConnPerRouteBean(1)) [CD]
Line_2 $$ public void testReleaseOnIOException() throws Exception --> Line_24 $$ ThreadSafeClientConnManager mgr = createTSCCM(params, null) [CD]
Line_2 $$ public void testReleaseOnIOException() throws Exception --> Line_25 $$ assertEquals(0, mgr.getConnectionsInPool()) [CD]
Line_2 $$ public void testReleaseOnIOException() throws Exception --> Line_28 $$ HttpHost target = getServerHttp() [CD]
Line_2 $$ public void testReleaseOnIOException() throws Exception --> Line_29 $$ HttpResponse response = client.execute(target, httpget) [CD]
Line_2 $$ public void testReleaseOnIOException() throws Exception --> Line_30 $$ ClientConnectionRequest connreq = mgr.requestConnection(new HttpRoute(target), null) [CD]
Line_2 $$ public void testReleaseOnIOException() throws Exception --> Line_36 $$ HttpEntity e = response.getEntity() [CD]
Line_3 $$ localServer.register("/dropdead", new HttpRequestHandler() --> Line_36 $$ HttpEntity e = response.getEntity() [FD]
Line_2 $$ public void testReleaseOnIOException() throws Exception --> Line_37 $$ assertNotNull(e) [CD]
Line_2 $$ public void testReleaseOnIOException() throws Exception --> Line_43 $$ assertEquals(0, mgr.getConnectionsInPool()) [CD]
Line_2 $$ public void testReleaseOnIOException() throws Exception --> Line_44 $$ connreq = mgr.requestConnection(new HttpRoute(target), null) [CD]
Line_2 $$ public void testReleaseOnIOException() throws Exception --> Line_45 $$ ManagedClientConnection conn = connreq.getConnection(250, TimeUnit.MILLISECONDS) [CD]
Line_2 $$ public void testReleaseOnIOException() throws Exception --> Line_46 $$ mgr.releaseConnection(conn, -1, null) [CD]
Line_10 $$ DefaultHttpServerConnection conn = (DefaultHttpServerConnection) context.getAttribute(ExecutionContext.HTTP_CONNECTION) --> Line_46 $$ mgr.releaseConnection(conn, -1, null) [FD]
Line_2 $$ public void testReleaseOnIOException() throws Exception --> Line_47 $$ mgr.shutdown() [CD]
