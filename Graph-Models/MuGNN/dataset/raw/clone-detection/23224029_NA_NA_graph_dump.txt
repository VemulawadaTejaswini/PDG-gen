Line_2 $$ private HttpURLConnection getItemURLConnection(final String method, final String id, final byte[] data, final Map<String, List<String>> headers) throws IOException --> Line_3 $$ if (m_bucket == null) [CD]
Line_2 $$ private HttpURLConnection getItemURLConnection(final String method, final String id, final byte[] data, final Map<String, List<String>> headers) throws IOException --> Line_6 $$ final URL itemURL = new URL("http://" + m_host + "/" + m_bucket + "/" + id) [CD]
Line_2 $$ private HttpURLConnection getItemURLConnection(final String method, final String id, final byte[] data, final Map<String, List<String>> headers) throws IOException --> Line_7 $$ final HttpURLConnection urlConn = (HttpURLConnection) itemURL.openConnection() [CD]
Line_6 $$ final URL itemURL = new URL("http://" + m_host + "/" + m_bucket + "/" + id) --> Line_7 $$ final HttpURLConnection urlConn = (HttpURLConnection) itemURL.openConnection() [FD]
Line_2 $$ private HttpURLConnection getItemURLConnection(final String method, final String id, final byte[] data, final Map<String, List<String>> headers) throws IOException --> Line_8 $$ urlConn.setRequestMethod(method) [CD]
Line_2 $$ private HttpURLConnection getItemURLConnection(final String method, final String id, final byte[] data, final Map<String, List<String>> headers) throws IOException --> Line_8 $$ urlConn.setRequestMethod(method) [FD]
Line_7 $$ final HttpURLConnection urlConn = (HttpURLConnection) itemURL.openConnection() --> Line_8 $$ urlConn.setRequestMethod(method) [FD]
Line_2 $$ private HttpURLConnection getItemURLConnection(final String method, final String id, final byte[] data, final Map<String, List<String>> headers) throws IOException --> Line_9 $$ urlConn.setReadTimeout(READ_TIMEOUT) [CD]
Line_7 $$ final HttpURLConnection urlConn = (HttpURLConnection) itemURL.openConnection() --> Line_9 $$ urlConn.setReadTimeout(READ_TIMEOUT) [FD]
Line_2 $$ private HttpURLConnection getItemURLConnection(final String method, final String id, final byte[] data, final Map<String, List<String>> headers) throws IOException --> Line_10 $$ if (headers != null) [CD]
Line_2 $$ private HttpURLConnection getItemURLConnection(final String method, final String id, final byte[] data, final Map<String, List<String>> headers) throws IOException --> Line_10 $$ if (headers != null) [FD]
Line_2 $$ private HttpURLConnection getItemURLConnection(final String method, final String id, final byte[] data, final Map<String, List<String>> headers) throws IOException --> Line_11 $$ for (final Map.Entry<String, List<String>> me : headers.entrySet()) [FD]
Line_7 $$ final HttpURLConnection urlConn = (HttpURLConnection) itemURL.openConnection() --> Line_13 $$ urlConn.setRequestProperty(me.getKey(), v) [FD]
Line_12 $$ for (final String v : me.getValue()) --> Line_13 $$ urlConn.setRequestProperty(me.getKey(), v) [FD]
Line_2 $$ private HttpURLConnection getItemURLConnection(final String method, final String id, final byte[] data, final Map<String, List<String>> headers) throws IOException --> Line_17 $$ addAuthorization(urlConn, method, data) [CD]
Line_2 $$ private HttpURLConnection getItemURLConnection(final String method, final String id, final byte[] data, final Map<String, List<String>> headers) throws IOException --> Line_17 $$ addAuthorization(urlConn, method, data) [FD]
Line_7 $$ final HttpURLConnection urlConn = (HttpURLConnection) itemURL.openConnection() --> Line_17 $$ addAuthorization(urlConn, method, data) [FD]
Line_2 $$ private HttpURLConnection getItemURLConnection(final String method, final String id, final byte[] data, final Map<String, List<String>> headers) throws IOException --> Line_18 $$ return urlConn [CD]
