Line_2 $$ public void executeInterruptible() --> Line_3 $$ EncodeFilesDialog dialog = (EncodeFilesDialog) this.dialog [CD]
Line_2 $$ public void executeInterruptible() --> Line_4 $$ File encoderFile = null [CD]
Line_2 $$ public void executeInterruptible() --> Line_5 $$ InputStream is = null [CD]
Line_2 $$ public void executeInterruptible() --> Line_6 $$ OutputStream os = null [CD]
Line_8 $$ if (Platform.isWindows()) --> Line_9 $$ encoderFile = new File(".", "lame.exe") [CD]
Line_4 $$ File encoderFile = null --> Line_9 $$ encoderFile = new File(".", "lame.exe") [FD]
Line_8 $$ if (Platform.isWindows()) --> Line_10 $$ is = Thread.currentThread().getContextClassLoader().getResourceAsStream("lame/lame.exe") [CD]
Line_5 $$ InputStream is = null --> Line_10 $$ is = Thread.currentThread().getContextClassLoader().getResourceAsStream("lame/lame.exe") [FD]
Line_8 $$ if (Platform.isWindows()) --> Line_11 $$ if (Platform.isLinux()) [CD]
Line_11 $$ if (Platform.isLinux()) --> Line_12 $$ encoderFile = new File(".", "lame") [CD]
Line_4 $$ File encoderFile = null --> Line_12 $$ encoderFile = new File(".", "lame") [FD]
Line_9 $$ encoderFile = new File(".", "lame.exe") --> Line_12 $$ encoderFile = new File(".", "lame") [FD]
Line_11 $$ if (Platform.isLinux()) --> Line_13 $$ is = Thread.currentThread().getContextClassLoader().getResourceAsStream("lame/lame") [CD]
Line_5 $$ InputStream is = null --> Line_13 $$ is = Thread.currentThread().getContextClassLoader().getResourceAsStream("lame/lame") [FD]
Line_10 $$ is = Thread.currentThread().getContextClassLoader().getResourceAsStream("lame/lame.exe") --> Line_13 $$ is = Thread.currentThread().getContextClassLoader().getResourceAsStream("lame/lame") [FD]
Line_11 $$ if (Platform.isLinux()) --> Line_15 $$ MainWindowInterface.showError(new Exception(Messages.getString("operations.file.encode.dialog.notsupported"))) [CD]
Line_11 $$ if (Platform.isLinux()) --> Line_16 $$ return [CD]
Line_6 $$ OutputStream os = null --> Line_18 $$ os = new FileOutputStream(encoderFile) [FD]
Line_5 $$ InputStream is = null --> Line_19 $$ IOUtils.copy(is, os) [FD]
Line_10 $$ is = Thread.currentThread().getContextClassLoader().getResourceAsStream("lame/lame.exe") --> Line_19 $$ IOUtils.copy(is, os) [FD]
Line_13 $$ is = Thread.currentThread().getContextClassLoader().getResourceAsStream("lame/lame") --> Line_19 $$ IOUtils.copy(is, os) [FD]
Line_6 $$ OutputStream os = null --> Line_19 $$ IOUtils.copy(is, os) [FD]
Line_18 $$ os = new FileOutputStream(encoderFile) --> Line_19 $$ IOUtils.copy(is, os) [FD]
Line_5 $$ InputStream is = null --> Line_25 $$ IOUtils.closeQuietly(is) [FD]
Line_10 $$ is = Thread.currentThread().getContextClassLoader().getResourceAsStream("lame/lame.exe") --> Line_25 $$ IOUtils.closeQuietly(is) [FD]
Line_13 $$ is = Thread.currentThread().getContextClassLoader().getResourceAsStream("lame/lame") --> Line_25 $$ IOUtils.closeQuietly(is) [FD]
Line_6 $$ OutputStream os = null --> Line_26 $$ IOUtils.closeQuietly(os) [FD]
Line_18 $$ os = new FileOutputStream(encoderFile) --> Line_26 $$ IOUtils.closeQuietly(os) [FD]
Line_2 $$ public void executeInterruptible() --> Line_28 $$ encoderFile.setExecutable(true, true) [CD]
Line_4 $$ File encoderFile = null --> Line_28 $$ encoderFile.setExecutable(true, true) [FD]
Line_9 $$ encoderFile = new File(".", "lame.exe") --> Line_28 $$ encoderFile.setExecutable(true, true) [FD]
Line_12 $$ encoderFile = new File(".", "lame") --> Line_28 $$ encoderFile.setExecutable(true, true) [FD]
Line_31 $$ for (int i = 0, l = filesModel.getSize(); i < l; i++) --> Line_32 $$ if (isInterrupted()) [CD]
Line_31 $$ for (int i = 0, l = filesModel.getSize(); i < l; i++) --> Line_33 $$ IconAndFileListElement element = (IconAndFileListElement) filesModel.get(i) [CD]
Line_31 $$ for (int i = 0, l = filesModel.getSize(); i < l; i++) --> Line_33 $$ IconAndFileListElement element = (IconAndFileListElement) filesModel.get(i) [FD]
Line_31 $$ for (int i = 0, l = filesModel.getSize(); i < l; i++) --> Line_34 $$ File origFile = element.getFile() [CD]
Line_33 $$ IconAndFileListElement element = (IconAndFileListElement) filesModel.get(i) --> Line_34 $$ File origFile = element.getFile() [FD]
Line_31 $$ for (int i = 0, l = filesModel.getSize(); i < l; i++) --> Line_35 $$ totalSize += origFile.length() [CD]
Line_30 $$ long totalSize = 0l --> Line_35 $$ totalSize += origFile.length() [FD]
Line_34 $$ File origFile = element.getFile() --> Line_35 $$ totalSize += origFile.length() [FD]
Line_3 $$ EncodeFilesDialog dialog = (EncodeFilesDialog) this.dialog --> Line_37 $$ rangeModel = dialog.getProgressBar().getModel() [FD]
Line_3 $$ EncodeFilesDialog dialog = (EncodeFilesDialog) this.dialog --> Line_40 $$ int parallelProcesses = dialog.getParallelProcesses() [FD]
Line_31 $$ for (int i = 0, l = filesModel.getSize(); i < l; i++) --> Line_43 $$ for (int i = 0; i < parallelProcesses; i++) [FD]
Line_40 $$ int parallelProcesses = dialog.getParallelProcesses() --> Line_43 $$ for (int i = 0; i < parallelProcesses; i++) [FD]
Line_43 $$ for (int i = 0; i < parallelProcesses; i++) --> Line_44 $$ EncoderLauncherRunnable encoderLauncherRunnable = new EncoderLauncherRunnable(i, dialog, encoderFile) [CD]
Line_43 $$ for (int i = 0; i < parallelProcesses; i++) --> Line_45 $$ Thread thread = new Thread(encoderLauncherRunnable) [CD]
Line_43 $$ for (int i = 0; i < parallelProcesses; i++) --> Line_46 $$ encodingRunnables.add(encoderLauncherRunnable) [CD]
Line_44 $$ EncoderLauncherRunnable encoderLauncherRunnable = new EncoderLauncherRunnable(i, dialog, encoderFile) --> Line_46 $$ encodingRunnables.add(encoderLauncherRunnable) [FD]
Line_43 $$ for (int i = 0; i < parallelProcesses; i++) --> Line_47 $$ encodingThreads.add(thread) [CD]
Line_41 $$ List<Thread> encodingThreads = new ArrayList<Thread>() --> Line_47 $$ encodingThreads.add(thread) [FD]
Line_45 $$ Thread thread = new Thread(encoderLauncherRunnable) --> Line_47 $$ encodingThreads.add(thread) [FD]
Line_43 $$ for (int i = 0; i < parallelProcesses; i++) --> Line_48 $$ thread.start() [CD]
Line_45 $$ Thread thread = new Thread(encoderLauncherRunnable) --> Line_48 $$ thread.start() [FD]
Line_45 $$ Thread thread = new Thread(encoderLauncherRunnable) --> Line_51 $$ thread.join() [FD]
Line_50 $$ for (Thread thread : encodingThreads) --> Line_51 $$ thread.join() [FD]
Line_4 $$ File encoderFile = null --> Line_58 $$ if (encoderFile != null) [FD]
Line_9 $$ encoderFile = new File(".", "lame.exe") --> Line_58 $$ if (encoderFile != null) [FD]
Line_12 $$ encoderFile = new File(".", "lame") --> Line_58 $$ if (encoderFile != null) [FD]
Line_3 $$ EncodeFilesDialog dialog = (EncodeFilesDialog) this.dialog --> Line_59 $$ dialog.setVisible(false) [FD]
