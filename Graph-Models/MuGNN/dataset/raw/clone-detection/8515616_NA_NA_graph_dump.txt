Line_2 $$ public ResponseStatus nowPlaying(String artist, String track, String album, int length, int tracknumber) throws IOException --> Line_3 $$ if (sessionId == null) [CD]
Line_2 $$ public ResponseStatus nowPlaying(String artist, String track, String album, int length, int tracknumber) throws IOException --> Line_4 $$ String b = album != null ? encode(album) : "" [CD]
Line_2 $$ public ResponseStatus nowPlaying(String artist, String track, String album, int length, int tracknumber) throws IOException --> Line_4 $$ String b = album != null ? encode(album) : "" [FD]
Line_2 $$ public ResponseStatus nowPlaying(String artist, String track, String album, int length, int tracknumber) throws IOException --> Line_5 $$ String l = length == -1 ? "" : String.valueOf(length) [CD]
Line_2 $$ public ResponseStatus nowPlaying(String artist, String track, String album, int length, int tracknumber) throws IOException --> Line_5 $$ String l = length == -1 ? "" : String.valueOf(length) [FD]
Line_2 $$ public ResponseStatus nowPlaying(String artist, String track, String album, int length, int tracknumber) throws IOException --> Line_6 $$ String n = tracknumber == -1 ? "" : String.valueOf(tracknumber) [CD]
Line_2 $$ public ResponseStatus nowPlaying(String artist, String track, String album, int length, int tracknumber) throws IOException --> Line_6 $$ String n = tracknumber == -1 ? "" : String.valueOf(tracknumber) [FD]
Line_2 $$ public ResponseStatus nowPlaying(String artist, String track, String album, int length, int tracknumber) throws IOException --> Line_7 $$ String body = String.format("s=%s&a=%s&t=%s&b=%s&l=%s&n=%s&m=", sessionId, encode(artist), encode(track), b, l, n) [CD]
Line_2 $$ public ResponseStatus nowPlaying(String artist, String track, String album, int length, int tracknumber) throws IOException --> Line_7 $$ String body = String.format("s=%s&a=%s&t=%s&b=%s&l=%s&n=%s&m=", sessionId, encode(artist), encode(track), b, l, n) [FD]
Line_4 $$ String b = album != null ? encode(album) : "" --> Line_7 $$ String body = String.format("s=%s&a=%s&t=%s&b=%s&l=%s&n=%s&m=", sessionId, encode(artist), encode(track), b, l, n) [FD]
Line_5 $$ String l = length == -1 ? "" : String.valueOf(length) --> Line_7 $$ String body = String.format("s=%s&a=%s&t=%s&b=%s&l=%s&n=%s&m=", sessionId, encode(artist), encode(track), b, l, n) [FD]
Line_6 $$ String n = tracknumber == -1 ? "" : String.valueOf(tracknumber) --> Line_7 $$ String body = String.format("s=%s&a=%s&t=%s&b=%s&l=%s&n=%s&m=", sessionId, encode(artist), encode(track), b, l, n) [FD]
Line_2 $$ public ResponseStatus nowPlaying(String artist, String track, String album, int length, int tracknumber) throws IOException --> Line_8 $$ System.out.println("now playing: " + body) [CD]
Line_2 $$ public ResponseStatus nowPlaying(String artist, String track, String album, int length, int tracknumber) throws IOException --> Line_9 $$ Proxy proxy = Caller.getInstance().getProxy() [CD]
Line_2 $$ public ResponseStatus nowPlaying(String artist, String track, String album, int length, int tracknumber) throws IOException --> Line_10 $$ HttpURLConnection urlConnection = Caller.getInstance().openConnection(nowPlayingUrl) [CD]
Line_2 $$ public ResponseStatus nowPlaying(String artist, String track, String album, int length, int tracknumber) throws IOException --> Line_11 $$ urlConnection.setRequestMethod("POST") [CD]
Line_10 $$ HttpURLConnection urlConnection = Caller.getInstance().openConnection(nowPlayingUrl) --> Line_11 $$ urlConnection.setRequestMethod("POST") [FD]
Line_2 $$ public ResponseStatus nowPlaying(String artist, String track, String album, int length, int tracknumber) throws IOException --> Line_12 $$ urlConnection.setDoOutput(true) [CD]
Line_10 $$ HttpURLConnection urlConnection = Caller.getInstance().openConnection(nowPlayingUrl) --> Line_12 $$ urlConnection.setDoOutput(true) [FD]
Line_2 $$ public ResponseStatus nowPlaying(String artist, String track, String album, int length, int tracknumber) throws IOException --> Line_13 $$ OutputStream outputStream = urlConnection.getOutputStream() [CD]
Line_10 $$ HttpURLConnection urlConnection = Caller.getInstance().openConnection(nowPlayingUrl) --> Line_13 $$ OutputStream outputStream = urlConnection.getOutputStream() [FD]
Line_2 $$ public ResponseStatus nowPlaying(String artist, String track, String album, int length, int tracknumber) throws IOException --> Line_14 $$ BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(outputStream)) [CD]
Line_2 $$ public ResponseStatus nowPlaying(String artist, String track, String album, int length, int tracknumber) throws IOException --> Line_15 $$ writer.write(body) [CD]
Line_14 $$ BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(outputStream)) --> Line_15 $$ writer.write(body) [FD]
Line_7 $$ String body = String.format("s=%s&a=%s&t=%s&b=%s&l=%s&n=%s&m=", sessionId, encode(artist), encode(track), b, l, n) --> Line_15 $$ writer.write(body) [FD]
Line_2 $$ public ResponseStatus nowPlaying(String artist, String track, String album, int length, int tracknumber) throws IOException --> Line_16 $$ writer.close() [CD]
Line_14 $$ BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(outputStream)) --> Line_16 $$ writer.close() [FD]
Line_2 $$ public ResponseStatus nowPlaying(String artist, String track, String album, int length, int tracknumber) throws IOException --> Line_17 $$ InputStream is = urlConnection.getInputStream() [CD]
Line_10 $$ HttpURLConnection urlConnection = Caller.getInstance().openConnection(nowPlayingUrl) --> Line_17 $$ InputStream is = urlConnection.getInputStream() [FD]
Line_2 $$ public ResponseStatus nowPlaying(String artist, String track, String album, int length, int tracknumber) throws IOException --> Line_18 $$ BufferedReader r = new BufferedReader(new InputStreamReader(is)) [CD]
Line_2 $$ public ResponseStatus nowPlaying(String artist, String track, String album, int length, int tracknumber) throws IOException --> Line_19 $$ String status = r.readLine() [CD]
Line_18 $$ BufferedReader r = new BufferedReader(new InputStreamReader(is)) --> Line_19 $$ String status = r.readLine() [FD]
Line_2 $$ public ResponseStatus nowPlaying(String artist, String track, String album, int length, int tracknumber) throws IOException --> Line_20 $$ r.close() [CD]
Line_18 $$ BufferedReader r = new BufferedReader(new InputStreamReader(is)) --> Line_20 $$ r.close() [FD]
Line_2 $$ public ResponseStatus nowPlaying(String artist, String track, String album, int length, int tracknumber) throws IOException --> Line_21 $$ return new ResponseStatus(ResponseStatus.codeForStatus(status)) [CD]
Line_19 $$ String status = r.readLine() --> Line_21 $$ return new ResponseStatus(ResponseStatus.codeForStatus(status)) [FD]
