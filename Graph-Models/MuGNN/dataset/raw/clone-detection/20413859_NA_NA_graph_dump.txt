Line_2 $$ public void doFilter(final ServletRequest request, final ServletResponse response, final FilterChain chain) throws IOException, ServletException --> Line_3 $$ if (request instanceof HttpServletRequest && response instanceof HttpServletResponse) [CD]
Line_3 $$ if (request instanceof HttpServletRequest && response instanceof HttpServletResponse) --> Line_4 $$ final HttpServletRequest httpServletRequest = (HttpServletRequest) request [CD]
Line_3 $$ if (request instanceof HttpServletRequest && response instanceof HttpServletResponse) --> Line_5 $$ final HttpServletResponse httpServletResponse = (HttpServletResponse) response [CD]
Line_3 $$ if (request instanceof HttpServletRequest && response instanceof HttpServletResponse) --> Line_6 $$ final String contextPath = httpServletRequest.getContextPath() + "/" [CD]
Line_4 $$ final HttpServletRequest httpServletRequest = (HttpServletRequest) request --> Line_6 $$ final String contextPath = httpServletRequest.getContextPath() + "/" [FD]
Line_3 $$ if (request instanceof HttpServletRequest && response instanceof HttpServletResponse) --> Line_7 $$ final String requestURI = httpServletRequest.getRequestURI() [CD]
Line_4 $$ final HttpServletRequest httpServletRequest = (HttpServletRequest) request --> Line_7 $$ final String requestURI = httpServletRequest.getRequestURI() [FD]
Line_3 $$ if (request instanceof HttpServletRequest && response instanceof HttpServletResponse) --> Line_8 $$ if (requestURI.startsWith(contextPath)) [CD]
Line_7 $$ final String requestURI = httpServletRequest.getRequestURI() --> Line_8 $$ if (requestURI.startsWith(contextPath)) [FD]
Line_6 $$ final String contextPath = httpServletRequest.getContextPath() + "/" --> Line_8 $$ if (requestURI.startsWith(contextPath)) [FD]
Line_8 $$ if (requestURI.startsWith(contextPath)) --> Line_9 $$ final String filterURI = requestURI.substring(contextPath.length()) [CD]
Line_7 $$ final String requestURI = httpServletRequest.getRequestURI() --> Line_9 $$ final String filterURI = requestURI.substring(contextPath.length()) [FD]
Line_6 $$ final String contextPath = httpServletRequest.getContextPath() + "/" --> Line_9 $$ final String filterURI = requestURI.substring(contextPath.length()) [FD]
Line_8 $$ if (requestURI.startsWith(contextPath)) --> Line_10 $$ final String filterPath = getFilterPath() [CD]
Line_8 $$ if (requestURI.startsWith(contextPath)) --> Line_11 $$ if (filterURI.startsWith(filterPath)) [CD]
Line_9 $$ final String filterURI = requestURI.substring(contextPath.length()) --> Line_11 $$ if (filterURI.startsWith(filterPath)) [FD]
Line_10 $$ final String filterPath = getFilterPath() --> Line_11 $$ if (filterURI.startsWith(filterPath)) [FD]
Line_11 $$ if (filterURI.startsWith(filterPath)) --> Line_12 $$ final String targetURI = filterURI.substring(filterPath.length()) [CD]
Line_9 $$ final String filterURI = requestURI.substring(contextPath.length()) --> Line_12 $$ final String targetURI = filterURI.substring(filterPath.length()) [FD]
Line_10 $$ final String filterPath = getFilterPath() --> Line_12 $$ final String targetURI = filterURI.substring(filterPath.length()) [FD]
Line_12 $$ final String targetURI = filterURI.substring(filterPath.length()) --> Line_16 $$ if (targetURI.startsWith(key) && (targetURI.length() > key.length())) [FD]
Line_14 $$ final String key = entry.getKey() --> Line_16 $$ if (targetURI.startsWith(key) && (targetURI.length() > key.length())) [FD]
Line_16 $$ if (targetURI.startsWith(key) && (targetURI.length() > key.length())) --> Line_17 $$ final String resourceName = value + targetURI.substring(key.length()) [CD]
Line_12 $$ final String targetURI = filterURI.substring(filterPath.length()) --> Line_17 $$ final String resourceName = value + targetURI.substring(key.length()) [FD]
Line_14 $$ final String key = entry.getKey() --> Line_17 $$ final String resourceName = value + targetURI.substring(key.length()) [FD]
Line_16 $$ if (targetURI.startsWith(key) && (targetURI.length() > key.length())) --> Line_18 $$ InputStream is = null [CD]
Line_18 $$ InputStream is = null --> Line_20 $$ is = getClass().getResourceAsStream("/" + resourceName) [FD]
Line_18 $$ InputStream is = null --> Line_21 $$ if (is != null) [FD]
Line_20 $$ is = getClass().getResourceAsStream("/" + resourceName) --> Line_21 $$ if (is != null) [FD]
Line_21 $$ if (is != null) --> Line_22 $$ IOUtils.copy(is, httpServletResponse.getOutputStream()) [CD]
Line_18 $$ InputStream is = null --> Line_22 $$ IOUtils.copy(is, httpServletResponse.getOutputStream()) [FD]
Line_20 $$ is = getClass().getResourceAsStream("/" + resourceName) --> Line_22 $$ IOUtils.copy(is, httpServletResponse.getOutputStream()) [FD]
Line_5 $$ final HttpServletResponse httpServletResponse = (HttpServletResponse) response --> Line_22 $$ IOUtils.copy(is, httpServletResponse.getOutputStream()) [FD]
Line_21 $$ if (is != null) --> Line_23 $$ httpServletResponse.flushBuffer() [CD]
Line_5 $$ final HttpServletResponse httpServletResponse = (HttpServletResponse) response --> Line_23 $$ httpServletResponse.flushBuffer() [FD]
Line_21 $$ if (is != null) --> Line_26 $$ httpServletResponse.sendError(HttpServletResponse.SC_NOT_FOUND) [CD]
Line_5 $$ final HttpServletResponse httpServletResponse = (HttpServletResponse) response --> Line_26 $$ httpServletResponse.sendError(HttpServletResponse.SC_NOT_FOUND) [FD]
Line_18 $$ InputStream is = null --> Line_32 $$ IOUtils.closeQuietly(is) [FD]
Line_20 $$ is = getClass().getResourceAsStream("/" + resourceName) --> Line_32 $$ IOUtils.closeQuietly(is) [FD]
Line_11 $$ if (filterURI.startsWith(filterPath)) --> Line_37 $$ chain.doFilter(request, response) [CD]
Line_2 $$ public void doFilter(final ServletRequest request, final ServletResponse response, final FilterChain chain) throws IOException, ServletException --> Line_37 $$ chain.doFilter(request, response) [FD]
Line_8 $$ if (requestURI.startsWith(contextPath)) --> Line_40 $$ chain.doFilter(request, response) [CD]
Line_2 $$ public void doFilter(final ServletRequest request, final ServletResponse response, final FilterChain chain) throws IOException, ServletException --> Line_40 $$ chain.doFilter(request, response) [FD]
Line_3 $$ if (request instanceof HttpServletRequest && response instanceof HttpServletResponse) --> Line_43 $$ chain.doFilter(request, response) [CD]
Line_2 $$ public void doFilter(final ServletRequest request, final ServletResponse response, final FilterChain chain) throws IOException, ServletException --> Line_43 $$ chain.doFilter(request, response) [FD]
