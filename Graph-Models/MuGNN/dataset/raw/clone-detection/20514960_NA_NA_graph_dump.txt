Line_2 $$ static JSONObject executeMethod(HttpClient httpClient, HttpMethod method, int timeout) throws HttpRequestFailureException, HttpException, IOException, HttpRequestTimeoutException --> Line_4 $$ method.getParams().setSoTimeout(timeout * 1000) [FD]
Line_7 $$ for (int i = 0; i < RETRY; i++) --> Line_8 $$ System.out.println("Execute method[" + method.getURI() + "](try " + (i + 1) + ")") [CD]
Line_2 $$ static JSONObject executeMethod(HttpClient httpClient, HttpMethod method, int timeout) throws HttpRequestFailureException, HttpException, IOException, HttpRequestTimeoutException --> Line_8 $$ System.out.println("Execute method[" + method.getURI() + "](try " + (i + 1) + ")") [FD]
Line_7 $$ for (int i = 0; i < RETRY; i++) --> Line_9 $$ status = httpClient.executeMethod(method) [CD]
Line_5 $$ int status = -1 --> Line_9 $$ status = httpClient.executeMethod(method) [FD]
Line_2 $$ static JSONObject executeMethod(HttpClient httpClient, HttpMethod method, int timeout) throws HttpRequestFailureException, HttpException, IOException, HttpRequestTimeoutException --> Line_9 $$ status = httpClient.executeMethod(method) [FD]
Line_7 $$ for (int i = 0; i < RETRY; i++) --> Line_10 $$ if (status == HttpStatus.SC_OK) [CD]
Line_9 $$ status = httpClient.executeMethod(method) --> Line_10 $$ if (status == HttpStatus.SC_OK) [FD]
Line_5 $$ int status = -1 --> Line_10 $$ if (status == HttpStatus.SC_OK) [FD]
Line_10 $$ if (status == HttpStatus.SC_OK) --> Line_11 $$ InputStream inputStream = method.getResponseBodyAsStream() [CD]
Line_2 $$ static JSONObject executeMethod(HttpClient httpClient, HttpMethod method, int timeout) throws HttpRequestFailureException, HttpException, IOException, HttpRequestTimeoutException --> Line_11 $$ InputStream inputStream = method.getResponseBodyAsStream() [FD]
Line_10 $$ if (status == HttpStatus.SC_OK) --> Line_12 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() [CD]
Line_10 $$ if (status == HttpStatus.SC_OK) --> Line_13 $$ IOUtils.copy(inputStream, baos) [CD]
Line_11 $$ InputStream inputStream = method.getResponseBodyAsStream() --> Line_13 $$ IOUtils.copy(inputStream, baos) [FD]
Line_12 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() --> Line_13 $$ IOUtils.copy(inputStream, baos) [FD]
Line_10 $$ if (status == HttpStatus.SC_OK) --> Line_14 $$ String response = new String(baos.toByteArray(), "UTF-8") [CD]
Line_12 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() --> Line_14 $$ String response = new String(baos.toByteArray(), "UTF-8") [FD]
Line_10 $$ if (status == HttpStatus.SC_OK) --> Line_15 $$ System.out.println(response) [CD]
Line_14 $$ String response = new String(baos.toByteArray(), "UTF-8") --> Line_15 $$ System.out.println(response) [FD]
Line_10 $$ if (status == HttpStatus.SC_OK) --> Line_16 $$ result = JSONObject.fromString(response) [CD]
Line_6 $$ JSONObject result = null --> Line_16 $$ result = JSONObject.fromString(response) [FD]
Line_14 $$ String response = new String(baos.toByteArray(), "UTF-8") --> Line_16 $$ result = JSONObject.fromString(response) [FD]
Line_10 $$ if (status == HttpStatus.SC_OK) --> Line_17 $$ if (result.has("status")) [CD]
Line_16 $$ result = JSONObject.fromString(response) --> Line_17 $$ if (result.has("status")) [FD]
Line_6 $$ JSONObject result = null --> Line_17 $$ if (result.has("status")) [FD]
Line_17 $$ if (result.has("status")) --> Line_18 $$ String lingrStatus = result.getString("status") [CD]
Line_16 $$ result = JSONObject.fromString(response) --> Line_18 $$ String lingrStatus = result.getString("status") [FD]
Line_6 $$ JSONObject result = null --> Line_18 $$ String lingrStatus = result.getString("status") [FD]
Line_17 $$ if (result.has("status")) --> Line_19 $$ if ("ok".equals(lingrStatus)) [CD]
Line_18 $$ String lingrStatus = result.getString("status") --> Line_19 $$ if ("ok".equals(lingrStatus)) [FD]
Line_2 $$ static JSONObject executeMethod(HttpClient httpClient, HttpMethod method, int timeout) throws HttpRequestFailureException, HttpException, IOException, HttpRequestTimeoutException --> Line_36 $$ method.releaseConnection() [FD]
