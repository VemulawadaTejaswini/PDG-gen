Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_3 $$ Transformer oTransformer [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_4 $$ StreamResult oStreamResult [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_5 $$ StreamSource oStreamSrcXML [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_6 $$ StringWriter oStrWritter [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_7 $$ InputStream oXMLStream = null [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_8 $$ String sTransformed [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_9 $$ StringBuffer oPostTransform [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_10 $$ String sKey [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_11 $$ String sMedia [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_12 $$ Object sVal [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_13 $$ Page oCurrentPage [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_14 $$ int iCloseHead, iOpenBody, iCloseBody [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_15 $$ int iReaded [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_16 $$ char CharBuffer[] = new char[8192] [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_17 $$ String sCharBuffer [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_18 $$ long lElapsed = 0 [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_19 $$ final String sSep = System.getProperty("file.separator") [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_20 $$ if (DebugFile.trace) [CD]
Line_20 $$ if (DebugFile.trace) --> Line_21 $$ lElapsed = System.currentTimeMillis() [CD]
Line_18 $$ long lElapsed = 0 --> Line_21 $$ lElapsed = System.currentTimeMillis() [FD]
Line_20 $$ if (DebugFile.trace) --> Line_22 $$ DebugFile.writeln("Begin Pageset.buildSiteForEdit(" + sBasePath + "," + sOutputPath + "," + sCtrlPath + "," + sMenuPath + ")") [CD]
Line_20 $$ if (DebugFile.trace) --> Line_23 $$ DebugFile.incIdent() [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_25 $$ FileSystem oFS = new FileSystem() [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_26 $$ Vector vPages = pages() [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_27 $$ if (!sBasePath.endsWith(sSep)) [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_27 $$ if (!sBasePath.endsWith(sSep)) [FD]
Line_19 $$ final String sSep = System.getProperty("file.separator") --> Line_27 $$ if (!sBasePath.endsWith(sSep)) [FD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_28 $$ String sWebServer = oEnvironmentProps.getProperty("webserver", "") [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_28 $$ String sWebServer = oEnvironmentProps.getProperty("webserver", "") [FD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_29 $$ DebugFile.writeln("WARNING: webserver property not set at EnvironmentProperties") [CD]
Line_28 $$ String sWebServer = oEnvironmentProps.getProperty("webserver", "") --> Line_29 $$ DebugFile.writeln("WARNING: webserver property not set at EnvironmentProperties") [FD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_30 $$ if (!sWebServer.endsWith("/")) [CD]
Line_28 $$ String sWebServer = oEnvironmentProps.getProperty("webserver", "") --> Line_30 $$ if (!sWebServer.endsWith("/")) [FD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_31 $$ Node oContainers = oMSite.seekChildByName(oMSite.getRootNode().getFirstChild(), "containers") [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_32 $$ if (oContainers == null) [CD]
Line_31 $$ Node oContainers = oMSite.seekChildByName(oMSite.getRootNode().getFirstChild(), "containers") --> Line_32 $$ if (oContainers == null) [FD]
Line_32 $$ if (oContainers == null) --> Line_33 $$ DebugFile.writeln("ERROR: <containers> node not found.") [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_36 $$ DebugFile.writeln("new FileInputStream(" + (sURI.startsWith("file://") ? sURI.substring(7) : sURI) + ")") [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_37 $$ for (int c = 0; c < vPages.size(); c++) [CD]
Line_26 $$ Vector vPages = pages() --> Line_37 $$ for (int c = 0; c < vPages.size(); c++) [FD]
Line_37 $$ for (int c = 0; c < vPages.size(); c++) --> Line_38 $$ oCurrentPage = (Page) vPages.get(c) [CD]
Line_37 $$ for (int c = 0; c < vPages.size(); c++) --> Line_38 $$ oCurrentPage = (Page) vPages.get(c) [FD]
Line_13 $$ Page oCurrentPage --> Line_38 $$ oCurrentPage = (Page) vPages.get(c) [FD]
Line_26 $$ Vector vPages = pages() --> Line_38 $$ oCurrentPage = (Page) vPages.get(c) [FD]
Line_37 $$ for (int c = 0; c < vPages.size(); c++) --> Line_39 $$ oXMLStream = new FileInputStream(sURI.startsWith("file://") ? sURI.substring(7) : sURI) [CD]
Line_7 $$ InputStream oXMLStream = null --> Line_39 $$ oXMLStream = new FileInputStream(sURI.startsWith("file://") ? sURI.substring(7) : sURI) [FD]
Line_37 $$ for (int c = 0; c < vPages.size(); c++) --> Line_40 $$ oStreamSrcXML = new StreamSource(oXMLStream) [CD]
Line_5 $$ StreamSource oStreamSrcXML --> Line_40 $$ oStreamSrcXML = new StreamSource(oXMLStream) [FD]
Line_37 $$ for (int c = 0; c < vPages.size(); c++) --> Line_41 $$ oStrWritter = new StringWriter() [CD]
Line_6 $$ StringWriter oStrWritter --> Line_41 $$ oStrWritter = new StringWriter() [FD]
Line_37 $$ for (int c = 0; c < vPages.size(); c++) --> Line_42 $$ oStreamResult = new StreamResult(oStrWritter) [CD]
Line_4 $$ StreamResult oStreamResult --> Line_42 $$ oStreamResult = new StreamResult(oStrWritter) [FD]
Line_3 $$ Transformer oTransformer --> Line_44 $$ oTransformer = StylesheetCache.newTransformer(sBasePath + "xslt" + sSep + "templates" + sSep + oMSite.name() + sSep + oCurrentPage.template()) [FD]
Line_38 $$ oCurrentPage = (Page) vPages.get(c) --> Line_44 $$ oTransformer = StylesheetCache.newTransformer(sBasePath + "xslt" + sSep + "templates" + sSep + oMSite.name() + sSep + oCurrentPage.template()) [FD]
Line_13 $$ Page oCurrentPage --> Line_44 $$ oTransformer = StylesheetCache.newTransformer(sBasePath + "xslt" + sSep + "templates" + sSep + oMSite.name() + sSep + oCurrentPage.template()) [FD]
Line_11 $$ String sMedia --> Line_45 $$ sMedia = oTransformer.getOutputProperty(OutputKeys.MEDIA_TYPE) [FD]
Line_44 $$ oTransformer = StylesheetCache.newTransformer(sBasePath + "xslt" + sSep + "templates" + sSep + oMSite.name() + sSep + oCurrentPage.template()) --> Line_45 $$ sMedia = oTransformer.getOutputProperty(OutputKeys.MEDIA_TYPE) [FD]
Line_3 $$ Transformer oTransformer --> Line_45 $$ sMedia = oTransformer.getOutputProperty(OutputKeys.MEDIA_TYPE) [FD]
Line_45 $$ sMedia = oTransformer.getOutputProperty(OutputKeys.MEDIA_TYPE) --> Line_47 $$ sMedia = sMedia.substring(sMedia.indexOf('/') + 1) [FD]
Line_11 $$ String sMedia --> Line_47 $$ sMedia = sMedia.substring(sMedia.indexOf('/') + 1) [FD]
Line_38 $$ oCurrentPage = (Page) vPages.get(c) --> Line_48 $$ throw new NullPointerException("Page " + String.valueOf(c) + " title is null") [FD]
Line_13 $$ Page oCurrentPage --> Line_48 $$ throw new NullPointerException("Page " + String.valueOf(c) + " title is null") [FD]
Line_37 $$ for (int c = 0; c < vPages.size(); c++) --> Line_48 $$ throw new NullPointerException("Page " + String.valueOf(c) + " title is null") [FD]
Line_38 $$ oCurrentPage = (Page) vPages.get(c) --> Line_49 $$ DebugFile.writeln("Page.filePath(" + sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "." + sMedia + ")") [FD]
Line_13 $$ Page oCurrentPage --> Line_49 $$ DebugFile.writeln("Page.filePath(" + sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "." + sMedia + ")") [FD]
Line_38 $$ oCurrentPage = (Page) vPages.get(c) --> Line_50 $$ oCurrentPage.filePath(sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "." + sMedia) [FD]
Line_13 $$ Page oCurrentPage --> Line_50 $$ oCurrentPage.filePath(sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "." + sMedia) [FD]
Line_44 $$ oTransformer = StylesheetCache.newTransformer(sBasePath + "xslt" + sSep + "templates" + sSep + oMSite.name() + sSep + oCurrentPage.template()) --> Line_51 $$ StylesheetCache.setParameters(oTransformer, oEnvironmentProps) [FD]
Line_3 $$ Transformer oTransformer --> Line_51 $$ StylesheetCache.setParameters(oTransformer, oEnvironmentProps) [FD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_51 $$ StylesheetCache.setParameters(oTransformer, oEnvironmentProps) [FD]
Line_44 $$ oTransformer = StylesheetCache.newTransformer(sBasePath + "xslt" + sSep + "templates" + sSep + oMSite.name() + sSep + oCurrentPage.template()) --> Line_52 $$ StylesheetCache.setParameters(oTransformer, oUserProps) [FD]
Line_3 $$ Transformer oTransformer --> Line_52 $$ StylesheetCache.setParameters(oTransformer, oUserProps) [FD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_52 $$ StylesheetCache.setParameters(oTransformer, oUserProps) [FD]
Line_44 $$ oTransformer = StylesheetCache.newTransformer(sBasePath + "xslt" + sSep + "templates" + sSep + oMSite.name() + sSep + oCurrentPage.template()) --> Line_53 $$ oTransformer.setParameter("param_page", ((Page) (vPages.get(c))).getTitle()) [FD]
Line_3 $$ Transformer oTransformer --> Line_53 $$ oTransformer.setParameter("param_page", ((Page) (vPages.get(c))).getTitle()) [FD]
Line_26 $$ Vector vPages = pages() --> Line_53 $$ oTransformer.setParameter("param_page", ((Page) (vPages.get(c))).getTitle()) [FD]
Line_37 $$ for (int c = 0; c < vPages.size(); c++) --> Line_53 $$ oTransformer.setParameter("param_page", ((Page) (vPages.get(c))).getTitle()) [FD]
Line_44 $$ oTransformer = StylesheetCache.newTransformer(sBasePath + "xslt" + sSep + "templates" + sSep + oMSite.name() + sSep + oCurrentPage.template()) --> Line_54 $$ oTransformer.transform(oStreamSrcXML, oStreamResult) [FD]
Line_3 $$ Transformer oTransformer --> Line_54 $$ oTransformer.transform(oStreamSrcXML, oStreamResult) [FD]
Line_40 $$ oStreamSrcXML = new StreamSource(oXMLStream) --> Line_54 $$ oTransformer.transform(oStreamSrcXML, oStreamResult) [FD]
Line_5 $$ StreamSource oStreamSrcXML --> Line_54 $$ oTransformer.transform(oStreamSrcXML, oStreamResult) [FD]
Line_42 $$ oStreamResult = new StreamResult(oStrWritter) --> Line_54 $$ oTransformer.transform(oStreamSrcXML, oStreamResult) [FD]
Line_4 $$ StreamResult oStreamResult --> Line_54 $$ oTransformer.transform(oStreamSrcXML, oStreamResult) [FD]
Line_45 $$ sMedia = oTransformer.getOutputProperty(OutputKeys.MEDIA_TYPE) --> Line_57 $$ sMedia = null [FD]
Line_47 $$ sMedia = sMedia.substring(sMedia.indexOf('/') + 1) --> Line_57 $$ sMedia = null [FD]
Line_11 $$ String sMedia --> Line_57 $$ sMedia = null [FD]
Line_59 $$ if (DebugFile.trace) --> Line_60 $$ if (sl == null) [CD]
Line_58 $$ SourceLocator sl = e.getLocator() --> Line_60 $$ if (sl == null) [FD]
Line_60 $$ if (sl == null) --> Line_61 $$ DebugFile.writeln("ERROR TransformerConfigurationException " + e.getMessage()) [CD]
Line_60 $$ if (sl == null) --> Line_63 $$ DebugFile.writeln("ERROR TransformerConfigurationException " + e.getMessage() + " line=" + String.valueOf(sl.getLineNumber()) + " column=" + String.valueOf(sl.getColumnNumber())) [CD]
Line_58 $$ SourceLocator sl = e.getLocator() --> Line_63 $$ DebugFile.writeln("ERROR TransformerConfigurationException " + e.getMessage() + " line=" + String.valueOf(sl.getLineNumber()) + " column=" + String.valueOf(sl.getColumnNumber())) [FD]
Line_45 $$ sMedia = oTransformer.getOutputProperty(OutputKeys.MEDIA_TYPE) --> Line_68 $$ sMedia = null [FD]
Line_47 $$ sMedia = sMedia.substring(sMedia.indexOf('/') + 1) --> Line_68 $$ sMedia = null [FD]
Line_57 $$ sMedia = null --> Line_68 $$ sMedia = null [FD]
Line_11 $$ String sMedia --> Line_68 $$ sMedia = null [FD]
Line_37 $$ for (int c = 0; c < vPages.size(); c++) --> Line_71 $$ oTransformer = null [CD]
Line_44 $$ oTransformer = StylesheetCache.newTransformer(sBasePath + "xslt" + sSep + "templates" + sSep + oMSite.name() + sSep + oCurrentPage.template()) --> Line_71 $$ oTransformer = null [FD]
Line_3 $$ Transformer oTransformer --> Line_71 $$ oTransformer = null [FD]
Line_37 $$ for (int c = 0; c < vPages.size(); c++) --> Line_72 $$ oStreamResult = null [CD]
Line_42 $$ oStreamResult = new StreamResult(oStrWritter) --> Line_72 $$ oStreamResult = null [FD]
Line_4 $$ StreamResult oStreamResult --> Line_72 $$ oStreamResult = null [FD]
Line_37 $$ for (int c = 0; c < vPages.size(); c++) --> Line_73 $$ sTransformed = oStrWritter.toString() [CD]
Line_8 $$ String sTransformed --> Line_73 $$ sTransformed = oStrWritter.toString() [FD]
Line_41 $$ oStrWritter = new StringWriter() --> Line_73 $$ sTransformed = oStrWritter.toString() [FD]
Line_6 $$ StringWriter oStrWritter --> Line_73 $$ sTransformed = oStrWritter.toString() [FD]
Line_37 $$ for (int c = 0; c < vPages.size(); c++) --> Line_74 $$ DebugFile.writeln("transformation length=" + String.valueOf(sTransformed.length())) [CD]
Line_73 $$ sTransformed = oStrWritter.toString() --> Line_74 $$ DebugFile.writeln("transformation length=" + String.valueOf(sTransformed.length())) [FD]
Line_8 $$ String sTransformed --> Line_74 $$ DebugFile.writeln("transformation length=" + String.valueOf(sTransformed.length())) [FD]
Line_37 $$ for (int c = 0; c < vPages.size(); c++) --> Line_75 $$ if (sTransformed.length() > 0) [CD]
Line_73 $$ sTransformed = oStrWritter.toString() --> Line_75 $$ if (sTransformed.length() > 0) [FD]
Line_8 $$ String sTransformed --> Line_75 $$ if (sTransformed.length() > 0) [FD]
Line_75 $$ if (sTransformed.length() > 0) --> Line_76 $$ iCloseHead = sTransformed.indexOf("</head") [CD]
Line_14 $$ int iCloseHead, iOpenBody, iCloseBody --> Line_76 $$ iCloseHead = sTransformed.indexOf("</head") [FD]
Line_73 $$ sTransformed = oStrWritter.toString() --> Line_76 $$ iCloseHead = sTransformed.indexOf("</head") [FD]
Line_8 $$ String sTransformed --> Line_76 $$ iCloseHead = sTransformed.indexOf("</head") [FD]
Line_75 $$ if (sTransformed.length() > 0) --> Line_77 $$ iCloseHead = sTransformed.indexOf("</HEAD") [CD]
Line_76 $$ iCloseHead = sTransformed.indexOf("</head") --> Line_77 $$ iCloseHead = sTransformed.indexOf("</HEAD") [FD]
Line_14 $$ int iCloseHead, iOpenBody, iCloseBody --> Line_77 $$ iCloseHead = sTransformed.indexOf("</HEAD") [FD]
Line_73 $$ sTransformed = oStrWritter.toString() --> Line_77 $$ iCloseHead = sTransformed.indexOf("</HEAD") [FD]
Line_8 $$ String sTransformed --> Line_77 $$ iCloseHead = sTransformed.indexOf("</HEAD") [FD]
Line_75 $$ if (sTransformed.length() > 0) --> Line_78 $$ iOpenBody = sTransformed.indexOf("<body", iCloseHead) [CD]
Line_14 $$ int iCloseHead, iOpenBody, iCloseBody --> Line_78 $$ iOpenBody = sTransformed.indexOf("<body", iCloseHead) [FD]
Line_73 $$ sTransformed = oStrWritter.toString() --> Line_78 $$ iOpenBody = sTransformed.indexOf("<body", iCloseHead) [FD]
Line_8 $$ String sTransformed --> Line_78 $$ iOpenBody = sTransformed.indexOf("<body", iCloseHead) [FD]
Line_76 $$ iCloseHead = sTransformed.indexOf("</head") --> Line_78 $$ iOpenBody = sTransformed.indexOf("<body", iCloseHead) [FD]
Line_77 $$ iCloseHead = sTransformed.indexOf("</HEAD") --> Line_78 $$ iOpenBody = sTransformed.indexOf("<body", iCloseHead) [FD]
Line_75 $$ if (sTransformed.length() > 0) --> Line_79 $$ iOpenBody = sTransformed.indexOf("<BODY", iCloseHead) [CD]
Line_78 $$ iOpenBody = sTransformed.indexOf("<body", iCloseHead) --> Line_79 $$ iOpenBody = sTransformed.indexOf("<BODY", iCloseHead) [FD]
Line_14 $$ int iCloseHead, iOpenBody, iCloseBody --> Line_79 $$ iOpenBody = sTransformed.indexOf("<BODY", iCloseHead) [FD]
Line_73 $$ sTransformed = oStrWritter.toString() --> Line_79 $$ iOpenBody = sTransformed.indexOf("<BODY", iCloseHead) [FD]
Line_8 $$ String sTransformed --> Line_79 $$ iOpenBody = sTransformed.indexOf("<BODY", iCloseHead) [FD]
Line_76 $$ iCloseHead = sTransformed.indexOf("</head") --> Line_79 $$ iOpenBody = sTransformed.indexOf("<BODY", iCloseHead) [FD]
Line_77 $$ iCloseHead = sTransformed.indexOf("</HEAD") --> Line_79 $$ iOpenBody = sTransformed.indexOf("<BODY", iCloseHead) [FD]
Line_75 $$ if (sTransformed.length() > 0) --> Line_80 $$ iCloseBody = sTransformed.indexOf(">", iOpenBody + 5) [CD]
Line_14 $$ int iCloseHead, iOpenBody, iCloseBody --> Line_80 $$ iCloseBody = sTransformed.indexOf(">", iOpenBody + 5) [FD]
Line_73 $$ sTransformed = oStrWritter.toString() --> Line_80 $$ iCloseBody = sTransformed.indexOf(">", iOpenBody + 5) [FD]
Line_8 $$ String sTransformed --> Line_80 $$ iCloseBody = sTransformed.indexOf(">", iOpenBody + 5) [FD]
Line_75 $$ if (sTransformed.length() > 0) --> Line_81 $$ for (char s = sTransformed.charAt(iCloseBody + 1); s == '\r' || s == '\n' || s == ' ' || s == '\t'; s = sTransformed.charAt(++iCloseBody)) [CD]
Line_73 $$ sTransformed = oStrWritter.toString() --> Line_81 $$ for (char s = sTransformed.charAt(iCloseBody + 1); s == '\r' || s == '\n' || s == ' ' || s == '\t'; s = sTransformed.charAt(++iCloseBody)) [FD]
Line_8 $$ String sTransformed --> Line_81 $$ for (char s = sTransformed.charAt(iCloseBody + 1); s == '\r' || s == '\n' || s == ' ' || s == '\t'; s = sTransformed.charAt(++iCloseBody)) [FD]
Line_80 $$ iCloseBody = sTransformed.indexOf(">", iOpenBody + 5) --> Line_81 $$ for (char s = sTransformed.charAt(iCloseBody + 1); s == '\r' || s == '\n' || s == ' ' || s == '\t'; s = sTransformed.charAt(++iCloseBody)) [FD]
Line_14 $$ int iCloseHead, iOpenBody, iCloseBody --> Line_81 $$ for (char s = sTransformed.charAt(iCloseBody + 1); s == '\r' || s == '\n' || s == ' ' || s == '\t'; s = sTransformed.charAt(++iCloseBody)) [FD]
Line_75 $$ if (sTransformed.length() > 0) --> Line_82 $$ oPostTransform = new StringBuffer(sTransformed.length() + 4096) [CD]
Line_9 $$ StringBuffer oPostTransform --> Line_82 $$ oPostTransform = new StringBuffer(sTransformed.length() + 4096) [FD]
Line_73 $$ sTransformed = oStrWritter.toString() --> Line_82 $$ oPostTransform = new StringBuffer(sTransformed.length() + 4096) [FD]
Line_8 $$ String sTransformed --> Line_82 $$ oPostTransform = new StringBuffer(sTransformed.length() + 4096) [FD]
Line_75 $$ if (sTransformed.length() > 0) --> Line_83 $$ oPostTransform.append(sTransformed.substring(0, iCloseHead)) [CD]
Line_82 $$ oPostTransform = new StringBuffer(sTransformed.length() + 4096) --> Line_83 $$ oPostTransform.append(sTransformed.substring(0, iCloseHead)) [FD]
Line_9 $$ StringBuffer oPostTransform --> Line_83 $$ oPostTransform.append(sTransformed.substring(0, iCloseHead)) [FD]
Line_73 $$ sTransformed = oStrWritter.toString() --> Line_83 $$ oPostTransform.append(sTransformed.substring(0, iCloseHead)) [FD]
Line_8 $$ String sTransformed --> Line_83 $$ oPostTransform.append(sTransformed.substring(0, iCloseHead)) [FD]
Line_76 $$ iCloseHead = sTransformed.indexOf("</head") --> Line_83 $$ oPostTransform.append(sTransformed.substring(0, iCloseHead)) [FD]
Line_77 $$ iCloseHead = sTransformed.indexOf("</HEAD") --> Line_83 $$ oPostTransform.append(sTransformed.substring(0, iCloseHead)) [FD]
Line_14 $$ int iCloseHead, iOpenBody, iCloseBody --> Line_83 $$ oPostTransform.append(sTransformed.substring(0, iCloseHead)) [FD]
Line_75 $$ if (sTransformed.length() > 0) --> Line_84 $$ oPostTransform.append("\n<script language=\"JavaScript\" src=\"" + sMenuPath + "\"></script>") [CD]
Line_82 $$ oPostTransform = new StringBuffer(sTransformed.length() + 4096) --> Line_84 $$ oPostTransform.append("\n<script language=\"JavaScript\" src=\"" + sMenuPath + "\"></script>") [FD]
Line_9 $$ StringBuffer oPostTransform --> Line_84 $$ oPostTransform.append("\n<script language=\"JavaScript\" src=\"" + sMenuPath + "\"></script>") [FD]
Line_75 $$ if (sTransformed.length() > 0) --> Line_85 $$ oPostTransform.append("\n<script language=\"JavaScript\" src=\"" + sIntegradorPath + "\"></script>\n") [CD]
Line_82 $$ oPostTransform = new StringBuffer(sTransformed.length() + 4096) --> Line_85 $$ oPostTransform.append("\n<script language=\"JavaScript\" src=\"" + sIntegradorPath + "\"></script>\n") [FD]
Line_9 $$ StringBuffer oPostTransform --> Line_85 $$ oPostTransform.append("\n<script language=\"JavaScript\" src=\"" + sIntegradorPath + "\"></script>\n") [FD]
Line_75 $$ if (sTransformed.length() > 0) --> Line_86 $$ oPostTransform.append(sTransformed.substring(iCloseHead, iCloseHead + 7)) [CD]
Line_82 $$ oPostTransform = new StringBuffer(sTransformed.length() + 4096) --> Line_86 $$ oPostTransform.append(sTransformed.substring(iCloseHead, iCloseHead + 7)) [FD]
Line_9 $$ StringBuffer oPostTransform --> Line_86 $$ oPostTransform.append(sTransformed.substring(iCloseHead, iCloseHead + 7)) [FD]
Line_73 $$ sTransformed = oStrWritter.toString() --> Line_86 $$ oPostTransform.append(sTransformed.substring(iCloseHead, iCloseHead + 7)) [FD]
Line_8 $$ String sTransformed --> Line_86 $$ oPostTransform.append(sTransformed.substring(iCloseHead, iCloseHead + 7)) [FD]
Line_76 $$ iCloseHead = sTransformed.indexOf("</head") --> Line_86 $$ oPostTransform.append(sTransformed.substring(iCloseHead, iCloseHead + 7)) [FD]
Line_77 $$ iCloseHead = sTransformed.indexOf("</HEAD") --> Line_86 $$ oPostTransform.append(sTransformed.substring(iCloseHead, iCloseHead + 7)) [FD]
Line_14 $$ int iCloseHead, iOpenBody, iCloseBody --> Line_86 $$ oPostTransform.append(sTransformed.substring(iCloseHead, iCloseHead + 7)) [FD]
Line_75 $$ if (sTransformed.length() > 0) --> Line_87 $$ oPostTransform.append(sTransformed.substring(iOpenBody, iCloseBody)) [CD]
Line_82 $$ oPostTransform = new StringBuffer(sTransformed.length() + 4096) --> Line_87 $$ oPostTransform.append(sTransformed.substring(iOpenBody, iCloseBody)) [FD]
Line_9 $$ StringBuffer oPostTransform --> Line_87 $$ oPostTransform.append(sTransformed.substring(iOpenBody, iCloseBody)) [FD]
Line_73 $$ sTransformed = oStrWritter.toString() --> Line_87 $$ oPostTransform.append(sTransformed.substring(iOpenBody, iCloseBody)) [FD]
Line_8 $$ String sTransformed --> Line_87 $$ oPostTransform.append(sTransformed.substring(iOpenBody, iCloseBody)) [FD]
Line_78 $$ iOpenBody = sTransformed.indexOf("<body", iCloseHead) --> Line_87 $$ oPostTransform.append(sTransformed.substring(iOpenBody, iCloseBody)) [FD]
Line_79 $$ iOpenBody = sTransformed.indexOf("<BODY", iCloseHead) --> Line_87 $$ oPostTransform.append(sTransformed.substring(iOpenBody, iCloseBody)) [FD]
Line_14 $$ int iCloseHead, iOpenBody, iCloseBody --> Line_87 $$ oPostTransform.append(sTransformed.substring(iOpenBody, iCloseBody)) [FD]
Line_80 $$ iCloseBody = sTransformed.indexOf(">", iOpenBody + 5) --> Line_87 $$ oPostTransform.append(sTransformed.substring(iOpenBody, iCloseBody)) [FD]
Line_17 $$ String sCharBuffer --> Line_89 $$ sCharBuffer = oFS.readfilestr(sCtrlPath, "UTF-8") [FD]
Line_25 $$ FileSystem oFS = new FileSystem() --> Line_89 $$ sCharBuffer = oFS.readfilestr(sCtrlPath, "UTF-8") [FD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_89 $$ sCharBuffer = oFS.readfilestr(sCtrlPath, "UTF-8") [FD]
Line_89 $$ sCharBuffer = oFS.readfilestr(sCtrlPath, "UTF-8") --> Line_90 $$ DebugFile.writeln(String.valueOf(sCharBuffer.length()) + " characters readed") [FD]
Line_17 $$ String sCharBuffer --> Line_90 $$ DebugFile.writeln(String.valueOf(sCharBuffer.length()) + " characters readed") [FD]
Line_89 $$ sCharBuffer = oFS.readfilestr(sCtrlPath, "UTF-8") --> Line_96 $$ Gadgets.replace(sCharBuffer, "http://demo.hipergate.com/", sWebServer) [FD]
Line_17 $$ String sCharBuffer --> Line_96 $$ Gadgets.replace(sCharBuffer, "http://demo.hipergate.com/", sWebServer) [FD]
Line_28 $$ String sWebServer = oEnvironmentProps.getProperty("webserver", "") --> Line_96 $$ Gadgets.replace(sCharBuffer, "http://demo.hipergate.com/", sWebServer) [FD]
Line_30 $$ if (!sWebServer.endsWith("/")) --> Line_96 $$ Gadgets.replace(sCharBuffer, "http://demo.hipergate.com/", sWebServer) [FD]
Line_75 $$ if (sTransformed.length() > 0) --> Line_100 $$ oPostTransform.append(sCharBuffer) [CD]
Line_82 $$ oPostTransform = new StringBuffer(sTransformed.length() + 4096) --> Line_100 $$ oPostTransform.append(sCharBuffer) [FD]
Line_9 $$ StringBuffer oPostTransform --> Line_100 $$ oPostTransform.append(sCharBuffer) [FD]
Line_89 $$ sCharBuffer = oFS.readfilestr(sCtrlPath, "UTF-8") --> Line_100 $$ oPostTransform.append(sCharBuffer) [FD]
Line_17 $$ String sCharBuffer --> Line_100 $$ oPostTransform.append(sCharBuffer) [FD]
Line_75 $$ if (sTransformed.length() > 0) --> Line_101 $$ sCharBuffer = null [CD]
Line_89 $$ sCharBuffer = oFS.readfilestr(sCtrlPath, "UTF-8") --> Line_101 $$ sCharBuffer = null [FD]
Line_17 $$ String sCharBuffer --> Line_101 $$ sCharBuffer = null [FD]
Line_75 $$ if (sTransformed.length() > 0) --> Line_103 $$ oPostTransform.append(sTransformed.substring(iCloseBody)) [CD]
Line_82 $$ oPostTransform = new StringBuffer(sTransformed.length() + 4096) --> Line_103 $$ oPostTransform.append(sTransformed.substring(iCloseBody)) [FD]
Line_9 $$ StringBuffer oPostTransform --> Line_103 $$ oPostTransform.append(sTransformed.substring(iCloseBody)) [FD]
Line_73 $$ sTransformed = oStrWritter.toString() --> Line_103 $$ oPostTransform.append(sTransformed.substring(iCloseBody)) [FD]
Line_8 $$ String sTransformed --> Line_103 $$ oPostTransform.append(sTransformed.substring(iCloseBody)) [FD]
Line_80 $$ iCloseBody = sTransformed.indexOf(">", iOpenBody + 5) --> Line_103 $$ oPostTransform.append(sTransformed.substring(iCloseBody)) [FD]
Line_14 $$ int iCloseHead, iOpenBody, iCloseBody --> Line_103 $$ oPostTransform.append(sTransformed.substring(iCloseBody)) [FD]
Line_75 $$ if (sTransformed.length() > 0) --> Line_105 $$ oPostTransform = new StringBuffer("Page " + ((Page) vPages.get(c)).getTitle() + " could not be rendered.") [CD]
Line_82 $$ oPostTransform = new StringBuffer(sTransformed.length() + 4096) --> Line_105 $$ oPostTransform = new StringBuffer("Page " + ((Page) vPages.get(c)).getTitle() + " could not be rendered.") [FD]
Line_9 $$ StringBuffer oPostTransform --> Line_105 $$ oPostTransform = new StringBuffer("Page " + ((Page) vPages.get(c)).getTitle() + " could not be rendered.") [FD]
Line_26 $$ Vector vPages = pages() --> Line_105 $$ oPostTransform = new StringBuffer("Page " + ((Page) vPages.get(c)).getTitle() + " could not be rendered.") [FD]
Line_37 $$ for (int c = 0; c < vPages.size(); c++) --> Line_105 $$ oPostTransform = new StringBuffer("Page " + ((Page) vPages.get(c)).getTitle() + " could not be rendered.") [FD]
Line_75 $$ if (sTransformed.length() > 0) --> Line_106 $$ oPostTransform.append("<BR>" + oLastXcpt.getMessageAndLocation()) [CD]
Line_82 $$ oPostTransform = new StringBuffer(sTransformed.length() + 4096) --> Line_106 $$ oPostTransform.append("<BR>" + oLastXcpt.getMessageAndLocation()) [FD]
Line_105 $$ oPostTransform = new StringBuffer("Page " + ((Page) vPages.get(c)).getTitle() + " could not be rendered.") --> Line_106 $$ oPostTransform.append("<BR>" + oLastXcpt.getMessageAndLocation()) [FD]
Line_9 $$ StringBuffer oPostTransform --> Line_106 $$ oPostTransform.append("<BR>" + oLastXcpt.getMessageAndLocation()) [FD]
Line_37 $$ for (int c = 0; c < vPages.size(); c++) --> Line_108 $$ DebugFile.writeln("new FileWriter(" + sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "_." + sMedia + ")") [CD]
Line_38 $$ oCurrentPage = (Page) vPages.get(c) --> Line_108 $$ DebugFile.writeln("new FileWriter(" + sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "_." + sMedia + ")") [FD]
Line_13 $$ Page oCurrentPage --> Line_108 $$ DebugFile.writeln("new FileWriter(" + sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "_." + sMedia + ")") [FD]
Line_37 $$ for (int c = 0; c < vPages.size(); c++) --> Line_109 $$ oFS.writefilestr(sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "_." + sMedia, oPostTransform.toString(), "UTF-8") [CD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_109 $$ oFS.writefilestr(sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "_." + sMedia, oPostTransform.toString(), "UTF-8") [FD]
Line_25 $$ FileSystem oFS = new FileSystem() --> Line_109 $$ oFS.writefilestr(sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "_." + sMedia, oPostTransform.toString(), "UTF-8") [FD]
Line_38 $$ oCurrentPage = (Page) vPages.get(c) --> Line_109 $$ oFS.writefilestr(sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "_." + sMedia, oPostTransform.toString(), "UTF-8") [FD]
Line_13 $$ Page oCurrentPage --> Line_109 $$ oFS.writefilestr(sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "_." + sMedia, oPostTransform.toString(), "UTF-8") [FD]
Line_82 $$ oPostTransform = new StringBuffer(sTransformed.length() + 4096) --> Line_109 $$ oFS.writefilestr(sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "_." + sMedia, oPostTransform.toString(), "UTF-8") [FD]
Line_105 $$ oPostTransform = new StringBuffer("Page " + ((Page) vPages.get(c)).getTitle() + " could not be rendered.") --> Line_109 $$ oFS.writefilestr(sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "_." + sMedia, oPostTransform.toString(), "UTF-8") [FD]
Line_9 $$ StringBuffer oPostTransform --> Line_109 $$ oFS.writefilestr(sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "_." + sMedia, oPostTransform.toString(), "UTF-8") [FD]
Line_25 $$ FileSystem oFS = new FileSystem() --> Line_110 $$ oFS.writefilestr(sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "_." + sMedia, Gadgets.replace(oPostTransform.toString(), ":selPageOptions", sSelPageOptions), "UTF-8") [FD]
Line_38 $$ oCurrentPage = (Page) vPages.get(c) --> Line_110 $$ oFS.writefilestr(sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "_." + sMedia, Gadgets.replace(oPostTransform.toString(), ":selPageOptions", sSelPageOptions), "UTF-8") [FD]
Line_13 $$ Page oCurrentPage --> Line_110 $$ oFS.writefilestr(sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "_." + sMedia, Gadgets.replace(oPostTransform.toString(), ":selPageOptions", sSelPageOptions), "UTF-8") [FD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_110 $$ oFS.writefilestr(sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "_." + sMedia, Gadgets.replace(oPostTransform.toString(), ":selPageOptions", sSelPageOptions), "UTF-8") [FD]
Line_82 $$ oPostTransform = new StringBuffer(sTransformed.length() + 4096) --> Line_110 $$ oFS.writefilestr(sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "_." + sMedia, Gadgets.replace(oPostTransform.toString(), ":selPageOptions", sSelPageOptions), "UTF-8") [FD]
Line_105 $$ oPostTransform = new StringBuffer("Page " + ((Page) vPages.get(c)).getTitle() + " could not be rendered.") --> Line_110 $$ oFS.writefilestr(sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "_." + sMedia, Gadgets.replace(oPostTransform.toString(), ":selPageOptions", sSelPageOptions), "UTF-8") [FD]
Line_9 $$ StringBuffer oPostTransform --> Line_110 $$ oFS.writefilestr(sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "_." + sMedia, Gadgets.replace(oPostTransform.toString(), ":selPageOptions", sSelPageOptions), "UTF-8") [FD]
Line_37 $$ for (int c = 0; c < vPages.size(); c++) --> Line_113 $$ oPostTransform = null [CD]
Line_82 $$ oPostTransform = new StringBuffer(sTransformed.length() + 4096) --> Line_113 $$ oPostTransform = null [FD]
Line_105 $$ oPostTransform = new StringBuffer("Page " + ((Page) vPages.get(c)).getTitle() + " could not be rendered.") --> Line_113 $$ oPostTransform = null [FD]
Line_9 $$ StringBuffer oPostTransform --> Line_113 $$ oPostTransform = null [FD]
Line_37 $$ for (int c = 0; c < vPages.size(); c++) --> Line_114 $$ sTransformed = null [CD]
Line_73 $$ sTransformed = oStrWritter.toString() --> Line_114 $$ sTransformed = null [FD]
Line_8 $$ String sTransformed --> Line_114 $$ sTransformed = null [FD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_116 $$ oXMLStream.close() [CD]
Line_39 $$ oXMLStream = new FileInputStream(sURI.startsWith("file://") ? sURI.substring(7) : sURI) --> Line_116 $$ oXMLStream.close() [FD]
Line_7 $$ InputStream oXMLStream = null --> Line_116 $$ oXMLStream.close() [FD]
Line_2 $$ public void buildSiteForEdit(String sBasePath, String sOutputPath, String sCtrlPath, String sMenuPath, String sIntegradorPath, String sSelPageOptions, Properties oEnvironmentProps, Properties oUserProps) throws IOException, DOMException, TransformerException, TransformerConfigurationException, MalformedURLException --> Line_117 $$ if (DebugFile.trace) [CD]
Line_117 $$ if (DebugFile.trace) --> Line_118 $$ DebugFile.writeln("done in " + String.valueOf(System.currentTimeMillis() - lElapsed) + " miliseconds") [CD]
Line_117 $$ if (DebugFile.trace) --> Line_119 $$ DebugFile.decIdent() [CD]
Line_117 $$ if (DebugFile.trace) --> Line_120 $$ DebugFile.writeln("End Pageset.buildSiteForEdit()") [CD]
Line_71 $$ oTransformer = null --> Line_45 $$ sMedia = oTransformer.getOutputProperty(OutputKeys.MEDIA_TYPE) [FD]
Line_57 $$ sMedia = null --> Line_47 $$ sMedia = sMedia.substring(sMedia.indexOf('/') + 1) [FD]
Line_68 $$ sMedia = null --> Line_47 $$ sMedia = sMedia.substring(sMedia.indexOf('/') + 1) [FD]
Line_71 $$ oTransformer = null --> Line_51 $$ StylesheetCache.setParameters(oTransformer, oEnvironmentProps) [FD]
Line_71 $$ oTransformer = null --> Line_52 $$ StylesheetCache.setParameters(oTransformer, oUserProps) [FD]
Line_71 $$ oTransformer = null --> Line_53 $$ oTransformer.setParameter("param_page", ((Page) (vPages.get(c))).getTitle()) [FD]
Line_71 $$ oTransformer = null --> Line_54 $$ oTransformer.transform(oStreamSrcXML, oStreamResult) [FD]
Line_72 $$ oStreamResult = null --> Line_54 $$ oTransformer.transform(oStreamSrcXML, oStreamResult) [FD]
Line_114 $$ sTransformed = null --> Line_74 $$ DebugFile.writeln("transformation length=" + String.valueOf(sTransformed.length())) [FD]
Line_114 $$ sTransformed = null --> Line_75 $$ if (sTransformed.length() > 0) [FD]
Line_114 $$ sTransformed = null --> Line_76 $$ iCloseHead = sTransformed.indexOf("</head") [FD]
Line_114 $$ sTransformed = null --> Line_77 $$ iCloseHead = sTransformed.indexOf("</HEAD") [FD]
Line_114 $$ sTransformed = null --> Line_78 $$ iOpenBody = sTransformed.indexOf("<body", iCloseHead) [FD]
Line_114 $$ sTransformed = null --> Line_79 $$ iOpenBody = sTransformed.indexOf("<BODY", iCloseHead) [FD]
Line_114 $$ sTransformed = null --> Line_80 $$ iCloseBody = sTransformed.indexOf(">", iOpenBody + 5) [FD]
Line_114 $$ sTransformed = null --> Line_82 $$ oPostTransform = new StringBuffer(sTransformed.length() + 4096) [FD]
Line_105 $$ oPostTransform = new StringBuffer("Page " + ((Page) vPages.get(c)).getTitle() + " could not be rendered.") --> Line_83 $$ oPostTransform.append(sTransformed.substring(0, iCloseHead)) [FD]
Line_113 $$ oPostTransform = null --> Line_83 $$ oPostTransform.append(sTransformed.substring(0, iCloseHead)) [FD]
Line_114 $$ sTransformed = null --> Line_83 $$ oPostTransform.append(sTransformed.substring(0, iCloseHead)) [FD]
Line_105 $$ oPostTransform = new StringBuffer("Page " + ((Page) vPages.get(c)).getTitle() + " could not be rendered.") --> Line_84 $$ oPostTransform.append("\n<script language=\"JavaScript\" src=\"" + sMenuPath + "\"></script>") [FD]
Line_113 $$ oPostTransform = null --> Line_84 $$ oPostTransform.append("\n<script language=\"JavaScript\" src=\"" + sMenuPath + "\"></script>") [FD]
Line_105 $$ oPostTransform = new StringBuffer("Page " + ((Page) vPages.get(c)).getTitle() + " could not be rendered.") --> Line_85 $$ oPostTransform.append("\n<script language=\"JavaScript\" src=\"" + sIntegradorPath + "\"></script>\n") [FD]
Line_113 $$ oPostTransform = null --> Line_85 $$ oPostTransform.append("\n<script language=\"JavaScript\" src=\"" + sIntegradorPath + "\"></script>\n") [FD]
Line_105 $$ oPostTransform = new StringBuffer("Page " + ((Page) vPages.get(c)).getTitle() + " could not be rendered.") --> Line_86 $$ oPostTransform.append(sTransformed.substring(iCloseHead, iCloseHead + 7)) [FD]
Line_113 $$ oPostTransform = null --> Line_86 $$ oPostTransform.append(sTransformed.substring(iCloseHead, iCloseHead + 7)) [FD]
Line_114 $$ sTransformed = null --> Line_86 $$ oPostTransform.append(sTransformed.substring(iCloseHead, iCloseHead + 7)) [FD]
Line_105 $$ oPostTransform = new StringBuffer("Page " + ((Page) vPages.get(c)).getTitle() + " could not be rendered.") --> Line_87 $$ oPostTransform.append(sTransformed.substring(iOpenBody, iCloseBody)) [FD]
Line_113 $$ oPostTransform = null --> Line_87 $$ oPostTransform.append(sTransformed.substring(iOpenBody, iCloseBody)) [FD]
Line_114 $$ sTransformed = null --> Line_87 $$ oPostTransform.append(sTransformed.substring(iOpenBody, iCloseBody)) [FD]
Line_101 $$ sCharBuffer = null --> Line_90 $$ DebugFile.writeln(String.valueOf(sCharBuffer.length()) + " characters readed") [FD]
Line_101 $$ sCharBuffer = null --> Line_96 $$ Gadgets.replace(sCharBuffer, "http://demo.hipergate.com/", sWebServer) [FD]
Line_105 $$ oPostTransform = new StringBuffer("Page " + ((Page) vPages.get(c)).getTitle() + " could not be rendered.") --> Line_100 $$ oPostTransform.append(sCharBuffer) [FD]
Line_113 $$ oPostTransform = null --> Line_100 $$ oPostTransform.append(sCharBuffer) [FD]
Line_101 $$ sCharBuffer = null --> Line_100 $$ oPostTransform.append(sCharBuffer) [FD]
Line_105 $$ oPostTransform = new StringBuffer("Page " + ((Page) vPages.get(c)).getTitle() + " could not be rendered.") --> Line_103 $$ oPostTransform.append(sTransformed.substring(iCloseBody)) [FD]
Line_113 $$ oPostTransform = null --> Line_103 $$ oPostTransform.append(sTransformed.substring(iCloseBody)) [FD]
Line_114 $$ sTransformed = null --> Line_103 $$ oPostTransform.append(sTransformed.substring(iCloseBody)) [FD]
Line_113 $$ oPostTransform = null --> Line_106 $$ oPostTransform.append("<BR>" + oLastXcpt.getMessageAndLocation()) [FD]
Line_113 $$ oPostTransform = null --> Line_109 $$ oFS.writefilestr(sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "_." + sMedia, oPostTransform.toString(), "UTF-8") [FD]
Line_113 $$ oPostTransform = null --> Line_110 $$ oFS.writefilestr(sOutputPath + oCurrentPage.getTitle().replace(' ', '_') + "_." + sMedia, Gadgets.replace(oPostTransform.toString(), ":selPageOptions", sSelPageOptions), "UTF-8") [FD]
