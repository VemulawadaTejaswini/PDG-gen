Line_4 $$ final String parentFDTConfDirName = System.getProperty("user.home") + File.separator + ".fdt" --> Line_6 $$ final File confFile = createOrGetRWFile(parentFDTConfDirName, fdtUpdateConfFileName) [FD]
Line_5 $$ final String fdtUpdateConfFileName = "update.properties" --> Line_6 $$ final File confFile = createOrGetRWFile(parentFDTConfDirName, fdtUpdateConfFileName) [FD]
Line_6 $$ final File confFile = createOrGetRWFile(parentFDTConfDirName, fdtUpdateConfFileName) --> Line_7 $$ if (confFile != null) [FD]
Line_7 $$ if (confFile != null) --> Line_8 $$ long lastCheck = 0 [CD]
Line_7 $$ if (confFile != null) --> Line_9 $$ Properties updateProperties = new Properties() [CD]
Line_7 $$ if (confFile != null) --> Line_10 $$ FileInputStream fis = null [CD]
Line_7 $$ if (confFile != null) --> Line_11 $$ FileOutputStream fos = null [CD]
Line_10 $$ FileInputStream fis = null --> Line_13 $$ fis = new FileInputStream(confFile) [FD]
Line_9 $$ Properties updateProperties = new Properties() --> Line_14 $$ updateProperties.load(fis) [FD]
Line_10 $$ FileInputStream fis = null --> Line_14 $$ updateProperties.load(fis) [FD]
Line_13 $$ fis = new FileInputStream(confFile) --> Line_14 $$ updateProperties.load(fis) [FD]
Line_9 $$ Properties updateProperties = new Properties() --> Line_15 $$ final String lastCheckProp = (String) updateProperties.get("LastCheck") [FD]
Line_8 $$ long lastCheck = 0 --> Line_16 $$ lastCheck = 0 [FD]
Line_15 $$ final String lastCheckProp = (String) updateProperties.get("LastCheck") --> Line_17 $$ if (lastCheckProp != null) [FD]
Line_8 $$ long lastCheck = 0 --> Line_19 $$ lastCheck = Long.parseLong(lastCheckProp) [FD]
Line_16 $$ lastCheck = 0 --> Line_19 $$ lastCheck = Long.parseLong(lastCheckProp) [FD]
Line_15 $$ final String lastCheckProp = (String) updateProperties.get("LastCheck") --> Line_19 $$ lastCheck = Long.parseLong(lastCheckProp) [FD]
Line_21 $$ if (logger.isLoggable(Level.FINE)) --> Line_22 $$ logger.log(Level.FINE, "Got exception parsing LastCheck param", t) [CD]
Line_8 $$ long lastCheck = 0 --> Line_24 $$ lastCheck = 0 [FD]
Line_16 $$ lastCheck = 0 --> Line_24 $$ lastCheck = 0 [FD]
Line_19 $$ lastCheck = Long.parseLong(lastCheckProp) --> Line_24 $$ lastCheck = 0 [FD]
Line_11 $$ FileOutputStream fos = null --> Line_30 $$ closeIgnoringExceptions(fos) [FD]
Line_10 $$ FileInputStream fis = null --> Line_31 $$ closeIgnoringExceptions(fis) [FD]
Line_13 $$ fis = new FileInputStream(confFile) --> Line_31 $$ closeIgnoringExceptions(fis) [FD]
Line_7 $$ if (confFile != null) --> Line_33 $$ final long now = System.currentTimeMillis() [CD]
Line_7 $$ if (confFile != null) --> Line_34 $$ boolean bHaveUpdates = false [CD]
Line_7 $$ if (confFile != null) --> Line_35 $$ checkAndSetInstanceID(updateProperties) [CD]
Line_9 $$ Properties updateProperties = new Properties() --> Line_35 $$ checkAndSetInstanceID(updateProperties) [FD]
Line_7 $$ if (confFile != null) --> Line_36 $$ if (lastCheck + FDT.UPDATE_PERIOD < now) [CD]
Line_33 $$ final long now = System.currentTimeMillis() --> Line_36 $$ if (lastCheck + FDT.UPDATE_PERIOD < now) [FD]
Line_36 $$ if (lastCheck + FDT.UPDATE_PERIOD < now) --> Line_37 $$ lastCheck = now [CD]
Line_8 $$ long lastCheck = 0 --> Line_37 $$ lastCheck = now [FD]
Line_16 $$ lastCheck = 0 --> Line_37 $$ lastCheck = now [FD]
Line_19 $$ lastCheck = Long.parseLong(lastCheckProp) --> Line_37 $$ lastCheck = now [FD]
Line_24 $$ lastCheck = 0 --> Line_37 $$ lastCheck = now [FD]
Line_33 $$ final long now = System.currentTimeMillis() --> Line_37 $$ lastCheck = now [FD]
Line_34 $$ boolean bHaveUpdates = false --> Line_40 $$ bHaveUpdates = updateFDT(currentVersion, updateURL, false, noLock) [FD]
Line_2 $$ public static final boolean checkForUpdate(final String currentVersion, final String updateURL, boolean noLock) throws Exception --> Line_40 $$ bHaveUpdates = updateFDT(currentVersion, updateURL, false, noLock) [FD]
Line_41 $$ if (bHaveUpdates) --> Line_42 $$ logger.log("FDT may be updated using: java -jar fdt.jar -update") [CD]
Line_41 $$ if (bHaveUpdates) --> Line_44 $$ if (logger.isLoggable(Level.FINE)) [CD]
Line_44 $$ if (logger.isLoggable(Level.FINE)) --> Line_45 $$ logger.log(Level.FINE, "No updates available") [CD]
Line_49 $$ if (logger.isLoggable(Level.FINE)) --> Line_50 $$ logger.log(Level.WARNING, "Got exception", t) [CD]
Line_36 $$ if (lastCheck + FDT.UPDATE_PERIOD < now) --> Line_53 $$ updateProperties.put("LastCheck", "" + now) [CD]
Line_9 $$ Properties updateProperties = new Properties() --> Line_53 $$ updateProperties.put("LastCheck", "" + now) [FD]
Line_11 $$ FileOutputStream fos = null --> Line_55 $$ fos = new FileOutputStream(confFile) [FD]
Line_9 $$ Properties updateProperties = new Properties() --> Line_56 $$ updateProperties.store(fos, null) [FD]
Line_11 $$ FileOutputStream fos = null --> Line_56 $$ updateProperties.store(fos, null) [FD]
Line_55 $$ fos = new FileOutputStream(confFile) --> Line_56 $$ updateProperties.store(fos, null) [FD]
Line_11 $$ FileOutputStream fos = null --> Line_60 $$ closeIgnoringExceptions(fos) [FD]
Line_55 $$ fos = new FileOutputStream(confFile) --> Line_60 $$ closeIgnoringExceptions(fos) [FD]
Line_36 $$ if (lastCheck + FDT.UPDATE_PERIOD < now) --> Line_62 $$ return bHaveUpdates [CD]
Line_7 $$ if (confFile != null) --> Line_65 $$ if (logger.isLoggable(Level.FINE)) [CD]
Line_65 $$ if (logger.isLoggable(Level.FINE)) --> Line_66 $$ logger.log(Level.FINE, " [ checkForUpdate ] Cannot read or write the update conf file: " + parentFDTConfDirName + File.separator + fdtUpdateConfFileName) [CD]
Line_7 $$ if (confFile != null) --> Line_68 $$ return false [CD]
Line_2 $$ public static final boolean checkForUpdate(final String currentVersion, final String updateURL, boolean noLock) throws Exception --> Line_73 $$ return false [CD]
