Line_2 $$ protected String doInBackground(String... params) --> Line_3 $$ HttpURLConnection conn = null [CD]
Line_2 $$ protected String doInBackground(String... params) --> Line_4 $$ String localFilePath = params[0] [CD]
Line_2 $$ protected String doInBackground(String... params) --> Line_5 $$ if (localFilePath == null) [CD]
Line_4 $$ String localFilePath = params[0] --> Line_5 $$ if (localFilePath == null) [FD]
Line_5 $$ if (localFilePath == null) --> Line_6 $$ return null [CD]
Line_3 $$ HttpURLConnection conn = null --> Line_10 $$ conn = (HttpURLConnection) url.openConnection() [FD]
Line_9 $$ URL url = new URL(ConnectionHandler.getServerURL() + ":" + ConnectionHandler.getServerPort() + "/") --> Line_10 $$ conn = (HttpURLConnection) url.openConnection() [FD]
Line_3 $$ HttpURLConnection conn = null --> Line_11 $$ conn.setDoInput(true) [FD]
Line_10 $$ conn = (HttpURLConnection) url.openConnection() --> Line_11 $$ conn.setDoInput(true) [FD]
Line_3 $$ HttpURLConnection conn = null --> Line_12 $$ conn.setDoOutput(true) [FD]
Line_10 $$ conn = (HttpURLConnection) url.openConnection() --> Line_12 $$ conn.setDoOutput(true) [FD]
Line_3 $$ HttpURLConnection conn = null --> Line_13 $$ conn.setUseCaches(false) [FD]
Line_10 $$ conn = (HttpURLConnection) url.openConnection() --> Line_13 $$ conn.setUseCaches(false) [FD]
Line_3 $$ HttpURLConnection conn = null --> Line_14 $$ conn.setRequestMethod("POST") [FD]
Line_10 $$ conn = (HttpURLConnection) url.openConnection() --> Line_14 $$ conn.setRequestMethod("POST") [FD]
Line_3 $$ HttpURLConnection conn = null --> Line_15 $$ conn.addRequestProperty("Content-Type", "multipart/form-data; boundary=" + boundary) [FD]
Line_10 $$ conn = (HttpURLConnection) url.openConnection() --> Line_15 $$ conn.addRequestProperty("Content-Type", "multipart/form-data; boundary=" + boundary) [FD]
Line_3 $$ HttpURLConnection conn = null --> Line_16 $$ DataOutputStream dos = new DataOutputStream(conn.getOutputStream()) [FD]
Line_10 $$ conn = (HttpURLConnection) url.openConnection() --> Line_16 $$ DataOutputStream dos = new DataOutputStream(conn.getOutputStream()) [FD]
Line_16 $$ DataOutputStream dos = new DataOutputStream(conn.getOutputStream()) --> Line_18 $$ dos.write(toByte(twoHyphens + boundary + lineEnd)) [FD]
Line_16 $$ DataOutputStream dos = new DataOutputStream(conn.getOutputStream()) --> Line_19 $$ dos.write(toByte("Content-Disposition: form-data; name=\"uploadfile\"; filename=\"redpinfile\"" + lineEnd)) [FD]
Line_16 $$ DataOutputStream dos = new DataOutputStream(conn.getOutputStream()) --> Line_20 $$ dos.write(toByte("Content-Type: application/octet-stream" + lineEnd)) [FD]
Line_16 $$ DataOutputStream dos = new DataOutputStream(conn.getOutputStream()) --> Line_21 $$ dos.write(toByte("Content-Length: " + fileReader.available() + lineEnd)) [FD]
Line_17 $$ DataInputStream fileReader = new DataInputStream(new FileInputStream(localFilePath)) --> Line_21 $$ dos.write(toByte("Content-Length: " + fileReader.available() + lineEnd)) [FD]
Line_16 $$ DataOutputStream dos = new DataOutputStream(conn.getOutputStream()) --> Line_22 $$ dos.write(toByte(lineEnd)) [FD]
Line_24 $$ int bytesRead --> Line_25 $$ while ((bytesRead = fileReader.read(buffer)) != -1) [FD]
Line_17 $$ DataInputStream fileReader = new DataInputStream(new FileInputStream(localFilePath)) --> Line_25 $$ while ((bytesRead = fileReader.read(buffer)) != -1) [FD]
Line_23 $$ byte[] buffer = new byte[1024] --> Line_25 $$ while ((bytesRead = fileReader.read(buffer)) != -1) [FD]
Line_25 $$ while ((bytesRead = fileReader.read(buffer)) != -1) --> Line_26 $$ dos.write(buffer, 0, bytesRead) [CD]
Line_25 $$ while ((bytesRead = fileReader.read(buffer)) != -1) --> Line_26 $$ dos.write(buffer, 0, bytesRead) [FD]
Line_16 $$ DataOutputStream dos = new DataOutputStream(conn.getOutputStream()) --> Line_26 $$ dos.write(buffer, 0, bytesRead) [FD]
Line_23 $$ byte[] buffer = new byte[1024] --> Line_26 $$ dos.write(buffer, 0, bytesRead) [FD]
Line_24 $$ int bytesRead --> Line_26 $$ dos.write(buffer, 0, bytesRead) [FD]
Line_16 $$ DataOutputStream dos = new DataOutputStream(conn.getOutputStream()) --> Line_28 $$ dos.write(toByte(lineEnd)) [FD]
Line_16 $$ DataOutputStream dos = new DataOutputStream(conn.getOutputStream()) --> Line_29 $$ dos.write(toByte(twoHyphens + boundary + twoHyphens + lineEnd)) [FD]
Line_16 $$ DataOutputStream dos = new DataOutputStream(conn.getOutputStream()) --> Line_30 $$ dos.flush() [FD]
Line_16 $$ DataOutputStream dos = new DataOutputStream(conn.getOutputStream()) --> Line_31 $$ dos.close() [FD]
Line_3 $$ HttpURLConnection conn = null --> Line_32 $$ if (conn.getResponseCode() == HttpURLConnection.HTTP_OK) [FD]
Line_10 $$ conn = (HttpURLConnection) url.openConnection() --> Line_32 $$ if (conn.getResponseCode() == HttpURLConnection.HTTP_OK) [FD]
Line_32 $$ if (conn.getResponseCode() == HttpURLConnection.HTTP_OK) --> Line_33 $$ InputStream is = conn.getInputStream() [CD]
Line_3 $$ HttpURLConnection conn = null --> Line_33 $$ InputStream is = conn.getInputStream() [FD]
Line_10 $$ conn = (HttpURLConnection) url.openConnection() --> Line_33 $$ InputStream is = conn.getInputStream() [FD]
Line_32 $$ if (conn.getResponseCode() == HttpURLConnection.HTTP_OK) --> Line_34 $$ int ch [CD]
Line_32 $$ if (conn.getResponseCode() == HttpURLConnection.HTTP_OK) --> Line_35 $$ StringBuffer b = new StringBuffer() [CD]
Line_32 $$ if (conn.getResponseCode() == HttpURLConnection.HTTP_OK) --> Line_36 $$ while ((ch = is.read()) != -1) [CD]
Line_34 $$ int ch --> Line_36 $$ while ((ch = is.read()) != -1) [FD]
Line_33 $$ InputStream is = conn.getInputStream() --> Line_36 $$ while ((ch = is.read()) != -1) [FD]
Line_36 $$ while ((ch = is.read()) != -1) --> Line_37 $$ b.append((char) ch) [CD]
Line_35 $$ StringBuffer b = new StringBuffer() --> Line_37 $$ b.append((char) ch) [FD]
Line_32 $$ if (conn.getResponseCode() == HttpURLConnection.HTTP_OK) --> Line_39 $$ return b.toString() [CD]
Line_35 $$ StringBuffer b = new StringBuffer() --> Line_39 $$ return b.toString() [FD]
Line_3 $$ HttpURLConnection conn = null --> Line_46 $$ if (conn != null) [FD]
Line_10 $$ conn = (HttpURLConnection) url.openConnection() --> Line_46 $$ if (conn != null) [FD]
Line_46 $$ if (conn != null) --> Line_47 $$ conn.disconnect() [CD]
Line_3 $$ HttpURLConnection conn = null --> Line_47 $$ conn.disconnect() [FD]
Line_10 $$ conn = (HttpURLConnection) url.openConnection() --> Line_47 $$ conn.disconnect() [FD]
Line_2 $$ protected String doInBackground(String... params) --> Line_50 $$ return null [CD]
