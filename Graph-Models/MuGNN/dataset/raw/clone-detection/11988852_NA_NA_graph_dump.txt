Line_2 $$ public static final void parse(String infile, String outfile) throws IOException --> Line_3 $$ BufferedReader reader = new BufferedReader(new FileReader(infile)) [CD]
Line_2 $$ public static final void parse(String infile, String outfile) throws IOException --> Line_4 $$ DataOutputStream output = new DataOutputStream(new FileOutputStream(outfile)) [CD]
Line_2 $$ public static final void parse(String infile, String outfile) throws IOException --> Line_5 $$ int w = Integer.parseInt(reader.readLine()) [CD]
Line_3 $$ BufferedReader reader = new BufferedReader(new FileReader(infile)) --> Line_5 $$ int w = Integer.parseInt(reader.readLine()) [FD]
Line_2 $$ public static final void parse(String infile, String outfile) throws IOException --> Line_6 $$ int h = Integer.parseInt(reader.readLine()) [CD]
Line_3 $$ BufferedReader reader = new BufferedReader(new FileReader(infile)) --> Line_6 $$ int h = Integer.parseInt(reader.readLine()) [FD]
Line_2 $$ public static final void parse(String infile, String outfile) throws IOException --> Line_7 $$ output.writeByte(w) [CD]
Line_4 $$ DataOutputStream output = new DataOutputStream(new FileOutputStream(outfile)) --> Line_7 $$ output.writeByte(w) [FD]
Line_5 $$ int w = Integer.parseInt(reader.readLine()) --> Line_7 $$ output.writeByte(w) [FD]
Line_2 $$ public static final void parse(String infile, String outfile) throws IOException --> Line_8 $$ output.writeByte(h) [CD]
Line_4 $$ DataOutputStream output = new DataOutputStream(new FileOutputStream(outfile)) --> Line_8 $$ output.writeByte(h) [FD]
Line_6 $$ int h = Integer.parseInt(reader.readLine()) --> Line_8 $$ output.writeByte(h) [FD]
Line_2 $$ public static final void parse(String infile, String outfile) throws IOException --> Line_9 $$ int lineCount = 2 [CD]
Line_11 $$ do --> Line_12 $$ for (int i = 0; i < h; i++) [CD]
Line_6 $$ int h = Integer.parseInt(reader.readLine()) --> Line_12 $$ for (int i = 0; i < h; i++) [FD]
Line_12 $$ for (int i = 0; i < h; i++) --> Line_13 $$ lineCount++ [CD]
Line_9 $$ int lineCount = 2 --> Line_13 $$ lineCount++ [FD]
Line_12 $$ for (int i = 0; i < h; i++) --> Line_14 $$ String line = reader.readLine() [CD]
Line_3 $$ BufferedReader reader = new BufferedReader(new FileReader(infile)) --> Line_14 $$ String line = reader.readLine() [FD]
Line_12 $$ for (int i = 0; i < h; i++) --> Line_15 $$ if (line == null) [CD]
Line_14 $$ String line = reader.readLine() --> Line_15 $$ if (line == null) [FD]
Line_12 $$ for (int i = 0; i < h; i++) --> Line_18 $$ for (int j = 0; j < w; j++) [CD]
Line_5 $$ int w = Integer.parseInt(reader.readLine()) --> Line_18 $$ for (int j = 0; j < w; j++) [FD]
Line_18 $$ for (int j = 0; j < w; j++) --> Line_19 $$ char c = line.charAt(j) [CD]
Line_18 $$ for (int j = 0; j < w; j++) --> Line_19 $$ char c = line.charAt(j) [FD]
Line_14 $$ String line = reader.readLine() --> Line_19 $$ char c = line.charAt(j) [FD]
Line_18 $$ for (int j = 0; j < w; j++) --> Line_20 $$ System.out.print(c) [CD]
Line_19 $$ char c = line.charAt(j) --> Line_20 $$ System.out.print(c) [FD]
Line_18 $$ for (int j = 0; j < w; j++) --> Line_21 $$ output.writeByte(c) [CD]
Line_4 $$ DataOutputStream output = new DataOutputStream(new FileOutputStream(outfile)) --> Line_21 $$ output.writeByte(c) [FD]
Line_19 $$ char c = line.charAt(j) --> Line_21 $$ output.writeByte(c) [FD]
Line_12 $$ for (int i = 0; i < h; i++) --> Line_23 $$ System.out.println("") [CD]
Line_11 $$ do --> Line_25 $$ lineCount++ [CD]
Line_9 $$ int lineCount = 2 --> Line_25 $$ lineCount++ [FD]
Line_11 $$ do --> Line_26 $$ output.writeShort(Short.parseShort(reader.readLine())) [CD]
Line_4 $$ DataOutputStream output = new DataOutputStream(new FileOutputStream(outfile)) --> Line_26 $$ output.writeShort(Short.parseShort(reader.readLine())) [FD]
Line_3 $$ BufferedReader reader = new BufferedReader(new FileReader(infile)) --> Line_26 $$ output.writeShort(Short.parseShort(reader.readLine())) [FD]
Line_3 $$ BufferedReader reader = new BufferedReader(new FileReader(infile)) --> Line_11 $$ do [FD]
Line_3 $$ BufferedReader reader = new BufferedReader(new FileReader(infile)) --> Line_29 $$ reader.close() [FD]
Line_4 $$ DataOutputStream output = new DataOutputStream(new FileOutputStream(outfile)) --> Line_30 $$ output.close() [FD]
