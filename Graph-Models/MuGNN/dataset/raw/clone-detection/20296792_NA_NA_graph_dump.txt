Line_2 $$ public void retrieveChallenges(int num) throws MalformedURLException, IOException, FBErrorException, FBConnectionException --> Line_3 $$ if (num < 1 || num > 100) [CD]
Line_3 $$ if (num < 1 || num > 100) --> Line_5 $$ FBErrorException fbee = new FBErrorException() [CD]
Line_3 $$ if (num < 1 || num > 100) --> Line_6 $$ fbee.setErrorCode(-100) [CD]
Line_5 $$ FBErrorException fbee = new FBErrorException() --> Line_6 $$ fbee.setErrorCode(-100) [FD]
Line_3 $$ if (num < 1 || num > 100) --> Line_7 $$ fbee.setErrorText("Invalid GetChallenges range") [CD]
Line_5 $$ FBErrorException fbee = new FBErrorException() --> Line_7 $$ fbee.setErrorText("Invalid GetChallenges range") [FD]
Line_2 $$ public void retrieveChallenges(int num) throws MalformedURLException, IOException, FBErrorException, FBConnectionException --> Line_10 $$ URL url = new URL(getHost() + getPath()) [CD]
Line_2 $$ public void retrieveChallenges(int num) throws MalformedURLException, IOException, FBErrorException, FBConnectionException --> Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() [CD]
Line_10 $$ URL url = new URL(getHost() + getPath()) --> Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() [FD]
Line_2 $$ public void retrieveChallenges(int num) throws MalformedURLException, IOException, FBErrorException, FBConnectionException --> Line_12 $$ conn.setRequestProperty("X-FB-User", getUser()) [CD]
Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_12 $$ conn.setRequestProperty("X-FB-User", getUser()) [FD]
Line_2 $$ public void retrieveChallenges(int num) throws MalformedURLException, IOException, FBErrorException, FBConnectionException --> Line_13 $$ conn.setRequestProperty("X-FB-Mode", "GetChallenges") [CD]
Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_13 $$ conn.setRequestProperty("X-FB-Mode", "GetChallenges") [FD]
Line_2 $$ public void retrieveChallenges(int num) throws MalformedURLException, IOException, FBErrorException, FBConnectionException --> Line_14 $$ conn.setRequestProperty("X-FB-GetChallenges.Qty", new Integer(num).toString()) [CD]
Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_14 $$ conn.setRequestProperty("X-FB-GetChallenges.Qty", new Integer(num).toString()) [FD]
Line_2 $$ public void retrieveChallenges(int num) throws MalformedURLException, IOException, FBErrorException, FBConnectionException --> Line_15 $$ conn.connect() [CD]
Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_15 $$ conn.connect() [FD]
Line_2 $$ public void retrieveChallenges(int num) throws MalformedURLException, IOException, FBErrorException, FBConnectionException --> Line_16 $$ Element fbresponse [CD]
Line_16 $$ Element fbresponse --> Line_18 $$ fbresponse = readXML(conn) [FD]
Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_18 $$ fbresponse = readXML(conn) [FD]
Line_27 $$ FBConnectionException fbce = new FBConnectionException("XML parsing failed") --> Line_28 $$ fbce.attachSubException(e) [FD]
Line_2 $$ public void retrieveChallenges(int num) throws MalformedURLException, IOException, FBErrorException, FBConnectionException --> Line_31 $$ NodeList nl = fbresponse.getElementsByTagName("GetChallengesResponse") [CD]
Line_16 $$ Element fbresponse --> Line_31 $$ NodeList nl = fbresponse.getElementsByTagName("GetChallengesResponse") [FD]
Line_18 $$ fbresponse = readXML(conn) --> Line_31 $$ NodeList nl = fbresponse.getElementsByTagName("GetChallengesResponse") [FD]
Line_2 $$ public void retrieveChallenges(int num) throws MalformedURLException, IOException, FBErrorException, FBConnectionException --> Line_32 $$ for (int i = 0; i < nl.getLength(); i++) [CD]
Line_31 $$ NodeList nl = fbresponse.getElementsByTagName("GetChallengesResponse") --> Line_32 $$ for (int i = 0; i < nl.getLength(); i++) [FD]
Line_32 $$ for (int i = 0; i < nl.getLength(); i++) --> Line_33 $$ if (nl.item(i) instanceof Element && hasError((Element) nl.item(i))) [CD]
Line_32 $$ for (int i = 0; i < nl.getLength(); i++) --> Line_33 $$ if (nl.item(i) instanceof Element && hasError((Element) nl.item(i))) [FD]
Line_31 $$ NodeList nl = fbresponse.getElementsByTagName("GetChallengesResponse") --> Line_33 $$ if (nl.item(i) instanceof Element && hasError((Element) nl.item(i))) [FD]
Line_33 $$ if (nl.item(i) instanceof Element && hasError((Element) nl.item(i))) --> Line_35 $$ FBErrorException e = new FBErrorException() [CD]
Line_33 $$ if (nl.item(i) instanceof Element && hasError((Element) nl.item(i))) --> Line_36 $$ e.setErrorCode(errorcode) [CD]
Line_35 $$ FBErrorException e = new FBErrorException() --> Line_36 $$ e.setErrorCode(errorcode) [FD]
Line_33 $$ if (nl.item(i) instanceof Element && hasError((Element) nl.item(i))) --> Line_37 $$ e.setErrorText(errortext) [CD]
Line_35 $$ FBErrorException e = new FBErrorException() --> Line_37 $$ e.setErrorText(errortext) [FD]
Line_2 $$ public void retrieveChallenges(int num) throws MalformedURLException, IOException, FBErrorException, FBConnectionException --> Line_41 $$ NodeList challenge = fbresponse.getElementsByTagName("Challenge") [CD]
Line_16 $$ Element fbresponse --> Line_41 $$ NodeList challenge = fbresponse.getElementsByTagName("Challenge") [FD]
Line_18 $$ fbresponse = readXML(conn) --> Line_41 $$ NodeList challenge = fbresponse.getElementsByTagName("Challenge") [FD]
Line_2 $$ public void retrieveChallenges(int num) throws MalformedURLException, IOException, FBErrorException, FBConnectionException --> Line_42 $$ for (int i = 0; i < challenge.getLength(); i++) [CD]
Line_32 $$ for (int i = 0; i < nl.getLength(); i++) --> Line_42 $$ for (int i = 0; i < challenge.getLength(); i++) [FD]
Line_41 $$ NodeList challenge = fbresponse.getElementsByTagName("Challenge") --> Line_42 $$ for (int i = 0; i < challenge.getLength(); i++) [FD]
Line_42 $$ for (int i = 0; i < challenge.getLength(); i++) --> Line_43 $$ NodeList children = challenge.item(i).getChildNodes() [CD]
Line_42 $$ for (int i = 0; i < challenge.getLength(); i++) --> Line_43 $$ NodeList children = challenge.item(i).getChildNodes() [FD]
Line_41 $$ NodeList challenge = fbresponse.getElementsByTagName("Challenge") --> Line_43 $$ NodeList children = challenge.item(i).getChildNodes() [FD]
Line_32 $$ for (int i = 0; i < nl.getLength(); i++) --> Line_43 $$ NodeList children = challenge.item(i).getChildNodes() [FD]
Line_42 $$ for (int i = 0; i < challenge.getLength(); i++) --> Line_44 $$ for (int j = 0; j < children.getLength(); j++) [CD]
Line_43 $$ NodeList children = challenge.item(i).getChildNodes() --> Line_44 $$ for (int j = 0; j < children.getLength(); j++) [FD]
Line_44 $$ for (int j = 0; j < children.getLength(); j++) --> Line_45 $$ if (children.item(j) instanceof Text) [CD]
Line_44 $$ for (int j = 0; j < children.getLength(); j++) --> Line_45 $$ if (children.item(j) instanceof Text) [FD]
Line_43 $$ NodeList children = challenge.item(i).getChildNodes() --> Line_45 $$ if (children.item(j) instanceof Text) [FD]
Line_45 $$ if (children.item(j) instanceof Text) --> Line_46 $$ challenges.offer(children.item(j).getNodeValue()) [CD]
Line_43 $$ NodeList children = challenge.item(i).getChildNodes() --> Line_46 $$ challenges.offer(children.item(j).getNodeValue()) [FD]
Line_44 $$ for (int j = 0; j < children.getLength(); j++) --> Line_46 $$ challenges.offer(children.item(j).getNodeValue()) [FD]
