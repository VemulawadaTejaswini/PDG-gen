Line_2 $$ public void testManageSources() throws Exception --> Line_3 $$ this.getTestTool().manageSources(this.getTestSourcesDirectory()) [CD]
Line_2 $$ public void testManageSources() throws Exception --> Line_4 $$ this.getTestTool().manageSources(this.getTestTool().getModules().getModule("Module"), this.getTestSourcesDirectory()) [CD]
Line_2 $$ public void testManageSources() throws Exception --> Line_5 $$ final File implementationDirectory = this.getTestSourcesDirectory() [CD]
Line_2 $$ public void testManageSources() throws Exception --> Line_6 $$ this.getTestTool().manageSources(this.getTestTool().getModules().getImplementation("Implementation"), implementationDirectory) [CD]
Line_5 $$ final File implementationDirectory = this.getTestSourcesDirectory() --> Line_6 $$ this.getTestTool().manageSources(this.getTestTool().getModules().getImplementation("Implementation"), implementationDirectory) [FD]
Line_2 $$ public void testManageSources() throws Exception --> Line_7 $$ this.getTestTool().manageSources(this.getTestTool().getModules().getImplementation("Implementation"), implementationDirectory) [CD]
Line_5 $$ final File implementationDirectory = this.getTestSourcesDirectory() --> Line_7 $$ this.getTestTool().manageSources(this.getTestTool().getModules().getImplementation("Implementation"), implementationDirectory) [FD]
Line_2 $$ public void testManageSources() throws Exception --> Line_8 $$ final File specificationDirectory = this.getTestSourcesDirectory() [CD]
Line_2 $$ public void testManageSources() throws Exception --> Line_9 $$ this.getTestTool().manageSources(this.getTestTool().getModules().getSpecification("Specification"), specificationDirectory) [CD]
Line_8 $$ final File specificationDirectory = this.getTestSourcesDirectory() --> Line_9 $$ this.getTestTool().manageSources(this.getTestTool().getModules().getSpecification("Specification"), specificationDirectory) [FD]
Line_2 $$ public void testManageSources() throws Exception --> Line_10 $$ this.getTestTool().manageSources(this.getTestTool().getModules().getSpecification("Specification"), specificationDirectory) [CD]
Line_8 $$ final File specificationDirectory = this.getTestSourcesDirectory() --> Line_10 $$ this.getTestTool().manageSources(this.getTestTool().getModules().getSpecification("Specification"), specificationDirectory) [FD]
Line_2 $$ public void testManageSources() throws Exception --> Line_11 $$ IOUtils.copy(this.getClass().getResourceAsStream("IllegalImplementationSource.java.txt"), new FileOutputStream(new File(implementationDirectory, "Implementation.java"))) [CD]
Line_2 $$ public void testManageSources() throws Exception --> Line_12 $$ IOUtils.copy(this.getClass().getResourceAsStream("IllegalSpecificationSource.java.txt"), new FileOutputStream(new File(specificationDirectory, "Specification.java"))) [CD]
Line_5 $$ final File implementationDirectory = this.getTestSourcesDirectory() --> Line_14 $$ this.getTestTool().manageSources(this.getTestTool().getModules().getImplementation("Implementation"), implementationDirectory) [FD]
Line_8 $$ final File specificationDirectory = this.getTestSourcesDirectory() --> Line_21 $$ this.getTestTool().manageSources(this.getTestTool().getModules().getSpecification("Specification"), specificationDirectory) [FD]
Line_2 $$ public void testManageSources() throws Exception --> Line_27 $$ this.getTestTool().setProfile("DOES_NOT_EXIST") [CD]
Line_2 $$ public void testManageSources() throws Exception --> Line_28 $$ this.getTestTool().manageSources(this.getTestSourcesDirectory()) [CD]
Line_2 $$ public void testManageSources() throws Exception --> Line_29 $$ this.getTestTool().manageSources(this.getTestTool().getModules().getModule("Module"), this.getTestSourcesDirectory()) [CD]
Line_2 $$ public void testManageSources() throws Exception --> Line_30 $$ this.getTestTool().manageSources(this.getTestTool().getModules().getImplementation("Implementation"), this.getTestSourcesDirectory()) [CD]
Line_2 $$ public void testManageSources() throws Exception --> Line_31 $$ this.getTestTool().manageSources(this.getTestTool().getModules().getSpecification("Specification"), this.getTestSourcesDirectory()) [CD]
