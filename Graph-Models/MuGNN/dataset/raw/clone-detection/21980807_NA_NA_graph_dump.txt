Line_2 $$ public void checkAndDownload(String statsUrl, RDFStatsUpdatableModelExt stats, Date lastDownload, boolean onlyIfNewer) throws DataSourceMonitorException --> Line_3 $$ log.info("Checking if update required for statistics of " + ds + "...") [CD]
Line_2 $$ public void checkAndDownload(String statsUrl, RDFStatsUpdatableModelExt stats, Date lastDownload, boolean onlyIfNewer) throws DataSourceMonitorException --> Line_4 $$ HttpURLConnection urlConnection [CD]
Line_4 $$ HttpURLConnection urlConnection --> Line_7 $$ urlConnection = (HttpURLConnection) url.openConnection() [FD]
Line_6 $$ URL url = new URL(statsUrl) --> Line_7 $$ urlConnection = (HttpURLConnection) url.openConnection() [FD]
Line_4 $$ HttpURLConnection urlConnection --> Line_8 $$ urlConnection.setConnectTimeout(CONNECT_TIMEOUT) [FD]
Line_7 $$ urlConnection = (HttpURLConnection) url.openConnection() --> Line_8 $$ urlConnection.setConnectTimeout(CONNECT_TIMEOUT) [FD]
Line_4 $$ HttpURLConnection urlConnection --> Line_9 $$ urlConnection.setReadTimeout(READ_TIMEOUT) [FD]
Line_7 $$ urlConnection = (HttpURLConnection) url.openConnection() --> Line_9 $$ urlConnection.setReadTimeout(READ_TIMEOUT) [FD]
Line_4 $$ HttpURLConnection urlConnection --> Line_10 $$ int statusCode = urlConnection.getResponseCode() [FD]
Line_7 $$ urlConnection = (HttpURLConnection) url.openConnection() --> Line_10 $$ int statusCode = urlConnection.getResponseCode() [FD]
Line_11 $$ if (statusCode / 100 != 2) --> Line_12 $$ String msg = urlConnection.getResponseMessage() [CD]
Line_4 $$ HttpURLConnection urlConnection --> Line_12 $$ String msg = urlConnection.getResponseMessage() [FD]
Line_7 $$ urlConnection = (HttpURLConnection) url.openConnection() --> Line_12 $$ String msg = urlConnection.getResponseMessage() [FD]
Line_2 $$ public void checkAndDownload(String statsUrl, RDFStatsUpdatableModelExt stats, Date lastDownload, boolean onlyIfNewer) throws DataSourceMonitorException --> Line_18 $$ long lastModified = urlConnection.getLastModified() [CD]
Line_4 $$ HttpURLConnection urlConnection --> Line_18 $$ long lastModified = urlConnection.getLastModified() [FD]
Line_7 $$ urlConnection = (HttpURLConnection) url.openConnection() --> Line_18 $$ long lastModified = urlConnection.getLastModified() [FD]
Line_2 $$ public void checkAndDownload(String statsUrl, RDFStatsUpdatableModelExt stats, Date lastDownload, boolean onlyIfNewer) throws DataSourceMonitorException --> Line_19 $$ boolean newer = lastDownload == null || lastModified == 0 || lastModified - TIMING_GAP > lastDownload.getTime() [CD]
Line_2 $$ public void checkAndDownload(String statsUrl, RDFStatsUpdatableModelExt stats, Date lastDownload, boolean onlyIfNewer) throws DataSourceMonitorException --> Line_19 $$ boolean newer = lastDownload == null || lastModified == 0 || lastModified - TIMING_GAP > lastDownload.getTime() [FD]
Line_2 $$ public void checkAndDownload(String statsUrl, RDFStatsUpdatableModelExt stats, Date lastDownload, boolean onlyIfNewer) throws DataSourceMonitorException --> Line_20 $$ if (newer || !onlyIfNewer) [CD]
Line_2 $$ public void checkAndDownload(String statsUrl, RDFStatsUpdatableModelExt stats, Date lastDownload, boolean onlyIfNewer) throws DataSourceMonitorException --> Line_20 $$ if (newer || !onlyIfNewer) [FD]
Line_19 $$ boolean newer = lastDownload == null || lastModified == 0 || lastModified - TIMING_GAP > lastDownload.getTime() --> Line_20 $$ if (newer || !onlyIfNewer) [FD]
Line_20 $$ if (newer || !onlyIfNewer) --> Line_21 $$ Model newStats = retrieveModelData(urlConnection, ds) [CD]
Line_4 $$ HttpURLConnection urlConnection --> Line_21 $$ Model newStats = retrieveModelData(urlConnection, ds) [FD]
Line_7 $$ urlConnection = (HttpURLConnection) url.openConnection() --> Line_21 $$ Model newStats = retrieveModelData(urlConnection, ds) [FD]
Line_20 $$ if (newer || !onlyIfNewer) --> Line_22 $$ Date retrievedTimestamp = Calendar.getInstance().getTime() [CD]
Line_20 $$ if (newer || !onlyIfNewer) --> Line_23 $$ Date modifiedTimestamp = (urlConnection.getLastModified() > 0) ? new Date(urlConnection.getLastModified()) : null [CD]
Line_4 $$ HttpURLConnection urlConnection --> Line_23 $$ Date modifiedTimestamp = (urlConnection.getLastModified() > 0) ? new Date(urlConnection.getLastModified()) : null [FD]
Line_7 $$ urlConnection = (HttpURLConnection) url.openConnection() --> Line_23 $$ Date modifiedTimestamp = (urlConnection.getLastModified() > 0) ? new Date(urlConnection.getLastModified()) : null [FD]
Line_20 $$ if (newer || !onlyIfNewer) --> Line_24 $$ log.info("Attempt to import up-to-date " + ((modifiedTimestamp != null) ? "(from " + modifiedTimestamp + ") " : "") + "statistics for " + ds + ".") [CD]
Line_2 $$ public void checkAndDownload(String statsUrl, RDFStatsUpdatableModelExt stats, Date lastDownload, boolean onlyIfNewer) throws DataSourceMonitorException --> Line_26 $$ if (stats.updateFrom(RDFStatsModelFactory.create(newStats), onlyIfNewer)) [FD]
Line_21 $$ Model newStats = retrieveModelData(urlConnection, ds) --> Line_26 $$ if (stats.updateFrom(RDFStatsModelFactory.create(newStats), onlyIfNewer)) [FD]
Line_22 $$ Date retrievedTimestamp = Calendar.getInstance().getTime() --> Line_26 $$ if (stats.updateFrom(RDFStatsModelFactory.create(newStats), onlyIfNewer)) [FD]
Line_20 $$ if (newer || !onlyIfNewer) --> Line_31 $$ log.info("Statistics for " + ds + " are up-to-date" + ((lastDownload != null) ? " (" + lastDownload + ")" : "")) [CD]
