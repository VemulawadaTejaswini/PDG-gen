Line_2 $$ public void init(String[] arguments) --> Line_3 $$ if (arguments.length < 1) [CD]
Line_3 $$ if (arguments.length < 1) --> Line_4 $$ printHelp() [CD]
Line_3 $$ if (arguments.length < 1) --> Line_5 $$ return [CD]
Line_2 $$ public void init(String[] arguments) --> Line_7 $$ String[] valid_args = new String[] [CD]
Line_2 $$ public void init(String[] arguments) --> Line_8 $$ CommandArguments args = null [CD]
Line_8 $$ CommandArguments args = null --> Line_10 $$ args = new CommandArguments(arguments, valid_args) [FD]
Line_2 $$ public void init(String[] arguments) --> Line_16 $$ String filename = null [CD]
Line_2 $$ public void init(String[] arguments) --> Line_17 $$ String serial_port_name = null [CD]
Line_2 $$ public void init(String[] arguments) --> Line_18 $$ boolean gpsd = false [CD]
Line_2 $$ public void init(String[] arguments) --> Line_19 $$ String gpsd_host = "localhost" [CD]
Line_2 $$ public void init(String[] arguments) --> Line_20 $$ int gpsd_port = 2947 [CD]
Line_2 $$ public void init(String[] arguments) --> Line_21 $$ int serial_port_speed = -1 [CD]
Line_2 $$ public void init(String[] arguments) --> Line_22 $$ GPSDataProcessor gps_data_processor [CD]
Line_2 $$ public void init(String[] arguments) --> Line_23 $$ String nmea_log_file = null [CD]
Line_2 $$ public void init(String[] arguments) --> Line_24 $$ if (args.isSet("help") || (args.isSet("h"))) [CD]
Line_8 $$ CommandArguments args = null --> Line_24 $$ if (args.isSet("help") || (args.isSet("h"))) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_24 $$ if (args.isSet("help") || (args.isSet("h"))) [FD]
Line_24 $$ if (args.isSet("help") || (args.isSet("h"))) --> Line_25 $$ printHelp() [CD]
Line_24 $$ if (args.isSet("help") || (args.isSet("h"))) --> Line_26 $$ return [CD]
Line_2 $$ public void init(String[] arguments) --> Line_28 $$ if (args.isSet("helptemplate")) [CD]
Line_8 $$ CommandArguments args = null --> Line_28 $$ if (args.isSet("helptemplate")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_28 $$ if (args.isSet("helptemplate")) [FD]
Line_28 $$ if (args.isSet("helptemplate")) --> Line_29 $$ printHelpTemplate() [CD]
Line_2 $$ public void init(String[] arguments) --> Line_31 $$ if (args.isSet("printdefaulttemplate")) [CD]
Line_8 $$ CommandArguments args = null --> Line_31 $$ if (args.isSet("printdefaulttemplate")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_31 $$ if (args.isSet("printdefaulttemplate")) [FD]
Line_31 $$ if (args.isSet("printdefaulttemplate")) --> Line_32 $$ System.out.println(DEFAULT_TEMPLATE) [CD]
Line_2 $$ public void init(String[] arguments) --> Line_34 $$ if (args.isSet("device")) [CD]
Line_8 $$ CommandArguments args = null --> Line_34 $$ if (args.isSet("device")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_34 $$ if (args.isSet("device")) [FD]
Line_34 $$ if (args.isSet("device")) --> Line_35 $$ serial_port_name = (String) args.getValue("device") [CD]
Line_17 $$ String serial_port_name = null --> Line_35 $$ serial_port_name = (String) args.getValue("device") [FD]
Line_8 $$ CommandArguments args = null --> Line_35 $$ serial_port_name = (String) args.getValue("device") [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_35 $$ serial_port_name = (String) args.getValue("device") [FD]
Line_34 $$ if (args.isSet("device")) --> Line_36 $$ if (args.isSet("d")) [CD]
Line_8 $$ CommandArguments args = null --> Line_36 $$ if (args.isSet("d")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_36 $$ if (args.isSet("d")) [FD]
Line_36 $$ if (args.isSet("d")) --> Line_37 $$ serial_port_name = (String) args.getValue("d") [CD]
Line_17 $$ String serial_port_name = null --> Line_37 $$ serial_port_name = (String) args.getValue("d") [FD]
Line_35 $$ serial_port_name = (String) args.getValue("device") --> Line_37 $$ serial_port_name = (String) args.getValue("d") [FD]
Line_8 $$ CommandArguments args = null --> Line_37 $$ serial_port_name = (String) args.getValue("d") [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_37 $$ serial_port_name = (String) args.getValue("d") [FD]
Line_2 $$ public void init(String[] arguments) --> Line_39 $$ if (args.isSet("speed")) [CD]
Line_8 $$ CommandArguments args = null --> Line_39 $$ if (args.isSet("speed")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_39 $$ if (args.isSet("speed")) [FD]
Line_39 $$ if (args.isSet("speed")) --> Line_40 $$ serial_port_speed = ((Integer) args.getValue("speed")).intValue() [CD]
Line_21 $$ int serial_port_speed = -1 --> Line_40 $$ serial_port_speed = ((Integer) args.getValue("speed")).intValue() [FD]
Line_8 $$ CommandArguments args = null --> Line_40 $$ serial_port_speed = ((Integer) args.getValue("speed")).intValue() [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_40 $$ serial_port_speed = ((Integer) args.getValue("speed")).intValue() [FD]
Line_39 $$ if (args.isSet("speed")) --> Line_41 $$ if (args.isSet("s")) [CD]
Line_8 $$ CommandArguments args = null --> Line_41 $$ if (args.isSet("s")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_41 $$ if (args.isSet("s")) [FD]
Line_41 $$ if (args.isSet("s")) --> Line_42 $$ serial_port_speed = ((Integer) args.getValue("s")).intValue() [CD]
Line_21 $$ int serial_port_speed = -1 --> Line_42 $$ serial_port_speed = ((Integer) args.getValue("s")).intValue() [FD]
Line_40 $$ serial_port_speed = ((Integer) args.getValue("speed")).intValue() --> Line_42 $$ serial_port_speed = ((Integer) args.getValue("s")).intValue() [FD]
Line_8 $$ CommandArguments args = null --> Line_42 $$ serial_port_speed = ((Integer) args.getValue("s")).intValue() [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_42 $$ serial_port_speed = ((Integer) args.getValue("s")).intValue() [FD]
Line_2 $$ public void init(String[] arguments) --> Line_44 $$ if (args.isSet("file")) [CD]
Line_8 $$ CommandArguments args = null --> Line_44 $$ if (args.isSet("file")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_44 $$ if (args.isSet("file")) [FD]
Line_44 $$ if (args.isSet("file")) --> Line_45 $$ filename = (String) args.getValue("file") [CD]
Line_16 $$ String filename = null --> Line_45 $$ filename = (String) args.getValue("file") [FD]
Line_8 $$ CommandArguments args = null --> Line_45 $$ filename = (String) args.getValue("file") [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_45 $$ filename = (String) args.getValue("file") [FD]
Line_44 $$ if (args.isSet("file")) --> Line_46 $$ if (args.isSet("f")) [CD]
Line_8 $$ CommandArguments args = null --> Line_46 $$ if (args.isSet("f")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_46 $$ if (args.isSet("f")) [FD]
Line_46 $$ if (args.isSet("f")) --> Line_47 $$ filename = (String) args.getValue("f") [CD]
Line_16 $$ String filename = null --> Line_47 $$ filename = (String) args.getValue("f") [FD]
Line_45 $$ filename = (String) args.getValue("file") --> Line_47 $$ filename = (String) args.getValue("f") [FD]
Line_8 $$ CommandArguments args = null --> Line_47 $$ filename = (String) args.getValue("f") [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_47 $$ filename = (String) args.getValue("f") [FD]
Line_2 $$ public void init(String[] arguments) --> Line_49 $$ if (args.isSet("gpsd")) [CD]
Line_8 $$ CommandArguments args = null --> Line_49 $$ if (args.isSet("gpsd")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_49 $$ if (args.isSet("gpsd")) [FD]
Line_49 $$ if (args.isSet("gpsd")) --> Line_50 $$ gpsd = true [CD]
Line_18 $$ boolean gpsd = false --> Line_50 $$ gpsd = true [FD]
Line_49 $$ if (args.isSet("gpsd")) --> Line_51 $$ String gpsd_host_port = (String) args.getValue("gpsd") [CD]
Line_8 $$ CommandArguments args = null --> Line_51 $$ String gpsd_host_port = (String) args.getValue("gpsd") [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_51 $$ String gpsd_host_port = (String) args.getValue("gpsd") [FD]
Line_49 $$ if (args.isSet("gpsd")) --> Line_52 $$ if (gpsd_host_port != null && gpsd_host_port.length() > 0) [CD]
Line_51 $$ String gpsd_host_port = (String) args.getValue("gpsd") --> Line_52 $$ if (gpsd_host_port != null && gpsd_host_port.length() > 0) [FD]
Line_52 $$ if (gpsd_host_port != null && gpsd_host_port.length() > 0) --> Line_53 $$ String[] params = gpsd_host_port.split(":") [CD]
Line_51 $$ String gpsd_host_port = (String) args.getValue("gpsd") --> Line_53 $$ String[] params = gpsd_host_port.split(":") [FD]
Line_52 $$ if (gpsd_host_port != null && gpsd_host_port.length() > 0) --> Line_54 $$ gpsd_host = params[0] [CD]
Line_19 $$ String gpsd_host = "localhost" --> Line_54 $$ gpsd_host = params[0] [FD]
Line_52 $$ if (gpsd_host_port != null && gpsd_host_port.length() > 0) --> Line_55 $$ if (params.length > 0) [CD]
Line_55 $$ if (params.length > 0) --> Line_56 $$ gpsd_port = Integer.parseInt(params[1]) [CD]
Line_20 $$ int gpsd_port = 2947 --> Line_56 $$ gpsd_port = Integer.parseInt(params[1]) [FD]
Line_2 $$ public void init(String[] arguments) --> Line_60 $$ if (args.isSet("garmin") || args.isSet("g")) [CD]
Line_8 $$ CommandArguments args = null --> Line_60 $$ if (args.isSet("garmin") || args.isSet("g")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_60 $$ if (args.isSet("garmin") || args.isSet("g")) [FD]
Line_60 $$ if (args.isSet("garmin") || args.isSet("g")) --> Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() [CD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() [FD]
Line_60 $$ if (args.isSet("garmin") || args.isSet("g")) --> Line_62 $$ serial_port_speed = 9600 [CD]
Line_21 $$ int serial_port_speed = -1 --> Line_62 $$ serial_port_speed = 9600 [FD]
Line_40 $$ serial_port_speed = ((Integer) args.getValue("speed")).intValue() --> Line_62 $$ serial_port_speed = 9600 [FD]
Line_42 $$ serial_port_speed = ((Integer) args.getValue("s")).intValue() --> Line_62 $$ serial_port_speed = 9600 [FD]
Line_60 $$ if (args.isSet("garmin") || args.isSet("g")) --> Line_63 $$ if (filename != null) [CD]
Line_16 $$ String filename = null --> Line_63 $$ if (filename != null) [FD]
Line_45 $$ filename = (String) args.getValue("file") --> Line_63 $$ if (filename != null) [FD]
Line_47 $$ filename = (String) args.getValue("f") --> Line_63 $$ if (filename != null) [FD]
Line_63 $$ if (filename != null) --> Line_64 $$ System.err.println("ERROR: Cannot read garmin data from file, only serial port supported!") [CD]
Line_63 $$ if (filename != null) --> Line_65 $$ return [CD]
Line_60 $$ if (args.isSet("garmin") || args.isSet("g")) --> Line_67 $$ if (args.isSet("sirf") || args.isSet("i")) [CD]
Line_8 $$ CommandArguments args = null --> Line_67 $$ if (args.isSet("sirf") || args.isSet("i")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_67 $$ if (args.isSet("sirf") || args.isSet("i")) [FD]
Line_67 $$ if (args.isSet("sirf") || args.isSet("i")) --> Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() [CD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() [FD]
Line_67 $$ if (args.isSet("sirf") || args.isSet("i")) --> Line_69 $$ serial_port_speed = 19200 [CD]
Line_21 $$ int serial_port_speed = -1 --> Line_69 $$ serial_port_speed = 19200 [FD]
Line_40 $$ serial_port_speed = ((Integer) args.getValue("speed")).intValue() --> Line_69 $$ serial_port_speed = 19200 [FD]
Line_42 $$ serial_port_speed = ((Integer) args.getValue("s")).intValue() --> Line_69 $$ serial_port_speed = 19200 [FD]
Line_62 $$ serial_port_speed = 9600 --> Line_69 $$ serial_port_speed = 19200 [FD]
Line_67 $$ if (args.isSet("sirf") || args.isSet("i")) --> Line_70 $$ if (filename != null) [CD]
Line_16 $$ String filename = null --> Line_70 $$ if (filename != null) [FD]
Line_45 $$ filename = (String) args.getValue("file") --> Line_70 $$ if (filename != null) [FD]
Line_47 $$ filename = (String) args.getValue("f") --> Line_70 $$ if (filename != null) [FD]
Line_70 $$ if (filename != null) --> Line_71 $$ System.err.println("ERROR: Cannot read sirf data from file, only serial port supported!") [CD]
Line_70 $$ if (filename != null) --> Line_72 $$ return [CD]
Line_67 $$ if (args.isSet("sirf") || args.isSet("i")) --> Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() [CD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() [FD]
Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() --> Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() [FD]
Line_67 $$ if (args.isSet("sirf") || args.isSet("i")) --> Line_76 $$ serial_port_speed = 4800 [CD]
Line_21 $$ int serial_port_speed = -1 --> Line_76 $$ serial_port_speed = 4800 [FD]
Line_40 $$ serial_port_speed = ((Integer) args.getValue("speed")).intValue() --> Line_76 $$ serial_port_speed = 4800 [FD]
Line_42 $$ serial_port_speed = ((Integer) args.getValue("s")).intValue() --> Line_76 $$ serial_port_speed = 4800 [FD]
Line_62 $$ serial_port_speed = 9600 --> Line_76 $$ serial_port_speed = 4800 [FD]
Line_69 $$ serial_port_speed = 19200 --> Line_76 $$ serial_port_speed = 4800 [FD]
Line_2 $$ public void init(String[] arguments) --> Line_78 $$ if (args.isSet("nmealogfile") || (args.isSet("l"))) [CD]
Line_8 $$ CommandArguments args = null --> Line_78 $$ if (args.isSet("nmealogfile") || (args.isSet("l"))) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_78 $$ if (args.isSet("nmealogfile") || (args.isSet("l"))) [FD]
Line_78 $$ if (args.isSet("nmealogfile") || (args.isSet("l"))) --> Line_79 $$ nmea_log_file = args.getStringValue("nmealogfile") [CD]
Line_8 $$ CommandArguments args = null --> Line_79 $$ nmea_log_file = args.getStringValue("nmealogfile") [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_79 $$ nmea_log_file = args.getStringValue("nmealogfile") [FD]
Line_23 $$ String nmea_log_file = null --> Line_79 $$ nmea_log_file = args.getStringValue("nmealogfile") [FD]
Line_2 $$ public void init(String[] arguments) --> Line_81 $$ if (args.isSet("rawdata")) [CD]
Line_8 $$ CommandArguments args = null --> Line_81 $$ if (args.isSet("rawdata")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_81 $$ if (args.isSet("rawdata")) [FD]
Line_81 $$ if (args.isSet("rawdata")) --> Line_82 $$ gps_data_processor.addGPSRawDataListener(new GPSRawDataListener() [CD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_82 $$ gps_data_processor.addGPSRawDataListener(new GPSRawDataListener() [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_82 $$ gps_data_processor.addGPSRawDataListener(new GPSRawDataListener() [FD]
Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() --> Line_82 $$ gps_data_processor.addGPSRawDataListener(new GPSRawDataListener() [FD]
Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() --> Line_82 $$ gps_data_processor.addGPSRawDataListener(new GPSRawDataListener() [FD]
Line_82 $$ gps_data_processor.addGPSRawDataListener(new GPSRawDataListener() --> Line_84 $$ System.out.println("RAWLOG: " + new String(data, offset, length)) [CD]
Line_2 $$ public void init(String[] arguments) --> Line_90 $$ if (filename != null) [CD]
Line_16 $$ String filename = null --> Line_90 $$ if (filename != null) [FD]
Line_45 $$ filename = (String) args.getValue("file") --> Line_90 $$ if (filename != null) [FD]
Line_47 $$ filename = (String) args.getValue("f") --> Line_90 $$ if (filename != null) [FD]
Line_18 $$ boolean gpsd = false --> Line_90 $$ if (filename != null) [FD]
Line_50 $$ gpsd = true --> Line_90 $$ if (filename != null) [FD]
Line_90 $$ if (filename != null) --> Line_91 $$ environment.put(GPSFileDevice.PATH_NAME_KEY, filename) [CD]
Line_16 $$ String filename = null --> Line_91 $$ environment.put(GPSFileDevice.PATH_NAME_KEY, filename) [FD]
Line_45 $$ filename = (String) args.getValue("file") --> Line_91 $$ environment.put(GPSFileDevice.PATH_NAME_KEY, filename) [FD]
Line_47 $$ filename = (String) args.getValue("f") --> Line_91 $$ environment.put(GPSFileDevice.PATH_NAME_KEY, filename) [FD]
Line_90 $$ if (filename != null) --> Line_93 $$ if (gpsd) [CD]
Line_93 $$ if (gpsd) --> Line_94 $$ environment.put(GPSNetworkGpsdDevice.GPSD_HOST_KEY, gpsd_host) [CD]
Line_19 $$ String gpsd_host = "localhost" --> Line_94 $$ environment.put(GPSNetworkGpsdDevice.GPSD_HOST_KEY, gpsd_host) [FD]
Line_54 $$ gpsd_host = params[0] --> Line_94 $$ environment.put(GPSNetworkGpsdDevice.GPSD_HOST_KEY, gpsd_host) [FD]
Line_93 $$ if (gpsd) --> Line_95 $$ environment.put(GPSNetworkGpsdDevice.GPSD_PORT_KEY, new Integer(gpsd_port)) [CD]
Line_93 $$ if (gpsd) --> Line_98 $$ environment.put(GPSSerialDevice.PORT_NAME_KEY, serial_port_name) [CD]
Line_17 $$ String serial_port_name = null --> Line_98 $$ environment.put(GPSSerialDevice.PORT_NAME_KEY, serial_port_name) [FD]
Line_35 $$ serial_port_name = (String) args.getValue("device") --> Line_98 $$ environment.put(GPSSerialDevice.PORT_NAME_KEY, serial_port_name) [FD]
Line_37 $$ serial_port_name = (String) args.getValue("d") --> Line_98 $$ environment.put(GPSSerialDevice.PORT_NAME_KEY, serial_port_name) [FD]
Line_93 $$ if (gpsd) --> Line_99 $$ environment.put(GPSSerialDevice.PORT_SPEED_KEY, new Integer(serial_port_speed)) [CD]
Line_21 $$ int serial_port_speed = -1 --> Line_99 $$ environment.put(GPSSerialDevice.PORT_SPEED_KEY, new Integer(serial_port_speed)) [FD]
Line_40 $$ serial_port_speed = ((Integer) args.getValue("speed")).intValue() --> Line_99 $$ environment.put(GPSSerialDevice.PORT_SPEED_KEY, new Integer(serial_port_speed)) [FD]
Line_42 $$ serial_port_speed = ((Integer) args.getValue("s")).intValue() --> Line_99 $$ environment.put(GPSSerialDevice.PORT_SPEED_KEY, new Integer(serial_port_speed)) [FD]
Line_62 $$ serial_port_speed = 9600 --> Line_99 $$ environment.put(GPSSerialDevice.PORT_SPEED_KEY, new Integer(serial_port_speed)) [FD]
Line_69 $$ serial_port_speed = 19200 --> Line_99 $$ environment.put(GPSSerialDevice.PORT_SPEED_KEY, new Integer(serial_port_speed)) [FD]
Line_76 $$ serial_port_speed = 4800 --> Line_99 $$ environment.put(GPSSerialDevice.PORT_SPEED_KEY, new Integer(serial_port_speed)) [FD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_104 $$ gps_data_processor.setGPSDevice(gps_device) [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_104 $$ gps_data_processor.setGPSDevice(gps_device) [FD]
Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() --> Line_104 $$ gps_data_processor.setGPSDevice(gps_device) [FD]
Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() --> Line_104 $$ gps_data_processor.setGPSDevice(gps_device) [FD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_105 $$ gps_data_processor.open() [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_105 $$ gps_data_processor.open() [FD]
Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() --> Line_105 $$ gps_data_processor.open() [FD]
Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() --> Line_105 $$ gps_data_processor.open() [FD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_106 $$ gps_data_processor.addProgressListener(this) [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_106 $$ gps_data_processor.addProgressListener(this) [FD]
Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() --> Line_106 $$ gps_data_processor.addProgressListener(this) [FD]
Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() --> Line_106 $$ gps_data_processor.addProgressListener(this) [FD]
Line_23 $$ String nmea_log_file = null --> Line_107 $$ if ((nmea_log_file != null) && (nmea_log_file.length() > 0)) [FD]
Line_79 $$ nmea_log_file = args.getStringValue("nmealogfile") --> Line_107 $$ if ((nmea_log_file != null) && (nmea_log_file.length() > 0)) [FD]
Line_107 $$ if ((nmea_log_file != null) && (nmea_log_file.length() > 0)) --> Line_108 $$ gps_data_processor.addGPSRawDataListener(new GPSRawDataFileLogger(nmea_log_file)) [CD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_108 $$ gps_data_processor.addGPSRawDataListener(new GPSRawDataFileLogger(nmea_log_file)) [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_108 $$ gps_data_processor.addGPSRawDataListener(new GPSRawDataFileLogger(nmea_log_file)) [FD]
Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() --> Line_108 $$ gps_data_processor.addGPSRawDataListener(new GPSRawDataFileLogger(nmea_log_file)) [FD]
Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() --> Line_108 $$ gps_data_processor.addGPSRawDataListener(new GPSRawDataFileLogger(nmea_log_file)) [FD]
Line_8 $$ CommandArguments args = null --> Line_110 $$ if (args.isSet("deviceinfo")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_110 $$ if (args.isSet("deviceinfo")) [FD]
Line_110 $$ if (args.isSet("deviceinfo")) --> Line_111 $$ System.out.println("GPSInfo:") [CD]
Line_110 $$ if (args.isSet("deviceinfo")) --> Line_112 $$ String[] infos = gps_data_processor.getGPSInfo() [CD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_112 $$ String[] infos = gps_data_processor.getGPSInfo() [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_112 $$ String[] infos = gps_data_processor.getGPSInfo() [FD]
Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() --> Line_112 $$ String[] infos = gps_data_processor.getGPSInfo() [FD]
Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() --> Line_112 $$ String[] infos = gps_data_processor.getGPSInfo() [FD]
Line_110 $$ if (args.isSet("deviceinfo")) --> Line_113 $$ for (int index = 0; index < infos.length; index++) [CD]
Line_113 $$ for (int index = 0; index < infos.length; index++) --> Line_114 $$ System.out.println(infos[index]) [CD]
Line_8 $$ CommandArguments args = null --> Line_117 $$ if (args.isSet("screenshot")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_117 $$ if (args.isSet("screenshot")) [FD]
Line_8 $$ CommandArguments args = null --> Line_118 $$ FileOutputStream out = new FileOutputStream((String) args.getValue("screenshot")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_118 $$ FileOutputStream out = new FileOutputStream((String) args.getValue("screenshot")) [FD]
Line_117 $$ if (args.isSet("screenshot")) --> Line_119 $$ BufferedImage image = gps_data_processor.getScreenShot() [CD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_119 $$ BufferedImage image = gps_data_processor.getScreenShot() [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_119 $$ BufferedImage image = gps_data_processor.getScreenShot() [FD]
Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() --> Line_119 $$ BufferedImage image = gps_data_processor.getScreenShot() [FD]
Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() --> Line_119 $$ BufferedImage image = gps_data_processor.getScreenShot() [FD]
Line_117 $$ if (args.isSet("screenshot")) --> Line_120 $$ ImageIO.write(image, "PNG", out) [CD]
Line_8 $$ CommandArguments args = null --> Line_122 $$ boolean print_waypoints = args.isSet("downloadwaypoints") [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_122 $$ boolean print_waypoints = args.isSet("downloadwaypoints") [FD]
Line_8 $$ CommandArguments args = null --> Line_123 $$ boolean print_routes = args.isSet("downloadroutes") [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_123 $$ boolean print_routes = args.isSet("downloadroutes") [FD]
Line_8 $$ CommandArguments args = null --> Line_124 $$ boolean print_tracks = args.isSet("downloadtracks") [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_124 $$ boolean print_tracks = args.isSet("downloadtracks") [FD]
Line_125 $$ if (print_waypoints || print_routes || print_tracks) --> Line_127 $$ if (print_waypoints) [CD]
Line_127 $$ if (print_waypoints) --> Line_128 $$ List waypoints = gps_data_processor.getWaypoints() [CD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_128 $$ List waypoints = gps_data_processor.getWaypoints() [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_128 $$ List waypoints = gps_data_processor.getWaypoints() [FD]
Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() --> Line_128 $$ List waypoints = gps_data_processor.getWaypoints() [FD]
Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() --> Line_128 $$ List waypoints = gps_data_processor.getWaypoints() [FD]
Line_127 $$ if (print_waypoints) --> Line_129 $$ context.put("waypoints", waypoints) [CD]
Line_125 $$ if (print_waypoints || print_routes || print_tracks) --> Line_131 $$ if (print_tracks) [CD]
Line_131 $$ if (print_tracks) --> Line_132 $$ List tracks = gps_data_processor.getTracks() [CD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_132 $$ List tracks = gps_data_processor.getTracks() [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_132 $$ List tracks = gps_data_processor.getTracks() [FD]
Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() --> Line_132 $$ List tracks = gps_data_processor.getTracks() [FD]
Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() --> Line_132 $$ List tracks = gps_data_processor.getTracks() [FD]
Line_131 $$ if (print_tracks) --> Line_133 $$ context.put("tracks", tracks) [CD]
Line_125 $$ if (print_waypoints || print_routes || print_tracks) --> Line_135 $$ if (print_routes) [CD]
Line_135 $$ if (print_routes) --> Line_136 $$ List routes = gps_data_processor.getRoutes() [CD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_136 $$ List routes = gps_data_processor.getRoutes() [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_136 $$ List routes = gps_data_processor.getRoutes() [FD]
Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() --> Line_136 $$ List routes = gps_data_processor.getRoutes() [FD]
Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() --> Line_136 $$ List routes = gps_data_processor.getRoutes() [FD]
Line_135 $$ if (print_routes) --> Line_137 $$ context.put("routes", routes) [CD]
Line_125 $$ if (print_waypoints || print_routes || print_tracks) --> Line_139 $$ context.put("printwaypoints", new Boolean(print_waypoints)) [CD]
Line_125 $$ if (print_waypoints || print_routes || print_tracks) --> Line_140 $$ context.put("printtracks", new Boolean(print_tracks)) [CD]
Line_125 $$ if (print_waypoints || print_routes || print_tracks) --> Line_141 $$ context.put("printroutes", new Boolean(print_routes)) [CD]
Line_125 $$ if (print_waypoints || print_routes || print_tracks) --> Line_144 $$ if (args.isSet("template")) [CD]
Line_8 $$ CommandArguments args = null --> Line_144 $$ if (args.isSet("template")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_144 $$ if (args.isSet("template")) [FD]
Line_8 $$ CommandArguments args = null --> Line_145 $$ String template_file = (String) args.getValue("template") [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_145 $$ String template_file = (String) args.getValue("template") [FD]
Line_125 $$ if (print_waypoints || print_routes || print_tracks) --> Line_150 $$ writer = new FileWriter((String) args.getValue("outfile")) [CD]
Line_8 $$ CommandArguments args = null --> Line_150 $$ writer = new FileWriter((String) args.getValue("outfile")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_150 $$ writer = new FileWriter((String) args.getValue("outfile")) [FD]
Line_125 $$ if (print_waypoints || print_routes || print_tracks) --> Line_151 $$ addDefaultValuesToContext(context) [CD]
Line_125 $$ if (print_waypoints || print_routes || print_tracks) --> Line_152 $$ boolean result = printTemplate(context, reader, writer) [CD]
Line_8 $$ CommandArguments args = null --> Line_154 $$ boolean read_waypoints = (args.isSet("uploadwaypoints") && args.isSet("infile")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_154 $$ boolean read_waypoints = (args.isSet("uploadwaypoints") && args.isSet("infile")) [FD]
Line_8 $$ CommandArguments args = null --> Line_155 $$ boolean read_routes = (args.isSet("uploadroutes") && args.isSet("infile")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_155 $$ boolean read_routes = (args.isSet("uploadroutes") && args.isSet("infile")) [FD]
Line_8 $$ CommandArguments args = null --> Line_156 $$ boolean read_tracks = (args.isSet("uploadtracks") && args.isSet("infile")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_156 $$ boolean read_tracks = (args.isSet("uploadtracks") && args.isSet("infile")) [FD]
Line_8 $$ CommandArguments args = null --> Line_159 $$ String in_file = (String) args.getValue("infile") [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_159 $$ String in_file = (String) args.getValue("infile") [FD]
Line_157 $$ if (read_waypoints || read_routes || read_tracks) --> Line_160 $$ reader.parseFile(in_file) [CD]
Line_157 $$ if (read_waypoints || read_routes || read_tracks) --> Line_161 $$ gps_data_processor.setWaypoints(reader.getWaypoints()) [CD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_161 $$ gps_data_processor.setWaypoints(reader.getWaypoints()) [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_161 $$ gps_data_processor.setWaypoints(reader.getWaypoints()) [FD]
Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() --> Line_161 $$ gps_data_processor.setWaypoints(reader.getWaypoints()) [FD]
Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() --> Line_161 $$ gps_data_processor.setWaypoints(reader.getWaypoints()) [FD]
Line_157 $$ if (read_waypoints || read_routes || read_tracks) --> Line_162 $$ gps_data_processor.setRoutes(reader.getRoutes()) [CD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_162 $$ gps_data_processor.setRoutes(reader.getRoutes()) [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_162 $$ gps_data_processor.setRoutes(reader.getRoutes()) [FD]
Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() --> Line_162 $$ gps_data_processor.setRoutes(reader.getRoutes()) [FD]
Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() --> Line_162 $$ gps_data_processor.setRoutes(reader.getRoutes()) [FD]
Line_157 $$ if (read_waypoints || read_routes || read_tracks) --> Line_163 $$ gps_data_processor.setTracks(reader.getTracks()) [CD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_163 $$ gps_data_processor.setTracks(reader.getTracks()) [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_163 $$ gps_data_processor.setTracks(reader.getTracks()) [FD]
Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() --> Line_163 $$ gps_data_processor.setTracks(reader.getTracks()) [FD]
Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() --> Line_163 $$ gps_data_processor.setTracks(reader.getTracks()) [FD]
Line_8 $$ CommandArguments args = null --> Line_165 $$ if (args.isSet("printposonce")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_165 $$ if (args.isSet("printposonce")) [FD]
Line_165 $$ if (args.isSet("printposonce")) --> Line_166 $$ GPSPosition pos = gps_data_processor.getGPSPosition() [CD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_166 $$ GPSPosition pos = gps_data_processor.getGPSPosition() [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_166 $$ GPSPosition pos = gps_data_processor.getGPSPosition() [FD]
Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() --> Line_166 $$ GPSPosition pos = gps_data_processor.getGPSPosition() [FD]
Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() --> Line_166 $$ GPSPosition pos = gps_data_processor.getGPSPosition() [FD]
Line_165 $$ if (args.isSet("printposonce")) --> Line_167 $$ System.out.println("Current Position: " + pos) [CD]
Line_8 $$ CommandArguments args = null --> Line_169 $$ if (args.isSet("printpos") || args.isSet("p")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_169 $$ if (args.isSet("printpos") || args.isSet("p")) [FD]
Line_169 $$ if (args.isSet("printpos") || args.isSet("p")) --> Line_170 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.LOCATION, this) [CD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_170 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.LOCATION, this) [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_170 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.LOCATION, this) [FD]
Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() --> Line_170 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.LOCATION, this) [FD]
Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() --> Line_170 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.LOCATION, this) [FD]
Line_8 $$ CommandArguments args = null --> Line_172 $$ if (args.isSet("printalt")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_172 $$ if (args.isSet("printalt")) [FD]
Line_172 $$ if (args.isSet("printalt")) --> Line_173 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.ALTITUDE, this) [CD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_173 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.ALTITUDE, this) [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_173 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.ALTITUDE, this) [FD]
Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() --> Line_173 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.ALTITUDE, this) [FD]
Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() --> Line_173 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.ALTITUDE, this) [FD]
Line_8 $$ CommandArguments args = null --> Line_175 $$ if (args.isSet("printspeed")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_175 $$ if (args.isSet("printspeed")) [FD]
Line_175 $$ if (args.isSet("printspeed")) --> Line_176 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.SPEED, this) [CD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_176 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.SPEED, this) [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_176 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.SPEED, this) [FD]
Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() --> Line_176 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.SPEED, this) [FD]
Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() --> Line_176 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.SPEED, this) [FD]
Line_8 $$ CommandArguments args = null --> Line_178 $$ if (args.isSet("printheading")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_178 $$ if (args.isSet("printheading")) [FD]
Line_178 $$ if (args.isSet("printheading")) --> Line_179 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.HEADING, this) [CD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_179 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.HEADING, this) [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_179 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.HEADING, this) [FD]
Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() --> Line_179 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.HEADING, this) [FD]
Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() --> Line_179 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.HEADING, this) [FD]
Line_8 $$ CommandArguments args = null --> Line_181 $$ if (args.isSet("printsat")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_181 $$ if (args.isSet("printsat")) [FD]
Line_181 $$ if (args.isSet("printsat")) --> Line_182 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.NUMBER_SATELLITES, this) [CD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_182 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.NUMBER_SATELLITES, this) [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_182 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.NUMBER_SATELLITES, this) [FD]
Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() --> Line_182 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.NUMBER_SATELLITES, this) [FD]
Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() --> Line_182 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.NUMBER_SATELLITES, this) [FD]
Line_181 $$ if (args.isSet("printsat")) --> Line_183 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.SATELLITE_INFO, this) [CD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_183 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.SATELLITE_INFO, this) [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_183 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.SATELLITE_INFO, this) [FD]
Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() --> Line_183 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.SATELLITE_INFO, this) [FD]
Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() --> Line_183 $$ gps_data_processor.addGPSDataChangeListener(GPSDataProcessor.SATELLITE_INFO, this) [FD]
Line_8 $$ CommandArguments args = null --> Line_185 $$ if (args.isSet("printpos") || args.isSet("p") || args.isSet("printalt") || args.isSet("printsat") || args.isSet("printspeed") || args.isSet("printheading")) [FD]
Line_10 $$ args = new CommandArguments(arguments, valid_args) --> Line_185 $$ if (args.isSet("printpos") || args.isSet("p") || args.isSet("printalt") || args.isSet("printsat") || args.isSet("printspeed") || args.isSet("printheading")) [FD]
Line_185 $$ if (args.isSet("printpos") || args.isSet("p") || args.isSet("printalt") || args.isSet("printsat") || args.isSet("printspeed") || args.isSet("printheading")) --> Line_186 $$ gps_data_processor.startSendPositionPeriodically(1000L) [CD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_186 $$ gps_data_processor.startSendPositionPeriodically(1000L) [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_186 $$ gps_data_processor.startSendPositionPeriodically(1000L) [FD]
Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() --> Line_186 $$ gps_data_processor.startSendPositionPeriodically(1000L) [FD]
Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() --> Line_186 $$ gps_data_processor.startSendPositionPeriodically(1000L) [FD]
Line_22 $$ GPSDataProcessor gps_data_processor --> Line_192 $$ gps_data_processor.close() [FD]
Line_61 $$ gps_data_processor = new GPSGarminDataProcessor() --> Line_192 $$ gps_data_processor.close() [FD]
Line_68 $$ gps_data_processor = new GPSSirfDataProcessor() --> Line_192 $$ gps_data_processor.close() [FD]
Line_75 $$ gps_data_processor = new GPSNmeaDataProcessor() --> Line_192 $$ gps_data_processor.close() [FD]
