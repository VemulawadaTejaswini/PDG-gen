Line_2 $$ private void downloadFile(File target, String s3key) throws IOException, S3ServiceException --> Line_3 $$ InputStream in = downloadData(s3key) [CD]
Line_2 $$ private void downloadFile(File target, String s3key) throws IOException, S3ServiceException --> Line_3 $$ InputStream in = downloadData(s3key) [FD]
Line_2 $$ private void downloadFile(File target, String s3key) throws IOException, S3ServiceException --> Line_4 $$ if (in == null) [CD]
Line_3 $$ InputStream in = downloadData(s3key) --> Line_4 $$ if (in == null) [FD]
Line_2 $$ private void downloadFile(File target, String s3key) throws IOException, S3ServiceException --> Line_7 $$ in = new InflaterInputStream(new CryptInputStream(in, cipher, getDataEncryptionKey())) [CD]
Line_3 $$ InputStream in = downloadData(s3key) --> Line_7 $$ in = new InflaterInputStream(new CryptInputStream(in, cipher, getDataEncryptionKey())) [FD]
Line_2 $$ private void downloadFile(File target, String s3key) throws IOException, S3ServiceException --> Line_8 $$ File temp = File.createTempFile("dirsync", null) [CD]
Line_2 $$ private void downloadFile(File target, String s3key) throws IOException, S3ServiceException --> Line_9 $$ FileOutputStream fout = new FileOutputStream(temp) [CD]
Line_3 $$ InputStream in = downloadData(s3key) --> Line_11 $$ IOUtils.copy(in, fout) [FD]
Line_7 $$ in = new InflaterInputStream(new CryptInputStream(in, cipher, getDataEncryptionKey())) --> Line_11 $$ IOUtils.copy(in, fout) [FD]
Line_9 $$ FileOutputStream fout = new FileOutputStream(temp) --> Line_11 $$ IOUtils.copy(in, fout) [FD]
Line_2 $$ private void downloadFile(File target, String s3key) throws IOException, S3ServiceException --> Line_12 $$ if (target.exists()) [FD]
Line_12 $$ if (target.exists()) --> Line_13 $$ target.delete() [CD]
Line_2 $$ private void downloadFile(File target, String s3key) throws IOException, S3ServiceException --> Line_13 $$ target.delete() [FD]
Line_9 $$ FileOutputStream fout = new FileOutputStream(temp) --> Line_15 $$ IOUtils.closeQuietly(fout) [FD]
Line_3 $$ InputStream in = downloadData(s3key) --> Line_16 $$ IOUtils.closeQuietly(in) [FD]
Line_7 $$ in = new InflaterInputStream(new CryptInputStream(in, cipher, getDataEncryptionKey())) --> Line_16 $$ IOUtils.closeQuietly(in) [FD]
Line_8 $$ File temp = File.createTempFile("dirsync", null) --> Line_17 $$ FileUtils.moveFile(temp, target) [FD]
Line_2 $$ private void downloadFile(File target, String s3key) throws IOException, S3ServiceException --> Line_17 $$ FileUtils.moveFile(temp, target) [FD]
Line_3 $$ InputStream in = downloadData(s3key) --> Line_19 $$ fetchStream(in) [FD]
Line_7 $$ in = new InflaterInputStream(new CryptInputStream(in, cipher, getDataEncryptionKey())) --> Line_19 $$ fetchStream(in) [FD]
Line_9 $$ FileOutputStream fout = new FileOutputStream(temp) --> Line_22 $$ IOUtils.closeQuietly(fout) [FD]
Line_3 $$ InputStream in = downloadData(s3key) --> Line_23 $$ IOUtils.closeQuietly(in) [FD]
Line_7 $$ in = new InflaterInputStream(new CryptInputStream(in, cipher, getDataEncryptionKey())) --> Line_23 $$ IOUtils.closeQuietly(in) [FD]
