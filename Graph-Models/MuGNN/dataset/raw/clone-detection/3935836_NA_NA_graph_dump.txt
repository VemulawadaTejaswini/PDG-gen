Line_2 $$ public static void storePolicy(DBBroker broker, XmldbURI docPath) throws EXistException, IOException --> Line_3 $$ XmldbURI docName = docPath.lastSegment() [CD]
Line_2 $$ public static void storePolicy(DBBroker broker, XmldbURI docPath) throws EXistException, IOException --> Line_3 $$ XmldbURI docName = docPath.lastSegment() [FD]
Line_2 $$ public static void storePolicy(DBBroker broker, XmldbURI docPath) throws EXistException, IOException --> Line_4 $$ URL url = XACMLUtil.class.getResource(docPath.toString()) [CD]
Line_2 $$ public static void storePolicy(DBBroker broker, XmldbURI docPath) throws EXistException, IOException --> Line_4 $$ URL url = XACMLUtil.class.getResource(docPath.toString()) [FD]
Line_2 $$ public static void storePolicy(DBBroker broker, XmldbURI docPath) throws EXistException, IOException --> Line_5 $$ if (url == null) [CD]
Line_2 $$ public static void storePolicy(DBBroker broker, XmldbURI docPath) throws EXistException, IOException --> Line_6 $$ String content = toString(url.openStream()) [CD]
Line_2 $$ public static void storePolicy(DBBroker broker, XmldbURI docPath) throws EXistException, IOException --> Line_7 $$ if (content == null) [CD]
Line_6 $$ String content = toString(url.openStream()) --> Line_7 $$ if (content == null) [FD]
Line_2 $$ public static void storePolicy(DBBroker broker, XmldbURI docPath) throws EXistException, IOException --> Line_8 $$ Collection collection = getPolicyCollection(broker) [CD]
Line_2 $$ public static void storePolicy(DBBroker broker, XmldbURI docPath) throws EXistException, IOException --> Line_8 $$ Collection collection = getPolicyCollection(broker) [FD]
Line_2 $$ public static void storePolicy(DBBroker broker, XmldbURI docPath) throws EXistException, IOException --> Line_9 $$ if (collection == null) [CD]
Line_8 $$ Collection collection = getPolicyCollection(broker) --> Line_9 $$ if (collection == null) [FD]
Line_2 $$ public static void storePolicy(DBBroker broker, XmldbURI docPath) throws EXistException, IOException --> Line_10 $$ TransactionManager transact = broker.getBrokerPool().getTransactionManager() [CD]
Line_2 $$ public static void storePolicy(DBBroker broker, XmldbURI docPath) throws EXistException, IOException --> Line_10 $$ TransactionManager transact = broker.getBrokerPool().getTransactionManager() [FD]
Line_2 $$ public static void storePolicy(DBBroker broker, XmldbURI docPath) throws EXistException, IOException --> Line_11 $$ Txn txn = transact.beginTransaction() [CD]
Line_10 $$ TransactionManager transact = broker.getBrokerPool().getTransactionManager() --> Line_11 $$ Txn txn = transact.beginTransaction() [FD]
Line_8 $$ Collection collection = getPolicyCollection(broker) --> Line_13 $$ IndexInfo info = collection.validateXMLResource(txn, broker, docName, content) [FD]
Line_11 $$ Txn txn = transact.beginTransaction() --> Line_13 $$ IndexInfo info = collection.validateXMLResource(txn, broker, docName, content) [FD]
Line_2 $$ public static void storePolicy(DBBroker broker, XmldbURI docPath) throws EXistException, IOException --> Line_13 $$ IndexInfo info = collection.validateXMLResource(txn, broker, docName, content) [FD]
Line_3 $$ XmldbURI docName = docPath.lastSegment() --> Line_13 $$ IndexInfo info = collection.validateXMLResource(txn, broker, docName, content) [FD]
Line_6 $$ String content = toString(url.openStream()) --> Line_13 $$ IndexInfo info = collection.validateXMLResource(txn, broker, docName, content) [FD]
Line_8 $$ Collection collection = getPolicyCollection(broker) --> Line_14 $$ collection.store(txn, broker, info, content, false) [FD]
Line_11 $$ Txn txn = transact.beginTransaction() --> Line_14 $$ collection.store(txn, broker, info, content, false) [FD]
Line_2 $$ public static void storePolicy(DBBroker broker, XmldbURI docPath) throws EXistException, IOException --> Line_14 $$ collection.store(txn, broker, info, content, false) [FD]
Line_13 $$ IndexInfo info = collection.validateXMLResource(txn, broker, docName, content) --> Line_14 $$ collection.store(txn, broker, info, content, false) [FD]
Line_6 $$ String content = toString(url.openStream()) --> Line_14 $$ collection.store(txn, broker, info, content, false) [FD]
Line_10 $$ TransactionManager transact = broker.getBrokerPool().getTransactionManager() --> Line_15 $$ transact.commit(txn) [FD]
Line_11 $$ Txn txn = transact.beginTransaction() --> Line_15 $$ transact.commit(txn) [FD]
Line_10 $$ TransactionManager transact = broker.getBrokerPool().getTransactionManager() --> Line_17 $$ transact.abort(txn) [FD]
Line_11 $$ Txn txn = transact.beginTransaction() --> Line_17 $$ transact.abort(txn) [FD]
