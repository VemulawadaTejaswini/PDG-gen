Line_2 $$ private void sort() --> Line_3 $$ for (int i = 0; i < density.length; i++) [CD]
Line_3 $$ for (int i = 0; i < density.length; i++) --> Line_4 $$ for (int j = density.length - 2; j >= i; j--) [CD]
Line_3 $$ for (int i = 0; i < density.length; i++) --> Line_4 $$ for (int j = density.length - 2; j >= i; j--) [FD]
Line_4 $$ for (int j = density.length - 2; j >= i; j--) --> Line_5 $$ if (density[j] > density[j + 1]) [CD]
Line_5 $$ if (density[j] > density[j + 1]) --> Line_6 $$ KDNode n = nonEmptyNodesArray[j] [CD]
Line_5 $$ if (density[j] > density[j + 1]) --> Line_7 $$ nonEmptyNodesArray[j] = nonEmptyNodesArray[j + 1] [CD]
Line_5 $$ if (density[j] > density[j + 1]) --> Line_8 $$ nonEmptyNodesArray[j + 1] = n [CD]
Line_6 $$ KDNode n = nonEmptyNodesArray[j] --> Line_8 $$ nonEmptyNodesArray[j + 1] = n [FD]
Line_5 $$ if (density[j] > density[j + 1]) --> Line_9 $$ double d = density[j] [CD]
Line_5 $$ if (density[j] > density[j + 1]) --> Line_10 $$ density[j] = density[j + 1] [CD]
Line_5 $$ if (density[j] > density[j + 1]) --> Line_11 $$ density[j + 1] = d [CD]
Line_9 $$ double d = density[j] --> Line_11 $$ density[j + 1] = d [FD]
