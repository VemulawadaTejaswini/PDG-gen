Line_2 $$ public void execute(File temporaryFile) throws Exception --> Line_3 $$ ZipArchive archive = new ZipArchive(temporaryFile.getPath()) [CD]
Line_2 $$ public void execute(File temporaryFile) throws Exception --> Line_3 $$ ZipArchive archive = new ZipArchive(temporaryFile.getPath()) [FD]
Line_2 $$ public void execute(File temporaryFile) throws Exception --> Line_4 $$ InputStream input = archive.getInputFrom(ARCHIVE_FILE_1) [CD]
Line_3 $$ ZipArchive archive = new ZipArchive(temporaryFile.getPath()) --> Line_4 $$ InputStream input = archive.getInputFrom(ARCHIVE_FILE_1) [FD]
Line_2 $$ public void execute(File temporaryFile) throws Exception --> Line_5 $$ if (input != null) [CD]
Line_4 $$ InputStream input = archive.getInputFrom(ARCHIVE_FILE_1) --> Line_5 $$ if (input != null) [FD]
Line_5 $$ if (input != null) --> Line_6 $$ ByteArrayOutputStream output = new ByteArrayOutputStream() [CD]
Line_5 $$ if (input != null) --> Line_7 $$ IOUtils.copyAndClose(input, output) [CD]
Line_4 $$ InputStream input = archive.getInputFrom(ARCHIVE_FILE_1) --> Line_7 $$ IOUtils.copyAndClose(input, output) [FD]
Line_6 $$ ByteArrayOutputStream output = new ByteArrayOutputStream() --> Line_7 $$ IOUtils.copyAndClose(input, output) [FD]
Line_5 $$ if (input != null) --> Line_8 $$ assertEquals(ARCHIVE_FILE_1 + " contents not correct", ARCHIVE_FILE_1_CONTENT, output.toString()) [CD]
Line_6 $$ ByteArrayOutputStream output = new ByteArrayOutputStream() --> Line_8 $$ assertEquals(ARCHIVE_FILE_1 + " contents not correct", ARCHIVE_FILE_1_CONTENT, output.toString()) [FD]
Line_5 $$ if (input != null) --> Line_10 $$ fail("cannot open " + ARCHIVE_FILE_1) [CD]
