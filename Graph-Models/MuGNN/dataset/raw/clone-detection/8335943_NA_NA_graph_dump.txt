Line_2 $$ public static byte[] sendRequestV2(String url, String content, Map<String, String> headers, String method, String contenttype) --> Line_3 $$ byte[] result = null [CD]
Line_5 $$ HttpURLConnection httpConn = (HttpURLConnection) new URL(url).openConnection() --> Line_6 $$ httpConn.setUseCaches(false) [FD]
Line_5 $$ HttpURLConnection httpConn = (HttpURLConnection) new URL(url).openConnection() --> Line_7 $$ httpConn.setInstanceFollowRedirects(true) [FD]
Line_5 $$ HttpURLConnection httpConn = (HttpURLConnection) new URL(url).openConnection() --> Line_8 $$ httpConn.setRequestMethod(method) [FD]
Line_2 $$ public static byte[] sendRequestV2(String url, String content, Map<String, String> headers, String method, String contenttype) --> Line_8 $$ httpConn.setRequestMethod(method) [FD]
Line_5 $$ HttpURLConnection httpConn = (HttpURLConnection) new URL(url).openConnection() --> Line_9 $$ httpConn.setRequestProperty("Content-Type", contenttype) [FD]
Line_2 $$ public static byte[] sendRequestV2(String url, String content, Map<String, String> headers, String method, String contenttype) --> Line_9 $$ httpConn.setRequestProperty("Content-Type", contenttype) [FD]
Line_5 $$ HttpURLConnection httpConn = (HttpURLConnection) new URL(url).openConnection() --> Line_10 $$ httpConn.setRequestProperty("Accept-Encoding", "gzip") [FD]
Line_2 $$ public static byte[] sendRequestV2(String url, String content, Map<String, String> headers, String method, String contenttype) --> Line_11 $$ if (headers != null && headers.size() > 0) [FD]
Line_11 $$ if (headers != null && headers.size() > 0) --> Line_12 $$ Iterator<String> keys = headers.keySet().iterator() [CD]
Line_2 $$ public static byte[] sendRequestV2(String url, String content, Map<String, String> headers, String method, String contenttype) --> Line_12 $$ Iterator<String> keys = headers.keySet().iterator() [FD]
Line_11 $$ if (headers != null && headers.size() > 0) --> Line_13 $$ while (keys.hasNext()) [CD]
Line_12 $$ Iterator<String> keys = headers.keySet().iterator() --> Line_13 $$ while (keys.hasNext()) [FD]
Line_13 $$ while (keys.hasNext()) --> Line_14 $$ String key = keys.next() [CD]
Line_12 $$ Iterator<String> keys = headers.keySet().iterator() --> Line_14 $$ String key = keys.next() [FD]
Line_13 $$ while (keys.hasNext()) --> Line_15 $$ httpConn.setRequestProperty(key, headers.get(key)) [CD]
Line_5 $$ HttpURLConnection httpConn = (HttpURLConnection) new URL(url).openConnection() --> Line_15 $$ httpConn.setRequestProperty(key, headers.get(key)) [FD]
Line_14 $$ String key = keys.next() --> Line_15 $$ httpConn.setRequestProperty(key, headers.get(key)) [FD]
Line_2 $$ public static byte[] sendRequestV2(String url, String content, Map<String, String> headers, String method, String contenttype) --> Line_15 $$ httpConn.setRequestProperty(key, headers.get(key)) [FD]
Line_5 $$ HttpURLConnection httpConn = (HttpURLConnection) new URL(url).openConnection() --> Line_18 $$ httpConn.setDoOutput(true) [FD]
Line_2 $$ public static byte[] sendRequestV2(String url, String content, Map<String, String> headers, String method, String contenttype) --> Line_19 $$ httpConn.getOutputStream().write(content.getBytes("UTF-8")) [FD]
Line_5 $$ HttpURLConnection httpConn = (HttpURLConnection) new URL(url).openConnection() --> Line_19 $$ httpConn.getOutputStream().write(content.getBytes("UTF-8")) [FD]
Line_5 $$ HttpURLConnection httpConn = (HttpURLConnection) new URL(url).openConnection() --> Line_21 $$ httpConn.connect() [FD]
Line_5 $$ HttpURLConnection httpConn = (HttpURLConnection) new URL(url).openConnection() --> Line_24 $$ InputStream in = httpConn.getInputStream() [FD]
Line_26 $$ int count = 0 --> Line_27 $$ while ((count = in.read(buf)) > 0) [FD]
Line_24 $$ InputStream in = httpConn.getInputStream() --> Line_27 $$ while ((count = in.read(buf)) > 0) [FD]
Line_25 $$ byte[] buf = new byte[500] --> Line_27 $$ while ((count = in.read(buf)) > 0) [FD]
Line_27 $$ while ((count = in.read(buf)) > 0) --> Line_28 $$ bout.write(buf, 0, count) [CD]
Line_27 $$ while ((count = in.read(buf)) > 0) --> Line_28 $$ bout.write(buf, 0, count) [FD]
Line_22 $$ ByteArrayOutputStream bout = new ByteArrayOutputStream() --> Line_28 $$ bout.write(buf, 0, count) [FD]
Line_25 $$ byte[] buf = new byte[500] --> Line_28 $$ bout.write(buf, 0, count) [FD]
Line_26 $$ int count = 0 --> Line_28 $$ bout.write(buf, 0, count) [FD]
Line_3 $$ byte[] result = null --> Line_30 $$ result = bout.toByteArray() [FD]
Line_22 $$ ByteArrayOutputStream bout = new ByteArrayOutputStream() --> Line_30 $$ result = bout.toByteArray() [FD]
Line_22 $$ ByteArrayOutputStream bout = new ByteArrayOutputStream() --> Line_34 $$ if (bout != null) [FD]
Line_2 $$ public static byte[] sendRequestV2(String url, String content, Map<String, String> headers, String method, String contenttype) --> Line_40 $$ return result [CD]
