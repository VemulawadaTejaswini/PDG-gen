Line_2 $$ public void run() --> Line_3 $$ long time = System.currentTimeMillis() [CD]
Line_2 $$ public void run() --> Line_4 $$ logger.info("Version: " + version) [CD]
Line_2 $$ public void run() --> Line_5 $$ String hostname = properties.getProperty("mercuriushost") [CD]
Line_2 $$ public void run() --> Line_6 $$ String protocol = properties.getProperty("mercuriusprotocol") [CD]
Line_2 $$ public void run() --> Line_7 $$ String port = properties.getProperty("mercuriusport") [CD]
Line_2 $$ public void run() --> Line_8 $$ String path = properties.getProperty("mercuriuspath") [CD]
Line_2 $$ public void run() --> Line_9 $$ String action = properties.getProperty("mercuriusaction") [CD]
Line_2 $$ public void run() --> Line_10 $$ logger.info("Getting Timex Data --- " + getTimeDifferent(time)) [CD]
Line_3 $$ long time = System.currentTimeMillis() --> Line_10 $$ logger.info("Getting Timex Data --- " + getTimeDifferent(time)) [FD]
Line_2 $$ public void run() --> Line_11 $$ String xml = timexfrmk.getUnsynchedSessionsXMLFormat() [CD]
Line_2 $$ public void run() --> Line_12 $$ logger.info("Done getting Timex Data --- " + getTimeDifferent(time)) [CD]
Line_3 $$ long time = System.currentTimeMillis() --> Line_12 $$ logger.info("Done getting Timex Data --- " + getTimeDifferent(time)) [FD]
Line_2 $$ public void run() --> Line_13 $$ if (timexfrmk.getSessionCount() > 0) [CD]
Line_3 $$ long time = System.currentTimeMillis() --> Line_15 $$ logger.info("Sending Timex Data to Mercurius --- " + getTimeDifferent(time)) [FD]
Line_9 $$ String action = properties.getProperty("mercuriusaction") --> Line_16 $$ String data = URLEncoder.encode("action", "UTF-8") + "=" + URLEncoder.encode(action, "UTF-8") [FD]
Line_16 $$ String data = URLEncoder.encode("action", "UTF-8") + "=" + URLEncoder.encode(action, "UTF-8") --> Line_17 $$ data += "&" + URLEncoder.encode("data", "UTF-8") + "=" + URLEncoder.encode(xml, "UTF-8") [FD]
Line_11 $$ String xml = timexfrmk.getUnsynchedSessionsXMLFormat() --> Line_17 $$ data += "&" + URLEncoder.encode("data", "UTF-8") + "=" + URLEncoder.encode(xml, "UTF-8") [FD]
Line_18 $$ if (isAdminFeedKeySet()) --> Line_19 $$ data += "&" + URLEncoder.encode("adminfeedkey", "UTF-8") + "=" + URLEncoder.encode(adminfeedkey, "UTF-8") [CD]
Line_16 $$ String data = URLEncoder.encode("action", "UTF-8") + "=" + URLEncoder.encode(action, "UTF-8") --> Line_19 $$ data += "&" + URLEncoder.encode("adminfeedkey", "UTF-8") + "=" + URLEncoder.encode(adminfeedkey, "UTF-8") [FD]
Line_17 $$ data += "&" + URLEncoder.encode("data", "UTF-8") + "=" + URLEncoder.encode(xml, "UTF-8") --> Line_19 $$ data += "&" + URLEncoder.encode("adminfeedkey", "UTF-8") + "=" + URLEncoder.encode(adminfeedkey, "UTF-8") [FD]
Line_18 $$ if (isAdminFeedKeySet()) --> Line_20 $$ logger.debug("Using adminfeedkey to authenticate") [CD]
Line_18 $$ if (isAdminFeedKeySet()) --> Line_22 $$ Authenticator.setDefault(new CustomAuthenticator(user, password)) [CD]
Line_18 $$ if (isAdminFeedKeySet()) --> Line_23 $$ logger.debug("Using user/pwd to authenticate") [CD]
Line_27 $$ URL url = new URL(u) --> Line_28 $$ URLConnection conn = url.openConnection() [FD]
Line_28 $$ URLConnection conn = url.openConnection() --> Line_29 $$ conn.setRequestProperty("User-Agent", "TimexMercurius/" + version) [FD]
Line_28 $$ URLConnection conn = url.openConnection() --> Line_30 $$ conn.setDoOutput(true) [FD]
Line_28 $$ URLConnection conn = url.openConnection() --> Line_31 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream()) [FD]
Line_31 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream()) --> Line_32 $$ wr.write(data) [FD]
Line_16 $$ String data = URLEncoder.encode("action", "UTF-8") + "=" + URLEncoder.encode(action, "UTF-8") --> Line_32 $$ wr.write(data) [FD]
Line_17 $$ data += "&" + URLEncoder.encode("data", "UTF-8") + "=" + URLEncoder.encode(xml, "UTF-8") --> Line_32 $$ wr.write(data) [FD]
Line_19 $$ data += "&" + URLEncoder.encode("adminfeedkey", "UTF-8") + "=" + URLEncoder.encode(adminfeedkey, "UTF-8") --> Line_32 $$ wr.write(data) [FD]
Line_31 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream()) --> Line_33 $$ wr.flush() [FD]
Line_28 $$ URLConnection conn = url.openConnection() --> Line_34 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())) [FD]
Line_35 $$ String line --> Line_37 $$ while ((line = rd.readLine()) != null) [FD]
Line_34 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())) --> Line_37 $$ while ((line = rd.readLine()) != null) [FD]
Line_37 $$ while ((line = rd.readLine()) != null) --> Line_38 $$ s.append(line) [CD]
Line_37 $$ while ((line = rd.readLine()) != null) --> Line_38 $$ s.append(line) [FD]
Line_36 $$ StringBuffer s = new StringBuffer() --> Line_38 $$ s.append(line) [FD]
Line_35 $$ String line --> Line_38 $$ s.append(line) [FD]
Line_36 $$ StringBuffer s = new StringBuffer() --> Line_40 $$ if (s.length() > 0) [FD]
Line_40 $$ if (s.length() > 0) --> Line_41 $$ logger.debug(s.toString()) [CD]
Line_36 $$ StringBuffer s = new StringBuffer() --> Line_41 $$ logger.debug(s.toString()) [FD]
Line_40 $$ if (s.length() > 0) --> Line_42 $$ if (s.toString().indexOf("Result:") != -1) [CD]
Line_36 $$ StringBuffer s = new StringBuffer() --> Line_42 $$ if (s.toString().indexOf("Result:") != -1) [FD]
Line_42 $$ if (s.toString().indexOf("Result:") != -1) --> Line_43 $$ logger.info(s.toString().substring(s.toString().indexOf("Result:"))) [CD]
Line_36 $$ StringBuffer s = new StringBuffer() --> Line_43 $$ logger.info(s.toString().substring(s.toString().indexOf("Result:"))) [FD]
Line_42 $$ if (s.toString().indexOf("Result:") != -1) --> Line_44 $$ if (s.toString().indexOf("Result: Successful") != -1) [CD]
Line_36 $$ StringBuffer s = new StringBuffer() --> Line_44 $$ if (s.toString().indexOf("Result: Successful") != -1) [FD]
Line_44 $$ if (s.toString().indexOf("Result: Successful") != -1) --> Line_45 $$ timexfrmk.updateSessionsStatus() [CD]
Line_42 $$ if (s.toString().indexOf("Result:") != -1) --> Line_48 $$ logger.error(s.toString()) [CD]
Line_36 $$ StringBuffer s = new StringBuffer() --> Line_48 $$ logger.error(s.toString()) [FD]
Line_40 $$ if (s.length() > 0) --> Line_51 $$ logger.info("No data returned") [CD]
Line_31 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream()) --> Line_53 $$ wr.close() [FD]
Line_34 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())) --> Line_54 $$ rd.close() [FD]
Line_13 $$ if (timexfrmk.getSessionCount() > 0) --> Line_66 $$ logger.info("There is nothing to send.  Everything has already been synchronized") [CD]
Line_2 $$ public void run() --> Line_68 $$ timexfrmk.close() [CD]
Line_2 $$ public void run() --> Line_69 $$ logger.info("Done!!! Total Time: " + getTimeDifferent(time)) [CD]
Line_3 $$ long time = System.currentTimeMillis() --> Line_69 $$ logger.info("Done!!! Total Time: " + getTimeDifferent(time)) [FD]
