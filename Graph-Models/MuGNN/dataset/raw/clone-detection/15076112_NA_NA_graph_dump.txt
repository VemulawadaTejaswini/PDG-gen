Line_2 $$ public JSONObject getJsonObj(Trip trip, List<Waypoint> stops) throws IOException --> Line_3 $$ JSONObject jsonObject = null [CD]
Line_5 $$ List<String> filtered = new LinkedList<String>() --> Line_6 $$ filtered.add(trip.getWaypoint().getFromLocation().getCity().replaceAll("\\W+", "+")) [FD]
Line_2 $$ public JSONObject getJsonObj(Trip trip, List<Waypoint> stops) throws IOException --> Line_6 $$ filtered.add(trip.getWaypoint().getFromLocation().getCity().replaceAll("\\W+", "+")) [FD]
Line_5 $$ List<String> filtered = new LinkedList<String>() --> Line_7 $$ filtered.add(trip.getWaypoint().getToLocation().getCity().replaceAll("\\W+", "+")) [FD]
Line_2 $$ public JSONObject getJsonObj(Trip trip, List<Waypoint> stops) throws IOException --> Line_7 $$ filtered.add(trip.getWaypoint().getToLocation().getCity().replaceAll("\\W+", "+")) [FD]
Line_8 $$ for (Waypoint w : stops) --> Line_9 $$ String from = w.getFromLocation().getCity().replaceAll("\\W+", "+") [FD]
Line_5 $$ List<String> filtered = new LinkedList<String>() --> Line_10 $$ if (!filtered.contains(from)) [FD]
Line_9 $$ String from = w.getFromLocation().getCity().replaceAll("\\W+", "+") --> Line_10 $$ if (!filtered.contains(from)) [FD]
Line_8 $$ for (Waypoint w : stops) --> Line_11 $$ String to = w.getToLocation().getCity().replaceAll("\\W+", "+") [FD]
Line_5 $$ List<String> filtered = new LinkedList<String>() --> Line_12 $$ if (!filtered.contains(to)) [FD]
Line_11 $$ String to = w.getToLocation().getCity().replaceAll("\\W+", "+") --> Line_12 $$ if (!filtered.contains(to)) [FD]
Line_14 $$ StringBuilder urlBuilder = new StringBuilder() --> Line_15 $$ urlBuilder.append("http://maps.google.com/maps/api/directions/json") [FD]
Line_14 $$ StringBuilder urlBuilder = new StringBuilder() --> Line_16 $$ urlBuilder.append("?origin=").append(filtered.get(0)) [FD]
Line_5 $$ List<String> filtered = new LinkedList<String>() --> Line_16 $$ urlBuilder.append("?origin=").append(filtered.get(0)) [FD]
Line_14 $$ StringBuilder urlBuilder = new StringBuilder() --> Line_17 $$ urlBuilder.append("&destination=").append(filtered.get(1)) [FD]
Line_5 $$ List<String> filtered = new LinkedList<String>() --> Line_17 $$ urlBuilder.append("&destination=").append(filtered.get(1)) [FD]
Line_5 $$ List<String> filtered = new LinkedList<String>() --> Line_18 $$ if (filtered.size() > 2) [FD]
Line_18 $$ if (filtered.size() > 2) --> Line_19 $$ urlBuilder.append("&waypoints=") [CD]
Line_14 $$ StringBuilder urlBuilder = new StringBuilder() --> Line_19 $$ urlBuilder.append("&waypoints=") [FD]
Line_18 $$ if (filtered.size() > 2) --> Line_20 $$ for (int i = 2; i < filtered.size() - 1; i++) urlBuilder.append(filtered.get(i)).append("|") [CD]
Line_5 $$ List<String> filtered = new LinkedList<String>() --> Line_20 $$ for (int i = 2; i < filtered.size() - 1; i++) urlBuilder.append(filtered.get(i)).append("|") [FD]
Line_14 $$ StringBuilder urlBuilder = new StringBuilder() --> Line_20 $$ for (int i = 2; i < filtered.size() - 1; i++) urlBuilder.append(filtered.get(i)).append("|") [FD]
Line_18 $$ if (filtered.size() > 2) --> Line_21 $$ urlBuilder.append(filtered.get(filtered.size() - 1)) [CD]
Line_14 $$ StringBuilder urlBuilder = new StringBuilder() --> Line_21 $$ urlBuilder.append(filtered.get(filtered.size() - 1)) [FD]
Line_5 $$ List<String> filtered = new LinkedList<String>() --> Line_21 $$ urlBuilder.append(filtered.get(filtered.size() - 1)) [FD]
Line_14 $$ StringBuilder urlBuilder = new StringBuilder() --> Line_23 $$ urlBuilder.append("&sensor=false") [FD]
Line_14 $$ StringBuilder urlBuilder = new StringBuilder() --> Line_24 $$ BufferedReader in = new BufferedReader(new InputStreamReader(new URL(urlBuilder.toString()).openStream())) [FD]
Line_26 $$ String inputLine --> Line_27 $$ while ((inputLine = in.readLine()) != null) answerBuilder.append(inputLine) [FD]
Line_24 $$ BufferedReader in = new BufferedReader(new InputStreamReader(new URL(urlBuilder.toString()).openStream())) --> Line_27 $$ while ((inputLine = in.readLine()) != null) answerBuilder.append(inputLine) [FD]
Line_25 $$ StringBuilder answerBuilder = new StringBuilder() --> Line_27 $$ while ((inputLine = in.readLine()) != null) answerBuilder.append(inputLine) [FD]
Line_24 $$ BufferedReader in = new BufferedReader(new InputStreamReader(new URL(urlBuilder.toString()).openStream())) --> Line_28 $$ in.close() [FD]
Line_3 $$ JSONObject jsonObject = null --> Line_29 $$ jsonObject = new JSONObject(answerBuilder.toString()) [FD]
Line_25 $$ StringBuilder answerBuilder = new StringBuilder() --> Line_29 $$ jsonObject = new JSONObject(answerBuilder.toString()) [FD]
Line_2 $$ public JSONObject getJsonObj(Trip trip, List<Waypoint> stops) throws IOException --> Line_33 $$ return jsonObject [CD]
