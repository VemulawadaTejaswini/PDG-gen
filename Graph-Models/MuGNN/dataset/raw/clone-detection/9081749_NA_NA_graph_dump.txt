Line_2 $$ private static String encrypt(String password, String encryptType) --> Line_4 $$ MessageDigest md = MessageDigest.getInstance(encryptType) [FD]
Line_4 $$ MessageDigest md = MessageDigest.getInstance(encryptType) --> Line_5 $$ md.update(password.getBytes()) [FD]
Line_2 $$ private static String encrypt(String password, String encryptType) --> Line_5 $$ md.update(password.getBytes()) [FD]
Line_4 $$ MessageDigest md = MessageDigest.getInstance(encryptType) --> Line_6 $$ byte[] hash = md.digest() [FD]
Line_8 $$ for (int i = 0; i < hash.length; i++) --> Line_9 $$ if ((0xff & hash[i]) < 0x10) [CD]
Line_9 $$ if ((0xff & hash[i]) < 0x10) --> Line_10 $$ hexString.append("0" + Integer.toHexString((0xFF & hash[i]))) [CD]
Line_7 $$ StringBuffer hexString = new StringBuffer() --> Line_10 $$ hexString.append("0" + Integer.toHexString((0xFF & hash[i]))) [FD]
Line_9 $$ if ((0xff & hash[i]) < 0x10) --> Line_12 $$ hexString.append(Integer.toHexString(0xFF & hash[i])) [CD]
Line_7 $$ StringBuffer hexString = new StringBuffer() --> Line_12 $$ hexString.append(Integer.toHexString(0xFF & hash[i])) [FD]
Line_2 $$ private static String encrypt(String password, String encryptType) --> Line_15 $$ password = hexString.toString() [FD]
Line_7 $$ StringBuffer hexString = new StringBuffer() --> Line_15 $$ password = hexString.toString() [FD]
Line_2 $$ private static String encrypt(String password, String encryptType) --> Line_19 $$ return password.toUpperCase() [CD]
Line_2 $$ private static String encrypt(String password, String encryptType) --> Line_19 $$ return password.toUpperCase() [FD]
Line_15 $$ password = hexString.toString() --> Line_19 $$ return password.toUpperCase() [FD]
