Line_2 $$ protected <T extends AbstractResponse> T readResponse(HttpUriRequest httpUriRequest, Class<T> clazz) throws IOException, TranslatorException --> Line_3 $$ if (LOGGER.isTraceEnabled()) [CD]
Line_3 $$ if (LOGGER.isTraceEnabled()) --> Line_4 $$ LOGGER.trace("Executing request " + httpUriRequest.getURI()) [CD]
Line_2 $$ protected <T extends AbstractResponse> T readResponse(HttpUriRequest httpUriRequest, Class<T> clazz) throws IOException, TranslatorException --> Line_4 $$ LOGGER.trace("Executing request " + httpUriRequest.getURI()) [FD]
Line_2 $$ protected <T extends AbstractResponse> T readResponse(HttpUriRequest httpUriRequest, Class<T> clazz) throws IOException, TranslatorException --> Line_6 $$ HttpResponse httpResponse = httpClient.execute(httpUriRequest) [CD]
Line_2 $$ protected <T extends AbstractResponse> T readResponse(HttpUriRequest httpUriRequest, Class<T> clazz) throws IOException, TranslatorException --> Line_6 $$ HttpResponse httpResponse = httpClient.execute(httpUriRequest) [FD]
Line_2 $$ protected <T extends AbstractResponse> T readResponse(HttpUriRequest httpUriRequest, Class<T> clazz) throws IOException, TranslatorException --> Line_7 $$ String response = EntityUtils.toString(httpResponse.getEntity()) [CD]
Line_6 $$ HttpResponse httpResponse = httpClient.execute(httpUriRequest) --> Line_7 $$ String response = EntityUtils.toString(httpResponse.getEntity()) [FD]
Line_2 $$ protected <T extends AbstractResponse> T readResponse(HttpUriRequest httpUriRequest, Class<T> clazz) throws IOException, TranslatorException --> Line_8 $$ if (LOGGER.isDebugEnabled()) [CD]
Line_8 $$ if (LOGGER.isDebugEnabled()) --> Line_9 $$ LOGGER.debug("Reading '" + response + "' into " + clazz.getName()) [CD]
Line_2 $$ protected <T extends AbstractResponse> T readResponse(HttpUriRequest httpUriRequest, Class<T> clazz) throws IOException, TranslatorException --> Line_9 $$ LOGGER.debug("Reading '" + response + "' into " + clazz.getName()) [FD]
Line_2 $$ protected <T extends AbstractResponse> T readResponse(HttpUriRequest httpUriRequest, Class<T> clazz) throws IOException, TranslatorException --> Line_11 $$ T abstractResponse = TranslatorObjectMapper.instance().readValue(response, clazz) [CD]
Line_2 $$ protected <T extends AbstractResponse> T readResponse(HttpUriRequest httpUriRequest, Class<T> clazz) throws IOException, TranslatorException --> Line_11 $$ T abstractResponse = TranslatorObjectMapper.instance().readValue(response, clazz) [FD]
Line_7 $$ String response = EntityUtils.toString(httpResponse.getEntity()) --> Line_11 $$ T abstractResponse = TranslatorObjectMapper.instance().readValue(response, clazz) [FD]
Line_2 $$ protected <T extends AbstractResponse> T readResponse(HttpUriRequest httpUriRequest, Class<T> clazz) throws IOException, TranslatorException --> Line_12 $$ if (LOGGER.isTraceEnabled()) [CD]
Line_12 $$ if (LOGGER.isTraceEnabled()) --> Line_13 $$ LOGGER.trace("Response object " + abstractResponse) [CD]
Line_2 $$ protected <T extends AbstractResponse> T readResponse(HttpUriRequest httpUriRequest, Class<T> clazz) throws IOException, TranslatorException --> Line_15 $$ if (abstractResponse.getError() != null) [CD]
Line_11 $$ T abstractResponse = TranslatorObjectMapper.instance().readValue(response, clazz) --> Line_15 $$ if (abstractResponse.getError() != null) [FD]
Line_11 $$ T abstractResponse = TranslatorObjectMapper.instance().readValue(response, clazz) --> Line_16 $$ throw new TranslatorException(abstractResponse.getError()) [FD]
Line_2 $$ protected <T extends AbstractResponse> T readResponse(HttpUriRequest httpUriRequest, Class<T> clazz) throws IOException, TranslatorException --> Line_18 $$ return abstractResponse [CD]
