Line_2 $$ private void insert(Connection c) throws SQLException --> Line_3 $$ if (m_fromDb) [CD]
Line_2 $$ private void insert(Connection c) throws SQLException --> Line_4 $$ StringBuffer names = new StringBuffer("INSERT INTO ifServices (nodeID,ipAddr,serviceID") [CD]
Line_2 $$ private void insert(Connection c) throws SQLException --> Line_5 $$ StringBuffer values = new StringBuffer("?,?,?") [CD]
Line_2 $$ private void insert(Connection c) throws SQLException --> Line_6 $$ if ((m_changed & CHANGED_IFINDEX) == CHANGED_IFINDEX) [CD]
Line_6 $$ if ((m_changed & CHANGED_IFINDEX) == CHANGED_IFINDEX) --> Line_7 $$ values.append(",?") [CD]
Line_5 $$ StringBuffer values = new StringBuffer("?,?,?") --> Line_7 $$ values.append(",?") [FD]
Line_6 $$ if ((m_changed & CHANGED_IFINDEX) == CHANGED_IFINDEX) --> Line_8 $$ names.append(",ifIndex") [CD]
Line_4 $$ StringBuffer names = new StringBuffer("INSERT INTO ifServices (nodeID,ipAddr,serviceID") --> Line_8 $$ names.append(",ifIndex") [FD]
Line_2 $$ private void insert(Connection c) throws SQLException --> Line_10 $$ if ((m_changed & CHANGED_STATUS) == CHANGED_STATUS) [CD]
Line_10 $$ if ((m_changed & CHANGED_STATUS) == CHANGED_STATUS) --> Line_11 $$ values.append(",?") [CD]
Line_5 $$ StringBuffer values = new StringBuffer("?,?,?") --> Line_11 $$ values.append(",?") [FD]
Line_10 $$ if ((m_changed & CHANGED_STATUS) == CHANGED_STATUS) --> Line_12 $$ names.append(",status") [CD]
Line_4 $$ StringBuffer names = new StringBuffer("INSERT INTO ifServices (nodeID,ipAddr,serviceID") --> Line_12 $$ names.append(",status") [FD]
Line_2 $$ private void insert(Connection c) throws SQLException --> Line_14 $$ if ((m_changed & CHANGED_LASTGOOD) == CHANGED_LASTGOOD) [CD]
Line_14 $$ if ((m_changed & CHANGED_LASTGOOD) == CHANGED_LASTGOOD) --> Line_15 $$ values.append(",?") [CD]
Line_5 $$ StringBuffer values = new StringBuffer("?,?,?") --> Line_15 $$ values.append(",?") [FD]
Line_14 $$ if ((m_changed & CHANGED_LASTGOOD) == CHANGED_LASTGOOD) --> Line_16 $$ names.append(",lastGood") [CD]
Line_4 $$ StringBuffer names = new StringBuffer("INSERT INTO ifServices (nodeID,ipAddr,serviceID") --> Line_16 $$ names.append(",lastGood") [FD]
Line_2 $$ private void insert(Connection c) throws SQLException --> Line_18 $$ if ((m_changed & CHANGED_LASTFAIL) == CHANGED_LASTFAIL) [CD]
Line_18 $$ if ((m_changed & CHANGED_LASTFAIL) == CHANGED_LASTFAIL) --> Line_19 $$ values.append(",?") [CD]
Line_5 $$ StringBuffer values = new StringBuffer("?,?,?") --> Line_19 $$ values.append(",?") [FD]
Line_18 $$ if ((m_changed & CHANGED_LASTFAIL) == CHANGED_LASTFAIL) --> Line_20 $$ names.append(",lastFail") [CD]
Line_4 $$ StringBuffer names = new StringBuffer("INSERT INTO ifServices (nodeID,ipAddr,serviceID") --> Line_20 $$ names.append(",lastFail") [FD]
Line_2 $$ private void insert(Connection c) throws SQLException --> Line_22 $$ if ((m_changed & CHANGED_SOURCE) == CHANGED_SOURCE) [CD]
Line_22 $$ if ((m_changed & CHANGED_SOURCE) == CHANGED_SOURCE) --> Line_23 $$ values.append(",?") [CD]
Line_5 $$ StringBuffer values = new StringBuffer("?,?,?") --> Line_23 $$ values.append(",?") [FD]
Line_22 $$ if ((m_changed & CHANGED_SOURCE) == CHANGED_SOURCE) --> Line_24 $$ names.append(",source") [CD]
Line_4 $$ StringBuffer names = new StringBuffer("INSERT INTO ifServices (nodeID,ipAddr,serviceID") --> Line_24 $$ names.append(",source") [FD]
Line_2 $$ private void insert(Connection c) throws SQLException --> Line_26 $$ if ((m_changed & CHANGED_NOTIFY) == CHANGED_NOTIFY) [CD]
Line_26 $$ if ((m_changed & CHANGED_NOTIFY) == CHANGED_NOTIFY) --> Line_27 $$ values.append(",?") [CD]
Line_5 $$ StringBuffer values = new StringBuffer("?,?,?") --> Line_27 $$ values.append(",?") [FD]
Line_26 $$ if ((m_changed & CHANGED_NOTIFY) == CHANGED_NOTIFY) --> Line_28 $$ names.append(",notify") [CD]
Line_4 $$ StringBuffer names = new StringBuffer("INSERT INTO ifServices (nodeID,ipAddr,serviceID") --> Line_28 $$ names.append(",notify") [FD]
Line_2 $$ private void insert(Connection c) throws SQLException --> Line_30 $$ if ((m_changed & CHANGED_QUALIFIER) == CHANGED_QUALIFIER) [CD]
Line_30 $$ if ((m_changed & CHANGED_QUALIFIER) == CHANGED_QUALIFIER) --> Line_31 $$ values.append(",?") [CD]
Line_5 $$ StringBuffer values = new StringBuffer("?,?,?") --> Line_31 $$ values.append(",?") [FD]
Line_30 $$ if ((m_changed & CHANGED_QUALIFIER) == CHANGED_QUALIFIER) --> Line_32 $$ names.append(",qualifier") [CD]
Line_4 $$ StringBuffer names = new StringBuffer("INSERT INTO ifServices (nodeID,ipAddr,serviceID") --> Line_32 $$ names.append(",qualifier") [FD]
Line_2 $$ private void insert(Connection c) throws SQLException --> Line_34 $$ names.append(") VALUES (").append(values).append(')') [CD]
Line_5 $$ StringBuffer values = new StringBuffer("?,?,?") --> Line_34 $$ names.append(") VALUES (").append(values).append(')') [FD]
Line_4 $$ StringBuffer names = new StringBuffer("INSERT INTO ifServices (nodeID,ipAddr,serviceID") --> Line_34 $$ names.append(") VALUES (").append(values).append(')') [FD]
Line_2 $$ private void insert(Connection c) throws SQLException --> Line_35 $$ log().debug("DbIfServiceEntry.insert: SQL insert statment = " + names.toString()) [CD]
Line_4 $$ StringBuffer names = new StringBuffer("INSERT INTO ifServices (nodeID,ipAddr,serviceID") --> Line_35 $$ log().debug("DbIfServiceEntry.insert: SQL insert statment = " + names.toString()) [FD]
Line_2 $$ private void insert(Connection c) throws SQLException --> Line_36 $$ PreparedStatement stmt = null [CD]
Line_2 $$ private void insert(Connection c) throws SQLException --> Line_37 $$ PreparedStatement delStmt = null [CD]
Line_2 $$ private void insert(Connection c) throws SQLException --> Line_38 $$ final DBUtils d = new DBUtils(getClass()) [CD]
Line_36 $$ PreparedStatement stmt = null --> Line_40 $$ stmt = c.prepareStatement(names.toString()) [FD]
Line_2 $$ private void insert(Connection c) throws SQLException --> Line_40 $$ stmt = c.prepareStatement(names.toString()) [FD]
Line_4 $$ StringBuffer names = new StringBuffer("INSERT INTO ifServices (nodeID,ipAddr,serviceID") --> Line_40 $$ stmt = c.prepareStatement(names.toString()) [FD]
Line_38 $$ final DBUtils d = new DBUtils(getClass()) --> Line_41 $$ d.watch(stmt) [FD]
Line_36 $$ PreparedStatement stmt = null --> Line_41 $$ d.watch(stmt) [FD]
Line_40 $$ stmt = c.prepareStatement(names.toString()) --> Line_41 $$ d.watch(stmt) [FD]
Line_4 $$ StringBuffer names = new StringBuffer("INSERT INTO ifServices (nodeID,ipAddr,serviceID") --> Line_42 $$ names = null [FD]
Line_36 $$ PreparedStatement stmt = null --> Line_44 $$ stmt.setInt(ndx++, m_nodeId) [FD]
Line_40 $$ stmt = c.prepareStatement(names.toString()) --> Line_44 $$ stmt.setInt(ndx++, m_nodeId) [FD]
Line_43 $$ int ndx = 1 --> Line_44 $$ stmt.setInt(ndx++, m_nodeId) [FD]
Line_36 $$ PreparedStatement stmt = null --> Line_45 $$ stmt.setString(ndx++, m_ipAddr.getHostAddress()) [FD]
Line_40 $$ stmt = c.prepareStatement(names.toString()) --> Line_45 $$ stmt.setString(ndx++, m_ipAddr.getHostAddress()) [FD]
Line_43 $$ int ndx = 1 --> Line_45 $$ stmt.setString(ndx++, m_ipAddr.getHostAddress()) [FD]
Line_36 $$ PreparedStatement stmt = null --> Line_46 $$ stmt.setInt(ndx++, m_serviceId) [FD]
Line_40 $$ stmt = c.prepareStatement(names.toString()) --> Line_46 $$ stmt.setInt(ndx++, m_serviceId) [FD]
Line_43 $$ int ndx = 1 --> Line_46 $$ stmt.setInt(ndx++, m_serviceId) [FD]
Line_36 $$ PreparedStatement stmt = null --> Line_47 $$ if ((m_changed & CHANGED_IFINDEX) == CHANGED_IFINDEX) [FD]
Line_40 $$ stmt = c.prepareStatement(names.toString()) --> Line_47 $$ if ((m_changed & CHANGED_IFINDEX) == CHANGED_IFINDEX) [FD]
Line_43 $$ int ndx = 1 --> Line_47 $$ if ((m_changed & CHANGED_IFINDEX) == CHANGED_IFINDEX) [FD]
Line_36 $$ PreparedStatement stmt = null --> Line_48 $$ if ((m_changed & CHANGED_STATUS) == CHANGED_STATUS) [FD]
Line_40 $$ stmt = c.prepareStatement(names.toString()) --> Line_48 $$ if ((m_changed & CHANGED_STATUS) == CHANGED_STATUS) [FD]
Line_43 $$ int ndx = 1 --> Line_48 $$ if ((m_changed & CHANGED_STATUS) == CHANGED_STATUS) [FD]
Line_49 $$ if ((m_changed & CHANGED_LASTGOOD) == CHANGED_LASTGOOD) --> Line_50 $$ stmt.setTimestamp(ndx++, m_lastGood) [CD]
Line_36 $$ PreparedStatement stmt = null --> Line_50 $$ stmt.setTimestamp(ndx++, m_lastGood) [FD]
Line_40 $$ stmt = c.prepareStatement(names.toString()) --> Line_50 $$ stmt.setTimestamp(ndx++, m_lastGood) [FD]
Line_43 $$ int ndx = 1 --> Line_50 $$ stmt.setTimestamp(ndx++, m_lastGood) [FD]
Line_52 $$ if ((m_changed & CHANGED_LASTFAIL) == CHANGED_LASTFAIL) --> Line_53 $$ stmt.setTimestamp(ndx++, m_lastFail) [CD]
Line_36 $$ PreparedStatement stmt = null --> Line_53 $$ stmt.setTimestamp(ndx++, m_lastFail) [FD]
Line_40 $$ stmt = c.prepareStatement(names.toString()) --> Line_53 $$ stmt.setTimestamp(ndx++, m_lastFail) [FD]
Line_43 $$ int ndx = 1 --> Line_53 $$ stmt.setTimestamp(ndx++, m_lastFail) [FD]
Line_36 $$ PreparedStatement stmt = null --> Line_55 $$ if ((m_changed & CHANGED_SOURCE) == CHANGED_SOURCE) [FD]
Line_40 $$ stmt = c.prepareStatement(names.toString()) --> Line_55 $$ if ((m_changed & CHANGED_SOURCE) == CHANGED_SOURCE) [FD]
Line_43 $$ int ndx = 1 --> Line_55 $$ if ((m_changed & CHANGED_SOURCE) == CHANGED_SOURCE) [FD]
Line_36 $$ PreparedStatement stmt = null --> Line_56 $$ if ((m_changed & CHANGED_NOTIFY) == CHANGED_NOTIFY) [FD]
Line_40 $$ stmt = c.prepareStatement(names.toString()) --> Line_56 $$ if ((m_changed & CHANGED_NOTIFY) == CHANGED_NOTIFY) [FD]
Line_43 $$ int ndx = 1 --> Line_56 $$ if ((m_changed & CHANGED_NOTIFY) == CHANGED_NOTIFY) [FD]
Line_36 $$ PreparedStatement stmt = null --> Line_57 $$ if ((m_changed & CHANGED_QUALIFIER) == CHANGED_QUALIFIER) [FD]
Line_40 $$ stmt = c.prepareStatement(names.toString()) --> Line_57 $$ if ((m_changed & CHANGED_QUALIFIER) == CHANGED_QUALIFIER) [FD]
Line_43 $$ int ndx = 1 --> Line_57 $$ if ((m_changed & CHANGED_QUALIFIER) == CHANGED_QUALIFIER) [FD]
Line_58 $$ int rc --> Line_60 $$ rc = stmt.executeUpdate() [FD]
Line_36 $$ PreparedStatement stmt = null --> Line_60 $$ rc = stmt.executeUpdate() [FD]
Line_40 $$ stmt = c.prepareStatement(names.toString()) --> Line_60 $$ rc = stmt.executeUpdate() [FD]
Line_2 $$ private void insert(Connection c) throws SQLException --> Line_63 $$ c.rollback() [FD]
Line_37 $$ PreparedStatement delStmt = null --> Line_65 $$ delStmt = c.prepareStatement(delCmd) [FD]
Line_2 $$ private void insert(Connection c) throws SQLException --> Line_65 $$ delStmt = c.prepareStatement(delCmd) [FD]
Line_64 $$ String delCmd = "DELETE FROM ifServices WHERE status = 'D' " + "AND nodeid = ? AND ipAddr = ? AND serviceID = ?" --> Line_65 $$ delStmt = c.prepareStatement(delCmd) [FD]
Line_38 $$ final DBUtils d = new DBUtils(getClass()) --> Line_66 $$ d.watch(delStmt) [FD]
Line_37 $$ PreparedStatement delStmt = null --> Line_66 $$ d.watch(delStmt) [FD]
Line_65 $$ delStmt = c.prepareStatement(delCmd) --> Line_66 $$ d.watch(delStmt) [FD]
Line_37 $$ PreparedStatement delStmt = null --> Line_67 $$ delStmt.setInt(1, m_nodeId) [FD]
Line_65 $$ delStmt = c.prepareStatement(delCmd) --> Line_67 $$ delStmt.setInt(1, m_nodeId) [FD]
Line_37 $$ PreparedStatement delStmt = null --> Line_68 $$ delStmt.setString(2, m_ipAddr.getHostAddress()) [FD]
Line_65 $$ delStmt = c.prepareStatement(delCmd) --> Line_68 $$ delStmt.setString(2, m_ipAddr.getHostAddress()) [FD]
Line_37 $$ PreparedStatement delStmt = null --> Line_69 $$ delStmt.setInt(3, m_serviceId) [FD]
Line_65 $$ delStmt = c.prepareStatement(delCmd) --> Line_69 $$ delStmt.setInt(3, m_serviceId) [FD]
Line_58 $$ int rc --> Line_70 $$ rc = delStmt.executeUpdate() [FD]
Line_60 $$ rc = stmt.executeUpdate() --> Line_70 $$ rc = delStmt.executeUpdate() [FD]
Line_37 $$ PreparedStatement delStmt = null --> Line_70 $$ rc = delStmt.executeUpdate() [FD]
Line_65 $$ delStmt = c.prepareStatement(delCmd) --> Line_70 $$ rc = delStmt.executeUpdate() [FD]
Line_58 $$ int rc --> Line_71 $$ rc = stmt.executeUpdate() [FD]
Line_60 $$ rc = stmt.executeUpdate() --> Line_71 $$ rc = stmt.executeUpdate() [FD]
Line_70 $$ rc = delStmt.executeUpdate() --> Line_71 $$ rc = stmt.executeUpdate() [FD]
Line_36 $$ PreparedStatement stmt = null --> Line_71 $$ rc = stmt.executeUpdate() [FD]
Line_40 $$ stmt = c.prepareStatement(names.toString()) --> Line_71 $$ rc = stmt.executeUpdate() [FD]
Line_38 $$ final DBUtils d = new DBUtils(getClass()) --> Line_75 $$ d.cleanUp() [FD]
