Line_2 $$ public static void save(String packageName, ArrayList<byte[]> fileContents, ArrayList<String> fileNames) throws Exception --> Line_3 $$ String dirBase = Util.JAVA_DIR + File.separator + packageName [CD]
Line_2 $$ public static void save(String packageName, ArrayList<byte[]> fileContents, ArrayList<String> fileNames) throws Exception --> Line_4 $$ File packageDir = new File(dirBase) [CD]
Line_2 $$ public static void save(String packageName, ArrayList<byte[]> fileContents, ArrayList<String> fileNames) throws Exception --> Line_5 $$ if (!packageDir.exists()) [CD]
Line_4 $$ File packageDir = new File(dirBase) --> Line_5 $$ if (!packageDir.exists()) [FD]
Line_5 $$ if (!packageDir.exists()) --> Line_6 $$ boolean created = packageDir.mkdir() [CD]
Line_4 $$ File packageDir = new File(dirBase) --> Line_6 $$ boolean created = packageDir.mkdir() [FD]
Line_5 $$ if (!packageDir.exists()) --> Line_7 $$ if (!created) [CD]
Line_6 $$ boolean created = packageDir.mkdir() --> Line_7 $$ if (!created) [FD]
Line_7 $$ if (!created) --> Line_8 $$ File currentPath = new File(".") [CD]
Line_8 $$ File currentPath = new File(".") --> Line_9 $$ throw new Exception("Directory " + packageName + " could not be created. Current directory: " + currentPath.getAbsolutePath()) [FD]
Line_2 $$ public static void save(String packageName, ArrayList<byte[]> fileContents, ArrayList<String> fileNames) throws Exception --> Line_12 $$ for (int i = 0; i < fileContents.size(); i++) [CD]
Line_2 $$ public static void save(String packageName, ArrayList<byte[]> fileContents, ArrayList<String> fileNames) throws Exception --> Line_12 $$ for (int i = 0; i < fileContents.size(); i++) [FD]
Line_12 $$ for (int i = 0; i < fileContents.size(); i++) --> Line_13 $$ File file = new File(Util.JAVA_DIR + File.separator + fileNames.get(i)) [CD]
Line_12 $$ for (int i = 0; i < fileContents.size(); i++) --> Line_13 $$ File file = new File(Util.JAVA_DIR + File.separator + fileNames.get(i)) [FD]
Line_2 $$ public static void save(String packageName, ArrayList<byte[]> fileContents, ArrayList<String> fileNames) throws Exception --> Line_13 $$ File file = new File(Util.JAVA_DIR + File.separator + fileNames.get(i)) [FD]
Line_12 $$ for (int i = 0; i < fileContents.size(); i++) --> Line_14 $$ FileOutputStream fos = new FileOutputStream(file) [CD]
Line_12 $$ for (int i = 0; i < fileContents.size(); i++) --> Line_15 $$ fos.write(fileContents.get(i)) [CD]
Line_12 $$ for (int i = 0; i < fileContents.size(); i++) --> Line_15 $$ fos.write(fileContents.get(i)) [FD]
Line_14 $$ FileOutputStream fos = new FileOutputStream(file) --> Line_15 $$ fos.write(fileContents.get(i)) [FD]
Line_2 $$ public static void save(String packageName, ArrayList<byte[]> fileContents, ArrayList<String> fileNames) throws Exception --> Line_15 $$ fos.write(fileContents.get(i)) [FD]
Line_12 $$ for (int i = 0; i < fileContents.size(); i++) --> Line_16 $$ fos.flush() [CD]
Line_14 $$ FileOutputStream fos = new FileOutputStream(file) --> Line_16 $$ fos.flush() [FD]
Line_12 $$ for (int i = 0; i < fileContents.size(); i++) --> Line_17 $$ fos.close() [CD]
Line_14 $$ FileOutputStream fos = new FileOutputStream(file) --> Line_17 $$ fos.close() [FD]
Line_2 $$ public static void save(String packageName, ArrayList<byte[]> fileContents, ArrayList<String> fileNames) throws Exception --> Line_19 $$ for (int i = 0; i < fileNames.size(); i++) [CD]
Line_2 $$ public static void save(String packageName, ArrayList<byte[]> fileContents, ArrayList<String> fileNames) throws Exception --> Line_19 $$ for (int i = 0; i < fileNames.size(); i++) [FD]
Line_12 $$ for (int i = 0; i < fileContents.size(); i++) --> Line_19 $$ for (int i = 0; i < fileNames.size(); i++) [FD]
Line_19 $$ for (int i = 0; i < fileNames.size(); i++) --> Line_20 $$ File fileSrc = new File(Util.JAVA_DIR + File.separator + fileNames.get(i)) [CD]
Line_19 $$ for (int i = 0; i < fileNames.size(); i++) --> Line_20 $$ File fileSrc = new File(Util.JAVA_DIR + File.separator + fileNames.get(i)) [FD]
Line_2 $$ public static void save(String packageName, ArrayList<byte[]> fileContents, ArrayList<String> fileNames) throws Exception --> Line_20 $$ File fileSrc = new File(Util.JAVA_DIR + File.separator + fileNames.get(i)) [FD]
Line_12 $$ for (int i = 0; i < fileContents.size(); i++) --> Line_20 $$ File fileSrc = new File(Util.JAVA_DIR + File.separator + fileNames.get(i)) [FD]
Line_19 $$ for (int i = 0; i < fileNames.size(); i++) --> Line_21 $$ File fileDst = new File(dirBase + File.separator + fileNames.get(i)) [CD]
Line_19 $$ for (int i = 0; i < fileNames.size(); i++) --> Line_21 $$ File fileDst = new File(dirBase + File.separator + fileNames.get(i)) [FD]
Line_2 $$ public static void save(String packageName, ArrayList<byte[]> fileContents, ArrayList<String> fileNames) throws Exception --> Line_21 $$ File fileDst = new File(dirBase + File.separator + fileNames.get(i)) [FD]
Line_12 $$ for (int i = 0; i < fileContents.size(); i++) --> Line_21 $$ File fileDst = new File(dirBase + File.separator + fileNames.get(i)) [FD]
Line_19 $$ for (int i = 0; i < fileNames.size(); i++) --> Line_22 $$ BufferedReader reader = new BufferedReader(new FileReader(fileSrc)) [CD]
Line_19 $$ for (int i = 0; i < fileNames.size(); i++) --> Line_23 $$ BufferedWriter writer = new BufferedWriter(new FileWriter(fileDst)) [CD]
Line_19 $$ for (int i = 0; i < fileNames.size(); i++) --> Line_24 $$ writer.append("package " + packageName + ";\n") [CD]
Line_23 $$ BufferedWriter writer = new BufferedWriter(new FileWriter(fileDst)) --> Line_24 $$ writer.append("package " + packageName + ";\n") [FD]
Line_19 $$ for (int i = 0; i < fileNames.size(); i++) --> Line_25 $$ String line = "" [CD]
Line_19 $$ for (int i = 0; i < fileNames.size(); i++) --> Line_26 $$ while ((line = reader.readLine()) != null) writer.append(line + "\n") [CD]
Line_25 $$ String line = "" --> Line_26 $$ while ((line = reader.readLine()) != null) writer.append(line + "\n") [FD]
Line_22 $$ BufferedReader reader = new BufferedReader(new FileReader(fileSrc)) --> Line_26 $$ while ((line = reader.readLine()) != null) writer.append(line + "\n") [FD]
Line_23 $$ BufferedWriter writer = new BufferedWriter(new FileWriter(fileDst)) --> Line_26 $$ while ((line = reader.readLine()) != null) writer.append(line + "\n") [FD]
Line_19 $$ for (int i = 0; i < fileNames.size(); i++) --> Line_27 $$ writer.flush() [CD]
Line_23 $$ BufferedWriter writer = new BufferedWriter(new FileWriter(fileDst)) --> Line_27 $$ writer.flush() [FD]
Line_19 $$ for (int i = 0; i < fileNames.size(); i++) --> Line_28 $$ writer.close() [CD]
Line_23 $$ BufferedWriter writer = new BufferedWriter(new FileWriter(fileDst)) --> Line_28 $$ writer.close() [FD]
Line_19 $$ for (int i = 0; i < fileNames.size(); i++) --> Line_29 $$ reader.close() [CD]
Line_22 $$ BufferedReader reader = new BufferedReader(new FileReader(fileSrc)) --> Line_29 $$ reader.close() [FD]
