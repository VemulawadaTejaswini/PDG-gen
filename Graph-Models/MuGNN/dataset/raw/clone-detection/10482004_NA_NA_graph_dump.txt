Line_2 $$ public static void main(String[] args) throws IOException --> Line_3 $$ System.out.println("Start filtering zgps...") [CD]
Line_2 $$ public static void main(String[] args) throws IOException --> Line_4 $$ final Config config = ConfigUtils.loadConfig(args[0]) [CD]
Line_2 $$ public static void main(String[] args) throws IOException --> Line_5 $$ final String CONFIG_MODULE = "GPSFilterZGPS" [CD]
Line_2 $$ public static void main(String[] args) throws IOException --> Line_6 $$ File sourceFileSelectedStages = new File(config.findParam(CONFIG_MODULE, "sourceFileSelectedStages")) [CD]
Line_4 $$ final Config config = ConfigUtils.loadConfig(args[0]) --> Line_6 $$ File sourceFileSelectedStages = new File(config.findParam(CONFIG_MODULE, "sourceFileSelectedStages")) [FD]
Line_5 $$ final String CONFIG_MODULE = "GPSFilterZGPS" --> Line_6 $$ File sourceFileSelectedStages = new File(config.findParam(CONFIG_MODULE, "sourceFileSelectedStages")) [FD]
Line_2 $$ public static void main(String[] args) throws IOException --> Line_7 $$ File sourceFileZGPS = new File(config.findParam(CONFIG_MODULE, "sourceFileZGPS")) [CD]
Line_4 $$ final Config config = ConfigUtils.loadConfig(args[0]) --> Line_7 $$ File sourceFileZGPS = new File(config.findParam(CONFIG_MODULE, "sourceFileZGPS")) [FD]
Line_5 $$ final String CONFIG_MODULE = "GPSFilterZGPS" --> Line_7 $$ File sourceFileZGPS = new File(config.findParam(CONFIG_MODULE, "sourceFileZGPS")) [FD]
Line_2 $$ public static void main(String[] args) throws IOException --> Line_8 $$ File targetFile = new File(config.findParam(CONFIG_MODULE, "targetFile")) [CD]
Line_4 $$ final Config config = ConfigUtils.loadConfig(args[0]) --> Line_8 $$ File targetFile = new File(config.findParam(CONFIG_MODULE, "targetFile")) [FD]
Line_5 $$ final String CONFIG_MODULE = "GPSFilterZGPS" --> Line_8 $$ File targetFile = new File(config.findParam(CONFIG_MODULE, "targetFile")) [FD]
Line_2 $$ public static void main(String[] args) throws IOException --> Line_9 $$ System.out.println("Start reading selected stages...") [CD]
Line_2 $$ public static void main(String[] args) throws IOException --> Line_10 $$ FilterZGPSSelectedStages selectedStages = new FilterZGPSSelectedStages() [CD]
Line_2 $$ public static void main(String[] args) throws IOException --> Line_11 $$ selectedStages.createSelectedStages(sourceFileSelectedStages) [CD]
Line_10 $$ FilterZGPSSelectedStages selectedStages = new FilterZGPSSelectedStages() --> Line_11 $$ selectedStages.createSelectedStages(sourceFileSelectedStages) [FD]
Line_6 $$ File sourceFileSelectedStages = new File(config.findParam(CONFIG_MODULE, "sourceFileSelectedStages")) --> Line_11 $$ selectedStages.createSelectedStages(sourceFileSelectedStages) [FD]
Line_2 $$ public static void main(String[] args) throws IOException --> Line_12 $$ System.out.println("Done. " + selectedStages.getSelectedStages().size() + " stages were stored") [CD]
Line_10 $$ FilterZGPSSelectedStages selectedStages = new FilterZGPSSelectedStages() --> Line_12 $$ System.out.println("Done. " + selectedStages.getSelectedStages().size() + " stages were stored") [FD]
Line_2 $$ public static void main(String[] args) throws IOException --> Line_13 $$ System.out.println("Start reading and writing zgps...") [CD]
Line_16 $$ BufferedWriter out = new BufferedWriter(new FileWriter(targetFile)) --> Line_17 $$ out.write(in.readLine()) [FD]
Line_15 $$ BufferedReader in = new BufferedReader(new InputStreamReader(new FileInputStream(sourceFileZGPS))) --> Line_17 $$ out.write(in.readLine()) [FD]
Line_16 $$ BufferedWriter out = new BufferedWriter(new FileWriter(targetFile)) --> Line_18 $$ out.newLine() [FD]
Line_19 $$ String lineFromInputFile --> Line_20 $$ while ((lineFromInputFile = in.readLine()) != null) [FD]
Line_15 $$ BufferedReader in = new BufferedReader(new InputStreamReader(new FileInputStream(sourceFileZGPS))) --> Line_20 $$ while ((lineFromInputFile = in.readLine()) != null) [FD]
Line_20 $$ while ((lineFromInputFile = in.readLine()) != null) --> Line_21 $$ String[] entries = lineFromInputFile.split("\t") [CD]
Line_20 $$ while ((lineFromInputFile = in.readLine()) != null) --> Line_21 $$ String[] entries = lineFromInputFile.split("\t") [FD]
Line_19 $$ String lineFromInputFile --> Line_21 $$ String[] entries = lineFromInputFile.split("\t") [FD]
Line_20 $$ while ((lineFromInputFile = in.readLine()) != null) --> Line_22 $$ if (selectedStages.containsStage(Integer.parseInt(entries[0]), Integer.parseInt(entries[1]), Integer.parseInt(entries[2]))) [CD]
Line_10 $$ FilterZGPSSelectedStages selectedStages = new FilterZGPSSelectedStages() --> Line_22 $$ if (selectedStages.containsStage(Integer.parseInt(entries[0]), Integer.parseInt(entries[1]), Integer.parseInt(entries[2]))) [FD]
Line_22 $$ if (selectedStages.containsStage(Integer.parseInt(entries[0]), Integer.parseInt(entries[1]), Integer.parseInt(entries[2]))) --> Line_23 $$ out.write(lineFromInputFile) [CD]
Line_16 $$ BufferedWriter out = new BufferedWriter(new FileWriter(targetFile)) --> Line_23 $$ out.write(lineFromInputFile) [FD]
Line_20 $$ while ((lineFromInputFile = in.readLine()) != null) --> Line_23 $$ out.write(lineFromInputFile) [FD]
Line_19 $$ String lineFromInputFile --> Line_23 $$ out.write(lineFromInputFile) [FD]
Line_22 $$ if (selectedStages.containsStage(Integer.parseInt(entries[0]), Integer.parseInt(entries[1]), Integer.parseInt(entries[2]))) --> Line_24 $$ out.newLine() [CD]
Line_16 $$ BufferedWriter out = new BufferedWriter(new FileWriter(targetFile)) --> Line_24 $$ out.newLine() [FD]
Line_22 $$ if (selectedStages.containsStage(Integer.parseInt(entries[0]), Integer.parseInt(entries[1]), Integer.parseInt(entries[2]))) --> Line_25 $$ out.flush() [CD]
Line_16 $$ BufferedWriter out = new BufferedWriter(new FileWriter(targetFile)) --> Line_25 $$ out.flush() [FD]
Line_15 $$ BufferedReader in = new BufferedReader(new InputStreamReader(new FileInputStream(sourceFileZGPS))) --> Line_28 $$ in.close() [FD]
Line_16 $$ BufferedWriter out = new BufferedWriter(new FileWriter(targetFile)) --> Line_29 $$ out.close() [FD]
Line_2 $$ public static void main(String[] args) throws IOException --> Line_37 $$ System.out.println("Done.") [CD]
