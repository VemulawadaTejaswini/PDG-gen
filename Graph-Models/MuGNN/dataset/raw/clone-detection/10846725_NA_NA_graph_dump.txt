Line_2 $$ private DataFileType[] getDataFiles(Collection<ContentToSend> contentsToSend) --> Line_3 $$ DataFileType[] files = new DataFileType[contentsToSend.size()] [CD]
Line_2 $$ private DataFileType[] getDataFiles(Collection<ContentToSend> contentsToSend) --> Line_3 $$ DataFileType[] files = new DataFileType[contentsToSend.size()] [FD]
Line_2 $$ private DataFileType[] getDataFiles(Collection<ContentToSend> contentsToSend) --> Line_4 $$ int fileIndex = 0 [CD]
Line_6 $$ DataFileType dataFile = DataFileType.Factory.newInstance() --> Line_7 $$ dataFile.setFilename(contentToSend.getFileName()) [FD]
Line_5 $$ for (ContentToSend contentToSend : contentsToSend) --> Line_7 $$ dataFile.setFilename(contentToSend.getFileName()) [FD]
Line_6 $$ DataFileType dataFile = DataFileType.Factory.newInstance() --> Line_8 $$ dataFile.setId("D" + fileIndex) [FD]
Line_6 $$ DataFileType dataFile = DataFileType.Factory.newInstance() --> Line_9 $$ dataFile.setMimeType(contentToSend.getMimeType()) [FD]
Line_5 $$ for (ContentToSend contentToSend : contentsToSend) --> Line_9 $$ dataFile.setMimeType(contentToSend.getMimeType()) [FD]
Line_6 $$ DataFileType dataFile = DataFileType.Factory.newInstance() --> Line_10 $$ dataFile.setContentType(DataFileType.ContentType.EMBEDDED_BASE_64) [FD]
Line_11 $$ final StringWriter stringWriter = new StringWriter() --> Line_12 $$ final OutputStream encodeStream = Base64.newEncoder(stringWriter, 0, null) [FD]
Line_5 $$ for (ContentToSend contentToSend : contentsToSend) --> Line_13 $$ final InputStream is = contentToSend.getInputStream() [FD]
Line_13 $$ final InputStream is = contentToSend.getInputStream() --> Line_15 $$ long sizeCopied = IOUtils.copyLarge(is, encodeStream) [FD]
Line_12 $$ final OutputStream encodeStream = Base64.newEncoder(stringWriter, 0, null) --> Line_15 $$ long sizeCopied = IOUtils.copyLarge(is, encodeStream) [FD]
Line_6 $$ DataFileType dataFile = DataFileType.Factory.newInstance() --> Line_16 $$ dataFile.setSize(BigDecimal.valueOf(sizeCopied)) [FD]
Line_15 $$ long sizeCopied = IOUtils.copyLarge(is, encodeStream) --> Line_16 $$ dataFile.setSize(BigDecimal.valueOf(sizeCopied)) [FD]
Line_12 $$ final OutputStream encodeStream = Base64.newEncoder(stringWriter, 0, null) --> Line_20 $$ IOUtils.closeQuietly(encodeStream) [FD]
Line_13 $$ final InputStream is = contentToSend.getInputStream() --> Line_21 $$ IOUtils.closeQuietly(is) [FD]
Line_6 $$ DataFileType dataFile = DataFileType.Factory.newInstance() --> Line_23 $$ dataFile.setStringValue(stringWriter.toString()) [FD]
Line_11 $$ final StringWriter stringWriter = new StringWriter() --> Line_23 $$ dataFile.setStringValue(stringWriter.toString()) [FD]
Line_6 $$ DataFileType dataFile = DataFileType.Factory.newInstance() --> Line_24 $$ files[fileIndex++] = dataFile [FD]
Line_4 $$ int fileIndex = 0 --> Line_24 $$ files[fileIndex++] = dataFile [FD]
Line_2 $$ private DataFileType[] getDataFiles(Collection<ContentToSend> contentsToSend) --> Line_26 $$ return files [CD]
