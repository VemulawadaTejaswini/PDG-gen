Line_2 $$ public JSONObject runCommand(JSONObject payload, HttpSession session) throws DefinedException --> Line_3 $$ String sessionId = session.getId() [CD]
Line_2 $$ public JSONObject runCommand(JSONObject payload, HttpSession session) throws DefinedException --> Line_3 $$ String sessionId = session.getId() [FD]
Line_2 $$ public JSONObject runCommand(JSONObject payload, HttpSession session) throws DefinedException --> Line_4 $$ log.debug("Login -> runCommand SID: " + sessionId) [CD]
Line_2 $$ public JSONObject runCommand(JSONObject payload, HttpSession session) throws DefinedException --> Line_5 $$ JSONObject toReturn = new JSONObject() [CD]
Line_2 $$ public JSONObject runCommand(JSONObject payload, HttpSession session) throws DefinedException --> Line_6 $$ boolean isOK = true [CD]
Line_2 $$ public JSONObject runCommand(JSONObject payload, HttpSession session) throws DefinedException --> Line_7 $$ String username = null [CD]
Line_7 $$ String username = null --> Line_9 $$ username = payload.getString(ComConstants.LogIn.Request.USERNAME) [FD]
Line_2 $$ public JSONObject runCommand(JSONObject payload, HttpSession session) throws DefinedException --> Line_9 $$ username = payload.getString(ComConstants.LogIn.Request.USERNAME) [FD]
Line_2 $$ public JSONObject runCommand(JSONObject payload, HttpSession session) throws DefinedException --> Line_14 $$ String password = null [CD]
Line_2 $$ public JSONObject runCommand(JSONObject payload, HttpSession session) throws DefinedException --> Line_15 $$ if (isOK) [CD]
Line_14 $$ String password = null --> Line_17 $$ password = payload.getString(ComConstants.LogIn.Request.PASSWORD) [FD]
Line_2 $$ public JSONObject runCommand(JSONObject payload, HttpSession session) throws DefinedException --> Line_17 $$ password = payload.getString(ComConstants.LogIn.Request.PASSWORD) [FD]
Line_2 $$ public JSONObject runCommand(JSONObject payload, HttpSession session) throws DefinedException --> Line_23 $$ if (isOK) [CD]
Line_23 $$ if (isOK) --> Line_24 $$ MessageDigest m = null [CD]
Line_24 $$ MessageDigest m = null --> Line_26 $$ m = MessageDigest.getInstance("MD5") [FD]
Line_23 $$ if (isOK) --> Line_32 $$ m.update(password.getBytes(), 0, password.length()) [CD]
Line_24 $$ MessageDigest m = null --> Line_32 $$ m.update(password.getBytes(), 0, password.length()) [FD]
Line_26 $$ m = MessageDigest.getInstance("MD5") --> Line_32 $$ m.update(password.getBytes(), 0, password.length()) [FD]
Line_14 $$ String password = null --> Line_32 $$ m.update(password.getBytes(), 0, password.length()) [FD]
Line_17 $$ password = payload.getString(ComConstants.LogIn.Request.PASSWORD) --> Line_32 $$ m.update(password.getBytes(), 0, password.length()) [FD]
Line_23 $$ if (isOK) --> Line_33 $$ password = new BigInteger(1, m.digest()).toString(16) [CD]
Line_14 $$ String password = null --> Line_33 $$ password = new BigInteger(1, m.digest()).toString(16) [FD]
Line_17 $$ password = payload.getString(ComConstants.LogIn.Request.PASSWORD) --> Line_33 $$ password = new BigInteger(1, m.digest()).toString(16) [FD]
Line_24 $$ MessageDigest m = null --> Line_33 $$ password = new BigInteger(1, m.digest()).toString(16) [FD]
Line_26 $$ m = MessageDigest.getInstance("MD5") --> Line_33 $$ password = new BigInteger(1, m.digest()).toString(16) [FD]
Line_23 $$ if (isOK) --> Line_34 $$ UserSession userSession = pli.login(username, password) [CD]
Line_7 $$ String username = null --> Line_34 $$ UserSession userSession = pli.login(username, password) [FD]
Line_9 $$ username = payload.getString(ComConstants.LogIn.Request.USERNAME) --> Line_34 $$ UserSession userSession = pli.login(username, password) [FD]
Line_14 $$ String password = null --> Line_34 $$ UserSession userSession = pli.login(username, password) [FD]
Line_17 $$ password = payload.getString(ComConstants.LogIn.Request.PASSWORD) --> Line_34 $$ UserSession userSession = pli.login(username, password) [FD]
Line_33 $$ password = new BigInteger(1, m.digest()).toString(16) --> Line_34 $$ UserSession userSession = pli.login(username, password) [FD]
Line_34 $$ UserSession userSession = pli.login(username, password) --> Line_36 $$ if (userSession != null) [FD]
Line_36 $$ if (userSession != null) --> Line_37 $$ session.setAttribute("user", userSession) [CD]
Line_2 $$ public JSONObject runCommand(JSONObject payload, HttpSession session) throws DefinedException --> Line_37 $$ session.setAttribute("user", userSession) [FD]
Line_34 $$ UserSession userSession = pli.login(username, password) --> Line_37 $$ session.setAttribute("user", userSession) [FD]
Line_36 $$ if (userSession != null) --> Line_38 $$ toReturn.put(ComConstants.Response.STATUS_CODE, StatusCodesV2.LOGIN_OK.getStatusCode()) [CD]
Line_5 $$ JSONObject toReturn = new JSONObject() --> Line_38 $$ toReturn.put(ComConstants.Response.STATUS_CODE, StatusCodesV2.LOGIN_OK.getStatusCode()) [FD]
Line_36 $$ if (userSession != null) --> Line_39 $$ toReturn.put(ComConstants.Response.STATUS_MESSAGE, StatusCodesV2.LOGIN_OK.getStatusMessage()) [CD]
Line_5 $$ JSONObject toReturn = new JSONObject() --> Line_39 $$ toReturn.put(ComConstants.Response.STATUS_MESSAGE, StatusCodesV2.LOGIN_OK.getStatusMessage()) [FD]
Line_36 $$ if (userSession != null) --> Line_41 $$ log.error("SessionId=" + sessionId + ", Login failed: username=" + username + " not found") [CD]
Line_36 $$ if (userSession != null) --> Line_42 $$ toReturn.put(ComConstants.Response.STATUS_CODE, StatusCodesV2.LOGIN_USER_OR_PASSWORD_INCORRECT.getStatusCode()) [CD]
Line_5 $$ JSONObject toReturn = new JSONObject() --> Line_42 $$ toReturn.put(ComConstants.Response.STATUS_CODE, StatusCodesV2.LOGIN_USER_OR_PASSWORD_INCORRECT.getStatusCode()) [FD]
Line_36 $$ if (userSession != null) --> Line_43 $$ toReturn.put(ComConstants.Response.STATUS_MESSAGE, StatusCodesV2.LOGIN_USER_OR_PASSWORD_INCORRECT.getStatusMessage()) [CD]
Line_5 $$ JSONObject toReturn = new JSONObject() --> Line_43 $$ toReturn.put(ComConstants.Response.STATUS_MESSAGE, StatusCodesV2.LOGIN_USER_OR_PASSWORD_INCORRECT.getStatusMessage()) [FD]
Line_2 $$ public JSONObject runCommand(JSONObject payload, HttpSession session) throws DefinedException --> Line_51 $$ log.debug("Login <- runCommand SID: " + sessionId) [CD]
Line_2 $$ public JSONObject runCommand(JSONObject payload, HttpSession session) throws DefinedException --> Line_52 $$ return toReturn [CD]
