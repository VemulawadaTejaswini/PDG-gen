Line_2 $$ private void downloadDirectory() throws SocketException, IOException --> Line_3 $$ FTPClient client = new FTPClient() [CD]
Line_2 $$ private void downloadDirectory() throws SocketException, IOException --> Line_4 $$ client.connect(source.getHost()) [CD]
Line_3 $$ FTPClient client = new FTPClient() --> Line_4 $$ client.connect(source.getHost()) [FD]
Line_2 $$ private void downloadDirectory() throws SocketException, IOException --> Line_5 $$ client.login(username, password) [CD]
Line_3 $$ FTPClient client = new FTPClient() --> Line_5 $$ client.login(username, password) [FD]
Line_2 $$ private void downloadDirectory() throws SocketException, IOException --> Line_6 $$ FTPFile[] files = client.listFiles(source.getPath()) [CD]
Line_3 $$ FTPClient client = new FTPClient() --> Line_6 $$ FTPFile[] files = client.listFiles(source.getPath()) [FD]
Line_7 $$ for (FTPFile file : files) --> Line_8 $$ if (!file.isDirectory()) [FD]
Line_8 $$ if (!file.isDirectory()) --> Line_9 $$ long file_size = file.getSize() / 1024 [CD]
Line_7 $$ for (FTPFile file : files) --> Line_9 $$ long file_size = file.getSize() / 1024 [FD]
Line_8 $$ if (!file.isDirectory()) --> Line_10 $$ Calendar cal = file.getTimestamp() [CD]
Line_7 $$ for (FTPFile file : files) --> Line_10 $$ Calendar cal = file.getTimestamp() [FD]
Line_8 $$ if (!file.isDirectory()) --> Line_11 $$ URL source_file = new File(source + file.getName()).toURI().toURL() [CD]
Line_7 $$ for (FTPFile file : files) --> Line_11 $$ URL source_file = new File(source + file.getName()).toURI().toURL() [FD]
Line_8 $$ if (!file.isDirectory()) --> Line_12 $$ DownloadQueue.add(new Download(projectName, parser.getParserID(), source_file, file_size, cal, target + file.getName())) [CD]
Line_7 $$ for (FTPFile file : files) --> Line_12 $$ DownloadQueue.add(new Download(projectName, parser.getParserID(), source_file, file_size, cal, target + file.getName())) [FD]
