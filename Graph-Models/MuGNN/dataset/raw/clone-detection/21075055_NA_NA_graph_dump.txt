Line_2 $$ public String digest(String algorithm, String text) --> Line_3 $$ MessageDigest digester = null [CD]
Line_3 $$ MessageDigest digester = null --> Line_5 $$ digester = MessageDigest.getInstance(algorithm) [FD]
Line_2 $$ public String digest(String algorithm, String text) --> Line_5 $$ digester = MessageDigest.getInstance(algorithm) [FD]
Line_3 $$ MessageDigest digester = null --> Line_6 $$ digester.update(text.getBytes(Digester.ENCODING)) [FD]
Line_5 $$ digester = MessageDigest.getInstance(algorithm) --> Line_6 $$ digester.update(text.getBytes(Digester.ENCODING)) [FD]
Line_2 $$ public String digest(String algorithm, String text) --> Line_6 $$ digester.update(text.getBytes(Digester.ENCODING)) [FD]
Line_2 $$ public String digest(String algorithm, String text) --> Line_12 $$ byte[] bytes = digester.digest() [CD]
Line_3 $$ MessageDigest digester = null --> Line_12 $$ byte[] bytes = digester.digest() [FD]
Line_5 $$ digester = MessageDigest.getInstance(algorithm) --> Line_12 $$ byte[] bytes = digester.digest() [FD]
Line_2 $$ public String digest(String algorithm, String text) --> Line_13 $$ if (_BASE_64) [CD]
Line_13 $$ if (_BASE_64) --> Line_14 $$ return Base64.encode(bytes) [CD]
Line_12 $$ byte[] bytes = digester.digest() --> Line_14 $$ return Base64.encode(bytes) [FD]
Line_13 $$ if (_BASE_64) --> Line_16 $$ return new String(Hex.encodeHex(bytes)) [CD]
Line_12 $$ byte[] bytes = digester.digest() --> Line_16 $$ return new String(Hex.encodeHex(bytes)) [FD]
