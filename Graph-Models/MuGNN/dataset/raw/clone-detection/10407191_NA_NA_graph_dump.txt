Line_2 $$ public boolean copy(Document document, Folder folder) throws Exception --> Line_3 $$ boolean isCopied = false [CD]
Line_2 $$ public boolean copy(Document document, Folder folder) throws Exception --> Line_4 $$ if (document.getId() != null && folder.getId() != null) [CD]
Line_2 $$ public boolean copy(Document document, Folder folder) throws Exception --> Line_4 $$ if (document.getId() != null && folder.getId() != null) [FD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_5 $$ Document copiedDoc = new DocumentModel() [CD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_6 $$ copiedDoc.setValues(document.getValues()) [CD]
Line_5 $$ Document copiedDoc = new DocumentModel() --> Line_6 $$ copiedDoc.setValues(document.getValues()) [FD]
Line_2 $$ public boolean copy(Document document, Folder folder) throws Exception --> Line_6 $$ copiedDoc.setValues(document.getValues()) [FD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_7 $$ copiedDoc.setFolder(folder) [CD]
Line_5 $$ Document copiedDoc = new DocumentModel() --> Line_7 $$ copiedDoc.setFolder(folder) [FD]
Line_2 $$ public boolean copy(Document document, Folder folder) throws Exception --> Line_7 $$ copiedDoc.setFolder(folder) [FD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_8 $$ copiedDoc.setId(null) [CD]
Line_5 $$ Document copiedDoc = new DocumentModel() --> Line_8 $$ copiedDoc.setId(null) [FD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_9 $$ em.persist(copiedDoc) [CD]
Line_5 $$ Document copiedDoc = new DocumentModel() --> Line_9 $$ em.persist(copiedDoc) [FD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_10 $$ resourceAuthorityService.applyAuthority(copiedDoc) [CD]
Line_5 $$ Document copiedDoc = new DocumentModel() --> Line_10 $$ resourceAuthorityService.applyAuthority(copiedDoc) [FD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_11 $$ List<Preference> preferences = prefService.findAll() [CD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_12 $$ Preference preference = new PreferenceModel() [CD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_13 $$ if (preferences != null && !preferences.isEmpty()) [CD]
Line_11 $$ List<Preference> preferences = prefService.findAll() --> Line_13 $$ if (preferences != null && !preferences.isEmpty()) [FD]
Line_13 $$ if (preferences != null && !preferences.isEmpty()) --> Line_14 $$ preference = preferences.get(0) [CD]
Line_12 $$ Preference preference = new PreferenceModel() --> Line_14 $$ preference = preferences.get(0) [FD]
Line_11 $$ List<Preference> preferences = prefService.findAll() --> Line_14 $$ preference = preferences.get(0) [FD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_16 $$ String repo = preference.getRepository() [CD]
Line_12 $$ Preference preference = new PreferenceModel() --> Line_16 $$ String repo = preference.getRepository() [FD]
Line_14 $$ preference = preferences.get(0) --> Line_16 $$ String repo = preference.getRepository() [FD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_17 $$ SimpleDateFormat sdf = new SimpleDateFormat(Constants.DATEFORMAT_YYYYMMDD) [CD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_18 $$ Calendar calendar = Calendar.getInstance() [CD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_19 $$ StringBuffer sbRepo = new StringBuffer(repo) [CD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_20 $$ sbRepo.append(File.separator) [CD]
Line_19 $$ StringBuffer sbRepo = new StringBuffer(repo) --> Line_20 $$ sbRepo.append(File.separator) [FD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_21 $$ StringBuffer sbFolder = new StringBuffer(sdf.format(calendar.getTime())) [CD]
Line_17 $$ SimpleDateFormat sdf = new SimpleDateFormat(Constants.DATEFORMAT_YYYYMMDD) --> Line_21 $$ StringBuffer sbFolder = new StringBuffer(sdf.format(calendar.getTime())) [FD]
Line_18 $$ Calendar calendar = Calendar.getInstance() --> Line_21 $$ StringBuffer sbFolder = new StringBuffer(sdf.format(calendar.getTime())) [FD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_22 $$ sbFolder.append(File.separator).append(calendar.get(Calendar.HOUR_OF_DAY)) [CD]
Line_21 $$ StringBuffer sbFolder = new StringBuffer(sdf.format(calendar.getTime())) --> Line_22 $$ sbFolder.append(File.separator).append(calendar.get(Calendar.HOUR_OF_DAY)) [FD]
Line_18 $$ Calendar calendar = Calendar.getInstance() --> Line_22 $$ sbFolder.append(File.separator).append(calendar.get(Calendar.HOUR_OF_DAY)) [FD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_23 $$ File fFolder = new File(sbRepo.append(sbFolder).toString()) [CD]
Line_19 $$ StringBuffer sbRepo = new StringBuffer(repo) --> Line_23 $$ File fFolder = new File(sbRepo.append(sbFolder).toString()) [FD]
Line_21 $$ StringBuffer sbFolder = new StringBuffer(sdf.format(calendar.getTime())) --> Line_23 $$ File fFolder = new File(sbRepo.append(sbFolder).toString()) [FD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_24 $$ if (!fFolder.exists()) [CD]
Line_23 $$ File fFolder = new File(sbRepo.append(sbFolder).toString()) --> Line_24 $$ if (!fFolder.exists()) [FD]
Line_24 $$ if (!fFolder.exists()) --> Line_25 $$ fFolder.mkdirs() [CD]
Line_23 $$ File fFolder = new File(sbRepo.append(sbFolder).toString()) --> Line_25 $$ fFolder.mkdirs() [FD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_27 $$ copiedDoc.setLocation(sbFolder.toString()) [CD]
Line_5 $$ Document copiedDoc = new DocumentModel() --> Line_27 $$ copiedDoc.setLocation(sbFolder.toString()) [FD]
Line_21 $$ StringBuffer sbFolder = new StringBuffer(sdf.format(calendar.getTime())) --> Line_27 $$ copiedDoc.setLocation(sbFolder.toString()) [FD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_28 $$ em.merge(copiedDoc) [CD]
Line_5 $$ Document copiedDoc = new DocumentModel() --> Line_28 $$ em.merge(copiedDoc) [FD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_29 $$ File in = new File(repo + File.separator + document.getLocation() + File.separator + document.getId() + "." + document.getExt()) [CD]
Line_2 $$ public boolean copy(Document document, Folder folder) throws Exception --> Line_29 $$ File in = new File(repo + File.separator + document.getLocation() + File.separator + document.getId() + "." + document.getExt()) [FD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_30 $$ File out = new File(fFolder.getAbsolutePath() + File.separator + copiedDoc.getId() + "." + copiedDoc.getExt()) [CD]
Line_23 $$ File fFolder = new File(sbRepo.append(sbFolder).toString()) --> Line_30 $$ File out = new File(fFolder.getAbsolutePath() + File.separator + copiedDoc.getId() + "." + copiedDoc.getExt()) [FD]
Line_5 $$ Document copiedDoc = new DocumentModel() --> Line_30 $$ File out = new File(fFolder.getAbsolutePath() + File.separator + copiedDoc.getId() + "." + copiedDoc.getExt()) [FD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_31 $$ FileChannel inChannel = new FileInputStream(in).getChannel() [CD]
Line_4 $$ if (document.getId() != null && folder.getId() != null) --> Line_32 $$ FileChannel outChannel = new FileOutputStream(out).getChannel() [CD]
Line_31 $$ FileChannel inChannel = new FileInputStream(in).getChannel() --> Line_34 $$ inChannel.transferTo(0, inChannel.size(), outChannel) [FD]
Line_32 $$ FileChannel outChannel = new FileOutputStream(out).getChannel() --> Line_34 $$ inChannel.transferTo(0, inChannel.size(), outChannel) [FD]
Line_31 $$ FileChannel inChannel = new FileInputStream(in).getChannel() --> Line_38 $$ if (inChannel != null) [FD]
Line_32 $$ FileChannel outChannel = new FileOutputStream(out).getChannel() --> Line_39 $$ if (outChannel != null) [FD]
Line_2 $$ public boolean copy(Document document, Folder folder) throws Exception --> Line_42 $$ return isCopied [CD]
