Line_2 $$ static boolean generateKey() throws NoSuchAlgorithmException --> Line_3 $$ java.util.Random rand = new Random(reg_name.hashCode() + System.currentTimeMillis()) [CD]
Line_2 $$ static boolean generateKey() throws NoSuchAlgorithmException --> Line_4 $$ DecimalFormat vf = new DecimalFormat("000") [CD]
Line_4 $$ DecimalFormat vf = new DecimalFormat("000") --> Line_5 $$ ccKey = keyProduct + FIELD_SEPERATOR + keyType + FIELD_SEPERATOR + keyQuantity + FIELD_SEPERATOR + vf.format(lowMajorVersion) + FIELD_SEPERATOR + vf.format(lowMinorVersion) + FIELD_SEPERATOR + vf.format(highMajorVersion) + FIELD_SEPERATOR + vf.format(highMinorVersion) + FIELD_SEPERATOR + reg_name + FIELD_SEPERATOR + Integer.toHexString(rand.nextInt()).toUpperCase() [FD]
Line_3 $$ java.util.Random rand = new Random(reg_name.hashCode() + System.currentTimeMillis()) --> Line_5 $$ ccKey = keyProduct + FIELD_SEPERATOR + keyType + FIELD_SEPERATOR + keyQuantity + FIELD_SEPERATOR + vf.format(lowMajorVersion) + FIELD_SEPERATOR + vf.format(lowMinorVersion) + FIELD_SEPERATOR + vf.format(highMajorVersion) + FIELD_SEPERATOR + vf.format(highMinorVersion) + FIELD_SEPERATOR + reg_name + FIELD_SEPERATOR + Integer.toHexString(rand.nextInt()).toUpperCase() [FD]
Line_2 $$ static boolean generateKey() throws NoSuchAlgorithmException --> Line_6 $$ byte[] md5 [CD]
Line_2 $$ static boolean generateKey() throws NoSuchAlgorithmException --> Line_7 $$ MessageDigest md = null [CD]
Line_2 $$ static boolean generateKey() throws NoSuchAlgorithmException --> Line_8 $$ md = MessageDigest.getInstance("MD5") [CD]
Line_7 $$ MessageDigest md = null --> Line_8 $$ md = MessageDigest.getInstance("MD5") [FD]
Line_2 $$ static boolean generateKey() throws NoSuchAlgorithmException --> Line_9 $$ md.update(ccKey.getBytes()) [CD]
Line_7 $$ MessageDigest md = null --> Line_9 $$ md.update(ccKey.getBytes()) [FD]
Line_8 $$ md = MessageDigest.getInstance("MD5") --> Line_9 $$ md.update(ccKey.getBytes()) [FD]
Line_2 $$ static boolean generateKey() throws NoSuchAlgorithmException --> Line_10 $$ md.update(FIELD_SEPERATOR.getBytes()) [CD]
Line_7 $$ MessageDigest md = null --> Line_10 $$ md.update(FIELD_SEPERATOR.getBytes()) [FD]
Line_8 $$ md = MessageDigest.getInstance("MD5") --> Line_10 $$ md.update(FIELD_SEPERATOR.getBytes()) [FD]
Line_2 $$ static boolean generateKey() throws NoSuchAlgorithmException --> Line_11 $$ md.update(zuonicsPassword.getBytes()) [CD]
Line_7 $$ MessageDigest md = null --> Line_11 $$ md.update(zuonicsPassword.getBytes()) [FD]
Line_8 $$ md = MessageDigest.getInstance("MD5") --> Line_11 $$ md.update(zuonicsPassword.getBytes()) [FD]
Line_2 $$ static boolean generateKey() throws NoSuchAlgorithmException --> Line_12 $$ md5 = md.digest() [CD]
Line_6 $$ byte[] md5 --> Line_12 $$ md5 = md.digest() [FD]
Line_7 $$ MessageDigest md = null --> Line_12 $$ md5 = md.digest() [FD]
Line_8 $$ md = MessageDigest.getInstance("MD5") --> Line_12 $$ md5 = md.digest() [FD]
Line_2 $$ static boolean generateKey() throws NoSuchAlgorithmException --> Line_14 $$ for (int i = 0; i < md5.length; i++) userKey += Integer.toHexString(md5[i]).toUpperCase() [CD]
Line_2 $$ static boolean generateKey() throws NoSuchAlgorithmException --> Line_15 $$ return true [CD]
