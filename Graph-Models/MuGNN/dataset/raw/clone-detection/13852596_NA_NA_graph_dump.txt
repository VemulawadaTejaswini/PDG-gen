Line_4 $$ if (methods == null) --> Line_5 $$ return [CD]
Line_13 $$ ClassReader reader = new ClassReader(inputStream) --> Line_14 $$ reader.accept(new MethodAnalyzer(), 0) [FD]
Line_7 $$ List<Resource> resources = new ArrayList<Resource>() --> Line_15 $$ resources.add(classFile) [FD]
Line_7 $$ List<Resource> resources = new ArrayList<Resource>() --> Line_21 $$ for (Iterator<Resource> i = resources.iterator(); i.hasNext(); ) [FD]
Line_21 $$ for (Iterator<Resource> i = resources.iterator(); i.hasNext(); ) --> Line_22 $$ final Resource classFile = i.next() [CD]
Line_21 $$ for (Iterator<Resource> i = resources.iterator(); i.hasNext(); ) --> Line_22 $$ final Resource classFile = i.next() [FD]
Line_25 $$ ClassReader reader = new ClassReader(inputStream) --> Line_28 $$ reader.accept(new MethodInjector(writer), 0) [FD]
Line_13 $$ ClassReader reader = new ClassReader(inputStream) --> Line_28 $$ reader.accept(new MethodInjector(writer), 0) [FD]
Line_26 $$ ClassWriter writer = new ClassWriter(reader, ClassWriter.COMPUTE_MAXS) --> Line_29 $$ byte[] b = writer.toByteArray() [FD]
Line_29 $$ byte[] b = writer.toByteArray() --> Line_32 $$ outputStream.write(b) [FD]
Line_21 $$ for (Iterator<Resource> i = resources.iterator(); i.hasNext(); ) --> Line_38 $$ newSize += classFile.getSize() [CD]
Line_25 $$ ClassReader reader = new ClassReader(inputStream) --> Line_48 $$ reader.accept(new PushMethodGenerator(writer), 0) [FD]
Line_13 $$ ClassReader reader = new ClassReader(inputStream) --> Line_48 $$ reader.accept(new PushMethodGenerator(writer), 0) [FD]
Line_45 $$ ClassReader reader = new ClassReader(inputStream) --> Line_48 $$ reader.accept(new PushMethodGenerator(writer), 0) [FD]
Line_26 $$ ClassWriter writer = new ClassWriter(reader, ClassWriter.COMPUTE_MAXS) --> Line_52 $$ byte[] b = writer.toByteArray() [FD]
Line_46 $$ ClassWriter writer = new ClassWriter(reader, ClassWriter.COMPUTE_MAXS) --> Line_52 $$ byte[] b = writer.toByteArray() [FD]
Line_29 $$ byte[] b = writer.toByteArray() --> Line_55 $$ outputStream.write(b) [FD]
Line_52 $$ byte[] b = writer.toByteArray() --> Line_55 $$ outputStream.write(b) [FD]
