Line_7 $$ URL url = new URL(this.target) --> Line_9 $$ URLConnection urlConnection = url.openConnection() [FD]
Line_9 $$ URLConnection urlConnection = url.openConnection() --> Line_10 $$ InputStream in = urlConnection.getInputStream() [FD]
Line_12 $$ int numRead --> Line_15 $$ while ((numRead = in.read(buffer)) != -1) [FD]
Line_10 $$ InputStream in = urlConnection.getInputStream() --> Line_15 $$ while ((numRead = in.read(buffer)) != -1) [FD]
Line_11 $$ byte[] buffer = new byte[1024] --> Line_15 $$ while ((numRead = in.read(buffer)) != -1) [FD]
Line_15 $$ while ((numRead = in.read(buffer)) != -1) --> Line_16 $$ m.update(buffer, 0, numRead) [CD]
Line_15 $$ while ((numRead = in.read(buffer)) != -1) --> Line_16 $$ m.update(buffer, 0, numRead) [FD]
Line_5 $$ MessageDigest m = MessageDigest.getInstance("MD5") --> Line_16 $$ m.update(buffer, 0, numRead) [FD]
Line_11 $$ byte[] buffer = new byte[1024] --> Line_16 $$ m.update(buffer, 0, numRead) [FD]
Line_12 $$ int numRead --> Line_16 $$ m.update(buffer, 0, numRead) [FD]
Line_15 $$ while ((numRead = in.read(buffer)) != -1) --> Line_17 $$ fileSize += numRead [CD]
Line_15 $$ while ((numRead = in.read(buffer)) != -1) --> Line_17 $$ fileSize += numRead [FD]
Line_13 $$ int fileSize = 0 --> Line_17 $$ fileSize += numRead [FD]
Line_12 $$ int numRead --> Line_17 $$ fileSize += numRead [FD]
Line_10 $$ InputStream in = urlConnection.getInputStream() --> Line_19 $$ in.close() [FD]
Line_5 $$ MessageDigest m = MessageDigest.getInstance("MD5") --> Line_22 $$ String fileHash = new BigInteger(1, m.digest()).toString(16) [FD]
Line_22 $$ String fileHash = new BigInteger(1, m.digest()).toString(16) --> Line_23 $$ if (fileHash.equals(this.hash)) [FD]
Line_23 $$ if (fileHash.equals(this.hash)) --> Line_24 $$ Debug.log("Integrity test", "Test OK") [CD]
Line_23 $$ if (fileHash.equals(this.hash)) --> Line_25 $$ this.result.put("Integrity", "OK") [CD]
Line_23 $$ if (fileHash.equals(this.hash)) --> Line_27 $$ Debug.log("Integrity test", "Test failed: different hashes (" + fileHash + " but expected " + hash + ")") [CD]
Line_23 $$ if (fileHash.equals(this.hash)) --> Line_28 $$ this.result.put("Integrity", "FAIL") [CD]
