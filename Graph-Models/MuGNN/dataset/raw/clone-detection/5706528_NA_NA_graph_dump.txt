Line_4 $$ URL url = new URL(myListURL) --> Line_5 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream())) [FD]
Line_6 $$ String line = null --> Line_10 $$ while ((line = reader.readLine()) != null) [FD]
Line_5 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_10 $$ while ((line = reader.readLine()) != null) [FD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_11 $$ Matcher matcher = folderPattern.matcher(line) [CD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_11 $$ Matcher matcher = folderPattern.matcher(line) [FD]
Line_7 $$ Pattern folderPattern = Pattern.compile(".*DIR.*<a href=.(.*)/.>(.*)</a>.*") --> Line_11 $$ Matcher matcher = folderPattern.matcher(line) [FD]
Line_6 $$ String line = null --> Line_11 $$ Matcher matcher = folderPattern.matcher(line) [FD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_12 $$ if (matcher.matches()) [CD]
Line_11 $$ Matcher matcher = folderPattern.matcher(line) --> Line_12 $$ if (matcher.matches()) [FD]
Line_12 $$ if (matcher.matches()) --> Line_13 $$ String dirUrl = myListURL + matcher.group(1) + "/" [CD]
Line_11 $$ Matcher matcher = folderPattern.matcher(line) --> Line_13 $$ String dirUrl = myListURL + matcher.group(1) + "/" [FD]
Line_12 $$ if (matcher.matches()) --> Line_14 $$ String name = matcher.group(2) [CD]
Line_11 $$ Matcher matcher = folderPattern.matcher(line) --> Line_14 $$ String name = matcher.group(2) [FD]
Line_12 $$ if (matcher.matches()) --> Line_15 $$ if (name.equalsIgnoreCase("Parent Directory")) [CD]
Line_14 $$ String name = matcher.group(2) --> Line_15 $$ if (name.equalsIgnoreCase("Parent Directory")) [FD]
Line_12 $$ if (matcher.matches()) --> Line_18 $$ DownloadMenu.this.add(new DownloadMenu(DownloadMenu.this.myMainFrame, dirUrl, name, myLoadChildren)) [CD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_21 $$ matcher = folderPatternCloudmake.matcher(line) [CD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_21 $$ matcher = folderPatternCloudmake.matcher(line) [FD]
Line_11 $$ Matcher matcher = folderPattern.matcher(line) --> Line_21 $$ matcher = folderPatternCloudmake.matcher(line) [FD]
Line_6 $$ String line = null --> Line_21 $$ matcher = folderPatternCloudmake.matcher(line) [FD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_22 $$ if (matcher.matches()) [CD]
Line_11 $$ Matcher matcher = folderPattern.matcher(line) --> Line_22 $$ if (matcher.matches()) [FD]
Line_21 $$ matcher = folderPatternCloudmake.matcher(line) --> Line_22 $$ if (matcher.matches()) [FD]
Line_11 $$ Matcher matcher = folderPattern.matcher(line) --> Line_23 $$ String dirUrl = myListURL.substring(0, myListURL.indexOf(".com/") + ".com/".length()) + matcher.group(1) [FD]
Line_21 $$ matcher = folderPatternCloudmake.matcher(line) --> Line_23 $$ String dirUrl = myListURL.substring(0, myListURL.indexOf(".com/") + ".com/".length()) + matcher.group(1) [FD]
Line_22 $$ if (matcher.matches()) --> Line_24 $$ String name = matcher.group(2) [CD]
Line_11 $$ Matcher matcher = folderPattern.matcher(line) --> Line_24 $$ String name = matcher.group(2) [FD]
Line_21 $$ matcher = folderPatternCloudmake.matcher(line) --> Line_24 $$ String name = matcher.group(2) [FD]
Line_22 $$ if (matcher.matches()) --> Line_25 $$ DownloadMenu.this.add(new DownloadMenu(DownloadMenu.this.myMainFrame, dirUrl, name, myLoadChildren)) [CD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_28 $$ matcher = filePatternCloudmake.matcher(line) [CD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_28 $$ matcher = filePatternCloudmake.matcher(line) [FD]
Line_11 $$ Matcher matcher = folderPattern.matcher(line) --> Line_28 $$ matcher = filePatternCloudmake.matcher(line) [FD]
Line_21 $$ matcher = folderPatternCloudmake.matcher(line) --> Line_28 $$ matcher = filePatternCloudmake.matcher(line) [FD]
Line_6 $$ String line = null --> Line_28 $$ matcher = filePatternCloudmake.matcher(line) [FD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_29 $$ if (matcher.matches()) [CD]
Line_11 $$ Matcher matcher = folderPattern.matcher(line) --> Line_29 $$ if (matcher.matches()) [FD]
Line_21 $$ matcher = folderPatternCloudmake.matcher(line) --> Line_29 $$ if (matcher.matches()) [FD]
Line_28 $$ matcher = filePatternCloudmake.matcher(line) --> Line_29 $$ if (matcher.matches()) [FD]
Line_29 $$ if (matcher.matches()) --> Line_30 $$ String fileUrl = myListURL.substring(0, myListURL.indexOf(".com") + ".com".length()) + matcher.group(1) + ".bz2" [CD]
Line_11 $$ Matcher matcher = folderPattern.matcher(line) --> Line_30 $$ String fileUrl = myListURL.substring(0, myListURL.indexOf(".com") + ".com".length()) + matcher.group(1) + ".bz2" [FD]
Line_21 $$ matcher = folderPatternCloudmake.matcher(line) --> Line_30 $$ String fileUrl = myListURL.substring(0, myListURL.indexOf(".com") + ".com".length()) + matcher.group(1) + ".bz2" [FD]
Line_28 $$ matcher = filePatternCloudmake.matcher(line) --> Line_30 $$ String fileUrl = myListURL.substring(0, myListURL.indexOf(".com") + ".com".length()) + matcher.group(1) + ".bz2" [FD]
Line_29 $$ if (matcher.matches()) --> Line_31 $$ final int typeAt = 3 [CD]
Line_29 $$ if (matcher.matches()) --> Line_32 $$ final int nameAt = 2 [CD]
Line_29 $$ if (matcher.matches()) --> Line_33 $$ String type = matcher.group(typeAt) [CD]
Line_11 $$ Matcher matcher = folderPattern.matcher(line) --> Line_33 $$ String type = matcher.group(typeAt) [FD]
Line_21 $$ matcher = folderPatternCloudmake.matcher(line) --> Line_33 $$ String type = matcher.group(typeAt) [FD]
Line_28 $$ matcher = filePatternCloudmake.matcher(line) --> Line_33 $$ String type = matcher.group(typeAt) [FD]
Line_31 $$ final int typeAt = 3 --> Line_33 $$ String type = matcher.group(typeAt) [FD]
Line_29 $$ if (matcher.matches()) --> Line_34 $$ String name = matcher.group(nameAt) [CD]
Line_11 $$ Matcher matcher = folderPattern.matcher(line) --> Line_34 $$ String name = matcher.group(nameAt) [FD]
Line_21 $$ matcher = folderPatternCloudmake.matcher(line) --> Line_34 $$ String name = matcher.group(nameAt) [FD]
Line_28 $$ matcher = filePatternCloudmake.matcher(line) --> Line_34 $$ String name = matcher.group(nameAt) [FD]
Line_32 $$ final int nameAt = 2 --> Line_34 $$ String name = matcher.group(nameAt) [FD]
Line_29 $$ if (matcher.matches()) --> Line_35 $$ if (type.length() > 0) [CD]
Line_33 $$ String type = matcher.group(typeAt) --> Line_35 $$ if (type.length() > 0) [FD]
Line_35 $$ if (type.length() > 0) --> Line_36 $$ if (type.startsWith(".")) [CD]
Line_33 $$ String type = matcher.group(typeAt) --> Line_36 $$ if (type.startsWith(".")) [FD]
Line_36 $$ if (type.startsWith(".")) --> Line_37 $$ type = type.substring(1) [CD]
Line_33 $$ String type = matcher.group(typeAt) --> Line_37 $$ type = type.substring(1) [FD]
Line_35 $$ if (type.length() > 0) --> Line_39 $$ name += "-" + type [CD]
Line_14 $$ String name = matcher.group(2) --> Line_39 $$ name += "-" + type [FD]
Line_33 $$ String type = matcher.group(typeAt) --> Line_39 $$ name += "-" + type [FD]
Line_37 $$ type = type.substring(1) --> Line_39 $$ name += "-" + type [FD]
Line_29 $$ if (matcher.matches()) --> Line_41 $$ JMenuItem subMenu = new JMenuItem(name) [CD]
Line_29 $$ if (matcher.matches()) --> Line_42 $$ subMenu.addActionListener(new DownloadActionListener(fileUrl, name)) [CD]
Line_41 $$ JMenuItem subMenu = new JMenuItem(name) --> Line_42 $$ subMenu.addActionListener(new DownloadActionListener(fileUrl, name)) [FD]
Line_29 $$ if (matcher.matches()) --> Line_43 $$ subMenu.putClientProperty("URL", fileUrl) [CD]
Line_41 $$ JMenuItem subMenu = new JMenuItem(name) --> Line_43 $$ subMenu.putClientProperty("URL", fileUrl) [FD]
Line_30 $$ String fileUrl = myListURL.substring(0, myListURL.indexOf(".com") + ".com".length()) + matcher.group(1) + ".bz2" --> Line_43 $$ subMenu.putClientProperty("URL", fileUrl) [FD]
Line_29 $$ if (matcher.matches()) --> Line_44 $$ add(subMenu) [CD]
Line_41 $$ JMenuItem subMenu = new JMenuItem(name) --> Line_44 $$ add(subMenu) [FD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_47 $$ int index = line.indexOf("<a href=\"") [CD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_47 $$ int index = line.indexOf("<a href=\"") [FD]
Line_6 $$ String line = null --> Line_47 $$ int index = line.indexOf("<a href=\"") [FD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_48 $$ if (index < 0) [CD]
Line_47 $$ int index = line.indexOf("<a href=\"") --> Line_48 $$ if (index < 0) [FD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_51 $$ index += "<a href=\"".length() [CD]
Line_47 $$ int index = line.indexOf("<a href=\"") --> Line_51 $$ index += "<a href=\"".length() [FD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_52 $$ int index2 = line.indexOf("</a") [CD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_52 $$ int index2 = line.indexOf("</a") [FD]
Line_6 $$ String line = null --> Line_52 $$ int index2 = line.indexOf("</a") [FD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_53 $$ if (index2 < 0) [CD]
Line_52 $$ int index2 = line.indexOf("</a") --> Line_53 $$ if (index2 < 0) [FD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_56 $$ int index1 = line.indexOf(".osm.bz2\">") [CD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_56 $$ int index1 = line.indexOf(".osm.bz2\">") [FD]
Line_6 $$ String line = null --> Line_56 $$ int index1 = line.indexOf(".osm.bz2\">") [FD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_57 $$ if (index1 < 0) [CD]
Line_56 $$ int index1 = line.indexOf(".osm.bz2\">") --> Line_57 $$ if (index1 < 0) [FD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_60 $$ index1 += ".osm.bz2".length() [CD]
Line_56 $$ int index1 = line.indexOf(".osm.bz2\">") --> Line_60 $$ index1 += ".osm.bz2".length() [FD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_61 $$ String fileUrl = line.substring(index, index1) [CD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_61 $$ String fileUrl = line.substring(index, index1) [FD]
Line_6 $$ String line = null --> Line_61 $$ String fileUrl = line.substring(index, index1) [FD]
Line_47 $$ int index = line.indexOf("<a href=\"") --> Line_61 $$ String fileUrl = line.substring(index, index1) [FD]
Line_51 $$ index += "<a href=\"".length() --> Line_61 $$ String fileUrl = line.substring(index, index1) [FD]
Line_56 $$ int index1 = line.indexOf(".osm.bz2\">") --> Line_61 $$ String fileUrl = line.substring(index, index1) [FD]
Line_60 $$ index1 += ".osm.bz2".length() --> Line_61 $$ String fileUrl = line.substring(index, index1) [FD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_62 $$ if (!fileUrl.contains(".osm")) [CD]
Line_30 $$ String fileUrl = myListURL.substring(0, myListURL.indexOf(".com") + ".com".length()) + matcher.group(1) + ".bz2" --> Line_62 $$ if (!fileUrl.contains(".osm")) [FD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_63 $$ if (!fileUrl.startsWith("http")) [CD]
Line_30 $$ String fileUrl = myListURL.substring(0, myListURL.indexOf(".com") + ".com".length()) + matcher.group(1) + ".bz2" --> Line_63 $$ if (!fileUrl.startsWith("http")) [FD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_64 $$ index1 += "\">".length() [CD]
Line_56 $$ int index1 = line.indexOf(".osm.bz2\">") --> Line_64 $$ index1 += "\">".length() [FD]
Line_60 $$ index1 += ".osm.bz2".length() --> Line_64 $$ index1 += "\">".length() [FD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_65 $$ String fileName = line.substring(index1, index2) [CD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_65 $$ String fileName = line.substring(index1, index2) [FD]
Line_6 $$ String line = null --> Line_65 $$ String fileName = line.substring(index1, index2) [FD]
Line_56 $$ int index1 = line.indexOf(".osm.bz2\">") --> Line_65 $$ String fileName = line.substring(index1, index2) [FD]
Line_60 $$ index1 += ".osm.bz2".length() --> Line_65 $$ String fileName = line.substring(index1, index2) [FD]
Line_64 $$ index1 += "\">".length() --> Line_65 $$ String fileName = line.substring(index1, index2) [FD]
Line_52 $$ int index2 = line.indexOf("</a") --> Line_65 $$ String fileName = line.substring(index1, index2) [FD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_67 $$ subMenu.addActionListener(new DownloadActionListener(fileUrl, fileName)) [CD]
Line_41 $$ JMenuItem subMenu = new JMenuItem(name) --> Line_67 $$ subMenu.addActionListener(new DownloadActionListener(fileUrl, fileName)) [FD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_68 $$ subMenu.putClientProperty("URL", fileUrl) [CD]
Line_41 $$ JMenuItem subMenu = new JMenuItem(name) --> Line_68 $$ subMenu.putClientProperty("URL", fileUrl) [FD]
Line_30 $$ String fileUrl = myListURL.substring(0, myListURL.indexOf(".com") + ".com".length()) + matcher.group(1) + ".bz2" --> Line_68 $$ subMenu.putClientProperty("URL", fileUrl) [FD]
Line_63 $$ if (!fileUrl.startsWith("http")) --> Line_68 $$ subMenu.putClientProperty("URL", fileUrl) [FD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_69 $$ add(subMenu) [CD]
Line_41 $$ JMenuItem subMenu = new JMenuItem(name) --> Line_69 $$ add(subMenu) [FD]
Line_2 $$ public void run() --> Line_74 $$ LOG.info("Done with async download of list of downloadable maps for " + getText() + "...") [CD]
Line_2 $$ public void run() --> Line_75 $$ remove(isLoadingMenuItem) [CD]
Line_2 $$ public void run() --> Line_76 $$ if (myTreeNode != null) [CD]
Line_76 $$ if (myTreeNode != null) --> Line_77 $$ myTreeNode.doneLoading() [CD]
Line_21 $$ matcher = folderPatternCloudmake.matcher(line) --> Line_12 $$ if (matcher.matches()) [FD]
Line_28 $$ matcher = filePatternCloudmake.matcher(line) --> Line_12 $$ if (matcher.matches()) [FD]
Line_21 $$ matcher = folderPatternCloudmake.matcher(line) --> Line_13 $$ String dirUrl = myListURL + matcher.group(1) + "/" [FD]
Line_28 $$ matcher = filePatternCloudmake.matcher(line) --> Line_13 $$ String dirUrl = myListURL + matcher.group(1) + "/" [FD]
Line_21 $$ matcher = folderPatternCloudmake.matcher(line) --> Line_14 $$ String name = matcher.group(2) [FD]
Line_28 $$ matcher = filePatternCloudmake.matcher(line) --> Line_14 $$ String name = matcher.group(2) [FD]
Line_39 $$ name += "-" + type --> Line_15 $$ if (name.equalsIgnoreCase("Parent Directory")) [FD]
Line_28 $$ matcher = filePatternCloudmake.matcher(line) --> Line_22 $$ if (matcher.matches()) [FD]
Line_28 $$ matcher = filePatternCloudmake.matcher(line) --> Line_23 $$ String dirUrl = myListURL.substring(0, myListURL.indexOf(".com/") + ".com/".length()) + matcher.group(1) [FD]
Line_28 $$ matcher = filePatternCloudmake.matcher(line) --> Line_24 $$ String name = matcher.group(2) [FD]
Line_37 $$ type = type.substring(1) --> Line_35 $$ if (type.length() > 0) [FD]
Line_37 $$ type = type.substring(1) --> Line_36 $$ if (type.startsWith(".")) [FD]
Line_63 $$ if (!fileUrl.startsWith("http")) --> Line_43 $$ subMenu.putClientProperty("URL", fileUrl) [FD]
Line_51 $$ index += "<a href=\"".length() --> Line_48 $$ if (index < 0) [FD]
Line_60 $$ index1 += ".osm.bz2".length() --> Line_57 $$ if (index1 < 0) [FD]
Line_64 $$ index1 += "\">".length() --> Line_57 $$ if (index1 < 0) [FD]
Line_64 $$ index1 += "\">".length() --> Line_61 $$ String fileUrl = line.substring(index, index1) [FD]
Line_63 $$ if (!fileUrl.startsWith("http")) --> Line_62 $$ if (!fileUrl.contains(".osm")) [FD]
