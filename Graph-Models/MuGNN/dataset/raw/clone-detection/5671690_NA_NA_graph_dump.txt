Line_2 $$ public void backup() --> Line_3 $$ Connection connection = null [CD]
Line_2 $$ public void backup() --> Line_4 $$ PreparedStatement prestm = null [CD]
Line_3 $$ Connection connection = null --> Line_8 $$ connection = DriverManager.getConnection(url, username, password) [FD]
Line_4 $$ PreparedStatement prestm = null --> Line_10 $$ prestm = connection.prepareStatement("show tables from " + schema + " like '" + getDestination() + "';") [FD]
Line_3 $$ Connection connection = null --> Line_10 $$ prestm = connection.prepareStatement("show tables from " + schema + " like '" + getDestination() + "';") [FD]
Line_8 $$ connection = DriverManager.getConnection(url, username, password) --> Line_10 $$ prestm = connection.prepareStatement("show tables from " + schema + " like '" + getDestination() + "';") [FD]
Line_4 $$ PreparedStatement prestm = null --> Line_11 $$ ResultSet rs = prestm.executeQuery() [FD]
Line_10 $$ prestm = connection.prepareStatement("show tables from " + schema + " like '" + getDestination() + "';") --> Line_11 $$ ResultSet rs = prestm.executeQuery() [FD]
Line_11 $$ ResultSet rs = prestm.executeQuery() --> Line_12 $$ tableExistsResult = rs.getString(1) [FD]
Line_9 $$ String tableExistsResult = "" --> Line_12 $$ tableExistsResult = rs.getString(1) [FD]
Line_11 $$ ResultSet rs = prestm.executeQuery() --> Line_13 $$ rs.close() [FD]
Line_4 $$ PreparedStatement prestm = null --> Line_14 $$ prestm.close() [FD]
Line_10 $$ prestm = connection.prepareStatement("show tables from " + schema + " like '" + getDestination() + "';") --> Line_14 $$ prestm.close() [FD]
Line_9 $$ String tableExistsResult = "" --> Line_15 $$ if (StringUtils.isBlank(tableExistsResult)) [FD]
Line_12 $$ tableExistsResult = rs.getString(1) --> Line_15 $$ if (StringUtils.isBlank(tableExistsResult)) [FD]
Line_15 $$ if (StringUtils.isBlank(tableExistsResult)) --> Line_16 $$ String createTableSql = "" [CD]
Line_15 $$ if (StringUtils.isBlank(tableExistsResult)) --> Line_17 $$ prestm = connection.prepareStatement("show create table " + getOrigin() + ";") [CD]
Line_4 $$ PreparedStatement prestm = null --> Line_17 $$ prestm = connection.prepareStatement("show create table " + getOrigin() + ";") [FD]
Line_10 $$ prestm = connection.prepareStatement("show tables from " + schema + " like '" + getDestination() + "';") --> Line_17 $$ prestm = connection.prepareStatement("show create table " + getOrigin() + ";") [FD]
Line_3 $$ Connection connection = null --> Line_17 $$ prestm = connection.prepareStatement("show create table " + getOrigin() + ";") [FD]
Line_8 $$ connection = DriverManager.getConnection(url, username, password) --> Line_17 $$ prestm = connection.prepareStatement("show create table " + getOrigin() + ";") [FD]
Line_15 $$ if (StringUtils.isBlank(tableExistsResult)) --> Line_18 $$ rs = prestm.executeQuery() [CD]
Line_11 $$ ResultSet rs = prestm.executeQuery() --> Line_18 $$ rs = prestm.executeQuery() [FD]
Line_4 $$ PreparedStatement prestm = null --> Line_18 $$ rs = prestm.executeQuery() [FD]
Line_10 $$ prestm = connection.prepareStatement("show tables from " + schema + " like '" + getDestination() + "';") --> Line_18 $$ rs = prestm.executeQuery() [FD]
Line_17 $$ prestm = connection.prepareStatement("show create table " + getOrigin() + ";") --> Line_18 $$ rs = prestm.executeQuery() [FD]
Line_15 $$ if (StringUtils.isBlank(tableExistsResult)) --> Line_19 $$ createTableSql = rs.getString(2) [CD]
Line_11 $$ ResultSet rs = prestm.executeQuery() --> Line_19 $$ createTableSql = rs.getString(2) [FD]
Line_18 $$ rs = prestm.executeQuery() --> Line_19 $$ createTableSql = rs.getString(2) [FD]
Line_16 $$ String createTableSql = "" --> Line_19 $$ createTableSql = rs.getString(2) [FD]
Line_15 $$ if (StringUtils.isBlank(tableExistsResult)) --> Line_20 $$ rs.close() [CD]
Line_11 $$ ResultSet rs = prestm.executeQuery() --> Line_20 $$ rs.close() [FD]
Line_18 $$ rs = prestm.executeQuery() --> Line_20 $$ rs.close() [FD]
Line_15 $$ if (StringUtils.isBlank(tableExistsResult)) --> Line_21 $$ prestm.close() [CD]
Line_4 $$ PreparedStatement prestm = null --> Line_21 $$ prestm.close() [FD]
Line_10 $$ prestm = connection.prepareStatement("show tables from " + schema + " like '" + getDestination() + "';") --> Line_21 $$ prestm.close() [FD]
Line_17 $$ prestm = connection.prepareStatement("show create table " + getOrigin() + ";") --> Line_21 $$ prestm.close() [FD]
Line_15 $$ if (StringUtils.isBlank(tableExistsResult)) --> Line_22 $$ createTableSql = createTableSql.replaceAll("`" + getOrigin() + "`", "`" + getDestination() + "`") [CD]
Line_16 $$ String createTableSql = "" --> Line_22 $$ createTableSql = createTableSql.replaceAll("`" + getOrigin() + "`", "`" + getDestination() + "`") [FD]
Line_19 $$ createTableSql = rs.getString(2) --> Line_22 $$ createTableSql = createTableSql.replaceAll("`" + getOrigin() + "`", "`" + getDestination() + "`") [FD]
Line_15 $$ if (StringUtils.isBlank(tableExistsResult)) --> Line_23 $$ createTableSql = createTableSql.replaceAll("auto_increment", "") [CD]
Line_16 $$ String createTableSql = "" --> Line_23 $$ createTableSql = createTableSql.replaceAll("auto_increment", "") [FD]
Line_19 $$ createTableSql = rs.getString(2) --> Line_23 $$ createTableSql = createTableSql.replaceAll("auto_increment", "") [FD]
Line_22 $$ createTableSql = createTableSql.replaceAll("`" + getOrigin() + "`", "`" + getDestination() + "`") --> Line_23 $$ createTableSql = createTableSql.replaceAll("auto_increment", "") [FD]
Line_15 $$ if (StringUtils.isBlank(tableExistsResult)) --> Line_24 $$ createTableSql = createTableSql.replaceAll("AUTO_INCREMENT", "") [CD]
Line_16 $$ String createTableSql = "" --> Line_24 $$ createTableSql = createTableSql.replaceAll("AUTO_INCREMENT", "") [FD]
Line_19 $$ createTableSql = rs.getString(2) --> Line_24 $$ createTableSql = createTableSql.replaceAll("AUTO_INCREMENT", "") [FD]
Line_22 $$ createTableSql = createTableSql.replaceAll("`" + getOrigin() + "`", "`" + getDestination() + "`") --> Line_24 $$ createTableSql = createTableSql.replaceAll("AUTO_INCREMENT", "") [FD]
Line_23 $$ createTableSql = createTableSql.replaceAll("auto_increment", "") --> Line_24 $$ createTableSql = createTableSql.replaceAll("AUTO_INCREMENT", "") [FD]
Line_15 $$ if (StringUtils.isBlank(tableExistsResult)) --> Line_25 $$ Matcher matcher = stripRelationTablePattern.matcher(createTableSql) [CD]
Line_16 $$ String createTableSql = "" --> Line_25 $$ Matcher matcher = stripRelationTablePattern.matcher(createTableSql) [FD]
Line_19 $$ createTableSql = rs.getString(2) --> Line_25 $$ Matcher matcher = stripRelationTablePattern.matcher(createTableSql) [FD]
Line_22 $$ createTableSql = createTableSql.replaceAll("`" + getOrigin() + "`", "`" + getDestination() + "`") --> Line_25 $$ Matcher matcher = stripRelationTablePattern.matcher(createTableSql) [FD]
Line_23 $$ createTableSql = createTableSql.replaceAll("auto_increment", "") --> Line_25 $$ Matcher matcher = stripRelationTablePattern.matcher(createTableSql) [FD]
Line_24 $$ createTableSql = createTableSql.replaceAll("AUTO_INCREMENT", "") --> Line_25 $$ Matcher matcher = stripRelationTablePattern.matcher(createTableSql) [FD]
Line_15 $$ if (StringUtils.isBlank(tableExistsResult)) --> Line_26 $$ createTableSql = matcher.replaceAll("") [CD]
Line_25 $$ Matcher matcher = stripRelationTablePattern.matcher(createTableSql) --> Line_26 $$ createTableSql = matcher.replaceAll("") [FD]
Line_16 $$ String createTableSql = "" --> Line_26 $$ createTableSql = matcher.replaceAll("") [FD]
Line_19 $$ createTableSql = rs.getString(2) --> Line_26 $$ createTableSql = matcher.replaceAll("") [FD]
Line_22 $$ createTableSql = createTableSql.replaceAll("`" + getOrigin() + "`", "`" + getDestination() + "`") --> Line_26 $$ createTableSql = matcher.replaceAll("") [FD]
Line_23 $$ createTableSql = createTableSql.replaceAll("auto_increment", "") --> Line_26 $$ createTableSql = matcher.replaceAll("") [FD]
Line_24 $$ createTableSql = createTableSql.replaceAll("AUTO_INCREMENT", "") --> Line_26 $$ createTableSql = matcher.replaceAll("") [FD]
Line_15 $$ if (StringUtils.isBlank(tableExistsResult)) --> Line_27 $$ matcher = normalizePattern.matcher(createTableSql) [CD]
Line_25 $$ Matcher matcher = stripRelationTablePattern.matcher(createTableSql) --> Line_27 $$ matcher = normalizePattern.matcher(createTableSql) [FD]
Line_16 $$ String createTableSql = "" --> Line_27 $$ matcher = normalizePattern.matcher(createTableSql) [FD]
Line_19 $$ createTableSql = rs.getString(2) --> Line_27 $$ matcher = normalizePattern.matcher(createTableSql) [FD]
Line_22 $$ createTableSql = createTableSql.replaceAll("`" + getOrigin() + "`", "`" + getDestination() + "`") --> Line_27 $$ matcher = normalizePattern.matcher(createTableSql) [FD]
Line_23 $$ createTableSql = createTableSql.replaceAll("auto_increment", "") --> Line_27 $$ matcher = normalizePattern.matcher(createTableSql) [FD]
Line_24 $$ createTableSql = createTableSql.replaceAll("AUTO_INCREMENT", "") --> Line_27 $$ matcher = normalizePattern.matcher(createTableSql) [FD]
Line_26 $$ createTableSql = matcher.replaceAll("") --> Line_27 $$ matcher = normalizePattern.matcher(createTableSql) [FD]
Line_15 $$ if (StringUtils.isBlank(tableExistsResult)) --> Line_28 $$ createTableSql = matcher.replaceAll("\n )") [CD]
Line_25 $$ Matcher matcher = stripRelationTablePattern.matcher(createTableSql) --> Line_28 $$ createTableSql = matcher.replaceAll("\n )") [FD]
Line_27 $$ matcher = normalizePattern.matcher(createTableSql) --> Line_28 $$ createTableSql = matcher.replaceAll("\n )") [FD]
Line_16 $$ String createTableSql = "" --> Line_28 $$ createTableSql = matcher.replaceAll("\n )") [FD]
Line_19 $$ createTableSql = rs.getString(2) --> Line_28 $$ createTableSql = matcher.replaceAll("\n )") [FD]
Line_22 $$ createTableSql = createTableSql.replaceAll("`" + getOrigin() + "`", "`" + getDestination() + "`") --> Line_28 $$ createTableSql = matcher.replaceAll("\n )") [FD]
Line_23 $$ createTableSql = createTableSql.replaceAll("auto_increment", "") --> Line_28 $$ createTableSql = matcher.replaceAll("\n )") [FD]
Line_24 $$ createTableSql = createTableSql.replaceAll("AUTO_INCREMENT", "") --> Line_28 $$ createTableSql = matcher.replaceAll("\n )") [FD]
Line_26 $$ createTableSql = matcher.replaceAll("") --> Line_28 $$ createTableSql = matcher.replaceAll("\n )") [FD]
Line_15 $$ if (StringUtils.isBlank(tableExistsResult)) --> Line_29 $$ Statement stm = connection.createStatement() [CD]
Line_3 $$ Connection connection = null --> Line_29 $$ Statement stm = connection.createStatement() [FD]
Line_8 $$ connection = DriverManager.getConnection(url, username, password) --> Line_29 $$ Statement stm = connection.createStatement() [FD]
Line_15 $$ if (StringUtils.isBlank(tableExistsResult)) --> Line_30 $$ stm.execute(createTableSql) [CD]
Line_29 $$ Statement stm = connection.createStatement() --> Line_30 $$ stm.execute(createTableSql) [FD]
Line_16 $$ String createTableSql = "" --> Line_30 $$ stm.execute(createTableSql) [FD]
Line_19 $$ createTableSql = rs.getString(2) --> Line_30 $$ stm.execute(createTableSql) [FD]
Line_22 $$ createTableSql = createTableSql.replaceAll("`" + getOrigin() + "`", "`" + getDestination() + "`") --> Line_30 $$ stm.execute(createTableSql) [FD]
Line_23 $$ createTableSql = createTableSql.replaceAll("auto_increment", "") --> Line_30 $$ stm.execute(createTableSql) [FD]
Line_24 $$ createTableSql = createTableSql.replaceAll("AUTO_INCREMENT", "") --> Line_30 $$ stm.execute(createTableSql) [FD]
Line_26 $$ createTableSql = matcher.replaceAll("") --> Line_30 $$ stm.execute(createTableSql) [FD]
Line_28 $$ createTableSql = matcher.replaceAll("\n )") --> Line_30 $$ stm.execute(createTableSql) [FD]
Line_15 $$ if (StringUtils.isBlank(tableExistsResult)) --> Line_31 $$ logger.debug("table '" + getDestination() + "' created!") [CD]
Line_15 $$ if (StringUtils.isBlank(tableExistsResult)) --> Line_32 $$ logger.debug("table '" + getDestination() + "' already exists") [CD]
Line_33 $$ Date date = new Date() --> Line_34 $$ date.setTime(TimeUtil.addHours(date, -getHours()).getTimeInMillis()) [FD]
Line_33 $$ Date date = new Date() --> Line_35 $$ date.setTime(TimeUtil.getTodayAtMidnight().getTimeInMillis()) [FD]
Line_4 $$ PreparedStatement prestm = null --> Line_38 $$ prestm = connection.prepareStatement("select count(*) from " + getOrigin() + " where " + getCondition() + "") [FD]
Line_10 $$ prestm = connection.prepareStatement("show tables from " + schema + " like '" + getDestination() + "';") --> Line_38 $$ prestm = connection.prepareStatement("select count(*) from " + getOrigin() + " where " + getCondition() + "") [FD]
Line_17 $$ prestm = connection.prepareStatement("show create table " + getOrigin() + ";") --> Line_38 $$ prestm = connection.prepareStatement("select count(*) from " + getOrigin() + " where " + getCondition() + "") [FD]
Line_3 $$ Connection connection = null --> Line_38 $$ prestm = connection.prepareStatement("select count(*) from " + getOrigin() + " where " + getCondition() + "") [FD]
Line_8 $$ connection = DriverManager.getConnection(url, username, password) --> Line_38 $$ prestm = connection.prepareStatement("select count(*) from " + getOrigin() + " where " + getCondition() + "") [FD]
Line_33 $$ Date date = new Date() --> Line_39 $$ java.sql.Date sqlDate = new java.sql.Date(date.getTime()) [FD]
Line_4 $$ PreparedStatement prestm = null --> Line_40 $$ prestm.setDate(1, sqlDate) [FD]
Line_10 $$ prestm = connection.prepareStatement("show tables from " + schema + " like '" + getDestination() + "';") --> Line_40 $$ prestm.setDate(1, sqlDate) [FD]
Line_17 $$ prestm = connection.prepareStatement("show create table " + getOrigin() + ";") --> Line_40 $$ prestm.setDate(1, sqlDate) [FD]
Line_38 $$ prestm = connection.prepareStatement("select count(*) from " + getOrigin() + " where " + getCondition() + "") --> Line_40 $$ prestm.setDate(1, sqlDate) [FD]
Line_39 $$ java.sql.Date sqlDate = new java.sql.Date(date.getTime()) --> Line_40 $$ prestm.setDate(1, sqlDate) [FD]
Line_11 $$ ResultSet rs = prestm.executeQuery() --> Line_41 $$ rs = prestm.executeQuery() [FD]
Line_18 $$ rs = prestm.executeQuery() --> Line_41 $$ rs = prestm.executeQuery() [FD]
Line_4 $$ PreparedStatement prestm = null --> Line_41 $$ rs = prestm.executeQuery() [FD]
Line_10 $$ prestm = connection.prepareStatement("show tables from " + schema + " like '" + getDestination() + "';") --> Line_41 $$ rs = prestm.executeQuery() [FD]
Line_17 $$ prestm = connection.prepareStatement("show create table " + getOrigin() + ";") --> Line_41 $$ rs = prestm.executeQuery() [FD]
Line_38 $$ prestm = connection.prepareStatement("select count(*) from " + getOrigin() + " where " + getCondition() + "") --> Line_41 $$ rs = prestm.executeQuery() [FD]
Line_11 $$ ResultSet rs = prestm.executeQuery() --> Line_42 $$ currentRows = rs.getLong(1) [FD]
Line_18 $$ rs = prestm.executeQuery() --> Line_42 $$ currentRows = rs.getLong(1) [FD]
Line_41 $$ rs = prestm.executeQuery() --> Line_42 $$ currentRows = rs.getLong(1) [FD]
Line_37 $$ long currentRows = 0L --> Line_42 $$ currentRows = rs.getLong(1) [FD]
Line_11 $$ ResultSet rs = prestm.executeQuery() --> Line_43 $$ rs.close() [FD]
Line_18 $$ rs = prestm.executeQuery() --> Line_43 $$ rs.close() [FD]
Line_41 $$ rs = prestm.executeQuery() --> Line_43 $$ rs.close() [FD]
Line_4 $$ PreparedStatement prestm = null --> Line_44 $$ prestm.close() [FD]
Line_10 $$ prestm = connection.prepareStatement("show tables from " + schema + " like '" + getDestination() + "';") --> Line_44 $$ prestm.close() [FD]
Line_17 $$ prestm = connection.prepareStatement("show create table " + getOrigin() + ";") --> Line_44 $$ prestm.close() [FD]
Line_38 $$ prestm = connection.prepareStatement("select count(*) from " + getOrigin() + " where " + getCondition() + "") --> Line_44 $$ prestm.close() [FD]
Line_37 $$ long currentRows = 0L --> Line_45 $$ if (currentRows > 0) [FD]
Line_42 $$ currentRows = rs.getLong(1) --> Line_45 $$ if (currentRows > 0) [FD]
Line_45 $$ if (currentRows > 0) --> Line_46 $$ connection.setAutoCommit(false) [CD]
Line_3 $$ Connection connection = null --> Line_46 $$ connection.setAutoCommit(false) [FD]
Line_8 $$ connection = DriverManager.getConnection(url, username, password) --> Line_46 $$ connection.setAutoCommit(false) [FD]
Line_45 $$ if (currentRows > 0) --> Line_47 $$ prestm = connection.prepareStatement("INSERT INTO " + getDestination() + " SELECT * FROM " + getOrigin() + " WHERE " + getCondition()) [CD]
Line_4 $$ PreparedStatement prestm = null --> Line_47 $$ prestm = connection.prepareStatement("INSERT INTO " + getDestination() + " SELECT * FROM " + getOrigin() + " WHERE " + getCondition()) [FD]
Line_10 $$ prestm = connection.prepareStatement("show tables from " + schema + " like '" + getDestination() + "';") --> Line_47 $$ prestm = connection.prepareStatement("INSERT INTO " + getDestination() + " SELECT * FROM " + getOrigin() + " WHERE " + getCondition()) [FD]
Line_17 $$ prestm = connection.prepareStatement("show create table " + getOrigin() + ";") --> Line_47 $$ prestm = connection.prepareStatement("INSERT INTO " + getDestination() + " SELECT * FROM " + getOrigin() + " WHERE " + getCondition()) [FD]
Line_38 $$ prestm = connection.prepareStatement("select count(*) from " + getOrigin() + " where " + getCondition() + "") --> Line_47 $$ prestm = connection.prepareStatement("INSERT INTO " + getDestination() + " SELECT * FROM " + getOrigin() + " WHERE " + getCondition()) [FD]
Line_3 $$ Connection connection = null --> Line_47 $$ prestm = connection.prepareStatement("INSERT INTO " + getDestination() + " SELECT * FROM " + getOrigin() + " WHERE " + getCondition()) [FD]
Line_8 $$ connection = DriverManager.getConnection(url, username, password) --> Line_47 $$ prestm = connection.prepareStatement("INSERT INTO " + getDestination() + " SELECT * FROM " + getOrigin() + " WHERE " + getCondition()) [FD]
Line_45 $$ if (currentRows > 0) --> Line_48 $$ prestm.setDate(1, sqlDate) [CD]
Line_4 $$ PreparedStatement prestm = null --> Line_48 $$ prestm.setDate(1, sqlDate) [FD]
Line_10 $$ prestm = connection.prepareStatement("show tables from " + schema + " like '" + getDestination() + "';") --> Line_48 $$ prestm.setDate(1, sqlDate) [FD]
Line_17 $$ prestm = connection.prepareStatement("show create table " + getOrigin() + ";") --> Line_48 $$ prestm.setDate(1, sqlDate) [FD]
Line_38 $$ prestm = connection.prepareStatement("select count(*) from " + getOrigin() + " where " + getCondition() + "") --> Line_48 $$ prestm.setDate(1, sqlDate) [FD]
Line_47 $$ prestm = connection.prepareStatement("INSERT INTO " + getDestination() + " SELECT * FROM " + getOrigin() + " WHERE " + getCondition()) --> Line_48 $$ prestm.setDate(1, sqlDate) [FD]
Line_39 $$ java.sql.Date sqlDate = new java.sql.Date(date.getTime()) --> Line_48 $$ prestm.setDate(1, sqlDate) [FD]
Line_45 $$ if (currentRows > 0) --> Line_49 $$ int rows = prestm.executeUpdate() [CD]
Line_4 $$ PreparedStatement prestm = null --> Line_49 $$ int rows = prestm.executeUpdate() [FD]
Line_10 $$ prestm = connection.prepareStatement("show tables from " + schema + " like '" + getDestination() + "';") --> Line_49 $$ int rows = prestm.executeUpdate() [FD]
Line_17 $$ prestm = connection.prepareStatement("show create table " + getOrigin() + ";") --> Line_49 $$ int rows = prestm.executeUpdate() [FD]
Line_38 $$ prestm = connection.prepareStatement("select count(*) from " + getOrigin() + " where " + getCondition() + "") --> Line_49 $$ int rows = prestm.executeUpdate() [FD]
Line_47 $$ prestm = connection.prepareStatement("INSERT INTO " + getDestination() + " SELECT * FROM " + getOrigin() + " WHERE " + getCondition()) --> Line_49 $$ int rows = prestm.executeUpdate() [FD]
Line_45 $$ if (currentRows > 0) --> Line_50 $$ prestm.close() [CD]
Line_4 $$ PreparedStatement prestm = null --> Line_50 $$ prestm.close() [FD]
Line_10 $$ prestm = connection.prepareStatement("show tables from " + schema + " like '" + getDestination() + "';") --> Line_50 $$ prestm.close() [FD]
Line_17 $$ prestm = connection.prepareStatement("show create table " + getOrigin() + ";") --> Line_50 $$ prestm.close() [FD]
Line_38 $$ prestm = connection.prepareStatement("select count(*) from " + getOrigin() + " where " + getCondition() + "") --> Line_50 $$ prestm.close() [FD]
Line_47 $$ prestm = connection.prepareStatement("INSERT INTO " + getDestination() + " SELECT * FROM " + getOrigin() + " WHERE " + getCondition()) --> Line_50 $$ prestm.close() [FD]
Line_45 $$ if (currentRows > 0) --> Line_51 $$ logger.info(rows + " rows backupped") [CD]
Line_45 $$ if (currentRows > 0) --> Line_52 $$ prestm = connection.prepareStatement("DELETE FROM " + getOrigin() + " WHERE " + getCondition()) [CD]
Line_4 $$ PreparedStatement prestm = null --> Line_52 $$ prestm = connection.prepareStatement("DELETE FROM " + getOrigin() + " WHERE " + getCondition()) [FD]
Line_10 $$ prestm = connection.prepareStatement("show tables from " + schema + " like '" + getDestination() + "';") --> Line_52 $$ prestm = connection.prepareStatement("DELETE FROM " + getOrigin() + " WHERE " + getCondition()) [FD]
Line_17 $$ prestm = connection.prepareStatement("show create table " + getOrigin() + ";") --> Line_52 $$ prestm = connection.prepareStatement("DELETE FROM " + getOrigin() + " WHERE " + getCondition()) [FD]
Line_38 $$ prestm = connection.prepareStatement("select count(*) from " + getOrigin() + " where " + getCondition() + "") --> Line_52 $$ prestm = connection.prepareStatement("DELETE FROM " + getOrigin() + " WHERE " + getCondition()) [FD]
Line_47 $$ prestm = connection.prepareStatement("INSERT INTO " + getDestination() + " SELECT * FROM " + getOrigin() + " WHERE " + getCondition()) --> Line_52 $$ prestm = connection.prepareStatement("DELETE FROM " + getOrigin() + " WHERE " + getCondition()) [FD]
Line_3 $$ Connection connection = null --> Line_52 $$ prestm = connection.prepareStatement("DELETE FROM " + getOrigin() + " WHERE " + getCondition()) [FD]
Line_8 $$ connection = DriverManager.getConnection(url, username, password) --> Line_52 $$ prestm = connection.prepareStatement("DELETE FROM " + getOrigin() + " WHERE " + getCondition()) [FD]
Line_45 $$ if (currentRows > 0) --> Line_53 $$ prestm.setDate(1, sqlDate) [CD]
Line_4 $$ PreparedStatement prestm = null --> Line_53 $$ prestm.setDate(1, sqlDate) [FD]
Line_10 $$ prestm = connection.prepareStatement("show tables from " + schema + " like '" + getDestination() + "';") --> Line_53 $$ prestm.setDate(1, sqlDate) [FD]
Line_17 $$ prestm = connection.prepareStatement("show create table " + getOrigin() + ";") --> Line_53 $$ prestm.setDate(1, sqlDate) [FD]
Line_38 $$ prestm = connection.prepareStatement("select count(*) from " + getOrigin() + " where " + getCondition() + "") --> Line_53 $$ prestm.setDate(1, sqlDate) [FD]
Line_47 $$ prestm = connection.prepareStatement("INSERT INTO " + getDestination() + " SELECT * FROM " + getOrigin() + " WHERE " + getCondition()) --> Line_53 $$ prestm.setDate(1, sqlDate) [FD]
Line_52 $$ prestm = connection.prepareStatement("DELETE FROM " + getOrigin() + " WHERE " + getCondition()) --> Line_53 $$ prestm.setDate(1, sqlDate) [FD]
Line_39 $$ java.sql.Date sqlDate = new java.sql.Date(date.getTime()) --> Line_53 $$ prestm.setDate(1, sqlDate) [FD]
Line_45 $$ if (currentRows > 0) --> Line_54 $$ rows = prestm.executeUpdate() [CD]
Line_49 $$ int rows = prestm.executeUpdate() --> Line_54 $$ rows = prestm.executeUpdate() [FD]
Line_4 $$ PreparedStatement prestm = null --> Line_54 $$ rows = prestm.executeUpdate() [FD]
Line_10 $$ prestm = connection.prepareStatement("show tables from " + schema + " like '" + getDestination() + "';") --> Line_54 $$ rows = prestm.executeUpdate() [FD]
Line_17 $$ prestm = connection.prepareStatement("show create table " + getOrigin() + ";") --> Line_54 $$ rows = prestm.executeUpdate() [FD]
Line_38 $$ prestm = connection.prepareStatement("select count(*) from " + getOrigin() + " where " + getCondition() + "") --> Line_54 $$ rows = prestm.executeUpdate() [FD]
Line_47 $$ prestm = connection.prepareStatement("INSERT INTO " + getDestination() + " SELECT * FROM " + getOrigin() + " WHERE " + getCondition()) --> Line_54 $$ rows = prestm.executeUpdate() [FD]
Line_52 $$ prestm = connection.prepareStatement("DELETE FROM " + getOrigin() + " WHERE " + getCondition()) --> Line_54 $$ rows = prestm.executeUpdate() [FD]
Line_45 $$ if (currentRows > 0) --> Line_55 $$ prestm.close() [CD]
Line_4 $$ PreparedStatement prestm = null --> Line_55 $$ prestm.close() [FD]
Line_10 $$ prestm = connection.prepareStatement("show tables from " + schema + " like '" + getDestination() + "';") --> Line_55 $$ prestm.close() [FD]
Line_17 $$ prestm = connection.prepareStatement("show create table " + getOrigin() + ";") --> Line_55 $$ prestm.close() [FD]
Line_38 $$ prestm = connection.prepareStatement("select count(*) from " + getOrigin() + " where " + getCondition() + "") --> Line_55 $$ prestm.close() [FD]
Line_47 $$ prestm = connection.prepareStatement("INSERT INTO " + getDestination() + " SELECT * FROM " + getOrigin() + " WHERE " + getCondition()) --> Line_55 $$ prestm.close() [FD]
Line_52 $$ prestm = connection.prepareStatement("DELETE FROM " + getOrigin() + " WHERE " + getCondition()) --> Line_55 $$ prestm.close() [FD]
Line_45 $$ if (currentRows > 0) --> Line_56 $$ connection.commit() [CD]
Line_3 $$ Connection connection = null --> Line_56 $$ connection.commit() [FD]
Line_8 $$ connection = DriverManager.getConnection(url, username, password) --> Line_56 $$ connection.commit() [FD]
Line_45 $$ if (currentRows > 0) --> Line_57 $$ logger.info(rows + " rows deleted") [CD]
Line_45 $$ if (currentRows > 0) --> Line_58 $$ logger.info("no backup need") [CD]
Line_3 $$ Connection connection = null --> Line_64 $$ connection.rollback() [FD]
Line_8 $$ connection = DriverManager.getConnection(url, username, password) --> Line_64 $$ connection.rollback() [FD]
Line_3 $$ Connection connection = null --> Line_71 $$ connection.rollback() [FD]
Line_8 $$ connection = DriverManager.getConnection(url, username, password) --> Line_71 $$ connection.rollback() [FD]
Line_4 $$ PreparedStatement prestm = null --> Line_76 $$ if (prestm != null) [FD]
Line_10 $$ prestm = connection.prepareStatement("show tables from " + schema + " like '" + getDestination() + "';") --> Line_76 $$ if (prestm != null) [FD]
Line_17 $$ prestm = connection.prepareStatement("show create table " + getOrigin() + ";") --> Line_76 $$ if (prestm != null) [FD]
Line_38 $$ prestm = connection.prepareStatement("select count(*) from " + getOrigin() + " where " + getCondition() + "") --> Line_76 $$ if (prestm != null) [FD]
Line_47 $$ prestm = connection.prepareStatement("INSERT INTO " + getDestination() + " SELECT * FROM " + getOrigin() + " WHERE " + getCondition()) --> Line_76 $$ if (prestm != null) [FD]
Line_52 $$ prestm = connection.prepareStatement("DELETE FROM " + getOrigin() + " WHERE " + getCondition()) --> Line_76 $$ if (prestm != null) [FD]
Line_3 $$ Connection connection = null --> Line_80 $$ if (connection != null) [FD]
Line_8 $$ connection = DriverManager.getConnection(url, username, password) --> Line_80 $$ if (connection != null) [FD]
