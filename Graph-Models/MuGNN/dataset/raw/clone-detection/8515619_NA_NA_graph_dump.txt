Line_2 $$ public ResponseStatus submit(Collection<SubmissionData> data) throws IOException --> Line_3 $$ if (sessionId == null) [CD]
Line_2 $$ public ResponseStatus submit(Collection<SubmissionData> data) throws IOException --> Line_4 $$ if (data.size() > 50) [CD]
Line_2 $$ public ResponseStatus submit(Collection<SubmissionData> data) throws IOException --> Line_4 $$ if (data.size() > 50) [FD]
Line_2 $$ public ResponseStatus submit(Collection<SubmissionData> data) throws IOException --> Line_5 $$ StringBuilder builder = new StringBuilder(data.size() * 100) [CD]
Line_2 $$ public ResponseStatus submit(Collection<SubmissionData> data) throws IOException --> Line_5 $$ StringBuilder builder = new StringBuilder(data.size() * 100) [FD]
Line_2 $$ public ResponseStatus submit(Collection<SubmissionData> data) throws IOException --> Line_6 $$ int index = 0 [CD]
Line_5 $$ StringBuilder builder = new StringBuilder(data.size() * 100) --> Line_8 $$ builder.append(submissionData.toString(sessionId, index)) [FD]
Line_7 $$ for (SubmissionData submissionData : data) --> Line_8 $$ builder.append(submissionData.toString(sessionId, index)) [FD]
Line_6 $$ int index = 0 --> Line_8 $$ builder.append(submissionData.toString(sessionId, index)) [FD]
Line_5 $$ StringBuilder builder = new StringBuilder(data.size() * 100) --> Line_9 $$ builder.append('\n') [FD]
Line_6 $$ int index = 0 --> Line_10 $$ index++ [FD]
Line_2 $$ public ResponseStatus submit(Collection<SubmissionData> data) throws IOException --> Line_12 $$ String body = builder.toString() [CD]
Line_5 $$ StringBuilder builder = new StringBuilder(data.size() * 100) --> Line_12 $$ String body = builder.toString() [FD]
Line_2 $$ public ResponseStatus submit(Collection<SubmissionData> data) throws IOException --> Line_13 $$ if (Caller.getInstance().isDebugMode()) [CD]
Line_2 $$ public ResponseStatus submit(Collection<SubmissionData> data) throws IOException --> Line_14 $$ HttpURLConnection urlConnection = Caller.getInstance().openConnection(submissionUrl) [CD]
Line_2 $$ public ResponseStatus submit(Collection<SubmissionData> data) throws IOException --> Line_15 $$ urlConnection.setRequestMethod("POST") [CD]
Line_14 $$ HttpURLConnection urlConnection = Caller.getInstance().openConnection(submissionUrl) --> Line_15 $$ urlConnection.setRequestMethod("POST") [FD]
Line_2 $$ public ResponseStatus submit(Collection<SubmissionData> data) throws IOException --> Line_16 $$ urlConnection.setDoOutput(true) [CD]
Line_14 $$ HttpURLConnection urlConnection = Caller.getInstance().openConnection(submissionUrl) --> Line_16 $$ urlConnection.setDoOutput(true) [FD]
Line_2 $$ public ResponseStatus submit(Collection<SubmissionData> data) throws IOException --> Line_17 $$ OutputStream outputStream = urlConnection.getOutputStream() [CD]
Line_14 $$ HttpURLConnection urlConnection = Caller.getInstance().openConnection(submissionUrl) --> Line_17 $$ OutputStream outputStream = urlConnection.getOutputStream() [FD]
Line_2 $$ public ResponseStatus submit(Collection<SubmissionData> data) throws IOException --> Line_18 $$ BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(outputStream)) [CD]
Line_2 $$ public ResponseStatus submit(Collection<SubmissionData> data) throws IOException --> Line_19 $$ writer.write(body) [CD]
Line_18 $$ BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(outputStream)) --> Line_19 $$ writer.write(body) [FD]
Line_12 $$ String body = builder.toString() --> Line_19 $$ writer.write(body) [FD]
Line_2 $$ public ResponseStatus submit(Collection<SubmissionData> data) throws IOException --> Line_20 $$ writer.close() [CD]
Line_18 $$ BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(outputStream)) --> Line_20 $$ writer.close() [FD]
Line_2 $$ public ResponseStatus submit(Collection<SubmissionData> data) throws IOException --> Line_21 $$ InputStream is = urlConnection.getInputStream() [CD]
Line_14 $$ HttpURLConnection urlConnection = Caller.getInstance().openConnection(submissionUrl) --> Line_21 $$ InputStream is = urlConnection.getInputStream() [FD]
Line_2 $$ public ResponseStatus submit(Collection<SubmissionData> data) throws IOException --> Line_22 $$ BufferedReader r = new BufferedReader(new InputStreamReader(is)) [CD]
Line_2 $$ public ResponseStatus submit(Collection<SubmissionData> data) throws IOException --> Line_23 $$ String status = r.readLine() [CD]
Line_22 $$ BufferedReader r = new BufferedReader(new InputStreamReader(is)) --> Line_23 $$ String status = r.readLine() [FD]
Line_2 $$ public ResponseStatus submit(Collection<SubmissionData> data) throws IOException --> Line_24 $$ r.close() [CD]
Line_22 $$ BufferedReader r = new BufferedReader(new InputStreamReader(is)) --> Line_24 $$ r.close() [FD]
Line_2 $$ public ResponseStatus submit(Collection<SubmissionData> data) throws IOException --> Line_25 $$ int statusCode = ResponseStatus.codeForStatus(status) [CD]
Line_23 $$ String status = r.readLine() --> Line_25 $$ int statusCode = ResponseStatus.codeForStatus(status) [FD]
Line_2 $$ public ResponseStatus submit(Collection<SubmissionData> data) throws IOException --> Line_26 $$ if (statusCode == ResponseStatus.FAILED) [CD]
Line_25 $$ int statusCode = ResponseStatus.codeForStatus(status) --> Line_26 $$ if (statusCode == ResponseStatus.FAILED) [FD]
Line_26 $$ if (statusCode == ResponseStatus.FAILED) --> Line_27 $$ return new ResponseStatus(statusCode, status.substring(status.indexOf(' ') + 1)) [CD]
Line_23 $$ String status = r.readLine() --> Line_27 $$ return new ResponseStatus(statusCode, status.substring(status.indexOf(' ') + 1)) [FD]
Line_2 $$ public ResponseStatus submit(Collection<SubmissionData> data) throws IOException --> Line_29 $$ return new ResponseStatus(statusCode) [CD]
