Line_2 $$ public static String getServerVersion() throws IOException --> Line_3 $$ URL url [CD]
Line_2 $$ public static String getServerVersion() throws IOException --> Line_4 $$ url = new URL(CHECKVERSIONURL) [CD]
Line_3 $$ URL url --> Line_4 $$ url = new URL(CHECKVERSIONURL) [FD]
Line_2 $$ public static String getServerVersion() throws IOException --> Line_5 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() [CD]
Line_3 $$ URL url --> Line_5 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() [FD]
Line_4 $$ url = new URL(CHECKVERSIONURL) --> Line_5 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() [FD]
Line_2 $$ public static String getServerVersion() throws IOException --> Line_6 $$ httpURLConnection.setDoInput(true) [CD]
Line_5 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() --> Line_6 $$ httpURLConnection.setDoInput(true) [FD]
Line_2 $$ public static String getServerVersion() throws IOException --> Line_7 $$ httpURLConnection.setDoOutput(false) [CD]
Line_5 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() --> Line_7 $$ httpURLConnection.setDoOutput(false) [FD]
Line_2 $$ public static String getServerVersion() throws IOException --> Line_8 $$ httpURLConnection.setUseCaches(false) [CD]
Line_5 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() --> Line_8 $$ httpURLConnection.setUseCaches(false) [FD]
Line_2 $$ public static String getServerVersion() throws IOException --> Line_9 $$ httpURLConnection.setRequestMethod("GET") [CD]
Line_5 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() --> Line_9 $$ httpURLConnection.setRequestMethod("GET") [FD]
Line_2 $$ public static String getServerVersion() throws IOException --> Line_10 $$ httpURLConnection.connect() [CD]
Line_5 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() --> Line_10 $$ httpURLConnection.connect() [FD]
Line_2 $$ public static String getServerVersion() throws IOException --> Line_11 $$ InputStream in = httpURLConnection.getInputStream() [CD]
Line_5 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() --> Line_11 $$ InputStream in = httpURLConnection.getInputStream() [FD]
Line_2 $$ public static String getServerVersion() throws IOException --> Line_12 $$ ByteArrayOutputStream out = new ByteArrayOutputStream() [CD]
Line_2 $$ public static String getServerVersion() throws IOException --> Line_13 $$ IOUtils.copy(in, out) [CD]
Line_11 $$ InputStream in = httpURLConnection.getInputStream() --> Line_13 $$ IOUtils.copy(in, out) [FD]
Line_12 $$ ByteArrayOutputStream out = new ByteArrayOutputStream() --> Line_13 $$ IOUtils.copy(in, out) [FD]
Line_2 $$ public static String getServerVersion() throws IOException --> Line_14 $$ out.flush() [CD]
Line_12 $$ ByteArrayOutputStream out = new ByteArrayOutputStream() --> Line_14 $$ out.flush() [FD]
Line_2 $$ public static String getServerVersion() throws IOException --> Line_15 $$ IOUtils.closeQuietly(in) [CD]
Line_11 $$ InputStream in = httpURLConnection.getInputStream() --> Line_15 $$ IOUtils.closeQuietly(in) [FD]
Line_2 $$ public static String getServerVersion() throws IOException --> Line_16 $$ IOUtils.closeQuietly(out) [CD]
Line_12 $$ ByteArrayOutputStream out = new ByteArrayOutputStream() --> Line_16 $$ IOUtils.closeQuietly(out) [FD]
Line_2 $$ public static String getServerVersion() throws IOException --> Line_17 $$ String buffer [CD]
Line_2 $$ public static String getServerVersion() throws IOException --> Line_18 $$ String[] lines [CD]
Line_2 $$ public static String getServerVersion() throws IOException --> Line_19 $$ String version = "" [CD]
Line_2 $$ public static String getServerVersion() throws IOException --> Line_20 $$ buffer = out.toString() [CD]
Line_17 $$ String buffer --> Line_20 $$ buffer = out.toString() [FD]
Line_12 $$ ByteArrayOutputStream out = new ByteArrayOutputStream() --> Line_20 $$ buffer = out.toString() [FD]
Line_2 $$ public static String getServerVersion() throws IOException --> Line_21 $$ lines = StringUtils.split(buffer) [CD]
Line_18 $$ String[] lines --> Line_21 $$ lines = StringUtils.split(buffer) [FD]
Line_17 $$ String buffer --> Line_21 $$ lines = StringUtils.split(buffer) [FD]
Line_20 $$ buffer = out.toString() --> Line_21 $$ lines = StringUtils.split(buffer) [FD]
Line_2 $$ public static String getServerVersion() throws IOException --> Line_22 $$ for (int i = 0; i < lines.length; i++) [CD]
Line_22 $$ for (int i = 0; i < lines.length; i++) --> Line_23 $$ if (lines[i].startsWith("version=")) [CD]
Line_23 $$ if (lines[i].startsWith("version=")) --> Line_24 $$ version = lines[i].substring(8).trim() [CD]
Line_19 $$ String version = "" --> Line_24 $$ version = lines[i].substring(8).trim() [FD]
Line_2 $$ public static String getServerVersion() throws IOException --> Line_28 $$ return version [CD]
