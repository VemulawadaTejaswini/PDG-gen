Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_4 $$ if (charset == null) [FD]
Line_4 $$ if (charset == null) --> Line_5 $$ charset = MimeUtility.javaCharset(Charset.defaultCharset().displayName()) [CD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_5 $$ charset = MimeUtility.javaCharset(Charset.defaultCharset().displayName()) [FD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_7 $$ if ((body == null) || body.trim().equals("")) [FD]
Line_7 $$ if ((body == null) || body.trim().equals("")) --> Line_8 $$ body = " " [CD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_8 $$ body = " " [FD]
Line_11 $$ if (isHtml) --> Line_12 $$ email = new HtmlEmail() [CD]
Line_10 $$ Email email = null --> Line_12 $$ email = new HtmlEmail() [FD]
Line_11 $$ if (isHtml) --> Line_14 $$ email = new MultiPartEmail() [CD]
Line_10 $$ Email email = null --> Line_14 $$ email = new MultiPartEmail() [FD]
Line_12 $$ email = new HtmlEmail() --> Line_14 $$ email = new MultiPartEmail() [FD]
Line_10 $$ Email email = null --> Line_16 $$ email.setCharset(charset) [FD]
Line_12 $$ email = new HtmlEmail() --> Line_16 $$ email.setCharset(charset) [FD]
Line_14 $$ email = new MultiPartEmail() --> Line_16 $$ email.setCharset(charset) [FD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_16 $$ email.setCharset(charset) [FD]
Line_5 $$ charset = MimeUtility.javaCharset(Charset.defaultCharset().displayName()) --> Line_16 $$ email.setCharset(charset) [FD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_17 $$ Users user = getUser(hsession, repositoryName) [FD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_18 $$ Identity identity = getIdentity(hsession, ideIdint, user) [FD]
Line_17 $$ Users user = getUser(hsession, repositoryName) --> Line_18 $$ Identity identity = getIdentity(hsession, ideIdint, user) [FD]
Line_18 $$ Identity identity = getIdentity(hsession, ideIdint, user) --> Line_19 $$ InternetAddress _returnPath = new InternetAddress(identity.getIdeEmail(), identity.getIdeName()) [FD]
Line_18 $$ Identity identity = getIdentity(hsession, ideIdint, user) --> Line_20 $$ InternetAddress _from = new InternetAddress(identity.getIdeEmail(), identity.getIdeName()) [FD]
Line_18 $$ Identity identity = getIdentity(hsession, ideIdint, user) --> Line_21 $$ InternetAddress _replyTo = new InternetAddress(identity.getIdeReplyTo(), identity.getIdeName()) [FD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_22 $$ InternetAddress[] _to = MessageUtilities.encodeAddresses(to, null) [FD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_23 $$ InternetAddress[] _cc = MessageUtilities.encodeAddresses(cc, null) [FD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_24 $$ InternetAddress[] _bcc = MessageUtilities.encodeAddresses(bcc, null) [FD]
Line_20 $$ InternetAddress _from = new InternetAddress(identity.getIdeEmail(), identity.getIdeName()) --> Line_25 $$ if (_from != null) [FD]
Line_25 $$ if (_from != null) --> Line_26 $$ email.setFrom(_from.getAddress(), _from.getPersonal()) [CD]
Line_10 $$ Email email = null --> Line_26 $$ email.setFrom(_from.getAddress(), _from.getPersonal()) [FD]
Line_12 $$ email = new HtmlEmail() --> Line_26 $$ email.setFrom(_from.getAddress(), _from.getPersonal()) [FD]
Line_14 $$ email = new MultiPartEmail() --> Line_26 $$ email.setFrom(_from.getAddress(), _from.getPersonal()) [FD]
Line_20 $$ InternetAddress _from = new InternetAddress(identity.getIdeEmail(), identity.getIdeName()) --> Line_26 $$ email.setFrom(_from.getAddress(), _from.getPersonal()) [FD]
Line_19 $$ InternetAddress _returnPath = new InternetAddress(identity.getIdeEmail(), identity.getIdeName()) --> Line_28 $$ if (_returnPath != null) [FD]
Line_28 $$ if (_returnPath != null) --> Line_29 $$ email.addHeader("Return-Path", _returnPath.getAddress()) [CD]
Line_10 $$ Email email = null --> Line_29 $$ email.addHeader("Return-Path", _returnPath.getAddress()) [FD]
Line_12 $$ email = new HtmlEmail() --> Line_29 $$ email.addHeader("Return-Path", _returnPath.getAddress()) [FD]
Line_14 $$ email = new MultiPartEmail() --> Line_29 $$ email.addHeader("Return-Path", _returnPath.getAddress()) [FD]
Line_19 $$ InternetAddress _returnPath = new InternetAddress(identity.getIdeEmail(), identity.getIdeName()) --> Line_29 $$ email.addHeader("Return-Path", _returnPath.getAddress()) [FD]
Line_28 $$ if (_returnPath != null) --> Line_30 $$ email.addHeader("Errors-To", _returnPath.getAddress()) [CD]
Line_10 $$ Email email = null --> Line_30 $$ email.addHeader("Errors-To", _returnPath.getAddress()) [FD]
Line_12 $$ email = new HtmlEmail() --> Line_30 $$ email.addHeader("Errors-To", _returnPath.getAddress()) [FD]
Line_14 $$ email = new MultiPartEmail() --> Line_30 $$ email.addHeader("Errors-To", _returnPath.getAddress()) [FD]
Line_19 $$ InternetAddress _returnPath = new InternetAddress(identity.getIdeEmail(), identity.getIdeName()) --> Line_30 $$ email.addHeader("Errors-To", _returnPath.getAddress()) [FD]
Line_28 $$ if (_returnPath != null) --> Line_31 $$ email.addHeader("X-Errors-To", _returnPath.getAddress()) [CD]
Line_10 $$ Email email = null --> Line_31 $$ email.addHeader("X-Errors-To", _returnPath.getAddress()) [FD]
Line_12 $$ email = new HtmlEmail() --> Line_31 $$ email.addHeader("X-Errors-To", _returnPath.getAddress()) [FD]
Line_14 $$ email = new MultiPartEmail() --> Line_31 $$ email.addHeader("X-Errors-To", _returnPath.getAddress()) [FD]
Line_19 $$ InternetAddress _returnPath = new InternetAddress(identity.getIdeEmail(), identity.getIdeName()) --> Line_31 $$ email.addHeader("X-Errors-To", _returnPath.getAddress()) [FD]
Line_21 $$ InternetAddress _replyTo = new InternetAddress(identity.getIdeReplyTo(), identity.getIdeName()) --> Line_33 $$ if (_replyTo != null) [FD]
Line_33 $$ if (_replyTo != null) --> Line_34 $$ email.addReplyTo(_replyTo.getAddress(), _replyTo.getPersonal()) [CD]
Line_10 $$ Email email = null --> Line_34 $$ email.addReplyTo(_replyTo.getAddress(), _replyTo.getPersonal()) [FD]
Line_12 $$ email = new HtmlEmail() --> Line_34 $$ email.addReplyTo(_replyTo.getAddress(), _replyTo.getPersonal()) [FD]
Line_14 $$ email = new MultiPartEmail() --> Line_34 $$ email.addReplyTo(_replyTo.getAddress(), _replyTo.getPersonal()) [FD]
Line_21 $$ InternetAddress _replyTo = new InternetAddress(identity.getIdeReplyTo(), identity.getIdeName()) --> Line_34 $$ email.addReplyTo(_replyTo.getAddress(), _replyTo.getPersonal()) [FD]
Line_36 $$ if ((_to != null) && (_to.length > 0)) --> Line_37 $$ HashSet aux = new HashSet(_to.length) [CD]
Line_36 $$ if ((_to != null) && (_to.length > 0)) --> Line_38 $$ Collections.addAll(aux, _to) [CD]
Line_37 $$ HashSet aux = new HashSet(_to.length) --> Line_38 $$ Collections.addAll(aux, _to) [FD]
Line_22 $$ InternetAddress[] _to = MessageUtilities.encodeAddresses(to, null) --> Line_38 $$ Collections.addAll(aux, _to) [FD]
Line_36 $$ if ((_to != null) && (_to.length > 0)) --> Line_39 $$ email.setTo(aux) [CD]
Line_10 $$ Email email = null --> Line_39 $$ email.setTo(aux) [FD]
Line_12 $$ email = new HtmlEmail() --> Line_39 $$ email.setTo(aux) [FD]
Line_14 $$ email = new MultiPartEmail() --> Line_39 $$ email.setTo(aux) [FD]
Line_37 $$ HashSet aux = new HashSet(_to.length) --> Line_39 $$ email.setTo(aux) [FD]
Line_41 $$ if ((_cc != null) && (_cc.length > 0)) --> Line_43 $$ Collections.addAll(aux, _cc) [CD]
Line_37 $$ HashSet aux = new HashSet(_to.length) --> Line_43 $$ Collections.addAll(aux, _cc) [FD]
Line_23 $$ InternetAddress[] _cc = MessageUtilities.encodeAddresses(cc, null) --> Line_43 $$ Collections.addAll(aux, _cc) [FD]
Line_41 $$ if ((_cc != null) && (_cc.length > 0)) --> Line_44 $$ email.setCc(aux) [CD]
Line_10 $$ Email email = null --> Line_44 $$ email.setCc(aux) [FD]
Line_12 $$ email = new HtmlEmail() --> Line_44 $$ email.setCc(aux) [FD]
Line_14 $$ email = new MultiPartEmail() --> Line_44 $$ email.setCc(aux) [FD]
Line_37 $$ HashSet aux = new HashSet(_to.length) --> Line_44 $$ email.setCc(aux) [FD]
Line_46 $$ if ((_bcc != null) && (_bcc.length > 0)) --> Line_48 $$ Collections.addAll(aux, _bcc) [CD]
Line_37 $$ HashSet aux = new HashSet(_to.length) --> Line_48 $$ Collections.addAll(aux, _bcc) [FD]
Line_24 $$ InternetAddress[] _bcc = MessageUtilities.encodeAddresses(bcc, null) --> Line_48 $$ Collections.addAll(aux, _bcc) [FD]
Line_46 $$ if ((_bcc != null) && (_bcc.length > 0)) --> Line_49 $$ email.setBcc(aux) [CD]
Line_10 $$ Email email = null --> Line_49 $$ email.setBcc(aux) [FD]
Line_12 $$ email = new HtmlEmail() --> Line_49 $$ email.setBcc(aux) [FD]
Line_14 $$ email = new MultiPartEmail() --> Line_49 $$ email.setBcc(aux) [FD]
Line_37 $$ HashSet aux = new HashSet(_to.length) --> Line_49 $$ email.setBcc(aux) [FD]
Line_10 $$ Email email = null --> Line_51 $$ email.setSubject(subject) [FD]
Line_12 $$ email = new HtmlEmail() --> Line_51 $$ email.setSubject(subject) [FD]
Line_14 $$ email = new MultiPartEmail() --> Line_51 $$ email.setSubject(subject) [FD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_51 $$ email.setSubject(subject) [FD]
Line_10 $$ Email email = null --> Line_53 $$ email.setSentDate(now) [FD]
Line_12 $$ email = new HtmlEmail() --> Line_53 $$ email.setSentDate(now) [FD]
Line_14 $$ email = new MultiPartEmail() --> Line_53 $$ email.setSentDate(now) [FD]
Line_52 $$ Date now = new Date() --> Line_53 $$ email.setSentDate(now) [FD]
Line_54 $$ File dir = new File(System.getProperty("user.home") + File.separator + "tmp") --> Line_55 $$ if (!dir.exists()) [FD]
Line_55 $$ if (!dir.exists()) --> Line_56 $$ dir.mkdir() [CD]
Line_54 $$ File dir = new File(System.getProperty("user.home") + File.separator + "tmp") --> Line_56 $$ dir.mkdir() [FD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_58 $$ if ((attachments != null) && (attachments.size() > 0)) [FD]
Line_58 $$ if ((attachments != null) && (attachments.size() > 0)) --> Line_59 $$ for (int i = 0; i < attachments.size(); i++) [CD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_59 $$ for (int i = 0; i < attachments.size(); i++) [FD]
Line_59 $$ for (int i = 0; i < attachments.size(); i++) --> Line_60 $$ ByteArrayInputStream bais = null [CD]
Line_59 $$ for (int i = 0; i < attachments.size(); i++) --> Line_61 $$ FileOutputStream fos = null [CD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_63 $$ MailPartObj obj = (MailPartObj) attachments.get(i) [FD]
Line_59 $$ for (int i = 0; i < attachments.size(); i++) --> Line_63 $$ MailPartObj obj = (MailPartObj) attachments.get(i) [FD]
Line_63 $$ MailPartObj obj = (MailPartObj) attachments.get(i) --> Line_64 $$ File file = new File(dir, obj.getName()) [FD]
Line_60 $$ ByteArrayInputStream bais = null --> Line_65 $$ bais = new ByteArrayInputStream(obj.getAttachent()) [FD]
Line_63 $$ MailPartObj obj = (MailPartObj) attachments.get(i) --> Line_65 $$ bais = new ByteArrayInputStream(obj.getAttachent()) [FD]
Line_61 $$ FileOutputStream fos = null --> Line_66 $$ fos = new FileOutputStream(file) [FD]
Line_60 $$ ByteArrayInputStream bais = null --> Line_67 $$ IOUtils.copy(bais, fos) [FD]
Line_65 $$ bais = new ByteArrayInputStream(obj.getAttachent()) --> Line_67 $$ IOUtils.copy(bais, fos) [FD]
Line_61 $$ FileOutputStream fos = null --> Line_67 $$ IOUtils.copy(bais, fos) [FD]
Line_66 $$ fos = new FileOutputStream(file) --> Line_67 $$ IOUtils.copy(bais, fos) [FD]
Line_68 $$ EmailAttachment attachment = new EmailAttachment() --> Line_69 $$ attachment.setPath(file.getPath()) [FD]
Line_64 $$ File file = new File(dir, obj.getName()) --> Line_69 $$ attachment.setPath(file.getPath()) [FD]
Line_68 $$ EmailAttachment attachment = new EmailAttachment() --> Line_70 $$ attachment.setDisposition(EmailAttachment.ATTACHMENT) [FD]
Line_68 $$ EmailAttachment attachment = new EmailAttachment() --> Line_71 $$ attachment.setDescription("File Attachment: " + file.getName()) [FD]
Line_64 $$ File file = new File(dir, obj.getName()) --> Line_71 $$ attachment.setDescription("File Attachment: " + file.getName()) [FD]
Line_68 $$ EmailAttachment attachment = new EmailAttachment() --> Line_72 $$ attachment.setName(file.getName()) [FD]
Line_64 $$ File file = new File(dir, obj.getName()) --> Line_72 $$ attachment.setName(file.getName()) [FD]
Line_10 $$ Email email = null --> Line_73 $$ if (email instanceof MultiPartEmail) [FD]
Line_12 $$ email = new HtmlEmail() --> Line_73 $$ if (email instanceof MultiPartEmail) [FD]
Line_14 $$ email = new MultiPartEmail() --> Line_73 $$ if (email instanceof MultiPartEmail) [FD]
Line_73 $$ if (email instanceof MultiPartEmail) --> Line_74 $$ ((MultiPartEmail) email).attach(attachment) [CD]
Line_68 $$ EmailAttachment attachment = new EmailAttachment() --> Line_74 $$ ((MultiPartEmail) email).attach(attachment) [FD]
Line_60 $$ ByteArrayInputStream bais = null --> Line_78 $$ IOUtils.closeQuietly(bais) [FD]
Line_65 $$ bais = new ByteArrayInputStream(obj.getAttachent()) --> Line_78 $$ IOUtils.closeQuietly(bais) [FD]
Line_61 $$ FileOutputStream fos = null --> Line_79 $$ IOUtils.closeQuietly(fos) [FD]
Line_66 $$ fos = new FileOutputStream(file) --> Line_79 $$ IOUtils.closeQuietly(fos) [FD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_83 $$ if (headers != null) [FD]
Line_83 $$ if (headers != null) --> Line_84 $$ Header xheader [CD]
Line_83 $$ if (headers != null) --> Line_85 $$ Enumeration xe = headers.getAllHeaders() [CD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_85 $$ Enumeration xe = headers.getAllHeaders() [FD]
Line_83 $$ if (headers != null) --> Line_86 $$ for (; xe.hasMoreElements(); ) [CD]
Line_85 $$ Enumeration xe = headers.getAllHeaders() --> Line_86 $$ for (; xe.hasMoreElements(); ) [FD]
Line_86 $$ for (; xe.hasMoreElements(); ) --> Line_87 $$ xheader = (Header) xe.nextElement() [CD]
Line_84 $$ Header xheader --> Line_87 $$ xheader = (Header) xe.nextElement() [FD]
Line_85 $$ Enumeration xe = headers.getAllHeaders() --> Line_87 $$ xheader = (Header) xe.nextElement() [FD]
Line_86 $$ for (; xe.hasMoreElements(); ) --> Line_88 $$ if (xheader.getName().equals(RFC2822Headers.IN_REPLY_TO)) [CD]
Line_87 $$ xheader = (Header) xe.nextElement() --> Line_88 $$ if (xheader.getName().equals(RFC2822Headers.IN_REPLY_TO)) [FD]
Line_84 $$ Header xheader --> Line_88 $$ if (xheader.getName().equals(RFC2822Headers.IN_REPLY_TO)) [FD]
Line_88 $$ if (xheader.getName().equals(RFC2822Headers.IN_REPLY_TO)) --> Line_89 $$ email.addHeader(xheader.getName(), xheader.getValue()) [CD]
Line_10 $$ Email email = null --> Line_89 $$ email.addHeader(xheader.getName(), xheader.getValue()) [FD]
Line_12 $$ email = new HtmlEmail() --> Line_89 $$ email.addHeader(xheader.getName(), xheader.getValue()) [FD]
Line_14 $$ email = new MultiPartEmail() --> Line_89 $$ email.addHeader(xheader.getName(), xheader.getValue()) [FD]
Line_87 $$ xheader = (Header) xe.nextElement() --> Line_89 $$ email.addHeader(xheader.getName(), xheader.getValue()) [FD]
Line_84 $$ Header xheader --> Line_89 $$ email.addHeader(xheader.getName(), xheader.getValue()) [FD]
Line_88 $$ if (xheader.getName().equals(RFC2822Headers.IN_REPLY_TO)) --> Line_90 $$ if (xheader.getName().equals(RFC2822Headers.REFERENCES)) [CD]
Line_87 $$ xheader = (Header) xe.nextElement() --> Line_90 $$ if (xheader.getName().equals(RFC2822Headers.REFERENCES)) [FD]
Line_84 $$ Header xheader --> Line_90 $$ if (xheader.getName().equals(RFC2822Headers.REFERENCES)) [FD]
Line_90 $$ if (xheader.getName().equals(RFC2822Headers.REFERENCES)) --> Line_91 $$ email.addHeader(xheader.getName(), xheader.getValue()) [CD]
Line_10 $$ Email email = null --> Line_91 $$ email.addHeader(xheader.getName(), xheader.getValue()) [FD]
Line_12 $$ email = new HtmlEmail() --> Line_91 $$ email.addHeader(xheader.getName(), xheader.getValue()) [FD]
Line_14 $$ email = new MultiPartEmail() --> Line_91 $$ email.addHeader(xheader.getName(), xheader.getValue()) [FD]
Line_87 $$ xheader = (Header) xe.nextElement() --> Line_91 $$ email.addHeader(xheader.getName(), xheader.getValue()) [FD]
Line_84 $$ Header xheader --> Line_91 $$ email.addHeader(xheader.getName(), xheader.getValue()) [FD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_95 $$ if (priority != null) [FD]
Line_95 $$ if (priority != null) --> Line_96 $$ if (priority.equals("high")) [CD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_96 $$ if (priority.equals("high")) [FD]
Line_96 $$ if (priority.equals("high")) --> Line_97 $$ email.addHeader("Importance", priority) [CD]
Line_10 $$ Email email = null --> Line_97 $$ email.addHeader("Importance", priority) [FD]
Line_12 $$ email = new HtmlEmail() --> Line_97 $$ email.addHeader("Importance", priority) [FD]
Line_14 $$ email = new MultiPartEmail() --> Line_97 $$ email.addHeader("Importance", priority) [FD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_97 $$ email.addHeader("Importance", priority) [FD]
Line_96 $$ if (priority.equals("high")) --> Line_98 $$ email.addHeader("X-priority", "1") [CD]
Line_10 $$ Email email = null --> Line_98 $$ email.addHeader("X-priority", "1") [FD]
Line_12 $$ email = new HtmlEmail() --> Line_98 $$ email.addHeader("X-priority", "1") [FD]
Line_14 $$ email = new MultiPartEmail() --> Line_98 $$ email.addHeader("X-priority", "1") [FD]
Line_96 $$ if (priority.equals("high")) --> Line_99 $$ if (priority.equals("low")) [CD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_99 $$ if (priority.equals("low")) [FD]
Line_99 $$ if (priority.equals("low")) --> Line_100 $$ email.addHeader("Importance", priority) [CD]
Line_10 $$ Email email = null --> Line_100 $$ email.addHeader("Importance", priority) [FD]
Line_12 $$ email = new HtmlEmail() --> Line_100 $$ email.addHeader("Importance", priority) [FD]
Line_14 $$ email = new MultiPartEmail() --> Line_100 $$ email.addHeader("Importance", priority) [FD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_100 $$ email.addHeader("Importance", priority) [FD]
Line_99 $$ if (priority.equals("low")) --> Line_101 $$ email.addHeader("X-priority", "5") [CD]
Line_10 $$ Email email = null --> Line_101 $$ email.addHeader("X-priority", "5") [FD]
Line_12 $$ email = new HtmlEmail() --> Line_101 $$ email.addHeader("X-priority", "5") [FD]
Line_14 $$ email = new MultiPartEmail() --> Line_101 $$ email.addHeader("X-priority", "5") [FD]
Line_10 $$ Email email = null --> Line_104 $$ if (email instanceof HtmlEmail) [FD]
Line_12 $$ email = new HtmlEmail() --> Line_104 $$ if (email instanceof HtmlEmail) [FD]
Line_14 $$ email = new MultiPartEmail() --> Line_104 $$ if (email instanceof HtmlEmail) [FD]
Line_104 $$ if (email instanceof HtmlEmail) --> Line_105 $$ ((HtmlEmail) email).setHtmlMsg(body) [CD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_105 $$ ((HtmlEmail) email).setHtmlMsg(body) [FD]
Line_8 $$ body = " " --> Line_105 $$ ((HtmlEmail) email).setHtmlMsg(body) [FD]
Line_104 $$ if (email instanceof HtmlEmail) --> Line_107 $$ email.setMsg(body) [CD]
Line_10 $$ Email email = null --> Line_107 $$ email.setMsg(body) [FD]
Line_12 $$ email = new HtmlEmail() --> Line_107 $$ email.setMsg(body) [FD]
Line_14 $$ email = new MultiPartEmail() --> Line_107 $$ email.setMsg(body) [FD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_107 $$ email.setMsg(body) [FD]
Line_8 $$ body = " " --> Line_107 $$ email.setMsg(body) [FD]
Line_10 $$ Email email = null --> Line_109 $$ email.setMailSession(session) [FD]
Line_12 $$ email = new HtmlEmail() --> Line_109 $$ email.setMailSession(session) [FD]
Line_14 $$ email = new MultiPartEmail() --> Line_109 $$ email.setMailSession(session) [FD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_109 $$ email.setMailSession(session) [FD]
Line_10 $$ Email email = null --> Line_110 $$ email.buildMimeMessage() [FD]
Line_12 $$ email = new HtmlEmail() --> Line_110 $$ email.buildMimeMessage() [FD]
Line_14 $$ email = new MultiPartEmail() --> Line_110 $$ email.buildMimeMessage() [FD]
Line_10 $$ Email email = null --> Line_111 $$ MimeMessage mime = email.getMimeMessage() [FD]
Line_12 $$ email = new HtmlEmail() --> Line_111 $$ MimeMessage mime = email.getMimeMessage() [FD]
Line_14 $$ email = new MultiPartEmail() --> Line_111 $$ MimeMessage mime = email.getMimeMessage() [FD]
Line_111 $$ MimeMessage mime = email.getMimeMessage() --> Line_112 $$ int size = MessageUtilities.getMessageSize(mime) [FD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_113 $$ if (!controlQuota(hsession, user, size)) [FD]
Line_17 $$ Users user = getUser(hsession, repositoryName) --> Line_113 $$ if (!controlQuota(hsession, user, size)) [FD]
Line_112 $$ int size = MessageUtilities.getMessageSize(mime) --> Line_113 $$ if (!controlQuota(hsession, user, size)) [FD]
Line_111 $$ MimeMessage mime = email.getMimeMessage() --> Line_116 $$ messageable.storeDraftMessage(getId(), mime, user) [FD]
Line_17 $$ Users user = getUser(hsession, repositoryName) --> Line_116 $$ messageable.storeDraftMessage(getId(), mime, user) [FD]
Line_2 $$ public void saveDraft(org.hibernate.Session hsession, Session session, String repositoryName, int ideIdint, String to, String cc, String bcc, String subject, String body, Vector attachments, boolean isHtml, String charset, InternetHeaders headers, String priority) throws MailException --> Line_127 $$ GeneralOperations.closeHibernateSession(hsession) [FD]
