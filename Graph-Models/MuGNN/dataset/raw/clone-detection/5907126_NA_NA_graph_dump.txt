Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_3 $$ String contentId = req.getParameter(CONTENT_ID) [CD]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_3 $$ String contentId = req.getParameter(CONTENT_ID) [FD]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_4 $$ String contentType = req.getParameter(CONTENT_TYPE) [CD]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_4 $$ String contentType = req.getParameter(CONTENT_TYPE) [FD]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_5 $$ if (contentId == null || contentType == null) [CD]
Line_5 $$ if (contentId == null || contentType == null) --> Line_6 $$ resp.sendError(HttpServletResponse.SC_BAD_REQUEST, "Content id or content type not specified") [CD]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_6 $$ resp.sendError(HttpServletResponse.SC_BAD_REQUEST, "Content id or content type not specified") [FD]
Line_5 $$ if (contentId == null || contentType == null) --> Line_7 $$ return [CD]
Line_4 $$ String contentType = req.getParameter(CONTENT_TYPE) --> Line_10 $$ switch(ContentType.valueOf(contentType)) [FD]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_12 $$ resp.setContentType("image/jpeg") [FD]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_15 $$ resp.setContentType("audio/mp3") [FD]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_18 $$ resp.setContentType("video/mpeg") [FD]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_24 $$ resp.sendError(HttpServletResponse.SC_BAD_REQUEST, "Invalid content type specified") [FD]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_27 $$ String baseUrl = this.getServletContext().getInitParameter(BASE_URL) [CD]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_28 $$ URL url = new URL(baseUrl + "/" + contentType.toLowerCase() + "/" + contentId) [CD]
Line_4 $$ String contentType = req.getParameter(CONTENT_TYPE) --> Line_28 $$ URL url = new URL(baseUrl + "/" + contentType.toLowerCase() + "/" + contentId) [FD]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_29 $$ URLConnection conn = url.openConnection() [CD]
Line_28 $$ URL url = new URL(baseUrl + "/" + contentType.toLowerCase() + "/" + contentId) --> Line_29 $$ URLConnection conn = url.openConnection() [FD]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_30 $$ resp.setContentLength(conn.getContentLength()) [CD]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_30 $$ resp.setContentLength(conn.getContentLength()) [FD]
Line_29 $$ URLConnection conn = url.openConnection() --> Line_30 $$ resp.setContentLength(conn.getContentLength()) [FD]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_31 $$ IOUtils.copy(conn.getInputStream(), resp.getOutputStream()) [CD]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_31 $$ IOUtils.copy(conn.getInputStream(), resp.getOutputStream()) [FD]
Line_29 $$ URLConnection conn = url.openConnection() --> Line_31 $$ IOUtils.copy(conn.getInputStream(), resp.getOutputStream()) [FD]
