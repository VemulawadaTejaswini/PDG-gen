Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_3 $$ String so = OctopusErrorMessages.UNKNOWN_ERROR [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_4 $$ if (tag_id == null || tag_id.trim().equals("")) [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_4 $$ if (tag_id == null || tag_id.trim().equals("")) [FD]
Line_4 $$ if (tag_id == null || tag_id.trim().equals("")) --> Line_5 $$ return OctopusErrorMessages.TAG_ID_CANT_BE_EMPTY [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_7 $$ if (tag_id.trim().equals(application_code)) [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_7 $$ if (tag_id.trim().equals(application_code)) [FD]
Line_7 $$ if (tag_id.trim().equals(application_code)) --> Line_8 $$ return OctopusErrorMessages.TAG_ID_TOO_SHORT [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_10 $$ if (!StringUtil.isAlphaNumerical(StringUtil.replace(StringUtil.replace(tag_id, "-", ""), "_", ""))) [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_10 $$ if (!StringUtil.isAlphaNumerical(StringUtil.replace(StringUtil.replace(tag_id, "-", ""), "_", ""))) [FD]
Line_10 $$ if (!StringUtil.isAlphaNumerical(StringUtil.replace(StringUtil.replace(tag_id, "-", ""), "_", ""))) --> Line_11 $$ return OctopusErrorMessages.TAG_ID_MUST_BE_ALPHANUMERIC [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_13 $$ if (!tag_id.startsWith(application_code)) [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_13 $$ if (!tag_id.startsWith(application_code)) [FD]
Line_13 $$ if (!tag_id.startsWith(application_code)) --> Line_14 $$ return OctopusErrorMessages.TAG_ID_MUST_START + " " + application_code [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_16 $$ String tag_exist = exist(tag_id) [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_16 $$ String tag_exist = exist(tag_id) [FD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_17 $$ if (!tag_exist.equals(OctopusErrorMessages.DOESNT_ALREADY_EXIST)) [CD]
Line_16 $$ String tag_exist = exist(tag_id) --> Line_17 $$ if (!tag_exist.equals(OctopusErrorMessages.DOESNT_ALREADY_EXIST)) [FD]
Line_17 $$ if (!tag_exist.equals(OctopusErrorMessages.DOESNT_ALREADY_EXIST)) --> Line_18 $$ return tag_exist [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_20 $$ if (tag_description != null && !tag_description.trim().equals("")) [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_20 $$ if (tag_description != null && !tag_description.trim().equals("")) [FD]
Line_20 $$ if (tag_description != null && !tag_description.trim().equals("")) --> Line_21 $$ tag_description = StringUtil.replace(tag_description, "\n", " ") [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_21 $$ tag_description = StringUtil.replace(tag_description, "\n", " ") [FD]
Line_20 $$ if (tag_description != null && !tag_description.trim().equals("")) --> Line_22 $$ tag_description = StringUtil.replace(tag_description, "\r", " ") [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_22 $$ tag_description = StringUtil.replace(tag_description, "\r", " ") [FD]
Line_21 $$ tag_description = StringUtil.replace(tag_description, "\n", " ") --> Line_22 $$ tag_description = StringUtil.replace(tag_description, "\r", " ") [FD]
Line_20 $$ if (tag_description != null && !tag_description.trim().equals("")) --> Line_23 $$ tag_description = StringUtil.replace(tag_description, "\t", " ") [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_23 $$ tag_description = StringUtil.replace(tag_description, "\t", " ") [FD]
Line_21 $$ tag_description = StringUtil.replace(tag_description, "\n", " ") --> Line_23 $$ tag_description = StringUtil.replace(tag_description, "\t", " ") [FD]
Line_22 $$ tag_description = StringUtil.replace(tag_description, "\r", " ") --> Line_23 $$ tag_description = StringUtil.replace(tag_description, "\t", " ") [FD]
Line_20 $$ if (tag_description != null && !tag_description.trim().equals("")) --> Line_24 $$ tag_description = StringUtil.replace(tag_description, "<", "&#60;") [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_24 $$ tag_description = StringUtil.replace(tag_description, "<", "&#60;") [FD]
Line_21 $$ tag_description = StringUtil.replace(tag_description, "\n", " ") --> Line_24 $$ tag_description = StringUtil.replace(tag_description, "<", "&#60;") [FD]
Line_22 $$ tag_description = StringUtil.replace(tag_description, "\r", " ") --> Line_24 $$ tag_description = StringUtil.replace(tag_description, "<", "&#60;") [FD]
Line_23 $$ tag_description = StringUtil.replace(tag_description, "\t", " ") --> Line_24 $$ tag_description = StringUtil.replace(tag_description, "<", "&#60;") [FD]
Line_20 $$ if (tag_description != null && !tag_description.trim().equals("")) --> Line_25 $$ tag_description = StringUtil.replace(tag_description, ">", "&#62;") [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_25 $$ tag_description = StringUtil.replace(tag_description, ">", "&#62;") [FD]
Line_21 $$ tag_description = StringUtil.replace(tag_description, "\n", " ") --> Line_25 $$ tag_description = StringUtil.replace(tag_description, ">", "&#62;") [FD]
Line_22 $$ tag_description = StringUtil.replace(tag_description, "\r", " ") --> Line_25 $$ tag_description = StringUtil.replace(tag_description, ">", "&#62;") [FD]
Line_23 $$ tag_description = StringUtil.replace(tag_description, "\t", " ") --> Line_25 $$ tag_description = StringUtil.replace(tag_description, ">", "&#62;") [FD]
Line_24 $$ tag_description = StringUtil.replace(tag_description, "<", "&#60;") --> Line_25 $$ tag_description = StringUtil.replace(tag_description, ">", "&#62;") [FD]
Line_20 $$ if (tag_description != null && !tag_description.trim().equals("")) --> Line_26 $$ tag_description = StringUtil.replace(tag_description, "'", "&#39;") [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_26 $$ tag_description = StringUtil.replace(tag_description, "'", "&#39;") [FD]
Line_21 $$ tag_description = StringUtil.replace(tag_description, "\n", " ") --> Line_26 $$ tag_description = StringUtil.replace(tag_description, "'", "&#39;") [FD]
Line_22 $$ tag_description = StringUtil.replace(tag_description, "\r", " ") --> Line_26 $$ tag_description = StringUtil.replace(tag_description, "'", "&#39;") [FD]
Line_23 $$ tag_description = StringUtil.replace(tag_description, "\t", " ") --> Line_26 $$ tag_description = StringUtil.replace(tag_description, "'", "&#39;") [FD]
Line_24 $$ tag_description = StringUtil.replace(tag_description, "<", "&#60;") --> Line_26 $$ tag_description = StringUtil.replace(tag_description, "'", "&#39;") [FD]
Line_25 $$ tag_description = StringUtil.replace(tag_description, ">", "&#62;") --> Line_26 $$ tag_description = StringUtil.replace(tag_description, "'", "&#39;") [FD]
Line_20 $$ if (tag_description != null && !tag_description.trim().equals("")) --> Line_28 $$ return OctopusErrorMessages.DESCRIPTION_TEXT_EMPTY [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_30 $$ if (tag_text != null && !tag_text.trim().equals("")) [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_30 $$ if (tag_text != null && !tag_text.trim().equals("")) [FD]
Line_30 $$ if (tag_text != null && !tag_text.trim().equals("")) --> Line_31 $$ tag_text = StringUtil.replace(tag_text, "\n", " ") [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_31 $$ tag_text = StringUtil.replace(tag_text, "\n", " ") [FD]
Line_30 $$ if (tag_text != null && !tag_text.trim().equals("")) --> Line_32 $$ tag_text = StringUtil.replace(tag_text, "\r", " ") [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_32 $$ tag_text = StringUtil.replace(tag_text, "\r", " ") [FD]
Line_31 $$ tag_text = StringUtil.replace(tag_text, "\n", " ") --> Line_32 $$ tag_text = StringUtil.replace(tag_text, "\r", " ") [FD]
Line_30 $$ if (tag_text != null && !tag_text.trim().equals("")) --> Line_33 $$ tag_text = StringUtil.replace(tag_text, "\t", " ") [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_33 $$ tag_text = StringUtil.replace(tag_text, "\t", " ") [FD]
Line_31 $$ tag_text = StringUtil.replace(tag_text, "\n", " ") --> Line_33 $$ tag_text = StringUtil.replace(tag_text, "\t", " ") [FD]
Line_32 $$ tag_text = StringUtil.replace(tag_text, "\r", " ") --> Line_33 $$ tag_text = StringUtil.replace(tag_text, "\t", " ") [FD]
Line_30 $$ if (tag_text != null && !tag_text.trim().equals("")) --> Line_34 $$ tag_text = StringUtil.replace(tag_text, "<", "&#60;") [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_34 $$ tag_text = StringUtil.replace(tag_text, "<", "&#60;") [FD]
Line_31 $$ tag_text = StringUtil.replace(tag_text, "\n", " ") --> Line_34 $$ tag_text = StringUtil.replace(tag_text, "<", "&#60;") [FD]
Line_32 $$ tag_text = StringUtil.replace(tag_text, "\r", " ") --> Line_34 $$ tag_text = StringUtil.replace(tag_text, "<", "&#60;") [FD]
Line_33 $$ tag_text = StringUtil.replace(tag_text, "\t", " ") --> Line_34 $$ tag_text = StringUtil.replace(tag_text, "<", "&#60;") [FD]
Line_30 $$ if (tag_text != null && !tag_text.trim().equals("")) --> Line_35 $$ tag_text = StringUtil.replace(tag_text, ">", "&#62;") [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_35 $$ tag_text = StringUtil.replace(tag_text, ">", "&#62;") [FD]
Line_31 $$ tag_text = StringUtil.replace(tag_text, "\n", " ") --> Line_35 $$ tag_text = StringUtil.replace(tag_text, ">", "&#62;") [FD]
Line_32 $$ tag_text = StringUtil.replace(tag_text, "\r", " ") --> Line_35 $$ tag_text = StringUtil.replace(tag_text, ">", "&#62;") [FD]
Line_33 $$ tag_text = StringUtil.replace(tag_text, "\t", " ") --> Line_35 $$ tag_text = StringUtil.replace(tag_text, ">", "&#62;") [FD]
Line_34 $$ tag_text = StringUtil.replace(tag_text, "<", "&#60;") --> Line_35 $$ tag_text = StringUtil.replace(tag_text, ">", "&#62;") [FD]
Line_30 $$ if (tag_text != null && !tag_text.trim().equals("")) --> Line_36 $$ tag_text = StringUtil.replace(tag_text, "'", "&#39;") [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_36 $$ tag_text = StringUtil.replace(tag_text, "'", "&#39;") [FD]
Line_31 $$ tag_text = StringUtil.replace(tag_text, "\n", " ") --> Line_36 $$ tag_text = StringUtil.replace(tag_text, "'", "&#39;") [FD]
Line_32 $$ tag_text = StringUtil.replace(tag_text, "\r", " ") --> Line_36 $$ tag_text = StringUtil.replace(tag_text, "'", "&#39;") [FD]
Line_33 $$ tag_text = StringUtil.replace(tag_text, "\t", " ") --> Line_36 $$ tag_text = StringUtil.replace(tag_text, "'", "&#39;") [FD]
Line_34 $$ tag_text = StringUtil.replace(tag_text, "<", "&#60;") --> Line_36 $$ tag_text = StringUtil.replace(tag_text, "'", "&#39;") [FD]
Line_35 $$ tag_text = StringUtil.replace(tag_text, ">", "&#62;") --> Line_36 $$ tag_text = StringUtil.replace(tag_text, "'", "&#39;") [FD]
Line_30 $$ if (tag_text != null && !tag_text.trim().equals("")) --> Line_38 $$ return OctopusErrorMessages.TRANSLATION_TEXT_EMPTY [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_40 $$ if (tag_author == null || tag_author.trim().equals("")) [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_40 $$ if (tag_author == null || tag_author.trim().equals("")) [FD]
Line_40 $$ if (tag_author == null || tag_author.trim().equals("")) --> Line_41 $$ return OctopusErrorMessages.MAIN_PARAMETER_EMPTY [CD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_43 $$ DBConnection theConnection = null [CD]
Line_43 $$ DBConnection theConnection = null --> Line_45 $$ theConnection = DBServiceManager.allocateConnection() [FD]
Line_43 $$ DBConnection theConnection = null --> Line_46 $$ theConnection.setAutoCommit(false) [FD]
Line_45 $$ theConnection = DBServiceManager.allocateConnection() --> Line_46 $$ theConnection.setAutoCommit(false) [FD]
Line_47 $$ String query = "INSERT INTO tr_tag (tr_tag_id,tr_tag_applicationid,tr_tag_info,tr_tag_creationdate) " --> Line_48 $$ query += "VALUES (?,?,'" + tag_description + "',getdate())" [FD]
Line_43 $$ DBConnection theConnection = null --> Line_49 $$ PreparedStatement state = theConnection.prepareStatement(query) [FD]
Line_45 $$ theConnection = DBServiceManager.allocateConnection() --> Line_49 $$ PreparedStatement state = theConnection.prepareStatement(query) [FD]
Line_47 $$ String query = "INSERT INTO tr_tag (tr_tag_id,tr_tag_applicationid,tr_tag_info,tr_tag_creationdate) " --> Line_49 $$ PreparedStatement state = theConnection.prepareStatement(query) [FD]
Line_48 $$ query += "VALUES (?,?,'" + tag_description + "',getdate())" --> Line_49 $$ PreparedStatement state = theConnection.prepareStatement(query) [FD]
Line_49 $$ PreparedStatement state = theConnection.prepareStatement(query) --> Line_50 $$ state.setString(1, tag_id) [FD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_50 $$ state.setString(1, tag_id) [FD]
Line_49 $$ PreparedStatement state = theConnection.prepareStatement(query) --> Line_51 $$ state.setString(2, application_code) [FD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_51 $$ state.setString(2, application_code) [FD]
Line_49 $$ PreparedStatement state = theConnection.prepareStatement(query) --> Line_52 $$ state.executeUpdate() [FD]
Line_53 $$ String query2 = "INSERT INTO tr_translation (tr_translation_trtagid, tr_translation_language, tr_translation_text, tr_translation_version, tr_translation_lud, tr_translation_lun ) " --> Line_54 $$ query2 += "VALUES(?,'" + OctopusApplication.MASTER_LANGUAGE + "','" + tag_text + "',0,getdate(),?)" [FD]
Line_43 $$ DBConnection theConnection = null --> Line_55 $$ PreparedStatement state2 = theConnection.prepareStatement(query2) [FD]
Line_45 $$ theConnection = DBServiceManager.allocateConnection() --> Line_55 $$ PreparedStatement state2 = theConnection.prepareStatement(query2) [FD]
Line_53 $$ String query2 = "INSERT INTO tr_translation (tr_translation_trtagid, tr_translation_language, tr_translation_text, tr_translation_version, tr_translation_lud, tr_translation_lun ) " --> Line_55 $$ PreparedStatement state2 = theConnection.prepareStatement(query2) [FD]
Line_54 $$ query2 += "VALUES(?,'" + OctopusApplication.MASTER_LANGUAGE + "','" + tag_text + "',0,getdate(),?)" --> Line_55 $$ PreparedStatement state2 = theConnection.prepareStatement(query2) [FD]
Line_55 $$ PreparedStatement state2 = theConnection.prepareStatement(query2) --> Line_56 $$ state2.setString(1, tag_id) [FD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_56 $$ state2.setString(1, tag_id) [FD]
Line_55 $$ PreparedStatement state2 = theConnection.prepareStatement(query2) --> Line_57 $$ state2.setString(2, tag_author) [FD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_57 $$ state2.setString(2, tag_author) [FD]
Line_55 $$ PreparedStatement state2 = theConnection.prepareStatement(query2) --> Line_58 $$ state2.executeUpdate() [FD]
Line_43 $$ DBConnection theConnection = null --> Line_59 $$ theConnection.commit() [FD]
Line_45 $$ theConnection = DBServiceManager.allocateConnection() --> Line_59 $$ theConnection.commit() [FD]
Line_3 $$ String so = OctopusErrorMessages.UNKNOWN_ERROR --> Line_60 $$ so = OctopusErrorMessages.ACTION_DONE [FD]
Line_43 $$ DBConnection theConnection = null --> Line_63 $$ theConnection.rollback() [FD]
Line_45 $$ theConnection = DBServiceManager.allocateConnection() --> Line_63 $$ theConnection.rollback() [FD]
Line_3 $$ String so = OctopusErrorMessages.UNKNOWN_ERROR --> Line_66 $$ so = OctopusErrorMessages.ERROR_DATABASE [FD]
Line_60 $$ so = OctopusErrorMessages.ACTION_DONE --> Line_66 $$ so = OctopusErrorMessages.ERROR_DATABASE [FD]
Line_43 $$ DBConnection theConnection = null --> Line_68 $$ if (theConnection != null) [FD]
Line_45 $$ theConnection = DBServiceManager.allocateConnection() --> Line_68 $$ if (theConnection != null) [FD]
Line_43 $$ DBConnection theConnection = null --> Line_70 $$ theConnection.setAutoCommit(true) [FD]
Line_45 $$ theConnection = DBServiceManager.allocateConnection() --> Line_70 $$ theConnection.setAutoCommit(true) [FD]
Line_68 $$ if (theConnection != null) --> Line_73 $$ theConnection.release() [CD]
Line_43 $$ DBConnection theConnection = null --> Line_73 $$ theConnection.release() [FD]
Line_45 $$ theConnection = DBServiceManager.allocateConnection() --> Line_73 $$ theConnection.release() [FD]
Line_2 $$ public static String addTag(String tag_id, String tag_description, String tag_text, String tag_author, String application_code) --> Line_76 $$ return so [CD]
