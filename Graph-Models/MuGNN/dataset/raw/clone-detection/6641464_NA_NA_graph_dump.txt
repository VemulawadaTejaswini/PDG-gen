Line_2 $$ private void SaveLoginInfo() --> Line_3 $$ int iSize [CD]
Line_5 $$ if (m_bSavePwd) --> Line_6 $$ byte[] MD5PWD = new byte[80] [CD]
Line_5 $$ if (m_bSavePwd) --> Line_7 $$ java.security.MessageDigest md = java.security.MessageDigest.getInstance("SHA-1") [CD]
Line_5 $$ if (m_bSavePwd) --> Line_8 $$ String szPath = System.getProperty("user.home") [CD]
Line_5 $$ if (m_bSavePwd) --> Line_9 $$ szPath += System.getProperty("file.separator") + "MochaJournal" [CD]
Line_8 $$ String szPath = System.getProperty("user.home") --> Line_9 $$ szPath += System.getProperty("file.separator") + "MochaJournal" [FD]
Line_5 $$ if (m_bSavePwd) --> Line_10 $$ java.io.File file = new java.io.File(szPath) [CD]
Line_5 $$ if (m_bSavePwd) --> Line_11 $$ if (!file.exists()) [CD]
Line_10 $$ java.io.File file = new java.io.File(szPath) --> Line_11 $$ if (!file.exists()) [FD]
Line_5 $$ if (m_bSavePwd) --> Line_12 $$ file = new java.io.File(file, "user.dat") [CD]
Line_10 $$ java.io.File file = new java.io.File(szPath) --> Line_12 $$ file = new java.io.File(file, "user.dat") [FD]
Line_5 $$ if (m_bSavePwd) --> Line_13 $$ file.createNewFile() [CD]
Line_10 $$ java.io.File file = new java.io.File(szPath) --> Line_13 $$ file.createNewFile() [FD]
Line_12 $$ file = new java.io.File(file, "user.dat") --> Line_13 $$ file.createNewFile() [FD]
Line_5 $$ if (m_bSavePwd) --> Line_14 $$ java.io.FileOutputStream pw = new java.io.FileOutputStream(file) [CD]
Line_5 $$ if (m_bSavePwd) --> Line_15 $$ iSize = m_PwdList.size() [CD]
Line_3 $$ int iSize --> Line_15 $$ iSize = m_PwdList.size() [FD]
Line_5 $$ if (m_bSavePwd) --> Line_16 $$ for (int iIndex = 0; iIndex < iSize; iIndex++) [CD]
Line_3 $$ int iSize --> Line_16 $$ for (int iIndex = 0; iIndex < iSize; iIndex++) [FD]
Line_15 $$ iSize = m_PwdList.size() --> Line_16 $$ for (int iIndex = 0; iIndex < iSize; iIndex++) [FD]
Line_16 $$ for (int iIndex = 0; iIndex < iSize; iIndex++) --> Line_17 $$ md.reset() [CD]
Line_7 $$ java.security.MessageDigest md = java.security.MessageDigest.getInstance("SHA-1") --> Line_17 $$ md.reset() [FD]
Line_16 $$ for (int iIndex = 0; iIndex < iSize; iIndex++) --> Line_18 $$ md.update(((String) m_UsrList.get(iIndex)).getBytes()) [CD]
Line_16 $$ for (int iIndex = 0; iIndex < iSize; iIndex++) --> Line_18 $$ md.update(((String) m_UsrList.get(iIndex)).getBytes()) [FD]
Line_7 $$ java.security.MessageDigest md = java.security.MessageDigest.getInstance("SHA-1") --> Line_18 $$ md.update(((String) m_UsrList.get(iIndex)).getBytes()) [FD]
Line_16 $$ for (int iIndex = 0; iIndex < iSize; iIndex++) --> Line_19 $$ byte[] DESUSR = md.digest() [CD]
Line_7 $$ java.security.MessageDigest md = java.security.MessageDigest.getInstance("SHA-1") --> Line_19 $$ byte[] DESUSR = md.digest() [FD]
Line_16 $$ for (int iIndex = 0; iIndex < iSize; iIndex++) --> Line_20 $$ byte alpha = 0 [CD]
Line_16 $$ for (int iIndex = 0; iIndex < iSize; iIndex++) --> Line_21 $$ for (int i = 0; i < DESUSR.length; i++) alpha += DESUSR[i] [CD]
Line_20 $$ byte alpha = 0 --> Line_21 $$ for (int i = 0; i < DESUSR.length; i++) alpha += DESUSR[i] [FD]
Line_16 $$ for (int iIndex = 0; iIndex < iSize; iIndex++) --> Line_22 $$ String pwd = (String) m_PwdList.get(iIndex) [FD]
Line_16 $$ for (int iIndex = 0; iIndex < iSize; iIndex++) --> Line_23 $$ if (pwd.length() > 0) [CD]
Line_23 $$ if (pwd.length() > 0) --> Line_24 $$ java.util.Arrays.fill(MD5PWD, (byte) 0) [CD]
Line_6 $$ byte[] MD5PWD = new byte[80] --> Line_24 $$ java.util.Arrays.fill(MD5PWD, (byte) 0) [FD]
Line_23 $$ if (pwd.length() > 0) --> Line_25 $$ int iLen = pwd.length() [CD]
Line_23 $$ if (pwd.length() > 0) --> Line_26 $$ pw.write(iLen) [CD]
Line_14 $$ java.io.FileOutputStream pw = new java.io.FileOutputStream(file) --> Line_26 $$ pw.write(iLen) [FD]
Line_23 $$ if (pwd.length() > 0) --> Line_27 $$ for (int i = 0; i < iLen; i++) [CD]
Line_21 $$ for (int i = 0; i < DESUSR.length; i++) alpha += DESUSR[i] --> Line_27 $$ for (int i = 0; i < iLen; i++) [FD]
Line_27 $$ for (int i = 0; i < iLen; i++) --> Line_28 $$ int iDiff = (int) pwd.charAt(i) + (int) alpha [CD]
Line_27 $$ for (int i = 0; i < iLen; i++) --> Line_28 $$ int iDiff = (int) pwd.charAt(i) + (int) alpha [FD]
Line_21 $$ for (int i = 0; i < DESUSR.length; i++) alpha += DESUSR[i] --> Line_28 $$ int iDiff = (int) pwd.charAt(i) + (int) alpha [FD]
Line_27 $$ for (int i = 0; i < iLen; i++) --> Line_29 $$ int c = iDiff % 256 [CD]
Line_27 $$ for (int i = 0; i < iLen; i++) --> Line_30 $$ MD5PWD[i] = (byte) c [CD]
Line_27 $$ for (int i = 0; i < iLen; i++) --> Line_31 $$ pw.write((byte) c) [CD]
Line_14 $$ java.io.FileOutputStream pw = new java.io.FileOutputStream(file) --> Line_31 $$ pw.write((byte) c) [FD]
Line_23 $$ if (pwd.length() > 0) --> Line_33 $$ pw.write(0) [CD]
Line_14 $$ java.io.FileOutputStream pw = new java.io.FileOutputStream(file) --> Line_33 $$ pw.write(0) [FD]
Line_5 $$ if (m_bSavePwd) --> Line_35 $$ pw.flush() [CD]
Line_14 $$ java.io.FileOutputStream pw = new java.io.FileOutputStream(file) --> Line_35 $$ pw.flush() [FD]
