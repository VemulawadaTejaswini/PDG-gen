Line_2 $$ public void run() --> Line_3 $$ OutputStream out = null [CD]
Line_2 $$ public void run() --> Line_4 $$ InputStream in = null [CD]
Line_2 $$ public void run() --> Line_5 $$ boolean success = false [CD]
Line_2 $$ public void run() --> Line_6 $$ String absoluteFileName = "" [CD]
Line_9 $$ File downloadFolder = new File(Properties.downloadFolder) --> Line_10 $$ if (downloadFolder.exists()) [FD]
Line_10 $$ if (downloadFolder.exists()) --> Line_11 $$ if (downloadFolder.isDirectory()) [CD]
Line_9 $$ File downloadFolder = new File(Properties.downloadFolder) --> Line_11 $$ if (downloadFolder.isDirectory()) [FD]
Line_11 $$ if (downloadFolder.isDirectory()) --> Line_12 $$ fileName = downloadFolder.getPath() + File.separator + fileName [CD]
Line_8 $$ String fileName = getFileName(softwareLocation) --> Line_12 $$ fileName = downloadFolder.getPath() + File.separator + fileName [FD]
Line_9 $$ File downloadFolder = new File(Properties.downloadFolder) --> Line_12 $$ fileName = downloadFolder.getPath() + File.separator + fileName [FD]
Line_10 $$ if (downloadFolder.exists()) --> Line_15 $$ downloadFolder.mkdir() [CD]
Line_9 $$ File downloadFolder = new File(Properties.downloadFolder) --> Line_15 $$ downloadFolder.mkdir() [FD]
Line_10 $$ if (downloadFolder.exists()) --> Line_16 $$ fileName = downloadFolder.getPath() + File.separator + fileName [CD]
Line_8 $$ String fileName = getFileName(softwareLocation) --> Line_16 $$ fileName = downloadFolder.getPath() + File.separator + fileName [FD]
Line_12 $$ fileName = downloadFolder.getPath() + File.separator + fileName --> Line_16 $$ fileName = downloadFolder.getPath() + File.separator + fileName [FD]
Line_9 $$ File downloadFolder = new File(Properties.downloadFolder) --> Line_16 $$ fileName = downloadFolder.getPath() + File.separator + fileName [FD]
Line_6 $$ String absoluteFileName = "" --> Line_19 $$ absoluteFileName = softwareFile.getAbsolutePath() [FD]
Line_18 $$ File softwareFile = new File(fileName) --> Line_19 $$ absoluteFileName = softwareFile.getAbsolutePath() [FD]
Line_18 $$ File softwareFile = new File(fileName) --> Line_20 $$ if (softwareFile.exists() && softwareFile.length() == softwareSize) [FD]
Line_20 $$ if (softwareFile.exists() && softwareFile.length() == softwareSize) --> Line_21 $$ XohmLogger.debugPrintln("Software file already exists. Exiting...") [CD]
Line_20 $$ if (softwareFile.exists() && softwareFile.length() == softwareSize) --> Line_22 $$ listener.downloadComplete(true, softwareName, absoluteFileName) [CD]
Line_6 $$ String absoluteFileName = "" --> Line_22 $$ listener.downloadComplete(true, softwareName, absoluteFileName) [FD]
Line_19 $$ absoluteFileName = softwareFile.getAbsolutePath() --> Line_22 $$ listener.downloadComplete(true, softwareName, absoluteFileName) [FD]
Line_20 $$ if (softwareFile.exists() && softwareFile.length() == softwareSize) --> Line_23 $$ return [CD]
Line_9 $$ File downloadFolder = new File(Properties.downloadFolder) --> Line_26 $$ File[] oldFiles = downloadFolder.listFiles() [FD]
Line_27 $$ for (int i = 0; i < oldFiles.length; i++) --> Line_28 $$ oldFiles[i].delete() [CD]
Line_3 $$ OutputStream out = null --> Line_35 $$ out = new BufferedOutputStream(new FileOutputStream(softwareTempFile)) [FD]
Line_34 $$ URL url = new URL(softwareLocation) --> Line_36 $$ URLConnection connection = url.openConnection() [FD]
Line_4 $$ InputStream in = null --> Line_37 $$ in = connection.getInputStream() [FD]
Line_36 $$ URLConnection connection = url.openConnection() --> Line_37 $$ in = connection.getInputStream() [FD]
Line_40 $$ int numRead --> Line_42 $$ while ((numRead = in.read(buffer)) != -1) [FD]
Line_4 $$ InputStream in = null --> Line_42 $$ while ((numRead = in.read(buffer)) != -1) [FD]
Line_37 $$ in = connection.getInputStream() --> Line_42 $$ while ((numRead = in.read(buffer)) != -1) [FD]
Line_39 $$ byte[] buffer = new byte[1024] --> Line_42 $$ while ((numRead = in.read(buffer)) != -1) [FD]
Line_42 $$ while ((numRead = in.read(buffer)) != -1) --> Line_43 $$ out.write(buffer, 0, numRead) [CD]
Line_42 $$ while ((numRead = in.read(buffer)) != -1) --> Line_43 $$ out.write(buffer, 0, numRead) [FD]
Line_3 $$ OutputStream out = null --> Line_43 $$ out.write(buffer, 0, numRead) [FD]
Line_35 $$ out = new BufferedOutputStream(new FileOutputStream(softwareTempFile)) --> Line_43 $$ out.write(buffer, 0, numRead) [FD]
Line_39 $$ byte[] buffer = new byte[1024] --> Line_43 $$ out.write(buffer, 0, numRead) [FD]
Line_40 $$ int numRead --> Line_43 $$ out.write(buffer, 0, numRead) [FD]
Line_42 $$ while ((numRead = in.read(buffer)) != -1) --> Line_44 $$ numWritten += numRead [CD]
Line_42 $$ while ((numRead = in.read(buffer)) != -1) --> Line_44 $$ numWritten += numRead [FD]
Line_41 $$ long numWritten = 0 --> Line_44 $$ numWritten += numRead [FD]
Line_40 $$ int numRead --> Line_44 $$ numWritten += numRead [FD]
Line_42 $$ while ((numRead = in.read(buffer)) != -1) --> Line_45 $$ listener.downloadProgressNotification(softwareName, numWritten, softwareSize) [CD]
Line_44 $$ numWritten += numRead --> Line_45 $$ listener.downloadProgressNotification(softwareName, numWritten, softwareSize) [FD]
Line_41 $$ long numWritten = 0 --> Line_45 $$ listener.downloadProgressNotification(softwareName, numWritten, softwareSize) [FD]
Line_3 $$ OutputStream out = null --> Line_47 $$ out.flush() [FD]
Line_35 $$ out = new BufferedOutputStream(new FileOutputStream(softwareTempFile)) --> Line_47 $$ out.flush() [FD]
Line_3 $$ OutputStream out = null --> Line_48 $$ out.close() [FD]
Line_35 $$ out = new BufferedOutputStream(new FileOutputStream(softwareTempFile)) --> Line_48 $$ out.close() [FD]
Line_4 $$ InputStream in = null --> Line_49 $$ in.close() [FD]
Line_37 $$ in = connection.getInputStream() --> Line_49 $$ in.close() [FD]
Line_33 $$ File softwareTempFile = File.createTempFile("XOHMCM", null) --> Line_50 $$ if (copyFile(softwareTempFile, softwareFile)) [FD]
Line_18 $$ File softwareFile = new File(fileName) --> Line_50 $$ if (copyFile(softwareTempFile, softwareFile)) [FD]
Line_50 $$ if (copyFile(softwareTempFile, softwareFile)) --> Line_51 $$ XohmLogger.debugPrintln("Download complete: " + absoluteFileName + "\t" + numWritten) [CD]
Line_50 $$ if (copyFile(softwareTempFile, softwareFile)) --> Line_52 $$ success = true [CD]
Line_5 $$ boolean success = false --> Line_52 $$ success = true [FD]
Line_50 $$ if (copyFile(softwareTempFile, softwareFile)) --> Line_53 $$ softwareTempFile.delete() [CD]
Line_33 $$ File softwareTempFile = File.createTempFile("XOHMCM", null) --> Line_53 $$ softwareTempFile.delete() [FD]
Line_2 $$ public void run() --> Line_59 $$ listener.downloadComplete(success, softwareName, absoluteFileName) [CD]
Line_5 $$ boolean success = false --> Line_59 $$ listener.downloadComplete(success, softwareName, absoluteFileName) [FD]
Line_52 $$ success = true --> Line_59 $$ listener.downloadComplete(success, softwareName, absoluteFileName) [FD]
Line_6 $$ String absoluteFileName = "" --> Line_59 $$ listener.downloadComplete(success, softwareName, absoluteFileName) [FD]
Line_19 $$ absoluteFileName = softwareFile.getAbsolutePath() --> Line_59 $$ listener.downloadComplete(success, softwareName, absoluteFileName) [FD]
