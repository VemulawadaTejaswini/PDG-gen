Line_2 $$ private void callbackWS(String xmlControl, String ws_results, long docId) --> Line_3 $$ SimpleProvider config [CD]
Line_2 $$ private void callbackWS(String xmlControl, String ws_results, long docId) --> Line_4 $$ Service service [CD]
Line_2 $$ private void callbackWS(String xmlControl, String ws_results, long docId) --> Line_5 $$ Object ret [CD]
Line_2 $$ private void callbackWS(String xmlControl, String ws_results, long docId) --> Line_6 $$ Call call [CD]
Line_2 $$ private void callbackWS(String xmlControl, String ws_results, long docId) --> Line_7 $$ Object[] parameter [CD]
Line_2 $$ private void callbackWS(String xmlControl, String ws_results, long docId) --> Line_8 $$ String method [CD]
Line_2 $$ private void callbackWS(String xmlControl, String ws_results, long docId) --> Line_9 $$ String wsurl [CD]
Line_2 $$ private void callbackWS(String xmlControl, String ws_results, long docId) --> Line_10 $$ URL url [CD]
Line_2 $$ private void callbackWS(String xmlControl, String ws_results, long docId) --> Line_11 $$ NodeList delegateNodes [CD]
Line_2 $$ private void callbackWS(String xmlControl, String ws_results, long docId) --> Line_12 $$ Node actualNode [CD]
Line_2 $$ private void callbackWS(String xmlControl, String ws_results, long docId) --> Line_13 $$ InputSource xmlcontrolstream [CD]
Line_13 $$ InputSource xmlcontrolstream --> Line_15 $$ xmlcontrolstream = new InputSource(new StringReader(xmlControl)) [FD]
Line_11 $$ NodeList delegateNodes --> Line_16 $$ delegateNodes = SimpleXMLParser.parseDocument(xmlcontrolstream, AgentBehaviour.XML_CALLBACK) [FD]
Line_13 $$ InputSource xmlcontrolstream --> Line_16 $$ delegateNodes = SimpleXMLParser.parseDocument(xmlcontrolstream, AgentBehaviour.XML_CALLBACK) [FD]
Line_15 $$ xmlcontrolstream = new InputSource(new StringReader(xmlControl)) --> Line_16 $$ delegateNodes = SimpleXMLParser.parseDocument(xmlcontrolstream, AgentBehaviour.XML_CALLBACK) [FD]
Line_12 $$ Node actualNode --> Line_17 $$ actualNode = delegateNodes.item(0) [FD]
Line_11 $$ NodeList delegateNodes --> Line_17 $$ actualNode = delegateNodes.item(0) [FD]
Line_16 $$ delegateNodes = SimpleXMLParser.parseDocument(xmlcontrolstream, AgentBehaviour.XML_CALLBACK) --> Line_17 $$ actualNode = delegateNodes.item(0) [FD]
Line_9 $$ String wsurl --> Line_18 $$ wsurl = SimpleXMLParser.findChildEntry(actualNode, AgentBehaviour.XML_URL) [FD]
Line_12 $$ Node actualNode --> Line_18 $$ wsurl = SimpleXMLParser.findChildEntry(actualNode, AgentBehaviour.XML_URL) [FD]
Line_17 $$ actualNode = delegateNodes.item(0) --> Line_18 $$ wsurl = SimpleXMLParser.findChildEntry(actualNode, AgentBehaviour.XML_URL) [FD]
Line_8 $$ String method --> Line_19 $$ method = SimpleXMLParser.findChildEntry(actualNode, AgentBehaviour.XML_METHOD) [FD]
Line_12 $$ Node actualNode --> Line_19 $$ method = SimpleXMLParser.findChildEntry(actualNode, AgentBehaviour.XML_METHOD) [FD]
Line_17 $$ actualNode = delegateNodes.item(0) --> Line_19 $$ method = SimpleXMLParser.findChildEntry(actualNode, AgentBehaviour.XML_METHOD) [FD]
Line_20 $$ if (wsurl == null || method == null) --> Line_21 $$ System.out.println("----- Did not get method or wsurl from the properties! -----") [CD]
Line_20 $$ if (wsurl == null || method == null) --> Line_22 $$ return [CD]
Line_10 $$ URL url --> Line_24 $$ url = new java.net.URL(wsurl) [FD]
Line_10 $$ URL url --> Line_26 $$ url.openConnection().connect() [FD]
Line_24 $$ url = new java.net.URL(wsurl) --> Line_26 $$ url.openConnection().connect() [FD]
Line_30 $$ Vector v_param = new Vector() --> Line_31 $$ v_param.add(ws_results) [FD]
Line_2 $$ private void callbackWS(String xmlControl, String ws_results, long docId) --> Line_31 $$ v_param.add(ws_results) [FD]
Line_30 $$ Vector v_param = new Vector() --> Line_32 $$ v_param.add(new Long(docId)) [FD]
Line_7 $$ Object[] parameter --> Line_33 $$ parameter = v_param.toArray() [FD]
Line_30 $$ Vector v_param = new Vector() --> Line_33 $$ parameter = v_param.toArray() [FD]
Line_3 $$ SimpleProvider config --> Line_34 $$ config = new SimpleProvider() [FD]
Line_3 $$ SimpleProvider config --> Line_35 $$ config.deployTransport("http", new HTTPSender()) [FD]
Line_34 $$ config = new SimpleProvider() --> Line_35 $$ config.deployTransport("http", new HTTPSender()) [FD]
Line_4 $$ Service service --> Line_36 $$ service = new Service(config) [FD]
Line_6 $$ Call call --> Line_37 $$ call = (Call) service.createCall() [FD]
Line_4 $$ Service service --> Line_37 $$ call = (Call) service.createCall() [FD]
Line_36 $$ service = new Service(config) --> Line_37 $$ call = (Call) service.createCall() [FD]
Line_6 $$ Call call --> Line_38 $$ call.setTargetEndpointAddress(url) [FD]
Line_37 $$ call = (Call) service.createCall() --> Line_38 $$ call.setTargetEndpointAddress(url) [FD]
Line_10 $$ URL url --> Line_38 $$ call.setTargetEndpointAddress(url) [FD]
Line_24 $$ url = new java.net.URL(wsurl) --> Line_38 $$ call.setTargetEndpointAddress(url) [FD]
Line_6 $$ Call call --> Line_39 $$ call.setOperationName(new QName("http://schemas.xmlsoap.org/soap/encoding/", method)) [FD]
Line_37 $$ call = (Call) service.createCall() --> Line_39 $$ call.setOperationName(new QName("http://schemas.xmlsoap.org/soap/encoding/", method)) [FD]
Line_5 $$ Object ret --> Line_41 $$ ret = call.invoke(parameter) [FD]
Line_6 $$ Call call --> Line_41 $$ ret = call.invoke(parameter) [FD]
Line_37 $$ call = (Call) service.createCall() --> Line_41 $$ ret = call.invoke(parameter) [FD]
Line_7 $$ Object[] parameter --> Line_41 $$ ret = call.invoke(parameter) [FD]
Line_33 $$ parameter = v_param.toArray() --> Line_41 $$ ret = call.invoke(parameter) [FD]
Line_5 $$ Object ret --> Line_42 $$ if (ret == null) [FD]
Line_41 $$ ret = call.invoke(parameter) --> Line_42 $$ if (ret == null) [FD]
Line_42 $$ if (ret == null) --> Line_43 $$ ret = new String("No response from callback function!") [CD]
Line_5 $$ Object ret --> Line_43 $$ ret = new String("No response from callback function!") [FD]
Line_41 $$ ret = call.invoke(parameter) --> Line_43 $$ ret = new String("No response from callback function!") [FD]
