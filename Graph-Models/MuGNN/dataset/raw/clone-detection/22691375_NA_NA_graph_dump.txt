Line_2 $$ protected String getRawPage(String url) throws IOException --> Line_3 $$ HttpClient httpClient = new HttpClient() [CD]
Line_2 $$ protected String getRawPage(String url) throws IOException --> Line_4 $$ String proxyHost = config.getString("proxy.host"), proxyPortString = config.getString("proxy.port") [CD]
Line_2 $$ protected String getRawPage(String url) throws IOException --> Line_5 $$ if (proxyHost != null && proxyPortString != null) [CD]
Line_5 $$ if (proxyHost != null && proxyPortString != null) --> Line_6 $$ int proxyPort = -1 [CD]
Line_6 $$ int proxyPort = -1 --> Line_8 $$ proxyPort = Integer.parseInt(proxyPortString) [FD]
Line_4 $$ String proxyHost = config.getString("proxy.host"), proxyPortString = config.getString("proxy.port") --> Line_8 $$ proxyPort = Integer.parseInt(proxyPortString) [FD]
Line_5 $$ if (proxyHost != null && proxyPortString != null) --> Line_11 $$ if (proxyPort != -1) [CD]
Line_6 $$ int proxyPort = -1 --> Line_11 $$ if (proxyPort != -1) [FD]
Line_8 $$ proxyPort = Integer.parseInt(proxyPortString) --> Line_11 $$ if (proxyPort != -1) [FD]
Line_11 $$ if (proxyPort != -1) --> Line_12 $$ httpClient.getHostConfiguration().setProxy(proxyHost, proxyPort) [CD]
Line_4 $$ String proxyHost = config.getString("proxy.host"), proxyPortString = config.getString("proxy.port") --> Line_12 $$ httpClient.getHostConfiguration().setProxy(proxyHost, proxyPort) [FD]
Line_6 $$ int proxyPort = -1 --> Line_12 $$ httpClient.getHostConfiguration().setProxy(proxyHost, proxyPort) [FD]
Line_8 $$ proxyPort = Integer.parseInt(proxyPortString) --> Line_12 $$ httpClient.getHostConfiguration().setProxy(proxyHost, proxyPort) [FD]
Line_3 $$ HttpClient httpClient = new HttpClient() --> Line_12 $$ httpClient.getHostConfiguration().setProxy(proxyHost, proxyPort) [FD]
Line_2 $$ protected String getRawPage(String url) throws IOException --> Line_15 $$ GetMethod urlGet = new GetMethod(url) [CD]
Line_2 $$ protected String getRawPage(String url) throws IOException --> Line_16 $$ urlGet.setRequestHeader("Accept-Encoding", "") [CD]
Line_15 $$ GetMethod urlGet = new GetMethod(url) --> Line_16 $$ urlGet.setRequestHeader("Accept-Encoding", "") [FD]
Line_2 $$ protected String getRawPage(String url) throws IOException --> Line_17 $$ urlGet.setRequestHeader("User-Agent", "Mozilla/5.0") [CD]
Line_15 $$ GetMethod urlGet = new GetMethod(url) --> Line_17 $$ urlGet.setRequestHeader("User-Agent", "Mozilla/5.0") [FD]
Line_2 $$ protected String getRawPage(String url) throws IOException --> Line_18 $$ int retCode [CD]
Line_2 $$ protected String getRawPage(String url) throws IOException --> Line_19 $$ if ((retCode = httpClient.executeMethod(urlGet)) != HttpStatus.SC_OK) [CD]
Line_18 $$ int retCode --> Line_19 $$ if ((retCode = httpClient.executeMethod(urlGet)) != HttpStatus.SC_OK) [FD]
Line_3 $$ HttpClient httpClient = new HttpClient() --> Line_19 $$ if ((retCode = httpClient.executeMethod(urlGet)) != HttpStatus.SC_OK) [FD]
Line_15 $$ GetMethod urlGet = new GetMethod(url) --> Line_19 $$ if ((retCode = httpClient.executeMethod(urlGet)) != HttpStatus.SC_OK) [FD]
Line_2 $$ protected String getRawPage(String url) throws IOException --> Line_22 $$ String encoding = null [CD]
Line_2 $$ protected String getRawPage(String url) throws IOException --> Line_23 $$ Header contentType = urlGet.getResponseHeader("Content-Type") [CD]
Line_15 $$ GetMethod urlGet = new GetMethod(url) --> Line_23 $$ Header contentType = urlGet.getResponseHeader("Content-Type") [FD]
Line_2 $$ protected String getRawPage(String url) throws IOException --> Line_24 $$ if (contentType != null) [CD]
Line_23 $$ Header contentType = urlGet.getResponseHeader("Content-Type") --> Line_24 $$ if (contentType != null) [FD]
Line_24 $$ if (contentType != null) --> Line_25 $$ String contentTypeString = contentType.toString() [CD]
Line_23 $$ Header contentType = urlGet.getResponseHeader("Content-Type") --> Line_25 $$ String contentTypeString = contentType.toString() [FD]
Line_24 $$ if (contentType != null) --> Line_26 $$ int i = contentTypeString.indexOf("charset=") [CD]
Line_25 $$ String contentTypeString = contentType.toString() --> Line_26 $$ int i = contentTypeString.indexOf("charset=") [FD]
Line_24 $$ if (contentType != null) --> Line_27 $$ if (i != -1) [CD]
Line_26 $$ int i = contentTypeString.indexOf("charset=") --> Line_27 $$ if (i != -1) [FD]
Line_27 $$ if (i != -1) --> Line_28 $$ encoding = contentTypeString.substring(i + "charset=".length()).trim() [CD]
Line_22 $$ String encoding = null --> Line_28 $$ encoding = contentTypeString.substring(i + "charset=".length()).trim() [FD]
Line_25 $$ String contentTypeString = contentType.toString() --> Line_28 $$ encoding = contentTypeString.substring(i + "charset=".length()).trim() [FD]
Line_2 $$ protected String getRawPage(String url) throws IOException --> Line_31 $$ boolean gzipped = false [CD]
Line_2 $$ protected String getRawPage(String url) throws IOException --> Line_32 $$ Header contentEncoding = urlGet.getResponseHeader("Content-Encoding") [CD]
Line_15 $$ GetMethod urlGet = new GetMethod(url) --> Line_32 $$ Header contentEncoding = urlGet.getResponseHeader("Content-Encoding") [FD]
Line_2 $$ protected String getRawPage(String url) throws IOException --> Line_33 $$ if (contentEncoding != null && contentEncoding.getValue().equalsIgnoreCase("gzip")) [CD]
Line_32 $$ Header contentEncoding = urlGet.getResponseHeader("Content-Encoding") --> Line_33 $$ if (contentEncoding != null && contentEncoding.getValue().equalsIgnoreCase("gzip")) [FD]
Line_33 $$ if (contentEncoding != null && contentEncoding.getValue().equalsIgnoreCase("gzip")) --> Line_34 $$ gzipped = true [CD]
Line_31 $$ boolean gzipped = false --> Line_34 $$ gzipped = true [FD]
Line_2 $$ protected String getRawPage(String url) throws IOException --> Line_36 $$ byte[] htmlData [CD]
Line_15 $$ GetMethod urlGet = new GetMethod(url) --> Line_38 $$ InputStream in = gzipped ? new GZIPInputStream(urlGet.getResponseBodyAsStream()) : urlGet.getResponseBodyAsStream() [FD]
Line_38 $$ InputStream in = gzipped ? new GZIPInputStream(urlGet.getResponseBodyAsStream()) : urlGet.getResponseBodyAsStream() --> Line_40 $$ IOUtils.copy(in, out) [FD]
Line_39 $$ ByteArrayOutputStream out = new ByteArrayOutputStream() --> Line_40 $$ IOUtils.copy(in, out) [FD]
Line_36 $$ byte[] htmlData --> Line_41 $$ htmlData = out.toByteArray() [FD]
Line_39 $$ ByteArrayOutputStream out = new ByteArrayOutputStream() --> Line_41 $$ htmlData = out.toByteArray() [FD]
Line_38 $$ InputStream in = gzipped ? new GZIPInputStream(urlGet.getResponseBodyAsStream()) : urlGet.getResponseBodyAsStream() --> Line_42 $$ in.close() [FD]
Line_15 $$ GetMethod urlGet = new GetMethod(url) --> Line_44 $$ urlGet.releaseConnection() [FD]
Line_2 $$ protected String getRawPage(String url) throws IOException --> Line_46 $$ if (encoding == null) [CD]
Line_22 $$ String encoding = null --> Line_46 $$ if (encoding == null) [FD]
Line_28 $$ encoding = contentTypeString.substring(i + "charset=".length()).trim() --> Line_46 $$ if (encoding == null) [FD]
Line_46 $$ if (encoding == null) --> Line_47 $$ Matcher m = Pattern.compile("(?i)<meta[^>]*charset=(([^\"]+\")|(\"[^\"]+\"))").matcher(new String(htmlData)) [CD]
Line_46 $$ if (encoding == null) --> Line_48 $$ if (m.find()) [CD]
Line_47 $$ Matcher m = Pattern.compile("(?i)<meta[^>]*charset=(([^\"]+\")|(\"[^\"]+\"))").matcher(new String(htmlData)) --> Line_48 $$ if (m.find()) [FD]
Line_48 $$ if (m.find()) --> Line_49 $$ encoding = m.group(1).trim().replace("\"", "") [CD]
Line_22 $$ String encoding = null --> Line_49 $$ encoding = m.group(1).trim().replace("\"", "") [FD]
Line_28 $$ encoding = contentTypeString.substring(i + "charset=".length()).trim() --> Line_49 $$ encoding = m.group(1).trim().replace("\"", "") [FD]
Line_47 $$ Matcher m = Pattern.compile("(?i)<meta[^>]*charset=(([^\"]+\")|(\"[^\"]+\"))").matcher(new String(htmlData)) --> Line_49 $$ encoding = m.group(1).trim().replace("\"", "") [FD]
Line_2 $$ protected String getRawPage(String url) throws IOException --> Line_52 $$ if (encoding == null) [CD]
Line_22 $$ String encoding = null --> Line_52 $$ if (encoding == null) [FD]
Line_28 $$ encoding = contentTypeString.substring(i + "charset=".length()).trim() --> Line_52 $$ if (encoding == null) [FD]
Line_49 $$ encoding = m.group(1).trim().replace("\"", "") --> Line_52 $$ if (encoding == null) [FD]
Line_52 $$ if (encoding == null) --> Line_53 $$ encoding = "UTF-8" [CD]
Line_22 $$ String encoding = null --> Line_53 $$ encoding = "UTF-8" [FD]
Line_28 $$ encoding = contentTypeString.substring(i + "charset=".length()).trim() --> Line_53 $$ encoding = "UTF-8" [FD]
Line_49 $$ encoding = m.group(1).trim().replace("\"", "") --> Line_53 $$ encoding = "UTF-8" [FD]
Line_2 $$ protected String getRawPage(String url) throws IOException --> Line_55 $$ return new String(htmlData, encoding) [CD]
