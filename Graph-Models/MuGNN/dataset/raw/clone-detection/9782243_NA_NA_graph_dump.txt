Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_3 $$ Session hbsession = HibernateUtil.currentSession() [CD]
Line_3 $$ Session hbsession = HibernateUtil.currentSession() --> Line_5 $$ Transaction tx = hbsession.beginTransaction() [FD]
Line_3 $$ Session hbsession = HibernateUtil.currentSession() --> Line_6 $$ NvUsers user = (NvUsers) hbsession.load(NvUsers.class, addform.getLogin()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_6 $$ NvUsers user = (NvUsers) hbsession.load(NvUsers.class, addform.getLogin()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_7 $$ if (!addform.getPassword().equalsIgnoreCase("")) [FD]
Line_7 $$ if (!addform.getPassword().equalsIgnoreCase("")) --> Line_8 $$ MessageDigest md = (MessageDigest) MessageDigest.getInstance("MD5").clone() [CD]
Line_7 $$ if (!addform.getPassword().equalsIgnoreCase("")) --> Line_9 $$ md.update(addform.getPassword().getBytes("UTF-8")) [CD]
Line_8 $$ MessageDigest md = (MessageDigest) MessageDigest.getInstance("MD5").clone() --> Line_9 $$ md.update(addform.getPassword().getBytes("UTF-8")) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_9 $$ md.update(addform.getPassword().getBytes("UTF-8")) [FD]
Line_7 $$ if (!addform.getPassword().equalsIgnoreCase("")) --> Line_10 $$ byte[] pd = md.digest() [CD]
Line_8 $$ MessageDigest md = (MessageDigest) MessageDigest.getInstance("MD5").clone() --> Line_10 $$ byte[] pd = md.digest() [FD]
Line_7 $$ if (!addform.getPassword().equalsIgnoreCase("")) --> Line_11 $$ StringBuffer app = new StringBuffer() [CD]
Line_7 $$ if (!addform.getPassword().equalsIgnoreCase("")) --> Line_12 $$ for (int i = 0; i < pd.length; i++) [CD]
Line_12 $$ for (int i = 0; i < pd.length; i++) --> Line_13 $$ String s2 = Integer.toHexString(pd[i] & 0xFF) [CD]
Line_12 $$ for (int i = 0; i < pd.length; i++) --> Line_14 $$ app.append((s2.length() == 1) ? "0" + s2 : s2) [CD]
Line_11 $$ StringBuffer app = new StringBuffer() --> Line_14 $$ app.append((s2.length() == 1) ? "0" + s2 : s2) [FD]
Line_13 $$ String s2 = Integer.toHexString(pd[i] & 0xFF) --> Line_14 $$ app.append((s2.length() == 1) ? "0" + s2 : s2) [FD]
Line_7 $$ if (!addform.getPassword().equalsIgnoreCase("")) --> Line_16 $$ user.setPassword(app.toString()) [CD]
Line_11 $$ StringBuffer app = new StringBuffer() --> Line_16 $$ user.setPassword(app.toString()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_19 $$ HashMap cAttrs = addform.getCustomAttrs() [FD]
Line_3 $$ Session hbsession = HibernateUtil.currentSession() --> Line_20 $$ Query q1 = hbsession.createQuery("from org.nodevision.portal.hibernate.om.NvCustomAttrs as a") [FD]
Line_20 $$ Query q1 = hbsession.createQuery("from org.nodevision.portal.hibernate.om.NvCustomAttrs as a") --> Line_21 $$ Iterator attrs = q1.iterate() [FD]
Line_21 $$ Iterator attrs = q1.iterate() --> Line_23 $$ while (attrs.hasNext()) [FD]
Line_23 $$ while (attrs.hasNext()) --> Line_24 $$ NvCustomAttrs element = (NvCustomAttrs) attrs.next() [CD]
Line_21 $$ Iterator attrs = q1.iterate() --> Line_24 $$ NvCustomAttrs element = (NvCustomAttrs) attrs.next() [FD]
Line_23 $$ while (attrs.hasNext()) --> Line_25 $$ attrInfos.put(element.getAttrName(), element.getAttrType()) [CD]
Line_22 $$ HashMap attrInfos = new HashMap() --> Line_25 $$ attrInfos.put(element.getAttrName(), element.getAttrType()) [FD]
Line_24 $$ NvCustomAttrs element = (NvCustomAttrs) attrs.next() --> Line_25 $$ attrInfos.put(element.getAttrName(), element.getAttrType()) [FD]
Line_23 $$ while (attrs.hasNext()) --> Line_26 $$ NvCustomValuesId id = new NvCustomValuesId() [CD]
Line_23 $$ while (attrs.hasNext()) --> Line_27 $$ id.setNvUsers(user) [CD]
Line_26 $$ NvCustomValuesId id = new NvCustomValuesId() --> Line_27 $$ id.setNvUsers(user) [FD]
Line_23 $$ while (attrs.hasNext()) --> Line_28 $$ NvCustomValues value = new NvCustomValues() [CD]
Line_23 $$ while (attrs.hasNext()) --> Line_29 $$ id.setNvCustomAttrs(element) [CD]
Line_26 $$ NvCustomValuesId id = new NvCustomValuesId() --> Line_29 $$ id.setNvCustomAttrs(element) [FD]
Line_24 $$ NvCustomAttrs element = (NvCustomAttrs) attrs.next() --> Line_29 $$ id.setNvCustomAttrs(element) [FD]
Line_23 $$ while (attrs.hasNext()) --> Line_30 $$ value.setId(id) [CD]
Line_28 $$ NvCustomValues value = new NvCustomValues() --> Line_30 $$ value.setId(id) [FD]
Line_26 $$ NvCustomValuesId id = new NvCustomValuesId() --> Line_30 $$ value.setId(id) [FD]
Line_23 $$ while (attrs.hasNext()) --> Line_31 $$ if (element.getAttrType().equalsIgnoreCase("String")) [CD]
Line_24 $$ NvCustomAttrs element = (NvCustomAttrs) attrs.next() --> Line_31 $$ if (element.getAttrType().equalsIgnoreCase("String")) [FD]
Line_31 $$ if (element.getAttrType().equalsIgnoreCase("String")) --> Line_32 $$ ByteArrayOutputStream bout = new ByteArrayOutputStream() [CD]
Line_31 $$ if (element.getAttrType().equalsIgnoreCase("String")) --> Line_33 $$ ObjectOutputStream serializer = new ObjectOutputStream(bout) [CD]
Line_31 $$ if (element.getAttrType().equalsIgnoreCase("String")) --> Line_34 $$ serializer.writeObject(cAttrs.get(element.getAttrName()).toString()) [CD]
Line_33 $$ ObjectOutputStream serializer = new ObjectOutputStream(bout) --> Line_34 $$ serializer.writeObject(cAttrs.get(element.getAttrName()).toString()) [FD]
Line_19 $$ HashMap cAttrs = addform.getCustomAttrs() --> Line_34 $$ serializer.writeObject(cAttrs.get(element.getAttrName()).toString()) [FD]
Line_24 $$ NvCustomAttrs element = (NvCustomAttrs) attrs.next() --> Line_34 $$ serializer.writeObject(cAttrs.get(element.getAttrName()).toString()) [FD]
Line_31 $$ if (element.getAttrType().equalsIgnoreCase("String")) --> Line_35 $$ value.setAttrValue(Hibernate.createBlob(bout.toByteArray())) [CD]
Line_28 $$ NvCustomValues value = new NvCustomValues() --> Line_35 $$ value.setAttrValue(Hibernate.createBlob(bout.toByteArray())) [FD]
Line_32 $$ ByteArrayOutputStream bout = new ByteArrayOutputStream() --> Line_35 $$ value.setAttrValue(Hibernate.createBlob(bout.toByteArray())) [FD]
Line_31 $$ if (element.getAttrType().equalsIgnoreCase("String")) --> Line_36 $$ if (element.getAttrType().equalsIgnoreCase("Boolean")) [CD]
Line_24 $$ NvCustomAttrs element = (NvCustomAttrs) attrs.next() --> Line_36 $$ if (element.getAttrType().equalsIgnoreCase("Boolean")) [FD]
Line_36 $$ if (element.getAttrType().equalsIgnoreCase("Boolean")) --> Line_37 $$ Boolean valueBoolean = Boolean.FALSE [CD]
Line_36 $$ if (element.getAttrType().equalsIgnoreCase("Boolean")) --> Line_38 $$ if (cAttrs.get(element.getAttrName()) != null) [CD]
Line_19 $$ HashMap cAttrs = addform.getCustomAttrs() --> Line_38 $$ if (cAttrs.get(element.getAttrName()) != null) [FD]
Line_24 $$ NvCustomAttrs element = (NvCustomAttrs) attrs.next() --> Line_38 $$ if (cAttrs.get(element.getAttrName()) != null) [FD]
Line_38 $$ if (cAttrs.get(element.getAttrName()) != null) --> Line_39 $$ valueBoolean = Boolean.TRUE [CD]
Line_37 $$ Boolean valueBoolean = Boolean.FALSE --> Line_39 $$ valueBoolean = Boolean.TRUE [FD]
Line_36 $$ if (element.getAttrType().equalsIgnoreCase("Boolean")) --> Line_43 $$ serializer.writeObject(valueBoolean) [CD]
Line_33 $$ ObjectOutputStream serializer = new ObjectOutputStream(bout) --> Line_43 $$ serializer.writeObject(valueBoolean) [FD]
Line_37 $$ Boolean valueBoolean = Boolean.FALSE --> Line_43 $$ serializer.writeObject(valueBoolean) [FD]
Line_39 $$ valueBoolean = Boolean.TRUE --> Line_43 $$ serializer.writeObject(valueBoolean) [FD]
Line_36 $$ if (element.getAttrType().equalsIgnoreCase("Boolean")) --> Line_44 $$ value.setAttrValue(Hibernate.createBlob(bout.toByteArray())) [CD]
Line_28 $$ NvCustomValues value = new NvCustomValues() --> Line_44 $$ value.setAttrValue(Hibernate.createBlob(bout.toByteArray())) [FD]
Line_32 $$ ByteArrayOutputStream bout = new ByteArrayOutputStream() --> Line_44 $$ value.setAttrValue(Hibernate.createBlob(bout.toByteArray())) [FD]
Line_36 $$ if (element.getAttrType().equalsIgnoreCase("Boolean")) --> Line_45 $$ if (element.getAttrType().equalsIgnoreCase("Date")) [CD]
Line_24 $$ NvCustomAttrs element = (NvCustomAttrs) attrs.next() --> Line_45 $$ if (element.getAttrType().equalsIgnoreCase("Date")) [FD]
Line_45 $$ if (element.getAttrType().equalsIgnoreCase("Date")) --> Line_46 $$ Date date = new Date(0) [CD]
Line_45 $$ if (element.getAttrType().equalsIgnoreCase("Date")) --> Line_47 $$ if (!cAttrs.get(element.getAttrName()).toString().equalsIgnoreCase("")) [CD]
Line_19 $$ HashMap cAttrs = addform.getCustomAttrs() --> Line_47 $$ if (!cAttrs.get(element.getAttrName()).toString().equalsIgnoreCase("")) [FD]
Line_24 $$ NvCustomAttrs element = (NvCustomAttrs) attrs.next() --> Line_47 $$ if (!cAttrs.get(element.getAttrName()).toString().equalsIgnoreCase("")) [FD]
Line_47 $$ if (!cAttrs.get(element.getAttrName()).toString().equalsIgnoreCase("")) --> Line_48 $$ String bdate = cAttrs.get(element.getAttrName()).toString() [CD]
Line_19 $$ HashMap cAttrs = addform.getCustomAttrs() --> Line_48 $$ String bdate = cAttrs.get(element.getAttrName()).toString() [FD]
Line_24 $$ NvCustomAttrs element = (NvCustomAttrs) attrs.next() --> Line_48 $$ String bdate = cAttrs.get(element.getAttrName()).toString() [FD]
Line_47 $$ if (!cAttrs.get(element.getAttrName()).toString().equalsIgnoreCase("")) --> Line_49 $$ SimpleDateFormat df = new SimpleDateFormat("dd-MM-yyyy") [CD]
Line_47 $$ if (!cAttrs.get(element.getAttrName()).toString().equalsIgnoreCase("")) --> Line_50 $$ date = df.parse(bdate) [CD]
Line_46 $$ Date date = new Date(0) --> Line_50 $$ date = df.parse(bdate) [FD]
Line_49 $$ SimpleDateFormat df = new SimpleDateFormat("dd-MM-yyyy") --> Line_50 $$ date = df.parse(bdate) [FD]
Line_48 $$ String bdate = cAttrs.get(element.getAttrName()).toString() --> Line_50 $$ date = df.parse(bdate) [FD]
Line_45 $$ if (element.getAttrType().equalsIgnoreCase("Date")) --> Line_54 $$ serializer.writeObject(date) [CD]
Line_33 $$ ObjectOutputStream serializer = new ObjectOutputStream(bout) --> Line_54 $$ serializer.writeObject(date) [FD]
Line_46 $$ Date date = new Date(0) --> Line_54 $$ serializer.writeObject(date) [FD]
Line_50 $$ date = df.parse(bdate) --> Line_54 $$ serializer.writeObject(date) [FD]
Line_45 $$ if (element.getAttrType().equalsIgnoreCase("Date")) --> Line_55 $$ value.setAttrValue(Hibernate.createBlob(bout.toByteArray())) [CD]
Line_28 $$ NvCustomValues value = new NvCustomValues() --> Line_55 $$ value.setAttrValue(Hibernate.createBlob(bout.toByteArray())) [FD]
Line_32 $$ ByteArrayOutputStream bout = new ByteArrayOutputStream() --> Line_55 $$ value.setAttrValue(Hibernate.createBlob(bout.toByteArray())) [FD]
Line_23 $$ while (attrs.hasNext()) --> Line_57 $$ hbsession.saveOrUpdate(value) [CD]
Line_3 $$ Session hbsession = HibernateUtil.currentSession() --> Line_57 $$ hbsession.saveOrUpdate(value) [FD]
Line_28 $$ NvCustomValues value = new NvCustomValues() --> Line_57 $$ hbsession.saveOrUpdate(value) [FD]
Line_23 $$ while (attrs.hasNext()) --> Line_58 $$ hbsession.flush() [CD]
Line_3 $$ Session hbsession = HibernateUtil.currentSession() --> Line_58 $$ hbsession.flush() [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_60 $$ String bdate = addform.getUser_bdate() [FD]
Line_49 $$ SimpleDateFormat df = new SimpleDateFormat("dd-MM-yyyy") --> Line_62 $$ Date parsedDate = df.parse(bdate) [FD]
Line_61 $$ SimpleDateFormat df = new SimpleDateFormat("dd-MM-yyyy") --> Line_62 $$ Date parsedDate = df.parse(bdate) [FD]
Line_48 $$ String bdate = cAttrs.get(element.getAttrName()).toString() --> Line_62 $$ Date parsedDate = df.parse(bdate) [FD]
Line_60 $$ String bdate = addform.getUser_bdate() --> Line_62 $$ Date parsedDate = df.parse(bdate) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_63 $$ user.setTimezone(addform.getTimezone()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_64 $$ user.setLocale(addform.getLocale()) [FD]
Line_62 $$ Date parsedDate = df.parse(bdate) --> Line_65 $$ user.setBdate(new BigDecimal(parsedDate.getTime())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_66 $$ user.setGender(addform.getUser_gender()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_67 $$ user.setEmployer(addform.getEmployer()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_68 $$ user.setDepartment(addform.getDepartment()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_69 $$ user.setJobtitle(addform.getJobtitle()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_70 $$ user.setNamePrefix(addform.getName_prefix()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_71 $$ user.setNameGiven(addform.getName_given()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_72 $$ user.setNameFamily(addform.getName_famliy()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_73 $$ user.setNameMiddle(addform.getName_middle()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_74 $$ user.setNameSuffix(addform.getName_suffix()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_75 $$ user.setHomeName(addform.getHome_name()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_76 $$ user.setHomeStreet(addform.getHome_street()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_77 $$ user.setHomeStateprov(addform.getHome_stateprov()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_78 $$ user.setHomePostalcode(addform.getHome_postalcode().equalsIgnoreCase("") ? new Integer(0) : new Integer(addform.getHome_postalcode())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_79 $$ user.setHomeOrganization(addform.getHome_organization_name()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_80 $$ user.setHomeCountry(addform.getHome_country()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_81 $$ user.setHomeCity(addform.getHome_city()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_82 $$ user.setHomePhoneIntcode((addform.getHome_phone_intcode().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getHome_phone_intcode())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_83 $$ user.setHomePhoneLoccode((addform.getHome_phone_loccode().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getHome_phone_loccode())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_84 $$ user.setHomePhoneNumber((addform.getHome_phone_number().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getHome_phone_number())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_85 $$ user.setHomePhoneExt((addform.getHome_phone_ext().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getHome_phone_ext())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_86 $$ user.setHomePhoneComment(addform.getHome_phone_commment()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_87 $$ user.setHomeFaxIntcode((addform.getHome_fax_intcode().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getHome_fax_intcode())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_88 $$ user.setHomeFaxLoccode((addform.getHome_fax_loccode().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getHome_fax_loccode())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_89 $$ user.setHomeFaxNumber((addform.getHome_fax_number().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getHome_fax_number())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_90 $$ user.setHomeFaxExt((addform.getHome_fax_ext().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getHome_fax_ext())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_91 $$ user.setHomeFaxComment(addform.getHome_fax_commment()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_92 $$ user.setHomeMobileIntcode((addform.getHome_mobile_intcode().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getHome_mobile_intcode())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_93 $$ user.setHomeMobileLoccode((addform.getHome_mobile_loccode().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getHome_mobile_loccode())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_94 $$ user.setHomeMobileNumber((addform.getHome_mobile_number().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getHome_mobile_number())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_95 $$ user.setHomeMobileExt((addform.getHome_mobile_ext().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getHome_mobile_ext())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_96 $$ user.setHomeMobileComment(addform.getHome_mobile_commment()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_97 $$ user.setHomePagerIntcode((addform.getHome_pager_intcode().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getHome_pager_intcode())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_98 $$ user.setHomePagerLoccode((addform.getHome_pager_loccode().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getHome_pager_loccode())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_99 $$ user.setHomePagerNumber((addform.getHome_pager_number().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getHome_pager_number())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_100 $$ user.setHomePagerExt((addform.getHome_pager_ext().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getHome_pager_ext())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_101 $$ user.setHomePagerComment(addform.getHome_pager_commment()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_102 $$ user.setHomeUri(addform.getHome_uri()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_103 $$ user.setHomeEmail(addform.getHome_email()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_104 $$ user.setBusinessName(addform.getBusiness_name()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_105 $$ user.setBusinessStreet(addform.getBusiness_street()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_106 $$ user.setBusinessStateprov(addform.getBusiness_stateprov()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_107 $$ user.setBusinessPostalcode((addform.getBusiness_postalcode().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getBusiness_postalcode())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_108 $$ user.setBusinessOrganization(addform.getBusiness_organization_name()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_109 $$ user.setBusinessCountry(addform.getBusiness_country()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_110 $$ user.setBusinessCity(addform.getBusiness_city()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_111 $$ user.setBusinessPhoneIntcode((addform.getBusiness_phone_intcode().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getBusiness_phone_intcode())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_112 $$ user.setBusinessPhoneLoccode((addform.getBusiness_phone_loccode().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getBusiness_phone_loccode())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_113 $$ user.setBusinessPhoneNumber((addform.getBusiness_phone_number().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getBusiness_phone_number())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_114 $$ user.setBusinessPhoneExt((addform.getBusiness_phone_ext().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getBusiness_phone_ext())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_115 $$ user.setBusinessPhoneComment(addform.getBusiness_phone_commment()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_116 $$ user.setBusinessFaxIntcode((addform.getBusiness_fax_intcode().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getBusiness_fax_intcode())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_117 $$ user.setBusinessFaxLoccode((addform.getBusiness_fax_loccode().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getBusiness_fax_loccode())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_118 $$ user.setBusinessFaxNumber((addform.getBusiness_fax_number().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getBusiness_fax_number())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_119 $$ user.setBusinessFaxExt((addform.getBusiness_fax_ext().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getBusiness_fax_ext())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_120 $$ user.setBusinessFaxComment(addform.getBusiness_fax_commment()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_121 $$ user.setBusinessMobileIntcode((addform.getBusiness_mobile_intcode().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getBusiness_mobile_intcode())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_122 $$ user.setBusinessMobileLoccode((addform.getBusiness_mobile_loccode().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getBusiness_mobile_loccode())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_123 $$ user.setBusinessMobileNumber((addform.getBusiness_mobile_number().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getBusiness_mobile_number())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_124 $$ user.setBusinessMobileExt((addform.getBusiness_mobile_ext().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getBusiness_mobile_ext())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_125 $$ user.setBusinessMobileComment(addform.getBusiness_mobile_commment()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_126 $$ user.setBusinessPagerIntcode((addform.getBusiness_pager_intcode().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getBusiness_pager_intcode())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_127 $$ user.setBusinessPagerLoccode((addform.getBusiness_pager_loccode().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getBusiness_pager_loccode())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_128 $$ user.setBusinessPagerNumber((addform.getBusiness_pager_number().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getBusiness_pager_number())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_129 $$ user.setBusinessPagerExt((addform.getBusiness_pager_ext().equalsIgnoreCase("")) ? new Integer(0) : Integer.valueOf(addform.getBusiness_pager_ext())) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_130 $$ user.setBusinessPagerComment(addform.getBusiness_pager_commment()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_131 $$ user.setBusinessUri(addform.getBusiness_uri()) [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_132 $$ user.setBusinessEmail(addform.getBusiness_email()) [FD]
Line_3 $$ Session hbsession = HibernateUtil.currentSession() --> Line_134 $$ int deletedEntities = hbsession.createQuery(hqlDelete).setString("login", user.getLogin()).executeUpdate() [FD]
Line_133 $$ String hqlDelete = "delete org.nodevision.portal.hibernate.om.NvUserRoles where login = :login" --> Line_134 $$ int deletedEntities = hbsession.createQuery(hqlDelete).setString("login", user.getLogin()).executeUpdate() [FD]
Line_2 $$ private void updateUser(AddEditUserForm addform, HttpServletRequest request) throws Exception --> Line_135 $$ String[] selectedGroups = addform.getSelectedGroups() [FD]
Line_12 $$ for (int i = 0; i < pd.length; i++) --> Line_137 $$ for (int i = 0; i < selectedGroups.length; i++) [FD]
Line_137 $$ for (int i = 0; i < selectedGroups.length; i++) --> Line_138 $$ NvUserRolesId userroles = new NvUserRolesId() [CD]
Line_137 $$ for (int i = 0; i < selectedGroups.length; i++) --> Line_139 $$ userroles.setNvUsers(user) [CD]
Line_138 $$ NvUserRolesId userroles = new NvUserRolesId() --> Line_139 $$ userroles.setNvUsers(user) [FD]
Line_137 $$ for (int i = 0; i < selectedGroups.length; i++) --> Line_140 $$ userroles.setNvRoles((NvRoles) hbsession.load(NvRoles.class, selectedGroups[i])) [CD]
Line_138 $$ NvUserRolesId userroles = new NvUserRolesId() --> Line_140 $$ userroles.setNvRoles((NvRoles) hbsession.load(NvRoles.class, selectedGroups[i])) [FD]
Line_3 $$ Session hbsession = HibernateUtil.currentSession() --> Line_140 $$ userroles.setNvRoles((NvRoles) hbsession.load(NvRoles.class, selectedGroups[i])) [FD]
Line_137 $$ for (int i = 0; i < selectedGroups.length; i++) --> Line_141 $$ NvUserRoles newRole = new NvUserRoles() [CD]
Line_137 $$ for (int i = 0; i < selectedGroups.length; i++) --> Line_142 $$ newRole.setId(userroles) [CD]
Line_141 $$ NvUserRoles newRole = new NvUserRoles() --> Line_142 $$ newRole.setId(userroles) [FD]
Line_138 $$ NvUserRolesId userroles = new NvUserRolesId() --> Line_142 $$ newRole.setId(userroles) [FD]
Line_137 $$ for (int i = 0; i < selectedGroups.length; i++) --> Line_143 $$ newGroups.add(newRole) [CD]
Line_136 $$ Set newGroups = new HashSet() --> Line_143 $$ newGroups.add(newRole) [FD]
Line_141 $$ NvUserRoles newRole = new NvUserRoles() --> Line_143 $$ newGroups.add(newRole) [FD]
Line_136 $$ Set newGroups = new HashSet() --> Line_145 $$ user.setSetOfNvUserRoles(newGroups) [FD]
Line_3 $$ Session hbsession = HibernateUtil.currentSession() --> Line_146 $$ hbsession.update(user) [FD]
Line_3 $$ Session hbsession = HibernateUtil.currentSession() --> Line_147 $$ hbsession.flush() [FD]
Line_3 $$ Session hbsession = HibernateUtil.currentSession() --> Line_148 $$ if (!hbsession.connection().getAutoCommit()) [FD]
Line_148 $$ if (!hbsession.connection().getAutoCommit()) --> Line_149 $$ tx.commit() [CD]
Line_5 $$ Transaction tx = hbsession.beginTransaction() --> Line_149 $$ tx.commit() [FD]
