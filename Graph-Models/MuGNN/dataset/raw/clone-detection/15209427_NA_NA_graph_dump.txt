Line_2 $$ private void bokActionPerformed(java.awt.event.ActionEvent evt) --> Line_3 $$ if (this.tfGeneralSubDivision.getText().trim().equals("")) [CD]
Line_3 $$ if (this.tfGeneralSubDivision.getText().trim().equals("")) --> Line_4 $$ this.showWarningMessage("Enter general sub division") [CD]
Line_3 $$ if (this.tfGeneralSubDivision.getText().trim().equals("")) --> Line_6 $$ String[] patlib = newgen.presentation.NewGenMain.getAppletInstance().getPatronLibraryIds() [CD]
Line_3 $$ if (this.tfGeneralSubDivision.getText().trim().equals("")) --> Line_7 $$ String xmlreq = newgen.presentation.administration.AdministrationXMLGenerator.getInstance().saveGeneralSubDivision("1", this.tfGeneralSubDivision.getText(), patlib) [CD]
Line_6 $$ String[] patlib = newgen.presentation.NewGenMain.getAppletInstance().getPatronLibraryIds() --> Line_7 $$ String xmlreq = newgen.presentation.administration.AdministrationXMLGenerator.getInstance().saveGeneralSubDivision("1", this.tfGeneralSubDivision.getText(), patlib) [FD]
Line_3 $$ if (this.tfGeneralSubDivision.getText().trim().equals("")) --> Line_8 $$ System.out.println(xmlreq) [CD]
Line_7 $$ String xmlreq = newgen.presentation.administration.AdministrationXMLGenerator.getInstance().saveGeneralSubDivision("1", this.tfGeneralSubDivision.getText(), patlib) --> Line_8 $$ System.out.println(xmlreq) [FD]
Line_10 $$ java.net.URL url = new java.net.URL(ResourceBundle.getBundle("Administration").getString("ServerURL") + ResourceBundle.getBundle("Administration").getString("ServletSubPath") + "SubDivisionServlet") --> Line_11 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection() [FD]
Line_11 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection() --> Line_12 $$ urlconn.setDoOutput(true) [FD]
Line_11 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection() --> Line_13 $$ java.io.OutputStream dos = urlconn.getOutputStream() [FD]
Line_13 $$ java.io.OutputStream dos = urlconn.getOutputStream() --> Line_14 $$ dos.write(xmlreq.getBytes()) [FD]
Line_7 $$ String xmlreq = newgen.presentation.administration.AdministrationXMLGenerator.getInstance().saveGeneralSubDivision("1", this.tfGeneralSubDivision.getText(), patlib) --> Line_14 $$ dos.write(xmlreq.getBytes()) [FD]
Line_11 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection() --> Line_15 $$ java.io.InputStream ios = urlconn.getInputStream() [FD]
Line_16 $$ SAXBuilder saxb = new SAXBuilder() --> Line_17 $$ Document retdoc = saxb.build(ios) [FD]
Line_15 $$ java.io.InputStream ios = urlconn.getInputStream() --> Line_17 $$ Document retdoc = saxb.build(ios) [FD]
Line_17 $$ Document retdoc = saxb.build(ios) --> Line_18 $$ Element rootelement = retdoc.getRootElement() [FD]
Line_18 $$ Element rootelement = retdoc.getRootElement() --> Line_19 $$ if (rootelement.getChild("Error") == null) [FD]
Line_19 $$ if (rootelement.getChild("Error") == null) --> Line_20 $$ this.showInformationMessage(ResourceBundle.getBundle("Administration").getString("DataSavedInDatabase")) [CD]
Line_19 $$ if (rootelement.getChild("Error") == null) --> Line_22 $$ this.showErrorMessage(ResourceBundle.getBundle("Administration").getString("ErrorPleaseContactTheVendor")) [CD]
