Line_2 $$ public boolean doUpload(int count) --> Line_3 $$ String objFileName = Long.toString(new java.util.Date().getTime()) + Integer.toString(count) [CD]
Line_2 $$ public boolean doUpload(int count) --> Line_3 $$ String objFileName = Long.toString(new java.util.Date().getTime()) + Integer.toString(count) [FD]
Line_6 $$ File objFile = new File(this.contextPath + "/" + this.savePath, this.objectFileName[count]) --> Line_7 $$ if (objFile.exists()) [FD]
Line_7 $$ if (objFile.exists()) --> Line_8 $$ this.doUpload(count) [CD]
Line_2 $$ public boolean doUpload(int count) --> Line_8 $$ this.doUpload(count) [FD]
Line_7 $$ if (objFile.exists()) --> Line_10 $$ objFile.createNewFile() [CD]
Line_6 $$ File objFile = new File(this.contextPath + "/" + this.savePath, this.objectFileName[count]) --> Line_10 $$ objFile.createNewFile() [FD]
Line_14 $$ int readLength = 0 --> Line_18 $$ while ((readLength = this.inStream.readLine(this.b, 0, this.b.length)) != -1) [FD]
Line_18 $$ while ((readLength = this.inStream.readLine(this.b, 0, this.b.length)) != -1) --> Line_19 $$ str = new String(this.b, 0, readLength) [CD]
Line_16 $$ String str = "" --> Line_19 $$ str = new String(this.b, 0, readLength) [FD]
Line_18 $$ while ((readLength = this.inStream.readLine(this.b, 0, this.b.length)) != -1) --> Line_20 $$ if (str.indexOf("Content-Type:") != -1) [CD]
Line_19 $$ str = new String(this.b, 0, readLength) --> Line_20 $$ if (str.indexOf("Content-Type:") != -1) [FD]
Line_16 $$ String str = "" --> Line_20 $$ if (str.indexOf("Content-Type:") != -1) [FD]
Line_18 $$ while ((readLength = this.inStream.readLine(this.b, 0, this.b.length)) != -1) --> Line_25 $$ while ((readLength = this.inStream.readLine(this.b, 0, b.length)) != -1) [FD]
Line_14 $$ int readLength = 0 --> Line_25 $$ while ((readLength = this.inStream.readLine(this.b, 0, b.length)) != -1) [FD]
Line_25 $$ while ((readLength = this.inStream.readLine(this.b, 0, b.length)) != -1) --> Line_26 $$ str = new String(this.b, 0, readLength) [CD]
Line_19 $$ str = new String(this.b, 0, readLength) --> Line_26 $$ str = new String(this.b, 0, readLength) [FD]
Line_16 $$ String str = "" --> Line_26 $$ str = new String(this.b, 0, readLength) [FD]
Line_25 $$ while ((readLength = this.inStream.readLine(this.b, 0, b.length)) != -1) --> Line_27 $$ if (this.b[0] == 45 && this.b[1] == 45 && this.b[2] == 45 && this.b[3] == 45 && this.b[4] == 45) [CD]
Line_25 $$ while ((readLength = this.inStream.readLine(this.b, 0, b.length)) != -1) --> Line_30 $$ bos.write(this.b, 0, readLength) [CD]
Line_25 $$ while ((readLength = this.inStream.readLine(this.b, 0, b.length)) != -1) --> Line_30 $$ bos.write(this.b, 0, readLength) [FD]
Line_13 $$ BufferedOutputStream bos = new BufferedOutputStream(fos) --> Line_30 $$ bos.write(this.b, 0, readLength) [FD]
Line_18 $$ while ((readLength = this.inStream.readLine(this.b, 0, this.b.length)) != -1) --> Line_30 $$ bos.write(this.b, 0, readLength) [FD]
Line_14 $$ int readLength = 0 --> Line_30 $$ bos.write(this.b, 0, readLength) [FD]
Line_25 $$ while ((readLength = this.inStream.readLine(this.b, 0, b.length)) != -1) --> Line_31 $$ readSize += readLength [CD]
Line_25 $$ while ((readLength = this.inStream.readLine(this.b, 0, b.length)) != -1) --> Line_31 $$ readSize += readLength [FD]
Line_17 $$ long readSize = 0L --> Line_31 $$ readSize += readLength [FD]
Line_18 $$ while ((readLength = this.inStream.readLine(this.b, 0, this.b.length)) != -1) --> Line_31 $$ readSize += readLength [FD]
Line_14 $$ int readLength = 0 --> Line_31 $$ readSize += readLength [FD]
Line_25 $$ while ((readLength = this.inStream.readLine(this.b, 0, b.length)) != -1) --> Line_32 $$ if (readSize > this.size) [CD]
Line_31 $$ readSize += readLength --> Line_32 $$ if (readSize > this.size) [FD]
Line_17 $$ long readSize = 0L --> Line_32 $$ if (readSize > this.size) [FD]
Line_32 $$ if (readSize > this.size) --> Line_33 $$ this.fileMessage[count] = "�ϴ��ļ������ļ���С�������ƣ�" [CD]
Line_32 $$ if (readSize > this.size) --> Line_34 $$ this.ok = false [CD]
Line_38 $$ if (this.ok) --> Line_39 $$ bos.flush() [CD]
Line_13 $$ BufferedOutputStream bos = new BufferedOutputStream(fos) --> Line_39 $$ bos.flush() [FD]
Line_38 $$ if (this.ok) --> Line_40 $$ bos.close() [CD]
Line_13 $$ BufferedOutputStream bos = new BufferedOutputStream(fos) --> Line_40 $$ bos.close() [FD]
Line_38 $$ if (this.ok) --> Line_41 $$ int fileLength = (int) (objFile.length()) [CD]
Line_6 $$ File objFile = new File(this.contextPath + "/" + this.savePath, this.objectFileName[count]) --> Line_41 $$ int fileLength = (int) (objFile.length()) [FD]
Line_38 $$ if (this.ok) --> Line_42 $$ byte[] bb = new byte[fileLength - 2] [CD]
Line_38 $$ if (this.ok) --> Line_43 $$ FileInputStream fis = new FileInputStream(objFile) [CD]
Line_38 $$ if (this.ok) --> Line_44 $$ BufferedInputStream bis = new BufferedInputStream(fis) [CD]
Line_38 $$ if (this.ok) --> Line_45 $$ bis.read(bb, 0, (fileLength - 2)) [CD]
Line_44 $$ BufferedInputStream bis = new BufferedInputStream(fis) --> Line_45 $$ bis.read(bb, 0, (fileLength - 2)) [FD]
Line_42 $$ byte[] bb = new byte[fileLength - 2] --> Line_45 $$ bis.read(bb, 0, (fileLength - 2)) [FD]
Line_38 $$ if (this.ok) --> Line_46 $$ fis.close() [CD]
Line_43 $$ FileInputStream fis = new FileInputStream(objFile) --> Line_46 $$ fis.close() [FD]
Line_38 $$ if (this.ok) --> Line_47 $$ bis.close() [CD]
Line_44 $$ BufferedInputStream bis = new BufferedInputStream(fis) --> Line_47 $$ bis.close() [FD]
Line_38 $$ if (this.ok) --> Line_48 $$ this.objectFileName[count] = objFileName + "." + this.sourceFileExt[count] [CD]
Line_38 $$ if (this.ok) --> Line_49 $$ File ok_file = new File(this.contextPath + "/" + this.savePath, this.objectFileName[count]) [CD]
Line_38 $$ if (this.ok) --> Line_50 $$ ok_file.createNewFile() [CD]
Line_49 $$ File ok_file = new File(this.contextPath + "/" + this.savePath, this.objectFileName[count]) --> Line_50 $$ ok_file.createNewFile() [FD]
Line_38 $$ if (this.ok) --> Line_51 $$ BufferedOutputStream bos_ok = new BufferedOutputStream(new FileOutputStream(ok_file)) [CD]
Line_38 $$ if (this.ok) --> Line_52 $$ bos_ok.write(bb) [CD]
Line_51 $$ BufferedOutputStream bos_ok = new BufferedOutputStream(new FileOutputStream(ok_file)) --> Line_52 $$ bos_ok.write(bb) [FD]
Line_42 $$ byte[] bb = new byte[fileLength - 2] --> Line_52 $$ bos_ok.write(bb) [FD]
Line_38 $$ if (this.ok) --> Line_53 $$ bos_ok.close() [CD]
Line_51 $$ BufferedOutputStream bos_ok = new BufferedOutputStream(new FileOutputStream(ok_file)) --> Line_53 $$ bos_ok.close() [FD]
Line_38 $$ if (this.ok) --> Line_54 $$ objFile.delete() [CD]
Line_6 $$ File objFile = new File(this.contextPath + "/" + this.savePath, this.objectFileName[count]) --> Line_54 $$ objFile.delete() [FD]
Line_38 $$ if (this.ok) --> Line_55 $$ this.fileMessage[count] = "OK" [CD]
Line_38 $$ if (this.ok) --> Line_56 $$ return true [CD]
Line_38 $$ if (this.ok) --> Line_58 $$ bos.flush() [CD]
Line_13 $$ BufferedOutputStream bos = new BufferedOutputStream(fos) --> Line_58 $$ bos.flush() [FD]
Line_38 $$ if (this.ok) --> Line_59 $$ bos.close() [CD]
Line_13 $$ BufferedOutputStream bos = new BufferedOutputStream(fos) --> Line_59 $$ bos.close() [FD]
Line_38 $$ if (this.ok) --> Line_60 $$ File delFile = new File(this.contextPath + "/" + this.savePath, this.objectFileName[count]) [CD]
Line_38 $$ if (this.ok) --> Line_61 $$ delFile.delete() [CD]
Line_60 $$ File delFile = new File(this.contextPath + "/" + this.savePath, this.objectFileName[count]) --> Line_61 $$ delFile.delete() [FD]
Line_38 $$ if (this.ok) --> Line_62 $$ this.objectFileName[count] = "none" [CD]
Line_38 $$ if (this.ok) --> Line_63 $$ return false [CD]
