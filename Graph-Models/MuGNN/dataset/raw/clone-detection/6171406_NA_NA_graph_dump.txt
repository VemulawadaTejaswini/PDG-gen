Line_2 $$ public static void createTar(File directoryToPack, File targetTarFile) throws IOException --> Line_3 $$ if (directoryToPack == null) [CD]
Line_2 $$ public static void createTar(File directoryToPack, File targetTarFile) throws IOException --> Line_3 $$ if (directoryToPack == null) [FD]
Line_2 $$ public static void createTar(File directoryToPack, File targetTarFile) throws IOException --> Line_6 $$ if (targetTarFile == null) [CD]
Line_2 $$ public static void createTar(File directoryToPack, File targetTarFile) throws IOException --> Line_6 $$ if (targetTarFile == null) [FD]
Line_2 $$ public static void createTar(File directoryToPack, File targetTarFile) throws IOException --> Line_9 $$ if (!directoryToPack.exists() || !directoryToPack.isDirectory()) [CD]
Line_2 $$ public static void createTar(File directoryToPack, File targetTarFile) throws IOException --> Line_9 $$ if (!directoryToPack.exists() || !directoryToPack.isDirectory()) [FD]
Line_2 $$ public static void createTar(File directoryToPack, File targetTarFile) throws IOException --> Line_12 $$ if (targetTarFile.exists()) [CD]
Line_2 $$ public static void createTar(File directoryToPack, File targetTarFile) throws IOException --> Line_12 $$ if (targetTarFile.exists()) [FD]
Line_12 $$ if (targetTarFile.exists()) --> Line_13 $$ log.warn("The target file '" + targetTarFile + "' already exists. Will overwrite") [CD]
Line_2 $$ public static void createTar(File directoryToPack, File targetTarFile) throws IOException --> Line_15 $$ log.debug("Creating tar from all files in directory '" + directoryToPack + "'") [CD]
Line_2 $$ public static void createTar(File directoryToPack, File targetTarFile) throws IOException --> Line_16 $$ byte buffer[] = new byte[BUFFER_SIZE] [CD]
Line_2 $$ public static void createTar(File directoryToPack, File targetTarFile) throws IOException --> Line_17 $$ FileOutputStream targetOutput = new FileOutputStream(targetTarFile) [CD]
Line_2 $$ public static void createTar(File directoryToPack, File targetTarFile) throws IOException --> Line_18 $$ TarOutputStream targetOutputTar = new TarOutputStream(targetOutput) [CD]
Line_2 $$ public static void createTar(File directoryToPack, File targetTarFile) throws IOException --> Line_20 $$ List<File> fileList = collectFiles(directoryToPack) [FD]
Line_20 $$ List<File> fileList = collectFiles(directoryToPack) --> Line_21 $$ for (Iterator<File> iter = fileList.iterator(); iter.hasNext(); ) [FD]
Line_21 $$ for (Iterator<File> iter = fileList.iterator(); iter.hasNext(); ) --> Line_22 $$ File file = iter.next() [CD]
Line_21 $$ for (Iterator<File> iter = fileList.iterator(); iter.hasNext(); ) --> Line_22 $$ File file = iter.next() [FD]
Line_21 $$ for (Iterator<File> iter = fileList.iterator(); iter.hasNext(); ) --> Line_23 $$ if (file == null || !file.exists() || file.isDirectory()) [CD]
Line_22 $$ File file = iter.next() --> Line_23 $$ if (file == null || !file.exists() || file.isDirectory()) [FD]
Line_23 $$ if (file == null || !file.exists() || file.isDirectory()) --> Line_24 $$ log.info("The file '" + file + "' is ignored - is a directory or non-existent") [CD]
Line_21 $$ for (Iterator<File> iter = fileList.iterator(); iter.hasNext(); ) --> Line_27 $$ if (file.equals(targetTarFile)) [CD]
Line_22 $$ File file = iter.next() --> Line_27 $$ if (file.equals(targetTarFile)) [FD]
Line_2 $$ public static void createTar(File directoryToPack, File targetTarFile) throws IOException --> Line_27 $$ if (file.equals(targetTarFile)) [FD]
Line_27 $$ if (file.equals(targetTarFile)) --> Line_28 $$ log.debug("Skipping file: '" + file + "' - is the tar file itself") [CD]
Line_21 $$ for (Iterator<File> iter = fileList.iterator(); iter.hasNext(); ) --> Line_31 $$ log.debug("Adding to archive: file='" + file + "', archive='" + targetTarFile + "'") [CD]
Line_21 $$ for (Iterator<File> iter = fileList.iterator(); iter.hasNext(); ) --> Line_32 $$ String filePathInTar = getFilePathInTar(file, directoryToPack) [CD]
Line_22 $$ File file = iter.next() --> Line_32 $$ String filePathInTar = getFilePathInTar(file, directoryToPack) [FD]
Line_2 $$ public static void createTar(File directoryToPack, File targetTarFile) throws IOException --> Line_32 $$ String filePathInTar = getFilePathInTar(file, directoryToPack) [FD]
Line_21 $$ for (Iterator<File> iter = fileList.iterator(); iter.hasNext(); ) --> Line_33 $$ log.debug("File path in tar: '" + filePathInTar + "' (file=" + file + ")") [CD]
Line_21 $$ for (Iterator<File> iter = fileList.iterator(); iter.hasNext(); ) --> Line_34 $$ TarEntry tarAdd = new TarEntry(file) [CD]
Line_21 $$ for (Iterator<File> iter = fileList.iterator(); iter.hasNext(); ) --> Line_35 $$ tarAdd.setModTime(file.lastModified()) [CD]
Line_22 $$ File file = iter.next() --> Line_35 $$ tarAdd.setModTime(file.lastModified()) [FD]
Line_21 $$ for (Iterator<File> iter = fileList.iterator(); iter.hasNext(); ) --> Line_36 $$ tarAdd.setName(filePathInTar) [CD]
Line_32 $$ String filePathInTar = getFilePathInTar(file, directoryToPack) --> Line_36 $$ tarAdd.setName(filePathInTar) [FD]
Line_21 $$ for (Iterator<File> iter = fileList.iterator(); iter.hasNext(); ) --> Line_37 $$ targetOutputTar.putNextEntry(tarAdd) [CD]
Line_18 $$ TarOutputStream targetOutputTar = new TarOutputStream(targetOutput) --> Line_37 $$ targetOutputTar.putNextEntry(tarAdd) [FD]
Line_21 $$ for (Iterator<File> iter = fileList.iterator(); iter.hasNext(); ) --> Line_38 $$ if (file.isFile()) [CD]
Line_22 $$ File file = iter.next() --> Line_38 $$ if (file.isFile()) [FD]
Line_38 $$ if (file.isFile()) --> Line_39 $$ FileInputStream in = new FileInputStream(file) [CD]
Line_41 $$ while (true) --> Line_42 $$ int nRead = in.read(buffer, 0, buffer.length) [CD]
Line_39 $$ FileInputStream in = new FileInputStream(file) --> Line_42 $$ int nRead = in.read(buffer, 0, buffer.length) [FD]
Line_41 $$ while (true) --> Line_43 $$ if (nRead <= 0) [CD]
Line_42 $$ int nRead = in.read(buffer, 0, buffer.length) --> Line_43 $$ if (nRead <= 0) [FD]
Line_41 $$ while (true) --> Line_44 $$ targetOutputTar.write(buffer, 0, nRead) [CD]
Line_18 $$ TarOutputStream targetOutputTar = new TarOutputStream(targetOutput) --> Line_44 $$ targetOutputTar.write(buffer, 0, nRead) [FD]
Line_42 $$ int nRead = in.read(buffer, 0, buffer.length) --> Line_44 $$ targetOutputTar.write(buffer, 0, nRead) [FD]
Line_39 $$ FileInputStream in = new FileInputStream(file) --> Line_47 $$ StreamUtil.tryCloseStream(in) [FD]
Line_21 $$ for (Iterator<File> iter = fileList.iterator(); iter.hasNext(); ) --> Line_50 $$ targetOutputTar.closeEntry() [CD]
Line_18 $$ TarOutputStream targetOutputTar = new TarOutputStream(targetOutput) --> Line_50 $$ targetOutputTar.closeEntry() [FD]
Line_18 $$ TarOutputStream targetOutputTar = new TarOutputStream(targetOutput) --> Line_53 $$ StreamUtil.tryCloseStream(targetOutputTar) [FD]
Line_17 $$ FileOutputStream targetOutput = new FileOutputStream(targetTarFile) --> Line_54 $$ StreamUtil.tryCloseStream(targetOutput) [FD]
Line_2 $$ public static void createTar(File directoryToPack, File targetTarFile) throws IOException --> Line_56 $$ log.info("Tar Archive created successfully '" + targetTarFile + "'") [CD]
