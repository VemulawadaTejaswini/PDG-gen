Line_2 $$ public static void main(String[] args) --> Line_3 $$ FileDialog fd = new FileDialog(new Frame(), "Find a .def file", FileDialog.LOAD) [CD]
Line_2 $$ public static void main(String[] args) --> Line_4 $$ boolean proceed = true [CD]
Line_2 $$ public static void main(String[] args) --> Line_5 $$ String input = "" [CD]
Line_2 $$ public static void main(String[] args) --> Line_6 $$ DataInputStream dis [CD]
Line_2 $$ public static void main(String[] args) --> Line_7 $$ OutputStream out [CD]
Line_2 $$ public static void main(String[] args) --> Line_8 $$ InputStream in [CD]
Line_2 $$ public static void main(String[] args) --> Line_9 $$ File out_file, in_file [CD]
Line_2 $$ public static void main(String[] args) --> Line_10 $$ byte[] buffer = new byte[2048] [CD]
Line_2 $$ public static void main(String[] args) --> Line_11 $$ int bytes_read [CD]
Line_2 $$ public static void main(String[] args) --> Line_12 $$ while (proceed) [CD]
Line_12 $$ while (proceed) --> Line_13 $$ fd.show() [CD]
Line_3 $$ FileDialog fd = new FileDialog(new Frame(), "Find a .def file", FileDialog.LOAD) --> Line_13 $$ fd.show() [FD]
Line_12 $$ while (proceed) --> Line_14 $$ if (fd.getFile() != null) [CD]
Line_3 $$ FileDialog fd = new FileDialog(new Frame(), "Find a .def file", FileDialog.LOAD) --> Line_14 $$ if (fd.getFile() != null) [FD]
Line_9 $$ File out_file, in_file --> Line_16 $$ in_file = new File(fd.getDirectory(), fd.getFile()) [FD]
Line_3 $$ FileDialog fd = new FileDialog(new Frame(), "Find a .def file", FileDialog.LOAD) --> Line_16 $$ in_file = new File(fd.getDirectory(), fd.getFile()) [FD]
Line_9 $$ File out_file, in_file --> Line_17 $$ out_file = new File(fd.getDirectory(), fd.getFile() + ".out") [FD]
Line_3 $$ FileDialog fd = new FileDialog(new Frame(), "Find a .def file", FileDialog.LOAD) --> Line_17 $$ out_file = new File(fd.getDirectory(), fd.getFile() + ".out") [FD]
Line_7 $$ OutputStream out --> Line_18 $$ out = new FileOutputStream(out_file) [FD]
Line_8 $$ InputStream in --> Line_19 $$ in = new MSZipInputStream(new FileInputStream(in_file)) [FD]
Line_11 $$ int bytes_read --> Line_20 $$ while ((bytes_read = in.read(buffer)) != -1) out.write(buffer, 0, bytes_read) [FD]
Line_19 $$ in = new MSZipInputStream(new FileInputStream(in_file)) --> Line_20 $$ while ((bytes_read = in.read(buffer)) != -1) out.write(buffer, 0, bytes_read) [FD]
Line_8 $$ InputStream in --> Line_20 $$ while ((bytes_read = in.read(buffer)) != -1) out.write(buffer, 0, bytes_read) [FD]
Line_10 $$ byte[] buffer = new byte[2048] --> Line_20 $$ while ((bytes_read = in.read(buffer)) != -1) out.write(buffer, 0, bytes_read) [FD]
Line_18 $$ out = new FileOutputStream(out_file) --> Line_20 $$ while ((bytes_read = in.read(buffer)) != -1) out.write(buffer, 0, bytes_read) [FD]
Line_7 $$ OutputStream out --> Line_20 $$ while ((bytes_read = in.read(buffer)) != -1) out.write(buffer, 0, bytes_read) [FD]
Line_19 $$ in = new MSZipInputStream(new FileInputStream(in_file)) --> Line_21 $$ in.close() [FD]
Line_8 $$ InputStream in --> Line_21 $$ in.close() [FD]
Line_18 $$ out = new FileOutputStream(out_file) --> Line_22 $$ out.close() [FD]
Line_7 $$ OutputStream out --> Line_22 $$ out.close() [FD]
Line_12 $$ while (proceed) --> Line_27 $$ System.out.println("Do another (y/n)?") [CD]
Line_12 $$ while (proceed) --> Line_28 $$ dis = new DataInputStream(System.in) [CD]
Line_6 $$ DataInputStream dis --> Line_28 $$ dis = new DataInputStream(System.in) [FD]
Line_5 $$ String input = "" --> Line_30 $$ input = dis.readLine() [FD]
Line_28 $$ dis = new DataInputStream(System.in) --> Line_30 $$ input = dis.readLine() [FD]
Line_6 $$ DataInputStream dis --> Line_30 $$ input = dis.readLine() [FD]
Line_12 $$ while (proceed) --> Line_33 $$ if (input.toLowerCase().startsWith("n")) [CD]
Line_30 $$ input = dis.readLine() --> Line_33 $$ if (input.toLowerCase().startsWith("n")) [FD]
Line_5 $$ String input = "" --> Line_33 $$ if (input.toLowerCase().startsWith("n")) [FD]
Line_4 $$ boolean proceed = true --> Line_33 $$ if (input.toLowerCase().startsWith("n")) [FD]
