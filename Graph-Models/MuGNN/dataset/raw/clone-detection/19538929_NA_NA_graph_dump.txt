Line_2 $$ public void invoke(WorkflowContext arg0, ProgressMonitor arg1, Issues arg2) --> Line_3 $$ File inputFile = new File(getInputFile()) [CD]
Line_2 $$ public void invoke(WorkflowContext arg0, ProgressMonitor arg1, Issues arg2) --> Line_4 $$ File outputFile = new File(getOutputFile()) [CD]
Line_2 $$ public void invoke(WorkflowContext arg0, ProgressMonitor arg1, Issues arg2) --> Line_5 $$ if (!getFileExtension(getInputFile()).equalsIgnoreCase(getFileExtension(getOutputFile())) || !getFileExtension(getInputFile()).equalsIgnoreCase(OO_CALC_EXTENSION)) [CD]
Line_5 $$ if (!getFileExtension(getInputFile()).equalsIgnoreCase(getFileExtension(getOutputFile())) || !getFileExtension(getInputFile()).equalsIgnoreCase(OO_CALC_EXTENSION)) --> Line_6 $$ OpenOfficeConnection connection = new SocketOpenOfficeConnection() [CD]
Line_5 $$ if (!getFileExtension(getInputFile()).equalsIgnoreCase(getFileExtension(getOutputFile())) || !getFileExtension(getInputFile()).equalsIgnoreCase(OO_CALC_EXTENSION)) --> Line_7 $$ OpenOfficeDocumentConverter converter = new OpenOfficeDocumentConverter(connection) [CD]
Line_5 $$ if (!getFileExtension(getInputFile()).equalsIgnoreCase(getFileExtension(getOutputFile())) || !getFileExtension(getInputFile()).equalsIgnoreCase(OO_CALC_EXTENSION)) --> Line_8 $$ converter.convert(inputFile, outputFile) [CD]
Line_7 $$ OpenOfficeDocumentConverter converter = new OpenOfficeDocumentConverter(connection) --> Line_8 $$ converter.convert(inputFile, outputFile) [FD]
Line_3 $$ File inputFile = new File(getInputFile()) --> Line_8 $$ converter.convert(inputFile, outputFile) [FD]
Line_4 $$ File outputFile = new File(getOutputFile()) --> Line_8 $$ converter.convert(inputFile, outputFile) [FD]
Line_5 $$ if (!getFileExtension(getInputFile()).equalsIgnoreCase(getFileExtension(getOutputFile())) || !getFileExtension(getInputFile()).equalsIgnoreCase(OO_CALC_EXTENSION)) --> Line_9 $$ connection.disconnect() [CD]
Line_6 $$ OpenOfficeConnection connection = new SocketOpenOfficeConnection() --> Line_9 $$ connection.disconnect() [FD]
Line_5 $$ if (!getFileExtension(getInputFile()).equalsIgnoreCase(getFileExtension(getOutputFile())) || !getFileExtension(getInputFile()).equalsIgnoreCase(OO_CALC_EXTENSION)) --> Line_11 $$ FileChannel inputChannel = null [CD]
Line_5 $$ if (!getFileExtension(getInputFile()).equalsIgnoreCase(getFileExtension(getOutputFile())) || !getFileExtension(getInputFile()).equalsIgnoreCase(OO_CALC_EXTENSION)) --> Line_12 $$ FileChannel outputChannel = null [CD]
Line_11 $$ FileChannel inputChannel = null --> Line_14 $$ inputChannel = new FileInputStream(inputFile).getChannel() [FD]
Line_12 $$ FileChannel outputChannel = null --> Line_15 $$ outputChannel = new FileOutputStream(outputFile).getChannel() [FD]
Line_12 $$ FileChannel outputChannel = null --> Line_16 $$ outputChannel.transferFrom(inputChannel, 0, inputChannel.size()) [FD]
Line_15 $$ outputChannel = new FileOutputStream(outputFile).getChannel() --> Line_16 $$ outputChannel.transferFrom(inputChannel, 0, inputChannel.size()) [FD]
Line_11 $$ FileChannel inputChannel = null --> Line_16 $$ outputChannel.transferFrom(inputChannel, 0, inputChannel.size()) [FD]
Line_14 $$ inputChannel = new FileInputStream(inputFile).getChannel() --> Line_16 $$ outputChannel.transferFrom(inputChannel, 0, inputChannel.size()) [FD]
Line_2 $$ public void invoke(WorkflowContext arg0, ProgressMonitor arg1, Issues arg2) --> Line_18 $$ arg2.addError("File not found: " + e.getMessage()) [FD]
Line_2 $$ public void invoke(WorkflowContext arg0, ProgressMonitor arg1, Issues arg2) --> Line_20 $$ arg2.addError("Could not copy file: " + e.getMessage()) [FD]
Line_11 $$ FileChannel inputChannel = null --> Line_22 $$ if (inputChannel != null) [FD]
Line_14 $$ inputChannel = new FileInputStream(inputFile).getChannel() --> Line_22 $$ if (inputChannel != null) [FD]
Line_11 $$ FileChannel inputChannel = null --> Line_24 $$ inputChannel.close() [FD]
Line_14 $$ inputChannel = new FileInputStream(inputFile).getChannel() --> Line_24 $$ inputChannel.close() [FD]
Line_2 $$ public void invoke(WorkflowContext arg0, ProgressMonitor arg1, Issues arg2) --> Line_26 $$ arg2.addError("Could not close input channel: " + e.getMessage()) [FD]
Line_12 $$ FileChannel outputChannel = null --> Line_29 $$ if (outputChannel != null) [FD]
Line_15 $$ outputChannel = new FileOutputStream(outputFile).getChannel() --> Line_29 $$ if (outputChannel != null) [FD]
Line_12 $$ FileChannel outputChannel = null --> Line_31 $$ outputChannel.close() [FD]
Line_15 $$ outputChannel = new FileOutputStream(outputFile).getChannel() --> Line_31 $$ outputChannel.close() [FD]
Line_2 $$ public void invoke(WorkflowContext arg0, ProgressMonitor arg1, Issues arg2) --> Line_33 $$ arg2.addError("Could not close input channel: " + e.getMessage()) [FD]
