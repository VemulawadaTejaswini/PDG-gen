Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_3 $$ String fromFilename = fromFile.getPath() [CD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_3 $$ String fromFilename = fromFile.getPath() [FD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_4 $$ String toFileName = toFile.getPath() [CD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_4 $$ String toFileName = toFile.getPath() [FD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_5 $$ if (!fromFile.exists()) [CD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_5 $$ if (!fromFile.exists()) [FD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_6 $$ if (!fromFile.isFile()) [CD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_6 $$ if (!fromFile.isFile()) [FD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_7 $$ if (!fromFile.canRead()) [CD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_7 $$ if (!fromFile.canRead()) [FD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_8 $$ toFile = new File(toFile, fromFile.getName()) [CD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_8 $$ toFile = new File(toFile, fromFile.getName()) [FD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_9 $$ if (toFile.exists()) [CD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_9 $$ if (toFile.exists()) [FD]
Line_8 $$ toFile = new File(toFile, fromFile.getName()) --> Line_9 $$ if (toFile.exists()) [FD]
Line_9 $$ if (toFile.exists()) --> Line_10 $$ if (!toFile.canWrite()) [CD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_10 $$ if (!toFile.canWrite()) [FD]
Line_8 $$ toFile = new File(toFile, fromFile.getName()) --> Line_10 $$ if (!toFile.canWrite()) [FD]
Line_9 $$ if (toFile.exists()) --> Line_11 $$ System.out.print("Overwrite existing file " + toFile.getName() + "? (Y/N): ") [CD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_11 $$ System.out.print("Overwrite existing file " + toFile.getName() + "? (Y/N): ") [FD]
Line_8 $$ toFile = new File(toFile, fromFile.getName()) --> Line_11 $$ System.out.print("Overwrite existing file " + toFile.getName() + "? (Y/N): ") [FD]
Line_9 $$ if (toFile.exists()) --> Line_12 $$ System.out.flush() [CD]
Line_9 $$ if (toFile.exists()) --> Line_13 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in)) [CD]
Line_9 $$ if (toFile.exists()) --> Line_14 $$ String response = in.readLine() [CD]
Line_13 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in)) --> Line_14 $$ String response = in.readLine() [FD]
Line_9 $$ if (toFile.exists()) --> Line_15 $$ if (!response.equals("Y") && !response.equals("y")) [CD]
Line_14 $$ String response = in.readLine() --> Line_15 $$ if (!response.equals("Y") && !response.equals("y")) [FD]
Line_9 $$ if (toFile.exists()) --> Line_17 $$ String parent = toFile.getParent() [CD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_17 $$ String parent = toFile.getParent() [FD]
Line_8 $$ toFile = new File(toFile, fromFile.getName()) --> Line_17 $$ String parent = toFile.getParent() [FD]
Line_9 $$ if (toFile.exists()) --> Line_18 $$ parent = System.getProperty("user.dir") [CD]
Line_17 $$ String parent = toFile.getParent() --> Line_18 $$ parent = System.getProperty("user.dir") [FD]
Line_9 $$ if (toFile.exists()) --> Line_19 $$ File dir = new File(parent) [CD]
Line_9 $$ if (toFile.exists()) --> Line_20 $$ if (!dir.exists()) [CD]
Line_19 $$ File dir = new File(parent) --> Line_20 $$ if (!dir.exists()) [FD]
Line_9 $$ if (toFile.exists()) --> Line_21 $$ if (dir.isFile()) [CD]
Line_19 $$ File dir = new File(parent) --> Line_21 $$ if (dir.isFile()) [FD]
Line_9 $$ if (toFile.exists()) --> Line_22 $$ if (!dir.canWrite()) [CD]
Line_19 $$ File dir = new File(parent) --> Line_22 $$ if (!dir.canWrite()) [FD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_24 $$ FileInputStream from = null [CD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_25 $$ FileOutputStream to = null [CD]
Line_24 $$ FileInputStream from = null --> Line_27 $$ from = new FileInputStream(fromFile) [FD]
Line_25 $$ FileOutputStream to = null --> Line_28 $$ to = new FileOutputStream(toFile) [FD]
Line_30 $$ int bytesRead --> Line_31 $$ while ((bytesRead = from.read(buffer)) != -1) to.write(buffer, 0, bytesRead) [FD]
Line_24 $$ FileInputStream from = null --> Line_31 $$ while ((bytesRead = from.read(buffer)) != -1) to.write(buffer, 0, bytesRead) [FD]
Line_27 $$ from = new FileInputStream(fromFile) --> Line_31 $$ while ((bytesRead = from.read(buffer)) != -1) to.write(buffer, 0, bytesRead) [FD]
Line_29 $$ byte[] buffer = new byte[4096] --> Line_31 $$ while ((bytesRead = from.read(buffer)) != -1) to.write(buffer, 0, bytesRead) [FD]
Line_25 $$ FileOutputStream to = null --> Line_31 $$ while ((bytesRead = from.read(buffer)) != -1) to.write(buffer, 0, bytesRead) [FD]
Line_28 $$ to = new FileOutputStream(toFile) --> Line_31 $$ while ((bytesRead = from.read(buffer)) != -1) to.write(buffer, 0, bytesRead) [FD]
Line_24 $$ FileInputStream from = null --> Line_33 $$ if (from != null) [FD]
Line_27 $$ from = new FileInputStream(fromFile) --> Line_33 $$ if (from != null) [FD]
Line_24 $$ FileInputStream from = null --> Line_34 $$ from.close() [FD]
Line_27 $$ from = new FileInputStream(fromFile) --> Line_34 $$ from.close() [FD]
Line_25 $$ FileOutputStream to = null --> Line_38 $$ if (to != null) [FD]
Line_28 $$ to = new FileOutputStream(toFile) --> Line_38 $$ if (to != null) [FD]
Line_25 $$ FileOutputStream to = null --> Line_39 $$ to.close() [FD]
Line_28 $$ to = new FileOutputStream(toFile) --> Line_39 $$ to.close() [FD]
