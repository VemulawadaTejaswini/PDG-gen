Line_2 $$ public void run() --> Line_3 $$ ShareFolder part = (ShareFolder) ObjectClone.clone(readers[j]) [CD]
Line_2 $$ public void run() --> Line_4 $$ ShareFileReader reader = new ShareFileReader(readers[j], files[0]) [CD]
Line_2 $$ public void run() --> Line_5 $$ ShareFileWriter writer = new ShareFileWriter(part, new File("Downloads/" + readers[j].getName())) [CD]
Line_2 $$ public void run() --> Line_6 $$ long tot = 0 [CD]
Line_2 $$ public void run() --> Line_7 $$ byte[] b = new byte[(int) (Math.random() * 10000)] [CD]
Line_2 $$ public void run() --> Line_8 $$ while (tot < readers[j].getSize()) [CD]
Line_6 $$ long tot = 0 --> Line_8 $$ while (tot < readers[j].getSize()) [FD]
Line_8 $$ while (tot < readers[j].getSize()) --> Line_9 $$ reader.read(b) [CD]
Line_4 $$ ShareFileReader reader = new ShareFileReader(readers[j], files[0]) --> Line_9 $$ reader.read(b) [FD]
Line_7 $$ byte[] b = new byte[(int) (Math.random() * 10000)] --> Line_9 $$ reader.read(b) [FD]
Line_8 $$ while (tot < readers[j].getSize()) --> Line_10 $$ byte[] bwrite = new byte[(int) (Math.random() * 10000) + b.length] [CD]
Line_8 $$ while (tot < readers[j].getSize()) --> Line_11 $$ System.arraycopy(b, 0, bwrite, 0, b.length) [CD]
Line_7 $$ byte[] b = new byte[(int) (Math.random() * 10000)] --> Line_11 $$ System.arraycopy(b, 0, bwrite, 0, b.length) [FD]
Line_10 $$ byte[] bwrite = new byte[(int) (Math.random() * 10000) + b.length] --> Line_11 $$ System.arraycopy(b, 0, bwrite, 0, b.length) [FD]
Line_8 $$ while (tot < readers[j].getSize()) --> Line_12 $$ writer.write(bwrite, b.length) [CD]
Line_5 $$ ShareFileWriter writer = new ShareFileWriter(part, new File("Downloads/" + readers[j].getName())) --> Line_12 $$ writer.write(bwrite, b.length) [FD]
Line_10 $$ byte[] bwrite = new byte[(int) (Math.random() * 10000) + b.length] --> Line_12 $$ writer.write(bwrite, b.length) [FD]
Line_8 $$ while (tot < readers[j].getSize()) --> Line_13 $$ tot += b.length [CD]
Line_6 $$ long tot = 0 --> Line_13 $$ tot += b.length [FD]
Line_2 $$ public void run() --> Line_16 $$ System.out.println((int) (done * 100.0 / PARTS) + "% Complete") [CD]
Line_13 $$ tot += b.length --> Line_8 $$ while (tot < readers[j].getSize()) [FD]
