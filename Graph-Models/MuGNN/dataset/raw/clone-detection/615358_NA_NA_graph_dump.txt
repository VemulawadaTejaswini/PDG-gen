Line_2 $$ public static void decompressFile(File orig) throws IOException --> Line_3 $$ File file = new File(INPUT + orig.toString()) [CD]
Line_2 $$ public static void decompressFile(File orig) throws IOException --> Line_3 $$ File file = new File(INPUT + orig.toString()) [FD]
Line_2 $$ public static void decompressFile(File orig) throws IOException --> Line_4 $$ File target = new File(OUTPUT + orig.toString().replaceAll(".xml.gz", ".xml")) [CD]
Line_2 $$ public static void decompressFile(File orig) throws IOException --> Line_4 $$ File target = new File(OUTPUT + orig.toString().replaceAll(".xml.gz", ".xml")) [FD]
Line_2 $$ public static void decompressFile(File orig) throws IOException --> Line_5 $$ System.out.println("    Decompressing \"" + file.getName() + "\" into \"" + target + "\"") [CD]
Line_3 $$ File file = new File(INPUT + orig.toString()) --> Line_5 $$ System.out.println("    Decompressing \"" + file.getName() + "\" into \"" + target + "\"") [FD]
Line_2 $$ public static void decompressFile(File orig) throws IOException --> Line_6 $$ long l = file.length() [CD]
Line_3 $$ File file = new File(INPUT + orig.toString()) --> Line_6 $$ long l = file.length() [FD]
Line_2 $$ public static void decompressFile(File orig) throws IOException --> Line_7 $$ GZIPInputStream gzipinputstream = new GZIPInputStream(new FileInputStream(file)) [CD]
Line_2 $$ public static void decompressFile(File orig) throws IOException --> Line_8 $$ FileOutputStream fileoutputstream = new FileOutputStream(target) [CD]
Line_2 $$ public static void decompressFile(File orig) throws IOException --> Line_9 $$ byte abyte0[] = new byte[1024] [CD]
Line_2 $$ public static void decompressFile(File orig) throws IOException --> Line_10 $$ int i [CD]
Line_2 $$ public static void decompressFile(File orig) throws IOException --> Line_11 $$ while ((i = gzipinputstream.read(abyte0)) != -1) fileoutputstream.write(abyte0, 0, i) [CD]
Line_10 $$ int i --> Line_11 $$ while ((i = gzipinputstream.read(abyte0)) != -1) fileoutputstream.write(abyte0, 0, i) [FD]
Line_7 $$ GZIPInputStream gzipinputstream = new GZIPInputStream(new FileInputStream(file)) --> Line_11 $$ while ((i = gzipinputstream.read(abyte0)) != -1) fileoutputstream.write(abyte0, 0, i) [FD]
Line_8 $$ FileOutputStream fileoutputstream = new FileOutputStream(target) --> Line_11 $$ while ((i = gzipinputstream.read(abyte0)) != -1) fileoutputstream.write(abyte0, 0, i) [FD]
Line_2 $$ public static void decompressFile(File orig) throws IOException --> Line_12 $$ fileoutputstream.close() [CD]
Line_8 $$ FileOutputStream fileoutputstream = new FileOutputStream(target) --> Line_12 $$ fileoutputstream.close() [FD]
Line_2 $$ public static void decompressFile(File orig) throws IOException --> Line_13 $$ gzipinputstream.close() [CD]
Line_7 $$ GZIPInputStream gzipinputstream = new GZIPInputStream(new FileInputStream(file)) --> Line_13 $$ gzipinputstream.close() [FD]
Line_2 $$ public static void decompressFile(File orig) throws IOException --> Line_14 $$ long l1 = target.length() [CD]
Line_4 $$ File target = new File(OUTPUT + orig.toString().replaceAll(".xml.gz", ".xml")) --> Line_14 $$ long l1 = target.length() [FD]
Line_2 $$ public static void decompressFile(File orig) throws IOException --> Line_15 $$ System.out.println("    Initial size: " + l + "; Decompressed size: " + l1 + ".") [CD]
Line_2 $$ public static void decompressFile(File orig) throws IOException --> Line_16 $$ System.out.println("    Done.") [CD]
Line_2 $$ public static void decompressFile(File orig) throws IOException --> Line_17 $$ System.out.println() [CD]
