Line_2 $$ protected void createValueListAnnotation(IProgressMonitor monitor, IPackageFragment pack, Map model) throws CoreException --> Line_3 $$ IProject pj = pack.getJavaProject().getProject() [CD]
Line_2 $$ protected void createValueListAnnotation(IProgressMonitor monitor, IPackageFragment pack, Map model) throws CoreException --> Line_3 $$ IProject pj = pack.getJavaProject().getProject() [FD]
Line_2 $$ protected void createValueListAnnotation(IProgressMonitor monitor, IPackageFragment pack, Map model) throws CoreException --> Line_4 $$ QualifiedName qn = new QualifiedName(JstActivator.PLUGIN_ID, JstActivator.PACKAGE_INFO_LOCATION) [CD]
Line_2 $$ protected void createValueListAnnotation(IProgressMonitor monitor, IPackageFragment pack, Map model) throws CoreException --> Line_5 $$ String location = pj.getPersistentProperty(qn) [CD]
Line_3 $$ IProject pj = pack.getJavaProject().getProject() --> Line_5 $$ String location = pj.getPersistentProperty(qn) [FD]
Line_4 $$ QualifiedName qn = new QualifiedName(JstActivator.PLUGIN_ID, JstActivator.PACKAGE_INFO_LOCATION) --> Line_5 $$ String location = pj.getPersistentProperty(qn) [FD]
Line_2 $$ protected void createValueListAnnotation(IProgressMonitor monitor, IPackageFragment pack, Map model) throws CoreException --> Line_6 $$ if (location != null) [CD]
Line_5 $$ String location = pj.getPersistentProperty(qn) --> Line_6 $$ if (location != null) [FD]
Line_6 $$ if (location != null) --> Line_7 $$ IFolder javaFolder = pj.getFolder(new Path(NexOpenFacetInstallDataModelProvider.WEB_SRC_MAIN_JAVA)) [CD]
Line_3 $$ IProject pj = pack.getJavaProject().getProject() --> Line_7 $$ IFolder javaFolder = pj.getFolder(new Path(NexOpenFacetInstallDataModelProvider.WEB_SRC_MAIN_JAVA)) [FD]
Line_6 $$ if (location != null) --> Line_8 $$ IFolder packageInfo = javaFolder.getFolder(location) [CD]
Line_7 $$ IFolder javaFolder = pj.getFolder(new Path(NexOpenFacetInstallDataModelProvider.WEB_SRC_MAIN_JAVA)) --> Line_8 $$ IFolder packageInfo = javaFolder.getFolder(location) [FD]
Line_5 $$ String location = pj.getPersistentProperty(qn) --> Line_8 $$ IFolder packageInfo = javaFolder.getFolder(location) [FD]
Line_6 $$ if (location != null) --> Line_9 $$ if (!packageInfo.exists()) [CD]
Line_8 $$ IFolder packageInfo = javaFolder.getFolder(location) --> Line_9 $$ if (!packageInfo.exists()) [FD]
Line_9 $$ if (!packageInfo.exists()) --> Line_10 $$ Logger.log(Logger.INFO, "package-info package [" + location + "] does not exists.") [CD]
Line_9 $$ if (!packageInfo.exists()) --> Line_11 $$ Logger.log(Logger.INFO, "ValueList annotation will not be added by this wizard. " + "You must add manually in your package-info class if exist " + "or create a new one at location " + location) [CD]
Line_9 $$ if (!packageInfo.exists()) --> Line_12 $$ return [CD]
Line_6 $$ if (location != null) --> Line_14 $$ IFile pkginfo = packageInfo.getFile("package-info.java") [CD]
Line_8 $$ IFolder packageInfo = javaFolder.getFolder(location) --> Line_14 $$ IFile pkginfo = packageInfo.getFile("package-info.java") [FD]
Line_6 $$ if (location != null) --> Line_15 $$ if (!pkginfo.exists()) [CD]
Line_14 $$ IFile pkginfo = packageInfo.getFile("package-info.java") --> Line_15 $$ if (!pkginfo.exists()) [FD]
Line_15 $$ if (!pkginfo.exists()) --> Line_16 $$ Logger.log(Logger.INFO, "package-info class at location [" + location + "] does not exists.") [CD]
Line_15 $$ if (!pkginfo.exists()) --> Line_17 $$ return [CD]
Line_6 $$ if (location != null) --> Line_19 $$ InputStream in = pkginfo.getContents() [CD]
Line_14 $$ IFile pkginfo = packageInfo.getFile("package-info.java") --> Line_19 $$ InputStream in = pkginfo.getContents() [FD]
Line_6 $$ if (location != null) --> Line_20 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() [CD]
Line_19 $$ InputStream in = pkginfo.getContents() --> Line_22 $$ IOUtils.copy(in, baos) [FD]
Line_20 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() --> Line_22 $$ IOUtils.copy(in, baos) [FD]
Line_20 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() --> Line_23 $$ String content = new String(baos.toByteArray()) [FD]
Line_2 $$ protected void createValueListAnnotation(IProgressMonitor monitor, IPackageFragment pack, Map model) throws CoreException --> Line_25 $$ model.put("adapterType", getAdapterType()) [FD]
Line_2 $$ protected void createValueListAnnotation(IProgressMonitor monitor, IPackageFragment pack, Map model) throws CoreException --> Line_26 $$ model.put("packageInfo", location.replace('/', '.')) [FD]
Line_5 $$ String location = pj.getPersistentProperty(qn) --> Line_26 $$ model.put("packageInfo", location.replace('/', '.')) [FD]
Line_2 $$ protected void createValueListAnnotation(IProgressMonitor monitor, IPackageFragment pack, Map model) throws CoreException --> Line_27 $$ model.put("defaultNumberPerPage", "5") [FD]
Line_2 $$ protected void createValueListAnnotation(IProgressMonitor monitor, IPackageFragment pack, Map model) throws CoreException --> Line_28 $$ model.put("defaultSortDirection", "asc") [FD]
Line_29 $$ if (isFacadeAdapter()) --> Line_30 $$ model.put("facadeType", "true") [CD]
Line_2 $$ protected void createValueListAnnotation(IProgressMonitor monitor, IPackageFragment pack, Map model) throws CoreException --> Line_30 $$ model.put("facadeType", "true") [FD]
Line_23 $$ String content = new String(baos.toByteArray()) --> Line_32 $$ if (content.indexOf("@ValueLists( [FD]
Line_32 $$ if (content.indexOf("@ValueLists( --> Line_33 $$ appendValueList(monitor, model, pkginfo, content, engine, true) [CD]
Line_2 $$ protected void createValueListAnnotation(IProgressMonitor monitor, IPackageFragment pack, Map model) throws CoreException --> Line_33 $$ appendValueList(monitor, model, pkginfo, content, engine, true) [FD]
Line_14 $$ IFile pkginfo = packageInfo.getFile("package-info.java") --> Line_33 $$ appendValueList(monitor, model, pkginfo, content, engine, true) [FD]
Line_23 $$ String content = new String(baos.toByteArray()) --> Line_33 $$ appendValueList(monitor, model, pkginfo, content, engine, true) [FD]
Line_24 $$ VelocityEngine engine = VelocityEngineHolder.getEngine() --> Line_33 $$ appendValueList(monitor, model, pkginfo, content, engine, true) [FD]
Line_32 $$ if (content.indexOf("@ValueLists( --> Line_34 $$ return [CD]
Line_32 $$ if (content.indexOf("@ValueLists( --> Line_35 $$ if (content.indexOf("@ValueLists") > -1) [CD]
Line_23 $$ String content = new String(baos.toByteArray()) --> Line_35 $$ if (content.indexOf("@ValueLists") > -1) [FD]
Line_35 $$ if (content.indexOf("@ValueLists") > -1) --> Line_36 $$ appendValueList(monitor, model, pkginfo, content, engine, false) [CD]
Line_2 $$ protected void createValueListAnnotation(IProgressMonitor monitor, IPackageFragment pack, Map model) throws CoreException --> Line_36 $$ appendValueList(monitor, model, pkginfo, content, engine, false) [FD]
Line_14 $$ IFile pkginfo = packageInfo.getFile("package-info.java") --> Line_36 $$ appendValueList(monitor, model, pkginfo, content, engine, false) [FD]
Line_23 $$ String content = new String(baos.toByteArray()) --> Line_36 $$ appendValueList(monitor, model, pkginfo, content, engine, false) [FD]
Line_24 $$ VelocityEngine engine = VelocityEngineHolder.getEngine() --> Line_36 $$ appendValueList(monitor, model, pkginfo, content, engine, false) [FD]
Line_35 $$ if (content.indexOf("@ValueLists") > -1) --> Line_37 $$ return [CD]
Line_24 $$ VelocityEngine engine = VelocityEngineHolder.getEngine() --> Line_39 $$ String vl = VelocityEngineUtils.mergeTemplateIntoString(engine, "ValueList.vm", model) [FD]
Line_2 $$ protected void createValueListAnnotation(IProgressMonitor monitor, IPackageFragment pack, Map model) throws CoreException --> Line_39 $$ String vl = VelocityEngineUtils.mergeTemplateIntoString(engine, "ValueList.vm", model) [FD]
Line_39 $$ String vl = VelocityEngineUtils.mergeTemplateIntoString(engine, "ValueList.vm", model) --> Line_40 $$ ByteArrayInputStream bais = new ByteArrayInputStream(vl.getBytes()) [FD]
Line_14 $$ IFile pkginfo = packageInfo.getFile("package-info.java") --> Line_42 $$ pkginfo.setContents(bais, true, false, monitor) [FD]
Line_40 $$ ByteArrayInputStream bais = new ByteArrayInputStream(vl.getBytes()) --> Line_42 $$ pkginfo.setContents(bais, true, false, monitor) [FD]
Line_2 $$ protected void createValueListAnnotation(IProgressMonitor monitor, IPackageFragment pack, Map model) throws CoreException --> Line_42 $$ pkginfo.setContents(bais, true, false, monitor) [FD]
Line_40 $$ ByteArrayInputStream bais = new ByteArrayInputStream(vl.getBytes()) --> Line_44 $$ bais.close() [FD]
Line_20 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() --> Line_55 $$ baos.close() [FD]
Line_19 $$ InputStream in = pkginfo.getContents() --> Line_56 $$ in.close() [FD]
Line_2 $$ protected void createValueListAnnotation(IProgressMonitor monitor, IPackageFragment pack, Map model) throws CoreException --> Line_61 $$ Logger.log(Logger.INFO, "package-info location property does not exists.") [CD]
