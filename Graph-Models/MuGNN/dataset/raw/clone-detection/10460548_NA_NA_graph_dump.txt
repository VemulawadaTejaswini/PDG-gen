Line_2 $$ public void parse() --> Line_3 $$ InputSource urlInputStream = null [CD]
Line_2 $$ public void parse() --> Line_4 $$ SAXParserFactory spf = null [CD]
Line_2 $$ public void parse() --> Line_5 $$ SAXParser sp = null [CD]
Line_2 $$ public void parse() --> Line_6 $$ HttpURLConnection conn = null [CD]
Line_6 $$ HttpURLConnection conn = null --> Line_10 $$ conn = (HttpURLConnection) url.openConnection() [FD]
Line_8 $$ URL url = new URL(this.urlString) --> Line_10 $$ conn = (HttpURLConnection) url.openConnection() [FD]
Line_3 $$ InputSource urlInputStream = null --> Line_11 $$ urlInputStream = new InputSource(StreamUtils.inputStreamToReader(conn.getInputStream())) [FD]
Line_6 $$ HttpURLConnection conn = null --> Line_11 $$ urlInputStream = new InputSource(StreamUtils.inputStreamToReader(conn.getInputStream())) [FD]
Line_10 $$ conn = (HttpURLConnection) url.openConnection() --> Line_11 $$ urlInputStream = new InputSource(StreamUtils.inputStreamToReader(conn.getInputStream())) [FD]
Line_4 $$ SAXParserFactory spf = null --> Line_12 $$ spf = SAXParserFactory.newInstance() [FD]
Line_4 $$ SAXParserFactory spf = null --> Line_13 $$ if (spf != null) [FD]
Line_12 $$ spf = SAXParserFactory.newInstance() --> Line_13 $$ if (spf != null) [FD]
Line_13 $$ if (spf != null) --> Line_14 $$ sp = spf.newSAXParser() [CD]
Line_5 $$ SAXParser sp = null --> Line_14 $$ sp = spf.newSAXParser() [FD]
Line_4 $$ SAXParserFactory spf = null --> Line_14 $$ sp = spf.newSAXParser() [FD]
Line_12 $$ spf = SAXParserFactory.newInstance() --> Line_14 $$ sp = spf.newSAXParser() [FD]
Line_13 $$ if (spf != null) --> Line_15 $$ sp.parse(urlInputStream, this) [CD]
Line_5 $$ SAXParser sp = null --> Line_15 $$ sp.parse(urlInputStream, this) [FD]
Line_14 $$ sp = spf.newSAXParser() --> Line_15 $$ sp.parse(urlInputStream, this) [FD]
Line_3 $$ InputSource urlInputStream = null --> Line_15 $$ sp.parse(urlInputStream, this) [FD]
Line_11 $$ urlInputStream = new InputSource(StreamUtils.inputStreamToReader(conn.getInputStream())) --> Line_15 $$ sp.parse(urlInputStream, this) [FD]
Line_6 $$ HttpURLConnection conn = null --> Line_18 $$ if (conn != null) [FD]
Line_10 $$ conn = (HttpURLConnection) url.openConnection() --> Line_18 $$ if (conn != null) [FD]
Line_18 $$ if (conn != null) --> Line_19 $$ if (conn.getHeaderField("X-RateLimit-Limit") != null) [CD]
Line_6 $$ HttpURLConnection conn = null --> Line_19 $$ if (conn.getHeaderField("X-RateLimit-Limit") != null) [FD]
Line_10 $$ conn = (HttpURLConnection) url.openConnection() --> Line_19 $$ if (conn.getHeaderField("X-RateLimit-Limit") != null) [FD]
Line_19 $$ if (conn.getHeaderField("X-RateLimit-Limit") != null) --> Line_20 $$ String rateLimit = conn.getHeaderField("X-RateLimit-Limit") [CD]
Line_6 $$ HttpURLConnection conn = null --> Line_20 $$ String rateLimit = conn.getHeaderField("X-RateLimit-Limit") [FD]
Line_10 $$ conn = (HttpURLConnection) url.openConnection() --> Line_20 $$ String rateLimit = conn.getHeaderField("X-RateLimit-Limit") [FD]
Line_19 $$ if (conn.getHeaderField("X-RateLimit-Limit") != null) --> Line_21 $$ String rateRemaining = conn.getHeaderField("X-RateLimit-Remaining") [CD]
Line_6 $$ HttpURLConnection conn = null --> Line_21 $$ String rateRemaining = conn.getHeaderField("X-RateLimit-Remaining") [FD]
Line_10 $$ conn = (HttpURLConnection) url.openConnection() --> Line_21 $$ String rateRemaining = conn.getHeaderField("X-RateLimit-Remaining") [FD]
Line_19 $$ if (conn.getHeaderField("X-RateLimit-Limit") != null) --> Line_22 $$ long rateReset = Long.valueOf(conn.getHeaderField("X-RateLimit-Reset")) * 1000 [CD]
Line_6 $$ HttpURLConnection conn = null --> Line_22 $$ long rateReset = Long.valueOf(conn.getHeaderField("X-RateLimit-Reset")) * 1000 [FD]
Line_10 $$ conn = (HttpURLConnection) url.openConnection() --> Line_22 $$ long rateReset = Long.valueOf(conn.getHeaderField("X-RateLimit-Reset")) * 1000 [FD]
Line_19 $$ if (conn.getHeaderField("X-RateLimit-Limit") != null) --> Line_23 $$ LOG.warn("Possible rate limits?  LIMIT:" + rateLimit + "  REMAINING:" + rateRemaining + "  RESET:" + new Date(rateReset)) [CD]
