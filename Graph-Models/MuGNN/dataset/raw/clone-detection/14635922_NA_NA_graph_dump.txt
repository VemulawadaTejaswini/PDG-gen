Line_2 $$ public String contactService(String service, StringBuffer xmlRequest) throws Exception --> Line_3 $$ Logger.debug(UPSConnections.class, "UPS CONNECTIONS ***** Started " + service + " " + new Date().toString() + " *****") [CD]
Line_2 $$ public String contactService(String service, StringBuffer xmlRequest) throws Exception --> Line_4 $$ HttpURLConnection connection [CD]
Line_2 $$ public String contactService(String service, StringBuffer xmlRequest) throws Exception --> Line_5 $$ URL url [CD]
Line_2 $$ public String contactService(String service, StringBuffer xmlRequest) throws Exception --> Line_6 $$ String response = "" [CD]
Line_9 $$ if (protocol.equalsIgnoreCase("https")) --> Line_10 $$ java.security.Security.addProvider(new com.sun.net.ssl.internal.ssl.Provider()) [CD]
Line_9 $$ if (protocol.equalsIgnoreCase("https")) --> Line_11 $$ System.getProperties().put("java.protocol.handler.pkgs", "com.sun.net.ssl.internal.www.protocol") [CD]
Line_9 $$ if (protocol.equalsIgnoreCase("https")) --> Line_12 $$ url = new URL(protocol + "://" + hostname + "/" + URLPrefix + "/" + service) [CD]
Line_5 $$ URL url --> Line_12 $$ url = new URL(protocol + "://" + hostname + "/" + URLPrefix + "/" + service) [FD]
Line_9 $$ if (protocol.equalsIgnoreCase("https")) --> Line_13 $$ connection = (HttpsURLConnection) url.openConnection() [CD]
Line_4 $$ HttpURLConnection connection --> Line_13 $$ connection = (HttpsURLConnection) url.openConnection() [FD]
Line_5 $$ URL url --> Line_13 $$ connection = (HttpsURLConnection) url.openConnection() [FD]
Line_12 $$ url = new URL(protocol + "://" + hostname + "/" + URLPrefix + "/" + service) --> Line_13 $$ connection = (HttpsURLConnection) url.openConnection() [FD]
Line_9 $$ if (protocol.equalsIgnoreCase("https")) --> Line_15 $$ url = new URL(protocol + "://" + hostname + "/" + URLPrefix + "/" + service) [CD]
Line_5 $$ URL url --> Line_15 $$ url = new URL(protocol + "://" + hostname + "/" + URLPrefix + "/" + service) [FD]
Line_12 $$ url = new URL(protocol + "://" + hostname + "/" + URLPrefix + "/" + service) --> Line_15 $$ url = new URL(protocol + "://" + hostname + "/" + URLPrefix + "/" + service) [FD]
Line_9 $$ if (protocol.equalsIgnoreCase("https")) --> Line_16 $$ connection = (HttpURLConnection) url.openConnection() [CD]
Line_4 $$ HttpURLConnection connection --> Line_16 $$ connection = (HttpURLConnection) url.openConnection() [FD]
Line_13 $$ connection = (HttpsURLConnection) url.openConnection() --> Line_16 $$ connection = (HttpURLConnection) url.openConnection() [FD]
Line_5 $$ URL url --> Line_16 $$ connection = (HttpURLConnection) url.openConnection() [FD]
Line_12 $$ url = new URL(protocol + "://" + hostname + "/" + URLPrefix + "/" + service) --> Line_16 $$ connection = (HttpURLConnection) url.openConnection() [FD]
Line_15 $$ url = new URL(protocol + "://" + hostname + "/" + URLPrefix + "/" + service) --> Line_16 $$ connection = (HttpURLConnection) url.openConnection() [FD]
Line_5 $$ URL url --> Line_18 $$ Logger.debug(UPSConnections.class, "Establishing connection with " + url.toString()) [FD]
Line_12 $$ url = new URL(protocol + "://" + hostname + "/" + URLPrefix + "/" + service) --> Line_18 $$ Logger.debug(UPSConnections.class, "Establishing connection with " + url.toString()) [FD]
Line_15 $$ url = new URL(protocol + "://" + hostname + "/" + URLPrefix + "/" + service) --> Line_18 $$ Logger.debug(UPSConnections.class, "Establishing connection with " + url.toString()) [FD]
Line_4 $$ HttpURLConnection connection --> Line_19 $$ connection.setDoOutput(true) [FD]
Line_13 $$ connection = (HttpsURLConnection) url.openConnection() --> Line_19 $$ connection.setDoOutput(true) [FD]
Line_16 $$ connection = (HttpURLConnection) url.openConnection() --> Line_19 $$ connection.setDoOutput(true) [FD]
Line_4 $$ HttpURLConnection connection --> Line_20 $$ connection.setDoInput(true) [FD]
Line_13 $$ connection = (HttpsURLConnection) url.openConnection() --> Line_20 $$ connection.setDoInput(true) [FD]
Line_16 $$ connection = (HttpURLConnection) url.openConnection() --> Line_20 $$ connection.setDoInput(true) [FD]
Line_4 $$ HttpURLConnection connection --> Line_21 $$ connection.setUseCaches(false) [FD]
Line_13 $$ connection = (HttpsURLConnection) url.openConnection() --> Line_21 $$ connection.setUseCaches(false) [FD]
Line_16 $$ connection = (HttpURLConnection) url.openConnection() --> Line_21 $$ connection.setUseCaches(false) [FD]
Line_4 $$ HttpURLConnection connection --> Line_22 $$ OutputStream out = connection.getOutputStream() [FD]
Line_13 $$ connection = (HttpsURLConnection) url.openConnection() --> Line_22 $$ OutputStream out = connection.getOutputStream() [FD]
Line_16 $$ connection = (HttpURLConnection) url.openConnection() --> Line_22 $$ OutputStream out = connection.getOutputStream() [FD]
Line_23 $$ StringBuffer request = new StringBuffer() --> Line_24 $$ request.append(accessXMLRequest()) [FD]
Line_23 $$ StringBuffer request = new StringBuffer() --> Line_25 $$ request.append(xmlRequest) [FD]
Line_2 $$ public String contactService(String service, StringBuffer xmlRequest) throws Exception --> Line_25 $$ request.append(xmlRequest) [FD]
Line_22 $$ OutputStream out = connection.getOutputStream() --> Line_26 $$ out.write((request.toString()).getBytes()) [FD]
Line_23 $$ StringBuffer request = new StringBuffer() --> Line_26 $$ out.write((request.toString()).getBytes()) [FD]
Line_5 $$ URL url --> Line_27 $$ Logger.debug(UPSConnections.class, "Transmission sent to " + url.toString() + ":\n" + xmlRequest) [FD]
Line_12 $$ url = new URL(protocol + "://" + hostname + "/" + URLPrefix + "/" + service) --> Line_27 $$ Logger.debug(UPSConnections.class, "Transmission sent to " + url.toString() + ":\n" + xmlRequest) [FD]
Line_15 $$ url = new URL(protocol + "://" + hostname + "/" + URLPrefix + "/" + service) --> Line_27 $$ Logger.debug(UPSConnections.class, "Transmission sent to " + url.toString() + ":\n" + xmlRequest) [FD]
Line_22 $$ OutputStream out = connection.getOutputStream() --> Line_28 $$ out.close() [FD]
Line_6 $$ String response = "" --> Line_30 $$ response = readURLConnection(connection) [FD]
Line_4 $$ HttpURLConnection connection --> Line_30 $$ response = readURLConnection(connection) [FD]
Line_13 $$ connection = (HttpsURLConnection) url.openConnection() --> Line_30 $$ response = readURLConnection(connection) [FD]
Line_16 $$ connection = (HttpURLConnection) url.openConnection() --> Line_30 $$ response = readURLConnection(connection) [FD]
Line_2 $$ public String contactService(String service, StringBuffer xmlRequest) throws Exception --> Line_43 $$ return response [CD]
