Line_2 $$ private static void ensureJavaScriptHostBytes(TreeLogger logger) throws UnableToCompleteException --> Line_3 $$ if (javaScriptHostBytes != null) [CD]
Line_3 $$ if (javaScriptHostBytes != null) --> Line_4 $$ return [CD]
Line_2 $$ private static void ensureJavaScriptHostBytes(TreeLogger logger) throws UnableToCompleteException --> Line_6 $$ String className = JavaScriptHost.class.getName() [CD]
Line_9 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_10 $$ URL url = cl.getResource(path) [FD]
Line_10 $$ URL url = cl.getResource(path) --> Line_11 $$ if (url != null) [FD]
Line_11 $$ if (url != null) --> Line_12 $$ javaScriptHostBytes = getClassBytesFromStream(url.openStream()) [CD]
Line_10 $$ URL url = cl.getResource(path) --> Line_12 $$ javaScriptHostBytes = getClassBytesFromStream(url.openStream()) [FD]
Line_11 $$ if (url != null) --> Line_14 $$ logger.log(TreeLogger.ERROR, "Could not find required bootstrap class '" + className + "' in the classpath", null) [CD]
Line_2 $$ private static void ensureJavaScriptHostBytes(TreeLogger logger) throws UnableToCompleteException --> Line_14 $$ logger.log(TreeLogger.ERROR, "Could not find required bootstrap class '" + className + "' in the classpath", null) [FD]
Line_2 $$ private static void ensureJavaScriptHostBytes(TreeLogger logger) throws UnableToCompleteException --> Line_18 $$ logger.log(TreeLogger.ERROR, "Error reading class bytes for " + className, e) [FD]
