Line_4 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_5 $$ md.reset() [FD]
Line_4 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_6 $$ md.update(input.getBytes("iso-8859-1")) [FD]
Line_2 $$ protected static String fileName2md5(String input) --> Line_6 $$ md.update(input.getBytes("iso-8859-1")) [FD]
Line_4 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_7 $$ byte[] byteHash = md.digest() [FD]
Line_4 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_8 $$ md.reset() [FD]
Line_10 $$ for (int i = 0; i < byteHash.length; i++) --> Line_11 $$ resultString.append(Integer.toHexString(0xFF & byteHash[i])) [CD]
Line_9 $$ StringBuffer resultString = new StringBuffer() --> Line_11 $$ resultString.append(Integer.toHexString(0xFF & byteHash[i])) [FD]
Line_9 $$ StringBuffer resultString = new StringBuffer() --> Line_13 $$ return (resultString.toString()) [FD]
Line_10 $$ for (int i = 0; i < byteHash.length; i++) --> Line_16 $$ for (int i = 0; i < ex.getStackTrace().length; i++) Logger.error("     " + ex.getStackTrace()[i].toString()) [FD]
Line_2 $$ protected static String fileName2md5(String input) --> Line_19 $$ return String.valueOf(Math.random() * Long.MAX_VALUE) [CD]
