Line_2 $$ static void invalidSlave(String msg, Socket sock) throws IOException --> Line_3 $$ BufferedReader _sinp = null [CD]
Line_2 $$ static void invalidSlave(String msg, Socket sock) throws IOException --> Line_4 $$ PrintWriter _sout = null [CD]
Line_4 $$ PrintWriter _sout = null --> Line_6 $$ _sout = new PrintWriter(sock.getOutputStream(), true) [FD]
Line_2 $$ static void invalidSlave(String msg, Socket sock) throws IOException --> Line_6 $$ _sout = new PrintWriter(sock.getOutputStream(), true) [FD]
Line_3 $$ BufferedReader _sinp = null --> Line_7 $$ _sinp = new BufferedReader(new InputStreamReader(sock.getInputStream())) [FD]
Line_2 $$ static void invalidSlave(String msg, Socket sock) throws IOException --> Line_7 $$ _sinp = new BufferedReader(new InputStreamReader(sock.getInputStream())) [FD]
Line_4 $$ PrintWriter _sout = null --> Line_8 $$ _sout.println(msg) [FD]
Line_6 $$ _sout = new PrintWriter(sock.getOutputStream(), true) --> Line_8 $$ _sout.println(msg) [FD]
Line_2 $$ static void invalidSlave(String msg, Socket sock) throws IOException --> Line_8 $$ _sout.println(msg) [FD]
Line_3 $$ BufferedReader _sinp = null --> Line_10 $$ String txt = AsyncSlaveListener.readLine(_sinp, 30) [FD]
Line_7 $$ _sinp = new BufferedReader(new InputStreamReader(sock.getInputStream())) --> Line_10 $$ String txt = AsyncSlaveListener.readLine(_sinp, 30) [FD]
Line_10 $$ String txt = AsyncSlaveListener.readLine(_sinp, 30) --> Line_15 $$ String[] items = txt.split(" ") [FD]
Line_11 $$ String sname = "" --> Line_16 $$ sname = items[1].trim() [FD]
Line_12 $$ String spass = "" --> Line_17 $$ spass = items[2].trim() [FD]
Line_13 $$ String shash = "" --> Line_18 $$ shash = items[3].trim() [FD]
Line_23 $$ MessageDigest md5 = MessageDigest.getInstance("MD5") --> Line_24 $$ md5.reset() [FD]
Line_23 $$ MessageDigest md5 = MessageDigest.getInstance("MD5") --> Line_25 $$ md5.update(pass.getBytes()) [FD]
Line_22 $$ String pass = sname + spass + _pass --> Line_25 $$ md5.update(pass.getBytes()) [FD]
Line_23 $$ MessageDigest md5 = MessageDigest.getInstance("MD5") --> Line_26 $$ String hash = AsyncSlaveListener.hash2hex(md5.digest()).toLowerCase() [FD]
Line_26 $$ String hash = AsyncSlaveListener.hash2hex(md5.digest()).toLowerCase() --> Line_27 $$ if (!hash.equals(shash)) [FD]
Line_13 $$ String shash = "" --> Line_27 $$ if (!hash.equals(shash)) [FD]
Line_18 $$ shash = items[3].trim() --> Line_27 $$ if (!hash.equals(shash)) [FD]
