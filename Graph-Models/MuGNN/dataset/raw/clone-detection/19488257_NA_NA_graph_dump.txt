Line_2 $$ public static boolean copy(final File from, final File to) --> Line_3 $$ if (from.isDirectory()) [CD]
Line_2 $$ public static boolean copy(final File from, final File to) --> Line_3 $$ if (from.isDirectory()) [FD]
Line_3 $$ if (from.isDirectory()) --> Line_4 $$ to.mkdirs() [CD]
Line_2 $$ public static boolean copy(final File from, final File to) --> Line_4 $$ to.mkdirs() [FD]
Line_2 $$ public static boolean copy(final File from, final File to) --> Line_5 $$ for (final String name : Arrays.asList(from.list())) [FD]
Line_2 $$ public static boolean copy(final File from, final File to) --> Line_6 $$ if (!copy(from, to, name)) [FD]
Line_5 $$ for (final String name : Arrays.asList(from.list())) --> Line_6 $$ if (!copy(from, to, name)) [FD]
Line_6 $$ if (!copy(from, to, name)) --> Line_7 $$ if (COPY_DEBUG) [CD]
Line_7 $$ if (COPY_DEBUG) --> Line_8 $$ System.out.println("Failed to copy " + name + " from " + from + " to " + to) [CD]
Line_6 $$ if (!copy(from, to, name)) --> Line_10 $$ return false [CD]
Line_15 $$ final FileInputStream is = new FileInputStream(from) --> Line_16 $$ final FileChannel ifc = is.getChannel() [FD]
Line_2 $$ public static boolean copy(final File from, final File to) --> Line_17 $$ final FileOutputStream os = makeFile(to) [FD]
Line_18 $$ if (USE_NIO) --> Line_19 $$ final FileChannel ofc = os.getChannel() [CD]
Line_17 $$ final FileOutputStream os = makeFile(to) --> Line_19 $$ final FileChannel ofc = os.getChannel() [FD]
Line_18 $$ if (USE_NIO) --> Line_20 $$ ofc.transferFrom(ifc, 0, from.length()) [CD]
Line_19 $$ final FileChannel ofc = os.getChannel() --> Line_20 $$ ofc.transferFrom(ifc, 0, from.length()) [FD]
Line_16 $$ final FileChannel ifc = is.getChannel() --> Line_20 $$ ofc.transferFrom(ifc, 0, from.length()) [FD]
Line_2 $$ public static boolean copy(final File from, final File to) --> Line_20 $$ ofc.transferFrom(ifc, 0, from.length()) [FD]
Line_18 $$ if (USE_NIO) --> Line_22 $$ pipe(is, os, false) [CD]
Line_15 $$ final FileInputStream is = new FileInputStream(from) --> Line_22 $$ pipe(is, os, false) [FD]
Line_17 $$ final FileOutputStream os = makeFile(to) --> Line_22 $$ pipe(is, os, false) [FD]
Line_15 $$ final FileInputStream is = new FileInputStream(from) --> Line_24 $$ is.close() [FD]
Line_17 $$ final FileOutputStream os = makeFile(to) --> Line_25 $$ os.close() [FD]
Line_27 $$ if (COPY_DEBUG) --> Line_28 $$ System.out.println("Failed to copy " + from + " to " + to + ": " + ex) [CD]
Line_2 $$ public static boolean copy(final File from, final File to) --> Line_33 $$ final long time = from.lastModified() [CD]
Line_2 $$ public static boolean copy(final File from, final File to) --> Line_33 $$ final long time = from.lastModified() [FD]
Line_2 $$ public static boolean copy(final File from, final File to) --> Line_34 $$ setLastModified(to, time) [CD]
Line_2 $$ public static boolean copy(final File from, final File to) --> Line_34 $$ setLastModified(to, time) [FD]
Line_33 $$ final long time = from.lastModified() --> Line_34 $$ setLastModified(to, time) [FD]
Line_2 $$ public static boolean copy(final File from, final File to) --> Line_35 $$ final long newtime = to.lastModified() [CD]
Line_2 $$ public static boolean copy(final File from, final File to) --> Line_35 $$ final long newtime = to.lastModified() [FD]
Line_2 $$ public static boolean copy(final File from, final File to) --> Line_36 $$ if (COPY_DEBUG) [CD]
Line_36 $$ if (COPY_DEBUG) --> Line_37 $$ if (newtime != time) [CD]
Line_35 $$ final long newtime = to.lastModified() --> Line_37 $$ if (newtime != time) [FD]
Line_33 $$ final long time = from.lastModified() --> Line_37 $$ if (newtime != time) [FD]
Line_37 $$ if (newtime != time) --> Line_38 $$ System.out.println("Failed to set timestamp for file " + to + ": tried " + new Date(time) + ", have " + new Date(newtime)) [CD]
Line_37 $$ if (newtime != time) --> Line_39 $$ to.setLastModified(time) [CD]
Line_2 $$ public static boolean copy(final File from, final File to) --> Line_39 $$ to.setLastModified(time) [FD]
Line_33 $$ final long time = from.lastModified() --> Line_39 $$ to.setLastModified(time) [FD]
Line_37 $$ if (newtime != time) --> Line_40 $$ final long morenewtime = to.lastModified() [CD]
Line_2 $$ public static boolean copy(final File from, final File to) --> Line_40 $$ final long morenewtime = to.lastModified() [FD]
Line_37 $$ if (newtime != time) --> Line_41 $$ return false [CD]
Line_37 $$ if (newtime != time) --> Line_43 $$ System.out.println("Timestamp for " + to + " set successfully.") [CD]
Line_2 $$ public static boolean copy(final File from, final File to) --> Line_46 $$ return time == newtime [CD]
