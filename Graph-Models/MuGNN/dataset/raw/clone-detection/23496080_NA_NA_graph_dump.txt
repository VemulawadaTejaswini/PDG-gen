Line_2 $$ private void fillTemplate(String resource, OutputStream outputStream, Map<String, String> replacements) throws IOException --> Line_3 $$ URL url = Tools.getResource(resource) [CD]
Line_2 $$ private void fillTemplate(String resource, OutputStream outputStream, Map<String, String> replacements) throws IOException --> Line_3 $$ URL url = Tools.getResource(resource) [FD]
Line_2 $$ private void fillTemplate(String resource, OutputStream outputStream, Map<String, String> replacements) throws IOException --> Line_4 $$ if (url == null) [CD]
Line_3 $$ URL url = Tools.getResource(resource) --> Line_4 $$ if (url == null) [FD]
Line_2 $$ private void fillTemplate(String resource, OutputStream outputStream, Map<String, String> replacements) throws IOException --> Line_7 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream())) [CD]
Line_3 $$ URL url = Tools.getResource(resource) --> Line_7 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream())) [FD]
Line_2 $$ private void fillTemplate(String resource, OutputStream outputStream, Map<String, String> replacements) throws IOException --> Line_8 $$ BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(outputStream, Charset.forName("UTF-8"))) [CD]
Line_2 $$ private void fillTemplate(String resource, OutputStream outputStream, Map<String, String> replacements) throws IOException --> Line_9 $$ String line = null [CD]
Line_2 $$ private void fillTemplate(String resource, OutputStream outputStream, Map<String, String> replacements) throws IOException --> Line_10 $$ do [CD]
Line_9 $$ String line = null --> Line_10 $$ do [FD]
Line_10 $$ do --> Line_11 $$ line = reader.readLine() [CD]
Line_9 $$ String line = null --> Line_11 $$ line = reader.readLine() [FD]
Line_7 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_11 $$ line = reader.readLine() [FD]
Line_10 $$ do --> Line_12 $$ if (line != null) [CD]
Line_11 $$ line = reader.readLine() --> Line_12 $$ if (line != null) [FD]
Line_9 $$ String line = null --> Line_12 $$ if (line != null) [FD]
Line_2 $$ private void fillTemplate(String resource, OutputStream outputStream, Map<String, String> replacements) throws IOException --> Line_13 $$ for (String key : replacements.keySet()) [FD]
Line_2 $$ private void fillTemplate(String resource, OutputStream outputStream, Map<String, String> replacements) throws IOException --> Line_14 $$ String value = replacements.get(key) [FD]
Line_13 $$ for (String key : replacements.keySet()) --> Line_14 $$ String value = replacements.get(key) [FD]
Line_13 $$ for (String key : replacements.keySet()) --> Line_15 $$ if (key != null) [FD]
Line_15 $$ if (key != null) --> Line_16 $$ line = line.replace(key, value) [CD]
Line_11 $$ line = reader.readLine() --> Line_16 $$ line = line.replace(key, value) [FD]
Line_9 $$ String line = null --> Line_16 $$ line = line.replace(key, value) [FD]
Line_13 $$ for (String key : replacements.keySet()) --> Line_16 $$ line = line.replace(key, value) [FD]
Line_14 $$ String value = replacements.get(key) --> Line_16 $$ line = line.replace(key, value) [FD]
Line_12 $$ if (line != null) --> Line_19 $$ writer.write(line) [CD]
Line_8 $$ BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(outputStream, Charset.forName("UTF-8"))) --> Line_19 $$ writer.write(line) [FD]
Line_11 $$ line = reader.readLine() --> Line_19 $$ writer.write(line) [FD]
Line_16 $$ line = line.replace(key, value) --> Line_19 $$ writer.write(line) [FD]
Line_9 $$ String line = null --> Line_19 $$ writer.write(line) [FD]
Line_12 $$ if (line != null) --> Line_20 $$ writer.newLine() [CD]
Line_8 $$ BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(outputStream, Charset.forName("UTF-8"))) --> Line_20 $$ writer.newLine() [FD]
Line_2 $$ private void fillTemplate(String resource, OutputStream outputStream, Map<String, String> replacements) throws IOException --> Line_23 $$ reader.close() [CD]
Line_7 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_23 $$ reader.close() [FD]
Line_2 $$ private void fillTemplate(String resource, OutputStream outputStream, Map<String, String> replacements) throws IOException --> Line_24 $$ writer.close() [CD]
Line_8 $$ BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(outputStream, Charset.forName("UTF-8"))) --> Line_24 $$ writer.close() [FD]
Line_11 $$ line = reader.readLine() --> Line_10 $$ do [FD]
Line_16 $$ line = line.replace(key, value) --> Line_10 $$ do [FD]
Line_16 $$ line = line.replace(key, value) --> Line_12 $$ if (line != null) [FD]
