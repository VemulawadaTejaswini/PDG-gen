Line_2 $$ public void schema(final Row row, TestResults testResults) throws Exception --> Line_3 $$ String urlString = row.text(1) [CD]
Line_2 $$ public void schema(final Row row, TestResults testResults) throws Exception --> Line_3 $$ String urlString = row.text(1) [FD]
Line_2 $$ public void schema(final Row row, TestResults testResults) throws Exception --> Line_4 $$ String schemaBase = null [CD]
Line_2 $$ public void schema(final Row row, TestResults testResults) throws Exception --> Line_5 $$ if (row.cellExists(2)) [CD]
Line_2 $$ public void schema(final Row row, TestResults testResults) throws Exception --> Line_5 $$ if (row.cellExists(2)) [FD]
Line_5 $$ if (row.cellExists(2)) --> Line_6 $$ schemaBase = row.text(2) [CD]
Line_4 $$ String schemaBase = null --> Line_6 $$ schemaBase = row.text(2) [FD]
Line_2 $$ public void schema(final Row row, TestResults testResults) throws Exception --> Line_6 $$ schemaBase = row.text(2) [FD]
Line_3 $$ String urlString = row.text(1) --> Line_10 $$ if (urlString.startsWith(CLASS_PREFIX)) [FD]
Line_10 $$ if (urlString.startsWith(CLASS_PREFIX)) --> Line_11 $$ InputStream schema = XmlValidator.class.getClassLoader().getResourceAsStream(urlString.substring(CLASS_PREFIX.length())) [CD]
Line_3 $$ String urlString = row.text(1) --> Line_11 $$ InputStream schema = XmlValidator.class.getClassLoader().getResourceAsStream(urlString.substring(CLASS_PREFIX.length())) [FD]
Line_10 $$ if (urlString.startsWith(CLASS_PREFIX)) --> Line_12 $$ schemaSource = new StreamSource(schema) [CD]
Line_9 $$ StreamSource schemaSource --> Line_12 $$ schemaSource = new StreamSource(schema) [FD]
Line_10 $$ if (urlString.startsWith(CLASS_PREFIX)) --> Line_14 $$ URL url = new URL(urlString) [CD]
Line_10 $$ if (urlString.startsWith(CLASS_PREFIX)) --> Line_15 $$ URLConnection urlConnection = url.openConnection() [CD]
Line_14 $$ URL url = new URL(urlString) --> Line_15 $$ URLConnection urlConnection = url.openConnection() [FD]
Line_10 $$ if (urlString.startsWith(CLASS_PREFIX)) --> Line_16 $$ urlConnection.connect() [CD]
Line_15 $$ URLConnection urlConnection = url.openConnection() --> Line_16 $$ urlConnection.connect() [FD]
Line_10 $$ if (urlString.startsWith(CLASS_PREFIX)) --> Line_17 $$ InputStream inputStream = urlConnection.getInputStream() [CD]
Line_15 $$ URLConnection urlConnection = url.openConnection() --> Line_17 $$ InputStream inputStream = urlConnection.getInputStream() [FD]
Line_10 $$ if (urlString.startsWith(CLASS_PREFIX)) --> Line_18 $$ schemaSource = new StreamSource(inputStream) [CD]
Line_9 $$ StreamSource schemaSource --> Line_18 $$ schemaSource = new StreamSource(inputStream) [FD]
Line_12 $$ schemaSource = new StreamSource(schema) --> Line_18 $$ schemaSource = new StreamSource(inputStream) [FD]
Line_4 $$ String schemaBase = null --> Line_21 $$ if (schemaBase != null) [FD]
Line_6 $$ schemaBase = row.text(2) --> Line_21 $$ if (schemaBase != null) [FD]
Line_21 $$ if (schemaBase != null) --> Line_22 $$ DefaultLSResourceResolver resolver = new DefaultLSResourceResolver(schemaBase) [CD]
Line_21 $$ if (schemaBase != null) --> Line_23 $$ factory.setResourceResolver(resolver) [CD]
Line_20 $$ SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI) --> Line_23 $$ factory.setResourceResolver(resolver) [FD]
Line_22 $$ DefaultLSResourceResolver resolver = new DefaultLSResourceResolver(schemaBase) --> Line_23 $$ factory.setResourceResolver(resolver) [FD]
Line_20 $$ SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI) --> Line_25 $$ factory.newSchema(new URL(urlString)) [FD]
Line_20 $$ SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI) --> Line_26 $$ Validator validator = factory.newSchema(schemaSource).newValidator() [FD]
Line_9 $$ StreamSource schemaSource --> Line_26 $$ Validator validator = factory.newSchema(schemaSource).newValidator() [FD]
Line_12 $$ schemaSource = new StreamSource(schema) --> Line_26 $$ Validator validator = factory.newSchema(schemaSource).newValidator() [FD]
Line_18 $$ schemaSource = new StreamSource(inputStream) --> Line_26 $$ Validator validator = factory.newSchema(schemaSource).newValidator() [FD]
Line_26 $$ Validator validator = factory.newSchema(schemaSource).newValidator() --> Line_28 $$ validator.validate(source) [FD]
Line_27 $$ StreamSource source = new StreamSource(new StringReader(xml)) --> Line_28 $$ validator.validate(source) [FD]
Line_2 $$ public void schema(final Row row, TestResults testResults) throws Exception --> Line_29 $$ row.pass(testResults) [FD]
