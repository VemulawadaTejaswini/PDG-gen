Line_2 $$ public static void main(String[] args) --> Line_3 $$ Stopwatch.start("") [CD]
Line_2 $$ public static void main(String[] args) --> Line_4 $$ HtmlParser parser = new HtmlParser() [CD]
Line_9 $$ URL url = new URL(args[0]) --> Line_11 $$ InputStream is = url.openStream() [FD]
Line_7 $$ ParserDelegator del = new ParserDelegator() --> Line_13 $$ del.parse(new InputStreamReader(is), parser, true) [FD]
Line_4 $$ HtmlParser parser = new HtmlParser() --> Line_13 $$ del.parse(new InputStreamReader(is), parser, true) [FD]
Line_2 $$ public static void main(String[] args) --> Line_18 $$ Stopwatch.printTimeReset("", "> traversal") [CD]
Line_2 $$ public static void main(String[] args) --> Line_19 $$ TreeTraversal.traverse(parser.startTag, "eachChild", new Function() [CD]
Line_19 $$ TreeTraversal.traverse(parser.startTag, "eachChild", new Function() --> Line_22 $$ if (obj instanceof String) [CD]
Line_19 $$ TreeTraversal.traverse(parser.startTag, "eachChild", new Function() --> Line_22 $$ if (obj instanceof String) [FD]
Line_22 $$ if (obj instanceof String) --> Line_23 $$ System.out.print(lastPath + ":") [CD]
Line_22 $$ if (obj instanceof String) --> Line_24 $$ System.out.println(obj) [CD]
Line_19 $$ TreeTraversal.traverse(parser.startTag, "eachChild", new Function() --> Line_24 $$ System.out.println(obj) [FD]
Line_22 $$ if (obj instanceof String) --> Line_25 $$ return [CD]
Line_19 $$ TreeTraversal.traverse(parser.startTag, "eachChild", new Function() --> Line_27 $$ Tag t = (Tag) obj [CD]
Line_19 $$ TreeTraversal.traverse(parser.startTag, "eachChild", new Function() --> Line_28 $$ lastPath = Utils.tagPath(t) [CD]
Line_27 $$ Tag t = (Tag) obj --> Line_28 $$ lastPath = Utils.tagPath(t) [FD]
Line_19 $$ TreeTraversal.traverse(parser.startTag, "eachChild", new Function() --> Line_29 $$ System.out.println(lastPath) [CD]
Line_2 $$ public static void main(String[] args) --> Line_32 $$ Stopwatch.printTimeReset("", "< traversal") [CD]
