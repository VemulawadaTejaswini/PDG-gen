Line_2 $$ public static ArrayList<String> remoteCall(Map<String, String> dataDict) --> Line_3 $$ ArrayList<String> result = new ArrayList<String>() [CD]
Line_2 $$ public static ArrayList<String> remoteCall(Map<String, String> dataDict) --> Line_4 $$ String encodedData = "" [CD]
Line_2 $$ public static ArrayList<String> remoteCall(Map<String, String> dataDict) --> Line_5 $$ for (String key : dataDict.keySet()) [FD]
Line_2 $$ public static ArrayList<String> remoteCall(Map<String, String> dataDict) --> Line_7 $$ String value = dataDict.get(key) [FD]
Line_5 $$ for (String key : dataDict.keySet()) --> Line_7 $$ String value = dataDict.get(key) [FD]
Line_7 $$ String value = dataDict.get(key) --> Line_8 $$ if (value == null) [FD]
Line_6 $$ String encodedSegment = "" --> Line_10 $$ encodedSegment = key + "=" + URLEncoder.encode(value, "UTF-8") [FD]
Line_7 $$ String value = dataDict.get(key) --> Line_10 $$ encodedSegment = key + "=" + URLEncoder.encode(value, "UTF-8") [FD]
Line_4 $$ String encodedData = "" --> Line_14 $$ if (encodedData.length() > 0) [FD]
Line_14 $$ if (encodedData.length() > 0) --> Line_15 $$ encodedData += "&" [CD]
Line_4 $$ String encodedData = "" --> Line_15 $$ encodedData += "&" [FD]
Line_4 $$ String encodedData = "" --> Line_17 $$ encodedData += encodedSegment [FD]
Line_15 $$ encodedData += "&" --> Line_17 $$ encodedData += encodedSegment [FD]
Line_6 $$ String encodedSegment = "" --> Line_17 $$ encodedData += encodedSegment [FD]
Line_10 $$ encodedSegment = key + "=" + URLEncoder.encode(value, "UTF-8") --> Line_17 $$ encodedData += encodedSegment [FD]
Line_20 $$ URL url = new URL(baseURL + encodedData) --> Line_21 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream())) [FD]
Line_22 $$ String line --> Line_23 $$ while ((line = reader.readLine()) != null) [FD]
Line_21 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_23 $$ while ((line = reader.readLine()) != null) [FD]
Line_23 $$ while ((line = reader.readLine()) != null) --> Line_24 $$ result.add(line) [CD]
Line_23 $$ while ((line = reader.readLine()) != null) --> Line_24 $$ result.add(line) [FD]
Line_3 $$ ArrayList<String> result = new ArrayList<String>() --> Line_24 $$ result.add(line) [FD]
Line_22 $$ String line --> Line_24 $$ result.add(line) [FD]
Line_23 $$ while ((line = reader.readLine()) != null) --> Line_25 $$ System.out.println("GOT: " + line) [CD]
Line_21 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_27 $$ reader.close() [FD]
Line_3 $$ ArrayList<String> result = new ArrayList<String>() --> Line_28 $$ result.remove(0) [FD]
Line_3 $$ ArrayList<String> result = new ArrayList<String>() --> Line_29 $$ if (result.size() != 0) [FD]
Line_29 $$ if (result.size() != 0) --> Line_30 $$ if (!result.get(result.size() - 1).equals("DONE")) [CD]
Line_3 $$ ArrayList<String> result = new ArrayList<String>() --> Line_30 $$ if (!result.get(result.size() - 1).equals("DONE")) [FD]
Line_30 $$ if (!result.get(result.size() - 1).equals("DONE")) --> Line_31 $$ result.clear() [CD]
Line_3 $$ ArrayList<String> result = new ArrayList<String>() --> Line_31 $$ result.clear() [FD]
Line_30 $$ if (!result.get(result.size() - 1).equals("DONE")) --> Line_33 $$ result.remove(result.size() - 1) [CD]
Line_3 $$ ArrayList<String> result = new ArrayList<String>() --> Line_33 $$ result.remove(result.size() - 1) [FD]
Line_2 $$ public static ArrayList<String> remoteCall(Map<String, String> dataDict) --> Line_39 $$ return result [CD]
