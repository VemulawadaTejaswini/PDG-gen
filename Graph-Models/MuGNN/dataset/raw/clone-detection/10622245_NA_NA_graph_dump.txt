Line_2 $$ private void downloadTo(URL url, File out) throws IOException --> Line_3 $$ URLConnection conn = url.openConnection() [CD]
Line_2 $$ private void downloadTo(URL url, File out) throws IOException --> Line_3 $$ URLConnection conn = url.openConnection() [FD]
Line_2 $$ private void downloadTo(URL url, File out) throws IOException --> Line_4 $$ BufferedInputStream is = new BufferedInputStream(conn.getInputStream()) [CD]
Line_3 $$ URLConnection conn = url.openConnection() --> Line_4 $$ BufferedInputStream is = new BufferedInputStream(conn.getInputStream()) [FD]
Line_2 $$ private void downloadTo(URL url, File out) throws IOException --> Line_5 $$ BufferedOutputStream os = new BufferedOutputStream(new FileOutputStream(out)) [CD]
Line_2 $$ private void downloadTo(URL url, File out) throws IOException --> Line_6 $$ final int BLOCK_SIZE = 1024 [CD]
Line_2 $$ private void downloadTo(URL url, File out) throws IOException --> Line_7 $$ byte[] buf = new byte[BLOCK_SIZE] [CD]
Line_2 $$ private void downloadTo(URL url, File out) throws IOException --> Line_8 $$ int size [CD]
Line_2 $$ private void downloadTo(URL url, File out) throws IOException --> Line_9 $$ while ((size = is.read(buf, 0, BLOCK_SIZE)) > 0) os.write(buf, 0, size) [CD]
Line_8 $$ int size --> Line_9 $$ while ((size = is.read(buf, 0, BLOCK_SIZE)) > 0) os.write(buf, 0, size) [FD]
Line_4 $$ BufferedInputStream is = new BufferedInputStream(conn.getInputStream()) --> Line_9 $$ while ((size = is.read(buf, 0, BLOCK_SIZE)) > 0) os.write(buf, 0, size) [FD]
Line_7 $$ byte[] buf = new byte[BLOCK_SIZE] --> Line_9 $$ while ((size = is.read(buf, 0, BLOCK_SIZE)) > 0) os.write(buf, 0, size) [FD]
Line_6 $$ final int BLOCK_SIZE = 1024 --> Line_9 $$ while ((size = is.read(buf, 0, BLOCK_SIZE)) > 0) os.write(buf, 0, size) [FD]
Line_5 $$ BufferedOutputStream os = new BufferedOutputStream(new FileOutputStream(out)) --> Line_9 $$ while ((size = is.read(buf, 0, BLOCK_SIZE)) > 0) os.write(buf, 0, size) [FD]
Line_2 $$ private void downloadTo(URL url, File out) throws IOException --> Line_10 $$ is.close() [CD]
Line_4 $$ BufferedInputStream is = new BufferedInputStream(conn.getInputStream()) --> Line_10 $$ is.close() [FD]
Line_2 $$ private void downloadTo(URL url, File out) throws IOException --> Line_11 $$ os.close() [CD]
Line_5 $$ BufferedOutputStream os = new BufferedOutputStream(new FileOutputStream(out)) --> Line_11 $$ os.close() [FD]
