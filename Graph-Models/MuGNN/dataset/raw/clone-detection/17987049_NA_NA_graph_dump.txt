Line_2 $$ private boolean writeResource(PluginProxy eclipseInstallPlugin, ResourceProxy translation, LocaleProxy locale) throws Exception --> Line_3 $$ String translationResourceName = determineTranslatedResourceName(translation, locale) [CD]
Line_2 $$ private boolean writeResource(PluginProxy eclipseInstallPlugin, ResourceProxy translation, LocaleProxy locale) throws Exception --> Line_3 $$ String translationResourceName = determineTranslatedResourceName(translation, locale) [FD]
Line_2 $$ private boolean writeResource(PluginProxy eclipseInstallPlugin, ResourceProxy translation, LocaleProxy locale) throws Exception --> Line_4 $$ String pluginNameInDirFormat = eclipseInstallPlugin.getName().replace(Messages.getString("Characters_period"), File.separator) [CD]
Line_2 $$ private boolean writeResource(PluginProxy eclipseInstallPlugin, ResourceProxy translation, LocaleProxy locale) throws Exception --> Line_4 $$ String pluginNameInDirFormat = eclipseInstallPlugin.getName().replace(Messages.getString("Characters_period"), File.separator) [FD]
Line_2 $$ private boolean writeResource(PluginProxy eclipseInstallPlugin, ResourceProxy translation, LocaleProxy locale) throws Exception --> Line_5 $$ if (translation.getRelativePath().contains(pluginNameInDirFormat)) [CD]
Line_2 $$ private boolean writeResource(PluginProxy eclipseInstallPlugin, ResourceProxy translation, LocaleProxy locale) throws Exception --> Line_5 $$ if (translation.getRelativePath().contains(pluginNameInDirFormat)) [FD]
Line_4 $$ String pluginNameInDirFormat = eclipseInstallPlugin.getName().replace(Messages.getString("Characters_period"), File.separator) --> Line_5 $$ if (translation.getRelativePath().contains(pluginNameInDirFormat)) [FD]
Line_5 $$ if (translation.getRelativePath().contains(pluginNameInDirFormat)) --> Line_6 $$ return writeResourceToBundleClasspath(translation, locale) [CD]
Line_2 $$ private boolean writeResource(PluginProxy eclipseInstallPlugin, ResourceProxy translation, LocaleProxy locale) throws Exception --> Line_6 $$ return writeResourceToBundleClasspath(translation, locale) [FD]
Line_5 $$ if (translation.getRelativePath().contains(pluginNameInDirFormat)) --> Line_7 $$ if (translationResourceName.contains(File.separator)) [CD]
Line_3 $$ String translationResourceName = determineTranslatedResourceName(translation, locale) --> Line_7 $$ if (translationResourceName.contains(File.separator)) [FD]
Line_7 $$ if (translationResourceName.contains(File.separator)) --> Line_8 $$ String resourcePath = translationResourceName.substring(0, translationResourceName.lastIndexOf(File.separatorChar)) [CD]
Line_3 $$ String translationResourceName = determineTranslatedResourceName(translation, locale) --> Line_8 $$ String resourcePath = translationResourceName.substring(0, translationResourceName.lastIndexOf(File.separatorChar)) [FD]
Line_7 $$ if (translationResourceName.contains(File.separator)) --> Line_9 $$ File resourcePathDirectory = new File(directory.getPath() + File.separatorChar + resourcePath) [CD]
Line_7 $$ if (translationResourceName.contains(File.separator)) --> Line_10 $$ resourcePathDirectory.mkdirs() [CD]
Line_9 $$ File resourcePathDirectory = new File(directory.getPath() + File.separatorChar + resourcePath) --> Line_10 $$ resourcePathDirectory.mkdirs() [FD]
Line_2 $$ private boolean writeResource(PluginProxy eclipseInstallPlugin, ResourceProxy translation, LocaleProxy locale) throws Exception --> Line_12 $$ File fragmentResource = new File(directory.getPath() + File.separatorChar + translationResourceName) [CD]
Line_2 $$ private boolean writeResource(PluginProxy eclipseInstallPlugin, ResourceProxy translation, LocaleProxy locale) throws Exception --> Line_13 $$ File translatedResource = new File(translation.getFileResource().getAbsolutePath()) [CD]
Line_2 $$ private boolean writeResource(PluginProxy eclipseInstallPlugin, ResourceProxy translation, LocaleProxy locale) throws Exception --> Line_13 $$ File translatedResource = new File(translation.getFileResource().getAbsolutePath()) [FD]
Line_2 $$ private boolean writeResource(PluginProxy eclipseInstallPlugin, ResourceProxy translation, LocaleProxy locale) throws Exception --> Line_14 $$ FileChannel inputChannel = new FileInputStream(translatedResource).getChannel() [CD]
Line_2 $$ private boolean writeResource(PluginProxy eclipseInstallPlugin, ResourceProxy translation, LocaleProxy locale) throws Exception --> Line_15 $$ FileChannel outputChannel = new FileOutputStream(fragmentResource).getChannel() [CD]
Line_2 $$ private boolean writeResource(PluginProxy eclipseInstallPlugin, ResourceProxy translation, LocaleProxy locale) throws Exception --> Line_16 $$ inputChannel.transferTo(0, inputChannel.size(), outputChannel) [CD]
Line_14 $$ FileChannel inputChannel = new FileInputStream(translatedResource).getChannel() --> Line_16 $$ inputChannel.transferTo(0, inputChannel.size(), outputChannel) [FD]
Line_15 $$ FileChannel outputChannel = new FileOutputStream(fragmentResource).getChannel() --> Line_16 $$ inputChannel.transferTo(0, inputChannel.size(), outputChannel) [FD]
Line_2 $$ private boolean writeResource(PluginProxy eclipseInstallPlugin, ResourceProxy translation, LocaleProxy locale) throws Exception --> Line_17 $$ inputChannel.close() [CD]
Line_14 $$ FileChannel inputChannel = new FileInputStream(translatedResource).getChannel() --> Line_17 $$ inputChannel.close() [FD]
Line_2 $$ private boolean writeResource(PluginProxy eclipseInstallPlugin, ResourceProxy translation, LocaleProxy locale) throws Exception --> Line_18 $$ outputChannel.close() [CD]
Line_15 $$ FileChannel outputChannel = new FileOutputStream(fragmentResource).getChannel() --> Line_18 $$ outputChannel.close() [FD]
Line_2 $$ private boolean writeResource(PluginProxy eclipseInstallPlugin, ResourceProxy translation, LocaleProxy locale) throws Exception --> Line_19 $$ return true [CD]
