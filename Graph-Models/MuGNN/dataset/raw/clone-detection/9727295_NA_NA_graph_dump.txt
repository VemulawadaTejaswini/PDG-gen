Line_2 $$ public synchronized List<AnidbSearchResult> getAnimeTitles() throws Exception --> Line_3 $$ URL url = new URL("http", host, "/api/animetitles.dat.gz") [CD]
Line_2 $$ public synchronized List<AnidbSearchResult> getAnimeTitles() throws Exception --> Line_4 $$ ResultCache cache = getCache() [CD]
Line_2 $$ public synchronized List<AnidbSearchResult> getAnimeTitles() throws Exception --> Line_5 $$ if (anime != null) [CD]
Line_5 $$ if (anime != null) --> Line_6 $$ return anime [CD]
Line_2 $$ public synchronized List<AnidbSearchResult> getAnimeTitles() throws Exception --> Line_8 $$ Pattern pattern = Pattern.compile("^(?!#)(\\d+)[|](\\d)[|]([\\w-]+)[|](.+)$") [CD]
Line_2 $$ public synchronized List<AnidbSearchResult> getAnimeTitles() throws Exception --> Line_9 $$ Map<Integer, String> primaryTitleMap = new HashMap<Integer, String>() [CD]
Line_2 $$ public synchronized List<AnidbSearchResult> getAnimeTitles() throws Exception --> Line_10 $$ Map<Integer, Map<String, String>> officialTitleMap = new HashMap<Integer, Map<String, String>>() [CD]
Line_2 $$ public synchronized List<AnidbSearchResult> getAnimeTitles() throws Exception --> Line_11 $$ Map<Integer, Map<String, String>> synonymsTitleMap = new HashMap<Integer, Map<String, String>>() [CD]
Line_2 $$ public synchronized List<AnidbSearchResult> getAnimeTitles() throws Exception --> Line_12 $$ Scanner scanner = new Scanner(new GZIPInputStream(url.openStream()), "UTF-8") [CD]
Line_3 $$ URL url = new URL("http", host, "/api/animetitles.dat.gz") --> Line_12 $$ Scanner scanner = new Scanner(new GZIPInputStream(url.openStream()), "UTF-8") [FD]
Line_12 $$ Scanner scanner = new Scanner(new GZIPInputStream(url.openStream()), "UTF-8") --> Line_14 $$ while (scanner.hasNextLine()) [FD]
Line_14 $$ while (scanner.hasNextLine()) --> Line_15 $$ Matcher matcher = pattern.matcher(scanner.nextLine()) [CD]
Line_8 $$ Pattern pattern = Pattern.compile("^(?!#)(\\d+)[|](\\d)[|]([\\w-]+)[|](.+)$") --> Line_15 $$ Matcher matcher = pattern.matcher(scanner.nextLine()) [FD]
Line_12 $$ Scanner scanner = new Scanner(new GZIPInputStream(url.openStream()), "UTF-8") --> Line_15 $$ Matcher matcher = pattern.matcher(scanner.nextLine()) [FD]
Line_14 $$ while (scanner.hasNextLine()) --> Line_16 $$ if (matcher.matches()) [CD]
Line_15 $$ Matcher matcher = pattern.matcher(scanner.nextLine()) --> Line_16 $$ if (matcher.matches()) [FD]
Line_16 $$ if (matcher.matches()) --> Line_17 $$ int aid = Integer.parseInt(matcher.group(1)) [CD]
Line_15 $$ Matcher matcher = pattern.matcher(scanner.nextLine()) --> Line_17 $$ int aid = Integer.parseInt(matcher.group(1)) [FD]
Line_16 $$ if (matcher.matches()) --> Line_18 $$ String type = matcher.group(2) [CD]
Line_15 $$ Matcher matcher = pattern.matcher(scanner.nextLine()) --> Line_18 $$ String type = matcher.group(2) [FD]
Line_16 $$ if (matcher.matches()) --> Line_19 $$ String language = matcher.group(3) [CD]
Line_15 $$ Matcher matcher = pattern.matcher(scanner.nextLine()) --> Line_19 $$ String language = matcher.group(3) [FD]
Line_16 $$ if (matcher.matches()) --> Line_20 $$ String title = matcher.group(4) [CD]
Line_15 $$ Matcher matcher = pattern.matcher(scanner.nextLine()) --> Line_20 $$ String title = matcher.group(4) [FD]
Line_16 $$ if (matcher.matches()) --> Line_21 $$ if (type.equals("1")) [CD]
Line_18 $$ String type = matcher.group(2) --> Line_21 $$ if (type.equals("1")) [FD]
Line_21 $$ if (type.equals("1")) --> Line_22 $$ primaryTitleMap.put(aid, title) [CD]
Line_9 $$ Map<Integer, String> primaryTitleMap = new HashMap<Integer, String>() --> Line_22 $$ primaryTitleMap.put(aid, title) [FD]
Line_17 $$ int aid = Integer.parseInt(matcher.group(1)) --> Line_22 $$ primaryTitleMap.put(aid, title) [FD]
Line_20 $$ String title = matcher.group(4) --> Line_22 $$ primaryTitleMap.put(aid, title) [FD]
Line_21 $$ if (type.equals("1")) --> Line_23 $$ if (type.equals("2") || type.equals("4")) [CD]
Line_18 $$ String type = matcher.group(2) --> Line_23 $$ if (type.equals("2") || type.equals("4")) [FD]
Line_23 $$ if (type.equals("2") || type.equals("4")) --> Line_24 $$ Map<Integer, Map<String, String>> titleMap = (type.equals("4") ? officialTitleMap : synonymsTitleMap) [CD]
Line_18 $$ String type = matcher.group(2) --> Line_24 $$ Map<Integer, Map<String, String>> titleMap = (type.equals("4") ? officialTitleMap : synonymsTitleMap) [FD]
Line_23 $$ if (type.equals("2") || type.equals("4")) --> Line_25 $$ Map<String, String> languageTitleMap = titleMap.get(aid) [CD]
Line_24 $$ Map<Integer, Map<String, String>> titleMap = (type.equals("4") ? officialTitleMap : synonymsTitleMap) --> Line_25 $$ Map<String, String> languageTitleMap = titleMap.get(aid) [FD]
Line_17 $$ int aid = Integer.parseInt(matcher.group(1)) --> Line_25 $$ Map<String, String> languageTitleMap = titleMap.get(aid) [FD]
Line_23 $$ if (type.equals("2") || type.equals("4")) --> Line_26 $$ if (languageTitleMap == null) [CD]
Line_25 $$ Map<String, String> languageTitleMap = titleMap.get(aid) --> Line_26 $$ if (languageTitleMap == null) [FD]
Line_26 $$ if (languageTitleMap == null) --> Line_27 $$ languageTitleMap = new HashMap<String, String>() [CD]
Line_25 $$ Map<String, String> languageTitleMap = titleMap.get(aid) --> Line_27 $$ languageTitleMap = new HashMap<String, String>() [FD]
Line_26 $$ if (languageTitleMap == null) --> Line_28 $$ titleMap.put(aid, languageTitleMap) [CD]
Line_24 $$ Map<Integer, Map<String, String>> titleMap = (type.equals("4") ? officialTitleMap : synonymsTitleMap) --> Line_28 $$ titleMap.put(aid, languageTitleMap) [FD]
Line_17 $$ int aid = Integer.parseInt(matcher.group(1)) --> Line_28 $$ titleMap.put(aid, languageTitleMap) [FD]
Line_25 $$ Map<String, String> languageTitleMap = titleMap.get(aid) --> Line_28 $$ titleMap.put(aid, languageTitleMap) [FD]
Line_27 $$ languageTitleMap = new HashMap<String, String>() --> Line_28 $$ titleMap.put(aid, languageTitleMap) [FD]
Line_23 $$ if (type.equals("2") || type.equals("4")) --> Line_30 $$ languageTitleMap.put(language, title) [CD]
Line_25 $$ Map<String, String> languageTitleMap = titleMap.get(aid) --> Line_30 $$ languageTitleMap.put(language, title) [FD]
Line_27 $$ languageTitleMap = new HashMap<String, String>() --> Line_30 $$ languageTitleMap.put(language, title) [FD]
Line_19 $$ String language = matcher.group(3) --> Line_30 $$ languageTitleMap.put(language, title) [FD]
Line_20 $$ String title = matcher.group(4) --> Line_30 $$ languageTitleMap.put(language, title) [FD]
Line_12 $$ Scanner scanner = new Scanner(new GZIPInputStream(url.openStream()), "UTF-8") --> Line_35 $$ scanner.close() [FD]
Line_9 $$ Map<Integer, String> primaryTitleMap = new HashMap<Integer, String>() --> Line_37 $$ anime = new ArrayList<AnidbSearchResult>(primaryTitleMap.size()) [FD]
Line_9 $$ Map<Integer, String> primaryTitleMap = new HashMap<Integer, String>() --> Line_38 $$ for (Entry<Integer, String> entry : primaryTitleMap.entrySet()) [FD]
Line_11 $$ Map<Integer, Map<String, String>> synonymsTitleMap = new HashMap<Integer, Map<String, String>>() --> Line_40 $$ if (synonymsTitleMap.containsKey(entry.getKey())) [FD]
Line_40 $$ if (synonymsTitleMap.containsKey(entry.getKey())) --> Line_41 $$ localizedTitles.putAll(synonymsTitleMap.get(entry.getKey())) [CD]
Line_39 $$ Map<String, String> localizedTitles = new HashMap<String, String>() --> Line_41 $$ localizedTitles.putAll(synonymsTitleMap.get(entry.getKey())) [FD]
Line_11 $$ Map<Integer, Map<String, String>> synonymsTitleMap = new HashMap<Integer, Map<String, String>>() --> Line_41 $$ localizedTitles.putAll(synonymsTitleMap.get(entry.getKey())) [FD]
Line_10 $$ Map<Integer, Map<String, String>> officialTitleMap = new HashMap<Integer, Map<String, String>>() --> Line_43 $$ if (officialTitleMap.containsKey(entry.getKey())) [FD]
Line_43 $$ if (officialTitleMap.containsKey(entry.getKey())) --> Line_44 $$ localizedTitles.putAll(officialTitleMap.get(entry.getKey())) [CD]
Line_39 $$ Map<String, String> localizedTitles = new HashMap<String, String>() --> Line_44 $$ localizedTitles.putAll(officialTitleMap.get(entry.getKey())) [FD]
Line_10 $$ Map<Integer, Map<String, String>> officialTitleMap = new HashMap<Integer, Map<String, String>>() --> Line_44 $$ localizedTitles.putAll(officialTitleMap.get(entry.getKey())) [FD]
Line_2 $$ public synchronized List<AnidbSearchResult> getAnimeTitles() throws Exception --> Line_48 $$ return cache.putSearchResult(null, Locale.ROOT, anime) [CD]
Line_4 $$ ResultCache cache = getCache() --> Line_48 $$ return cache.putSearchResult(null, Locale.ROOT, anime) [FD]
Line_27 $$ languageTitleMap = new HashMap<String, String>() --> Line_26 $$ if (languageTitleMap == null) [FD]
