Line_2 $$ public static InputStream getResourceInputStream(final URL url) throws IOException --> Line_3 $$ File file = url2file(url) [CD]
Line_2 $$ public static InputStream getResourceInputStream(final URL url) throws IOException --> Line_3 $$ File file = url2file(url) [FD]
Line_2 $$ public static InputStream getResourceInputStream(final URL url) throws IOException --> Line_4 $$ if (file != null) [CD]
Line_3 $$ File file = url2file(url) --> Line_4 $$ if (file != null) [FD]
Line_4 $$ if (file != null) --> Line_5 $$ return new BufferedInputStream(new FileInputStream(file)) [CD]
Line_2 $$ public static InputStream getResourceInputStream(final URL url) throws IOException --> Line_7 $$ if (!"jar".equalsIgnoreCase(url.getProtocol())) [CD]
Line_2 $$ public static InputStream getResourceInputStream(final URL url) throws IOException --> Line_7 $$ if (!"jar".equalsIgnoreCase(url.getProtocol())) [FD]
Line_7 $$ if (!"jar".equalsIgnoreCase(url.getProtocol())) --> Line_8 $$ return url.openStream() [CD]
Line_2 $$ public static InputStream getResourceInputStream(final URL url) throws IOException --> Line_8 $$ return url.openStream() [FD]
Line_2 $$ public static InputStream getResourceInputStream(final URL url) throws IOException --> Line_10 $$ String urlStr = url.toExternalForm() [CD]
Line_2 $$ public static InputStream getResourceInputStream(final URL url) throws IOException --> Line_10 $$ String urlStr = url.toExternalForm() [FD]
Line_2 $$ public static InputStream getResourceInputStream(final URL url) throws IOException --> Line_11 $$ if (urlStr.endsWith("!/")) [CD]
Line_10 $$ String urlStr = url.toExternalForm() --> Line_11 $$ if (urlStr.endsWith("!/")) [FD]
Line_2 $$ public static InputStream getResourceInputStream(final URL url) throws IOException --> Line_12 $$ throw new FileNotFoundException(url.toExternalForm()) [FD]
Line_2 $$ public static InputStream getResourceInputStream(final URL url) throws IOException --> Line_14 $$ int p = urlStr.indexOf("!/") [CD]
Line_10 $$ String urlStr = url.toExternalForm() --> Line_14 $$ int p = urlStr.indexOf("!/") [FD]
Line_2 $$ public static InputStream getResourceInputStream(final URL url) throws IOException --> Line_15 $$ if (p == -1) [CD]
Line_14 $$ int p = urlStr.indexOf("!/") --> Line_15 $$ if (p == -1) [FD]
Line_2 $$ public static InputStream getResourceInputStream(final URL url) throws IOException --> Line_16 $$ throw new MalformedURLException(url.toExternalForm()) [FD]
Line_2 $$ public static InputStream getResourceInputStream(final URL url) throws IOException --> Line_18 $$ String path = urlStr.substring(p + 2) [CD]
Line_10 $$ String urlStr = url.toExternalForm() --> Line_18 $$ String path = urlStr.substring(p + 2) [FD]
Line_2 $$ public static InputStream getResourceInputStream(final URL url) throws IOException --> Line_19 $$ file = url2file(new URL(urlStr.substring(4, p))) [CD]
Line_3 $$ File file = url2file(url) --> Line_19 $$ file = url2file(new URL(urlStr.substring(4, p))) [FD]
Line_10 $$ String urlStr = url.toExternalForm() --> Line_19 $$ file = url2file(new URL(urlStr.substring(4, p))) [FD]
Line_14 $$ int p = urlStr.indexOf("!/") --> Line_19 $$ file = url2file(new URL(urlStr.substring(4, p))) [FD]
Line_2 $$ public static InputStream getResourceInputStream(final URL url) throws IOException --> Line_20 $$ if (file == null) [CD]
Line_3 $$ File file = url2file(url) --> Line_20 $$ if (file == null) [FD]
Line_19 $$ file = url2file(new URL(urlStr.substring(4, p))) --> Line_20 $$ if (file == null) [FD]
Line_20 $$ if (file == null) --> Line_21 $$ return url.openStream() [CD]
Line_2 $$ public static InputStream getResourceInputStream(final URL url) throws IOException --> Line_21 $$ return url.openStream() [FD]
Line_2 $$ public static InputStream getResourceInputStream(final URL url) throws IOException --> Line_23 $$ JarFile jarFile = new JarFile(file) [CD]
Line_23 $$ JarFile jarFile = new JarFile(file) --> Line_25 $$ ZipEntry entry = jarFile.getEntry(path) [FD]
Line_18 $$ String path = urlStr.substring(p + 2) --> Line_25 $$ ZipEntry entry = jarFile.getEntry(path) [FD]
Line_2 $$ public static InputStream getResourceInputStream(final URL url) throws IOException --> Line_27 $$ throw new FileNotFoundException(url.toExternalForm()) [FD]
Line_23 $$ JarFile jarFile = new JarFile(file) --> Line_29 $$ InputStream in = jarFile.getInputStream(entry) [FD]
Line_29 $$ InputStream in = jarFile.getInputStream(entry) --> Line_32 $$ copyStream(in, out, 1024) [FD]
Line_31 $$ ByteArrayOutputStream out = new ByteArrayOutputStream() --> Line_32 $$ copyStream(in, out, 1024) [FD]
Line_31 $$ ByteArrayOutputStream out = new ByteArrayOutputStream() --> Line_33 $$ return new ByteArrayInputStream(out.toByteArray()) [FD]
Line_29 $$ InputStream in = jarFile.getInputStream(entry) --> Line_35 $$ in.close() [FD]
Line_23 $$ JarFile jarFile = new JarFile(file) --> Line_38 $$ jarFile.close() [FD]
