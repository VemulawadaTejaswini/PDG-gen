Line_2 $$ public void testIsVersioned() throws ServiceException, IOException --> Line_3 $$ JCRNodeSource emptySource = loadTestSource() [CD]
Line_2 $$ public void testIsVersioned() throws ServiceException, IOException --> Line_4 $$ assertTrue(emptySource.isVersioned()) [CD]
Line_3 $$ JCRNodeSource emptySource = loadTestSource() --> Line_4 $$ assertTrue(emptySource.isVersioned()) [FD]
Line_2 $$ public void testIsVersioned() throws ServiceException, IOException --> Line_5 $$ OutputStream sourceOut = emptySource.getOutputStream() [CD]
Line_3 $$ JCRNodeSource emptySource = loadTestSource() --> Line_5 $$ OutputStream sourceOut = emptySource.getOutputStream() [FD]
Line_2 $$ public void testIsVersioned() throws ServiceException, IOException --> Line_6 $$ assertNotNull(sourceOut) [CD]
Line_5 $$ OutputStream sourceOut = emptySource.getOutputStream() --> Line_6 $$ assertNotNull(sourceOut) [FD]
Line_2 $$ public void testIsVersioned() throws ServiceException, IOException --> Line_7 $$ InputStream contentIn = getClass().getResourceAsStream(CONTENT_FILE) [CD]
Line_7 $$ InputStream contentIn = getClass().getResourceAsStream(CONTENT_FILE) --> Line_9 $$ IOUtils.copy(contentIn, sourceOut) [FD]
Line_5 $$ OutputStream sourceOut = emptySource.getOutputStream() --> Line_9 $$ IOUtils.copy(contentIn, sourceOut) [FD]
Line_5 $$ OutputStream sourceOut = emptySource.getOutputStream() --> Line_10 $$ sourceOut.flush() [FD]
Line_5 $$ OutputStream sourceOut = emptySource.getOutputStream() --> Line_12 $$ sourceOut.close() [FD]
Line_7 $$ InputStream contentIn = getClass().getResourceAsStream(CONTENT_FILE) --> Line_13 $$ contentIn.close() [FD]
Line_2 $$ public void testIsVersioned() throws ServiceException, IOException --> Line_15 $$ assertTrue(emptySource.isVersioned()) [CD]
Line_3 $$ JCRNodeSource emptySource = loadTestSource() --> Line_15 $$ assertTrue(emptySource.isVersioned()) [FD]
