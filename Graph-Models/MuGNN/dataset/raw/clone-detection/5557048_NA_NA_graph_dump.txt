Line_2 $$ private void copyDirContent(String fromDir, String toDir) throws Exception --> Line_3 $$ String fs = System.getProperty("file.separator") [CD]
Line_2 $$ private void copyDirContent(String fromDir, String toDir) throws Exception --> Line_4 $$ File[] files = new File(fromDir).listFiles() [CD]
Line_2 $$ private void copyDirContent(String fromDir, String toDir) throws Exception --> Line_5 $$ if (files == null) [CD]
Line_4 $$ File[] files = new File(fromDir).listFiles() --> Line_5 $$ if (files == null) [FD]
Line_2 $$ private void copyDirContent(String fromDir, String toDir) throws Exception --> Line_8 $$ for (int i = 0; i < files.length; i++) [CD]
Line_8 $$ for (int i = 0; i < files.length; i++) --> Line_9 $$ File dir = new File(toDir) [CD]
Line_8 $$ for (int i = 0; i < files.length; i++) --> Line_10 $$ dir.mkdirs() [CD]
Line_9 $$ File dir = new File(toDir) --> Line_10 $$ dir.mkdirs() [FD]
Line_8 $$ for (int i = 0; i < files.length; i++) --> Line_11 $$ if (files[i].isFile()) [CD]
Line_14 $$ FileChannel dstChannel = new FileOutputStream(toDir + fs + files[i].getName()).getChannel() --> Line_15 $$ dstChannel.transferFrom(srcChannel, 0, srcChannel.size()) [FD]
Line_13 $$ FileChannel srcChannel = new FileInputStream(files[i]).getChannel() --> Line_15 $$ dstChannel.transferFrom(srcChannel, 0, srcChannel.size()) [FD]
Line_13 $$ FileChannel srcChannel = new FileInputStream(files[i]).getChannel() --> Line_16 $$ srcChannel.close() [FD]
Line_14 $$ FileChannel dstChannel = new FileOutputStream(toDir + fs + files[i].getName()).getChannel() --> Line_17 $$ dstChannel.close() [FD]
