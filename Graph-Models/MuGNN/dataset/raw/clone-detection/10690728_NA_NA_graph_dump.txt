Line_2 $$ private void addMaintainerScripts(TarOutputStream tar, PackageInfo info) throws IOException, ScriptDataTooLargeException --> Line_3 $$ for (final MaintainerScript script : info.getMaintainerScripts().values()) [FD]
Line_3 $$ for (final MaintainerScript script : info.getMaintainerScripts().values()) --> Line_4 $$ if (script.getSize() > Integer.MAX_VALUE) [FD]
Line_3 $$ for (final MaintainerScript script : info.getMaintainerScripts().values()) --> Line_5 $$ throw new ScriptDataTooLargeException("The script data is too large for the tar file. script=[" + script.getType().getFilename() + "].") [FD]
Line_3 $$ for (final MaintainerScript script : info.getMaintainerScripts().values()) --> Line_7 $$ final TarEntry entry = standardEntry(script.getType().getFilename(), UnixStandardPermissions.EXECUTABLE_FILE_MODE, (int) script.getSize()) [FD]
Line_2 $$ private void addMaintainerScripts(TarOutputStream tar, PackageInfo info) throws IOException, ScriptDataTooLargeException --> Line_8 $$ tar.putNextEntry(entry) [FD]
Line_2 $$ private void addMaintainerScripts(TarOutputStream tar, PackageInfo info) throws IOException, ScriptDataTooLargeException --> Line_9 $$ IOUtils.copy(script.getStream(), tar) [FD]
Line_3 $$ for (final MaintainerScript script : info.getMaintainerScripts().values()) --> Line_9 $$ IOUtils.copy(script.getStream(), tar) [FD]
Line_2 $$ private void addMaintainerScripts(TarOutputStream tar, PackageInfo info) throws IOException, ScriptDataTooLargeException --> Line_10 $$ tar.closeEntry() [FD]
