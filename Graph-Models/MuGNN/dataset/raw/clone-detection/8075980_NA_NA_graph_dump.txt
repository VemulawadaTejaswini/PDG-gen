Line_2 $$ public byte[] getDataAsByteArray(String url) --> Line_6 $$ if (!url.toUpperCase().startsWith("HTTP://") && !url.toUpperCase().startsWith("HTTPS://")) [FD]
Line_6 $$ if (!url.toUpperCase().startsWith("HTTP://") && !url.toUpperCase().startsWith("HTTPS://")) --> Line_7 $$ urlc = tryOpenConnection(url) [CD]
Line_5 $$ URLConnection urlc --> Line_7 $$ urlc = tryOpenConnection(url) [FD]
Line_2 $$ public byte[] getDataAsByteArray(String url) --> Line_7 $$ urlc = tryOpenConnection(url) [FD]
Line_6 $$ if (!url.toUpperCase().startsWith("HTTP://") && !url.toUpperCase().startsWith("HTTPS://")) --> Line_9 $$ urlc = new URL(url).openConnection() [CD]
Line_5 $$ URLConnection urlc --> Line_9 $$ urlc = new URL(url).openConnection() [FD]
Line_7 $$ urlc = tryOpenConnection(url) --> Line_9 $$ urlc = new URL(url).openConnection() [FD]
Line_5 $$ URLConnection urlc --> Line_11 $$ urlc.setUseCaches(false) [FD]
Line_7 $$ urlc = tryOpenConnection(url) --> Line_11 $$ urlc.setUseCaches(false) [FD]
Line_9 $$ urlc = new URL(url).openConnection() --> Line_11 $$ urlc.setUseCaches(false) [FD]
Line_5 $$ URLConnection urlc --> Line_12 $$ urlc.setRequestProperty("Content-Type", "application/x-www-form-urlencoded") [FD]
Line_7 $$ urlc = tryOpenConnection(url) --> Line_12 $$ urlc.setRequestProperty("Content-Type", "application/x-www-form-urlencoded") [FD]
Line_9 $$ urlc = new URL(url).openConnection() --> Line_12 $$ urlc.setRequestProperty("Content-Type", "application/x-www-form-urlencoded") [FD]
Line_5 $$ URLConnection urlc --> Line_13 $$ urlc.setRequestProperty("User-Agent", "Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.9.1.9) Gecko/20100414 Iceweasel/3.5.9 (like Firefox/3.5.9)") [FD]
Line_7 $$ urlc = tryOpenConnection(url) --> Line_13 $$ urlc.setRequestProperty("User-Agent", "Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.9.1.9) Gecko/20100414 Iceweasel/3.5.9 (like Firefox/3.5.9)") [FD]
Line_9 $$ urlc = new URL(url).openConnection() --> Line_13 $$ urlc.setRequestProperty("User-Agent", "Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.9.1.9) Gecko/20100414 Iceweasel/3.5.9 (like Firefox/3.5.9)") [FD]
Line_5 $$ URLConnection urlc --> Line_14 $$ urlc.setRequestProperty("Accept-Encoding", "gzip") [FD]
Line_7 $$ urlc = tryOpenConnection(url) --> Line_14 $$ urlc.setRequestProperty("Accept-Encoding", "gzip") [FD]
Line_9 $$ urlc = new URL(url).openConnection() --> Line_14 $$ urlc.setRequestProperty("Accept-Encoding", "gzip") [FD]
Line_5 $$ URLConnection urlc --> Line_15 $$ InputStream is = urlc.getInputStream() [FD]
Line_7 $$ urlc = tryOpenConnection(url) --> Line_15 $$ InputStream is = urlc.getInputStream() [FD]
Line_9 $$ urlc = new URL(url).openConnection() --> Line_15 $$ InputStream is = urlc.getInputStream() [FD]
Line_5 $$ URLConnection urlc --> Line_16 $$ int len = urlc.getContentLength() [FD]
Line_7 $$ urlc = tryOpenConnection(url) --> Line_16 $$ int len = urlc.getContentLength() [FD]
Line_9 $$ urlc = new URL(url).openConnection() --> Line_16 $$ int len = urlc.getContentLength() [FD]
Line_16 $$ int len = urlc.getContentLength() --> Line_17 $$ if (len < 0) [FD]
Line_17 $$ if (len < 0) --> Line_18 $$ ByteArrayOutputStream bao = new ByteArrayOutputStream() [CD]
Line_17 $$ if (len < 0) --> Line_19 $$ byte[] buf = new byte[4096] [CD]
Line_17 $$ if (len < 0) --> Line_20 $$ for (; ; ) [CD]
Line_20 $$ for (; ; ) --> Line_21 $$ int nb = is.read(buf) [CD]
Line_15 $$ InputStream is = urlc.getInputStream() --> Line_21 $$ int nb = is.read(buf) [FD]
Line_19 $$ byte[] buf = new byte[4096] --> Line_21 $$ int nb = is.read(buf) [FD]
Line_20 $$ for (; ; ) --> Line_22 $$ if (nb <= 0) [CD]
Line_21 $$ int nb = is.read(buf) --> Line_22 $$ if (nb <= 0) [FD]
Line_20 $$ for (; ; ) --> Line_23 $$ bao.write(buf, 0, nb) [CD]
Line_18 $$ ByteArrayOutputStream bao = new ByteArrayOutputStream() --> Line_23 $$ bao.write(buf, 0, nb) [FD]
Line_19 $$ byte[] buf = new byte[4096] --> Line_23 $$ bao.write(buf, 0, nb) [FD]
Line_21 $$ int nb = is.read(buf) --> Line_23 $$ bao.write(buf, 0, nb) [FD]
Line_17 $$ if (len < 0) --> Line_25 $$ dat = bao.toByteArray() [CD]
Line_4 $$ byte[] dat = null --> Line_25 $$ dat = bao.toByteArray() [FD]
Line_18 $$ ByteArrayOutputStream bao = new ByteArrayOutputStream() --> Line_25 $$ dat = bao.toByteArray() [FD]
Line_17 $$ if (len < 0) --> Line_26 $$ bao.close() [CD]
Line_18 $$ ByteArrayOutputStream bao = new ByteArrayOutputStream() --> Line_26 $$ bao.close() [FD]
Line_17 $$ if (len < 0) --> Line_28 $$ dat = new byte[len] [CD]
Line_4 $$ byte[] dat = null --> Line_28 $$ dat = new byte[len] [FD]
Line_25 $$ dat = bao.toByteArray() --> Line_28 $$ dat = new byte[len] [FD]
Line_17 $$ if (len < 0) --> Line_29 $$ int i = 0 [CD]
Line_17 $$ if (len < 0) --> Line_30 $$ while (i < len) [CD]
Line_29 $$ int i = 0 --> Line_30 $$ while (i < len) [FD]
Line_16 $$ int len = urlc.getContentLength() --> Line_30 $$ while (i < len) [FD]
Line_30 $$ while (i < len) --> Line_31 $$ int n = is.read(dat, i, len - i) [CD]
Line_15 $$ InputStream is = urlc.getInputStream() --> Line_31 $$ int n = is.read(dat, i, len - i) [FD]
Line_4 $$ byte[] dat = null --> Line_31 $$ int n = is.read(dat, i, len - i) [FD]
Line_25 $$ dat = bao.toByteArray() --> Line_31 $$ int n = is.read(dat, i, len - i) [FD]
Line_28 $$ dat = new byte[len] --> Line_31 $$ int n = is.read(dat, i, len - i) [FD]
Line_29 $$ int i = 0 --> Line_31 $$ int n = is.read(dat, i, len - i) [FD]
Line_30 $$ while (i < len) --> Line_32 $$ if (n <= 0) [CD]
Line_31 $$ int n = is.read(dat, i, len - i) --> Line_32 $$ if (n <= 0) [FD]
Line_30 $$ while (i < len) --> Line_33 $$ i += n [CD]
Line_29 $$ int i = 0 --> Line_33 $$ i += n [FD]
Line_31 $$ int n = is.read(dat, i, len - i) --> Line_33 $$ i += n [FD]
Line_15 $$ InputStream is = urlc.getInputStream() --> Line_36 $$ is.close() [FD]
Line_33 $$ i += n --> Line_30 $$ while (i < len) [FD]
Line_33 $$ i += n --> Line_31 $$ int n = is.read(dat, i, len - i) [FD]
