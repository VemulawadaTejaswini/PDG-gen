Line_2 $$ protected void performInsertTest() throws Exception --> Line_3 $$ Connection conn = connect() [CD]
Line_2 $$ protected void performInsertTest() throws Exception --> Line_4 $$ EntityDescriptor ed = repository.getEntityDescriptor(User.class) [CD]
Line_2 $$ protected void performInsertTest() throws Exception --> Line_5 $$ User testUser = new User() [CD]
Line_2 $$ protected void performInsertTest() throws Exception --> Line_6 $$ Date now = new Date() [CD]
Line_2 $$ protected void performInsertTest() throws Exception --> Line_7 $$ conn.setAutoCommit(false) [CD]
Line_3 $$ Connection conn = connect() --> Line_7 $$ conn.setAutoCommit(false) [FD]
Line_2 $$ protected void performInsertTest() throws Exception --> Line_8 $$ testUser.setUsername("rednose") [CD]
Line_5 $$ User testUser = new User() --> Line_8 $$ testUser.setUsername("rednose") [FD]
Line_2 $$ protected void performInsertTest() throws Exception --> Line_9 $$ testUser.setUCreated("dbUtilTest") [CD]
Line_5 $$ User testUser = new User() --> Line_9 $$ testUser.setUCreated("dbUtilTest") [FD]
Line_2 $$ protected void performInsertTest() throws Exception --> Line_10 $$ testUser.setUModified("dbUtilTest") [CD]
Line_5 $$ User testUser = new User() --> Line_10 $$ testUser.setUModified("dbUtilTest") [FD]
Line_2 $$ protected void performInsertTest() throws Exception --> Line_11 $$ testUser.setDtCreated(now) [CD]
Line_5 $$ User testUser = new User() --> Line_11 $$ testUser.setDtCreated(now) [FD]
Line_6 $$ Date now = new Date() --> Line_11 $$ testUser.setDtCreated(now) [FD]
Line_2 $$ protected void performInsertTest() throws Exception --> Line_12 $$ testUser.setDtModified(now) [CD]
Line_5 $$ User testUser = new User() --> Line_12 $$ testUser.setDtModified(now) [FD]
Line_6 $$ Date now = new Date() --> Line_12 $$ testUser.setDtModified(now) [FD]
Line_2 $$ protected void performInsertTest() throws Exception --> Line_13 $$ String sql = dbUtil.genInsert(ed, testUser) [CD]
Line_5 $$ User testUser = new User() --> Line_13 $$ String sql = dbUtil.genInsert(ed, testUser) [FD]
Line_2 $$ protected void performInsertTest() throws Exception --> Line_14 $$ Statement st = conn.createStatement() [CD]
Line_3 $$ Connection conn = connect() --> Line_14 $$ Statement st = conn.createStatement() [FD]
Line_2 $$ protected void performInsertTest() throws Exception --> Line_15 $$ long id = 0 [CD]
Line_2 $$ protected void performInsertTest() throws Exception --> Line_16 $$ System.err.println("Insert: " + sql) [CD]
Line_2 $$ protected void performInsertTest() throws Exception --> Line_17 $$ int rv = st.executeUpdate(sql, dbUtil.supportsGeneratedKeyQuery() ? Statement.RETURN_GENERATED_KEYS : Statement.NO_GENERATED_KEYS) [CD]
Line_14 $$ Statement st = conn.createStatement() --> Line_17 $$ int rv = st.executeUpdate(sql, dbUtil.supportsGeneratedKeyQuery() ? Statement.RETURN_GENERATED_KEYS : Statement.NO_GENERATED_KEYS) [FD]
Line_13 $$ String sql = dbUtil.genInsert(ed, testUser) --> Line_17 $$ int rv = st.executeUpdate(sql, dbUtil.supportsGeneratedKeyQuery() ? Statement.RETURN_GENERATED_KEYS : Statement.NO_GENERATED_KEYS) [FD]
Line_2 $$ protected void performInsertTest() throws Exception --> Line_18 $$ if (rv > 0) [CD]
Line_17 $$ int rv = st.executeUpdate(sql, dbUtil.supportsGeneratedKeyQuery() ? Statement.RETURN_GENERATED_KEYS : Statement.NO_GENERATED_KEYS) --> Line_18 $$ if (rv > 0) [FD]
Line_18 $$ if (rv > 0) --> Line_19 $$ if (dbUtil.supportsGeneratedKeyQuery()) [CD]
Line_19 $$ if (dbUtil.supportsGeneratedKeyQuery()) --> Line_20 $$ ResultSet rs = st.getGeneratedKeys() [CD]
Line_14 $$ Statement st = conn.createStatement() --> Line_20 $$ ResultSet rs = st.getGeneratedKeys() [FD]
Line_19 $$ if (dbUtil.supportsGeneratedKeyQuery()) --> Line_21 $$ id = rs.getLong(1) [CD]
Line_20 $$ ResultSet rs = st.getGeneratedKeys() --> Line_21 $$ id = rs.getLong(1) [FD]
Line_15 $$ long id = 0 --> Line_21 $$ id = rs.getLong(1) [FD]
Line_19 $$ if (dbUtil.supportsGeneratedKeyQuery()) --> Line_23 $$ id = queryId(ed, now, "dbUtilTest", conn, dbUtil) [CD]
Line_15 $$ long id = 0 --> Line_23 $$ id = queryId(ed, now, "dbUtilTest", conn, dbUtil) [FD]
Line_21 $$ id = rs.getLong(1) --> Line_23 $$ id = queryId(ed, now, "dbUtilTest", conn, dbUtil) [FD]
Line_6 $$ Date now = new Date() --> Line_23 $$ id = queryId(ed, now, "dbUtilTest", conn, dbUtil) [FD]
Line_3 $$ Connection conn = connect() --> Line_23 $$ id = queryId(ed, now, "dbUtilTest", conn, dbUtil) [FD]
Line_18 $$ if (rv > 0) --> Line_25 $$ testUser.setId(id) [CD]
Line_15 $$ long id = 0 --> Line_25 $$ testUser.setId(id) [FD]
Line_21 $$ id = rs.getLong(1) --> Line_25 $$ testUser.setId(id) [FD]
Line_23 $$ id = queryId(ed, now, "dbUtilTest", conn, dbUtil) --> Line_25 $$ testUser.setId(id) [FD]
Line_5 $$ User testUser = new User() --> Line_25 $$ testUser.setId(id) [FD]
Line_17 $$ int rv = st.executeUpdate(sql, dbUtil.supportsGeneratedKeyQuery() ? Statement.RETURN_GENERATED_KEYS : Statement.NO_GENERATED_KEYS) --> Line_25 $$ testUser.setId(id) [FD]
Line_2 $$ protected void performInsertTest() throws Exception --> Line_27 $$ conn.rollback() [CD]
Line_3 $$ Connection conn = connect() --> Line_27 $$ conn.rollback() [FD]
Line_2 $$ protected void performInsertTest() throws Exception --> Line_28 $$ assertTrue("oups, insert failed?", id != 0) [CD]
Line_2 $$ protected void performInsertTest() throws Exception --> Line_29 $$ System.err.println("successfully created user with id #" + id + " temporarily") [CD]
