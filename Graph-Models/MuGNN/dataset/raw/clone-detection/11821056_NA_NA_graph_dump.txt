Line_2 $$ private void constructDialogContent(Composite parent) --> Line_3 $$ SashForm splitter = new SashForm(parent, SWT.HORIZONTAL) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_4 $$ splitter.setLayoutData(new GridData(GridData.FILL_BOTH)) [CD]
Line_3 $$ SashForm splitter = new SashForm(parent, SWT.HORIZONTAL) --> Line_4 $$ splitter.setLayoutData(new GridData(GridData.FILL_BOTH)) [FD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_5 $$ Group fragmentsGroup = new Group(splitter, SWT.NONE) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_6 $$ fragmentsGroup.setLayout(new GridLayout(1, false)) [CD]
Line_5 $$ Group fragmentsGroup = new Group(splitter, SWT.NONE) --> Line_6 $$ fragmentsGroup.setLayout(new GridLayout(1, false)) [FD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_7 $$ fragmentsGroup.setText("Result Fragments") [CD]
Line_5 $$ Group fragmentsGroup = new Group(splitter, SWT.NONE) --> Line_7 $$ fragmentsGroup.setText("Result Fragments") [FD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_8 $$ fragmentsTable = CheckboxTableViewer.newCheckList(fragmentsGroup, SWT.NONE) [CD]
Line_5 $$ Group fragmentsGroup = new Group(splitter, SWT.NONE) --> Line_8 $$ fragmentsTable = CheckboxTableViewer.newCheckList(fragmentsGroup, SWT.NONE) [FD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_9 $$ fragmentsTable.getTable().setLayoutData(new GridData(GridData.FILL_BOTH)) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_10 $$ fragmentsTable.setContentProvider(new ArrayContentProvider()) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_11 $$ fragmentsTable.setLabelProvider(new LabelProvider() [CD]
Line_11 $$ fragmentsTable.setLabelProvider(new LabelProvider() --> Line_13 $$ return JFaceResources.getImage(WsmoImageRegistry.INSTANCE_ICON) [CD]
Line_11 $$ fragmentsTable.setLabelProvider(new LabelProvider() --> Line_16 $$ if (element == null) [CD]
Line_11 $$ fragmentsTable.setLabelProvider(new LabelProvider() --> Line_16 $$ if (element == null) [FD]
Line_16 $$ if (element == null) --> Line_17 $$ return "" [CD]
Line_11 $$ fragmentsTable.setLabelProvider(new LabelProvider() --> Line_19 $$ if (element instanceof ProcessFragment) [CD]
Line_11 $$ fragmentsTable.setLabelProvider(new LabelProvider() --> Line_19 $$ if (element instanceof ProcessFragment) [FD]
Line_19 $$ if (element instanceof ProcessFragment) --> Line_20 $$ ProcessFragment frag = (ProcessFragment) element [CD]
Line_19 $$ if (element instanceof ProcessFragment) --> Line_21 $$ String label = (frag.getName() == null) ? " <no-fragment-name>" : frag.getName() [CD]
Line_20 $$ ProcessFragment frag = (ProcessFragment) element --> Line_21 $$ String label = (frag.getName() == null) ? " <no-fragment-name>" : frag.getName() [FD]
Line_19 $$ if (element instanceof ProcessFragment) --> Line_22 $$ if (frag.getDescription() != null) [CD]
Line_20 $$ ProcessFragment frag = (ProcessFragment) element --> Line_22 $$ if (frag.getDescription() != null) [FD]
Line_22 $$ if (frag.getDescription() != null) --> Line_23 $$ label += "  [" + Utils.normalizeSpaces(frag.getDescription()) + ']' [CD]
Line_21 $$ String label = (frag.getName() == null) ? " <no-fragment-name>" : frag.getName() --> Line_23 $$ label += "  [" + Utils.normalizeSpaces(frag.getDescription()) + ']' [FD]
Line_20 $$ ProcessFragment frag = (ProcessFragment) element --> Line_23 $$ label += "  [" + Utils.normalizeSpaces(frag.getDescription()) + ']' [FD]
Line_19 $$ if (element instanceof ProcessFragment) --> Line_25 $$ return label [CD]
Line_11 $$ fragmentsTable.setLabelProvider(new LabelProvider() --> Line_27 $$ return element.toString() [CD]
Line_11 $$ fragmentsTable.setLabelProvider(new LabelProvider() --> Line_27 $$ return element.toString() [FD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_30 $$ fragmentsTable.setInput(results.toArray()) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_32 $$ menuMgr.setRemoveAllWhenShown(true) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_33 $$ menuMgr.addMenuListener(new IMenuListener() [CD]
Line_33 $$ menuMgr.addMenuListener(new IMenuListener() --> Line_35 $$ if (false == GUIHelper.containsCursor(fragmentsTable.getTable())) [CD]
Line_35 $$ if (false == GUIHelper.containsCursor(fragmentsTable.getTable())) --> Line_36 $$ return [CD]
Line_33 $$ menuMgr.addMenuListener(new IMenuListener() --> Line_38 $$ if (false == fragmentsTable.getSelection().isEmpty()) [CD]
Line_38 $$ if (false == fragmentsTable.getSelection().isEmpty()) --> Line_39 $$ menuMgr.add(new Action("Edit Name") [CD]
Line_39 $$ menuMgr.add(new Action("Edit Name") --> Line_41 $$ doEditName() [CD]
Line_38 $$ if (false == fragmentsTable.getSelection().isEmpty()) --> Line_44 $$ menuMgr.add(new Action("Edit Description") [CD]
Line_44 $$ menuMgr.add(new Action("Edit Description") --> Line_46 $$ doEditDescription() [CD]
Line_38 $$ if (false == fragmentsTable.getSelection().isEmpty()) --> Line_49 $$ menuMgr.add(new Separator()) [CD]
Line_33 $$ menuMgr.addMenuListener(new IMenuListener() --> Line_51 $$ menuMgr.add(new Action("Select All") [CD]
Line_51 $$ menuMgr.add(new Action("Select All") --> Line_53 $$ fragmentsTable.setAllChecked(true) [CD]
Line_51 $$ menuMgr.add(new Action("Select All") --> Line_54 $$ updateSelectionMonitor() [CD]
Line_33 $$ menuMgr.addMenuListener(new IMenuListener() --> Line_57 $$ menuMgr.add(new Separator()) [CD]
Line_33 $$ menuMgr.addMenuListener(new IMenuListener() --> Line_58 $$ menuMgr.add(new Action("Unselect All") [CD]
Line_58 $$ menuMgr.add(new Action("Unselect All") --> Line_60 $$ fragmentsTable.setAllChecked(false) [CD]
Line_58 $$ menuMgr.add(new Action("Unselect All") --> Line_61 $$ updateSelectionMonitor() [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_66 $$ fragmentsTable.getTable().setMenu(menuMgr.createContextMenu(fragmentsTable.getTable())) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_67 $$ fragmentsTable.addSelectionChangedListener(new ISelectionChangedListener() [CD]
Line_67 $$ fragmentsTable.addSelectionChangedListener(new ISelectionChangedListener() --> Line_69 $$ updatePreviewPanel((IStructuredSelection) event.getSelection()) [CD]
Line_67 $$ fragmentsTable.addSelectionChangedListener(new ISelectionChangedListener() --> Line_69 $$ updatePreviewPanel((IStructuredSelection) event.getSelection()) [FD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_74 $$ previewGroup.setLayout(new GridLayout(1, false)) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_75 $$ previewGroup.setText("Fragment Preview") [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_76 $$ createZoomToolbar(previewGroup) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_78 $$ previewArea.setLayoutData(new GridData(GridData.FILL_BOTH)) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_79 $$ previewArea.setLayout(new GridLayout(1, false)) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_81 $$ viewer.createControl(previewArea) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_83 $$ viewer.setRootEditPart(rootEditPart) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_84 $$ viewer.setEditPartFactory(new GraphicalPartFactory()) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_85 $$ viewer.getControl().setBackground(ColorConstants.listBackground) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_86 $$ viewer.getControl().setLayoutData(new GridData(GridData.FILL_BOTH)) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_87 $$ ZoomManager zoomManager = rootEditPart.getZoomManager() [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_89 $$ zoomContributions.add(ZoomManager.FIT_ALL) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_90 $$ zoomContributions.add(ZoomManager.FIT_HEIGHT) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_91 $$ zoomContributions.add(ZoomManager.FIT_WIDTH) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_92 $$ zoomManager.setZoomLevelContributions(zoomContributions) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_93 $$ zoomManager.setZoomLevels(new double[] [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_94 $$ zoomManager.setZoom(1.0) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_96 $$ businessGoalPanel.setLayoutData(new GridData(GridData.FILL_HORIZONTAL)) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_97 $$ businessGoalPanel.setLayout(new GridLayout(4, false)) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_99 $$ lab.setText("Process goal:") [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_101 $$ bpgIRI.setLayoutData(new GridData(GridData.FILL_HORIZONTAL)) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_103 $$ selectBpgButton.setText("Select") [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_104 $$ selectBpgButton.setEnabled(false) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_105 $$ selectBpgButton.addSelectionListener(new SelectionAdapter() [CD]
Line_105 $$ selectBpgButton.addSelectionListener(new SelectionAdapter() --> Line_107 $$ doSelectProcessGoal() [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_111 $$ clearBpgButton.setText("Clear") [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_112 $$ clearBpgButton.setEnabled(false) [CD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_113 $$ clearBpgButton.addSelectionListener(new SelectionAdapter() [CD]
Line_113 $$ clearBpgButton.addSelectionListener(new SelectionAdapter() --> Line_115 $$ IStructuredSelection sel = (IStructuredSelection) fragmentsTable.getSelection() [CD]
Line_113 $$ clearBpgButton.addSelectionListener(new SelectionAdapter() --> Line_116 $$ if (sel.isEmpty() || false == sel.getFirstElement() instanceof ProcessFragment) [CD]
Line_115 $$ IStructuredSelection sel = (IStructuredSelection) fragmentsTable.getSelection() --> Line_116 $$ if (sel.isEmpty() || false == sel.getFirstElement() instanceof ProcessFragment) [FD]
Line_116 $$ if (sel.isEmpty() || false == sel.getFirstElement() instanceof ProcessFragment) --> Line_117 $$ return [CD]
Line_113 $$ clearBpgButton.addSelectionListener(new SelectionAdapter() --> Line_119 $$ ((ProcessFragment) sel.getFirstElement()).setBusinessProcessGoal(null) [CD]
Line_115 $$ IStructuredSelection sel = (IStructuredSelection) fragmentsTable.getSelection() --> Line_119 $$ ((ProcessFragment) sel.getFirstElement()).setBusinessProcessGoal(null) [FD]
Line_113 $$ clearBpgButton.addSelectionListener(new SelectionAdapter() --> Line_120 $$ updatePreviewPanel(sel) [CD]
Line_115 $$ IStructuredSelection sel = (IStructuredSelection) fragmentsTable.getSelection() --> Line_120 $$ updatePreviewPanel(sel) [FD]
Line_2 $$ private void constructDialogContent(Composite parent) --> Line_123 $$ splitter.setWeights(new int[] [CD]
Line_3 $$ SashForm splitter = new SashForm(parent, SWT.HORIZONTAL) --> Line_123 $$ splitter.setWeights(new int[] [FD]
