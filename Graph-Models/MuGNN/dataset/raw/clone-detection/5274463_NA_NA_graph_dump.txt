Line_2 $$ protected void doRequest(HttpServletRequest request, HttpServletResponse response, boolean inGet) throws ServletException, IOException --> Line_3 $$ response.setHeader("Server", WebConsoleServlet.SERVER_STRING) [CD]
Line_2 $$ protected void doRequest(HttpServletRequest request, HttpServletResponse response, boolean inGet) throws ServletException, IOException --> Line_3 $$ response.setHeader("Server", WebConsoleServlet.SERVER_STRING) [FD]
Line_2 $$ protected void doRequest(HttpServletRequest request, HttpServletResponse response, boolean inGet) throws ServletException, IOException --> Line_5 $$ String requestedFilename = request.getRequestURI().substring(1) [FD]
Line_6 $$ URL url = new URL(getJarFileName() + "/") --> Line_7 $$ JarURLConnection jarConnection = (JarURLConnection) (url.openConnection()) [FD]
Line_7 $$ JarURLConnection jarConnection = (JarURLConnection) (url.openConnection()) --> Line_8 $$ JarFile jarFile = jarConnection.getJarFile() [FD]
Line_8 $$ JarFile jarFile = jarConnection.getJarFile() --> Line_11 $$ zipEntry = negotiateImageFile(jarFile, requestedFilename, isIE6OrEarlier(request.getHeader("User-Agent"))) [FD]
Line_5 $$ String requestedFilename = request.getRequestURI().substring(1) --> Line_11 $$ zipEntry = negotiateImageFile(jarFile, requestedFilename, isIE6OrEarlier(request.getHeader("User-Agent"))) [FD]
Line_2 $$ protected void doRequest(HttpServletRequest request, HttpServletResponse response, boolean inGet) throws ServletException, IOException --> Line_11 $$ zipEntry = negotiateImageFile(jarFile, requestedFilename, isIE6OrEarlier(request.getHeader("User-Agent"))) [FD]
Line_8 $$ JarFile jarFile = jarConnection.getJarFile() --> Line_13 $$ zipEntry = jarFile.getEntry(requestedFilename) [FD]
Line_5 $$ String requestedFilename = request.getRequestURI().substring(1) --> Line_13 $$ zipEntry = jarFile.getEntry(requestedFilename) [FD]
Line_9 $$ String negotiatedFilename = null --> Line_15 $$ negotiatedFilename = zipEntry.getName() [FD]
Line_2 $$ protected void doRequest(HttpServletRequest request, HttpServletResponse response, boolean inGet) throws ServletException, IOException --> Line_18 $$ handleFileNotFound(inGet, request, response) [FD]
Line_2 $$ protected void doRequest(HttpServletRequest request, HttpServletResponse response, boolean inGet) throws ServletException, IOException --> Line_22 $$ response.setContentLength(fileSize) [FD]
Line_9 $$ String negotiatedFilename = null --> Line_23 $$ if (negotiatedFilename != null) [FD]
Line_23 $$ if (negotiatedFilename != null) --> Line_24 $$ response.setContentType(getContentType(negotiatedFilename)) [CD]
Line_2 $$ protected void doRequest(HttpServletRequest request, HttpServletResponse response, boolean inGet) throws ServletException, IOException --> Line_24 $$ response.setContentType(getContentType(negotiatedFilename)) [FD]
Line_9 $$ String negotiatedFilename = null --> Line_24 $$ response.setContentType(getContentType(negotiatedFilename)) [FD]
Line_23 $$ if (negotiatedFilename != null) --> Line_26 $$ response.setContentType(getContentType(request.getRequestURI())) [CD]
Line_2 $$ protected void doRequest(HttpServletRequest request, HttpServletResponse response, boolean inGet) throws ServletException, IOException --> Line_26 $$ response.setContentType(getContentType(request.getRequestURI())) [FD]
Line_8 $$ JarFile jarFile = jarConnection.getJarFile() --> Line_28 $$ InputStream in = jarFile.getInputStream(zipEntry) [FD]
Line_29 $$ BufferedInputStream bufferedInputStream = new BufferedInputStream(in) --> Line_31 $$ int bytesRead = bufferedInputStream.read(file) [FD]
Line_30 $$ byte[] file = new byte[fileSize] --> Line_31 $$ int bytesRead = bufferedInputStream.read(file) [FD]
Line_29 $$ BufferedInputStream bufferedInputStream = new BufferedInputStream(in) --> Line_32 $$ bufferedInputStream.close() [FD]
Line_33 $$ if (bytesRead == fileSize && cachingEnabled) --> Line_34 $$ SimpleDateFormat formatter = new SimpleDateFormat("EEE, d MMM yyyy HH:mm:ss z") [CD]
Line_33 $$ if (bytesRead == fileSize && cachingEnabled) --> Line_35 $$ java.util.Date today = new java.util.Date() [CD]
Line_33 $$ if (bytesRead == fileSize && cachingEnabled) --> Line_36 $$ String date = formatter.format(GenericUtils.addOrSubstractDaysFromDate(today, 365)) [CD]
Line_34 $$ SimpleDateFormat formatter = new SimpleDateFormat("EEE, d MMM yyyy HH:mm:ss z") --> Line_36 $$ String date = formatter.format(GenericUtils.addOrSubstractDaysFromDate(today, 365)) [FD]
Line_35 $$ java.util.Date today = new java.util.Date() --> Line_36 $$ String date = formatter.format(GenericUtils.addOrSubstractDaysFromDate(today, 365)) [FD]
Line_33 $$ if (bytesRead == fileSize && cachingEnabled) --> Line_37 $$ response.setHeader("Expires", date) [CD]
Line_2 $$ protected void doRequest(HttpServletRequest request, HttpServletResponse response, boolean inGet) throws ServletException, IOException --> Line_37 $$ response.setHeader("Expires", date) [FD]
Line_36 $$ String date = formatter.format(GenericUtils.addOrSubstractDaysFromDate(today, 365)) --> Line_37 $$ response.setHeader("Expires", date) [FD]
Line_2 $$ protected void doRequest(HttpServletRequest request, HttpServletResponse response, boolean inGet) throws ServletException, IOException --> Line_39 $$ OutputStream outputStream = response.getOutputStream() [FD]
Line_39 $$ OutputStream outputStream = response.getOutputStream() --> Line_40 $$ outputStream.write(file) [FD]
Line_30 $$ byte[] file = new byte[fileSize] --> Line_40 $$ outputStream.write(file) [FD]
Line_2 $$ protected void doRequest(HttpServletRequest request, HttpServletResponse response, boolean inGet) throws ServletException, IOException --> Line_42 $$ handleFileNotFound(inGet, request, response) [FD]
