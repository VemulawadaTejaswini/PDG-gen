Line_2 $$ public OperandToken evaluate(Token[] operands, GlobalValues globals) --> Line_3 $$ String s = "" [CD]
Line_2 $$ public OperandToken evaluate(Token[] operands, GlobalValues globals) --> Line_4 $$ String lineFile = "" [CD]
Line_2 $$ public OperandToken evaluate(Token[] operands, GlobalValues globals) --> Line_6 $$ throwMathLibException("urlread: number of arguments < 1") [CD]
Line_2 $$ public OperandToken evaluate(Token[] operands, GlobalValues globals) --> Line_6 $$ throwMathLibException("urlread: number of arguments < 1") [FD]
Line_2 $$ public OperandToken evaluate(Token[] operands, GlobalValues globals) --> Line_7 $$ throwMathLibException("urlread: argument must be String") [CD]
Line_2 $$ public OperandToken evaluate(Token[] operands, GlobalValues globals) --> Line_8 $$ String urlString = ((CharToken) operands[0]).toString() [CD]
Line_2 $$ public OperandToken evaluate(Token[] operands, GlobalValues globals) --> Line_9 $$ URL url = null [CD]
Line_9 $$ URL url = null --> Line_11 $$ url = new URL(urlString) [FD]
Line_9 $$ URL url = null --> Line_16 $$ BufferedReader inReader = new BufferedReader(new InputStreamReader(url.openStream())) [FD]
Line_11 $$ url = new URL(urlString) --> Line_16 $$ BufferedReader inReader = new BufferedReader(new InputStreamReader(url.openStream())) [FD]
Line_4 $$ String lineFile = "" --> Line_17 $$ while ((lineFile = inReader.readLine()) != null) [FD]
Line_16 $$ BufferedReader inReader = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_17 $$ while ((lineFile = inReader.readLine()) != null) [FD]
Line_17 $$ while ((lineFile = inReader.readLine()) != null) --> Line_18 $$ s += lineFile + "\n" [CD]
Line_17 $$ while ((lineFile = inReader.readLine()) != null) --> Line_18 $$ s += lineFile + "\n" [FD]
Line_3 $$ String s = "" --> Line_18 $$ s += lineFile + "\n" [FD]
Line_4 $$ String lineFile = "" --> Line_18 $$ s += lineFile + "\n" [FD]
Line_16 $$ BufferedReader inReader = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_20 $$ inReader.close() [FD]
Line_2 $$ public OperandToken evaluate(Token[] operands, GlobalValues globals) --> Line_24 $$ return new CharToken(s) [CD]
