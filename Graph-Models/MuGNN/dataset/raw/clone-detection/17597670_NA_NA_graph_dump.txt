Line_2 $$ public boolean backupLuceneIndex(int indexLocation, int backupLocation) --> Line_3 $$ boolean result = false [CD]
Line_2 $$ public boolean backupLuceneIndex(int indexLocation, int backupLocation) --> Line_6 $$ String indexPath = this.getIndexFolderPath(indexLocation) [FD]
Line_2 $$ public boolean backupLuceneIndex(int indexLocation, int backupLocation) --> Line_7 $$ String backupPath = this.getIndexFolderPath(backupLocation) [FD]
Line_8 $$ File inDir = new File(indexPath) --> Line_10 $$ if (inDir.exists() && inDir.isDirectory()) [FD]
Line_10 $$ if (inDir.exists() && inDir.isDirectory()) --> Line_11 $$ File filesList[] = inDir.listFiles() [CD]
Line_8 $$ File inDir = new File(indexPath) --> Line_11 $$ File filesList[] = inDir.listFiles() [FD]
Line_10 $$ if (inDir.exists() && inDir.isDirectory()) --> Line_12 $$ if (filesList != null) [CD]
Line_12 $$ if (filesList != null) --> Line_13 $$ File parDirBackup = new File(backupPath) [CD]
Line_12 $$ if (filesList != null) --> Line_14 $$ if (!parDirBackup.exists()) [CD]
Line_13 $$ File parDirBackup = new File(backupPath) --> Line_14 $$ if (!parDirBackup.exists()) [FD]
Line_12 $$ if (filesList != null) --> Line_15 $$ String date = this.getDate() [CD]
Line_12 $$ if (filesList != null) --> Line_16 $$ backupPath += "/" + date [CD]
Line_7 $$ String backupPath = this.getIndexFolderPath(backupLocation) --> Line_16 $$ backupPath += "/" + date [FD]
Line_15 $$ String date = this.getDate() --> Line_16 $$ backupPath += "/" + date [FD]
Line_12 $$ if (filesList != null) --> Line_17 $$ File dirBackup = new File(backupPath) [CD]
Line_12 $$ if (filesList != null) --> Line_18 $$ if (!dirBackup.exists()) [CD]
Line_17 $$ File dirBackup = new File(backupPath) --> Line_18 $$ if (!dirBackup.exists()) [FD]
Line_18 $$ if (!dirBackup.exists()) --> Line_19 $$ File files[] = dirBackup.listFiles() [CD]
Line_17 $$ File dirBackup = new File(backupPath) --> Line_19 $$ File files[] = dirBackup.listFiles() [FD]
Line_18 $$ if (!dirBackup.exists()) --> Line_20 $$ if (files != null) [CD]
Line_20 $$ if (files != null) --> Line_21 $$ for (int i = 0; i < files.length; i++) [CD]
Line_21 $$ for (int i = 0; i < files.length; i++) --> Line_22 $$ if (files[i] != null) [CD]
Line_22 $$ if (files[i] != null) --> Line_23 $$ files[i].delete() [CD]
Line_18 $$ if (!dirBackup.exists()) --> Line_27 $$ dirBackup.delete() [CD]
Line_17 $$ File dirBackup = new File(backupPath) --> Line_27 $$ dirBackup.delete() [FD]
Line_18 $$ if (!dirBackup.exists()) --> Line_28 $$ dirBackup.mkdir() [CD]
Line_17 $$ File dirBackup = new File(backupPath) --> Line_28 $$ dirBackup.mkdir() [FD]
Line_12 $$ if (filesList != null) --> Line_30 $$ for (int i = 0; i < filesList.length; i++) [CD]
Line_21 $$ for (int i = 0; i < files.length; i++) --> Line_30 $$ for (int i = 0; i < filesList.length; i++) [FD]
Line_30 $$ for (int i = 0; i < filesList.length; i++) --> Line_31 $$ if (filesList[i].isFile()) [CD]
Line_33 $$ File destFile = new File(backupPath + "/" + filesList[i].getName()) --> Line_34 $$ destFile.createNewFile() [FD]
Line_35 $$ FileInputStream in = new FileInputStream(filesList[i]) --> Line_37 $$ FileChannel fcIn = in.getChannel() [FD]
Line_36 $$ FileOutputStream out = new FileOutputStream(destFile) --> Line_38 $$ FileChannel fcOut = out.getChannel() [FD]
Line_37 $$ FileChannel fcIn = in.getChannel() --> Line_39 $$ fcIn.transferTo(0, fcIn.size(), fcOut) [FD]
Line_38 $$ FileChannel fcOut = out.getChannel() --> Line_39 $$ fcIn.transferTo(0, fcIn.size(), fcOut) [FD]
Line_9 $$ boolean flag = true --> Line_42 $$ flag = false [FD]
Line_42 $$ flag = false --> Line_45 $$ flag = false [FD]
Line_9 $$ boolean flag = true --> Line_45 $$ flag = false [FD]
Line_53 $$ if (flag) --> Line_54 $$ result = true [CD]
Line_3 $$ boolean result = false --> Line_54 $$ result = true [FD]
Line_2 $$ public boolean backupLuceneIndex(int indexLocation, int backupLocation) --> Line_60 $$ return result [CD]
