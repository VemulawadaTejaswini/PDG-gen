Line_2 $$ public static byte[] hashFile(File file) --> Line_3 $$ long size = file.length() [CD]
Line_2 $$ public static byte[] hashFile(File file) --> Line_3 $$ long size = file.length() [FD]
Line_2 $$ public static byte[] hashFile(File file) --> Line_4 $$ long jump = (long) (size / (float) CHUNK_SIZE) [CD]
Line_2 $$ public static byte[] hashFile(File file) --> Line_5 $$ MessageDigest digest [CD]
Line_2 $$ public static byte[] hashFile(File file) --> Line_6 $$ FileInputStream stream [CD]
Line_6 $$ FileInputStream stream --> Line_8 $$ stream = new FileInputStream(file) [FD]
Line_5 $$ MessageDigest digest --> Line_9 $$ digest = MessageDigest.getInstance("SHA-256") [FD]
Line_3 $$ long size = file.length() --> Line_10 $$ if (size < CHUNK_SIZE * 4) [FD]
Line_10 $$ if (size < CHUNK_SIZE * 4) --> Line_11 $$ readAndUpdate(size, stream, digest) [CD]
Line_3 $$ long size = file.length() --> Line_11 $$ readAndUpdate(size, stream, digest) [FD]
Line_6 $$ FileInputStream stream --> Line_11 $$ readAndUpdate(size, stream, digest) [FD]
Line_8 $$ stream = new FileInputStream(file) --> Line_11 $$ readAndUpdate(size, stream, digest) [FD]
Line_5 $$ MessageDigest digest --> Line_11 $$ readAndUpdate(size, stream, digest) [FD]
Line_9 $$ digest = MessageDigest.getInstance("SHA-256") --> Line_11 $$ readAndUpdate(size, stream, digest) [FD]
Line_10 $$ if (size < CHUNK_SIZE * 4) --> Line_13 $$ if (stream.skip(jump) != jump) [CD]
Line_4 $$ long jump = (long) (size / (float) CHUNK_SIZE) --> Line_13 $$ if (stream.skip(jump) != jump) [FD]
Line_6 $$ FileInputStream stream --> Line_13 $$ if (stream.skip(jump) != jump) [FD]
Line_8 $$ stream = new FileInputStream(file) --> Line_13 $$ if (stream.skip(jump) != jump) [FD]
Line_10 $$ if (size < CHUNK_SIZE * 4) --> Line_14 $$ readAndUpdate(CHUNK_SIZE, stream, digest) [CD]
Line_6 $$ FileInputStream stream --> Line_14 $$ readAndUpdate(CHUNK_SIZE, stream, digest) [FD]
Line_8 $$ stream = new FileInputStream(file) --> Line_14 $$ readAndUpdate(CHUNK_SIZE, stream, digest) [FD]
Line_5 $$ MessageDigest digest --> Line_14 $$ readAndUpdate(CHUNK_SIZE, stream, digest) [FD]
Line_9 $$ digest = MessageDigest.getInstance("SHA-256") --> Line_14 $$ readAndUpdate(CHUNK_SIZE, stream, digest) [FD]
Line_10 $$ if (size < CHUNK_SIZE * 4) --> Line_15 $$ if (stream.skip(jump - CHUNK_SIZE) != jump - CHUNK_SIZE) [CD]
Line_6 $$ FileInputStream stream --> Line_15 $$ if (stream.skip(jump - CHUNK_SIZE) != jump - CHUNK_SIZE) [FD]
Line_8 $$ stream = new FileInputStream(file) --> Line_15 $$ if (stream.skip(jump - CHUNK_SIZE) != jump - CHUNK_SIZE) [FD]
Line_10 $$ if (size < CHUNK_SIZE * 4) --> Line_16 $$ readAndUpdate(CHUNK_SIZE, stream, digest) [CD]
Line_6 $$ FileInputStream stream --> Line_16 $$ readAndUpdate(CHUNK_SIZE, stream, digest) [FD]
Line_8 $$ stream = new FileInputStream(file) --> Line_16 $$ readAndUpdate(CHUNK_SIZE, stream, digest) [FD]
Line_5 $$ MessageDigest digest --> Line_16 $$ readAndUpdate(CHUNK_SIZE, stream, digest) [FD]
Line_9 $$ digest = MessageDigest.getInstance("SHA-256") --> Line_16 $$ readAndUpdate(CHUNK_SIZE, stream, digest) [FD]
Line_10 $$ if (size < CHUNK_SIZE * 4) --> Line_17 $$ if (stream.skip(jump - CHUNK_SIZE) != jump - CHUNK_SIZE) [CD]
Line_6 $$ FileInputStream stream --> Line_17 $$ if (stream.skip(jump - CHUNK_SIZE) != jump - CHUNK_SIZE) [FD]
Line_8 $$ stream = new FileInputStream(file) --> Line_17 $$ if (stream.skip(jump - CHUNK_SIZE) != jump - CHUNK_SIZE) [FD]
Line_10 $$ if (size < CHUNK_SIZE * 4) --> Line_18 $$ readAndUpdate(CHUNK_SIZE, stream, digest) [CD]
Line_6 $$ FileInputStream stream --> Line_18 $$ readAndUpdate(CHUNK_SIZE, stream, digest) [FD]
Line_8 $$ stream = new FileInputStream(file) --> Line_18 $$ readAndUpdate(CHUNK_SIZE, stream, digest) [FD]
Line_5 $$ MessageDigest digest --> Line_18 $$ readAndUpdate(CHUNK_SIZE, stream, digest) [FD]
Line_9 $$ digest = MessageDigest.getInstance("SHA-256") --> Line_18 $$ readAndUpdate(CHUNK_SIZE, stream, digest) [FD]
Line_10 $$ if (size < CHUNK_SIZE * 4) --> Line_19 $$ digest.update(Long.toString(size).getBytes()) [CD]
Line_5 $$ MessageDigest digest --> Line_19 $$ digest.update(Long.toString(size).getBytes()) [FD]
Line_9 $$ digest = MessageDigest.getInstance("SHA-256") --> Line_19 $$ digest.update(Long.toString(size).getBytes()) [FD]
Line_3 $$ long size = file.length() --> Line_19 $$ digest.update(Long.toString(size).getBytes()) [FD]
Line_5 $$ MessageDigest digest --> Line_21 $$ return digest.digest() [FD]
Line_9 $$ digest = MessageDigest.getInstance("SHA-256") --> Line_21 $$ return digest.digest() [FD]
