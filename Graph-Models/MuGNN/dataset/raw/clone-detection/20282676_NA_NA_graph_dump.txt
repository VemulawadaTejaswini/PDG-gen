Line_2 $$ public boolean processFtp(String serverIp, int port, String user, String password, String synchrnPath, String filePath, File[] uploadFile) throws Exception --> Line_3 $$ boolean upload = false [CD]
Line_5 $$ FTPClient ftpClient = new FTPClient() --> Line_6 $$ ftpClient.setControlEncoding("euc-kr") [FD]
Line_2 $$ public boolean processFtp(String serverIp, int port, String user, String password, String synchrnPath, String filePath, File[] uploadFile) throws Exception --> Line_7 $$ if (!EgovWebUtil.isIPAddress(serverIp)) [FD]
Line_2 $$ public boolean processFtp(String serverIp, int port, String user, String password, String synchrnPath, String filePath, File[] uploadFile) throws Exception --> Line_10 $$ InetAddress host = InetAddress.getByName(serverIp) [FD]
Line_5 $$ FTPClient ftpClient = new FTPClient() --> Line_11 $$ ftpClient.connect(host, port) [FD]
Line_10 $$ InetAddress host = InetAddress.getByName(serverIp) --> Line_11 $$ ftpClient.connect(host, port) [FD]
Line_2 $$ public boolean processFtp(String serverIp, int port, String user, String password, String synchrnPath, String filePath, File[] uploadFile) throws Exception --> Line_11 $$ ftpClient.connect(host, port) [FD]
Line_5 $$ FTPClient ftpClient = new FTPClient() --> Line_12 $$ if (!ftpClient.login(user, password)) [FD]
Line_2 $$ public boolean processFtp(String serverIp, int port, String user, String password, String synchrnPath, String filePath, File[] uploadFile) throws Exception --> Line_12 $$ if (!ftpClient.login(user, password)) [FD]
Line_2 $$ public boolean processFtp(String serverIp, int port, String user, String password, String synchrnPath, String filePath, File[] uploadFile) throws Exception --> Line_13 $$ ftpClient.changeWorkingDirectory(synchrnPath) [FD]
Line_5 $$ FTPClient ftpClient = new FTPClient() --> Line_13 $$ ftpClient.changeWorkingDirectory(synchrnPath) [FD]
Line_5 $$ FTPClient ftpClient = new FTPClient() --> Line_14 $$ FTPFile[] fTPFile = ftpClient.listFiles(synchrnPath) [FD]
Line_2 $$ public boolean processFtp(String serverIp, int port, String user, String password, String synchrnPath, String filePath, File[] uploadFile) throws Exception --> Line_14 $$ FTPFile[] fTPFile = ftpClient.listFiles(synchrnPath) [FD]
Line_17 $$ for (int i = 0; i < uploadFile.length; i++) --> Line_18 $$ if (uploadFile[i].isFile()) [CD]
Line_18 $$ if (uploadFile[i].isFile()) --> Line_19 $$ if (!isExist(fTPFile, uploadFile[i])) [CD]
Line_14 $$ FTPFile[] fTPFile = ftpClient.listFiles(synchrnPath) --> Line_19 $$ if (!isExist(fTPFile, uploadFile[i])) [FD]
Line_19 $$ if (!isExist(fTPFile, uploadFile[i])) --> Line_20 $$ fis = new FileInputStream(uploadFile[i]) [CD]
Line_15 $$ FileInputStream fis = null --> Line_20 $$ fis = new FileInputStream(uploadFile[i]) [FD]
Line_19 $$ if (!isExist(fTPFile, uploadFile[i])) --> Line_21 $$ ftpClient.storeFile(synchrnPath + uploadFile[i].getName(), fis) [CD]
Line_5 $$ FTPClient ftpClient = new FTPClient() --> Line_21 $$ ftpClient.storeFile(synchrnPath + uploadFile[i].getName(), fis) [FD]
Line_20 $$ fis = new FileInputStream(uploadFile[i]) --> Line_21 $$ ftpClient.storeFile(synchrnPath + uploadFile[i].getName(), fis) [FD]
Line_15 $$ FileInputStream fis = null --> Line_21 $$ ftpClient.storeFile(synchrnPath + uploadFile[i].getName(), fis) [FD]
Line_18 $$ if (uploadFile[i].isFile()) --> Line_23 $$ if (fis != null) [CD]
Line_20 $$ fis = new FileInputStream(uploadFile[i]) --> Line_23 $$ if (fis != null) [FD]
Line_15 $$ FileInputStream fis = null --> Line_23 $$ if (fis != null) [FD]
Line_23 $$ if (fis != null) --> Line_24 $$ fis.close() [CD]
Line_20 $$ fis = new FileInputStream(uploadFile[i]) --> Line_24 $$ fis.close() [FD]
Line_15 $$ FileInputStream fis = null --> Line_24 $$ fis.close() [FD]
Line_14 $$ FTPFile[] fTPFile = ftpClient.listFiles(synchrnPath) --> Line_28 $$ fTPFile = ftpClient.listFiles(synchrnPath) [FD]
Line_5 $$ FTPClient ftpClient = new FTPClient() --> Line_28 $$ fTPFile = ftpClient.listFiles(synchrnPath) [FD]
Line_2 $$ public boolean processFtp(String serverIp, int port, String user, String password, String synchrnPath, String filePath, File[] uploadFile) throws Exception --> Line_28 $$ fTPFile = ftpClient.listFiles(synchrnPath) [FD]
Line_5 $$ FTPClient ftpClient = new FTPClient() --> Line_29 $$ deleteFtpFile(ftpClient, fTPFile, uploadFile) [FD]
Line_14 $$ FTPFile[] fTPFile = ftpClient.listFiles(synchrnPath) --> Line_29 $$ deleteFtpFile(ftpClient, fTPFile, uploadFile) [FD]
Line_28 $$ fTPFile = ftpClient.listFiles(synchrnPath) --> Line_29 $$ deleteFtpFile(ftpClient, fTPFile, uploadFile) [FD]
Line_2 $$ public boolean processFtp(String serverIp, int port, String user, String password, String synchrnPath, String filePath, File[] uploadFile) throws Exception --> Line_29 $$ deleteFtpFile(ftpClient, fTPFile, uploadFile) [FD]
Line_3 $$ boolean upload = false --> Line_30 $$ upload = true [FD]
Line_20 $$ fis = new FileInputStream(uploadFile[i]) --> Line_34 $$ if (fis != null) [FD]
Line_15 $$ FileInputStream fis = null --> Line_34 $$ if (fis != null) [FD]
Line_20 $$ fis = new FileInputStream(uploadFile[i]) --> Line_35 $$ fis.close() [FD]
Line_15 $$ FileInputStream fis = null --> Line_35 $$ fis.close() [FD]
Line_5 $$ FTPClient ftpClient = new FTPClient() --> Line_40 $$ ftpClient.logout() [FD]
Line_3 $$ boolean upload = false --> Line_43 $$ upload = false [FD]
Line_30 $$ upload = true --> Line_43 $$ upload = false [FD]
Line_2 $$ public boolean processFtp(String serverIp, int port, String user, String password, String synchrnPath, String filePath, File[] uploadFile) throws Exception --> Line_45 $$ return upload [CD]
