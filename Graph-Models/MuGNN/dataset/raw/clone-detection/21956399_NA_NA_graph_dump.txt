Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_3 $$ resp.setContentType("application/json") [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_3 $$ resp.setContentType("application/json") [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_4 $$ resp.setCharacterEncoding("utf-8") [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_4 $$ resp.setCharacterEncoding("utf-8") [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_5 $$ String format = req.getParameter("format") [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_5 $$ String format = req.getParameter("format") [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_6 $$ EntityManager em = EMF.get().createEntityManager() [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_7 $$ String uname = (req.getParameter("uname") == null) ? "" : req.getParameter("uname") [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_7 $$ String uname = (req.getParameter("uname") == null) ? "" : req.getParameter("uname") [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_8 $$ String passwd = (req.getParameter("passwd") == null) ? "" : req.getParameter("passwd") [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_8 $$ String passwd = (req.getParameter("passwd") == null) ? "" : req.getParameter("passwd") [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_9 $$ String name = (req.getParameter("name") == null) ? "" : req.getParameter("name") [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_9 $$ String name = (req.getParameter("name") == null) ? "" : req.getParameter("name") [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_10 $$ String email = (req.getParameter("email") == null) ? "" : req.getParameter("email") [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_10 $$ String email = (req.getParameter("email") == null) ? "" : req.getParameter("email") [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_11 $$ if (uname == null || uname.equals("") || uname.length() < 4) [CD]
Line_7 $$ String uname = (req.getParameter("uname") == null) ? "" : req.getParameter("uname") --> Line_11 $$ if (uname == null || uname.equals("") || uname.length() < 4) [FD]
Line_11 $$ if (uname == null || uname.equals("") || uname.length() < 4) --> Line_12 $$ resp.getWriter().print(Error.unameTooShort(uname).toJSON(em)) [CD]
Line_5 $$ String format = req.getParameter("format") --> Line_12 $$ resp.getWriter().print(Error.unameTooShort(uname).toJSON(em)) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_12 $$ resp.getWriter().print(Error.unameTooShort(uname).toJSON(em)) [FD]
Line_6 $$ EntityManager em = EMF.get().createEntityManager() --> Line_12 $$ resp.getWriter().print(Error.unameTooShort(uname).toJSON(em)) [FD]
Line_7 $$ String uname = (req.getParameter("uname") == null) ? "" : req.getParameter("uname") --> Line_12 $$ resp.getWriter().print(Error.unameTooShort(uname).toJSON(em)) [FD]
Line_11 $$ if (uname == null || uname.equals("") || uname.length() < 4) --> Line_13 $$ resp.setStatus(HttpServletResponse.SC_BAD_REQUEST) [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_13 $$ resp.setStatus(HttpServletResponse.SC_BAD_REQUEST) [FD]
Line_11 $$ if (uname == null || uname.equals("") || uname.length() < 4) --> Line_14 $$ return [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_16 $$ if (User.fromUserName(em, uname) != null) [CD]
Line_6 $$ EntityManager em = EMF.get().createEntityManager() --> Line_16 $$ if (User.fromUserName(em, uname) != null) [FD]
Line_7 $$ String uname = (req.getParameter("uname") == null) ? "" : req.getParameter("uname") --> Line_16 $$ if (User.fromUserName(em, uname) != null) [FD]
Line_16 $$ if (User.fromUserName(em, uname) != null) --> Line_17 $$ resp.getWriter().print(Error.userExists(uname).toJSON(em)) [CD]
Line_5 $$ String format = req.getParameter("format") --> Line_17 $$ resp.getWriter().print(Error.userExists(uname).toJSON(em)) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_17 $$ resp.getWriter().print(Error.userExists(uname).toJSON(em)) [FD]
Line_6 $$ EntityManager em = EMF.get().createEntityManager() --> Line_17 $$ resp.getWriter().print(Error.userExists(uname).toJSON(em)) [FD]
Line_7 $$ String uname = (req.getParameter("uname") == null) ? "" : req.getParameter("uname") --> Line_17 $$ resp.getWriter().print(Error.userExists(uname).toJSON(em)) [FD]
Line_16 $$ if (User.fromUserName(em, uname) != null) --> Line_18 $$ resp.setStatus(HttpServletResponse.SC_CONFLICT) [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_18 $$ resp.setStatus(HttpServletResponse.SC_CONFLICT) [FD]
Line_16 $$ if (User.fromUserName(em, uname) != null) --> Line_19 $$ em.close() [CD]
Line_6 $$ EntityManager em = EMF.get().createEntityManager() --> Line_19 $$ em.close() [FD]
Line_16 $$ if (User.fromUserName(em, uname) != null) --> Line_20 $$ return [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_22 $$ if (passwd.equals("") || passwd.length() < 6) [CD]
Line_8 $$ String passwd = (req.getParameter("passwd") == null) ? "" : req.getParameter("passwd") --> Line_22 $$ if (passwd.equals("") || passwd.length() < 6) [FD]
Line_22 $$ if (passwd.equals("") || passwd.length() < 6) --> Line_23 $$ resp.setStatus(HttpServletResponse.SC_BAD_REQUEST) [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_23 $$ resp.setStatus(HttpServletResponse.SC_BAD_REQUEST) [FD]
Line_22 $$ if (passwd.equals("") || passwd.length() < 6) --> Line_24 $$ resp.getWriter().print(Error.passwdTooShort(uname).toJSON(em)) [CD]
Line_5 $$ String format = req.getParameter("format") --> Line_24 $$ resp.getWriter().print(Error.passwdTooShort(uname).toJSON(em)) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_24 $$ resp.getWriter().print(Error.passwdTooShort(uname).toJSON(em)) [FD]
Line_6 $$ EntityManager em = EMF.get().createEntityManager() --> Line_24 $$ resp.getWriter().print(Error.passwdTooShort(uname).toJSON(em)) [FD]
Line_7 $$ String uname = (req.getParameter("uname") == null) ? "" : req.getParameter("uname") --> Line_24 $$ resp.getWriter().print(Error.passwdTooShort(uname).toJSON(em)) [FD]
Line_22 $$ if (passwd.equals("") || passwd.length() < 6) --> Line_25 $$ em.close() [CD]
Line_6 $$ EntityManager em = EMF.get().createEntityManager() --> Line_25 $$ em.close() [FD]
Line_22 $$ if (passwd.equals("") || passwd.length() < 6) --> Line_26 $$ return [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_28 $$ User u = new User() [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_29 $$ u.setUsername(uname) [CD]
Line_28 $$ User u = new User() --> Line_29 $$ u.setUsername(uname) [FD]
Line_7 $$ String uname = (req.getParameter("uname") == null) ? "" : req.getParameter("uname") --> Line_29 $$ u.setUsername(uname) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_30 $$ u.setPasswd(passwd) [CD]
Line_28 $$ User u = new User() --> Line_30 $$ u.setPasswd(passwd) [FD]
Line_8 $$ String passwd = (req.getParameter("passwd") == null) ? "" : req.getParameter("passwd") --> Line_30 $$ u.setPasswd(passwd) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_31 $$ u.setName(name) [CD]
Line_28 $$ User u = new User() --> Line_31 $$ u.setName(name) [FD]
Line_9 $$ String name = (req.getParameter("name") == null) ? "" : req.getParameter("name") --> Line_31 $$ u.setName(name) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_32 $$ u.setEmail(email) [CD]
Line_28 $$ User u = new User() --> Line_32 $$ u.setEmail(email) [FD]
Line_10 $$ String email = (req.getParameter("email") == null) ? "" : req.getParameter("email") --> Line_32 $$ u.setEmail(email) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_33 $$ u.setPaid(false) [CD]
Line_28 $$ User u = new User() --> Line_33 $$ u.setPaid(false) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_34 $$ StringBuffer apikey = new StringBuffer() [CD]
Line_36 $$ MessageDigest algorithm = MessageDigest.getInstance("MD5") --> Line_37 $$ algorithm.reset() [FD]
Line_36 $$ MessageDigest algorithm = MessageDigest.getInstance("MD5") --> Line_39 $$ algorithm.update(api.getBytes()) [FD]
Line_38 $$ String api = System.nanoTime() + "" + System.identityHashCode(this) + "" + uname --> Line_39 $$ algorithm.update(api.getBytes()) [FD]
Line_36 $$ MessageDigest algorithm = MessageDigest.getInstance("MD5") --> Line_40 $$ byte[] digest = algorithm.digest() [FD]
Line_41 $$ for (int i = 0; i < digest.length; i++) --> Line_42 $$ apikey.append(Integer.toHexString(0xFF & digest[i])) [CD]
Line_34 $$ StringBuffer apikey = new StringBuffer() --> Line_42 $$ apikey.append(Integer.toHexString(0xFF & digest[i])) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_45 $$ resp.setStatus(500) [FD]
Line_5 $$ String format = req.getParameter("format") --> Line_46 $$ resp.getWriter().print(Error.unknownError().toJSON(em)) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_46 $$ resp.getWriter().print(Error.unknownError().toJSON(em)) [FD]
Line_6 $$ EntityManager em = EMF.get().createEntityManager() --> Line_46 $$ resp.getWriter().print(Error.unknownError().toJSON(em)) [FD]
Line_6 $$ EntityManager em = EMF.get().createEntityManager() --> Line_48 $$ em.close() [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_51 $$ u.setApiKey(apikey.toString()) [CD]
Line_28 $$ User u = new User() --> Line_51 $$ u.setApiKey(apikey.toString()) [FD]
Line_34 $$ StringBuffer apikey = new StringBuffer() --> Line_51 $$ u.setApiKey(apikey.toString()) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_52 $$ EntityTransaction tx = em.getTransaction() [CD]
Line_6 $$ EntityManager em = EMF.get().createEntityManager() --> Line_52 $$ EntityTransaction tx = em.getTransaction() [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_53 $$ tx.begin() [CD]
Line_52 $$ EntityTransaction tx = em.getTransaction() --> Line_53 $$ tx.begin() [FD]
Line_6 $$ EntityManager em = EMF.get().createEntityManager() --> Line_55 $$ em.persist(u) [FD]
Line_28 $$ User u = new User() --> Line_55 $$ em.persist(u) [FD]
Line_52 $$ EntityTransaction tx = em.getTransaction() --> Line_56 $$ tx.commit() [FD]
Line_52 $$ EntityTransaction tx = em.getTransaction() --> Line_59 $$ tx.rollback() [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_60 $$ resp.setStatus(500) [FD]
Line_5 $$ String format = req.getParameter("format") --> Line_61 $$ resp.getWriter().print(Error.unknownError().toJSON(em)) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_61 $$ resp.getWriter().print(Error.unknownError().toJSON(em)) [FD]
Line_6 $$ EntityManager em = EMF.get().createEntityManager() --> Line_61 $$ resp.getWriter().print(Error.unknownError().toJSON(em)) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_64 $$ log.info("User " + u.getName() + " was created successfully") [CD]
Line_28 $$ User u = new User() --> Line_64 $$ log.info("User " + u.getName() + " was created successfully") [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_65 $$ resp.setStatus(HttpServletResponse.SC_CREATED) [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_65 $$ resp.setStatus(HttpServletResponse.SC_CREATED) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_66 $$ if (format != null && format.equals("xml")) [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_66 $$ if (format != null && format.equals("xml")) [FD]
Line_5 $$ String format = req.getParameter("format") --> Line_66 $$ if (format != null && format.equals("xml")) [FD]
Line_28 $$ User u = new User() --> Line_66 $$ if (format != null && format.equals("xml")) [FD]
Line_6 $$ EntityManager em = EMF.get().createEntityManager() --> Line_66 $$ if (format != null && format.equals("xml")) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_67 $$ em.close() [CD]
Line_6 $$ EntityManager em = EMF.get().createEntityManager() --> Line_67 $$ em.close() [FD]
