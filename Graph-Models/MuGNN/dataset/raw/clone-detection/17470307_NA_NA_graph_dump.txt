Line_2 $$ private void createSoundbank(String testSoundbankFileName) throws Exception --> Line_3 $$ System.out.println("Create soundbank") [CD]
Line_2 $$ private void createSoundbank(String testSoundbankFileName) throws Exception --> Line_4 $$ File packageDir = new File("testsoundbank") [CD]
Line_2 $$ private void createSoundbank(String testSoundbankFileName) throws Exception --> Line_5 $$ if (packageDir.exists()) [CD]
Line_4 $$ File packageDir = new File("testsoundbank") --> Line_5 $$ if (packageDir.exists()) [FD]
Line_4 $$ File packageDir = new File("testsoundbank") --> Line_6 $$ for (File file : packageDir.listFiles()) assertTrue(file.delete()) [FD]
Line_5 $$ if (packageDir.exists()) --> Line_7 $$ assertTrue(packageDir.delete()) [CD]
Line_4 $$ File packageDir = new File("testsoundbank") --> Line_7 $$ assertTrue(packageDir.delete()) [FD]
Line_2 $$ private void createSoundbank(String testSoundbankFileName) throws Exception --> Line_9 $$ packageDir.mkdir() [CD]
Line_4 $$ File packageDir = new File("testsoundbank") --> Line_9 $$ packageDir.mkdir() [FD]
Line_2 $$ private void createSoundbank(String testSoundbankFileName) throws Exception --> Line_10 $$ String sourceFileName = "testsoundbank/TestSoundBank.java" [CD]
Line_2 $$ private void createSoundbank(String testSoundbankFileName) throws Exception --> Line_11 $$ File sourceFile = new File(sourceFileName) [CD]
Line_2 $$ private void createSoundbank(String testSoundbankFileName) throws Exception --> Line_12 $$ FileWriter writer = new FileWriter(sourceFile) [CD]
Line_2 $$ private void createSoundbank(String testSoundbankFileName) throws Exception --> Line_13 $$ writer.write("package testsoundbank;\n" + "public class TestSoundBank extends com.sun.media.sound.ModelAbstractOscillator [CD]
Line_12 $$ FileWriter writer = new FileWriter(sourceFile) --> Line_13 $$ writer.write("package testsoundbank;\n" + "public class TestSoundBank extends com.sun.media.sound.ModelAbstractOscillator [FD]
Line_2 $$ private void createSoundbank(String testSoundbankFileName) throws Exception --> Line_14 $$ writer.close() [CD]
Line_12 $$ FileWriter writer = new FileWriter(sourceFile) --> Line_14 $$ writer.close() [FD]
Line_2 $$ private void createSoundbank(String testSoundbankFileName) throws Exception --> Line_15 $$ JavaCompiler compiler = ToolProvider.getSystemJavaCompiler() [CD]
Line_2 $$ private void createSoundbank(String testSoundbankFileName) throws Exception --> Line_16 $$ StandardJavaFileManager fileManager = compiler.getStandardFileManager(null, null, null) [CD]
Line_15 $$ JavaCompiler compiler = ToolProvider.getSystemJavaCompiler() --> Line_16 $$ StandardJavaFileManager fileManager = compiler.getStandardFileManager(null, null, null) [FD]
Line_2 $$ private void createSoundbank(String testSoundbankFileName) throws Exception --> Line_17 $$ fileManager.setLocation(StandardLocation.CLASS_OUTPUT, Arrays.asList(new File("."))) [CD]
Line_16 $$ StandardJavaFileManager fileManager = compiler.getStandardFileManager(null, null, null) --> Line_17 $$ fileManager.setLocation(StandardLocation.CLASS_OUTPUT, Arrays.asList(new File("."))) [FD]
Line_2 $$ private void createSoundbank(String testSoundbankFileName) throws Exception --> Line_18 $$ compiler.getTask(null, fileManager, null, null, null, fileManager.getJavaFileObjectsFromFiles(Arrays.asList(sourceFile))).call() [CD]
Line_15 $$ JavaCompiler compiler = ToolProvider.getSystemJavaCompiler() --> Line_18 $$ compiler.getTask(null, fileManager, null, null, null, fileManager.getJavaFileObjectsFromFiles(Arrays.asList(sourceFile))).call() [FD]
Line_16 $$ StandardJavaFileManager fileManager = compiler.getStandardFileManager(null, null, null) --> Line_18 $$ compiler.getTask(null, fileManager, null, null, null, fileManager.getJavaFileObjectsFromFiles(Arrays.asList(sourceFile))).call() [FD]
Line_11 $$ File sourceFile = new File(sourceFileName) --> Line_18 $$ compiler.getTask(null, fileManager, null, null, null, fileManager.getJavaFileObjectsFromFiles(Arrays.asList(sourceFile))).call() [FD]
Line_2 $$ private void createSoundbank(String testSoundbankFileName) throws Exception --> Line_19 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(testSoundbankFileName)) [CD]
Line_2 $$ private void createSoundbank(String testSoundbankFileName) throws Exception --> Line_20 $$ ZipEntry ze = new ZipEntry("META-INF/services/javax.sound.midi.Soundbank") [CD]
Line_2 $$ private void createSoundbank(String testSoundbankFileName) throws Exception --> Line_21 $$ zos.putNextEntry(ze) [CD]
Line_19 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(testSoundbankFileName)) --> Line_21 $$ zos.putNextEntry(ze) [FD]
Line_2 $$ private void createSoundbank(String testSoundbankFileName) throws Exception --> Line_22 $$ zos.write("testsoundbank.TestSoundBank".getBytes()) [CD]
Line_19 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(testSoundbankFileName)) --> Line_22 $$ zos.write("testsoundbank.TestSoundBank".getBytes()) [FD]
Line_2 $$ private void createSoundbank(String testSoundbankFileName) throws Exception --> Line_23 $$ ze = new ZipEntry("testsoundbank/TestSoundBank.class") [CD]
Line_2 $$ private void createSoundbank(String testSoundbankFileName) throws Exception --> Line_24 $$ zos.putNextEntry(ze) [CD]
Line_19 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(testSoundbankFileName)) --> Line_24 $$ zos.putNextEntry(ze) [FD]
Line_2 $$ private void createSoundbank(String testSoundbankFileName) throws Exception --> Line_25 $$ FileInputStream fis = new FileInputStream("testsoundbank/TestSoundBank.class") [CD]
Line_2 $$ private void createSoundbank(String testSoundbankFileName) throws Exception --> Line_26 $$ int b = fis.read() [CD]
Line_2 $$ private void createSoundbank(String testSoundbankFileName) throws Exception --> Line_27 $$ while (b != -1) [CD]
Line_26 $$ int b = fis.read() --> Line_27 $$ while (b != -1) [FD]
Line_27 $$ while (b != -1) --> Line_28 $$ zos.write(b) [CD]
Line_19 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(testSoundbankFileName)) --> Line_28 $$ zos.write(b) [FD]
Line_26 $$ int b = fis.read() --> Line_28 $$ zos.write(b) [FD]
Line_27 $$ while (b != -1) --> Line_29 $$ b = fis.read() [CD]
Line_26 $$ int b = fis.read() --> Line_29 $$ b = fis.read() [FD]
Line_2 $$ private void createSoundbank(String testSoundbankFileName) throws Exception --> Line_31 $$ zos.close() [CD]
Line_19 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(testSoundbankFileName)) --> Line_31 $$ zos.close() [FD]
Line_29 $$ b = fis.read() --> Line_27 $$ while (b != -1) [FD]
Line_29 $$ b = fis.read() --> Line_28 $$ zos.write(b) [FD]
