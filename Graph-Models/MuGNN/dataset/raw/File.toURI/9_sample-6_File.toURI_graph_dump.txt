Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getTestBundleURL(String artifactName, String baseName, String version) [ CD ]
Line_2 $$ public void getTestBundleURL(String artifactName, String baseName, String version) -->Line_3 $$ assertNotNull("Version cannot be null!", version)[ CD ]
Line_2 $$ public void getTestBundleURL(String artifactName, String baseName, String version) -->Line_3 $$ assertNotNull("Version cannot be null!", version)[ FD ]
Line_2 $$ public void getTestBundleURL(String artifactName, String baseName, String version) -->Line_4 $$ File f = new File(m_testBundleBasePath, String.format("%1$s/target/org.apache.felix.deploymentadmin.test.%2$s-%3$s.jar", artifactName, baseName, version))[ CD ]
Line_2 $$ public void getTestBundleURL(String artifactName, String baseName, String version) -->Line_4 $$ File f = new File(m_testBundleBasePath, String.format("%1$s/target/org.apache.felix.deploymentadmin.test.%2$s-%3$s.jar", artifactName, baseName, version))[ FD ]
Line_2 $$ public void getTestBundleURL(String artifactName, String baseName, String version) -->Line_4 $$ File f = new File(m_testBundleBasePath, String.format("%1$s/target/org.apache.felix.deploymentadmin.test.%2$s-%3$s.jar", artifactName, baseName, version))[ FD ]
Line_2 $$ public void getTestBundleURL(String artifactName, String baseName, String version) -->Line_4 $$ File f = new File(m_testBundleBasePath, String.format("%1$s/target/org.apache.felix.deploymentadmin.test.%2$s-%3$s.jar", artifactName, baseName, version))[ FD ]
Line_2 $$ public void getTestBundleURL(String artifactName, String baseName, String version) -->Line_5 $$ assertTrue("No such bundle: " + f, f.exists() && f.isFile())[ CD ]
Line_4 $$ File f = new File(m_testBundleBasePath, String.format("%1$s/target/org.apache.felix.deploymentadmin.test.%2$s-%3$s.jar", artifactName, baseName, version))-->Line_5 $$ assertTrue("No such bundle: " + f, f.exists() && f.isFile())[ FD ]
Line_4 $$ File f = new File(m_testBundleBasePath, String.format("%1$s/target/org.apache.felix.deploymentadmin.test.%2$s-%3$s.jar", artifactName, baseName, version))-->Line_5 $$ assertTrue("No such bundle: " + f, f.exists() && f.isFile())[ FD ]
Line_2 $$ public void getTestBundleURL(String artifactName, String baseName, String version) -->Line_6 $$ return f.toURI().toURL()[ CD ]
Line_6 $$ return f.toURI().toURL()-->Line_6 $$ return f.toURI().toURL()[ CD ]
Line_4 $$ File f = new File(m_testBundleBasePath, String.format("%1$s/target/org.apache.felix.deploymentadmin.test.%2$s-%3$s.jar", artifactName, baseName, version))-->Line_6 $$ return f.toURI().toURL()[ FD ]
