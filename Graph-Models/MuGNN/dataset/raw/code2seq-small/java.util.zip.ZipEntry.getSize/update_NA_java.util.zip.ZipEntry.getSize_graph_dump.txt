Line_2 $$ public static void update(InputStream in, OutputStream out, Map<String, File> relpathToFile) throws IOException -->Line_9 $$ if (!relpathToFile.containsKey(name)) [ FD ]
Line_9 $$ if (!relpathToFile.containsKey(name)) -->Line_11 $$ e2.setMethod(e.getMethod())[ CD ]
Line_7 $$ while ((e = zis.getNextEntry()) != null) -->Line_11 $$ e2.setMethod(e.getMethod())[ FD ]
Line_6 $$ ZipEntry e-->Line_12 $$ e2.setTime(e.getTime())[ FD ]
Line_10 $$ ZipEntry e2 = new ZipEntry(name)-->Line_14 $$ e2.setExtra(e.getExtra())[ FD ]
Line_4 $$ ZipOutputStream zos = new ZipOutputStream(out)-->Line_29 $$ addFileToZip(zos, file, path, null, null)[ FD ]
Line_8 $$ String name = e.getName()-->Line_23 $$ relpathToFile.remove(name)[ FD ]
Line_7 $$ while ((e = zis.getNextEntry()) != null) -->Line_17 $$ e2.setCrc(e.getCrc())[ FD ]
Line_9 $$ if (!relpathToFile.containsKey(name)) -->Line_20 $$ FileUtil.copy(zis, zos)[ CD ]
Line_3 $$ ZipInputStream zis = new ZipInputStream(in)-->Line_32 $$ zis.close()[ FD ]
Line_4 $$ ZipOutputStream zos = new ZipOutputStream(out)-->Line_33 $$ zos.close()[ FD ]
Line_6 $$ ZipEntry e-->Line_15 $$ if (e.getMethod() == ZipEntry.STORED) [ FD ]
Line_7 $$ while ((e = zis.getNextEntry()) != null) -->Line_13 $$ e2.setComment(e.getComment())[ FD ]
Line_6 $$ ZipEntry e-->Line_16 $$ e2.setSize(e.getSize())[ FD ]
Line_4 $$ ZipOutputStream zos = new ZipOutputStream(out)-->Line_24 $$ addFileToZip(zos, file, name, null, null)[ FD ]
Line_2 $$ public static void update(InputStream in, OutputStream out, Map<String, File> relpathToFile) throws IOException -->Line_27 $$ for (final String path : relpathToFile.keySet()) [ FD ]
Line_7 $$ while ((e = zis.getNextEntry()) != null) -->Line_14 $$ e2.setExtra(e.getExtra())[ FD ]
Line_8 $$ String name = e.getName()-->Line_9 $$ if (!relpathToFile.containsKey(name)) [ FD ]
Line_22 $$ final File file = relpathToFile.get(name)-->Line_29 $$ addFileToZip(zos, file, path, null, null)[ FD ]
Line_10 $$ ZipEntry e2 = new ZipEntry(name)-->Line_11 $$ e2.setMethod(e.getMethod())[ FD ]
Line_3 $$ ZipInputStream zis = new ZipInputStream(in)-->Line_7 $$ while ((e = zis.getNextEntry()) != null) [ FD ]
Line_27 $$ for (final String path : relpathToFile.keySet()) -->Line_29 $$ addFileToZip(zos, file, path, null, null)[ FD ]
Line_7 $$ while ((e = zis.getNextEntry()) != null) -->Line_16 $$ e2.setSize(e.getSize())[ FD ]
Line_8 $$ String name = e.getName()-->Line_24 $$ addFileToZip(zos, file, name, null, null)[ FD ]
Line_9 $$ if (!relpathToFile.containsKey(name)) -->Line_24 $$ addFileToZip(zos, file, name, null, null)[ CD ]
Line_6 $$ ZipEntry e-->Line_7 $$ while ((e = zis.getNextEntry()) != null) [ FD ]
Line_6 $$ ZipEntry e-->Line_11 $$ e2.setMethod(e.getMethod())[ FD ]
Line_27 $$ for (final String path : relpathToFile.keySet()) -->Line_28 $$ File file = relpathToFile.get(path)[ FD ]
Line_2 $$ public static void update(InputStream in, OutputStream out, Map<String, File> relpathToFile) throws IOException -->Line_22 $$ final File file = relpathToFile.get(name)[ FD ]
Line_8 $$ String name = e.getName()-->Line_22 $$ final File file = relpathToFile.get(name)[ FD ]
Line_6 $$ ZipEntry e-->Line_13 $$ e2.setComment(e.getComment())[ FD ]
Line_6 $$ ZipEntry e-->Line_14 $$ e2.setExtra(e.getExtra())[ FD ]
Line_9 $$ if (!relpathToFile.containsKey(name)) -->Line_15 $$ if (e.getMethod() == ZipEntry.STORED) [ CD ]
Line_6 $$ ZipEntry e-->Line_8 $$ String name = e.getName()[ FD ]
Line_2 $$ public static void update(InputStream in, OutputStream out, Map<String, File> relpathToFile) throws IOException -->Line_3 $$ ZipInputStream zis = new ZipInputStream(in)[ CD ]
Line_7 $$ while ((e = zis.getNextEntry()) != null) -->Line_12 $$ e2.setTime(e.getTime())[ FD ]
Line_15 $$ if (e.getMethod() == ZipEntry.STORED) -->Line_16 $$ e2.setSize(e.getSize())[ CD ]
Line_3 $$ ZipInputStream zis = new ZipInputStream(in)-->Line_20 $$ FileUtil.copy(zis, zos)[ FD ]
Line_22 $$ final File file = relpathToFile.get(name)-->Line_24 $$ addFileToZip(zos, file, name, null, null)[ FD ]
Line_2 $$ public static void update(InputStream in, OutputStream out, Map<String, File> relpathToFile) throws IOException -->Line_28 $$ File file = relpathToFile.get(path)[ FD ]
Line_10 $$ ZipEntry e2 = new ZipEntry(name)-->Line_12 $$ e2.setTime(e.getTime())[ FD ]
Line_9 $$ if (!relpathToFile.containsKey(name)) -->Line_23 $$ relpathToFile.remove(name)[ CD ]
Line_7 $$ while ((e = zis.getNextEntry()) != null) -->Line_15 $$ if (e.getMethod() == ZipEntry.STORED) [ FD ]
Line_4 $$ ZipOutputStream zos = new ZipOutputStream(out)-->Line_19 $$ zos.putNextEntry(e2)[ FD ]
Line_15 $$ if (e.getMethod() == ZipEntry.STORED) -->Line_17 $$ e2.setCrc(e.getCrc())[ CD ]
Line_7 $$ while ((e = zis.getNextEntry()) != null) -->Line_9 $$ if (!relpathToFile.containsKey(name)) [ CD ]
Line_6 $$ ZipEntry e-->Line_17 $$ e2.setCrc(e.getCrc())[ FD ]
Line_10 $$ ZipEntry e2 = new ZipEntry(name)-->Line_19 $$ zos.putNextEntry(e2)[ FD ]
Line_10 $$ ZipEntry e2 = new ZipEntry(name)-->Line_17 $$ e2.setCrc(e.getCrc())[ FD ]
Line_9 $$ if (!relpathToFile.containsKey(name)) -->Line_22 $$ final File file = relpathToFile.get(name)[ CD ]
Line_28 $$ File file = relpathToFile.get(path)-->Line_29 $$ addFileToZip(zos, file, path, null, null)[ FD ]
Line_9 $$ if (!relpathToFile.containsKey(name)) -->Line_10 $$ ZipEntry e2 = new ZipEntry(name)[ CD ]
Line_9 $$ if (!relpathToFile.containsKey(name)) -->Line_14 $$ e2.setExtra(e.getExtra())[ CD ]
Line_4 $$ ZipOutputStream zos = new ZipOutputStream(out)-->Line_20 $$ FileUtil.copy(zis, zos)[ FD ]
Line_2 $$ public static void update(InputStream in, OutputStream out, Map<String, File> relpathToFile) throws IOException -->Line_23 $$ relpathToFile.remove(name)[ FD ]
Line_2 $$ public static void update(InputStream in, OutputStream out, Map<String, File> relpathToFile) throws IOException -->Line_4 $$ ZipOutputStream zos = new ZipOutputStream(out)[ CD ]
Line_9 $$ if (!relpathToFile.containsKey(name)) -->Line_19 $$ zos.putNextEntry(e2)[ CD ]
Line_10 $$ ZipEntry e2 = new ZipEntry(name)-->Line_13 $$ e2.setComment(e.getComment())[ FD ]
Line_7 $$ while ((e = zis.getNextEntry()) != null) -->Line_8 $$ String name = e.getName()[ FD ]
Line_10 $$ ZipEntry e2 = new ZipEntry(name)-->Line_16 $$ e2.setSize(e.getSize())[ FD ]
Line_9 $$ if (!relpathToFile.containsKey(name)) -->Line_13 $$ e2.setComment(e.getComment())[ CD ]
Line_7 $$ while ((e = zis.getNextEntry()) != null) -->Line_8 $$ String name = e.getName()[ CD ]
Line_9 $$ if (!relpathToFile.containsKey(name)) -->Line_12 $$ e2.setTime(e.getTime())[ CD ]
