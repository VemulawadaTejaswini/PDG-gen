Line_2 $$ private EntryInfo getOrCreate(@NotNull ZipEntry entry, @NotNull Map<String, EntryInfo> map, @NotNull ZipFile zip) -->Line_18 $$ return info[ CD ]
Line_3 $$ boolean isDirectory = entry.isDirectory()-->Line_7 $$ isDirectory = true[ FD ]
Line_7 $$ isDirectory = true-->Line_17 $$ info = store(map, parentInfo, path.second, isDirectory, entry.getSize(), myFileStamp, entryName)[ FD ]
Line_2 $$ private EntryInfo getOrCreate(@NotNull ZipEntry entry, @NotNull Map<String, EntryInfo> map, @NotNull ZipFile zip) -->Line_12 $$ Pair<String, String> path = splitPath(entryName)[ CD ]
Line_4 $$ String entryName = entry.getName()-->Line_12 $$ Pair<String, String> path = splitPath(entryName)[ FD ]
Line_2 $$ private EntryInfo getOrCreate(@NotNull ZipEntry entry, @NotNull Map<String, EntryInfo> map, @NotNull ZipFile zip) -->Line_5 $$ if (StringUtil.endsWithChar(entryName, '/')) [ CD ]
Line_3 $$ boolean isDirectory = entry.isDirectory()-->Line_17 $$ info = store(map, parentInfo, path.second, isDirectory, entry.getSize(), myFileStamp, entryName)[ FD ]
Line_2 $$ private EntryInfo getOrCreate(@NotNull ZipEntry entry, @NotNull Map<String, EntryInfo> map, @NotNull ZipFile zip) -->Line_17 $$ info = store(map, parentInfo, path.second, isDirectory, entry.getSize(), myFileStamp, entryName)[ FD ]
Line_2 $$ private EntryInfo getOrCreate(@NotNull ZipEntry entry, @NotNull Map<String, EntryInfo> map, @NotNull ZipFile zip) -->Line_14 $$ if (".".equals(path.second)) [ CD ]
Line_2 $$ private EntryInfo getOrCreate(@NotNull ZipEntry entry, @NotNull Map<String, EntryInfo> map, @NotNull ZipFile zip) -->Line_10 $$ if (info != null)[ CD ]
Line_2 $$ private EntryInfo getOrCreate(@NotNull ZipEntry entry, @NotNull Map<String, EntryInfo> map, @NotNull ZipFile zip) -->Line_17 $$ info = store(map, parentInfo, path.second, isDirectory, entry.getSize(), myFileStamp, entryName)[ CD ]
Line_2 $$ private EntryInfo getOrCreate(@NotNull ZipEntry entry, @NotNull Map<String, EntryInfo> map, @NotNull ZipFile zip) -->Line_13 $$ EntryInfo parentInfo = getOrCreate(path.first, map, zip)[ CD ]
Line_2 $$ private EntryInfo getOrCreate(@NotNull ZipEntry entry, @NotNull Map<String, EntryInfo> map, @NotNull ZipFile zip) -->Line_4 $$ String entryName = entry.getName()[ CD ]
Line_6 $$ entryName = entryName.substring(0, entryName.length() - 1)-->Line_17 $$ info = store(map, parentInfo, path.second, isDirectory, entry.getSize(), myFileStamp, entryName)[ FD ]
Line_5 $$ if (StringUtil.endsWithChar(entryName, '/')) -->Line_6 $$ entryName = entryName.substring(0, entryName.length() - 1)[ CD ]
Line_9 $$ EntryInfo info = map.get(entryName)-->Line_17 $$ info = store(map, parentInfo, path.second, isDirectory, entry.getSize(), myFileStamp, entryName)[ FD ]
Line_2 $$ private EntryInfo getOrCreate(@NotNull ZipEntry entry, @NotNull Map<String, EntryInfo> map, @NotNull ZipFile zip) -->Line_13 $$ EntryInfo parentInfo = getOrCreate(path.first, map, zip)[ FD ]
Line_4 $$ String entryName = entry.getName()-->Line_6 $$ entryName = entryName.substring(0, entryName.length() - 1)[ FD ]
Line_14 $$ if (".".equals(path.second)) -->Line_15 $$ return parentInfo[ CD ]
Line_2 $$ private EntryInfo getOrCreate(@NotNull ZipEntry entry, @NotNull Map<String, EntryInfo> map, @NotNull ZipFile zip) -->Line_9 $$ EntryInfo info = map.get(entryName)[ FD ]
Line_4 $$ String entryName = entry.getName()-->Line_9 $$ EntryInfo info = map.get(entryName)[ FD ]
Line_6 $$ entryName = entryName.substring(0, entryName.length() - 1)-->Line_12 $$ Pair<String, String> path = splitPath(entryName)[ FD ]
Line_6 $$ entryName = entryName.substring(0, entryName.length() - 1)-->Line_9 $$ EntryInfo info = map.get(entryName)[ FD ]
Line_4 $$ String entryName = entry.getName()-->Line_17 $$ info = store(map, parentInfo, path.second, isDirectory, entry.getSize(), myFileStamp, entryName)[ FD ]
Line_2 $$ private EntryInfo getOrCreate(@NotNull ZipEntry entry, @NotNull Map<String, EntryInfo> map, @NotNull ZipFile zip) -->Line_3 $$ boolean isDirectory = entry.isDirectory()[ CD ]
Line_2 $$ private EntryInfo getOrCreate(@NotNull ZipEntry entry, @NotNull Map<String, EntryInfo> map, @NotNull ZipFile zip) -->Line_4 $$ String entryName = entry.getName()[ FD ]
Line_2 $$ private EntryInfo getOrCreate(@NotNull ZipEntry entry, @NotNull Map<String, EntryInfo> map, @NotNull ZipFile zip) -->Line_9 $$ EntryInfo info = map.get(entryName)[ CD ]
Line_5 $$ if (StringUtil.endsWithChar(entryName, '/')) -->Line_7 $$ isDirectory = true[ CD ]
Line_9 $$ EntryInfo info = map.get(entryName)-->Line_10 $$ if (info != null)[ FD ]
Line_10 $$ if (info != null)-->Line_11 $$ return info[ CD ]
Line_2 $$ private EntryInfo getOrCreate(@NotNull ZipEntry entry, @NotNull Map<String, EntryInfo> map, @NotNull ZipFile zip) -->Line_3 $$ boolean isDirectory = entry.isDirectory()[ FD ]
Line_4 $$ String entryName = entry.getName()-->Line_5 $$ if (StringUtil.endsWithChar(entryName, '/')) [ FD ]
Line_13 $$ EntryInfo parentInfo = getOrCreate(path.first, map, zip)-->Line_17 $$ info = store(map, parentInfo, path.second, isDirectory, entry.getSize(), myFileStamp, entryName)[ FD ]
