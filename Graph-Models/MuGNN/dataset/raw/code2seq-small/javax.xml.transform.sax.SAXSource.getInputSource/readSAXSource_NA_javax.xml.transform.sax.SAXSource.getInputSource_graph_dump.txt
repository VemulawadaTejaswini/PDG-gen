Line_2 $$ public void readSAXSource() throws Exception -->Line_3 $$ MockHttpInputMessage inputMessage = new MockHttpInputMessage(BODY.getBytes("UTF-8"))[ CD ]
Line_2 $$ public void readSAXSource() throws Exception -->Line_4 $$ inputMessage.getHeaders().setContentType(new MediaType("application", "xml"))[ CD ]
Line_2 $$ public void readSAXSource() throws Exception -->Line_8 $$ assertXMLEqual("Invalid result", BODY, s)[ CD ]
Line_6 $$ InputSource inputSource = result.getInputSource()-->Line_7 $$ String s = FileCopyUtils.copyToString(new InputStreamReader(inputSource.getByteStream()))[ FD ]
Line_5 $$ SAXSource result = (SAXSource) converter.read(SAXSource.class, inputMessage)-->Line_6 $$ InputSource inputSource = result.getInputSource()[ FD ]
Line_3 $$ MockHttpInputMessage inputMessage = new MockHttpInputMessage(BODY.getBytes("UTF-8"))-->Line_4 $$ inputMessage.getHeaders().setContentType(new MediaType("application", "xml"))[ FD ]
Line_2 $$ public void readSAXSource() throws Exception -->Line_6 $$ InputSource inputSource = result.getInputSource()[ CD ]
Line_7 $$ String s = FileCopyUtils.copyToString(new InputStreamReader(inputSource.getByteStream()))-->Line_8 $$ assertXMLEqual("Invalid result", BODY, s)[ FD ]
Line_2 $$ public void readSAXSource() throws Exception -->Line_7 $$ String s = FileCopyUtils.copyToString(new InputStreamReader(inputSource.getByteStream()))[ CD ]
Line_3 $$ MockHttpInputMessage inputMessage = new MockHttpInputMessage(BODY.getBytes("UTF-8"))-->Line_5 $$ SAXSource result = (SAXSource) converter.read(SAXSource.class, inputMessage)[ FD ]
Line_2 $$ public void readSAXSource() throws Exception -->Line_5 $$ SAXSource result = (SAXSource) converter.read(SAXSource.class, inputMessage)[ CD ]
