Line_2 $$ public void readSAXSourceExternal() throws Exception -->Line_9 $$ reader.setContentHandler(new DefaultHandler() [ CD ]
Line_2 $$ public void readSAXSourceExternal() throws Exception -->Line_15 $$ reader.parse(inputSource)[ CD ]
Line_8 $$ XMLReader reader = result.getXMLReader()-->Line_9 $$ reader.setContentHandler(new DefaultHandler() [ FD ]
Line_2 $$ public void readSAXSourceExternal() throws Exception -->Line_5 $$ converter.setSupportDtd(true)[ CD ]
Line_3 $$ MockHttpInputMessage inputMessage = new MockHttpInputMessage(bodyExternal.getBytes("UTF-8"))-->Line_6 $$ SAXSource result = (SAXSource) converter.read(SAXSource.class, inputMessage)[ FD ]
Line_8 $$ XMLReader reader = result.getXMLReader()-->Line_15 $$ reader.parse(inputSource)[ FD ]
Line_2 $$ public void readSAXSourceExternal() throws Exception -->Line_3 $$ MockHttpInputMessage inputMessage = new MockHttpInputMessage(bodyExternal.getBytes("UTF-8"))[ CD ]
Line_2 $$ public void readSAXSourceExternal() throws Exception -->Line_8 $$ XMLReader reader = result.getXMLReader()[ CD ]
Line_9 $$ reader.setContentHandler(new DefaultHandler() -->Line_11 $$ String s = new String(ch, start, length)[ CD ]
Line_9 $$ reader.setContentHandler(new DefaultHandler() -->Line_12 $$ assertNotEquals("Invalid result", "Foo Bar", s)[ CD ]
Line_2 $$ public void readSAXSourceExternal() throws Exception -->Line_4 $$ inputMessage.getHeaders().setContentType(new MediaType("application", "xml"))[ CD ]
Line_7 $$ InputSource inputSource = result.getInputSource()-->Line_15 $$ reader.parse(inputSource)[ FD ]
Line_3 $$ MockHttpInputMessage inputMessage = new MockHttpInputMessage(bodyExternal.getBytes("UTF-8"))-->Line_4 $$ inputMessage.getHeaders().setContentType(new MediaType("application", "xml"))[ FD ]
Line_2 $$ public void readSAXSourceExternal() throws Exception -->Line_6 $$ SAXSource result = (SAXSource) converter.read(SAXSource.class, inputMessage)[ CD ]
Line_2 $$ public void readSAXSourceExternal() throws Exception -->Line_7 $$ InputSource inputSource = result.getInputSource()[ CD ]
Line_6 $$ SAXSource result = (SAXSource) converter.read(SAXSource.class, inputMessage)-->Line_7 $$ InputSource inputSource = result.getInputSource()[ FD ]
Line_6 $$ SAXSource result = (SAXSource) converter.read(SAXSource.class, inputMessage)-->Line_8 $$ XMLReader reader = result.getXMLReader()[ FD ]
Line_11 $$ String s = new String(ch, start, length)-->Line_12 $$ assertNotEquals("Invalid result", "Foo Bar", s)[ FD ]
