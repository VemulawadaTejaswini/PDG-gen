Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_40 $$ System.err.println("About to run: Submitter -conf " + jobXml + " -input " + inDir + " -output " + nonPipedOutDir + " -program " + dfs.getFileSystem().makeQualified(wordExec))[ CD ]
Line_21 $$ DataOutputStream out = local.create(new Path(inDir, "part0"))-->Line_31 $$ out.writeBytes("hall silly cats drink java\n")[ FD ]
Line_17 $$ FileSystem fs = dfs.getFileSystem()-->Line_19 $$ fs.copyFromLocalFile(program, wordExec)[ FD ]
Line_29 $$ out = local.create(new Path(inDir, "part1"))-->Line_33 $$ out.writeBytes("hello drink java\n")[ FD ]
Line_29 $$ out = local.create(new Path(inDir, "part1"))-->Line_37 $$ out = local.create(jobXml)[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_9 $$ job.setInputFormat(WordCountInputFormat.class)[ CD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_15 $$ Path jobXml = new Path(testDir, "job.xml")[ CD ]
Line_15 $$ Path jobXml = new Path(testDir, "job.xml")-->Line_42 $$ int ret = ToolRunner.run(new Submitter(), new String[] [ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_31 $$ out.writeBytes("hall silly cats drink java\n")[ CD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_38 $$ job.writeXml(out)[ CD ]
Line_4 $$ if (conf == null) -->Line_5 $$ job = mr.createJobConf()[ CD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_5 $$ job = mr.createJobConf()[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_42 $$ int ret = ToolRunner.run(new Submitter(), new String[] [ FD ]
Line_21 $$ DataOutputStream out = local.create(new Path(inDir, "part0"))-->Line_30 $$ out.writeBytes("mall world things drink java\n")[ FD ]
Line_21 $$ DataOutputStream out = local.create(new Path(inDir, "part0"))-->Line_25 $$ out.writeBytes("you is silly\n")[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_19 $$ fs.copyFromLocalFile(program, wordExec)[ CD ]
Line_10 $$ FileSystem local = FileSystem.getLocal(job)-->Line_37 $$ out = local.create(jobXml)[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_23 $$ out.writeBytes("you are silly\n")[ CD ]
Line_5 $$ job = mr.createJobConf()-->Line_38 $$ job.writeXml(out)[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_26 $$ out.writeBytes("i am a billy test\n")[ CD ]
Line_10 $$ FileSystem local = FileSystem.getLocal(job)-->Line_21 $$ DataOutputStream out = local.create(new Path(inDir, "part0"))[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_22 $$ out.writeBytes("i am a silly test\n")[ CD ]
Line_3 $$ JobConf job-->Line_7 $$ job = new JobConf(conf)[ FD ]
Line_7 $$ job = new JobConf(conf)-->Line_10 $$ FileSystem local = FileSystem.getLocal(job)[ FD ]
Line_14 $$ Path wordExec = new Path("testing/bin/application")-->Line_40 $$ System.err.println("About to run: Submitter -conf " + jobXml + " -input " + inDir + " -output " + nonPipedOutDir + " -program " + dfs.getFileSystem().makeQualified(wordExec))[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_30 $$ out.writeBytes("mall world things drink java\n")[ CD ]
Line_29 $$ out = local.create(new Path(inDir, "part1"))-->Line_39 $$ out.close()[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_40 $$ System.err.println("About to run: Submitter -conf " + jobXml + " -input " + inDir + " -output " + nonPipedOutDir + " -program " + dfs.getFileSystem().makeQualified(wordExec))[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_37 $$ out = local.create(jobXml)[ CD ]
Line_14 $$ Path wordExec = new Path("testing/bin/application")-->Line_18 $$ fs.delete(wordExec.getParent(), true)[ FD ]
Line_3 $$ JobConf job-->Line_38 $$ job.writeXml(out)[ FD ]
Line_29 $$ out = local.create(new Path(inDir, "part1"))-->Line_34 $$ out.close()[ FD ]
Line_42 $$ int ret = ToolRunner.run(new Submitter(), new String[] -->Line_43 $$ assertEquals(0, ret)[ FD ]
Line_21 $$ DataOutputStream out = local.create(new Path(inDir, "part0"))-->Line_26 $$ out.writeBytes("i am a billy test\n")[ FD ]
Line_3 $$ JobConf job-->Line_5 $$ job = mr.createJobConf()[ FD ]
Line_14 $$ Path wordExec = new Path("testing/bin/application")-->Line_42 $$ int ret = ToolRunner.run(new Submitter(), new String[] [ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_10 $$ FileSystem local = FileSystem.getLocal(job)[ CD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_11 $$ Path testDir = new Path("file:" + System.getProperty("test.build.data"), "pipes")[ CD ]
Line_10 $$ FileSystem local = FileSystem.getLocal(job)-->Line_29 $$ out = local.create(new Path(inDir, "part1"))[ FD ]
Line_21 $$ DataOutputStream out = local.create(new Path(inDir, "part0"))-->Line_32 $$ out.writeBytes("all dogs bow wow\n")[ FD ]
Line_5 $$ job = mr.createJobConf()-->Line_7 $$ job = new JobConf(conf)[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_19 $$ fs.copyFromLocalFile(program, wordExec)[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_14 $$ Path wordExec = new Path("testing/bin/application")[ CD ]
Line_10 $$ FileSystem local = FileSystem.getLocal(job)-->Line_36 $$ local.mkdirs(nonPipedOutDir, new FsPermission(FsAction.ALL, FsAction.ALL, FsAction.ALL))[ FD ]
Line_15 $$ Path jobXml = new Path(testDir, "job.xml")-->Line_37 $$ out = local.create(jobXml)[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_24 $$ out.writeBytes("i am a cat test\n")[ CD ]
Line_14 $$ Path wordExec = new Path("testing/bin/application")-->Line_19 $$ fs.copyFromLocalFile(program, wordExec)[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_21 $$ DataOutputStream out = local.create(new Path(inDir, "part0"))[ CD ]
Line_37 $$ out = local.create(jobXml)-->Line_39 $$ out.close()[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_12 $$ Path inDir = new Path(testDir, "input")[ CD ]
Line_3 $$ JobConf job-->Line_9 $$ job.setInputFormat(WordCountInputFormat.class)[ FD ]
Line_37 $$ out = local.create(jobXml)-->Line_38 $$ job.writeXml(out)[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_36 $$ local.mkdirs(nonPipedOutDir, new FsPermission(FsAction.ALL, FsAction.ALL, FsAction.ALL))[ CD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_18 $$ fs.delete(wordExec.getParent(), true)[ CD ]
Line_12 $$ Path inDir = new Path(testDir, "input")-->Line_42 $$ int ret = ToolRunner.run(new Submitter(), new String[] [ FD ]
Line_21 $$ DataOutputStream out = local.create(new Path(inDir, "part0"))-->Line_29 $$ out = local.create(new Path(inDir, "part1"))[ FD ]
Line_21 $$ DataOutputStream out = local.create(new Path(inDir, "part0"))-->Line_38 $$ job.writeXml(out)[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_3 $$ JobConf job[ CD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_28 $$ out.close()[ CD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_4 $$ if (conf == null) [ CD ]
Line_5 $$ job = mr.createJobConf()-->Line_9 $$ job.setInputFormat(WordCountInputFormat.class)[ FD ]
Line_21 $$ DataOutputStream out = local.create(new Path(inDir, "part0"))-->Line_28 $$ out.close()[ FD ]
Line_3 $$ JobConf job-->Line_10 $$ FileSystem local = FileSystem.getLocal(job)[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_4 $$ if (conf == null) [ FD ]
Line_21 $$ DataOutputStream out = local.create(new Path(inDir, "part0"))-->Line_27 $$ out.writeBytes("hello are silly\n")[ FD ]
Line_29 $$ out = local.create(new Path(inDir, "part1"))-->Line_38 $$ job.writeXml(out)[ FD ]
Line_10 $$ FileSystem local = FileSystem.getLocal(job)-->Line_35 $$ local.delete(nonPipedOutDir, true)[ FD ]
Line_29 $$ out = local.create(new Path(inDir, "part1"))-->Line_32 $$ out.writeBytes("all dogs bow wow\n")[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_39 $$ out.close()[ CD ]
Line_21 $$ DataOutputStream out = local.create(new Path(inDir, "part0"))-->Line_22 $$ out.writeBytes("i am a silly test\n")[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_29 $$ out = local.create(new Path(inDir, "part1"))[ CD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_32 $$ out.writeBytes("all dogs bow wow\n")[ CD ]
Line_21 $$ DataOutputStream out = local.create(new Path(inDir, "part0"))-->Line_34 $$ out.close()[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_34 $$ out.close()[ CD ]
Line_17 $$ FileSystem fs = dfs.getFileSystem()-->Line_18 $$ fs.delete(wordExec.getParent(), true)[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_27 $$ out.writeBytes("hello are silly\n")[ CD ]
Line_21 $$ DataOutputStream out = local.create(new Path(inDir, "part0"))-->Line_39 $$ out.close()[ FD ]
Line_4 $$ if (conf == null) -->Line_7 $$ job = new JobConf(conf)[ CD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_33 $$ out.writeBytes("hello drink java\n")[ CD ]
Line_29 $$ out = local.create(new Path(inDir, "part1"))-->Line_30 $$ out.writeBytes("mall world things drink java\n")[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_35 $$ local.delete(nonPipedOutDir, true)[ CD ]
Line_7 $$ job = new JobConf(conf)-->Line_9 $$ job.setInputFormat(WordCountInputFormat.class)[ FD ]
Line_21 $$ DataOutputStream out = local.create(new Path(inDir, "part0"))-->Line_37 $$ out = local.create(jobXml)[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_17 $$ FileSystem fs = dfs.getFileSystem()[ CD ]
Line_21 $$ DataOutputStream out = local.create(new Path(inDir, "part0"))-->Line_23 $$ out.writeBytes("you are silly\n")[ FD ]
Line_21 $$ DataOutputStream out = local.create(new Path(inDir, "part0"))-->Line_33 $$ out.writeBytes("hello drink java\n")[ FD ]
Line_7 $$ job = new JobConf(conf)-->Line_38 $$ job.writeXml(out)[ FD ]
Line_5 $$ job = mr.createJobConf()-->Line_10 $$ FileSystem local = FileSystem.getLocal(job)[ FD ]
Line_29 $$ out = local.create(new Path(inDir, "part1"))-->Line_31 $$ out.writeBytes("hall silly cats drink java\n")[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_17 $$ FileSystem fs = dfs.getFileSystem()[ FD ]
Line_2 $$ static void runNonPipedProgram(MiniMRCluster mr, MiniDFSCluster dfs, Path program, JobConf conf) throws IOException -->Line_25 $$ out.writeBytes("you is silly\n")[ CD ]
Line_21 $$ DataOutputStream out = local.create(new Path(inDir, "part0"))-->Line_24 $$ out.writeBytes("i am a cat test\n")[ FD ]
