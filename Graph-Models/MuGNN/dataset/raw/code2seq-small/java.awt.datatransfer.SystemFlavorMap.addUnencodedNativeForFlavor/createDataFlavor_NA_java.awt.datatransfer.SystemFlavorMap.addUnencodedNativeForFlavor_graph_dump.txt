Line_5 $$ if (register) -->Line_6 $$ final FlavorMap map = SystemFlavorMap.getDefaultFlavorMap()[ CD ]
Line_2 $$ public static DataFlavor createDataFlavor(@NotNull final String mimeType, @Nullable final Class<?> klass, final boolean register) -->Line_8 $$ ((SystemFlavorMap) map).addUnencodedNativeForFlavor(flavor, mimeType)[ FD ]
Line_7 $$ if (map instanceof SystemFlavorMap) -->Line_8 $$ ((SystemFlavorMap) map).addUnencodedNativeForFlavor(flavor, mimeType)[ CD ]
Line_6 $$ final FlavorMap map = SystemFlavorMap.getDefaultFlavorMap()-->Line_7 $$ if (map instanceof SystemFlavorMap) [ FD ]
Line_5 $$ if (register) -->Line_7 $$ if (map instanceof SystemFlavorMap) [ CD ]
Line_4 $$ final DataFlavor flavor = klass != null ? new DataFlavor(mimeType + ";class=" + klass.getName(), null, klass.getClassLoader()) : new DataFlavor(mimeType)-->Line_8 $$ ((SystemFlavorMap) map).addUnencodedNativeForFlavor(flavor, mimeType)[ FD ]
Line_2 $$ public static DataFlavor createDataFlavor(@NotNull final String mimeType, @Nullable final Class<?> klass, final boolean register) -->Line_4 $$ final DataFlavor flavor = klass != null ? new DataFlavor(mimeType + ";class=" + klass.getName(), null, klass.getClassLoader()) : new DataFlavor(mimeType)[ FD ]
