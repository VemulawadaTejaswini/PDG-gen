Line_2 $$ public final void show() -->Line_95 $$ myRemoveActions.add(new Runnable() [ CD ]
Line_4 $$ final JTree tree = getTree()-->Line_65 $$ if (!tree.isShowing()) [ FD ]
Line_43 $$ JTree tree = getTree()-->Line_77 $$ tree.removeHierarchyListener(hierarchyListener)[ FD ]
Line_6 $$ final JRootPane rootPane = tree.getRootPane()-->Line_7 $$ if (rootPane == null) [ FD ]
Line_2 $$ public final void show() -->Line_82 $$ final Disposable disposable = Disposer.newDisposable()[ CD ]
Line_11 $$ Rectangle bounds = getEditorBounds()-->Line_12 $$ if (bounds == null) [ FD ]
Line_2 $$ public final void show() -->Line_12 $$ if (bounds == null) [ CD ]
Line_16 $$ final JComponent inplaceEditorComponent = createInplaceEditorComponent()-->Line_20 $$ layeredPane.add(inplaceEditorComponent, new Integer(250))[ FD ]
Line_31 $$ final ComponentAdapter componentListener = new ComponentAdapter() -->Line_35 $$ final Project project = getProject()[ CD ]
Line_61 $$ final HierarchyListener hierarchyListener = new HierarchyListener() -->Line_65 $$ if (!tree.isShowing()) [ CD ]
Line_2 $$ public final void show() -->Line_28 $$ inplaceEditorComponent.validate()[ CD ]
Line_45 $$ Rectangle bounds = getEditorBounds()-->Line_46 $$ if (bounds == null) [ FD ]
Line_4 $$ final JTree tree = getTree()-->Line_49 $$ Point layeredPanePoint = SwingUtilities.convertPoint(tree, bounds.x, bounds.y, layeredPane)[ FD ]
Line_16 $$ final JComponent inplaceEditorComponent = createInplaceEditorComponent()-->Line_50 $$ setInplaceEditorBounds(inplaceEditorComponent, layeredPanePoint.x, layeredPanePoint.y, bounds.width, bounds.height)[ FD ]
Line_65 $$ if (!tree.isShowing()) -->Line_66 $$ cancelEditing()[ CD ]
Line_2 $$ public final void show() -->Line_4 $$ final JTree tree = getTree()[ CD ]
Line_4 $$ final JTree tree = getTree()-->Line_44 $$ JLayeredPane layeredPane = tree.getRootPane().getLayeredPane()[ FD ]
Line_4 $$ final JTree tree = getTree()-->Line_6 $$ final JRootPane rootPane = tree.getRootPane()[ FD ]
Line_2 $$ public final void show() -->Line_73 $$ myRemoveActions.add(new Runnable() [ CD ]
Line_2 $$ public final void show() -->Line_18 $$ LOG.assertTrue(inplaceEditorComponent != null)[ CD ]
Line_16 $$ final JComponent inplaceEditorComponent = createInplaceEditorComponent()-->Line_28 $$ inplaceEditorComponent.validate()[ FD ]
Line_2 $$ public final void show() -->Line_16 $$ final JComponent inplaceEditorComponent = createInplaceEditorComponent()[ CD ]
Line_43 $$ JTree tree = getTree()-->Line_70 $$ tree.addHierarchyListener(hierarchyListener)[ FD ]
Line_36 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_43 $$ JTree tree = getTree()[ CD ]
Line_16 $$ final JComponent inplaceEditorComponent = createInplaceEditorComponent()-->Line_51 $$ inplaceEditorComponent.revalidate()[ FD ]
Line_10 $$ final JLayeredPane layeredPane = rootPane.getLayeredPane()-->Line_25 $$ layeredPane.remove(inplaceEditorComponent)[ FD ]
Line_2 $$ public final void show() -->Line_129 $$ myRemoveActions.add(new Runnable() [ CD ]
Line_31 $$ final ComponentAdapter componentListener = new ComponentAdapter() -->Line_36 $$ ApplicationManager.getApplication().invokeLater(new Runnable() [ CD ]
Line_6 $$ final JRootPane rootPane = tree.getRootPane()-->Line_79 $$ rootPane.removeComponentListener(componentListener)[ FD ]
Line_36 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_40 $$ if (!isShown() || project == null || project.isDisposed()) [ CD ]
Line_2 $$ public final void show() -->Line_10 $$ final JLayeredPane layeredPane = rootPane.getLayeredPane()[ CD ]
Line_43 $$ JTree tree = getTree()-->Line_65 $$ if (!tree.isShowing()) [ FD ]
Line_2 $$ public final void show() -->Line_71 $$ tree.addComponentListener(componentListener)[ CD ]
Line_6 $$ final JRootPane rootPane = tree.getRootPane()-->Line_72 $$ rootPane.addComponentListener(componentListener)[ FD ]
Line_10 $$ final JLayeredPane layeredPane = rootPane.getLayeredPane()-->Line_49 $$ Point layeredPanePoint = SwingUtilities.convertPoint(tree, bounds.x, bounds.y, layeredPane)[ FD ]
Line_73 $$ myRemoveActions.add(new Runnable() -->Line_77 $$ tree.removeHierarchyListener(hierarchyListener)[ CD ]
Line_83 $$ getProject().getMessageBus().connect(disposable).subscribe(RunContentManager.TOPIC, new RunContentWithExecutorListener() -->Line_87 $$ cancelEditing()[ CD ]
Line_4 $$ final JTree tree = getTree()-->Line_78 $$ tree.removeComponentListener(componentListener)[ FD ]
Line_2 $$ public final void show() -->Line_136 $$ onShown()[ CD ]
Line_4 $$ final JTree tree = getTree()-->Line_71 $$ tree.addComponentListener(componentListener)[ FD ]
Line_4 $$ final JTree tree = getTree()-->Line_77 $$ tree.removeHierarchyListener(hierarchyListener)[ FD ]
Line_2 $$ public final void show() -->Line_5 $$ tree.scrollPathToVisible(getNodePath())[ CD ]
Line_36 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_46 $$ if (bounds == null) [ CD ]
Line_7 $$ if (rootPane == null) -->Line_8 $$ return[ CD ]
Line_36 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_45 $$ Rectangle bounds = getEditorBounds()[ CD ]
Line_95 $$ myRemoveActions.add(new Runnable() -->Line_99 $$ Disposer.dispose(disposable)[ CD ]
Line_36 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_49 $$ Point layeredPanePoint = SwingUtilities.convertPoint(tree, bounds.x, bounds.y, layeredPane)[ CD ]
Line_73 $$ myRemoveActions.add(new Runnable() -->Line_79 $$ rootPane.removeComponentListener(componentListener)[ CD ]
Line_6 $$ final JRootPane rootPane = tree.getRootPane()-->Line_10 $$ final JLayeredPane layeredPane = rootPane.getLayeredPane()[ FD ]
Line_36 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_51 $$ inplaceEditorComponent.revalidate()[ CD ]
Line_2 $$ public final void show() -->Line_83 $$ getProject().getMessageBus().connect(disposable).subscribe(RunContentManager.TOPIC, new RunContentWithExecutorListener() [ CD ]
Line_10 $$ final JLayeredPane layeredPane = rootPane.getLayeredPane()-->Line_15 $$ Point layeredPanePoint = SwingUtilities.convertPoint(tree, bounds.x, bounds.y, layeredPane)[ FD ]
Line_83 $$ getProject().getMessageBus().connect(disposable).subscribe(RunContentManager.TOPIC, new RunContentWithExecutorListener() -->Line_92 $$ cancelEditing()[ CD ]
Line_16 $$ final JComponent inplaceEditorComponent = createInplaceEditorComponent()-->Line_19 $$ setInplaceEditorBounds(inplaceEditorComponent, layeredPanePoint.x, layeredPanePoint.y, bounds.width, bounds.height)[ FD ]
Line_2 $$ public final void show() -->Line_70 $$ tree.addHierarchyListener(hierarchyListener)[ CD ]
Line_129 $$ myRemoveActions.add(new Runnable() -->Line_133 $$ defaultToolkit.removeAWTEventListener(TreeInplaceEditor.this)[ CD ]
Line_2 $$ public final void show() -->Line_29 $$ inplaceEditorComponent.paintImmediately(0, 0, inplaceEditorComponent.getWidth(), inplaceEditorComponent.getHeight())[ CD ]
Line_36 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_44 $$ JLayeredPane layeredPane = tree.getRootPane().getLayeredPane()[ CD ]
Line_2 $$ public final void show() -->Line_3 $$ LOG.assertTrue(myInplaceEditorComponent == null, "editor is not released")[ CD ]
Line_36 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_50 $$ setInplaceEditorBounds(inplaceEditorComponent, layeredPanePoint.x, layeredPanePoint.y, bounds.width, bounds.height)[ CD ]
Line_43 $$ JTree tree = getTree()-->Line_49 $$ Point layeredPanePoint = SwingUtilities.convertPoint(tree, bounds.x, bounds.y, layeredPane)[ FD ]
Line_43 $$ JTree tree = getTree()-->Line_44 $$ JLayeredPane layeredPane = tree.getRootPane().getLayeredPane()[ FD ]
Line_2 $$ public final void show() -->Line_103 $$ editorComponent.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "enterStroke")[ CD ]
Line_73 $$ myRemoveActions.add(new Runnable() -->Line_78 $$ tree.removeComponentListener(componentListener)[ CD ]
Line_4 $$ final JTree tree = getTree()-->Line_15 $$ Point layeredPanePoint = SwingUtilities.convertPoint(tree, bounds.x, bounds.y, layeredPane)[ FD ]
Line_2 $$ public final void show() -->Line_102 $$ final JComponent editorComponent = getEditorComponent()[ CD ]
Line_35 $$ final Project project = getProject()-->Line_40 $$ if (!isShown() || project == null || project.isDisposed()) [ FD ]
Line_2 $$ public final void show() -->Line_21 $$ myRemoveActions.add(new Runnable() [ CD ]
Line_2 $$ public final void show() -->Line_15 $$ Point layeredPanePoint = SwingUtilities.convertPoint(tree, bounds.x, bounds.y, layeredPane)[ CD ]
Line_21 $$ myRemoveActions.add(new Runnable() -->Line_25 $$ layeredPane.remove(inplaceEditorComponent)[ CD ]
Line_2 $$ public final void show() -->Line_7 $$ if (rootPane == null) [ CD ]
Line_120 $$ SwingUtilities.invokeLater(new Runnable() -->Line_124 $$ if (!isShown())[ CD ]
Line_40 $$ if (!isShown() || project == null || project.isDisposed()) -->Line_41 $$ return[ CD ]
Line_2 $$ public final void show() -->Line_120 $$ SwingUtilities.invokeLater(new Runnable() [ CD ]
Line_2 $$ public final void show() -->Line_6 $$ final JRootPane rootPane = tree.getRootPane()[ CD ]
Line_43 $$ JTree tree = getTree()-->Line_78 $$ tree.removeComponentListener(componentListener)[ FD ]
Line_10 $$ final JLayeredPane layeredPane = rootPane.getLayeredPane()-->Line_20 $$ layeredPane.add(inplaceEditorComponent, new Integer(250))[ FD ]
Line_4 $$ final JTree tree = getTree()-->Line_5 $$ tree.scrollPathToVisible(getNodePath())[ FD ]
Line_124 $$ if (!isShown())-->Line_125 $$ return[ CD ]
Line_2 $$ public final void show() -->Line_30 $$ getPreferredFocusedComponent().requestFocus()[ CD ]
Line_104 $$ editorComponent.getActionMap().put("enterStroke", new AbstractAction() -->Line_108 $$ doOKAction()[ CD ]
Line_120 $$ SwingUtilities.invokeLater(new Runnable() -->Line_126 $$ defaultToolkit.addAWTEventListener(TreeInplaceEditor.this, AWTEvent.MOUSE_EVENT_MASK | AWTEvent.MOUSE_WHEEL_EVENT_MASK)[ CD ]
Line_2 $$ public final void show() -->Line_104 $$ editorComponent.getActionMap().put("enterStroke", new AbstractAction() [ CD ]
Line_4 $$ final JTree tree = getTree()-->Line_70 $$ tree.addHierarchyListener(hierarchyListener)[ FD ]
Line_46 $$ if (bounds == null) -->Line_47 $$ return[ CD ]
Line_11 $$ Rectangle bounds = getEditorBounds()-->Line_46 $$ if (bounds == null) [ FD ]
Line_31 $$ final ComponentAdapter componentListener = new ComponentAdapter() -->Line_58 $$ cancelEditing()[ CD ]
Line_2 $$ public final void show() -->Line_19 $$ setInplaceEditorBounds(inplaceEditorComponent, layeredPanePoint.x, layeredPanePoint.y, bounds.width, bounds.height)[ CD ]
Line_44 $$ JLayeredPane layeredPane = tree.getRootPane().getLayeredPane()-->Line_49 $$ Point layeredPanePoint = SwingUtilities.convertPoint(tree, bounds.x, bounds.y, layeredPane)[ FD ]
Line_2 $$ public final void show() -->Line_11 $$ Rectangle bounds = getEditorBounds()[ CD ]
Line_12 $$ if (bounds == null) -->Line_13 $$ return[ CD ]
Line_2 $$ public final void show() -->Line_111 $$ editorComponent.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "escapeStroke")[ CD ]
Line_2 $$ public final void show() -->Line_112 $$ editorComponent.getActionMap().put("escapeStroke", new AbstractAction() [ CD ]
Line_2 $$ public final void show() -->Line_119 $$ final Toolkit defaultToolkit = Toolkit.getDefaultToolkit()[ CD ]
Line_2 $$ public final void show() -->Line_72 $$ rootPane.addComponentListener(componentListener)[ CD ]
Line_112 $$ editorComponent.getActionMap().put("escapeStroke", new AbstractAction() -->Line_116 $$ cancelEditing()[ CD ]
Line_2 $$ public final void show() -->Line_20 $$ layeredPane.add(inplaceEditorComponent, new Integer(250))[ CD ]
Line_16 $$ final JComponent inplaceEditorComponent = createInplaceEditorComponent()-->Line_29 $$ inplaceEditorComponent.paintImmediately(0, 0, inplaceEditorComponent.getWidth(), inplaceEditorComponent.getHeight())[ FD ]
Line_16 $$ final JComponent inplaceEditorComponent = createInplaceEditorComponent()-->Line_25 $$ layeredPane.remove(inplaceEditorComponent)[ FD ]
Line_43 $$ JTree tree = getTree()-->Line_71 $$ tree.addComponentListener(componentListener)[ FD ]
