Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_17 $$ holder.append("}\n")[ FD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_20 $$ holder.append('\n')[ CD ]
Line_6 $$ for (int id : colorRegistry.getAllIds()) -->Line_7 $$ Color color = colorRegistry.dataById(id)[ FD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_3 $$ holder.append(HEADER_PREFIX)[ CD ]
Line_6 $$ for (int id : colorRegistry.getAllIds()) -->Line_15 $$ holder.append(String.format("[ FD ]
Line_12 $$ FontNameRegistry fontNameRegistry = mySyntaxInfo.getFontNameRegistry()-->Line_13 $$ for (int id : fontNameRegistry.getAllIds()) [ FD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_22 $$ holder.append("\\par")[ FD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_20 $$ holder.append('\n')[ FD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_23 $$ holder.append(HEADER_SUFFIX)[ FD ]
Line_5 $$ ColorRegistry colorRegistry = mySyntaxInfo.getColorRegistry()-->Line_6 $$ for (int id : colorRegistry.getAllIds()) [ FD ]
Line_7 $$ Color color = colorRegistry.dataById(id)-->Line_8 $$ holder.append(String.format("\\red%d\\green%d\\blue%d;", color.getRed(), color.getGreen(), color.getBlue()))[ FD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_18 $$ holder.append("\n\\s0\\box").append("\\cbpat").append(mySyntaxInfo.getDefaultBackground()).append("\\cb").append(mySyntaxInfo.getDefaultBackground())[ FD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_21 $$ mySyntaxInfo.processOutputInfo(new MyVisitor(holder, myRawText, mySyntaxInfo, maxLength))[ CD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_3 $$ holder.append(HEADER_PREFIX)[ FD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_10 $$ holder.append("}\n")[ CD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_4 $$ holder.append("[ FD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_15 $$ holder.append(String.format("[ FD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_19 $$ addFontSize(holder, mySyntaxInfo.getFontSize())[ FD ]
Line_5 $$ ColorRegistry colorRegistry = mySyntaxInfo.getColorRegistry()-->Line_7 $$ Color color = colorRegistry.dataById(id)[ FD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_11 $$ holder.append("[ FD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_19 $$ addFontSize(holder, mySyntaxInfo.getFontSize())[ CD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_23 $$ holder.append(HEADER_SUFFIX)[ CD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_17 $$ holder.append("}\n")[ CD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_18 $$ holder.append("\n\\s0\\box").append("\\cbpat").append(mySyntaxInfo.getDefaultBackground()).append("\\cb").append(mySyntaxInfo.getDefaultBackground())[ CD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_22 $$ holder.append("\\par")[ CD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_12 $$ FontNameRegistry fontNameRegistry = mySyntaxInfo.getFontNameRegistry()[ CD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_8 $$ holder.append(String.format("\\red%d\\green%d\\blue%d;", color.getRed(), color.getGreen(), color.getBlue()))[ FD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_11 $$ holder.append("[ CD ]
Line_6 $$ for (int id : colorRegistry.getAllIds()) -->Line_14 $$ String fontName = fontNameRegistry.dataById(id)[ FD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_10 $$ holder.append("}\n")[ FD ]
Line_12 $$ FontNameRegistry fontNameRegistry = mySyntaxInfo.getFontNameRegistry()-->Line_14 $$ String fontName = fontNameRegistry.dataById(id)[ FD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_4 $$ holder.append("[ CD ]
Line_14 $$ String fontName = fontNameRegistry.dataById(id)-->Line_15 $$ holder.append(String.format("[ FD ]
Line_2 $$ protected void build(@NotNull final StringBuilder holder, final int maxLength) -->Line_5 $$ ColorRegistry colorRegistry = mySyntaxInfo.getColorRegistry()[ CD ]
