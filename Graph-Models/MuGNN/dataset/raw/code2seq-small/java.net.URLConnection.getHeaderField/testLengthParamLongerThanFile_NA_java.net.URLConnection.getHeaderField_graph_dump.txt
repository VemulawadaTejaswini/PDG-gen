Line_7 $$ String content = "testLengthParamLongerThanFile"-->Line_28 $$ assertEquals(content, new String(respBody, "US-ASCII"))[ FD ]
Line_7 $$ String content = "testLengthParamLongerThanFile"-->Line_15 $$ URL url = webhdfs.toUrl(op, testFile, new LengthParam(Long.valueOf(content.length() + 1)))[ FD ]
Line_2 $$ public void testLengthParamLongerThanFile() throws IOException -->Line_7 $$ String content = "testLengthParamLongerThanFile"[ CD ]
Line_16 $$ HttpURLConnection conn = null-->Line_24 $$ assertEquals(String.valueOf(content.length()), conn.getHeaderField("Content-Length"))[ FD ]
Line_19 $$ conn = (HttpURLConnection) url.openConnection()-->Line_31 $$ if (conn != null) [ FD ]
Line_19 $$ conn = (HttpURLConnection) url.openConnection()-->Line_21 $$ conn.setDoOutput(op.getDoOutput())[ FD ]
Line_2 $$ public void testLengthParamLongerThanFile() throws IOException -->Line_15 $$ URL url = webhdfs.toUrl(op, testFile, new LengthParam(Long.valueOf(content.length() + 1)))[ CD ]
Line_2 $$ public void testLengthParamLongerThanFile() throws IOException -->Line_17 $$ InputStream is = null[ CD ]
Line_19 $$ conn = (HttpURLConnection) url.openConnection()-->Line_20 $$ conn.setRequestMethod(op.getType().toString())[ FD ]
Line_14 $$ HttpOpParam.Op op = GetOpParam.Op.OPEN-->Line_20 $$ conn.setRequestMethod(op.getType().toString())[ FD ]
Line_26 $$ is = conn.getInputStream()-->Line_30 $$ IOUtils.closeStream(is)[ FD ]
Line_2 $$ public void testLengthParamLongerThanFile() throws IOException -->Line_5 $$ assertTrue(webhdfs.mkdirs(dir))[ CD ]
Line_14 $$ HttpOpParam.Op op = GetOpParam.Op.OPEN-->Line_21 $$ conn.setDoOutput(op.getDoOutput())[ FD ]
Line_3 $$ WebHdfsFileSystem webhdfs = (WebHdfsFileSystem) fs-->Line_8 $$ FSDataOutputStream testFileOut = webhdfs.create(testFile)[ FD ]
Line_2 $$ public void testLengthParamLongerThanFile() throws IOException -->Line_4 $$ Path dir = new Path("/test")[ CD ]
Line_2 $$ public void testLengthParamLongerThanFile() throws IOException -->Line_14 $$ HttpOpParam.Op op = GetOpParam.Op.OPEN[ CD ]
Line_25 $$ byte[] respBody = new byte[content.length()]-->Line_27 $$ IOUtils.readFully(is, respBody, 0, content.length())[ FD ]
Line_16 $$ HttpURLConnection conn = null-->Line_31 $$ if (conn != null) [ FD ]
Line_8 $$ FSDataOutputStream testFileOut = webhdfs.create(testFile)-->Line_10 $$ testFileOut.write(content.getBytes("US-ASCII"))[ FD ]
Line_16 $$ HttpURLConnection conn = null-->Line_20 $$ conn.setRequestMethod(op.getType().toString())[ FD ]
Line_17 $$ InputStream is = null-->Line_27 $$ IOUtils.readFully(is, respBody, 0, content.length())[ FD ]
Line_7 $$ String content = "testLengthParamLongerThanFile"-->Line_10 $$ testFileOut.write(content.getBytes("US-ASCII"))[ FD ]
Line_16 $$ HttpURLConnection conn = null-->Line_26 $$ is = conn.getInputStream()[ FD ]
Line_7 $$ String content = "testLengthParamLongerThanFile"-->Line_24 $$ assertEquals(String.valueOf(content.length()), conn.getHeaderField("Content-Length"))[ FD ]
Line_31 $$ if (conn != null) -->Line_32 $$ conn.disconnect()[ CD ]
Line_15 $$ URL url = webhdfs.toUrl(op, testFile, new LengthParam(Long.valueOf(content.length() + 1)))-->Line_19 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_19 $$ conn = (HttpURLConnection) url.openConnection()-->Line_23 $$ assertEquals(HttpServletResponse.SC_OK, conn.getResponseCode())[ FD ]
Line_2 $$ public void testLengthParamLongerThanFile() throws IOException -->Line_16 $$ HttpURLConnection conn = null[ CD ]
Line_2 $$ public void testLengthParamLongerThanFile() throws IOException -->Line_3 $$ WebHdfsFileSystem webhdfs = (WebHdfsFileSystem) fs[ CD ]
Line_16 $$ HttpURLConnection conn = null-->Line_22 $$ conn.setInstanceFollowRedirects(true)[ FD ]
Line_7 $$ String content = "testLengthParamLongerThanFile"-->Line_27 $$ IOUtils.readFully(is, respBody, 0, content.length())[ FD ]
Line_16 $$ HttpURLConnection conn = null-->Line_23 $$ assertEquals(HttpServletResponse.SC_OK, conn.getResponseCode())[ FD ]
Line_3 $$ WebHdfsFileSystem webhdfs = (WebHdfsFileSystem) fs-->Line_5 $$ assertTrue(webhdfs.mkdirs(dir))[ FD ]
Line_2 $$ public void testLengthParamLongerThanFile() throws IOException -->Line_6 $$ Path testFile = new Path("/test/testLengthParamLongerThanFile")[ CD ]
Line_2 $$ public void testLengthParamLongerThanFile() throws IOException -->Line_8 $$ FSDataOutputStream testFileOut = webhdfs.create(testFile)[ CD ]
Line_6 $$ Path testFile = new Path("/test/testLengthParamLongerThanFile")-->Line_8 $$ FSDataOutputStream testFileOut = webhdfs.create(testFile)[ FD ]
Line_14 $$ HttpOpParam.Op op = GetOpParam.Op.OPEN-->Line_15 $$ URL url = webhdfs.toUrl(op, testFile, new LengthParam(Long.valueOf(content.length() + 1)))[ FD ]
Line_7 $$ String content = "testLengthParamLongerThanFile"-->Line_25 $$ byte[] respBody = new byte[content.length()][ FD ]
Line_26 $$ is = conn.getInputStream()-->Line_27 $$ IOUtils.readFully(is, respBody, 0, content.length())[ FD ]
Line_17 $$ InputStream is = null-->Line_26 $$ is = conn.getInputStream()[ FD ]
Line_19 $$ conn = (HttpURLConnection) url.openConnection()-->Line_24 $$ assertEquals(String.valueOf(content.length()), conn.getHeaderField("Content-Length"))[ FD ]
Line_16 $$ HttpURLConnection conn = null-->Line_32 $$ conn.disconnect()[ FD ]
Line_16 $$ HttpURLConnection conn = null-->Line_19 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_16 $$ HttpURLConnection conn = null-->Line_21 $$ conn.setDoOutput(op.getDoOutput())[ FD ]
Line_17 $$ InputStream is = null-->Line_30 $$ IOUtils.closeStream(is)[ FD ]
Line_8 $$ FSDataOutputStream testFileOut = webhdfs.create(testFile)-->Line_12 $$ IOUtils.closeStream(testFileOut)[ FD ]
Line_3 $$ WebHdfsFileSystem webhdfs = (WebHdfsFileSystem) fs-->Line_15 $$ URL url = webhdfs.toUrl(op, testFile, new LengthParam(Long.valueOf(content.length() + 1)))[ FD ]
Line_19 $$ conn = (HttpURLConnection) url.openConnection()-->Line_22 $$ conn.setInstanceFollowRedirects(true)[ FD ]
Line_6 $$ Path testFile = new Path("/test/testLengthParamLongerThanFile")-->Line_15 $$ URL url = webhdfs.toUrl(op, testFile, new LengthParam(Long.valueOf(content.length() + 1)))[ FD ]
Line_19 $$ conn = (HttpURLConnection) url.openConnection()-->Line_32 $$ conn.disconnect()[ FD ]
Line_4 $$ Path dir = new Path("/test")-->Line_5 $$ assertTrue(webhdfs.mkdirs(dir))[ FD ]
Line_19 $$ conn = (HttpURLConnection) url.openConnection()-->Line_26 $$ is = conn.getInputStream()[ FD ]
