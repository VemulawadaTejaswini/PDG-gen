Line_2 $$ private URLConnection openConnection(URL aSource) throws IOException -->Line_13 $$ if (isAuthInfoSet) [ CD ]
Line_2 $$ private URLConnection openConnection(URL aSource) throws IOException -->Line_12 $$ boolean isAuthInfoSet = !Strings.isNullOrEmpty(aSource.getUserInfo())[ CD ]
Line_34 $$ if (responseCode == HttpURLConnection.HTTP_MOVED_PERM || responseCode == HttpURLConnection.HTTP_MOVED_TEMP || responseCode == HttpURLConnection.HTTP_SEE_OTHER) -->Line_36 $$ URL newURL = new URL(newLocation)[ CD ]
Line_36 $$ URL newURL = new URL(newLocation)-->Line_37 $$ if (!redirectionAllowed(aSource, newURL)) [ FD ]
Line_32 $$ HttpURLConnection httpConnection = (HttpURLConnection) connection-->Line_33 $$ int responseCode = httpConnection.getResponseCode()[ FD ]
Line_20 $$ if (connection instanceof HttpURLConnection) -->Line_23 $$ connection.setConnectTimeout(5000)[ CD ]
Line_34 $$ if (responseCode == HttpURLConnection.HTTP_MOVED_PERM || responseCode == HttpURLConnection.HTTP_MOVED_TEMP || responseCode == HttpURLConnection.HTTP_SEE_OTHER) -->Line_40 $$ return openConnection(newURL)[ CD ]
Line_2 $$ private URLConnection openConnection(URL aSource) throws IOException -->Line_26 $$ connection.setRequestProperty("ES-Build-Hash", Build.CURRENT.shortHash())[ CD ]
Line_13 $$ if (isAuthInfoSet) -->Line_18 $$ connection.setRequestProperty("Authorization", "Basic " + basicAuth)[ CD ]
Line_20 $$ if (connection instanceof HttpURLConnection) -->Line_21 $$ ((HttpURLConnection) connection).setInstanceFollowRedirects(false)[ CD ]
Line_37 $$ if (!redirectionAllowed(aSource, newURL)) -->Line_38 $$ return null[ CD ]
Line_2 $$ private URLConnection openConnection(URL aSource) throws IOException -->Line_25 $$ connection.setRequestProperty("ES-Version", Version.CURRENT.toString())[ CD ]
Line_2 $$ private URLConnection openConnection(URL aSource) throws IOException -->Line_20 $$ if (connection instanceof HttpURLConnection) [ CD ]
Line_32 $$ HttpURLConnection httpConnection = (HttpURLConnection) connection-->Line_35 $$ String newLocation = httpConnection.getHeaderField("Location")[ FD ]
Line_13 $$ if (isAuthInfoSet) -->Line_14 $$ if (!isSecureProcotol) [ CD ]
Line_2 $$ private URLConnection openConnection(URL aSource) throws IOException -->Line_27 $$ connection.setRequestProperty("User-Agent", "elasticsearch-plugin-manager")[ CD ]
Line_2 $$ private URLConnection openConnection(URL aSource) throws IOException -->Line_37 $$ if (!redirectionAllowed(aSource, newURL)) [ FD ]
Line_36 $$ URL newURL = new URL(newLocation)-->Line_40 $$ return openConnection(newURL)[ FD ]
Line_34 $$ if (responseCode == HttpURLConnection.HTTP_MOVED_PERM || responseCode == HttpURLConnection.HTTP_MOVED_TEMP || responseCode == HttpURLConnection.HTTP_SEE_OTHER) -->Line_37 $$ if (!redirectionAllowed(aSource, newURL)) [ CD ]
Line_20 $$ if (connection instanceof HttpURLConnection) -->Line_22 $$ connection.setUseCaches(true)[ CD ]
Line_2 $$ private URLConnection openConnection(URL aSource) throws IOException -->Line_12 $$ boolean isAuthInfoSet = !Strings.isNullOrEmpty(aSource.getUserInfo())[ FD ]
Line_34 $$ if (responseCode == HttpURLConnection.HTTP_MOVED_PERM || responseCode == HttpURLConnection.HTTP_MOVED_TEMP || responseCode == HttpURLConnection.HTTP_SEE_OTHER) -->Line_35 $$ String newLocation = httpConnection.getHeaderField("Location")[ CD ]
Line_13 $$ if (isAuthInfoSet) -->Line_17 $$ String basicAuth = Base64.encodeBytes(aSource.getUserInfo().getBytes(StandardCharsets.UTF_8))[ CD ]
Line_2 $$ private URLConnection openConnection(URL aSource) throws IOException -->Line_17 $$ String basicAuth = Base64.encodeBytes(aSource.getUserInfo().getBytes(StandardCharsets.UTF_8))[ FD ]
