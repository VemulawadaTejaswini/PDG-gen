Line_8 $$ ReloadingX509TrustManager tm = new ReloadingX509TrustManager("jks", truststoreLocation, "password", 10)-->Line_21 $$ tm.destroy()[ FD ]
Line_2 $$ public void testReloadCorruptTrustStore() throws Exception -->Line_5 $$ cert2 = generateCertificate("CN=Cert2", kp, 30, "SHA1withRSA")[ CD ]
Line_2 $$ public void testReloadCorruptTrustStore() throws Exception -->Line_8 $$ ReloadingX509TrustManager tm = new ReloadingX509TrustManager("jks", truststoreLocation, "password", 10)[ CD ]
Line_8 $$ ReloadingX509TrustManager tm = new ReloadingX509TrustManager("jks", truststoreLocation, "password", 10)-->Line_18 $$ assertEquals(1, tm.getAcceptedIssuers().length)[ FD ]
Line_3 $$ KeyPair kp = generateKeyPair("RSA")-->Line_5 $$ cert2 = generateCertificate("CN=Cert2", kp, 30, "SHA1withRSA")[ FD ]
Line_13 $$ OutputStream os = new FileOutputStream(truststoreLocation)-->Line_15 $$ os.close()[ FD ]
Line_6 $$ String truststoreLocation = BASEDIR + "/testcorrupt.jks"-->Line_7 $$ createTrustStore(truststoreLocation, "password", "cert1", cert1)[ FD ]
Line_8 $$ ReloadingX509TrustManager tm = new ReloadingX509TrustManager("jks", truststoreLocation, "password", 10)-->Line_11 $$ assertEquals(1, tm.getAcceptedIssuers().length)[ FD ]
Line_8 $$ ReloadingX509TrustManager tm = new ReloadingX509TrustManager("jks", truststoreLocation, "password", 10)-->Line_17 $$ Thread.sleep((tm.getReloadInterval() + 200))[ FD ]
Line_8 $$ ReloadingX509TrustManager tm = new ReloadingX509TrustManager("jks", truststoreLocation, "password", 10)-->Line_12 $$ X509Certificate cert = tm.getAcceptedIssuers()[0][ FD ]
Line_2 $$ public void testReloadCorruptTrustStore() throws Exception -->Line_3 $$ KeyPair kp = generateKeyPair("RSA")[ CD ]
Line_12 $$ X509Certificate cert = tm.getAcceptedIssuers()[0]-->Line_19 $$ assertEquals(cert, tm.getAcceptedIssuers()[0])[ FD ]
Line_2 $$ public void testReloadCorruptTrustStore() throws Exception -->Line_7 $$ createTrustStore(truststoreLocation, "password", "cert1", cert1)[ CD ]
Line_2 $$ public void testReloadCorruptTrustStore() throws Exception -->Line_6 $$ String truststoreLocation = BASEDIR + "/testcorrupt.jks"[ CD ]
Line_3 $$ KeyPair kp = generateKeyPair("RSA")-->Line_4 $$ cert1 = generateCertificate("CN=Cert1", kp, 30, "SHA1withRSA")[ FD ]
Line_8 $$ ReloadingX509TrustManager tm = new ReloadingX509TrustManager("jks", truststoreLocation, "password", 10)-->Line_19 $$ assertEquals(cert, tm.getAcceptedIssuers()[0])[ FD ]
Line_13 $$ OutputStream os = new FileOutputStream(truststoreLocation)-->Line_14 $$ os.write(1)[ FD ]
Line_2 $$ public void testReloadCorruptTrustStore() throws Exception -->Line_4 $$ cert1 = generateCertificate("CN=Cert1", kp, 30, "SHA1withRSA")[ CD ]
Line_8 $$ ReloadingX509TrustManager tm = new ReloadingX509TrustManager("jks", truststoreLocation, "password", 10)-->Line_10 $$ tm.init()[ FD ]
