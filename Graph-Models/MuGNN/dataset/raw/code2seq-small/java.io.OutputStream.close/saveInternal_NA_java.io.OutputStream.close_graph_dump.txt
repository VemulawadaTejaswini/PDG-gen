Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_22 $$ prog.endStep(Phase.SAVING_CHECKPOINT, step)[ CD ]
Line_18 $$ Step step = new Step(StepType.INODES, filePath)-->Line_30 $$ prog.endStep(Phase.SAVING_CHECKPOINT, step)[ FD ]
Line_18 $$ Step step = new Step(StepType.INODES, filePath)-->Line_26 $$ prog.endStep(Phase.SAVING_CHECKPOINT, step)[ FD ]
Line_18 $$ Step step = new Step(StepType.INODES, filePath)-->Line_24 $$ prog.beginStep(Phase.SAVING_CHECKPOINT, step)[ FD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_29 $$ saveCacheManagerSection(b)[ CD ]
Line_3 $$ StartupProgress prog = NameNode.getStartupProgress()-->Line_26 $$ prog.endStep(Phase.SAVING_CHECKPOINT, step)[ FD ]
Line_18 $$ Step step = new Step(StepType.INODES, filePath)-->Line_19 $$ prog.beginStep(Phase.SAVING_CHECKPOINT, step)[ FD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_9 $$ codec = compression.getImageCodec()[ FD ]
Line_3 $$ StartupProgress prog = NameNode.getStartupProgress()-->Line_28 $$ prog.beginStep(Phase.SAVING_CHECKPOINT, step)[ FD ]
Line_8 $$ FileSummary.Builder b = FileSummary.newBuilder().setOndiskVersion(FSImageUtil.FILE_VERSION).setLayoutVersion(NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_16 $$ saveNameSystemSection(b)[ FD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_3 $$ StartupProgress prog = NameNode.getStartupProgress()[ CD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_28 $$ prog.beginStep(Phase.SAVING_CHECKPOINT, step)[ CD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_8 $$ FileSummary.Builder b = FileSummary.newBuilder().setOndiskVersion(FSImageUtil.FILE_VERSION).setLayoutVersion(NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)[ CD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_33 $$ FileSummary summary = b.build()[ CD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_20 $$ saveInodes(b)[ CD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_6 $$ underlyingOutputStream.write(FSImageUtil.MAGIC_HEADER)[ CD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_7 $$ fileChannel = fout.getChannel()[ CD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_24 $$ prog.beginStep(Phase.SAVING_CHECKPOINT, step)[ CD ]
Line_10 $$ if (codec != null) -->Line_12 $$ sectionOutputStream = codec.createOutputStream(underlyingOutputStream)[ CD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_17 $$ context.checkCancelled()[ CD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_25 $$ saveSecretManagerSection(b)[ CD ]
Line_23 $$ step = new Step(StepType.DELEGATION_TOKENS, filePath)-->Line_26 $$ prog.endStep(Phase.SAVING_CHECKPOINT, step)[ FD ]
Line_8 $$ FileSummary.Builder b = FileSummary.newBuilder().setOndiskVersion(FSImageUtil.FILE_VERSION).setLayoutVersion(NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_33 $$ FileSummary summary = b.build()[ FD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_26 $$ prog.endStep(Phase.SAVING_CHECKPOINT, step)[ CD ]
Line_3 $$ StartupProgress prog = NameNode.getStartupProgress()-->Line_19 $$ prog.beginStep(Phase.SAVING_CHECKPOINT, step)[ FD ]
Line_10 $$ if (codec != null) -->Line_11 $$ b.setCodec(codec.getClass().getCanonicalName())[ CD ]
Line_8 $$ FileSummary.Builder b = FileSummary.newBuilder().setOndiskVersion(FSImageUtil.FILE_VERSION).setLayoutVersion(NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_25 $$ saveSecretManagerSection(b)[ FD ]
Line_33 $$ FileSummary summary = b.build()-->Line_34 $$ saveFileSummary(underlyingOutputStream, summary)[ FD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_34 $$ saveFileSummary(underlyingOutputStream, summary)[ CD ]
Line_4 $$ MessageDigest digester = MD5Hash.getDigester()-->Line_36 $$ savedDigest = new MD5Hash(digester.digest())[ FD ]
Line_23 $$ step = new Step(StepType.DELEGATION_TOKENS, filePath)-->Line_27 $$ step = new Step(StepType.CACHE_POOLS, filePath)[ FD ]
Line_23 $$ step = new Step(StepType.DELEGATION_TOKENS, filePath)-->Line_30 $$ prog.endStep(Phase.SAVING_CHECKPOINT, step)[ FD ]
Line_27 $$ step = new Step(StepType.CACHE_POOLS, filePath)-->Line_30 $$ prog.endStep(Phase.SAVING_CHECKPOINT, step)[ FD ]
Line_8 $$ FileSummary.Builder b = FileSummary.newBuilder().setOndiskVersion(FSImageUtil.FILE_VERSION).setLayoutVersion(NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_21 $$ saveSnapshots(b)[ FD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_4 $$ MessageDigest digester = MD5Hash.getDigester()[ CD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_23 $$ step = new Step(StepType.DELEGATION_TOKENS, filePath)[ CD ]
Line_23 $$ step = new Step(StepType.DELEGATION_TOKENS, filePath)-->Line_28 $$ prog.beginStep(Phase.SAVING_CHECKPOINT, step)[ FD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_10 $$ if (codec != null) [ CD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_31 $$ saveStringTableSection(b)[ CD ]
Line_8 $$ FileSummary.Builder b = FileSummary.newBuilder().setOndiskVersion(FSImageUtil.FILE_VERSION).setLayoutVersion(NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_29 $$ saveCacheManagerSection(b)[ FD ]
Line_3 $$ StartupProgress prog = NameNode.getStartupProgress()-->Line_30 $$ prog.endStep(Phase.SAVING_CHECKPOINT, step)[ FD ]
Line_8 $$ FileSummary.Builder b = FileSummary.newBuilder().setOndiskVersion(FSImageUtil.FILE_VERSION).setLayoutVersion(NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_31 $$ saveStringTableSection(b)[ FD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_35 $$ underlyingOutputStream.close()[ CD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_32 $$ flushSectionOutputStream()[ CD ]
Line_27 $$ step = new Step(StepType.CACHE_POOLS, filePath)-->Line_28 $$ prog.beginStep(Phase.SAVING_CHECKPOINT, step)[ FD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_27 $$ step = new Step(StepType.CACHE_POOLS, filePath)[ CD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_30 $$ prog.endStep(Phase.SAVING_CHECKPOINT, step)[ CD ]
Line_3 $$ StartupProgress prog = NameNode.getStartupProgress()-->Line_24 $$ prog.beginStep(Phase.SAVING_CHECKPOINT, step)[ FD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_16 $$ saveNameSystemSection(b)[ CD ]
Line_8 $$ FileSummary.Builder b = FileSummary.newBuilder().setOndiskVersion(FSImageUtil.FILE_VERSION).setLayoutVersion(NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_20 $$ saveInodes(b)[ FD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_9 $$ codec = compression.getImageCodec()[ CD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_21 $$ saveSnapshots(b)[ CD ]
Line_3 $$ StartupProgress prog = NameNode.getStartupProgress()-->Line_22 $$ prog.endStep(Phase.SAVING_CHECKPOINT, step)[ FD ]
Line_23 $$ step = new Step(StepType.DELEGATION_TOKENS, filePath)-->Line_24 $$ prog.beginStep(Phase.SAVING_CHECKPOINT, step)[ FD ]
Line_18 $$ Step step = new Step(StepType.INODES, filePath)-->Line_27 $$ step = new Step(StepType.CACHE_POOLS, filePath)[ FD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_19 $$ prog.beginStep(Phase.SAVING_CHECKPOINT, step)[ CD ]
Line_18 $$ Step step = new Step(StepType.INODES, filePath)-->Line_23 $$ step = new Step(StepType.DELEGATION_TOKENS, filePath)[ FD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_7 $$ fileChannel = fout.getChannel()[ FD ]
Line_2 $$ private void saveInternal(FileOutputStream fout, FSImageCompression compression, String filePath) throws IOException -->Line_18 $$ Step step = new Step(StepType.INODES, filePath)[ CD ]
Line_8 $$ FileSummary.Builder b = FileSummary.newBuilder().setOndiskVersion(FSImageUtil.FILE_VERSION).setLayoutVersion(NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_11 $$ b.setCodec(codec.getClass().getCanonicalName())[ FD ]
Line_18 $$ Step step = new Step(StepType.INODES, filePath)-->Line_22 $$ prog.endStep(Phase.SAVING_CHECKPOINT, step)[ FD ]
Line_18 $$ Step step = new Step(StepType.INODES, filePath)-->Line_28 $$ prog.beginStep(Phase.SAVING_CHECKPOINT, step)[ FD ]
