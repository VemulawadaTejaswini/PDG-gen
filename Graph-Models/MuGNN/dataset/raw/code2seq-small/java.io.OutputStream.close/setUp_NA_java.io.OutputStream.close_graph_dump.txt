Line_2 $$ public static void setUp() throws Exception -->Line_15 $$ cluster.waitActive()[ CD ]
Line_2 $$ public static void setUp() throws Exception -->Line_9 $$ FileUtil.fullyDelete(base)[ CD ]
Line_8 $$ File base = new File(BASEDIR)-->Line_10 $$ base.mkdirs()[ FD ]
Line_2 $$ public static void setUp() throws Exception -->Line_19 $$ InetSocketAddress addr = cluster.getNameNode().getHttpsAddress()[ CD ]
Line_2 $$ public static void setUp() throws Exception -->Line_5 $$ conf.set(DFSConfigKeys.DFS_HTTP_POLICY_KEY, HttpConfig.Policy.HTTPS_ONLY.name())[ CD ]
Line_2 $$ public static void setUp() throws Exception -->Line_18 $$ os.close()[ CD ]
Line_2 $$ public static void setUp() throws Exception -->Line_16 $$ OutputStream os = cluster.getFileSystem().create(new Path("/test"))[ CD ]
Line_2 $$ public static void setUp() throws Exception -->Line_17 $$ os.write(23)[ CD ]
Line_2 $$ public static void setUp() throws Exception -->Line_6 $$ conf.set(DFSConfigKeys.DFS_NAMENODE_HTTPS_ADDRESS_KEY, "localhost:0")[ CD ]
Line_2 $$ public static void setUp() throws Exception -->Line_21 $$ conf.set(DFSConfigKeys.DFS_NAMENODE_HTTPS_ADDRESS_KEY, nnAddr)[ CD ]
Line_16 $$ OutputStream os = cluster.getFileSystem().create(new Path("/test"))-->Line_17 $$ os.write(23)[ FD ]
Line_2 $$ public static void setUp() throws Exception -->Line_20 $$ nnAddr = NetUtils.getHostPortString(addr)[ CD ]
Line_2 $$ public static void setUp() throws Exception -->Line_8 $$ File base = new File(BASEDIR)[ CD ]
Line_2 $$ public static void setUp() throws Exception -->Line_14 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()[ CD ]
Line_8 $$ File base = new File(BASEDIR)-->Line_9 $$ FileUtil.fullyDelete(base)[ FD ]
Line_2 $$ public static void setUp() throws Exception -->Line_7 $$ conf.set(DFSConfigKeys.DFS_DATANODE_HTTPS_ADDRESS_KEY, "localhost:0")[ CD ]
Line_2 $$ public static void setUp() throws Exception -->Line_13 $$ KeyStoreTestUtil.setupSSLConfig(keystoresDir, sslConfDir, conf, false)[ CD ]
Line_2 $$ public static void setUp() throws Exception -->Line_11 $$ keystoresDir = new File(BASEDIR).getAbsolutePath()[ CD ]
Line_16 $$ OutputStream os = cluster.getFileSystem().create(new Path("/test"))-->Line_18 $$ os.close()[ FD ]
Line_19 $$ InetSocketAddress addr = cluster.getNameNode().getHttpsAddress()-->Line_20 $$ nnAddr = NetUtils.getHostPortString(addr)[ FD ]
Line_2 $$ public static void setUp() throws Exception -->Line_12 $$ sslConfDir = KeyStoreTestUtil.getClasspathDir(TestHttpsFileSystem.class)[ CD ]
Line_2 $$ public static void setUp() throws Exception -->Line_10 $$ base.mkdirs()[ CD ]
Line_2 $$ public static void setUp() throws Exception -->Line_4 $$ conf.setBoolean(DFSConfigKeys.DFS_WEBHDFS_ENABLED_KEY, true)[ CD ]
