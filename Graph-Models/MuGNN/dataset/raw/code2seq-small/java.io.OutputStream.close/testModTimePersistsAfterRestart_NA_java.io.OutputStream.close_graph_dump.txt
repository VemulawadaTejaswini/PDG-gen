Line_9 $$ fs = cluster.getFileSystem()-->Line_12 $$ long initialModTime = fs.getFileStatus(testPath).getModificationTime()[ FD ]
Line_5 $$ FileSystem fs = null-->Line_23 $$ fs.close()[ FD ]
Line_25 $$ if (cluster != null) -->Line_26 $$ cluster.shutdown()[ CD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).build()-->Line_26 $$ cluster.shutdown()[ FD ]
Line_9 $$ fs = cluster.getFileSystem()-->Line_11 $$ OutputStream out = fs.create(testPath)[ FD ]
Line_10 $$ Path testPath = new Path("/test")-->Line_19 $$ long modTimeAfterRestart = fs.getFileStatus(testPath).getModificationTime()[ FD ]
Line_2 $$ public void testModTimePersistsAfterRestart() throws IOException -->Line_4 $$ MiniDFSCluster cluster = null[ CD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_25 $$ if (cluster != null) [ FD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).build()[ FD ]
Line_9 $$ fs = cluster.getFileSystem()-->Line_22 $$ if (fs != null) [ FD ]
Line_10 $$ Path testPath = new Path("/test")-->Line_11 $$ OutputStream out = fs.create(testPath)[ FD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_26 $$ cluster.shutdown()[ FD ]
Line_16 $$ long modTimeAfterClose = fs.getFileStatus(testPath).getModificationTime()-->Line_20 $$ assertEquals(modTimeAfterClose, modTimeAfterRestart)[ FD ]
Line_5 $$ FileSystem fs = null-->Line_9 $$ fs = cluster.getFileSystem()[ FD ]
Line_2 $$ public void testModTimePersistsAfterRestart() throws IOException -->Line_3 $$ final long sleepTime = 10[ CD ]
Line_9 $$ fs = cluster.getFileSystem()-->Line_23 $$ fs.close()[ FD ]
Line_11 $$ OutputStream out = fs.create(testPath)-->Line_15 $$ out.close()[ FD ]
Line_22 $$ if (fs != null) -->Line_23 $$ fs.close()[ CD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_9 $$ fs = cluster.getFileSystem()[ FD ]
Line_2 $$ public void testModTimePersistsAfterRestart() throws IOException -->Line_6 $$ Configuration conf = new HdfsConfiguration()[ CD ]
Line_3 $$ final long sleepTime = 10-->Line_14 $$ ThreadUtil.sleepAtLeastIgnoreInterrupts(sleepTime)[ FD ]
Line_10 $$ Path testPath = new Path("/test")-->Line_16 $$ long modTimeAfterClose = fs.getFileStatus(testPath).getModificationTime()[ FD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_18 $$ cluster.restartNameNode()[ FD ]
Line_5 $$ FileSystem fs = null-->Line_12 $$ long initialModTime = fs.getFileStatus(testPath).getModificationTime()[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).build()-->Line_18 $$ cluster.restartNameNode()[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).build()-->Line_25 $$ if (cluster != null) [ FD ]
Line_9 $$ fs = cluster.getFileSystem()-->Line_19 $$ long modTimeAfterRestart = fs.getFileStatus(testPath).getModificationTime()[ FD ]
Line_9 $$ fs = cluster.getFileSystem()-->Line_16 $$ long modTimeAfterClose = fs.getFileStatus(testPath).getModificationTime()[ FD ]
Line_2 $$ public void testModTimePersistsAfterRestart() throws IOException -->Line_5 $$ FileSystem fs = null[ CD ]
Line_10 $$ Path testPath = new Path("/test")-->Line_12 $$ long initialModTime = fs.getFileStatus(testPath).getModificationTime()[ FD ]
Line_5 $$ FileSystem fs = null-->Line_19 $$ long modTimeAfterRestart = fs.getFileStatus(testPath).getModificationTime()[ FD ]
Line_5 $$ FileSystem fs = null-->Line_22 $$ if (fs != null) [ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).build()-->Line_9 $$ fs = cluster.getFileSystem()[ FD ]
Line_19 $$ long modTimeAfterRestart = fs.getFileStatus(testPath).getModificationTime()-->Line_20 $$ assertEquals(modTimeAfterClose, modTimeAfterRestart)[ FD ]
Line_5 $$ FileSystem fs = null-->Line_16 $$ long modTimeAfterClose = fs.getFileStatus(testPath).getModificationTime()[ FD ]
Line_5 $$ FileSystem fs = null-->Line_11 $$ OutputStream out = fs.create(testPath)[ FD ]
