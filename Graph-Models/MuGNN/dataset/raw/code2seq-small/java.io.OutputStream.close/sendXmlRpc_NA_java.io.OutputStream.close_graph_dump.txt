Line_18 $$ if (auth != null) -->Line_19 $$ con.setRequestProperty("Authorization", "Basic " + auth)[ CD ]
Line_7 $$ final HttpConfigurable settings = HttpConfigurable.getInstance()-->Line_8 $$ con = settings.openConnection(PYPI_LIST_URL)[ FD ]
Line_2 $$ public InputStream sendXmlRpc(byte[] request) throws IOException -->Line_31 $$ return super.sendXmlRpc(request)[ CD ]
Line_9 $$ if (con instanceof HttpsURLConnection) -->Line_10 $$ ((HttpsURLConnection) con).setSSLSocketFactory(sslContext.getSocketFactory())[ CD ]
Line_2 $$ public InputStream sendXmlRpc(byte[] request) throws IOException -->Line_22 $$ out.write(request)[ FD ]
Line_21 $$ OutputStream out = con.getOutputStream()-->Line_24 $$ out.close()[ FD ]
Line_2 $$ public InputStream sendXmlRpc(byte[] request) throws IOException -->Line_3 $$ TrustManager[] trustAllCerts = new TrustManager[] [ CD ]
Line_2 $$ public InputStream sendXmlRpc(byte[] request) throws IOException -->Line_31 $$ return super.sendXmlRpc(request)[ FD ]
Line_5 $$ SSLContext sslContext = SSLContext.getInstance("TLS")-->Line_6 $$ sslContext.init(null, trustAllCerts, new SecureRandom())[ FD ]
Line_21 $$ OutputStream out = con.getOutputStream()-->Line_22 $$ out.write(request)[ FD ]
Line_21 $$ OutputStream out = con.getOutputStream()-->Line_23 $$ out.flush()[ FD ]
Line_5 $$ SSLContext sslContext = SSLContext.getInstance("TLS")-->Line_10 $$ ((HttpsURLConnection) con).setSSLSocketFactory(sslContext.getSocketFactory())[ FD ]
Line_3 $$ TrustManager[] trustAllCerts = new TrustManager[] -->Line_6 $$ sslContext.init(null, trustAllCerts, new SecureRandom())[ FD ]
