Line_3 $$ if (!isLocalFS()) -->Line_8 $$ os.write(1)[ CD ]
Line_20 $$ fs = FileSystem.get(getProxiedFSConf())-->Line_37 $$ Map<String, byte[]> xAttrs = fs.getXAttrs(path)[ FD ]
Line_4 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())-->Line_10 $$ fs.close()[ FD ]
Line_20 $$ fs = FileSystem.get(getProxiedFSConf())-->Line_31 $$ fs.removeXAttr(path, name5)[ FD ]
Line_3 $$ if (!isLocalFS()) -->Line_24 $$ fs.setXAttr(path, name4, value4)[ CD ]
Line_4 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())-->Line_23 $$ fs.setXAttr(path, name3, value3)[ FD ]
Line_3 $$ if (!isLocalFS()) -->Line_17 $$ final String name4 = "trusted.a1"[ CD ]
Line_36 $$ fs = FileSystem.get(getProxiedFSConf())-->Line_37 $$ Map<String, byte[]> xAttrs = fs.getXAttrs(path)[ FD ]
Line_6 $$ Path path = new Path(getProxiedFSTestDir(), "foo.txt")-->Line_31 $$ fs.removeXAttr(path, name5)[ FD ]
Line_6 $$ Path path = new Path(getProxiedFSTestDir(), "foo.txt")-->Line_29 $$ fs.removeXAttr(path, name4)[ FD ]
Line_15 $$ final String name3 = "user.a3"-->Line_23 $$ fs.setXAttr(path, name3, value3)[ FD ]
Line_3 $$ if (!isLocalFS()) -->Line_27 $$ fs.removeXAttr(path, name1)[ CD ]
Line_20 $$ fs = FileSystem.get(getProxiedFSConf())-->Line_22 $$ fs.setXAttr(path, name2, value2)[ FD ]
Line_4 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())-->Line_29 $$ fs.removeXAttr(path, name4)[ FD ]
Line_3 $$ if (!isLocalFS()) -->Line_18 $$ final byte[] value4 = new byte[] [ CD ]
Line_20 $$ fs = FileSystem.get(getProxiedFSConf())-->Line_36 $$ fs = FileSystem.get(getProxiedFSConf())[ FD ]
Line_3 $$ if (!isLocalFS()) -->Line_15 $$ final String name3 = "user.a3"[ CD ]
Line_4 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())-->Line_22 $$ fs.setXAttr(path, name2, value2)[ FD ]
Line_3 $$ if (!isLocalFS()) -->Line_14 $$ final byte[] value2 = new byte[] [ CD ]
Line_20 $$ fs = FileSystem.get(getProxiedFSConf())-->Line_28 $$ fs.removeXAttr(path, name3)[ FD ]
Line_3 $$ if (!isLocalFS()) -->Line_37 $$ Map<String, byte[]> xAttrs = fs.getXAttrs(path)[ CD ]
Line_3 $$ if (!isLocalFS()) -->Line_38 $$ fs.close()[ CD ]
Line_4 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())-->Line_7 $$ OutputStream os = fs.create(path)[ FD ]
Line_4 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())-->Line_20 $$ fs = FileSystem.get(getProxiedFSConf())[ FD ]
Line_3 $$ if (!isLocalFS()) -->Line_21 $$ fs.setXAttr(path, name1, value1)[ CD ]
Line_6 $$ Path path = new Path(getProxiedFSTestDir(), "foo.txt")-->Line_23 $$ fs.setXAttr(path, name3, value3)[ FD ]
Line_3 $$ if (!isLocalFS()) -->Line_25 $$ fs.close()[ CD ]
Line_6 $$ Path path = new Path(getProxiedFSTestDir(), "foo.txt")-->Line_27 $$ fs.removeXAttr(path, name1)[ FD ]
Line_13 $$ final String name2 = "user.a2"-->Line_40 $$ Assert.assertArrayEquals(value2, xAttrs.get(name2))[ FD ]
Line_4 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())-->Line_37 $$ Map<String, byte[]> xAttrs = fs.getXAttrs(path)[ FD ]
Line_3 $$ if (!isLocalFS()) -->Line_29 $$ fs.removeXAttr(path, name4)[ CD ]
Line_4 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())-->Line_27 $$ fs.removeXAttr(path, name1)[ FD ]
Line_3 $$ if (!isLocalFS()) -->Line_7 $$ OutputStream os = fs.create(path)[ CD ]
Line_3 $$ if (!isLocalFS()) -->Line_23 $$ fs.setXAttr(path, name3, value3)[ CD ]
Line_26 $$ fs = getHttpFSFileSystem()-->Line_31 $$ fs.removeXAttr(path, name5)[ FD ]
Line_13 $$ final String name2 = "user.a2"-->Line_22 $$ fs.setXAttr(path, name2, value2)[ FD ]
Line_3 $$ if (!isLocalFS()) -->Line_13 $$ final String name2 = "user.a2"[ CD ]
Line_3 $$ if (!isLocalFS()) -->Line_36 $$ fs = FileSystem.get(getProxiedFSConf())[ CD ]
Line_4 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())-->Line_36 $$ fs = FileSystem.get(getProxiedFSConf())[ FD ]
Line_36 $$ fs = FileSystem.get(getProxiedFSConf())-->Line_38 $$ fs.close()[ FD ]
Line_12 $$ final byte[] value1 = new byte[] -->Line_21 $$ fs.setXAttr(path, name1, value1)[ FD ]
Line_20 $$ fs = FileSystem.get(getProxiedFSConf())-->Line_24 $$ fs.setXAttr(path, name4, value4)[ FD ]
Line_14 $$ final byte[] value2 = new byte[] -->Line_22 $$ fs.setXAttr(path, name2, value2)[ FD ]
Line_20 $$ fs = FileSystem.get(getProxiedFSConf())-->Line_25 $$ fs.close()[ FD ]
Line_3 $$ if (!isLocalFS()) -->Line_26 $$ fs = getHttpFSFileSystem()[ CD ]
Line_3 $$ if (!isLocalFS()) -->Line_12 $$ final byte[] value1 = new byte[] [ CD ]
Line_4 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())-->Line_5 $$ fs.mkdirs(getProxiedFSTestDir())[ FD ]
Line_4 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())-->Line_26 $$ fs = getHttpFSFileSystem()[ FD ]
Line_4 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())-->Line_31 $$ fs.removeXAttr(path, name5)[ FD ]
Line_26 $$ fs = getHttpFSFileSystem()-->Line_36 $$ fs = FileSystem.get(getProxiedFSConf())[ FD ]
Line_26 $$ fs = getHttpFSFileSystem()-->Line_38 $$ fs.close()[ FD ]
Line_20 $$ fs = FileSystem.get(getProxiedFSConf())-->Line_29 $$ fs.removeXAttr(path, name4)[ FD ]
Line_11 $$ final String name1 = "user.a1"-->Line_21 $$ fs.setXAttr(path, name1, value1)[ FD ]
Line_6 $$ Path path = new Path(getProxiedFSTestDir(), "foo.txt")-->Line_24 $$ fs.setXAttr(path, name4, value4)[ FD ]
Line_14 $$ final byte[] value2 = new byte[] -->Line_40 $$ Assert.assertArrayEquals(value2, xAttrs.get(name2))[ FD ]
Line_3 $$ if (!isLocalFS()) -->Line_20 $$ fs = FileSystem.get(getProxiedFSConf())[ CD ]
Line_3 $$ if (!isLocalFS()) -->Line_16 $$ final byte[] value3 = null[ CD ]
Line_4 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())-->Line_21 $$ fs.setXAttr(path, name1, value1)[ FD ]
Line_26 $$ fs = getHttpFSFileSystem()-->Line_37 $$ Map<String, byte[]> xAttrs = fs.getXAttrs(path)[ FD ]
Line_26 $$ fs = getHttpFSFileSystem()-->Line_27 $$ fs.removeXAttr(path, name1)[ FD ]
Line_3 $$ if (!isLocalFS()) -->Line_11 $$ final String name1 = "user.a1"[ CD ]
Line_4 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())-->Line_28 $$ fs.removeXAttr(path, name3)[ FD ]
Line_3 $$ if (!isLocalFS()) -->Line_28 $$ fs.removeXAttr(path, name3)[ CD ]
Line_17 $$ final String name4 = "trusted.a1"-->Line_24 $$ fs.setXAttr(path, name4, value4)[ FD ]
Line_17 $$ final String name4 = "trusted.a1"-->Line_29 $$ fs.removeXAttr(path, name4)[ FD ]
Line_6 $$ Path path = new Path(getProxiedFSTestDir(), "foo.txt")-->Line_22 $$ fs.setXAttr(path, name2, value2)[ FD ]
Line_3 $$ if (!isLocalFS()) -->Line_39 $$ Assert.assertEquals(1, xAttrs.size())[ CD ]
Line_37 $$ Map<String, byte[]> xAttrs = fs.getXAttrs(path)-->Line_39 $$ Assert.assertEquals(1, xAttrs.size())[ FD ]
Line_20 $$ fs = FileSystem.get(getProxiedFSConf())-->Line_38 $$ fs.close()[ FD ]
Line_3 $$ if (!isLocalFS()) -->Line_10 $$ fs.close()[ CD ]
Line_3 $$ if (!isLocalFS()) -->Line_6 $$ Path path = new Path(getProxiedFSTestDir(), "foo.txt")[ CD ]
Line_3 $$ if (!isLocalFS()) -->Line_19 $$ final String name5 = "a1"[ CD ]
Line_16 $$ final byte[] value3 = null-->Line_23 $$ fs.setXAttr(path, name3, value3)[ FD ]
Line_11 $$ final String name1 = "user.a1"-->Line_27 $$ fs.removeXAttr(path, name1)[ FD ]
Line_3 $$ if (!isLocalFS()) -->Line_9 $$ os.close()[ CD ]
Line_18 $$ final byte[] value4 = new byte[] -->Line_24 $$ fs.setXAttr(path, name4, value4)[ FD ]
Line_7 $$ OutputStream os = fs.create(path)-->Line_9 $$ os.close()[ FD ]
Line_3 $$ if (!isLocalFS()) -->Line_5 $$ fs.mkdirs(getProxiedFSTestDir())[ CD ]
Line_6 $$ Path path = new Path(getProxiedFSTestDir(), "foo.txt")-->Line_37 $$ Map<String, byte[]> xAttrs = fs.getXAttrs(path)[ FD ]
Line_20 $$ fs = FileSystem.get(getProxiedFSConf())-->Line_23 $$ fs.setXAttr(path, name3, value3)[ FD ]
Line_26 $$ fs = getHttpFSFileSystem()-->Line_28 $$ fs.removeXAttr(path, name3)[ FD ]
Line_15 $$ final String name3 = "user.a3"-->Line_28 $$ fs.removeXAttr(path, name3)[ FD ]
Line_4 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())-->Line_24 $$ fs.setXAttr(path, name4, value4)[ FD ]
Line_2 $$ private void testRemoveXAttr() throws Exception -->Line_3 $$ if (!isLocalFS()) [ CD ]
Line_19 $$ final String name5 = "a1"-->Line_31 $$ fs.removeXAttr(path, name5)[ FD ]
Line_3 $$ if (!isLocalFS()) -->Line_40 $$ Assert.assertArrayEquals(value2, xAttrs.get(name2))[ CD ]
Line_3 $$ if (!isLocalFS()) -->Line_22 $$ fs.setXAttr(path, name2, value2)[ CD ]
Line_6 $$ Path path = new Path(getProxiedFSTestDir(), "foo.txt")-->Line_21 $$ fs.setXAttr(path, name1, value1)[ FD ]
Line_20 $$ fs = FileSystem.get(getProxiedFSConf())-->Line_26 $$ fs = getHttpFSFileSystem()[ FD ]
Line_4 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())-->Line_38 $$ fs.close()[ FD ]
Line_3 $$ if (!isLocalFS()) -->Line_4 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())[ CD ]
Line_7 $$ OutputStream os = fs.create(path)-->Line_8 $$ os.write(1)[ FD ]
Line_26 $$ fs = getHttpFSFileSystem()-->Line_29 $$ fs.removeXAttr(path, name4)[ FD ]
Line_4 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())-->Line_25 $$ fs.close()[ FD ]
Line_6 $$ Path path = new Path(getProxiedFSTestDir(), "foo.txt")-->Line_28 $$ fs.removeXAttr(path, name3)[ FD ]
Line_37 $$ Map<String, byte[]> xAttrs = fs.getXAttrs(path)-->Line_40 $$ Assert.assertArrayEquals(value2, xAttrs.get(name2))[ FD ]
Line_6 $$ Path path = new Path(getProxiedFSTestDir(), "foo.txt")-->Line_7 $$ OutputStream os = fs.create(path)[ FD ]
Line_20 $$ fs = FileSystem.get(getProxiedFSConf())-->Line_27 $$ fs.removeXAttr(path, name1)[ FD ]
Line_20 $$ fs = FileSystem.get(getProxiedFSConf())-->Line_21 $$ fs.setXAttr(path, name1, value1)[ FD ]
