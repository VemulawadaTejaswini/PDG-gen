Line_3 $$ Path newFile = new Path("testPermission")-->Line_8 $$ fs.setPermission(newFile, newPermission)[ FD ]
Line_2 $$ public void testSetPermissionOnFile() throws Exception -->Line_12 $$ assertEquals("supergroup", newStatus.getGroup())[ CD ]
Line_7 $$ FsPermission newPermission = new FsPermission((short) 0700)-->Line_11 $$ assertEquals(newPermission, newStatus.getPermission())[ FD ]
Line_2 $$ public void testSetPermissionOnFile() throws Exception -->Line_7 $$ FsPermission newPermission = new FsPermission((short) 0700)[ CD ]
Line_4 $$ OutputStream output = fs.create(newFile)-->Line_6 $$ output.close()[ FD ]
Line_2 $$ public void testSetPermissionOnFile() throws Exception -->Line_5 $$ output.write(13)[ CD ]
Line_2 $$ public void testSetPermissionOnFile() throws Exception -->Line_13 $$ assertEquals(UserGroupInformation.getCurrentUser().getShortUserName(), newStatus.getOwner())[ CD ]
Line_2 $$ public void testSetPermissionOnFile() throws Exception -->Line_10 $$ assertNotNull(newStatus)[ CD ]
Line_9 $$ FileStatus newStatus = fs.getFileStatus(newFile)-->Line_10 $$ assertNotNull(newStatus)[ FD ]
Line_2 $$ public void testSetPermissionOnFile() throws Exception -->Line_4 $$ OutputStream output = fs.create(newFile)[ CD ]
Line_2 $$ public void testSetPermissionOnFile() throws Exception -->Line_8 $$ fs.setPermission(newFile, newPermission)[ CD ]
Line_9 $$ FileStatus newStatus = fs.getFileStatus(newFile)-->Line_14 $$ assertEquals(1, newStatus.getLen())[ FD ]
Line_9 $$ FileStatus newStatus = fs.getFileStatus(newFile)-->Line_13 $$ assertEquals(UserGroupInformation.getCurrentUser().getShortUserName(), newStatus.getOwner())[ FD ]
Line_2 $$ public void testSetPermissionOnFile() throws Exception -->Line_14 $$ assertEquals(1, newStatus.getLen())[ CD ]
Line_2 $$ public void testSetPermissionOnFile() throws Exception -->Line_11 $$ assertEquals(newPermission, newStatus.getPermission())[ CD ]
Line_4 $$ OutputStream output = fs.create(newFile)-->Line_5 $$ output.write(13)[ FD ]
Line_2 $$ public void testSetPermissionOnFile() throws Exception -->Line_3 $$ Path newFile = new Path("testPermission")[ CD ]
Line_3 $$ Path newFile = new Path("testPermission")-->Line_4 $$ OutputStream output = fs.create(newFile)[ FD ]
Line_3 $$ Path newFile = new Path("testPermission")-->Line_9 $$ FileStatus newStatus = fs.getFileStatus(newFile)[ FD ]
Line_9 $$ FileStatus newStatus = fs.getFileStatus(newFile)-->Line_12 $$ assertEquals("supergroup", newStatus.getGroup())[ FD ]
Line_2 $$ public void testSetPermissionOnFile() throws Exception -->Line_9 $$ FileStatus newStatus = fs.getFileStatus(newFile)[ CD ]
Line_7 $$ FsPermission newPermission = new FsPermission((short) 0700)-->Line_8 $$ fs.setPermission(newFile, newPermission)[ FD ]
Line_9 $$ FileStatus newStatus = fs.getFileStatus(newFile)-->Line_11 $$ assertEquals(newPermission, newStatus.getPermission())[ FD ]
Line_2 $$ public void testSetPermissionOnFile() throws Exception -->Line_6 $$ output.close()[ CD ]
