Line_33 $$ httpfsAclStat = httpfs.getAclStatus(path)-->Line_34 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_17 $$ AclStatus httpfsAclStat = httpfs.getAclStatus(path)-->Line_21 $$ httpfsAclStat = httpfs.getAclStatus(path)[ FD ]
Line_21 $$ httpfsAclStat = httpfs.getAclStatus(path)-->Line_29 $$ httpfsAclStat = httpfs.getAclStatus(path)[ FD ]
Line_10 $$ FileSystem proxyFs = FileSystem.get(getProxiedFSConf())-->Line_32 $$ proxyAclStat = proxyFs.getAclStatus(path)[ FD ]
Line_12 $$ Path path = new Path(getProxiedFSTestDir(), "testAclStatus.txt")-->Line_33 $$ httpfsAclStat = httpfs.getAclStatus(path)[ FD ]
Line_20 $$ proxyAclStat = proxyFs.getAclStatus(path)-->Line_22 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_13 $$ OutputStream os = proxyFs.create(path)[ CD ]
Line_12 $$ Path path = new Path(getProxiedFSTestDir(), "testAclStatus.txt")-->Line_24 $$ proxyAclStat = proxyFs.getAclStatus(path)[ FD ]
Line_12 $$ Path path = new Path(getProxiedFSTestDir(), "testAclStatus.txt")-->Line_23 $$ httpfs.modifyAclEntries(path, AclEntry.parseAclSpec(aclUser2, true))[ FD ]
Line_10 $$ FileSystem proxyFs = FileSystem.get(getProxiedFSConf())-->Line_13 $$ OutputStream os = proxyFs.create(path)[ FD ]
Line_13 $$ OutputStream os = proxyFs.create(path)-->Line_14 $$ os.write(1)[ FD ]
Line_12 $$ Path path = new Path(getProxiedFSTestDir(), "testAclStatus.txt")-->Line_31 $$ httpfs.removeAcl(path)[ FD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_8 $$ final String aclGroup1 = "group::r--"[ CD ]
Line_25 $$ httpfsAclStat = httpfs.getAclStatus(path)-->Line_33 $$ httpfsAclStat = httpfs.getAclStatus(path)[ FD ]
Line_21 $$ httpfsAclStat = httpfs.getAclStatus(path)-->Line_25 $$ httpfsAclStat = httpfs.getAclStatus(path)[ FD ]
Line_17 $$ AclStatus httpfsAclStat = httpfs.getAclStatus(path)-->Line_30 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_11 $$ FileSystem httpfs = getHttpFSFileSystem()-->Line_21 $$ httpfsAclStat = httpfs.getAclStatus(path)[ FD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_16 $$ AclStatus proxyAclStat = proxyFs.getAclStatus(path)[ CD ]
Line_20 $$ proxyAclStat = proxyFs.getAclStatus(path)-->Line_26 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_12 $$ Path path = new Path(getProxiedFSTestDir(), "testAclStatus.txt")-->Line_20 $$ proxyAclStat = proxyFs.getAclStatus(path)[ FD ]
Line_16 $$ AclStatus proxyAclStat = proxyFs.getAclStatus(path)-->Line_32 $$ proxyAclStat = proxyFs.getAclStatus(path)[ FD ]
Line_11 $$ FileSystem httpfs = getHttpFSFileSystem()-->Line_27 $$ httpfs.removeAclEntries(path, AclEntry.parseAclSpec(aclUser1, true))[ FD ]
Line_21 $$ httpfsAclStat = httpfs.getAclStatus(path)-->Line_30 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_12 $$ Path path = new Path(getProxiedFSTestDir(), "testAclStatus.txt")-->Line_13 $$ OutputStream os = proxyFs.create(path)[ FD ]
Line_28 $$ proxyAclStat = proxyFs.getAclStatus(path)-->Line_30 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_16 $$ AclStatus proxyAclStat = proxyFs.getAclStatus(path)-->Line_22 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_29 $$ httpfsAclStat = httpfs.getAclStatus(path)[ CD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_17 $$ AclStatus httpfsAclStat = httpfs.getAclStatus(path)[ CD ]
Line_11 $$ FileSystem httpfs = getHttpFSFileSystem()-->Line_23 $$ httpfs.modifyAclEntries(path, AclEntry.parseAclSpec(aclUser2, true))[ FD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_28 $$ proxyAclStat = proxyFs.getAclStatus(path)[ CD ]
Line_17 $$ AclStatus httpfsAclStat = httpfs.getAclStatus(path)-->Line_34 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_20 $$ proxyAclStat = proxyFs.getAclStatus(path)-->Line_24 $$ proxyAclStat = proxyFs.getAclStatus(path)[ FD ]
Line_17 $$ AclStatus httpfsAclStat = httpfs.getAclStatus(path)-->Line_26 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_11 $$ FileSystem httpfs = getHttpFSFileSystem()[ CD ]
Line_11 $$ FileSystem httpfs = getHttpFSFileSystem()-->Line_31 $$ httpfs.removeAcl(path)[ FD ]
Line_24 $$ proxyAclStat = proxyFs.getAclStatus(path)-->Line_34 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_16 $$ AclStatus proxyAclStat = proxyFs.getAclStatus(path)-->Line_18 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_21 $$ httpfsAclStat = httpfs.getAclStatus(path)-->Line_22 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_3 $$ if (isLocalFS()) [ CD ]
Line_12 $$ Path path = new Path(getProxiedFSTestDir(), "testAclStatus.txt")-->Line_21 $$ httpfsAclStat = httpfs.getAclStatus(path)[ FD ]
Line_12 $$ Path path = new Path(getProxiedFSTestDir(), "testAclStatus.txt")-->Line_29 $$ httpfsAclStat = httpfs.getAclStatus(path)[ FD ]
Line_28 $$ proxyAclStat = proxyFs.getAclStatus(path)-->Line_32 $$ proxyAclStat = proxyFs.getAclStatus(path)[ FD ]
Line_25 $$ httpfsAclStat = httpfs.getAclStatus(path)-->Line_29 $$ httpfsAclStat = httpfs.getAclStatus(path)[ FD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_25 $$ httpfsAclStat = httpfs.getAclStatus(path)[ CD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_32 $$ proxyAclStat = proxyFs.getAclStatus(path)[ CD ]
Line_20 $$ proxyAclStat = proxyFs.getAclStatus(path)-->Line_34 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_20 $$ proxyAclStat = proxyFs.getAclStatus(path)-->Line_28 $$ proxyAclStat = proxyFs.getAclStatus(path)[ FD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_10 $$ FileSystem proxyFs = FileSystem.get(getProxiedFSConf())[ CD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_19 $$ httpfs.setAcl(path, AclEntry.parseAclSpec(aclSet, true))[ CD ]
Line_10 $$ FileSystem proxyFs = FileSystem.get(getProxiedFSConf())-->Line_16 $$ AclStatus proxyAclStat = proxyFs.getAclStatus(path)[ FD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_12 $$ Path path = new Path(getProxiedFSTestDir(), "testAclStatus.txt")[ CD ]
Line_11 $$ FileSystem httpfs = getHttpFSFileSystem()-->Line_17 $$ AclStatus httpfsAclStat = httpfs.getAclStatus(path)[ FD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_33 $$ httpfsAclStat = httpfs.getAclStatus(path)[ CD ]
Line_17 $$ AclStatus httpfsAclStat = httpfs.getAclStatus(path)-->Line_22 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_28 $$ proxyAclStat = proxyFs.getAclStatus(path)-->Line_34 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_3 $$ if (isLocalFS()) -->Line_4 $$ return[ CD ]
Line_6 $$ final String aclUser1 = "user:foo:rw-"-->Line_27 $$ httpfs.removeAclEntries(path, AclEntry.parseAclSpec(aclUser1, true))[ FD ]
Line_16 $$ AclStatus proxyAclStat = proxyFs.getAclStatus(path)-->Line_20 $$ proxyAclStat = proxyFs.getAclStatus(path)[ FD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_21 $$ httpfsAclStat = httpfs.getAclStatus(path)[ CD ]
Line_12 $$ Path path = new Path(getProxiedFSTestDir(), "testAclStatus.txt")-->Line_28 $$ proxyAclStat = proxyFs.getAclStatus(path)[ FD ]
Line_10 $$ FileSystem proxyFs = FileSystem.get(getProxiedFSConf())-->Line_28 $$ proxyAclStat = proxyFs.getAclStatus(path)[ FD ]
Line_13 $$ OutputStream os = proxyFs.create(path)-->Line_15 $$ os.close()[ FD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_30 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ CD ]
Line_16 $$ AclStatus proxyAclStat = proxyFs.getAclStatus(path)-->Line_30 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_16 $$ AclStatus proxyAclStat = proxyFs.getAclStatus(path)-->Line_34 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_20 $$ proxyAclStat = proxyFs.getAclStatus(path)-->Line_32 $$ proxyAclStat = proxyFs.getAclStatus(path)[ FD ]
Line_32 $$ proxyAclStat = proxyFs.getAclStatus(path)-->Line_34 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_25 $$ httpfsAclStat = httpfs.getAclStatus(path)-->Line_26 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_12 $$ Path path = new Path(getProxiedFSTestDir(), "testAclStatus.txt")-->Line_32 $$ proxyAclStat = proxyFs.getAclStatus(path)[ FD ]
Line_29 $$ httpfsAclStat = httpfs.getAclStatus(path)-->Line_34 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_20 $$ proxyAclStat = proxyFs.getAclStatus(path)[ CD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_15 $$ os.close()[ CD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_24 $$ proxyAclStat = proxyFs.getAclStatus(path)[ CD ]
Line_11 $$ FileSystem httpfs = getHttpFSFileSystem()-->Line_33 $$ httpfsAclStat = httpfs.getAclStatus(path)[ FD ]
Line_12 $$ Path path = new Path(getProxiedFSTestDir(), "testAclStatus.txt")-->Line_27 $$ httpfs.removeAclEntries(path, AclEntry.parseAclSpec(aclUser1, true))[ FD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_23 $$ httpfs.modifyAclEntries(path, AclEntry.parseAclSpec(aclUser2, true))[ CD ]
Line_24 $$ proxyAclStat = proxyFs.getAclStatus(path)-->Line_30 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_31 $$ httpfs.removeAcl(path)[ CD ]
Line_29 $$ httpfsAclStat = httpfs.getAclStatus(path)-->Line_30 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_17 $$ AclStatus httpfsAclStat = httpfs.getAclStatus(path)-->Line_18 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_12 $$ Path path = new Path(getProxiedFSTestDir(), "testAclStatus.txt")-->Line_16 $$ AclStatus proxyAclStat = proxyFs.getAclStatus(path)[ FD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_18 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ CD ]
Line_20 $$ proxyAclStat = proxyFs.getAclStatus(path)-->Line_30 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_10 $$ FileSystem proxyFs = FileSystem.get(getProxiedFSConf())-->Line_24 $$ proxyAclStat = proxyFs.getAclStatus(path)[ FD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_34 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ CD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_7 $$ final String aclUser2 = "user:bar:r--"[ CD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_6 $$ final String aclUser1 = "user:foo:rw-"[ CD ]
Line_25 $$ httpfsAclStat = httpfs.getAclStatus(path)-->Line_34 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_11 $$ FileSystem httpfs = getHttpFSFileSystem()-->Line_29 $$ httpfsAclStat = httpfs.getAclStatus(path)[ FD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_14 $$ os.write(1)[ CD ]
Line_12 $$ Path path = new Path(getProxiedFSTestDir(), "testAclStatus.txt")-->Line_25 $$ httpfsAclStat = httpfs.getAclStatus(path)[ FD ]
Line_12 $$ Path path = new Path(getProxiedFSTestDir(), "testAclStatus.txt")-->Line_17 $$ AclStatus httpfsAclStat = httpfs.getAclStatus(path)[ FD ]
Line_11 $$ FileSystem httpfs = getHttpFSFileSystem()-->Line_25 $$ httpfsAclStat = httpfs.getAclStatus(path)[ FD ]
Line_17 $$ AclStatus httpfsAclStat = httpfs.getAclStatus(path)-->Line_33 $$ httpfsAclStat = httpfs.getAclStatus(path)[ FD ]
Line_24 $$ proxyAclStat = proxyFs.getAclStatus(path)-->Line_28 $$ proxyAclStat = proxyFs.getAclStatus(path)[ FD ]
Line_11 $$ FileSystem httpfs = getHttpFSFileSystem()-->Line_19 $$ httpfs.setAcl(path, AclEntry.parseAclSpec(aclSet, true))[ FD ]
Line_24 $$ proxyAclStat = proxyFs.getAclStatus(path)-->Line_26 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_17 $$ AclStatus httpfsAclStat = httpfs.getAclStatus(path)-->Line_25 $$ httpfsAclStat = httpfs.getAclStatus(path)[ FD ]
Line_17 $$ AclStatus httpfsAclStat = httpfs.getAclStatus(path)-->Line_29 $$ httpfsAclStat = httpfs.getAclStatus(path)[ FD ]
Line_16 $$ AclStatus proxyAclStat = proxyFs.getAclStatus(path)-->Line_24 $$ proxyAclStat = proxyFs.getAclStatus(path)[ FD ]
Line_7 $$ final String aclUser2 = "user:bar:r--"-->Line_23 $$ httpfs.modifyAclEntries(path, AclEntry.parseAclSpec(aclUser2, true))[ FD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_9 $$ final String aclSet = "user::rwx," + aclUser1 + "," + aclGroup1 + ",other::---"[ CD ]
Line_16 $$ AclStatus proxyAclStat = proxyFs.getAclStatus(path)-->Line_26 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_9 $$ final String aclSet = "user::rwx," + aclUser1 + "," + aclGroup1 + ",other::---"-->Line_19 $$ httpfs.setAcl(path, AclEntry.parseAclSpec(aclSet, true))[ FD ]
Line_21 $$ httpfsAclStat = httpfs.getAclStatus(path)-->Line_34 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_10 $$ FileSystem proxyFs = FileSystem.get(getProxiedFSConf())-->Line_20 $$ proxyAclStat = proxyFs.getAclStatus(path)[ FD ]
Line_21 $$ httpfsAclStat = httpfs.getAclStatus(path)-->Line_26 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_21 $$ httpfsAclStat = httpfs.getAclStatus(path)-->Line_33 $$ httpfsAclStat = httpfs.getAclStatus(path)[ FD ]
Line_25 $$ httpfsAclStat = httpfs.getAclStatus(path)-->Line_30 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ FD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_27 $$ httpfs.removeAclEntries(path, AclEntry.parseAclSpec(aclUser1, true))[ CD ]
Line_12 $$ Path path = new Path(getProxiedFSTestDir(), "testAclStatus.txt")-->Line_19 $$ httpfs.setAcl(path, AclEntry.parseAclSpec(aclSet, true))[ FD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_22 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ CD ]
Line_29 $$ httpfsAclStat = httpfs.getAclStatus(path)-->Line_33 $$ httpfsAclStat = httpfs.getAclStatus(path)[ FD ]
Line_16 $$ AclStatus proxyAclStat = proxyFs.getAclStatus(path)-->Line_28 $$ proxyAclStat = proxyFs.getAclStatus(path)[ FD ]
Line_24 $$ proxyAclStat = proxyFs.getAclStatus(path)-->Line_32 $$ proxyAclStat = proxyFs.getAclStatus(path)[ FD ]
Line_2 $$ private void testFileAcls() throws Exception -->Line_26 $$ assertSameAcls(httpfsAclStat, proxyAclStat)[ CD ]
