Line_10 $$ Path target = new Path("/tmp/out/1")-->Line_16 $$ fs.mkdirs(target)[ FD ]
Line_5 $$ fs = FileSystem.get(getConf())-->Line_15 $$ TestDistCpUtils.createFile(fs, "/tmp/in2/2")[ FD ]
Line_5 $$ fs = FileSystem.get(getConf())-->Line_20 $$ out = fs.create(p2)[ FD ]
Line_17 $$ OutputStream out = fs.create(p1)-->Line_21 $$ out.write("DEF".getBytes())[ FD ]
Line_5 $$ fs = FileSystem.get(getConf())-->Line_37 $$ TestDistCpUtils.delete(fs, "/tmp")[ FD ]
Line_7 $$ Path p1 = new Path("/tmp/in/1")-->Line_17 $$ OutputStream out = fs.create(p1)[ FD ]
Line_5 $$ fs = FileSystem.get(getConf())-->Line_17 $$ OutputStream out = fs.create(p1)[ FD ]
Line_6 $$ List<Path> srcPaths = new ArrayList<Path>()-->Line_11 $$ srcPaths.add(p1.getParent())[ FD ]
Line_3 $$ FileSystem fs = null-->Line_16 $$ fs.mkdirs(target)[ FD ]
Line_20 $$ out = fs.create(p2)-->Line_21 $$ out.write("DEF".getBytes())[ FD ]
Line_17 $$ OutputStream out = fs.create(p1)-->Line_22 $$ out.close()[ FD ]
Line_3 $$ FileSystem fs = null-->Line_48 $$ TestDistCpUtils.delete(fs, "/tmp")[ FD ]
Line_5 $$ fs = FileSystem.get(getConf())-->Line_48 $$ TestDistCpUtils.delete(fs, "/tmp")[ FD ]
Line_9 $$ Path p3 = new Path("/tmp/in2/2")-->Line_12 $$ srcPaths.add(p3.getParent())[ FD ]
Line_23 $$ out = fs.create(p3)-->Line_25 $$ out.close()[ FD ]
Line_23 $$ out = fs.create(p3)-->Line_24 $$ out.write("GHIJ".getBytes())[ FD ]
Line_9 $$ Path p3 = new Path("/tmp/in2/2")-->Line_23 $$ out = fs.create(p3)[ FD ]
Line_2 $$ public void testBuildListing() -->Line_3 $$ FileSystem fs = null[ CD ]
Line_3 $$ FileSystem fs = null-->Line_17 $$ OutputStream out = fs.create(p1)[ FD ]
Line_27 $$ DistCpOptions options = new DistCpOptions(srcPaths, target)-->Line_31 $$ listing.buildListing(listingFile, options)[ FD ]
Line_17 $$ OutputStream out = fs.create(p1)-->Line_25 $$ out.close()[ FD ]
Line_3 $$ FileSystem fs = null-->Line_14 $$ TestDistCpUtils.createFile(fs, "/tmp/in/2")[ FD ]
Line_26 $$ Path listingFile = new Path("/tmp/file")-->Line_31 $$ listing.buildListing(listingFile, options)[ FD ]
Line_3 $$ FileSystem fs = null-->Line_23 $$ out = fs.create(p3)[ FD ]
Line_17 $$ OutputStream out = fs.create(p1)-->Line_24 $$ out.write("GHIJ".getBytes())[ FD ]
Line_6 $$ List<Path> srcPaths = new ArrayList<Path>()-->Line_12 $$ srcPaths.add(p3.getParent())[ FD ]
Line_17 $$ OutputStream out = fs.create(p1)-->Line_23 $$ out = fs.create(p3)[ FD ]
Line_29 $$ CopyListing listing = new SimpleCopyListing(getConf(), CREDENTIALS)-->Line_31 $$ listing.buildListing(listingFile, options)[ FD ]
Line_3 $$ FileSystem fs = null-->Line_43 $$ TestDistCpUtils.delete(fs, "/tmp")[ FD ]
Line_8 $$ Path p2 = new Path("/tmp/in/2")-->Line_20 $$ out = fs.create(p2)[ FD ]
Line_7 $$ Path p1 = new Path("/tmp/in/1")-->Line_11 $$ srcPaths.add(p1.getParent())[ FD ]
Line_5 $$ fs = FileSystem.get(getConf())-->Line_13 $$ TestDistCpUtils.createFile(fs, "/tmp/in/1")[ FD ]
Line_20 $$ out = fs.create(p2)-->Line_24 $$ out.write("GHIJ".getBytes())[ FD ]
Line_29 $$ CopyListing listing = new SimpleCopyListing(getConf(), CREDENTIALS)-->Line_39 $$ listing.buildListing(listingFile, options)[ FD ]
Line_3 $$ FileSystem fs = null-->Line_15 $$ TestDistCpUtils.createFile(fs, "/tmp/in2/2")[ FD ]
Line_27 $$ DistCpOptions options = new DistCpOptions(srcPaths, target)-->Line_39 $$ listing.buildListing(listingFile, options)[ FD ]
Line_5 $$ fs = FileSystem.get(getConf())-->Line_16 $$ fs.mkdirs(target)[ FD ]
Line_26 $$ Path listingFile = new Path("/tmp/file")-->Line_39 $$ listing.buildListing(listingFile, options)[ FD ]
Line_3 $$ FileSystem fs = null-->Line_5 $$ fs = FileSystem.get(getConf())[ FD ]
Line_17 $$ OutputStream out = fs.create(p1)-->Line_18 $$ out.write("ABC".getBytes())[ FD ]
Line_17 $$ OutputStream out = fs.create(p1)-->Line_19 $$ out.close()[ FD ]
Line_29 $$ CopyListing listing = new SimpleCopyListing(getConf(), CREDENTIALS)-->Line_36 $$ Assert.assertEquals(listing.getNumberOfPaths(), 3)[ FD ]
Line_3 $$ FileSystem fs = null-->Line_13 $$ TestDistCpUtils.createFile(fs, "/tmp/in/1")[ FD ]
Line_3 $$ FileSystem fs = null-->Line_37 $$ TestDistCpUtils.delete(fs, "/tmp")[ FD ]
Line_17 $$ OutputStream out = fs.create(p1)-->Line_20 $$ out = fs.create(p2)[ FD ]
Line_20 $$ out = fs.create(p2)-->Line_25 $$ out.close()[ FD ]
Line_20 $$ out = fs.create(p2)-->Line_23 $$ out = fs.create(p3)[ FD ]
Line_5 $$ fs = FileSystem.get(getConf())-->Line_14 $$ TestDistCpUtils.createFile(fs, "/tmp/in/2")[ FD ]
Line_20 $$ out = fs.create(p2)-->Line_22 $$ out.close()[ FD ]
Line_27 $$ DistCpOptions options = new DistCpOptions(srcPaths, target)-->Line_28 $$ options.setSyncFolder(true)[ FD ]
Line_5 $$ fs = FileSystem.get(getConf())-->Line_43 $$ TestDistCpUtils.delete(fs, "/tmp")[ FD ]
Line_5 $$ fs = FileSystem.get(getConf())-->Line_23 $$ out = fs.create(p3)[ FD ]
Line_29 $$ CopyListing listing = new SimpleCopyListing(getConf(), CREDENTIALS)-->Line_35 $$ Assert.assertEquals(listing.getBytesToCopy(), 10)[ FD ]
Line_3 $$ FileSystem fs = null-->Line_20 $$ out = fs.create(p2)[ FD ]
