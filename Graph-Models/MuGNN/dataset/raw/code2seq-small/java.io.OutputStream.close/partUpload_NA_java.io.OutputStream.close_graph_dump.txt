Line_28 $$ if (!closingUpload) -->Line_29 $$ backupFile = newBackupFile()[ CD ]
Line_6 $$ if (closingUpload && partUpload && backupFile.length() == 0) -->Line_12 $$ int attempt = 0[ CD ]
Line_12 $$ int attempt = 0-->Line_15 $$ ++attempt[ FD ]
Line_2 $$ private void partUpload(boolean closingUpload) throws IOException -->Line_3 $$ if (backupStream != null) [ CD ]
Line_6 $$ if (closingUpload && partUpload && backupFile.length() == 0) -->Line_8 $$ delete(backupFile)[ CD ]
Line_2 $$ private void partUpload(boolean closingUpload) throws IOException -->Line_6 $$ if (closingUpload && partUpload && backupFile.length() == 0) [ CD ]
Line_12 $$ int attempt = 0-->Line_16 $$ bytesUploaded += uploadFilePartAttempt(attempt)[ FD ]
Line_17 $$ uploadSuccess = true-->Line_13 $$ while (!uploadSuccess) [ FD ]
Line_6 $$ if (closingUpload && partUpload && backupFile.length() == 0) -->Line_11 $$ boolean uploadSuccess = false[ CD ]
Line_12 $$ int attempt = 0-->Line_20 $$ if (attempt > ATTEMPT_LIMIT) [ FD ]
Line_6 $$ if (closingUpload && partUpload && backupFile.length() == 0) -->Line_28 $$ if (!closingUpload) [ CD ]
Line_2 $$ private void partUpload(boolean closingUpload) throws IOException -->Line_28 $$ if (!closingUpload) [ FD ]
Line_6 $$ if (closingUpload && partUpload && backupFile.length() == 0) -->Line_13 $$ while (!uploadSuccess) [ CD ]
Line_11 $$ boolean uploadSuccess = false-->Line_13 $$ while (!uploadSuccess) [ FD ]
Line_11 $$ boolean uploadSuccess = false-->Line_17 $$ uploadSuccess = true[ FD ]
Line_6 $$ if (closingUpload && partUpload && backupFile.length() == 0) -->Line_25 $$ delete(backupFile)[ CD ]
Line_6 $$ if (closingUpload && partUpload && backupFile.length() == 0) -->Line_7 $$ SwiftUtils.debug(LOG, "skipping upload of 0 byte final partition")[ CD ]
Line_3 $$ if (backupStream != null) -->Line_4 $$ backupStream.close()[ CD ]
