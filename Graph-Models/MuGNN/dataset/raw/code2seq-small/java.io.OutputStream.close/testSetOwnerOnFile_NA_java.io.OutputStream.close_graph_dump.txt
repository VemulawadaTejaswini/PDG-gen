Line_2 $$ public void testSetOwnerOnFile() throws Exception -->Line_17 $$ assertEquals("newGroup", newStatus.getGroup())[ CD ]
Line_2 $$ public void testSetOwnerOnFile() throws Exception -->Line_4 $$ OutputStream output = fs.create(newFile)[ CD ]
Line_8 $$ FileStatus newStatus = fs.getFileStatus(newFile)-->Line_9 $$ assertNotNull(newStatus)[ FD ]
Line_2 $$ public void testSetOwnerOnFile() throws Exception -->Line_16 $$ assertEquals("newUser", newStatus.getOwner())[ CD ]
Line_2 $$ public void testSetOwnerOnFile() throws Exception -->Line_5 $$ output.write(13)[ CD ]
Line_3 $$ Path newFile = new Path("testOwner")-->Line_13 $$ fs.setOwner(newFile, null, "newGroup")[ FD ]
Line_4 $$ OutputStream output = fs.create(newFile)-->Line_6 $$ output.close()[ FD ]
Line_8 $$ FileStatus newStatus = fs.getFileStatus(newFile)-->Line_16 $$ assertEquals("newUser", newStatus.getOwner())[ FD ]
Line_3 $$ Path newFile = new Path("testOwner")-->Line_7 $$ fs.setOwner(newFile, "newUser", null)[ FD ]
Line_2 $$ public void testSetOwnerOnFile() throws Exception -->Line_12 $$ assertEquals(1, newStatus.getLen())[ CD ]
Line_2 $$ public void testSetOwnerOnFile() throws Exception -->Line_13 $$ fs.setOwner(newFile, null, "newGroup")[ CD ]
Line_2 $$ public void testSetOwnerOnFile() throws Exception -->Line_14 $$ newStatus = fs.getFileStatus(newFile)[ CD ]
Line_3 $$ Path newFile = new Path("testOwner")-->Line_8 $$ FileStatus newStatus = fs.getFileStatus(newFile)[ FD ]
Line_8 $$ FileStatus newStatus = fs.getFileStatus(newFile)-->Line_12 $$ assertEquals(1, newStatus.getLen())[ FD ]
Line_3 $$ Path newFile = new Path("testOwner")-->Line_4 $$ OutputStream output = fs.create(newFile)[ FD ]
Line_2 $$ public void testSetOwnerOnFile() throws Exception -->Line_9 $$ assertNotNull(newStatus)[ CD ]
Line_2 $$ public void testSetOwnerOnFile() throws Exception -->Line_11 $$ assertEquals("supergroup", newStatus.getGroup())[ CD ]
Line_8 $$ FileStatus newStatus = fs.getFileStatus(newFile)-->Line_11 $$ assertEquals("supergroup", newStatus.getGroup())[ FD ]
Line_2 $$ public void testSetOwnerOnFile() throws Exception -->Line_15 $$ assertNotNull(newStatus)[ CD ]
Line_8 $$ FileStatus newStatus = fs.getFileStatus(newFile)-->Line_15 $$ assertNotNull(newStatus)[ FD ]
Line_14 $$ newStatus = fs.getFileStatus(newFile)-->Line_17 $$ assertEquals("newGroup", newStatus.getGroup())[ FD ]
Line_4 $$ OutputStream output = fs.create(newFile)-->Line_5 $$ output.write(13)[ FD ]
Line_2 $$ public void testSetOwnerOnFile() throws Exception -->Line_8 $$ FileStatus newStatus = fs.getFileStatus(newFile)[ CD ]
Line_3 $$ Path newFile = new Path("testOwner")-->Line_14 $$ newStatus = fs.getFileStatus(newFile)[ FD ]
Line_14 $$ newStatus = fs.getFileStatus(newFile)-->Line_16 $$ assertEquals("newUser", newStatus.getOwner())[ FD ]
Line_14 $$ newStatus = fs.getFileStatus(newFile)-->Line_15 $$ assertNotNull(newStatus)[ FD ]
Line_2 $$ public void testSetOwnerOnFile() throws Exception -->Line_6 $$ output.close()[ CD ]
Line_2 $$ public void testSetOwnerOnFile() throws Exception -->Line_7 $$ fs.setOwner(newFile, "newUser", null)[ CD ]
Line_8 $$ FileStatus newStatus = fs.getFileStatus(newFile)-->Line_10 $$ assertEquals("newUser", newStatus.getOwner())[ FD ]
Line_8 $$ FileStatus newStatus = fs.getFileStatus(newFile)-->Line_17 $$ assertEquals("newGroup", newStatus.getGroup())[ FD ]
Line_2 $$ public void testSetOwnerOnFile() throws Exception -->Line_10 $$ assertEquals("newUser", newStatus.getOwner())[ CD ]
Line_8 $$ FileStatus newStatus = fs.getFileStatus(newFile)-->Line_14 $$ newStatus = fs.getFileStatus(newFile)[ FD ]
Line_2 $$ public void testSetOwnerOnFile() throws Exception -->Line_3 $$ Path newFile = new Path("testOwner")[ CD ]
