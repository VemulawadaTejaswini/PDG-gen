Line_11 $$ NamenodeProtocols spyNN = spy(preSpyNN)-->Line_27 $$ doAnswer(new Answer<Boolean>() [ FD ]
Line_12 $$ DFSClient client = new DFSClient(null, spyNN, conf, null)-->Line_44 $$ OutputStream stm = client.create(file.toString(), true)[ FD ]
Line_15 $$ LocatedBlock ret = (LocatedBlock) invocation.callRealMethod()-->Line_18 $$ assertEquals(lb.getLastLocatedBlock().getBlock(), ret.getBlock())[ FD ]
Line_13 $$ doAnswer(new Answer<LocatedBlock>() -->Line_15 $$ LocatedBlock ret = (LocatedBlock) invocation.callRealMethod()[ CD ]
Line_13 $$ doAnswer(new Answer<LocatedBlock>() -->Line_18 $$ assertEquals(lb.getLastLocatedBlock().getBlock(), ret.getBlock())[ CD ]
Line_2 $$ public void testIdempotentAllocateBlockAndClose() throws Exception -->Line_5 $$ conf.setInt(DFSConfigKeys.DFS_BLOCK_SIZE_KEY, 4096)[ CD ]
Line_13 $$ doAnswer(new Answer<LocatedBlock>() -->Line_35 $$ boolean ret = (Boolean) invocation.callRealMethod()[ FD ]
Line_13 $$ doAnswer(new Answer<LocatedBlock>() -->Line_17 $$ int blockCount = lb.getLocatedBlocks().size()[ CD ]
Line_13 $$ doAnswer(new Answer<LocatedBlock>() -->Line_15 $$ LocatedBlock ret = (LocatedBlock) invocation.callRealMethod()[ FD ]
Line_13 $$ doAnswer(new Answer<LocatedBlock>() -->Line_24 $$ return ret2[ CD ]
Line_9 $$ FileSystem fs = cluster.getFileSystem()-->Line_54 $$ AppendTestUtil.check(fs, file, 10000)[ FD ]
Line_6 $$ final MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).build()-->Line_9 $$ FileSystem fs = cluster.getFileSystem()[ FD ]
Line_2 $$ public void testIdempotentAllocateBlockAndClose() throws Exception -->Line_4 $$ Path file = new Path(src)[ CD ]
Line_27 $$ doAnswer(new Answer<Boolean>() -->Line_35 $$ boolean ret = (Boolean) invocation.callRealMethod()[ FD ]
Line_20 $$ lb = cluster.getNameNodeRpc().getBlockLocations(src, 0, Long.MAX_VALUE)-->Line_22 $$ assertEquals(lb.getLastLocatedBlock().getBlock(), ret2.getBlock())[ FD ]
Line_2 $$ public void testIdempotentAllocateBlockAndClose() throws Exception -->Line_3 $$ final String src = "/testIdempotentAllocateBlock"[ CD ]
Line_13 $$ doAnswer(new Answer<LocatedBlock>() -->Line_16 $$ LocatedBlocks lb = cluster.getNameNodeRpc().getBlockLocations(src, 0, Long.MAX_VALUE)[ CD ]
Line_16 $$ LocatedBlocks lb = cluster.getNameNodeRpc().getBlockLocations(src, 0, Long.MAX_VALUE)-->Line_18 $$ assertEquals(lb.getLastLocatedBlock().getBlock(), ret.getBlock())[ FD ]
Line_13 $$ doAnswer(new Answer<LocatedBlock>() -->Line_22 $$ assertEquals(lb.getLastLocatedBlock().getBlock(), ret2.getBlock())[ CD ]
Line_6 $$ final MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).build()-->Line_56 $$ cluster.shutdown()[ FD ]
Line_6 $$ final MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).build()-->Line_10 $$ NamenodeProtocols preSpyNN = cluster.getNameNodeRpc()[ FD ]
Line_4 $$ Path file = new Path(src)-->Line_44 $$ OutputStream stm = client.create(file.toString(), true)[ FD ]
Line_13 $$ doAnswer(new Answer<LocatedBlock>() -->Line_19 $$ LocatedBlock ret2 = (LocatedBlock) invocation.callRealMethod()[ FD ]
Line_17 $$ int blockCount = lb.getLocatedBlocks().size()-->Line_23 $$ assertEquals(blockCount, blockCount2)[ FD ]
Line_10 $$ NamenodeProtocols preSpyNN = cluster.getNameNodeRpc()-->Line_11 $$ NamenodeProtocols spyNN = spy(preSpyNN)[ FD ]
Line_30 $$ if (!(Boolean) invocation.callRealMethod()) -->Line_32 $$ return false[ CD ]
Line_16 $$ LocatedBlocks lb = cluster.getNameNodeRpc().getBlockLocations(src, 0, Long.MAX_VALUE)-->Line_22 $$ assertEquals(lb.getLastLocatedBlock().getBlock(), ret2.getBlock())[ FD ]
Line_21 $$ int blockCount2 = lb.getLocatedBlocks().size()-->Line_23 $$ assertEquals(blockCount, blockCount2)[ FD ]
Line_27 $$ doAnswer(new Answer<Boolean>() -->Line_29 $$ LOG.info("Called complete(: " + Joiner.on(",").join(invocation.getArguments()) + ")")[ FD ]
Line_20 $$ lb = cluster.getNameNodeRpc().getBlockLocations(src, 0, Long.MAX_VALUE)-->Line_21 $$ int blockCount2 = lb.getLocatedBlocks().size()[ FD ]
Line_13 $$ doAnswer(new Answer<LocatedBlock>() -->Line_29 $$ LOG.info("Called complete(: " + Joiner.on(",").join(invocation.getArguments()) + ")")[ FD ]
Line_13 $$ doAnswer(new Answer<LocatedBlock>() -->Line_20 $$ lb = cluster.getNameNodeRpc().getBlockLocations(src, 0, Long.MAX_VALUE)[ CD ]
Line_13 $$ doAnswer(new Answer<LocatedBlock>() -->Line_21 $$ int blockCount2 = lb.getLocatedBlocks().size()[ CD ]
Line_27 $$ doAnswer(new Answer<Boolean>() -->Line_29 $$ LOG.info("Called complete(: " + Joiner.on(",").join(invocation.getArguments()) + ")")[ CD ]
Line_16 $$ LocatedBlocks lb = cluster.getNameNodeRpc().getBlockLocations(src, 0, Long.MAX_VALUE)-->Line_21 $$ int blockCount2 = lb.getLocatedBlocks().size()[ FD ]
Line_11 $$ NamenodeProtocols spyNN = spy(preSpyNN)-->Line_52 $$ Mockito.verify(spyNN, Mockito.atLeastOnce()).addBlock(Mockito.anyString(), Mockito.anyString(), Mockito.<ExtendedBlock>any(), Mockito.<DatanodeInfo[]>any(), Mockito.anyLong(), Mockito.<String[]>any())[ FD ]
Line_13 $$ doAnswer(new Answer<LocatedBlock>() -->Line_23 $$ assertEquals(blockCount, blockCount2)[ CD ]
Line_16 $$ LocatedBlocks lb = cluster.getNameNodeRpc().getBlockLocations(src, 0, Long.MAX_VALUE)-->Line_20 $$ lb = cluster.getNameNodeRpc().getBlockLocations(src, 0, Long.MAX_VALUE)[ FD ]
Line_27 $$ doAnswer(new Answer<Boolean>() -->Line_30 $$ if (!(Boolean) invocation.callRealMethod()) [ FD ]
Line_4 $$ Path file = new Path(src)-->Line_54 $$ AppendTestUtil.check(fs, file, 10000)[ FD ]
Line_11 $$ NamenodeProtocols spyNN = spy(preSpyNN)-->Line_53 $$ Mockito.verify(spyNN, Mockito.atLeastOnce()).complete(Mockito.anyString(), Mockito.anyString(), Mockito.<ExtendedBlock>any(), anyLong())[ FD ]
Line_27 $$ doAnswer(new Answer<Boolean>() -->Line_30 $$ if (!(Boolean) invocation.callRealMethod()) [ CD ]
Line_3 $$ final String src = "/testIdempotentAllocateBlock"-->Line_20 $$ lb = cluster.getNameNodeRpc().getBlockLocations(src, 0, Long.MAX_VALUE)[ FD ]
Line_30 $$ if (!(Boolean) invocation.callRealMethod()) -->Line_31 $$ LOG.info("Complete call returned false, not faking a retry RPC")[ CD ]
Line_13 $$ doAnswer(new Answer<LocatedBlock>() -->Line_30 $$ if (!(Boolean) invocation.callRealMethod()) [ FD ]
Line_6 $$ final MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).build()-->Line_8 $$ cluster.waitActive()[ FD ]
Line_3 $$ final String src = "/testIdempotentAllocateBlock"-->Line_16 $$ LocatedBlocks lb = cluster.getNameNodeRpc().getBlockLocations(src, 0, Long.MAX_VALUE)[ FD ]
Line_11 $$ NamenodeProtocols spyNN = spy(preSpyNN)-->Line_13 $$ doAnswer(new Answer<LocatedBlock>() [ FD ]
Line_16 $$ LocatedBlocks lb = cluster.getNameNodeRpc().getBlockLocations(src, 0, Long.MAX_VALUE)-->Line_17 $$ int blockCount = lb.getLocatedBlocks().size()[ FD ]
Line_2 $$ public void testIdempotentAllocateBlockAndClose() throws Exception -->Line_6 $$ final MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).build()[ CD ]
Line_13 $$ doAnswer(new Answer<LocatedBlock>() -->Line_19 $$ LocatedBlock ret2 = (LocatedBlock) invocation.callRealMethod()[ CD ]
Line_6 $$ final MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).build()-->Line_16 $$ LocatedBlocks lb = cluster.getNameNodeRpc().getBlockLocations(src, 0, Long.MAX_VALUE)[ FD ]
Line_6 $$ final MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).build()-->Line_20 $$ lb = cluster.getNameNodeRpc().getBlockLocations(src, 0, Long.MAX_VALUE)[ FD ]
Line_19 $$ LocatedBlock ret2 = (LocatedBlock) invocation.callRealMethod()-->Line_22 $$ assertEquals(lb.getLastLocatedBlock().getBlock(), ret2.getBlock())[ FD ]
