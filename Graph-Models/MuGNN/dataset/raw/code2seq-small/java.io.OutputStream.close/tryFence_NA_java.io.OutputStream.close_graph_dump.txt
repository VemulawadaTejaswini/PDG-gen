Line_2 $$ public boolean tryFence(HAServiceTarget target, String cmd) -->Line_26 $$ errPumper.start()[ CD ]
Line_11 $$ Process p-->Line_13 $$ p = builder.start()[ FD ]
Line_13 $$ p = builder.start()-->Line_25 $$ StreamPumper errPumper = new StreamPumper(LOG, logPrefix, p.getErrorStream(), StreamPumper.StreamType.STDERR)[ FD ]
Line_13 $$ p = builder.start()-->Line_31 $$ rc = p.waitFor()[ FD ]
Line_27 $$ StreamPumper outPumper = new StreamPumper(LOG, logPrefix, p.getInputStream(), StreamPumper.StreamType.STDOUT)-->Line_33 $$ outPumper.join()[ FD ]
Line_2 $$ public boolean tryFence(HAServiceTarget target, String cmd) -->Line_10 $$ addTargetInfoAsEnvVars(target, builder.environment())[ CD ]
Line_2 $$ public boolean tryFence(HAServiceTarget target, String cmd) -->Line_10 $$ addTargetInfoAsEnvVars(target, builder.environment())[ FD ]
Line_5 $$ builder = new ProcessBuilder("bash", "-e", "-c", cmd)-->Line_13 $$ p = builder.start()[ FD ]
Line_2 $$ public boolean tryFence(HAServiceTarget target, String cmd) -->Line_29 $$ int rc[ CD ]
Line_3 $$ ProcessBuilder builder-->Line_9 $$ setConfAsEnvVars(builder.environment())[ FD ]
Line_13 $$ p = builder.start()-->Line_19 $$ String pid = tryGetPid(p)[ FD ]
Line_27 $$ StreamPumper outPumper = new StreamPumper(LOG, logPrefix, p.getInputStream(), StreamPumper.StreamType.STDOUT)-->Line_28 $$ outPumper.start()[ FD ]
Line_2 $$ public boolean tryFence(HAServiceTarget target, String cmd) -->Line_25 $$ StreamPumper errPumper = new StreamPumper(LOG, logPrefix, p.getErrorStream(), StreamPumper.StreamType.STDERR)[ CD ]
Line_2 $$ public boolean tryFence(HAServiceTarget target, String cmd) -->Line_20 $$ LOG.info("Launched fencing command '" + cmd + "' with " + ((pid != null) ? ("pid " + pid) : "unknown pid"))[ CD ]
Line_25 $$ StreamPumper errPumper = new StreamPumper(LOG, logPrefix, p.getErrorStream(), StreamPumper.StreamType.STDERR)-->Line_26 $$ errPumper.start()[ FD ]
Line_5 $$ builder = new ProcessBuilder("bash", "-e", "-c", cmd)-->Line_9 $$ setConfAsEnvVars(builder.environment())[ FD ]
Line_25 $$ StreamPumper errPumper = new StreamPumper(LOG, logPrefix, p.getErrorStream(), StreamPumper.StreamType.STDERR)-->Line_32 $$ errPumper.join()[ FD ]
Line_2 $$ public boolean tryFence(HAServiceTarget target, String cmd) -->Line_27 $$ StreamPumper outPumper = new StreamPumper(LOG, logPrefix, p.getInputStream(), StreamPumper.StreamType.STDOUT)[ CD ]
Line_2 $$ public boolean tryFence(HAServiceTarget target, String cmd) -->Line_3 $$ ProcessBuilder builder[ CD ]
Line_2 $$ public boolean tryFence(HAServiceTarget target, String cmd) -->Line_21 $$ String logPrefix = abbreviate(cmd, ABBREV_LENGTH)[ CD ]
Line_21 $$ String logPrefix = abbreviate(cmd, ABBREV_LENGTH)-->Line_23 $$ logPrefix = "[PID " + pid + "] " + logPrefix[ FD ]
Line_11 $$ Process p-->Line_19 $$ String pid = tryGetPid(p)[ FD ]
Line_2 $$ public boolean tryFence(HAServiceTarget target, String cmd) -->Line_22 $$ if (pid != null) [ CD ]
Line_7 $$ builder = new ProcessBuilder("cmd.exe", "/c", cmd)-->Line_13 $$ p = builder.start()[ FD ]
Line_11 $$ Process p-->Line_25 $$ StreamPumper errPumper = new StreamPumper(LOG, logPrefix, p.getErrorStream(), StreamPumper.StreamType.STDERR)[ FD ]
Line_2 $$ public boolean tryFence(HAServiceTarget target, String cmd) -->Line_28 $$ outPumper.start()[ CD ]
Line_29 $$ int rc-->Line_31 $$ rc = p.waitFor()[ FD ]
Line_3 $$ ProcessBuilder builder-->Line_13 $$ p = builder.start()[ FD ]
Line_19 $$ String pid = tryGetPid(p)-->Line_22 $$ if (pid != null) [ FD ]
Line_11 $$ Process p-->Line_31 $$ rc = p.waitFor()[ FD ]
Line_13 $$ p = builder.start()-->Line_14 $$ p.getOutputStream().close()[ FD ]
Line_2 $$ public boolean tryFence(HAServiceTarget target, String cmd) -->Line_19 $$ String pid = tryGetPid(p)[ CD ]
Line_22 $$ if (pid != null) -->Line_23 $$ logPrefix = "[PID " + pid + "] " + logPrefix[ CD ]
Line_2 $$ public boolean tryFence(HAServiceTarget target, String cmd) -->Line_9 $$ setConfAsEnvVars(builder.environment())[ CD ]
Line_11 $$ Process p-->Line_14 $$ p.getOutputStream().close()[ FD ]
Line_5 $$ builder = new ProcessBuilder("bash", "-e", "-c", cmd)-->Line_10 $$ addTargetInfoAsEnvVars(target, builder.environment())[ FD ]
Line_13 $$ p = builder.start()-->Line_27 $$ StreamPumper outPumper = new StreamPumper(LOG, logPrefix, p.getInputStream(), StreamPumper.StreamType.STDOUT)[ FD ]
Line_3 $$ ProcessBuilder builder-->Line_7 $$ builder = new ProcessBuilder("cmd.exe", "/c", cmd)[ FD ]
Line_4 $$ if (!Shell.WINDOWS) -->Line_5 $$ builder = new ProcessBuilder("bash", "-e", "-c", cmd)[ CD ]
Line_3 $$ ProcessBuilder builder-->Line_5 $$ builder = new ProcessBuilder("bash", "-e", "-c", cmd)[ FD ]
Line_11 $$ Process p-->Line_27 $$ StreamPumper outPumper = new StreamPumper(LOG, logPrefix, p.getInputStream(), StreamPumper.StreamType.STDOUT)[ FD ]
Line_7 $$ builder = new ProcessBuilder("cmd.exe", "/c", cmd)-->Line_10 $$ addTargetInfoAsEnvVars(target, builder.environment())[ FD ]
Line_7 $$ builder = new ProcessBuilder("cmd.exe", "/c", cmd)-->Line_9 $$ setConfAsEnvVars(builder.environment())[ FD ]
Line_5 $$ builder = new ProcessBuilder("bash", "-e", "-c", cmd)-->Line_7 $$ builder = new ProcessBuilder("cmd.exe", "/c", cmd)[ FD ]
Line_2 $$ public boolean tryFence(HAServiceTarget target, String cmd) -->Line_11 $$ Process p[ CD ]
Line_3 $$ ProcessBuilder builder-->Line_10 $$ addTargetInfoAsEnvVars(target, builder.environment())[ FD ]
Line_2 $$ public boolean tryFence(HAServiceTarget target, String cmd) -->Line_4 $$ if (!Shell.WINDOWS) [ CD ]
Line_4 $$ if (!Shell.WINDOWS) -->Line_7 $$ builder = new ProcessBuilder("cmd.exe", "/c", cmd)[ CD ]
Line_2 $$ public boolean tryFence(HAServiceTarget target, String cmd) -->Line_38 $$ return rc == 0[ CD ]
Line_2 $$ public boolean tryFence(HAServiceTarget target, String cmd) -->Line_21 $$ String logPrefix = abbreviate(cmd, ABBREV_LENGTH)[ FD ]
