Line_12 $$ Configuration hadoopConf = new Configuration(false)-->Line_14 $$ hadoopConf.writeXml(os)[ FD ]
Line_7 $$ Configuration conf = new Configuration(false)-->Line_8 $$ conf.set("server.services", services)[ FD ]
Line_2 $$ public void serviceHadoopConfCustomDir() throws Exception -->Line_4 $$ String hadoopConfDir = new File(dir, "confx").getAbsolutePath()[ CD ]
Line_2 $$ public void serviceHadoopConfCustomDir() throws Exception -->Line_9 $$ conf.set("server.hadoop.config.dir", hadoopConfDir)[ CD ]
Line_2 $$ public void serviceHadoopConfCustomDir() throws Exception -->Line_3 $$ String dir = TestDirHelper.getTestDir().getAbsolutePath()[ CD ]
Line_2 $$ public void serviceHadoopConfCustomDir() throws Exception -->Line_20 $$ server.destroy()[ CD ]
Line_2 $$ public void serviceHadoopConfCustomDir() throws Exception -->Line_11 $$ OutputStream os = new FileOutputStream(hdfsSite)[ CD ]
Line_2 $$ public void serviceHadoopConfCustomDir() throws Exception -->Line_10 $$ File hdfsSite = new File(hadoopConfDir, "hdfs-site.xml")[ CD ]
Line_2 $$ public void serviceHadoopConfCustomDir() throws Exception -->Line_5 $$ new File(hadoopConfDir).mkdirs()[ CD ]
Line_16 $$ Server server = new Server("server", dir, dir, dir, dir, conf)-->Line_20 $$ server.destroy()[ FD ]
Line_2 $$ public void serviceHadoopConfCustomDir() throws Exception -->Line_7 $$ Configuration conf = new Configuration(false)[ CD ]
Line_2 $$ public void serviceHadoopConfCustomDir() throws Exception -->Line_12 $$ Configuration hadoopConf = new Configuration(false)[ CD ]
Line_2 $$ public void serviceHadoopConfCustomDir() throws Exception -->Line_19 $$ Assert.assertEquals(fsAccess.serviceHadoopConf.get("foo"), "BAR")[ CD ]
Line_7 $$ Configuration conf = new Configuration(false)-->Line_9 $$ conf.set("server.hadoop.config.dir", hadoopConfDir)[ FD ]
Line_6 $$ String services = StringUtils.join(",", Arrays.asList(InstrumentationService.class.getName(), SchedulerService.class.getName(), FileSystemAccessService.class.getName()))-->Line_8 $$ conf.set("server.services", services)[ FD ]
Line_16 $$ Server server = new Server("server", dir, dir, dir, dir, conf)-->Line_17 $$ server.init()[ FD ]
Line_16 $$ Server server = new Server("server", dir, dir, dir, dir, conf)-->Line_18 $$ FileSystemAccessService fsAccess = (FileSystemAccessService) server.get(FileSystemAccess.class)[ FD ]
Line_2 $$ public void serviceHadoopConfCustomDir() throws Exception -->Line_6 $$ String services = StringUtils.join(",", Arrays.asList(InstrumentationService.class.getName(), SchedulerService.class.getName(), FileSystemAccessService.class.getName()))[ CD ]
Line_2 $$ public void serviceHadoopConfCustomDir() throws Exception -->Line_17 $$ server.init()[ CD ]
Line_11 $$ OutputStream os = new FileOutputStream(hdfsSite)-->Line_15 $$ os.close()[ FD ]
Line_2 $$ public void serviceHadoopConfCustomDir() throws Exception -->Line_13 $$ hadoopConf.set("foo", "BAR")[ CD ]
Line_11 $$ OutputStream os = new FileOutputStream(hdfsSite)-->Line_14 $$ hadoopConf.writeXml(os)[ FD ]
Line_2 $$ public void serviceHadoopConfCustomDir() throws Exception -->Line_15 $$ os.close()[ CD ]
Line_12 $$ Configuration hadoopConf = new Configuration(false)-->Line_13 $$ hadoopConf.set("foo", "BAR")[ FD ]
Line_2 $$ public void serviceHadoopConfCustomDir() throws Exception -->Line_8 $$ conf.set("server.services", services)[ CD ]
Line_2 $$ public void serviceHadoopConfCustomDir() throws Exception -->Line_14 $$ hadoopConf.writeXml(os)[ CD ]
Line_2 $$ public void serviceHadoopConfCustomDir() throws Exception -->Line_16 $$ Server server = new Server("server", dir, dir, dir, dir, conf)[ CD ]
Line_2 $$ public void serviceHadoopConfCustomDir() throws Exception -->Line_18 $$ FileSystemAccessService fsAccess = (FileSystemAccessService) server.get(FileSystemAccess.class)[ CD ]
Line_4 $$ String hadoopConfDir = new File(dir, "confx").getAbsolutePath()-->Line_9 $$ conf.set("server.hadoop.config.dir", hadoopConfDir)[ FD ]
