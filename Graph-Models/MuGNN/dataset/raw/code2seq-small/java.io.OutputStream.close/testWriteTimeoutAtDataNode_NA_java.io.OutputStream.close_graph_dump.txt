Line_8 $$ final int bufferSize = 4096-->Line_19 $$ InputStream in = fs.open(filePath, bufferSize)[ FD ]
Line_13 $$ FileSystem fs = cluster.getFileSystem()-->Line_19 $$ InputStream in = fs.open(filePath, bufferSize)[ FD ]
Line_21 $$ for (int i = 0; i < 10; i++) -->Line_22 $$ Thread.sleep(2 * writeTimeout)[ CD ]
Line_15 $$ OutputStream out = fs.create(filePath, true, bufferSize)-->Line_16 $$ writeData(out, 2 * blockSize)[ FD ]
Line_2 $$ public void testWriteTimeoutAtDataNode() throws IOException, InterruptedException -->Line_5 $$ final int blockSize = 10 * 1024 * 1024[ CD ]
Line_8 $$ final int bufferSize = 4096-->Line_15 $$ OutputStream out = fs.create(filePath, true, bufferSize)[ FD ]
Line_2 $$ public void testWriteTimeoutAtDataNode() throws IOException, InterruptedException -->Line_6 $$ conf.setInt(DFSConfigKeys.DFS_BLOCK_SIZE_KEY, blockSize)[ CD ]
Line_2 $$ public void testWriteTimeoutAtDataNode() throws IOException, InterruptedException -->Line_10 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(3).build()[ CD ]
Line_2 $$ public void testWriteTimeoutAtDataNode() throws IOException, InterruptedException -->Line_7 $$ conf.setInt(DFSConfigKeys.DFS_CLIENT_MAX_BLOCK_ACQUIRE_FAILURES_KEY, 1)[ CD ]
Line_2 $$ public void testWriteTimeoutAtDataNode() throws IOException, InterruptedException -->Line_3 $$ final int writeTimeout = 100[ CD ]
Line_19 $$ InputStream in = fs.open(filePath, bufferSize)-->Line_25 $$ in.close()[ FD ]
Line_2 $$ public void testWriteTimeoutAtDataNode() throws IOException, InterruptedException -->Line_8 $$ final int bufferSize = 4096[ CD ]
Line_10 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(3).build()-->Line_27 $$ cluster.shutdown()[ FD ]
Line_8 $$ final int bufferSize = 4096-->Line_9 $$ conf.setInt(CommonConfigurationKeys.IO_FILE_BUFFER_SIZE_KEY, bufferSize)[ FD ]
Line_13 $$ FileSystem fs = cluster.getFileSystem()-->Line_15 $$ OutputStream out = fs.create(filePath, true, bufferSize)[ FD ]
Line_19 $$ InputStream in = fs.open(filePath, bufferSize)-->Line_23 $$ IOUtils.readFully(in, buf, 0, buf.length)[ FD ]
Line_18 $$ byte[] buf = new byte[1024 * 1024]-->Line_23 $$ IOUtils.readFully(in, buf, 0, buf.length)[ FD ]
Line_14 $$ Path filePath = new Path("/testWriteTimeoutAtDataNode")-->Line_19 $$ InputStream in = fs.open(filePath, bufferSize)[ FD ]
Line_3 $$ final int writeTimeout = 100-->Line_4 $$ conf.setInt(DFSConfigKeys.DFS_DATANODE_SOCKET_WRITE_TIMEOUT_KEY, writeTimeout)[ FD ]
Line_18 $$ byte[] buf = new byte[1024 * 1024]-->Line_20 $$ IOUtils.readFully(in, buf, 0, bufferSize / 2)[ FD ]
Line_2 $$ public void testWriteTimeoutAtDataNode() throws IOException, InterruptedException -->Line_4 $$ conf.setInt(DFSConfigKeys.DFS_DATANODE_SOCKET_WRITE_TIMEOUT_KEY, writeTimeout)[ CD ]
Line_15 $$ OutputStream out = fs.create(filePath, true, bufferSize)-->Line_17 $$ out.close()[ FD ]
Line_14 $$ Path filePath = new Path("/testWriteTimeoutAtDataNode")-->Line_15 $$ OutputStream out = fs.create(filePath, true, bufferSize)[ FD ]
Line_10 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(3).build()-->Line_12 $$ cluster.waitActive()[ FD ]
Line_2 $$ public void testWriteTimeoutAtDataNode() throws IOException, InterruptedException -->Line_9 $$ conf.setInt(CommonConfigurationKeys.IO_FILE_BUFFER_SIZE_KEY, bufferSize)[ CD ]
Line_21 $$ for (int i = 0; i < 10; i++) -->Line_23 $$ IOUtils.readFully(in, buf, 0, buf.length)[ CD ]
Line_5 $$ final int blockSize = 10 * 1024 * 1024-->Line_6 $$ conf.setInt(DFSConfigKeys.DFS_BLOCK_SIZE_KEY, blockSize)[ FD ]
Line_19 $$ InputStream in = fs.open(filePath, bufferSize)-->Line_20 $$ IOUtils.readFully(in, buf, 0, bufferSize / 2)[ FD ]
Line_10 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(3).build()-->Line_13 $$ FileSystem fs = cluster.getFileSystem()[ FD ]
