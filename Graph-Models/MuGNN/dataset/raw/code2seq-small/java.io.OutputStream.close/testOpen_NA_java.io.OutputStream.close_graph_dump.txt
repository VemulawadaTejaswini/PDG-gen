Line_3 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())-->Line_9 $$ fs = getHttpFSFileSystem()[ FD ]
Line_2 $$ private void testOpen() throws Exception -->Line_5 $$ OutputStream os = fs.create(path)[ CD ]
Line_2 $$ private void testOpen() throws Exception -->Line_8 $$ fs.close()[ CD ]
Line_3 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())-->Line_8 $$ fs.close()[ FD ]
Line_9 $$ fs = getHttpFSFileSystem()-->Line_13 $$ fs.close()[ FD ]
Line_2 $$ private void testOpen() throws Exception -->Line_11 $$ Assert.assertEquals(is.read(), 1)[ CD ]
Line_2 $$ private void testOpen() throws Exception -->Line_12 $$ is.close()[ CD ]
Line_4 $$ Path path = new Path(getProxiedFSTestDir(), "foo.txt")-->Line_5 $$ OutputStream os = fs.create(path)[ FD ]
Line_2 $$ private void testOpen() throws Exception -->Line_9 $$ fs = getHttpFSFileSystem()[ CD ]
Line_5 $$ OutputStream os = fs.create(path)-->Line_7 $$ os.close()[ FD ]
Line_9 $$ fs = getHttpFSFileSystem()-->Line_10 $$ InputStream is = fs.open(new Path(path.toUri().getPath()))[ FD ]
Line_2 $$ private void testOpen() throws Exception -->Line_6 $$ os.write(1)[ CD ]
Line_5 $$ OutputStream os = fs.create(path)-->Line_6 $$ os.write(1)[ FD ]
Line_10 $$ InputStream is = fs.open(new Path(path.toUri().getPath()))-->Line_11 $$ Assert.assertEquals(is.read(), 1)[ FD ]
Line_3 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())-->Line_5 $$ OutputStream os = fs.create(path)[ FD ]
Line_3 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())-->Line_13 $$ fs.close()[ FD ]
Line_10 $$ InputStream is = fs.open(new Path(path.toUri().getPath()))-->Line_12 $$ is.close()[ FD ]
Line_2 $$ private void testOpen() throws Exception -->Line_7 $$ os.close()[ CD ]
Line_2 $$ private void testOpen() throws Exception -->Line_3 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())[ CD ]
Line_2 $$ private void testOpen() throws Exception -->Line_13 $$ fs.close()[ CD ]
Line_4 $$ Path path = new Path(getProxiedFSTestDir(), "foo.txt")-->Line_10 $$ InputStream is = fs.open(new Path(path.toUri().getPath()))[ FD ]
Line_2 $$ private void testOpen() throws Exception -->Line_4 $$ Path path = new Path(getProxiedFSTestDir(), "foo.txt")[ CD ]
Line_3 $$ FileSystem fs = FileSystem.get(getProxiedFSConf())-->Line_10 $$ InputStream is = fs.open(new Path(path.toUri().getPath()))[ FD ]
Line_2 $$ private void testOpen() throws Exception -->Line_10 $$ InputStream is = fs.open(new Path(path.toUri().getPath()))[ CD ]
