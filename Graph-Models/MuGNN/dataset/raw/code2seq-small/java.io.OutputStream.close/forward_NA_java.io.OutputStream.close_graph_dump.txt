Line_5 $$ byte[] buffer = new byte[BUFFER_SIZE]-->Line_11 $$ out.write(buffer, 0, rc)[ FD ]
Line_6 $$ int rc-->Line_11 $$ out.write(buffer, 0, rc)[ FD ]
Line_2 $$ private void forward(@NonNls final String name, final OutputStream out, final InputStream in, final boolean releaseSemaphore) -->Line_10 $$ while ((rc = in.read(buffer)) != -1) [ FD ]
Line_23 $$ if (releaseSemaphore) -->Line_24 $$ myForwardCompleted.release(1)[ CD ]
Line_27 $$ if (releaseSemaphore) -->Line_28 $$ myForwardCompleted.release(1)[ CD ]
Line_6 $$ int rc-->Line_10 $$ while ((rc = in.read(buffer)) != -1) [ FD ]
Line_10 $$ while ((rc = in.read(buffer)) != -1) -->Line_11 $$ out.write(buffer, 0, rc)[ CD ]
Line_2 $$ private void forward(@NonNls final String name, final OutputStream out, final InputStream in, final boolean releaseSemaphore) -->Line_14 $$ out.close()[ FD ]
Line_2 $$ private void forward(@NonNls final String name, final OutputStream out, final InputStream in, final boolean releaseSemaphore) -->Line_3 $$ final Runnable action = new Runnable() [ CD ]
Line_2 $$ private void forward(@NonNls final String name, final OutputStream out, final InputStream in, final boolean releaseSemaphore) -->Line_11 $$ out.write(buffer, 0, rc)[ FD ]
Line_2 $$ private void forward(@NonNls final String name, final OutputStream out, final InputStream in, final boolean releaseSemaphore) -->Line_17 $$ in.close()[ FD ]
Line_2 $$ private void forward(@NonNls final String name, final OutputStream out, final InputStream in, final boolean releaseSemaphore) -->Line_20 $$ System.err.println(SSHMainBundle.message("sshmain.forwarding.failed", name, e.getMessage()))[ FD ]
Line_3 $$ final Runnable action = new Runnable() -->Line_5 $$ byte[] buffer = new byte[BUFFER_SIZE][ CD ]
Line_2 $$ private void forward(@NonNls final String name, final OutputStream out, final InputStream in, final boolean releaseSemaphore) -->Line_35 $$ t.start()[ CD ]
Line_2 $$ private void forward(@NonNls final String name, final OutputStream out, final InputStream in, final boolean releaseSemaphore) -->Line_34 $$ t.setDaemon(true)[ CD ]
Line_3 $$ final Runnable action = new Runnable() -->Line_6 $$ int rc[ CD ]
Line_5 $$ byte[] buffer = new byte[BUFFER_SIZE]-->Line_10 $$ while ((rc = in.read(buffer)) != -1) [ FD ]
Line_10 $$ while ((rc = in.read(buffer)) != -1) -->Line_11 $$ out.write(buffer, 0, rc)[ FD ]
