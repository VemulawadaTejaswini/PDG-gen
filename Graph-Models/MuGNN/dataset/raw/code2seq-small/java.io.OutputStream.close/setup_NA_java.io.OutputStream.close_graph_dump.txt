Line_2 $$ public static void setup() throws IOException -->Line_8 $$ for (int i = 0; i < NFILES; ++i) [ CD ]
Line_2 $$ public static void setup() throws IOException -->Line_3 $$ final Configuration conf = new Configuration()[ CD ]
Line_13 $$ f = fs.create(paths[i])-->Line_16 $$ if (f != null) [ FD ]
Line_4 $$ final FileSystem fs = FileSystem.getLocal(conf).getRaw()-->Line_13 $$ f = fs.create(paths[i])[ FD ]
Line_4 $$ final FileSystem fs = FileSystem.getLocal(conf).getRaw()-->Line_6 $$ fs.delete(p, true)[ FD ]
Line_11 $$ OutputStream f = null-->Line_16 $$ if (f != null) [ FD ]
Line_13 $$ f = fs.create(paths[i])-->Line_17 $$ f.close()[ FD ]
Line_11 $$ OutputStream f = null-->Line_14 $$ f.write(b)[ FD ]
Line_8 $$ for (int i = 0; i < NFILES; ++i) -->Line_9 $$ Arrays.fill(b, (byte) ('A' + i))[ CD ]
Line_11 $$ OutputStream f = null-->Line_13 $$ f = fs.create(paths[i])[ FD ]
Line_2 $$ public static void setup() throws IOException -->Line_6 $$ fs.delete(p, true)[ CD ]
Line_4 $$ final FileSystem fs = FileSystem.getLocal(conf).getRaw()-->Line_5 $$ final Path p = new Path(System.getProperty("test.build.data", "/tmp"), "testFileQueue").makeQualified(fs)[ FD ]
Line_8 $$ for (int i = 0; i < NFILES; ++i) -->Line_11 $$ OutputStream f = null[ CD ]
Line_2 $$ public static void setup() throws IOException -->Line_5 $$ final Path p = new Path(System.getProperty("test.build.data", "/tmp"), "testFileQueue").makeQualified(fs)[ CD ]
Line_5 $$ final Path p = new Path(System.getProperty("test.build.data", "/tmp"), "testFileQueue").makeQualified(fs)-->Line_6 $$ fs.delete(p, true)[ FD ]
Line_7 $$ final byte[] b = new byte[BLOCK]-->Line_14 $$ f.write(b)[ FD ]
Line_11 $$ OutputStream f = null-->Line_17 $$ f.close()[ FD ]
Line_8 $$ for (int i = 0; i < NFILES; ++i) -->Line_10 $$ paths[i] = new Path(p, "" + (char) ('A' + i))[ CD ]
Line_13 $$ f = fs.create(paths[i])-->Line_14 $$ f.write(b)[ FD ]
Line_2 $$ public static void setup() throws IOException -->Line_7 $$ final byte[] b = new byte[BLOCK][ CD ]
Line_3 $$ final Configuration conf = new Configuration()-->Line_4 $$ final FileSystem fs = FileSystem.getLocal(conf).getRaw()[ FD ]
Line_16 $$ if (f != null) -->Line_17 $$ f.close()[ CD ]
Line_7 $$ final byte[] b = new byte[BLOCK]-->Line_9 $$ Arrays.fill(b, (byte) ('A' + i))[ FD ]
Line_2 $$ public static void setup() throws IOException -->Line_4 $$ final FileSystem fs = FileSystem.getLocal(conf).getRaw()[ CD ]
