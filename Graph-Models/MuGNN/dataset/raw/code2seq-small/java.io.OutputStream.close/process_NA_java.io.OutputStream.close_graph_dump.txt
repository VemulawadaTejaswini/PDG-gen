Line_4 $$ if (myFilesToDelete.contains(path))-->Line_5 $$ return[ CD ]
Line_2 $$ public void process(ZipEntry entry, InputStream in) throws IOException -->Line_9 $$ applyDiff(Utils.findEntryInputStream(patchFile, myPath + "/" + path), in, entryOut)[ FD ]
Line_7 $$ OutputStream entryOut = out.zipStream(path)-->Line_11 $$ entryOut.close()[ FD ]
Line_6 $$ if (myFilesToUpdate.contains(path)) -->Line_14 $$ out.zipEntry(entry, in)[ CD ]
Line_2 $$ public void process(ZipEntry entry, InputStream in) throws IOException -->Line_4 $$ if (myFilesToDelete.contains(path))[ CD ]
Line_7 $$ OutputStream entryOut = out.zipStream(path)-->Line_9 $$ applyDiff(Utils.findEntryInputStream(patchFile, myPath + "/" + path), in, entryOut)[ FD ]
Line_2 $$ public void process(ZipEntry entry, InputStream in) throws IOException -->Line_6 $$ if (myFilesToUpdate.contains(path)) [ CD ]
Line_6 $$ if (myFilesToUpdate.contains(path)) -->Line_7 $$ OutputStream entryOut = out.zipStream(path)[ CD ]
Line_3 $$ String path = entry.getName()-->Line_6 $$ if (myFilesToUpdate.contains(path)) [ FD ]
Line_3 $$ String path = entry.getName()-->Line_7 $$ OutputStream entryOut = out.zipStream(path)[ FD ]
Line_2 $$ public void process(ZipEntry entry, InputStream in) throws IOException -->Line_3 $$ String path = entry.getName()[ CD ]
Line_2 $$ public void process(ZipEntry entry, InputStream in) throws IOException -->Line_3 $$ String path = entry.getName()[ FD ]
Line_3 $$ String path = entry.getName()-->Line_4 $$ if (myFilesToDelete.contains(path))[ FD ]
Line_2 $$ public void process(ZipEntry entry, InputStream in) throws IOException -->Line_14 $$ out.zipEntry(entry, in)[ FD ]
