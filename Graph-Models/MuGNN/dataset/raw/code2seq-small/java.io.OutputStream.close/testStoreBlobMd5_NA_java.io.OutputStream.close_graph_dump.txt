Line_2 $$ private void testStoreBlobMd5(boolean expectMd5Stored) throws Exception -->Line_17 $$ String newBlockId = Base64.encode(new byte[] [ CD ]
Line_2 $$ private void testStoreBlobMd5(boolean expectMd5Stored) throws Exception -->Line_9 $$ CloudBlockBlob blob = testAccount.getBlobReference(testFileKey)[ CD ]
Line_2 $$ private void testStoreBlobMd5(boolean expectMd5Stored) throws Exception -->Line_5 $$ Path testFilePath = new Path("/" + testFileKey)[ CD ]
Line_9 $$ CloudBlockBlob blob = testAccount.getBlobReference(testFileKey)-->Line_19 $$ blob.commitBlockList(Arrays.asList(new BlockEntry[] [ FD ]
Line_2 $$ private void testStoreBlobMd5(boolean expectMd5Stored) throws Exception -->Line_8 $$ outStream.close()[ CD ]
Line_2 $$ private void testStoreBlobMd5(boolean expectMd5Stored) throws Exception -->Line_19 $$ blob.commitBlockList(Arrays.asList(new BlockEntry[] [ CD ]
Line_33 $$ StorageException cause = (StorageException) ex.getCause()-->Line_35 $$ assertTrue("Unexpected cause: " + cause, cause.getErrorCode().equals(StorageErrorCodeStrings.INVALID_MD5))[ FD ]
Line_6 $$ OutputStream outStream = testAccount.getFileSystem().create(testFilePath)-->Line_8 $$ outStream.close()[ FD ]
Line_5 $$ Path testFilePath = new Path("/" + testFileKey)-->Line_6 $$ OutputStream outStream = testAccount.getFileSystem().create(testFilePath)[ FD ]
Line_2 $$ private void testStoreBlobMd5(boolean expectMd5Stored) throws Exception -->Line_3 $$ assumeNotNull(testAccount)[ CD ]
Line_2 $$ private void testStoreBlobMd5(boolean expectMd5Stored) throws Exception -->Line_6 $$ OutputStream outStream = testAccount.getFileSystem().create(testFilePath)[ CD ]
Line_2 $$ private void testStoreBlobMd5(boolean expectMd5Stored) throws Exception -->Line_12 $$ if (expectMd5Stored) [ CD ]
Line_2 $$ private void testStoreBlobMd5(boolean expectMd5Stored) throws Exception -->Line_11 $$ String obtainedMd5 = blob.getProperties().getContentMD5()[ CD ]
Line_33 $$ StorageException cause = (StorageException) ex.getCause()-->Line_34 $$ assertNotNull(cause)[ FD ]
Line_12 $$ if (expectMd5Stored) -->Line_15 $$ assertNull("Expected no MD5, found: " + obtainedMd5, obtainedMd5)[ CD ]
Line_9 $$ CloudBlockBlob blob = testAccount.getBlobReference(testFileKey)-->Line_18 $$ blob.uploadBlock(newBlockId, new ByteArrayInputStream(new byte[] [ FD ]
Line_2 $$ private void testStoreBlobMd5(boolean expectMd5Stored) throws Exception -->Line_10 $$ blob.downloadAttributes()[ CD ]
Line_22 $$ byte[] inBuf = new byte[100]-->Line_23 $$ while (inStream.read(inBuf) > 0) [ FD ]
Line_12 $$ if (expectMd5Stored) -->Line_13 $$ assertNotNull(obtainedMd5)[ CD ]
Line_2 $$ private void testStoreBlobMd5(boolean expectMd5Stored) throws Exception -->Line_30 $$ if (!expectMd5Stored) [ FD ]
Line_2 $$ private void testStoreBlobMd5(boolean expectMd5Stored) throws Exception -->Line_7 $$ outStream.write(new byte[] [ CD ]
Line_20 $$ InputStream inStream = testAccount.getFileSystem().open(testFilePath)-->Line_23 $$ while (inStream.read(inBuf) > 0) [ FD ]
Line_6 $$ OutputStream outStream = testAccount.getFileSystem().create(testFilePath)-->Line_7 $$ outStream.write(new byte[] [ FD ]
Line_17 $$ String newBlockId = Base64.encode(new byte[] -->Line_18 $$ blob.uploadBlock(newBlockId, new ByteArrayInputStream(new byte[] [ FD ]
Line_2 $$ private void testStoreBlobMd5(boolean expectMd5Stored) throws Exception -->Line_20 $$ InputStream inStream = testAccount.getFileSystem().open(testFilePath)[ CD ]
Line_26 $$ if (expectMd5Stored) -->Line_27 $$ fail("Should've thrown because of data corruption.")[ CD ]
Line_4 $$ String testFileKey = "testFile"-->Line_9 $$ CloudBlockBlob blob = testAccount.getBlobReference(testFileKey)[ FD ]
Line_11 $$ String obtainedMd5 = blob.getProperties().getContentMD5()-->Line_15 $$ assertNull("Expected no MD5, found: " + obtainedMd5, obtainedMd5)[ FD ]
Line_2 $$ private void testStoreBlobMd5(boolean expectMd5Stored) throws Exception -->Line_4 $$ String testFileKey = "testFile"[ CD ]
Line_9 $$ CloudBlockBlob blob = testAccount.getBlobReference(testFileKey)-->Line_10 $$ blob.downloadAttributes()[ FD ]
Line_9 $$ CloudBlockBlob blob = testAccount.getBlobReference(testFileKey)-->Line_11 $$ String obtainedMd5 = blob.getProperties().getContentMD5()[ FD ]
Line_20 $$ InputStream inStream = testAccount.getFileSystem().open(testFilePath)-->Line_25 $$ inStream.close()[ FD ]
Line_5 $$ Path testFilePath = new Path("/" + testFileKey)-->Line_20 $$ InputStream inStream = testAccount.getFileSystem().open(testFilePath)[ FD ]
Line_2 $$ private void testStoreBlobMd5(boolean expectMd5Stored) throws Exception -->Line_18 $$ blob.uploadBlock(newBlockId, new ByteArrayInputStream(new byte[] [ CD ]
Line_11 $$ String obtainedMd5 = blob.getProperties().getContentMD5()-->Line_13 $$ assertNotNull(obtainedMd5)[ FD ]
