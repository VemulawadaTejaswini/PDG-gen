Line_4 $$ ColumnFamilyStore store = keyspace.getColumnFamilyStore(CF_DENSE1)-->Line_11 $$ long originalSize = store.getLiveSSTables().iterator().next().uncompressedLength()[ FD ]
Line_4 $$ ColumnFamilyStore store = keyspace.getColumnFamilyStore(CF_DENSE1)-->Line_18 $$ assertEquals(1, store.getLiveSSTables().size())[ FD ]
Line_2 $$ public ColumnFamilyStore testSingleSSTableCompaction(String strategyClassName) throws Exception -->Line_18 $$ assertEquals(1, store.getLiveSSTables().size())[ CD ]
Line_2 $$ public ColumnFamilyStore testSingleSSTableCompaction(String strategyClassName) throws Exception -->Line_11 $$ long originalSize = store.getLiveSSTables().iterator().next().uncompressedLength()[ CD ]
Line_4 $$ ColumnFamilyStore store = keyspace.getColumnFamilyStore(CF_DENSE1)-->Line_10 $$ assertEquals(1, store.getLiveSSTables().size())[ FD ]
Line_2 $$ public ColumnFamilyStore testSingleSSTableCompaction(String strategyClassName) throws Exception -->Line_8 $$ long timestamp = populate(KEYSPACE1, CF_DENSE1, 0, 9, 3)[ CD ]
Line_4 $$ ColumnFamilyStore store = keyspace.getColumnFamilyStore(CF_DENSE1)-->Line_21 $$ assertMaxTimestamp(store, timestamp)[ FD ]
Line_2 $$ public ColumnFamilyStore testSingleSSTableCompaction(String strategyClassName) throws Exception -->Line_6 $$ store.metadata.gcGraceSeconds(1)[ CD ]
Line_2 $$ public ColumnFamilyStore testSingleSSTableCompaction(String strategyClassName) throws Exception -->Line_3 $$ Keyspace keyspace = Keyspace.open(KEYSPACE1)[ CD ]
Line_4 $$ ColumnFamilyStore store = keyspace.getColumnFamilyStore(CF_DENSE1)-->Line_9 $$ store.forceBlockingFlush()[ FD ]
Line_4 $$ ColumnFamilyStore store = keyspace.getColumnFamilyStore(CF_DENSE1)-->Line_19 $$ long size = store.getLiveSSTables().iterator().next().uncompressedLength()[ FD ]
Line_4 $$ ColumnFamilyStore store = keyspace.getColumnFamilyStore(CF_DENSE1)-->Line_5 $$ store.clearUnsafe()[ FD ]
Line_2 $$ public ColumnFamilyStore testSingleSSTableCompaction(String strategyClassName) throws Exception -->Line_20 $$ assertTrue("should be less than " + originalSize + ", but was " + size, size < originalSize)[ CD ]
Line_2 $$ public ColumnFamilyStore testSingleSSTableCompaction(String strategyClassName) throws Exception -->Line_22 $$ return store[ CD ]
Line_15 $$ do -->Line_16 $$ TimeUnit.SECONDS.sleep(1)[ CD ]
Line_2 $$ public ColumnFamilyStore testSingleSSTableCompaction(String strategyClassName) throws Exception -->Line_5 $$ store.clearUnsafe()[ CD ]
Line_2 $$ public ColumnFamilyStore testSingleSSTableCompaction(String strategyClassName) throws Exception -->Line_19 $$ long size = store.getLiveSSTables().iterator().next().uncompressedLength()[ CD ]
Line_2 $$ public ColumnFamilyStore testSingleSSTableCompaction(String strategyClassName) throws Exception -->Line_4 $$ ColumnFamilyStore store = keyspace.getColumnFamilyStore(CF_DENSE1)[ CD ]
Line_2 $$ public ColumnFamilyStore testSingleSSTableCompaction(String strategyClassName) throws Exception -->Line_12 $$ TimeUnit.SECONDS.sleep(5)[ CD ]
Line_2 $$ public ColumnFamilyStore testSingleSSTableCompaction(String strategyClassName) throws Exception -->Line_15 $$ do [ CD ]
Line_2 $$ public ColumnFamilyStore testSingleSSTableCompaction(String strategyClassName) throws Exception -->Line_9 $$ store.forceBlockingFlush()[ CD ]
Line_2 $$ public ColumnFamilyStore testSingleSSTableCompaction(String strategyClassName) throws Exception -->Line_21 $$ assertMaxTimestamp(store, timestamp)[ CD ]
Line_2 $$ public ColumnFamilyStore testSingleSSTableCompaction(String strategyClassName) throws Exception -->Line_14 $$ FBUtilities.waitOnFutures(CompactionManager.instance.submitBackground(store))[ CD ]
Line_8 $$ long timestamp = populate(KEYSPACE1, CF_DENSE1, 0, 9, 3)-->Line_21 $$ assertMaxTimestamp(store, timestamp)[ FD ]
Line_4 $$ ColumnFamilyStore store = keyspace.getColumnFamilyStore(CF_DENSE1)-->Line_13 $$ store.enableAutoCompaction()[ FD ]
Line_2 $$ public ColumnFamilyStore testSingleSSTableCompaction(String strategyClassName) throws Exception -->Line_10 $$ assertEquals(1, store.getLiveSSTables().size())[ CD ]
Line_2 $$ public ColumnFamilyStore testSingleSSTableCompaction(String strategyClassName) throws Exception -->Line_13 $$ store.enableAutoCompaction()[ CD ]
Line_4 $$ ColumnFamilyStore store = keyspace.getColumnFamilyStore(CF_DENSE1)-->Line_7 $$ store.disableAutoCompaction()[ FD ]
Line_3 $$ Keyspace keyspace = Keyspace.open(KEYSPACE1)-->Line_4 $$ ColumnFamilyStore store = keyspace.getColumnFamilyStore(CF_DENSE1)[ FD ]
Line_2 $$ public ColumnFamilyStore testSingleSSTableCompaction(String strategyClassName) throws Exception -->Line_7 $$ store.disableAutoCompaction()[ CD ]
Line_4 $$ ColumnFamilyStore store = keyspace.getColumnFamilyStore(CF_DENSE1)-->Line_14 $$ FBUtilities.waitOnFutures(CompactionManager.instance.submitBackground(store))[ FD ]
