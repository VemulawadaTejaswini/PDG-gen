Line_10 $$ if (ui.version() != uj.version()) -->Line_11 $$ Assert.assertTrue(isComparisonEquivalent(ui.version() - uj.version(), c))[ CD ]
Line_6 $$ ByteBuffer bj = uuids[j]-->Line_9 $$ int c = uuidType.compare(bi, bj)[ FD ]
Line_7 $$ UUID ui = UUIDGen.getUUID(bi)-->Line_13 $$ long i0 = ui.timestamp()[ FD ]
Line_4 $$ for (int j = i + 1; j < uuids.length; j++) -->Line_5 $$ ByteBuffer bi = uuids[i][ CD ]
Line_12 $$ if (ui.version() == 1) -->Line_13 $$ long i0 = ui.timestamp()[ CD ]
Line_4 $$ for (int j = i + 1; j < uuids.length; j++) -->Line_8 $$ UUID uj = UUIDGen.getUUID(bj)[ CD ]
Line_7 $$ UUID ui = UUIDGen.getUUID(bi)-->Line_10 $$ if (ui.version() != uj.version()) [ FD ]
Line_2 $$ private void compareAll(ByteBuffer[] uuids) -->Line_3 $$ for (int i = 0; i < uuids.length; i++) [ CD ]
Line_4 $$ for (int j = i + 1; j < uuids.length; j++) -->Line_6 $$ ByteBuffer bj = uuids[j][ CD ]
Line_5 $$ ByteBuffer bi = uuids[i]-->Line_7 $$ UUID ui = UUIDGen.getUUID(bi)[ FD ]
Line_15 $$ if (i0 == i1)-->Line_18 $$ Assert.assertTrue(isComparisonEquivalent(Long.compare(i0, i1), c))[ CD ]
Line_9 $$ int c = uuidType.compare(bi, bj)-->Line_11 $$ Assert.assertTrue(isComparisonEquivalent(ui.version() - uj.version(), c))[ FD ]
Line_4 $$ for (int j = i + 1; j < uuids.length; j++) -->Line_9 $$ int c = uuidType.compare(bi, bj)[ CD ]
Line_4 $$ for (int j = i + 1; j < uuids.length; j++) -->Line_7 $$ UUID ui = UUIDGen.getUUID(bi)[ CD ]
Line_4 $$ for (int j = i + 1; j < uuids.length; j++) -->Line_10 $$ if (ui.version() != uj.version()) [ CD ]
Line_14 $$ long i1 = uj.timestamp()-->Line_15 $$ if (i0 == i1)[ FD ]
Line_7 $$ UUID ui = UUIDGen.getUUID(bi)-->Line_12 $$ if (ui.version() == 1) [ FD ]
Line_12 $$ if (ui.version() == 1) -->Line_15 $$ if (i0 == i1)[ CD ]
Line_8 $$ UUID uj = UUIDGen.getUUID(bj)-->Line_11 $$ Assert.assertTrue(isComparisonEquivalent(ui.version() - uj.version(), c))[ FD ]
Line_13 $$ long i0 = ui.timestamp()-->Line_15 $$ if (i0 == i1)[ FD ]
Line_3 $$ for (int i = 0; i < uuids.length; i++) -->Line_4 $$ for (int j = i + 1; j < uuids.length; j++) [ CD ]
Line_6 $$ ByteBuffer bj = uuids[j]-->Line_16 $$ Assert.assertTrue(isComparisonEquivalent(ByteBufferUtil.compareUnsigned(bi, bj), c))[ FD ]
Line_14 $$ long i1 = uj.timestamp()-->Line_18 $$ Assert.assertTrue(isComparisonEquivalent(Long.compare(i0, i1), c))[ FD ]
Line_5 $$ ByteBuffer bi = uuids[i]-->Line_16 $$ Assert.assertTrue(isComparisonEquivalent(ByteBufferUtil.compareUnsigned(bi, bj), c))[ FD ]
Line_9 $$ int c = uuidType.compare(bi, bj)-->Line_20 $$ Assert.assertTrue(isComparisonEquivalent(ByteBufferUtil.compareUnsigned(bi, bj), c))[ FD ]
Line_5 $$ ByteBuffer bi = uuids[i]-->Line_9 $$ int c = uuidType.compare(bi, bj)[ FD ]
Line_10 $$ if (ui.version() != uj.version()) -->Line_12 $$ if (ui.version() == 1) [ CD ]
Line_12 $$ if (ui.version() == 1) -->Line_20 $$ Assert.assertTrue(isComparisonEquivalent(ByteBufferUtil.compareUnsigned(bi, bj), c))[ CD ]
Line_5 $$ ByteBuffer bi = uuids[i]-->Line_22 $$ Assert.assertTrue(isComparisonEquivalent(compareV1(bi, bj), c))[ FD ]
Line_6 $$ ByteBuffer bj = uuids[j]-->Line_20 $$ Assert.assertTrue(isComparisonEquivalent(ByteBufferUtil.compareUnsigned(bi, bj), c))[ FD ]
Line_5 $$ ByteBuffer bi = uuids[i]-->Line_20 $$ Assert.assertTrue(isComparisonEquivalent(ByteBufferUtil.compareUnsigned(bi, bj), c))[ FD ]
Line_6 $$ ByteBuffer bj = uuids[j]-->Line_22 $$ Assert.assertTrue(isComparisonEquivalent(compareV1(bi, bj), c))[ FD ]
Line_8 $$ UUID uj = UUIDGen.getUUID(bj)-->Line_10 $$ if (ui.version() != uj.version()) [ FD ]
Line_9 $$ int c = uuidType.compare(bi, bj)-->Line_18 $$ Assert.assertTrue(isComparisonEquivalent(Long.compare(i0, i1), c))[ FD ]
Line_4 $$ for (int j = i + 1; j < uuids.length; j++) -->Line_22 $$ Assert.assertTrue(isComparisonEquivalent(compareV1(bi, bj), c))[ CD ]
Line_9 $$ int c = uuidType.compare(bi, bj)-->Line_22 $$ Assert.assertTrue(isComparisonEquivalent(compareV1(bi, bj), c))[ FD ]
Line_6 $$ ByteBuffer bj = uuids[j]-->Line_8 $$ UUID uj = UUIDGen.getUUID(bj)[ FD ]
Line_12 $$ if (ui.version() == 1) -->Line_14 $$ long i1 = uj.timestamp()[ CD ]
Line_15 $$ if (i0 == i1)-->Line_16 $$ Assert.assertTrue(isComparisonEquivalent(ByteBufferUtil.compareUnsigned(bi, bj), c))[ CD ]
Line_13 $$ long i0 = ui.timestamp()-->Line_18 $$ Assert.assertTrue(isComparisonEquivalent(Long.compare(i0, i1), c))[ FD ]
Line_9 $$ int c = uuidType.compare(bi, bj)-->Line_16 $$ Assert.assertTrue(isComparisonEquivalent(ByteBufferUtil.compareUnsigned(bi, bj), c))[ FD ]
Line_7 $$ UUID ui = UUIDGen.getUUID(bi)-->Line_11 $$ Assert.assertTrue(isComparisonEquivalent(ui.version() - uj.version(), c))[ FD ]
Line_8 $$ UUID uj = UUIDGen.getUUID(bj)-->Line_14 $$ long i1 = uj.timestamp()[ FD ]
