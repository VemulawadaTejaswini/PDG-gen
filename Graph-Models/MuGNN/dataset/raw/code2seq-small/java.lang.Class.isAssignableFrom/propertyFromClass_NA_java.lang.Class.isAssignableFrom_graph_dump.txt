Line_9 $$ if (propertyType.getSuperclass() != null && "java.lang.Enum".equals(propertyType.getSuperclass().getName())) -->Line_10 $$ property = new LwIntroEnumProperty(name, propertyType)[ CD ]
Line_6 $$ property = new LwIntroComponentProperty(name, propertyType.getName())-->Line_10 $$ property = new LwIntroEnumProperty(name, propertyType)[ FD ]
Line_3 $$ LwIntrospectedProperty property = propertyFromClassName(propertyType.getName(), name)-->Line_4 $$ if (property == null) [ FD ]
Line_3 $$ LwIntrospectedProperty property = propertyFromClassName(propertyType.getName(), name)-->Line_8 $$ property = new LwIntroListModelProperty(name, propertyType.getName())[ FD ]
Line_2 $$ public static LwIntrospectedProperty propertyFromClass(final Class propertyType, final String name) -->Line_7 $$ if (ListModel.class.isAssignableFrom(propertyType)) [ FD ]
Line_2 $$ public static LwIntrospectedProperty propertyFromClass(final Class propertyType, final String name) -->Line_3 $$ LwIntrospectedProperty property = propertyFromClassName(propertyType.getName(), name)[ FD ]
Line_2 $$ public static LwIntrospectedProperty propertyFromClass(final Class propertyType, final String name) -->Line_8 $$ property = new LwIntroListModelProperty(name, propertyType.getName())[ FD ]
Line_2 $$ public static LwIntrospectedProperty propertyFromClass(final Class propertyType, final String name) -->Line_4 $$ if (property == null) [ CD ]
Line_2 $$ public static LwIntrospectedProperty propertyFromClass(final Class propertyType, final String name) -->Line_6 $$ property = new LwIntroComponentProperty(name, propertyType.getName())[ FD ]
Line_5 $$ if (Component.class.isAssignableFrom(propertyType)) -->Line_6 $$ property = new LwIntroComponentProperty(name, propertyType.getName())[ CD ]
Line_3 $$ LwIntrospectedProperty property = propertyFromClassName(propertyType.getName(), name)-->Line_10 $$ property = new LwIntroEnumProperty(name, propertyType)[ FD ]
Line_4 $$ if (property == null) -->Line_5 $$ if (Component.class.isAssignableFrom(propertyType)) [ CD ]
Line_8 $$ property = new LwIntroListModelProperty(name, propertyType.getName())-->Line_10 $$ property = new LwIntroEnumProperty(name, propertyType)[ FD ]
Line_7 $$ if (ListModel.class.isAssignableFrom(propertyType)) -->Line_8 $$ property = new LwIntroListModelProperty(name, propertyType.getName())[ CD ]
Line_7 $$ if (ListModel.class.isAssignableFrom(propertyType)) -->Line_9 $$ if (propertyType.getSuperclass() != null && "java.lang.Enum".equals(propertyType.getSuperclass().getName())) [ CD ]
Line_2 $$ public static LwIntrospectedProperty propertyFromClass(final Class propertyType, final String name) -->Line_3 $$ LwIntrospectedProperty property = propertyFromClassName(propertyType.getName(), name)[ CD ]
Line_5 $$ if (Component.class.isAssignableFrom(propertyType)) -->Line_7 $$ if (ListModel.class.isAssignableFrom(propertyType)) [ CD ]
Line_2 $$ public static LwIntrospectedProperty propertyFromClass(final Class propertyType, final String name) -->Line_5 $$ if (Component.class.isAssignableFrom(propertyType)) [ FD ]
Line_2 $$ public static LwIntrospectedProperty propertyFromClass(final Class propertyType, final String name) -->Line_13 $$ return property[ CD ]
Line_6 $$ property = new LwIntroComponentProperty(name, propertyType.getName())-->Line_8 $$ property = new LwIntroListModelProperty(name, propertyType.getName())[ FD ]
Line_3 $$ LwIntrospectedProperty property = propertyFromClassName(propertyType.getName(), name)-->Line_6 $$ property = new LwIntroComponentProperty(name, propertyType.getName())[ FD ]
Line_2 $$ public static LwIntrospectedProperty propertyFromClass(final Class propertyType, final String name) -->Line_9 $$ if (propertyType.getSuperclass() != null && "java.lang.Enum".equals(propertyType.getSuperclass().getName())) [ FD ]
