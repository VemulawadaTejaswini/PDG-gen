Line_2 $$ public <T> Map<String, T> getBeansOfType(Class<T> type, boolean includeNonSingletons, boolean allowEagerInit) throws BeansException -->Line_3 $$ boolean isFactoryType = (type != null && FactoryBean.class.isAssignableFrom(type))[ FD ]
Line_8 $$ if (beanInstance instanceof FactoryBean && !isFactoryType) -->Line_9 $$ FactoryBean<?> factory = (FactoryBean<?>) beanInstance[ CD ]
Line_2 $$ public <T> Map<String, T> getBeansOfType(Class<T> type, boolean includeNonSingletons, boolean allowEagerInit) throws BeansException -->Line_23 $$ return matches[ CD ]
Line_3 $$ boolean isFactoryType = (type != null && FactoryBean.class.isAssignableFrom(type))-->Line_8 $$ if (beanInstance instanceof FactoryBean && !isFactoryType) [ FD ]
Line_7 $$ Object beanInstance = entry.getValue()-->Line_15 $$ if (type == null || type.isInstance(beanInstance)) [ FD ]
Line_11 $$ if ((includeNonSingletons || factory.isSingleton()) && objectType != null && (type == null || type.isAssignableFrom(objectType))) -->Line_12 $$ matches.put(beanName, getBean(beanName, type))[ CD ]
Line_5 $$ for (Map.Entry<String, Object> entry : this.beans.entrySet()) -->Line_6 $$ String beanName = entry.getKey()[ FD ]
Line_6 $$ String beanName = entry.getKey()-->Line_19 $$ matches.put(beanName, (T) beanInstance)[ FD ]
Line_8 $$ if (beanInstance instanceof FactoryBean && !isFactoryType) -->Line_11 $$ if ((includeNonSingletons || factory.isSingleton()) && objectType != null && (type == null || type.isAssignableFrom(objectType))) [ CD ]
Line_2 $$ public <T> Map<String, T> getBeansOfType(Class<T> type, boolean includeNonSingletons, boolean allowEagerInit) throws BeansException -->Line_12 $$ matches.put(beanName, getBean(beanName, type))[ FD ]
Line_15 $$ if (type == null || type.isInstance(beanInstance)) -->Line_19 $$ matches.put(beanName, (T) beanInstance)[ CD ]
Line_8 $$ if (beanInstance instanceof FactoryBean && !isFactoryType) -->Line_15 $$ if (type == null || type.isInstance(beanInstance)) [ CD ]
Line_9 $$ FactoryBean<?> factory = (FactoryBean<?>) beanInstance-->Line_10 $$ Class<?> objectType = factory.getObjectType()[ FD ]
Line_2 $$ public <T> Map<String, T> getBeansOfType(Class<T> type, boolean includeNonSingletons, boolean allowEagerInit) throws BeansException -->Line_15 $$ if (type == null || type.isInstance(beanInstance)) [ FD ]
Line_6 $$ String beanName = entry.getKey()-->Line_17 $$ beanName = FACTORY_BEAN_PREFIX + beanName[ FD ]
Line_2 $$ public <T> Map<String, T> getBeansOfType(Class<T> type, boolean includeNonSingletons, boolean allowEagerInit) throws BeansException -->Line_4 $$ Map<String, T> matches = new HashMap<String, T>()[ CD ]
Line_4 $$ Map<String, T> matches = new HashMap<String, T>()-->Line_12 $$ matches.put(beanName, getBean(beanName, type))[ FD ]
Line_2 $$ public <T> Map<String, T> getBeansOfType(Class<T> type, boolean includeNonSingletons, boolean allowEagerInit) throws BeansException -->Line_11 $$ if ((includeNonSingletons || factory.isSingleton()) && objectType != null && (type == null || type.isAssignableFrom(objectType))) [ FD ]
Line_15 $$ if (type == null || type.isInstance(beanInstance)) -->Line_16 $$ if (isFactoryType) [ CD ]
Line_2 $$ public <T> Map<String, T> getBeansOfType(Class<T> type, boolean includeNonSingletons, boolean allowEagerInit) throws BeansException -->Line_3 $$ boolean isFactoryType = (type != null && FactoryBean.class.isAssignableFrom(type))[ CD ]
Line_10 $$ Class<?> objectType = factory.getObjectType()-->Line_11 $$ if ((includeNonSingletons || factory.isSingleton()) && objectType != null && (type == null || type.isAssignableFrom(objectType))) [ FD ]
Line_6 $$ String beanName = entry.getKey()-->Line_12 $$ matches.put(beanName, getBean(beanName, type))[ FD ]
Line_17 $$ beanName = FACTORY_BEAN_PREFIX + beanName-->Line_19 $$ matches.put(beanName, (T) beanInstance)[ FD ]
Line_16 $$ if (isFactoryType) -->Line_17 $$ beanName = FACTORY_BEAN_PREFIX + beanName[ CD ]
Line_4 $$ Map<String, T> matches = new HashMap<String, T>()-->Line_19 $$ matches.put(beanName, (T) beanInstance)[ FD ]
Line_8 $$ if (beanInstance instanceof FactoryBean && !isFactoryType) -->Line_10 $$ Class<?> objectType = factory.getObjectType()[ CD ]
Line_9 $$ FactoryBean<?> factory = (FactoryBean<?>) beanInstance-->Line_11 $$ if ((includeNonSingletons || factory.isSingleton()) && objectType != null && (type == null || type.isAssignableFrom(objectType))) [ FD ]
Line_5 $$ for (Map.Entry<String, Object> entry : this.beans.entrySet()) -->Line_7 $$ Object beanInstance = entry.getValue()[ FD ]
