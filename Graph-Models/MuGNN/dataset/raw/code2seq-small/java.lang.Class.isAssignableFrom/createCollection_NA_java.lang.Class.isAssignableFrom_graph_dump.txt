Line_4 $$ if (collectionType.isInterface()) -->Line_5 $$ if (Set.class == collectionType || Collection.class == collectionType) [ CD ]
Line_5 $$ if (Set.class == collectionType || Collection.class == collectionType) -->Line_6 $$ return new LinkedHashSet<E>(capacity)[ CD ]
Line_2 $$ public static <E> Collection<E> createCollection(Class<?> collectionType, Class<?> elementType, int capacity) -->Line_3 $$ Assert.notNull(collectionType, "Collection type must not be null")[ FD ]
Line_2 $$ public static <E> Collection<E> createCollection(Class<?> collectionType, Class<?> elementType, int capacity) -->Line_4 $$ if (collectionType.isInterface()) [ CD ]
Line_2 $$ public static <E> Collection<E> createCollection(Class<?> collectionType, Class<?> elementType, int capacity) -->Line_12 $$ throw new IllegalArgumentException("Unsupported Collection interface: " + collectionType.getName())[ FD ]
Line_2 $$ public static <E> Collection<E> createCollection(Class<?> collectionType, Class<?> elementType, int capacity) -->Line_4 $$ if (collectionType.isInterface()) [ FD ]
Line_7 $$ if (List.class == collectionType) -->Line_9 $$ if (SortedSet.class == collectionType || NavigableSet.class == collectionType) [ CD ]
Line_14 $$ if (EnumSet.class == collectionType) -->Line_15 $$ Assert.notNull(elementType, "Cannot create EnumSet for unknown element type")[ CD ]
Line_9 $$ if (SortedSet.class == collectionType || NavigableSet.class == collectionType) -->Line_10 $$ return new TreeSet<E>()[ CD ]
Line_14 $$ if (EnumSet.class == collectionType) -->Line_16 $$ return (Collection<E>) EnumSet.noneOf(asEnumType(elementType))[ CD ]
Line_2 $$ public static <E> Collection<E> createCollection(Class<?> collectionType, Class<?> elementType, int capacity) -->Line_7 $$ if (List.class == collectionType) [ FD ]
Line_7 $$ if (List.class == collectionType) -->Line_8 $$ return new ArrayList<E>(capacity)[ CD ]
Line_2 $$ public static <E> Collection<E> createCollection(Class<?> collectionType, Class<?> elementType, int capacity) -->Line_15 $$ Assert.notNull(elementType, "Cannot create EnumSet for unknown element type")[ FD ]
Line_2 $$ public static <E> Collection<E> createCollection(Class<?> collectionType, Class<?> elementType, int capacity) -->Line_3 $$ Assert.notNull(collectionType, "Collection type must not be null")[ CD ]
Line_14 $$ if (EnumSet.class == collectionType) -->Line_18 $$ if (!Collection.class.isAssignableFrom(collectionType)) [ CD ]
Line_2 $$ public static <E> Collection<E> createCollection(Class<?> collectionType, Class<?> elementType, int capacity) -->Line_24 $$ throw new IllegalArgumentException("Could not instantiate Collection type: " + collectionType.getName(), ex)[ FD ]
Line_2 $$ public static <E> Collection<E> createCollection(Class<?> collectionType, Class<?> elementType, int capacity) -->Line_22 $$ return (Collection<E>) collectionType.newInstance()[ FD ]
Line_2 $$ public static <E> Collection<E> createCollection(Class<?> collectionType, Class<?> elementType, int capacity) -->Line_19 $$ throw new IllegalArgumentException("Unsupported Collection type: " + collectionType.getName())[ FD ]
Line_2 $$ public static <E> Collection<E> createCollection(Class<?> collectionType, Class<?> elementType, int capacity) -->Line_16 $$ return (Collection<E>) EnumSet.noneOf(asEnumType(elementType))[ FD ]
Line_4 $$ if (collectionType.isInterface()) -->Line_14 $$ if (EnumSet.class == collectionType) [ CD ]
Line_2 $$ public static <E> Collection<E> createCollection(Class<?> collectionType, Class<?> elementType, int capacity) -->Line_18 $$ if (!Collection.class.isAssignableFrom(collectionType)) [ FD ]
Line_5 $$ if (Set.class == collectionType || Collection.class == collectionType) -->Line_7 $$ if (List.class == collectionType) [ CD ]
Line_2 $$ public static <E> Collection<E> createCollection(Class<?> collectionType, Class<?> elementType, int capacity) -->Line_14 $$ if (EnumSet.class == collectionType) [ FD ]
