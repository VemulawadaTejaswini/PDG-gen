Line_2 $$ public static boolean declaresException(Method method, Class<?> exceptionType) -->Line_4 $$ Class<?>[] declaredExceptions = method.getExceptionTypes()[ FD ]
Line_2 $$ public static boolean declaresException(Method method, Class<?> exceptionType) -->Line_6 $$ if (declaredException.isAssignableFrom(exceptionType)) [ FD ]
Line_2 $$ public static boolean declaresException(Method method, Class<?> exceptionType) -->Line_4 $$ Class<?>[] declaredExceptions = method.getExceptionTypes()[ CD ]
Line_6 $$ if (declaredException.isAssignableFrom(exceptionType)) -->Line_7 $$ return true[ CD ]
Line_2 $$ public static boolean declaresException(Method method, Class<?> exceptionType) -->Line_3 $$ Assert.notNull(method, "Method must not be null")[ CD ]
Line_5 $$ for (Class<?> declaredException : declaredExceptions) -->Line_6 $$ if (declaredException.isAssignableFrom(exceptionType)) [ FD ]
Line_2 $$ public static boolean declaresException(Method method, Class<?> exceptionType) -->Line_10 $$ return false[ CD ]
Line_2 $$ public static boolean declaresException(Method method, Class<?> exceptionType) -->Line_3 $$ Assert.notNull(method, "Method must not be null")[ FD ]
