Line_5 $$ if (java.util.Set.class.isAssignableFrom(javaType)) -->Line_7 $$ if (java.util.Map.class.isAssignableFrom(javaType)) [ CD ]
Line_3 $$ if (java.util.List.class.isAssignableFrom(javaType)) -->Line_5 $$ if (java.util.Set.class.isAssignableFrom(javaType)) [ CD ]
Line_2 $$ public static PluralAttribute.CollectionType determineCollectionType(Class javaType) -->Line_3 $$ if (java.util.List.class.isAssignableFrom(javaType)) [ FD ]
Line_7 $$ if (java.util.Map.class.isAssignableFrom(javaType)) -->Line_9 $$ if (java.util.Collection.class.isAssignableFrom(javaType)) [ CD ]
Line_9 $$ if (java.util.Collection.class.isAssignableFrom(javaType)) -->Line_10 $$ return PluralAttribute.CollectionType.COLLECTION[ CD ]
Line_2 $$ public static PluralAttribute.CollectionType determineCollectionType(Class javaType) -->Line_5 $$ if (java.util.Set.class.isAssignableFrom(javaType)) [ FD ]
Line_2 $$ public static PluralAttribute.CollectionType determineCollectionType(Class javaType) -->Line_12 $$ throw new IllegalArgumentException("Expecting collection type [" + javaType.getName() + "]")[ FD ]
Line_7 $$ if (java.util.Map.class.isAssignableFrom(javaType)) -->Line_8 $$ return PluralAttribute.CollectionType.MAP[ CD ]
Line_5 $$ if (java.util.Set.class.isAssignableFrom(javaType)) -->Line_6 $$ return PluralAttribute.CollectionType.SET[ CD ]
Line_2 $$ public static PluralAttribute.CollectionType determineCollectionType(Class javaType) -->Line_7 $$ if (java.util.Map.class.isAssignableFrom(javaType)) [ FD ]
Line_2 $$ public static PluralAttribute.CollectionType determineCollectionType(Class javaType) -->Line_9 $$ if (java.util.Collection.class.isAssignableFrom(javaType)) [ FD ]
Line_3 $$ if (java.util.List.class.isAssignableFrom(javaType)) -->Line_4 $$ return PluralAttribute.CollectionType.LIST[ CD ]
Line_2 $$ public static PluralAttribute.CollectionType determineCollectionType(Class javaType) -->Line_3 $$ if (java.util.List.class.isAssignableFrom(javaType)) [ CD ]
