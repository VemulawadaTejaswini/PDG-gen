Line_11 $$ Class<?> pt = m.getParameterTypes()[0]-->Line_12 $$ if (pt.isAssignableFrom(type))[ FD ]
Line_10 $$ for (Method m : methods) -->Line_11 $$ Class<?> pt = m.getParameterTypes()[0][ FD ]
Line_12 $$ if (pt.isAssignableFrom(type))-->Line_13 $$ return m[ CD ]
Line_2 $$ public Method lookup(ClassReflectionIndex index) -->Line_4 $$ if (type == null) [ CD ]
Line_2 $$ public Method lookup(ClassReflectionIndex index) -->Line_3 $$ Collection<Method> methods = index.getAllMethods(name, 1)[ CD ]
Line_3 $$ Collection<Method> methods = index.getAllMethods(name, 1)-->Line_6 $$ return methods.iterator().next()[ FD ]
Line_10 $$ for (Method m : methods) -->Line_12 $$ if (pt.isAssignableFrom(type))[ FD ]
Line_4 $$ if (type == null) -->Line_5 $$ if (methods.size() == 1)[ CD ]
Line_3 $$ Collection<Method> methods = index.getAllMethods(name, 1)-->Line_5 $$ if (methods.size() == 1)[ FD ]
Line_2 $$ public Method lookup(ClassReflectionIndex index) -->Line_15 $$ return null[ CD ]
Line_5 $$ if (methods.size() == 1)-->Line_8 $$ return null[ CD ]
Line_5 $$ if (methods.size() == 1)-->Line_6 $$ return methods.iterator().next()[ CD ]
Line_2 $$ public Method lookup(ClassReflectionIndex index) -->Line_3 $$ Collection<Method> methods = index.getAllMethods(name, 1)[ FD ]
