Line_6 $$ if (Clob.class.isAssignableFrom(value.getClass())) -->Line_8 $$ if (Reader.class.isAssignableFrom(value.getClass())) [ CD ]
Line_3 $$ if (value == null) -->Line_4 $$ return null[ CD ]
Line_9 $$ Reader reader = (Reader) value-->Line_10 $$ return options.getLobCreator().createClob(DataHelper.extractString(reader))[ FD ]
Line_8 $$ if (Reader.class.isAssignableFrom(value.getClass())) -->Line_10 $$ return options.getLobCreator().createClob(DataHelper.extractString(reader))[ CD ]
Line_2 $$ public <X> Clob wrap(X value, WrapperOptions options) -->Line_3 $$ if (value == null) [ CD ]
Line_2 $$ public <X> Clob wrap(X value, WrapperOptions options) -->Line_8 $$ if (Reader.class.isAssignableFrom(value.getClass())) [ FD ]
Line_2 $$ public <X> Clob wrap(X value, WrapperOptions options) -->Line_12 $$ throw unknownWrap(value.getClass())[ FD ]
Line_2 $$ public <X> Clob wrap(X value, WrapperOptions options) -->Line_3 $$ if (value == null) [ FD ]
Line_8 $$ if (Reader.class.isAssignableFrom(value.getClass())) -->Line_9 $$ Reader reader = (Reader) value[ CD ]
Line_2 $$ public <X> Clob wrap(X value, WrapperOptions options) -->Line_10 $$ return options.getLobCreator().createClob(DataHelper.extractString(reader))[ FD ]
Line_2 $$ public <X> Clob wrap(X value, WrapperOptions options) -->Line_6 $$ if (Clob.class.isAssignableFrom(value.getClass())) [ CD ]
Line_2 $$ public <X> Clob wrap(X value, WrapperOptions options) -->Line_6 $$ if (Clob.class.isAssignableFrom(value.getClass())) [ FD ]
Line_6 $$ if (Clob.class.isAssignableFrom(value.getClass())) -->Line_7 $$ return options.getLobCreator().wrap((Clob) value)[ CD ]
Line_2 $$ public <X> Clob wrap(X value, WrapperOptions options) -->Line_7 $$ return options.getLobCreator().wrap((Clob) value)[ FD ]
