Line_4 $$ Log loggerToUse = logger-->Line_14 $$ if (loggerToUse.isInfoEnabled()) [ FD ]
Line_4 $$ Log loggerToUse = logger-->Line_10 $$ if (loggerToUse.isDebugEnabled()) [ FD ]
Line_2 $$ static void handleIntrospectionFailure(AnnotatedElement element, Exception ex) -->Line_4 $$ Log loggerToUse = logger[ CD ]
Line_6 $$ loggerToUse = LogFactory.getLog(AnnotationUtils.class)-->Line_11 $$ loggerToUse.debug("Failed to introspect meta-annotations on [" + element + "]: " + ex)[ FD ]
Line_4 $$ Log loggerToUse = logger-->Line_15 $$ loggerToUse.info("Failed to introspect annotations on [" + element + "]: " + ex)[ FD ]
Line_10 $$ if (loggerToUse.isDebugEnabled()) -->Line_11 $$ loggerToUse.debug("Failed to introspect meta-annotations on [" + element + "]: " + ex)[ CD ]
Line_2 $$ static void handleIntrospectionFailure(AnnotatedElement element, Exception ex) -->Line_5 $$ if (loggerToUse == null) [ CD ]
Line_14 $$ if (loggerToUse.isInfoEnabled()) -->Line_15 $$ loggerToUse.info("Failed to introspect annotations on [" + element + "]: " + ex)[ CD ]
Line_4 $$ Log loggerToUse = logger-->Line_5 $$ if (loggerToUse == null) [ FD ]
Line_2 $$ static void handleIntrospectionFailure(AnnotatedElement element, Exception ex) -->Line_3 $$ rethrowAnnotationConfigurationException(ex)[ FD ]
Line_4 $$ Log loggerToUse = logger-->Line_6 $$ loggerToUse = LogFactory.getLog(AnnotationUtils.class)[ FD ]
Line_6 $$ loggerToUse = LogFactory.getLog(AnnotationUtils.class)-->Line_10 $$ if (loggerToUse.isDebugEnabled()) [ FD ]
Line_9 $$ if (element instanceof Class && Annotation.class.isAssignableFrom((Class<?>) element)) -->Line_14 $$ if (loggerToUse.isInfoEnabled()) [ CD ]
Line_6 $$ loggerToUse = LogFactory.getLog(AnnotationUtils.class)-->Line_14 $$ if (loggerToUse.isInfoEnabled()) [ FD ]
Line_9 $$ if (element instanceof Class && Annotation.class.isAssignableFrom((Class<?>) element)) -->Line_10 $$ if (loggerToUse.isDebugEnabled()) [ CD ]
Line_2 $$ static void handleIntrospectionFailure(AnnotatedElement element, Exception ex) -->Line_9 $$ if (element instanceof Class && Annotation.class.isAssignableFrom((Class<?>) element)) [ CD ]
Line_2 $$ static void handleIntrospectionFailure(AnnotatedElement element, Exception ex) -->Line_3 $$ rethrowAnnotationConfigurationException(ex)[ CD ]
Line_5 $$ if (loggerToUse == null) -->Line_6 $$ loggerToUse = LogFactory.getLog(AnnotationUtils.class)[ CD ]
Line_4 $$ Log loggerToUse = logger-->Line_11 $$ loggerToUse.debug("Failed to introspect meta-annotations on [" + element + "]: " + ex)[ FD ]
Line_6 $$ loggerToUse = LogFactory.getLog(AnnotationUtils.class)-->Line_15 $$ loggerToUse.info("Failed to introspect annotations on [" + element + "]: " + ex)[ FD ]
