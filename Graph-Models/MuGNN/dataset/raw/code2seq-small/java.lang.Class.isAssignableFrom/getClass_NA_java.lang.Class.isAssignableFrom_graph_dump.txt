Line_3 $$ String className = cls.contains(".") ? cls : "org.apache.cassandra.locator." + cls-->Line_6 $$ throw new ConfigurationException(String.format("Specified replication strategy class (%s) is not derived from AbstractReplicationStrategy", className))[ FD ]
Line_2 $$ public static Class<AbstractReplicationStrategy> getClass(String cls) throws ConfigurationException -->Line_3 $$ String className = cls.contains(".") ? cls : "org.apache.cassandra.locator." + cls[ FD ]
Line_2 $$ public static Class<AbstractReplicationStrategy> getClass(String cls) throws ConfigurationException -->Line_4 $$ Class<AbstractReplicationStrategy> strategyClass = FBUtilities.classForName(className, "replication strategy")[ CD ]
Line_2 $$ public static Class<AbstractReplicationStrategy> getClass(String cls) throws ConfigurationException -->Line_3 $$ String className = cls.contains(".") ? cls : "org.apache.cassandra.locator." + cls[ CD ]
Line_4 $$ Class<AbstractReplicationStrategy> strategyClass = FBUtilities.classForName(className, "replication strategy")-->Line_5 $$ if (!AbstractReplicationStrategy.class.isAssignableFrom(strategyClass)) [ FD ]
Line_2 $$ public static Class<AbstractReplicationStrategy> getClass(String cls) throws ConfigurationException -->Line_5 $$ if (!AbstractReplicationStrategy.class.isAssignableFrom(strategyClass)) [ CD ]
Line_2 $$ public static Class<AbstractReplicationStrategy> getClass(String cls) throws ConfigurationException -->Line_8 $$ return strategyClass[ CD ]
Line_3 $$ String className = cls.contains(".") ? cls : "org.apache.cassandra.locator." + cls-->Line_4 $$ Class<AbstractReplicationStrategy> strategyClass = FBUtilities.classForName(className, "replication strategy")[ FD ]
