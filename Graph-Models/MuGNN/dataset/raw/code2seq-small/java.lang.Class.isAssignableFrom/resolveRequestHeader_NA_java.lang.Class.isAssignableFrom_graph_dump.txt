Line_2 $$ private Object resolveRequestHeader(String headerName, boolean required, String defaultValue, MethodParameter methodParam, NativeWebRequest webRequest, Object handlerForInitBinderCall) throws Exception -->Line_3 $$ Class<?> paramType = methodParam.getParameterType()[ FD ]
Line_3 $$ Class<?> paramType = methodParam.getParameterType()-->Line_21 $$ headerValue = checkValue(headerName, headerValue, paramType)[ FD ]
Line_4 $$ if (Map.class.isAssignableFrom(paramType)) -->Line_5 $$ return resolveRequestHeaderMap((Class<? extends Map<?, ?>>) paramType, webRequest)[ CD ]
Line_10 $$ Object headerValue = null-->Line_15 $$ if (headerValue == null) [ FD ]
Line_2 $$ private Object resolveRequestHeader(String headerName, boolean required, String defaultValue, MethodParameter methodParam, NativeWebRequest webRequest, Object handlerForInitBinderCall) throws Exception -->Line_4 $$ if (Map.class.isAssignableFrom(paramType)) [ CD ]
Line_2 $$ private Object resolveRequestHeader(String headerName, boolean required, String defaultValue, MethodParameter methodParam, NativeWebRequest webRequest, Object handlerForInitBinderCall) throws Exception -->Line_25 $$ return binder.convertIfNecessary(headerValue, paramType, methodParam)[ CD ]
Line_23 $$ WebDataBinder binder = createBinder(webRequest, null, headerName)-->Line_25 $$ return binder.convertIfNecessary(headerValue, paramType, methodParam)[ FD ]
Line_2 $$ private Object resolveRequestHeader(String headerName, boolean required, String defaultValue, MethodParameter methodParam, NativeWebRequest webRequest, Object handlerForInitBinderCall) throws Exception -->Line_24 $$ initBinder(handlerForInitBinderCall, headerName, binder, webRequest)[ CD ]
Line_13 $$ headerValue = (headerValues.length == 1 ? headerValues[0] : headerValues)-->Line_25 $$ return binder.convertIfNecessary(headerValue, paramType, methodParam)[ FD ]
Line_10 $$ Object headerValue = null-->Line_21 $$ headerValue = checkValue(headerName, headerValue, paramType)[ FD ]
Line_3 $$ Class<?> paramType = methodParam.getParameterType()-->Line_19 $$ raiseMissingHeaderException(headerName, paramType)[ FD ]
Line_2 $$ private Object resolveRequestHeader(String headerName, boolean required, String defaultValue, MethodParameter methodParam, NativeWebRequest webRequest, Object handlerForInitBinderCall) throws Exception -->Line_8 $$ headerName = getRequiredParameterName(methodParam)[ FD ]
Line_11 $$ String[] headerValues = webRequest.getHeaderValues(headerName)-->Line_12 $$ if (headerValues != null) [ FD ]
Line_2 $$ private Object resolveRequestHeader(String headerName, boolean required, String defaultValue, MethodParameter methodParam, NativeWebRequest webRequest, Object handlerForInitBinderCall) throws Exception -->Line_11 $$ String[] headerValues = webRequest.getHeaderValues(headerName)[ FD ]
Line_2 $$ private Object resolveRequestHeader(String headerName, boolean required, String defaultValue, MethodParameter methodParam, NativeWebRequest webRequest, Object handlerForInitBinderCall) throws Exception -->Line_15 $$ if (headerValue == null) [ CD ]
Line_2 $$ private Object resolveRequestHeader(String headerName, boolean required, String defaultValue, MethodParameter methodParam, NativeWebRequest webRequest, Object handlerForInitBinderCall) throws Exception -->Line_21 $$ headerValue = checkValue(headerName, headerValue, paramType)[ FD ]
Line_8 $$ headerName = getRequiredParameterName(methodParam)-->Line_24 $$ initBinder(handlerForInitBinderCall, headerName, binder, webRequest)[ FD ]
Line_2 $$ private Object resolveRequestHeader(String headerName, boolean required, String defaultValue, MethodParameter methodParam, NativeWebRequest webRequest, Object handlerForInitBinderCall) throws Exception -->Line_23 $$ WebDataBinder binder = createBinder(webRequest, null, headerName)[ FD ]
Line_8 $$ headerName = getRequiredParameterName(methodParam)-->Line_11 $$ String[] headerValues = webRequest.getHeaderValues(headerName)[ FD ]
Line_17 $$ headerValue = resolveDefaultValue(defaultValue)-->Line_21 $$ headerValue = checkValue(headerName, headerValue, paramType)[ FD ]
Line_2 $$ private Object resolveRequestHeader(String headerName, boolean required, String defaultValue, MethodParameter methodParam, NativeWebRequest webRequest, Object handlerForInitBinderCall) throws Exception -->Line_5 $$ return resolveRequestHeaderMap((Class<? extends Map<?, ?>>) paramType, webRequest)[ FD ]
Line_12 $$ if (headerValues != null) -->Line_13 $$ headerValue = (headerValues.length == 1 ? headerValues[0] : headerValues)[ CD ]
Line_18 $$ if (required) -->Line_19 $$ raiseMissingHeaderException(headerName, paramType)[ CD ]
Line_17 $$ headerValue = resolveDefaultValue(defaultValue)-->Line_25 $$ return binder.convertIfNecessary(headerValue, paramType, methodParam)[ FD ]
Line_2 $$ private Object resolveRequestHeader(String headerName, boolean required, String defaultValue, MethodParameter methodParam, NativeWebRequest webRequest, Object handlerForInitBinderCall) throws Exception -->Line_24 $$ initBinder(handlerForInitBinderCall, headerName, binder, webRequest)[ FD ]
Line_10 $$ Object headerValue = null-->Line_25 $$ return binder.convertIfNecessary(headerValue, paramType, methodParam)[ FD ]
Line_2 $$ private Object resolveRequestHeader(String headerName, boolean required, String defaultValue, MethodParameter methodParam, NativeWebRequest webRequest, Object handlerForInitBinderCall) throws Exception -->Line_7 $$ if (headerName.length() == 0) [ CD ]
Line_2 $$ private Object resolveRequestHeader(String headerName, boolean required, String defaultValue, MethodParameter methodParam, NativeWebRequest webRequest, Object handlerForInitBinderCall) throws Exception -->Line_11 $$ String[] headerValues = webRequest.getHeaderValues(headerName)[ CD ]
Line_2 $$ private Object resolveRequestHeader(String headerName, boolean required, String defaultValue, MethodParameter methodParam, NativeWebRequest webRequest, Object handlerForInitBinderCall) throws Exception -->Line_25 $$ return binder.convertIfNecessary(headerValue, paramType, methodParam)[ FD ]
Line_13 $$ headerValue = (headerValues.length == 1 ? headerValues[0] : headerValues)-->Line_17 $$ headerValue = resolveDefaultValue(defaultValue)[ FD ]
Line_2 $$ private Object resolveRequestHeader(String headerName, boolean required, String defaultValue, MethodParameter methodParam, NativeWebRequest webRequest, Object handlerForInitBinderCall) throws Exception -->Line_19 $$ raiseMissingHeaderException(headerName, paramType)[ FD ]
Line_23 $$ WebDataBinder binder = createBinder(webRequest, null, headerName)-->Line_24 $$ initBinder(handlerForInitBinderCall, headerName, binder, webRequest)[ FD ]
Line_13 $$ headerValue = (headerValues.length == 1 ? headerValues[0] : headerValues)-->Line_21 $$ headerValue = checkValue(headerName, headerValue, paramType)[ FD ]
Line_2 $$ private Object resolveRequestHeader(String headerName, boolean required, String defaultValue, MethodParameter methodParam, NativeWebRequest webRequest, Object handlerForInitBinderCall) throws Exception -->Line_23 $$ WebDataBinder binder = createBinder(webRequest, null, headerName)[ CD ]
Line_10 $$ Object headerValue = null-->Line_13 $$ headerValue = (headerValues.length == 1 ? headerValues[0] : headerValues)[ FD ]
Line_13 $$ headerValue = (headerValues.length == 1 ? headerValues[0] : headerValues)-->Line_15 $$ if (headerValue == null) [ FD ]
Line_10 $$ Object headerValue = null-->Line_17 $$ headerValue = resolveDefaultValue(defaultValue)[ FD ]
Line_2 $$ private Object resolveRequestHeader(String headerName, boolean required, String defaultValue, MethodParameter methodParam, NativeWebRequest webRequest, Object handlerForInitBinderCall) throws Exception -->Line_17 $$ headerValue = resolveDefaultValue(defaultValue)[ FD ]
Line_7 $$ if (headerName.length() == 0) -->Line_8 $$ headerName = getRequiredParameterName(methodParam)[ CD ]
Line_15 $$ if (headerValue == null) -->Line_16 $$ if (defaultValue != null) [ CD ]
Line_21 $$ headerValue = checkValue(headerName, headerValue, paramType)-->Line_25 $$ return binder.convertIfNecessary(headerValue, paramType, methodParam)[ FD ]
Line_8 $$ headerName = getRequiredParameterName(methodParam)-->Line_19 $$ raiseMissingHeaderException(headerName, paramType)[ FD ]
Line_16 $$ if (defaultValue != null) -->Line_17 $$ headerValue = resolveDefaultValue(defaultValue)[ CD ]
Line_2 $$ private Object resolveRequestHeader(String headerName, boolean required, String defaultValue, MethodParameter methodParam, NativeWebRequest webRequest, Object handlerForInitBinderCall) throws Exception -->Line_7 $$ if (headerName.length() == 0) [ FD ]
Line_2 $$ private Object resolveRequestHeader(String headerName, boolean required, String defaultValue, MethodParameter methodParam, NativeWebRequest webRequest, Object handlerForInitBinderCall) throws Exception -->Line_12 $$ if (headerValues != null) [ CD ]
Line_3 $$ Class<?> paramType = methodParam.getParameterType()-->Line_4 $$ if (Map.class.isAssignableFrom(paramType)) [ FD ]
Line_15 $$ if (headerValue == null) -->Line_21 $$ headerValue = checkValue(headerName, headerValue, paramType)[ CD ]
Line_8 $$ headerName = getRequiredParameterName(methodParam)-->Line_23 $$ WebDataBinder binder = createBinder(webRequest, null, headerName)[ FD ]
Line_3 $$ Class<?> paramType = methodParam.getParameterType()-->Line_25 $$ return binder.convertIfNecessary(headerValue, paramType, methodParam)[ FD ]
Line_2 $$ private Object resolveRequestHeader(String headerName, boolean required, String defaultValue, MethodParameter methodParam, NativeWebRequest webRequest, Object handlerForInitBinderCall) throws Exception -->Line_3 $$ Class<?> paramType = methodParam.getParameterType()[ CD ]
Line_16 $$ if (defaultValue != null) -->Line_18 $$ if (required) [ CD ]
Line_2 $$ private Object resolveRequestHeader(String headerName, boolean required, String defaultValue, MethodParameter methodParam, NativeWebRequest webRequest, Object handlerForInitBinderCall) throws Exception -->Line_16 $$ if (defaultValue != null) [ FD ]
Line_8 $$ headerName = getRequiredParameterName(methodParam)-->Line_21 $$ headerValue = checkValue(headerName, headerValue, paramType)[ FD ]
Line_2 $$ private Object resolveRequestHeader(String headerName, boolean required, String defaultValue, MethodParameter methodParam, NativeWebRequest webRequest, Object handlerForInitBinderCall) throws Exception -->Line_10 $$ Object headerValue = null[ CD ]
