Line_2 $$ public static <T> Set<T> getInstancesOf(Injector injector, Class<T> baseClass) -->Line_8 $$ if (keyType != null && baseClass.isAssignableFrom(keyType)) [ FD ]
Line_9 $$ Binding<?> binding = entry.getValue()-->Line_10 $$ Object value = binding.getProvider().get()[ FD ]
Line_10 $$ Object value = binding.getProvider().get()-->Line_12 $$ T castValue = baseClass.cast(value)[ FD ]
Line_2 $$ public static <T> Set<T> getInstancesOf(Injector injector, Class<T> baseClass) -->Line_17 $$ return answer[ CD ]
Line_6 $$ Key<?> key = entry.getKey()-->Line_7 $$ Class<?> keyType = getKeyType(key)[ FD ]
Line_2 $$ public static <T> Set<T> getInstancesOf(Injector injector, Class<T> baseClass) -->Line_12 $$ T castValue = baseClass.cast(value)[ FD ]
Line_5 $$ for (Entry<Key<?>, Binding<?>> entry : entries) -->Line_9 $$ Binding<?> binding = entry.getValue()[ FD ]
Line_2 $$ public static <T> Set<T> getInstancesOf(Injector injector, Class<T> baseClass) -->Line_3 $$ Set<T> answer = new HashSet()[ CD ]
Line_8 $$ if (keyType != null && baseClass.isAssignableFrom(keyType)) -->Line_10 $$ Object value = binding.getProvider().get()[ CD ]
Line_10 $$ Object value = binding.getProvider().get()-->Line_11 $$ if (value != null) [ FD ]
Line_3 $$ Set<T> answer = new HashSet()-->Line_13 $$ answer.add(castValue)[ FD ]
Line_5 $$ for (Entry<Key<?>, Binding<?>> entry : entries) -->Line_6 $$ Key<?> key = entry.getKey()[ FD ]
Line_7 $$ Class<?> keyType = getKeyType(key)-->Line_8 $$ if (keyType != null && baseClass.isAssignableFrom(keyType)) [ FD ]
Line_8 $$ if (keyType != null && baseClass.isAssignableFrom(keyType)) -->Line_9 $$ Binding<?> binding = entry.getValue()[ CD ]
Line_2 $$ public static <T> Set<T> getInstancesOf(Injector injector, Class<T> baseClass) -->Line_4 $$ Set<Entry<Key<?>, Binding<?>>> entries = injector.getBindings().entrySet()[ CD ]
Line_11 $$ if (value != null) -->Line_13 $$ answer.add(castValue)[ CD ]
Line_8 $$ if (keyType != null && baseClass.isAssignableFrom(keyType)) -->Line_11 $$ if (value != null) [ CD ]
Line_12 $$ T castValue = baseClass.cast(value)-->Line_13 $$ answer.add(castValue)[ FD ]
Line_11 $$ if (value != null) -->Line_12 $$ T castValue = baseClass.cast(value)[ CD ]
Line_2 $$ public static <T> Set<T> getInstancesOf(Injector injector, Class<T> baseClass) -->Line_4 $$ Set<Entry<Key<?>, Binding<?>>> entries = injector.getBindings().entrySet()[ FD ]
