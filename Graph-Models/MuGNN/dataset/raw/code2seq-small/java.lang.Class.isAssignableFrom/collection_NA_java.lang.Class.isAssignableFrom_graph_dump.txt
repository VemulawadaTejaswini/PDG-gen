Line_2 $$ public static TypeDescriptor collection(Class<?> collectionType, TypeDescriptor elementTypeDescriptor) -->Line_8 $$ return new TypeDescriptor(ResolvableType.forClassWithGenerics(collectionType, element), null, null)[ FD ]
Line_2 $$ public static TypeDescriptor collection(Class<?> collectionType, TypeDescriptor elementTypeDescriptor) -->Line_4 $$ if (!Collection.class.isAssignableFrom(collectionType)) [ CD ]
Line_2 $$ public static TypeDescriptor collection(Class<?> collectionType, TypeDescriptor elementTypeDescriptor) -->Line_8 $$ return new TypeDescriptor(ResolvableType.forClassWithGenerics(collectionType, element), null, null)[ CD ]
Line_2 $$ public static TypeDescriptor collection(Class<?> collectionType, TypeDescriptor elementTypeDescriptor) -->Line_4 $$ if (!Collection.class.isAssignableFrom(collectionType)) [ FD ]
Line_7 $$ ResolvableType element = (elementTypeDescriptor != null ? elementTypeDescriptor.resolvableType : null)-->Line_8 $$ return new TypeDescriptor(ResolvableType.forClassWithGenerics(collectionType, element), null, null)[ FD ]
Line_2 $$ public static TypeDescriptor collection(Class<?> collectionType, TypeDescriptor elementTypeDescriptor) -->Line_3 $$ Assert.notNull(collectionType, "collectionType must not be null")[ FD ]
Line_2 $$ public static TypeDescriptor collection(Class<?> collectionType, TypeDescriptor elementTypeDescriptor) -->Line_3 $$ Assert.notNull(collectionType, "collectionType must not be null")[ CD ]
Line_2 $$ public static TypeDescriptor collection(Class<?> collectionType, TypeDescriptor elementTypeDescriptor) -->Line_7 $$ ResolvableType element = (elementTypeDescriptor != null ? elementTypeDescriptor.resolvableType : null)[ CD ]
