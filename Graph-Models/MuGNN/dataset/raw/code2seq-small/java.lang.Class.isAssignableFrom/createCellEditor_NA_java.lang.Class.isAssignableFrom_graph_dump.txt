Line_3 $$ if (Enum.class.isAssignableFrom(type)) -->Line_4 $$ return new ComboTableCellEditor((Class<? extends Enum>) type, false)[ CD ]
Line_2 $$ protected TableCellEditor createCellEditor(DomElement element, Class type) -->Line_3 $$ if (Enum.class.isAssignableFrom(type)) [ CD ]
Line_2 $$ protected TableCellEditor createCellEditor(DomElement element, Class type) -->Line_8 $$ return function.fun(element)[ FD ]
Line_2 $$ protected TableCellEditor createCellEditor(DomElement element, Class type) -->Line_6 $$ final Function<DomElement, TableCellEditor> function = myCustomCellEditorCreators.get(type)[ CD ]
Line_2 $$ protected TableCellEditor createCellEditor(DomElement element, Class type) -->Line_3 $$ if (Enum.class.isAssignableFrom(type)) [ FD ]
Line_2 $$ protected TableCellEditor createCellEditor(DomElement element, Class type) -->Line_6 $$ final Function<DomElement, TableCellEditor> function = myCustomCellEditorCreators.get(type)[ FD ]
Line_2 $$ protected TableCellEditor createCellEditor(DomElement element, Class type) -->Line_8 $$ return function.fun(element)[ CD ]
Line_6 $$ final Function<DomElement, TableCellEditor> function = myCustomCellEditorCreators.get(type)-->Line_8 $$ return function.fun(element)[ FD ]
