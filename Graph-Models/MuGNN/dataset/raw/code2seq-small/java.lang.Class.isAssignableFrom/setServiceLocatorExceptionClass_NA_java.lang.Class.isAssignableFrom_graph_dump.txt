Line_2 $$ public void setServiceLocatorExceptionClass(Class<? extends Exception> serviceLocatorExceptionClass) -->Line_3 $$ if (serviceLocatorExceptionClass != null && !Exception.class.isAssignableFrom(serviceLocatorExceptionClass)) [ CD ]
Line_2 $$ public void setServiceLocatorExceptionClass(Class<? extends Exception> serviceLocatorExceptionClass) -->Line_3 $$ if (serviceLocatorExceptionClass != null && !Exception.class.isAssignableFrom(serviceLocatorExceptionClass)) [ FD ]
Line_2 $$ public void setServiceLocatorExceptionClass(Class<? extends Exception> serviceLocatorExceptionClass) -->Line_4 $$ throw new IllegalArgumentException("serviceLocatorException [" + serviceLocatorExceptionClass.getName() + "] is not a subclass of Exception")[ FD ]
Line_2 $$ public void setServiceLocatorExceptionClass(Class<? extends Exception> serviceLocatorExceptionClass) -->Line_6 $$ this.serviceLocatorExceptionConstructor = determineServiceLocatorExceptionConstructor(serviceLocatorExceptionClass)[ FD ]
Line_2 $$ public void setServiceLocatorExceptionClass(Class<? extends Exception> serviceLocatorExceptionClass) -->Line_6 $$ this.serviceLocatorExceptionConstructor = determineServiceLocatorExceptionConstructor(serviceLocatorExceptionClass)[ CD ]
