Line_2 $$ private <X, Y, E, K> AttributeImplementor<X, Y> buildPluralAttribute(PluralAttributeMetadata<X, Y, E> attributeMetadata) -->Line_8 $$ return PluralAttributeImpl.create(attributeMetadata.getOwnerType(), elementType, attributeMetadata.getJavaType(), null).member(attributeMetadata.getMember()).property(attributeMetadata.getPropertyMapping()).persistentAttributeType(attributeMetadata.getPersistentAttributeType()).build()[ CD ]
Line_2 $$ private <X, Y, E, K> AttributeImplementor<X, Y> buildPluralAttribute(PluralAttributeMetadata<X, Y, E> attributeMetadata) -->Line_4 $$ if (java.util.Map.class.isAssignableFrom(attributeMetadata.getJavaType())) [ CD ]
Line_5 $$ final Type<K> keyType = getMetaModelType(attributeMetadata.getMapKeyValueContext())-->Line_6 $$ return PluralAttributeImpl.create(attributeMetadata.getOwnerType(), elementType, attributeMetadata.getJavaType(), keyType).member(attributeMetadata.getMember()).property(attributeMetadata.getPropertyMapping()).persistentAttributeType(attributeMetadata.getPersistentAttributeType()).build()[ FD ]
Line_4 $$ if (java.util.Map.class.isAssignableFrom(attributeMetadata.getJavaType())) -->Line_5 $$ final Type<K> keyType = getMetaModelType(attributeMetadata.getMapKeyValueContext())[ CD ]
Line_3 $$ final Type<E> elementType = getMetaModelType(attributeMetadata.getElementValueContext())-->Line_8 $$ return PluralAttributeImpl.create(attributeMetadata.getOwnerType(), elementType, attributeMetadata.getJavaType(), null).member(attributeMetadata.getMember()).property(attributeMetadata.getPropertyMapping()).persistentAttributeType(attributeMetadata.getPersistentAttributeType()).build()[ FD ]
Line_4 $$ if (java.util.Map.class.isAssignableFrom(attributeMetadata.getJavaType())) -->Line_6 $$ return PluralAttributeImpl.create(attributeMetadata.getOwnerType(), elementType, attributeMetadata.getJavaType(), keyType).member(attributeMetadata.getMember()).property(attributeMetadata.getPropertyMapping()).persistentAttributeType(attributeMetadata.getPersistentAttributeType()).build()[ CD ]
Line_2 $$ private <X, Y, E, K> AttributeImplementor<X, Y> buildPluralAttribute(PluralAttributeMetadata<X, Y, E> attributeMetadata) -->Line_8 $$ return PluralAttributeImpl.create(attributeMetadata.getOwnerType(), elementType, attributeMetadata.getJavaType(), null).member(attributeMetadata.getMember()).property(attributeMetadata.getPropertyMapping()).persistentAttributeType(attributeMetadata.getPersistentAttributeType()).build()[ FD ]
Line_2 $$ private <X, Y, E, K> AttributeImplementor<X, Y> buildPluralAttribute(PluralAttributeMetadata<X, Y, E> attributeMetadata) -->Line_3 $$ final Type<E> elementType = getMetaModelType(attributeMetadata.getElementValueContext())[ CD ]
Line_3 $$ final Type<E> elementType = getMetaModelType(attributeMetadata.getElementValueContext())-->Line_6 $$ return PluralAttributeImpl.create(attributeMetadata.getOwnerType(), elementType, attributeMetadata.getJavaType(), keyType).member(attributeMetadata.getMember()).property(attributeMetadata.getPropertyMapping()).persistentAttributeType(attributeMetadata.getPersistentAttributeType()).build()[ FD ]
Line_2 $$ private <X, Y, E, K> AttributeImplementor<X, Y> buildPluralAttribute(PluralAttributeMetadata<X, Y, E> attributeMetadata) -->Line_5 $$ final Type<K> keyType = getMetaModelType(attributeMetadata.getMapKeyValueContext())[ FD ]
Line_2 $$ private <X, Y, E, K> AttributeImplementor<X, Y> buildPluralAttribute(PluralAttributeMetadata<X, Y, E> attributeMetadata) -->Line_4 $$ if (java.util.Map.class.isAssignableFrom(attributeMetadata.getJavaType())) [ FD ]
Line_2 $$ private <X, Y, E, K> AttributeImplementor<X, Y> buildPluralAttribute(PluralAttributeMetadata<X, Y, E> attributeMetadata) -->Line_6 $$ return PluralAttributeImpl.create(attributeMetadata.getOwnerType(), elementType, attributeMetadata.getJavaType(), keyType).member(attributeMetadata.getMember()).property(attributeMetadata.getPropertyMapping()).persistentAttributeType(attributeMetadata.getPersistentAttributeType()).build()[ FD ]
Line_2 $$ private <X, Y, E, K> AttributeImplementor<X, Y> buildPluralAttribute(PluralAttributeMetadata<X, Y, E> attributeMetadata) -->Line_3 $$ final Type<E> elementType = getMetaModelType(attributeMetadata.getElementValueContext())[ FD ]
