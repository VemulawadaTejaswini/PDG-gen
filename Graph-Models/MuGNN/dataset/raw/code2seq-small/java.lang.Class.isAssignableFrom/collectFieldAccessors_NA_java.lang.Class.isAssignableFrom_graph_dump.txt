Line_2 $$ private static void collectFieldAccessors(@NotNull Class<?> aClass, @NotNull List<MutableAccessor> accessors) -->Line_9 $$ accessors.add(new FieldAccessor(field))[ FD ]
Line_6 $$ int modifiers = field.getModifiers()-->Line_7 $$ if (!Modifier.isStatic(modifiers) && (field.getAnnotation(OptionTag.class) != null || field.getAnnotation(Tag.class) != null || field.getAnnotation(Attribute.class) != null || field.getAnnotation(Property.class) != null || field.getAnnotation(Text.class) != null || field.getAnnotation(CollectionBean.class) != null || field.getAnnotation(MapAnnotation.class) != null || field.getAnnotation(AbstractCollection.class) != null || (Modifier.isPublic(modifiers) && (!Modifier.isFinal(modifiers) || Collection.class.isAssignableFrom(field.getType())) && !Modifier.isTransient(modifiers) && field.getAnnotation(Transient.class) == null))) [ FD ]
Line_5 $$ for (Field field : currentClass.getDeclaredFields()) -->Line_7 $$ if (!Modifier.isStatic(modifiers) && (field.getAnnotation(OptionTag.class) != null || field.getAnnotation(Tag.class) != null || field.getAnnotation(Attribute.class) != null || field.getAnnotation(Property.class) != null || field.getAnnotation(Text.class) != null || field.getAnnotation(CollectionBean.class) != null || field.getAnnotation(MapAnnotation.class) != null || field.getAnnotation(AbstractCollection.class) != null || (Modifier.isPublic(modifiers) && (!Modifier.isFinal(modifiers) || Collection.class.isAssignableFrom(field.getType())) && !Modifier.isTransient(modifiers) && field.getAnnotation(Transient.class) == null))) [ FD ]
Line_3 $$ Class<?> currentClass = aClass-->Line_5 $$ for (Field field : currentClass.getDeclaredFields()) [ FD ]
Line_4 $$ do -->Line_5 $$ for (Field field : currentClass.getDeclaredFields()) [ FD ]
Line_2 $$ private static void collectFieldAccessors(@NotNull Class<?> aClass, @NotNull List<MutableAccessor> accessors) -->Line_4 $$ do [ CD ]
Line_2 $$ private static void collectFieldAccessors(@NotNull Class<?> aClass, @NotNull List<MutableAccessor> accessors) -->Line_3 $$ Class<?> currentClass = aClass[ CD ]
Line_5 $$ for (Field field : currentClass.getDeclaredFields()) -->Line_6 $$ int modifiers = field.getModifiers()[ FD ]
Line_7 $$ if (!Modifier.isStatic(modifiers) && (field.getAnnotation(OptionTag.class) != null || field.getAnnotation(Tag.class) != null || field.getAnnotation(Attribute.class) != null || field.getAnnotation(Property.class) != null || field.getAnnotation(Text.class) != null || field.getAnnotation(CollectionBean.class) != null || field.getAnnotation(MapAnnotation.class) != null || field.getAnnotation(AbstractCollection.class) != null || (Modifier.isPublic(modifiers) && (!Modifier.isFinal(modifiers) || Collection.class.isAssignableFrom(field.getType())) && !Modifier.isTransient(modifiers) && field.getAnnotation(Transient.class) == null))) -->Line_9 $$ accessors.add(new FieldAccessor(field))[ CD ]
Line_3 $$ Class<?> currentClass = aClass-->Line_4 $$ do [ FD ]
