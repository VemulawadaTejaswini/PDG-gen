Line_2 $$ public Type byClass(Class clazz, Properties parameters) -->Line_10 $$ return custom(clazz, parameters)[ FD ]
Line_2 $$ public Type byClass(Class clazz, Properties parameters) -->Line_6 $$ if (CompositeUserType.class.isAssignableFrom(clazz)) [ CD ]
Line_2 $$ public Type byClass(Class clazz, Properties parameters) -->Line_3 $$ if (Type.class.isAssignableFrom(clazz)) [ CD ]
Line_2 $$ public Type byClass(Class clazz, Properties parameters) -->Line_9 $$ if (UserType.class.isAssignableFrom(clazz)) [ CD ]
Line_15 $$ if (Serializable.class.isAssignableFrom(clazz)) -->Line_16 $$ return serializable(clazz)[ CD ]
Line_2 $$ public Type byClass(Class clazz, Properties parameters) -->Line_7 $$ return customComponent(clazz, parameters)[ FD ]
Line_6 $$ if (CompositeUserType.class.isAssignableFrom(clazz)) -->Line_7 $$ return customComponent(clazz, parameters)[ CD ]
Line_9 $$ if (UserType.class.isAssignableFrom(clazz)) -->Line_10 $$ return custom(clazz, parameters)[ CD ]
Line_2 $$ public Type byClass(Class clazz, Properties parameters) -->Line_4 $$ return type(clazz, parameters)[ FD ]
Line_2 $$ public Type byClass(Class clazz, Properties parameters) -->Line_18 $$ return null[ CD ]
Line_2 $$ public Type byClass(Class clazz, Properties parameters) -->Line_12 $$ if (Lifecycle.class.isAssignableFrom(clazz)) [ FD ]
Line_2 $$ public Type byClass(Class clazz, Properties parameters) -->Line_12 $$ if (Lifecycle.class.isAssignableFrom(clazz)) [ CD ]
Line_2 $$ public Type byClass(Class clazz, Properties parameters) -->Line_13 $$ return manyToOne(clazz.getName())[ FD ]
Line_2 $$ public Type byClass(Class clazz, Properties parameters) -->Line_3 $$ if (Type.class.isAssignableFrom(clazz)) [ FD ]
Line_2 $$ public Type byClass(Class clazz, Properties parameters) -->Line_16 $$ return serializable(clazz)[ FD ]
Line_12 $$ if (Lifecycle.class.isAssignableFrom(clazz)) -->Line_13 $$ return manyToOne(clazz.getName())[ CD ]
Line_2 $$ public Type byClass(Class clazz, Properties parameters) -->Line_15 $$ if (Serializable.class.isAssignableFrom(clazz)) [ CD ]
Line_2 $$ public Type byClass(Class clazz, Properties parameters) -->Line_6 $$ if (CompositeUserType.class.isAssignableFrom(clazz)) [ FD ]
Line_2 $$ public Type byClass(Class clazz, Properties parameters) -->Line_9 $$ if (UserType.class.isAssignableFrom(clazz)) [ FD ]
Line_2 $$ public Type byClass(Class clazz, Properties parameters) -->Line_15 $$ if (Serializable.class.isAssignableFrom(clazz)) [ FD ]
Line_3 $$ if (Type.class.isAssignableFrom(clazz)) -->Line_4 $$ return type(clazz, parameters)[ CD ]
