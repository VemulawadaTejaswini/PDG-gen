Line_6 $$ if (type.isAssignableFrom(List.class)) -->Line_7 $$ return new ArrayList<File>(getFiles())[ CD ]
Line_2 $$ public Object asType(Class<?> type) throws UnsupportedOperationException -->Line_9 $$ if (type.isAssignableFrom(File[].class)) [ CD ]
Line_2 $$ public Object asType(Class<?> type) throws UnsupportedOperationException -->Line_22 $$ throw new UnsupportedOperationException(String.format("Cannot convert %s to type %s, as this type is not supported.", getDisplayName(), type.getSimpleName()))[ FD ]
Line_2 $$ public Object asType(Class<?> type) throws UnsupportedOperationException -->Line_3 $$ if (type.isAssignableFrom(Set.class)) [ CD ]
Line_2 $$ public Object asType(Class<?> type) throws UnsupportedOperationException -->Line_3 $$ if (type.isAssignableFrom(Set.class)) [ FD ]
Line_2 $$ public Object asType(Class<?> type) throws UnsupportedOperationException -->Line_13 $$ if (type.isAssignableFrom(File.class)) [ FD ]
Line_9 $$ if (type.isAssignableFrom(File[].class)) -->Line_11 $$ return files.toArray(new File[files.size()])[ CD ]
Line_2 $$ public Object asType(Class<?> type) throws UnsupportedOperationException -->Line_16 $$ if (type.isAssignableFrom(FileCollection.class)) [ FD ]
Line_2 $$ public Object asType(Class<?> type) throws UnsupportedOperationException -->Line_6 $$ if (type.isAssignableFrom(List.class)) [ FD ]
Line_2 $$ public Object asType(Class<?> type) throws UnsupportedOperationException -->Line_19 $$ if (type.isAssignableFrom(FileTree.class)) [ FD ]
Line_3 $$ if (type.isAssignableFrom(Set.class)) -->Line_4 $$ return getFiles()[ CD ]
Line_19 $$ if (type.isAssignableFrom(FileTree.class)) -->Line_20 $$ return getAsFileTree()[ CD ]
Line_13 $$ if (type.isAssignableFrom(File.class)) -->Line_14 $$ return getSingleFile()[ CD ]
Line_2 $$ public Object asType(Class<?> type) throws UnsupportedOperationException -->Line_6 $$ if (type.isAssignableFrom(List.class)) [ CD ]
Line_2 $$ public Object asType(Class<?> type) throws UnsupportedOperationException -->Line_13 $$ if (type.isAssignableFrom(File.class)) [ CD ]
Line_2 $$ public Object asType(Class<?> type) throws UnsupportedOperationException -->Line_16 $$ if (type.isAssignableFrom(FileCollection.class)) [ CD ]
Line_16 $$ if (type.isAssignableFrom(FileCollection.class)) -->Line_17 $$ return this[ CD ]
Line_2 $$ public Object asType(Class<?> type) throws UnsupportedOperationException -->Line_9 $$ if (type.isAssignableFrom(File[].class)) [ FD ]
Line_2 $$ public Object asType(Class<?> type) throws UnsupportedOperationException -->Line_19 $$ if (type.isAssignableFrom(FileTree.class)) [ CD ]
Line_9 $$ if (type.isAssignableFrom(File[].class)) -->Line_10 $$ Set<File> files = getFiles()[ CD ]
Line_10 $$ Set<File> files = getFiles()-->Line_11 $$ return files.toArray(new File[files.size()])[ FD ]
