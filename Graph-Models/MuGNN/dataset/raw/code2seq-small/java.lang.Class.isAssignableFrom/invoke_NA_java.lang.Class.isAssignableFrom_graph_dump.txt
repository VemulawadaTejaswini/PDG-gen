Line_12 $$ if (args[0] instanceof ClassedModel) -->Line_13 $$ MethodKey methodKey = new MethodKey(Indexer.class, method.getName(), Object.class)[ CD ]
Line_12 $$ if (args[0] instanceof ClassedModel) -->Line_15 $$ if (args.length == 2) [ CD ]
Line_28 $$ for (Object object : objects) -->Line_32 $$ bufferRequest(methodKey, object, indexerRequestBuffer)[ FD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_5 $$ if ((annotation == null) || (args.length == 0) || (args.length > 2) || (indexerRequestBuffer == null)) [ CD ]
Line_15 $$ if (args.length == 2) -->Line_23 $$ if (args0Class.isArray()) [ CD ]
Line_23 $$ if (args0Class.isArray()) -->Line_24 $$ objects = Arrays.asList((Object[]) args[0])[ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_21 $$ MethodKey methodKey = new MethodKey(Indexer.class, method.getName(), Object.class)[ FD ]
Line_9 $$ if (!(args[0] instanceof BaseModel) && !(args[0] instanceof ClassedModel) && !(args0Class.isArray() || Collection.class.isAssignableFrom(args0Class)) && !((args.length == 2) && (args[0] instanceof String) && Validator.equals(args[1].getClass(), Long.class))) -->Line_10 $$ return method.invoke(_indexer, args)[ CD ]
Line_23 $$ if (args0Class.isArray()) -->Line_26 $$ objects = (Collection<Object>) args[0][ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_35 $$ return null[ CD ]
Line_15 $$ if (args.length == 2) -->Line_22 $$ Collection<Object> objects = null[ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_4 $$ IndexerRequestBuffer indexerRequestBuffer = IndexerRequestBuffer.get()[ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_16 $$ MethodKey methodKey = new MethodKey(Indexer.class, method.getName(), String.class, Long.TYPE)[ FD ]
Line_15 $$ if (args.length == 2) -->Line_18 $$ Long classPK = (Long) args[1][ CD ]
Line_22 $$ Collection<Object> objects = null-->Line_26 $$ objects = (Collection<Object>) args[0][ FD ]
Line_22 $$ Collection<Object> objects = null-->Line_24 $$ objects = Arrays.asList((Object[]) args[0])[ FD ]
Line_18 $$ Long classPK = (Long) args[1]-->Line_19 $$ bufferRequest(methodKey, className, classPK, indexerRequestBuffer)[ FD ]
Line_13 $$ MethodKey methodKey = new MethodKey(Indexer.class, method.getName(), Object.class)-->Line_32 $$ bufferRequest(methodKey, object, indexerRequestBuffer)[ FD ]
Line_15 $$ if (args.length == 2) -->Line_19 $$ bufferRequest(methodKey, className, classPK, indexerRequestBuffer)[ CD ]
Line_12 $$ if (args[0] instanceof ClassedModel) -->Line_14 $$ bufferRequest(methodKey, args[0], indexerRequestBuffer)[ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_9 $$ if (!(args[0] instanceof BaseModel) && !(args[0] instanceof ClassedModel) && !(args0Class.isArray() || Collection.class.isAssignableFrom(args0Class)) && !((args.length == 2) && (args[0] instanceof String) && Validator.equals(args[1].getClass(), Long.class))) [ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_12 $$ if (args[0] instanceof ClassedModel) [ CD ]
Line_8 $$ Class<?> args0Class = args[0].getClass()-->Line_23 $$ if (args0Class.isArray()) [ FD ]
Line_17 $$ String className = (String) args[0]-->Line_19 $$ bufferRequest(methodKey, className, classPK, indexerRequestBuffer)[ FD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_6 $$ return method.invoke(_indexer, args)[ FD ]
Line_24 $$ objects = Arrays.asList((Object[]) args[0])-->Line_26 $$ objects = (Collection<Object>) args[0][ FD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_13 $$ MethodKey methodKey = new MethodKey(Indexer.class, method.getName(), Object.class)[ FD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_8 $$ Class<?> args0Class = args[0].getClass()[ CD ]
Line_5 $$ if ((annotation == null) || (args.length == 0) || (args.length > 2) || (indexerRequestBuffer == null)) -->Line_6 $$ return method.invoke(_indexer, args)[ CD ]
Line_4 $$ IndexerRequestBuffer indexerRequestBuffer = IndexerRequestBuffer.get()-->Line_14 $$ bufferRequest(methodKey, args[0], indexerRequestBuffer)[ FD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_3 $$ Annotation annotation = method.getAnnotation(Bufferable.class)[ FD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_30 $$ return method.invoke(_indexer, args)[ FD ]
Line_15 $$ if (args.length == 2) -->Line_17 $$ String className = (String) args[0][ CD ]
Line_4 $$ IndexerRequestBuffer indexerRequestBuffer = IndexerRequestBuffer.get()-->Line_19 $$ bufferRequest(methodKey, className, classPK, indexerRequestBuffer)[ FD ]
Line_13 $$ MethodKey methodKey = new MethodKey(Indexer.class, method.getName(), Object.class)-->Line_14 $$ bufferRequest(methodKey, args[0], indexerRequestBuffer)[ FD ]
Line_13 $$ MethodKey methodKey = new MethodKey(Indexer.class, method.getName(), Object.class)-->Line_19 $$ bufferRequest(methodKey, className, classPK, indexerRequestBuffer)[ FD ]
Line_4 $$ IndexerRequestBuffer indexerRequestBuffer = IndexerRequestBuffer.get()-->Line_32 $$ bufferRequest(methodKey, object, indexerRequestBuffer)[ FD ]
Line_29 $$ if (!(object instanceof ClassedModel)) -->Line_30 $$ return method.invoke(_indexer, args)[ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_3 $$ Annotation annotation = method.getAnnotation(Bufferable.class)[ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_10 $$ return method.invoke(_indexer, args)[ FD ]
Line_8 $$ Class<?> args0Class = args[0].getClass()-->Line_9 $$ if (!(args[0] instanceof BaseModel) && !(args[0] instanceof ClassedModel) && !(args0Class.isArray() || Collection.class.isAssignableFrom(args0Class)) && !((args.length == 2) && (args[0] instanceof String) && Validator.equals(args[1].getClass(), Long.class))) [ FD ]
