Line_4 $$ if (methodOrConstructor instanceof Method) -->Line_6 $$ if (!method.getDeclaringClass().isAssignableFrom(rawType)) [ CD ]
Line_2 $$ public List<TypeLiteral<?>> getParameterTypes(Member methodOrConstructor) -->Line_3 $$ Type[] genericParameterTypes[ CD ]
Line_10 $$ if (methodOrConstructor instanceof Constructor) -->Line_12 $$ if (!constructor.getDeclaringClass().isAssignableFrom(rawType)) [ CD ]
Line_2 $$ public List<TypeLiteral<?>> getParameterTypes(Member methodOrConstructor) -->Line_19 $$ return resolveAll(genericParameterTypes)[ CD ]
Line_11 $$ Constructor constructor = (Constructor) methodOrConstructor-->Line_12 $$ if (!constructor.getDeclaringClass().isAssignableFrom(rawType)) [ FD ]
Line_3 $$ Type[] genericParameterTypes-->Line_19 $$ return resolveAll(genericParameterTypes)[ FD ]
Line_10 $$ if (methodOrConstructor instanceof Constructor) -->Line_11 $$ Constructor constructor = (Constructor) methodOrConstructor[ CD ]
Line_3 $$ Type[] genericParameterTypes-->Line_15 $$ genericParameterTypes = constructor.getGenericParameterTypes()[ FD ]
Line_5 $$ Method method = (Method) methodOrConstructor-->Line_9 $$ genericParameterTypes = method.getGenericParameterTypes()[ FD ]
Line_15 $$ genericParameterTypes = constructor.getGenericParameterTypes()-->Line_19 $$ return resolveAll(genericParameterTypes)[ FD ]
Line_10 $$ if (methodOrConstructor instanceof Constructor) -->Line_15 $$ genericParameterTypes = constructor.getGenericParameterTypes()[ CD ]
Line_3 $$ Type[] genericParameterTypes-->Line_9 $$ genericParameterTypes = method.getGenericParameterTypes()[ FD ]
Line_4 $$ if (methodOrConstructor instanceof Method) -->Line_5 $$ Method method = (Method) methodOrConstructor[ CD ]
Line_4 $$ if (methodOrConstructor instanceof Method) -->Line_9 $$ genericParameterTypes = method.getGenericParameterTypes()[ CD ]
Line_5 $$ Method method = (Method) methodOrConstructor-->Line_6 $$ if (!method.getDeclaringClass().isAssignableFrom(rawType)) [ FD ]
Line_2 $$ public List<TypeLiteral<?>> getParameterTypes(Member methodOrConstructor) -->Line_4 $$ if (methodOrConstructor instanceof Method) [ FD ]
Line_2 $$ public List<TypeLiteral<?>> getParameterTypes(Member methodOrConstructor) -->Line_10 $$ if (methodOrConstructor instanceof Constructor) [ FD ]
Line_9 $$ genericParameterTypes = method.getGenericParameterTypes()-->Line_19 $$ return resolveAll(genericParameterTypes)[ FD ]
Line_11 $$ Constructor constructor = (Constructor) methodOrConstructor-->Line_15 $$ genericParameterTypes = constructor.getGenericParameterTypes()[ FD ]
Line_4 $$ if (methodOrConstructor instanceof Method) -->Line_10 $$ if (methodOrConstructor instanceof Constructor) [ CD ]
Line_2 $$ public List<TypeLiteral<?>> getParameterTypes(Member methodOrConstructor) -->Line_4 $$ if (methodOrConstructor instanceof Method) [ CD ]
Line_9 $$ genericParameterTypes = method.getGenericParameterTypes()-->Line_15 $$ genericParameterTypes = constructor.getGenericParameterTypes()[ FD ]
