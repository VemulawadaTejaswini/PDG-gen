Line_21 $$ c = c.getSuperclass()-->Line_20 $$ do [ FD ]
Line_17 $$ if (c.isInterface() || d.isInterface()) -->Line_18 $$ return "java/lang/Object"[ CD ]
Line_6 $$ c = Class.forName(type1.replace('/', '.'), false, classLoader)-->Line_14 $$ if (d.isAssignableFrom(c)) [ FD ]
Line_3 $$ Class<?> c, d-->Line_11 $$ if (c.isAssignableFrom(d)) [ FD ]
Line_6 $$ c = Class.forName(type1.replace('/', '.'), false, classLoader)-->Line_21 $$ c = c.getSuperclass()[ FD ]
Line_3 $$ Class<?> c, d-->Line_17 $$ if (c.isInterface() || d.isInterface()) [ FD ]
Line_17 $$ if (c.isInterface() || d.isInterface()) -->Line_20 $$ do [ CD ]
Line_6 $$ c = Class.forName(type1.replace('/', '.'), false, classLoader)-->Line_23 $$ return c.getName().replace('.', '/')[ FD ]
Line_7 $$ d = Class.forName(type2.replace('/', '.'), false, classLoader)-->Line_20 $$ do [ FD ]
Line_2 $$ protected String getCommonSuperClass(final String type1, final String type2) -->Line_3 $$ Class<?> c, d[ CD ]
Line_7 $$ d = Class.forName(type2.replace('/', '.'), false, classLoader)-->Line_17 $$ if (c.isInterface() || d.isInterface()) [ FD ]
Line_11 $$ if (c.isAssignableFrom(d)) -->Line_12 $$ return type1[ CD ]
Line_6 $$ c = Class.forName(type1.replace('/', '.'), false, classLoader)-->Line_11 $$ if (c.isAssignableFrom(d)) [ FD ]
Line_20 $$ do -->Line_21 $$ c = c.getSuperclass()[ CD ]
Line_4 $$ ClassLoader classLoader = getClassLoader()-->Line_6 $$ c = Class.forName(type1.replace('/', '.'), false, classLoader)[ FD ]
Line_7 $$ d = Class.forName(type2.replace('/', '.'), false, classLoader)-->Line_11 $$ if (c.isAssignableFrom(d)) [ FD ]
Line_6 $$ c = Class.forName(type1.replace('/', '.'), false, classLoader)-->Line_17 $$ if (c.isInterface() || d.isInterface()) [ FD ]
Line_3 $$ Class<?> c, d-->Line_6 $$ c = Class.forName(type1.replace('/', '.'), false, classLoader)[ FD ]
Line_21 $$ c = c.getSuperclass()-->Line_23 $$ return c.getName().replace('.', '/')[ FD ]
Line_3 $$ Class<?> c, d-->Line_20 $$ do [ FD ]
Line_3 $$ Class<?> c, d-->Line_7 $$ d = Class.forName(type2.replace('/', '.'), false, classLoader)[ FD ]
Line_2 $$ protected String getCommonSuperClass(final String type1, final String type2) -->Line_17 $$ if (c.isInterface() || d.isInterface()) [ CD ]
Line_7 $$ d = Class.forName(type2.replace('/', '.'), false, classLoader)-->Line_14 $$ if (d.isAssignableFrom(c)) [ FD ]
Line_14 $$ if (d.isAssignableFrom(c)) -->Line_15 $$ return type2[ CD ]
Line_6 $$ c = Class.forName(type1.replace('/', '.'), false, classLoader)-->Line_20 $$ do [ FD ]
Line_17 $$ if (c.isInterface() || d.isInterface()) -->Line_23 $$ return c.getName().replace('.', '/')[ CD ]
Line_3 $$ Class<?> c, d-->Line_14 $$ if (d.isAssignableFrom(c)) [ FD ]
Line_2 $$ protected String getCommonSuperClass(final String type1, final String type2) -->Line_11 $$ if (c.isAssignableFrom(d)) [ CD ]
Line_2 $$ protected String getCommonSuperClass(final String type1, final String type2) -->Line_4 $$ ClassLoader classLoader = getClassLoader()[ CD ]
Line_4 $$ ClassLoader classLoader = getClassLoader()-->Line_7 $$ d = Class.forName(type2.replace('/', '.'), false, classLoader)[ FD ]
Line_2 $$ protected String getCommonSuperClass(final String type1, final String type2) -->Line_14 $$ if (d.isAssignableFrom(c)) [ CD ]
Line_3 $$ Class<?> c, d-->Line_23 $$ return c.getName().replace('.', '/')[ FD ]
Line_2 $$ protected String getCommonSuperClass(final String type1, final String type2) -->Line_6 $$ c = Class.forName(type1.replace('/', '.'), false, classLoader)[ FD ]
Line_3 $$ Class<?> c, d-->Line_21 $$ c = c.getSuperclass()[ FD ]
Line_2 $$ protected String getCommonSuperClass(final String type1, final String type2) -->Line_7 $$ d = Class.forName(type2.replace('/', '.'), false, classLoader)[ FD ]
