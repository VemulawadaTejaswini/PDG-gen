Line_2 $$ private Class<? extends I> itemType(ModelType<?> targetType) -->Line_5 $$ Class<?> targetItemClass = targetType.getTypeVariables().get(0).getRawClass()[ FD ]
Line_2 $$ private Class<? extends I> itemType(ModelType<?> targetType) -->Line_3 $$ Class<?> targetClass = targetType.getRawClass()[ FD ]
Line_6 $$ if (targetItemClass.isAssignableFrom(baseItemType)) -->Line_7 $$ return baseItemType[ CD ]
Line_4 $$ if (targetClass.equals(ModelMap.class)) -->Line_9 $$ if (baseItemType.isAssignableFrom(targetItemClass)) [ CD ]
Line_2 $$ private Class<? extends I> itemType(ModelType<?> targetType) -->Line_4 $$ if (targetClass.equals(ModelMap.class)) [ CD ]
Line_5 $$ Class<?> targetItemClass = targetType.getTypeVariables().get(0).getRawClass()-->Line_10 $$ return targetItemClass.asSubclass(baseItemType)[ FD ]
Line_2 $$ private Class<? extends I> itemType(ModelType<?> targetType) -->Line_3 $$ Class<?> targetClass = targetType.getRawClass()[ CD ]
Line_3 $$ Class<?> targetClass = targetType.getRawClass()-->Line_14 $$ if (targetClass.isAssignableFrom(ModelMap.class)) [ FD ]
Line_2 $$ private Class<? extends I> itemType(ModelType<?> targetType) -->Line_14 $$ if (targetClass.isAssignableFrom(ModelMap.class)) [ CD ]
Line_2 $$ private Class<? extends I> itemType(ModelType<?> targetType) -->Line_17 $$ return null[ CD ]
Line_5 $$ Class<?> targetItemClass = targetType.getTypeVariables().get(0).getRawClass()-->Line_6 $$ if (targetItemClass.isAssignableFrom(baseItemType)) [ FD ]
Line_5 $$ Class<?> targetItemClass = targetType.getTypeVariables().get(0).getRawClass()-->Line_9 $$ if (baseItemType.isAssignableFrom(targetItemClass)) [ FD ]
Line_3 $$ Class<?> targetClass = targetType.getRawClass()-->Line_4 $$ if (targetClass.equals(ModelMap.class)) [ FD ]
Line_4 $$ if (targetClass.equals(ModelMap.class)) -->Line_6 $$ if (targetItemClass.isAssignableFrom(baseItemType)) [ CD ]
Line_4 $$ if (targetClass.equals(ModelMap.class)) -->Line_5 $$ Class<?> targetItemClass = targetType.getTypeVariables().get(0).getRawClass()[ CD ]
Line_14 $$ if (targetClass.isAssignableFrom(ModelMap.class)) -->Line_15 $$ return baseItemType[ CD ]
Line_9 $$ if (baseItemType.isAssignableFrom(targetItemClass)) -->Line_10 $$ return targetItemClass.asSubclass(baseItemType)[ CD ]
Line_4 $$ if (targetClass.equals(ModelMap.class)) -->Line_12 $$ return null[ CD ]
