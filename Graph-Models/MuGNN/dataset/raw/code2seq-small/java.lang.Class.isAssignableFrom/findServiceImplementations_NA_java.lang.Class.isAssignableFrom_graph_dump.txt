Line_2 $$ private <T> List<Class<? extends T>> findServiceImplementations(Class<T> serviceType) throws IOException -->Line_23 $$ if (!serviceType.isAssignableFrom(implClass)) [ FD ]
Line_9 $$ URL resource = resources.nextElement()-->Line_17 $$ throw new ServiceLookupException(String.format("Could not determine implementation class for service '%s' specified in resource '%s'.", serviceType.getName(), resource), e)[ FD ]
Line_19 $$ for (String implementationClassName : implementationClassNamesFromResource) -->Line_28 $$ throw new ServiceLookupException(String.format("Could not load implementation class '%s' for service '%s' specified in resource '%s'.", implementationClassName, serviceType.getName(), resource), e)[ FD ]
Line_8 $$ while (resources.hasMoreElements()) -->Line_9 $$ URL resource = resources.nextElement()[ CD ]
Line_2 $$ private <T> List<Class<? extends T>> findServiceImplementations(Class<T> serviceType) throws IOException -->Line_4 $$ Set<String> implementationClassNames = new HashSet<String>()[ CD ]
Line_9 $$ URL resource = resources.nextElement()-->Line_12 $$ implementationClassNamesFromResource = extractImplementationClassNames(resource)[ FD ]
Line_9 $$ URL resource = resources.nextElement()-->Line_28 $$ throw new ServiceLookupException(String.format("Could not load implementation class '%s' for service '%s' specified in resource '%s'.", implementationClassName, serviceType.getName(), resource), e)[ FD ]
Line_2 $$ private <T> List<Class<? extends T>> findServiceImplementations(Class<T> serviceType) throws IOException -->Line_17 $$ throw new ServiceLookupException(String.format("Could not determine implementation class for service '%s' specified in resource '%s'.", serviceType.getName(), resource), e)[ FD ]
Line_22 $$ Class<?> implClass = classLoader.loadClass(implementationClassName)-->Line_23 $$ if (!serviceType.isAssignableFrom(implClass)) [ FD ]
Line_6 $$ for (ClassLoader classLoader : classLoaders) -->Line_7 $$ Enumeration<URL> resources = classLoader.getResources(resourceName)[ FD ]
Line_8 $$ while (resources.hasMoreElements()) -->Line_10 $$ List<String> implementationClassNamesFromResource[ CD ]
Line_2 $$ private <T> List<Class<? extends T>> findServiceImplementations(Class<T> serviceType) throws IOException -->Line_26 $$ implementations.add(implClass.asSubclass(serviceType))[ FD ]
Line_7 $$ Enumeration<URL> resources = classLoader.getResources(resourceName)-->Line_9 $$ URL resource = resources.nextElement()[ FD ]
Line_2 $$ private <T> List<Class<? extends T>> findServiceImplementations(Class<T> serviceType) throws IOException -->Line_14 $$ throw new RuntimeException(String.format("No implementation class for service '%s' specified.", serviceType.getName()))[ FD ]
Line_10 $$ List<String> implementationClassNamesFromResource-->Line_12 $$ implementationClassNamesFromResource = extractImplementationClassNames(resource)[ FD ]
Line_2 $$ private <T> List<Class<? extends T>> findServiceImplementations(Class<T> serviceType) throws IOException -->Line_28 $$ throw new ServiceLookupException(String.format("Could not load implementation class '%s' for service '%s' specified in resource '%s'.", implementationClassName, serviceType.getName(), resource), e)[ FD ]
Line_2 $$ private <T> List<Class<? extends T>> findServiceImplementations(Class<T> serviceType) throws IOException -->Line_3 $$ String resourceName = "META-INF/services/" + serviceType.getName()[ CD ]
Line_6 $$ for (ClassLoader classLoader : classLoaders) -->Line_22 $$ Class<?> implClass = classLoader.loadClass(implementationClassName)[ FD ]
Line_5 $$ List<Class<? extends T>> implementations = new ArrayList<Class<? extends T>>()-->Line_26 $$ implementations.add(implClass.asSubclass(serviceType))[ FD ]
Line_22 $$ Class<?> implClass = classLoader.loadClass(implementationClassName)-->Line_26 $$ implementations.add(implClass.asSubclass(serviceType))[ FD ]
Line_3 $$ String resourceName = "META-INF/services/" + serviceType.getName()-->Line_7 $$ Enumeration<URL> resources = classLoader.getResources(resourceName)[ FD ]
Line_19 $$ for (String implementationClassName : implementationClassNamesFromResource) -->Line_22 $$ Class<?> implClass = classLoader.loadClass(implementationClassName)[ FD ]
Line_2 $$ private <T> List<Class<? extends T>> findServiceImplementations(Class<T> serviceType) throws IOException -->Line_34 $$ return implementations[ CD ]
Line_2 $$ private <T> List<Class<? extends T>> findServiceImplementations(Class<T> serviceType) throws IOException -->Line_24 $$ throw new RuntimeException(String.format("Implementation class '%s' is not assignable to service class '%s'.", implementationClassName, serviceType.getName()))[ FD ]
Line_12 $$ implementationClassNamesFromResource = extractImplementationClassNames(resource)-->Line_13 $$ if (implementationClassNamesFromResource.isEmpty()) [ FD ]
Line_19 $$ for (String implementationClassName : implementationClassNamesFromResource) -->Line_20 $$ if (implementationClassNames.add(implementationClassName)) [ FD ]
Line_2 $$ private <T> List<Class<? extends T>> findServiceImplementations(Class<T> serviceType) throws IOException -->Line_3 $$ String resourceName = "META-INF/services/" + serviceType.getName()[ FD ]
Line_19 $$ for (String implementationClassName : implementationClassNamesFromResource) -->Line_24 $$ throw new RuntimeException(String.format("Implementation class '%s' is not assignable to service class '%s'.", implementationClassName, serviceType.getName()))[ FD ]
Line_10 $$ List<String> implementationClassNamesFromResource-->Line_13 $$ if (implementationClassNamesFromResource.isEmpty()) [ FD ]
Line_7 $$ Enumeration<URL> resources = classLoader.getResources(resourceName)-->Line_8 $$ while (resources.hasMoreElements()) [ FD ]
Line_2 $$ private <T> List<Class<? extends T>> findServiceImplementations(Class<T> serviceType) throws IOException -->Line_5 $$ List<Class<? extends T>> implementations = new ArrayList<Class<? extends T>>()[ CD ]
Line_4 $$ Set<String> implementationClassNames = new HashSet<String>()-->Line_20 $$ if (implementationClassNames.add(implementationClassName)) [ FD ]
