Line_7 $$ if (existingMethod.getReturnType() != method.getReturnType() && existingMethod.getReturnType().isAssignableFrom(method.getReturnType())) -->Line_8 $$ methodBeingOverriddenWithCovariantReturnType = existingMethod[ CD ]
Line_2 $$ public void doWith(Method method) -->Line_18 $$ if (!knownSignature && !isCglibRenamedMethod(method)) [ CD ]
Line_8 $$ methodBeingOverriddenWithCovariantReturnType = existingMethod-->Line_15 $$ if (methodBeingOverriddenWithCovariantReturnType != null) [ FD ]
Line_10 $$ knownSignature = true-->Line_18 $$ if (!knownSignature && !isCglibRenamedMethod(method)) [ FD ]
Line_2 $$ public void doWith(Method method) -->Line_18 $$ if (!knownSignature && !isCglibRenamedMethod(method)) [ FD ]
Line_2 $$ public void doWith(Method method) -->Line_15 $$ if (methodBeingOverriddenWithCovariantReturnType != null) [ CD ]
Line_5 $$ for (Method existingMethod : methods) -->Line_7 $$ if (existingMethod.getReturnType() != method.getReturnType() && existingMethod.getReturnType().isAssignableFrom(method.getReturnType())) [ FD ]
Line_18 $$ if (!knownSignature && !isCglibRenamedMethod(method)) -->Line_19 $$ methods.add(method)[ CD ]
Line_6 $$ if (method.getName().equals(existingMethod.getName()) && Arrays.equals(method.getParameterTypes(), existingMethod.getParameterTypes())) -->Line_7 $$ if (existingMethod.getReturnType() != method.getReturnType() && existingMethod.getReturnType().isAssignableFrom(method.getReturnType())) [ CD ]
Line_3 $$ boolean knownSignature = false-->Line_10 $$ knownSignature = true[ FD ]
Line_2 $$ public void doWith(Method method) -->Line_3 $$ boolean knownSignature = false[ CD ]
Line_4 $$ Method methodBeingOverriddenWithCovariantReturnType = null-->Line_8 $$ methodBeingOverriddenWithCovariantReturnType = existingMethod[ FD ]
Line_4 $$ Method methodBeingOverriddenWithCovariantReturnType = null-->Line_15 $$ if (methodBeingOverriddenWithCovariantReturnType != null) [ FD ]
Line_2 $$ public void doWith(Method method) -->Line_7 $$ if (existingMethod.getReturnType() != method.getReturnType() && existingMethod.getReturnType().isAssignableFrom(method.getReturnType())) [ FD ]
Line_7 $$ if (existingMethod.getReturnType() != method.getReturnType() && existingMethod.getReturnType().isAssignableFrom(method.getReturnType())) -->Line_10 $$ knownSignature = true[ CD ]
Line_5 $$ for (Method existingMethod : methods) -->Line_8 $$ methodBeingOverriddenWithCovariantReturnType = existingMethod[ FD ]
Line_2 $$ public void doWith(Method method) -->Line_4 $$ Method methodBeingOverriddenWithCovariantReturnType = null[ CD ]
Line_15 $$ if (methodBeingOverriddenWithCovariantReturnType != null) -->Line_16 $$ methods.remove(methodBeingOverriddenWithCovariantReturnType)[ CD ]
Line_2 $$ public void doWith(Method method) -->Line_19 $$ methods.add(method)[ FD ]
Line_3 $$ boolean knownSignature = false-->Line_18 $$ if (!knownSignature && !isCglibRenamedMethod(method)) [ FD ]
Line_2 $$ public void doWith(Method method) -->Line_6 $$ if (method.getName().equals(existingMethod.getName()) && Arrays.equals(method.getParameterTypes(), existingMethod.getParameterTypes())) [ FD ]
Line_5 $$ for (Method existingMethod : methods) -->Line_6 $$ if (method.getName().equals(existingMethod.getName()) && Arrays.equals(method.getParameterTypes(), existingMethod.getParameterTypes())) [ FD ]
Line_8 $$ methodBeingOverriddenWithCovariantReturnType = existingMethod-->Line_16 $$ methods.remove(methodBeingOverriddenWithCovariantReturnType)[ FD ]
Line_4 $$ Method methodBeingOverriddenWithCovariantReturnType = null-->Line_16 $$ methods.remove(methodBeingOverriddenWithCovariantReturnType)[ FD ]
