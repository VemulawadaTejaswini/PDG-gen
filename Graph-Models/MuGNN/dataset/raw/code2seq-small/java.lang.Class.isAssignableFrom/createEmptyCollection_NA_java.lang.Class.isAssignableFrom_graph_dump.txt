Line_3 $$ if (collectionType.equals(DomainObjectSet.class)) -->Line_4 $$ return new ArrayList<Object>()[ CD ]
Line_2 $$ Collection<Object> createEmptyCollection(Class<?> collectionType) -->Line_15 $$ throw new UnsupportedOperationException(String.format("Cannot convert a Collection to type %s.", collectionType.getName()))[ FD ]
Line_6 $$ if (collectionType.isAssignableFrom(ArrayList.class)) -->Line_7 $$ return new ArrayList<Object>()[ CD ]
Line_12 $$ if (collectionType.isAssignableFrom(TreeSet.class)) -->Line_13 $$ return new TreeSet<Object>()[ CD ]
Line_2 $$ Collection<Object> createEmptyCollection(Class<?> collectionType) -->Line_6 $$ if (collectionType.isAssignableFrom(ArrayList.class)) [ FD ]
Line_2 $$ Collection<Object> createEmptyCollection(Class<?> collectionType) -->Line_3 $$ if (collectionType.equals(DomainObjectSet.class)) [ CD ]
Line_2 $$ Collection<Object> createEmptyCollection(Class<?> collectionType) -->Line_12 $$ if (collectionType.isAssignableFrom(TreeSet.class)) [ FD ]
Line_2 $$ Collection<Object> createEmptyCollection(Class<?> collectionType) -->Line_3 $$ if (collectionType.equals(DomainObjectSet.class)) [ FD ]
Line_2 $$ Collection<Object> createEmptyCollection(Class<?> collectionType) -->Line_12 $$ if (collectionType.isAssignableFrom(TreeSet.class)) [ CD ]
Line_2 $$ Collection<Object> createEmptyCollection(Class<?> collectionType) -->Line_9 $$ if (collectionType.isAssignableFrom(LinkedHashSet.class)) [ CD ]
Line_9 $$ if (collectionType.isAssignableFrom(LinkedHashSet.class)) -->Line_10 $$ return new LinkedHashSet<Object>()[ CD ]
Line_2 $$ Collection<Object> createEmptyCollection(Class<?> collectionType) -->Line_9 $$ if (collectionType.isAssignableFrom(LinkedHashSet.class)) [ FD ]
Line_2 $$ Collection<Object> createEmptyCollection(Class<?> collectionType) -->Line_6 $$ if (collectionType.isAssignableFrom(ArrayList.class)) [ CD ]
