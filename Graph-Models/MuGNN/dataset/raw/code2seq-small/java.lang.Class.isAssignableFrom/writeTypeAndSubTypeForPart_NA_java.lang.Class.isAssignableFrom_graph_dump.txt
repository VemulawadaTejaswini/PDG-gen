Line_5 $$ for (int i = 0; i < mappedTypes.length; i++) -->Line_7 $$ QName name[ CD ]
Line_10 $$ if (!isAnonymousType(name)) -->Line_11 $$ writeTypeForPart(tempMappedType, name)[ CD ]
Line_7 $$ QName name-->Line_9 $$ name = tm.getTypeQName(tempMappedType)[ FD ]
Line_2 $$ public QName writeTypeAndSubTypeForPart(Class type, QName qname) throws AxisFault -->Line_4 $$ if (mappedTypes != null) [ CD ]
Line_9 $$ name = tm.getTypeQName(tempMappedType)-->Line_10 $$ if (!isAnonymousType(name)) [ FD ]
Line_6 $$ Class tempMappedType = mappedTypes[i]-->Line_9 $$ name = tm.getTypeQName(tempMappedType)[ FD ]
Line_2 $$ public QName writeTypeAndSubTypeForPart(Class type, QName qname) throws AxisFault -->Line_3 $$ QName qNameRet = writeTypeForPart(type, qname)[ FD ]
Line_8 $$ if (tempMappedType != null && type != Object.class && tempMappedType != type && type.isAssignableFrom(tempMappedType)) -->Line_9 $$ name = tm.getTypeQName(tempMappedType)[ CD ]
Line_8 $$ if (tempMappedType != null && type != Object.class && tempMappedType != type && type.isAssignableFrom(tempMappedType)) -->Line_13 $$ mappedTypes[i] = null[ CD ]
Line_7 $$ QName name-->Line_11 $$ writeTypeForPart(tempMappedType, name)[ FD ]
Line_2 $$ public QName writeTypeAndSubTypeForPart(Class type, QName qname) throws AxisFault -->Line_8 $$ if (tempMappedType != null && type != Object.class && tempMappedType != type && type.isAssignableFrom(tempMappedType)) [ FD ]
Line_4 $$ if (mappedTypes != null) -->Line_5 $$ for (int i = 0; i < mappedTypes.length; i++) [ CD ]
Line_9 $$ name = tm.getTypeQName(tempMappedType)-->Line_11 $$ writeTypeForPart(tempMappedType, name)[ FD ]
Line_5 $$ for (int i = 0; i < mappedTypes.length; i++) -->Line_6 $$ Class tempMappedType = mappedTypes[i][ CD ]
Line_6 $$ Class tempMappedType = mappedTypes[i]-->Line_8 $$ if (tempMappedType != null && type != Object.class && tempMappedType != type && type.isAssignableFrom(tempMappedType)) [ FD ]
Line_8 $$ if (tempMappedType != null && type != Object.class && tempMappedType != type && type.isAssignableFrom(tempMappedType)) -->Line_10 $$ if (!isAnonymousType(name)) [ CD ]
Line_7 $$ QName name-->Line_10 $$ if (!isAnonymousType(name)) [ FD ]
Line_6 $$ Class tempMappedType = mappedTypes[i]-->Line_11 $$ writeTypeForPart(tempMappedType, name)[ FD ]
Line_2 $$ public QName writeTypeAndSubTypeForPart(Class type, QName qname) throws AxisFault -->Line_17 $$ return qNameRet[ CD ]
Line_2 $$ public QName writeTypeAndSubTypeForPart(Class type, QName qname) throws AxisFault -->Line_3 $$ QName qNameRet = writeTypeForPart(type, qname)[ CD ]
Line_5 $$ for (int i = 0; i < mappedTypes.length; i++) -->Line_8 $$ if (tempMappedType != null && type != Object.class && tempMappedType != type && type.isAssignableFrom(tempMappedType)) [ CD ]
