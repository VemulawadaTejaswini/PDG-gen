Line_7 $$ BooleanTypedValue result = null-->Line_15 $$ result = BooleanTypedValue.forValue(rightClass.isAssignableFrom(leftValue.getClass()))[ FD ]
Line_2 $$ public BooleanTypedValue getValueInternal(ExpressionState state) throws EvaluationException -->Line_7 $$ BooleanTypedValue result = null[ CD ]
Line_2 $$ public BooleanTypedValue getValueInternal(ExpressionState state) throws EvaluationException -->Line_6 $$ Object rightValue = right.getValue()[ CD ]
Line_6 $$ Object rightValue = right.getValue()-->Line_9 $$ throw new SpelEvaluationException(getRightOperand().getStartPosition(), SpelMessage.INSTANCEOF_OPERATOR_NEEDS_CLASS_OPERAND, (rightValue == null ? "null" : rightValue.getClass().getName()))[ FD ]
Line_2 $$ public BooleanTypedValue getValueInternal(ExpressionState state) throws EvaluationException -->Line_4 $$ TypedValue right = getRightOperand().getValueInternal(state)[ CD ]
Line_2 $$ public BooleanTypedValue getValueInternal(ExpressionState state) throws EvaluationException -->Line_4 $$ TypedValue right = getRightOperand().getValueInternal(state)[ FD ]
Line_5 $$ Object leftValue = left.getValue()-->Line_15 $$ result = BooleanTypedValue.forValue(rightClass.isAssignableFrom(leftValue.getClass()))[ FD ]
Line_2 $$ public BooleanTypedValue getValueInternal(ExpressionState state) throws EvaluationException -->Line_8 $$ if (rightValue == null || !(rightValue instanceof Class<?>)) [ CD ]
Line_4 $$ TypedValue right = getRightOperand().getValueInternal(state)-->Line_6 $$ Object rightValue = right.getValue()[ FD ]
Line_2 $$ public BooleanTypedValue getValueInternal(ExpressionState state) throws EvaluationException -->Line_5 $$ Object leftValue = left.getValue()[ CD ]
Line_5 $$ Object leftValue = left.getValue()-->Line_12 $$ if (leftValue == null) [ FD ]
Line_2 $$ public BooleanTypedValue getValueInternal(ExpressionState state) throws EvaluationException -->Line_12 $$ if (leftValue == null) [ CD ]
Line_2 $$ public BooleanTypedValue getValueInternal(ExpressionState state) throws EvaluationException -->Line_3 $$ TypedValue left = getLeftOperand().getValueInternal(state)[ CD ]
Line_2 $$ public BooleanTypedValue getValueInternal(ExpressionState state) throws EvaluationException -->Line_11 $$ Class<?> rightClass = (Class<?>) rightValue[ CD ]
Line_2 $$ public BooleanTypedValue getValueInternal(ExpressionState state) throws EvaluationException -->Line_18 $$ this.exitTypeDescriptor = "Z"[ CD ]
Line_12 $$ if (leftValue == null) -->Line_15 $$ result = BooleanTypedValue.forValue(rightClass.isAssignableFrom(leftValue.getClass()))[ CD ]
Line_11 $$ Class<?> rightClass = (Class<?>) rightValue-->Line_15 $$ result = BooleanTypedValue.forValue(rightClass.isAssignableFrom(leftValue.getClass()))[ FD ]
Line_12 $$ if (leftValue == null) -->Line_13 $$ result = BooleanTypedValue.FALSE[ CD ]
Line_2 $$ public BooleanTypedValue getValueInternal(ExpressionState state) throws EvaluationException -->Line_19 $$ return result[ CD ]
Line_3 $$ TypedValue left = getLeftOperand().getValueInternal(state)-->Line_5 $$ Object leftValue = left.getValue()[ FD ]
Line_2 $$ public BooleanTypedValue getValueInternal(ExpressionState state) throws EvaluationException -->Line_17 $$ this.type = rightClass[ CD ]
Line_13 $$ result = BooleanTypedValue.FALSE-->Line_15 $$ result = BooleanTypedValue.forValue(rightClass.isAssignableFrom(leftValue.getClass()))[ FD ]
Line_7 $$ BooleanTypedValue result = null-->Line_13 $$ result = BooleanTypedValue.FALSE[ FD ]
Line_2 $$ public BooleanTypedValue getValueInternal(ExpressionState state) throws EvaluationException -->Line_3 $$ TypedValue left = getLeftOperand().getValueInternal(state)[ FD ]
Line_11 $$ Class<?> rightClass = (Class<?>) rightValue-->Line_17 $$ this.type = rightClass[ FD ]
