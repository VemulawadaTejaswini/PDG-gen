Line_2 $$ public static <T extends MessageHeaderAccessor> T getAccessor(MessageHeaders messageHeaders, Class<T> requiredType) -->Line_3 $$ if (messageHeaders instanceof MutableMessageHeaders) [ CD ]
Line_4 $$ MutableMessageHeaders mutableHeaders = (MutableMessageHeaders) messageHeaders-->Line_5 $$ MessageHeaderAccessor headerAccessor = mutableHeaders.getMessageHeaderAccessor()[ FD ]
Line_2 $$ public static <T extends MessageHeaderAccessor> T getAccessor(MessageHeaders messageHeaders, Class<T> requiredType) -->Line_6 $$ if (requiredType.isAssignableFrom(headerAccessor.getClass())) [ FD ]
Line_2 $$ public static <T extends MessageHeaderAccessor> T getAccessor(MessageHeaders messageHeaders, Class<T> requiredType) -->Line_10 $$ return null[ CD ]
Line_5 $$ MessageHeaderAccessor headerAccessor = mutableHeaders.getMessageHeaderAccessor()-->Line_6 $$ if (requiredType.isAssignableFrom(headerAccessor.getClass())) [ FD ]
Line_6 $$ if (requiredType.isAssignableFrom(headerAccessor.getClass())) -->Line_7 $$ return (T) headerAccessor[ CD ]
Line_3 $$ if (messageHeaders instanceof MutableMessageHeaders) -->Line_4 $$ MutableMessageHeaders mutableHeaders = (MutableMessageHeaders) messageHeaders[ CD ]
Line_3 $$ if (messageHeaders instanceof MutableMessageHeaders) -->Line_5 $$ MessageHeaderAccessor headerAccessor = mutableHeaders.getMessageHeaderAccessor()[ CD ]
Line_3 $$ if (messageHeaders instanceof MutableMessageHeaders) -->Line_6 $$ if (requiredType.isAssignableFrom(headerAccessor.getClass())) [ CD ]
Line_2 $$ public static <T extends MessageHeaderAccessor> T getAccessor(MessageHeaders messageHeaders, Class<T> requiredType) -->Line_3 $$ if (messageHeaders instanceof MutableMessageHeaders) [ FD ]
