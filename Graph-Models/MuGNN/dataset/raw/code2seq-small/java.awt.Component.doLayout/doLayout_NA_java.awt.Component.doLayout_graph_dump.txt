Line_5 $$ if (count == 1) -->Line_8 $$ Component child = getComponent(0)[ CD ]
Line_6 $$ Rectangle bounds = new Rectangle(getWidth(), getHeight())-->Line_7 $$ JBInsets.removeFrom(bounds, getInsets())[ FD ]
Line_5 $$ if (count == 1) -->Line_10 $$ if (child instanceof CellRendererPanel) [ CD ]
Line_8 $$ Component child = getComponent(0)-->Line_9 $$ child.setBounds(bounds)[ FD ]
Line_4 $$ int count = getComponentCount()-->Line_17 $$ for (int i = 0; i < count; i++) [ FD ]
Line_5 $$ if (count == 1) -->Line_9 $$ child.setBounds(bounds)[ CD ]
Line_17 $$ for (int i = 0; i < count; i++) -->Line_18 $$ Component c = getComponent(i)[ FD ]
Line_6 $$ Rectangle bounds = new Rectangle(getWidth(), getHeight())-->Line_9 $$ child.setBounds(bounds)[ FD ]
Line_18 $$ Component c = getComponent(i)-->Line_20 $$ c.doLayout()[ FD ]
Line_4 $$ int count = getComponentCount()-->Line_5 $$ if (count == 1) [ FD ]
Line_17 $$ for (int i = 0; i < count; i++) -->Line_18 $$ Component c = getComponent(i)[ CD ]
Line_5 $$ if (count == 1) -->Line_7 $$ JBInsets.removeFrom(bounds, getInsets())[ CD ]
Line_5 $$ if (count == 1) -->Line_16 $$ super.doLayout()[ CD ]
Line_5 $$ if (count == 1) -->Line_17 $$ for (int i = 0; i < count; i++) [ CD ]
Line_10 $$ if (child instanceof CellRendererPanel) -->Line_12 $$ child.doLayout()[ CD ]
Line_10 $$ if (child instanceof CellRendererPanel) -->Line_11 $$ ((CellRendererPanel) child).invalidateLayout()[ CD ]
Line_8 $$ Component child = getComponent(0)-->Line_12 $$ child.doLayout()[ FD ]
Line_8 $$ Component child = getComponent(0)-->Line_10 $$ if (child instanceof CellRendererPanel) [ FD ]
Line_18 $$ Component c = getComponent(i)-->Line_19 $$ if (c instanceof CellRendererPanel) [ FD ]
Line_19 $$ if (c instanceof CellRendererPanel) -->Line_20 $$ c.doLayout()[ CD ]
Line_17 $$ for (int i = 0; i < count; i++) -->Line_19 $$ if (c instanceof CellRendererPanel) [ CD ]
Line_5 $$ if (count == 1) -->Line_15 $$ invalidateLayout()[ CD ]
Line_5 $$ if (count == 1) -->Line_6 $$ Rectangle bounds = new Rectangle(getWidth(), getHeight())[ CD ]
