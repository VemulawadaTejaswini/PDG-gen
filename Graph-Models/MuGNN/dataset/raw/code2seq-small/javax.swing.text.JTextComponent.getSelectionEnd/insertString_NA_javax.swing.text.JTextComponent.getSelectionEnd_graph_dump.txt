Line_23 $$ final String res = new StringBuilder(mySrc.getText()).insert(offs, toInsert).toString()-->Line_26 $$ final int num = Integer.parseInt(res)[ FD ]
Line_27 $$ if (rgb) -->Line_28 $$ if (num > 255) [ CD ]
Line_2 $$ public void insertString(int offs, String str, AttributeSet a) throws BadLocationException -->Line_7 $$ int newLen = mySrc.getText().length() - selected + str.length()[ FD ]
Line_8 $$ if (newLen > (myHex ? 6 : 3)) -->Line_9 $$ Toolkit.getDefaultToolkit().beep()[ CD ]
Line_2 $$ public void insertString(int offs, String str, AttributeSet a) throws BadLocationException -->Line_41 $$ super.insertString(offs, toInsert, a)[ FD ]
Line_25 $$ if (!myHex) -->Line_26 $$ final int num = Integer.parseInt(res)[ CD ]
Line_2 $$ public void insertString(int offs, String str, AttributeSet a) throws BadLocationException -->Line_13 $$ char[] result = new char[source.length][ CD ]
Line_15 $$ for (int i = 0; i < result.length; i++) -->Line_16 $$ if (myHex ? "0123456789abcdefABCDEF".indexOf(source[i]) >= 0 : Character.isDigit(source[i])) [ CD ]
Line_7 $$ int newLen = mySrc.getText().length() - selected + str.length()-->Line_8 $$ if (newLen > (myHex ? 6 : 3)) [ FD ]
Line_28 $$ if (num > 255) -->Line_30 $$ return[ CD ]
Line_2 $$ public void insertString(int offs, String str, AttributeSet a) throws BadLocationException -->Line_23 $$ final String res = new StringBuilder(mySrc.getText()).insert(offs, toInsert).toString()[ FD ]
Line_2 $$ public void insertString(int offs, String str, AttributeSet a) throws BadLocationException -->Line_23 $$ final String res = new StringBuilder(mySrc.getText()).insert(offs, toInsert).toString()[ CD ]
Line_16 $$ if (myHex ? "0123456789abcdefABCDEF".indexOf(source[i]) >= 0 : Character.isDigit(source[i])) -->Line_19 $$ Toolkit.getDefaultToolkit().beep()[ CD ]
Line_5 $$ if (mySrc != null) -->Line_8 $$ if (newLen > (myHex ? 6 : 3)) [ CD ]
Line_2 $$ public void insertString(int offs, String str, AttributeSet a) throws BadLocationException -->Line_14 $$ int j = 0[ CD ]
Line_8 $$ if (newLen > (myHex ? 6 : 3)) -->Line_10 $$ return[ CD ]
Line_27 $$ if (rgb) -->Line_33 $$ if ((mySrc == myRed && num > 359) || ((mySrc == myGreen || mySrc == myBlue) && num > 100)) [ CD ]
Line_2 $$ public void insertString(int offs, String str, AttributeSet a) throws BadLocationException -->Line_3 $$ final boolean rgb = isRGBMode()[ CD ]
Line_22 $$ final String toInsert = StringUtil.toUpperCase(new String(result, 0, j))-->Line_41 $$ super.insertString(offs, toInsert, a)[ FD ]
Line_2 $$ public void insertString(int offs, String str, AttributeSet a) throws BadLocationException -->Line_4 $$ char[] source = str.toCharArray()[ CD ]
Line_5 $$ if (mySrc != null) -->Line_6 $$ final int selected = mySrc.getSelectionEnd() - mySrc.getSelectionStart()[ CD ]
Line_33 $$ if ((mySrc == myRed && num > 359) || ((mySrc == myGreen || mySrc == myBlue) && num > 100)) -->Line_34 $$ Toolkit.getDefaultToolkit().beep()[ CD ]
Line_25 $$ if (!myHex) -->Line_27 $$ if (rgb) [ CD ]
Line_22 $$ final String toInsert = StringUtil.toUpperCase(new String(result, 0, j))-->Line_23 $$ final String res = new StringBuilder(mySrc.getText()).insert(offs, toInsert).toString()[ FD ]
Line_5 $$ if (mySrc != null) -->Line_7 $$ int newLen = mySrc.getText().length() - selected + str.length()[ CD ]
Line_2 $$ public void insertString(int offs, String str, AttributeSet a) throws BadLocationException -->Line_41 $$ super.insertString(offs, toInsert, a)[ CD ]
Line_33 $$ if ((mySrc == myRed && num > 359) || ((mySrc == myGreen || mySrc == myBlue) && num > 100)) -->Line_35 $$ return[ CD ]
Line_14 $$ int j = 0-->Line_17 $$ result[j++] = source[i][ FD ]
Line_2 $$ public void insertString(int offs, String str, AttributeSet a) throws BadLocationException -->Line_15 $$ for (int i = 0; i < result.length; i++) [ CD ]
Line_2 $$ public void insertString(int offs, String str, AttributeSet a) throws BadLocationException -->Line_4 $$ char[] source = str.toCharArray()[ FD ]
Line_2 $$ public void insertString(int offs, String str, AttributeSet a) throws BadLocationException -->Line_22 $$ final String toInsert = StringUtil.toUpperCase(new String(result, 0, j))[ CD ]
Line_2 $$ public void insertString(int offs, String str, AttributeSet a) throws BadLocationException -->Line_5 $$ if (mySrc != null) [ CD ]
Line_26 $$ final int num = Integer.parseInt(res)-->Line_28 $$ if (num > 255) [ FD ]
Line_28 $$ if (num > 255) -->Line_29 $$ Toolkit.getDefaultToolkit().beep()[ CD ]
Line_16 $$ if (myHex ? "0123456789abcdefABCDEF".indexOf(source[i]) >= 0 : Character.isDigit(source[i])) -->Line_17 $$ result[j++] = source[i][ CD ]
