Line_2 $$ synchronized void uncacheBlock(String bpid, long blockId) -->Line_5 $$ if (!dataset.datanode.getShortCircuitRegistry().processBlockMunlockRequest(key)) [ CD ]
Line_2 $$ synchronized void uncacheBlock(String bpid, long blockId) -->Line_25 $$ LOG.debug("Block with id [ FD ]
Line_3 $$ ExtendedBlockId key = new ExtendedBlockId(blockId, bpid)-->Line_21 $$ mappableBlockMap.put(key, new Value(prevValue.mappableBlock, State.UNCACHING))[ FD ]
Line_3 $$ ExtendedBlockId key = new ExtendedBlockId(blockId, bpid)-->Line_17 $$ mappableBlockMap.put(key, new Value(prevValue.mappableBlock, State.CACHING_CANCELLED))[ FD ]
Line_2 $$ synchronized void uncacheBlock(String bpid, long blockId) -->Line_4 $$ Value prevValue = mappableBlockMap.get(key)[ CD ]
Line_2 $$ synchronized void uncacheBlock(String bpid, long blockId) -->Line_3 $$ ExtendedBlockId key = new ExtendedBlockId(blockId, bpid)[ CD ]
Line_9 $$ if (prevValue == null) -->Line_11 $$ numBlocksFailedToUncache.incrementAndGet()[ CD ]
Line_3 $$ ExtendedBlockId key = new ExtendedBlockId(blockId, bpid)-->Line_6 $$ LOG.debug("[ FD ]
Line_2 $$ synchronized void uncacheBlock(String bpid, long blockId) -->Line_16 $$ LOG.debug("Cancelling caching for block with id [ FD ]
Line_3 $$ ExtendedBlockId key = new ExtendedBlockId(blockId, bpid)-->Line_4 $$ Value prevValue = mappableBlockMap.get(key)[ FD ]
Line_5 $$ if (!dataset.datanode.getShortCircuitRegistry().processBlockMunlockRequest(key)) -->Line_7 $$ return[ CD ]
Line_5 $$ if (!dataset.datanode.getShortCircuitRegistry().processBlockMunlockRequest(key)) -->Line_6 $$ LOG.debug("[ CD ]
Line_4 $$ Value prevValue = mappableBlockMap.get(key)-->Line_9 $$ if (prevValue == null) [ FD ]
Line_2 $$ synchronized void uncacheBlock(String bpid, long blockId) -->Line_20 $$ LOG.debug("Block with id [ FD ]
Line_2 $$ synchronized void uncacheBlock(String bpid, long blockId) -->Line_9 $$ if (prevValue == null) [ CD ]
Line_9 $$ if (prevValue == null) -->Line_12 $$ return[ CD ]
Line_3 $$ ExtendedBlockId key = new ExtendedBlockId(blockId, bpid)-->Line_5 $$ if (!dataset.datanode.getShortCircuitRegistry().processBlockMunlockRequest(key)) [ FD ]
Line_2 $$ synchronized void uncacheBlock(String bpid, long blockId) -->Line_10 $$ LOG.debug("Block with id [ FD ]
Line_9 $$ if (prevValue == null) -->Line_10 $$ LOG.debug("Block with id [ CD ]
