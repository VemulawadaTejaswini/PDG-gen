Line_2 $$ public void sendRequest(final DiscoveryNode node, final long requestId, final String action, final TransportRequest request, TransportRequestOptions options) throws IOException, TransportException -->Line_10 $$ stream.writeString(action)[ FD ]
Line_4 $$ try (BytesStreamOutput stream = new BytesStreamOutput()) -->Line_17 $$ final byte[] data = stream.bytes().toBytes()[ FD ]
Line_13 $$ final LocalTransport targetTransport = connectedNodes.get(node)-->Line_22 $$ targetTransport.messageReceived(data, action, LocalTransport.this, version, requestId)[ FD ]
Line_2 $$ public void sendRequest(final DiscoveryNode node, final long requestId, final String action, final TransportRequest request, TransportRequestOptions options) throws IOException, TransportException -->Line_3 $$ final Version version = Version.smallest(node.version(), this.version)[ FD ]
Line_4 $$ try (BytesStreamOutput stream = new BytesStreamOutput()) -->Line_9 $$ stream.writeByte(status)[ FD ]
Line_2 $$ public void sendRequest(final DiscoveryNode node, final long requestId, final String action, final TransportRequest request, TransportRequestOptions options) throws IOException, TransportException -->Line_19 $$ transportServiceAdapter.onRequestSent(node, requestId, action, request, options)[ FD ]
Line_3 $$ final Version version = Version.smallest(node.version(), this.version)-->Line_22 $$ targetTransport.messageReceived(data, action, LocalTransport.this, version, requestId)[ FD ]
Line_20 $$ targetTransport.workers().execute(new Runnable() -->Line_22 $$ targetTransport.messageReceived(data, action, LocalTransport.this, version, requestId)[ CD ]
Line_4 $$ try (BytesStreamOutput stream = new BytesStreamOutput()) -->Line_5 $$ stream.setVersion(version)[ FD ]
Line_7 $$ byte status = 0-->Line_8 $$ status = TransportStatus.setRequest(status)[ FD ]
Line_13 $$ final LocalTransport targetTransport = connectedNodes.get(node)-->Line_20 $$ targetTransport.workers().execute(new Runnable() [ FD ]
Line_2 $$ public void sendRequest(final DiscoveryNode node, final long requestId, final String action, final TransportRequest request, TransportRequestOptions options) throws IOException, TransportException -->Line_3 $$ final Version version = Version.smallest(node.version(), this.version)[ CD ]
Line_2 $$ public void sendRequest(final DiscoveryNode node, final long requestId, final String action, final TransportRequest request, TransportRequestOptions options) throws IOException, TransportException -->Line_11 $$ request.writeTo(stream)[ FD ]
Line_2 $$ public void sendRequest(final DiscoveryNode node, final long requestId, final String action, final TransportRequest request, TransportRequestOptions options) throws IOException, TransportException -->Line_6 $$ stream.writeLong(requestId)[ FD ]
Line_17 $$ final byte[] data = stream.bytes().toBytes()-->Line_22 $$ targetTransport.messageReceived(data, action, LocalTransport.this, version, requestId)[ FD ]
Line_4 $$ try (BytesStreamOutput stream = new BytesStreamOutput()) -->Line_11 $$ request.writeTo(stream)[ FD ]
Line_2 $$ public void sendRequest(final DiscoveryNode node, final long requestId, final String action, final TransportRequest request, TransportRequestOptions options) throws IOException, TransportException -->Line_22 $$ targetTransport.messageReceived(data, action, LocalTransport.this, version, requestId)[ FD ]
Line_4 $$ try (BytesStreamOutput stream = new BytesStreamOutput()) -->Line_6 $$ stream.writeLong(requestId)[ FD ]
Line_2 $$ public void sendRequest(final DiscoveryNode node, final long requestId, final String action, final TransportRequest request, TransportRequestOptions options) throws IOException, TransportException -->Line_13 $$ final LocalTransport targetTransport = connectedNodes.get(node)[ FD ]
Line_7 $$ byte status = 0-->Line_9 $$ stream.writeByte(status)[ FD ]
Line_4 $$ try (BytesStreamOutput stream = new BytesStreamOutput()) -->Line_10 $$ stream.writeString(action)[ FD ]
Line_4 $$ try (BytesStreamOutput stream = new BytesStreamOutput()) -->Line_12 $$ stream.close()[ FD ]
Line_3 $$ final Version version = Version.smallest(node.version(), this.version)-->Line_5 $$ stream.setVersion(version)[ FD ]
Line_8 $$ status = TransportStatus.setRequest(status)-->Line_9 $$ stream.writeByte(status)[ FD ]
Line_13 $$ final LocalTransport targetTransport = connectedNodes.get(node)-->Line_14 $$ if (targetTransport == null) [ FD ]
