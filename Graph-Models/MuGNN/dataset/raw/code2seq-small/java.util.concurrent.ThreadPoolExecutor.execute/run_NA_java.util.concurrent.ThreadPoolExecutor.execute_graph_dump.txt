Line_15 $$ int threadPoolSize = threadPool.getCorePoolSize()-->Line_16 $$ if (threadPoolSize != maxThreadPoolSize) [ FD ]
Line_5 $$ while (!stopped.get() && !Thread.currentThread().isInterrupted()) -->Line_14 $$ allNodes.add(event.getNodeId().toString())[ CD ]
Line_3 $$ ContainerEvent event = null-->Line_14 $$ allNodes.add(event.getNodeId().toString())[ FD ]
Line_7 $$ event = events.take()-->Line_14 $$ allNodes.add(event.getNodeId().toString())[ FD ]
Line_16 $$ if (threadPoolSize != maxThreadPoolSize) -->Line_19 $$ if (threadPoolSize < idealThreadPoolSize) [ CD ]
Line_4 $$ Set<String> allNodes = new HashSet<String>()-->Line_14 $$ allNodes.add(event.getNodeId().toString())[ FD ]
Line_20 $$ int newThreadPoolSize = Math.min(maxThreadPoolSize, idealThreadPoolSize + INITIAL_THREAD_POOL_SIZE)-->Line_22 $$ threadPool.setCorePoolSize(newThreadPoolSize)[ FD ]
Line_9 $$ if (!stopped.get()) -->Line_10 $$ LOG.error("Returning, thread interrupted", e)[ CD ]
Line_19 $$ if (threadPoolSize < idealThreadPoolSize) -->Line_20 $$ int newThreadPoolSize = Math.min(maxThreadPoolSize, idealThreadPoolSize + INITIAL_THREAD_POOL_SIZE)[ CD ]
Line_19 $$ if (threadPoolSize < idealThreadPoolSize) -->Line_21 $$ LOG.info("Set NMClientAsync thread pool size to " + newThreadPoolSize + " as the number of nodes to talk to is " + nodeNum)[ CD ]
Line_16 $$ if (threadPoolSize != maxThreadPoolSize) -->Line_18 $$ int idealThreadPoolSize = Math.min(maxThreadPoolSize, nodeNum)[ CD ]
Line_3 $$ ContainerEvent event = null-->Line_7 $$ event = events.take()[ FD ]
Line_2 $$ public void run() -->Line_4 $$ Set<String> allNodes = new HashSet<String>()[ CD ]
Line_5 $$ while (!stopped.get() && !Thread.currentThread().isInterrupted()) -->Line_15 $$ int threadPoolSize = threadPool.getCorePoolSize()[ CD ]
Line_19 $$ if (threadPoolSize < idealThreadPoolSize) -->Line_22 $$ threadPool.setCorePoolSize(newThreadPoolSize)[ CD ]
Line_7 $$ event = events.take()-->Line_25 $$ threadPool.execute(getContainerEventProcessor(event))[ FD ]
Line_5 $$ while (!stopped.get() && !Thread.currentThread().isInterrupted()) -->Line_16 $$ if (threadPoolSize != maxThreadPoolSize) [ CD ]
Line_4 $$ Set<String> allNodes = new HashSet<String>()-->Line_17 $$ int nodeNum = allNodes.size()[ FD ]
Line_15 $$ int threadPoolSize = threadPool.getCorePoolSize()-->Line_19 $$ if (threadPoolSize < idealThreadPoolSize) [ FD ]
Line_2 $$ public void run() -->Line_5 $$ while (!stopped.get() && !Thread.currentThread().isInterrupted()) [ CD ]
Line_2 $$ public void run() -->Line_3 $$ ContainerEvent event = null[ CD ]
Line_16 $$ if (threadPoolSize != maxThreadPoolSize) -->Line_17 $$ int nodeNum = allNodes.size()[ CD ]
Line_3 $$ ContainerEvent event = null-->Line_25 $$ threadPool.execute(getContainerEventProcessor(event))[ FD ]
Line_18 $$ int idealThreadPoolSize = Math.min(maxThreadPoolSize, nodeNum)-->Line_19 $$ if (threadPoolSize < idealThreadPoolSize) [ FD ]
Line_17 $$ int nodeNum = allNodes.size()-->Line_18 $$ int idealThreadPoolSize = Math.min(maxThreadPoolSize, nodeNum)[ FD ]
Line_5 $$ while (!stopped.get() && !Thread.currentThread().isInterrupted()) -->Line_25 $$ threadPool.execute(getContainerEventProcessor(event))[ CD ]
