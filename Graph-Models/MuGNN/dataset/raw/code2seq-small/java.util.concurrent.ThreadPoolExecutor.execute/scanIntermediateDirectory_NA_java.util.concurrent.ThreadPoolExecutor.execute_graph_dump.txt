Line_11 $$ if (LOG.isDebugEnabled()) -->Line_12 $$ LOG.debug("scanning file: " + fs.getPath())[ CD ]
Line_2 $$ private void scanIntermediateDirectory(final Path absPath) throws IOException -->Line_7 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_18 $$ final HistoryFileInfo old = jobListCache.addIfAbsent(fileInfo)-->Line_19 $$ if (old == null || old.didMoveFail()) [ FD ]
Line_22 $$ if (found.getJobIndexInfo().getFinishTime() <= cutoff) -->Line_32 $$ moveToDoneExecutor.execute(new Runnable() [ CD ]
Line_17 $$ HistoryFileInfo fileInfo = new HistoryFileInfo(fs.getPath(), new Path(fs.getPath().getParent(), confFileName), new Path(fs.getPath().getParent(), summaryFileName), jobIndexInfo, false)-->Line_18 $$ final HistoryFileInfo old = jobListCache.addIfAbsent(fileInfo)[ FD ]
Line_42 $$ if (old != null && !old.isMovePending()) -->Line_43 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_10 $$ for (FileStatus fs : fileStatusList) -->Line_12 $$ LOG.debug("scanning file: " + fs.getPath())[ FD ]
Line_43 $$ if (LOG.isDebugEnabled()) -->Line_44 $$ LOG.debug("Duplicate: deleting")[ CD ]
Line_14 $$ JobIndexInfo jobIndexInfo = FileNameIndexUtils.getIndexInfo(fs.getPath().getName())-->Line_16 $$ String summaryFileName = JobHistoryUtils.getIntermediateSummaryFileName(jobIndexInfo.getJobId())[ FD ]
Line_19 $$ if (old == null || old.didMoveFail()) -->Line_20 $$ final HistoryFileInfo found = (old == null) ? fileInfo : old[ CD ]
Line_19 $$ if (old == null || old.didMoveFail()) -->Line_21 $$ long cutoff = System.currentTimeMillis() - maxHistoryAge[ CD ]
Line_42 $$ if (old != null && !old.isMovePending()) -->Line_46 $$ fileInfo.delete()[ CD ]
Line_20 $$ final HistoryFileInfo found = (old == null) ? fileInfo : old-->Line_22 $$ if (found.getJobIndexInfo().getFinishTime() <= cutoff) [ FD ]
Line_7 $$ if (LOG.isDebugEnabled()) -->Line_8 $$ LOG.debug("Found " + fileStatusList.size() + " files")[ CD ]
Line_6 $$ List<FileStatus> fileStatusList = scanDirectoryForHistoryFiles(absPath, intermediateDoneDirFc)-->Line_8 $$ LOG.debug("Found " + fileStatusList.size() + " files")[ FD ]
Line_3 $$ if (LOG.isDebugEnabled()) -->Line_4 $$ LOG.debug("Scanning intermediate dir " + absPath)[ CD ]
Line_2 $$ private void scanIntermediateDirectory(final Path absPath) throws IOException -->Line_3 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_21 $$ long cutoff = System.currentTimeMillis() - maxHistoryAge-->Line_22 $$ if (found.getJobIndexInfo().getFinishTime() <= cutoff) [ FD ]
Line_29 $$ if (LOG.isDebugEnabled()) -->Line_30 $$ LOG.debug("Scheduling move to done of " + found)[ CD ]
Line_20 $$ final HistoryFileInfo found = (old == null) ? fileInfo : old-->Line_35 $$ found.moveToDone()[ FD ]
Line_10 $$ for (FileStatus fs : fileStatusList) -->Line_14 $$ JobIndexInfo jobIndexInfo = FileNameIndexUtils.getIndexInfo(fs.getPath().getName())[ FD ]
Line_20 $$ final HistoryFileInfo found = (old == null) ? fileInfo : old-->Line_37 $$ LOG.info("Failed to process fileInfo for job: " + found.getJobId(), e)[ FD ]
Line_18 $$ final HistoryFileInfo old = jobListCache.addIfAbsent(fileInfo)-->Line_42 $$ if (old != null && !old.isMovePending()) [ FD ]
Line_2 $$ private void scanIntermediateDirectory(final Path absPath) throws IOException -->Line_6 $$ List<FileStatus> fileStatusList = scanDirectoryForHistoryFiles(absPath, intermediateDoneDirFc)[ CD ]
Line_20 $$ final HistoryFileInfo found = (old == null) ? fileInfo : old-->Line_24 $$ found.delete()[ FD ]
Line_19 $$ if (old == null || old.didMoveFail()) -->Line_42 $$ if (old != null && !old.isMovePending()) [ CD ]
Line_17 $$ HistoryFileInfo fileInfo = new HistoryFileInfo(fs.getPath(), new Path(fs.getPath().getParent(), confFileName), new Path(fs.getPath().getParent(), summaryFileName), jobIndexInfo, false)-->Line_46 $$ fileInfo.delete()[ FD ]
Line_10 $$ for (FileStatus fs : fileStatusList) -->Line_17 $$ HistoryFileInfo fileInfo = new HistoryFileInfo(fs.getPath(), new Path(fs.getPath().getParent(), confFileName), new Path(fs.getPath().getParent(), summaryFileName), jobIndexInfo, false)[ FD ]
Line_19 $$ if (old == null || old.didMoveFail()) -->Line_22 $$ if (found.getJobIndexInfo().getFinishTime() <= cutoff) [ CD ]
Line_22 $$ if (found.getJobIndexInfo().getFinishTime() <= cutoff) -->Line_29 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_14 $$ JobIndexInfo jobIndexInfo = FileNameIndexUtils.getIndexInfo(fs.getPath().getName())-->Line_15 $$ String confFileName = JobHistoryUtils.getIntermediateConfFileName(jobIndexInfo.getJobId())[ FD ]
Line_2 $$ private void scanIntermediateDirectory(final Path absPath) throws IOException -->Line_6 $$ List<FileStatus> fileStatusList = scanDirectoryForHistoryFiles(absPath, intermediateDoneDirFc)[ FD ]
