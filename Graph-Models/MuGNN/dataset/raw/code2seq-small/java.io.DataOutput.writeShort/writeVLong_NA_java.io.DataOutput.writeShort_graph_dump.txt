Line_3 $$ if ((n < 128) && (n >= -32)) -->Line_4 $$ out.writeByte((int) n)[ CD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_35 $$ out.writeInt((int) n)[ FD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_7 $$ long un = (n < 0) ? ~n : n[ CD ]
Line_7 $$ long un = (n < 0) ? ~n : n-->Line_8 $$ int len = (Long.SIZE - Long.numberOfLeadingZeros(un)) / 8 + 1[ FD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_51 $$ out.writeByte((int) n)[ FD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_29 $$ out.writeByte(firstByte - 112)[ FD ]
Line_28 $$ if ((firstByte < 8) && (firstByte >= -8)) -->Line_30 $$ out.writeShort(((int) n) >>> 8)[ CD ]
Line_28 $$ if ((firstByte < 8) && (firstByte >= -8)) -->Line_31 $$ out.writeByte((int) n)[ CD ]
Line_9 $$ int firstByte = (int) (n >> ((len - 1) * 8))-->Line_26 $$ firstByte >>= 8[ FD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_50 $$ out.writeShort((int) (n >>> 8))[ FD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_22 $$ out.writeByte(firstByte - 88)[ FD ]
Line_28 $$ if ((firstByte < 8) && (firstByte >= -8)) -->Line_29 $$ out.writeByte(firstByte - 112)[ CD ]
Line_9 $$ int firstByte = (int) (n >> ((len - 1) * 8))-->Line_12 $$ firstByte >>= 8[ FD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_15 $$ out.writeByte(firstByte - 52)[ FD ]
Line_28 $$ if ((firstByte < 8) && (firstByte >= -8)) -->Line_32 $$ return[ CD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_23 $$ out.writeShort((int) n)[ FD ]
Line_12 $$ firstByte >>= 8-->Line_19 $$ firstByte >>= 8[ FD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_44 $$ out.writeInt((int) (n >>> 16))[ FD ]
Line_14 $$ if ((firstByte < 20) && (firstByte >= -20)) -->Line_17 $$ return[ CD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_31 $$ out.writeByte((int) n)[ FD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_8 $$ int len = (Long.SIZE - Long.numberOfLeadingZeros(un)) / 8 + 1[ CD ]
Line_14 $$ if ((firstByte < 20) && (firstByte >= -20)) -->Line_16 $$ out.writeByte((int) n)[ CD ]
Line_9 $$ int firstByte = (int) (n >> ((len - 1) * 8))-->Line_19 $$ firstByte >>= 8[ FD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_38 $$ out.writeByte(len - 129)[ FD ]
Line_21 $$ if ((firstByte < 16) && (firstByte >= -16)) -->Line_23 $$ out.writeShort((int) n)[ CD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_16 $$ out.writeByte((int) n)[ FD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_48 $$ out.writeByte(len - 129)[ FD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_4 $$ out.writeByte((int) n)[ FD ]
Line_21 $$ if ((firstByte < 16) && (firstByte >= -16)) -->Line_22 $$ out.writeByte(firstByte - 88)[ CD ]
Line_14 $$ if ((firstByte < 20) && (firstByte >= -20)) -->Line_15 $$ out.writeByte(firstByte - 52)[ CD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_55 $$ out.writeLong(n)[ FD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_7 $$ long un = (n < 0) ? ~n : n[ FD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_40 $$ out.writeByte((int) n)[ FD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_34 $$ out.writeByte(len - 129)[ FD ]
Line_12 $$ firstByte >>= 8-->Line_26 $$ firstByte >>= 8[ FD ]
Line_19 $$ firstByte >>= 8-->Line_26 $$ firstByte >>= 8[ FD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_43 $$ out.writeByte(len - 129)[ FD ]
Line_21 $$ if ((firstByte < 16) && (firstByte >= -16)) -->Line_24 $$ return[ CD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_49 $$ out.writeInt((int) (n >>> 24))[ FD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_9 $$ int firstByte = (int) (n >> ((len - 1) * 8))[ CD ]
Line_3 $$ if ((n < 128) && (n >= -32)) -->Line_5 $$ return[ CD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_39 $$ out.writeInt((int) (n >>> 8))[ FD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_3 $$ if ((n < 128) && (n >= -32)) [ CD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_30 $$ out.writeShort(((int) n) >>> 8)[ FD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_54 $$ out.writeByte(len - 129)[ FD ]
Line_2 $$ public static void writeVLong(DataOutput out, long n) throws IOException -->Line_45 $$ out.writeShort((int) n)[ FD ]
