Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_22 $$ ByteBufferUtil.writeWithShortLength(bytes, canon)[ CD ]
Line_23 $$ bytes = new byte[size]-->Line_26 $$ ByteBufferUtil.writeWithShortLength(bytes, canon)[ FD ]
Line_5 $$ Random rnd = ThreadLocalRandom.current()-->Line_37 $$ int v = rnd.nextInt()[ FD ]
Line_7 $$ byte[] bytes = new byte[size]-->Line_29 $$ ByteBufferUtil.writeWithShortLength(wrap(bytes, true), test)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_58 $$ test.writeFloat(v)[ CD ]
Line_11 $$ bytes = new byte[size]-->Line_29 $$ ByteBufferUtil.writeWithShortLength(wrap(bytes, true), test)[ FD ]
Line_15 $$ bytes = new byte[size]-->Line_28 $$ rnd.nextBytes(bytes)[ FD ]
Line_27 $$ bytes = new byte[size]-->Line_28 $$ rnd.nextBytes(bytes)[ FD ]
Line_4 $$ final DataOutput canon = new DataOutputStream(bos)-->Line_39 $$ canon.writeInt(v)[ FD ]
Line_11 $$ bytes = new byte[size]-->Line_14 $$ ByteBufferUtil.writeWithLength(bytes, canon)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_54 $$ canon.writeDouble(v)[ CD ]
Line_7 $$ byte[] bytes = new byte[size]-->Line_28 $$ rnd.nextBytes(bytes)[ FD ]
Line_15 $$ bytes = new byte[size]-->Line_21 $$ ByteBufferUtil.writeWithShortLength(bytes, test)[ FD ]
Line_5 $$ Random rnd = ThreadLocalRandom.current()-->Line_32 $$ long v = rnd.nextLong()[ FD ]
Line_4 $$ final DataOutput canon = new DataOutputStream(bos)-->Line_22 $$ ByteBufferUtil.writeWithShortLength(bytes, canon)[ FD ]
Line_19 $$ bytes = new byte[size]-->Line_25 $$ ByteBufferUtil.writeWithShortLength(wrap(bytes, false), test)[ FD ]
Line_23 $$ bytes = new byte[size]-->Line_24 $$ rnd.nextBytes(bytes)[ FD ]
Line_15 $$ bytes = new byte[size]-->Line_23 $$ bytes = new byte[size][ FD ]
Line_7 $$ byte[] bytes = new byte[size]-->Line_18 $$ ByteBufferUtil.writeWithLength(bytes, canon)[ FD ]
Line_5 $$ Random rnd = ThreadLocalRandom.current()-->Line_42 $$ short v = (short) rnd.nextInt()[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_17 $$ ByteBufferUtil.writeWithLength(wrap(bytes, true), test)[ CD ]
Line_7 $$ byte[] bytes = new byte[size]-->Line_25 $$ ByteBufferUtil.writeWithShortLength(wrap(bytes, false), test)[ FD ]
Line_5 $$ Random rnd = ThreadLocalRandom.current()-->Line_28 $$ rnd.nextBytes(bytes)[ FD ]
Line_7 $$ byte[] bytes = new byte[size]-->Line_16 $$ rnd.nextBytes(bytes)[ FD ]
Line_11 $$ bytes = new byte[size]-->Line_20 $$ rnd.nextBytes(bytes)[ FD ]
Line_4 $$ final DataOutput canon = new DataOutputStream(bos)-->Line_10 $$ ByteBufferUtil.writeWithLength(bytes, canon)[ FD ]
Line_23 $$ bytes = new byte[size]-->Line_29 $$ ByteBufferUtil.writeWithShortLength(wrap(bytes, true), test)[ FD ]
Line_32 $$ long v = rnd.nextLong()-->Line_34 $$ canon.writeLong(v)[ FD ]
Line_11 $$ bytes = new byte[size]-->Line_27 $$ bytes = new byte[size][ FD ]
Line_15 $$ bytes = new byte[size]-->Line_30 $$ ByteBufferUtil.writeWithShortLength(bytes, canon)[ FD ]
Line_23 $$ bytes = new byte[size]-->Line_30 $$ ByteBufferUtil.writeWithShortLength(bytes, canon)[ FD ]
Line_4 $$ final DataOutput canon = new DataOutputStream(bos)-->Line_34 $$ canon.writeLong(v)[ FD ]
Line_15 $$ bytes = new byte[size]-->Line_16 $$ rnd.nextBytes(bytes)[ FD ]
Line_15 $$ bytes = new byte[size]-->Line_24 $$ rnd.nextBytes(bytes)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_14 $$ ByteBufferUtil.writeWithLength(bytes, canon)[ CD ]
Line_7 $$ byte[] bytes = new byte[size]-->Line_22 $$ ByteBufferUtil.writeWithShortLength(bytes, canon)[ FD ]
Line_11 $$ bytes = new byte[size]-->Line_23 $$ bytes = new byte[size][ FD ]
Line_32 $$ long v = rnd.nextLong()-->Line_39 $$ canon.writeInt(v)[ FD ]
Line_7 $$ byte[] bytes = new byte[size]-->Line_30 $$ ByteBufferUtil.writeWithShortLength(bytes, canon)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_52 $$ double v = rnd.nextDouble()[ CD ]
Line_5 $$ Random rnd = ThreadLocalRandom.current()-->Line_8 $$ rnd.nextBytes(bytes)[ FD ]
Line_7 $$ byte[] bytes = new byte[size]-->Line_10 $$ ByteBufferUtil.writeWithLength(bytes, canon)[ FD ]
Line_11 $$ bytes = new byte[size]-->Line_22 $$ ByteBufferUtil.writeWithShortLength(bytes, canon)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_21 $$ ByteBufferUtil.writeWithShortLength(bytes, test)[ FD ]
Line_19 $$ bytes = new byte[size]-->Line_26 $$ ByteBufferUtil.writeWithShortLength(bytes, canon)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_59 $$ canon.writeFloat(v)[ CD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_15 $$ bytes = new byte[size][ CD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_37 $$ int v = rnd.nextInt()[ CD ]
Line_23 $$ bytes = new byte[size]-->Line_27 $$ bytes = new byte[size][ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_61 $$ return new DataInputStream(new ByteArrayInputStream(bos.toByteArray()))[ CD ]
Line_15 $$ bytes = new byte[size]-->Line_26 $$ ByteBufferUtil.writeWithShortLength(bytes, canon)[ FD ]
Line_4 $$ final DataOutput canon = new DataOutputStream(bos)-->Line_26 $$ ByteBufferUtil.writeWithShortLength(bytes, canon)[ FD ]
Line_19 $$ bytes = new byte[size]-->Line_27 $$ bytes = new byte[size][ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_11 $$ bytes = new byte[size][ CD ]
Line_11 $$ bytes = new byte[size]-->Line_12 $$ rnd.nextBytes(bytes)[ FD ]
Line_19 $$ bytes = new byte[size]-->Line_30 $$ ByteBufferUtil.writeWithShortLength(bytes, canon)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_24 $$ rnd.nextBytes(bytes)[ CD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_53 $$ test.writeDouble(v)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_29 $$ ByteBufferUtil.writeWithShortLength(wrap(bytes, true), test)[ CD ]
Line_19 $$ bytes = new byte[size]-->Line_20 $$ rnd.nextBytes(bytes)[ FD ]
Line_5 $$ Random rnd = ThreadLocalRandom.current()-->Line_47 $$ byte v = (byte) rnd.nextInt()[ FD ]
Line_7 $$ byte[] bytes = new byte[size]-->Line_12 $$ rnd.nextBytes(bytes)[ FD ]
Line_11 $$ bytes = new byte[size]-->Line_19 $$ bytes = new byte[size][ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_48 $$ test.write(v)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_12 $$ rnd.nextBytes(bytes)[ CD ]
Line_32 $$ long v = rnd.nextLong()-->Line_38 $$ test.writeInt(v)[ FD ]
Line_32 $$ long v = rnd.nextLong()-->Line_44 $$ canon.writeShort(v)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_34 $$ canon.writeLong(v)[ CD ]
Line_15 $$ bytes = new byte[size]-->Line_17 $$ ByteBufferUtil.writeWithLength(wrap(bytes, true), test)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_49 $$ canon.write(v)[ CD ]
Line_4 $$ final DataOutput canon = new DataOutputStream(bos)-->Line_59 $$ canon.writeFloat(v)[ FD ]
Line_4 $$ final DataOutput canon = new DataOutputStream(bos)-->Line_49 $$ canon.write(v)[ FD ]
Line_4 $$ final DataOutput canon = new DataOutputStream(bos)-->Line_30 $$ ByteBufferUtil.writeWithShortLength(bytes, canon)[ FD ]
Line_7 $$ byte[] bytes = new byte[size]-->Line_23 $$ bytes = new byte[size][ FD ]
Line_11 $$ bytes = new byte[size]-->Line_24 $$ rnd.nextBytes(bytes)[ FD ]
Line_11 $$ bytes = new byte[size]-->Line_30 $$ ByteBufferUtil.writeWithShortLength(bytes, canon)[ FD ]
Line_4 $$ final DataOutput canon = new DataOutputStream(bos)-->Line_18 $$ ByteBufferUtil.writeWithLength(bytes, canon)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_7 $$ byte[] bytes = new byte[size][ CD ]
Line_19 $$ bytes = new byte[size]-->Line_28 $$ rnd.nextBytes(bytes)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_5 $$ Random rnd = ThreadLocalRandom.current()[ CD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_43 $$ test.writeShort(v)[ FD ]
Line_5 $$ Random rnd = ThreadLocalRandom.current()-->Line_57 $$ float v = (float) rnd.nextDouble()[ FD ]
Line_4 $$ final DataOutput canon = new DataOutputStream(bos)-->Line_14 $$ ByteBufferUtil.writeWithLength(bytes, canon)[ FD ]
Line_32 $$ long v = rnd.nextLong()-->Line_43 $$ test.writeShort(v)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_21 $$ ByteBufferUtil.writeWithShortLength(bytes, test)[ CD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_27 $$ bytes = new byte[size][ CD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_13 $$ ByteBufferUtil.writeWithLength(wrap(bytes, false), test)[ FD ]
Line_19 $$ bytes = new byte[size]-->Line_24 $$ rnd.nextBytes(bytes)[ FD ]
Line_32 $$ long v = rnd.nextLong()-->Line_49 $$ canon.write(v)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_23 $$ bytes = new byte[size][ CD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_17 $$ ByteBufferUtil.writeWithLength(wrap(bytes, true), test)[ FD ]
Line_19 $$ bytes = new byte[size]-->Line_21 $$ ByteBufferUtil.writeWithShortLength(bytes, test)[ FD ]
Line_15 $$ bytes = new byte[size]-->Line_22 $$ ByteBufferUtil.writeWithShortLength(bytes, canon)[ FD ]
Line_7 $$ byte[] bytes = new byte[size]-->Line_26 $$ ByteBufferUtil.writeWithShortLength(bytes, canon)[ FD ]
Line_27 $$ bytes = new byte[size]-->Line_30 $$ ByteBufferUtil.writeWithShortLength(bytes, canon)[ FD ]
Line_15 $$ bytes = new byte[size]-->Line_27 $$ bytes = new byte[size][ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_53 $$ test.writeDouble(v)[ CD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_4 $$ final DataOutput canon = new DataOutputStream(bos)[ CD ]
Line_27 $$ bytes = new byte[size]-->Line_29 $$ ByteBufferUtil.writeWithShortLength(wrap(bytes, true), test)[ FD ]
Line_5 $$ Random rnd = ThreadLocalRandom.current()-->Line_20 $$ rnd.nextBytes(bytes)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_9 $$ ByteBufferUtil.writeWithLength(bytes, test)[ CD ]
Line_11 $$ bytes = new byte[size]-->Line_17 $$ ByteBufferUtil.writeWithLength(wrap(bytes, true), test)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_9 $$ ByteBufferUtil.writeWithLength(bytes, test)[ FD ]
Line_7 $$ byte[] bytes = new byte[size]-->Line_11 $$ bytes = new byte[size][ FD ]
Line_4 $$ final DataOutput canon = new DataOutputStream(bos)-->Line_44 $$ canon.writeShort(v)[ FD ]
Line_5 $$ Random rnd = ThreadLocalRandom.current()-->Line_52 $$ double v = rnd.nextDouble()[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_13 $$ ByteBufferUtil.writeWithLength(wrap(bytes, false), test)[ CD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_8 $$ rnd.nextBytes(bytes)[ CD ]
Line_11 $$ bytes = new byte[size]-->Line_26 $$ ByteBufferUtil.writeWithShortLength(bytes, canon)[ FD ]
Line_7 $$ byte[] bytes = new byte[size]-->Line_9 $$ ByteBufferUtil.writeWithLength(bytes, test)[ FD ]
Line_15 $$ bytes = new byte[size]-->Line_25 $$ ByteBufferUtil.writeWithShortLength(wrap(bytes, false), test)[ FD ]
Line_7 $$ byte[] bytes = new byte[size]-->Line_20 $$ rnd.nextBytes(bytes)[ FD ]
Line_3 $$ final ByteArrayOutputStream bos = new ByteArrayOutputStream()-->Line_61 $$ return new DataInputStream(new ByteArrayInputStream(bos.toByteArray()))[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_6 $$ int size = 50[ CD ]
Line_15 $$ bytes = new byte[size]-->Line_19 $$ bytes = new byte[size][ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_20 $$ rnd.nextBytes(bytes)[ CD ]
Line_7 $$ byte[] bytes = new byte[size]-->Line_8 $$ rnd.nextBytes(bytes)[ FD ]
Line_7 $$ byte[] bytes = new byte[size]-->Line_21 $$ ByteBufferUtil.writeWithShortLength(bytes, test)[ FD ]
Line_19 $$ bytes = new byte[size]-->Line_22 $$ ByteBufferUtil.writeWithShortLength(bytes, canon)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_16 $$ rnd.nextBytes(bytes)[ CD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_48 $$ test.write(v)[ CD ]
Line_7 $$ byte[] bytes = new byte[size]-->Line_13 $$ ByteBufferUtil.writeWithLength(wrap(bytes, false), test)[ FD ]
Line_5 $$ Random rnd = ThreadLocalRandom.current()-->Line_24 $$ rnd.nextBytes(bytes)[ FD ]
Line_23 $$ bytes = new byte[size]-->Line_28 $$ rnd.nextBytes(bytes)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_38 $$ test.writeInt(v)[ CD ]
Line_32 $$ long v = rnd.nextLong()-->Line_33 $$ test.writeLong(v)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_32 $$ long v = rnd.nextLong()[ CD ]
Line_32 $$ long v = rnd.nextLong()-->Line_53 $$ test.writeDouble(v)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_26 $$ ByteBufferUtil.writeWithShortLength(bytes, canon)[ CD ]
Line_7 $$ byte[] bytes = new byte[size]-->Line_17 $$ ByteBufferUtil.writeWithLength(wrap(bytes, true), test)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_29 $$ ByteBufferUtil.writeWithShortLength(wrap(bytes, true), test)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_58 $$ test.writeFloat(v)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_28 $$ rnd.nextBytes(bytes)[ CD ]
Line_11 $$ bytes = new byte[size]-->Line_16 $$ rnd.nextBytes(bytes)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_43 $$ test.writeShort(v)[ CD ]
Line_11 $$ bytes = new byte[size]-->Line_25 $$ ByteBufferUtil.writeWithShortLength(wrap(bytes, false), test)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_18 $$ ByteBufferUtil.writeWithLength(bytes, canon)[ CD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_38 $$ test.writeInt(v)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_33 $$ test.writeLong(v)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_39 $$ canon.writeInt(v)[ CD ]
Line_32 $$ long v = rnd.nextLong()-->Line_54 $$ canon.writeDouble(v)[ FD ]
Line_11 $$ bytes = new byte[size]-->Line_28 $$ rnd.nextBytes(bytes)[ FD ]
Line_19 $$ bytes = new byte[size]-->Line_23 $$ bytes = new byte[size][ FD ]
Line_15 $$ bytes = new byte[size]-->Line_29 $$ ByteBufferUtil.writeWithShortLength(wrap(bytes, true), test)[ FD ]
Line_4 $$ final DataOutput canon = new DataOutputStream(bos)-->Line_54 $$ canon.writeDouble(v)[ FD ]
Line_5 $$ Random rnd = ThreadLocalRandom.current()-->Line_16 $$ rnd.nextBytes(bytes)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_30 $$ ByteBufferUtil.writeWithShortLength(bytes, canon)[ CD ]
Line_32 $$ long v = rnd.nextLong()-->Line_59 $$ canon.writeFloat(v)[ FD ]
Line_11 $$ bytes = new byte[size]-->Line_15 $$ bytes = new byte[size][ FD ]
Line_5 $$ Random rnd = ThreadLocalRandom.current()-->Line_12 $$ rnd.nextBytes(bytes)[ FD ]
Line_32 $$ long v = rnd.nextLong()-->Line_48 $$ test.write(v)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_44 $$ canon.writeShort(v)[ CD ]
Line_11 $$ bytes = new byte[size]-->Line_13 $$ ByteBufferUtil.writeWithLength(wrap(bytes, false), test)[ FD ]
Line_19 $$ bytes = new byte[size]-->Line_29 $$ ByteBufferUtil.writeWithShortLength(wrap(bytes, true), test)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_3 $$ final ByteArrayOutputStream bos = new ByteArrayOutputStream()[ CD ]
Line_7 $$ byte[] bytes = new byte[size]-->Line_15 $$ bytes = new byte[size][ FD ]
Line_11 $$ bytes = new byte[size]-->Line_21 $$ ByteBufferUtil.writeWithShortLength(bytes, test)[ FD ]
Line_7 $$ byte[] bytes = new byte[size]-->Line_14 $$ ByteBufferUtil.writeWithLength(bytes, canon)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_19 $$ bytes = new byte[size][ CD ]
Line_15 $$ bytes = new byte[size]-->Line_18 $$ ByteBufferUtil.writeWithLength(bytes, canon)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_25 $$ ByteBufferUtil.writeWithShortLength(wrap(bytes, false), test)[ FD ]
Line_7 $$ byte[] bytes = new byte[size]-->Line_27 $$ bytes = new byte[size][ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_33 $$ test.writeLong(v)[ CD ]
Line_7 $$ byte[] bytes = new byte[size]-->Line_24 $$ rnd.nextBytes(bytes)[ FD ]
Line_11 $$ bytes = new byte[size]-->Line_18 $$ ByteBufferUtil.writeWithLength(bytes, canon)[ FD ]
Line_7 $$ byte[] bytes = new byte[size]-->Line_19 $$ bytes = new byte[size][ FD ]
Line_32 $$ long v = rnd.nextLong()-->Line_58 $$ test.writeFloat(v)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_25 $$ ByteBufferUtil.writeWithShortLength(wrap(bytes, false), test)[ CD ]
Line_23 $$ bytes = new byte[size]-->Line_25 $$ ByteBufferUtil.writeWithShortLength(wrap(bytes, false), test)[ FD ]
Line_2 $$ private DataInput testWrite(DataOutputPlus test) throws IOException -->Line_10 $$ ByteBufferUtil.writeWithLength(bytes, canon)[ CD ]
Line_15 $$ bytes = new byte[size]-->Line_20 $$ rnd.nextBytes(bytes)[ FD ]
