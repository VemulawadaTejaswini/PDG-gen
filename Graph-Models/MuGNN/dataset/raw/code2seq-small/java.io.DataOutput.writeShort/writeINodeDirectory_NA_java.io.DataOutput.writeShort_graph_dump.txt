Line_2 $$ public static void writeINodeDirectory(INodeDirectory node, DataOutput out) throws IOException -->Line_6 $$ out.writeLong(node.getModificationTime())[ FD ]
Line_2 $$ public static void writeINodeDirectory(INodeDirectory node, DataOutput out) throws IOException -->Line_8 $$ out.writeLong(0)[ CD ]
Line_2 $$ public static void writeINodeDirectory(INodeDirectory node, DataOutput out) throws IOException -->Line_11 $$ if (node.isSnapshottable()) [ FD ]
Line_2 $$ public static void writeINodeDirectory(INodeDirectory node, DataOutput out) throws IOException -->Line_8 $$ out.writeLong(0)[ FD ]
Line_11 $$ if (node.isSnapshottable()) -->Line_12 $$ out.writeBoolean(true)[ CD ]
Line_2 $$ public static void writeINodeDirectory(INodeDirectory node, DataOutput out) throws IOException -->Line_3 $$ writeLocalName(node, out)[ CD ]
Line_2 $$ public static void writeINodeDirectory(INodeDirectory node, DataOutput out) throws IOException -->Line_10 $$ writeQuota(node.getQuotaCounts(), out)[ CD ]
Line_2 $$ public static void writeINodeDirectory(INodeDirectory node, DataOutput out) throws IOException -->Line_17 $$ writePermissionStatus(node, out)[ CD ]
Line_2 $$ public static void writeINodeDirectory(INodeDirectory node, DataOutput out) throws IOException -->Line_7 $$ out.writeLong(0)[ FD ]
Line_2 $$ public static void writeINodeDirectory(INodeDirectory node, DataOutput out) throws IOException -->Line_11 $$ if (node.isSnapshottable()) [ CD ]
Line_2 $$ public static void writeINodeDirectory(INodeDirectory node, DataOutput out) throws IOException -->Line_4 $$ out.writeLong(node.getId())[ CD ]
Line_2 $$ public static void writeINodeDirectory(INodeDirectory node, DataOutput out) throws IOException -->Line_4 $$ out.writeLong(node.getId())[ FD ]
Line_2 $$ public static void writeINodeDirectory(INodeDirectory node, DataOutput out) throws IOException -->Line_14 $$ out.writeBoolean(false)[ FD ]
Line_2 $$ public static void writeINodeDirectory(INodeDirectory node, DataOutput out) throws IOException -->Line_9 $$ out.writeInt(-1)[ CD ]
Line_2 $$ public static void writeINodeDirectory(INodeDirectory node, DataOutput out) throws IOException -->Line_5 $$ out.writeShort(0)[ FD ]
Line_2 $$ public static void writeINodeDirectory(INodeDirectory node, DataOutput out) throws IOException -->Line_3 $$ writeLocalName(node, out)[ FD ]
Line_2 $$ public static void writeINodeDirectory(INodeDirectory node, DataOutput out) throws IOException -->Line_6 $$ out.writeLong(node.getModificationTime())[ CD ]
Line_2 $$ public static void writeINodeDirectory(INodeDirectory node, DataOutput out) throws IOException -->Line_17 $$ writePermissionStatus(node, out)[ FD ]
Line_2 $$ public static void writeINodeDirectory(INodeDirectory node, DataOutput out) throws IOException -->Line_9 $$ out.writeInt(-1)[ FD ]
Line_2 $$ public static void writeINodeDirectory(INodeDirectory node, DataOutput out) throws IOException -->Line_10 $$ writeQuota(node.getQuotaCounts(), out)[ FD ]
Line_11 $$ if (node.isSnapshottable()) -->Line_14 $$ out.writeBoolean(false)[ CD ]
Line_2 $$ public static void writeINodeDirectory(INodeDirectory node, DataOutput out) throws IOException -->Line_12 $$ out.writeBoolean(true)[ FD ]
Line_2 $$ public static void writeINodeDirectory(INodeDirectory node, DataOutput out) throws IOException -->Line_7 $$ out.writeLong(0)[ CD ]
Line_2 $$ public static void writeINodeDirectory(INodeDirectory node, DataOutput out) throws IOException -->Line_5 $$ out.writeShort(0)[ CD ]
Line_2 $$ public static void writeINodeDirectory(INodeDirectory node, DataOutput out) throws IOException -->Line_15 $$ out.writeBoolean(node.isWithSnapshot())[ FD ]
Line_11 $$ if (node.isSnapshottable()) -->Line_15 $$ out.writeBoolean(node.isWithSnapshot())[ CD ]
