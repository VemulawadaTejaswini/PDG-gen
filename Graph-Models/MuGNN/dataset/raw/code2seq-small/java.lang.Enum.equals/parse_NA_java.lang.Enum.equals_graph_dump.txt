Line_12 $$ Object value = settings.get("type")-->Line_13 $$ if (value != null) [ FD ]
Line_11 $$ if (settings != null) -->Line_13 $$ if (value != null) [ CD ]
Line_15 $$ seasonalityType = SeasonalityType.parse((String) value, parseFieldMatcher)-->Line_22 $$ boolean pad = parseBoolParam(settings, "pad", seasonalityType.equals(SeasonalityType.MULTIPLICATIVE))[ FD ]
Line_14 $$ if (value instanceof String) -->Line_16 $$ settings.remove("type")[ CD ]
Line_2 $$ public MovAvgModel parse(@Nullable Map<String, Object> settings, String pipelineName, int windowSize, ParseFieldMatcher parseFieldMatcher) throws ParseException -->Line_16 $$ settings.remove("type")[ FD ]
Line_14 $$ if (value instanceof String) -->Line_15 $$ seasonalityType = SeasonalityType.parse((String) value, parseFieldMatcher)[ CD ]
Line_2 $$ public MovAvgModel parse(@Nullable Map<String, Object> settings, String pipelineName, int windowSize, ParseFieldMatcher parseFieldMatcher) throws ParseException -->Line_4 $$ double beta = parseDoubleParam(settings, "beta", 0.1)[ FD ]
Line_2 $$ public MovAvgModel parse(@Nullable Map<String, Object> settings, String pipelineName, int windowSize, ParseFieldMatcher parseFieldMatcher) throws ParseException -->Line_3 $$ double alpha = parseDoubleParam(settings, "alpha", 0.3)[ CD ]
Line_2 $$ public MovAvgModel parse(@Nullable Map<String, Object> settings, String pipelineName, int windowSize, ParseFieldMatcher parseFieldMatcher) throws ParseException -->Line_22 $$ boolean pad = parseBoolParam(settings, "pad", seasonalityType.equals(SeasonalityType.MULTIPLICATIVE))[ FD ]
Line_2 $$ public MovAvgModel parse(@Nullable Map<String, Object> settings, String pipelineName, int windowSize, ParseFieldMatcher parseFieldMatcher) throws ParseException -->Line_24 $$ return new HoltWintersModel(alpha, beta, gamma, period, seasonalityType, pad)[ CD ]
Line_2 $$ public MovAvgModel parse(@Nullable Map<String, Object> settings, String pipelineName, int windowSize, ParseFieldMatcher parseFieldMatcher) throws ParseException -->Line_23 $$ checkUnrecognizedParams(settings)[ FD ]
Line_2 $$ public MovAvgModel parse(@Nullable Map<String, Object> settings, String pipelineName, int windowSize, ParseFieldMatcher parseFieldMatcher) throws ParseException -->Line_11 $$ if (settings != null) [ CD ]
Line_2 $$ public MovAvgModel parse(@Nullable Map<String, Object> settings, String pipelineName, int windowSize, ParseFieldMatcher parseFieldMatcher) throws ParseException -->Line_15 $$ seasonalityType = SeasonalityType.parse((String) value, parseFieldMatcher)[ FD ]
Line_2 $$ public MovAvgModel parse(@Nullable Map<String, Object> settings, String pipelineName, int windowSize, ParseFieldMatcher parseFieldMatcher) throws ParseException -->Line_6 $$ int period = parseIntegerParam(settings, "period", 1)[ FD ]
Line_2 $$ public MovAvgModel parse(@Nullable Map<String, Object> settings, String pipelineName, int windowSize, ParseFieldMatcher parseFieldMatcher) throws ParseException -->Line_6 $$ int period = parseIntegerParam(settings, "period", 1)[ CD ]
Line_2 $$ public MovAvgModel parse(@Nullable Map<String, Object> settings, String pipelineName, int windowSize, ParseFieldMatcher parseFieldMatcher) throws ParseException -->Line_4 $$ double beta = parseDoubleParam(settings, "beta", 0.1)[ CD ]
Line_2 $$ public MovAvgModel parse(@Nullable Map<String, Object> settings, String pipelineName, int windowSize, ParseFieldMatcher parseFieldMatcher) throws ParseException -->Line_7 $$ if (windowSize < 2 * period) [ FD ]
Line_2 $$ public MovAvgModel parse(@Nullable Map<String, Object> settings, String pipelineName, int windowSize, ParseFieldMatcher parseFieldMatcher) throws ParseException -->Line_3 $$ double alpha = parseDoubleParam(settings, "alpha", 0.3)[ FD ]
Line_10 $$ SeasonalityType seasonalityType = SeasonalityType.ADDITIVE-->Line_22 $$ boolean pad = parseBoolParam(settings, "pad", seasonalityType.equals(SeasonalityType.MULTIPLICATIVE))[ FD ]
Line_2 $$ public MovAvgModel parse(@Nullable Map<String, Object> settings, String pipelineName, int windowSize, ParseFieldMatcher parseFieldMatcher) throws ParseException -->Line_5 $$ double gamma = parseDoubleParam(settings, "gamma", 0.3)[ CD ]
Line_2 $$ public MovAvgModel parse(@Nullable Map<String, Object> settings, String pipelineName, int windowSize, ParseFieldMatcher parseFieldMatcher) throws ParseException -->Line_10 $$ SeasonalityType seasonalityType = SeasonalityType.ADDITIVE[ CD ]
Line_13 $$ if (value != null) -->Line_14 $$ if (value instanceof String) [ CD ]
Line_2 $$ public MovAvgModel parse(@Nullable Map<String, Object> settings, String pipelineName, int windowSize, ParseFieldMatcher parseFieldMatcher) throws ParseException -->Line_11 $$ if (settings != null) [ FD ]
Line_10 $$ SeasonalityType seasonalityType = SeasonalityType.ADDITIVE-->Line_15 $$ seasonalityType = SeasonalityType.parse((String) value, parseFieldMatcher)[ FD ]
Line_2 $$ public MovAvgModel parse(@Nullable Map<String, Object> settings, String pipelineName, int windowSize, ParseFieldMatcher parseFieldMatcher) throws ParseException -->Line_22 $$ boolean pad = parseBoolParam(settings, "pad", seasonalityType.equals(SeasonalityType.MULTIPLICATIVE))[ CD ]
Line_2 $$ public MovAvgModel parse(@Nullable Map<String, Object> settings, String pipelineName, int windowSize, ParseFieldMatcher parseFieldMatcher) throws ParseException -->Line_7 $$ if (windowSize < 2 * period) [ CD ]
Line_12 $$ Object value = settings.get("type")-->Line_18 $$ throw new ParseException("Parameter [type] must be a String, type `" + value.getClass().getSimpleName() + "` provided instead", 0)[ FD ]
Line_2 $$ public MovAvgModel parse(@Nullable Map<String, Object> settings, String pipelineName, int windowSize, ParseFieldMatcher parseFieldMatcher) throws ParseException -->Line_5 $$ double gamma = parseDoubleParam(settings, "gamma", 0.3)[ FD ]
Line_2 $$ public MovAvgModel parse(@Nullable Map<String, Object> settings, String pipelineName, int windowSize, ParseFieldMatcher parseFieldMatcher) throws ParseException -->Line_23 $$ checkUnrecognizedParams(settings)[ CD ]
Line_11 $$ if (settings != null) -->Line_12 $$ Object value = settings.get("type")[ CD ]
Line_2 $$ public MovAvgModel parse(@Nullable Map<String, Object> settings, String pipelineName, int windowSize, ParseFieldMatcher parseFieldMatcher) throws ParseException -->Line_12 $$ Object value = settings.get("type")[ FD ]
Line_12 $$ Object value = settings.get("type")-->Line_14 $$ if (value instanceof String) [ FD ]
