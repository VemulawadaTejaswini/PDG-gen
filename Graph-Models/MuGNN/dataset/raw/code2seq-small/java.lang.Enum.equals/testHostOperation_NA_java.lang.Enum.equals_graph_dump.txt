Line_15 $$ if (target == Host.MASTER) -->Line_21 $$ Assert.assertTrue(lastMasterBackupDesc.version == newMasterBackupDesc.version)[ CD ]
Line_15 $$ if (target == Host.MASTER) -->Line_22 $$ Assert.assertTrue(lastSlaveBackupDesc.version == newSlaveBackupDesc.version - 1)[ CD ]
Line_2 $$ private void testHostOperation(ModelNode operation, Host controller, Host target) throws Exception -->Line_14 $$ CfgFileDescription newSlaveBackupDesc = getLatestBackup(slaveCurrentCfgDir)[ CD ]
Line_2 $$ private void testHostOperation(ModelNode operation, Host controller, Host target) throws Exception -->Line_12 $$ Assert.assertTrue(lastDomainBackupDesc.version == newDomainBackupDesc.version)[ CD ]
Line_2 $$ private void testHostOperation(ModelNode operation, Host controller, Host target) throws Exception -->Line_9 $$ long lastSlaveFileHash = slaveLastCfgFile.exists() ? FileUtils.checksumCRC32(slaveLastCfgFile) : -1[ CD ]
Line_2 $$ private void testHostOperation(ModelNode operation, Host controller, Host target) throws Exception -->Line_26 $$ Assert.assertTrue(lastDomainBackupDesc.version == newDomainBackupDesc.version)[ CD ]
Line_2 $$ private void testHostOperation(ModelNode operation, Host controller, Host target) throws Exception -->Line_7 $$ long lastDomainFileHash = domainLastCfgFile.exists() ? FileUtils.checksumCRC32(domainLastCfgFile) : -1[ CD ]
Line_15 $$ if (target == Host.MASTER) -->Line_18 $$ Assert.assertTrue(lastMasterFileHash != FileUtils.checksumCRC32(masterLastCfgFile))[ CD ]
Line_2 $$ private void testHostOperation(ModelNode operation, Host controller, Host target) throws Exception -->Line_4 $$ CfgFileDescription lastDomainBackupDesc = getLatestBackup(domainCurrentCfgDir)[ CD ]
Line_2 $$ private void testHostOperation(ModelNode operation, Host controller, Host target) throws Exception -->Line_10 $$ executeOperation(client, operation)[ CD ]
Line_2 $$ private void testHostOperation(ModelNode operation, Host controller, Host target) throws Exception -->Line_15 $$ if (target == Host.MASTER) [ FD ]
Line_15 $$ if (target == Host.MASTER) -->Line_23 $$ Assert.assertTrue(lastMasterFileHash == FileUtils.checksumCRC32(masterLastCfgFile))[ CD ]
Line_2 $$ private void testHostOperation(ModelNode operation, Host controller, Host target) throws Exception -->Line_10 $$ executeOperation(client, operation)[ FD ]
Line_2 $$ private void testHostOperation(ModelNode operation, Host controller, Host target) throws Exception -->Line_27 $$ Assert.assertTrue(lastDomainFileHash == FileUtils.checksumCRC32(domainLastCfgFile))[ CD ]
Line_2 $$ private void testHostOperation(ModelNode operation, Host controller, Host target) throws Exception -->Line_8 $$ long lastMasterFileHash = masterLastCfgFile.exists() ? FileUtils.checksumCRC32(masterLastCfgFile) : -1[ CD ]
Line_2 $$ private void testHostOperation(ModelNode operation, Host controller, Host target) throws Exception -->Line_6 $$ CfgFileDescription lastSlaveBackupDesc = getLatestBackup(slaveCurrentCfgDir)[ CD ]
Line_15 $$ if (target == Host.MASTER) -->Line_24 $$ Assert.assertTrue(lastSlaveFileHash != FileUtils.checksumCRC32(slaveLastCfgFile))[ CD ]
Line_2 $$ private void testHostOperation(ModelNode operation, Host controller, Host target) throws Exception -->Line_3 $$ DomainClient client = controller.equals(Host.MASTER) ? domainMasterLifecycleUtil.getDomainClient() : domainSlaveLifecycleUtil.getDomainClient()[ CD ]
Line_15 $$ if (target == Host.MASTER) -->Line_16 $$ Assert.assertTrue(lastMasterBackupDesc.version == newMasterBackupDesc.version - 1)[ CD ]
Line_2 $$ private void testHostOperation(ModelNode operation, Host controller, Host target) throws Exception -->Line_13 $$ CfgFileDescription newMasterBackupDesc = getLatestBackup(masterCurrentCfgDir)[ CD ]
Line_3 $$ DomainClient client = controller.equals(Host.MASTER) ? domainMasterLifecycleUtil.getDomainClient() : domainSlaveLifecycleUtil.getDomainClient()-->Line_10 $$ executeOperation(client, operation)[ FD ]
Line_2 $$ private void testHostOperation(ModelNode operation, Host controller, Host target) throws Exception -->Line_11 $$ CfgFileDescription newDomainBackupDesc = getLatestBackup(domainCurrentCfgDir)[ CD ]
Line_2 $$ private void testHostOperation(ModelNode operation, Host controller, Host target) throws Exception -->Line_15 $$ if (target == Host.MASTER) [ CD ]
Line_2 $$ private void testHostOperation(ModelNode operation, Host controller, Host target) throws Exception -->Line_3 $$ DomainClient client = controller.equals(Host.MASTER) ? domainMasterLifecycleUtil.getDomainClient() : domainSlaveLifecycleUtil.getDomainClient()[ FD ]
Line_2 $$ private void testHostOperation(ModelNode operation, Host controller, Host target) throws Exception -->Line_5 $$ CfgFileDescription lastMasterBackupDesc = getLatestBackup(masterCurrentCfgDir)[ CD ]
Line_15 $$ if (target == Host.MASTER) -->Line_19 $$ Assert.assertTrue(lastSlaveFileHash == FileUtils.checksumCRC32(slaveLastCfgFile))[ CD ]
Line_15 $$ if (target == Host.MASTER) -->Line_17 $$ Assert.assertTrue(lastSlaveBackupDesc.version == newSlaveBackupDesc.version)[ CD ]
