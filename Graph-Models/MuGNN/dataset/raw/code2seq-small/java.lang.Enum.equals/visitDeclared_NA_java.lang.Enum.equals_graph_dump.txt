Line_2 $$ public Boolean visitDeclared(DeclaredType declaredType, Element element) -->Line_22 $$ return Boolean.FALSE[ CD ]
Line_2 $$ public Boolean visitDeclared(DeclaredType declaredType, Element element) -->Line_3 $$ if (ElementKind.ENUM.equals(element.getKind())) [ CD ]
Line_15 $$ for (TypeMirror mirror : typeElement.getInterfaces()) -->Line_16 $$ TypeElement interfaceElement = (TypeElement) context.getTypeUtils().asElement(mirror)[ FD ]
Line_6 $$ if (ElementKind.CLASS.equals(element.getKind()) || ElementKind.INTERFACE.equals(element.getKind())) -->Line_9 $$ if (Constants.BASIC_TYPES.contains(typeName)) [ CD ]
Line_3 $$ if (ElementKind.ENUM.equals(element.getKind())) -->Line_4 $$ return Boolean.TRUE[ CD ]
Line_2 $$ public Boolean visitDeclared(DeclaredType declaredType, Element element) -->Line_12 $$ if (TypeUtils.containsAnnotation(element, Constants.EMBEDDABLE)) [ FD ]
Line_2 $$ public Boolean visitDeclared(DeclaredType declaredType, Element element) -->Line_3 $$ if (ElementKind.ENUM.equals(element.getKind())) [ FD ]
Line_7 $$ TypeElement typeElement = ((TypeElement) element)-->Line_15 $$ for (TypeMirror mirror : typeElement.getInterfaces()) [ FD ]
Line_6 $$ if (ElementKind.CLASS.equals(element.getKind()) || ElementKind.INTERFACE.equals(element.getKind())) -->Line_7 $$ TypeElement typeElement = ((TypeElement) element)[ CD ]
Line_2 $$ public Boolean visitDeclared(DeclaredType declaredType, Element element) -->Line_6 $$ if (ElementKind.CLASS.equals(element.getKind()) || ElementKind.INTERFACE.equals(element.getKind())) [ CD ]
Line_16 $$ TypeElement interfaceElement = (TypeElement) context.getTypeUtils().asElement(mirror)-->Line_17 $$ if ("java.io.Serializable".equals(interfaceElement.getQualifiedName().toString())) [ FD ]
Line_12 $$ if (TypeUtils.containsAnnotation(element, Constants.EMBEDDABLE)) -->Line_13 $$ return Boolean.TRUE[ CD ]
Line_8 $$ String typeName = typeElement.getQualifiedName().toString()-->Line_9 $$ if (Constants.BASIC_TYPES.contains(typeName)) [ FD ]
Line_9 $$ if (Constants.BASIC_TYPES.contains(typeName)) -->Line_10 $$ return Boolean.TRUE[ CD ]
Line_7 $$ TypeElement typeElement = ((TypeElement) element)-->Line_8 $$ String typeName = typeElement.getQualifiedName().toString()[ FD ]
Line_17 $$ if ("java.io.Serializable".equals(interfaceElement.getQualifiedName().toString())) -->Line_18 $$ return Boolean.TRUE[ CD ]
Line_6 $$ if (ElementKind.CLASS.equals(element.getKind()) || ElementKind.INTERFACE.equals(element.getKind())) -->Line_12 $$ if (TypeUtils.containsAnnotation(element, Constants.EMBEDDABLE)) [ CD ]
Line_6 $$ if (ElementKind.CLASS.equals(element.getKind()) || ElementKind.INTERFACE.equals(element.getKind())) -->Line_8 $$ String typeName = typeElement.getQualifiedName().toString()[ CD ]
Line_2 $$ public Boolean visitDeclared(DeclaredType declaredType, Element element) -->Line_6 $$ if (ElementKind.CLASS.equals(element.getKind()) || ElementKind.INTERFACE.equals(element.getKind())) [ FD ]
