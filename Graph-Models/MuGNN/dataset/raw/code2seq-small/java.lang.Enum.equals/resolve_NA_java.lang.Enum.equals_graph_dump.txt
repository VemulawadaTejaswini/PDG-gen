Line_3 $$ PyDocStringOwner owner = PsiTreeUtil.getParentOfType(getElement(), PyDocStringOwner.class)-->Line_4 $$ if (owner instanceof PyFunction) [ FD ]
Line_7 $$ if (owner instanceof PyClass) -->Line_8 $$ final PyFunction init = ((PyClass) owner).findMethodByName(PyNames.INIT, false, null)[ CD ]
Line_9 $$ if (init != null) -->Line_10 $$ PsiElement element = resolveParameter(init)[ CD ]
Line_11 $$ if (element == null && (myType.equals(ReferenceType.CLASS_VARIABLE) || myType.equals(ReferenceType.PARAMETER_TYPE)))-->Line_12 $$ element = resolveClassVariable((PyClass) owner)[ CD ]
Line_2 $$ public PsiElement resolve() -->Line_7 $$ if (owner instanceof PyClass) [ CD ]
Line_2 $$ public PsiElement resolve() -->Line_3 $$ PyDocStringOwner owner = PsiTreeUtil.getParentOfType(getElement(), PyDocStringOwner.class)[ CD ]
Line_19 $$ if (myType.equals(ReferenceType.INSTANCE_VARIABLE) || myType.equals(ReferenceType.PARAMETER_TYPE))-->Line_20 $$ return resolveInstanceVariable((PyClass) owner)[ CD ]
Line_23 $$ if (owner instanceof PyFile && myType == ReferenceType.GLOBAL_VARIABLE) -->Line_24 $$ return resolveGlobalVariable(((PyFile) owner))[ CD ]
Line_17 $$ if (myType.equals(ReferenceType.CLASS_VARIABLE) || myType.equals(ReferenceType.PARAMETER_TYPE))-->Line_18 $$ return resolveClassVariable((PyClass) owner)[ CD ]
Line_10 $$ PsiElement element = resolveParameter(init)-->Line_12 $$ element = resolveClassVariable((PyClass) owner)[ FD ]
Line_2 $$ public PsiElement resolve() -->Line_26 $$ return null[ CD ]
Line_10 $$ PsiElement element = resolveParameter(init)-->Line_14 $$ element = resolveInstanceVariable((PyClass) owner)[ FD ]
Line_2 $$ public PsiElement resolve() -->Line_23 $$ if (owner instanceof PyFile && myType == ReferenceType.GLOBAL_VARIABLE) [ CD ]
Line_9 $$ if (init != null) -->Line_17 $$ if (myType.equals(ReferenceType.CLASS_VARIABLE) || myType.equals(ReferenceType.PARAMETER_TYPE))[ CD ]
Line_13 $$ if (element == null && (myType.equals(ReferenceType.INSTANCE_VARIABLE) || myType.equals(ReferenceType.PARAMETER_TYPE)))-->Line_14 $$ element = resolveInstanceVariable((PyClass) owner)[ CD ]
Line_9 $$ if (init != null) -->Line_13 $$ if (element == null && (myType.equals(ReferenceType.INSTANCE_VARIABLE) || myType.equals(ReferenceType.PARAMETER_TYPE)))[ CD ]
Line_7 $$ if (owner instanceof PyClass) -->Line_9 $$ if (init != null) [ CD ]
Line_9 $$ if (init != null) -->Line_11 $$ if (element == null && (myType.equals(ReferenceType.CLASS_VARIABLE) || myType.equals(ReferenceType.PARAMETER_TYPE)))[ CD ]
Line_9 $$ if (init != null) -->Line_19 $$ if (myType.equals(ReferenceType.INSTANCE_VARIABLE) || myType.equals(ReferenceType.PARAMETER_TYPE))[ CD ]
Line_8 $$ final PyFunction init = ((PyClass) owner).findMethodByName(PyNames.INIT, false, null)-->Line_10 $$ PsiElement element = resolveParameter(init)[ FD ]
Line_2 $$ public PsiElement resolve() -->Line_4 $$ if (owner instanceof PyFunction) [ CD ]
Line_9 $$ if (init != null) -->Line_15 $$ return element[ CD ]
Line_3 $$ PyDocStringOwner owner = PsiTreeUtil.getParentOfType(getElement(), PyDocStringOwner.class)-->Line_7 $$ if (owner instanceof PyClass) [ FD ]
Line_8 $$ final PyFunction init = ((PyClass) owner).findMethodByName(PyNames.INIT, false, null)-->Line_9 $$ if (init != null) [ FD ]
Line_4 $$ if (owner instanceof PyFunction) -->Line_5 $$ return resolveParameter((PyFunction) owner)[ CD ]
Line_12 $$ element = resolveClassVariable((PyClass) owner)-->Line_14 $$ element = resolveInstanceVariable((PyClass) owner)[ FD ]
