Line_21 $$ label = new JLabel(SvnBundle.message(myMode.equals(Mode.SSH_PASSPHRASE) ? "label.ssh.key.file" : "label.auth.user.name"))-->Line_47 $$ label.setLabelFor(myPasswordText)[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_55 $$ gb.gridy += 1[ CD ]
Line_15 $$ JLabel label = new JLabel(SvnBundle.message("label.auth.authentication.realm", myRealm))-->Line_21 $$ label = new JLabel(SvnBundle.message(myMode.equals(Mode.SSH_PASSPHRASE) ? "label.ssh.key.file" : "label.auth.user.name"))[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_28 $$ label.setLabelFor(myUserNameText)[ CD ]
Line_56 $$ if (!myAllowSave) -->Line_60 $$ gb.gridy += 1[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_8 $$ gb.weighty = 0[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_46 $$ panel.add(myPasswordText, gb)[ CD ]
Line_15 $$ JLabel label = new JLabel(SvnBundle.message("label.auth.authentication.realm", myRealm))-->Line_22 $$ panel.add(label, gb)[ FD ]
Line_3 $$ JPanel panel = new JPanel()-->Line_16 $$ panel.add(label, gb)[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_10 $$ gb.gridheight = 1[ CD ]
Line_15 $$ JLabel label = new JLabel(SvnBundle.message("label.auth.authentication.realm", myRealm))-->Line_28 $$ label.setLabelFor(myUserNameText)[ FD ]
Line_57 $$ final JLabel cannotSaveLabel = new JLabel(SvnBundle.message("svn.cannot.save.credentials.store-auth-creds"))-->Line_59 $$ panel.add(cannotSaveLabel, gb)[ FD ]
Line_15 $$ JLabel label = new JLabel(SvnBundle.message("label.auth.authentication.realm", myRealm))-->Line_16 $$ panel.add(label, gb)[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_21 $$ label = new JLabel(SvnBundle.message(myMode.equals(Mode.SSH_PASSPHRASE) ? "label.ssh.key.file" : "label.auth.user.name"))[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_15 $$ JLabel label = new JLabel(SvnBundle.message("label.auth.authentication.realm", myRealm))[ CD ]
Line_3 $$ JPanel panel = new JPanel()-->Line_4 $$ panel.setLayout(new GridBagLayout())[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_19 $$ gb.weightx = 0[ CD ]
Line_40 $$ label = new JLabel(SvnBundle.message(myMode.equals(Mode.SSH_PASSPHRASE) ? "label.ssh.passphrase" : "label.auth.password"))-->Line_41 $$ panel.add(label, gb)[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_38 $$ gb.fill = GridBagConstraints.NONE[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_52 $$ gb.fill = GridBagConstraints.HORIZONTAL[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_65 $$ return panel[ CD ]
Line_3 $$ JPanel panel = new JPanel()-->Line_54 $$ panel.add(myAllowSaveCheckBox, gb)[ FD ]
Line_5 $$ GridBagConstraints gb = new GridBagConstraints()-->Line_22 $$ panel.add(label, gb)[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_39 $$ gb.gridwidth = 1[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_62 $$ panel.add(new JSeparator(), gb)[ CD ]
Line_5 $$ GridBagConstraints gb = new GridBagConstraints()-->Line_27 $$ panel.add(myUserNameText, gb)[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_50 $$ gb.gridwidth = 2[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_16 $$ panel.add(label, gb)[ CD ]
Line_40 $$ label = new JLabel(SvnBundle.message(myMode.equals(Mode.SSH_PASSPHRASE) ? "label.ssh.passphrase" : "label.auth.password"))-->Line_47 $$ label.setLabelFor(myPasswordText)[ FD ]
Line_56 $$ if (!myAllowSave) -->Line_57 $$ final JLabel cannotSaveLabel = new JLabel(SvnBundle.message("svn.cannot.save.credentials.store-auth-creds"))[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_64 $$ myAllowSaveCheckBox.setEnabled(myAllowSave)[ CD ]
Line_5 $$ GridBagConstraints gb = new GridBagConstraints()-->Line_16 $$ panel.add(label, gb)[ FD ]
Line_56 $$ if (!myAllowSave) -->Line_59 $$ panel.add(cannotSaveLabel, gb)[ CD ]
Line_57 $$ final JLabel cannotSaveLabel = new JLabel(SvnBundle.message("svn.cannot.save.credentials.store-auth-creds"))-->Line_58 $$ cannotSaveLabel.setForeground(UIUtil.getInactiveTextColor())[ FD ]
Line_5 $$ GridBagConstraints gb = new GridBagConstraints()-->Line_62 $$ panel.add(new JSeparator(), gb)[ FD ]
Line_56 $$ if (!myAllowSave) -->Line_58 $$ cannotSaveLabel.setForeground(UIUtil.getInactiveTextColor())[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_9 $$ gb.gridwidth = 2[ CD ]
Line_5 $$ GridBagConstraints gb = new GridBagConstraints()-->Line_46 $$ panel.add(myPasswordText, gb)[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_47 $$ label.setLabelFor(myPasswordText)[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_42 $$ gb.gridx = 1[ CD ]
Line_3 $$ JPanel panel = new JPanel()-->Line_46 $$ panel.add(myPasswordText, gb)[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_32 $$ myUserNameText.selectAll()[ CD ]
Line_3 $$ JPanel panel = new JPanel()-->Line_27 $$ panel.add(myUserNameText, gb)[ FD ]
Line_3 $$ JPanel panel = new JPanel()-->Line_41 $$ panel.add(label, gb)[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_22 $$ panel.add(label, gb)[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_3 $$ JPanel panel = new JPanel()[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_54 $$ panel.add(myAllowSaveCheckBox, gb)[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_4 $$ panel.setLayout(new GridBagLayout())[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_33 $$ myUserNameText.getDocument().addDocumentListener(this)[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_13 $$ gb.anchor = GridBagConstraints.WEST[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_25 $$ gb.fill = GridBagConstraints.HORIZONTAL[ CD ]
Line_5 $$ GridBagConstraints gb = new GridBagConstraints()-->Line_41 $$ panel.add(label, gb)[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_40 $$ label = new JLabel(SvnBundle.message(myMode.equals(Mode.SSH_PASSPHRASE) ? "label.ssh.passphrase" : "label.auth.password"))[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_43 $$ gb.weightx = 1[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_27 $$ panel.add(myUserNameText, gb)[ CD ]
Line_5 $$ GridBagConstraints gb = new GridBagConstraints()-->Line_59 $$ panel.add(cannotSaveLabel, gb)[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_48 $$ gb.gridy += 1[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_24 $$ gb.weightx = 1[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_14 $$ gb.fill = GridBagConstraints.HORIZONTAL[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_17 $$ gb.gridy += 1[ CD ]
Line_3 $$ JPanel panel = new JPanel()-->Line_22 $$ panel.add(label, gb)[ FD ]
Line_15 $$ JLabel label = new JLabel(SvnBundle.message("label.auth.authentication.realm", myRealm))-->Line_47 $$ label.setLabelFor(myPasswordText)[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_6 $$ gb.insets = new Insets(2, 2, 2, 2)[ CD ]
Line_5 $$ GridBagConstraints gb = new GridBagConstraints()-->Line_54 $$ panel.add(myAllowSaveCheckBox, gb)[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_36 $$ gb.weightx = 0[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_5 $$ GridBagConstraints gb = new GridBagConstraints()[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_44 $$ gb.fill = GridBagConstraints.HORIZONTAL[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_37 $$ gb.gridx = 0[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_51 $$ gb.weightx = 1[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_34 $$ myUserNameText.setEnabled(myMode.equals(Mode.DEFAULT))[ CD ]
Line_15 $$ JLabel label = new JLabel(SvnBundle.message("label.auth.authentication.realm", myRealm))-->Line_41 $$ panel.add(label, gb)[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_63 $$ myAllowSaveCheckBox.setSelected(false)[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_23 $$ gb.gridx = 1[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_35 $$ gb.gridy += 1[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_41 $$ panel.add(label, gb)[ CD ]
Line_21 $$ label = new JLabel(SvnBundle.message(myMode.equals(Mode.SSH_PASSPHRASE) ? "label.ssh.key.file" : "label.auth.user.name"))-->Line_41 $$ panel.add(label, gb)[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_29 $$ if (myUserName != null) [ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_11 $$ gb.gridx = 0[ CD ]
Line_3 $$ JPanel panel = new JPanel()-->Line_59 $$ panel.add(cannotSaveLabel, gb)[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_56 $$ if (!myAllowSave) [ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_12 $$ gb.gridy = 0[ CD ]
Line_15 $$ JLabel label = new JLabel(SvnBundle.message("label.auth.authentication.realm", myRealm))-->Line_40 $$ label = new JLabel(SvnBundle.message(myMode.equals(Mode.SSH_PASSPHRASE) ? "label.ssh.passphrase" : "label.auth.password"))[ FD ]
Line_21 $$ label = new JLabel(SvnBundle.message(myMode.equals(Mode.SSH_PASSPHRASE) ? "label.ssh.key.file" : "label.auth.user.name"))-->Line_22 $$ panel.add(label, gb)[ FD ]
Line_21 $$ label = new JLabel(SvnBundle.message(myMode.equals(Mode.SSH_PASSPHRASE) ? "label.ssh.key.file" : "label.auth.user.name"))-->Line_40 $$ label = new JLabel(SvnBundle.message(myMode.equals(Mode.SSH_PASSPHRASE) ? "label.ssh.passphrase" : "label.auth.password"))[ FD ]
Line_29 $$ if (myUserName != null) -->Line_30 $$ myUserNameText.setText(myUserName)[ CD ]
Line_3 $$ JPanel panel = new JPanel()-->Line_62 $$ panel.add(new JSeparator(), gb)[ FD ]
Line_21 $$ label = new JLabel(SvnBundle.message(myMode.equals(Mode.SSH_PASSPHRASE) ? "label.ssh.key.file" : "label.auth.user.name"))-->Line_28 $$ label.setLabelFor(myUserNameText)[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_7 $$ gb.weightx = 1[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_49 $$ gb.gridx = 0[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_18 $$ gb.gridwidth = 1[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_20 $$ gb.fill = GridBagConstraints.NONE[ CD ]
