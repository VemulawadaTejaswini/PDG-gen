Line_2 $$ private boolean modelGenerationNeedsToBeDeferred(Collection<MetaEntity> entities, MetaEntity containedEntity) -->Line_3 $$ ContainsAttributeTypeVisitor visitor = new ContainsAttributeTypeVisitor(containedEntity.getTypeElement(), context)[ FD ]
Line_14 $$ if (contains) -->Line_15 $$ return true[ CD ]
Line_3 $$ ContainsAttributeTypeVisitor visitor = new ContainsAttributeTypeVisitor(containedEntity.getTypeElement(), context)-->Line_23 $$ boolean contains = mirror.accept(visitor, subElement)[ FD ]
Line_2 $$ private boolean modelGenerationNeedsToBeDeferred(Collection<MetaEntity> entities, MetaEntity containedEntity) -->Line_3 $$ ContainsAttributeTypeVisitor visitor = new ContainsAttributeTypeVisitor(containedEntity.getTypeElement(), context)[ CD ]
Line_8 $$ for (Element subElement : ElementFilter.fieldsIn(entity.getTypeElement().getEnclosedElements())) -->Line_23 $$ boolean contains = mirror.accept(visitor, subElement)[ FD ]
Line_8 $$ for (Element subElement : ElementFilter.fieldsIn(entity.getTypeElement().getEnclosedElements())) -->Line_13 $$ boolean contains = mirror.accept(visitor, subElement)[ FD ]
Line_4 $$ for (MetaEntity entity : entities) -->Line_8 $$ for (Element subElement : ElementFilter.fieldsIn(entity.getTypeElement().getEnclosedElements())) [ FD ]
Line_9 $$ TypeMirror mirror = subElement.asType()-->Line_20 $$ if (!TypeKind.DECLARED.equals(mirror.getKind())) [ FD ]
Line_3 $$ ContainsAttributeTypeVisitor visitor = new ContainsAttributeTypeVisitor(containedEntity.getTypeElement(), context)-->Line_13 $$ boolean contains = mirror.accept(visitor, subElement)[ FD ]
Line_4 $$ for (MetaEntity entity : entities) -->Line_18 $$ for (Element subElement : ElementFilter.methodsIn(entity.getTypeElement().getEnclosedElements())) [ FD ]
Line_24 $$ if (contains) -->Line_25 $$ return true[ CD ]
Line_2 $$ private boolean modelGenerationNeedsToBeDeferred(Collection<MetaEntity> entities, MetaEntity containedEntity) -->Line_5 $$ if (entity.equals(containedEntity)) [ FD ]
Line_9 $$ TypeMirror mirror = subElement.asType()-->Line_13 $$ boolean contains = mirror.accept(visitor, subElement)[ FD ]
Line_9 $$ TypeMirror mirror = subElement.asType()-->Line_23 $$ boolean contains = mirror.accept(visitor, subElement)[ FD ]
Line_2 $$ private boolean modelGenerationNeedsToBeDeferred(Collection<MetaEntity> entities, MetaEntity containedEntity) -->Line_29 $$ return false[ CD ]
Line_8 $$ for (Element subElement : ElementFilter.fieldsIn(entity.getTypeElement().getEnclosedElements())) -->Line_19 $$ TypeMirror mirror = subElement.asType()[ FD ]
Line_4 $$ for (MetaEntity entity : entities) -->Line_5 $$ if (entity.equals(containedEntity)) [ FD ]
Line_9 $$ TypeMirror mirror = subElement.asType()-->Line_10 $$ if (!TypeKind.DECLARED.equals(mirror.getKind())) [ FD ]
Line_8 $$ for (Element subElement : ElementFilter.fieldsIn(entity.getTypeElement().getEnclosedElements())) -->Line_9 $$ TypeMirror mirror = subElement.asType()[ FD ]
