Line_3 $$ DomainClient client = domainMasterLifecycleUtil.getDomainClient()-->Line_10 $$ executeAndRollbackOperation(client, op)[ FD ]
Line_8 $$ ModelNode op = host.equals(Host.MASTER) ? ModelUtil.createOpNode("host=master/system-property=model-persistence-test", "add") : ModelUtil.createOpNode("host=slave/system-property=model-persistence-test", "add")-->Line_10 $$ executeAndRollbackOperation(client, op)[ FD ]
Line_8 $$ ModelNode op = host.equals(Host.MASTER) ? ModelUtil.createOpNode("host=master/system-property=model-persistence-test", "add") : ModelUtil.createOpNode("host=slave/system-property=model-persistence-test", "add")-->Line_9 $$ op.get(VALUE).set("test")[ FD ]
Line_2 $$ public void testHostOperationRollback() throws Exception -->Line_3 $$ DomainClient client = domainMasterLifecycleUtil.getDomainClient()[ CD ]
Line_4 $$ for (Host host : Host.values()) -->Line_8 $$ ModelNode op = host.equals(Host.MASTER) ? ModelUtil.createOpNode("host=master/system-property=model-persistence-test", "add") : ModelUtil.createOpNode("host=slave/system-property=model-persistence-test", "add")[ FD ]
