Line_5 $$ java.nio.channels.FileLock stateRegionLock = lockStateRegion(lockMode, waitUntil)-->Line_30 $$ stateRegionLock.release()[ FD ]
Line_12 $$ if (!stateRegionLock.isShared()) -->Line_13 $$ lockState = lockFileAccess.ensureLockState()[ CD ]
Line_5 $$ java.nio.channels.FileLock stateRegionLock = lockStateRegion(lockMode, waitUntil)-->Line_6 $$ if (stateRegionLock == null) [ FD ]
Line_2 $$ private LockState lock(FileLockManager.LockMode lockMode) throws Throwable -->Line_5 $$ java.nio.channels.FileLock stateRegionLock = lockStateRegion(lockMode, waitUntil)[ CD ]
Line_11 $$ LockState lockState-->Line_13 $$ lockState = lockFileAccess.ensureLockState()[ FD ]
Line_14 $$ java.nio.channels.FileLock informationRegionLock = lockInformationRegion(LockMode.Exclusive, System.currentTimeMillis() + shortTimeoutMs)-->Line_15 $$ if (informationRegionLock == null) [ FD ]
Line_2 $$ private LockState lock(FileLockManager.LockMode lockMode) throws Throwable -->Line_4 $$ long waitUntil = System.currentTimeMillis() + lockTimeoutMs[ CD ]
Line_5 $$ java.nio.channels.FileLock stateRegionLock = lockStateRegion(lockMode, waitUntil)-->Line_12 $$ if (!stateRegionLock.isShared()) [ FD ]
Line_11 $$ LockState lockState-->Line_24 $$ lockState = lockFileAccess.readLockState()[ FD ]
Line_2 $$ private LockState lock(FileLockManager.LockMode lockMode) throws Throwable -->Line_3 $$ LOGGER.debug("Waiting to acquire [ FD ]
Line_12 $$ if (!stateRegionLock.isShared()) -->Line_15 $$ if (informationRegionLock == null) [ CD ]
Line_13 $$ lockState = lockFileAccess.ensureLockState()-->Line_24 $$ lockState = lockFileAccess.readLockState()[ FD ]
Line_2 $$ private LockState lock(FileLockManager.LockMode lockMode) throws Throwable -->Line_3 $$ LOGGER.debug("Waiting to acquire [ CD ]
Line_12 $$ if (!stateRegionLock.isShared()) -->Line_14 $$ java.nio.channels.FileLock informationRegionLock = lockInformationRegion(LockMode.Exclusive, System.currentTimeMillis() + shortTimeoutMs)[ CD ]
Line_14 $$ java.nio.channels.FileLock informationRegionLock = lockInformationRegion(LockMode.Exclusive, System.currentTimeMillis() + shortTimeoutMs)-->Line_21 $$ informationRegionLock.release()[ FD ]
Line_4 $$ long waitUntil = System.currentTimeMillis() + lockTimeoutMs-->Line_5 $$ java.nio.channels.FileLock stateRegionLock = lockStateRegion(lockMode, waitUntil)[ FD ]
Line_12 $$ if (!stateRegionLock.isShared()) -->Line_24 $$ lockState = lockFileAccess.readLockState()[ CD ]
Line_6 $$ if (stateRegionLock == null) -->Line_7 $$ LockInfo lockInfo = readInformationRegion(System.currentTimeMillis() + shortTimeoutMs)[ CD ]
Line_2 $$ private LockState lock(FileLockManager.LockMode lockMode) throws Throwable -->Line_6 $$ if (stateRegionLock == null) [ CD ]
Line_2 $$ private LockState lock(FileLockManager.LockMode lockMode) throws Throwable -->Line_5 $$ java.nio.channels.FileLock stateRegionLock = lockStateRegion(lockMode, waitUntil)[ FD ]
