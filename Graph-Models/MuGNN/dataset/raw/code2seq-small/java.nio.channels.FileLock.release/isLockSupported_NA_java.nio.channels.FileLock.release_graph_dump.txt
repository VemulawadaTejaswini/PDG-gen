Line_16 $$ if (firstLock != null && firstLock != lock) -->Line_18 $$ firstLock.channel().close()[ CD ]
Line_12 $$ secondLock = tryLock()-->Line_22 $$ secondLock.channel().close()[ FD ]
Line_16 $$ if (firstLock != null && firstLock != lock) -->Line_17 $$ firstLock.release()[ CD ]
Line_3 $$ FileLock firstLock = null-->Line_18 $$ firstLock.channel().close()[ FD ]
Line_2 $$ public boolean isLockSupported() throws IOException -->Line_4 $$ FileLock secondLock = null[ CD ]
Line_4 $$ FileLock secondLock = null-->Line_12 $$ secondLock = tryLock()[ FD ]
Line_4 $$ FileLock secondLock = null-->Line_22 $$ secondLock.channel().close()[ FD ]
Line_6 $$ firstLock = lock-->Line_9 $$ if (firstLock == null)[ FD ]
Line_6 $$ firstLock = lock-->Line_18 $$ firstLock.channel().close()[ FD ]
Line_7 $$ if (firstLock == null) -->Line_8 $$ firstLock = tryLock()[ CD ]
Line_4 $$ FileLock secondLock = null-->Line_21 $$ secondLock.release()[ FD ]
Line_13 $$ if (secondLock == null)-->Line_14 $$ return true[ CD ]
Line_9 $$ if (firstLock == null)-->Line_10 $$ return true[ CD ]
Line_6 $$ firstLock = lock-->Line_17 $$ firstLock.release()[ FD ]
Line_8 $$ firstLock = tryLock()-->Line_18 $$ firstLock.channel().close()[ FD ]
Line_6 $$ firstLock = lock-->Line_8 $$ firstLock = tryLock()[ FD ]
Line_3 $$ FileLock firstLock = null-->Line_8 $$ firstLock = tryLock()[ FD ]
Line_3 $$ FileLock firstLock = null-->Line_7 $$ if (firstLock == null) [ FD ]
Line_12 $$ secondLock = tryLock()-->Line_20 $$ if (secondLock != null) [ FD ]
Line_3 $$ FileLock firstLock = null-->Line_9 $$ if (firstLock == null)[ FD ]
Line_20 $$ if (secondLock != null) -->Line_21 $$ secondLock.release()[ CD ]
Line_7 $$ if (firstLock == null) -->Line_9 $$ if (firstLock == null)[ CD ]
Line_8 $$ firstLock = tryLock()-->Line_17 $$ firstLock.release()[ FD ]
Line_12 $$ secondLock = tryLock()-->Line_21 $$ secondLock.release()[ FD ]
Line_6 $$ firstLock = lock-->Line_7 $$ if (firstLock == null) [ FD ]
Line_8 $$ firstLock = tryLock()-->Line_9 $$ if (firstLock == null)[ FD ]
Line_20 $$ if (secondLock != null) -->Line_22 $$ secondLock.channel().close()[ CD ]
Line_2 $$ public boolean isLockSupported() throws IOException -->Line_25 $$ return false[ CD ]
Line_3 $$ FileLock firstLock = null-->Line_17 $$ firstLock.release()[ FD ]
Line_2 $$ public boolean isLockSupported() throws IOException -->Line_3 $$ FileLock firstLock = null[ CD ]
Line_4 $$ FileLock secondLock = null-->Line_13 $$ if (secondLock == null)[ FD ]
Line_12 $$ secondLock = tryLock()-->Line_13 $$ if (secondLock == null)[ FD ]
Line_4 $$ FileLock secondLock = null-->Line_20 $$ if (secondLock != null) [ FD ]
Line_3 $$ FileLock firstLock = null-->Line_6 $$ firstLock = lock[ FD ]
