Line_2 $$ public synchronized String getNotificationEvents(long companyId, long userId, JSONObject pollerResponseHeaderJSONObject, long timeout) throws ChannelException -->Line_11 $$ jsonArray.put(pollerResponseHeaderJSONObject)[ CD ]
Line_2 $$ public synchronized String getNotificationEvents(long companyId, long userId, JSONObject pollerResponseHeaderJSONObject, long timeout) throws ChannelException -->Line_9 $$ List<NotificationEvent> notificationEvents = ChannelHubManagerUtil.fetchNotificationEvents(companyId, userId, true)[ CD ]
Line_2 $$ public synchronized String getNotificationEvents(long companyId, long userId, JSONObject pollerResponseHeaderJSONObject, long timeout) throws ChannelException -->Line_11 $$ jsonArray.put(pollerResponseHeaderJSONObject)[ FD ]
Line_2 $$ public synchronized String getNotificationEvents(long companyId, long userId, JSONObject pollerResponseHeaderJSONObject, long timeout) throws ChannelException -->Line_15 $$ return jsonArray.toString()[ CD ]
Line_10 $$ JSONArray jsonArray = JSONFactoryUtil.createJSONArray()-->Line_15 $$ return jsonArray.toString()[ FD ]
Line_12 $$ for (NotificationEvent notificationEvent : notificationEvents) -->Line_13 $$ jsonArray.put(notificationEvent.toJSONObject())[ FD ]
Line_2 $$ public synchronized String getNotificationEvents(long companyId, long userId, JSONObject pollerResponseHeaderJSONObject, long timeout) throws ChannelException -->Line_9 $$ List<NotificationEvent> notificationEvents = ChannelHubManagerUtil.fetchNotificationEvents(companyId, userId, true)[ FD ]
Line_2 $$ public synchronized String getNotificationEvents(long companyId, long userId, JSONObject pollerResponseHeaderJSONObject, long timeout) throws ChannelException -->Line_10 $$ JSONArray jsonArray = JSONFactoryUtil.createJSONArray()[ CD ]
Line_10 $$ JSONArray jsonArray = JSONFactoryUtil.createJSONArray()-->Line_13 $$ jsonArray.put(notificationEvent.toJSONObject())[ FD ]
Line_10 $$ JSONArray jsonArray = JSONFactoryUtil.createJSONArray()-->Line_11 $$ jsonArray.put(pollerResponseHeaderJSONObject)[ FD ]
Line_4 $$ if (!_complete) -->Line_5 $$ this.wait(timeout)[ CD ]
Line_2 $$ public synchronized String getNotificationEvents(long companyId, long userId, JSONObject pollerResponseHeaderJSONObject, long timeout) throws ChannelException -->Line_5 $$ this.wait(timeout)[ FD ]
