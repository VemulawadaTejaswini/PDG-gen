Line_13 $$ while ((myUsed.size() + myInactive.size()) >= myMaxConcurrent && !myDisposed) -->Line_20 $$ if (indicator != null && indicator.isCanceled()) [ CD ]
Line_13 $$ while ((myUsed.size() + myInactive.size()) >= myMaxConcurrent && !myDisposed) -->Line_19 $$ ProgressIndicator indicator = ProgressManager.getInstance().getProgressIndicator()[ CD ]
Line_4 $$ if (myDisposed)-->Line_5 $$ return null[ CD ]
Line_6 $$ if (!myInactive.isEmpty() && mayReuse) -->Line_7 $$ return fromInactive(url)[ CD ]
Line_37 $$ final SVNRepository fun = myCreator.convert(url)-->Line_38 $$ myUsed.add(fun)[ FD ]
Line_19 $$ ProgressIndicator indicator = ProgressManager.getInstance().getProgressIndicator()-->Line_20 $$ if (indicator != null && indicator.isCanceled()) [ FD ]
Line_33 $$ if (!myInactive.isEmpty() && mayReuse) -->Line_34 $$ return fromInactive(url)[ CD ]
Line_12 $$ if ((myUsed.size() + myInactive.size()) >= myMaxConcurrent) -->Line_13 $$ while ((myUsed.size() + myInactive.size()) >= myMaxConcurrent && !myDisposed) [ CD ]
