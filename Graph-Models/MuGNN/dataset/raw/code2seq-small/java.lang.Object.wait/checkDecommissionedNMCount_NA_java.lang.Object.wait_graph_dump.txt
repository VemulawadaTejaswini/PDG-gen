Line_3 $$ int waitCount = 0-->Line_4 $$ while (ClusterMetrics.getMetrics().getNumDecommisionedNMs() != count && waitCount++ < 20) [ FD ]
Line_2 $$ private void checkDecommissionedNMCount(MockRM rm, int count) throws InterruptedException -->Line_9 $$ Assert.assertEquals(count, ClusterMetrics.getMetrics().getNumDecommisionedNMs())[ FD ]
Line_2 $$ private void checkDecommissionedNMCount(MockRM rm, int count) throws InterruptedException -->Line_10 $$ Assert.assertEquals("The decommisioned metrics are not updated", count, ClusterMetrics.getMetrics().getNumDecommisionedNMs())[ CD ]
Line_2 $$ private void checkDecommissionedNMCount(MockRM rm, int count) throws InterruptedException -->Line_10 $$ Assert.assertEquals("The decommisioned metrics are not updated", count, ClusterMetrics.getMetrics().getNumDecommisionedNMs())[ FD ]
Line_2 $$ private void checkDecommissionedNMCount(MockRM rm, int count) throws InterruptedException -->Line_4 $$ while (ClusterMetrics.getMetrics().getNumDecommisionedNMs() != count && waitCount++ < 20) [ CD ]
Line_2 $$ private void checkDecommissionedNMCount(MockRM rm, int count) throws InterruptedException -->Line_9 $$ Assert.assertEquals(count, ClusterMetrics.getMetrics().getNumDecommisionedNMs())[ CD ]
Line_2 $$ private void checkDecommissionedNMCount(MockRM rm, int count) throws InterruptedException -->Line_3 $$ int waitCount = 0[ CD ]
