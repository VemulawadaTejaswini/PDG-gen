Line_14 $$ if (response.getNodeAction() == NodeAction.SHUTDOWN) -->Line_18 $$ dispatcher.getEventHandler().handle(new NodeManagerEvent(NodeManagerEventType.SHUTDOWN))[ CD ]
Line_3 $$ statusUpdaterRunnable = new Runnable() -->Line_6 $$ while (!isStopped) [ CD ]
Line_3 $$ statusUpdaterRunnable = new Runnable() -->Line_56 $$ MasterKey updatedMasterKey = response.getContainerTokenMasterKey()[ FD ]
Line_8 $$ NodeHeartbeatResponse response = null-->Line_14 $$ if (response.getNodeAction() == NodeAction.SHUTDOWN) [ FD ]
Line_8 $$ NodeHeartbeatResponse response = null-->Line_11 $$ response = resourceTracker.nodeHeartbeat(request)[ FD ]
Line_11 $$ response = resourceTracker.nodeHeartbeat(request)-->Line_14 $$ if (response.getNodeAction() == NodeAction.SHUTDOWN) [ FD ]
Line_2 $$ protected void startStatusUpdater() -->Line_67 $$ statusUpdater.start()[ CD ]
Line_31 $$ if (!containersToCleanup.isEmpty()) -->Line_32 $$ dispatcher.getEventHandler().handle(new CMgrCompletedContainersEvent(containersToCleanup, CMgrCompletedContainersEvent.Reason.BY_RESOURCEMANAGER))[ CD ]
Line_3 $$ statusUpdaterRunnable = new Runnable() -->Line_61 $$ if (updatedMasterKey != null) [ CD ]
Line_61 $$ if (updatedMasterKey != null) -->Line_62 $$ context.getNMTokenSecretManager().setMasterKey(updatedMasterKey)[ CD ]
Line_8 $$ NodeHeartbeatResponse response = null-->Line_60 $$ updatedMasterKey = response.getNMTokenMasterKey()[ FD ]
Line_11 $$ response = resourceTracker.nodeHeartbeat(request)-->Line_12 $$ nextHeartBeatInterval = response.getNextHeartBeatInterval()[ FD ]
Line_14 $$ if (response.getNodeAction() == NodeAction.SHUTDOWN) -->Line_17 $$ context.setDecommissioned(true)[ CD ]
Line_21 $$ if (response.getNodeAction() == NodeAction.RESYNC) -->Line_25 $$ dispatcher.getEventHandler().handle(new NodeManagerEvent(NodeManagerEventType.RESYNC))[ CD ]
Line_8 $$ NodeHeartbeatResponse response = null-->Line_21 $$ if (response.getNodeAction() == NodeAction.RESYNC) [ FD ]
Line_8 $$ NodeHeartbeatResponse response = null-->Line_13 $$ updateMasterKeys(response)[ FD ]
Line_34 $$ List<ApplicationId> appsToCleanup = response.getApplicationsToCleanup()-->Line_36 $$ if (!appsToCleanup.isEmpty()) [ FD ]
Line_11 $$ response = resourceTracker.nodeHeartbeat(request)-->Line_60 $$ updatedMasterKey = response.getNMTokenMasterKey()[ FD ]
Line_11 $$ response = resourceTracker.nodeHeartbeat(request)-->Line_34 $$ List<ApplicationId> appsToCleanup = response.getApplicationsToCleanup()[ FD ]
Line_14 $$ if (response.getNodeAction() == NodeAction.SHUTDOWN) -->Line_16 $$ LOG.warn("Message from ResourceManager: " + response.getDiagnosticsMessage())[ CD ]
Line_8 $$ NodeHeartbeatResponse response = null-->Line_12 $$ nextHeartBeatInterval = response.getNextHeartBeatInterval()[ FD ]
Line_5 $$ int lastHeartBeatID = 0-->Line_29 $$ lastHeartBeatID = response.getResponseId()[ FD ]
Line_8 $$ NodeHeartbeatResponse response = null-->Line_23 $$ LOG.warn("Message from ResourceManager: " + response.getDiagnosticsMessage())[ FD ]
Line_9 $$ NodeStatus nodeStatus = getNodeStatus(lastHeartBeatID)-->Line_10 $$ NodeHeartbeatRequest request = NodeHeartbeatRequest.newInstance(nodeStatus, NodeStatusUpdaterImpl.this.context.getContainerTokenSecretManager().getCurrentKey(), NodeStatusUpdaterImpl.this.context.getNMTokenSecretManager().getCurrentKey())[ FD ]
Line_56 $$ MasterKey updatedMasterKey = response.getContainerTokenMasterKey()-->Line_57 $$ if (updatedMasterKey != null) [ FD ]
Line_11 $$ response = resourceTracker.nodeHeartbeat(request)-->Line_16 $$ LOG.warn("Message from ResourceManager: " + response.getDiagnosticsMessage())[ FD ]
Line_21 $$ if (response.getNodeAction() == NodeAction.RESYNC) -->Line_23 $$ LOG.warn("Message from ResourceManager: " + response.getDiagnosticsMessage())[ CD ]
Line_11 $$ response = resourceTracker.nodeHeartbeat(request)-->Line_56 $$ MasterKey updatedMasterKey = response.getContainerTokenMasterKey()[ FD ]
Line_21 $$ if (response.getNodeAction() == NodeAction.RESYNC) -->Line_22 $$ LOG.warn("Node is out of sync with ResourceManager," + " hence resyncing.")[ CD ]
Line_56 $$ MasterKey updatedMasterKey = response.getContainerTokenMasterKey()-->Line_62 $$ context.getNMTokenSecretManager().setMasterKey(updatedMasterKey)[ FD ]
Line_3 $$ statusUpdaterRunnable = new Runnable() -->Line_60 $$ updatedMasterKey = response.getNMTokenMasterKey()[ CD ]
Line_8 $$ NodeHeartbeatResponse response = null-->Line_16 $$ LOG.warn("Message from ResourceManager: " + response.getDiagnosticsMessage())[ FD ]
Line_56 $$ MasterKey updatedMasterKey = response.getContainerTokenMasterKey()-->Line_61 $$ if (updatedMasterKey != null) [ FD ]
Line_3 $$ statusUpdaterRunnable = new Runnable() -->Line_57 $$ if (updatedMasterKey != null) [ CD ]
Line_11 $$ response = resourceTracker.nodeHeartbeat(request)-->Line_30 $$ List<ContainerId> containersToCleanup = response.getContainersToCleanup()[ FD ]
Line_11 $$ response = resourceTracker.nodeHeartbeat(request)-->Line_13 $$ updateMasterKeys(response)[ FD ]
Line_36 $$ if (!appsToCleanup.isEmpty()) -->Line_37 $$ dispatcher.getEventHandler().handle(new CMgrCompletedAppsEvent(appsToCleanup, CMgrCompletedAppsEvent.Reason.BY_RESOURCEMANAGER))[ CD ]
Line_60 $$ updatedMasterKey = response.getNMTokenMasterKey()-->Line_61 $$ if (updatedMasterKey != null) [ FD ]
Line_3 $$ statusUpdaterRunnable = new Runnable() -->Line_5 $$ int lastHeartBeatID = 0[ CD ]
Line_34 $$ List<ApplicationId> appsToCleanup = response.getApplicationsToCleanup()-->Line_35 $$ trackAppsForKeepAlive(appsToCleanup)[ FD ]
Line_8 $$ NodeHeartbeatResponse response = null-->Line_30 $$ List<ContainerId> containersToCleanup = response.getContainersToCleanup()[ FD ]
Line_21 $$ if (response.getNodeAction() == NodeAction.RESYNC) -->Line_24 $$ NodeStatusUpdaterImpl.this.rmIdentifier = ResourceManagerConstants.RM_INVALID_IDENTIFIER[ CD ]
Line_57 $$ if (updatedMasterKey != null) -->Line_58 $$ context.getContainerTokenSecretManager().setMasterKey(updatedMasterKey)[ CD ]
Line_29 $$ lastHeartBeatID = response.getResponseId()-->Line_9 $$ NodeStatus nodeStatus = getNodeStatus(lastHeartBeatID)[ FD ]
Line_10 $$ NodeHeartbeatRequest request = NodeHeartbeatRequest.newInstance(nodeStatus, NodeStatusUpdaterImpl.this.context.getContainerTokenSecretManager().getCurrentKey(), NodeStatusUpdaterImpl.this.context.getNMTokenSecretManager().getCurrentKey())-->Line_11 $$ response = resourceTracker.nodeHeartbeat(request)[ FD ]
Line_3 $$ statusUpdaterRunnable = new Runnable() -->Line_56 $$ MasterKey updatedMasterKey = response.getContainerTokenMasterKey()[ CD ]
Line_8 $$ NodeHeartbeatResponse response = null-->Line_56 $$ MasterKey updatedMasterKey = response.getContainerTokenMasterKey()[ FD ]
Line_8 $$ NodeHeartbeatResponse response = null-->Line_29 $$ lastHeartBeatID = response.getResponseId()[ FD ]
Line_30 $$ List<ContainerId> containersToCleanup = response.getContainersToCleanup()-->Line_31 $$ if (!containersToCleanup.isEmpty()) [ FD ]
Line_3 $$ statusUpdaterRunnable = new Runnable() -->Line_60 $$ updatedMasterKey = response.getNMTokenMasterKey()[ FD ]
Line_14 $$ if (response.getNodeAction() == NodeAction.SHUTDOWN) -->Line_15 $$ LOG.warn("Recieved SHUTDOWN signal from Resourcemanager as part of heartbeat," + " hence shutting down.")[ CD ]
Line_56 $$ MasterKey updatedMasterKey = response.getContainerTokenMasterKey()-->Line_58 $$ context.getContainerTokenSecretManager().setMasterKey(updatedMasterKey)[ FD ]
Line_5 $$ int lastHeartBeatID = 0-->Line_9 $$ NodeStatus nodeStatus = getNodeStatus(lastHeartBeatID)[ FD ]
Line_11 $$ response = resourceTracker.nodeHeartbeat(request)-->Line_21 $$ if (response.getNodeAction() == NodeAction.RESYNC) [ FD ]
Line_8 $$ NodeHeartbeatResponse response = null-->Line_34 $$ List<ApplicationId> appsToCleanup = response.getApplicationsToCleanup()[ FD ]
Line_60 $$ updatedMasterKey = response.getNMTokenMasterKey()-->Line_62 $$ context.getNMTokenSecretManager().setMasterKey(updatedMasterKey)[ FD ]
Line_11 $$ response = resourceTracker.nodeHeartbeat(request)-->Line_29 $$ lastHeartBeatID = response.getResponseId()[ FD ]
Line_11 $$ response = resourceTracker.nodeHeartbeat(request)-->Line_23 $$ LOG.warn("Message from ResourceManager: " + response.getDiagnosticsMessage())[ FD ]
Line_56 $$ MasterKey updatedMasterKey = response.getContainerTokenMasterKey()-->Line_60 $$ updatedMasterKey = response.getNMTokenMasterKey()[ FD ]
