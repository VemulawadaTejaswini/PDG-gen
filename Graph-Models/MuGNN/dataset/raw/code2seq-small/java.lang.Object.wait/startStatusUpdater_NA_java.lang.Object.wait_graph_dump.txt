Line_3 $$ statusUpdaterRunnable = new Runnable() -->Line_8 $$ int lastHeartBeatID = 0[ CD ]
Line_12 $$ NodeHeartbeatResponse response = null-->Line_18 $$ updateMasterKeys(response)[ FD ]
Line_3 $$ statusUpdaterRunnable = new Runnable() -->Line_79 $$ if (updatedMasterKey != null) [ CD ]
Line_26 $$ if (response.getNodeAction() == NodeAction.RESYNC) -->Line_27 $$ LOG.warn("Node is out of sync with ResourceManager," + " hence resyncing.")[ CD ]
Line_15 $$ response = resourceTracker.nodeHeartbeat(request)-->Line_19 $$ if (response.getNodeAction() == NodeAction.SHUTDOWN) [ FD ]
Line_15 $$ response = resourceTracker.nodeHeartbeat(request)-->Line_44 $$ List<ApplicationId> appsToCleanup = response.getApplicationsToCleanup()[ FD ]
Line_3 $$ statusUpdaterRunnable = new Runnable() -->Line_74 $$ if (updatedMasterKey != null) [ CD ]
Line_19 $$ if (response.getNodeAction() == NodeAction.SHUTDOWN) -->Line_22 $$ context.setDecommissioned(true)[ CD ]
Line_26 $$ if (response.getNodeAction() == NodeAction.RESYNC) -->Line_28 $$ LOG.warn("Message from ResourceManager: " + response.getDiagnosticsMessage())[ CD ]
Line_3 $$ statusUpdaterRunnable = new Runnable() -->Line_78 $$ updatedMasterKey = response.getNMTokenMasterKey()[ CD ]
Line_3 $$ statusUpdaterRunnable = new Runnable() -->Line_9 $$ while (!isStopped) [ CD ]
Line_15 $$ response = resourceTracker.nodeHeartbeat(request)-->Line_21 $$ LOG.warn("Message from ResourceManager: " + response.getDiagnosticsMessage())[ FD ]
Line_12 $$ NodeHeartbeatResponse response = null-->Line_21 $$ LOG.warn("Message from ResourceManager: " + response.getDiagnosticsMessage())[ FD ]
Line_19 $$ if (response.getNodeAction() == NodeAction.SHUTDOWN) -->Line_21 $$ LOG.warn("Message from ResourceManager: " + response.getDiagnosticsMessage())[ CD ]
Line_44 $$ List<ApplicationId> appsToCleanup = response.getApplicationsToCleanup()-->Line_47 $$ if (!appsToCleanup.isEmpty()) [ FD ]
Line_19 $$ if (response.getNodeAction() == NodeAction.SHUTDOWN) -->Line_20 $$ LOG.warn("Recieved SHUTDOWN signal from Resourcemanager as part of heartbeat," + " hence shutting down.")[ CD ]
Line_39 $$ lastHeartBeatID = response.getResponseId()-->Line_13 $$ NodeStatus nodeStatus = getNodeStatus(lastHeartBeatID)[ FD ]
Line_12 $$ NodeHeartbeatResponse response = null-->Line_15 $$ response = resourceTracker.nodeHeartbeat(request)[ FD ]
Line_47 $$ if (!appsToCleanup.isEmpty()) -->Line_48 $$ dispatcher.getEventHandler().handle(new CMgrCompletedAppsEvent(appsToCleanup, CMgrCompletedAppsEvent.Reason.BY_RESOURCEMANAGER))[ CD ]
Line_78 $$ updatedMasterKey = response.getNMTokenMasterKey()-->Line_79 $$ if (updatedMasterKey != null) [ FD ]
Line_79 $$ if (updatedMasterKey != null) -->Line_80 $$ context.getNMTokenSecretManager().setMasterKey(updatedMasterKey)[ CD ]
Line_12 $$ NodeHeartbeatResponse response = null-->Line_28 $$ LOG.warn("Message from ResourceManager: " + response.getDiagnosticsMessage())[ FD ]
Line_26 $$ if (response.getNodeAction() == NodeAction.RESYNC) -->Line_31 $$ dispatcher.getEventHandler().handle(new NodeManagerEvent(NodeManagerEventType.RESYNC))[ CD ]
Line_12 $$ NodeHeartbeatResponse response = null-->Line_44 $$ List<ApplicationId> appsToCleanup = response.getApplicationsToCleanup()[ FD ]
Line_15 $$ response = resourceTracker.nodeHeartbeat(request)-->Line_28 $$ LOG.warn("Message from ResourceManager: " + response.getDiagnosticsMessage())[ FD ]
Line_13 $$ NodeStatus nodeStatus = getNodeStatus(lastHeartBeatID)-->Line_14 $$ NodeHeartbeatRequest request = NodeHeartbeatRequest.newInstance(nodeStatus, NodeStatusUpdaterImpl.this.context.getContainerTokenSecretManager().getCurrentKey(), NodeStatusUpdaterImpl.this.context.getNMTokenSecretManager().getCurrentKey())[ FD ]
Line_15 $$ response = resourceTracker.nodeHeartbeat(request)-->Line_78 $$ updatedMasterKey = response.getNMTokenMasterKey()[ FD ]
Line_78 $$ updatedMasterKey = response.getNMTokenMasterKey()-->Line_80 $$ context.getNMTokenSecretManager().setMasterKey(updatedMasterKey)[ FD ]
Line_15 $$ response = resourceTracker.nodeHeartbeat(request)-->Line_40 $$ List<ContainerId> containersToCleanup = response.getContainersToCleanup()[ FD ]
Line_14 $$ NodeHeartbeatRequest request = NodeHeartbeatRequest.newInstance(nodeStatus, NodeStatusUpdaterImpl.this.context.getContainerTokenSecretManager().getCurrentKey(), NodeStatusUpdaterImpl.this.context.getNMTokenSecretManager().getCurrentKey())-->Line_15 $$ response = resourceTracker.nodeHeartbeat(request)[ FD ]
Line_15 $$ response = resourceTracker.nodeHeartbeat(request)-->Line_18 $$ updateMasterKeys(response)[ FD ]
Line_19 $$ if (response.getNodeAction() == NodeAction.SHUTDOWN) -->Line_23 $$ dispatcher.getEventHandler().handle(new NodeManagerEvent(NodeManagerEventType.SHUTDOWN))[ CD ]
Line_12 $$ NodeHeartbeatResponse response = null-->Line_26 $$ if (response.getNodeAction() == NodeAction.RESYNC) [ FD ]
Line_12 $$ NodeHeartbeatResponse response = null-->Line_40 $$ List<ContainerId> containersToCleanup = response.getContainersToCleanup()[ FD ]
Line_3 $$ statusUpdaterRunnable = new Runnable() -->Line_78 $$ updatedMasterKey = response.getNMTokenMasterKey()[ FD ]
Line_12 $$ NodeHeartbeatResponse response = null-->Line_78 $$ updatedMasterKey = response.getNMTokenMasterKey()[ FD ]
Line_2 $$ protected void startStatusUpdater() -->Line_85 $$ statusUpdater.start()[ CD ]
Line_41 $$ if (!containersToCleanup.isEmpty()) -->Line_42 $$ dispatcher.getEventHandler().handle(new CMgrCompletedContainersEvent(containersToCleanup, CMgrCompletedContainersEvent.Reason.BY_RESOURCEMANAGER))[ CD ]
Line_12 $$ NodeHeartbeatResponse response = null-->Line_19 $$ if (response.getNodeAction() == NodeAction.SHUTDOWN) [ FD ]
Line_15 $$ response = resourceTracker.nodeHeartbeat(request)-->Line_26 $$ if (response.getNodeAction() == NodeAction.RESYNC) [ FD ]
Line_8 $$ int lastHeartBeatID = 0-->Line_13 $$ NodeStatus nodeStatus = getNodeStatus(lastHeartBeatID)[ FD ]
Line_40 $$ List<ContainerId> containersToCleanup = response.getContainersToCleanup()-->Line_41 $$ if (!containersToCleanup.isEmpty()) [ FD ]
Line_8 $$ int lastHeartBeatID = 0-->Line_39 $$ lastHeartBeatID = response.getResponseId()[ FD ]
Line_12 $$ NodeHeartbeatResponse response = null-->Line_39 $$ lastHeartBeatID = response.getResponseId()[ FD ]
Line_15 $$ response = resourceTracker.nodeHeartbeat(request)-->Line_39 $$ lastHeartBeatID = response.getResponseId()[ FD ]
