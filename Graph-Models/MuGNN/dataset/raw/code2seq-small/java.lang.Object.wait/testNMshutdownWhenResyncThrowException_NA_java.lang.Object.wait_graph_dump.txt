Line_2 $$ public void testNMshutdownWhenResyncThrowException() throws IOException, InterruptedException, YarnException -->Line_3 $$ NodeManager nm = new TestNodeManager3()[ CD ]
Line_3 $$ NodeManager nm = new TestNodeManager3()-->Line_6 $$ nm.start()[ FD ]
Line_2 $$ public void testNMshutdownWhenResyncThrowException() throws IOException, InterruptedException, YarnException -->Line_18 $$ nm.stop()[ CD ]
Line_3 $$ NodeManager nm = new TestNodeManager3()-->Line_8 $$ nm.getNMDispatcher().getEventHandler().handle(new NodeManagerEvent(NodeManagerEventType.RESYNC))[ FD ]
Line_3 $$ NodeManager nm = new TestNodeManager3()-->Line_18 $$ nm.stop()[ FD ]
Line_2 $$ public void testNMshutdownWhenResyncThrowException() throws IOException, InterruptedException, YarnException -->Line_5 $$ nm.init(conf)[ CD ]
Line_2 $$ public void testNMshutdownWhenResyncThrowException() throws IOException, InterruptedException, YarnException -->Line_8 $$ nm.getNMDispatcher().getEventHandler().handle(new NodeManagerEvent(NodeManagerEventType.RESYNC))[ CD ]
Line_2 $$ public void testNMshutdownWhenResyncThrowException() throws IOException, InterruptedException, YarnException -->Line_4 $$ YarnConfiguration conf = createNMConfig()[ CD ]
Line_4 $$ YarnConfiguration conf = createNMConfig()-->Line_5 $$ nm.init(conf)[ FD ]
Line_2 $$ public void testNMshutdownWhenResyncThrowException() throws IOException, InterruptedException, YarnException -->Line_17 $$ Assert.assertTrue("NM shutdown not called.", isNMShutdownCalled.get())[ CD ]
Line_2 $$ public void testNMshutdownWhenResyncThrowException() throws IOException, InterruptedException, YarnException -->Line_6 $$ nm.start()[ CD ]
Line_2 $$ public void testNMshutdownWhenResyncThrowException() throws IOException, InterruptedException, YarnException -->Line_7 $$ Assert.assertEquals(1, ((TestNodeManager3) nm).getNMRegistrationCount())[ CD ]
Line_3 $$ NodeManager nm = new TestNodeManager3()-->Line_5 $$ nm.init(conf)[ FD ]
