Line_13 $$ RegisterNodeManagerRequest request2 = recordFactory.newRecordInstance(RegisterNodeManagerRequest.class)-->Line_16 $$ request2.setHttpPort(0)[ FD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_10 $$ request1.setHttpPort(0)[ CD ]
Line_14 $$ NodeId nodeId2 = NodeId.newInstance(hostname2, 0)-->Line_15 $$ request2.setNodeId(nodeId2)[ FD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_18 $$ resourceTrackerService.registerNodeManager(request2)[ CD ]
Line_6 $$ Resource capability = BuilderUtils.newResource(1024, 1)-->Line_11 $$ request1.setResource(capability)[ FD ]
Line_27 $$ NodeId nodeId3 = NodeId.newInstance(hostname3, 0)-->Line_28 $$ request3.setNodeId(nodeId3)[ FD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_5 $$ String hostname3 = "localhost3"[ CD ]
Line_19 $$ int waitCount = 0-->Line_20 $$ while (ClusterMetrics.getMetrics().getNumLostNMs() != 2 && waitCount++ < 20) [ FD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_7 $$ RegisterNodeManagerRequest request1 = recordFactory.newRecordInstance(RegisterNodeManagerRequest.class)[ CD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_31 $$ resourceTrackerService.registerNodeManager(request3)[ CD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_26 $$ request3 = recordFactory.newRecordInstance(RegisterNodeManagerRequest.class)[ CD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_20 $$ while (ClusterMetrics.getMetrics().getNumLostNMs() != 2 && waitCount++ < 20) [ CD ]
Line_3 $$ String hostname1 = "localhost1"-->Line_8 $$ NodeId nodeId1 = NodeId.newInstance(hostname1, 0)[ FD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_9 $$ request1.setNodeId(nodeId1)[ CD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_30 $$ request3.setResource(capability)[ CD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_27 $$ NodeId nodeId3 = NodeId.newInstance(hostname3, 0)[ CD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_4 $$ String hostname2 = "localhost2"[ CD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_3 $$ String hostname1 = "localhost1"[ CD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_11 $$ request1.setResource(capability)[ CD ]
Line_7 $$ RegisterNodeManagerRequest request1 = recordFactory.newRecordInstance(RegisterNodeManagerRequest.class)-->Line_11 $$ request1.setResource(capability)[ FD ]
Line_6 $$ Resource capability = BuilderUtils.newResource(1024, 1)-->Line_30 $$ request3.setResource(capability)[ FD ]
Line_7 $$ RegisterNodeManagerRequest request1 = recordFactory.newRecordInstance(RegisterNodeManagerRequest.class)-->Line_12 $$ resourceTrackerService.registerNodeManager(request1)[ FD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_16 $$ request2.setHttpPort(0)[ CD ]
Line_5 $$ String hostname3 = "localhost3"-->Line_27 $$ NodeId nodeId3 = NodeId.newInstance(hostname3, 0)[ FD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_33 $$ new ThirdNodeHeartBeatThread().start()[ CD ]
Line_13 $$ RegisterNodeManagerRequest request2 = recordFactory.newRecordInstance(RegisterNodeManagerRequest.class)-->Line_18 $$ resourceTrackerService.registerNodeManager(request2)[ FD ]
Line_7 $$ RegisterNodeManagerRequest request1 = recordFactory.newRecordInstance(RegisterNodeManagerRequest.class)-->Line_10 $$ request1.setHttpPort(0)[ FD ]
Line_13 $$ RegisterNodeManagerRequest request2 = recordFactory.newRecordInstance(RegisterNodeManagerRequest.class)-->Line_15 $$ request2.setNodeId(nodeId2)[ FD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_29 $$ request3.setHttpPort(0)[ CD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_17 $$ request2.setResource(capability)[ CD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_6 $$ Resource capability = BuilderUtils.newResource(1024, 1)[ CD ]
Line_13 $$ RegisterNodeManagerRequest request2 = recordFactory.newRecordInstance(RegisterNodeManagerRequest.class)-->Line_17 $$ request2.setResource(capability)[ FD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_15 $$ request2.setNodeId(nodeId2)[ CD ]
Line_7 $$ RegisterNodeManagerRequest request1 = recordFactory.newRecordInstance(RegisterNodeManagerRequest.class)-->Line_9 $$ request1.setNodeId(nodeId1)[ FD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_34 $$ Assert.assertEquals(2, ClusterMetrics.getMetrics().getNumLostNMs())[ CD ]
Line_6 $$ Resource capability = BuilderUtils.newResource(1024, 1)-->Line_17 $$ request2.setResource(capability)[ FD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_12 $$ resourceTrackerService.registerNodeManager(request1)[ CD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_19 $$ int waitCount = 0[ CD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_14 $$ NodeId nodeId2 = NodeId.newInstance(hostname2, 0)[ CD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_8 $$ NodeId nodeId1 = NodeId.newInstance(hostname1, 0)[ CD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_25 $$ Assert.assertEquals(2, ClusterMetrics.getMetrics().getNumLostNMs())[ CD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_13 $$ RegisterNodeManagerRequest request2 = recordFactory.newRecordInstance(RegisterNodeManagerRequest.class)[ CD ]
Line_2 $$ public void testNMExpiry() throws Exception -->Line_28 $$ request3.setNodeId(nodeId3)[ CD ]
Line_8 $$ NodeId nodeId1 = NodeId.newInstance(hostname1, 0)-->Line_9 $$ request1.setNodeId(nodeId1)[ FD ]
Line_4 $$ String hostname2 = "localhost2"-->Line_14 $$ NodeId nodeId2 = NodeId.newInstance(hostname2, 0)[ FD ]
