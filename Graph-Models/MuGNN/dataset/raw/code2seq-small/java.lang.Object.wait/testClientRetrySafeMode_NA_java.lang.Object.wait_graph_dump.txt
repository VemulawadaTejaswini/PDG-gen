Line_2 $$ public void testClientRetrySafeMode() throws Exception -->Line_8 $$ LOG.info("enter safemode")[ CD ]
Line_2 $$ public void testClientRetrySafeMode() throws Exception -->Line_24 $$ Thread.sleep(1000)[ CD ]
Line_2 $$ public void testClientRetrySafeMode() throws Exception -->Line_5 $$ NameNodeAdapter.enterSafeMode(nn0, false)[ CD ]
Line_2 $$ public void testClientRetrySafeMode() throws Exception -->Line_25 $$ NameNodeAdapter.leaveSafeMode(nn0)[ CD ]
Line_4 $$ final Path test = new Path("/test")-->Line_31 $$ assertTrue(results.get(test))[ FD ]
Line_6 $$ SafeModeInfo safeMode = (SafeModeInfo) Whitebox.getInternalState(nn0.getNamesystem(), "safeMode")-->Line_7 $$ Whitebox.setInternalState(safeMode, "extension", Integer.valueOf(30000))[ FD ]
Line_4 $$ final Path test = new Path("/test")-->Line_15 $$ results.put(test, mkdir)[ FD ]
Line_2 $$ public void testClientRetrySafeMode() throws Exception -->Line_6 $$ SafeModeInfo safeMode = (SafeModeInfo) Whitebox.getInternalState(nn0.getNamesystem(), "safeMode")[ CD ]
Line_3 $$ final Map<Path, Boolean> results = Collections.synchronizedMap(new HashMap<Path, Boolean>())-->Line_28 $$ while (!results.containsKey(test)) [ FD ]
Line_4 $$ final Path test = new Path("/test")-->Line_28 $$ while (!results.containsKey(test)) [ FD ]
Line_2 $$ public void testClientRetrySafeMode() throws Exception -->Line_3 $$ final Map<Path, Boolean> results = Collections.synchronizedMap(new HashMap<Path, Boolean>())[ CD ]
Line_3 $$ final Map<Path, Boolean> results = Collections.synchronizedMap(new HashMap<Path, Boolean>())-->Line_31 $$ assertTrue(results.get(test))[ FD ]
Line_4 $$ final Path test = new Path("/test")-->Line_12 $$ boolean mkdir = fs.mkdirs(test)[ FD ]
Line_3 $$ final Map<Path, Boolean> results = Collections.synchronizedMap(new HashMap<Path, Boolean>())-->Line_15 $$ results.put(test, mkdir)[ FD ]
Line_28 $$ while (!results.containsKey(test)) -->Line_29 $$ this.wait()[ CD ]
Line_2 $$ public void testClientRetrySafeMode() throws Exception -->Line_9 $$ new Thread() [ CD ]
Line_4 $$ final Path test = new Path("/test")-->Line_23 $$ assertFalse("The directory should not be created while NN in safemode", fs.exists(test))[ FD ]
Line_2 $$ public void testClientRetrySafeMode() throws Exception -->Line_23 $$ assertFalse("The directory should not be created while NN in safemode", fs.exists(test))[ CD ]
Line_2 $$ public void testClientRetrySafeMode() throws Exception -->Line_26 $$ LOG.info("leave safemode")[ CD ]
Line_2 $$ public void testClientRetrySafeMode() throws Exception -->Line_4 $$ final Path test = new Path("/test")[ CD ]
Line_12 $$ boolean mkdir = fs.mkdirs(test)-->Line_15 $$ results.put(test, mkdir)[ FD ]
Line_2 $$ public void testClientRetrySafeMode() throws Exception -->Line_7 $$ Whitebox.setInternalState(safeMode, "extension", Integer.valueOf(30000))[ CD ]
