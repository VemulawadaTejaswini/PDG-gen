Line_2 $$ private void doAppLogAggregation() -->Line_14 $$ if (this.aborted.get()) [ CD ]
Line_17 $$ while ((containerId = this.pendingContainers.poll()) != null) -->Line_18 $$ uploadLogsForContainer(containerId)[ FD ]
Line_20 $$ List<String> rootLogDirs = dirsHandler.getLogDirs()-->Line_21 $$ Path[] localAppLogDirs = new Path[rootLogDirs.size()][ FD ]
Line_33 $$ userUgi.doAs(new PrivilegedExceptionAction<Object>() -->Line_36 $$ remoteFS.rename(remoteNodeTmpLogFileForApp, remoteNodeLogFileForApp)[ CD ]
Line_33 $$ userUgi.doAs(new PrivilegedExceptionAction<Object>() -->Line_37 $$ return null[ CD ]
Line_2 $$ private void doAppLogAggregation() -->Line_4 $$ while (!this.appFinishing.get() && !this.aborted.get()) [ CD ]
Line_35 $$ FileSystem remoteFS = FileSystem.get(conf)-->Line_36 $$ remoteFS.rename(remoteNodeTmpLogFileForApp, remoteNodeLogFileForApp)[ FD ]
Line_28 $$ if (this.writer != null) -->Line_29 $$ this.writer.close()[ CD ]
Line_2 $$ private void doAppLogAggregation() -->Line_21 $$ Path[] localAppLogDirs = new Path[rootLogDirs.size()][ CD ]
Line_2 $$ private void doAppLogAggregation() -->Line_28 $$ if (this.writer != null) [ CD ]
Line_14 $$ if (this.aborted.get()) -->Line_15 $$ return[ CD ]
Line_2 $$ private void doAppLogAggregation() -->Line_22 $$ int index = 0[ CD ]
Line_2 $$ private void doAppLogAggregation() -->Line_27 $$ this.delService.delete(this.userUgi.getShortUserName(), null, localAppLogDirs)[ CD ]
Line_2 $$ private void doAppLogAggregation() -->Line_43 $$ this.dispatcher.getEventHandler().handle(new ApplicationEvent(this.appId, ApplicationEventType.APPLICATION_LOG_HANDLING_FINISHED))[ CD ]
Line_28 $$ if (this.writer != null) -->Line_30 $$ LOG.info("Finished aggregate log-file for app " + this.applicationId)[ CD ]
Line_2 $$ private void doAppLogAggregation() -->Line_17 $$ while ((containerId = this.pendingContainers.poll()) != null) [ CD ]
Line_22 $$ int index = 0-->Line_25 $$ index++[ FD ]
Line_3 $$ ContainerId containerId-->Line_17 $$ while ((containerId = this.pendingContainers.poll()) != null) [ FD ]
Line_33 $$ userUgi.doAs(new PrivilegedExceptionAction<Object>() -->Line_35 $$ FileSystem remoteFS = FileSystem.get(conf)[ CD ]
Line_2 $$ private void doAppLogAggregation() -->Line_20 $$ List<String> rootLogDirs = dirsHandler.getLogDirs()[ CD ]
Line_21 $$ Path[] localAppLogDirs = new Path[rootLogDirs.size()]-->Line_27 $$ this.delService.delete(this.userUgi.getShortUserName(), null, localAppLogDirs)[ FD ]
Line_17 $$ while ((containerId = this.pendingContainers.poll()) != null) -->Line_18 $$ uploadLogsForContainer(containerId)[ CD ]
Line_3 $$ ContainerId containerId-->Line_18 $$ uploadLogsForContainer(containerId)[ FD ]
Line_2 $$ private void doAppLogAggregation() -->Line_3 $$ ContainerId containerId[ CD ]
Line_2 $$ private void doAppLogAggregation() -->Line_44 $$ this.appAggregationFinished.set(true)[ CD ]
