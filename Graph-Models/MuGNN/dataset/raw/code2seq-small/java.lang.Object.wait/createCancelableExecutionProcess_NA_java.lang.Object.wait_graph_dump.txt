Line_2 $$ private static Runnable createCancelableExecutionProcess(final ProcessHandler processHandler, final Function<Object, Boolean> cancelableFun) -->Line_18 $$ if ((myProgressIndicator != null && (myProgressIndicator.isCanceled() || !myProgressIndicator.isRunning())) || (cancelableFun != null && cancelableFun.fun(null).booleanValue()) || processHandler.isProcessTerminated()) [ FD ]
Line_3 $$ return new Runnable() -->Line_17 $$ while (true) [ CD ]
Line_2 $$ private static Runnable createCancelableExecutionProcess(final ProcessHandler processHandler, final Function<Object, Boolean> cancelableFun) -->Line_3 $$ return new Runnable() [ CD ]
Line_17 $$ while (true) -->Line_18 $$ if ((myProgressIndicator != null && (myProgressIndicator.isCanceled() || !myProgressIndicator.isRunning())) || (cancelableFun != null && cancelableFun.fun(null).booleanValue()) || processHandler.isProcessTerminated()) [ CD ]
Line_3 $$ return new Runnable() -->Line_39 $$ if (myProgressIndicator != null && StringUtil.isEmpty(myProgressIndicator.getText())) [ CD ]
Line_3 $$ return new Runnable() -->Line_38 $$ myProgressIndicator = ProgressManager.getInstance().getProgressIndicator()[ CD ]
Line_3 $$ return new Runnable() -->Line_43 $$ mySemaphore.down()[ CD ]
Line_3 $$ return new Runnable() -->Line_44 $$ ApplicationManager.getApplication().executeOnPooledThread(myWaitThread)[ CD ]
Line_18 $$ if ((myProgressIndicator != null && (myProgressIndicator.isCanceled() || !myProgressIndicator.isRunning())) || (cancelableFun != null && cancelableFun.fun(null).booleanValue()) || processHandler.isProcessTerminated()) -->Line_19 $$ if (!processHandler.isProcessTerminated()) [ CD ]
Line_3 $$ return new Runnable() -->Line_45 $$ ApplicationManager.getApplication().executeOnPooledThread(myCancelListener)[ CD ]
Line_39 $$ if (myProgressIndicator != null && StringUtil.isEmpty(myProgressIndicator.getText())) -->Line_40 $$ myProgressIndicator.setText("Please wait...")[ CD ]
Line_2 $$ private static Runnable createCancelableExecutionProcess(final ProcessHandler processHandler, final Function<Object, Boolean> cancelableFun) -->Line_19 $$ if (!processHandler.isProcessTerminated()) [ FD ]
Line_3 $$ return new Runnable() -->Line_42 $$ LOG.assertTrue(myProgressIndicator != null || cancelableFun != null, "Cancelable process must have an opportunity to be canceled!")[ CD ]
Line_2 $$ private static Runnable createCancelableExecutionProcess(final ProcessHandler processHandler, final Function<Object, Boolean> cancelableFun) -->Line_21 $$ processHandler.destroyProcess()[ FD ]
Line_3 $$ return new Runnable() -->Line_46 $$ mySemaphore.waitFor()[ CD ]
Line_2 $$ private static Runnable createCancelableExecutionProcess(final ProcessHandler processHandler, final Function<Object, Boolean> cancelableFun) -->Line_9 $$ processHandler.waitFor()[ FD ]
