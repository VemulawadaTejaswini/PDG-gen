Line_6 $$ final ServerSocket serverSocket = new ServerSocket(0)-->Line_8 $$ ports[i] = serverSocket.getLocalPort()[ FD ]
Line_6 $$ final ServerSocket serverSocket = new ServerSocket(0)-->Line_7 $$ sockets[i] = serverSocket[ FD ]
Line_2 $$ public static int[] findAvailableSocketPorts(int capacity) throws IOException -->Line_4 $$ final ServerSocket[] sockets = new ServerSocket[capacity][ CD ]
Line_2 $$ public static int[] findAvailableSocketPorts(int capacity) throws IOException -->Line_20 $$ return ports[ CD ]
Line_5 $$ for (int i = 0; i < capacity; i++) -->Line_8 $$ ports[i] = serverSocket.getLocalPort()[ CD ]
Line_2 $$ public static int[] findAvailableSocketPorts(int capacity) throws IOException -->Line_5 $$ for (int i = 0; i < capacity; i++) [ FD ]
Line_4 $$ final ServerSocket[] sockets = new ServerSocket[capacity]-->Line_12 $$ sockets.wait(1)[ FD ]
Line_5 $$ for (int i = 0; i < capacity; i++) -->Line_6 $$ final ServerSocket serverSocket = new ServerSocket(0)[ CD ]
Line_2 $$ public static int[] findAvailableSocketPorts(int capacity) throws IOException -->Line_5 $$ for (int i = 0; i < capacity; i++) [ CD ]
Line_17 $$ for (ServerSocket socket : sockets) -->Line_18 $$ socket.close()[ FD ]
Line_2 $$ public static int[] findAvailableSocketPorts(int capacity) throws IOException -->Line_3 $$ final int[] ports = new int[capacity][ CD ]
Line_5 $$ for (int i = 0; i < capacity; i++) -->Line_7 $$ sockets[i] = serverSocket[ CD ]
