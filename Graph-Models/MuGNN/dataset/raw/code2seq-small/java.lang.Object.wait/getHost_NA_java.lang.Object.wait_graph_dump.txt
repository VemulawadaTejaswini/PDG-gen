Line_2 $$ public synchronized MapHost getHost() throws InterruptedException -->Line_15 $$ shuffleStart.set(System.currentTimeMillis())[ CD ]
Line_2 $$ public synchronized MapHost getHost() throws InterruptedException -->Line_8 $$ int numToPick = random.nextInt(pendingHosts.size())[ CD ]
Line_3 $$ while (pendingHosts.isEmpty()) -->Line_4 $$ wait()[ CD ]
Line_2 $$ public synchronized MapHost getHost() throws InterruptedException -->Line_12 $$ pendingHosts.remove(host)[ CD ]
Line_10 $$ host = iter.next()-->Line_14 $$ LOG.info("Assigning " + host + " with " + host.getNumKnownMapOutputs() + " to " + Thread.currentThread().getName())[ FD ]
Line_8 $$ int numToPick = random.nextInt(pendingHosts.size())-->Line_9 $$ for (int i = 0; i <= numToPick; ++i) [ FD ]
Line_10 $$ host = iter.next()-->Line_13 $$ host.markBusy()[ FD ]
Line_2 $$ public synchronized MapHost getHost() throws InterruptedException -->Line_14 $$ LOG.info("Assigning " + host + " with " + host.getNumKnownMapOutputs() + " to " + Thread.currentThread().getName())[ CD ]
Line_6 $$ MapHost host = null-->Line_10 $$ host = iter.next()[ FD ]
Line_6 $$ MapHost host = null-->Line_13 $$ host.markBusy()[ FD ]
Line_6 $$ MapHost host = null-->Line_12 $$ pendingHosts.remove(host)[ FD ]
Line_6 $$ MapHost host = null-->Line_14 $$ LOG.info("Assigning " + host + " with " + host.getNumKnownMapOutputs() + " to " + Thread.currentThread().getName())[ FD ]
Line_9 $$ for (int i = 0; i <= numToPick; ++i) -->Line_10 $$ host = iter.next()[ CD ]
Line_2 $$ public synchronized MapHost getHost() throws InterruptedException -->Line_6 $$ MapHost host = null[ CD ]
Line_7 $$ Iterator<MapHost> iter = pendingHosts.iterator()-->Line_10 $$ host = iter.next()[ FD ]
Line_2 $$ public synchronized MapHost getHost() throws InterruptedException -->Line_13 $$ host.markBusy()[ CD ]
Line_2 $$ public synchronized MapHost getHost() throws InterruptedException -->Line_3 $$ while (pendingHosts.isEmpty()) [ CD ]
Line_2 $$ public synchronized MapHost getHost() throws InterruptedException -->Line_7 $$ Iterator<MapHost> iter = pendingHosts.iterator()[ CD ]
Line_2 $$ public synchronized MapHost getHost() throws InterruptedException -->Line_16 $$ return host[ CD ]
Line_10 $$ host = iter.next()-->Line_12 $$ pendingHosts.remove(host)[ FD ]
Line_2 $$ public synchronized MapHost getHost() throws InterruptedException -->Line_9 $$ for (int i = 0; i <= numToPick; ++i) [ CD ]
