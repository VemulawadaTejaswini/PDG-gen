Line_19 $$ SpillRecord tmp = null-->Line_23 $$ tmp = new SpillRecord(0)[ FD ]
Line_33 $$ if (totalMemoryUsed.addAndGet(newInd.getSize()) > totalMemoryAllowed) -->Line_34 $$ freeIndexInformation()[ CD ]
Line_19 $$ SpillRecord tmp = null-->Line_21 $$ tmp = new SpillRecord(indexFileName, conf, expectedIndexOwner)[ FD ]
Line_4 $$ IndexInformation newInd = new IndexInformation()-->Line_33 $$ if (totalMemoryUsed.addAndGet(newInd.getSize()) > totalMemoryAllowed) [ FD ]
Line_5 $$ if ((info = cache.putIfAbsent(mapId, newInd)) != null) -->Line_15 $$ LOG.debug("IndexCache HIT: MapId " + mapId + " found")[ CD ]
Line_2 $$ private IndexInformation readIndexFileToCache(Path indexFileName, String mapId, String expectedIndexOwner) throws IOException -->Line_5 $$ if ((info = cache.putIfAbsent(mapId, newInd)) != null) [ FD ]
Line_3 $$ IndexInformation info-->Line_5 $$ if ((info = cache.putIfAbsent(mapId, newInd)) != null) [ FD ]
Line_3 $$ IndexInformation info-->Line_9 $$ info.wait()[ FD ]
Line_2 $$ private IndexInformation readIndexFileToCache(Path indexFileName, String mapId, String expectedIndexOwner) throws IOException -->Line_4 $$ IndexInformation newInd = new IndexInformation()[ CD ]
Line_2 $$ private IndexInformation readIndexFileToCache(Path indexFileName, String mapId, String expectedIndexOwner) throws IOException -->Line_36 $$ return newInd[ CD ]
Line_2 $$ private IndexInformation readIndexFileToCache(Path indexFileName, String mapId, String expectedIndexOwner) throws IOException -->Line_19 $$ SpillRecord tmp = null[ CD ]
Line_5 $$ if ((info = cache.putIfAbsent(mapId, newInd)) != null) -->Line_16 $$ return info[ CD ]
Line_2 $$ private IndexInformation readIndexFileToCache(Path indexFileName, String mapId, String expectedIndexOwner) throws IOException -->Line_18 $$ LOG.debug("IndexCache MISS: MapId " + mapId + " not found")[ CD ]
Line_19 $$ SpillRecord tmp = null-->Line_28 $$ newInd.mapSpillRecord = tmp[ FD ]
Line_2 $$ private IndexInformation readIndexFileToCache(Path indexFileName, String mapId, String expectedIndexOwner) throws IOException -->Line_32 $$ queue.add(mapId)[ FD ]
Line_2 $$ private IndexInformation readIndexFileToCache(Path indexFileName, String mapId, String expectedIndexOwner) throws IOException -->Line_32 $$ queue.add(mapId)[ CD ]
Line_3 $$ IndexInformation info-->Line_7 $$ while (isUnderConstruction(info)) [ FD ]
Line_5 $$ if ((info = cache.putIfAbsent(mapId, newInd)) != null) -->Line_9 $$ info.wait()[ FD ]
Line_2 $$ private IndexInformation readIndexFileToCache(Path indexFileName, String mapId, String expectedIndexOwner) throws IOException -->Line_3 $$ IndexInformation info[ CD ]
Line_21 $$ tmp = new SpillRecord(indexFileName, conf, expectedIndexOwner)-->Line_28 $$ newInd.mapSpillRecord = tmp[ FD ]
Line_21 $$ tmp = new SpillRecord(indexFileName, conf, expectedIndexOwner)-->Line_23 $$ tmp = new SpillRecord(0)[ FD ]
Line_5 $$ if ((info = cache.putIfAbsent(mapId, newInd)) != null) -->Line_7 $$ while (isUnderConstruction(info)) [ FD ]
Line_2 $$ private IndexInformation readIndexFileToCache(Path indexFileName, String mapId, String expectedIndexOwner) throws IOException -->Line_5 $$ if ((info = cache.putIfAbsent(mapId, newInd)) != null) [ CD ]
Line_4 $$ IndexInformation newInd = new IndexInformation()-->Line_5 $$ if ((info = cache.putIfAbsent(mapId, newInd)) != null) [ FD ]
Line_4 $$ IndexInformation newInd = new IndexInformation()-->Line_29 $$ newInd.notifyAll()[ FD ]
Line_2 $$ private IndexInformation readIndexFileToCache(Path indexFileName, String mapId, String expectedIndexOwner) throws IOException -->Line_24 $$ cache.remove(mapId)[ FD ]
Line_2 $$ private IndexInformation readIndexFileToCache(Path indexFileName, String mapId, String expectedIndexOwner) throws IOException -->Line_33 $$ if (totalMemoryUsed.addAndGet(newInd.getSize()) > totalMemoryAllowed) [ CD ]
Line_23 $$ tmp = new SpillRecord(0)-->Line_28 $$ newInd.mapSpillRecord = tmp[ FD ]
