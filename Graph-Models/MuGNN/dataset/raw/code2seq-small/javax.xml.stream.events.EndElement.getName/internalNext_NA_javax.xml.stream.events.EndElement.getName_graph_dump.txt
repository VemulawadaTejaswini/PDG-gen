Line_10 $$ event = super.getParent().nextEvent()-->Line_13 $$ final StartElement startElement = event.asStartElement()[ FD ]
Line_32 $$ event = filteredEvent-->Line_9 $$ do [ FD ]
Line_3 $$ XMLEvent event = null-->Line_27 $$ if (filteredEvent == null && event.isStartElement()) [ FD ]
Line_5 $$ event = peekedEvent-->Line_10 $$ event = super.getParent().nextEvent()[ FD ]
Line_27 $$ if (filteredEvent == null && event.isStartElement()) -->Line_30 $$ prunedElements.push(name)[ CD ]
Line_11 $$ if (!prunedElements.isEmpty()) -->Line_32 $$ event = filteredEvent[ CD ]
Line_29 $$ final QName name = startElement.getName()-->Line_30 $$ prunedElements.push(name)[ FD ]
Line_5 $$ event = peekedEvent-->Line_27 $$ if (filteredEvent == null && event.isStartElement()) [ FD ]
Line_18 $$ final EndElement endElement = event.asEndElement()-->Line_19 $$ final QName endElementName = endElement.getName()[ FD ]
Line_3 $$ XMLEvent event = null-->Line_28 $$ final StartElement startElement = event.asStartElement()[ FD ]
Line_3 $$ XMLEvent event = null-->Line_18 $$ final EndElement endElement = event.asEndElement()[ FD ]
Line_24 $$ event = null-->Line_32 $$ event = filteredEvent[ FD ]
Line_10 $$ event = super.getParent().nextEvent()-->Line_27 $$ if (filteredEvent == null && event.isStartElement()) [ FD ]
Line_16 $$ if (event.isEndElement()) -->Line_19 $$ final QName endElementName = endElement.getName()[ CD ]
Line_26 $$ final XMLEvent filteredEvent = this.filterEvent(event, peek)-->Line_32 $$ event = filteredEvent[ FD ]
Line_5 $$ event = peekedEvent-->Line_24 $$ event = null[ FD ]
Line_16 $$ if (event.isEndElement()) -->Line_18 $$ final EndElement endElement = event.asEndElement()[ CD ]
Line_17 $$ final QName startElementName = prunedElements.pop()-->Line_20 $$ if (!startElementName.equals(endElementName)) [ FD ]
Line_10 $$ event = super.getParent().nextEvent()-->Line_24 $$ event = null[ FD ]
Line_2 $$ protected final XMLEvent internalNext(boolean peek) throws XMLStreamException -->Line_26 $$ final XMLEvent filteredEvent = this.filterEvent(event, peek)[ FD ]
Line_27 $$ if (filteredEvent == null && event.isStartElement()) -->Line_28 $$ final StartElement startElement = event.asStartElement()[ CD ]
Line_32 $$ event = filteredEvent-->Line_16 $$ if (event.isEndElement()) [ FD ]
Line_5 $$ event = peekedEvent-->Line_13 $$ final StartElement startElement = event.asStartElement()[ FD ]
Line_12 $$ if (event.isStartElement()) -->Line_16 $$ if (event.isEndElement()) [ CD ]
Line_11 $$ if (!prunedElements.isEmpty()) -->Line_27 $$ if (filteredEvent == null && event.isStartElement()) [ CD ]
Line_3 $$ XMLEvent event = null-->Line_24 $$ event = null[ FD ]
Line_32 $$ event = filteredEvent-->Line_12 $$ if (event.isStartElement()) [ FD ]
Line_3 $$ XMLEvent event = null-->Line_13 $$ final StartElement startElement = event.asStartElement()[ FD ]
Line_3 $$ XMLEvent event = null-->Line_5 $$ event = peekedEvent[ FD ]
Line_24 $$ event = null-->Line_9 $$ do [ FD ]
Line_19 $$ final QName endElementName = endElement.getName()-->Line_20 $$ if (!startElementName.equals(endElementName)) [ FD ]
Line_5 $$ event = peekedEvent-->Line_18 $$ final EndElement endElement = event.asEndElement()[ FD ]
Line_10 $$ event = super.getParent().nextEvent()-->Line_26 $$ final XMLEvent filteredEvent = this.filterEvent(event, peek)[ FD ]
Line_11 $$ if (!prunedElements.isEmpty()) -->Line_24 $$ event = null[ CD ]
Line_10 $$ event = super.getParent().nextEvent()-->Line_12 $$ if (event.isStartElement()) [ FD ]
Line_9 $$ do -->Line_11 $$ if (!prunedElements.isEmpty()) [ CD ]
Line_24 $$ event = null-->Line_16 $$ if (event.isEndElement()) [ FD ]
Line_3 $$ XMLEvent event = null-->Line_16 $$ if (event.isEndElement()) [ FD ]
Line_5 $$ event = peekedEvent-->Line_28 $$ final StartElement startElement = event.asStartElement()[ FD ]
Line_11 $$ if (!prunedElements.isEmpty()) -->Line_12 $$ if (event.isStartElement()) [ CD ]
Line_32 $$ event = filteredEvent-->Line_26 $$ final XMLEvent filteredEvent = this.filterEvent(event, peek)[ FD ]
Line_13 $$ final StartElement startElement = event.asStartElement()-->Line_29 $$ final QName name = startElement.getName()[ FD ]
Line_24 $$ event = null-->Line_28 $$ final StartElement startElement = event.asStartElement()[ FD ]
Line_32 $$ event = filteredEvent-->Line_18 $$ final EndElement endElement = event.asEndElement()[ FD ]
Line_2 $$ protected final XMLEvent internalNext(boolean peek) throws XMLStreamException -->Line_4 $$ if (peekedEvent != null) [ CD ]
Line_24 $$ event = null-->Line_18 $$ final EndElement endElement = event.asEndElement()[ FD ]
Line_24 $$ event = null-->Line_12 $$ if (event.isStartElement()) [ FD ]
Line_3 $$ XMLEvent event = null-->Line_12 $$ if (event.isStartElement()) [ FD ]
Line_13 $$ final StartElement startElement = event.asStartElement()-->Line_14 $$ prunedElements.push(startElement.getName())[ FD ]
Line_12 $$ if (event.isStartElement()) -->Line_14 $$ prunedElements.push(startElement.getName())[ CD ]
Line_5 $$ event = peekedEvent-->Line_12 $$ if (event.isStartElement()) [ FD ]
Line_3 $$ XMLEvent event = null-->Line_26 $$ final XMLEvent filteredEvent = this.filterEvent(event, peek)[ FD ]
Line_4 $$ if (peekedEvent != null) -->Line_7 $$ return event[ CD ]
Line_32 $$ event = filteredEvent-->Line_28 $$ final StartElement startElement = event.asStartElement()[ FD ]
Line_27 $$ if (filteredEvent == null && event.isStartElement()) -->Line_29 $$ final QName name = startElement.getName()[ CD ]
Line_24 $$ event = null-->Line_27 $$ if (filteredEvent == null && event.isStartElement()) [ FD ]
Line_2 $$ protected final XMLEvent internalNext(boolean peek) throws XMLStreamException -->Line_9 $$ do [ CD ]
Line_3 $$ XMLEvent event = null-->Line_9 $$ do [ FD ]
Line_3 $$ XMLEvent event = null-->Line_32 $$ event = filteredEvent[ FD ]
Line_32 $$ event = filteredEvent-->Line_27 $$ if (filteredEvent == null && event.isStartElement()) [ FD ]
Line_16 $$ if (event.isEndElement()) -->Line_20 $$ if (!startElementName.equals(endElementName)) [ CD ]
Line_11 $$ if (!prunedElements.isEmpty()) -->Line_26 $$ final XMLEvent filteredEvent = this.filterEvent(event, peek)[ CD ]
Line_32 $$ event = filteredEvent-->Line_13 $$ final StartElement startElement = event.asStartElement()[ FD ]
Line_3 $$ XMLEvent event = null-->Line_10 $$ event = super.getParent().nextEvent()[ FD ]
Line_5 $$ event = peekedEvent-->Line_9 $$ do [ FD ]
Line_16 $$ if (event.isEndElement()) -->Line_17 $$ final QName startElementName = prunedElements.pop()[ CD ]
Line_2 $$ protected final XMLEvent internalNext(boolean peek) throws XMLStreamException -->Line_35 $$ return event[ CD ]
Line_5 $$ event = peekedEvent-->Line_26 $$ final XMLEvent filteredEvent = this.filterEvent(event, peek)[ FD ]
Line_10 $$ event = super.getParent().nextEvent()-->Line_9 $$ do [ FD ]
Line_10 $$ event = super.getParent().nextEvent()-->Line_16 $$ if (event.isEndElement()) [ FD ]
Line_10 $$ event = super.getParent().nextEvent()-->Line_32 $$ event = filteredEvent[ FD ]
Line_24 $$ event = null-->Line_13 $$ final StartElement startElement = event.asStartElement()[ FD ]
Line_5 $$ event = peekedEvent-->Line_32 $$ event = filteredEvent[ FD ]
Line_24 $$ event = null-->Line_26 $$ final XMLEvent filteredEvent = this.filterEvent(event, peek)[ FD ]
Line_9 $$ do -->Line_10 $$ event = super.getParent().nextEvent()[ CD ]
Line_10 $$ event = super.getParent().nextEvent()-->Line_28 $$ final StartElement startElement = event.asStartElement()[ FD ]
Line_5 $$ event = peekedEvent-->Line_16 $$ if (event.isEndElement()) [ FD ]
Line_12 $$ if (event.isStartElement()) -->Line_13 $$ final StartElement startElement = event.asStartElement()[ CD ]
Line_4 $$ if (peekedEvent != null) -->Line_5 $$ event = peekedEvent[ CD ]
Line_2 $$ protected final XMLEvent internalNext(boolean peek) throws XMLStreamException -->Line_3 $$ XMLEvent event = null[ CD ]
Line_10 $$ event = super.getParent().nextEvent()-->Line_18 $$ final EndElement endElement = event.asEndElement()[ FD ]
