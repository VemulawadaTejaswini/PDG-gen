Line_2 $$ private ByteBuffer getFirstToComplete(CompletionService<ByteBuffer> hedgedService, ArrayList<Future<ByteBuffer>> futures) throws InterruptedException -->Line_13 $$ futures.remove(future)[ FD ]
Line_2 $$ private ByteBuffer getFirstToComplete(CompletionService<ByteBuffer> hedgedService, ArrayList<Future<ByteBuffer>> futures) throws InterruptedException -->Line_3 $$ if (futures.isEmpty()) [ FD ]
Line_2 $$ private ByteBuffer getFirstToComplete(CompletionService<ByteBuffer> hedgedService, ArrayList<Future<ByteBuffer>> futures) throws InterruptedException -->Line_6 $$ Future<ByteBuffer> future = null[ CD ]
Line_8 $$ future = hedgedService.take()-->Line_10 $$ futures.remove(future)[ FD ]
Line_2 $$ private ByteBuffer getFirstToComplete(CompletionService<ByteBuffer> hedgedService, ArrayList<Future<ByteBuffer>> futures) throws InterruptedException -->Line_15 $$ futures.remove(future)[ FD ]
Line_6 $$ Future<ByteBuffer> future = null-->Line_15 $$ futures.remove(future)[ FD ]
Line_8 $$ future = hedgedService.take()-->Line_9 $$ ByteBuffer bb = future.get()[ FD ]
Line_6 $$ Future<ByteBuffer> future = null-->Line_13 $$ futures.remove(future)[ FD ]
Line_6 $$ Future<ByteBuffer> future = null-->Line_8 $$ future = hedgedService.take()[ FD ]
Line_2 $$ private ByteBuffer getFirstToComplete(CompletionService<ByteBuffer> hedgedService, ArrayList<Future<ByteBuffer>> futures) throws InterruptedException -->Line_8 $$ future = hedgedService.take()[ FD ]
Line_6 $$ Future<ByteBuffer> future = null-->Line_9 $$ ByteBuffer bb = future.get()[ FD ]
Line_6 $$ Future<ByteBuffer> future = null-->Line_10 $$ futures.remove(future)[ FD ]
Line_2 $$ private ByteBuffer getFirstToComplete(CompletionService<ByteBuffer> hedgedService, ArrayList<Future<ByteBuffer>> futures) throws InterruptedException -->Line_3 $$ if (futures.isEmpty()) [ CD ]
Line_8 $$ future = hedgedService.take()-->Line_13 $$ futures.remove(future)[ FD ]
Line_2 $$ private ByteBuffer getFirstToComplete(CompletionService<ByteBuffer> hedgedService, ArrayList<Future<ByteBuffer>> futures) throws InterruptedException -->Line_10 $$ futures.remove(future)[ FD ]
Line_8 $$ future = hedgedService.take()-->Line_15 $$ futures.remove(future)[ FD ]
