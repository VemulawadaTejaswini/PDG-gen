Line_5 $$ final ChooseSomethingAction changeAction = new ChooseSomethingAction(myVirtualFile) -->Line_8 $$ if (myVirtualFile != null) [ CD ]
Line_2 $$ public Component getTableCellEditorComponent(JTable table, final Object value, boolean isSelected, int row, int column) -->Line_24 $$ AnActionEvent event = AnActionEvent.createFromAnAction(changeAction, null, ActionPlaces.UNKNOWN, dataContext)[ CD ]
Line_2 $$ public Component getTableCellEditorComponent(JTable table, final Object value, boolean isSelected, int row, int column) -->Line_35 $$ return editorComponent[ CD ]
Line_5 $$ final ChooseSomethingAction changeAction = new ChooseSomethingAction(myVirtualFile) -->Line_15 $$ getValueColumn().getCellEditor().stopCellEditing()[ CD ]
Line_8 $$ if (myVirtualFile != null) -->Line_10 $$ e.getPresentation().setText(mapping == null ? "" : visualize(mapping))[ CD ]
Line_16 $$ if (clearSubdirectoriesOnDemandOrCancel(virtualFile, myOverrideQuestion, myOverrideTitle)) -->Line_17 $$ getTableModel().setValueAt(myMappings.chosenToStored(virtualFile, charset), new DefaultMutableTreeNode(virtualFile), 1)[ CD ]
Line_5 $$ final ChooseSomethingAction changeAction = new ChooseSomethingAction(myVirtualFile) -->Line_17 $$ getTableModel().setValueAt(myMappings.chosenToStored(virtualFile, charset), new DefaultMutableTreeNode(virtualFile), 1)[ FD ]
Line_5 $$ final ChooseSomethingAction changeAction = new ChooseSomethingAction(myVirtualFile) -->Line_12 $$ e.getPresentation().setEnabled(enabled)[ CD ]
Line_2 $$ public Component getTableCellEditorComponent(JTable table, final Object value, boolean isSelected, int row, int column) -->Line_22 $$ final JComponent comboComponent = changeAction.createCustomComponent(templatePresentation)[ CD ]
Line_5 $$ final ChooseSomethingAction changeAction = new ChooseSomethingAction(myVirtualFile) -->Line_16 $$ if (clearSubdirectoriesOnDemandOrCancel(virtualFile, myOverrideQuestion, myOverrideTitle)) [ FD ]
Line_2 $$ public Component getTableCellEditorComponent(JTable table, final Object value, boolean isSelected, int row, int column) -->Line_3 $$ final Object o = table.getModel().getValueAt(row, 0)[ CD ]
Line_2 $$ public Component getTableCellEditorComponent(JTable table, final Object value, boolean isSelected, int row, int column) -->Line_25 $$ changeAction.update(event)[ CD ]
Line_9 $$ final T mapping = myMappings.getMapping(myVirtualFile)-->Line_10 $$ e.getPresentation().setText(mapping == null ? "" : visualize(mapping))[ FD ]
Line_27 $$ comboComponent.addComponentListener(new ComponentAdapter() -->Line_29 $$ press((Container) e.getComponent())[ CD ]
Line_27 $$ comboComponent.addComponentListener(new ComponentAdapter() -->Line_29 $$ press((Container) e.getComponent())[ FD ]
Line_5 $$ final ChooseSomethingAction changeAction = new ChooseSomethingAction(myVirtualFile) -->Line_29 $$ press((Container) e.getComponent())[ FD ]
Line_5 $$ final ChooseSomethingAction changeAction = new ChooseSomethingAction(myVirtualFile) -->Line_25 $$ changeAction.update(event)[ FD ]
Line_5 $$ final ChooseSomethingAction changeAction = new ChooseSomethingAction(myVirtualFile) -->Line_12 $$ e.getPresentation().setEnabled(enabled)[ FD ]
Line_5 $$ final ChooseSomethingAction changeAction = new ChooseSomethingAction(myVirtualFile) -->Line_7 $$ boolean enabled = isValueEditableForFile(myVirtualFile)[ CD ]
Line_5 $$ final ChooseSomethingAction changeAction = new ChooseSomethingAction(myVirtualFile) -->Line_24 $$ AnActionEvent event = AnActionEvent.createFromAnAction(changeAction, null, ActionPlaces.UNKNOWN, dataContext)[ FD ]
Line_5 $$ final ChooseSomethingAction changeAction = new ChooseSomethingAction(myVirtualFile) -->Line_16 $$ if (clearSubdirectoriesOnDemandOrCancel(virtualFile, myOverrideQuestion, myOverrideTitle)) [ CD ]
Line_5 $$ final ChooseSomethingAction changeAction = new ChooseSomethingAction(myVirtualFile) -->Line_22 $$ final JComponent comboComponent = changeAction.createCustomComponent(templatePresentation)[ FD ]
Line_2 $$ public Component getTableCellEditorComponent(JTable table, final Object value, boolean isSelected, int row, int column) -->Line_5 $$ final ChooseSomethingAction changeAction = new ChooseSomethingAction(myVirtualFile) [ CD ]
Line_5 $$ final ChooseSomethingAction changeAction = new ChooseSomethingAction(myVirtualFile) -->Line_10 $$ e.getPresentation().setText(mapping == null ? "" : visualize(mapping))[ FD ]
Line_5 $$ final ChooseSomethingAction changeAction = new ChooseSomethingAction(myVirtualFile) -->Line_21 $$ Presentation templatePresentation = changeAction.getTemplatePresentation()[ FD ]
Line_8 $$ if (myVirtualFile != null) -->Line_9 $$ final T mapping = myMappings.getMapping(myVirtualFile)[ CD ]
Line_2 $$ public Component getTableCellEditorComponent(JTable table, final Object value, boolean isSelected, int row, int column) -->Line_33 $$ templatePresentation.setText(t == null ? "" : visualize(t))[ CD ]
Line_2 $$ public Component getTableCellEditorComponent(JTable table, final Object value, boolean isSelected, int row, int column) -->Line_34 $$ comboComponent.revalidate()[ CD ]
Line_2 $$ public Component getTableCellEditorComponent(JTable table, final Object value, boolean isSelected, int row, int column) -->Line_23 $$ DataContext dataContext = SimpleDataContext.getSimpleContext(CommonDataKeys.VIRTUAL_FILE.getName(), myVirtualFile, SimpleDataContext.getProjectContext(getProject()))[ CD ]
Line_7 $$ boolean enabled = isValueEditableForFile(myVirtualFile)-->Line_12 $$ e.getPresentation().setEnabled(enabled)[ FD ]
Line_2 $$ public Component getTableCellEditorComponent(JTable table, final Object value, boolean isSelected, int row, int column) -->Line_27 $$ comboComponent.addComponentListener(new ComponentAdapter() [ CD ]
Line_2 $$ public Component getTableCellEditorComponent(JTable table, final Object value, boolean isSelected, int row, int column) -->Line_3 $$ final Object o = table.getModel().getValueAt(row, 0)[ FD ]
Line_2 $$ public Component getTableCellEditorComponent(JTable table, final Object value, boolean isSelected, int row, int column) -->Line_21 $$ Presentation templatePresentation = changeAction.getTemplatePresentation()[ CD ]
