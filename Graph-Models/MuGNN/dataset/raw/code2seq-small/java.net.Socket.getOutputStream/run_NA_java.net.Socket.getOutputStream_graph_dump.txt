Line_9 $$ do -->Line_10 $$ Socket socket = null[ CD ]
Line_22 $$ while (!gssContext.isEstablished()) -->Line_26 $$ if (outToken != null) [ CD ]
Line_10 $$ Socket socket = null-->Line_14 $$ socket = serverSocket.accept()[ FD ]
Line_11 $$ GSSContext gssContext = null-->Line_52 $$ gssContext.dispose()[ FD ]
Line_21 $$ if (command == GSSTestConstants.CMD_NAME) -->Line_38 $$ dataOutputStream.writeInt(outToken.length)[ CD ]
Line_11 $$ GSSContext gssContext = null-->Line_37 $$ final byte[] outToken = gssContext.wrap(clientNameBytes, 0, clientNameBytes.length, msgProp)[ FD ]
Line_7 $$ int command = GSSTestConstants.CMD_NOOP-->Line_9 $$ do [ FD ]
Line_21 $$ if (command == GSSTestConstants.CMD_NAME) -->Line_32 $$ final String clientName = gssContext.getSrcName().toString()[ CD ]
Line_18 $$ final DataOutputStream dataOutputStream = new DataOutputStream(socket.getOutputStream())-->Line_27 $$ dataOutputStream.writeInt(outToken.length)[ FD ]
Line_26 $$ if (outToken != null) -->Line_29 $$ dataOutputStream.flush()[ CD ]
Line_16 $$ gssContext = gssManager.createContext((GSSCredential) null)-->Line_32 $$ final String clientName = gssContext.getSrcName().toString()[ FD ]
Line_25 $$ final byte[] outToken = gssContext.acceptSecContext(inToken, 0, inToken.length)-->Line_26 $$ if (outToken != null) [ FD ]
Line_21 $$ if (command == GSSTestConstants.CMD_NAME) -->Line_37 $$ final byte[] outToken = gssContext.wrap(clientNameBytes, 0, clientNameBytes.length, msgProp)[ CD ]
Line_2 $$ public String run() -->Line_71 $$ return null[ CD ]
Line_2 $$ public String run() -->Line_3 $$ final GSSManager gssManager = GSSManager.getInstance()[ CD ]
Line_26 $$ if (outToken != null) -->Line_28 $$ dataOutputStream.write(outToken)[ CD ]
Line_21 $$ if (command == GSSTestConstants.CMD_NAME) -->Line_41 $$ LOGGER.info("Client name was returned as the token value.")[ CD ]
Line_11 $$ GSSContext gssContext = null-->Line_22 $$ while (!gssContext.isEstablished()) [ FD ]
Line_23 $$ final byte[] inToken = new byte[dataInputStream.readInt()]-->Line_25 $$ final byte[] outToken = gssContext.acceptSecContext(inToken, 0, inToken.length)[ FD ]
Line_16 $$ gssContext = gssManager.createContext((GSSCredential) null)-->Line_50 $$ if (gssContext != null) [ FD ]
Line_16 $$ gssContext = gssManager.createContext((GSSCredential) null)-->Line_37 $$ final byte[] outToken = gssContext.wrap(clientNameBytes, 0, clientNameBytes.length, msgProp)[ FD ]
Line_11 $$ GSSContext gssContext = null-->Line_25 $$ final byte[] outToken = gssContext.acceptSecContext(inToken, 0, inToken.length)[ FD ]
Line_7 $$ int command = GSSTestConstants.CMD_NOOP-->Line_21 $$ if (command == GSSTestConstants.CMD_NAME) [ FD ]
Line_16 $$ gssContext = gssManager.createContext((GSSCredential) null)-->Line_22 $$ while (!gssContext.isEstablished()) [ FD ]
Line_26 $$ if (outToken != null) -->Line_27 $$ dataOutputStream.writeInt(outToken.length)[ CD ]
Line_11 $$ GSSContext gssContext = null-->Line_16 $$ gssContext = gssManager.createContext((GSSCredential) null)[ FD ]
Line_14 $$ socket = serverSocket.accept()-->Line_18 $$ final DataOutputStream dataOutputStream = new DataOutputStream(socket.getOutputStream())[ FD ]
Line_10 $$ Socket socket = null-->Line_59 $$ socket.close()[ FD ]
Line_9 $$ do -->Line_11 $$ GSSContext gssContext = null[ CD ]
Line_19 $$ command = dataInputStream.readInt()-->Line_21 $$ if (command == GSSTestConstants.CMD_NAME) [ FD ]
Line_21 $$ if (command == GSSTestConstants.CMD_NAME) -->Line_39 $$ dataOutputStream.write(outToken)[ CD ]
Line_21 $$ if (command == GSSTestConstants.CMD_NAME) -->Line_33 $$ LOGGER.info("Context Established with Client " + clientName)[ CD ]
Line_18 $$ final DataOutputStream dataOutputStream = new DataOutputStream(socket.getOutputStream())-->Line_40 $$ dataOutputStream.flush()[ FD ]
Line_14 $$ socket = serverSocket.accept()-->Line_59 $$ socket.close()[ FD ]
Line_18 $$ final DataOutputStream dataOutputStream = new DataOutputStream(socket.getOutputStream())-->Line_38 $$ dataOutputStream.writeInt(outToken.length)[ FD ]
Line_17 $$ final DataInputStream dataInputStream = new DataInputStream(socket.getInputStream())-->Line_23 $$ final byte[] inToken = new byte[dataInputStream.readInt()][ FD ]
Line_25 $$ final byte[] outToken = gssContext.acceptSecContext(inToken, 0, inToken.length)-->Line_39 $$ dataOutputStream.write(outToken)[ FD ]
Line_19 $$ command = dataInputStream.readInt()-->Line_9 $$ do [ FD ]
Line_21 $$ if (command == GSSTestConstants.CMD_NAME) -->Line_22 $$ while (!gssContext.isEstablished()) [ CD ]
Line_21 $$ if (command == GSSTestConstants.CMD_NAME) -->Line_36 $$ final byte[] clientNameBytes = clientName.getBytes(GSSTestConstants.CHAR_ENC)[ CD ]
Line_21 $$ if (command == GSSTestConstants.CMD_NAME) -->Line_40 $$ dataOutputStream.flush()[ CD ]
Line_17 $$ final DataInputStream dataInputStream = new DataInputStream(socket.getInputStream())-->Line_19 $$ command = dataInputStream.readInt()[ FD ]
Line_10 $$ Socket socket = null-->Line_18 $$ final DataOutputStream dataOutputStream = new DataOutputStream(socket.getOutputStream())[ FD ]
Line_11 $$ GSSContext gssContext = null-->Line_32 $$ final String clientName = gssContext.getSrcName().toString()[ FD ]
Line_18 $$ final DataOutputStream dataOutputStream = new DataOutputStream(socket.getOutputStream())-->Line_39 $$ dataOutputStream.write(outToken)[ FD ]
Line_18 $$ final DataOutputStream dataOutputStream = new DataOutputStream(socket.getOutputStream())-->Line_28 $$ dataOutputStream.write(outToken)[ FD ]
Line_5 $$ final ServerSocket serverSocket = new ServerSocket(GSSTestConstants.PORT)-->Line_14 $$ socket = serverSocket.accept()[ FD ]
Line_14 $$ socket = serverSocket.accept()-->Line_17 $$ final DataInputStream dataInputStream = new DataInputStream(socket.getInputStream())[ FD ]
Line_10 $$ Socket socket = null-->Line_17 $$ final DataInputStream dataInputStream = new DataInputStream(socket.getInputStream())[ FD ]
Line_23 $$ final byte[] inToken = new byte[dataInputStream.readInt()]-->Line_24 $$ dataInputStream.readFully(inToken)[ FD ]
Line_16 $$ gssContext = gssManager.createContext((GSSCredential) null)-->Line_25 $$ final byte[] outToken = gssContext.acceptSecContext(inToken, 0, inToken.length)[ FD ]
Line_17 $$ final DataInputStream dataInputStream = new DataInputStream(socket.getInputStream())-->Line_24 $$ dataInputStream.readFully(inToken)[ FD ]
Line_18 $$ final DataOutputStream dataOutputStream = new DataOutputStream(socket.getOutputStream())-->Line_29 $$ dataOutputStream.flush()[ FD ]
Line_22 $$ while (!gssContext.isEstablished()) -->Line_24 $$ dataInputStream.readFully(inToken)[ CD ]
Line_25 $$ final byte[] outToken = gssContext.acceptSecContext(inToken, 0, inToken.length)-->Line_28 $$ dataOutputStream.write(outToken)[ FD ]
Line_14 $$ socket = serverSocket.accept()-->Line_57 $$ if (socket != null) [ FD ]
Line_10 $$ Socket socket = null-->Line_57 $$ if (socket != null) [ FD ]
Line_22 $$ while (!gssContext.isEstablished()) -->Line_25 $$ final byte[] outToken = gssContext.acceptSecContext(inToken, 0, inToken.length)[ CD ]
Line_16 $$ gssContext = gssManager.createContext((GSSCredential) null)-->Line_52 $$ gssContext.dispose()[ FD ]
Line_22 $$ while (!gssContext.isEstablished()) -->Line_23 $$ final byte[] inToken = new byte[dataInputStream.readInt()][ CD ]
Line_3 $$ final GSSManager gssManager = GSSManager.getInstance()-->Line_16 $$ gssContext = gssManager.createContext((GSSCredential) null)[ FD ]
Line_7 $$ int command = GSSTestConstants.CMD_NOOP-->Line_19 $$ command = dataInputStream.readInt()[ FD ]
Line_11 $$ GSSContext gssContext = null-->Line_50 $$ if (gssContext != null) [ FD ]
