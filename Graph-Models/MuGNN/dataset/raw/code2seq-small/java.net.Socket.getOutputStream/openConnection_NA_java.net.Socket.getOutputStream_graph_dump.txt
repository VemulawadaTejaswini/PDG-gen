Line_3 $$ boolean error = true-->Line_19 $$ error = false[ FD ]
Line_42 $$ if (error) -->Line_43 $$ close()[ CD ]
Line_2 $$ private void openConnection(@NonNls String preamble, @NonNls String postamble, IStreamLogger streamLogger) throws AuthenticationException -->Line_8 $$ final OutputStream loggingOutputStream = streamLogger.createLoggingOutputStream(this.socketOutputStream)[ FD ]
Line_17 $$ String response = new StreamUtilities(null).readLine(loggingInputStream)-->Line_18 $$ if (response.equals(SUCCESS_MESSAGE)) [ FD ]
Line_18 $$ if (response.equals(SUCCESS_MESSAGE)) -->Line_19 $$ error = false[ CD ]
Line_8 $$ final OutputStream loggingOutputStream = streamLogger.createLoggingOutputStream(this.socketOutputStream)-->Line_12 $$ writeLn(loggingOutputStream, userName)[ FD ]
Line_28 $$ response = removePrefix(response, "error ")-->Line_30 $$ throw new AuthenticationException(JavaCvsSrcBundle.message("authentication.failed.error.message", response))[ FD ]
Line_8 $$ final OutputStream loggingOutputStream = streamLogger.createLoggingOutputStream(this.socketOutputStream)-->Line_16 $$ loggingOutputStream.flush()[ FD ]
Line_29 $$ response = removePrefix(response, "E ")-->Line_30 $$ throw new AuthenticationException(JavaCvsSrcBundle.message("authentication.failed.error.message", response))[ FD ]
Line_17 $$ String response = new StreamUtilities(null).readLine(loggingInputStream)-->Line_22 $$ if (response.length() == 0) [ FD ]
Line_2 $$ private void openConnection(@NonNls String preamble, @NonNls String postamble, IStreamLogger streamLogger) throws AuthenticationException -->Line_10 $$ writeLn(loggingOutputStream, preamble, "US-ASCII")[ FD ]
Line_9 $$ final InputStream loggingInputStream = streamLogger.createLoggingInputStream(this.socketInputStream)-->Line_17 $$ String response = new StreamUtilities(null).readLine(loggingInputStream)[ FD ]
Line_8 $$ final OutputStream loggingOutputStream = streamLogger.createLoggingOutputStream(this.socketOutputStream)-->Line_15 $$ writeLn(loggingOutputStream, postamble, "US-ASCII")[ FD ]
Line_17 $$ String response = new StreamUtilities(null).readLine(loggingInputStream)-->Line_28 $$ response = removePrefix(response, "error ")[ FD ]
Line_2 $$ private void openConnection(@NonNls String preamble, @NonNls String postamble, IStreamLogger streamLogger) throws AuthenticationException -->Line_14 $$ writeLn(streamLogger.getOutputLogStream(), ENCODED_PASSWORD_OUTPUT_MESSAGE)[ FD ]
Line_28 $$ response = removePrefix(response, "error ")-->Line_29 $$ response = removePrefix(response, "E ")[ FD ]
Line_2 $$ private void openConnection(@NonNls String preamble, @NonNls String postamble, IStreamLogger streamLogger) throws AuthenticationException -->Line_9 $$ final InputStream loggingInputStream = streamLogger.createLoggingInputStream(this.socketInputStream)[ FD ]
Line_18 $$ if (response.equals(SUCCESS_MESSAGE)) -->Line_20 $$ return[ CD ]
Line_8 $$ final OutputStream loggingOutputStream = streamLogger.createLoggingOutputStream(this.socketOutputStream)-->Line_10 $$ writeLn(loggingOutputStream, preamble, "US-ASCII")[ FD ]
Line_2 $$ private void openConnection(@NonNls String preamble, @NonNls String postamble, IStreamLogger streamLogger) throws AuthenticationException -->Line_15 $$ writeLn(loggingOutputStream, postamble, "US-ASCII")[ FD ]
Line_8 $$ final OutputStream loggingOutputStream = streamLogger.createLoggingOutputStream(this.socketOutputStream)-->Line_11 $$ writeLn(loggingOutputStream, repository)[ FD ]
Line_17 $$ String response = new StreamUtilities(null).readLine(loggingInputStream)-->Line_30 $$ throw new AuthenticationException(JavaCvsSrcBundle.message("authentication.failed.error.message", response))[ FD ]
Line_17 $$ String response = new StreamUtilities(null).readLine(loggingInputStream)-->Line_29 $$ response = removePrefix(response, "E ")[ FD ]
Line_17 $$ String response = new StreamUtilities(null).readLine(loggingInputStream)-->Line_25 $$ if (response.equals(FAILED_MESSAGE)) [ FD ]
Line_2 $$ private void openConnection(@NonNls String preamble, @NonNls String postamble, IStreamLogger streamLogger) throws AuthenticationException -->Line_3 $$ boolean error = true[ CD ]
