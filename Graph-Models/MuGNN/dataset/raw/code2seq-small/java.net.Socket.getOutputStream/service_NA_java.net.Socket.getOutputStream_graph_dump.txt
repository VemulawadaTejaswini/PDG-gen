Line_5 $$ socket = borrowSocket()-->Line_15 $$ returnSocket(socket, forceCloseSocket)[ FD ]
Line_2 $$ public void service(HttpServletRequest request, HttpServletResponse response) throws PortalResiliencyException -->Line_3 $$ Socket socket = null[ CD ]
Line_3 $$ Socket socket = null-->Line_20 $$ if (socket != null) [ FD ]
Line_3 $$ Socket socket = null-->Line_5 $$ socket = borrowSocket()[ FD ]
Line_24 $$ if (_log.isWarnEnabled()) -->Line_25 $$ _log.warn(ioe, ioe)[ CD ]
Line_5 $$ socket = borrowSocket()-->Line_20 $$ if (socket != null) [ FD ]
Line_7 $$ OutputStream outputStream = socket.getOutputStream()-->Line_8 $$ outputStream.write(httpServletRequestContent)[ FD ]
Line_5 $$ socket = borrowSocket()-->Line_7 $$ OutputStream outputStream = socket.getOutputStream()[ FD ]
Line_3 $$ Socket socket = null-->Line_22 $$ socket.close()[ FD ]
Line_16 $$ socket = null-->Line_20 $$ if (socket != null) [ FD ]
Line_5 $$ socket = borrowSocket()-->Line_22 $$ socket.close()[ FD ]
Line_5 $$ socket = borrowSocket()-->Line_16 $$ socket = null[ FD ]
Line_3 $$ Socket socket = null-->Line_7 $$ OutputStream outputStream = socket.getOutputStream()[ FD ]
Line_12 $$ boolean forceCloseSocket = consumeHttpResponseHead(dataInputStream)-->Line_15 $$ returnSocket(socket, forceCloseSocket)[ FD ]
Line_6 $$ SPIAgentRequest spiAgentRequest = new SPIAgentRequest(request)-->Line_9 $$ spiAgentRequest.writeTo(registrationReference, outputStream)[ FD ]
Line_2 $$ public void service(HttpServletRequest request, HttpServletResponse response) throws PortalResiliencyException -->Line_14 $$ spiAgentResponse.populate(request, response)[ FD ]
Line_5 $$ socket = borrowSocket()-->Line_10 $$ InputStream inputStream = socket.getInputStream()[ FD ]
Line_7 $$ OutputStream outputStream = socket.getOutputStream()-->Line_9 $$ spiAgentRequest.writeTo(registrationReference, outputStream)[ FD ]
Line_3 $$ Socket socket = null-->Line_15 $$ returnSocket(socket, forceCloseSocket)[ FD ]
Line_16 $$ socket = null-->Line_22 $$ socket.close()[ FD ]
Line_3 $$ Socket socket = null-->Line_16 $$ socket = null[ FD ]
Line_13 $$ SPIAgentResponse spiAgentResponse = SPIAgentResponse.readFrom(dataInputStream)-->Line_14 $$ spiAgentResponse.populate(request, response)[ FD ]
Line_11 $$ DataInputStream dataInputStream = new DataInputStream(inputStream)-->Line_13 $$ SPIAgentResponse spiAgentResponse = SPIAgentResponse.readFrom(dataInputStream)[ FD ]
Line_3 $$ Socket socket = null-->Line_10 $$ InputStream inputStream = socket.getInputStream()[ FD ]
Line_11 $$ DataInputStream dataInputStream = new DataInputStream(inputStream)-->Line_12 $$ boolean forceCloseSocket = consumeHttpResponseHead(dataInputStream)[ FD ]
