Line_4 $$ final Socket socket = new Socket(managementClient.getWebUri().getHost(), 2020)-->Line_6 $$ final DataInputStream in = new DataInputStream(new TelnetInputStream(socket.getInputStream(), sockOut))[ FD ]
Line_6 $$ final DataInputStream in = new DataInputStream(new TelnetInputStream(socket.getInputStream(), sockOut))-->Line_9 $$ assertEquals("type 'help' for a list of commands", in.readLine())[ FD ]
Line_4 $$ final Socket socket = new Socket(managementClient.getWebUri().getHost(), 2020)-->Line_5 $$ final OutputStream sockOut = socket.getOutputStream()[ FD ]
Line_7 $$ final PrintStream out = new TelnetPrintStream(sockOut)-->Line_10 $$ out.println("set a b")[ FD ]
Line_6 $$ final DataInputStream in = new DataInputStream(new TelnetInputStream(socket.getInputStream(), sockOut))-->Line_13 $$ assertEmptyLine(in)[ FD ]
Line_7 $$ final PrintStream out = new TelnetPrintStream(sockOut)-->Line_11 $$ out.flush()[ FD ]
Line_7 $$ final PrintStream out = new TelnetPrintStream(sockOut)-->Line_18 $$ out.println("list")[ FD ]
Line_7 $$ final PrintStream out = new TelnetPrintStream(sockOut)-->Line_14 $$ out.println("get a")[ FD ]
Line_6 $$ final DataInputStream in = new DataInputStream(new TelnetInputStream(socket.getInputStream(), sockOut))-->Line_12 $$ assertReply("set a to b", in.readLine())[ FD ]
Line_6 $$ final DataInputStream in = new DataInputStream(new TelnetInputStream(socket.getInputStream(), sockOut))-->Line_20 $$ assertReply("a = b", in.readLine())[ FD ]
Line_7 $$ final PrintStream out = new TelnetPrintStream(sockOut)-->Line_15 $$ out.flush()[ FD ]
Line_6 $$ final DataInputStream in = new DataInputStream(new TelnetInputStream(socket.getInputStream(), sockOut))-->Line_21 $$ assertEmptyLine(in)[ FD ]
Line_7 $$ final PrintStream out = new TelnetPrintStream(sockOut)-->Line_19 $$ out.flush()[ FD ]
Line_6 $$ final DataInputStream in = new DataInputStream(new TelnetInputStream(socket.getInputStream(), sockOut))-->Line_16 $$ assertReply("b", in.readLine())[ FD ]
Line_6 $$ final DataInputStream in = new DataInputStream(new TelnetInputStream(socket.getInputStream(), sockOut))-->Line_17 $$ assertEmptyLine(in)[ FD ]
Line_6 $$ final DataInputStream in = new DataInputStream(new TelnetInputStream(socket.getInputStream(), sockOut))-->Line_8 $$ assertEmptyLine(in)[ FD ]
