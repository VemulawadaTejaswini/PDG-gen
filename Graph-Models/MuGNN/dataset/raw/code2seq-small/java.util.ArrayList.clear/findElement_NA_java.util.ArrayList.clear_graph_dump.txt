Line_13 $$ SpeedSearchObjectWithWeight cur = null-->Line_21 $$ final int i = element.compareWith(cur)[ FD ]
Line_16 $$ if (cur == null) -->Line_18 $$ current.add(cur)[ CD ]
Line_8 $$ String text = speedSearch.getElementText(element)-->Line_10 $$ elements.add(new SpeedSearchObjectWithWeight(element, speedSearch.getComparator().matchingDegree(pattern, text)))[ FD ]
Line_4 $$ pattern = pattern.trim()-->Line_10 $$ elements.add(new SpeedSearchObjectWithWeight(element, speedSearch.getComparator().matchingDegree(pattern, text)))[ FD ]
Line_2 $$ public static List<SpeedSearchObjectWithWeight> findElement(String pattern, SpeedSearchBase speedSearch) -->Line_5 $$ final ListIterator<Object> it = speedSearch.getElementIterator(0)[ FD ]
Line_22 $$ if (i == 0) -->Line_24 $$ if (i < 0) [ CD ]
Line_2 $$ public static List<SpeedSearchObjectWithWeight> findElement(String pattern, SpeedSearchBase speedSearch) -->Line_14 $$ ArrayList<SpeedSearchObjectWithWeight> current = new ArrayList<SpeedSearchObjectWithWeight>()[ CD ]
Line_13 $$ SpeedSearchObjectWithWeight cur = null-->Line_25 $$ cur = element[ FD ]
Line_2 $$ public static List<SpeedSearchObjectWithWeight> findElement(String pattern, SpeedSearchBase speedSearch) -->Line_4 $$ pattern = pattern.trim()[ CD ]
Line_24 $$ if (i < 0) -->Line_27 $$ current.add(cur)[ CD ]
Line_13 $$ SpeedSearchObjectWithWeight cur = null-->Line_16 $$ if (cur == null) [ FD ]
Line_13 $$ SpeedSearchObjectWithWeight cur = null-->Line_27 $$ current.add(cur)[ FD ]
Line_15 $$ for (SpeedSearchObjectWithWeight element : elements) -->Line_17 $$ cur = element[ FD ]
Line_9 $$ if (text != null) -->Line_10 $$ elements.add(new SpeedSearchObjectWithWeight(element, speedSearch.getComparator().matchingDegree(pattern, text)))[ CD ]
Line_7 $$ Object element = it.next()-->Line_25 $$ cur = element[ FD ]
Line_14 $$ ArrayList<SpeedSearchObjectWithWeight> current = new ArrayList<SpeedSearchObjectWithWeight>()-->Line_27 $$ current.add(cur)[ FD ]
Line_17 $$ cur = element-->Line_27 $$ current.add(cur)[ FD ]
Line_6 $$ while (it.hasNext()) -->Line_9 $$ if (text != null) [ CD ]
Line_17 $$ cur = element-->Line_21 $$ final int i = element.compareWith(cur)[ FD ]
Line_24 $$ if (i < 0) -->Line_25 $$ cur = element[ CD ]
Line_14 $$ ArrayList<SpeedSearchObjectWithWeight> current = new ArrayList<SpeedSearchObjectWithWeight>()-->Line_26 $$ current.clear()[ FD ]
Line_2 $$ public static List<SpeedSearchObjectWithWeight> findElement(String pattern, SpeedSearchBase speedSearch) -->Line_5 $$ final ListIterator<Object> it = speedSearch.getElementIterator(0)[ CD ]
Line_2 $$ public static List<SpeedSearchObjectWithWeight> findElement(String pattern, SpeedSearchBase speedSearch) -->Line_3 $$ List<SpeedSearchObjectWithWeight> elements = new ArrayList<SpeedSearchObjectWithWeight>()[ CD ]
Line_2 $$ public static List<SpeedSearchObjectWithWeight> findElement(String pattern, SpeedSearchBase speedSearch) -->Line_6 $$ while (it.hasNext()) [ CD ]
Line_17 $$ cur = element-->Line_25 $$ cur = element[ FD ]
Line_13 $$ SpeedSearchObjectWithWeight cur = null-->Line_18 $$ current.add(cur)[ FD ]
Line_5 $$ final ListIterator<Object> it = speedSearch.getElementIterator(0)-->Line_7 $$ Object element = it.next()[ FD ]
Line_21 $$ final int i = element.compareWith(cur)-->Line_24 $$ if (i < 0) [ FD ]
Line_7 $$ Object element = it.next()-->Line_21 $$ final int i = element.compareWith(cur)[ FD ]
Line_14 $$ ArrayList<SpeedSearchObjectWithWeight> current = new ArrayList<SpeedSearchObjectWithWeight>()-->Line_18 $$ current.add(cur)[ FD ]
Line_2 $$ public static List<SpeedSearchObjectWithWeight> findElement(String pattern, SpeedSearchBase speedSearch) -->Line_4 $$ pattern = pattern.trim()[ FD ]
Line_15 $$ for (SpeedSearchObjectWithWeight element : elements) -->Line_23 $$ current.add(element)[ FD ]
Line_25 $$ cur = element-->Line_27 $$ current.add(cur)[ FD ]
Line_15 $$ for (SpeedSearchObjectWithWeight element : elements) -->Line_25 $$ cur = element[ FD ]
Line_6 $$ while (it.hasNext()) -->Line_8 $$ String text = speedSearch.getElementText(element)[ CD ]
Line_14 $$ ArrayList<SpeedSearchObjectWithWeight> current = new ArrayList<SpeedSearchObjectWithWeight>()-->Line_23 $$ current.add(element)[ FD ]
Line_24 $$ if (i < 0) -->Line_26 $$ current.clear()[ CD ]
Line_2 $$ public static List<SpeedSearchObjectWithWeight> findElement(String pattern, SpeedSearchBase speedSearch) -->Line_10 $$ elements.add(new SpeedSearchObjectWithWeight(element, speedSearch.getComparator().matchingDegree(pattern, text)))[ FD ]
Line_5 $$ final ListIterator<Object> it = speedSearch.getElementIterator(0)-->Line_6 $$ while (it.hasNext()) [ FD ]
Line_22 $$ if (i == 0) -->Line_23 $$ current.add(element)[ CD ]
Line_8 $$ String text = speedSearch.getElementText(element)-->Line_9 $$ if (text != null) [ FD ]
Line_7 $$ Object element = it.next()-->Line_8 $$ String text = speedSearch.getElementText(element)[ FD ]
Line_15 $$ for (SpeedSearchObjectWithWeight element : elements) -->Line_21 $$ final int i = element.compareWith(cur)[ FD ]
Line_16 $$ if (cur == null) -->Line_17 $$ cur = element[ CD ]
Line_2 $$ public static List<SpeedSearchObjectWithWeight> findElement(String pattern, SpeedSearchBase speedSearch) -->Line_30 $$ return current[ CD ]
Line_13 $$ SpeedSearchObjectWithWeight cur = null-->Line_17 $$ cur = element[ FD ]
Line_2 $$ public static List<SpeedSearchObjectWithWeight> findElement(String pattern, SpeedSearchBase speedSearch) -->Line_13 $$ SpeedSearchObjectWithWeight cur = null[ CD ]
Line_2 $$ public static List<SpeedSearchObjectWithWeight> findElement(String pattern, SpeedSearchBase speedSearch) -->Line_8 $$ String text = speedSearch.getElementText(element)[ FD ]
Line_3 $$ List<SpeedSearchObjectWithWeight> elements = new ArrayList<SpeedSearchObjectWithWeight>()-->Line_10 $$ elements.add(new SpeedSearchObjectWithWeight(element, speedSearch.getComparator().matchingDegree(pattern, text)))[ FD ]
Line_17 $$ cur = element-->Line_18 $$ current.add(cur)[ FD ]
Line_7 $$ Object element = it.next()-->Line_23 $$ current.add(element)[ FD ]
Line_21 $$ final int i = element.compareWith(cur)-->Line_22 $$ if (i == 0) [ FD ]
Line_6 $$ while (it.hasNext()) -->Line_7 $$ Object element = it.next()[ CD ]
Line_7 $$ Object element = it.next()-->Line_17 $$ cur = element[ FD ]
