Line_6 $$ KeyManager[] keyManagers = securityDomain.getKeyManagers()-->Line_10 $$ sslCtx.init(keyManagers, trustManagers, null)[ FD ]
Line_3 $$ SSLContext sslCtx = null-->Line_10 $$ sslCtx.init(keyManagers, trustManagers, null)[ FD ]
Line_3 $$ SSLContext sslCtx = null-->Line_5 $$ sslCtx = SSLContext.getInstance("TLS")[ FD ]
Line_2 $$ static SSLContext forDomain(JSSESecurityDomain securityDomain) throws IOException -->Line_8 $$ throw IIOPLogger.ROOT_LOGGER.errorObtainingKeyManagers(securityDomain.getSecurityDomain())[ FD ]
Line_2 $$ static SSLContext forDomain(JSSESecurityDomain securityDomain) throws IOException -->Line_6 $$ KeyManager[] keyManagers = securityDomain.getKeyManagers()[ FD ]
Line_2 $$ static SSLContext forDomain(JSSESecurityDomain securityDomain) throws IOException -->Line_3 $$ SSLContext sslCtx = null[ CD ]
Line_2 $$ static SSLContext forDomain(JSSESecurityDomain securityDomain) throws IOException -->Line_9 $$ TrustManager[] trustManagers = securityDomain.getTrustManagers()[ FD ]
Line_9 $$ TrustManager[] trustManagers = securityDomain.getTrustManagers()-->Line_10 $$ sslCtx.init(keyManagers, trustManagers, null)[ FD ]
Line_5 $$ sslCtx = SSLContext.getInstance("TLS")-->Line_10 $$ sslCtx.init(keyManagers, trustManagers, null)[ FD ]
Line_6 $$ KeyManager[] keyManagers = securityDomain.getKeyManagers()-->Line_7 $$ if (keyManagers == null)[ FD ]
