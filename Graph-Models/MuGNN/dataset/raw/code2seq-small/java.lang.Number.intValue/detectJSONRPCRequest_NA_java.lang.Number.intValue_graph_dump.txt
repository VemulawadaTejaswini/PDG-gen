Line_11 $$ HashMap<Object, Object> requestBodyMap = jsonDeserializer.deserialize(requestBody)-->Line_19 $$ jsonrpcRequest._parameters = (Map<String, ?>) requestBodyMap.get("params")[ FD ]
Line_20 $$ if (Validator.isNull(jsonrpcRequest._method)) -->Line_21 $$ return null[ CD ]
Line_13 $$ Number id = (Number) requestBodyMap.get("id")-->Line_15 $$ jsonrpcRequest._id = Integer.valueOf(id.intValue())[ FD ]
Line_13 $$ Number id = (Number) requestBodyMap.get("id")-->Line_14 $$ if (id != null) [ FD ]
Line_25 $$ if (_log.isDebugEnabled()) -->Line_26 $$ _log.debug("Unable to parse JSON RPC request", e)[ CD ]
Line_5 $$ if (Validator.isNull(requestBody) || !requestBody.startsWith(StringPool.OPEN_CURLY_BRACE) || !requestBody.endsWith(StringPool.CLOSE_CURLY_BRACE)) -->Line_6 $$ return null[ CD ]
Line_8 $$ JSONDeserializer<HashMap<Object, Object>> jsonDeserializer = JSONFactoryUtil.createJSONDeserializer()-->Line_11 $$ HashMap<Object, Object> requestBodyMap = jsonDeserializer.deserialize(requestBody)[ FD ]
Line_14 $$ if (id != null) -->Line_15 $$ jsonrpcRequest._id = Integer.valueOf(id.intValue())[ CD ]
Line_8 $$ JSONDeserializer<HashMap<Object, Object>> jsonDeserializer = JSONFactoryUtil.createJSONDeserializer()-->Line_9 $$ jsonDeserializer.use(null, HashMap.class)[ FD ]
Line_11 $$ HashMap<Object, Object> requestBodyMap = jsonDeserializer.deserialize(requestBody)-->Line_18 $$ jsonrpcRequest._method = (String) requestBodyMap.get("method")[ FD ]
Line_11 $$ HashMap<Object, Object> requestBodyMap = jsonDeserializer.deserialize(requestBody)-->Line_13 $$ Number id = (Number) requestBodyMap.get("id")[ FD ]
Line_11 $$ HashMap<Object, Object> requestBodyMap = jsonDeserializer.deserialize(requestBody)-->Line_17 $$ jsonrpcRequest._jsonrpc = (String) requestBodyMap.get("jsonrpc")[ FD ]
Line_2 $$ public static JSONRPCRequest detectJSONRPCRequest(HttpServletRequest request) -->Line_4 $$ String requestBody = ServletUtil.readRequestBody(request)[ FD ]
Line_4 $$ String requestBody = ServletUtil.readRequestBody(request)-->Line_11 $$ HashMap<Object, Object> requestBodyMap = jsonDeserializer.deserialize(requestBody)[ FD ]
Line_8 $$ JSONDeserializer<HashMap<Object, Object>> jsonDeserializer = JSONFactoryUtil.createJSONDeserializer()-->Line_10 $$ jsonDeserializer.use("parameters", HashMap.class)[ FD ]
Line_4 $$ String requestBody = ServletUtil.readRequestBody(request)-->Line_5 $$ if (Validator.isNull(requestBody) || !requestBody.startsWith(StringPool.OPEN_CURLY_BRACE) || !requestBody.endsWith(StringPool.CLOSE_CURLY_BRACE)) [ FD ]
