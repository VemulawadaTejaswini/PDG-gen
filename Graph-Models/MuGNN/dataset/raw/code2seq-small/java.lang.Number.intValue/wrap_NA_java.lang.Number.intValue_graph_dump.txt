Line_2 $$ public <X> Integer wrap(X value, WrapperOptions options) -->Line_3 $$ if (value == null) [ FD ]
Line_2 $$ public <X> Integer wrap(X value, WrapperOptions options) -->Line_9 $$ if (Number.class.isInstance(value)) [ FD ]
Line_3 $$ if (value == null) -->Line_4 $$ return null[ CD ]
Line_2 $$ public <X> Integer wrap(X value, WrapperOptions options) -->Line_15 $$ throw unknownWrap(value.getClass())[ FD ]
Line_6 $$ if (Integer.class.isInstance(value)) -->Line_7 $$ return (Integer) value[ CD ]
Line_2 $$ public <X> Integer wrap(X value, WrapperOptions options) -->Line_6 $$ if (Integer.class.isInstance(value)) [ CD ]
Line_2 $$ public <X> Integer wrap(X value, WrapperOptions options) -->Line_12 $$ if (String.class.isInstance(value)) [ CD ]
Line_2 $$ public <X> Integer wrap(X value, WrapperOptions options) -->Line_6 $$ if (Integer.class.isInstance(value)) [ FD ]
Line_12 $$ if (String.class.isInstance(value)) -->Line_13 $$ return Integer.valueOf(((String) value))[ CD ]
Line_9 $$ if (Number.class.isInstance(value)) -->Line_10 $$ return ((Number) value).intValue()[ CD ]
Line_2 $$ public <X> Integer wrap(X value, WrapperOptions options) -->Line_9 $$ if (Number.class.isInstance(value)) [ CD ]
Line_2 $$ public <X> Integer wrap(X value, WrapperOptions options) -->Line_3 $$ if (value == null) [ CD ]
Line_2 $$ public <X> Integer wrap(X value, WrapperOptions options) -->Line_12 $$ if (String.class.isInstance(value)) [ FD ]
