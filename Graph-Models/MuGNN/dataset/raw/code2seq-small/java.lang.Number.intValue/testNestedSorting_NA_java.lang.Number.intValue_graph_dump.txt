Line_41 $$ document = new Document()-->Line_44 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_71 $$ document = new Document()[ FD ]
Line_63 $$ document = new Document()-->Line_85 $$ docs.add(document)[ FD ]
Line_49 $$ document = new Document()-->Line_54 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_8 $$ document = new Document()-->Line_86 $$ document = new Document()[ FD ]
Line_133 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_90 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_63 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_63 $$ document = new Document()-->Line_81 $$ docs.add(document)[ FD ]
Line_121 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_63 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_103 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_197 $$ assertThat(topDocs.scoreDocs[4].doc, equalTo(15))[ CD ]
Line_121 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_58 $$ docs.clear()[ CD ]
Line_53 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_86 $$ document = new Document()-->Line_97 $$ document = new Document()[ FD ]
Line_97 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_67 $$ document = new Document()-->Line_108 $$ docs.add(document)[ FD ]
Line_31 $$ document = new Document()-->Line_74 $$ docs.add(document)[ FD ]
Line_12 $$ document = new Document()-->Line_103 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_97 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_88 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_99 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_63 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_4 $$ Document document = new Document()-->Line_48 $$ docs.add(document)[ FD ]
Line_31 $$ document = new Document()-->Line_72 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_8 $$ document = new Document()-->Line_92 $$ document.add(createField("field1", 5))[ FD ]
Line_27 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_102 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_94 $$ writer.addDocuments(docs)[ CD ]
Line_59 $$ document = new Document()-->Line_91 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_8 $$ document = new Document()-->Line_14 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_35 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_73 $$ document.add(createField("field1", 4))[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_120 $$ docs.clear()[ FD ]
Line_121 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_90 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_16 $$ document = new Document()-->Line_88 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_53 $$ document = new Document()-->Line_63 $$ document = new Document()[ FD ]
Line_82 $$ document = new Document()-->Line_102 $$ document.add(createField("field2", 3))[ FD ]
Line_41 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_23 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_8 $$ document = new Document()-->Line_17 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_102 $$ document.add(createField("field2", 3))[ FD ]
Line_16 $$ document = new Document()-->Line_80 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_67 $$ document = new Document()-->Line_90 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_67 $$ document = new Document()-->Line_85 $$ docs.add(document)[ FD ]
Line_41 $$ document = new Document()-->Line_74 $$ docs.add(document)[ FD ]
Line_23 $$ document = new Document()-->Line_104 $$ docs.add(document)[ FD ]
Line_53 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_62 $$ docs.add(document)[ FD ]
Line_105 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_45 $$ document = new Document()-->Line_69 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_41 $$ document = new Document()-->Line_65 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_115 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_71 $$ document = new Document()-->Line_92 $$ document.add(createField("field1", 5))[ FD ]
Line_67 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_41 $$ document = new Document()-->Line_72 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_45 $$ document = new Document()-->Line_102 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_42 $$ document.add(createField("field2", 3))[ CD ]
Line_90 $$ document = new Document()-->Line_109 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_91 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ CD ]
Line_16 $$ document = new Document()-->Line_38 $$ docs.add(document)[ FD ]
Line_12 $$ document = new Document()-->Line_26 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_84 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_48 $$ docs.add(document)[ FD ]
Line_23 $$ document = new Document()-->Line_48 $$ docs.add(document)[ FD ]
Line_16 $$ document = new Document()-->Line_105 $$ document = new Document()[ FD ]
Line_16 $$ document = new Document()-->Line_54 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_78 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_49 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_121 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_105 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_83 $$ document.add(createField("field2", 3))[ CD ]
Line_23 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_45 $$ document = new Document()[ CD ]
Line_12 $$ document = new Document()-->Line_59 $$ document = new Document()[ FD ]
Line_53 $$ document = new Document()-->Line_83 $$ document.add(createField("field2", 3))[ FD ]
Line_63 $$ document = new Document()-->Line_66 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_43 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_86 $$ document = new Document()-->Line_89 $$ docs.add(document)[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_52 $$ docs.add(document)[ FD ]
Line_90 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_154 $$ Sort sort = new Sort(new SortField("field2", nestedComparatorSource))-->Line_230 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ FD ]
Line_125 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_97 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_8 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_109 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_105 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_61 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ CD ]
Line_78 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_90 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_101 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_128 $$ docs.add(document)[ FD ]
Line_67 $$ document = new Document()-->Line_83 $$ document.add(createField("field2", 3))[ FD ]
Line_49 $$ document = new Document()-->Line_56 $$ docs.add(document)[ FD ]
Line_101 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_13 $$ document.add(createField("field2", 3))[ FD ]
Line_35 $$ document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_49 $$ document = new Document()-->Line_66 $$ docs.add(document)[ FD ]
Line_71 $$ document = new Document()-->Line_99 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_23 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_45 $$ document = new Document()-->Line_54 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_59 $$ document = new Document()-->Line_102 $$ document.add(createField("field2", 3))[ FD ]
Line_12 $$ document = new Document()-->Line_23 $$ document = new Document()[ FD ]
Line_27 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_59 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_27 $$ document = new Document()-->Line_62 $$ docs.add(document)[ FD ]
Line_16 $$ document = new Document()-->Line_100 $$ docs.add(document)[ FD ]
Line_53 $$ document = new Document()-->Line_79 $$ document.add(createField("field2", 3))[ FD ]
Line_86 $$ document = new Document()-->Line_90 $$ document = new Document()[ FD ]
Line_35 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_59 $$ document = new Document()-->Line_71 $$ document = new Document()[ FD ]
Line_78 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_47 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_71 $$ document = new Document()-->Line_84 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_36 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_78 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_67 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_160 $$ assertThat(topDocs.scoreDocs[1].doc, equalTo(7))[ CD ]
Line_23 $$ document = new Document()-->Line_108 $$ docs.add(document)[ FD ]
Line_59 $$ document = new Document()-->Line_87 $$ document.add(createField("field2", 5))[ FD ]
Line_41 $$ document = new Document()-->Line_73 $$ document.add(createField("field1", 4))[ FD ]
Line_49 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_48 $$ docs.add(document)[ FD ]
Line_16 $$ document = new Document()-->Line_82 $$ document = new Document()[ FD ]
Line_148 $$ MultiValueMode sortMode = MultiValueMode.SUM-->Line_213 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, 127, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_8 $$ document = new Document()-->Line_54 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_83 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_174 $$ assertThat(topDocs.scoreDocs[1].doc, equalTo(23))[ CD ]
Line_8 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_11 $$ docs.add(document)[ FD ]
Line_53 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_115 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_49 $$ document = new Document()-->Line_62 $$ docs.add(document)[ FD ]
Line_49 $$ document = new Document()-->Line_93 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_78 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_63 $$ document = new Document()-->Line_79 $$ document.add(createField("field2", 3))[ FD ]
Line_82 $$ document = new Document()-->Line_87 $$ document.add(createField("field2", 5))[ FD ]
Line_97 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_63 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_112 $$ docs.add(document)[ CD ]
Line_101 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_53 $$ document = new Document()-->Line_60 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_102 $$ document.add(createField("field2", 3))[ CD ]
Line_16 $$ document = new Document()-->Line_56 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_99 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_53 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_16 $$ document = new Document()-->Line_55 $$ document.add(createField("field1", 3))[ FD ]
Line_35 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_59 $$ document = new Document()-->Line_86 $$ document = new Document()[ FD ]
Line_59 $$ document = new Document()-->Line_81 $$ docs.add(document)[ FD ]
Line_41 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_23 $$ document = new Document()-->Line_84 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_129 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_53 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_115 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_4 $$ Document document = new Document()[ CD ]
Line_101 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_78 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_53 $$ document = new Document()-->Line_104 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_150 $$ Query parentFilter = new TermQuery(new Term("__type", "parent"))-->Line_183 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, null, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_8 $$ document = new Document()-->Line_53 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_85 $$ docs.add(document)[ CD ]
Line_59 $$ document = new Document()-->Line_69 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_189 $$ assertThat(topDocs.scoreDocs[0].doc, equalTo(23))[ CD ]
Line_63 $$ document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_125 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_23 $$ document = new Document()-->Line_47 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_21 $$ writer.commit()[ CD ]
Line_31 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_71 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_82 $$ document = new Document()-->Line_105 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_104 $$ docs.add(document)[ FD ]
Line_31 $$ document = new Document()-->Line_90 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_78 $$ document = new Document()-->Line_87 $$ document.add(createField("field2", 5))[ FD ]
Line_35 $$ document = new Document()-->Line_86 $$ document = new Document()[ FD ]
Line_35 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_59 $$ document = new Document()-->Line_85 $$ docs.add(document)[ FD ]
Line_12 $$ document = new Document()-->Line_42 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_78 $$ document = new Document()[ CD ]
Line_49 $$ document = new Document()-->Line_53 $$ document = new Document()[ FD ]
Line_67 $$ document = new Document()-->Line_105 $$ document = new Document()[ FD ]
Line_67 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_71 $$ document = new Document()-->Line_79 $$ document.add(createField("field2", 3))[ FD ]
Line_35 $$ document = new Document()-->Line_41 $$ document = new Document()[ FD ]
Line_27 $$ document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_24 $$ document.add(createField("field2", 3))[ FD ]
Line_59 $$ document = new Document()-->Line_62 $$ docs.add(document)[ FD ]
Line_31 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_49 $$ document = new Document()-->Line_108 $$ docs.add(document)[ FD ]
Line_23 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_4 $$ Document document = new Document()-->Line_88 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_151 $$ Query childFilter = Queries.not(parentFilter)-->Line_213 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, 127, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_82 $$ document = new Document()-->Line_84 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_59 $$ document = new Document()-->Line_72 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_39 $$ writer.addDocuments(docs)[ CD ]
Line_59 $$ document = new Document()-->Line_66 $$ docs.add(document)[ FD ]
Line_82 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_27 $$ document = new Document()-->Line_98 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_133 $$ document = new Document()[ CD ]
Line_35 $$ document = new Document()-->Line_46 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_72 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ CD ]
Line_4 $$ Document document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_16 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_53 $$ document = new Document()-->Line_99 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_86 $$ document = new Document()-->Line_104 $$ docs.add(document)[ FD ]
Line_115 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_101 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_82 $$ document = new Document()-->Line_86 $$ document = new Document()[ FD ]
Line_4 $$ Document document = new Document()-->Line_51 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_102 $$ document.add(createField("field2", 3))[ FD ]
Line_35 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_71 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_16 $$ document = new Document()-->Line_29 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_90 $$ document = new Document()-->Line_105 $$ document = new Document()[ FD ]
Line_35 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_63 $$ document = new Document()-->Line_74 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_30 $$ docs.add(document)[ FD ]
Line_16 $$ document = new Document()-->Line_60 $$ document.add(createField("field2", 3))[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_30 $$ docs.add(document)[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_57 $$ writer.addDocuments(docs)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_150 $$ Query parentFilter = new TermQuery(new Term("__type", "parent"))[ CD ]
Line_168 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))-->Line_199 $$ sort = new Sort(new SortField("field2", nestedComparatorSource))[ FD ]
Line_90 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_149 $$ IndexSearcher searcher = new IndexSearcher(DirectoryReader.open(writer, false))-->Line_213 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, 127, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_129 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_67 $$ document = new Document()-->Line_68 $$ document.add(createField("field2", 4))[ FD ]
Line_41 $$ document = new Document()-->Line_98 $$ document.add(createField("field2", 3))[ FD ]
Line_49 $$ document = new Document()-->Line_65 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_86 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_129 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_155 $$ TopFieldDocs topDocs = searcher.search(query, 5, sort)[ CD ]
Line_16 $$ document = new Document()-->Line_85 $$ docs.add(document)[ FD ]
Line_121 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_91 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_87 $$ document.add(createField("field2", 5))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_141 $$ writer.addDocument(document)[ CD ]
Line_27 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_59 $$ document = new Document()-->Line_108 $$ docs.add(document)[ FD ]
Line_35 $$ document = new Document()-->Line_62 $$ docs.add(document)[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_112 $$ docs.add(document)[ FD ]
Line_45 $$ document = new Document()-->Line_108 $$ docs.add(document)[ FD ]
Line_31 $$ document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_6 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ CD ]
Line_23 $$ document = new Document()-->Line_69 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_53 $$ document = new Document()[ CD ]
Line_82 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_23 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_105 $$ document = new Document()[ CD ]
Line_41 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_41 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_105 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_44 $$ docs.add(document)[ FD ]
Line_45 $$ document = new Document()-->Line_62 $$ docs.add(document)[ FD ]
Line_90 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_115 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_35 $$ document = new Document()-->Line_97 $$ document = new Document()[ FD ]
Line_105 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_35 $$ document = new Document()-->Line_45 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_91 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_67 $$ document = new Document()-->Line_86 $$ document = new Document()[ FD ]
Line_67 $$ document = new Document()-->Line_88 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_65 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_121 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_78 $$ document = new Document()-->Line_88 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_71 $$ document = new Document()-->Line_91 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_71 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_41 $$ document = new Document()-->Line_92 $$ document.add(createField("field1", 5))[ FD ]
Line_12 $$ document = new Document()-->Line_28 $$ document.add(createField("field2", 3))[ FD ]
Line_97 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_35 $$ document = new Document()-->Line_91 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_53 $$ document = new Document()-->Line_55 $$ document.add(createField("field1", 3))[ FD ]
Line_4 $$ Document document = new Document()-->Line_27 $$ document = new Document()[ FD ]
Line_53 $$ document = new Document()-->Line_106 $$ document.add(createField("field2", 6))[ FD ]
Line_4 $$ Document document = new Document()-->Line_53 $$ document = new Document()[ FD ]
Line_27 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_142 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_8 $$ document = new Document()[ CD ]
Line_185 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))-->Line_214 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))[ FD ]
Line_41 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_206 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[1]).fields[0]).intValue(), equalTo(3))[ CD ]
Line_59 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_183 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, null, createNested(searcher, parentFilter, childFilter))-->Line_213 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, 127, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_82 $$ document = new Document()-->Line_89 $$ docs.add(document)[ FD ]
Line_8 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_137 $$ writer.addDocuments(docs)[ FD ]
Line_31 $$ document = new Document()-->Line_53 $$ document = new Document()[ FD ]
Line_49 $$ document = new Document()-->Line_74 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_66 $$ docs.add(document)[ FD ]
Line_23 $$ document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_12 $$ document = new Document()-->Line_101 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_213 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, 127, createNested(searcher, parentFilter, childFilter))[ CD ]
Line_186 $$ topDocs = searcher.search(query, 5, sort)-->Line_230 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ FD ]
Line_8 $$ document = new Document()-->Line_16 $$ document = new Document()[ FD ]
Line_16 $$ document = new Document()-->Line_51 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_53 $$ document = new Document()-->Line_92 $$ document.add(createField("field1", 5))[ FD ]
Line_109 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_82 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_13 $$ document.add(createField("field2", 3))[ CD ]
Line_4 $$ Document document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_99 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ CD ]
Line_35 $$ document = new Document()-->Line_44 $$ docs.add(document)[ FD ]
Line_23 $$ document = new Document()-->Line_106 $$ document.add(createField("field2", 6))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_128 $$ docs.add(document)[ CD ]
Line_45 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_49 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_16 $$ document = new Document()-->Line_64 $$ document.add(createField("field2", 3))[ FD ]
Line_183 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, null, createNested(searcher, parentFilter, childFilter))-->Line_228 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, -127, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_63 $$ document = new Document()-->Line_67 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_82 $$ document = new Document()[ CD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_75 $$ writer.addDocuments(docs)[ FD ]
Line_67 $$ document = new Document()-->Line_103 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_105 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_45 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_35 $$ document = new Document()-->Line_105 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_51 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_67 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_90 $$ document = new Document()-->Line_93 $$ docs.add(document)[ FD ]
Line_49 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_125 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_97 $$ document = new Document()[ FD ]
Line_41 $$ document = new Document()-->Line_66 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_186 $$ topDocs = searcher.search(query, 5, sort)[ CD ]
Line_31 $$ document = new Document()-->Line_70 $$ docs.add(document)[ FD ]
Line_41 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_41 $$ document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_27 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_109 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_162 $$ assertThat(topDocs.scoreDocs[2].doc, equalTo(3))[ CD ]
Line_12 $$ document = new Document()-->Line_56 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_55 $$ document.add(createField("field1", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_119 $$ writer.commit()[ CD ]
Line_16 $$ document = new Document()-->Line_97 $$ document = new Document()[ FD ]
Line_4 $$ Document document = new Document()-->Line_85 $$ docs.add(document)[ FD ]
Line_12 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_71 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_53 $$ document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_12 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_41 $$ document = new Document()-->Line_64 $$ document.add(createField("field2", 3))[ FD ]
Line_86 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_23 $$ document = new Document()-->Line_62 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_4 $$ Document document = new Document()-->Line_59 $$ document = new Document()[ FD ]
Line_59 $$ document = new Document()-->Line_84 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_101 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_71 $$ document = new Document()-->Line_98 $$ document.add(createField("field2", 3))[ FD ]
Line_49 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_84 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_121 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_49 $$ document = new Document()-->Line_105 $$ document = new Document()[ FD ]
Line_154 $$ Sort sort = new Sort(new SortField("field2", nestedComparatorSource))-->Line_229 $$ sort = new Sort(new SortField("field2", nestedComparatorSource))[ FD ]
Line_8 $$ document = new Document()-->Line_87 $$ document.add(createField("field2", 5))[ FD ]
Line_41 $$ document = new Document()-->Line_79 $$ document.add(createField("field2", 3))[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_94 $$ writer.addDocuments(docs)[ FD ]
Line_78 $$ document = new Document()-->Line_93 $$ docs.add(document)[ FD ]
Line_97 $$ document = new Document()-->Line_105 $$ document = new Document()[ FD ]
Line_16 $$ document = new Document()-->Line_17 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_50 $$ document.add(createField("field2", 1))[ FD ]
Line_53 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_82 $$ document = new Document()-->Line_97 $$ document = new Document()[ FD ]
Line_59 $$ document = new Document()-->Line_106 $$ document.add(createField("field2", 6))[ FD ]
Line_4 $$ Document document = new Document()-->Line_68 $$ document.add(createField("field2", 4))[ FD ]
Line_63 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_67 $$ document = new Document()-->Line_102 $$ document.add(createField("field2", 3))[ FD ]
Line_8 $$ document = new Document()-->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_49 $$ document = new Document()-->Line_101 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_44 $$ docs.add(document)[ CD ]
Line_82 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_79 $$ document.add(createField("field2", 3))[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_44 $$ docs.add(document)[ FD ]
Line_125 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_51 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_59 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_90 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_82 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_149 $$ IndexSearcher searcher = new IndexSearcher(DirectoryReader.open(writer, false))-->Line_152 $$ XFieldComparatorSource nestedComparatorSource = createFieldComparator("field2", sortMode, null, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_53 $$ document = new Document()-->Line_87 $$ document.add(createField("field2", 5))[ FD ]
Line_97 $$ document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_41 $$ document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_78 $$ document = new Document()-->Line_106 $$ document.add(createField("field2", 6))[ FD ]
Line_139 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_8 $$ document = new Document()-->Line_56 $$ docs.add(document)[ FD ]
Line_49 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_82 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_35 $$ document = new Document()-->Line_92 $$ document.add(createField("field1", 5))[ FD ]
Line_41 $$ document = new Document()-->Line_91 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_67 $$ document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_108 $$ docs.add(document)[ FD ]
Line_12 $$ document = new Document()-->Line_41 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_82 $$ document = new Document()[ FD ]
Line_4 $$ Document document = new Document()-->Line_8 $$ document = new Document()[ FD ]
Line_53 $$ document = new Document()-->Line_101 $$ document = new Document()[ FD ]
Line_41 $$ document = new Document()-->Line_90 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_55 $$ document.add(createField("field1", 3))[ FD ]
Line_16 $$ document = new Document()-->Line_87 $$ document.add(createField("field2", 5))[ FD ]
Line_49 $$ document = new Document()-->Line_98 $$ document.add(createField("field2", 3))[ FD ]
Line_12 $$ document = new Document()-->Line_16 $$ document = new Document()[ FD ]
Line_49 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_71 $$ document = new Document()-->Line_97 $$ document = new Document()[ FD ]
Line_35 $$ document = new Document()-->Line_98 $$ document.add(createField("field2", 3))[ FD ]
Line_125 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_78 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_231 $$ assertThat(topDocs.totalHits, equalTo(8))[ CD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_223 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[2]).fields[0]).intValue(), equalTo(12))[ CD ]
Line_185 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))-->Line_230 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_89 $$ docs.add(document)[ CD ]
Line_8 $$ document = new Document()-->Line_90 $$ document = new Document()[ FD ]
Line_105 $$ document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_35 $$ document = new Document()-->Line_102 $$ document.add(createField("field2", 3))[ FD ]
Line_101 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_153 $$ ToParentBlockJoinQuery query = new ToParentBlockJoinQuery(new ConstantScoreQuery(childFilter), new QueryBitSetProducer(parentFilter), ScoreMode.None)-->Line_186 $$ topDocs = searcher.search(query, 5, sort)[ FD ]
Line_16 $$ document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_225 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[3]).fields[0]).intValue(), equalTo(9))[ CD ]
Line_67 $$ document = new Document()-->Line_99 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_45 $$ document = new Document()-->Line_71 $$ document = new Document()[ FD ]
Line_35 $$ document = new Document()-->Line_51 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_35 $$ document = new Document()-->Line_64 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_230 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ CD ]
Line_23 $$ document = new Document()-->Line_27 $$ document = new Document()[ FD ]
Line_35 $$ document = new Document()-->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_82 $$ document = new Document()-->Line_108 $$ docs.add(document)[ FD ]
Line_115 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_23 $$ document = new Document()-->Line_109 $$ document = new Document()[ FD ]
Line_16 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_115 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_113 $$ writer.addDocuments(docs)[ CD ]
Line_35 $$ document = new Document()-->Line_93 $$ docs.add(document)[ FD ]
Line_71 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_71 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_43 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_144 $$ writer.addDocument(document)[ CD ]
Line_35 $$ document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_49 $$ document = new Document()-->Line_73 $$ document.add(createField("field1", 4))[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_38 $$ docs.add(document)[ FD ]
Line_109 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_175 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[1]).fields[0]).intValue(), equalTo(12))[ CD ]
Line_16 $$ document = new Document()-->Line_49 $$ document = new Document()[ FD ]
Line_63 $$ document = new Document()-->Line_101 $$ document = new Document()[ FD ]
Line_105 $$ document = new Document()-->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_53 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_138 $$ writer.commit()[ CD ]
Line_8 $$ document = new Document()-->Line_63 $$ document = new Document()[ FD ]
Line_97 $$ document = new Document()-->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_27 $$ document = new Document()[ CD ]
Line_109 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_90 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_233 $$ assertThat(topDocs.scoreDocs[0].doc, equalTo(19))[ CD ]
Line_78 $$ document = new Document()-->Line_98 $$ document.add(createField("field2", 3))[ FD ]
Line_12 $$ document = new Document()-->Line_71 $$ document = new Document()[ FD ]
Line_59 $$ document = new Document()-->Line_88 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_49 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_78 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_89 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_54 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_23 $$ document = new Document()-->Line_26 $$ docs.add(document)[ FD ]
Line_63 $$ document = new Document()-->Line_99 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_67 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_18 $$ document.add(createField("field1", 1))[ CD ]
Line_105 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_4 $$ Document document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_90 $$ document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_56 $$ docs.add(document)[ FD ]
Line_115 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_53 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_71 $$ document = new Document()[ FD ]
Line_27 $$ document = new Document()-->Line_51 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_45 $$ document = new Document()-->Line_106 $$ document.add(createField("field2", 6))[ FD ]
Line_27 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_105 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_78 $$ document = new Document()-->Line_102 $$ document.add(createField("field2", 3))[ FD ]
Line_8 $$ document = new Document()-->Line_68 $$ document.add(createField("field2", 4))[ FD ]
Line_86 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_109 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_82 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_198 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[4]).fields[0]).intValue(), equalTo(3))[ CD ]
Line_4 $$ Document document = new Document()-->Line_79 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_20 $$ writer.addDocuments(docs)[ CD ]
Line_16 $$ document = new Document()-->Line_61 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_71 $$ document = new Document()-->Line_93 $$ docs.add(document)[ FD ]
Line_35 $$ document = new Document()-->Line_79 $$ document.add(createField("field2", 3))[ FD ]
Line_109 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ CD ]
Line_41 $$ document = new Document()-->Line_71 $$ document = new Document()[ FD ]
Line_27 $$ document = new Document()-->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_59 $$ document = new Document()[ CD ]
Line_109 $$ document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_8 $$ document = new Document()-->Line_66 $$ docs.add(document)[ FD ]
Line_8 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_202 $$ assertThat(topDocs.scoreDocs.length, equalTo(5))[ CD ]
Line_8 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_53 $$ document = new Document()-->Line_102 $$ document.add(createField("field2", 3))[ FD ]
Line_49 $$ document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_151 $$ Query childFilter = Queries.not(parentFilter)-->Line_152 $$ XFieldComparatorSource nestedComparatorSource = createFieldComparator("field2", sortMode, null, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_35 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_71 $$ document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_93 $$ docs.add(document)[ FD ]
Line_8 $$ document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_65 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_35 $$ document = new Document()-->Line_81 $$ docs.add(document)[ FD ]
Line_41 $$ document = new Document()-->Line_85 $$ docs.add(document)[ FD ]
Line_45 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_49 $$ document = new Document()-->Line_78 $$ document = new Document()[ FD ]
Line_169 $$ topDocs = searcher.search(query, 5, sort)-->Line_230 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ FD ]
Line_27 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_236 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[1]).fields[0]).intValue(), equalTo(-127))[ CD ]
Line_41 $$ document = new Document()-->Line_80 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_109 $$ document = new Document()[ FD ]
Line_82 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_27 $$ document = new Document()-->Line_53 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_4 $$ Document document = new Document()-->Line_56 $$ docs.add(document)[ FD ]
Line_45 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_90 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_98 $$ document.add(createField("field2", 3))[ FD ]
Line_154 $$ Sort sort = new Sort(new SortField("field2", nestedComparatorSource))-->Line_199 $$ sort = new Sort(new SortField("field2", nestedComparatorSource))[ FD ]
Line_133 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_16 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_35 $$ document = new Document()[ FD ]
Line_59 $$ document = new Document()-->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_101 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_86 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_23 $$ document = new Document()-->Line_99 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_45 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_82 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_41 $$ document = new Document()-->Line_46 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_71 $$ document = new Document()[ CD ]
Line_4 $$ Document document = new Document()-->Line_82 $$ document = new Document()[ FD ]
Line_139 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_121 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_59 $$ document = new Document()-->Line_78 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_70 $$ docs.add(document)[ FD ]
Line_59 $$ document = new Document()-->Line_73 $$ document.add(createField("field1", 4))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_181 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[4]).fields[0]).intValue(), equalTo(9))[ CD ]
Line_16 $$ document = new Document()-->Line_104 $$ docs.add(document)[ FD ]
Line_155 $$ TopFieldDocs topDocs = searcher.search(query, 5, sort)-->Line_186 $$ topDocs = searcher.search(query, 5, sort)[ FD ]
Line_16 $$ document = new Document()-->Line_101 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_53 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_90 $$ document = new Document()[ CD ]
Line_78 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_59 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_45 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_73 $$ document.add(createField("field1", 4))[ FD ]
Line_45 $$ document = new Document()-->Line_80 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_71 $$ document = new Document()-->Line_80 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_8 $$ document = new Document()-->Line_23 $$ document = new Document()[ FD ]
Line_63 $$ document = new Document()-->Line_65 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_23 $$ document = new Document()-->Line_105 $$ document = new Document()[ FD ]
Line_63 $$ document = new Document()-->Line_91 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_63 $$ document = new Document()-->Line_89 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_228 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, -127, createNested(searcher, parentFilter, childFilter))[ CD ]
Line_82 $$ document = new Document()-->Line_91 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_97 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_49 $$ document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_63 $$ document = new Document()-->Line_104 $$ docs.add(document)[ FD ]
Line_35 $$ document = new Document()-->Line_74 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_31 $$ document = new Document()-->Line_41 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_90 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_91 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_97 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_14 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_78 $$ document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_63 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_16 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_49 $$ document = new Document()-->Line_82 $$ document = new Document()[ FD ]
Line_4 $$ Document document = new Document()-->Line_31 $$ document = new Document()[ FD ]
Line_97 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_49 $$ document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_49 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_82 $$ document = new Document()-->Line_103 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_49 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_4 $$ Document document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_41 $$ document = new Document()-->Line_60 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_204 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[0]).fields[0]).intValue(), equalTo(3))[ CD ]
Line_82 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_59 $$ document = new Document()-->Line_74 $$ docs.add(document)[ FD ]
Line_16 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ CD ]
Line_8 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_63 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_154 $$ Sort sort = new Sort(new SortField("field2", nestedComparatorSource))-->Line_215 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ CD ]
Line_153 $$ ToParentBlockJoinQuery query = new ToParentBlockJoinQuery(new ConstantScoreQuery(childFilter), new QueryBitSetProducer(parentFilter), ScoreMode.None)-->Line_200 $$ topDocs = searcher.search(query, 5, sort)[ FD ]
Line_16 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_8 $$ document = new Document()-->Line_45 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_102 $$ document.add(createField("field2", 3))[ FD ]
Line_41 $$ document = new Document()-->Line_97 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_53 $$ document = new Document()-->Line_54 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ CD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_64 $$ document.add(createField("field2", 3))[ CD ]
Line_12 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_78 $$ document = new Document()-->Line_83 $$ document.add(createField("field2", 3))[ FD ]
Line_27 $$ document = new Document()-->Line_49 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_101 $$ document = new Document()[ FD ]
Line_27 $$ document = new Document()-->Line_67 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_84 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_86 $$ document = new Document()-->Line_103 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_35 $$ document = new Document()[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_74 $$ docs.add(document)[ FD ]
Line_129 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_35 $$ document = new Document()-->Line_99 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_53 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_67 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_49 $$ document = new Document()-->Line_79 $$ document.add(createField("field2", 3))[ FD ]
Line_27 $$ document = new Document()-->Line_31 $$ document = new Document()[ FD ]
Line_49 $$ document = new Document()-->Line_91 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_49 $$ document = new Document()-->Line_89 $$ docs.add(document)[ FD ]
Line_59 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_154 $$ Sort sort = new Sort(new SortField("field2", nestedComparatorSource))-->Line_185 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))[ FD ]
Line_71 $$ document = new Document()-->Line_87 $$ document.add(createField("field2", 5))[ FD ]
Line_23 $$ document = new Document()-->Line_34 $$ docs.add(document)[ FD ]
Line_12 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_122 $$ document.add(createField("field2", 3))[ CD ]
Line_31 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_63 $$ document = new Document()-->Line_70 $$ docs.add(document)[ FD ]
Line_97 $$ document = new Document()-->Line_108 $$ docs.add(document)[ FD ]
Line_23 $$ document = new Document()-->Line_103 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_161 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[1]).fields[0]).intValue(), equalTo(8))[ CD ]
Line_109 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_45 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_23 $$ document = new Document()-->Line_55 $$ document.add(createField("field1", 3))[ FD ]
Line_82 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_142 $$ document = new Document()[ CD ]
Line_8 $$ document = new Document()-->Line_30 $$ docs.add(document)[ FD ]
Line_12 $$ document = new Document()-->Line_89 $$ docs.add(document)[ FD ]
Line_97 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_88 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_67 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_67 $$ document = new Document()[ CD ]
Line_16 $$ document = new Document()-->Line_46 $$ document.add(createField("field2", 3))[ FD ]
Line_27 $$ document = new Document()-->Line_44 $$ docs.add(document)[ FD ]
Line_78 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_35 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_41 $$ document = new Document()-->Line_48 $$ docs.add(document)[ FD ]
Line_86 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_63 $$ document = new Document()-->Line_86 $$ document = new Document()[ FD ]
Line_41 $$ document = new Document()-->Line_42 $$ document.add(createField("field2", 3))[ FD ]
Line_53 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_56 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_73 $$ document.add(createField("field1", 4))[ CD ]
Line_31 $$ document = new Document()-->Line_108 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_101 $$ document = new Document()[ CD ]
Line_185 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))-->Line_215 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ FD ]
Line_31 $$ document = new Document()-->Line_52 $$ docs.add(document)[ FD ]
Line_45 $$ document = new Document()-->Line_63 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_17 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_101 $$ document = new Document()[ FD ]
Line_185 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))-->Line_186 $$ topDocs = searcher.search(query, 5, sort)[ FD ]
Line_41 $$ document = new Document()-->Line_81 $$ docs.add(document)[ FD ]
Line_86 $$ document = new Document()-->Line_92 $$ document.add(createField("field1", 5))[ FD ]
Line_82 $$ document = new Document()-->Line_100 $$ docs.add(document)[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_104 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_240 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[3]).fields[0]).intValue(), equalTo(3))[ CD ]
Line_41 $$ document = new Document()-->Line_82 $$ document = new Document()[ FD ]
Line_101 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_74 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_79 $$ document.add(createField("field2", 3))[ FD ]
Line_168 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))-->Line_185 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))[ FD ]
Line_101 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_101 $$ document = new Document()-->Line_102 $$ document.add(createField("field2", 3))[ FD ]
Line_23 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_33 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_81 $$ docs.add(document)[ CD ]
Line_35 $$ document = new Document()-->Line_108 $$ docs.add(document)[ FD ]
Line_23 $$ document = new Document()-->Line_63 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_70 $$ docs.add(document)[ FD ]
Line_67 $$ document = new Document()-->Line_73 $$ document.add(createField("field1", 4))[ FD ]
Line_4 $$ Document document = new Document()-->Line_42 $$ document.add(createField("field2", 3))[ FD ]
Line_53 $$ document = new Document()-->Line_98 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_7 $$ docs.add(document)[ CD ]
Line_16 $$ document = new Document()-->Line_23 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_85 $$ docs.add(document)[ FD ]
Line_82 $$ document = new Document()-->Line_104 $$ docs.add(document)[ FD ]
Line_101 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_82 $$ document = new Document()-->Line_83 $$ document.add(createField("field2", 3))[ FD ]
Line_31 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_27 $$ document = new Document()-->Line_65 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_63 $$ document = new Document()-->Line_105 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_61 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_101 $$ document = new Document()-->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_63 $$ document = new Document()[ CD ]
Line_31 $$ document = new Document()-->Line_33 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_82 $$ document = new Document()-->Line_99 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_118 $$ writer.addDocument(document)[ CD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_36 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ CD ]
Line_31 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_53 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_41 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_27 $$ document = new Document()-->Line_32 $$ document.add(createField("field2", 2))[ FD ]
Line_90 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_82 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_152 $$ XFieldComparatorSource nestedComparatorSource = createFieldComparator("field2", sortMode, null, createNested(searcher, parentFilter, childFilter))-->Line_183 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, null, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_59 $$ document = new Document()-->Line_67 $$ document = new Document()[ FD ]
Line_41 $$ document = new Document()-->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_45 $$ document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_103 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_97 $$ document = new Document()-->Line_104 $$ docs.add(document)[ FD ]
Line_16 $$ document = new Document()-->Line_98 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_172 $$ assertThat(topDocs.scoreDocs[0].doc, equalTo(28))[ CD ]
Line_49 $$ document = new Document()-->Line_69 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_41 $$ document = new Document()-->Line_54 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_80 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_41 $$ document = new Document()-->Line_49 $$ document = new Document()[ FD ]
Line_97 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_41 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_115 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_53 $$ document = new Document()-->Line_82 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_85 $$ docs.add(document)[ FD ]
Line_12 $$ document = new Document()-->Line_64 $$ document.add(createField("field2", 3))[ FD ]
Line_35 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_173 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[0]).fields[0]).intValue(), equalTo(13))[ CD ]
Line_41 $$ document = new Document()-->Line_78 $$ document = new Document()[ FD ]
Line_121 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_53 $$ document = new Document()-->Line_74 $$ docs.add(document)[ FD ]
Line_35 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_101 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_63 $$ document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_150 $$ Query parentFilter = new TermQuery(new Term("__type", "parent"))-->Line_152 $$ XFieldComparatorSource nestedComparatorSource = createFieldComparator("field2", sortMode, null, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_8 $$ document = new Document()-->Line_13 $$ document.add(createField("field2", 3))[ FD ]
Line_8 $$ document = new Document()-->Line_12 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_50 $$ document.add(createField("field2", 1))[ FD ]
Line_53 $$ document = new Document()-->Line_56 $$ docs.add(document)[ FD ]
Line_67 $$ document = new Document()-->Line_69 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_41 $$ document = new Document()-->Line_101 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ CD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_114 $$ writer.commit()[ CD ]
Line_63 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_193 $$ assertThat(topDocs.scoreDocs[2].doc, equalTo(7))[ CD ]
Line_129 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_86 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_49 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_153 $$ ToParentBlockJoinQuery query = new ToParentBlockJoinQuery(new ConstantScoreQuery(childFilter), new QueryBitSetProducer(parentFilter), ScoreMode.None)-->Line_184 $$ query = new ToParentBlockJoinQuery(new ConstantScoreQuery(childFilter), new QueryBitSetProducer(parentFilter), ScoreMode.None)[ FD ]
Line_142 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_16 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_90 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_88 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ CD ]
Line_63 $$ document = new Document()-->Line_109 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_38 $$ docs.add(document)[ FD ]
Line_101 $$ document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_16 $$ document = new Document()-->Line_19 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_49 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_23 $$ document = new Document()-->Line_92 $$ document.add(createField("field1", 5))[ FD ]
Line_49 $$ document = new Document()-->Line_87 $$ document.add(createField("field2", 5))[ FD ]
Line_31 $$ document = new Document()-->Line_69 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_53 $$ document = new Document()-->Line_84 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_30 $$ docs.add(document)[ CD ]
Line_105 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_85 $$ docs.add(document)[ FD ]
Line_154 $$ Sort sort = new Sort(new SortField("field2", nestedComparatorSource))-->Line_155 $$ TopFieldDocs topDocs = searcher.search(query, 5, sort)[ FD ]
Line_35 $$ document = new Document()-->Line_87 $$ document.add(createField("field2", 5))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_70 $$ docs.add(document)[ CD ]
Line_23 $$ document = new Document()-->Line_83 $$ document.add(createField("field2", 3))[ FD ]
Line_4 $$ Document document = new Document()-->Line_64 $$ document.add(createField("field2", 3))[ FD ]
Line_27 $$ document = new Document()-->Line_87 $$ document.add(createField("field2", 5))[ FD ]
Line_31 $$ document = new Document()-->Line_98 $$ document.add(createField("field2", 3))[ FD ]
Line_4 $$ Document document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_109 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_133 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_31 $$ document = new Document()-->Line_54 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_53 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_35 $$ document = new Document()[ CD ]
Line_8 $$ document = new Document()-->Line_78 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_61 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_180 $$ assertThat(topDocs.scoreDocs[4].doc, equalTo(3))[ CD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ CD ]
Line_41 $$ document = new Document()-->Line_55 $$ document.add(createField("field1", 3))[ FD ]
Line_27 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_82 $$ document = new Document()-->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_105 $$ document = new Document()-->Line_108 $$ docs.add(document)[ FD ]
Line_71 $$ document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_109 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_109 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_59 $$ document = new Document()-->Line_93 $$ docs.add(document)[ FD ]
Line_35 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_4 $$ Document document = new Document()-->Line_62 $$ docs.add(document)[ FD ]
Line_41 $$ document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_35 $$ document = new Document()[ FD ]
Line_35 $$ document = new Document()-->Line_82 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_28 $$ document.add(createField("field2", 3))[ CD ]
Line_23 $$ document = new Document()-->Line_65 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_71 $$ document = new Document()-->Line_102 $$ document.add(createField("field2", 3))[ FD ]
Line_12 $$ document = new Document()-->Line_45 $$ document = new Document()[ FD ]
Line_49 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_168 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))-->Line_215 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ FD ]
Line_12 $$ document = new Document()-->Line_13 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_19 $$ docs.add(document)[ CD ]
Line_109 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_5 $$ document.add(createField("field2", 3))[ CD ]
Line_23 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_67 $$ document = new Document()-->Line_109 $$ document = new Document()[ FD ]
Line_115 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_59 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_78 $$ document = new Document()-->Line_100 $$ docs.add(document)[ FD ]
Line_78 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_100 $$ docs.add(document)[ FD ]
Line_67 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_63 $$ document = new Document()-->Line_84 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_38 $$ docs.add(document)[ FD ]
Line_49 $$ document = new Document()-->Line_67 $$ document = new Document()[ FD ]
Line_82 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_27 $$ document = new Document()-->Line_34 $$ docs.add(document)[ FD ]
Line_139 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_16 $$ document = new Document()-->Line_70 $$ docs.add(document)[ FD ]
Line_35 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_149 $$ IndexSearcher searcher = new IndexSearcher(DirectoryReader.open(writer, false))-->Line_230 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ FD ]
Line_4 $$ Document document = new Document()-->Line_92 $$ document.add(createField("field1", 5))[ FD ]
Line_12 $$ document = new Document()-->Line_66 $$ docs.add(document)[ FD ]
Line_8 $$ document = new Document()-->Line_55 $$ document.add(createField("field1", 3))[ FD ]
Line_16 $$ document = new Document()-->Line_84 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_200 $$ topDocs = searcher.search(query, 5, sort)-->Line_230 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_69 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ CD ]
Line_41 $$ document = new Document()-->Line_63 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_67 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_101 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_242 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[4]).fields[0]).intValue(), equalTo(7))[ CD ]
Line_101 $$ document = new Document()-->Line_105 $$ document = new Document()[ FD ]
Line_35 $$ document = new Document()-->Line_66 $$ docs.add(document)[ FD ]
Line_23 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_35 $$ document = new Document()-->Line_52 $$ docs.add(document)[ FD ]
Line_23 $$ document = new Document()-->Line_97 $$ document = new Document()[ FD ]
Line_27 $$ document = new Document()-->Line_101 $$ document = new Document()[ FD ]
Line_169 $$ topDocs = searcher.search(query, 5, sort)-->Line_186 $$ topDocs = searcher.search(query, 5, sort)[ FD ]
Line_82 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_79 $$ document.add(createField("field2", 3))[ CD ]
Line_23 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_90 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_48 $$ docs.add(document)[ FD ]
Line_16 $$ document = new Document()-->Line_99 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_45 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_8 $$ document = new Document()-->Line_83 $$ document.add(createField("field2", 3))[ FD ]
Line_49 $$ document = new Document()-->Line_90 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_203 $$ assertThat(topDocs.scoreDocs[0].doc, equalTo(15))[ CD ]
Line_63 $$ document = new Document()-->Line_83 $$ document.add(createField("field2", 3))[ FD ]
Line_63 $$ document = new Document()-->Line_82 $$ document = new Document()[ FD ]
Line_49 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_53 $$ document = new Document()-->Line_73 $$ document.add(createField("field1", 4))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_92 $$ document.add(createField("field1", 5))[ CD ]
Line_12 $$ document = new Document()-->Line_93 $$ docs.add(document)[ FD ]
Line_59 $$ document = new Document()-->Line_92 $$ document.add(createField("field1", 5))[ FD ]
Line_27 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_125 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_49 $$ document = new Document()-->Line_86 $$ document = new Document()[ FD ]
Line_53 $$ document = new Document()-->Line_90 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_115 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_59 $$ document = new Document()-->Line_82 $$ document = new Document()[ FD ]
Line_53 $$ document = new Document()-->Line_86 $$ document = new Document()[ FD ]
Line_49 $$ document = new Document()-->Line_55 $$ document.add(createField("field1", 3))[ FD ]
Line_90 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_105 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_27 $$ document = new Document()-->Line_47 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_105 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_184 $$ query = new ToParentBlockJoinQuery(new ConstantScoreQuery(childFilter), new QueryBitSetProducer(parentFilter), ScoreMode.None)-->Line_200 $$ topDocs = searcher.search(query, 5, sort)[ FD ]
Line_150 $$ Query parentFilter = new TermQuery(new Term("__type", "parent"))-->Line_243 $$ assertAvgScoreMode(parentFilter, searcher)[ FD ]
Line_78 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_41 $$ document = new Document()-->Line_61 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_59 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_45 $$ document = new Document()-->Line_50 $$ document.add(createField("field2", 1))[ FD ]
Line_71 $$ document = new Document()-->Line_101 $$ document = new Document()[ FD ]
Line_155 $$ TopFieldDocs topDocs = searcher.search(query, 5, sort)-->Line_230 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ FD ]
Line_86 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_16 $$ document = new Document()-->Line_47 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_86 $$ document = new Document()-->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_48 $$ docs.add(document)[ CD ]
Line_71 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_100 $$ docs.add(document)[ FD ]
Line_129 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_41 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_59 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_79 $$ document.add(createField("field2", 3))[ FD ]
Line_8 $$ document = new Document()-->Line_48 $$ docs.add(document)[ FD ]
Line_23 $$ document = new Document()-->Line_87 $$ document.add(createField("field2", 5))[ FD ]
Line_16 $$ document = new Document()-->Line_28 $$ document.add(createField("field2", 3))[ FD ]
Line_49 $$ document = new Document()-->Line_99 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_53 $$ document = new Document()-->Line_62 $$ docs.add(document)[ FD ]
Line_133 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_41 $$ document = new Document()-->Line_88 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_60 $$ document.add(createField("field2", 3))[ FD ]
Line_67 $$ document = new Document()-->Line_78 $$ document = new Document()[ FD ]
Line_27 $$ document = new Document()-->Line_74 $$ docs.add(document)[ FD ]
Line_71 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_185 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))-->Line_229 $$ sort = new Sort(new SortField("field2", nestedComparatorSource))[ FD ]
Line_125 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_45 $$ document = new Document()-->Line_53 $$ document = new Document()[ FD ]
Line_71 $$ document = new Document()-->Line_82 $$ document = new Document()[ FD ]
Line_200 $$ topDocs = searcher.search(query, 5, sort)-->Line_215 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ FD ]
Line_45 $$ document = new Document()-->Line_59 $$ document = new Document()[ FD ]
Line_82 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_149 $$ IndexSearcher searcher = new IndexSearcher(DirectoryReader.open(writer, false))-->Line_155 $$ TopFieldDocs topDocs = searcher.search(query, 5, sort)[ FD ]
Line_71 $$ document = new Document()-->Line_105 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_37 $$ document.add(createField("field1", 2))[ FD ]
Line_148 $$ MultiValueMode sortMode = MultiValueMode.SUM-->Line_183 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, null, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_35 $$ document = new Document()-->Line_80 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_8 $$ document = new Document()-->Line_85 $$ docs.add(document)[ FD ]
Line_16 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_64 $$ document.add(createField("field2", 3))[ FD ]
Line_86 $$ document = new Document()-->Line_98 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_147 $$ writer.addDocument(document)[ CD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_235 $$ assertThat(topDocs.scoreDocs[1].doc, equalTo(24))[ CD ]
Line_49 $$ document = new Document()-->Line_70 $$ docs.add(document)[ FD ]
Line_115 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_101 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_35 $$ document = new Document()-->Line_73 $$ document.add(createField("field1", 4))[ FD ]
Line_41 $$ document = new Document()-->Line_108 $$ docs.add(document)[ FD ]
Line_53 $$ document = new Document()-->Line_68 $$ document.add(createField("field2", 4))[ FD ]
Line_82 $$ document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_31 $$ document = new Document()-->Line_43 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_37 $$ document.add(createField("field1", 2))[ FD ]
Line_67 $$ document = new Document()-->Line_70 $$ docs.add(document)[ FD ]
Line_16 $$ document = new Document()-->Line_83 $$ document.add(createField("field2", 3))[ FD ]
Line_8 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_220 $$ assertThat(topDocs.scoreDocs[1].doc, equalTo(24))[ CD ]
Line_45 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_49 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_149 $$ IndexSearcher searcher = new IndexSearcher(DirectoryReader.open(writer, false))-->Line_215 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ FD ]
Line_67 $$ document = new Document()-->Line_84 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_125 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_78 $$ document = new Document()-->Line_91 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_9 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_190 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[0]).fields[0]).intValue(), equalTo(12))[ CD ]
Line_82 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_16 $$ document = new Document()-->Line_73 $$ document.add(createField("field1", 4))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_31 $$ document = new Document()[ CD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_22 $$ docs.clear()[ CD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_111 $$ document.add(createField("field1", 6))[ CD ]
Line_184 $$ query = new ToParentBlockJoinQuery(new ConstantScoreQuery(childFilter), new QueryBitSetProducer(parentFilter), ScoreMode.None)-->Line_186 $$ topDocs = searcher.search(query, 5, sort)[ FD ]
Line_121 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_41 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_105 $$ document = new Document()[ FD ]
Line_101 $$ document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_66 $$ docs.add(document)[ FD ]
Line_125 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_67 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_73 $$ document.add(createField("field1", 4))[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_108 $$ docs.add(document)[ FD ]
Line_8 $$ document = new Document()-->Line_60 $$ document.add(createField("field2", 3))[ FD ]
Line_199 $$ sort = new Sort(new SortField("field2", nestedComparatorSource))-->Line_200 $$ topDocs = searcher.search(query, 5, sort)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_43 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ CD ]
Line_16 $$ document = new Document()-->Line_33 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_135 $$ document.add(createField("field1", 8))[ CD ]
Line_35 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_45 $$ document = new Document()-->Line_81 $$ docs.add(document)[ FD ]
Line_49 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_90 $$ document = new Document()-->Line_102 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_80 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ CD ]
Line_78 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_53 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_27 $$ document = new Document()-->Line_89 $$ docs.add(document)[ FD ]
Line_71 $$ document = new Document()-->Line_90 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_41 $$ document = new Document()-->Line_84 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_72 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_109 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_109 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_53 $$ document = new Document()-->Line_61 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_90 $$ document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_109 $$ document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ CD ]
Line_49 $$ document = new Document()-->Line_71 $$ document = new Document()[ FD ]
Line_182 $$ childFilter = new TermQuery(new Term("filter_1", "T"))-->Line_213 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, 127, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_63 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_41 $$ document = new Document()-->Line_109 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_26 $$ docs.add(document)[ FD ]
Line_63 $$ document = new Document()-->Line_73 $$ document.add(createField("field1", 4))[ FD ]
Line_129 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_63 $$ document = new Document()-->Line_100 $$ docs.add(document)[ FD ]
Line_49 $$ document = new Document()-->Line_50 $$ document.add(createField("field2", 1))[ FD ]
Line_45 $$ document = new Document()-->Line_100 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_40 $$ docs.clear()[ CD ]
Line_45 $$ document = new Document()-->Line_103 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_97 $$ document = new Document()[ CD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_37 $$ document.add(createField("field1", 2))[ CD ]
Line_45 $$ document = new Document()-->Line_88 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_41 $$ document = new Document()-->Line_100 $$ docs.add(document)[ FD ]
Line_35 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_99 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_84 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_121 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_168 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))-->Line_229 $$ sort = new Sort(new SortField("field2", nestedComparatorSource))[ FD ]
Line_49 $$ document = new Document()-->Line_63 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_93 $$ docs.add(document)[ CD ]
Line_12 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_78 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_63 $$ document = new Document()-->Line_97 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_90 $$ document = new Document()[ FD ]
Line_82 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_16 $$ document = new Document()-->Line_50 $$ document.add(createField("field2", 1))[ FD ]
Line_78 $$ document = new Document()-->Line_109 $$ document = new Document()[ FD ]
Line_71 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_8 $$ document = new Document()-->Line_24 $$ document.add(createField("field2", 3))[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_62 $$ docs.add(document)[ FD ]
Line_129 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_8 $$ document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_67 $$ document = new Document()-->Line_79 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_183 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, null, createNested(searcher, parentFilter, childFilter))[ CD ]
Line_12 $$ document = new Document()-->Line_25 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_69 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_199 $$ sort = new Sort(new SortField("field2", nestedComparatorSource))-->Line_214 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))[ FD ]
Line_41 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_90 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_109 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_59 $$ document = new Document()-->Line_104 $$ docs.add(document)[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_113 $$ writer.addDocuments(docs)[ FD ]
Line_214 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))-->Line_215 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ FD ]
Line_8 $$ document = new Document()-->Line_32 $$ document.add(createField("field2", 2))[ FD ]
Line_35 $$ document = new Document()-->Line_63 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_50 $$ document.add(createField("field2", 1))[ CD ]
Line_4 $$ Document document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_53 $$ document = new Document()-->Line_70 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_81 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_18 $$ document.add(createField("field1", 1))[ FD ]
Line_59 $$ document = new Document()-->Line_63 $$ document = new Document()[ FD ]
Line_4 $$ Document document = new Document()-->Line_14 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_23 $$ document = new Document()-->Line_59 $$ document = new Document()[ FD ]
Line_90 $$ document = new Document()-->Line_97 $$ document = new Document()[ FD ]
Line_41 $$ document = new Document()-->Line_56 $$ docs.add(document)[ FD ]
Line_16 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_129 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_49 $$ document = new Document()-->Line_85 $$ docs.add(document)[ FD ]
Line_12 $$ document = new Document()-->Line_51 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_23 $$ document = new Document()[ CD ]
Line_105 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_86 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_45 $$ document = new Document()-->Line_56 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_80 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_218 $$ assertThat(topDocs.scoreDocs[0].doc, equalTo(19))[ CD ]
Line_12 $$ document = new Document()-->Line_49 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_74 $$ docs.add(document)[ FD ]
Line_71 $$ document = new Document()-->Line_106 $$ document.add(createField("field2", 6))[ FD ]
Line_149 $$ IndexSearcher searcher = new IndexSearcher(DirectoryReader.open(writer, false))-->Line_183 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, null, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_115 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_4 $$ Document document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_27 $$ document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_56 $$ docs.add(document)[ CD ]
Line_71 $$ document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_15 $$ docs.add(document)[ FD ]
Line_53 $$ document = new Document()-->Line_80 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_41 $$ document = new Document()-->Line_70 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_78 $$ document = new Document()[ FD ]
Line_71 $$ document = new Document()-->Line_104 $$ docs.add(document)[ FD ]
Line_31 $$ document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_9 $$ document.add(createField("field2", 3))[ FD ]
Line_168 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))-->Line_200 $$ topDocs = searcher.search(query, 5, sort)[ FD ]
Line_8 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_27 $$ document = new Document()-->Line_91 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_41 $$ document = new Document()-->Line_105 $$ document = new Document()[ FD ]
Line_154 $$ Sort sort = new Sort(new SortField("field2", nestedComparatorSource))-->Line_186 $$ topDocs = searcher.search(query, 5, sort)[ FD ]
Line_31 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_49 $$ document = new Document()[ CD ]
Line_23 $$ document = new Document()-->Line_37 $$ document.add(createField("field1", 2))[ FD ]
Line_53 $$ document = new Document()-->Line_69 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_53 $$ document = new Document()-->Line_85 $$ docs.add(document)[ FD ]
Line_12 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_82 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_86 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_49 $$ document = new Document()[ FD ]
Line_63 $$ document = new Document()-->Line_72 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_29 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_63 $$ document = new Document()-->Line_103 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_52 $$ docs.add(document)[ FD ]
Line_12 $$ document = new Document()-->Line_65 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_78 $$ document = new Document()-->Line_108 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_3 $$ List<Document> docs = new ArrayList()[ CD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_95 $$ writer.commit()[ CD ]
Line_35 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_80 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_8 $$ document = new Document()-->Line_81 $$ docs.add(document)[ FD ]
Line_139 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_22 $$ docs.clear()[ FD ]
Line_78 $$ document = new Document()-->Line_105 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_105 $$ document = new Document()[ FD ]
Line_67 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_63 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_78 $$ document = new Document()-->Line_99 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_133 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_63 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_78 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_86 $$ document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_97 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_167 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[4]).fields[0]).intValue(), equalTo(11))[ CD ]
Line_4 $$ Document document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_27 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_41 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_35 $$ document = new Document()-->Line_101 $$ document = new Document()[ FD ]
Line_63 $$ document = new Document()-->Line_69 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_71 $$ document = new Document()[ FD ]
Line_41 $$ document = new Document()-->Line_69 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_75 $$ writer.addDocuments(docs)[ CD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_244 $$ searcher.getIndexReader().close()[ CD ]
Line_23 $$ document = new Document()-->Line_64 $$ document.add(createField("field2", 3))[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_93 $$ docs.add(document)[ FD ]
Line_53 $$ document = new Document()-->Line_71 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_91 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_76 $$ writer.commit()[ CD ]
Line_31 $$ document = new Document()-->Line_63 $$ document = new Document()[ FD ]
Line_16 $$ document = new Document()-->Line_42 $$ document.add(createField("field2", 3))[ FD ]
Line_4 $$ Document document = new Document()-->Line_7 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_47 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_239 $$ assertThat(topDocs.scoreDocs[3].doc, equalTo(28))[ CD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_234 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[0]).fields[0]).intValue(), equalTo(-127))[ CD ]
Line_71 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_27 $$ document = new Document()-->Line_28 $$ document.add(createField("field2", 3))[ FD ]
Line_78 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_33 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_59 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_70 $$ docs.add(document)[ FD ]
Line_12 $$ document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_71 $$ document = new Document()-->Line_100 $$ docs.add(document)[ FD ]
Line_90 $$ document = new Document()-->Line_98 $$ document.add(createField("field2", 3))[ FD ]
Line_90 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_109 $$ document = new Document()[ CD ]
Line_90 $$ document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_35 $$ document = new Document()-->Line_104 $$ docs.add(document)[ FD ]
Line_105 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_168 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))-->Line_214 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))[ FD ]
Line_121 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_64 $$ document.add(createField("field2", 3))[ FD ]
Line_23 $$ document = new Document()-->Line_54 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_104 $$ docs.add(document)[ FD ]
Line_53 $$ document = new Document()-->Line_66 $$ docs.add(document)[ FD ]
Line_213 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, 127, createNested(searcher, parentFilter, childFilter))-->Line_228 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, -127, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_16 $$ document = new Document()-->Line_48 $$ docs.add(document)[ FD ]
Line_115 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_27 $$ document = new Document()-->Line_85 $$ docs.add(document)[ FD ]
Line_109 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_90 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_35 $$ document = new Document()-->Line_69 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_49 $$ document = new Document()-->Line_92 $$ document.add(createField("field1", 5))[ FD ]
Line_59 $$ document = new Document()-->Line_61 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_109 $$ document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_23 $$ document = new Document()-->Line_91 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_42 $$ document.add(createField("field2", 3))[ FD ]
Line_86 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_59 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_8 $$ document = new Document()-->Line_11 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_12 $$ document = new Document()[ CD ]
Line_152 $$ XFieldComparatorSource nestedComparatorSource = createFieldComparator("field2", sortMode, null, createNested(searcher, parentFilter, childFilter))-->Line_213 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, 127, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_45 $$ document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_159 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[0]).fields[0]).intValue(), equalTo(7))[ CD ]
Line_23 $$ document = new Document()-->Line_42 $$ document.add(createField("field2", 3))[ FD ]
Line_59 $$ document = new Document()-->Line_100 $$ docs.add(document)[ FD ]
Line_185 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))-->Line_200 $$ topDocs = searcher.search(query, 5, sort)[ FD ]
Line_4 $$ Document document = new Document()-->Line_61 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_23 $$ document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_109 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_97 $$ document = new Document()-->Line_98 $$ document.add(createField("field2", 3))[ FD ]
Line_8 $$ document = new Document()-->Line_50 $$ document.add(createField("field2", 1))[ FD ]
Line_16 $$ document = new Document()-->Line_27 $$ document = new Document()[ FD ]
Line_97 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_104 $$ docs.add(document)[ FD ]
Line_109 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_78 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_12 $$ document = new Document()-->Line_30 $$ docs.add(document)[ FD ]
Line_45 $$ document = new Document()-->Line_84 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_86 $$ document = new Document()-->Line_105 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_101 $$ document = new Document()-->Line_104 $$ docs.add(document)[ FD ]
Line_105 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_90 $$ document = new Document()-->Line_103 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_45 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_55 $$ document.add(createField("field1", 3))[ CD ]
Line_23 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_164 $$ assertThat(topDocs.scoreDocs[3].doc, equalTo(15))[ CD ]
Line_125 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_82 $$ document = new Document()-->Line_85 $$ docs.add(document)[ FD ]
Line_8 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_7 $$ docs.add(document)[ FD ]
Line_23 $$ document = new Document()-->Line_98 $$ document.add(createField("field2", 3))[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_89 $$ docs.add(document)[ FD ]
Line_86 $$ document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_31 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_27 $$ document = new Document()-->Line_36 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_35 $$ document = new Document()-->Line_67 $$ document = new Document()[ FD ]
Line_109 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_16 $$ document = new Document()-->Line_24 $$ document.add(createField("field2", 3))[ FD ]
Line_8 $$ document = new Document()-->Line_47 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_41 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_69 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_35 $$ document = new Document()[ FD ]
Line_35 $$ document = new Document()-->Line_109 $$ document = new Document()[ FD ]
Line_82 $$ document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_45 $$ document = new Document()-->Line_46 $$ document.add(createField("field2", 3))[ FD ]
Line_16 $$ document = new Document()-->Line_93 $$ docs.add(document)[ FD ]
Line_86 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_78 $$ document = new Document()-->Line_97 $$ document = new Document()[ FD ]
Line_129 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_41 $$ document = new Document()-->Line_43 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_66 $$ docs.add(document)[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_100 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_104 $$ docs.add(document)[ CD ]
Line_4 $$ Document document = new Document()-->Line_89 $$ docs.add(document)[ FD ]
Line_168 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))-->Line_230 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ FD ]
Line_8 $$ document = new Document()-->Line_80 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_53 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_109 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_59 $$ document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_41 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_53 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_49 $$ document = new Document()[ FD ]
Line_67 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_71 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_78 $$ document = new Document()-->Line_86 $$ document = new Document()[ FD ]
Line_149 $$ IndexSearcher searcher = new IndexSearcher(DirectoryReader.open(writer, false))-->Line_186 $$ topDocs = searcher.search(query, 5, sort)[ FD ]
Line_125 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_86 $$ document = new Document()[ FD ]
Line_149 $$ IndexSearcher searcher = new IndexSearcher(DirectoryReader.open(writer, false))-->Line_243 $$ assertAvgScoreMode(parentFilter, searcher)[ FD ]
Line_49 $$ document = new Document()-->Line_103 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_8 $$ document = new Document()-->Line_10 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_45 $$ document = new Document()-->Line_74 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_121 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_67 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_45 $$ document = new Document()-->Line_98 $$ document.add(createField("field2", 3))[ FD ]
Line_59 $$ document = new Document()-->Line_103 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_74 $$ docs.add(document)[ CD ]
Line_31 $$ document = new Document()-->Line_85 $$ docs.add(document)[ FD ]
Line_12 $$ document = new Document()-->Line_34 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_136 $$ docs.add(document)[ CD ]
Line_23 $$ document = new Document()-->Line_100 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_100 $$ docs.add(document)[ FD ]
Line_16 $$ document = new Document()-->Line_81 $$ docs.add(document)[ FD ]
Line_129 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_81 $$ docs.add(document)[ FD ]
Line_45 $$ document = new Document()-->Line_83 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_215 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ CD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_98 $$ document.add(createField("field2", 3))[ CD ]
Line_23 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_53 $$ document = new Document()[ FD ]
Line_82 $$ document = new Document()-->Line_98 $$ document.add(createField("field2", 3))[ FD ]
Line_67 $$ document = new Document()-->Line_87 $$ document.add(createField("field2", 5))[ FD ]
Line_41 $$ document = new Document()-->Line_67 $$ document = new Document()[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_20 $$ writer.addDocuments(docs)[ FD ]
Line_214 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))-->Line_230 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ FD ]
Line_67 $$ document = new Document()-->Line_71 $$ document = new Document()[ FD ]
Line_142 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_35 $$ document = new Document()[ FD ]
Line_86 $$ document = new Document()-->Line_100 $$ docs.add(document)[ FD ]
Line_16 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_59 $$ document = new Document()-->Line_68 $$ document.add(createField("field2", 4))[ FD ]
Line_90 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_117 $$ document.add(createField("field1", 7))[ CD ]
Line_53 $$ document = new Document()-->Line_88 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_35 $$ document = new Document()-->Line_90 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_96 $$ docs.clear()[ CD ]
Line_49 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_106 $$ document.add(createField("field2", 6))[ FD ]
Line_16 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_59 $$ document = new Document()-->Line_98 $$ document.add(createField("field2", 3))[ FD ]
Line_71 $$ document = new Document()-->Line_89 $$ docs.add(document)[ FD ]
Line_49 $$ document = new Document()-->Line_81 $$ docs.add(document)[ FD ]
Line_63 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_58 $$ docs.clear()[ FD ]
Line_49 $$ document = new Document()-->Line_109 $$ document = new Document()[ FD ]
Line_139 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_8 $$ document = new Document()-->Line_41 $$ document = new Document()[ FD ]
Line_27 $$ document = new Document()-->Line_68 $$ document.add(createField("field2", 4))[ FD ]
Line_59 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_86 $$ document = new Document()-->Line_102 $$ document.add(createField("field2", 3))[ FD ]
Line_53 $$ document = new Document()-->Line_108 $$ docs.add(document)[ FD ]
Line_97 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_63 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_23 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_82 $$ document = new Document()[ FD ]
Line_67 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_12 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_86 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_32 $$ document.add(createField("field2", 2))[ CD ]
Line_31 $$ document = new Document()-->Line_42 $$ document.add(createField("field2", 3))[ FD ]
Line_97 $$ document = new Document()-->Line_102 $$ document.add(createField("field2", 3))[ FD ]
Line_12 $$ document = new Document()-->Line_54 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_139 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_82 $$ document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_23 $$ document = new Document()-->Line_101 $$ document = new Document()[ FD ]
Line_78 $$ document = new Document()-->Line_104 $$ docs.add(document)[ FD ]
Line_23 $$ document = new Document()-->Line_29 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_23 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_71 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_38 $$ docs.add(document)[ FD ]
Line_23 $$ document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_8 $$ document = new Document()-->Line_102 $$ document.add(createField("field2", 3))[ FD ]
Line_23 $$ document = new Document()-->Line_31 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_27 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_49 $$ document = new Document()-->Line_104 $$ docs.add(document)[ FD ]
Line_105 $$ document = new Document()-->Line_109 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_31 $$ document = new Document()[ FD ]
Line_115 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_4 $$ Document document = new Document()-->Line_41 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_88 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_89 $$ docs.add(document)[ FD ]
Line_8 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_16 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_25 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_63 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_49 $$ document = new Document()-->Line_51 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_92 $$ document.add(createField("field1", 5))[ FD ]
Line_8 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_156 $$ assertThat(topDocs.totalHits, equalTo(7))[ CD ]
Line_115 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_41 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_48 $$ docs.add(document)[ FD ]
Line_67 $$ document = new Document()-->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_45 $$ document = new Document()-->Line_101 $$ document = new Document()[ FD ]
Line_90 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_125 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_115 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_59 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_59 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_63 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_104 $$ docs.add(document)[ FD ]
Line_97 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_42 $$ document.add(createField("field2", 3))[ FD ]
Line_16 $$ document = new Document()-->Line_31 $$ document = new Document()[ FD ]
Line_49 $$ document = new Document()-->Line_106 $$ document.add(createField("field2", 6))[ FD ]
Line_41 $$ document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_34 $$ docs.add(document)[ FD ]
Line_63 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_63 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_53 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_170 $$ assertThat(topDocs.totalHits, equalTo(7))[ CD ]
Line_31 $$ document = new Document()-->Line_83 $$ document.add(createField("field2", 3))[ FD ]
Line_59 $$ document = new Document()-->Line_97 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_153 $$ ToParentBlockJoinQuery query = new ToParentBlockJoinQuery(new ConstantScoreQuery(childFilter), new QueryBitSetProducer(parentFilter), ScoreMode.None)[ CD ]
Line_12 $$ document = new Document()-->Line_86 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_121 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_139 $$ document = new Document()[ CD ]
Line_101 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_49 $$ document = new Document()-->Line_59 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_68 $$ document.add(createField("field2", 4))[ FD ]
Line_71 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_16 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_105 $$ document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_133 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_8 $$ document = new Document()-->Line_106 $$ document.add(createField("field2", 6))[ FD ]
Line_12 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_12 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_27 $$ document = new Document()-->Line_97 $$ document = new Document()[ FD ]
Line_86 $$ document = new Document()-->Line_101 $$ document = new Document()[ FD ]
Line_71 $$ document = new Document()-->Line_73 $$ document.add(createField("field1", 4))[ FD ]
Line_59 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_33 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_81 $$ docs.add(document)[ FD ]
Line_16 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_4 $$ Document document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_121 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_90 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_11 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_57 $$ writer.addDocuments(docs)[ CD ]
Line_23 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_53 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_71 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_29 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_86 $$ document = new Document()-->Line_91 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_165 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[3]).fields[0]).intValue(), equalTo(10))[ CD ]
Line_49 $$ document = new Document()-->Line_60 $$ document.add(createField("field2", 3))[ FD ]
Line_97 $$ document = new Document()-->Line_109 $$ document = new Document()[ FD ]
Line_101 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_101 $$ document = new Document()-->Line_108 $$ docs.add(document)[ FD ]
Line_154 $$ Sort sort = new Sort(new SortField("field2", nestedComparatorSource))-->Line_214 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))[ FD ]
Line_105 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_133 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_67 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_16 $$ document = new Document()-->Line_45 $$ document = new Document()[ FD ]
Line_67 $$ document = new Document()-->Line_93 $$ docs.add(document)[ FD ]
Line_149 $$ IndexSearcher searcher = new IndexSearcher(DirectoryReader.open(writer, false))-->Line_228 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, -127, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_105 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_182 $$ childFilter = new TermQuery(new Term("filter_1", "T"))-->Line_228 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, -127, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_4 $$ Document document = new Document()-->Line_103 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_105 $$ document = new Document()-->Line_106 $$ document.add(createField("field2", 6))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_124 $$ docs.add(document)[ CD ]
Line_16 $$ document = new Document()-->Line_72 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_63 $$ document = new Document()-->Line_78 $$ document = new Document()[ FD ]
Line_41 $$ document = new Document()-->Line_50 $$ document.add(createField("field2", 1))[ FD ]
Line_59 $$ document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_35 $$ document = new Document()-->Line_37 $$ document.add(createField("field1", 2))[ FD ]
Line_27 $$ document = new Document()-->Line_70 $$ docs.add(document)[ FD ]
Line_31 $$ document = new Document()-->Line_100 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_46 $$ document.add(createField("field2", 3))[ FD ]
Line_49 $$ document = new Document()-->Line_88 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_52 $$ docs.add(document)[ FD ]
Line_35 $$ document = new Document()-->Line_59 $$ document = new Document()[ FD ]
Line_78 $$ document = new Document()-->Line_103 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_86 $$ document = new Document()-->Line_108 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_69 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_179 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[3]).fields[0]).intValue(), equalTo(10))[ CD ]
Line_63 $$ document = new Document()-->Line_93 $$ docs.add(document)[ FD ]
Line_90 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_97 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_38 $$ docs.add(document)[ CD ]
Line_35 $$ document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_8 $$ document = new Document()-->Line_34 $$ docs.add(document)[ FD ]
Line_78 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_86 $$ document = new Document()[ FD ]
Line_27 $$ document = new Document()-->Line_108 $$ docs.add(document)[ FD ]
Line_23 $$ document = new Document()-->Line_25 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_71 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_49 $$ document = new Document()-->Line_72 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_86 $$ document = new Document()-->Line_99 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_64 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_226 $$ assertThat(topDocs.scoreDocs[4].doc, equalTo(7))[ CD ]
Line_82 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_35 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_125 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_86 $$ document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_82 $$ document = new Document()-->Line_109 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_78 $$ document = new Document()[ FD ]
Line_16 $$ document = new Document()-->Line_79 $$ document.add(createField("field2", 3))[ FD ]
Line_149 $$ IndexSearcher searcher = new IndexSearcher(DirectoryReader.open(writer, false))-->Line_200 $$ topDocs = searcher.search(query, 5, sort)[ FD ]
Line_109 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_35 $$ document = new Document()-->Line_72 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_8 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ CD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_62 $$ docs.add(document)[ CD ]
Line_4 $$ Document document = new Document()-->Line_72 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_83 $$ document.add(createField("field2", 3))[ FD ]
Line_8 $$ document = new Document()-->Line_108 $$ docs.add(document)[ FD ]
Line_12 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_67 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_86 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_16 $$ document = new Document()-->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_82 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_45 $$ document = new Document()-->Line_72 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_133 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_90 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_153 $$ ToParentBlockJoinQuery query = new ToParentBlockJoinQuery(new ConstantScoreQuery(childFilter), new QueryBitSetProducer(parentFilter), ScoreMode.None)-->Line_155 $$ TopFieldDocs topDocs = searcher.search(query, 5, sort)[ FD ]
Line_63 $$ document = new Document()-->Line_64 $$ document.add(createField("field2", 3))[ FD ]
Line_82 $$ document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_63 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_192 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[1]).fields[0]).intValue(), equalTo(9))[ CD ]
Line_4 $$ Document document = new Document()-->Line_49 $$ document = new Document()[ FD ]
Line_4 $$ Document document = new Document()-->Line_23 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_50 $$ document.add(createField("field2", 1))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_41 $$ document = new Document()[ CD ]
Line_45 $$ document = new Document()-->Line_92 $$ document.add(createField("field1", 5))[ FD ]
Line_4 $$ Document document = new Document()-->Line_106 $$ document.add(createField("field2", 6))[ FD ]
Line_4 $$ Document document = new Document()-->Line_50 $$ document.add(createField("field2", 1))[ FD ]
Line_115 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_56 $$ docs.add(document)[ FD ]
Line_41 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_99 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_71 $$ document = new Document()-->Line_109 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_52 $$ docs.add(document)[ CD ]
Line_71 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_71 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_10 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ CD ]
Line_45 $$ document = new Document()-->Line_68 $$ document.add(createField("field2", 4))[ FD ]
Line_90 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_67 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_23 $$ document = new Document()-->Line_56 $$ docs.add(document)[ FD ]
Line_41 $$ document = new Document()-->Line_99 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_36 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_23 $$ document = new Document()-->Line_102 $$ document.add(createField("field2", 3))[ FD ]
Line_67 $$ document = new Document()-->Line_98 $$ document.add(createField("field2", 3))[ FD ]
Line_82 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_8 $$ document = new Document()-->Line_44 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_97 $$ document = new Document()-->Line_99 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_115 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_168 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))-->Line_169 $$ topDocs = searcher.search(query, 5, sort)[ FD ]
Line_31 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_31 $$ document = new Document()-->Line_55 $$ document.add(createField("field1", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_108 $$ docs.add(document)[ CD ]
Line_23 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_191 $$ assertThat(topDocs.scoreDocs[1].doc, equalTo(3))[ CD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_201 $$ assertThat(topDocs.totalHits, equalTo(6))[ CD ]
Line_67 $$ document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_34 $$ docs.add(document)[ FD ]
Line_45 $$ document = new Document()-->Line_67 $$ document = new Document()[ FD ]
Line_16 $$ document = new Document()-->Line_86 $$ document = new Document()[ FD ]
Line_63 $$ document = new Document()-->Line_102 $$ document.add(createField("field2", 3))[ FD ]
Line_97 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_16 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_45 $$ document = new Document()-->Line_61 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_41 $$ document = new Document()-->Line_59 $$ document = new Document()[ FD ]
Line_115 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_129 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_92 $$ document.add(createField("field1", 5))[ FD ]
Line_151 $$ Query childFilter = Queries.not(parentFilter)-->Line_228 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, -127, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_97 $$ document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_109 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_129 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_8 $$ document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_27 $$ document = new Document()-->Line_106 $$ document.add(createField("field2", 6))[ FD ]
Line_53 $$ document = new Document()-->Line_59 $$ document = new Document()[ FD ]
Line_115 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_67 $$ document = new Document()-->Line_91 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_63 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_92 $$ document.add(createField("field1", 5))[ FD ]
Line_67 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_49 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_121 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_49 $$ document = new Document()-->Line_52 $$ docs.add(document)[ FD ]
Line_115 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_105 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_132 $$ docs.add(document)[ FD ]
Line_31 $$ document = new Document()-->Line_73 $$ document.add(createField("field1", 4))[ FD ]
Line_31 $$ document = new Document()-->Line_93 $$ docs.add(document)[ FD ]
Line_49 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_182 $$ childFilter = new TermQuery(new Term("filter_1", "T"))[ CD ]
Line_101 $$ document = new Document()-->Line_109 $$ document = new Document()[ FD ]
Line_53 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_40 $$ docs.clear()[ FD ]
Line_78 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_23 $$ document = new Document()-->Line_44 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_24 $$ document.add(createField("field2", 3))[ CD ]
Line_23 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_90 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_32 $$ document.add(createField("field2", 2))[ FD ]
Line_45 $$ document = new Document()-->Line_87 $$ document.add(createField("field2", 5))[ FD ]
Line_82 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_237 $$ assertThat(topDocs.scoreDocs[2].doc, equalTo(15))[ CD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_232 $$ assertThat(topDocs.scoreDocs.length, equalTo(5))[ CD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_100 $$ docs.add(document)[ CD ]
Line_121 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_82 $$ document = new Document()[ FD ]
Line_16 $$ document = new Document()-->Line_34 $$ docs.add(document)[ FD ]
Line_12 $$ document = new Document()-->Line_62 $$ docs.add(document)[ FD ]
Line_35 $$ document = new Document()-->Line_89 $$ docs.add(document)[ FD ]
Line_8 $$ document = new Document()-->Line_46 $$ document.add(createField("field2", 3))[ FD ]
Line_67 $$ document = new Document()-->Line_92 $$ document.add(createField("field1", 5))[ FD ]
Line_97 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_31 $$ document = new Document()-->Line_87 $$ document.add(createField("field2", 5))[ FD ]
Line_45 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_59 $$ document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_169 $$ topDocs = searcher.search(query, 5, sort)-->Line_200 $$ topDocs = searcher.search(query, 5, sort)[ FD ]
Line_78 $$ document = new Document()-->Line_80 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_106 $$ document.add(createField("field2", 6))[ FD ]
Line_45 $$ document = new Document()-->Line_93 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_38 $$ docs.add(document)[ FD ]
Line_90 $$ document = new Document()-->Line_99 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_63 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_8 $$ document = new Document()-->Line_51 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_41 $$ document = new Document()-->Line_89 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_105 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_210 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[3]).fields[0]).intValue(), equalTo(8))[ CD ]
Line_71 $$ document = new Document()-->Line_86 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_14 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ CD ]
Line_41 $$ document = new Document()-->Line_87 $$ document.add(createField("field2", 5))[ FD ]
Line_41 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_50 $$ document.add(createField("field2", 1))[ FD ]
Line_59 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_71 $$ document = new Document()-->Line_103 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_97 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_35 $$ document = new Document()-->Line_85 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_149 $$ IndexSearcher searcher = new IndexSearcher(DirectoryReader.open(writer, false))[ CD ]
Line_63 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_74 $$ docs.add(document)[ FD ]
Line_63 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_35 $$ document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_78 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_227 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[4]).fields[0]).intValue(), equalTo(8))[ CD ]
Line_8 $$ document = new Document()-->Line_93 $$ docs.add(document)[ FD ]
Line_45 $$ document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_35 $$ document = new Document()-->Line_100 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_35 $$ document = new Document()-->Line_47 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_49 $$ document = new Document()-->Line_68 $$ document.add(createField("field2", 4))[ FD ]
Line_4 $$ Document document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_31 $$ document = new Document()-->Line_49 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_28 $$ document.add(createField("field2", 3))[ FD ]
Line_16 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_43 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_97 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_105 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_45 $$ document = new Document()-->Line_97 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_67 $$ document = new Document()-->Line_72 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_83 $$ document.add(createField("field2", 3))[ FD ]
Line_4 $$ Document document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_121 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_67 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_115 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_78 $$ document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_214 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))[ CD ]
Line_101 $$ document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_199 $$ sort = new Sort(new SortField("field2", nestedComparatorSource))-->Line_215 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ FD ]
Line_41 $$ document = new Document()-->Line_45 $$ document = new Document()[ FD ]
Line_133 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_171 $$ assertThat(topDocs.scoreDocs.length, equalTo(5))[ CD ]
Line_71 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_166 $$ assertThat(topDocs.scoreDocs[4].doc, equalTo(19))[ CD ]
Line_199 $$ sort = new Sort(new SortField("field2", nestedComparatorSource))-->Line_229 $$ sort = new Sort(new SortField("field2", nestedComparatorSource))[ FD ]
Line_4 $$ Document document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_12 $$ document = new Document()-->Line_33 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_78 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_35 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_35 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_90 $$ document = new Document()-->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_9 $$ document.add(createField("field2", 3))[ CD ]
Line_115 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_145 $$ document = new Document()[ CD ]
Line_16 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_27 $$ document = new Document()-->Line_82 $$ document = new Document()[ FD ]
Line_53 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_86 $$ document = new Document()-->Line_93 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_158 $$ assertThat(topDocs.scoreDocs[0].doc, equalTo(11))[ CD ]
Line_59 $$ document = new Document()-->Line_99 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_45 $$ document = new Document()-->Line_86 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_60 $$ document.add(createField("field2", 3))[ CD ]
Line_35 $$ document = new Document()-->Line_56 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_103 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ CD ]
Line_71 $$ document = new Document()-->Line_108 $$ docs.add(document)[ FD ]
Line_45 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_53 $$ document = new Document()-->Line_109 $$ document = new Document()[ FD ]
Line_101 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_86 $$ document = new Document()-->Line_88 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_8 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_86 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_51 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ CD ]
Line_4 $$ Document document = new Document()-->Line_15 $$ docs.add(document)[ FD ]
Line_101 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_29 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ CD ]
Line_45 $$ document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_27 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_101 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_71 $$ document = new Document()-->Line_81 $$ docs.add(document)[ FD ]
Line_8 $$ document = new Document()-->Line_38 $$ docs.add(document)[ FD ]
Line_16 $$ document = new Document()-->Line_59 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_49 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_59 $$ document = new Document()-->Line_64 $$ document.add(createField("field2", 3))[ FD ]
Line_16 $$ document = new Document()-->Line_69 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_23 $$ document = new Document()-->Line_72 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_101 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_8 $$ document = new Document()-->Line_35 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_109 $$ document = new Document()[ FD ]
Line_35 $$ document = new Document()-->Line_38 $$ docs.add(document)[ FD ]
Line_16 $$ document = new Document()-->Line_43 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_86 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_125 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_35 $$ document = new Document()-->Line_83 $$ document.add(createField("field2", 3))[ FD ]
Line_27 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_98 $$ document.add(createField("field2", 3))[ FD ]
Line_49 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_45 $$ document = new Document()-->Line_66 $$ docs.add(document)[ FD ]
Line_63 $$ document = new Document()-->Line_88 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_133 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_26 $$ docs.add(document)[ FD ]
Line_23 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_86 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_125 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_207 $$ assertThat(topDocs.scoreDocs[2].doc, equalTo(11))[ CD ]
Line_35 $$ document = new Document()-->Line_106 $$ document.add(createField("field2", 6))[ FD ]
Line_27 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_71 $$ document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_78 $$ document = new Document()-->Line_82 $$ document = new Document()[ FD ]
Line_41 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_63 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_97 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_182 $$ childFilter = new TermQuery(new Term("filter_1", "T"))-->Line_183 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, null, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_12 $$ document = new Document()-->Line_109 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_52 $$ docs.add(document)[ FD ]
Line_53 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_101 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_105 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_67 $$ document = new Document()-->Line_104 $$ docs.add(document)[ FD ]
Line_67 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_63 $$ document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_97 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_125 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_41 $$ document = new Document()-->Line_47 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_60 $$ document.add(createField("field2", 3))[ FD ]
Line_53 $$ document = new Document()-->Line_67 $$ document = new Document()[ FD ]
Line_59 $$ document = new Document()-->Line_101 $$ document = new Document()[ FD ]
Line_155 $$ TopFieldDocs topDocs = searcher.search(query, 5, sort)-->Line_169 $$ topDocs = searcher.search(query, 5, sort)[ FD ]
Line_12 $$ document = new Document()-->Line_78 $$ document = new Document()[ FD ]
Line_59 $$ document = new Document()-->Line_90 $$ document = new Document()[ FD ]
Line_16 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_31 $$ document = new Document()-->Line_97 $$ document = new Document()[ FD ]
Line_229 $$ sort = new Sort(new SortField("field2", nestedComparatorSource))-->Line_230 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ FD ]
Line_53 $$ document = new Document()-->Line_91 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_49 $$ document = new Document()-->Line_100 $$ docs.add(document)[ FD ]
Line_90 $$ document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_59 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_97 $$ document = new Document()-->Line_103 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_41 $$ document = new Document()-->Line_102 $$ document.add(createField("field2", 3))[ FD ]
Line_4 $$ Document document = new Document()-->Line_17 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_35 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_81 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_97 $$ document = new Document()[ FD ]
Line_105 $$ document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_86 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_195 $$ assertThat(topDocs.scoreDocs[3].doc, equalTo(11))[ CD ]
Line_153 $$ ToParentBlockJoinQuery query = new ToParentBlockJoinQuery(new ConstantScoreQuery(childFilter), new QueryBitSetProducer(parentFilter), ScoreMode.None)-->Line_169 $$ topDocs = searcher.search(query, 5, sort)[ FD ]
Line_67 $$ document = new Document()-->Line_89 $$ docs.add(document)[ FD ]
Line_35 $$ document = new Document()-->Line_68 $$ document.add(createField("field2", 4))[ FD ]
Line_59 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_101 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_27 $$ document = new Document()-->Line_30 $$ docs.add(document)[ FD ]
Line_71 $$ document = new Document()-->Line_72 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_97 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_82 $$ document = new Document()[ FD ]
Line_49 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_96 $$ docs.clear()[ FD ]
Line_45 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_31 $$ document = new Document()-->Line_79 $$ document.add(createField("field2", 3))[ FD ]
Line_8 $$ document = new Document()-->Line_101 $$ document = new Document()[ FD ]
Line_78 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_129 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_16 $$ document = new Document()-->Line_67 $$ document = new Document()[ FD ]
Line_41 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_97 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_27 $$ document = new Document()-->Line_109 $$ document = new Document()[ FD ]
Line_16 $$ document = new Document()-->Line_68 $$ document.add(createField("field2", 4))[ FD ]
Line_23 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_17 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ CD ]
Line_12 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_86 $$ document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_12 $$ document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_71 $$ document = new Document()-->Line_78 $$ document = new Document()[ FD ]
Line_63 $$ document = new Document()-->Line_106 $$ document.add(createField("field2", 6))[ FD ]
Line_121 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_145 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_78 $$ document = new Document()-->Line_85 $$ docs.add(document)[ FD ]
Line_154 $$ Sort sort = new Sort(new SortField("field2", nestedComparatorSource))-->Line_200 $$ topDocs = searcher.search(query, 5, sort)[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_81 $$ docs.add(document)[ FD ]
Line_45 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_53 $$ document = new Document()-->Line_103 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_18 $$ document.add(createField("field1", 1))[ FD ]
Line_45 $$ document = new Document()-->Line_47 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_67 $$ document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_4 $$ Document document = new Document()-->Line_26 $$ docs.add(document)[ FD ]
Line_101 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_109 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_137 $$ writer.addDocuments(docs)[ CD ]
Line_53 $$ document = new Document()-->Line_89 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_176 $$ assertThat(topDocs.scoreDocs[2].doc, equalTo(19))[ CD ]
Line_63 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_37 $$ document.add(createField("field1", 2))[ FD ]
Line_35 $$ document = new Document()-->Line_49 $$ document = new Document()[ FD ]
Line_155 $$ TopFieldDocs topDocs = searcher.search(query, 5, sort)-->Line_200 $$ topDocs = searcher.search(query, 5, sort)[ FD ]
Line_169 $$ topDocs = searcher.search(query, 5, sort)-->Line_215 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ FD ]
Line_27 $$ document = new Document()-->Line_52 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_217 $$ assertThat(topDocs.scoreDocs.length, equalTo(5))[ CD ]
Line_23 $$ document = new Document()-->Line_41 $$ document = new Document()[ FD ]
Line_105 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_63 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_67 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_139 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_78 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_35 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_157 $$ assertThat(topDocs.scoreDocs.length, equalTo(5))[ CD ]
Line_53 $$ document = new Document()-->Line_64 $$ document.add(createField("field2", 3))[ FD ]
Line_86 $$ document = new Document()-->Line_87 $$ document.add(createField("field2", 5))[ FD ]
Line_63 $$ document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_16 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_59 $$ document = new Document()-->Line_65 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_86 $$ document = new Document()[ CD ]
Line_59 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_154 $$ Sort sort = new Sort(new SortField("field2", nestedComparatorSource))[ CD ]
Line_16 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_90 $$ document = new Document()-->Line_100 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_77 $$ docs.clear()[ CD ]
Line_31 $$ document = new Document()-->Line_65 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_105 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_214 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))-->Line_229 $$ sort = new Sort(new SortField("field2", nestedComparatorSource))[ FD ]
Line_23 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_70 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_87 $$ document.add(createField("field2", 5))[ FD ]
Line_41 $$ document = new Document()-->Line_103 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_90 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_208 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[2]).fields[0]).intValue(), equalTo(7))[ CD ]
Line_4 $$ Document document = new Document()-->Line_99 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_90 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_105 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_31 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_99 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_109 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_63 $$ document = new Document()-->Line_80 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_97 $$ document = new Document()-->Line_106 $$ document.add(createField("field2", 6))[ FD ]
Line_154 $$ Sort sort = new Sort(new SortField("field2", nestedComparatorSource))-->Line_168 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))[ FD ]
Line_45 $$ document = new Document()-->Line_64 $$ document.add(createField("field2", 3))[ FD ]
Line_4 $$ Document document = new Document()-->Line_28 $$ document.add(createField("field2", 3))[ FD ]
Line_27 $$ document = new Document()-->Line_63 $$ document = new Document()[ FD ]
Line_35 $$ document = new Document()-->Line_65 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_71 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_16 $$ document = new Document()-->Line_65 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_168 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))-->Line_186 $$ topDocs = searcher.search(query, 5, sort)[ FD ]
Line_45 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_34 $$ docs.add(document)[ CD ]
Line_35 $$ document = new Document()-->Line_71 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_241 $$ assertThat(topDocs.scoreDocs[4].doc, equalTo(11))[ CD ]
Line_4 $$ Document document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_86 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_35 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_91 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_163 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[2]).fields[0]).intValue(), equalTo(9))[ CD ]
Line_53 $$ document = new Document()-->Line_97 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_61 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_25 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_8 $$ document = new Document()-->Line_27 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_53 $$ document = new Document()-->Line_72 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_121 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_101 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_53 $$ document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_101 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_53 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_82 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_67 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_185 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))[ CD ]
Line_8 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_155 $$ TopFieldDocs topDocs = searcher.search(query, 5, sort)-->Line_215 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ FD ]
Line_12 $$ document = new Document()-->Line_105 $$ document = new Document()[ FD ]
Line_4 $$ Document document = new Document()-->Line_74 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_238 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[2]).fields[0]).intValue(), equalTo(3))[ CD ]
Line_59 $$ document = new Document()-->Line_80 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_46 $$ document.add(createField("field2", 3))[ FD ]
Line_31 $$ document = new Document()-->Line_67 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_152 $$ XFieldComparatorSource nestedComparatorSource = createFieldComparator("field2", sortMode, null, createNested(searcher, parentFilter, childFilter))[ CD ]
Line_4 $$ Document document = new Document()-->Line_12 $$ document = new Document()[ FD ]
Line_4 $$ Document document = new Document()-->Line_55 $$ document.add(createField("field1", 3))[ FD ]
Line_154 $$ Sort sort = new Sort(new SortField("field2", nestedComparatorSource))-->Line_169 $$ topDocs = searcher.search(query, 5, sort)[ FD ]
Line_8 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_109 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_67 $$ document = new Document()-->Line_82 $$ document = new Document()[ FD ]
Line_59 $$ document = new Document()-->Line_105 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_38 $$ docs.add(document)[ FD ]
Line_63 $$ document = new Document()-->Line_98 $$ document.add(createField("field2", 3))[ FD ]
Line_105 $$ document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_10 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_23 $$ document = new Document()-->Line_88 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_41 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_53 $$ document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_105 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_81 $$ docs.add(document)[ FD ]
Line_35 $$ document = new Document()-->Line_84 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_63 $$ document = new Document()-->Line_108 $$ docs.add(document)[ FD ]
Line_8 $$ document = new Document()-->Line_37 $$ document.add(createField("field1", 2))[ FD ]
Line_12 $$ document = new Document()-->Line_47 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_45 $$ document = new Document()[ FD ]
Line_41 $$ document = new Document()-->Line_62 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_211 $$ assertThat(topDocs.scoreDocs[4].doc, equalTo(3))[ CD ]
Line_49 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_35 $$ document = new Document()-->Line_36 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_148 $$ MultiValueMode sortMode = MultiValueMode.SUM[ CD ]
Line_78 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_27 $$ document = new Document()-->Line_41 $$ document = new Document()[ FD ]
Line_35 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_221 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[1]).fields[0]).intValue(), equalTo(127))[ CD ]
Line_16 $$ document = new Document()-->Line_52 $$ docs.add(document)[ FD ]
Line_63 $$ document = new Document()-->Line_90 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_15 $$ docs.add(document)[ FD ]
Line_63 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_71 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_49 $$ document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_86 $$ document = new Document()-->Line_106 $$ document.add(createField("field2", 6))[ FD ]
Line_4 $$ Document document = new Document()-->Line_36 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_47 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ CD ]
Line_78 $$ document = new Document()-->Line_79 $$ document.add(createField("field2", 3))[ FD ]
Line_4 $$ Document document = new Document()-->Line_45 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_48 $$ docs.add(document)[ FD ]
Line_121 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_35 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_49 $$ document = new Document()-->Line_102 $$ document.add(createField("field2", 3))[ FD ]
Line_4 $$ Document document = new Document()-->Line_73 $$ document.add(createField("field1", 4))[ FD ]
Line_4 $$ Document document = new Document()-->Line_6 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_67 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_35 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_27 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_41 $$ document = new Document()[ FD ]
Line_4 $$ Document document = new Document()-->Line_43 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_90 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_90 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_4 $$ Document document = new Document()-->Line_5 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_177 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[2]).fields[0]).intValue(), equalTo(11))[ CD ]
Line_8 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_86 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_53 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_49 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_54 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ CD ]
Line_8 $$ document = new Document()-->Line_79 $$ document.add(createField("field2", 3))[ FD ]
Line_59 $$ document = new Document()-->Line_89 $$ docs.add(document)[ FD ]
Line_41 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_82 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_105 $$ document = new Document()[ FD ]
Line_63 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_78 $$ document = new Document()-->Line_92 $$ document.add(createField("field1", 5))[ FD ]
Line_31 $$ document = new Document()-->Line_78 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_108 $$ docs.add(document)[ FD ]
Line_139 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_41 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_78 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_169 $$ topDocs = searcher.search(query, 5, sort)[ CD ]
Line_31 $$ document = new Document()-->Line_71 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_73 $$ document.add(createField("field1", 4))[ FD ]
Line_4 $$ Document document = new Document()-->Line_69 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_59 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_4 $$ Document document = new Document()-->Line_29 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_8 $$ document = new Document()-->Line_36 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_130 $$ document.add(createField("field2", 7))[ CD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_196 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[3]).fields[0]).intValue(), equalTo(7))[ CD ]
Line_59 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_71 $$ document = new Document()-->Line_88 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_129 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_41 $$ document = new Document()-->Line_68 $$ document.add(createField("field2", 4))[ FD ]
Line_125 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_31 $$ document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_35 $$ document = new Document()-->Line_42 $$ document.add(createField("field2", 3))[ FD ]
Line_78 $$ document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_35 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_67 $$ document = new Document()[ FD ]
Line_67 $$ document = new Document()-->Line_80 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_71 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_126 $$ document.add(createField("field2", 3))[ CD ]
Line_12 $$ document = new Document()-->Line_37 $$ document.add(createField("field1", 2))[ FD ]
Line_23 $$ document = new Document()-->Line_66 $$ docs.add(document)[ FD ]
Line_67 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_59 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_101 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_53 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_222 $$ assertThat(topDocs.scoreDocs[2].doc, equalTo(23))[ CD ]
Line_23 $$ document = new Document()-->Line_46 $$ document.add(createField("field2", 3))[ FD ]
Line_35 $$ document = new Document()-->Line_50 $$ document.add(createField("field2", 1))[ FD ]
Line_101 $$ document = new Document()-->Line_106 $$ document.add(createField("field2", 6))[ FD ]
Line_16 $$ document = new Document()-->Line_106 $$ document.add(createField("field2", 6))[ FD ]
Line_12 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_49 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_27 $$ document = new Document()-->Line_72 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_92 $$ document.add(createField("field1", 5))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ CD ]
Line_71 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_148 $$ MultiValueMode sortMode = MultiValueMode.SUM-->Line_228 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, -127, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_63 $$ document = new Document()-->Line_92 $$ document.add(createField("field1", 5))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_16 $$ document = new Document()[ CD ]
Line_23 $$ document = new Document()-->Line_93 $$ docs.add(document)[ FD ]
Line_8 $$ document = new Document()-->Line_98 $$ document.add(createField("field2", 3))[ FD ]
Line_45 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_115 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_71 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_35 $$ document = new Document()[ FD ]
Line_82 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_41 $$ document = new Document()-->Line_51 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_229 $$ sort = new Sort(new SortField("field2", nestedComparatorSource))[ CD ]
Line_8 $$ document = new Document()-->Line_103 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_102 $$ document.add(createField("field2", 3))[ FD ]
Line_67 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_121 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_151 $$ Query childFilter = Queries.not(parentFilter)-->Line_182 $$ childFilter = new TermQuery(new Term("filter_1", "T"))[ FD ]
Line_45 $$ document = new Document()-->Line_60 $$ document.add(createField("field2", 3))[ FD ]
Line_27 $$ document = new Document()-->Line_61 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_78 $$ document = new Document()[ FD ]
Line_27 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_31 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_16 $$ document = new Document()-->Line_18 $$ document.add(createField("field1", 1))[ FD ]
Line_41 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_35 $$ document = new Document()-->Line_55 $$ document.add(createField("field1", 3))[ FD ]
Line_82 $$ document = new Document()-->Line_92 $$ document.add(createField("field1", 5))[ FD ]
Line_59 $$ document = new Document()-->Line_83 $$ document.add(createField("field2", 3))[ FD ]
Line_16 $$ document = new Document()-->Line_37 $$ document.add(createField("field1", 2))[ FD ]
Line_59 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_80 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_86 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_24 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_65 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ CD ]
Line_97 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_49 $$ document = new Document()-->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_67 $$ document = new Document()-->Line_101 $$ document = new Document()[ FD ]
Line_90 $$ document = new Document()-->Line_108 $$ docs.add(document)[ FD ]
Line_82 $$ document = new Document()-->Line_101 $$ document = new Document()[ FD ]
Line_31 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_27 $$ document = new Document()-->Line_46 $$ document.add(createField("field2", 3))[ FD ]
Line_53 $$ document = new Document()-->Line_65 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_97 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_31 $$ document = new Document()-->Line_80 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_115 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_23 $$ document = new Document()-->Line_61 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_59 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_4 $$ Document document = new Document()-->Line_32 $$ document.add(createField("field2", 2))[ FD ]
Line_31 $$ document = new Document()-->Line_88 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_15 $$ docs.add(document)[ CD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_87 $$ document.add(createField("field2", 5))[ CD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_199 $$ sort = new Sort(new SortField("field2", nestedComparatorSource))[ CD ]
Line_59 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_68 $$ document.add(createField("field2", 4))[ CD ]
Line_12 $$ document = new Document()-->Line_19 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_46 $$ document.add(createField("field2", 3))[ CD ]
Line_8 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_78 $$ document = new Document()-->Line_89 $$ docs.add(document)[ FD ]
Line_150 $$ Query parentFilter = new TermQuery(new Term("__type", "parent"))-->Line_228 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, -127, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_53 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_35 $$ document = new Document()-->Line_43 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_115 $$ document = new Document()[ CD ]
Line_133 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_151 $$ Query childFilter = Queries.not(parentFilter)[ CD ]
Line_12 $$ document = new Document()-->Line_60 $$ document.add(createField("field2", 3))[ FD ]
Line_12 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_66 $$ docs.add(document)[ CD ]
Line_8 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_71 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_109 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_178 $$ assertThat(topDocs.scoreDocs[3].doc, equalTo(15))[ CD ]
Line_67 $$ document = new Document()-->Line_100 $$ docs.add(document)[ FD ]
Line_90 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_8 $$ document = new Document()-->Line_25 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_125 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_41 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_19 $$ docs.add(document)[ FD ]
Line_23 $$ document = new Document()-->Line_36 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_8 $$ document = new Document()-->Line_71 $$ document = new Document()[ FD ]
Line_71 $$ document = new Document()-->Line_83 $$ document.add(createField("field2", 3))[ FD ]
Line_63 $$ document = new Document()-->Line_71 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_19 $$ docs.add(document)[ FD ]
Line_97 $$ document = new Document()-->Line_101 $$ document = new Document()[ FD ]
Line_35 $$ document = new Document()-->Line_53 $$ document = new Document()[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_124 $$ docs.add(document)[ FD ]
Line_129 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_35 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_35 $$ document = new Document()-->Line_88 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_23 $$ document = new Document()-->Line_60 $$ document.add(createField("field2", 3))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_184 $$ query = new ToParentBlockJoinQuery(new ConstantScoreQuery(childFilter), new QueryBitSetProducer(parentFilter), ScoreMode.None)[ CD ]
Line_86 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_45 $$ document = new Document()-->Line_65 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_142 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_41 $$ document = new Document()-->Line_106 $$ document.add(createField("field2", 6))[ FD ]
Line_45 $$ document = new Document()-->Line_104 $$ docs.add(document)[ FD ]
Line_31 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_67 $$ document = new Document()-->Line_74 $$ docs.add(document)[ FD ]
Line_41 $$ document = new Document()-->Line_104 $$ docs.add(document)[ FD ]
Line_63 $$ document = new Document()-->Line_125 $$ document = new Document()[ FD ]
Line_109 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_115 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_53 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_26 $$ docs.add(document)[ CD ]
Line_71 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_185 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))-->Line_199 $$ sort = new Sort(new SortField("field2", nestedComparatorSource))[ FD ]
Line_53 $$ document = new Document()-->Line_81 $$ docs.add(document)[ FD ]
Line_16 $$ document = new Document()-->Line_108 $$ docs.add(document)[ FD ]
Line_16 $$ document = new Document()-->Line_44 $$ docs.add(document)[ FD ]
Line_86 $$ document = new Document()-->Line_109 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_78 $$ document = new Document()-->Line_90 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_4 $$ Document document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_78 $$ document = new Document()-->Line_101 $$ document = new Document()[ FD ]
Line_150 $$ Query parentFilter = new TermQuery(new Term("__type", "parent"))-->Line_151 $$ Query childFilter = Queries.not(parentFilter)[ FD ]
Line_8 $$ document = new Document()-->Line_18 $$ document.add(createField("field1", 1))[ FD ]
Line_35 $$ document = new Document()-->Line_60 $$ document.add(createField("field2", 3))[ FD ]
Line_4 $$ Document document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_97 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_35 $$ document = new Document()-->Line_70 $$ docs.add(document)[ FD ]
Line_8 $$ document = new Document()-->Line_67 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_36 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_86 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_11 $$ docs.add(document)[ CD ]
Line_31 $$ document = new Document()-->Line_62 $$ docs.add(document)[ FD ]
Line_35 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_149 $$ IndexSearcher searcher = new IndexSearcher(DirectoryReader.open(writer, false))-->Line_244 $$ searcher.getIndexReader().close()[ FD ]
Line_145 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_15 $$ docs.add(document)[ FD ]
Line_186 $$ topDocs = searcher.search(query, 5, sort)-->Line_200 $$ topDocs = searcher.search(query, 5, sort)[ FD ]
Line_31 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_16 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_23 $$ document = new Document()-->Line_24 $$ document.add(createField("field2", 3))[ FD ]
Line_78 $$ document = new Document()-->Line_81 $$ docs.add(document)[ FD ]
Line_67 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_30 $$ docs.add(document)[ FD ]
Line_67 $$ document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_82 $$ document = new Document()-->Line_93 $$ docs.add(document)[ FD ]
Line_23 $$ document = new Document()-->Line_45 $$ document = new Document()[ FD ]
Line_53 $$ document = new Document()-->Line_93 $$ docs.add(document)[ FD ]
Line_86 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_97 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_45 $$ document = new Document()-->Line_55 $$ document.add(createField("field1", 3))[ FD ]
Line_23 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_101 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_212 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[4]).fields[0]).intValue(), equalTo(9))[ CD ]
Line_86 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_152 $$ XFieldComparatorSource nestedComparatorSource = createFieldComparator("field2", sortMode, null, createNested(searcher, parentFilter, childFilter))-->Line_228 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, -127, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_67 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_63 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_27 $$ document = new Document()-->Line_103 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_32 $$ document.add(createField("field2", 2))[ FD ]
Line_53 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_53 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_35 $$ document = new Document()-->Line_78 $$ document = new Document()[ FD ]
Line_82 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_105 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_82 $$ document = new Document()-->Line_106 $$ document.add(createField("field2", 6))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ CD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_121 $$ document = new Document()[ CD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_25 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ CD ]
Line_49 $$ document = new Document()-->Line_83 $$ document.add(createField("field2", 3))[ FD ]
Line_41 $$ document = new Document()-->Line_53 $$ document = new Document()[ FD ]
Line_78 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_84 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_66 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_243 $$ assertAvgScoreMode(parentFilter, searcher)[ CD ]
Line_23 $$ document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_216 $$ assertThat(topDocs.totalHits, equalTo(8))[ CD ]
Line_67 $$ document = new Document()-->Line_106 $$ document.add(createField("field2", 6))[ FD ]
Line_53 $$ document = new Document()-->Line_100 $$ docs.add(document)[ FD ]
Line_41 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_101 $$ document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_90 $$ document = new Document()-->Line_106 $$ document.add(createField("field2", 6))[ FD ]
Line_23 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_8 $$ document = new Document()-->Line_70 $$ docs.add(document)[ FD ]
Line_97 $$ document = new Document()-->Line_100 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_224 $$ assertThat(topDocs.scoreDocs[3].doc, equalTo(3))[ CD ]
Line_109 $$ document = new Document()-->Line_121 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_168 $$ sort = new Sort(new SortField("field2", nestedComparatorSource, true))[ CD ]
Line_27 $$ document = new Document()-->Line_54 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_53 $$ document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_59 $$ document = new Document()-->Line_109 $$ document = new Document()[ FD ]
Line_4 $$ Document document = new Document()-->Line_91 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_105 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_133 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_125 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_41 $$ document = new Document()-->Line_86 $$ document = new Document()[ FD ]
Line_49 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_59 $$ document = new Document()-->Line_60 $$ document.add(createField("field2", 3))[ FD ]
Line_53 $$ document = new Document()-->Line_105 $$ document = new Document()[ FD ]
Line_16 $$ document = new Document()-->Line_32 $$ document.add(createField("field2", 2))[ FD ]
Line_12 $$ document = new Document()-->Line_27 $$ document = new Document()[ FD ]
Line_149 $$ IndexSearcher searcher = new IndexSearcher(DirectoryReader.open(writer, false))-->Line_169 $$ topDocs = searcher.search(query, 5, sort)[ FD ]
Line_148 $$ MultiValueMode sortMode = MultiValueMode.SUM-->Line_152 $$ XFieldComparatorSource nestedComparatorSource = createFieldComparator("field2", sortMode, null, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_8 $$ document = new Document()-->Line_28 $$ document.add(createField("field2", 3))[ FD ]
Line_8 $$ document = new Document()-->Line_19 $$ docs.add(document)[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_77 $$ docs.clear()[ FD ]
Line_31 $$ document = new Document()-->Line_59 $$ document = new Document()[ FD ]
Line_121 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_49 $$ document = new Document()-->Line_84 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_86 $$ document = new Document()[ FD ]
Line_150 $$ Query parentFilter = new TermQuery(new Term("__type", "parent"))-->Line_213 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, 127, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_129 $$ document = new Document()[ CD ]
Line_97 $$ document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_132 $$ docs.add(document)[ CD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_33 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ CD ]
Line_125 $$ document = new Document()-->Line_140 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_66 $$ docs.add(document)[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_39 $$ writer.addDocuments(docs)[ FD ]
Line_41 $$ document = new Document()-->Line_93 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_78 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_16 $$ document = new Document()-->Line_26 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_209 $$ assertThat(topDocs.scoreDocs[3].doc, equalTo(7))[ CD ]
Line_63 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_71 $$ document = new Document()-->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_41 $$ document = new Document()-->Line_122 $$ document.add(createField("field2", 3))[ FD ]
Line_45 $$ document = new Document()-->Line_49 $$ document = new Document()[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_136 $$ docs.add(document)[ FD ]
Line_41 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_59 $$ document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_106 $$ document.add(createField("field2", 6))[ CD ]
Line_45 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_90 $$ document = new Document()-->Line_101 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_100 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_3 $$ List<Document> docs = new ArrayList()-->Line_85 $$ docs.add(document)[ FD ]
Line_97 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_45 $$ document = new Document()-->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_44 $$ docs.add(document)[ FD ]
Line_8 $$ document = new Document()-->Line_104 $$ docs.add(document)[ FD ]
Line_41 $$ document = new Document()-->Line_83 $$ document.add(createField("field2", 3))[ FD ]
Line_23 $$ document = new Document()-->Line_68 $$ document.add(createField("field2", 4))[ FD ]
Line_78 $$ document = new Document()-->Line_84 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_121 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_8 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_78 $$ document = new Document()-->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_45 $$ document = new Document()-->Line_130 $$ document.add(createField("field2", 7))[ FD ]
Line_86 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_12 $$ document = new Document()-->Line_68 $$ document.add(createField("field2", 4))[ FD ]
Line_35 $$ document = new Document()-->Line_103 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_31 $$ document = new Document()-->Line_89 $$ docs.add(document)[ FD ]
Line_8 $$ document = new Document()-->Line_109 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_219 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[0]).fields[0]).intValue(), equalTo(127))[ CD ]
Line_8 $$ document = new Document()-->Line_89 $$ docs.add(document)[ FD ]
Line_142 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_41 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_63 $$ document = new Document()-->Line_68 $$ document.add(createField("field2", 4))[ FD ]
Line_90 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_23 $$ document = new Document()-->Line_78 $$ document = new Document()[ FD ]
Line_49 $$ document = new Document()-->Line_80 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_53 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_90 $$ document = new Document()[ FD ]
Line_59 $$ document = new Document()-->Line_79 $$ document.add(createField("field2", 3))[ FD ]
Line_12 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_115 $$ document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_4 $$ Document document = new Document()-->Line_63 $$ document = new Document()[ FD ]
Line_8 $$ document = new Document()-->Line_59 $$ document = new Document()[ FD ]
Line_4 $$ Document document = new Document()-->Line_44 $$ docs.add(document)[ FD ]
Line_31 $$ document = new Document()-->Line_51 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_90 $$ document = new Document()-->Line_104 $$ docs.add(document)[ FD ]
Line_31 $$ document = new Document()-->Line_115 $$ document = new Document()[ FD ]
Line_71 $$ document = new Document()-->Line_131 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_194 $$ assertThat(((Number) ((FieldDoc) topDocs.scoreDocs[2]).fields[0]).intValue(), equalTo(8))[ CD ]
Line_23 $$ document = new Document()-->Line_89 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_125 $$ document = new Document()[ CD ]
Line_71 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_205 $$ assertThat(topDocs.scoreDocs[1].doc, equalTo(28))[ CD ]
Line_8 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_109 $$ document = new Document()[ FD ]
Line_53 $$ document = new Document()-->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_12 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_70 $$ docs.add(document)[ FD ]
Line_59 $$ document = new Document()-->Line_145 $$ document = new Document()[ FD ]
Line_59 $$ document = new Document()-->Line_141 $$ writer.addDocument(document)[ FD ]
Line_71 $$ document = new Document()-->Line_85 $$ docs.add(document)[ FD ]
Line_63 $$ document = new Document()-->Line_87 $$ document.add(createField("field2", 5))[ FD ]
Line_105 $$ document = new Document()-->Line_117 $$ document.add(createField("field1", 7))[ FD ]
Line_67 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_16 $$ document = new Document()-->Line_135 $$ document.add(createField("field1", 8))[ FD ]
Line_4 $$ Document document = new Document()-->Line_146 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_63 $$ document = new Document()-->Line_107 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_62 $$ docs.add(document)[ FD ]
Line_59 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_101 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_4 $$ Document document = new Document()-->Line_34 $$ docs.add(document)[ FD ]
Line_31 $$ document = new Document()-->Line_60 $$ document.add(createField("field2", 3))[ FD ]
Line_49 $$ document = new Document()-->Line_64 $$ document.add(createField("field2", 3))[ FD ]
Line_23 $$ document = new Document()-->Line_79 $$ document.add(createField("field2", 3))[ FD ]
Line_27 $$ document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_109 $$ document = new Document()-->Line_110 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_59 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_31 $$ document = new Document()-->Line_46 $$ document.add(createField("field2", 3))[ FD ]
Line_82 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_12 $$ document = new Document()-->Line_73 $$ document.add(createField("field1", 4))[ FD ]
Line_16 $$ document = new Document()-->Line_78 $$ document = new Document()[ FD ]
Line_90 $$ document = new Document()-->Line_91 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_8 $$ document = new Document()-->Line_72 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_67 $$ document = new Document()-->Line_142 $$ document = new Document()[ FD ]
Line_4 $$ Document document = new Document()-->Line_33 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_27 $$ document = new Document()-->Line_29 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_109 $$ document = new Document()-->Line_128 $$ docs.add(document)[ FD ]
Line_35 $$ document = new Document()-->Line_54 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_86 $$ document = new Document()-->Line_123 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_49 $$ document = new Document()-->Line_97 $$ document = new Document()[ FD ]
Line_59 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_16 $$ document = new Document()-->Line_74 $$ docs.add(document)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_120 $$ docs.clear()[ CD ]
Line_78 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_105 $$ document = new Document()[ FD ]
Line_23 $$ document = new Document()-->Line_147 $$ writer.addDocument(document)[ FD ]
Line_45 $$ document = new Document()-->Line_52 $$ docs.add(document)[ FD ]
Line_8 $$ document = new Document()-->Line_52 $$ docs.add(document)[ FD ]
Line_35 $$ document = new Document()-->Line_61 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_67 $$ document = new Document()-->Line_81 $$ docs.add(document)[ FD ]
Line_59 $$ document = new Document()-->Line_70 $$ docs.add(document)[ FD ]
Line_105 $$ document = new Document()-->Line_126 $$ document.add(createField("field2", 3))[ FD ]
Line_12 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_151 $$ Query childFilter = Queries.not(parentFilter)-->Line_183 $$ nestedComparatorSource = createFieldComparator("field2", sortMode, null, createNested(searcher, parentFilter, childFilter))[ FD ]
Line_105 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_53 $$ document = new Document()-->Line_134 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_84 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ CD ]
Line_97 $$ document = new Document()-->Line_112 $$ docs.add(document)[ FD ]
Line_49 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_186 $$ topDocs = searcher.search(query, 5, sort)-->Line_215 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ FD ]
Line_86 $$ document = new Document()-->Line_139 $$ document = new Document()[ FD ]
Line_41 $$ document = new Document()-->Line_52 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_53 $$ document = new Document()-->Line_78 $$ document = new Document()[ FD ]
Line_78 $$ document = new Document()-->Line_111 $$ document.add(createField("field1", 6))[ FD ]
Line_16 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_8 $$ document = new Document()-->Line_133 $$ document = new Document()[ FD ]
Line_49 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_199 $$ sort = new Sort(new SortField("field2", nestedComparatorSource))-->Line_230 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ FD ]
Line_82 $$ document = new Document()-->Line_129 $$ document = new Document()[ FD ]
Line_82 $$ document = new Document()-->Line_90 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_200 $$ topDocs = searcher.search(query, 5, sort)[ CD ]
Line_71 $$ document = new Document()-->Line_127 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_90 $$ document = new Document()-->Line_116 $$ document.add(new StringField("__type", "parent", Field.Store.NO))[ FD ]
Line_67 $$ document = new Document()-->Line_97 $$ document = new Document()[ FD ]
Line_45 $$ document = new Document()-->Line_132 $$ docs.add(document)[ FD ]
Line_86 $$ document = new Document()-->Line_118 $$ writer.addDocument(document)[ FD ]
Line_16 $$ document = new Document()-->Line_30 $$ docs.add(document)[ FD ]
Line_71 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_71 $$ document = new Document()-->Line_74 $$ docs.add(document)[ FD ]
Line_101 $$ document = new Document()-->Line_103 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_82 $$ document = new Document()-->Line_88 $$ document.add(new StringField("filter_1", "F", Field.Store.NO))[ FD ]
Line_8 $$ document = new Document()-->Line_43 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
Line_82 $$ document = new Document()-->Line_143 $$ document.add(new StringField("fieldXXX", "x", Field.Store.NO))[ FD ]
Line_23 $$ document = new Document()-->Line_32 $$ document.add(createField("field2", 2))[ FD ]
Line_86 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_27 $$ document = new Document()-->Line_90 $$ document = new Document()[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_187 $$ assertThat(topDocs.totalHits, equalTo(6))[ CD ]
Line_35 $$ document = new Document()-->Line_48 $$ docs.add(document)[ FD ]
Line_4 $$ Document document = new Document()-->Line_93 $$ docs.add(document)[ FD ]
Line_97 $$ document = new Document()-->Line_144 $$ writer.addDocument(document)[ FD ]
Line_215 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)-->Line_230 $$ topDocs = searcher.search(new TermQuery(new Term("__type", "parent")), 5, sort)[ FD ]
Line_2 $$ public void testNestedSorting() throws Exception -->Line_188 $$ assertThat(topDocs.scoreDocs.length, equalTo(5))[ CD ]
Line_90 $$ document = new Document()-->Line_92 $$ document.add(createField("field1", 5))[ FD ]
Line_67 $$ document = new Document()-->Line_124 $$ docs.add(document)[ FD ]
Line_35 $$ document = new Document()-->Line_136 $$ docs.add(document)[ FD ]
Line_49 $$ document = new Document()-->Line_61 $$ document.add(new StringField("filter_1", "T", Field.Store.NO))[ FD ]
