Line_2 $$ protected String convertValue(final Number value, final PsiType type, final boolean negated) -->Line_4 $$ final int intValue = negated ? -value.intValue() : value.intValue()[ FD ]
Line_3 $$ if (PsiType.INT.equals(type)) -->Line_4 $$ final int intValue = negated ? -value.intValue() : value.intValue()[ CD ]
Line_2 $$ protected String convertValue(final Number value, final PsiType type, final boolean negated) -->Line_7 $$ final long longValue = negated ? -value.longValue() : value.longValue()[ FD ]
Line_3 $$ if (PsiType.INT.equals(type)) -->Line_5 $$ return "0" + Integer.toOctalString(intValue)[ CD ]
Line_2 $$ protected String convertValue(final Number value, final PsiType type, final boolean negated) -->Line_10 $$ return null[ CD ]
Line_2 $$ protected String convertValue(final Number value, final PsiType type, final boolean negated) -->Line_6 $$ if (PsiType.LONG.equals(type)) [ FD ]
Line_3 $$ if (PsiType.INT.equals(type)) -->Line_6 $$ if (PsiType.LONG.equals(type)) [ CD ]
Line_6 $$ if (PsiType.LONG.equals(type)) -->Line_7 $$ final long longValue = negated ? -value.longValue() : value.longValue()[ CD ]
Line_6 $$ if (PsiType.LONG.equals(type)) -->Line_8 $$ return "0" + Long.toOctalString(longValue) + "L"[ CD ]
Line_7 $$ final long longValue = negated ? -value.longValue() : value.longValue()-->Line_8 $$ return "0" + Long.toOctalString(longValue) + "L"[ FD ]
Line_2 $$ protected String convertValue(final Number value, final PsiType type, final boolean negated) -->Line_3 $$ if (PsiType.INT.equals(type)) [ FD ]
Line_4 $$ final int intValue = negated ? -value.intValue() : value.intValue()-->Line_5 $$ return "0" + Integer.toOctalString(intValue)[ FD ]
Line_2 $$ protected String convertValue(final Number value, final PsiType type, final boolean negated) -->Line_3 $$ if (PsiType.INT.equals(type)) [ CD ]
