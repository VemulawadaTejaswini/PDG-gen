Line_2 $$ public void testIssue8226() -->Line_16 $$ refresh()[ CD ]
Line_20 $$ for (int j = 1; j < searchResponse.getHits().hits().length; j++) -->Line_23 $$ assertThat(searchResponse.toString(), current.intValue(), lessThan(previous.intValue()))[ CD ]
Line_20 $$ for (int j = 1; j < searchResponse.getHits().hits().length; j++) -->Line_22 $$ Number previous = (Number) searchResponse.getHits().hits()[j - 1].getSource().get("entry")[ CD ]
Line_30 $$ Number previous = (Number) searchResponse.getHits().hits()[j - 1].getSource().get("entry")-->Line_31 $$ assertThat(searchResponse.toString(), current.intValue(), greaterThan(previous.intValue()))[ FD ]
Line_2 $$ public void testIssue8226() -->Line_15 $$ ensureYellow()[ CD ]
Line_2 $$ public void testIssue8226() -->Line_25 $$ searchResponse = client().prepareSearch().addSort(new FieldSortBuilder("entry").order(SortOrder.ASC).unmappedType(useMapping ? null : "long")).setSize(10).get()[ CD ]
Line_25 $$ searchResponse = client().prepareSearch().addSort(new FieldSortBuilder("entry").order(SortOrder.ASC).unmappedType(useMapping ? null : "long")).setSize(10).get()-->Line_29 $$ Number current = (Number) searchResponse.getHits().hits()[j].getSource().get("entry")[ FD ]
Line_17 $$ SearchResponse searchResponse = client().prepareSearch().addSort(new FieldSortBuilder("entry").order(SortOrder.DESC).unmappedType(useMapping ? null : "long")).setSize(10).get()-->Line_30 $$ Number previous = (Number) searchResponse.getHits().hits()[j - 1].getSource().get("entry")[ FD ]
Line_25 $$ searchResponse = client().prepareSearch().addSort(new FieldSortBuilder("entry").order(SortOrder.ASC).unmappedType(useMapping ? null : "long")).setSize(10).get()-->Line_30 $$ Number previous = (Number) searchResponse.getHits().hits()[j - 1].getSource().get("entry")[ FD ]
Line_2 $$ public void testIssue8226() -->Line_28 $$ for (int j = 1; j < searchResponse.getHits().hits().length; j++) [ CD ]
Line_2 $$ public void testIssue8226() -->Line_5 $$ for (int i = 0; i < numIndices; i++) [ CD ]
Line_17 $$ SearchResponse searchResponse = client().prepareSearch().addSort(new FieldSortBuilder("entry").order(SortOrder.DESC).unmappedType(useMapping ? null : "long")).setSize(10).get()-->Line_25 $$ searchResponse = client().prepareSearch().addSort(new FieldSortBuilder("entry").order(SortOrder.ASC).unmappedType(useMapping ? null : "long")).setSize(10).get()[ FD ]
Line_17 $$ SearchResponse searchResponse = client().prepareSearch().addSort(new FieldSortBuilder("entry").order(SortOrder.DESC).unmappedType(useMapping ? null : "long")).setSize(10).get()-->Line_28 $$ for (int j = 1; j < searchResponse.getHits().hits().length; j++) [ FD ]
Line_2 $$ public void testIssue8226() -->Line_4 $$ final boolean useMapping = randomBoolean()[ CD ]
Line_11 $$ if (i > 0) -->Line_12 $$ client().prepareIndex("test_" + i, "foo", "" + i).setSource("[ CD ]
Line_2 $$ public void testIssue8226() -->Line_26 $$ logClusterState()[ CD ]
Line_5 $$ for (int i = 0; i < numIndices; i++) -->Line_11 $$ if (i > 0) [ CD ]
Line_17 $$ SearchResponse searchResponse = client().prepareSearch().addSort(new FieldSortBuilder("entry").order(SortOrder.DESC).unmappedType(useMapping ? null : "long")).setSize(10).get()-->Line_31 $$ assertThat(searchResponse.toString(), current.intValue(), greaterThan(previous.intValue()))[ FD ]
Line_17 $$ SearchResponse searchResponse = client().prepareSearch().addSort(new FieldSortBuilder("entry").order(SortOrder.DESC).unmappedType(useMapping ? null : "long")).setSize(10).get()-->Line_20 $$ for (int j = 1; j < searchResponse.getHits().hits().length; j++) [ FD ]
Line_6 $$ if (useMapping) -->Line_9 $$ assertAcked(prepareCreate("test_" + i).addAlias(new Alias("test")))[ CD ]
Line_17 $$ SearchResponse searchResponse = client().prepareSearch().addSort(new FieldSortBuilder("entry").order(SortOrder.DESC).unmappedType(useMapping ? null : "long")).setSize(10).get()-->Line_23 $$ assertThat(searchResponse.toString(), current.intValue(), lessThan(previous.intValue()))[ FD ]
Line_5 $$ for (int i = 0; i < numIndices; i++) -->Line_6 $$ if (useMapping) [ CD ]
Line_22 $$ Number previous = (Number) searchResponse.getHits().hits()[j - 1].getSource().get("entry")-->Line_23 $$ assertThat(searchResponse.toString(), current.intValue(), lessThan(previous.intValue()))[ FD ]
Line_17 $$ SearchResponse searchResponse = client().prepareSearch().addSort(new FieldSortBuilder("entry").order(SortOrder.DESC).unmappedType(useMapping ? null : "long")).setSize(10).get()-->Line_21 $$ Number current = (Number) searchResponse.getHits().hits()[j].getSource().get("entry")[ FD ]
Line_25 $$ searchResponse = client().prepareSearch().addSort(new FieldSortBuilder("entry").order(SortOrder.ASC).unmappedType(useMapping ? null : "long")).setSize(10).get()-->Line_27 $$ assertSearchResponse(searchResponse)[ FD ]
Line_25 $$ searchResponse = client().prepareSearch().addSort(new FieldSortBuilder("entry").order(SortOrder.ASC).unmappedType(useMapping ? null : "long")).setSize(10).get()-->Line_28 $$ for (int j = 1; j < searchResponse.getHits().hits().length; j++) [ FD ]
Line_20 $$ for (int j = 1; j < searchResponse.getHits().hits().length; j++) -->Line_28 $$ for (int j = 1; j < searchResponse.getHits().hits().length; j++) [ FD ]
Line_2 $$ public void testIssue8226() -->Line_27 $$ assertSearchResponse(searchResponse)[ CD ]
Line_17 $$ SearchResponse searchResponse = client().prepareSearch().addSort(new FieldSortBuilder("entry").order(SortOrder.DESC).unmappedType(useMapping ? null : "long")).setSize(10).get()-->Line_19 $$ assertSearchResponse(searchResponse)[ FD ]
Line_17 $$ SearchResponse searchResponse = client().prepareSearch().addSort(new FieldSortBuilder("entry").order(SortOrder.DESC).unmappedType(useMapping ? null : "long")).setSize(10).get()-->Line_22 $$ Number previous = (Number) searchResponse.getHits().hits()[j - 1].getSource().get("entry")[ FD ]
Line_3 $$ int numIndices = between(5, 10)-->Line_5 $$ for (int i = 0; i < numIndices; i++) [ FD ]
Line_2 $$ public void testIssue8226() -->Line_17 $$ SearchResponse searchResponse = client().prepareSearch().addSort(new FieldSortBuilder("entry").order(SortOrder.DESC).unmappedType(useMapping ? null : "long")).setSize(10).get()[ CD ]
Line_21 $$ Number current = (Number) searchResponse.getHits().hits()[j].getSource().get("entry")-->Line_23 $$ assertThat(searchResponse.toString(), current.intValue(), lessThan(previous.intValue()))[ FD ]
Line_28 $$ for (int j = 1; j < searchResponse.getHits().hits().length; j++) -->Line_31 $$ assertThat(searchResponse.toString(), current.intValue(), greaterThan(previous.intValue()))[ CD ]
Line_6 $$ if (useMapping) -->Line_7 $$ assertAcked(prepareCreate("test_" + i).addAlias(new Alias("test")).addMapping("foo", "entry", "type=long"))[ CD ]
Line_2 $$ public void testIssue8226() -->Line_19 $$ assertSearchResponse(searchResponse)[ CD ]
Line_5 $$ for (int i = 0; i < numIndices; i++) -->Line_11 $$ if (i > 0) [ FD ]
Line_28 $$ for (int j = 1; j < searchResponse.getHits().hits().length; j++) -->Line_29 $$ Number current = (Number) searchResponse.getHits().hits()[j].getSource().get("entry")[ CD ]
Line_2 $$ public void testIssue8226() -->Line_20 $$ for (int j = 1; j < searchResponse.getHits().hits().length; j++) [ CD ]
Line_17 $$ SearchResponse searchResponse = client().prepareSearch().addSort(new FieldSortBuilder("entry").order(SortOrder.DESC).unmappedType(useMapping ? null : "long")).setSize(10).get()-->Line_29 $$ Number current = (Number) searchResponse.getHits().hits()[j].getSource().get("entry")[ FD ]
Line_25 $$ searchResponse = client().prepareSearch().addSort(new FieldSortBuilder("entry").order(SortOrder.ASC).unmappedType(useMapping ? null : "long")).setSize(10).get()-->Line_31 $$ assertThat(searchResponse.toString(), current.intValue(), greaterThan(previous.intValue()))[ FD ]
Line_22 $$ Number previous = (Number) searchResponse.getHits().hits()[j - 1].getSource().get("entry")-->Line_31 $$ assertThat(searchResponse.toString(), current.intValue(), greaterThan(previous.intValue()))[ FD ]
Line_2 $$ public void testIssue8226() -->Line_18 $$ logClusterState()[ CD ]
Line_29 $$ Number current = (Number) searchResponse.getHits().hits()[j].getSource().get("entry")-->Line_31 $$ assertThat(searchResponse.toString(), current.intValue(), greaterThan(previous.intValue()))[ FD ]
Line_28 $$ for (int j = 1; j < searchResponse.getHits().hits().length; j++) -->Line_30 $$ Number previous = (Number) searchResponse.getHits().hits()[j - 1].getSource().get("entry")[ CD ]
Line_2 $$ public void testIssue8226() -->Line_3 $$ int numIndices = between(5, 10)[ CD ]
Line_17 $$ SearchResponse searchResponse = client().prepareSearch().addSort(new FieldSortBuilder("entry").order(SortOrder.DESC).unmappedType(useMapping ? null : "long")).setSize(10).get()-->Line_27 $$ assertSearchResponse(searchResponse)[ FD ]
Line_20 $$ for (int j = 1; j < searchResponse.getHits().hits().length; j++) -->Line_21 $$ Number current = (Number) searchResponse.getHits().hits()[j].getSource().get("entry")[ CD ]
Line_21 $$ Number current = (Number) searchResponse.getHits().hits()[j].getSource().get("entry")-->Line_31 $$ assertThat(searchResponse.toString(), current.intValue(), greaterThan(previous.intValue()))[ FD ]
