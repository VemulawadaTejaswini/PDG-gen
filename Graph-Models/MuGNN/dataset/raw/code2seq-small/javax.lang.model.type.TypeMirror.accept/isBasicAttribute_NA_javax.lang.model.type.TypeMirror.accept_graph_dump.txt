Line_2 $$ private boolean isBasicAttribute(Element element, Element returnedElement) -->Line_3 $$ if (TypeUtils.containsAnnotation(element, Constants.BASIC) || TypeUtils.containsAnnotation(element, Constants.ONE_TO_ONE) || TypeUtils.containsAnnotation(element, Constants.MANY_TO_ONE) || TypeUtils.containsAnnotation(element, Constants.EMBEDDED_ID) || TypeUtils.containsAnnotation(element, Constants.ID)) [ FD ]
Line_6 $$ if (TypeUtils.getAnnotationMirror(element, ORG_HIBERNATE_ANNOTATIONS_TYPE) != null) -->Line_7 $$ return true[ CD ]
Line_9 $$ BasicAttributeVisitor basicVisitor = new BasicAttributeVisitor(context)-->Line_10 $$ return returnedElement.asType().accept(basicVisitor, returnedElement)[ FD ]
Line_2 $$ private boolean isBasicAttribute(Element element, Element returnedElement) -->Line_3 $$ if (TypeUtils.containsAnnotation(element, Constants.BASIC) || TypeUtils.containsAnnotation(element, Constants.ONE_TO_ONE) || TypeUtils.containsAnnotation(element, Constants.MANY_TO_ONE) || TypeUtils.containsAnnotation(element, Constants.EMBEDDED_ID) || TypeUtils.containsAnnotation(element, Constants.ID)) [ CD ]
Line_3 $$ if (TypeUtils.containsAnnotation(element, Constants.BASIC) || TypeUtils.containsAnnotation(element, Constants.ONE_TO_ONE) || TypeUtils.containsAnnotation(element, Constants.MANY_TO_ONE) || TypeUtils.containsAnnotation(element, Constants.EMBEDDED_ID) || TypeUtils.containsAnnotation(element, Constants.ID)) -->Line_4 $$ return true[ CD ]
Line_2 $$ private boolean isBasicAttribute(Element element, Element returnedElement) -->Line_10 $$ return returnedElement.asType().accept(basicVisitor, returnedElement)[ CD ]
Line_2 $$ private boolean isBasicAttribute(Element element, Element returnedElement) -->Line_9 $$ BasicAttributeVisitor basicVisitor = new BasicAttributeVisitor(context)[ CD ]
Line_2 $$ private boolean isBasicAttribute(Element element, Element returnedElement) -->Line_10 $$ return returnedElement.asType().accept(basicVisitor, returnedElement)[ FD ]
Line_2 $$ private boolean isBasicAttribute(Element element, Element returnedElement) -->Line_6 $$ if (TypeUtils.getAnnotationMirror(element, ORG_HIBERNATE_ANNOTATIONS_TYPE) != null) [ FD ]
Line_2 $$ private boolean isBasicAttribute(Element element, Element returnedElement) -->Line_6 $$ if (TypeUtils.getAnnotationMirror(element, ORG_HIBERNATE_ANNOTATIONS_TYPE) != null) [ CD ]
