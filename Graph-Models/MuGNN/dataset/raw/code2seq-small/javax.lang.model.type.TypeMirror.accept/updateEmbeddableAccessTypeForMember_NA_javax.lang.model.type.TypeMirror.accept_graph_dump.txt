Line_5 $$ if (embeddedClassName != null) -->Line_7 $$ if (accessTypeInfo == null) [ CD ]
Line_2 $$ private static void updateEmbeddableAccessTypeForMember(Context context, AccessType defaultAccessType, Element member) -->Line_9 $$ context.addAccessTypeInformation(embeddedClassName, accessTypeInfo)[ FD ]
Line_7 $$ if (accessTypeInfo == null) -->Line_9 $$ context.addAccessTypeInformation(embeddedClassName, accessTypeInfo)[ CD ]
Line_2 $$ private static void updateEmbeddableAccessTypeForMember(Context context, AccessType defaultAccessType, Element member) -->Line_4 $$ String embeddedClassName = member.asType().accept(visitor, member)[ FD ]
Line_6 $$ AccessTypeInformation accessTypeInfo = context.getAccessTypeInfo(embeddedClassName)-->Line_9 $$ context.addAccessTypeInformation(embeddedClassName, accessTypeInfo)[ FD ]
Line_2 $$ private static void updateEmbeddableAccessTypeForMember(Context context, AccessType defaultAccessType, Element member) -->Line_11 $$ accessTypeInfo.setDefaultAccessType(defaultAccessType)[ FD ]
Line_2 $$ private static void updateEmbeddableAccessTypeForMember(Context context, AccessType defaultAccessType, Element member) -->Line_4 $$ String embeddedClassName = member.asType().accept(visitor, member)[ CD ]
Line_7 $$ if (accessTypeInfo == null) -->Line_8 $$ accessTypeInfo = new AccessTypeInformation(embeddedClassName, null, defaultAccessType)[ CD ]
Line_4 $$ String embeddedClassName = member.asType().accept(visitor, member)-->Line_5 $$ if (embeddedClassName != null) [ FD ]
Line_7 $$ if (accessTypeInfo == null) -->Line_11 $$ accessTypeInfo.setDefaultAccessType(defaultAccessType)[ CD ]
Line_2 $$ private static void updateEmbeddableAccessTypeForMember(Context context, AccessType defaultAccessType, Element member) -->Line_6 $$ AccessTypeInformation accessTypeInfo = context.getAccessTypeInfo(embeddedClassName)[ FD ]
Line_2 $$ private static void updateEmbeddableAccessTypeForMember(Context context, AccessType defaultAccessType, Element member) -->Line_3 $$ EmbeddedAttributeVisitor visitor = new EmbeddedAttributeVisitor(context)[ CD ]
Line_6 $$ AccessTypeInformation accessTypeInfo = context.getAccessTypeInfo(embeddedClassName)-->Line_8 $$ accessTypeInfo = new AccessTypeInformation(embeddedClassName, null, defaultAccessType)[ FD ]
Line_5 $$ if (embeddedClassName != null) -->Line_6 $$ AccessTypeInformation accessTypeInfo = context.getAccessTypeInfo(embeddedClassName)[ CD ]
Line_4 $$ String embeddedClassName = member.asType().accept(visitor, member)-->Line_6 $$ AccessTypeInformation accessTypeInfo = context.getAccessTypeInfo(embeddedClassName)[ FD ]
Line_4 $$ String embeddedClassName = member.asType().accept(visitor, member)-->Line_9 $$ context.addAccessTypeInformation(embeddedClassName, accessTypeInfo)[ FD ]
Line_8 $$ accessTypeInfo = new AccessTypeInformation(embeddedClassName, null, defaultAccessType)-->Line_9 $$ context.addAccessTypeInformation(embeddedClassName, accessTypeInfo)[ FD ]
Line_8 $$ accessTypeInfo = new AccessTypeInformation(embeddedClassName, null, defaultAccessType)-->Line_11 $$ accessTypeInfo.setDefaultAccessType(defaultAccessType)[ FD ]
Line_6 $$ AccessTypeInformation accessTypeInfo = context.getAccessTypeInfo(embeddedClassName)-->Line_11 $$ accessTypeInfo.setDefaultAccessType(defaultAccessType)[ FD ]
Line_3 $$ EmbeddedAttributeVisitor visitor = new EmbeddedAttributeVisitor(context)-->Line_4 $$ String embeddedClassName = member.asType().accept(visitor, member)[ FD ]
Line_6 $$ AccessTypeInformation accessTypeInfo = context.getAccessTypeInfo(embeddedClassName)-->Line_7 $$ if (accessTypeInfo == null) [ FD ]
Line_2 $$ private static void updateEmbeddableAccessTypeForMember(Context context, AccessType defaultAccessType, Element member) -->Line_5 $$ if (embeddedClassName != null) [ CD ]
