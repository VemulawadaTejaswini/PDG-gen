Line_11 $$ if (ticket != null && ticket.hasKerberosCredentials()) -->Line_13 $$ if (krbInfo != null && krbInfo.clientPrincipal() != null) [ CD ]
Line_12 $$ KerberosInfo krbInfo = remoteId.getProtocol().getAnnotation(KerberosInfo.class)-->Line_13 $$ if (krbInfo != null && krbInfo.clientPrincipal() != null) [ FD ]
Line_3 $$ short ioFailures = 0-->Line_34 $$ timeoutFailures = ioFailures = 0[ FD ]
Line_16 $$ if (localAddr != null) -->Line_17 $$ this.socket.bind(new InetSocketAddress(localAddr, 0))[ CD ]
Line_13 $$ if (krbInfo != null && krbInfo.clientPrincipal() != null) -->Line_16 $$ if (localAddr != null) [ CD ]
Line_2 $$ private synchronized void setupConnection() throws IOException -->Line_5 $$ while (true) [ CD ]
Line_14 $$ String host = SecurityUtil.getHostFromPrincipal(remoteId.getTicket().getUserName())-->Line_15 $$ InetAddress localAddr = NetUtils.getLocalInetAddress(host)[ FD ]
Line_3 $$ short ioFailures = 0-->Line_29 $$ timeoutFailures = ioFailures = 0[ FD ]
Line_4 $$ short timeoutFailures = 0-->Line_34 $$ timeoutFailures = ioFailures = 0[ FD ]
Line_34 $$ timeoutFailures = ioFailures = 0-->Line_31 $$ handleConnectionTimeout(timeoutFailures++, maxRetriesOnSocketTimeouts, toe)[ FD ]
Line_28 $$ if (updateAddress()) -->Line_29 $$ timeoutFailures = ioFailures = 0[ CD ]
Line_4 $$ short timeoutFailures = 0-->Line_31 $$ handleConnectionTimeout(timeoutFailures++, maxRetriesOnSocketTimeouts, toe)[ FD ]
Line_29 $$ timeoutFailures = ioFailures = 0-->Line_36 $$ handleConnectionFailure(ioFailures++, ie)[ FD ]
Line_29 $$ timeoutFailures = ioFailures = 0-->Line_31 $$ handleConnectionTimeout(timeoutFailures++, maxRetriesOnSocketTimeouts, toe)[ FD ]
Line_10 $$ UserGroupInformation ticket = remoteId.getTicket()-->Line_11 $$ if (ticket != null && ticket.hasKerberosCredentials()) [ FD ]
Line_15 $$ InetAddress localAddr = NetUtils.getLocalInetAddress(host)-->Line_16 $$ if (localAddr != null) [ FD ]
Line_13 $$ if (krbInfo != null && krbInfo.clientPrincipal() != null) -->Line_14 $$ String host = SecurityUtil.getHostFromPrincipal(remoteId.getTicket().getUserName())[ CD ]
Line_11 $$ if (ticket != null && ticket.hasKerberosCredentials()) -->Line_12 $$ KerberosInfo krbInfo = remoteId.getProtocol().getAnnotation(KerberosInfo.class)[ CD ]
Line_33 $$ if (updateAddress()) -->Line_34 $$ timeoutFailures = ioFailures = 0[ CD ]
Line_2 $$ private synchronized void setupConnection() throws IOException -->Line_4 $$ short timeoutFailures = 0[ CD ]
Line_34 $$ timeoutFailures = ioFailures = 0-->Line_36 $$ handleConnectionFailure(ioFailures++, ie)[ FD ]
Line_3 $$ short ioFailures = 0-->Line_36 $$ handleConnectionFailure(ioFailures++, ie)[ FD ]
Line_2 $$ private synchronized void setupConnection() throws IOException -->Line_3 $$ short ioFailures = 0[ CD ]
Line_4 $$ short timeoutFailures = 0-->Line_29 $$ timeoutFailures = ioFailures = 0[ FD ]
Line_29 $$ timeoutFailures = ioFailures = 0-->Line_34 $$ timeoutFailures = ioFailures = 0[ FD ]
Line_13 $$ if (krbInfo != null && krbInfo.clientPrincipal() != null) -->Line_15 $$ InetAddress localAddr = NetUtils.getLocalInetAddress(host)[ CD ]
