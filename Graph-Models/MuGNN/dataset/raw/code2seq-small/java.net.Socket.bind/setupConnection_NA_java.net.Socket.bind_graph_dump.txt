Line_3 $$ short ioFailures = 0-->Line_39 $$ timeoutFailures = ioFailures = 0[ FD ]
Line_43 $$ if (updateAddress()) -->Line_44 $$ timeoutFailures = ioFailures = 0[ CD ]
Line_44 $$ timeoutFailures = ioFailures = 0-->Line_46 $$ handleConnectionFailure(ioFailures++, ie)[ FD ]
Line_44 $$ timeoutFailures = ioFailures = 0-->Line_41 $$ handleConnectionTimeout(timeoutFailures++, maxRetriesOnSocketTimeouts, toe)[ FD ]
Line_16 $$ if (ticket != null && ticket.hasKerberosCredentials()) -->Line_18 $$ if (krbInfo != null && krbInfo.clientPrincipal() != null) [ CD ]
Line_2 $$ private synchronized void setupConnection() throws IOException -->Line_5 $$ while (true) [ CD ]
Line_39 $$ timeoutFailures = ioFailures = 0-->Line_41 $$ handleConnectionTimeout(timeoutFailures++, maxRetriesOnSocketTimeouts, toe)[ FD ]
Line_2 $$ private synchronized void setupConnection() throws IOException -->Line_4 $$ short timeoutFailures = 0[ CD ]
Line_2 $$ private synchronized void setupConnection() throws IOException -->Line_3 $$ short ioFailures = 0[ CD ]
Line_39 $$ timeoutFailures = ioFailures = 0-->Line_44 $$ timeoutFailures = ioFailures = 0[ FD ]
Line_18 $$ if (krbInfo != null && krbInfo.clientPrincipal() != null) -->Line_22 $$ if (localAddr != null) [ CD ]
Line_22 $$ if (localAddr != null) -->Line_23 $$ this.socket.bind(new InetSocketAddress(localAddr, 0))[ CD ]
Line_4 $$ short timeoutFailures = 0-->Line_39 $$ timeoutFailures = ioFailures = 0[ FD ]
Line_16 $$ if (ticket != null && ticket.hasKerberosCredentials()) -->Line_17 $$ KerberosInfo krbInfo = remoteId.getProtocol().getAnnotation(KerberosInfo.class)[ CD ]
Line_3 $$ short ioFailures = 0-->Line_44 $$ timeoutFailures = ioFailures = 0[ FD ]
Line_18 $$ if (krbInfo != null && krbInfo.clientPrincipal() != null) -->Line_19 $$ String host = SecurityUtil.getHostFromPrincipal(remoteId.getTicket().getUserName())[ CD ]
Line_4 $$ short timeoutFailures = 0-->Line_44 $$ timeoutFailures = ioFailures = 0[ FD ]
Line_39 $$ timeoutFailures = ioFailures = 0-->Line_46 $$ handleConnectionFailure(ioFailures++, ie)[ FD ]
Line_38 $$ if (updateAddress()) -->Line_39 $$ timeoutFailures = ioFailures = 0[ CD ]
Line_4 $$ short timeoutFailures = 0-->Line_41 $$ handleConnectionTimeout(timeoutFailures++, maxRetriesOnSocketTimeouts, toe)[ FD ]
Line_3 $$ short ioFailures = 0-->Line_46 $$ handleConnectionFailure(ioFailures++, ie)[ FD ]
Line_17 $$ KerberosInfo krbInfo = remoteId.getProtocol().getAnnotation(KerberosInfo.class)-->Line_18 $$ if (krbInfo != null && krbInfo.clientPrincipal() != null) [ FD ]
