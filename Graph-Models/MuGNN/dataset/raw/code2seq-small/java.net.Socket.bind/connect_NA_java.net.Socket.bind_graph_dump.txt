Line_17 $$ Class localClass = localAddr.getClass()-->Line_19 $$ Preconditions.checkArgument(localClass.equals(remoteClass), "Local address %s must be of same family as remote address %s.", localAddr, endpoint)[ FD ]
Line_16 $$ if (localAddr != null) -->Line_18 $$ Class remoteClass = endpoint.getClass()[ CD ]
Line_16 $$ if (localAddr != null) -->Line_19 $$ Preconditions.checkArgument(localClass.equals(remoteClass), "Local address %s must be of same family as remote address %s.", localAddr, endpoint)[ CD ]
Line_23 $$ if (ch == null) -->Line_27 $$ SocketIOWithTimeout.connect(ch, endpoint, timeout)[ CD ]
Line_16 $$ if (localAddr != null) -->Line_20 $$ socket.bind(localAddr)[ CD ]
Line_15 $$ SocketChannel ch = socket.getChannel()-->Line_27 $$ SocketIOWithTimeout.connect(ch, endpoint, timeout)[ FD ]
Line_15 $$ SocketChannel ch = socket.getChannel()-->Line_23 $$ if (ch == null) [ FD ]
Line_18 $$ Class remoteClass = endpoint.getClass()-->Line_19 $$ Preconditions.checkArgument(localClass.equals(remoteClass), "Local address %s must be of same family as remote address %s.", localAddr, endpoint)[ FD ]
Line_16 $$ if (localAddr != null) -->Line_17 $$ Class localClass = localAddr.getClass()[ CD ]
