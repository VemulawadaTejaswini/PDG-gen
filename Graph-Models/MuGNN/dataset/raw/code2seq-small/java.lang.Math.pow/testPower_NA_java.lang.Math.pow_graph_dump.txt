Line_3 $$ for (long left : longLefts) -->Line_15 $$ assertFunction("power(" + left + ", " + right + ")", DOUBLE, Math.pow(left, right))[ FD ]
Line_3 $$ for (long left : longLefts) -->Line_5 $$ assertFunction("power(" + left + ", " + right + ")", DOUBLE, Math.pow(left, right))[ FD ]
Line_2 $$ public void testPower() -->Line_25 $$ assertFunction("power(NULL, 5.0)", DOUBLE, null)[ CD ]
Line_4 $$ for (long right : longRights) -->Line_15 $$ assertFunction("power(" + left + ", " + right + ")", DOUBLE, Math.pow(left, right))[ FD ]
Line_4 $$ for (long right : longRights) -->Line_10 $$ assertFunction("power(" + left + ", " + right + ")", DOUBLE, Math.pow(left, right))[ FD ]
Line_4 $$ for (long right : longRights) -->Line_5 $$ assertFunction("power(" + left + ", " + right + ")", DOUBLE, Math.pow(left, right))[ FD ]
Line_2 $$ public void testPower() -->Line_26 $$ assertFunction("pow(5.0, 2.0)", DOUBLE, 25.0)[ CD ]
Line_2 $$ public void testPower() -->Line_24 $$ assertFunction("power(5.0, NULL)", DOUBLE, null)[ CD ]
Line_4 $$ for (long right : longRights) -->Line_20 $$ assertFunction("power(" + left + ", " + right + ")", DOUBLE, Math.pow(left, right))[ FD ]
Line_3 $$ for (long left : longLefts) -->Line_10 $$ assertFunction("power(" + left + ", " + right + ")", DOUBLE, Math.pow(left, right))[ FD ]
Line_3 $$ for (long left : longLefts) -->Line_20 $$ assertFunction("power(" + left + ", " + right + ")", DOUBLE, Math.pow(left, right))[ FD ]
Line_2 $$ public void testPower() -->Line_23 $$ assertFunction("power(NULL, NULL)", DOUBLE, null)[ CD ]
