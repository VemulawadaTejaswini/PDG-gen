Line_5 $$ Pixmap pixmap-->Line_9 $$ pixmap = new Pixmap(width, rows, Format.Alpha)[ FD ]
Line_3 $$ int width = getWidth(), rows = getRows()-->Line_36 $$ for (int x = 0; x < width; x++) [ FD ]
Line_2 $$ public Pixmap getPixmap(Format format, Color color, float gamma) -->Line_3 $$ int width = getWidth(), rows = getRows()[ CD ]
Line_3 $$ int width = getWidth(), rows = getRows()-->Line_20 $$ for (int i = 0, x = 0; x < width; i++, x += 8) [ FD ]
Line_12 $$ pixmap = new Pixmap(width, rows, Format.RGBA8888)-->Line_50 $$ converted.drawPixmap(pixmap, 0, 0)[ FD ]
Line_9 $$ pixmap = new Pixmap(width, rows, Format.Alpha)-->Line_10 $$ BufferUtils.copy(src, pixmap.getPixels(), pixmap.getPixels().capacity())[ FD ]
Line_8 $$ if (color == Color.WHITE && pixelMode == FT_PIXEL_MODE_GRAY && rowBytes == width && gamma == 1) -->Line_13 $$ int rgba = Color.rgba8888(color)[ CD ]
Line_37 $$ float alpha = (srcRow[x] & 0xff) / 255f-->Line_38 $$ alpha = (float) Math.pow(alpha, gamma)[ FD ]
Line_2 $$ public Pixmap getPixmap(Format format, Color color, float gamma) -->Line_45 $$ Pixmap converted = pixmap[ CD ]
Line_9 $$ pixmap = new Pixmap(width, rows, Format.Alpha)-->Line_46 $$ if (format != pixmap.getFormat()) [ FD ]
Line_15 $$ int[] dstRow = new int[width]-->Line_41 $$ dst.put(dstRow)[ FD ]
Line_5 $$ Pixmap pixmap-->Line_10 $$ BufferUtils.copy(src, pixmap.getPixels(), pixmap.getPixels().capacity())[ FD ]
Line_2 $$ public Pixmap getPixmap(Format format, Color color, float gamma) -->Line_7 $$ int rowBytes = Math.abs(getPitch())[ CD ]
Line_18 $$ for (int y = 0; y < rows; y++) -->Line_19 $$ src.get(srcRow)[ CD ]
Line_47 $$ converted = new Pixmap(pixmap.getWidth(), pixmap.getHeight(), format)-->Line_50 $$ converted.drawPixmap(pixmap, 0, 0)[ FD ]
Line_18 $$ for (int y = 0; y < rows; y++) -->Line_29 $$ dst.put(dstRow)[ CD ]
Line_23 $$ if ((b & (1 << (7 - ii))) != 0)-->Line_26 $$ dstRow[x + ii] = 0[ CD ]
Line_16 $$ IntBuffer dst = pixmap.getPixels().asIntBuffer()-->Line_29 $$ dst.put(dstRow)[ FD ]
Line_2 $$ public Pixmap getPixmap(Format format, Color color, float gamma) -->Line_38 $$ alpha = (float) Math.pow(alpha, gamma)[ FD ]
Line_2 $$ public Pixmap getPixmap(Format format, Color color, float gamma) -->Line_46 $$ if (format != pixmap.getFormat()) [ CD ]
Line_36 $$ for (int x = 0; x < width; x++) -->Line_39 $$ dstRow[x] = rgb | (int) (a * alpha)[ CD ]
Line_5 $$ Pixmap pixmap-->Line_52 $$ pixmap.dispose()[ FD ]
Line_3 $$ int width = getWidth(), rows = getRows()-->Line_34 $$ for (int y = 0; y < rows; y++) [ FD ]
Line_32 $$ int rgb = rgba & 0xffffff00-->Line_39 $$ dstRow[x] = rgb | (int) (a * alpha)[ FD ]
Line_36 $$ for (int x = 0; x < width; x++) -->Line_38 $$ alpha = (float) Math.pow(alpha, gamma)[ CD ]
Line_2 $$ public Pixmap getPixmap(Format format, Color color, float gamma) -->Line_13 $$ int rgba = Color.rgba8888(color)[ FD ]
Line_46 $$ if (format != pixmap.getFormat()) -->Line_49 $$ Pixmap.setBlending(Blending.None)[ CD ]
Line_45 $$ Pixmap converted = pixmap-->Line_47 $$ converted = new Pixmap(pixmap.getWidth(), pixmap.getHeight(), format)[ FD ]
Line_46 $$ if (format != pixmap.getFormat()) -->Line_51 $$ Pixmap.setBlending(blending)[ CD ]
Line_3 $$ int width = getWidth(), rows = getRows()-->Line_18 $$ for (int y = 0; y < rows; y++) [ FD ]
Line_12 $$ pixmap = new Pixmap(width, rows, Format.RGBA8888)-->Line_16 $$ IntBuffer dst = pixmap.getPixels().asIntBuffer()[ FD ]
Line_2 $$ public Pixmap getPixmap(Format format, Color color, float gamma) -->Line_4 $$ ByteBuffer src = getBuffer()[ CD ]
Line_2 $$ public Pixmap getPixmap(Format format, Color color, float gamma) -->Line_6 $$ int pixelMode = getPixelMode()[ CD ]
Line_34 $$ for (int y = 0; y < rows; y++) -->Line_36 $$ for (int x = 0; x < width; x++) [ CD ]
Line_18 $$ for (int y = 0; y < rows; y++) -->Line_34 $$ for (int y = 0; y < rows; y++) [ FD ]
Line_46 $$ if (format != pixmap.getFormat()) -->Line_48 $$ Blending blending = Pixmap.getBlending()[ CD ]
Line_34 $$ for (int y = 0; y < rows; y++) -->Line_41 $$ dst.put(dstRow)[ CD ]
Line_8 $$ if (color == Color.WHITE && pixelMode == FT_PIXEL_MODE_GRAY && rowBytes == width && gamma == 1) -->Line_10 $$ BufferUtils.copy(src, pixmap.getPixels(), pixmap.getPixels().capacity())[ CD ]
Line_8 $$ if (color == Color.WHITE && pixelMode == FT_PIXEL_MODE_GRAY && rowBytes == width && gamma == 1) -->Line_12 $$ pixmap = new Pixmap(width, rows, Format.RGBA8888)[ CD ]
Line_6 $$ int pixelMode = getPixelMode()-->Line_17 $$ if (pixelMode == FT_PIXEL_MODE_MONO) [ FD ]
Line_5 $$ Pixmap pixmap-->Line_46 $$ if (format != pixmap.getFormat()) [ FD ]
Line_36 $$ for (int x = 0; x < width; x++) -->Line_37 $$ float alpha = (srcRow[x] & 0xff) / 255f[ CD ]
Line_12 $$ pixmap = new Pixmap(width, rows, Format.RGBA8888)-->Line_47 $$ converted = new Pixmap(pixmap.getWidth(), pixmap.getHeight(), format)[ FD ]
Line_15 $$ int[] dstRow = new int[width]-->Line_29 $$ dst.put(dstRow)[ FD ]
Line_2 $$ public Pixmap getPixmap(Format format, Color color, float gamma) -->Line_54 $$ return converted[ CD ]
Line_9 $$ pixmap = new Pixmap(width, rows, Format.Alpha)-->Line_52 $$ pixmap.dispose()[ FD ]
Line_14 $$ byte[] srcRow = new byte[rowBytes]-->Line_35 $$ src.get(srcRow)[ FD ]
Line_2 $$ public Pixmap getPixmap(Format format, Color color, float gamma) -->Line_5 $$ Pixmap pixmap[ CD ]
Line_5 $$ Pixmap pixmap-->Line_12 $$ pixmap = new Pixmap(width, rows, Format.RGBA8888)[ FD ]
Line_5 $$ Pixmap pixmap-->Line_50 $$ converted.drawPixmap(pixmap, 0, 0)[ FD ]
Line_8 $$ if (color == Color.WHITE && pixelMode == FT_PIXEL_MODE_GRAY && rowBytes == width && gamma == 1) -->Line_16 $$ IntBuffer dst = pixmap.getPixels().asIntBuffer()[ CD ]
Line_8 $$ if (color == Color.WHITE && pixelMode == FT_PIXEL_MODE_GRAY && rowBytes == width && gamma == 1) -->Line_9 $$ pixmap = new Pixmap(width, rows, Format.Alpha)[ CD ]
Line_12 $$ pixmap = new Pixmap(width, rows, Format.RGBA8888)-->Line_52 $$ pixmap.dispose()[ FD ]
Line_12 $$ pixmap = new Pixmap(width, rows, Format.RGBA8888)-->Line_46 $$ if (format != pixmap.getFormat()) [ FD ]
Line_9 $$ pixmap = new Pixmap(width, rows, Format.Alpha)-->Line_12 $$ pixmap = new Pixmap(width, rows, Format.RGBA8888)[ FD ]
Line_45 $$ Pixmap converted = pixmap-->Line_50 $$ converted.drawPixmap(pixmap, 0, 0)[ FD ]
Line_8 $$ if (color == Color.WHITE && pixelMode == FT_PIXEL_MODE_GRAY && rowBytes == width && gamma == 1) -->Line_14 $$ byte[] srcRow = new byte[rowBytes][ CD ]
Line_2 $$ public Pixmap getPixmap(Format format, Color color, float gamma) -->Line_46 $$ if (format != pixmap.getFormat()) [ FD ]
Line_17 $$ if (pixelMode == FT_PIXEL_MODE_MONO) -->Line_34 $$ for (int y = 0; y < rows; y++) [ CD ]
Line_46 $$ if (format != pixmap.getFormat()) -->Line_52 $$ pixmap.dispose()[ CD ]
Line_2 $$ public Pixmap getPixmap(Format format, Color color, float gamma) -->Line_8 $$ if (color == Color.WHITE && pixelMode == FT_PIXEL_MODE_GRAY && rowBytes == width && gamma == 1) [ CD ]
Line_4 $$ ByteBuffer src = getBuffer()-->Line_19 $$ src.get(srcRow)[ FD ]
Line_34 $$ for (int y = 0; y < rows; y++) -->Line_35 $$ src.get(srcRow)[ CD ]
Line_4 $$ ByteBuffer src = getBuffer()-->Line_10 $$ BufferUtils.copy(src, pixmap.getPixels(), pixmap.getPixels().capacity())[ FD ]
Line_9 $$ pixmap = new Pixmap(width, rows, Format.Alpha)-->Line_50 $$ converted.drawPixmap(pixmap, 0, 0)[ FD ]
Line_23 $$ if ((b & (1 << (7 - ii))) != 0)-->Line_24 $$ dstRow[x + ii] = rgba[ CD ]
Line_20 $$ for (int i = 0, x = 0; x < width; i++, x += 8) -->Line_36 $$ for (int x = 0; x < width; x++) [ FD ]
Line_9 $$ pixmap = new Pixmap(width, rows, Format.Alpha)-->Line_47 $$ converted = new Pixmap(pixmap.getWidth(), pixmap.getHeight(), format)[ FD ]
Line_46 $$ if (format != pixmap.getFormat()) -->Line_50 $$ converted.drawPixmap(pixmap, 0, 0)[ CD ]
Line_22 $$ for (int ii = 0, n = Math.min(8, width - x); ii < n; ii++) -->Line_23 $$ if ((b & (1 << (7 - ii))) != 0)[ CD ]
Line_5 $$ Pixmap pixmap-->Line_16 $$ IntBuffer dst = pixmap.getPixels().asIntBuffer()[ FD ]
Line_9 $$ pixmap = new Pixmap(width, rows, Format.Alpha)-->Line_16 $$ IntBuffer dst = pixmap.getPixels().asIntBuffer()[ FD ]
Line_5 $$ Pixmap pixmap-->Line_47 $$ converted = new Pixmap(pixmap.getWidth(), pixmap.getHeight(), format)[ FD ]
Line_4 $$ ByteBuffer src = getBuffer()-->Line_35 $$ src.get(srcRow)[ FD ]
Line_8 $$ if (color == Color.WHITE && pixelMode == FT_PIXEL_MODE_GRAY && rowBytes == width && gamma == 1) -->Line_15 $$ int[] dstRow = new int[width][ CD ]
Line_20 $$ for (int i = 0, x = 0; x < width; i++, x += 8) -->Line_22 $$ for (int ii = 0, n = Math.min(8, width - x); ii < n; ii++) [ CD ]
Line_48 $$ Blending blending = Pixmap.getBlending()-->Line_51 $$ Pixmap.setBlending(blending)[ FD ]
Line_13 $$ int rgba = Color.rgba8888(color)-->Line_24 $$ dstRow[x + ii] = rgba[ FD ]
Line_16 $$ IntBuffer dst = pixmap.getPixels().asIntBuffer()-->Line_41 $$ dst.put(dstRow)[ FD ]
Line_17 $$ if (pixelMode == FT_PIXEL_MODE_MONO) -->Line_33 $$ int a = rgba & 0xff[ CD ]
Line_14 $$ byte[] srcRow = new byte[rowBytes]-->Line_19 $$ src.get(srcRow)[ FD ]
Line_46 $$ if (format != pixmap.getFormat()) -->Line_47 $$ converted = new Pixmap(pixmap.getWidth(), pixmap.getHeight(), format)[ CD ]
Line_18 $$ for (int y = 0; y < rows; y++) -->Line_20 $$ for (int i = 0, x = 0; x < width; i++, x += 8) [ CD ]
Line_17 $$ if (pixelMode == FT_PIXEL_MODE_MONO) -->Line_32 $$ int rgb = rgba & 0xffffff00[ CD ]
Line_8 $$ if (color == Color.WHITE && pixelMode == FT_PIXEL_MODE_GRAY && rowBytes == width && gamma == 1) -->Line_17 $$ if (pixelMode == FT_PIXEL_MODE_MONO) [ CD ]
Line_17 $$ if (pixelMode == FT_PIXEL_MODE_MONO) -->Line_18 $$ for (int y = 0; y < rows; y++) [ CD ]
Line_20 $$ for (int i = 0, x = 0; x < width; i++, x += 8) -->Line_21 $$ byte b = srcRow[i][ CD ]
