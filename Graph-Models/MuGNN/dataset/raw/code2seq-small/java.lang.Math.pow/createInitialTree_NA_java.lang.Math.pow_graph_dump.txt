Line_2 $$ private MerkleTrees createInitialTree(RepairJobDesc desc) -->Line_3 $$ MerkleTrees tree = new MerkleTrees(partirioner)[ CD ]
Line_3 $$ MerkleTrees tree = new MerkleTrees(partirioner)-->Line_5 $$ tree.init()[ FD ]
Line_3 $$ MerkleTrees tree = new MerkleTrees(partirioner)-->Line_4 $$ tree.addMerkleTrees((int) Math.pow(2, 15), desc.ranges)[ FD ]
Line_2 $$ private MerkleTrees createInitialTree(RepairJobDesc desc) -->Line_5 $$ tree.init()[ CD ]
Line_6 $$ for (MerkleTree.TreeRange r : tree.invalids()) -->Line_7 $$ r.ensureHashInitialised()[ FD ]
Line_2 $$ private MerkleTrees createInitialTree(RepairJobDesc desc) -->Line_4 $$ tree.addMerkleTrees((int) Math.pow(2, 15), desc.ranges)[ CD ]
Line_2 $$ private MerkleTrees createInitialTree(RepairJobDesc desc) -->Line_9 $$ return tree[ CD ]
Line_3 $$ MerkleTrees tree = new MerkleTrees(partirioner)-->Line_6 $$ for (MerkleTree.TreeRange r : tree.invalids()) [ FD ]
