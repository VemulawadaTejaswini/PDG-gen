Line_3 $$ byte sizedepth = (byte) (Math.log10(maxsize) / Math.log10(2))-->Line_4 $$ byte depth = (byte) Math.min(sizedepth, hashdepth)[ FD ]
Line_2 $$ public void init() -->Line_4 $$ byte depth = (byte) Math.min(sizedepth, hashdepth)[ CD ]
Line_4 $$ byte depth = (byte) Math.min(sizedepth, hashdepth)-->Line_5 $$ root = initHelper(fullRange.left, fullRange.right, (byte) 0, depth)[ FD ]
Line_4 $$ byte depth = (byte) Math.min(sizedepth, hashdepth)-->Line_6 $$ size = (long) Math.pow(2, depth)[ FD ]
Line_2 $$ public void init() -->Line_3 $$ byte sizedepth = (byte) (Math.log10(maxsize) / Math.log10(2))[ CD ]
Line_2 $$ public void init() -->Line_5 $$ root = initHelper(fullRange.left, fullRange.right, (byte) 0, depth)[ CD ]
