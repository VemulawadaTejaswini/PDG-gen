Line_4 $$ int failures = 1-->Line_8 $$ failures = x.get()[ FD ]
Line_5 $$ if (failureCounts.containsKey(mapId)) -->Line_6 $$ IntWritable x = failureCounts.get(mapId)[ CD ]
Line_2 $$ public synchronized void copyFailed(TaskAttemptID mapId, MapHost host, boolean readError, boolean connectExcpt) -->Line_22 $$ checkAndInformJobTracker(failures, mapId, readError, connectExcpt, hostFail)[ FD ]
Line_2 $$ public synchronized void copyFailed(TaskAttemptID mapId, MapHost host, boolean readError, boolean connectExcpt) -->Line_3 $$ host.penalize()[ FD ]
Line_2 $$ public synchronized void copyFailed(TaskAttemptID mapId, MapHost host, boolean readError, boolean connectExcpt) -->Line_23 $$ checkReducerHealth()[ CD ]
Line_2 $$ public synchronized void copyFailed(TaskAttemptID mapId, MapHost host, boolean readError, boolean connectExcpt) -->Line_5 $$ if (failureCounts.containsKey(mapId)) [ CD ]
Line_8 $$ failures = x.get()-->Line_22 $$ checkAndInformJobTracker(failures, mapId, readError, connectExcpt, hostFail)[ FD ]
Line_25 $$ if (delay > maxDelay) -->Line_26 $$ delay = maxDelay[ CD ]
Line_2 $$ public synchronized void copyFailed(TaskAttemptID mapId, MapHost host, boolean readError, boolean connectExcpt) -->Line_15 $$ if (failures >= abortFailureLimit) [ CD ]
Line_8 $$ failures = x.get()-->Line_24 $$ long delay = (long) (INITIAL_PENALTY * Math.pow(PENALTY_GROWTH_RATE, failures))[ FD ]
Line_2 $$ public synchronized void copyFailed(TaskAttemptID mapId, MapHost host, boolean readError, boolean connectExcpt) -->Line_5 $$ if (failureCounts.containsKey(mapId)) [ FD ]
Line_5 $$ if (failureCounts.containsKey(mapId)) -->Line_8 $$ failures = x.get()[ CD ]
Line_5 $$ if (failureCounts.containsKey(mapId)) -->Line_7 $$ x.set(x.get() + 1)[ CD ]
Line_8 $$ failures = x.get()-->Line_15 $$ if (failures >= abortFailureLimit) [ FD ]
Line_2 $$ public synchronized void copyFailed(TaskAttemptID mapId, MapHost host, boolean readError, boolean connectExcpt) -->Line_10 $$ failureCounts.put(mapId, new IntWritable(1))[ FD ]
Line_2 $$ public synchronized void copyFailed(TaskAttemptID mapId, MapHost host, boolean readError, boolean connectExcpt) -->Line_6 $$ IntWritable x = failureCounts.get(mapId)[ FD ]
Line_4 $$ int failures = 1-->Line_22 $$ checkAndInformJobTracker(failures, mapId, readError, connectExcpt, hostFail)[ FD ]
Line_2 $$ public synchronized void copyFailed(TaskAttemptID mapId, MapHost host, boolean readError, boolean connectExcpt) -->Line_24 $$ long delay = (long) (INITIAL_PENALTY * Math.pow(PENALTY_GROWTH_RATE, failures))[ CD ]
Line_4 $$ int failures = 1-->Line_15 $$ if (failures >= abortFailureLimit) [ FD ]
Line_6 $$ IntWritable x = failureCounts.get(mapId)-->Line_7 $$ x.set(x.get() + 1)[ FD ]
Line_2 $$ public synchronized void copyFailed(TaskAttemptID mapId, MapHost host, boolean readError, boolean connectExcpt) -->Line_25 $$ if (delay > maxDelay) [ CD ]
Line_4 $$ int failures = 1-->Line_24 $$ long delay = (long) (INITIAL_PENALTY * Math.pow(PENALTY_GROWTH_RATE, failures))[ FD ]
Line_6 $$ IntWritable x = failureCounts.get(mapId)-->Line_8 $$ failures = x.get()[ FD ]
Line_24 $$ long delay = (long) (INITIAL_PENALTY * Math.pow(PENALTY_GROWTH_RATE, failures))-->Line_26 $$ delay = maxDelay[ FD ]
Line_2 $$ public synchronized void copyFailed(TaskAttemptID mapId, MapHost host, boolean readError, boolean connectExcpt) -->Line_3 $$ host.penalize()[ CD ]
Line_5 $$ if (failureCounts.containsKey(mapId)) -->Line_10 $$ failureCounts.put(mapId, new IntWritable(1))[ CD ]
Line_2 $$ public synchronized void copyFailed(TaskAttemptID mapId, MapHost host, boolean readError, boolean connectExcpt) -->Line_29 $$ failedShuffleCounter.increment(1)[ CD ]
Line_2 $$ public synchronized void copyFailed(TaskAttemptID mapId, MapHost host, boolean readError, boolean connectExcpt) -->Line_12 $$ String hostname = host.getHostName()[ FD ]
Line_2 $$ public synchronized void copyFailed(TaskAttemptID mapId, MapHost host, boolean readError, boolean connectExcpt) -->Line_28 $$ penalties.add(new Penalty(host, delay))[ CD ]
Line_2 $$ public synchronized void copyFailed(TaskAttemptID mapId, MapHost host, boolean readError, boolean connectExcpt) -->Line_4 $$ int failures = 1[ CD ]
Line_2 $$ public synchronized void copyFailed(TaskAttemptID mapId, MapHost host, boolean readError, boolean connectExcpt) -->Line_12 $$ String hostname = host.getHostName()[ CD ]
Line_2 $$ public synchronized void copyFailed(TaskAttemptID mapId, MapHost host, boolean readError, boolean connectExcpt) -->Line_22 $$ checkAndInformJobTracker(failures, mapId, readError, connectExcpt, hostFail)[ CD ]
Line_24 $$ long delay = (long) (INITIAL_PENALTY * Math.pow(PENALTY_GROWTH_RATE, failures))-->Line_25 $$ if (delay > maxDelay) [ FD ]
