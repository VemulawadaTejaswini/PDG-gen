Line_4 $$ double result = Math.pow((normalized - 1), 2)-->Line_9 $$ result = 1[ FD ]
Line_4 $$ double result = Math.pow((normalized - 1), 2)-->Line_8 $$ if (result > 1) [ FD ]
Line_2 $$ public Double weight(int elapsed, int duration) -->Line_4 $$ double result = Math.pow((normalized - 1), 2)[ CD ]
Line_8 $$ if (result > 1) -->Line_9 $$ result = 1[ CD ]
Line_4 $$ double result = Math.pow((normalized - 1), 2)-->Line_6 $$ result = 0[ FD ]
Line_2 $$ public Double weight(int elapsed, int duration) -->Line_11 $$ return result[ CD ]
Line_4 $$ double result = Math.pow((normalized - 1), 2)-->Line_5 $$ if (result < 0) [ FD ]
Line_2 $$ public Double weight(int elapsed, int duration) -->Line_8 $$ if (result > 1) [ CD ]
Line_2 $$ public Double weight(int elapsed, int duration) -->Line_5 $$ if (result < 0) [ CD ]
Line_2 $$ public Double weight(int elapsed, int duration) -->Line_3 $$ double normalized = (double) elapsed / (double) duration[ CD ]
Line_6 $$ result = 0-->Line_9 $$ result = 1[ FD ]
Line_6 $$ result = 0-->Line_8 $$ if (result > 1) [ FD ]
Line_5 $$ if (result < 0) -->Line_6 $$ result = 0[ CD ]
