Line_21 $$ if (isSnapshotValidation) -->Line_54 $$ if (validator.gcBefore > 0)[ CD ]
Line_70 $$ try (AbstractCompactionStrategy.ScannerList scanners = cfs.getCompactionStrategyManager().getScanners(sstables, validator.desc.ranges);-->Line_75 $$ while (ci.hasNext()) [ FD ]
Line_15 $$ Refs<SSTableReader> sstables = null-->Line_95 $$ sstables.release()[ FD ]
Line_47 $$ sstables = Refs.tryRef(sstablesToValidate)-->Line_95 $$ sstables.release()[ FD ]
Line_36 $$ Set<SSTableReader> sstablesToValidate = new HashSet()-->Line_47 $$ sstables = Refs.tryRef(sstablesToValidate)[ FD ]
Line_35 $$ ColumnFamilyStore.RefViewFragment sstableCandidates = cfs.selectAndReference(View.select(SSTableSet.CANONICAL, ( s) -> !prs.isIncremental || !s.isRepaired()))-->Line_52 $$ sstableCandidates.release()[ FD ]
Line_43 $$ if (!Sets.intersection(currentlyRepairing, sstablesToValidate).isEmpty()) -->Line_44 $$ logger.error("Cannot start multiple repair sessions over the same sstables")[ CD ]
Line_94 $$ if (sstables != null)-->Line_95 $$ sstables.release()[ CD ]
Line_15 $$ Refs<SSTableReader> sstables = null-->Line_47 $$ sstables = Refs.tryRef(sstablesToValidate)[ FD ]
Line_70 $$ try (AbstractCompactionStrategy.ScannerList scanners = cfs.getCompactionStrategyManager().getScanners(sstables, validator.desc.ranges);-->Line_76 $$ if (ci.isStopRequested())[ FD ]
Line_67 $$ MerkleTrees tree = new MerkleTrees(cfs.getPartitioner())-->Line_68 $$ tree.addMerkleTrees((int) Math.pow(2, depth), validator.desc.ranges)[ FD ]
Line_63 $$ numPartitions += sstable.estimatedKeysForRanges(validator.desc.ranges)-->Line_91 $$ logger.trace("Validation finished in [ FD ]
Line_54 $$ if (validator.gcBefore > 0)-->Line_55 $$ gcBefore = validator.gcBefore[ CD ]
Line_21 $$ if (isSnapshotValidation) -->Line_48 $$ if (sstables == null) [ CD ]
Line_36 $$ Set<SSTableReader> sstablesToValidate = new HashSet()-->Line_43 $$ if (!Sets.intersection(currentlyRepairing, sstablesToValidate).isEmpty()) [ FD ]
Line_15 $$ Refs<SSTableReader> sstables = null-->Line_48 $$ if (sstables == null) [ FD ]
Line_19 $$ int nowInSec = FBUtilities.nowInSeconds()-->Line_57 $$ gcBefore = getDefaultGcBefore(cfs, nowInSec)[ FD ]
Line_42 $$ Set<SSTableReader> currentlyRepairing = ActiveRepairService.instance.currentlyRepairing(cfs.metadata.cfId, validator.desc.parentSessionId)-->Line_43 $$ if (!Sets.intersection(currentlyRepairing, sstablesToValidate).isEmpty()) [ FD ]
Line_36 $$ Set<SSTableReader> sstablesToValidate = new HashSet()-->Line_53 $$ prs.addSSTables(cfs.metadata.cfId, sstablesToValidate)[ FD ]
Line_21 $$ if (isSnapshotValidation) -->Line_35 $$ ColumnFamilyStore.RefViewFragment sstableCandidates = cfs.selectAndReference(View.select(SSTableSet.CANONICAL, ( s) -> !prs.isIncremental || !s.isRepaired()))[ CD ]
Line_55 $$ gcBefore = validator.gcBefore-->Line_57 $$ gcBefore = getDefaultGcBefore(cfs, nowInSec)[ FD ]
Line_38 $$ if (new Bounds(sstable.first.getToken(), sstable.last.getToken()).intersects(validator.desc.ranges)) -->Line_39 $$ sstablesToValidate.add(sstable)[ CD ]
Line_21 $$ if (isSnapshotValidation) -->Line_43 $$ if (!Sets.intersection(currentlyRepairing, sstablesToValidate).isEmpty()) [ CD ]
Line_37 $$ for (SSTableReader sstable : sstableCandidates.sstables) -->Line_63 $$ numPartitions += sstable.estimatedKeysForRanges(validator.desc.ranges)[ FD ]
Line_75 $$ while (ci.hasNext()) -->Line_76 $$ if (ci.isStopRequested())[ CD ]
Line_21 $$ if (isSnapshotValidation) -->Line_42 $$ Set<SSTableReader> currentlyRepairing = ActiveRepairService.instance.currentlyRepairing(cfs.metadata.cfId, validator.desc.parentSessionId)[ CD ]
Line_34 $$ ActiveRepairService.ParentRepairSession prs = ActiveRepairService.instance.getParentRepairSession(validator.desc.parentSessionId)-->Line_53 $$ prs.addSSTables(cfs.metadata.cfId, sstablesToValidate)[ FD ]
Line_15 $$ Refs<SSTableReader> sstables = null-->Line_94 $$ if (sstables != null)[ FD ]
Line_17 $$ String snapshotName = validator.desc.sessionId.toString()-->Line_85 $$ cfs.clearSnapshot(snapshotName)[ FD ]
Line_18 $$ int gcBefore-->Line_57 $$ gcBefore = getDefaultGcBefore(cfs, nowInSec)[ FD ]
Line_70 $$ try (AbstractCompactionStrategy.ScannerList scanners = cfs.getCompactionStrategyManager().getScanners(sstables, validator.desc.ranges);-->Line_77 $$ throw new CompactionInterruptedException(ci.getCompactionInfo())[ FD ]
Line_84 $$ if (isSnapshotValidation) -->Line_85 $$ cfs.clearSnapshot(snapshotName)[ CD ]
Line_88 $$ if (logger.isTraceEnabled()) -->Line_91 $$ logger.trace("Validation finished in [ CD ]
Line_36 $$ Set<SSTableReader> sstablesToValidate = new HashSet()-->Line_39 $$ sstablesToValidate.add(sstable)[ FD ]
Line_21 $$ if (isSnapshotValidation) -->Line_34 $$ ActiveRepairService.ParentRepairSession prs = ActiveRepairService.instance.getParentRepairSession(validator.desc.parentSessionId)[ CD ]
Line_67 $$ MerkleTrees tree = new MerkleTrees(cfs.getPartitioner())-->Line_91 $$ logger.trace("Validation finished in [ FD ]
Line_21 $$ if (isSnapshotValidation) -->Line_52 $$ sstableCandidates.release()[ CD ]
Line_21 $$ if (isSnapshotValidation) -->Line_47 $$ sstables = Refs.tryRef(sstablesToValidate)[ CD ]
Line_47 $$ sstables = Refs.tryRef(sstablesToValidate)-->Line_94 $$ if (sstables != null)[ FD ]
Line_47 $$ sstables = Refs.tryRef(sstablesToValidate)-->Line_70 $$ try (AbstractCompactionStrategy.ScannerList scanners = cfs.getCompactionStrategyManager().getScanners(sstables, validator.desc.ranges);[ FD ]
Line_54 $$ if (validator.gcBefore > 0)-->Line_57 $$ gcBefore = getDefaultGcBefore(cfs, nowInSec)[ CD ]
Line_48 $$ if (sstables == null) -->Line_49 $$ logger.error("Could not reference sstables")[ CD ]
Line_21 $$ if (isSnapshotValidation) -->Line_53 $$ prs.addSSTables(cfs.metadata.cfId, sstablesToValidate)[ CD ]
Line_17 $$ String snapshotName = validator.desc.sessionId.toString()-->Line_20 $$ boolean isSnapshotValidation = cfs.snapshotExists(snapshotName)[ FD ]
Line_70 $$ try (AbstractCompactionStrategy.ScannerList scanners = cfs.getCompactionStrategyManager().getScanners(sstables, validator.desc.ranges);-->Line_78 $$ try (UnfilteredRowIterator partition = ci.next()) [ FD ]
Line_78 $$ try (UnfilteredRowIterator partition = ci.next()) -->Line_79 $$ validator.add(partition)[ FD ]
Line_47 $$ sstables = Refs.tryRef(sstablesToValidate)-->Line_48 $$ if (sstables == null) [ FD ]
Line_18 $$ int gcBefore-->Line_55 $$ gcBefore = validator.gcBefore[ FD ]
Line_15 $$ Refs<SSTableReader> sstables = null-->Line_70 $$ try (AbstractCompactionStrategy.ScannerList scanners = cfs.getCompactionStrategyManager().getScanners(sstables, validator.desc.ranges);[ FD ]
Line_37 $$ for (SSTableReader sstable : sstableCandidates.sstables) -->Line_39 $$ sstablesToValidate.add(sstable)[ FD ]
Line_21 $$ if (isSnapshotValidation) -->Line_36 $$ Set<SSTableReader> sstablesToValidate = new HashSet()[ CD ]
