Line_3 $$ if (useLegacyScaling) -->Line_5 $$ double delta = speed < 1 ? 0.9 + Math.pow(speed - 0.7, 2) : 0.45 + Math.pow(speed - 0.25, 2)[ CD ]
Line_3 $$ if (useLegacyScaling) -->Line_9 $$ return (int) (expectedOnMyMachine * thisTiming / etalonTiming)[ CD ]
Line_3 $$ if (useLegacyScaling) -->Line_4 $$ double speed = 1.0 * thisTiming / etalonTiming[ CD ]
Line_5 $$ double delta = speed < 1 ? 0.9 + Math.pow(speed - 0.7, 2) : 0.45 + Math.pow(speed - 0.25, 2)-->Line_6 $$ expectedOnMyMachine *= delta[ FD ]
Line_3 $$ if (useLegacyScaling) -->Line_6 $$ expectedOnMyMachine *= delta[ CD ]
Line_2 $$ private static int adjust(int expectedOnMyMachine, long thisTiming, long etalonTiming, boolean useLegacyScaling) -->Line_6 $$ expectedOnMyMachine *= delta[ FD ]
Line_3 $$ if (useLegacyScaling) -->Line_7 $$ return expectedOnMyMachine[ CD ]
Line_2 $$ private static int adjust(int expectedOnMyMachine, long thisTiming, long etalonTiming, boolean useLegacyScaling) -->Line_3 $$ if (useLegacyScaling) [ CD ]
