Line_11 $$ while (0 != nInclusionsRemaining && !queue.isEmpty()) -->Line_14 $$ do [ CD ]
Line_39 $$ HeapElement match = queue.poll()-->Line_41 $$ reattach(match)[ FD ]
Line_22 $$ exclusionComparable = candidate.comparable()-->Line_17 $$ if (exclusionComparable != candidate.comparable()) [ FD ]
Line_38 $$ while (!queue.isEmpty() && queue.peek().comparable() == inclusionComparable) -->Line_39 $$ HeapElement match = queue.poll()[ CD ]
Line_25 $$ if (0 == nInclusionsRemaining) -->Line_26 $$ return[ CD ]
Line_14 $$ do -->Line_25 $$ if (0 == nInclusionsRemaining) [ CD ]
Line_15 $$ HeapElement candidate = queue.poll()-->Line_24 $$ reattach(candidate)[ FD ]
Line_15 $$ HeapElement candidate = queue.poll()-->Line_18 $$ inclusion = candidate[ FD ]
Line_46 $$ if (!excluded) -->Line_50 $$ reattach(inclusion)[ CD ]
Line_15 $$ HeapElement candidate = queue.poll()-->Line_17 $$ if (exclusionComparable != candidate.comparable()) [ FD ]
Line_15 $$ HeapElement candidate = queue.poll()-->Line_22 $$ exclusionComparable = candidate.comparable()[ FD ]
Line_18 $$ inclusion = candidate-->Line_32 $$ long inclusionComparable = inclusion.comparable()[ FD ]
Line_42 $$ if (0 == nInclusionsRemaining) -->Line_43 $$ return[ CD ]
Line_16 $$ if (candidate.inclusion) -->Line_17 $$ if (exclusionComparable != candidate.comparable()) [ CD ]
Line_17 $$ if (exclusionComparable != candidate.comparable()) -->Line_18 $$ inclusion = candidate[ CD ]
Line_18 $$ inclusion = candidate-->Line_29 $$ if (inclusion == null) [ FD ]
Line_38 $$ while (!queue.isEmpty() && queue.peek().comparable() == inclusionComparable) -->Line_41 $$ reattach(match)[ CD ]
Line_11 $$ while (0 != nInclusionsRemaining && !queue.isEmpty()) -->Line_38 $$ while (!queue.isEmpty() && queue.peek().comparable() == inclusionComparable) [ CD ]
Line_10 $$ long exclusionComparable = Long.MIN_VALUE-->Line_22 $$ exclusionComparable = candidate.comparable()[ FD ]
Line_14 $$ do -->Line_24 $$ reattach(candidate)[ CD ]
Line_46 $$ if (!excluded) -->Line_48 $$ return[ CD ]
Line_14 $$ do -->Line_16 $$ if (candidate.inclusion) [ CD ]
Line_14 $$ do -->Line_15 $$ HeapElement candidate = queue.poll()[ CD ]
Line_16 $$ if (candidate.inclusion) -->Line_22 $$ exclusionComparable = candidate.comparable()[ CD ]
Line_15 $$ HeapElement candidate = queue.poll()-->Line_16 $$ if (candidate.inclusion) [ FD ]
Line_11 $$ while (0 != nInclusionsRemaining && !queue.isEmpty()) -->Line_32 $$ long inclusionComparable = inclusion.comparable()[ CD ]
Line_29 $$ if (inclusion == null) -->Line_30 $$ return[ CD ]
Line_11 $$ while (0 != nInclusionsRemaining && !queue.isEmpty()) -->Line_29 $$ if (inclusion == null) [ CD ]
Line_11 $$ while (0 != nInclusionsRemaining && !queue.isEmpty()) -->Line_46 $$ if (!excluded) [ CD ]
Line_10 $$ long exclusionComparable = Long.MIN_VALUE-->Line_17 $$ if (exclusionComparable != candidate.comparable()) [ FD ]
Line_7 $$ if (null != pending) -->Line_8 $$ return[ CD ]
Line_38 $$ while (!queue.isEmpty() && queue.peek().comparable() == inclusionComparable) -->Line_42 $$ if (0 == nInclusionsRemaining) [ CD ]
Line_38 $$ while (!queue.isEmpty() && queue.peek().comparable() == inclusionComparable) -->Line_40 $$ excluded |= !match.inclusion[ CD ]
Line_18 $$ inclusion = candidate-->Line_50 $$ reattach(inclusion)[ FD ]
