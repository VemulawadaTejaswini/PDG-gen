Line_27 $$ if (this.jpaDialect == null) -->Line_28 $$ this.jpaDialect = this.jpaVendorAdapter.getJpaDialect()[ CD ]
Line_3 $$ if (this.jpaVendorAdapter != null) -->Line_7 $$ Map<String, ?> vendorPropertyMap = this.jpaVendorAdapter.getJpaPropertyMap()[ CD ]
Line_3 $$ if (this.jpaVendorAdapter != null) -->Line_21 $$ if (this.entityManagerInterface == null) [ CD ]
Line_15 $$ if (this.entityManagerFactoryInterface == null) -->Line_16 $$ this.entityManagerFactoryInterface = this.jpaVendorAdapter.getEntityManagerFactoryInterface()[ CD ]
Line_31 $$ if (this.bootstrapExecutor != null) -->Line_32 $$ this.nativeEntityManagerFactoryFuture = this.bootstrapExecutor.submit(new Callable<EntityManagerFactory>() [ CD ]
Line_3 $$ if (this.jpaVendorAdapter != null) -->Line_4 $$ if (this.persistenceProvider == null) [ CD ]
Line_32 $$ this.nativeEntityManagerFactoryFuture = this.bootstrapExecutor.submit(new Callable<EntityManagerFactory>() -->Line_34 $$ return buildNativeEntityManagerFactory()[ CD ]
Line_9 $$ for (Map.Entry<String, ?> entry : vendorPropertyMap.entrySet()) -->Line_10 $$ if (!this.jpaPropertyMap.containsKey(entry.getKey())) [ FD ]
Line_15 $$ if (this.entityManagerFactoryInterface == null) -->Line_17 $$ if (!ClassUtils.isVisible(this.entityManagerFactoryInterface, this.beanClassLoader)) [ CD ]
Line_3 $$ if (this.jpaVendorAdapter != null) -->Line_27 $$ if (this.jpaDialect == null) [ CD ]
Line_10 $$ if (!this.jpaPropertyMap.containsKey(entry.getKey())) -->Line_11 $$ this.jpaPropertyMap.put(entry.getKey(), entry.getValue())[ CD ]
Line_17 $$ if (!ClassUtils.isVisible(this.entityManagerFactoryInterface, this.beanClassLoader)) -->Line_18 $$ this.entityManagerFactoryInterface = EntityManagerFactory.class[ CD ]
Line_3 $$ if (this.jpaVendorAdapter != null) -->Line_8 $$ if (vendorPropertyMap != null) [ CD ]
Line_21 $$ if (this.entityManagerInterface == null) -->Line_23 $$ if (!ClassUtils.isVisible(this.entityManagerInterface, this.beanClassLoader)) [ CD ]
Line_31 $$ if (this.bootstrapExecutor != null) -->Line_38 $$ this.nativeEntityManagerFactory = buildNativeEntityManagerFactory()[ CD ]
Line_7 $$ Map<String, ?> vendorPropertyMap = this.jpaVendorAdapter.getJpaPropertyMap()-->Line_8 $$ if (vendorPropertyMap != null) [ FD ]
Line_2 $$ public final void afterPropertiesSet() throws PersistenceException -->Line_31 $$ if (this.bootstrapExecutor != null) [ CD ]
Line_21 $$ if (this.entityManagerInterface == null) -->Line_22 $$ this.entityManagerInterface = this.jpaVendorAdapter.getEntityManagerInterface()[ CD ]
Line_2 $$ public final void afterPropertiesSet() throws PersistenceException -->Line_3 $$ if (this.jpaVendorAdapter != null) [ CD ]
Line_23 $$ if (!ClassUtils.isVisible(this.entityManagerInterface, this.beanClassLoader)) -->Line_24 $$ this.entityManagerInterface = EntityManager.class[ CD ]
Line_7 $$ Map<String, ?> vendorPropertyMap = this.jpaVendorAdapter.getJpaPropertyMap()-->Line_9 $$ for (Map.Entry<String, ?> entry : vendorPropertyMap.entrySet()) [ FD ]
Line_4 $$ if (this.persistenceProvider == null) -->Line_5 $$ this.persistenceProvider = this.jpaVendorAdapter.getPersistenceProvider()[ CD ]
Line_2 $$ public final void afterPropertiesSet() throws PersistenceException -->Line_40 $$ this.entityManagerFactory = createEntityManagerFactoryProxy(this.nativeEntityManagerFactory)[ CD ]
Line_3 $$ if (this.jpaVendorAdapter != null) -->Line_15 $$ if (this.entityManagerFactoryInterface == null) [ CD ]
Line_9 $$ for (Map.Entry<String, ?> entry : vendorPropertyMap.entrySet()) -->Line_11 $$ this.jpaPropertyMap.put(entry.getKey(), entry.getValue())[ FD ]
