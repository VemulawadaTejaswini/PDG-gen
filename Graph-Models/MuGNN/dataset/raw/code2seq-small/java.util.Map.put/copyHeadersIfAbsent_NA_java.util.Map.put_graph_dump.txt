Line_2 $$ public void copyHeadersIfAbsent() -->Line_11 $$ MessageHeaders actual = accessor.getMessageHeaders()[ CD ]
Line_6 $$ MessageHeaderAccessor accessor = new MessageHeaderAccessor(message)-->Line_10 $$ accessor.copyHeadersIfAbsent(map2)[ FD ]
Line_2 $$ public void copyHeadersIfAbsent() -->Line_4 $$ map1.put("foo", "bar")[ CD ]
Line_2 $$ public void copyHeadersIfAbsent() -->Line_7 $$ Map<String, Object> map2 = new HashMap()[ CD ]
Line_2 $$ public void copyHeadersIfAbsent() -->Line_9 $$ map2.put("bar", "baz")[ CD ]
Line_11 $$ MessageHeaders actual = accessor.getMessageHeaders()-->Line_13 $$ assertEquals("bar", actual.get("foo"))[ FD ]
Line_7 $$ Map<String, Object> map2 = new HashMap()-->Line_10 $$ accessor.copyHeadersIfAbsent(map2)[ FD ]
Line_2 $$ public void copyHeadersIfAbsent() -->Line_13 $$ assertEquals("bar", actual.get("foo"))[ CD ]
Line_3 $$ Map<String, Object> map1 = new HashMap()-->Line_4 $$ map1.put("foo", "bar")[ FD ]
Line_2 $$ public void copyHeadersIfAbsent() -->Line_14 $$ assertEquals("baz", actual.get("bar"))[ CD ]
Line_2 $$ public void copyHeadersIfAbsent() -->Line_3 $$ Map<String, Object> map1 = new HashMap()[ CD ]
Line_11 $$ MessageHeaders actual = accessor.getMessageHeaders()-->Line_12 $$ assertEquals(3, actual.size())[ FD ]
Line_2 $$ public void copyHeadersIfAbsent() -->Line_5 $$ GenericMessage<String> message = new GenericMessage("payload", map1)[ CD ]
Line_2 $$ public void copyHeadersIfAbsent() -->Line_10 $$ accessor.copyHeadersIfAbsent(map2)[ CD ]
Line_7 $$ Map<String, Object> map2 = new HashMap()-->Line_9 $$ map2.put("bar", "baz")[ FD ]
Line_11 $$ MessageHeaders actual = accessor.getMessageHeaders()-->Line_14 $$ assertEquals("baz", actual.get("bar"))[ FD ]
Line_2 $$ public void copyHeadersIfAbsent() -->Line_12 $$ assertEquals(3, actual.size())[ CD ]
Line_2 $$ public void copyHeadersIfAbsent() -->Line_6 $$ MessageHeaderAccessor accessor = new MessageHeaderAccessor(message)[ CD ]
Line_7 $$ Map<String, Object> map2 = new HashMap()-->Line_8 $$ map2.put("foo", "BAR")[ FD ]
Line_2 $$ public void copyHeadersIfAbsent() -->Line_8 $$ map2.put("foo", "BAR")[ CD ]
Line_6 $$ MessageHeaderAccessor accessor = new MessageHeaderAccessor(message)-->Line_11 $$ MessageHeaders actual = accessor.getMessageHeaders()[ FD ]
