Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_16 $$ Calendar cal = Calendar.getInstance()[ CD ]
Line_9 $$ Locale locale = LocaleUtil.getDefault()-->Line_11 $$ titleMap.put(locale, title)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_11 $$ titleMap.put(locale, title)[ CD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_14 $$ String ddmTemplateKey = null[ CD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_29 $$ int reviewDateMonth = 0[ CD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_31 $$ int reviewDateYear = 0[ CD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_23 $$ int expirationDateMonth = 0-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_36 $$ String articleURL = StringPool.BLANK[ CD ]
Line_25 $$ int expirationDateYear = 0-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_16 $$ Calendar cal = Calendar.getInstance()-->Line_21 $$ int displayDateHour = cal.get(Calendar.HOUR_OF_DAY)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_11 $$ titleMap.put(locale, title)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_35 $$ boolean indexable = true[ CD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_30 $$ int reviewDateDay = 0[ CD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_9 $$ Locale locale = LocaleUtil.getDefault()[ CD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_26 $$ int expirationDateHour = 0[ CD ]
Line_28 $$ boolean neverExpire = true-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_18 $$ int displayDateMonth = cal.get(Calendar.MONTH)-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_27 $$ int expirationDateMinute = 0-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_22 $$ int displayDateMinute = cal.get(Calendar.MINUTE)-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_39 $$ serviceContext.setAddGuestPermissions(false)[ CD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_17 $$ cal.setTime(date)[ FD ]
Line_37 $$ ServiceContext serviceContext = new ServiceContext()-->Line_40 $$ serviceContext.setScopeGroupId(groupId)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_13 $$ String ddmStructureKey = null[ CD ]
Line_13 $$ String ddmStructureKey = null-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_28 $$ boolean neverExpire = true[ CD ]
Line_20 $$ int displayDateYear = cal.get(Calendar.YEAR)-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_30 $$ int reviewDateDay = 0-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_32 $$ int reviewDateHour = 0-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_10 $$ Map<Locale, String> titleMap = new HashMap()-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_3 $$ long groupId = atomRequestContext.getLongParameter("groupId")[ CD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_6 $$ long classPK = 0[ CD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_34 $$ boolean neverReview = true[ CD ]
Line_36 $$ String articleURL = StringPool.BLANK-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_44 $$ journalArticle = _journalArticleService.updateStatus(groupId, journalArticle.getArticleId(), version, status, articleURL, serviceContext)[ CD ]
Line_21 $$ int displayDateHour = cal.get(Calendar.HOUR_OF_DAY)-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_5 $$ long classNameId = 0[ CD ]
Line_16 $$ Calendar cal = Calendar.getInstance()-->Line_18 $$ int displayDateMonth = cal.get(Calendar.MONTH)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_18 $$ int displayDateMonth = cal.get(Calendar.MONTH)[ CD ]
Line_4 $$ long folderId = 0-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_37 $$ ServiceContext serviceContext = new ServiceContext()-->Line_38 $$ serviceContext.setAddGroupPermissions(false)[ FD ]
Line_36 $$ String articleURL = StringPool.BLANK-->Line_44 $$ journalArticle = _journalArticleService.updateStatus(groupId, journalArticle.getArticleId(), version, status, articleURL, serviceContext)[ FD ]
Line_29 $$ int reviewDateMonth = 0-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_8 $$ boolean autoArticleId = true[ CD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_27 $$ int expirationDateMinute = 0[ CD ]
Line_6 $$ long classPK = 0-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_37 $$ ServiceContext serviceContext = new ServiceContext()-->Line_44 $$ journalArticle = _journalArticleService.updateStatus(groupId, journalArticle.getArticleId(), version, status, articleURL, serviceContext)[ FD ]
Line_24 $$ int expirationDateDay = 0-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_23 $$ int expirationDateMonth = 0[ CD ]
Line_3 $$ long groupId = atomRequestContext.getLongParameter("groupId")-->Line_40 $$ serviceContext.setScopeGroupId(groupId)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_7 $$ String articleId = StringPool.BLANK[ CD ]
Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)-->Line_44 $$ journalArticle = _journalArticleService.updateStatus(groupId, journalArticle.getArticleId(), version, status, articleURL, serviceContext)[ FD ]
Line_33 $$ int reviewDateMinute = 0-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_20 $$ int displayDateYear = cal.get(Calendar.YEAR)[ CD ]
Line_31 $$ int reviewDateYear = 0-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_19 $$ int displayDateDay = cal.get(Calendar.DAY_OF_MONTH)-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_43 $$ int status = WorkflowConstants.STATUS_APPROVED[ CD ]
Line_14 $$ String ddmTemplateKey = null-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_3 $$ long groupId = atomRequestContext.getLongParameter("groupId")-->Line_44 $$ journalArticle = _journalArticleService.updateStatus(groupId, journalArticle.getArticleId(), version, status, articleURL, serviceContext)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_37 $$ ServiceContext serviceContext = new ServiceContext()[ CD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_25 $$ int expirationDateYear = 0[ CD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_40 $$ serviceContext.setScopeGroupId(groupId)[ CD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_32 $$ int reviewDateHour = 0[ CD ]
Line_16 $$ Calendar cal = Calendar.getInstance()-->Line_19 $$ int displayDateDay = cal.get(Calendar.DAY_OF_MONTH)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_38 $$ serviceContext.setAddGroupPermissions(false)[ CD ]
Line_12 $$ Map<Locale, String> descriptionMap = new HashMap()-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_3 $$ long groupId = atomRequestContext.getLongParameter("groupId")-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_35 $$ boolean indexable = true-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_16 $$ Calendar cal = Calendar.getInstance()-->Line_20 $$ int displayDateYear = cal.get(Calendar.YEAR)[ FD ]
Line_8 $$ boolean autoArticleId = true-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_15 $$ String layoutUuid = null[ CD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_22 $$ int displayDateMinute = cal.get(Calendar.MINUTE)[ CD ]
Line_34 $$ boolean neverReview = true-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_37 $$ ServiceContext serviceContext = new ServiceContext()-->Line_39 $$ serviceContext.setAddGuestPermissions(false)[ FD ]
Line_15 $$ String layoutUuid = null-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)-->Line_42 $$ double version = journalArticle.getVersion()[ FD ]
Line_5 $$ long classNameId = 0-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_16 $$ Calendar cal = Calendar.getInstance()-->Line_22 $$ int displayDateMinute = cal.get(Calendar.MINUTE)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_21 $$ int displayDateHour = cal.get(Calendar.HOUR_OF_DAY)[ CD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_24 $$ int expirationDateDay = 0[ CD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ CD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_33 $$ int reviewDateMinute = 0[ CD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_4 $$ long folderId = 0[ CD ]
Line_43 $$ int status = WorkflowConstants.STATUS_APPROVED-->Line_44 $$ journalArticle = _journalArticleService.updateStatus(groupId, journalArticle.getArticleId(), version, status, articleURL, serviceContext)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_12 $$ Map<Locale, String> descriptionMap = new HashMap()[ CD ]
Line_42 $$ double version = journalArticle.getVersion()-->Line_44 $$ journalArticle = _journalArticleService.updateStatus(groupId, journalArticle.getArticleId(), version, status, articleURL, serviceContext)[ FD ]
Line_10 $$ Map<Locale, String> titleMap = new HashMap()-->Line_11 $$ titleMap.put(locale, title)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_3 $$ long groupId = atomRequestContext.getLongParameter("groupId")[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_10 $$ Map<Locale, String> titleMap = new HashMap()[ CD ]
Line_16 $$ Calendar cal = Calendar.getInstance()-->Line_17 $$ cal.setTime(date)[ FD ]
Line_26 $$ int expirationDateHour = 0-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_45 $$ return journalArticle[ CD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_17 $$ cal.setTime(date)[ CD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_42 $$ double version = journalArticle.getVersion()[ CD ]
Line_37 $$ ServiceContext serviceContext = new ServiceContext()-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
Line_2 $$ protected JournalArticle doPostEntry(String title, String summary, String content, Date date, AtomRequestContext atomRequestContext) throws Exception -->Line_19 $$ int displayDateDay = cal.get(Calendar.DAY_OF_MONTH)[ CD ]
Line_7 $$ String articleId = StringPool.BLANK-->Line_41 $$ JournalArticle journalArticle = _journalArticleService.addArticle(groupId, folderId, classNameId, classPK, articleId, autoArticleId, titleMap, descriptionMap, content, ddmStructureKey, ddmTemplateKey, layoutUuid, displayDateMonth, displayDateDay, displayDateYear, displayDateHour, displayDateMinute, expirationDateMonth, expirationDateDay, expirationDateYear, expirationDateHour, expirationDateMinute, neverExpire, reviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute, neverReview, indexable, articleURL, serviceContext)[ FD ]
