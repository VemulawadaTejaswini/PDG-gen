Line_2 $$ public static TransparentDataEncryptionOptions createEncryptionOptions() -->Line_7 $$ ParameterizedClass keyProvider = new ParameterizedClass(JKSKeyProvider.class.getName(), params)[ CD ]
Line_3 $$ Map<String, String> params = new HashMap()-->Line_6 $$ params.put("store_type", "JCEKS")[ FD ]
Line_2 $$ public static TransparentDataEncryptionOptions createEncryptionOptions() -->Line_8 $$ return new TransparentDataEncryptionOptions("AES/CBC/PKCS5Padding", KEY_ALIAS_1, keyProvider)[ CD ]
Line_2 $$ public static TransparentDataEncryptionOptions createEncryptionOptions() -->Line_3 $$ Map<String, String> params = new HashMap()[ CD ]
Line_2 $$ public static TransparentDataEncryptionOptions createEncryptionOptions() -->Line_6 $$ params.put("store_type", "JCEKS")[ CD ]
Line_3 $$ Map<String, String> params = new HashMap()-->Line_5 $$ params.put("keystore_password", "cassandra")[ FD ]
Line_2 $$ public static TransparentDataEncryptionOptions createEncryptionOptions() -->Line_5 $$ params.put("keystore_password", "cassandra")[ CD ]
Line_3 $$ Map<String, String> params = new HashMap()-->Line_4 $$ params.put("keystore", "test/conf/cassandra.keystore")[ FD ]
Line_2 $$ public static TransparentDataEncryptionOptions createEncryptionOptions() -->Line_4 $$ params.put("keystore", "test/conf/cassandra.keystore")[ CD ]
