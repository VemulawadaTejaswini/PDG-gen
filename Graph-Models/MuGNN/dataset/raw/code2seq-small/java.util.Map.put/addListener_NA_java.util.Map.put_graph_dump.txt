Line_2 $$ synchronized void addListener(final String target, final int scope, final NamingListener namingListener) -->Line_5 $$ if (holder == null) [ CD ]
Line_6 $$ holder = new ListenerHolder(namingListener, targetScope)-->Line_11 $$ holder.addTarget(targetScope)[ FD ]
Line_13 $$ List<ListenerHolder> holdersForTarget = holdersByTarget.get(targetScope)-->Line_17 $$ byTargetCopy.put(targetScope, holdersForTarget)[ FD ]
Line_13 $$ List<ListenerHolder> holdersForTarget = holdersByTarget.get(targetScope)-->Line_14 $$ if (holdersForTarget == null) [ FD ]
Line_4 $$ ListenerHolder holder = holdersByListener.get(namingListener)-->Line_8 $$ byListenerCopy.put(namingListener, holder)[ FD ]
Line_6 $$ holder = new ListenerHolder(namingListener, targetScope)-->Line_20 $$ holdersForTarget.add(holder)[ FD ]
Line_2 $$ synchronized void addListener(final String target, final int scope, final NamingListener namingListener) -->Line_4 $$ ListenerHolder holder = holdersByListener.get(namingListener)[ CD ]
Line_2 $$ synchronized void addListener(final String target, final int scope, final NamingListener namingListener) -->Line_20 $$ holdersForTarget.add(holder)[ CD ]
Line_14 $$ if (holdersForTarget == null) -->Line_16 $$ final Map<TargetScope, List<ListenerHolder>> byTargetCopy = new FastCopyHashMap<TargetScope, List<ListenerHolder>>(holdersByTarget)[ CD ]
Line_6 $$ holder = new ListenerHolder(namingListener, targetScope)-->Line_8 $$ byListenerCopy.put(namingListener, holder)[ FD ]
Line_3 $$ final TargetScope targetScope = new TargetScope(target, scope)-->Line_17 $$ byTargetCopy.put(targetScope, holdersForTarget)[ FD ]
Line_2 $$ synchronized void addListener(final String target, final int scope, final NamingListener namingListener) -->Line_8 $$ byListenerCopy.put(namingListener, holder)[ FD ]
Line_15 $$ holdersForTarget = new CopyOnWriteArrayList<ListenerHolder>()-->Line_17 $$ byTargetCopy.put(targetScope, holdersForTarget)[ FD ]
Line_5 $$ if (holder == null) -->Line_8 $$ byListenerCopy.put(namingListener, holder)[ CD ]
Line_16 $$ final Map<TargetScope, List<ListenerHolder>> byTargetCopy = new FastCopyHashMap<TargetScope, List<ListenerHolder>>(holdersByTarget)-->Line_17 $$ byTargetCopy.put(targetScope, holdersForTarget)[ FD ]
Line_13 $$ List<ListenerHolder> holdersForTarget = holdersByTarget.get(targetScope)-->Line_20 $$ holdersForTarget.add(holder)[ FD ]
Line_13 $$ List<ListenerHolder> holdersForTarget = holdersByTarget.get(targetScope)-->Line_15 $$ holdersForTarget = new CopyOnWriteArrayList<ListenerHolder>()[ FD ]
Line_4 $$ ListenerHolder holder = holdersByListener.get(namingListener)-->Line_11 $$ holder.addTarget(targetScope)[ FD ]
Line_4 $$ ListenerHolder holder = holdersByListener.get(namingListener)-->Line_5 $$ if (holder == null) [ FD ]
Line_3 $$ final TargetScope targetScope = new TargetScope(target, scope)-->Line_11 $$ holder.addTarget(targetScope)[ FD ]
Line_2 $$ synchronized void addListener(final String target, final int scope, final NamingListener namingListener) -->Line_4 $$ ListenerHolder holder = holdersByListener.get(namingListener)[ FD ]
Line_7 $$ final Map<NamingListener, ListenerHolder> byListenerCopy = new FastCopyHashMap<NamingListener, ListenerHolder>(holdersByListener)-->Line_8 $$ byListenerCopy.put(namingListener, holder)[ FD ]
Line_3 $$ final TargetScope targetScope = new TargetScope(target, scope)-->Line_13 $$ List<ListenerHolder> holdersForTarget = holdersByTarget.get(targetScope)[ FD ]
Line_4 $$ ListenerHolder holder = holdersByListener.get(namingListener)-->Line_6 $$ holder = new ListenerHolder(namingListener, targetScope)[ FD ]
Line_14 $$ if (holdersForTarget == null) -->Line_17 $$ byTargetCopy.put(targetScope, holdersForTarget)[ CD ]
Line_2 $$ synchronized void addListener(final String target, final int scope, final NamingListener namingListener) -->Line_14 $$ if (holdersForTarget == null) [ CD ]
Line_4 $$ ListenerHolder holder = holdersByListener.get(namingListener)-->Line_20 $$ holdersForTarget.add(holder)[ FD ]
Line_2 $$ synchronized void addListener(final String target, final int scope, final NamingListener namingListener) -->Line_13 $$ List<ListenerHolder> holdersForTarget = holdersByTarget.get(targetScope)[ CD ]
Line_5 $$ if (holder == null) -->Line_7 $$ final Map<NamingListener, ListenerHolder> byListenerCopy = new FastCopyHashMap<NamingListener, ListenerHolder>(holdersByListener)[ CD ]
Line_5 $$ if (holder == null) -->Line_6 $$ holder = new ListenerHolder(namingListener, targetScope)[ CD ]
Line_14 $$ if (holdersForTarget == null) -->Line_15 $$ holdersForTarget = new CopyOnWriteArrayList<ListenerHolder>()[ CD ]
Line_2 $$ synchronized void addListener(final String target, final int scope, final NamingListener namingListener) -->Line_3 $$ final TargetScope targetScope = new TargetScope(target, scope)[ CD ]
Line_15 $$ holdersForTarget = new CopyOnWriteArrayList<ListenerHolder>()-->Line_20 $$ holdersForTarget.add(holder)[ FD ]
Line_5 $$ if (holder == null) -->Line_11 $$ holder.addTarget(targetScope)[ CD ]
