Line_3 $$ final Map<String, Map<String, File>> result = ContainerUtil.newHashMap()-->Line_11 $$ Map<String, File> parentMap = ContainerUtil.getOrCreate(result, file.getParentFile().getAbsolutePath(), NAME_TO_FILE_MAP_FACTORY)[ FD ]
Line_5 $$ File file = item.getDir().getIOFile()-->Line_12 $$ parentMap.put(file.getName(), file)[ FD ]
Line_15 $$ return new ISVNStatusFileProvider() -->Line_17 $$ return result.get(parent.getAbsolutePath())[ CD ]
Line_3 $$ final Map<String, Map<String, File>> result = ContainerUtil.newHashMap()-->Line_6 $$ Map<String, File> fileMap = ContainerUtil.getOrCreate(result, file.getAbsolutePath(), NAME_TO_FILE_MAP_FACTORY)[ FD ]
Line_10 $$ if (file.getParentFile() != null) -->Line_12 $$ parentMap.put(file.getName(), file)[ CD ]
Line_5 $$ File file = item.getDir().getIOFile()-->Line_10 $$ if (file.getParentFile() != null) [ FD ]
Line_2 $$ private static ISVNStatusFileProvider createFileProvider(@NotNull Map<String, SvnScopeZipper.MyDirNonRecursive> nonRecursiveMap) -->Line_3 $$ final Map<String, Map<String, File>> result = ContainerUtil.newHashMap()[ CD ]
Line_3 $$ final Map<String, Map<String, File>> result = ContainerUtil.newHashMap()-->Line_17 $$ return result.get(parent.getAbsolutePath())[ FD ]
Line_6 $$ Map<String, File> fileMap = ContainerUtil.getOrCreate(result, file.getAbsolutePath(), NAME_TO_FILE_MAP_FACTORY)-->Line_8 $$ fileMap.put(path.getName(), path.getIOFile())[ FD ]
Line_7 $$ for (FilePath path : item.getChildrenList()) -->Line_8 $$ fileMap.put(path.getName(), path.getIOFile())[ FD ]
Line_2 $$ private static ISVNStatusFileProvider createFileProvider(@NotNull Map<String, SvnScopeZipper.MyDirNonRecursive> nonRecursiveMap) -->Line_4 $$ for (SvnScopeZipper.MyDirNonRecursive item : nonRecursiveMap.values()) [ FD ]
Line_4 $$ for (SvnScopeZipper.MyDirNonRecursive item : nonRecursiveMap.values()) -->Line_5 $$ File file = item.getDir().getIOFile()[ FD ]
Line_11 $$ Map<String, File> parentMap = ContainerUtil.getOrCreate(result, file.getParentFile().getAbsolutePath(), NAME_TO_FILE_MAP_FACTORY)-->Line_12 $$ parentMap.put(file.getName(), file)[ FD ]
Line_15 $$ return new ISVNStatusFileProvider() -->Line_17 $$ return result.get(parent.getAbsolutePath())[ FD ]
Line_2 $$ private static ISVNStatusFileProvider createFileProvider(@NotNull Map<String, SvnScopeZipper.MyDirNonRecursive> nonRecursiveMap) -->Line_15 $$ return new ISVNStatusFileProvider() [ CD ]
Line_5 $$ File file = item.getDir().getIOFile()-->Line_11 $$ Map<String, File> parentMap = ContainerUtil.getOrCreate(result, file.getParentFile().getAbsolutePath(), NAME_TO_FILE_MAP_FACTORY)[ FD ]
Line_4 $$ for (SvnScopeZipper.MyDirNonRecursive item : nonRecursiveMap.values()) -->Line_7 $$ for (FilePath path : item.getChildrenList()) [ FD ]
Line_5 $$ File file = item.getDir().getIOFile()-->Line_6 $$ Map<String, File> fileMap = ContainerUtil.getOrCreate(result, file.getAbsolutePath(), NAME_TO_FILE_MAP_FACTORY)[ FD ]
Line_10 $$ if (file.getParentFile() != null) -->Line_11 $$ Map<String, File> parentMap = ContainerUtil.getOrCreate(result, file.getParentFile().getAbsolutePath(), NAME_TO_FILE_MAP_FACTORY)[ CD ]
