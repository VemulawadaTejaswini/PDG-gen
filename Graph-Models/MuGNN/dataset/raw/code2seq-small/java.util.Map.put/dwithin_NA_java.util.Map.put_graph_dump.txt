Line_9 $$ Map<String, Object> params = createQueryParams("filter", expectationsFactory.getTestPoint())-->Line_14 $$ params.put("distance", 30.0)[ FD ]
Line_2 $$ public void dwithin(String pckg) throws SQLException -->Line_16 $$ retrieveHQLResultsAndCompare(dbexpected, hql, params, pckg)[ FD ]
Line_3 $$ if (!isSupportedByDialect(SpatialFunction.dwithin)) -->Line_4 $$ return[ CD ]
Line_8 $$ String hql = format("SELECT id, dwithin(geom, :filter, :distance) from " + "org.hibernate.spatial.integration.%s.GeomEntity where dwithin(geom, :filter, :distance) = true " + "and srid(geom) = 4326", pckg)-->Line_11 $$ hql = "SELECT id, issimple(geom) from org.hibernate.spatial.integration.GeomEntity where dwithin(geom, :filter, :distance) = true and srid(geom) = 4326"[ FD ]
Line_8 $$ String hql = format("SELECT id, dwithin(geom, :filter, :distance) from " + "org.hibernate.spatial.integration.%s.GeomEntity where dwithin(geom, :filter, :distance) = true " + "and srid(geom) = 4326", pckg)-->Line_16 $$ retrieveHQLResultsAndCompare(dbexpected, hql, params, pckg)[ FD ]
Line_9 $$ Map<String, Object> params = createQueryParams("filter", expectationsFactory.getTestPoint())-->Line_12 $$ params.put("distance", "distance = 30")[ FD ]
Line_2 $$ public void dwithin(String pckg) throws SQLException -->Line_9 $$ Map<String, Object> params = createQueryParams("filter", expectationsFactory.getTestPoint())[ CD ]
Line_6 $$ double distance = 30.0-->Line_7 $$ Map<Integer, Boolean> dbexpected = expectationsFactory.getDwithin(expectationsFactory.getTestPoint(), distance)[ FD ]
Line_9 $$ Map<String, Object> params = createQueryParams("filter", expectationsFactory.getTestPoint())-->Line_16 $$ retrieveHQLResultsAndCompare(dbexpected, hql, params, pckg)[ FD ]
Line_11 $$ hql = "SELECT id, issimple(geom) from org.hibernate.spatial.integration.GeomEntity where dwithin(geom, :filter, :distance) = true and srid(geom) = 4326"-->Line_16 $$ retrieveHQLResultsAndCompare(dbexpected, hql, params, pckg)[ FD ]
Line_2 $$ public void dwithin(String pckg) throws SQLException -->Line_10 $$ if (getDialect() instanceof OracleSpatial10gDialect) [ CD ]
Line_2 $$ public void dwithin(String pckg) throws SQLException -->Line_3 $$ if (!isSupportedByDialect(SpatialFunction.dwithin)) [ CD ]
Line_10 $$ if (getDialect() instanceof OracleSpatial10gDialect) -->Line_11 $$ hql = "SELECT id, issimple(geom) from org.hibernate.spatial.integration.GeomEntity where dwithin(geom, :filter, :distance) = true and srid(geom) = 4326"[ CD ]
Line_2 $$ public void dwithin(String pckg) throws SQLException -->Line_16 $$ retrieveHQLResultsAndCompare(dbexpected, hql, params, pckg)[ CD ]
Line_10 $$ if (getDialect() instanceof OracleSpatial10gDialect) -->Line_12 $$ params.put("distance", "distance = 30")[ CD ]
Line_2 $$ public void dwithin(String pckg) throws SQLException -->Line_8 $$ String hql = format("SELECT id, dwithin(geom, :filter, :distance) from " + "org.hibernate.spatial.integration.%s.GeomEntity where dwithin(geom, :filter, :distance) = true " + "and srid(geom) = 4326", pckg)[ CD ]
Line_2 $$ public void dwithin(String pckg) throws SQLException -->Line_6 $$ double distance = 30.0[ CD ]
Line_10 $$ if (getDialect() instanceof OracleSpatial10gDialect) -->Line_14 $$ params.put("distance", 30.0)[ CD ]
Line_2 $$ public void dwithin(String pckg) throws SQLException -->Line_8 $$ String hql = format("SELECT id, dwithin(geom, :filter, :distance) from " + "org.hibernate.spatial.integration.%s.GeomEntity where dwithin(geom, :filter, :distance) = true " + "and srid(geom) = 4326", pckg)[ FD ]
Line_2 $$ public void dwithin(String pckg) throws SQLException -->Line_7 $$ Map<Integer, Boolean> dbexpected = expectationsFactory.getDwithin(expectationsFactory.getTestPoint(), distance)[ CD ]
Line_7 $$ Map<Integer, Boolean> dbexpected = expectationsFactory.getDwithin(expectationsFactory.getTestPoint(), distance)-->Line_16 $$ retrieveHQLResultsAndCompare(dbexpected, hql, params, pckg)[ FD ]
