Line_2 $$ private void updateLastRevision(Session session, EnversService enversService, List<Object> l, Object id, String auditedEntityName, Object revision) -->Line_4 $$ Object previousData = l.get(0)[ FD ]
Line_5 $$ String revisionEndFieldName = enversService.getAuditEntitiesConfiguration().getRevisionEndFieldName()-->Line_6 $$ ((Map<String, Object>) previousData).put(revisionEndFieldName, revision)[ FD ]
Line_3 $$ if (l.size() == 1) -->Line_7 $$ if (enversService.getAuditEntitiesConfiguration().isRevisionEndTimestampEnabled()) [ CD ]
Line_2 $$ private void updateLastRevision(Session session, EnversService enversService, List<Object> l, Object id, String auditedEntityName, Object revision) -->Line_3 $$ if (l.size() == 1) [ CD ]
Line_2 $$ private void updateLastRevision(Session session, EnversService enversService, List<Object> l, Object id, String auditedEntityName, Object revision) -->Line_6 $$ ((Map<String, Object>) previousData).put(revisionEndFieldName, revision)[ FD ]
Line_8 $$ String revEndTimestampFieldName = enversService.getAuditEntitiesConfiguration().getRevisionEndTimestampFieldName()-->Line_11 $$ ((Map<String, Object>) previousData).put(revEndTimestampFieldName, revisionEndTimestamp)[ FD ]
Line_2 $$ private void updateLastRevision(Session session, EnversService enversService, List<Object> l, Object id, String auditedEntityName, Object revision) -->Line_9 $$ Object revEndTimestampObj = this.revisionTimestampGetter.get(revision)[ FD ]
Line_7 $$ if (enversService.getAuditEntitiesConfiguration().isRevisionEndTimestampEnabled()) -->Line_8 $$ String revEndTimestampFieldName = enversService.getAuditEntitiesConfiguration().getRevisionEndTimestampFieldName()[ CD ]
Line_3 $$ if (l.size() == 1) -->Line_6 $$ ((Map<String, Object>) previousData).put(revisionEndFieldName, revision)[ CD ]
Line_2 $$ private void updateLastRevision(Session session, EnversService enversService, List<Object> l, Object id, String auditedEntityName, Object revision) -->Line_13 $$ session.save(auditedEntityName, previousData)[ FD ]
Line_2 $$ private void updateLastRevision(Session session, EnversService enversService, List<Object> l, Object id, String auditedEntityName, Object revision) -->Line_5 $$ String revisionEndFieldName = enversService.getAuditEntitiesConfiguration().getRevisionEndFieldName()[ FD ]
Line_4 $$ Object previousData = l.get(0)-->Line_14 $$ sessionCacheCleaner.scheduleAuditDataRemoval(session, previousData)[ FD ]
Line_2 $$ private void updateLastRevision(Session session, EnversService enversService, List<Object> l, Object id, String auditedEntityName, Object revision) -->Line_14 $$ sessionCacheCleaner.scheduleAuditDataRemoval(session, previousData)[ FD ]
Line_7 $$ if (enversService.getAuditEntitiesConfiguration().isRevisionEndTimestampEnabled()) -->Line_10 $$ Date revisionEndTimestamp = convertRevEndTimestampToDate(revEndTimestampObj)[ CD ]
Line_3 $$ if (l.size() == 1) -->Line_14 $$ sessionCacheCleaner.scheduleAuditDataRemoval(session, previousData)[ CD ]
Line_3 $$ if (l.size() == 1) -->Line_4 $$ Object previousData = l.get(0)[ CD ]
Line_10 $$ Date revisionEndTimestamp = convertRevEndTimestampToDate(revEndTimestampObj)-->Line_11 $$ ((Map<String, Object>) previousData).put(revEndTimestampFieldName, revisionEndTimestamp)[ FD ]
Line_7 $$ if (enversService.getAuditEntitiesConfiguration().isRevisionEndTimestampEnabled()) -->Line_9 $$ Object revEndTimestampObj = this.revisionTimestampGetter.get(revision)[ CD ]
Line_2 $$ private void updateLastRevision(Session session, EnversService enversService, List<Object> l, Object id, String auditedEntityName, Object revision) -->Line_8 $$ String revEndTimestampFieldName = enversService.getAuditEntitiesConfiguration().getRevisionEndTimestampFieldName()[ FD ]
Line_3 $$ if (l.size() == 1) -->Line_5 $$ String revisionEndFieldName = enversService.getAuditEntitiesConfiguration().getRevisionEndFieldName()[ CD ]
Line_3 $$ if (l.size() == 1) -->Line_13 $$ session.save(auditedEntityName, previousData)[ CD ]
Line_2 $$ private void updateLastRevision(Session session, EnversService enversService, List<Object> l, Object id, String auditedEntityName, Object revision) -->Line_7 $$ if (enversService.getAuditEntitiesConfiguration().isRevisionEndTimestampEnabled()) [ FD ]
Line_9 $$ Object revEndTimestampObj = this.revisionTimestampGetter.get(revision)-->Line_10 $$ Date revisionEndTimestamp = convertRevEndTimestampToDate(revEndTimestampObj)[ FD ]
Line_7 $$ if (enversService.getAuditEntitiesConfiguration().isRevisionEndTimestampEnabled()) -->Line_11 $$ ((Map<String, Object>) previousData).put(revEndTimestampFieldName, revisionEndTimestamp)[ CD ]
Line_2 $$ private void updateLastRevision(Session session, EnversService enversService, List<Object> l, Object id, String auditedEntityName, Object revision) -->Line_3 $$ if (l.size() == 1) [ FD ]
Line_4 $$ Object previousData = l.get(0)-->Line_13 $$ session.save(auditedEntityName, previousData)[ FD ]
