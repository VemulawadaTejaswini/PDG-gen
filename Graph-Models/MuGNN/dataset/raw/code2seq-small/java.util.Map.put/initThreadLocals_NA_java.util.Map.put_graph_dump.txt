Line_2 $$ protected void initThreadLocals(long userId, Map<String, String[]> parameterMap) throws PortalException -->Line_31 $$ ServiceContextThreadLocal.pushServiceContext(serviceContext)[ CD ]
Line_2 $$ protected void initThreadLocals(long userId, Map<String, String[]> parameterMap) throws PortalException -->Line_5 $$ PrincipalThreadLocal.setName(userId)[ CD ]
Line_2 $$ protected void initThreadLocals(long userId, Map<String, String[]> parameterMap) throws PortalException -->Line_12 $$ PermissionThreadLocal.setPermissionChecker(permissionChecker)[ CD ]
Line_2 $$ protected void initThreadLocals(long userId, Map<String, String[]> parameterMap) throws PortalException -->Line_14 $$ serviceContext.setCompanyId(user.getCompanyId())[ CD ]
Line_19 $$ for (Map.Entry<String, String[]> entry : parameterMap.entrySet()) -->Line_21 $$ String[] values = entry.getValue()[ FD ]
Line_13 $$ ServiceContext serviceContext = new ServiceContext()-->Line_30 $$ serviceContext.setAttributes(attributes)[ FD ]
Line_21 $$ String[] values = entry.getValue()-->Line_22 $$ if (ArrayUtil.isNotEmpty(values)) [ FD ]
Line_6 $$ PermissionChecker permissionChecker = null-->Line_12 $$ PermissionThreadLocal.setPermissionChecker(permissionChecker)[ FD ]
Line_18 $$ Map<String, Serializable> attributes = new HashMap()-->Line_24 $$ attributes.put(param, values[0])[ FD ]
Line_20 $$ String param = entry.getKey()-->Line_26 $$ attributes.put(param, values)[ FD ]
Line_13 $$ ServiceContext serviceContext = new ServiceContext()-->Line_14 $$ serviceContext.setCompanyId(user.getCompanyId())[ FD ]
Line_3 $$ User user = UserLocalServiceUtil.getUserById(userId)-->Line_4 $$ CompanyThreadLocal.setCompanyId(user.getCompanyId())[ FD ]
Line_2 $$ protected void initThreadLocals(long userId, Map<String, String[]> parameterMap) throws PortalException -->Line_3 $$ User user = UserLocalServiceUtil.getUserById(userId)[ CD ]
Line_18 $$ Map<String, Serializable> attributes = new HashMap()-->Line_26 $$ attributes.put(param, values)[ FD ]
Line_13 $$ ServiceContext serviceContext = new ServiceContext()-->Line_15 $$ serviceContext.setPathMain(PortalUtil.getPathMain())[ FD ]
Line_3 $$ User user = UserLocalServiceUtil.getUserById(userId)-->Line_17 $$ serviceContext.setUserId(user.getUserId())[ FD ]
Line_2 $$ protected void initThreadLocals(long userId, Map<String, String[]> parameterMap) throws PortalException -->Line_18 $$ Map<String, Serializable> attributes = new HashMap()[ CD ]
Line_20 $$ String param = entry.getKey()-->Line_24 $$ attributes.put(param, values[0])[ FD ]
Line_2 $$ protected void initThreadLocals(long userId, Map<String, String[]> parameterMap) throws PortalException -->Line_17 $$ serviceContext.setUserId(user.getUserId())[ CD ]
Line_22 $$ if (ArrayUtil.isNotEmpty(values)) -->Line_23 $$ if (values.length == 1) [ CD ]
Line_23 $$ if (values.length == 1) -->Line_24 $$ attributes.put(param, values[0])[ CD ]
Line_2 $$ protected void initThreadLocals(long userId, Map<String, String[]> parameterMap) throws PortalException -->Line_6 $$ PermissionChecker permissionChecker = null[ CD ]
Line_19 $$ for (Map.Entry<String, String[]> entry : parameterMap.entrySet()) -->Line_20 $$ String param = entry.getKey()[ FD ]
Line_13 $$ ServiceContext serviceContext = new ServiceContext()-->Line_31 $$ ServiceContextThreadLocal.pushServiceContext(serviceContext)[ FD ]
Line_23 $$ if (values.length == 1) -->Line_26 $$ attributes.put(param, values)[ CD ]
Line_13 $$ ServiceContext serviceContext = new ServiceContext()-->Line_17 $$ serviceContext.setUserId(user.getUserId())[ FD ]
Line_3 $$ User user = UserLocalServiceUtil.getUserById(userId)-->Line_14 $$ serviceContext.setCompanyId(user.getCompanyId())[ FD ]
Line_2 $$ protected void initThreadLocals(long userId, Map<String, String[]> parameterMap) throws PortalException -->Line_4 $$ CompanyThreadLocal.setCompanyId(user.getCompanyId())[ CD ]
Line_21 $$ String[] values = entry.getValue()-->Line_26 $$ attributes.put(param, values)[ FD ]
Line_8 $$ permissionChecker = PermissionCheckerFactoryUtil.create(user)-->Line_12 $$ PermissionThreadLocal.setPermissionChecker(permissionChecker)[ FD ]
Line_18 $$ Map<String, Serializable> attributes = new HashMap()-->Line_30 $$ serviceContext.setAttributes(attributes)[ FD ]
Line_3 $$ User user = UserLocalServiceUtil.getUserById(userId)-->Line_16 $$ serviceContext.setSignedIn(!user.isDefaultUser())[ FD ]
Line_2 $$ protected void initThreadLocals(long userId, Map<String, String[]> parameterMap) throws PortalException -->Line_19 $$ for (Map.Entry<String, String[]> entry : parameterMap.entrySet()) [ FD ]
Line_13 $$ ServiceContext serviceContext = new ServiceContext()-->Line_16 $$ serviceContext.setSignedIn(!user.isDefaultUser())[ FD ]
Line_2 $$ protected void initThreadLocals(long userId, Map<String, String[]> parameterMap) throws PortalException -->Line_16 $$ serviceContext.setSignedIn(!user.isDefaultUser())[ CD ]
Line_3 $$ User user = UserLocalServiceUtil.getUserById(userId)-->Line_8 $$ permissionChecker = PermissionCheckerFactoryUtil.create(user)[ FD ]
Line_2 $$ protected void initThreadLocals(long userId, Map<String, String[]> parameterMap) throws PortalException -->Line_30 $$ serviceContext.setAttributes(attributes)[ CD ]
Line_6 $$ PermissionChecker permissionChecker = null-->Line_8 $$ permissionChecker = PermissionCheckerFactoryUtil.create(user)[ FD ]
Line_2 $$ protected void initThreadLocals(long userId, Map<String, String[]> parameterMap) throws PortalException -->Line_13 $$ ServiceContext serviceContext = new ServiceContext()[ CD ]
Line_2 $$ protected void initThreadLocals(long userId, Map<String, String[]> parameterMap) throws PortalException -->Line_3 $$ User user = UserLocalServiceUtil.getUserById(userId)[ FD ]
Line_2 $$ protected void initThreadLocals(long userId, Map<String, String[]> parameterMap) throws PortalException -->Line_5 $$ PrincipalThreadLocal.setName(userId)[ FD ]
Line_2 $$ protected void initThreadLocals(long userId, Map<String, String[]> parameterMap) throws PortalException -->Line_15 $$ serviceContext.setPathMain(PortalUtil.getPathMain())[ CD ]
