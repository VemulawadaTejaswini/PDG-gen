Line_4 $$ final StaticWebApplicationContext wac = new StaticWebApplicationContext()-->Line_5 $$ wac.registerSingleton("myBean", TestBean.class)[ FD ]
Line_20 $$ return new MockRequestDispatcher(path) -->Line_24 $$ assertEquals(new Integer(2), forwardRequest.getAttribute("key2"))[ CD ]
Line_2 $$ public void testInternalResourceViewResolverWithSpecificContextBeans() throws Exception -->Line_16 $$ vr.setExposedContextBeanNames(new String[] [ CD ]
Line_2 $$ public void testInternalResourceViewResolverWithSpecificContextBeans() throws Exception -->Line_7 $$ wac.setServletContext(sc)[ CD ]
Line_2 $$ public void testInternalResourceViewResolverWithSpecificContextBeans() throws Exception -->Line_8 $$ wac.refresh()[ CD ]
Line_4 $$ final StaticWebApplicationContext wac = new StaticWebApplicationContext()-->Line_17 $$ vr.setApplicationContext(wac)[ FD ]
Line_2 $$ public void testInternalResourceViewResolverWithSpecificContextBeans() throws Exception -->Line_18 $$ MockHttpServletRequest request = new MockHttpServletRequest(sc) [ CD ]
Line_2 $$ public void testInternalResourceViewResolverWithSpecificContextBeans() throws Exception -->Line_32 $$ request.setAttribute(DispatcherServlet.WEB_APPLICATION_CONTEXT_ATTRIBUTE, wac)[ CD ]
Line_20 $$ return new MockRequestDispatcher(path) -->Line_25 $$ assertNull(forwardRequest.getAttribute("myBean"))[ CD ]
Line_2 $$ public void testInternalResourceViewResolverWithSpecificContextBeans() throws Exception -->Line_34 $$ View view = vr.resolveViewName("example1", Locale.getDefault())[ CD ]
Line_20 $$ return new MockRequestDispatcher(path) -->Line_22 $$ assertTrue("Correct rc attribute", forwardRequest.getAttribute("rc") == null)[ CD ]
Line_4 $$ final StaticWebApplicationContext wac = new StaticWebApplicationContext()-->Line_7 $$ wac.setServletContext(sc)[ FD ]
Line_13 $$ Map map = new HashMap()-->Line_15 $$ vr.setAttributesMap(map)[ FD ]
Line_18 $$ MockHttpServletRequest request = new MockHttpServletRequest(sc) -->Line_32 $$ request.setAttribute(DispatcherServlet.WEB_APPLICATION_CONTEXT_ATTRIBUTE, wac)[ FD ]
Line_20 $$ return new MockRequestDispatcher(path) -->Line_22 $$ assertTrue("Correct rc attribute", forwardRequest.getAttribute("rc") == null)[ FD ]
Line_4 $$ final StaticWebApplicationContext wac = new StaticWebApplicationContext()-->Line_6 $$ wac.registerSingleton("myBean2", TestBean.class)[ FD ]
Line_20 $$ return new MockRequestDispatcher(path) -->Line_25 $$ assertNull(forwardRequest.getAttribute("myBean"))[ FD ]
Line_9 $$ InternalResourceViewResolver vr = new InternalResourceViewResolver()-->Line_16 $$ vr.setExposedContextBeanNames(new String[] [ FD ]
Line_4 $$ final StaticWebApplicationContext wac = new StaticWebApplicationContext()-->Line_26 $$ assertSame(wac.getBean("myBean2"), forwardRequest.getAttribute("myBean2"))[ FD ]
Line_18 $$ MockHttpServletRequest request = new MockHttpServletRequest(sc) -->Line_20 $$ return new MockRequestDispatcher(path) [ CD ]
Line_3 $$ MockServletContext sc = new MockServletContext()-->Line_7 $$ wac.setServletContext(sc)[ FD ]
Line_18 $$ MockHttpServletRequest request = new MockHttpServletRequest(sc) -->Line_33 $$ request.setAttribute(DispatcherServlet.LOCALE_RESOLVER_ATTRIBUTE, new AcceptHeaderLocaleResolver())[ FD ]
Line_18 $$ MockHttpServletRequest request = new MockHttpServletRequest(sc) -->Line_35 $$ view.render(new HashMap(), request, response)[ FD ]
Line_2 $$ public void testInternalResourceViewResolverWithSpecificContextBeans() throws Exception -->Line_15 $$ vr.setAttributesMap(map)[ CD ]
Line_2 $$ public void testInternalResourceViewResolverWithSpecificContextBeans() throws Exception -->Line_6 $$ wac.registerSingleton("myBean2", TestBean.class)[ CD ]
Line_20 $$ return new MockRequestDispatcher(path) -->Line_24 $$ assertEquals(new Integer(2), forwardRequest.getAttribute("key2"))[ FD ]
Line_9 $$ InternalResourceViewResolver vr = new InternalResourceViewResolver()-->Line_15 $$ vr.setAttributesMap(map)[ FD ]
Line_4 $$ final StaticWebApplicationContext wac = new StaticWebApplicationContext()-->Line_8 $$ wac.refresh()[ FD ]
Line_2 $$ public void testInternalResourceViewResolverWithSpecificContextBeans() throws Exception -->Line_12 $$ vr.setAttributes(props)[ CD ]
Line_9 $$ InternalResourceViewResolver vr = new InternalResourceViewResolver()-->Line_34 $$ View view = vr.resolveViewName("example1", Locale.getDefault())[ FD ]
Line_2 $$ public void testInternalResourceViewResolverWithSpecificContextBeans() throws Exception -->Line_5 $$ wac.registerSingleton("myBean", TestBean.class)[ CD ]
Line_2 $$ public void testInternalResourceViewResolverWithSpecificContextBeans() throws Exception -->Line_14 $$ map.put("key2", new Integer(2))[ CD ]
Line_2 $$ public void testInternalResourceViewResolverWithSpecificContextBeans() throws Exception -->Line_11 $$ props.setProperty("key1", "value1")[ CD ]
Line_20 $$ return new MockRequestDispatcher(path) -->Line_26 $$ assertSame(wac.getBean("myBean2"), forwardRequest.getAttribute("myBean2"))[ FD ]
Line_2 $$ public void testInternalResourceViewResolverWithSpecificContextBeans() throws Exception -->Line_9 $$ InternalResourceViewResolver vr = new InternalResourceViewResolver()[ CD ]
Line_20 $$ return new MockRequestDispatcher(path) -->Line_23 $$ assertEquals("value1", forwardRequest.getAttribute("key1"))[ FD ]
Line_2 $$ public void testInternalResourceViewResolverWithSpecificContextBeans() throws Exception -->Line_33 $$ request.setAttribute(DispatcherServlet.LOCALE_RESOLVER_ATTRIBUTE, new AcceptHeaderLocaleResolver())[ CD ]
Line_2 $$ public void testInternalResourceViewResolverWithSpecificContextBeans() throws Exception -->Line_35 $$ view.render(new HashMap(), request, response)[ CD ]
Line_10 $$ Properties props = new Properties()-->Line_11 $$ props.setProperty("key1", "value1")[ FD ]
Line_20 $$ return new MockRequestDispatcher(path) -->Line_26 $$ assertSame(wac.getBean("myBean2"), forwardRequest.getAttribute("myBean2"))[ CD ]
Line_20 $$ return new MockRequestDispatcher(path) -->Line_23 $$ assertEquals("value1", forwardRequest.getAttribute("key1"))[ CD ]
Line_2 $$ public void testInternalResourceViewResolverWithSpecificContextBeans() throws Exception -->Line_13 $$ Map map = new HashMap()[ CD ]
Line_9 $$ InternalResourceViewResolver vr = new InternalResourceViewResolver()-->Line_12 $$ vr.setAttributes(props)[ FD ]
Line_2 $$ public void testInternalResourceViewResolverWithSpecificContextBeans() throws Exception -->Line_17 $$ vr.setApplicationContext(wac)[ CD ]
Line_9 $$ InternalResourceViewResolver vr = new InternalResourceViewResolver()-->Line_17 $$ vr.setApplicationContext(wac)[ FD ]
Line_13 $$ Map map = new HashMap()-->Line_14 $$ map.put("key2", new Integer(2))[ FD ]
Line_2 $$ public void testInternalResourceViewResolverWithSpecificContextBeans() throws Exception -->Line_3 $$ MockServletContext sc = new MockServletContext()[ CD ]
Line_4 $$ final StaticWebApplicationContext wac = new StaticWebApplicationContext()-->Line_32 $$ request.setAttribute(DispatcherServlet.WEB_APPLICATION_CONTEXT_ATTRIBUTE, wac)[ FD ]
Line_2 $$ public void testInternalResourceViewResolverWithSpecificContextBeans() throws Exception -->Line_10 $$ Properties props = new Properties()[ CD ]
Line_10 $$ Properties props = new Properties()-->Line_12 $$ vr.setAttributes(props)[ FD ]
Line_2 $$ public void testInternalResourceViewResolverWithSpecificContextBeans() throws Exception -->Line_4 $$ final StaticWebApplicationContext wac = new StaticWebApplicationContext()[ CD ]
