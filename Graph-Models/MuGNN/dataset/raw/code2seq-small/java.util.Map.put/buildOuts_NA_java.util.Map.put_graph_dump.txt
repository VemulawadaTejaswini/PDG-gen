Line_9 $$ while (inIt.hasNext()) -->Line_10 $$ Node inNode = inIt.next()[ CD ]
Line_8 $$ Iterator<Node> inIt = myGraph.getIn(node)-->Line_10 $$ Node inNode = inIt.next()[ FD ]
Line_4 $$ for (Node node : nodes) -->Line_5 $$ myOuts.put(node, new LinkedHashSet<Node>())[ FD ]
Line_11 $$ final Set<Node> set = myOuts.get(inNode)-->Line_15 $$ set.add(node)[ FD ]
Line_11 $$ final Set<Node> set = myOuts.get(inNode)-->Line_12 $$ if (set == null) [ FD ]
Line_9 $$ while (inIt.hasNext()) -->Line_11 $$ final Set<Node> set = myOuts.get(inNode)[ CD ]
Line_4 $$ for (Node node : nodes) -->Line_8 $$ Iterator<Node> inIt = myGraph.getIn(node)[ FD ]
Line_2 $$ private void buildOuts() -->Line_3 $$ Collection<Node> nodes = myGraph.getNodes()[ CD ]
Line_10 $$ Node inNode = inIt.next()-->Line_11 $$ final Set<Node> set = myOuts.get(inNode)[ FD ]
Line_4 $$ for (Node node : nodes) -->Line_15 $$ set.add(node)[ FD ]
Line_9 $$ while (inIt.hasNext()) -->Line_15 $$ set.add(node)[ CD ]
Line_9 $$ while (inIt.hasNext()) -->Line_12 $$ if (set == null) [ CD ]
Line_8 $$ Iterator<Node> inIt = myGraph.getIn(node)-->Line_9 $$ while (inIt.hasNext()) [ FD ]
