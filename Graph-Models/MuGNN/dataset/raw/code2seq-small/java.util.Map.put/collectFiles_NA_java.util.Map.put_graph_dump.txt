Line_3 $$ Files.walkFileTree(dir, new SimpleFileVisitor<Path>() -->Line_6 $$ String groupName = file.toAbsolutePath().getParent().getFileName().toString()[ FD ]
Line_7 $$ Set<Path> filesSet = files.get(groupName)-->Line_8 $$ if (filesSet == null) [ FD ]
Line_9 $$ filesSet = new HashSet()-->Line_10 $$ files.put(groupName, filesSet)[ FD ]
Line_8 $$ if (filesSet == null) -->Line_10 $$ files.put(groupName, filesSet)[ CD ]
Line_6 $$ String groupName = file.toAbsolutePath().getParent().getFileName().toString()-->Line_10 $$ files.put(groupName, filesSet)[ FD ]
Line_2 $$ private static void collectFiles(final Path dir, final String fileSuffix, final Map<String, Set<Path>> files) throws IOException -->Line_3 $$ Files.walkFileTree(dir, new SimpleFileVisitor<Path>() [ CD ]
Line_9 $$ filesSet = new HashSet()-->Line_12 $$ filesSet.add(file)[ FD ]
Line_5 $$ if (file.toString().endsWith(fileSuffix)) -->Line_6 $$ String groupName = file.toAbsolutePath().getParent().getFileName().toString()[ CD ]
Line_2 $$ private static void collectFiles(final Path dir, final String fileSuffix, final Map<String, Set<Path>> files) throws IOException -->Line_3 $$ Files.walkFileTree(dir, new SimpleFileVisitor<Path>() [ FD ]
Line_3 $$ Files.walkFileTree(dir, new SimpleFileVisitor<Path>() -->Line_12 $$ filesSet.add(file)[ FD ]
Line_6 $$ String groupName = file.toAbsolutePath().getParent().getFileName().toString()-->Line_7 $$ Set<Path> filesSet = files.get(groupName)[ FD ]
Line_2 $$ private static void collectFiles(final Path dir, final String fileSuffix, final Map<String, Set<Path>> files) throws IOException -->Line_10 $$ files.put(groupName, filesSet)[ FD ]
Line_3 $$ Files.walkFileTree(dir, new SimpleFileVisitor<Path>() -->Line_14 $$ return FileVisitResult.CONTINUE[ CD ]
Line_5 $$ if (file.toString().endsWith(fileSuffix)) -->Line_8 $$ if (filesSet == null) [ CD ]
Line_5 $$ if (file.toString().endsWith(fileSuffix)) -->Line_12 $$ filesSet.add(file)[ CD ]
Line_7 $$ Set<Path> filesSet = files.get(groupName)-->Line_12 $$ filesSet.add(file)[ FD ]
Line_8 $$ if (filesSet == null) -->Line_9 $$ filesSet = new HashSet()[ CD ]
Line_7 $$ Set<Path> filesSet = files.get(groupName)-->Line_10 $$ files.put(groupName, filesSet)[ FD ]
Line_2 $$ private static void collectFiles(final Path dir, final String fileSuffix, final Map<String, Set<Path>> files) throws IOException -->Line_5 $$ if (file.toString().endsWith(fileSuffix)) [ FD ]
Line_3 $$ Files.walkFileTree(dir, new SimpleFileVisitor<Path>() -->Line_5 $$ if (file.toString().endsWith(fileSuffix)) [ CD ]
Line_5 $$ if (file.toString().endsWith(fileSuffix)) -->Line_7 $$ Set<Path> filesSet = files.get(groupName)[ CD ]
Line_7 $$ Set<Path> filesSet = files.get(groupName)-->Line_9 $$ filesSet = new HashSet()[ FD ]
Line_2 $$ private static void collectFiles(final Path dir, final String fileSuffix, final Map<String, Set<Path>> files) throws IOException -->Line_7 $$ Set<Path> filesSet = files.get(groupName)[ FD ]
Line_3 $$ Files.walkFileTree(dir, new SimpleFileVisitor<Path>() -->Line_5 $$ if (file.toString().endsWith(fileSuffix)) [ FD ]
