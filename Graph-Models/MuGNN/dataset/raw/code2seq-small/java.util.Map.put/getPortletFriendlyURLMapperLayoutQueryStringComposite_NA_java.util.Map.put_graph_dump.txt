Line_4 $$ String friendlyURL = url-->Line_69 $$ friendlyURL = friendlyURL.substring(0, friendlyURL.length() - 1)[ FD ]
Line_20 $$ friendlyURL = url.substring(0, pos)-->Line_69 $$ friendlyURL = friendlyURL.substring(0, friendlyURL.length() - 1)[ FD ]
Line_18 $$ if (pos != -1) -->Line_26 $$ Set<PublicRenderParameter> publicRenderParameters = portlet.getPublicRenderParameters()[ CD ]
Line_21 $$ InheritableMap<String, String[]> actualParams = new InheritableMap()-->Line_35 $$ friendlyURLMapper.populateParams(url.substring(pos + 2), actualParams, requestContext)[ FD ]
Line_10 $$ url += StringPool.SLASH-->Line_50 $$ String ppid = url.substring(x + 3, y)[ FD ]
Line_57 $$ actualParams = new HashMap()-->Line_59 $$ actualParams.put("p_p_id", new String[] [ FD ]
Line_55 $$ actualParams = new HashMap(params)-->Line_60 $$ actualParams.put("p_p_lifecycle", new String[] [ FD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_67 $$ friendlyURL = StringUtil.replace(friendlyURL, StringPool.DOUBLE_SLASH, StringPool.SLASH)[ CD ]
Line_51 $$ if (Validator.isNotNull(ppid)) -->Line_61 $$ actualParams.put("p_p_state", new String[] [ CD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_68 $$ if (friendlyURL.endsWith(StringPool.SLASH)) [ CD ]
Line_4 $$ String friendlyURL = url-->Line_71 $$ Layout layout = LayoutLocalServiceUtil.getFriendlyURLLayout(groupId, privateLayout, friendlyURL)[ FD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_10 $$ url += StringPool.SLASH[ FD ]
Line_45 $$ if (x != -1) -->Line_50 $$ String ppid = url.substring(x + 3, y)[ CD ]
Line_4 $$ String friendlyURL = url-->Line_20 $$ friendlyURL = url.substring(0, pos)[ FD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_5 $$ String queryString = StringPool.BLANK[ CD ]
Line_5 $$ String queryString = StringPool.BLANK-->Line_39 $$ queryString = StringPool.AMPERSAND + HttpUtil.parameterMapToString(actualParams, false)[ FD ]
Line_67 $$ friendlyURL = StringUtil.replace(friendlyURL, StringPool.DOUBLE_SLASH, StringPool.SLASH)-->Line_68 $$ if (friendlyURL.endsWith(StringPool.SLASH)) [ FD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_43 $$ if (!foundFriendlyURLMapper) [ CD ]
Line_52 $$ friendlyURL = url.substring(0, x)-->Line_68 $$ if (friendlyURL.endsWith(StringPool.SLASH)) [ FD ]
Line_25 $$ Map<String, String> prpIdentifiers = new HashMap()-->Line_31 $$ prpIdentifiers.put(publicRenderParameterIdentifier, publicRenderParameterName)[ FD ]
Line_55 $$ actualParams = new HashMap(params)-->Line_61 $$ actualParams.put("p_p_state", new String[] [ FD ]
Line_27 $$ for (PublicRenderParameter publicRenderParameter : publicRenderParameters) -->Line_28 $$ QName qName = publicRenderParameter.getQName()[ FD ]
Line_18 $$ if (pos != -1) -->Line_21 $$ InheritableMap<String, String[]> actualParams = new InheritableMap()[ CD ]
Line_19 $$ foundFriendlyURLMapper = true-->Line_43 $$ if (!foundFriendlyURLMapper) [ FD ]
Line_20 $$ friendlyURL = url.substring(0, pos)-->Line_71 $$ Layout layout = LayoutLocalServiceUtil.getFriendlyURLLayout(groupId, privateLayout, friendlyURL)[ FD ]
Line_16 $$ pos = url.indexOf(StringPool.SLASH + friendlyURLMapper.getMapping() + StringPool.SLASH)-->Line_18 $$ if (pos != -1) [ FD ]
Line_18 $$ if (pos != -1) -->Line_34 $$ if (friendlyURLMapper.isCheckMappingWithPrefix()) [ CD ]
Line_18 $$ if (pos != -1) -->Line_33 $$ FriendlyURLMapperThreadLocal.setPRPIdentifiers(prpIdentifiers)[ CD ]
Line_5 $$ String queryString = StringPool.BLANK-->Line_63 $$ queryString = StringPool.AMPERSAND + HttpUtil.parameterMapToString(actualParams, false)[ FD ]
Line_51 $$ if (Validator.isNotNull(ppid)) -->Line_52 $$ friendlyURL = url.substring(0, x)[ CD ]
Line_8 $$ FriendlyURLMapper friendlyURLMapper = portlet.getFriendlyURLMapperInstance()-->Line_16 $$ pos = url.indexOf(StringPool.SLASH + friendlyURLMapper.getMapping() + StringPool.SLASH)[ FD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_16 $$ pos = url.indexOf(StringPool.SLASH + friendlyURLMapper.getMapping() + StringPool.SLASH)[ FD ]
Line_21 $$ InheritableMap<String, String[]> actualParams = new InheritableMap()-->Line_62 $$ actualParams.put("p_p_mode", new String[] [ FD ]
Line_51 $$ if (Validator.isNotNull(ppid)) -->Line_59 $$ actualParams.put("p_p_id", new String[] [ CD ]
Line_29 $$ String publicRenderParameterIdentifier = qName.getLocalPart()-->Line_31 $$ prpIdentifiers.put(publicRenderParameterIdentifier, publicRenderParameterName)[ FD ]
Line_51 $$ if (Validator.isNotNull(ppid)) -->Line_63 $$ queryString = StringPool.AMPERSAND + HttpUtil.parameterMapToString(actualParams, false)[ CD ]
Line_10 $$ url += StringPool.SLASH-->Line_52 $$ friendlyURL = url.substring(0, x)[ FD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_48 $$ y = url.length()[ FD ]
Line_12 $$ int pos = -1-->Line_18 $$ if (pos != -1) [ FD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_6 $$ List<Portlet> portlets = PortletLocalServiceUtil.getFriendlyURLMapperPortlets()[ CD ]
Line_45 $$ if (x != -1) -->Line_46 $$ int y = url.indexOf(CharPool.SLASH, x + 3)[ CD ]
Line_8 $$ FriendlyURLMapper friendlyURLMapper = portlet.getFriendlyURLMapperInstance()-->Line_35 $$ friendlyURLMapper.populateParams(url.substring(pos + 2), actualParams, requestContext)[ FD ]
Line_47 $$ if (y == -1) -->Line_48 $$ y = url.length()[ CD ]
Line_28 $$ QName qName = publicRenderParameter.getQName()-->Line_29 $$ String publicRenderParameterIdentifier = qName.getLocalPart()[ FD ]
Line_4 $$ String friendlyURL = url-->Line_68 $$ if (friendlyURL.endsWith(StringPool.SLASH)) [ FD ]
Line_18 $$ if (pos != -1) -->Line_25 $$ Map<String, String> prpIdentifiers = new HashMap()[ CD ]
Line_39 $$ queryString = StringPool.AMPERSAND + HttpUtil.parameterMapToString(actualParams, false)-->Line_63 $$ queryString = StringPool.AMPERSAND + HttpUtil.parameterMapToString(actualParams, false)[ FD ]
Line_10 $$ url += StringPool.SLASH-->Line_35 $$ friendlyURLMapper.populateParams(url.substring(pos + 2), actualParams, requestContext)[ FD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_44 $$ int x = url.indexOf(FRIENDLY_URL_SEPARATOR)[ FD ]
Line_30 $$ String publicRenderParameterName = PortletQNameUtil.getPublicRenderParameterName(qName)-->Line_31 $$ prpIdentifiers.put(publicRenderParameterIdentifier, publicRenderParameterName)[ FD ]
Line_8 $$ FriendlyURLMapper friendlyURLMapper = portlet.getFriendlyURLMapperInstance()-->Line_37 $$ friendlyURLMapper.populateParams(url.substring(pos), actualParams, requestContext)[ FD ]
Line_14 $$ pos = url.indexOf(FRIENDLY_URL_SEPARATOR + friendlyURLMapper.getMapping() + StringPool.SLASH)-->Line_20 $$ friendlyURL = url.substring(0, pos)[ FD ]
Line_44 $$ int x = url.indexOf(FRIENDLY_URL_SEPARATOR)-->Line_52 $$ friendlyURL = url.substring(0, x)[ FD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_71 $$ Layout layout = LayoutLocalServiceUtil.getFriendlyURLLayout(groupId, privateLayout, friendlyURL)[ CD ]
Line_13 $$ if (friendlyURLMapper.isCheckMappingWithPrefix()) -->Line_14 $$ pos = url.indexOf(FRIENDLY_URL_SEPARATOR + friendlyURLMapper.getMapping() + StringPool.SLASH)[ CD ]
Line_8 $$ FriendlyURLMapper friendlyURLMapper = portlet.getFriendlyURLMapperInstance()-->Line_9 $$ if (url.endsWith(StringPool.SLASH + friendlyURLMapper.getMapping())) [ FD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_54 $$ if (params != null) [ FD ]
Line_12 $$ int pos = -1-->Line_20 $$ friendlyURL = url.substring(0, pos)[ FD ]
Line_55 $$ actualParams = new HashMap(params)-->Line_63 $$ queryString = StringPool.AMPERSAND + HttpUtil.parameterMapToString(actualParams, false)[ FD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_71 $$ Layout layout = LayoutLocalServiceUtil.getFriendlyURLLayout(groupId, privateLayout, friendlyURL)[ FD ]
Line_7 $$ for (Portlet portlet : portlets) -->Line_8 $$ FriendlyURLMapper friendlyURLMapper = portlet.getFriendlyURLMapperInstance()[ FD ]
Line_25 $$ Map<String, String> prpIdentifiers = new HashMap()-->Line_33 $$ FriendlyURLMapperThreadLocal.setPRPIdentifiers(prpIdentifiers)[ FD ]
Line_18 $$ if (pos != -1) -->Line_20 $$ friendlyURL = url.substring(0, pos)[ CD ]
Line_43 $$ if (!foundFriendlyURLMapper) -->Line_45 $$ if (x != -1) [ CD ]
Line_9 $$ if (url.endsWith(StringPool.SLASH + friendlyURLMapper.getMapping())) -->Line_10 $$ url += StringPool.SLASH[ CD ]
Line_21 $$ InheritableMap<String, String[]> actualParams = new InheritableMap()-->Line_23 $$ actualParams.setParentMap(params)[ FD ]
Line_34 $$ if (friendlyURLMapper.isCheckMappingWithPrefix()) -->Line_37 $$ friendlyURLMapper.populateParams(url.substring(pos), actualParams, requestContext)[ CD ]
Line_20 $$ friendlyURL = url.substring(0, pos)-->Line_68 $$ if (friendlyURL.endsWith(StringPool.SLASH)) [ FD ]
Line_22 $$ if (params != null) -->Line_23 $$ actualParams.setParentMap(params)[ CD ]
Line_8 $$ FriendlyURLMapper friendlyURLMapper = portlet.getFriendlyURLMapperInstance()-->Line_13 $$ if (friendlyURLMapper.isCheckMappingWithPrefix()) [ FD ]
Line_8 $$ FriendlyURLMapper friendlyURLMapper = portlet.getFriendlyURLMapperInstance()-->Line_34 $$ if (friendlyURLMapper.isCheckMappingWithPrefix()) [ FD ]
Line_18 $$ if (pos != -1) -->Line_19 $$ foundFriendlyURLMapper = true[ CD ]
Line_46 $$ int y = url.indexOf(CharPool.SLASH, x + 3)-->Line_48 $$ y = url.length()[ FD ]
Line_16 $$ pos = url.indexOf(StringPool.SLASH + friendlyURLMapper.getMapping() + StringPool.SLASH)-->Line_20 $$ friendlyURL = url.substring(0, pos)[ FD ]
Line_51 $$ if (Validator.isNotNull(ppid)) -->Line_60 $$ actualParams.put("p_p_lifecycle", new String[] [ CD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_9 $$ if (url.endsWith(StringPool.SLASH + friendlyURLMapper.getMapping())) [ FD ]
Line_69 $$ friendlyURL = friendlyURL.substring(0, friendlyURL.length() - 1)-->Line_71 $$ Layout layout = LayoutLocalServiceUtil.getFriendlyURLLayout(groupId, privateLayout, friendlyURL)[ FD ]
Line_13 $$ if (friendlyURLMapper.isCheckMappingWithPrefix()) -->Line_16 $$ pos = url.indexOf(StringPool.SLASH + friendlyURLMapper.getMapping() + StringPool.SLASH)[ CD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_50 $$ String ppid = url.substring(x + 3, y)[ FD ]
Line_44 $$ int x = url.indexOf(FRIENDLY_URL_SEPARATOR)-->Line_45 $$ if (x != -1) [ FD ]
Line_21 $$ InheritableMap<String, String[]> actualParams = new InheritableMap()-->Line_60 $$ actualParams.put("p_p_lifecycle", new String[] [ FD ]
Line_67 $$ friendlyURL = StringUtil.replace(friendlyURL, StringPool.DOUBLE_SLASH, StringPool.SLASH)-->Line_71 $$ Layout layout = LayoutLocalServiceUtil.getFriendlyURLLayout(groupId, privateLayout, friendlyURL)[ FD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_4 $$ String friendlyURL = url[ CD ]
Line_45 $$ if (x != -1) -->Line_47 $$ if (y == -1) [ CD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_46 $$ int y = url.indexOf(CharPool.SLASH, x + 3)[ FD ]
Line_10 $$ url += StringPool.SLASH-->Line_44 $$ int x = url.indexOf(FRIENDLY_URL_SEPARATOR)[ FD ]
Line_21 $$ InheritableMap<String, String[]> actualParams = new InheritableMap()-->Line_57 $$ actualParams = new HashMap()[ FD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_3 $$ boolean foundFriendlyURLMapper = false[ CD ]
Line_20 $$ friendlyURL = url.substring(0, pos)-->Line_52 $$ friendlyURL = url.substring(0, x)[ FD ]
Line_3 $$ boolean foundFriendlyURLMapper = false-->Line_19 $$ foundFriendlyURLMapper = true[ FD ]
Line_18 $$ if (pos != -1) -->Line_22 $$ if (params != null) [ CD ]
Line_14 $$ pos = url.indexOf(FRIENDLY_URL_SEPARATOR + friendlyURLMapper.getMapping() + StringPool.SLASH)-->Line_18 $$ if (pos != -1) [ FD ]
Line_12 $$ int pos = -1-->Line_37 $$ friendlyURLMapper.populateParams(url.substring(pos), actualParams, requestContext)[ FD ]
Line_52 $$ friendlyURL = url.substring(0, x)-->Line_69 $$ friendlyURL = friendlyURL.substring(0, friendlyURL.length() - 1)[ FD ]
Line_67 $$ friendlyURL = StringUtil.replace(friendlyURL, StringPool.DOUBLE_SLASH, StringPool.SLASH)-->Line_69 $$ friendlyURL = friendlyURL.substring(0, friendlyURL.length() - 1)[ FD ]
Line_54 $$ if (params != null) -->Line_55 $$ actualParams = new HashMap(params)[ CD ]
Line_12 $$ int pos = -1-->Line_16 $$ pos = url.indexOf(StringPool.SLASH + friendlyURLMapper.getMapping() + StringPool.SLASH)[ FD ]
Line_52 $$ friendlyURL = url.substring(0, x)-->Line_67 $$ friendlyURL = StringUtil.replace(friendlyURL, StringPool.DOUBLE_SLASH, StringPool.SLASH)[ FD ]
Line_57 $$ actualParams = new HashMap()-->Line_63 $$ queryString = StringPool.AMPERSAND + HttpUtil.parameterMapToString(actualParams, false)[ FD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_14 $$ pos = url.indexOf(FRIENDLY_URL_SEPARATOR + friendlyURLMapper.getMapping() + StringPool.SLASH)[ FD ]
Line_43 $$ if (!foundFriendlyURLMapper) -->Line_44 $$ int x = url.indexOf(FRIENDLY_URL_SEPARATOR)[ CD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_35 $$ friendlyURLMapper.populateParams(url.substring(pos + 2), actualParams, requestContext)[ FD ]
Line_57 $$ actualParams = new HashMap()-->Line_62 $$ actualParams.put("p_p_mode", new String[] [ FD ]
Line_21 $$ InheritableMap<String, String[]> actualParams = new InheritableMap()-->Line_61 $$ actualParams.put("p_p_state", new String[] [ FD ]
Line_57 $$ actualParams = new HashMap()-->Line_61 $$ actualParams.put("p_p_state", new String[] [ FD ]
Line_14 $$ pos = url.indexOf(FRIENDLY_URL_SEPARATOR + friendlyURLMapper.getMapping() + StringPool.SLASH)-->Line_16 $$ pos = url.indexOf(StringPool.SLASH + friendlyURLMapper.getMapping() + StringPool.SLASH)[ FD ]
Line_21 $$ InheritableMap<String, String[]> actualParams = new InheritableMap()-->Line_39 $$ queryString = StringPool.AMPERSAND + HttpUtil.parameterMapToString(actualParams, false)[ FD ]
Line_21 $$ InheritableMap<String, String[]> actualParams = new InheritableMap()-->Line_63 $$ queryString = StringPool.AMPERSAND + HttpUtil.parameterMapToString(actualParams, false)[ FD ]
Line_55 $$ actualParams = new HashMap(params)-->Line_59 $$ actualParams.put("p_p_id", new String[] [ FD ]
Line_48 $$ y = url.length()-->Line_50 $$ String ppid = url.substring(x + 3, y)[ FD ]
Line_46 $$ int y = url.indexOf(CharPool.SLASH, x + 3)-->Line_47 $$ if (y == -1) [ FD ]
Line_28 $$ QName qName = publicRenderParameter.getQName()-->Line_30 $$ String publicRenderParameterName = PortletQNameUtil.getPublicRenderParameterName(qName)[ FD ]
Line_46 $$ int y = url.indexOf(CharPool.SLASH, x + 3)-->Line_50 $$ String ppid = url.substring(x + 3, y)[ FD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_37 $$ friendlyURLMapper.populateParams(url.substring(pos), actualParams, requestContext)[ FD ]
Line_34 $$ if (friendlyURLMapper.isCheckMappingWithPrefix()) -->Line_35 $$ friendlyURLMapper.populateParams(url.substring(pos + 2), actualParams, requestContext)[ CD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_52 $$ friendlyURL = url.substring(0, x)[ FD ]
Line_10 $$ url += StringPool.SLASH-->Line_46 $$ int y = url.indexOf(CharPool.SLASH, x + 3)[ FD ]
Line_55 $$ actualParams = new HashMap(params)-->Line_62 $$ actualParams.put("p_p_mode", new String[] [ FD ]
Line_21 $$ InheritableMap<String, String[]> actualParams = new InheritableMap()-->Line_37 $$ friendlyURLMapper.populateParams(url.substring(pos), actualParams, requestContext)[ FD ]
Line_4 $$ String friendlyURL = url-->Line_67 $$ friendlyURL = StringUtil.replace(friendlyURL, StringPool.DOUBLE_SLASH, StringPool.SLASH)[ FD ]
Line_55 $$ actualParams = new HashMap(params)-->Line_57 $$ actualParams = new HashMap()[ FD ]
Line_57 $$ actualParams = new HashMap()-->Line_60 $$ actualParams.put("p_p_lifecycle", new String[] [ FD ]
Line_10 $$ url += StringPool.SLASH-->Line_48 $$ y = url.length()[ FD ]
Line_50 $$ String ppid = url.substring(x + 3, y)-->Line_51 $$ if (Validator.isNotNull(ppid)) [ FD ]
Line_10 $$ url += StringPool.SLASH-->Line_37 $$ friendlyURLMapper.populateParams(url.substring(pos), actualParams, requestContext)[ FD ]
Line_45 $$ if (x != -1) -->Line_51 $$ if (Validator.isNotNull(ppid)) [ CD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_22 $$ if (params != null) [ FD ]
Line_7 $$ for (Portlet portlet : portlets) -->Line_26 $$ Set<PublicRenderParameter> publicRenderParameters = portlet.getPublicRenderParameters()[ FD ]
Line_21 $$ InheritableMap<String, String[]> actualParams = new InheritableMap()-->Line_55 $$ actualParams = new HashMap(params)[ FD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_72 $$ return new LayoutQueryStringComposite(layout, friendlyURL, queryString)[ CD ]
Line_51 $$ if (Validator.isNotNull(ppid)) -->Line_62 $$ actualParams.put("p_p_mode", new String[] [ CD ]
Line_68 $$ if (friendlyURL.endsWith(StringPool.SLASH)) -->Line_69 $$ friendlyURL = friendlyURL.substring(0, friendlyURL.length() - 1)[ CD ]
Line_52 $$ friendlyURL = url.substring(0, x)-->Line_71 $$ Layout layout = LayoutLocalServiceUtil.getFriendlyURLLayout(groupId, privateLayout, friendlyURL)[ FD ]
Line_54 $$ if (params != null) -->Line_57 $$ actualParams = new HashMap()[ CD ]
Line_20 $$ friendlyURL = url.substring(0, pos)-->Line_67 $$ friendlyURL = StringUtil.replace(friendlyURL, StringPool.DOUBLE_SLASH, StringPool.SLASH)[ FD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_23 $$ actualParams.setParentMap(params)[ FD ]
Line_51 $$ if (Validator.isNotNull(ppid)) -->Line_54 $$ if (params != null) [ CD ]
Line_18 $$ if (pos != -1) -->Line_39 $$ queryString = StringPool.AMPERSAND + HttpUtil.parameterMapToString(actualParams, false)[ CD ]
Line_3 $$ boolean foundFriendlyURLMapper = false-->Line_43 $$ if (!foundFriendlyURLMapper) [ FD ]
Line_16 $$ pos = url.indexOf(StringPool.SLASH + friendlyURLMapper.getMapping() + StringPool.SLASH)-->Line_37 $$ friendlyURLMapper.populateParams(url.substring(pos), actualParams, requestContext)[ FD ]
Line_10 $$ url += StringPool.SLASH-->Line_20 $$ friendlyURL = url.substring(0, pos)[ FD ]
Line_10 $$ url += StringPool.SLASH-->Line_16 $$ pos = url.indexOf(StringPool.SLASH + friendlyURLMapper.getMapping() + StringPool.SLASH)[ FD ]
Line_21 $$ InheritableMap<String, String[]> actualParams = new InheritableMap()-->Line_59 $$ actualParams.put("p_p_id", new String[] [ FD ]
Line_4 $$ String friendlyURL = url-->Line_52 $$ friendlyURL = url.substring(0, x)[ FD ]
Line_2 $$ public LayoutQueryStringComposite getPortletFriendlyURLMapperLayoutQueryStringComposite(long groupId, boolean privateLayout, String url, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_20 $$ friendlyURL = url.substring(0, pos)[ FD ]
Line_8 $$ FriendlyURLMapper friendlyURLMapper = portlet.getFriendlyURLMapperInstance()-->Line_14 $$ pos = url.indexOf(FRIENDLY_URL_SEPARATOR + friendlyURLMapper.getMapping() + StringPool.SLASH)[ FD ]
Line_10 $$ url += StringPool.SLASH-->Line_14 $$ pos = url.indexOf(FRIENDLY_URL_SEPARATOR + friendlyURLMapper.getMapping() + StringPool.SLASH)[ FD ]
Line_14 $$ pos = url.indexOf(FRIENDLY_URL_SEPARATOR + friendlyURLMapper.getMapping() + StringPool.SLASH)-->Line_37 $$ friendlyURLMapper.populateParams(url.substring(pos), actualParams, requestContext)[ FD ]
Line_12 $$ int pos = -1-->Line_14 $$ pos = url.indexOf(FRIENDLY_URL_SEPARATOR + friendlyURLMapper.getMapping() + StringPool.SLASH)[ FD ]
