Line_8 $$ known = false-->Line_10 $$ protocols.put(protocol, known)[ FD ]
Line_2 $$ public java.net.URLStreamHandler createURLStreamHandler(String protocol) -->Line_10 $$ protocols.put(protocol, known)[ FD ]
Line_3 $$ if (!protocols.containsKey(protocol)) -->Line_4 $$ boolean known = true[ CD ]
Line_12 $$ if (protocols.get(protocol)) -->Line_13 $$ return handler[ CD ]
Line_2 $$ public java.net.URLStreamHandler createURLStreamHandler(String protocol) -->Line_3 $$ if (!protocols.containsKey(protocol)) [ FD ]
Line_2 $$ public java.net.URLStreamHandler createURLStreamHandler(String protocol) -->Line_6 $$ FileSystem.getFileSystemClass(protocol, conf)[ FD ]
Line_4 $$ boolean known = true-->Line_10 $$ protocols.put(protocol, known)[ FD ]
Line_2 $$ public java.net.URLStreamHandler createURLStreamHandler(String protocol) -->Line_12 $$ if (protocols.get(protocol)) [ FD ]
Line_12 $$ if (protocols.get(protocol)) -->Line_15 $$ return null[ CD ]
Line_2 $$ public java.net.URLStreamHandler createURLStreamHandler(String protocol) -->Line_12 $$ if (protocols.get(protocol)) [ CD ]
Line_2 $$ public java.net.URLStreamHandler createURLStreamHandler(String protocol) -->Line_3 $$ if (!protocols.containsKey(protocol)) [ CD ]
Line_4 $$ boolean known = true-->Line_8 $$ known = false[ FD ]
Line_3 $$ if (!protocols.containsKey(protocol)) -->Line_10 $$ protocols.put(protocol, known)[ CD ]
