Line_7 $$ TestBean bean = bf.getBean(TestBean.class)-->Line_9 $$ assertThat(bean.getSex(), equalTo("systemValue"))[ FD ]
Line_2 $$ public void resolveFromSystemProperties() -->Line_7 $$ TestBean bean = bf.getBean(TestBean.class)[ CD ]
Line_7 $$ TestBean bean = bf.getBean(TestBean.class)-->Line_8 $$ assertThat(bean.getName(), equalTo(P1_LOCAL_PROPS_VAL))[ FD ]
Line_2 $$ public void resolveFromSystemProperties() -->Line_10 $$ getModifiableSystemEnvironment().remove("otherKey")[ CD ]
Line_2 $$ public void resolveFromSystemProperties() -->Line_8 $$ assertThat(bean.getName(), equalTo(P1_LOCAL_PROPS_VAL))[ CD ]
Line_2 $$ public void resolveFromSystemProperties() -->Line_6 $$ ppc.postProcessBeanFactory(bf)[ CD ]
Line_2 $$ public void resolveFromSystemProperties() -->Line_3 $$ getModifiableSystemEnvironment().put("otherKey", "systemValue")[ CD ]
Line_2 $$ public void resolveFromSystemProperties() -->Line_5 $$ registerWithGeneratedName(p1BeanDef, bf)[ CD ]
Line_2 $$ public void resolveFromSystemProperties() -->Line_9 $$ assertThat(bean.getSex(), equalTo("systemValue"))[ CD ]
Line_2 $$ public void resolveFromSystemProperties() -->Line_4 $$ p1BeanDef = rootBeanDefinition(TestBean.class).addPropertyValue("name", "$[ CD ]
