Line_2 $$ public void registerResolvableDependency(Class<?> dependencyType, Object autowiredValue) -->Line_3 $$ Assert.notNull(dependencyType, "Type must not be null")[ FD ]
Line_4 $$ if (autowiredValue != null) -->Line_6 $$ this.resolvableDependencies.put(dependencyType, autowiredValue)[ CD ]
Line_2 $$ public void registerResolvableDependency(Class<?> dependencyType, Object autowiredValue) -->Line_4 $$ if (autowiredValue != null) [ FD ]
Line_2 $$ public void registerResolvableDependency(Class<?> dependencyType, Object autowiredValue) -->Line_6 $$ this.resolvableDependencies.put(dependencyType, autowiredValue)[ FD ]
Line_4 $$ if (autowiredValue != null) -->Line_5 $$ Assert.isTrue((autowiredValue instanceof ObjectFactory || dependencyType.isInstance(autowiredValue)), "Value [" + autowiredValue + "] does not implement specified type [" + dependencyType.getName() + "]")[ CD ]
Line_2 $$ public void registerResolvableDependency(Class<?> dependencyType, Object autowiredValue) -->Line_5 $$ Assert.isTrue((autowiredValue instanceof ObjectFactory || dependencyType.isInstance(autowiredValue)), "Value [" + autowiredValue + "] does not implement specified type [" + dependencyType.getName() + "]")[ FD ]
Line_2 $$ public void registerResolvableDependency(Class<?> dependencyType, Object autowiredValue) -->Line_4 $$ if (autowiredValue != null) [ CD ]
Line_2 $$ public void registerResolvableDependency(Class<?> dependencyType, Object autowiredValue) -->Line_3 $$ Assert.notNull(dependencyType, "Type must not be null")[ CD ]
