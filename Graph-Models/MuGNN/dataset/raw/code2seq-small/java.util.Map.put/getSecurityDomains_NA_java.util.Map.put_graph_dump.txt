Line_3 $$ Map<String, String> loginOptions = new HashMap()-->Line_7 $$ SecurityModule loginModule = new SecurityModule.Builder().name("UsersRoles").flag("required").options(loginOptions).build()[ FD ]
Line_3 $$ Map<String, String> loginOptions = new HashMap()-->Line_5 $$ loginOptions.put("rolesProperties", WSTrustTestCaseSecuritySetupTask.class.getResource("WEB-INF/jbossws-roles.properties").getPath())[ FD ]
Line_2 $$ protected SecurityDomain[] getSecurityDomains() throws Exception -->Line_7 $$ SecurityModule loginModule = new SecurityModule.Builder().name("UsersRoles").flag("required").options(loginOptions).build()[ CD ]
Line_2 $$ protected SecurityDomain[] getSecurityDomains() throws Exception -->Line_9 $$ return new SecurityDomain[] [ CD ]
Line_2 $$ protected SecurityDomain[] getSecurityDomains() throws Exception -->Line_3 $$ Map<String, String> loginOptions = new HashMap()[ CD ]
Line_2 $$ protected SecurityDomain[] getSecurityDomains() throws Exception -->Line_4 $$ loginOptions.put("usersProperties", WSTrustTestCaseSecuritySetupTask.class.getResource("WEB-INF/jbossws-users.properties").getPath())[ CD ]
Line_2 $$ protected SecurityDomain[] getSecurityDomains() throws Exception -->Line_8 $$ SecurityDomain securityDomain = new SecurityDomain.Builder().name(SECURITY_DOMAIN_NAME).cacheType("default").loginModules(loginModule).build()[ CD ]
Line_7 $$ SecurityModule loginModule = new SecurityModule.Builder().name("UsersRoles").flag("required").options(loginOptions).build()-->Line_8 $$ SecurityDomain securityDomain = new SecurityDomain.Builder().name(SECURITY_DOMAIN_NAME).cacheType("default").loginModules(loginModule).build()[ FD ]
Line_3 $$ Map<String, String> loginOptions = new HashMap()-->Line_4 $$ loginOptions.put("usersProperties", WSTrustTestCaseSecuritySetupTask.class.getResource("WEB-INF/jbossws-users.properties").getPath())[ FD ]
Line_3 $$ Map<String, String> loginOptions = new HashMap()-->Line_6 $$ loginOptions.put("unauthenticatedIdentity", "anonymous")[ FD ]
Line_2 $$ protected SecurityDomain[] getSecurityDomains() throws Exception -->Line_5 $$ loginOptions.put("rolesProperties", WSTrustTestCaseSecuritySetupTask.class.getResource("WEB-INF/jbossws-roles.properties").getPath())[ CD ]
Line_2 $$ protected SecurityDomain[] getSecurityDomains() throws Exception -->Line_6 $$ loginOptions.put("unauthenticatedIdentity", "anonymous")[ CD ]
