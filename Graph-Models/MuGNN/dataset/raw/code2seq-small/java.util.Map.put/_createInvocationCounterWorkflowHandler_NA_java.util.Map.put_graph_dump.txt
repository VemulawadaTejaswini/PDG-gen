Line_7 $$ AtomicInteger count = _counts.get(method)-->Line_9 $$ count = new AtomicInteger()[ FD ]
Line_2 $$ private WorkflowHandler<T> _createInvocationCounterWorkflowHandler(final WorkflowHandler<T> workflowHandler) -->Line_5 $$ return (WorkflowHandler<T>) ProxyUtil.newProxyInstance(classLoader, new Class<?>[] [ CD ]
Line_5 $$ return (WorkflowHandler<T>) ProxyUtil.newProxyInstance(classLoader, new Class<?>[] -->Line_8 $$ if (count == null) [ CD ]
Line_8 $$ if (count == null) -->Line_10 $$ _counts.put(method, count)[ CD ]
Line_9 $$ count = new AtomicInteger()-->Line_12 $$ count.incrementAndGet()[ FD ]
Line_9 $$ count = new AtomicInteger()-->Line_10 $$ _counts.put(method, count)[ FD ]
Line_2 $$ private WorkflowHandler<T> _createInvocationCounterWorkflowHandler(final WorkflowHandler<T> workflowHandler) -->Line_3 $$ Thread currentThread = Thread.currentThread()[ CD ]
Line_5 $$ return (WorkflowHandler<T>) ProxyUtil.newProxyInstance(classLoader, new Class<?>[] -->Line_13 $$ return method.invoke(workflowHandler, args)[ CD ]
Line_7 $$ AtomicInteger count = _counts.get(method)-->Line_12 $$ count.incrementAndGet()[ FD ]
Line_2 $$ private WorkflowHandler<T> _createInvocationCounterWorkflowHandler(final WorkflowHandler<T> workflowHandler) -->Line_4 $$ ClassLoader classLoader = currentThread.getContextClassLoader()[ CD ]
Line_5 $$ return (WorkflowHandler<T>) ProxyUtil.newProxyInstance(classLoader, new Class<?>[] -->Line_7 $$ AtomicInteger count = _counts.get(method)[ CD ]
Line_2 $$ private WorkflowHandler<T> _createInvocationCounterWorkflowHandler(final WorkflowHandler<T> workflowHandler) -->Line_13 $$ return method.invoke(workflowHandler, args)[ FD ]
Line_7 $$ AtomicInteger count = _counts.get(method)-->Line_8 $$ if (count == null) [ FD ]
Line_3 $$ Thread currentThread = Thread.currentThread()-->Line_4 $$ ClassLoader classLoader = currentThread.getContextClassLoader()[ FD ]
Line_5 $$ return (WorkflowHandler<T>) ProxyUtil.newProxyInstance(classLoader, new Class<?>[] -->Line_13 $$ return method.invoke(workflowHandler, args)[ FD ]
Line_5 $$ return (WorkflowHandler<T>) ProxyUtil.newProxyInstance(classLoader, new Class<?>[] -->Line_10 $$ _counts.put(method, count)[ FD ]
Line_5 $$ return (WorkflowHandler<T>) ProxyUtil.newProxyInstance(classLoader, new Class<?>[] -->Line_12 $$ count.incrementAndGet()[ CD ]
Line_5 $$ return (WorkflowHandler<T>) ProxyUtil.newProxyInstance(classLoader, new Class<?>[] -->Line_7 $$ AtomicInteger count = _counts.get(method)[ FD ]
Line_4 $$ ClassLoader classLoader = currentThread.getContextClassLoader()-->Line_5 $$ return (WorkflowHandler<T>) ProxyUtil.newProxyInstance(classLoader, new Class<?>[] [ FD ]
Line_8 $$ if (count == null) -->Line_9 $$ count = new AtomicInteger()[ CD ]
Line_7 $$ AtomicInteger count = _counts.get(method)-->Line_10 $$ _counts.put(method, count)[ FD ]
