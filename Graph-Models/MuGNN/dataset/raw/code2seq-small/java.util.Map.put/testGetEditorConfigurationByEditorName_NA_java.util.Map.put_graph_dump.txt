Line_9 $$ properties = new HashMap()-->Line_13 $$ _editorConfigContributorServiceRegistration2 = registry.registerService(EditorConfigContributor.class, ImageEditorConfigContributor, properties)[ FD ]
Line_18 $$ configJSONObject = editorConfiguration.getConfigJSONObject()-->Line_19 $$ Assert.assertEquals(ImageEditorConfigContributor.class.getName(), configJSONObject.getString("className"))[ FD ]
Line_2 $$ public void testGetEditorConfigurationByEditorName() throws Exception -->Line_4 $$ Map<String, Object> properties = new HashMap()[ CD ]
Line_2 $$ public void testGetEditorConfigurationByEditorName() throws Exception -->Line_7 $$ EditorConfigContributor textFormatEditorConfigContributor = new TextFormatEditorConfigContributor()[ CD ]
Line_2 $$ public void testGetEditorConfigurationByEditorName() throws Exception -->Line_5 $$ properties.put("editor.name", _EDITOR_NAME)[ CD ]
Line_12 $$ EditorConfigContributor ImageEditorConfigContributor = new ImageEditorConfigContributor()-->Line_13 $$ _editorConfigContributorServiceRegistration2 = registry.registerService(EditorConfigContributor.class, ImageEditorConfigContributor, properties)[ FD ]
Line_3 $$ Registry registry = RegistryUtil.getRegistry()-->Line_8 $$ _editorConfigContributorServiceRegistration1 = registry.registerService(EditorConfigContributor.class, textFormatEditorConfigContributor, properties)[ FD ]
Line_2 $$ public void testGetEditorConfigurationByEditorName() throws Exception -->Line_10 $$ properties.put("editor.name", _EDITOR_NAME_2)[ CD ]
Line_2 $$ public void testGetEditorConfigurationByEditorName() throws Exception -->Line_16 $$ Assert.assertEquals(TextFormatEditorConfigContributor.class.getName(), configJSONObject.getString("className"))[ CD ]
Line_2 $$ public void testGetEditorConfigurationByEditorName() throws Exception -->Line_6 $$ properties.put("service.ranking", 1000)[ CD ]
Line_4 $$ Map<String, Object> properties = new HashMap()-->Line_5 $$ properties.put("editor.name", _EDITOR_NAME)[ FD ]
Line_2 $$ public void testGetEditorConfigurationByEditorName() throws Exception -->Line_13 $$ _editorConfigContributorServiceRegistration2 = registry.registerService(EditorConfigContributor.class, ImageEditorConfigContributor, properties)[ CD ]
Line_4 $$ Map<String, Object> properties = new HashMap()-->Line_13 $$ _editorConfigContributorServiceRegistration2 = registry.registerService(EditorConfigContributor.class, ImageEditorConfigContributor, properties)[ FD ]
Line_14 $$ EditorConfiguration editorConfiguration = EditorConfigurationFactoryUtil.getEditorConfiguration(_PORTLET_NAME, _CONFIG_KEY, _EDITOR_NAME, new HashMap<String, Object>(), null, null)-->Line_15 $$ JSONObject configJSONObject = editorConfiguration.getConfigJSONObject()[ FD ]
Line_2 $$ public void testGetEditorConfigurationByEditorName() throws Exception -->Line_18 $$ configJSONObject = editorConfiguration.getConfigJSONObject()[ CD ]
Line_2 $$ public void testGetEditorConfigurationByEditorName() throws Exception -->Line_11 $$ properties.put("service.ranking", 1000)[ CD ]
Line_2 $$ public void testGetEditorConfigurationByEditorName() throws Exception -->Line_17 $$ editorConfiguration = EditorConfigurationFactoryUtil.getEditorConfiguration(_PORTLET_NAME, _CONFIG_KEY, _EDITOR_NAME_2, new HashMap<String, Object>(), null, null)[ CD ]
Line_7 $$ EditorConfigContributor textFormatEditorConfigContributor = new TextFormatEditorConfigContributor()-->Line_8 $$ _editorConfigContributorServiceRegistration1 = registry.registerService(EditorConfigContributor.class, textFormatEditorConfigContributor, properties)[ FD ]
Line_2 $$ public void testGetEditorConfigurationByEditorName() throws Exception -->Line_15 $$ JSONObject configJSONObject = editorConfiguration.getConfigJSONObject()[ CD ]
Line_3 $$ Registry registry = RegistryUtil.getRegistry()-->Line_13 $$ _editorConfigContributorServiceRegistration2 = registry.registerService(EditorConfigContributor.class, ImageEditorConfigContributor, properties)[ FD ]
Line_14 $$ EditorConfiguration editorConfiguration = EditorConfigurationFactoryUtil.getEditorConfiguration(_PORTLET_NAME, _CONFIG_KEY, _EDITOR_NAME, new HashMap<String, Object>(), null, null)-->Line_18 $$ configJSONObject = editorConfiguration.getConfigJSONObject()[ FD ]
Line_2 $$ public void testGetEditorConfigurationByEditorName() throws Exception -->Line_9 $$ properties = new HashMap()[ CD ]
Line_17 $$ editorConfiguration = EditorConfigurationFactoryUtil.getEditorConfiguration(_PORTLET_NAME, _CONFIG_KEY, _EDITOR_NAME_2, new HashMap<String, Object>(), null, null)-->Line_18 $$ configJSONObject = editorConfiguration.getConfigJSONObject()[ FD ]
Line_15 $$ JSONObject configJSONObject = editorConfiguration.getConfigJSONObject()-->Line_19 $$ Assert.assertEquals(ImageEditorConfigContributor.class.getName(), configJSONObject.getString("className"))[ FD ]
Line_4 $$ Map<String, Object> properties = new HashMap()-->Line_6 $$ properties.put("service.ranking", 1000)[ FD ]
Line_14 $$ EditorConfiguration editorConfiguration = EditorConfigurationFactoryUtil.getEditorConfiguration(_PORTLET_NAME, _CONFIG_KEY, _EDITOR_NAME, new HashMap<String, Object>(), null, null)-->Line_17 $$ editorConfiguration = EditorConfigurationFactoryUtil.getEditorConfiguration(_PORTLET_NAME, _CONFIG_KEY, _EDITOR_NAME_2, new HashMap<String, Object>(), null, null)[ FD ]
Line_2 $$ public void testGetEditorConfigurationByEditorName() throws Exception -->Line_8 $$ _editorConfigContributorServiceRegistration1 = registry.registerService(EditorConfigContributor.class, textFormatEditorConfigContributor, properties)[ CD ]
Line_9 $$ properties = new HashMap()-->Line_10 $$ properties.put("editor.name", _EDITOR_NAME_2)[ FD ]
Line_4 $$ Map<String, Object> properties = new HashMap()-->Line_8 $$ _editorConfigContributorServiceRegistration1 = registry.registerService(EditorConfigContributor.class, textFormatEditorConfigContributor, properties)[ FD ]
Line_2 $$ public void testGetEditorConfigurationByEditorName() throws Exception -->Line_12 $$ EditorConfigContributor ImageEditorConfigContributor = new ImageEditorConfigContributor()[ CD ]
Line_4 $$ Map<String, Object> properties = new HashMap()-->Line_9 $$ properties = new HashMap()[ FD ]
Line_2 $$ public void testGetEditorConfigurationByEditorName() throws Exception -->Line_19 $$ Assert.assertEquals(ImageEditorConfigContributor.class.getName(), configJSONObject.getString("className"))[ CD ]
Line_15 $$ JSONObject configJSONObject = editorConfiguration.getConfigJSONObject()-->Line_16 $$ Assert.assertEquals(TextFormatEditorConfigContributor.class.getName(), configJSONObject.getString("className"))[ FD ]
Line_9 $$ properties = new HashMap()-->Line_11 $$ properties.put("service.ranking", 1000)[ FD ]
Line_2 $$ public void testGetEditorConfigurationByEditorName() throws Exception -->Line_3 $$ Registry registry = RegistryUtil.getRegistry()[ CD ]
Line_4 $$ Map<String, Object> properties = new HashMap()-->Line_11 $$ properties.put("service.ranking", 1000)[ FD ]
Line_2 $$ public void testGetEditorConfigurationByEditorName() throws Exception -->Line_14 $$ EditorConfiguration editorConfiguration = EditorConfigurationFactoryUtil.getEditorConfiguration(_PORTLET_NAME, _CONFIG_KEY, _EDITOR_NAME, new HashMap<String, Object>(), null, null)[ CD ]
Line_15 $$ JSONObject configJSONObject = editorConfiguration.getConfigJSONObject()-->Line_18 $$ configJSONObject = editorConfiguration.getConfigJSONObject()[ FD ]
Line_4 $$ Map<String, Object> properties = new HashMap()-->Line_10 $$ properties.put("editor.name", _EDITOR_NAME_2)[ FD ]
