Line_2 $$ public void refreshData(@Nullable String selectedValue) -->Line_4 $$ if (selectedValue != null && !jdkMap.containsKey(selectedValue)) [ FD ]
Line_2 $$ public void refreshData(@Nullable String selectedValue) -->Line_6 $$ jdkMap.put(selectedValue, new JdkComboBoxItem(selectedValue, selectedValue, "", false))[ FD ]
Line_2 $$ public void refreshData(@Nullable String selectedValue) -->Line_4 $$ if (selectedValue != null && !jdkMap.containsKey(selectedValue)) [ CD ]
Line_3 $$ Map<String, JdkComboBoxItem> jdkMap = collectComboBoxItem()-->Line_4 $$ if (selectedValue != null && !jdkMap.containsKey(selectedValue)) [ FD ]
Line_2 $$ public void refreshData(@Nullable String selectedValue) -->Line_8 $$ removeAllItems()[ CD ]
Line_9 $$ for (Map.Entry<String, JdkComboBoxItem> entry : jdkMap.entrySet()) -->Line_10 $$ ((DefaultComboBoxModel) getModel()).addElement(entry.getValue())[ FD ]
Line_2 $$ public void refreshData(@Nullable String selectedValue) -->Line_3 $$ Map<String, JdkComboBoxItem> jdkMap = collectComboBoxItem()[ CD ]
Line_2 $$ public void refreshData(@Nullable String selectedValue) -->Line_12 $$ select((DefaultComboBoxModel) getModel(), selectedValue)[ CD ]
Line_2 $$ public void refreshData(@Nullable String selectedValue) -->Line_12 $$ select((DefaultComboBoxModel) getModel(), selectedValue)[ FD ]
Line_4 $$ if (selectedValue != null && !jdkMap.containsKey(selectedValue)) -->Line_6 $$ jdkMap.put(selectedValue, new JdkComboBoxItem(selectedValue, selectedValue, "", false))[ CD ]
Line_3 $$ Map<String, JdkComboBoxItem> jdkMap = collectComboBoxItem()-->Line_9 $$ for (Map.Entry<String, JdkComboBoxItem> entry : jdkMap.entrySet()) [ FD ]
Line_2 $$ public void refreshData(@Nullable String selectedValue) -->Line_5 $$ assert selectedValue.length() > 0[ FD ]
Line_3 $$ Map<String, JdkComboBoxItem> jdkMap = collectComboBoxItem()-->Line_6 $$ jdkMap.put(selectedValue, new JdkComboBoxItem(selectedValue, selectedValue, "", false))[ FD ]
