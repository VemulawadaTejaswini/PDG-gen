Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_66 $$ if (required.size() > 0) [ CD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_9 $$ final String value = reader.getAttributeValue(i)[ FD ]
Line_3 $$ ModelNode node = Util.createAddOperation(parentAddress)-->Line_39 $$ JASPIMappingModuleDefinition.LOGIN_MODULE_STACK_REF.parseAndSetParameter(value, node, reader)[ FD ]
Line_57 $$ name = code + "-" + i-->Line_58 $$ key = keyName + "-" + name[ FD ]
Line_7 $$ for (int i = 0; i < count; i++) -->Line_9 $$ final String value = reader.getAttributeValue(i)[ FD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_51 $$ if (name == null) [ CD ]
Line_3 $$ ModelNode node = Util.createAddOperation(parentAddress)-->Line_70 $$ list.add(node)[ FD ]
Line_7 $$ for (int i = 0; i < count; i++) -->Line_9 $$ final String value = reader.getAttributeValue(i)[ CD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_24 $$ LoginModuleResourceDefinition.FLAG.parseAndSetParameter(value, node, reader)[ FD ]
Line_51 $$ if (name == null) -->Line_52 $$ name = code[ CD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_6 $$ final int count = reader.getAttributeCount()[ CD ]
Line_52 $$ name = code-->Line_58 $$ key = keyName + "-" + name[ FD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_54 $$ String key = keyName + "-" + name[ CD ]
Line_7 $$ for (int i = 0; i < count; i++) -->Line_60 $$ moduleNames.put(key, i)[ FD ]
Line_4 $$ String code = null-->Line_52 $$ name = code[ FD ]
Line_56 $$ for (int i = 2; ; i++) -->Line_59 $$ if (!moduleNames.containsKey(key)) [ CD ]
Line_5 $$ String name = null-->Line_44 $$ name = value[ FD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_66 $$ if (required.size() > 0) [ FD ]
Line_9 $$ final String value = reader.getAttributeValue(i)-->Line_44 $$ name = value[ FD ]
Line_3 $$ ModelNode node = Util.createAddOperation(parentAddress)-->Line_65 $$ node.get(OP_ADDR).set(parentAddress.append(keyName, name).toModelNode())[ FD ]
Line_56 $$ for (int i = 2; ; i++) -->Line_57 $$ name = code + "-" + i[ FD ]
Line_56 $$ for (int i = 2; ; i++) -->Line_57 $$ name = code + "-" + i[ CD ]
Line_56 $$ for (int i = 2; ; i++) -->Line_58 $$ key = keyName + "-" + name[ CD ]
Line_44 $$ name = value-->Line_58 $$ key = keyName + "-" + name[ FD ]
Line_52 $$ name = code-->Line_65 $$ node.get(OP_ADDR).set(parentAddress.append(keyName, name).toModelNode())[ FD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_10 $$ final Attribute attribute = Attribute.forName(reader.getAttributeLocalName(i))[ FD ]
Line_5 $$ String name = null-->Line_58 $$ key = keyName + "-" + name[ FD ]
Line_44 $$ name = value-->Line_51 $$ if (name == null) [ FD ]
Line_58 $$ key = keyName + "-" + name-->Line_60 $$ moduleNames.put(key, i)[ FD ]
Line_56 $$ for (int i = 2; ; i++) -->Line_60 $$ moduleNames.put(key, i)[ FD ]
Line_9 $$ final String value = reader.getAttributeValue(i)-->Line_29 $$ MappingModuleDefinition.TYPE.parseAndSetParameter(value, node, reader)[ FD ]
Line_7 $$ for (int i = 0; i < count; i++) -->Line_48 $$ throw unexpectedAttribute(reader, i)[ FD ]
Line_7 $$ for (int i = 0; i < count; i++) -->Line_56 $$ for (int i = 2; ; i++) [ FD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_55 $$ if (moduleNames.put(key, 1) != null) [ CD ]
Line_54 $$ String key = keyName + "-" + name-->Line_59 $$ if (!moduleNames.containsKey(key)) [ FD ]
Line_3 $$ ModelNode node = Util.createAddOperation(parentAddress)-->Line_69 $$ parseProperties(Element.MODULE_OPTION.getLocalName(), reader, node, LoginModuleResourceDefinition.MODULE_OPTIONS)[ FD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_8 $$ requireNoNamespaceAttribute(reader, i)[ FD ]
Line_5 $$ String name = null-->Line_51 $$ if (name == null) [ FD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_70 $$ list.add(node)[ FD ]
Line_7 $$ for (int i = 0; i < count; i++) -->Line_10 $$ final Attribute attribute = Attribute.forName(reader.getAttributeLocalName(i))[ FD ]
Line_7 $$ for (int i = 0; i < count; i++) -->Line_8 $$ requireNoNamespaceAttribute(reader, i)[ FD ]
Line_3 $$ ModelNode node = Util.createAddOperation(parentAddress)-->Line_29 $$ MappingModuleDefinition.TYPE.parseAndSetParameter(value, node, reader)[ FD ]
Line_9 $$ final String value = reader.getAttributeValue(i)-->Line_39 $$ JASPIMappingModuleDefinition.LOGIN_MODULE_STACK_REF.parseAndSetParameter(value, node, reader)[ FD ]
Line_5 $$ String name = null-->Line_57 $$ name = code + "-" + i[ FD ]
Line_3 $$ ModelNode node = Util.createAddOperation(parentAddress)-->Line_19 $$ LoginModuleResourceDefinition.CODE.parseAndSetParameter(value, node, reader)[ FD ]
Line_9 $$ final String value = reader.getAttributeValue(i)-->Line_18 $$ code = value[ FD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_5 $$ String name = null[ CD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_70 $$ list.add(node)[ CD ]
Line_55 $$ if (moduleNames.put(key, 1) != null) -->Line_56 $$ for (int i = 2; ; i++) [ CD ]
Line_18 $$ code = value-->Line_52 $$ name = code[ FD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_19 $$ LoginModuleResourceDefinition.CODE.parseAndSetParameter(value, node, reader)[ FD ]
Line_44 $$ name = value-->Line_65 $$ node.get(OP_ADDR).set(parentAddress.append(keyName, name).toModelNode())[ FD ]
Line_9 $$ final String value = reader.getAttributeValue(i)-->Line_34 $$ LoginModuleResourceDefinition.MODULE.parseAndSetParameter(value, node, reader)[ FD ]
Line_9 $$ final String value = reader.getAttributeValue(i)-->Line_19 $$ LoginModuleResourceDefinition.CODE.parseAndSetParameter(value, node, reader)[ FD ]
Line_3 $$ ModelNode node = Util.createAddOperation(parentAddress)-->Line_34 $$ LoginModuleResourceDefinition.MODULE.parseAndSetParameter(value, node, reader)[ FD ]
Line_7 $$ for (int i = 0; i < count; i++) -->Line_12 $$ throw unexpectedAttribute(reader, i)[ FD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_29 $$ MappingModuleDefinition.TYPE.parseAndSetParameter(value, node, reader)[ FD ]
Line_6 $$ final int count = reader.getAttributeCount()-->Line_7 $$ for (int i = 0; i < count; i++) [ FD ]
Line_57 $$ name = code + "-" + i-->Line_65 $$ node.get(OP_ADDR).set(parentAddress.append(keyName, name).toModelNode())[ FD ]
Line_59 $$ if (!moduleNames.containsKey(key)) -->Line_60 $$ moduleNames.put(key, i)[ CD ]
Line_7 $$ for (int i = 0; i < count; i++) -->Line_10 $$ final Attribute attribute = Attribute.forName(reader.getAttributeLocalName(i))[ CD ]
Line_44 $$ name = value-->Line_52 $$ name = code[ FD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_69 $$ parseProperties(Element.MODULE_OPTION.getLocalName(), reader, node, LoginModuleResourceDefinition.MODULE_OPTIONS)[ FD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_12 $$ throw unexpectedAttribute(reader, i)[ FD ]
Line_5 $$ String name = null-->Line_52 $$ name = code[ FD ]
Line_7 $$ for (int i = 0; i < count; i++) -->Line_11 $$ if (notAllowed.contains(attribute)) [ CD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_14 $$ required.remove(attribute)[ FD ]
Line_58 $$ key = keyName + "-" + name-->Line_59 $$ if (!moduleNames.containsKey(key)) [ FD ]
Line_3 $$ ModelNode node = Util.createAddOperation(parentAddress)-->Line_24 $$ LoginModuleResourceDefinition.FLAG.parseAndSetParameter(value, node, reader)[ FD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_65 $$ node.get(OP_ADDR).set(parentAddress.append(keyName, name).toModelNode())[ CD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_7 $$ for (int i = 0; i < count; i++) [ CD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_11 $$ if (notAllowed.contains(attribute)) [ FD ]
Line_7 $$ for (int i = 0; i < count; i++) -->Line_14 $$ required.remove(attribute)[ CD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_3 $$ ModelNode node = Util.createAddOperation(parentAddress)[ FD ]
Line_54 $$ String key = keyName + "-" + name-->Line_58 $$ key = keyName + "-" + name[ FD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_69 $$ parseProperties(Element.MODULE_OPTION.getLocalName(), reader, node, LoginModuleResourceDefinition.MODULE_OPTIONS)[ CD ]
Line_44 $$ name = value-->Line_57 $$ name = code + "-" + i[ FD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_6 $$ final int count = reader.getAttributeCount()[ FD ]
Line_54 $$ String key = keyName + "-" + name-->Line_60 $$ moduleNames.put(key, i)[ FD ]
Line_4 $$ String code = null-->Line_18 $$ code = value[ FD ]
Line_52 $$ name = code-->Line_57 $$ name = code + "-" + i[ FD ]
Line_7 $$ for (int i = 0; i < count; i++) -->Line_8 $$ requireNoNamespaceAttribute(reader, i)[ CD ]
Line_7 $$ for (int i = 0; i < count; i++) -->Line_57 $$ name = code + "-" + i[ FD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_4 $$ String code = null[ CD ]
Line_5 $$ String name = null-->Line_65 $$ node.get(OP_ADDR).set(parentAddress.append(keyName, name).toModelNode())[ FD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_3 $$ ModelNode node = Util.createAddOperation(parentAddress)[ CD ]
Line_10 $$ final Attribute attribute = Attribute.forName(reader.getAttributeLocalName(i))-->Line_11 $$ if (notAllowed.contains(attribute)) [ FD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_39 $$ JASPIMappingModuleDefinition.LOGIN_MODULE_STACK_REF.parseAndSetParameter(value, node, reader)[ FD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_34 $$ LoginModuleResourceDefinition.MODULE.parseAndSetParameter(value, node, reader)[ FD ]
Line_54 $$ String key = keyName + "-" + name-->Line_55 $$ if (moduleNames.put(key, 1) != null) [ FD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_65 $$ node.get(OP_ADDR).set(parentAddress.append(keyName, name).toModelNode())[ FD ]
Line_10 $$ final Attribute attribute = Attribute.forName(reader.getAttributeLocalName(i))-->Line_14 $$ required.remove(attribute)[ FD ]
Line_9 $$ final String value = reader.getAttributeValue(i)-->Line_24 $$ LoginModuleResourceDefinition.FLAG.parseAndSetParameter(value, node, reader)[ FD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_67 $$ throw missingRequired(reader, required)[ FD ]
Line_2 $$ private void parseCommonModule(XMLExtendedStreamReader reader, final PathAddress parentAddress, final String keyName, EnumSet<Attribute> required, EnumSet<Attribute> notAllowed, List<ModelNode> list) throws XMLStreamException -->Line_48 $$ throw unexpectedAttribute(reader, i)[ FD ]
