Line_3 $$ TestClientHandler handler = new TestClientHandler()-->Line_7 $$ this.sockJsClient.doHandshake(handler, this.baseUrl + "/echo").addCallback(new ListenableFutureCallback<WebSocketSession>() [ FD ]
Line_5 $$ CountDownLatch latch = new CountDownLatch(1)-->Line_14 $$ assertTrue(latch.await(5000, TimeUnit.MILLISECONDS))[ FD ]
Line_5 $$ CountDownLatch latch = new CountDownLatch(1)-->Line_11 $$ latch.countDown()[ FD ]
Line_2 $$ public void infoRequestFailure() throws Exception -->Line_3 $$ TestClientHandler handler = new TestClientHandler()[ CD ]
Line_2 $$ public void infoRequestFailure() throws Exception -->Line_7 $$ this.sockJsClient.doHandshake(handler, this.baseUrl + "/echo").addCallback(new ListenableFutureCallback<WebSocketSession>() [ CD ]
Line_7 $$ this.sockJsClient.doHandshake(handler, this.baseUrl + "/echo").addCallback(new ListenableFutureCallback<WebSocketSession>() -->Line_11 $$ latch.countDown()[ CD ]
Line_2 $$ public void infoRequestFailure() throws Exception -->Line_14 $$ assertTrue(latch.await(5000, TimeUnit.MILLISECONDS))[ CD ]
Line_2 $$ public void infoRequestFailure() throws Exception -->Line_4 $$ this.testFilter.sendErrorMap.put("/info", 500)[ CD ]
Line_2 $$ public void infoRequestFailure() throws Exception -->Line_6 $$ initSockJsClient(createWebSocketTransport())[ CD ]
Line_2 $$ public void infoRequestFailure() throws Exception -->Line_5 $$ CountDownLatch latch = new CountDownLatch(1)[ CD ]
