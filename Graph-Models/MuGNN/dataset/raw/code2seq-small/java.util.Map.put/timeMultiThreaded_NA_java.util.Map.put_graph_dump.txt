Line_2 $$ private <V> StopWatch timeMultiThreaded(String id, final Map<Integer, V> map, ValueFactory<V> factory) throws InterruptedException -->Line_14 $$ map.get(i)[ FD ]
Line_13 $$ for (int i = 0; i < 1000; i++) -->Line_14 $$ map.get(i)[ FD ]
Line_4 $$ for (int i = 0; i < 500; i++) -->Line_14 $$ map.get(i)[ FD ]
Line_3 $$ StopWatch stopWatch = new StopWatch(id)-->Line_8 $$ stopWatch.start("Running threads")[ FD ]
Line_2 $$ private <V> StopWatch timeMultiThreaded(String id, final Map<Integer, V> map, ValueFactory<V> factory) throws InterruptedException -->Line_4 $$ for (int i = 0; i < 500; i++) [ CD ]
Line_3 $$ StopWatch stopWatch = new StopWatch(id)-->Line_28 $$ stopWatch.stop()[ FD ]
Line_2 $$ private <V> StopWatch timeMultiThreaded(String id, final Map<Integer, V> map, ValueFactory<V> factory) throws InterruptedException -->Line_7 $$ Thread[] threads = new Thread[30][ CD ]
Line_2 $$ private <V> StopWatch timeMultiThreaded(String id, final Map<Integer, V> map, ValueFactory<V> factory) throws InterruptedException -->Line_8 $$ stopWatch.start("Running threads")[ CD ]
Line_2 $$ private <V> StopWatch timeMultiThreaded(String id, final Map<Integer, V> map, ValueFactory<V> factory) throws InterruptedException -->Line_28 $$ stopWatch.stop()[ CD ]
Line_9 $$ for (int threadIndex = 0; threadIndex < threads.length; threadIndex++) -->Line_10 $$ threads[threadIndex] = new Thread("Cache access thread " + threadIndex) [ CD ]
Line_2 $$ private <V> StopWatch timeMultiThreaded(String id, final Map<Integer, V> map, ValueFactory<V> factory) throws InterruptedException -->Line_5 $$ map.put(i, factory.newValue(i))[ FD ]
Line_2 $$ private <V> StopWatch timeMultiThreaded(String id, final Map<Integer, V> map, ValueFactory<V> factory) throws InterruptedException -->Line_29 $$ return stopWatch[ CD ]
Line_2 $$ private <V> StopWatch timeMultiThreaded(String id, final Map<Integer, V> map, ValueFactory<V> factory) throws InterruptedException -->Line_9 $$ for (int threadIndex = 0; threadIndex < threads.length; threadIndex++) [ CD ]
Line_24 $$ if (thread.isAlive()) -->Line_25 $$ thread.join(2000)[ CD ]
Line_12 $$ for (int j = 0; j < 1000; j++) -->Line_13 $$ for (int i = 0; i < 1000; i++) [ CD ]
Line_4 $$ for (int i = 0; i < 500; i++) -->Line_5 $$ map.put(i, factory.newValue(i))[ FD ]
Line_13 $$ for (int i = 0; i < 1000; i++) -->Line_14 $$ map.get(i)[ CD ]
Line_2 $$ private <V> StopWatch timeMultiThreaded(String id, final Map<Integer, V> map, ValueFactory<V> factory) throws InterruptedException -->Line_3 $$ StopWatch stopWatch = new StopWatch(id)[ CD ]
Line_4 $$ for (int i = 0; i < 500; i++) -->Line_13 $$ for (int i = 0; i < 1000; i++) [ FD ]
Line_10 $$ threads[threadIndex] = new Thread("Cache access thread " + threadIndex) -->Line_12 $$ for (int j = 0; j < 1000; j++) [ CD ]
Line_4 $$ for (int i = 0; i < 500; i++) -->Line_5 $$ map.put(i, factory.newValue(i))[ CD ]
