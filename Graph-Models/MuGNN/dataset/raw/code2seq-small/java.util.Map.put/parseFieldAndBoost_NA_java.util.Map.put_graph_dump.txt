Line_2 $$ private void parseFieldAndBoost(XContentParser parser, Map<String, Float> fieldsBoosts) throws IOException -->Line_7 $$ for (int i = parser.textOffset(); i < end; i++) [ FD ]
Line_8 $$ if (fieldText[i] == '^') -->Line_10 $$ fField = new String(fieldText, parser.textOffset(), relativeLocation)[ CD ]
Line_2 $$ private void parseFieldAndBoost(XContentParser parser, Map<String, Float> fieldsBoosts) throws IOException -->Line_18 $$ fieldsBoosts.put(fField, fBoost)[ CD ]
Line_3 $$ String fField = null-->Line_18 $$ fieldsBoosts.put(fField, fBoost)[ FD ]
Line_2 $$ private void parseFieldAndBoost(XContentParser parser, Map<String, Float> fieldsBoosts) throws IOException -->Line_16 $$ fField = parser.text()[ FD ]
Line_2 $$ private void parseFieldAndBoost(XContentParser parser, Map<String, Float> fieldsBoosts) throws IOException -->Line_5 $$ char[] fieldText = parser.textCharacters()[ FD ]
Line_10 $$ fField = new String(fieldText, parser.textOffset(), relativeLocation)-->Line_18 $$ fieldsBoosts.put(fField, fBoost)[ FD ]
Line_2 $$ private void parseFieldAndBoost(XContentParser parser, Map<String, Float> fieldsBoosts) throws IOException -->Line_4 $$ Float fBoost = AbstractQueryBuilder.DEFAULT_BOOST[ CD ]
Line_11 $$ fBoost = Float.parseFloat(new String(fieldText, i + 1, parser.textLength() - relativeLocation - 1))-->Line_18 $$ fieldsBoosts.put(fField, fBoost)[ FD ]
Line_6 $$ int end = parser.textOffset() + parser.textLength()-->Line_7 $$ for (int i = parser.textOffset(); i < end; i++) [ FD ]
Line_4 $$ Float fBoost = AbstractQueryBuilder.DEFAULT_BOOST-->Line_11 $$ fBoost = Float.parseFloat(new String(fieldText, i + 1, parser.textLength() - relativeLocation - 1))[ FD ]
Line_3 $$ String fField = null-->Line_16 $$ fField = parser.text()[ FD ]
Line_15 $$ if (fField == null) -->Line_16 $$ fField = parser.text()[ CD ]
Line_8 $$ if (fieldText[i] == '^') -->Line_9 $$ int relativeLocation = i - parser.textOffset()[ CD ]
Line_3 $$ String fField = null-->Line_10 $$ fField = new String(fieldText, parser.textOffset(), relativeLocation)[ FD ]
Line_2 $$ private void parseFieldAndBoost(XContentParser parser, Map<String, Float> fieldsBoosts) throws IOException -->Line_18 $$ fieldsBoosts.put(fField, fBoost)[ FD ]
Line_2 $$ private void parseFieldAndBoost(XContentParser parser, Map<String, Float> fieldsBoosts) throws IOException -->Line_5 $$ char[] fieldText = parser.textCharacters()[ CD ]
Line_3 $$ String fField = null-->Line_15 $$ if (fField == null) [ FD ]
Line_2 $$ private void parseFieldAndBoost(XContentParser parser, Map<String, Float> fieldsBoosts) throws IOException -->Line_11 $$ fBoost = Float.parseFloat(new String(fieldText, i + 1, parser.textLength() - relativeLocation - 1))[ FD ]
Line_4 $$ Float fBoost = AbstractQueryBuilder.DEFAULT_BOOST-->Line_18 $$ fieldsBoosts.put(fField, fBoost)[ FD ]
Line_10 $$ fField = new String(fieldText, parser.textOffset(), relativeLocation)-->Line_16 $$ fField = parser.text()[ FD ]
Line_2 $$ private void parseFieldAndBoost(XContentParser parser, Map<String, Float> fieldsBoosts) throws IOException -->Line_10 $$ fField = new String(fieldText, parser.textOffset(), relativeLocation)[ FD ]
Line_2 $$ private void parseFieldAndBoost(XContentParser parser, Map<String, Float> fieldsBoosts) throws IOException -->Line_15 $$ if (fField == null) [ CD ]
Line_7 $$ for (int i = parser.textOffset(); i < end; i++) -->Line_8 $$ if (fieldText[i] == '^') [ CD ]
Line_10 $$ fField = new String(fieldText, parser.textOffset(), relativeLocation)-->Line_15 $$ if (fField == null) [ FD ]
Line_2 $$ private void parseFieldAndBoost(XContentParser parser, Map<String, Float> fieldsBoosts) throws IOException -->Line_6 $$ int end = parser.textOffset() + parser.textLength()[ FD ]
Line_2 $$ private void parseFieldAndBoost(XContentParser parser, Map<String, Float> fieldsBoosts) throws IOException -->Line_3 $$ String fField = null[ CD ]
Line_8 $$ if (fieldText[i] == '^') -->Line_11 $$ fBoost = Float.parseFloat(new String(fieldText, i + 1, parser.textLength() - relativeLocation - 1))[ CD ]
Line_2 $$ private void parseFieldAndBoost(XContentParser parser, Map<String, Float> fieldsBoosts) throws IOException -->Line_7 $$ for (int i = parser.textOffset(); i < end; i++) [ CD ]
Line_16 $$ fField = parser.text()-->Line_18 $$ fieldsBoosts.put(fField, fBoost)[ FD ]
Line_2 $$ private void parseFieldAndBoost(XContentParser parser, Map<String, Float> fieldsBoosts) throws IOException -->Line_9 $$ int relativeLocation = i - parser.textOffset()[ FD ]
Line_2 $$ private void parseFieldAndBoost(XContentParser parser, Map<String, Float> fieldsBoosts) throws IOException -->Line_6 $$ int end = parser.textOffset() + parser.textLength()[ CD ]
