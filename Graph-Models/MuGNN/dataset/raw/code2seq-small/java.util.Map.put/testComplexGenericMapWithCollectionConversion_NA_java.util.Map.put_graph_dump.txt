Line_3 $$ Map<Set<String>, Set<String>> inputMap = new HashMap<Set<String>, Set<String>>()-->Line_11 $$ bw.setPropertyValue("genericMap", inputMap)[ FD ]
Line_9 $$ ComplexMapHolder holder = new ComplexMapHolder()-->Line_12 $$ assertEquals(new Integer(1), holder.getGenericMap().keySet().iterator().next().get(0))[ FD ]
Line_4 $$ Set<String> inputKey = new HashSet<String>()-->Line_5 $$ inputKey.add("1")[ FD ]
Line_10 $$ BeanWrapper bw = new BeanWrapperImpl(holder)-->Line_11 $$ bw.setPropertyValue("genericMap", inputMap)[ FD ]
Line_4 $$ Set<String> inputKey = new HashSet<String>()-->Line_8 $$ inputMap.put(inputKey, inputValue)[ FD ]
Line_6 $$ Set<String> inputValue = new HashSet<String>()-->Line_7 $$ inputValue.add("10")[ FD ]
Line_2 $$ public void testComplexGenericMapWithCollectionConversion() -->Line_4 $$ Set<String> inputKey = new HashSet<String>()[ CD ]
Line_2 $$ public void testComplexGenericMapWithCollectionConversion() -->Line_7 $$ inputValue.add("10")[ CD ]
Line_9 $$ ComplexMapHolder holder = new ComplexMapHolder()-->Line_13 $$ assertEquals(new Long(10), holder.getGenericMap().values().iterator().next().get(0))[ FD ]
Line_2 $$ public void testComplexGenericMapWithCollectionConversion() -->Line_3 $$ Map<Set<String>, Set<String>> inputMap = new HashMap<Set<String>, Set<String>>()[ CD ]
Line_2 $$ public void testComplexGenericMapWithCollectionConversion() -->Line_9 $$ ComplexMapHolder holder = new ComplexMapHolder()[ CD ]
Line_2 $$ public void testComplexGenericMapWithCollectionConversion() -->Line_11 $$ bw.setPropertyValue("genericMap", inputMap)[ CD ]
Line_2 $$ public void testComplexGenericMapWithCollectionConversion() -->Line_10 $$ BeanWrapper bw = new BeanWrapperImpl(holder)[ CD ]
Line_3 $$ Map<Set<String>, Set<String>> inputMap = new HashMap<Set<String>, Set<String>>()-->Line_8 $$ inputMap.put(inputKey, inputValue)[ FD ]
Line_2 $$ public void testComplexGenericMapWithCollectionConversion() -->Line_8 $$ inputMap.put(inputKey, inputValue)[ CD ]
Line_2 $$ public void testComplexGenericMapWithCollectionConversion() -->Line_6 $$ Set<String> inputValue = new HashSet<String>()[ CD ]
Line_2 $$ public void testComplexGenericMapWithCollectionConversion() -->Line_13 $$ assertEquals(new Long(10), holder.getGenericMap().values().iterator().next().get(0))[ CD ]
Line_2 $$ public void testComplexGenericMapWithCollectionConversion() -->Line_12 $$ assertEquals(new Integer(1), holder.getGenericMap().keySet().iterator().next().get(0))[ CD ]
Line_6 $$ Set<String> inputValue = new HashSet<String>()-->Line_8 $$ inputMap.put(inputKey, inputValue)[ FD ]
Line_2 $$ public void testComplexGenericMapWithCollectionConversion() -->Line_5 $$ inputKey.add("1")[ CD ]
