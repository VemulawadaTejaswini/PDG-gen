Line_4 $$ for (Parameter p : Parameter.values()) -->Line_7 $$ sums.put(p, s)[ FD ]
Line_2 $$ public static <T extends Container<Summation>> Map<Parameter, Sum> getSums(long b, int partsPerSum, Map<Parameter, List<T>> existing) -->Line_9 $$ return sums[ CD ]
Line_4 $$ for (Parameter p : Parameter.values()) -->Line_5 $$ final Sum s = new Sum(b, p, partsPerSum, existing.get(p))[ FD ]
Line_5 $$ final Sum s = new Sum(b, p, partsPerSum, existing.get(p))-->Line_7 $$ sums.put(p, s)[ FD ]
Line_2 $$ public static <T extends Container<Summation>> Map<Parameter, Sum> getSums(long b, int partsPerSum, Map<Parameter, List<T>> existing) -->Line_5 $$ final Sum s = new Sum(b, p, partsPerSum, existing.get(p))[ FD ]
Line_2 $$ public static <T extends Container<Summation>> Map<Parameter, Sum> getSums(long b, int partsPerSum, Map<Parameter, List<T>> existing) -->Line_3 $$ final Map<Parameter, Sum> sums = new TreeMap<Parameter, Sum>()[ CD ]
Line_3 $$ final Map<Parameter, Sum> sums = new TreeMap<Parameter, Sum>()-->Line_7 $$ sums.put(p, s)[ FD ]
