Line_20 $$ PatchFileEntryEvent patchFileEntryEvent = new PatchFileEntryEvent(syncAccountId, parameters)-->Line_21 $$ patchFileEntryEvent.run()[ FD ]
Line_3 $$ Map<String, Object> parameters = new HashMap()-->Line_24 $$ parameters.put("filePath", filePath)[ FD ]
Line_16 $$ if ((deltaFilePath != null) && (sourceVersionId != 0) && ((Files.size(filePath) / Files.size(deltaFilePath)) >= PropsValues.SYNC_FILE_PATCHING_THRESHOLD_SIZE_RATIO)) -->Line_18 $$ parameters.put("sourceFileName", sourceFileName)[ CD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_4 $$ parameters.put("changeLog", syncFile.getChangeLog())[ FD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_6 $$ parameters.put("description", syncFile.getDescription())[ CD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_8 $$ parameters.put("majorVersion", false)[ CD ]
Line_3 $$ Map<String, Object> parameters = new HashMap()-->Line_8 $$ parameters.put("majorVersion", false)[ FD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_12 $$ parameters.put("title", name)[ FD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_19 $$ parameters.put("sourceVersionId", sourceVersionId)[ FD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_24 $$ parameters.put("filePath", filePath)[ FD ]
Line_13 $$ if (FileUtil.checksumsEqual(sourceChecksum, targetChecksum)) -->Line_14 $$ parameters.put("-file", null)[ CD ]
Line_3 $$ Map<String, Object> parameters = new HashMap()-->Line_5 $$ parameters.put("checksum", targetChecksum)[ FD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_10 $$ parameters.put("sourceFileName", name)[ CD ]
Line_16 $$ if ((deltaFilePath != null) && (sourceVersionId != 0) && ((Files.size(filePath) / Files.size(deltaFilePath)) >= PropsValues.SYNC_FILE_PATCHING_THRESHOLD_SIZE_RATIO)) -->Line_17 $$ parameters.put("deltaFilePath", deltaFilePath)[ CD ]
Line_3 $$ Map<String, Object> parameters = new HashMap()-->Line_17 $$ parameters.put("deltaFilePath", deltaFilePath)[ FD ]
Line_3 $$ Map<String, Object> parameters = new HashMap()-->Line_7 $$ parameters.put("fileEntryId", syncFile.getTypePK())[ FD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_13 $$ if (FileUtil.checksumsEqual(sourceChecksum, targetChecksum)) [ CD ]
Line_16 $$ if ((deltaFilePath != null) && (sourceVersionId != 0) && ((Files.size(filePath) / Files.size(deltaFilePath)) >= PropsValues.SYNC_FILE_PATCHING_THRESHOLD_SIZE_RATIO)) -->Line_22 $$ return[ CD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_9 $$ parameters.put("mimeType", syncFile.getMimeType())[ FD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_27 $$ updateFileEntryEvent.run()[ CD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_5 $$ parameters.put("checksum", targetChecksum)[ CD ]
Line_16 $$ if ((deltaFilePath != null) && (sourceVersionId != 0) && ((Files.size(filePath) / Files.size(deltaFilePath)) >= PropsValues.SYNC_FILE_PATCHING_THRESHOLD_SIZE_RATIO)) -->Line_19 $$ parameters.put("sourceVersionId", sourceVersionId)[ CD ]
Line_3 $$ Map<String, Object> parameters = new HashMap()-->Line_19 $$ parameters.put("sourceVersionId", sourceVersionId)[ FD ]
Line_26 $$ UpdateFileEntryEvent updateFileEntryEvent = new UpdateFileEntryEvent(syncAccountId, parameters)-->Line_27 $$ updateFileEntryEvent.run()[ FD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_10 $$ parameters.put("sourceFileName", name)[ FD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_12 $$ parameters.put("title", name)[ CD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_3 $$ Map<String, Object> parameters = new HashMap()[ CD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_11 $$ parameters.put("syncFile", syncFile)[ CD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_7 $$ parameters.put("fileEntryId", syncFile.getTypePK())[ FD ]
Line_3 $$ Map<String, Object> parameters = new HashMap()-->Line_9 $$ parameters.put("mimeType", syncFile.getMimeType())[ FD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_9 $$ parameters.put("mimeType", syncFile.getMimeType())[ CD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_5 $$ parameters.put("checksum", targetChecksum)[ FD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_6 $$ parameters.put("description", syncFile.getDescription())[ FD ]
Line_3 $$ Map<String, Object> parameters = new HashMap()-->Line_12 $$ parameters.put("title", name)[ FD ]
Line_3 $$ Map<String, Object> parameters = new HashMap()-->Line_6 $$ parameters.put("description", syncFile.getDescription())[ FD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_26 $$ UpdateFileEntryEvent updateFileEntryEvent = new UpdateFileEntryEvent(syncAccountId, parameters)[ CD ]
Line_3 $$ Map<String, Object> parameters = new HashMap()-->Line_11 $$ parameters.put("syncFile", syncFile)[ FD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_11 $$ parameters.put("syncFile", syncFile)[ FD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_13 $$ if (FileUtil.checksumsEqual(sourceChecksum, targetChecksum)) [ FD ]
Line_13 $$ if (FileUtil.checksumsEqual(sourceChecksum, targetChecksum)) -->Line_16 $$ if ((deltaFilePath != null) && (sourceVersionId != 0) && ((Files.size(filePath) / Files.size(deltaFilePath)) >= PropsValues.SYNC_FILE_PATCHING_THRESHOLD_SIZE_RATIO)) [ CD ]
Line_3 $$ Map<String, Object> parameters = new HashMap()-->Line_18 $$ parameters.put("sourceFileName", sourceFileName)[ FD ]
Line_16 $$ if ((deltaFilePath != null) && (sourceVersionId != 0) && ((Files.size(filePath) / Files.size(deltaFilePath)) >= PropsValues.SYNC_FILE_PATCHING_THRESHOLD_SIZE_RATIO)) -->Line_20 $$ PatchFileEntryEvent patchFileEntryEvent = new PatchFileEntryEvent(syncAccountId, parameters)[ CD ]
Line_3 $$ Map<String, Object> parameters = new HashMap()-->Line_14 $$ parameters.put("-file", null)[ FD ]
Line_3 $$ Map<String, Object> parameters = new HashMap()-->Line_10 $$ parameters.put("sourceFileName", name)[ FD ]
Line_3 $$ Map<String, Object> parameters = new HashMap()-->Line_4 $$ parameters.put("changeLog", syncFile.getChangeLog())[ FD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_18 $$ parameters.put("sourceFileName", sourceFileName)[ FD ]
Line_13 $$ if (FileUtil.checksumsEqual(sourceChecksum, targetChecksum)) -->Line_24 $$ parameters.put("filePath", filePath)[ CD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_16 $$ if ((deltaFilePath != null) && (sourceVersionId != 0) && ((Files.size(filePath) / Files.size(deltaFilePath)) >= PropsValues.SYNC_FILE_PATCHING_THRESHOLD_SIZE_RATIO)) [ FD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_7 $$ parameters.put("fileEntryId", syncFile.getTypePK())[ CD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_17 $$ parameters.put("deltaFilePath", deltaFilePath)[ FD ]
Line_16 $$ if ((deltaFilePath != null) && (sourceVersionId != 0) && ((Files.size(filePath) / Files.size(deltaFilePath)) >= PropsValues.SYNC_FILE_PATCHING_THRESHOLD_SIZE_RATIO)) -->Line_21 $$ patchFileEntryEvent.run()[ CD ]
Line_2 $$ public static void updateFile(Path filePath, long syncAccountId, SyncFile syncFile, Path deltaFilePath, String name, String sourceChecksum, String sourceFileName, long sourceVersionId, String targetChecksum) throws IOException -->Line_4 $$ parameters.put("changeLog", syncFile.getChangeLog())[ CD ]
