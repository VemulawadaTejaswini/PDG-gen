Line_7 $$ if (!approximable && !canCreateCopy(requiredType)) -->Line_8 $$ if (logger.isDebugEnabled()) [ CD ]
Line_48 $$ Map.Entry<?, ?> entry = (Map.Entry<?, ?>) it.next()-->Line_49 $$ Object key = entry.getKey()[ FD ]
Line_37 $$ convertedCopy = CollectionFactory.createApproximateMap(original, original.size())-->Line_39 $$ convertedCopy = (Map<Object, Object>) requiredType.newInstance()[ FD ]
Line_47 $$ while (it.hasNext()) -->Line_50 $$ Object value = entry.getValue()[ CD ]
Line_39 $$ convertedCopy = (Map<Object, Object>) requiredType.newInstance()-->Line_55 $$ convertedCopy.put(convertedKey, convertedValue)[ FD ]
Line_50 $$ Object value = entry.getValue()-->Line_53 $$ Object convertedValue = convertIfNecessary(keyedPropertyName, null, value, (valueType != null ? valueType.getType() : null), valueType)[ FD ]
Line_6 $$ boolean approximable = CollectionFactory.isApproximableMapType(requiredType)-->Line_7 $$ if (!approximable && !canCreateCopy(requiredType)) [ FD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_3 $$ if (!Map.class.isAssignableFrom(requiredType)) [ CD ]
Line_7 $$ if (!approximable && !canCreateCopy(requiredType)) -->Line_11 $$ return original[ CD ]
Line_37 $$ convertedCopy = CollectionFactory.createApproximateMap(original, original.size())-->Line_55 $$ convertedCopy.put(convertedKey, convertedValue)[ FD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_6 $$ boolean approximable = CollectionFactory.isApproximableMapType(requiredType)[ CD ]
Line_19 $$ Iterator<?> it-->Line_22 $$ if (it == null) [ FD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_14 $$ TypeDescriptor keyType = typeDescriptor.getMapKeyTypeDescriptor()[ CD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_47 $$ while (it.hasNext()) [ CD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_3 $$ if (!Map.class.isAssignableFrom(requiredType)) [ FD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_19 $$ Iterator<?> it[ CD ]
Line_19 $$ Iterator<?> it-->Line_47 $$ while (it.hasNext()) [ FD ]
Line_47 $$ while (it.hasNext()) -->Line_49 $$ Object key = entry.getKey()[ CD ]
Line_3 $$ if (!Map.class.isAssignableFrom(requiredType)) -->Line_4 $$ return original[ CD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_7 $$ if (!approximable && !canCreateCopy(requiredType)) [ CD ]
Line_57 $$ if (logger.isDebugEnabled()) -->Line_58 $$ logger.debug("Map type [" + original.getClass().getName() + "] seems to be read-only - injecting original Map as-is: " + ex)[ CD ]
Line_14 $$ TypeDescriptor keyType = typeDescriptor.getMapKeyTypeDescriptor()-->Line_52 $$ Object convertedKey = convertIfNecessary(keyedPropertyName, null, key, (keyType != null ? keyType.getType() : null), keyType)[ FD ]
Line_47 $$ while (it.hasNext()) -->Line_53 $$ Object convertedValue = convertIfNecessary(keyedPropertyName, null, value, (valueType != null ? valueType.getType() : null), valueType)[ CD ]
Line_22 $$ if (it == null) -->Line_26 $$ return original[ CD ]
Line_19 $$ Iterator<?> it-->Line_48 $$ Map.Entry<?, ?> entry = (Map.Entry<?, ?>) it.next()[ FD ]
Line_51 $$ String keyedPropertyName = buildKeyedPropertyName(propertyName, key)-->Line_52 $$ Object convertedKey = convertIfNecessary(keyedPropertyName, null, key, (keyType != null ? keyType.getType() : null), keyType)[ FD ]
Line_51 $$ String keyedPropertyName = buildKeyedPropertyName(propertyName, key)-->Line_53 $$ Object convertedValue = convertIfNecessary(keyedPropertyName, null, value, (valueType != null ? valueType.getType() : null), valueType)[ FD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_37 $$ convertedCopy = CollectionFactory.createApproximateMap(original, original.size())[ FD ]
Line_53 $$ Object convertedValue = convertIfNecessary(keyedPropertyName, null, value, (valueType != null ? valueType.getType() : null), valueType)-->Line_55 $$ convertedCopy.put(convertedKey, convertedValue)[ FD ]
Line_22 $$ if (it == null) -->Line_23 $$ if (logger.isDebugEnabled()) [ CD ]
Line_29 $$ if (logger.isDebugEnabled()) -->Line_30 $$ logger.debug("Cannot access Map of type [" + original.getClass().getName() + "] - injecting original Map as-is: " + ex)[ CD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_30 $$ logger.debug("Cannot access Map of type [" + original.getClass().getName() + "] - injecting original Map as-is: " + ex)[ FD ]
Line_36 $$ if (approximable) -->Line_37 $$ convertedCopy = CollectionFactory.createApproximateMap(original, original.size())[ CD ]
Line_42 $$ if (logger.isDebugEnabled()) -->Line_43 $$ logger.debug("Cannot create copy of Map type [" + original.getClass().getName() + "] - injecting original Map as-is: " + ex)[ CD ]
Line_52 $$ Object convertedKey = convertIfNecessary(keyedPropertyName, null, key, (keyType != null ? keyType.getType() : null), keyType)-->Line_55 $$ convertedCopy.put(convertedKey, convertedValue)[ FD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_43 $$ logger.debug("Cannot create copy of Map type [" + original.getClass().getName() + "] - injecting original Map as-is: " + ex)[ FD ]
Line_34 $$ Map<Object, Object> convertedCopy-->Line_55 $$ convertedCopy.put(convertedKey, convertedValue)[ FD ]
Line_21 $$ it = original.entrySet().iterator()-->Line_22 $$ if (it == null) [ FD ]
Line_34 $$ Map<Object, Object> convertedCopy-->Line_39 $$ convertedCopy = (Map<Object, Object>) requiredType.newInstance()[ FD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_9 $$ logger.debug("Custom Map type [" + original.getClass().getName() + "] does not allow for creating a copy - injecting original Map as-is")[ FD ]
Line_15 $$ TypeDescriptor valueType = typeDescriptor.getMapValueTypeDescriptor()-->Line_53 $$ Object convertedValue = convertIfNecessary(keyedPropertyName, null, value, (valueType != null ? valueType.getType() : null), valueType)[ FD ]
Line_34 $$ Map<Object, Object> convertedCopy-->Line_37 $$ convertedCopy = CollectionFactory.createApproximateMap(original, original.size())[ FD ]
Line_47 $$ while (it.hasNext()) -->Line_62 $$ originalAllowed = originalAllowed && (key == convertedKey) && (value == convertedValue)[ CD ]
Line_47 $$ while (it.hasNext()) -->Line_51 $$ String keyedPropertyName = buildKeyedPropertyName(propertyName, key)[ CD ]
Line_47 $$ while (it.hasNext()) -->Line_48 $$ Map.Entry<?, ?> entry = (Map.Entry<?, ?>) it.next()[ CD ]
Line_48 $$ Map.Entry<?, ?> entry = (Map.Entry<?, ?>) it.next()-->Line_50 $$ Object value = entry.getValue()[ FD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_15 $$ TypeDescriptor valueType = typeDescriptor.getMapValueTypeDescriptor()[ FD ]
Line_13 $$ boolean originalAllowed = requiredType.isInstance(original)-->Line_62 $$ originalAllowed = originalAllowed && (key == convertedKey) && (value == convertedValue)[ FD ]
Line_8 $$ if (logger.isDebugEnabled()) -->Line_9 $$ logger.debug("Custom Map type [" + original.getClass().getName() + "] does not allow for creating a copy - injecting original Map as-is")[ CD ]
Line_47 $$ while (it.hasNext()) -->Line_52 $$ Object convertedKey = convertIfNecessary(keyedPropertyName, null, key, (keyType != null ? keyType.getType() : null), keyType)[ CD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_34 $$ Map<Object, Object> convertedCopy[ CD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_51 $$ String keyedPropertyName = buildKeyedPropertyName(propertyName, key)[ FD ]
Line_21 $$ it = original.entrySet().iterator()-->Line_47 $$ while (it.hasNext()) [ FD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_6 $$ boolean approximable = CollectionFactory.isApproximableMapType(requiredType)[ FD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_16 $$ if (keyType == null && valueType == null && originalAllowed && !this.propertyEditorRegistry.hasCustomEditorForElement(null, propertyName)) [ CD ]
Line_19 $$ Iterator<?> it-->Line_21 $$ it = original.entrySet().iterator()[ FD ]
Line_23 $$ if (logger.isDebugEnabled()) -->Line_24 $$ logger.debug("Map of type [" + original.getClass().getName() + "] returned null Iterator - injecting original Map as-is")[ CD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_14 $$ TypeDescriptor keyType = typeDescriptor.getMapKeyTypeDescriptor()[ FD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_24 $$ logger.debug("Map of type [" + original.getClass().getName() + "] returned null Iterator - injecting original Map as-is")[ FD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_21 $$ it = original.entrySet().iterator()[ FD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_13 $$ boolean originalAllowed = requiredType.isInstance(original)[ FD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_15 $$ TypeDescriptor valueType = typeDescriptor.getMapValueTypeDescriptor()[ CD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_13 $$ boolean originalAllowed = requiredType.isInstance(original)[ CD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_39 $$ convertedCopy = (Map<Object, Object>) requiredType.newInstance()[ FD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_58 $$ logger.debug("Map type [" + original.getClass().getName() + "] seems to be read-only - injecting original Map as-is: " + ex)[ FD ]
Line_36 $$ if (approximable) -->Line_39 $$ convertedCopy = (Map<Object, Object>) requiredType.newInstance()[ CD ]
Line_49 $$ Object key = entry.getKey()-->Line_52 $$ Object convertedKey = convertIfNecessary(keyedPropertyName, null, key, (keyType != null ? keyType.getType() : null), keyType)[ FD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_16 $$ if (keyType == null && valueType == null && originalAllowed && !this.propertyEditorRegistry.hasCustomEditorForElement(null, propertyName)) [ FD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_7 $$ if (!approximable && !canCreateCopy(requiredType)) [ FD ]
Line_21 $$ it = original.entrySet().iterator()-->Line_48 $$ Map.Entry<?, ?> entry = (Map.Entry<?, ?>) it.next()[ FD ]
Line_2 $$ private Map<?, ?> convertToTypedMap(Map<?, ?> original, String propertyName, Class<?> requiredType, TypeDescriptor typeDescriptor) -->Line_64 $$ return (originalAllowed ? original : convertedCopy)[ CD ]
Line_16 $$ if (keyType == null && valueType == null && originalAllowed && !this.propertyEditorRegistry.hasCustomEditorForElement(null, propertyName)) -->Line_17 $$ return original[ CD ]
Line_49 $$ Object key = entry.getKey()-->Line_51 $$ String keyedPropertyName = buildKeyedPropertyName(propertyName, key)[ FD ]
