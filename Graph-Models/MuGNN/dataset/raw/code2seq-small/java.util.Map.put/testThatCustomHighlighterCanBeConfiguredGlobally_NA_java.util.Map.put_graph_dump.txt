Line_5 $$ SearchResponse searchResponse = client().prepareSearch("test").setTypes("test").setQuery(QueryBuilders.matchAllQuery()).highlighter(new HighlightBuilder().field("name").highlighterType("test-custom").options(options)).execute().actionGet()-->Line_7 $$ assertHighlight(searchResponse, 0, "name", 1, equalTo("field:myGlobalOption:someValue"))[ FD ]
Line_2 $$ public void testThatCustomHighlighterCanBeConfiguredGlobally() throws Exception -->Line_5 $$ SearchResponse searchResponse = client().prepareSearch("test").setTypes("test").setQuery(QueryBuilders.matchAllQuery()).highlighter(new HighlightBuilder().field("name").highlighterType("test-custom").options(options)).execute().actionGet()[ CD ]
Line_2 $$ public void testThatCustomHighlighterCanBeConfiguredGlobally() throws Exception -->Line_3 $$ Map<String, Object> options = new HashMap()[ CD ]
Line_3 $$ Map<String, Object> options = new HashMap()-->Line_4 $$ options.put("myGlobalOption", "someValue")[ FD ]
Line_3 $$ Map<String, Object> options = new HashMap()-->Line_5 $$ SearchResponse searchResponse = client().prepareSearch("test").setTypes("test").setQuery(QueryBuilders.matchAllQuery()).highlighter(new HighlightBuilder().field("name").highlighterType("test-custom").options(options)).execute().actionGet()[ FD ]
Line_2 $$ public void testThatCustomHighlighterCanBeConfiguredGlobally() throws Exception -->Line_4 $$ options.put("myGlobalOption", "someValue")[ CD ]
Line_5 $$ SearchResponse searchResponse = client().prepareSearch("test").setTypes("test").setQuery(QueryBuilders.matchAllQuery()).highlighter(new HighlightBuilder().field("name").highlighterType("test-custom").options(options)).execute().actionGet()-->Line_6 $$ assertHighlight(searchResponse, 0, "name", 0, equalTo("standard response for name at position 1"))[ FD ]
Line_2 $$ public void testThatCustomHighlighterCanBeConfiguredGlobally() throws Exception -->Line_7 $$ assertHighlight(searchResponse, 0, "name", 1, equalTo("field:myGlobalOption:someValue"))[ CD ]
Line_2 $$ public void testThatCustomHighlighterCanBeConfiguredGlobally() throws Exception -->Line_6 $$ assertHighlight(searchResponse, 0, "name", 0, equalTo("standard response for name at position 1"))[ CD ]
