Line_12 $$ Set<String> mimeTypeWindowStates = new HashSet()-->Line_18 $$ mimeTypeWindowStates.add(toLowerCase(WindowState.MAXIMIZED))[ FD ]
Line_2 $$ protected void collectWindowStates(ServiceReference<Portlet> serviceReference, com.liferay.portal.model.Portlet portletModel) -->Line_4 $$ windowStates.put(ContentTypes.TEXT_HTML, SetUtil.fromArray(new String[] [ CD ]
Line_12 $$ Set<String> mimeTypeWindowStates = new HashSet()-->Line_13 $$ mimeTypeWindowStates.add(toLowerCase(WindowState.NORMAL))[ FD ]
Line_15 $$ if (windowStatesSet.isEmpty()) -->Line_21 $$ mimeTypeWindowStates.addAll(windowStatesSet)[ CD ]
Line_15 $$ if (windowStatesSet.isEmpty()) -->Line_19 $$ mimeTypeWindowStates.add(toLowerCase(WindowState.MINIMIZED))[ CD ]
Line_12 $$ Set<String> mimeTypeWindowStates = new HashSet()-->Line_23 $$ windowStates.put(mimeType, mimeTypeWindowStates)[ FD ]
Line_12 $$ Set<String> mimeTypeWindowStates = new HashSet()-->Line_17 $$ mimeTypeWindowStates.add(toLowerCase(LiferayWindowState.POP_UP))[ FD ]
Line_6 $$ for (String windowStatesString : windowStatesStrings) -->Line_7 $$ String[] windowStatesStringParts = StringUtil.split(windowStatesString, CharPool.SEMICOLON)[ FD ]
Line_11 $$ String mimeType = windowStatesStringParts[0]-->Line_23 $$ windowStates.put(mimeType, mimeTypeWindowStates)[ FD ]
Line_2 $$ protected void collectWindowStates(ServiceReference<Portlet> serviceReference, com.liferay.portal.model.Portlet portletModel) -->Line_5 $$ List<String> windowStatesStrings = StringPlus.asList(serviceReference.getProperty("javax.portlet.window-state"))[ CD ]
Line_2 $$ protected void collectWindowStates(ServiceReference<Portlet> serviceReference, com.liferay.portal.model.Portlet portletModel) -->Line_25 $$ portletModel.setWindowStates(windowStates)[ FD ]
Line_3 $$ Map<String, Set<String>> windowStates = new HashMap()-->Line_25 $$ portletModel.setWindowStates(windowStates)[ FD ]
Line_12 $$ Set<String> mimeTypeWindowStates = new HashSet()-->Line_21 $$ mimeTypeWindowStates.addAll(windowStatesSet)[ FD ]
Line_3 $$ Map<String, Set<String>> windowStates = new HashMap()-->Line_4 $$ windowStates.put(ContentTypes.TEXT_HTML, SetUtil.fromArray(new String[] [ FD ]
Line_12 $$ Set<String> mimeTypeWindowStates = new HashSet()-->Line_16 $$ mimeTypeWindowStates.add(toLowerCase(LiferayWindowState.EXCLUSIVE))[ FD ]
Line_15 $$ if (windowStatesSet.isEmpty()) -->Line_17 $$ mimeTypeWindowStates.add(toLowerCase(LiferayWindowState.POP_UP))[ CD ]
Line_12 $$ Set<String> mimeTypeWindowStates = new HashSet()-->Line_19 $$ mimeTypeWindowStates.add(toLowerCase(WindowState.MINIMIZED))[ FD ]
Line_15 $$ if (windowStatesSet.isEmpty()) -->Line_18 $$ mimeTypeWindowStates.add(toLowerCase(WindowState.MAXIMIZED))[ CD ]
Line_14 $$ Set<String> windowStatesSet = toLowerCaseSet(windowStatesStringParts[1])-->Line_15 $$ if (windowStatesSet.isEmpty()) [ FD ]
Line_14 $$ Set<String> windowStatesSet = toLowerCaseSet(windowStatesStringParts[1])-->Line_21 $$ mimeTypeWindowStates.addAll(windowStatesSet)[ FD ]
Line_2 $$ protected void collectWindowStates(ServiceReference<Portlet> serviceReference, com.liferay.portal.model.Portlet portletModel) -->Line_3 $$ Map<String, Set<String>> windowStates = new HashMap()[ CD ]
Line_2 $$ protected void collectWindowStates(ServiceReference<Portlet> serviceReference, com.liferay.portal.model.Portlet portletModel) -->Line_25 $$ portletModel.setWindowStates(windowStates)[ CD ]
Line_3 $$ Map<String, Set<String>> windowStates = new HashMap()-->Line_23 $$ windowStates.put(mimeType, mimeTypeWindowStates)[ FD ]
Line_15 $$ if (windowStatesSet.isEmpty()) -->Line_16 $$ mimeTypeWindowStates.add(toLowerCase(LiferayWindowState.EXCLUSIVE))[ CD ]
Line_2 $$ protected void collectWindowStates(ServiceReference<Portlet> serviceReference, com.liferay.portal.model.Portlet portletModel) -->Line_5 $$ List<String> windowStatesStrings = StringPlus.asList(serviceReference.getProperty("javax.portlet.window-state"))[ FD ]
