Line_47 $$ int index = 0-->Line_51 $$ state.enterScope("index", index)[ FD ]
Line_84 $$ if (this.nullSafe) -->Line_85 $$ return ValueRef.NullValueRef.INSTANCE[ CD ]
Line_54 $$ if ((Boolean) val) -->Line_55 $$ if (this.variant == FIRST) [ CD ]
Line_2 $$ protected ValueRef getValueRef(ExpressionState state) throws EvaluationException -->Line_83 $$ if (operand == null) [ CD ]
Line_2 $$ protected ValueRef getValueRef(ExpressionState state) throws EvaluationException -->Line_14 $$ state.enterScope()[ FD ]
Line_2 $$ protected ValueRef getValueRef(ExpressionState state) throws EvaluationException -->Line_29 $$ state.popActiveContextObject()[ FD ]
Line_2 $$ protected ValueRef getValueRef(ExpressionState state) throws EvaluationException -->Line_30 $$ state.exitScope()[ FD ]
Line_83 $$ if (operand == null) -->Line_84 $$ if (this.nullSafe) [ CD ]
Line_2 $$ protected ValueRef getValueRef(ExpressionState state) throws EvaluationException -->Line_51 $$ state.enterScope("index", index)[ FD ]
Line_36 $$ if (this.variant == LAST) -->Line_40 $$ return new ValueRef.TypedValueHolderValueRef(new TypedValue(resultMap), this)[ CD ]
Line_15 $$ Object val = selectionCriteria.getValueInternal(state).getValue()-->Line_17 $$ if ((Boolean) val) [ FD ]
Line_7 $$ Map<?, ?> mapdata = (Map<?, ?>) operand-->Line_10 $$ for (Map.Entry<?, ?> entry : mapdata.entrySet()) [ FD ]
Line_79 $$ Object resultArray = Array.newInstance(elementType, result.size())-->Line_80 $$ System.arraycopy(result.toArray(), 0, resultArray, 0, result.size())[ FD ]
Line_12 $$ TypedValue kvPair = new TypedValue(entry)-->Line_13 $$ state.pushActiveContextObject(kvPair)[ FD ]
Line_2 $$ protected ValueRef getValueRef(ExpressionState state) throws EvaluationException -->Line_3 $$ TypedValue op = state.getActiveContextObject()[ FD ]
Line_15 $$ Object val = selectionCriteria.getValueInternal(state).getValue()-->Line_53 $$ if (val instanceof Boolean) [ FD ]
Line_15 $$ Object val = selectionCriteria.getValueInternal(state).getValue()-->Line_54 $$ if ((Boolean) val) [ FD ]
Line_6 $$ if (operand instanceof Map) -->Line_8 $$ Map<Object, Object> result = new HashMap<Object, Object>()[ CD ]
Line_8 $$ Map<Object, Object> result = new HashMap<Object, Object>()-->Line_79 $$ Object resultArray = Array.newInstance(elementType, result.size())[ FD ]
Line_44 $$ if (operand instanceof Iterable || ObjectUtils.isArray(operand)) -->Line_72 $$ if (this.variant == LAST) [ CD ]
Line_4 $$ Object operand = op.getValue()-->Line_6 $$ if (operand instanceof Map) [ FD ]
Line_6 $$ if (operand instanceof Map) -->Line_36 $$ if (this.variant == LAST) [ CD ]
Line_44 $$ if (operand instanceof Iterable || ObjectUtils.isArray(operand)) -->Line_75 $$ if (operand instanceof Iterable) [ CD ]
Line_17 $$ if ((Boolean) val) -->Line_18 $$ if (this.variant == FIRST) [ CD ]
Line_44 $$ if (operand instanceof Iterable || ObjectUtils.isArray(operand)) -->Line_80 $$ System.arraycopy(result.toArray(), 0, resultArray, 0, result.size())[ CD ]
Line_69 $$ if ((this.variant == FIRST || this.variant == LAST) && result.isEmpty()) -->Line_70 $$ return ValueRef.NullValueRef.INSTANCE[ CD ]
Line_2 $$ protected ValueRef getValueRef(ExpressionState state) throws EvaluationException -->Line_4 $$ Object operand = op.getValue()[ CD ]
Line_2 $$ protected ValueRef getValueRef(ExpressionState state) throws EvaluationException -->Line_3 $$ TypedValue op = state.getActiveContextObject()[ CD ]
Line_8 $$ Map<Object, Object> result = new HashMap<Object, Object>()-->Line_22 $$ result.put(entry.getKey(), entry.getValue())[ FD ]
Line_9 $$ Object lastKey = null-->Line_23 $$ lastKey = entry.getKey()[ FD ]
Line_15 $$ Object val = selectionCriteria.getValueInternal(state).getValue()-->Line_16 $$ if (val instanceof Boolean) [ FD ]
Line_3 $$ TypedValue op = state.getActiveContextObject()-->Line_4 $$ Object operand = op.getValue()[ FD ]
Line_2 $$ protected ValueRef getValueRef(ExpressionState state) throws EvaluationException -->Line_44 $$ if (operand instanceof Iterable || ObjectUtils.isArray(operand)) [ CD ]
Line_78 $$ Class<?> elementType = ClassUtils.resolvePrimitiveIfNecessary(op.getTypeDescriptor().getElementTypeDescriptor().getType())-->Line_79 $$ Object resultArray = Array.newInstance(elementType, result.size())[ FD ]
Line_8 $$ Map<Object, Object> result = new HashMap<Object, Object>()-->Line_19 $$ result.put(entry.getKey(), entry.getValue())[ FD ]
Line_10 $$ for (Map.Entry<?, ?> entry : mapdata.entrySet()) -->Line_19 $$ result.put(entry.getKey(), entry.getValue())[ FD ]
Line_5 $$ SpelNodeImpl selectionCriteria = this.children[0]-->Line_52 $$ Object val = selectionCriteria.getValueInternal(state).getValue()[ FD ]
Line_18 $$ if (this.variant == FIRST) -->Line_20 $$ return new ValueRef.TypedValueHolderValueRef(new TypedValue(result), this)[ CD ]
Line_37 $$ Map<Object, Object> resultMap = new HashMap<Object, Object>()-->Line_39 $$ resultMap.put(lastKey, lastValue)[ FD ]
Line_16 $$ if (val instanceof Boolean) -->Line_17 $$ if ((Boolean) val) [ CD ]
Line_2 $$ protected ValueRef getValueRef(ExpressionState state) throws EvaluationException -->Line_13 $$ state.pushActiveContextObject(kvPair)[ FD ]
Line_8 $$ Map<Object, Object> result = new HashMap<Object, Object>()-->Line_33 $$ if ((this.variant == FIRST || this.variant == LAST) && result.isEmpty()) [ FD ]
Line_8 $$ Map<Object, Object> result = new HashMap<Object, Object>()-->Line_69 $$ if ((this.variant == FIRST || this.variant == LAST) && result.isEmpty()) [ FD ]
Line_4 $$ Object operand = op.getValue()-->Line_44 $$ if (operand instanceof Iterable || ObjectUtils.isArray(operand)) [ FD ]
Line_72 $$ if (this.variant == LAST) -->Line_73 $$ return new ValueRef.TypedValueHolderValueRef(new TypedValue(result.get(result.size() - 1)), this)[ CD ]
Line_4 $$ Object operand = op.getValue()-->Line_75 $$ if (operand instanceof Iterable) [ FD ]
Line_44 $$ if (operand instanceof Iterable || ObjectUtils.isArray(operand)) -->Line_69 $$ if ((this.variant == FIRST || this.variant == LAST) && result.isEmpty()) [ CD ]
Line_9 $$ Object lastKey = null-->Line_39 $$ resultMap.put(lastKey, lastValue)[ FD ]
Line_23 $$ lastKey = entry.getKey()-->Line_38 $$ Object lastValue = result.get(lastKey)[ FD ]
Line_6 $$ if (operand instanceof Map) -->Line_42 $$ return new ValueRef.TypedValueHolderValueRef(new TypedValue(result), this)[ CD ]
Line_6 $$ if (operand instanceof Map) -->Line_7 $$ Map<?, ?> mapdata = (Map<?, ?>) operand[ CD ]
Line_2 $$ protected ValueRef getValueRef(ExpressionState state) throws EvaluationException -->Line_66 $$ state.popActiveContextObject()[ FD ]
Line_2 $$ protected ValueRef getValueRef(ExpressionState state) throws EvaluationException -->Line_5 $$ SpelNodeImpl selectionCriteria = this.children[0][ CD ]
Line_8 $$ Map<Object, Object> result = new HashMap<Object, Object>()-->Line_73 $$ return new ValueRef.TypedValueHolderValueRef(new TypedValue(result.get(result.size() - 1)), this)[ FD ]
Line_36 $$ if (this.variant == LAST) -->Line_37 $$ Map<Object, Object> resultMap = new HashMap<Object, Object>()[ CD ]
Line_47 $$ int index = 0-->Line_63 $$ index++[ FD ]
Line_4 $$ Object operand = op.getValue()-->Line_89 $$ throw new SpelEvaluationException(getStartPosition(), SpelMessage.INVALID_TYPE_FOR_SELECTION, operand.getClass().getName())[ FD ]
Line_33 $$ if ((this.variant == FIRST || this.variant == LAST) && result.isEmpty()) -->Line_34 $$ return new ValueRef.TypedValueHolderValueRef(new TypedValue(null), this)[ CD ]
Line_17 $$ if ((Boolean) val) -->Line_22 $$ result.put(entry.getKey(), entry.getValue())[ CD ]
Line_38 $$ Object lastValue = result.get(lastKey)-->Line_39 $$ resultMap.put(lastKey, lastValue)[ FD ]
Line_8 $$ Map<Object, Object> result = new HashMap<Object, Object>()-->Line_38 $$ Object lastValue = result.get(lastKey)[ FD ]
Line_2 $$ protected ValueRef getValueRef(ExpressionState state) throws EvaluationException -->Line_65 $$ state.exitScope()[ FD ]
Line_44 $$ if (operand instanceof Iterable || ObjectUtils.isArray(operand)) -->Line_78 $$ Class<?> elementType = ClassUtils.resolvePrimitiveIfNecessary(op.getTypeDescriptor().getElementTypeDescriptor().getType())[ CD ]
Line_5 $$ SpelNodeImpl selectionCriteria = this.children[0]-->Line_26 $$ throw new SpelEvaluationException(selectionCriteria.getStartPosition(), SpelMessage.RESULT_OF_SELECTION_CRITERIA_IS_NOT_BOOLEAN)[ FD ]
Line_23 $$ lastKey = entry.getKey()-->Line_39 $$ resultMap.put(lastKey, lastValue)[ FD ]
Line_18 $$ if (this.variant == FIRST) -->Line_19 $$ result.put(entry.getKey(), entry.getValue())[ CD ]
Line_9 $$ Object lastKey = null-->Line_38 $$ Object lastValue = result.get(lastKey)[ FD ]
Line_6 $$ if (operand instanceof Map) -->Line_9 $$ Object lastKey = null[ CD ]
Line_75 $$ if (operand instanceof Iterable) -->Line_76 $$ return new ValueRef.TypedValueHolderValueRef(new TypedValue(result), this)[ CD ]
Line_8 $$ Map<Object, Object> result = new HashMap<Object, Object>()-->Line_80 $$ System.arraycopy(result.toArray(), 0, resultArray, 0, result.size())[ FD ]
Line_8 $$ Map<Object, Object> result = new HashMap<Object, Object>()-->Line_58 $$ result.add(element)[ FD ]
Line_2 $$ protected ValueRef getValueRef(ExpressionState state) throws EvaluationException -->Line_15 $$ Object val = selectionCriteria.getValueInternal(state).getValue()[ FD ]
Line_55 $$ if (this.variant == FIRST) -->Line_56 $$ return new ValueRef.TypedValueHolderValueRef(new TypedValue(element), this)[ CD ]
Line_44 $$ if (operand instanceof Iterable || ObjectUtils.isArray(operand)) -->Line_79 $$ Object resultArray = Array.newInstance(elementType, result.size())[ CD ]
Line_10 $$ for (Map.Entry<?, ?> entry : mapdata.entrySet()) -->Line_22 $$ result.put(entry.getKey(), entry.getValue())[ FD ]
Line_36 $$ if (this.variant == LAST) -->Line_38 $$ Object lastValue = result.get(lastKey)[ CD ]
Line_5 $$ SpelNodeImpl selectionCriteria = this.children[0]-->Line_15 $$ Object val = selectionCriteria.getValueInternal(state).getValue()[ FD ]
Line_10 $$ for (Map.Entry<?, ?> entry : mapdata.entrySet()) -->Line_23 $$ lastKey = entry.getKey()[ FD ]
Line_48 $$ for (Object element : data) -->Line_58 $$ result.add(element)[ FD ]
Line_2 $$ protected ValueRef getValueRef(ExpressionState state) throws EvaluationException -->Line_6 $$ if (operand instanceof Map) [ CD ]
Line_17 $$ if ((Boolean) val) -->Line_23 $$ lastKey = entry.getKey()[ CD ]
Line_44 $$ if (operand instanceof Iterable || ObjectUtils.isArray(operand)) -->Line_47 $$ int index = 0[ CD ]
Line_5 $$ SpelNodeImpl selectionCriteria = this.children[0]-->Line_61 $$ throw new SpelEvaluationException(selectionCriteria.getStartPosition(), SpelMessage.RESULT_OF_SELECTION_CRITERIA_IS_NOT_BOOLEAN)[ FD ]
Line_2 $$ protected ValueRef getValueRef(ExpressionState state) throws EvaluationException -->Line_52 $$ Object val = selectionCriteria.getValueInternal(state).getValue()[ FD ]
Line_44 $$ if (operand instanceof Iterable || ObjectUtils.isArray(operand)) -->Line_45 $$ Iterable<?> data = (operand instanceof Iterable ? (Iterable<?>) operand : Arrays.asList(ObjectUtils.toObjectArray(operand)))[ CD ]
Line_6 $$ if (operand instanceof Map) -->Line_33 $$ if ((this.variant == FIRST || this.variant == LAST) && result.isEmpty()) [ CD ]
Line_54 $$ if ((Boolean) val) -->Line_58 $$ result.add(element)[ CD ]
Line_4 $$ Object operand = op.getValue()-->Line_83 $$ if (operand == null) [ FD ]
Line_4 $$ Object operand = op.getValue()-->Line_45 $$ Iterable<?> data = (operand instanceof Iterable ? (Iterable<?>) operand : Arrays.asList(ObjectUtils.toObjectArray(operand)))[ FD ]
Line_53 $$ if (val instanceof Boolean) -->Line_54 $$ if ((Boolean) val) [ CD ]
Line_3 $$ TypedValue op = state.getActiveContextObject()-->Line_78 $$ Class<?> elementType = ClassUtils.resolvePrimitiveIfNecessary(op.getTypeDescriptor().getElementTypeDescriptor().getType())[ FD ]
Line_44 $$ if (operand instanceof Iterable || ObjectUtils.isArray(operand)) -->Line_81 $$ return new ValueRef.TypedValueHolderValueRef(new TypedValue(resultArray), this)[ CD ]
Line_36 $$ if (this.variant == LAST) -->Line_39 $$ resultMap.put(lastKey, lastValue)[ CD ]
Line_2 $$ protected ValueRef getValueRef(ExpressionState state) throws EvaluationException -->Line_50 $$ state.pushActiveContextObject(new TypedValue(element))[ FD ]
