Line_3 $$ Map<Object, Object> map = myCache.get(element)-->Line_7 $$ if (map.containsKey(key)) [ FD ]
Line_10 $$ T result = computable.compute()-->Line_11 $$ map.put(key, result)[ FD ]
Line_2 $$ private <T> T _getCachedValue(@Nullable PsiElement element, @NotNull Computable<T> computable, @NotNull Object key) -->Line_12 $$ return result[ CD ]
Line_4 $$ if (map == null) -->Line_5 $$ myCache.put(element, map = ContainerUtil.newHashMap())[ CD ]
Line_3 $$ Map<Object, Object> map = myCache.get(element)-->Line_8 $$ return (T) map.get(key)[ FD ]
Line_2 $$ private <T> T _getCachedValue(@Nullable PsiElement element, @NotNull Computable<T> computable, @NotNull Object key) -->Line_7 $$ if (map.containsKey(key)) [ CD ]
Line_5 $$ myCache.put(element, map = ContainerUtil.newHashMap())-->Line_11 $$ map.put(key, result)[ FD ]
Line_5 $$ myCache.put(element, map = ContainerUtil.newHashMap())-->Line_7 $$ if (map.containsKey(key)) [ FD ]
Line_2 $$ private <T> T _getCachedValue(@Nullable PsiElement element, @NotNull Computable<T> computable, @NotNull Object key) -->Line_11 $$ map.put(key, result)[ CD ]
Line_2 $$ private <T> T _getCachedValue(@Nullable PsiElement element, @NotNull Computable<T> computable, @NotNull Object key) -->Line_10 $$ T result = computable.compute()[ CD ]
Line_5 $$ myCache.put(element, map = ContainerUtil.newHashMap())-->Line_8 $$ return (T) map.get(key)[ FD ]
Line_3 $$ Map<Object, Object> map = myCache.get(element)-->Line_4 $$ if (map == null) [ FD ]
Line_2 $$ private <T> T _getCachedValue(@Nullable PsiElement element, @NotNull Computable<T> computable, @NotNull Object key) -->Line_11 $$ map.put(key, result)[ FD ]
Line_2 $$ private <T> T _getCachedValue(@Nullable PsiElement element, @NotNull Computable<T> computable, @NotNull Object key) -->Line_10 $$ T result = computable.compute()[ FD ]
Line_2 $$ private <T> T _getCachedValue(@Nullable PsiElement element, @NotNull Computable<T> computable, @NotNull Object key) -->Line_3 $$ Map<Object, Object> map = myCache.get(element)[ CD ]
Line_2 $$ private <T> T _getCachedValue(@Nullable PsiElement element, @NotNull Computable<T> computable, @NotNull Object key) -->Line_5 $$ myCache.put(element, map = ContainerUtil.newHashMap())[ FD ]
Line_3 $$ Map<Object, Object> map = myCache.get(element)-->Line_11 $$ map.put(key, result)[ FD ]
Line_3 $$ Map<Object, Object> map = myCache.get(element)-->Line_5 $$ myCache.put(element, map = ContainerUtil.newHashMap())[ FD ]
Line_2 $$ private <T> T _getCachedValue(@Nullable PsiElement element, @NotNull Computable<T> computable, @NotNull Object key) -->Line_8 $$ return (T) map.get(key)[ FD ]
Line_2 $$ private <T> T _getCachedValue(@Nullable PsiElement element, @NotNull Computable<T> computable, @NotNull Object key) -->Line_7 $$ if (map.containsKey(key)) [ FD ]
Line_2 $$ private <T> T _getCachedValue(@Nullable PsiElement element, @NotNull Computable<T> computable, @NotNull Object key) -->Line_3 $$ Map<Object, Object> map = myCache.get(element)[ FD ]
Line_7 $$ if (map.containsKey(key)) -->Line_8 $$ return (T) map.get(key)[ CD ]
Line_2 $$ private <T> T _getCachedValue(@Nullable PsiElement element, @NotNull Computable<T> computable, @NotNull Object key) -->Line_4 $$ if (map == null) [ CD ]
