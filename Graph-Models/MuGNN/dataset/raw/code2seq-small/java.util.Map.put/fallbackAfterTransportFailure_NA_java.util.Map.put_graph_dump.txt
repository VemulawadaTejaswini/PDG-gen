Line_5 $$ TestClientHandler handler = new TestClientHandler()-->Line_7 $$ WebSocketSession session = this.sockJsClient.doHandshake(handler, this.baseUrl + "/echo").get()[ FD ]
Line_2 $$ public void fallbackAfterTransportFailure() throws Exception -->Line_9 $$ TextMessage message = new TextMessage("message1")[ CD ]
Line_2 $$ public void fallbackAfterTransportFailure() throws Exception -->Line_11 $$ handler.awaitMessage(message, 5000)[ CD ]
Line_2 $$ public void fallbackAfterTransportFailure() throws Exception -->Line_4 $$ this.testFilter.sendErrorMap.put("/xhr_streaming", 500)[ CD ]
Line_2 $$ public void fallbackAfterTransportFailure() throws Exception -->Line_8 $$ assertEquals("Fallback didn't occur", XhrClientSockJsSession.class, session.getClass())[ CD ]
Line_7 $$ WebSocketSession session = this.sockJsClient.doHandshake(handler, this.baseUrl + "/echo").get()-->Line_10 $$ session.sendMessage(message)[ FD ]
Line_2 $$ public void fallbackAfterTransportFailure() throws Exception -->Line_6 $$ initSockJsClient(createWebSocketTransport(), createXhrTransport())[ CD ]
Line_7 $$ WebSocketSession session = this.sockJsClient.doHandshake(handler, this.baseUrl + "/echo").get()-->Line_8 $$ assertEquals("Fallback didn't occur", XhrClientSockJsSession.class, session.getClass())[ FD ]
Line_5 $$ TestClientHandler handler = new TestClientHandler()-->Line_11 $$ handler.awaitMessage(message, 5000)[ FD ]
Line_9 $$ TextMessage message = new TextMessage("message1")-->Line_10 $$ session.sendMessage(message)[ FD ]
Line_2 $$ public void fallbackAfterTransportFailure() throws Exception -->Line_5 $$ TestClientHandler handler = new TestClientHandler()[ CD ]
Line_2 $$ public void fallbackAfterTransportFailure() throws Exception -->Line_10 $$ session.sendMessage(message)[ CD ]
Line_9 $$ TextMessage message = new TextMessage("message1")-->Line_11 $$ handler.awaitMessage(message, 5000)[ FD ]
Line_2 $$ public void fallbackAfterTransportFailure() throws Exception -->Line_3 $$ this.testFilter.sendErrorMap.put("/websocket", 200)[ CD ]
Line_2 $$ public void fallbackAfterTransportFailure() throws Exception -->Line_7 $$ WebSocketSession session = this.sockJsClient.doHandshake(handler, this.baseUrl + "/echo").get()[ CD ]
