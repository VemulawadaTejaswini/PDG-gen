Line_2 $$ public void testGenericTypeNestingMapOfInteger() throws Exception -->Line_9 $$ assertTrue(obj instanceof Integer)[ CD ]
Line_2 $$ public void testGenericTypeNestingMapOfInteger() throws Exception -->Line_3 $$ Map<String, String> map = new HashMap<String, String>()[ CD ]
Line_2 $$ public void testGenericTypeNestingMapOfInteger() throws Exception -->Line_6 $$ BeanWrapper bw = new BeanWrapperImpl(gb)[ CD ]
Line_2 $$ public void testGenericTypeNestingMapOfInteger() throws Exception -->Line_4 $$ map.put("testKey", "100")[ CD ]
Line_5 $$ NestedGenericCollectionBean gb = new NestedGenericCollectionBean()-->Line_8 $$ Object obj = gb.getMapOfInteger().get("testKey")[ FD ]
Line_3 $$ Map<String, String> map = new HashMap<String, String>()-->Line_4 $$ map.put("testKey", "100")[ FD ]
Line_2 $$ public void testGenericTypeNestingMapOfInteger() throws Exception -->Line_5 $$ NestedGenericCollectionBean gb = new NestedGenericCollectionBean()[ CD ]
Line_2 $$ public void testGenericTypeNestingMapOfInteger() throws Exception -->Line_8 $$ Object obj = gb.getMapOfInteger().get("testKey")[ CD ]
Line_2 $$ public void testGenericTypeNestingMapOfInteger() throws Exception -->Line_7 $$ bw.setPropertyValue("mapOfInteger", map)[ CD ]
Line_3 $$ Map<String, String> map = new HashMap<String, String>()-->Line_7 $$ bw.setPropertyValue("mapOfInteger", map)[ FD ]
Line_6 $$ BeanWrapper bw = new BeanWrapperImpl(gb)-->Line_7 $$ bw.setPropertyValue("mapOfInteger", map)[ FD ]
