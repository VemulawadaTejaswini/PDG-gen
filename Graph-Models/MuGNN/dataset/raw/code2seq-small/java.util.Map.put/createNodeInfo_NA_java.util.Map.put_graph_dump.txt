Line_14 $$ Map<String, BoundTransportAddress> profileAddresses = new HashMap()-->Line_16 $$ profileAddresses.put("test_address", dummyBoundTransportAddress)[ FD ]
Line_2 $$ private NodeInfo createNodeInfo() -->Line_6 $$ serviceAttributes.put("test", "attribute")[ CD ]
Line_2 $$ private NodeInfo createNodeInfo() -->Line_14 $$ Map<String, BoundTransportAddress> profileAddresses = new HashMap()[ CD ]
Line_2 $$ private NodeInfo createNodeInfo() -->Line_7 $$ Settings settings = Settings.builder().put("test", "setting").build()[ CD ]
Line_2 $$ private NodeInfo createNodeInfo() -->Line_13 $$ ThreadPoolInfo threadPoolInfo = new ThreadPoolInfo(threadPoolInfos)[ CD ]
Line_2 $$ private NodeInfo createNodeInfo() -->Line_10 $$ JvmInfo jvm = JvmInfo.jvmInfo()[ CD ]
Line_2 $$ private NodeInfo createNodeInfo() -->Line_9 $$ ProcessInfo process = new ProcessInfo(randomInt(), randomBoolean())[ CD ]
Line_2 $$ private NodeInfo createNodeInfo() -->Line_18 $$ HttpInfo htttpInfo = new HttpInfo(dummyBoundTransportAddress, randomLong())[ CD ]
Line_15 $$ BoundTransportAddress dummyBoundTransportAddress = new BoundTransportAddress(new TransportAddress[] -->Line_16 $$ profileAddresses.put("test_address", dummyBoundTransportAddress)[ FD ]
Line_2 $$ private NodeInfo createNodeInfo() -->Line_11 $$ List<ThreadPool.Info> threadPoolInfos = new ArrayList()[ CD ]
Line_19 $$ PluginsAndModules plugins = new PluginsAndModules()-->Line_20 $$ plugins.addModule(DummyPluginInfo.INSTANCE)[ FD ]
Line_2 $$ private NodeInfo createNodeInfo() -->Line_12 $$ threadPoolInfos.add(new ThreadPool.Info("test_threadpool", ThreadPool.ThreadPoolType.FIXED, 5))[ CD ]
Line_2 $$ private NodeInfo createNodeInfo() -->Line_20 $$ plugins.addModule(DummyPluginInfo.INSTANCE)[ CD ]
Line_2 $$ private NodeInfo createNodeInfo() -->Line_21 $$ plugins.addPlugin(DummyPluginInfo.INSTANCE)[ CD ]
Line_2 $$ private NodeInfo createNodeInfo() -->Line_17 $$ TransportInfo transport = new TransportInfo(dummyBoundTransportAddress, profileAddresses)[ CD ]
Line_2 $$ private NodeInfo createNodeInfo() -->Line_3 $$ Build build = Build.CURRENT[ CD ]
Line_2 $$ private NodeInfo createNodeInfo() -->Line_5 $$ Map<String, String> serviceAttributes = new HashMap()[ CD ]
Line_11 $$ List<ThreadPool.Info> threadPoolInfos = new ArrayList()-->Line_12 $$ threadPoolInfos.add(new ThreadPool.Info("test_threadpool", ThreadPool.ThreadPoolType.FIXED, 5))[ FD ]
Line_2 $$ private NodeInfo createNodeInfo() -->Line_15 $$ BoundTransportAddress dummyBoundTransportAddress = new BoundTransportAddress(new TransportAddress[] [ CD ]
Line_2 $$ private NodeInfo createNodeInfo() -->Line_16 $$ profileAddresses.put("test_address", dummyBoundTransportAddress)[ CD ]
Line_19 $$ PluginsAndModules plugins = new PluginsAndModules()-->Line_21 $$ plugins.addPlugin(DummyPluginInfo.INSTANCE)[ FD ]
Line_2 $$ private NodeInfo createNodeInfo() -->Line_22 $$ return new NodeInfo(VersionUtils.randomVersion(random()), build, node, serviceAttributes, settings, osInfo, process, jvm, threadPoolInfo, transport, htttpInfo, plugins)[ CD ]
Line_2 $$ private NodeInfo createNodeInfo() -->Line_4 $$ DiscoveryNode node = new DiscoveryNode("test_node", DummyTransportAddress.INSTANCE, VersionUtils.randomVersion(random()))[ CD ]
Line_5 $$ Map<String, String> serviceAttributes = new HashMap()-->Line_6 $$ serviceAttributes.put("test", "attribute")[ FD ]
Line_2 $$ private NodeInfo createNodeInfo() -->Line_8 $$ OsInfo osInfo = DummyOsInfo.INSTANCE[ CD ]
Line_2 $$ private NodeInfo createNodeInfo() -->Line_19 $$ PluginsAndModules plugins = new PluginsAndModules()[ CD ]
