Line_2 $$ public Object[] getChildElements(Object element) -->Line_5 $$ final Iterator<Object> it = result.iterator()[ CD ]
Line_2 $$ public Object[] getChildElements(Object element) -->Line_6 $$ while (it.hasNext()) [ CD ]
Line_6 $$ while (it.hasNext()) -->Line_7 $$ if (!acceptsElement(it.next()))[ CD ]
Line_2 $$ public Object[] getChildElements(Object element) -->Line_13 $$ return result.toArray()[ CD ]
Line_3 $$ final List<Object> result = new ArrayList<Object>()-->Line_13 $$ return result.toArray()[ FD ]
Line_3 $$ final List<Object> result = new ArrayList<Object>()-->Line_4 $$ collectChildren(element, result)[ FD ]
Line_7 $$ if (!acceptsElement(it.next()))-->Line_8 $$ it.remove()[ CD ]
Line_2 $$ public Object[] getChildElements(Object element) -->Line_11 $$ myParentsMap.put(o, element)[ FD ]
Line_5 $$ final Iterator<Object> it = result.iterator()-->Line_7 $$ if (!acceptsElement(it.next()))[ FD ]
Line_3 $$ final List<Object> result = new ArrayList<Object>()-->Line_5 $$ final Iterator<Object> it = result.iterator()[ FD ]
Line_10 $$ for (Object o : result) -->Line_11 $$ myParentsMap.put(o, element)[ FD ]
Line_2 $$ public Object[] getChildElements(Object element) -->Line_3 $$ final List<Object> result = new ArrayList<Object>()[ CD ]
Line_2 $$ public Object[] getChildElements(Object element) -->Line_4 $$ collectChildren(element, result)[ CD ]
Line_5 $$ final Iterator<Object> it = result.iterator()-->Line_6 $$ while (it.hasNext()) [ FD ]
Line_2 $$ public Object[] getChildElements(Object element) -->Line_4 $$ collectChildren(element, result)[ FD ]
Line_5 $$ final Iterator<Object> it = result.iterator()-->Line_8 $$ it.remove()[ FD ]
