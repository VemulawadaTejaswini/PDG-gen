Line_2 $$ protected void touchFiles(Project project, File dir, long time, String... includes) -->Line_4 $$ args.put("dir", dir)[ CD ]
Line_2 $$ protected void touchFiles(Project project, File dir, long time, String... includes) -->Line_5 $$ args.put("includes", Arrays.asList(includes))[ CD ]
Line_7 $$ for (File file : fileTree) -->Line_8 $$ touchFile(file, time)[ FD ]
Line_2 $$ protected void touchFiles(Project project, File dir, long time, String... includes) -->Line_6 $$ FileTree fileTree = project.fileTree(args)[ CD ]
Line_2 $$ protected void touchFiles(Project project, File dir, long time, String... includes) -->Line_8 $$ touchFile(file, time)[ FD ]
Line_2 $$ protected void touchFiles(Project project, File dir, long time, String... includes) -->Line_4 $$ args.put("dir", dir)[ FD ]
Line_3 $$ Map<String, Object> args = new HashMap()-->Line_5 $$ args.put("includes", Arrays.asList(includes))[ FD ]
Line_2 $$ protected void touchFiles(Project project, File dir, long time, String... includes) -->Line_3 $$ Map<String, Object> args = new HashMap()[ CD ]
Line_3 $$ Map<String, Object> args = new HashMap()-->Line_4 $$ args.put("dir", dir)[ FD ]
Line_2 $$ protected void touchFiles(Project project, File dir, long time, String... includes) -->Line_5 $$ args.put("includes", Arrays.asList(includes))[ FD ]
Line_3 $$ Map<String, Object> args = new HashMap()-->Line_6 $$ FileTree fileTree = project.fileTree(args)[ FD ]
Line_2 $$ protected void touchFiles(Project project, File dir, long time, String... includes) -->Line_6 $$ FileTree fileTree = project.fileTree(args)[ FD ]
