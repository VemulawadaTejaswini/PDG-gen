Line_13 $$ StringBundler sb = new StringBundler(8)-->Line_22 $$ Assert.assertEquals(sb.toString(), StringUtil.merge(portletPreferences.getValues("scopeIds", null)))[ FD ]
Line_4 $$ Layout secondLayout = LayoutTestUtil.addLayout(group)-->Line_11 $$ Layout importedSecondLayout = LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(secondLayout.getUuid(), importedGroup.getGroupId(), importedLayout.isPrivateLayout())[ FD ]
Line_2 $$ public void testSeveralLayoutScopeIds() throws Exception -->Line_8 $$ Group companyGroup = company.getGroup()[ CD ]
Line_13 $$ StringBundler sb = new StringBundler(8)-->Line_14 $$ sb.append(AssetPublisherUtil.SCOPE_ID_GROUP_PREFIX)[ FD ]
Line_2 $$ public void testSeveralLayoutScopeIds() throws Exception -->Line_11 $$ Layout importedSecondLayout = LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(secondLayout.getUuid(), importedGroup.getGroupId(), importedLayout.isPrivateLayout())[ CD ]
Line_13 $$ StringBundler sb = new StringBundler(8)-->Line_15 $$ sb.append(companyGroup.getGroupId())[ FD ]
Line_2 $$ public void testSeveralLayoutScopeIds() throws Exception -->Line_21 $$ sb.append(importedSecondLayout.getUuid())[ CD ]
Line_2 $$ public void testSeveralLayoutScopeIds() throws Exception -->Line_22 $$ Assert.assertEquals(sb.toString(), StringUtil.merge(portletPreferences.getValues("scopeIds", null)))[ CD ]
Line_2 $$ public void testSeveralLayoutScopeIds() throws Exception -->Line_18 $$ sb.append(importedLayout.getUuid())[ CD ]
Line_13 $$ StringBundler sb = new StringBundler(8)-->Line_21 $$ sb.append(importedSecondLayout.getUuid())[ FD ]
Line_13 $$ StringBundler sb = new StringBundler(8)-->Line_18 $$ sb.append(importedLayout.getUuid())[ FD ]
Line_10 $$ PortletPreferences portletPreferences = getImportedPortletPreferences(preferenceMap)-->Line_22 $$ Assert.assertEquals(sb.toString(), StringUtil.merge(portletPreferences.getValues("scopeIds", null)))[ FD ]
Line_2 $$ public void testSeveralLayoutScopeIds() throws Exception -->Line_5 $$ GroupTestUtil.addGroup(TestPropsValues.getUserId(), secondLayout)[ CD ]
Line_13 $$ StringBundler sb = new StringBundler(8)-->Line_19 $$ sb.append(StringPool.COMMA)[ FD ]
Line_13 $$ StringBundler sb = new StringBundler(8)-->Line_16 $$ sb.append(StringPool.COMMA)[ FD ]
Line_13 $$ StringBundler sb = new StringBundler(8)-->Line_20 $$ sb.append(AssetPublisherUtil.SCOPE_ID_LAYOUT_UUID_PREFIX)[ FD ]
Line_6 $$ Map<String, String[]> preferenceMap = new HashMap()-->Line_9 $$ preferenceMap.put("scopeIds", new String[] [ FD ]
Line_2 $$ public void testSeveralLayoutScopeIds() throws Exception -->Line_20 $$ sb.append(AssetPublisherUtil.SCOPE_ID_LAYOUT_UUID_PREFIX)[ CD ]
Line_2 $$ public void testSeveralLayoutScopeIds() throws Exception -->Line_12 $$ Assert.assertEquals(null, portletPreferences.getValue("scopeId", null))[ CD ]
Line_2 $$ public void testSeveralLayoutScopeIds() throws Exception -->Line_17 $$ sb.append(AssetPublisherUtil.SCOPE_ID_LAYOUT_UUID_PREFIX)[ CD ]
Line_11 $$ Layout importedSecondLayout = LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(secondLayout.getUuid(), importedGroup.getGroupId(), importedLayout.isPrivateLayout())-->Line_21 $$ sb.append(importedSecondLayout.getUuid())[ FD ]
Line_10 $$ PortletPreferences portletPreferences = getImportedPortletPreferences(preferenceMap)-->Line_12 $$ Assert.assertEquals(null, portletPreferences.getValue("scopeId", null))[ FD ]
Line_2 $$ public void testSeveralLayoutScopeIds() throws Exception -->Line_7 $$ GroupTestUtil.addGroup(TestPropsValues.getUserId(), layout)[ CD ]
Line_8 $$ Group companyGroup = company.getGroup()-->Line_9 $$ preferenceMap.put("scopeIds", new String[] [ FD ]
Line_2 $$ public void testSeveralLayoutScopeIds() throws Exception -->Line_13 $$ StringBundler sb = new StringBundler(8)[ CD ]
Line_8 $$ Group companyGroup = company.getGroup()-->Line_15 $$ sb.append(companyGroup.getGroupId())[ FD ]
Line_4 $$ Layout secondLayout = LayoutTestUtil.addLayout(group)-->Line_9 $$ preferenceMap.put("scopeIds", new String[] [ FD ]
Line_2 $$ public void testSeveralLayoutScopeIds() throws Exception -->Line_6 $$ Map<String, String[]> preferenceMap = new HashMap()[ CD ]
Line_3 $$ Company company = CompanyLocalServiceUtil.getCompany(layout.getCompanyId())-->Line_8 $$ Group companyGroup = company.getGroup()[ FD ]
Line_2 $$ public void testSeveralLayoutScopeIds() throws Exception -->Line_4 $$ Layout secondLayout = LayoutTestUtil.addLayout(group)[ CD ]
Line_4 $$ Layout secondLayout = LayoutTestUtil.addLayout(group)-->Line_5 $$ GroupTestUtil.addGroup(TestPropsValues.getUserId(), secondLayout)[ FD ]
Line_2 $$ public void testSeveralLayoutScopeIds() throws Exception -->Line_3 $$ Company company = CompanyLocalServiceUtil.getCompany(layout.getCompanyId())[ CD ]
Line_2 $$ public void testSeveralLayoutScopeIds() throws Exception -->Line_16 $$ sb.append(StringPool.COMMA)[ CD ]
Line_2 $$ public void testSeveralLayoutScopeIds() throws Exception -->Line_15 $$ sb.append(companyGroup.getGroupId())[ CD ]
Line_2 $$ public void testSeveralLayoutScopeIds() throws Exception -->Line_9 $$ preferenceMap.put("scopeIds", new String[] [ CD ]
Line_2 $$ public void testSeveralLayoutScopeIds() throws Exception -->Line_19 $$ sb.append(StringPool.COMMA)[ CD ]
Line_2 $$ public void testSeveralLayoutScopeIds() throws Exception -->Line_14 $$ sb.append(AssetPublisherUtil.SCOPE_ID_GROUP_PREFIX)[ CD ]
Line_2 $$ public void testSeveralLayoutScopeIds() throws Exception -->Line_10 $$ PortletPreferences portletPreferences = getImportedPortletPreferences(preferenceMap)[ CD ]
Line_6 $$ Map<String, String[]> preferenceMap = new HashMap()-->Line_10 $$ PortletPreferences portletPreferences = getImportedPortletPreferences(preferenceMap)[ FD ]
Line_13 $$ StringBundler sb = new StringBundler(8)-->Line_17 $$ sb.append(AssetPublisherUtil.SCOPE_ID_LAYOUT_UUID_PREFIX)[ FD ]
