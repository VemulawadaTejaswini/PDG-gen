Line_2 $$ public void addTransactionalMethod(Class<?> clazz, String mappedName, TransactionAttribute attr) -->Line_3 $$ Assert.notNull(clazz, "Class must not be null")[ FD ]
Line_8 $$ for (Method method : methods) -->Line_9 $$ if (isMatch(method.getName(), mappedName)) [ FD ]
Line_2 $$ public void addTransactionalMethod(Class<?> clazz, String mappedName, TransactionAttribute attr) -->Line_4 $$ Assert.notNull(mappedName, "Mapped name must not be null")[ FD ]
Line_2 $$ public void addTransactionalMethod(Class<?> clazz, String mappedName, TransactionAttribute attr) -->Line_5 $$ String name = clazz.getName() + '.' + mappedName[ FD ]
Line_5 $$ String name = clazz.getName() + '.' + mappedName-->Line_18 $$ if (regMethodName == null || (!regMethodName.equals(name) && regMethodName.length() <= name.length())) [ FD ]
Line_5 $$ String name = clazz.getName() + '.' + mappedName-->Line_22 $$ this.methodNameMap.put(method, name)[ FD ]
Line_18 $$ if (regMethodName == null || (!regMethodName.equals(name) && regMethodName.length() <= name.length())) -->Line_19 $$ if (logger.isDebugEnabled() && regMethodName != null) [ CD ]
Line_25 $$ if (logger.isDebugEnabled()) -->Line_26 $$ logger.debug("Keeping attribute for transactional method [" + method + "]: current name '" + name + "' is not more specific than '" + regMethodName + "'")[ CD ]
Line_2 $$ public void addTransactionalMethod(Class<?> clazz, String mappedName, TransactionAttribute attr) -->Line_5 $$ String name = clazz.getName() + '.' + mappedName[ CD ]
Line_2 $$ public void addTransactionalMethod(Class<?> clazz, String mappedName, TransactionAttribute attr) -->Line_13 $$ if (matchingMethods.isEmpty()) [ CD ]
Line_8 $$ for (Method method : methods) -->Line_17 $$ String regMethodName = this.methodNameMap.get(method)[ FD ]
Line_7 $$ List<Method> matchingMethods = new ArrayList<Method>()-->Line_13 $$ if (matchingMethods.isEmpty()) [ FD ]
Line_2 $$ public void addTransactionalMethod(Class<?> clazz, String mappedName, TransactionAttribute attr) -->Line_7 $$ List<Method> matchingMethods = new ArrayList<Method>()[ CD ]
Line_7 $$ List<Method> matchingMethods = new ArrayList<Method>()-->Line_10 $$ matchingMethods.add(method)[ FD ]
Line_19 $$ if (logger.isDebugEnabled() && regMethodName != null) -->Line_20 $$ logger.debug("Replacing attribute for transactional method [" + method + "]: current name '" + name + "' is more specific than '" + regMethodName + "'")[ CD ]
Line_8 $$ for (Method method : methods) -->Line_22 $$ this.methodNameMap.put(method, name)[ FD ]
Line_2 $$ public void addTransactionalMethod(Class<?> clazz, String mappedName, TransactionAttribute attr) -->Line_6 $$ Method[] methods = clazz.getDeclaredMethods()[ CD ]
Line_8 $$ for (Method method : methods) -->Line_23 $$ addTransactionalMethod(method, attr)[ FD ]
Line_17 $$ String regMethodName = this.methodNameMap.get(method)-->Line_18 $$ if (regMethodName == null || (!regMethodName.equals(name) && regMethodName.length() <= name.length())) [ FD ]
Line_2 $$ public void addTransactionalMethod(Class<?> clazz, String mappedName, TransactionAttribute attr) -->Line_3 $$ Assert.notNull(clazz, "Class must not be null")[ CD ]
Line_2 $$ public void addTransactionalMethod(Class<?> clazz, String mappedName, TransactionAttribute attr) -->Line_23 $$ addTransactionalMethod(method, attr)[ FD ]
Line_2 $$ public void addTransactionalMethod(Class<?> clazz, String mappedName, TransactionAttribute attr) -->Line_9 $$ if (isMatch(method.getName(), mappedName)) [ FD ]
Line_2 $$ public void addTransactionalMethod(Class<?> clazz, String mappedName, TransactionAttribute attr) -->Line_14 $$ throw new IllegalArgumentException("Couldn't find method '" + mappedName + "' on class [" + clazz.getName() + "]")[ FD ]
Line_18 $$ if (regMethodName == null || (!regMethodName.equals(name) && regMethodName.length() <= name.length())) -->Line_22 $$ this.methodNameMap.put(method, name)[ CD ]
Line_18 $$ if (regMethodName == null || (!regMethodName.equals(name) && regMethodName.length() <= name.length())) -->Line_25 $$ if (logger.isDebugEnabled()) [ CD ]
Line_8 $$ for (Method method : methods) -->Line_10 $$ matchingMethods.add(method)[ FD ]
Line_2 $$ public void addTransactionalMethod(Class<?> clazz, String mappedName, TransactionAttribute attr) -->Line_4 $$ Assert.notNull(mappedName, "Mapped name must not be null")[ CD ]
Line_18 $$ if (regMethodName == null || (!regMethodName.equals(name) && regMethodName.length() <= name.length())) -->Line_23 $$ addTransactionalMethod(method, attr)[ CD ]
Line_2 $$ public void addTransactionalMethod(Class<?> clazz, String mappedName, TransactionAttribute attr) -->Line_6 $$ Method[] methods = clazz.getDeclaredMethods()[ FD ]
Line_9 $$ if (isMatch(method.getName(), mappedName)) -->Line_10 $$ matchingMethods.add(method)[ CD ]
