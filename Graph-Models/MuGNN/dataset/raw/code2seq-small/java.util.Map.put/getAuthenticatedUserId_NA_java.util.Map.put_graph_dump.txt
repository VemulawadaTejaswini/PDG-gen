Line_2 $$ public long getAuthenticatedUserId(HttpServletRequest request, String login, String password, String authType) throws PortalException -->Line_25 $$ authType = company.getAuthType()[ FD ]
Line_2 $$ public long getAuthenticatedUserId(HttpServletRequest request, String login, String password, String authType) throws PortalException -->Line_7 $$ if (requestURI.startsWith(contextPath.concat("/api/liferay"))) [ CD ]
Line_29 $$ authResult = UserLocalServiceUtil.authenticateByEmailAddress(company.getCompanyId(), login, password, headerMap, parameterMap, resultsMap)-->Line_35 $$ authResult = UserLocalServiceUtil.authenticateByUserId(company.getCompanyId(), userId, password, headerMap, parameterMap, resultsMap)[ FD ]
Line_38 $$ User user = UserLocalServiceUtil.fetchUser(userId)-->Line_39 $$ if (user != null) [ FD ]
Line_2 $$ public long getAuthenticatedUserId(HttpServletRequest request, String login, String password, String authType) throws PortalException -->Line_34 $$ if (authType.equals(CompanyConstants.AUTH_TYPE_ID)) [ FD ]
Line_33 $$ userId = MapUtil.getLong(resultsMap, "userId", userId)-->Line_38 $$ User user = UserLocalServiceUtil.fetchUser(userId)[ FD ]
Line_15 $$ List<String> headers = new ArrayList()-->Line_20 $$ headerMap.put(name, headers.toArray(new String[headers.size()]))[ FD ]
Line_2 $$ public long getAuthenticatedUserId(HttpServletRequest request, String login, String password, String authType) throws PortalException -->Line_4 $$ Company company = PortalUtil.getCompany(request)[ FD ]
Line_2 $$ public long getAuthenticatedUserId(HttpServletRequest request, String login, String password, String authType) throws PortalException -->Line_11 $$ Enumeration<String> enu1 = request.getHeaderNames()[ FD ]
Line_27 $$ int authResult = Authenticator.FAILURE-->Line_29 $$ authResult = UserLocalServiceUtil.authenticateByEmailAddress(company.getCompanyId(), login, password, headerMap, parameterMap, resultsMap)[ FD ]
Line_2 $$ public long getAuthenticatedUserId(HttpServletRequest request, String login, String password, String authType) throws PortalException -->Line_6 $$ String contextPath = PortalUtil.getPathContext()[ CD ]
Line_14 $$ Enumeration<String> enu2 = request.getHeaders(name)-->Line_17 $$ String value = enu2.nextElement()[ FD ]
Line_2 $$ public long getAuthenticatedUserId(HttpServletRequest request, String login, String password, String authType) throws PortalException -->Line_29 $$ authResult = UserLocalServiceUtil.authenticateByEmailAddress(company.getCompanyId(), login, password, headerMap, parameterMap, resultsMap)[ FD ]
Line_23 $$ Map<String, Object> resultsMap = new HashMap()-->Line_32 $$ authResult = UserLocalServiceUtil.authenticateByScreenName(company.getCompanyId(), login, password, headerMap, parameterMap, resultsMap)[ FD ]
Line_15 $$ List<String> headers = new ArrayList()-->Line_18 $$ headers.add(value)[ FD ]
Line_3 $$ long userId = GetterUtil.getLong(login)-->Line_33 $$ userId = MapUtil.getLong(resultsMap, "userId", userId)[ FD ]
Line_10 $$ Map<String, String[]> headerMap = new HashMap()-->Line_29 $$ authResult = UserLocalServiceUtil.authenticateByEmailAddress(company.getCompanyId(), login, password, headerMap, parameterMap, resultsMap)[ FD ]
Line_37 $$ if (authResult != Authenticator.SUCCESS) -->Line_39 $$ if (user != null) [ CD ]
Line_2 $$ public long getAuthenticatedUserId(HttpServletRequest request, String login, String password, String authType) throws PortalException -->Line_5 $$ String requestURI = request.getRequestURI()[ CD ]
Line_13 $$ String name = enu1.nextElement()-->Line_20 $$ headerMap.put(name, headers.toArray(new String[headers.size()]))[ FD ]
Line_7 $$ if (requestURI.startsWith(contextPath.concat("/api/liferay"))) -->Line_22 $$ Map<String, String[]> parameterMap = request.getParameterMap()[ CD ]
Line_2 $$ public long getAuthenticatedUserId(HttpServletRequest request, String login, String password, String authType) throws PortalException -->Line_45 $$ return userId[ CD ]
Line_22 $$ Map<String, String[]> parameterMap = request.getParameterMap()-->Line_35 $$ authResult = UserLocalServiceUtil.authenticateByUserId(company.getCompanyId(), userId, password, headerMap, parameterMap, resultsMap)[ FD ]
Line_17 $$ String value = enu2.nextElement()-->Line_18 $$ headers.add(value)[ FD ]
Line_27 $$ int authResult = Authenticator.FAILURE-->Line_32 $$ authResult = UserLocalServiceUtil.authenticateByScreenName(company.getCompanyId(), login, password, headerMap, parameterMap, resultsMap)[ FD ]
Line_5 $$ String requestURI = request.getRequestURI()-->Line_7 $$ if (requestURI.startsWith(contextPath.concat("/api/liferay"))) [ FD ]
Line_29 $$ authResult = UserLocalServiceUtil.authenticateByEmailAddress(company.getCompanyId(), login, password, headerMap, parameterMap, resultsMap)-->Line_32 $$ authResult = UserLocalServiceUtil.authenticateByScreenName(company.getCompanyId(), login, password, headerMap, parameterMap, resultsMap)[ FD ]
Line_14 $$ Enumeration<String> enu2 = request.getHeaders(name)-->Line_16 $$ while (enu2.hasMoreElements()) [ FD ]
Line_16 $$ while (enu2.hasMoreElements()) -->Line_18 $$ headers.add(value)[ CD ]
Line_2 $$ public long getAuthenticatedUserId(HttpServletRequest request, String login, String password, String authType) throws PortalException -->Line_24 $$ if (Validator.isNull(authType)) [ FD ]
Line_3 $$ long userId = GetterUtil.getLong(login)-->Line_35 $$ authResult = UserLocalServiceUtil.authenticateByUserId(company.getCompanyId(), userId, password, headerMap, parameterMap, resultsMap)[ FD ]
Line_31 $$ if (authType.equals(CompanyConstants.AUTH_TYPE_SN)) -->Line_33 $$ userId = MapUtil.getLong(resultsMap, "userId", userId)[ CD ]
Line_31 $$ if (authType.equals(CompanyConstants.AUTH_TYPE_SN)) -->Line_32 $$ authResult = UserLocalServiceUtil.authenticateByScreenName(company.getCompanyId(), login, password, headerMap, parameterMap, resultsMap)[ CD ]
Line_25 $$ authType = company.getAuthType()-->Line_28 $$ if (authType.equals(CompanyConstants.AUTH_TYPE_EA)) [ FD ]
Line_25 $$ authType = company.getAuthType()-->Line_34 $$ if (authType.equals(CompanyConstants.AUTH_TYPE_ID)) [ FD ]
Line_4 $$ Company company = PortalUtil.getCompany(request)-->Line_35 $$ authResult = UserLocalServiceUtil.authenticateByUserId(company.getCompanyId(), userId, password, headerMap, parameterMap, resultsMap)[ FD ]
Line_28 $$ if (authType.equals(CompanyConstants.AUTH_TYPE_EA)) -->Line_29 $$ authResult = UserLocalServiceUtil.authenticateByEmailAddress(company.getCompanyId(), login, password, headerMap, parameterMap, resultsMap)[ CD ]
Line_22 $$ Map<String, String[]> parameterMap = request.getParameterMap()-->Line_32 $$ authResult = UserLocalServiceUtil.authenticateByScreenName(company.getCompanyId(), login, password, headerMap, parameterMap, resultsMap)[ FD ]
Line_3 $$ long userId = GetterUtil.getLong(login)-->Line_30 $$ userId = MapUtil.getLong(resultsMap, "userId", userId)[ FD ]
Line_30 $$ userId = MapUtil.getLong(resultsMap, "userId", userId)-->Line_35 $$ authResult = UserLocalServiceUtil.authenticateByUserId(company.getCompanyId(), userId, password, headerMap, parameterMap, resultsMap)[ FD ]
Line_29 $$ authResult = UserLocalServiceUtil.authenticateByEmailAddress(company.getCompanyId(), login, password, headerMap, parameterMap, resultsMap)-->Line_37 $$ if (authResult != Authenticator.SUCCESS) [ FD ]
Line_7 $$ if (requestURI.startsWith(contextPath.concat("/api/liferay"))) -->Line_23 $$ Map<String, Object> resultsMap = new HashMap()[ CD ]
Line_23 $$ Map<String, Object> resultsMap = new HashMap()-->Line_35 $$ authResult = UserLocalServiceUtil.authenticateByUserId(company.getCompanyId(), userId, password, headerMap, parameterMap, resultsMap)[ FD ]
Line_22 $$ Map<String, String[]> parameterMap = request.getParameterMap()-->Line_29 $$ authResult = UserLocalServiceUtil.authenticateByEmailAddress(company.getCompanyId(), login, password, headerMap, parameterMap, resultsMap)[ FD ]
Line_28 $$ if (authType.equals(CompanyConstants.AUTH_TYPE_EA)) -->Line_30 $$ userId = MapUtil.getLong(resultsMap, "userId", userId)[ CD ]
Line_11 $$ Enumeration<String> enu1 = request.getHeaderNames()-->Line_13 $$ String name = enu1.nextElement()[ FD ]
Line_2 $$ public long getAuthenticatedUserId(HttpServletRequest request, String login, String password, String authType) throws PortalException -->Line_3 $$ long userId = GetterUtil.getLong(login)[ FD ]
Line_10 $$ Map<String, String[]> headerMap = new HashMap()-->Line_35 $$ authResult = UserLocalServiceUtil.authenticateByUserId(company.getCompanyId(), userId, password, headerMap, parameterMap, resultsMap)[ FD ]
Line_13 $$ String name = enu1.nextElement()-->Line_14 $$ Enumeration<String> enu2 = request.getHeaders(name)[ FD ]
Line_4 $$ Company company = PortalUtil.getCompany(request)-->Line_32 $$ authResult = UserLocalServiceUtil.authenticateByScreenName(company.getCompanyId(), login, password, headerMap, parameterMap, resultsMap)[ FD ]
Line_30 $$ userId = MapUtil.getLong(resultsMap, "userId", userId)-->Line_38 $$ User user = UserLocalServiceUtil.fetchUser(userId)[ FD ]
Line_32 $$ authResult = UserLocalServiceUtil.authenticateByScreenName(company.getCompanyId(), login, password, headerMap, parameterMap, resultsMap)-->Line_37 $$ if (authResult != Authenticator.SUCCESS) [ FD ]
Line_2 $$ public long getAuthenticatedUserId(HttpServletRequest request, String login, String password, String authType) throws PortalException -->Line_32 $$ authResult = UserLocalServiceUtil.authenticateByScreenName(company.getCompanyId(), login, password, headerMap, parameterMap, resultsMap)[ FD ]
Line_23 $$ Map<String, Object> resultsMap = new HashMap()-->Line_29 $$ authResult = UserLocalServiceUtil.authenticateByEmailAddress(company.getCompanyId(), login, password, headerMap, parameterMap, resultsMap)[ FD ]
Line_27 $$ int authResult = Authenticator.FAILURE-->Line_37 $$ if (authResult != Authenticator.SUCCESS) [ FD ]
Line_7 $$ if (requestURI.startsWith(contextPath.concat("/api/liferay"))) -->Line_28 $$ if (authType.equals(CompanyConstants.AUTH_TYPE_EA)) [ CD ]
Line_2 $$ public long getAuthenticatedUserId(HttpServletRequest request, String login, String password, String authType) throws PortalException -->Line_31 $$ if (authType.equals(CompanyConstants.AUTH_TYPE_SN)) [ FD ]
Line_39 $$ if (user != null) -->Line_40 $$ UserLocalServiceUtil.checkLockout(user)[ CD ]
Line_7 $$ if (requestURI.startsWith(contextPath.concat("/api/liferay"))) -->Line_11 $$ Enumeration<String> enu1 = request.getHeaderNames()[ CD ]
Line_12 $$ while (enu1.hasMoreElements()) -->Line_16 $$ while (enu2.hasMoreElements()) [ CD ]
Line_28 $$ if (authType.equals(CompanyConstants.AUTH_TYPE_EA)) -->Line_31 $$ if (authType.equals(CompanyConstants.AUTH_TYPE_SN)) [ CD ]
Line_34 $$ if (authType.equals(CompanyConstants.AUTH_TYPE_ID)) -->Line_35 $$ authResult = UserLocalServiceUtil.authenticateByUserId(company.getCompanyId(), userId, password, headerMap, parameterMap, resultsMap)[ CD ]
Line_2 $$ public long getAuthenticatedUserId(HttpServletRequest request, String login, String password, String authType) throws PortalException -->Line_4 $$ Company company = PortalUtil.getCompany(request)[ CD ]
Line_2 $$ public long getAuthenticatedUserId(HttpServletRequest request, String login, String password, String authType) throws PortalException -->Line_35 $$ authResult = UserLocalServiceUtil.authenticateByUserId(company.getCompanyId(), userId, password, headerMap, parameterMap, resultsMap)[ FD ]
Line_12 $$ while (enu1.hasMoreElements()) -->Line_13 $$ String name = enu1.nextElement()[ CD ]
Line_7 $$ if (requestURI.startsWith(contextPath.concat("/api/liferay"))) -->Line_37 $$ if (authResult != Authenticator.SUCCESS) [ CD ]
Line_3 $$ long userId = GetterUtil.getLong(login)-->Line_38 $$ User user = UserLocalServiceUtil.fetchUser(userId)[ FD ]
Line_2 $$ public long getAuthenticatedUserId(HttpServletRequest request, String login, String password, String authType) throws PortalException -->Line_28 $$ if (authType.equals(CompanyConstants.AUTH_TYPE_EA)) [ FD ]
Line_12 $$ while (enu1.hasMoreElements()) -->Line_14 $$ Enumeration<String> enu2 = request.getHeaders(name)[ CD ]
Line_7 $$ if (requestURI.startsWith(contextPath.concat("/api/liferay"))) -->Line_10 $$ Map<String, String[]> headerMap = new HashMap()[ CD ]
Line_2 $$ public long getAuthenticatedUserId(HttpServletRequest request, String login, String password, String authType) throws PortalException -->Line_5 $$ String requestURI = request.getRequestURI()[ FD ]
Line_16 $$ while (enu2.hasMoreElements()) -->Line_17 $$ String value = enu2.nextElement()[ CD ]
Line_31 $$ if (authType.equals(CompanyConstants.AUTH_TYPE_SN)) -->Line_34 $$ if (authType.equals(CompanyConstants.AUTH_TYPE_ID)) [ CD ]
Line_4 $$ Company company = PortalUtil.getCompany(request)-->Line_25 $$ authType = company.getAuthType()[ FD ]
Line_6 $$ String contextPath = PortalUtil.getPathContext()-->Line_7 $$ if (requestURI.startsWith(contextPath.concat("/api/liferay"))) [ FD ]
Line_12 $$ while (enu1.hasMoreElements()) -->Line_20 $$ headerMap.put(name, headers.toArray(new String[headers.size()]))[ CD ]
Line_27 $$ int authResult = Authenticator.FAILURE-->Line_35 $$ authResult = UserLocalServiceUtil.authenticateByUserId(company.getCompanyId(), userId, password, headerMap, parameterMap, resultsMap)[ FD ]
Line_35 $$ authResult = UserLocalServiceUtil.authenticateByUserId(company.getCompanyId(), userId, password, headerMap, parameterMap, resultsMap)-->Line_37 $$ if (authResult != Authenticator.SUCCESS) [ FD ]
Line_4 $$ Company company = PortalUtil.getCompany(request)-->Line_29 $$ authResult = UserLocalServiceUtil.authenticateByEmailAddress(company.getCompanyId(), login, password, headerMap, parameterMap, resultsMap)[ FD ]
Line_23 $$ Map<String, Object> resultsMap = new HashMap()-->Line_33 $$ userId = MapUtil.getLong(resultsMap, "userId", userId)[ FD ]
Line_2 $$ public long getAuthenticatedUserId(HttpServletRequest request, String login, String password, String authType) throws PortalException -->Line_14 $$ Enumeration<String> enu2 = request.getHeaders(name)[ FD ]
Line_32 $$ authResult = UserLocalServiceUtil.authenticateByScreenName(company.getCompanyId(), login, password, headerMap, parameterMap, resultsMap)-->Line_35 $$ authResult = UserLocalServiceUtil.authenticateByUserId(company.getCompanyId(), userId, password, headerMap, parameterMap, resultsMap)[ FD ]
Line_10 $$ Map<String, String[]> headerMap = new HashMap()-->Line_20 $$ headerMap.put(name, headers.toArray(new String[headers.size()]))[ FD ]
Line_7 $$ if (requestURI.startsWith(contextPath.concat("/api/liferay"))) -->Line_24 $$ if (Validator.isNull(authType)) [ CD ]
Line_37 $$ if (authResult != Authenticator.SUCCESS) -->Line_38 $$ User user = UserLocalServiceUtil.fetchUser(userId)[ CD ]
Line_38 $$ User user = UserLocalServiceUtil.fetchUser(userId)-->Line_40 $$ UserLocalServiceUtil.checkLockout(user)[ FD ]
Line_2 $$ public long getAuthenticatedUserId(HttpServletRequest request, String login, String password, String authType) throws PortalException -->Line_22 $$ Map<String, String[]> parameterMap = request.getParameterMap()[ FD ]
Line_24 $$ if (Validator.isNull(authType)) -->Line_25 $$ authType = company.getAuthType()[ CD ]
Line_25 $$ authType = company.getAuthType()-->Line_31 $$ if (authType.equals(CompanyConstants.AUTH_TYPE_SN)) [ FD ]
Line_30 $$ userId = MapUtil.getLong(resultsMap, "userId", userId)-->Line_33 $$ userId = MapUtil.getLong(resultsMap, "userId", userId)[ FD ]
Line_7 $$ if (requestURI.startsWith(contextPath.concat("/api/liferay"))) -->Line_12 $$ while (enu1.hasMoreElements()) [ CD ]
Line_10 $$ Map<String, String[]> headerMap = new HashMap()-->Line_32 $$ authResult = UserLocalServiceUtil.authenticateByScreenName(company.getCompanyId(), login, password, headerMap, parameterMap, resultsMap)[ FD ]
Line_11 $$ Enumeration<String> enu1 = request.getHeaderNames()-->Line_12 $$ while (enu1.hasMoreElements()) [ FD ]
Line_2 $$ public long getAuthenticatedUserId(HttpServletRequest request, String login, String password, String authType) throws PortalException -->Line_3 $$ long userId = GetterUtil.getLong(login)[ CD ]
Line_7 $$ if (requestURI.startsWith(contextPath.concat("/api/liferay"))) -->Line_27 $$ int authResult = Authenticator.FAILURE[ CD ]
Line_23 $$ Map<String, Object> resultsMap = new HashMap()-->Line_30 $$ userId = MapUtil.getLong(resultsMap, "userId", userId)[ FD ]
Line_12 $$ while (enu1.hasMoreElements()) -->Line_15 $$ List<String> headers = new ArrayList()[ CD ]
Line_33 $$ userId = MapUtil.getLong(resultsMap, "userId", userId)-->Line_35 $$ authResult = UserLocalServiceUtil.authenticateByUserId(company.getCompanyId(), userId, password, headerMap, parameterMap, resultsMap)[ FD ]
