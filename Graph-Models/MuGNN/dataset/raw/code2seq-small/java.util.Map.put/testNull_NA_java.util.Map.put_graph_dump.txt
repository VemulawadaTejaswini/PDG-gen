Line_6 $$ Map<Double, Double> expected = new LinkedHashMap()-->Line_10 $$ assertAggregation(doubleDouble, 1.0, expected, createDoublesBlock(1.0, 2.0, 3.0), createDoublesBlock(null, null, null))[ FD ]
Line_2 $$ public void testNull() throws Exception -->Line_8 $$ expected.put(2.0, null)[ CD ]
Line_2 $$ public void testNull() throws Exception -->Line_6 $$ Map<Double, Double> expected = new LinkedHashMap()[ CD ]
Line_2 $$ public void testNull() throws Exception -->Line_5 $$ assertAggregation(doubleDouble, 1.0, null, createDoublesBlock(null, null, null), createDoublesBlock(2.0, 3.0, 4.0))[ CD ]
Line_6 $$ Map<Double, Double> expected = new LinkedHashMap()-->Line_8 $$ expected.put(2.0, null)[ FD ]
Line_2 $$ public void testNull() throws Exception -->Line_9 $$ expected.put(3.0, null)[ CD ]
Line_6 $$ Map<Double, Double> expected = new LinkedHashMap()-->Line_9 $$ expected.put(3.0, null)[ FD ]
Line_3 $$ InternalAggregationFunction doubleDouble = metadata.getFunctionRegistry().getAggregateFunctionImplementation(new Signature(NAME, AGGREGATE, new MapType(DOUBLE, DOUBLE).getTypeSignature().toString(), StandardTypes.DOUBLE, StandardTypes.DOUBLE))-->Line_5 $$ assertAggregation(doubleDouble, 1.0, null, createDoublesBlock(null, null, null), createDoublesBlock(2.0, 3.0, 4.0))[ FD ]
Line_3 $$ InternalAggregationFunction doubleDouble = metadata.getFunctionRegistry().getAggregateFunctionImplementation(new Signature(NAME, AGGREGATE, new MapType(DOUBLE, DOUBLE).getTypeSignature().toString(), StandardTypes.DOUBLE, StandardTypes.DOUBLE))-->Line_10 $$ assertAggregation(doubleDouble, 1.0, expected, createDoublesBlock(1.0, 2.0, 3.0), createDoublesBlock(null, null, null))[ FD ]
Line_6 $$ Map<Double, Double> expected = new LinkedHashMap()-->Line_7 $$ expected.put(1.0, null)[ FD ]
Line_2 $$ public void testNull() throws Exception -->Line_3 $$ InternalAggregationFunction doubleDouble = metadata.getFunctionRegistry().getAggregateFunctionImplementation(new Signature(NAME, AGGREGATE, new MapType(DOUBLE, DOUBLE).getTypeSignature().toString(), StandardTypes.DOUBLE, StandardTypes.DOUBLE))[ CD ]
Line_2 $$ public void testNull() throws Exception -->Line_10 $$ assertAggregation(doubleDouble, 1.0, expected, createDoublesBlock(1.0, 2.0, 3.0), createDoublesBlock(null, null, null))[ CD ]
Line_2 $$ public void testNull() throws Exception -->Line_7 $$ expected.put(1.0, null)[ CD ]
Line_3 $$ InternalAggregationFunction doubleDouble = metadata.getFunctionRegistry().getAggregateFunctionImplementation(new Signature(NAME, AGGREGATE, new MapType(DOUBLE, DOUBLE).getTypeSignature().toString(), StandardTypes.DOUBLE, StandardTypes.DOUBLE))-->Line_4 $$ assertAggregation(doubleDouble, 1.0, ImmutableMap.of(1.0, 2.0), createDoublesBlock(1.0, null, null), createDoublesBlock(2.0, 3.0, 4.0))[ FD ]
Line_2 $$ public void testNull() throws Exception -->Line_4 $$ assertAggregation(doubleDouble, 1.0, ImmutableMap.of(1.0, 2.0), createDoublesBlock(1.0, null, null), createDoublesBlock(2.0, 3.0, 4.0))[ CD ]
