Line_7 $$ Node next = myNextNodes.get(node)-->Line_9 $$ if (next != null) [ FD ]
Line_7 $$ Node next = myNextNodes.get(node)-->Line_10 $$ myHeaps.put(node, myHeaps.get(next))[ FD ]
Line_14 $$ final Heap<Node> nextHeap = myHeaps.get(next)-->Line_15 $$ if (nextHeap == null) [ FD ]
Line_15 $$ if (nextHeap == null) -->Line_16 $$ myHeaps.put(node, new Heap<Node>(outRoot))[ CD ]
Line_4 $$ for (Node node : mySortedNodes) -->Line_16 $$ myHeaps.put(node, new Heap<Node>(outRoot))[ FD ]
Line_7 $$ Node next = myNextNodes.get(node)-->Line_14 $$ final Heap<Node> nextHeap = myHeaps.get(next)[ FD ]
Line_6 $$ HeapNode<Node> outRoot = myOutRoots.get(node)-->Line_19 $$ final Heap<Node> tHeap = nextHeap.insert(outRoot)[ FD ]
Line_4 $$ for (Node node : mySortedNodes) -->Line_7 $$ Node next = myNextNodes.get(node)[ FD ]
Line_4 $$ for (Node node : mySortedNodes) -->Line_10 $$ myHeaps.put(node, myHeaps.get(next))[ FD ]
Line_9 $$ if (next != null) -->Line_10 $$ myHeaps.put(node, myHeaps.get(next))[ CD ]
Line_19 $$ final Heap<Node> tHeap = nextHeap.insert(outRoot)-->Line_20 $$ myHeaps.put(node, tHeap)[ FD ]
Line_14 $$ final Heap<Node> nextHeap = myHeaps.get(next)-->Line_19 $$ final Heap<Node> tHeap = nextHeap.insert(outRoot)[ FD ]
Line_8 $$ if (outRoot == null) -->Line_9 $$ if (next != null) [ CD ]
Line_4 $$ for (Node node : mySortedNodes) -->Line_6 $$ HeapNode<Node> outRoot = myOutRoots.get(node)[ FD ]
Line_6 $$ HeapNode<Node> outRoot = myOutRoots.get(node)-->Line_8 $$ if (outRoot == null) [ FD ]
Line_4 $$ for (Node node : mySortedNodes) -->Line_20 $$ myHeaps.put(node, tHeap)[ FD ]
