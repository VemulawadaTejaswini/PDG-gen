Line_13 $$ String groupName = description.getGroupName()-->Line_23 $$ Set<String> foundHits = result.get(groupName)[ FD ]
Line_9 $$ Set<OptionDescription> configs = getAcceptableDescriptions(opt)-->Line_10 $$ if (configs == null)[ FD ]
Line_2 $$ public Map<String, Set<String>> findPossibleExtension(@NotNull String prefix, final Project project) -->Line_32 $$ if (count > LOAD_FACTOR) [ CD ]
Line_5 $$ final Map<String, Set<String>> result = new THashMap<String, Set<String>>()-->Line_26 $$ result.put(groupName, foundHits)[ FD ]
Line_5 $$ final Map<String, Set<String>> result = new THashMap<String, Set<String>>()-->Line_33 $$ result.clear()[ FD ]
Line_2 $$ public Map<String, Set<String>> findPossibleExtension(@NotNull String prefix, final Project project) -->Line_3 $$ loadHugeFilesIfNecessary()[ CD ]
Line_8 $$ for (String opt : prefixes) -->Line_9 $$ Set<OptionDescription> configs = getAcceptableDescriptions(opt)[ FD ]
Line_20 $$ groupName = ApplicationBundle.message("title.global.code.style")-->Line_23 $$ Set<String> foundHits = result.get(groupName)[ FD ]
Line_16 $$ groupName = ApplicationBundle.message("title.project.code.style")-->Line_23 $$ Set<String> foundHits = result.get(groupName)[ FD ]
Line_13 $$ String groupName = description.getGroupName()-->Line_26 $$ result.put(groupName, foundHits)[ FD ]
Line_13 $$ String groupName = description.getGroupName()-->Line_20 $$ groupName = ApplicationBundle.message("title.global.code.style")[ FD ]
Line_23 $$ Set<String> foundHits = result.get(groupName)-->Line_28 $$ foundHits.add(description.getHit())[ FD ]
Line_6 $$ int count = 0-->Line_32 $$ if (count > LOAD_FACTOR) [ FD ]
Line_24 $$ if (foundHits == null) -->Line_25 $$ foundHits = new THashSet<String>()[ CD ]
Line_2 $$ public Map<String, Set<String>> findPossibleExtension(@NotNull String prefix, final Project project) -->Line_4 $$ final boolean perProject = CodeStyleFacade.getInstance(project).projectUsesOwnSettings()[ CD ]
Line_16 $$ groupName = ApplicationBundle.message("title.project.code.style")-->Line_26 $$ result.put(groupName, foundHits)[ FD ]
Line_16 $$ groupName = ApplicationBundle.message("title.project.code.style")-->Line_20 $$ groupName = ApplicationBundle.message("title.global.code.style")[ FD ]
Line_13 $$ String groupName = description.getGroupName()-->Line_19 $$ if (Comparing.strEqual(groupName, ApplicationBundle.message("title.project.code.style"))) [ FD ]
Line_5 $$ final Map<String, Set<String>> result = new THashMap<String, Set<String>>()-->Line_23 $$ Set<String> foundHits = result.get(groupName)[ FD ]
Line_32 $$ if (count > LOAD_FACTOR) -->Line_33 $$ result.clear()[ CD ]
Line_12 $$ for (OptionDescription description : configs) -->Line_13 $$ String groupName = description.getGroupName()[ FD ]
Line_2 $$ public Map<String, Set<String>> findPossibleExtension(@NotNull String prefix, final Project project) -->Line_7 $$ final Set<String> prefixes = getProcessedWordsWithoutStemming(prefix)[ CD ]
Line_2 $$ public Map<String, Set<String>> findPossibleExtension(@NotNull String prefix, final Project project) -->Line_6 $$ int count = 0[ CD ]
Line_13 $$ String groupName = description.getGroupName()-->Line_15 $$ if (Comparing.strEqual(groupName, ApplicationBundle.message("title.global.code.style"))) [ FD ]
Line_15 $$ if (Comparing.strEqual(groupName, ApplicationBundle.message("title.global.code.style"))) -->Line_16 $$ groupName = ApplicationBundle.message("title.project.code.style")[ CD ]
Line_16 $$ groupName = ApplicationBundle.message("title.project.code.style")-->Line_19 $$ if (Comparing.strEqual(groupName, ApplicationBundle.message("title.project.code.style"))) [ FD ]
Line_2 $$ public Map<String, Set<String>> findPossibleExtension(@NotNull String prefix, final Project project) -->Line_4 $$ final boolean perProject = CodeStyleFacade.getInstance(project).projectUsesOwnSettings()[ FD ]
Line_25 $$ foundHits = new THashSet<String>()-->Line_28 $$ foundHits.add(description.getHit())[ FD ]
Line_23 $$ Set<String> foundHits = result.get(groupName)-->Line_24 $$ if (foundHits == null) [ FD ]
Line_23 $$ Set<String> foundHits = result.get(groupName)-->Line_25 $$ foundHits = new THashSet<String>()[ FD ]
Line_23 $$ Set<String> foundHits = result.get(groupName)-->Line_26 $$ result.put(groupName, foundHits)[ FD ]
Line_12 $$ for (OptionDescription description : configs) -->Line_28 $$ foundHits.add(description.getHit())[ FD ]
Line_6 $$ int count = 0-->Line_29 $$ count++[ FD ]
Line_24 $$ if (foundHits == null) -->Line_26 $$ result.put(groupName, foundHits)[ CD ]
Line_25 $$ foundHits = new THashSet<String>()-->Line_26 $$ result.put(groupName, foundHits)[ FD ]
Line_20 $$ groupName = ApplicationBundle.message("title.global.code.style")-->Line_26 $$ result.put(groupName, foundHits)[ FD ]
Line_2 $$ public Map<String, Set<String>> findPossibleExtension(@NotNull String prefix, final Project project) -->Line_35 $$ return result[ CD ]
Line_2 $$ public Map<String, Set<String>> findPossibleExtension(@NotNull String prefix, final Project project) -->Line_5 $$ final Map<String, Set<String>> result = new THashMap<String, Set<String>>()[ CD ]
Line_2 $$ public Map<String, Set<String>> findPossibleExtension(@NotNull String prefix, final Project project) -->Line_7 $$ final Set<String> prefixes = getProcessedWordsWithoutStemming(prefix)[ FD ]
Line_14 $$ if (perProject) -->Line_15 $$ if (Comparing.strEqual(groupName, ApplicationBundle.message("title.global.code.style"))) [ CD ]
Line_19 $$ if (Comparing.strEqual(groupName, ApplicationBundle.message("title.project.code.style"))) -->Line_20 $$ groupName = ApplicationBundle.message("title.global.code.style")[ CD ]
Line_14 $$ if (perProject) -->Line_19 $$ if (Comparing.strEqual(groupName, ApplicationBundle.message("title.project.code.style"))) [ CD ]
Line_13 $$ String groupName = description.getGroupName()-->Line_16 $$ groupName = ApplicationBundle.message("title.project.code.style")[ FD ]
