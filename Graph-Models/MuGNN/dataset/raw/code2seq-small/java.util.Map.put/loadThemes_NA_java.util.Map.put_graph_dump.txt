Line_7 $$ if (files == null) -->Line_8 $$ if (_log.isWarnEnabled()) [ CD ]
Line_17 $$ File liferayLookAndFeelXML = new File(files[i] + "/liferay-look-and-feel.xml")-->Line_21 $$ long lastModified = liferayLookAndFeelXML.lastModified()[ FD ]
Line_22 $$ if ((prevLastModified == null) || (prevLastModified.longValue() < lastModified)) -->Line_26 $$ if (_log.isDebugEnabled()) [ CD ]
Line_14 $$ if (_log.isDebugEnabled()) -->Line_15 $$ _log.debug("Process directory " + files[i])[ CD ]
Line_7 $$ if (files == null) -->Line_11 $$ return[ CD ]
Line_22 $$ if ((prevLastModified == null) || (prevLastModified.longValue() < lastModified)) -->Line_23 $$ registerTheme(liferayLookAndFeelXML)[ CD ]
Line_31 $$ if (_log.isWarnEnabled()) -->Line_32 $$ _log.warn(liferayLookAndFeelXML + " does not exist")[ CD ]
Line_21 $$ long lastModified = liferayLookAndFeelXML.lastModified()-->Line_24 $$ _lastModifiedMap.put(lastModifiedKey, lastModified)[ FD ]
Line_6 $$ File[] files = _fileStorage.listFiles()-->Line_7 $$ if (files == null) [ FD ]
Line_13 $$ for (int i = 0; i < files.length; i++) -->Line_14 $$ if (_log.isDebugEnabled()) [ CD ]
Line_17 $$ File liferayLookAndFeelXML = new File(files[i] + "/liferay-look-and-feel.xml")-->Line_18 $$ if (liferayLookAndFeelXML.exists()) [ FD ]
Line_3 $$ if (_log.isInfoEnabled()) -->Line_4 $$ _log.info("Loading themes in " + _fileStorage)[ CD ]
Line_13 $$ for (int i = 0; i < files.length; i++) -->Line_18 $$ if (liferayLookAndFeelXML.exists()) [ CD ]
Line_20 $$ Long prevLastModified = _lastModifiedMap.get(lastModifiedKey)-->Line_22 $$ if ((prevLastModified == null) || (prevLastModified.longValue() < lastModified)) [ FD ]
Line_2 $$ public synchronized void loadThemes() -->Line_3 $$ if (_log.isInfoEnabled()) [ CD ]
Line_18 $$ if (liferayLookAndFeelXML.exists()) -->Line_20 $$ Long prevLastModified = _lastModifiedMap.get(lastModifiedKey)[ CD ]
Line_17 $$ File liferayLookAndFeelXML = new File(files[i] + "/liferay-look-and-feel.xml")-->Line_23 $$ registerTheme(liferayLookAndFeelXML)[ FD ]
Line_2 $$ public synchronized void loadThemes() -->Line_7 $$ if (files == null) [ CD ]
Line_18 $$ if (liferayLookAndFeelXML.exists()) -->Line_19 $$ String lastModifiedKey = liferayLookAndFeelXML.toString()[ CD ]
Line_22 $$ if ((prevLastModified == null) || (prevLastModified.longValue() < lastModified)) -->Line_24 $$ _lastModifiedMap.put(lastModifiedKey, lastModified)[ CD ]
Line_18 $$ if (liferayLookAndFeelXML.exists()) -->Line_31 $$ if (_log.isWarnEnabled()) [ CD ]
Line_17 $$ File liferayLookAndFeelXML = new File(files[i] + "/liferay-look-and-feel.xml")-->Line_19 $$ String lastModifiedKey = liferayLookAndFeelXML.toString()[ FD ]
Line_13 $$ for (int i = 0; i < files.length; i++) -->Line_17 $$ File liferayLookAndFeelXML = new File(files[i] + "/liferay-look-and-feel.xml")[ CD ]
Line_18 $$ if (liferayLookAndFeelXML.exists()) -->Line_22 $$ if ((prevLastModified == null) || (prevLastModified.longValue() < lastModified)) [ CD ]
Line_26 $$ if (_log.isDebugEnabled()) -->Line_27 $$ _log.debug("Do not refresh " + liferayLookAndFeelXML + " because it is has not been modified")[ CD ]
Line_2 $$ public synchronized void loadThemes() -->Line_13 $$ for (int i = 0; i < files.length; i++) [ CD ]
Line_19 $$ String lastModifiedKey = liferayLookAndFeelXML.toString()-->Line_24 $$ _lastModifiedMap.put(lastModifiedKey, lastModified)[ FD ]
Line_18 $$ if (liferayLookAndFeelXML.exists()) -->Line_21 $$ long lastModified = liferayLookAndFeelXML.lastModified()[ CD ]
Line_19 $$ String lastModifiedKey = liferayLookAndFeelXML.toString()-->Line_20 $$ Long prevLastModified = _lastModifiedMap.get(lastModifiedKey)[ FD ]
Line_8 $$ if (_log.isWarnEnabled()) -->Line_9 $$ _log.warn("There are no directories to process for " + _fileStorage)[ CD ]
Line_2 $$ public synchronized void loadThemes() -->Line_6 $$ File[] files = _fileStorage.listFiles()[ CD ]
