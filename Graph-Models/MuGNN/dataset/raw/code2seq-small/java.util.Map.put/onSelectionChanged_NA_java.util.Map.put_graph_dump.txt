Line_15 $$ ServersTreeStructure.LogProvidingNode logNode = (ServersTreeStructure.LogProvidingNode) node-->Line_16 $$ JComponent logComponent = logNode.getComponent()[ FD ]
Line_17 $$ if (logComponent != null) -->Line_18 $$ String cardName = logNode.getLogId()[ CD ]
Line_10 $$ if (Comparing.equal(node, myLastSelection)) -->Line_11 $$ return[ CD ]
Line_20 $$ if (!logComponent.equals(oldComponent)) -->Line_25 $$ myPropertiesPanel.add(cardName, logComponent)[ CD ]
Line_14 $$ if (node instanceof ServersTreeStructure.LogProvidingNode) -->Line_17 $$ if (logComponent != null) [ CD ]
Line_14 $$ if (node instanceof ServersTreeStructure.LogProvidingNode) -->Line_31 $$ if (node instanceof ServersTreeStructure.RemoteServerNode) [ CD ]
Line_31 $$ if (node instanceof ServersTreeStructure.RemoteServerNode) -->Line_34 $$ showMessageLabel("")[ CD ]
Line_20 $$ if (!logComponent.equals(oldComponent)) -->Line_21 $$ myLogComponents.put(cardName, logComponent)[ CD ]
Line_15 $$ ServersTreeStructure.LogProvidingNode logNode = (ServersTreeStructure.LogProvidingNode) node-->Line_18 $$ String cardName = logNode.getLogId()[ FD ]
Line_17 $$ if (logComponent != null) -->Line_27 $$ myPropertiesPanelLayout.show(myPropertiesPanel, cardName)[ CD ]
Line_9 $$ AbstractTreeNode<?> node = nodes.iterator().next()-->Line_31 $$ if (node instanceof ServersTreeStructure.RemoteServerNode) [ FD ]
Line_2 $$ private void onSelectionChanged() -->Line_9 $$ AbstractTreeNode<?> node = nodes.iterator().next()[ CD ]
Line_16 $$ JComponent logComponent = logNode.getComponent()-->Line_25 $$ myPropertiesPanel.add(cardName, logComponent)[ FD ]
Line_4 $$ if (nodes.size() != 1) -->Line_7 $$ return[ CD ]
Line_2 $$ private void onSelectionChanged() -->Line_10 $$ if (Comparing.equal(node, myLastSelection)) [ CD ]
Line_2 $$ private void onSelectionChanged() -->Line_3 $$ Set<AbstractTreeNode> nodes = myBuilder.getSelectedElements(AbstractTreeNode.class)[ CD ]
Line_14 $$ if (node instanceof ServersTreeStructure.LogProvidingNode) -->Line_15 $$ ServersTreeStructure.LogProvidingNode logNode = (ServersTreeStructure.LogProvidingNode) node[ CD ]
Line_17 $$ if (logComponent != null) -->Line_20 $$ if (!logComponent.equals(oldComponent)) [ CD ]
Line_3 $$ Set<AbstractTreeNode> nodes = myBuilder.getSelectedElements(AbstractTreeNode.class)-->Line_9 $$ AbstractTreeNode<?> node = nodes.iterator().next()[ FD ]
Line_18 $$ String cardName = logNode.getLogId()-->Line_21 $$ myLogComponents.put(cardName, logComponent)[ FD ]
Line_31 $$ if (node instanceof ServersTreeStructure.RemoteServerNode) -->Line_32 $$ updateServerDetails((ServersTreeStructure.RemoteServerNode) node)[ CD ]
Line_19 $$ JComponent oldComponent = myLogComponents.get(cardName)-->Line_20 $$ if (!logComponent.equals(oldComponent)) [ FD ]
Line_14 $$ if (node instanceof ServersTreeStructure.LogProvidingNode) -->Line_16 $$ JComponent logComponent = logNode.getComponent()[ CD ]
Line_17 $$ if (logComponent != null) -->Line_19 $$ JComponent oldComponent = myLogComponents.get(cardName)[ CD ]
Line_19 $$ JComponent oldComponent = myLogComponents.get(cardName)-->Line_22 $$ if (oldComponent != null) [ FD ]
Line_18 $$ String cardName = logNode.getLogId()-->Line_19 $$ JComponent oldComponent = myLogComponents.get(cardName)[ FD ]
Line_4 $$ if (nodes.size() != 1) -->Line_5 $$ showMessageLabel(EMPTY_SELECTION_MESSAGE)[ CD ]
Line_2 $$ private void onSelectionChanged() -->Line_14 $$ if (node instanceof ServersTreeStructure.LogProvidingNode) [ CD ]
Line_22 $$ if (oldComponent != null) -->Line_23 $$ myPropertiesPanel.remove(oldComponent)[ CD ]
Line_16 $$ JComponent logComponent = logNode.getComponent()-->Line_20 $$ if (!logComponent.equals(oldComponent)) [ FD ]
Line_16 $$ JComponent logComponent = logNode.getComponent()-->Line_21 $$ myLogComponents.put(cardName, logComponent)[ FD ]
Line_20 $$ if (!logComponent.equals(oldComponent)) -->Line_22 $$ if (oldComponent != null) [ CD ]
Line_18 $$ String cardName = logNode.getLogId()-->Line_25 $$ myPropertiesPanel.add(cardName, logComponent)[ FD ]
Line_17 $$ if (logComponent != null) -->Line_29 $$ showMessageLabel("")[ CD ]
Line_2 $$ private void onSelectionChanged() -->Line_4 $$ if (nodes.size() != 1) [ CD ]
Line_18 $$ String cardName = logNode.getLogId()-->Line_27 $$ myPropertiesPanelLayout.show(myPropertiesPanel, cardName)[ FD ]
Line_9 $$ AbstractTreeNode<?> node = nodes.iterator().next()-->Line_14 $$ if (node instanceof ServersTreeStructure.LogProvidingNode) [ FD ]
Line_3 $$ Set<AbstractTreeNode> nodes = myBuilder.getSelectedElements(AbstractTreeNode.class)-->Line_4 $$ if (nodes.size() != 1) [ FD ]
Line_16 $$ JComponent logComponent = logNode.getComponent()-->Line_17 $$ if (logComponent != null) [ FD ]
Line_9 $$ AbstractTreeNode<?> node = nodes.iterator().next()-->Line_10 $$ if (Comparing.equal(node, myLastSelection)) [ FD ]
Line_19 $$ JComponent oldComponent = myLogComponents.get(cardName)-->Line_23 $$ myPropertiesPanel.remove(oldComponent)[ FD ]
