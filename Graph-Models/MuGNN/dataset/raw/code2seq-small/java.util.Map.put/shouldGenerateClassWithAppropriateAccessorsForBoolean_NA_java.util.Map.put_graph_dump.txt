Line_2 $$ public void shouldGenerateClassWithAppropriateAccessorsForBoolean() throws Exception -->Line_6 $$ properties.put("checkbox", Boolean.class)[ CD ]
Line_2 $$ public void shouldGenerateClassWithAppropriateAccessorsForBoolean() throws Exception -->Line_7 $$ Class testClass = MapProxyTool.classForName("TestClass3", properties, new ClassLoaderServiceImpl())[ CD ]
Line_2 $$ public void shouldGenerateClassWithAppropriateAccessorsForBoolean() throws Exception -->Line_9 $$ Getter getter = ReflectionTools.getGetter(testClass, "checkbox", "property", serviceRegistry)[ CD ]
Line_2 $$ public void shouldGenerateClassWithAppropriateAccessorsForBoolean() throws Exception -->Line_8 $$ Object testClassInstance = testClass.getConstructor(Map.class).newInstance(map)[ CD ]
Line_3 $$ Map<String, Object> map = new HashMap<String, Object>()-->Line_4 $$ map.put("checkbox", true)[ FD ]
Line_3 $$ Map<String, Object> map = new HashMap<String, Object>()-->Line_8 $$ Object testClassInstance = testClass.getConstructor(Map.class).newInstance(map)[ FD ]
Line_5 $$ Map<String, Class<?>> properties = new HashMap<String, Class<?>>()-->Line_6 $$ properties.put("checkbox", Boolean.class)[ FD ]
Line_2 $$ public void shouldGenerateClassWithAppropriateAccessorsForBoolean() throws Exception -->Line_4 $$ map.put("checkbox", true)[ CD ]
Line_7 $$ Class testClass = MapProxyTool.classForName("TestClass3", properties, new ClassLoaderServiceImpl())-->Line_8 $$ Object testClassInstance = testClass.getConstructor(Map.class).newInstance(map)[ FD ]
Line_7 $$ Class testClass = MapProxyTool.classForName("TestClass3", properties, new ClassLoaderServiceImpl())-->Line_9 $$ Getter getter = ReflectionTools.getGetter(testClass, "checkbox", "property", serviceRegistry)[ FD ]
Line_2 $$ public void shouldGenerateClassWithAppropriateAccessorsForBoolean() throws Exception -->Line_10 $$ Assert.assertTrue((Boolean) getter.get(testClassInstance))[ CD ]
Line_5 $$ Map<String, Class<?>> properties = new HashMap<String, Class<?>>()-->Line_7 $$ Class testClass = MapProxyTool.classForName("TestClass3", properties, new ClassLoaderServiceImpl())[ FD ]
Line_2 $$ public void shouldGenerateClassWithAppropriateAccessorsForBoolean() throws Exception -->Line_5 $$ Map<String, Class<?>> properties = new HashMap<String, Class<?>>()[ CD ]
Line_9 $$ Getter getter = ReflectionTools.getGetter(testClass, "checkbox", "property", serviceRegistry)-->Line_10 $$ Assert.assertTrue((Boolean) getter.get(testClassInstance))[ FD ]
Line_2 $$ public void shouldGenerateClassWithAppropriateAccessorsForBoolean() throws Exception -->Line_3 $$ Map<String, Object> map = new HashMap<String, Object>()[ CD ]
Line_8 $$ Object testClassInstance = testClass.getConstructor(Map.class).newInstance(map)-->Line_10 $$ Assert.assertTrue((Boolean) getter.get(testClassInstance))[ FD ]
