Line_5 $$ Map<String, String> input = new HashMap<String, String>()-->Line_7 $$ input.put("6", "7")[ FD ]
Line_4 $$ BeanWrapper bw = new BeanWrapperImpl(gb)-->Line_8 $$ bw.setPropertyValue("shortMap", input)[ FD ]
Line_5 $$ Map<String, String> input = new HashMap<String, String>()-->Line_6 $$ input.put("4", "5")[ FD ]
Line_2 $$ public void testGenericMap() -->Line_7 $$ input.put("6", "7")[ CD ]
Line_2 $$ public void testGenericMap() -->Line_6 $$ input.put("4", "5")[ CD ]
Line_2 $$ public void testGenericMap() -->Line_8 $$ bw.setPropertyValue("shortMap", input)[ CD ]
Line_5 $$ Map<String, String> input = new HashMap<String, String>()-->Line_8 $$ bw.setPropertyValue("shortMap", input)[ FD ]
Line_2 $$ public void testGenericMap() -->Line_4 $$ BeanWrapper bw = new BeanWrapperImpl(gb)[ CD ]
Line_2 $$ public void testGenericMap() -->Line_9 $$ assertEquals(new Integer(5), gb.getShortMap().get(new Short("4")))[ CD ]
Line_2 $$ public void testGenericMap() -->Line_3 $$ GenericBean<?> gb = new GenericBean<Object>()[ CD ]
Line_2 $$ public void testGenericMap() -->Line_10 $$ assertEquals(new Integer(7), gb.getShortMap().get(new Short("6")))[ CD ]
Line_2 $$ public void testGenericMap() -->Line_5 $$ Map<String, String> input = new HashMap<String, String>()[ CD ]
Line_3 $$ GenericBean<?> gb = new GenericBean<Object>()-->Line_9 $$ assertEquals(new Integer(5), gb.getShortMap().get(new Short("4")))[ FD ]
Line_3 $$ GenericBean<?> gb = new GenericBean<Object>()-->Line_10 $$ assertEquals(new Integer(7), gb.getShortMap().get(new Short("6")))[ FD ]
