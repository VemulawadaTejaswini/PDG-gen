Line_16 $$ SearchRequestBuilder searchRequestBuilder = client().prepareSearch().setSize(COUNT).setQuery(termQuery("field1", "test")).highlighter(new HighlightBuilder().field("field1"))-->Line_17 $$ SearchResponse searchResponse = searchRequestBuilder.get()[ FD ]
Line_9 $$ String prefix = randomAsciiOfLengthBetween(5, 30)-->Line_10 $$ prefixes.put(String.valueOf(i), prefix)[ FD ]
Line_2 $$ public void testPostingsHighlighterManyDocs() throws Exception -->Line_8 $$ for (int i = 0; i < COUNT; i++) [ CD ]
Line_2 $$ public void testPostingsHighlighterManyDocs() throws Exception -->Line_6 $$ Map<String, String> prefixes = new HashMap(COUNT)[ CD ]
Line_5 $$ int COUNT = between(20, 100)-->Line_8 $$ for (int i = 0; i < COUNT; i++) [ FD ]
Line_8 $$ for (int i = 0; i < COUNT; i++) -->Line_11 $$ indexRequestBuilders[i] = client().prepareIndex("test", "type1", Integer.toString(i)).setSource("field1", "Sentence " + prefix + " test. Sentence two.")[ CD ]
Line_5 $$ int COUNT = between(20, 100)-->Line_19 $$ assertThat(searchResponse.getHits().hits().length, equalTo(COUNT))[ FD ]
Line_20 $$ for (SearchHit hit : searchResponse.getHits()) -->Line_21 $$ String prefix = prefixes.get(hit.id())[ FD ]
Line_6 $$ Map<String, String> prefixes = new HashMap(COUNT)-->Line_10 $$ prefixes.put(String.valueOf(i), prefix)[ FD ]
Line_2 $$ public void testPostingsHighlighterManyDocs() throws Exception -->Line_14 $$ indexRandom(true, indexRequestBuilders)[ CD ]
Line_17 $$ SearchResponse searchResponse = searchRequestBuilder.get()-->Line_19 $$ assertThat(searchResponse.getHits().hits().length, equalTo(COUNT))[ FD ]
Line_2 $$ public void testPostingsHighlighterManyDocs() throws Exception -->Line_16 $$ SearchRequestBuilder searchRequestBuilder = client().prepareSearch().setSize(COUNT).setQuery(termQuery("field1", "test")).highlighter(new HighlightBuilder().field("field1"))[ CD ]
Line_2 $$ public void testPostingsHighlighterManyDocs() throws Exception -->Line_18 $$ assertHitCount(searchResponse, COUNT)[ CD ]
Line_2 $$ public void testPostingsHighlighterManyDocs() throws Exception -->Line_5 $$ int COUNT = between(20, 100)[ CD ]
Line_8 $$ for (int i = 0; i < COUNT; i++) -->Line_10 $$ prefixes.put(String.valueOf(i), prefix)[ FD ]
Line_17 $$ SearchResponse searchResponse = searchRequestBuilder.get()-->Line_18 $$ assertHitCount(searchResponse, COUNT)[ FD ]
Line_8 $$ for (int i = 0; i < COUNT; i++) -->Line_11 $$ indexRequestBuilders[i] = client().prepareIndex("test", "type1", Integer.toString(i)).setSource("field1", "Sentence " + prefix + " test. Sentence two.")[ FD ]
Line_2 $$ public void testPostingsHighlighterManyDocs() throws Exception -->Line_17 $$ SearchResponse searchResponse = searchRequestBuilder.get()[ CD ]
Line_8 $$ for (int i = 0; i < COUNT; i++) -->Line_9 $$ String prefix = randomAsciiOfLengthBetween(5, 30)[ CD ]
Line_5 $$ int COUNT = between(20, 100)-->Line_18 $$ assertHitCount(searchResponse, COUNT)[ FD ]
Line_2 $$ public void testPostingsHighlighterManyDocs() throws Exception -->Line_7 $$ IndexRequestBuilder[] indexRequestBuilders = new IndexRequestBuilder[COUNT][ CD ]
Line_7 $$ IndexRequestBuilder[] indexRequestBuilders = new IndexRequestBuilder[COUNT]-->Line_14 $$ indexRandom(true, indexRequestBuilders)[ FD ]
Line_5 $$ int COUNT = between(20, 100)-->Line_16 $$ SearchRequestBuilder searchRequestBuilder = client().prepareSearch().setSize(COUNT).setQuery(termQuery("field1", "test")).highlighter(new HighlightBuilder().field("field1"))[ FD ]
Line_17 $$ SearchResponse searchResponse = searchRequestBuilder.get()-->Line_20 $$ for (SearchHit hit : searchResponse.getHits()) [ FD ]
Line_2 $$ public void testPostingsHighlighterManyDocs() throws Exception -->Line_4 $$ ensureGreen()[ CD ]
Line_2 $$ public void testPostingsHighlighterManyDocs() throws Exception -->Line_19 $$ assertThat(searchResponse.getHits().hits().length, equalTo(COUNT))[ CD ]
Line_8 $$ for (int i = 0; i < COUNT; i++) -->Line_10 $$ prefixes.put(String.valueOf(i), prefix)[ CD ]
Line_6 $$ Map<String, String> prefixes = new HashMap(COUNT)-->Line_21 $$ String prefix = prefixes.get(hit.id())[ FD ]
Line_20 $$ for (SearchHit hit : searchResponse.getHits()) -->Line_22 $$ assertHighlight(hit, "field1", 0, 1, equalTo("Sentence " + prefix + " <em>test</em>."))[ FD ]
Line_2 $$ public void testPostingsHighlighterManyDocs() throws Exception -->Line_3 $$ assertAcked(prepareCreate("test").addMapping("type1", type1PostingsffsetsMapping()))[ CD ]
