Line_2 $$ protected void prepareTiles(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_9 $$ String tilesTitle = (String) componentContext.getAttribute("title")[ CD ]
Line_2 $$ protected void prepareTiles(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_5 $$ if (componentContext == null) [ CD ]
Line_2 $$ protected void prepareTiles(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)[ CD ]
Line_2 $$ protected void prepareTiles(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_10 $$ themeDisplay.setTilesTitle(tilesTitle)[ CD ]
Line_15 $$ boolean tilesSelectable = GetterUtil.getBoolean((String) componentContext.getAttribute("selectable"))-->Line_16 $$ themeDisplay.setTilesSelectable(tilesSelectable)[ FD ]
Line_12 $$ String tilesContent = (String) componentContext.getAttribute("content")-->Line_13 $$ themeDisplay.setTilesContent(tilesContent)[ FD ]
Line_2 $$ protected void prepareTiles(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_11 $$ contextObjects.put("tilesTitle", tilesTitle)[ CD ]
Line_2 $$ protected void prepareTiles(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_12 $$ String tilesContent = (String) componentContext.getAttribute("content")[ CD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_13 $$ themeDisplay.setTilesContent(tilesContent)[ FD ]
Line_9 $$ String tilesTitle = (String) componentContext.getAttribute("title")-->Line_11 $$ contextObjects.put("tilesTitle", tilesTitle)[ FD ]
Line_2 $$ protected void prepareTiles(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_14 $$ contextObjects.put("tilesContent", tilesContent)[ CD ]
Line_2 $$ protected void prepareTiles(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_4 $$ ComponentContext componentContext = (ComponentContext) request.getAttribute(ComponentConstants.COMPONENT_CONTEXT)[ FD ]
Line_2 $$ protected void prepareTiles(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_13 $$ themeDisplay.setTilesContent(tilesContent)[ CD ]
Line_2 $$ protected void prepareTiles(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_11 $$ contextObjects.put("tilesTitle", tilesTitle)[ FD ]
Line_2 $$ protected void prepareTiles(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_17 $$ contextObjects.put("tilesSelectable", tilesSelectable)[ FD ]
Line_2 $$ protected void prepareTiles(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_17 $$ contextObjects.put("tilesSelectable", tilesSelectable)[ CD ]
Line_4 $$ ComponentContext componentContext = (ComponentContext) request.getAttribute(ComponentConstants.COMPONENT_CONTEXT)-->Line_5 $$ if (componentContext == null) [ FD ]
Line_12 $$ String tilesContent = (String) componentContext.getAttribute("content")-->Line_14 $$ contextObjects.put("tilesContent", tilesContent)[ FD ]
Line_5 $$ if (componentContext == null) -->Line_7 $$ return[ CD ]
Line_2 $$ protected void prepareTiles(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_14 $$ contextObjects.put("tilesContent", tilesContent)[ FD ]
Line_2 $$ protected void prepareTiles(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_15 $$ boolean tilesSelectable = GetterUtil.getBoolean((String) componentContext.getAttribute("selectable"))[ CD ]
Line_2 $$ protected void prepareTiles(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_4 $$ ComponentContext componentContext = (ComponentContext) request.getAttribute(ComponentConstants.COMPONENT_CONTEXT)[ CD ]
Line_2 $$ protected void prepareTiles(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)[ FD ]
Line_4 $$ ComponentContext componentContext = (ComponentContext) request.getAttribute(ComponentConstants.COMPONENT_CONTEXT)-->Line_15 $$ boolean tilesSelectable = GetterUtil.getBoolean((String) componentContext.getAttribute("selectable"))[ FD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_10 $$ themeDisplay.setTilesTitle(tilesTitle)[ FD ]
Line_15 $$ boolean tilesSelectable = GetterUtil.getBoolean((String) componentContext.getAttribute("selectable"))-->Line_17 $$ contextObjects.put("tilesSelectable", tilesSelectable)[ FD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_6 $$ themeDisplay.setTilesSelectable(true)[ FD ]
Line_5 $$ if (componentContext == null) -->Line_6 $$ themeDisplay.setTilesSelectable(true)[ CD ]
Line_4 $$ ComponentContext componentContext = (ComponentContext) request.getAttribute(ComponentConstants.COMPONENT_CONTEXT)-->Line_12 $$ String tilesContent = (String) componentContext.getAttribute("content")[ FD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_16 $$ themeDisplay.setTilesSelectable(tilesSelectable)[ FD ]
Line_2 $$ protected void prepareTiles(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_16 $$ themeDisplay.setTilesSelectable(tilesSelectable)[ CD ]
Line_4 $$ ComponentContext componentContext = (ComponentContext) request.getAttribute(ComponentConstants.COMPONENT_CONTEXT)-->Line_9 $$ String tilesTitle = (String) componentContext.getAttribute("title")[ FD ]
Line_9 $$ String tilesTitle = (String) componentContext.getAttribute("title")-->Line_10 $$ themeDisplay.setTilesTitle(tilesTitle)[ FD ]
