Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_67 $$ mergeManager.close()[ CD ]
Line_29 $$ Map<String, String> map3 = new TreeMap<String, String>()-->Line_34 $$ byte[] mapOutputBytes3 = writeMapOutput(conf, map3)[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_19 $$ System.arraycopy(mapOutputBytes2, 0, mapOutput2.getMemory(), 0, mapOutputBytes2.length)[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_46 $$ List<CompressAwarePath> paths = new ArrayList<CompressAwarePath>()[ CD ]
Line_58 $$ mergeManager = new MergeManagerImpl<Text, Text>(reduceId2, jobConf, fs, lda, Reporter.NULL, null, null, null, null, null, null, null, new Progress(), new MROutputFiles())-->Line_59 $$ MergeThread<CompressAwarePath, Text, Text> onDiskMerger = mergeManager.createOnDiskMerger()[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_6 $$ TaskAttemptID mapId2 = new TaskAttemptID(new TaskID(jobId, TaskType.MAP, 2), 0)[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_35 $$ byte[] mapOutputBytes4 = writeMapOutput(conf, map4)[ CD ]
Line_21 $$ List<InMemoryMapOutput<Text, Text>> mapOutputs1 = new ArrayList<InMemoryMapOutput<Text, Text>>()-->Line_22 $$ mapOutputs1.add(mapOutput1)[ FD ]
Line_41 $$ List<InMemoryMapOutput<Text, Text>> mapOutputs2 = new ArrayList<InMemoryMapOutput<Text, Text>>()-->Line_43 $$ mapOutputs2.add(mapOutput4)[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_49 $$ List<String> values = new ArrayList<String>()[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_18 $$ System.arraycopy(mapOutputBytes1, 0, mapOutput1.getMemory(), 0, mapOutputBytes1.length)[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_41 $$ List<InMemoryMapOutput<Text, Text>> mapOutputs2 = new ArrayList<InMemoryMapOutput<Text, Text>>()[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_11 $$ map1.put("carrot", "delicious")[ CD ]
Line_48 $$ List<String> keys = new ArrayList<String>()-->Line_55 $$ Assert.assertEquals(keys, Arrays.asList("apple", "banana", "carrot", "apple", "banana", "carrot"))[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_3 $$ JobID jobId = new JobID("a", 0)[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_63 $$ values = new ArrayList<String>()[ CD ]
Line_36 $$ InMemoryMapOutput<Text, Text> mapOutput3 = new InMemoryMapOutput<Text, Text>(conf, mapId3, mergeManager, mapOutputBytes3.length, null, true)-->Line_42 $$ mapOutputs2.add(mapOutput3)[ FD ]
Line_50 $$ while (iterator.hasNext()) -->Line_52 $$ readOnDiskMapOutput(conf, fs, next, keys, values)[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_61 $$ Assert.assertEquals(1, mergeManager.onDiskMapOutputs.size())[ CD ]
Line_8 $$ MergeManagerImpl<Text, Text> mergeManager = new MergeManagerImpl<Text, Text>(reduceId1, jobConf, fs, lda, Reporter.NULL, null, null, null, null, null, null, null, new Progress(), new MROutputFiles())-->Line_67 $$ mergeManager.close()[ FD ]
Line_8 $$ MergeManagerImpl<Text, Text> mergeManager = new MergeManagerImpl<Text, Text>(reduceId1, jobConf, fs, lda, Reporter.NULL, null, null, null, null, null, null, null, new Progress(), new MROutputFiles())-->Line_59 $$ MergeThread<CompressAwarePath, Text, Text> onDiskMerger = mergeManager.createOnDiskMerger()[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_20 $$ MergeThread<InMemoryMapOutput<Text, Text>, Text, Text> inMemoryMerger = mergeManager.createInMemoryMerger()[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_30 $$ map3.put("apple", "awesome")[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_47 $$ Iterator<CompressAwarePath> iterator = mergeManager.onDiskMapOutputs.iterator()[ CD ]
Line_29 $$ Map<String, String> map3 = new TreeMap<String, String>()-->Line_31 $$ map3.put("carrot", "amazing")[ FD ]
Line_8 $$ MergeManagerImpl<Text, Text> mergeManager = new MergeManagerImpl<Text, Text>(reduceId1, jobConf, fs, lda, Reporter.NULL, null, null, null, null, null, null, null, new Progress(), new MROutputFiles())-->Line_57 $$ mergeManager.close()[ FD ]
Line_51 $$ CompressAwarePath next = iterator.next()-->Line_52 $$ readOnDiskMapOutput(conf, fs, next, keys, values)[ FD ]
Line_34 $$ byte[] mapOutputBytes3 = writeMapOutput(conf, map3)-->Line_38 $$ System.arraycopy(mapOutputBytes3, 0, mapOutput3.getMemory(), 0, mapOutputBytes3.length)[ FD ]
Line_16 $$ InMemoryMapOutput<Text, Text> mapOutput1 = new InMemoryMapOutput<Text, Text>(conf, mapId1, mergeManager, mapOutputBytes1.length, null, true)-->Line_22 $$ mapOutputs1.add(mapOutput1)[ FD ]
Line_8 $$ MergeManagerImpl<Text, Text> mergeManager = new MergeManagerImpl<Text, Text>(reduceId1, jobConf, fs, lda, Reporter.NULL, null, null, null, null, null, null, null, new Progress(), new MROutputFiles())-->Line_58 $$ mergeManager = new MergeManagerImpl<Text, Text>(reduceId2, jobConf, fs, lda, Reporter.NULL, null, null, null, null, null, null, null, new Progress(), new MROutputFiles())[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_62 $$ keys = new ArrayList<String>()[ CD ]
Line_36 $$ InMemoryMapOutput<Text, Text> mapOutput3 = new InMemoryMapOutput<Text, Text>(conf, mapId3, mergeManager, mapOutputBytes3.length, null, true)-->Line_38 $$ System.arraycopy(mapOutputBytes3, 0, mapOutput3.getMemory(), 0, mapOutputBytes3.length)[ FD ]
Line_46 $$ List<CompressAwarePath> paths = new ArrayList<CompressAwarePath>()-->Line_53 $$ paths.add(next)[ FD ]
Line_37 $$ InMemoryMapOutput<Text, Text> mapOutput4 = new InMemoryMapOutput<Text, Text>(conf, mapId4, mergeManager, mapOutputBytes4.length, null, true)-->Line_43 $$ mapOutputs2.add(mapOutput4)[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_34 $$ byte[] mapOutputBytes3 = writeMapOutput(conf, map3)[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_5 $$ TaskAttemptID mapId1 = new TaskAttemptID(new TaskID(jobId, TaskType.MAP, 1), 0)[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_40 $$ MergeThread<InMemoryMapOutput<Text, Text>, Text, Text> inMemoryMerger2 = mergeManager.createInMemoryMerger()[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_16 $$ InMemoryMapOutput<Text, Text> mapOutput1 = new InMemoryMapOutput<Text, Text>(conf, mapId1, mergeManager, mapOutputBytes1.length, null, true)[ CD ]
Line_49 $$ List<String> values = new ArrayList<String>()-->Line_52 $$ readOnDiskMapOutput(conf, fs, next, keys, values)[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_14 $$ byte[] mapOutputBytes1 = writeMapOutput(conf, map1)[ CD ]
Line_15 $$ byte[] mapOutputBytes2 = writeMapOutput(conf, map2)-->Line_19 $$ System.arraycopy(mapOutputBytes2, 0, mapOutput2.getMemory(), 0, mapOutputBytes2.length)[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_32 $$ Map<String, String> map4 = new TreeMap<String, String>()[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_23 $$ mapOutputs1.add(mapOutput2)[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_50 $$ while (iterator.hasNext()) [ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_7 $$ LocalDirAllocator lda = new LocalDirAllocator(MRConfig.LOCAL_DIR)[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_31 $$ map3.put("carrot", "amazing")[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_55 $$ Assert.assertEquals(keys, Arrays.asList("apple", "banana", "carrot", "apple", "banana", "carrot"))[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_15 $$ byte[] mapOutputBytes2 = writeMapOutput(conf, map2)[ CD ]
Line_21 $$ List<InMemoryMapOutput<Text, Text>> mapOutputs1 = new ArrayList<InMemoryMapOutput<Text, Text>>()-->Line_23 $$ mapOutputs1.add(mapOutput2)[ FD ]
Line_9 $$ Map<String, String> map1 = new TreeMap<String, String>()-->Line_14 $$ byte[] mapOutputBytes1 = writeMapOutput(conf, map1)[ FD ]
Line_9 $$ Map<String, String> map1 = new TreeMap<String, String>()-->Line_10 $$ map1.put("apple", "disgusting")[ FD ]
Line_49 $$ List<String> values = new ArrayList<String>()-->Line_64 $$ readOnDiskMapOutput(conf, fs, mergeManager.onDiskMapOutputs.iterator().next(), keys, values)[ FD ]
Line_37 $$ InMemoryMapOutput<Text, Text> mapOutput4 = new InMemoryMapOutput<Text, Text>(conf, mapId4, mergeManager, mapOutputBytes4.length, null, true)-->Line_39 $$ System.arraycopy(mapOutputBytes4, 0, mapOutput4.getMemory(), 0, mapOutputBytes4.length)[ FD ]
Line_9 $$ Map<String, String> map1 = new TreeMap<String, String>()-->Line_13 $$ map1.put("banana", "pretty good")[ FD ]
Line_29 $$ Map<String, String> map3 = new TreeMap<String, String>()-->Line_30 $$ map3.put("apple", "awesome")[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_38 $$ System.arraycopy(mapOutputBytes3, 0, mapOutput3.getMemory(), 0, mapOutputBytes3.length)[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_10 $$ map1.put("apple", "disgusting")[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_64 $$ readOnDiskMapOutput(conf, fs, mergeManager.onDiskMapOutputs.iterator().next(), keys, values)[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_65 $$ Assert.assertEquals(keys, Arrays.asList("apple", "apple", "banana", "banana", "carrot", "carrot"))[ CD ]
Line_46 $$ List<CompressAwarePath> paths = new ArrayList<CompressAwarePath>()-->Line_60 $$ onDiskMerger.merge(paths)[ FD ]
Line_51 $$ CompressAwarePath next = iterator.next()-->Line_53 $$ paths.add(next)[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_26 $$ TaskAttemptID reduceId2 = new TaskAttemptID(new TaskID(jobId, TaskType.REDUCE, 3), 0)[ CD ]
Line_49 $$ List<String> values = new ArrayList<String>()-->Line_56 $$ Assert.assertEquals(values, Arrays.asList("awesome", "bla", "amazing", "disgusting", "pretty good", "delicious"))[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_43 $$ mapOutputs2.add(mapOutput4)[ CD ]
Line_32 $$ Map<String, String> map4 = new TreeMap<String, String>()-->Line_35 $$ byte[] mapOutputBytes4 = writeMapOutput(conf, map4)[ FD ]
Line_35 $$ byte[] mapOutputBytes4 = writeMapOutput(conf, map4)-->Line_39 $$ System.arraycopy(mapOutputBytes4, 0, mapOutput4.getMemory(), 0, mapOutputBytes4.length)[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_70 $$ Assert.assertEquals(0, mergeManager.onDiskMapOutputs.size())[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_21 $$ List<InMemoryMapOutput<Text, Text>> mapOutputs1 = new ArrayList<InMemoryMapOutput<Text, Text>>()[ CD ]
Line_58 $$ mergeManager = new MergeManagerImpl<Text, Text>(reduceId2, jobConf, fs, lda, Reporter.NULL, null, null, null, null, null, null, null, new Progress(), new MROutputFiles())-->Line_67 $$ mergeManager.close()[ FD ]
Line_48 $$ List<String> keys = new ArrayList<String>()-->Line_65 $$ Assert.assertEquals(keys, Arrays.asList("apple", "apple", "banana", "banana", "carrot", "carrot"))[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_25 $$ Assert.assertEquals(1, mergeManager.onDiskMapOutputs.size())[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_66 $$ Assert.assertEquals(values, Arrays.asList("awesome", "disgusting", "pretty good", "bla", "amazing", "delicious"))[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_28 $$ TaskAttemptID mapId4 = new TaskAttemptID(new TaskID(jobId, TaskType.MAP, 5), 0)[ CD ]
Line_8 $$ MergeManagerImpl<Text, Text> mergeManager = new MergeManagerImpl<Text, Text>(reduceId1, jobConf, fs, lda, Reporter.NULL, null, null, null, null, null, null, null, new Progress(), new MROutputFiles())-->Line_40 $$ MergeThread<InMemoryMapOutput<Text, Text>, Text, Text> inMemoryMerger2 = mergeManager.createInMemoryMerger()[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_42 $$ mapOutputs2.add(mapOutput3)[ CD ]
Line_50 $$ while (iterator.hasNext()) -->Line_51 $$ CompressAwarePath next = iterator.next()[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_8 $$ MergeManagerImpl<Text, Text> mergeManager = new MergeManagerImpl<Text, Text>(reduceId1, jobConf, fs, lda, Reporter.NULL, null, null, null, null, null, null, null, new Progress(), new MROutputFiles())[ CD ]
Line_50 $$ while (iterator.hasNext()) -->Line_53 $$ paths.add(next)[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_69 $$ Assert.assertEquals(0, mergeManager.inMemoryMergedMapOutputs.size())[ CD ]
Line_59 $$ MergeThread<CompressAwarePath, Text, Text> onDiskMerger = mergeManager.createOnDiskMerger()-->Line_60 $$ onDiskMerger.merge(paths)[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_17 $$ InMemoryMapOutput<Text, Text> mapOutput2 = new InMemoryMapOutput<Text, Text>(conf, mapId2, mergeManager, mapOutputBytes2.length, null, true)[ CD ]
Line_20 $$ MergeThread<InMemoryMapOutput<Text, Text>, Text, Text> inMemoryMerger = mergeManager.createInMemoryMerger()-->Line_24 $$ inMemoryMerger.merge(mapOutputs1)[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_68 $$ Assert.assertEquals(0, mergeManager.inMemoryMapOutputs.size())[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_33 $$ map4.put("banana", "bla")[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_12 $$ Map<String, String> map2 = new TreeMap<String, String>()[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_44 $$ inMemoryMerger2.merge(mapOutputs2)[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_59 $$ MergeThread<CompressAwarePath, Text, Text> onDiskMerger = mergeManager.createOnDiskMerger()[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_36 $$ InMemoryMapOutput<Text, Text> mapOutput3 = new InMemoryMapOutput<Text, Text>(conf, mapId3, mergeManager, mapOutputBytes3.length, null, true)[ CD ]
Line_48 $$ List<String> keys = new ArrayList<String>()-->Line_62 $$ keys = new ArrayList<String>()[ FD ]
Line_62 $$ keys = new ArrayList<String>()-->Line_65 $$ Assert.assertEquals(keys, Arrays.asList("apple", "apple", "banana", "banana", "carrot", "carrot"))[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_39 $$ System.arraycopy(mapOutputBytes4, 0, mapOutput4.getMemory(), 0, mapOutputBytes4.length)[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_4 $$ TaskAttemptID reduceId1 = new TaskAttemptID(new TaskID(jobId, TaskType.REDUCE, 0), 0)[ CD ]
Line_8 $$ MergeManagerImpl<Text, Text> mergeManager = new MergeManagerImpl<Text, Text>(reduceId1, jobConf, fs, lda, Reporter.NULL, null, null, null, null, null, null, null, new Progress(), new MROutputFiles())-->Line_20 $$ MergeThread<InMemoryMapOutput<Text, Text>, Text, Text> inMemoryMerger = mergeManager.createInMemoryMerger()[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_58 $$ mergeManager = new MergeManagerImpl<Text, Text>(reduceId2, jobConf, fs, lda, Reporter.NULL, null, null, null, null, null, null, null, new Progress(), new MROutputFiles())[ CD ]
Line_40 $$ MergeThread<InMemoryMapOutput<Text, Text>, Text, Text> inMemoryMerger2 = mergeManager.createInMemoryMerger()-->Line_44 $$ inMemoryMerger2.merge(mapOutputs2)[ FD ]
Line_17 $$ InMemoryMapOutput<Text, Text> mapOutput2 = new InMemoryMapOutput<Text, Text>(conf, mapId2, mergeManager, mapOutputBytes2.length, null, true)-->Line_19 $$ System.arraycopy(mapOutputBytes2, 0, mapOutput2.getMemory(), 0, mapOutputBytes2.length)[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_48 $$ List<String> keys = new ArrayList<String>()[ CD ]
Line_47 $$ Iterator<CompressAwarePath> iterator = mergeManager.onDiskMapOutputs.iterator()-->Line_50 $$ while (iterator.hasNext()) [ FD ]
Line_49 $$ List<String> values = new ArrayList<String>()-->Line_63 $$ values = new ArrayList<String>()[ FD ]
Line_63 $$ values = new ArrayList<String>()-->Line_66 $$ Assert.assertEquals(values, Arrays.asList("awesome", "disgusting", "pretty good", "bla", "amazing", "delicious"))[ FD ]
Line_12 $$ Map<String, String> map2 = new TreeMap<String, String>()-->Line_15 $$ byte[] mapOutputBytes2 = writeMapOutput(conf, map2)[ FD ]
Line_63 $$ values = new ArrayList<String>()-->Line_64 $$ readOnDiskMapOutput(conf, fs, mergeManager.onDiskMapOutputs.iterator().next(), keys, values)[ FD ]
Line_16 $$ InMemoryMapOutput<Text, Text> mapOutput1 = new InMemoryMapOutput<Text, Text>(conf, mapId1, mergeManager, mapOutputBytes1.length, null, true)-->Line_18 $$ System.arraycopy(mapOutputBytes1, 0, mapOutput1.getMemory(), 0, mapOutputBytes1.length)[ FD ]
Line_48 $$ List<String> keys = new ArrayList<String>()-->Line_52 $$ readOnDiskMapOutput(conf, fs, next, keys, values)[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_57 $$ mergeManager.close()[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_29 $$ Map<String, String> map3 = new TreeMap<String, String>()[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_45 $$ Assert.assertEquals(2, mergeManager.onDiskMapOutputs.size())[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_13 $$ map1.put("banana", "pretty good")[ CD ]
Line_32 $$ Map<String, String> map4 = new TreeMap<String, String>()-->Line_33 $$ map4.put("banana", "bla")[ FD ]
Line_9 $$ Map<String, String> map1 = new TreeMap<String, String>()-->Line_11 $$ map1.put("carrot", "delicious")[ FD ]
Line_49 $$ List<String> values = new ArrayList<String>()-->Line_66 $$ Assert.assertEquals(values, Arrays.asList("awesome", "disgusting", "pretty good", "bla", "amazing", "delicious"))[ FD ]
Line_14 $$ byte[] mapOutputBytes1 = writeMapOutput(conf, map1)-->Line_18 $$ System.arraycopy(mapOutputBytes1, 0, mapOutput1.getMemory(), 0, mapOutputBytes1.length)[ FD ]
Line_47 $$ Iterator<CompressAwarePath> iterator = mergeManager.onDiskMapOutputs.iterator()-->Line_51 $$ CompressAwarePath next = iterator.next()[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_24 $$ inMemoryMerger.merge(mapOutputs1)[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_9 $$ Map<String, String> map1 = new TreeMap<String, String>()[ CD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_37 $$ InMemoryMapOutput<Text, Text> mapOutput4 = new InMemoryMapOutput<Text, Text>(conf, mapId4, mergeManager, mapOutputBytes4.length, null, true)[ CD ]
Line_21 $$ List<InMemoryMapOutput<Text, Text>> mapOutputs1 = new ArrayList<InMemoryMapOutput<Text, Text>>()-->Line_24 $$ inMemoryMerger.merge(mapOutputs1)[ FD ]
Line_17 $$ InMemoryMapOutput<Text, Text> mapOutput2 = new InMemoryMapOutput<Text, Text>(conf, mapId2, mergeManager, mapOutputBytes2.length, null, true)-->Line_23 $$ mapOutputs1.add(mapOutput2)[ FD ]
Line_62 $$ keys = new ArrayList<String>()-->Line_64 $$ readOnDiskMapOutput(conf, fs, mergeManager.onDiskMapOutputs.iterator().next(), keys, values)[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_60 $$ onDiskMerger.merge(paths)[ CD ]
Line_41 $$ List<InMemoryMapOutput<Text, Text>> mapOutputs2 = new ArrayList<InMemoryMapOutput<Text, Text>>()-->Line_44 $$ inMemoryMerger2.merge(mapOutputs2)[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_27 $$ TaskAttemptID mapId3 = new TaskAttemptID(new TaskID(jobId, TaskType.MAP, 4), 0)[ CD ]
Line_41 $$ List<InMemoryMapOutput<Text, Text>> mapOutputs2 = new ArrayList<InMemoryMapOutput<Text, Text>>()-->Line_42 $$ mapOutputs2.add(mapOutput3)[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_56 $$ Assert.assertEquals(values, Arrays.asList("awesome", "bla", "amazing", "disgusting", "pretty good", "delicious"))[ CD ]
Line_48 $$ List<String> keys = new ArrayList<String>()-->Line_64 $$ readOnDiskMapOutput(conf, fs, mergeManager.onDiskMapOutputs.iterator().next(), keys, values)[ FD ]
Line_2 $$ public void testInMemoryAndOnDiskMerger() throws Throwable -->Line_22 $$ mapOutputs1.add(mapOutput1)[ CD ]
