Line_6 $$ final ModelNode model = resource.getModel()-->Line_13 $$ addAttributes(model, LogStoreConstants.MODEL_TO_JMX_PARTICIPANT_NAMES, pAttributes)[ FD ]
Line_4 $$ for (ObjectInstance participant : participants) -->Line_5 $$ final Resource resource = new LogStoreResource.LogStoreRuntimeResource(participant.getObjectName())[ FD ]
Line_5 $$ final Resource resource = new LogStoreResource.LogStoreRuntimeResource(participant.getObjectName())-->Line_15 $$ parent.registerChild(element, resource)[ FD ]
Line_8 $$ String pAddress = pAttributes.get(JNDI_PROPNAME)-->Line_14 $$ final PathElement element = PathElement.pathElement(LogStoreConstants.PARTICIPANTS, pAddress)[ FD ]
Line_7 $$ Map<String, String> pAttributes = getMBeanValues(mbs, participant.getObjectName(), LogStoreConstants.PARTICIPANT_JMX_NAMES)-->Line_8 $$ String pAddress = pAttributes.get(JNDI_PROPNAME)[ FD ]
Line_8 $$ String pAddress = pAttributes.get(JNDI_PROPNAME)-->Line_9 $$ if (pAddress == null || pAddress.length() == 0) [ FD ]
Line_9 $$ if (pAddress == null || pAddress.length() == 0) -->Line_10 $$ pAttributes.put(JNDI_PROPNAME, String.valueOf(i++))[ CD ]
Line_9 $$ if (pAddress == null || pAddress.length() == 0) -->Line_11 $$ pAddress = pAttributes.get(JNDI_PROPNAME)[ CD ]
Line_3 $$ int i = 1-->Line_10 $$ pAttributes.put(JNDI_PROPNAME, String.valueOf(i++))[ FD ]
Line_7 $$ Map<String, String> pAttributes = getMBeanValues(mbs, participant.getObjectName(), LogStoreConstants.PARTICIPANT_JMX_NAMES)-->Line_10 $$ pAttributes.put(JNDI_PROPNAME, String.valueOf(i++))[ FD ]
Line_2 $$ private void addParticipants(final Resource parent, Set<ObjectInstance> participants, MBeanServer mbs) throws IntrospectionException, InstanceNotFoundException, IOException, ReflectionException -->Line_15 $$ parent.registerChild(element, resource)[ FD ]
Line_7 $$ Map<String, String> pAttributes = getMBeanValues(mbs, participant.getObjectName(), LogStoreConstants.PARTICIPANT_JMX_NAMES)-->Line_13 $$ addAttributes(model, LogStoreConstants.MODEL_TO_JMX_PARTICIPANT_NAMES, pAttributes)[ FD ]
Line_2 $$ private void addParticipants(final Resource parent, Set<ObjectInstance> participants, MBeanServer mbs) throws IntrospectionException, InstanceNotFoundException, IOException, ReflectionException -->Line_3 $$ int i = 1[ CD ]
Line_8 $$ String pAddress = pAttributes.get(JNDI_PROPNAME)-->Line_11 $$ pAddress = pAttributes.get(JNDI_PROPNAME)[ FD ]
Line_14 $$ final PathElement element = PathElement.pathElement(LogStoreConstants.PARTICIPANTS, pAddress)-->Line_15 $$ parent.registerChild(element, resource)[ FD ]
Line_2 $$ private void addParticipants(final Resource parent, Set<ObjectInstance> participants, MBeanServer mbs) throws IntrospectionException, InstanceNotFoundException, IOException, ReflectionException -->Line_7 $$ Map<String, String> pAttributes = getMBeanValues(mbs, participant.getObjectName(), LogStoreConstants.PARTICIPANT_JMX_NAMES)[ FD ]
Line_7 $$ Map<String, String> pAttributes = getMBeanValues(mbs, participant.getObjectName(), LogStoreConstants.PARTICIPANT_JMX_NAMES)-->Line_11 $$ pAddress = pAttributes.get(JNDI_PROPNAME)[ FD ]
Line_5 $$ final Resource resource = new LogStoreResource.LogStoreRuntimeResource(participant.getObjectName())-->Line_6 $$ final ModelNode model = resource.getModel()[ FD ]
Line_11 $$ pAddress = pAttributes.get(JNDI_PROPNAME)-->Line_14 $$ final PathElement element = PathElement.pathElement(LogStoreConstants.PARTICIPANTS, pAddress)[ FD ]
Line_4 $$ for (ObjectInstance participant : participants) -->Line_7 $$ Map<String, String> pAttributes = getMBeanValues(mbs, participant.getObjectName(), LogStoreConstants.PARTICIPANT_JMX_NAMES)[ FD ]
