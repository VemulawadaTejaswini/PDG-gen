Line_5 $$ List<Object> beans = new ArrayList<Object>(globalAdvisorNames.length + globalInterceptorNames.length)-->Line_17 $$ AnnotationAwareOrderComparator.sort(beans)[ FD ]
Line_6 $$ Map<Object, String> names = new HashMap<Object, String>(beans.size())-->Line_15 $$ names.put(bean, name)[ FD ]
Line_2 $$ private void addGlobalAdvisor(ListableBeanFactory beanFactory, String prefix) -->Line_3 $$ String[] globalAdvisorNames = BeanFactoryUtils.beanNamesForTypeIncludingAncestors(beanFactory, Advisor.class)[ FD ]
Line_7 $$ for (String name : globalAdvisorNames) -->Line_13 $$ Object bean = beanFactory.getBean(name)[ FD ]
Line_2 $$ private void addGlobalAdvisor(ListableBeanFactory beanFactory, String prefix) -->Line_3 $$ String[] globalAdvisorNames = BeanFactoryUtils.beanNamesForTypeIncludingAncestors(beanFactory, Advisor.class)[ CD ]
Line_7 $$ for (String name : globalAdvisorNames) -->Line_15 $$ names.put(bean, name)[ FD ]
Line_2 $$ private void addGlobalAdvisor(ListableBeanFactory beanFactory, String prefix) -->Line_20 $$ if (name.startsWith(prefix)) [ FD ]
Line_8 $$ Object bean = beanFactory.getBean(name)-->Line_21 $$ addAdvisorOnChainCreation(bean, name)[ FD ]
Line_2 $$ private void addGlobalAdvisor(ListableBeanFactory beanFactory, String prefix) -->Line_6 $$ Map<Object, String> names = new HashMap<Object, String>(beans.size())[ CD ]
Line_2 $$ private void addGlobalAdvisor(ListableBeanFactory beanFactory, String prefix) -->Line_8 $$ Object bean = beanFactory.getBean(name)[ FD ]
Line_5 $$ List<Object> beans = new ArrayList<Object>(globalAdvisorNames.length + globalInterceptorNames.length)-->Line_6 $$ Map<Object, String> names = new HashMap<Object, String>(beans.size())[ FD ]
Line_2 $$ private void addGlobalAdvisor(ListableBeanFactory beanFactory, String prefix) -->Line_13 $$ Object bean = beanFactory.getBean(name)[ FD ]
Line_5 $$ List<Object> beans = new ArrayList<Object>(globalAdvisorNames.length + globalInterceptorNames.length)-->Line_14 $$ beans.add(bean)[ FD ]
Line_7 $$ for (String name : globalAdvisorNames) -->Line_8 $$ Object bean = beanFactory.getBean(name)[ FD ]
Line_20 $$ if (name.startsWith(prefix)) -->Line_21 $$ addAdvisorOnChainCreation(bean, name)[ CD ]
Line_2 $$ private void addGlobalAdvisor(ListableBeanFactory beanFactory, String prefix) -->Line_4 $$ String[] globalInterceptorNames = BeanFactoryUtils.beanNamesForTypeIncludingAncestors(beanFactory, Interceptor.class)[ FD ]
Line_8 $$ Object bean = beanFactory.getBean(name)-->Line_10 $$ names.put(bean, name)[ FD ]
Line_7 $$ for (String name : globalAdvisorNames) -->Line_20 $$ if (name.startsWith(prefix)) [ FD ]
Line_2 $$ private void addGlobalAdvisor(ListableBeanFactory beanFactory, String prefix) -->Line_4 $$ String[] globalInterceptorNames = BeanFactoryUtils.beanNamesForTypeIncludingAncestors(beanFactory, Interceptor.class)[ CD ]
Line_8 $$ Object bean = beanFactory.getBean(name)-->Line_9 $$ beans.add(bean)[ FD ]
Line_8 $$ Object bean = beanFactory.getBean(name)-->Line_14 $$ beans.add(bean)[ FD ]
Line_5 $$ List<Object> beans = new ArrayList<Object>(globalAdvisorNames.length + globalInterceptorNames.length)-->Line_9 $$ beans.add(bean)[ FD ]
Line_6 $$ Map<Object, String> names = new HashMap<Object, String>(beans.size())-->Line_10 $$ names.put(bean, name)[ FD ]
Line_2 $$ private void addGlobalAdvisor(ListableBeanFactory beanFactory, String prefix) -->Line_5 $$ List<Object> beans = new ArrayList<Object>(globalAdvisorNames.length + globalInterceptorNames.length)[ CD ]
Line_7 $$ for (String name : globalAdvisorNames) -->Line_10 $$ names.put(bean, name)[ FD ]
Line_8 $$ Object bean = beanFactory.getBean(name)-->Line_15 $$ names.put(bean, name)[ FD ]
Line_7 $$ for (String name : globalAdvisorNames) -->Line_21 $$ addAdvisorOnChainCreation(bean, name)[ FD ]
Line_8 $$ Object bean = beanFactory.getBean(name)-->Line_19 $$ String name = names.get(bean)[ FD ]
Line_2 $$ private void addGlobalAdvisor(ListableBeanFactory beanFactory, String prefix) -->Line_17 $$ AnnotationAwareOrderComparator.sort(beans)[ CD ]
Line_6 $$ Map<Object, String> names = new HashMap<Object, String>(beans.size())-->Line_19 $$ String name = names.get(bean)[ FD ]
