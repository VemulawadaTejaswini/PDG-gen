Line_7 $$ if (MapUtil.isNotEmpty(layoutIdMap)) -->Line_9 $$ settingsMap.put("layoutIdMap", serializableLayoutIdMap)[ CD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_39 $$ if (secureConnection != null) [ FD ]
Line_3 $$ Map<String, Serializable> settingsMap = new HashMap()-->Line_15 $$ settingsMap.put("locale", locale)[ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_54 $$ if (timeZone != null) [ FD ]
Line_8 $$ HashMap<Long, Boolean> serializableLayoutIdMap = new HashMap(layoutIdMap)-->Line_9 $$ settingsMap.put("layoutIdMap", serializableLayoutIdMap)[ FD ]
Line_3 $$ Map<String, Serializable> settingsMap = new HashMap()-->Line_55 $$ settingsMap.put("timezone", timeZone)[ FD ]
Line_48 $$ if (targetGroupId > 0) -->Line_49 $$ settingsMap.put("targetGroupId", targetGroupId)[ CD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_52 $$ settingsMap.put("targetPlid", targetPlid)[ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_21 $$ if (Validator.isNotNull(portletId)) [ CD ]
Line_30 $$ if (Validator.isNotNull(remotePathContext)) -->Line_31 $$ settingsMap.put("remotePathContext", remotePathContext)[ CD ]
Line_33 $$ if (remotePort > 0) -->Line_34 $$ settingsMap.put("remotePort", remotePort)[ CD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_22 $$ settingsMap.put("portletId", portletId)[ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_57 $$ settingsMap.put("userId", userId)[ CD ]
Line_42 $$ if (sourceGroupId > 0) -->Line_43 $$ settingsMap.put("sourceGroupId", sourceGroupId)[ CD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_57 $$ settingsMap.put("userId", userId)[ FD ]
Line_3 $$ Map<String, Serializable> settingsMap = new HashMap()-->Line_25 $$ settingsMap.put("privateLayout", privateLayout)[ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_28 $$ settingsMap.put("remoteAddress", remoteAddress)[ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_17 $$ if (parameterMap != null) [ CD ]
Line_3 $$ Map<String, Serializable> settingsMap = new HashMap()-->Line_31 $$ settingsMap.put("remotePathContext", remotePathContext)[ FD ]
Line_3 $$ Map<String, Serializable> settingsMap = new HashMap()-->Line_12 $$ settingsMap.put("layoutIds", layoutIds)[ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_36 $$ if (remotePrivateLayout != null) [ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_45 $$ if (sourcePlid > 0) [ FD ]
Line_3 $$ Map<String, Serializable> settingsMap = new HashMap()-->Line_57 $$ settingsMap.put("userId", userId)[ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_45 $$ if (sourcePlid > 0) [ CD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_54 $$ if (timeZone != null) [ CD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_25 $$ settingsMap.put("privateLayout", privateLayout)[ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_14 $$ if (locale != null) [ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_3 $$ Map<String, Serializable> settingsMap = new HashMap()[ CD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_4 $$ if (Validator.isNotNull(fileName)) [ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_7 $$ if (MapUtil.isNotEmpty(layoutIdMap)) [ CD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_30 $$ if (Validator.isNotNull(remotePathContext)) [ CD ]
Line_14 $$ if (locale != null) -->Line_15 $$ settingsMap.put("locale", locale)[ CD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_27 $$ if (Validator.isNotNull(remoteAddress)) [ CD ]
Line_24 $$ if (privateLayout != null) -->Line_25 $$ settingsMap.put("privateLayout", privateLayout)[ CD ]
Line_3 $$ Map<String, Serializable> settingsMap = new HashMap()-->Line_9 $$ settingsMap.put("layoutIdMap", serializableLayoutIdMap)[ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_12 $$ settingsMap.put("layoutIds", layoutIds)[ FD ]
Line_3 $$ Map<String, Serializable> settingsMap = new HashMap()-->Line_19 $$ settingsMap.put("parameterMap", serializableParameterMap)[ FD ]
Line_4 $$ if (Validator.isNotNull(fileName)) -->Line_5 $$ settingsMap.put("fileName", fileName)[ CD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_11 $$ if (ArrayUtil.isNotEmpty(layoutIds)) [ FD ]
Line_51 $$ if (targetPlid > 0) -->Line_52 $$ settingsMap.put("targetPlid", targetPlid)[ CD ]
Line_17 $$ if (parameterMap != null) -->Line_19 $$ settingsMap.put("parameterMap", serializableParameterMap)[ CD ]
Line_21 $$ if (Validator.isNotNull(portletId)) -->Line_22 $$ settingsMap.put("portletId", portletId)[ CD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_58 $$ return settingsMap[ CD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_43 $$ settingsMap.put("sourceGroupId", sourceGroupId)[ FD ]
Line_3 $$ Map<String, Serializable> settingsMap = new HashMap()-->Line_40 $$ settingsMap.put("secureConnection", secureConnection)[ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_49 $$ settingsMap.put("targetGroupId", targetGroupId)[ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_4 $$ if (Validator.isNotNull(fileName)) [ CD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_11 $$ if (ArrayUtil.isNotEmpty(layoutIds)) [ CD ]
Line_3 $$ Map<String, Serializable> settingsMap = new HashMap()-->Line_34 $$ settingsMap.put("remotePort", remotePort)[ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_24 $$ if (privateLayout != null) [ CD ]
Line_3 $$ Map<String, Serializable> settingsMap = new HashMap()-->Line_46 $$ settingsMap.put("sourcePlid", sourcePlid)[ FD ]
Line_45 $$ if (sourcePlid > 0) -->Line_46 $$ settingsMap.put("sourcePlid", sourcePlid)[ CD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_48 $$ if (targetGroupId > 0) [ CD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_55 $$ settingsMap.put("timezone", timeZone)[ FD ]
Line_3 $$ Map<String, Serializable> settingsMap = new HashMap()-->Line_37 $$ settingsMap.put("remotePrivateLayout", remotePrivateLayout)[ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_37 $$ settingsMap.put("remotePrivateLayout", remotePrivateLayout)[ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_24 $$ if (privateLayout != null) [ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_36 $$ if (remotePrivateLayout != null) [ CD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_33 $$ if (remotePort > 0) [ FD ]
Line_3 $$ Map<String, Serializable> settingsMap = new HashMap()-->Line_5 $$ settingsMap.put("fileName", fileName)[ FD ]
Line_54 $$ if (timeZone != null) -->Line_55 $$ settingsMap.put("timezone", timeZone)[ CD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_31 $$ settingsMap.put("remotePathContext", remotePathContext)[ FD ]
Line_3 $$ Map<String, Serializable> settingsMap = new HashMap()-->Line_28 $$ settingsMap.put("remoteAddress", remoteAddress)[ FD ]
Line_3 $$ Map<String, Serializable> settingsMap = new HashMap()-->Line_52 $$ settingsMap.put("targetPlid", targetPlid)[ FD ]
Line_36 $$ if (remotePrivateLayout != null) -->Line_37 $$ settingsMap.put("remotePrivateLayout", remotePrivateLayout)[ CD ]
Line_27 $$ if (Validator.isNotNull(remoteAddress)) -->Line_28 $$ settingsMap.put("remoteAddress", remoteAddress)[ CD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_42 $$ if (sourceGroupId > 0) [ CD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_14 $$ if (locale != null) [ CD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_46 $$ settingsMap.put("sourcePlid", sourcePlid)[ FD ]
Line_3 $$ Map<String, Serializable> settingsMap = new HashMap()-->Line_49 $$ settingsMap.put("targetGroupId", targetGroupId)[ FD ]
Line_7 $$ if (MapUtil.isNotEmpty(layoutIdMap)) -->Line_8 $$ HashMap<Long, Boolean> serializableLayoutIdMap = new HashMap(layoutIdMap)[ CD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_15 $$ settingsMap.put("locale", locale)[ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_48 $$ if (targetGroupId > 0) [ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_39 $$ if (secureConnection != null) [ CD ]
Line_17 $$ if (parameterMap != null) -->Line_18 $$ HashMap<String, String[]> serializableParameterMap = new HashMap(parameterMap)[ CD ]
Line_11 $$ if (ArrayUtil.isNotEmpty(layoutIds)) -->Line_12 $$ settingsMap.put("layoutIds", layoutIds)[ CD ]
Line_39 $$ if (secureConnection != null) -->Line_40 $$ settingsMap.put("secureConnection", secureConnection)[ CD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_51 $$ if (targetPlid > 0) [ CD ]
Line_18 $$ HashMap<String, String[]> serializableParameterMap = new HashMap(parameterMap)-->Line_19 $$ settingsMap.put("parameterMap", serializableParameterMap)[ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_42 $$ if (sourceGroupId > 0) [ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_17 $$ if (parameterMap != null) [ FD ]
Line_3 $$ Map<String, Serializable> settingsMap = new HashMap()-->Line_22 $$ settingsMap.put("portletId", portletId)[ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_33 $$ if (remotePort > 0) [ CD ]
Line_3 $$ Map<String, Serializable> settingsMap = new HashMap()-->Line_43 $$ settingsMap.put("sourceGroupId", sourceGroupId)[ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_51 $$ if (targetPlid > 0) [ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_5 $$ settingsMap.put("fileName", fileName)[ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_27 $$ if (Validator.isNotNull(remoteAddress)) [ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_7 $$ if (MapUtil.isNotEmpty(layoutIdMap)) [ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_30 $$ if (Validator.isNotNull(remotePathContext)) [ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_34 $$ settingsMap.put("remotePort", remotePort)[ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_21 $$ if (Validator.isNotNull(portletId)) [ FD ]
Line_2 $$ protected static Map<String, Serializable> buildSettingsMap(long userId, long sourceGroupId, long sourcePlid, long targetGroupId, long targetPlid, String portletId, Boolean privateLayout, Map<Long, Boolean> layoutIdMap, long[] layoutIds, Map<String, String[]> parameterMap, String remoteAddress, int remotePort, String remotePathContext, Boolean secureConnection, Boolean remotePrivateLayout, Locale locale, TimeZone timeZone, String fileName) -->Line_40 $$ settingsMap.put("secureConnection", secureConnection)[ FD ]
