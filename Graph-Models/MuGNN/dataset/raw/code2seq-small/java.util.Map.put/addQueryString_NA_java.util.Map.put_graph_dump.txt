Line_19 $$ String[] newValues = new String[values.length + 1]-->Line_20 $$ System.arraycopy(values, 0, newValues, 0, values.length)[ FD ]
Line_2 $$ public static HttpServletRequest addQueryString(HttpServletRequest request, Map<String, String[]> parameterMap, String queryString, boolean inherit) -->Line_7 $$ parameterMap = new HashMap(parameterMap)[ CD ]
Line_10 $$ String name = parameterParts[0]-->Line_17 $$ parameterMap.put(name, new String[] [ FD ]
Line_16 $$ if (values == null) -->Line_21 $$ newValues[newValues.length - 1] = value[ CD ]
Line_8 $$ for (String parameter : parameters) -->Line_9 $$ String[] parameterParts = StringUtil.split(parameter, CharPool.EQUAL)[ FD ]
Line_7 $$ parameterMap = new HashMap(parameterMap)-->Line_22 $$ parameterMap.put(name, newValues)[ FD ]
Line_19 $$ String[] newValues = new String[values.length + 1]-->Line_22 $$ parameterMap.put(name, newValues)[ FD ]
Line_16 $$ if (values == null) -->Line_20 $$ System.arraycopy(values, 0, newValues, 0, values.length)[ CD ]
Line_2 $$ public static HttpServletRequest addQueryString(HttpServletRequest request, Map<String, String[]> parameterMap, String queryString, boolean inherit) -->Line_3 $$ String[] parameters = StringUtil.split(queryString, CharPool.AMPERSAND)[ FD ]
Line_2 $$ public static HttpServletRequest addQueryString(HttpServletRequest request, Map<String, String[]> parameterMap, String queryString, boolean inherit) -->Line_25 $$ request = new DynamicServletRequest(request, parameterMap, inherit)[ FD ]
Line_2 $$ public static HttpServletRequest addQueryString(HttpServletRequest request, Map<String, String[]> parameterMap, String queryString, boolean inherit) -->Line_26 $$ request.setAttribute(DYNAMIC_QUERY_STRING, queryString)[ FD ]
Line_2 $$ public static HttpServletRequest addQueryString(HttpServletRequest request, Map<String, String[]> parameterMap, String queryString, boolean inherit) -->Line_15 $$ String[] values = parameterMap.get(name)[ FD ]
Line_7 $$ parameterMap = new HashMap(parameterMap)-->Line_15 $$ String[] values = parameterMap.get(name)[ FD ]
Line_10 $$ String name = parameterParts[0]-->Line_15 $$ String[] values = parameterMap.get(name)[ FD ]
Line_16 $$ if (values == null) -->Line_17 $$ parameterMap.put(name, new String[] [ CD ]
Line_2 $$ public static HttpServletRequest addQueryString(HttpServletRequest request, Map<String, String[]> parameterMap, String queryString, boolean inherit) -->Line_17 $$ parameterMap.put(name, new String[] [ FD ]
Line_4 $$ if (parameters.length == 0) -->Line_5 $$ return request[ CD ]
Line_16 $$ if (values == null) -->Line_22 $$ parameterMap.put(name, newValues)[ CD ]
Line_10 $$ String name = parameterParts[0]-->Line_22 $$ parameterMap.put(name, newValues)[ FD ]
Line_25 $$ request = new DynamicServletRequest(request, parameterMap, inherit)-->Line_26 $$ request.setAttribute(DYNAMIC_QUERY_STRING, queryString)[ FD ]
Line_11 $$ String value = StringPool.BLANK-->Line_13 $$ value = parameterParts[1][ FD ]
Line_2 $$ public static HttpServletRequest addQueryString(HttpServletRequest request, Map<String, String[]> parameterMap, String queryString, boolean inherit) -->Line_26 $$ request.setAttribute(DYNAMIC_QUERY_STRING, queryString)[ CD ]
Line_13 $$ value = parameterParts[1]-->Line_21 $$ newValues[newValues.length - 1] = value[ FD ]
Line_2 $$ public static HttpServletRequest addQueryString(HttpServletRequest request, Map<String, String[]> parameterMap, String queryString, boolean inherit) -->Line_27 $$ return request[ CD ]
Line_15 $$ String[] values = parameterMap.get(name)-->Line_16 $$ if (values == null) [ FD ]
Line_2 $$ public static HttpServletRequest addQueryString(HttpServletRequest request, Map<String, String[]> parameterMap, String queryString, boolean inherit) -->Line_22 $$ parameterMap.put(name, newValues)[ FD ]
Line_16 $$ if (values == null) -->Line_19 $$ String[] newValues = new String[values.length + 1][ CD ]
Line_2 $$ public static HttpServletRequest addQueryString(HttpServletRequest request, Map<String, String[]> parameterMap, String queryString, boolean inherit) -->Line_4 $$ if (parameters.length == 0) [ CD ]
Line_2 $$ public static HttpServletRequest addQueryString(HttpServletRequest request, Map<String, String[]> parameterMap, String queryString, boolean inherit) -->Line_3 $$ String[] parameters = StringUtil.split(queryString, CharPool.AMPERSAND)[ CD ]
Line_2 $$ public static HttpServletRequest addQueryString(HttpServletRequest request, Map<String, String[]> parameterMap, String queryString, boolean inherit) -->Line_25 $$ request = new DynamicServletRequest(request, parameterMap, inherit)[ CD ]
Line_12 $$ if (parameterParts.length == 2) -->Line_13 $$ value = parameterParts[1][ CD ]
Line_11 $$ String value = StringPool.BLANK-->Line_21 $$ newValues[newValues.length - 1] = value[ FD ]
Line_7 $$ parameterMap = new HashMap(parameterMap)-->Line_17 $$ parameterMap.put(name, new String[] [ FD ]
Line_2 $$ public static HttpServletRequest addQueryString(HttpServletRequest request, Map<String, String[]> parameterMap, String queryString, boolean inherit) -->Line_7 $$ parameterMap = new HashMap(parameterMap)[ FD ]
Line_15 $$ String[] values = parameterMap.get(name)-->Line_20 $$ System.arraycopy(values, 0, newValues, 0, values.length)[ FD ]
