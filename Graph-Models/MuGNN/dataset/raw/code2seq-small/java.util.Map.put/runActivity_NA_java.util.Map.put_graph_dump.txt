Line_83 $$ if (message != null) -->Line_85 $$ NOTIFICATION_GROUP.createNotification(DISPLAY_ID, message, NotificationType.INFORMATION, notificationListener).notify(project)[ CD ]
Line_90 $$ final Set<String> ids = new LinkedHashSet<String>()-->Line_108 $$ final int pluginsNumber = ids.size()[ FD ]
Line_48 $$ final IdeaPluginDescriptor pluginDescriptor = PluginManager.getPlugin(PluginId.getId(id))-->Line_50 $$ myDisabledPlugins.put(plugin, pluginDescriptor)[ FD ]
Line_74 $$ if (!myDisabledPlugins.isEmpty()) -->Line_77 $$ message += "<a href=\"configure\">Configure plugins...</a><br>"[ CD ]
Line_16 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_109 $$ return "Unknown feature" + (addressedFeaturesNumber == 1 ? "" : "s") + " (" + addressedFeaturesPresentation + ") covered by " + (myPlugins.isEmpty() ? "disabled" : "non-bundled") + " plugin" + (pluginsNumber == 1 ? "" : "s") + " detected.<br>"[ CD ]
Line_72 $$ if (!myPlugins.isEmpty() || !myDisabledPlugins.isEmpty()) -->Line_74 $$ if (!myDisabledPlugins.isEmpty()) [ CD ]
Line_71 $$ String message = null-->Line_81 $$ message = "Features covered by " + IDEA_ULTIMATE_EDITION + " (" + StringUtil.join(myBundledPlugin, ", ") + ") are detected.<br>" + "<a href=\"open\">" + CHECK_ULTIMATE_EDITION_TITLE + "</a><br>" + "<a href=\"ignoreUltimate\">" + ULTIMATE_EDITION_SUGGESTION + "</a>"[ FD ]
Line_33 $$ final Map<String, Plugin> ids = new HashMap<String, Plugin>()-->Line_45 $$ for (String id : ids.keySet()) [ FD ]
Line_79 $$ message += "<a href=\"ignore\">Ignore Unknown Features</a>"-->Line_85 $$ NOTIFICATION_GROUP.createNotification(DISPLAY_ID, message, NotificationType.INFORMATION, notificationListener).notify(project)[ FD ]
Line_2 $$ public void runActivity(@NotNull final Project project) -->Line_114 $$ SwingUtilities.invokeLater(runnable)[ CD ]
Line_33 $$ final Map<String, Plugin> ids = new HashMap<String, Plugin>()-->Line_95 $$ ids.add(plugin.myPluginId)[ FD ]
Line_7 $$ final Set<UnknownFeature> unknownFeatures = collectorSuggester.getUnknownFeatures()-->Line_9 $$ if (extensions != null && unknownFeatures.isEmpty())[ FD ]
Line_79 $$ message += "<a href=\"ignore\">Ignore Unknown Features</a>"-->Line_83 $$ if (message != null) [ FD ]
Line_72 $$ if (!myPlugins.isEmpty() || !myDisabledPlugins.isEmpty()) -->Line_73 $$ message = getAddressedMessagePresentation()[ CD ]
Line_57 $$ if (ids.containsKey(pluginId.getIdString()) && !disabledPlugins.contains(pluginId.getIdString()) && !PluginManagerCore.isBrokenPlugin(loadedPlugin)) -->Line_58 $$ myPlugins.add(PluginDownloader.createDownloader(loadedPlugin))[ CD ]
Line_16 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_89 $$ final MultiMap<String, String> addressedFeatures = MultiMap.createSet()[ CD ]
Line_55 $$ for (IdeaPluginDescriptor loadedPlugin : myAllPlugins) -->Line_56 $$ final PluginId pluginId = loadedPlugin.getPluginId()[ FD ]
Line_102 $$ final String addressedFeaturesPresentation = StringUtil.join(addressedFeatures.entrySet(), new Function<Map.Entry<String, Collection<String>>, String>() -->Line_104 $$ return entry.getKey() + "[" + StringUtil.join(entry.getValue(), ", ") + "]"[ FD ]
Line_38 $$ for (Plugin plugin : pluginId) -->Line_92 $$ ids.add(plugin.getPluginId())[ FD ]
Line_45 $$ for (String id : ids.keySet()) -->Line_98 $$ for (UnknownFeature feature : myFeatures.get(id)) [ FD ]
Line_9 $$ if (extensions != null && unknownFeatures.isEmpty())-->Line_10 $$ return[ CD ]
Line_73 $$ message = getAddressedMessagePresentation()-->Line_85 $$ NOTIFICATION_GROUP.createNotification(DISPLAY_ID, message, NotificationType.INFORMATION, notificationListener).notify(project)[ FD ]
Line_75 $$ message += "<a href=\"enable\">Enable plugins...</a><br>"-->Line_81 $$ message = "Features covered by " + IDEA_ULTIMATE_EDITION + " (" + StringUtil.join(myBundledPlugin, ", ") + ") are detected.<br>" + "<a href=\"open\">" + CHECK_ULTIMATE_EDITION_TITLE + "</a><br>" + "<a href=\"ignoreUltimate\">" + ULTIMATE_EDITION_SUGGESTION + "</a>"[ FD ]
Line_75 $$ message += "<a href=\"enable\">Enable plugins...</a><br>"-->Line_77 $$ message += "<a href=\"configure\">Configure plugins...</a><br>"[ FD ]
Line_73 $$ message = getAddressedMessagePresentation()-->Line_83 $$ if (message != null) [ FD ]
Line_48 $$ final IdeaPluginDescriptor pluginDescriptor = PluginManager.getPlugin(PluginId.getId(id))-->Line_49 $$ if (pluginDescriptor != null) [ FD ]
Line_29 $$ if (project.isDisposed())-->Line_30 $$ return[ CD ]
Line_45 $$ for (String id : ids.keySet()) -->Line_48 $$ final IdeaPluginDescriptor pluginDescriptor = PluginManager.getPlugin(PluginId.getId(id))[ FD ]
Line_2 $$ public void runActivity(@NotNull final Project project) -->Line_25 $$ if (project.isDisposed())[ FD ]
Line_97 $$ for (String id : ids) -->Line_98 $$ for (UnknownFeature feature : myFeatures.get(id)) [ FD ]
Line_11 $$ final Runnable runnable = new Runnable() -->Line_14 $$ if (application.isUnitTestMode() || application.isHeadlessEnvironment())[ CD ]
Line_27 $$ if (extensions == null) -->Line_31 $$ EditorNotifications.getInstance(project).updateAllNotifications()[ CD ]
Line_33 $$ final Map<String, Plugin> ids = new HashMap<String, Plugin>()-->Line_39 $$ ids.put(plugin.myPluginId, plugin)[ FD ]
Line_16 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_108 $$ final int pluginsNumber = ids.size()[ CD ]
Line_73 $$ message = getAddressedMessagePresentation()-->Line_75 $$ message += "<a href=\"enable\">Enable plugins...</a><br>"[ FD ]
Line_72 $$ if (!myPlugins.isEmpty() || !myDisabledPlugins.isEmpty()) -->Line_79 $$ message += "<a href=\"ignore\">Ignore Unknown Features</a>"[ CD ]
Line_16 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_90 $$ final Set<String> ids = new LinkedHashSet<String>()[ CD ]
Line_75 $$ message += "<a href=\"enable\">Enable plugins...</a><br>"-->Line_83 $$ if (message != null) [ FD ]
Line_71 $$ String message = null-->Line_73 $$ message = getAddressedMessagePresentation()[ FD ]
Line_89 $$ final MultiMap<String, String> addressedFeatures = MultiMap.createSet()-->Line_102 $$ final String addressedFeaturesPresentation = StringUtil.join(addressedFeatures.entrySet(), new Function<Map.Entry<String, Collection<String>>, String>() [ FD ]
Line_38 $$ for (Plugin plugin : pluginId) -->Line_39 $$ ids.put(plugin.myPluginId, plugin)[ FD ]
Line_6 $$ final UnknownFeaturesCollector collectorSuggester = UnknownFeaturesCollector.getInstance(project)-->Line_7 $$ final Set<UnknownFeature> unknownFeatures = collectorSuggester.getUnknownFeatures()[ FD ]
Line_81 $$ message = "Features covered by " + IDEA_ULTIMATE_EDITION + " (" + StringUtil.join(myBundledPlugin, ", ") + ") are detected.<br>" + "<a href=\"open\">" + CHECK_ULTIMATE_EDITION_TITLE + "</a><br>" + "<a href=\"ignoreUltimate\">" + ULTIMATE_EDITION_SUGGESTION + "</a>"-->Line_83 $$ if (message != null) [ FD ]
Line_55 $$ for (IdeaPluginDescriptor loadedPlugin : myAllPlugins) -->Line_57 $$ if (ids.containsKey(pluginId.getIdString()) && !disabledPlugins.contains(pluginId.getIdString()) && !PluginManagerCore.isBrokenPlugin(loadedPlugin)) [ FD ]
Line_14 $$ if (application.isUnitTestMode() || application.isHeadlessEnvironment())-->Line_15 $$ return[ CD ]
Line_2 $$ public void runActivity(@NotNull final Project project) -->Line_8 $$ final KnownExtensions extensions = loadExtensions()[ CD ]
Line_2 $$ public void runActivity(@NotNull final Project project) -->Line_6 $$ final UnknownFeaturesCollector collectorSuggester = UnknownFeaturesCollector.getInstance(project)[ CD ]
Line_73 $$ message = getAddressedMessagePresentation()-->Line_81 $$ message = "Features covered by " + IDEA_ULTIMATE_EDITION + " (" + StringUtil.join(myBundledPlugin, ", ") + ") are detected.<br>" + "<a href=\"open\">" + CHECK_ULTIMATE_EDITION_TITLE + "</a><br>" + "<a href=\"ignoreUltimate\">" + ULTIMATE_EDITION_SUGGESTION + "</a>"[ FD ]
Line_33 $$ final Map<String, Plugin> ids = new HashMap<String, Plugin>()-->Line_108 $$ final int pluginsNumber = ids.size()[ FD ]
Line_79 $$ message += "<a href=\"ignore\">Ignore Unknown Features</a>"-->Line_81 $$ message = "Features covered by " + IDEA_ULTIMATE_EDITION + " (" + StringUtil.join(myBundledPlugin, ", ") + ") are detected.<br>" + "<a href=\"open\">" + CHECK_ULTIMATE_EDITION_TITLE + "</a><br>" + "<a href=\"ignoreUltimate\">" + ULTIMATE_EDITION_SUGGESTION + "</a>"[ FD ]
Line_77 $$ message += "<a href=\"configure\">Configure plugins...</a><br>"-->Line_81 $$ message = "Features covered by " + IDEA_ULTIMATE_EDITION + " (" + StringUtil.join(myBundledPlugin, ", ") + ") are detected.<br>" + "<a href=\"open\">" + CHECK_ULTIMATE_EDITION_TITLE + "</a><br>" + "<a href=\"ignoreUltimate\">" + ULTIMATE_EDITION_SUGGESTION + "</a>"[ FD ]
Line_44 $$ final List<String> disabledPlugins = PluginManagerCore.getDisabledPlugins()-->Line_47 $$ if (disabledPlugins.contains(id)) [ FD ]
Line_71 $$ String message = null-->Line_77 $$ message += "<a href=\"configure\">Configure plugins...</a><br>"[ FD ]
Line_80 $$ if (myBundledPlugin != null && !PropertiesComponent.getInstance().isTrueValue(IGNORE_ULTIMATE_EDITION)) -->Line_81 $$ message = "Features covered by " + IDEA_ULTIMATE_EDITION + " (" + StringUtil.join(myBundledPlugin, ", ") + ") are detected.<br>" + "<a href=\"open\">" + CHECK_ULTIMATE_EDITION_TITLE + "</a><br>" + "<a href=\"ignoreUltimate\">" + ULTIMATE_EDITION_SUGGESTION + "</a>"[ CD ]
Line_25 $$ if (project.isDisposed())-->Line_26 $$ return[ CD ]
Line_102 $$ final String addressedFeaturesPresentation = StringUtil.join(addressedFeatures.entrySet(), new Function<Map.Entry<String, Collection<String>>, String>() -->Line_104 $$ return entry.getKey() + "[" + StringUtil.join(entry.getValue(), ", ") + "]"[ CD ]
Line_75 $$ message += "<a href=\"enable\">Enable plugins...</a><br>"-->Line_79 $$ message += "<a href=\"ignore\">Ignore Unknown Features</a>"[ FD ]
Line_36 $$ final List<Plugin> pluginId = retrieve(feature)-->Line_37 $$ if (pluginId != null) [ FD ]
Line_2 $$ public void runActivity(@NotNull final Project project) -->Line_11 $$ final Runnable runnable = new Runnable() [ CD ]
Line_3 $$ if (!UpdateSettings.getInstance().isCheckNeeded()) -->Line_4 $$ return[ CD ]
Line_89 $$ final MultiMap<String, String> addressedFeatures = MultiMap.createSet()-->Line_99 $$ addressedFeatures.putValue(feature.getFeatureDisplayName(), feature.getImplementationName())[ FD ]
Line_2 $$ public void runActivity(@NotNull final Project project) -->Line_3 $$ if (!UpdateSettings.getInstance().isCheckNeeded()) [ CD ]
Line_77 $$ message += "<a href=\"configure\">Configure plugins...</a><br>"-->Line_85 $$ NOTIFICATION_GROUP.createNotification(DISPLAY_ID, message, NotificationType.INFORMATION, notificationListener).notify(project)[ FD ]
Line_74 $$ if (!myDisabledPlugins.isEmpty()) -->Line_75 $$ message += "<a href=\"enable\">Enable plugins...</a><br>"[ CD ]
Line_13 $$ final Application application = ApplicationManager.getApplication()-->Line_14 $$ if (application.isUnitTestMode() || application.isHeadlessEnvironment())[ FD ]
Line_45 $$ for (String id : ids.keySet()) -->Line_46 $$ Plugin plugin = ids.get(id)[ FD ]
Line_16 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_102 $$ final String addressedFeaturesPresentation = StringUtil.join(addressedFeatures.entrySet(), new Function<Map.Entry<String, Collection<String>>, String>() [ CD ]
Line_2 $$ public void runActivity(@NotNull final Project project) -->Line_9 $$ if (extensions != null && unknownFeatures.isEmpty())[ CD ]
Line_47 $$ if (disabledPlugins.contains(id)) -->Line_49 $$ if (pluginDescriptor != null) [ CD ]
Line_77 $$ message += "<a href=\"configure\">Configure plugins...</a><br>"-->Line_79 $$ message += "<a href=\"ignore\">Ignore Unknown Features</a>"[ FD ]
Line_16 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_71 $$ String message = null[ CD ]
Line_81 $$ message = "Features covered by " + IDEA_ULTIMATE_EDITION + " (" + StringUtil.join(myBundledPlugin, ", ") + ") are detected.<br>" + "<a href=\"open\">" + CHECK_ULTIMATE_EDITION_TITLE + "</a><br>" + "<a href=\"ignoreUltimate\">" + ULTIMATE_EDITION_SUGGESTION + "</a>"-->Line_85 $$ NOTIFICATION_GROUP.createNotification(DISPLAY_ID, message, NotificationType.INFORMATION, notificationListener).notify(project)[ FD ]
Line_91 $$ for (PluginDownloader plugin : myPlugins) -->Line_92 $$ ids.add(plugin.getPluginId())[ FD ]
Line_34 $$ for (UnknownFeature feature : unknownFeatures) -->Line_40 $$ myFeatures.putValue(plugin.myPluginId, feature)[ FD ]
Line_45 $$ for (String id : ids.keySet()) -->Line_47 $$ if (disabledPlugins.contains(id)) [ FD ]
Line_33 $$ final Map<String, Plugin> ids = new HashMap<String, Plugin>()-->Line_57 $$ if (ids.containsKey(pluginId.getIdString()) && !disabledPlugins.contains(pluginId.getIdString()) && !PluginManagerCore.isBrokenPlugin(loadedPlugin)) [ FD ]
Line_98 $$ for (UnknownFeature feature : myFeatures.get(id)) -->Line_99 $$ addressedFeatures.putValue(feature.getFeatureDisplayName(), feature.getImplementationName())[ FD ]
Line_11 $$ final Runnable runnable = new Runnable() -->Line_13 $$ final Application application = ApplicationManager.getApplication()[ CD ]
Line_27 $$ if (extensions == null) -->Line_28 $$ loadSupportedExtensions(myAllPlugins)[ CD ]
Line_33 $$ final Map<String, Plugin> ids = new HashMap<String, Plugin>()-->Line_54 $$ myBundledPlugin = hasBundledPluginToInstall(ids.values())[ FD ]
Line_61 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_63 $$ onSuccess()[ CD ]
Line_11 $$ final Runnable runnable = new Runnable() -->Line_114 $$ SwingUtilities.invokeLater(runnable)[ FD ]
Line_16 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_72 $$ if (!myPlugins.isEmpty() || !myDisabledPlugins.isEmpty()) [ CD ]
Line_71 $$ String message = null-->Line_85 $$ NOTIFICATION_GROUP.createNotification(DISPLAY_ID, message, NotificationType.INFORMATION, notificationListener).notify(project)[ FD ]
Line_2 $$ public void runActivity(@NotNull final Project project) -->Line_29 $$ if (project.isDisposed())[ FD ]
Line_36 $$ final List<Plugin> pluginId = retrieve(feature)-->Line_57 $$ if (ids.containsKey(pluginId.getIdString()) && !disabledPlugins.contains(pluginId.getIdString()) && !PluginManagerCore.isBrokenPlugin(loadedPlugin)) [ FD ]
Line_11 $$ final Runnable runnable = new Runnable() -->Line_16 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() [ CD ]
Line_77 $$ message += "<a href=\"configure\">Configure plugins...</a><br>"-->Line_83 $$ if (message != null) [ FD ]
Line_90 $$ final Set<String> ids = new LinkedHashSet<String>()-->Line_92 $$ ids.add(plugin.getPluginId())[ FD ]
Line_2 $$ public void runActivity(@NotNull final Project project) -->Line_31 $$ EditorNotifications.getInstance(project).updateAllNotifications()[ FD ]
Line_2 $$ public void runActivity(@NotNull final Project project) -->Line_6 $$ final UnknownFeaturesCollector collectorSuggester = UnknownFeaturesCollector.getInstance(project)[ FD ]
Line_90 $$ final Set<String> ids = new LinkedHashSet<String>()-->Line_95 $$ ids.add(plugin.myPluginId)[ FD ]
Line_73 $$ message = getAddressedMessagePresentation()-->Line_77 $$ message += "<a href=\"configure\">Configure plugins...</a><br>"[ FD ]
Line_49 $$ if (pluginDescriptor != null) -->Line_50 $$ myDisabledPlugins.put(plugin, pluginDescriptor)[ CD ]
Line_16 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_83 $$ if (message != null) [ CD ]
Line_55 $$ for (IdeaPluginDescriptor loadedPlugin : myAllPlugins) -->Line_58 $$ myPlugins.add(PluginDownloader.createDownloader(loadedPlugin))[ FD ]
Line_8 $$ final KnownExtensions extensions = loadExtensions()-->Line_27 $$ if (extensions == null) [ FD ]
Line_73 $$ message = getAddressedMessagePresentation()-->Line_79 $$ message += "<a href=\"ignore\">Ignore Unknown Features</a>"[ FD ]
Line_34 $$ for (UnknownFeature feature : unknownFeatures) -->Line_36 $$ final List<Plugin> pluginId = retrieve(feature)[ FD ]
Line_27 $$ if (extensions == null) -->Line_29 $$ if (project.isDisposed())[ CD ]
Line_33 $$ final Map<String, Plugin> ids = new HashMap<String, Plugin>()-->Line_46 $$ Plugin plugin = ids.get(id)[ FD ]
Line_38 $$ for (Plugin plugin : pluginId) -->Line_50 $$ myDisabledPlugins.put(plugin, pluginDescriptor)[ FD ]
Line_72 $$ if (!myPlugins.isEmpty() || !myDisabledPlugins.isEmpty()) -->Line_80 $$ if (myBundledPlugin != null && !PropertiesComponent.getInstance().isTrueValue(IGNORE_ULTIMATE_EDITION)) [ CD ]
Line_16 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_107 $$ final int addressedFeaturesNumber = addressedFeatures.keySet().size()[ CD ]
Line_84 $$ final ConfigurePluginsListener notificationListener = new ConfigurePluginsListener(unknownFeatures, project, PluginManagerMain.mapToPluginIds(myAllPlugins), myPlugins, myDisabledPlugins)-->Line_85 $$ NOTIFICATION_GROUP.createNotification(DISPLAY_ID, message, NotificationType.INFORMATION, notificationListener).notify(project)[ FD ]
Line_71 $$ String message = null-->Line_83 $$ if (message != null) [ FD ]
Line_89 $$ final MultiMap<String, String> addressedFeatures = MultiMap.createSet()-->Line_107 $$ final int addressedFeaturesNumber = addressedFeatures.keySet().size()[ FD ]
Line_75 $$ message += "<a href=\"enable\">Enable plugins...</a><br>"-->Line_85 $$ NOTIFICATION_GROUP.createNotification(DISPLAY_ID, message, NotificationType.INFORMATION, notificationListener).notify(project)[ FD ]
Line_71 $$ String message = null-->Line_75 $$ message += "<a href=\"enable\">Enable plugins...</a><br>"[ FD ]
Line_71 $$ String message = null-->Line_79 $$ message += "<a href=\"ignore\">Ignore Unknown Features</a>"[ FD ]
Line_47 $$ if (disabledPlugins.contains(id)) -->Line_48 $$ final IdeaPluginDescriptor pluginDescriptor = PluginManager.getPlugin(PluginId.getId(id))[ CD ]
Line_44 $$ final List<String> disabledPlugins = PluginManagerCore.getDisabledPlugins()-->Line_57 $$ if (ids.containsKey(pluginId.getIdString()) && !disabledPlugins.contains(pluginId.getIdString()) && !PluginManagerCore.isBrokenPlugin(loadedPlugin)) [ FD ]
Line_83 $$ if (message != null) -->Line_84 $$ final ConfigurePluginsListener notificationListener = new ConfigurePluginsListener(unknownFeatures, project, PluginManagerMain.mapToPluginIds(myAllPlugins), myPlugins, myDisabledPlugins)[ CD ]
Line_2 $$ public void runActivity(@NotNull final Project project) -->Line_7 $$ final Set<UnknownFeature> unknownFeatures = collectorSuggester.getUnknownFeatures()[ CD ]
Line_33 $$ final Map<String, Plugin> ids = new HashMap<String, Plugin>()-->Line_92 $$ ids.add(plugin.getPluginId())[ FD ]
Line_34 $$ for (UnknownFeature feature : unknownFeatures) -->Line_99 $$ addressedFeatures.putValue(feature.getFeatureDisplayName(), feature.getImplementationName())[ FD ]
Line_2 $$ public void runActivity(@NotNull final Project project) -->Line_85 $$ NOTIFICATION_GROUP.createNotification(DISPLAY_ID, message, NotificationType.INFORMATION, notificationListener).notify(project)[ FD ]
