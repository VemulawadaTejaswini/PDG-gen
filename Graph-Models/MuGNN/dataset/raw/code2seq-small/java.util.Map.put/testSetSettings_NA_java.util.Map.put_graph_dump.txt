Line_2 $$ public void testSetSettings() throws IOException -->Line_3 $$ CreateIndexRequestBuilder builder = new CreateIndexRequestBuilder(this.testClient, CreateIndexAction.INSTANCE)[ CD ]
Line_3 $$ CreateIndexRequestBuilder builder = new CreateIndexRequestBuilder(this.testClient, CreateIndexAction.INSTANCE)-->Line_5 $$ assertEquals(VALUE, builder.request().settings().get(KEY))[ FD ]
Line_2 $$ public void testSetSettings() throws IOException -->Line_5 $$ assertEquals(VALUE, builder.request().settings().get(KEY))[ CD ]
Line_16 $$ XContentBuilder xContent = XContentFactory.jsonBuilder().startObject().field(KEY, VALUE).endObject()-->Line_18 $$ builder.setSettings(xContent)[ FD ]
Line_3 $$ CreateIndexRequestBuilder builder = new CreateIndexRequestBuilder(this.testClient, CreateIndexAction.INSTANCE)-->Line_7 $$ assertEquals(VALUE, builder.request().settings().get(KEY))[ FD ]
Line_3 $$ CreateIndexRequestBuilder builder = new CreateIndexRequestBuilder(this.testClient, CreateIndexAction.INSTANCE)-->Line_10 $$ builder.setSettings(Settings.builder().put(KEY, VALUE).build())[ FD ]
Line_2 $$ public void testSetSettings() throws IOException -->Line_10 $$ builder.setSettings(Settings.builder().put(KEY, VALUE).build())[ CD ]
Line_2 $$ public void testSetSettings() throws IOException -->Line_12 $$ Map<String, String> settingsMap = new HashMap()[ CD ]
Line_16 $$ XContentBuilder xContent = XContentFactory.jsonBuilder().startObject().field(KEY, VALUE).endObject()-->Line_17 $$ xContent.close()[ FD ]
Line_12 $$ Map<String, String> settingsMap = new HashMap()-->Line_13 $$ settingsMap.put(KEY, VALUE)[ FD ]
Line_3 $$ CreateIndexRequestBuilder builder = new CreateIndexRequestBuilder(this.testClient, CreateIndexAction.INSTANCE)-->Line_6 $$ builder.setSettings("[ FD ]
Line_3 $$ CreateIndexRequestBuilder builder = new CreateIndexRequestBuilder(this.testClient, CreateIndexAction.INSTANCE)-->Line_11 $$ assertEquals(VALUE, builder.request().settings().get(KEY))[ FD ]
Line_2 $$ public void testSetSettings() throws IOException -->Line_8 $$ builder.setSettings(Settings.builder().put(KEY, VALUE))[ CD ]
Line_2 $$ public void testSetSettings() throws IOException -->Line_7 $$ assertEquals(VALUE, builder.request().settings().get(KEY))[ CD ]
Line_12 $$ Map<String, String> settingsMap = new HashMap()-->Line_14 $$ builder.setSettings(settingsMap)[ FD ]
Line_3 $$ CreateIndexRequestBuilder builder = new CreateIndexRequestBuilder(this.testClient, CreateIndexAction.INSTANCE)-->Line_18 $$ builder.setSettings(xContent)[ FD ]
Line_3 $$ CreateIndexRequestBuilder builder = new CreateIndexRequestBuilder(this.testClient, CreateIndexAction.INSTANCE)-->Line_15 $$ assertEquals(VALUE, builder.request().settings().get(KEY))[ FD ]
Line_2 $$ public void testSetSettings() throws IOException -->Line_6 $$ builder.setSettings("[ CD ]
Line_2 $$ public void testSetSettings() throws IOException -->Line_17 $$ xContent.close()[ CD ]
Line_2 $$ public void testSetSettings() throws IOException -->Line_16 $$ XContentBuilder xContent = XContentFactory.jsonBuilder().startObject().field(KEY, VALUE).endObject()[ CD ]
Line_2 $$ public void testSetSettings() throws IOException -->Line_9 $$ assertEquals(VALUE, builder.request().settings().get(KEY))[ CD ]
Line_3 $$ CreateIndexRequestBuilder builder = new CreateIndexRequestBuilder(this.testClient, CreateIndexAction.INSTANCE)-->Line_14 $$ builder.setSettings(settingsMap)[ FD ]
Line_2 $$ public void testSetSettings() throws IOException -->Line_4 $$ builder.setSettings(KEY, VALUE)[ CD ]
Line_3 $$ CreateIndexRequestBuilder builder = new CreateIndexRequestBuilder(this.testClient, CreateIndexAction.INSTANCE)-->Line_19 $$ assertEquals(VALUE, builder.request().settings().get(KEY))[ FD ]
Line_2 $$ public void testSetSettings() throws IOException -->Line_14 $$ builder.setSettings(settingsMap)[ CD ]
Line_2 $$ public void testSetSettings() throws IOException -->Line_15 $$ assertEquals(VALUE, builder.request().settings().get(KEY))[ CD ]
Line_3 $$ CreateIndexRequestBuilder builder = new CreateIndexRequestBuilder(this.testClient, CreateIndexAction.INSTANCE)-->Line_8 $$ builder.setSettings(Settings.builder().put(KEY, VALUE))[ FD ]
Line_2 $$ public void testSetSettings() throws IOException -->Line_13 $$ settingsMap.put(KEY, VALUE)[ CD ]
Line_2 $$ public void testSetSettings() throws IOException -->Line_19 $$ assertEquals(VALUE, builder.request().settings().get(KEY))[ CD ]
Line_2 $$ public void testSetSettings() throws IOException -->Line_11 $$ assertEquals(VALUE, builder.request().settings().get(KEY))[ CD ]
Line_3 $$ CreateIndexRequestBuilder builder = new CreateIndexRequestBuilder(this.testClient, CreateIndexAction.INSTANCE)-->Line_4 $$ builder.setSettings(KEY, VALUE)[ FD ]
Line_3 $$ CreateIndexRequestBuilder builder = new CreateIndexRequestBuilder(this.testClient, CreateIndexAction.INSTANCE)-->Line_9 $$ assertEquals(VALUE, builder.request().settings().get(KEY))[ FD ]
Line_2 $$ public void testSetSettings() throws IOException -->Line_18 $$ builder.setSettings(xContent)[ CD ]
