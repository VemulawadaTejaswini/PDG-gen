Line_10 $$ String[] params = new String[0]-->Line_16 $$ params = mapping.params()[ FD ]
Line_6 $$ RequestMapping mapping = AnnotationUtils.findAnnotation(method, RequestMapping.class)-->Line_19 $$ headers = mapping.headers()[ FD ]
Line_2 $$ protected boolean isHandlerMethod(Method method) -->Line_22 $$ this.mappings.put(method, mappingInfo)[ FD ]
Line_21 $$ RequestMappingInfo mappingInfo = new RequestMappingInfo(patterns, methods, params, headers)-->Line_22 $$ this.mappings.put(method, mappingInfo)[ FD ]
Line_7 $$ if (mapping != null) -->Line_21 $$ RequestMappingInfo mappingInfo = new RequestMappingInfo(patterns, methods, params, headers)[ CD ]
Line_6 $$ RequestMapping mapping = AnnotationUtils.findAnnotation(method, RequestMapping.class)-->Line_18 $$ if (!hasTypeLevelMapping() || !Arrays.equals(mapping.headers(), getTypeLevelMapping().headers())) [ FD ]
Line_7 $$ if (mapping != null) -->Line_9 $$ RequestMethod[] methods = new RequestMethod[0][ CD ]
Line_6 $$ RequestMapping mapping = AnnotationUtils.findAnnotation(method, RequestMapping.class)-->Line_13 $$ methods = mapping.method()[ FD ]
Line_9 $$ RequestMethod[] methods = new RequestMethod[0]-->Line_13 $$ methods = mapping.method()[ FD ]
Line_6 $$ RequestMapping mapping = AnnotationUtils.findAnnotation(method, RequestMapping.class)-->Line_16 $$ params = mapping.params()[ FD ]
Line_7 $$ if (mapping != null) -->Line_18 $$ if (!hasTypeLevelMapping() || !Arrays.equals(mapping.headers(), getTypeLevelMapping().headers())) [ CD ]
Line_6 $$ RequestMapping mapping = AnnotationUtils.findAnnotation(method, RequestMapping.class)-->Line_7 $$ if (mapping != null) [ FD ]
Line_2 $$ protected boolean isHandlerMethod(Method method) -->Line_3 $$ if (this.mappings.containsKey(method)) [ FD ]
Line_7 $$ if (mapping != null) -->Line_8 $$ String[] patterns = mapping.value()[ CD ]
Line_2 $$ protected boolean isHandlerMethod(Method method) -->Line_25 $$ return false[ CD ]
Line_2 $$ protected boolean isHandlerMethod(Method method) -->Line_6 $$ RequestMapping mapping = AnnotationUtils.findAnnotation(method, RequestMapping.class)[ CD ]
Line_7 $$ if (mapping != null) -->Line_11 $$ String[] headers = new String[0][ CD ]
Line_2 $$ protected boolean isHandlerMethod(Method method) -->Line_6 $$ RequestMapping mapping = AnnotationUtils.findAnnotation(method, RequestMapping.class)[ FD ]
Line_7 $$ if (mapping != null) -->Line_12 $$ if (!hasTypeLevelMapping() || !Arrays.equals(mapping.method(), getTypeLevelMapping().method())) [ CD ]
Line_15 $$ if (!hasTypeLevelMapping() || !Arrays.equals(mapping.params(), getTypeLevelMapping().params())) -->Line_16 $$ params = mapping.params()[ CD ]
Line_18 $$ if (!hasTypeLevelMapping() || !Arrays.equals(mapping.headers(), getTypeLevelMapping().headers())) -->Line_19 $$ headers = mapping.headers()[ CD ]
Line_7 $$ if (mapping != null) -->Line_23 $$ return true[ CD ]
Line_7 $$ if (mapping != null) -->Line_10 $$ String[] params = new String[0][ CD ]
Line_6 $$ RequestMapping mapping = AnnotationUtils.findAnnotation(method, RequestMapping.class)-->Line_12 $$ if (!hasTypeLevelMapping() || !Arrays.equals(mapping.method(), getTypeLevelMapping().method())) [ FD ]
Line_2 $$ protected boolean isHandlerMethod(Method method) -->Line_3 $$ if (this.mappings.containsKey(method)) [ CD ]
Line_7 $$ if (mapping != null) -->Line_22 $$ this.mappings.put(method, mappingInfo)[ CD ]
Line_11 $$ String[] headers = new String[0]-->Line_19 $$ headers = mapping.headers()[ FD ]
Line_2 $$ protected boolean isHandlerMethod(Method method) -->Line_7 $$ if (mapping != null) [ CD ]
Line_3 $$ if (this.mappings.containsKey(method)) -->Line_4 $$ return true[ CD ]
Line_6 $$ RequestMapping mapping = AnnotationUtils.findAnnotation(method, RequestMapping.class)-->Line_8 $$ String[] patterns = mapping.value()[ FD ]
Line_6 $$ RequestMapping mapping = AnnotationUtils.findAnnotation(method, RequestMapping.class)-->Line_15 $$ if (!hasTypeLevelMapping() || !Arrays.equals(mapping.params(), getTypeLevelMapping().params())) [ FD ]
Line_7 $$ if (mapping != null) -->Line_15 $$ if (!hasTypeLevelMapping() || !Arrays.equals(mapping.params(), getTypeLevelMapping().params())) [ CD ]
Line_12 $$ if (!hasTypeLevelMapping() || !Arrays.equals(mapping.method(), getTypeLevelMapping().method())) -->Line_13 $$ methods = mapping.method()[ CD ]
