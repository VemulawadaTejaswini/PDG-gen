Line_2 $$ public void velocityEngineFactoryBeanWithVelocityProperties() throws VelocityException, IOException -->Line_4 $$ Properties props = new Properties()[ CD ]
Line_2 $$ public void velocityEngineFactoryBeanWithVelocityProperties() throws VelocityException, IOException -->Line_12 $$ assertThat(vefb.getObject(), instanceOf(VelocityEngine.class))[ CD ]
Line_2 $$ public void velocityEngineFactoryBeanWithVelocityProperties() throws VelocityException, IOException -->Line_13 $$ VelocityEngine ve = vefb.getObject()[ CD ]
Line_7 $$ Object value = new Object()-->Line_15 $$ assertEquals(value, ve.getProperty("myentry"))[ FD ]
Line_2 $$ public void velocityEngineFactoryBeanWithVelocityProperties() throws VelocityException, IOException -->Line_10 $$ vefb.setVelocityPropertiesMap(map)[ CD ]
Line_3 $$ VelocityEngineFactoryBean vefb = new VelocityEngineFactoryBean()-->Line_13 $$ VelocityEngine ve = vefb.getObject()[ FD ]
Line_2 $$ public void velocityEngineFactoryBeanWithVelocityProperties() throws VelocityException, IOException -->Line_9 $$ map.put("myentry", value)[ CD ]
Line_2 $$ public void velocityEngineFactoryBeanWithVelocityProperties() throws VelocityException, IOException -->Line_14 $$ assertEquals("/mydir", ve.getProperty("myprop"))[ CD ]
Line_3 $$ VelocityEngineFactoryBean vefb = new VelocityEngineFactoryBean()-->Line_12 $$ assertThat(vefb.getObject(), instanceOf(VelocityEngine.class))[ FD ]
Line_2 $$ public void velocityEngineFactoryBeanWithVelocityProperties() throws VelocityException, IOException -->Line_11 $$ vefb.afterPropertiesSet()[ CD ]
Line_3 $$ VelocityEngineFactoryBean vefb = new VelocityEngineFactoryBean()-->Line_11 $$ vefb.afterPropertiesSet()[ FD ]
Line_2 $$ public void velocityEngineFactoryBeanWithVelocityProperties() throws VelocityException, IOException -->Line_5 $$ props.setProperty("myprop", "/mydir")[ CD ]
Line_2 $$ public void velocityEngineFactoryBeanWithVelocityProperties() throws VelocityException, IOException -->Line_15 $$ assertEquals(value, ve.getProperty("myentry"))[ CD ]
Line_7 $$ Object value = new Object()-->Line_9 $$ map.put("myentry", value)[ FD ]
Line_2 $$ public void velocityEngineFactoryBeanWithVelocityProperties() throws VelocityException, IOException -->Line_7 $$ Object value = new Object()[ CD ]
Line_13 $$ VelocityEngine ve = vefb.getObject()-->Line_15 $$ assertEquals(value, ve.getProperty("myentry"))[ FD ]
Line_2 $$ public void velocityEngineFactoryBeanWithVelocityProperties() throws VelocityException, IOException -->Line_8 $$ Map<String, Object> map = new HashMap()[ CD ]
Line_2 $$ public void velocityEngineFactoryBeanWithVelocityProperties() throws VelocityException, IOException -->Line_3 $$ VelocityEngineFactoryBean vefb = new VelocityEngineFactoryBean()[ CD ]
Line_2 $$ public void velocityEngineFactoryBeanWithVelocityProperties() throws VelocityException, IOException -->Line_6 $$ vefb.setVelocityProperties(props)[ CD ]
Line_13 $$ VelocityEngine ve = vefb.getObject()-->Line_14 $$ assertEquals("/mydir", ve.getProperty("myprop"))[ FD ]
Line_3 $$ VelocityEngineFactoryBean vefb = new VelocityEngineFactoryBean()-->Line_6 $$ vefb.setVelocityProperties(props)[ FD ]
Line_3 $$ VelocityEngineFactoryBean vefb = new VelocityEngineFactoryBean()-->Line_10 $$ vefb.setVelocityPropertiesMap(map)[ FD ]
Line_4 $$ Properties props = new Properties()-->Line_6 $$ vefb.setVelocityProperties(props)[ FD ]
Line_8 $$ Map<String, Object> map = new HashMap()-->Line_10 $$ vefb.setVelocityPropertiesMap(map)[ FD ]
Line_4 $$ Properties props = new Properties()-->Line_5 $$ props.setProperty("myprop", "/mydir")[ FD ]
Line_8 $$ Map<String, Object> map = new HashMap()-->Line_9 $$ map.put("myentry", value)[ FD ]
