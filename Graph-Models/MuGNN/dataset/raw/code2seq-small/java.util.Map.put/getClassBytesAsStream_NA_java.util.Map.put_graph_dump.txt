Line_2 $$ public InputStream getClassBytesAsStream(String className) throws IOException -->Line_4 $$ final PseudoClass aClass = myLoaded.get(internalName)[ CD ]
Line_5 $$ if (aClass == PseudoClass.NULL_OBJ) -->Line_6 $$ return null[ CD ]
Line_2 $$ public InputStream getClassBytesAsStream(String className) throws IOException -->Line_3 $$ final String internalName = className.replace('.', '/')[ CD ]
Line_2 $$ public InputStream getClassBytesAsStream(String className) throws IOException -->Line_5 $$ if (aClass == PseudoClass.NULL_OBJ) [ CD ]
Line_3 $$ final String internalName = className.replace('.', '/')-->Line_10 $$ bytes = getClassBytesStream(internalName)[ FD ]
Line_12 $$ if (aClass == null && bytes == null) -->Line_13 $$ myLoaded.put(internalName, PseudoClass.NULL_OBJ)[ CD ]
Line_2 $$ public InputStream getClassBytesAsStream(String className) throws IOException -->Line_16 $$ return bytes[ CD ]
Line_3 $$ final String internalName = className.replace('.', '/')-->Line_13 $$ myLoaded.put(internalName, PseudoClass.NULL_OBJ)[ FD ]
Line_2 $$ public InputStream getClassBytesAsStream(String className) throws IOException -->Line_8 $$ InputStream bytes = null[ CD ]
Line_8 $$ InputStream bytes = null-->Line_10 $$ bytes = getClassBytesStream(internalName)[ FD ]
Line_3 $$ final String internalName = className.replace('.', '/')-->Line_4 $$ final PseudoClass aClass = myLoaded.get(internalName)[ FD ]
Line_4 $$ final PseudoClass aClass = myLoaded.get(internalName)-->Line_5 $$ if (aClass == PseudoClass.NULL_OBJ) [ FD ]
Line_2 $$ public InputStream getClassBytesAsStream(String className) throws IOException -->Line_3 $$ final String internalName = className.replace('.', '/')[ FD ]
