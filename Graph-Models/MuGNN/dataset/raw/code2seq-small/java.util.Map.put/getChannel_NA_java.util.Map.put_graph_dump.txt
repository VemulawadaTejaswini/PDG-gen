Line_3 $$ ChannelDescriptor descriptor = myCache.get(ioFile)-->Line_6 $$ descriptor = new ChannelDescriptor(ioFile, myAccessMode)[ FD ]
Line_2 $$ public synchronized RandomAccessFile getChannel(File ioFile) throws FileNotFoundException -->Line_7 $$ myCache.put(ioFile, descriptor)[ FD ]
Line_3 $$ ChannelDescriptor descriptor = myCache.get(ioFile)-->Line_7 $$ myCache.put(ioFile, descriptor)[ FD ]
Line_6 $$ descriptor = new ChannelDescriptor(ioFile, myAccessMode)-->Line_10 $$ return descriptor.getChannel()[ FD ]
Line_6 $$ descriptor = new ChannelDescriptor(ioFile, myAccessMode)-->Line_9 $$ descriptor.lock()[ FD ]
Line_3 $$ ChannelDescriptor descriptor = myCache.get(ioFile)-->Line_9 $$ descriptor.lock()[ FD ]
Line_3 $$ ChannelDescriptor descriptor = myCache.get(ioFile)-->Line_10 $$ return descriptor.getChannel()[ FD ]
Line_2 $$ public synchronized RandomAccessFile getChannel(File ioFile) throws FileNotFoundException -->Line_10 $$ return descriptor.getChannel()[ CD ]
Line_2 $$ public synchronized RandomAccessFile getChannel(File ioFile) throws FileNotFoundException -->Line_3 $$ ChannelDescriptor descriptor = myCache.get(ioFile)[ FD ]
Line_2 $$ public synchronized RandomAccessFile getChannel(File ioFile) throws FileNotFoundException -->Line_4 $$ if (descriptor == null) [ CD ]
Line_4 $$ if (descriptor == null) -->Line_5 $$ dropOvercache()[ CD ]
Line_3 $$ ChannelDescriptor descriptor = myCache.get(ioFile)-->Line_4 $$ if (descriptor == null) [ FD ]
Line_4 $$ if (descriptor == null) -->Line_6 $$ descriptor = new ChannelDescriptor(ioFile, myAccessMode)[ CD ]
Line_2 $$ public synchronized RandomAccessFile getChannel(File ioFile) throws FileNotFoundException -->Line_3 $$ ChannelDescriptor descriptor = myCache.get(ioFile)[ CD ]
Line_4 $$ if (descriptor == null) -->Line_7 $$ myCache.put(ioFile, descriptor)[ CD ]
Line_2 $$ public synchronized RandomAccessFile getChannel(File ioFile) throws FileNotFoundException -->Line_9 $$ descriptor.lock()[ CD ]
Line_6 $$ descriptor = new ChannelDescriptor(ioFile, myAccessMode)-->Line_7 $$ myCache.put(ioFile, descriptor)[ FD ]
