Line_5 $$ Map<String, Object> headers = new HashMap<String, Object>()-->Line_7 $$ messagingTemplate.convertAndSend(destination, "Hello", headers)[ FD ]
Line_3 $$ Destination destination = new Destination() -->Line_8 $$ verify(jmsTemplate).send(eq(destination), messageCreator.capture())[ FD ]
Line_2 $$ public void convertAndSendPayloadAndHeaders() throws JMSException -->Line_9 $$ assertTextMessage(messageCreator.getValue())[ CD ]
Line_2 $$ public void convertAndSendPayloadAndHeaders() throws JMSException -->Line_7 $$ messagingTemplate.convertAndSend(destination, "Hello", headers)[ CD ]
Line_3 $$ Destination destination = new Destination() -->Line_7 $$ messagingTemplate.convertAndSend(destination, "Hello", headers)[ FD ]
Line_2 $$ public void convertAndSendPayloadAndHeaders() throws JMSException -->Line_6 $$ headers.put("foo", "bar")[ CD ]
Line_2 $$ public void convertAndSendPayloadAndHeaders() throws JMSException -->Line_5 $$ Map<String, Object> headers = new HashMap<String, Object>()[ CD ]
Line_2 $$ public void convertAndSendPayloadAndHeaders() throws JMSException -->Line_3 $$ Destination destination = new Destination() [ CD ]
Line_5 $$ Map<String, Object> headers = new HashMap<String, Object>()-->Line_6 $$ headers.put("foo", "bar")[ FD ]
Line_2 $$ public void convertAndSendPayloadAndHeaders() throws JMSException -->Line_8 $$ verify(jmsTemplate).send(eq(destination), messageCreator.capture())[ CD ]
