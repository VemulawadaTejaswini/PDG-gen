Line_10 $$ if (result != null) -->Line_11 $$ Map<String, List> map = context.get(BOUND)[ CD ]
Line_12 $$ if (map == null) -->Line_13 $$ context.put(BOUND, map = new HashMap<String, List>())[ CD ]
Line_7 $$ return new DslPointcut() -->Line_9 $$ final List result = pct.matches(src, context)[ FD ]
Line_10 $$ if (result != null) -->Line_15 $$ map.put(name, result)[ CD ]
Line_13 $$ context.put(BOUND, map = new HashMap<String, List>())-->Line_15 $$ map.put(name, result)[ FD ]
Line_11 $$ Map<String, List> map = context.get(BOUND)-->Line_15 $$ map.put(name, result)[ FD ]
Line_6 $$ final DslPointcut pct = (DslPointcut) ((Map) arg).values().iterator().next()-->Line_9 $$ final List result = pct.matches(src, context)[ FD ]
Line_7 $$ return new DslPointcut() -->Line_17 $$ return result[ CD ]
Line_7 $$ return new DslPointcut() -->Line_11 $$ Map<String, List> map = context.get(BOUND)[ FD ]
Line_7 $$ return new DslPointcut() -->Line_9 $$ final List result = pct.matches(src, context)[ CD ]
Line_5 $$ final String name = (String) ((Map) arg).keySet().iterator().next()-->Line_15 $$ map.put(name, result)[ FD ]
Line_7 $$ return new DslPointcut() -->Line_13 $$ context.put(BOUND, map = new HashMap<String, List>())[ FD ]
Line_6 $$ final DslPointcut pct = (DslPointcut) ((Map) arg).values().iterator().next()-->Line_20 $$ return pct.operatesOn(c)[ FD ]
Line_7 $$ return new DslPointcut() -->Line_20 $$ return pct.operatesOn(c)[ FD ]
Line_7 $$ return new DslPointcut() -->Line_10 $$ if (result != null) [ CD ]
Line_2 $$ public static DslPointcut bind(final Object arg) -->Line_5 $$ final String name = (String) ((Map) arg).keySet().iterator().next()[ CD ]
Line_11 $$ Map<String, List> map = context.get(BOUND)-->Line_12 $$ if (map == null) [ FD ]
Line_2 $$ public static DslPointcut bind(final Object arg) -->Line_7 $$ return new DslPointcut() [ CD ]
Line_10 $$ if (result != null) -->Line_12 $$ if (map == null) [ CD ]
Line_11 $$ Map<String, List> map = context.get(BOUND)-->Line_13 $$ context.put(BOUND, map = new HashMap<String, List>())[ FD ]
Line_9 $$ final List result = pct.matches(src, context)-->Line_15 $$ map.put(name, result)[ FD ]
Line_2 $$ public static DslPointcut bind(final Object arg) -->Line_6 $$ final DslPointcut pct = (DslPointcut) ((Map) arg).values().iterator().next()[ CD ]
Line_7 $$ return new DslPointcut() -->Line_20 $$ return pct.operatesOn(c)[ CD ]
Line_9 $$ final List result = pct.matches(src, context)-->Line_10 $$ if (result != null) [ FD ]
