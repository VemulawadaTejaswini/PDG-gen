Line_12 $$ String internedName = internedNames.get(name)-->Line_13 $$ if (internedName == null) [ FD ]
Line_10 $$ for (XAttr xAttr : xAttrs) -->Line_17 $$ XAttr internedXAttr = new XAttr.Builder().setName(internedName).setNameSpace(xAttr.getNameSpace()).setValue(xAttr.getValue()).build()[ FD ]
Line_12 $$ String internedName = internedNames.get(name)-->Line_14 $$ internedName = name[ FD ]
Line_2 $$ public static void updateINodeXAttrs(INode inode, List<XAttr> xAttrs, int snapshotId) throws QuotaExceededException -->Line_24 $$ inode.addXAttrFeature(new XAttrFeature(newXAttrs), snapshotId)[ CD ]
Line_13 $$ if (internedName == null) -->Line_15 $$ internedNames.put(internedName, internedName)[ CD ]
Line_14 $$ internedName = name-->Line_17 $$ XAttr internedXAttr = new XAttr.Builder().setName(internedName).setNameSpace(xAttr.getNameSpace()).setValue(xAttr.getValue()).build()[ FD ]
Line_12 $$ String internedName = internedNames.get(name)-->Line_17 $$ XAttr internedXAttr = new XAttr.Builder().setName(internedName).setNameSpace(xAttr.getNameSpace()).setValue(xAttr.getValue()).build()[ FD ]
Line_9 $$ List<XAttr> internedXAttrs = Lists.newArrayListWithCapacity(xAttrs.size())-->Line_18 $$ internedXAttrs.add(internedXAttr)[ FD ]
Line_4 $$ if (inode.getXAttrFeature() != null) -->Line_5 $$ inode.removeXAttrFeature(snapshotId)[ CD ]
Line_3 $$ if (xAttrs == null || xAttrs.isEmpty()) -->Line_7 $$ return[ CD ]
Line_3 $$ if (xAttrs == null || xAttrs.isEmpty()) -->Line_4 $$ if (inode.getXAttrFeature() != null) [ CD ]
Line_2 $$ public static void updateINodeXAttrs(INode inode, List<XAttr> xAttrs, int snapshotId) throws QuotaExceededException -->Line_3 $$ if (xAttrs == null || xAttrs.isEmpty()) [ FD ]
Line_9 $$ List<XAttr> internedXAttrs = Lists.newArrayListWithCapacity(xAttrs.size())-->Line_20 $$ ImmutableList<XAttr> newXAttrs = ImmutableList.copyOf(internedXAttrs)[ FD ]
Line_2 $$ public static void updateINodeXAttrs(INode inode, List<XAttr> xAttrs, int snapshotId) throws QuotaExceededException -->Line_9 $$ List<XAttr> internedXAttrs = Lists.newArrayListWithCapacity(xAttrs.size())[ CD ]
Line_2 $$ public static void updateINodeXAttrs(INode inode, List<XAttr> xAttrs, int snapshotId) throws QuotaExceededException -->Line_21 $$ if (inode.getXAttrFeature() != null) [ CD ]
Line_12 $$ String internedName = internedNames.get(name)-->Line_15 $$ internedNames.put(internedName, internedName)[ FD ]
Line_2 $$ public static void updateINodeXAttrs(INode inode, List<XAttr> xAttrs, int snapshotId) throws QuotaExceededException -->Line_24 $$ inode.addXAttrFeature(new XAttrFeature(newXAttrs), snapshotId)[ FD ]
Line_2 $$ public static void updateINodeXAttrs(INode inode, List<XAttr> xAttrs, int snapshotId) throws QuotaExceededException -->Line_3 $$ if (xAttrs == null || xAttrs.isEmpty()) [ CD ]
Line_2 $$ public static void updateINodeXAttrs(INode inode, List<XAttr> xAttrs, int snapshotId) throws QuotaExceededException -->Line_22 $$ inode.removeXAttrFeature(snapshotId)[ FD ]
Line_2 $$ public static void updateINodeXAttrs(INode inode, List<XAttr> xAttrs, int snapshotId) throws QuotaExceededException -->Line_4 $$ if (inode.getXAttrFeature() != null) [ FD ]
Line_14 $$ internedName = name-->Line_15 $$ internedNames.put(internedName, internedName)[ FD ]
Line_2 $$ public static void updateINodeXAttrs(INode inode, List<XAttr> xAttrs, int snapshotId) throws QuotaExceededException -->Line_20 $$ ImmutableList<XAttr> newXAttrs = ImmutableList.copyOf(internedXAttrs)[ CD ]
Line_21 $$ if (inode.getXAttrFeature() != null) -->Line_22 $$ inode.removeXAttrFeature(snapshotId)[ CD ]
Line_13 $$ if (internedName == null) -->Line_14 $$ internedName = name[ CD ]
Line_2 $$ public static void updateINodeXAttrs(INode inode, List<XAttr> xAttrs, int snapshotId) throws QuotaExceededException -->Line_5 $$ inode.removeXAttrFeature(snapshotId)[ FD ]
Line_10 $$ for (XAttr xAttr : xAttrs) -->Line_11 $$ final String name = xAttr.getName()[ FD ]
Line_2 $$ public static void updateINodeXAttrs(INode inode, List<XAttr> xAttrs, int snapshotId) throws QuotaExceededException -->Line_9 $$ List<XAttr> internedXAttrs = Lists.newArrayListWithCapacity(xAttrs.size())[ FD ]
Line_11 $$ final String name = xAttr.getName()-->Line_14 $$ internedName = name[ FD ]
Line_17 $$ XAttr internedXAttr = new XAttr.Builder().setName(internedName).setNameSpace(xAttr.getNameSpace()).setValue(xAttr.getValue()).build()-->Line_18 $$ internedXAttrs.add(internedXAttr)[ FD ]
Line_2 $$ public static void updateINodeXAttrs(INode inode, List<XAttr> xAttrs, int snapshotId) throws QuotaExceededException -->Line_21 $$ if (inode.getXAttrFeature() != null) [ FD ]
Line_11 $$ final String name = xAttr.getName()-->Line_12 $$ String internedName = internedNames.get(name)[ FD ]
