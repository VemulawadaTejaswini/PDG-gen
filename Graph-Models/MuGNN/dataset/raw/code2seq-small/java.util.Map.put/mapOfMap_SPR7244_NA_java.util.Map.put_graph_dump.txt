Line_12 $$ Object evaluated = exp.getValue(ctx)-->Line_17 $$ assertEquals("Arthur", evaluated)[ FD ]
Line_2 $$ public void mapOfMap_SPR7244() throws Exception -->Line_3 $$ Map<String, Object> map = new LinkedHashMap<String, Object>()[ CD ]
Line_16 $$ evaluated = exp.getValue(ctx)-->Line_17 $$ assertEquals("Arthur", evaluated)[ FD ]
Line_9 $$ ExpressionParser parser = new SpelExpressionParser()-->Line_15 $$ exp = parser.parseExpression(el2)[ FD ]
Line_15 $$ exp = parser.parseExpression(el2)-->Line_16 $$ evaluated = exp.getValue(ctx)[ FD ]
Line_2 $$ public void mapOfMap_SPR7244() throws Exception -->Line_11 $$ Expression exp = parser.parseExpression(el1)[ CD ]
Line_3 $$ Map<String, Object> map = new LinkedHashMap<String, Object>()-->Line_4 $$ map.put("uri", "http:")[ FD ]
Line_11 $$ Expression exp = parser.parseExpression(el1)-->Line_15 $$ exp = parser.parseExpression(el2)[ FD ]
Line_8 $$ StandardEvaluationContext ctx = new StandardEvaluationContext(map)-->Line_16 $$ evaluated = exp.getValue(ctx)[ FD ]
Line_11 $$ Expression exp = parser.parseExpression(el1)-->Line_12 $$ Object evaluated = exp.getValue(ctx)[ FD ]
Line_2 $$ public void mapOfMap_SPR7244() throws Exception -->Line_10 $$ String el1 = "#root['value'].get('givenName')"[ CD ]
Line_14 $$ String el2 = "#root['value']['givenName']"-->Line_15 $$ exp = parser.parseExpression(el2)[ FD ]
Line_10 $$ String el1 = "#root['value'].get('givenName')"-->Line_11 $$ Expression exp = parser.parseExpression(el1)[ FD ]
Line_2 $$ public void mapOfMap_SPR7244() throws Exception -->Line_12 $$ Object evaluated = exp.getValue(ctx)[ CD ]
Line_2 $$ public void mapOfMap_SPR7244() throws Exception -->Line_7 $$ map.put("value", nameMap)[ CD ]
Line_2 $$ public void mapOfMap_SPR7244() throws Exception -->Line_5 $$ Map<String, String> nameMap = new LinkedHashMap<String, String>()[ CD ]
Line_8 $$ StandardEvaluationContext ctx = new StandardEvaluationContext(map)-->Line_12 $$ Object evaluated = exp.getValue(ctx)[ FD ]
Line_5 $$ Map<String, String> nameMap = new LinkedHashMap<String, String>()-->Line_7 $$ map.put("value", nameMap)[ FD ]
Line_2 $$ public void mapOfMap_SPR7244() throws Exception -->Line_14 $$ String el2 = "#root['value']['givenName']"[ CD ]
Line_2 $$ public void mapOfMap_SPR7244() throws Exception -->Line_15 $$ exp = parser.parseExpression(el2)[ CD ]
Line_2 $$ public void mapOfMap_SPR7244() throws Exception -->Line_16 $$ evaluated = exp.getValue(ctx)[ CD ]
Line_11 $$ Expression exp = parser.parseExpression(el1)-->Line_16 $$ evaluated = exp.getValue(ctx)[ FD ]
Line_5 $$ Map<String, String> nameMap = new LinkedHashMap<String, String>()-->Line_6 $$ nameMap.put("givenName", "Arthur")[ FD ]
Line_12 $$ Object evaluated = exp.getValue(ctx)-->Line_16 $$ evaluated = exp.getValue(ctx)[ FD ]
Line_9 $$ ExpressionParser parser = new SpelExpressionParser()-->Line_11 $$ Expression exp = parser.parseExpression(el1)[ FD ]
Line_2 $$ public void mapOfMap_SPR7244() throws Exception -->Line_17 $$ assertEquals("Arthur", evaluated)[ CD ]
Line_2 $$ public void mapOfMap_SPR7244() throws Exception -->Line_13 $$ assertEquals("Arthur", evaluated)[ CD ]
Line_2 $$ public void mapOfMap_SPR7244() throws Exception -->Line_9 $$ ExpressionParser parser = new SpelExpressionParser()[ CD ]
Line_2 $$ public void mapOfMap_SPR7244() throws Exception -->Line_8 $$ StandardEvaluationContext ctx = new StandardEvaluationContext(map)[ CD ]
Line_2 $$ public void mapOfMap_SPR7244() throws Exception -->Line_6 $$ nameMap.put("givenName", "Arthur")[ CD ]
Line_3 $$ Map<String, Object> map = new LinkedHashMap<String, Object>()-->Line_7 $$ map.put("value", nameMap)[ FD ]
Line_2 $$ public void mapOfMap_SPR7244() throws Exception -->Line_4 $$ map.put("uri", "http:")[ CD ]
Line_12 $$ Object evaluated = exp.getValue(ctx)-->Line_13 $$ assertEquals("Arthur", evaluated)[ FD ]
