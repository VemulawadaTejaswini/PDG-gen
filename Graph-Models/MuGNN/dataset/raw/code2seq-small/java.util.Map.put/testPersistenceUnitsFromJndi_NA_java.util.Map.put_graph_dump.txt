Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_13 $$ PersistenceAnnotationBeanPostProcessor bpp = new PersistenceAnnotationBeanPostProcessor()[ CD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_16 $$ bf.addBeanPostProcessor(bpp)[ CD ]
Line_12 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_22 $$ DefaultPublicPersistenceUnitSetterNamedPerson bean2 = (DefaultPublicPersistenceUnitSetterNamedPerson) bf.getBean(DefaultPublicPersistenceUnitSetterNamedPerson.class.getName())[ FD ]
Line_12 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_18 $$ bf.registerBeanDefinition(DefaultPublicPersistenceUnitSetterNamedPerson.class.getName(), new RootBeanDefinition(DefaultPublicPersistenceUnitSetterNamedPerson.class))[ FD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_5 $$ EntityManagerFactoryWithInfo mockEmf2 = mock(EntityManagerFactoryWithInfo.class)[ CD ]
Line_5 $$ EntityManagerFactoryWithInfo mockEmf2 = mock(EntityManagerFactoryWithInfo.class)-->Line_26 $$ assertSame(mockEmf2, bean2.emf)[ FD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_9 $$ ExpectedLookupTemplate jt = new ExpectedLookupTemplate()[ CD ]
Line_12 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_21 $$ DefaultPublicPersistenceUnitSetter bean = (DefaultPublicPersistenceUnitSetter) bf.getBean(DefaultPublicPersistenceUnitSetter.class.getName())[ FD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_20 $$ bf.registerBeanDefinition(DefaultPublicPersistenceContextSetter.class.getName(), new RootBeanDefinition(DefaultPublicPersistenceContextSetter.class))[ CD ]
Line_12 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_19 $$ bf.registerBeanDefinition(DefaultPrivatePersistenceContextField.class.getName(), new RootBeanDefinition(DefaultPrivatePersistenceContextField.class))[ FD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_10 $$ jt.addObject("java:comp/env/pu1", mockEmf)[ CD ]
Line_13 $$ PersistenceAnnotationBeanPostProcessor bpp = new PersistenceAnnotationBeanPostProcessor()-->Line_16 $$ bf.addBeanPostProcessor(bpp)[ FD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_18 $$ bf.registerBeanDefinition(DefaultPublicPersistenceUnitSetterNamedPerson.class.getName(), new RootBeanDefinition(DefaultPublicPersistenceUnitSetterNamedPerson.class))[ CD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_15 $$ bpp.setJndiTemplate(jt)[ CD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_22 $$ DefaultPublicPersistenceUnitSetterNamedPerson bean2 = (DefaultPublicPersistenceUnitSetterNamedPerson) bf.getBean(DefaultPublicPersistenceUnitSetterNamedPerson.class.getName())[ CD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_11 $$ jt.addObject("java:comp/env/pu2", mockEmf2)[ CD ]
Line_12 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_23 $$ DefaultPrivatePersistenceContextField bean3 = (DefaultPrivatePersistenceContextField) bf.getBean(DefaultPrivatePersistenceContextField.class.getName())[ FD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_21 $$ DefaultPublicPersistenceUnitSetter bean = (DefaultPublicPersistenceUnitSetter) bf.getBean(DefaultPublicPersistenceUnitSetter.class.getName())[ CD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_25 $$ assertSame(mockEmf, bean.emf)[ CD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_4 $$ given(mockEmf.createEntityManager()).willReturn(mockEm)[ CD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_28 $$ assertNotNull(bean4.em)[ CD ]
Line_12 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_24 $$ DefaultPublicPersistenceContextSetter bean4 = (DefaultPublicPersistenceContextSetter) bf.getBean(DefaultPublicPersistenceContextSetter.class.getName())[ FD ]
Line_13 $$ PersistenceAnnotationBeanPostProcessor bpp = new PersistenceAnnotationBeanPostProcessor()-->Line_15 $$ bpp.setJndiTemplate(jt)[ FD ]
Line_5 $$ EntityManagerFactoryWithInfo mockEmf2 = mock(EntityManagerFactoryWithInfo.class)-->Line_11 $$ jt.addObject("java:comp/env/pu2", mockEmf2)[ FD ]
Line_9 $$ ExpectedLookupTemplate jt = new ExpectedLookupTemplate()-->Line_15 $$ bpp.setJndiTemplate(jt)[ FD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_19 $$ bf.registerBeanDefinition(DefaultPrivatePersistenceContextField.class.getName(), new RootBeanDefinition(DefaultPrivatePersistenceContextField.class))[ CD ]
Line_12 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_20 $$ bf.registerBeanDefinition(DefaultPublicPersistenceContextSetter.class.getName(), new RootBeanDefinition(DefaultPublicPersistenceContextSetter.class))[ FD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_26 $$ assertSame(mockEmf2, bean2.emf)[ CD ]
Line_6 $$ Map<String, String> persistenceUnits = new HashMap<String, String>()-->Line_7 $$ persistenceUnits.put("", "pu1")[ FD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_24 $$ DefaultPublicPersistenceContextSetter bean4 = (DefaultPublicPersistenceContextSetter) bf.getBean(DefaultPublicPersistenceContextSetter.class.getName())[ CD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_14 $$ bpp.setPersistenceUnits(persistenceUnits)[ CD ]
Line_12 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_16 $$ bf.addBeanPostProcessor(bpp)[ FD ]
Line_6 $$ Map<String, String> persistenceUnits = new HashMap<String, String>()-->Line_8 $$ persistenceUnits.put("Person", "pu2")[ FD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_8 $$ persistenceUnits.put("Person", "pu2")[ CD ]
Line_3 $$ EntityManager mockEm = mock(EntityManager.class)-->Line_4 $$ given(mockEmf.createEntityManager()).willReturn(mockEm)[ FD ]
Line_9 $$ ExpectedLookupTemplate jt = new ExpectedLookupTemplate()-->Line_10 $$ jt.addObject("java:comp/env/pu1", mockEmf)[ FD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_7 $$ persistenceUnits.put("", "pu1")[ CD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_12 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()[ CD ]
Line_9 $$ ExpectedLookupTemplate jt = new ExpectedLookupTemplate()-->Line_11 $$ jt.addObject("java:comp/env/pu2", mockEmf2)[ FD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_17 $$ bf.registerBeanDefinition(DefaultPublicPersistenceUnitSetter.class.getName(), new RootBeanDefinition(DefaultPublicPersistenceUnitSetter.class))[ CD ]
Line_12 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_17 $$ bf.registerBeanDefinition(DefaultPublicPersistenceUnitSetter.class.getName(), new RootBeanDefinition(DefaultPublicPersistenceUnitSetter.class))[ FD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_27 $$ assertNotNull(bean3.em)[ CD ]
Line_13 $$ PersistenceAnnotationBeanPostProcessor bpp = new PersistenceAnnotationBeanPostProcessor()-->Line_14 $$ bpp.setPersistenceUnits(persistenceUnits)[ FD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_23 $$ DefaultPrivatePersistenceContextField bean3 = (DefaultPrivatePersistenceContextField) bf.getBean(DefaultPrivatePersistenceContextField.class.getName())[ CD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_3 $$ EntityManager mockEm = mock(EntityManager.class)[ CD ]
Line_6 $$ Map<String, String> persistenceUnits = new HashMap<String, String>()-->Line_14 $$ bpp.setPersistenceUnits(persistenceUnits)[ FD ]
Line_2 $$ public void testPersistenceUnitsFromJndi() -->Line_6 $$ Map<String, String> persistenceUnits = new HashMap<String, String>()[ CD ]
