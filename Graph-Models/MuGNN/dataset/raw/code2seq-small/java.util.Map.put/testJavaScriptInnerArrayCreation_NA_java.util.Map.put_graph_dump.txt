Line_3 $$ Map<String, Object> ctx = new HashMap<String, Object>()-->Line_8 $$ script.setNextVar("ctx", ctx)[ FD ]
Line_2 $$ public void testJavaScriptInnerArrayCreation() -->Line_7 $$ ExecutableScript script = se.executable(new CompiledScript(ScriptService.ScriptType.INLINE, "testJavaScriptInnerArrayCreation", "js", compiled), new HashMap<String, Object>())[ CD ]
Line_2 $$ public void testJavaScriptInnerArrayCreation() -->Line_5 $$ ctx.put("doc", doc)[ CD ]
Line_3 $$ Map<String, Object> ctx = new HashMap<String, Object>()-->Line_10 $$ Map<String, Object> unwrap = (Map<String, Object>) script.unwrap(ctx)[ FD ]
Line_7 $$ ExecutableScript script = se.executable(new CompiledScript(ScriptService.ScriptType.INLINE, "testJavaScriptInnerArrayCreation", "js", compiled), new HashMap<String, Object>())-->Line_8 $$ script.setNextVar("ctx", ctx)[ FD ]
Line_2 $$ public void testJavaScriptInnerArrayCreation() -->Line_10 $$ Map<String, Object> unwrap = (Map<String, Object>) script.unwrap(ctx)[ CD ]
Line_2 $$ public void testJavaScriptInnerArrayCreation() -->Line_8 $$ script.setNextVar("ctx", ctx)[ CD ]
Line_7 $$ ExecutableScript script = se.executable(new CompiledScript(ScriptService.ScriptType.INLINE, "testJavaScriptInnerArrayCreation", "js", compiled), new HashMap<String, Object>())-->Line_9 $$ script.run()[ FD ]
Line_2 $$ public void testJavaScriptInnerArrayCreation() -->Line_4 $$ Map<String, Object> doc = new HashMap<String, Object>()[ CD ]
Line_2 $$ public void testJavaScriptInnerArrayCreation() -->Line_6 $$ Object compiled = se.compile("ctx.doc.field1 = ['value1', 'value2']", Collections.emptyMap())[ CD ]
Line_7 $$ ExecutableScript script = se.executable(new CompiledScript(ScriptService.ScriptType.INLINE, "testJavaScriptInnerArrayCreation", "js", compiled), new HashMap<String, Object>())-->Line_10 $$ Map<String, Object> unwrap = (Map<String, Object>) script.unwrap(ctx)[ FD ]
Line_2 $$ public void testJavaScriptInnerArrayCreation() -->Line_11 $$ assertThat(((Map) unwrap.get("doc")).get("field1"), instanceOf(List.class))[ CD ]
Line_10 $$ Map<String, Object> unwrap = (Map<String, Object>) script.unwrap(ctx)-->Line_11 $$ assertThat(((Map) unwrap.get("doc")).get("field1"), instanceOf(List.class))[ FD ]
Line_2 $$ public void testJavaScriptInnerArrayCreation() -->Line_3 $$ Map<String, Object> ctx = new HashMap<String, Object>()[ CD ]
Line_2 $$ public void testJavaScriptInnerArrayCreation() -->Line_9 $$ script.run()[ CD ]
Line_4 $$ Map<String, Object> doc = new HashMap<String, Object>()-->Line_5 $$ ctx.put("doc", doc)[ FD ]
Line_3 $$ Map<String, Object> ctx = new HashMap<String, Object>()-->Line_5 $$ ctx.put("doc", doc)[ FD ]
