Line_9 $$ Map<String, String> props = new THashMap<String, String>()-->Line_14 $$ props.put("groupId", "foo")[ FD ]
Line_2 $$ public void testGenerating() throws Exception -->Line_10 $$ props.put("archetypeGroupId", "org.apache.maven.archetypes")[ CD ]
Line_20 $$ exec = new MavenExternalExecutor(myProject, params, getMavenGeneralSettings(), settings, NULL_MAVEN_CONSOLE)-->Line_21 $$ exec.execute(new EmptyProgressIndicator())[ FD ]
Line_9 $$ Map<String, String> props = new THashMap<String, String>()-->Line_13 $$ props.put("interactiveMode", "false")[ FD ]
Line_8 $$ MavenRunnerSettings settings = new MavenRunnerSettings()-->Line_17 $$ settings.setMavenProperties(props)[ FD ]
Line_2 $$ public void testGenerating() throws Exception -->Line_6 $$ dir.mkdirs()[ CD ]
Line_2 $$ public void testGenerating() throws Exception -->Line_16 $$ props.put("artifactId", "bar")[ CD ]
Line_18 $$ MavenExecutor exec-->Line_20 $$ exec = new MavenExternalExecutor(myProject, params, getMavenGeneralSettings(), settings, NULL_MAVEN_CONSOLE)[ FD ]
Line_9 $$ Map<String, String> props = new THashMap<String, String>()-->Line_10 $$ props.put("archetypeGroupId", "org.apache.maven.archetypes")[ FD ]
Line_2 $$ public void testGenerating() throws Exception -->Line_13 $$ props.put("interactiveMode", "false")[ CD ]
Line_2 $$ public void testGenerating() throws Exception -->Line_14 $$ props.put("groupId", "foo")[ CD ]
Line_2 $$ public void testGenerating() throws Exception -->Line_3 $$ if (!hasMavenInstallation())[ CD ]
Line_2 $$ public void testGenerating() throws Exception -->Line_15 $$ props.put("groupId", "foo")[ CD ]
Line_2 $$ public void testGenerating() throws Exception -->Line_17 $$ settings.setMavenProperties(props)[ CD ]
Line_5 $$ File dir = new File(myDir.getPath(), "generated")-->Line_6 $$ dir.mkdirs()[ FD ]
Line_2 $$ public void testGenerating() throws Exception -->Line_5 $$ File dir = new File(myDir.getPath(), "generated")[ CD ]
Line_18 $$ MavenExecutor exec-->Line_21 $$ exec.execute(new EmptyProgressIndicator())[ FD ]
Line_2 $$ public void testGenerating() throws Exception -->Line_7 $$ MavenRunnerParameters params = new MavenRunnerParameters(false, dir.getPath(), Arrays.asList("org.apache.maven.plugins:maven-archetype-plugin:RELEASE:generate"), Collections.<String>emptyList())[ CD ]
Line_8 $$ MavenRunnerSettings settings = new MavenRunnerSettings()-->Line_19 $$ settings.setJreName(MavenRunnerSettings.USE_INTERNAL_JAVA)[ FD ]
Line_2 $$ public void testGenerating() throws Exception -->Line_12 $$ props.put("archetypeVersion", "1.0")[ CD ]
Line_3 $$ if (!hasMavenInstallation())-->Line_4 $$ return[ CD ]
Line_2 $$ public void testGenerating() throws Exception -->Line_18 $$ MavenExecutor exec[ CD ]
Line_2 $$ public void testGenerating() throws Exception -->Line_8 $$ MavenRunnerSettings settings = new MavenRunnerSettings()[ CD ]
Line_9 $$ Map<String, String> props = new THashMap<String, String>()-->Line_12 $$ props.put("archetypeVersion", "1.0")[ FD ]
Line_9 $$ Map<String, String> props = new THashMap<String, String>()-->Line_17 $$ settings.setMavenProperties(props)[ FD ]
Line_5 $$ File dir = new File(myDir.getPath(), "generated")-->Line_7 $$ MavenRunnerParameters params = new MavenRunnerParameters(false, dir.getPath(), Arrays.asList("org.apache.maven.plugins:maven-archetype-plugin:RELEASE:generate"), Collections.<String>emptyList())[ FD ]
Line_9 $$ Map<String, String> props = new THashMap<String, String>()-->Line_11 $$ props.put("archetypeArtifactId", "maven-archetype-quickstart")[ FD ]
Line_2 $$ public void testGenerating() throws Exception -->Line_19 $$ settings.setJreName(MavenRunnerSettings.USE_INTERNAL_JAVA)[ CD ]
Line_2 $$ public void testGenerating() throws Exception -->Line_21 $$ exec.execute(new EmptyProgressIndicator())[ CD ]
Line_9 $$ Map<String, String> props = new THashMap<String, String>()-->Line_15 $$ props.put("groupId", "foo")[ FD ]
Line_2 $$ public void testGenerating() throws Exception -->Line_9 $$ Map<String, String> props = new THashMap<String, String>()[ CD ]
Line_2 $$ public void testGenerating() throws Exception -->Line_20 $$ exec = new MavenExternalExecutor(myProject, params, getMavenGeneralSettings(), settings, NULL_MAVEN_CONSOLE)[ CD ]
Line_9 $$ Map<String, String> props = new THashMap<String, String>()-->Line_16 $$ props.put("artifactId", "bar")[ FD ]
Line_2 $$ public void testGenerating() throws Exception -->Line_11 $$ props.put("archetypeArtifactId", "maven-archetype-quickstart")[ CD ]
Line_2 $$ public void testGenerating() throws Exception -->Line_22 $$ assertTrue(new File(dir, "bar/pom.xml").exists())[ CD ]
