Line_3 $$ int num = scaledRandomIntBetween(2, 20)-->Line_4 $$ for (int j = 0; j < num; j++) [ FD ]
Line_10 $$ long key = hash.add(ref)-->Line_13 $$ assertEquals(uniqueCount, key)[ FD ]
Line_7 $$ for (int i = 0; i < 797; i++) -->Line_9 $$ long count = hash.size()[ CD ]
Line_6 $$ int uniqueCount = 0-->Line_13 $$ assertEquals(uniqueCount, key)[ FD ]
Line_5 $$ Map<Long, Long> longs = new HashMap()-->Line_12 $$ assertNull(longs.put(ref, key))[ FD ]
Line_2 $$ public void testKey() -->Line_28 $$ hash.close()[ CD ]
Line_11 $$ if (key >= 0) -->Line_17 $$ assertTrue((-key) - 1L < count)[ CD ]
Line_5 $$ Map<Long, Long> longs = new HashMap()-->Line_21 $$ for (Map.Entry<Long, Long> entry : longs.entrySet()) [ FD ]
Line_2 $$ public void testKey() -->Line_4 $$ for (int j = 0; j < num; j++) [ CD ]
Line_10 $$ long key = hash.add(ref)-->Line_11 $$ if (key >= 0) [ FD ]
Line_11 $$ if (key >= 0) -->Line_14 $$ uniqueCount++[ CD ]
Line_10 $$ long key = hash.add(ref)-->Line_17 $$ assertTrue((-key) - 1L < count)[ FD ]
Line_11 $$ if (key >= 0) -->Line_18 $$ assertEquals(hash.size(), count)[ CD ]
Line_7 $$ for (int i = 0; i < 797; i++) -->Line_11 $$ if (key >= 0) [ CD ]
Line_11 $$ if (key >= 0) -->Line_13 $$ assertEquals(uniqueCount, key)[ CD ]
Line_4 $$ for (int j = 0; j < num; j++) -->Line_5 $$ Map<Long, Long> longs = new HashMap()[ CD ]
Line_8 $$ long ref = randomLong()-->Line_12 $$ assertNull(longs.put(ref, key))[ FD ]
Line_4 $$ for (int j = 0; j < num; j++) -->Line_26 $$ newHash()[ CD ]
Line_11 $$ if (key >= 0) -->Line_15 $$ assertEquals(hash.size(), count + 1)[ CD ]
Line_4 $$ for (int j = 0; j < num; j++) -->Line_7 $$ for (int i = 0; i < 797; i++) [ CD ]
Line_11 $$ if (key >= 0) -->Line_12 $$ assertNull(longs.put(ref, key))[ CD ]
Line_9 $$ long count = hash.size()-->Line_18 $$ assertEquals(hash.size(), count)[ FD ]
Line_4 $$ for (int j = 0; j < num; j++) -->Line_6 $$ int uniqueCount = 0[ CD ]
Line_6 $$ int uniqueCount = 0-->Line_14 $$ uniqueCount++[ FD ]
Line_7 $$ for (int i = 0; i < 797; i++) -->Line_8 $$ long ref = randomLong()[ CD ]
Line_7 $$ for (int i = 0; i < 797; i++) -->Line_10 $$ long key = hash.add(ref)[ CD ]
Line_10 $$ long key = hash.add(ref)-->Line_12 $$ assertNull(longs.put(ref, key))[ FD ]
Line_8 $$ long ref = randomLong()-->Line_10 $$ long key = hash.add(ref)[ FD ]
Line_2 $$ public void testKey() -->Line_3 $$ int num = scaledRandomIntBetween(2, 20)[ CD ]
