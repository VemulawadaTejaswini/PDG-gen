Line_2 $$ public void testThatParametersCanBeSet() throws Exception -->Line_9 $$ Map<String, Object> templateParams = new HashMap()[ CD ]
Line_2 $$ public void testThatParametersCanBeSet() throws Exception -->Line_11 $$ templateParams.put("myField", "theField")[ CD ]
Line_13 $$ SearchResponse searchResponse = client().prepareSearch("test").setTypes("type").setTemplate(new Template("full-query-template", ScriptType.FILE, MustacheScriptEngineService.NAME, null, templateParams)).get()-->Line_17 $$ searchResponse = client().prepareSearch("test").setTypes("type").setTemplate(new Template("full-query-template", ScriptType.FILE, MustacheScriptEngineService.NAME, null, templateParams)).get()[ FD ]
Line_17 $$ searchResponse = client().prepareSearch("test").setTypes("type").setTemplate(new Template("full-query-template", ScriptType.FILE, MustacheScriptEngineService.NAME, null, templateParams)).get()-->Line_18 $$ assertHitCount(searchResponse, 1)[ FD ]
Line_2 $$ public void testThatParametersCanBeSet() throws Exception -->Line_8 $$ refresh()[ CD ]
Line_9 $$ Map<String, Object> templateParams = new HashMap()-->Line_10 $$ templateParams.put("mySize", "2")[ FD ]
Line_2 $$ public void testThatParametersCanBeSet() throws Exception -->Line_7 $$ index("test", "type", "5", jsonBuilder().startObject().field("otherField", "foo").endObject())[ CD ]
Line_2 $$ public void testThatParametersCanBeSet() throws Exception -->Line_15 $$ assertThat(searchResponse.getHits().getHits().length, is(2))[ CD ]
Line_2 $$ public void testThatParametersCanBeSet() throws Exception -->Line_17 $$ searchResponse = client().prepareSearch("test").setTypes("type").setTemplate(new Template("full-query-template", ScriptType.FILE, MustacheScriptEngineService.NAME, null, templateParams)).get()[ CD ]
Line_13 $$ SearchResponse searchResponse = client().prepareSearch("test").setTypes("type").setTemplate(new Template("full-query-template", ScriptType.FILE, MustacheScriptEngineService.NAME, null, templateParams)).get()-->Line_15 $$ assertThat(searchResponse.getHits().getHits().length, is(2))[ FD ]
Line_2 $$ public void testThatParametersCanBeSet() throws Exception -->Line_3 $$ index("test", "type", "1", jsonBuilder().startObject().field("theField", "foo").endObject())[ CD ]
Line_2 $$ public void testThatParametersCanBeSet() throws Exception -->Line_13 $$ SearchResponse searchResponse = client().prepareSearch("test").setTypes("type").setTemplate(new Template("full-query-template", ScriptType.FILE, MustacheScriptEngineService.NAME, null, templateParams)).get()[ CD ]
Line_2 $$ public void testThatParametersCanBeSet() throws Exception -->Line_14 $$ assertHitCount(searchResponse, 4)[ CD ]
Line_9 $$ Map<String, Object> templateParams = new HashMap()-->Line_12 $$ templateParams.put("myValue", "foo")[ FD ]
Line_2 $$ public void testThatParametersCanBeSet() throws Exception -->Line_16 $$ templateParams.put("myField", "otherField")[ CD ]
Line_9 $$ Map<String, Object> templateParams = new HashMap()-->Line_16 $$ templateParams.put("myField", "otherField")[ FD ]
Line_2 $$ public void testThatParametersCanBeSet() throws Exception -->Line_6 $$ index("test", "type", "4", jsonBuilder().startObject().field("theField", "foo 4").endObject())[ CD ]
Line_9 $$ Map<String, Object> templateParams = new HashMap()-->Line_11 $$ templateParams.put("myField", "theField")[ FD ]
Line_2 $$ public void testThatParametersCanBeSet() throws Exception -->Line_4 $$ index("test", "type", "2", jsonBuilder().startObject().field("theField", "foo 2").endObject())[ CD ]
Line_2 $$ public void testThatParametersCanBeSet() throws Exception -->Line_12 $$ templateParams.put("myValue", "foo")[ CD ]
Line_2 $$ public void testThatParametersCanBeSet() throws Exception -->Line_18 $$ assertHitCount(searchResponse, 1)[ CD ]
Line_13 $$ SearchResponse searchResponse = client().prepareSearch("test").setTypes("type").setTemplate(new Template("full-query-template", ScriptType.FILE, MustacheScriptEngineService.NAME, null, templateParams)).get()-->Line_18 $$ assertHitCount(searchResponse, 1)[ FD ]
Line_2 $$ public void testThatParametersCanBeSet() throws Exception -->Line_10 $$ templateParams.put("mySize", "2")[ CD ]
Line_2 $$ public void testThatParametersCanBeSet() throws Exception -->Line_5 $$ index("test", "type", "3", jsonBuilder().startObject().field("theField", "foo 3").endObject())[ CD ]
Line_13 $$ SearchResponse searchResponse = client().prepareSearch("test").setTypes("type").setTemplate(new Template("full-query-template", ScriptType.FILE, MustacheScriptEngineService.NAME, null, templateParams)).get()-->Line_14 $$ assertHitCount(searchResponse, 4)[ FD ]
