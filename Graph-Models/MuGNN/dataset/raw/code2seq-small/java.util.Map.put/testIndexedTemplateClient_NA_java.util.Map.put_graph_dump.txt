Line_2 $$ public void testIndexedTemplateClient() throws Exception -->Line_5 $$ PutIndexedScriptResponse scriptResponse = client().preparePutIndexedScript(MustacheScriptEngineService.NAME, "testTemplate", "[ CD ]
Line_7 $$ scriptResponse = client().preparePutIndexedScript(MustacheScriptEngineService.NAME, "testTemplate", "-->Line_8 $$ assertEquals(scriptResponse.getVersion(), 2)[ FD ]
Line_2 $$ public void testIndexedTemplateClient() throws Exception -->Line_15 $$ builders.add(client().prepareIndex("test", "type", "4").setSource("[ CD ]
Line_5 $$ PutIndexedScriptResponse scriptResponse = client().preparePutIndexedScript(MustacheScriptEngineService.NAME, "testTemplate", "-->Line_7 $$ scriptResponse = client().preparePutIndexedScript(MustacheScriptEngineService.NAME, "testTemplate", "[ FD ]
Line_18 $$ Map<String, Object> templateParams = new HashMap()-->Line_19 $$ templateParams.put("fieldParam", "foo")[ FD ]
Line_2 $$ public void testIndexedTemplateClient() throws Exception -->Line_3 $$ createIndex(ScriptService.SCRIPT_INDEX)[ CD ]
Line_2 $$ public void testIndexedTemplateClient() throws Exception -->Line_8 $$ assertEquals(scriptResponse.getVersion(), 2)[ CD ]
Line_5 $$ PutIndexedScriptResponse scriptResponse = client().preparePutIndexedScript(MustacheScriptEngineService.NAME, "testTemplate", "-->Line_6 $$ assertTrue(scriptResponse.isCreated())[ FD ]
Line_5 $$ PutIndexedScriptResponse scriptResponse = client().preparePutIndexedScript(MustacheScriptEngineService.NAME, "testTemplate", "-->Line_8 $$ assertEquals(scriptResponse.getVersion(), 2)[ FD ]
Line_11 $$ List<IndexRequestBuilder> builders = new ArrayList()-->Line_16 $$ builders.add(client().prepareIndex("test", "type", "5").setSource("[ FD ]
Line_11 $$ List<IndexRequestBuilder> builders = new ArrayList()-->Line_12 $$ builders.add(client().prepareIndex("test", "type", "1").setSource("[ FD ]
Line_11 $$ List<IndexRequestBuilder> builders = new ArrayList()-->Line_13 $$ builders.add(client().prepareIndex("test", "type", "2").setSource("[ FD ]
Line_2 $$ public void testIndexedTemplateClient() throws Exception -->Line_17 $$ indexRandom(true, builders)[ CD ]
Line_2 $$ public void testIndexedTemplateClient() throws Exception -->Line_25 $$ assertFalse(getResponse.isExists())[ CD ]
Line_2 $$ public void testIndexedTemplateClient() throws Exception -->Line_10 $$ assertTrue(getResponse.isExists())[ CD ]
Line_9 $$ GetIndexedScriptResponse getResponse = client().prepareGetIndexedScript(MustacheScriptEngineService.NAME, "testTemplate").get()-->Line_24 $$ getResponse = client().prepareGetIndexedScript(MustacheScriptEngineService.NAME, "testTemplate").get()[ FD ]
Line_2 $$ public void testIndexedTemplateClient() throws Exception -->Line_11 $$ List<IndexRequestBuilder> builders = new ArrayList()[ CD ]
Line_2 $$ public void testIndexedTemplateClient() throws Exception -->Line_21 $$ assertHitCount(searchResponse, 4)[ CD ]
Line_2 $$ public void testIndexedTemplateClient() throws Exception -->Line_22 $$ DeleteIndexedScriptResponse deleteResponse = client().prepareDeleteIndexedScript(MustacheScriptEngineService.NAME, "testTemplate").get()[ CD ]
Line_22 $$ DeleteIndexedScriptResponse deleteResponse = client().prepareDeleteIndexedScript(MustacheScriptEngineService.NAME, "testTemplate").get()-->Line_23 $$ assertTrue(deleteResponse.isFound())[ FD ]
Line_9 $$ GetIndexedScriptResponse getResponse = client().prepareGetIndexedScript(MustacheScriptEngineService.NAME, "testTemplate").get()-->Line_25 $$ assertFalse(getResponse.isExists())[ FD ]
Line_2 $$ public void testIndexedTemplateClient() throws Exception -->Line_9 $$ GetIndexedScriptResponse getResponse = client().prepareGetIndexedScript(MustacheScriptEngineService.NAME, "testTemplate").get()[ CD ]
Line_2 $$ public void testIndexedTemplateClient() throws Exception -->Line_13 $$ builders.add(client().prepareIndex("test", "type", "2").setSource("[ CD ]
Line_2 $$ public void testIndexedTemplateClient() throws Exception -->Line_7 $$ scriptResponse = client().preparePutIndexedScript(MustacheScriptEngineService.NAME, "testTemplate", "[ CD ]
Line_2 $$ public void testIndexedTemplateClient() throws Exception -->Line_16 $$ builders.add(client().prepareIndex("test", "type", "5").setSource("[ CD ]
Line_2 $$ public void testIndexedTemplateClient() throws Exception -->Line_23 $$ assertTrue(deleteResponse.isFound())[ CD ]
Line_2 $$ public void testIndexedTemplateClient() throws Exception -->Line_18 $$ Map<String, Object> templateParams = new HashMap()[ CD ]
Line_24 $$ getResponse = client().prepareGetIndexedScript(MustacheScriptEngineService.NAME, "testTemplate").get()-->Line_25 $$ assertFalse(getResponse.isExists())[ FD ]
Line_11 $$ List<IndexRequestBuilder> builders = new ArrayList()-->Line_14 $$ builders.add(client().prepareIndex("test", "type", "3").setSource("[ FD ]
Line_2 $$ public void testIndexedTemplateClient() throws Exception -->Line_20 $$ SearchResponse searchResponse = client().prepareSearch("test").setTypes("type").setTemplate(new Template("testTemplate", ScriptType.INDEXED, MustacheScriptEngineService.NAME, null, templateParams)).get()[ CD ]
Line_2 $$ public void testIndexedTemplateClient() throws Exception -->Line_24 $$ getResponse = client().prepareGetIndexedScript(MustacheScriptEngineService.NAME, "testTemplate").get()[ CD ]
Line_2 $$ public void testIndexedTemplateClient() throws Exception -->Line_19 $$ templateParams.put("fieldParam", "foo")[ CD ]
Line_2 $$ public void testIndexedTemplateClient() throws Exception -->Line_12 $$ builders.add(client().prepareIndex("test", "type", "1").setSource("[ CD ]
Line_2 $$ public void testIndexedTemplateClient() throws Exception -->Line_4 $$ ensureGreen(ScriptService.SCRIPT_INDEX)[ CD ]
Line_11 $$ List<IndexRequestBuilder> builders = new ArrayList()-->Line_15 $$ builders.add(client().prepareIndex("test", "type", "4").setSource("[ FD ]
Line_2 $$ public void testIndexedTemplateClient() throws Exception -->Line_14 $$ builders.add(client().prepareIndex("test", "type", "3").setSource("[ CD ]
Line_20 $$ SearchResponse searchResponse = client().prepareSearch("test").setTypes("type").setTemplate(new Template("testTemplate", ScriptType.INDEXED, MustacheScriptEngineService.NAME, null, templateParams)).get()-->Line_21 $$ assertHitCount(searchResponse, 4)[ FD ]
Line_2 $$ public void testIndexedTemplateClient() throws Exception -->Line_6 $$ assertTrue(scriptResponse.isCreated())[ CD ]
Line_11 $$ List<IndexRequestBuilder> builders = new ArrayList()-->Line_17 $$ indexRandom(true, builders)[ FD ]
Line_9 $$ GetIndexedScriptResponse getResponse = client().prepareGetIndexedScript(MustacheScriptEngineService.NAME, "testTemplate").get()-->Line_10 $$ assertTrue(getResponse.isExists())[ FD ]
