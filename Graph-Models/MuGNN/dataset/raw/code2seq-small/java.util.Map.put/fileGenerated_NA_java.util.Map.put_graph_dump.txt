Line_6 $$ if (paths == null) -->Line_7 $$ paths = new ArrayList<String>()[ CD ]
Line_5 $$ List<String> paths = map.get(outputRoot)-->Line_10 $$ paths.add(relativePath)[ FD ]
Line_2 $$ public void fileGenerated(String outputRoot, String relativePath) -->Line_3 $$ if (StringUtil.endsWith(relativePath, ".class") && JpsPathUtil.isUnder(myOutputRoots, new File(outputRoot))) [ CD ]
Line_4 $$ final Map<String, List<String>> map = myGeneratedPaths.get()-->Line_5 $$ List<String> paths = map.get(outputRoot)[ FD ]
Line_5 $$ List<String> paths = map.get(outputRoot)-->Line_7 $$ paths = new ArrayList<String>()[ FD ]
Line_6 $$ if (paths == null) -->Line_8 $$ map.put(outputRoot, paths)[ CD ]
Line_3 $$ if (StringUtil.endsWith(relativePath, ".class") && JpsPathUtil.isUnder(myOutputRoots, new File(outputRoot))) -->Line_10 $$ paths.add(relativePath)[ CD ]
Line_7 $$ paths = new ArrayList<String>()-->Line_8 $$ map.put(outputRoot, paths)[ FD ]
Line_5 $$ List<String> paths = map.get(outputRoot)-->Line_8 $$ map.put(outputRoot, paths)[ FD ]
Line_5 $$ List<String> paths = map.get(outputRoot)-->Line_6 $$ if (paths == null) [ FD ]
Line_2 $$ public void fileGenerated(String outputRoot, String relativePath) -->Line_10 $$ paths.add(relativePath)[ FD ]
Line_7 $$ paths = new ArrayList<String>()-->Line_10 $$ paths.add(relativePath)[ FD ]
Line_2 $$ public void fileGenerated(String outputRoot, String relativePath) -->Line_3 $$ if (StringUtil.endsWith(relativePath, ".class") && JpsPathUtil.isUnder(myOutputRoots, new File(outputRoot))) [ FD ]
Line_4 $$ final Map<String, List<String>> map = myGeneratedPaths.get()-->Line_8 $$ map.put(outputRoot, paths)[ FD ]
Line_3 $$ if (StringUtil.endsWith(relativePath, ".class") && JpsPathUtil.isUnder(myOutputRoots, new File(outputRoot))) -->Line_5 $$ List<String> paths = map.get(outputRoot)[ CD ]
Line_3 $$ if (StringUtil.endsWith(relativePath, ".class") && JpsPathUtil.isUnder(myOutputRoots, new File(outputRoot))) -->Line_6 $$ if (paths == null) [ CD ]
Line_2 $$ public void fileGenerated(String outputRoot, String relativePath) -->Line_8 $$ map.put(outputRoot, paths)[ FD ]
Line_2 $$ public void fileGenerated(String outputRoot, String relativePath) -->Line_5 $$ List<String> paths = map.get(outputRoot)[ FD ]
Line_3 $$ if (StringUtil.endsWith(relativePath, ".class") && JpsPathUtil.isUnder(myOutputRoots, new File(outputRoot))) -->Line_4 $$ final Map<String, List<String>> map = myGeneratedPaths.get()[ CD ]
