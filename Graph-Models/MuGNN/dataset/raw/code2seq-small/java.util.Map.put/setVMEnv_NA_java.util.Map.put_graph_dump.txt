Line_2 $$ public static void setVMEnv(Map<String, String> environment, Task task) -->Line_7 $$ String hadoopClientOpts = System.getenv("HADOOP_CLIENT_OPTS")[ CD ]
Line_18 $$ if (tmpEnv.containsKey(key)) -->Line_19 $$ environment.put(key, tmpEnv.get(key))[ CD ]
Line_9 $$ hadoopClientOpts = ""-->Line_13 $$ environment.put("HADOOP_CLIENT_OPTS", hadoopClientOpts)[ FD ]
Line_4 $$ String mapredChildEnv = getChildEnv(conf, task.isMapTask())-->Line_15 $$ MRApps.setEnvFromInputString(tmpEnv, mapredChildEnv, conf)[ FD ]
Line_7 $$ String hadoopClientOpts = System.getenv("HADOOP_CLIENT_OPTS")-->Line_13 $$ environment.put("HADOOP_CLIENT_OPTS", hadoopClientOpts)[ FD ]
Line_2 $$ public static void setVMEnv(Map<String, String> environment, Task task) -->Line_22 $$ environment.put(MRJobConfig.STDOUT_LOGFILE_ENV, getTaskLogFile(TaskLog.LogName.STDOUT))[ FD ]
Line_2 $$ public static void setVMEnv(Map<String, String> environment, Task task) -->Line_23 $$ environment.put(MRJobConfig.STDERR_LOGFILE_ENV, getTaskLogFile(TaskLog.LogName.STDERR))[ FD ]
Line_17 $$ for (String key : keys) -->Line_19 $$ environment.put(key, tmpEnv.get(key))[ FD ]
Line_9 $$ hadoopClientOpts = ""-->Line_11 $$ hadoopClientOpts = hadoopClientOpts + " "[ FD ]
Line_2 $$ public static void setVMEnv(Map<String, String> environment, Task task) -->Line_16 $$ String[] keys = [ CD ]
Line_3 $$ JobConf conf = task.conf-->Line_6 $$ environment.put("HADOOP_ROOT_LOGGER", getChildLogLevel(conf, task.isMapTask()) + ",console")[ FD ]
Line_14 $$ Map<String, String> tmpEnv = new HashMap<String, String>()-->Line_15 $$ MRApps.setEnvFromInputString(tmpEnv, mapredChildEnv, conf)[ FD ]
Line_4 $$ String mapredChildEnv = getChildEnv(conf, task.isMapTask())-->Line_5 $$ MRApps.setEnvFromInputString(environment, mapredChildEnv, conf)[ FD ]
Line_2 $$ public static void setVMEnv(Map<String, String> environment, Task task) -->Line_19 $$ environment.put(key, tmpEnv.get(key))[ FD ]
Line_2 $$ public static void setVMEnv(Map<String, String> environment, Task task) -->Line_23 $$ environment.put(MRJobConfig.STDERR_LOGFILE_ENV, getTaskLogFile(TaskLog.LogName.STDERR))[ CD ]
Line_2 $$ public static void setVMEnv(Map<String, String> environment, Task task) -->Line_3 $$ JobConf conf = task.conf[ CD ]
Line_8 $$ if (hadoopClientOpts == null) -->Line_9 $$ hadoopClientOpts = ""[ CD ]
Line_2 $$ public static void setVMEnv(Map<String, String> environment, Task task) -->Line_4 $$ String mapredChildEnv = getChildEnv(conf, task.isMapTask())[ CD ]
Line_2 $$ public static void setVMEnv(Map<String, String> environment, Task task) -->Line_13 $$ environment.put("HADOOP_CLIENT_OPTS", hadoopClientOpts)[ CD ]
Line_2 $$ public static void setVMEnv(Map<String, String> environment, Task task) -->Line_6 $$ environment.put("HADOOP_ROOT_LOGGER", getChildLogLevel(conf, task.isMapTask()) + ",console")[ CD ]
Line_3 $$ JobConf conf = task.conf-->Line_15 $$ MRApps.setEnvFromInputString(tmpEnv, mapredChildEnv, conf)[ FD ]
Line_7 $$ String hadoopClientOpts = System.getenv("HADOOP_CLIENT_OPTS")-->Line_11 $$ hadoopClientOpts = hadoopClientOpts + " "[ FD ]
Line_3 $$ JobConf conf = task.conf-->Line_5 $$ MRApps.setEnvFromInputString(environment, mapredChildEnv, conf)[ FD ]
Line_2 $$ public static void setVMEnv(Map<String, String> environment, Task task) -->Line_13 $$ environment.put("HADOOP_CLIENT_OPTS", hadoopClientOpts)[ FD ]
Line_2 $$ public static void setVMEnv(Map<String, String> environment, Task task) -->Line_15 $$ MRApps.setEnvFromInputString(tmpEnv, mapredChildEnv, conf)[ CD ]
Line_7 $$ String hadoopClientOpts = System.getenv("HADOOP_CLIENT_OPTS")-->Line_8 $$ if (hadoopClientOpts == null) [ FD ]
Line_2 $$ public static void setVMEnv(Map<String, String> environment, Task task) -->Line_14 $$ Map<String, String> tmpEnv = new HashMap<String, String>()[ CD ]
Line_7 $$ String hadoopClientOpts = System.getenv("HADOOP_CLIENT_OPTS")-->Line_9 $$ hadoopClientOpts = ""[ FD ]
Line_14 $$ Map<String, String> tmpEnv = new HashMap<String, String>()-->Line_19 $$ environment.put(key, tmpEnv.get(key))[ FD ]
Line_14 $$ Map<String, String> tmpEnv = new HashMap<String, String>()-->Line_18 $$ if (tmpEnv.containsKey(key)) [ FD ]
Line_17 $$ for (String key : keys) -->Line_18 $$ if (tmpEnv.containsKey(key)) [ FD ]
Line_2 $$ public static void setVMEnv(Map<String, String> environment, Task task) -->Line_8 $$ if (hadoopClientOpts == null) [ CD ]
Line_2 $$ public static void setVMEnv(Map<String, String> environment, Task task) -->Line_5 $$ MRApps.setEnvFromInputString(environment, mapredChildEnv, conf)[ CD ]
Line_2 $$ public static void setVMEnv(Map<String, String> environment, Task task) -->Line_5 $$ MRApps.setEnvFromInputString(environment, mapredChildEnv, conf)[ FD ]
Line_2 $$ public static void setVMEnv(Map<String, String> environment, Task task) -->Line_22 $$ environment.put(MRJobConfig.STDOUT_LOGFILE_ENV, getTaskLogFile(TaskLog.LogName.STDOUT))[ CD ]
Line_2 $$ public static void setVMEnv(Map<String, String> environment, Task task) -->Line_4 $$ String mapredChildEnv = getChildEnv(conf, task.isMapTask())[ FD ]
Line_8 $$ if (hadoopClientOpts == null) -->Line_11 $$ hadoopClientOpts = hadoopClientOpts + " "[ CD ]
Line_11 $$ hadoopClientOpts = hadoopClientOpts + " "-->Line_13 $$ environment.put("HADOOP_CLIENT_OPTS", hadoopClientOpts)[ FD ]
Line_3 $$ JobConf conf = task.conf-->Line_4 $$ String mapredChildEnv = getChildEnv(conf, task.isMapTask())[ FD ]
Line_2 $$ public static void setVMEnv(Map<String, String> environment, Task task) -->Line_6 $$ environment.put("HADOOP_ROOT_LOGGER", getChildLogLevel(conf, task.isMapTask()) + ",console")[ FD ]
