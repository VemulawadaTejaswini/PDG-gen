Line_14 $$ int pos = line.indexOf("=")-->Line_16 $$ String key = line.substring(0, pos)[ FD ]
Line_7 $$ try (UnsyncBufferedReader unsyncBufferedReader = new UnsyncBufferedReader(new UnsyncStringReader(content));-->Line_39 $$ unsyncBufferedWriter.newLine()[ FD ]
Line_7 $$ try (UnsyncBufferedReader unsyncBufferedReader = new UnsyncBufferedReader(new UnsyncStringReader(content));-->Line_43 $$ unsyncBufferedWriter.flush()[ FD ]
Line_34 $$ begin = !begin-->Line_30 $$ if (begin && line.equals(StringPool.BLANK)) [ FD ]
Line_11 $$ boolean firstLine = true-->Line_37 $$ firstLine = false[ FD ]
Line_3 $$ if (!propertiesFile.exists()) -->Line_4 $$ return null[ CD ]
Line_9 $$ Map<String, String> messages = new TreeMap(new NaturalOrderStringComparator(true, true))-->Line_31 $$ _sortAndWrite(unsyncBufferedWriter, messages, firstLine)[ FD ]
Line_16 $$ String key = line.substring(0, pos)-->Line_27 $$ messages.put(key, value)[ FD ]
Line_19 $$ value = _fixTranslation(line.substring(pos + 1))-->Line_23 $$ if (value.equals(portalValue)) [ FD ]
Line_7 $$ try (UnsyncBufferedReader unsyncBufferedReader = new UnsyncBufferedReader(new UnsyncStringReader(content));-->Line_41 $$ unsyncBufferedWriter.write(line)[ FD ]
Line_2 $$ private String _orderProperties(File propertiesFile) throws IOException -->Line_3 $$ if (!propertiesFile.exists()) [ CD ]
Line_2 $$ private String _orderProperties(File propertiesFile) throws IOException -->Line_49 $$ return _read(propertiesFile)[ CD ]
Line_11 $$ boolean firstLine = true-->Line_31 $$ _sortAndWrite(unsyncBufferedWriter, messages, firstLine)[ FD ]
Line_37 $$ firstLine = false-->Line_31 $$ _sortAndWrite(unsyncBufferedWriter, messages, firstLine)[ FD ]
Line_33 $$ if (line.equals(StringPool.BLANK)) -->Line_34 $$ begin = !begin[ CD ]
Line_21 $$ if (_portalLanguageProperties != null) -->Line_23 $$ if (value.equals(portalValue)) [ CD ]
Line_9 $$ Map<String, String> messages = new TreeMap(new NaturalOrderStringComparator(true, true))-->Line_46 $$ _sortAndWrite(unsyncBufferedWriter, messages, firstLine)[ FD ]
Line_18 $$ if (Validator.isNotNull(value)) -->Line_27 $$ messages.put(key, value)[ CD ]
Line_16 $$ String key = line.substring(0, pos)-->Line_22 $$ String portalValue = String.valueOf(_portalLanguageProperties.get(key))[ FD ]
Line_16 $$ String key = line.substring(0, pos)-->Line_20 $$ value = _fixEnglishTranslation(key, value)[ FD ]
Line_11 $$ boolean firstLine = true-->Line_46 $$ _sortAndWrite(unsyncBufferedWriter, messages, firstLine)[ FD ]
Line_18 $$ if (Validator.isNotNull(value)) -->Line_19 $$ value = _fixTranslation(line.substring(pos + 1))[ CD ]
Line_12 $$ String line = null-->Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) [ FD ]
Line_10 $$ boolean begin = false-->Line_34 $$ begin = !begin[ FD ]
Line_12 $$ String line = null-->Line_41 $$ unsyncBufferedWriter.write(line)[ FD ]
Line_17 $$ String value = line.substring(pos + 1)-->Line_20 $$ value = _fixEnglishTranslation(key, value)[ FD ]
Line_12 $$ String line = null-->Line_14 $$ int pos = line.indexOf("=")[ FD ]
Line_9 $$ Map<String, String> messages = new TreeMap(new NaturalOrderStringComparator(true, true))-->Line_45 $$ if (!messages.isEmpty()) [ FD ]
Line_17 $$ String value = line.substring(pos + 1)-->Line_19 $$ value = _fixTranslation(line.substring(pos + 1))[ FD ]
Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_17 $$ String value = line.substring(pos + 1)[ FD ]
Line_17 $$ String value = line.substring(pos + 1)-->Line_27 $$ messages.put(key, value)[ FD ]
Line_2 $$ private String _orderProperties(File propertiesFile) throws IOException -->Line_6 $$ String content = _read(propertiesFile)[ FD ]
Line_17 $$ String value = line.substring(pos + 1)-->Line_23 $$ if (value.equals(portalValue)) [ FD ]
Line_36 $$ if (firstLine) -->Line_37 $$ firstLine = false[ CD ]
Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_14 $$ int pos = line.indexOf("=")[ FD ]
Line_12 $$ String line = null-->Line_19 $$ value = _fixTranslation(line.substring(pos + 1))[ FD ]
Line_15 $$ if (pos != -1) -->Line_16 $$ String key = line.substring(0, pos)[ CD ]
Line_21 $$ if (_portalLanguageProperties != null) -->Line_22 $$ String portalValue = String.valueOf(_portalLanguageProperties.get(key))[ CD ]
Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_16 $$ String key = line.substring(0, pos)[ FD ]
Line_15 $$ if (pos != -1) -->Line_30 $$ if (begin && line.equals(StringPool.BLANK)) [ CD ]
Line_22 $$ String portalValue = String.valueOf(_portalLanguageProperties.get(key))-->Line_23 $$ if (value.equals(portalValue)) [ FD ]
Line_12 $$ String line = null-->Line_33 $$ if (line.equals(StringPool.BLANK)) [ FD ]
Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_15 $$ if (pos != -1) [ CD ]
Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_30 $$ if (begin && line.equals(StringPool.BLANK)) [ FD ]
Line_20 $$ value = _fixEnglishTranslation(key, value)-->Line_18 $$ if (Validator.isNotNull(value)) [ FD ]
Line_30 $$ if (begin && line.equals(StringPool.BLANK)) -->Line_31 $$ _sortAndWrite(unsyncBufferedWriter, messages, firstLine)[ CD ]
Line_10 $$ boolean begin = false-->Line_30 $$ if (begin && line.equals(StringPool.BLANK)) [ FD ]
Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_33 $$ if (line.equals(StringPool.BLANK)) [ FD ]
Line_20 $$ value = _fixEnglishTranslation(key, value)-->Line_23 $$ if (value.equals(portalValue)) [ FD ]
Line_15 $$ if (pos != -1) -->Line_33 $$ if (line.equals(StringPool.BLANK)) [ CD ]
Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_43 $$ unsyncBufferedWriter.flush()[ CD ]
Line_23 $$ if (value.equals(portalValue)) -->Line_24 $$ System.out.println("Duplicate key " + key)[ CD ]
Line_7 $$ try (UnsyncBufferedReader unsyncBufferedReader = new UnsyncBufferedReader(new UnsyncStringReader(content));-->Line_31 $$ _sortAndWrite(unsyncBufferedWriter, messages, firstLine)[ FD ]
Line_19 $$ value = _fixTranslation(line.substring(pos + 1))-->Line_18 $$ if (Validator.isNotNull(value)) [ FD ]
Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_41 $$ unsyncBufferedWriter.write(line)[ FD ]
Line_15 $$ if (pos != -1) -->Line_41 $$ unsyncBufferedWriter.write(line)[ CD ]
Line_12 $$ String line = null-->Line_30 $$ if (begin && line.equals(StringPool.BLANK)) [ FD ]
Line_37 $$ firstLine = false-->Line_46 $$ _sortAndWrite(unsyncBufferedWriter, messages, firstLine)[ FD ]
Line_2 $$ private String _orderProperties(File propertiesFile) throws IOException -->Line_49 $$ return _read(propertiesFile)[ FD ]
Line_20 $$ value = _fixEnglishTranslation(key, value)-->Line_27 $$ messages.put(key, value)[ FD ]
Line_15 $$ if (pos != -1) -->Line_36 $$ if (firstLine) [ CD ]
Line_9 $$ Map<String, String> messages = new TreeMap(new NaturalOrderStringComparator(true, true))-->Line_27 $$ messages.put(key, value)[ FD ]
Line_19 $$ value = _fixTranslation(line.substring(pos + 1))-->Line_20 $$ value = _fixEnglishTranslation(key, value)[ FD ]
Line_7 $$ try (UnsyncBufferedReader unsyncBufferedReader = new UnsyncBufferedReader(new UnsyncStringReader(content));-->Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) [ FD ]
Line_2 $$ private String _orderProperties(File propertiesFile) throws IOException -->Line_6 $$ String content = _read(propertiesFile)[ CD ]
Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_19 $$ value = _fixTranslation(line.substring(pos + 1))[ FD ]
Line_45 $$ if (!messages.isEmpty()) -->Line_46 $$ _sortAndWrite(unsyncBufferedWriter, messages, firstLine)[ CD ]
Line_18 $$ if (Validator.isNotNull(value)) -->Line_20 $$ value = _fixEnglishTranslation(key, value)[ CD ]
Line_2 $$ private String _orderProperties(File propertiesFile) throws IOException -->Line_3 $$ if (!propertiesFile.exists()) [ FD ]
Line_15 $$ if (pos != -1) -->Line_17 $$ String value = line.substring(pos + 1)[ CD ]
Line_17 $$ String value = line.substring(pos + 1)-->Line_18 $$ if (Validator.isNotNull(value)) [ FD ]
Line_12 $$ String line = null-->Line_16 $$ String key = line.substring(0, pos)[ FD ]
Line_36 $$ if (firstLine) -->Line_39 $$ unsyncBufferedWriter.newLine()[ CD ]
Line_12 $$ String line = null-->Line_17 $$ String value = line.substring(pos + 1)[ FD ]
Line_7 $$ try (UnsyncBufferedReader unsyncBufferedReader = new UnsyncBufferedReader(new UnsyncStringReader(content));-->Line_46 $$ _sortAndWrite(unsyncBufferedWriter, messages, firstLine)[ FD ]
Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_14 $$ int pos = line.indexOf("=")[ CD ]
Line_14 $$ int pos = line.indexOf("=")-->Line_15 $$ if (pos != -1) [ FD ]
Line_19 $$ value = _fixTranslation(line.substring(pos + 1))-->Line_27 $$ messages.put(key, value)[ FD ]
Line_15 $$ if (pos != -1) -->Line_18 $$ if (Validator.isNotNull(value)) [ CD ]
Line_18 $$ if (Validator.isNotNull(value)) -->Line_21 $$ if (_portalLanguageProperties != null) [ CD ]
