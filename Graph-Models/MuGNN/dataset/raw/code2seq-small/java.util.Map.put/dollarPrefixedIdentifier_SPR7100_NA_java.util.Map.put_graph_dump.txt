Line_17 $$ expr = new SpelExpressionParser().parseRaw("map.foo$bar")-->Line_21 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_4 $$ StandardEvaluationContext eContext = new StandardEvaluationContext(h)-->Line_27 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_15 $$ name = expr.getValue(eContext, String.class)-->Line_18 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_15 $$ name = expr.getValue(eContext, String.class)-->Line_21 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_18 $$ name = expr.getValue(eContext, String.class)-->Line_19 $$ assertEquals("wobble", name)[ FD ]
Line_4 $$ StandardEvaluationContext eContext = new StandardEvaluationContext(h)-->Line_30 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_18 $$ name = expr.getValue(eContext, String.class)-->Line_24 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_15 $$ name = expr.getValue(eContext, String.class)-->Line_16 $$ assertEquals("wibble", name)[ FD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_19 $$ assertEquals("wobble", name)[ CD ]
Line_15 $$ name = expr.getValue(eContext, String.class)-->Line_22 $$ assertEquals("wabble", name)[ FD ]
Line_13 $$ Expression expr = null-->Line_27 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_17 $$ expr = new SpelExpressionParser().parseRaw("map.foo$bar")-->Line_24 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_15 $$ name = expr.getValue(eContext, String.class)-->Line_27 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_9 $$ h.map.put("$", "wubble")[ CD ]
Line_12 $$ String name = null-->Line_19 $$ assertEquals("wobble", name)[ FD ]
Line_30 $$ name = expr.getValue(eContext, String.class)-->Line_31 $$ assertEquals("tribble", name)[ FD ]
Line_4 $$ StandardEvaluationContext eContext = new StandardEvaluationContext(h)-->Line_21 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_4 $$ StandardEvaluationContext eContext = new StandardEvaluationContext(h)[ CD ]
Line_13 $$ Expression expr = null-->Line_21 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_4 $$ StandardEvaluationContext eContext = new StandardEvaluationContext(h)-->Line_24 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_14 $$ expr = new SpelExpressionParser().parseRaw("map.$foo")-->Line_30 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_24 $$ name = expr.getValue(eContext, String.class)[ CD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_7 $$ h.map.put("foo$bar", "wobble")[ CD ]
Line_23 $$ expr = new SpelExpressionParser().parseRaw("map.$")-->Line_30 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_6 $$ h.map.put("$foo", "wibble")[ CD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_30 $$ name = expr.getValue(eContext, String.class)[ CD ]
Line_21 $$ name = expr.getValue(eContext, String.class)-->Line_27 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_13 $$ Expression expr = null-->Line_29 $$ expr = new SpelExpressionParser().parseRaw("map.$_$")[ FD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_25 $$ assertEquals("wubble", name)[ CD ]
Line_18 $$ name = expr.getValue(eContext, String.class)-->Line_21 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_12 $$ String name = null-->Line_30 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_14 $$ expr = new SpelExpressionParser().parseRaw("map.$foo")-->Line_21 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_16 $$ assertEquals("wibble", name)[ CD ]
Line_13 $$ Expression expr = null-->Line_23 $$ expr = new SpelExpressionParser().parseRaw("map.$")[ FD ]
Line_18 $$ name = expr.getValue(eContext, String.class)-->Line_28 $$ assertEquals("webble", name)[ FD ]
Line_12 $$ String name = null-->Line_22 $$ assertEquals("wabble", name)[ FD ]
Line_18 $$ name = expr.getValue(eContext, String.class)-->Line_27 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_17 $$ expr = new SpelExpressionParser().parseRaw("map.foo$bar")-->Line_29 $$ expr = new SpelExpressionParser().parseRaw("map.$_$")[ FD ]
Line_21 $$ name = expr.getValue(eContext, String.class)-->Line_30 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_23 $$ expr = new SpelExpressionParser().parseRaw("map.$")[ CD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_29 $$ expr = new SpelExpressionParser().parseRaw("map.$_$")[ CD ]
Line_14 $$ expr = new SpelExpressionParser().parseRaw("map.$foo")-->Line_27 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_21 $$ name = expr.getValue(eContext, String.class)[ CD ]
Line_23 $$ expr = new SpelExpressionParser().parseRaw("map.$")-->Line_24 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_13 $$ Expression expr = null-->Line_17 $$ expr = new SpelExpressionParser().parseRaw("map.foo$bar")[ FD ]
Line_14 $$ expr = new SpelExpressionParser().parseRaw("map.$foo")-->Line_24 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_23 $$ expr = new SpelExpressionParser().parseRaw("map.$")-->Line_27 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_27 $$ name = expr.getValue(eContext, String.class)[ CD ]
Line_12 $$ String name = null-->Line_27 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_12 $$ String name = null-->Line_24 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_12 $$ String name = null-->Line_25 $$ assertEquals("wubble", name)[ FD ]
Line_13 $$ Expression expr = null-->Line_14 $$ expr = new SpelExpressionParser().parseRaw("map.$foo")[ FD ]
Line_17 $$ expr = new SpelExpressionParser().parseRaw("map.foo$bar")-->Line_30 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_14 $$ expr = new SpelExpressionParser().parseRaw("map.$foo")-->Line_18 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_15 $$ name = expr.getValue(eContext, String.class)[ CD ]
Line_12 $$ String name = null-->Line_16 $$ assertEquals("wibble", name)[ FD ]
Line_15 $$ name = expr.getValue(eContext, String.class)-->Line_25 $$ assertEquals("wubble", name)[ FD ]
Line_17 $$ expr = new SpelExpressionParser().parseRaw("map.foo$bar")-->Line_18 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_13 $$ Expression expr = null-->Line_24 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_14 $$ expr = new SpelExpressionParser().parseRaw("map.$foo")-->Line_29 $$ expr = new SpelExpressionParser().parseRaw("map.$_$")[ FD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_5 $$ eContext.addPropertyAccessor(new MapAccessor())[ CD ]
Line_15 $$ name = expr.getValue(eContext, String.class)-->Line_28 $$ assertEquals("webble", name)[ FD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_28 $$ assertEquals("webble", name)[ CD ]
Line_24 $$ name = expr.getValue(eContext, String.class)-->Line_27 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_14 $$ expr = new SpelExpressionParser().parseRaw("map.$foo")[ CD ]
Line_27 $$ name = expr.getValue(eContext, String.class)-->Line_28 $$ assertEquals("webble", name)[ FD ]
Line_18 $$ name = expr.getValue(eContext, String.class)-->Line_31 $$ assertEquals("tribble", name)[ FD ]
Line_18 $$ name = expr.getValue(eContext, String.class)-->Line_22 $$ assertEquals("wabble", name)[ FD ]
Line_24 $$ name = expr.getValue(eContext, String.class)-->Line_31 $$ assertEquals("tribble", name)[ FD ]
Line_21 $$ name = expr.getValue(eContext, String.class)-->Line_28 $$ assertEquals("webble", name)[ FD ]
Line_21 $$ name = expr.getValue(eContext, String.class)-->Line_31 $$ assertEquals("tribble", name)[ FD ]
Line_24 $$ name = expr.getValue(eContext, String.class)-->Line_25 $$ assertEquals("wubble", name)[ FD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_22 $$ assertEquals("wabble", name)[ CD ]
Line_14 $$ expr = new SpelExpressionParser().parseRaw("map.$foo")-->Line_15 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_13 $$ Expression expr = null-->Line_30 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_11 $$ h.map.put("$_$", "tribble")[ CD ]
Line_12 $$ String name = null-->Line_31 $$ assertEquals("tribble", name)[ FD ]
Line_15 $$ name = expr.getValue(eContext, String.class)-->Line_30 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_12 $$ String name = null-->Line_15 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_12 $$ String name = null[ CD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_17 $$ expr = new SpelExpressionParser().parseRaw("map.foo$bar")[ CD ]
Line_13 $$ Expression expr = null-->Line_15 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_14 $$ expr = new SpelExpressionParser().parseRaw("map.$foo")-->Line_23 $$ expr = new SpelExpressionParser().parseRaw("map.$")[ FD ]
Line_15 $$ name = expr.getValue(eContext, String.class)-->Line_19 $$ assertEquals("wobble", name)[ FD ]
Line_27 $$ name = expr.getValue(eContext, String.class)-->Line_31 $$ assertEquals("tribble", name)[ FD ]
Line_24 $$ name = expr.getValue(eContext, String.class)-->Line_28 $$ assertEquals("webble", name)[ FD ]
Line_21 $$ name = expr.getValue(eContext, String.class)-->Line_25 $$ assertEquals("wubble", name)[ FD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_13 $$ Expression expr = null[ CD ]
Line_4 $$ StandardEvaluationContext eContext = new StandardEvaluationContext(h)-->Line_18 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_15 $$ name = expr.getValue(eContext, String.class)-->Line_31 $$ assertEquals("tribble", name)[ FD ]
Line_17 $$ expr = new SpelExpressionParser().parseRaw("map.foo$bar")-->Line_23 $$ expr = new SpelExpressionParser().parseRaw("map.$")[ FD ]
Line_21 $$ name = expr.getValue(eContext, String.class)-->Line_22 $$ assertEquals("wabble", name)[ FD ]
Line_24 $$ name = expr.getValue(eContext, String.class)-->Line_30 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_4 $$ StandardEvaluationContext eContext = new StandardEvaluationContext(h)-->Line_15 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_18 $$ name = expr.getValue(eContext, String.class)-->Line_25 $$ assertEquals("wubble", name)[ FD ]
Line_12 $$ String name = null-->Line_18 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_4 $$ StandardEvaluationContext eContext = new StandardEvaluationContext(h)-->Line_5 $$ eContext.addPropertyAccessor(new MapAccessor())[ FD ]
Line_17 $$ expr = new SpelExpressionParser().parseRaw("map.foo$bar")-->Line_27 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_14 $$ expr = new SpelExpressionParser().parseRaw("map.$foo")-->Line_17 $$ expr = new SpelExpressionParser().parseRaw("map.foo$bar")[ FD ]
Line_29 $$ expr = new SpelExpressionParser().parseRaw("map.$_$")-->Line_30 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_12 $$ String name = null-->Line_28 $$ assertEquals("webble", name)[ FD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_18 $$ name = expr.getValue(eContext, String.class)[ CD ]
Line_18 $$ name = expr.getValue(eContext, String.class)-->Line_30 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_31 $$ assertEquals("tribble", name)[ CD ]
Line_23 $$ expr = new SpelExpressionParser().parseRaw("map.$")-->Line_29 $$ expr = new SpelExpressionParser().parseRaw("map.$_$")[ FD ]
Line_27 $$ name = expr.getValue(eContext, String.class)-->Line_30 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_13 $$ Expression expr = null-->Line_18 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_21 $$ name = expr.getValue(eContext, String.class)-->Line_24 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_15 $$ name = expr.getValue(eContext, String.class)-->Line_24 $$ name = expr.getValue(eContext, String.class)[ FD ]
Line_2 $$ public void dollarPrefixedIdentifier_SPR7100() -->Line_3 $$ Holder h = new Holder()[ CD ]
Line_12 $$ String name = null-->Line_21 $$ name = expr.getValue(eContext, String.class)[ FD ]
