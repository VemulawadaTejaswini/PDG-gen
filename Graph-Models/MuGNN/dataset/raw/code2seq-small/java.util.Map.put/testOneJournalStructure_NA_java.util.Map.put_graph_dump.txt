Line_2 $$ public void testOneJournalStructure() throws Exception -->Line_18 $$ Assert.assertEquals(importedDDMStructure.getStructureId(), classTypeIds)[ CD ]
Line_2 $$ public void testOneJournalStructure() throws Exception -->Line_15 $$ long anyAssetType = GetterUtil.getLong(portletPreferences.getValue("anyAssetType", null))[ CD ]
Line_2 $$ public void testOneJournalStructure() throws Exception -->Line_13 $$ long anyClassTypeJournalArticleAssetRendererFactory = GetterUtil.getLong(portletPreferences.getValue("anyClassTypeJournalArticleAssetRendererFactory", null))[ CD ]
Line_7 $$ Map<String, String[]> preferenceMap = new HashMap()-->Line_9 $$ preferenceMap.put("anyAssetType", new String[] [ FD ]
Line_13 $$ long anyClassTypeJournalArticleAssetRendererFactory = GetterUtil.getLong(portletPreferences.getValue("anyClassTypeJournalArticleAssetRendererFactory", null))-->Line_14 $$ Assert.assertEquals(anyClassTypeJournalArticleAssetRendererFactory, importedDDMStructure.getStructureId())[ FD ]
Line_8 $$ long journalArticleClassNameId = PortalUtil.getClassNameId(JournalArticle.class)-->Line_16 $$ Assert.assertEquals(journalArticleClassNameId, anyAssetType)[ FD ]
Line_2 $$ public void testOneJournalStructure() throws Exception -->Line_9 $$ preferenceMap.put("anyAssetType", new String[] [ CD ]
Line_17 $$ long classTypeIds = GetterUtil.getLong(portletPreferences.getValue("classTypeIds", null))-->Line_18 $$ Assert.assertEquals(importedDDMStructure.getStructureId(), classTypeIds)[ FD ]
Line_12 $$ PortletPreferences portletPreferences = getImportedPortletPreferences(preferenceMap)-->Line_13 $$ long anyClassTypeJournalArticleAssetRendererFactory = GetterUtil.getLong(portletPreferences.getValue("anyClassTypeJournalArticleAssetRendererFactory", null))[ FD ]
Line_2 $$ public void testOneJournalStructure() throws Exception -->Line_17 $$ long classTypeIds = GetterUtil.getLong(portletPreferences.getValue("classTypeIds", null))[ CD ]
Line_4 $$ ServiceContext serviceContext = ServiceContextTestUtil.getServiceContext()-->Line_6 $$ DDMStructure importedDDMStructure = DDMStructureTestUtil.addStructure(importedGroup.getGroupId(), JournalArticle.class.getName(), 0, ddmStructure.getDDMForm(), LocaleUtil.getDefault(), serviceContext)[ FD ]
Line_2 $$ public void testOneJournalStructure() throws Exception -->Line_11 $$ preferenceMap.put("classTypeIds", new String[] [ CD ]
Line_2 $$ public void testOneJournalStructure() throws Exception -->Line_3 $$ DDMStructure ddmStructure = DDMStructureTestUtil.addStructure(group.getGroupId(), JournalArticle.class.getName())[ CD ]
Line_2 $$ public void testOneJournalStructure() throws Exception -->Line_12 $$ PortletPreferences portletPreferences = getImportedPortletPreferences(preferenceMap)[ CD ]
Line_3 $$ DDMStructure ddmStructure = DDMStructureTestUtil.addStructure(group.getGroupId(), JournalArticle.class.getName())-->Line_10 $$ preferenceMap.put("anyClassTypeJournalArticleAssetRendererFactory", new String[] [ FD ]
Line_8 $$ long journalArticleClassNameId = PortalUtil.getClassNameId(JournalArticle.class)-->Line_9 $$ preferenceMap.put("anyAssetType", new String[] [ FD ]
Line_3 $$ DDMStructure ddmStructure = DDMStructureTestUtil.addStructure(group.getGroupId(), JournalArticle.class.getName())-->Line_6 $$ DDMStructure importedDDMStructure = DDMStructureTestUtil.addStructure(importedGroup.getGroupId(), JournalArticle.class.getName(), 0, ddmStructure.getDDMForm(), LocaleUtil.getDefault(), serviceContext)[ FD ]
Line_2 $$ public void testOneJournalStructure() throws Exception -->Line_7 $$ Map<String, String[]> preferenceMap = new HashMap()[ CD ]
Line_2 $$ public void testOneJournalStructure() throws Exception -->Line_6 $$ DDMStructure importedDDMStructure = DDMStructureTestUtil.addStructure(importedGroup.getGroupId(), JournalArticle.class.getName(), 0, ddmStructure.getDDMForm(), LocaleUtil.getDefault(), serviceContext)[ CD ]
Line_4 $$ ServiceContext serviceContext = ServiceContextTestUtil.getServiceContext()-->Line_5 $$ serviceContext.setUuid(ddmStructure.getUuid())[ FD ]
Line_2 $$ public void testOneJournalStructure() throws Exception -->Line_5 $$ serviceContext.setUuid(ddmStructure.getUuid())[ CD ]
Line_2 $$ public void testOneJournalStructure() throws Exception -->Line_14 $$ Assert.assertEquals(anyClassTypeJournalArticleAssetRendererFactory, importedDDMStructure.getStructureId())[ CD ]
Line_12 $$ PortletPreferences portletPreferences = getImportedPortletPreferences(preferenceMap)-->Line_15 $$ long anyAssetType = GetterUtil.getLong(portletPreferences.getValue("anyAssetType", null))[ FD ]
Line_2 $$ public void testOneJournalStructure() throws Exception -->Line_10 $$ preferenceMap.put("anyClassTypeJournalArticleAssetRendererFactory", new String[] [ CD ]
Line_12 $$ PortletPreferences portletPreferences = getImportedPortletPreferences(preferenceMap)-->Line_17 $$ long classTypeIds = GetterUtil.getLong(portletPreferences.getValue("classTypeIds", null))[ FD ]
Line_6 $$ DDMStructure importedDDMStructure = DDMStructureTestUtil.addStructure(importedGroup.getGroupId(), JournalArticle.class.getName(), 0, ddmStructure.getDDMForm(), LocaleUtil.getDefault(), serviceContext)-->Line_18 $$ Assert.assertEquals(importedDDMStructure.getStructureId(), classTypeIds)[ FD ]
Line_7 $$ Map<String, String[]> preferenceMap = new HashMap()-->Line_10 $$ preferenceMap.put("anyClassTypeJournalArticleAssetRendererFactory", new String[] [ FD ]
Line_2 $$ public void testOneJournalStructure() throws Exception -->Line_16 $$ Assert.assertEquals(journalArticleClassNameId, anyAssetType)[ CD ]
Line_3 $$ DDMStructure ddmStructure = DDMStructureTestUtil.addStructure(group.getGroupId(), JournalArticle.class.getName())-->Line_11 $$ preferenceMap.put("classTypeIds", new String[] [ FD ]
Line_15 $$ long anyAssetType = GetterUtil.getLong(portletPreferences.getValue("anyAssetType", null))-->Line_16 $$ Assert.assertEquals(journalArticleClassNameId, anyAssetType)[ FD ]
Line_3 $$ DDMStructure ddmStructure = DDMStructureTestUtil.addStructure(group.getGroupId(), JournalArticle.class.getName())-->Line_5 $$ serviceContext.setUuid(ddmStructure.getUuid())[ FD ]
Line_2 $$ public void testOneJournalStructure() throws Exception -->Line_8 $$ long journalArticleClassNameId = PortalUtil.getClassNameId(JournalArticle.class)[ CD ]
Line_2 $$ public void testOneJournalStructure() throws Exception -->Line_4 $$ ServiceContext serviceContext = ServiceContextTestUtil.getServiceContext()[ CD ]
Line_7 $$ Map<String, String[]> preferenceMap = new HashMap()-->Line_11 $$ preferenceMap.put("classTypeIds", new String[] [ FD ]
Line_7 $$ Map<String, String[]> preferenceMap = new HashMap()-->Line_12 $$ PortletPreferences portletPreferences = getImportedPortletPreferences(preferenceMap)[ FD ]
Line_6 $$ DDMStructure importedDDMStructure = DDMStructureTestUtil.addStructure(importedGroup.getGroupId(), JournalArticle.class.getName(), 0, ddmStructure.getDDMForm(), LocaleUtil.getDefault(), serviceContext)-->Line_14 $$ Assert.assertEquals(anyClassTypeJournalArticleAssetRendererFactory, importedDDMStructure.getStructureId())[ FD ]
