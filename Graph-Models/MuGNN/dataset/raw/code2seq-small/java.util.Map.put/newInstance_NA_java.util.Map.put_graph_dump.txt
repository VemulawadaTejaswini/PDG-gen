Line_13 $$ for (int i = 0; i < delegateGetter.size(); i++) -->Line_18 $$ if (intDelta == BROKEN_DELTA)[ CD ]
Line_13 $$ for (int i = 0; i < delegateGetter.size(); i++) -->Line_16 $$ int intDelta = deltaToInt(delta)[ CD ]
Line_2 $$ public static IntTimestampGetter newInstance(@NotNull TimestampGetter delegateGetter, int blockSize) -->Line_13 $$ for (int i = 0; i < delegateGetter.size(); i++) [ FD ]
Line_13 $$ for (int i = 0; i < delegateGetter.size(); i++) -->Line_14 $$ int blockIndex = i - (i % blockSize)[ CD ]
Line_2 $$ public static IntTimestampGetter newInstance(@NotNull TimestampGetter delegateGetter, int blockSize) -->Line_3 $$ if (delegateGetter.size() < 0)[ CD ]
Line_13 $$ for (int i = 0; i < delegateGetter.size(); i++) -->Line_15 $$ long delta = delegateGetter.getTimestamp(i) - delegateGetter.getTimestamp(blockIndex)[ FD ]
Line_2 $$ public static IntTimestampGetter newInstance(@NotNull TimestampGetter delegateGetter, int blockSize) -->Line_7 $$ long[] saveTimestamps = new long[(delegateGetter.size() - 1) / blockSize + 1][ FD ]
Line_2 $$ public static IntTimestampGetter newInstance(@NotNull TimestampGetter delegateGetter, int blockSize) -->Line_12 $$ int[] deltas = new int[delegateGetter.size()][ FD ]
Line_2 $$ public static IntTimestampGetter newInstance(@NotNull TimestampGetter delegateGetter, int blockSize) -->Line_5 $$ if (delegateGetter.size() == 0)[ FD ]
Line_2 $$ public static IntTimestampGetter newInstance(@NotNull TimestampGetter delegateGetter, int blockSize) -->Line_8 $$ for (int i = 0; i < saveTimestamps.length; i++) [ CD ]
Line_18 $$ if (intDelta == BROKEN_DELTA)-->Line_19 $$ brokenDeltas.put(i, delta)[ CD ]
Line_2 $$ public static IntTimestampGetter newInstance(@NotNull TimestampGetter delegateGetter, int blockSize) -->Line_7 $$ long[] saveTimestamps = new long[(delegateGetter.size() - 1) / blockSize + 1][ CD ]
Line_8 $$ for (int i = 0; i < saveTimestamps.length; i++) -->Line_15 $$ long delta = delegateGetter.getTimestamp(i) - delegateGetter.getTimestamp(blockIndex)[ FD ]
Line_15 $$ long delta = delegateGetter.getTimestamp(i) - delegateGetter.getTimestamp(blockIndex)-->Line_16 $$ int intDelta = deltaToInt(delta)[ FD ]
Line_11 $$ Map<Integer, Long> brokenDeltas = new HashMap<Integer, Long>()-->Line_19 $$ brokenDeltas.put(i, delta)[ FD ]
Line_13 $$ for (int i = 0; i < delegateGetter.size(); i++) -->Line_19 $$ brokenDeltas.put(i, delta)[ FD ]
Line_2 $$ public static IntTimestampGetter newInstance(@NotNull TimestampGetter delegateGetter, int blockSize) -->Line_11 $$ Map<Integer, Long> brokenDeltas = new HashMap<Integer, Long>()[ CD ]
Line_8 $$ for (int i = 0; i < saveTimestamps.length; i++) -->Line_9 $$ saveTimestamps[i] = delegateGetter.getTimestamp(blockSize * i)[ CD ]
Line_2 $$ public static IntTimestampGetter newInstance(@NotNull TimestampGetter delegateGetter, int blockSize) -->Line_4 $$ throw new NegativeArraySizeException("delegateGetter.size() < 0: " + delegateGetter.size())[ FD ]
Line_2 $$ public static IntTimestampGetter newInstance(@NotNull TimestampGetter delegateGetter, int blockSize) -->Line_12 $$ int[] deltas = new int[delegateGetter.size()][ CD ]
Line_13 $$ for (int i = 0; i < delegateGetter.size(); i++) -->Line_15 $$ long delta = delegateGetter.getTimestamp(i) - delegateGetter.getTimestamp(blockIndex)[ CD ]
Line_8 $$ for (int i = 0; i < saveTimestamps.length; i++) -->Line_13 $$ for (int i = 0; i < delegateGetter.size(); i++) [ FD ]
Line_2 $$ public static IntTimestampGetter newInstance(@NotNull TimestampGetter delegateGetter, int blockSize) -->Line_21 $$ return new IntTimestampGetter(deltas, blockSize, saveTimestamps, brokenDeltas)[ CD ]
Line_2 $$ public static IntTimestampGetter newInstance(@NotNull TimestampGetter delegateGetter, int blockSize) -->Line_15 $$ long delta = delegateGetter.getTimestamp(i) - delegateGetter.getTimestamp(blockIndex)[ FD ]
Line_16 $$ int intDelta = deltaToInt(delta)-->Line_18 $$ if (intDelta == BROKEN_DELTA)[ FD ]
Line_2 $$ public static IntTimestampGetter newInstance(@NotNull TimestampGetter delegateGetter, int blockSize) -->Line_9 $$ saveTimestamps[i] = delegateGetter.getTimestamp(blockSize * i)[ FD ]
Line_13 $$ for (int i = 0; i < delegateGetter.size(); i++) -->Line_17 $$ deltas[i] = intDelta[ CD ]
Line_16 $$ int intDelta = deltaToInt(delta)-->Line_17 $$ deltas[i] = intDelta[ FD ]
Line_8 $$ for (int i = 0; i < saveTimestamps.length; i++) -->Line_19 $$ brokenDeltas.put(i, delta)[ FD ]
Line_14 $$ int blockIndex = i - (i % blockSize)-->Line_15 $$ long delta = delegateGetter.getTimestamp(i) - delegateGetter.getTimestamp(blockIndex)[ FD ]
Line_2 $$ public static IntTimestampGetter newInstance(@NotNull TimestampGetter delegateGetter, int blockSize) -->Line_3 $$ if (delegateGetter.size() < 0)[ FD ]
Line_2 $$ public static IntTimestampGetter newInstance(@NotNull TimestampGetter delegateGetter, int blockSize) -->Line_5 $$ if (delegateGetter.size() == 0)[ CD ]
Line_15 $$ long delta = delegateGetter.getTimestamp(i) - delegateGetter.getTimestamp(blockIndex)-->Line_19 $$ brokenDeltas.put(i, delta)[ FD ]
Line_2 $$ public static IntTimestampGetter newInstance(@NotNull TimestampGetter delegateGetter, int blockSize) -->Line_13 $$ for (int i = 0; i < delegateGetter.size(); i++) [ CD ]
