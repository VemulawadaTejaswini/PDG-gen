Line_12 $$ Settings portletInstanceSettings = SettingsFactoryUtil.getSettings(new PortletInstanceSettingsLocator(layout, portletId))-->Line_14 $$ String scopeLayoutUuid = portletInstanceSettings.getValue("lfrScopeLayoutUuid", null)[ FD ]
Line_10 $$ for (Portlet portlet : layoutTypePortlet.getAllPortlets(false)) -->Line_11 $$ String portletId = portlet.getPortletId()[ FD ]
Line_2 $$ protected void getLayoutPortlets(PortletDataContext portletDataContext, long[] layoutIds, Map<String, Object[]> portletIds, Layout layout) throws Exception -->Line_3 $$ if (!ArrayUtil.contains(layoutIds, layout.getLayoutId())) [ FD ]
Line_22 $$ scopeLayout = _layoutLocalService.fetchLayoutByUuidAndGroupId(scopeLayoutUuid, portletDataContext.getGroupId(), portletDataContext.isPrivateLayout())-->Line_23 $$ if (scopeLayout == null) [ FD ]
Line_21 $$ Layout scopeLayout = null-->Line_23 $$ if (scopeLayout == null) [ FD ]
Line_21 $$ Layout scopeLayout = null-->Line_22 $$ scopeLayout = _layoutLocalService.fetchLayoutByUuidAndGroupId(scopeLayoutUuid, portletDataContext.getGroupId(), portletDataContext.isPrivateLayout())[ FD ]
Line_21 $$ Layout scopeLayout = null-->Line_26 $$ scopeGroup = scopeLayout.getScopeGroup()[ FD ]
Line_16 $$ if (Validator.isNotNull(scopeType)) -->Line_18 $$ if (scopeType.equals("company")) [ CD ]
Line_17 $$ Group scopeGroup = null-->Line_26 $$ scopeGroup = scopeLayout.getScopeGroup()[ FD ]
Line_2 $$ protected void getLayoutPortlets(PortletDataContext portletDataContext, long[] layoutIds, Map<String, Object[]> portletIds, Layout layout) throws Exception -->Line_35 $$ portletIds.put(key, new Object[] [ FD ]
Line_20 $$ if (scopeType.equals("layout")) -->Line_26 $$ scopeGroup = scopeLayout.getScopeGroup()[ CD ]
Line_2 $$ protected void getLayoutPortlets(PortletDataContext portletDataContext, long[] layoutIds, Map<String, Object[]> portletIds, Layout layout) throws Exception -->Line_6 $$ if (!prepareLayoutStagingHandler(portletDataContext, layout) || !layout.isSupportsEmbeddedPortlets()) [ FD ]
Line_19 $$ scopeGroup = _groupLocalService.getCompanyGroup(layout.getCompanyId())-->Line_26 $$ scopeGroup = scopeLayout.getScopeGroup()[ FD ]
Line_26 $$ scopeGroup = scopeLayout.getScopeGroup()-->Line_31 $$ scopeGroupId = scopeGroup.getGroupId()[ FD ]
Line_11 $$ String portletId = portlet.getPortletId()-->Line_34 $$ String key = PortletPermissionUtil.getPrimaryKey(layout.getPlid(), portletId)[ FD ]
Line_30 $$ if (scopeGroup != null) -->Line_31 $$ scopeGroupId = scopeGroup.getGroupId()[ CD ]
Line_18 $$ if (scopeType.equals("company")) -->Line_19 $$ scopeGroup = _groupLocalService.getCompanyGroup(layout.getCompanyId())[ CD ]
Line_2 $$ protected void getLayoutPortlets(PortletDataContext portletDataContext, long[] layoutIds, Map<String, Object[]> portletIds, Layout layout) throws Exception -->Line_9 $$ LayoutTypePortlet layoutTypePortlet = (LayoutTypePortlet) layout.getLayoutType()[ CD ]
Line_6 $$ if (!prepareLayoutStagingHandler(portletDataContext, layout) || !layout.isSupportsEmbeddedPortlets()) -->Line_7 $$ return[ CD ]
Line_2 $$ protected void getLayoutPortlets(PortletDataContext portletDataContext, long[] layoutIds, Map<String, Object[]> portletIds, Layout layout) throws Exception -->Line_9 $$ LayoutTypePortlet layoutTypePortlet = (LayoutTypePortlet) layout.getLayoutType()[ FD ]
Line_17 $$ Group scopeGroup = null-->Line_30 $$ if (scopeGroup != null) [ FD ]
Line_18 $$ if (scopeType.equals("company")) -->Line_20 $$ if (scopeType.equals("layout")) [ CD ]
Line_15 $$ long scopeGroupId = portletDataContext.getScopeGroupId()-->Line_31 $$ scopeGroupId = scopeGroup.getGroupId()[ FD ]
Line_20 $$ if (scopeType.equals("layout")) -->Line_22 $$ scopeLayout = _layoutLocalService.fetchLayoutByUuidAndGroupId(scopeLayoutUuid, portletDataContext.getGroupId(), portletDataContext.isPrivateLayout())[ CD ]
Line_9 $$ LayoutTypePortlet layoutTypePortlet = (LayoutTypePortlet) layout.getLayoutType()-->Line_10 $$ for (Portlet portlet : layoutTypePortlet.getAllPortlets(false)) [ FD ]
Line_3 $$ if (!ArrayUtil.contains(layoutIds, layout.getLayoutId())) -->Line_4 $$ return[ CD ]
Line_13 $$ String scopeType = portletInstanceSettings.getValue("lfrScopeType", null)-->Line_18 $$ if (scopeType.equals("company")) [ FD ]
Line_14 $$ String scopeLayoutUuid = portletInstanceSettings.getValue("lfrScopeLayoutUuid", null)-->Line_22 $$ scopeLayout = _layoutLocalService.fetchLayoutByUuidAndGroupId(scopeLayoutUuid, portletDataContext.getGroupId(), portletDataContext.isPrivateLayout())[ FD ]
Line_34 $$ String key = PortletPermissionUtil.getPrimaryKey(layout.getPlid(), portletId)-->Line_35 $$ portletIds.put(key, new Object[] [ FD ]
Line_20 $$ if (scopeType.equals("layout")) -->Line_21 $$ Layout scopeLayout = null[ CD ]
Line_2 $$ protected void getLayoutPortlets(PortletDataContext portletDataContext, long[] layoutIds, Map<String, Object[]> portletIds, Layout layout) throws Exception -->Line_34 $$ String key = PortletPermissionUtil.getPrimaryKey(layout.getPlid(), portletId)[ FD ]
Line_2 $$ protected void getLayoutPortlets(PortletDataContext portletDataContext, long[] layoutIds, Map<String, Object[]> portletIds, Layout layout) throws Exception -->Line_15 $$ long scopeGroupId = portletDataContext.getScopeGroupId()[ FD ]
Line_19 $$ scopeGroup = _groupLocalService.getCompanyGroup(layout.getCompanyId())-->Line_31 $$ scopeGroupId = scopeGroup.getGroupId()[ FD ]
Line_2 $$ protected void getLayoutPortlets(PortletDataContext portletDataContext, long[] layoutIds, Map<String, Object[]> portletIds, Layout layout) throws Exception -->Line_19 $$ scopeGroup = _groupLocalService.getCompanyGroup(layout.getCompanyId())[ FD ]
Line_17 $$ Group scopeGroup = null-->Line_31 $$ scopeGroupId = scopeGroup.getGroupId()[ FD ]
Line_13 $$ String scopeType = portletInstanceSettings.getValue("lfrScopeType", null)-->Line_20 $$ if (scopeType.equals("layout")) [ FD ]
Line_12 $$ Settings portletInstanceSettings = SettingsFactoryUtil.getSettings(new PortletInstanceSettingsLocator(layout, portletId))-->Line_13 $$ String scopeType = portletInstanceSettings.getValue("lfrScopeType", null)[ FD ]
Line_2 $$ protected void getLayoutPortlets(PortletDataContext portletDataContext, long[] layoutIds, Map<String, Object[]> portletIds, Layout layout) throws Exception -->Line_22 $$ scopeLayout = _layoutLocalService.fetchLayoutByUuidAndGroupId(scopeLayoutUuid, portletDataContext.getGroupId(), portletDataContext.isPrivateLayout())[ FD ]
Line_13 $$ String scopeType = portletInstanceSettings.getValue("lfrScopeType", null)-->Line_16 $$ if (Validator.isNotNull(scopeType)) [ FD ]
Line_17 $$ Group scopeGroup = null-->Line_19 $$ scopeGroup = _groupLocalService.getCompanyGroup(layout.getCompanyId())[ FD ]
Line_26 $$ scopeGroup = scopeLayout.getScopeGroup()-->Line_30 $$ if (scopeGroup != null) [ FD ]
Line_2 $$ protected void getLayoutPortlets(PortletDataContext portletDataContext, long[] layoutIds, Map<String, Object[]> portletIds, Layout layout) throws Exception -->Line_3 $$ if (!ArrayUtil.contains(layoutIds, layout.getLayoutId())) [ CD ]
Line_19 $$ scopeGroup = _groupLocalService.getCompanyGroup(layout.getCompanyId())-->Line_30 $$ if (scopeGroup != null) [ FD ]
Line_22 $$ scopeLayout = _layoutLocalService.fetchLayoutByUuidAndGroupId(scopeLayoutUuid, portletDataContext.getGroupId(), portletDataContext.isPrivateLayout())-->Line_26 $$ scopeGroup = scopeLayout.getScopeGroup()[ FD ]
Line_2 $$ protected void getLayoutPortlets(PortletDataContext portletDataContext, long[] layoutIds, Map<String, Object[]> portletIds, Layout layout) throws Exception -->Line_6 $$ if (!prepareLayoutStagingHandler(portletDataContext, layout) || !layout.isSupportsEmbeddedPortlets()) [ CD ]
Line_20 $$ if (scopeType.equals("layout")) -->Line_23 $$ if (scopeLayout == null) [ CD ]
Line_16 $$ if (Validator.isNotNull(scopeType)) -->Line_30 $$ if (scopeGroup != null) [ CD ]
Line_16 $$ if (Validator.isNotNull(scopeType)) -->Line_17 $$ Group scopeGroup = null[ CD ]
