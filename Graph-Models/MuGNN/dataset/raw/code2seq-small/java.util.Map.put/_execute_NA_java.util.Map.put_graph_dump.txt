Line_2 $$ protected ActionCallback _execute(final PlaybackContext context) -->Line_6 $$ if (text.length() > 0) [ CD ]
Line_2 $$ protected ActionCallback _execute(final PlaybackContext context) -->Line_29 $$ return result[ CD ]
Line_3 $$ final ActionCallback result = new ActionCallback()-->Line_25 $$ result.setRejected()[ FD ]
Line_8 $$ for (String each : keyValue) -->Line_9 $$ final String[] eachPair = each.split("=")[ FD ]
Line_10 $$ if (eachPair.length != 2) -->Line_12 $$ result.setRejected()[ CD ]
Line_2 $$ protected ActionCallback _execute(final PlaybackContext context) -->Line_24 $$ context.error("Assertion failed: " + error.getMessage(), getLine())[ FD ]
Line_5 $$ final Map<String, String> expected = new LinkedHashMap<String, String>()-->Line_21 $$ doAssert(expected, context)[ FD ]
Line_2 $$ protected ActionCallback _execute(final PlaybackContext context) -->Line_5 $$ final Map<String, String> expected = new LinkedHashMap<String, String>()[ CD ]
Line_2 $$ protected ActionCallback _execute(final PlaybackContext context) -->Line_18 $$ IdeFocusManager.findInstance().doWhenFocusSettlesDown(new Runnable() [ CD ]
Line_4 $$ String text = getText().substring(PREFIX.length()).trim()-->Line_7 $$ final String[] keyValue = text.split(",")[ FD ]
Line_2 $$ protected ActionCallback _execute(final PlaybackContext context) -->Line_21 $$ doAssert(expected, context)[ FD ]
Line_4 $$ String text = getText().substring(PREFIX.length()).trim()-->Line_6 $$ if (text.length() > 0) [ FD ]
Line_10 $$ if (eachPair.length != 2) -->Line_11 $$ context.error("Syntax error, must be comma-separated pairs key=value", getLine())[ CD ]
Line_5 $$ final Map<String, String> expected = new LinkedHashMap<String, String>()-->Line_15 $$ expected.put(eachPair[0], eachPair[1])[ FD ]
Line_3 $$ final ActionCallback result = new ActionCallback()-->Line_22 $$ result.setDone()[ FD ]
Line_2 $$ protected ActionCallback _execute(final PlaybackContext context) -->Line_3 $$ final ActionCallback result = new ActionCallback()[ CD ]
Line_3 $$ final ActionCallback result = new ActionCallback()-->Line_12 $$ result.setRejected()[ FD ]
Line_2 $$ protected ActionCallback _execute(final PlaybackContext context) -->Line_11 $$ context.error("Syntax error, must be comma-separated pairs key=value", getLine())[ FD ]
Line_2 $$ protected ActionCallback _execute(final PlaybackContext context) -->Line_4 $$ String text = getText().substring(PREFIX.length()).trim()[ CD ]
Line_6 $$ if (text.length() > 0) -->Line_7 $$ final String[] keyValue = text.split(",")[ CD ]
Line_10 $$ if (eachPair.length != 2) -->Line_13 $$ return result[ CD ]
