Line_11 $$ java.util.Calendar endTimeJCalendar = JCalendarUtil.getJCalendar(endTime)-->Line_14 $$ endTimeJCalendar = JCalendarUtil.toLastHourJCalendar(endTimeJCalendar)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_51 $$ calendarBooking.setSecondReminder(secondReminder)[ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_49 $$ calendarBooking.setFirstReminder(firstReminder)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_62 $$ resourceLocalService.addModelResources(calendarBooking, serviceContext)[ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_24 $$ calendarBooking.setGroupId(calendar.getGroupId())[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_48 $$ calendarBooking.setRecurrence(recurrence)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_50 $$ calendarBooking.setFirstReminderType(firstReminderType)[ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_10 $$ java.util.Calendar startTimeJCalendar = JCalendarUtil.getJCalendar(startTime)[ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_33 $$ calendarBooking.setParentCalendarBookingId(parentCalendarBookingId)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_60 $$ calendarBookingPersistence.update(calendarBooking)[ CD ]
Line_10 $$ java.util.Calendar startTimeJCalendar = JCalendarUtil.getJCalendar(startTime)-->Line_22 $$ validate(startTimeJCalendar, endTimeJCalendar, recurrence)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_25 $$ calendarBooking.setCompanyId(user.getCompanyId())[ CD ]
Line_6 $$ for (Locale locale : descriptionMap.keySet()) -->Line_7 $$ String sanitizedDescription = SanitizerUtil.sanitize(calendar.getCompanyId(), calendar.getGroupId(), userId, CalendarBooking.class.getName(), calendarBookingId, ContentTypes.TEXT_HTML, Sanitizer.MODE_ALL, descriptionMap.get(locale), null)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_6 $$ for (Locale locale : descriptionMap.keySet()) [ FD ]
Line_37 $$ String vEventUid = (String) serviceContext.getAttribute("vEventUid")-->Line_41 $$ calendarBooking.setVEventUid(vEventUid)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_5 $$ long calendarBookingId = counterLocalService.increment()[ CD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_26 $$ calendarBooking.setUserId(user.getUserId())[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_16 $$ if (firstReminder < secondReminder) [ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_38 $$ if (vEventUid == null) [ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)[ CD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_51 $$ calendarBooking.setSecondReminder(secondReminder)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_53 $$ calendarBooking.setExpandoBridgeAttributes(serviceContext)[ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_4 $$ Calendar calendar = calendarPersistence.findByPrimaryKey(calendarId)[ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_27 $$ calendarBooking.setUserName(user.getFullName())[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_61 $$ addChildCalendarBookings(calendarBooking, childCalendarIds, serviceContext)[ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_43 $$ calendarBooking.setDescriptionMap(descriptionMap)[ CD ]
Line_5 $$ long calendarBookingId = counterLocalService.increment()-->Line_64 $$ socialActivityLocalService.addActivity(userId, calendarBooking.getGroupId(), CalendarBooking.class.getName(), calendarBookingId, CalendarActivityKeys.ADD_CALENDAR_BOOKING, getExtraDataJSON(calendarBooking), 0)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_30 $$ calendarBooking.setCalendarId(calendarId)[ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_65 $$ sendNotification(calendarBooking, NotificationTemplateType.INVITE, serviceContext)[ FD ]
Line_5 $$ long calendarBookingId = counterLocalService.increment()-->Line_7 $$ String sanitizedDescription = SanitizerUtil.sanitize(calendar.getCompanyId(), calendar.getGroupId(), userId, CalendarBooking.class.getName(), calendarBookingId, ContentTypes.TEXT_HTML, Sanitizer.MODE_ALL, descriptionMap.get(locale), null)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_45 $$ calendarBooking.setStartTime(startTimeJCalendar.getTimeInMillis())[ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_63 $$ updateAsset(userId, calendarBooking, serviceContext.getAssetCategoryIds(), serviceContext.getAssetTagNames(), serviceContext.getAssetLinkEntryIds(), serviceContext.getAssetPriority())[ CD ]
Line_16 $$ if (firstReminder < secondReminder) -->Line_18 $$ secondReminder = firstReminder[ CD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_48 $$ calendarBooking.setRecurrence(recurrence)[ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_42 $$ calendarBooking.setTitleMap(titleMap, serviceContext.getLocale())[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_16 $$ if (firstReminder < secondReminder) [ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_65 $$ sendNotification(calendarBooking, NotificationTemplateType.INVITE, serviceContext)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_69 $$ return calendarBooking[ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_29 $$ calendarBooking.setModifiedDate(serviceContext.getModifiedDate(now))[ FD ]
Line_37 $$ String vEventUid = (String) serviceContext.getAttribute("vEventUid")-->Line_39 $$ vEventUid = PortalUUIDUtil.generate()[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_24 $$ calendarBooking.setGroupId(calendar.getGroupId())[ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_52 $$ calendarBooking.setSecondReminderType(secondReminderType)[ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_43 $$ calendarBooking.setDescriptionMap(descriptionMap)[ FD ]
Line_18 $$ secondReminder = firstReminder-->Line_51 $$ calendarBooking.setSecondReminder(secondReminder)[ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_66 $$ if (calendarBooking.isMasterBooking()) [ FD ]
Line_13 $$ startTimeJCalendar = JCalendarUtil.toMidnightJCalendar(startTimeJCalendar)-->Line_22 $$ validate(startTimeJCalendar, endTimeJCalendar, recurrence)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_51 $$ calendarBooking.setSecondReminder(secondReminder)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_11 $$ java.util.Calendar endTimeJCalendar = JCalendarUtil.getJCalendar(endTime)[ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_67 $$ WorkflowHandlerRegistryUtil.startWorkflowInstance(calendarBooking.getCompanyId(), calendarBooking.getGroupId(), userId, CalendarBooking.class.getName(), calendarBooking.getCalendarBookingId(), calendarBooking, serviceContext)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_46 $$ calendarBooking.setEndTime(endTimeJCalendar.getTimeInMillis())[ CD ]
Line_12 $$ if (allDay) -->Line_13 $$ startTimeJCalendar = JCalendarUtil.toMidnightJCalendar(startTimeJCalendar)[ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_12 $$ if (allDay) [ CD ]
Line_21 $$ Date now = new Date()-->Line_28 $$ calendarBooking.setCreateDate(serviceContext.getCreateDate(now))[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_53 $$ calendarBooking.setExpandoBridgeAttributes(serviceContext)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_4 $$ Calendar calendar = calendarPersistence.findByPrimaryKey(calendarId)[ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_65 $$ sendNotification(calendarBooking, NotificationTemplateType.INVITE, serviceContext)[ CD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_41 $$ calendarBooking.setVEventUid(vEventUid)[ FD ]
Line_14 $$ endTimeJCalendar = JCalendarUtil.toLastHourJCalendar(endTimeJCalendar)-->Line_22 $$ validate(startTimeJCalendar, endTimeJCalendar, recurrence)[ FD ]
Line_13 $$ startTimeJCalendar = JCalendarUtil.toMidnightJCalendar(startTimeJCalendar)-->Line_45 $$ calendarBooking.setStartTime(startTimeJCalendar.getTimeInMillis())[ FD ]
Line_32 $$ if (parentCalendarBookingId > 0) -->Line_35 $$ calendarBooking.setParentCalendarBookingId(calendarBookingId)[ CD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_35 $$ calendarBooking.setParentCalendarBookingId(calendarBookingId)[ FD ]
Line_11 $$ java.util.Calendar endTimeJCalendar = JCalendarUtil.getJCalendar(endTime)-->Line_22 $$ validate(startTimeJCalendar, endTimeJCalendar, recurrence)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_64 $$ socialActivityLocalService.addActivity(userId, calendarBooking.getGroupId(), CalendarBooking.class.getName(), calendarBookingId, CalendarActivityKeys.ADD_CALENDAR_BOOKING, getExtraDataJSON(calendarBooking), 0)[ CD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_29 $$ calendarBooking.setModifiedDate(serviceContext.getModifiedDate(now))[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_61 $$ addChildCalendarBookings(calendarBooking, childCalendarIds, serviceContext)[ FD ]
Line_54 $$ if (calendarBooking.isMasterBooking()) -->Line_55 $$ calendarBooking.setStatus(CalendarBookingWorkflowConstants.STATUS_DRAFT)[ CD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_30 $$ calendarBooking.setCalendarId(calendarId)[ FD ]
Line_5 $$ long calendarBookingId = counterLocalService.increment()-->Line_35 $$ calendarBooking.setParentCalendarBookingId(calendarBookingId)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_63 $$ updateAsset(userId, calendarBooking, serviceContext.getAssetCategoryIds(), serviceContext.getAssetTagNames(), serviceContext.getAssetLinkEntryIds(), serviceContext.getAssetPriority())[ FD ]
Line_16 $$ if (firstReminder < secondReminder) -->Line_19 $$ firstReminder = originalSecondReminder[ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_42 $$ calendarBooking.setTitleMap(titleMap, serviceContext.getLocale())[ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_59 $$ calendarBooking.setStatusDate(serviceContext.getModifiedDate(now))[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_62 $$ resourceLocalService.addModelResources(calendarBooking, serviceContext)[ CD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_25 $$ calendarBooking.setCompanyId(user.getCompanyId())[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_59 $$ calendarBooking.setStatusDate(serviceContext.getModifiedDate(now))[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_42 $$ calendarBooking.setTitleMap(titleMap, serviceContext.getLocale())[ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_64 $$ socialActivityLocalService.addActivity(userId, calendarBooking.getGroupId(), CalendarBooking.class.getName(), calendarBookingId, CalendarActivityKeys.ADD_CALENDAR_BOOKING, getExtraDataJSON(calendarBooking), 0)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_26 $$ calendarBooking.setUserId(user.getUserId())[ CD ]
Line_12 $$ if (allDay) -->Line_14 $$ endTimeJCalendar = JCalendarUtil.toLastHourJCalendar(endTimeJCalendar)[ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_37 $$ String vEventUid = (String) serviceContext.getAttribute("vEventUid")[ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_53 $$ calendarBooking.setExpandoBridgeAttributes(serviceContext)[ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_60 $$ calendarBookingPersistence.update(calendarBooking)[ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_28 $$ calendarBooking.setCreateDate(serviceContext.getCreateDate(now))[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)[ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_21 $$ Date now = new Date()[ CD ]
Line_37 $$ String vEventUid = (String) serviceContext.getAttribute("vEventUid")-->Line_38 $$ if (vEventUid == null) [ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_49 $$ calendarBooking.setFirstReminder(firstReminder)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_32 $$ if (parentCalendarBookingId > 0) [ CD ]
Line_16 $$ if (firstReminder < secondReminder) -->Line_17 $$ long originalSecondReminder = secondReminder[ CD ]
Line_6 $$ for (Locale locale : descriptionMap.keySet()) -->Line_8 $$ descriptionMap.put(locale, sanitizedDescription)[ FD ]
Line_10 $$ java.util.Calendar startTimeJCalendar = JCalendarUtil.getJCalendar(startTime)-->Line_13 $$ startTimeJCalendar = JCalendarUtil.toMidnightJCalendar(startTimeJCalendar)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_32 $$ if (parentCalendarBookingId > 0) [ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_41 $$ calendarBooking.setVEventUid(vEventUid)[ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_47 $$ calendarBooking.setAllDay(allDay)[ CD ]
Line_21 $$ Date now = new Date()-->Line_59 $$ calendarBooking.setStatusDate(serviceContext.getModifiedDate(now))[ FD ]
Line_17 $$ long originalSecondReminder = secondReminder-->Line_19 $$ firstReminder = originalSecondReminder[ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_55 $$ calendarBooking.setStatus(CalendarBookingWorkflowConstants.STATUS_DRAFT)[ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_45 $$ calendarBooking.setStartTime(startTimeJCalendar.getTimeInMillis())[ FD ]
Line_4 $$ Calendar calendar = calendarPersistence.findByPrimaryKey(calendarId)-->Line_24 $$ calendarBooking.setGroupId(calendar.getGroupId())[ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_62 $$ resourceLocalService.addModelResources(calendarBooking, serviceContext)[ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_64 $$ socialActivityLocalService.addActivity(userId, calendarBooking.getGroupId(), CalendarBooking.class.getName(), calendarBookingId, CalendarActivityKeys.ADD_CALENDAR_BOOKING, getExtraDataJSON(calendarBooking), 0)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_28 $$ calendarBooking.setCreateDate(serviceContext.getCreateDate(now))[ CD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_57 $$ calendarBooking.setStatus(CalendarBookingWorkflowConstants.STATUS_MASTER_PENDING)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_11 $$ java.util.Calendar endTimeJCalendar = JCalendarUtil.getJCalendar(endTime)[ FD ]
Line_19 $$ firstReminder = originalSecondReminder-->Line_49 $$ calendarBooking.setFirstReminder(firstReminder)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_66 $$ if (calendarBooking.isMasterBooking()) [ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_18 $$ secondReminder = firstReminder[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_31 $$ calendarBooking.setCalendarResourceId(calendar.getCalendarResourceId())[ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_28 $$ calendarBooking.setCreateDate(serviceContext.getCreateDate(now))[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_47 $$ calendarBooking.setAllDay(allDay)[ FD ]
Line_54 $$ if (calendarBooking.isMasterBooking()) -->Line_57 $$ calendarBooking.setStatus(CalendarBookingWorkflowConstants.STATUS_MASTER_PENDING)[ CD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_27 $$ calendarBooking.setUserName(user.getFullName())[ FD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_25 $$ calendarBooking.setCompanyId(user.getCompanyId())[ FD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_26 $$ calendarBooking.setUserId(user.getUserId())[ FD ]
Line_39 $$ vEventUid = PortalUUIDUtil.generate()-->Line_41 $$ calendarBooking.setVEventUid(vEventUid)[ FD ]
Line_5 $$ long calendarBookingId = counterLocalService.increment()-->Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_29 $$ calendarBooking.setModifiedDate(serviceContext.getModifiedDate(now))[ CD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_52 $$ calendarBooking.setSecondReminderType(secondReminderType)[ FD ]
Line_7 $$ String sanitizedDescription = SanitizerUtil.sanitize(calendar.getCompanyId(), calendar.getGroupId(), userId, CalendarBooking.class.getName(), calendarBookingId, ContentTypes.TEXT_HTML, Sanitizer.MODE_ALL, descriptionMap.get(locale), null)-->Line_8 $$ descriptionMap.put(locale, sanitizedDescription)[ FD ]
Line_38 $$ if (vEventUid == null) -->Line_39 $$ vEventUid = PortalUUIDUtil.generate()[ CD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_63 $$ updateAsset(userId, calendarBooking, serviceContext.getAssetCategoryIds(), serviceContext.getAssetTagNames(), serviceContext.getAssetLinkEntryIds(), serviceContext.getAssetPriority())[ FD ]
Line_66 $$ if (calendarBooking.isMasterBooking()) -->Line_67 $$ WorkflowHandlerRegistryUtil.startWorkflowInstance(calendarBooking.getCompanyId(), calendarBooking.getGroupId(), userId, CalendarBooking.class.getName(), calendarBooking.getCalendarBookingId(), calendarBooking, serviceContext)[ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_30 $$ calendarBooking.setCalendarId(calendarId)[ CD ]
Line_10 $$ java.util.Calendar startTimeJCalendar = JCalendarUtil.getJCalendar(startTime)-->Line_45 $$ calendarBooking.setStartTime(startTimeJCalendar.getTimeInMillis())[ FD ]
Line_14 $$ endTimeJCalendar = JCalendarUtil.toLastHourJCalendar(endTimeJCalendar)-->Line_46 $$ calendarBooking.setEndTime(endTimeJCalendar.getTimeInMillis())[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_44 $$ calendarBooking.setLocation(location)[ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_52 $$ calendarBooking.setSecondReminderType(secondReminderType)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_22 $$ validate(startTimeJCalendar, endTimeJCalendar, recurrence)[ CD ]
Line_21 $$ Date now = new Date()-->Line_29 $$ calendarBooking.setModifiedDate(serviceContext.getModifiedDate(now))[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_27 $$ calendarBooking.setUserName(user.getFullName())[ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_44 $$ calendarBooking.setLocation(location)[ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_50 $$ calendarBooking.setFirstReminderType(firstReminderType)[ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_31 $$ calendarBooking.setCalendarResourceId(calendar.getCalendarResourceId())[ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_44 $$ calendarBooking.setLocation(location)[ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_46 $$ calendarBooking.setEndTime(endTimeJCalendar.getTimeInMillis())[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_7 $$ String sanitizedDescription = SanitizerUtil.sanitize(calendar.getCompanyId(), calendar.getGroupId(), userId, CalendarBooking.class.getName(), calendarBookingId, ContentTypes.TEXT_HTML, Sanitizer.MODE_ALL, descriptionMap.get(locale), null)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_49 $$ calendarBooking.setFirstReminder(firstReminder)[ CD ]
Line_32 $$ if (parentCalendarBookingId > 0) -->Line_33 $$ calendarBooking.setParentCalendarBookingId(parentCalendarBookingId)[ CD ]
Line_4 $$ Calendar calendar = calendarPersistence.findByPrimaryKey(calendarId)-->Line_31 $$ calendarBooking.setCalendarResourceId(calendar.getCalendarResourceId())[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_54 $$ if (calendarBooking.isMasterBooking()) [ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_22 $$ validate(startTimeJCalendar, endTimeJCalendar, recurrence)[ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_47 $$ calendarBooking.setAllDay(allDay)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_19 $$ firstReminder = originalSecondReminder[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_8 $$ descriptionMap.put(locale, sanitizedDescription)[ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_54 $$ if (calendarBooking.isMasterBooking()) [ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_59 $$ calendarBooking.setStatusDate(serviceContext.getModifiedDate(now))[ CD ]
Line_4 $$ Calendar calendar = calendarPersistence.findByPrimaryKey(calendarId)-->Line_7 $$ String sanitizedDescription = SanitizerUtil.sanitize(calendar.getCompanyId(), calendar.getGroupId(), userId, CalendarBooking.class.getName(), calendarBookingId, ContentTypes.TEXT_HTML, Sanitizer.MODE_ALL, descriptionMap.get(locale), null)[ FD ]
Line_11 $$ java.util.Calendar endTimeJCalendar = JCalendarUtil.getJCalendar(endTime)-->Line_46 $$ calendarBooking.setEndTime(endTimeJCalendar.getTimeInMillis())[ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_67 $$ WorkflowHandlerRegistryUtil.startWorkflowInstance(calendarBooking.getCompanyId(), calendarBooking.getGroupId(), userId, CalendarBooking.class.getName(), calendarBooking.getCalendarBookingId(), calendarBooking, serviceContext)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_10 $$ java.util.Calendar startTimeJCalendar = JCalendarUtil.getJCalendar(startTime)[ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_37 $$ String vEventUid = (String) serviceContext.getAttribute("vEventUid")[ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_48 $$ calendarBooking.setRecurrence(recurrence)[ CD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_33 $$ calendarBooking.setParentCalendarBookingId(parentCalendarBookingId)[ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_61 $$ addChildCalendarBookings(calendarBooking, childCalendarIds, serviceContext)[ FD ]
Line_2 $$ public CalendarBooking addCalendarBooking(long userId, long calendarId, long[] childCalendarIds, long parentCalendarBookingId, Map<Locale, String> titleMap, Map<Locale, String> descriptionMap, String location, long startTime, long endTime, boolean allDay, String recurrence, long firstReminder, String firstReminderType, long secondReminder, String secondReminderType, ServiceContext serviceContext) throws PortalException -->Line_50 $$ calendarBooking.setFirstReminderType(firstReminderType)[ FD ]
Line_23 $$ CalendarBooking calendarBooking = calendarBookingPersistence.create(calendarBookingId)-->Line_43 $$ calendarBooking.setDescriptionMap(descriptionMap)[ FD ]
