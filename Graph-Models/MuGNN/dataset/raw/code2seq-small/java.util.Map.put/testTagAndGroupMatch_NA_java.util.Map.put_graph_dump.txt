Line_8 $$ DiscoveryNode node = new DiscoveryNode("name1", "id1", DummyTransportAddress.INSTANCE, attributes, Version.CURRENT)-->Line_21 $$ assertThat(filters.match(node), equalTo(false))[ FD ]
Line_3 $$ Settings settings = shuffleSettings(Settings.settingsBuilder().put("xxx.tag", "A").put("xxx.group", "B").build())-->Line_4 $$ DiscoveryNodeFilters filters = DiscoveryNodeFilters.buildFromSettings(AND, "xxx.", settings)[ FD ]
Line_2 $$ public void testTagAndGroupMatch() -->Line_17 $$ attributes.put("tag", "A")[ CD ]
Line_5 $$ Map<String, String> attributes = new HashMap()-->Line_11 $$ attributes.put("tag", "A")[ FD ]
Line_10 $$ attributes = new HashMap()-->Line_13 $$ attributes.put("name", "X")[ FD ]
Line_2 $$ public void testTagAndGroupMatch() -->Line_9 $$ assertThat(filters.match(node), equalTo(true))[ CD ]
Line_10 $$ attributes = new HashMap()-->Line_18 $$ attributes.put("group", "F")[ FD ]
Line_5 $$ Map<String, String> attributes = new HashMap()-->Line_16 $$ attributes = new HashMap()[ FD ]
Line_2 $$ public void testTagAndGroupMatch() -->Line_19 $$ attributes.put("name", "X")[ CD ]
Line_2 $$ public void testTagAndGroupMatch() -->Line_16 $$ attributes = new HashMap()[ CD ]
Line_2 $$ public void testTagAndGroupMatch() -->Line_7 $$ attributes.put("group", "B")[ CD ]
Line_5 $$ Map<String, String> attributes = new HashMap()-->Line_10 $$ attributes = new HashMap()[ FD ]
Line_2 $$ public void testTagAndGroupMatch() -->Line_5 $$ Map<String, String> attributes = new HashMap()[ CD ]
Line_5 $$ Map<String, String> attributes = new HashMap()-->Line_17 $$ attributes.put("tag", "A")[ FD ]
Line_4 $$ DiscoveryNodeFilters filters = DiscoveryNodeFilters.buildFromSettings(AND, "xxx.", settings)-->Line_21 $$ assertThat(filters.match(node), equalTo(false))[ FD ]
Line_5 $$ Map<String, String> attributes = new HashMap()-->Line_6 $$ attributes.put("tag", "A")[ FD ]
Line_2 $$ public void testTagAndGroupMatch() -->Line_15 $$ assertThat(filters.match(node), equalTo(true))[ CD ]
Line_4 $$ DiscoveryNodeFilters filters = DiscoveryNodeFilters.buildFromSettings(AND, "xxx.", settings)-->Line_9 $$ assertThat(filters.match(node), equalTo(true))[ FD ]
Line_2 $$ public void testTagAndGroupMatch() -->Line_21 $$ assertThat(filters.match(node), equalTo(false))[ CD ]
Line_8 $$ DiscoveryNode node = new DiscoveryNode("name1", "id1", DummyTransportAddress.INSTANCE, attributes, Version.CURRENT)-->Line_23 $$ assertThat(filters.match(node), equalTo(false))[ FD ]
Line_10 $$ attributes = new HashMap()-->Line_12 $$ attributes.put("group", "B")[ FD ]
Line_20 $$ node = new DiscoveryNode("name3", "id3", DummyTransportAddress.INSTANCE, attributes, Version.CURRENT)-->Line_23 $$ assertThat(filters.match(node), equalTo(false))[ FD ]
Line_2 $$ public void testTagAndGroupMatch() -->Line_23 $$ assertThat(filters.match(node), equalTo(false))[ CD ]
Line_2 $$ public void testTagAndGroupMatch() -->Line_20 $$ node = new DiscoveryNode("name3", "id3", DummyTransportAddress.INSTANCE, attributes, Version.CURRENT)[ CD ]
Line_2 $$ public void testTagAndGroupMatch() -->Line_14 $$ node = new DiscoveryNode("name2", "id2", DummyTransportAddress.INSTANCE, attributes, Version.CURRENT)[ CD ]
Line_14 $$ node = new DiscoveryNode("name2", "id2", DummyTransportAddress.INSTANCE, attributes, Version.CURRENT)-->Line_21 $$ assertThat(filters.match(node), equalTo(false))[ FD ]
Line_14 $$ node = new DiscoveryNode("name2", "id2", DummyTransportAddress.INSTANCE, attributes, Version.CURRENT)-->Line_23 $$ assertThat(filters.match(node), equalTo(false))[ FD ]
Line_2 $$ public void testTagAndGroupMatch() -->Line_4 $$ DiscoveryNodeFilters filters = DiscoveryNodeFilters.buildFromSettings(AND, "xxx.", settings)[ CD ]
Line_20 $$ node = new DiscoveryNode("name3", "id3", DummyTransportAddress.INSTANCE, attributes, Version.CURRENT)-->Line_21 $$ assertThat(filters.match(node), equalTo(false))[ FD ]
Line_22 $$ node = new DiscoveryNode("name4", "id4", DummyTransportAddress.INSTANCE, emptyMap(), Version.CURRENT)-->Line_23 $$ assertThat(filters.match(node), equalTo(false))[ FD ]
Line_8 $$ DiscoveryNode node = new DiscoveryNode("name1", "id1", DummyTransportAddress.INSTANCE, attributes, Version.CURRENT)-->Line_9 $$ assertThat(filters.match(node), equalTo(true))[ FD ]
Line_8 $$ DiscoveryNode node = new DiscoveryNode("name1", "id1", DummyTransportAddress.INSTANCE, attributes, Version.CURRENT)-->Line_14 $$ node = new DiscoveryNode("name2", "id2", DummyTransportAddress.INSTANCE, attributes, Version.CURRENT)[ FD ]
Line_2 $$ public void testTagAndGroupMatch() -->Line_13 $$ attributes.put("name", "X")[ CD ]
Line_10 $$ attributes = new HashMap()-->Line_17 $$ attributes.put("tag", "A")[ FD ]
Line_2 $$ public void testTagAndGroupMatch() -->Line_8 $$ DiscoveryNode node = new DiscoveryNode("name1", "id1", DummyTransportAddress.INSTANCE, attributes, Version.CURRENT)[ CD ]
Line_20 $$ node = new DiscoveryNode("name3", "id3", DummyTransportAddress.INSTANCE, attributes, Version.CURRENT)-->Line_22 $$ node = new DiscoveryNode("name4", "id4", DummyTransportAddress.INSTANCE, emptyMap(), Version.CURRENT)[ FD ]
Line_5 $$ Map<String, String> attributes = new HashMap()-->Line_13 $$ attributes.put("name", "X")[ FD ]
Line_2 $$ public void testTagAndGroupMatch() -->Line_22 $$ node = new DiscoveryNode("name4", "id4", DummyTransportAddress.INSTANCE, emptyMap(), Version.CURRENT)[ CD ]
Line_10 $$ attributes = new HashMap()-->Line_11 $$ attributes.put("tag", "A")[ FD ]
Line_4 $$ DiscoveryNodeFilters filters = DiscoveryNodeFilters.buildFromSettings(AND, "xxx.", settings)-->Line_15 $$ assertThat(filters.match(node), equalTo(true))[ FD ]
Line_5 $$ Map<String, String> attributes = new HashMap()-->Line_19 $$ attributes.put("name", "X")[ FD ]
Line_14 $$ node = new DiscoveryNode("name2", "id2", DummyTransportAddress.INSTANCE, attributes, Version.CURRENT)-->Line_20 $$ node = new DiscoveryNode("name3", "id3", DummyTransportAddress.INSTANCE, attributes, Version.CURRENT)[ FD ]
Line_2 $$ public void testTagAndGroupMatch() -->Line_3 $$ Settings settings = shuffleSettings(Settings.settingsBuilder().put("xxx.tag", "A").put("xxx.group", "B").build())[ CD ]
Line_2 $$ public void testTagAndGroupMatch() -->Line_18 $$ attributes.put("group", "F")[ CD ]
Line_8 $$ DiscoveryNode node = new DiscoveryNode("name1", "id1", DummyTransportAddress.INSTANCE, attributes, Version.CURRENT)-->Line_22 $$ node = new DiscoveryNode("name4", "id4", DummyTransportAddress.INSTANCE, emptyMap(), Version.CURRENT)[ FD ]
Line_2 $$ public void testTagAndGroupMatch() -->Line_11 $$ attributes.put("tag", "A")[ CD ]
Line_10 $$ attributes = new HashMap()-->Line_16 $$ attributes = new HashMap()[ FD ]
Line_5 $$ Map<String, String> attributes = new HashMap()-->Line_12 $$ attributes.put("group", "B")[ FD ]
Line_16 $$ attributes = new HashMap()-->Line_17 $$ attributes.put("tag", "A")[ FD ]
Line_10 $$ attributes = new HashMap()-->Line_19 $$ attributes.put("name", "X")[ FD ]
Line_16 $$ attributes = new HashMap()-->Line_19 $$ attributes.put("name", "X")[ FD ]
Line_4 $$ DiscoveryNodeFilters filters = DiscoveryNodeFilters.buildFromSettings(AND, "xxx.", settings)-->Line_23 $$ assertThat(filters.match(node), equalTo(false))[ FD ]
Line_5 $$ Map<String, String> attributes = new HashMap()-->Line_7 $$ attributes.put("group", "B")[ FD ]
Line_8 $$ DiscoveryNode node = new DiscoveryNode("name1", "id1", DummyTransportAddress.INSTANCE, attributes, Version.CURRENT)-->Line_15 $$ assertThat(filters.match(node), equalTo(true))[ FD ]
Line_2 $$ public void testTagAndGroupMatch() -->Line_10 $$ attributes = new HashMap()[ CD ]
Line_14 $$ node = new DiscoveryNode("name2", "id2", DummyTransportAddress.INSTANCE, attributes, Version.CURRENT)-->Line_15 $$ assertThat(filters.match(node), equalTo(true))[ FD ]
Line_2 $$ public void testTagAndGroupMatch() -->Line_6 $$ attributes.put("tag", "A")[ CD ]
Line_16 $$ attributes = new HashMap()-->Line_18 $$ attributes.put("group", "F")[ FD ]
Line_8 $$ DiscoveryNode node = new DiscoveryNode("name1", "id1", DummyTransportAddress.INSTANCE, attributes, Version.CURRENT)-->Line_20 $$ node = new DiscoveryNode("name3", "id3", DummyTransportAddress.INSTANCE, attributes, Version.CURRENT)[ FD ]
Line_2 $$ public void testTagAndGroupMatch() -->Line_12 $$ attributes.put("group", "B")[ CD ]
Line_5 $$ Map<String, String> attributes = new HashMap()-->Line_18 $$ attributes.put("group", "F")[ FD ]
Line_14 $$ node = new DiscoveryNode("name2", "id2", DummyTransportAddress.INSTANCE, attributes, Version.CURRENT)-->Line_22 $$ node = new DiscoveryNode("name4", "id4", DummyTransportAddress.INSTANCE, emptyMap(), Version.CURRENT)[ FD ]
