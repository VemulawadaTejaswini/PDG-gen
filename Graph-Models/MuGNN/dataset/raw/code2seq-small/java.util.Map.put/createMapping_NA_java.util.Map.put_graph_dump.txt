Line_8 $$ final List<DefaultMutableTreeNode> nodes-->Line_16 $$ nodes.add(node)[ FD ]
Line_2 $$ private void createMapping(@NotNull Object element, DefaultMutableTreeNode node) -->Line_3 $$ element = TreeAnchorizer.getService().createAnchor(element)[ CD ]
Line_10 $$ nodes = new ArrayList<DefaultMutableTreeNode>()-->Line_14 $$ nodes = (List<DefaultMutableTreeNode>) value[ FD ]
Line_2 $$ private void createMapping(@NotNull Object element, DefaultMutableTreeNode node) -->Line_5 $$ myElementToNodeMap.put(element, node)[ FD ]
Line_4 $$ if (!myElementToNodeMap.containsKey(element)) -->Line_8 $$ final List<DefaultMutableTreeNode> nodes[ CD ]
Line_7 $$ final Object value = myElementToNodeMap.get(element)-->Line_9 $$ if (value instanceof DefaultMutableTreeNode) [ FD ]
Line_2 $$ private void createMapping(@NotNull Object element, DefaultMutableTreeNode node) -->Line_4 $$ if (!myElementToNodeMap.containsKey(element)) [ CD ]
Line_8 $$ final List<DefaultMutableTreeNode> nodes-->Line_14 $$ nodes = (List<DefaultMutableTreeNode>) value[ FD ]
Line_2 $$ private void createMapping(@NotNull Object element, DefaultMutableTreeNode node) -->Line_3 $$ element = TreeAnchorizer.getService().createAnchor(element)[ FD ]
Line_8 $$ final List<DefaultMutableTreeNode> nodes-->Line_12 $$ myElementToNodeMap.put(element, nodes)[ FD ]
Line_9 $$ if (value instanceof DefaultMutableTreeNode) -->Line_10 $$ nodes = new ArrayList<DefaultMutableTreeNode>()[ CD ]
Line_2 $$ private void createMapping(@NotNull Object element, DefaultMutableTreeNode node) -->Line_16 $$ nodes.add(node)[ FD ]
Line_2 $$ private void createMapping(@NotNull Object element, DefaultMutableTreeNode node) -->Line_7 $$ final Object value = myElementToNodeMap.get(element)[ FD ]
Line_2 $$ private void createMapping(@NotNull Object element, DefaultMutableTreeNode node) -->Line_12 $$ myElementToNodeMap.put(element, nodes)[ FD ]
Line_9 $$ if (value instanceof DefaultMutableTreeNode) -->Line_12 $$ myElementToNodeMap.put(element, nodes)[ CD ]
Line_4 $$ if (!myElementToNodeMap.containsKey(element)) -->Line_7 $$ final Object value = myElementToNodeMap.get(element)[ CD ]
Line_8 $$ final List<DefaultMutableTreeNode> nodes-->Line_11 $$ nodes.add((DefaultMutableTreeNode) value)[ FD ]
Line_10 $$ nodes = new ArrayList<DefaultMutableTreeNode>()-->Line_11 $$ nodes.add((DefaultMutableTreeNode) value)[ FD ]
Line_14 $$ nodes = (List<DefaultMutableTreeNode>) value-->Line_16 $$ nodes.add(node)[ FD ]
Line_4 $$ if (!myElementToNodeMap.containsKey(element)) -->Line_9 $$ if (value instanceof DefaultMutableTreeNode) [ CD ]
Line_4 $$ if (!myElementToNodeMap.containsKey(element)) -->Line_5 $$ myElementToNodeMap.put(element, node)[ CD ]
Line_9 $$ if (value instanceof DefaultMutableTreeNode) -->Line_14 $$ nodes = (List<DefaultMutableTreeNode>) value[ CD ]
Line_2 $$ private void createMapping(@NotNull Object element, DefaultMutableTreeNode node) -->Line_4 $$ if (!myElementToNodeMap.containsKey(element)) [ FD ]
Line_9 $$ if (value instanceof DefaultMutableTreeNode) -->Line_11 $$ nodes.add((DefaultMutableTreeNode) value)[ CD ]
Line_10 $$ nodes = new ArrayList<DefaultMutableTreeNode>()-->Line_16 $$ nodes.add(node)[ FD ]
Line_8 $$ final List<DefaultMutableTreeNode> nodes-->Line_10 $$ nodes = new ArrayList<DefaultMutableTreeNode>()[ FD ]
Line_10 $$ nodes = new ArrayList<DefaultMutableTreeNode>()-->Line_12 $$ myElementToNodeMap.put(element, nodes)[ FD ]
Line_4 $$ if (!myElementToNodeMap.containsKey(element)) -->Line_16 $$ nodes.add(node)[ CD ]
