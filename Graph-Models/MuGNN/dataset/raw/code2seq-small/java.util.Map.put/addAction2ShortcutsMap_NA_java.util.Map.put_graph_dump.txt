Line_11 $$ listOfIds = new ArrayList<String>()-->Line_14 $$ if (!listOfIds.contains(actionId)) [ FD ]
Line_2 $$ private <T extends Shortcut> void addAction2ShortcutsMap(final String actionId, final Map<T, List<String>> strokesMap, final Class<T> shortcutClass) -->Line_14 $$ if (!listOfIds.contains(actionId)) [ FD ]
Line_2 $$ private <T extends Shortcut> void addAction2ShortcutsMap(final String actionId, final Map<T, List<String>> strokesMap, final Class<T> shortcutClass) -->Line_3 $$ OrderedSet<Shortcut> listOfShortcuts = _getShortcuts(actionId)[ CD ]
Line_9 $$ List<String> listOfIds = strokesMap.get(t)-->Line_15 $$ listOfIds.add(actionId)[ FD ]
Line_9 $$ List<String> listOfIds = strokesMap.get(t)-->Line_11 $$ listOfIds = new ArrayList<String>()[ FD ]
Line_8 $$ T t = (T) shortcut-->Line_9 $$ List<String> listOfIds = strokesMap.get(t)[ FD ]
Line_2 $$ private <T extends Shortcut> void addAction2ShortcutsMap(final String actionId, final Map<T, List<String>> strokesMap, final Class<T> shortcutClass) -->Line_9 $$ List<String> listOfIds = strokesMap.get(t)[ FD ]
Line_10 $$ if (listOfIds == null) -->Line_11 $$ listOfIds = new ArrayList<String>()[ CD ]
Line_11 $$ listOfIds = new ArrayList<String>()-->Line_15 $$ listOfIds.add(actionId)[ FD ]
Line_9 $$ List<String> listOfIds = strokesMap.get(t)-->Line_12 $$ strokesMap.put(t, listOfIds)[ FD ]
Line_14 $$ if (!listOfIds.contains(actionId)) -->Line_15 $$ listOfIds.add(actionId)[ CD ]
Line_4 $$ for (Shortcut shortcut : listOfShortcuts) -->Line_5 $$ if (!shortcutClass.isAssignableFrom(shortcut.getClass())) [ FD ]
Line_2 $$ private <T extends Shortcut> void addAction2ShortcutsMap(final String actionId, final Map<T, List<String>> strokesMap, final Class<T> shortcutClass) -->Line_3 $$ OrderedSet<Shortcut> listOfShortcuts = _getShortcuts(actionId)[ FD ]
Line_2 $$ private <T extends Shortcut> void addAction2ShortcutsMap(final String actionId, final Map<T, List<String>> strokesMap, final Class<T> shortcutClass) -->Line_5 $$ if (!shortcutClass.isAssignableFrom(shortcut.getClass())) [ FD ]
Line_9 $$ List<String> listOfIds = strokesMap.get(t)-->Line_10 $$ if (listOfIds == null) [ FD ]
Line_2 $$ private <T extends Shortcut> void addAction2ShortcutsMap(final String actionId, final Map<T, List<String>> strokesMap, final Class<T> shortcutClass) -->Line_12 $$ strokesMap.put(t, listOfIds)[ FD ]
Line_8 $$ T t = (T) shortcut-->Line_12 $$ strokesMap.put(t, listOfIds)[ FD ]
Line_11 $$ listOfIds = new ArrayList<String>()-->Line_12 $$ strokesMap.put(t, listOfIds)[ FD ]
Line_9 $$ List<String> listOfIds = strokesMap.get(t)-->Line_14 $$ if (!listOfIds.contains(actionId)) [ FD ]
Line_10 $$ if (listOfIds == null) -->Line_12 $$ strokesMap.put(t, listOfIds)[ CD ]
Line_2 $$ private <T extends Shortcut> void addAction2ShortcutsMap(final String actionId, final Map<T, List<String>> strokesMap, final Class<T> shortcutClass) -->Line_15 $$ listOfIds.add(actionId)[ FD ]
