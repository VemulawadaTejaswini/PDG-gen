Line_11 $$ double doubleValue = ((Number) value).doubleValue()-->Line_13 $$ doubleValue = +0.0[ FD ]
Line_5 $$ if (value == Boolean.FALSE)-->Line_6 $$ return dfaFalse[ CD ]
Line_2 $$ public DfaConstValue createFromValue(Object value, final PsiType type, @Nullable PsiVariable constant) -->Line_21 $$ return instance[ CD ]
Line_2 $$ public DfaConstValue createFromValue(Object value, final PsiType type, @Nullable PsiVariable constant) -->Line_16 $$ DfaConstValue instance = myValues.get(value)[ FD ]
Line_2 $$ public DfaConstValue createFromValue(Object value, final PsiType type, @Nullable PsiVariable constant) -->Line_8 $$ value = TypeConversionUtil.computeCastTo(value, PsiType.LONG)[ FD ]
Line_2 $$ public DfaConstValue createFromValue(Object value, final PsiType type, @Nullable PsiVariable constant) -->Line_19 $$ myValues.put(value, instance)[ FD ]
Line_2 $$ public DfaConstValue createFromValue(Object value, final PsiType type, @Nullable PsiVariable constant) -->Line_3 $$ if (value == Boolean.TRUE)[ FD ]
Line_2 $$ public DfaConstValue createFromValue(Object value, final PsiType type, @Nullable PsiVariable constant) -->Line_3 $$ if (value == Boolean.TRUE)[ CD ]
Line_17 $$ if (instance == null) -->Line_19 $$ myValues.put(value, instance)[ CD ]
Line_18 $$ instance = new DfaConstValue(value, myFactory, constant)-->Line_19 $$ myValues.put(value, instance)[ FD ]
Line_2 $$ public DfaConstValue createFromValue(Object value, final PsiType type, @Nullable PsiVariable constant) -->Line_7 $$ if (TypeConversionUtil.isNumericType(type) && !TypeConversionUtil.isFloatOrDoubleType(type)) [ FD ]
Line_2 $$ public DfaConstValue createFromValue(Object value, final PsiType type, @Nullable PsiVariable constant) -->Line_5 $$ if (value == Boolean.FALSE)[ CD ]
Line_8 $$ value = TypeConversionUtil.computeCastTo(value, PsiType.LONG)-->Line_19 $$ myValues.put(value, instance)[ FD ]
Line_8 $$ value = TypeConversionUtil.computeCastTo(value, PsiType.LONG)-->Line_14 $$ value = new Double(doubleValue)[ FD ]
Line_14 $$ value = new Double(doubleValue)-->Line_19 $$ myValues.put(value, instance)[ FD ]
Line_2 $$ public DfaConstValue createFromValue(Object value, final PsiType type, @Nullable PsiVariable constant) -->Line_10 $$ if (value instanceof Double || value instanceof Float) [ CD ]
Line_10 $$ if (value instanceof Double || value instanceof Float) -->Line_11 $$ double doubleValue = ((Number) value).doubleValue()[ CD ]
Line_2 $$ public DfaConstValue createFromValue(Object value, final PsiType type, @Nullable PsiVariable constant) -->Line_16 $$ DfaConstValue instance = myValues.get(value)[ CD ]
Line_16 $$ DfaConstValue instance = myValues.get(value)-->Line_18 $$ instance = new DfaConstValue(value, myFactory, constant)[ FD ]
Line_11 $$ double doubleValue = ((Number) value).doubleValue()-->Line_12 $$ if (doubleValue == -0.0)[ FD ]
Line_2 $$ public DfaConstValue createFromValue(Object value, final PsiType type, @Nullable PsiVariable constant) -->Line_17 $$ if (instance == null) [ CD ]
Line_14 $$ value = new Double(doubleValue)-->Line_16 $$ DfaConstValue instance = myValues.get(value)[ FD ]
Line_16 $$ DfaConstValue instance = myValues.get(value)-->Line_17 $$ if (instance == null) [ FD ]
Line_10 $$ if (value instanceof Double || value instanceof Float) -->Line_12 $$ if (doubleValue == -0.0)[ CD ]
Line_2 $$ public DfaConstValue createFromValue(Object value, final PsiType type, @Nullable PsiVariable constant) -->Line_14 $$ value = new Double(doubleValue)[ FD ]
Line_3 $$ if (value == Boolean.TRUE)-->Line_4 $$ return dfaTrue[ CD ]
Line_7 $$ if (TypeConversionUtil.isNumericType(type) && !TypeConversionUtil.isFloatOrDoubleType(type)) -->Line_8 $$ value = TypeConversionUtil.computeCastTo(value, PsiType.LONG)[ CD ]
Line_10 $$ if (value instanceof Double || value instanceof Float) -->Line_14 $$ value = new Double(doubleValue)[ CD ]
Line_12 $$ if (doubleValue == -0.0)-->Line_13 $$ doubleValue = +0.0[ CD ]
Line_17 $$ if (instance == null) -->Line_18 $$ instance = new DfaConstValue(value, myFactory, constant)[ CD ]
Line_2 $$ public DfaConstValue createFromValue(Object value, final PsiType type, @Nullable PsiVariable constant) -->Line_5 $$ if (value == Boolean.FALSE)[ FD ]
Line_8 $$ value = TypeConversionUtil.computeCastTo(value, PsiType.LONG)-->Line_16 $$ DfaConstValue instance = myValues.get(value)[ FD ]
Line_2 $$ public DfaConstValue createFromValue(Object value, final PsiType type, @Nullable PsiVariable constant) -->Line_7 $$ if (TypeConversionUtil.isNumericType(type) && !TypeConversionUtil.isFloatOrDoubleType(type)) [ CD ]
Line_16 $$ DfaConstValue instance = myValues.get(value)-->Line_19 $$ myValues.put(value, instance)[ FD ]
