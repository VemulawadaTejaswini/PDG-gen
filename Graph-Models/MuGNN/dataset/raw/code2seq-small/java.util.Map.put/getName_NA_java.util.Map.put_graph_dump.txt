Line_11 $$ if (LOG.isDebugEnabled()) -->Line_13 $$ LOG.debug("Got " + type + " " + name + " for ID " + id + " from the native implementation")[ CD ]
Line_2 $$ private static String getName(IdCache domain, int id) throws IOException -->Line_6 $$ long now = System.currentTimeMillis()[ CD ]
Line_5 $$ CachedName cachedName = idNameCache.get(id)-->Line_16 $$ idNameCache.put(id, cachedName)[ FD ]
Line_2 $$ private static String getName(IdCache domain, int id) throws IOException -->Line_7 $$ if (cachedName != null && (cachedName.timestamp + cacheTimeout) > now) [ CD ]
Line_2 $$ private static String getName(IdCache domain, int id) throws IOException -->Line_4 $$ String name[ CD ]
Line_4 $$ String name-->Line_8 $$ name = cachedName.name[ FD ]
Line_7 $$ if (cachedName != null && (cachedName.timestamp + cacheTimeout) > now) -->Line_8 $$ name = cachedName.name[ CD ]
Line_2 $$ private static String getName(IdCache domain, int id) throws IOException -->Line_5 $$ CachedName cachedName = idNameCache.get(id)[ FD ]
Line_8 $$ name = cachedName.name-->Line_10 $$ name = (domain == IdCache.USER) ? getUserName(id) : getGroupName(id)[ FD ]
Line_7 $$ if (cachedName != null && (cachedName.timestamp + cacheTimeout) > now) -->Line_10 $$ name = (domain == IdCache.USER) ? getUserName(id) : getGroupName(id)[ CD ]
Line_2 $$ private static String getName(IdCache domain, int id) throws IOException -->Line_5 $$ CachedName cachedName = idNameCache.get(id)[ CD ]
Line_7 $$ if (cachedName != null && (cachedName.timestamp + cacheTimeout) > now) -->Line_11 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_3 $$ Map<Integer, CachedName> idNameCache = (domain == IdCache.USER) ? USER_ID_NAME_CACHE : GROUP_ID_NAME_CACHE-->Line_16 $$ idNameCache.put(id, cachedName)[ FD ]
Line_5 $$ CachedName cachedName = idNameCache.get(id)-->Line_15 $$ cachedName = new CachedName(name, now)[ FD ]
Line_15 $$ cachedName = new CachedName(name, now)-->Line_16 $$ idNameCache.put(id, cachedName)[ FD ]
Line_4 $$ String name-->Line_10 $$ name = (domain == IdCache.USER) ? getUserName(id) : getGroupName(id)[ FD ]
Line_3 $$ Map<Integer, CachedName> idNameCache = (domain == IdCache.USER) ? USER_ID_NAME_CACHE : GROUP_ID_NAME_CACHE-->Line_5 $$ CachedName cachedName = idNameCache.get(id)[ FD ]
Line_7 $$ if (cachedName != null && (cachedName.timestamp + cacheTimeout) > now) -->Line_16 $$ idNameCache.put(id, cachedName)[ CD ]
Line_2 $$ private static String getName(IdCache domain, int id) throws IOException -->Line_18 $$ return name[ CD ]
Line_2 $$ private static String getName(IdCache domain, int id) throws IOException -->Line_16 $$ idNameCache.put(id, cachedName)[ FD ]
Line_7 $$ if (cachedName != null && (cachedName.timestamp + cacheTimeout) > now) -->Line_15 $$ cachedName = new CachedName(name, now)[ CD ]
Line_2 $$ private static String getName(IdCache domain, int id) throws IOException -->Line_10 $$ name = (domain == IdCache.USER) ? getUserName(id) : getGroupName(id)[ FD ]
Line_2 $$ private static String getName(IdCache domain, int id) throws IOException -->Line_3 $$ Map<Integer, CachedName> idNameCache = (domain == IdCache.USER) ? USER_ID_NAME_CACHE : GROUP_ID_NAME_CACHE[ CD ]
Line_11 $$ if (LOG.isDebugEnabled()) -->Line_12 $$ String type = (domain == IdCache.USER) ? "UserName" : "GroupName"[ CD ]
