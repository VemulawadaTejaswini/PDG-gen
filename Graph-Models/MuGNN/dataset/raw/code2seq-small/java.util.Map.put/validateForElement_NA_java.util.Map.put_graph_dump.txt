Line_4 $$ for (String neededAttribute : neededAttributes) -->Line_5 $$ hasNeededAttributes.put(neededAttribute, false)[ FD ]
Line_3 $$ Map<String, Boolean> hasNeededAttributes = new HashMap()-->Line_15 $$ hasNeededAttributes.put(attributeName, true)[ FD ]
Line_14 $$ if (hasNeededAttributes.containsKey(attributeName)) -->Line_15 $$ hasNeededAttributes.put(attributeName, true)[ CD ]
Line_11 $$ if (!_allowedNullAttributes.contains(attributeName) && Validator.isNull(attributeValue)) -->Line_12 $$ throwValidationException(1006, fileName, forElement, attributeName)[ CD ]
Line_2 $$ protected void validateForElement(String fileName, Element forElement, String[] neededAttributes, String[] allowedBlockChildElementNames, String[] allowedExecuteAttributeNames, String[] allowedExecuteChildElementNames, String[] allowedIfConditionElementNames) -->Line_26 $$ validateBlockElement(fileName, forElement, allowedBlockChildElementNames, allowedExecuteAttributeNames, allowedExecuteChildElementNames, allowedIfConditionElementNames)[ FD ]
Line_2 $$ protected void validateForElement(String fileName, Element forElement, String[] neededAttributes, String[] allowedBlockChildElementNames, String[] allowedExecuteAttributeNames, String[] allowedExecuteChildElementNames, String[] allowedIfConditionElementNames) -->Line_18 $$ throwValidationException(1005, fileName, forElement, attributeName)[ FD ]
Line_9 $$ String attributeName = attribute.getName()-->Line_14 $$ if (hasNeededAttributes.containsKey(attributeName)) [ FD ]
Line_9 $$ String attributeName = attribute.getName()-->Line_15 $$ hasNeededAttributes.put(attributeName, true)[ FD ]
Line_8 $$ for (Attribute attribute : attributes) -->Line_10 $$ String attributeValue = attribute.getValue()[ FD ]
Line_3 $$ Map<String, Boolean> hasNeededAttributes = new HashMap()-->Line_17 $$ if (!attributeName.equals("line-number") && !hasNeededAttributes.containsKey(attributeName)) [ FD ]
Line_10 $$ String attributeValue = attribute.getValue()-->Line_11 $$ if (!_allowedNullAttributes.contains(attributeName) && Validator.isNull(attributeValue)) [ FD ]
Line_22 $$ if (!hasNeededAttributes.get(neededAttribute)) -->Line_23 $$ throwValidationException(1004, fileName, forElement, neededAttributes)[ CD ]
Line_3 $$ Map<String, Boolean> hasNeededAttributes = new HashMap()-->Line_14 $$ if (hasNeededAttributes.containsKey(attributeName)) [ FD ]
Line_3 $$ Map<String, Boolean> hasNeededAttributes = new HashMap()-->Line_22 $$ if (!hasNeededAttributes.get(neededAttribute)) [ FD ]
Line_9 $$ String attributeName = attribute.getName()-->Line_11 $$ if (!_allowedNullAttributes.contains(attributeName) && Validator.isNull(attributeValue)) [ FD ]
Line_9 $$ String attributeName = attribute.getName()-->Line_18 $$ throwValidationException(1005, fileName, forElement, attributeName)[ FD ]
Line_17 $$ if (!attributeName.equals("line-number") && !hasNeededAttributes.containsKey(attributeName)) -->Line_18 $$ throwValidationException(1005, fileName, forElement, attributeName)[ CD ]
Line_4 $$ for (String neededAttribute : neededAttributes) -->Line_22 $$ if (!hasNeededAttributes.get(neededAttribute)) [ FD ]
Line_9 $$ String attributeName = attribute.getName()-->Line_12 $$ throwValidationException(1006, fileName, forElement, attributeName)[ FD ]
Line_2 $$ protected void validateForElement(String fileName, Element forElement, String[] neededAttributes, String[] allowedBlockChildElementNames, String[] allowedExecuteAttributeNames, String[] allowedExecuteChildElementNames, String[] allowedIfConditionElementNames) -->Line_3 $$ Map<String, Boolean> hasNeededAttributes = new HashMap()[ CD ]
Line_3 $$ Map<String, Boolean> hasNeededAttributes = new HashMap()-->Line_5 $$ hasNeededAttributes.put(neededAttribute, false)[ FD ]
Line_2 $$ protected void validateForElement(String fileName, Element forElement, String[] neededAttributes, String[] allowedBlockChildElementNames, String[] allowedExecuteAttributeNames, String[] allowedExecuteChildElementNames, String[] allowedIfConditionElementNames) -->Line_23 $$ throwValidationException(1004, fileName, forElement, neededAttributes)[ FD ]
Line_2 $$ protected void validateForElement(String fileName, Element forElement, String[] neededAttributes, String[] allowedBlockChildElementNames, String[] allowedExecuteAttributeNames, String[] allowedExecuteChildElementNames, String[] allowedIfConditionElementNames) -->Line_26 $$ validateBlockElement(fileName, forElement, allowedBlockChildElementNames, allowedExecuteAttributeNames, allowedExecuteChildElementNames, allowedIfConditionElementNames)[ CD ]
Line_2 $$ protected void validateForElement(String fileName, Element forElement, String[] neededAttributes, String[] allowedBlockChildElementNames, String[] allowedExecuteAttributeNames, String[] allowedExecuteChildElementNames, String[] allowedIfConditionElementNames) -->Line_7 $$ List<Attribute> attributes = forElement.attributes()[ CD ]
Line_9 $$ String attributeName = attribute.getName()-->Line_17 $$ if (!attributeName.equals("line-number") && !hasNeededAttributes.containsKey(attributeName)) [ FD ]
Line_2 $$ protected void validateForElement(String fileName, Element forElement, String[] neededAttributes, String[] allowedBlockChildElementNames, String[] allowedExecuteAttributeNames, String[] allowedExecuteChildElementNames, String[] allowedIfConditionElementNames) -->Line_12 $$ throwValidationException(1006, fileName, forElement, attributeName)[ FD ]
Line_8 $$ for (Attribute attribute : attributes) -->Line_9 $$ String attributeName = attribute.getName()[ FD ]
Line_2 $$ protected void validateForElement(String fileName, Element forElement, String[] neededAttributes, String[] allowedBlockChildElementNames, String[] allowedExecuteAttributeNames, String[] allowedExecuteChildElementNames, String[] allowedIfConditionElementNames) -->Line_7 $$ List<Attribute> attributes = forElement.attributes()[ FD ]
