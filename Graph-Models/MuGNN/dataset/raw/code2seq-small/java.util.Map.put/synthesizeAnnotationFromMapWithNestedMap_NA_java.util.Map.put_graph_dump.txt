Line_2 $$ public void synthesizeAnnotationFromMapWithNestedMap() throws Exception -->Line_3 $$ ComponentScanSingleFilter componentScan = ComponentScanSingleFilterClass.class.getAnnotation(ComponentScanSingleFilter.class)[ CD ]
Line_3 $$ ComponentScanSingleFilter componentScan = ComponentScanSingleFilterClass.class.getAnnotation(ComponentScanSingleFilter.class)-->Line_5 $$ assertEquals("value from ComponentScan: ", "*Foo", componentScan.value().pattern())[ FD ]
Line_2 $$ public void synthesizeAnnotationFromMapWithNestedMap() throws Exception -->Line_5 $$ assertEquals("value from ComponentScan: ", "*Foo", componentScan.value().pattern())[ CD ]
Line_2 $$ public void synthesizeAnnotationFromMapWithNestedMap() throws Exception -->Line_11 $$ assertEquals("*Foo", filterMap.get("pattern"))[ CD ]
Line_6 $$ AnnotationAttributes attributes = getAnnotationAttributes(ComponentScanSingleFilterClass.class, componentScan, false, true)-->Line_8 $$ assertEquals(ComponentScanSingleFilter.class, attributes.annotationType())[ FD ]
Line_2 $$ public void synthesizeAnnotationFromMapWithNestedMap() throws Exception -->Line_14 $$ ComponentScanSingleFilter synthesizedComponentScan = synthesizeAnnotation(attributes, ComponentScanSingleFilter.class, ComponentScanSingleFilterClass.class)[ CD ]
Line_6 $$ AnnotationAttributes attributes = getAnnotationAttributes(ComponentScanSingleFilterClass.class, componentScan, false, true)-->Line_7 $$ assertNotNull(attributes)[ FD ]
Line_2 $$ public void synthesizeAnnotationFromMapWithNestedMap() throws Exception -->Line_6 $$ AnnotationAttributes attributes = getAnnotationAttributes(ComponentScanSingleFilterClass.class, componentScan, false, true)[ CD ]
Line_2 $$ public void synthesizeAnnotationFromMapWithNestedMap() throws Exception -->Line_13 $$ filterMap.put("enigma", 42)[ CD ]
Line_9 $$ Map<String, Object> filterMap = (Map<String, Object>) attributes.get("value")-->Line_10 $$ assertNotNull(filterMap)[ FD ]
Line_3 $$ ComponentScanSingleFilter componentScan = ComponentScanSingleFilterClass.class.getAnnotation(ComponentScanSingleFilter.class)-->Line_16 $$ assertNotSame(componentScan, synthesizedComponentScan)[ FD ]
Line_2 $$ public void synthesizeAnnotationFromMapWithNestedMap() throws Exception -->Line_12 $$ filterMap.put("pattern", "newFoo")[ CD ]
Line_14 $$ ComponentScanSingleFilter synthesizedComponentScan = synthesizeAnnotation(attributes, ComponentScanSingleFilter.class, ComponentScanSingleFilterClass.class)-->Line_15 $$ assertNotNull(synthesizedComponentScan)[ FD ]
Line_14 $$ ComponentScanSingleFilter synthesizedComponentScan = synthesizeAnnotation(attributes, ComponentScanSingleFilter.class, ComponentScanSingleFilterClass.class)-->Line_16 $$ assertNotSame(componentScan, synthesizedComponentScan)[ FD ]
Line_9 $$ Map<String, Object> filterMap = (Map<String, Object>) attributes.get("value")-->Line_11 $$ assertEquals("*Foo", filterMap.get("pattern"))[ FD ]
Line_2 $$ public void synthesizeAnnotationFromMapWithNestedMap() throws Exception -->Line_16 $$ assertNotSame(componentScan, synthesizedComponentScan)[ CD ]
Line_2 $$ public void synthesizeAnnotationFromMapWithNestedMap() throws Exception -->Line_17 $$ assertEquals("value from synthesized ComponentScan: ", "newFoo", synthesizedComponentScan.value().pattern())[ CD ]
Line_3 $$ ComponentScanSingleFilter componentScan = ComponentScanSingleFilterClass.class.getAnnotation(ComponentScanSingleFilter.class)-->Line_6 $$ AnnotationAttributes attributes = getAnnotationAttributes(ComponentScanSingleFilterClass.class, componentScan, false, true)[ FD ]
Line_9 $$ Map<String, Object> filterMap = (Map<String, Object>) attributes.get("value")-->Line_13 $$ filterMap.put("enigma", 42)[ FD ]
Line_2 $$ public void synthesizeAnnotationFromMapWithNestedMap() throws Exception -->Line_10 $$ assertNotNull(filterMap)[ CD ]
Line_2 $$ public void synthesizeAnnotationFromMapWithNestedMap() throws Exception -->Line_8 $$ assertEquals(ComponentScanSingleFilter.class, attributes.annotationType())[ CD ]
Line_2 $$ public void synthesizeAnnotationFromMapWithNestedMap() throws Exception -->Line_9 $$ Map<String, Object> filterMap = (Map<String, Object>) attributes.get("value")[ CD ]
Line_2 $$ public void synthesizeAnnotationFromMapWithNestedMap() throws Exception -->Line_7 $$ assertNotNull(attributes)[ CD ]
Line_14 $$ ComponentScanSingleFilter synthesizedComponentScan = synthesizeAnnotation(attributes, ComponentScanSingleFilter.class, ComponentScanSingleFilterClass.class)-->Line_17 $$ assertEquals("value from synthesized ComponentScan: ", "newFoo", synthesizedComponentScan.value().pattern())[ FD ]
Line_6 $$ AnnotationAttributes attributes = getAnnotationAttributes(ComponentScanSingleFilterClass.class, componentScan, false, true)-->Line_14 $$ ComponentScanSingleFilter synthesizedComponentScan = synthesizeAnnotation(attributes, ComponentScanSingleFilter.class, ComponentScanSingleFilterClass.class)[ FD ]
Line_2 $$ public void synthesizeAnnotationFromMapWithNestedMap() throws Exception -->Line_4 $$ assertNotNull(componentScan)[ CD ]
Line_6 $$ AnnotationAttributes attributes = getAnnotationAttributes(ComponentScanSingleFilterClass.class, componentScan, false, true)-->Line_9 $$ Map<String, Object> filterMap = (Map<String, Object>) attributes.get("value")[ FD ]
Line_2 $$ public void synthesizeAnnotationFromMapWithNestedMap() throws Exception -->Line_15 $$ assertNotNull(synthesizedComponentScan)[ CD ]
Line_9 $$ Map<String, Object> filterMap = (Map<String, Object>) attributes.get("value")-->Line_12 $$ filterMap.put("pattern", "newFoo")[ FD ]
Line_3 $$ ComponentScanSingleFilter componentScan = ComponentScanSingleFilterClass.class.getAnnotation(ComponentScanSingleFilter.class)-->Line_4 $$ assertNotNull(componentScan)[ FD ]
