Line_7 $$ RepoGroup group = myGroups.get(host)-->Line_11 $$ myGroups.put(host, group)[ FD ]
Line_7 $$ RepoGroup group = myGroups.get(host)-->Line_8 $$ if (group == null) [ FD ]
Line_6 $$ final String host = url.getHost()-->Line_11 $$ myGroups.put(host, group)[ FD ]
Line_6 $$ final String host = url.getHost()-->Line_7 $$ RepoGroup group = myGroups.get(host)[ FD ]
Line_7 $$ RepoGroup group = myGroups.get(host)-->Line_9 $$ group = new RepoGroup(myCreator, myMaxCached, myMaxConcurrent, myAdjuster, myGuard, myLock, myConnectionTimeout)[ FD ]
Line_9 $$ group = new RepoGroup(myCreator, myMaxCached, myMaxConcurrent, myAdjuster, myGuard, myLock, myConnectionTimeout)-->Line_11 $$ myGroups.put(host, group)[ FD ]
Line_8 $$ if (group == null) -->Line_9 $$ group = new RepoGroup(myCreator, myMaxCached, myMaxConcurrent, myAdjuster, myGuard, myLock, myConnectionTimeout)[ CD ]
Line_7 $$ RepoGroup group = myGroups.get(host)-->Line_12 $$ return group.getRepo(url, mayReuse)[ FD ]
Line_9 $$ group = new RepoGroup(myCreator, myMaxCached, myMaxConcurrent, myAdjuster, myGuard, myLock, myConnectionTimeout)-->Line_12 $$ return group.getRepo(url, mayReuse)[ FD ]
Line_2 $$ public SVNRepository getRepo(SVNURL url, boolean mayReuse) throws SVNException -->Line_6 $$ final String host = url.getHost()[ FD ]
Line_2 $$ public SVNRepository getRepo(SVNURL url, boolean mayReuse) throws SVNException -->Line_12 $$ return group.getRepo(url, mayReuse)[ FD ]
