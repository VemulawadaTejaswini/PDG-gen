Line_4 $$ String principalInConf = conf.get(usernameConfKey)-->Line_5 $$ if (principalInConf != null && !principalInConf.isEmpty()) [ FD ]
Line_2 $$ private void initSpnego(Configuration conf, String hostName, String usernameConfKey, String keytabConfKey) throws IOException -->Line_5 $$ if (principalInConf != null && !principalInConf.isEmpty()) [ CD ]
Line_8 $$ String httpKeytab = conf.get(keytabConfKey)-->Line_9 $$ if (httpKeytab != null && !httpKeytab.isEmpty()) [ FD ]
Line_3 $$ Map<String, String> params = new HashMap<String, String>()-->Line_10 $$ params.put("kerberos.keytab", httpKeytab)[ FD ]
Line_2 $$ private void initSpnego(Configuration conf, String hostName, String usernameConfKey, String keytabConfKey) throws IOException -->Line_8 $$ String httpKeytab = conf.get(keytabConfKey)[ FD ]
Line_2 $$ private void initSpnego(Configuration conf, String hostName, String usernameConfKey, String keytabConfKey) throws IOException -->Line_8 $$ String httpKeytab = conf.get(keytabConfKey)[ CD ]
Line_2 $$ private void initSpnego(Configuration conf, String hostName, String usernameConfKey, String keytabConfKey) throws IOException -->Line_4 $$ String principalInConf = conf.get(usernameConfKey)[ FD ]
Line_9 $$ if (httpKeytab != null && !httpKeytab.isEmpty()) -->Line_10 $$ params.put("kerberos.keytab", httpKeytab)[ CD ]
Line_3 $$ Map<String, String> params = new HashMap<String, String>()-->Line_13 $$ defineFilter(webAppContext, SPNEGO_FILTER, AuthenticationFilter.class.getName(), params, null)[ FD ]
Line_2 $$ private void initSpnego(Configuration conf, String hostName, String usernameConfKey, String keytabConfKey) throws IOException -->Line_3 $$ Map<String, String> params = new HashMap<String, String>()[ CD ]
Line_2 $$ private void initSpnego(Configuration conf, String hostName, String usernameConfKey, String keytabConfKey) throws IOException -->Line_6 $$ params.put("kerberos.principal", SecurityUtil.getServerPrincipal(principalInConf, hostName))[ FD ]
Line_2 $$ private void initSpnego(Configuration conf, String hostName, String usernameConfKey, String keytabConfKey) throws IOException -->Line_12 $$ params.put(AuthenticationFilter.AUTH_TYPE, "kerberos")[ CD ]
Line_3 $$ Map<String, String> params = new HashMap<String, String>()-->Line_12 $$ params.put(AuthenticationFilter.AUTH_TYPE, "kerberos")[ FD ]
Line_2 $$ private void initSpnego(Configuration conf, String hostName, String usernameConfKey, String keytabConfKey) throws IOException -->Line_13 $$ defineFilter(webAppContext, SPNEGO_FILTER, AuthenticationFilter.class.getName(), params, null)[ CD ]
Line_5 $$ if (principalInConf != null && !principalInConf.isEmpty()) -->Line_6 $$ params.put("kerberos.principal", SecurityUtil.getServerPrincipal(principalInConf, hostName))[ CD ]
Line_8 $$ String httpKeytab = conf.get(keytabConfKey)-->Line_10 $$ params.put("kerberos.keytab", httpKeytab)[ FD ]
Line_2 $$ private void initSpnego(Configuration conf, String hostName, String usernameConfKey, String keytabConfKey) throws IOException -->Line_9 $$ if (httpKeytab != null && !httpKeytab.isEmpty()) [ CD ]
Line_4 $$ String principalInConf = conf.get(usernameConfKey)-->Line_6 $$ params.put("kerberos.principal", SecurityUtil.getServerPrincipal(principalInConf, hostName))[ FD ]
Line_3 $$ Map<String, String> params = new HashMap<String, String>()-->Line_6 $$ params.put("kerberos.principal", SecurityUtil.getServerPrincipal(principalInConf, hostName))[ FD ]
Line_2 $$ private void initSpnego(Configuration conf, String hostName, String usernameConfKey, String keytabConfKey) throws IOException -->Line_4 $$ String principalInConf = conf.get(usernameConfKey)[ CD ]
