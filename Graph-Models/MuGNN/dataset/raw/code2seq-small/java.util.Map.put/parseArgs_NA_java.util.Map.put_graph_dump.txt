Line_2 $$ private static Map<String, String> parseArgs(String[] args) -->Line_7 $$ Map<String, String> params = new HashMap<String, String>()[ CD ]
Line_8 $$ for (int i = 0; i < args.length; i += 2) -->Line_11 $$ params.put(param, value)[ CD ]
Line_3 $$ if (args.length % 2 != 0) -->Line_5 $$ System.exit(-1)[ CD ]
Line_9 $$ String param = args[i].replace("--", "")-->Line_11 $$ params.put(param, value)[ FD ]
Line_7 $$ Map<String, String> params = new HashMap<String, String>()-->Line_11 $$ params.put(param, value)[ FD ]
Line_3 $$ if (args.length % 2 != 0) -->Line_4 $$ printHelp()[ CD ]
Line_2 $$ private static Map<String, String> parseArgs(String[] args) -->Line_8 $$ for (int i = 0; i < args.length; i += 2) [ CD ]
Line_2 $$ private static Map<String, String> parseArgs(String[] args) -->Line_3 $$ if (args.length % 2 != 0) [ CD ]
Line_10 $$ String value = args[i + 1]-->Line_11 $$ params.put(param, value)[ FD ]
Line_2 $$ private static Map<String, String> parseArgs(String[] args) -->Line_13 $$ return params[ CD ]
Line_8 $$ for (int i = 0; i < args.length; i += 2) -->Line_9 $$ String param = args[i].replace("--", "")[ CD ]
Line_8 $$ for (int i = 0; i < args.length; i += 2) -->Line_10 $$ String value = args[i + 1][ CD ]
