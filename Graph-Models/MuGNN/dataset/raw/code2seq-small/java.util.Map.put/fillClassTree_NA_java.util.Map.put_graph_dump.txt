Line_4 $$ Collections.sort(configuredClasses, new Comparator<Class>() -->Line_9 $$ int level = 0[ CD ]
Line_24 $$ if (classToNodeMap.containsKey(superClass)) -->Line_25 $$ parentNode = classToNodeMap.get(superClass)[ CD ]
Line_2 $$ private void fillClassTree() -->Line_4 $$ Collections.sort(configuredClasses, new Comparator<Class>() [ CD ]
Line_4 $$ Collections.sort(configuredClasses, new Comparator<Class>() -->Line_12 $$ aClass = aClass.getSuperclass()[ FD ]
Line_4 $$ Collections.sort(configuredClasses, new Comparator<Class>() -->Line_14 $$ return level[ CD ]
Line_10 $$ while (aClass.getSuperclass() != null) -->Line_12 $$ aClass = aClass.getSuperclass()[ CD ]
Line_2 $$ private void fillClassTree() -->Line_35 $$ myClassTree.expandRow(0)[ CD ]
Line_10 $$ while (aClass.getSuperclass() != null) -->Line_11 $$ level++[ CD ]
Line_2 $$ private void fillClassTree() -->Line_3 $$ List<Class> configuredClasses = myManager.getConfiguredClasses()[ CD ]
Line_23 $$ while (superClass != null) -->Line_24 $$ if (classToNodeMap.containsKey(superClass)) [ CD ]
Line_9 $$ int level = 0-->Line_11 $$ level++[ FD ]
Line_12 $$ aClass = aClass.getSuperclass()-->Line_10 $$ while (aClass.getSuperclass() != null) [ FD ]
Line_2 $$ private void fillClassTree() -->Line_34 $$ myClassTree.setModel(treeModel)[ CD ]
Line_4 $$ Collections.sort(configuredClasses, new Comparator<Class>() -->Line_10 $$ while (aClass.getSuperclass() != null) [ FD ]
Line_4 $$ Collections.sort(configuredClasses, new Comparator<Class>() -->Line_6 $$ return getInheritanceLevel(o1) - getInheritanceLevel(o2)[ CD ]
Line_2 $$ private void fillClassTree() -->Line_36 $$ myClassTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION)[ CD ]
Line_2 $$ private void fillClassTree() -->Line_37 $$ myClassTree.getSelectionModel().setSelectionPath(new TreePath(new Object[] [ CD ]
Line_23 $$ while (superClass != null) -->Line_28 $$ superClass = superClass.getSuperclass()[ CD ]
Line_4 $$ Collections.sort(configuredClasses, new Comparator<Class>() -->Line_6 $$ return getInheritanceLevel(o1) - getInheritanceLevel(o2)[ FD ]
Line_3 $$ List<Class> configuredClasses = myManager.getConfiguredClasses()-->Line_4 $$ Collections.sort(configuredClasses, new Comparator<Class>() [ FD ]
Line_4 $$ Collections.sort(configuredClasses, new Comparator<Class>() -->Line_10 $$ while (aClass.getSuperclass() != null) [ CD ]
