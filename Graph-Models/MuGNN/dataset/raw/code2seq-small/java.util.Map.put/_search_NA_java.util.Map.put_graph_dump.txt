Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_8 $$ attributes.put("status", status)[ FD ]
Line_5 $$ Map<String, Serializable> attributes = new HashMap()-->Line_10 $$ attributes.put("type", type)[ FD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_13 $$ searchContext.setEnd(end)[ FD ]
Line_5 $$ Map<String, Serializable> attributes = new HashMap()-->Line_6 $$ attributes.put("license", license)[ FD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_11 $$ searchContext.setAttributes(attributes)[ CD ]
Line_15 $$ QueryConfig queryConfig = new QueryConfig()-->Line_17 $$ queryConfig.setScoreEnabled(false)[ FD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_4 $$ SearchContext searchContext = new SearchContext()[ CD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_19 $$ searchContext.setStart(start)[ CD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_8 $$ attributes.put("status", status)[ CD ]
Line_20 $$ Indexer<PluginPackage> indexer = IndexerRegistryUtil.getIndexer(PluginPackage.class)-->Line_21 $$ return indexer.search(searchContext)[ FD ]
Line_4 $$ SearchContext searchContext = new SearchContext()-->Line_13 $$ searchContext.setEnd(end)[ FD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_20 $$ Indexer<PluginPackage> indexer = IndexerRegistryUtil.getIndexer(PluginPackage.class)[ CD ]
Line_5 $$ Map<String, Serializable> attributes = new HashMap()-->Line_9 $$ attributes.put("tag", tag)[ FD ]
Line_4 $$ SearchContext searchContext = new SearchContext()-->Line_19 $$ searchContext.setStart(start)[ FD ]
Line_15 $$ QueryConfig queryConfig = new QueryConfig()-->Line_18 $$ searchContext.setQueryConfig(queryConfig)[ FD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_9 $$ attributes.put("tag", tag)[ FD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_3 $$ _checkRepositories(repositoryURL)[ CD ]
Line_4 $$ SearchContext searchContext = new SearchContext()-->Line_12 $$ searchContext.setCompanyId(CompanyConstants.SYSTEM)[ FD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_21 $$ return indexer.search(searchContext)[ CD ]
Line_15 $$ QueryConfig queryConfig = new QueryConfig()-->Line_16 $$ queryConfig.setHighlightEnabled(false)[ FD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_7 $$ attributes.put("repositoryURL", repositoryURL)[ CD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_9 $$ attributes.put("tag", tag)[ CD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_16 $$ queryConfig.setHighlightEnabled(false)[ CD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_14 $$ searchContext.setKeywords(keywords)[ FD ]
Line_4 $$ SearchContext searchContext = new SearchContext()-->Line_18 $$ searchContext.setQueryConfig(queryConfig)[ FD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_10 $$ attributes.put("type", type)[ CD ]
Line_5 $$ Map<String, Serializable> attributes = new HashMap()-->Line_7 $$ attributes.put("repositoryURL", repositoryURL)[ FD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_17 $$ queryConfig.setScoreEnabled(false)[ CD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_3 $$ _checkRepositories(repositoryURL)[ FD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_6 $$ attributes.put("license", license)[ CD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_6 $$ attributes.put("license", license)[ FD ]
Line_4 $$ SearchContext searchContext = new SearchContext()-->Line_14 $$ searchContext.setKeywords(keywords)[ FD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_13 $$ searchContext.setEnd(end)[ CD ]
Line_4 $$ SearchContext searchContext = new SearchContext()-->Line_11 $$ searchContext.setAttributes(attributes)[ FD ]
Line_5 $$ Map<String, Serializable> attributes = new HashMap()-->Line_8 $$ attributes.put("status", status)[ FD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_5 $$ Map<String, Serializable> attributes = new HashMap()[ CD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_15 $$ QueryConfig queryConfig = new QueryConfig()[ CD ]
Line_4 $$ SearchContext searchContext = new SearchContext()-->Line_21 $$ return indexer.search(searchContext)[ FD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_10 $$ attributes.put("type", type)[ FD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_18 $$ searchContext.setQueryConfig(queryConfig)[ CD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_19 $$ searchContext.setStart(start)[ FD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_7 $$ attributes.put("repositoryURL", repositoryURL)[ FD ]
Line_5 $$ Map<String, Serializable> attributes = new HashMap()-->Line_11 $$ searchContext.setAttributes(attributes)[ FD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_14 $$ searchContext.setKeywords(keywords)[ CD ]
Line_2 $$ private Hits _search(String keywords, String type, String tag, String license, String repositoryURL, String status, int start, int end) throws PortalException -->Line_12 $$ searchContext.setCompanyId(CompanyConstants.SYSTEM)[ CD ]
