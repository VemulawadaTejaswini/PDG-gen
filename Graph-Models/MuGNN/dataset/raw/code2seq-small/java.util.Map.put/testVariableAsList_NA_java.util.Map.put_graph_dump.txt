Line_7 $$ String json = toJSON(map)-->Line_8 $$ JSONWebServiceAction jsonWebServiceAction = prepareInvokerAction(json)[ FD ]
Line_10 $$ JSONWebServiceInvokerAction.InvokerResult invokerResult = (JSONWebServiceInvokerAction.InvokerResult) result-->Line_11 $$ result = invokerResult.getResult()[ FD ]
Line_3 $$ Map<String, Object> map = new LinkedHashMap()-->Line_14 $$ Assert.assertTrue(map.containsKey("array"))[ FD ]
Line_2 $$ public void testVariableAsList() throws Exception -->Line_19 $$ Assert.assertFalse(jsonResult.contains("secret"))[ CD ]
Line_2 $$ public void testVariableAsList() throws Exception -->Line_11 $$ result = invokerResult.getResult()[ CD ]
Line_8 $$ JSONWebServiceAction jsonWebServiceAction = prepareInvokerAction(json)-->Line_9 $$ Object result = jsonWebServiceAction.invoke()[ FD ]
Line_2 $$ public void testVariableAsList() throws Exception -->Line_10 $$ JSONWebServiceInvokerAction.InvokerResult invokerResult = (JSONWebServiceInvokerAction.InvokerResult) result[ CD ]
Line_3 $$ Map<String, Object> map = new LinkedHashMap()-->Line_5 $$ map.put("/foo/bar", params)[ FD ]
Line_4 $$ Map<String, Object> params = new LinkedHashMap()-->Line_6 $$ params.put("$fds[name,value] = /foo/get-foo-datas", new HashMap<String, Object>())[ FD ]
Line_13 $$ map = (Map<String, Object>) result-->Line_15 $$ Assert.assertTrue(map.containsKey("fds"))[ FD ]
Line_2 $$ public void testVariableAsList() throws Exception -->Line_3 $$ Map<String, Object> map = new LinkedHashMap()[ CD ]
Line_2 $$ public void testVariableAsList() throws Exception -->Line_7 $$ String json = toJSON(map)[ CD ]
Line_3 $$ Map<String, Object> map = new LinkedHashMap()-->Line_17 $$ Assert.assertTrue(map.containsKey("value"))[ FD ]
Line_2 $$ public void testVariableAsList() throws Exception -->Line_5 $$ map.put("/foo/bar", params)[ CD ]
Line_2 $$ public void testVariableAsList() throws Exception -->Line_8 $$ JSONWebServiceAction jsonWebServiceAction = prepareInvokerAction(json)[ CD ]
Line_4 $$ Map<String, Object> params = new LinkedHashMap()-->Line_5 $$ map.put("/foo/bar", params)[ FD ]
Line_2 $$ public void testVariableAsList() throws Exception -->Line_14 $$ Assert.assertTrue(map.containsKey("array"))[ CD ]
Line_2 $$ public void testVariableAsList() throws Exception -->Line_18 $$ String jsonResult = toJSON(invokerResult)[ CD ]
Line_18 $$ String jsonResult = toJSON(invokerResult)-->Line_19 $$ Assert.assertFalse(jsonResult.contains("secret"))[ FD ]
Line_2 $$ public void testVariableAsList() throws Exception -->Line_12 $$ Assert.assertTrue(result instanceof Map)[ CD ]
Line_2 $$ public void testVariableAsList() throws Exception -->Line_13 $$ map = (Map<String, Object>) result[ CD ]
Line_3 $$ Map<String, Object> map = new LinkedHashMap()-->Line_13 $$ map = (Map<String, Object>) result[ FD ]
Line_3 $$ Map<String, Object> map = new LinkedHashMap()-->Line_16 $$ Assert.assertFalse(map.containsKey("secret"))[ FD ]
Line_2 $$ public void testVariableAsList() throws Exception -->Line_16 $$ Assert.assertFalse(map.containsKey("secret"))[ CD ]
Line_2 $$ public void testVariableAsList() throws Exception -->Line_4 $$ Map<String, Object> params = new LinkedHashMap()[ CD ]
Line_2 $$ public void testVariableAsList() throws Exception -->Line_15 $$ Assert.assertTrue(map.containsKey("fds"))[ CD ]
Line_13 $$ map = (Map<String, Object>) result-->Line_16 $$ Assert.assertFalse(map.containsKey("secret"))[ FD ]
Line_2 $$ public void testVariableAsList() throws Exception -->Line_9 $$ Object result = jsonWebServiceAction.invoke()[ CD ]
Line_2 $$ public void testVariableAsList() throws Exception -->Line_17 $$ Assert.assertTrue(map.containsKey("value"))[ CD ]
Line_10 $$ JSONWebServiceInvokerAction.InvokerResult invokerResult = (JSONWebServiceInvokerAction.InvokerResult) result-->Line_18 $$ String jsonResult = toJSON(invokerResult)[ FD ]
Line_13 $$ map = (Map<String, Object>) result-->Line_17 $$ Assert.assertTrue(map.containsKey("value"))[ FD ]
Line_13 $$ map = (Map<String, Object>) result-->Line_14 $$ Assert.assertTrue(map.containsKey("array"))[ FD ]
Line_9 $$ Object result = jsonWebServiceAction.invoke()-->Line_11 $$ result = invokerResult.getResult()[ FD ]
Line_2 $$ public void testVariableAsList() throws Exception -->Line_6 $$ params.put("$fds[name,value] = /foo/get-foo-datas", new HashMap<String, Object>())[ CD ]
Line_3 $$ Map<String, Object> map = new LinkedHashMap()-->Line_15 $$ Assert.assertTrue(map.containsKey("fds"))[ FD ]
Line_3 $$ Map<String, Object> map = new LinkedHashMap()-->Line_7 $$ String json = toJSON(map)[ FD ]
