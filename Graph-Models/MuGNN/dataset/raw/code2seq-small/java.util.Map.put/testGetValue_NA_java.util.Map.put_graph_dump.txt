Line_2 $$ public void testGetValue() -->Line_5 $$ props1.put("key2", "value2")[ CD ]
Line_2 $$ public void testGetValue() -->Line_10 $$ assertEquals("value2", expr.getValue(bean))[ CD ]
Line_8 $$ ExpressionParser parser = new SpelExpressionParser()-->Line_9 $$ Expression expr = parser.parseExpression("testBean.properties['key2']")[ FD ]
Line_2 $$ public void testGetValue() -->Line_6 $$ props1.put("key3", "value3")[ CD ]
Line_3 $$ Map<String, String> props1 = new HashMap<String, String>()-->Line_4 $$ props1.put("key1", "value1")[ FD ]
Line_2 $$ public void testGetValue() -->Line_4 $$ props1.put("key1", "value1")[ CD ]
Line_2 $$ public void testGetValue() -->Line_9 $$ Expression expr = parser.parseExpression("testBean.properties['key2']")[ CD ]
Line_9 $$ Expression expr = parser.parseExpression("testBean.properties['key2']")-->Line_10 $$ assertEquals("value2", expr.getValue(bean))[ FD ]
Line_2 $$ public void testGetValue() -->Line_7 $$ Object bean = new TestBean("name1", new TestBean("name2", null, "Description 2", 15, props1), "description 1", 6, props1)[ CD ]
Line_7 $$ Object bean = new TestBean("name1", new TestBean("name2", null, "Description 2", 15, props1), "description 1", 6, props1)-->Line_10 $$ assertEquals("value2", expr.getValue(bean))[ FD ]
Line_3 $$ Map<String, String> props1 = new HashMap<String, String>()-->Line_5 $$ props1.put("key2", "value2")[ FD ]
Line_2 $$ public void testGetValue() -->Line_3 $$ Map<String, String> props1 = new HashMap<String, String>()[ CD ]
Line_2 $$ public void testGetValue() -->Line_8 $$ ExpressionParser parser = new SpelExpressionParser()[ CD ]
Line_3 $$ Map<String, String> props1 = new HashMap<String, String>()-->Line_6 $$ props1.put("key3", "value3")[ FD ]
