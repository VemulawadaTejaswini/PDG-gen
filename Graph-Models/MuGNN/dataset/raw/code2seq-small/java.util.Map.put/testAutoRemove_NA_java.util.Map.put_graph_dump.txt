Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_14 $$ Assert.assertSame(testValue1, concurrentMap.put(testKey, testValue2))[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_26 $$ Assert.assertSame(testValue2, concurrentMap.replace(testKey, new Object()))[ CD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_17 $$ Assert.assertFalse(concurrentMap.containsValue(testValue1))[ FD ]
Line_6 $$ Object testValue2 = new Object()-->Line_25 $$ Assert.assertSame(testValue2, valueIterator.next())[ FD ]
Line_5 $$ Object testValue1 = new Object()-->Line_17 $$ Assert.assertFalse(concurrentMap.containsValue(testValue1))[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_9 $$ Assert.assertNull(concurrentMap.put(testKey, testValue1))[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_23 $$ Collection<Object> values = concurrentMap.values()[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_3 $$ Map<Reference<?>, FinalizeAction> finalizeActions = ReflectionTestUtil.getFieldValue(FinalizeManager.class, "_finalizeActions")[ CD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_35 $$ ReflectionTestUtil.invoke(FinalizeManager.class, "_pollingCleanup", new Class<?>[0])[ CD ]
Line_4 $$ String testKey = new String("testKey")-->Line_11 $$ Assert.assertSame(testValue1, concurrentMap.get(testKey))[ FD ]
Line_4 $$ String testKey = new String("testKey")-->Line_16 $$ Assert.assertSame(testValue2, concurrentMap.get(testKey))[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_8 $$ Assert.assertTrue(finalizeActions.isEmpty())[ CD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_37 $$ Assert.assertTrue(concurrentMap.isEmpty())[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_11 $$ Assert.assertSame(testValue1, concurrentMap.get(testKey))[ FD ]
Line_4 $$ String testKey = new String("testKey")-->Line_7 $$ Assert.assertFalse(concurrentMap.containsKey(testKey))[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_12 $$ Assert.assertTrue(concurrentMap.containsValue(testValue1))[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_20 $$ Set<String> keySet = concurrentMap.keySet()[ CD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_16 $$ Assert.assertSame(testValue2, concurrentMap.get(testKey))[ CD ]
Line_4 $$ String testKey = new String("testKey")-->Line_15 $$ Assert.assertTrue(concurrentMap.containsKey(testKey))[ FD ]
Line_4 $$ String testKey = new String("testKey")-->Line_22 $$ Assert.assertSame(testKey, keyIterator.next())[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_28 $$ Assert.assertEquals(1, concurrentMap.size())[ CD ]
Line_5 $$ Object testValue1 = new Object()-->Line_14 $$ Assert.assertSame(testValue1, concurrentMap.put(testKey, testValue2))[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_29 $$ testKey = null[ CD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_7 $$ Assert.assertFalse(concurrentMap.containsKey(testKey))[ FD ]
Line_3 $$ Map<Reference<?>, FinalizeAction> finalizeActions = ReflectionTestUtil.getFieldValue(FinalizeManager.class, "_finalizeActions")-->Line_13 $$ Assert.assertEquals(1, finalizeActions.size())[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_4 $$ String testKey = new String("testKey")[ CD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_14 $$ Assert.assertSame(testValue1, concurrentMap.put(testKey, testValue2))[ CD ]
Line_23 $$ Collection<Object> values = concurrentMap.values()-->Line_24 $$ Iterator<Object> valueIterator = values.iterator()[ FD ]
Line_21 $$ Iterator<String> keyIterator = keySet.iterator()-->Line_22 $$ Assert.assertSame(testKey, keyIterator.next())[ FD ]
Line_5 $$ Object testValue1 = new Object()-->Line_9 $$ Assert.assertNull(concurrentMap.put(testKey, testValue1))[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_5 $$ Object testValue1 = new Object()[ CD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_25 $$ Assert.assertSame(testValue2, valueIterator.next())[ CD ]
Line_3 $$ Map<Reference<?>, FinalizeAction> finalizeActions = ReflectionTestUtil.getFieldValue(FinalizeManager.class, "_finalizeActions")-->Line_19 $$ Assert.assertEquals(1, finalizeActions.size())[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_6 $$ Object testValue2 = new Object()[ CD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_9 $$ Assert.assertNull(concurrentMap.put(testKey, testValue1))[ CD ]
Line_4 $$ String testKey = new String("testKey")-->Line_10 $$ Assert.assertTrue(concurrentMap.containsKey(testKey))[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_7 $$ Assert.assertFalse(concurrentMap.containsKey(testKey))[ CD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_30 $$ if (fullGC) [ CD ]
Line_3 $$ Map<Reference<?>, FinalizeAction> finalizeActions = ReflectionTestUtil.getFieldValue(FinalizeManager.class, "_finalizeActions")-->Line_36 $$ Assert.assertTrue(finalizeActions.isEmpty())[ FD ]
Line_4 $$ String testKey = new String("testKey")-->Line_29 $$ testKey = null[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_36 $$ Assert.assertTrue(finalizeActions.isEmpty())[ CD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_26 $$ Assert.assertSame(testValue2, concurrentMap.replace(testKey, new Object()))[ FD ]
Line_5 $$ Object testValue1 = new Object()-->Line_11 $$ Assert.assertSame(testValue1, concurrentMap.get(testKey))[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_23 $$ Collection<Object> values = concurrentMap.values()[ CD ]
Line_4 $$ String testKey = new String("testKey")-->Line_14 $$ Assert.assertSame(testValue1, concurrentMap.put(testKey, testValue2))[ FD ]
Line_6 $$ Object testValue2 = new Object()-->Line_16 $$ Assert.assertSame(testValue2, concurrentMap.get(testKey))[ FD ]
Line_24 $$ Iterator<Object> valueIterator = values.iterator()-->Line_25 $$ Assert.assertSame(testValue2, valueIterator.next())[ FD ]
Line_5 $$ Object testValue1 = new Object()-->Line_12 $$ Assert.assertTrue(concurrentMap.containsValue(testValue1))[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_16 $$ Assert.assertSame(testValue2, concurrentMap.get(testKey))[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_18 $$ Assert.assertTrue(concurrentMap.containsValue(testValue2))[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_11 $$ Assert.assertSame(testValue1, concurrentMap.get(testKey))[ CD ]
Line_3 $$ Map<Reference<?>, FinalizeAction> finalizeActions = ReflectionTestUtil.getFieldValue(FinalizeManager.class, "_finalizeActions")-->Line_27 $$ Assert.assertEquals(1, finalizeActions.size())[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_17 $$ Assert.assertFalse(concurrentMap.containsValue(testValue1))[ CD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_27 $$ Assert.assertEquals(1, finalizeActions.size())[ CD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_19 $$ Assert.assertEquals(1, finalizeActions.size())[ CD ]
Line_6 $$ Object testValue2 = new Object()-->Line_26 $$ Assert.assertSame(testValue2, concurrentMap.replace(testKey, new Object()))[ FD ]
Line_6 $$ Object testValue2 = new Object()-->Line_14 $$ Assert.assertSame(testValue1, concurrentMap.put(testKey, testValue2))[ FD ]
Line_30 $$ if (fullGC) -->Line_33 $$ GCUtil.gc(true)[ CD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_37 $$ Assert.assertTrue(concurrentMap.isEmpty())[ CD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_10 $$ Assert.assertTrue(concurrentMap.containsKey(testKey))[ FD ]
Line_4 $$ String testKey = new String("testKey")-->Line_9 $$ Assert.assertNull(concurrentMap.put(testKey, testValue1))[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_24 $$ Iterator<Object> valueIterator = values.iterator()[ CD ]
Line_20 $$ Set<String> keySet = concurrentMap.keySet()-->Line_21 $$ Iterator<String> keyIterator = keySet.iterator()[ FD ]
Line_30 $$ if (fullGC) -->Line_31 $$ GCUtil.fullGC(true)[ CD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_20 $$ Set<String> keySet = concurrentMap.keySet()[ FD ]
Line_4 $$ String testKey = new String("testKey")-->Line_26 $$ Assert.assertSame(testValue2, concurrentMap.replace(testKey, new Object()))[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_21 $$ Iterator<String> keyIterator = keySet.iterator()[ CD ]
Line_3 $$ Map<Reference<?>, FinalizeAction> finalizeActions = ReflectionTestUtil.getFieldValue(FinalizeManager.class, "_finalizeActions")-->Line_8 $$ Assert.assertTrue(finalizeActions.isEmpty())[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_15 $$ Assert.assertTrue(concurrentMap.containsKey(testKey))[ CD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_10 $$ Assert.assertTrue(concurrentMap.containsKey(testKey))[ CD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_13 $$ Assert.assertEquals(1, finalizeActions.size())[ CD ]
Line_6 $$ Object testValue2 = new Object()-->Line_18 $$ Assert.assertTrue(concurrentMap.containsValue(testValue2))[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_18 $$ Assert.assertTrue(concurrentMap.containsValue(testValue2))[ CD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_15 $$ Assert.assertTrue(concurrentMap.containsKey(testKey))[ FD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_22 $$ Assert.assertSame(testKey, keyIterator.next())[ CD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_12 $$ Assert.assertTrue(concurrentMap.containsValue(testValue1))[ CD ]
Line_2 $$ protected void testAutoRemove(ConcurrentMap<String, Object> concurrentMap, boolean fullGC) throws InterruptedException -->Line_28 $$ Assert.assertEquals(1, concurrentMap.size())[ FD ]
