Line_3 $$ Map<String, Object> map = new HashMap<String, Object>()-->Line_4 $$ map.put("x", "1")[ FD ]
Line_3 $$ Map<String, Object> map = new HashMap<String, Object>()-->Line_5 $$ map.put("y", "2")[ FD ]
Line_10 $$ String result = expression.getValue(context, new TestBean(), String.class)-->Line_11 $$ assertEquals("123", result)[ FD ]
Line_8 $$ StandardEvaluationContext context = new StandardEvaluationContext()-->Line_10 $$ String result = expression.getValue(context, new TestBean(), String.class)[ FD ]
Line_3 $$ Map<String, Object> map = new HashMap<String, Object>()-->Line_6 $$ map.put("z", "3")[ FD ]
Line_2 $$ public void mapWithAllStringValues() -->Line_8 $$ StandardEvaluationContext context = new StandardEvaluationContext()[ CD ]
Line_2 $$ public void mapWithAllStringValues() -->Line_10 $$ String result = expression.getValue(context, new TestBean(), String.class)[ CD ]
Line_2 $$ public void mapWithAllStringValues() -->Line_4 $$ map.put("x", "1")[ CD ]
Line_2 $$ public void mapWithAllStringValues() -->Line_11 $$ assertEquals("123", result)[ CD ]
Line_2 $$ public void mapWithAllStringValues() -->Line_3 $$ Map<String, Object> map = new HashMap<String, Object>()[ CD ]
Line_8 $$ StandardEvaluationContext context = new StandardEvaluationContext()-->Line_9 $$ context.setVariable("props", map)[ FD ]
Line_7 $$ Expression expression = parser.parseExpression("foo(#props)")-->Line_10 $$ String result = expression.getValue(context, new TestBean(), String.class)[ FD ]
Line_2 $$ public void mapWithAllStringValues() -->Line_9 $$ context.setVariable("props", map)[ CD ]
Line_2 $$ public void mapWithAllStringValues() -->Line_5 $$ map.put("y", "2")[ CD ]
Line_3 $$ Map<String, Object> map = new HashMap<String, Object>()-->Line_9 $$ context.setVariable("props", map)[ FD ]
Line_2 $$ public void mapWithAllStringValues() -->Line_7 $$ Expression expression = parser.parseExpression("foo(#props)")[ CD ]
Line_2 $$ public void mapWithAllStringValues() -->Line_6 $$ map.put("z", "3")[ CD ]
