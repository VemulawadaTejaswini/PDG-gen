Line_3 $$ Map<String, String> input = new LinkedHashMap<String, String>()-->Line_6 $$ assertEquals(input, converted)[ FD ]
Line_3 $$ Map<String, String> input = new LinkedHashMap<String, String>()-->Line_5 $$ Object converted = conversionService.convert(input, TypeDescriptor.forObject(input), new TypeDescriptor(getClass().getField("wildcardMap")))[ FD ]
Line_2 $$ public void testWildcardMap() throws Exception -->Line_4 $$ input.put("key", "value")[ CD ]
Line_2 $$ public void testWildcardMap() throws Exception -->Line_6 $$ assertEquals(input, converted)[ CD ]
Line_2 $$ public void testWildcardMap() throws Exception -->Line_5 $$ Object converted = conversionService.convert(input, TypeDescriptor.forObject(input), new TypeDescriptor(getClass().getField("wildcardMap")))[ CD ]
Line_2 $$ public void testWildcardMap() throws Exception -->Line_3 $$ Map<String, String> input = new LinkedHashMap<String, String>()[ CD ]
Line_3 $$ Map<String, String> input = new LinkedHashMap<String, String>()-->Line_4 $$ input.put("key", "value")[ FD ]
Line_5 $$ Object converted = conversionService.convert(input, TypeDescriptor.forObject(input), new TypeDescriptor(getClass().getField("wildcardMap")))-->Line_6 $$ assertEquals(input, converted)[ FD ]
