Line_10 $$ if (resultSetParameters != null && resultSetParameters.size() > rsIndex) -->Line_13 $$ rsIndex++[ CD ]
Line_18 $$ if (logger.isDebugEnabled()) -->Line_19 $$ logger.debug("Added default SqlReturnResultSet parameter named '" + rsName + "'")[ CD ]
Line_5 $$ int updateIndex = 0-->Line_30 $$ updateIndex++[ FD ]
Line_2 $$ protected Map<String, Object> extractReturnedResults(CallableStatement cs, List<SqlParameter> updateCountParameters, List<SqlParameter> resultSetParameters, int updateCount) throws SQLException -->Line_7 $$ if (!this.skipResultsProcessing) [ CD ]
Line_26 $$ if (updateCountParameters != null && updateCountParameters.size() > updateIndex) -->Line_30 $$ updateIndex++[ CD ]
Line_10 $$ if (resultSetParameters != null && resultSetParameters.size() > rsIndex) -->Line_12 $$ returnedResults.putAll(processResultSet(cs.getResultSet(), declaredRsParam))[ CD ]
Line_10 $$ if (resultSetParameters != null && resultSetParameters.size() > rsIndex) -->Line_15 $$ if (!this.skipUndeclaredResults) [ CD ]
Line_32 $$ if (!this.skipUndeclaredResults) -->Line_34 $$ if (logger.isDebugEnabled()) [ CD ]
Line_15 $$ if (!this.skipUndeclaredResults) -->Line_17 $$ SqlReturnResultSet undeclaredRsParam = new SqlReturnResultSet(rsName, new ColumnMapRowMapper())[ CD ]
Line_2 $$ protected Map<String, Object> extractReturnedResults(CallableStatement cs, List<SqlParameter> updateCountParameters, List<SqlParameter> resultSetParameters, int updateCount) throws SQLException -->Line_37 $$ returnedResults.put(undeclaredName, updateCount)[ FD ]
Line_8 $$ do -->Line_42 $$ moreResults = cs.getMoreResults()[ CD ]
Line_8 $$ do -->Line_43 $$ updateCount = cs.getUpdateCount()[ CD ]
Line_43 $$ updateCount = cs.getUpdateCount()-->Line_37 $$ returnedResults.put(undeclaredName, updateCount)[ FD ]
Line_3 $$ Map<String, Object> returnedResults = new HashMap<String, Object>()-->Line_12 $$ returnedResults.putAll(processResultSet(cs.getResultSet(), declaredRsParam))[ FD ]
Line_2 $$ protected Map<String, Object> extractReturnedResults(CallableStatement cs, List<SqlParameter> updateCountParameters, List<SqlParameter> resultSetParameters, int updateCount) throws SQLException -->Line_9 $$ if (updateCount == -1) [ FD ]
Line_15 $$ if (!this.skipUndeclaredResults) -->Line_22 $$ rsIndex++[ CD ]
Line_2 $$ protected Map<String, Object> extractReturnedResults(CallableStatement cs, List<SqlParameter> updateCountParameters, List<SqlParameter> resultSetParameters, int updateCount) throws SQLException -->Line_4 $$ int rsIndex = 0[ CD ]
Line_28 $$ String declaredUcName = ucParam.getName()-->Line_29 $$ returnedResults.put(declaredUcName, updateCount)[ FD ]
Line_32 $$ if (!this.skipUndeclaredResults) -->Line_33 $$ String undeclaredName = RETURN_UPDATE_COUNT_PREFIX + (updateIndex + 1)[ CD ]
Line_32 $$ if (!this.skipUndeclaredResults) -->Line_38 $$ updateIndex++[ CD ]
Line_2 $$ protected Map<String, Object> extractReturnedResults(CallableStatement cs, List<SqlParameter> updateCountParameters, List<SqlParameter> resultSetParameters, int updateCount) throws SQLException -->Line_43 $$ updateCount = cs.getUpdateCount()[ FD ]
Line_11 $$ SqlReturnResultSet declaredRsParam = (SqlReturnResultSet) resultSetParameters.get(rsIndex)-->Line_12 $$ returnedResults.putAll(processResultSet(cs.getResultSet(), declaredRsParam))[ FD ]
Line_15 $$ if (!this.skipUndeclaredResults) -->Line_16 $$ String rsName = RETURN_RESULT_SET_PREFIX + (rsIndex + 1)[ CD ]
Line_2 $$ protected Map<String, Object> extractReturnedResults(CallableStatement cs, List<SqlParameter> updateCountParameters, List<SqlParameter> resultSetParameters, int updateCount) throws SQLException -->Line_26 $$ if (updateCountParameters != null && updateCountParameters.size() > updateIndex) [ FD ]
Line_26 $$ if (updateCountParameters != null && updateCountParameters.size() > updateIndex) -->Line_28 $$ String declaredUcName = ucParam.getName()[ CD ]
Line_15 $$ if (!this.skipUndeclaredResults) -->Line_18 $$ if (logger.isDebugEnabled()) [ CD ]
Line_43 $$ updateCount = cs.getUpdateCount()-->Line_29 $$ returnedResults.put(declaredUcName, updateCount)[ FD ]
Line_42 $$ moreResults = cs.getMoreResults()-->Line_8 $$ do [ FD ]
Line_27 $$ SqlReturnUpdateCount ucParam = (SqlReturnUpdateCount) updateCountParameters.get(updateIndex)-->Line_28 $$ String declaredUcName = ucParam.getName()[ FD ]
Line_2 $$ protected Map<String, Object> extractReturnedResults(CallableStatement cs, List<SqlParameter> updateCountParameters, List<SqlParameter> resultSetParameters, int updateCount) throws SQLException -->Line_27 $$ SqlReturnUpdateCount ucParam = (SqlReturnUpdateCount) updateCountParameters.get(updateIndex)[ FD ]
Line_9 $$ if (updateCount == -1) -->Line_10 $$ if (resultSetParameters != null && resultSetParameters.size() > rsIndex) [ CD ]
Line_8 $$ do -->Line_44 $$ if (logger.isDebugEnabled()) [ CD ]
Line_2 $$ protected Map<String, Object> extractReturnedResults(CallableStatement cs, List<SqlParameter> updateCountParameters, List<SqlParameter> resultSetParameters, int updateCount) throws SQLException -->Line_11 $$ SqlReturnResultSet declaredRsParam = (SqlReturnResultSet) resultSetParameters.get(rsIndex)[ FD ]
Line_2 $$ protected Map<String, Object> extractReturnedResults(CallableStatement cs, List<SqlParameter> updateCountParameters, List<SqlParameter> resultSetParameters, int updateCount) throws SQLException -->Line_5 $$ int updateIndex = 0[ CD ]
Line_9 $$ if (updateCount == -1) -->Line_26 $$ if (updateCountParameters != null && updateCountParameters.size() > updateIndex) [ CD ]
Line_17 $$ SqlReturnResultSet undeclaredRsParam = new SqlReturnResultSet(rsName, new ColumnMapRowMapper())-->Line_21 $$ returnedResults.putAll(processResultSet(cs.getResultSet(), undeclaredRsParam))[ FD ]
Line_33 $$ String undeclaredName = RETURN_UPDATE_COUNT_PREFIX + (updateIndex + 1)-->Line_37 $$ returnedResults.put(undeclaredName, updateCount)[ FD ]
Line_5 $$ int updateIndex = 0-->Line_38 $$ updateIndex++[ FD ]
Line_7 $$ if (!this.skipResultsProcessing) -->Line_8 $$ do [ CD ]
Line_34 $$ if (logger.isDebugEnabled()) -->Line_35 $$ logger.debug("Added default SqlReturnUpdateCount parameter named '" + undeclaredName + "'")[ CD ]
Line_8 $$ do -->Line_9 $$ if (updateCount == -1) [ CD ]
Line_2 $$ protected Map<String, Object> extractReturnedResults(CallableStatement cs, List<SqlParameter> updateCountParameters, List<SqlParameter> resultSetParameters, int updateCount) throws SQLException -->Line_12 $$ returnedResults.putAll(processResultSet(cs.getResultSet(), declaredRsParam))[ FD ]
Line_26 $$ if (updateCountParameters != null && updateCountParameters.size() > updateIndex) -->Line_27 $$ SqlReturnUpdateCount ucParam = (SqlReturnUpdateCount) updateCountParameters.get(updateIndex)[ CD ]
Line_43 $$ updateCount = cs.getUpdateCount()-->Line_9 $$ if (updateCount == -1) [ FD ]
Line_3 $$ Map<String, Object> returnedResults = new HashMap<String, Object>()-->Line_29 $$ returnedResults.put(declaredUcName, updateCount)[ FD ]
Line_2 $$ protected Map<String, Object> extractReturnedResults(CallableStatement cs, List<SqlParameter> updateCountParameters, List<SqlParameter> resultSetParameters, int updateCount) throws SQLException -->Line_3 $$ Map<String, Object> returnedResults = new HashMap<String, Object>()[ CD ]
Line_6 $$ boolean moreResults-->Line_8 $$ do [ FD ]
Line_32 $$ if (!this.skipUndeclaredResults) -->Line_37 $$ returnedResults.put(undeclaredName, updateCount)[ CD ]
Line_2 $$ protected Map<String, Object> extractReturnedResults(CallableStatement cs, List<SqlParameter> updateCountParameters, List<SqlParameter> resultSetParameters, int updateCount) throws SQLException -->Line_29 $$ returnedResults.put(declaredUcName, updateCount)[ FD ]
Line_15 $$ if (!this.skipUndeclaredResults) -->Line_21 $$ returnedResults.putAll(processResultSet(cs.getResultSet(), undeclaredRsParam))[ CD ]
Line_2 $$ protected Map<String, Object> extractReturnedResults(CallableStatement cs, List<SqlParameter> updateCountParameters, List<SqlParameter> resultSetParameters, int updateCount) throws SQLException -->Line_6 $$ boolean moreResults[ CD ]
Line_6 $$ boolean moreResults-->Line_42 $$ moreResults = cs.getMoreResults()[ FD ]
Line_4 $$ int rsIndex = 0-->Line_22 $$ rsIndex++[ FD ]
Line_4 $$ int rsIndex = 0-->Line_13 $$ rsIndex++[ FD ]
Line_44 $$ if (logger.isDebugEnabled()) -->Line_45 $$ logger.debug("CallableStatement.getUpdateCount() returned " + updateCount)[ CD ]
Line_3 $$ Map<String, Object> returnedResults = new HashMap<String, Object>()-->Line_37 $$ returnedResults.put(undeclaredName, updateCount)[ FD ]
Line_2 $$ protected Map<String, Object> extractReturnedResults(CallableStatement cs, List<SqlParameter> updateCountParameters, List<SqlParameter> resultSetParameters, int updateCount) throws SQLException -->Line_10 $$ if (resultSetParameters != null && resultSetParameters.size() > rsIndex) [ FD ]
Line_5 $$ int updateIndex = 0-->Line_27 $$ SqlReturnUpdateCount ucParam = (SqlReturnUpdateCount) updateCountParameters.get(updateIndex)[ FD ]
Line_2 $$ protected Map<String, Object> extractReturnedResults(CallableStatement cs, List<SqlParameter> updateCountParameters, List<SqlParameter> resultSetParameters, int updateCount) throws SQLException -->Line_49 $$ return returnedResults[ CD ]
Line_10 $$ if (resultSetParameters != null && resultSetParameters.size() > rsIndex) -->Line_11 $$ SqlReturnResultSet declaredRsParam = (SqlReturnResultSet) resultSetParameters.get(rsIndex)[ CD ]
Line_2 $$ protected Map<String, Object> extractReturnedResults(CallableStatement cs, List<SqlParameter> updateCountParameters, List<SqlParameter> resultSetParameters, int updateCount) throws SQLException -->Line_42 $$ moreResults = cs.getMoreResults()[ FD ]
Line_26 $$ if (updateCountParameters != null && updateCountParameters.size() > updateIndex) -->Line_32 $$ if (!this.skipUndeclaredResults) [ CD ]
Line_3 $$ Map<String, Object> returnedResults = new HashMap<String, Object>()-->Line_21 $$ returnedResults.putAll(processResultSet(cs.getResultSet(), undeclaredRsParam))[ FD ]
Line_4 $$ int rsIndex = 0-->Line_11 $$ SqlReturnResultSet declaredRsParam = (SqlReturnResultSet) resultSetParameters.get(rsIndex)[ FD ]
Line_2 $$ protected Map<String, Object> extractReturnedResults(CallableStatement cs, List<SqlParameter> updateCountParameters, List<SqlParameter> resultSetParameters, int updateCount) throws SQLException -->Line_21 $$ returnedResults.putAll(processResultSet(cs.getResultSet(), undeclaredRsParam))[ FD ]
Line_26 $$ if (updateCountParameters != null && updateCountParameters.size() > updateIndex) -->Line_29 $$ returnedResults.put(declaredUcName, updateCount)[ CD ]
