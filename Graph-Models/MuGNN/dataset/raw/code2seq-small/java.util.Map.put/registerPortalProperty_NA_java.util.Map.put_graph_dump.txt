Line_4 $$ for (String authTokenIgnoreAction : PropsValues.AUTH_TOKEN_IGNORE_ACTIONS) -->Line_6 $$ properties.put(PropsKeys.AUTH_TOKEN_IGNORE_ACTIONS, authTokenIgnoreAction)[ FD ]
Line_3 $$ Registry registry = RegistryUtil.getRegistry()-->Line_8 $$ ServiceRegistration<Object> serviceRegistration = registry.registerService(Object.class, new Object(), properties)[ FD ]
Line_5 $$ Map<String, Object> properties = new HashMap()-->Line_7 $$ properties.put("objectClass", Object.class.getName())[ FD ]
Line_5 $$ Map<String, Object> properties = new HashMap()-->Line_8 $$ ServiceRegistration<Object> serviceRegistration = registry.registerService(Object.class, new Object(), properties)[ FD ]
Line_4 $$ for (String authTokenIgnoreAction : PropsValues.AUTH_TOKEN_IGNORE_ACTIONS) -->Line_9 $$ _serviceRegistrations.put(authTokenIgnoreAction, serviceRegistration)[ FD ]
Line_5 $$ Map<String, Object> properties = new HashMap()-->Line_6 $$ properties.put(PropsKeys.AUTH_TOKEN_IGNORE_ACTIONS, authTokenIgnoreAction)[ FD ]
Line_8 $$ ServiceRegistration<Object> serviceRegistration = registry.registerService(Object.class, new Object(), properties)-->Line_9 $$ _serviceRegistrations.put(authTokenIgnoreAction, serviceRegistration)[ FD ]
Line_2 $$ protected void registerPortalProperty() -->Line_3 $$ Registry registry = RegistryUtil.getRegistry()[ CD ]
