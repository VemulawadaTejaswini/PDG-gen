Line_16 $$ for (String toolName : myUninstalledInspectionsSettings.keySet()) -->Line_24 $$ Element toolElement = myUninstalledInspectionsSettings.get(toolName)[ FD ]
Line_15 $$ diffMap = new TreeMap<String, Boolean>(diffMap)-->Line_19 $$ for (String toolName : diffMap.keySet()) [ FD ]
Line_13 $$ Map<String, Boolean> diffMap = getDisplayLevelMap()-->Line_15 $$ diffMap = new TreeMap<String, Boolean>(diffMap)[ FD ]
Line_20 $$ if (!myLockedProfile && diffMap.get(toolName).booleanValue()) -->Line_21 $$ markSettingsMerged(toolName, element)[ CD ]
Line_2 $$ public void serializeInto(@NotNull Element element, boolean preserveCompatibility) -->Line_3 $$ element.setAttribute(VERSION_TAG, VALID_VERSION)[ CD ]
Line_15 $$ diffMap = new TreeMap<String, Boolean>(diffMap)-->Line_20 $$ if (!myLockedProfile && diffMap.get(toolName).booleanValue()) [ FD ]
Line_24 $$ Element toolElement = myUninstalledInspectionsSettings.get(toolName)-->Line_25 $$ if (toolElement == null) [ FD ]
Line_25 $$ if (toolElement == null) -->Line_29 $$ inspectionElement.setAttribute(CLASS_TAG, toolName)[ CD ]
Line_16 $$ for (String toolName : myUninstalledInspectionsSettings.keySet()) -->Line_26 $$ ToolsImpl toolList = myTools.get(toolName)[ FD ]
Line_28 $$ Element inspectionElement = new Element(INSPECTION_TOOL_TAG)-->Line_29 $$ inspectionElement.setAttribute(CLASS_TAG, toolName)[ FD ]
Line_16 $$ for (String toolName : myUninstalledInspectionsSettings.keySet()) -->Line_21 $$ markSettingsMerged(toolName, element)[ FD ]
Line_2 $$ public void serializeInto(@NotNull Element element, boolean preserveCompatibility) -->Line_8 $$ element.addContent(el.clone())[ FD ]
Line_25 $$ if (toolElement == null) -->Line_36 $$ if (!areSettingsMerged(toolName, inspectionElement)) [ CD ]
Line_2 $$ public void serializeInto(@NotNull Element element, boolean preserveCompatibility) -->Line_40 $$ element.addContent(toolElement.clone())[ FD ]
Line_13 $$ Map<String, Boolean> diffMap = getDisplayLevelMap()-->Line_17 $$ diffMap.put(toolName, false)[ FD ]
Line_13 $$ Map<String, Boolean> diffMap = getDisplayLevelMap()-->Line_19 $$ for (String toolName : diffMap.keySet()) [ FD ]
Line_2 $$ public void serializeInto(@NotNull Element element, boolean preserveCompatibility) -->Line_13 $$ Map<String, Boolean> diffMap = getDisplayLevelMap()[ CD ]
Line_16 $$ for (String toolName : myUninstalledInspectionsSettings.keySet()) -->Line_36 $$ if (!areSettingsMerged(toolName, inspectionElement)) [ FD ]
Line_13 $$ Map<String, Boolean> diffMap = getDisplayLevelMap()-->Line_20 $$ if (!myLockedProfile && diffMap.get(toolName).booleanValue()) [ FD ]
Line_25 $$ if (toolElement == null) -->Line_26 $$ ToolsImpl toolList = myTools.get(toolName)[ CD ]
Line_7 $$ for (Element el : myUninstalledInspectionsSettings.values()) -->Line_8 $$ element.addContent(el.clone())[ FD ]
Line_26 $$ ToolsImpl toolList = myTools.get(toolName)-->Line_31 $$ toolList.writeExternal(inspectionElement)[ FD ]
Line_25 $$ if (toolElement == null) -->Line_40 $$ element.addContent(toolElement.clone())[ CD ]
Line_16 $$ for (String toolName : myUninstalledInspectionsSettings.keySet()) -->Line_20 $$ if (!myLockedProfile && diffMap.get(toolName).booleanValue()) [ FD ]
Line_13 $$ Map<String, Boolean> diffMap = getDisplayLevelMap()-->Line_14 $$ if (diffMap != null) [ FD ]
Line_16 $$ for (String toolName : myUninstalledInspectionsSettings.keySet()) -->Line_29 $$ inspectionElement.setAttribute(CLASS_TAG, toolName)[ FD ]
Line_15 $$ diffMap = new TreeMap<String, Boolean>(diffMap)-->Line_17 $$ diffMap.put(toolName, false)[ FD ]
Line_28 $$ Element inspectionElement = new Element(INSPECTION_TOOL_TAG)-->Line_31 $$ toolList.writeExternal(inspectionElement)[ FD ]
Line_2 $$ public void serializeInto(@NotNull Element element, boolean preserveCompatibility) -->Line_37 $$ element.addContent(inspectionElement)[ FD ]
Line_28 $$ Element inspectionElement = new Element(INSPECTION_TOOL_TAG)-->Line_37 $$ element.addContent(inspectionElement)[ FD ]
Line_2 $$ public void serializeInto(@NotNull Element element, boolean preserveCompatibility) -->Line_14 $$ if (diffMap != null) [ CD ]
Line_14 $$ if (diffMap != null) -->Line_15 $$ diffMap = new TreeMap<String, Boolean>(diffMap)[ CD ]
Line_2 $$ public void serializeInto(@NotNull Element element, boolean preserveCompatibility) -->Line_4 $$ super.serializeInto(element, preserveCompatibility)[ FD ]
Line_2 $$ public void serializeInto(@NotNull Element element, boolean preserveCompatibility) -->Line_3 $$ element.setAttribute(VERSION_TAG, VALID_VERSION)[ FD ]
Line_16 $$ for (String toolName : myUninstalledInspectionsSettings.keySet()) -->Line_17 $$ diffMap.put(toolName, false)[ FD ]
Line_2 $$ public void serializeInto(@NotNull Element element, boolean preserveCompatibility) -->Line_4 $$ super.serializeInto(element, preserveCompatibility)[ CD ]
Line_2 $$ public void serializeInto(@NotNull Element element, boolean preserveCompatibility) -->Line_21 $$ markSettingsMerged(toolName, element)[ FD ]
Line_25 $$ if (toolElement == null) -->Line_28 $$ Element inspectionElement = new Element(INSPECTION_TOOL_TAG)[ CD ]
Line_36 $$ if (!areSettingsMerged(toolName, inspectionElement)) -->Line_37 $$ element.addContent(inspectionElement)[ CD ]
Line_24 $$ Element toolElement = myUninstalledInspectionsSettings.get(toolName)-->Line_40 $$ element.addContent(toolElement.clone())[ FD ]
Line_6 $$ if (!myInitialized) -->Line_10 $$ return[ CD ]
Line_25 $$ if (toolElement == null) -->Line_27 $$ LOG.assertTrue(toolList != null)[ CD ]
Line_28 $$ Element inspectionElement = new Element(INSPECTION_TOOL_TAG)-->Line_36 $$ if (!areSettingsMerged(toolName, inspectionElement)) [ FD ]
