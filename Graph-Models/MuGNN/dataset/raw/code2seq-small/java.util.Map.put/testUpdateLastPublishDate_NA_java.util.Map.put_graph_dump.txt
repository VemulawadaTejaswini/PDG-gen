Line_10 $$ PortletPreferences portletPreferences = PortletPreferencesFactoryUtil.getStrictPortletSetup(layout, getPortletId())-->Line_20 $$ portletPreferences = PortletPreferencesFactoryUtil.getStrictPortletSetup(layout, getPortletId())[ FD ]
Line_2 $$ public void testUpdateLastPublishDate() throws Exception -->Line_13 $$ Map<String, String[]> exportParameterMap = new LinkedHashMap()[ CD ]
Line_2 $$ public void testUpdateLastPublishDate() throws Exception -->Line_12 $$ portletPreferences.store()[ CD ]
Line_2 $$ public void testUpdateLastPublishDate() throws Exception -->Line_6 $$ if (stagedModel == null) [ CD ]
Line_3 $$ Date lastPublishDate = new Date(System.currentTimeMillis() - Time.HOUR)-->Line_11 $$ portletPreferences.setValue("last-publish-date", String.valueOf(lastPublishDate.getTime()))[ FD ]
Line_20 $$ portletPreferences = PortletPreferencesFactoryUtil.getStrictPortletSetup(layout, getPortletId())-->Line_21 $$ Date newLastPublishDate = ExportImportDateUtil.getLastPublishDate(portletPreferences)[ FD ]
Line_5 $$ StagedModel stagedModel = addStagedModel(group.getGroupId(), stagedModelCreationDate)-->Line_23 $$ StagedModel importedStagedModel = getStagedModel(getStagedModelUuid(stagedModel), importedGroup.getGroupId())[ FD ]
Line_5 $$ StagedModel stagedModel = addStagedModel(group.getGroupId(), stagedModelCreationDate)-->Line_6 $$ if (stagedModel == null) [ FD ]
Line_13 $$ Map<String, String[]> exportParameterMap = new LinkedHashMap()-->Line_14 $$ exportParameterMap.put(PortletDataHandlerKeys.UPDATE_LAST_PUBLISH_DATE, new String[] [ FD ]
Line_2 $$ public void testUpdateLastPublishDate() throws Exception -->Line_23 $$ StagedModel importedStagedModel = getStagedModel(getStagedModelUuid(stagedModel), importedGroup.getGroupId())[ CD ]
Line_2 $$ public void testUpdateLastPublishDate() throws Exception -->Line_22 $$ Assert.assertTrue(newLastPublishDate.after(oldLastPublishDate))[ CD ]
Line_2 $$ public void testUpdateLastPublishDate() throws Exception -->Line_24 $$ Assert.assertNotNull(importedStagedModel)[ CD ]
Line_2 $$ public void testUpdateLastPublishDate() throws Exception -->Line_16 $$ Map<String, String[]> importParameterMap = new LinkedHashMap()[ CD ]
Line_10 $$ PortletPreferences portletPreferences = PortletPreferencesFactoryUtil.getStrictPortletSetup(layout, getPortletId())-->Line_18 $$ Date oldLastPublishDate = ExportImportDateUtil.getLastPublishDate(portletPreferences)[ FD ]
Line_16 $$ Map<String, String[]> importParameterMap = new LinkedHashMap()-->Line_19 $$ exportImportPortlet(getPortletId(), exportParameterMap, importParameterMap)[ FD ]
Line_10 $$ PortletPreferences portletPreferences = PortletPreferencesFactoryUtil.getStrictPortletSetup(layout, getPortletId())-->Line_21 $$ Date newLastPublishDate = ExportImportDateUtil.getLastPublishDate(portletPreferences)[ FD ]
Line_4 $$ Date stagedModelCreationDate = new Date(lastPublishDate.getTime() + Time.MINUTE)-->Line_5 $$ StagedModel stagedModel = addStagedModel(group.getGroupId(), stagedModelCreationDate)[ FD ]
Line_2 $$ public void testUpdateLastPublishDate() throws Exception -->Line_18 $$ Date oldLastPublishDate = ExportImportDateUtil.getLastPublishDate(portletPreferences)[ CD ]
Line_23 $$ StagedModel importedStagedModel = getStagedModel(getStagedModelUuid(stagedModel), importedGroup.getGroupId())-->Line_24 $$ Assert.assertNotNull(importedStagedModel)[ FD ]
Line_17 $$ portletPreferences = PortletPreferencesFactoryUtil.getStrictPortletSetup(layout, getPortletId())-->Line_21 $$ Date newLastPublishDate = ExportImportDateUtil.getLastPublishDate(portletPreferences)[ FD ]
Line_10 $$ PortletPreferences portletPreferences = PortletPreferencesFactoryUtil.getStrictPortletSetup(layout, getPortletId())-->Line_17 $$ portletPreferences = PortletPreferencesFactoryUtil.getStrictPortletSetup(layout, getPortletId())[ FD ]
Line_18 $$ Date oldLastPublishDate = ExportImportDateUtil.getLastPublishDate(portletPreferences)-->Line_22 $$ Assert.assertTrue(newLastPublishDate.after(oldLastPublishDate))[ FD ]
Line_13 $$ Map<String, String[]> exportParameterMap = new LinkedHashMap()-->Line_19 $$ exportImportPortlet(getPortletId(), exportParameterMap, importParameterMap)[ FD ]
Line_6 $$ if (stagedModel == null) -->Line_7 $$ return[ CD ]
Line_17 $$ portletPreferences = PortletPreferencesFactoryUtil.getStrictPortletSetup(layout, getPortletId())-->Line_18 $$ Date oldLastPublishDate = ExportImportDateUtil.getLastPublishDate(portletPreferences)[ FD ]
Line_3 $$ Date lastPublishDate = new Date(System.currentTimeMillis() - Time.HOUR)-->Line_4 $$ Date stagedModelCreationDate = new Date(lastPublishDate.getTime() + Time.MINUTE)[ FD ]
Line_2 $$ public void testUpdateLastPublishDate() throws Exception -->Line_19 $$ exportImportPortlet(getPortletId(), exportParameterMap, importParameterMap)[ CD ]
Line_10 $$ PortletPreferences portletPreferences = PortletPreferencesFactoryUtil.getStrictPortletSetup(layout, getPortletId())-->Line_11 $$ portletPreferences.setValue("last-publish-date", String.valueOf(lastPublishDate.getTime()))[ FD ]
Line_21 $$ Date newLastPublishDate = ExportImportDateUtil.getLastPublishDate(portletPreferences)-->Line_22 $$ Assert.assertTrue(newLastPublishDate.after(oldLastPublishDate))[ FD ]
Line_2 $$ public void testUpdateLastPublishDate() throws Exception -->Line_14 $$ exportParameterMap.put(PortletDataHandlerKeys.UPDATE_LAST_PUBLISH_DATE, new String[] [ CD ]
Line_17 $$ portletPreferences = PortletPreferencesFactoryUtil.getStrictPortletSetup(layout, getPortletId())-->Line_20 $$ portletPreferences = PortletPreferencesFactoryUtil.getStrictPortletSetup(layout, getPortletId())[ FD ]
Line_2 $$ public void testUpdateLastPublishDate() throws Exception -->Line_21 $$ Date newLastPublishDate = ExportImportDateUtil.getLastPublishDate(portletPreferences)[ CD ]
Line_2 $$ public void testUpdateLastPublishDate() throws Exception -->Line_10 $$ PortletPreferences portletPreferences = PortletPreferencesFactoryUtil.getStrictPortletSetup(layout, getPortletId())[ CD ]
Line_10 $$ PortletPreferences portletPreferences = PortletPreferencesFactoryUtil.getStrictPortletSetup(layout, getPortletId())-->Line_12 $$ portletPreferences.store()[ FD ]
Line_2 $$ public void testUpdateLastPublishDate() throws Exception -->Line_11 $$ portletPreferences.setValue("last-publish-date", String.valueOf(lastPublishDate.getTime()))[ CD ]
Line_2 $$ public void testUpdateLastPublishDate() throws Exception -->Line_5 $$ StagedModel stagedModel = addStagedModel(group.getGroupId(), stagedModelCreationDate)[ CD ]
Line_2 $$ public void testUpdateLastPublishDate() throws Exception -->Line_4 $$ Date stagedModelCreationDate = new Date(lastPublishDate.getTime() + Time.MINUTE)[ CD ]
Line_13 $$ Map<String, String[]> exportParameterMap = new LinkedHashMap()-->Line_15 $$ exportParameterMap.put("range", new String[] [ FD ]
Line_2 $$ public void testUpdateLastPublishDate() throws Exception -->Line_20 $$ portletPreferences = PortletPreferencesFactoryUtil.getStrictPortletSetup(layout, getPortletId())[ CD ]
Line_2 $$ public void testUpdateLastPublishDate() throws Exception -->Line_17 $$ portletPreferences = PortletPreferencesFactoryUtil.getStrictPortletSetup(layout, getPortletId())[ CD ]
Line_2 $$ public void testUpdateLastPublishDate() throws Exception -->Line_9 $$ LayoutTestUtil.addPortletToLayout(TestPropsValues.getUserId(), layout, getPortletId(), "column-1", new HashMap<String, String[]>())[ CD ]
Line_2 $$ public void testUpdateLastPublishDate() throws Exception -->Line_15 $$ exportParameterMap.put("range", new String[] [ CD ]
Line_2 $$ public void testUpdateLastPublishDate() throws Exception -->Line_3 $$ Date lastPublishDate = new Date(System.currentTimeMillis() - Time.HOUR)[ CD ]
