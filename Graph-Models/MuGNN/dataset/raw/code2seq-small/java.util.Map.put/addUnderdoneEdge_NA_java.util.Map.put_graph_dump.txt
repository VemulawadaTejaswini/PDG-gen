Line_2 $$ private void addUnderdoneEdge(int upNodeIndex, CommitId downCommitId) -->Line_3 $$ List<Integer> upNodes = upAdjacentNodes.get(downCommitId)[ FD ]
Line_4 $$ if (upNodes == null) -->Line_5 $$ upNodes = new SmartList<Integer>()[ CD ]
Line_2 $$ private void addUnderdoneEdge(int upNodeIndex, CommitId downCommitId) -->Line_4 $$ if (upNodes == null) [ CD ]
Line_5 $$ upNodes = new SmartList<Integer>()-->Line_6 $$ upAdjacentNodes.put(downCommitId, upNodes)[ FD ]
Line_3 $$ List<Integer> upNodes = upAdjacentNodes.get(downCommitId)-->Line_5 $$ upNodes = new SmartList<Integer>()[ FD ]
Line_2 $$ private void addUnderdoneEdge(int upNodeIndex, CommitId downCommitId) -->Line_6 $$ upAdjacentNodes.put(downCommitId, upNodes)[ FD ]
Line_2 $$ private void addUnderdoneEdge(int upNodeIndex, CommitId downCommitId) -->Line_8 $$ upNodes.add(upNodeIndex)[ CD ]
Line_2 $$ private void addUnderdoneEdge(int upNodeIndex, CommitId downCommitId) -->Line_8 $$ upNodes.add(upNodeIndex)[ FD ]
Line_2 $$ private void addUnderdoneEdge(int upNodeIndex, CommitId downCommitId) -->Line_3 $$ List<Integer> upNodes = upAdjacentNodes.get(downCommitId)[ CD ]
Line_3 $$ List<Integer> upNodes = upAdjacentNodes.get(downCommitId)-->Line_8 $$ upNodes.add(upNodeIndex)[ FD ]
Line_4 $$ if (upNodes == null) -->Line_6 $$ upAdjacentNodes.put(downCommitId, upNodes)[ CD ]
Line_3 $$ List<Integer> upNodes = upAdjacentNodes.get(downCommitId)-->Line_6 $$ upAdjacentNodes.put(downCommitId, upNodes)[ FD ]
Line_5 $$ upNodes = new SmartList<Integer>()-->Line_8 $$ upNodes.add(upNodeIndex)[ FD ]
Line_3 $$ List<Integer> upNodes = upAdjacentNodes.get(downCommitId)-->Line_4 $$ if (upNodes == null) [ FD ]
