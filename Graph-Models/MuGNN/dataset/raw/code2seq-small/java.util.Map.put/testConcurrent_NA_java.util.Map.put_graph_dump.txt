Line_2 $$ public void testConcurrent() throws Exception -->Line_35 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin()[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_12 $$ foo.put("name", "Foo")[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_24 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin()[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_37 $$ s1.createCriteria("Item").list()[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_19 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit()[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_32 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().resume(tx)[ CD ]
Line_57 $$ s = openSession()-->Line_58 $$ s.createQuery("delete from Item").executeUpdate()[ FD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_58 $$ s.createQuery("delete from Item").executeUpdate()[ CD ]
Line_11 $$ Map foo = new HashMap()-->Line_26 $$ foo = (Map) s1.get("Item", "Foo")[ FD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_28 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin()[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_10 $$ Session s = openSession()[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_4 $$ assertEquals(0, sessionFactory().getStatistics().getUpdateTimestampsCacheHitCount())[ CD ]
Line_11 $$ Map foo = new HashMap()-->Line_12 $$ foo.put("name", "Foo")[ FD ]
Line_10 $$ Session s = openSession()-->Line_14 $$ s.persist("Item", foo)[ FD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_27 $$ Transaction tx = TestingJtaPlatformImpl.INSTANCE.getTransactionManager().suspend()[ CD ]
Line_15 $$ Map bar = new HashMap()-->Line_16 $$ bar.put("name", "Bar")[ FD ]
Line_27 $$ Transaction tx = TestingJtaPlatformImpl.INSTANCE.getTransactionManager().suspend()-->Line_38 $$ tx = TestingJtaPlatformImpl.INSTANCE.getTransactionManager().suspend()[ FD ]
Line_27 $$ Transaction tx = TestingJtaPlatformImpl.INSTANCE.getTransactionManager().suspend()-->Line_32 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().resume(tx)[ FD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_44 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit()[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_7 $$ assertNotNull(sessionFactory().getEntityPersister("Item").getCacheAccessStrategy())[ CD ]
Line_29 $$ Session s2 = openSession()-->Line_47 $$ s2.createCriteria("Item").list()[ FD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_31 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit()[ CD ]
Line_11 $$ Map foo = new HashMap()-->Line_13 $$ foo.put("description", "a big foo")[ FD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_56 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin()[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_5 $$ assertEquals(0, sessionFactory().getStatistics().getUpdateTimestampsCachePutCount())[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_46 $$ s2 = openSession()[ CD ]
Line_29 $$ Session s2 = openSession()-->Line_40 $$ s2 = openSession()[ FD ]
Line_40 $$ s2 = openSession()-->Line_47 $$ s2.createCriteria("Item").list()[ FD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_43 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().resume(tx)[ CD ]
Line_40 $$ s2 = openSession()-->Line_46 $$ s2 = openSession()[ FD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_39 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin()[ CD ]
Line_11 $$ Map foo = new HashMap()-->Line_30 $$ foo = (Map) s2.get("Item", "Foo")[ FD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_36 $$ s1 = openSession()[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_42 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit()[ CD ]
Line_38 $$ tx = TestingJtaPlatformImpl.INSTANCE.getTransactionManager().suspend()-->Line_43 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().resume(tx)[ FD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_50 $$ assertEquals(0, sessionFactory().getStatistics().getEntityFetchCount())[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_34 $$ sessionFactory().getCache().evictEntityRegion("Item")[ CD ]
Line_36 $$ s1 = openSession()-->Line_37 $$ s1.createCriteria("Item").list()[ FD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_6 $$ assertEquals(0, sessionFactory().getStatistics().getUpdateTimestampsCacheMissCount())[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_26 $$ foo = (Map) s1.get("Item", "Foo")[ CD ]
Line_10 $$ Session s = openSession()-->Line_18 $$ s.persist("Item", bar)[ FD ]
Line_26 $$ foo = (Map) s1.get("Item", "Foo")-->Line_30 $$ foo = (Map) s2.get("Item", "Foo")[ FD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_23 $$ sessionFactory().getCache().evictEntityRegion("Item")[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_16 $$ bar.put("name", "Bar")[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_47 $$ s2.createCriteria("Item").list()[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_38 $$ tx = TestingJtaPlatformImpl.INSTANCE.getTransactionManager().suspend()[ CD ]
Line_25 $$ Session s1 = openSession()-->Line_37 $$ s1.createCriteria("Item").list()[ FD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_49 $$ assertEquals(7, sessionFactory().getStatistics().getEntityLoadCount())[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_11 $$ Map foo = new HashMap()[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_51 $$ assertEquals(3, sessionFactory().getStatistics().getQueryExecutionCount())[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_52 $$ assertEquals(0, sessionFactory().getStatistics().getQueryCacheHitCount())[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_17 $$ bar.put("description", "a small bar")[ CD ]
Line_46 $$ s2 = openSession()-->Line_47 $$ s2.createCriteria("Item").list()[ FD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_57 $$ s = openSession()[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_22 $$ assertEquals(0, sessionFactory().getStatistics().getUpdateTimestampsCacheMissCount())[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_15 $$ Map bar = new HashMap()[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_33 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit()[ CD ]
Line_29 $$ Session s2 = openSession()-->Line_46 $$ s2 = openSession()[ FD ]
Line_10 $$ Session s = openSession()-->Line_57 $$ s = openSession()[ FD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_54 $$ assertEquals(0, sessionFactory().getStatistics().getUpdateTimestampsCacheHitCount())[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_41 $$ s2.createCriteria("Item").list()[ CD ]
Line_29 $$ Session s2 = openSession()-->Line_30 $$ foo = (Map) s2.get("Item", "Foo")[ FD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_40 $$ s2 = openSession()[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_8 $$ assertEquals(0, sessionFactory().getStatistics().getEntityLoadCount())[ CD ]
Line_15 $$ Map bar = new HashMap()-->Line_18 $$ s.persist("Item", bar)[ FD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_55 $$ assertEquals(2, sessionFactory().getStatistics().getUpdateTimestampsCachePutCount())[ CD ]
Line_15 $$ Map bar = new HashMap()-->Line_17 $$ bar.put("description", "a small bar")[ FD ]
Line_40 $$ s2 = openSession()-->Line_41 $$ s2.createCriteria("Item").list()[ FD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_48 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit()[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_21 $$ assertEquals(2, sessionFactory().getStatistics().getUpdateTimestampsCachePutCount())[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_14 $$ s.persist("Item", foo)[ CD ]
Line_25 $$ Session s1 = openSession()-->Line_26 $$ foo = (Map) s1.get("Item", "Foo")[ FD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_25 $$ Session s1 = openSession()[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_45 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin()[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_29 $$ Session s2 = openSession()[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_18 $$ s.persist("Item", bar)[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_13 $$ foo.put("description", "a big foo")[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_20 $$ assertEquals(0, sessionFactory().getStatistics().getUpdateTimestampsCacheHitCount())[ CD ]
Line_27 $$ Transaction tx = TestingJtaPlatformImpl.INSTANCE.getTransactionManager().suspend()-->Line_43 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().resume(tx)[ FD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_3 $$ sessionFactory().getStatistics().clear()[ CD ]
Line_29 $$ Session s2 = openSession()-->Line_41 $$ s2.createCriteria("Item").list()[ FD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_30 $$ foo = (Map) s2.get("Item", "Foo")[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_53 $$ assertEquals(0, sessionFactory().getStatistics().getQueryCacheMissCount())[ CD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_9 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin()[ CD ]
Line_25 $$ Session s1 = openSession()-->Line_36 $$ s1 = openSession()[ FD ]
Line_10 $$ Session s = openSession()-->Line_58 $$ s.createQuery("delete from Item").executeUpdate()[ FD ]
Line_11 $$ Map foo = new HashMap()-->Line_14 $$ s.persist("Item", foo)[ FD ]
Line_2 $$ public void testConcurrent() throws Exception -->Line_59 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit()[ CD ]
