Line_2 $$ private boolean checkEntry(String entryName, String file) -->Line_5 $$ mapArchiveEntries.put(file, set = new HashSet<String>())[ FD ]
Line_2 $$ private boolean checkEntry(String entryName, String file) -->Line_12 $$ return added[ CD ]
Line_2 $$ private boolean checkEntry(String entryName, String file) -->Line_4 $$ if (set == null) [ CD ]
Line_5 $$ mapArchiveEntries.put(file, set = new HashSet<String>())-->Line_7 $$ boolean added = set.add(entryName)[ FD ]
Line_2 $$ private boolean checkEntry(String entryName, String file) -->Line_7 $$ boolean added = set.add(entryName)[ FD ]
Line_3 $$ Set<String> set = mapArchiveEntries.get(file)-->Line_5 $$ mapArchiveEntries.put(file, set = new HashSet<String>())[ FD ]
Line_2 $$ private boolean checkEntry(String entryName, String file) -->Line_3 $$ Set<String> set = mapArchiveEntries.get(file)[ FD ]
Line_4 $$ if (set == null) -->Line_5 $$ mapArchiveEntries.put(file, set = new HashSet<String>())[ CD ]
Line_2 $$ private boolean checkEntry(String entryName, String file) -->Line_7 $$ boolean added = set.add(entryName)[ CD ]
Line_3 $$ Set<String> set = mapArchiveEntries.get(file)-->Line_4 $$ if (set == null) [ FD ]
Line_3 $$ Set<String> set = mapArchiveEntries.get(file)-->Line_7 $$ boolean added = set.add(entryName)[ FD ]
Line_2 $$ private boolean checkEntry(String entryName, String file) -->Line_3 $$ Set<String> set = mapArchiveEntries.get(file)[ CD ]
Line_2 $$ private boolean checkEntry(String entryName, String file) -->Line_8 $$ if (!added) [ CD ]
Line_7 $$ boolean added = set.add(entryName)-->Line_8 $$ if (!added) [ FD ]
Line_8 $$ if (!added) -->Line_9 $$ String message = "Zip entry " + entryName + " already exists in " + file[ CD ]
Line_8 $$ if (!added) -->Line_10 $$ DecompilerContext.getLogger().writeMessage(message, IFernflowerLogger.Severity.WARN)[ CD ]
Line_9 $$ String message = "Zip entry " + entryName + " already exists in " + file-->Line_10 $$ DecompilerContext.getLogger().writeMessage(message, IFernflowerLogger.Severity.WARN)[ FD ]
