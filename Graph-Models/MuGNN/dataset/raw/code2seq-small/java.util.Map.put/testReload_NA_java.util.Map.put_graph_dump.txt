Line_8 $$ ReloadingX509TrustManager tm = new ReloadingX509TrustManager("jks", truststoreLocation, "password", 10)-->Line_21 $$ tm.destroy()[ FD ]
Line_2 $$ public void testReload() throws Exception -->Line_8 $$ ReloadingX509TrustManager tm = new ReloadingX509TrustManager("jks", truststoreLocation, "password", 10)[ CD ]
Line_2 $$ public void testReload() throws Exception -->Line_6 $$ String truststoreLocation = BASEDIR + "/testreload.jks"[ CD ]
Line_13 $$ Map<String, X509Certificate> certs = new HashMap<String, X509Certificate>()-->Line_16 $$ createTrustStore(truststoreLocation, "password", certs)[ FD ]
Line_2 $$ public void testReload() throws Exception -->Line_3 $$ KeyPair kp = generateKeyPair("RSA")[ CD ]
Line_3 $$ KeyPair kp = generateKeyPair("RSA")-->Line_5 $$ cert2 = generateCertificate("CN=Cert2", kp, 30, "SHA1withRSA")[ FD ]
Line_2 $$ public void testReload() throws Exception -->Line_5 $$ cert2 = generateCertificate("CN=Cert2", kp, 30, "SHA1withRSA")[ CD ]
Line_8 $$ ReloadingX509TrustManager tm = new ReloadingX509TrustManager("jks", truststoreLocation, "password", 10)-->Line_11 $$ assertEquals(1, tm.getAcceptedIssuers().length)[ FD ]
Line_8 $$ ReloadingX509TrustManager tm = new ReloadingX509TrustManager("jks", truststoreLocation, "password", 10)-->Line_19 $$ assertEquals(2, tm.getAcceptedIssuers().length)[ FD ]
Line_6 $$ String truststoreLocation = BASEDIR + "/testreload.jks"-->Line_16 $$ createTrustStore(truststoreLocation, "password", certs)[ FD ]
Line_2 $$ public void testReload() throws Exception -->Line_7 $$ createTrustStore(truststoreLocation, "password", "cert1", cert1)[ CD ]
Line_6 $$ String truststoreLocation = BASEDIR + "/testreload.jks"-->Line_7 $$ createTrustStore(truststoreLocation, "password", "cert1", cert1)[ FD ]
Line_2 $$ public void testReload() throws Exception -->Line_4 $$ cert1 = generateCertificate("CN=Cert1", kp, 30, "SHA1withRSA")[ CD ]
Line_8 $$ ReloadingX509TrustManager tm = new ReloadingX509TrustManager("jks", truststoreLocation, "password", 10)-->Line_17 $$ assertEquals(10, tm.getReloadInterval())[ FD ]
Line_3 $$ KeyPair kp = generateKeyPair("RSA")-->Line_4 $$ cert1 = generateCertificate("CN=Cert1", kp, 30, "SHA1withRSA")[ FD ]
Line_13 $$ Map<String, X509Certificate> certs = new HashMap<String, X509Certificate>()-->Line_15 $$ certs.put("cert2", cert2)[ FD ]
Line_8 $$ ReloadingX509TrustManager tm = new ReloadingX509TrustManager("jks", truststoreLocation, "password", 10)-->Line_12 $$ Thread.sleep((tm.getReloadInterval() + 1000))[ FD ]
Line_13 $$ Map<String, X509Certificate> certs = new HashMap<String, X509Certificate>()-->Line_14 $$ certs.put("cert1", cert1)[ FD ]
Line_8 $$ ReloadingX509TrustManager tm = new ReloadingX509TrustManager("jks", truststoreLocation, "password", 10)-->Line_10 $$ tm.init()[ FD ]
Line_8 $$ ReloadingX509TrustManager tm = new ReloadingX509TrustManager("jks", truststoreLocation, "password", 10)-->Line_18 $$ Thread.sleep((tm.getReloadInterval() + 200))[ FD ]
