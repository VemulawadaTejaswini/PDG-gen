Line_10 $$ Path dataPath = NodeEnvironment.shardStatePathToDataPath(shard.shardPath().getShardStatePath())-->Line_11 $$ Long curBytes = reservedBytes.get(dataPath)[ FD ]
Line_11 $$ Long curBytes = reservedBytes.get(dataPath)-->Line_12 $$ if (curBytes == null) [ FD ]
Line_2 $$ private static Map<Path, Long> getEstimatedReservedBytes(NodeEnvironment env, long avgShardSizeInBytes, Iterable<IndexShard> shards) throws IOException -->Line_7 $$ long estShardSizeInBytes = Math.max(avgShardSizeInBytes, (long) (totFreeSpace / 20.0))[ CD ]
Line_2 $$ private static Map<Path, Long> getEstimatedReservedBytes(NodeEnvironment env, long avgShardSizeInBytes, Iterable<IndexShard> shards) throws IOException -->Line_7 $$ long estShardSizeInBytes = Math.max(avgShardSizeInBytes, (long) (totFreeSpace / 20.0))[ FD ]
Line_8 $$ Map<Path, Long> reservedBytes = new HashMap()-->Line_11 $$ Long curBytes = reservedBytes.get(dataPath)[ FD ]
Line_10 $$ Path dataPath = NodeEnvironment.shardStatePathToDataPath(shard.shardPath().getShardStatePath())-->Line_15 $$ reservedBytes.put(dataPath, curBytes + estShardSizeInBytes)[ FD ]
Line_2 $$ private static Map<Path, Long> getEstimatedReservedBytes(NodeEnvironment env, long avgShardSizeInBytes, Iterable<IndexShard> shards) throws IOException -->Line_17 $$ return reservedBytes[ CD ]
Line_9 $$ for (IndexShard shard : shards) -->Line_10 $$ Path dataPath = NodeEnvironment.shardStatePathToDataPath(shard.shardPath().getShardStatePath())[ FD ]
Line_12 $$ if (curBytes == null) -->Line_13 $$ curBytes = 0L[ CD ]
Line_3 $$ long totFreeSpace = 0-->Line_5 $$ totFreeSpace += nodePath.fileStore.getUsableSpace()[ FD ]
Line_11 $$ Long curBytes = reservedBytes.get(dataPath)-->Line_13 $$ curBytes = 0L[ FD ]
Line_2 $$ private static Map<Path, Long> getEstimatedReservedBytes(NodeEnvironment env, long avgShardSizeInBytes, Iterable<IndexShard> shards) throws IOException -->Line_3 $$ long totFreeSpace = 0[ CD ]
Line_2 $$ private static Map<Path, Long> getEstimatedReservedBytes(NodeEnvironment env, long avgShardSizeInBytes, Iterable<IndexShard> shards) throws IOException -->Line_8 $$ Map<Path, Long> reservedBytes = new HashMap()[ CD ]
Line_2 $$ private static Map<Path, Long> getEstimatedReservedBytes(NodeEnvironment env, long avgShardSizeInBytes, Iterable<IndexShard> shards) throws IOException -->Line_4 $$ for (NodeEnvironment.NodePath nodePath : env.nodePaths()) [ FD ]
Line_8 $$ Map<Path, Long> reservedBytes = new HashMap()-->Line_15 $$ reservedBytes.put(dataPath, curBytes + estShardSizeInBytes)[ FD ]
