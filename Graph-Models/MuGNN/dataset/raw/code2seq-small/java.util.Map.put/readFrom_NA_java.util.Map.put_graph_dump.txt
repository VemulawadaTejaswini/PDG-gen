Line_6 $$ for (int i = 0; i < size; i++) -->Line_19 $$ indexMapBuilder.put(index, unmodifiableMap(typeMapBuilder))[ CD ]
Line_10 $$ for (int j = 0; j < typesSize; j++) -->Line_14 $$ for (int k = 0; k < fieldSize; k++) [ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_3 $$ super.readFrom(in)[ FD ]
Line_5 $$ Map<String, Map<String, Map<String, FieldMappingMetaData>>> indexMapBuilder = new HashMap(size)-->Line_19 $$ indexMapBuilder.put(index, unmodifiableMap(typeMapBuilder))[ FD ]
Line_14 $$ for (int k = 0; k < fieldSize; k++) -->Line_15 $$ fieldMapBuilder.put(in.readString(), new FieldMappingMetaData(in.readString(), in.readBytesReference()))[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_6 $$ for (int i = 0; i < size; i++) [ CD ]
Line_11 $$ String type = in.readString()-->Line_17 $$ typeMapBuilder.put(type, unmodifiableMap(fieldMapBuilder))[ FD ]
Line_13 $$ Map<String, FieldMappingMetaData> fieldMapBuilder = new HashMap(fieldSize)-->Line_15 $$ fieldMapBuilder.put(in.readString(), new FieldMappingMetaData(in.readString(), in.readBytesReference()))[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_7 $$ String index = in.readString()[ FD ]
Line_4 $$ int size = in.readVInt()-->Line_6 $$ for (int i = 0; i < size; i++) [ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_11 $$ String type = in.readString()[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_4 $$ int size = in.readVInt()[ CD ]
Line_9 $$ Map<String, Map<String, FieldMappingMetaData>> typeMapBuilder = new HashMap(typesSize)-->Line_17 $$ typeMapBuilder.put(type, unmodifiableMap(fieldMapBuilder))[ FD ]
Line_5 $$ Map<String, Map<String, Map<String, FieldMappingMetaData>>> indexMapBuilder = new HashMap(size)-->Line_21 $$ mappings = unmodifiableMap(indexMapBuilder)[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_3 $$ super.readFrom(in)[ CD ]
Line_9 $$ Map<String, Map<String, FieldMappingMetaData>> typeMapBuilder = new HashMap(typesSize)-->Line_19 $$ indexMapBuilder.put(index, unmodifiableMap(typeMapBuilder))[ FD ]
Line_13 $$ Map<String, FieldMappingMetaData> fieldMapBuilder = new HashMap(fieldSize)-->Line_17 $$ typeMapBuilder.put(type, unmodifiableMap(fieldMapBuilder))[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_15 $$ fieldMapBuilder.put(in.readString(), new FieldMappingMetaData(in.readString(), in.readBytesReference()))[ FD ]
Line_10 $$ for (int j = 0; j < typesSize; j++) -->Line_12 $$ int fieldSize = in.readVInt()[ CD ]
Line_6 $$ for (int i = 0; i < size; i++) -->Line_7 $$ String index = in.readString()[ CD ]
Line_10 $$ for (int j = 0; j < typesSize; j++) -->Line_17 $$ typeMapBuilder.put(type, unmodifiableMap(fieldMapBuilder))[ CD ]
Line_10 $$ for (int j = 0; j < typesSize; j++) -->Line_13 $$ Map<String, FieldMappingMetaData> fieldMapBuilder = new HashMap(fieldSize)[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_5 $$ Map<String, Map<String, Map<String, FieldMappingMetaData>>> indexMapBuilder = new HashMap(size)[ CD ]
Line_12 $$ int fieldSize = in.readVInt()-->Line_14 $$ for (int k = 0; k < fieldSize; k++) [ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_4 $$ int size = in.readVInt()[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_12 $$ int fieldSize = in.readVInt()[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_21 $$ mappings = unmodifiableMap(indexMapBuilder)[ CD ]
Line_10 $$ for (int j = 0; j < typesSize; j++) -->Line_11 $$ String type = in.readString()[ CD ]
Line_7 $$ String index = in.readString()-->Line_19 $$ indexMapBuilder.put(index, unmodifiableMap(typeMapBuilder))[ FD ]
Line_8 $$ int typesSize = in.readVInt()-->Line_10 $$ for (int j = 0; j < typesSize; j++) [ FD ]
Line_6 $$ for (int i = 0; i < size; i++) -->Line_10 $$ for (int j = 0; j < typesSize; j++) [ CD ]
Line_6 $$ for (int i = 0; i < size; i++) -->Line_8 $$ int typesSize = in.readVInt()[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_8 $$ int typesSize = in.readVInt()[ FD ]
Line_6 $$ for (int i = 0; i < size; i++) -->Line_9 $$ Map<String, Map<String, FieldMappingMetaData>> typeMapBuilder = new HashMap(typesSize)[ CD ]
