Line_2 $$ public void testSinglePersistenceUnitFromJndi() -->Line_8 $$ PersistenceAnnotationBeanPostProcessor bpp = new PersistenceAnnotationBeanPostProcessor()[ CD ]
Line_7 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_11 $$ bf.addBeanPostProcessor(bpp)[ FD ]
Line_2 $$ public void testSinglePersistenceUnitFromJndi() -->Line_17 $$ assertSame(mockEmf, bean2.emf)[ CD ]
Line_2 $$ public void testSinglePersistenceUnitFromJndi() -->Line_15 $$ DefaultPublicPersistenceUnitSetterNamedPerson bean2 = (DefaultPublicPersistenceUnitSetterNamedPerson) bf.getBean(DefaultPublicPersistenceUnitSetterNamedPerson.class.getName())[ CD ]
Line_5 $$ ExpectedLookupTemplate jt = new ExpectedLookupTemplate()-->Line_6 $$ jt.addObject("java:comp/env/pu1", mockEmf)[ FD ]
Line_7 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_15 $$ DefaultPublicPersistenceUnitSetterNamedPerson bean2 = (DefaultPublicPersistenceUnitSetterNamedPerson) bf.getBean(DefaultPublicPersistenceUnitSetterNamedPerson.class.getName())[ FD ]
Line_3 $$ Map<String, String> persistenceUnits = new HashMap<String, String>()-->Line_4 $$ persistenceUnits.put("Person", "pu1")[ FD ]
Line_2 $$ public void testSinglePersistenceUnitFromJndi() -->Line_7 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()[ CD ]
Line_2 $$ public void testSinglePersistenceUnitFromJndi() -->Line_4 $$ persistenceUnits.put("Person", "pu1")[ CD ]
Line_2 $$ public void testSinglePersistenceUnitFromJndi() -->Line_6 $$ jt.addObject("java:comp/env/pu1", mockEmf)[ CD ]
Line_5 $$ ExpectedLookupTemplate jt = new ExpectedLookupTemplate()-->Line_10 $$ bpp.setJndiTemplate(jt)[ FD ]
Line_7 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_13 $$ bf.registerBeanDefinition(DefaultPublicPersistenceUnitSetterNamedPerson.class.getName(), new RootBeanDefinition(DefaultPublicPersistenceUnitSetterNamedPerson.class))[ FD ]
Line_2 $$ public void testSinglePersistenceUnitFromJndi() -->Line_13 $$ bf.registerBeanDefinition(DefaultPublicPersistenceUnitSetterNamedPerson.class.getName(), new RootBeanDefinition(DefaultPublicPersistenceUnitSetterNamedPerson.class))[ CD ]
Line_3 $$ Map<String, String> persistenceUnits = new HashMap<String, String>()-->Line_9 $$ bpp.setPersistenceUnits(persistenceUnits)[ FD ]
Line_7 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_14 $$ DefaultPublicPersistenceUnitSetter bean = (DefaultPublicPersistenceUnitSetter) bf.getBean(DefaultPublicPersistenceUnitSetter.class.getName())[ FD ]
Line_8 $$ PersistenceAnnotationBeanPostProcessor bpp = new PersistenceAnnotationBeanPostProcessor()-->Line_9 $$ bpp.setPersistenceUnits(persistenceUnits)[ FD ]
Line_2 $$ public void testSinglePersistenceUnitFromJndi() -->Line_16 $$ assertSame(mockEmf, bean.emf)[ CD ]
Line_2 $$ public void testSinglePersistenceUnitFromJndi() -->Line_10 $$ bpp.setJndiTemplate(jt)[ CD ]
Line_2 $$ public void testSinglePersistenceUnitFromJndi() -->Line_3 $$ Map<String, String> persistenceUnits = new HashMap<String, String>()[ CD ]
Line_2 $$ public void testSinglePersistenceUnitFromJndi() -->Line_9 $$ bpp.setPersistenceUnits(persistenceUnits)[ CD ]
Line_2 $$ public void testSinglePersistenceUnitFromJndi() -->Line_11 $$ bf.addBeanPostProcessor(bpp)[ CD ]
Line_7 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_12 $$ bf.registerBeanDefinition(DefaultPublicPersistenceUnitSetter.class.getName(), new RootBeanDefinition(DefaultPublicPersistenceUnitSetter.class))[ FD ]
Line_8 $$ PersistenceAnnotationBeanPostProcessor bpp = new PersistenceAnnotationBeanPostProcessor()-->Line_11 $$ bf.addBeanPostProcessor(bpp)[ FD ]
Line_2 $$ public void testSinglePersistenceUnitFromJndi() -->Line_12 $$ bf.registerBeanDefinition(DefaultPublicPersistenceUnitSetter.class.getName(), new RootBeanDefinition(DefaultPublicPersistenceUnitSetter.class))[ CD ]
Line_2 $$ public void testSinglePersistenceUnitFromJndi() -->Line_14 $$ DefaultPublicPersistenceUnitSetter bean = (DefaultPublicPersistenceUnitSetter) bf.getBean(DefaultPublicPersistenceUnitSetter.class.getName())[ CD ]
Line_2 $$ public void testSinglePersistenceUnitFromJndi() -->Line_5 $$ ExpectedLookupTemplate jt = new ExpectedLookupTemplate()[ CD ]
Line_8 $$ PersistenceAnnotationBeanPostProcessor bpp = new PersistenceAnnotationBeanPostProcessor()-->Line_10 $$ bpp.setJndiTemplate(jt)[ FD ]
