Line_2 $$ private static File prepareUnfinalizedTestEditLog(File testDir, int numTx, SortedMap<Long, Long> offsetToTxId) throws IOException -->Line_14 $$ offsetToTxId.put(trueOffset, thisTxId)[ FD ]
Line_7 $$ spyLog = spy(fsel)-->Line_20 $$ if (spyLog != null) [ FD ]
Line_11 $$ for (int i = 0; i < numTx; i++) -->Line_17 $$ spyLog.logSync()[ CD ]
Line_2 $$ private static File prepareUnfinalizedTestEditLog(File testDir, int numTx, SortedMap<Long, Long> offsetToTxId) throws IOException -->Line_3 $$ File inProgressFile = new File(testDir, NNStorage.getInProgressEditsFileName(1))[ CD ]
Line_11 $$ for (int i = 0; i < numTx; i++) -->Line_15 $$ System.err.println("txid " + thisTxId + " at offset " + trueOffset)[ CD ]
Line_2 $$ private static File prepareUnfinalizedTestEditLog(File testDir, int numTx, SortedMap<Long, Long> offsetToTxId) throws IOException -->Line_11 $$ for (int i = 0; i < numTx; i++) [ FD ]
Line_7 $$ spyLog = spy(fsel)-->Line_8 $$ doNothing().when(spyLog).endCurrentLogSegment(true)[ FD ]
Line_7 $$ spyLog = spy(fsel)-->Line_9 $$ spyLog.openForWrite()[ FD ]
Line_11 $$ for (int i = 0; i < numTx; i++) -->Line_16 $$ spyLog.logDelete("path" + i, i, false)[ FD ]
Line_20 $$ if (spyLog != null) -->Line_22 $$ if (fsel != null) [ CD ]
Line_6 $$ fsel = FSImageTestUtil.createStandaloneEditLog(testDir)-->Line_7 $$ spyLog = spy(fsel)[ FD ]
Line_6 $$ fsel = FSImageTestUtil.createStandaloneEditLog(testDir)-->Line_23 $$ fsel.close()[ FD ]
Line_2 $$ private static File prepareUnfinalizedTestEditLog(File testDir, int numTx, SortedMap<Long, Long> offsetToTxId) throws IOException -->Line_6 $$ fsel = FSImageTestUtil.createStandaloneEditLog(testDir)[ FD ]
Line_3 $$ File inProgressFile = new File(testDir, NNStorage.getInProgressEditsFileName(1))-->Line_10 $$ assertTrue("should exist: " + inProgressFile, inProgressFile.exists())[ FD ]
Line_3 $$ File inProgressFile = new File(testDir, NNStorage.getInProgressEditsFileName(1))-->Line_12 $$ long trueOffset = getNonTrailerLength(inProgressFile)[ FD ]
Line_11 $$ for (int i = 0; i < numTx; i++) -->Line_13 $$ long thisTxId = spyLog.getLastWrittenTxId() + 1[ CD ]
Line_4 $$ FSEditLog fsel = null, spyLog = null-->Line_20 $$ if (spyLog != null) [ FD ]
Line_11 $$ for (int i = 0; i < numTx; i++) -->Line_12 $$ long trueOffset = getNonTrailerLength(inProgressFile)[ CD ]
Line_6 $$ fsel = FSImageTestUtil.createStandaloneEditLog(testDir)-->Line_22 $$ if (fsel != null) [ FD ]
Line_12 $$ long trueOffset = getNonTrailerLength(inProgressFile)-->Line_14 $$ offsetToTxId.put(trueOffset, thisTxId)[ FD ]
Line_7 $$ spyLog = spy(fsel)-->Line_16 $$ spyLog.logDelete("path" + i, i, false)[ FD ]
Line_4 $$ FSEditLog fsel = null, spyLog = null-->Line_21 $$ spyLog.close()[ FD ]
Line_4 $$ FSEditLog fsel = null, spyLog = null-->Line_16 $$ spyLog.logDelete("path" + i, i, false)[ FD ]
Line_7 $$ spyLog = spy(fsel)-->Line_21 $$ spyLog.close()[ FD ]
Line_2 $$ private static File prepareUnfinalizedTestEditLog(File testDir, int numTx, SortedMap<Long, Long> offsetToTxId) throws IOException -->Line_4 $$ FSEditLog fsel = null, spyLog = null[ CD ]
Line_4 $$ FSEditLog fsel = null, spyLog = null-->Line_6 $$ fsel = FSImageTestUtil.createStandaloneEditLog(testDir)[ FD ]
Line_4 $$ FSEditLog fsel = null, spyLog = null-->Line_13 $$ long thisTxId = spyLog.getLastWrittenTxId() + 1[ FD ]
Line_20 $$ if (spyLog != null) -->Line_21 $$ spyLog.close()[ CD ]
Line_4 $$ FSEditLog fsel = null, spyLog = null-->Line_23 $$ fsel.close()[ FD ]
Line_13 $$ long thisTxId = spyLog.getLastWrittenTxId() + 1-->Line_14 $$ offsetToTxId.put(trueOffset, thisTxId)[ FD ]
Line_7 $$ spyLog = spy(fsel)-->Line_17 $$ spyLog.logSync()[ FD ]
Line_4 $$ FSEditLog fsel = null, spyLog = null-->Line_7 $$ spyLog = spy(fsel)[ FD ]
Line_11 $$ for (int i = 0; i < numTx; i++) -->Line_16 $$ spyLog.logDelete("path" + i, i, false)[ CD ]
Line_4 $$ FSEditLog fsel = null, spyLog = null-->Line_9 $$ spyLog.openForWrite()[ FD ]
Line_7 $$ spyLog = spy(fsel)-->Line_13 $$ long thisTxId = spyLog.getLastWrittenTxId() + 1[ FD ]
Line_4 $$ FSEditLog fsel = null, spyLog = null-->Line_8 $$ doNothing().when(spyLog).endCurrentLogSegment(true)[ FD ]
Line_4 $$ FSEditLog fsel = null, spyLog = null-->Line_17 $$ spyLog.logSync()[ FD ]
Line_2 $$ private static File prepareUnfinalizedTestEditLog(File testDir, int numTx, SortedMap<Long, Long> offsetToTxId) throws IOException -->Line_26 $$ return inProgressFile[ CD ]
Line_22 $$ if (fsel != null) -->Line_23 $$ fsel.close()[ CD ]
Line_4 $$ FSEditLog fsel = null, spyLog = null-->Line_22 $$ if (fsel != null) [ FD ]
Line_11 $$ for (int i = 0; i < numTx; i++) -->Line_14 $$ offsetToTxId.put(trueOffset, thisTxId)[ CD ]
