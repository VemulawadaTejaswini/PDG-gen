Line_13 $$ title = title.substring(2)-->Line_22 $$ Boolean existsObj = links.get(title)[ FD ]
Line_2 $$ public Map<String, Boolean> getOutgoingLinks(com.liferay.wiki.model.WikiPage page) throws PageContentException -->Line_24 $$ if (_wikiPageLocalService.getPagesCount(page.getNodeId(), title, true) > 0) [ FD ]
Line_13 $$ title = title.substring(2)-->Line_19 $$ if (title.endsWith("]")) [ FD ]
Line_17 $$ if (title.endsWith("]]")) -->Line_18 $$ title = title.substring(0, title.length() - 2)[ CD ]
Line_23 $$ if (existsObj == null) -->Line_24 $$ if (_wikiPageLocalService.getPagesCount(page.getNodeId(), title, true) > 0) [ CD ]
Line_25 $$ existsObj = Boolean.TRUE-->Line_29 $$ links.put(title, existsObj)[ FD ]
Line_11 $$ for (String title : titles) -->Line_19 $$ if (title.endsWith("]")) [ FD ]
Line_24 $$ if (_wikiPageLocalService.getPagesCount(page.getNodeId(), title, true) > 0) -->Line_25 $$ existsObj = Boolean.TRUE[ CD ]
Line_13 $$ title = title.substring(2)-->Line_15 $$ title = title.substring(1)[ FD ]
Line_2 $$ public Map<String, Boolean> getOutgoingLinks(com.liferay.wiki.model.WikiPage page) throws PageContentException -->Line_7 $$ LiferayJSPWikiEngine engine = getEngine(page.getNodeId())[ FD ]
Line_10 $$ Map<String, Boolean> links = new HashMap()-->Line_29 $$ links.put(title, existsObj)[ FD ]
Line_15 $$ title = title.substring(1)-->Line_19 $$ if (title.endsWith("]")) [ FD ]
Line_13 $$ title = title.substring(2)-->Line_18 $$ title = title.substring(0, title.length() - 2)[ FD ]
Line_22 $$ Boolean existsObj = links.get(title)-->Line_23 $$ if (existsObj == null) [ FD ]
Line_13 $$ title = title.substring(2)-->Line_29 $$ links.put(title, existsObj)[ FD ]
Line_12 $$ if (title.startsWith("[[")) -->Line_13 $$ title = title.substring(2)[ CD ]
Line_20 $$ title = title.substring(0, title.length() - 1)-->Line_24 $$ if (_wikiPageLocalService.getPagesCount(page.getNodeId(), title, true) > 0) [ FD ]
Line_10 $$ Map<String, Boolean> links = new HashMap()-->Line_22 $$ Boolean existsObj = links.get(title)[ FD ]
Line_18 $$ title = title.substring(0, title.length() - 2)-->Line_22 $$ Boolean existsObj = links.get(title)[ FD ]
Line_11 $$ for (String title : titles) -->Line_22 $$ Boolean existsObj = links.get(title)[ FD ]
Line_11 $$ for (String title : titles) -->Line_17 $$ if (title.endsWith("]]")) [ FD ]
Line_17 $$ if (title.endsWith("]]")) -->Line_19 $$ if (title.endsWith("]")) [ CD ]
Line_13 $$ title = title.substring(2)-->Line_20 $$ title = title.substring(0, title.length() - 1)[ FD ]
Line_22 $$ Boolean existsObj = links.get(title)-->Line_29 $$ links.put(title, existsObj)[ FD ]
Line_7 $$ LiferayJSPWikiEngine engine = getEngine(page.getNodeId())-->Line_8 $$ WikiPage jspWikiPage = LiferayPageProvider.toJSPWikiPage(page, engine)[ FD ]
Line_11 $$ for (String title : titles) -->Line_24 $$ if (_wikiPageLocalService.getPagesCount(page.getNodeId(), title, true) > 0) [ FD ]
Line_13 $$ title = title.substring(2)-->Line_17 $$ if (title.endsWith("]]")) [ FD ]
Line_11 $$ for (String title : titles) -->Line_14 $$ if (title.startsWith("[")) [ FD ]
Line_24 $$ if (_wikiPageLocalService.getPagesCount(page.getNodeId(), title, true) > 0) -->Line_27 $$ existsObj = Boolean.FALSE[ CD ]
Line_25 $$ existsObj = Boolean.TRUE-->Line_27 $$ existsObj = Boolean.FALSE[ FD ]
Line_11 $$ for (String title : titles) -->Line_13 $$ title = title.substring(2)[ FD ]
Line_13 $$ title = title.substring(2)-->Line_24 $$ if (_wikiPageLocalService.getPagesCount(page.getNodeId(), title, true) > 0) [ FD ]
Line_11 $$ for (String title : titles) -->Line_20 $$ title = title.substring(0, title.length() - 1)[ FD ]
Line_11 $$ for (String title : titles) -->Line_18 $$ title = title.substring(0, title.length() - 2)[ FD ]
Line_22 $$ Boolean existsObj = links.get(title)-->Line_25 $$ existsObj = Boolean.TRUE[ FD ]
Line_27 $$ existsObj = Boolean.FALSE-->Line_29 $$ links.put(title, existsObj)[ FD ]
Line_3 $$ if (Validator.isNull(page.getContent())) -->Line_4 $$ return Collections.emptyMap()[ CD ]
Line_18 $$ title = title.substring(0, title.length() - 2)-->Line_20 $$ title = title.substring(0, title.length() - 1)[ FD ]
Line_20 $$ title = title.substring(0, title.length() - 1)-->Line_29 $$ links.put(title, existsObj)[ FD ]
Line_15 $$ title = title.substring(1)-->Line_20 $$ title = title.substring(0, title.length() - 1)[ FD ]
Line_2 $$ public Map<String, Boolean> getOutgoingLinks(com.liferay.wiki.model.WikiPage page) throws PageContentException -->Line_9 $$ Collection<String> titles = engine.scanWikiLinks(jspWikiPage, _encodeJSPWikiContent(page.getContent()))[ FD ]
Line_7 $$ LiferayJSPWikiEngine engine = getEngine(page.getNodeId())-->Line_9 $$ Collection<String> titles = engine.scanWikiLinks(jspWikiPage, _encodeJSPWikiContent(page.getContent()))[ FD ]
Line_8 $$ WikiPage jspWikiPage = LiferayPageProvider.toJSPWikiPage(page, engine)-->Line_9 $$ Collection<String> titles = engine.scanWikiLinks(jspWikiPage, _encodeJSPWikiContent(page.getContent()))[ FD ]
Line_14 $$ if (title.startsWith("[")) -->Line_15 $$ title = title.substring(1)[ CD ]
Line_2 $$ public Map<String, Boolean> getOutgoingLinks(com.liferay.wiki.model.WikiPage page) throws PageContentException -->Line_3 $$ if (Validator.isNull(page.getContent())) [ CD ]
Line_22 $$ Boolean existsObj = links.get(title)-->Line_27 $$ existsObj = Boolean.FALSE[ FD ]
Line_2 $$ public Map<String, Boolean> getOutgoingLinks(com.liferay.wiki.model.WikiPage page) throws PageContentException -->Line_8 $$ WikiPage jspWikiPage = LiferayPageProvider.toJSPWikiPage(page, engine)[ FD ]
Line_15 $$ title = title.substring(1)-->Line_17 $$ if (title.endsWith("]]")) [ FD ]
Line_15 $$ title = title.substring(1)-->Line_22 $$ Boolean existsObj = links.get(title)[ FD ]
Line_2 $$ public Map<String, Boolean> getOutgoingLinks(com.liferay.wiki.model.WikiPage page) throws PageContentException -->Line_3 $$ if (Validator.isNull(page.getContent())) [ FD ]
Line_11 $$ for (String title : titles) -->Line_29 $$ links.put(title, existsObj)[ FD ]
Line_12 $$ if (title.startsWith("[[")) -->Line_14 $$ if (title.startsWith("[")) [ CD ]
Line_13 $$ title = title.substring(2)-->Line_14 $$ if (title.startsWith("[")) [ FD ]
Line_20 $$ title = title.substring(0, title.length() - 1)-->Line_22 $$ Boolean existsObj = links.get(title)[ FD ]
Line_15 $$ title = title.substring(1)-->Line_18 $$ title = title.substring(0, title.length() - 2)[ FD ]
Line_15 $$ title = title.substring(1)-->Line_29 $$ links.put(title, existsObj)[ FD ]
Line_19 $$ if (title.endsWith("]")) -->Line_20 $$ title = title.substring(0, title.length() - 1)[ CD ]
Line_18 $$ title = title.substring(0, title.length() - 2)-->Line_19 $$ if (title.endsWith("]")) [ FD ]
Line_15 $$ title = title.substring(1)-->Line_24 $$ if (_wikiPageLocalService.getPagesCount(page.getNodeId(), title, true) > 0) [ FD ]
Line_18 $$ title = title.substring(0, title.length() - 2)-->Line_29 $$ links.put(title, existsObj)[ FD ]
Line_18 $$ title = title.substring(0, title.length() - 2)-->Line_24 $$ if (_wikiPageLocalService.getPagesCount(page.getNodeId(), title, true) > 0) [ FD ]
Line_11 $$ for (String title : titles) -->Line_15 $$ title = title.substring(1)[ FD ]
Line_23 $$ if (existsObj == null) -->Line_29 $$ links.put(title, existsObj)[ CD ]
Line_11 $$ for (String title : titles) -->Line_12 $$ if (title.startsWith("[[")) [ FD ]
