Line_13 $$ List<String> children = tree.get(parentId)-->Line_14 $$ if (children == null) [ FD ]
Line_2 $$ private static Map<String, List<String>> buildIdTree(@NotNull Map<String, ConfigurableWrapper> idToConfigurable, @NotNull List<String> idsInEpOrder) -->Line_3 $$ Map<String, List<String>> tree = ContainerUtil.newHashMap()[ CD ]
Line_13 $$ List<String> children = tree.get(parentId)-->Line_16 $$ tree.put(parentId, children)[ FD ]
Line_3 $$ Map<String, List<String>> tree = ContainerUtil.newHashMap()-->Line_13 $$ List<String> children = tree.get(parentId)[ FD ]
Line_2 $$ private static Map<String, List<String>> buildIdTree(@NotNull Map<String, ConfigurableWrapper> idToConfigurable, @NotNull List<String> idsInEpOrder) -->Line_21 $$ return tree[ CD ]
Line_14 $$ if (children == null) -->Line_15 $$ children = ContainerUtil.newArrayListWithCapacity(5)[ CD ]
Line_4 $$ for (String id : idsInEpOrder) -->Line_18 $$ children.add(id)[ FD ]
Line_6 $$ String parentId = wrapper.getParentId()-->Line_8 $$ ConfigurableWrapper parent = idToConfigurable.get(parentId)[ FD ]
Line_4 $$ for (String id : idsInEpOrder) -->Line_5 $$ ConfigurableWrapper wrapper = idToConfigurable.get(id)[ FD ]
Line_13 $$ List<String> children = tree.get(parentId)-->Line_18 $$ children.add(id)[ FD ]
Line_8 $$ ConfigurableWrapper parent = idToConfigurable.get(parentId)-->Line_9 $$ if (parent == null) [ FD ]
Line_6 $$ String parentId = wrapper.getParentId()-->Line_13 $$ List<String> children = tree.get(parentId)[ FD ]
Line_7 $$ if (parentId != null) -->Line_14 $$ if (children == null) [ CD ]
Line_2 $$ private static Map<String, List<String>> buildIdTree(@NotNull Map<String, ConfigurableWrapper> idToConfigurable, @NotNull List<String> idsInEpOrder) -->Line_8 $$ ConfigurableWrapper parent = idToConfigurable.get(parentId)[ FD ]
Line_15 $$ children = ContainerUtil.newArrayListWithCapacity(5)-->Line_18 $$ children.add(id)[ FD ]
Line_9 $$ if (parent == null) -->Line_10 $$ LOG.warn("Can't find parent for " + parentId + " (" + wrapper + ")")[ CD ]
Line_7 $$ if (parentId != null) -->Line_13 $$ List<String> children = tree.get(parentId)[ CD ]
Line_6 $$ String parentId = wrapper.getParentId()-->Line_16 $$ tree.put(parentId, children)[ FD ]
Line_14 $$ if (children == null) -->Line_16 $$ tree.put(parentId, children)[ CD ]
Line_5 $$ ConfigurableWrapper wrapper = idToConfigurable.get(id)-->Line_6 $$ String parentId = wrapper.getParentId()[ FD ]
Line_7 $$ if (parentId != null) -->Line_8 $$ ConfigurableWrapper parent = idToConfigurable.get(parentId)[ CD ]
Line_15 $$ children = ContainerUtil.newArrayListWithCapacity(5)-->Line_16 $$ tree.put(parentId, children)[ FD ]
Line_7 $$ if (parentId != null) -->Line_18 $$ children.add(id)[ CD ]
Line_2 $$ private static Map<String, List<String>> buildIdTree(@NotNull Map<String, ConfigurableWrapper> idToConfigurable, @NotNull List<String> idsInEpOrder) -->Line_5 $$ ConfigurableWrapper wrapper = idToConfigurable.get(id)[ FD ]
Line_7 $$ if (parentId != null) -->Line_9 $$ if (parent == null) [ CD ]
Line_3 $$ Map<String, List<String>> tree = ContainerUtil.newHashMap()-->Line_16 $$ tree.put(parentId, children)[ FD ]
Line_6 $$ String parentId = wrapper.getParentId()-->Line_7 $$ if (parentId != null) [ FD ]
Line_13 $$ List<String> children = tree.get(parentId)-->Line_15 $$ children = ContainerUtil.newArrayListWithCapacity(5)[ FD ]
