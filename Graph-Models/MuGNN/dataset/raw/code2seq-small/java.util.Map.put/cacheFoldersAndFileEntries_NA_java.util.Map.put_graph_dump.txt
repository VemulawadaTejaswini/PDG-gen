Line_15 $$ for (CmisObject cmisObject : cmisObjects) -->Line_16 $$ if (cmisObject instanceof org.apache.chemistry.opencmis.client.api.Folder) [ FD ]
Line_2 $$ protected void cacheFoldersAndFileEntries(long folderId) -->Line_30 $$ foldersCache.put(folderId, folders)[ FD ]
Line_2 $$ protected void cacheFoldersAndFileEntries(long folderId) -->Line_32 $$ fileEntriesCache.put(folderId, fileEntries)[ FD ]
Line_21 $$ if (cmisObject instanceof Document) -->Line_22 $$ CMISFileEntry cmisFileEntry = (CMISFileEntry) toFileEntry((Document) cmisObject)[ CD ]
Line_21 $$ if (cmisObject instanceof Document) -->Line_23 $$ cmisFileEntry.setParentFolder(parentFolder)[ CD ]
Line_22 $$ CMISFileEntry cmisFileEntry = (CMISFileEntry) toFileEntry((Document) cmisObject)-->Line_23 $$ cmisFileEntry.setParentFolder(parentFolder)[ FD ]
Line_31 $$ Map<Long, List<FileEntry>> fileEntriesCache = _fileEntriesCache.get()-->Line_32 $$ fileEntriesCache.put(folderId, fileEntries)[ FD ]
Line_2 $$ protected void cacheFoldersAndFileEntries(long folderId) -->Line_5 $$ if (foldersAndFileEntriesCache.containsKey(folderId)) [ FD ]
Line_21 $$ if (cmisObject instanceof Document) -->Line_24 $$ foldersAndFileEntries.add(cmisFileEntry)[ CD ]
Line_5 $$ if (foldersAndFileEntriesCache.containsKey(folderId)) -->Line_6 $$ return[ CD ]
Line_8 $$ List<Object> foldersAndFileEntries = new ArrayList()-->Line_24 $$ foldersAndFileEntries.add(cmisFileEntry)[ FD ]
Line_9 $$ List<Folder> folders = new ArrayList()-->Line_30 $$ foldersCache.put(folderId, folders)[ FD ]
Line_9 $$ List<Folder> folders = new ArrayList()-->Line_20 $$ folders.add(cmisFolder)[ FD ]
Line_12 $$ org.apache.chemistry.opencmis.client.api.Folder cmisParentFolder = getCmisFolder(session, folderId)-->Line_13 $$ Folder parentFolder = toFolder(cmisParentFolder)[ FD ]
Line_13 $$ Folder parentFolder = toFolder(cmisParentFolder)-->Line_23 $$ cmisFileEntry.setParentFolder(parentFolder)[ FD ]
Line_16 $$ if (cmisObject instanceof org.apache.chemistry.opencmis.client.api.Folder) -->Line_17 $$ CMISFolder cmisFolder = (CMISFolder) toFolder((org.apache.chemistry.opencmis.client.api.Folder) cmisObject)[ CD ]
Line_16 $$ if (cmisObject instanceof org.apache.chemistry.opencmis.client.api.Folder) -->Line_20 $$ folders.add(cmisFolder)[ CD ]
Line_11 $$ Session session = getSession()-->Line_12 $$ org.apache.chemistry.opencmis.client.api.Folder cmisParentFolder = getCmisFolder(session, folderId)[ FD ]
Line_21 $$ if (cmisObject instanceof Document) -->Line_25 $$ fileEntries.add(cmisFileEntry)[ CD ]
Line_10 $$ List<FileEntry> fileEntries = new ArrayList()-->Line_25 $$ fileEntries.add(cmisFileEntry)[ FD ]
Line_22 $$ CMISFileEntry cmisFileEntry = (CMISFileEntry) toFileEntry((Document) cmisObject)-->Line_25 $$ fileEntries.add(cmisFileEntry)[ FD ]
Line_10 $$ List<FileEntry> fileEntries = new ArrayList()-->Line_32 $$ fileEntriesCache.put(folderId, fileEntries)[ FD ]
Line_29 $$ Map<Long, List<Folder>> foldersCache = _foldersCache.get()-->Line_30 $$ foldersCache.put(folderId, folders)[ FD ]
Line_17 $$ CMISFolder cmisFolder = (CMISFolder) toFolder((org.apache.chemistry.opencmis.client.api.Folder) cmisObject)-->Line_19 $$ foldersAndFileEntries.add(cmisFolder)[ FD ]
Line_12 $$ org.apache.chemistry.opencmis.client.api.Folder cmisParentFolder = getCmisFolder(session, folderId)-->Line_14 $$ ItemIterable<CmisObject> cmisObjects = cmisParentFolder.getChildren()[ FD ]
Line_17 $$ CMISFolder cmisFolder = (CMISFolder) toFolder((org.apache.chemistry.opencmis.client.api.Folder) cmisObject)-->Line_18 $$ cmisFolder.setParentFolder(parentFolder)[ FD ]
Line_8 $$ List<Object> foldersAndFileEntries = new ArrayList()-->Line_19 $$ foldersAndFileEntries.add(cmisFolder)[ FD ]
Line_16 $$ if (cmisObject instanceof org.apache.chemistry.opencmis.client.api.Folder) -->Line_19 $$ foldersAndFileEntries.add(cmisFolder)[ CD ]
Line_17 $$ CMISFolder cmisFolder = (CMISFolder) toFolder((org.apache.chemistry.opencmis.client.api.Folder) cmisObject)-->Line_20 $$ folders.add(cmisFolder)[ FD ]
Line_8 $$ List<Object> foldersAndFileEntries = new ArrayList()-->Line_28 $$ foldersAndFileEntriesCache.put(folderId, foldersAndFileEntries)[ FD ]
Line_2 $$ protected void cacheFoldersAndFileEntries(long folderId) -->Line_12 $$ org.apache.chemistry.opencmis.client.api.Folder cmisParentFolder = getCmisFolder(session, folderId)[ FD ]
Line_13 $$ Folder parentFolder = toFolder(cmisParentFolder)-->Line_18 $$ cmisFolder.setParentFolder(parentFolder)[ FD ]
Line_16 $$ if (cmisObject instanceof org.apache.chemistry.opencmis.client.api.Folder) -->Line_18 $$ cmisFolder.setParentFolder(parentFolder)[ CD ]
Line_4 $$ Map<Long, List<Object>> foldersAndFileEntriesCache = _foldersAndFileEntriesCache.get()-->Line_5 $$ if (foldersAndFileEntriesCache.containsKey(folderId)) [ FD ]
Line_22 $$ CMISFileEntry cmisFileEntry = (CMISFileEntry) toFileEntry((Document) cmisObject)-->Line_24 $$ foldersAndFileEntries.add(cmisFileEntry)[ FD ]
Line_4 $$ Map<Long, List<Object>> foldersAndFileEntriesCache = _foldersAndFileEntriesCache.get()-->Line_28 $$ foldersAndFileEntriesCache.put(folderId, foldersAndFileEntries)[ FD ]
Line_2 $$ protected void cacheFoldersAndFileEntries(long folderId) -->Line_28 $$ foldersAndFileEntriesCache.put(folderId, foldersAndFileEntries)[ FD ]
Line_15 $$ for (CmisObject cmisObject : cmisObjects) -->Line_21 $$ if (cmisObject instanceof Document) [ FD ]
Line_16 $$ if (cmisObject instanceof org.apache.chemistry.opencmis.client.api.Folder) -->Line_21 $$ if (cmisObject instanceof Document) [ CD ]
