Line_2 $$ public ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception -->Line_10 $$ checkAndPrepare(request, response, this.cacheSecondsForSessionAttributeHandlers, true)[ FD ]
Line_2 $$ public ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception -->Line_5 $$ if (annotatedWithSessionAttributes == null) [ CD ]
Line_14 $$ if (this.synchronizeOnSession) -->Line_16 $$ if (session != null) [ CD ]
Line_3 $$ Class<?> clazz = ClassUtils.getUserClass(handler)-->Line_4 $$ Boolean annotatedWithSessionAttributes = this.sessionAnnotatedClassesCache.get(clazz)[ FD ]
Line_3 $$ Class<?> clazz = ClassUtils.getUserClass(handler)-->Line_6 $$ annotatedWithSessionAttributes = (AnnotationUtils.findAnnotation(clazz, SessionAttributes.class) != null)[ FD ]
Line_2 $$ public ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception -->Line_15 $$ HttpSession session = request.getSession(false)[ FD ]
Line_2 $$ public ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception -->Line_14 $$ if (this.synchronizeOnSession) [ CD ]
Line_2 $$ public ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception -->Line_23 $$ return invokeHandlerMethod(request, response, handler)[ FD ]
Line_2 $$ public ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception -->Line_4 $$ Boolean annotatedWithSessionAttributes = this.sessionAnnotatedClassesCache.get(clazz)[ CD ]
Line_5 $$ if (annotatedWithSessionAttributes == null) -->Line_7 $$ this.sessionAnnotatedClassesCache.put(clazz, annotatedWithSessionAttributes)[ CD ]
Line_2 $$ public ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception -->Line_23 $$ return invokeHandlerMethod(request, response, handler)[ CD ]
Line_6 $$ annotatedWithSessionAttributes = (AnnotationUtils.findAnnotation(clazz, SessionAttributes.class) != null)-->Line_7 $$ this.sessionAnnotatedClassesCache.put(clazz, annotatedWithSessionAttributes)[ FD ]
Line_2 $$ public ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception -->Line_3 $$ Class<?> clazz = ClassUtils.getUserClass(handler)[ FD ]
Line_2 $$ public ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception -->Line_12 $$ checkAndPrepare(request, response, true)[ FD ]
Line_4 $$ Boolean annotatedWithSessionAttributes = this.sessionAnnotatedClassesCache.get(clazz)-->Line_5 $$ if (annotatedWithSessionAttributes == null) [ FD ]
Line_2 $$ public ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception -->Line_9 $$ if (annotatedWithSessionAttributes) [ CD ]
Line_5 $$ if (annotatedWithSessionAttributes == null) -->Line_6 $$ annotatedWithSessionAttributes = (AnnotationUtils.findAnnotation(clazz, SessionAttributes.class) != null)[ CD ]
Line_2 $$ public ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception -->Line_19 $$ return invokeHandlerMethod(request, response, handler)[ FD ]
Line_4 $$ Boolean annotatedWithSessionAttributes = this.sessionAnnotatedClassesCache.get(clazz)-->Line_6 $$ annotatedWithSessionAttributes = (AnnotationUtils.findAnnotation(clazz, SessionAttributes.class) != null)[ FD ]
Line_14 $$ if (this.synchronizeOnSession) -->Line_15 $$ HttpSession session = request.getSession(false)[ CD ]
Line_9 $$ if (annotatedWithSessionAttributes) -->Line_10 $$ checkAndPrepare(request, response, this.cacheSecondsForSessionAttributeHandlers, true)[ CD ]
Line_15 $$ HttpSession session = request.getSession(false)-->Line_17 $$ Object mutex = WebUtils.getSessionMutex(session)[ FD ]
Line_15 $$ HttpSession session = request.getSession(false)-->Line_16 $$ if (session != null) [ FD ]
Line_2 $$ public ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception -->Line_3 $$ Class<?> clazz = ClassUtils.getUserClass(handler)[ CD ]
Line_16 $$ if (session != null) -->Line_17 $$ Object mutex = WebUtils.getSessionMutex(session)[ CD ]
Line_9 $$ if (annotatedWithSessionAttributes) -->Line_12 $$ checkAndPrepare(request, response, true)[ CD ]
Line_3 $$ Class<?> clazz = ClassUtils.getUserClass(handler)-->Line_7 $$ this.sessionAnnotatedClassesCache.put(clazz, annotatedWithSessionAttributes)[ FD ]
Line_4 $$ Boolean annotatedWithSessionAttributes = this.sessionAnnotatedClassesCache.get(clazz)-->Line_7 $$ this.sessionAnnotatedClassesCache.put(clazz, annotatedWithSessionAttributes)[ FD ]
