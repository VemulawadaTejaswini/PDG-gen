Line_2 $$ public void testConfigMultipleParametersFileWrongType() throws IOException -->Line_9 $$ parameters.add("foo")[ CD ]
Line_3 $$ Map<String, Object> config = new HashMap()-->Line_20 $$ paramParser.parseConfig(config, true, ParseFieldMatcher.STRICT)[ FD ]
Line_2 $$ public void testConfigMultipleParametersFileWrongType() throws IOException -->Line_6 $$ config.put("baz_id", "bazScriptValue")[ CD ]
Line_12 $$ ScriptParameterParser paramParser = new ScriptParameterParser(parameters)-->Line_17 $$ assertThat(paramParser.getScriptParameterValue("baz_id"), nullValue())[ FD ]
Line_2 $$ public void testConfigMultipleParametersFileWrongType() throws IOException -->Line_4 $$ config.put("foo", "fooScriptValue")[ CD ]
Line_2 $$ public void testConfigMultipleParametersFileWrongType() throws IOException -->Line_13 $$ assertThat(paramParser.getScriptParameterValue("foo"), nullValue())[ CD ]
Line_3 $$ Map<String, Object> config = new HashMap()-->Line_6 $$ config.put("baz_id", "bazScriptValue")[ FD ]
Line_12 $$ ScriptParameterParser paramParser = new ScriptParameterParser(parameters)-->Line_15 $$ assertThat(paramParser.getScriptParameterValue("baz"), nullValue())[ FD ]
Line_2 $$ public void testConfigMultipleParametersFileWrongType() throws IOException -->Line_15 $$ assertThat(paramParser.getScriptParameterValue("baz"), nullValue())[ CD ]
Line_2 $$ public void testConfigMultipleParametersFileWrongType() throws IOException -->Line_10 $$ parameters.add("bar")[ CD ]
Line_8 $$ Set<String> parameters = new HashSet()-->Line_10 $$ parameters.add("bar")[ FD ]
Line_2 $$ public void testConfigMultipleParametersFileWrongType() throws IOException -->Line_3 $$ Map<String, Object> config = new HashMap()[ CD ]
Line_2 $$ public void testConfigMultipleParametersFileWrongType() throws IOException -->Line_8 $$ Set<String> parameters = new HashSet()[ CD ]
Line_2 $$ public void testConfigMultipleParametersFileWrongType() throws IOException -->Line_7 $$ config.put("lang", "myLang")[ CD ]
Line_2 $$ public void testConfigMultipleParametersFileWrongType() throws IOException -->Line_12 $$ ScriptParameterParser paramParser = new ScriptParameterParser(parameters)[ CD ]
Line_2 $$ public void testConfigMultipleParametersFileWrongType() throws IOException -->Line_17 $$ assertThat(paramParser.getScriptParameterValue("baz_id"), nullValue())[ CD ]
Line_3 $$ Map<String, Object> config = new HashMap()-->Line_5 $$ config.put("bar_file", 1l)[ FD ]
Line_12 $$ ScriptParameterParser paramParser = new ScriptParameterParser(parameters)-->Line_14 $$ assertThat(paramParser.getScriptParameterValue("bar"), nullValue())[ FD ]
Line_12 $$ ScriptParameterParser paramParser = new ScriptParameterParser(parameters)-->Line_16 $$ assertThat(paramParser.getScriptParameterValue("bar_file"), nullValue())[ FD ]
Line_2 $$ public void testConfigMultipleParametersFileWrongType() throws IOException -->Line_16 $$ assertThat(paramParser.getScriptParameterValue("bar_file"), nullValue())[ CD ]
Line_2 $$ public void testConfigMultipleParametersFileWrongType() throws IOException -->Line_5 $$ config.put("bar_file", 1l)[ CD ]
Line_2 $$ public void testConfigMultipleParametersFileWrongType() throws IOException -->Line_11 $$ parameters.add("baz")[ CD ]
Line_8 $$ Set<String> parameters = new HashSet()-->Line_9 $$ parameters.add("foo")[ FD ]
Line_12 $$ ScriptParameterParser paramParser = new ScriptParameterParser(parameters)-->Line_20 $$ paramParser.parseConfig(config, true, ParseFieldMatcher.STRICT)[ FD ]
Line_2 $$ public void testConfigMultipleParametersFileWrongType() throws IOException -->Line_14 $$ assertThat(paramParser.getScriptParameterValue("bar"), nullValue())[ CD ]
Line_3 $$ Map<String, Object> config = new HashMap()-->Line_4 $$ config.put("foo", "fooScriptValue")[ FD ]
Line_12 $$ ScriptParameterParser paramParser = new ScriptParameterParser(parameters)-->Line_13 $$ assertThat(paramParser.getScriptParameterValue("foo"), nullValue())[ FD ]
Line_3 $$ Map<String, Object> config = new HashMap()-->Line_7 $$ config.put("lang", "myLang")[ FD ]
Line_2 $$ public void testConfigMultipleParametersFileWrongType() throws IOException -->Line_18 $$ assertThat(paramParser.lang(), nullValue())[ CD ]
Line_12 $$ ScriptParameterParser paramParser = new ScriptParameterParser(parameters)-->Line_18 $$ assertThat(paramParser.lang(), nullValue())[ FD ]
Line_8 $$ Set<String> parameters = new HashSet()-->Line_11 $$ parameters.add("baz")[ FD ]
