Line_16 $$ for (int i = 0; i < xAttrsSize; ++i) -->Line_18 $$ final int valueLen = in.readInt()[ CD ]
Line_7 $$ for (int i = 0; i < aclEntriesSize; ++i) -->Line_8 $$ aclEntries.add(new AclEntry.Builder().setScope(ACL_ENTRY_SCOPES[in.readByte()]).setType(ACL_ENTRY_TYPES[in.readByte()]).setName(WritableUtils.readString(in)).setPermission(FS_ACTIONS[in.readByte()]).build())[ CD ]
Line_16 $$ for (int i = 0; i < xAttrsSize; ++i) -->Line_19 $$ byte[] value = null[ CD ]
Line_4 $$ byte aclEntriesSize = in.readByte()-->Line_5 $$ if (aclEntriesSize != NO_ACL_ENTRIES) [ FD ]
Line_2 $$ public void readFields(DataInput in) throws IOException -->Line_13 $$ int xAttrsSize = in.readInt()[ CD ]
Line_18 $$ final int valueLen = in.readInt()-->Line_20 $$ if (valueLen > -1) [ FD ]
Line_2 $$ public void readFields(DataInput in) throws IOException -->Line_8 $$ aclEntries.add(new AclEntry.Builder().setScope(ACL_ENTRY_SCOPES[in.readByte()]).setType(ACL_ENTRY_TYPES[in.readByte()]).setName(WritableUtils.readString(in)).setPermission(FS_ACTIONS[in.readByte()]).build())[ FD ]
Line_14 $$ if (xAttrsSize != NO_XATTRS) -->Line_16 $$ for (int i = 0; i < xAttrsSize; ++i) [ CD ]
Line_5 $$ if (aclEntriesSize != NO_ACL_ENTRIES) -->Line_7 $$ for (int i = 0; i < aclEntriesSize; ++i) [ CD ]
Line_13 $$ int xAttrsSize = in.readInt()-->Line_14 $$ if (xAttrsSize != NO_XATTRS) [ FD ]
Line_16 $$ for (int i = 0; i < xAttrsSize; ++i) -->Line_20 $$ if (valueLen > -1) [ CD ]
Line_19 $$ byte[] value = null-->Line_23 $$ in.readFully(value)[ FD ]
Line_16 $$ for (int i = 0; i < xAttrsSize; ++i) -->Line_17 $$ final String name = WritableUtils.readString(in)[ CD ]
Line_16 $$ for (int i = 0; i < xAttrsSize; ++i) -->Line_26 $$ xAttrs.put(name, value)[ CD ]
Line_17 $$ final String name = WritableUtils.readString(in)-->Line_26 $$ xAttrs.put(name, value)[ FD ]
Line_2 $$ public void readFields(DataInput in) throws IOException -->Line_3 $$ super.readFields(in)[ FD ]
Line_2 $$ public void readFields(DataInput in) throws IOException -->Line_18 $$ final int valueLen = in.readInt()[ FD ]
Line_20 $$ if (valueLen > -1) -->Line_22 $$ if (valueLen > 0) [ CD ]
Line_2 $$ public void readFields(DataInput in) throws IOException -->Line_3 $$ super.readFields(in)[ CD ]
Line_22 $$ if (valueLen > 0) -->Line_23 $$ in.readFully(value)[ CD ]
Line_2 $$ public void readFields(DataInput in) throws IOException -->Line_4 $$ byte aclEntriesSize = in.readByte()[ FD ]
Line_2 $$ public void readFields(DataInput in) throws IOException -->Line_13 $$ int xAttrsSize = in.readInt()[ FD ]
Line_19 $$ byte[] value = null-->Line_26 $$ xAttrs.put(name, value)[ FD ]
Line_21 $$ value = new byte[valueLen]-->Line_23 $$ in.readFully(value)[ FD ]
Line_19 $$ byte[] value = null-->Line_21 $$ value = new byte[valueLen][ FD ]
Line_2 $$ public void readFields(DataInput in) throws IOException -->Line_23 $$ in.readFully(value)[ FD ]
Line_2 $$ public void readFields(DataInput in) throws IOException -->Line_14 $$ if (xAttrsSize != NO_XATTRS) [ CD ]
Line_20 $$ if (valueLen > -1) -->Line_21 $$ value = new byte[valueLen][ CD ]
Line_5 $$ if (aclEntriesSize != NO_ACL_ENTRIES) -->Line_6 $$ aclEntries = Lists.newArrayListWithCapacity(aclEntriesSize)[ CD ]
Line_14 $$ if (xAttrsSize != NO_XATTRS) -->Line_15 $$ xAttrs = Maps.newHashMap()[ CD ]
Line_21 $$ value = new byte[valueLen]-->Line_26 $$ xAttrs.put(name, value)[ FD ]
Line_2 $$ public void readFields(DataInput in) throws IOException -->Line_5 $$ if (aclEntriesSize != NO_ACL_ENTRIES) [ CD ]
Line_2 $$ public void readFields(DataInput in) throws IOException -->Line_17 $$ final String name = WritableUtils.readString(in)[ FD ]
Line_4 $$ byte aclEntriesSize = in.readByte()-->Line_6 $$ aclEntries = Lists.newArrayListWithCapacity(aclEntriesSize)[ FD ]
Line_2 $$ public void readFields(DataInput in) throws IOException -->Line_4 $$ byte aclEntriesSize = in.readByte()[ CD ]
Line_18 $$ final int valueLen = in.readInt()-->Line_22 $$ if (valueLen > 0) [ FD ]
Line_4 $$ byte aclEntriesSize = in.readByte()-->Line_7 $$ for (int i = 0; i < aclEntriesSize; ++i) [ FD ]
Line_7 $$ for (int i = 0; i < aclEntriesSize; ++i) -->Line_16 $$ for (int i = 0; i < xAttrsSize; ++i) [ FD ]
Line_13 $$ int xAttrsSize = in.readInt()-->Line_16 $$ for (int i = 0; i < xAttrsSize; ++i) [ FD ]
