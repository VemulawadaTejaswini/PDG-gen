Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_19 $$ sessionFactory().getStatistics().clear()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_56 $$ assertEquals(sessionFactory().getStatistics().getQueryCacheHitCount(), 2)[ CD ]
Line_6 $$ Session s = openSession()-->Line_77 $$ s.createQuery("delete from Item").executeUpdate()[ FD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_15 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_33 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_67 $$ assertEquals(sessionFactory().getStatistics().getEntityLoadCount(), 2)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_36 $$ assertEquals(sessionFactory().getStatistics().getEntityLoadCount(), 2)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_34 $$ assertEquals(sessionFactory().getStatistics().getSecondLevelCacheHitCount(), 2)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_11 $$ Map bar = new HashMap()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_70 $$ assertEquals(sessionFactory().getStatistics().getQueryCachePutCount(), 1)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_49 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_41 $$ assertEquals(sessionFactory().getStatistics().getQueryCacheMissCount(), 1)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_48 $$ s3.createCriteria("Item").addOrder(Order.asc("description")).setCacheable(true).list()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_78 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_54 $$ assertEquals(sessionFactory().getStatistics().getQueryExecutionCount(), 1)[ CD ]
Line_26 $$ List r1 = s1.createCriteria("Item").addOrder(Order.asc("description")).setCacheable(true).list()-->Line_27 $$ assertEquals(r1.size(), 2)[ FD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_24 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_30 $$ Session s2 = openSession()[ CD ]
Line_30 $$ Session s2 = openSession()-->Line_31 $$ List r2 = s2.createCriteria("Item").addOrder(Order.asc("description")).setCacheable(true).list()[ FD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_23 $$ Transaction tx4 = TestingJtaPlatformImpl.INSTANCE.getTransactionManager().suspend()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_5 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_14 $$ s.persist("Item", bar)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_71 $$ assertEquals(sessionFactory().getStatistics().getQueryCacheHitCount(), 3)[ CD ]
Line_7 $$ Map foo = new HashMap()-->Line_8 $$ foo.put("name", "Foo")[ FD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_8 $$ foo.put("name", "Foo")[ CD ]
Line_11 $$ Map bar = new HashMap()-->Line_12 $$ bar.put("name", "Bar")[ FD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_52 $$ assertEquals(sessionFactory().getStatistics().getEntityLoadCount(), 2)[ CD ]
Line_62 $$ List r4 = s4.createCriteria("Item").addOrder(Order.asc("description")).setCacheable(true).list()-->Line_63 $$ assertEquals(r4.size(), 2)[ FD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_31 $$ List r2 = s2.createCriteria("Item").addOrder(Order.asc("description")).setCacheable(true).list()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_10 $$ s.persist("Item", foo)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_68 $$ assertEquals(sessionFactory().getStatistics().getEntityFetchCount(), 0)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_58 $$ assertEquals(sessionFactory().getStatistics().getUpdateTimestampsCacheHitCount(), 2)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_25 $$ Session s1 = openSession()[ CD ]
Line_6 $$ Session s = openSession()-->Line_10 $$ s.persist("Item", foo)[ FD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_4 $$ cleanupCache()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_63 $$ assertEquals(r4.size(), 2)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_39 $$ assertEquals(sessionFactory().getStatistics().getQueryCachePutCount(), 1)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_13 $$ bar.put("description", "a small bar")[ CD ]
Line_25 $$ Session s1 = openSession()-->Line_26 $$ List r1 = s1.createCriteria("Item").addOrder(Order.asc("description")).setCacheable(true).list()[ FD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_12 $$ bar.put("name", "Bar")[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_51 $$ assertEquals(sessionFactory().getStatistics().getSecondLevelCacheMissCount(), 0)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_45 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_61 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().resume(tx4)[ CD ]
Line_7 $$ Map foo = new HashMap()-->Line_10 $$ s.persist("Item", foo)[ FD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_7 $$ Map foo = new HashMap()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_27 $$ assertEquals(r1.size(), 2)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_20 $$ sessionFactory().getCache().evictEntityRegion("Item")[ CD ]
Line_76 $$ s = openSession()-->Line_77 $$ s.createQuery("delete from Item").executeUpdate()[ FD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_9 $$ foo.put("description", "a big foo")[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_40 $$ assertEquals(sessionFactory().getStatistics().getQueryCacheHitCount(), 1)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_29 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin()[ CD ]
Line_6 $$ Session s = openSession()-->Line_76 $$ s = openSession()[ FD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_65 $$ assertEquals(sessionFactory().getStatistics().getSecondLevelCacheHitCount(), 6)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_53 $$ assertEquals(sessionFactory().getStatistics().getEntityFetchCount(), 0)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_74 $$ assertEquals(sessionFactory().getStatistics().getUpdateTimestampsCachePutCount(), 0)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_32 $$ assertEquals(r2.size(), 2)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_28 $$ Transaction tx1 = TestingJtaPlatformImpl.INSTANCE.getTransactionManager().suspend()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_43 $$ assertEquals(sessionFactory().getStatistics().getUpdateTimestampsCachePutCount(), 0)[ CD ]
Line_11 $$ Map bar = new HashMap()-->Line_13 $$ bar.put("description", "a small bar")[ FD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_72 $$ assertEquals(sessionFactory().getStatistics().getQueryCacheMissCount(), 1)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_26 $$ List r1 = s1.createCriteria("Item").addOrder(Order.asc("description")).setCacheable(true).list()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_3 $$ sessionFactory().getStatistics().clear()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_55 $$ assertEquals(sessionFactory().getStatistics().getQueryCachePutCount(), 1)[ CD ]
Line_28 $$ Transaction tx1 = TestingJtaPlatformImpl.INSTANCE.getTransactionManager().suspend()-->Line_44 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().resume(tx1)[ FD ]
Line_6 $$ Session s = openSession()-->Line_14 $$ s.persist("Item", bar)[ FD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_44 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().resume(tx1)[ CD ]
Line_47 $$ Session s3 = openSession()-->Line_48 $$ s3.createCriteria("Item").addOrder(Order.asc("description")).setCacheable(true).list()[ FD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_75 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_60 $$ assertEquals(sessionFactory().getStatistics().getUpdateTimestampsCacheMissCount(), 0)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_42 $$ assertEquals(sessionFactory().getStatistics().getUpdateTimestampsCacheHitCount(), 1)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_47 $$ Session s3 = openSession()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_6 $$ Session s = openSession()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_73 $$ assertEquals(sessionFactory().getStatistics().getUpdateTimestampsCacheHitCount(), 3)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_77 $$ s.createQuery("delete from Item").executeUpdate()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_21 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_64 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit()[ CD ]
Line_7 $$ Map foo = new HashMap()-->Line_9 $$ foo.put("description", "a big foo")[ FD ]
Line_11 $$ Map bar = new HashMap()-->Line_14 $$ s.persist("Item", bar)[ FD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_35 $$ assertEquals(sessionFactory().getStatistics().getSecondLevelCacheMissCount(), 0)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_76 $$ s = openSession()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_46 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_38 $$ assertEquals(sessionFactory().getStatistics().getQueryExecutionCount(), 1)[ CD ]
Line_23 $$ Transaction tx4 = TestingJtaPlatformImpl.INSTANCE.getTransactionManager().suspend()-->Line_61 $$ TestingJtaPlatformImpl.INSTANCE.getTransactionManager().resume(tx4)[ FD ]
Line_22 $$ Session s4 = openSession()-->Line_62 $$ List r4 = s4.createCriteria("Item").addOrder(Order.asc("description")).setCacheable(true).list()[ FD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_22 $$ Session s4 = openSession()[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_59 $$ assertEquals(sessionFactory().getStatistics().getUpdateTimestampsCachePutCount(), 0)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_57 $$ assertEquals(sessionFactory().getStatistics().getQueryCacheMissCount(), 1)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_66 $$ assertEquals(sessionFactory().getStatistics().getSecondLevelCacheMissCount(), 0)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_69 $$ assertEquals(sessionFactory().getStatistics().getQueryExecutionCount(), 1)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_50 $$ assertEquals(sessionFactory().getStatistics().getSecondLevelCacheHitCount(), 4)[ CD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_62 $$ List r4 = s4.createCriteria("Item").addOrder(Order.asc("description")).setCacheable(true).list()[ CD ]
Line_31 $$ List r2 = s2.createCriteria("Item").addOrder(Order.asc("description")).setCacheable(true).list()-->Line_32 $$ assertEquals(r2.size(), 2)[ FD ]
Line_2 $$ public void testConcurrentCachedQueries() throws Exception -->Line_37 $$ assertEquals(sessionFactory().getStatistics().getEntityFetchCount(), 0)[ CD ]
