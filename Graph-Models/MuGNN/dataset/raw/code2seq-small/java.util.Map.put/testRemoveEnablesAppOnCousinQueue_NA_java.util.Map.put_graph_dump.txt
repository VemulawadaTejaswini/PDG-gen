Line_2 $$ public void testRemoveEnablesAppOnCousinQueue() -->Line_9 $$ assertEquals(1, leaf1.getRunnableAppSchedulables().size())[ CD ]
Line_2 $$ public void testRemoveEnablesAppOnCousinQueue() -->Line_3 $$ FSLeafQueue leaf1 = queueManager.getLeafQueue("root.queue1.subqueue1.leaf1", true)[ CD ]
Line_2 $$ public void testRemoveEnablesAppOnCousinQueue() -->Line_13 $$ assertEquals(0, leaf1.getRunnableAppSchedulables().size())[ CD ]
Line_4 $$ FSLeafQueue leaf2 = queueManager.getLeafQueue("root.queue1.subqueue2.leaf2", true)-->Line_8 $$ addApp(leaf2, "user")[ FD ]
Line_4 $$ FSLeafQueue leaf2 = queueManager.getLeafQueue("root.queue1.subqueue2.leaf2", true)-->Line_11 $$ assertEquals(1, leaf2.getNonRunnableAppSchedulables().size())[ FD ]
Line_2 $$ public void testRemoveEnablesAppOnCousinQueue() -->Line_5 $$ queueMaxApps.put("root.queue1", 2)[ CD ]
Line_4 $$ FSLeafQueue leaf2 = queueManager.getLeafQueue("root.queue1.subqueue2.leaf2", true)-->Line_10 $$ assertEquals(1, leaf2.getRunnableAppSchedulables().size())[ FD ]
Line_2 $$ public void testRemoveEnablesAppOnCousinQueue() -->Line_8 $$ addApp(leaf2, "user")[ CD ]
Line_6 $$ FSAppAttempt app1 = addApp(leaf1, "user")-->Line_12 $$ removeApp(app1)[ FD ]
Line_3 $$ FSLeafQueue leaf1 = queueManager.getLeafQueue("root.queue1.subqueue1.leaf1", true)-->Line_6 $$ FSAppAttempt app1 = addApp(leaf1, "user")[ FD ]
Line_2 $$ public void testRemoveEnablesAppOnCousinQueue() -->Line_10 $$ assertEquals(1, leaf2.getRunnableAppSchedulables().size())[ CD ]
Line_2 $$ public void testRemoveEnablesAppOnCousinQueue() -->Line_12 $$ removeApp(app1)[ CD ]
Line_2 $$ public void testRemoveEnablesAppOnCousinQueue() -->Line_7 $$ addApp(leaf2, "user")[ CD ]
Line_4 $$ FSLeafQueue leaf2 = queueManager.getLeafQueue("root.queue1.subqueue2.leaf2", true)-->Line_14 $$ assertEquals(2, leaf2.getRunnableAppSchedulables().size())[ FD ]
Line_2 $$ public void testRemoveEnablesAppOnCousinQueue() -->Line_11 $$ assertEquals(1, leaf2.getNonRunnableAppSchedulables().size())[ CD ]
Line_4 $$ FSLeafQueue leaf2 = queueManager.getLeafQueue("root.queue1.subqueue2.leaf2", true)-->Line_7 $$ addApp(leaf2, "user")[ FD ]
Line_3 $$ FSLeafQueue leaf1 = queueManager.getLeafQueue("root.queue1.subqueue1.leaf1", true)-->Line_13 $$ assertEquals(0, leaf1.getRunnableAppSchedulables().size())[ FD ]
Line_2 $$ public void testRemoveEnablesAppOnCousinQueue() -->Line_4 $$ FSLeafQueue leaf2 = queueManager.getLeafQueue("root.queue1.subqueue2.leaf2", true)[ CD ]
Line_2 $$ public void testRemoveEnablesAppOnCousinQueue() -->Line_14 $$ assertEquals(2, leaf2.getRunnableAppSchedulables().size())[ CD ]
Line_2 $$ public void testRemoveEnablesAppOnCousinQueue() -->Line_15 $$ assertEquals(0, leaf2.getNonRunnableAppSchedulables().size())[ CD ]
Line_2 $$ public void testRemoveEnablesAppOnCousinQueue() -->Line_6 $$ FSAppAttempt app1 = addApp(leaf1, "user")[ CD ]
Line_4 $$ FSLeafQueue leaf2 = queueManager.getLeafQueue("root.queue1.subqueue2.leaf2", true)-->Line_15 $$ assertEquals(0, leaf2.getNonRunnableAppSchedulables().size())[ FD ]
Line_3 $$ FSLeafQueue leaf1 = queueManager.getLeafQueue("root.queue1.subqueue1.leaf1", true)-->Line_9 $$ assertEquals(1, leaf1.getRunnableAppSchedulables().size())[ FD ]
