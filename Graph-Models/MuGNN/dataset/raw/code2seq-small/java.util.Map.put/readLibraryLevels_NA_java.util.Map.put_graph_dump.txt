Line_2 $$ protected void readLibraryLevels(Element root, @NotNull Map<String, String> levels) -->Line_3 $$ final Element levelsElement = root.getChild("levels")[ FD ]
Line_3 $$ final Element levelsElement = root.getChild("levels")-->Line_4 $$ if (levelsElement != null) [ FD ]
Line_3 $$ final Element levelsElement = root.getChild("levels")-->Line_5 $$ for (Element element : levelsElement.getChildren("level")) [ FD ]
Line_8 $$ if (libName != null && libLevel != null) -->Line_9 $$ levels.put(libName, libLevel)[ CD ]
Line_6 $$ String libName = element.getAttributeValue("name")-->Line_9 $$ levels.put(libName, libLevel)[ FD ]
Line_2 $$ protected void readLibraryLevels(Element root, @NotNull Map<String, String> levels) -->Line_9 $$ levels.put(libName, libLevel)[ FD ]
Line_7 $$ String libLevel = element.getAttributeValue("value")-->Line_9 $$ levels.put(libName, libLevel)[ FD ]
Line_5 $$ for (Element element : levelsElement.getChildren("level")) -->Line_6 $$ String libName = element.getAttributeValue("name")[ FD ]
Line_2 $$ protected void readLibraryLevels(Element root, @NotNull Map<String, String> levels) -->Line_4 $$ if (levelsElement != null) [ CD ]
Line_2 $$ protected void readLibraryLevels(Element root, @NotNull Map<String, String> levels) -->Line_3 $$ final Element levelsElement = root.getChild("levels")[ CD ]
Line_5 $$ for (Element element : levelsElement.getChildren("level")) -->Line_7 $$ String libLevel = element.getAttributeValue("value")[ FD ]
