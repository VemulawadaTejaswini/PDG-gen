Line_19 $$ for (Enumeration<String> en = session.getAttributeNames(); en.hasMoreElements(); ) -->Line_21 $$ if (model.containsKey(attribute) && !this.allowSessionOverride) [ CD ]
Line_2 $$ protected final void renderMergedOutputModel(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_38 $$ applyContentType(response)[ CD ]
Line_17 $$ HttpSession session = request.getSession(false)-->Line_19 $$ for (Enumeration<String> en = session.getAttributeNames(); en.hasMoreElements(); ) [ FD ]
Line_5 $$ String attribute = en.nextElement()-->Line_28 $$ model.put(attribute, attributeValue)[ FD ]
Line_2 $$ protected final void renderMergedOutputModel(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_13 $$ model.put(attribute, attributeValue)[ FD ]
Line_5 $$ String attribute = en.nextElement()-->Line_13 $$ model.put(attribute, attributeValue)[ FD ]
Line_2 $$ protected final void renderMergedOutputModel(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_16 $$ if (this.exposeSessionAttributes) [ CD ]
Line_16 $$ if (this.exposeSessionAttributes) -->Line_18 $$ if (session != null) [ CD ]
Line_9 $$ Object attributeValue = request.getAttribute(attribute)-->Line_13 $$ model.put(attribute, attributeValue)[ FD ]
Line_32 $$ if (this.exposeSpringMacroHelpers) -->Line_36 $$ model.put(SPRING_MACRO_REQUEST_CONTEXT_ATTRIBUTE, new RequestContext(request, response, getServletContext(), model))[ CD ]
Line_19 $$ for (Enumeration<String> en = session.getAttributeNames(); en.hasMoreElements(); ) -->Line_24 $$ Object attributeValue = session.getAttribute(attribute)[ CD ]
Line_2 $$ protected final void renderMergedOutputModel(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_32 $$ if (this.exposeSpringMacroHelpers) [ CD ]
Line_2 $$ protected final void renderMergedOutputModel(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_39 $$ renderMergedTemplateModel(model, request, response)[ CD ]
Line_32 $$ if (this.exposeSpringMacroHelpers) -->Line_33 $$ if (model.containsKey(SPRING_MACRO_REQUEST_CONTEXT_ATTRIBUTE)) [ CD ]
Line_17 $$ HttpSession session = request.getSession(false)-->Line_18 $$ if (session != null) [ FD ]
Line_2 $$ protected final void renderMergedOutputModel(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_4 $$ for (Enumeration<String> en = request.getAttributeNames(); en.hasMoreElements(); ) [ FD ]
Line_19 $$ for (Enumeration<String> en = session.getAttributeNames(); en.hasMoreElements(); ) -->Line_25 $$ if (logger.isDebugEnabled()) [ CD ]
Line_2 $$ protected final void renderMergedOutputModel(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_9 $$ Object attributeValue = request.getAttribute(attribute)[ FD ]
Line_18 $$ if (session != null) -->Line_19 $$ for (Enumeration<String> en = session.getAttributeNames(); en.hasMoreElements(); ) [ CD ]
Line_4 $$ for (Enumeration<String> en = request.getAttributeNames(); en.hasMoreElements(); ) -->Line_20 $$ String attribute = en.nextElement()[ FD ]
Line_4 $$ for (Enumeration<String> en = request.getAttributeNames(); en.hasMoreElements(); ) -->Line_5 $$ String attribute = en.nextElement()[ CD ]
Line_24 $$ Object attributeValue = session.getAttribute(attribute)-->Line_28 $$ model.put(attribute, attributeValue)[ FD ]
Line_20 $$ String attribute = en.nextElement()-->Line_28 $$ model.put(attribute, attributeValue)[ FD ]
Line_9 $$ Object attributeValue = request.getAttribute(attribute)-->Line_28 $$ model.put(attribute, attributeValue)[ FD ]
Line_4 $$ for (Enumeration<String> en = request.getAttributeNames(); en.hasMoreElements(); ) -->Line_13 $$ model.put(attribute, attributeValue)[ CD ]
Line_2 $$ protected final void renderMergedOutputModel(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_3 $$ if (this.exposeRequestAttributes) [ CD ]
Line_4 $$ for (Enumeration<String> en = request.getAttributeNames(); en.hasMoreElements(); ) -->Line_10 $$ if (logger.isDebugEnabled()) [ CD ]
Line_3 $$ if (this.exposeRequestAttributes) -->Line_4 $$ for (Enumeration<String> en = request.getAttributeNames(); en.hasMoreElements(); ) [ CD ]
Line_17 $$ HttpSession session = request.getSession(false)-->Line_24 $$ Object attributeValue = session.getAttribute(attribute)[ FD ]
Line_2 $$ protected final void renderMergedOutputModel(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_39 $$ renderMergedTemplateModel(model, request, response)[ FD ]
Line_5 $$ String attribute = en.nextElement()-->Line_24 $$ Object attributeValue = session.getAttribute(attribute)[ FD ]
Line_2 $$ protected final void renderMergedOutputModel(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_33 $$ if (model.containsKey(SPRING_MACRO_REQUEST_CONTEXT_ATTRIBUTE)) [ FD ]
Line_19 $$ for (Enumeration<String> en = session.getAttributeNames(); en.hasMoreElements(); ) -->Line_20 $$ String attribute = en.nextElement()[ FD ]
Line_4 $$ for (Enumeration<String> en = request.getAttributeNames(); en.hasMoreElements(); ) -->Line_6 $$ if (model.containsKey(attribute) && !this.allowRequestOverride) [ CD ]
Line_4 $$ for (Enumeration<String> en = request.getAttributeNames(); en.hasMoreElements(); ) -->Line_9 $$ Object attributeValue = request.getAttribute(attribute)[ CD ]
Line_19 $$ for (Enumeration<String> en = session.getAttributeNames(); en.hasMoreElements(); ) -->Line_20 $$ String attribute = en.nextElement()[ CD ]
Line_5 $$ String attribute = en.nextElement()-->Line_21 $$ if (model.containsKey(attribute) && !this.allowSessionOverride) [ FD ]
Line_2 $$ protected final void renderMergedOutputModel(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_36 $$ model.put(SPRING_MACRO_REQUEST_CONTEXT_ATTRIBUTE, new RequestContext(request, response, getServletContext(), model))[ FD ]
Line_2 $$ protected final void renderMergedOutputModel(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_28 $$ model.put(attribute, attributeValue)[ FD ]
Line_2 $$ protected final void renderMergedOutputModel(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_21 $$ if (model.containsKey(attribute) && !this.allowSessionOverride) [ FD ]
Line_2 $$ protected final void renderMergedOutputModel(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_17 $$ HttpSession session = request.getSession(false)[ FD ]
Line_16 $$ if (this.exposeSessionAttributes) -->Line_17 $$ HttpSession session = request.getSession(false)[ CD ]
Line_20 $$ String attribute = en.nextElement()-->Line_21 $$ if (model.containsKey(attribute) && !this.allowSessionOverride) [ FD ]
Line_19 $$ for (Enumeration<String> en = session.getAttributeNames(); en.hasMoreElements(); ) -->Line_28 $$ model.put(attribute, attributeValue)[ CD ]
Line_2 $$ protected final void renderMergedOutputModel(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_6 $$ if (model.containsKey(attribute) && !this.allowRequestOverride) [ FD ]
Line_2 $$ protected final void renderMergedOutputModel(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_38 $$ applyContentType(response)[ FD ]
Line_10 $$ if (logger.isDebugEnabled()) -->Line_11 $$ logger.debug("Exposing request attribute '" + attribute + "' with value [" + attributeValue + "] to model")[ CD ]
Line_20 $$ String attribute = en.nextElement()-->Line_24 $$ Object attributeValue = session.getAttribute(attribute)[ FD ]
Line_4 $$ for (Enumeration<String> en = request.getAttributeNames(); en.hasMoreElements(); ) -->Line_5 $$ String attribute = en.nextElement()[ FD ]
Line_25 $$ if (logger.isDebugEnabled()) -->Line_26 $$ logger.debug("Exposing session attribute '" + attribute + "' with value [" + attributeValue + "] to model")[ CD ]
Line_4 $$ for (Enumeration<String> en = request.getAttributeNames(); en.hasMoreElements(); ) -->Line_19 $$ for (Enumeration<String> en = session.getAttributeNames(); en.hasMoreElements(); ) [ FD ]
Line_5 $$ String attribute = en.nextElement()-->Line_6 $$ if (model.containsKey(attribute) && !this.allowRequestOverride) [ FD ]
Line_5 $$ String attribute = en.nextElement()-->Line_9 $$ Object attributeValue = request.getAttribute(attribute)[ FD ]
