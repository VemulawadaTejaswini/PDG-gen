Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_73 $$ getAssociation(Any.class, annotationList, defaults)[ FD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_26 $$ addIfNotNull(annotationList, getSequenceGenerator(tree, defaults))[ CD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_69 $$ getAssociation(ManyToOne.class, annotationList, defaults)[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_31 $$ addIfNotNull(annotationList, getNamedEntityGraphs(tree, defaults))[ FD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_33 $$ addIfNotNull(annotationList, getExcludeDefaultListeners(tree, defaults))[ CD ]
Line_57 $$ if (transientAnn != null) -->Line_78 $$ addIfNotNull(annotationList, getConvertsForAttribute(elementsForProperty, defaults))[ CD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_55 $$ preCalculateElementsForProperty(tree)[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_28 $$ addIfNotNull(annotationList, getNamedQueries(tree, defaults))[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_29 $$ addIfNotNull(annotationList, getNamedNativeQueries(tree, defaults))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_15 $$ addIfNotNull(annotationList, getEntity(tree, defaults))[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_25 $$ addIfNotNull(annotationList, getDiscriminatorColumn(tree, defaults))[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_68 $$ getVersion(annotationList, defaults)[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_74 $$ getAssociation(ManyToAny.class, annotationList, defaults)[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_39 $$ addIfNotNull(annotationList, getConverts(tree, defaults))[ FD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_16 $$ addIfNotNull(annotationList, getMappedSuperclass(tree, defaults))[ CD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_24 $$ addIfNotNull(annotationList, getDiscriminatorValue(tree, defaults))[ FD ]
Line_41 $$ for (Annotation ann : this.annotations) -->Line_83 $$ annotationsMap.put(ann.annotationType(), ann)[ FD ]
Line_10 $$ for (Annotation annotation : annotations) -->Line_12 $$ annotationList.add(annotation)[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_12 $$ annotationList.add(annotation)[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_21 $$ addIfNotNull(annotationList, getIdClass(tree, defaults))[ FD ]
Line_57 $$ if (transientAnn != null) -->Line_69 $$ getAssociation(ManyToOne.class, annotationList, defaults)[ CD ]
Line_3 $$ if (annotations == null) -->Line_5 $$ if (className != null && propertyName == null) [ CD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_27 $$ addIfNotNull(annotationList, getTableGenerator(tree, defaults))[ FD ]
Line_3 $$ if (annotations == null) -->Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)[ CD ]
Line_10 $$ for (Annotation annotation : annotations) -->Line_11 $$ if (!annotationToXml.containsKey(annotation.annotationType())) [ FD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_44 $$ checkForOrphanProperties(tree)[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_37 $$ addIfNotNull(annotationList, getAssociationOverrides(tree, defaults, true))[ FD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_18 $$ addIfNotNull(annotationList, getTable(tree, defaults))[ FD ]
Line_45 $$ if (className != null) -->Line_55 $$ preCalculateElementsForProperty(tree)[ CD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_67 $$ getBasic(annotationList, defaults)[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_37 $$ addIfNotNull(annotationList, getAssociationOverrides(tree, defaults, true))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_66 $$ getEmbedded(annotationList, defaults)[ FD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_21 $$ addIfNotNull(annotationList, getIdClass(tree, defaults))[ CD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_25 $$ addIfNotNull(annotationList, getDiscriminatorColumn(tree, defaults))[ CD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_44 $$ checkForOrphanProperties(tree)[ CD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_66 $$ getEmbedded(annotationList, defaults)[ FD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_35 $$ addIfNotNull(annotationList, getAccessType(tree, defaults))[ CD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_37 $$ addIfNotNull(annotationList, getAssociationOverrides(tree, defaults, true))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_38 $$ addIfNotNull(annotationList, getEntityListeners(tree, defaults))[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_56 $$ Transient transientAnn = getTransient(defaults)[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_32 $$ addIfNotNull(annotationList, getSqlResultSetMappings(tree, defaults))[ FD ]
Line_57 $$ if (transientAnn != null) -->Line_70 $$ getAssociation(OneToOne.class, annotationList, defaults)[ CD ]
Line_45 $$ if (className != null) -->Line_56 $$ Transient transientAnn = getTransient(defaults)[ CD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_65 $$ getEmbeddedId(annotationList, defaults)[ FD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_28 $$ addIfNotNull(annotationList, getNamedQueries(tree, defaults))[ CD ]
Line_57 $$ if (transientAnn != null) -->Line_74 $$ getAssociation(ManyToAny.class, annotationList, defaults)[ CD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_17 $$ addIfNotNull(annotationList, getEmbeddable(tree, defaults))[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_23 $$ addIfNotNull(annotationList, getInheritance(tree, defaults))[ FD ]
Line_57 $$ if (transientAnn != null) -->Line_76 $$ addIfNotNull(annotationList, getSequenceGenerator(elementsForProperty, defaults))[ CD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_78 $$ addIfNotNull(annotationList, getConvertsForAttribute(elementsForProperty, defaults))[ FD ]
Line_45 $$ if (className != null) -->Line_86 $$ this.annotations = getPhysicalAnnotations()[ CD ]
Line_10 $$ for (Annotation annotation : annotations) -->Line_51 $$ if (!annotationToXml.containsKey(annotation.annotationType())) [ FD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_33 $$ addIfNotNull(annotationList, getExcludeDefaultListeners(tree, defaults))[ FD ]
Line_45 $$ if (className != null) -->Line_46 $$ Element tree = xmlContext.getXMLTree(className)[ CD ]
Line_57 $$ if (transientAnn != null) -->Line_73 $$ getAssociation(Any.class, annotationList, defaults)[ CD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_20 $$ addIfNotNull(annotationList, getPrimaryKeyJoinColumns(tree, defaults, true))[ CD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_45 $$ if (className != null) [ CD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_34 $$ addIfNotNull(annotationList, getExcludeSuperclassListeners(tree, defaults))[ FD ]
Line_41 $$ for (Annotation ann : this.annotations) -->Line_42 $$ annotationsMap.put(ann.annotationType(), ann)[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_33 $$ addIfNotNull(annotationList, getExcludeDefaultListeners(tree, defaults))[ FD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_32 $$ addIfNotNull(annotationList, getSqlResultSetMappings(tree, defaults))[ CD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_17 $$ addIfNotNull(annotationList, getEmbeddable(tree, defaults))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_23 $$ addIfNotNull(annotationList, getInheritance(tree, defaults))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_70 $$ getAssociation(OneToOne.class, annotationList, defaults)[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_64 $$ getId(annotationList, defaults)[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_67 $$ getBasic(annotationList, defaults)[ FD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_15 $$ addIfNotNull(annotationList, getEntity(tree, defaults))[ CD ]
Line_57 $$ if (transientAnn != null) -->Line_60 $$ if (defaults.canUseJavaAnnotations()) [ CD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)[ CD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_27 $$ addIfNotNull(annotationList, getTableGenerator(tree, defaults))[ FD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_34 $$ addIfNotNull(annotationList, getExcludeSuperclassListeners(tree, defaults))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_18 $$ addIfNotNull(annotationList, getTable(tree, defaults))[ FD ]
Line_57 $$ if (transientAnn != null) -->Line_58 $$ annotationList.add(transientAnn)[ CD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_38 $$ addIfNotNull(annotationList, getEntityListeners(tree, defaults))[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_70 $$ getAssociation(OneToOne.class, annotationList, defaults)[ FD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_29 $$ addIfNotNull(annotationList, getNamedNativeQueries(tree, defaults))[ FD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_38 $$ addIfNotNull(annotationList, getEntityListeners(tree, defaults))[ CD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_18 $$ addIfNotNull(annotationList, getTable(tree, defaults))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_19 $$ addIfNotNull(annotationList, getSecondaryTables(tree, defaults))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_75 $$ getElementCollection(annotationList, defaults)[ FD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_27 $$ addIfNotNull(annotationList, getTableGenerator(tree, defaults))[ CD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_32 $$ addIfNotNull(annotationList, getSqlResultSetMappings(tree, defaults))[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_22 $$ addIfNotNull(annotationList, getCacheable(tree, defaults))[ FD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_17 $$ addIfNotNull(annotationList, getEmbeddable(tree, defaults))[ CD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_35 $$ addIfNotNull(annotationList, getAccessType(tree, defaults))[ FD ]
Line_45 $$ if (className != null) -->Line_57 $$ if (transientAnn != null) [ CD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_20 $$ addIfNotNull(annotationList, getPrimaryKeyJoinColumns(tree, defaults, true))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_36 $$ addIfNotNull(annotationList, getAttributeOverrides(tree, defaults, true))[ FD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_36 $$ addIfNotNull(annotationList, getAttributeOverrides(tree, defaults, true))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_58 $$ annotationList.add(transientAnn)[ FD ]
Line_10 $$ for (Annotation annotation : annotations) -->Line_62 $$ addIfNotNull(annotationList, annotation)[ FD ]
Line_56 $$ Transient transientAnn = getTransient(defaults)-->Line_57 $$ if (transientAnn != null) [ FD ]
Line_57 $$ if (transientAnn != null) -->Line_64 $$ getId(annotationList, defaults)[ CD ]
Line_51 $$ if (!annotationToXml.containsKey(annotation.annotationType())) -->Line_52 $$ annotationList.add(annotation)[ CD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_19 $$ addIfNotNull(annotationList, getSecondaryTables(tree, defaults))[ CD ]
Line_45 $$ if (className != null) -->Line_47 $$ Annotation[] annotations = getPhysicalAnnotations()[ CD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_6 $$ Element tree = xmlContext.getXMLTree(className)[ CD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_72 $$ getAssociation(ManyToMany.class, annotationList, defaults)[ FD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_31 $$ addIfNotNull(annotationList, getNamedEntityGraphs(tree, defaults))[ CD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_16 $$ addIfNotNull(annotationList, getMappedSuperclass(tree, defaults))[ FD ]
Line_56 $$ Transient transientAnn = getTransient(defaults)-->Line_58 $$ annotationList.add(transientAnn)[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_19 $$ addIfNotNull(annotationList, getSecondaryTables(tree, defaults))[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_26 $$ addIfNotNull(annotationList, getSequenceGenerator(tree, defaults))[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_30 $$ addIfNotNull(annotationList, getNamedStoredProcedureQueries(tree, defaults))[ FD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_24 $$ addIfNotNull(annotationList, getDiscriminatorValue(tree, defaults))[ CD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_30 $$ addIfNotNull(annotationList, getNamedStoredProcedureQueries(tree, defaults))[ FD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_37 $$ addIfNotNull(annotationList, getAssociationOverrides(tree, defaults, true))[ CD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_80 $$ processEventAnnotations(annotationList, defaults)[ FD ]
Line_57 $$ if (transientAnn != null) -->Line_71 $$ getAssociation(OneToMany.class, annotationList, defaults)[ CD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_77 $$ addIfNotNull(annotationList, getTableGenerator(elementsForProperty, defaults))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_27 $$ addIfNotNull(annotationList, getTableGenerator(tree, defaults))[ FD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_23 $$ addIfNotNull(annotationList, getInheritance(tree, defaults))[ FD ]
Line_10 $$ for (Annotation annotation : annotations) -->Line_52 $$ annotationList.add(annotation)[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_35 $$ addIfNotNull(annotationList, getAccessType(tree, defaults))[ FD ]
Line_2 $$ private void initAnnotations() -->Line_3 $$ if (annotations == null) [ CD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_28 $$ addIfNotNull(annotationList, getNamedQueries(tree, defaults))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_30 $$ addIfNotNull(annotationList, getNamedStoredProcedureQueries(tree, defaults))[ FD ]
Line_45 $$ if (className != null) -->Line_81 $$ this.annotations = annotationList.toArray(new Annotation[annotationList.size()])[ CD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_40 $$ this.annotations = annotationList.toArray(new Annotation[annotationList.size()])[ CD ]
Line_57 $$ if (transientAnn != null) -->Line_66 $$ getEmbedded(annotationList, defaults)[ CD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_22 $$ addIfNotNull(annotationList, getCacheable(tree, defaults))[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_36 $$ addIfNotNull(annotationList, getAttributeOverrides(tree, defaults, true))[ FD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_16 $$ addIfNotNull(annotationList, getMappedSuperclass(tree, defaults))[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_80 $$ processEventAnnotations(annotationList, defaults)[ FD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_19 $$ addIfNotNull(annotationList, getSecondaryTables(tree, defaults))[ FD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_23 $$ addIfNotNull(annotationList, getInheritance(tree, defaults))[ CD ]
Line_57 $$ if (transientAnn != null) -->Line_75 $$ getElementCollection(annotationList, defaults)[ CD ]
Line_57 $$ if (transientAnn != null) -->Line_68 $$ getVersion(annotationList, defaults)[ CD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_25 $$ addIfNotNull(annotationList, getDiscriminatorColumn(tree, defaults))[ FD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_35 $$ addIfNotNull(annotationList, getAccessType(tree, defaults))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_39 $$ addIfNotNull(annotationList, getConverts(tree, defaults))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_64 $$ getId(annotationList, defaults)[ FD ]
Line_57 $$ if (transientAnn != null) -->Line_72 $$ getAssociation(ManyToMany.class, annotationList, defaults)[ CD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_68 $$ getVersion(annotationList, defaults)[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_40 $$ this.annotations = annotationList.toArray(new Annotation[annotationList.size()])[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_16 $$ addIfNotNull(annotationList, getMappedSuperclass(tree, defaults))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_73 $$ getAssociation(Any.class, annotationList, defaults)[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_74 $$ getAssociation(ManyToAny.class, annotationList, defaults)[ FD ]
Line_45 $$ if (className != null) -->Line_80 $$ processEventAnnotations(annotationList, defaults)[ CD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_18 $$ addIfNotNull(annotationList, getTable(tree, defaults))[ CD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_76 $$ addIfNotNull(annotationList, getSequenceGenerator(elementsForProperty, defaults))[ FD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_25 $$ addIfNotNull(annotationList, getDiscriminatorColumn(tree, defaults))[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_69 $$ getAssociation(ManyToOne.class, annotationList, defaults)[ FD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_36 $$ addIfNotNull(annotationList, getAttributeOverrides(tree, defaults, true))[ CD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_78 $$ addIfNotNull(annotationList, getConvertsForAttribute(elementsForProperty, defaults))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_52 $$ annotationList.add(annotation)[ FD ]
Line_11 $$ if (!annotationToXml.containsKey(annotation.annotationType())) -->Line_12 $$ annotationList.add(annotation)[ CD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_34 $$ addIfNotNull(annotationList, getExcludeSuperclassListeners(tree, defaults))[ FD ]
Line_57 $$ if (transientAnn != null) -->Line_65 $$ getEmbeddedId(annotationList, defaults)[ CD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_24 $$ addIfNotNull(annotationList, getDiscriminatorValue(tree, defaults))[ FD ]
Line_57 $$ if (transientAnn != null) -->Line_77 $$ addIfNotNull(annotationList, getTableGenerator(elementsForProperty, defaults))[ CD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_7 $$ Annotation[] annotations = getPhysicalAnnotations()[ CD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_81 $$ this.annotations = annotationList.toArray(new Annotation[annotationList.size()])[ FD ]
Line_60 $$ if (defaults.canUseJavaAnnotations()) -->Line_62 $$ addIfNotNull(annotationList, annotation)[ CD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_20 $$ addIfNotNull(annotationList, getPrimaryKeyJoinColumns(tree, defaults, true))[ FD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_22 $$ addIfNotNull(annotationList, getCacheable(tree, defaults))[ CD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_32 $$ addIfNotNull(annotationList, getSqlResultSetMappings(tree, defaults))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_62 $$ addIfNotNull(annotationList, annotation)[ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_71 $$ getAssociation(OneToMany.class, annotationList, defaults)[ FD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_29 $$ addIfNotNull(annotationList, getNamedNativeQueries(tree, defaults))[ CD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_39 $$ addIfNotNull(annotationList, getConverts(tree, defaults))[ CD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_60 $$ if (defaults.canUseJavaAnnotations()) [ FD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_15 $$ addIfNotNull(annotationList, getEntity(tree, defaults))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_22 $$ addIfNotNull(annotationList, getCacheable(tree, defaults))[ FD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_28 $$ addIfNotNull(annotationList, getNamedQueries(tree, defaults))[ FD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_34 $$ addIfNotNull(annotationList, getExcludeSuperclassListeners(tree, defaults))[ CD ]
Line_5 $$ if (className != null && propertyName == null) -->Line_30 $$ addIfNotNull(annotationList, getNamedStoredProcedureQueries(tree, defaults))[ CD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_33 $$ addIfNotNull(annotationList, getExcludeDefaultListeners(tree, defaults))[ FD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_38 $$ addIfNotNull(annotationList, getEntityListeners(tree, defaults))[ FD ]
Line_60 $$ if (defaults.canUseJavaAnnotations()) -->Line_61 $$ Annotation annotation = getPhysicalAnnotation(Access.class)[ CD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_24 $$ addIfNotNull(annotationList, getDiscriminatorValue(tree, defaults))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_21 $$ addIfNotNull(annotationList, getIdClass(tree, defaults))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_76 $$ addIfNotNull(annotationList, getSequenceGenerator(elementsForProperty, defaults))[ FD ]
Line_57 $$ if (transientAnn != null) -->Line_67 $$ getBasic(annotationList, defaults)[ CD ]
Line_4 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_75 $$ getElementCollection(annotationList, defaults)[ FD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_31 $$ addIfNotNull(annotationList, getNamedEntityGraphs(tree, defaults))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_71 $$ getAssociation(OneToMany.class, annotationList, defaults)[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_26 $$ addIfNotNull(annotationList, getSequenceGenerator(tree, defaults))[ FD ]
Line_41 $$ for (Annotation ann : this.annotations) -->Line_89 $$ annotationsMap.put(ann.annotationType(), ann)[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_31 $$ addIfNotNull(annotationList, getNamedEntityGraphs(tree, defaults))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_72 $$ getAssociation(ManyToMany.class, annotationList, defaults)[ FD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_39 $$ addIfNotNull(annotationList, getConverts(tree, defaults))[ FD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_26 $$ addIfNotNull(annotationList, getSequenceGenerator(tree, defaults))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_77 $$ addIfNotNull(annotationList, getTableGenerator(elementsForProperty, defaults))[ FD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_15 $$ addIfNotNull(annotationList, getEntity(tree, defaults))[ FD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_21 $$ addIfNotNull(annotationList, getIdClass(tree, defaults))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_29 $$ addIfNotNull(annotationList, getNamedNativeQueries(tree, defaults))[ FD ]
Line_6 $$ Element tree = xmlContext.getXMLTree(className)-->Line_20 $$ addIfNotNull(annotationList, getPrimaryKeyJoinColumns(tree, defaults, true))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_17 $$ addIfNotNull(annotationList, getEmbeddable(tree, defaults))[ FD ]
Line_8 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_65 $$ getEmbeddedId(annotationList, defaults)[ FD ]
