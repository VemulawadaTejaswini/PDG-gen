Line_2 $$ public void defaultIndexNameContainsTargetColumns() throws Throwable -->Line_16 $$ options.put("foo", "bar")[ CD ]
Line_2 $$ public void defaultIndexNameContainsTargetColumns() throws Throwable -->Line_17 $$ assertIndexCreated(currentTable() + "_idx_3", options, "c", "v2")[ CD ]
Line_2 $$ public void defaultIndexNameContainsTargetColumns() throws Throwable -->Line_7 $$ createIndex(String.format("CREATE CUSTOM INDEX ON %%s(c, v1, v2) USING '%s'", StubIndex.class.getName()))[ CD ]
Line_2 $$ public void defaultIndexNameContainsTargetColumns() throws Throwable -->Line_11 $$ assertEquals(3, getCurrentColumnFamilyStore().metadata.getIndexes().size())[ CD ]
Line_2 $$ public void defaultIndexNameContainsTargetColumns() throws Throwable -->Line_12 $$ assertIndexCreated(currentTable() + "_idx_2", "c", "v2")[ CD ]
Line_2 $$ public void defaultIndexNameContainsTargetColumns() throws Throwable -->Line_14 $$ assertEquals(4, getCurrentColumnFamilyStore().metadata.getIndexes().size())[ CD ]
Line_15 $$ Map<String, String> options = new HashMap()-->Line_17 $$ assertIndexCreated(currentTable() + "_idx_3", options, "c", "v2")[ FD ]
Line_2 $$ public void defaultIndexNameContainsTargetColumns() throws Throwable -->Line_13 $$ createIndex(String.format("CREATE CUSTOM INDEX ON %%s(c, v2) USING '%s' WITH OPTIONS = [ CD ]
Line_2 $$ public void defaultIndexNameContainsTargetColumns() throws Throwable -->Line_8 $$ assertEquals(2, getCurrentColumnFamilyStore().metadata.getIndexes().size())[ CD ]
Line_2 $$ public void defaultIndexNameContainsTargetColumns() throws Throwable -->Line_5 $$ assertEquals(1, getCurrentColumnFamilyStore().metadata.getIndexes().size())[ CD ]
Line_2 $$ public void defaultIndexNameContainsTargetColumns() throws Throwable -->Line_9 $$ assertIndexCreated(currentTable() + "_idx_1", "c", "v1", "v2")[ CD ]
Line_2 $$ public void defaultIndexNameContainsTargetColumns() throws Throwable -->Line_3 $$ createTable("CREATE TABLE %s(k int, c int, v1 int, v2 int, PRIMARY KEY(k,c))")[ CD ]
Line_15 $$ Map<String, String> options = new HashMap()-->Line_16 $$ options.put("foo", "bar")[ FD ]
Line_2 $$ public void defaultIndexNameContainsTargetColumns() throws Throwable -->Line_10 $$ createIndex(String.format("CREATE CUSTOM INDEX ON %%s(c, v2) USING '%s'", StubIndex.class.getName()))[ CD ]
Line_2 $$ public void defaultIndexNameContainsTargetColumns() throws Throwable -->Line_4 $$ createIndex(String.format("CREATE CUSTOM INDEX ON %%s(v1, v2) USING '%s'", StubIndex.class.getName()))[ CD ]
Line_2 $$ public void defaultIndexNameContainsTargetColumns() throws Throwable -->Line_15 $$ Map<String, String> options = new HashMap()[ CD ]
Line_2 $$ public void defaultIndexNameContainsTargetColumns() throws Throwable -->Line_6 $$ assertIndexCreated(currentTable() + "_idx", "v1", "v2")[ CD ]
