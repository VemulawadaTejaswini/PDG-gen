Line_2 $$ private int countNNBlocks(Map<String, BlockLocs> map, String path, long size) throws IOException -->Line_5 $$ List<LocatedBlock> locatedBlocks = nn.getBlockLocations(path, 0, size).getLocatedBlocks()[ CD ]
Line_6 $$ for (LocatedBlock lb : locatedBlocks) -->Line_8 $$ DatanodeInfo[] dn_locs = lb.getLocations()[ FD ]
Line_2 $$ private int countNNBlocks(Map<String, BlockLocs> map, String path, long size) throws IOException -->Line_4 $$ NamenodeProtocols nn = cluster.getNameNodeRpc()[ CD ]
Line_4 $$ NamenodeProtocols nn = cluster.getNameNodeRpc()-->Line_5 $$ List<LocatedBlock> locatedBlocks = nn.getBlockLocations(path, 0, size).getLocatedBlocks()[ FD ]
Line_7 $$ String blockId = "" + lb.getBlock().getBlockId()-->Line_15 $$ map.put(blockId, bl)[ FD ]
Line_2 $$ private int countNNBlocks(Map<String, BlockLocs> map, String path, long size) throws IOException -->Line_15 $$ map.put(blockId, bl)[ FD ]
Line_2 $$ private int countNNBlocks(Map<String, BlockLocs> map, String path, long size) throws IOException -->Line_5 $$ List<LocatedBlock> locatedBlocks = nn.getBlockLocations(path, 0, size).getLocatedBlocks()[ FD ]
Line_9 $$ BlockLocs bl = map.get(blockId)-->Line_15 $$ map.put(blockId, bl)[ FD ]
Line_2 $$ private int countNNBlocks(Map<String, BlockLocs> map, String path, long size) throws IOException -->Line_17 $$ return total[ CD ]
Line_9 $$ BlockLocs bl = map.get(blockId)-->Line_10 $$ if (bl == null) [ FD ]
Line_10 $$ if (bl == null) -->Line_11 $$ bl = new BlockLocs()[ CD ]
Line_2 $$ private int countNNBlocks(Map<String, BlockLocs> map, String path, long size) throws IOException -->Line_3 $$ int total = 0[ CD ]
Line_11 $$ bl = new BlockLocs()-->Line_15 $$ map.put(blockId, bl)[ FD ]
Line_7 $$ String blockId = "" + lb.getBlock().getBlockId()-->Line_9 $$ BlockLocs bl = map.get(blockId)[ FD ]
Line_2 $$ private int countNNBlocks(Map<String, BlockLocs> map, String path, long size) throws IOException -->Line_9 $$ BlockLocs bl = map.get(blockId)[ FD ]
Line_6 $$ for (LocatedBlock lb : locatedBlocks) -->Line_7 $$ String blockId = "" + lb.getBlock().getBlockId()[ FD ]
Line_3 $$ int total = 0-->Line_13 $$ total += dn_locs.length[ FD ]
Line_9 $$ BlockLocs bl = map.get(blockId)-->Line_11 $$ bl = new BlockLocs()[ FD ]
