Line_15 $$ final String group = getGroupName(toolWrapper)-->Line_18 $$ groups.put(group, (names = ContainerUtil.newTreeSet()))[ FD ]
Line_22 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() -->Line_34 $$ writer.write(name)[ FD ]
Line_13 $$ for (InspectionToolWrapper toolWrapper : tools) -->Line_15 $$ final String group = getGroupName(toolWrapper)[ FD ]
Line_31 $$ final boolean fqnOk = doDump(fqnListFile, new Processor() -->Line_51 $$ writer.write(name)[ FD ]
Line_16 $$ Collection<String> names = groups.get(group)-->Line_19 $$ names.add(toolWrapper.getShortName())[ FD ]
Line_43 $$ final boolean groupsOk = doDump(groupsFile, new Processor() -->Line_47 $$ writer.write(':')[ FD ]
Line_9 $$ if (!descDirectory.mkdirs() && !descDirectory.isDirectory()) -->Line_11 $$ return[ CD ]
Line_8 $$ final File descDirectory = new File(tempDirectory, "inspections")-->Line_9 $$ if (!descDirectory.mkdirs() && !descDirectory.isDirectory()) [ FD ]
Line_39 $$ if (fqnOk) -->Line_40 $$ doNotify("Inspection class names dumped to\n" + fqnListFile.getAbsolutePath())[ CD ]
Line_33 $$ for (String name : classes) -->Line_51 $$ writer.write(name)[ FD ]
Line_2 $$ public void actionPerformed(final AnActionEvent event) -->Line_8 $$ final File descDirectory = new File(tempDirectory, "inspections")[ CD ]
Line_15 $$ final String group = getGroupName(toolWrapper)-->Line_16 $$ Collection<String> names = groups.get(group)[ FD ]
Line_18 $$ groups.put(group, (names = ContainerUtil.newTreeSet()))-->Line_19 $$ names.add(toolWrapper.getShortName())[ FD ]
Line_22 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() -->Line_24 $$ writer.write(ResourceUtil.loadText(url))[ FD ]
Line_2 $$ public void actionPerformed(final AnActionEvent event) -->Line_3 $$ final InspectionProfile profile = (InspectionProfile) InspectionProfileManager.getInstance().getRootProfile()[ CD ]
Line_2 $$ public void actionPerformed(final AnActionEvent event) -->Line_9 $$ if (!descDirectory.mkdirs() && !descDirectory.isDirectory()) [ CD ]
Line_2 $$ public void actionPerformed(final AnActionEvent event) -->Line_7 $$ final String tempDirectory = FileUtil.getTempDirectory()[ CD ]
Line_33 $$ for (String name : classes) -->Line_34 $$ writer.write(name)[ FD ]
Line_22 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() -->Line_24 $$ writer.write(ResourceUtil.loadText(url))[ CD ]
Line_2 $$ public void actionPerformed(final AnActionEvent event) -->Line_39 $$ if (fqnOk) [ CD ]
Line_45 $$ for (Map.Entry<String, Collection<String>> entry : groups.entrySet()) -->Line_49 $$ for (String name : entry.getValue()) [ FD ]
Line_22 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() -->Line_52 $$ writer.newLine()[ FD ]
Line_22 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() -->Line_50 $$ writer.write("  ")[ FD ]
Line_9 $$ if (!descDirectory.mkdirs() && !descDirectory.isDirectory()) -->Line_10 $$ LOG.error("Unable to create directory: " + descDirectory.getAbsolutePath())[ CD ]
Line_43 $$ final boolean groupsOk = doDump(groupsFile, new Processor() -->Line_48 $$ writer.newLine()[ FD ]
Line_2 $$ public void actionPerformed(final AnActionEvent event) -->Line_57 $$ if (groupsOk) [ CD ]
Line_6 $$ final Map<String, Collection<String>> groups = ContainerUtil.newTreeMap()-->Line_18 $$ groups.put(group, (names = ContainerUtil.newTreeSet()))[ FD ]
Line_5 $$ final Collection<String> classes = ContainerUtil.newTreeSet()-->Line_14 $$ classes.add(getInspectionClass(toolWrapper).getName())[ FD ]
Line_16 $$ Collection<String> names = groups.get(group)-->Line_18 $$ groups.put(group, (names = ContainerUtil.newTreeSet()))[ FD ]
Line_13 $$ for (InspectionToolWrapper toolWrapper : tools) -->Line_14 $$ classes.add(getInspectionClass(toolWrapper).getName())[ FD ]
Line_13 $$ for (InspectionToolWrapper toolWrapper : tools) -->Line_20 $$ final URL url = getDescriptionUrl(toolWrapper)[ FD ]
Line_6 $$ final Map<String, Collection<String>> groups = ContainerUtil.newTreeMap()-->Line_45 $$ for (Map.Entry<String, Collection<String>> entry : groups.entrySet()) [ FD ]
Line_2 $$ public void actionPerformed(final AnActionEvent event) -->Line_6 $$ final Map<String, Collection<String>> groups = ContainerUtil.newTreeMap()[ CD ]
Line_31 $$ final boolean fqnOk = doDump(fqnListFile, new Processor() -->Line_47 $$ writer.write(':')[ FD ]
Line_16 $$ Collection<String> names = groups.get(group)-->Line_17 $$ if (names == null)[ FD ]
Line_31 $$ final boolean fqnOk = doDump(fqnListFile, new Processor() -->Line_52 $$ writer.newLine()[ FD ]
Line_20 $$ final URL url = getDescriptionUrl(toolWrapper)-->Line_21 $$ if (url != null) [ FD ]
Line_2 $$ public void actionPerformed(final AnActionEvent event) -->Line_5 $$ final Collection<String> classes = ContainerUtil.newTreeSet()[ CD ]
Line_2 $$ public void actionPerformed(final AnActionEvent event) -->Line_31 $$ final boolean fqnOk = doDump(fqnListFile, new Processor() [ CD ]
Line_3 $$ final InspectionProfile profile = (InspectionProfile) InspectionProfileManager.getInstance().getRootProfile()-->Line_4 $$ final InspectionToolWrapper[] tools = (InspectionToolWrapper[]) profile.getInspectionTools(null)[ FD ]
Line_17 $$ if (names == null)-->Line_18 $$ groups.put(group, (names = ContainerUtil.newTreeSet()))[ CD ]
Line_31 $$ final boolean fqnOk = doDump(fqnListFile, new Processor() -->Line_46 $$ writer.write(entry.getKey())[ FD ]
Line_22 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() -->Line_47 $$ writer.write(':')[ FD ]
Line_13 $$ for (InspectionToolWrapper toolWrapper : tools) -->Line_19 $$ names.add(toolWrapper.getShortName())[ FD ]
Line_22 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() -->Line_35 $$ writer.newLine()[ FD ]
Line_57 $$ if (groupsOk) -->Line_58 $$ doNotify("Inspection groups dumped to\n" + fqnListFile.getAbsolutePath())[ CD ]
Line_45 $$ for (Map.Entry<String, Collection<String>> entry : groups.entrySet()) -->Line_46 $$ writer.write(entry.getKey())[ FD ]
Line_43 $$ final boolean groupsOk = doDump(groupsFile, new Processor() -->Line_51 $$ writer.write(name)[ FD ]
Line_43 $$ final boolean groupsOk = doDump(groupsFile, new Processor() -->Line_52 $$ writer.newLine()[ FD ]
Line_8 $$ final File descDirectory = new File(tempDirectory, "inspections")-->Line_10 $$ LOG.error("Unable to create directory: " + descDirectory.getAbsolutePath())[ FD ]
Line_21 $$ if (url != null) -->Line_22 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() [ CD ]
Line_22 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() -->Line_48 $$ writer.newLine()[ FD ]
Line_49 $$ for (String name : entry.getValue()) -->Line_51 $$ writer.write(name)[ FD ]
Line_31 $$ final boolean fqnOk = doDump(fqnListFile, new Processor() -->Line_35 $$ writer.newLine()[ FD ]
Line_2 $$ public void actionPerformed(final AnActionEvent event) -->Line_43 $$ final boolean groupsOk = doDump(groupsFile, new Processor() [ CD ]
Line_2 $$ public void actionPerformed(final AnActionEvent event) -->Line_4 $$ final InspectionToolWrapper[] tools = (InspectionToolWrapper[]) profile.getInspectionTools(null)[ CD ]
Line_43 $$ final boolean groupsOk = doDump(groupsFile, new Processor() -->Line_46 $$ writer.write(entry.getKey())[ FD ]
Line_31 $$ final boolean fqnOk = doDump(fqnListFile, new Processor() -->Line_48 $$ writer.newLine()[ FD ]
Line_8 $$ final File descDirectory = new File(tempDirectory, "inspections")-->Line_29 $$ doNotify("Inspection descriptions dumped to\n" + descDirectory.getAbsolutePath())[ FD ]
Line_22 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() -->Line_46 $$ writer.write(entry.getKey())[ FD ]
Line_13 $$ for (InspectionToolWrapper toolWrapper : tools) -->Line_22 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() [ FD ]
Line_2 $$ public void actionPerformed(final AnActionEvent event) -->Line_29 $$ doNotify("Inspection descriptions dumped to\n" + descDirectory.getAbsolutePath())[ CD ]
Line_31 $$ final boolean fqnOk = doDump(fqnListFile, new Processor() -->Line_50 $$ writer.write("  ")[ FD ]
Line_22 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() -->Line_51 $$ writer.write(name)[ FD ]
Line_20 $$ final URL url = getDescriptionUrl(toolWrapper)-->Line_24 $$ writer.write(ResourceUtil.loadText(url))[ FD ]
Line_31 $$ final boolean fqnOk = doDump(fqnListFile, new Processor() -->Line_34 $$ writer.write(name)[ FD ]
Line_43 $$ final boolean groupsOk = doDump(groupsFile, new Processor() -->Line_50 $$ writer.write("  ")[ FD ]
Line_6 $$ final Map<String, Collection<String>> groups = ContainerUtil.newTreeMap()-->Line_16 $$ Collection<String> names = groups.get(group)[ FD ]
