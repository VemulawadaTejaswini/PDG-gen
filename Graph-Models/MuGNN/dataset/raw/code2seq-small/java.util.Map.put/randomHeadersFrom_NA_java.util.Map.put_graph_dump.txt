Line_7 $$ int i = randomInt(headers.size() - 1)-->Line_9 $$ if (randomInt(i) == 0) [ FD ]
Line_3 $$ Map<String, String> newHeaders = new HashMap()-->Line_10 $$ newHeaders.put(entry.getKey(), entry.getValue())[ FD ]
Line_4 $$ if (headers.isEmpty()) -->Line_5 $$ return newHeaders[ CD ]
Line_8 $$ for (Map.Entry<String, String> entry : headers.entrySet()) -->Line_10 $$ newHeaders.put(entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ private static Map<String, String> randomHeadersFrom(Map<String, String> headers) -->Line_4 $$ if (headers.isEmpty()) [ CD ]
Line_2 $$ private static Map<String, String> randomHeadersFrom(Map<String, String> headers) -->Line_4 $$ if (headers.isEmpty()) [ FD ]
Line_2 $$ private static Map<String, String> randomHeadersFrom(Map<String, String> headers) -->Line_7 $$ int i = randomInt(headers.size() - 1)[ FD ]
Line_2 $$ private static Map<String, String> randomHeadersFrom(Map<String, String> headers) -->Line_13 $$ return newHeaders[ CD ]
Line_2 $$ private static Map<String, String> randomHeadersFrom(Map<String, String> headers) -->Line_8 $$ for (Map.Entry<String, String> entry : headers.entrySet()) [ FD ]
Line_2 $$ private static Map<String, String> randomHeadersFrom(Map<String, String> headers) -->Line_3 $$ Map<String, String> newHeaders = new HashMap()[ CD ]
Line_2 $$ private static Map<String, String> randomHeadersFrom(Map<String, String> headers) -->Line_7 $$ int i = randomInt(headers.size() - 1)[ CD ]
Line_9 $$ if (randomInt(i) == 0) -->Line_10 $$ newHeaders.put(entry.getKey(), entry.getValue())[ CD ]
