Line_2 $$ private static void addAnnotationProcessorOption(String compilerArg, Map<String, String> optionsMap) -->Line_10 $$ optionsMap.put(compilerArg.substring(2), "")[ FD ]
Line_2 $$ private static void addAnnotationProcessorOption(String compilerArg, Map<String, String> optionsMap) -->Line_8 $$ optionsMap.put(compilerArg.substring(2, idx), compilerArg.substring(idx + 1))[ FD ]
Line_2 $$ private static void addAnnotationProcessorOption(String compilerArg, Map<String, String> optionsMap) -->Line_6 $$ int idx = compilerArg.indexOf('=', 3)[ FD ]
Line_5 $$ if (compilerArg.startsWith("-A")) -->Line_7 $$ if (idx >= 0) [ CD ]
Line_6 $$ int idx = compilerArg.indexOf('=', 3)-->Line_7 $$ if (idx >= 0) [ FD ]
Line_7 $$ if (idx >= 0) -->Line_10 $$ optionsMap.put(compilerArg.substring(2), "")[ CD ]
Line_5 $$ if (compilerArg.startsWith("-A")) -->Line_6 $$ int idx = compilerArg.indexOf('=', 3)[ CD ]
Line_2 $$ private static void addAnnotationProcessorOption(String compilerArg, Map<String, String> optionsMap) -->Line_5 $$ if (compilerArg.startsWith("-A")) [ FD ]
Line_2 $$ private static void addAnnotationProcessorOption(String compilerArg, Map<String, String> optionsMap) -->Line_5 $$ if (compilerArg.startsWith("-A")) [ CD ]
Line_6 $$ int idx = compilerArg.indexOf('=', 3)-->Line_8 $$ optionsMap.put(compilerArg.substring(2, idx), compilerArg.substring(idx + 1))[ FD ]
Line_3 $$ if (compilerArg == null || compilerArg.trim().isEmpty())-->Line_4 $$ return[ CD ]
Line_2 $$ private static void addAnnotationProcessorOption(String compilerArg, Map<String, String> optionsMap) -->Line_3 $$ if (compilerArg == null || compilerArg.trim().isEmpty())[ FD ]
Line_7 $$ if (idx >= 0) -->Line_8 $$ optionsMap.put(compilerArg.substring(2, idx), compilerArg.substring(idx + 1))[ CD ]
Line_2 $$ private static void addAnnotationProcessorOption(String compilerArg, Map<String, String> optionsMap) -->Line_3 $$ if (compilerArg == null || compilerArg.trim().isEmpty())[ CD ]
