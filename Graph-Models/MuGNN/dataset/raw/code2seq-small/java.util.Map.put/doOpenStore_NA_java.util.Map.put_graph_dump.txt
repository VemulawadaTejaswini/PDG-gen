Line_2 $$ private PersistentCache doOpenStore(File storeDir, String displayName, LockOptions lockOptions, Action<? super PersistentCache> initializer) throws CacheOpenException -->Line_7 $$ DirCacheReference dirCacheReference = dirCaches.get(canonicalDir)[ CD ]
Line_8 $$ if (dirCacheReference == null) -->Line_11 $$ dirCacheReference = new DirCacheReference(cache, Collections.<String, Object>emptyMap(), lockOptions)[ CD ]
Line_2 $$ private PersistentCache doOpenStore(File storeDir, String displayName, LockOptions lockOptions, Action<? super PersistentCache> initializer) throws CacheOpenException -->Line_6 $$ File canonicalDir = GFileUtils.canonicalise(storeDir)[ FD ]
Line_8 $$ if (dirCacheReference == null) -->Line_9 $$ ReferencablePersistentCache cache = new DefaultPersistentDirectoryStore(canonicalDir, displayName, lockOptions, lockManager)[ CD ]
Line_8 $$ if (dirCacheReference == null) -->Line_10 $$ cache.open()[ CD ]
Line_7 $$ DirCacheReference dirCacheReference = dirCaches.get(canonicalDir)-->Line_11 $$ dirCacheReference = new DirCacheReference(cache, Collections.<String, Object>emptyMap(), lockOptions)[ FD ]
Line_8 $$ if (dirCacheReference == null) -->Line_12 $$ dirCaches.put(canonicalDir, dirCacheReference)[ CD ]
Line_2 $$ private PersistentCache doOpenStore(File storeDir, String displayName, LockOptions lockOptions, Action<? super PersistentCache> initializer) throws CacheOpenException -->Line_14 $$ return new ReferenceTrackingCache(dirCacheReference)[ CD ]
Line_6 $$ File canonicalDir = GFileUtils.canonicalise(storeDir)-->Line_12 $$ dirCaches.put(canonicalDir, dirCacheReference)[ FD ]
Line_2 $$ private PersistentCache doOpenStore(File storeDir, String displayName, LockOptions lockOptions, Action<? super PersistentCache> initializer) throws CacheOpenException -->Line_3 $$ if (initializer != null) [ FD ]
Line_2 $$ private PersistentCache doOpenStore(File storeDir, String displayName, LockOptions lockOptions, Action<? super PersistentCache> initializer) throws CacheOpenException -->Line_6 $$ File canonicalDir = GFileUtils.canonicalise(storeDir)[ CD ]
Line_2 $$ private PersistentCache doOpenStore(File storeDir, String displayName, LockOptions lockOptions, Action<? super PersistentCache> initializer) throws CacheOpenException -->Line_8 $$ if (dirCacheReference == null) [ CD ]
Line_7 $$ DirCacheReference dirCacheReference = dirCaches.get(canonicalDir)-->Line_8 $$ if (dirCacheReference == null) [ FD ]
Line_7 $$ DirCacheReference dirCacheReference = dirCaches.get(canonicalDir)-->Line_12 $$ dirCaches.put(canonicalDir, dirCacheReference)[ FD ]
Line_9 $$ ReferencablePersistentCache cache = new DefaultPersistentDirectoryStore(canonicalDir, displayName, lockOptions, lockManager)-->Line_10 $$ cache.open()[ FD ]
Line_11 $$ dirCacheReference = new DirCacheReference(cache, Collections.<String, Object>emptyMap(), lockOptions)-->Line_12 $$ dirCaches.put(canonicalDir, dirCacheReference)[ FD ]
Line_2 $$ private PersistentCache doOpenStore(File storeDir, String displayName, LockOptions lockOptions, Action<? super PersistentCache> initializer) throws CacheOpenException -->Line_3 $$ if (initializer != null) [ CD ]
Line_6 $$ File canonicalDir = GFileUtils.canonicalise(storeDir)-->Line_7 $$ DirCacheReference dirCacheReference = dirCaches.get(canonicalDir)[ FD ]
