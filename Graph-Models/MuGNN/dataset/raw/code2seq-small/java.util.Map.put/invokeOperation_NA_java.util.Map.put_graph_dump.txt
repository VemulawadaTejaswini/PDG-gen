Line_12 $$ signature = JmxUtils.getMethodSignature(method)-->Line_16 $$ return this.serverToUse.invoke(this.objectName, method.getName(), args, signature)[ FD ]
Line_10 $$ signature = this.signatureCache.get(method)-->Line_12 $$ signature = JmxUtils.getMethodSignature(method)[ FD ]
Line_2 $$ private Object invokeOperation(Method method, Object[] args) throws JMException, IOException -->Line_3 $$ MethodCacheKey key = new MethodCacheKey(method.getName(), method.getParameterTypes())[ CD ]
Line_2 $$ private Object invokeOperation(Method method, Object[] args) throws JMException, IOException -->Line_5 $$ if (info == null) [ CD ]
Line_2 $$ private Object invokeOperation(Method method, Object[] args) throws JMException, IOException -->Line_10 $$ signature = this.signatureCache.get(method)[ FD ]
Line_2 $$ private Object invokeOperation(Method method, Object[] args) throws JMException, IOException -->Line_16 $$ return this.serverToUse.invoke(this.objectName, method.getName(), args, signature)[ CD ]
Line_2 $$ private Object invokeOperation(Method method, Object[] args) throws JMException, IOException -->Line_12 $$ signature = JmxUtils.getMethodSignature(method)[ FD ]
Line_10 $$ signature = this.signatureCache.get(method)-->Line_16 $$ return this.serverToUse.invoke(this.objectName, method.getName(), args, signature)[ FD ]
Line_2 $$ private Object invokeOperation(Method method, Object[] args) throws JMException, IOException -->Line_6 $$ throw new InvalidInvocationException("Operation '" + method.getName() + "' is not exposed on the management interface")[ FD ]
Line_8 $$ String[] signature = null-->Line_12 $$ signature = JmxUtils.getMethodSignature(method)[ FD ]
Line_11 $$ if (signature == null) -->Line_13 $$ this.signatureCache.put(method, signature)[ CD ]
Line_10 $$ signature = this.signatureCache.get(method)-->Line_13 $$ this.signatureCache.put(method, signature)[ FD ]
Line_2 $$ private Object invokeOperation(Method method, Object[] args) throws JMException, IOException -->Line_8 $$ String[] signature = null[ CD ]
Line_3 $$ MethodCacheKey key = new MethodCacheKey(method.getName(), method.getParameterTypes())-->Line_4 $$ MBeanOperationInfo info = this.allowedOperations.get(key)[ FD ]
Line_10 $$ signature = this.signatureCache.get(method)-->Line_11 $$ if (signature == null) [ FD ]
Line_8 $$ String[] signature = null-->Line_16 $$ return this.serverToUse.invoke(this.objectName, method.getName(), args, signature)[ FD ]
Line_11 $$ if (signature == null) -->Line_12 $$ signature = JmxUtils.getMethodSignature(method)[ CD ]
Line_2 $$ private Object invokeOperation(Method method, Object[] args) throws JMException, IOException -->Line_13 $$ this.signatureCache.put(method, signature)[ FD ]
Line_4 $$ MBeanOperationInfo info = this.allowedOperations.get(key)-->Line_5 $$ if (info == null) [ FD ]
Line_8 $$ String[] signature = null-->Line_10 $$ signature = this.signatureCache.get(method)[ FD ]
Line_8 $$ String[] signature = null-->Line_13 $$ this.signatureCache.put(method, signature)[ FD ]
Line_12 $$ signature = JmxUtils.getMethodSignature(method)-->Line_13 $$ this.signatureCache.put(method, signature)[ FD ]
Line_8 $$ String[] signature = null-->Line_11 $$ if (signature == null) [ FD ]
Line_2 $$ private Object invokeOperation(Method method, Object[] args) throws JMException, IOException -->Line_4 $$ MBeanOperationInfo info = this.allowedOperations.get(key)[ CD ]
Line_2 $$ private Object invokeOperation(Method method, Object[] args) throws JMException, IOException -->Line_16 $$ return this.serverToUse.invoke(this.objectName, method.getName(), args, signature)[ FD ]
Line_2 $$ private Object invokeOperation(Method method, Object[] args) throws JMException, IOException -->Line_3 $$ MethodCacheKey key = new MethodCacheKey(method.getName(), method.getParameterTypes())[ FD ]
