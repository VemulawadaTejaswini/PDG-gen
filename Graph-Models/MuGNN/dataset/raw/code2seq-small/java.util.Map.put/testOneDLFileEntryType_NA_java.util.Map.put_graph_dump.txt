Line_2 $$ public void testOneDLFileEntryType() throws Exception -->Line_8 $$ serviceContext.setUuid(dlFileEntryType.getUuid())[ CD ]
Line_10 $$ Map<String, String[]> preferenceMap = new HashMap()-->Line_12 $$ preferenceMap.put("anyAssetType", new String[] [ FD ]
Line_2 $$ public void testOneDLFileEntryType() throws Exception -->Line_10 $$ Map<String, String[]> preferenceMap = new HashMap()[ CD ]
Line_16 $$ long anyClassTypeDLFileEntryAssetRendererFactory = GetterUtil.getLong(portletPreferences.getValue("anyClassTypeDLFileEntryAssetRendererFactory", null))-->Line_17 $$ Assert.assertEquals(anyClassTypeDLFileEntryAssetRendererFactory, importedDLFileEntryType.getFileEntryTypeId())[ FD ]
Line_2 $$ public void testOneDLFileEntryType() throws Exception -->Line_5 $$ DLFileEntryType dlFileEntryType = addDLFileEntryType(group.getGroupId(), ddmStructure.getStructureId(), serviceContext)[ CD ]
Line_5 $$ DLFileEntryType dlFileEntryType = addDLFileEntryType(group.getGroupId(), ddmStructure.getStructureId(), serviceContext)-->Line_8 $$ serviceContext.setUuid(dlFileEntryType.getUuid())[ FD ]
Line_2 $$ public void testOneDLFileEntryType() throws Exception -->Line_11 $$ long dlFileEntryClassNameId = PortalUtil.getClassNameId(DLFileEntry.class)[ CD ]
Line_4 $$ ServiceContext serviceContext = ServiceContextTestUtil.getServiceContext(group.getGroupId(), TestPropsValues.getUserId())-->Line_5 $$ DLFileEntryType dlFileEntryType = addDLFileEntryType(group.getGroupId(), ddmStructure.getStructureId(), serviceContext)[ FD ]
Line_7 $$ DDMStructure importedDDMStructure = DDMStructureTestUtil.addStructure(importedGroup.getGroupId(), DLFileEntryMetadata.class.getName(), 0, ddmStructure.getDDMForm(), LocaleUtil.getDefault(), serviceContext)-->Line_9 $$ DLFileEntryType importedDLFileEntryType = addDLFileEntryType(importedGroup.getGroupId(), importedDDMStructure.getStructureId(), serviceContext)[ FD ]
Line_2 $$ public void testOneDLFileEntryType() throws Exception -->Line_21 $$ Assert.assertEquals(importedDLFileEntryType.getFileEntryTypeId(), classTypeIds)[ CD ]
Line_2 $$ public void testOneDLFileEntryType() throws Exception -->Line_7 $$ DDMStructure importedDDMStructure = DDMStructureTestUtil.addStructure(importedGroup.getGroupId(), DLFileEntryMetadata.class.getName(), 0, ddmStructure.getDDMForm(), LocaleUtil.getDefault(), serviceContext)[ CD ]
Line_3 $$ DDMStructure ddmStructure = DDMStructureTestUtil.addStructure(group.getGroupId(), DLFileEntryMetadata.class.getName())-->Line_7 $$ DDMStructure importedDDMStructure = DDMStructureTestUtil.addStructure(importedGroup.getGroupId(), DLFileEntryMetadata.class.getName(), 0, ddmStructure.getDDMForm(), LocaleUtil.getDefault(), serviceContext)[ FD ]
Line_15 $$ PortletPreferences portletPreferences = getImportedPortletPreferences(preferenceMap)-->Line_18 $$ long anyAssetType = GetterUtil.getLong(portletPreferences.getValue("anyAssetType", null))[ FD ]
Line_2 $$ public void testOneDLFileEntryType() throws Exception -->Line_15 $$ PortletPreferences portletPreferences = getImportedPortletPreferences(preferenceMap)[ CD ]
Line_2 $$ public void testOneDLFileEntryType() throws Exception -->Line_18 $$ long anyAssetType = GetterUtil.getLong(portletPreferences.getValue("anyAssetType", null))[ CD ]
Line_9 $$ DLFileEntryType importedDLFileEntryType = addDLFileEntryType(importedGroup.getGroupId(), importedDDMStructure.getStructureId(), serviceContext)-->Line_21 $$ Assert.assertEquals(importedDLFileEntryType.getFileEntryTypeId(), classTypeIds)[ FD ]
Line_4 $$ ServiceContext serviceContext = ServiceContextTestUtil.getServiceContext(group.getGroupId(), TestPropsValues.getUserId())-->Line_6 $$ serviceContext.setUuid(ddmStructure.getUuid())[ FD ]
Line_10 $$ Map<String, String[]> preferenceMap = new HashMap()-->Line_15 $$ PortletPreferences portletPreferences = getImportedPortletPreferences(preferenceMap)[ FD ]
Line_2 $$ public void testOneDLFileEntryType() throws Exception -->Line_19 $$ Assert.assertEquals(dlFileEntryClassNameId, anyAssetType)[ CD ]
Line_4 $$ ServiceContext serviceContext = ServiceContextTestUtil.getServiceContext(group.getGroupId(), TestPropsValues.getUserId())-->Line_8 $$ serviceContext.setUuid(dlFileEntryType.getUuid())[ FD ]
Line_11 $$ long dlFileEntryClassNameId = PortalUtil.getClassNameId(DLFileEntry.class)-->Line_12 $$ preferenceMap.put("anyAssetType", new String[] [ FD ]
Line_2 $$ public void testOneDLFileEntryType() throws Exception -->Line_13 $$ preferenceMap.put("anyClassTypeDLFileEntryAssetRendererFactory", new String[] [ CD ]
Line_5 $$ DLFileEntryType dlFileEntryType = addDLFileEntryType(group.getGroupId(), ddmStructure.getStructureId(), serviceContext)-->Line_14 $$ preferenceMap.put("classTypeIds", new String[] [ FD ]
Line_2 $$ public void testOneDLFileEntryType() throws Exception -->Line_17 $$ Assert.assertEquals(anyClassTypeDLFileEntryAssetRendererFactory, importedDLFileEntryType.getFileEntryTypeId())[ CD ]
Line_18 $$ long anyAssetType = GetterUtil.getLong(portletPreferences.getValue("anyAssetType", null))-->Line_19 $$ Assert.assertEquals(dlFileEntryClassNameId, anyAssetType)[ FD ]
Line_2 $$ public void testOneDLFileEntryType() throws Exception -->Line_12 $$ preferenceMap.put("anyAssetType", new String[] [ CD ]
Line_2 $$ public void testOneDLFileEntryType() throws Exception -->Line_16 $$ long anyClassTypeDLFileEntryAssetRendererFactory = GetterUtil.getLong(portletPreferences.getValue("anyClassTypeDLFileEntryAssetRendererFactory", null))[ CD ]
Line_15 $$ PortletPreferences portletPreferences = getImportedPortletPreferences(preferenceMap)-->Line_20 $$ long classTypeIds = GetterUtil.getLong(portletPreferences.getValue("classTypeIds", null))[ FD ]
Line_10 $$ Map<String, String[]> preferenceMap = new HashMap()-->Line_14 $$ preferenceMap.put("classTypeIds", new String[] [ FD ]
Line_4 $$ ServiceContext serviceContext = ServiceContextTestUtil.getServiceContext(group.getGroupId(), TestPropsValues.getUserId())-->Line_9 $$ DLFileEntryType importedDLFileEntryType = addDLFileEntryType(importedGroup.getGroupId(), importedDDMStructure.getStructureId(), serviceContext)[ FD ]
Line_9 $$ DLFileEntryType importedDLFileEntryType = addDLFileEntryType(importedGroup.getGroupId(), importedDDMStructure.getStructureId(), serviceContext)-->Line_17 $$ Assert.assertEquals(anyClassTypeDLFileEntryAssetRendererFactory, importedDLFileEntryType.getFileEntryTypeId())[ FD ]
Line_2 $$ public void testOneDLFileEntryType() throws Exception -->Line_6 $$ serviceContext.setUuid(ddmStructure.getUuid())[ CD ]
Line_2 $$ public void testOneDLFileEntryType() throws Exception -->Line_20 $$ long classTypeIds = GetterUtil.getLong(portletPreferences.getValue("classTypeIds", null))[ CD ]
Line_20 $$ long classTypeIds = GetterUtil.getLong(portletPreferences.getValue("classTypeIds", null))-->Line_21 $$ Assert.assertEquals(importedDLFileEntryType.getFileEntryTypeId(), classTypeIds)[ FD ]
Line_2 $$ public void testOneDLFileEntryType() throws Exception -->Line_4 $$ ServiceContext serviceContext = ServiceContextTestUtil.getServiceContext(group.getGroupId(), TestPropsValues.getUserId())[ CD ]
Line_4 $$ ServiceContext serviceContext = ServiceContextTestUtil.getServiceContext(group.getGroupId(), TestPropsValues.getUserId())-->Line_7 $$ DDMStructure importedDDMStructure = DDMStructureTestUtil.addStructure(importedGroup.getGroupId(), DLFileEntryMetadata.class.getName(), 0, ddmStructure.getDDMForm(), LocaleUtil.getDefault(), serviceContext)[ FD ]
Line_15 $$ PortletPreferences portletPreferences = getImportedPortletPreferences(preferenceMap)-->Line_16 $$ long anyClassTypeDLFileEntryAssetRendererFactory = GetterUtil.getLong(portletPreferences.getValue("anyClassTypeDLFileEntryAssetRendererFactory", null))[ FD ]
Line_2 $$ public void testOneDLFileEntryType() throws Exception -->Line_9 $$ DLFileEntryType importedDLFileEntryType = addDLFileEntryType(importedGroup.getGroupId(), importedDDMStructure.getStructureId(), serviceContext)[ CD ]
Line_3 $$ DDMStructure ddmStructure = DDMStructureTestUtil.addStructure(group.getGroupId(), DLFileEntryMetadata.class.getName())-->Line_6 $$ serviceContext.setUuid(ddmStructure.getUuid())[ FD ]
Line_5 $$ DLFileEntryType dlFileEntryType = addDLFileEntryType(group.getGroupId(), ddmStructure.getStructureId(), serviceContext)-->Line_13 $$ preferenceMap.put("anyClassTypeDLFileEntryAssetRendererFactory", new String[] [ FD ]
Line_10 $$ Map<String, String[]> preferenceMap = new HashMap()-->Line_13 $$ preferenceMap.put("anyClassTypeDLFileEntryAssetRendererFactory", new String[] [ FD ]
Line_2 $$ public void testOneDLFileEntryType() throws Exception -->Line_14 $$ preferenceMap.put("classTypeIds", new String[] [ CD ]
Line_11 $$ long dlFileEntryClassNameId = PortalUtil.getClassNameId(DLFileEntry.class)-->Line_19 $$ Assert.assertEquals(dlFileEntryClassNameId, anyAssetType)[ FD ]
Line_3 $$ DDMStructure ddmStructure = DDMStructureTestUtil.addStructure(group.getGroupId(), DLFileEntryMetadata.class.getName())-->Line_5 $$ DLFileEntryType dlFileEntryType = addDLFileEntryType(group.getGroupId(), ddmStructure.getStructureId(), serviceContext)[ FD ]
Line_2 $$ public void testOneDLFileEntryType() throws Exception -->Line_3 $$ DDMStructure ddmStructure = DDMStructureTestUtil.addStructure(group.getGroupId(), DLFileEntryMetadata.class.getName())[ CD ]
