Line_2 $$ public void existingHeadersModification() throws InterruptedException -->Line_14 $$ assertEquals("baz", actual.get("bar"))[ CD ]
Line_2 $$ public void existingHeadersModification() throws InterruptedException -->Line_3 $$ Map<String, Object> map = new HashMap()[ CD ]
Line_2 $$ public void existingHeadersModification() throws InterruptedException -->Line_5 $$ map.put("bar", "baz")[ CD ]
Line_6 $$ GenericMessage<String> message = new GenericMessage("payload", map)-->Line_12 $$ assertNotEquals(message.getHeaders().getId(), actual.getId())[ FD ]
Line_2 $$ public void existingHeadersModification() throws InterruptedException -->Line_7 $$ Thread.sleep(50)[ CD ]
Line_2 $$ public void existingHeadersModification() throws InterruptedException -->Line_11 $$ assertEquals(3, actual.size())[ CD ]
Line_10 $$ MessageHeaders actual = accessor.getMessageHeaders()-->Line_13 $$ assertEquals("BAR", actual.get("foo"))[ FD ]
Line_10 $$ MessageHeaders actual = accessor.getMessageHeaders()-->Line_11 $$ assertEquals(3, actual.size())[ FD ]
Line_3 $$ Map<String, Object> map = new HashMap()-->Line_5 $$ map.put("bar", "baz")[ FD ]
Line_8 $$ MessageHeaderAccessor accessor = new MessageHeaderAccessor(message)-->Line_9 $$ accessor.setHeader("foo", "BAR")[ FD ]
Line_2 $$ public void existingHeadersModification() throws InterruptedException -->Line_10 $$ MessageHeaders actual = accessor.getMessageHeaders()[ CD ]
Line_8 $$ MessageHeaderAccessor accessor = new MessageHeaderAccessor(message)-->Line_10 $$ MessageHeaders actual = accessor.getMessageHeaders()[ FD ]
Line_3 $$ Map<String, Object> map = new HashMap()-->Line_4 $$ map.put("foo", "bar")[ FD ]
Line_10 $$ MessageHeaders actual = accessor.getMessageHeaders()-->Line_14 $$ assertEquals("baz", actual.get("bar"))[ FD ]
Line_2 $$ public void existingHeadersModification() throws InterruptedException -->Line_12 $$ assertNotEquals(message.getHeaders().getId(), actual.getId())[ CD ]
Line_2 $$ public void existingHeadersModification() throws InterruptedException -->Line_4 $$ map.put("foo", "bar")[ CD ]
Line_2 $$ public void existingHeadersModification() throws InterruptedException -->Line_8 $$ MessageHeaderAccessor accessor = new MessageHeaderAccessor(message)[ CD ]
Line_2 $$ public void existingHeadersModification() throws InterruptedException -->Line_6 $$ GenericMessage<String> message = new GenericMessage("payload", map)[ CD ]
Line_2 $$ public void existingHeadersModification() throws InterruptedException -->Line_13 $$ assertEquals("BAR", actual.get("foo"))[ CD ]
Line_2 $$ public void existingHeadersModification() throws InterruptedException -->Line_9 $$ accessor.setHeader("foo", "BAR")[ CD ]
Line_10 $$ MessageHeaders actual = accessor.getMessageHeaders()-->Line_12 $$ assertNotEquals(message.getHeaders().getId(), actual.getId())[ FD ]
