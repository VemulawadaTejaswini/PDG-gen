Line_17 $$ value = value.substring(0, value.length() - 1)-->Line_19 $$ myMacros.put(name, value)[ FD ]
Line_8 $$ final String name = macro.getAttributeValue(NAME_ATTR)-->Line_13 $$ if (SYSTEM_MACROS.contains(name)) [ FD ]
Line_24 $$ final String ignoredName = macroElement.getAttributeValue(NAME_ATTR)-->Line_26 $$ myIgnoredMacros.add(ignoredName)[ FD ]
Line_9 $$ String value = macro.getAttributeValue(VALUE_ATTR)-->Line_19 $$ myMacros.put(name, value)[ FD ]
Line_8 $$ final String name = macro.getAttributeValue(NAME_ATTR)-->Line_19 $$ myMacros.put(name, value)[ FD ]
Line_16 $$ if (value.length() > 1 && value.charAt(value.length() - 1) == '/') -->Line_17 $$ value = value.substring(0, value.length() - 1)[ CD ]
Line_2 $$ public void loadState(Element element) -->Line_21 $$ final List ignoredChildren = element.getChildren(IGNORED_MACRO_ELEMENT)[ FD ]
Line_25 $$ if (ignoredName != null && !ignoredName.isEmpty() && !myIgnoredMacros.contains(ignoredName)) -->Line_26 $$ myIgnoredMacros.add(ignoredName)[ CD ]
Line_7 $$ Element macro = (Element) aChildren-->Line_8 $$ final String name = macro.getAttributeValue(NAME_ATTR)[ FD ]
Line_24 $$ final String ignoredName = macroElement.getAttributeValue(NAME_ATTR)-->Line_25 $$ if (ignoredName != null && !ignoredName.isEmpty() && !myIgnoredMacros.contains(ignoredName)) [ FD ]
Line_7 $$ Element macro = (Element) aChildren-->Line_9 $$ String value = macro.getAttributeValue(VALUE_ATTR)[ FD ]
Line_9 $$ String value = macro.getAttributeValue(VALUE_ATTR)-->Line_17 $$ value = value.substring(0, value.length() - 1)[ FD ]
Line_9 $$ String value = macro.getAttributeValue(VALUE_ATTR)-->Line_16 $$ if (value.length() > 1 && value.charAt(value.length() - 1) == '/') [ FD ]
Line_2 $$ public void loadState(Element element) -->Line_5 $$ final List children = element.getChildren(MACRO_ELEMENT)[ FD ]
Line_23 $$ final Element macroElement = (Element) child-->Line_24 $$ final String ignoredName = macroElement.getAttributeValue(NAME_ATTR)[ FD ]
