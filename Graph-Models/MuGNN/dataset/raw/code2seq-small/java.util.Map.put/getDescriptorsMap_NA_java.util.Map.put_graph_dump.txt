Line_11 $$ if (descriptorList == null) -->Line_13 $$ goalsMap.put(pluginDescriptor.goal, descriptorList)[ CD ]
Line_4 $$ if (res == null) -->Line_5 $$ res = new HashMap<String, Map<String, Map<String, List<MavenPluginDescriptor>>>>()[ CD ]
Line_2 $$ public static Map<String, Map<String, Map<String, List<MavenPluginDescriptor>>>> getDescriptorsMap() -->Line_3 $$ Map<String, Map<String, Map<String, List<MavenPluginDescriptor>>>> res = ourDescriptorsMap[ CD ]
Line_3 $$ Map<String, Map<String, Map<String, List<MavenPluginDescriptor>>>> res = ourDescriptorsMap-->Line_8 $$ Map<String, Map<String, List<MavenPluginDescriptor>>> groupMap = MavenUtil.getOrCreate(res, pluginId.second)[ FD ]
Line_12 $$ descriptorList = new SmartList<MavenPluginDescriptor>()-->Line_15 $$ descriptorList.add(pluginDescriptor)[ FD ]
Line_10 $$ List<MavenPluginDescriptor> descriptorList = goalsMap.get(pluginDescriptor.goal)-->Line_12 $$ descriptorList = new SmartList<MavenPluginDescriptor>()[ FD ]
Line_3 $$ Map<String, Map<String, Map<String, List<MavenPluginDescriptor>>>> res = ourDescriptorsMap-->Line_4 $$ if (res == null) [ FD ]
Line_9 $$ Map<String, List<MavenPluginDescriptor>> goalsMap = MavenUtil.getOrCreate(groupMap, pluginId.first)-->Line_13 $$ goalsMap.put(pluginDescriptor.goal, descriptorList)[ FD ]
Line_5 $$ res = new HashMap<String, Map<String, Map<String, List<MavenPluginDescriptor>>>>()-->Line_8 $$ Map<String, Map<String, List<MavenPluginDescriptor>>> groupMap = MavenUtil.getOrCreate(res, pluginId.second)[ FD ]
Line_10 $$ List<MavenPluginDescriptor> descriptorList = goalsMap.get(pluginDescriptor.goal)-->Line_11 $$ if (descriptorList == null) [ FD ]
Line_11 $$ if (descriptorList == null) -->Line_12 $$ descriptorList = new SmartList<MavenPluginDescriptor>()[ CD ]
Line_10 $$ List<MavenPluginDescriptor> descriptorList = goalsMap.get(pluginDescriptor.goal)-->Line_13 $$ goalsMap.put(pluginDescriptor.goal, descriptorList)[ FD ]
Line_12 $$ descriptorList = new SmartList<MavenPluginDescriptor>()-->Line_13 $$ goalsMap.put(pluginDescriptor.goal, descriptorList)[ FD ]
Line_10 $$ List<MavenPluginDescriptor> descriptorList = goalsMap.get(pluginDescriptor.goal)-->Line_15 $$ descriptorList.add(pluginDescriptor)[ FD ]
Line_3 $$ Map<String, Map<String, Map<String, List<MavenPluginDescriptor>>>> res = ourDescriptorsMap-->Line_5 $$ res = new HashMap<String, Map<String, Map<String, List<MavenPluginDescriptor>>>>()[ FD ]
Line_8 $$ Map<String, Map<String, List<MavenPluginDescriptor>>> groupMap = MavenUtil.getOrCreate(res, pluginId.second)-->Line_9 $$ Map<String, List<MavenPluginDescriptor>> goalsMap = MavenUtil.getOrCreate(groupMap, pluginId.first)[ FD ]
Line_2 $$ public static Map<String, Map<String, Map<String, List<MavenPluginDescriptor>>>> getDescriptorsMap() -->Line_4 $$ if (res == null) [ CD ]
Line_2 $$ public static Map<String, Map<String, Map<String, List<MavenPluginDescriptor>>>> getDescriptorsMap() -->Line_19 $$ return res[ CD ]
Line_6 $$ for (MavenPluginDescriptor pluginDescriptor : MavenPluginDescriptor.EP_NAME.getExtensions()) -->Line_15 $$ descriptorList.add(pluginDescriptor)[ FD ]
Line_9 $$ Map<String, List<MavenPluginDescriptor>> goalsMap = MavenUtil.getOrCreate(groupMap, pluginId.first)-->Line_10 $$ List<MavenPluginDescriptor> descriptorList = goalsMap.get(pluginDescriptor.goal)[ FD ]
