Line_2 $$ public void testGenericMapWithCollectionValue() -->Line_11 $$ value2.add(Boolean.TRUE)[ CD ]
Line_2 $$ public void testGenericMapWithCollectionValue() -->Line_5 $$ bw.registerCustomEditor(Number.class, new CustomNumberEditor(Integer.class, false))[ CD ]
Line_6 $$ Map<String, Collection> input = new HashMap<String, Collection>()-->Line_9 $$ input.put("1", value1)[ FD ]
Line_2 $$ public void testGenericMapWithCollectionValue() -->Line_13 $$ bw.setPropertyValue("collectionMap", input)[ CD ]
Line_6 $$ Map<String, Collection> input = new HashMap<String, Collection>()-->Line_12 $$ input.put("2", value2)[ FD ]
Line_2 $$ public void testGenericMapWithCollectionValue() -->Line_12 $$ input.put("2", value2)[ CD ]
Line_10 $$ ArrayList<Boolean> value2 = new ArrayList<Boolean>()-->Line_12 $$ input.put("2", value2)[ FD ]
Line_4 $$ BeanWrapper bw = new BeanWrapperImpl(gb)-->Line_13 $$ bw.setPropertyValue("collectionMap", input)[ FD ]
Line_2 $$ public void testGenericMapWithCollectionValue() -->Line_7 $$ HashSet<Integer> value1 = new HashSet<Integer>()[ CD ]
Line_2 $$ public void testGenericMapWithCollectionValue() -->Line_9 $$ input.put("1", value1)[ CD ]
Line_2 $$ public void testGenericMapWithCollectionValue() -->Line_14 $$ assertTrue(gb.getCollectionMap().get(new Integer(1)) instanceof HashSet)[ CD ]
Line_10 $$ ArrayList<Boolean> value2 = new ArrayList<Boolean>()-->Line_11 $$ value2.add(Boolean.TRUE)[ FD ]
Line_7 $$ HashSet<Integer> value1 = new HashSet<Integer>()-->Line_8 $$ value1.add(new Integer(1))[ FD ]
Line_3 $$ GenericBean<?> gb = new GenericBean<Object>()-->Line_14 $$ assertTrue(gb.getCollectionMap().get(new Integer(1)) instanceof HashSet)[ FD ]
Line_2 $$ public void testGenericMapWithCollectionValue() -->Line_10 $$ ArrayList<Boolean> value2 = new ArrayList<Boolean>()[ CD ]
Line_3 $$ GenericBean<?> gb = new GenericBean<Object>()-->Line_15 $$ assertTrue(gb.getCollectionMap().get(new Integer(2)) instanceof ArrayList)[ FD ]
Line_4 $$ BeanWrapper bw = new BeanWrapperImpl(gb)-->Line_5 $$ bw.registerCustomEditor(Number.class, new CustomNumberEditor(Integer.class, false))[ FD ]
Line_6 $$ Map<String, Collection> input = new HashMap<String, Collection>()-->Line_13 $$ bw.setPropertyValue("collectionMap", input)[ FD ]
Line_7 $$ HashSet<Integer> value1 = new HashSet<Integer>()-->Line_9 $$ input.put("1", value1)[ FD ]
Line_2 $$ public void testGenericMapWithCollectionValue() -->Line_4 $$ BeanWrapper bw = new BeanWrapperImpl(gb)[ CD ]
Line_2 $$ public void testGenericMapWithCollectionValue() -->Line_3 $$ GenericBean<?> gb = new GenericBean<Object>()[ CD ]
Line_2 $$ public void testGenericMapWithCollectionValue() -->Line_8 $$ value1.add(new Integer(1))[ CD ]
Line_2 $$ public void testGenericMapWithCollectionValue() -->Line_15 $$ assertTrue(gb.getCollectionMap().get(new Integer(2)) instanceof ArrayList)[ CD ]
Line_2 $$ public void testGenericMapWithCollectionValue() -->Line_6 $$ Map<String, Collection> input = new HashMap<String, Collection>()[ CD ]
