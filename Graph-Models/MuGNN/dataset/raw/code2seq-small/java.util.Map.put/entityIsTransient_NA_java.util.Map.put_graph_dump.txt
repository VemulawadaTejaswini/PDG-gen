Line_2 $$ protected void entityIsTransient(PersistEvent event, Map createCache) -->Line_4 $$ final EventSource source = event.getSession()[ CD ]
Line_5 $$ final Object entity = source.getPersistenceContext().unproxy(event.getObject())-->Line_7 $$ saveWithGeneratedId(entity, event.getEntityName(), createCache, source, false)[ FD ]
Line_2 $$ protected void entityIsTransient(PersistEvent event, Map createCache) -->Line_4 $$ final EventSource source = event.getSession()[ FD ]
Line_2 $$ protected void entityIsTransient(PersistEvent event, Map createCache) -->Line_5 $$ final Object entity = source.getPersistenceContext().unproxy(event.getObject())[ FD ]
Line_2 $$ protected void entityIsTransient(PersistEvent event, Map createCache) -->Line_3 $$ LOG.trace("Saving transient instance")[ CD ]
Line_2 $$ protected void entityIsTransient(PersistEvent event, Map createCache) -->Line_7 $$ saveWithGeneratedId(entity, event.getEntityName(), createCache, source, false)[ FD ]
Line_2 $$ protected void entityIsTransient(PersistEvent event, Map createCache) -->Line_6 $$ if (createCache.put(entity, entity) == null) [ FD ]
Line_5 $$ final Object entity = source.getPersistenceContext().unproxy(event.getObject())-->Line_6 $$ if (createCache.put(entity, entity) == null) [ FD ]
Line_4 $$ final EventSource source = event.getSession()-->Line_7 $$ saveWithGeneratedId(entity, event.getEntityName(), createCache, source, false)[ FD ]
Line_6 $$ if (createCache.put(entity, entity) == null) -->Line_7 $$ saveWithGeneratedId(entity, event.getEntityName(), createCache, source, false)[ CD ]
Line_2 $$ protected void entityIsTransient(PersistEvent event, Map createCache) -->Line_6 $$ if (createCache.put(entity, entity) == null) [ CD ]
Line_2 $$ protected void entityIsTransient(PersistEvent event, Map createCache) -->Line_5 $$ final Object entity = source.getPersistenceContext().unproxy(event.getObject())[ CD ]
Line_4 $$ final EventSource source = event.getSession()-->Line_5 $$ final Object entity = source.getPersistenceContext().unproxy(event.getObject())[ FD ]
