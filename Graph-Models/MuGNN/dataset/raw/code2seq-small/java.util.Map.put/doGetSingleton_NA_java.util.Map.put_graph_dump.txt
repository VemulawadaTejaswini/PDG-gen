Line_5 $$ Object jndiObject = this.singletonObjects.get(name)-->Line_6 $$ if (requiredType != null && !requiredType.isInstance(jndiObject)) [ FD ]
Line_4 $$ if (this.singletonObjects.containsKey(name)) -->Line_6 $$ if (requiredType != null && !requiredType.isInstance(jndiObject)) [ CD ]
Line_4 $$ if (this.singletonObjects.containsKey(name)) -->Line_9 $$ return (T) jndiObject[ CD ]
Line_2 $$ private <T> T doGetSingleton(String name, Class<T> requiredType) throws NamingException -->Line_11 $$ T jndiObject = lookup(name, requiredType)[ FD ]
Line_2 $$ private <T> T doGetSingleton(String name, Class<T> requiredType) throws NamingException -->Line_7 $$ throw new TypeMismatchNamingException(convertJndiName(name), requiredType, (jndiObject != null ? jndiObject.getClass() : null))[ FD ]
Line_5 $$ Object jndiObject = this.singletonObjects.get(name)-->Line_7 $$ throw new TypeMismatchNamingException(convertJndiName(name), requiredType, (jndiObject != null ? jndiObject.getClass() : null))[ FD ]
Line_4 $$ if (this.singletonObjects.containsKey(name)) -->Line_5 $$ Object jndiObject = this.singletonObjects.get(name)[ CD ]
Line_2 $$ private <T> T doGetSingleton(String name, Class<T> requiredType) throws NamingException -->Line_6 $$ if (requiredType != null && !requiredType.isInstance(jndiObject)) [ FD ]
Line_2 $$ private <T> T doGetSingleton(String name, Class<T> requiredType) throws NamingException -->Line_4 $$ if (this.singletonObjects.containsKey(name)) [ FD ]
Line_2 $$ private <T> T doGetSingleton(String name, Class<T> requiredType) throws NamingException -->Line_12 $$ this.singletonObjects.put(name, jndiObject)[ FD ]
Line_2 $$ private <T> T doGetSingleton(String name, Class<T> requiredType) throws NamingException -->Line_5 $$ Object jndiObject = this.singletonObjects.get(name)[ FD ]
Line_5 $$ Object jndiObject = this.singletonObjects.get(name)-->Line_12 $$ this.singletonObjects.put(name, jndiObject)[ FD ]
