Line_2 $$ public void testGetFilesExecutionException() throws Exception -->Line_4 $$ Path remoteFilePath1 = Paths.get("remoteFile1")[ CD ]
Line_2 $$ public void testGetFilesExecutionException() throws Exception -->Line_3 $$ Map<Path, Path> pathMap = new HashMap()[ CD ]
Line_3 $$ Map<Path, Path> pathMap = new HashMap()-->Line_6 $$ pathMap.put(Paths.get("remoteFile2"), Paths.get("requestFile2"))[ FD ]
Line_8 $$ Exception exception = new Exception()-->Line_9 $$ Assert.assertTrue(_asyncBroker.takeWithException(remoteFilePath1, exception))[ FD ]
Line_4 $$ Path remoteFilePath1 = Paths.get("remoteFile1")-->Line_5 $$ pathMap.put(remoteFilePath1, Paths.get("requestFile1"))[ FD ]
Line_2 $$ public void testGetFilesExecutionException() throws Exception -->Line_6 $$ pathMap.put(Paths.get("remoteFile2"), Paths.get("requestFile2"))[ CD ]
Line_2 $$ public void testGetFilesExecutionException() throws Exception -->Line_8 $$ Exception exception = new Exception()[ CD ]
Line_8 $$ Exception exception = new Exception()-->Line_14 $$ Assert.assertSame(exception, ee.getCause())[ FD ]
Line_4 $$ Path remoteFilePath1 = Paths.get("remoteFile1")-->Line_9 $$ Assert.assertTrue(_asyncBroker.takeWithException(remoteFilePath1, exception))[ FD ]
Line_3 $$ Map<Path, Path> pathMap = new HashMap()-->Line_7 $$ NoticeableFuture<Map<Path, Path>> noticeableFuture = _nettyRepository.getFiles(_embeddedChannel, pathMap, true)[ FD ]
Line_3 $$ Map<Path, Path> pathMap = new HashMap()-->Line_5 $$ pathMap.put(remoteFilePath1, Paths.get("requestFile1"))[ FD ]
Line_7 $$ NoticeableFuture<Map<Path, Path>> noticeableFuture = _nettyRepository.getFiles(_embeddedChannel, pathMap, true)-->Line_11 $$ noticeableFuture.get()[ FD ]
Line_2 $$ public void testGetFilesExecutionException() throws Exception -->Line_5 $$ pathMap.put(remoteFilePath1, Paths.get("requestFile1"))[ CD ]
Line_2 $$ public void testGetFilesExecutionException() throws Exception -->Line_9 $$ Assert.assertTrue(_asyncBroker.takeWithException(remoteFilePath1, exception))[ CD ]
Line_2 $$ public void testGetFilesExecutionException() throws Exception -->Line_7 $$ NoticeableFuture<Map<Path, Path>> noticeableFuture = _nettyRepository.getFiles(_embeddedChannel, pathMap, true)[ CD ]
