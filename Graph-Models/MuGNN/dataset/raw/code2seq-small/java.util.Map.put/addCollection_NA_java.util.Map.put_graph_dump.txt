Line_5 $$ String suffix = generateCollectionSuffix()-->Line_6 $$ LOG.tracev("Mapping alias [[ FD ]
Line_2 $$ private void addCollection(String role, String alias, Map propertyResults) -->Line_6 $$ LOG.tracev("Mapping alias [[ FD ]
Line_10 $$ SQLLoadable persister = (SQLLoadable) collectionPersister.getElementPersister()-->Line_11 $$ addPersister(alias, filter(propertyResults), persister)[ FD ]
Line_2 $$ private void addCollection(String role, String alias, Map propertyResults) -->Line_8 $$ collectionPropertyResultMaps.put(alias, propertyResults)[ FD ]
Line_2 $$ private void addCollection(String role, String alias, Map propertyResults) -->Line_11 $$ addPersister(alias, filter(propertyResults), persister)[ FD ]
Line_3 $$ SQLLoadableCollection collectionPersister = (SQLLoadableCollection) factory.getCollectionPersister(role)-->Line_9 $$ if (collectionPersister.isOneToMany() || collectionPersister.isManyToMany()) [ FD ]
Line_2 $$ private void addCollection(String role, String alias, Map propertyResults) -->Line_3 $$ SQLLoadableCollection collectionPersister = (SQLLoadableCollection) factory.getCollectionPersister(role)[ FD ]
Line_5 $$ String suffix = generateCollectionSuffix()-->Line_7 $$ alias2CollectionSuffix.put(alias, suffix)[ FD ]
Line_3 $$ SQLLoadableCollection collectionPersister = (SQLLoadableCollection) factory.getCollectionPersister(role)-->Line_4 $$ alias2CollectionPersister.put(alias, collectionPersister)[ FD ]
Line_2 $$ private void addCollection(String role, String alias, Map propertyResults) -->Line_3 $$ SQLLoadableCollection collectionPersister = (SQLLoadableCollection) factory.getCollectionPersister(role)[ CD ]
Line_2 $$ private void addCollection(String role, String alias, Map propertyResults) -->Line_5 $$ String suffix = generateCollectionSuffix()[ CD ]
Line_9 $$ if (collectionPersister.isOneToMany() || collectionPersister.isManyToMany()) -->Line_10 $$ SQLLoadable persister = (SQLLoadable) collectionPersister.getElementPersister()[ CD ]
Line_2 $$ private void addCollection(String role, String alias, Map propertyResults) -->Line_6 $$ LOG.tracev("Mapping alias [[ CD ]
Line_2 $$ private void addCollection(String role, String alias, Map propertyResults) -->Line_7 $$ alias2CollectionSuffix.put(alias, suffix)[ FD ]
Line_2 $$ private void addCollection(String role, String alias, Map propertyResults) -->Line_8 $$ collectionPropertyResultMaps.put(alias, propertyResults)[ CD ]
Line_3 $$ SQLLoadableCollection collectionPersister = (SQLLoadableCollection) factory.getCollectionPersister(role)-->Line_10 $$ SQLLoadable persister = (SQLLoadable) collectionPersister.getElementPersister()[ FD ]
Line_2 $$ private void addCollection(String role, String alias, Map propertyResults) -->Line_4 $$ alias2CollectionPersister.put(alias, collectionPersister)[ CD ]
Line_2 $$ private void addCollection(String role, String alias, Map propertyResults) -->Line_9 $$ if (collectionPersister.isOneToMany() || collectionPersister.isManyToMany()) [ CD ]
Line_9 $$ if (collectionPersister.isOneToMany() || collectionPersister.isManyToMany()) -->Line_11 $$ addPersister(alias, filter(propertyResults), persister)[ CD ]
Line_2 $$ private void addCollection(String role, String alias, Map propertyResults) -->Line_4 $$ alias2CollectionPersister.put(alias, collectionPersister)[ FD ]
Line_2 $$ private void addCollection(String role, String alias, Map propertyResults) -->Line_7 $$ alias2CollectionSuffix.put(alias, suffix)[ CD ]
