Line_2 $$ public static Map<InetAddress, Map<String, String>> loadDcRackInfo() -->Line_3 $$ Map<InetAddress, Map<String, String>> result = new HashMap()[ CD ]
Line_6 $$ if (row.has("data_center") && row.has("rack")) -->Line_10 $$ result.put(peer, dcRack)[ CD ]
Line_2 $$ public static Map<InetAddress, Map<String, String>> loadDcRackInfo() -->Line_13 $$ return result[ CD ]
Line_4 $$ for (UntypedResultSet.Row row : executeInternal("SELECT peer, data_center, rack from system." + PEERS)) -->Line_5 $$ InetAddress peer = row.getInetAddress("peer")[ FD ]
Line_7 $$ Map<String, String> dcRack = new HashMap()-->Line_8 $$ dcRack.put("data_center", row.getString("data_center"))[ FD ]
Line_4 $$ for (UntypedResultSet.Row row : executeInternal("SELECT peer, data_center, rack from system." + PEERS)) -->Line_8 $$ dcRack.put("data_center", row.getString("data_center"))[ FD ]
Line_3 $$ Map<InetAddress, Map<String, String>> result = new HashMap()-->Line_10 $$ result.put(peer, dcRack)[ FD ]
Line_7 $$ Map<String, String> dcRack = new HashMap()-->Line_10 $$ result.put(peer, dcRack)[ FD ]
Line_4 $$ for (UntypedResultSet.Row row : executeInternal("SELECT peer, data_center, rack from system." + PEERS)) -->Line_9 $$ dcRack.put("rack", row.getString("rack"))[ FD ]
Line_7 $$ Map<String, String> dcRack = new HashMap()-->Line_9 $$ dcRack.put("rack", row.getString("rack"))[ FD ]
Line_6 $$ if (row.has("data_center") && row.has("rack")) -->Line_9 $$ dcRack.put("rack", row.getString("rack"))[ CD ]
Line_4 $$ for (UntypedResultSet.Row row : executeInternal("SELECT peer, data_center, rack from system." + PEERS)) -->Line_6 $$ if (row.has("data_center") && row.has("rack")) [ FD ]
Line_5 $$ InetAddress peer = row.getInetAddress("peer")-->Line_10 $$ result.put(peer, dcRack)[ FD ]
Line_6 $$ if (row.has("data_center") && row.has("rack")) -->Line_7 $$ Map<String, String> dcRack = new HashMap()[ CD ]
Line_6 $$ if (row.has("data_center") && row.has("rack")) -->Line_8 $$ dcRack.put("data_center", row.getString("data_center"))[ CD ]
