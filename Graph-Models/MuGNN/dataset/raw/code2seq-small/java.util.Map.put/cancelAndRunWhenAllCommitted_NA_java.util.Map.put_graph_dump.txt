Line_4 $$ if (myProject.isDisposed()) -->Line_6 $$ return true[ CD ]
Line_2 $$ public boolean cancelAndRunWhenAllCommitted(@NonNls @NotNull Object key, @NotNull final Runnable action) -->Line_8 $$ if (myUncommittedDocuments.isEmpty()) [ CD ]
Line_2 $$ public boolean cancelAndRunWhenAllCommitted(@NonNls @NotNull Object key, @NotNull final Runnable action) -->Line_4 $$ if (myProject.isDisposed()) [ CD ]
Line_2 $$ public boolean cancelAndRunWhenAllCommitted(@NonNls @NotNull Object key, @NotNull final Runnable action) -->Line_12 $$ action.run()[ FD ]
Line_8 $$ if (myUncommittedDocuments.isEmpty()) -->Line_13 $$ return true[ CD ]
Line_2 $$ public boolean cancelAndRunWhenAllCommitted(@NonNls @NotNull Object key, @NotNull final Runnable action) -->Line_16 $$ actionsWhenAllDocumentsAreCommitted.put(key, action)[ CD ]
Line_8 $$ if (myUncommittedDocuments.isEmpty()) -->Line_9 $$ if (!ApplicationManager.getApplication().hasWriteAction(CommitToPsiFileAction.class)) [ CD ]
Line_8 $$ if (myUncommittedDocuments.isEmpty()) -->Line_12 $$ action.run()[ CD ]
Line_2 $$ public boolean cancelAndRunWhenAllCommitted(@NonNls @NotNull Object key, @NotNull final Runnable action) -->Line_16 $$ actionsWhenAllDocumentsAreCommitted.put(key, action)[ FD ]
Line_4 $$ if (myProject.isDisposed()) -->Line_5 $$ action.run()[ CD ]
Line_2 $$ public boolean cancelAndRunWhenAllCommitted(@NonNls @NotNull Object key, @NotNull final Runnable action) -->Line_3 $$ ApplicationManager.getApplication().assertIsDispatchThread()[ CD ]
Line_2 $$ public boolean cancelAndRunWhenAllCommitted(@NonNls @NotNull Object key, @NotNull final Runnable action) -->Line_5 $$ action.run()[ FD ]
Line_2 $$ public boolean cancelAndRunWhenAllCommitted(@NonNls @NotNull Object key, @NotNull final Runnable action) -->Line_17 $$ return false[ CD ]
Line_2 $$ public boolean cancelAndRunWhenAllCommitted(@NonNls @NotNull Object key, @NotNull final Runnable action) -->Line_15 $$ checkWeAreOutsideAfterCommitHandler()[ CD ]
