Line_2 $$ private SecurityDomain createIdPSecurityDomain() throws IOException -->Line_5 $$ lmOptions.put("usersProperties", FILE_USERS.getAbsolutePath())[ CD ]
Line_2 $$ private SecurityDomain createIdPSecurityDomain() throws IOException -->Line_6 $$ lmOptions.put("rolesProperties", FILE_ROLES.getAbsolutePath())[ CD ]
Line_3 $$ final Map<String, String> lmOptions = new HashMap<String, String>()-->Line_4 $$ final SecurityModule.Builder loginModuleBuilder = new SecurityModule.Builder().name("UsersRoles").options(lmOptions)[ FD ]
Line_3 $$ final Map<String, String> lmOptions = new HashMap<String, String>()-->Line_5 $$ lmOptions.put("usersProperties", FILE_USERS.getAbsolutePath())[ FD ]
Line_2 $$ private SecurityDomain createIdPSecurityDomain() throws IOException -->Line_4 $$ final SecurityModule.Builder loginModuleBuilder = new SecurityModule.Builder().name("UsersRoles").options(lmOptions)[ CD ]
Line_3 $$ final Map<String, String> lmOptions = new HashMap<String, String>()-->Line_6 $$ lmOptions.put("rolesProperties", FILE_ROLES.getAbsolutePath())[ FD ]
Line_2 $$ private SecurityDomain createIdPSecurityDomain() throws IOException -->Line_3 $$ final Map<String, String> lmOptions = new HashMap<String, String>()[ CD ]
Line_2 $$ private SecurityDomain createIdPSecurityDomain() throws IOException -->Line_9 $$ return new SecurityDomain.Builder().name("idp").loginModules(loginModuleBuilder.build()).build()[ CD ]
Line_4 $$ final SecurityModule.Builder loginModuleBuilder = new SecurityModule.Builder().name("UsersRoles").options(lmOptions)-->Line_9 $$ return new SecurityDomain.Builder().name("idp").loginModules(loginModuleBuilder.build()).build()[ FD ]
Line_2 $$ private SecurityDomain createIdPSecurityDomain() throws IOException -->Line_8 $$ FileUtils.writeStringToFile(FILE_ROLES, "tomcat=gooduser", "ISO-8859-1")[ CD ]
Line_2 $$ private SecurityDomain createIdPSecurityDomain() throws IOException -->Line_7 $$ FileUtils.writeStringToFile(FILE_USERS, "tomcat=tomcat", "ISO-8859-1")[ CD ]
