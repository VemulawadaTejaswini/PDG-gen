Line_2 $$ public void testGenericMapMapConstructorWithSameRefAndNoConversion() throws MalformedURLException -->Line_13 $$ assertEquals(2, gb.getShortMap().size())[ CD ]
Line_2 $$ public void testGenericMapMapConstructorWithSameRefAndNoConversion() throws MalformedURLException -->Line_11 $$ GenericBean<?> gb = (GenericBean<?>) bf.getBean("genericBean")[ CD ]
Line_11 $$ GenericBean<?> gb = (GenericBean<?>) bf.getBean("genericBean")-->Line_15 $$ assertEquals(new Integer(3), gb.getShortMap().get(new Short("2")))[ FD ]
Line_11 $$ GenericBean<?> gb = (GenericBean<?>) bf.getBean("genericBean")-->Line_13 $$ assertEquals(2, gb.getShortMap().size())[ FD ]
Line_11 $$ GenericBean<?> gb = (GenericBean<?>) bf.getBean("genericBean")-->Line_12 $$ assertSame(gb.getPlainMap(), gb.getShortMap())[ FD ]
Line_5 $$ Map<Short, Integer> input = new HashMap<Short, Integer>()-->Line_7 $$ input.put(new Short((short) 2), new Integer(3))[ FD ]
Line_5 $$ Map<Short, Integer> input = new HashMap<Short, Integer>()-->Line_6 $$ input.put(new Short((short) 1), new Integer(0))[ FD ]
Line_2 $$ public void testGenericMapMapConstructorWithSameRefAndNoConversion() throws MalformedURLException -->Line_4 $$ RootBeanDefinition rbd = new RootBeanDefinition(GenericBean.class)[ CD ]
Line_2 $$ public void testGenericMapMapConstructorWithSameRefAndNoConversion() throws MalformedURLException -->Line_9 $$ rbd.getConstructorArgumentValues().addGenericArgumentValue(input)[ CD ]
Line_2 $$ public void testGenericMapMapConstructorWithSameRefAndNoConversion() throws MalformedURLException -->Line_15 $$ assertEquals(new Integer(3), gb.getShortMap().get(new Short("2")))[ CD ]
Line_5 $$ Map<Short, Integer> input = new HashMap<Short, Integer>()-->Line_8 $$ rbd.getConstructorArgumentValues().addGenericArgumentValue(input)[ FD ]
Line_4 $$ RootBeanDefinition rbd = new RootBeanDefinition(GenericBean.class)-->Line_9 $$ rbd.getConstructorArgumentValues().addGenericArgumentValue(input)[ FD ]
Line_4 $$ RootBeanDefinition rbd = new RootBeanDefinition(GenericBean.class)-->Line_10 $$ bf.registerBeanDefinition("genericBean", rbd)[ FD ]
Line_5 $$ Map<Short, Integer> input = new HashMap<Short, Integer>()-->Line_9 $$ rbd.getConstructorArgumentValues().addGenericArgumentValue(input)[ FD ]
Line_2 $$ public void testGenericMapMapConstructorWithSameRefAndNoConversion() throws MalformedURLException -->Line_5 $$ Map<Short, Integer> input = new HashMap<Short, Integer>()[ CD ]
Line_2 $$ public void testGenericMapMapConstructorWithSameRefAndNoConversion() throws MalformedURLException -->Line_3 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()[ CD ]
Line_2 $$ public void testGenericMapMapConstructorWithSameRefAndNoConversion() throws MalformedURLException -->Line_6 $$ input.put(new Short((short) 1), new Integer(0))[ CD ]
Line_2 $$ public void testGenericMapMapConstructorWithSameRefAndNoConversion() throws MalformedURLException -->Line_14 $$ assertEquals(new Integer(0), gb.getShortMap().get(new Short("1")))[ CD ]
Line_2 $$ public void testGenericMapMapConstructorWithSameRefAndNoConversion() throws MalformedURLException -->Line_8 $$ rbd.getConstructorArgumentValues().addGenericArgumentValue(input)[ CD ]
Line_11 $$ GenericBean<?> gb = (GenericBean<?>) bf.getBean("genericBean")-->Line_14 $$ assertEquals(new Integer(0), gb.getShortMap().get(new Short("1")))[ FD ]
Line_3 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_10 $$ bf.registerBeanDefinition("genericBean", rbd)[ FD ]
Line_3 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_11 $$ GenericBean<?> gb = (GenericBean<?>) bf.getBean("genericBean")[ FD ]
Line_2 $$ public void testGenericMapMapConstructorWithSameRefAndNoConversion() throws MalformedURLException -->Line_12 $$ assertSame(gb.getPlainMap(), gb.getShortMap())[ CD ]
Line_4 $$ RootBeanDefinition rbd = new RootBeanDefinition(GenericBean.class)-->Line_8 $$ rbd.getConstructorArgumentValues().addGenericArgumentValue(input)[ FD ]
Line_2 $$ public void testGenericMapMapConstructorWithSameRefAndNoConversion() throws MalformedURLException -->Line_7 $$ input.put(new Short((short) 2), new Integer(3))[ CD ]
Line_2 $$ public void testGenericMapMapConstructorWithSameRefAndNoConversion() throws MalformedURLException -->Line_10 $$ bf.registerBeanDefinition("genericBean", rbd)[ CD ]
