Line_2 $$ public Map<String, String> match(String uri) -->Line_3 $$ Assert.notNull(uri, "'uri' must not be null")[ FD ]
Line_2 $$ public Map<String, String> match(String uri) -->Line_5 $$ Matcher matcher = this.matchPattern.matcher(uri)[ CD ]
Line_2 $$ public Map<String, String> match(String uri) -->Line_4 $$ Map<String, String> result = new LinkedHashMap<String, String>(this.variableNames.size())[ CD ]
Line_5 $$ Matcher matcher = this.matchPattern.matcher(uri)-->Line_9 $$ String value = matcher.group(i)[ FD ]
Line_7 $$ for (int i = 1; i <= matcher.groupCount(); i++) -->Line_8 $$ String name = this.variableNames.get(i - 1)[ CD ]
Line_7 $$ for (int i = 1; i <= matcher.groupCount(); i++) -->Line_10 $$ result.put(name, value)[ CD ]
Line_2 $$ public Map<String, String> match(String uri) -->Line_6 $$ if (matcher.find()) [ CD ]
Line_7 $$ for (int i = 1; i <= matcher.groupCount(); i++) -->Line_9 $$ String value = matcher.group(i)[ CD ]
Line_2 $$ public Map<String, String> match(String uri) -->Line_3 $$ Assert.notNull(uri, "'uri' must not be null")[ CD ]
Line_8 $$ String name = this.variableNames.get(i - 1)-->Line_10 $$ result.put(name, value)[ FD ]
Line_6 $$ if (matcher.find()) -->Line_7 $$ for (int i = 1; i <= matcher.groupCount(); i++) [ CD ]
Line_9 $$ String value = matcher.group(i)-->Line_10 $$ result.put(name, value)[ FD ]
Line_2 $$ public Map<String, String> match(String uri) -->Line_5 $$ Matcher matcher = this.matchPattern.matcher(uri)[ FD ]
Line_5 $$ Matcher matcher = this.matchPattern.matcher(uri)-->Line_6 $$ if (matcher.find()) [ FD ]
Line_7 $$ for (int i = 1; i <= matcher.groupCount(); i++) -->Line_9 $$ String value = matcher.group(i)[ FD ]
Line_2 $$ public Map<String, String> match(String uri) -->Line_13 $$ return result[ CD ]
Line_4 $$ Map<String, String> result = new LinkedHashMap<String, String>(this.variableNames.size())-->Line_10 $$ result.put(name, value)[ FD ]
Line_5 $$ Matcher matcher = this.matchPattern.matcher(uri)-->Line_7 $$ for (int i = 1; i <= matcher.groupCount(); i++) [ FD ]
