Line_9 $$ MBeanExporter exporter = new MBeanExporter()-->Line_10 $$ exporter.setServer(getServer())[ FD ]
Line_2 $$ public void testBeanNameCanBeUsedInNotificationListenersMap() throws Exception -->Line_14 $$ exporter.setBeanFactory(factory)[ CD ]
Line_5 $$ DefaultListableBeanFactory factory = new DefaultListableBeanFactory()-->Line_8 $$ Object testBeanInstance = factory.getBean(beanName)[ FD ]
Line_2 $$ public void testBeanNameCanBeUsedInNotificationListenersMap() throws Exception -->Line_17 $$ start(exporter)[ CD ]
Line_2 $$ public void testBeanNameCanBeUsedInNotificationListenersMap() throws Exception -->Line_3 $$ String beanName = "charlesDexterWard"[ CD ]
Line_11 $$ Map<String, Object> beansToExport = new HashMap<String, Object>()-->Line_12 $$ beansToExport.put("test:what=ever", testBeanInstance)[ FD ]
Line_3 $$ String beanName = "charlesDexterWard"-->Line_16 $$ exporter.setNotificationListenerMappings(Collections.singletonMap(beanName, listener))[ FD ]
Line_11 $$ Map<String, Object> beansToExport = new HashMap<String, Object>()-->Line_13 $$ exporter.setBeans(beansToExport)[ FD ]
Line_9 $$ MBeanExporter exporter = new MBeanExporter()-->Line_16 $$ exporter.setNotificationListenerMappings(Collections.singletonMap(beanName, listener))[ FD ]
Line_2 $$ public void testBeanNameCanBeUsedInNotificationListenersMap() throws Exception -->Line_11 $$ Map<String, Object> beansToExport = new HashMap<String, Object>()[ CD ]
Line_5 $$ DefaultListableBeanFactory factory = new DefaultListableBeanFactory()-->Line_7 $$ factory.preInstantiateSingletons()[ FD ]
Line_5 $$ DefaultListableBeanFactory factory = new DefaultListableBeanFactory()-->Line_6 $$ factory.registerBeanDefinition(beanName, testBean.getBeanDefinition())[ FD ]
Line_2 $$ public void testBeanNameCanBeUsedInNotificationListenersMap() throws Exception -->Line_5 $$ DefaultListableBeanFactory factory = new DefaultListableBeanFactory()[ CD ]
Line_4 $$ BeanDefinitionBuilder testBean = BeanDefinitionBuilder.rootBeanDefinition(JmxTestBean.class)-->Line_6 $$ factory.registerBeanDefinition(beanName, testBean.getBeanDefinition())[ FD ]
Line_5 $$ DefaultListableBeanFactory factory = new DefaultListableBeanFactory()-->Line_14 $$ exporter.setBeanFactory(factory)[ FD ]
Line_9 $$ MBeanExporter exporter = new MBeanExporter()-->Line_17 $$ start(exporter)[ FD ]
Line_2 $$ public void testBeanNameCanBeUsedInNotificationListenersMap() throws Exception -->Line_6 $$ factory.registerBeanDefinition(beanName, testBean.getBeanDefinition())[ CD ]
Line_2 $$ public void testBeanNameCanBeUsedInNotificationListenersMap() throws Exception -->Line_10 $$ exporter.setServer(getServer())[ CD ]
Line_2 $$ public void testBeanNameCanBeUsedInNotificationListenersMap() throws Exception -->Line_7 $$ factory.preInstantiateSingletons()[ CD ]
Line_2 $$ public void testBeanNameCanBeUsedInNotificationListenersMap() throws Exception -->Line_13 $$ exporter.setBeans(beansToExport)[ CD ]
Line_3 $$ String beanName = "charlesDexterWard"-->Line_6 $$ factory.registerBeanDefinition(beanName, testBean.getBeanDefinition())[ FD ]
Line_2 $$ public void testBeanNameCanBeUsedInNotificationListenersMap() throws Exception -->Line_8 $$ Object testBeanInstance = factory.getBean(beanName)[ CD ]
Line_2 $$ public void testBeanNameCanBeUsedInNotificationListenersMap() throws Exception -->Line_16 $$ exporter.setNotificationListenerMappings(Collections.singletonMap(beanName, listener))[ CD ]
Line_8 $$ Object testBeanInstance = factory.getBean(beanName)-->Line_12 $$ beansToExport.put("test:what=ever", testBeanInstance)[ FD ]
Line_2 $$ public void testBeanNameCanBeUsedInNotificationListenersMap() throws Exception -->Line_15 $$ StubNotificationListener listener = new StubNotificationListener()[ CD ]
Line_15 $$ StubNotificationListener listener = new StubNotificationListener()-->Line_16 $$ exporter.setNotificationListenerMappings(Collections.singletonMap(beanName, listener))[ FD ]
Line_9 $$ MBeanExporter exporter = new MBeanExporter()-->Line_13 $$ exporter.setBeans(beansToExport)[ FD ]
Line_2 $$ public void testBeanNameCanBeUsedInNotificationListenersMap() throws Exception -->Line_12 $$ beansToExport.put("test:what=ever", testBeanInstance)[ CD ]
Line_2 $$ public void testBeanNameCanBeUsedInNotificationListenersMap() throws Exception -->Line_4 $$ BeanDefinitionBuilder testBean = BeanDefinitionBuilder.rootBeanDefinition(JmxTestBean.class)[ CD ]
Line_9 $$ MBeanExporter exporter = new MBeanExporter()-->Line_14 $$ exporter.setBeanFactory(factory)[ FD ]
Line_3 $$ String beanName = "charlesDexterWard"-->Line_8 $$ Object testBeanInstance = factory.getBean(beanName)[ FD ]
Line_2 $$ public void testBeanNameCanBeUsedInNotificationListenersMap() throws Exception -->Line_9 $$ MBeanExporter exporter = new MBeanExporter()[ CD ]
