Line_3 $$ Map<String, Object> map = new LinkedHashMap()-->Line_9 $$ String json = toJSON(map)[ FD ]
Line_2 $$ public void testListFilteringAndFlags() throws Exception -->Line_14 $$ List<Object> expectedList = toList("[[ CD ]
Line_10 $$ JSONWebServiceAction jsonWebServiceAction = prepareInvokerAction(json)-->Line_11 $$ Object result = jsonWebServiceAction.invoke()[ FD ]
Line_4 $$ Map<String, Object> params = new LinkedHashMap()-->Line_5 $$ map.put("$world[id] = /foo/get-foo-datas", params)[ FD ]
Line_2 $$ public void testListFilteringAndFlags() throws Exception -->Line_12 $$ JSONWebServiceInvokerAction.InvokerResult invokerResult = (JSONWebServiceInvokerAction.InvokerResult) result[ CD ]
Line_2 $$ public void testListFilteringAndFlags() throws Exception -->Line_4 $$ Map<String, Object> params = new LinkedHashMap()[ CD ]
Line_2 $$ public void testListFilteringAndFlags() throws Exception -->Line_6 $$ Map<String, Object> map2 = new LinkedHashMap()[ CD ]
Line_2 $$ public void testListFilteringAndFlags() throws Exception -->Line_9 $$ String json = toJSON(map)[ CD ]
Line_2 $$ public void testListFilteringAndFlags() throws Exception -->Line_13 $$ Assert.assertTrue(invokerResult.getResult() instanceof List)[ CD ]
Line_4 $$ Map<String, Object> params = new LinkedHashMap()-->Line_7 $$ params.put("$resource[id,value] = /foo/get-foo-data", map2)[ FD ]
Line_14 $$ List<Object> expectedList = toList("[-->Line_15 $$ Assert.assertEquals(expectedList, toList(toJSON(result)))[ FD ]
Line_6 $$ Map<String, Object> map2 = new LinkedHashMap()-->Line_8 $$ map2.put("@id", "$world.id")[ FD ]
Line_12 $$ JSONWebServiceInvokerAction.InvokerResult invokerResult = (JSONWebServiceInvokerAction.InvokerResult) result-->Line_13 $$ Assert.assertTrue(invokerResult.getResult() instanceof List)[ FD ]
Line_2 $$ public void testListFilteringAndFlags() throws Exception -->Line_10 $$ JSONWebServiceAction jsonWebServiceAction = prepareInvokerAction(json)[ CD ]
Line_2 $$ public void testListFilteringAndFlags() throws Exception -->Line_7 $$ params.put("$resource[id,value] = /foo/get-foo-data", map2)[ CD ]
Line_2 $$ public void testListFilteringAndFlags() throws Exception -->Line_3 $$ Map<String, Object> map = new LinkedHashMap()[ CD ]
Line_2 $$ public void testListFilteringAndFlags() throws Exception -->Line_8 $$ map2.put("@id", "$world.id")[ CD ]
Line_9 $$ String json = toJSON(map)-->Line_10 $$ JSONWebServiceAction jsonWebServiceAction = prepareInvokerAction(json)[ FD ]
Line_2 $$ public void testListFilteringAndFlags() throws Exception -->Line_11 $$ Object result = jsonWebServiceAction.invoke()[ CD ]
Line_11 $$ Object result = jsonWebServiceAction.invoke()-->Line_15 $$ Assert.assertEquals(expectedList, toList(toJSON(result)))[ FD ]
Line_2 $$ public void testListFilteringAndFlags() throws Exception -->Line_15 $$ Assert.assertEquals(expectedList, toList(toJSON(result)))[ CD ]
Line_2 $$ public void testListFilteringAndFlags() throws Exception -->Line_5 $$ map.put("$world[id] = /foo/get-foo-datas", params)[ CD ]
Line_3 $$ Map<String, Object> map = new LinkedHashMap()-->Line_5 $$ map.put("$world[id] = /foo/get-foo-datas", params)[ FD ]
Line_6 $$ Map<String, Object> map2 = new LinkedHashMap()-->Line_7 $$ params.put("$resource[id,value] = /foo/get-foo-data", map2)[ FD ]
