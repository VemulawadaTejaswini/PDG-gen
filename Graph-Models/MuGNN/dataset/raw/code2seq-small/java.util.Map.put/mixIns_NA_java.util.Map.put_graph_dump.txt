Line_3 $$ Class<?> target = String.class-->Line_6 $$ mixIns.put(target, mixInSource)[ FD ]
Line_7 $$ ObjectMapper objectMapper = Jackson2ObjectMapperBuilder.json().mixIns(mixIns).build()-->Line_9 $$ assertSame(mixInSource, objectMapper.findMixInClassFor(target))[ FD ]
Line_2 $$ public void mixIns() -->Line_4 $$ Class<?> mixInSource = Object.class[ CD ]
Line_2 $$ public void mixIns() -->Line_7 $$ ObjectMapper objectMapper = Jackson2ObjectMapperBuilder.json().mixIns(mixIns).build()[ CD ]
Line_2 $$ public void mixIns() -->Line_8 $$ assertEquals(1, objectMapper.mixInCount())[ CD ]
Line_2 $$ public void mixIns() -->Line_6 $$ mixIns.put(target, mixInSource)[ CD ]
Line_2 $$ public void mixIns() -->Line_5 $$ Map<Class<?>, Class<?>> mixIns = new HashMap<Class<?>, Class<?>>()[ CD ]
Line_3 $$ Class<?> target = String.class-->Line_9 $$ assertSame(mixInSource, objectMapper.findMixInClassFor(target))[ FD ]
Line_7 $$ ObjectMapper objectMapper = Jackson2ObjectMapperBuilder.json().mixIns(mixIns).build()-->Line_8 $$ assertEquals(1, objectMapper.mixInCount())[ FD ]
Line_5 $$ Map<Class<?>, Class<?>> mixIns = new HashMap<Class<?>, Class<?>>()-->Line_6 $$ mixIns.put(target, mixInSource)[ FD ]
Line_4 $$ Class<?> mixInSource = Object.class-->Line_6 $$ mixIns.put(target, mixInSource)[ FD ]
Line_5 $$ Map<Class<?>, Class<?>> mixIns = new HashMap<Class<?>, Class<?>>()-->Line_7 $$ ObjectMapper objectMapper = Jackson2ObjectMapperBuilder.json().mixIns(mixIns).build()[ FD ]
Line_2 $$ public void mixIns() -->Line_3 $$ Class<?> target = String.class[ CD ]
Line_2 $$ public void mixIns() -->Line_9 $$ assertSame(mixInSource, objectMapper.findMixInClassFor(target))[ CD ]
Line_4 $$ Class<?> mixInSource = Object.class-->Line_9 $$ assertSame(mixInSource, objectMapper.findMixInClassFor(target))[ FD ]
