Line_12 $$ if (value instanceof Map) -->Line_13 $$ Map<Object, Object> map = new HashMap()[ CD ]
Line_13 $$ Map<Object, Object> map = new HashMap()-->Line_15 $$ map.put(processValue(precision, entry.getKey()), processValue(precision, entry.getValue()))[ FD ]
Line_2 $$ private static Object processValue(int precision, Object value) -->Line_3 $$ if (value instanceof Double || value instanceof Float) [ CD ]
Line_2 $$ private static Object processValue(int precision, Object value) -->Line_19 $$ return value[ CD ]
Line_2 $$ private static Object processValue(int precision, Object value) -->Line_12 $$ if (value instanceof Map) [ CD ]
Line_2 $$ private static Object processValue(int precision, Object value) -->Line_10 $$ processValue(precision, element)[ FD ]
Line_2 $$ private static Object processValue(int precision, Object value) -->Line_15 $$ map.put(processValue(precision, entry.getKey()), processValue(precision, entry.getValue()))[ FD ]
Line_2 $$ private static Object processValue(int precision, Object value) -->Line_6 $$ if (value instanceof Number) [ CD ]
Line_2 $$ private static Object processValue(int precision, Object value) -->Line_6 $$ if (value instanceof Number) [ FD ]
Line_9 $$ if (value instanceof List) -->Line_10 $$ return ((List<?>) value).stream().map( element -> processValue(precision, element)).collect(toList())[ CD ]
Line_6 $$ if (value instanceof Number) -->Line_7 $$ return ((Number) value).longValue()[ CD ]
Line_2 $$ private static Object processValue(int precision, Object value) -->Line_9 $$ if (value instanceof List) [ FD ]
Line_14 $$ for (Entry<Object, Object> entry : ((Map<Object, Object>) value).entrySet()) -->Line_15 $$ map.put(processValue(precision, entry.getKey()), processValue(precision, entry.getValue()))[ FD ]
Line_12 $$ if (value instanceof Map) -->Line_17 $$ return map[ CD ]
Line_2 $$ private static Object processValue(int precision, Object value) -->Line_9 $$ if (value instanceof List) [ CD ]
Line_2 $$ private static Object processValue(int precision, Object value) -->Line_12 $$ if (value instanceof Map) [ FD ]
Line_3 $$ if (value instanceof Double || value instanceof Float) -->Line_4 $$ return new ApproximateDouble(((Number) value).doubleValue(), precision)[ CD ]
