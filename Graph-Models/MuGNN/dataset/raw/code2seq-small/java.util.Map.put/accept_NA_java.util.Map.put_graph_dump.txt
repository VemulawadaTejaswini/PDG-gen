Line_7 $$ if (myRootUrl.equals(SVNURLUtil.getCommonURLAncestor(myRootUrl, branchUrl))) -->Line_8 $$ final File file = SvnUtil.fileFromUrl(baseDir, baseUrl, branchUrl.getPath())[ CD ]
Line_6 $$ final SVNURL branchUrl = SVNURL.parseURIEncoded(url)-->Line_7 $$ if (myRootUrl.equals(SVNURLUtil.getCommonURLAncestor(myRootUrl, branchUrl))) [ FD ]
Line_3 $$ if (myRootUrl != null) -->Line_6 $$ final SVNURL branchUrl = SVNURL.parseURIEncoded(url)[ CD ]
Line_7 $$ if (myRootUrl.equals(SVNURLUtil.getCommonURLAncestor(myRootUrl, branchUrl))) -->Line_9 $$ myBranchesUnder.put(url, file.getAbsolutePath())[ CD ]
Line_2 $$ public boolean accept(final String url) throws SVNException -->Line_3 $$ if (myRootUrl != null) [ CD ]
Line_5 $$ final String baseUrl = myRootUrl.getPath()-->Line_8 $$ final File file = SvnUtil.fileFromUrl(baseDir, baseUrl, branchUrl.getPath())[ FD ]
Line_6 $$ final SVNURL branchUrl = SVNURL.parseURIEncoded(url)-->Line_8 $$ final File file = SvnUtil.fileFromUrl(baseDir, baseUrl, branchUrl.getPath())[ FD ]
Line_2 $$ public boolean accept(final String url) throws SVNException -->Line_9 $$ myBranchesUnder.put(url, file.getAbsolutePath())[ FD ]
Line_2 $$ public boolean accept(final String url) throws SVNException -->Line_12 $$ return false[ CD ]
Line_4 $$ final File baseDir = new File(myRoot.getPath())-->Line_8 $$ final File file = SvnUtil.fileFromUrl(baseDir, baseUrl, branchUrl.getPath())[ FD ]
Line_3 $$ if (myRootUrl != null) -->Line_4 $$ final File baseDir = new File(myRoot.getPath())[ CD ]
Line_2 $$ public boolean accept(final String url) throws SVNException -->Line_6 $$ final SVNURL branchUrl = SVNURL.parseURIEncoded(url)[ FD ]
Line_8 $$ final File file = SvnUtil.fileFromUrl(baseDir, baseUrl, branchUrl.getPath())-->Line_9 $$ myBranchesUnder.put(url, file.getAbsolutePath())[ FD ]
Line_3 $$ if (myRootUrl != null) -->Line_7 $$ if (myRootUrl.equals(SVNURLUtil.getCommonURLAncestor(myRootUrl, branchUrl))) [ CD ]
Line_3 $$ if (myRootUrl != null) -->Line_5 $$ final String baseUrl = myRootUrl.getPath()[ CD ]
