Line_2 $$ public boolean mapToMapFromEntity(SessionImplementor session, Map<String, Object> data, Object newObj, Object oldObj) -->Line_8 $$ return checkModified(session, newObj, oldObj)[ FD ]
Line_5 $$ for (Map.Entry<String, Object> entry : newData.entrySet()) -->Line_6 $$ data.put(entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ public boolean mapToMapFromEntity(SessionImplementor session, Map<String, Object> data, Object newObj, Object oldObj) -->Line_8 $$ return checkModified(session, newObj, oldObj)[ CD ]
Line_2 $$ public boolean mapToMapFromEntity(SessionImplementor session, Map<String, Object> data, Object newObj, Object oldObj) -->Line_6 $$ data.put(entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ public boolean mapToMapFromEntity(SessionImplementor session, Map<String, Object> data, Object newObj, Object oldObj) -->Line_4 $$ delegate.mapToMapFromEntity(newData, nonInsertableFake ? oldObj : newObj)[ CD ]
Line_3 $$ final HashMap<String, Object> newData = new HashMap<String, Object>()-->Line_5 $$ for (Map.Entry<String, Object> entry : newData.entrySet()) [ FD ]
Line_3 $$ final HashMap<String, Object> newData = new HashMap<String, Object>()-->Line_4 $$ delegate.mapToMapFromEntity(newData, nonInsertableFake ? oldObj : newObj)[ FD ]
Line_2 $$ public boolean mapToMapFromEntity(SessionImplementor session, Map<String, Object> data, Object newObj, Object oldObj) -->Line_3 $$ final HashMap<String, Object> newData = new HashMap<String, Object>()[ CD ]
