Line_25 $$ Map<String, BlobMetaData> blobs = container.listBlobs()-->Line_26 $$ assertThat(blobs.size(), equalTo(numberOfFooBlobs + numberOfBarBlobs))[ FD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_25 $$ Map<String, BlobMetaData> blobs = container.listBlobs()[ CD ]
Line_16 $$ int length = randomIntBetween(10, 100)-->Line_42 $$ assertThat(data, equalTo(readBlobFully(container, newName, length)))[ FD ]
Line_16 $$ int length = randomIntBetween(10, 100)-->Line_24 $$ byte[] data = createRandomBlob(container, name, length)[ FD ]
Line_17 $$ String name = "bar-" + i + "-"-->Line_38 $$ assertThat(container.listBlobsByPrefix(name).size(), equalTo(0))[ FD ]
Line_17 $$ String name = "bar-" + i + "-"-->Line_18 $$ generatedBlobs.put(name, (long) length)[ FD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_21 $$ int length = randomIntBetween(10, 100)[ CD ]
Line_22 $$ String name = "bar-0-"-->Line_37 $$ container.move(name, newName)[ FD ]
Line_36 $$ String newName = "bar-new"-->Line_37 $$ container.move(name, newName)[ FD ]
Line_22 $$ String name = "bar-0-"-->Line_23 $$ generatedBlobs.put(name, (long) length)[ FD ]
Line_17 $$ String name = "bar-" + i + "-"-->Line_23 $$ generatedBlobs.put(name, (long) length)[ FD ]
Line_9 $$ for (int i = 0; i < numberOfFooBlobs; i++) -->Line_12 $$ generatedBlobs.put(name, (long) length)[ CD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_42 $$ assertThat(data, equalTo(readBlobFully(container, newName, length)))[ CD ]
Line_6 $$ int numberOfFooBlobs = randomIntBetween(0, 10)-->Line_33 $$ assertThat(container.listBlobsByPrefix("foo-").size(), equalTo(numberOfFooBlobs))[ FD ]
Line_39 $$ blobs = container.listBlobsByPrefix(newName)-->Line_41 $$ assertThat(blobs.get(newName).length(), equalTo(generatedBlobs.get(name)))[ FD ]
Line_8 $$ Map<String, Long> generatedBlobs = new HashMap()-->Line_18 $$ generatedBlobs.put(name, (long) length)[ FD ]
Line_11 $$ String name = "foo-" + i + "-"-->Line_18 $$ generatedBlobs.put(name, (long) length)[ FD ]
Line_11 $$ String name = "foo-" + i + "-"-->Line_13 $$ createRandomBlob(container, name, length)[ FD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_41 $$ assertThat(blobs.get(newName).length(), equalTo(generatedBlobs.get(name)))[ CD ]
Line_4 $$ final BlobContainer container = store.blobContainer(new BlobPath())-->Line_38 $$ assertThat(container.listBlobsByPrefix(name).size(), equalTo(0))[ FD ]
Line_36 $$ String newName = "bar-new"-->Line_41 $$ assertThat(blobs.get(newName).length(), equalTo(generatedBlobs.get(name)))[ FD ]
Line_17 $$ String name = "bar-" + i + "-"-->Line_41 $$ assertThat(blobs.get(newName).length(), equalTo(generatedBlobs.get(name)))[ FD ]
Line_28 $$ BlobMetaData blobMetaData = blobs.get(generated.getKey())-->Line_31 $$ assertThat(blobMetaData.length(), equalTo(generated.getValue()))[ FD ]
Line_11 $$ String name = "foo-" + i + "-"-->Line_19 $$ createRandomBlob(container, name, length)[ FD ]
Line_21 $$ int length = randomIntBetween(10, 100)-->Line_42 $$ assertThat(data, equalTo(readBlobFully(container, newName, length)))[ FD ]
Line_39 $$ blobs = container.listBlobsByPrefix(newName)-->Line_40 $$ assertThat(blobs.size(), equalTo(1))[ FD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_35 $$ assertThat(container.listBlobsByPrefix("baz-").size(), equalTo(0))[ CD ]
Line_4 $$ final BlobContainer container = store.blobContainer(new BlobPath())-->Line_5 $$ assertThat(container.listBlobs().size(), equalTo(0))[ FD ]
Line_25 $$ Map<String, BlobMetaData> blobs = container.listBlobs()-->Line_41 $$ assertThat(blobs.get(newName).length(), equalTo(generatedBlobs.get(name)))[ FD ]
Line_4 $$ final BlobContainer container = store.blobContainer(new BlobPath())-->Line_34 $$ assertThat(container.listBlobsByPrefix("bar-").size(), equalTo(numberOfBarBlobs))[ FD ]
Line_28 $$ BlobMetaData blobMetaData = blobs.get(generated.getKey())-->Line_29 $$ assertThat(generated.getKey(), blobMetaData, notNullValue())[ FD ]
Line_11 $$ String name = "foo-" + i + "-"-->Line_37 $$ container.move(name, newName)[ FD ]
Line_25 $$ Map<String, BlobMetaData> blobs = container.listBlobs()-->Line_40 $$ assertThat(blobs.size(), equalTo(1))[ FD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_7 $$ int numberOfBarBlobs = randomIntBetween(3, 20)[ CD ]
Line_8 $$ Map<String, Long> generatedBlobs = new HashMap()-->Line_41 $$ assertThat(blobs.get(newName).length(), equalTo(generatedBlobs.get(name)))[ FD ]
Line_4 $$ final BlobContainer container = store.blobContainer(new BlobPath())-->Line_35 $$ assertThat(container.listBlobsByPrefix("baz-").size(), equalTo(0))[ FD ]
Line_27 $$ for (Map.Entry<String, Long> generated : generatedBlobs.entrySet()) -->Line_31 $$ assertThat(blobMetaData.length(), equalTo(generated.getValue()))[ FD ]
Line_4 $$ final BlobContainer container = store.blobContainer(new BlobPath())-->Line_25 $$ Map<String, BlobMetaData> blobs = container.listBlobs()[ FD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_37 $$ container.move(name, newName)[ CD ]
Line_21 $$ int length = randomIntBetween(10, 100)-->Line_24 $$ byte[] data = createRandomBlob(container, name, length)[ FD ]
Line_22 $$ String name = "bar-0-"-->Line_41 $$ assertThat(blobs.get(newName).length(), equalTo(generatedBlobs.get(name)))[ FD ]
Line_25 $$ Map<String, BlobMetaData> blobs = container.listBlobs()-->Line_28 $$ BlobMetaData blobMetaData = blobs.get(generated.getKey())[ FD ]
Line_7 $$ int numberOfBarBlobs = randomIntBetween(3, 20)-->Line_34 $$ assertThat(container.listBlobsByPrefix("bar-").size(), equalTo(numberOfBarBlobs))[ FD ]
Line_3 $$ final BlobStore store = newBlobStore()-->Line_43 $$ store.close()[ FD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_43 $$ store.close()[ CD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_34 $$ assertThat(container.listBlobsByPrefix("bar-").size(), equalTo(numberOfBarBlobs))[ CD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_15 $$ for (int i = 1; i < numberOfBarBlobs; i++) [ CD ]
Line_4 $$ final BlobContainer container = store.blobContainer(new BlobPath())-->Line_33 $$ assertThat(container.listBlobsByPrefix("foo-").size(), equalTo(numberOfFooBlobs))[ FD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_22 $$ String name = "bar-0-"[ CD ]
Line_36 $$ String newName = "bar-new"-->Line_42 $$ assertThat(data, equalTo(readBlobFully(container, newName, length)))[ FD ]
Line_25 $$ Map<String, BlobMetaData> blobs = container.listBlobs()-->Line_39 $$ blobs = container.listBlobsByPrefix(newName)[ FD ]
Line_9 $$ for (int i = 0; i < numberOfFooBlobs; i++) -->Line_13 $$ createRandomBlob(container, name, length)[ CD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_5 $$ assertThat(container.listBlobs().size(), equalTo(0))[ CD ]
Line_27 $$ for (Map.Entry<String, Long> generated : generatedBlobs.entrySet()) -->Line_28 $$ BlobMetaData blobMetaData = blobs.get(generated.getKey())[ FD ]
Line_4 $$ final BlobContainer container = store.blobContainer(new BlobPath())-->Line_24 $$ byte[] data = createRandomBlob(container, name, length)[ FD ]
Line_10 $$ int length = randomIntBetween(10, 100)-->Line_13 $$ createRandomBlob(container, name, length)[ FD ]
Line_4 $$ final BlobContainer container = store.blobContainer(new BlobPath())-->Line_42 $$ assertThat(data, equalTo(readBlobFully(container, newName, length)))[ FD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_36 $$ String newName = "bar-new"[ CD ]
Line_9 $$ for (int i = 0; i < numberOfFooBlobs; i++) -->Line_15 $$ for (int i = 1; i < numberOfBarBlobs; i++) [ FD ]
Line_17 $$ String name = "bar-" + i + "-"-->Line_37 $$ container.move(name, newName)[ FD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_26 $$ assertThat(blobs.size(), equalTo(numberOfFooBlobs + numberOfBarBlobs))[ CD ]
Line_15 $$ for (int i = 1; i < numberOfBarBlobs; i++) -->Line_19 $$ createRandomBlob(container, name, length)[ CD ]
Line_3 $$ final BlobStore store = newBlobStore()-->Line_4 $$ final BlobContainer container = store.blobContainer(new BlobPath())[ FD ]
Line_15 $$ for (int i = 1; i < numberOfBarBlobs; i++) -->Line_16 $$ int length = randomIntBetween(10, 100)[ CD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_8 $$ Map<String, Long> generatedBlobs = new HashMap()[ CD ]
Line_28 $$ BlobMetaData blobMetaData = blobs.get(generated.getKey())-->Line_30 $$ assertThat(blobMetaData.name(), equalTo(generated.getKey()))[ FD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_38 $$ assertThat(container.listBlobsByPrefix(name).size(), equalTo(0))[ CD ]
Line_11 $$ String name = "foo-" + i + "-"-->Line_41 $$ assertThat(blobs.get(newName).length(), equalTo(generatedBlobs.get(name)))[ FD ]
Line_7 $$ int numberOfBarBlobs = randomIntBetween(3, 20)-->Line_15 $$ for (int i = 1; i < numberOfBarBlobs; i++) [ FD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_4 $$ final BlobContainer container = store.blobContainer(new BlobPath())[ CD ]
Line_17 $$ String name = "bar-" + i + "-"-->Line_24 $$ byte[] data = createRandomBlob(container, name, length)[ FD ]
Line_15 $$ for (int i = 1; i < numberOfBarBlobs; i++) -->Line_18 $$ generatedBlobs.put(name, (long) length)[ CD ]
Line_11 $$ String name = "foo-" + i + "-"-->Line_12 $$ generatedBlobs.put(name, (long) length)[ FD ]
Line_10 $$ int length = randomIntBetween(10, 100)-->Line_24 $$ byte[] data = createRandomBlob(container, name, length)[ FD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_3 $$ final BlobStore store = newBlobStore()[ CD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_9 $$ for (int i = 0; i < numberOfFooBlobs; i++) [ CD ]
Line_9 $$ for (int i = 0; i < numberOfFooBlobs; i++) -->Line_10 $$ int length = randomIntBetween(10, 100)[ CD ]
Line_11 $$ String name = "foo-" + i + "-"-->Line_23 $$ generatedBlobs.put(name, (long) length)[ FD ]
Line_4 $$ final BlobContainer container = store.blobContainer(new BlobPath())-->Line_37 $$ container.move(name, newName)[ FD ]
Line_16 $$ int length = randomIntBetween(10, 100)-->Line_19 $$ createRandomBlob(container, name, length)[ FD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_6 $$ int numberOfFooBlobs = randomIntBetween(0, 10)[ CD ]
Line_6 $$ int numberOfFooBlobs = randomIntBetween(0, 10)-->Line_9 $$ for (int i = 0; i < numberOfFooBlobs; i++) [ FD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_23 $$ generatedBlobs.put(name, (long) length)[ CD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_33 $$ assertThat(container.listBlobsByPrefix("foo-").size(), equalTo(numberOfFooBlobs))[ CD ]
Line_24 $$ byte[] data = createRandomBlob(container, name, length)-->Line_42 $$ assertThat(data, equalTo(readBlobFully(container, newName, length)))[ FD ]
Line_4 $$ final BlobContainer container = store.blobContainer(new BlobPath())-->Line_39 $$ blobs = container.listBlobsByPrefix(newName)[ FD ]
Line_22 $$ String name = "bar-0-"-->Line_24 $$ byte[] data = createRandomBlob(container, name, length)[ FD ]
Line_8 $$ Map<String, Long> generatedBlobs = new HashMap()-->Line_12 $$ generatedBlobs.put(name, (long) length)[ FD ]
Line_4 $$ final BlobContainer container = store.blobContainer(new BlobPath())-->Line_13 $$ createRandomBlob(container, name, length)[ FD ]
Line_4 $$ final BlobContainer container = store.blobContainer(new BlobPath())-->Line_19 $$ createRandomBlob(container, name, length)[ FD ]
Line_36 $$ String newName = "bar-new"-->Line_39 $$ blobs = container.listBlobsByPrefix(newName)[ FD ]
Line_11 $$ String name = "foo-" + i + "-"-->Line_24 $$ byte[] data = createRandomBlob(container, name, length)[ FD ]
Line_15 $$ for (int i = 1; i < numberOfBarBlobs; i++) -->Line_17 $$ String name = "bar-" + i + "-"[ CD ]
Line_8 $$ Map<String, Long> generatedBlobs = new HashMap()-->Line_23 $$ generatedBlobs.put(name, (long) length)[ FD ]
Line_27 $$ for (Map.Entry<String, Long> generated : generatedBlobs.entrySet()) -->Line_29 $$ assertThat(generated.getKey(), blobMetaData, notNullValue())[ FD ]
Line_17 $$ String name = "bar-" + i + "-"-->Line_19 $$ createRandomBlob(container, name, length)[ FD ]
Line_9 $$ for (int i = 0; i < numberOfFooBlobs; i++) -->Line_11 $$ String name = "foo-" + i + "-"[ CD ]
Line_10 $$ int length = randomIntBetween(10, 100)-->Line_19 $$ createRandomBlob(container, name, length)[ FD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_40 $$ assertThat(blobs.size(), equalTo(1))[ CD ]
Line_8 $$ Map<String, Long> generatedBlobs = new HashMap()-->Line_27 $$ for (Map.Entry<String, Long> generated : generatedBlobs.entrySet()) [ FD ]
Line_27 $$ for (Map.Entry<String, Long> generated : generatedBlobs.entrySet()) -->Line_30 $$ assertThat(blobMetaData.name(), equalTo(generated.getKey()))[ FD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_39 $$ blobs = container.listBlobsByPrefix(newName)[ CD ]
Line_11 $$ String name = "foo-" + i + "-"-->Line_38 $$ assertThat(container.listBlobsByPrefix(name).size(), equalTo(0))[ FD ]
Line_10 $$ int length = randomIntBetween(10, 100)-->Line_42 $$ assertThat(data, equalTo(readBlobFully(container, newName, length)))[ FD ]
Line_2 $$ public void testMoveAndList() throws IOException -->Line_24 $$ byte[] data = createRandomBlob(container, name, length)[ CD ]
Line_22 $$ String name = "bar-0-"-->Line_38 $$ assertThat(container.listBlobsByPrefix(name).size(), equalTo(0))[ FD ]
