Line_10 $$ String fragment = tokenizer.nextToken()-->Line_17 $$ result.put(fragment, count)[ FD ]
Line_13 $$ count = Integer.valueOf(1)-->Line_15 $$ count = Integer.valueOf(count.intValue() + 1)[ FD ]
Line_2 $$ private Map getTokens(String sql) -->Line_7 $$ result.put("=", Integer.valueOf(StringHelper.countUnquoted(sql, '=')))[ FD ]
Line_3 $$ Map<String, Integer> result = new TreeMap<String, Integer>()-->Line_11 $$ Integer count = result.get(fragment)[ FD ]
Line_4 $$ if (sql == null) -->Line_5 $$ return result[ CD ]
Line_2 $$ private Map getTokens(String sql) -->Line_7 $$ result.put("=", Integer.valueOf(StringHelper.countUnquoted(sql, '=')))[ CD ]
Line_12 $$ if (count == null) -->Line_13 $$ count = Integer.valueOf(1)[ CD ]
Line_2 $$ private Map getTokens(String sql) -->Line_4 $$ if (sql == null) [ FD ]
Line_13 $$ count = Integer.valueOf(1)-->Line_17 $$ result.put(fragment, count)[ FD ]
Line_11 $$ Integer count = result.get(fragment)-->Line_15 $$ count = Integer.valueOf(count.intValue() + 1)[ FD ]
Line_2 $$ private Map getTokens(String sql) -->Line_4 $$ if (sql == null) [ CD ]
Line_8 $$ StringTokenizer tokenizer = new StringTokenizer(sql, "(),= ")-->Line_10 $$ String fragment = tokenizer.nextToken()[ FD ]
Line_11 $$ Integer count = result.get(fragment)-->Line_13 $$ count = Integer.valueOf(1)[ FD ]
Line_12 $$ if (count == null) -->Line_15 $$ count = Integer.valueOf(count.intValue() + 1)[ CD ]
Line_9 $$ while (tokenizer.hasMoreTokens()) -->Line_17 $$ result.put(fragment, count)[ CD ]
Line_10 $$ String fragment = tokenizer.nextToken()-->Line_11 $$ Integer count = result.get(fragment)[ FD ]
Line_2 $$ private Map getTokens(String sql) -->Line_3 $$ Map<String, Integer> result = new TreeMap<String, Integer>()[ CD ]
Line_2 $$ private Map getTokens(String sql) -->Line_8 $$ StringTokenizer tokenizer = new StringTokenizer(sql, "(),= ")[ CD ]
Line_15 $$ count = Integer.valueOf(count.intValue() + 1)-->Line_12 $$ if (count == null) [ FD ]
Line_3 $$ Map<String, Integer> result = new TreeMap<String, Integer>()-->Line_7 $$ result.put("=", Integer.valueOf(StringHelper.countUnquoted(sql, '=')))[ FD ]
Line_8 $$ StringTokenizer tokenizer = new StringTokenizer(sql, "(),= ")-->Line_9 $$ while (tokenizer.hasMoreTokens()) [ FD ]
Line_2 $$ private Map getTokens(String sql) -->Line_9 $$ while (tokenizer.hasMoreTokens()) [ CD ]
Line_9 $$ while (tokenizer.hasMoreTokens()) -->Line_12 $$ if (count == null) [ CD ]
Line_9 $$ while (tokenizer.hasMoreTokens()) -->Line_11 $$ Integer count = result.get(fragment)[ CD ]
Line_2 $$ private Map getTokens(String sql) -->Line_19 $$ return result[ CD ]
Line_15 $$ count = Integer.valueOf(count.intValue() + 1)-->Line_17 $$ result.put(fragment, count)[ FD ]
Line_9 $$ while (tokenizer.hasMoreTokens()) -->Line_10 $$ String fragment = tokenizer.nextToken()[ CD ]
Line_11 $$ Integer count = result.get(fragment)-->Line_12 $$ if (count == null) [ FD ]
Line_11 $$ Integer count = result.get(fragment)-->Line_17 $$ result.put(fragment, count)[ FD ]
Line_13 $$ count = Integer.valueOf(1)-->Line_12 $$ if (count == null) [ FD ]
Line_3 $$ Map<String, Integer> result = new TreeMap<String, Integer>()-->Line_17 $$ result.put(fragment, count)[ FD ]
