Line_3 $$ Map<String, String[]> results = extractPropertyResults(alias, (NativeQueryNonScalarRootReturn) rtnSource, pc, context)-->Line_6 $$ results = new HashMap<String, String[]>()[ FD ]
Line_2 $$ private static Map<String, String[]> extractPropertyResults(String alias, JaxbHbmNativeQueryReturnType rtnSource, PersistentClass pc, HbmLocalMetadataBuildingContext context) -->Line_8 $$ final String column = rtnSource.getReturnDiscriminator().getColumn()[ FD ]
Line_2 $$ private static Map<String, String[]> extractPropertyResults(String alias, JaxbHbmNativeQueryReturnType rtnSource, PersistentClass pc, HbmLocalMetadataBuildingContext context) -->Line_4 $$ if (rtnSource.getReturnDiscriminator() != null) [ CD ]
Line_2 $$ private static Map<String, String[]> extractPropertyResults(String alias, JaxbHbmNativeQueryReturnType rtnSource, PersistentClass pc, HbmLocalMetadataBuildingContext context) -->Line_3 $$ Map<String, String[]> results = extractPropertyResults(alias, (NativeQueryNonScalarRootReturn) rtnSource, pc, context)[ CD ]
Line_4 $$ if (rtnSource.getReturnDiscriminator() != null) -->Line_12 $$ results.put("class", new String[] [ CD ]
Line_3 $$ Map<String, String[]> results = extractPropertyResults(alias, (NativeQueryNonScalarRootReturn) rtnSource, pc, context)-->Line_5 $$ if (results == null) [ FD ]
Line_3 $$ Map<String, String[]> results = extractPropertyResults(alias, (NativeQueryNonScalarRootReturn) rtnSource, pc, context)-->Line_12 $$ results.put("class", new String[] [ FD ]
Line_2 $$ private static Map<String, String[]> extractPropertyResults(String alias, JaxbHbmNativeQueryReturnType rtnSource, PersistentClass pc, HbmLocalMetadataBuildingContext context) -->Line_3 $$ Map<String, String[]> results = extractPropertyResults(alias, (NativeQueryNonScalarRootReturn) rtnSource, pc, context)[ FD ]
Line_4 $$ if (rtnSource.getReturnDiscriminator() != null) -->Line_9 $$ if (column == null) [ CD ]
Line_6 $$ results = new HashMap<String, String[]>()-->Line_12 $$ results.put("class", new String[] [ FD ]
Line_2 $$ private static Map<String, String[]> extractPropertyResults(String alias, JaxbHbmNativeQueryReturnType rtnSource, PersistentClass pc, HbmLocalMetadataBuildingContext context) -->Line_10 $$ throw new MappingException(String.format(Locale.ENGLISH, "return-discriminator [%s (%s)] did not specify column", pc.getEntityName(), alias), context.getOrigin())[ FD ]
Line_5 $$ if (results == null) -->Line_6 $$ results = new HashMap<String, String[]>()[ CD ]
Line_2 $$ private static Map<String, String[]> extractPropertyResults(String alias, JaxbHbmNativeQueryReturnType rtnSource, PersistentClass pc, HbmLocalMetadataBuildingContext context) -->Line_4 $$ if (rtnSource.getReturnDiscriminator() != null) [ FD ]
Line_4 $$ if (rtnSource.getReturnDiscriminator() != null) -->Line_5 $$ if (results == null) [ CD ]
Line_2 $$ private static Map<String, String[]> extractPropertyResults(String alias, JaxbHbmNativeQueryReturnType rtnSource, PersistentClass pc, HbmLocalMetadataBuildingContext context) -->Line_14 $$ return results[ CD ]
Line_4 $$ if (rtnSource.getReturnDiscriminator() != null) -->Line_8 $$ final String column = rtnSource.getReturnDiscriminator().getColumn()[ CD ]
Line_8 $$ final String column = rtnSource.getReturnDiscriminator().getColumn()-->Line_9 $$ if (column == null) [ FD ]
