Line_2 $$ public void testRemoveDoesNotEnableAnyApp() -->Line_3 $$ FSLeafQueue leaf1 = queueManager.getLeafQueue("root.queue1", true)[ CD ]
Line_2 $$ public void testRemoveDoesNotEnableAnyApp() -->Line_7 $$ queueMaxApps.put("root.queue2", 1)[ CD ]
Line_3 $$ FSLeafQueue leaf1 = queueManager.getLeafQueue("root.queue1", true)-->Line_8 $$ FSAppAttempt app1 = addApp(leaf1, "user")[ FD ]
Line_2 $$ public void testRemoveDoesNotEnableAnyApp() -->Line_12 $$ assertEquals(1, leaf2.getRunnableAppSchedulables().size())[ CD ]
Line_2 $$ public void testRemoveDoesNotEnableAnyApp() -->Line_10 $$ addApp(leaf2, "user")[ CD ]
Line_2 $$ public void testRemoveDoesNotEnableAnyApp() -->Line_17 $$ assertEquals(1, leaf2.getNonRunnableAppSchedulables().size())[ CD ]
Line_2 $$ public void testRemoveDoesNotEnableAnyApp() -->Line_11 $$ assertEquals(1, leaf1.getRunnableAppSchedulables().size())[ CD ]
Line_2 $$ public void testRemoveDoesNotEnableAnyApp() -->Line_8 $$ FSAppAttempt app1 = addApp(leaf1, "user")[ CD ]
Line_2 $$ public void testRemoveDoesNotEnableAnyApp() -->Line_4 $$ FSLeafQueue leaf2 = queueManager.getLeafQueue("root.queue2", true)[ CD ]
Line_2 $$ public void testRemoveDoesNotEnableAnyApp() -->Line_14 $$ removeApp(app1)[ CD ]
Line_4 $$ FSLeafQueue leaf2 = queueManager.getLeafQueue("root.queue2", true)-->Line_10 $$ addApp(leaf2, "user")[ FD ]
Line_8 $$ FSAppAttempt app1 = addApp(leaf1, "user")-->Line_14 $$ removeApp(app1)[ FD ]
Line_3 $$ FSLeafQueue leaf1 = queueManager.getLeafQueue("root.queue1", true)-->Line_15 $$ assertEquals(0, leaf1.getRunnableAppSchedulables().size())[ FD ]
Line_2 $$ public void testRemoveDoesNotEnableAnyApp() -->Line_9 $$ addApp(leaf2, "user")[ CD ]
Line_2 $$ public void testRemoveDoesNotEnableAnyApp() -->Line_13 $$ assertEquals(1, leaf2.getNonRunnableAppSchedulables().size())[ CD ]
Line_4 $$ FSLeafQueue leaf2 = queueManager.getLeafQueue("root.queue2", true)-->Line_17 $$ assertEquals(1, leaf2.getNonRunnableAppSchedulables().size())[ FD ]
Line_4 $$ FSLeafQueue leaf2 = queueManager.getLeafQueue("root.queue2", true)-->Line_12 $$ assertEquals(1, leaf2.getRunnableAppSchedulables().size())[ FD ]
Line_2 $$ public void testRemoveDoesNotEnableAnyApp() -->Line_16 $$ assertEquals(1, leaf2.getRunnableAppSchedulables().size())[ CD ]
Line_2 $$ public void testRemoveDoesNotEnableAnyApp() -->Line_15 $$ assertEquals(0, leaf1.getRunnableAppSchedulables().size())[ CD ]
Line_3 $$ FSLeafQueue leaf1 = queueManager.getLeafQueue("root.queue1", true)-->Line_11 $$ assertEquals(1, leaf1.getRunnableAppSchedulables().size())[ FD ]
Line_2 $$ public void testRemoveDoesNotEnableAnyApp() -->Line_6 $$ queueMaxApps.put("root.queue1", 1)[ CD ]
Line_4 $$ FSLeafQueue leaf2 = queueManager.getLeafQueue("root.queue2", true)-->Line_13 $$ assertEquals(1, leaf2.getNonRunnableAppSchedulables().size())[ FD ]
Line_4 $$ FSLeafQueue leaf2 = queueManager.getLeafQueue("root.queue2", true)-->Line_9 $$ addApp(leaf2, "user")[ FD ]
Line_4 $$ FSLeafQueue leaf2 = queueManager.getLeafQueue("root.queue2", true)-->Line_16 $$ assertEquals(1, leaf2.getRunnableAppSchedulables().size())[ FD ]
Line_2 $$ public void testRemoveDoesNotEnableAnyApp() -->Line_5 $$ queueMaxApps.put("root", 2)[ CD ]
