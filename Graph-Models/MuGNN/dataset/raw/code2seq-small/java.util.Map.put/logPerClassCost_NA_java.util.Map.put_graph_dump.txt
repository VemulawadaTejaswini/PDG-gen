Line_2 $$ private void logPerClassCost(long cost, Map<String, Long> costMap) -->Line_3 $$ Class<?> superclass = getClass().getSuperclass()[ CD ]
Line_2 $$ private void logPerClassCost(long cost, Map<String, Long> costMap) -->Line_6 $$ costMap.put(superclass.getName(), newCost)[ CD ]
Line_3 $$ Class<?> superclass = getClass().getSuperclass()-->Line_6 $$ costMap.put(superclass.getName(), newCost)[ FD ]
Line_2 $$ private void logPerClassCost(long cost, Map<String, Long> costMap) -->Line_6 $$ costMap.put(superclass.getName(), newCost)[ FD ]
Line_5 $$ long newCost = oldCost == null ? cost : oldCost + cost-->Line_6 $$ costMap.put(superclass.getName(), newCost)[ FD ]
Line_2 $$ private void logPerClassCost(long cost, Map<String, Long> costMap) -->Line_4 $$ Long oldCost = costMap.get(superclass.getName())[ CD ]
Line_3 $$ Class<?> superclass = getClass().getSuperclass()-->Line_4 $$ Long oldCost = costMap.get(superclass.getName())[ FD ]
Line_2 $$ private void logPerClassCost(long cost, Map<String, Long> costMap) -->Line_4 $$ Long oldCost = costMap.get(superclass.getName())[ FD ]
Line_2 $$ private void logPerClassCost(long cost, Map<String, Long> costMap) -->Line_5 $$ long newCost = oldCost == null ? cost : oldCost + cost[ CD ]
