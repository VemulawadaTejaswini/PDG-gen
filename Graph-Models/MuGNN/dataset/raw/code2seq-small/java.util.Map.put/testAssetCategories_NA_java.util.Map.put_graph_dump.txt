Line_2 $$ public void testAssetCategories() throws Exception -->Line_11 $$ Assert.assertNotEquals(assetCategory.getCategoryId(), importedAssetCategoryId)[ CD ]
Line_2 $$ public void testAssetCategories() throws Exception -->Line_4 $$ AssetCategory assetCategory = AssetTestUtil.addCategory(group.getGroupId(), assetVocabulary.getVocabularyId())[ CD ]
Line_9 $$ long importedAssetCategoryId = GetterUtil.getLong(portletPreferences.getValue("queryValues0", null))-->Line_11 $$ Assert.assertNotEquals(assetCategory.getCategoryId(), importedAssetCategoryId)[ FD ]
Line_5 $$ Map<String, String[]> preferenceMap = new HashMap()-->Line_8 $$ PortletPreferences portletPreferences = getImportedPortletPreferences(preferenceMap)[ FD ]
Line_4 $$ AssetCategory assetCategory = AssetTestUtil.addCategory(group.getGroupId(), assetVocabulary.getVocabularyId())-->Line_7 $$ preferenceMap.put("queryValues0", new String[] [ FD ]
Line_12 $$ AssetCategory importedAssetCategory = AssetCategoryLocalServiceUtil.fetchAssetCategory(importedAssetCategoryId)-->Line_14 $$ Assert.assertEquals(assetCategory.getUuid(), importedAssetCategory.getUuid())[ FD ]
Line_8 $$ PortletPreferences portletPreferences = getImportedPortletPreferences(preferenceMap)-->Line_9 $$ long importedAssetCategoryId = GetterUtil.getLong(portletPreferences.getValue("queryValues0", null))[ FD ]
Line_5 $$ Map<String, String[]> preferenceMap = new HashMap()-->Line_7 $$ preferenceMap.put("queryValues0", new String[] [ FD ]
Line_2 $$ public void testAssetCategories() throws Exception -->Line_3 $$ AssetVocabulary assetVocabulary = AssetTestUtil.addVocabulary(group.getGroupId())[ CD ]
Line_2 $$ public void testAssetCategories() throws Exception -->Line_12 $$ AssetCategory importedAssetCategory = AssetCategoryLocalServiceUtil.fetchAssetCategory(importedAssetCategoryId)[ CD ]
Line_5 $$ Map<String, String[]> preferenceMap = new HashMap()-->Line_6 $$ preferenceMap.put("queryName0", new String[] [ FD ]
Line_9 $$ long importedAssetCategoryId = GetterUtil.getLong(portletPreferences.getValue("queryValues0", null))-->Line_12 $$ AssetCategory importedAssetCategory = AssetCategoryLocalServiceUtil.fetchAssetCategory(importedAssetCategoryId)[ FD ]
Line_2 $$ public void testAssetCategories() throws Exception -->Line_6 $$ preferenceMap.put("queryName0", new String[] [ CD ]
Line_4 $$ AssetCategory assetCategory = AssetTestUtil.addCategory(group.getGroupId(), assetVocabulary.getVocabularyId())-->Line_14 $$ Assert.assertEquals(assetCategory.getUuid(), importedAssetCategory.getUuid())[ FD ]
Line_2 $$ public void testAssetCategories() throws Exception -->Line_9 $$ long importedAssetCategoryId = GetterUtil.getLong(portletPreferences.getValue("queryValues0", null))[ CD ]
Line_9 $$ long importedAssetCategoryId = GetterUtil.getLong(portletPreferences.getValue("queryValues0", null))-->Line_10 $$ Assert.assertNotEquals(importedAssetCategoryId, 0L)[ FD ]
Line_2 $$ public void testAssetCategories() throws Exception -->Line_14 $$ Assert.assertEquals(assetCategory.getUuid(), importedAssetCategory.getUuid())[ CD ]
Line_2 $$ public void testAssetCategories() throws Exception -->Line_10 $$ Assert.assertNotEquals(importedAssetCategoryId, 0L)[ CD ]
Line_4 $$ AssetCategory assetCategory = AssetTestUtil.addCategory(group.getGroupId(), assetVocabulary.getVocabularyId())-->Line_11 $$ Assert.assertNotEquals(assetCategory.getCategoryId(), importedAssetCategoryId)[ FD ]
Line_12 $$ AssetCategory importedAssetCategory = AssetCategoryLocalServiceUtil.fetchAssetCategory(importedAssetCategoryId)-->Line_13 $$ Assert.assertNotNull(importedAssetCategory)[ FD ]
Line_2 $$ public void testAssetCategories() throws Exception -->Line_5 $$ Map<String, String[]> preferenceMap = new HashMap()[ CD ]
Line_2 $$ public void testAssetCategories() throws Exception -->Line_8 $$ PortletPreferences portletPreferences = getImportedPortletPreferences(preferenceMap)[ CD ]
Line_2 $$ public void testAssetCategories() throws Exception -->Line_7 $$ preferenceMap.put("queryValues0", new String[] [ CD ]
Line_2 $$ public void testAssetCategories() throws Exception -->Line_13 $$ Assert.assertNotNull(importedAssetCategory)[ CD ]
Line_3 $$ AssetVocabulary assetVocabulary = AssetTestUtil.addVocabulary(group.getGroupId())-->Line_4 $$ AssetCategory assetCategory = AssetTestUtil.addCategory(group.getGroupId(), assetVocabulary.getVocabularyId())[ FD ]
