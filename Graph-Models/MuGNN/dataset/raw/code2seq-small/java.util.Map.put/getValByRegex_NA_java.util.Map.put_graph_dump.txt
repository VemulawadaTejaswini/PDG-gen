Line_5 $$ Matcher m-->Line_8 $$ m = p.matcher((String) item.getKey())[ FD ]
Line_7 $$ if (item.getKey() instanceof String && item.getValue() instanceof String) -->Line_8 $$ m = p.matcher((String) item.getKey())[ CD ]
Line_3 $$ Pattern p = Pattern.compile(regex)-->Line_8 $$ m = p.matcher((String) item.getKey())[ FD ]
Line_6 $$ for (Map.Entry<Object, Object> item : getProps().entrySet()) -->Line_8 $$ m = p.matcher((String) item.getKey())[ FD ]
Line_8 $$ m = p.matcher((String) item.getKey())-->Line_9 $$ if (m.find()) [ FD ]
Line_7 $$ if (item.getKey() instanceof String && item.getValue() instanceof String) -->Line_9 $$ if (m.find()) [ CD ]
Line_2 $$ public Map<String, String> getValByRegex(String regex) -->Line_3 $$ Pattern p = Pattern.compile(regex)[ FD ]
Line_6 $$ for (Map.Entry<Object, Object> item : getProps().entrySet()) -->Line_7 $$ if (item.getKey() instanceof String && item.getValue() instanceof String) [ FD ]
Line_2 $$ public Map<String, String> getValByRegex(String regex) -->Line_4 $$ Map<String, String> result = new HashMap<String, String>()[ CD ]
Line_4 $$ Map<String, String> result = new HashMap<String, String>()-->Line_10 $$ result.put((String) item.getKey(), substituteVars(getProps().getProperty((String) item.getKey())))[ FD ]
Line_6 $$ for (Map.Entry<Object, Object> item : getProps().entrySet()) -->Line_10 $$ result.put((String) item.getKey(), substituteVars(getProps().getProperty((String) item.getKey())))[ FD ]
Line_9 $$ if (m.find()) -->Line_10 $$ result.put((String) item.getKey(), substituteVars(getProps().getProperty((String) item.getKey())))[ CD ]
Line_2 $$ public Map<String, String> getValByRegex(String regex) -->Line_3 $$ Pattern p = Pattern.compile(regex)[ CD ]
Line_2 $$ public Map<String, String> getValByRegex(String regex) -->Line_5 $$ Matcher m[ CD ]
Line_2 $$ public Map<String, String> getValByRegex(String regex) -->Line_14 $$ return result[ CD ]
Line_5 $$ Matcher m-->Line_9 $$ if (m.find()) [ FD ]
