Line_4 $$ for (Integer value : values) -->Line_5 $$ String key = String.format("key_%d", value)[ FD ]
Line_9 $$ for (Map.Entry<String, Integer> entry : added.entrySet()) -->Line_10 $$ assertThat(cache.get(entry.getKey()), equalTo(entry.getValue()))[ FD ]
Line_3 $$ Map<String, Integer> added = new LinkedHashMap<String, Integer>()-->Line_13 $$ for (Map.Entry<String, Integer> entry : added.entrySet()) [ FD ]
Line_3 $$ Map<String, Integer> added = new LinkedHashMap<String, Integer>()-->Line_7 $$ added.put(String.format("key_%d", value), value)[ FD ]
Line_2 $$ private Map<String, Integer> checkAdds(Iterable<Integer> values) -->Line_12 $$ cache.reset()[ CD ]
Line_5 $$ String key = String.format("key_%d", value)-->Line_6 $$ cache.put(key, value)[ FD ]
Line_2 $$ private Map<String, Integer> checkAdds(Iterable<Integer> values) -->Line_16 $$ return added[ CD ]
Line_4 $$ for (Integer value : values) -->Line_6 $$ cache.put(key, value)[ FD ]
Line_4 $$ for (Integer value : values) -->Line_7 $$ added.put(String.format("key_%d", value), value)[ FD ]
Line_9 $$ for (Map.Entry<String, Integer> entry : added.entrySet()) -->Line_14 $$ assertThat(cache.get(entry.getKey()), equalTo(entry.getValue()))[ FD ]
Line_3 $$ Map<String, Integer> added = new LinkedHashMap<String, Integer>()-->Line_9 $$ for (Map.Entry<String, Integer> entry : added.entrySet()) [ FD ]
Line_2 $$ private Map<String, Integer> checkAdds(Iterable<Integer> values) -->Line_3 $$ Map<String, Integer> added = new LinkedHashMap<String, Integer>()[ CD ]
