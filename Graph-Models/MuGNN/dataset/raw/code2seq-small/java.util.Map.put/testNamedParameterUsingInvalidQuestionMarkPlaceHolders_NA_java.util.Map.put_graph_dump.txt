Line_4 $$ class CustomerQuery extends MappingSqlQuery<Customer> -->Line_20 $$ return executeByNamedParam(params)[ CD ]
Line_12 $$ Customer cust = new Customer()-->Line_13 $$ cust.setId(rs.getInt(COLUMN_NAMES[0]))[ FD ]
Line_4 $$ class CustomerQuery extends MappingSqlQuery<Customer> -->Line_19 $$ params.put("id1", id1)[ CD ]
Line_4 $$ class CustomerQuery extends MappingSqlQuery<Customer> -->Line_13 $$ cust.setId(rs.getInt(COLUMN_NAMES[0]))[ CD ]
Line_18 $$ Map<String, Integer> params = new HashMap<String, Integer>()-->Line_19 $$ params.put("id1", id1)[ FD ]
Line_4 $$ class CustomerQuery extends MappingSqlQuery<Customer> -->Line_19 $$ params.put("id1", id1)[ FD ]
Line_4 $$ class CustomerQuery extends MappingSqlQuery<Customer> -->Line_13 $$ cust.setId(rs.getInt(COLUMN_NAMES[0]))[ FD ]
Line_12 $$ Customer cust = new Customer()-->Line_14 $$ cust.setForename(rs.getString(COLUMN_NAMES[1]))[ FD ]
Line_2 $$ public void testNamedParameterUsingInvalidQuestionMarkPlaceHolders() throws SQLException -->Line_24 $$ thrown.expect(InvalidDataAccessApiUsageException.class)[ CD ]
Line_4 $$ class CustomerQuery extends MappingSqlQuery<Customer> -->Line_18 $$ Map<String, Integer> params = new HashMap<String, Integer>()[ CD ]
Line_4 $$ class CustomerQuery extends MappingSqlQuery<Customer> -->Line_14 $$ cust.setForename(rs.getString(COLUMN_NAMES[1]))[ CD ]
Line_4 $$ class CustomerQuery extends MappingSqlQuery<Customer> -->Line_15 $$ return cust[ CD ]
Line_2 $$ public void testNamedParameterUsingInvalidQuestionMarkPlaceHolders() throws SQLException -->Line_25 $$ query.findCustomers(1)[ CD ]
Line_2 $$ public void testNamedParameterUsingInvalidQuestionMarkPlaceHolders() throws SQLException -->Line_3 $$ given(connection.prepareStatement(SELECT_ID_FORENAME_WHERE_ID_REUSED_1, ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY)).willReturn(preparedStatement)[ CD ]
Line_4 $$ class CustomerQuery extends MappingSqlQuery<Customer> -->Line_14 $$ cust.setForename(rs.getString(COLUMN_NAMES[1]))[ FD ]
Line_4 $$ class CustomerQuery extends MappingSqlQuery<Customer> -->Line_12 $$ Customer cust = new Customer()[ CD ]
Line_18 $$ Map<String, Integer> params = new HashMap<String, Integer>()-->Line_20 $$ return executeByNamedParam(params)[ FD ]
