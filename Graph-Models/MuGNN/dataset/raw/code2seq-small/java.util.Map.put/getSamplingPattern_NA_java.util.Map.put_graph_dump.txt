Line_2 $$ public static List<Integer> getSamplingPattern(int samplingLevel) -->Line_3 $$ List<Integer> pattern = samplePatternCache.get(samplingLevel)[ CD ]
Line_2 $$ public static List<Integer> getSamplingPattern(int samplingLevel) -->Line_3 $$ List<Integer> pattern = samplePatternCache.get(samplingLevel)[ FD ]
Line_10 $$ for (int i = 1; i < samplingLevel; i += 2) odds[i / 2] = i-->Line_11 $$ for (int i = 0; i < samplingLevel; i += 2) evens[i / 2] = i[ FD ]
Line_10 $$ for (int i = 1; i < samplingLevel; i += 2) odds[i / 2] = i-->Line_11 $$ evens[i / 2] = i[ FD ]
Line_2 $$ public static List<Integer> getSamplingPattern(int samplingLevel) -->Line_16 $$ samplePatternCache.put(samplingLevel, startIndices)[ FD ]
Line_6 $$ if (samplingLevel <= 1)-->Line_7 $$ return Arrays.asList(0)[ CD ]
Line_2 $$ public static List<Integer> getSamplingPattern(int samplingLevel) -->Line_11 $$ for (int i = 0; i < samplingLevel; i += 2) evens[i / 2] = i[ CD ]
Line_2 $$ public static List<Integer> getSamplingPattern(int samplingLevel) -->Line_4 $$ if (pattern != null)[ CD ]
Line_13 $$ List<Integer> startIndices = new ArrayList(samplingLevel)-->Line_16 $$ samplePatternCache.put(samplingLevel, startIndices)[ FD ]
Line_2 $$ public static List<Integer> getSamplingPattern(int samplingLevel) -->Line_16 $$ samplePatternCache.put(samplingLevel, startIndices)[ CD ]
Line_2 $$ public static List<Integer> getSamplingPattern(int samplingLevel) -->Line_17 $$ return startIndices[ CD ]
Line_2 $$ public static List<Integer> getSamplingPattern(int samplingLevel) -->Line_10 $$ for (int i = 1; i < samplingLevel; i += 2) odds[i / 2] = i[ CD ]
Line_2 $$ public static List<Integer> getSamplingPattern(int samplingLevel) -->Line_13 $$ List<Integer> startIndices = new ArrayList(samplingLevel)[ CD ]
Line_13 $$ List<Integer> startIndices = new ArrayList(samplingLevel)-->Line_15 $$ startIndices.add(evens[index])[ FD ]
Line_2 $$ public static List<Integer> getSamplingPattern(int samplingLevel) -->Line_8 $$ int[] odds = new int[samplingLevel / 2][ CD ]
Line_2 $$ public static List<Integer> getSamplingPattern(int samplingLevel) -->Line_11 $$ for (int i = 0; i < samplingLevel; i += 2) evens[i / 2] = i[ FD ]
Line_2 $$ public static List<Integer> getSamplingPattern(int samplingLevel) -->Line_10 $$ for (int i = 1; i < samplingLevel; i += 2) odds[i / 2] = i[ FD ]
Line_2 $$ public static List<Integer> getSamplingPattern(int samplingLevel) -->Line_9 $$ int[] evens = new int[samplingLevel / 2][ CD ]
Line_2 $$ public static List<Integer> getSamplingPattern(int samplingLevel) -->Line_12 $$ List<Integer> ordering = getSamplingPattern(samplingLevel / 2)[ CD ]
Line_2 $$ public static List<Integer> getSamplingPattern(int samplingLevel) -->Line_6 $$ if (samplingLevel <= 1)[ CD ]
Line_13 $$ List<Integer> startIndices = new ArrayList(samplingLevel)-->Line_14 $$ startIndices.add(odds[index])[ FD ]
Line_2 $$ public static List<Integer> getSamplingPattern(int samplingLevel) -->Line_6 $$ if (samplingLevel <= 1)[ FD ]
Line_3 $$ List<Integer> pattern = samplePatternCache.get(samplingLevel)-->Line_4 $$ if (pattern != null)[ FD ]
Line_4 $$ if (pattern != null)-->Line_5 $$ return pattern[ CD ]
