Line_3 $$ if (scoreDocMap.containsKey(docID)) -->Line_6 $$ if (scoreDocMap.size() <= num) [ CD ]
Line_2 $$ public void collect(int docID, CharSequence key, CharSequence context, float score) throws IOException -->Line_7 $$ scoreDocMap.put(docID, new SuggestDoc(docBase + docID, key, context, score))[ FD ]
Line_3 $$ if (scoreDocMap.containsKey(docID)) -->Line_4 $$ SuggestDoc suggestDoc = scoreDocMap.get(docID)[ CD ]
Line_3 $$ if (scoreDocMap.containsKey(docID)) -->Line_5 $$ suggestDoc.add(key, context, score)[ CD ]
Line_6 $$ if (scoreDocMap.size() <= num) -->Line_7 $$ scoreDocMap.put(docID, new SuggestDoc(docBase + docID, key, context, score))[ CD ]
Line_2 $$ public void collect(int docID, CharSequence key, CharSequence context, float score) throws IOException -->Line_5 $$ suggestDoc.add(key, context, score)[ FD ]
Line_4 $$ SuggestDoc suggestDoc = scoreDocMap.get(docID)-->Line_5 $$ suggestDoc.add(key, context, score)[ FD ]
Line_2 $$ public void collect(int docID, CharSequence key, CharSequence context, float score) throws IOException -->Line_4 $$ SuggestDoc suggestDoc = scoreDocMap.get(docID)[ FD ]
Line_2 $$ public void collect(int docID, CharSequence key, CharSequence context, float score) throws IOException -->Line_3 $$ if (scoreDocMap.containsKey(docID)) [ FD ]
Line_2 $$ public void collect(int docID, CharSequence key, CharSequence context, float score) throws IOException -->Line_3 $$ if (scoreDocMap.containsKey(docID)) [ CD ]
