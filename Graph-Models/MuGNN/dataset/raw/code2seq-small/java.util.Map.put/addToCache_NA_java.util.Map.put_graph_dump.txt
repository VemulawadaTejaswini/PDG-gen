Line_8 $$ ArrayList<FilteringNode> nodes = new ArrayList<FilteringNode>(delegates.length)-->Line_21 $$ if (nodes.isEmpty()) [ FD ]
Line_2 $$ private void addToCache(FilteringNode node, boolean duplicate) -->Line_3 $$ Object delegate = node.getDelegate()[ FD ]
Line_12 $$ FilteringNode n = new FilteringNode(node, d)-->Line_14 $$ nodes.add(n)[ FD ]
Line_2 $$ private void addToCache(FilteringNode node, boolean duplicate) -->Line_6 $$ myLeaves.add(node)[ FD ]
Line_8 $$ ArrayList<FilteringNode> nodes = new ArrayList<FilteringNode>(delegates.length)-->Line_14 $$ nodes.add(n)[ FD ]
Line_12 $$ FilteringNode n = new FilteringNode(node, d)-->Line_19 $$ addToCache(n, false)[ FD ]
Line_2 $$ private void addToCache(FilteringNode node, boolean duplicate) -->Line_17 $$ myNodesCache.put(node, nodes)[ FD ]
Line_9 $$ for (Object d : delegates) -->Line_13 $$ myDescriptors2Nodes.put(d, n)[ FD ]
Line_11 $$ if (!isDuplicate) -->Line_13 $$ myDescriptors2Nodes.put(d, n)[ CD ]
Line_2 $$ private void addToCache(FilteringNode node, boolean duplicate) -->Line_4 $$ Object[] delegates = myBaseStructure.getChildElements(delegate)[ CD ]
Line_5 $$ if (delegates == null || delegates.length == 0 || duplicate) -->Line_17 $$ myNodesCache.put(node, nodes)[ CD ]
Line_5 $$ if (delegates == null || delegates.length == 0 || duplicate) -->Line_6 $$ myLeaves.add(node)[ CD ]
Line_2 $$ private void addToCache(FilteringNode node, boolean duplicate) -->Line_5 $$ if (delegates == null || delegates.length == 0 || duplicate) [ CD ]
Line_5 $$ if (delegates == null || delegates.length == 0 || duplicate) -->Line_21 $$ if (nodes.isEmpty()) [ CD ]
Line_3 $$ Object delegate = node.getDelegate()-->Line_4 $$ Object[] delegates = myBaseStructure.getChildElements(delegate)[ FD ]
Line_11 $$ if (!isDuplicate) -->Line_12 $$ FilteringNode n = new FilteringNode(node, d)[ CD ]
Line_12 $$ FilteringNode n = new FilteringNode(node, d)-->Line_13 $$ myDescriptors2Nodes.put(d, n)[ FD ]
Line_8 $$ ArrayList<FilteringNode> nodes = new ArrayList<FilteringNode>(delegates.length)-->Line_17 $$ myNodesCache.put(node, nodes)[ FD ]
Line_5 $$ if (delegates == null || delegates.length == 0 || duplicate) -->Line_8 $$ ArrayList<FilteringNode> nodes = new ArrayList<FilteringNode>(delegates.length)[ CD ]
Line_11 $$ if (!isDuplicate) -->Line_14 $$ nodes.add(n)[ CD ]
Line_10 $$ boolean isDuplicate = myDescriptors2Nodes.containsKey(d)-->Line_11 $$ if (!isDuplicate) [ FD ]
Line_9 $$ for (Object d : delegates) -->Line_10 $$ boolean isDuplicate = myDescriptors2Nodes.containsKey(d)[ FD ]
Line_2 $$ private void addToCache(FilteringNode node, boolean duplicate) -->Line_22 $$ myLeaves.add(node)[ FD ]
Line_2 $$ private void addToCache(FilteringNode node, boolean duplicate) -->Line_5 $$ if (delegates == null || delegates.length == 0 || duplicate) [ FD ]
Line_21 $$ if (nodes.isEmpty()) -->Line_22 $$ myLeaves.add(node)[ CD ]
Line_2 $$ private void addToCache(FilteringNode node, boolean duplicate) -->Line_3 $$ Object delegate = node.getDelegate()[ CD ]
