Line_2 $$ private Map<String, JdkComboBoxItem> collectComboBoxItem() -->Line_14 $$ if (myProject != null && !myProject.isDisposed()) [ CD ]
Line_2 $$ private Map<String, JdkComboBoxItem> collectComboBoxItem() -->Line_3 $$ Map<String, JdkComboBoxItem> result = new LinkedHashMap<String, JdkComboBoxItem>()[ CD ]
Line_3 $$ Map<String, JdkComboBoxItem> result = new LinkedHashMap<String, JdkComboBoxItem>()-->Line_7 $$ result.put(name, new JdkComboBoxItem(name, name, comment, ((SdkType) projectJdk.getSdkType()).sdkHasValidPath(projectJdk)))[ FD ]
Line_10 $$ final Sdk internalJdk = JavaAwareProjectJdkTableImpl.getInstanceEx().getInternalJdk()-->Line_11 $$ assert internalJdk.getHomePath() != null[ FD ]
Line_9 $$ if (suggestJre) -->Line_10 $$ final Sdk internalJdk = JavaAwareProjectJdkTableImpl.getInstanceEx().getInternalJdk()[ CD ]
Line_2 $$ private Map<String, JdkComboBoxItem> collectComboBoxItem() -->Line_9 $$ if (suggestJre) [ CD ]
Line_9 $$ if (suggestJre) -->Line_12 $$ result.put(ExternalSystemJdkUtil.USE_INTERNAL_JAVA, new JdkComboBoxItem(ExternalSystemJdkUtil.USE_INTERNAL_JAVA, ExternalSystemBundle.message("external.system.java.internal.jre"), buildComment(internalJdk), true))[ CD ]
Line_3 $$ Map<String, JdkComboBoxItem> result = new LinkedHashMap<String, JdkComboBoxItem>()-->Line_16 $$ result.put(ExternalSystemJdkUtil.USE_PROJECT_JDK, new JdkComboBoxItem(ExternalSystemJdkUtil.USE_PROJECT_JDK, "Use Project JDK", projectSdk == null ? "not defined yet" : buildComment(projectSdk), projectSdk != null))[ FD ]
Line_4 $$ for (Sdk projectJdk : ProjectJdkTable.getInstance().getSdksOfType(JavaSdk.getInstance())) -->Line_7 $$ result.put(name, new JdkComboBoxItem(name, name, comment, ((SdkType) projectJdk.getSdkType()).sdkHasValidPath(projectJdk)))[ FD ]
Line_10 $$ final Sdk internalJdk = JavaAwareProjectJdkTableImpl.getInstanceEx().getInternalJdk()-->Line_12 $$ result.put(ExternalSystemJdkUtil.USE_INTERNAL_JAVA, new JdkComboBoxItem(ExternalSystemJdkUtil.USE_INTERNAL_JAVA, ExternalSystemBundle.message("external.system.java.internal.jre"), buildComment(internalJdk), true))[ FD ]
Line_2 $$ private Map<String, JdkComboBoxItem> collectComboBoxItem() -->Line_20 $$ result.put(ExternalSystemJdkUtil.USE_JAVA_HOME, new JdkComboBoxItem(ExternalSystemJdkUtil.USE_JAVA_HOME, javaHomeLabel, javaHomePath == null ? "not defined yet" : truncateLongPath(javaHomePath), javaHomePath != null))[ CD ]
Line_14 $$ if (myProject != null && !myProject.isDisposed()) -->Line_15 $$ final Sdk projectSdk = ProjectRootManager.getInstance(myProject).getProjectSdk()[ CD ]
Line_4 $$ for (Sdk projectJdk : ProjectJdkTable.getInstance().getSdksOfType(JavaSdk.getInstance())) -->Line_5 $$ String name = projectJdk.getName()[ FD ]
Line_15 $$ final Sdk projectSdk = ProjectRootManager.getInstance(myProject).getProjectSdk()-->Line_16 $$ result.put(ExternalSystemJdkUtil.USE_PROJECT_JDK, new JdkComboBoxItem(ExternalSystemJdkUtil.USE_PROJECT_JDK, "Use Project JDK", projectSdk == null ? "not defined yet" : buildComment(projectSdk), projectSdk != null))[ FD ]
Line_2 $$ private Map<String, JdkComboBoxItem> collectComboBoxItem() -->Line_18 $$ String javaHomePath = System.getenv("JAVA_HOME")[ CD ]
Line_18 $$ String javaHomePath = System.getenv("JAVA_HOME")-->Line_20 $$ result.put(ExternalSystemJdkUtil.USE_JAVA_HOME, new JdkComboBoxItem(ExternalSystemJdkUtil.USE_JAVA_HOME, javaHomeLabel, javaHomePath == null ? "not defined yet" : truncateLongPath(javaHomePath), javaHomePath != null))[ FD ]
Line_14 $$ if (myProject != null && !myProject.isDisposed()) -->Line_16 $$ result.put(ExternalSystemJdkUtil.USE_PROJECT_JDK, new JdkComboBoxItem(ExternalSystemJdkUtil.USE_PROJECT_JDK, "Use Project JDK", projectSdk == null ? "not defined yet" : buildComment(projectSdk), projectSdk != null))[ CD ]
Line_2 $$ private Map<String, JdkComboBoxItem> collectComboBoxItem() -->Line_19 $$ String javaHomeLabel = ExternalSystemBundle.message("external.system.java.home.env")[ CD ]
Line_2 $$ private Map<String, JdkComboBoxItem> collectComboBoxItem() -->Line_21 $$ return result[ CD ]
Line_5 $$ String name = projectJdk.getName()-->Line_7 $$ result.put(name, new JdkComboBoxItem(name, name, comment, ((SdkType) projectJdk.getSdkType()).sdkHasValidPath(projectJdk)))[ FD ]
Line_4 $$ for (Sdk projectJdk : ProjectJdkTable.getInstance().getSdksOfType(JavaSdk.getInstance())) -->Line_6 $$ String comment = buildComment(projectJdk)[ FD ]
Line_3 $$ Map<String, JdkComboBoxItem> result = new LinkedHashMap<String, JdkComboBoxItem>()-->Line_20 $$ result.put(ExternalSystemJdkUtil.USE_JAVA_HOME, new JdkComboBoxItem(ExternalSystemJdkUtil.USE_JAVA_HOME, javaHomeLabel, javaHomePath == null ? "not defined yet" : truncateLongPath(javaHomePath), javaHomePath != null))[ FD ]
Line_3 $$ Map<String, JdkComboBoxItem> result = new LinkedHashMap<String, JdkComboBoxItem>()-->Line_12 $$ result.put(ExternalSystemJdkUtil.USE_INTERNAL_JAVA, new JdkComboBoxItem(ExternalSystemJdkUtil.USE_INTERNAL_JAVA, ExternalSystemBundle.message("external.system.java.internal.jre"), buildComment(internalJdk), true))[ FD ]
