Line_3 $$ class CustomerQuery extends MappingSqlQuery<Customer> -->Line_18 $$ params.put("id", id)[ FD ]
Line_3 $$ class CustomerQuery extends MappingSqlQuery<Customer> -->Line_13 $$ cust.setForename(rs.getString(COLUMN_NAMES[1]))[ FD ]
Line_3 $$ class CustomerQuery extends MappingSqlQuery<Customer> -->Line_19 $$ return executeByNamedParam(params).get(0)[ CD ]
Line_3 $$ class CustomerQuery extends MappingSqlQuery<Customer> -->Line_12 $$ cust.setId(rs.getInt(COLUMN_NAMES[0]))[ CD ]
Line_3 $$ class CustomerQuery extends MappingSqlQuery<Customer> -->Line_12 $$ cust.setId(rs.getInt(COLUMN_NAMES[0]))[ FD ]
Line_17 $$ Map<String, Integer> params = new HashMap<String, Integer>()-->Line_19 $$ return executeByNamedParam(params).get(0)[ FD ]
Line_3 $$ class CustomerQuery extends MappingSqlQuery<Customer> -->Line_13 $$ cust.setForename(rs.getString(COLUMN_NAMES[1]))[ CD ]
Line_11 $$ Customer cust = new Customer()-->Line_13 $$ cust.setForename(rs.getString(COLUMN_NAMES[1]))[ FD ]
Line_17 $$ Map<String, Integer> params = new HashMap<String, Integer>()-->Line_18 $$ params.put("id", id)[ FD ]
Line_2 $$ public void testUnnamedParameterDeclarationWithNamedParameterQuery() throws SQLException -->Line_23 $$ thrown.expect(InvalidDataAccessApiUsageException.class)[ CD ]
Line_3 $$ class CustomerQuery extends MappingSqlQuery<Customer> -->Line_11 $$ Customer cust = new Customer()[ CD ]
Line_3 $$ class CustomerQuery extends MappingSqlQuery<Customer> -->Line_14 $$ return cust[ CD ]
Line_2 $$ public void testUnnamedParameterDeclarationWithNamedParameterQuery() throws SQLException -->Line_24 $$ query.findCustomer(1)[ CD ]
Line_11 $$ Customer cust = new Customer()-->Line_12 $$ cust.setId(rs.getInt(COLUMN_NAMES[0]))[ FD ]
Line_3 $$ class CustomerQuery extends MappingSqlQuery<Customer> -->Line_18 $$ params.put("id", id)[ CD ]
Line_3 $$ class CustomerQuery extends MappingSqlQuery<Customer> -->Line_17 $$ Map<String, Integer> params = new HashMap<String, Integer>()[ CD ]
