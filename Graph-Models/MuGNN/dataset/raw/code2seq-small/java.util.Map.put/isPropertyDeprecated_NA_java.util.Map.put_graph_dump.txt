Line_9 $$ for (PsiMethod method : methods) -->Line_10 $$ if (method.isDeprecated() && PropertyUtil.isSimplePropertySetter(method)) [ FD ]
Line_4 $$ if (deprecated == null) -->Line_15 $$ myClass2DeprecatedProperties.put(aClass.getName(), deprecated)[ CD ]
Line_10 $$ if (method.isDeprecated() && PropertyUtil.isSimplePropertySetter(method)) -->Line_11 $$ deprecated.add(PropertyUtil.getPropertyNameBySetter(method))[ CD ]
Line_6 $$ PsiClass componentClass = JavaPsiFacade.getInstance(module.getProject()).findClass(aClass.getName(), module.getModuleWithDependenciesAndLibrariesScope(true))-->Line_8 $$ PsiMethod[] methods = componentClass.getAllMethods()[ FD ]
Line_2 $$ public boolean isPropertyDeprecated(final Module module, final Class aClass, final String propertyName) -->Line_6 $$ PsiClass componentClass = JavaPsiFacade.getInstance(module.getProject()).findClass(aClass.getName(), module.getModuleWithDependenciesAndLibrariesScope(true))[ FD ]
Line_4 $$ if (deprecated == null) -->Line_7 $$ if (componentClass != null) [ CD ]
Line_2 $$ public boolean isPropertyDeprecated(final Module module, final Class aClass, final String propertyName) -->Line_17 $$ return deprecated.contains(propertyName)[ CD ]
Line_6 $$ PsiClass componentClass = JavaPsiFacade.getInstance(module.getProject()).findClass(aClass.getName(), module.getModuleWithDependenciesAndLibrariesScope(true))-->Line_7 $$ if (componentClass != null) [ FD ]
Line_5 $$ deprecated = new HashSet<String>()-->Line_11 $$ deprecated.add(PropertyUtil.getPropertyNameBySetter(method))[ FD ]
Line_5 $$ deprecated = new HashSet<String>()-->Line_15 $$ myClass2DeprecatedProperties.put(aClass.getName(), deprecated)[ FD ]
Line_3 $$ Set<String> deprecated = myClass2DeprecatedProperties.get(aClass.getName())-->Line_15 $$ myClass2DeprecatedProperties.put(aClass.getName(), deprecated)[ FD ]
Line_4 $$ if (deprecated == null) -->Line_6 $$ PsiClass componentClass = JavaPsiFacade.getInstance(module.getProject()).findClass(aClass.getName(), module.getModuleWithDependenciesAndLibrariesScope(true))[ CD ]
Line_3 $$ Set<String> deprecated = myClass2DeprecatedProperties.get(aClass.getName())-->Line_4 $$ if (deprecated == null) [ FD ]
Line_9 $$ for (PsiMethod method : methods) -->Line_11 $$ deprecated.add(PropertyUtil.getPropertyNameBySetter(method))[ FD ]
Line_4 $$ if (deprecated == null) -->Line_5 $$ deprecated = new HashSet<String>()[ CD ]
Line_7 $$ if (componentClass != null) -->Line_8 $$ PsiMethod[] methods = componentClass.getAllMethods()[ CD ]
Line_2 $$ public boolean isPropertyDeprecated(final Module module, final Class aClass, final String propertyName) -->Line_3 $$ Set<String> deprecated = myClass2DeprecatedProperties.get(aClass.getName())[ FD ]
Line_5 $$ deprecated = new HashSet<String>()-->Line_17 $$ return deprecated.contains(propertyName)[ FD ]
Line_2 $$ public boolean isPropertyDeprecated(final Module module, final Class aClass, final String propertyName) -->Line_15 $$ myClass2DeprecatedProperties.put(aClass.getName(), deprecated)[ FD ]
Line_3 $$ Set<String> deprecated = myClass2DeprecatedProperties.get(aClass.getName())-->Line_5 $$ deprecated = new HashSet<String>()[ FD ]
Line_2 $$ public boolean isPropertyDeprecated(final Module module, final Class aClass, final String propertyName) -->Line_4 $$ if (deprecated == null) [ CD ]
Line_3 $$ Set<String> deprecated = myClass2DeprecatedProperties.get(aClass.getName())-->Line_11 $$ deprecated.add(PropertyUtil.getPropertyNameBySetter(method))[ FD ]
Line_2 $$ public boolean isPropertyDeprecated(final Module module, final Class aClass, final String propertyName) -->Line_3 $$ Set<String> deprecated = myClass2DeprecatedProperties.get(aClass.getName())[ CD ]
Line_3 $$ Set<String> deprecated = myClass2DeprecatedProperties.get(aClass.getName())-->Line_17 $$ return deprecated.contains(propertyName)[ FD ]
Line_2 $$ public boolean isPropertyDeprecated(final Module module, final Class aClass, final String propertyName) -->Line_17 $$ return deprecated.contains(propertyName)[ FD ]
