Line_8 $$ int pos = moduleArtifactId.indexOf("-theme")-->Line_9 $$ String themeId = moduleArtifactId.substring(0, pos)[ FD ]
Line_7 $$ String moduleArtifactId = filterMap.get("module_artifact_id")-->Line_8 $$ int pos = moduleArtifactId.indexOf("-theme")[ FD ]
Line_3 $$ Map<String, String> filterMap = super.processPluginPackageProperties(srcFile, displayName, pluginPackage)-->Line_10 $$ filterMap.put("theme_id", themeId)[ FD ]
Line_3 $$ Map<String, String> filterMap = super.processPluginPackageProperties(srcFile, displayName, pluginPackage)-->Line_13 $$ String liferayVersions = filterMap.get("liferay_versions")[ FD ]
Line_2 $$ public Map<String, String> processPluginPackageProperties(File srcFile, String displayName, PluginPackage pluginPackage) throws Exception -->Line_11 $$ String themeName = filterMap.get("plugin_name")[ CD ]
Line_2 $$ public Map<String, String> processPluginPackageProperties(File srcFile, String displayName, PluginPackage pluginPackage) throws Exception -->Line_12 $$ filterMap.put("theme_name", StringUtil.stripCDATA(themeName))[ CD ]
Line_3 $$ Map<String, String> filterMap = super.processPluginPackageProperties(srcFile, displayName, pluginPackage)-->Line_14 $$ filterMap.put("theme_versions", StringUtil.replace(liferayVersions, "liferay-version", "version"))[ FD ]
Line_3 $$ Map<String, String> filterMap = super.processPluginPackageProperties(srcFile, displayName, pluginPackage)-->Line_12 $$ filterMap.put("theme_name", StringUtil.stripCDATA(themeName))[ FD ]
Line_3 $$ Map<String, String> filterMap = super.processPluginPackageProperties(srcFile, displayName, pluginPackage)-->Line_15 $$ copyDependencyXml("liferay-look-and-feel.xml", srcFile + "/WEB-INF", filterMap, true)[ FD ]
Line_3 $$ Map<String, String> filterMap = super.processPluginPackageProperties(srcFile, displayName, pluginPackage)-->Line_4 $$ if (filterMap == null) [ FD ]
Line_2 $$ public Map<String, String> processPluginPackageProperties(File srcFile, String displayName, PluginPackage pluginPackage) throws Exception -->Line_13 $$ String liferayVersions = filterMap.get("liferay_versions")[ CD ]
Line_2 $$ public Map<String, String> processPluginPackageProperties(File srcFile, String displayName, PluginPackage pluginPackage) throws Exception -->Line_14 $$ filterMap.put("theme_versions", StringUtil.replace(liferayVersions, "liferay-version", "version"))[ CD ]
Line_2 $$ public Map<String, String> processPluginPackageProperties(File srcFile, String displayName, PluginPackage pluginPackage) throws Exception -->Line_15 $$ copyDependencyXml("liferay-look-and-feel.xml", srcFile + "/WEB-INF", filterMap, true)[ CD ]
Line_13 $$ String liferayVersions = filterMap.get("liferay_versions")-->Line_14 $$ filterMap.put("theme_versions", StringUtil.replace(liferayVersions, "liferay-version", "version"))[ FD ]
Line_3 $$ Map<String, String> filterMap = super.processPluginPackageProperties(srcFile, displayName, pluginPackage)-->Line_7 $$ String moduleArtifactId = filterMap.get("module_artifact_id")[ FD ]
Line_2 $$ public Map<String, String> processPluginPackageProperties(File srcFile, String displayName, PluginPackage pluginPackage) throws Exception -->Line_10 $$ filterMap.put("theme_id", themeId)[ CD ]
Line_4 $$ if (filterMap == null) -->Line_5 $$ return null[ CD ]
Line_7 $$ String moduleArtifactId = filterMap.get("module_artifact_id")-->Line_9 $$ String themeId = moduleArtifactId.substring(0, pos)[ FD ]
Line_3 $$ Map<String, String> filterMap = super.processPluginPackageProperties(srcFile, displayName, pluginPackage)-->Line_11 $$ String themeName = filterMap.get("plugin_name")[ FD ]
Line_2 $$ public Map<String, String> processPluginPackageProperties(File srcFile, String displayName, PluginPackage pluginPackage) throws Exception -->Line_7 $$ String moduleArtifactId = filterMap.get("module_artifact_id")[ CD ]
Line_11 $$ String themeName = filterMap.get("plugin_name")-->Line_12 $$ filterMap.put("theme_name", StringUtil.stripCDATA(themeName))[ FD ]
Line_2 $$ public Map<String, String> processPluginPackageProperties(File srcFile, String displayName, PluginPackage pluginPackage) throws Exception -->Line_4 $$ if (filterMap == null) [ CD ]
Line_2 $$ public Map<String, String> processPluginPackageProperties(File srcFile, String displayName, PluginPackage pluginPackage) throws Exception -->Line_3 $$ Map<String, String> filterMap = super.processPluginPackageProperties(srcFile, displayName, pluginPackage)[ CD ]
Line_2 $$ public Map<String, String> processPluginPackageProperties(File srcFile, String displayName, PluginPackage pluginPackage) throws Exception -->Line_9 $$ String themeId = moduleArtifactId.substring(0, pos)[ CD ]
Line_2 $$ public Map<String, String> processPluginPackageProperties(File srcFile, String displayName, PluginPackage pluginPackage) throws Exception -->Line_3 $$ Map<String, String> filterMap = super.processPluginPackageProperties(srcFile, displayName, pluginPackage)[ FD ]
Line_9 $$ String themeId = moduleArtifactId.substring(0, pos)-->Line_10 $$ filterMap.put("theme_id", themeId)[ FD ]
Line_2 $$ public Map<String, String> processPluginPackageProperties(File srcFile, String displayName, PluginPackage pluginPackage) throws Exception -->Line_8 $$ int pos = moduleArtifactId.indexOf("-theme")[ CD ]
Line_2 $$ public Map<String, String> processPluginPackageProperties(File srcFile, String displayName, PluginPackage pluginPackage) throws Exception -->Line_16 $$ return filterMap[ CD ]
