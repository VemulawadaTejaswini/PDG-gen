Line_2 $$ public void testPortletNameAndEditorConfigKeyAndEditorNameOverridesPortletNameAndEditorConfigKeyEditorConfig() throws Exception -->Line_23 $$ Assert.assertEquals("emoticons", toolbarsJSONObject.getString("button3"))[ CD ]
Line_2 $$ public void testPortletNameAndEditorConfigKeyAndEditorNameOverridesPortletNameAndEditorConfigKeyEditorConfig() throws Exception -->Line_15 $$ properties.put("service.ranking", 1000)[ CD ]
Line_2 $$ public void testPortletNameAndEditorConfigKeyAndEditorNameOverridesPortletNameAndEditorConfigKeyEditorConfig() throws Exception -->Line_11 $$ EditorConfigContributor emoticonsEditorConfigContributor = new EmoticonsEditorConfigContributor()[ CD ]
Line_4 $$ EditorConfigContributor textFormatEditorConfigContributor = new TextFormatEditorConfigContributor()-->Line_10 $$ _editorConfigContributorServiceRegistration1 = registry.registerService(EditorConfigContributor.class, textFormatEditorConfigContributor, properties)[ FD ]
Line_11 $$ EditorConfigContributor emoticonsEditorConfigContributor = new EmoticonsEditorConfigContributor()-->Line_16 $$ _editorConfigContributorServiceRegistration2 = registry.registerService(EditorConfigContributor.class, emoticonsEditorConfigContributor, properties)[ FD ]
Line_5 $$ Map<String, Object> properties = new HashMap()-->Line_10 $$ _editorConfigContributorServiceRegistration1 = registry.registerService(EditorConfigContributor.class, textFormatEditorConfigContributor, properties)[ FD ]
Line_5 $$ Map<String, Object> properties = new HashMap()-->Line_6 $$ properties.put("editor.config.key", _CONFIG_KEY)[ FD ]
Line_12 $$ properties = new HashMap()-->Line_15 $$ properties.put("service.ranking", 1000)[ FD ]
Line_20 $$ JSONObject toolbarsJSONObject = configJSONObject.getJSONObject("toolbars")-->Line_23 $$ Assert.assertEquals("emoticons", toolbarsJSONObject.getString("button3"))[ FD ]
Line_5 $$ Map<String, Object> properties = new HashMap()-->Line_8 $$ properties.put("javax.portlet.name", _PORTLET_NAME)[ FD ]
Line_2 $$ public void testPortletNameAndEditorConfigKeyAndEditorNameOverridesPortletNameAndEditorConfigKeyEditorConfig() throws Exception -->Line_14 $$ properties.put("javax.portlet.name", _PORTLET_NAME)[ CD ]
Line_2 $$ public void testPortletNameAndEditorConfigKeyAndEditorNameOverridesPortletNameAndEditorConfigKeyEditorConfig() throws Exception -->Line_4 $$ EditorConfigContributor textFormatEditorConfigContributor = new TextFormatEditorConfigContributor()[ CD ]
Line_2 $$ public void testPortletNameAndEditorConfigKeyAndEditorNameOverridesPortletNameAndEditorConfigKeyEditorConfig() throws Exception -->Line_7 $$ properties.put("editor.name", _EDITOR_NAME)[ CD ]
Line_18 $$ JSONObject configJSONObject = editorConfiguration.getConfigJSONObject()-->Line_20 $$ JSONObject toolbarsJSONObject = configJSONObject.getJSONObject("toolbars")[ FD ]
Line_2 $$ public void testPortletNameAndEditorConfigKeyAndEditorNameOverridesPortletNameAndEditorConfigKeyEditorConfig() throws Exception -->Line_5 $$ Map<String, Object> properties = new HashMap()[ CD ]
Line_5 $$ Map<String, Object> properties = new HashMap()-->Line_13 $$ properties.put("editor.config.key", _CONFIG_KEY)[ FD ]
Line_17 $$ EditorConfiguration editorConfiguration = EditorConfigurationFactoryUtil.getEditorConfiguration(_PORTLET_NAME, _CONFIG_KEY, _EDITOR_NAME, new HashMap<String, Object>(), null, null)-->Line_18 $$ JSONObject configJSONObject = editorConfiguration.getConfigJSONObject()[ FD ]
Line_2 $$ public void testPortletNameAndEditorConfigKeyAndEditorNameOverridesPortletNameAndEditorConfigKeyEditorConfig() throws Exception -->Line_9 $$ properties.put("service.ranking", 1000)[ CD ]
Line_5 $$ Map<String, Object> properties = new HashMap()-->Line_14 $$ properties.put("javax.portlet.name", _PORTLET_NAME)[ FD ]
Line_2 $$ public void testPortletNameAndEditorConfigKeyAndEditorNameOverridesPortletNameAndEditorConfigKeyEditorConfig() throws Exception -->Line_21 $$ Assert.assertEquals("link", toolbarsJSONObject.getString("button1"))[ CD ]
Line_2 $$ public void testPortletNameAndEditorConfigKeyAndEditorNameOverridesPortletNameAndEditorConfigKeyEditorConfig() throws Exception -->Line_18 $$ JSONObject configJSONObject = editorConfiguration.getConfigJSONObject()[ CD ]
Line_2 $$ public void testPortletNameAndEditorConfigKeyAndEditorNameOverridesPortletNameAndEditorConfigKeyEditorConfig() throws Exception -->Line_12 $$ properties = new HashMap()[ CD ]
Line_2 $$ public void testPortletNameAndEditorConfigKeyAndEditorNameOverridesPortletNameAndEditorConfigKeyEditorConfig() throws Exception -->Line_19 $$ Assert.assertEquals(TextFormatEditorConfigContributor.class.getName(), configJSONObject.getString("className"))[ CD ]
Line_20 $$ JSONObject toolbarsJSONObject = configJSONObject.getJSONObject("toolbars")-->Line_22 $$ Assert.assertEquals("bold", toolbarsJSONObject.getString("button2"))[ FD ]
Line_2 $$ public void testPortletNameAndEditorConfigKeyAndEditorNameOverridesPortletNameAndEditorConfigKeyEditorConfig() throws Exception -->Line_13 $$ properties.put("editor.config.key", _CONFIG_KEY)[ CD ]
Line_2 $$ public void testPortletNameAndEditorConfigKeyAndEditorNameOverridesPortletNameAndEditorConfigKeyEditorConfig() throws Exception -->Line_8 $$ properties.put("javax.portlet.name", _PORTLET_NAME)[ CD ]
Line_3 $$ Registry registry = RegistryUtil.getRegistry()-->Line_10 $$ _editorConfigContributorServiceRegistration1 = registry.registerService(EditorConfigContributor.class, textFormatEditorConfigContributor, properties)[ FD ]
Line_5 $$ Map<String, Object> properties = new HashMap()-->Line_9 $$ properties.put("service.ranking", 1000)[ FD ]
Line_20 $$ JSONObject toolbarsJSONObject = configJSONObject.getJSONObject("toolbars")-->Line_21 $$ Assert.assertEquals("link", toolbarsJSONObject.getString("button1"))[ FD ]
Line_5 $$ Map<String, Object> properties = new HashMap()-->Line_16 $$ _editorConfigContributorServiceRegistration2 = registry.registerService(EditorConfigContributor.class, emoticonsEditorConfigContributor, properties)[ FD ]
Line_12 $$ properties = new HashMap()-->Line_13 $$ properties.put("editor.config.key", _CONFIG_KEY)[ FD ]
Line_2 $$ public void testPortletNameAndEditorConfigKeyAndEditorNameOverridesPortletNameAndEditorConfigKeyEditorConfig() throws Exception -->Line_3 $$ Registry registry = RegistryUtil.getRegistry()[ CD ]
Line_12 $$ properties = new HashMap()-->Line_14 $$ properties.put("javax.portlet.name", _PORTLET_NAME)[ FD ]
Line_3 $$ Registry registry = RegistryUtil.getRegistry()-->Line_16 $$ _editorConfigContributorServiceRegistration2 = registry.registerService(EditorConfigContributor.class, emoticonsEditorConfigContributor, properties)[ FD ]
Line_2 $$ public void testPortletNameAndEditorConfigKeyAndEditorNameOverridesPortletNameAndEditorConfigKeyEditorConfig() throws Exception -->Line_17 $$ EditorConfiguration editorConfiguration = EditorConfigurationFactoryUtil.getEditorConfiguration(_PORTLET_NAME, _CONFIG_KEY, _EDITOR_NAME, new HashMap<String, Object>(), null, null)[ CD ]
Line_2 $$ public void testPortletNameAndEditorConfigKeyAndEditorNameOverridesPortletNameAndEditorConfigKeyEditorConfig() throws Exception -->Line_6 $$ properties.put("editor.config.key", _CONFIG_KEY)[ CD ]
Line_5 $$ Map<String, Object> properties = new HashMap()-->Line_12 $$ properties = new HashMap()[ FD ]
Line_2 $$ public void testPortletNameAndEditorConfigKeyAndEditorNameOverridesPortletNameAndEditorConfigKeyEditorConfig() throws Exception -->Line_10 $$ _editorConfigContributorServiceRegistration1 = registry.registerService(EditorConfigContributor.class, textFormatEditorConfigContributor, properties)[ CD ]
Line_2 $$ public void testPortletNameAndEditorConfigKeyAndEditorNameOverridesPortletNameAndEditorConfigKeyEditorConfig() throws Exception -->Line_22 $$ Assert.assertEquals("bold", toolbarsJSONObject.getString("button2"))[ CD ]
Line_5 $$ Map<String, Object> properties = new HashMap()-->Line_15 $$ properties.put("service.ranking", 1000)[ FD ]
Line_5 $$ Map<String, Object> properties = new HashMap()-->Line_7 $$ properties.put("editor.name", _EDITOR_NAME)[ FD ]
Line_18 $$ JSONObject configJSONObject = editorConfiguration.getConfigJSONObject()-->Line_19 $$ Assert.assertEquals(TextFormatEditorConfigContributor.class.getName(), configJSONObject.getString("className"))[ FD ]
Line_2 $$ public void testPortletNameAndEditorConfigKeyAndEditorNameOverridesPortletNameAndEditorConfigKeyEditorConfig() throws Exception -->Line_16 $$ _editorConfigContributorServiceRegistration2 = registry.registerService(EditorConfigContributor.class, emoticonsEditorConfigContributor, properties)[ CD ]
Line_2 $$ public void testPortletNameAndEditorConfigKeyAndEditorNameOverridesPortletNameAndEditorConfigKeyEditorConfig() throws Exception -->Line_20 $$ JSONObject toolbarsJSONObject = configJSONObject.getJSONObject("toolbars")[ CD ]
Line_12 $$ properties = new HashMap()-->Line_16 $$ _editorConfigContributorServiceRegistration2 = registry.registerService(EditorConfigContributor.class, emoticonsEditorConfigContributor, properties)[ FD ]
