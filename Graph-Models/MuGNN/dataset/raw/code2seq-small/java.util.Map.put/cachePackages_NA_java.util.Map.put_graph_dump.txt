Line_4 $$ Map<URL, Set<Package>> packagesByUrl = PACKAGES_IN_JAR_CACHE.get(pu)-->Line_9 $$ packagesByUrl.put(jarToScan, packages)[ FD ]
Line_5 $$ if (packagesByUrl == null) -->Line_6 $$ packagesByUrl = new HashMap<URL, Set<Package>>()[ CD ]
Line_2 $$ private static void cachePackages(PersistenceUnitMetadata pu, URL jarToScan, Set<Package> packages) -->Line_9 $$ packagesByUrl.put(jarToScan, packages)[ FD ]
Line_5 $$ if (packagesByUrl == null) -->Line_7 $$ PACKAGES_IN_JAR_CACHE.put(pu, packagesByUrl)[ CD ]
Line_4 $$ Map<URL, Set<Package>> packagesByUrl = PACKAGES_IN_JAR_CACHE.get(pu)-->Line_5 $$ if (packagesByUrl == null) [ FD ]
Line_6 $$ packagesByUrl = new HashMap<URL, Set<Package>>()-->Line_7 $$ PACKAGES_IN_JAR_CACHE.put(pu, packagesByUrl)[ FD ]
Line_4 $$ Map<URL, Set<Package>> packagesByUrl = PACKAGES_IN_JAR_CACHE.get(pu)-->Line_7 $$ PACKAGES_IN_JAR_CACHE.put(pu, packagesByUrl)[ FD ]
Line_4 $$ Map<URL, Set<Package>> packagesByUrl = PACKAGES_IN_JAR_CACHE.get(pu)-->Line_6 $$ packagesByUrl = new HashMap<URL, Set<Package>>()[ FD ]
Line_2 $$ private static void cachePackages(PersistenceUnitMetadata pu, URL jarToScan, Set<Package> packages) -->Line_7 $$ PACKAGES_IN_JAR_CACHE.put(pu, packagesByUrl)[ FD ]
Line_2 $$ private static void cachePackages(PersistenceUnitMetadata pu, URL jarToScan, Set<Package> packages) -->Line_4 $$ Map<URL, Set<Package>> packagesByUrl = PACKAGES_IN_JAR_CACHE.get(pu)[ FD ]
Line_6 $$ packagesByUrl = new HashMap<URL, Set<Package>>()-->Line_9 $$ packagesByUrl.put(jarToScan, packages)[ FD ]
