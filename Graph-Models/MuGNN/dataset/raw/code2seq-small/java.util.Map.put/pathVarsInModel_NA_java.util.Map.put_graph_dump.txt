Line_2 $$ public void pathVarsInModel() throws Exception -->Line_6 $$ pathVars.put("other", "other")[ CD ]
Line_3 $$ final Map<String, Object> pathVars = new HashMap<String, Object>()-->Line_4 $$ pathVars.put("hotel", "42")[ FD ]
Line_2 $$ public void pathVarsInModel() throws Exception -->Line_16 $$ ModelValidatingViewResolver resolver = wac.getBean(ModelValidatingViewResolver.class)[ CD ]
Line_9 $$ RootBeanDefinition beanDef = new RootBeanDefinition(ModelValidatingViewResolver.class)-->Line_11 $$ context.registerBeanDefinition("viewResolver", beanDef)[ FD ]
Line_2 $$ public void pathVarsInModel() throws Exception -->Line_15 $$ getServlet().service(request, new MockHttpServletResponse())[ CD ]
Line_7 $$ WebApplicationContext wac = initServlet(new ApplicationContextInitializer<GenericWebApplicationContext>() -->Line_10 $$ beanDef.getConstructorArgumentValues().addGenericArgumentValue(pathVars)[ CD ]
Line_7 $$ WebApplicationContext wac = initServlet(new ApplicationContextInitializer<GenericWebApplicationContext>() -->Line_11 $$ context.registerBeanDefinition("viewResolver", beanDef)[ CD ]
Line_9 $$ RootBeanDefinition beanDef = new RootBeanDefinition(ModelValidatingViewResolver.class)-->Line_10 $$ beanDef.getConstructorArgumentValues().addGenericArgumentValue(pathVars)[ FD ]
Line_2 $$ public void pathVarsInModel() throws Exception -->Line_4 $$ pathVars.put("hotel", "42")[ CD ]
Line_3 $$ final Map<String, Object> pathVars = new HashMap<String, Object>()-->Line_5 $$ pathVars.put("booking", 21)[ FD ]
Line_2 $$ public void pathVarsInModel() throws Exception -->Line_3 $$ final Map<String, Object> pathVars = new HashMap<String, Object>()[ CD ]
Line_7 $$ WebApplicationContext wac = initServlet(new ApplicationContextInitializer<GenericWebApplicationContext>() -->Line_16 $$ ModelValidatingViewResolver resolver = wac.getBean(ModelValidatingViewResolver.class)[ FD ]
Line_7 $$ WebApplicationContext wac = initServlet(new ApplicationContextInitializer<GenericWebApplicationContext>() -->Line_11 $$ context.registerBeanDefinition("viewResolver", beanDef)[ FD ]
Line_2 $$ public void pathVarsInModel() throws Exception -->Line_17 $$ assertEquals(3, resolver.validatedAttrCount)[ CD ]
Line_2 $$ public void pathVarsInModel() throws Exception -->Line_7 $$ WebApplicationContext wac = initServlet(new ApplicationContextInitializer<GenericWebApplicationContext>() [ CD ]
Line_3 $$ final Map<String, Object> pathVars = new HashMap<String, Object>()-->Line_10 $$ beanDef.getConstructorArgumentValues().addGenericArgumentValue(pathVars)[ FD ]
Line_2 $$ public void pathVarsInModel() throws Exception -->Line_5 $$ pathVars.put("booking", 21)[ CD ]
Line_3 $$ final Map<String, Object> pathVars = new HashMap<String, Object>()-->Line_6 $$ pathVars.put("other", "other")[ FD ]
Line_7 $$ WebApplicationContext wac = initServlet(new ApplicationContextInitializer<GenericWebApplicationContext>() -->Line_9 $$ RootBeanDefinition beanDef = new RootBeanDefinition(ModelValidatingViewResolver.class)[ CD ]
