Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_3 $$ EntityManager mockEm = mock(EntityManager.class)[ CD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_12 $$ jt.addObject("java:comp/env/pc1", mockEm)[ CD ]
Line_9 $$ Map<String, String> extendedPersistenceContexts = new HashMap<String, String>()-->Line_18 $$ bpp.setExtendedPersistenceContexts(extendedPersistenceContexts)[ FD ]
Line_15 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_20 $$ bf.addBeanPostProcessor(bpp)[ FD ]
Line_6 $$ Map<String, String> persistenceContexts = new HashMap<String, String>()-->Line_8 $$ persistenceContexts.put("Person", "pc2")[ FD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_16 $$ PersistenceAnnotationBeanPostProcessor bpp = new PersistenceAnnotationBeanPostProcessor()[ CD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_26 $$ DefaultPublicPersistenceContextSetter bean3 = (DefaultPublicPersistenceContextSetter) bf.getBean(DefaultPublicPersistenceContextSetter.class.getName())[ CD ]
Line_5 $$ EntityManager mockEm3 = mock(EntityManager.class)-->Line_29 $$ assertSame(mockEm3, bean3.em)[ FD ]
Line_16 $$ PersistenceAnnotationBeanPostProcessor bpp = new PersistenceAnnotationBeanPostProcessor()-->Line_18 $$ bpp.setExtendedPersistenceContexts(extendedPersistenceContexts)[ FD ]
Line_15 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_22 $$ bf.registerBeanDefinition(DefaultPrivatePersistenceContextFieldNamedPerson.class.getName(), new RootBeanDefinition(DefaultPrivatePersistenceContextFieldNamedPerson.class))[ FD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_23 $$ bf.registerBeanDefinition(DefaultPublicPersistenceContextSetter.class.getName(), new RootBeanDefinition(DefaultPublicPersistenceContextSetter.class))[ CD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_5 $$ EntityManager mockEm3 = mock(EntityManager.class)[ CD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_29 $$ assertSame(mockEm3, bean3.em)[ CD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_22 $$ bf.registerBeanDefinition(DefaultPrivatePersistenceContextFieldNamedPerson.class.getName(), new RootBeanDefinition(DefaultPrivatePersistenceContextFieldNamedPerson.class))[ CD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_19 $$ bpp.setJndiTemplate(jt)[ CD ]
Line_3 $$ EntityManager mockEm = mock(EntityManager.class)-->Line_12 $$ jt.addObject("java:comp/env/pc1", mockEm)[ FD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_20 $$ bf.addBeanPostProcessor(bpp)[ CD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_4 $$ EntityManager mockEm2 = mock(EntityManager.class)[ CD ]
Line_15 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_23 $$ bf.registerBeanDefinition(DefaultPublicPersistenceContextSetter.class.getName(), new RootBeanDefinition(DefaultPublicPersistenceContextSetter.class))[ FD ]
Line_15 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_21 $$ bf.registerBeanDefinition(DefaultPrivatePersistenceContextField.class.getName(), new RootBeanDefinition(DefaultPrivatePersistenceContextField.class))[ FD ]
Line_15 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_25 $$ DefaultPrivatePersistenceContextFieldNamedPerson bean2 = (DefaultPrivatePersistenceContextFieldNamedPerson) bf.getBean(DefaultPrivatePersistenceContextFieldNamedPerson.class.getName())[ FD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_6 $$ Map<String, String> persistenceContexts = new HashMap<String, String>()[ CD ]
Line_6 $$ Map<String, String> persistenceContexts = new HashMap<String, String>()-->Line_17 $$ bpp.setPersistenceContexts(persistenceContexts)[ FD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_21 $$ bf.registerBeanDefinition(DefaultPrivatePersistenceContextField.class.getName(), new RootBeanDefinition(DefaultPrivatePersistenceContextField.class))[ CD ]
Line_16 $$ PersistenceAnnotationBeanPostProcessor bpp = new PersistenceAnnotationBeanPostProcessor()-->Line_19 $$ bpp.setJndiTemplate(jt)[ FD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_7 $$ persistenceContexts.put("", "pc1")[ CD ]
Line_11 $$ ExpectedLookupTemplate jt = new ExpectedLookupTemplate()-->Line_14 $$ jt.addObject("java:comp/env/pc3", mockEm3)[ FD ]
Line_11 $$ ExpectedLookupTemplate jt = new ExpectedLookupTemplate()-->Line_12 $$ jt.addObject("java:comp/env/pc1", mockEm)[ FD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_17 $$ bpp.setPersistenceContexts(persistenceContexts)[ CD ]
Line_6 $$ Map<String, String> persistenceContexts = new HashMap<String, String>()-->Line_7 $$ persistenceContexts.put("", "pc1")[ FD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_8 $$ persistenceContexts.put("Person", "pc2")[ CD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_24 $$ DefaultPrivatePersistenceContextField bean1 = (DefaultPrivatePersistenceContextField) bf.getBean(DefaultPrivatePersistenceContextField.class.getName())[ CD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_9 $$ Map<String, String> extendedPersistenceContexts = new HashMap<String, String>()[ CD ]
Line_4 $$ EntityManager mockEm2 = mock(EntityManager.class)-->Line_28 $$ assertSame(mockEm2, bean2.em)[ FD ]
Line_9 $$ Map<String, String> extendedPersistenceContexts = new HashMap<String, String>()-->Line_10 $$ extendedPersistenceContexts.put("", "pc3")[ FD ]
Line_15 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_26 $$ DefaultPublicPersistenceContextSetter bean3 = (DefaultPublicPersistenceContextSetter) bf.getBean(DefaultPublicPersistenceContextSetter.class.getName())[ FD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_18 $$ bpp.setExtendedPersistenceContexts(extendedPersistenceContexts)[ CD ]
Line_11 $$ ExpectedLookupTemplate jt = new ExpectedLookupTemplate()-->Line_19 $$ bpp.setJndiTemplate(jt)[ FD ]
Line_3 $$ EntityManager mockEm = mock(EntityManager.class)-->Line_27 $$ assertSame(mockEm, bean1.em)[ FD ]
Line_5 $$ EntityManager mockEm3 = mock(EntityManager.class)-->Line_14 $$ jt.addObject("java:comp/env/pc3", mockEm3)[ FD ]
Line_4 $$ EntityManager mockEm2 = mock(EntityManager.class)-->Line_13 $$ jt.addObject("java:comp/env/pc2", mockEm2)[ FD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_27 $$ assertSame(mockEm, bean1.em)[ CD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_14 $$ jt.addObject("java:comp/env/pc3", mockEm3)[ CD ]
Line_15 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_24 $$ DefaultPrivatePersistenceContextField bean1 = (DefaultPrivatePersistenceContextField) bf.getBean(DefaultPrivatePersistenceContextField.class.getName())[ FD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_28 $$ assertSame(mockEm2, bean2.em)[ CD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_13 $$ jt.addObject("java:comp/env/pc2", mockEm2)[ CD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_25 $$ DefaultPrivatePersistenceContextFieldNamedPerson bean2 = (DefaultPrivatePersistenceContextFieldNamedPerson) bf.getBean(DefaultPrivatePersistenceContextFieldNamedPerson.class.getName())[ CD ]
Line_16 $$ PersistenceAnnotationBeanPostProcessor bpp = new PersistenceAnnotationBeanPostProcessor()-->Line_17 $$ bpp.setPersistenceContexts(persistenceContexts)[ FD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_11 $$ ExpectedLookupTemplate jt = new ExpectedLookupTemplate()[ CD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_10 $$ extendedPersistenceContexts.put("", "pc3")[ CD ]
Line_11 $$ ExpectedLookupTemplate jt = new ExpectedLookupTemplate()-->Line_13 $$ jt.addObject("java:comp/env/pc2", mockEm2)[ FD ]
Line_2 $$ public void testPersistenceContextsFromJndi() -->Line_15 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()[ CD ]
Line_16 $$ PersistenceAnnotationBeanPostProcessor bpp = new PersistenceAnnotationBeanPostProcessor()-->Line_20 $$ bf.addBeanPostProcessor(bpp)[ FD ]
