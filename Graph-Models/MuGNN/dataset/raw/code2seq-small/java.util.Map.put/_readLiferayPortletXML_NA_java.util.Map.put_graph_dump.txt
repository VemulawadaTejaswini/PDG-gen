Line_12 $$ String roleName = roleMapperElement.elementText("role-name")-->Line_14 $$ roleMappers.put(roleName, roleLink)[ FD ]
Line_9 $$ PortletApp portletApp = getPortletApp(servletContextName)-->Line_16 $$ Map<String, String> customUserAttributes = portletApp.getCustomUserAttributes()[ FD ]
Line_11 $$ for (Element roleMapperElement : rootElement.elements("role-mapper")) -->Line_12 $$ String roleName = roleMapperElement.elementText("role-name")[ FD ]
Line_7 $$ Document document = UnsecureSAXReaderUtil.read(xml, true)-->Line_8 $$ Element rootElement = document.getRootElement()[ FD ]
Line_2 $$ private Set<String> _readLiferayPortletXML(String servletContextName, ServletContext servletContext, String xml, Map<String, Portlet> portletsMap) throws Exception -->Line_10 $$ Map<String, String> roleMappers = new HashMap()[ CD ]
Line_18 $$ String customClass = customUserAttributeElement.elementText("custom-class")-->Line_21 $$ customUserAttributes.put(name, customClass)[ FD ]
Line_2 $$ private Set<String> _readLiferayPortletXML(String servletContextName, ServletContext servletContext, String xml, Map<String, Portlet> portletsMap) throws Exception -->Line_4 $$ if (xml == null) [ FD ]
Line_2 $$ private Set<String> _readLiferayPortletXML(String servletContextName, ServletContext servletContext, String xml, Map<String, Portlet> portletsMap) throws Exception -->Line_7 $$ Document document = UnsecureSAXReaderUtil.read(xml, true)[ FD ]
Line_2 $$ private Set<String> _readLiferayPortletXML(String servletContextName, ServletContext servletContext, String xml, Map<String, Portlet> portletsMap) throws Exception -->Line_7 $$ Document document = UnsecureSAXReaderUtil.read(xml, true)[ CD ]
Line_8 $$ Element rootElement = document.getRootElement()-->Line_11 $$ for (Element roleMapperElement : rootElement.elements("role-mapper")) [ FD ]
Line_2 $$ private Set<String> _readLiferayPortletXML(String servletContextName, ServletContext servletContext, String xml, Map<String, Portlet> portletsMap) throws Exception -->Line_25 $$ _readLiferayPortletXML(servletContextName, servletContext, liferayPortletIds, roleMappers, portletElement, portletsMap)[ FD ]
Line_19 $$ for (Element nameElement : customUserAttributeElement.elements("name")) -->Line_20 $$ String name = nameElement.getText()[ FD ]
Line_2 $$ private Set<String> _readLiferayPortletXML(String servletContextName, ServletContext servletContext, String xml, Map<String, Portlet> portletsMap) throws Exception -->Line_27 $$ return liferayPortletIds[ CD ]
Line_8 $$ Element rootElement = document.getRootElement()-->Line_24 $$ for (Element portletElement : rootElement.elements("portlet")) [ FD ]
Line_3 $$ Set<String> liferayPortletIds = new HashSet()-->Line_25 $$ _readLiferayPortletXML(servletContextName, servletContext, liferayPortletIds, roleMappers, portletElement, portletsMap)[ FD ]
Line_2 $$ private Set<String> _readLiferayPortletXML(String servletContextName, ServletContext servletContext, String xml, Map<String, Portlet> portletsMap) throws Exception -->Line_3 $$ Set<String> liferayPortletIds = new HashSet()[ CD ]
Line_2 $$ private Set<String> _readLiferayPortletXML(String servletContextName, ServletContext servletContext, String xml, Map<String, Portlet> portletsMap) throws Exception -->Line_9 $$ PortletApp portletApp = getPortletApp(servletContextName)[ CD ]
Line_2 $$ private Set<String> _readLiferayPortletXML(String servletContextName, ServletContext servletContext, String xml, Map<String, Portlet> portletsMap) throws Exception -->Line_9 $$ PortletApp portletApp = getPortletApp(servletContextName)[ FD ]
Line_2 $$ private Set<String> _readLiferayPortletXML(String servletContextName, ServletContext servletContext, String xml, Map<String, Portlet> portletsMap) throws Exception -->Line_16 $$ Map<String, String> customUserAttributes = portletApp.getCustomUserAttributes()[ CD ]
Line_13 $$ String roleLink = roleMapperElement.elementText("role-link")-->Line_14 $$ roleMappers.put(roleName, roleLink)[ FD ]
Line_17 $$ for (Element customUserAttributeElement : rootElement.elements("custom-user-attribute")) -->Line_18 $$ String customClass = customUserAttributeElement.elementText("custom-class")[ FD ]
Line_10 $$ Map<String, String> roleMappers = new HashMap()-->Line_25 $$ _readLiferayPortletXML(servletContextName, servletContext, liferayPortletIds, roleMappers, portletElement, portletsMap)[ FD ]
Line_24 $$ for (Element portletElement : rootElement.elements("portlet")) -->Line_25 $$ _readLiferayPortletXML(servletContextName, servletContext, liferayPortletIds, roleMappers, portletElement, portletsMap)[ FD ]
Line_2 $$ private Set<String> _readLiferayPortletXML(String servletContextName, ServletContext servletContext, String xml, Map<String, Portlet> portletsMap) throws Exception -->Line_4 $$ if (xml == null) [ CD ]
Line_20 $$ String name = nameElement.getText()-->Line_21 $$ customUserAttributes.put(name, customClass)[ FD ]
Line_16 $$ Map<String, String> customUserAttributes = portletApp.getCustomUserAttributes()-->Line_21 $$ customUserAttributes.put(name, customClass)[ FD ]
Line_4 $$ if (xml == null) -->Line_5 $$ return liferayPortletIds[ CD ]
Line_11 $$ for (Element roleMapperElement : rootElement.elements("role-mapper")) -->Line_13 $$ String roleLink = roleMapperElement.elementText("role-link")[ FD ]
Line_2 $$ private Set<String> _readLiferayPortletXML(String servletContextName, ServletContext servletContext, String xml, Map<String, Portlet> portletsMap) throws Exception -->Line_8 $$ Element rootElement = document.getRootElement()[ CD ]
Line_17 $$ for (Element customUserAttributeElement : rootElement.elements("custom-user-attribute")) -->Line_19 $$ for (Element nameElement : customUserAttributeElement.elements("name")) [ FD ]
Line_10 $$ Map<String, String> roleMappers = new HashMap()-->Line_14 $$ roleMappers.put(roleName, roleLink)[ FD ]
Line_8 $$ Element rootElement = document.getRootElement()-->Line_17 $$ for (Element customUserAttributeElement : rootElement.elements("custom-user-attribute")) [ FD ]
