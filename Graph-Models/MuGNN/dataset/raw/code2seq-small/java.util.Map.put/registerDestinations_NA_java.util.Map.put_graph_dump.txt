Line_29 $$ Map<String, Object> properties = new HashMap()-->Line_31 $$ _destinationServiceRegistrar.registerService(Destination.class, destination, properties)[ FD ]
Line_3 $$ for (DestinationConfiguration destinationConfiguration : _destinationConfigurations) -->Line_8 $$ _log.info("Rejecting destination " + destinationConfiguration.getDestinationName())[ FD ]
Line_2 $$ protected void registerDestinations() -->Line_14 $$ if (_destinations.isEmpty()) [ CD ]
Line_19 $$ for (Destination destination : _destinations) -->Line_20 $$ String destinationName = destination.getName()[ FD ]
Line_20 $$ String destinationName = destination.getName()-->Line_30 $$ properties.put("destination.name", destinationName)[ FD ]
Line_3 $$ for (DestinationConfiguration destinationConfiguration : _destinationConfigurations) -->Line_5 $$ PortalMessageBusPermission.checkListen(destinationConfiguration.getDestinationName())[ FD ]
Line_2 $$ protected void registerDestinations() -->Line_18 $$ _destinationServiceRegistrar = registry.getServiceRegistrar(Destination.class)[ CD ]
Line_17 $$ Registry registry = RegistryUtil.getRegistry()-->Line_18 $$ _destinationServiceRegistrar = registry.getServiceRegistrar(Destination.class)[ FD ]
Line_2 $$ protected void registerDestinations() -->Line_17 $$ Registry registry = RegistryUtil.getRegistry()[ CD ]
Line_20 $$ String destinationName = destination.getName()-->Line_22 $$ PortalMessageBusPermission.checkListen(destinationName)[ FD ]
Line_24 $$ if (_log.isInfoEnabled()) -->Line_25 $$ _log.info("Rejecting destination " + destinationName)[ CD ]
Line_7 $$ if (_log.isInfoEnabled()) -->Line_8 $$ _log.info("Rejecting destination " + destinationConfiguration.getDestinationName())[ CD ]
Line_29 $$ Map<String, Object> properties = new HashMap()-->Line_30 $$ properties.put("destination.name", destinationName)[ FD ]
Line_19 $$ for (Destination destination : _destinations) -->Line_31 $$ _destinationServiceRegistrar.registerService(Destination.class, destination, properties)[ FD ]
Line_3 $$ for (DestinationConfiguration destinationConfiguration : _destinationConfigurations) -->Line_12 $$ _destinations.add(DestinationFactoryUtil.createDestination(destinationConfiguration))[ FD ]
Line_14 $$ if (_destinations.isEmpty()) -->Line_15 $$ return[ CD ]
