Line_2 $$ private void _createServiceBaseImpl(Entity entity, int sessionType) throws Exception -->Line_11 $$ String content = _processTemplate(_tplServiceBaseImpl, context)[ CD ]
Line_2 $$ private void _createServiceBaseImpl(Entity entity, int sessionType) throws Exception -->Line_3 $$ JavaClass javaClass = _getJavaClass(_outputPath + "/service/impl/" + entity.getName() + (sessionType != _SESSION_TYPE_REMOTE ? "Local" : "") + "ServiceImpl.java")[ FD ]
Line_5 $$ Map<String, Object> context = _getContext()-->Line_8 $$ context.put("sessionTypeName", _getSessionTypeName(sessionType))[ FD ]
Line_2 $$ private void _createServiceBaseImpl(Entity entity, int sessionType) throws Exception -->Line_9 $$ context.put("referenceList", _mergeReferenceList(entity))[ CD ]
Line_2 $$ private void _createServiceBaseImpl(Entity entity, int sessionType) throws Exception -->Line_13 $$ ToolsUtil.writeFile(ejbFile, content, _author, _modifiedFileNames)[ CD ]
Line_5 $$ Map<String, Object> context = _getContext()-->Line_9 $$ context.put("referenceList", _mergeReferenceList(entity))[ FD ]
Line_4 $$ JavaMethod[] methods = _getMethods(javaClass)-->Line_7 $$ context.put("methods", methods)[ FD ]
Line_2 $$ private void _createServiceBaseImpl(Entity entity, int sessionType) throws Exception -->Line_10 $$ context = _putDeprecatedKeys(context, javaClass)[ CD ]
Line_5 $$ Map<String, Object> context = _getContext()-->Line_10 $$ context = _putDeprecatedKeys(context, javaClass)[ FD ]
Line_5 $$ Map<String, Object> context = _getContext()-->Line_6 $$ context.put("entity", entity)[ FD ]
Line_2 $$ private void _createServiceBaseImpl(Entity entity, int sessionType) throws Exception -->Line_9 $$ context.put("referenceList", _mergeReferenceList(entity))[ FD ]
Line_2 $$ private void _createServiceBaseImpl(Entity entity, int sessionType) throws Exception -->Line_12 $$ File ejbFile = new File(_outputPath + "/service/base/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceBaseImpl.java")[ FD ]
Line_3 $$ JavaClass javaClass = _getJavaClass(_outputPath + "/service/impl/" + entity.getName() + (sessionType != _SESSION_TYPE_REMOTE ? "Local" : "") + "ServiceImpl.java")-->Line_10 $$ context = _putDeprecatedKeys(context, javaClass)[ FD ]
Line_2 $$ private void _createServiceBaseImpl(Entity entity, int sessionType) throws Exception -->Line_12 $$ File ejbFile = new File(_outputPath + "/service/base/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceBaseImpl.java")[ CD ]
Line_5 $$ Map<String, Object> context = _getContext()-->Line_7 $$ context.put("methods", methods)[ FD ]
Line_2 $$ private void _createServiceBaseImpl(Entity entity, int sessionType) throws Exception -->Line_5 $$ Map<String, Object> context = _getContext()[ CD ]
Line_12 $$ File ejbFile = new File(_outputPath + "/service/base/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceBaseImpl.java")-->Line_13 $$ ToolsUtil.writeFile(ejbFile, content, _author, _modifiedFileNames)[ FD ]
Line_2 $$ private void _createServiceBaseImpl(Entity entity, int sessionType) throws Exception -->Line_8 $$ context.put("sessionTypeName", _getSessionTypeName(sessionType))[ CD ]
Line_2 $$ private void _createServiceBaseImpl(Entity entity, int sessionType) throws Exception -->Line_6 $$ context.put("entity", entity)[ CD ]
Line_2 $$ private void _createServiceBaseImpl(Entity entity, int sessionType) throws Exception -->Line_7 $$ context.put("methods", methods)[ CD ]
Line_2 $$ private void _createServiceBaseImpl(Entity entity, int sessionType) throws Exception -->Line_6 $$ context.put("entity", entity)[ FD ]
Line_2 $$ private void _createServiceBaseImpl(Entity entity, int sessionType) throws Exception -->Line_4 $$ JavaMethod[] methods = _getMethods(javaClass)[ CD ]
Line_3 $$ JavaClass javaClass = _getJavaClass(_outputPath + "/service/impl/" + entity.getName() + (sessionType != _SESSION_TYPE_REMOTE ? "Local" : "") + "ServiceImpl.java")-->Line_4 $$ JavaMethod[] methods = _getMethods(javaClass)[ FD ]
Line_10 $$ context = _putDeprecatedKeys(context, javaClass)-->Line_11 $$ String content = _processTemplate(_tplServiceBaseImpl, context)[ FD ]
Line_2 $$ private void _createServiceBaseImpl(Entity entity, int sessionType) throws Exception -->Line_8 $$ context.put("sessionTypeName", _getSessionTypeName(sessionType))[ FD ]
Line_5 $$ Map<String, Object> context = _getContext()-->Line_11 $$ String content = _processTemplate(_tplServiceBaseImpl, context)[ FD ]
Line_11 $$ String content = _processTemplate(_tplServiceBaseImpl, context)-->Line_13 $$ ToolsUtil.writeFile(ejbFile, content, _author, _modifiedFileNames)[ FD ]
Line_2 $$ private void _createServiceBaseImpl(Entity entity, int sessionType) throws Exception -->Line_3 $$ JavaClass javaClass = _getJavaClass(_outputPath + "/service/impl/" + entity.getName() + (sessionType != _SESSION_TYPE_REMOTE ? "Local" : "") + "ServiceImpl.java")[ CD ]
