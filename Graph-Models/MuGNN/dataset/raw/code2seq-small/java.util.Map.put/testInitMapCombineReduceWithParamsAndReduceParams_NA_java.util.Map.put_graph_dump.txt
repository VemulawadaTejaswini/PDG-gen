Line_2 $$ public void testInitMapCombineReduceWithParamsAndReduceParams() -->Line_25 $$ assertThat(((Number) object).longValue(), equalTo(numDocs * 12))[ CD ]
Line_2 $$ public void testInitMapCombineReduceWithParamsAndReduceParams() -->Line_7 $$ params.put("vars", varsMap)[ CD ]
Line_2 $$ public void testInitMapCombineReduceWithParamsAndReduceParams() -->Line_17 $$ assertThat(scriptedMetricAggregation.getName(), equalTo("scripted"))[ CD ]
Line_22 $$ Object object = aggregationList.get(0)-->Line_23 $$ assertThat(object, notNullValue())[ FD ]
Line_22 $$ Object object = aggregationList.get(0)-->Line_24 $$ assertThat(object, instanceOf(Number.class))[ FD ]
Line_5 $$ Map<String, Object> params = new HashMap()-->Line_7 $$ params.put("vars", varsMap)[ FD ]
Line_3 $$ Map<String, Object> varsMap = new HashMap()-->Line_7 $$ params.put("vars", varsMap)[ FD ]
Line_5 $$ Map<String, Object> params = new HashMap()-->Line_6 $$ params.put("_agg", new ArrayList())[ FD ]
Line_2 $$ public void testInitMapCombineReduceWithParamsAndReduceParams() -->Line_9 $$ reduceParams.put("multiplier", 4)[ CD ]
Line_2 $$ public void testInitMapCombineReduceWithParamsAndReduceParams() -->Line_12 $$ assertThat(response.getHits().getTotalHits(), equalTo(numDocs))[ CD ]
Line_2 $$ public void testInitMapCombineReduceWithParamsAndReduceParams() -->Line_15 $$ assertThat(aggregation, instanceOf(ScriptedMetric.class))[ CD ]
Line_2 $$ public void testInitMapCombineReduceWithParamsAndReduceParams() -->Line_3 $$ Map<String, Object> varsMap = new HashMap()[ CD ]
Line_2 $$ public void testInitMapCombineReduceWithParamsAndReduceParams() -->Line_21 $$ assertThat(aggregationList.size(), equalTo(1))[ CD ]
Line_2 $$ public void testInitMapCombineReduceWithParamsAndReduceParams() -->Line_5 $$ Map<String, Object> params = new HashMap()[ CD ]
Line_16 $$ ScriptedMetric scriptedMetricAggregation = (ScriptedMetric) aggregation-->Line_19 $$ assertThat(scriptedMetricAggregation.aggregation(), instanceOf(ArrayList.class))[ FD ]
Line_2 $$ public void testInitMapCombineReduceWithParamsAndReduceParams() -->Line_23 $$ assertThat(object, notNullValue())[ CD ]
Line_16 $$ ScriptedMetric scriptedMetricAggregation = (ScriptedMetric) aggregation-->Line_20 $$ List<?> aggregationList = (List<?>) scriptedMetricAggregation.aggregation()[ FD ]
Line_5 $$ Map<String, Object> params = new HashMap()-->Line_10 $$ SearchResponse response = client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(scriptedMetric("scripted").params(params).initScript(new Script("vars.multiplier = 3")).mapScript(new Script("_agg.add(vars.multiplier)")).combineScript(new Script("newaggregation = []; sum = 0;for (a in _agg) [ FD ]
Line_10 $$ SearchResponse response = client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(scriptedMetric("scripted").params(params).initScript(new Script("vars.multiplier = 3")).mapScript(new Script("_agg.add(vars.multiplier)")).combineScript(new Script("newaggregation = []; sum = 0;for (a in _agg) -->Line_11 $$ assertSearchResponse(response)[ FD ]
Line_2 $$ public void testInitMapCombineReduceWithParamsAndReduceParams() -->Line_8 $$ Map<String, Object> reduceParams = new HashMap()[ CD ]
Line_13 $$ Aggregation aggregation = response.getAggregations().get("scripted")-->Line_15 $$ assertThat(aggregation, instanceOf(ScriptedMetric.class))[ FD ]
Line_13 $$ Aggregation aggregation = response.getAggregations().get("scripted")-->Line_14 $$ assertThat(aggregation, notNullValue())[ FD ]
Line_16 $$ ScriptedMetric scriptedMetricAggregation = (ScriptedMetric) aggregation-->Line_17 $$ assertThat(scriptedMetricAggregation.getName(), equalTo("scripted"))[ FD ]
Line_2 $$ public void testInitMapCombineReduceWithParamsAndReduceParams() -->Line_18 $$ assertThat(scriptedMetricAggregation.aggregation(), notNullValue())[ CD ]
Line_2 $$ public void testInitMapCombineReduceWithParamsAndReduceParams() -->Line_24 $$ assertThat(object, instanceOf(Number.class))[ CD ]
Line_10 $$ SearchResponse response = client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(scriptedMetric("scripted").params(params).initScript(new Script("vars.multiplier = 3")).mapScript(new Script("_agg.add(vars.multiplier)")).combineScript(new Script("newaggregation = []; sum = 0;for (a in _agg) -->Line_13 $$ Aggregation aggregation = response.getAggregations().get("scripted")[ FD ]
Line_2 $$ public void testInitMapCombineReduceWithParamsAndReduceParams() -->Line_6 $$ params.put("_agg", new ArrayList())[ CD ]
Line_3 $$ Map<String, Object> varsMap = new HashMap()-->Line_4 $$ varsMap.put("multiplier", 1)[ FD ]
Line_10 $$ SearchResponse response = client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(scriptedMetric("scripted").params(params).initScript(new Script("vars.multiplier = 3")).mapScript(new Script("_agg.add(vars.multiplier)")).combineScript(new Script("newaggregation = []; sum = 0;for (a in _agg) -->Line_12 $$ assertThat(response.getHits().getTotalHits(), equalTo(numDocs))[ FD ]
Line_2 $$ public void testInitMapCombineReduceWithParamsAndReduceParams() -->Line_19 $$ assertThat(scriptedMetricAggregation.aggregation(), instanceOf(ArrayList.class))[ CD ]
Line_2 $$ public void testInitMapCombineReduceWithParamsAndReduceParams() -->Line_10 $$ SearchResponse response = client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(scriptedMetric("scripted").params(params).initScript(new Script("vars.multiplier = 3")).mapScript(new Script("_agg.add(vars.multiplier)")).combineScript(new Script("newaggregation = []; sum = 0;for (a in _agg) [ CD ]
Line_2 $$ public void testInitMapCombineReduceWithParamsAndReduceParams() -->Line_14 $$ assertThat(aggregation, notNullValue())[ CD ]
Line_2 $$ public void testInitMapCombineReduceWithParamsAndReduceParams() -->Line_4 $$ varsMap.put("multiplier", 1)[ CD ]
Line_2 $$ public void testInitMapCombineReduceWithParamsAndReduceParams() -->Line_22 $$ Object object = aggregationList.get(0)[ CD ]
Line_8 $$ Map<String, Object> reduceParams = new HashMap()-->Line_9 $$ reduceParams.put("multiplier", 4)[ FD ]
Line_20 $$ List<?> aggregationList = (List<?>) scriptedMetricAggregation.aggregation()-->Line_21 $$ assertThat(aggregationList.size(), equalTo(1))[ FD ]
Line_2 $$ public void testInitMapCombineReduceWithParamsAndReduceParams() -->Line_16 $$ ScriptedMetric scriptedMetricAggregation = (ScriptedMetric) aggregation[ CD ]
Line_20 $$ List<?> aggregationList = (List<?>) scriptedMetricAggregation.aggregation()-->Line_22 $$ Object object = aggregationList.get(0)[ FD ]
Line_2 $$ public void testInitMapCombineReduceWithParamsAndReduceParams() -->Line_20 $$ List<?> aggregationList = (List<?>) scriptedMetricAggregation.aggregation()[ CD ]
Line_16 $$ ScriptedMetric scriptedMetricAggregation = (ScriptedMetric) aggregation-->Line_18 $$ assertThat(scriptedMetricAggregation.aggregation(), notNullValue())[ FD ]
Line_2 $$ public void testInitMapCombineReduceWithParamsAndReduceParams() -->Line_11 $$ assertSearchResponse(response)[ CD ]
Line_2 $$ public void testInitMapCombineReduceWithParamsAndReduceParams() -->Line_13 $$ Aggregation aggregation = response.getAggregations().get("scripted")[ CD ]
