Line_5 $$ MockHttpServletResponse response = renderViewWithModel("i18n.tpl", model, Locale.FRANCE)-->Line_8 $$ assertEquals("<p>Include German</p><p>Hallo Spring</p>", response.getContentAsString())[ FD ]
Line_2 $$ public void renderI18nTemplate() throws Exception -->Line_7 $$ response = renderViewWithModel("i18n.tpl", model, Locale.GERMANY)[ CD ]
Line_2 $$ public void renderI18nTemplate() throws Exception -->Line_3 $$ Map<String, Object> model = new HashMap()[ CD ]
Line_2 $$ public void renderI18nTemplate() throws Exception -->Line_4 $$ model.put("name", "Spring")[ CD ]
Line_2 $$ public void renderI18nTemplate() throws Exception -->Line_8 $$ assertEquals("<p>Include German</p><p>Hallo Spring</p>", response.getContentAsString())[ CD ]
Line_7 $$ response = renderViewWithModel("i18n.tpl", model, Locale.GERMANY)-->Line_8 $$ assertEquals("<p>Include German</p><p>Hallo Spring</p>", response.getContentAsString())[ FD ]
Line_2 $$ public void renderI18nTemplate() throws Exception -->Line_6 $$ assertEquals("<p>Bonjour Spring</p>", response.getContentAsString())[ CD ]
Line_3 $$ Map<String, Object> model = new HashMap()-->Line_7 $$ response = renderViewWithModel("i18n.tpl", model, Locale.GERMANY)[ FD ]
Line_2 $$ public void renderI18nTemplate() throws Exception -->Line_9 $$ response = renderViewWithModel("i18n.tpl", model, new Locale("es"))[ CD ]
Line_5 $$ MockHttpServletResponse response = renderViewWithModel("i18n.tpl", model, Locale.FRANCE)-->Line_7 $$ response = renderViewWithModel("i18n.tpl", model, Locale.GERMANY)[ FD ]
Line_3 $$ Map<String, Object> model = new HashMap()-->Line_9 $$ response = renderViewWithModel("i18n.tpl", model, new Locale("es"))[ FD ]
Line_5 $$ MockHttpServletResponse response = renderViewWithModel("i18n.tpl", model, Locale.FRANCE)-->Line_10 $$ assertEquals("<p>Include Default</p><p>¡hola Spring</p>", response.getContentAsString())[ FD ]
Line_3 $$ Map<String, Object> model = new HashMap()-->Line_5 $$ MockHttpServletResponse response = renderViewWithModel("i18n.tpl", model, Locale.FRANCE)[ FD ]
Line_9 $$ response = renderViewWithModel("i18n.tpl", model, new Locale("es"))-->Line_10 $$ assertEquals("<p>Include Default</p><p>¡hola Spring</p>", response.getContentAsString())[ FD ]
Line_7 $$ response = renderViewWithModel("i18n.tpl", model, Locale.GERMANY)-->Line_10 $$ assertEquals("<p>Include Default</p><p>¡hola Spring</p>", response.getContentAsString())[ FD ]
Line_2 $$ public void renderI18nTemplate() throws Exception -->Line_5 $$ MockHttpServletResponse response = renderViewWithModel("i18n.tpl", model, Locale.FRANCE)[ CD ]
Line_2 $$ public void renderI18nTemplate() throws Exception -->Line_10 $$ assertEquals("<p>Include Default</p><p>¡hola Spring</p>", response.getContentAsString())[ CD ]
Line_5 $$ MockHttpServletResponse response = renderViewWithModel("i18n.tpl", model, Locale.FRANCE)-->Line_6 $$ assertEquals("<p>Bonjour Spring</p>", response.getContentAsString())[ FD ]
Line_5 $$ MockHttpServletResponse response = renderViewWithModel("i18n.tpl", model, Locale.FRANCE)-->Line_9 $$ response = renderViewWithModel("i18n.tpl", model, new Locale("es"))[ FD ]
Line_7 $$ response = renderViewWithModel("i18n.tpl", model, Locale.GERMANY)-->Line_9 $$ response = renderViewWithModel("i18n.tpl", model, new Locale("es"))[ FD ]
Line_3 $$ Map<String, Object> model = new HashMap()-->Line_4 $$ model.put("name", "Spring")[ FD ]
