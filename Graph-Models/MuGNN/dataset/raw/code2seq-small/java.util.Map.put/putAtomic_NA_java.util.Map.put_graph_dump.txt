Line_2 $$ public V putAtomic(C instance, K key, V value, Map<K, V> snapshot) -->Line_3 $$ if (key == null) [ FD ]
Line_16 $$ newMap = new FastCopyHashMap<K, V>(snapshot)-->Line_23 $$ if (updater.compareAndSet(instance, snapshot, newMap)) [ FD ]
Line_23 $$ if (updater.compareAndSet(instance, snapshot, newMap)) -->Line_24 $$ return null[ CD ]
Line_20 $$ newMap = new FastCopyHashMap<K, V>(snapshot)-->Line_21 $$ newMap.put(key, value)[ FD ]
Line_10 $$ if (oldSize == 1) -->Line_21 $$ newMap.put(key, value)[ CD ]
Line_9 $$ newMap = Collections.singletonMap(key, value)-->Line_23 $$ if (updater.compareAndSet(instance, snapshot, newMap)) [ FD ]
Line_2 $$ public V putAtomic(C instance, K key, V value, Map<K, V> snapshot) -->Line_8 $$ if (oldSize == 0) [ CD ]
Line_10 $$ if (oldSize == 1) -->Line_12 $$ final K oldKey = entry.getKey()[ CD ]
Line_13 $$ if (oldKey.equals(key)) -->Line_14 $$ return entry.getValue()[ CD ]
Line_2 $$ public V putAtomic(C instance, K key, V value, Map<K, V> snapshot) -->Line_9 $$ newMap = Collections.singletonMap(key, value)[ FD ]
Line_8 $$ if (oldSize == 0) -->Line_9 $$ newMap = Collections.singletonMap(key, value)[ CD ]
Line_2 $$ public V putAtomic(C instance, K key, V value, Map<K, V> snapshot) -->Line_7 $$ final int oldSize = snapshot.size()[ CD ]
Line_9 $$ newMap = Collections.singletonMap(key, value)-->Line_17 $$ newMap.put(key, value)[ FD ]
Line_6 $$ final Map<K, V> newMap-->Line_20 $$ newMap = new FastCopyHashMap<K, V>(snapshot)[ FD ]
Line_7 $$ final int oldSize = snapshot.size()-->Line_8 $$ if (oldSize == 0) [ FD ]
Line_10 $$ if (oldSize == 1) -->Line_20 $$ newMap = new FastCopyHashMap<K, V>(snapshot)[ CD ]
Line_11 $$ final Map.Entry<K, V> entry = snapshot.entrySet().iterator().next()-->Line_14 $$ return entry.getValue()[ FD ]
Line_6 $$ final Map<K, V> newMap-->Line_17 $$ newMap.put(key, value)[ FD ]
Line_11 $$ final Map.Entry<K, V> entry = snapshot.entrySet().iterator().next()-->Line_12 $$ final K oldKey = entry.getKey()[ FD ]
Line_16 $$ newMap = new FastCopyHashMap<K, V>(snapshot)-->Line_20 $$ newMap = new FastCopyHashMap<K, V>(snapshot)[ FD ]
Line_2 $$ public V putAtomic(C instance, K key, V value, Map<K, V> snapshot) -->Line_3 $$ if (key == null) [ CD ]
Line_7 $$ final int oldSize = snapshot.size()-->Line_10 $$ if (oldSize == 1) [ FD ]
Line_2 $$ public V putAtomic(C instance, K key, V value, Map<K, V> snapshot) -->Line_21 $$ newMap.put(key, value)[ FD ]
Line_2 $$ public V putAtomic(C instance, K key, V value, Map<K, V> snapshot) -->Line_23 $$ if (updater.compareAndSet(instance, snapshot, newMap)) [ FD ]
Line_10 $$ if (oldSize == 1) -->Line_13 $$ if (oldKey.equals(key)) [ CD ]
Line_6 $$ final Map<K, V> newMap-->Line_16 $$ newMap = new FastCopyHashMap<K, V>(snapshot)[ FD ]
Line_10 $$ if (oldSize == 1) -->Line_11 $$ final Map.Entry<K, V> entry = snapshot.entrySet().iterator().next()[ CD ]
Line_2 $$ public V putAtomic(C instance, K key, V value, Map<K, V> snapshot) -->Line_6 $$ final Map<K, V> newMap[ CD ]
Line_2 $$ public V putAtomic(C instance, K key, V value, Map<K, V> snapshot) -->Line_17 $$ newMap.put(key, value)[ FD ]
Line_6 $$ final Map<K, V> newMap-->Line_9 $$ newMap = Collections.singletonMap(key, value)[ FD ]
Line_6 $$ final Map<K, V> newMap-->Line_23 $$ if (updater.compareAndSet(instance, snapshot, newMap)) [ FD ]
Line_9 $$ newMap = Collections.singletonMap(key, value)-->Line_20 $$ newMap = new FastCopyHashMap<K, V>(snapshot)[ FD ]
Line_6 $$ final Map<K, V> newMap-->Line_21 $$ newMap.put(key, value)[ FD ]
Line_16 $$ newMap = new FastCopyHashMap<K, V>(snapshot)-->Line_21 $$ newMap.put(key, value)[ FD ]
Line_2 $$ public V putAtomic(C instance, K key, V value, Map<K, V> snapshot) -->Line_11 $$ final Map.Entry<K, V> entry = snapshot.entrySet().iterator().next()[ FD ]
Line_13 $$ if (oldKey.equals(key)) -->Line_16 $$ newMap = new FastCopyHashMap<K, V>(snapshot)[ CD ]
Line_2 $$ public V putAtomic(C instance, K key, V value, Map<K, V> snapshot) -->Line_13 $$ if (oldKey.equals(key)) [ FD ]
Line_9 $$ newMap = Collections.singletonMap(key, value)-->Line_16 $$ newMap = new FastCopyHashMap<K, V>(snapshot)[ FD ]
Line_23 $$ if (updater.compareAndSet(instance, snapshot, newMap)) -->Line_26 $$ return value[ CD ]
Line_9 $$ newMap = Collections.singletonMap(key, value)-->Line_21 $$ newMap.put(key, value)[ FD ]
Line_8 $$ if (oldSize == 0) -->Line_10 $$ if (oldSize == 1) [ CD ]
Line_2 $$ public V putAtomic(C instance, K key, V value, Map<K, V> snapshot) -->Line_23 $$ if (updater.compareAndSet(instance, snapshot, newMap)) [ CD ]
Line_12 $$ final K oldKey = entry.getKey()-->Line_13 $$ if (oldKey.equals(key)) [ FD ]
Line_16 $$ newMap = new FastCopyHashMap<K, V>(snapshot)-->Line_17 $$ newMap.put(key, value)[ FD ]
Line_13 $$ if (oldKey.equals(key)) -->Line_17 $$ newMap.put(key, value)[ CD ]
Line_20 $$ newMap = new FastCopyHashMap<K, V>(snapshot)-->Line_23 $$ if (updater.compareAndSet(instance, snapshot, newMap)) [ FD ]
Line_2 $$ public V putAtomic(C instance, K key, V value, Map<K, V> snapshot) -->Line_7 $$ final int oldSize = snapshot.size()[ FD ]
