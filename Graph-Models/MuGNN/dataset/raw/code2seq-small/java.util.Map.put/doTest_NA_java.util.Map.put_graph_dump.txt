Line_3 $$ Map<String, Object> vars = new HashMap<String, Object>()-->Line_6 $$ vars.put("myarray", Arrays.asList("foo"))[ FD ]
Line_3 $$ Map<String, Object> vars = new HashMap<String, Object>()-->Line_7 $$ vars.put("myobject", new MyObject())[ FD ]
Line_2 $$ private void doTest(String script) -->Line_7 $$ vars.put("myobject", new MyObject())[ CD ]
Line_3 $$ Map<String, Object> vars = new HashMap<String, Object>()-->Line_8 $$ se.executable(new CompiledScript(ScriptService.ScriptType.INLINE, "test", "js", se.compile(script, Collections.emptyMap())), vars).run()[ FD ]
Line_2 $$ private void doTest(String script) -->Line_8 $$ se.executable(new CompiledScript(ScriptService.ScriptType.INLINE, "test", "js", se.compile(script, Collections.emptyMap())), vars).run()[ FD ]
Line_2 $$ private void doTest(String script) -->Line_8 $$ se.executable(new CompiledScript(ScriptService.ScriptType.INLINE, "test", "js", se.compile(script, Collections.emptyMap())), vars).run()[ CD ]
Line_2 $$ private void doTest(String script) -->Line_4 $$ vars.put("doc", Collections.singletonMap("foo", new AbstractMap.SimpleEntry<Object, Integer>(null, 4)))[ CD ]
Line_2 $$ private void doTest(String script) -->Line_6 $$ vars.put("myarray", Arrays.asList("foo"))[ CD ]
Line_2 $$ private void doTest(String script) -->Line_5 $$ vars.put("mylist", Arrays.asList("foo"))[ CD ]
Line_2 $$ private void doTest(String script) -->Line_3 $$ Map<String, Object> vars = new HashMap<String, Object>()[ CD ]
Line_3 $$ Map<String, Object> vars = new HashMap<String, Object>()-->Line_5 $$ vars.put("mylist", Arrays.asList("foo"))[ FD ]
Line_3 $$ Map<String, Object> vars = new HashMap<String, Object>()-->Line_4 $$ vars.put("doc", Collections.singletonMap("foo", new AbstractMap.SimpleEntry<Object, Integer>(null, 4)))[ FD ]
