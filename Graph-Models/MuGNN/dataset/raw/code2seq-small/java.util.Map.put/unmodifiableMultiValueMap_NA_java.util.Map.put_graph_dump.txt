Line_2 $$ public static <K, V> MultiValueMap<K, V> unmodifiableMultiValueMap(MultiValueMap<? extends K, ? extends V> map) -->Line_5 $$ for (Map.Entry<? extends K, ? extends List<? extends V>> entry : map.entrySet()) [ FD ]
Line_2 $$ public static <K, V> MultiValueMap<K, V> unmodifiableMultiValueMap(MultiValueMap<? extends K, ? extends V> map) -->Line_9 $$ Map<K, List<V>> unmodifiableMap = Collections.unmodifiableMap(result)[ CD ]
Line_5 $$ for (Map.Entry<? extends K, ? extends List<? extends V>> entry : map.entrySet()) -->Line_6 $$ List<? extends V> values = Collections.unmodifiableList(entry.getValue())[ FD ]
Line_5 $$ for (Map.Entry<? extends K, ? extends List<? extends V>> entry : map.entrySet()) -->Line_7 $$ result.put(entry.getKey(), (List<V>) values)[ FD ]
Line_2 $$ public static <K, V> MultiValueMap<K, V> unmodifiableMultiValueMap(MultiValueMap<? extends K, ? extends V> map) -->Line_3 $$ Assert.notNull(map, "'map' must not be null")[ FD ]
Line_2 $$ public static <K, V> MultiValueMap<K, V> unmodifiableMultiValueMap(MultiValueMap<? extends K, ? extends V> map) -->Line_4 $$ Map<K, List<V>> result = new LinkedHashMap<K, List<V>>(map.size())[ CD ]
Line_2 $$ public static <K, V> MultiValueMap<K, V> unmodifiableMultiValueMap(MultiValueMap<? extends K, ? extends V> map) -->Line_3 $$ Assert.notNull(map, "'map' must not be null")[ CD ]
Line_9 $$ Map<K, List<V>> unmodifiableMap = Collections.unmodifiableMap(result)-->Line_10 $$ return toMultiValueMap(unmodifiableMap)[ FD ]
Line_4 $$ Map<K, List<V>> result = new LinkedHashMap<K, List<V>>(map.size())-->Line_7 $$ result.put(entry.getKey(), (List<V>) values)[ FD ]
Line_2 $$ public static <K, V> MultiValueMap<K, V> unmodifiableMultiValueMap(MultiValueMap<? extends K, ? extends V> map) -->Line_10 $$ return toMultiValueMap(unmodifiableMap)[ CD ]
Line_4 $$ Map<K, List<V>> result = new LinkedHashMap<K, List<V>>(map.size())-->Line_9 $$ Map<K, List<V>> unmodifiableMap = Collections.unmodifiableMap(result)[ FD ]
Line_2 $$ public static <K, V> MultiValueMap<K, V> unmodifiableMultiValueMap(MultiValueMap<? extends K, ? extends V> map) -->Line_4 $$ Map<K, List<V>> result = new LinkedHashMap<K, List<V>>(map.size())[ FD ]
