Line_10 $$ map = new LinkedHashMap<String, List<String>>()-->Line_14 $$ map.put(attribute.getName(), aliasNames)[ FD ]
Line_7 $$ if (map != null) -->Line_8 $$ return map[ CD ]
Line_2 $$ static Map<String, List<String>> getAttributeAliasMap(Class<? extends Annotation> annotationType) -->Line_10 $$ map = new LinkedHashMap<String, List<String>>()[ CD ]
Line_2 $$ static Map<String, List<String>> getAttributeAliasMap(Class<? extends Annotation> annotationType) -->Line_6 $$ Map<String, List<String>> map = attributeAliasesCache.get(annotationType)[ FD ]
Line_2 $$ static Map<String, List<String>> getAttributeAliasMap(Class<? extends Annotation> annotationType) -->Line_11 $$ for (Method attribute : getAttributeMethods(annotationType)) [ FD ]
Line_6 $$ Map<String, List<String>> map = attributeAliasesCache.get(annotationType)-->Line_14 $$ map.put(attribute.getName(), aliasNames)[ FD ]
Line_2 $$ static Map<String, List<String>> getAttributeAliasMap(Class<? extends Annotation> annotationType) -->Line_17 $$ attributeAliasesCache.put(annotationType, map)[ CD ]
Line_3 $$ if (annotationType == null) -->Line_4 $$ return Collections.emptyMap()[ CD ]
Line_6 $$ Map<String, List<String>> map = attributeAliasesCache.get(annotationType)-->Line_17 $$ attributeAliasesCache.put(annotationType, map)[ FD ]
Line_2 $$ static Map<String, List<String>> getAttributeAliasMap(Class<? extends Annotation> annotationType) -->Line_7 $$ if (map != null) [ CD ]
Line_2 $$ static Map<String, List<String>> getAttributeAliasMap(Class<? extends Annotation> annotationType) -->Line_6 $$ Map<String, List<String>> map = attributeAliasesCache.get(annotationType)[ CD ]
Line_11 $$ for (Method attribute : getAttributeMethods(annotationType)) -->Line_14 $$ map.put(attribute.getName(), aliasNames)[ FD ]
Line_2 $$ static Map<String, List<String>> getAttributeAliasMap(Class<? extends Annotation> annotationType) -->Line_18 $$ return map[ CD ]
Line_13 $$ if (!aliasNames.isEmpty()) -->Line_14 $$ map.put(attribute.getName(), aliasNames)[ CD ]
Line_12 $$ List<String> aliasNames = getAttributeAliasNames(attribute)-->Line_14 $$ map.put(attribute.getName(), aliasNames)[ FD ]
Line_11 $$ for (Method attribute : getAttributeMethods(annotationType)) -->Line_12 $$ List<String> aliasNames = getAttributeAliasNames(attribute)[ FD ]
Line_12 $$ List<String> aliasNames = getAttributeAliasNames(attribute)-->Line_13 $$ if (!aliasNames.isEmpty()) [ FD ]
Line_2 $$ static Map<String, List<String>> getAttributeAliasMap(Class<? extends Annotation> annotationType) -->Line_3 $$ if (annotationType == null) [ CD ]
Line_10 $$ map = new LinkedHashMap<String, List<String>>()-->Line_17 $$ attributeAliasesCache.put(annotationType, map)[ FD ]
Line_6 $$ Map<String, List<String>> map = attributeAliasesCache.get(annotationType)-->Line_7 $$ if (map != null) [ FD ]
Line_2 $$ static Map<String, List<String>> getAttributeAliasMap(Class<? extends Annotation> annotationType) -->Line_17 $$ attributeAliasesCache.put(annotationType, map)[ FD ]
Line_6 $$ Map<String, List<String>> map = attributeAliasesCache.get(annotationType)-->Line_10 $$ map = new LinkedHashMap<String, List<String>>()[ FD ]
Line_2 $$ static Map<String, List<String>> getAttributeAliasMap(Class<? extends Annotation> annotationType) -->Line_3 $$ if (annotationType == null) [ FD ]
