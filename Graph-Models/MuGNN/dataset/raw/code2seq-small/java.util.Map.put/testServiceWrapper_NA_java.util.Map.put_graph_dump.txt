Line_8 $$ TrackedOne trackedOne = new TrackedOne()-->Line_12 $$ Assert.assertEquals(trackedOne, serviceWrapper.getService())[ FD ]
Line_13 $$ Map<String, Object> serviceWrapperProperties = serviceWrapper.getProperties()-->Line_15 $$ Assert.assertTrue(serviceWrapperProperties.containsKey("target"))[ FD ]
Line_5 $$ Map<String, Object> properties = new Hashtable()-->Line_7 $$ properties.put("target", "aTarget")[ FD ]
Line_3 $$ ServiceTrackerMap<String, ServiceWrapper<TrackedOne>> serviceTrackerMap = ServiceTrackerCollections.openSingleValueMap(TrackedOne.class, "target", ServiceTrackerCustomizers.<TrackedOne>serviceWrapper())-->Line_20 $$ serviceTrackerMap.close()[ FD ]
Line_5 $$ Map<String, Object> properties = new Hashtable()-->Line_6 $$ properties.put("property", "aProperty")[ FD ]
Line_8 $$ TrackedOne trackedOne = new TrackedOne()-->Line_10 $$ ServiceRegistration<TrackedOne> serviceRegistration = registry.registerService(TrackedOne.class, trackedOne, properties)[ FD ]
Line_13 $$ Map<String, Object> serviceWrapperProperties = serviceWrapper.getProperties()-->Line_14 $$ Assert.assertTrue(serviceWrapperProperties.containsKey("property"))[ FD ]
Line_10 $$ ServiceRegistration<TrackedOne> serviceRegistration = registry.registerService(TrackedOne.class, trackedOne, properties)-->Line_18 $$ serviceRegistration.unregister()[ FD ]
Line_13 $$ Map<String, Object> serviceWrapperProperties = serviceWrapper.getProperties()-->Line_17 $$ Assert.assertEquals("aTarget", serviceWrapperProperties.get("target"))[ FD ]
Line_3 $$ ServiceTrackerMap<String, ServiceWrapper<TrackedOne>> serviceTrackerMap = ServiceTrackerCollections.openSingleValueMap(TrackedOne.class, "target", ServiceTrackerCustomizers.<TrackedOne>serviceWrapper())-->Line_11 $$ ServiceWrapper<TrackedOne> serviceWrapper = serviceTrackerMap.getService("aTarget")[ FD ]
Line_2 $$ public void testServiceWrapper() -->Line_3 $$ ServiceTrackerMap<String, ServiceWrapper<TrackedOne>> serviceTrackerMap = ServiceTrackerCollections.openSingleValueMap(TrackedOne.class, "target", ServiceTrackerCustomizers.<TrackedOne>serviceWrapper())[ CD ]
Line_5 $$ Map<String, Object> properties = new Hashtable()-->Line_10 $$ ServiceRegistration<TrackedOne> serviceRegistration = registry.registerService(TrackedOne.class, trackedOne, properties)[ FD ]
Line_13 $$ Map<String, Object> serviceWrapperProperties = serviceWrapper.getProperties()-->Line_16 $$ Assert.assertEquals("aProperty", serviceWrapperProperties.get("property"))[ FD ]
Line_9 $$ Registry registry = RegistryUtil.getRegistry()-->Line_10 $$ ServiceRegistration<TrackedOne> serviceRegistration = registry.registerService(TrackedOne.class, trackedOne, properties)[ FD ]
Line_11 $$ ServiceWrapper<TrackedOne> serviceWrapper = serviceTrackerMap.getService("aTarget")-->Line_13 $$ Map<String, Object> serviceWrapperProperties = serviceWrapper.getProperties()[ FD ]
Line_11 $$ ServiceWrapper<TrackedOne> serviceWrapper = serviceTrackerMap.getService("aTarget")-->Line_12 $$ Assert.assertEquals(trackedOne, serviceWrapper.getService())[ FD ]
