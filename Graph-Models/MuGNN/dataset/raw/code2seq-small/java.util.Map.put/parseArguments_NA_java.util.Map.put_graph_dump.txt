Line_9 $$ String key = arg.substring(0, pos).trim()-->Line_12 $$ key = key.substring(2)[ FD ]
Line_11 $$ if (key.startsWith("-D")) -->Line_15 $$ arguments.put(key, value)[ CD ]
Line_9 $$ String key = arg.substring(0, pos).trim()-->Line_15 $$ arguments.put(key, value)[ FD ]
Line_4 $$ for (String arg : args) -->Line_5 $$ int pos = arg.indexOf('=')[ FD ]
Line_5 $$ int pos = arg.indexOf('=')-->Line_9 $$ String key = arg.substring(0, pos).trim()[ FD ]
Line_12 $$ key = key.substring(2)-->Line_13 $$ System.setProperty(key, value)[ FD ]
Line_9 $$ String key = arg.substring(0, pos).trim()-->Line_13 $$ System.setProperty(key, value)[ FD ]
Line_9 $$ String key = arg.substring(0, pos).trim()-->Line_11 $$ if (key.startsWith("-D")) [ FD ]
Line_10 $$ String value = arg.substring(pos + 1).trim()-->Line_15 $$ arguments.put(key, value)[ FD ]
Line_2 $$ public static Map<String, String> parseArguments(String[] args) -->Line_18 $$ return arguments[ CD ]
Line_11 $$ if (key.startsWith("-D")) -->Line_13 $$ System.setProperty(key, value)[ CD ]
Line_4 $$ for (String arg : args) -->Line_10 $$ String value = arg.substring(pos + 1).trim()[ FD ]
Line_2 $$ public static Map<String, String> parseArguments(String[] args) -->Line_3 $$ Map<String, String> arguments = new ArgumentsMap()[ CD ]
Line_11 $$ if (key.startsWith("-D")) -->Line_12 $$ key = key.substring(2)[ CD ]
Line_10 $$ String value = arg.substring(pos + 1).trim()-->Line_13 $$ System.setProperty(key, value)[ FD ]
Line_3 $$ Map<String, String> arguments = new ArgumentsMap()-->Line_15 $$ arguments.put(key, value)[ FD ]
Line_5 $$ int pos = arg.indexOf('=')-->Line_6 $$ if (pos <= 0) [ FD ]
Line_12 $$ key = key.substring(2)-->Line_15 $$ arguments.put(key, value)[ FD ]
Line_4 $$ for (String arg : args) -->Line_9 $$ String key = arg.substring(0, pos).trim()[ FD ]
