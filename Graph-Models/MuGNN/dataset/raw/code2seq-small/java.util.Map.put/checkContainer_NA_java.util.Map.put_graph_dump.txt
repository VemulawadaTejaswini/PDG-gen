Line_2 $$ private static boolean checkContainer(@NotNull final PsiMethod patternMethod, @NotNull PsiElement container) -->Line_3 $$ final String name = patternMethod.getName()[ CD ]
Line_2 $$ private static boolean checkContainer(@NotNull final PsiMethod patternMethod, @NotNull PsiElement container) -->Line_6 $$ GROOVY_OBJECT_METHODS_CACHE.putCachedValue(container, cached = ContainerUtil.newConcurrentMap())[ FD ]
Line_6 $$ GROOVY_OBJECT_METHODS_CACHE.putCachedValue(container, cached = ContainerUtil.newConcurrentMap())-->Line_8 $$ Boolean cachedResult = cached.get(name)[ FD ]
Line_6 $$ GROOVY_OBJECT_METHODS_CACHE.putCachedValue(container, cached = ContainerUtil.newConcurrentMap())-->Line_13 $$ cached.put(name, result)[ FD ]
Line_2 $$ private static boolean checkContainer(@NotNull final PsiMethod patternMethod, @NotNull PsiElement container) -->Line_12 $$ boolean result = doCheckContainer(patternMethod, container, name)[ FD ]
Line_5 $$ if (cached == null) -->Line_6 $$ GROOVY_OBJECT_METHODS_CACHE.putCachedValue(container, cached = ContainerUtil.newConcurrentMap())[ CD ]
Line_4 $$ Map<String, Boolean> cached = GROOVY_OBJECT_METHODS_CACHE.getCachedValue(container)-->Line_13 $$ cached.put(name, result)[ FD ]
Line_3 $$ final String name = patternMethod.getName()-->Line_8 $$ Boolean cachedResult = cached.get(name)[ FD ]
Line_4 $$ Map<String, Boolean> cached = GROOVY_OBJECT_METHODS_CACHE.getCachedValue(container)-->Line_6 $$ GROOVY_OBJECT_METHODS_CACHE.putCachedValue(container, cached = ContainerUtil.newConcurrentMap())[ FD ]
Line_2 $$ private static boolean checkContainer(@NotNull final PsiMethod patternMethod, @NotNull PsiElement container) -->Line_4 $$ Map<String, Boolean> cached = GROOVY_OBJECT_METHODS_CACHE.getCachedValue(container)[ FD ]
Line_2 $$ private static boolean checkContainer(@NotNull final PsiMethod patternMethod, @NotNull PsiElement container) -->Line_4 $$ Map<String, Boolean> cached = GROOVY_OBJECT_METHODS_CACHE.getCachedValue(container)[ CD ]
Line_3 $$ final String name = patternMethod.getName()-->Line_13 $$ cached.put(name, result)[ FD ]
Line_2 $$ private static boolean checkContainer(@NotNull final PsiMethod patternMethod, @NotNull PsiElement container) -->Line_9 $$ if (cachedResult != null) [ CD ]
Line_9 $$ if (cachedResult != null) -->Line_10 $$ return cachedResult.booleanValue()[ CD ]
Line_8 $$ Boolean cachedResult = cached.get(name)-->Line_9 $$ if (cachedResult != null) [ FD ]
Line_2 $$ private static boolean checkContainer(@NotNull final PsiMethod patternMethod, @NotNull PsiElement container) -->Line_13 $$ cached.put(name, result)[ CD ]
Line_2 $$ private static boolean checkContainer(@NotNull final PsiMethod patternMethod, @NotNull PsiElement container) -->Line_3 $$ final String name = patternMethod.getName()[ FD ]
Line_3 $$ final String name = patternMethod.getName()-->Line_12 $$ boolean result = doCheckContainer(patternMethod, container, name)[ FD ]
Line_2 $$ private static boolean checkContainer(@NotNull final PsiMethod patternMethod, @NotNull PsiElement container) -->Line_14 $$ return result[ CD ]
Line_4 $$ Map<String, Boolean> cached = GROOVY_OBJECT_METHODS_CACHE.getCachedValue(container)-->Line_8 $$ Boolean cachedResult = cached.get(name)[ FD ]
Line_4 $$ Map<String, Boolean> cached = GROOVY_OBJECT_METHODS_CACHE.getCachedValue(container)-->Line_5 $$ if (cached == null) [ FD ]
Line_2 $$ private static boolean checkContainer(@NotNull final PsiMethod patternMethod, @NotNull PsiElement container) -->Line_12 $$ boolean result = doCheckContainer(patternMethod, container, name)[ CD ]
Line_8 $$ Boolean cachedResult = cached.get(name)-->Line_10 $$ return cachedResult.booleanValue()[ FD ]
Line_2 $$ private static boolean checkContainer(@NotNull final PsiMethod patternMethod, @NotNull PsiElement container) -->Line_5 $$ if (cached == null) [ CD ]
Line_2 $$ private static boolean checkContainer(@NotNull final PsiMethod patternMethod, @NotNull PsiElement container) -->Line_8 $$ Boolean cachedResult = cached.get(name)[ CD ]
Line_12 $$ boolean result = doCheckContainer(patternMethod, container, name)-->Line_13 $$ cached.put(name, result)[ FD ]
