Line_2 $$ public void removeAclEntries(Path path, List<AclEntry> aclSpec) throws IOException -->Line_6 $$ HttpURLConnection conn = getConnection(Operation.REMOVEACLENTRIES.getMethod(), params, path, true)[ FD ]
Line_6 $$ HttpURLConnection conn = getConnection(Operation.REMOVEACLENTRIES.getMethod(), params, path, true)-->Line_7 $$ HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK)[ FD ]
Line_3 $$ Map<String, String> params = new HashMap<String, String>()-->Line_4 $$ params.put(OP_PARAM, Operation.REMOVEACLENTRIES.toString())[ FD ]
Line_2 $$ public void removeAclEntries(Path path, List<AclEntry> aclSpec) throws IOException -->Line_6 $$ HttpURLConnection conn = getConnection(Operation.REMOVEACLENTRIES.getMethod(), params, path, true)[ CD ]
Line_3 $$ Map<String, String> params = new HashMap<String, String>()-->Line_6 $$ HttpURLConnection conn = getConnection(Operation.REMOVEACLENTRIES.getMethod(), params, path, true)[ FD ]
Line_2 $$ public void removeAclEntries(Path path, List<AclEntry> aclSpec) throws IOException -->Line_5 $$ params.put(ACLSPEC_PARAM, AclEntry.aclSpecToString(aclSpec))[ CD ]
Line_3 $$ Map<String, String> params = new HashMap<String, String>()-->Line_5 $$ params.put(ACLSPEC_PARAM, AclEntry.aclSpecToString(aclSpec))[ FD ]
Line_2 $$ public void removeAclEntries(Path path, List<AclEntry> aclSpec) throws IOException -->Line_4 $$ params.put(OP_PARAM, Operation.REMOVEACLENTRIES.toString())[ CD ]
Line_2 $$ public void removeAclEntries(Path path, List<AclEntry> aclSpec) throws IOException -->Line_3 $$ Map<String, String> params = new HashMap<String, String>()[ CD ]
Line_2 $$ public void removeAclEntries(Path path, List<AclEntry> aclSpec) throws IOException -->Line_7 $$ HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK)[ CD ]
Line_2 $$ public void removeAclEntries(Path path, List<AclEntry> aclSpec) throws IOException -->Line_5 $$ params.put(ACLSPEC_PARAM, AclEntry.aclSpecToString(aclSpec))[ FD ]
