Line_2 $$ public void testGetServiceReferencesByClassNameAndFilterString() throws Exception -->Line_10 $$ Assert.assertNotNull(serviceRegistrationB)[ CD ]
Line_2 $$ public void testGetServiceReferencesByClassNameAndFilterString() throws Exception -->Line_11 $$ String filterString = "(a.property=G)"[ CD ]
Line_2 $$ public void testGetServiceReferencesByClassNameAndFilterString() throws Exception -->Line_6 $$ InterfaceOne interfaceOneB = getInstance()[ CD ]
Line_3 $$ InterfaceOne interfaceOneA = getInstance()-->Line_4 $$ ServiceRegistration<InterfaceOne> serviceRegistrationA = _registry.registerService(InterfaceOne.class, interfaceOneA)[ FD ]
Line_2 $$ public void testGetServiceReferencesByClassNameAndFilterString() throws Exception -->Line_14 $$ Assert.assertEquals(1, serviceReferences.length)[ CD ]
Line_11 $$ String filterString = "(a.property=G)"-->Line_19 $$ serviceReferences = _registry.getServiceReferences(InterfaceOne.class.getName(), filterString)[ FD ]
Line_2 $$ public void testGetServiceReferencesByClassNameAndFilterString() throws Exception -->Line_9 $$ ServiceRegistration<InterfaceOne> serviceRegistrationB = _registry.registerService(InterfaceOne.class, interfaceOneB, properties)[ CD ]
Line_2 $$ public void testGetServiceReferencesByClassNameAndFilterString() throws Exception -->Line_20 $$ Assert.assertNull(serviceReferences)[ CD ]
Line_7 $$ Map<String, Object> properties = new HashMap()-->Line_8 $$ properties.put("a.property", "G")[ FD ]
Line_6 $$ InterfaceOne interfaceOneB = getInstance()-->Line_9 $$ ServiceRegistration<InterfaceOne> serviceRegistrationB = _registry.registerService(InterfaceOne.class, interfaceOneB, properties)[ FD ]
Line_7 $$ Map<String, Object> properties = new HashMap()-->Line_9 $$ ServiceRegistration<InterfaceOne> serviceRegistrationB = _registry.registerService(InterfaceOne.class, interfaceOneB, properties)[ FD ]
Line_2 $$ public void testGetServiceReferencesByClassNameAndFilterString() throws Exception -->Line_15 $$ serviceRegistrationA.unregister()[ CD ]
Line_4 $$ ServiceRegistration<InterfaceOne> serviceRegistrationA = _registry.registerService(InterfaceOne.class, interfaceOneA)-->Line_15 $$ serviceRegistrationA.unregister()[ FD ]
Line_2 $$ public void testGetServiceReferencesByClassNameAndFilterString() throws Exception -->Line_5 $$ Assert.assertNotNull(serviceRegistrationA)[ CD ]
Line_2 $$ public void testGetServiceReferencesByClassNameAndFilterString() throws Exception -->Line_17 $$ Assert.assertEquals(1, serviceReferences.length)[ CD ]
Line_12 $$ ServiceReference<InterfaceOne>[] serviceReferences = _registry.getServiceReferences(InterfaceOne.class.getName(), filterString)-->Line_19 $$ serviceReferences = _registry.getServiceReferences(InterfaceOne.class.getName(), filterString)[ FD ]
Line_11 $$ String filterString = "(a.property=G)"-->Line_16 $$ serviceReferences = _registry.getServiceReferences(InterfaceOne.class.getName(), filterString)[ FD ]
Line_2 $$ public void testGetServiceReferencesByClassNameAndFilterString() throws Exception -->Line_8 $$ properties.put("a.property", "G")[ CD ]
Line_2 $$ public void testGetServiceReferencesByClassNameAndFilterString() throws Exception -->Line_13 $$ Assert.assertNotNull(serviceReferences)[ CD ]
Line_12 $$ ServiceReference<InterfaceOne>[] serviceReferences = _registry.getServiceReferences(InterfaceOne.class.getName(), filterString)-->Line_16 $$ serviceReferences = _registry.getServiceReferences(InterfaceOne.class.getName(), filterString)[ FD ]
Line_2 $$ public void testGetServiceReferencesByClassNameAndFilterString() throws Exception -->Line_12 $$ ServiceReference<InterfaceOne>[] serviceReferences = _registry.getServiceReferences(InterfaceOne.class.getName(), filterString)[ CD ]
Line_9 $$ ServiceRegistration<InterfaceOne> serviceRegistrationB = _registry.registerService(InterfaceOne.class, interfaceOneB, properties)-->Line_18 $$ serviceRegistrationB.unregister()[ FD ]
Line_2 $$ public void testGetServiceReferencesByClassNameAndFilterString() throws Exception -->Line_4 $$ ServiceRegistration<InterfaceOne> serviceRegistrationA = _registry.registerService(InterfaceOne.class, interfaceOneA)[ CD ]
Line_12 $$ ServiceReference<InterfaceOne>[] serviceReferences = _registry.getServiceReferences(InterfaceOne.class.getName(), filterString)-->Line_20 $$ Assert.assertNull(serviceReferences)[ FD ]
Line_2 $$ public void testGetServiceReferencesByClassNameAndFilterString() throws Exception -->Line_7 $$ Map<String, Object> properties = new HashMap()[ CD ]
Line_2 $$ public void testGetServiceReferencesByClassNameAndFilterString() throws Exception -->Line_3 $$ InterfaceOne interfaceOneA = getInstance()[ CD ]
Line_11 $$ String filterString = "(a.property=G)"-->Line_12 $$ ServiceReference<InterfaceOne>[] serviceReferences = _registry.getServiceReferences(InterfaceOne.class.getName(), filterString)[ FD ]
Line_16 $$ serviceReferences = _registry.getServiceReferences(InterfaceOne.class.getName(), filterString)-->Line_20 $$ Assert.assertNull(serviceReferences)[ FD ]
Line_9 $$ ServiceRegistration<InterfaceOne> serviceRegistrationB = _registry.registerService(InterfaceOne.class, interfaceOneB, properties)-->Line_10 $$ Assert.assertNotNull(serviceRegistrationB)[ FD ]
Line_2 $$ public void testGetServiceReferencesByClassNameAndFilterString() throws Exception -->Line_18 $$ serviceRegistrationB.unregister()[ CD ]
Line_12 $$ ServiceReference<InterfaceOne>[] serviceReferences = _registry.getServiceReferences(InterfaceOne.class.getName(), filterString)-->Line_13 $$ Assert.assertNotNull(serviceReferences)[ FD ]
Line_2 $$ public void testGetServiceReferencesByClassNameAndFilterString() throws Exception -->Line_19 $$ serviceReferences = _registry.getServiceReferences(InterfaceOne.class.getName(), filterString)[ CD ]
Line_2 $$ public void testGetServiceReferencesByClassNameAndFilterString() throws Exception -->Line_16 $$ serviceReferences = _registry.getServiceReferences(InterfaceOne.class.getName(), filterString)[ CD ]
Line_4 $$ ServiceRegistration<InterfaceOne> serviceRegistrationA = _registry.registerService(InterfaceOne.class, interfaceOneA)-->Line_5 $$ Assert.assertNotNull(serviceRegistrationA)[ FD ]
Line_16 $$ serviceReferences = _registry.getServiceReferences(InterfaceOne.class.getName(), filterString)-->Line_19 $$ serviceReferences = _registry.getServiceReferences(InterfaceOne.class.getName(), filterString)[ FD ]
Line_19 $$ serviceReferences = _registry.getServiceReferences(InterfaceOne.class.getName(), filterString)-->Line_20 $$ Assert.assertNull(serviceReferences)[ FD ]
