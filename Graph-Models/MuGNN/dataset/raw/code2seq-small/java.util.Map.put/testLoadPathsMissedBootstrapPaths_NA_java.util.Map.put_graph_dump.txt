Line_2 $$ public void testLoadPathsMissedBootstrapPaths() throws Exception -->Line_6 $$ Path bootstrapPath2 = Paths.get("bootstrapPath2")[ CD ]
Line_9 $$ NettyFabricWorkerExecutionChannelHandler nettyFabricWorkerExecutionChannelHandler = new NettyFabricWorkerExecutionChannelHandler(new MockRepository<Channel>("repository") -->Line_37 $$ NoticeableFuture<LoadedPaths> noticeableFuture = nettyFabricWorkerExecutionChannelHandler.loadPaths(_embeddedChannel, new NettyFabricWorkerConfig<Serializable>(0, processConfig, processCallable, fabricPathMappingVisitor.getPathMap()))[ FD ]
Line_9 $$ NettyFabricWorkerExecutionChannelHandler nettyFabricWorkerExecutionChannelHandler = new NettyFabricWorkerExecutionChannelHandler(new MockRepository<Channel>("repository") -->Line_13 $$ return defaultNoticeableFuture[ CD ]
Line_2 $$ public void testLoadPathsMissedBootstrapPaths() throws Exception -->Line_19 $$ ProcessConfig processConfig = builder.build()[ CD ]
Line_11 $$ DefaultNoticeableFuture<Map<Path, Path>> defaultNoticeableFuture = new DefaultNoticeableFuture()-->Line_12 $$ defaultNoticeableFuture.set(mergedPaths)[ FD ]
Line_2 $$ public void testLoadPathsMissedBootstrapPaths() throws Exception -->Line_4 $$ Path bootstrapPath1 = Paths.get("bootstrapPath1")[ CD ]
Line_7 $$ Path bootstrapPath3 = Paths.get("bootstrapPath3")-->Line_29 $$ Assert.assertEquals("Incomplete bootstrap classpath loaded, missed: " + Arrays.asList(bootstrapPath2, bootstrapPath3), logRecord.getMessage())[ FD ]
Line_2 $$ public void testLoadPathsMissedBootstrapPaths() throws Exception -->Line_22 $$ ObjectGraphUtil.walkObjectGraph(processCallable, fabricPathMappingVisitor)[ CD ]
Line_2 $$ public void testLoadPathsMissedBootstrapPaths() throws Exception -->Line_9 $$ NettyFabricWorkerExecutionChannelHandler nettyFabricWorkerExecutionChannelHandler = new NettyFabricWorkerExecutionChannelHandler(new MockRepository<Channel>("repository") [ CD ]
Line_2 $$ public void testLoadPathsMissedBootstrapPaths() throws Exception -->Line_3 $$ final Map<Path, Path> mergedPaths = new HashMap()[ CD ]
Line_2 $$ public void testLoadPathsMissedBootstrapPaths() throws Exception -->Line_7 $$ Path bootstrapPath3 = Paths.get("bootstrapPath3")[ CD ]
Line_2 $$ public void testLoadPathsMissedBootstrapPaths() throws Exception -->Line_8 $$ mergedPaths.put(bootstrapPath1, mappedBootstrapPath1)[ CD ]
Line_6 $$ Path bootstrapPath2 = Paths.get("bootstrapPath2")-->Line_29 $$ Assert.assertEquals("Incomplete bootstrap classpath loaded, missed: " + Arrays.asList(bootstrapPath2, bootstrapPath3), logRecord.getMessage())[ FD ]
Line_9 $$ NettyFabricWorkerExecutionChannelHandler nettyFabricWorkerExecutionChannelHandler = new NettyFabricWorkerExecutionChannelHandler(new MockRepository<Channel>("repository") -->Line_11 $$ DefaultNoticeableFuture<Map<Path, Path>> defaultNoticeableFuture = new DefaultNoticeableFuture()[ CD ]
Line_2 $$ public void testLoadPathsMissedBootstrapPaths() throws Exception -->Line_17 $$ builder.setBootstrapClassPath(bootstrapPath1 + File.pathSeparator + bootstrapPath2 + File.pathSeparator + bootstrapPath3)[ CD ]
Line_3 $$ final Map<Path, Path> mergedPaths = new HashMap()-->Line_8 $$ mergedPaths.put(bootstrapPath1, mappedBootstrapPath1)[ FD ]
Line_4 $$ Path bootstrapPath1 = Paths.get("bootstrapPath1")-->Line_8 $$ mergedPaths.put(bootstrapPath1, mappedBootstrapPath1)[ FD ]
Line_5 $$ Path mappedBootstrapPath1 = Paths.get("mappedBootstrapPath1")-->Line_33 $$ Assert.assertEquals(mappedBootstrapPath1.toString(), loadedProcessConfig.getBootstrapClassPath())[ FD ]
Line_9 $$ NettyFabricWorkerExecutionChannelHandler nettyFabricWorkerExecutionChannelHandler = new NettyFabricWorkerExecutionChannelHandler(new MockRepository<Channel>("repository") -->Line_12 $$ defaultNoticeableFuture.set(mergedPaths)[ CD ]
Line_2 $$ public void testLoadPathsMissedBootstrapPaths() throws Exception -->Line_18 $$ builder.setRuntimeClassPath(StringPool.BLANK)[ CD ]
Line_5 $$ Path mappedBootstrapPath1 = Paths.get("mappedBootstrapPath1")-->Line_44 $$ Assert.assertEquals(mappedBootstrapPath1.toString(), loadedProcessConfig.getBootstrapClassPath())[ FD ]
Line_5 $$ Path mappedBootstrapPath1 = Paths.get("mappedBootstrapPath1")-->Line_8 $$ mergedPaths.put(bootstrapPath1, mappedBootstrapPath1)[ FD ]
Line_3 $$ final Map<Path, Path> mergedPaths = new HashMap()-->Line_12 $$ defaultNoticeableFuture.set(mergedPaths)[ FD ]
Line_9 $$ NettyFabricWorkerExecutionChannelHandler nettyFabricWorkerExecutionChannelHandler = new NettyFabricWorkerExecutionChannelHandler(new MockRepository<Channel>("repository") -->Line_24 $$ NoticeableFuture<LoadedPaths> noticeableFuture = nettyFabricWorkerExecutionChannelHandler.loadPaths(_embeddedChannel, new NettyFabricWorkerConfig<Serializable>(0, processConfig, processCallable, fabricPathMappingVisitor.getPathMap()))[ FD ]
Line_2 $$ public void testLoadPathsMissedBootstrapPaths() throws Exception -->Line_5 $$ Path mappedBootstrapPath1 = Paths.get("mappedBootstrapPath1")[ CD ]
