Line_8 $$ String serverName = casConfiguration.serverName()-->Line_13 $$ parameters.put("serverName", serverName)[ FD ]
Line_2 $$ protected TicketValidator getTicketValidator(long companyId) throws Exception -->Line_3 $$ TicketValidator ticketValidator = _ticketValidators.get(companyId)[ CD ]
Line_7 $$ CASConfiguration casConfiguration = _configurationFactory.getConfiguration(CASConfiguration.class, new CompanyServiceSettingsLocator(companyId, CASConstants.SERVICE_NAME))-->Line_8 $$ String serverName = casConfiguration.serverName()[ FD ]
Line_2 $$ protected TicketValidator getTicketValidator(long companyId) throws Exception -->Line_11 $$ Cas20ProxyTicketValidator cas20ProxyTicketValidator = new Cas20ProxyTicketValidator(serverUrl)[ CD ]
Line_4 $$ if (ticketValidator != null) -->Line_5 $$ return ticketValidator[ CD ]
Line_2 $$ protected TicketValidator getTicketValidator(long companyId) throws Exception -->Line_9 $$ String serverUrl = casConfiguration.serverURL()[ CD ]
Line_11 $$ Cas20ProxyTicketValidator cas20ProxyTicketValidator = new Cas20ProxyTicketValidator(serverUrl)-->Line_17 $$ cas20ProxyTicketValidator.setCustomParameters(parameters)[ FD ]
Line_2 $$ protected TicketValidator getTicketValidator(long companyId) throws Exception -->Line_3 $$ TicketValidator ticketValidator = _ticketValidators.get(companyId)[ FD ]
Line_12 $$ Map<String, String> parameters = new HashMap()-->Line_15 $$ parameters.put("casServerLoginUrl", loginUrl)[ FD ]
Line_11 $$ Cas20ProxyTicketValidator cas20ProxyTicketValidator = new Cas20ProxyTicketValidator(serverUrl)-->Line_18 $$ _ticketValidators.put(companyId, cas20ProxyTicketValidator)[ FD ]
Line_3 $$ TicketValidator ticketValidator = _ticketValidators.get(companyId)-->Line_4 $$ if (ticketValidator != null) [ FD ]
Line_2 $$ protected TicketValidator getTicketValidator(long companyId) throws Exception -->Line_19 $$ return cas20ProxyTicketValidator[ CD ]
Line_7 $$ CASConfiguration casConfiguration = _configurationFactory.getConfiguration(CASConfiguration.class, new CompanyServiceSettingsLocator(companyId, CASConstants.SERVICE_NAME))-->Line_10 $$ String loginUrl = casConfiguration.loginURL()[ FD ]
Line_2 $$ protected TicketValidator getTicketValidator(long companyId) throws Exception -->Line_14 $$ parameters.put("casServerUrlPrefix", serverUrl)[ CD ]
Line_12 $$ Map<String, String> parameters = new HashMap()-->Line_16 $$ parameters.put("redirectAfterValidation", "false")[ FD ]
Line_2 $$ protected TicketValidator getTicketValidator(long companyId) throws Exception -->Line_10 $$ String loginUrl = casConfiguration.loginURL()[ CD ]
Line_10 $$ String loginUrl = casConfiguration.loginURL()-->Line_15 $$ parameters.put("casServerLoginUrl", loginUrl)[ FD ]
Line_2 $$ protected TicketValidator getTicketValidator(long companyId) throws Exception -->Line_12 $$ Map<String, String> parameters = new HashMap()[ CD ]
Line_7 $$ CASConfiguration casConfiguration = _configurationFactory.getConfiguration(CASConfiguration.class, new CompanyServiceSettingsLocator(companyId, CASConstants.SERVICE_NAME))-->Line_9 $$ String serverUrl = casConfiguration.serverURL()[ FD ]
Line_2 $$ protected TicketValidator getTicketValidator(long companyId) throws Exception -->Line_15 $$ parameters.put("casServerLoginUrl", loginUrl)[ CD ]
Line_2 $$ protected TicketValidator getTicketValidator(long companyId) throws Exception -->Line_18 $$ _ticketValidators.put(companyId, cas20ProxyTicketValidator)[ CD ]
Line_2 $$ protected TicketValidator getTicketValidator(long companyId) throws Exception -->Line_7 $$ CASConfiguration casConfiguration = _configurationFactory.getConfiguration(CASConfiguration.class, new CompanyServiceSettingsLocator(companyId, CASConstants.SERVICE_NAME))[ CD ]
Line_2 $$ protected TicketValidator getTicketValidator(long companyId) throws Exception -->Line_16 $$ parameters.put("redirectAfterValidation", "false")[ CD ]
Line_12 $$ Map<String, String> parameters = new HashMap()-->Line_17 $$ cas20ProxyTicketValidator.setCustomParameters(parameters)[ FD ]
Line_2 $$ protected TicketValidator getTicketValidator(long companyId) throws Exception -->Line_18 $$ _ticketValidators.put(companyId, cas20ProxyTicketValidator)[ FD ]
Line_12 $$ Map<String, String> parameters = new HashMap()-->Line_13 $$ parameters.put("serverName", serverName)[ FD ]
Line_12 $$ Map<String, String> parameters = new HashMap()-->Line_14 $$ parameters.put("casServerUrlPrefix", serverUrl)[ FD ]
Line_2 $$ protected TicketValidator getTicketValidator(long companyId) throws Exception -->Line_4 $$ if (ticketValidator != null) [ CD ]
Line_2 $$ protected TicketValidator getTicketValidator(long companyId) throws Exception -->Line_17 $$ cas20ProxyTicketValidator.setCustomParameters(parameters)[ CD ]
Line_9 $$ String serverUrl = casConfiguration.serverURL()-->Line_14 $$ parameters.put("casServerUrlPrefix", serverUrl)[ FD ]
Line_2 $$ protected TicketValidator getTicketValidator(long companyId) throws Exception -->Line_13 $$ parameters.put("serverName", serverName)[ CD ]
Line_2 $$ protected TicketValidator getTicketValidator(long companyId) throws Exception -->Line_8 $$ String serverName = casConfiguration.serverName()[ CD ]
