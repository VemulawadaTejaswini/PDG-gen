Line_2 $$ private Map<String, String> getExpectedResults() throws IOException -->Line_16 $$ return map[ CD ]
Line_4 $$ final VirtualFile resultsDir = getTestRoot().findChild("results")-->Line_6 $$ final VirtualFile result = resultsDir.findChild(resultFileName)[ FD ]
Line_3 $$ final String resultFileName = getTestName(true) + ".txt"-->Line_6 $$ final VirtualFile result = resultsDir.findChild(resultFileName)[ FD ]
Line_4 $$ final VirtualFile resultsDir = getTestRoot().findChild("results")-->Line_7 $$ assert result != null : "File not found " + resultsDir.getPath() + "/" + resultFileName[ FD ]
Line_6 $$ final VirtualFile result = resultsDir.findChild(resultFileName)-->Line_8 $$ String res = new String(result.contentsToByteArray())[ FD ]
Line_11 $$ if (!StringUtil.isEmptyOrSpaces(s)) -->Line_12 $$ final String[] strings = s.split(":")[ CD ]
Line_11 $$ if (!StringUtil.isEmptyOrSpaces(s)) -->Line_13 $$ map.put(strings[0].trim(), strings[1].trim())[ CD ]
Line_9 $$ final Map<String, String> map = new HashMap<String, String>()-->Line_13 $$ map.put(strings[0].trim(), strings[1].trim())[ FD ]
Line_10 $$ for (String s : res.replace("\r\n", "\n").split("\n")) -->Line_11 $$ if (!StringUtil.isEmptyOrSpaces(s)) [ FD ]
Line_10 $$ for (String s : res.replace("\r\n", "\n").split("\n")) -->Line_12 $$ final String[] strings = s.split(":")[ FD ]
Line_2 $$ private Map<String, String> getExpectedResults() throws IOException -->Line_4 $$ final VirtualFile resultsDir = getTestRoot().findChild("results")[ CD ]
Line_2 $$ private Map<String, String> getExpectedResults() throws IOException -->Line_9 $$ final Map<String, String> map = new HashMap<String, String>()[ CD ]
Line_2 $$ private Map<String, String> getExpectedResults() throws IOException -->Line_8 $$ String res = new String(result.contentsToByteArray())[ CD ]
Line_2 $$ private Map<String, String> getExpectedResults() throws IOException -->Line_6 $$ final VirtualFile result = resultsDir.findChild(resultFileName)[ CD ]
Line_2 $$ private Map<String, String> getExpectedResults() throws IOException -->Line_3 $$ final String resultFileName = getTestName(true) + ".txt"[ CD ]
Line_8 $$ String res = new String(result.contentsToByteArray())-->Line_10 $$ for (String s : res.replace("\r\n", "\n").split("\n")) [ FD ]
