Line_2 $$ public static String getOwner(FileDescriptor fd) throws IOException -->Line_4 $$ if (Shell.WINDOWS) [ CD ]
Line_4 $$ if (Shell.WINDOWS) -->Line_7 $$ return owner[ CD ]
Line_4 $$ if (Shell.WINDOWS) -->Line_11 $$ long now = System.currentTimeMillis()[ CD ]
Line_4 $$ if (Shell.WINDOWS) -->Line_18 $$ uidCache.put(uid, cUid)[ CD ]
Line_2 $$ public static String getOwner(FileDescriptor fd) throws IOException -->Line_9 $$ long uid = POSIX.getUIDforFDOwnerforOwner(fd)[ FD ]
Line_2 $$ public static String getOwner(FileDescriptor fd) throws IOException -->Line_5 $$ String owner = Windows.getOwner(fd)[ FD ]
Line_5 $$ String owner = Windows.getOwner(fd)-->Line_6 $$ owner = stripDomain(owner)[ FD ]
Line_9 $$ long uid = POSIX.getUIDforFDOwnerforOwner(fd)-->Line_15 $$ String user = POSIX.getUserName(uid)[ FD ]
Line_9 $$ long uid = POSIX.getUIDforFDOwnerforOwner(fd)-->Line_18 $$ uidCache.put(uid, cUid)[ FD ]
Line_10 $$ CachedUid cUid = uidCache.get(uid)-->Line_17 $$ cUid = new CachedUid(user, now)[ FD ]
Line_12 $$ if (cUid != null && (cUid.timestamp + cacheTimeout) > now) -->Line_13 $$ return cUid.username[ CD ]
Line_4 $$ if (Shell.WINDOWS) -->Line_17 $$ cUid = new CachedUid(user, now)[ CD ]
Line_4 $$ if (Shell.WINDOWS) -->Line_12 $$ if (cUid != null && (cUid.timestamp + cacheTimeout) > now) [ CD ]
Line_4 $$ if (Shell.WINDOWS) -->Line_16 $$ LOG.info("Got UserName " + user + " for UID " + uid + " from the native implementation")[ CD ]
Line_4 $$ if (Shell.WINDOWS) -->Line_6 $$ owner = stripDomain(owner)[ CD ]
Line_9 $$ long uid = POSIX.getUIDforFDOwnerforOwner(fd)-->Line_10 $$ CachedUid cUid = uidCache.get(uid)[ FD ]
Line_10 $$ CachedUid cUid = uidCache.get(uid)-->Line_18 $$ uidCache.put(uid, cUid)[ FD ]
Line_4 $$ if (Shell.WINDOWS) -->Line_15 $$ String user = POSIX.getUserName(uid)[ CD ]
Line_2 $$ public static String getOwner(FileDescriptor fd) throws IOException -->Line_3 $$ ensureInitialized()[ CD ]
Line_17 $$ cUid = new CachedUid(user, now)-->Line_18 $$ uidCache.put(uid, cUid)[ FD ]
Line_4 $$ if (Shell.WINDOWS) -->Line_19 $$ return user[ CD ]
Line_4 $$ if (Shell.WINDOWS) -->Line_5 $$ String owner = Windows.getOwner(fd)[ CD ]
Line_4 $$ if (Shell.WINDOWS) -->Line_9 $$ long uid = POSIX.getUIDforFDOwnerforOwner(fd)[ CD ]
Line_4 $$ if (Shell.WINDOWS) -->Line_10 $$ CachedUid cUid = uidCache.get(uid)[ CD ]
