Line_8 $$ if (!attributeName.equals("value") && Validator.isNull(attributeValue)) -->Line_9 $$ throwValidationException(1006, fileName, element, attributeName)[ CD ]
Line_11 $$ if (!_allowedVarAttributes.contains(attributeName)) -->Line_12 $$ throwValidationException(1005, fileName, element, attributeName)[ CD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_75 $$ throwValidationException(1013, fileName, element, method)[ FD ]
Line_46 $$ if (attributeMap.containsKey("method")) -->Line_47 $$ String methodValue = attributeMap.get("method")[ CD ]
Line_55 $$ if (!attributeMap.containsKey("property-value") && !attributeMap.containsKey("value") && Validator.isNull(varText)) -->Line_65 $$ while (matcher.find()) [ CD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_4 $$ Map<String, String> attributeMap = new HashMap()[ CD ]
Line_81 $$ if (!childElements.isEmpty()) -->Line_82 $$ Element childElement = childElements.get(0)[ CD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_81 $$ if (!childElements.isEmpty()) [ CD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_52 $$ throwValidationException(1005, fileName, element, "method")[ FD ]
Line_71 $$ if (operand.equals("") || method.equals("")) -->Line_72 $$ throwValidationException(1006, fileName, element, "value")[ CD ]
Line_31 $$ if (attributeMap.containsKey("locator-key") && attributeMap.containsKey("path")) -->Line_35 $$ if (attributeMap.containsKey("locator-key")) [ CD ]
Line_4 $$ Map<String, String> attributeMap = new HashMap()-->Line_56 $$ if (!attributeMap.containsKey("group") && !attributeMap.containsKey("input") && !attributeMap.containsKey("locator") && !attributeMap.containsKey("locator-key") && !attributeMap.containsKey("method") && !attributeMap.containsKey("path") && !attributeMap.containsKey("pattern")) [ FD ]
Line_70 $$ String method = statementMatcher.group(2)-->Line_75 $$ throwValidationException(1013, fileName, element, method)[ FD ]
Line_6 $$ String attributeName = attribute.getName()-->Line_8 $$ if (!attributeName.equals("value") && Validator.isNull(attributeValue)) [ FD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_12 $$ throwValidationException(1005, fileName, element, attributeName)[ FD ]
Line_55 $$ if (!attributeMap.containsKey("property-value") && !attributeMap.containsKey("value") && Validator.isNull(varText)) -->Line_56 $$ if (!attributeMap.containsKey("group") && !attributeMap.containsKey("input") && !attributeMap.containsKey("locator") && !attributeMap.containsKey("locator-key") && !attributeMap.containsKey("method") && !attributeMap.containsKey("path") && !attributeMap.containsKey("pattern")) [ CD ]
Line_4 $$ Map<String, String> attributeMap = new HashMap()-->Line_32 $$ if (attributeMap.containsKey("value")) [ FD ]
Line_6 $$ String attributeName = attribute.getName()-->Line_12 $$ throwValidationException(1005, fileName, element, attributeName)[ FD ]
Line_4 $$ Map<String, String> attributeMap = new HashMap()-->Line_27 $$ if (attributeMap.containsKey(disallowedAttribute)) [ FD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_55 $$ if (!attributeMap.containsKey("property-value") && !attributeMap.containsKey("value") && Validator.isNull(varText)) [ CD ]
Line_67 $$ Matcher statementMatcher = _varElementStatementPattern.matcher(statement)-->Line_70 $$ String method = statementMatcher.group(2)[ FD ]
Line_16 $$ if (!attributeMap.containsKey("name")) -->Line_19 $$ String nameValue = attributeMap.get("name")[ CD ]
Line_27 $$ if (attributeMap.containsKey(disallowedAttribute)) -->Line_28 $$ throwValidationException(1005, fileName, element, disallowedAttribute)[ CD ]
Line_4 $$ Map<String, String> attributeMap = new HashMap()-->Line_14 $$ attributeMap.put(attributeName, attributeValue)[ FD ]
Line_40 $$ String varText = element.getText()-->Line_42 $$ if (!Validator.isNull(varText)) [ FD ]
Line_4 $$ Map<String, String> attributeMap = new HashMap()-->Line_35 $$ if (attributeMap.containsKey("locator-key")) [ FD ]
Line_19 $$ String nameValue = attributeMap.get("name")-->Line_20 $$ if (Validator.isNull(nameValue)) [ FD ]
Line_62 $$ varValue = varText-->Line_64 $$ Matcher matcher = _varElementPattern.matcher(varValue)[ FD ]
Line_5 $$ for (Attribute attribute : attributes) -->Line_6 $$ String attributeName = attribute.getName()[ FD ]
Line_83 $$ String childElementName = childElement.getName()-->Line_84 $$ throwValidationException(1002, fileName, childElement, childElementName)[ FD ]
Line_31 $$ if (attributeMap.containsKey("locator-key") && attributeMap.containsKey("path")) -->Line_32 $$ if (attributeMap.containsKey("value")) [ CD ]
Line_6 $$ String attributeName = attribute.getName()-->Line_14 $$ attributeMap.put(attributeName, attributeValue)[ FD ]
Line_4 $$ Map<String, String> attributeMap = new HashMap()-->Line_46 $$ if (attributeMap.containsKey("method")) [ FD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_46 $$ if (attributeMap.containsKey("method")) [ CD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_40 $$ String varText = element.getText()[ CD ]
Line_4 $$ Map<String, String> attributeMap = new HashMap()-->Line_24 $$ if (attributeMap.containsKey("locator")) [ FD ]
Line_40 $$ String varText = element.getText()-->Line_55 $$ if (!attributeMap.containsKey("property-value") && !attributeMap.containsKey("value") && Validator.isNull(varText)) [ FD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_57 $$ throwValidationException(1004, fileName, element, new String[] [ FD ]
Line_64 $$ Matcher matcher = _varElementPattern.matcher(varValue)-->Line_65 $$ while (matcher.find()) [ FD ]
Line_64 $$ Matcher matcher = _varElementPattern.matcher(varValue)-->Line_66 $$ String statement = matcher.group(1)[ FD ]
Line_60 $$ String varValue = attributeMap.get("value")-->Line_61 $$ if (Validator.isNull(varValue)) [ FD ]
Line_16 $$ if (!attributeMap.containsKey("name")) -->Line_17 $$ throwValidationException(1004, fileName, element, new String[] [ CD ]
Line_37 $$ if (attributeMap.containsKey("path")) -->Line_38 $$ throwValidationException(1004, fileName, element, new String[] [ CD ]
Line_68 $$ if (statementMatcher.find()) -->Line_69 $$ String operand = statementMatcher.group(1)[ CD ]
Line_67 $$ Matcher statementMatcher = _varElementStatementPattern.matcher(statement)-->Line_68 $$ if (statementMatcher.find()) [ FD ]
Line_80 $$ List<Element> childElements = element.elements()-->Line_82 $$ Element childElement = childElements.get(0)[ FD ]
Line_56 $$ if (!attributeMap.containsKey("group") && !attributeMap.containsKey("input") && !attributeMap.containsKey("locator") && !attributeMap.containsKey("locator-key") && !attributeMap.containsKey("method") && !attributeMap.containsKey("path") && !attributeMap.containsKey("pattern")) -->Line_57 $$ throwValidationException(1004, fileName, element, new String[] [ CD ]
Line_68 $$ if (statementMatcher.find()) -->Line_74 $$ if (!_methodNames.contains(method)) [ CD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_3 $$ List<Attribute> attributes = element.attributes()[ CD ]
Line_69 $$ String operand = statementMatcher.group(1)-->Line_71 $$ if (operand.equals("") || method.equals("")) [ FD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_41 $$ if (attributeMap.containsKey("locator") || attributeMap.containsKey("locator-key") || attributeMap.containsKey("path")) [ CD ]
Line_65 $$ while (matcher.find()) -->Line_66 $$ String statement = matcher.group(1)[ CD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_40 $$ String varText = element.getText()[ FD ]
Line_68 $$ if (statementMatcher.find()) -->Line_71 $$ if (operand.equals("") || method.equals("")) [ CD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_84 $$ throwValidationException(1002, fileName, childElement, childElementName)[ FD ]
Line_4 $$ Map<String, String> attributeMap = new HashMap()-->Line_31 $$ if (attributeMap.containsKey("locator-key") && attributeMap.containsKey("path")) [ FD ]
Line_16 $$ if (!attributeMap.containsKey("name")) -->Line_20 $$ if (Validator.isNull(nameValue)) [ CD ]
Line_74 $$ if (!_methodNames.contains(method)) -->Line_75 $$ throwValidationException(1013, fileName, element, method)[ CD ]
Line_82 $$ Element childElement = childElements.get(0)-->Line_83 $$ String childElementName = childElement.getName()[ FD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_38 $$ throwValidationException(1004, fileName, element, new String[] [ FD ]
Line_70 $$ String method = statementMatcher.group(2)-->Line_71 $$ if (operand.equals("") || method.equals("")) [ FD ]
Line_46 $$ if (attributeMap.containsKey("method")) -->Line_51 $$ if (!methodValue.contains("#")) [ CD ]
Line_5 $$ for (Attribute attribute : attributes) -->Line_7 $$ String attributeValue = attribute.getValue()[ FD ]
Line_35 $$ if (attributeMap.containsKey("locator-key")) -->Line_37 $$ if (attributeMap.containsKey("path")) [ CD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_21 $$ throwValidationException(1006, fileName, element, "name")[ FD ]
Line_66 $$ String statement = matcher.group(1)-->Line_67 $$ Matcher statementMatcher = _varElementStatementPattern.matcher(statement)[ FD ]
Line_46 $$ if (attributeMap.containsKey("method")) -->Line_48 $$ if (!methodValue.startsWith("MathUtil") && !methodValue.startsWith("selenium") && !methodValue.startsWith("StringUtil") && !methodValue.startsWith("TestPropsUtil")) [ CD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_28 $$ throwValidationException(1005, fileName, element, disallowedAttribute)[ FD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_43 $$ throwValidationException(1005, fileName, element, "value")[ FD ]
Line_41 $$ if (attributeMap.containsKey("locator") || attributeMap.containsKey("locator-key") || attributeMap.containsKey("path")) -->Line_42 $$ if (!Validator.isNull(varText)) [ CD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_49 $$ throwValidationException(1005, fileName, element, "method")[ FD ]
Line_35 $$ if (attributeMap.containsKey("locator-key")) -->Line_36 $$ throwValidationException(1004, fileName, element, new String[] [ CD ]
Line_26 $$ for (String disallowedAttribute : disallowedAttributes) -->Line_27 $$ if (attributeMap.containsKey(disallowedAttribute)) [ FD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_80 $$ List<Element> childElements = element.elements()[ CD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_16 $$ if (!attributeMap.containsKey("name")) [ CD ]
Line_65 $$ while (matcher.find()) -->Line_68 $$ if (statementMatcher.find()) [ CD ]
Line_4 $$ Map<String, String> attributeMap = new HashMap()-->Line_19 $$ String nameValue = attributeMap.get("name")[ FD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_72 $$ throwValidationException(1006, fileName, element, "value")[ FD ]
Line_47 $$ String methodValue = attributeMap.get("method")-->Line_51 $$ if (!methodValue.contains("#")) [ FD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_9 $$ throwValidationException(1006, fileName, element, attributeName)[ FD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_24 $$ if (attributeMap.containsKey("locator")) [ CD ]
Line_67 $$ Matcher statementMatcher = _varElementStatementPattern.matcher(statement)-->Line_69 $$ String operand = statementMatcher.group(1)[ FD ]
Line_4 $$ Map<String, String> attributeMap = new HashMap()-->Line_41 $$ if (attributeMap.containsKey("locator") || attributeMap.containsKey("locator-key") || attributeMap.containsKey("path")) [ FD ]
Line_81 $$ if (!childElements.isEmpty()) -->Line_83 $$ String childElementName = childElement.getName()[ CD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_3 $$ List<Attribute> attributes = element.attributes()[ FD ]
Line_48 $$ if (!methodValue.startsWith("MathUtil") && !methodValue.startsWith("selenium") && !methodValue.startsWith("StringUtil") && !methodValue.startsWith("TestPropsUtil")) -->Line_49 $$ throwValidationException(1005, fileName, element, "method")[ CD ]
Line_32 $$ if (attributeMap.containsKey("value")) -->Line_33 $$ throwValidationException(1005, fileName, element, "value")[ CD ]
Line_65 $$ while (matcher.find()) -->Line_67 $$ Matcher statementMatcher = _varElementStatementPattern.matcher(statement)[ CD ]
Line_26 $$ for (String disallowedAttribute : disallowedAttributes) -->Line_28 $$ throwValidationException(1005, fileName, element, disallowedAttribute)[ FD ]
Line_4 $$ Map<String, String> attributeMap = new HashMap()-->Line_37 $$ if (attributeMap.containsKey("path")) [ FD ]
Line_4 $$ Map<String, String> attributeMap = new HashMap()-->Line_47 $$ String methodValue = attributeMap.get("method")[ FD ]
Line_7 $$ String attributeValue = attribute.getValue()-->Line_14 $$ attributeMap.put(attributeName, attributeValue)[ FD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_36 $$ throwValidationException(1004, fileName, element, new String[] [ FD ]
Line_70 $$ String method = statementMatcher.group(2)-->Line_74 $$ if (!_methodNames.contains(method)) [ FD ]
Line_51 $$ if (!methodValue.contains("#")) -->Line_52 $$ throwValidationException(1005, fileName, element, "method")[ CD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_17 $$ throwValidationException(1004, fileName, element, new String[] [ FD ]
Line_60 $$ String varValue = attributeMap.get("value")-->Line_64 $$ Matcher matcher = _varElementPattern.matcher(varValue)[ FD ]
Line_4 $$ Map<String, String> attributeMap = new HashMap()-->Line_55 $$ if (!attributeMap.containsKey("property-value") && !attributeMap.containsKey("value") && Validator.isNull(varText)) [ FD ]
Line_24 $$ if (attributeMap.containsKey("locator")) -->Line_31 $$ if (attributeMap.containsKey("locator-key") && attributeMap.containsKey("path")) [ CD ]
Line_40 $$ String varText = element.getText()-->Line_62 $$ varValue = varText[ FD ]
Line_7 $$ String attributeValue = attribute.getValue()-->Line_8 $$ if (!attributeName.equals("value") && Validator.isNull(attributeValue)) [ FD ]
Line_81 $$ if (!childElements.isEmpty()) -->Line_84 $$ throwValidationException(1002, fileName, childElement, childElementName)[ CD ]
Line_55 $$ if (!attributeMap.containsKey("property-value") && !attributeMap.containsKey("value") && Validator.isNull(varText)) -->Line_60 $$ String varValue = attributeMap.get("value")[ CD ]
Line_55 $$ if (!attributeMap.containsKey("property-value") && !attributeMap.containsKey("value") && Validator.isNull(varText)) -->Line_61 $$ if (Validator.isNull(varValue)) [ CD ]
Line_4 $$ Map<String, String> attributeMap = new HashMap()-->Line_16 $$ if (!attributeMap.containsKey("name")) [ FD ]
Line_42 $$ if (!Validator.isNull(varText)) -->Line_43 $$ throwValidationException(1005, fileName, element, "value")[ CD ]
Line_6 $$ String attributeName = attribute.getName()-->Line_9 $$ throwValidationException(1006, fileName, element, attributeName)[ FD ]
Line_80 $$ List<Element> childElements = element.elements()-->Line_81 $$ if (!childElements.isEmpty()) [ FD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_80 $$ List<Element> childElements = element.elements()[ FD ]
Line_60 $$ String varValue = attributeMap.get("value")-->Line_62 $$ varValue = varText[ FD ]
Line_6 $$ String attributeName = attribute.getName()-->Line_11 $$ if (!_allowedVarAttributes.contains(attributeName)) [ FD ]
Line_2 $$ protected void validateVarElement(String fileName, Element element) -->Line_33 $$ throwValidationException(1005, fileName, element, "value")[ FD ]
Line_61 $$ if (Validator.isNull(varValue)) -->Line_62 $$ varValue = varText[ CD ]
Line_47 $$ String methodValue = attributeMap.get("method")-->Line_48 $$ if (!methodValue.startsWith("MathUtil") && !methodValue.startsWith("selenium") && !methodValue.startsWith("StringUtil") && !methodValue.startsWith("TestPropsUtil")) [ FD ]
Line_4 $$ Map<String, String> attributeMap = new HashMap()-->Line_60 $$ String varValue = attributeMap.get("value")[ FD ]
Line_82 $$ Element childElement = childElements.get(0)-->Line_84 $$ throwValidationException(1002, fileName, childElement, childElementName)[ FD ]
Line_20 $$ if (Validator.isNull(nameValue)) -->Line_21 $$ throwValidationException(1006, fileName, element, "name")[ CD ]
Line_55 $$ if (!attributeMap.containsKey("property-value") && !attributeMap.containsKey("value") && Validator.isNull(varText)) -->Line_64 $$ Matcher matcher = _varElementPattern.matcher(varValue)[ CD ]
Line_24 $$ if (attributeMap.containsKey("locator")) -->Line_25 $$ String[] disallowedAttributes = [ CD ]
Line_68 $$ if (statementMatcher.find()) -->Line_70 $$ String method = statementMatcher.group(2)[ CD ]
