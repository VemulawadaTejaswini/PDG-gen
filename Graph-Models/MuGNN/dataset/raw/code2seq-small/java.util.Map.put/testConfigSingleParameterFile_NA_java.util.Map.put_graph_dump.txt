Line_2 $$ public void testConfigSingleParameterFile() throws IOException -->Line_4 $$ config.put("foo_file", "scriptValue")[ CD ]
Line_3 $$ Map<String, Object> config = new HashMap()-->Line_11 $$ assertThat(config.isEmpty(), equalTo(true))[ FD ]
Line_2 $$ public void testConfigSingleParameterFile() throws IOException -->Line_7 $$ assertThat(paramParser.getScriptParameterValue("foo"), nullValue())[ CD ]
Line_2 $$ public void testConfigSingleParameterFile() throws IOException -->Line_8 $$ paramParser.parseConfig(config, true, ParseFieldMatcher.STRICT)[ CD ]
Line_2 $$ public void testConfigSingleParameterFile() throws IOException -->Line_10 $$ assertThat(paramParser.lang(), nullValue())[ CD ]
Line_2 $$ public void testConfigSingleParameterFile() throws IOException -->Line_5 $$ Set<String> parameters = Collections.singleton("foo")[ CD ]
Line_2 $$ public void testConfigSingleParameterFile() throws IOException -->Line_3 $$ Map<String, Object> config = new HashMap()[ CD ]
Line_2 $$ public void testConfigSingleParameterFile() throws IOException -->Line_11 $$ assertThat(config.isEmpty(), equalTo(true))[ CD ]
Line_3 $$ Map<String, Object> config = new HashMap()-->Line_4 $$ config.put("foo_file", "scriptValue")[ FD ]
Line_6 $$ ScriptParameterParser paramParser = new ScriptParameterParser(parameters)-->Line_7 $$ assertThat(paramParser.getScriptParameterValue("foo"), nullValue())[ FD ]
Line_6 $$ ScriptParameterParser paramParser = new ScriptParameterParser(parameters)-->Line_8 $$ paramParser.parseConfig(config, true, ParseFieldMatcher.STRICT)[ FD ]
Line_2 $$ public void testConfigSingleParameterFile() throws IOException -->Line_6 $$ ScriptParameterParser paramParser = new ScriptParameterParser(parameters)[ CD ]
Line_2 $$ public void testConfigSingleParameterFile() throws IOException -->Line_9 $$ assertParameterValue(paramParser, "foo", "scriptValue", ScriptType.FILE)[ CD ]
Line_6 $$ ScriptParameterParser paramParser = new ScriptParameterParser(parameters)-->Line_10 $$ assertThat(paramParser.lang(), nullValue())[ FD ]
Line_3 $$ Map<String, Object> config = new HashMap()-->Line_8 $$ paramParser.parseConfig(config, true, ParseFieldMatcher.STRICT)[ FD ]
Line_6 $$ ScriptParameterParser paramParser = new ScriptParameterParser(parameters)-->Line_9 $$ assertParameterValue(paramParser, "foo", "scriptValue", ScriptType.FILE)[ FD ]
