Line_2 $$ public void testPersistenceUnitsFromJndiWithDefaultUnit() -->Line_5 $$ persistenceUnits.put("System", "pu1")[ CD ]
Line_7 $$ ExpectedLookupTemplate jt = new ExpectedLookupTemplate()-->Line_9 $$ jt.addObject("java:comp/env/pu2", mockEmf2)[ FD ]
Line_4 $$ Map<String, String> persistenceUnits = new HashMap<String, String>()-->Line_6 $$ persistenceUnits.put("Person", "pu2")[ FD ]
Line_11 $$ PersistenceAnnotationBeanPostProcessor bpp = new PersistenceAnnotationBeanPostProcessor()-->Line_14 $$ bpp.setJndiTemplate(jt)[ FD ]
Line_2 $$ public void testPersistenceUnitsFromJndiWithDefaultUnit() -->Line_20 $$ assertSame(mockEmf, bean.emf)[ CD ]
Line_11 $$ PersistenceAnnotationBeanPostProcessor bpp = new PersistenceAnnotationBeanPostProcessor()-->Line_15 $$ bf.addBeanPostProcessor(bpp)[ FD ]
Line_2 $$ public void testPersistenceUnitsFromJndiWithDefaultUnit() -->Line_7 $$ ExpectedLookupTemplate jt = new ExpectedLookupTemplate()[ CD ]
Line_2 $$ public void testPersistenceUnitsFromJndiWithDefaultUnit() -->Line_11 $$ PersistenceAnnotationBeanPostProcessor bpp = new PersistenceAnnotationBeanPostProcessor()[ CD ]
Line_2 $$ public void testPersistenceUnitsFromJndiWithDefaultUnit() -->Line_21 $$ assertSame(mockEmf2, bean2.emf)[ CD ]
Line_10 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_18 $$ DefaultPublicPersistenceUnitSetter bean = (DefaultPublicPersistenceUnitSetter) bf.getBean(DefaultPublicPersistenceUnitSetter.class.getName())[ FD ]
Line_2 $$ public void testPersistenceUnitsFromJndiWithDefaultUnit() -->Line_4 $$ Map<String, String> persistenceUnits = new HashMap<String, String>()[ CD ]
Line_10 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_16 $$ bf.registerBeanDefinition(DefaultPublicPersistenceUnitSetter.class.getName(), new RootBeanDefinition(DefaultPublicPersistenceUnitSetter.class))[ FD ]
Line_3 $$ EntityManagerFactoryWithInfo mockEmf2 = mock(EntityManagerFactoryWithInfo.class)-->Line_21 $$ assertSame(mockEmf2, bean2.emf)[ FD ]
Line_2 $$ public void testPersistenceUnitsFromJndiWithDefaultUnit() -->Line_6 $$ persistenceUnits.put("Person", "pu2")[ CD ]
Line_10 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_15 $$ bf.addBeanPostProcessor(bpp)[ FD ]
Line_7 $$ ExpectedLookupTemplate jt = new ExpectedLookupTemplate()-->Line_14 $$ bpp.setJndiTemplate(jt)[ FD ]
Line_2 $$ public void testPersistenceUnitsFromJndiWithDefaultUnit() -->Line_18 $$ DefaultPublicPersistenceUnitSetter bean = (DefaultPublicPersistenceUnitSetter) bf.getBean(DefaultPublicPersistenceUnitSetter.class.getName())[ CD ]
Line_2 $$ public void testPersistenceUnitsFromJndiWithDefaultUnit() -->Line_19 $$ DefaultPublicPersistenceUnitSetterNamedPerson bean2 = (DefaultPublicPersistenceUnitSetterNamedPerson) bf.getBean(DefaultPublicPersistenceUnitSetterNamedPerson.class.getName())[ CD ]
Line_2 $$ public void testPersistenceUnitsFromJndiWithDefaultUnit() -->Line_14 $$ bpp.setJndiTemplate(jt)[ CD ]
Line_2 $$ public void testPersistenceUnitsFromJndiWithDefaultUnit() -->Line_3 $$ EntityManagerFactoryWithInfo mockEmf2 = mock(EntityManagerFactoryWithInfo.class)[ CD ]
Line_10 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_17 $$ bf.registerBeanDefinition(DefaultPublicPersistenceUnitSetterNamedPerson.class.getName(), new RootBeanDefinition(DefaultPublicPersistenceUnitSetterNamedPerson.class))[ FD ]
Line_3 $$ EntityManagerFactoryWithInfo mockEmf2 = mock(EntityManagerFactoryWithInfo.class)-->Line_9 $$ jt.addObject("java:comp/env/pu2", mockEmf2)[ FD ]
Line_4 $$ Map<String, String> persistenceUnits = new HashMap<String, String>()-->Line_12 $$ bpp.setPersistenceUnits(persistenceUnits)[ FD ]
Line_2 $$ public void testPersistenceUnitsFromJndiWithDefaultUnit() -->Line_10 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()[ CD ]
Line_2 $$ public void testPersistenceUnitsFromJndiWithDefaultUnit() -->Line_15 $$ bf.addBeanPostProcessor(bpp)[ CD ]
Line_2 $$ public void testPersistenceUnitsFromJndiWithDefaultUnit() -->Line_8 $$ jt.addObject("java:comp/env/pu1", mockEmf)[ CD ]
Line_2 $$ public void testPersistenceUnitsFromJndiWithDefaultUnit() -->Line_9 $$ jt.addObject("java:comp/env/pu2", mockEmf2)[ CD ]
Line_10 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_19 $$ DefaultPublicPersistenceUnitSetterNamedPerson bean2 = (DefaultPublicPersistenceUnitSetterNamedPerson) bf.getBean(DefaultPublicPersistenceUnitSetterNamedPerson.class.getName())[ FD ]
Line_7 $$ ExpectedLookupTemplate jt = new ExpectedLookupTemplate()-->Line_8 $$ jt.addObject("java:comp/env/pu1", mockEmf)[ FD ]
Line_11 $$ PersistenceAnnotationBeanPostProcessor bpp = new PersistenceAnnotationBeanPostProcessor()-->Line_12 $$ bpp.setPersistenceUnits(persistenceUnits)[ FD ]
Line_2 $$ public void testPersistenceUnitsFromJndiWithDefaultUnit() -->Line_13 $$ bpp.setDefaultPersistenceUnitName("System")[ CD ]
Line_2 $$ public void testPersistenceUnitsFromJndiWithDefaultUnit() -->Line_17 $$ bf.registerBeanDefinition(DefaultPublicPersistenceUnitSetterNamedPerson.class.getName(), new RootBeanDefinition(DefaultPublicPersistenceUnitSetterNamedPerson.class))[ CD ]
Line_2 $$ public void testPersistenceUnitsFromJndiWithDefaultUnit() -->Line_12 $$ bpp.setPersistenceUnits(persistenceUnits)[ CD ]
Line_11 $$ PersistenceAnnotationBeanPostProcessor bpp = new PersistenceAnnotationBeanPostProcessor()-->Line_13 $$ bpp.setDefaultPersistenceUnitName("System")[ FD ]
Line_2 $$ public void testPersistenceUnitsFromJndiWithDefaultUnit() -->Line_16 $$ bf.registerBeanDefinition(DefaultPublicPersistenceUnitSetter.class.getName(), new RootBeanDefinition(DefaultPublicPersistenceUnitSetter.class))[ CD ]
Line_4 $$ Map<String, String> persistenceUnits = new HashMap<String, String>()-->Line_5 $$ persistenceUnits.put("System", "pu1")[ FD ]
