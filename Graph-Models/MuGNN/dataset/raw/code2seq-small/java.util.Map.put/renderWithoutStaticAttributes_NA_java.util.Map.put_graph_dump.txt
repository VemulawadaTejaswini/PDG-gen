Line_7 $$ TestView tv = new TestView(wac)-->Line_8 $$ tv.setApplicationContext(wac)[ FD ]
Line_5 $$ HttpServletRequest request = new MockHttpServletRequest()-->Line_13 $$ tv.render(model, request, response)[ FD ]
Line_2 $$ public void renderWithoutStaticAttributes() throws Exception -->Line_11 $$ model.put("foo", "bar")[ CD ]
Line_3 $$ WebApplicationContext wac = mock(WebApplicationContext.class)-->Line_8 $$ tv.setApplicationContext(wac)[ FD ]
Line_2 $$ public void renderWithoutStaticAttributes() throws Exception -->Line_4 $$ given(wac.getServletContext()).willReturn(new MockServletContext())[ CD ]
Line_7 $$ TestView tv = new TestView(wac)-->Line_13 $$ tv.render(model, request, response)[ FD ]
Line_2 $$ public void renderWithoutStaticAttributes() throws Exception -->Line_6 $$ HttpServletResponse response = new MockHttpServletResponse()[ CD ]
Line_10 $$ Map<String, Object> model = new HashMap<String, Object>()-->Line_12 $$ model.put("something", new Object())[ FD ]
Line_2 $$ public void renderWithoutStaticAttributes() throws Exception -->Line_7 $$ TestView tv = new TestView(wac)[ CD ]
Line_2 $$ public void renderWithoutStaticAttributes() throws Exception -->Line_8 $$ tv.setApplicationContext(wac)[ CD ]
Line_10 $$ Map<String, Object> model = new HashMap<String, Object>()-->Line_11 $$ model.put("foo", "bar")[ FD ]
Line_2 $$ public void renderWithoutStaticAttributes() throws Exception -->Line_9 $$ tv.setApplicationContext(wac)[ CD ]
Line_7 $$ TestView tv = new TestView(wac)-->Line_9 $$ tv.setApplicationContext(wac)[ FD ]
Line_10 $$ Map<String, Object> model = new HashMap<String, Object>()-->Line_13 $$ tv.render(model, request, response)[ FD ]
Line_2 $$ public void renderWithoutStaticAttributes() throws Exception -->Line_10 $$ Map<String, Object> model = new HashMap<String, Object>()[ CD ]
Line_3 $$ WebApplicationContext wac = mock(WebApplicationContext.class)-->Line_9 $$ tv.setApplicationContext(wac)[ FD ]
Line_3 $$ WebApplicationContext wac = mock(WebApplicationContext.class)-->Line_4 $$ given(wac.getServletContext()).willReturn(new MockServletContext())[ FD ]
Line_2 $$ public void renderWithoutStaticAttributes() throws Exception -->Line_15 $$ assertTrue(tv.initialized)[ CD ]
Line_2 $$ public void renderWithoutStaticAttributes() throws Exception -->Line_5 $$ HttpServletRequest request = new MockHttpServletRequest()[ CD ]
Line_2 $$ public void renderWithoutStaticAttributes() throws Exception -->Line_3 $$ WebApplicationContext wac = mock(WebApplicationContext.class)[ CD ]
Line_2 $$ public void renderWithoutStaticAttributes() throws Exception -->Line_14 $$ checkContainsAll(model, tv.model)[ CD ]
Line_10 $$ Map<String, Object> model = new HashMap<String, Object>()-->Line_14 $$ checkContainsAll(model, tv.model)[ FD ]
Line_2 $$ public void renderWithoutStaticAttributes() throws Exception -->Line_13 $$ tv.render(model, request, response)[ CD ]
Line_2 $$ public void renderWithoutStaticAttributes() throws Exception -->Line_12 $$ model.put("something", new Object())[ CD ]
Line_6 $$ HttpServletResponse response = new MockHttpServletResponse()-->Line_13 $$ tv.render(model, request, response)[ FD ]
