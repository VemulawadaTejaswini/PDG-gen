Line_34 $$ Set<String> validTrackbacks = new HashSet()-->Line_48 $$ String newTrackbacks = StringUtil.merge(validTrackbacks)[ FD ]
Line_15 $$ Map<String, String> parts = new HashMap()-->Line_40 $$ if (LinkbackProducerUtil.sendTrackback(trackback, parts)) [ FD ]
Line_34 $$ Set<String> validTrackbacks = new HashSet()-->Line_41 $$ validTrackbacks.add(trackback)[ FD ]
Line_47 $$ if (!validTrackbacks.isEmpty()) -->Line_48 $$ String newTrackbacks = StringUtil.merge(validTrackbacks)[ CD ]
Line_6 $$ HttpServletRequest request = serviceContext.getRequest()-->Line_7 $$ if (request == null) [ FD ]
Line_15 $$ Map<String, String> parts = new HashMap()-->Line_18 $$ parts.put("title", entry.getTitle())[ FD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_24 $$ trackbacksSet = SetUtil.fromArray(trackbacks)[ FD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_10 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)[ CD ]
Line_34 $$ Set<String> validTrackbacks = new HashSet()-->Line_47 $$ if (!validTrackbacks.isEmpty()) [ FD ]
Line_49 $$ if (Validator.isNotNull(entry.getTrackbacks())) -->Line_50 $$ newTrackbacks += StringPool.COMMA + entry.getTrackbacks()[ CD ]
Line_35 $$ for (String trackback : trackbacksSet) -->Line_40 $$ if (LinkbackProducerUtil.sendTrackback(trackback, parts)) [ FD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_21 $$ parts.put("blog_name", entry.getUserName())[ CD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_3 $$ if (!PropsValues.BLOGS_TRACKBACK_ENABLED || !entry.isAllowTrackbacks() || !entry.isApproved()) [ CD ]
Line_17 $$ String url = layoutFullURL + Portal.FRIENDLY_URL_SEPARATOR + "blogs/" + entry.getUrlTitle()-->Line_20 $$ parts.put("url", url)[ FD ]
Line_23 $$ if (ArrayUtil.isNotEmpty(trackbacks)) -->Line_24 $$ trackbacksSet = SetUtil.fromArray(trackbacks)[ CD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_18 $$ parts.put("title", entry.getTitle())[ CD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_33 $$ Set<String> oldTrackbacks = SetUtil.fromArray(StringUtil.split(entry.getTrackbacks()))[ CD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_23 $$ if (ArrayUtil.isNotEmpty(trackbacks)) [ CD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_34 $$ Set<String> validTrackbacks = new HashSet()[ CD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_23 $$ if (ArrayUtil.isNotEmpty(trackbacks)) [ FD ]
Line_47 $$ if (!validTrackbacks.isEmpty()) -->Line_52 $$ entry.setTrackbacks(newTrackbacks)[ CD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_28 $$ if (pingOldTrackbacks) [ CD ]
Line_22 $$ Set<String> trackbacksSet = null-->Line_26 $$ trackbacksSet = new HashSet()[ FD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_31 $$ blogsEntryPersistence.update(entry)[ FD ]
Line_22 $$ Set<String> trackbacksSet = null-->Line_29 $$ trackbacksSet.addAll(SetUtil.fromArray(StringUtil.split(entry.getTrackbacks())))[ FD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_22 $$ Set<String> trackbacksSet = null[ CD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_11 $$ String layoutFullURL = PortalUtil.getLayoutFullURL(themeDisplay)[ CD ]
Line_15 $$ Map<String, String> parts = new HashMap()-->Line_19 $$ parts.put("excerpt", excerpt)[ FD ]
Line_26 $$ trackbacksSet = new HashSet()-->Line_29 $$ trackbacksSet.addAll(SetUtil.fromArray(StringUtil.split(entry.getTrackbacks())))[ FD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_29 $$ trackbacksSet.addAll(SetUtil.fromArray(StringUtil.split(entry.getTrackbacks())))[ FD ]
Line_35 $$ for (String trackback : trackbacksSet) -->Line_41 $$ validTrackbacks.add(trackback)[ FD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_17 $$ String url = layoutFullURL + Portal.FRIENDLY_URL_SEPARATOR + "blogs/" + entry.getUrlTitle()[ FD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_6 $$ HttpServletRequest request = serviceContext.getRequest()[ CD ]
Line_47 $$ if (!validTrackbacks.isEmpty()) -->Line_53 $$ blogsEntryPersistence.update(entry)[ CD ]
Line_28 $$ if (pingOldTrackbacks) -->Line_29 $$ trackbacksSet.addAll(SetUtil.fromArray(StringUtil.split(entry.getTrackbacks())))[ CD ]
Line_28 $$ if (pingOldTrackbacks) -->Line_31 $$ blogsEntryPersistence.update(entry)[ CD ]
Line_35 $$ for (String trackback : trackbacksSet) -->Line_36 $$ if (oldTrackbacks.contains(trackback)) [ FD ]
Line_10 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_11 $$ String layoutFullURL = PortalUtil.getLayoutFullURL(themeDisplay)[ FD ]
Line_12 $$ if (Validator.isNull(layoutFullURL)) -->Line_13 $$ return[ CD ]
Line_24 $$ trackbacksSet = SetUtil.fromArray(trackbacks)-->Line_29 $$ trackbacksSet.addAll(SetUtil.fromArray(StringUtil.split(entry.getTrackbacks())))[ FD ]
Line_28 $$ if (pingOldTrackbacks) -->Line_30 $$ entry.setTrackbacks(StringPool.BLANK)[ CD ]
Line_33 $$ Set<String> oldTrackbacks = SetUtil.fromArray(StringUtil.split(entry.getTrackbacks()))-->Line_36 $$ if (oldTrackbacks.contains(trackback)) [ FD ]
Line_23 $$ if (ArrayUtil.isNotEmpty(trackbacks)) -->Line_26 $$ trackbacksSet = new HashSet()[ CD ]
Line_24 $$ trackbacksSet = SetUtil.fromArray(trackbacks)-->Line_26 $$ trackbacksSet = new HashSet()[ FD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_47 $$ if (!validTrackbacks.isEmpty()) [ CD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_53 $$ blogsEntryPersistence.update(entry)[ FD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_7 $$ if (request == null) [ CD ]
Line_22 $$ Set<String> trackbacksSet = null-->Line_24 $$ trackbacksSet = SetUtil.fromArray(trackbacks)[ FD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_16 $$ String excerpt = StringUtil.shorten(HtmlUtil.extractText(entry.getContent()), PropsValues.BLOGS_LINKBACK_EXCERPT_LENGTH)[ CD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_3 $$ if (!PropsValues.BLOGS_TRACKBACK_ENABLED || !entry.isAllowTrackbacks() || !entry.isApproved()) [ FD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_16 $$ String excerpt = StringUtil.shorten(HtmlUtil.extractText(entry.getContent()), PropsValues.BLOGS_LINKBACK_EXCERPT_LENGTH)[ FD ]
Line_50 $$ newTrackbacks += StringPool.COMMA + entry.getTrackbacks()-->Line_52 $$ entry.setTrackbacks(newTrackbacks)[ FD ]
Line_7 $$ if (request == null) -->Line_8 $$ return[ CD ]
Line_40 $$ if (LinkbackProducerUtil.sendTrackback(trackback, parts)) -->Line_41 $$ validTrackbacks.add(trackback)[ CD ]
Line_11 $$ String layoutFullURL = PortalUtil.getLayoutFullURL(themeDisplay)-->Line_12 $$ if (Validator.isNull(layoutFullURL)) [ FD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_15 $$ Map<String, String> parts = new HashMap()[ CD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_17 $$ String url = layoutFullURL + Portal.FRIENDLY_URL_SEPARATOR + "blogs/" + entry.getUrlTitle()[ CD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_12 $$ if (Validator.isNull(layoutFullURL)) [ CD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_19 $$ parts.put("excerpt", excerpt)[ CD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_21 $$ parts.put("blog_name", entry.getUserName())[ FD ]
Line_48 $$ String newTrackbacks = StringUtil.merge(validTrackbacks)-->Line_52 $$ entry.setTrackbacks(newTrackbacks)[ FD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_20 $$ parts.put("url", url)[ CD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_50 $$ newTrackbacks += StringPool.COMMA + entry.getTrackbacks()[ FD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_49 $$ if (Validator.isNotNull(entry.getTrackbacks())) [ FD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_33 $$ Set<String> oldTrackbacks = SetUtil.fromArray(StringUtil.split(entry.getTrackbacks()))[ FD ]
Line_16 $$ String excerpt = StringUtil.shorten(HtmlUtil.extractText(entry.getContent()), PropsValues.BLOGS_LINKBACK_EXCERPT_LENGTH)-->Line_19 $$ parts.put("excerpt", excerpt)[ FD ]
Line_15 $$ Map<String, String> parts = new HashMap()-->Line_21 $$ parts.put("blog_name", entry.getUserName())[ FD ]
Line_3 $$ if (!PropsValues.BLOGS_TRACKBACK_ENABLED || !entry.isAllowTrackbacks() || !entry.isApproved()) -->Line_4 $$ return[ CD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_6 $$ HttpServletRequest request = serviceContext.getRequest()[ FD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_30 $$ entry.setTrackbacks(StringPool.BLANK)[ FD ]
Line_6 $$ HttpServletRequest request = serviceContext.getRequest()-->Line_10 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)[ FD ]
Line_48 $$ String newTrackbacks = StringUtil.merge(validTrackbacks)-->Line_50 $$ newTrackbacks += StringPool.COMMA + entry.getTrackbacks()[ FD ]
Line_47 $$ if (!validTrackbacks.isEmpty()) -->Line_49 $$ if (Validator.isNotNull(entry.getTrackbacks())) [ CD ]
Line_15 $$ Map<String, String> parts = new HashMap()-->Line_20 $$ parts.put("url", url)[ FD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_52 $$ entry.setTrackbacks(newTrackbacks)[ FD ]
Line_2 $$ protected void pingTrackbacks(BlogsEntry entry, String[] trackbacks, boolean pingOldTrackbacks, ServiceContext serviceContext) throws PortalException -->Line_18 $$ parts.put("title", entry.getTitle())[ FD ]
