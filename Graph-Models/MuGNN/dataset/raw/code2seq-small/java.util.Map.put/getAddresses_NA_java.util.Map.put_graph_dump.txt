Line_2 $$ private static Map<String, Map<String, InetSocketAddress>> getAddresses(Configuration conf, String defaultAddress, String... keys) -->Line_11 $$ return ret[ CD ]
Line_4 $$ Map<String, Map<String, InetSocketAddress>> ret = Maps.newLinkedHashMap()-->Line_8 $$ ret.put(nsId, isas)[ FD ]
Line_5 $$ for (String nsId : emptyAsSingletonNull(nameserviceIds)) -->Line_6 $$ Map<String, InetSocketAddress> isas = getAddressesForNameserviceId(conf, nsId, defaultAddress, keys)[ FD ]
Line_2 $$ private static Map<String, Map<String, InetSocketAddress>> getAddresses(Configuration conf, String defaultAddress, String... keys) -->Line_4 $$ Map<String, Map<String, InetSocketAddress>> ret = Maps.newLinkedHashMap()[ CD ]
Line_6 $$ Map<String, InetSocketAddress> isas = getAddressesForNameserviceId(conf, nsId, defaultAddress, keys)-->Line_7 $$ if (!isas.isEmpty()) [ FD ]
Line_3 $$ Collection<String> nameserviceIds = getNameServiceIds(conf)-->Line_5 $$ for (String nsId : emptyAsSingletonNull(nameserviceIds)) [ FD ]
Line_2 $$ private static Map<String, Map<String, InetSocketAddress>> getAddresses(Configuration conf, String defaultAddress, String... keys) -->Line_3 $$ Collection<String> nameserviceIds = getNameServiceIds(conf)[ CD ]
Line_6 $$ Map<String, InetSocketAddress> isas = getAddressesForNameserviceId(conf, nsId, defaultAddress, keys)-->Line_8 $$ ret.put(nsId, isas)[ FD ]
Line_7 $$ if (!isas.isEmpty()) -->Line_8 $$ ret.put(nsId, isas)[ CD ]
Line_2 $$ private static Map<String, Map<String, InetSocketAddress>> getAddresses(Configuration conf, String defaultAddress, String... keys) -->Line_3 $$ Collection<String> nameserviceIds = getNameServiceIds(conf)[ FD ]
Line_2 $$ private static Map<String, Map<String, InetSocketAddress>> getAddresses(Configuration conf, String defaultAddress, String... keys) -->Line_6 $$ Map<String, InetSocketAddress> isas = getAddressesForNameserviceId(conf, nsId, defaultAddress, keys)[ FD ]
Line_5 $$ for (String nsId : emptyAsSingletonNull(nameserviceIds)) -->Line_8 $$ ret.put(nsId, isas)[ FD ]
