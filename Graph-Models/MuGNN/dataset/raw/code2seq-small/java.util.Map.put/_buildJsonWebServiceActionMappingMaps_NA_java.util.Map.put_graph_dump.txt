Line_31 $$ if (javadocMethod != null) -->Line_32 $$ String parameterComment = javadocMethod.getParameterComment(i)[ CD ]
Line_22 $$ for (int i = 0; i < methodParameters.length; i++) -->Line_39 $$ parametersList.add(parameterMap)[ CD ]
Line_11 $$ JavadocMethod javadocMethod = JavadocManagerUtil.lookupJavadocMethod(jsonWebServiceActionMapping.getRealActionMethod())-->Line_44 $$ if (javadocMethod != null) [ FD ]
Line_22 $$ for (int i = 0; i < methodParameters.length; i++) -->Line_23 $$ MethodParameter methodParameter = methodParameters[i][ CD ]
Line_22 $$ for (int i = 0; i < methodParameters.length; i++) -->Line_38 $$ parameterMap.put("type", _formatType(methodParameter.getType(), genericTypes, false))[ CD ]
Line_13 $$ String methodComment = javadocMethod.getComment()-->Line_14 $$ if (methodComment != null) [ FD ]
Line_5 $$ for (JSONWebServiceActionMapping jsonWebServiceActionMapping : jsonWebServiceActionMappings) -->Line_18 $$ jsonWebServiceActionMappingMap.put("method", jsonWebServiceActionMapping.getMethod())[ FD ]
Line_21 $$ List<Map<String, String>> parametersList = new ArrayList(methodParameters.length)-->Line_39 $$ parametersList.add(parameterMap)[ FD ]
Line_5 $$ for (JSONWebServiceActionMapping jsonWebServiceActionMapping : jsonWebServiceActionMappings) -->Line_11 $$ JavadocMethod javadocMethod = JavadocManagerUtil.lookupJavadocMethod(jsonWebServiceActionMapping.getRealActionMethod())[ FD ]
Line_26 $$ genericTypes = methodParameter.getGenericTypes()-->Line_38 $$ parameterMap.put("type", _formatType(methodParameter.getType(), genericTypes, false))[ FD ]
Line_44 $$ if (javadocMethod != null) -->Line_46 $$ if (!Validator.isBlank(returnComment)) [ CD ]
Line_44 $$ if (javadocMethod != null) -->Line_45 $$ String returnComment = javadocMethod.getReturnComment()[ CD ]
Line_11 $$ JavadocMethod javadocMethod = JavadocManagerUtil.lookupJavadocMethod(jsonWebServiceActionMapping.getRealActionMethod())-->Line_15 $$ jsonWebServiceActionMappingMap.put("description", javadocMethod.getComment())[ FD ]
Line_5 $$ for (JSONWebServiceActionMapping jsonWebServiceActionMapping : jsonWebServiceActionMappings) -->Line_6 $$ String path = jsonWebServiceActionMapping.getPath()[ FD ]
Line_22 $$ for (int i = 0; i < methodParameters.length; i++) -->Line_37 $$ parameterMap.put("name", methodParameter.getName())[ CD ]
Line_46 $$ if (!Validator.isBlank(returnComment)) -->Line_47 $$ returnsMap.put("description", returnComment)[ CD ]
Line_2 $$ private List<Map<String, Object>> _buildJsonWebServiceActionMappingMaps() throws PortalException -->Line_4 $$ List<Map<String, Object>> jsonWebServiceActionMappingMaps = new ArrayList(jsonWebServiceActionMappings.size())[ CD ]
Line_7 $$ Map<String, Object> jsonWebServiceActionMappingMap = new LinkedHashMap()-->Line_15 $$ jsonWebServiceActionMappingMap.put("description", javadocMethod.getComment())[ FD ]
Line_11 $$ JavadocMethod javadocMethod = JavadocManagerUtil.lookupJavadocMethod(jsonWebServiceActionMapping.getRealActionMethod())-->Line_32 $$ String parameterComment = javadocMethod.getParameterComment(i)[ FD ]
Line_11 $$ JavadocMethod javadocMethod = JavadocManagerUtil.lookupJavadocMethod(jsonWebServiceActionMapping.getRealActionMethod())-->Line_13 $$ String methodComment = javadocMethod.getComment()[ FD ]
Line_7 $$ Map<String, Object> jsonWebServiceActionMappingMap = new LinkedHashMap()-->Line_42 $$ jsonWebServiceActionMappingMap.put("path", path)[ FD ]
Line_12 $$ if (javadocMethod != null) -->Line_13 $$ String methodComment = javadocMethod.getComment()[ CD ]
Line_23 $$ MethodParameter methodParameter = methodParameters[i]-->Line_38 $$ parameterMap.put("type", _formatType(methodParameter.getType(), genericTypes, false))[ FD ]
Line_6 $$ String path = jsonWebServiceActionMapping.getPath()-->Line_42 $$ jsonWebServiceActionMappingMap.put("path", path)[ FD ]
Line_23 $$ MethodParameter methodParameter = methodParameters[i]-->Line_37 $$ parameterMap.put("name", methodParameter.getName())[ FD ]
Line_32 $$ String parameterComment = javadocMethod.getParameterComment(i)-->Line_33 $$ if (!Validator.isBlank(parameterComment)) [ FD ]
Line_11 $$ JavadocMethod javadocMethod = JavadocManagerUtil.lookupJavadocMethod(jsonWebServiceActionMapping.getRealActionMethod())-->Line_12 $$ if (javadocMethod != null) [ FD ]
Line_12 $$ if (javadocMethod != null) -->Line_14 $$ if (methodComment != null) [ CD ]
Line_7 $$ Map<String, Object> jsonWebServiceActionMappingMap = new LinkedHashMap()-->Line_53 $$ jsonWebServiceActionMappingMaps.add(jsonWebServiceActionMappingMap)[ FD ]
Line_22 $$ for (int i = 0; i < methodParameters.length; i++) -->Line_30 $$ Map<String, String> parameterMap = new HashMap()[ CD ]
Line_33 $$ if (!Validator.isBlank(parameterComment)) -->Line_34 $$ parameterMap.put("description", parameterComment)[ CD ]
Line_43 $$ Map<String, String> returnsMap = new LinkedHashMap()-->Line_51 $$ returnsMap.put("type", _formatType(actionMethod.getReturnType(), _getGenericReturnTypes(jsonWebServiceActionMapping), true))[ FD ]
Line_5 $$ for (JSONWebServiceActionMapping jsonWebServiceActionMapping : jsonWebServiceActionMappings) -->Line_51 $$ returnsMap.put("type", _formatType(actionMethod.getReturnType(), _getGenericReturnTypes(jsonWebServiceActionMapping), true))[ FD ]
Line_7 $$ Map<String, Object> jsonWebServiceActionMappingMap = new LinkedHashMap()-->Line_19 $$ jsonWebServiceActionMappingMap.put("name", _getName(jsonWebServiceActionMapping))[ FD ]
Line_31 $$ if (javadocMethod != null) -->Line_33 $$ if (!Validator.isBlank(parameterComment)) [ CD ]
Line_2 $$ private List<Map<String, Object>> _buildJsonWebServiceActionMappingMaps() throws PortalException -->Line_3 $$ List<JSONWebServiceActionMapping> jsonWebServiceActionMappings = JSONWebServiceActionsManagerUtil.getJSONWebServiceActionMappings(_contextName)[ CD ]
Line_30 $$ Map<String, String> parameterMap = new HashMap()-->Line_39 $$ parametersList.add(parameterMap)[ FD ]
Line_7 $$ Map<String, Object> jsonWebServiceActionMappingMap = new LinkedHashMap()-->Line_9 $$ jsonWebServiceActionMappingMap.put("deprecated", Boolean.TRUE)[ FD ]
Line_5 $$ for (JSONWebServiceActionMapping jsonWebServiceActionMapping : jsonWebServiceActionMappings) -->Line_19 $$ jsonWebServiceActionMappingMap.put("name", _getName(jsonWebServiceActionMapping))[ FD ]
Line_50 $$ Method actionMethod = jsonWebServiceActionMapping.getActionMethod()-->Line_51 $$ returnsMap.put("type", _formatType(actionMethod.getReturnType(), _getGenericReturnTypes(jsonWebServiceActionMapping), true))[ FD ]
Line_45 $$ String returnComment = javadocMethod.getReturnComment()-->Line_46 $$ if (!Validator.isBlank(returnComment)) [ FD ]
Line_24 $$ Class<?>[] genericTypes = null-->Line_26 $$ genericTypes = methodParameter.getGenericTypes()[ FD ]
Line_8 $$ if (jsonWebServiceActionMapping.isDeprecated()) -->Line_9 $$ jsonWebServiceActionMappingMap.put("deprecated", Boolean.TRUE)[ CD ]
Line_5 $$ for (JSONWebServiceActionMapping jsonWebServiceActionMapping : jsonWebServiceActionMappings) -->Line_50 $$ Method actionMethod = jsonWebServiceActionMapping.getActionMethod()[ FD ]
Line_21 $$ List<Map<String, String>> parametersList = new ArrayList(methodParameters.length)-->Line_41 $$ jsonWebServiceActionMappingMap.put("parameters", parametersList)[ FD ]
Line_32 $$ String parameterComment = javadocMethod.getParameterComment(i)-->Line_34 $$ parameterMap.put("description", parameterComment)[ FD ]
Line_30 $$ Map<String, String> parameterMap = new HashMap()-->Line_37 $$ parameterMap.put("name", methodParameter.getName())[ FD ]
Line_23 $$ MethodParameter methodParameter = methodParameters[i]-->Line_26 $$ genericTypes = methodParameter.getGenericTypes()[ FD ]
Line_30 $$ Map<String, String> parameterMap = new HashMap()-->Line_38 $$ parameterMap.put("type", _formatType(methodParameter.getType(), genericTypes, false))[ FD ]
Line_7 $$ Map<String, Object> jsonWebServiceActionMappingMap = new LinkedHashMap()-->Line_18 $$ jsonWebServiceActionMappingMap.put("method", jsonWebServiceActionMapping.getMethod())[ FD ]
Line_22 $$ for (int i = 0; i < methodParameters.length; i++) -->Line_24 $$ Class<?>[] genericTypes = null[ CD ]
Line_7 $$ Map<String, Object> jsonWebServiceActionMappingMap = new LinkedHashMap()-->Line_52 $$ jsonWebServiceActionMappingMap.put("returns", returnsMap)[ FD ]
Line_5 $$ for (JSONWebServiceActionMapping jsonWebServiceActionMapping : jsonWebServiceActionMappings) -->Line_8 $$ if (jsonWebServiceActionMapping.isDeprecated()) [ FD ]
Line_30 $$ Map<String, String> parameterMap = new HashMap()-->Line_34 $$ parameterMap.put("description", parameterComment)[ FD ]
Line_3 $$ List<JSONWebServiceActionMapping> jsonWebServiceActionMappings = JSONWebServiceActionsManagerUtil.getJSONWebServiceActionMappings(_contextName)-->Line_4 $$ List<Map<String, Object>> jsonWebServiceActionMappingMaps = new ArrayList(jsonWebServiceActionMappings.size())[ FD ]
Line_22 $$ for (int i = 0; i < methodParameters.length; i++) -->Line_32 $$ String parameterComment = javadocMethod.getParameterComment(i)[ FD ]
Line_24 $$ Class<?>[] genericTypes = null-->Line_38 $$ parameterMap.put("type", _formatType(methodParameter.getType(), genericTypes, false))[ FD ]
Line_43 $$ Map<String, String> returnsMap = new LinkedHashMap()-->Line_52 $$ jsonWebServiceActionMappingMap.put("returns", returnsMap)[ FD ]
Line_11 $$ JavadocMethod javadocMethod = JavadocManagerUtil.lookupJavadocMethod(jsonWebServiceActionMapping.getRealActionMethod())-->Line_45 $$ String returnComment = javadocMethod.getReturnComment()[ FD ]
Line_14 $$ if (methodComment != null) -->Line_15 $$ jsonWebServiceActionMappingMap.put("description", javadocMethod.getComment())[ CD ]
Line_2 $$ private List<Map<String, Object>> _buildJsonWebServiceActionMappingMaps() throws PortalException -->Line_55 $$ return jsonWebServiceActionMappingMaps[ CD ]
Line_7 $$ Map<String, Object> jsonWebServiceActionMappingMap = new LinkedHashMap()-->Line_41 $$ jsonWebServiceActionMappingMap.put("parameters", parametersList)[ FD ]
Line_4 $$ List<Map<String, Object>> jsonWebServiceActionMappingMaps = new ArrayList(jsonWebServiceActionMappings.size())-->Line_53 $$ jsonWebServiceActionMappingMaps.add(jsonWebServiceActionMappingMap)[ FD ]
Line_45 $$ String returnComment = javadocMethod.getReturnComment()-->Line_47 $$ returnsMap.put("description", returnComment)[ FD ]
Line_5 $$ for (JSONWebServiceActionMapping jsonWebServiceActionMapping : jsonWebServiceActionMappings) -->Line_20 $$ MethodParameter[] methodParameters = jsonWebServiceActionMapping.getMethodParameters()[ FD ]
Line_11 $$ JavadocMethod javadocMethod = JavadocManagerUtil.lookupJavadocMethod(jsonWebServiceActionMapping.getRealActionMethod())-->Line_31 $$ if (javadocMethod != null) [ FD ]
Line_22 $$ for (int i = 0; i < methodParameters.length; i++) -->Line_31 $$ if (javadocMethod != null) [ CD ]
Line_43 $$ Map<String, String> returnsMap = new LinkedHashMap()-->Line_47 $$ returnsMap.put("description", returnComment)[ FD ]
