Line_9 $$ if (collector == null) -->Line_15 $$ updaters.put(window, collector)[ CD ]
Line_17 $$ TimeStat timeStat = new TimeStat()-->Line_19 $$ timeStats.put(window, timeStat)[ FD ]
Line_2 $$ synchronized Stat createStat(String name, TimeWindow[] windows) -->Line_23 $$ return stat[ CD ]
Line_13 $$ collector = new TimeWindowStatUpdater(window, period)-->Line_15 $$ updaters.put(window, collector)[ FD ]
Line_2 $$ synchronized Stat createStat(String name, TimeWindow[] windows) -->Line_3 $$ if (statistics.get(name) != null) [ FD ]
Line_6 $$ Map<TimeWindow, TimeStat> timeStats = new LinkedHashMap<TimeWindow, TimeStat>()-->Line_19 $$ timeStats.put(window, timeStat)[ FD ]
Line_21 $$ Stat stat = new Stat(name, timeStats)-->Line_22 $$ statistics.put(name, stat)[ FD ]
Line_7 $$ for (TimeWindow window : windows) -->Line_10 $$ if (SINCE_START.equals(window)) [ FD ]
Line_7 $$ for (TimeWindow window : windows) -->Line_15 $$ updaters.put(window, collector)[ FD ]
Line_8 $$ StatUpdater collector = updaters.get(window)-->Line_13 $$ collector = new TimeWindowStatUpdater(window, period)[ FD ]
Line_2 $$ synchronized Stat createStat(String name, TimeWindow[] windows) -->Line_6 $$ Map<TimeWindow, TimeStat> timeStats = new LinkedHashMap<TimeWindow, TimeStat>()[ CD ]
Line_2 $$ synchronized Stat createStat(String name, TimeWindow[] windows) -->Line_21 $$ Stat stat = new Stat(name, timeStats)[ CD ]
Line_2 $$ synchronized Stat createStat(String name, TimeWindow[] windows) -->Line_3 $$ if (statistics.get(name) != null) [ CD ]
Line_9 $$ if (collector == null) -->Line_10 $$ if (SINCE_START.equals(window)) [ CD ]
Line_2 $$ synchronized Stat createStat(String name, TimeWindow[] windows) -->Line_22 $$ statistics.put(name, stat)[ CD ]
Line_7 $$ for (TimeWindow window : windows) -->Line_8 $$ StatUpdater collector = updaters.get(window)[ FD ]
Line_8 $$ StatUpdater collector = updaters.get(window)-->Line_11 $$ collector = new StatUpdater()[ FD ]
Line_8 $$ StatUpdater collector = updaters.get(window)-->Line_9 $$ if (collector == null) [ FD ]
Line_11 $$ collector = new StatUpdater()-->Line_18 $$ collector.addTimeStat(name, timeStat)[ FD ]
Line_2 $$ synchronized Stat createStat(String name, TimeWindow[] windows) -->Line_22 $$ statistics.put(name, stat)[ FD ]
Line_17 $$ TimeStat timeStat = new TimeStat()-->Line_18 $$ collector.addTimeStat(name, timeStat)[ FD ]
Line_7 $$ for (TimeWindow window : windows) -->Line_19 $$ timeStats.put(window, timeStat)[ FD ]
Line_2 $$ synchronized Stat createStat(String name, TimeWindow[] windows) -->Line_18 $$ collector.addTimeStat(name, timeStat)[ FD ]
Line_8 $$ StatUpdater collector = updaters.get(window)-->Line_15 $$ updaters.put(window, collector)[ FD ]
Line_11 $$ collector = new StatUpdater()-->Line_15 $$ updaters.put(window, collector)[ FD ]
Line_10 $$ if (SINCE_START.equals(window)) -->Line_13 $$ collector = new TimeWindowStatUpdater(window, period)[ CD ]
Line_11 $$ collector = new StatUpdater()-->Line_13 $$ collector = new TimeWindowStatUpdater(window, period)[ FD ]
Line_13 $$ collector = new TimeWindowStatUpdater(window, period)-->Line_18 $$ collector.addTimeStat(name, timeStat)[ FD ]
Line_10 $$ if (SINCE_START.equals(window)) -->Line_11 $$ collector = new StatUpdater()[ CD ]
Line_8 $$ StatUpdater collector = updaters.get(window)-->Line_18 $$ collector.addTimeStat(name, timeStat)[ FD ]
