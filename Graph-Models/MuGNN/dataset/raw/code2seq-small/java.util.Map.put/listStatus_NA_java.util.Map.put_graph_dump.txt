Line_3 $$ Map<String, String> params = new HashMap<String, String>()-->Line_4 $$ params.put(OP_PARAM, Operation.LISTSTATUS.toString())[ FD ]
Line_11 $$ f = makeQualified(f)-->Line_13 $$ array[i] = createFileStatus(f, (JSONObject) jsonArray.get(i))[ FD ]
Line_2 $$ public FileStatus[] listStatus(Path f) throws IOException -->Line_5 $$ HttpURLConnection conn = getConnection(Operation.LISTSTATUS.getMethod(), params, f, true)[ FD ]
Line_2 $$ public FileStatus[] listStatus(Path f) throws IOException -->Line_13 $$ array[i] = createFileStatus(f, (JSONObject) jsonArray.get(i))[ FD ]
Line_5 $$ HttpURLConnection conn = getConnection(Operation.LISTSTATUS.getMethod(), params, f, true)-->Line_7 $$ JSONObject json = (JSONObject) HttpFSUtils.jsonParse(conn)[ FD ]
Line_2 $$ public FileStatus[] listStatus(Path f) throws IOException -->Line_15 $$ return array[ CD ]
Line_5 $$ HttpURLConnection conn = getConnection(Operation.LISTSTATUS.getMethod(), params, f, true)-->Line_6 $$ HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK)[ FD ]
Line_9 $$ JSONArray jsonArray = (JSONArray) json.get(FILE_STATUS_JSON)-->Line_12 $$ for (int i = 0; i < jsonArray.size(); i++) [ FD ]
Line_2 $$ public FileStatus[] listStatus(Path f) throws IOException -->Line_4 $$ params.put(OP_PARAM, Operation.LISTSTATUS.toString())[ CD ]
Line_2 $$ public FileStatus[] listStatus(Path f) throws IOException -->Line_6 $$ HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK)[ CD ]
Line_8 $$ json = (JSONObject) json.get(FILE_STATUSES_JSON)-->Line_9 $$ JSONArray jsonArray = (JSONArray) json.get(FILE_STATUS_JSON)[ FD ]
Line_9 $$ JSONArray jsonArray = (JSONArray) json.get(FILE_STATUS_JSON)-->Line_10 $$ FileStatus[] array = new FileStatus[jsonArray.size()][ FD ]
Line_2 $$ public FileStatus[] listStatus(Path f) throws IOException -->Line_7 $$ JSONObject json = (JSONObject) HttpFSUtils.jsonParse(conn)[ CD ]
Line_2 $$ public FileStatus[] listStatus(Path f) throws IOException -->Line_12 $$ for (int i = 0; i < jsonArray.size(); i++) [ CD ]
Line_12 $$ for (int i = 0; i < jsonArray.size(); i++) -->Line_13 $$ array[i] = createFileStatus(f, (JSONObject) jsonArray.get(i))[ CD ]
Line_7 $$ JSONObject json = (JSONObject) HttpFSUtils.jsonParse(conn)-->Line_9 $$ JSONArray jsonArray = (JSONArray) json.get(FILE_STATUS_JSON)[ FD ]
Line_7 $$ JSONObject json = (JSONObject) HttpFSUtils.jsonParse(conn)-->Line_8 $$ json = (JSONObject) json.get(FILE_STATUSES_JSON)[ FD ]
Line_2 $$ public FileStatus[] listStatus(Path f) throws IOException -->Line_8 $$ json = (JSONObject) json.get(FILE_STATUSES_JSON)[ CD ]
Line_9 $$ JSONArray jsonArray = (JSONArray) json.get(FILE_STATUS_JSON)-->Line_13 $$ array[i] = createFileStatus(f, (JSONObject) jsonArray.get(i))[ FD ]
Line_2 $$ public FileStatus[] listStatus(Path f) throws IOException -->Line_11 $$ f = makeQualified(f)[ CD ]
Line_2 $$ public FileStatus[] listStatus(Path f) throws IOException -->Line_11 $$ f = makeQualified(f)[ FD ]
Line_2 $$ public FileStatus[] listStatus(Path f) throws IOException -->Line_9 $$ JSONArray jsonArray = (JSONArray) json.get(FILE_STATUS_JSON)[ CD ]
Line_2 $$ public FileStatus[] listStatus(Path f) throws IOException -->Line_10 $$ FileStatus[] array = new FileStatus[jsonArray.size()][ CD ]
Line_3 $$ Map<String, String> params = new HashMap<String, String>()-->Line_5 $$ HttpURLConnection conn = getConnection(Operation.LISTSTATUS.getMethod(), params, f, true)[ FD ]
Line_2 $$ public FileStatus[] listStatus(Path f) throws IOException -->Line_5 $$ HttpURLConnection conn = getConnection(Operation.LISTSTATUS.getMethod(), params, f, true)[ CD ]
Line_2 $$ public FileStatus[] listStatus(Path f) throws IOException -->Line_3 $$ Map<String, String> params = new HashMap<String, String>()[ CD ]
Line_12 $$ for (int i = 0; i < jsonArray.size(); i++) -->Line_13 $$ array[i] = createFileStatus(f, (JSONObject) jsonArray.get(i))[ FD ]
