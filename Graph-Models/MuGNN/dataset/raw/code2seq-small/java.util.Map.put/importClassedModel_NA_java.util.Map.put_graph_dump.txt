Line_12 $$ StagedGroupedModel stagedGroupedModel = (StagedGroupedModel) classedModel-->Line_13 $$ if (!groupIds.containsKey(stagedGroupedModel.getGroupId())) [ FD ]
Line_7 $$ long newClassPK = ExportImportClassedModelUtil.getClassPK(newClassedModel)-->Line_18 $$ importLocks(clazz, String.valueOf(classPK), String.valueOf(newClassPK))[ FD ]
Line_11 $$ Map<Long, Long> groupIds = (Map<Long, Long>) getNewPrimaryKeysMap(Group.class)-->Line_15 $$ groupIds.put(stagedGroupedModel.getGroupId(), newStagedGroupedModel.getGroupId())[ FD ]
Line_2 $$ public void importClassedModel(ClassedModel classedModel, ClassedModel newClassedModel, Class<?> clazz) throws PortalException -->Line_9 $$ newPrimaryKeysMap.put(classPK, newClassPK)[ CD ]
Line_7 $$ long newClassPK = ExportImportClassedModelUtil.getClassPK(newClassedModel)-->Line_9 $$ newPrimaryKeysMap.put(classPK, newClassPK)[ FD ]
Line_2 $$ public void importClassedModel(ClassedModel classedModel, ClassedModel newClassedModel, Class<?> clazz) throws PortalException -->Line_7 $$ long newClassPK = ExportImportClassedModelUtil.getClassPK(newClassedModel)[ CD ]
Line_6 $$ long classPK = ExportImportClassedModelUtil.getClassPK(classedModel)-->Line_18 $$ importLocks(clazz, String.valueOf(classPK), String.valueOf(newClassPK))[ FD ]
Line_10 $$ if (classedModel instanceof StagedGroupedModel && newClassedModel instanceof StagedGroupedModel) -->Line_11 $$ Map<Long, Long> groupIds = (Map<Long, Long>) getNewPrimaryKeysMap(Group.class)[ CD ]
Line_13 $$ if (!groupIds.containsKey(stagedGroupedModel.getGroupId())) -->Line_14 $$ StagedGroupedModel newStagedGroupedModel = (StagedGroupedModel) newClassedModel[ CD ]
Line_13 $$ if (!groupIds.containsKey(stagedGroupedModel.getGroupId())) -->Line_15 $$ groupIds.put(stagedGroupedModel.getGroupId(), newStagedGroupedModel.getGroupId())[ CD ]
Line_2 $$ public void importClassedModel(ClassedModel classedModel, ClassedModel newClassedModel, Class<?> clazz) throws PortalException -->Line_8 $$ Map<Long, Long> newPrimaryKeysMap = (Map<Long, Long>) getNewPrimaryKeysMap(clazz)[ FD ]
Line_12 $$ StagedGroupedModel stagedGroupedModel = (StagedGroupedModel) classedModel-->Line_15 $$ groupIds.put(stagedGroupedModel.getGroupId(), newStagedGroupedModel.getGroupId())[ FD ]
Line_2 $$ public void importClassedModel(ClassedModel classedModel, ClassedModel newClassedModel, Class<?> clazz) throws PortalException -->Line_6 $$ long classPK = ExportImportClassedModelUtil.getClassPK(classedModel)[ CD ]
Line_2 $$ public void importClassedModel(ClassedModel classedModel, ClassedModel newClassedModel, Class<?> clazz) throws PortalException -->Line_7 $$ long newClassPK = ExportImportClassedModelUtil.getClassPK(newClassedModel)[ FD ]
Line_2 $$ public void importClassedModel(ClassedModel classedModel, ClassedModel newClassedModel, Class<?> clazz) throws PortalException -->Line_18 $$ importLocks(clazz, String.valueOf(classPK), String.valueOf(newClassPK))[ CD ]
Line_2 $$ public void importClassedModel(ClassedModel classedModel, ClassedModel newClassedModel, Class<?> clazz) throws PortalException -->Line_10 $$ if (classedModel instanceof StagedGroupedModel && newClassedModel instanceof StagedGroupedModel) [ CD ]
Line_8 $$ Map<Long, Long> newPrimaryKeysMap = (Map<Long, Long>) getNewPrimaryKeysMap(clazz)-->Line_9 $$ newPrimaryKeysMap.put(classPK, newClassPK)[ FD ]
Line_7 $$ long newClassPK = ExportImportClassedModelUtil.getClassPK(newClassedModel)-->Line_19 $$ importPermissions(clazz, classPK, newClassPK)[ FD ]
Line_6 $$ long classPK = ExportImportClassedModelUtil.getClassPK(classedModel)-->Line_9 $$ newPrimaryKeysMap.put(classPK, newClassPK)[ FD ]
Line_10 $$ if (classedModel instanceof StagedGroupedModel && newClassedModel instanceof StagedGroupedModel) -->Line_12 $$ StagedGroupedModel stagedGroupedModel = (StagedGroupedModel) classedModel[ CD ]
Line_3 $$ if (!isResourceMain(classedModel)) -->Line_4 $$ return[ CD ]
Line_10 $$ if (classedModel instanceof StagedGroupedModel && newClassedModel instanceof StagedGroupedModel) -->Line_13 $$ if (!groupIds.containsKey(stagedGroupedModel.getGroupId())) [ CD ]
Line_14 $$ StagedGroupedModel newStagedGroupedModel = (StagedGroupedModel) newClassedModel-->Line_15 $$ groupIds.put(stagedGroupedModel.getGroupId(), newStagedGroupedModel.getGroupId())[ FD ]
Line_6 $$ long classPK = ExportImportClassedModelUtil.getClassPK(classedModel)-->Line_19 $$ importPermissions(clazz, classPK, newClassPK)[ FD ]
Line_2 $$ public void importClassedModel(ClassedModel classedModel, ClassedModel newClassedModel, Class<?> clazz) throws PortalException -->Line_3 $$ if (!isResourceMain(classedModel)) [ CD ]
Line_2 $$ public void importClassedModel(ClassedModel classedModel, ClassedModel newClassedModel, Class<?> clazz) throws PortalException -->Line_18 $$ importLocks(clazz, String.valueOf(classPK), String.valueOf(newClassPK))[ FD ]
Line_2 $$ public void importClassedModel(ClassedModel classedModel, ClassedModel newClassedModel, Class<?> clazz) throws PortalException -->Line_8 $$ Map<Long, Long> newPrimaryKeysMap = (Map<Long, Long>) getNewPrimaryKeysMap(clazz)[ CD ]
Line_11 $$ Map<Long, Long> groupIds = (Map<Long, Long>) getNewPrimaryKeysMap(Group.class)-->Line_13 $$ if (!groupIds.containsKey(stagedGroupedModel.getGroupId())) [ FD ]
Line_2 $$ public void importClassedModel(ClassedModel classedModel, ClassedModel newClassedModel, Class<?> clazz) throws PortalException -->Line_3 $$ if (!isResourceMain(classedModel)) [ FD ]
Line_2 $$ public void importClassedModel(ClassedModel classedModel, ClassedModel newClassedModel, Class<?> clazz) throws PortalException -->Line_19 $$ importPermissions(clazz, classPK, newClassPK)[ CD ]
Line_2 $$ public void importClassedModel(ClassedModel classedModel, ClassedModel newClassedModel, Class<?> clazz) throws PortalException -->Line_19 $$ importPermissions(clazz, classPK, newClassPK)[ FD ]
Line_2 $$ public void importClassedModel(ClassedModel classedModel, ClassedModel newClassedModel, Class<?> clazz) throws PortalException -->Line_6 $$ long classPK = ExportImportClassedModelUtil.getClassPK(classedModel)[ FD ]
