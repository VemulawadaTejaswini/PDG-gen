Line_2 $$ public void testPopulatedNestedScopesMap() -->Line_14 $$ assertEquals(12, state.lookupLocalVariable("foo"))[ CD ]
Line_3 $$ ExpressionState state = getState()-->Line_14 $$ assertEquals(12, state.lookupLocalVariable("foo"))[ FD ]
Line_3 $$ ExpressionState state = getState()-->Line_11 $$ assertEquals("abc", state.lookupLocalVariable("goo"))[ FD ]
Line_3 $$ ExpressionState state = getState()-->Line_13 $$ state.setLocalVariable("foo", 12)[ FD ]
Line_3 $$ ExpressionState state = getState()-->Line_4 $$ assertNull(state.lookupLocalVariable("foo"))[ FD ]
Line_2 $$ public void testPopulatedNestedScopesMap() -->Line_5 $$ assertNull(state.lookupLocalVariable("goo"))[ CD ]
Line_6 $$ Map<String, Object> m = new HashMap<String, Object>()-->Line_9 $$ state.enterScope(m)[ FD ]
Line_2 $$ public void testPopulatedNestedScopesMap() -->Line_16 $$ state.exitScope()[ CD ]
Line_2 $$ public void testPopulatedNestedScopesMap() -->Line_12 $$ state.enterScope(null)[ CD ]
Line_3 $$ ExpressionState state = getState()-->Line_18 $$ assertNull(state.lookupLocalVariable("foo"))[ FD ]
Line_3 $$ ExpressionState state = getState()-->Line_10 $$ assertEquals(34, state.lookupLocalVariable("foo"))[ FD ]
Line_2 $$ public void testPopulatedNestedScopesMap() -->Line_18 $$ assertNull(state.lookupLocalVariable("foo"))[ CD ]
Line_3 $$ ExpressionState state = getState()-->Line_19 $$ assertNull(state.lookupLocalVariable("goo"))[ FD ]
Line_3 $$ ExpressionState state = getState()-->Line_12 $$ state.enterScope(null)[ FD ]
Line_2 $$ public void testPopulatedNestedScopesMap() -->Line_3 $$ ExpressionState state = getState()[ CD ]
Line_2 $$ public void testPopulatedNestedScopesMap() -->Line_11 $$ assertEquals("abc", state.lookupLocalVariable("goo"))[ CD ]
Line_2 $$ public void testPopulatedNestedScopesMap() -->Line_10 $$ assertEquals(34, state.lookupLocalVariable("foo"))[ CD ]
Line_6 $$ Map<String, Object> m = new HashMap<String, Object>()-->Line_8 $$ m.put("goo", "abc")[ FD ]
Line_3 $$ ExpressionState state = getState()-->Line_16 $$ state.exitScope()[ FD ]
Line_6 $$ Map<String, Object> m = new HashMap<String, Object>()-->Line_7 $$ m.put("foo", 34)[ FD ]
Line_2 $$ public void testPopulatedNestedScopesMap() -->Line_17 $$ state.exitScope()[ CD ]
Line_2 $$ public void testPopulatedNestedScopesMap() -->Line_8 $$ m.put("goo", "abc")[ CD ]
Line_3 $$ ExpressionState state = getState()-->Line_17 $$ state.exitScope()[ FD ]
Line_2 $$ public void testPopulatedNestedScopesMap() -->Line_4 $$ assertNull(state.lookupLocalVariable("foo"))[ CD ]
Line_2 $$ public void testPopulatedNestedScopesMap() -->Line_9 $$ state.enterScope(m)[ CD ]
Line_2 $$ public void testPopulatedNestedScopesMap() -->Line_6 $$ Map<String, Object> m = new HashMap<String, Object>()[ CD ]
Line_2 $$ public void testPopulatedNestedScopesMap() -->Line_15 $$ assertEquals("abc", state.lookupLocalVariable("goo"))[ CD ]
Line_3 $$ ExpressionState state = getState()-->Line_15 $$ assertEquals("abc", state.lookupLocalVariable("goo"))[ FD ]
Line_2 $$ public void testPopulatedNestedScopesMap() -->Line_19 $$ assertNull(state.lookupLocalVariable("goo"))[ CD ]
Line_3 $$ ExpressionState state = getState()-->Line_5 $$ assertNull(state.lookupLocalVariable("goo"))[ FD ]
Line_2 $$ public void testPopulatedNestedScopesMap() -->Line_7 $$ m.put("foo", 34)[ CD ]
Line_3 $$ ExpressionState state = getState()-->Line_9 $$ state.enterScope(m)[ FD ]
Line_2 $$ public void testPopulatedNestedScopesMap() -->Line_13 $$ state.setLocalVariable("foo", 12)[ CD ]
