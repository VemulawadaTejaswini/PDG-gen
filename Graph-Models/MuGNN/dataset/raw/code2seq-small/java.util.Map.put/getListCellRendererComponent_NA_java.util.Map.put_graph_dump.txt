Line_14 $$ final LookupElementPresentation presentation = new RealLookupElementPresentation(isSelected ? getMaxWidth() : allowedWidth, normalMetrics, boldMetrics, myLookup)-->Line_30 $$ presentation.setItemTextForeground(JBColor.RED)[ FD ]
Line_39 $$ allowedWidth -= setItemTextLabel(item, new JBColor(isSelected ? SELECTED_FOREGROUND_COLOR : presentation.getItemTextForeground(), presentation.getItemTextForeground()), isSelected, presentation, allowedWidth)-->Line_44 $$ if (allowedWidth > 0) [ FD ]
Line_5 $$ isSelected = false-->Line_57 $$ mySelected.put(index, isSelected)[ FD ]
Line_62 $$ if (useBoxLayout) -->Line_71 $$ myPanel.add(myTypeLabel, BorderLayout.EAST)[ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_45 $$ allowedWidth -= setTypeTextLabel(item, background, foreground, presentation, isSelected ? getMaxWidth() : allowedWidth, isSelected, nonFocusedSelection, normalMetrics)[ FD ]
Line_5 $$ isSelected = false-->Line_39 $$ allowedWidth -= setItemTextLabel(item, new JBColor(isSelected ? SELECTED_FOREGROUND_COLOR : presentation.getItemTextForeground(), presentation.getItemTextForeground()), isSelected, presentation, allowedWidth)[ FD ]
Line_8 $$ final LookupElement item = (LookupElement) value-->Line_13 $$ FontMetrics boldMetrics = getRealFontMetrics(item, true)[ FD ]
Line_5 $$ isSelected = false-->Line_50 $$ setTailTextLabel(isSelected, presentation, foreground, isSelected ? getMaxWidth() : allowedWidth, nonFocusedSelection, normalMetrics)[ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_44 $$ if (allowedWidth > 0) [ CD ]
Line_62 $$ if (useBoxLayout) -->Line_68 $$ myPanel.setLayout(new BorderLayout())[ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_41 $$ myTailComponent.setFont(customFont != null ? customFont : myNormalFont)[ CD ]
Line_3 $$ boolean nonFocusedSelection = isSelected && myLookup.getFocusDegree() == LookupImpl.FocusDegree.SEMI_FOCUSED-->Line_50 $$ setTailTextLabel(isSelected, presentation, foreground, isSelected ? getMaxWidth() : allowedWidth, nonFocusedSelection, normalMetrics)[ FD ]
Line_62 $$ if (useBoxLayout) -->Line_70 $$ myPanel.add(myTailComponent, BorderLayout.CENTER)[ CD ]
Line_5 $$ isSelected = false-->Line_45 $$ allowedWidth -= setTypeTextLabel(item, background, foreground, presentation, isSelected ? getMaxWidth() : allowedWidth, isSelected, nonFocusedSelection, normalMetrics)[ FD ]
Line_14 $$ final LookupElementPresentation presentation = new RealLookupElementPresentation(isSelected ? getMaxWidth() : allowedWidth, normalMetrics, boldMetrics, myLookup)-->Line_22 $$ presentation.setItemTextForeground(JBColor.RED)[ FD ]
Line_14 $$ final LookupElementPresentation presentation = new RealLookupElementPresentation(isSelected ? getMaxWidth() : allowedWidth, normalMetrics, boldMetrics, myLookup)-->Line_50 $$ setTailTextLabel(isSelected, presentation, foreground, isSelected ? getMaxWidth() : allowedWidth, nonFocusedSelection, normalMetrics)[ FD ]
Line_9 $$ final Color foreground = getForegroundColor(isSelected)-->Line_45 $$ allowedWidth -= setTypeTextLabel(item, background, foreground, presentation, isSelected ? getMaxWidth() : allowedWidth, isSelected, nonFocusedSelection, normalMetrics)[ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_48 $$ myTailComponent.setBackground(background)[ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_59 $$ boolean useBoxLayout = isSelected && w > list.getWidth() && ((JBList) list).getExpandableItemsHandler().isEnabled()[ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_58 $$ final double w = myNameComponent.getPreferredSize().getWidth() + myTailComponent.getPreferredSize().getWidth() + myTypeLabel.getPreferredSize().getWidth()[ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_11 $$ int allowedWidth = list.getWidth() - AFTER_TAIL - AFTER_TYPE - getTextIndent()[ CD ]
Line_4 $$ if (!myLookup.isFocused()) -->Line_5 $$ isSelected = false[ CD ]
Line_14 $$ final LookupElementPresentation presentation = new RealLookupElementPresentation(isSelected ? getMaxWidth() : allowedWidth, normalMetrics, boldMetrics, myLookup)-->Line_31 $$ presentation.setItemText("Invalid")[ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_59 $$ boolean useBoxLayout = isSelected && w > list.getWidth() && ((JBList) list).getExpandableItemsHandler().isEnabled()[ FD ]
Line_17 $$ if (item.isValid()) -->Line_31 $$ presentation.setItemText("Invalid")[ CD ]
Line_44 $$ if (allowedWidth > 0) -->Line_45 $$ allowedWidth -= setTypeTextLabel(item, background, foreground, presentation, isSelected ? getMaxWidth() : allowedWidth, isSelected, nonFocusedSelection, normalMetrics)[ CD ]
Line_9 $$ final Color foreground = getForegroundColor(isSelected)-->Line_50 $$ setTailTextLabel(isSelected, presentation, foreground, isSelected ? getMaxWidth() : allowedWidth, nonFocusedSelection, normalMetrics)[ FD ]
Line_14 $$ final LookupElementPresentation presentation = new RealLookupElementPresentation(isSelected ? getMaxWidth() : allowedWidth, normalMetrics, boldMetrics, myLookup)-->Line_39 $$ allowedWidth -= setItemTextLabel(item, new JBColor(isSelected ? SELECTED_FOREGROUND_COLOR : presentation.getItemTextForeground(), presentation.getItemTextForeground()), isSelected, presentation, allowedWidth)[ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_47 $$ myTailComponent.clear()[ CD ]
Line_60 $$ if (useBoxLayout != myPanel.getLayout() instanceof BoxLayout) -->Line_61 $$ myPanel.removeAll()[ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_8 $$ final LookupElement item = (LookupElement) value[ CD ]
Line_5 $$ isSelected = false-->Line_49 $$ if (isSelected || allowedWidth >= 0) [ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_52 $$ if (mySelected.containsKey(index)) [ FD ]
Line_10 $$ final Color background = nonFocusedSelection ? SELECTED_NON_FOCUSED_BACKGROUND_COLOR : isSelected ? SELECTED_BACKGROUND_COLOR : BACKGROUND_COLOR-->Line_48 $$ myTailComponent.setBackground(background)[ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_5 $$ isSelected = false[ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_52 $$ if (mySelected.containsKey(index)) [ CD ]
Line_53 $$ if (!isSelected && mySelected.get(index)) -->Line_54 $$ myPanel.setUpdateExtender(true)[ CD ]
Line_17 $$ if (item.isValid()) -->Line_30 $$ presentation.setItemTextForeground(JBColor.RED)[ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_15 $$ AccessToken token = ReadAction.start()[ CD ]
Line_62 $$ if (useBoxLayout) -->Line_65 $$ myPanel.add(myTailComponent)[ CD ]
Line_14 $$ final LookupElementPresentation presentation = new RealLookupElementPresentation(isSelected ? getMaxWidth() : allowedWidth, normalMetrics, boldMetrics, myLookup)-->Line_19 $$ item.renderElement(presentation)[ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_49 $$ if (isSelected || allowedWidth >= 0) [ CD ]
Line_12 $$ FontMetrics normalMetrics = getRealFontMetrics(item, false)-->Line_50 $$ setTailTextLabel(isSelected, presentation, foreground, isSelected ? getMaxWidth() : allowedWidth, nonFocusedSelection, normalMetrics)[ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_53 $$ if (!isSelected && mySelected.get(index)) [ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_12 $$ FontMetrics normalMetrics = getRealFontMetrics(item, false)[ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_74 $$ return myPanel[ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_3 $$ boolean nonFocusedSelection = isSelected && myLookup.getFocusDegree() == LookupImpl.FocusDegree.SEMI_FOCUSED[ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_9 $$ final Color foreground = getForegroundColor(isSelected)[ FD ]
Line_12 $$ FontMetrics normalMetrics = getRealFontMetrics(item, false)-->Line_45 $$ allowedWidth -= setTypeTextLabel(item, background, foreground, presentation, isSelected ? getMaxWidth() : allowedWidth, isSelected, nonFocusedSelection, normalMetrics)[ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_49 $$ if (isSelected || allowedWidth >= 0) [ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_60 $$ if (useBoxLayout != myPanel.getLayout() instanceof BoxLayout) [ CD ]
Line_10 $$ final Color background = nonFocusedSelection ? SELECTED_NON_FOCUSED_BACKGROUND_COLOR : isSelected ? SELECTED_BACKGROUND_COLOR : BACKGROUND_COLOR-->Line_45 $$ allowedWidth -= setTypeTextLabel(item, background, foreground, presentation, isSelected ? getMaxWidth() : allowedWidth, isSelected, nonFocusedSelection, normalMetrics)[ FD ]
Line_60 $$ if (useBoxLayout != myPanel.getLayout() instanceof BoxLayout) -->Line_62 $$ if (useBoxLayout) [ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_39 $$ allowedWidth -= setItemTextLabel(item, new JBColor(isSelected ? SELECTED_FOREGROUND_COLOR : presentation.getItemTextForeground(), presentation.getItemTextForeground()), isSelected, presentation, allowedWidth)[ CD ]
Line_3 $$ boolean nonFocusedSelection = isSelected && myLookup.getFocusDegree() == LookupImpl.FocusDegree.SEMI_FOCUSED-->Line_45 $$ allowedWidth -= setTypeTextLabel(item, background, foreground, presentation, isSelected ? getMaxWidth() : allowedWidth, isSelected, nonFocusedSelection, normalMetrics)[ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_39 $$ allowedWidth -= setItemTextLabel(item, new JBColor(isSelected ? SELECTED_FOREGROUND_COLOR : presentation.getItemTextForeground(), presentation.getItemTextForeground()), isSelected, presentation, allowedWidth)[ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_38 $$ myNameComponent.setBackground(background)[ CD ]
Line_8 $$ final LookupElement item = (LookupElement) value-->Line_17 $$ if (item.isValid()) [ FD ]
Line_15 $$ AccessToken token = ReadAction.start()-->Line_34 $$ token.finish()[ FD ]
Line_8 $$ final LookupElement item = (LookupElement) value-->Line_40 $$ Font customFont = myLookup.getCustomFont(item, false)[ FD ]
Line_11 $$ int allowedWidth = list.getWidth() - AFTER_TAIL - AFTER_TYPE - getTextIndent()-->Line_44 $$ if (allowedWidth > 0) [ FD ]
Line_62 $$ if (useBoxLayout) -->Line_63 $$ myPanel.setLayout(new BoxLayout(myPanel, BoxLayout.X_AXIS))[ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_36 $$ myNameComponent.clear()[ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_10 $$ final Color background = nonFocusedSelection ? SELECTED_NON_FOCUSED_BACKGROUND_COLOR : isSelected ? SELECTED_BACKGROUND_COLOR : BACKGROUND_COLOR[ CD ]
Line_8 $$ final LookupElement item = (LookupElement) value-->Line_45 $$ allowedWidth -= setTypeTextLabel(item, background, foreground, presentation, isSelected ? getMaxWidth() : allowedWidth, isSelected, nonFocusedSelection, normalMetrics)[ FD ]
Line_52 $$ if (mySelected.containsKey(index)) -->Line_53 $$ if (!isSelected && mySelected.get(index)) [ CD ]
Line_11 $$ int allowedWidth = list.getWidth() - AFTER_TAIL - AFTER_TYPE - getTextIndent()-->Line_39 $$ allowedWidth -= setItemTextLabel(item, new JBColor(isSelected ? SELECTED_FOREGROUND_COLOR : presentation.getItemTextForeground(), presentation.getItemTextForeground()), isSelected, presentation, allowedWidth)[ FD ]
Line_5 $$ isSelected = false-->Line_53 $$ if (!isSelected && mySelected.get(index)) [ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_57 $$ mySelected.put(index, isSelected)[ FD ]
Line_14 $$ final LookupElementPresentation presentation = new RealLookupElementPresentation(isSelected ? getMaxWidth() : allowedWidth, normalMetrics, boldMetrics, myLookup)-->Line_45 $$ allowedWidth -= setTypeTextLabel(item, background, foreground, presentation, isSelected ? getMaxWidth() : allowedWidth, isSelected, nonFocusedSelection, normalMetrics)[ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_40 $$ Font customFont = myLookup.getCustomFont(item, false)[ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_50 $$ setTailTextLabel(isSelected, presentation, foreground, isSelected ? getMaxWidth() : allowedWidth, nonFocusedSelection, normalMetrics)[ FD ]
Line_8 $$ final LookupElement item = (LookupElement) value-->Line_12 $$ FontMetrics normalMetrics = getRealFontMetrics(item, false)[ FD ]
Line_14 $$ final LookupElementPresentation presentation = new RealLookupElementPresentation(isSelected ? getMaxWidth() : allowedWidth, normalMetrics, boldMetrics, myLookup)-->Line_23 $$ presentation.setItemText("Error occurred, see the log in Help | Show Log")[ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_42 $$ myTypeLabel.setFont(customFont != null ? customFont : myNormalFont)[ CD ]
Line_62 $$ if (useBoxLayout) -->Line_66 $$ myPanel.add(myTypeLabel)[ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_57 $$ mySelected.put(index, isSelected)[ CD ]
Line_5 $$ isSelected = false-->Line_9 $$ final Color foreground = getForegroundColor(isSelected)[ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_11 $$ int allowedWidth = list.getWidth() - AFTER_TAIL - AFTER_TYPE - getTextIndent()[ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_43 $$ myTypeLabel.clear()[ CD ]
Line_10 $$ final Color background = nonFocusedSelection ? SELECTED_NON_FOCUSED_BACKGROUND_COLOR : isSelected ? SELECTED_BACKGROUND_COLOR : BACKGROUND_COLOR-->Line_38 $$ myNameComponent.setBackground(background)[ FD ]
Line_62 $$ if (useBoxLayout) -->Line_69 $$ myPanel.add(myNameComponent, BorderLayout.WEST)[ CD ]
Line_11 $$ int allowedWidth = list.getWidth() - AFTER_TAIL - AFTER_TYPE - getTextIndent()-->Line_45 $$ allowedWidth -= setTypeTextLabel(item, background, foreground, presentation, isSelected ? getMaxWidth() : allowedWidth, isSelected, nonFocusedSelection, normalMetrics)[ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_14 $$ final LookupElementPresentation presentation = new RealLookupElementPresentation(isSelected ? getMaxWidth() : allowedWidth, normalMetrics, boldMetrics, myLookup)[ CD ]
Line_8 $$ final LookupElement item = (LookupElement) value-->Line_19 $$ item.renderElement(presentation)[ FD ]
Line_39 $$ allowedWidth -= setItemTextLabel(item, new JBColor(isSelected ? SELECTED_FOREGROUND_COLOR : presentation.getItemTextForeground(), presentation.getItemTextForeground()), isSelected, presentation, allowedWidth)-->Line_45 $$ allowedWidth -= setTypeTextLabel(item, background, foreground, presentation, isSelected ? getMaxWidth() : allowedWidth, isSelected, nonFocusedSelection, normalMetrics)[ FD ]
Line_62 $$ if (useBoxLayout) -->Line_64 $$ myPanel.add(myNameComponent)[ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_4 $$ if (!myLookup.isFocused()) [ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_37 $$ myNameComponent.setIcon(augmentIcon(presentation.getIcon(), myEmptyIcon))[ CD ]
Line_49 $$ if (isSelected || allowedWidth >= 0) -->Line_50 $$ setTailTextLabel(isSelected, presentation, foreground, isSelected ? getMaxWidth() : allowedWidth, nonFocusedSelection, normalMetrics)[ CD ]
Line_59 $$ boolean useBoxLayout = isSelected && w > list.getWidth() && ((JBList) list).getExpandableItemsHandler().isEnabled()-->Line_60 $$ if (useBoxLayout != myPanel.getLayout() instanceof BoxLayout) [ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_9 $$ final Color foreground = getForegroundColor(isSelected)[ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, Object value, int index, boolean isSelected, boolean hasFocus) -->Line_13 $$ FontMetrics boldMetrics = getRealFontMetrics(item, true)[ CD ]
Line_14 $$ final LookupElementPresentation presentation = new RealLookupElementPresentation(isSelected ? getMaxWidth() : allowedWidth, normalMetrics, boldMetrics, myLookup)-->Line_37 $$ myNameComponent.setIcon(augmentIcon(presentation.getIcon(), myEmptyIcon))[ FD ]
Line_8 $$ final LookupElement item = (LookupElement) value-->Line_39 $$ allowedWidth -= setItemTextLabel(item, new JBColor(isSelected ? SELECTED_FOREGROUND_COLOR : presentation.getItemTextForeground(), presentation.getItemTextForeground()), isSelected, presentation, allowedWidth)[ FD ]
