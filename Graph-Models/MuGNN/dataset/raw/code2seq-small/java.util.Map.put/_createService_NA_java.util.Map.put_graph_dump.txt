Line_2 $$ private void _createService(Entity entity, int sessionType) throws Exception -->Line_16 $$ Map<String, Object> context = _getContext()[ CD ]
Line_2 $$ private void _createService(Entity entity, int sessionType) throws Exception -->Line_10 $$ if (superClassValue.endsWith(entity.getName() + _getSessionTypeName(sessionType) + "ServiceBaseImpl")) [ CD ]
Line_10 $$ if (superClassValue.endsWith(entity.getName() + _getSessionTypeName(sessionType) + "ServiceBaseImpl")) -->Line_13 $$ imports.addAll(Arrays.asList(parentJavaSource.getImports()))[ CD ]
Line_3 $$ Set<String> imports = new HashSet()-->Line_18 $$ context.put("imports", imports)[ FD ]
Line_4 $$ JavaClass javaClass = _getJavaClass(_outputPath + "/service/impl/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceImpl.java")-->Line_5 $$ JavaSource javaSource = javaClass.getSource()[ FD ]
Line_10 $$ if (superClassValue.endsWith(entity.getName() + _getSessionTypeName(sessionType) + "ServiceBaseImpl")) -->Line_12 $$ JavaSource parentJavaSource = parentJavaClass.getSource()[ CD ]
Line_3 $$ Set<String> imports = new HashSet()-->Line_6 $$ imports.addAll(Arrays.asList(javaSource.getImports()))[ FD ]
Line_21 $$ context = _putDeprecatedKeys(context, javaClass)-->Line_22 $$ String content = _processTemplate(_tplService, context)[ FD ]
Line_10 $$ if (superClassValue.endsWith(entity.getName() + _getSessionTypeName(sessionType) + "ServiceBaseImpl")) -->Line_11 $$ JavaClass parentJavaClass = _getJavaClass(_outputPath + "/service/base/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceBaseImpl.java")[ CD ]
Line_16 $$ Map<String, Object> context = _getContext()-->Line_17 $$ context.put("entity", entity)[ FD ]
Line_2 $$ private void _createService(Entity entity, int sessionType) throws Exception -->Line_21 $$ context = _putDeprecatedKeys(context, javaClass)[ CD ]
Line_2 $$ private void _createService(Entity entity, int sessionType) throws Exception -->Line_9 $$ String superClassValue = superClass.getValue()[ CD ]
Line_22 $$ String content = _processTemplate(_tplService, context)-->Line_24 $$ ToolsUtil.writeFile(ejbFile, content, _author, _modifiedFileNames)[ FD ]
Line_2 $$ private void _createService(Entity entity, int sessionType) throws Exception -->Line_6 $$ imports.addAll(Arrays.asList(javaSource.getImports()))[ CD ]
Line_5 $$ JavaSource javaSource = javaClass.getSource()-->Line_6 $$ imports.addAll(Arrays.asList(javaSource.getImports()))[ FD ]
Line_8 $$ Type superClass = javaClass.getSuperClass()-->Line_9 $$ String superClassValue = superClass.getValue()[ FD ]
Line_4 $$ JavaClass javaClass = _getJavaClass(_outputPath + "/service/impl/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceImpl.java")-->Line_21 $$ context = _putDeprecatedKeys(context, javaClass)[ FD ]
Line_9 $$ String superClassValue = superClass.getValue()-->Line_10 $$ if (superClassValue.endsWith(entity.getName() + _getSessionTypeName(sessionType) + "ServiceBaseImpl")) [ FD ]
Line_2 $$ private void _createService(Entity entity, int sessionType) throws Exception -->Line_7 $$ JavaMethod[] methods = _getMethods(javaClass)[ CD ]
Line_7 $$ JavaMethod[] methods = _getMethods(javaClass)-->Line_19 $$ context.put("methods", methods)[ FD ]
Line_16 $$ Map<String, Object> context = _getContext()-->Line_19 $$ context.put("methods", methods)[ FD ]
Line_2 $$ private void _createService(Entity entity, int sessionType) throws Exception -->Line_17 $$ context.put("entity", entity)[ FD ]
Line_2 $$ private void _createService(Entity entity, int sessionType) throws Exception -->Line_20 $$ context.put("sessionTypeName", _getSessionTypeName(sessionType))[ FD ]
Line_2 $$ private void _createService(Entity entity, int sessionType) throws Exception -->Line_11 $$ JavaClass parentJavaClass = _getJavaClass(_outputPath + "/service/base/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceBaseImpl.java")[ FD ]
Line_2 $$ private void _createService(Entity entity, int sessionType) throws Exception -->Line_4 $$ JavaClass javaClass = _getJavaClass(_outputPath + "/service/impl/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceImpl.java")[ FD ]
Line_2 $$ private void _createService(Entity entity, int sessionType) throws Exception -->Line_23 $$ File ejbFile = new File(_serviceOutputPath + "/service/" + entity.getName() + _getSessionTypeName(sessionType) + "Service.java")[ CD ]
Line_16 $$ Map<String, Object> context = _getContext()-->Line_20 $$ context.put("sessionTypeName", _getSessionTypeName(sessionType))[ FD ]
Line_2 $$ private void _createService(Entity entity, int sessionType) throws Exception -->Line_17 $$ context.put("entity", entity)[ CD ]
Line_2 $$ private void _createService(Entity entity, int sessionType) throws Exception -->Line_10 $$ if (superClassValue.endsWith(entity.getName() + _getSessionTypeName(sessionType) + "ServiceBaseImpl")) [ FD ]
Line_7 $$ JavaMethod[] methods = _getMethods(javaClass)-->Line_14 $$ methods = _mergeMethods(methods, parentJavaClass.getMethods(), true)[ FD ]
Line_12 $$ JavaSource parentJavaSource = parentJavaClass.getSource()-->Line_13 $$ imports.addAll(Arrays.asList(parentJavaSource.getImports()))[ FD ]
Line_2 $$ private void _createService(Entity entity, int sessionType) throws Exception -->Line_3 $$ Set<String> imports = new HashSet()[ CD ]
Line_11 $$ JavaClass parentJavaClass = _getJavaClass(_outputPath + "/service/base/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceBaseImpl.java")-->Line_14 $$ methods = _mergeMethods(methods, parentJavaClass.getMethods(), true)[ FD ]
Line_16 $$ Map<String, Object> context = _getContext()-->Line_22 $$ String content = _processTemplate(_tplService, context)[ FD ]
Line_23 $$ File ejbFile = new File(_serviceOutputPath + "/service/" + entity.getName() + _getSessionTypeName(sessionType) + "Service.java")-->Line_24 $$ ToolsUtil.writeFile(ejbFile, content, _author, _modifiedFileNames)[ FD ]
Line_2 $$ private void _createService(Entity entity, int sessionType) throws Exception -->Line_20 $$ context.put("sessionTypeName", _getSessionTypeName(sessionType))[ CD ]
Line_2 $$ private void _createService(Entity entity, int sessionType) throws Exception -->Line_24 $$ ToolsUtil.writeFile(ejbFile, content, _author, _modifiedFileNames)[ CD ]
Line_4 $$ JavaClass javaClass = _getJavaClass(_outputPath + "/service/impl/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceImpl.java")-->Line_8 $$ Type superClass = javaClass.getSuperClass()[ FD ]
Line_3 $$ Set<String> imports = new HashSet()-->Line_13 $$ imports.addAll(Arrays.asList(parentJavaSource.getImports()))[ FD ]
Line_16 $$ Map<String, Object> context = _getContext()-->Line_21 $$ context = _putDeprecatedKeys(context, javaClass)[ FD ]
Line_2 $$ private void _createService(Entity entity, int sessionType) throws Exception -->Line_4 $$ JavaClass javaClass = _getJavaClass(_outputPath + "/service/impl/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceImpl.java")[ CD ]
Line_2 $$ private void _createService(Entity entity, int sessionType) throws Exception -->Line_23 $$ File ejbFile = new File(_serviceOutputPath + "/service/" + entity.getName() + _getSessionTypeName(sessionType) + "Service.java")[ FD ]
Line_14 $$ methods = _mergeMethods(methods, parentJavaClass.getMethods(), true)-->Line_19 $$ context.put("methods", methods)[ FD ]
Line_2 $$ private void _createService(Entity entity, int sessionType) throws Exception -->Line_18 $$ context.put("imports", imports)[ CD ]
Line_10 $$ if (superClassValue.endsWith(entity.getName() + _getSessionTypeName(sessionType) + "ServiceBaseImpl")) -->Line_14 $$ methods = _mergeMethods(methods, parentJavaClass.getMethods(), true)[ CD ]
Line_2 $$ private void _createService(Entity entity, int sessionType) throws Exception -->Line_19 $$ context.put("methods", methods)[ CD ]
Line_2 $$ private void _createService(Entity entity, int sessionType) throws Exception -->Line_8 $$ Type superClass = javaClass.getSuperClass()[ CD ]
Line_16 $$ Map<String, Object> context = _getContext()-->Line_18 $$ context.put("imports", imports)[ FD ]
Line_2 $$ private void _createService(Entity entity, int sessionType) throws Exception -->Line_22 $$ String content = _processTemplate(_tplService, context)[ CD ]
Line_4 $$ JavaClass javaClass = _getJavaClass(_outputPath + "/service/impl/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceImpl.java")-->Line_7 $$ JavaMethod[] methods = _getMethods(javaClass)[ FD ]
Line_11 $$ JavaClass parentJavaClass = _getJavaClass(_outputPath + "/service/base/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceBaseImpl.java")-->Line_12 $$ JavaSource parentJavaSource = parentJavaClass.getSource()[ FD ]
Line_2 $$ private void _createService(Entity entity, int sessionType) throws Exception -->Line_5 $$ JavaSource javaSource = javaClass.getSource()[ CD ]
