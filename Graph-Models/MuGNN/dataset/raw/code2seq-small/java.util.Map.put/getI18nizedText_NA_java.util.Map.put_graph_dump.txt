Line_5 $$ if (textGenerator != null) -->Line_6 $$ return generateText(textGenerator, propertyKey, getPropertiesFile(), myLiteralExpression)[ CD ]
Line_10 $$ FileTemplate template = FileTemplateManager.getInstance(myProject).getCodeTemplate(templateName)-->Line_18 $$ text = template.getText(attributes)[ FD ]
Line_2 $$ public String getI18nizedText() -->Line_5 $$ if (textGenerator != null) [ CD ]
Line_3 $$ String propertyKey = StringUtil.escapeStringCharacters(getKey())-->Line_6 $$ return generateText(textGenerator, propertyKey, getPropertiesFile(), myLiteralExpression)[ FD ]
Line_2 $$ public String getI18nizedText() -->Line_22 $$ return text[ CD ]
Line_4 $$ I18nizedTextGenerator textGenerator = myResourceBundleManager.getI18nizedTextGenerator()-->Line_6 $$ return generateText(textGenerator, propertyKey, getPropertiesFile(), myLiteralExpression)[ FD ]
Line_2 $$ public String getI18nizedText() -->Line_9 $$ LOG.assertTrue(templateName != null)[ CD ]
Line_2 $$ public String getI18nizedText() -->Line_13 $$ attributes.put(RESOURCE_BUNDLE_OPTION_KEY, getResourceBundleText())[ CD ]
Line_2 $$ public String getI18nizedText() -->Line_8 $$ String templateName = getTemplateName()[ CD ]
Line_11 $$ Map<String, String> attributes = new THashMap<String, String>()-->Line_14 $$ attributes.put(PROPERTY_VALUE_ATTR, StringUtil.escapeStringCharacters(myDefaultPropertyValue))[ FD ]
Line_16 $$ String text = null-->Line_18 $$ text = template.getText(attributes)[ FD ]
Line_8 $$ String templateName = getTemplateName()-->Line_10 $$ FileTemplate template = FileTemplateManager.getInstance(myProject).getCodeTemplate(templateName)[ FD ]
Line_2 $$ public String getI18nizedText() -->Line_16 $$ String text = null[ CD ]
Line_2 $$ public String getI18nizedText() -->Line_12 $$ attributes.put(PROPERTY_KEY_OPTION_KEY, propertyKey)[ CD ]
Line_11 $$ Map<String, String> attributes = new THashMap<String, String>()-->Line_12 $$ attributes.put(PROPERTY_KEY_OPTION_KEY, propertyKey)[ FD ]
Line_11 $$ Map<String, String> attributes = new THashMap<String, String>()-->Line_13 $$ attributes.put(RESOURCE_BUNDLE_OPTION_KEY, getResourceBundleText())[ FD ]
Line_11 $$ Map<String, String> attributes = new THashMap<String, String>()-->Line_18 $$ text = template.getText(attributes)[ FD ]
Line_4 $$ I18nizedTextGenerator textGenerator = myResourceBundleManager.getI18nizedTextGenerator()-->Line_5 $$ if (textGenerator != null) [ FD ]
Line_2 $$ public String getI18nizedText() -->Line_15 $$ addAdditionalAttributes(attributes)[ CD ]
Line_2 $$ public String getI18nizedText() -->Line_10 $$ FileTemplate template = FileTemplateManager.getInstance(myProject).getCodeTemplate(templateName)[ CD ]
Line_3 $$ String propertyKey = StringUtil.escapeStringCharacters(getKey())-->Line_12 $$ attributes.put(PROPERTY_KEY_OPTION_KEY, propertyKey)[ FD ]
Line_2 $$ public String getI18nizedText() -->Line_14 $$ attributes.put(PROPERTY_VALUE_ATTR, StringUtil.escapeStringCharacters(myDefaultPropertyValue))[ CD ]
Line_2 $$ public String getI18nizedText() -->Line_4 $$ I18nizedTextGenerator textGenerator = myResourceBundleManager.getI18nizedTextGenerator()[ CD ]
Line_11 $$ Map<String, String> attributes = new THashMap<String, String>()-->Line_15 $$ addAdditionalAttributes(attributes)[ FD ]
Line_2 $$ public String getI18nizedText() -->Line_3 $$ String propertyKey = StringUtil.escapeStringCharacters(getKey())[ CD ]
Line_2 $$ public String getI18nizedText() -->Line_11 $$ Map<String, String> attributes = new THashMap<String, String>()[ CD ]
