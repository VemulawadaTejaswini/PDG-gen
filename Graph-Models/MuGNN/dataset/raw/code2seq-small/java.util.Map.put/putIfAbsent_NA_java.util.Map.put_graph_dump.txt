Line_9 $$ if (!list.contains(v)) -->Line_11 $$ cache.put(k, list)[ CD ]
Line_2 $$ public synchronized void putIfAbsent(K k, V v) -->Line_4 $$ if (list == null || list.isEmpty()) [ CD ]
Line_2 $$ public synchronized void putIfAbsent(K k, V v) -->Line_3 $$ List<V> list = cache.get(k)[ CD ]
Line_3 $$ List<V> list = cache.get(k)-->Line_4 $$ if (list == null || list.isEmpty()) [ FD ]
Line_3 $$ List<V> list = cache.get(k)-->Line_5 $$ list = new ArrayList<V>()[ FD ]
Line_3 $$ List<V> list = cache.get(k)-->Line_9 $$ if (!list.contains(v)) [ FD ]
Line_2 $$ public synchronized void putIfAbsent(K k, V v) -->Line_11 $$ cache.put(k, list)[ FD ]
Line_2 $$ public synchronized void putIfAbsent(K k, V v) -->Line_10 $$ list.add(v)[ FD ]
Line_9 $$ if (!list.contains(v)) -->Line_10 $$ list.add(v)[ CD ]
Line_3 $$ List<V> list = cache.get(k)-->Line_7 $$ list = new ArrayList<V>(list)[ FD ]
Line_2 $$ public synchronized void putIfAbsent(K k, V v) -->Line_9 $$ if (!list.contains(v)) [ CD ]
Line_3 $$ List<V> list = cache.get(k)-->Line_11 $$ cache.put(k, list)[ FD ]
Line_5 $$ list = new ArrayList<V>()-->Line_7 $$ list = new ArrayList<V>(list)[ FD ]
Line_7 $$ list = new ArrayList<V>(list)-->Line_10 $$ list.add(v)[ FD ]
Line_5 $$ list = new ArrayList<V>()-->Line_11 $$ cache.put(k, list)[ FD ]
Line_5 $$ list = new ArrayList<V>()-->Line_10 $$ list.add(v)[ FD ]
Line_4 $$ if (list == null || list.isEmpty()) -->Line_7 $$ list = new ArrayList<V>(list)[ CD ]
Line_7 $$ list = new ArrayList<V>(list)-->Line_9 $$ if (!list.contains(v)) [ FD ]
Line_3 $$ List<V> list = cache.get(k)-->Line_10 $$ list.add(v)[ FD ]
Line_7 $$ list = new ArrayList<V>(list)-->Line_11 $$ cache.put(k, list)[ FD ]
Line_2 $$ public synchronized void putIfAbsent(K k, V v) -->Line_3 $$ List<V> list = cache.get(k)[ FD ]
Line_4 $$ if (list == null || list.isEmpty()) -->Line_5 $$ list = new ArrayList<V>()[ CD ]
Line_2 $$ public synchronized void putIfAbsent(K k, V v) -->Line_9 $$ if (!list.contains(v)) [ FD ]
Line_5 $$ list = new ArrayList<V>()-->Line_9 $$ if (!list.contains(v)) [ FD ]
