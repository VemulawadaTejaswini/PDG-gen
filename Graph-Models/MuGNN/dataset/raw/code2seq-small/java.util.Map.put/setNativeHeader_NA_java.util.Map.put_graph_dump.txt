Line_13 $$ map = new LinkedMultiValueMap<String, String>(4)-->Line_20 $$ map.put(name, values)[ FD ]
Line_5 $$ if (value == null) -->Line_6 $$ if (map != null && map.get(name) != null) [ CD ]
Line_2 $$ public void setNativeHeader(String name, String value) -->Line_17 $$ values.add(value)[ CD ]
Line_2 $$ public void setNativeHeader(String name, String value) -->Line_18 $$ if (!ObjectUtils.nullSafeEquals(values, getHeader(name))) [ CD ]
Line_16 $$ List<String> values = new LinkedList<String>()-->Line_17 $$ values.add(value)[ FD ]
Line_4 $$ Map<String, List<String>> map = getNativeHeaders()-->Line_13 $$ map = new LinkedMultiValueMap<String, String>(4)[ FD ]
Line_12 $$ if (map == null) -->Line_13 $$ map = new LinkedMultiValueMap<String, String>(4)[ CD ]
Line_2 $$ public void setNativeHeader(String name, String value) -->Line_4 $$ Map<String, List<String>> map = getNativeHeaders()[ CD ]
Line_2 $$ public void setNativeHeader(String name, String value) -->Line_12 $$ if (map == null) [ CD ]
Line_2 $$ public void setNativeHeader(String name, String value) -->Line_3 $$ Assert.state(isMutable(), "Already immutable")[ CD ]
Line_6 $$ if (map != null && map.get(name) != null) -->Line_8 $$ map.remove(name)[ CD ]
Line_6 $$ if (map != null && map.get(name) != null) -->Line_7 $$ setModified(true)[ CD ]
Line_2 $$ public void setNativeHeader(String name, String value) -->Line_8 $$ map.remove(name)[ FD ]
Line_2 $$ public void setNativeHeader(String name, String value) -->Line_16 $$ List<String> values = new LinkedList<String>()[ CD ]
Line_16 $$ List<String> values = new LinkedList<String>()-->Line_18 $$ if (!ObjectUtils.nullSafeEquals(values, getHeader(name))) [ FD ]
Line_4 $$ Map<String, List<String>> map = getNativeHeaders()-->Line_12 $$ if (map == null) [ FD ]
Line_4 $$ Map<String, List<String>> map = getNativeHeaders()-->Line_14 $$ setHeader(NATIVE_HEADERS, map)[ FD ]
Line_13 $$ map = new LinkedMultiValueMap<String, String>(4)-->Line_14 $$ setHeader(NATIVE_HEADERS, map)[ FD ]
Line_18 $$ if (!ObjectUtils.nullSafeEquals(values, getHeader(name))) -->Line_20 $$ map.put(name, values)[ CD ]
Line_16 $$ List<String> values = new LinkedList<String>()-->Line_20 $$ map.put(name, values)[ FD ]
Line_4 $$ Map<String, List<String>> map = getNativeHeaders()-->Line_8 $$ map.remove(name)[ FD ]
Line_2 $$ public void setNativeHeader(String name, String value) -->Line_18 $$ if (!ObjectUtils.nullSafeEquals(values, getHeader(name))) [ FD ]
Line_18 $$ if (!ObjectUtils.nullSafeEquals(values, getHeader(name))) -->Line_19 $$ setModified(true)[ CD ]
Line_2 $$ public void setNativeHeader(String name, String value) -->Line_5 $$ if (value == null) [ CD ]
Line_2 $$ public void setNativeHeader(String name, String value) -->Line_5 $$ if (value == null) [ FD ]
Line_12 $$ if (map == null) -->Line_14 $$ setHeader(NATIVE_HEADERS, map)[ CD ]
Line_5 $$ if (value == null) -->Line_10 $$ return[ CD ]
Line_2 $$ public void setNativeHeader(String name, String value) -->Line_20 $$ map.put(name, values)[ FD ]
Line_4 $$ Map<String, List<String>> map = getNativeHeaders()-->Line_6 $$ if (map != null && map.get(name) != null) [ FD ]
Line_2 $$ public void setNativeHeader(String name, String value) -->Line_17 $$ values.add(value)[ FD ]
Line_2 $$ public void setNativeHeader(String name, String value) -->Line_6 $$ if (map != null && map.get(name) != null) [ FD ]
Line_4 $$ Map<String, List<String>> map = getNativeHeaders()-->Line_20 $$ map.put(name, values)[ FD ]
