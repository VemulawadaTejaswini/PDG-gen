Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_16 $$ tree.put("Database Tools", Pair.create(PlatformImplIcons.DatabaseTools, Arrays.asList("com.intellij.database")))[ FD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_19 $$ featuredPlugins.put("Scala", "Custom Languages:Plugin for Scala language support:org.intellij.scala")[ CD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_18 $$ tree.put("Plugin Development", Pair.create(PlatformImplIcons.PluginDevelopment, Arrays.asList("DevKit")))[ FD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_3 $$ tree.put(CORE, Pair.create((Icon) null, Arrays.asList("com.intellij.copyright", "com.intellij.java-i18n", "org.intellij.intelliLang", "com.intellij.properties", "Refactor-X", "Type Migration", "ZKM")))[ CD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_23 $$ featuredPlugins.put("Atlassian Connector", "Tools Integration:Integration for Atlassian JIRA, Bamboo, Cricible, FishEye:atlassian-idea-plugin")[ CD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_20 $$ featuredPlugins.put("Live Edit Tool", "Web Development:Provides live edit HTML/CSS/JavaScript:com.intellij.plugins.html.instantEditing")[ FD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_18 $$ tree.put("Plugin Development", Pair.create(PlatformImplIcons.PluginDevelopment, Arrays.asList("DevKit")))[ CD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_16 $$ tree.put("Database Tools", Pair.create(PlatformImplIcons.DatabaseTools, Arrays.asList("com.intellij.database")))[ CD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_13 $$ tree.put("Swing", Pair.create(PlatformImplIcons.Swing, Arrays.asList("com.intellij.uiDesigner")))[ CD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_12 $$ tree.put("Clouds", Pair.create(PlatformImplIcons.Clouds, Arrays.asList("CloudFoundry", "CloudBees", "Heroku", "OpenShift")))[ FD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_21 $$ addVimPlugin(featuredPlugins)[ FD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_9 $$ addVcsGroup(tree)[ CD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_10 $$ tree.put("Test Tools", Pair.create(PlatformImplIcons.TestTools, Arrays.asList("JUnit", "TestNG-J", "cucumber-java", "cucumber", "Coverage:Coverage,Emma")))[ FD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_23 $$ featuredPlugins.put("Atlassian Connector", "Tools Integration:Integration for Atlassian JIRA, Bamboo, Cricible, FishEye:atlassian-idea-plugin")[ FD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_22 $$ featuredPlugins.put("NodeJS", "JavaScript:Node.js integration:NodeJS")[ FD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_21 $$ addVimPlugin(featuredPlugins)[ CD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_5 $$ tree.put("Java Frameworks", Pair.create(PlatformImplIcons.JavaFrameworks, Arrays.asList("com.intellij.appengine", "org.intellij.grails", "com.intellij.gwt", "com.intellij.vaadin", "JBoss Seam:com.intellij.seam,com.intellij.seam.pages,com.intellij.seam.pageflow", "JBoss jBPM:JBPM", "Struts:StrutsAssistant,com.intellij.struts2", "com.intellij.hibernate", "Spring:com.intellij.spring.batch," + "com.intellij.spring.data," + "com.intellij.spring.integration," + "com.intellij.spring.osgi," + "com.intellij.spring.security," + "com.intellij.spring," + "com.intellij.spring.webflow," + "com.intellij.spring.ws,com.intellij.aop", "J2EE:com.intellij.javaee.batch," + "com.intellij.beanValidation," + "com.intellij.cdi," + "com.intellij.javaee," + "com.intellij.jsf," + "com.intellij.javaee.extensions," + "com.jetbrains.restWebServices," + "Java EE: Web Services (JAX-WS)," + "com.intellij.javaee.webSocket," + "com.intellij.jsp," + "com.intellij.persistence", "com.intellij.freemarker", "com.intellij.tapestry", "com.intellij.velocity", "GuiceyIDEA", "com.intellij.aspectj", "Osmorc")))[ FD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_15 $$ tree.put("Android", Pair.create(PlatformImplIcons.Android, Arrays.asList("org.jetbrains.android", "com.intellij.android-designer")))[ CD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_7 $$ tree.put("Web Development", Pair.create(PlatformImplIcons.WebDevelopment, Arrays.asList("HTML:HtmlTools,QuirksMode,W3Validators", "org.jetbrains.plugins.haml", "com.jetbrains.plugins.jade", "com.intellij.css", "org.jetbrains.plugins.less", "org.jetbrains.plugins.sass", "org.jetbrains.plugins.stylus", "JavaScript:JavaScript,JavaScriptDebugger,JSIntentionPowerPack", "org.coffeescript", "com.intellij.flex", "com.intellij.plugins.html.instantEditing", "com.jetbrains.restClient")))[ FD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_6 $$ tree.put("Build Tools", Pair.create(PlatformImplIcons.BuildTools, Arrays.asList("AntSupport", "Maven:org.jetbrains.idea.maven,org.jetbrains.idea.maven.ext", "org.jetbrains.plugins.gradle")))[ CD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_20 $$ featuredPlugins.put("Live Edit Tool", "Web Development:Provides live edit HTML/CSS/JavaScript:com.intellij.plugins.html.instantEditing")[ CD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_11 $$ tree.put("Application Servers", Pair.create(PlatformImplIcons.ApplicationServers, Arrays.asList("com.intellij.javaee.view", "Geronimo", "GlassFish", "JBoss", "Jetty", "Resin", "Tomcat", "Weblogic", "WebSphere", "com.intellij.dmserver", "JSR45Plugin")))[ FD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_17 $$ tree.put("Other Tools", Pair.create(PlatformImplIcons.OtherTools, Arrays.asList("ByteCodeViewer", "com.intellij.dsm", "org.jetbrains.idea.eclipse", "Remote Access:com.jetbrains.plugins.webDeployment,org.jetbrains.plugins.remote-run", "Task Management:com.intellij.tasks,com.intellij.tasks.timeTracking", "org.jetbrains.plugins.terminal", "com.intellij.diagram", "org.jetbrains.plugins.yaml", "XSLT and XPath:XPathView,XSLT-Debugger")))[ CD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_22 $$ featuredPlugins.put("NodeJS", "JavaScript:Node.js integration:NodeJS")[ CD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_7 $$ tree.put("Web Development", Pair.create(PlatformImplIcons.WebDevelopment, Arrays.asList("HTML:HtmlTools,QuirksMode,W3Validators", "org.jetbrains.plugins.haml", "com.jetbrains.plugins.jade", "com.intellij.css", "org.jetbrains.plugins.less", "org.jetbrains.plugins.sass", "org.jetbrains.plugins.stylus", "JavaScript:JavaScript,JavaScriptDebugger,JSIntentionPowerPack", "org.coffeescript", "com.intellij.flex", "com.intellij.plugins.html.instantEditing", "com.jetbrains.restClient")))[ CD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_12 $$ tree.put("Clouds", Pair.create(PlatformImplIcons.Clouds, Arrays.asList("CloudFoundry", "CloudBees", "Heroku", "OpenShift")))[ CD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_3 $$ tree.put(CORE, Pair.create((Icon) null, Arrays.asList("com.intellij.copyright", "com.intellij.java-i18n", "org.intellij.intelliLang", "com.intellij.properties", "Refactor-X", "Type Migration", "ZKM")))[ FD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_10 $$ tree.put("Test Tools", Pair.create(PlatformImplIcons.TestTools, Arrays.asList("JUnit", "TestNG-J", "cucumber-java", "cucumber", "Coverage:Coverage,Emma")))[ CD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_6 $$ tree.put("Build Tools", Pair.create(PlatformImplIcons.BuildTools, Arrays.asList("AntSupport", "Maven:org.jetbrains.idea.maven,org.jetbrains.idea.maven.ext", "org.jetbrains.plugins.gradle")))[ FD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_17 $$ tree.put("Other Tools", Pair.create(PlatformImplIcons.OtherTools, Arrays.asList("ByteCodeViewer", "com.intellij.dsm", "org.jetbrains.idea.eclipse", "Remote Access:com.jetbrains.plugins.webDeployment,org.jetbrains.plugins.remote-run", "Task Management:com.intellij.tasks,com.intellij.tasks.timeTracking", "org.jetbrains.plugins.terminal", "com.intellij.diagram", "org.jetbrains.plugins.yaml", "XSLT and XPath:XPathView,XSLT-Debugger")))[ FD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_15 $$ tree.put("Android", Pair.create(PlatformImplIcons.Android, Arrays.asList("org.jetbrains.android", "com.intellij.android-designer")))[ FD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_5 $$ tree.put("Java Frameworks", Pair.create(PlatformImplIcons.JavaFrameworks, Arrays.asList("com.intellij.appengine", "org.intellij.grails", "com.intellij.gwt", "com.intellij.vaadin", "JBoss Seam:com.intellij.seam,com.intellij.seam.pages,com.intellij.seam.pageflow", "JBoss jBPM:JBPM", "Struts:StrutsAssistant,com.intellij.struts2", "com.intellij.hibernate", "Spring:com.intellij.spring.batch," + "com.intellij.spring.data," + "com.intellij.spring.integration," + "com.intellij.spring.osgi," + "com.intellij.spring.security," + "com.intellij.spring," + "com.intellij.spring.webflow," + "com.intellij.spring.ws,com.intellij.aop", "J2EE:com.intellij.javaee.batch," + "com.intellij.beanValidation," + "com.intellij.cdi," + "com.intellij.javaee," + "com.intellij.jsf," + "com.intellij.javaee.extensions," + "com.jetbrains.restWebServices," + "Java EE: Web Services (JAX-WS)," + "com.intellij.javaee.webSocket," + "com.intellij.jsp," + "com.intellij.persistence", "com.intellij.freemarker", "com.intellij.tapestry", "com.intellij.velocity", "GuiceyIDEA", "com.intellij.aspectj", "Osmorc")))[ CD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_11 $$ tree.put("Application Servers", Pair.create(PlatformImplIcons.ApplicationServers, Arrays.asList("com.intellij.javaee.view", "Geronimo", "GlassFish", "JBoss", "Jetty", "Resin", "Tomcat", "Weblogic", "WebSphere", "com.intellij.dmserver", "JSR45Plugin")))[ CD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_13 $$ tree.put("Swing", Pair.create(PlatformImplIcons.Swing, Arrays.asList("com.intellij.uiDesigner")))[ FD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_19 $$ featuredPlugins.put("Scala", "Custom Languages:Plugin for Scala language support:org.intellij.scala")[ FD ]
Line_2 $$ protected void initGroups(Map<String, Pair<Icon, List<String>>> tree, Map<String, String> featuredPlugins) -->Line_9 $$ addVcsGroup(tree)[ FD ]
