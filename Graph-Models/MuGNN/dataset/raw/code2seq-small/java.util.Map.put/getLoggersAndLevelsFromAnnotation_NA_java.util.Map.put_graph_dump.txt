Line_2 $$ public static Map<String, String> getLoggersAndLevelsFromAnnotation(TestLogging testLogging) -->Line_7 $$ final String[] loggersAndLevels = testLogging.value().split(",")[ FD ]
Line_11 $$ String loggerName = loggerAndLevelArray[0]-->Line_13 $$ map.put(loggerName, level)[ FD ]
Line_3 $$ if (testLogging == null) -->Line_4 $$ return null[ CD ]
Line_2 $$ public static Map<String, String> getLoggersAndLevelsFromAnnotation(TestLogging testLogging) -->Line_6 $$ Map<String, String> map = new HashMap()[ CD ]
Line_10 $$ if (loggerAndLevelArray.length >= 2) -->Line_13 $$ map.put(loggerName, level)[ CD ]
Line_2 $$ public static Map<String, String> getLoggersAndLevelsFromAnnotation(TestLogging testLogging) -->Line_3 $$ if (testLogging == null) [ FD ]
Line_2 $$ public static Map<String, String> getLoggersAndLevelsFromAnnotation(TestLogging testLogging) -->Line_7 $$ final String[] loggersAndLevels = testLogging.value().split(",")[ CD ]
Line_10 $$ if (loggerAndLevelArray.length >= 2) -->Line_11 $$ String loggerName = loggerAndLevelArray[0][ CD ]
Line_8 $$ for (String loggerAndLevel : loggersAndLevels) -->Line_9 $$ String[] loggerAndLevelArray = loggerAndLevel.split(":")[ FD ]
Line_2 $$ public static Map<String, String> getLoggersAndLevelsFromAnnotation(TestLogging testLogging) -->Line_3 $$ if (testLogging == null) [ CD ]
Line_10 $$ if (loggerAndLevelArray.length >= 2) -->Line_12 $$ String level = loggerAndLevelArray[1][ CD ]
Line_2 $$ public static Map<String, String> getLoggersAndLevelsFromAnnotation(TestLogging testLogging) -->Line_16 $$ return map[ CD ]
Line_12 $$ String level = loggerAndLevelArray[1]-->Line_13 $$ map.put(loggerName, level)[ FD ]
Line_6 $$ Map<String, String> map = new HashMap()-->Line_13 $$ map.put(loggerName, level)[ FD ]
