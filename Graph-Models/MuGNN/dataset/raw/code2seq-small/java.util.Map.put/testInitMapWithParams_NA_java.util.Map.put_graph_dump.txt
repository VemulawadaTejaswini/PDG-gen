Line_2 $$ public void testInitMapWithParams() -->Line_7 $$ params.put("vars", varsMap)[ CD ]
Line_14 $$ ScriptedMetric scriptedMetricAggregation = (ScriptedMetric) aggregation-->Line_16 $$ assertThat(scriptedMetricAggregation.aggregation(), notNullValue())[ FD ]
Line_21 $$ for (Object object : aggregationList) -->Line_22 $$ assertThat(object, notNullValue())[ FD ]
Line_2 $$ public void testInitMapWithParams() -->Line_10 $$ assertThat(response.getHits().getTotalHits(), equalTo(numDocs))[ CD ]
Line_18 $$ List<?> aggregationList = (List<?>) scriptedMetricAggregation.aggregation()-->Line_19 $$ assertThat(aggregationList.size(), equalTo(getNumShards("idx").numPrimaries))[ FD ]
Line_2 $$ public void testInitMapWithParams() -->Line_3 $$ Map<String, Object> varsMap = new HashMap()[ CD ]
Line_20 $$ long totalCount = 0-->Line_30 $$ totalCount += numberValue.longValue()[ FD ]
Line_2 $$ public void testInitMapWithParams() -->Line_19 $$ assertThat(aggregationList.size(), equalTo(getNumShards("idx").numPrimaries))[ CD ]
Line_5 $$ Map<String, Object> params = new HashMap()-->Line_7 $$ params.put("vars", varsMap)[ FD ]
Line_3 $$ Map<String, Object> varsMap = new HashMap()-->Line_7 $$ params.put("vars", varsMap)[ FD ]
Line_25 $$ for (Object o : list) -->Line_27 $$ assertThat(o, instanceOf(Number.class))[ FD ]
Line_2 $$ public void testInitMapWithParams() -->Line_33 $$ assertThat(totalCount, equalTo(numDocs * 3))[ CD ]
Line_2 $$ public void testInitMapWithParams() -->Line_4 $$ varsMap.put("multiplier", 1)[ CD ]
Line_5 $$ Map<String, Object> params = new HashMap()-->Line_6 $$ params.put("_agg", new ArrayList())[ FD ]
Line_2 $$ public void testInitMapWithParams() -->Line_13 $$ assertThat(aggregation, instanceOf(ScriptedMetric.class))[ CD ]
Line_2 $$ public void testInitMapWithParams() -->Line_20 $$ long totalCount = 0[ CD ]
Line_2 $$ public void testInitMapWithParams() -->Line_5 $$ Map<String, Object> params = new HashMap()[ CD ]
Line_11 $$ Aggregation aggregation = response.getAggregations().get("scripted")-->Line_12 $$ assertThat(aggregation, notNullValue())[ FD ]
Line_5 $$ Map<String, Object> params = new HashMap()-->Line_8 $$ SearchResponse response = client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(scriptedMetric("scripted").params(params).initScript(new Script("vars.multiplier = 3")).mapScript(new Script("_agg.add(vars.multiplier)"))).execute().actionGet()[ FD ]
Line_8 $$ SearchResponse response = client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(scriptedMetric("scripted").params(params).initScript(new Script("vars.multiplier = 3")).mapScript(new Script("_agg.add(vars.multiplier)"))).execute().actionGet()-->Line_11 $$ Aggregation aggregation = response.getAggregations().get("scripted")[ FD ]
Line_14 $$ ScriptedMetric scriptedMetricAggregation = (ScriptedMetric) aggregation-->Line_15 $$ assertThat(scriptedMetricAggregation.getName(), equalTo("scripted"))[ FD ]
Line_14 $$ ScriptedMetric scriptedMetricAggregation = (ScriptedMetric) aggregation-->Line_17 $$ assertThat(scriptedMetricAggregation.aggregation(), instanceOf(ArrayList.class))[ FD ]
Line_25 $$ for (Object o : list) -->Line_26 $$ assertThat(o, notNullValue())[ FD ]
Line_20 $$ long totalCount = 0-->Line_33 $$ assertThat(totalCount, equalTo(numDocs * 3))[ FD ]
Line_2 $$ public void testInitMapWithParams() -->Line_11 $$ Aggregation aggregation = response.getAggregations().get("scripted")[ CD ]
Line_14 $$ ScriptedMetric scriptedMetricAggregation = (ScriptedMetric) aggregation-->Line_18 $$ List<?> aggregationList = (List<?>) scriptedMetricAggregation.aggregation()[ FD ]
Line_2 $$ public void testInitMapWithParams() -->Line_12 $$ assertThat(aggregation, notNullValue())[ CD ]
Line_30 $$ totalCount += numberValue.longValue()-->Line_33 $$ assertThat(totalCount, equalTo(numDocs * 3))[ FD ]
Line_11 $$ Aggregation aggregation = response.getAggregations().get("scripted")-->Line_13 $$ assertThat(aggregation, instanceOf(ScriptedMetric.class))[ FD ]
Line_3 $$ Map<String, Object> varsMap = new HashMap()-->Line_4 $$ varsMap.put("multiplier", 1)[ FD ]
Line_8 $$ SearchResponse response = client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(scriptedMetric("scripted").params(params).initScript(new Script("vars.multiplier = 3")).mapScript(new Script("_agg.add(vars.multiplier)"))).execute().actionGet()-->Line_10 $$ assertThat(response.getHits().getTotalHits(), equalTo(numDocs))[ FD ]
Line_2 $$ public void testInitMapWithParams() -->Line_18 $$ List<?> aggregationList = (List<?>) scriptedMetricAggregation.aggregation()[ CD ]
Line_28 $$ Number numberValue = (Number) o-->Line_29 $$ assertThat(numberValue, equalTo((Number) 3))[ FD ]
Line_8 $$ SearchResponse response = client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(scriptedMetric("scripted").params(params).initScript(new Script("vars.multiplier = 3")).mapScript(new Script("_agg.add(vars.multiplier)"))).execute().actionGet()-->Line_9 $$ assertSearchResponse(response)[ FD ]
Line_2 $$ public void testInitMapWithParams() -->Line_6 $$ params.put("_agg", new ArrayList())[ CD ]
Line_28 $$ Number numberValue = (Number) o-->Line_30 $$ totalCount += numberValue.longValue()[ FD ]
Line_2 $$ public void testInitMapWithParams() -->Line_17 $$ assertThat(scriptedMetricAggregation.aggregation(), instanceOf(ArrayList.class))[ CD ]
Line_21 $$ for (Object object : aggregationList) -->Line_23 $$ assertThat(object, instanceOf(List.class))[ FD ]
Line_2 $$ public void testInitMapWithParams() -->Line_14 $$ ScriptedMetric scriptedMetricAggregation = (ScriptedMetric) aggregation[ CD ]
Line_2 $$ public void testInitMapWithParams() -->Line_16 $$ assertThat(scriptedMetricAggregation.aggregation(), notNullValue())[ CD ]
Line_2 $$ public void testInitMapWithParams() -->Line_9 $$ assertSearchResponse(response)[ CD ]
Line_2 $$ public void testInitMapWithParams() -->Line_8 $$ SearchResponse response = client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(scriptedMetric("scripted").params(params).initScript(new Script("vars.multiplier = 3")).mapScript(new Script("_agg.add(vars.multiplier)"))).execute().actionGet()[ CD ]
Line_2 $$ public void testInitMapWithParams() -->Line_15 $$ assertThat(scriptedMetricAggregation.getName(), equalTo("scripted"))[ CD ]
