Line_10 $$ CacheKey cacheKey = new CacheKey(type, name, target instanceof Class)-->Line_19 $$ this.typeDescriptorCache.put(cacheKey, typeDescriptor)[ FD ]
Line_2 $$ public boolean canRead(EvaluationContext context, Object target, String name) throws AccessException -->Line_14 $$ Method method = findGetterForProperty(name, type, target)[ CD ]
Line_2 $$ public boolean canRead(EvaluationContext context, Object target, String name) throws AccessException -->Line_3 $$ if (target == null) [ FD ]
Line_23 $$ if (field != null) -->Line_25 $$ this.readerCache.put(cacheKey, new InvokerPair(field, typeDescriptor))[ CD ]
Line_10 $$ CacheKey cacheKey = new CacheKey(type, name, target instanceof Class)-->Line_25 $$ this.readerCache.put(cacheKey, new InvokerPair(field, typeDescriptor))[ FD ]
Line_10 $$ CacheKey cacheKey = new CacheKey(type, name, target instanceof Class)-->Line_18 $$ this.readerCache.put(cacheKey, new InvokerPair(method, typeDescriptor))[ FD ]
Line_2 $$ public boolean canRead(EvaluationContext context, Object target, String name) throws AccessException -->Line_15 $$ if (method != null) [ CD ]
Line_2 $$ public boolean canRead(EvaluationContext context, Object target, String name) throws AccessException -->Line_30 $$ return false[ CD ]
Line_2 $$ public boolean canRead(EvaluationContext context, Object target, String name) throws AccessException -->Line_6 $$ Class<?> type = (target instanceof Class ? (Class<?>) target : target.getClass())[ CD ]
Line_2 $$ public boolean canRead(EvaluationContext context, Object target, String name) throws AccessException -->Line_7 $$ if (type.isArray() && name.equals("length")) [ FD ]
Line_2 $$ public boolean canRead(EvaluationContext context, Object target, String name) throws AccessException -->Line_6 $$ Class<?> type = (target instanceof Class ? (Class<?>) target : target.getClass())[ FD ]
Line_15 $$ if (method != null) -->Line_22 $$ Field field = findField(name, type, target)[ CD ]
Line_2 $$ public boolean canRead(EvaluationContext context, Object target, String name) throws AccessException -->Line_7 $$ if (type.isArray() && name.equals("length")) [ CD ]
Line_22 $$ Field field = findField(name, type, target)-->Line_23 $$ if (field != null) [ FD ]
Line_11 $$ if (this.readerCache.containsKey(cacheKey)) -->Line_12 $$ return true[ CD ]
Line_15 $$ if (method != null) -->Line_17 $$ TypeDescriptor typeDescriptor = new TypeDescriptor(property)[ CD ]
Line_23 $$ if (field != null) -->Line_27 $$ return true[ CD ]
Line_10 $$ CacheKey cacheKey = new CacheKey(type, name, target instanceof Class)-->Line_11 $$ if (this.readerCache.containsKey(cacheKey)) [ FD ]
Line_15 $$ if (method != null) -->Line_16 $$ Property property = new Property(type, method, null)[ CD ]
Line_2 $$ public boolean canRead(EvaluationContext context, Object target, String name) throws AccessException -->Line_10 $$ CacheKey cacheKey = new CacheKey(type, name, target instanceof Class)[ CD ]
Line_14 $$ Method method = findGetterForProperty(name, type, target)-->Line_15 $$ if (method != null) [ FD ]
Line_23 $$ if (field != null) -->Line_26 $$ this.typeDescriptorCache.put(cacheKey, typeDescriptor)[ CD ]
Line_6 $$ Class<?> type = (target instanceof Class ? (Class<?>) target : target.getClass())-->Line_22 $$ Field field = findField(name, type, target)[ FD ]
Line_2 $$ public boolean canRead(EvaluationContext context, Object target, String name) throws AccessException -->Line_3 $$ if (target == null) [ CD ]
Line_15 $$ if (method != null) -->Line_23 $$ if (field != null) [ CD ]
Line_6 $$ Class<?> type = (target instanceof Class ? (Class<?>) target : target.getClass())-->Line_14 $$ Method method = findGetterForProperty(name, type, target)[ FD ]
Line_10 $$ CacheKey cacheKey = new CacheKey(type, name, target instanceof Class)-->Line_26 $$ this.typeDescriptorCache.put(cacheKey, typeDescriptor)[ FD ]
Line_15 $$ if (method != null) -->Line_18 $$ this.readerCache.put(cacheKey, new InvokerPair(method, typeDescriptor))[ CD ]
Line_15 $$ if (method != null) -->Line_19 $$ this.typeDescriptorCache.put(cacheKey, typeDescriptor)[ CD ]
Line_2 $$ public boolean canRead(EvaluationContext context, Object target, String name) throws AccessException -->Line_14 $$ Method method = findGetterForProperty(name, type, target)[ FD ]
Line_17 $$ TypeDescriptor typeDescriptor = new TypeDescriptor(property)-->Line_19 $$ this.typeDescriptorCache.put(cacheKey, typeDescriptor)[ FD ]
Line_3 $$ if (target == null) -->Line_4 $$ return false[ CD ]
Line_6 $$ Class<?> type = (target instanceof Class ? (Class<?>) target : target.getClass())-->Line_7 $$ if (type.isArray() && name.equals("length")) [ FD ]
Line_7 $$ if (type.isArray() && name.equals("length")) -->Line_8 $$ return true[ CD ]
Line_17 $$ TypeDescriptor typeDescriptor = new TypeDescriptor(property)-->Line_26 $$ this.typeDescriptorCache.put(cacheKey, typeDescriptor)[ FD ]
Line_15 $$ if (method != null) -->Line_20 $$ return true[ CD ]
Line_2 $$ public boolean canRead(EvaluationContext context, Object target, String name) throws AccessException -->Line_11 $$ if (this.readerCache.containsKey(cacheKey)) [ CD ]
Line_2 $$ public boolean canRead(EvaluationContext context, Object target, String name) throws AccessException -->Line_22 $$ Field field = findField(name, type, target)[ FD ]
