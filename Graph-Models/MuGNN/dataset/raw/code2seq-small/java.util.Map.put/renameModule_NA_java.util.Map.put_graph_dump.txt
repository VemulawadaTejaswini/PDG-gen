Line_2 $$ public void renameModule(@NotNull Module module, @NotNull String newName) throws ModuleWithNameAlreadyExists -->Line_3 $$ final Module oldModule = getModuleByNewName(newName)[ CD ]
Line_2 $$ public void renameModule(@NotNull Module module, @NotNull String newName) throws ModuleWithNameAlreadyExists -->Line_4 $$ myNewNameToModule.remove(myModuleToNewName.get(module))[ FD ]
Line_2 $$ public void renameModule(@NotNull Module module, @NotNull String newName) throws ModuleWithNameAlreadyExists -->Line_10 $$ myNewNameToModule.put(newName, module)[ FD ]
Line_2 $$ public void renameModule(@NotNull Module module, @NotNull String newName) throws ModuleWithNameAlreadyExists -->Line_12 $$ if (oldModule != null) [ CD ]
Line_3 $$ final Module oldModule = getModuleByNewName(newName)-->Line_12 $$ if (oldModule != null) [ FD ]
Line_2 $$ public void renameModule(@NotNull Module module, @NotNull String newName) throws ModuleWithNameAlreadyExists -->Line_9 $$ myModuleToNewName.put(module, newName)[ FD ]
Line_5 $$ if (module.getName().equals(newName)) -->Line_10 $$ myNewNameToModule.put(newName, module)[ CD ]
Line_2 $$ public void renameModule(@NotNull Module module, @NotNull String newName) throws ModuleWithNameAlreadyExists -->Line_5 $$ if (module.getName().equals(newName)) [ CD ]
Line_2 $$ public void renameModule(@NotNull Module module, @NotNull String newName) throws ModuleWithNameAlreadyExists -->Line_13 $$ throw new ModuleWithNameAlreadyExists(ProjectBundle.message("module.already.exists.error", newName), newName)[ FD ]
Line_2 $$ public void renameModule(@NotNull Module module, @NotNull String newName) throws ModuleWithNameAlreadyExists -->Line_7 $$ myNewNameToModule.remove(newName)[ FD ]
Line_5 $$ if (module.getName().equals(newName)) -->Line_6 $$ myModuleToNewName.remove(module)[ CD ]
Line_2 $$ public void renameModule(@NotNull Module module, @NotNull String newName) throws ModuleWithNameAlreadyExists -->Line_4 $$ myNewNameToModule.remove(myModuleToNewName.get(module))[ CD ]
Line_2 $$ public void renameModule(@NotNull Module module, @NotNull String newName) throws ModuleWithNameAlreadyExists -->Line_3 $$ final Module oldModule = getModuleByNewName(newName)[ FD ]
Line_2 $$ public void renameModule(@NotNull Module module, @NotNull String newName) throws ModuleWithNameAlreadyExists -->Line_5 $$ if (module.getName().equals(newName)) [ FD ]
Line_2 $$ public void renameModule(@NotNull Module module, @NotNull String newName) throws ModuleWithNameAlreadyExists -->Line_6 $$ myModuleToNewName.remove(module)[ FD ]
Line_5 $$ if (module.getName().equals(newName)) -->Line_7 $$ myNewNameToModule.remove(newName)[ CD ]
Line_5 $$ if (module.getName().equals(newName)) -->Line_9 $$ myModuleToNewName.put(module, newName)[ CD ]
