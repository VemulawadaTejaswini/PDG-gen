Line_2 $$ private static <A extends Annotation> A findAnnotation(Class<?> clazz, Class<A> annotationType, boolean synthesize) -->Line_3 $$ Assert.notNull(clazz, "Class must not be null")[ FD ]
Line_2 $$ private static <A extends Annotation> A findAnnotation(Class<?> clazz, Class<A> annotationType, boolean synthesize) -->Line_16 $$ return result[ CD ]
Line_2 $$ private static <A extends Annotation> A findAnnotation(Class<?> clazz, Class<A> annotationType, boolean synthesize) -->Line_7 $$ AnnotationCacheKey cacheKey = new AnnotationCacheKey(clazz, annotationType)[ CD ]
Line_2 $$ private static <A extends Annotation> A findAnnotation(Class<?> clazz, Class<A> annotationType, boolean synthesize) -->Line_3 $$ Assert.notNull(clazz, "Class must not be null")[ CD ]
Line_8 $$ A result = (A) findAnnotationCache.get(cacheKey)-->Line_10 $$ result = findAnnotation(clazz, annotationType, new HashSet<Annotation>())[ FD ]
Line_2 $$ private static <A extends Annotation> A findAnnotation(Class<?> clazz, Class<A> annotationType, boolean synthesize) -->Line_11 $$ if (result != null && synthesize) [ FD ]
Line_2 $$ private static <A extends Annotation> A findAnnotation(Class<?> clazz, Class<A> annotationType, boolean synthesize) -->Line_4 $$ if (annotationType == null) [ FD ]
Line_8 $$ A result = (A) findAnnotationCache.get(cacheKey)-->Line_13 $$ findAnnotationCache.put(cacheKey, result)[ FD ]
Line_2 $$ private static <A extends Annotation> A findAnnotation(Class<?> clazz, Class<A> annotationType, boolean synthesize) -->Line_9 $$ if (result == null) [ CD ]
Line_11 $$ if (result != null && synthesize) -->Line_13 $$ findAnnotationCache.put(cacheKey, result)[ CD ]
Line_9 $$ if (result == null) -->Line_11 $$ if (result != null && synthesize) [ CD ]
Line_7 $$ AnnotationCacheKey cacheKey = new AnnotationCacheKey(clazz, annotationType)-->Line_13 $$ findAnnotationCache.put(cacheKey, result)[ FD ]
Line_10 $$ result = findAnnotation(clazz, annotationType, new HashSet<Annotation>())-->Line_13 $$ findAnnotationCache.put(cacheKey, result)[ FD ]
Line_9 $$ if (result == null) -->Line_10 $$ result = findAnnotation(clazz, annotationType, new HashSet<Annotation>())[ CD ]
Line_4 $$ if (annotationType == null) -->Line_5 $$ return null[ CD ]
Line_2 $$ private static <A extends Annotation> A findAnnotation(Class<?> clazz, Class<A> annotationType, boolean synthesize) -->Line_8 $$ A result = (A) findAnnotationCache.get(cacheKey)[ CD ]
Line_10 $$ result = findAnnotation(clazz, annotationType, new HashSet<Annotation>())-->Line_12 $$ result = synthesizeAnnotation(result, clazz)[ FD ]
Line_2 $$ private static <A extends Annotation> A findAnnotation(Class<?> clazz, Class<A> annotationType, boolean synthesize) -->Line_4 $$ if (annotationType == null) [ CD ]
Line_8 $$ A result = (A) findAnnotationCache.get(cacheKey)-->Line_12 $$ result = synthesizeAnnotation(result, clazz)[ FD ]
Line_7 $$ AnnotationCacheKey cacheKey = new AnnotationCacheKey(clazz, annotationType)-->Line_8 $$ A result = (A) findAnnotationCache.get(cacheKey)[ FD ]
Line_11 $$ if (result != null && synthesize) -->Line_12 $$ result = synthesizeAnnotation(result, clazz)[ CD ]
Line_12 $$ result = synthesizeAnnotation(result, clazz)-->Line_13 $$ findAnnotationCache.put(cacheKey, result)[ FD ]
Line_8 $$ A result = (A) findAnnotationCache.get(cacheKey)-->Line_9 $$ if (result == null) [ FD ]
Line_2 $$ private static <A extends Annotation> A findAnnotation(Class<?> clazz, Class<A> annotationType, boolean synthesize) -->Line_10 $$ result = findAnnotation(clazz, annotationType, new HashSet<Annotation>())[ FD ]
Line_2 $$ private static <A extends Annotation> A findAnnotation(Class<?> clazz, Class<A> annotationType, boolean synthesize) -->Line_12 $$ result = synthesizeAnnotation(result, clazz)[ FD ]
