Line_6 $$ Element rootElement = _seleniumBuilderContext.getTestCaseRootElement(testCaseName)-->Line_24 $$ if (_isIgnoreCommandName(rootElement, commandName)) [ FD ]
Line_59 $$ StringBundler sb = new StringBundler()-->Line_65 $$ sb.append("_TEST_CASE_METHOD_NAMES=")[ FD ]
Line_35 $$ if (knownIssues != null) -->Line_36 $$ String knownIssuesComponent = "portal-known-issues"[ CD ]
Line_3 $$ Map<String, Set<String>> testCaseMethodNameMap = new TreeMap()-->Line_45 $$ if (testCaseMethodNameMap.containsKey(knownIssuesComponent)) [ FD ]
Line_10 $$ String componentName = rootElement.attributeValue("component-name")-->Line_62 $$ componentName = StringUtil.replace(componentName, "-", "_")[ FD ]
Line_59 $$ StringBundler sb = new StringBundler()-->Line_69 $$ sb.append(testCaseMethodNamesString)[ FD ]
Line_40 $$ knownIssuesComponent = "marketplace-known-issues"-->Line_49 $$ testCaseMethodNameMap.put(knownIssuesComponent, knownIssuesTestCaseMethodNames)[ FD ]
Line_10 $$ String componentName = rootElement.attributeValue("component-name")-->Line_39 $$ if (componentName.startsWith("marketplace")) [ FD ]
Line_38 $$ knownIssuesComponent = "extra-apps-known-issues"-->Line_40 $$ knownIssuesComponent = "marketplace-known-issues"[ FD ]
Line_10 $$ String componentName = rootElement.attributeValue("component-name")-->Line_12 $$ if (testCaseMethodNameMap.containsKey(componentName)) [ FD ]
Line_35 $$ if (knownIssues != null) -->Line_44 $$ Set<String> knownIssuesTestCaseMethodNames = new TreeSet()[ CD ]
Line_46 $$ knownIssuesTestCaseMethodNames = testCaseMethodNameMap.get(knownIssuesComponent)-->Line_49 $$ testCaseMethodNameMap.put(knownIssuesComponent, knownIssuesTestCaseMethodNames)[ FD ]
Line_61 $$ String componentNameKey = componentName-->Line_67 $$ Set<String> compontentTestCaseMethodNames = testCaseMethodNameMap.get(componentNameKey)[ FD ]
Line_59 $$ StringBundler sb = new StringBundler()-->Line_70 $$ sb.append("\n")[ FD ]
Line_66 $$ if (testCaseMethodNameMap.containsKey(componentNameKey)) -->Line_72 $$ sb.append("PortalSmokeTestCase#testSmoke\n")[ CD ]
Line_11 $$ Set<String> compontentTestCaseMethodNames = new TreeSet()-->Line_54 $$ if (!compontentTestCaseMethodNames.isEmpty()) [ FD ]
Line_10 $$ String componentName = rootElement.attributeValue("component-name")-->Line_63 $$ componentName = StringUtil.upperCase(componentName)[ FD ]
Line_13 $$ compontentTestCaseMethodNames = testCaseMethodNameMap.get(componentName)-->Line_28 $$ compontentTestCaseMethodNames.add(testCaseMethodName)[ FD ]
Line_3 $$ Map<String, Set<String>> testCaseMethodNameMap = new TreeMap()-->Line_66 $$ if (testCaseMethodNameMap.containsKey(componentNameKey)) [ FD ]
Line_27 $$ String testCaseMethodName = testCaseName + "TestCase#test" + commandName-->Line_48 $$ knownIssuesTestCaseMethodNames.add(testCaseMethodName)[ FD ]
Line_11 $$ Set<String> compontentTestCaseMethodNames = new TreeSet()-->Line_51 $$ compontentTestCaseMethodNames.add(testCaseMethodName)[ FD ]
Line_10 $$ String componentName = rootElement.attributeValue("component-name")-->Line_41 $$ if (componentName.startsWith("social-office")) [ FD ]
Line_3 $$ Map<String, Set<String>> testCaseMethodNameMap = new TreeMap()-->Line_12 $$ if (testCaseMethodNameMap.containsKey(componentName)) [ FD ]
Line_35 $$ if (knownIssues != null) -->Line_37 $$ if (componentName.startsWith("extra-apps")) [ CD ]
Line_40 $$ knownIssuesComponent = "marketplace-known-issues"-->Line_42 $$ knownIssuesComponent = "social-office-known-issues"[ FD ]
Line_44 $$ Set<String> knownIssuesTestCaseMethodNames = new TreeSet()-->Line_46 $$ knownIssuesTestCaseMethodNames = testCaseMethodNameMap.get(knownIssuesComponent)[ FD ]
Line_16 $$ if (extendsTestCaseName != null) -->Line_18 $$ List<Element> commandElements = _seleniumBuilderFileUtil.getAllChildElements(extendsRootElement, "command")[ CD ]
Line_36 $$ String knownIssuesComponent = "portal-known-issues"-->Line_49 $$ testCaseMethodNameMap.put(knownIssuesComponent, knownIssuesTestCaseMethodNames)[ FD ]
Line_42 $$ knownIssuesComponent = "social-office-known-issues"-->Line_46 $$ knownIssuesTestCaseMethodNames = testCaseMethodNameMap.get(knownIssuesComponent)[ FD ]
Line_40 $$ knownIssuesComponent = "marketplace-known-issues"-->Line_46 $$ knownIssuesTestCaseMethodNames = testCaseMethodNameMap.get(knownIssuesComponent)[ FD ]
Line_36 $$ String knownIssuesComponent = "portal-known-issues"-->Line_45 $$ if (testCaseMethodNameMap.containsKey(knownIssuesComponent)) [ FD ]
Line_13 $$ compontentTestCaseMethodNames = testCaseMethodNameMap.get(componentName)-->Line_54 $$ if (!compontentTestCaseMethodNames.isEmpty()) [ FD ]
Line_46 $$ knownIssuesTestCaseMethodNames = testCaseMethodNameMap.get(knownIssuesComponent)-->Line_48 $$ knownIssuesTestCaseMethodNames.add(testCaseMethodName)[ FD ]
Line_15 $$ String extendsTestCaseName = rootElement.attributeValue("extends")-->Line_17 $$ Element extendsRootElement = _seleniumBuilderContext.getTestCaseRootElement(extendsTestCaseName)[ FD ]
Line_10 $$ String componentName = rootElement.attributeValue("component-name")-->Line_55 $$ testCaseMethodNameMap.put(componentName, compontentTestCaseMethodNames)[ FD ]
Line_38 $$ knownIssuesComponent = "extra-apps-known-issues"-->Line_45 $$ if (testCaseMethodNameMap.containsKey(knownIssuesComponent)) [ FD ]
Line_54 $$ if (!compontentTestCaseMethodNames.isEmpty()) -->Line_55 $$ testCaseMethodNameMap.put(componentName, compontentTestCaseMethodNames)[ CD ]
Line_2 $$ private void _writeTestCaseMethodNamesFile() throws Exception -->Line_75 $$ _seleniumBuilderFileUtil.writeFile("../../../test.case.method.names.properties", sb.toString(), false)[ CD ]
Line_36 $$ String knownIssuesComponent = "portal-known-issues"-->Line_40 $$ knownIssuesComponent = "marketplace-known-issues"[ FD ]
Line_3 $$ Map<String, Set<String>> testCaseMethodNameMap = new TreeMap()-->Line_49 $$ testCaseMethodNameMap.put(knownIssuesComponent, knownIssuesTestCaseMethodNames)[ FD ]
Line_66 $$ if (testCaseMethodNameMap.containsKey(componentNameKey)) -->Line_67 $$ Set<String> compontentTestCaseMethodNames = testCaseMethodNameMap.get(componentNameKey)[ CD ]
Line_19 $$ for (Element commandElement : commandElements) -->Line_34 $$ String knownIssues = commandElement.attributeValue("known-issues")[ FD ]
Line_15 $$ String extendsTestCaseName = rootElement.attributeValue("extends")-->Line_16 $$ if (extendsTestCaseName != null) [ FD ]
Line_6 $$ Element rootElement = _seleniumBuilderContext.getTestCaseRootElement(testCaseName)-->Line_21 $$ if (_isCommandNameOverridden(rootElement, commandName)) [ FD ]
Line_20 $$ String commandName = commandElement.attributeValue("name")-->Line_24 $$ if (_isIgnoreCommandName(rootElement, commandName)) [ FD ]
Line_68 $$ String testCaseMethodNamesString = StringUtil.merge(compontentTestCaseMethodNames.toArray(new String[compontentTestCaseMethodNames.size()]), StringPool.SPACE)-->Line_69 $$ sb.append(testCaseMethodNamesString)[ FD ]
Line_40 $$ knownIssuesComponent = "marketplace-known-issues"-->Line_45 $$ if (testCaseMethodNameMap.containsKey(knownIssuesComponent)) [ FD ]
Line_59 $$ StringBundler sb = new StringBundler()-->Line_75 $$ _seleniumBuilderFileUtil.writeFile("../../../test.case.method.names.properties", sb.toString(), false)[ FD ]
Line_5 $$ for (String testCaseName : testCaseNames) -->Line_6 $$ Element rootElement = _seleniumBuilderContext.getTestCaseRootElement(testCaseName)[ FD ]
Line_38 $$ knownIssuesComponent = "extra-apps-known-issues"-->Line_42 $$ knownIssuesComponent = "social-office-known-issues"[ FD ]
Line_35 $$ if (knownIssues != null) -->Line_45 $$ if (testCaseMethodNameMap.containsKey(knownIssuesComponent)) [ CD ]
Line_36 $$ String knownIssuesComponent = "portal-known-issues"-->Line_46 $$ knownIssuesTestCaseMethodNames = testCaseMethodNameMap.get(knownIssuesComponent)[ FD ]
Line_66 $$ if (testCaseMethodNameMap.containsKey(componentNameKey)) -->Line_69 $$ sb.append(testCaseMethodNamesString)[ CD ]
Line_35 $$ if (knownIssues != null) -->Line_48 $$ knownIssuesTestCaseMethodNames.add(testCaseMethodName)[ CD ]
Line_45 $$ if (testCaseMethodNameMap.containsKey(knownIssuesComponent)) -->Line_46 $$ knownIssuesTestCaseMethodNames = testCaseMethodNameMap.get(knownIssuesComponent)[ CD ]
Line_13 $$ compontentTestCaseMethodNames = testCaseMethodNameMap.get(componentName)-->Line_51 $$ compontentTestCaseMethodNames.add(testCaseMethodName)[ FD ]
Line_39 $$ if (componentName.startsWith("marketplace")) -->Line_40 $$ knownIssuesComponent = "marketplace-known-issues"[ CD ]
Line_37 $$ if (componentName.startsWith("extra-apps")) -->Line_39 $$ if (componentName.startsWith("marketplace")) [ CD ]
Line_2 $$ private void _writeTestCaseMethodNamesFile() throws Exception -->Line_3 $$ Map<String, Set<String>> testCaseMethodNameMap = new TreeMap()[ CD ]
Line_66 $$ if (testCaseMethodNameMap.containsKey(componentNameKey)) -->Line_68 $$ String testCaseMethodNamesString = StringUtil.merge(compontentTestCaseMethodNames.toArray(new String[compontentTestCaseMethodNames.size()]), StringPool.SPACE)[ CD ]
Line_3 $$ Map<String, Set<String>> testCaseMethodNameMap = new TreeMap()-->Line_67 $$ Set<String> compontentTestCaseMethodNames = testCaseMethodNameMap.get(componentNameKey)[ FD ]
Line_42 $$ knownIssuesComponent = "social-office-known-issues"-->Line_45 $$ if (testCaseMethodNameMap.containsKey(knownIssuesComponent)) [ FD ]
Line_13 $$ compontentTestCaseMethodNames = testCaseMethodNameMap.get(componentName)-->Line_55 $$ testCaseMethodNameMap.put(componentName, compontentTestCaseMethodNames)[ FD ]
Line_10 $$ String componentName = rootElement.attributeValue("component-name")-->Line_64 $$ sb.append(componentName)[ FD ]
Line_35 $$ if (knownIssues != null) -->Line_51 $$ compontentTestCaseMethodNames.add(testCaseMethodName)[ CD ]
Line_11 $$ Set<String> compontentTestCaseMethodNames = new TreeSet()-->Line_68 $$ String testCaseMethodNamesString = StringUtil.merge(compontentTestCaseMethodNames.toArray(new String[compontentTestCaseMethodNames.size()]), StringPool.SPACE)[ FD ]
Line_6 $$ Element rootElement = _seleniumBuilderContext.getTestCaseRootElement(testCaseName)-->Line_31 $$ List<Element> commandElements = _seleniumBuilderFileUtil.getAllChildElements(rootElement, "command")[ FD ]
Line_12 $$ if (testCaseMethodNameMap.containsKey(componentName)) -->Line_13 $$ compontentTestCaseMethodNames = testCaseMethodNameMap.get(componentName)[ CD ]
Line_20 $$ String commandName = commandElement.attributeValue("name")-->Line_21 $$ if (_isCommandNameOverridden(rootElement, commandName)) [ FD ]
Line_10 $$ String componentName = rootElement.attributeValue("component-name")-->Line_37 $$ if (componentName.startsWith("extra-apps")) [ FD ]
Line_3 $$ Map<String, Set<String>> testCaseMethodNameMap = new TreeMap()-->Line_55 $$ testCaseMethodNameMap.put(componentName, compontentTestCaseMethodNames)[ FD ]
Line_13 $$ compontentTestCaseMethodNames = testCaseMethodNameMap.get(componentName)-->Line_68 $$ String testCaseMethodNamesString = StringUtil.merge(compontentTestCaseMethodNames.toArray(new String[compontentTestCaseMethodNames.size()]), StringPool.SPACE)[ FD ]
Line_2 $$ private void _writeTestCaseMethodNamesFile() throws Exception -->Line_4 $$ Set<String> testCaseNames = _seleniumBuilderContext.getTestCaseNames()[ CD ]
Line_42 $$ knownIssuesComponent = "social-office-known-issues"-->Line_49 $$ testCaseMethodNameMap.put(knownIssuesComponent, knownIssuesTestCaseMethodNames)[ FD ]
Line_38 $$ knownIssuesComponent = "extra-apps-known-issues"-->Line_49 $$ testCaseMethodNameMap.put(knownIssuesComponent, knownIssuesTestCaseMethodNames)[ FD ]
Line_61 $$ String componentNameKey = componentName-->Line_66 $$ if (testCaseMethodNameMap.containsKey(componentNameKey)) [ FD ]
Line_19 $$ for (Element commandElement : commandElements) -->Line_20 $$ String commandName = commandElement.attributeValue("name")[ FD ]
Line_19 $$ for (Element commandElement : commandElements) -->Line_33 $$ String testCaseMethodName = testCaseName + "TestCase#test" + commandElement.attributeValue("name")[ FD ]
Line_41 $$ if (componentName.startsWith("social-office")) -->Line_42 $$ knownIssuesComponent = "social-office-known-issues"[ CD ]
Line_63 $$ componentName = StringUtil.upperCase(componentName)-->Line_64 $$ sb.append(componentName)[ FD ]
Line_27 $$ String testCaseMethodName = testCaseName + "TestCase#test" + commandName-->Line_51 $$ compontentTestCaseMethodNames.add(testCaseMethodName)[ FD ]
Line_62 $$ componentName = StringUtil.replace(componentName, "-", "_")-->Line_64 $$ sb.append(componentName)[ FD ]
Line_59 $$ StringBundler sb = new StringBundler()-->Line_64 $$ sb.append(componentName)[ FD ]
Line_59 $$ StringBundler sb = new StringBundler()-->Line_72 $$ sb.append("PortalSmokeTestCase#testSmoke\n")[ FD ]
Line_44 $$ Set<String> knownIssuesTestCaseMethodNames = new TreeSet()-->Line_49 $$ testCaseMethodNameMap.put(knownIssuesComponent, knownIssuesTestCaseMethodNames)[ FD ]
Line_10 $$ String componentName = rootElement.attributeValue("component-name")-->Line_13 $$ compontentTestCaseMethodNames = testCaseMethodNameMap.get(componentName)[ FD ]
Line_39 $$ if (componentName.startsWith("marketplace")) -->Line_41 $$ if (componentName.startsWith("social-office")) [ CD ]
Line_11 $$ Set<String> compontentTestCaseMethodNames = new TreeSet()-->Line_55 $$ testCaseMethodNameMap.put(componentName, compontentTestCaseMethodNames)[ FD ]
Line_34 $$ String knownIssues = commandElement.attributeValue("known-issues")-->Line_35 $$ if (knownIssues != null) [ FD ]
Line_36 $$ String knownIssuesComponent = "portal-known-issues"-->Line_38 $$ knownIssuesComponent = "extra-apps-known-issues"[ FD ]
Line_37 $$ if (componentName.startsWith("extra-apps")) -->Line_38 $$ knownIssuesComponent = "extra-apps-known-issues"[ CD ]
Line_3 $$ Map<String, Set<String>> testCaseMethodNameMap = new TreeMap()-->Line_46 $$ knownIssuesTestCaseMethodNames = testCaseMethodNameMap.get(knownIssuesComponent)[ FD ]
Line_11 $$ Set<String> compontentTestCaseMethodNames = new TreeSet()-->Line_28 $$ compontentTestCaseMethodNames.add(testCaseMethodName)[ FD ]
Line_6 $$ Element rootElement = _seleniumBuilderContext.getTestCaseRootElement(testCaseName)-->Line_7 $$ if (GetterUtil.getBoolean(rootElement.attributeValue("ignore"))) [ FD ]
Line_66 $$ if (testCaseMethodNameMap.containsKey(componentNameKey)) -->Line_70 $$ sb.append("\n")[ CD ]
Line_6 $$ Element rootElement = _seleniumBuilderContext.getTestCaseRootElement(testCaseName)-->Line_10 $$ String componentName = rootElement.attributeValue("component-name")[ FD ]
Line_16 $$ if (extendsTestCaseName != null) -->Line_17 $$ Element extendsRootElement = _seleniumBuilderContext.getTestCaseRootElement(extendsTestCaseName)[ CD ]
Line_27 $$ String testCaseMethodName = testCaseName + "TestCase#test" + commandName-->Line_28 $$ compontentTestCaseMethodNames.add(testCaseMethodName)[ FD ]
Line_35 $$ if (knownIssues != null) -->Line_49 $$ testCaseMethodNameMap.put(knownIssuesComponent, knownIssuesTestCaseMethodNames)[ CD ]
Line_62 $$ componentName = StringUtil.replace(componentName, "-", "_")-->Line_63 $$ componentName = StringUtil.upperCase(componentName)[ FD ]
Line_2 $$ private void _writeTestCaseMethodNamesFile() throws Exception -->Line_58 $$ List<String> componentNames = _seleniumBuilderFileUtil.getComponentNames()[ CD ]
Line_6 $$ Element rootElement = _seleniumBuilderContext.getTestCaseRootElement(testCaseName)-->Line_15 $$ String extendsTestCaseName = rootElement.attributeValue("extends")[ FD ]
Line_17 $$ Element extendsRootElement = _seleniumBuilderContext.getTestCaseRootElement(extendsTestCaseName)-->Line_18 $$ List<Element> commandElements = _seleniumBuilderFileUtil.getAllChildElements(extendsRootElement, "command")[ FD ]
Line_3 $$ Map<String, Set<String>> testCaseMethodNameMap = new TreeMap()-->Line_13 $$ compontentTestCaseMethodNames = testCaseMethodNameMap.get(componentName)[ FD ]
Line_2 $$ private void _writeTestCaseMethodNamesFile() throws Exception -->Line_59 $$ StringBundler sb = new StringBundler()[ CD ]
Line_38 $$ knownIssuesComponent = "extra-apps-known-issues"-->Line_46 $$ knownIssuesTestCaseMethodNames = testCaseMethodNameMap.get(knownIssuesComponent)[ FD ]
Line_44 $$ Set<String> knownIssuesTestCaseMethodNames = new TreeSet()-->Line_48 $$ knownIssuesTestCaseMethodNames.add(testCaseMethodName)[ FD ]
Line_11 $$ Set<String> compontentTestCaseMethodNames = new TreeSet()-->Line_13 $$ compontentTestCaseMethodNames = testCaseMethodNameMap.get(componentName)[ FD ]
Line_36 $$ String knownIssuesComponent = "portal-known-issues"-->Line_42 $$ knownIssuesComponent = "social-office-known-issues"[ FD ]
