Line_14 $$ if (conflict == null) -->Line_16 $$ myConflicts.put(path, conflict)[ CD ]
Line_14 $$ if (conflict == null) -->Line_15 $$ conflict = new Conflict()[ CD ]
Line_2 $$ private void checkOneFile(VirtualFile file, LocalChangeList defaultList) -->Line_7 $$ if (changeList == null || Comparing.equal(changeList, defaultList) || ChangesUtil.isInternalOperation(file)) [ CD ]
Line_11 $$ boolean newConflict = false-->Line_20 $$ if (newConflict && myOptions.HIGHLIGHT_CONFLICTS) [ FD ]
Line_2 $$ private void checkOneFile(VirtualFile file, LocalChangeList defaultList) -->Line_10 $$ String path = file.getPath()[ FD ]
Line_2 $$ private void checkOneFile(VirtualFile file, LocalChangeList defaultList) -->Line_22 $$ myEditorNotifications.updateNotifications(file)[ FD ]
Line_10 $$ String path = file.getPath()-->Line_13 $$ Conflict conflict = myConflicts.get(path)[ FD ]
Line_6 $$ LocalChangeList changeList = myChangeListManager.getChangeList(file)-->Line_7 $$ if (changeList == null || Comparing.equal(changeList, defaultList) || ChangesUtil.isInternalOperation(file)) [ FD ]
Line_13 $$ Conflict conflict = myConflicts.get(path)-->Line_16 $$ myConflicts.put(path, conflict)[ FD ]
Line_15 $$ conflict = new Conflict()-->Line_16 $$ myConflicts.put(path, conflict)[ FD ]
Line_2 $$ private void checkOneFile(VirtualFile file, LocalChangeList defaultList) -->Line_6 $$ LocalChangeList changeList = myChangeListManager.getChangeList(file)[ FD ]
Line_13 $$ Conflict conflict = myConflicts.get(path)-->Line_15 $$ conflict = new Conflict()[ FD ]
Line_11 $$ boolean newConflict = false-->Line_17 $$ newConflict = true[ FD ]
Line_17 $$ newConflict = true-->Line_20 $$ if (newConflict && myOptions.HIGHLIGHT_CONFLICTS) [ FD ]
Line_7 $$ if (changeList == null || Comparing.equal(changeList, defaultList) || ChangesUtil.isInternalOperation(file)) -->Line_8 $$ return[ CD ]
Line_13 $$ Conflict conflict = myConflicts.get(path)-->Line_14 $$ if (conflict == null) [ FD ]
Line_2 $$ private void checkOneFile(VirtualFile file, LocalChangeList defaultList) -->Line_11 $$ boolean newConflict = false[ CD ]
Line_10 $$ String path = file.getPath()-->Line_16 $$ myConflicts.put(path, conflict)[ FD ]
Line_2 $$ private void checkOneFile(VirtualFile file, LocalChangeList defaultList) -->Line_3 $$ if (file == null) [ FD ]
Line_2 $$ private void checkOneFile(VirtualFile file, LocalChangeList defaultList) -->Line_20 $$ if (newConflict && myOptions.HIGHLIGHT_CONFLICTS) [ CD ]
Line_2 $$ private void checkOneFile(VirtualFile file, LocalChangeList defaultList) -->Line_10 $$ String path = file.getPath()[ CD ]
Line_3 $$ if (file == null) -->Line_4 $$ return[ CD ]
Line_2 $$ private void checkOneFile(VirtualFile file, LocalChangeList defaultList) -->Line_21 $$ myFileStatusManager.fileStatusChanged(file)[ FD ]
Line_14 $$ if (conflict == null) -->Line_17 $$ newConflict = true[ CD ]
Line_2 $$ private void checkOneFile(VirtualFile file, LocalChangeList defaultList) -->Line_3 $$ if (file == null) [ CD ]
Line_20 $$ if (newConflict && myOptions.HIGHLIGHT_CONFLICTS) -->Line_22 $$ myEditorNotifications.updateNotifications(file)[ CD ]
Line_20 $$ if (newConflict && myOptions.HIGHLIGHT_CONFLICTS) -->Line_21 $$ myFileStatusManager.fileStatusChanged(file)[ CD ]
Line_2 $$ private void checkOneFile(VirtualFile file, LocalChangeList defaultList) -->Line_7 $$ if (changeList == null || Comparing.equal(changeList, defaultList) || ChangesUtil.isInternalOperation(file)) [ FD ]
Line_2 $$ private void checkOneFile(VirtualFile file, LocalChangeList defaultList) -->Line_6 $$ LocalChangeList changeList = myChangeListManager.getChangeList(file)[ CD ]
