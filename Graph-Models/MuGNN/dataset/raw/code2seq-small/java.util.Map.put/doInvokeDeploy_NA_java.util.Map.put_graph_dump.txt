Line_3 $$ ServletContext servletContext = hotDeployEvent.getServletContext()-->Line_8 $$ String[] xmls = new String[] [ FD ]
Line_2 $$ protected void doInvokeDeploy(HotDeployEvent hotDeployEvent) throws Exception -->Line_5 $$ if (_log.isDebugEnabled()) [ CD ]
Line_12 $$ if (_log.isInfoEnabled()) -->Line_13 $$ _log.info("Registering social for " + servletContextName)[ CD ]
Line_5 $$ if (_log.isDebugEnabled()) -->Line_6 $$ _log.debug("Invoking deploy for " + servletContextName)[ CD ]
Line_2 $$ protected void doInvokeDeploy(HotDeployEvent hotDeployEvent) throws Exception -->Line_3 $$ ServletContext servletContext = hotDeployEvent.getServletContext()[ FD ]
Line_15 $$ List<Object> objects = SocialConfigurationUtil.read(hotDeployEvent.getContextClassLoader(), xmls)-->Line_16 $$ _objects.put(servletContextName, objects)[ FD ]
Line_2 $$ protected void doInvokeDeploy(HotDeployEvent hotDeployEvent) throws Exception -->Line_9 $$ if (xmls[0] == null) [ CD ]
Line_2 $$ protected void doInvokeDeploy(HotDeployEvent hotDeployEvent) throws Exception -->Line_8 $$ String[] xmls = new String[] [ CD ]
Line_9 $$ if (xmls[0] == null) -->Line_10 $$ return[ CD ]
Line_2 $$ protected void doInvokeDeploy(HotDeployEvent hotDeployEvent) throws Exception -->Line_4 $$ String servletContextName = servletContext.getServletContextName()[ CD ]
Line_8 $$ String[] xmls = new String[] -->Line_15 $$ List<Object> objects = SocialConfigurationUtil.read(hotDeployEvent.getContextClassLoader(), xmls)[ FD ]
Line_3 $$ ServletContext servletContext = hotDeployEvent.getServletContext()-->Line_4 $$ String servletContextName = servletContext.getServletContextName()[ FD ]
Line_2 $$ protected void doInvokeDeploy(HotDeployEvent hotDeployEvent) throws Exception -->Line_3 $$ ServletContext servletContext = hotDeployEvent.getServletContext()[ CD ]
Line_2 $$ protected void doInvokeDeploy(HotDeployEvent hotDeployEvent) throws Exception -->Line_16 $$ _objects.put(servletContextName, objects)[ CD ]
Line_2 $$ protected void doInvokeDeploy(HotDeployEvent hotDeployEvent) throws Exception -->Line_15 $$ List<Object> objects = SocialConfigurationUtil.read(hotDeployEvent.getContextClassLoader(), xmls)[ CD ]
Line_17 $$ if (_log.isInfoEnabled()) -->Line_18 $$ _log.info("Social for " + servletContextName + " is available for use")[ CD ]
Line_2 $$ protected void doInvokeDeploy(HotDeployEvent hotDeployEvent) throws Exception -->Line_12 $$ if (_log.isInfoEnabled()) [ CD ]
Line_2 $$ protected void doInvokeDeploy(HotDeployEvent hotDeployEvent) throws Exception -->Line_17 $$ if (_log.isInfoEnabled()) [ CD ]
Line_2 $$ protected void doInvokeDeploy(HotDeployEvent hotDeployEvent) throws Exception -->Line_15 $$ List<Object> objects = SocialConfigurationUtil.read(hotDeployEvent.getContextClassLoader(), xmls)[ FD ]
Line_4 $$ String servletContextName = servletContext.getServletContextName()-->Line_16 $$ _objects.put(servletContextName, objects)[ FD ]
