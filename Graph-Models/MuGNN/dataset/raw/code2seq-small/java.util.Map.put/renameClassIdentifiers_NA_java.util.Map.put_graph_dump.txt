Line_14 $$ StructMethod mt = methods.get(i)-->Line_22 $$ if (helper.toBeRenamed(IIdentifierRenamer.Type.ELEMENT_METHOD, classOldFullName, name, mt.getDescriptor())) [ FD ]
Line_15 $$ String key = methods.getKey(i)-->Line_23 $$ if (isPrivate || !names.containsKey(key)) [ FD ]
Line_12 $$ VBStyleCollection<StructMethod, String> methods = cl.getMethods()-->Line_14 $$ StructMethod mt = methods.get(i)[ FD ]
Line_31 $$ name = names.get(key)-->Line_28 $$ names.put(key, name)[ FD ]
Line_47 $$ newName = helper.getNextFieldName(classOldFullName, fd.getName(), fd.getDescriptor())-->Line_46 $$ do [ FD ]
Line_45 $$ String newName-->Line_46 $$ do [ FD ]
Line_2 $$ private void renameClassIdentifiers(StructClass cl, Map<String, String> names) -->Line_5 $$ if (classNewFullName == null) [ CD ]
Line_13 $$ for (int i = 0; i < methods.size(); i++) -->Line_14 $$ StructMethod mt = methods.get(i)[ FD ]
Line_2 $$ private void renameClassIdentifiers(StructClass cl, Map<String, String> names) -->Line_39 $$ HashSet<String> setFieldNames = new HashSet<String>()[ CD ]
Line_22 $$ if (helper.toBeRenamed(IIdentifierRenamer.Type.ELEMENT_METHOD, classOldFullName, name, mt.getDescriptor())) -->Line_23 $$ if (isPrivate || !names.containsKey(key)) [ CD ]
Line_17 $$ String name = mt.getName()-->Line_22 $$ if (helper.toBeRenamed(IIdentifierRenamer.Type.ELEMENT_METHOD, classOldFullName, name, mt.getDescriptor())) [ FD ]
Line_44 $$ if (helper.toBeRenamed(IIdentifierRenamer.Type.ELEMENT_FIELD, classOldFullName, fd.getName(), fd.getDescriptor())) -->Line_45 $$ String newName[ CD ]
Line_2 $$ private void renameClassIdentifiers(StructClass cl, Map<String, String> names) -->Line_43 $$ for (StructField fd : cl.getFields()) [ FD ]
Line_2 $$ private void renameClassIdentifiers(StructClass cl, Map<String, String> names) -->Line_31 $$ name = names.get(key)[ FD ]
Line_25 $$ name = helper.getNextMethodName(classOldFullName, name, mt.getDescriptor())-->Line_31 $$ name = names.get(key)[ FD ]
Line_2 $$ private void renameClassIdentifiers(StructClass cl, Map<String, String> names) -->Line_23 $$ if (isPrivate || !names.containsKey(key)) [ FD ]
Line_13 $$ for (int i = 0; i < methods.size(); i++) -->Line_16 $$ boolean isPrivate = mt.hasModifier(CodeConstants.ACC_PRIVATE)[ CD ]
Line_2 $$ private void renameClassIdentifiers(StructClass cl, Map<String, String> names) -->Line_12 $$ VBStyleCollection<StructMethod, String> methods = cl.getMethods()[ FD ]
Line_46 $$ do -->Line_47 $$ newName = helper.getNextFieldName(classOldFullName, fd.getName(), fd.getDescriptor())[ CD ]
Line_19 $$ if (!isPrivate) -->Line_20 $$ names.put(key, name)[ CD ]
Line_13 $$ for (int i = 0; i < methods.size(); i++) -->Line_18 $$ if (!cl.isOwn() || mt.hasModifier(CodeConstants.ACC_NATIVE)) [ CD ]
Line_15 $$ String key = methods.getKey(i)-->Line_28 $$ names.put(key, name)[ FD ]
Line_2 $$ private void renameClassIdentifiers(StructClass cl, Map<String, String> names) -->Line_12 $$ VBStyleCollection<StructMethod, String> methods = cl.getMethods()[ CD ]
Line_15 $$ String key = methods.getKey(i)-->Line_20 $$ names.put(key, name)[ FD ]
Line_3 $$ String classOldFullName = cl.qualifiedName-->Line_4 $$ String classNewFullName = interceptor.getName(classOldFullName)[ FD ]
Line_39 $$ HashSet<String> setFieldNames = new HashSet<String>()-->Line_46 $$ do [ FD ]
Line_31 $$ name = names.get(key)-->Line_20 $$ names.put(key, name)[ FD ]
Line_16 $$ boolean isPrivate = mt.hasModifier(CodeConstants.ACC_PRIVATE)-->Line_19 $$ if (!isPrivate) [ FD ]
Line_27 $$ if (!isPrivate) -->Line_28 $$ names.put(key, name)[ CD ]
Line_18 $$ if (!cl.isOwn() || mt.hasModifier(CodeConstants.ACC_NATIVE)) -->Line_19 $$ if (!isPrivate) [ CD ]
Line_3 $$ String classOldFullName = cl.qualifiedName-->Line_22 $$ if (helper.toBeRenamed(IIdentifierRenamer.Type.ELEMENT_METHOD, classOldFullName, name, mt.getDescriptor())) [ FD ]
Line_14 $$ StructMethod mt = methods.get(i)-->Line_33 $$ interceptor.addName(classOldFullName + " " + mt.getName() + " " + mt.getDescriptor(), classNewFullName + " " + name + " " + buildNewDescriptor(false, mt.getDescriptor()))[ FD ]
Line_45 $$ String newName-->Line_47 $$ newName = helper.getNextFieldName(classOldFullName, fd.getName(), fd.getDescriptor())[ FD ]
Line_4 $$ String classNewFullName = interceptor.getName(classOldFullName)-->Line_6 $$ classNewFullName = classOldFullName[ FD ]
Line_8 $$ HashSet<String> setMethodNames = new HashSet<String>()-->Line_10 $$ setMethodNames.add(md.getName())[ FD ]
Line_14 $$ StructMethod mt = methods.get(i)-->Line_16 $$ boolean isPrivate = mt.hasModifier(CodeConstants.ACC_PRIVATE)[ FD ]
Line_36 $$ if (!cl.isOwn()) -->Line_37 $$ return[ CD ]
Line_24 $$ do -->Line_25 $$ name = helper.getNextMethodName(classOldFullName, name, mt.getDescriptor())[ CD ]
Line_2 $$ private void renameClassIdentifiers(StructClass cl, Map<String, String> names) -->Line_8 $$ HashSet<String> setMethodNames = new HashSet<String>()[ CD ]
Line_13 $$ for (int i = 0; i < methods.size(); i++) -->Line_17 $$ String name = mt.getName()[ CD ]
Line_13 $$ for (int i = 0; i < methods.size(); i++) -->Line_15 $$ String key = methods.getKey(i)[ CD ]
Line_44 $$ if (helper.toBeRenamed(IIdentifierRenamer.Type.ELEMENT_FIELD, classOldFullName, fd.getName(), fd.getDescriptor())) -->Line_49 $$ interceptor.addName(classOldFullName + " " + fd.getName() + " " + fd.getDescriptor(), classNewFullName + " " + newName + " " + buildNewDescriptor(true, fd.getDescriptor()))[ CD ]
Line_40 $$ for (StructField fd : cl.getFields()) -->Line_47 $$ newName = helper.getNextFieldName(classOldFullName, fd.getName(), fd.getDescriptor())[ FD ]
Line_2 $$ private void renameClassIdentifiers(StructClass cl, Map<String, String> names) -->Line_4 $$ String classNewFullName = interceptor.getName(classOldFullName)[ CD ]
Line_40 $$ for (StructField fd : cl.getFields()) -->Line_44 $$ if (helper.toBeRenamed(IIdentifierRenamer.Type.ELEMENT_FIELD, classOldFullName, fd.getName(), fd.getDescriptor())) [ FD ]
Line_9 $$ for (StructMethod md : cl.getMethods()) -->Line_10 $$ setMethodNames.add(md.getName())[ FD ]
Line_40 $$ for (StructField fd : cl.getFields()) -->Line_49 $$ interceptor.addName(classOldFullName + " " + fd.getName() + " " + fd.getDescriptor(), classNewFullName + " " + newName + " " + buildNewDescriptor(true, fd.getDescriptor()))[ FD ]
Line_14 $$ StructMethod mt = methods.get(i)-->Line_25 $$ name = helper.getNextMethodName(classOldFullName, name, mt.getDescriptor())[ FD ]
Line_2 $$ private void renameClassIdentifiers(StructClass cl, Map<String, String> names) -->Line_36 $$ if (!cl.isOwn()) [ CD ]
Line_17 $$ String name = mt.getName()-->Line_24 $$ do [ FD ]
Line_12 $$ VBStyleCollection<StructMethod, String> methods = cl.getMethods()-->Line_15 $$ String key = methods.getKey(i)[ FD ]
Line_17 $$ String name = mt.getName()-->Line_31 $$ name = names.get(key)[ FD ]
Line_2 $$ private void renameClassIdentifiers(StructClass cl, Map<String, String> names) -->Line_36 $$ if (!cl.isOwn()) [ FD ]
Line_17 $$ String name = mt.getName()-->Line_25 $$ name = helper.getNextMethodName(classOldFullName, name, mt.getDescriptor())[ FD ]
Line_16 $$ boolean isPrivate = mt.hasModifier(CodeConstants.ACC_PRIVATE)-->Line_23 $$ if (isPrivate || !names.containsKey(key)) [ FD ]
Line_2 $$ private void renameClassIdentifiers(StructClass cl, Map<String, String> names) -->Line_9 $$ for (StructMethod md : cl.getMethods()) [ FD ]
Line_2 $$ private void renameClassIdentifiers(StructClass cl, Map<String, String> names) -->Line_40 $$ for (StructField fd : cl.getFields()) [ FD ]
Line_3 $$ String classOldFullName = cl.qualifiedName-->Line_6 $$ classNewFullName = classOldFullName[ FD ]
Line_25 $$ name = helper.getNextMethodName(classOldFullName, name, mt.getDescriptor())-->Line_24 $$ do [ FD ]
Line_8 $$ HashSet<String> setMethodNames = new HashSet<String>()-->Line_24 $$ do [ FD ]
Line_44 $$ if (helper.toBeRenamed(IIdentifierRenamer.Type.ELEMENT_FIELD, classOldFullName, fd.getName(), fd.getDescriptor())) -->Line_46 $$ do [ CD ]
Line_15 $$ String key = methods.getKey(i)-->Line_31 $$ name = names.get(key)[ FD ]
Line_5 $$ if (classNewFullName == null) -->Line_6 $$ classNewFullName = classOldFullName[ CD ]
Line_23 $$ if (isPrivate || !names.containsKey(key)) -->Line_31 $$ name = names.get(key)[ CD ]
Line_13 $$ for (int i = 0; i < methods.size(); i++) -->Line_14 $$ StructMethod mt = methods.get(i)[ CD ]
Line_23 $$ if (isPrivate || !names.containsKey(key)) -->Line_27 $$ if (!isPrivate) [ CD ]
Line_2 $$ private void renameClassIdentifiers(StructClass cl, Map<String, String> names) -->Line_20 $$ names.put(key, name)[ FD ]
Line_40 $$ for (StructField fd : cl.getFields()) -->Line_41 $$ setFieldNames.add(fd.getName())[ FD ]
Line_17 $$ String name = mt.getName()-->Line_28 $$ names.put(key, name)[ FD ]
Line_3 $$ String classOldFullName = cl.qualifiedName-->Line_47 $$ newName = helper.getNextFieldName(classOldFullName, fd.getName(), fd.getDescriptor())[ FD ]
Line_14 $$ StructMethod mt = methods.get(i)-->Line_18 $$ if (!cl.isOwn() || mt.hasModifier(CodeConstants.ACC_NATIVE)) [ FD ]
Line_3 $$ String classOldFullName = cl.qualifiedName-->Line_25 $$ name = helper.getNextMethodName(classOldFullName, name, mt.getDescriptor())[ FD ]
Line_2 $$ private void renameClassIdentifiers(StructClass cl, Map<String, String> names) -->Line_28 $$ names.put(key, name)[ FD ]
Line_39 $$ HashSet<String> setFieldNames = new HashSet<String>()-->Line_41 $$ setFieldNames.add(fd.getName())[ FD ]
Line_31 $$ name = names.get(key)-->Line_22 $$ if (helper.toBeRenamed(IIdentifierRenamer.Type.ELEMENT_METHOD, classOldFullName, name, mt.getDescriptor())) [ FD ]
Line_2 $$ private void renameClassIdentifiers(StructClass cl, Map<String, String> names) -->Line_3 $$ String classOldFullName = cl.qualifiedName[ CD ]
Line_2 $$ private void renameClassIdentifiers(StructClass cl, Map<String, String> names) -->Line_13 $$ for (int i = 0; i < methods.size(); i++) [ CD ]
Line_4 $$ String classNewFullName = interceptor.getName(classOldFullName)-->Line_5 $$ if (classNewFullName == null) [ FD ]
Line_13 $$ for (int i = 0; i < methods.size(); i++) -->Line_15 $$ String key = methods.getKey(i)[ FD ]
Line_12 $$ VBStyleCollection<StructMethod, String> methods = cl.getMethods()-->Line_13 $$ for (int i = 0; i < methods.size(); i++) [ FD ]
Line_16 $$ boolean isPrivate = mt.hasModifier(CodeConstants.ACC_PRIVATE)-->Line_27 $$ if (!isPrivate) [ FD ]
Line_14 $$ StructMethod mt = methods.get(i)-->Line_17 $$ String name = mt.getName()[ FD ]
Line_25 $$ name = helper.getNextMethodName(classOldFullName, name, mt.getDescriptor())-->Line_28 $$ names.put(key, name)[ FD ]
Line_17 $$ String name = mt.getName()-->Line_20 $$ names.put(key, name)[ FD ]
Line_18 $$ if (!cl.isOwn() || mt.hasModifier(CodeConstants.ACC_NATIVE)) -->Line_22 $$ if (helper.toBeRenamed(IIdentifierRenamer.Type.ELEMENT_METHOD, classOldFullName, name, mt.getDescriptor())) [ CD ]
Line_23 $$ if (isPrivate || !names.containsKey(key)) -->Line_24 $$ do [ CD ]
Line_2 $$ private void renameClassIdentifiers(StructClass cl, Map<String, String> names) -->Line_18 $$ if (!cl.isOwn() || mt.hasModifier(CodeConstants.ACC_NATIVE)) [ FD ]
Line_22 $$ if (helper.toBeRenamed(IIdentifierRenamer.Type.ELEMENT_METHOD, classOldFullName, name, mt.getDescriptor())) -->Line_33 $$ interceptor.addName(classOldFullName + " " + mt.getName() + " " + mt.getDescriptor(), classNewFullName + " " + name + " " + buildNewDescriptor(false, mt.getDescriptor()))[ CD ]
Line_3 $$ String classOldFullName = cl.qualifiedName-->Line_44 $$ if (helper.toBeRenamed(IIdentifierRenamer.Type.ELEMENT_FIELD, classOldFullName, fd.getName(), fd.getDescriptor())) [ FD ]
