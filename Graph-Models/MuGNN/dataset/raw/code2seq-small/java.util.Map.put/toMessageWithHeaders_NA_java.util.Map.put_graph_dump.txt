Line_2 $$ public void toMessageWithHeaders() -->Line_5 $$ MessageHeaders headers = new MessageHeaders(map)[ CD ]
Line_2 $$ public void toMessageWithHeaders() -->Line_8 $$ assertNotNull(message.getHeaders().getTimestamp())[ CD ]
Line_2 $$ public void toMessageWithHeaders() -->Line_6 $$ Message<?> message = this.converter.toMessage("ABC", headers)[ CD ]
Line_6 $$ Message<?> message = this.converter.toMessage("ABC", headers)-->Line_7 $$ assertNotNull(message.getHeaders().getId())[ FD ]
Line_2 $$ public void toMessageWithHeaders() -->Line_7 $$ assertNotNull(message.getHeaders().getId())[ CD ]
Line_2 $$ public void toMessageWithHeaders() -->Line_10 $$ assertEquals("bar", message.getHeaders().get("foo"))[ CD ]
Line_6 $$ Message<?> message = this.converter.toMessage("ABC", headers)-->Line_10 $$ assertEquals("bar", message.getHeaders().get("foo"))[ FD ]
Line_2 $$ public void toMessageWithHeaders() -->Line_3 $$ Map<String, Object> map = new HashMap<String, Object>()[ CD ]
Line_6 $$ Message<?> message = this.converter.toMessage("ABC", headers)-->Line_9 $$ assertEquals(MimeTypeUtils.TEXT_PLAIN, message.getHeaders().get(MessageHeaders.CONTENT_TYPE))[ FD ]
Line_5 $$ MessageHeaders headers = new MessageHeaders(map)-->Line_6 $$ Message<?> message = this.converter.toMessage("ABC", headers)[ FD ]
Line_2 $$ public void toMessageWithHeaders() -->Line_4 $$ map.put("foo", "bar")[ CD ]
Line_2 $$ public void toMessageWithHeaders() -->Line_9 $$ assertEquals(MimeTypeUtils.TEXT_PLAIN, message.getHeaders().get(MessageHeaders.CONTENT_TYPE))[ CD ]
Line_6 $$ Message<?> message = this.converter.toMessage("ABC", headers)-->Line_8 $$ assertNotNull(message.getHeaders().getTimestamp())[ FD ]
Line_3 $$ Map<String, Object> map = new HashMap<String, Object>()-->Line_4 $$ map.put("foo", "bar")[ FD ]
