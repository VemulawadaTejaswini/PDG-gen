Line_24 $$ session = openSession()-->Line_28 $$ session.getTransaction().commit()[ FD ]
Line_24 $$ session = openSession()-->Line_26 $$ customer = session.get(Customer.class, 1)[ FD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_4 $$ session.getTransaction().begin()[ CD ]
Line_18 $$ session = openSession()-->Line_27 $$ session.delete(customer)[ FD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_28 $$ session.getTransaction().commit()[ CD ]
Line_3 $$ Session session = openSession()-->Line_15 $$ session.persist(customer)[ FD ]
Line_3 $$ Session session = openSession()-->Line_28 $$ session.getTransaction().commit()[ FD ]
Line_3 $$ Session session = openSession()-->Line_20 $$ assertEquals(customer.set, session.get(Customer.class, 1).set)[ FD ]
Line_3 $$ Session session = openSession()-->Line_4 $$ session.getTransaction().begin()[ FD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_26 $$ customer = session.get(Customer.class, 1)[ CD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_18 $$ session = openSession()[ CD ]
Line_18 $$ session = openSession()-->Line_26 $$ customer = session.get(Customer.class, 1)[ FD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_24 $$ session = openSession()[ CD ]
Line_24 $$ session = openSession()-->Line_27 $$ session.delete(customer)[ FD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_27 $$ session.delete(customer)[ CD ]
Line_3 $$ Session session = openSession()-->Line_24 $$ session = openSession()[ FD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_14 $$ customer.map.put(Color.BLUE, Status.PENDING)[ CD ]
Line_5 $$ Customer customer = new Customer()-->Line_26 $$ customer = session.get(Customer.class, 1)[ FD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_21 $$ assertEquals(customer.map, session.get(Customer.class, 1).map)[ CD ]
Line_5 $$ Customer customer = new Customer()-->Line_15 $$ session.persist(customer)[ FD ]
Line_3 $$ Session session = openSession()-->Line_18 $$ session = openSession()[ FD ]
Line_18 $$ session = openSession()-->Line_24 $$ session = openSession()[ FD ]
Line_3 $$ Session session = openSession()-->Line_26 $$ customer = session.get(Customer.class, 1)[ FD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_12 $$ customer.map.put(Color.RED, Status.INACTIVE)[ CD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_8 $$ customer.set.add(Color.RED)[ CD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_19 $$ session.getTransaction().begin()[ CD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_10 $$ customer.set.add(Color.BLUE)[ CD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_22 $$ session.getTransaction().commit()[ CD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_9 $$ customer.set.add(Color.GREEN)[ CD ]
Line_24 $$ session = openSession()-->Line_29 $$ session.close()[ FD ]
Line_18 $$ session = openSession()-->Line_25 $$ session.getTransaction().begin()[ FD ]
Line_18 $$ session = openSession()-->Line_29 $$ session.close()[ FD ]
Line_24 $$ session = openSession()-->Line_25 $$ session.getTransaction().begin()[ FD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_20 $$ assertEquals(customer.set, session.get(Customer.class, 1).set)[ CD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_23 $$ session.close()[ CD ]
Line_3 $$ Session session = openSession()-->Line_16 $$ session.getTransaction().commit()[ FD ]
Line_18 $$ session = openSession()-->Line_19 $$ session.getTransaction().begin()[ FD ]
Line_5 $$ Customer customer = new Customer()-->Line_27 $$ session.delete(customer)[ FD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_3 $$ Session session = openSession()[ CD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_17 $$ session.close()[ CD ]
Line_18 $$ session = openSession()-->Line_22 $$ session.getTransaction().commit()[ FD ]
Line_18 $$ session = openSession()-->Line_23 $$ session.close()[ FD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_11 $$ customer.map = new HashMap<Color, Status>()[ CD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_7 $$ customer.set = new HashSet<Color>()[ CD ]
Line_3 $$ Session session = openSession()-->Line_21 $$ assertEquals(customer.map, session.get(Customer.class, 1).map)[ FD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_15 $$ session.persist(customer)[ CD ]
Line_3 $$ Session session = openSession()-->Line_17 $$ session.close()[ FD ]
Line_26 $$ customer = session.get(Customer.class, 1)-->Line_27 $$ session.delete(customer)[ FD ]
Line_18 $$ session = openSession()-->Line_20 $$ assertEquals(customer.set, session.get(Customer.class, 1).set)[ FD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_5 $$ Customer customer = new Customer()[ CD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_13 $$ customer.map.put(Color.GREEN, Status.ACTIVE)[ CD ]
Line_18 $$ session = openSession()-->Line_21 $$ assertEquals(customer.map, session.get(Customer.class, 1).map)[ FD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_6 $$ customer.id = 1[ CD ]
Line_3 $$ Session session = openSession()-->Line_25 $$ session.getTransaction().begin()[ FD ]
Line_3 $$ Session session = openSession()-->Line_27 $$ session.delete(customer)[ FD ]
Line_18 $$ session = openSession()-->Line_28 $$ session.getTransaction().commit()[ FD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_29 $$ session.close()[ CD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_16 $$ session.getTransaction().commit()[ CD ]
Line_3 $$ Session session = openSession()-->Line_22 $$ session.getTransaction().commit()[ FD ]
Line_3 $$ Session session = openSession()-->Line_19 $$ session.getTransaction().begin()[ FD ]
Line_3 $$ Session session = openSession()-->Line_23 $$ session.close()[ FD ]
Line_2 $$ public void testElementCollectionConversion() -->Line_25 $$ session.getTransaction().begin()[ CD ]
Line_3 $$ Session session = openSession()-->Line_29 $$ session.close()[ FD ]
