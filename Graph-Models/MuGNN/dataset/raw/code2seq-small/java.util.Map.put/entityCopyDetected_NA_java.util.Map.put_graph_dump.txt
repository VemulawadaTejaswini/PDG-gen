Line_12 $$ detachedEntitiesForManaged = new IdentitySet()-->Line_17 $$ detachedEntitiesForManaged.add(mergeEntity2)[ FD ]
Line_9 $$ detachedEntitiesForManaged = managedToMergeEntitiesXref.get(managedEntity)-->Line_16 $$ detachedEntitiesForManaged.add(mergeEntity1)[ FD ]
Line_2 $$ public void entityCopyDetected(Object managedEntity, Object mergeEntity1, Object mergeEntity2, EventSource session) -->Line_17 $$ detachedEntitiesForManaged.add(mergeEntity2)[ FD ]
Line_2 $$ public void entityCopyDetected(Object managedEntity, Object mergeEntity1, Object mergeEntity2, EventSource session) -->Line_5 $$ Set<Object> detachedEntitiesForManaged = null[ CD ]
Line_12 $$ detachedEntitiesForManaged = new IdentitySet()-->Line_13 $$ managedToMergeEntitiesXref.put(managedEntity, detachedEntitiesForManaged)[ FD ]
Line_5 $$ Set<Object> detachedEntitiesForManaged = null-->Line_9 $$ detachedEntitiesForManaged = managedToMergeEntitiesXref.get(managedEntity)[ FD ]
Line_2 $$ public void entityCopyDetected(Object managedEntity, Object mergeEntity1, Object mergeEntity2, EventSource session) -->Line_9 $$ detachedEntitiesForManaged = managedToMergeEntitiesXref.get(managedEntity)[ FD ]
Line_11 $$ if (detachedEntitiesForManaged == null) -->Line_14 $$ incrementEntityNameCount(entityName)[ CD ]
Line_9 $$ detachedEntitiesForManaged = managedToMergeEntitiesXref.get(managedEntity)-->Line_12 $$ detachedEntitiesForManaged = new IdentitySet()[ FD ]
Line_2 $$ public void entityCopyDetected(Object managedEntity, Object mergeEntity1, Object mergeEntity2, EventSource session) -->Line_3 $$ final String entityName = session.getEntityName(managedEntity)[ FD ]
Line_9 $$ detachedEntitiesForManaged = managedToMergeEntitiesXref.get(managedEntity)-->Line_13 $$ managedToMergeEntitiesXref.put(managedEntity, detachedEntitiesForManaged)[ FD ]
Line_5 $$ Set<Object> detachedEntitiesForManaged = null-->Line_12 $$ detachedEntitiesForManaged = new IdentitySet()[ FD ]
Line_2 $$ public void entityCopyDetected(Object managedEntity, Object mergeEntity1, Object mergeEntity2, EventSource session) -->Line_16 $$ detachedEntitiesForManaged.add(mergeEntity1)[ CD ]
Line_5 $$ Set<Object> detachedEntitiesForManaged = null-->Line_16 $$ detachedEntitiesForManaged.add(mergeEntity1)[ FD ]
Line_2 $$ public void entityCopyDetected(Object managedEntity, Object mergeEntity1, Object mergeEntity2, EventSource session) -->Line_4 $$ LOG.trace(String.format("More than one representation of the same persistent entity being merged for: %s", MessageHelper.infoString(entityName, session.getIdentifier(managedEntity))))[ CD ]
Line_2 $$ public void entityCopyDetected(Object managedEntity, Object mergeEntity1, Object mergeEntity2, EventSource session) -->Line_6 $$ if (managedToMergeEntitiesXref == null) [ CD ]
Line_6 $$ if (managedToMergeEntitiesXref == null) -->Line_9 $$ detachedEntitiesForManaged = managedToMergeEntitiesXref.get(managedEntity)[ CD ]
Line_2 $$ public void entityCopyDetected(Object managedEntity, Object mergeEntity1, Object mergeEntity2, EventSource session) -->Line_17 $$ detachedEntitiesForManaged.add(mergeEntity2)[ CD ]
Line_2 $$ public void entityCopyDetected(Object managedEntity, Object mergeEntity1, Object mergeEntity2, EventSource session) -->Line_13 $$ managedToMergeEntitiesXref.put(managedEntity, detachedEntitiesForManaged)[ FD ]
Line_3 $$ final String entityName = session.getEntityName(managedEntity)-->Line_14 $$ incrementEntityNameCount(entityName)[ FD ]
Line_3 $$ final String entityName = session.getEntityName(managedEntity)-->Line_4 $$ LOG.trace(String.format("More than one representation of the same persistent entity being merged for: %s", MessageHelper.infoString(entityName, session.getIdentifier(managedEntity))))[ FD ]
Line_5 $$ Set<Object> detachedEntitiesForManaged = null-->Line_17 $$ detachedEntitiesForManaged.add(mergeEntity2)[ FD ]
Line_5 $$ Set<Object> detachedEntitiesForManaged = null-->Line_13 $$ managedToMergeEntitiesXref.put(managedEntity, detachedEntitiesForManaged)[ FD ]
Line_2 $$ public void entityCopyDetected(Object managedEntity, Object mergeEntity1, Object mergeEntity2, EventSource session) -->Line_3 $$ final String entityName = session.getEntityName(managedEntity)[ CD ]
Line_11 $$ if (detachedEntitiesForManaged == null) -->Line_12 $$ detachedEntitiesForManaged = new IdentitySet()[ CD ]
Line_9 $$ detachedEntitiesForManaged = managedToMergeEntitiesXref.get(managedEntity)-->Line_11 $$ if (detachedEntitiesForManaged == null) [ FD ]
Line_12 $$ detachedEntitiesForManaged = new IdentitySet()-->Line_16 $$ detachedEntitiesForManaged.add(mergeEntity1)[ FD ]
Line_11 $$ if (detachedEntitiesForManaged == null) -->Line_13 $$ managedToMergeEntitiesXref.put(managedEntity, detachedEntitiesForManaged)[ CD ]
Line_2 $$ public void entityCopyDetected(Object managedEntity, Object mergeEntity1, Object mergeEntity2, EventSource session) -->Line_16 $$ detachedEntitiesForManaged.add(mergeEntity1)[ FD ]
Line_9 $$ detachedEntitiesForManaged = managedToMergeEntitiesXref.get(managedEntity)-->Line_17 $$ detachedEntitiesForManaged.add(mergeEntity2)[ FD ]
Line_2 $$ public void entityCopyDetected(Object managedEntity, Object mergeEntity1, Object mergeEntity2, EventSource session) -->Line_11 $$ if (detachedEntitiesForManaged == null) [ CD ]
Line_2 $$ public void entityCopyDetected(Object managedEntity, Object mergeEntity1, Object mergeEntity2, EventSource session) -->Line_4 $$ LOG.trace(String.format("More than one representation of the same persistent entity being merged for: %s", MessageHelper.infoString(entityName, session.getIdentifier(managedEntity))))[ FD ]
Line_5 $$ Set<Object> detachedEntitiesForManaged = null-->Line_11 $$ if (detachedEntitiesForManaged == null) [ FD ]
