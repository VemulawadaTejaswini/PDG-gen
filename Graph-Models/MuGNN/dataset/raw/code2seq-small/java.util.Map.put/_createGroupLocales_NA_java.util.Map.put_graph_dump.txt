Line_15 $$ int pos = languageId.indexOf(CharPool.UNDERLINE)-->Line_16 $$ if (pos > 0) [ FD ]
Line_2 $$ private ObjectValuePair<Map<String, Locale>, Map<String, Locale>> _createGroupLocales(long groupId) -->Line_25 $$ _groupLanguageIdLocalesMap.put(groupId, groupLanguageIdLocalesMap)[ FD ]
Line_14 $$ String languageCode = languageId-->Line_19 $$ if (!groupLanguageCodeLocalesMap.containsKey(languageCode)) [ FD ]
Line_3 $$ String[] languageIds = PropsValues.LOCALES_ENABLED-->Line_7 $$ languageIds = StringUtil.split(typeSettingsProperties.getProperty(PropsKeys.LOCALES))[ FD ]
Line_15 $$ int pos = languageId.indexOf(CharPool.UNDERLINE)-->Line_17 $$ languageCode = languageId.substring(0, pos)[ FD ]
Line_19 $$ if (!groupLanguageCodeLocalesMap.containsKey(languageCode)) -->Line_20 $$ groupLanguageCodeLocalesMap.put(languageCode, locale)[ CD ]
Line_10 $$ Map<String, Locale> groupLanguageCodeLocalesMap = new HashMap()-->Line_19 $$ if (!groupLanguageCodeLocalesMap.containsKey(languageCode)) [ FD ]
Line_17 $$ languageCode = languageId.substring(0, pos)-->Line_19 $$ if (!groupLanguageCodeLocalesMap.containsKey(languageCode)) [ FD ]
Line_12 $$ for (String languageId : languageIds) -->Line_15 $$ int pos = languageId.indexOf(CharPool.UNDERLINE)[ FD ]
Line_17 $$ languageCode = languageId.substring(0, pos)-->Line_20 $$ groupLanguageCodeLocalesMap.put(languageCode, locale)[ FD ]
Line_2 $$ private ObjectValuePair<Map<String, Locale>, Map<String, Locale>> _createGroupLocales(long groupId) -->Line_24 $$ _groupLanguageCodeLocalesMapMap.put(groupId, groupLanguageCodeLocalesMap)[ CD ]
Line_14 $$ String languageCode = languageId-->Line_20 $$ groupLanguageCodeLocalesMap.put(languageCode, locale)[ FD ]
Line_13 $$ Locale locale = LocaleUtil.fromLanguageId(languageId, false)-->Line_20 $$ groupLanguageCodeLocalesMap.put(languageCode, locale)[ FD ]
Line_12 $$ for (String languageId : languageIds) -->Line_13 $$ Locale locale = LocaleUtil.fromLanguageId(languageId, false)[ FD ]
Line_6 $$ UnicodeProperties typeSettingsProperties = group.getTypeSettingsProperties()-->Line_7 $$ languageIds = StringUtil.split(typeSettingsProperties.getProperty(PropsKeys.LOCALES))[ FD ]
Line_5 $$ Group group = GroupLocalServiceUtil.getGroup(groupId)-->Line_6 $$ UnicodeProperties typeSettingsProperties = group.getTypeSettingsProperties()[ FD ]
Line_2 $$ private ObjectValuePair<Map<String, Locale>, Map<String, Locale>> _createGroupLocales(long groupId) -->Line_25 $$ _groupLanguageIdLocalesMap.put(groupId, groupLanguageIdLocalesMap)[ CD ]
Line_2 $$ private ObjectValuePair<Map<String, Locale>, Map<String, Locale>> _createGroupLocales(long groupId) -->Line_26 $$ return new ObjectValuePair(groupLanguageCodeLocalesMap, groupLanguageIdLocalesMap)[ CD ]
Line_14 $$ String languageCode = languageId-->Line_17 $$ languageCode = languageId.substring(0, pos)[ FD ]
Line_10 $$ Map<String, Locale> groupLanguageCodeLocalesMap = new HashMap()-->Line_20 $$ groupLanguageCodeLocalesMap.put(languageCode, locale)[ FD ]
Line_10 $$ Map<String, Locale> groupLanguageCodeLocalesMap = new HashMap()-->Line_24 $$ _groupLanguageCodeLocalesMapMap.put(groupId, groupLanguageCodeLocalesMap)[ FD ]
Line_2 $$ private ObjectValuePair<Map<String, Locale>, Map<String, Locale>> _createGroupLocales(long groupId) -->Line_3 $$ String[] languageIds = PropsValues.LOCALES_ENABLED[ CD ]
Line_2 $$ private ObjectValuePair<Map<String, Locale>, Map<String, Locale>> _createGroupLocales(long groupId) -->Line_24 $$ _groupLanguageCodeLocalesMapMap.put(groupId, groupLanguageCodeLocalesMap)[ FD ]
Line_11 $$ Map<String, Locale> groupLanguageIdLocalesMap = new HashMap()-->Line_25 $$ _groupLanguageIdLocalesMap.put(groupId, groupLanguageIdLocalesMap)[ FD ]
Line_13 $$ Locale locale = LocaleUtil.fromLanguageId(languageId, false)-->Line_22 $$ groupLanguageIdLocalesMap.put(languageId, locale)[ FD ]
Line_2 $$ private ObjectValuePair<Map<String, Locale>, Map<String, Locale>> _createGroupLocales(long groupId) -->Line_10 $$ Map<String, Locale> groupLanguageCodeLocalesMap = new HashMap()[ CD ]
Line_16 $$ if (pos > 0) -->Line_17 $$ languageCode = languageId.substring(0, pos)[ CD ]
Line_12 $$ for (String languageId : languageIds) -->Line_17 $$ languageCode = languageId.substring(0, pos)[ FD ]
Line_12 $$ for (String languageId : languageIds) -->Line_22 $$ groupLanguageIdLocalesMap.put(languageId, locale)[ FD ]
Line_2 $$ private ObjectValuePair<Map<String, Locale>, Map<String, Locale>> _createGroupLocales(long groupId) -->Line_11 $$ Map<String, Locale> groupLanguageIdLocalesMap = new HashMap()[ CD ]
Line_2 $$ private ObjectValuePair<Map<String, Locale>, Map<String, Locale>> _createGroupLocales(long groupId) -->Line_5 $$ Group group = GroupLocalServiceUtil.getGroup(groupId)[ FD ]
Line_11 $$ Map<String, Locale> groupLanguageIdLocalesMap = new HashMap()-->Line_22 $$ groupLanguageIdLocalesMap.put(languageId, locale)[ FD ]
