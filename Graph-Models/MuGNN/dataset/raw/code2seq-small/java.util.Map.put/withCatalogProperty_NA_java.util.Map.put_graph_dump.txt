Line_2 $$ public Session withCatalogProperty(String catalog, String key, String value) -->Line_7 $$ Map<String, String> properties = catalogProperties.get(catalog)[ CD ]
Line_2 $$ public Session withCatalogProperty(String catalog, String key, String value) -->Line_15 $$ return new Session(queryId, identity, source, this.catalog, schema, timeZoneKey, locale, remoteUserAddress, userAgent, startTime, systemProperties, catalogProperties, sessionPropertyManager)[ CD ]
Line_2 $$ public Session withCatalogProperty(String catalog, String key, String value) -->Line_4 $$ requireNonNull(key, "key is null")[ CD ]
Line_9 $$ properties = new LinkedHashMap()-->Line_11 $$ properties = new LinkedHashMap(properties)[ FD ]
Line_2 $$ public Session withCatalogProperty(String catalog, String key, String value) -->Line_13 $$ properties.put(key, value)[ CD ]
Line_2 $$ public Session withCatalogProperty(String catalog, String key, String value) -->Line_13 $$ properties.put(key, value)[ FD ]
Line_7 $$ Map<String, String> properties = catalogProperties.get(catalog)-->Line_14 $$ catalogProperties.put(catalog, properties)[ FD ]
Line_6 $$ Map<String, Map<String, String>> catalogProperties = new LinkedHashMap(this.catalogProperties)-->Line_7 $$ Map<String, String> properties = catalogProperties.get(catalog)[ FD ]
Line_2 $$ public Session withCatalogProperty(String catalog, String key, String value) -->Line_6 $$ Map<String, Map<String, String>> catalogProperties = new LinkedHashMap(this.catalogProperties)[ CD ]
Line_2 $$ public Session withCatalogProperty(String catalog, String key, String value) -->Line_5 $$ requireNonNull(value, "value is null")[ FD ]
Line_2 $$ public Session withCatalogProperty(String catalog, String key, String value) -->Line_14 $$ catalogProperties.put(catalog, properties)[ CD ]
Line_2 $$ public Session withCatalogProperty(String catalog, String key, String value) -->Line_3 $$ requireNonNull(catalog, "catalog is null")[ CD ]
Line_11 $$ properties = new LinkedHashMap(properties)-->Line_13 $$ properties.put(key, value)[ FD ]
Line_2 $$ public Session withCatalogProperty(String catalog, String key, String value) -->Line_8 $$ if (properties == null) [ CD ]
Line_7 $$ Map<String, String> properties = catalogProperties.get(catalog)-->Line_11 $$ properties = new LinkedHashMap(properties)[ FD ]
Line_8 $$ if (properties == null) -->Line_9 $$ properties = new LinkedHashMap()[ CD ]
Line_6 $$ Map<String, Map<String, String>> catalogProperties = new LinkedHashMap(this.catalogProperties)-->Line_14 $$ catalogProperties.put(catalog, properties)[ FD ]
Line_2 $$ public Session withCatalogProperty(String catalog, String key, String value) -->Line_7 $$ Map<String, String> properties = catalogProperties.get(catalog)[ FD ]
Line_2 $$ public Session withCatalogProperty(String catalog, String key, String value) -->Line_14 $$ catalogProperties.put(catalog, properties)[ FD ]
Line_2 $$ public Session withCatalogProperty(String catalog, String key, String value) -->Line_3 $$ requireNonNull(catalog, "catalog is null")[ FD ]
Line_9 $$ properties = new LinkedHashMap()-->Line_13 $$ properties.put(key, value)[ FD ]
Line_2 $$ public Session withCatalogProperty(String catalog, String key, String value) -->Line_5 $$ requireNonNull(value, "value is null")[ CD ]
Line_9 $$ properties = new LinkedHashMap()-->Line_14 $$ catalogProperties.put(catalog, properties)[ FD ]
Line_11 $$ properties = new LinkedHashMap(properties)-->Line_14 $$ catalogProperties.put(catalog, properties)[ FD ]
Line_7 $$ Map<String, String> properties = catalogProperties.get(catalog)-->Line_8 $$ if (properties == null) [ FD ]
Line_2 $$ public Session withCatalogProperty(String catalog, String key, String value) -->Line_4 $$ requireNonNull(key, "key is null")[ FD ]
Line_8 $$ if (properties == null) -->Line_11 $$ properties = new LinkedHashMap(properties)[ CD ]
Line_7 $$ Map<String, String> properties = catalogProperties.get(catalog)-->Line_9 $$ properties = new LinkedHashMap()[ FD ]
Line_7 $$ Map<String, String> properties = catalogProperties.get(catalog)-->Line_13 $$ properties.put(key, value)[ FD ]
