Line_2 $$ private Map<String, byte[]> getXAttrs(String statusJson) throws Exception -->Line_4 $$ JSONParser parser = new JSONParser()[ CD ]
Line_4 $$ JSONParser parser = new JSONParser()-->Line_5 $$ JSONObject jsonObject = (JSONObject) parser.parse(statusJson)[ FD ]
Line_5 $$ JSONObject jsonObject = (JSONObject) parser.parse(statusJson)-->Line_6 $$ JSONArray jsonXAttrs = (JSONArray) jsonObject.get("XAttrs")[ FD ]
Line_2 $$ private Map<String, byte[]> getXAttrs(String statusJson) throws Exception -->Line_7 $$ if (jsonXAttrs != null) [ CD ]
Line_2 $$ private Map<String, byte[]> getXAttrs(String statusJson) throws Exception -->Line_3 $$ Map<String, byte[]> xAttrs = Maps.newHashMap()[ CD ]
Line_10 $$ String value = (String) ((JSONObject) a).get("value")-->Line_11 $$ xAttrs.put(name, decodeXAttrValue(value))[ FD ]
Line_3 $$ Map<String, byte[]> xAttrs = Maps.newHashMap()-->Line_11 $$ xAttrs.put(name, decodeXAttrValue(value))[ FD ]
Line_9 $$ String name = (String) ((JSONObject) a).get("name")-->Line_11 $$ xAttrs.put(name, decodeXAttrValue(value))[ FD ]
Line_2 $$ private Map<String, byte[]> getXAttrs(String statusJson) throws Exception -->Line_6 $$ JSONArray jsonXAttrs = (JSONArray) jsonObject.get("XAttrs")[ CD ]
Line_2 $$ private Map<String, byte[]> getXAttrs(String statusJson) throws Exception -->Line_14 $$ return xAttrs[ CD ]
Line_2 $$ private Map<String, byte[]> getXAttrs(String statusJson) throws Exception -->Line_5 $$ JSONObject jsonObject = (JSONObject) parser.parse(statusJson)[ CD ]
Line_2 $$ private Map<String, byte[]> getXAttrs(String statusJson) throws Exception -->Line_5 $$ JSONObject jsonObject = (JSONObject) parser.parse(statusJson)[ FD ]
Line_6 $$ JSONArray jsonXAttrs = (JSONArray) jsonObject.get("XAttrs")-->Line_7 $$ if (jsonXAttrs != null) [ FD ]
