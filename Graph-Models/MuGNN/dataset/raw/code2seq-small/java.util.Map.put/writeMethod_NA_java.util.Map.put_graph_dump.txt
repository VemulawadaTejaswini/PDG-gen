Line_2 $$ private void writeMethod(Method method) throws IOException -->Line_6 $$ methods.put(method, methodId)[ FD ]
Line_2 $$ private void writeMethod(Method method) throws IOException -->Line_3 $$ Integer methodId = methods.get(method)[ CD ]
Line_4 $$ if (methodId == null) -->Line_7 $$ encoder.writeSmallInt(methodId)[ CD ]
Line_4 $$ if (methodId == null) -->Line_5 $$ methodId = methods.size()[ CD ]
Line_3 $$ Integer methodId = methods.get(method)-->Line_15 $$ encoder.writeSmallInt(methodId)[ FD ]
Line_2 $$ private void writeMethod(Method method) throws IOException -->Line_10 $$ encoder.writeSmallInt(method.getParameterTypes().length)[ FD ]
Line_3 $$ Integer methodId = methods.get(method)-->Line_5 $$ methodId = methods.size()[ FD ]
Line_4 $$ if (methodId == null) -->Line_10 $$ encoder.writeSmallInt(method.getParameterTypes().length)[ CD ]
Line_2 $$ private void writeMethod(Method method) throws IOException -->Line_4 $$ if (methodId == null) [ CD ]
Line_3 $$ Integer methodId = methods.get(method)-->Line_7 $$ encoder.writeSmallInt(methodId)[ FD ]
Line_4 $$ if (methodId == null) -->Line_8 $$ encoder.writeString(method.getDeclaringClass().getName())[ CD ]
Line_2 $$ private void writeMethod(Method method) throws IOException -->Line_9 $$ encoder.writeString(method.getName())[ FD ]
Line_2 $$ private void writeMethod(Method method) throws IOException -->Line_11 $$ for (Class<?> paramType : method.getParameterTypes()) [ FD ]
Line_11 $$ for (Class<?> paramType : method.getParameterTypes()) -->Line_12 $$ encoder.writeString(paramType.getName())[ FD ]
Line_4 $$ if (methodId == null) -->Line_9 $$ encoder.writeString(method.getName())[ CD ]
Line_5 $$ methodId = methods.size()-->Line_6 $$ methods.put(method, methodId)[ FD ]
Line_5 $$ methodId = methods.size()-->Line_7 $$ encoder.writeSmallInt(methodId)[ FD ]
Line_2 $$ private void writeMethod(Method method) throws IOException -->Line_3 $$ Integer methodId = methods.get(method)[ FD ]
Line_5 $$ methodId = methods.size()-->Line_15 $$ encoder.writeSmallInt(methodId)[ FD ]
Line_4 $$ if (methodId == null) -->Line_6 $$ methods.put(method, methodId)[ CD ]
Line_3 $$ Integer methodId = methods.get(method)-->Line_4 $$ if (methodId == null) [ FD ]
Line_2 $$ private void writeMethod(Method method) throws IOException -->Line_8 $$ encoder.writeString(method.getDeclaringClass().getName())[ FD ]
Line_3 $$ Integer methodId = methods.get(method)-->Line_6 $$ methods.put(method, methodId)[ FD ]
Line_4 $$ if (methodId == null) -->Line_15 $$ encoder.writeSmallInt(methodId)[ CD ]
