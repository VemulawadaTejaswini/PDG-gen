Line_10 $$ String elementClass = null-->Line_13 $$ elementClass = ((Class) type).getName()[ FD ]
Line_15 $$ ElementStub stub = new ElementStub(parent, StringRef.fromString(tag.getName()), StringRef.fromNullableString(nsKey), index, description instanceof CustomDomChildrenDescription, elementClass == null ? null : StringRef.fromNullableString(elementClass), tag.getSubTags().length == 0 ? tag.getValue().getTrimmedText() : "")-->Line_17 $$ visitXmlElement(attribute, stub, 0)[ FD ]
Line_8 $$ if (element instanceof XmlTag) -->Line_9 $$ XmlTag tag = (XmlTag) element[ CD ]
Line_3 $$ DomInvocationHandler handler = myManager.getDomHandler(element)-->Line_6 $$ AbstractDomChildrenDescription description = handler.getChildDescription()[ FD ]
Line_2 $$ void visitXmlElement(XmlElement element, ElementStub parent, int index) -->Line_6 $$ AbstractDomChildrenDescription description = handler.getChildDescription()[ CD ]
Line_11 $$ if (handler.getAnnotation(StubbedOccurrence.class) != null) -->Line_12 $$ final Type type = description.getType()[ CD ]
Line_6 $$ AbstractDomChildrenDescription description = handler.getChildDescription()-->Line_12 $$ final Type type = description.getType()[ FD ]
Line_3 $$ DomInvocationHandler handler = myManager.getDomHandler(element)-->Line_4 $$ if (handler == null || handler.getAnnotation(Stubbed.class) == null && !handler.getChildDescription().isStubbed())[ FD ]
Line_4 $$ if (handler == null || handler.getAnnotation(Stubbed.class) == null && !handler.getChildDescription().isStubbed())-->Line_5 $$ return[ CD ]
Line_8 $$ if (element instanceof XmlTag) -->Line_10 $$ String elementClass = null[ CD ]
Line_8 $$ if (element instanceof XmlTag) -->Line_27 $$ if (element instanceof XmlAttribute) [ CD ]
Line_23 $$ i = i == null ? 0 : i + 1-->Line_24 $$ visitXmlElement(subTag, stub, i)[ FD ]
Line_21 $$ String name = subTag.getName()-->Line_22 $$ Integer i = indices.get(name)[ FD ]
Line_22 $$ Integer i = indices.get(name)-->Line_25 $$ indices.put(name, i)[ FD ]
Line_2 $$ void visitXmlElement(XmlElement element, ElementStub parent, int index) -->Line_3 $$ DomInvocationHandler handler = myManager.getDomHandler(element)[ CD ]
Line_2 $$ void visitXmlElement(XmlElement element, ElementStub parent, int index) -->Line_3 $$ DomInvocationHandler handler = myManager.getDomHandler(element)[ FD ]
Line_8 $$ if (element instanceof XmlTag) -->Line_11 $$ if (handler.getAnnotation(StubbedOccurrence.class) != null) [ CD ]
Line_20 $$ for (final XmlTag subTag : tag.getSubTags()) -->Line_24 $$ visitXmlElement(subTag, stub, i)[ FD ]
Line_10 $$ String elementClass = null-->Line_15 $$ ElementStub stub = new ElementStub(parent, StringRef.fromString(tag.getName()), StringRef.fromNullableString(nsKey), index, description instanceof CustomDomChildrenDescription, elementClass == null ? null : StringRef.fromNullableString(elementClass), tag.getSubTags().length == 0 ? tag.getValue().getTrimmedText() : "")[ FD ]
Line_2 $$ void visitXmlElement(XmlElement element, ElementStub parent, int index) -->Line_7 $$ String nsKey = description instanceof DomChildrenDescription ? ((DomChildrenDescription) description).getXmlName().getNamespaceKey() : ""[ CD ]
Line_21 $$ String name = subTag.getName()-->Line_25 $$ indices.put(name, i)[ FD ]
Line_13 $$ elementClass = ((Class) type).getName()-->Line_15 $$ ElementStub stub = new ElementStub(parent, StringRef.fromString(tag.getName()), StringRef.fromNullableString(nsKey), index, description instanceof CustomDomChildrenDescription, elementClass == null ? null : StringRef.fromNullableString(elementClass), tag.getSubTags().length == 0 ? tag.getValue().getTrimmedText() : "")[ FD ]
Line_3 $$ DomInvocationHandler handler = myManager.getDomHandler(element)-->Line_11 $$ if (handler.getAnnotation(StubbedOccurrence.class) != null) [ FD ]
Line_19 $$ Map<String, Integer> indices = new HashMap<String, Integer>()-->Line_25 $$ indices.put(name, i)[ FD ]
Line_15 $$ ElementStub stub = new ElementStub(parent, StringRef.fromString(tag.getName()), StringRef.fromNullableString(nsKey), index, description instanceof CustomDomChildrenDescription, elementClass == null ? null : StringRef.fromNullableString(elementClass), tag.getSubTags().length == 0 ? tag.getValue().getTrimmedText() : "")-->Line_24 $$ visitXmlElement(subTag, stub, i)[ FD ]
Line_9 $$ XmlTag tag = (XmlTag) element-->Line_15 $$ ElementStub stub = new ElementStub(parent, StringRef.fromString(tag.getName()), StringRef.fromNullableString(nsKey), index, description instanceof CustomDomChildrenDescription, elementClass == null ? null : StringRef.fromNullableString(elementClass), tag.getSubTags().length == 0 ? tag.getValue().getTrimmedText() : "")[ FD ]
Line_22 $$ Integer i = indices.get(name)-->Line_24 $$ visitXmlElement(subTag, stub, i)[ FD ]
Line_9 $$ XmlTag tag = (XmlTag) element-->Line_20 $$ for (final XmlTag subTag : tag.getSubTags()) [ FD ]
Line_8 $$ if (element instanceof XmlTag) -->Line_15 $$ ElementStub stub = new ElementStub(parent, StringRef.fromString(tag.getName()), StringRef.fromNullableString(nsKey), index, description instanceof CustomDomChildrenDescription, elementClass == null ? null : StringRef.fromNullableString(elementClass), tag.getSubTags().length == 0 ? tag.getValue().getTrimmedText() : "")[ CD ]
Line_8 $$ if (element instanceof XmlTag) -->Line_19 $$ Map<String, Integer> indices = new HashMap<String, Integer>()[ CD ]
Line_9 $$ XmlTag tag = (XmlTag) element-->Line_16 $$ for (XmlAttribute attribute : tag.getAttributes()) [ FD ]
Line_2 $$ void visitXmlElement(XmlElement element, ElementStub parent, int index) -->Line_27 $$ if (element instanceof XmlAttribute) [ FD ]
Line_2 $$ void visitXmlElement(XmlElement element, ElementStub parent, int index) -->Line_4 $$ if (handler == null || handler.getAnnotation(Stubbed.class) == null && !handler.getChildDescription().isStubbed())[ CD ]
Line_7 $$ String nsKey = description instanceof DomChildrenDescription ? ((DomChildrenDescription) description).getXmlName().getNamespaceKey() : ""-->Line_15 $$ ElementStub stub = new ElementStub(parent, StringRef.fromString(tag.getName()), StringRef.fromNullableString(nsKey), index, description instanceof CustomDomChildrenDescription, elementClass == null ? null : StringRef.fromNullableString(elementClass), tag.getSubTags().length == 0 ? tag.getValue().getTrimmedText() : "")[ FD ]
Line_7 $$ String nsKey = description instanceof DomChildrenDescription ? ((DomChildrenDescription) description).getXmlName().getNamespaceKey() : ""-->Line_28 $$ new AttributeStub(parent, StringRef.fromString(((XmlAttribute) element).getLocalName()), StringRef.fromNullableString(nsKey), ((XmlAttribute) element).getValue())[ FD ]
Line_20 $$ for (final XmlTag subTag : tag.getSubTags()) -->Line_21 $$ String name = subTag.getName()[ FD ]
Line_23 $$ i = i == null ? 0 : i + 1-->Line_25 $$ indices.put(name, i)[ FD ]
Line_11 $$ if (handler.getAnnotation(StubbedOccurrence.class) != null) -->Line_13 $$ elementClass = ((Class) type).getName()[ CD ]
Line_2 $$ void visitXmlElement(XmlElement element, ElementStub parent, int index) -->Line_8 $$ if (element instanceof XmlTag) [ CD ]
Line_2 $$ void visitXmlElement(XmlElement element, ElementStub parent, int index) -->Line_8 $$ if (element instanceof XmlTag) [ FD ]
Line_16 $$ for (XmlAttribute attribute : tag.getAttributes()) -->Line_17 $$ visitXmlElement(attribute, stub, 0)[ FD ]
Line_19 $$ Map<String, Integer> indices = new HashMap<String, Integer>()-->Line_22 $$ Integer i = indices.get(name)[ FD ]
Line_22 $$ Integer i = indices.get(name)-->Line_23 $$ i = i == null ? 0 : i + 1[ FD ]
