Line_4 $$ ProxyFactory pf = new ProxyFactory()-->Line_6 $$ pf.addAdvice(new NopInterceptor())[ FD ]
Line_4 $$ ProxyFactory pf = new ProxyFactory()-->Line_7 $$ Object proxy = pf.getProxy()[ FD ]
Line_2 $$ public void testWithCglibProxy() throws Exception -->Line_18 $$ assertEquals("Incorrect number of operations", getExpectedOperationCount(), inf.getOperations().length)[ CD ]
Line_2 $$ public void testWithCglibProxy() throws Exception -->Line_17 $$ MBeanInfo inf = getServer().getMBeanInfo(ObjectNameManager.getInstance(objectName))[ CD ]
Line_2 $$ public void testWithCglibProxy() throws Exception -->Line_10 $$ exporter.setBeanFactory(getContext())[ CD ]
Line_9 $$ MBeanExporter exporter = new MBeanExporter()-->Line_10 $$ exporter.setBeanFactory(getContext())[ FD ]
Line_2 $$ public void testWithCglibProxy() throws Exception -->Line_8 $$ MetadataMBeanInfoAssembler assembler = (MetadataMBeanInfoAssembler) getAssembler()[ CD ]
Line_7 $$ Object proxy = pf.getProxy()-->Line_14 $$ beans.put(objectName, proxy)[ FD ]
Line_2 $$ public void testWithCglibProxy() throws Exception -->Line_6 $$ pf.addAdvice(new NopInterceptor())[ CD ]
Line_2 $$ public void testWithCglibProxy() throws Exception -->Line_13 $$ Map<String, Object> beans = new HashMap<String, Object>()[ CD ]
Line_8 $$ MetadataMBeanInfoAssembler assembler = (MetadataMBeanInfoAssembler) getAssembler()-->Line_11 $$ exporter.setAssembler(assembler)[ FD ]
Line_2 $$ public void testWithCglibProxy() throws Exception -->Line_14 $$ beans.put(objectName, proxy)[ CD ]
Line_3 $$ IJmxTestBean tb = createJmxTestBean()-->Line_5 $$ pf.setTarget(tb)[ FD ]
Line_9 $$ MBeanExporter exporter = new MBeanExporter()-->Line_15 $$ exporter.setBeans(beans)[ FD ]
Line_8 $$ MetadataMBeanInfoAssembler assembler = (MetadataMBeanInfoAssembler) getAssembler()-->Line_20 $$ assertTrue("Not included in autodetection", assembler.includeBean(proxy.getClass(), "some bean name"))[ FD ]
Line_17 $$ MBeanInfo inf = getServer().getMBeanInfo(ObjectNameManager.getInstance(objectName))-->Line_19 $$ assertEquals("Incorrect number of attributes", getExpectedAttributeCount(), inf.getAttributes().length)[ FD ]
Line_2 $$ public void testWithCglibProxy() throws Exception -->Line_20 $$ assertTrue("Not included in autodetection", assembler.includeBean(proxy.getClass(), "some bean name"))[ CD ]
Line_2 $$ public void testWithCglibProxy() throws Exception -->Line_11 $$ exporter.setAssembler(assembler)[ CD ]
Line_2 $$ public void testWithCglibProxy() throws Exception -->Line_19 $$ assertEquals("Incorrect number of attributes", getExpectedAttributeCount(), inf.getAttributes().length)[ CD ]
Line_2 $$ public void testWithCglibProxy() throws Exception -->Line_16 $$ start(exporter)[ CD ]
Line_2 $$ public void testWithCglibProxy() throws Exception -->Line_15 $$ exporter.setBeans(beans)[ CD ]
Line_9 $$ MBeanExporter exporter = new MBeanExporter()-->Line_11 $$ exporter.setAssembler(assembler)[ FD ]
Line_2 $$ public void testWithCglibProxy() throws Exception -->Line_7 $$ Object proxy = pf.getProxy()[ CD ]
Line_2 $$ public void testWithCglibProxy() throws Exception -->Line_9 $$ MBeanExporter exporter = new MBeanExporter()[ CD ]
Line_9 $$ MBeanExporter exporter = new MBeanExporter()-->Line_16 $$ start(exporter)[ FD ]
Line_2 $$ public void testWithCglibProxy() throws Exception -->Line_5 $$ pf.setTarget(tb)[ CD ]
Line_17 $$ MBeanInfo inf = getServer().getMBeanInfo(ObjectNameManager.getInstance(objectName))-->Line_18 $$ assertEquals("Incorrect number of operations", getExpectedOperationCount(), inf.getOperations().length)[ FD ]
Line_4 $$ ProxyFactory pf = new ProxyFactory()-->Line_5 $$ pf.setTarget(tb)[ FD ]
Line_12 $$ String objectName = "spring:bean=test,proxy=true"-->Line_14 $$ beans.put(objectName, proxy)[ FD ]
Line_2 $$ public void testWithCglibProxy() throws Exception -->Line_3 $$ IJmxTestBean tb = createJmxTestBean()[ CD ]
Line_2 $$ public void testWithCglibProxy() throws Exception -->Line_4 $$ ProxyFactory pf = new ProxyFactory()[ CD ]
Line_7 $$ Object proxy = pf.getProxy()-->Line_20 $$ assertTrue("Not included in autodetection", assembler.includeBean(proxy.getClass(), "some bean name"))[ FD ]
Line_13 $$ Map<String, Object> beans = new HashMap<String, Object>()-->Line_15 $$ exporter.setBeans(beans)[ FD ]
Line_12 $$ String objectName = "spring:bean=test,proxy=true"-->Line_17 $$ MBeanInfo inf = getServer().getMBeanInfo(ObjectNameManager.getInstance(objectName))[ FD ]
Line_2 $$ public void testWithCglibProxy() throws Exception -->Line_12 $$ String objectName = "spring:bean=test,proxy=true"[ CD ]
Line_13 $$ Map<String, Object> beans = new HashMap<String, Object>()-->Line_14 $$ beans.put(objectName, proxy)[ FD ]
