Line_27 $$ if (pattern != null) -->Line_28 $$ myAnnotationNameToPatternMap.put(annotationClassName, pattern)[ CD ]
Line_13 $$ if (patternString.get() != null || !myPatternAnnotationClassName.equals(Type.getType(desc).getClassName())) -->Line_14 $$ return null[ CD ]
Line_7 $$ final InputStream is = myClassFinder.getClassBytesAsStream(annotationClassName)-->Line_31 $$ is.close()[ FD ]
Line_2 $$ private void processAnnotation(String annotationClassName) -->Line_3 $$ if (!myProcessedAnnotations.add(annotationClassName)) [ FD ]
Line_16 $$ return new AnnotationVisitor(Opcodes.ASM5) -->Line_18 $$ if ("value".equals(name) && value instanceof String) [ FD ]
Line_11 $$ final ClassVisitor visitor = new ClassVisitor(Opcodes.ASM5) -->Line_13 $$ if (patternString.get() != null || !myPatternAnnotationClassName.equals(Type.getType(desc).getClassName())) [ FD ]
Line_10 $$ final Ref<String> patternString = new Ref<String>(null)-->Line_13 $$ if (patternString.get() != null || !myPatternAnnotationClassName.equals(Type.getType(desc).getClassName())) [ FD ]
Line_3 $$ if (!myProcessedAnnotations.add(annotationClassName)) -->Line_4 $$ return[ CD ]
Line_11 $$ final ClassVisitor visitor = new ClassVisitor(Opcodes.ASM5) -->Line_13 $$ if (patternString.get() != null || !myPatternAnnotationClassName.equals(Type.getType(desc).getClassName())) [ CD ]
Line_11 $$ final ClassVisitor visitor = new ClassVisitor(Opcodes.ASM5) -->Line_25 $$ new ClassReader(is).accept(visitor, ClassReader.SKIP_CODE | ClassReader.SKIP_DEBUG | ClassReader.SKIP_FRAMES)[ FD ]
Line_16 $$ return new AnnotationVisitor(Opcodes.ASM5) -->Line_18 $$ if ("value".equals(name) && value instanceof String) [ CD ]
Line_18 $$ if ("value".equals(name) && value instanceof String) -->Line_19 $$ patternString.set((String) value)[ CD ]
Line_7 $$ final InputStream is = myClassFinder.getClassBytesAsStream(annotationClassName)-->Line_8 $$ if (is != null) [ FD ]
Line_2 $$ private void processAnnotation(String annotationClassName) -->Line_7 $$ final InputStream is = myClassFinder.getClassBytesAsStream(annotationClassName)[ FD ]
Line_11 $$ final ClassVisitor visitor = new ClassVisitor(Opcodes.ASM5) -->Line_16 $$ return new AnnotationVisitor(Opcodes.ASM5) [ CD ]
Line_2 $$ private void processAnnotation(String annotationClassName) -->Line_3 $$ if (!myProcessedAnnotations.add(annotationClassName)) [ CD ]
Line_10 $$ final Ref<String> patternString = new Ref<String>(null)-->Line_19 $$ patternString.set((String) value)[ FD ]
Line_10 $$ final Ref<String> patternString = new Ref<String>(null)-->Line_26 $$ final String pattern = patternString.get()[ FD ]
Line_2 $$ private void processAnnotation(String annotationClassName) -->Line_28 $$ myAnnotationNameToPatternMap.put(annotationClassName, pattern)[ FD ]
