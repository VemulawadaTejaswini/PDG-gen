Line_44 $$ if (message == null)-->Line_45 $$ message = mutation.createMessage()[ CD ]
Line_17 $$ String dc = DatabaseDescriptor.getEndpointSnitch().getDatacenter(destination)-->Line_26 $$ dcGroups.put(dc, messages)[ FD ]
Line_25 $$ dcGroups = new HashMap()-->Line_46 $$ for (Collection<InetAddress> dcTargets : dcGroups.values()) sendMessagesToNonlocalDC(message, dcTargets, responseHandler)[ FD ]
Line_3 $$ Map<String, Collection<InetAddress>> dcGroups = null-->Line_21 $$ Collection<InetAddress> messages = (dcGroups != null) ? dcGroups.get(dc) : null[ FD ]
Line_5 $$ boolean insertLocal = false-->Line_13 $$ insertLocal = true[ FD ]
Line_12 $$ if (canDoLocalRequest(destination)) -->Line_15 $$ if (message == null)[ CD ]
Line_22 $$ if (messages == null) -->Line_26 $$ dcGroups.put(dc, messages)[ CD ]
Line_2 $$ public static void sendToHintedEndpoints(final Mutation mutation, Iterable<InetAddress> targets, AbstractWriteResponseHandler<IMutation> responseHandler, String localDataCenter, Stage stage) throws OverloadedException -->Line_18 $$ if (localDataCenter.equals(dc)) [ FD ]
Line_2 $$ public static void sendToHintedEndpoints(final Mutation mutation, Iterable<InetAddress> targets, AbstractWriteResponseHandler<IMutation> responseHandler, String localDataCenter, Stage stage) throws OverloadedException -->Line_34 $$ endpointsToHint = new ArrayList(Iterables.size(targets))[ FD ]
Line_7 $$ for (InetAddress destination : targets) -->Line_8 $$ if (StorageMetrics.totalHintsInProgress.getCount() > maxHintsInProgress && (getHintsInProgressFor(destination).get() > 0 && shouldHint(destination))) [ FD ]
Line_17 $$ String dc = DatabaseDescriptor.getEndpointSnitch().getDatacenter(destination)-->Line_21 $$ Collection<InetAddress> messages = (dcGroups != null) ? dcGroups.get(dc) : null[ FD ]
Line_7 $$ for (InetAddress destination : targets) -->Line_19 $$ MessagingService.instance().sendRR(message, destination, responseHandler, true)[ FD ]
Line_21 $$ Collection<InetAddress> messages = (dcGroups != null) ? dcGroups.get(dc) : null-->Line_28 $$ messages.add(destination)[ FD ]
Line_2 $$ public static void sendToHintedEndpoints(final Mutation mutation, Iterable<InetAddress> targets, AbstractWriteResponseHandler<IMutation> responseHandler, String localDataCenter, Stage stage) throws OverloadedException -->Line_42 $$ performLocally(stage, mutation::<>apply, responseHandler)[ FD ]
Line_4 $$ MessageOut<Mutation> message = null-->Line_16 $$ message = mutation.createMessage()[ FD ]
Line_4 $$ MessageOut<Mutation> message = null-->Line_19 $$ MessagingService.instance().sendRR(message, destination, responseHandler, true)[ FD ]
Line_17 $$ String dc = DatabaseDescriptor.getEndpointSnitch().getDatacenter(destination)-->Line_18 $$ if (localDataCenter.equals(dc)) [ FD ]
Line_18 $$ if (localDataCenter.equals(dc)) -->Line_28 $$ messages.add(destination)[ CD ]
Line_4 $$ MessageOut<Mutation> message = null-->Line_45 $$ message = mutation.createMessage()[ FD ]
Line_4 $$ MessageOut<Mutation> message = null-->Line_44 $$ if (message == null)[ FD ]
Line_3 $$ Map<String, Collection<InetAddress>> dcGroups = null-->Line_46 $$ for (Collection<InetAddress> dcTargets : dcGroups.values()) sendMessagesToNonlocalDC(message, dcTargets, responseHandler)[ FD ]
Line_12 $$ if (canDoLocalRequest(destination)) -->Line_13 $$ insertLocal = true[ CD ]
Line_22 $$ if (messages == null) -->Line_23 $$ messages = new ArrayList(3)[ CD ]
Line_25 $$ dcGroups = new HashMap()-->Line_26 $$ dcGroups.put(dc, messages)[ FD ]
Line_16 $$ message = mutation.createMessage()-->Line_19 $$ MessagingService.instance().sendRR(message, destination, responseHandler, true)[ FD ]
Line_23 $$ messages = new ArrayList(3)-->Line_28 $$ messages.add(destination)[ FD ]
Line_21 $$ Collection<InetAddress> messages = (dcGroups != null) ? dcGroups.get(dc) : null-->Line_23 $$ messages = new ArrayList(3)[ FD ]
Line_2 $$ public static void sendToHintedEndpoints(final Mutation mutation, Iterable<InetAddress> targets, AbstractWriteResponseHandler<IMutation> responseHandler, String localDataCenter, Stage stage) throws OverloadedException -->Line_43 $$ if (dcGroups != null) [ CD ]
Line_6 $$ ArrayList<InetAddress> endpointsToHint = null-->Line_34 $$ endpointsToHint = new ArrayList(Iterables.size(targets))[ FD ]
Line_3 $$ Map<String, Collection<InetAddress>> dcGroups = null-->Line_26 $$ dcGroups.put(dc, messages)[ FD ]
Line_2 $$ public static void sendToHintedEndpoints(final Mutation mutation, Iterable<InetAddress> targets, AbstractWriteResponseHandler<IMutation> responseHandler, String localDataCenter, Stage stage) throws OverloadedException -->Line_45 $$ message = mutation.createMessage()[ FD ]
Line_34 $$ endpointsToHint = new ArrayList(Iterables.size(targets))-->Line_35 $$ endpointsToHint.add(destination)[ FD ]
Line_24 $$ if (dcGroups == null)-->Line_25 $$ dcGroups = new HashMap()[ CD ]
Line_34 $$ endpointsToHint = new ArrayList(Iterables.size(targets))-->Line_39 $$ if (endpointsToHint != null)[ FD ]
Line_4 $$ MessageOut<Mutation> message = null-->Line_15 $$ if (message == null)[ FD ]
Line_34 $$ endpointsToHint = new ArrayList(Iterables.size(targets))-->Line_40 $$ submitHint(mutation, endpointsToHint, responseHandler)[ FD ]
Line_16 $$ message = mutation.createMessage()-->Line_46 $$ sendMessagesToNonlocalDC(message, dcTargets, responseHandler)[ FD ]
Line_21 $$ Collection<InetAddress> messages = (dcGroups != null) ? dcGroups.get(dc) : null-->Line_26 $$ dcGroups.put(dc, messages)[ FD ]
Line_18 $$ if (localDataCenter.equals(dc)) -->Line_21 $$ Collection<InetAddress> messages = (dcGroups != null) ? dcGroups.get(dc) : null[ CD ]
Line_32 $$ if (shouldHint(destination)) -->Line_33 $$ if (endpointsToHint == null)[ CD ]
Line_7 $$ for (InetAddress destination : targets) -->Line_11 $$ if (FailureDetector.instance.isAlive(destination)) [ FD ]
Line_11 $$ if (FailureDetector.instance.isAlive(destination)) -->Line_12 $$ if (canDoLocalRequest(destination)) [ CD ]
Line_12 $$ if (canDoLocalRequest(destination)) -->Line_17 $$ String dc = DatabaseDescriptor.getEndpointSnitch().getDatacenter(destination)[ CD ]
Line_2 $$ public static void sendToHintedEndpoints(final Mutation mutation, Iterable<InetAddress> targets, AbstractWriteResponseHandler<IMutation> responseHandler, String localDataCenter, Stage stage) throws OverloadedException -->Line_5 $$ boolean insertLocal = false[ CD ]
Line_2 $$ public static void sendToHintedEndpoints(final Mutation mutation, Iterable<InetAddress> targets, AbstractWriteResponseHandler<IMutation> responseHandler, String localDataCenter, Stage stage) throws OverloadedException -->Line_6 $$ ArrayList<InetAddress> endpointsToHint = null[ CD ]
Line_32 $$ if (shouldHint(destination)) -->Line_35 $$ endpointsToHint.add(destination)[ CD ]
Line_23 $$ messages = new ArrayList(3)-->Line_26 $$ dcGroups.put(dc, messages)[ FD ]
Line_11 $$ if (FailureDetector.instance.isAlive(destination)) -->Line_32 $$ if (shouldHint(destination)) [ CD ]
Line_39 $$ if (endpointsToHint != null)-->Line_40 $$ submitHint(mutation, endpointsToHint, responseHandler)[ CD ]
Line_6 $$ ArrayList<InetAddress> endpointsToHint = null-->Line_40 $$ submitHint(mutation, endpointsToHint, responseHandler)[ FD ]
Line_2 $$ public static void sendToHintedEndpoints(final Mutation mutation, Iterable<InetAddress> targets, AbstractWriteResponseHandler<IMutation> responseHandler, String localDataCenter, Stage stage) throws OverloadedException -->Line_4 $$ MessageOut<Mutation> message = null[ CD ]
Line_18 $$ if (localDataCenter.equals(dc)) -->Line_19 $$ MessagingService.instance().sendRR(message, destination, responseHandler, true)[ CD ]
Line_2 $$ public static void sendToHintedEndpoints(final Mutation mutation, Iterable<InetAddress> targets, AbstractWriteResponseHandler<IMutation> responseHandler, String localDataCenter, Stage stage) throws OverloadedException -->Line_3 $$ Map<String, Collection<InetAddress>> dcGroups = null[ CD ]
Line_3 $$ Map<String, Collection<InetAddress>> dcGroups = null-->Line_43 $$ if (dcGroups != null) [ FD ]
Line_6 $$ ArrayList<InetAddress> endpointsToHint = null-->Line_39 $$ if (endpointsToHint != null)[ FD ]
Line_2 $$ public static void sendToHintedEndpoints(final Mutation mutation, Iterable<InetAddress> targets, AbstractWriteResponseHandler<IMutation> responseHandler, String localDataCenter, Stage stage) throws OverloadedException -->Line_39 $$ if (endpointsToHint != null)[ CD ]
Line_25 $$ dcGroups = new HashMap()-->Line_43 $$ if (dcGroups != null) [ FD ]
Line_7 $$ for (InetAddress destination : targets) -->Line_17 $$ String dc = DatabaseDescriptor.getEndpointSnitch().getDatacenter(destination)[ FD ]
Line_3 $$ Map<String, Collection<InetAddress>> dcGroups = null-->Line_25 $$ dcGroups = new HashMap()[ FD ]
Line_6 $$ ArrayList<InetAddress> endpointsToHint = null-->Line_35 $$ endpointsToHint.add(destination)[ FD ]
Line_2 $$ public static void sendToHintedEndpoints(final Mutation mutation, Iterable<InetAddress> targets, AbstractWriteResponseHandler<IMutation> responseHandler, String localDataCenter, Stage stage) throws OverloadedException -->Line_46 $$ sendMessagesToNonlocalDC(message, dcTargets, responseHandler)[ FD ]
Line_16 $$ message = mutation.createMessage()-->Line_44 $$ if (message == null)[ FD ]
Line_7 $$ for (InetAddress destination : targets) -->Line_12 $$ if (canDoLocalRequest(destination)) [ FD ]
Line_2 $$ public static void sendToHintedEndpoints(final Mutation mutation, Iterable<InetAddress> targets, AbstractWriteResponseHandler<IMutation> responseHandler, String localDataCenter, Stage stage) throws OverloadedException -->Line_40 $$ submitHint(mutation, endpointsToHint, responseHandler)[ FD ]
Line_3 $$ Map<String, Collection<InetAddress>> dcGroups = null-->Line_24 $$ if (dcGroups == null)[ FD ]
Line_2 $$ public static void sendToHintedEndpoints(final Mutation mutation, Iterable<InetAddress> targets, AbstractWriteResponseHandler<IMutation> responseHandler, String localDataCenter, Stage stage) throws OverloadedException -->Line_41 $$ if (insertLocal)[ CD ]
Line_22 $$ if (messages == null) -->Line_24 $$ if (dcGroups == null)[ CD ]
Line_4 $$ MessageOut<Mutation> message = null-->Line_46 $$ sendMessagesToNonlocalDC(message, dcTargets, responseHandler)[ FD ]
Line_15 $$ if (message == null)-->Line_16 $$ message = mutation.createMessage()[ CD ]
Line_2 $$ public static void sendToHintedEndpoints(final Mutation mutation, Iterable<InetAddress> targets, AbstractWriteResponseHandler<IMutation> responseHandler, String localDataCenter, Stage stage) throws OverloadedException -->Line_19 $$ MessagingService.instance().sendRR(message, destination, responseHandler, true)[ FD ]
Line_7 $$ for (InetAddress destination : targets) -->Line_32 $$ if (shouldHint(destination)) [ FD ]
Line_18 $$ if (localDataCenter.equals(dc)) -->Line_22 $$ if (messages == null) [ CD ]
Line_41 $$ if (insertLocal)-->Line_42 $$ performLocally(stage, mutation::<>apply, responseHandler)[ CD ]
Line_12 $$ if (canDoLocalRequest(destination)) -->Line_18 $$ if (localDataCenter.equals(dc)) [ CD ]
Line_45 $$ message = mutation.createMessage()-->Line_46 $$ sendMessagesToNonlocalDC(message, dcTargets, responseHandler)[ FD ]
Line_16 $$ message = mutation.createMessage()-->Line_45 $$ message = mutation.createMessage()[ FD ]
Line_21 $$ Collection<InetAddress> messages = (dcGroups != null) ? dcGroups.get(dc) : null-->Line_22 $$ if (messages == null) [ FD ]
Line_7 $$ for (InetAddress destination : targets) -->Line_35 $$ endpointsToHint.add(destination)[ FD ]
Line_2 $$ public static void sendToHintedEndpoints(final Mutation mutation, Iterable<InetAddress> targets, AbstractWriteResponseHandler<IMutation> responseHandler, String localDataCenter, Stage stage) throws OverloadedException -->Line_16 $$ message = mutation.createMessage()[ FD ]
Line_7 $$ for (InetAddress destination : targets) -->Line_28 $$ messages.add(destination)[ FD ]
Line_6 $$ ArrayList<InetAddress> endpointsToHint = null-->Line_33 $$ if (endpointsToHint == null)[ FD ]
Line_43 $$ if (dcGroups != null) -->Line_44 $$ if (message == null)[ CD ]
Line_33 $$ if (endpointsToHint == null)-->Line_34 $$ endpointsToHint = new ArrayList(Iterables.size(targets))[ CD ]
