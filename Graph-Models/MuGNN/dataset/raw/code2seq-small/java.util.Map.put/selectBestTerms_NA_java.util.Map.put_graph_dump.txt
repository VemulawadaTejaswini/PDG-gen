Line_22 $$ int freq = getTermFreq(termsEnum, docsEnum)-->Line_30 $$ float score = computeScore(docFreq, freq, numDocs)[ FD ]
Line_17 $$ while (termsEnum.next() != null) -->Line_26 $$ long docFreq = getTermStatistics(topLevelTermsEnum, term).docFreq()[ CD ]
Line_33 $$ ScoreTerm scoreTerm-->Line_36 $$ scoreTerms.put(new Term(scoreTerm.field, scoreTerm.word), scoreTerm)[ FD ]
Line_11 $$ topLevelTerms = terms-->Line_13 $$ long numDocs = getDocCount(fieldName, topLevelTerms)[ FD ]
Line_2 $$ public void selectBestTerms() throws IOException -->Line_3 $$ PostingsEnum docsEnum = null[ CD ]
Line_18 $$ BytesRef termBytesRef = termsEnum.term()-->Line_20 $$ assert foundTerm : "Term: " + termBytesRef.utf8ToString() + " not found!"[ FD ]
Line_8 $$ Terms terms = fields.terms(fieldName)-->Line_14 $$ ScoreTermsQueue queue = new ScoreTermsQueue(Math.min(maxNumTerms, (int) terms.size()))[ FD ]
Line_18 $$ BytesRef termBytesRef = termsEnum.term()-->Line_19 $$ boolean foundTerm = topLevelTermsEnum.seekExact(termBytesRef)[ FD ]
Line_13 $$ long numDocs = getDocCount(fieldName, topLevelTerms)-->Line_30 $$ float score = computeScore(docFreq, freq, numDocs)[ FD ]
Line_4 $$ for (String fieldName : fields) -->Line_8 $$ Terms terms = fields.terms(fieldName)[ FD ]
Line_34 $$ int count = 0-->Line_39 $$ sizes.put(fieldName, count)[ FD ]
Line_17 $$ while (termsEnum.next() != null) -->Line_30 $$ float score = computeScore(docFreq, freq, numDocs)[ CD ]
Line_4 $$ for (String fieldName : fields) -->Line_39 $$ sizes.put(fieldName, count)[ FD ]
Line_9 $$ Terms topLevelTerms = topLevelFields.terms(fieldName)-->Line_10 $$ if (topLevelTerms == null) [ FD ]
Line_26 $$ long docFreq = getTermStatistics(topLevelTermsEnum, term).docFreq()-->Line_30 $$ float score = computeScore(docFreq, freq, numDocs)[ FD ]
Line_34 $$ int count = 0-->Line_37 $$ count++[ FD ]
Line_17 $$ while (termsEnum.next() != null) -->Line_23 $$ if (isNoise(term.bytes().utf8ToString(), freq)) [ CD ]
Line_4 $$ for (String fieldName : fields) -->Line_5 $$ if ((selectedFields != null) && (!selectedFields.contains(fieldName))) [ FD ]
Line_35 $$ while ((scoreTerm = queue.pop()) != null) -->Line_36 $$ scoreTerms.put(new Term(scoreTerm.field, scoreTerm.word), scoreTerm)[ CD ]
Line_4 $$ for (String fieldName : fields) -->Line_13 $$ long numDocs = getDocCount(fieldName, topLevelTerms)[ FD ]
Line_35 $$ while ((scoreTerm = queue.pop()) != null) -->Line_37 $$ count++[ CD ]
Line_17 $$ while (termsEnum.next() != null) -->Line_21 $$ Term term = new Term(fieldName, termBytesRef)[ CD ]
Line_22 $$ int freq = getTermFreq(termsEnum, docsEnum)-->Line_23 $$ if (isNoise(term.bytes().utf8ToString(), freq)) [ FD ]
Line_17 $$ while (termsEnum.next() != null) -->Line_31 $$ queue.addOrUpdate(new ScoreTerm(term.field(), term.bytes().utf8ToString(), score))[ CD ]
Line_17 $$ while (termsEnum.next() != null) -->Line_18 $$ BytesRef termBytesRef = termsEnum.term()[ CD ]
Line_21 $$ Term term = new Term(fieldName, termBytesRef)-->Line_31 $$ queue.addOrUpdate(new ScoreTerm(term.field(), term.bytes().utf8ToString(), score))[ FD ]
Line_17 $$ while (termsEnum.next() != null) -->Line_19 $$ boolean foundTerm = topLevelTermsEnum.seekExact(termBytesRef)[ CD ]
Line_4 $$ for (String fieldName : fields) -->Line_9 $$ Terms topLevelTerms = topLevelFields.terms(fieldName)[ FD ]
Line_16 $$ TermsEnum topLevelTermsEnum = topLevelTerms.iterator()-->Line_19 $$ boolean foundTerm = topLevelTermsEnum.seekExact(termBytesRef)[ FD ]
Line_3 $$ PostingsEnum docsEnum = null-->Line_22 $$ int freq = getTermFreq(termsEnum, docsEnum)[ FD ]
Line_17 $$ while (termsEnum.next() != null) -->Line_27 $$ if (!isAccepted(docFreq)) [ CD ]
Line_15 $$ TermsEnum termsEnum = terms.iterator()-->Line_22 $$ int freq = getTermFreq(termsEnum, docsEnum)[ FD ]
Line_15 $$ TermsEnum termsEnum = terms.iterator()-->Line_17 $$ while (termsEnum.next() != null) [ FD ]
Line_9 $$ Terms topLevelTerms = topLevelFields.terms(fieldName)-->Line_13 $$ long numDocs = getDocCount(fieldName, topLevelTerms)[ FD ]
Line_21 $$ Term term = new Term(fieldName, termBytesRef)-->Line_23 $$ if (isNoise(term.bytes().utf8ToString(), freq)) [ FD ]
Line_9 $$ Terms topLevelTerms = topLevelFields.terms(fieldName)-->Line_16 $$ TermsEnum topLevelTermsEnum = topLevelTerms.iterator()[ FD ]
Line_17 $$ while (termsEnum.next() != null) -->Line_22 $$ int freq = getTermFreq(termsEnum, docsEnum)[ CD ]
Line_14 $$ ScoreTermsQueue queue = new ScoreTermsQueue(Math.min(maxNumTerms, (int) terms.size()))-->Line_31 $$ queue.addOrUpdate(new ScoreTerm(term.field(), term.bytes().utf8ToString(), score))[ FD ]
Line_14 $$ ScoreTermsQueue queue = new ScoreTermsQueue(Math.min(maxNumTerms, (int) terms.size()))-->Line_35 $$ while ((scoreTerm = queue.pop()) != null) [ FD ]
Line_26 $$ long docFreq = getTermStatistics(topLevelTermsEnum, term).docFreq()-->Line_27 $$ if (!isAccepted(docFreq)) [ FD ]
Line_11 $$ topLevelTerms = terms-->Line_16 $$ TermsEnum topLevelTermsEnum = topLevelTerms.iterator()[ FD ]
Line_35 $$ while ((scoreTerm = queue.pop()) != null) -->Line_36 $$ scoreTerms.put(new Term(scoreTerm.field, scoreTerm.word), scoreTerm)[ FD ]
Line_8 $$ Terms terms = fields.terms(fieldName)-->Line_15 $$ TermsEnum termsEnum = terms.iterator()[ FD ]
Line_10 $$ if (topLevelTerms == null) -->Line_11 $$ topLevelTerms = terms[ CD ]
Line_21 $$ Term term = new Term(fieldName, termBytesRef)-->Line_26 $$ long docFreq = getTermStatistics(topLevelTermsEnum, term).docFreq()[ FD ]
Line_33 $$ ScoreTerm scoreTerm-->Line_35 $$ while ((scoreTerm = queue.pop()) != null) [ FD ]
Line_8 $$ Terms terms = fields.terms(fieldName)-->Line_11 $$ topLevelTerms = terms[ FD ]
Line_16 $$ TermsEnum topLevelTermsEnum = topLevelTerms.iterator()-->Line_26 $$ long docFreq = getTermStatistics(topLevelTermsEnum, term).docFreq()[ FD ]
Line_9 $$ Terms topLevelTerms = topLevelFields.terms(fieldName)-->Line_11 $$ topLevelTerms = terms[ FD ]
Line_15 $$ TermsEnum termsEnum = terms.iterator()-->Line_18 $$ BytesRef termBytesRef = termsEnum.term()[ FD ]
