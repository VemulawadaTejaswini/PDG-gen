Line_4 $$ Map<String, String> localOptions = new HashMap()-->Line_6 $$ getCurrentColumnFamilyStore().setCompactionParameters(localOptions)[ FD ]
Line_2 $$ public void testSetLocalCompactionStrategy() throws Throwable -->Line_3 $$ createTable("CREATE TABLE %s (id text PRIMARY KEY)")[ CD ]
Line_2 $$ public void testSetLocalCompactionStrategy() throws Throwable -->Line_4 $$ Map<String, String> localOptions = new HashMap()[ CD ]
Line_2 $$ public void testSetLocalCompactionStrategy() throws Throwable -->Line_7 $$ assertTrue(verifyStrategies(getCurrentColumnFamilyStore().getCompactionStrategyManager(), DateTieredCompactionStrategy.class))[ CD ]
Line_2 $$ public void testSetLocalCompactionStrategy() throws Throwable -->Line_11 $$ assertTrue(verifyStrategies(getCurrentColumnFamilyStore().getCompactionStrategyManager(), SizeTieredCompactionStrategy.class))[ CD ]
Line_4 $$ Map<String, String> localOptions = new HashMap()-->Line_5 $$ localOptions.put("class", "DateTieredCompactionStrategy")[ FD ]
Line_2 $$ public void testSetLocalCompactionStrategy() throws Throwable -->Line_9 $$ assertTrue(verifyStrategies(getCurrentColumnFamilyStore().getCompactionStrategyManager(), DateTieredCompactionStrategy.class))[ CD ]
Line_2 $$ public void testSetLocalCompactionStrategy() throws Throwable -->Line_8 $$ execute("ALTER TABLE %s WITH gc_grace_seconds = 1000")[ CD ]
Line_2 $$ public void testSetLocalCompactionStrategy() throws Throwable -->Line_6 $$ getCurrentColumnFamilyStore().setCompactionParameters(localOptions)[ CD ]
Line_2 $$ public void testSetLocalCompactionStrategy() throws Throwable -->Line_5 $$ localOptions.put("class", "DateTieredCompactionStrategy")[ CD ]
Line_2 $$ public void testSetLocalCompactionStrategy() throws Throwable -->Line_10 $$ execute("ALTER TABLE %s WITH compaction = [ CD ]
