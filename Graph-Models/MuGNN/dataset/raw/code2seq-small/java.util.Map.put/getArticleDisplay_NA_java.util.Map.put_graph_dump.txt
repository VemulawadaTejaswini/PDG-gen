Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_11 $$ Map<String, String> tokens = JournalUtil.getTokens(article.getGroupId(), portletRequestModel, themeDisplay)[ CD ]
Line_78 $$ ddmTemplate = ddmTemplateLocalService.getTemplate(PortalUtil.getSiteGroupId(article.getGroupId()), classNameLocalService.getClassNameId(DDMStructure.class), defaultDDMTemplateKey)-->Line_83 $$ tokens.put("ddm_template_key", String.valueOf(ddmTemplate.getTemplateKey()))[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_25 $$ String defaultDDMTemplateKey = article.getDDMTemplateKey()[ FD ]
Line_14 $$ Group companyGroup = groupLocalService.getCompanyGroup(article.getCompanyId())-->Line_73 $$ if (companyGroup.getGroupId() == ddmTemplate.getGroupId()) [ FD ]
Line_89 $$ content = JournalUtil.transform(themeDisplay, tokens, viewMode, languageId, document, portletRequestModel, script, langType, propagateException)-->Line_96 $$ content = pieces[page - 1][ FD ]
Line_25 $$ String defaultDDMTemplateKey = article.getDDMTemplateKey()-->Line_78 $$ ddmTemplate = ddmTemplateLocalService.getTemplate(PortalUtil.getSiteGroupId(article.getGroupId()), classNameLocalService.getClassNameId(DDMStructure.class), defaultDDMTemplateKey)[ FD ]
Line_12 $$ if ((themeDisplay == null) && (portletRequestModel == null)) -->Line_15 $$ tokens.put("article_group_id", String.valueOf(article.getGroupId()))[ CD ]
Line_33 $$ if (!pages.isEmpty()) -->Line_43 $$ Element pageElement = null[ CD ]
Line_52 $$ numberOfPages = pages.size()-->Line_60 $$ numberOfPages = pages.size()[ FD ]
Line_4 $$ if (page < 1) -->Line_5 $$ page = 1[ CD ]
Line_57 $$ pageElement = pages.get(page - 1)-->Line_58 $$ document = SAXReaderUtil.createDocument(pageElement)[ FD ]
Line_11 $$ Map<String, String> tokens = JournalUtil.getTokens(article.getGroupId(), portletRequestModel, themeDisplay)-->Line_24 $$ tokens.put("structure_id", article.getDDMStructureKey())[ FD ]
Line_93 $$ if (page > pieces.length) -->Line_94 $$ page = 1[ CD ]
Line_92 $$ if (pieces.length > 1) -->Line_96 $$ content = pieces[page - 1][ CD ]
Line_55 $$ page = 1-->Line_93 $$ if (page > pieces.length) [ FD ]
Line_58 $$ document = SAXReaderUtil.createDocument(pageElement)-->Line_59 $$ rootElement = document.getRootElement()[ FD ]
Line_49 $$ if (pageElement != null) -->Line_59 $$ rootElement = document.getRootElement()[ CD ]
Line_40 $$ targetPage = values[0]-->Line_44 $$ if (Validator.isNotNull(targetPage)) [ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_27 $$ ddmTemplateKey = defaultDDMTemplateKey[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_77 $$ if (!defaultDDMTemplateKey.equals(ddmTemplateKey)) [ FD ]
Line_43 $$ Element pageElement = null-->Line_50 $$ document = SAXReaderUtil.createDocument(pageElement)[ FD ]
Line_49 $$ if (pageElement != null) -->Line_58 $$ document = SAXReaderUtil.createDocument(pageElement)[ CD ]
Line_31 $$ Element rootElement = document.getRootElement()-->Line_59 $$ rootElement = document.getRootElement()[ FD ]
Line_55 $$ page = 1-->Line_94 $$ page = 1[ FD ]
Line_32 $$ List<Element> pages = rootElement.elements("page")-->Line_57 $$ pageElement = pages.get(page - 1)[ FD ]
Line_37 $$ if (parameters != null) -->Line_39 $$ if ((values != null) && (values.length > 0)) [ CD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_13 $$ tokens.put("company_id", String.valueOf(article.getCompanyId()))[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_72 $$ Group companyGroup = groupLocalService.getCompanyGroup(article.getCompanyId())[ FD ]
Line_49 $$ if (pageElement != null) -->Line_61 $$ paginate = true[ CD ]
Line_27 $$ ddmTemplateKey = defaultDDMTemplateKey-->Line_85 $$ tokens.put("template_id", ddmTemplateKey)[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_19 $$ tokens.put(TemplateConstants.CLASS_NAME_ID, String.valueOf(classNameLocalService.getClassNameId(DDMStructure.class)))[ CD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_23 $$ tokens.put("ddm_structure_id", String.valueOf(ddmStructure.getStructureId()))[ CD ]
Line_49 $$ if (pageElement != null) -->Line_51 $$ rootElement = document.getRootElement()[ CD ]
Line_30 $$ document = document.clone()-->Line_50 $$ document = SAXReaderUtil.createDocument(pageElement)[ FD ]
Line_7 $$ int numberOfPages = 1-->Line_52 $$ numberOfPages = pages.size()[ FD ]
Line_43 $$ Element pageElement = null-->Line_58 $$ document = SAXReaderUtil.createDocument(pageElement)[ FD ]
Line_5 $$ page = 1-->Line_93 $$ if (page > pieces.length) [ FD ]
Line_5 $$ page = 1-->Line_94 $$ page = 1[ FD ]
Line_49 $$ if (pageElement != null) -->Line_57 $$ pageElement = pages.get(page - 1)[ CD ]
Line_50 $$ document = SAXReaderUtil.createDocument(pageElement)-->Line_58 $$ document = SAXReaderUtil.createDocument(pageElement)[ FD ]
Line_69 $$ DDMTemplate ddmTemplate = null-->Line_71 $$ ddmTemplate = ddmTemplateLocalService.getTemplate(PortalUtil.getSiteGroupId(article.getGroupId()), classNameLocalService.getClassNameId(DDMStructure.class), ddmTemplateKey, true)[ FD ]
Line_33 $$ if (!pages.isEmpty()) -->Line_36 $$ Map<String, String[]> parameters = portletRequestModel.getParameters()[ CD ]
Line_90 $$ if (!pageFlow) -->Line_92 $$ if (pieces.length > 1) [ CD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_14 $$ Group companyGroup = groupLocalService.getCompanyGroup(article.getCompanyId())[ FD ]
Line_78 $$ ddmTemplate = ddmTemplateLocalService.getTemplate(PortalUtil.getSiteGroupId(article.getGroupId()), classNameLocalService.getClassNameId(DDMStructure.class), defaultDDMTemplateKey)-->Line_88 $$ cacheable = ddmTemplate.isCacheable()[ FD ]
Line_69 $$ DDMTemplate ddmTemplate = null-->Line_73 $$ if (companyGroup.getGroupId() == ddmTemplate.getGroupId()) [ FD ]
Line_49 $$ if (pageElement != null) -->Line_54 $$ if (page > pages.size()) [ CD ]
Line_52 $$ numberOfPages = pages.size()-->Line_97 $$ numberOfPages = pieces.length[ FD ]
Line_30 $$ document = document.clone()-->Line_31 $$ Element rootElement = document.getRootElement()[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_78 $$ ddmTemplate = ddmTemplateLocalService.getTemplate(PortalUtil.getSiteGroupId(article.getGroupId()), classNameLocalService.getClassNameId(DDMStructure.class), defaultDDMTemplateKey)[ FD ]
Line_43 $$ Element pageElement = null-->Line_49 $$ if (pageElement != null) [ FD ]
Line_33 $$ if (!pages.isEmpty()) -->Line_49 $$ if (pageElement != null) [ CD ]
Line_10 $$ boolean cacheable = true-->Line_88 $$ cacheable = ddmTemplate.isCacheable()[ FD ]
Line_35 $$ String targetPage = null-->Line_40 $$ targetPage = values[0][ FD ]
Line_29 $$ Document document = article.getDocument()-->Line_50 $$ document = SAXReaderUtil.createDocument(pageElement)[ FD ]
Line_47 $$ pageElement = (Element) xPathSelector.selectSingleNode(document)-->Line_58 $$ document = SAXReaderUtil.createDocument(pageElement)[ FD ]
Line_92 $$ if (pieces.length > 1) -->Line_98 $$ paginate = true[ CD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_104 $$ return new JournalArticleDisplayImpl(article.getCompanyId(), article.getId(), article.getResourcePrimKey(), article.getGroupId(), article.getUserId(), article.getArticleId(), article.getVersion(), article.getTitle(languageId), article.getUrlTitle(), article.getDescription(languageId), article.getAvailableLanguageIds(), content, article.getDDMStructureKey(), ddmTemplateKey, article.isSmallImage(), article.getSmallImageId(), article.getSmallImageURL(), numberOfPages, page, paginate, cacheable)[ CD ]
Line_77 $$ if (!defaultDDMTemplateKey.equals(ddmTemplateKey)) -->Line_78 $$ ddmTemplate = ddmTemplateLocalService.getTemplate(PortalUtil.getSiteGroupId(article.getGroupId()), classNameLocalService.getClassNameId(DDMStructure.class), defaultDDMTemplateKey)[ CD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_21 $$ DDMStructure ddmStructure = article.getDDMStructure()[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_67 $$ _log.debug("Transforming " + article.getArticleId() + " " + article.getVersion() + " " + languageId)[ FD ]
Line_25 $$ String defaultDDMTemplateKey = article.getDDMTemplateKey()-->Line_77 $$ if (!defaultDDMTemplateKey.equals(ddmTemplateKey)) [ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_20 $$ tokens.put("article_resource_pk", String.valueOf(article.getResourcePrimKey()))[ CD ]
Line_92 $$ if (pieces.length > 1) -->Line_97 $$ numberOfPages = pieces.length[ CD ]
Line_54 $$ if (page > pages.size()) -->Line_55 $$ page = 1[ CD ]
Line_30 $$ document = document.clone()-->Line_51 $$ rootElement = document.getRootElement()[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_7 $$ int numberOfPages = 1[ CD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_55 $$ page = 1[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_3 $$ String content = null[ CD ]
Line_36 $$ Map<String, String[]> parameters = portletRequestModel.getParameters()-->Line_38 $$ String[] values = parameters.get("targetPage")[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_89 $$ content = JournalUtil.transform(themeDisplay, tokens, viewMode, languageId, document, portletRequestModel, script, langType, propagateException)[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_32 $$ List<Element> pages = rootElement.elements("page")[ CD ]
Line_27 $$ ddmTemplateKey = defaultDDMTemplateKey-->Line_77 $$ if (!defaultDDMTemplateKey.equals(ddmTemplateKey)) [ FD ]
Line_11 $$ Map<String, String> tokens = JournalUtil.getTokens(article.getGroupId(), portletRequestModel, themeDisplay)-->Line_20 $$ tokens.put("article_resource_pk", String.valueOf(article.getResourcePrimKey()))[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_10 $$ boolean cacheable = true[ CD ]
Line_9 $$ boolean pageFlow = false-->Line_34 $$ pageFlow = true[ FD ]
Line_90 $$ if (!pageFlow) -->Line_91 $$ String[] pieces = StringUtil.split(content, JournalServiceConfigurationValues.JOURNAL_ARTICLE_TOKEN_PAGE_BREAK)[ CD ]
Line_49 $$ if (pageElement != null) -->Line_52 $$ numberOfPages = pages.size()[ CD ]
Line_5 $$ page = 1-->Line_55 $$ page = 1[ FD ]
Line_3 $$ String content = null-->Line_89 $$ content = JournalUtil.transform(themeDisplay, tokens, viewMode, languageId, document, portletRequestModel, script, langType, propagateException)[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_21 $$ DDMStructure ddmStructure = article.getDDMStructure()[ CD ]
Line_71 $$ ddmTemplate = ddmTemplateLocalService.getTemplate(PortalUtil.getSiteGroupId(article.getGroupId()), classNameLocalService.getClassNameId(DDMStructure.class), ddmTemplateKey, true)-->Line_73 $$ if (companyGroup.getGroupId() == ddmTemplate.getGroupId()) [ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_64 $$ JournalUtil.addAllReservedEls(rootElement, tokens, article, languageId, themeDisplay)[ CD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_29 $$ Document document = article.getDocument()[ CD ]
Line_71 $$ ddmTemplate = ddmTemplateLocalService.getTemplate(PortalUtil.getSiteGroupId(article.getGroupId()), classNameLocalService.getClassNameId(DDMStructure.class), ddmTemplateKey, true)-->Line_86 $$ String script = ddmTemplate.getScript()[ FD ]
Line_46 $$ XPath xPathSelector = SAXReaderUtil.createXPath("/root/page[@id = " + targetPage + "]")-->Line_47 $$ pageElement = (Element) xPathSelector.selectSingleNode(document)[ FD ]
Line_61 $$ paginate = true-->Line_98 $$ paginate = true[ FD ]
Line_11 $$ Map<String, String> tokens = JournalUtil.getTokens(article.getGroupId(), portletRequestModel, themeDisplay)-->Line_89 $$ content = JournalUtil.transform(themeDisplay, tokens, viewMode, languageId, document, portletRequestModel, script, langType, propagateException)[ FD ]
Line_33 $$ if (!pages.isEmpty()) -->Line_37 $$ if (parameters != null) [ CD ]
Line_44 $$ if (Validator.isNotNull(targetPage)) -->Line_46 $$ XPath xPathSelector = SAXReaderUtil.createXPath("/root/page[@id = " + targetPage + "]")[ CD ]
Line_12 $$ if ((themeDisplay == null) && (portletRequestModel == null)) -->Line_14 $$ Group companyGroup = groupLocalService.getCompanyGroup(article.getCompanyId())[ CD ]
Line_47 $$ pageElement = (Element) xPathSelector.selectSingleNode(document)-->Line_57 $$ pageElement = pages.get(page - 1)[ FD ]
Line_66 $$ if (_log.isDebugEnabled()) -->Line_67 $$ _log.debug("Transforming " + article.getArticleId() + " " + article.getVersion() + " " + languageId)[ CD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_85 $$ tokens.put("template_id", ddmTemplateKey)[ FD ]
Line_30 $$ document = document.clone()-->Line_89 $$ content = JournalUtil.transform(themeDisplay, tokens, viewMode, languageId, document, portletRequestModel, script, langType, propagateException)[ FD ]
Line_30 $$ document = document.clone()-->Line_58 $$ document = SAXReaderUtil.createDocument(pageElement)[ FD ]
Line_69 $$ DDMTemplate ddmTemplate = null-->Line_83 $$ tokens.put("ddm_template_key", String.valueOf(ddmTemplate.getTemplateKey()))[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_64 $$ JournalUtil.addAllReservedEls(rootElement, tokens, article, languageId, themeDisplay)[ FD ]
Line_7 $$ int numberOfPages = 1-->Line_60 $$ numberOfPages = pages.size()[ FD ]
Line_71 $$ ddmTemplate = ddmTemplateLocalService.getTemplate(PortalUtil.getSiteGroupId(article.getGroupId()), classNameLocalService.getClassNameId(DDMStructure.class), ddmTemplateKey, true)-->Line_88 $$ cacheable = ddmTemplate.isCacheable()[ FD ]
Line_8 $$ boolean paginate = false-->Line_98 $$ paginate = true[ FD ]
Line_71 $$ ddmTemplate = ddmTemplateLocalService.getTemplate(PortalUtil.getSiteGroupId(article.getGroupId()), classNameLocalService.getClassNameId(DDMStructure.class), ddmTemplateKey, true)-->Line_87 $$ String langType = ddmTemplate.getLanguage()[ FD ]
Line_29 $$ Document document = article.getDocument()-->Line_51 $$ rootElement = document.getRootElement()[ FD ]
Line_29 $$ Document document = article.getDocument()-->Line_89 $$ content = JournalUtil.transform(themeDisplay, tokens, viewMode, languageId, document, portletRequestModel, script, langType, propagateException)[ FD ]
Line_29 $$ Document document = article.getDocument()-->Line_31 $$ Element rootElement = document.getRootElement()[ FD ]
Line_8 $$ boolean paginate = false-->Line_61 $$ paginate = true[ FD ]
Line_27 $$ ddmTemplateKey = defaultDDMTemplateKey-->Line_71 $$ ddmTemplate = ddmTemplateLocalService.getTemplate(PortalUtil.getSiteGroupId(article.getGroupId()), classNameLocalService.getClassNameId(DDMStructure.class), ddmTemplateKey, true)[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_9 $$ boolean pageFlow = false[ CD ]
Line_12 $$ if ((themeDisplay == null) && (portletRequestModel == null)) -->Line_13 $$ tokens.put("company_id", String.valueOf(article.getCompanyId()))[ CD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_33 $$ if (!pages.isEmpty()) [ CD ]
Line_78 $$ ddmTemplate = ddmTemplateLocalService.getTemplate(PortalUtil.getSiteGroupId(article.getGroupId()), classNameLocalService.getClassNameId(DDMStructure.class), defaultDDMTemplateKey)-->Line_84 $$ tokens.put("ddm_template_id", String.valueOf(ddmTemplate.getTemplateId()))[ FD ]
Line_11 $$ Map<String, String> tokens = JournalUtil.getTokens(article.getGroupId(), portletRequestModel, themeDisplay)-->Line_16 $$ tokens.put("company_group_id", String.valueOf(companyGroup.getGroupId()))[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_71 $$ ddmTemplate = ddmTemplateLocalService.getTemplate(PortalUtil.getSiteGroupId(article.getGroupId()), classNameLocalService.getClassNameId(DDMStructure.class), ddmTemplateKey, true)[ FD ]
Line_43 $$ Element pageElement = null-->Line_47 $$ pageElement = (Element) xPathSelector.selectSingleNode(document)[ FD ]
Line_50 $$ document = SAXReaderUtil.createDocument(pageElement)-->Line_89 $$ content = JournalUtil.transform(themeDisplay, tokens, viewMode, languageId, document, portletRequestModel, script, langType, propagateException)[ FD ]
Line_35 $$ String targetPage = null-->Line_45 $$ targetPage = HtmlUtil.escapeXPathAttribute(targetPage)[ FD ]
Line_35 $$ String targetPage = null-->Line_44 $$ if (Validator.isNotNull(targetPage)) [ FD ]
Line_78 $$ ddmTemplate = ddmTemplateLocalService.getTemplate(PortalUtil.getSiteGroupId(article.getGroupId()), classNameLocalService.getClassNameId(DDMStructure.class), defaultDDMTemplateKey)-->Line_87 $$ String langType = ddmTemplate.getLanguage()[ FD ]
Line_32 $$ List<Element> pages = rootElement.elements("page")-->Line_52 $$ numberOfPages = pages.size()[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_29 $$ Document document = article.getDocument()[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_24 $$ tokens.put("structure_id", article.getDDMStructureKey())[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_93 $$ if (page > pieces.length) [ FD ]
Line_58 $$ document = SAXReaderUtil.createDocument(pageElement)-->Line_89 $$ content = JournalUtil.transform(themeDisplay, tokens, viewMode, languageId, document, portletRequestModel, script, langType, propagateException)[ FD ]
Line_60 $$ numberOfPages = pages.size()-->Line_97 $$ numberOfPages = pieces.length[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_4 $$ if (page < 1) [ CD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_94 $$ page = 1[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_8 $$ boolean paginate = false[ CD ]
Line_11 $$ Map<String, String> tokens = JournalUtil.getTokens(article.getGroupId(), portletRequestModel, themeDisplay)-->Line_85 $$ tokens.put("template_id", ddmTemplateKey)[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_26 $$ if (Validator.isNull(ddmTemplateKey)) [ CD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_25 $$ String defaultDDMTemplateKey = article.getDDMTemplateKey()[ CD ]
Line_69 $$ DDMTemplate ddmTemplate = null-->Line_88 $$ cacheable = ddmTemplate.isCacheable()[ FD ]
Line_44 $$ if (Validator.isNotNull(targetPage)) -->Line_47 $$ pageElement = (Element) xPathSelector.selectSingleNode(document)[ CD ]
Line_92 $$ if (pieces.length > 1) -->Line_93 $$ if (page > pieces.length) [ CD ]
Line_25 $$ String defaultDDMTemplateKey = article.getDDMTemplateKey()-->Line_27 $$ ddmTemplateKey = defaultDDMTemplateKey[ FD ]
Line_31 $$ Element rootElement = document.getRootElement()-->Line_51 $$ rootElement = document.getRootElement()[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_104 $$ return new JournalArticleDisplayImpl(article.getCompanyId(), article.getId(), article.getResourcePrimKey(), article.getGroupId(), article.getUserId(), article.getArticleId(), article.getVersion(), article.getTitle(languageId), article.getUrlTitle(), article.getDescription(languageId), article.getAvailableLanguageIds(), content, article.getDDMStructureKey(), ddmTemplateKey, article.isSmallImage(), article.getSmallImageId(), article.getSmallImageURL(), numberOfPages, page, paginate, cacheable)[ FD ]
Line_11 $$ Map<String, String> tokens = JournalUtil.getTokens(article.getGroupId(), portletRequestModel, themeDisplay)-->Line_22 $$ tokens.put("ddm_structure_key", String.valueOf(ddmStructure.getStructureKey()))[ FD ]
Line_51 $$ rootElement = document.getRootElement()-->Line_64 $$ JournalUtil.addAllReservedEls(rootElement, tokens, article, languageId, themeDisplay)[ FD ]
Line_11 $$ Map<String, String> tokens = JournalUtil.getTokens(article.getGroupId(), portletRequestModel, themeDisplay)-->Line_19 $$ tokens.put(TemplateConstants.CLASS_NAME_ID, String.valueOf(classNameLocalService.getClassNameId(DDMStructure.class)))[ FD ]
Line_11 $$ Map<String, String> tokens = JournalUtil.getTokens(article.getGroupId(), portletRequestModel, themeDisplay)-->Line_23 $$ tokens.put("ddm_structure_id", String.valueOf(ddmStructure.getStructureId()))[ FD ]
Line_49 $$ if (pageElement != null) -->Line_50 $$ document = SAXReaderUtil.createDocument(pageElement)[ CD ]
Line_37 $$ if (parameters != null) -->Line_38 $$ String[] values = parameters.get("targetPage")[ CD ]
Line_32 $$ List<Element> pages = rootElement.elements("page")-->Line_33 $$ if (!pages.isEmpty()) [ FD ]
Line_11 $$ Map<String, String> tokens = JournalUtil.getTokens(article.getGroupId(), portletRequestModel, themeDisplay)-->Line_15 $$ tokens.put("article_group_id", String.valueOf(article.getGroupId()))[ FD ]
Line_33 $$ if (!pages.isEmpty()) -->Line_44 $$ if (Validator.isNotNull(targetPage)) [ CD ]
Line_50 $$ document = SAXReaderUtil.createDocument(pageElement)-->Line_51 $$ rootElement = document.getRootElement()[ FD ]
Line_87 $$ String langType = ddmTemplate.getLanguage()-->Line_89 $$ content = JournalUtil.transform(themeDisplay, tokens, viewMode, languageId, document, portletRequestModel, script, langType, propagateException)[ FD ]
Line_71 $$ ddmTemplate = ddmTemplateLocalService.getTemplate(PortalUtil.getSiteGroupId(article.getGroupId()), classNameLocalService.getClassNameId(DDMStructure.class), ddmTemplateKey, true)-->Line_78 $$ ddmTemplate = ddmTemplateLocalService.getTemplate(PortalUtil.getSiteGroupId(article.getGroupId()), classNameLocalService.getClassNameId(DDMStructure.class), defaultDDMTemplateKey)[ FD ]
Line_26 $$ if (Validator.isNull(ddmTemplateKey)) -->Line_27 $$ ddmTemplateKey = defaultDDMTemplateKey[ CD ]
Line_34 $$ pageFlow = true-->Line_90 $$ if (!pageFlow) [ FD ]
Line_31 $$ Element rootElement = document.getRootElement()-->Line_32 $$ List<Element> pages = rootElement.elements("page")[ FD ]
Line_11 $$ Map<String, String> tokens = JournalUtil.getTokens(article.getGroupId(), portletRequestModel, themeDisplay)-->Line_13 $$ tokens.put("company_id", String.valueOf(article.getCompanyId()))[ FD ]
Line_21 $$ DDMStructure ddmStructure = article.getDDMStructure()-->Line_23 $$ tokens.put("ddm_structure_id", String.valueOf(ddmStructure.getStructureId()))[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_22 $$ tokens.put("ddm_structure_key", String.valueOf(ddmStructure.getStructureKey()))[ CD ]
Line_47 $$ pageElement = (Element) xPathSelector.selectSingleNode(document)-->Line_49 $$ if (pageElement != null) [ FD ]
Line_39 $$ if ((values != null) && (values.length > 0)) -->Line_40 $$ targetPage = values[0][ CD ]
Line_89 $$ content = JournalUtil.transform(themeDisplay, tokens, viewMode, languageId, document, portletRequestModel, script, langType, propagateException)-->Line_91 $$ String[] pieces = StringUtil.split(content, JournalServiceConfigurationValues.JOURNAL_ARTICLE_TOKEN_PAGE_BREAK)[ FD ]
Line_11 $$ Map<String, String> tokens = JournalUtil.getTokens(article.getGroupId(), portletRequestModel, themeDisplay)-->Line_64 $$ JournalUtil.addAllReservedEls(rootElement, tokens, article, languageId, themeDisplay)[ FD ]
Line_12 $$ if ((themeDisplay == null) && (portletRequestModel == null)) -->Line_16 $$ tokens.put("company_group_id", String.valueOf(companyGroup.getGroupId()))[ CD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_31 $$ Element rootElement = document.getRootElement()[ CD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_17 $$ tokens.put("group_id", String.valueOf(article.getGroupId()))[ FD ]
Line_69 $$ DDMTemplate ddmTemplate = null-->Line_84 $$ tokens.put("ddm_template_id", String.valueOf(ddmTemplate.getTemplateId()))[ FD ]
Line_86 $$ String script = ddmTemplate.getScript()-->Line_89 $$ content = JournalUtil.transform(themeDisplay, tokens, viewMode, languageId, document, portletRequestModel, script, langType, propagateException)[ FD ]
Line_51 $$ rootElement = document.getRootElement()-->Line_59 $$ rootElement = document.getRootElement()[ FD ]
Line_30 $$ document = document.clone()-->Line_59 $$ rootElement = document.getRootElement()[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_54 $$ if (page > pages.size()) [ FD ]
Line_43 $$ Element pageElement = null-->Line_57 $$ pageElement = pages.get(page - 1)[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_11 $$ Map<String, String> tokens = JournalUtil.getTokens(article.getGroupId(), portletRequestModel, themeDisplay)[ FD ]
Line_30 $$ document = document.clone()-->Line_47 $$ pageElement = (Element) xPathSelector.selectSingleNode(document)[ FD ]
Line_71 $$ ddmTemplate = ddmTemplateLocalService.getTemplate(PortalUtil.getSiteGroupId(article.getGroupId()), classNameLocalService.getClassNameId(DDMStructure.class), ddmTemplateKey, true)-->Line_84 $$ tokens.put("ddm_template_id", String.valueOf(ddmTemplate.getTemplateId()))[ FD ]
Line_11 $$ Map<String, String> tokens = JournalUtil.getTokens(article.getGroupId(), portletRequestModel, themeDisplay)-->Line_84 $$ tokens.put("ddm_template_id", String.valueOf(ddmTemplate.getTemplateId()))[ FD ]
Line_14 $$ Group companyGroup = groupLocalService.getCompanyGroup(article.getCompanyId())-->Line_74 $$ tokens.put("company_group_id", String.valueOf(companyGroup.getGroupId()))[ FD ]
Line_32 $$ List<Element> pages = rootElement.elements("page")-->Line_54 $$ if (page > pages.size()) [ FD ]
Line_33 $$ if (!pages.isEmpty()) -->Line_34 $$ pageFlow = true[ CD ]
Line_33 $$ if (!pages.isEmpty()) -->Line_35 $$ String targetPage = null[ CD ]
Line_9 $$ boolean pageFlow = false-->Line_90 $$ if (!pageFlow) [ FD ]
Line_3 $$ String content = null-->Line_96 $$ content = pieces[page - 1][ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_36 $$ Map<String, String[]> parameters = portletRequestModel.getParameters()[ FD ]
Line_36 $$ Map<String, String[]> parameters = portletRequestModel.getParameters()-->Line_37 $$ if (parameters != null) [ FD ]
Line_29 $$ Document document = article.getDocument()-->Line_59 $$ rootElement = document.getRootElement()[ FD ]
Line_50 $$ document = SAXReaderUtil.createDocument(pageElement)-->Line_59 $$ rootElement = document.getRootElement()[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_30 $$ document = document.clone()[ CD ]
Line_71 $$ ddmTemplate = ddmTemplateLocalService.getTemplate(PortalUtil.getSiteGroupId(article.getGroupId()), classNameLocalService.getClassNameId(DDMStructure.class), ddmTemplateKey, true)-->Line_83 $$ tokens.put("ddm_template_key", String.valueOf(ddmTemplate.getTemplateKey()))[ FD ]
Line_21 $$ DDMStructure ddmStructure = article.getDDMStructure()-->Line_22 $$ tokens.put("ddm_structure_key", String.valueOf(ddmStructure.getStructureKey()))[ FD ]
Line_5 $$ page = 1-->Line_54 $$ if (page > pages.size()) [ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_26 $$ if (Validator.isNull(ddmTemplateKey)) [ FD ]
Line_29 $$ Document document = article.getDocument()-->Line_30 $$ document = document.clone()[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_4 $$ if (page < 1) [ FD ]
Line_69 $$ DDMTemplate ddmTemplate = null-->Line_78 $$ ddmTemplate = ddmTemplateLocalService.getTemplate(PortalUtil.getSiteGroupId(article.getGroupId()), classNameLocalService.getClassNameId(DDMStructure.class), defaultDDMTemplateKey)[ FD ]
Line_11 $$ Map<String, String> tokens = JournalUtil.getTokens(article.getGroupId(), portletRequestModel, themeDisplay)-->Line_74 $$ tokens.put("company_group_id", String.valueOf(companyGroup.getGroupId()))[ FD ]
Line_44 $$ if (Validator.isNotNull(targetPage)) -->Line_45 $$ targetPage = HtmlUtil.escapeXPathAttribute(targetPage)[ CD ]
Line_69 $$ DDMTemplate ddmTemplate = null-->Line_86 $$ String script = ddmTemplate.getScript()[ FD ]
Line_31 $$ Element rootElement = document.getRootElement()-->Line_64 $$ JournalUtil.addAllReservedEls(rootElement, tokens, article, languageId, themeDisplay)[ FD ]
Line_69 $$ DDMTemplate ddmTemplate = null-->Line_87 $$ String langType = ddmTemplate.getLanguage()[ FD ]
Line_12 $$ if ((themeDisplay == null) && (portletRequestModel == null)) -->Line_17 $$ tokens.put("group_id", String.valueOf(article.getGroupId()))[ CD ]
Line_78 $$ ddmTemplate = ddmTemplateLocalService.getTemplate(PortalUtil.getSiteGroupId(article.getGroupId()), classNameLocalService.getClassNameId(DDMStructure.class), defaultDDMTemplateKey)-->Line_86 $$ String script = ddmTemplate.getScript()[ FD ]
Line_49 $$ if (pageElement != null) -->Line_60 $$ numberOfPages = pages.size()[ CD ]
Line_29 $$ Document document = article.getDocument()-->Line_58 $$ document = SAXReaderUtil.createDocument(pageElement)[ FD ]
Line_11 $$ Map<String, String> tokens = JournalUtil.getTokens(article.getGroupId(), portletRequestModel, themeDisplay)-->Line_83 $$ tokens.put("ddm_template_key", String.valueOf(ddmTemplate.getTemplateKey()))[ FD ]
Line_3 $$ String content = null-->Line_91 $$ String[] pieces = StringUtil.split(content, JournalServiceConfigurationValues.JOURNAL_ARTICLE_TOKEN_PAGE_BREAK)[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_20 $$ tokens.put("article_resource_pk", String.valueOf(article.getResourcePrimKey()))[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_5 $$ page = 1[ FD ]
Line_59 $$ rootElement = document.getRootElement()-->Line_64 $$ JournalUtil.addAllReservedEls(rootElement, tokens, article, languageId, themeDisplay)[ FD ]
Line_32 $$ List<Element> pages = rootElement.elements("page")-->Line_60 $$ numberOfPages = pages.size()[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_15 $$ tokens.put("article_group_id", String.valueOf(article.getGroupId()))[ FD ]
Line_47 $$ pageElement = (Element) xPathSelector.selectSingleNode(document)-->Line_50 $$ document = SAXReaderUtil.createDocument(pageElement)[ FD ]
Line_7 $$ int numberOfPages = 1-->Line_97 $$ numberOfPages = pieces.length[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_12 $$ if ((themeDisplay == null) && (portletRequestModel == null)) [ CD ]
Line_11 $$ Map<String, String> tokens = JournalUtil.getTokens(article.getGroupId(), portletRequestModel, themeDisplay)-->Line_17 $$ tokens.put("group_id", String.valueOf(article.getGroupId()))[ FD ]
Line_2 $$ protected JournalArticleDisplay getArticleDisplay(JournalArticle article, String ddmTemplateKey, String viewMode, String languageId, int page, PortletRequestModel portletRequestModel, ThemeDisplay themeDisplay, boolean propagateException) throws PortalException -->Line_24 $$ tokens.put("structure_id", article.getDDMStructureKey())[ CD ]
Line_40 $$ targetPage = values[0]-->Line_45 $$ targetPage = HtmlUtil.escapeXPathAttribute(targetPage)[ FD ]
Line_29 $$ Document document = article.getDocument()-->Line_47 $$ pageElement = (Element) xPathSelector.selectSingleNode(document)[ FD ]
Line_73 $$ if (companyGroup.getGroupId() == ddmTemplate.getGroupId()) -->Line_74 $$ tokens.put("company_group_id", String.valueOf(companyGroup.getGroupId()))[ CD ]
Line_14 $$ Group companyGroup = groupLocalService.getCompanyGroup(article.getCompanyId())-->Line_16 $$ tokens.put("company_group_id", String.valueOf(companyGroup.getGroupId()))[ FD ]
