Line_22 $$ if (hasIdentifierProperty()) -->Line_26 $$ subclassPropertyAliases.put(idPropertyNames[i], new String[] [ CD ]
Line_31 $$ if (entityMetamodel.isPolymorphic()) -->Line_32 $$ subclassPropertyAliases.put(ENTITY_CLASS, new String[] [ CD ]
Line_12 $$ if (getIdentifierType().isComponentType()) -->Line_15 $$ String[] idAliases = getIdentifierAliases()[ CD ]
Line_8 $$ if (hasIdentifierProperty()) -->Line_10 $$ subclassPropertyColumnNames.put(getIdentifierPropertyName(), getIdentifierColumnNames())[ CD ]
Line_12 $$ if (getIdentifierType().isComponentType()) -->Line_17 $$ for (int i = 0; i < idPropertyNames.length; i++) [ CD ]
Line_18 $$ if (entityMetamodel.hasNonIdentifierPropertyNamedId()) -->Line_19 $$ subclassPropertyAliases.put(ENTITY_ID + "." + idPropertyNames[i], new String[] [ CD ]
Line_22 $$ if (hasIdentifierProperty()) -->Line_27 $$ subclassPropertyColumnNames.put(idPropertyNames[i], new String[] [ CD ]
Line_18 $$ if (entityMetamodel.hasNonIdentifierPropertyNamedId()) -->Line_20 $$ subclassPropertyColumnNames.put(ENTITY_ID + "." + getIdentifierPropertyName() + "." + idPropertyNames[i], new String[] [ CD ]
Line_13 $$ CompositeType componentId = (CompositeType) getIdentifierType()-->Line_14 $$ String[] idPropertyNames = componentId.getPropertyNames()[ FD ]
Line_2 $$ protected void initSubclassPropertyAliasesMap(PersistentClass model) throws MappingException -->Line_3 $$ internalInitSubclassPropertyAliasesMap(null, model.getSubclassPropertyClosureIterator())[ FD ]
Line_12 $$ if (getIdentifierType().isComponentType()) -->Line_16 $$ String[] idColumnNames = getIdentifierColumnNames()[ CD ]
Line_12 $$ if (getIdentifierType().isComponentType()) -->Line_13 $$ CompositeType componentId = (CompositeType) getIdentifierType()[ CD ]
Line_2 $$ protected void initSubclassPropertyAliasesMap(PersistentClass model) throws MappingException -->Line_8 $$ if (hasIdentifierProperty()) [ CD ]
Line_2 $$ protected void initSubclassPropertyAliasesMap(PersistentClass model) throws MappingException -->Line_31 $$ if (entityMetamodel.isPolymorphic()) [ CD ]
Line_2 $$ protected void initSubclassPropertyAliasesMap(PersistentClass model) throws MappingException -->Line_12 $$ if (getIdentifierType().isComponentType()) [ CD ]
Line_4 $$ if (!entityMetamodel.hasNonIdentifierPropertyNamedId()) -->Line_6 $$ subclassPropertyColumnNames.put(ENTITY_ID, getIdentifierColumnNames())[ CD ]
Line_8 $$ if (hasIdentifierProperty()) -->Line_9 $$ subclassPropertyAliases.put(getIdentifierPropertyName(), getIdentifierAliases())[ CD ]
Line_2 $$ protected void initSubclassPropertyAliasesMap(PersistentClass model) throws MappingException -->Line_4 $$ if (!entityMetamodel.hasNonIdentifierPropertyNamedId()) [ CD ]
Line_31 $$ if (entityMetamodel.isPolymorphic()) -->Line_33 $$ subclassPropertyColumnNames.put(ENTITY_CLASS, new String[] [ CD ]
Line_17 $$ for (int i = 0; i < idPropertyNames.length; i++) -->Line_18 $$ if (entityMetamodel.hasNonIdentifierPropertyNamedId()) [ CD ]
Line_12 $$ if (getIdentifierType().isComponentType()) -->Line_14 $$ String[] idPropertyNames = componentId.getPropertyNames()[ CD ]
Line_2 $$ protected void initSubclassPropertyAliasesMap(PersistentClass model) throws MappingException -->Line_3 $$ internalInitSubclassPropertyAliasesMap(null, model.getSubclassPropertyClosureIterator())[ CD ]
Line_4 $$ if (!entityMetamodel.hasNonIdentifierPropertyNamedId()) -->Line_5 $$ subclassPropertyAliases.put(ENTITY_ID, getIdentifierAliases())[ CD ]
Line_22 $$ if (hasIdentifierProperty()) -->Line_24 $$ subclassPropertyColumnNames.put(getIdentifierPropertyName() + "." + idPropertyNames[i], new String[] [ CD ]
Line_22 $$ if (hasIdentifierProperty()) -->Line_23 $$ subclassPropertyAliases.put(getIdentifierPropertyName() + "." + idPropertyNames[i], new String[] [ CD ]
Line_17 $$ for (int i = 0; i < idPropertyNames.length; i++) -->Line_22 $$ if (hasIdentifierProperty()) [ CD ]
