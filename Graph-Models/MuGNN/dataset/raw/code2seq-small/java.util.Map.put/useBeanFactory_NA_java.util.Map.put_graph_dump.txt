Line_27 $$ if (factoryKey != null) -->Line_30 $$ beanFactory = bfg.definition.getBean(BeanFactory.class)[ CD ]
Line_12 $$ bfg = new BeanFactoryGroup()-->Line_16 $$ this.bfgInstancesByObj.put(groupContext, bfg)[ FD ]
Line_28 $$ beanFactory = bfg.definition.getBean(factoryKey, BeanFactory.class)-->Line_30 $$ beanFactory = bfg.definition.getBean(BeanFactory.class)[ FD ]
Line_11 $$ BeanFactory groupContext = createDefinition(this.resourceLocation, factoryKey)-->Line_18 $$ initializeDefinition(groupContext)[ FD ]
Line_12 $$ bfg = new BeanFactoryGroup()-->Line_15 $$ this.bfgInstancesByKey.put(this.resourceLocation, bfg)[ FD ]
Line_4 $$ BeanFactoryGroup bfg = this.bfgInstancesByKey.get(this.resourceLocation)-->Line_12 $$ bfg = new BeanFactoryGroup()[ FD ]
Line_2 $$ public BeanFactoryReference useBeanFactory(String factoryKey) throws BeansException -->Line_27 $$ if (factoryKey != null) [ FD ]
Line_5 $$ if (bfg != null) -->Line_6 $$ bfg.refCount++[ CD ]
Line_4 $$ BeanFactoryGroup bfg = this.bfgInstancesByKey.get(this.resourceLocation)-->Line_5 $$ if (bfg != null) [ FD ]
Line_27 $$ if (factoryKey != null) -->Line_28 $$ beanFactory = bfg.definition.getBean(factoryKey, BeanFactory.class)[ CD ]
Line_8 $$ if (logger.isTraceEnabled()) -->Line_9 $$ logger.trace("Factory group with resource name [" + this.resourceLocation + "] requested. Creating new instance.")[ CD ]
Line_2 $$ public BeanFactoryReference useBeanFactory(String factoryKey) throws BeansException -->Line_11 $$ BeanFactory groupContext = createDefinition(this.resourceLocation, factoryKey)[ FD ]
Line_2 $$ public BeanFactoryReference useBeanFactory(String factoryKey) throws BeansException -->Line_28 $$ beanFactory = bfg.definition.getBean(factoryKey, BeanFactory.class)[ FD ]
Line_5 $$ if (bfg != null) -->Line_14 $$ bfg.refCount = 1[ CD ]
Line_4 $$ BeanFactoryGroup bfg = this.bfgInstancesByKey.get(this.resourceLocation)-->Line_16 $$ this.bfgInstancesByObj.put(groupContext, bfg)[ FD ]
Line_11 $$ BeanFactory groupContext = createDefinition(this.resourceLocation, factoryKey)-->Line_16 $$ this.bfgInstancesByObj.put(groupContext, bfg)[ FD ]
Line_11 $$ BeanFactory groupContext = createDefinition(this.resourceLocation, factoryKey)-->Line_13 $$ bfg.definition = groupContext[ FD ]
Line_5 $$ if (bfg != null) -->Line_13 $$ bfg.definition = groupContext[ CD ]
Line_4 $$ BeanFactoryGroup bfg = this.bfgInstancesByKey.get(this.resourceLocation)-->Line_15 $$ this.bfgInstancesByKey.put(this.resourceLocation, bfg)[ FD ]
Line_5 $$ if (bfg != null) -->Line_16 $$ this.bfgInstancesByObj.put(groupContext, bfg)[ CD ]
Line_11 $$ BeanFactory groupContext = createDefinition(this.resourceLocation, factoryKey)-->Line_21 $$ this.bfgInstancesByObj.remove(groupContext)[ FD ]
Line_5 $$ if (bfg != null) -->Line_8 $$ if (logger.isTraceEnabled()) [ CD ]
Line_26 $$ BeanFactory beanFactory-->Line_30 $$ beanFactory = bfg.definition.getBean(BeanFactory.class)[ FD ]
Line_5 $$ if (bfg != null) -->Line_15 $$ this.bfgInstancesByKey.put(this.resourceLocation, bfg)[ CD ]
Line_5 $$ if (bfg != null) -->Line_11 $$ BeanFactory groupContext = createDefinition(this.resourceLocation, factoryKey)[ CD ]
Line_26 $$ BeanFactory beanFactory-->Line_28 $$ beanFactory = bfg.definition.getBean(factoryKey, BeanFactory.class)[ FD ]
Line_5 $$ if (bfg != null) -->Line_12 $$ bfg = new BeanFactoryGroup()[ CD ]
