Line_10 $$ if (superClassValue.endsWith(entity.getName() + _getSessionTypeName(sessionType) + "ServiceBaseImpl")) -->Line_12 $$ methods = ArrayUtil.append(parentJavaClass.getMethods(), methods)[ CD ]
Line_2 $$ private void _createServiceClpInvoker(Entity entity, int sessionType) throws Exception -->Line_14 $$ Map<String, Object> context = _getContext()[ CD ]
Line_2 $$ private void _createServiceClpInvoker(Entity entity, int sessionType) throws Exception -->Line_11 $$ JavaClass parentJavaClass = _getJavaClass(_outputPath + "/service/base/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceBaseImpl.java")[ FD ]
Line_11 $$ JavaClass parentJavaClass = _getJavaClass(_outputPath + "/service/base/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceBaseImpl.java")-->Line_12 $$ methods = ArrayUtil.append(parentJavaClass.getMethods(), methods)[ FD ]
Line_3 $$ if (Validator.isNull(_pluginName)) -->Line_4 $$ return[ CD ]
Line_2 $$ private void _createServiceClpInvoker(Entity entity, int sessionType) throws Exception -->Line_7 $$ JavaMethod[] methods = _getMethods(javaClass)[ CD ]
Line_14 $$ Map<String, Object> context = _getContext()-->Line_15 $$ context.put("entity", entity)[ FD ]
Line_10 $$ if (superClassValue.endsWith(entity.getName() + _getSessionTypeName(sessionType) + "ServiceBaseImpl")) -->Line_11 $$ JavaClass parentJavaClass = _getJavaClass(_outputPath + "/service/base/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceBaseImpl.java")[ CD ]
Line_2 $$ private void _createServiceClpInvoker(Entity entity, int sessionType) throws Exception -->Line_8 $$ Type superClass = javaClass.getSuperClass()[ CD ]
Line_18 $$ context = _putDeprecatedKeys(context, javaClass)-->Line_19 $$ String content = _processTemplate(_tplServiceClpInvoker, context)[ FD ]
Line_2 $$ private void _createServiceClpInvoker(Entity entity, int sessionType) throws Exception -->Line_10 $$ if (superClassValue.endsWith(entity.getName() + _getSessionTypeName(sessionType) + "ServiceBaseImpl")) [ CD ]
Line_2 $$ private void _createServiceClpInvoker(Entity entity, int sessionType) throws Exception -->Line_17 $$ context.put("sessionTypeName", _getSessionTypeName(sessionType))[ FD ]
Line_8 $$ Type superClass = javaClass.getSuperClass()-->Line_9 $$ String superClassValue = superClass.getValue()[ FD ]
Line_2 $$ private void _createServiceClpInvoker(Entity entity, int sessionType) throws Exception -->Line_20 $$ File ejbFile = new File(_outputPath + "/service/base/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceClpInvoker.java")[ FD ]
Line_9 $$ String superClassValue = superClass.getValue()-->Line_10 $$ if (superClassValue.endsWith(entity.getName() + _getSessionTypeName(sessionType) + "ServiceBaseImpl")) [ FD ]
Line_12 $$ methods = ArrayUtil.append(parentJavaClass.getMethods(), methods)-->Line_16 $$ context.put("methods", methods)[ FD ]
Line_2 $$ private void _createServiceClpInvoker(Entity entity, int sessionType) throws Exception -->Line_3 $$ if (Validator.isNull(_pluginName)) [ CD ]
Line_2 $$ private void _createServiceClpInvoker(Entity entity, int sessionType) throws Exception -->Line_16 $$ context.put("methods", methods)[ CD ]
Line_2 $$ private void _createServiceClpInvoker(Entity entity, int sessionType) throws Exception -->Line_18 $$ context = _putDeprecatedKeys(context, javaClass)[ CD ]
Line_2 $$ private void _createServiceClpInvoker(Entity entity, int sessionType) throws Exception -->Line_15 $$ context.put("entity", entity)[ CD ]
Line_2 $$ private void _createServiceClpInvoker(Entity entity, int sessionType) throws Exception -->Line_6 $$ JavaClass javaClass = _getJavaClass(_outputPath + "/service/impl/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceImpl.java")[ CD ]
Line_2 $$ private void _createServiceClpInvoker(Entity entity, int sessionType) throws Exception -->Line_17 $$ context.put("sessionTypeName", _getSessionTypeName(sessionType))[ CD ]
Line_6 $$ JavaClass javaClass = _getJavaClass(_outputPath + "/service/impl/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceImpl.java")-->Line_18 $$ context = _putDeprecatedKeys(context, javaClass)[ FD ]
Line_2 $$ private void _createServiceClpInvoker(Entity entity, int sessionType) throws Exception -->Line_10 $$ if (superClassValue.endsWith(entity.getName() + _getSessionTypeName(sessionType) + "ServiceBaseImpl")) [ FD ]
Line_6 $$ JavaClass javaClass = _getJavaClass(_outputPath + "/service/impl/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceImpl.java")-->Line_8 $$ Type superClass = javaClass.getSuperClass()[ FD ]
Line_2 $$ private void _createServiceClpInvoker(Entity entity, int sessionType) throws Exception -->Line_9 $$ String superClassValue = superClass.getValue()[ CD ]
Line_14 $$ Map<String, Object> context = _getContext()-->Line_16 $$ context.put("methods", methods)[ FD ]
Line_2 $$ private void _createServiceClpInvoker(Entity entity, int sessionType) throws Exception -->Line_20 $$ File ejbFile = new File(_outputPath + "/service/base/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceClpInvoker.java")[ CD ]
Line_7 $$ JavaMethod[] methods = _getMethods(javaClass)-->Line_16 $$ context.put("methods", methods)[ FD ]
Line_14 $$ Map<String, Object> context = _getContext()-->Line_18 $$ context = _putDeprecatedKeys(context, javaClass)[ FD ]
Line_2 $$ private void _createServiceClpInvoker(Entity entity, int sessionType) throws Exception -->Line_21 $$ ToolsUtil.writeFile(ejbFile, content, _author, _modifiedFileNames)[ CD ]
Line_14 $$ Map<String, Object> context = _getContext()-->Line_19 $$ String content = _processTemplate(_tplServiceClpInvoker, context)[ FD ]
Line_2 $$ private void _createServiceClpInvoker(Entity entity, int sessionType) throws Exception -->Line_6 $$ JavaClass javaClass = _getJavaClass(_outputPath + "/service/impl/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceImpl.java")[ FD ]
Line_2 $$ private void _createServiceClpInvoker(Entity entity, int sessionType) throws Exception -->Line_15 $$ context.put("entity", entity)[ FD ]
Line_20 $$ File ejbFile = new File(_outputPath + "/service/base/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceClpInvoker.java")-->Line_21 $$ ToolsUtil.writeFile(ejbFile, content, _author, _modifiedFileNames)[ FD ]
Line_6 $$ JavaClass javaClass = _getJavaClass(_outputPath + "/service/impl/" + entity.getName() + _getSessionTypeName(sessionType) + "ServiceImpl.java")-->Line_7 $$ JavaMethod[] methods = _getMethods(javaClass)[ FD ]
Line_19 $$ String content = _processTemplate(_tplServiceClpInvoker, context)-->Line_21 $$ ToolsUtil.writeFile(ejbFile, content, _author, _modifiedFileNames)[ FD ]
Line_7 $$ JavaMethod[] methods = _getMethods(javaClass)-->Line_12 $$ methods = ArrayUtil.append(parentJavaClass.getMethods(), methods)[ FD ]
Line_2 $$ private void _createServiceClpInvoker(Entity entity, int sessionType) throws Exception -->Line_19 $$ String content = _processTemplate(_tplServiceClpInvoker, context)[ CD ]
Line_14 $$ Map<String, Object> context = _getContext()-->Line_17 $$ context.put("sessionTypeName", _getSessionTypeName(sessionType))[ FD ]
