Line_2 $$ public static int sortAndDedup(float[] array, int len) -->Line_7 $$ int uniqueCount = 1[ CD ]
Line_2 $$ public static int sortAndDedup(float[] array, int len) -->Line_6 $$ sort(array, len)[ FD ]
Line_3 $$ if (len <= 1) -->Line_4 $$ return len[ CD ]
Line_2 $$ public static int sortAndDedup(float[] array, int len) -->Line_3 $$ if (len <= 1) [ FD ]
Line_8 $$ for (int i = 1; i < len; ++i) -->Line_9 $$ if (Float.compare(array[i], array[i - 1]) != 0) [ CD ]
Line_2 $$ public static int sortAndDedup(float[] array, int len) -->Line_6 $$ sort(array, len)[ CD ]
Line_2 $$ public static int sortAndDedup(float[] array, int len) -->Line_8 $$ for (int i = 1; i < len; ++i) [ FD ]
Line_9 $$ if (Float.compare(array[i], array[i - 1]) != 0) -->Line_10 $$ array[uniqueCount++] = array[i][ CD ]
Line_2 $$ public static int sortAndDedup(float[] array, int len) -->Line_3 $$ if (len <= 1) [ CD ]
Line_7 $$ int uniqueCount = 1-->Line_10 $$ array[uniqueCount++] = array[i][ FD ]
Line_2 $$ public static int sortAndDedup(float[] array, int len) -->Line_8 $$ for (int i = 1; i < len; ++i) [ CD ]
Line_2 $$ public static int sortAndDedup(float[] array, int len) -->Line_13 $$ return uniqueCount[ CD ]
