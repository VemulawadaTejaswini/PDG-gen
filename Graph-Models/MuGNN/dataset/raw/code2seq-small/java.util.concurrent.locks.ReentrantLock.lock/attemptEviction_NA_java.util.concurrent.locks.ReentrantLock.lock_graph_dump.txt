Line_2 $$ private Set<HashEntry<K, V>> attemptEviction(boolean lockedAlready) -->Line_4 $$ boolean obtainedLock = lockedAlready || tryLock()[ CD ]
Line_2 $$ private Set<HashEntry<K, V>> attemptEviction(boolean lockedAlready) -->Line_9 $$ if (obtainedLock) [ CD ]
Line_2 $$ private Set<HashEntry<K, V>> attemptEviction(boolean lockedAlready) -->Line_15 $$ if (!lockedAlready) [ FD ]
Line_5 $$ if (!obtainedLock && eviction.thresholdExpired()) -->Line_6 $$ lock()[ CD ]
Line_3 $$ Set<HashEntry<K, V>> evicted = null-->Line_12 $$ evicted = eviction.execute()[ FD ]
Line_2 $$ private Set<HashEntry<K, V>> attemptEviction(boolean lockedAlready) -->Line_20 $$ return evicted[ CD ]
Line_4 $$ boolean obtainedLock = lockedAlready || tryLock()-->Line_5 $$ if (!obtainedLock && eviction.thresholdExpired()) [ FD ]
Line_11 $$ if (eviction.thresholdExpired()) -->Line_12 $$ evicted = eviction.execute()[ CD ]
Line_15 $$ if (!lockedAlready) -->Line_16 $$ unlock()[ CD ]
Line_2 $$ private Set<HashEntry<K, V>> attemptEviction(boolean lockedAlready) -->Line_3 $$ Set<HashEntry<K, V>> evicted = null[ CD ]
Line_5 $$ if (!obtainedLock && eviction.thresholdExpired()) -->Line_7 $$ obtainedLock = true[ CD ]
Line_2 $$ private Set<HashEntry<K, V>> attemptEviction(boolean lockedAlready) -->Line_5 $$ if (!obtainedLock && eviction.thresholdExpired()) [ CD ]
Line_4 $$ boolean obtainedLock = lockedAlready || tryLock()-->Line_7 $$ obtainedLock = true[ FD ]
