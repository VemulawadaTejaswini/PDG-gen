Line_15 $$ runnable = _taskQueue.take()-->Line_17 $$ if (runnable != null) [ FD ]
Line_10 $$ if (state == _SHUTDOWN) -->Line_11 $$ runnable = _taskQueue.poll()[ CD ]
Line_12 $$ if ((_poolSize > _corePoolSize) || _allowCoreThreadTimeout) -->Line_13 $$ runnable = _taskQueue.poll(_keepAliveTime, TimeUnit.NANOSECONDS)[ CD ]
Line_13 $$ runnable = _taskQueue.poll(_keepAliveTime, TimeUnit.NANOSECONDS)-->Line_17 $$ if (runnable != null) [ FD ]
Line_13 $$ runnable = _taskQueue.poll(_keepAliveTime, TimeUnit.NANOSECONDS)-->Line_15 $$ runnable = _taskQueue.take()[ FD ]
Line_11 $$ runnable = _taskQueue.poll()-->Line_15 $$ runnable = _taskQueue.take()[ FD ]
Line_25 $$ if (--_poolSize == 0) -->Line_26 $$ _tryTerminate()[ CD ]
Line_5 $$ int state = _runState-->Line_10 $$ if (state == _SHUTDOWN) [ FD ]
Line_11 $$ runnable = _taskQueue.poll()-->Line_17 $$ if (runnable != null) [ FD ]
Line_22 $$ if ((_runState >= _STOP) || ((_runState >= _SHUTDOWN) && _taskQueue.isEmpty()) || (_allowCoreThreadTimeout && ((_poolSize > 1) || _taskQueue.isEmpty())) || (!_allowCoreThreadTimeout && (_poolSize > _corePoolSize))) -->Line_24 $$ _workerTasks.remove(workerTask)[ CD ]
Line_2 $$ private Runnable _getTask(WorkerTask workerTask, boolean[] cleanUpMarker) -->Line_24 $$ _workerTasks.remove(workerTask)[ FD ]
Line_9 $$ Runnable runnable = null-->Line_15 $$ runnable = _taskQueue.take()[ FD ]
Line_9 $$ Runnable runnable = null-->Line_17 $$ if (runnable != null) [ FD ]
Line_11 $$ runnable = _taskQueue.poll()-->Line_13 $$ runnable = _taskQueue.poll(_keepAliveTime, TimeUnit.NANOSECONDS)[ FD ]
Line_22 $$ if ((_runState >= _STOP) || ((_runState >= _SHUTDOWN) && _taskQueue.isEmpty()) || (_allowCoreThreadTimeout && ((_poolSize > 1) || _taskQueue.isEmpty())) || (!_allowCoreThreadTimeout && (_poolSize > _corePoolSize))) -->Line_25 $$ if (--_poolSize == 0) [ CD ]
Line_22 $$ if ((_runState >= _STOP) || ((_runState >= _SHUTDOWN) && _taskQueue.isEmpty()) || (_allowCoreThreadTimeout && ((_poolSize > 1) || _taskQueue.isEmpty())) || (!_allowCoreThreadTimeout && (_poolSize > _corePoolSize))) -->Line_28 $$ cleanUpMarker[0] = true[ CD ]
Line_5 $$ int state = _runState-->Line_6 $$ if (state >= _STOP) [ FD ]
Line_12 $$ if ((_poolSize > _corePoolSize) || _allowCoreThreadTimeout) -->Line_15 $$ runnable = _taskQueue.take()[ CD ]
Line_22 $$ if ((_runState >= _STOP) || ((_runState >= _SHUTDOWN) && _taskQueue.isEmpty()) || (_allowCoreThreadTimeout && ((_poolSize > 1) || _taskQueue.isEmpty())) || (!_allowCoreThreadTimeout && (_poolSize > _corePoolSize))) -->Line_29 $$ return null[ CD ]
Line_6 $$ if (state >= _STOP) -->Line_7 $$ return null[ CD ]
Line_10 $$ if (state == _SHUTDOWN) -->Line_12 $$ if ((_poolSize > _corePoolSize) || _allowCoreThreadTimeout) [ CD ]
Line_9 $$ Runnable runnable = null-->Line_13 $$ runnable = _taskQueue.poll(_keepAliveTime, TimeUnit.NANOSECONDS)[ FD ]
Line_17 $$ if (runnable != null) -->Line_18 $$ return runnable[ CD ]
Line_2 $$ private Runnable _getTask(WorkerTask workerTask, boolean[] cleanUpMarker) -->Line_3 $$ while (true) [ CD ]
Line_9 $$ Runnable runnable = null-->Line_11 $$ runnable = _taskQueue.poll()[ FD ]
