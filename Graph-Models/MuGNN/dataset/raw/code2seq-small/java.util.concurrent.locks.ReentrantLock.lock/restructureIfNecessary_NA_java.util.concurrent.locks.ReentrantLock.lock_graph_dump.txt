Line_14 $$ reference = this.referenceManager.pollForPurge()-->Line_32 $$ if (!toPurge.contains(reference) && (reference.get() != null)) [ FD ]
Line_4 $$ Reference<K, V> reference = this.referenceManager.pollForPurge()-->Line_36 $$ reference = reference.getNext()[ FD ]
Line_4 $$ Reference<K, V> reference = this.referenceManager.pollForPurge()-->Line_32 $$ if (!toPurge.contains(reference) && (reference.get() != null)) [ FD ]
Line_27 $$ reference = this.references[i]-->Line_33 $$ int index = getIndex(reference.getHash(), restructured)[ FD ]
Line_32 $$ if (!toPurge.contains(reference) && (reference.get() != null)) -->Line_34 $$ restructured[index] = this.referenceManager.createReference(reference.get(), reference.getHash(), restructured[index])[ CD ]
Line_19 $$ boolean resizing = false-->Line_23 $$ resizing = true[ FD ]
Line_36 $$ reference = reference.getNext()-->Line_34 $$ restructured[index] = this.referenceManager.createReference(reference.get(), reference.getHash(), restructured[index])[ FD ]
Line_27 $$ reference = this.references[i]-->Line_34 $$ restructured[index] = this.referenceManager.createReference(reference.get(), reference.getHash(), restructured[index])[ FD ]
Line_25 $$ Reference<K, V>[] restructured = (resizing ? createReferenceArray(restructureSize) : this.references)-->Line_40 $$ setReferences(restructured)[ FD ]
Line_2 $$ protected final void restructureIfNecessary(boolean allowResize) -->Line_4 $$ Reference<K, V> reference = this.referenceManager.pollForPurge()[ CD ]
Line_26 $$ for (int i = 0; i < this.references.length; i++) -->Line_27 $$ reference = this.references[i][ CD ]
Line_3 $$ boolean needsResize = ((this.count > 0) && (this.count >= this.resizeThreshold))-->Line_18 $$ needsResize = (countAfterRestructure > 0 && countAfterRestructure >= this.resizeThreshold)[ FD ]
Line_22 $$ restructureSize <<= 1-->Line_25 $$ Reference<K, V>[] restructured = (resizing ? createReferenceArray(restructureSize) : this.references)[ FD ]
Line_11 $$ toPurge = new HashSet<Reference<K, V>>()-->Line_32 $$ if (!toPurge.contains(reference) && (reference.get() != null)) [ FD ]
Line_14 $$ reference = this.referenceManager.pollForPurge()-->Line_34 $$ restructured[index] = this.referenceManager.createReference(reference.get(), reference.getHash(), restructured[index])[ FD ]
Line_2 $$ protected final void restructureIfNecessary(boolean allowResize) -->Line_3 $$ boolean needsResize = ((this.count > 0) && (this.count >= this.resizeThreshold))[ CD ]
Line_36 $$ reference = reference.getNext()-->Line_33 $$ int index = getIndex(reference.getHash(), restructured)[ FD ]
Line_27 $$ reference = this.references[i]-->Line_32 $$ if (!toPurge.contains(reference) && (reference.get() != null)) [ FD ]
Line_20 $$ int restructureSize = this.references.length-->Line_25 $$ Reference<K, V>[] restructured = (resizing ? createReferenceArray(restructureSize) : this.references)[ FD ]
Line_12 $$ while (reference != null) -->Line_13 $$ toPurge.add(reference)[ CD ]
Line_27 $$ reference = this.references[i]-->Line_36 $$ reference = reference.getNext()[ FD ]
Line_4 $$ Reference<K, V> reference = this.referenceManager.pollForPurge()-->Line_31 $$ while (reference != null) [ FD ]
Line_9 $$ Set<Reference<K, V>> toPurge = Collections.emptySet()-->Line_13 $$ toPurge.add(reference)[ FD ]
Line_39 $$ if (resizing) -->Line_40 $$ setReferences(restructured)[ CD ]
Line_14 $$ reference = this.referenceManager.pollForPurge()-->Line_13 $$ toPurge.add(reference)[ FD ]
Line_14 $$ reference = this.referenceManager.pollForPurge()-->Line_36 $$ reference = reference.getNext()[ FD ]
Line_2 $$ protected final void restructureIfNecessary(boolean allowResize) -->Line_5 $$ if ((reference != null) || (needsResize && allowResize)) [ CD ]
Line_25 $$ Reference<K, V>[] restructured = (resizing ? createReferenceArray(restructureSize) : this.references)-->Line_33 $$ int index = getIndex(reference.getHash(), restructured)[ FD ]
Line_4 $$ Reference<K, V> reference = this.referenceManager.pollForPurge()-->Line_33 $$ int index = getIndex(reference.getHash(), restructured)[ FD ]
Line_10 $$ if (reference != null) -->Line_11 $$ toPurge = new HashSet<Reference<K, V>>()[ CD ]
Line_12 $$ while (reference != null) -->Line_14 $$ reference = this.referenceManager.pollForPurge()[ CD ]
Line_5 $$ if ((reference != null) || (needsResize && allowResize)) -->Line_6 $$ lock()[ CD ]
Line_4 $$ Reference<K, V> reference = this.referenceManager.pollForPurge()-->Line_14 $$ reference = this.referenceManager.pollForPurge()[ FD ]
Line_8 $$ int countAfterRestructure = this.count-->Line_17 $$ countAfterRestructure -= toPurge.size()[ FD ]
Line_14 $$ reference = this.referenceManager.pollForPurge()-->Line_27 $$ reference = this.references[i][ FD ]
Line_4 $$ Reference<K, V> reference = this.referenceManager.pollForPurge()-->Line_27 $$ reference = this.references[i][ FD ]
Line_28 $$ if (!resizing) -->Line_29 $$ restructured[i] = null[ CD ]
Line_11 $$ toPurge = new HashSet<Reference<K, V>>()-->Line_17 $$ countAfterRestructure -= toPurge.size()[ FD ]
Line_26 $$ for (int i = 0; i < this.references.length; i++) -->Line_28 $$ if (!resizing) [ CD ]
Line_4 $$ Reference<K, V> reference = this.referenceManager.pollForPurge()-->Line_10 $$ if (reference != null) [ FD ]
Line_4 $$ Reference<K, V> reference = this.referenceManager.pollForPurge()-->Line_12 $$ while (reference != null) [ FD ]
Line_27 $$ reference = this.references[i]-->Line_31 $$ while (reference != null) [ FD ]
Line_11 $$ toPurge = new HashSet<Reference<K, V>>()-->Line_13 $$ toPurge.add(reference)[ FD ]
Line_36 $$ reference = reference.getNext()-->Line_31 $$ while (reference != null) [ FD ]
Line_4 $$ Reference<K, V> reference = this.referenceManager.pollForPurge()-->Line_13 $$ toPurge.add(reference)[ FD ]
Line_9 $$ Set<Reference<K, V>> toPurge = Collections.emptySet()-->Line_11 $$ toPurge = new HashSet<Reference<K, V>>()[ FD ]
Line_26 $$ for (int i = 0; i < this.references.length; i++) -->Line_31 $$ while (reference != null) [ CD ]
Line_32 $$ if (!toPurge.contains(reference) && (reference.get() != null)) -->Line_33 $$ int index = getIndex(reference.getHash(), restructured)[ CD ]
Line_10 $$ if (reference != null) -->Line_12 $$ while (reference != null) [ CD ]
Line_19 $$ boolean resizing = false-->Line_28 $$ if (!resizing) [ FD ]
Line_20 $$ int restructureSize = this.references.length-->Line_22 $$ restructureSize <<= 1[ FD ]
Line_21 $$ if (allowResize && needsResize && restructureSize < MAXIMUM_SEGMENT_SIZE) -->Line_22 $$ restructureSize <<= 1[ CD ]
Line_9 $$ Set<Reference<K, V>> toPurge = Collections.emptySet()-->Line_32 $$ if (!toPurge.contains(reference) && (reference.get() != null)) [ FD ]
Line_21 $$ if (allowResize && needsResize && restructureSize < MAXIMUM_SEGMENT_SIZE) -->Line_23 $$ resizing = true[ CD ]
Line_31 $$ while (reference != null) -->Line_36 $$ reference = reference.getNext()[ CD ]
Line_9 $$ Set<Reference<K, V>> toPurge = Collections.emptySet()-->Line_17 $$ countAfterRestructure -= toPurge.size()[ FD ]
Line_14 $$ reference = this.referenceManager.pollForPurge()-->Line_31 $$ while (reference != null) [ FD ]
Line_31 $$ while (reference != null) -->Line_32 $$ if (!toPurge.contains(reference) && (reference.get() != null)) [ CD ]
Line_36 $$ reference = reference.getNext()-->Line_32 $$ if (!toPurge.contains(reference) && (reference.get() != null)) [ FD ]
Line_23 $$ resizing = true-->Line_28 $$ if (!resizing) [ FD ]
Line_8 $$ int countAfterRestructure = this.count-->Line_42 $$ this.count = Math.max(countAfterRestructure, 0)[ FD ]
Line_17 $$ countAfterRestructure -= toPurge.size()-->Line_42 $$ this.count = Math.max(countAfterRestructure, 0)[ FD ]
Line_14 $$ reference = this.referenceManager.pollForPurge()-->Line_12 $$ while (reference != null) [ FD ]
Line_14 $$ reference = this.referenceManager.pollForPurge()-->Line_33 $$ int index = getIndex(reference.getHash(), restructured)[ FD ]
Line_4 $$ Reference<K, V> reference = this.referenceManager.pollForPurge()-->Line_34 $$ restructured[index] = this.referenceManager.createReference(reference.get(), reference.getHash(), restructured[index])[ FD ]
