Line_11 $$ if (perNodeLock == null) -->Line_13 $$ threadLocal.set(newLock)[ CD ]
Line_8 $$ if (perNodeLock == null) -->Line_10 $$ perNodeLock = map.putIfAbsent(key, newLock)[ CD ]
Line_9 $$ KeyLock newLock = new KeyLock(fair)-->Line_13 $$ threadLocal.set(newLock)[ FD ]
Line_3 $$ while (true) -->Line_18 $$ int i = perNodeLock.count.get()[ CD ]
Line_8 $$ if (perNodeLock == null) -->Line_9 $$ KeyLock newLock = new KeyLock(fair)[ CD ]
Line_18 $$ int i = perNodeLock.count.get()-->Line_19 $$ if (i > 0 && perNodeLock.count.compareAndSet(i, i + 1)) [ FD ]
Line_3 $$ while (true) -->Line_4 $$ if (threadLocal.get() != null) [ CD ]
Line_8 $$ if (perNodeLock == null) -->Line_11 $$ if (perNodeLock == null) [ CD ]
Line_11 $$ if (perNodeLock == null) -->Line_12 $$ newLock.lock()[ CD ]
Line_10 $$ perNodeLock = map.putIfAbsent(key, newLock)-->Line_20 $$ perNodeLock.lock()[ FD ]
Line_7 $$ KeyLock perNodeLock = map.get(key)-->Line_20 $$ perNodeLock.lock()[ FD ]
Line_9 $$ KeyLock newLock = new KeyLock(fair)-->Line_12 $$ newLock.lock()[ FD ]
Line_7 $$ KeyLock perNodeLock = map.get(key)-->Line_11 $$ if (perNodeLock == null) [ FD ]
Line_7 $$ KeyLock perNodeLock = map.get(key)-->Line_21 $$ threadLocal.set(perNodeLock)[ FD ]
Line_2 $$ public void acquire(T key) -->Line_7 $$ KeyLock perNodeLock = map.get(key)[ FD ]
Line_3 $$ while (true) -->Line_7 $$ KeyLock perNodeLock = map.get(key)[ CD ]
Line_19 $$ if (i > 0 && perNodeLock.count.compareAndSet(i, i + 1)) -->Line_21 $$ threadLocal.set(perNodeLock)[ CD ]
Line_10 $$ perNodeLock = map.putIfAbsent(key, newLock)-->Line_21 $$ threadLocal.set(perNodeLock)[ FD ]
Line_3 $$ while (true) -->Line_19 $$ if (i > 0 && perNodeLock.count.compareAndSet(i, i + 1)) [ CD ]
Line_3 $$ while (true) -->Line_8 $$ if (perNodeLock == null) [ CD ]
Line_2 $$ public void acquire(T key) -->Line_3 $$ while (true) [ CD ]
Line_19 $$ if (i > 0 && perNodeLock.count.compareAndSet(i, i + 1)) -->Line_20 $$ perNodeLock.lock()[ CD ]
Line_10 $$ perNodeLock = map.putIfAbsent(key, newLock)-->Line_8 $$ if (perNodeLock == null) [ FD ]
Line_9 $$ KeyLock newLock = new KeyLock(fair)-->Line_10 $$ perNodeLock = map.putIfAbsent(key, newLock)[ FD ]
Line_2 $$ public void acquire(T key) -->Line_10 $$ perNodeLock = map.putIfAbsent(key, newLock)[ FD ]
Line_7 $$ KeyLock perNodeLock = map.get(key)-->Line_8 $$ if (perNodeLock == null) [ FD ]
Line_11 $$ if (perNodeLock == null) -->Line_14 $$ return[ CD ]
Line_19 $$ if (i > 0 && perNodeLock.count.compareAndSet(i, i + 1)) -->Line_22 $$ return[ CD ]
Line_10 $$ perNodeLock = map.putIfAbsent(key, newLock)-->Line_11 $$ if (perNodeLock == null) [ FD ]
Line_7 $$ KeyLock perNodeLock = map.get(key)-->Line_10 $$ perNodeLock = map.putIfAbsent(key, newLock)[ FD ]
