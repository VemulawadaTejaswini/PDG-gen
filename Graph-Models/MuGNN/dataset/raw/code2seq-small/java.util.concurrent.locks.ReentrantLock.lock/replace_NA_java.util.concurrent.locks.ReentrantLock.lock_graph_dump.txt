Line_2 $$ V replace(K key, int hash, V newValue) -->Line_11 $$ e.setValue(newValue, valueType, refQueue)[ FD ]
Line_9 $$ if (e != null) -->Line_10 $$ oldValue = e.value()[ CD ]
Line_8 $$ V oldValue = null-->Line_10 $$ oldValue = e.value()[ FD ]
Line_2 $$ V replace(K key, int hash, V newValue) -->Line_3 $$ lock()[ CD ]
Line_6 $$ HashEntry<K, V> e = getFirst(hash)-->Line_7 $$ while (e != null && (e.hash != hash || !keyEq(key, e.key()))) e = e.next[ FD ]
Line_7 $$ e = e.next-->Line_9 $$ if (e != null) [ FD ]
Line_7 $$ e = e.next-->Line_11 $$ e.setValue(newValue, valueType, refQueue)[ FD ]
Line_6 $$ HashEntry<K, V> e = getFirst(hash)-->Line_11 $$ e.setValue(newValue, valueType, refQueue)[ FD ]
Line_2 $$ V replace(K key, int hash, V newValue) -->Line_7 $$ while (e != null && (e.hash != hash || !keyEq(key, e.key()))) e = e.next[ FD ]
Line_2 $$ V replace(K key, int hash, V newValue) -->Line_6 $$ HashEntry<K, V> e = getFirst(hash)[ FD ]
Line_6 $$ HashEntry<K, V> e = getFirst(hash)-->Line_10 $$ oldValue = e.value()[ FD ]
Line_9 $$ if (e != null) -->Line_11 $$ e.setValue(newValue, valueType, refQueue)[ CD ]
Line_7 $$ e = e.next-->Line_10 $$ oldValue = e.value()[ FD ]
Line_6 $$ HashEntry<K, V> e = getFirst(hash)-->Line_9 $$ if (e != null) [ FD ]
Line_6 $$ HashEntry<K, V> e = getFirst(hash)-->Line_7 $$ e = e.next[ FD ]
