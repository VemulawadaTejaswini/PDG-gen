Line_22 $$ if (node != child && Comparing.equal(node.getUserObject(), child.getUserObject())) -->Line_23 $$ return true[ CD ]
Line_9 $$ DefaultMutableTreeNode child = (DefaultMutableTreeNode) expandedNode.getChildAt(i)-->Line_10 $$ if (child.getChildCount() == 0 && !isLooped(event.getPath(), child)) [ FD ]
Line_31 $$ TreePath selectionPath = myLeftTree.getSelectionPath()-->Line_32 $$ if (selectionPath != null) [ FD ]
Line_3 $$ myLeftTree.addTreeExpansionListener(new TreeExpansionListener() -->Line_22 $$ if (node != child && Comparing.equal(node.getUserObject(), child.getUserObject())) [ FD ]
Line_3 $$ myLeftTree.addTreeExpansionListener(new TreeExpansionListener() -->Line_20 $$ for (Object o : path.getPath()) [ FD ]
Line_3 $$ myLeftTree.addTreeExpansionListener(new TreeExpansionListener() -->Line_7 $$ DefaultMutableTreeNode expandedNode = (DefaultMutableTreeNode) event.getPath().getLastPathComponent()[ CD ]
Line_9 $$ DefaultMutableTreeNode child = (DefaultMutableTreeNode) expandedNode.getChildAt(i)-->Line_11 $$ Module module = ((MyUserObject) child.getUserObject()).myModule[ FD ]
Line_9 $$ DefaultMutableTreeNode child = (DefaultMutableTreeNode) expandedNode.getChildAt(i)-->Line_13 $$ child.add(new DefaultMutableTreeNode(new MyUserObject(isInCycle(dependency), dependency)))[ FD ]
Line_10 $$ if (child.getChildCount() == 0 && !isLooped(event.getPath(), child)) -->Line_15 $$ TreeUtil.sort(child, NODE_COMPARATOR)[ CD ]
Line_2 $$ private void installLeftTreeListeners() -->Line_29 $$ myLeftTree.addTreeSelectionListener(new TreeSelectionListener() [ CD ]
Line_7 $$ DefaultMutableTreeNode expandedNode = (DefaultMutableTreeNode) event.getPath().getLastPathComponent()-->Line_8 $$ for (int i = 0; i < expandedNode.getChildCount(); i++) [ FD ]
Line_2 $$ private void installLeftTreeListeners() -->Line_3 $$ myLeftTree.addTreeExpansionListener(new TreeExpansionListener() [ CD ]
Line_8 $$ for (int i = 0; i < expandedNode.getChildCount(); i++) -->Line_9 $$ DefaultMutableTreeNode child = (DefaultMutableTreeNode) expandedNode.getChildAt(i)[ CD ]
Line_8 $$ for (int i = 0; i < expandedNode.getChildCount(); i++) -->Line_9 $$ DefaultMutableTreeNode child = (DefaultMutableTreeNode) expandedNode.getChildAt(i)[ FD ]
Line_29 $$ myLeftTree.addTreeSelectionListener(new TreeSelectionListener() -->Line_31 $$ TreePath selectionPath = myLeftTree.getSelectionPath()[ CD ]
Line_8 $$ for (int i = 0; i < expandedNode.getChildCount(); i++) -->Line_10 $$ if (child.getChildCount() == 0 && !isLooped(event.getPath(), child)) [ CD ]
Line_29 $$ myLeftTree.addTreeSelectionListener(new TreeSelectionListener() -->Line_32 $$ if (selectionPath != null) [ CD ]
Line_31 $$ TreePath selectionPath = myLeftTree.getSelectionPath()-->Line_33 $$ myPathField.setText(StringUtil.join(selectionPath.getPath(), new Function<Object, String>() [ FD ]
Line_3 $$ myLeftTree.addTreeExpansionListener(new TreeExpansionListener() -->Line_7 $$ DefaultMutableTreeNode expandedNode = (DefaultMutableTreeNode) event.getPath().getLastPathComponent()[ FD ]
Line_31 $$ TreePath selectionPath = myLeftTree.getSelectionPath()-->Line_39 $$ DefaultMutableTreeNode selection = (DefaultMutableTreeNode) selectionPath.getLastPathComponent()[ FD ]
Line_3 $$ myLeftTree.addTreeExpansionListener(new TreeExpansionListener() -->Line_26 $$ return false[ CD ]
Line_21 $$ DefaultMutableTreeNode node = (DefaultMutableTreeNode) o-->Line_22 $$ if (node != child && Comparing.equal(node.getUserObject(), child.getUserObject())) [ FD ]
Line_7 $$ DefaultMutableTreeNode expandedNode = (DefaultMutableTreeNode) event.getPath().getLastPathComponent()-->Line_9 $$ DefaultMutableTreeNode child = (DefaultMutableTreeNode) expandedNode.getChildAt(i)[ FD ]
Line_40 $$ if (selection != null) -->Line_41 $$ updateRightTree(((MyUserObject) selection.getUserObject()).myModule)[ CD ]
Line_33 $$ myPathField.setText(StringUtil.join(selectionPath.getPath(), new Function<Object, String>() -->Line_36 $$ return userObject instanceof MyUserObject ? ((MyUserObject) userObject).myModule.getName() : ""[ CD ]
Line_12 $$ for (Module dependency : getModuleDependencies(module)) -->Line_13 $$ child.add(new DefaultMutableTreeNode(new MyUserObject(isInCycle(dependency), dependency)))[ FD ]
Line_32 $$ if (selectionPath != null) -->Line_33 $$ myPathField.setText(StringUtil.join(selectionPath.getPath(), new Function<Object, String>() [ CD ]
Line_3 $$ myLeftTree.addTreeExpansionListener(new TreeExpansionListener() -->Line_8 $$ for (int i = 0; i < expandedNode.getChildCount(); i++) [ CD ]
Line_10 $$ if (child.getChildCount() == 0 && !isLooped(event.getPath(), child)) -->Line_11 $$ Module module = ((MyUserObject) child.getUserObject()).myModule[ CD ]
Line_9 $$ DefaultMutableTreeNode child = (DefaultMutableTreeNode) expandedNode.getChildAt(i)-->Line_15 $$ TreeUtil.sort(child, NODE_COMPARATOR)[ FD ]
Line_9 $$ DefaultMutableTreeNode child = (DefaultMutableTreeNode) expandedNode.getChildAt(i)-->Line_22 $$ if (node != child && Comparing.equal(node.getUserObject(), child.getUserObject())) [ FD ]
Line_33 $$ myPathField.setText(StringUtil.join(selectionPath.getPath(), new Function<Object, String>() -->Line_35 $$ Object userObject = ((DefaultMutableTreeNode) o).getUserObject()[ CD ]
Line_11 $$ Module module = ((MyUserObject) child.getUserObject()).myModule-->Line_12 $$ for (Module dependency : getModuleDependencies(module)) [ FD ]
Line_32 $$ if (selectionPath != null) -->Line_40 $$ if (selection != null) [ CD ]
Line_3 $$ myLeftTree.addTreeExpansionListener(new TreeExpansionListener() -->Line_10 $$ if (child.getChildCount() == 0 && !isLooped(event.getPath(), child)) [ FD ]
