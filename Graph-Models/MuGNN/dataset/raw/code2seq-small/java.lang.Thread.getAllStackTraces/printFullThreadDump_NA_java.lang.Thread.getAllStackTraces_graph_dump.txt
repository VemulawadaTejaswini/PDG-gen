Line_3 $$ StringBundler sb = new StringBundler()-->Line_33 $$ sb.append("\n")[ FD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_6 $$ sb.append(" ")[ FD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_5 $$ sb.append(System.getProperty("java.vm.name"))[ FD ]
Line_2 $$ protected void printFullThreadDump() -->Line_8 $$ sb.append("\n\n")[ CD ]
Line_10 $$ for (Map.Entry<Thread, StackTraceElement[]> entry : stackTraces.entrySet()) -->Line_12 $$ StackTraceElement[] elements = entry.getValue()[ FD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_26 $$ sb.append(thread.getState())[ FD ]
Line_16 $$ if (thread.getThreadGroup() != null) -->Line_17 $$ sb.append(" (")[ CD ]
Line_11 $$ Thread thread = entry.getKey()-->Line_18 $$ sb.append(thread.getThreadGroup().getName())[ FD ]
Line_28 $$ for (int i = 0; i < elements.length; i++) -->Line_30 $$ sb.append(elements[i])[ CD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_23 $$ sb.append(", id=")[ FD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_17 $$ sb.append(" (")[ FD ]
Line_11 $$ Thread thread = entry.getKey()-->Line_26 $$ sb.append(thread.getState())[ FD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_8 $$ sb.append("\n\n")[ FD ]
Line_11 $$ Thread thread = entry.getKey()-->Line_14 $$ sb.append(thread.getName())[ FD ]
Line_2 $$ protected void printFullThreadDump() -->Line_35 $$ System.out.println(sb)[ CD ]
Line_11 $$ Thread thread = entry.getKey()-->Line_16 $$ if (thread.getThreadGroup() != null) [ FD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_27 $$ sb.append("\n")[ FD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_25 $$ sb.append(", state=")[ FD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_19 $$ sb.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_16 $$ if (thread.getThreadGroup() != null) -->Line_19 $$ sb.append(StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_2 $$ protected void printFullThreadDump() -->Line_3 $$ StringBundler sb = new StringBundler()[ CD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_14 $$ sb.append(thread.getName())[ FD ]
Line_11 $$ Thread thread = entry.getKey()-->Line_24 $$ sb.append(thread.getId())[ FD ]
Line_2 $$ protected void printFullThreadDump() -->Line_4 $$ sb.append("Full thread dump ")[ CD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_22 $$ sb.append(thread.getPriority())[ FD ]
Line_9 $$ Map<Thread, StackTraceElement[]> stackTraces = Thread.getAllStackTraces()-->Line_10 $$ for (Map.Entry<Thread, StackTraceElement[]> entry : stackTraces.entrySet()) [ FD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_18 $$ sb.append(thread.getThreadGroup().getName())[ FD ]
Line_11 $$ Thread thread = entry.getKey()-->Line_22 $$ sb.append(thread.getPriority())[ FD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_4 $$ sb.append("Full thread dump ")[ FD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_13 $$ sb.append("\"")[ FD ]
Line_16 $$ if (thread.getThreadGroup() != null) -->Line_18 $$ sb.append(thread.getThreadGroup().getName())[ CD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_30 $$ sb.append(elements[i])[ FD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_15 $$ sb.append("\"")[ FD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_24 $$ sb.append(thread.getId())[ FD ]
Line_2 $$ protected void printFullThreadDump() -->Line_6 $$ sb.append(" ")[ CD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_31 $$ sb.append("\n")[ FD ]
Line_2 $$ protected void printFullThreadDump() -->Line_5 $$ sb.append(System.getProperty("java.vm.name"))[ CD ]
Line_28 $$ for (int i = 0; i < elements.length; i++) -->Line_29 $$ sb.append("\t")[ CD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_35 $$ System.out.println(sb)[ FD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_7 $$ sb.append(System.getProperty("java.vm.version"))[ FD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_21 $$ sb.append(", priority=")[ FD ]
Line_28 $$ for (int i = 0; i < elements.length; i++) -->Line_31 $$ sb.append("\n")[ CD ]
Line_10 $$ for (Map.Entry<Thread, StackTraceElement[]> entry : stackTraces.entrySet()) -->Line_11 $$ Thread thread = entry.getKey()[ FD ]
Line_2 $$ protected void printFullThreadDump() -->Line_7 $$ sb.append(System.getProperty("java.vm.version"))[ CD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_29 $$ sb.append("\t")[ FD ]
Line_2 $$ protected void printFullThreadDump() -->Line_9 $$ Map<Thread, StackTraceElement[]> stackTraces = Thread.getAllStackTraces()[ CD ]
