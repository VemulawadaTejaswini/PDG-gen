Line_8 $$ MiniDFSCluster cluster = null-->Line_12 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()[ FD ]
Line_8 $$ MiniDFSCluster cluster = null-->Line_37 $$ cluster.shutdown()[ FD ]
Line_8 $$ MiniDFSCluster cluster = null-->Line_31 $$ while (!cluster.getNameNode().isInSafeMode() && Time.now() < startMillis + (60 * 1000)) [ FD ]
Line_12 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()-->Line_34 $$ assertTrue("NN should be in safe mode after resources crossed threshold", cluster.getNameNode().isInSafeMode())[ FD ]
Line_12 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()-->Line_31 $$ while (!cluster.getNameNode().isInSafeMode() && Time.now() < startMillis + (60 * 1000)) [ FD ]
Line_31 $$ while (!cluster.getNameNode().isInSafeMode() && Time.now() < startMillis + (60 * 1000)) -->Line_32 $$ Thread.sleep(1000)[ CD ]
Line_18 $$ boolean isNameNodeMonitorRunning = false-->Line_22 $$ isNameNodeMonitorRunning = true[ FD ]
Line_8 $$ MiniDFSCluster cluster = null-->Line_16 $$ cluster.waitActive()[ FD ]
Line_12 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()-->Line_16 $$ cluster.waitActive()[ FD ]
Line_8 $$ MiniDFSCluster cluster = null-->Line_36 $$ if (cluster != null)[ FD ]
Line_36 $$ if (cluster != null)-->Line_37 $$ cluster.shutdown()[ CD ]
Line_12 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()-->Line_36 $$ if (cluster != null)[ FD ]
Line_13 $$ NameNodeResourceChecker mockResourceChecker = Mockito.mock(NameNodeResourceChecker.class)-->Line_14 $$ Mockito.when(mockResourceChecker.hasAvailableDiskSpace()).thenReturn(true)[ FD ]
Line_20 $$ for (Thread runningThread : runningThreads) -->Line_21 $$ if (runningThread.toString().startsWith("Thread[" + name)) [ FD ]
Line_13 $$ NameNodeResourceChecker mockResourceChecker = Mockito.mock(NameNodeResourceChecker.class)-->Line_15 $$ cluster.getNameNode().getNamesystem().nnResourceChecker = mockResourceChecker[ FD ]
Line_22 $$ isNameNodeMonitorRunning = true-->Line_26 $$ assertTrue("NN resource monitor should be running", isNameNodeMonitorRunning)[ FD ]
Line_13 $$ NameNodeResourceChecker mockResourceChecker = Mockito.mock(NameNodeResourceChecker.class)-->Line_28 $$ Mockito.when(mockResourceChecker.hasAvailableDiskSpace()).thenReturn(false)[ FD ]
Line_21 $$ if (runningThread.toString().startsWith("Thread[" + name)) -->Line_22 $$ isNameNodeMonitorRunning = true[ CD ]
Line_12 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()-->Line_37 $$ cluster.shutdown()[ FD ]
Line_8 $$ MiniDFSCluster cluster = null-->Line_15 $$ cluster.getNameNode().getNamesystem().nnResourceChecker = mockResourceChecker[ FD ]
Line_12 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()-->Line_15 $$ cluster.getNameNode().getNamesystem().nnResourceChecker = mockResourceChecker[ FD ]
Line_8 $$ MiniDFSCluster cluster = null-->Line_27 $$ assertFalse("NN should not presently be in safe mode", cluster.getNameNode().isInSafeMode())[ FD ]
Line_18 $$ boolean isNameNodeMonitorRunning = false-->Line_26 $$ assertTrue("NN resource monitor should be running", isNameNodeMonitorRunning)[ FD ]
Line_12 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()-->Line_27 $$ assertFalse("NN should not presently be in safe mode", cluster.getNameNode().isInSafeMode())[ FD ]
Line_8 $$ MiniDFSCluster cluster = null-->Line_34 $$ assertTrue("NN should be in safe mode after resources crossed threshold", cluster.getNameNode().isInSafeMode())[ FD ]
