Line_7 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()-->Line_11 $$ cluster.waitActive()[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_10 $$ cluster.getNameNode().getNamesystem().nnResourceChecker = mockResourceChecker[ FD ]
Line_2 $$ public void testCheckThatNameNodeResourceMonitorIsRunning() throws IOException, InterruptedException -->Line_3 $$ MiniDFSCluster cluster = null[ CD ]
Line_13 $$ boolean isNameNodeMonitorRunning = false-->Line_17 $$ isNameNodeMonitorRunning = true[ FD ]
Line_16 $$ if (runningThread.toString().startsWith("Thread[" + name)) -->Line_17 $$ isNameNodeMonitorRunning = true[ CD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_25 $$ while (!cluster.getNameNode().isInSafeMode() && Time.now() < startMillis + (60 * 1000)) [ FD ]
Line_25 $$ while (!cluster.getNameNode().isInSafeMode() && Time.now() < startMillis + (60 * 1000)) -->Line_26 $$ Thread.sleep(1000)[ CD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_28 $$ assertTrue("NN should be in safe mode after resources crossed threshold", cluster.getNameNode().isInSafeMode())[ FD ]
Line_7 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()-->Line_31 $$ cluster.shutdown()[ FD ]
Line_7 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()-->Line_10 $$ cluster.getNameNode().getNamesystem().nnResourceChecker = mockResourceChecker[ FD ]
Line_7 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()-->Line_28 $$ assertTrue("NN should be in safe mode after resources crossed threshold", cluster.getNameNode().isInSafeMode())[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_31 $$ cluster.shutdown()[ FD ]
Line_13 $$ boolean isNameNodeMonitorRunning = false-->Line_21 $$ assertTrue("NN resource monitor should be running", isNameNodeMonitorRunning)[ FD ]
Line_7 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()-->Line_22 $$ assertFalse("NN should not presently be in safe mode", cluster.getNameNode().isInSafeMode())[ FD ]
Line_15 $$ for (Thread runningThread : runningThreads) -->Line_16 $$ if (runningThread.toString().startsWith("Thread[" + name)) [ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_30 $$ if (cluster != null)[ FD ]
Line_8 $$ NameNodeResourceChecker mockResourceChecker = Mockito.mock(NameNodeResourceChecker.class)-->Line_10 $$ cluster.getNameNode().getNamesystem().nnResourceChecker = mockResourceChecker[ FD ]
Line_7 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()-->Line_30 $$ if (cluster != null)[ FD ]
Line_8 $$ NameNodeResourceChecker mockResourceChecker = Mockito.mock(NameNodeResourceChecker.class)-->Line_9 $$ Mockito.when(mockResourceChecker.hasAvailableDiskSpace()).thenReturn(true)[ FD ]
Line_8 $$ NameNodeResourceChecker mockResourceChecker = Mockito.mock(NameNodeResourceChecker.class)-->Line_23 $$ Mockito.when(mockResourceChecker.hasAvailableDiskSpace()).thenReturn(false)[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_7 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()[ FD ]
Line_7 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()-->Line_25 $$ while (!cluster.getNameNode().isInSafeMode() && Time.now() < startMillis + (60 * 1000)) [ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_22 $$ assertFalse("NN should not presently be in safe mode", cluster.getNameNode().isInSafeMode())[ FD ]
Line_30 $$ if (cluster != null)-->Line_31 $$ cluster.shutdown()[ CD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_11 $$ cluster.waitActive()[ FD ]
Line_17 $$ isNameNodeMonitorRunning = true-->Line_21 $$ assertTrue("NN resource monitor should be running", isNameNodeMonitorRunning)[ FD ]
