Line_4 $$ AnnotatedElement annotationTarget = null-->Line_8 $$ annotationTarget = field[ FD ]
Line_7 $$ if (field != null && field.getAnnotation(annotationType) != null) -->Line_8 $$ annotationTarget = field[ CD ]
Line_8 $$ annotationTarget = field-->Line_10 $$ if (annotationTarget == null) [ FD ]
Line_2 $$ private void attachValidationAction(PropertyAnnotationHandler handler, PropertyInfo propertyInfo, String fieldName, Method method, Field field) -->Line_3 $$ Class<? extends Annotation> annotationType = handler.getAnnotationType()[ CD ]
Line_2 $$ private void attachValidationAction(PropertyAnnotationHandler handler, PropertyInfo propertyInfo, String fieldName, Method method, Field field) -->Line_5 $$ if (method.getAnnotation(annotationType) != null) [ FD ]
Line_10 $$ if (annotationTarget == null) -->Line_11 $$ return[ CD ]
Line_8 $$ annotationTarget = field-->Line_13 $$ Annotation optional = annotationTarget.getAnnotation(org.gradle.api.tasks.Optional.class)[ FD ]
Line_2 $$ private void attachValidationAction(PropertyAnnotationHandler handler, PropertyInfo propertyInfo, String fieldName, Method method, Field field) -->Line_5 $$ if (method.getAnnotation(annotationType) != null) [ CD ]
Line_6 $$ annotationTarget = method-->Line_10 $$ if (annotationTarget == null) [ FD ]
Line_2 $$ private void attachValidationAction(PropertyAnnotationHandler handler, PropertyInfo propertyInfo, String fieldName, Method method, Field field) -->Line_8 $$ annotationTarget = field[ FD ]
Line_5 $$ if (method.getAnnotation(annotationType) != null) -->Line_6 $$ annotationTarget = method[ CD ]
Line_2 $$ private void attachValidationAction(PropertyAnnotationHandler handler, PropertyInfo propertyInfo, String fieldName, Method method, Field field) -->Line_4 $$ AnnotatedElement annotationTarget = null[ CD ]
Line_5 $$ if (method.getAnnotation(annotationType) != null) -->Line_7 $$ if (field != null && field.getAnnotation(annotationType) != null) [ CD ]
Line_6 $$ annotationTarget = method-->Line_8 $$ annotationTarget = field[ FD ]
Line_4 $$ AnnotatedElement annotationTarget = null-->Line_13 $$ Annotation optional = annotationTarget.getAnnotation(org.gradle.api.tasks.Optional.class)[ FD ]
Line_3 $$ Class<? extends Annotation> annotationType = handler.getAnnotationType()-->Line_7 $$ if (field != null && field.getAnnotation(annotationType) != null) [ FD ]
Line_4 $$ AnnotatedElement annotationTarget = null-->Line_10 $$ if (annotationTarget == null) [ FD ]
Line_2 $$ private void attachValidationAction(PropertyAnnotationHandler handler, PropertyInfo propertyInfo, String fieldName, Method method, Field field) -->Line_3 $$ Class<? extends Annotation> annotationType = handler.getAnnotationType()[ FD ]
Line_3 $$ Class<? extends Annotation> annotationType = handler.getAnnotationType()-->Line_5 $$ if (method.getAnnotation(annotationType) != null) [ FD ]
Line_2 $$ private void attachValidationAction(PropertyAnnotationHandler handler, PropertyInfo propertyInfo, String fieldName, Method method, Field field) -->Line_14 $$ if (optional == null) [ CD ]
Line_2 $$ private void attachValidationAction(PropertyAnnotationHandler handler, PropertyInfo propertyInfo, String fieldName, Method method, Field field) -->Line_13 $$ Annotation optional = annotationTarget.getAnnotation(org.gradle.api.tasks.Optional.class)[ CD ]
Line_2 $$ private void attachValidationAction(PropertyAnnotationHandler handler, PropertyInfo propertyInfo, String fieldName, Method method, Field field) -->Line_7 $$ if (field != null && field.getAnnotation(annotationType) != null) [ FD ]
Line_13 $$ Annotation optional = annotationTarget.getAnnotation(org.gradle.api.tasks.Optional.class)-->Line_14 $$ if (optional == null) [ FD ]
Line_2 $$ private void attachValidationAction(PropertyAnnotationHandler handler, PropertyInfo propertyInfo, String fieldName, Method method, Field field) -->Line_15 $$ propertyInfo.setNotNullValidator(notNullValidator)[ FD ]
Line_4 $$ AnnotatedElement annotationTarget = null-->Line_6 $$ annotationTarget = method[ FD ]
Line_2 $$ private void attachValidationAction(PropertyAnnotationHandler handler, PropertyInfo propertyInfo, String fieldName, Method method, Field field) -->Line_17 $$ propertyInfo.attachActions(handler)[ CD ]
Line_2 $$ private void attachValidationAction(PropertyAnnotationHandler handler, PropertyInfo propertyInfo, String fieldName, Method method, Field field) -->Line_17 $$ propertyInfo.attachActions(handler)[ FD ]
Line_2 $$ private void attachValidationAction(PropertyAnnotationHandler handler, PropertyInfo propertyInfo, String fieldName, Method method, Field field) -->Line_6 $$ annotationTarget = method[ FD ]
Line_2 $$ private void attachValidationAction(PropertyAnnotationHandler handler, PropertyInfo propertyInfo, String fieldName, Method method, Field field) -->Line_10 $$ if (annotationTarget == null) [ CD ]
Line_14 $$ if (optional == null) -->Line_15 $$ propertyInfo.setNotNullValidator(notNullValidator)[ CD ]
Line_6 $$ annotationTarget = method-->Line_13 $$ Annotation optional = annotationTarget.getAnnotation(org.gradle.api.tasks.Optional.class)[ FD ]
