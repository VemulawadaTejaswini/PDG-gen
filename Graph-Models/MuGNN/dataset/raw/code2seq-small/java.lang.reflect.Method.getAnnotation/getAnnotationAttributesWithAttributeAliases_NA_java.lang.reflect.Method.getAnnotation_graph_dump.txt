Line_12 $$ webMapping = method.getAnnotation(WebMapping.class)-->Line_20 $$ webMapping = method.getAnnotation(WebMapping.class)[ FD ]
Line_2 $$ public void getAnnotationAttributesWithAttributeAliases() throws Exception -->Line_14 $$ assertNotNull(attributes)[ CD ]
Line_2 $$ public void getAnnotationAttributesWithAttributeAliases() throws Exception -->Line_17 $$ assertEquals("value attribute: ", "/test", attributes.getString(VALUE))[ CD ]
Line_2 $$ public void getAnnotationAttributesWithAttributeAliases() throws Exception -->Line_25 $$ getAnnotationAttributes(webMapping)[ CD ]
Line_2 $$ public void getAnnotationAttributesWithAttributeAliases() throws Exception -->Line_8 $$ assertEquals("name attribute: ", "foo", attributes.getString("name"))[ CD ]
Line_5 $$ AnnotationAttributes attributes = (AnnotationAttributes) getAnnotationAttributes(webMapping)-->Line_18 $$ assertEquals("path attribute: ", "/test", attributes.getString("path"))[ FD ]
Line_2 $$ public void getAnnotationAttributesWithAttributeAliases() throws Exception -->Line_16 $$ assertEquals("name attribute: ", "bar", attributes.getString("name"))[ CD ]
Line_2 $$ public void getAnnotationAttributesWithAttributeAliases() throws Exception -->Line_22 $$ exception.expectMessage(containsString("attribute 'value' and its alias 'path'"))[ CD ]
Line_2 $$ public void getAnnotationAttributesWithAttributeAliases() throws Exception -->Line_10 $$ assertEquals("path attribute: ", "/test", attributes.getString("path"))[ CD ]
Line_13 $$ attributes = (AnnotationAttributes) getAnnotationAttributes(webMapping)-->Line_14 $$ assertNotNull(attributes)[ FD ]
Line_3 $$ Method method = WebController.class.getMethod("handleMappedWithValueAttribute")-->Line_12 $$ webMapping = method.getAnnotation(WebMapping.class)[ FD ]
Line_13 $$ attributes = (AnnotationAttributes) getAnnotationAttributes(webMapping)-->Line_15 $$ assertEquals(WebMapping.class, attributes.annotationType())[ FD ]
Line_2 $$ public void getAnnotationAttributesWithAttributeAliases() throws Exception -->Line_7 $$ assertEquals(WebMapping.class, attributes.annotationType())[ CD ]
Line_5 $$ AnnotationAttributes attributes = (AnnotationAttributes) getAnnotationAttributes(webMapping)-->Line_16 $$ assertEquals("name attribute: ", "bar", attributes.getString("name"))[ FD ]
Line_3 $$ Method method = WebController.class.getMethod("handleMappedWithValueAttribute")-->Line_4 $$ WebMapping webMapping = method.getAnnotation(WebMapping.class)[ FD ]
Line_4 $$ WebMapping webMapping = method.getAnnotation(WebMapping.class)-->Line_13 $$ attributes = (AnnotationAttributes) getAnnotationAttributes(webMapping)[ FD ]
Line_2 $$ public void getAnnotationAttributesWithAttributeAliases() throws Exception -->Line_12 $$ webMapping = method.getAnnotation(WebMapping.class)[ CD ]
Line_2 $$ public void getAnnotationAttributesWithAttributeAliases() throws Exception -->Line_20 $$ webMapping = method.getAnnotation(WebMapping.class)[ CD ]
Line_5 $$ AnnotationAttributes attributes = (AnnotationAttributes) getAnnotationAttributes(webMapping)-->Line_6 $$ assertNotNull(attributes)[ FD ]
Line_4 $$ WebMapping webMapping = method.getAnnotation(WebMapping.class)-->Line_20 $$ webMapping = method.getAnnotation(WebMapping.class)[ FD ]
Line_20 $$ webMapping = method.getAnnotation(WebMapping.class)-->Line_25 $$ getAnnotationAttributes(webMapping)[ FD ]
Line_3 $$ Method method = WebController.class.getMethod("handleMappedWithValueAttribute")-->Line_11 $$ method = WebController.class.getMethod("handleMappedWithPathAttribute")[ FD ]
Line_2 $$ public void getAnnotationAttributesWithAttributeAliases() throws Exception -->Line_21 $$ exception.expect(AnnotationConfigurationException.class)[ CD ]
Line_2 $$ public void getAnnotationAttributesWithAttributeAliases() throws Exception -->Line_9 $$ assertEquals("value attribute: ", "/test", attributes.getString(VALUE))[ CD ]
Line_5 $$ AnnotationAttributes attributes = (AnnotationAttributes) getAnnotationAttributes(webMapping)-->Line_17 $$ assertEquals("value attribute: ", "/test", attributes.getString(VALUE))[ FD ]
Line_2 $$ public void getAnnotationAttributesWithAttributeAliases() throws Exception -->Line_6 $$ assertNotNull(attributes)[ CD ]
Line_2 $$ public void getAnnotationAttributesWithAttributeAliases() throws Exception -->Line_19 $$ method = WebController.class.getMethod("handleMappedWithDifferentPathAndValueAttributes")[ CD ]
Line_2 $$ public void getAnnotationAttributesWithAttributeAliases() throws Exception -->Line_4 $$ WebMapping webMapping = method.getAnnotation(WebMapping.class)[ CD ]
Line_12 $$ webMapping = method.getAnnotation(WebMapping.class)-->Line_25 $$ getAnnotationAttributes(webMapping)[ FD ]
Line_5 $$ AnnotationAttributes attributes = (AnnotationAttributes) getAnnotationAttributes(webMapping)-->Line_7 $$ assertEquals(WebMapping.class, attributes.annotationType())[ FD ]
Line_11 $$ method = WebController.class.getMethod("handleMappedWithPathAttribute")-->Line_12 $$ webMapping = method.getAnnotation(WebMapping.class)[ FD ]
Line_5 $$ AnnotationAttributes attributes = (AnnotationAttributes) getAnnotationAttributes(webMapping)-->Line_8 $$ assertEquals("name attribute: ", "foo", attributes.getString("name"))[ FD ]
Line_13 $$ attributes = (AnnotationAttributes) getAnnotationAttributes(webMapping)-->Line_18 $$ assertEquals("path attribute: ", "/test", attributes.getString("path"))[ FD ]
Line_2 $$ public void getAnnotationAttributesWithAttributeAliases() throws Exception -->Line_18 $$ assertEquals("path attribute: ", "/test", attributes.getString("path"))[ CD ]
Line_4 $$ WebMapping webMapping = method.getAnnotation(WebMapping.class)-->Line_25 $$ getAnnotationAttributes(webMapping)[ FD ]
Line_5 $$ AnnotationAttributes attributes = (AnnotationAttributes) getAnnotationAttributes(webMapping)-->Line_10 $$ assertEquals("path attribute: ", "/test", attributes.getString("path"))[ FD ]
Line_5 $$ AnnotationAttributes attributes = (AnnotationAttributes) getAnnotationAttributes(webMapping)-->Line_9 $$ assertEquals("value attribute: ", "/test", attributes.getString(VALUE))[ FD ]
Line_4 $$ WebMapping webMapping = method.getAnnotation(WebMapping.class)-->Line_12 $$ webMapping = method.getAnnotation(WebMapping.class)[ FD ]
Line_13 $$ attributes = (AnnotationAttributes) getAnnotationAttributes(webMapping)-->Line_17 $$ assertEquals("value attribute: ", "/test", attributes.getString(VALUE))[ FD ]
Line_2 $$ public void getAnnotationAttributesWithAttributeAliases() throws Exception -->Line_3 $$ Method method = WebController.class.getMethod("handleMappedWithValueAttribute")[ CD ]
Line_2 $$ public void getAnnotationAttributesWithAttributeAliases() throws Exception -->Line_13 $$ attributes = (AnnotationAttributes) getAnnotationAttributes(webMapping)[ CD ]
Line_2 $$ public void getAnnotationAttributesWithAttributeAliases() throws Exception -->Line_24 $$ exception.expectMessage(endsWith("but only one is permitted."))[ CD ]
Line_2 $$ public void getAnnotationAttributesWithAttributeAliases() throws Exception -->Line_23 $$ exception.expectMessage(containsString("values of [/enigma] and [/test]"))[ CD ]
Line_2 $$ public void getAnnotationAttributesWithAttributeAliases() throws Exception -->Line_5 $$ AnnotationAttributes attributes = (AnnotationAttributes) getAnnotationAttributes(webMapping)[ CD ]
Line_2 $$ public void getAnnotationAttributesWithAttributeAliases() throws Exception -->Line_15 $$ assertEquals(WebMapping.class, attributes.annotationType())[ CD ]
Line_12 $$ webMapping = method.getAnnotation(WebMapping.class)-->Line_13 $$ attributes = (AnnotationAttributes) getAnnotationAttributes(webMapping)[ FD ]
Line_5 $$ AnnotationAttributes attributes = (AnnotationAttributes) getAnnotationAttributes(webMapping)-->Line_15 $$ assertEquals(WebMapping.class, attributes.annotationType())[ FD ]
Line_2 $$ public void getAnnotationAttributesWithAttributeAliases() throws Exception -->Line_11 $$ method = WebController.class.getMethod("handleMappedWithPathAttribute")[ CD ]
Line_4 $$ WebMapping webMapping = method.getAnnotation(WebMapping.class)-->Line_5 $$ AnnotationAttributes attributes = (AnnotationAttributes) getAnnotationAttributes(webMapping)[ FD ]
Line_5 $$ AnnotationAttributes attributes = (AnnotationAttributes) getAnnotationAttributes(webMapping)-->Line_13 $$ attributes = (AnnotationAttributes) getAnnotationAttributes(webMapping)[ FD ]
Line_13 $$ attributes = (AnnotationAttributes) getAnnotationAttributes(webMapping)-->Line_16 $$ assertEquals("name attribute: ", "bar", attributes.getString("name"))[ FD ]
Line_3 $$ Method method = WebController.class.getMethod("handleMappedWithValueAttribute")-->Line_19 $$ method = WebController.class.getMethod("handleMappedWithDifferentPathAndValueAttributes")[ FD ]
Line_19 $$ method = WebController.class.getMethod("handleMappedWithDifferentPathAndValueAttributes")-->Line_20 $$ webMapping = method.getAnnotation(WebMapping.class)[ FD ]
Line_5 $$ AnnotationAttributes attributes = (AnnotationAttributes) getAnnotationAttributes(webMapping)-->Line_14 $$ assertNotNull(attributes)[ FD ]
Line_3 $$ Method method = WebController.class.getMethod("handleMappedWithValueAttribute")-->Line_20 $$ webMapping = method.getAnnotation(WebMapping.class)[ FD ]
Line_11 $$ method = WebController.class.getMethod("handleMappedWithPathAttribute")-->Line_20 $$ webMapping = method.getAnnotation(WebMapping.class)[ FD ]
Line_11 $$ method = WebController.class.getMethod("handleMappedWithPathAttribute")-->Line_19 $$ method = WebController.class.getMethod("handleMappedWithDifferentPathAndValueAttributes")[ FD ]
