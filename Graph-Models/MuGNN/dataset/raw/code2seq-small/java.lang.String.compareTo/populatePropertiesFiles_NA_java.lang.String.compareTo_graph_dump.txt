Line_3 $$ List<String> paths = suggestPropertiesFiles()-->Line_16 $$ myPropertiesFile.setHistory(paths)[ FD ]
Line_5 $$ final String lastPath = lastUrl == null ? null : FileUtil.toSystemDependentName(VfsUtil.urlToPath(lastUrl))-->Line_8 $$ if (lastPath != null && lastPath.equals(path1))[ FD ]
Line_6 $$ Collections.sort(paths, new Comparator<String>() -->Line_8 $$ if (lastPath != null && lastPath.equals(path1))[ CD ]
Line_8 $$ if (lastPath != null && lastPath.equals(path1))-->Line_9 $$ return -1[ CD ]
Line_5 $$ final String lastPath = lastUrl == null ? null : FileUtil.toSystemDependentName(VfsUtil.urlToPath(lastUrl))-->Line_17 $$ if (lastPath != null) [ FD ]
Line_6 $$ Collections.sort(paths, new Comparator<String>() -->Line_12 $$ int r = LastSelectedPropertiesFileStore.getUseCount(path2) - LastSelectedPropertiesFileStore.getUseCount(path1)[ CD ]
Line_4 $$ final String lastUrl = suggestSelectedFileUrl(paths)-->Line_5 $$ final String lastPath = lastUrl == null ? null : FileUtil.toSystemDependentName(VfsUtil.urlToPath(lastUrl))[ FD ]
Line_2 $$ private void populatePropertiesFiles() -->Line_5 $$ final String lastPath = lastUrl == null ? null : FileUtil.toSystemDependentName(VfsUtil.urlToPath(lastUrl))[ CD ]
Line_2 $$ private void populatePropertiesFiles() -->Line_3 $$ List<String> paths = suggestPropertiesFiles()[ CD ]
Line_6 $$ Collections.sort(paths, new Comparator<String>() -->Line_13 $$ return r == 0 ? path1.compareTo(path2) : r[ CD ]
Line_2 $$ private void populatePropertiesFiles() -->Line_4 $$ final String lastUrl = suggestSelectedFileUrl(paths)[ CD ]
Line_2 $$ private void populatePropertiesFiles() -->Line_17 $$ if (lastPath != null) [ CD ]
Line_6 $$ Collections.sort(paths, new Comparator<String>() -->Line_12 $$ int r = LastSelectedPropertiesFileStore.getUseCount(path2) - LastSelectedPropertiesFileStore.getUseCount(path1)[ FD ]
Line_6 $$ Collections.sort(paths, new Comparator<String>() -->Line_13 $$ return r == 0 ? path1.compareTo(path2) : r[ FD ]
Line_5 $$ final String lastPath = lastUrl == null ? null : FileUtil.toSystemDependentName(VfsUtil.urlToPath(lastUrl))-->Line_10 $$ if (lastPath != null && lastPath.equals(path2))[ FD ]
Line_3 $$ List<String> paths = suggestPropertiesFiles()-->Line_21 $$ myPropertiesFile.setText(paths.get(0))[ FD ]
Line_5 $$ final String lastPath = lastUrl == null ? null : FileUtil.toSystemDependentName(VfsUtil.urlToPath(lastUrl))-->Line_18 $$ myPropertiesFile.setSelectedItem(lastPath)[ FD ]
Line_6 $$ Collections.sort(paths, new Comparator<String>() -->Line_10 $$ if (lastPath != null && lastPath.equals(path2))[ CD ]
Line_10 $$ if (lastPath != null && lastPath.equals(path2))-->Line_11 $$ return 1[ CD ]
Line_3 $$ List<String> paths = suggestPropertiesFiles()-->Line_4 $$ final String lastUrl = suggestSelectedFileUrl(paths)[ FD ]
Line_2 $$ private void populatePropertiesFiles() -->Line_20 $$ if (myPropertiesFile.getSelectedIndex() == -1 && !paths.isEmpty()) [ CD ]
Line_3 $$ List<String> paths = suggestPropertiesFiles()-->Line_6 $$ Collections.sort(paths, new Comparator<String>() [ FD ]
Line_3 $$ List<String> paths = suggestPropertiesFiles()-->Line_20 $$ if (myPropertiesFile.getSelectedIndex() == -1 && !paths.isEmpty()) [ FD ]
Line_2 $$ private void populatePropertiesFiles() -->Line_16 $$ myPropertiesFile.setHistory(paths)[ CD ]
Line_6 $$ Collections.sort(paths, new Comparator<String>() -->Line_8 $$ if (lastPath != null && lastPath.equals(path1))[ FD ]
Line_2 $$ private void populatePropertiesFiles() -->Line_6 $$ Collections.sort(paths, new Comparator<String>() [ CD ]
Line_20 $$ if (myPropertiesFile.getSelectedIndex() == -1 && !paths.isEmpty()) -->Line_21 $$ myPropertiesFile.setText(paths.get(0))[ CD ]
Line_17 $$ if (lastPath != null) -->Line_18 $$ myPropertiesFile.setSelectedItem(lastPath)[ CD ]
Line_6 $$ Collections.sort(paths, new Comparator<String>() -->Line_10 $$ if (lastPath != null && lastPath.equals(path2))[ FD ]
