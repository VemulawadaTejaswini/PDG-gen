Line_34 $$ if (prevMeta.priority == currentMeta.priority) -->Line_35 $$ if (prevMeta.creationDate == currentMeta.creationDate) [ CD ]
Line_31 $$ if (previous != null) -->Line_33 $$ IndexMeta currentMeta = map.get(routing.getIndex())[ CD ]
Line_6 $$ final Map<String, IndexMeta> map = new HashMap()-->Line_14 $$ map.put(indices[i].name, indices[i])[ FD ]
Line_6 $$ final Map<String, IndexMeta> map = new HashMap()-->Line_25 $$ IndexMeta indexMeta = map.get(index)[ FD ]
Line_21 $$ shards.sort(new PriorityComparator() -->Line_26 $$ return indexMeta.settings[ CD ]
Line_3 $$ RoutingNodes.UnassignedShards shards = new RoutingNodes.UnassignedShards((RoutingNodes) null)-->Line_19 $$ shards.add(TestShardRouting.newShardRouting(indexMeta.name, randomIntBetween(1, 5), null, null, null, randomBoolean(), ShardRoutingState.UNASSIGNED, randomIntBetween(0, 100), new UnassignedInfo(randomFrom(UnassignedInfo.Reason.values()), "foobar")))[ FD ]
Line_6 $$ final Map<String, IndexMeta> map = new HashMap()-->Line_33 $$ IndexMeta currentMeta = map.get(routing.getIndex())[ FD ]
Line_7 $$ for (int i = 0; i < indices.length; i++) -->Line_8 $$ if (frequently()) [ CD ]
Line_31 $$ if (previous != null) -->Line_32 $$ IndexMeta prevMeta = map.get(previous.getIndex())[ CD ]
Line_17 $$ for (int i = 0; i < numShards; i++) -->Line_18 $$ IndexMeta indexMeta = randomFrom(indices)[ CD ]
Line_7 $$ for (int i = 0; i < indices.length; i++) -->Line_9 $$ indices[i] = new IndexMeta("idx_2015_04_" + String.format(Locale.ROOT, "%02d", i), randomIntBetween(1, 1000), randomIntBetween(1, 10000))[ FD ]
Line_2 $$ public void testPriorityComparatorSort() -->Line_17 $$ for (int i = 0; i < numShards; i++) [ CD ]
Line_34 $$ if (prevMeta.priority == currentMeta.priority) -->Line_43 $$ assertTrue("priority mismatch, expected:" + currentMeta.priority + " after " + prevMeta.priority, prevMeta.priority > currentMeta.priority)[ CD ]
Line_21 $$ shards.sort(new PriorityComparator() -->Line_25 $$ IndexMeta indexMeta = map.get(index)[ CD ]
Line_31 $$ if (previous != null) -->Line_34 $$ if (prevMeta.priority == currentMeta.priority) [ CD ]
Line_7 $$ for (int i = 0; i < indices.length; i++) -->Line_17 $$ for (int i = 0; i < numShards; i++) [ FD ]
Line_3 $$ RoutingNodes.UnassignedShards shards = new RoutingNodes.UnassignedShards((RoutingNodes) null)-->Line_21 $$ shards.sort(new PriorityComparator() [ FD ]
Line_2 $$ public void testPriorityComparatorSort() -->Line_4 $$ int numIndices = randomIntBetween(3, 99)[ CD ]
Line_16 $$ int numShards = randomIntBetween(10, 100)-->Line_17 $$ for (int i = 0; i < numShards; i++) [ FD ]
Line_21 $$ shards.sort(new PriorityComparator() -->Line_25 $$ IndexMeta indexMeta = map.get(index)[ FD ]
Line_2 $$ public void testPriorityComparatorSort() -->Line_6 $$ final Map<String, IndexMeta> map = new HashMap()[ CD ]
Line_2 $$ public void testPriorityComparatorSort() -->Line_21 $$ shards.sort(new PriorityComparator() [ CD ]
Line_35 $$ if (prevMeta.creationDate == currentMeta.creationDate) -->Line_36 $$ if (prevMeta.name.equals(currentMeta.name) == false) [ CD ]
Line_7 $$ for (int i = 0; i < indices.length; i++) -->Line_14 $$ map.put(indices[i].name, indices[i])[ CD ]
Line_2 $$ public void testPriorityComparatorSort() -->Line_16 $$ int numShards = randomIntBetween(10, 100)[ CD ]
Line_17 $$ for (int i = 0; i < numShards; i++) -->Line_19 $$ shards.add(TestShardRouting.newShardRouting(indexMeta.name, randomIntBetween(1, 5), null, null, null, randomBoolean(), ShardRoutingState.UNASSIGNED, randomIntBetween(0, 100), new UnassignedInfo(randomFrom(UnassignedInfo.Reason.values()), "foobar")))[ CD ]
Line_2 $$ public void testPriorityComparatorSort() -->Line_7 $$ for (int i = 0; i < indices.length; i++) [ CD ]
Line_8 $$ if (frequently()) -->Line_9 $$ indices[i] = new IndexMeta("idx_2015_04_" + String.format(Locale.ROOT, "%02d", i), randomIntBetween(1, 1000), randomIntBetween(1, 10000))[ CD ]
Line_36 $$ if (prevMeta.name.equals(currentMeta.name) == false) -->Line_37 $$ assertTrue("indexName mismatch, expected:" + currentMeta.name + " after " + prevMeta.name + " " + prevMeta.name.compareTo(currentMeta.name), prevMeta.name.compareTo(currentMeta.name) > 0)[ CD ]
Line_35 $$ if (prevMeta.creationDate == currentMeta.creationDate) -->Line_40 $$ assertTrue("creationDate mismatch, expected:" + currentMeta.creationDate + " after " + prevMeta.creationDate, prevMeta.creationDate > currentMeta.creationDate)[ CD ]
Line_6 $$ final Map<String, IndexMeta> map = new HashMap()-->Line_32 $$ IndexMeta prevMeta = map.get(previous.getIndex())[ FD ]
Line_2 $$ public void testPriorityComparatorSort() -->Line_5 $$ IndexMeta[] indices = new IndexMeta[numIndices][ CD ]
Line_5 $$ IndexMeta[] indices = new IndexMeta[numIndices]-->Line_18 $$ IndexMeta indexMeta = randomFrom(indices)[ FD ]
Line_2 $$ public void testPriorityComparatorSort() -->Line_3 $$ RoutingNodes.UnassignedShards shards = new RoutingNodes.UnassignedShards((RoutingNodes) null)[ CD ]
