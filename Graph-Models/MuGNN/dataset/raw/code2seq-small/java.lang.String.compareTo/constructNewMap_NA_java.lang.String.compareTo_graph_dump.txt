Line_6 $$ Arrays.sort(args, new Comparator<GrNamedArgument>() -->Line_11 $$ final String l2 = o2.getLabelName()[ FD ]
Line_10 $$ final String l1 = o1.getLabelName()-->Line_13 $$ return l1.compareTo(l2)[ FD ]
Line_6 $$ Arrays.sort(args, new Comparator<GrNamedArgument>() -->Line_13 $$ return l1.compareTo(l2)[ CD ]
Line_4 $$ StringBuilder builder = new StringBuilder()-->Line_17 $$ builder.append(arg.getText()).append(",\n")[ FD ]
Line_11 $$ final String l2 = o2.getLabelName()-->Line_13 $$ return l1.compareTo(l2)[ FD ]
Line_4 $$ StringBuilder builder = new StringBuilder()-->Line_5 $$ builder.append("[")[ FD ]
Line_4 $$ StringBuilder builder = new StringBuilder()-->Line_20 $$ return (GrListOrMap) GroovyPsiElementFactory.getInstance(project).createExpressionFromText(builder)[ FD ]
Line_6 $$ Arrays.sort(args, new Comparator<GrNamedArgument>() -->Line_10 $$ final String l1 = o1.getLabelName()[ CD ]
Line_6 $$ Arrays.sort(args, new Comparator<GrNamedArgument>() -->Line_11 $$ final String l2 = o2.getLabelName()[ CD ]
Line_4 $$ StringBuilder builder = new StringBuilder()-->Line_19 $$ builder.replace(builder.length() - 2, builder.length(), "]")[ FD ]
Line_6 $$ Arrays.sort(args, new Comparator<GrNamedArgument>() -->Line_10 $$ final String l1 = o1.getLabelName()[ FD ]
