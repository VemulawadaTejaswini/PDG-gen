Line_18 $$ final ProgressIndicator indicator = ProgressManager.getInstance().getProgressIndicator()-->Line_19 $$ indicator.setText("Collecting matches...")[ FD ]
Line_15 $$ list = myResult-->Line_34 $$ Object o = list.get(i)[ FD ]
Line_25 $$ if (o1 instanceof PsiElement && o2 instanceof PsiElement) -->Line_28 $$ return String.valueOf(o1).compareTo(String.valueOf(o2))[ CD ]
Line_20 $$ Collections.sort(list, new Comparator() -->Line_24 $$ indicator.checkCanceled()[ CD ]
Line_8 $$ list = (List<?>) myXPath.selectNodes(myContextNode)-->Line_34 $$ Object o = list.get(i)[ FD ]
Line_15 $$ list = myResult-->Line_20 $$ Collections.sort(list, new Comparator() [ FD ]
Line_5 $$ final List<?> list-->Line_20 $$ Collections.sort(list, new Comparator() [ FD ]
Line_5 $$ final List<?> list-->Line_8 $$ list = (List<?>) myXPath.selectNodes(myContextNode)[ FD ]
Line_34 $$ Object o = list.get(i)-->Line_35 $$ if (o instanceof PsiElement) [ FD ]
Line_8 $$ list = (List<?>) myXPath.selectNodes(myContextNode)-->Line_15 $$ list = myResult[ FD ]
Line_5 $$ final List<?> list-->Line_42 $$ list.clear()[ FD ]
Line_32 $$ for (int i = 0; i < size; i++) -->Line_35 $$ if (o instanceof PsiElement) [ CD ]
Line_25 $$ if (o1 instanceof PsiElement && o2 instanceof PsiElement) -->Line_26 $$ return ((PsiElement) o1).getTextRange().getStartOffset() - ((PsiElement) o2).getTextRange().getStartOffset()[ CD ]
Line_32 $$ for (int i = 0; i < size; i++) -->Line_34 $$ Object o = list.get(i)[ FD ]
Line_35 $$ if (o instanceof PsiElement) -->Line_37 $$ processor.process(new UsageInfo2UsageAdapter(new UsageInfo(element)))[ CD ]
Line_18 $$ final ProgressIndicator indicator = ProgressManager.getInstance().getProgressIndicator()-->Line_24 $$ indicator.checkCanceled()[ FD ]
Line_18 $$ final ProgressIndicator indicator = ProgressManager.getInstance().getProgressIndicator()-->Line_40 $$ indicator.setFraction(i / (double) size)[ FD ]
Line_8 $$ list = (List<?>) myXPath.selectNodes(myContextNode)-->Line_42 $$ list.clear()[ FD ]
Line_35 $$ if (o instanceof PsiElement) -->Line_38 $$ indicator.setText2(element.getContainingFile().getName())[ CD ]
Line_17 $$ final int size = list.size()-->Line_32 $$ for (int i = 0; i < size; i++) [ FD ]
Line_18 $$ final ProgressIndicator indicator = ProgressManager.getInstance().getProgressIndicator()-->Line_33 $$ indicator.checkCanceled()[ FD ]
Line_32 $$ for (int i = 0; i < size; i++) -->Line_40 $$ indicator.setFraction(i / (double) size)[ CD ]
Line_6 $$ if (myResult.isEmpty()) -->Line_15 $$ list = myResult[ CD ]
Line_5 $$ final List<?> list-->Line_17 $$ final int size = list.size()[ FD ]
Line_15 $$ list = myResult-->Line_17 $$ final int size = list.size()[ FD ]
Line_36 $$ final PsiElement element = (PsiElement) o-->Line_38 $$ indicator.setText2(element.getContainingFile().getName())[ FD ]
Line_8 $$ list = (List<?>) myXPath.selectNodes(myContextNode)-->Line_17 $$ final int size = list.size()[ FD ]
Line_15 $$ list = myResult-->Line_42 $$ list.clear()[ FD ]
Line_5 $$ final List<?> list-->Line_34 $$ Object o = list.get(i)[ FD ]
Line_32 $$ for (int i = 0; i < size; i++) -->Line_33 $$ indicator.checkCanceled()[ CD ]
Line_5 $$ final List<?> list-->Line_15 $$ list = myResult[ FD ]
Line_8 $$ list = (List<?>) myXPath.selectNodes(myContextNode)-->Line_20 $$ Collections.sort(list, new Comparator() [ FD ]
Line_20 $$ Collections.sort(list, new Comparator() -->Line_28 $$ return String.valueOf(o1).compareTo(String.valueOf(o2))[ FD ]
Line_35 $$ if (o instanceof PsiElement) -->Line_36 $$ final PsiElement element = (PsiElement) o[ CD ]
Line_32 $$ for (int i = 0; i < size; i++) -->Line_34 $$ Object o = list.get(i)[ CD ]
Line_20 $$ Collections.sort(list, new Comparator() -->Line_25 $$ if (o1 instanceof PsiElement && o2 instanceof PsiElement) [ CD ]
Line_18 $$ final ProgressIndicator indicator = ProgressManager.getInstance().getProgressIndicator()-->Line_38 $$ indicator.setText2(element.getContainingFile().getName())[ FD ]
