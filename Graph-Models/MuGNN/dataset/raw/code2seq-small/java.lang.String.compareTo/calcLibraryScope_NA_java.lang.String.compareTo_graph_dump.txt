Line_3 $$ List<Module> modulesLibraryUsedIn = new ArrayList<Module>()-->Line_13 $$ modulesLibraryUsedIn.add(entry.getOwnerModule())[ FD ]
Line_12 $$ if (entry instanceof ModuleOrderEntry) -->Line_13 $$ modulesLibraryUsedIn.add(entry.getOwnerModule())[ CD ]
Line_27 $$ return new DelegatingGlobalSearchScope(allCandidates, preferred) -->Line_29 $$ boolean c1 = preferred.contains(file1)[ CD ]
Line_2 $$ private GlobalSearchScope calcLibraryScope(@NotNull List<OrderEntry> orderEntries) -->Line_25 $$ if (lib != null) [ CD ]
Line_9 $$ if (entry instanceof LibraryOrderEntry) -->Line_11 $$ modulesLibraryUsedIn.add(entry.getOwnerModule())[ CD ]
Line_5 $$ for (OrderEntry entry : orderEntries) -->Line_13 $$ modulesLibraryUsedIn.add(entry.getOwnerModule())[ FD ]
Line_5 $$ for (OrderEntry entry : orderEntries) -->Line_9 $$ if (entry instanceof LibraryOrderEntry) [ FD ]
Line_2 $$ private GlobalSearchScope calcLibraryScope(@NotNull List<OrderEntry> orderEntries) -->Line_23 $$ Module[] uniques = uniquesList.toArray(new Module[uniquesList.size()])[ CD ]
Line_5 $$ for (OrderEntry entry : orderEntries) -->Line_6 $$ if (entry instanceof JdkOrderEntry) [ FD ]
Line_2 $$ private GlobalSearchScope calcLibraryScope(@NotNull List<OrderEntry> orderEntries) -->Line_4 $$ LibraryOrderEntry lib = null[ CD ]
Line_27 $$ return new DelegatingGlobalSearchScope(allCandidates, preferred) -->Line_35 $$ return super.compare(file1, file2)[ FD ]
Line_27 $$ return new DelegatingGlobalSearchScope(allCandidates, preferred) -->Line_29 $$ boolean c1 = preferred.contains(file1)[ FD ]
Line_5 $$ for (OrderEntry entry : orderEntries) -->Line_12 $$ if (entry instanceof ModuleOrderEntry) [ FD ]
Line_4 $$ LibraryOrderEntry lib = null-->Line_10 $$ lib = (LibraryOrderEntry) entry[ FD ]
Line_2 $$ private GlobalSearchScope calcLibraryScope(@NotNull List<OrderEntry> orderEntries) -->Line_22 $$ List<Module> uniquesList = ContainerUtil.removeDuplicatesFromSorted(modulesLibraryUsedIn, comparator)[ CD ]
Line_16 $$ Comparator<Module> comparator = new Comparator<Module>() -->Line_21 $$ Collections.sort(modulesLibraryUsedIn, comparator)[ FD ]
Line_31 $$ if (c1 && !c2)-->Line_32 $$ return 1[ CD ]
Line_3 $$ List<Module> modulesLibraryUsedIn = new ArrayList<Module>()-->Line_11 $$ modulesLibraryUsedIn.add(entry.getOwnerModule())[ FD ]
Line_33 $$ if (c2 && !c1)-->Line_34 $$ return -1[ CD ]
Line_6 $$ if (entry instanceof JdkOrderEntry) -->Line_7 $$ return getScopeForSdk((JdkOrderEntry) entry)[ CD ]
Line_2 $$ private GlobalSearchScope calcLibraryScope(@NotNull List<OrderEntry> orderEntries) -->Line_39 $$ return allCandidates[ CD ]
Line_27 $$ return new DelegatingGlobalSearchScope(allCandidates, preferred) -->Line_31 $$ if (c1 && !c2)[ CD ]
Line_29 $$ boolean c1 = preferred.contains(file1)-->Line_31 $$ if (c1 && !c2)[ FD ]
Line_2 $$ private GlobalSearchScope calcLibraryScope(@NotNull List<OrderEntry> orderEntries) -->Line_16 $$ Comparator<Module> comparator = new Comparator<Module>() [ CD ]
Line_4 $$ LibraryOrderEntry lib = null-->Line_25 $$ if (lib != null) [ FD ]
Line_5 $$ for (OrderEntry entry : orderEntries) -->Line_11 $$ modulesLibraryUsedIn.add(entry.getOwnerModule())[ FD ]
Line_9 $$ if (entry instanceof LibraryOrderEntry) -->Line_12 $$ if (entry instanceof ModuleOrderEntry) [ CD ]
Line_3 $$ List<Module> modulesLibraryUsedIn = new ArrayList<Module>()-->Line_21 $$ Collections.sort(modulesLibraryUsedIn, comparator)[ FD ]
Line_2 $$ private GlobalSearchScope calcLibraryScope(@NotNull List<OrderEntry> orderEntries) -->Line_24 $$ GlobalSearchScope allCandidates = getScopeForLibraryUsedIn(uniques)[ CD ]
Line_27 $$ return new DelegatingGlobalSearchScope(allCandidates, preferred) -->Line_30 $$ boolean c2 = preferred.contains(file2)[ CD ]
Line_3 $$ List<Module> modulesLibraryUsedIn = new ArrayList<Module>()-->Line_22 $$ List<Module> uniquesList = ContainerUtil.removeDuplicatesFromSorted(modulesLibraryUsedIn, comparator)[ FD ]
Line_10 $$ lib = (LibraryOrderEntry) entry-->Line_25 $$ if (lib != null) [ FD ]
Line_29 $$ boolean c1 = preferred.contains(file1)-->Line_33 $$ if (c2 && !c1)[ FD ]
Line_2 $$ private GlobalSearchScope calcLibraryScope(@NotNull List<OrderEntry> orderEntries) -->Line_3 $$ List<Module> modulesLibraryUsedIn = new ArrayList<Module>()[ CD ]
Line_27 $$ return new DelegatingGlobalSearchScope(allCandidates, preferred) -->Line_33 $$ if (c2 && !c1)[ CD ]
Line_30 $$ boolean c2 = preferred.contains(file2)-->Line_33 $$ if (c2 && !c1)[ FD ]
Line_16 $$ Comparator<Module> comparator = new Comparator<Module>() -->Line_18 $$ return o1.getName().compareTo(o2.getName())[ CD ]
Line_27 $$ return new DelegatingGlobalSearchScope(allCandidates, preferred) -->Line_35 $$ return super.compare(file1, file2)[ CD ]
Line_16 $$ Comparator<Module> comparator = new Comparator<Module>() -->Line_18 $$ return o1.getName().compareTo(o2.getName())[ FD ]
Line_30 $$ boolean c2 = preferred.contains(file2)-->Line_31 $$ if (c1 && !c2)[ FD ]
Line_9 $$ if (entry instanceof LibraryOrderEntry) -->Line_10 $$ lib = (LibraryOrderEntry) entry[ CD ]
Line_16 $$ Comparator<Module> comparator = new Comparator<Module>() -->Line_22 $$ List<Module> uniquesList = ContainerUtil.removeDuplicatesFromSorted(modulesLibraryUsedIn, comparator)[ FD ]
Line_27 $$ return new DelegatingGlobalSearchScope(allCandidates, preferred) -->Line_30 $$ boolean c2 = preferred.contains(file2)[ FD ]
Line_25 $$ if (lib != null) -->Line_27 $$ return new DelegatingGlobalSearchScope(allCandidates, preferred) [ CD ]
Line_2 $$ private GlobalSearchScope calcLibraryScope(@NotNull List<OrderEntry> orderEntries) -->Line_21 $$ Collections.sort(modulesLibraryUsedIn, comparator)[ CD ]
