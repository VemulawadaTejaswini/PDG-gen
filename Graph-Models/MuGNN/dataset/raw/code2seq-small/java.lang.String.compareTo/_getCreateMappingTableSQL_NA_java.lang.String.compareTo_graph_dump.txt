Line_65 $$ if (col.isPrimary()) -->Line_67 $$ if (colType.equals("Date") || colType.equals("Map") || colType.equals("String")) [ CD ]
Line_77 $$ for (int j = 0; j < pkList.size(); j++) -->Line_78 $$ EntityColumn col = pkList.get(j)[ FD ]
Line_29 $$ for (int i = 0; i < pkList.size(); i++) -->Line_30 $$ EntityColumn col = pkList.get(i)[ FD ]
Line_47 $$ int maxLength = getMaxLength(_packagePath + ".model." + entity.getName(), colName)-->Line_55 $$ if (maxLength == 4000) [ FD ]
Line_29 $$ for (int i = 0; i < pkList.size(); i++) -->Line_36 $$ if (StringUtil.equalsIgnoreCase(colType, "boolean")) [ CD ]
Line_2 $$ private String _getCreateMappingTableSQL(EntityMapping entityMapping) throws Exception -->Line_4 $$ for (int i = 0; i < entities.length; i++) [ CD ]
Line_10 $$ Arrays.sort(entities, new Comparator<Entity>() -->Line_17 $$ if (Validator.equals(entity2.getPackagePath(), "com.liferay.portal") && name2.equals("Company")) [ FD ]
Line_32 $$ String colType = col.getType()-->Line_40 $$ if (colType.equals("int") || colType.equals("Integer") || StringUtil.equalsIgnoreCase(colType, "short")) [ FD ]
Line_12 $$ String name1 = entity1.getName()-->Line_20 $$ return name1.compareTo(name2)[ FD ]
Line_17 $$ if (Validator.equals(entity2.getPackagePath(), "com.liferay.portal") && name2.equals("Company")) -->Line_18 $$ return 1[ CD ]
Line_48 $$ if (col.isLocalized()) -->Line_49 $$ maxLength = 4000[ CD ]
Line_10 $$ Arrays.sort(entities, new Comparator<Entity>() -->Line_14 $$ if (Validator.equals(entity1.getPackagePath(), "com.liferay.portal") && name1.equals("Company")) [ FD ]
Line_77 $$ for (int j = 0; j < pkList.size(); j++) -->Line_80 $$ if ((i != 1) || (j != 0)) [ CD ]
Line_77 $$ for (int j = 0; j < pkList.size(); j++) -->Line_83 $$ sb.append(colDBName)[ CD ]
Line_32 $$ String colType = col.getType()-->Line_67 $$ if (colType.equals("Date") || colType.equals("Map") || colType.equals("String")) [ FD ]
Line_29 $$ for (int i = 0; i < pkList.size(); i++) -->Line_34 $$ sb.append(col.getDBName())[ CD ]
Line_74 $$ for (int i = 1; i < entities.length; i++) -->Line_75 $$ Entity entity = entities[i][ CD ]
Line_10 $$ Arrays.sort(entities, new Comparator<Entity>() -->Line_13 $$ String name2 = entity2.getName()[ FD ]
Line_4 $$ for (int i = 0; i < entities.length; i++) -->Line_29 $$ for (int i = 0; i < pkList.size(); i++) [ FD ]
Line_67 $$ if (colType.equals("Date") || colType.equals("Map") || colType.equals("String")) -->Line_68 $$ sb.append(" null")[ CD ]
Line_42 $$ if (StringUtil.equalsIgnoreCase(colType, "long")) -->Line_44 $$ if (colType.equals("Map")) [ CD ]
Line_49 $$ maxLength = 4000-->Line_53 $$ sb.append(maxLength)[ FD ]
Line_30 $$ EntityColumn col = pkList.get(i)-->Line_31 $$ String colName = col.getName()[ FD ]
Line_76 $$ List<EntityColumn> pkList = entity.getPKList()-->Line_78 $$ EntityColumn col = pkList.get(j)[ FD ]
Line_49 $$ maxLength = 4000-->Line_55 $$ if (maxLength == 4000) [ FD ]
Line_10 $$ Arrays.sort(entities, new Comparator<Entity>() -->Line_12 $$ String name1 = entity1.getName()[ CD ]
Line_47 $$ int maxLength = getMaxLength(_packagePath + ".model." + entity.getName(), colName)-->Line_53 $$ sb.append(maxLength)[ FD ]
Line_4 $$ for (int i = 0; i < entities.length; i++) -->Line_5 $$ entities[i] = getEntity(entityMapping.getEntity(i))[ FD ]
Line_51 $$ if (maxLength < 4000) -->Line_54 $$ sb.append(")")[ CD ]
Line_2 $$ private String _getCreateMappingTableSQL(EntityMapping entityMapping) throws Exception -->Line_3 $$ Entity[] entities = new Entity[3][ CD ]
Line_30 $$ EntityColumn col = pkList.get(i)-->Line_34 $$ sb.append(col.getDBName())[ FD ]
Line_2 $$ private String _getCreateMappingTableSQL(EntityMapping entityMapping) throws Exception -->Line_25 $$ sb.append(entityMapping.getTable())[ FD ]
Line_32 $$ String colType = col.getType()-->Line_36 $$ if (StringUtil.equalsIgnoreCase(colType, "boolean")) [ FD ]
Line_60 $$ if (colType.equals("Date")) -->Line_63 $$ sb.append("invalid")[ CD ]
Line_2 $$ private String _getCreateMappingTableSQL(EntityMapping entityMapping) throws Exception -->Line_24 $$ sb.append(_SQL_CREATE_TABLE)[ CD ]
Line_55 $$ if (maxLength == 4000) -->Line_57 $$ if (maxLength > 4000) [ CD ]
Line_29 $$ for (int i = 0; i < pkList.size(); i++) -->Line_65 $$ if (col.isPrimary()) [ CD ]
Line_14 $$ if (Validator.equals(entity1.getPackagePath(), "com.liferay.portal") && name1.equals("Company")) -->Line_15 $$ return -1[ CD ]
Line_10 $$ Arrays.sort(entities, new Comparator<Entity>() -->Line_17 $$ if (Validator.equals(entity2.getPackagePath(), "com.liferay.portal") && name2.equals("Company")) [ CD ]
Line_29 $$ for (int i = 0; i < pkList.size(); i++) -->Line_74 $$ for (int i = 1; i < entities.length; i++) [ FD ]
Line_47 $$ int maxLength = getMaxLength(_packagePath + ".model." + entity.getName(), colName)-->Line_49 $$ maxLength = 4000[ FD ]
Line_12 $$ String name1 = entity1.getName()-->Line_14 $$ if (Validator.equals(entity1.getPackagePath(), "com.liferay.portal") && name1.equals("Company")) [ FD ]
Line_2 $$ private String _getCreateMappingTableSQL(EntityMapping entityMapping) throws Exception -->Line_86 $$ sb.append(")\n")[ CD ]
Line_46 $$ if (colType.equals("String")) -->Line_60 $$ if (colType.equals("Date")) [ CD ]
Line_32 $$ String colType = col.getType()-->Line_38 $$ if (StringUtil.equalsIgnoreCase(colType, "double") || StringUtil.equalsIgnoreCase(colType, "float")) [ FD ]
Line_13 $$ String name2 = entity2.getName()-->Line_17 $$ if (Validator.equals(entity2.getPackagePath(), "com.liferay.portal") && name2.equals("Company")) [ FD ]
Line_40 $$ if (colType.equals("int") || colType.equals("Integer") || StringUtil.equalsIgnoreCase(colType, "short")) -->Line_42 $$ if (StringUtil.equalsIgnoreCase(colType, "long")) [ CD ]
Line_78 $$ EntityColumn col = pkList.get(j)-->Line_79 $$ String colDBName = col.getDBName()[ FD ]
Line_2 $$ private String _getCreateMappingTableSQL(EntityMapping entityMapping) throws Exception -->Line_74 $$ for (int i = 1; i < entities.length; i++) [ CD ]
Line_29 $$ for (int i = 0; i < pkList.size(); i++) -->Line_30 $$ EntityColumn col = pkList.get(i)[ CD ]
Line_55 $$ if (maxLength == 4000) -->Line_56 $$ sb.append("STRING")[ CD ]
Line_74 $$ for (int i = 1; i < entities.length; i++) -->Line_76 $$ List<EntityColumn> pkList = entity.getPKList()[ CD ]
Line_10 $$ Arrays.sort(entities, new Comparator<Entity>() -->Line_14 $$ if (Validator.equals(entity1.getPackagePath(), "com.liferay.portal") && name1.equals("Company")) [ CD ]
Line_31 $$ String colName = col.getName()-->Line_47 $$ int maxLength = getMaxLength(_packagePath + ".model." + entity.getName(), colName)[ FD ]
Line_2 $$ private String _getCreateMappingTableSQL(EntityMapping entityMapping) throws Exception -->Line_88 $$ return sb.toString()[ CD ]
Line_30 $$ EntityColumn col = pkList.get(i)-->Line_65 $$ if (col.isPrimary()) [ FD ]
Line_36 $$ if (StringUtil.equalsIgnoreCase(colType, "boolean")) -->Line_38 $$ if (StringUtil.equalsIgnoreCase(colType, "double") || StringUtil.equalsIgnoreCase(colType, "float")) [ CD ]
Line_4 $$ for (int i = 0; i < entities.length; i++) -->Line_30 $$ EntityColumn col = pkList.get(i)[ FD ]
Line_79 $$ String colDBName = col.getDBName()-->Line_83 $$ sb.append(colDBName)[ FD ]
Line_13 $$ String name2 = entity2.getName()-->Line_20 $$ return name1.compareTo(name2)[ FD ]
Line_29 $$ for (int i = 0; i < pkList.size(); i++) -->Line_35 $$ sb.append(" ")[ CD ]
Line_46 $$ if (colType.equals("String")) -->Line_48 $$ if (col.isLocalized()) [ CD ]
Line_77 $$ for (int j = 0; j < pkList.size(); j++) -->Line_79 $$ String colDBName = col.getDBName()[ CD ]
Line_3 $$ Entity[] entities = new Entity[3]-->Line_10 $$ Arrays.sort(entities, new Comparator<Entity>() [ FD ]
Line_29 $$ for (int i = 0; i < pkList.size(); i++) -->Line_31 $$ String colName = col.getName()[ CD ]
Line_75 $$ Entity entity = entities[i]-->Line_76 $$ List<EntityColumn> pkList = entity.getPKList()[ FD ]
Line_74 $$ for (int i = 1; i < entities.length; i++) -->Line_77 $$ for (int j = 0; j < pkList.size(); j++) [ CD ]
Line_29 $$ for (int i = 0; i < pkList.size(); i++) -->Line_32 $$ String colType = col.getType()[ CD ]
Line_30 $$ EntityColumn col = pkList.get(i)-->Line_79 $$ String colDBName = col.getDBName()[ FD ]
Line_2 $$ private String _getCreateMappingTableSQL(EntityMapping entityMapping) throws Exception -->Line_5 $$ entities[i] = getEntity(entityMapping.getEntity(i))[ FD ]
Line_46 $$ if (colType.equals("String")) -->Line_51 $$ if (maxLength < 4000) [ CD ]
Line_29 $$ for (int i = 0; i < pkList.size(); i++) -->Line_70 $$ sb.append(",\n")[ CD ]
Line_36 $$ if (StringUtil.equalsIgnoreCase(colType, "boolean")) -->Line_37 $$ sb.append("BOOLEAN")[ CD ]
Line_38 $$ if (StringUtil.equalsIgnoreCase(colType, "double") || StringUtil.equalsIgnoreCase(colType, "float")) -->Line_39 $$ sb.append("DOUBLE")[ CD ]
Line_44 $$ if (colType.equals("Map")) -->Line_45 $$ sb.append("TEXT")[ CD ]
Line_80 $$ if ((i != 1) || (j != 0)) -->Line_81 $$ sb.append(", ")[ CD ]
Line_2 $$ private String _getCreateMappingTableSQL(EntityMapping entityMapping) throws Exception -->Line_25 $$ sb.append(entityMapping.getTable())[ CD ]
Line_2 $$ private String _getCreateMappingTableSQL(EntityMapping entityMapping) throws Exception -->Line_26 $$ sb.append(" (\n")[ CD ]
Line_76 $$ List<EntityColumn> pkList = entity.getPKList()-->Line_77 $$ for (int j = 0; j < pkList.size(); j++) [ FD ]
Line_57 $$ if (maxLength > 4000) -->Line_58 $$ sb.append("TEXT")[ CD ]
Line_47 $$ int maxLength = getMaxLength(_packagePath + ".model." + entity.getName(), colName)-->Line_57 $$ if (maxLength > 4000) [ FD ]
Line_32 $$ String colType = col.getType()-->Line_60 $$ if (colType.equals("Date")) [ FD ]
Line_29 $$ for (int i = 0; i < pkList.size(); i++) -->Line_33 $$ sb.append("\t")[ CD ]
Line_2 $$ private String _getCreateMappingTableSQL(EntityMapping entityMapping) throws Exception -->Line_87 $$ sb.append(");")[ CD ]
Line_51 $$ if (maxLength < 4000) -->Line_55 $$ if (maxLength == 4000) [ CD ]
Line_2 $$ private String _getCreateMappingTableSQL(EntityMapping entityMapping) throws Exception -->Line_73 $$ sb.append("\tprimary key (")[ CD ]
Line_32 $$ String colType = col.getType()-->Line_46 $$ if (colType.equals("String")) [ FD ]
Line_30 $$ EntityColumn col = pkList.get(i)-->Line_48 $$ if (col.isLocalized()) [ FD ]
Line_32 $$ String colType = col.getType()-->Line_44 $$ if (colType.equals("Map")) [ FD ]
Line_46 $$ if (colType.equals("String")) -->Line_47 $$ int maxLength = getMaxLength(_packagePath + ".model." + entity.getName(), colName)[ CD ]
Line_42 $$ if (StringUtil.equalsIgnoreCase(colType, "long")) -->Line_43 $$ sb.append("LONG")[ CD ]
Line_6 $$ if (entities[i] == null) -->Line_7 $$ return null[ CD ]
Line_32 $$ String colType = col.getType()-->Line_42 $$ if (StringUtil.equalsIgnoreCase(colType, "long")) [ FD ]
Line_30 $$ EntityColumn col = pkList.get(i)-->Line_32 $$ String colType = col.getType()[ FD ]
Line_10 $$ Arrays.sort(entities, new Comparator<Entity>() -->Line_20 $$ return name1.compareTo(name2)[ CD ]
Line_40 $$ if (colType.equals("int") || colType.equals("Integer") || StringUtil.equalsIgnoreCase(colType, "short")) -->Line_41 $$ sb.append("INTEGER")[ CD ]
Line_2 $$ private String _getCreateMappingTableSQL(EntityMapping entityMapping) throws Exception -->Line_10 $$ Arrays.sort(entities, new Comparator<Entity>() [ CD ]
Line_77 $$ for (int j = 0; j < pkList.size(); j++) -->Line_78 $$ EntityColumn col = pkList.get(j)[ CD ]
Line_4 $$ for (int i = 0; i < entities.length; i++) -->Line_74 $$ for (int i = 1; i < entities.length; i++) [ FD ]
Line_38 $$ if (StringUtil.equalsIgnoreCase(colType, "double") || StringUtil.equalsIgnoreCase(colType, "float")) -->Line_40 $$ if (colType.equals("int") || colType.equals("Integer") || StringUtil.equalsIgnoreCase(colType, "short")) [ CD ]
Line_47 $$ int maxLength = getMaxLength(_packagePath + ".model." + entity.getName(), colName)-->Line_51 $$ if (maxLength < 4000) [ FD ]
Line_4 $$ for (int i = 0; i < entities.length; i++) -->Line_5 $$ entities[i] = getEntity(entityMapping.getEntity(i))[ CD ]
Line_60 $$ if (colType.equals("Date")) -->Line_61 $$ sb.append("DATE")[ CD ]
Line_51 $$ if (maxLength < 4000) -->Line_53 $$ sb.append(maxLength)[ CD ]
Line_10 $$ Arrays.sort(entities, new Comparator<Entity>() -->Line_13 $$ String name2 = entity2.getName()[ CD ]
Line_65 $$ if (col.isPrimary()) -->Line_66 $$ sb.append(" not null")[ CD ]
Line_10 $$ Arrays.sort(entities, new Comparator<Entity>() -->Line_12 $$ String name1 = entity1.getName()[ FD ]
Line_49 $$ maxLength = 4000-->Line_57 $$ if (maxLength > 4000) [ FD ]
Line_49 $$ maxLength = 4000-->Line_51 $$ if (maxLength < 4000) [ FD ]
Line_51 $$ if (maxLength < 4000) -->Line_52 $$ sb.append("VARCHAR(")[ CD ]
Line_4 $$ for (int i = 0; i < entities.length; i++) -->Line_6 $$ if (entities[i] == null) [ CD ]
Line_44 $$ if (colType.equals("Map")) -->Line_46 $$ if (colType.equals("String")) [ CD ]
