Line_10 $$ if (roots.size() > 1) -->Line_13 $$ Collections.sort(roots, new Comparator<String>() [ CD ]
Line_5 $$ if (profile.isOutputRelativeToContentRoot()) -->Line_21 $$ final File parent = JpsPathUtil.urlToFile(roots.get(0))[ CD ]
Line_5 $$ if (profile.isOutputRelativeToContentRoot()) -->Line_10 $$ if (roots.size() > 1) [ CD ]
Line_6 $$ List<String> roots = module.getContentRootsList().getUrls()-->Line_10 $$ if (roots.size() > 1) [ FD ]
Line_7 $$ if (roots.isEmpty()) -->Line_8 $$ return null[ CD ]
Line_13 $$ Collections.sort(roots, new Comparator<String>() -->Line_17 $$ return o1.compareTo(o2)[ FD ]
Line_25 $$ if (outputDir == null) -->Line_26 $$ return null[ CD ]
Line_4 $$ final String sourceDirName = profile.getGeneratedSourcesDirectoryName(forTests)-->Line_28 $$ return StringUtil.isEmpty(sourceDirName) ? outputDir : new File(outputDir, sourceDirName)[ FD ]
Line_5 $$ if (profile.isOutputRelativeToContentRoot()) -->Line_6 $$ List<String> roots = module.getContentRootsList().getUrls()[ CD ]
Line_6 $$ List<String> roots = module.getContentRootsList().getUrls()-->Line_13 $$ Collections.sort(roots, new Comparator<String>() [ FD ]
Line_6 $$ List<String> roots = module.getContentRootsList().getUrls()-->Line_21 $$ final File parent = JpsPathUtil.urlToFile(roots.get(0))[ FD ]
Line_5 $$ if (profile.isOutputRelativeToContentRoot()) -->Line_22 $$ return StringUtil.isEmpty(sourceDirName) ? parent : new File(parent, sourceDirName)[ CD ]
Line_6 $$ List<String> roots = module.getContentRootsList().getUrls()-->Line_7 $$ if (roots.isEmpty()) [ FD ]
Line_4 $$ final String sourceDirName = profile.getGeneratedSourcesDirectoryName(forTests)-->Line_22 $$ return StringUtil.isEmpty(sourceDirName) ? parent : new File(parent, sourceDirName)[ FD ]
Line_13 $$ Collections.sort(roots, new Comparator<String>() -->Line_17 $$ return o1.compareTo(o2)[ CD ]
Line_5 $$ if (profile.isOutputRelativeToContentRoot()) -->Line_7 $$ if (roots.isEmpty()) [ CD ]
