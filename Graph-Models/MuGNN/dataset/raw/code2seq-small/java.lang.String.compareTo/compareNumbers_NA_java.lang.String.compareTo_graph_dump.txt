Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_17 $$ if (n1len > n2len) [ CD ]
Line_5 $$ n1 = n1.substring(1)-->Line_20 $$ n1 = StringUtil.repeatSymbol('0', n2len - n1len) + n1[ FD ]
Line_6 $$ n2 = n2.substring(1)-->Line_16 $$ final int n2len = n2.length()[ FD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_11 $$ if (!n2.isEmpty() && n2.charAt(0) == '0') [ FD ]
Line_17 $$ if (n1len > n2len) -->Line_18 $$ n2 = StringUtil.repeatSymbol('0', n1len - n2len) + n2[ CD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_18 $$ n2 = StringUtil.repeatSymbol('0', n1len - n2len) + n2[ FD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_22 $$ return n1.compareTo(n2)[ CD ]
Line_17 $$ if (n1len > n2len) -->Line_19 $$ if (n2len > n1len) [ CD ]
Line_5 $$ n1 = n1.substring(1)-->Line_22 $$ return n1.compareTo(n2)[ FD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_16 $$ final int n2len = n2.length()[ CD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_22 $$ return n1.compareTo(n2)[ FD ]
Line_16 $$ final int n2len = n2.length()-->Line_19 $$ if (n2len > n1len) [ FD ]
Line_6 $$ n2 = n2.substring(1)-->Line_11 $$ if (!n2.isEmpty() && n2.charAt(0) == '0') [ FD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_20 $$ n1 = StringUtil.repeatSymbol('0', n2len - n1len) + n1[ FD ]
Line_11 $$ if (!n2.isEmpty() && n2.charAt(0) == '0') -->Line_12 $$ return 1[ CD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_5 $$ n1 = n1.substring(1)[ FD ]
Line_16 $$ final int n2len = n2.length()-->Line_17 $$ if (n1len > n2len) [ FD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_16 $$ final int n2len = n2.length()[ FD ]
Line_6 $$ n2 = n2.substring(1)-->Line_18 $$ n2 = StringUtil.repeatSymbol('0', n1len - n2len) + n2[ FD ]
Line_19 $$ if (n2len > n1len) -->Line_20 $$ n1 = StringUtil.repeatSymbol('0', n2len - n1len) + n1[ CD ]
Line_6 $$ n2 = n2.substring(1)-->Line_22 $$ return n1.compareTo(n2)[ FD ]
Line_18 $$ n2 = StringUtil.repeatSymbol('0', n1len - n2len) + n2-->Line_22 $$ return n1.compareTo(n2)[ FD ]
Line_20 $$ n1 = StringUtil.repeatSymbol('0', n2len - n1len) + n1-->Line_22 $$ return n1.compareTo(n2)[ FD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_6 $$ n2 = n2.substring(1)[ FD ]
