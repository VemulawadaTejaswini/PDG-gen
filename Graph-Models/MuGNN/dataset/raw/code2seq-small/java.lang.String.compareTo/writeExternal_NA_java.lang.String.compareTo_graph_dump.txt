Line_4 $$ List<SaveItem> sorted = new ArrayList<SaveItem>(collection.length + myFailedModulePaths.size())-->Line_6 $$ sorted.add(new ModuleSaveItem(module))[ FD ]
Line_2 $$ public void writeExternal(@NotNull Element element) -->Line_4 $$ List<SaveItem> sorted = new ArrayList<SaveItem>(collection.length + myFailedModulePaths.size())[ CD ]
Line_12 $$ Collections.sort(sorted, new Comparator<SaveItem>() -->Line_14 $$ return item1.getModuleName().compareTo(item2.getModuleName())[ CD ]
Line_2 $$ public void writeExternal(@NotNull Element element) -->Line_3 $$ final Module[] collection = getModules()[ CD ]
Line_11 $$ if (!sorted.isEmpty()) -->Line_12 $$ Collections.sort(sorted, new Comparator<SaveItem>() [ CD ]
Line_2 $$ public void writeExternal(@NotNull Element element) -->Line_11 $$ if (!sorted.isEmpty()) [ CD ]
Line_12 $$ Collections.sort(sorted, new Comparator<SaveItem>() -->Line_14 $$ return item1.getModuleName().compareTo(item2.getModuleName())[ FD ]
Line_4 $$ List<SaveItem> sorted = new ArrayList<SaveItem>(collection.length + myFailedModulePaths.size())-->Line_12 $$ Collections.sort(sorted, new Comparator<SaveItem>() [ FD ]
Line_2 $$ public void writeExternal(@NotNull Element element) -->Line_21 $$ element.addContent(modules)[ FD ]
Line_11 $$ if (!sorted.isEmpty()) -->Line_21 $$ element.addContent(modules)[ CD ]
Line_4 $$ List<SaveItem> sorted = new ArrayList<SaveItem>(collection.length + myFailedModulePaths.size())-->Line_9 $$ sorted.add(new ModulePathSaveItem(modulePath))[ FD ]
Line_4 $$ List<SaveItem> sorted = new ArrayList<SaveItem>(collection.length + myFailedModulePaths.size())-->Line_11 $$ if (!sorted.isEmpty()) [ FD ]
