Line_3 $$ return new Comparator<Operation>() -->Line_11 $$ return o1.getDescription().compareTo(o2.getDescription())[ CD ]
Line_5 $$ long byElapsedTime = o2.getElapsedTime() - o1.getElapsedTime()-->Line_8 $$ if (byElapsedTime < 0) [ FD ]
Line_2 $$ public static Comparator<? super Operation> slowestFirst() -->Line_3 $$ return new Comparator<Operation>() [ CD ]
Line_3 $$ return new Comparator<Operation>() -->Line_5 $$ long byElapsedTime = o2.getElapsedTime() - o1.getElapsedTime()[ CD ]
Line_3 $$ return new Comparator<Operation>() -->Line_11 $$ return o1.getDescription().compareTo(o2.getDescription())[ FD ]
Line_6 $$ if (byElapsedTime > 0) -->Line_7 $$ return 1[ CD ]
Line_6 $$ if (byElapsedTime > 0) -->Line_8 $$ if (byElapsedTime < 0) [ CD ]
Line_3 $$ return new Comparator<Operation>() -->Line_6 $$ if (byElapsedTime > 0) [ CD ]
Line_5 $$ long byElapsedTime = o2.getElapsedTime() - o1.getElapsedTime()-->Line_6 $$ if (byElapsedTime > 0) [ FD ]
Line_8 $$ if (byElapsedTime < 0) -->Line_9 $$ return -1[ CD ]
Line_3 $$ return new Comparator<Operation>() -->Line_5 $$ long byElapsedTime = o2.getElapsedTime() - o1.getElapsedTime()[ FD ]
