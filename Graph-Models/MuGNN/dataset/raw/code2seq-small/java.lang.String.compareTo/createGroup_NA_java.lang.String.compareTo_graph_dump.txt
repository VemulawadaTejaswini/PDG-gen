Line_8 $$ Collections.sort(values, new Comparator<T>() -->Line_10 $$ return visualize(o1).compareTo(visualize(o2))[ CD ]
Line_4 $$ if (showClear) -->Line_5 $$ group.add(createChooseAction(myVirtualFile, null))[ CD ]
Line_3 $$ DefaultActionGroup group = new DefaultActionGroup()-->Line_15 $$ group.add(createChooseAction(myVirtualFile, t))[ FD ]
Line_2 $$ public DefaultActionGroup createGroup(final boolean showClear) -->Line_18 $$ return group[ CD ]
Line_3 $$ DefaultActionGroup group = new DefaultActionGroup()-->Line_5 $$ group.add(createChooseAction(myVirtualFile, null))[ FD ]
Line_2 $$ public DefaultActionGroup createGroup(final boolean showClear) -->Line_8 $$ Collections.sort(values, new Comparator<T>() [ CD ]
Line_2 $$ public DefaultActionGroup createGroup(final boolean showClear) -->Line_3 $$ DefaultActionGroup group = new DefaultActionGroup()[ CD ]
Line_7 $$ final List<T> values = new ArrayList<T>(myMappings.getAvailableValues(myVirtualFile))-->Line_8 $$ Collections.sort(values, new Comparator<T>() [ FD ]
Line_8 $$ Collections.sort(values, new Comparator<T>() -->Line_10 $$ return visualize(o1).compareTo(visualize(o2))[ FD ]
Line_2 $$ public DefaultActionGroup createGroup(final boolean showClear) -->Line_4 $$ if (showClear) [ CD ]
Line_14 $$ if (myMappings.isSelectable(t)) -->Line_15 $$ group.add(createChooseAction(myVirtualFile, t))[ CD ]
Line_2 $$ public DefaultActionGroup createGroup(final boolean showClear) -->Line_7 $$ final List<T> values = new ArrayList<T>(myMappings.getAvailableValues(myVirtualFile))[ CD ]
