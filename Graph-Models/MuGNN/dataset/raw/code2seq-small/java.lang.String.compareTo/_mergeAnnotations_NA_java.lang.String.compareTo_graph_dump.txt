Line_11 $$ Comparator<Annotation> comparator = new Comparator<Annotation>() -->Line_14 $$ String annotationString2 = annotation2.toString()[ CD ]
Line_3 $$ Map<Type, Annotation> annotationsMap = new HashMap()-->Line_10 $$ List<Annotation> annotations = new ArrayList(annotationsMap.values())[ FD ]
Line_3 $$ Map<Type, Annotation> annotationsMap = new HashMap()-->Line_8 $$ annotationsMap.put(annotation.getType(), annotation)[ FD ]
Line_2 $$ private Annotation[] _mergeAnnotations(Annotation[] annotations1, Annotation[] annotations2) -->Line_19 $$ return annotations.toArray(new Annotation[annotations.size()])[ CD ]
Line_11 $$ Comparator<Annotation> comparator = new Comparator<Annotation>() -->Line_15 $$ return annotationString1.compareTo(annotationString2)[ CD ]
Line_4 $$ for (Annotation annotation : annotations2) -->Line_5 $$ annotationsMap.put(annotation.getType(), annotation)[ FD ]
Line_11 $$ Comparator<Annotation> comparator = new Comparator<Annotation>() -->Line_13 $$ String annotationString1 = annotation1.toString()[ FD ]
Line_10 $$ List<Annotation> annotations = new ArrayList(annotationsMap.values())-->Line_19 $$ return annotations.toArray(new Annotation[annotations.size()])[ FD ]
Line_14 $$ String annotationString2 = annotation2.toString()-->Line_15 $$ return annotationString1.compareTo(annotationString2)[ FD ]
Line_3 $$ Map<Type, Annotation> annotationsMap = new HashMap()-->Line_5 $$ annotationsMap.put(annotation.getType(), annotation)[ FD ]
Line_11 $$ Comparator<Annotation> comparator = new Comparator<Annotation>() -->Line_18 $$ Collections.sort(annotations, comparator)[ FD ]
Line_2 $$ private Annotation[] _mergeAnnotations(Annotation[] annotations1, Annotation[] annotations2) -->Line_10 $$ List<Annotation> annotations = new ArrayList(annotationsMap.values())[ CD ]
Line_2 $$ private Annotation[] _mergeAnnotations(Annotation[] annotations1, Annotation[] annotations2) -->Line_18 $$ Collections.sort(annotations, comparator)[ CD ]
Line_4 $$ for (Annotation annotation : annotations2) -->Line_8 $$ annotationsMap.put(annotation.getType(), annotation)[ FD ]
Line_11 $$ Comparator<Annotation> comparator = new Comparator<Annotation>() -->Line_13 $$ String annotationString1 = annotation1.toString()[ CD ]
Line_2 $$ private Annotation[] _mergeAnnotations(Annotation[] annotations1, Annotation[] annotations2) -->Line_3 $$ Map<Type, Annotation> annotationsMap = new HashMap()[ CD ]
Line_11 $$ Comparator<Annotation> comparator = new Comparator<Annotation>() -->Line_14 $$ String annotationString2 = annotation2.toString()[ FD ]
Line_13 $$ String annotationString1 = annotation1.toString()-->Line_15 $$ return annotationString1.compareTo(annotationString2)[ FD ]
Line_10 $$ List<Annotation> annotations = new ArrayList(annotationsMap.values())-->Line_18 $$ Collections.sort(annotations, comparator)[ FD ]
Line_2 $$ private Annotation[] _mergeAnnotations(Annotation[] annotations1, Annotation[] annotations2) -->Line_11 $$ Comparator<Annotation> comparator = new Comparator<Annotation>() [ CD ]
