Line_17 $$ String rangeParam = GetterUtil.getString(searchContext.getAttribute(getFieldId()))-->Line_19 $$ String[] range = RangeParserUtil.parserRange(rangeParam)[ FD ]
Line_12 $$ String rangeString = rangeJSONObject.getString("range")-->Line_13 $$ String[] range = RangeParserUtil.parserRange(rangeString)[ FD ]
Line_10 $$ JSONArray rangesJSONArray = dataJSONObject.getJSONArray("ranges")-->Line_11 $$ JSONObject rangeJSONObject = rangesJSONArray.getJSONObject(0)[ FD ]
Line_21 $$ end = range[1]-->Line_35 $$ endString = end[ FD ]
Line_20 $$ start = range[0]-->Line_30 $$ if (Validator.isNotNull(start)) [ FD ]
Line_14 $$ start = range[0]-->Line_20 $$ start = range[0][ FD ]
Line_9 $$ if (isStatic() && dataJSONObject.has("ranges")) -->Line_10 $$ JSONArray rangesJSONArray = dataJSONObject.getJSONArray("ranges")[ CD ]
Line_14 $$ start = range[0]-->Line_26 $$ if (Validator.isNotNull(start) && Validator.isNotNull(end) && (start.compareTo(end) > 0)) [ FD ]
Line_4 $$ SearchContext searchContext = getSearchContext()-->Line_38 $$ return BooleanClauseFactoryUtil.createFilter(searchContext, rangeTermFilter, BooleanClauseOccur.MUST)[ FD ]
Line_15 $$ end = range[1]-->Line_26 $$ if (Validator.isNotNull(start) && Validator.isNotNull(end) && (start.compareTo(end) > 0)) [ FD ]
Line_9 $$ if (isStatic() && dataJSONObject.has("ranges")) -->Line_12 $$ String rangeString = rangeJSONObject.getString("range")[ CD ]
Line_15 $$ end = range[1]-->Line_21 $$ end = range[1][ FD ]
Line_8 $$ String end = StringPool.BLANK-->Line_35 $$ endString = end[ FD ]
Line_18 $$ if (!isStatic() && Validator.isNotNull(rangeParam)) -->Line_21 $$ end = range[1][ CD ]
Line_34 $$ if (Validator.isNotNull(end)) -->Line_35 $$ endString = end[ CD ]
Line_6 $$ JSONObject dataJSONObject = facetConfiguration.getData()-->Line_10 $$ JSONArray rangesJSONArray = dataJSONObject.getJSONArray("ranges")[ FD ]
Line_21 $$ end = range[1]-->Line_23 $$ if (Validator.isNull(start) && Validator.isNull(end)) [ FD ]
Line_18 $$ if (!isStatic() && Validator.isNotNull(rangeParam)) -->Line_20 $$ start = range[0][ CD ]
Line_7 $$ String start = StringPool.BLANK-->Line_20 $$ start = range[0][ FD ]
Line_8 $$ String end = StringPool.BLANK-->Line_23 $$ if (Validator.isNull(start) && Validator.isNull(end)) [ FD ]
Line_6 $$ JSONObject dataJSONObject = facetConfiguration.getData()-->Line_9 $$ if (isStatic() && dataJSONObject.has("ranges")) [ FD ]
Line_23 $$ if (Validator.isNull(start) && Validator.isNull(end)) -->Line_24 $$ return null[ CD ]
Line_7 $$ String start = StringPool.BLANK-->Line_14 $$ start = range[0][ FD ]
Line_8 $$ String end = StringPool.BLANK-->Line_26 $$ if (Validator.isNotNull(start) && Validator.isNotNull(end) && (start.compareTo(end) > 0)) [ FD ]
Line_15 $$ end = range[1]-->Line_23 $$ if (Validator.isNull(start) && Validator.isNull(end)) [ FD ]
Line_15 $$ end = range[1]-->Line_34 $$ if (Validator.isNotNull(end)) [ FD ]
Line_30 $$ if (Validator.isNotNull(start)) -->Line_31 $$ startString = start[ CD ]
Line_7 $$ String start = StringPool.BLANK-->Line_31 $$ startString = start[ FD ]
Line_9 $$ if (isStatic() && dataJSONObject.has("ranges")) -->Line_14 $$ start = range[0][ CD ]
Line_8 $$ String end = StringPool.BLANK-->Line_15 $$ end = range[1][ FD ]
Line_5 $$ FacetConfiguration facetConfiguration = getFacetConfiguration()-->Line_6 $$ JSONObject dataJSONObject = facetConfiguration.getData()[ FD ]
Line_8 $$ String end = StringPool.BLANK-->Line_34 $$ if (Validator.isNotNull(end)) [ FD ]
Line_11 $$ JSONObject rangeJSONObject = rangesJSONArray.getJSONObject(0)-->Line_12 $$ String rangeString = rangeJSONObject.getString("range")[ FD ]
Line_9 $$ if (isStatic() && dataJSONObject.has("ranges")) -->Line_13 $$ String[] range = RangeParserUtil.parserRange(rangeString)[ CD ]
Line_9 $$ if (isStatic() && dataJSONObject.has("ranges")) -->Line_11 $$ JSONObject rangeJSONObject = rangesJSONArray.getJSONObject(0)[ CD ]
Line_37 $$ RangeTermFilter rangeTermFilter = new RangeTermFilter(getFieldName(), true, true, startString, endString)-->Line_38 $$ return BooleanClauseFactoryUtil.createFilter(searchContext, rangeTermFilter, BooleanClauseOccur.MUST)[ FD ]
Line_18 $$ if (!isStatic() && Validator.isNotNull(rangeParam)) -->Line_19 $$ String[] range = RangeParserUtil.parserRange(rangeParam)[ CD ]
Line_14 $$ start = range[0]-->Line_31 $$ startString = start[ FD ]
Line_7 $$ String start = StringPool.BLANK-->Line_23 $$ if (Validator.isNull(start) && Validator.isNull(end)) [ FD ]
Line_21 $$ end = range[1]-->Line_26 $$ if (Validator.isNotNull(start) && Validator.isNotNull(end) && (start.compareTo(end) > 0)) [ FD ]
Line_14 $$ start = range[0]-->Line_23 $$ if (Validator.isNull(start) && Validator.isNull(end)) [ FD ]
Line_20 $$ start = range[0]-->Line_23 $$ if (Validator.isNull(start) && Validator.isNull(end)) [ FD ]
Line_33 $$ String endString = StringPool.STAR-->Line_35 $$ endString = end[ FD ]
Line_8 $$ String end = StringPool.BLANK-->Line_21 $$ end = range[1][ FD ]
Line_4 $$ SearchContext searchContext = getSearchContext()-->Line_17 $$ String rangeParam = GetterUtil.getString(searchContext.getAttribute(getFieldId()))[ FD ]
Line_20 $$ start = range[0]-->Line_31 $$ startString = start[ FD ]
Line_7 $$ String start = StringPool.BLANK-->Line_30 $$ if (Validator.isNotNull(start)) [ FD ]
Line_29 $$ String startString = StringPool.STAR-->Line_31 $$ startString = start[ FD ]
Line_17 $$ String rangeParam = GetterUtil.getString(searchContext.getAttribute(getFieldId()))-->Line_18 $$ if (!isStatic() && Validator.isNotNull(rangeParam)) [ FD ]
Line_15 $$ end = range[1]-->Line_35 $$ endString = end[ FD ]
Line_21 $$ end = range[1]-->Line_34 $$ if (Validator.isNotNull(end)) [ FD ]
Line_9 $$ if (isStatic() && dataJSONObject.has("ranges")) -->Line_15 $$ end = range[1][ CD ]
Line_7 $$ String start = StringPool.BLANK-->Line_26 $$ if (Validator.isNotNull(start) && Validator.isNotNull(end) && (start.compareTo(end) > 0)) [ FD ]
Line_20 $$ start = range[0]-->Line_26 $$ if (Validator.isNotNull(start) && Validator.isNotNull(end) && (start.compareTo(end) > 0)) [ FD ]
Line_14 $$ start = range[0]-->Line_30 $$ if (Validator.isNotNull(start)) [ FD ]
