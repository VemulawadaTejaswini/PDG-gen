Line_14 $$ end = range[1]-->Line_25 $$ if (Validator.isNotNull(start) && Validator.isNotNull(end) && (start.compareTo(end) > 0)) [ FD ]
Line_19 $$ start = range[0]-->Line_30 $$ startString = start[ FD ]
Line_20 $$ end = range[1]-->Line_34 $$ endString = end[ FD ]
Line_8 $$ if (isStatic() && dataJSONObject.has("ranges")) -->Line_12 $$ String[] range = RangeParserUtil.parserRange(rangeString)[ CD ]
Line_8 $$ if (isStatic() && dataJSONObject.has("ranges")) -->Line_9 $$ JSONArray rangesJSONArray = dataJSONObject.getJSONArray("ranges")[ CD ]
Line_2 $$ protected BooleanClause<Filter> doGetFacetFilterBooleanClause() -->Line_29 $$ if (Validator.isNotNull(start)) [ CD ]
Line_7 $$ String end = StringPool.BLANK-->Line_22 $$ if (Validator.isNull(start) && Validator.isNull(end)) [ FD ]
Line_17 $$ if (!isStatic() && Validator.isNotNull(rangeParam)) -->Line_18 $$ String[] range = RangeParserUtil.parserRange(rangeParam)[ CD ]
Line_2 $$ protected BooleanClause<Filter> doGetFacetFilterBooleanClause() -->Line_33 $$ if (Validator.isNotNull(end)) [ CD ]
Line_32 $$ String endString = StringPool.STAR-->Line_34 $$ endString = end[ FD ]
Line_20 $$ end = range[1]-->Line_25 $$ if (Validator.isNotNull(start) && Validator.isNotNull(end) && (start.compareTo(end) > 0)) [ FD ]
Line_3 $$ SearchContext searchContext = getSearchContext()-->Line_16 $$ String rangeParam = GetterUtil.getString(searchContext.getAttribute(getFieldId()))[ FD ]
Line_2 $$ protected BooleanClause<Filter> doGetFacetFilterBooleanClause() -->Line_25 $$ if (Validator.isNotNull(start) && Validator.isNotNull(end) && (start.compareTo(end) > 0)) [ CD ]
Line_2 $$ protected BooleanClause<Filter> doGetFacetFilterBooleanClause() -->Line_37 $$ return BooleanClauseFactoryUtil.createFilter(searchContext, rangeTermFilter, BooleanClauseOccur.MUST)[ CD ]
Line_13 $$ start = range[0]-->Line_22 $$ if (Validator.isNull(start) && Validator.isNull(end)) [ FD ]
Line_17 $$ if (!isStatic() && Validator.isNotNull(rangeParam)) -->Line_19 $$ start = range[0][ CD ]
Line_13 $$ start = range[0]-->Line_25 $$ if (Validator.isNotNull(start) && Validator.isNotNull(end) && (start.compareTo(end) > 0)) [ FD ]
Line_19 $$ start = range[0]-->Line_25 $$ if (Validator.isNotNull(start) && Validator.isNotNull(end) && (start.compareTo(end) > 0)) [ FD ]
Line_2 $$ protected BooleanClause<Filter> doGetFacetFilterBooleanClause() -->Line_4 $$ FacetConfiguration facetConfiguration = getFacetConfiguration()[ CD ]
Line_16 $$ String rangeParam = GetterUtil.getString(searchContext.getAttribute(getFieldId()))-->Line_17 $$ if (!isStatic() && Validator.isNotNull(rangeParam)) [ FD ]
Line_7 $$ String end = StringPool.BLANK-->Line_25 $$ if (Validator.isNotNull(start) && Validator.isNotNull(end) && (start.compareTo(end) > 0)) [ FD ]
Line_2 $$ protected BooleanClause<Filter> doGetFacetFilterBooleanClause() -->Line_3 $$ SearchContext searchContext = getSearchContext()[ CD ]
Line_2 $$ protected BooleanClause<Filter> doGetFacetFilterBooleanClause() -->Line_7 $$ String end = StringPool.BLANK[ CD ]
Line_2 $$ protected BooleanClause<Filter> doGetFacetFilterBooleanClause() -->Line_17 $$ if (!isStatic() && Validator.isNotNull(rangeParam)) [ CD ]
Line_20 $$ end = range[1]-->Line_22 $$ if (Validator.isNull(start) && Validator.isNull(end)) [ FD ]
Line_13 $$ start = range[0]-->Line_29 $$ if (Validator.isNotNull(start)) [ FD ]
Line_2 $$ protected BooleanClause<Filter> doGetFacetFilterBooleanClause() -->Line_36 $$ RangeTermFilter rangeTermFilter = new RangeTermFilter(getFieldName(), true, true, startString, endString)[ CD ]
Line_7 $$ String end = StringPool.BLANK-->Line_34 $$ endString = end[ FD ]
Line_7 $$ String end = StringPool.BLANK-->Line_14 $$ end = range[1][ FD ]
Line_8 $$ if (isStatic() && dataJSONObject.has("ranges")) -->Line_11 $$ String rangeString = rangeJSONObject.getString("range")[ CD ]
Line_2 $$ protected BooleanClause<Filter> doGetFacetFilterBooleanClause() -->Line_5 $$ JSONObject dataJSONObject = facetConfiguration.getData()[ CD ]
Line_29 $$ if (Validator.isNotNull(start)) -->Line_30 $$ startString = start[ CD ]
Line_14 $$ end = range[1]-->Line_22 $$ if (Validator.isNull(start) && Validator.isNull(end)) [ FD ]
Line_14 $$ end = range[1]-->Line_34 $$ endString = end[ FD ]
Line_5 $$ JSONObject dataJSONObject = facetConfiguration.getData()-->Line_8 $$ if (isStatic() && dataJSONObject.has("ranges")) [ FD ]
Line_2 $$ protected BooleanClause<Filter> doGetFacetFilterBooleanClause() -->Line_16 $$ String rangeParam = GetterUtil.getString(searchContext.getAttribute(getFieldId()))[ CD ]
Line_8 $$ if (isStatic() && dataJSONObject.has("ranges")) -->Line_10 $$ JSONObject rangeJSONObject = rangesJSONArray.getJSONObject(0)[ CD ]
Line_2 $$ protected BooleanClause<Filter> doGetFacetFilterBooleanClause() -->Line_22 $$ if (Validator.isNull(start) && Validator.isNull(end)) [ CD ]
Line_10 $$ JSONObject rangeJSONObject = rangesJSONArray.getJSONObject(0)-->Line_11 $$ String rangeString = rangeJSONObject.getString("range")[ FD ]
Line_28 $$ String startString = StringPool.STAR-->Line_30 $$ startString = start[ FD ]
Line_8 $$ if (isStatic() && dataJSONObject.has("ranges")) -->Line_14 $$ end = range[1][ CD ]
Line_11 $$ String rangeString = rangeJSONObject.getString("range")-->Line_12 $$ String[] range = RangeParserUtil.parserRange(rangeString)[ FD ]
Line_14 $$ end = range[1]-->Line_20 $$ end = range[1][ FD ]
Line_36 $$ RangeTermFilter rangeTermFilter = new RangeTermFilter(getFieldName(), true, true, startString, endString)-->Line_37 $$ return BooleanClauseFactoryUtil.createFilter(searchContext, rangeTermFilter, BooleanClauseOccur.MUST)[ FD ]
Line_8 $$ if (isStatic() && dataJSONObject.has("ranges")) -->Line_13 $$ start = range[0][ CD ]
Line_9 $$ JSONArray rangesJSONArray = dataJSONObject.getJSONArray("ranges")-->Line_10 $$ JSONObject rangeJSONObject = rangesJSONArray.getJSONObject(0)[ FD ]
Line_13 $$ start = range[0]-->Line_19 $$ start = range[0][ FD ]
Line_6 $$ String start = StringPool.BLANK-->Line_25 $$ if (Validator.isNotNull(start) && Validator.isNotNull(end) && (start.compareTo(end) > 0)) [ FD ]
Line_13 $$ start = range[0]-->Line_30 $$ startString = start[ FD ]
Line_6 $$ String start = StringPool.BLANK-->Line_29 $$ if (Validator.isNotNull(start)) [ FD ]
Line_3 $$ SearchContext searchContext = getSearchContext()-->Line_37 $$ return BooleanClauseFactoryUtil.createFilter(searchContext, rangeTermFilter, BooleanClauseOccur.MUST)[ FD ]
Line_16 $$ String rangeParam = GetterUtil.getString(searchContext.getAttribute(getFieldId()))-->Line_18 $$ String[] range = RangeParserUtil.parserRange(rangeParam)[ FD ]
Line_19 $$ start = range[0]-->Line_22 $$ if (Validator.isNull(start) && Validator.isNull(end)) [ FD ]
Line_14 $$ end = range[1]-->Line_33 $$ if (Validator.isNotNull(end)) [ FD ]
Line_2 $$ protected BooleanClause<Filter> doGetFacetFilterBooleanClause() -->Line_32 $$ String endString = StringPool.STAR[ CD ]
Line_6 $$ String start = StringPool.BLANK-->Line_19 $$ start = range[0][ FD ]
Line_19 $$ start = range[0]-->Line_29 $$ if (Validator.isNotNull(start)) [ FD ]
Line_33 $$ if (Validator.isNotNull(end)) -->Line_34 $$ endString = end[ CD ]
Line_2 $$ protected BooleanClause<Filter> doGetFacetFilterBooleanClause() -->Line_8 $$ if (isStatic() && dataJSONObject.has("ranges")) [ CD ]
Line_7 $$ String end = StringPool.BLANK-->Line_20 $$ end = range[1][ FD ]
Line_6 $$ String start = StringPool.BLANK-->Line_30 $$ startString = start[ FD ]
Line_4 $$ FacetConfiguration facetConfiguration = getFacetConfiguration()-->Line_5 $$ JSONObject dataJSONObject = facetConfiguration.getData()[ FD ]
Line_20 $$ end = range[1]-->Line_33 $$ if (Validator.isNotNull(end)) [ FD ]
Line_17 $$ if (!isStatic() && Validator.isNotNull(rangeParam)) -->Line_20 $$ end = range[1][ CD ]
Line_22 $$ if (Validator.isNull(start) && Validator.isNull(end)) -->Line_23 $$ return null[ CD ]
Line_6 $$ String start = StringPool.BLANK-->Line_13 $$ start = range[0][ FD ]
Line_6 $$ String start = StringPool.BLANK-->Line_22 $$ if (Validator.isNull(start) && Validator.isNull(end)) [ FD ]
Line_5 $$ JSONObject dataJSONObject = facetConfiguration.getData()-->Line_9 $$ JSONArray rangesJSONArray = dataJSONObject.getJSONArray("ranges")[ FD ]
Line_2 $$ protected BooleanClause<Filter> doGetFacetFilterBooleanClause() -->Line_28 $$ String startString = StringPool.STAR[ CD ]
Line_7 $$ String end = StringPool.BLANK-->Line_33 $$ if (Validator.isNotNull(end)) [ FD ]
Line_2 $$ protected BooleanClause<Filter> doGetFacetFilterBooleanClause() -->Line_6 $$ String start = StringPool.BLANK[ CD ]
