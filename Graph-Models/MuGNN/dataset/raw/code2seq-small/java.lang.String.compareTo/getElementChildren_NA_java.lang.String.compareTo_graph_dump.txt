Line_27 $$ final Comparator<PyElement> comparator = new Comparator<PyElement>() -->Line_31 $$ return (n1 != null && n2 != null) ? n1.compareTo(n2) : 0[ CD ]
Line_16 $$ if (element instanceof PyClass) -->Line_17 $$ final List<PyElement> attrs = getClassAttributes((PyClass) element)[ CD ]
Line_7 $$ element.acceptChildren(new PyElementVisitor() -->Line_9 $$ if (isWorthyItem(e, element)) [ CD ]
Line_2 $$ private Collection<PyElement> getElementChildren(final PyElement element) -->Line_37 $$ return children[ CD ]
Line_16 $$ if (element instanceof PyClass) -->Line_34 $$ Collections.sort(filtered, comparator)[ CD ]
Line_27 $$ final Comparator<PyElement> comparator = new Comparator<PyElement>() -->Line_30 $$ final String n2 = e2.getName()[ CD ]
Line_2 $$ private Collection<PyElement> getElementChildren(final PyElement element) -->Line_16 $$ if (element instanceof PyClass) [ FD ]
Line_7 $$ element.acceptChildren(new PyElementVisitor() -->Line_12 $$ e.acceptChildren(this)[ FD ]
Line_3 $$ final Collection<PyElement> children = new ArrayList<PyElement>()-->Line_35 $$ children.addAll(filtered)[ FD ]
Line_2 $$ private Collection<PyElement> getElementChildren(final PyElement element) -->Line_16 $$ if (element instanceof PyClass) [ CD ]
Line_2 $$ private Collection<PyElement> getElementChildren(final PyElement element) -->Line_7 $$ element.acceptChildren(new PyElementVisitor() [ CD ]
Line_7 $$ element.acceptChildren(new PyElementVisitor() -->Line_9 $$ if (isWorthyItem(e, element)) [ FD ]
Line_16 $$ if (element instanceof PyClass) -->Line_35 $$ children.addAll(filtered)[ CD ]
Line_30 $$ final String n2 = e2.getName()-->Line_31 $$ return (n1 != null && n2 != null) ? n1.compareTo(n2) : 0[ FD ]
Line_2 $$ private Collection<PyElement> getElementChildren(final PyElement element) -->Line_4 $$ if (!element.isValid()) [ FD ]
Line_22 $$ if (attr.isValid() && !names.contains(name)) -->Line_23 $$ filtered.add(attr)[ CD ]
Line_3 $$ final Collection<PyElement> children = new ArrayList<PyElement>()-->Line_10 $$ children.add((PyElement) e)[ FD ]
Line_2 $$ private Collection<PyElement> getElementChildren(final PyElement element) -->Line_3 $$ final Collection<PyElement> children = new ArrayList<PyElement>()[ CD ]
Line_2 $$ private Collection<PyElement> getElementChildren(final PyElement element) -->Line_9 $$ if (isWorthyItem(e, element)) [ FD ]
Line_27 $$ final Comparator<PyElement> comparator = new Comparator<PyElement>() -->Line_30 $$ final String n2 = e2.getName()[ FD ]
Line_4 $$ if (!element.isValid()) -->Line_5 $$ return children[ CD ]
Line_27 $$ final Comparator<PyElement> comparator = new Comparator<PyElement>() -->Line_29 $$ final String n1 = e1.getName()[ FD ]
Line_9 $$ if (isWorthyItem(e, element)) -->Line_12 $$ e.acceptChildren(this)[ CD ]
Line_27 $$ final Comparator<PyElement> comparator = new Comparator<PyElement>() -->Line_29 $$ final String n1 = e1.getName()[ CD ]
Line_2 $$ private Collection<PyElement> getElementChildren(final PyElement element) -->Line_7 $$ element.acceptChildren(new PyElementVisitor() [ FD ]
Line_9 $$ if (isWorthyItem(e, element)) -->Line_10 $$ children.add((PyElement) e)[ CD ]
Line_2 $$ private Collection<PyElement> getElementChildren(final PyElement element) -->Line_4 $$ if (!element.isValid()) [ CD ]
Line_29 $$ final String n1 = e1.getName()-->Line_31 $$ return (n1 != null && n2 != null) ? n1.compareTo(n2) : 0[ FD ]
