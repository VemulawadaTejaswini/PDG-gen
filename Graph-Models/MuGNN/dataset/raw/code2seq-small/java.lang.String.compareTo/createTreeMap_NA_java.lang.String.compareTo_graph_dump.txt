Line_10 $$ int res = lefts.next().compareTo(rights.next())-->Line_11 $$ if (res != 0)[ FD ]
Line_7 $$ Iterator<String> lefts = left.getComponents().iterator()-->Line_9 $$ while (lefts.hasNext() && rights.hasNext()) [ FD ]
Line_7 $$ Iterator<String> lefts = left.getComponents().iterator()-->Line_10 $$ int res = lefts.next().compareTo(rights.next())[ FD ]
Line_8 $$ Iterator<String> rights = right.getComponents().iterator()-->Line_10 $$ int res = lefts.next().compareTo(rights.next())[ FD ]
Line_3 $$ return new TreeMap<QualifiedName, Integer>(new Comparator<QualifiedName>() -->Line_8 $$ Iterator<String> rights = right.getComponents().iterator()[ CD ]
Line_8 $$ Iterator<String> rights = right.getComponents().iterator()-->Line_9 $$ while (lefts.hasNext() && rights.hasNext()) [ FD ]
Line_7 $$ Iterator<String> lefts = left.getComponents().iterator()-->Line_14 $$ if (lefts.hasNext())[ FD ]
Line_3 $$ return new TreeMap<QualifiedName, Integer>(new Comparator<QualifiedName>() -->Line_7 $$ Iterator<String> lefts = left.getComponents().iterator()[ CD ]
Line_16 $$ if (rights.hasNext())-->Line_17 $$ return -1[ CD ]
Line_14 $$ if (lefts.hasNext())-->Line_15 $$ return 1[ CD ]
Line_2 $$ private static TreeMap<QualifiedName, Integer> createTreeMap() -->Line_3 $$ return new TreeMap<QualifiedName, Integer>(new Comparator<QualifiedName>() [ CD ]
Line_3 $$ return new TreeMap<QualifiedName, Integer>(new Comparator<QualifiedName>() -->Line_7 $$ Iterator<String> lefts = left.getComponents().iterator()[ FD ]
Line_9 $$ while (lefts.hasNext() && rights.hasNext()) -->Line_11 $$ if (res != 0)[ CD ]
Line_3 $$ return new TreeMap<QualifiedName, Integer>(new Comparator<QualifiedName>() -->Line_8 $$ Iterator<String> rights = right.getComponents().iterator()[ FD ]
Line_3 $$ return new TreeMap<QualifiedName, Integer>(new Comparator<QualifiedName>() -->Line_14 $$ if (lefts.hasNext())[ CD ]
Line_11 $$ if (res != 0)-->Line_12 $$ return res[ CD ]
Line_8 $$ Iterator<String> rights = right.getComponents().iterator()-->Line_16 $$ if (rights.hasNext())[ FD ]
Line_3 $$ return new TreeMap<QualifiedName, Integer>(new Comparator<QualifiedName>() -->Line_16 $$ if (rights.hasNext())[ CD ]
Line_9 $$ while (lefts.hasNext() && rights.hasNext()) -->Line_10 $$ int res = lefts.next().compareTo(rights.next())[ CD ]
Line_3 $$ return new TreeMap<QualifiedName, Integer>(new Comparator<QualifiedName>() -->Line_9 $$ while (lefts.hasNext() && rights.hasNext()) [ CD ]
