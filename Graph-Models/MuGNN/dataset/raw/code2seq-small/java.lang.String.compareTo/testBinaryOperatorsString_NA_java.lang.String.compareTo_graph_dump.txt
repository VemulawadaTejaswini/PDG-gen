Line_4 $$ for (String left : stringLefts) -->Line_7 $$ assertExecute(generateExpression("%s <> %s", left, right), BOOLEAN, left == null || right == null ? null : !left.equals(right))[ FD ]
Line_5 $$ for (String right : stringRights) -->Line_10 $$ assertExecute(generateExpression("%s >= %s", left, right), BOOLEAN, left == null || right == null ? null : left.compareTo(right) >= 0)[ FD ]
Line_4 $$ for (String left : stringLefts) -->Line_12 $$ assertExecute(generateExpression("%s || %s", left, right), VARCHAR, left == null || right == null ? null : left + right)[ FD ]
Line_4 $$ for (String left : stringLefts) -->Line_10 $$ assertExecute(generateExpression("%s >= %s", left, right), BOOLEAN, left == null || right == null ? null : left.compareTo(right) >= 0)[ FD ]
Line_4 $$ for (String left : stringLefts) -->Line_9 $$ assertExecute(generateExpression("%s < %s", left, right), BOOLEAN, left == null || right == null ? null : left.compareTo(right) < 0)[ FD ]
Line_5 $$ for (String right : stringRights) -->Line_14 $$ assertExecute(generateExpression("nullif(%s, %s)", left, right), VARCHAR, nullIf(left, right))[ FD ]
Line_4 $$ for (String left : stringLefts) -->Line_8 $$ assertExecute(generateExpression("%s > %s", left, right), BOOLEAN, left == null || right == null ? null : left.compareTo(right) > 0)[ FD ]
Line_5 $$ for (String right : stringRights) -->Line_11 $$ assertExecute(generateExpression("%s <= %s", left, right), BOOLEAN, left == null || right == null ? null : left.compareTo(right) <= 0)[ FD ]
Line_5 $$ for (String right : stringRights) -->Line_8 $$ assertExecute(generateExpression("%s > %s", left, right), BOOLEAN, left == null || right == null ? null : left.compareTo(right) > 0)[ FD ]
Line_4 $$ for (String left : stringLefts) -->Line_11 $$ assertExecute(generateExpression("%s <= %s", left, right), BOOLEAN, left == null || right == null ? null : left.compareTo(right) <= 0)[ FD ]
Line_5 $$ for (String right : stringRights) -->Line_9 $$ assertExecute(generateExpression("%s < %s", left, right), BOOLEAN, left == null || right == null ? null : left.compareTo(right) < 0)[ FD ]
Line_4 $$ for (String left : stringLefts) -->Line_13 $$ assertExecute(generateExpression("%s is distinct from %s", left, right), BOOLEAN, !Objects.equals(left, right))[ FD ]
Line_5 $$ for (String right : stringRights) -->Line_12 $$ assertExecute(generateExpression("%s || %s", left, right), VARCHAR, left == null || right == null ? null : left + right)[ FD ]
Line_4 $$ for (String left : stringLefts) -->Line_14 $$ assertExecute(generateExpression("nullif(%s, %s)", left, right), VARCHAR, nullIf(left, right))[ FD ]
Line_5 $$ for (String right : stringRights) -->Line_6 $$ assertExecute(generateExpression("%s = %s", left, right), BOOLEAN, left == null || right == null ? null : left.equals(right))[ FD ]
Line_4 $$ for (String left : stringLefts) -->Line_6 $$ assertExecute(generateExpression("%s = %s", left, right), BOOLEAN, left == null || right == null ? null : left.equals(right))[ FD ]
Line_5 $$ for (String right : stringRights) -->Line_7 $$ assertExecute(generateExpression("%s <> %s", left, right), BOOLEAN, left == null || right == null ? null : !left.equals(right))[ FD ]
Line_5 $$ for (String right : stringRights) -->Line_13 $$ assertExecute(generateExpression("%s is distinct from %s", left, right), BOOLEAN, !Objects.equals(left, right))[ FD ]
