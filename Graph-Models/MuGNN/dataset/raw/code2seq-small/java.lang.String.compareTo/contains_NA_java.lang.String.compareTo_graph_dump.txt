Line_3 $$ for (int low = 0, high = names.length - 1; low <= high; ) -->Line_7 $$ high = middle - 1[ FD ]
Line_6 $$ if (compare > 0) -->Line_7 $$ high = middle - 1[ CD ]
Line_4 $$ final int middle = low + ((high - low) / 2)-->Line_9 $$ low = middle + 1[ FD ]
Line_2 $$ public boolean contains(String name) -->Line_3 $$ for (int low = 0, high = names.length - 1; low <= high; ) [ CD ]
Line_4 $$ final int middle = low + ((high - low) / 2)-->Line_7 $$ high = middle - 1[ FD ]
Line_3 $$ for (int low = 0, high = names.length - 1; low <= high; ) -->Line_4 $$ final int middle = low + ((high - low) / 2)[ CD ]
Line_6 $$ if (compare > 0) -->Line_8 $$ if (compare < 0) [ CD ]
Line_8 $$ if (compare < 0) -->Line_11 $$ return true[ CD ]
Line_3 $$ for (int low = 0, high = names.length - 1; low <= high; ) -->Line_6 $$ if (compare > 0) [ CD ]
Line_2 $$ public boolean contains(String name) -->Line_14 $$ return false[ CD ]
Line_5 $$ final int compare = names[middle].compareTo(name)-->Line_8 $$ if (compare < 0) [ FD ]
Line_2 $$ public boolean contains(String name) -->Line_5 $$ final int compare = names[middle].compareTo(name)[ FD ]
Line_5 $$ final int compare = names[middle].compareTo(name)-->Line_6 $$ if (compare > 0) [ FD ]
Line_3 $$ for (int low = 0, high = names.length - 1; low <= high; ) -->Line_9 $$ low = middle + 1[ FD ]
Line_8 $$ if (compare < 0) -->Line_9 $$ low = middle + 1[ CD ]
Line_9 $$ low = middle + 1-->Line_3 $$ for (int low = 0, high = names.length - 1; low <= high; ) [ FD ]
Line_3 $$ for (int low = 0, high = names.length - 1; low <= high; ) -->Line_5 $$ final int compare = names[middle].compareTo(name)[ CD ]
Line_7 $$ high = middle - 1-->Line_3 $$ for (int low = 0, high = names.length - 1; low <= high; ) [ FD ]
