Line_3 $$ Collections.sort(changes, new Comparator<Change>() -->Line_6 $$ final String p2 = FileUtil.toSystemIndependentName(ChangesUtil.getFilePath(o2).getPath())[ CD ]
Line_3 $$ Collections.sort(changes, new Comparator<Change>() -->Line_5 $$ final String p1 = FileUtil.toSystemIndependentName(ChangesUtil.getFilePath(o1).getPath())[ CD ]
Line_3 $$ Collections.sort(changes, new Comparator<Change>() -->Line_7 $$ return p1.compareTo(p2)[ CD ]
Line_2 $$ public static void sortChanges(final List<Change> changes) -->Line_3 $$ Collections.sort(changes, new Comparator<Change>() [ CD ]
Line_3 $$ Collections.sort(changes, new Comparator<Change>() -->Line_5 $$ final String p1 = FileUtil.toSystemIndependentName(ChangesUtil.getFilePath(o1).getPath())[ FD ]
Line_2 $$ public static void sortChanges(final List<Change> changes) -->Line_3 $$ Collections.sort(changes, new Comparator<Change>() [ FD ]
Line_5 $$ final String p1 = FileUtil.toSystemIndependentName(ChangesUtil.getFilePath(o1).getPath())-->Line_7 $$ return p1.compareTo(p2)[ FD ]
Line_3 $$ Collections.sort(changes, new Comparator<Change>() -->Line_6 $$ final String p2 = FileUtil.toSystemIndependentName(ChangesUtil.getFilePath(o2).getPath())[ FD ]
Line_6 $$ final String p2 = FileUtil.toSystemIndependentName(ChangesUtil.getFilePath(o2).getPath())-->Line_7 $$ return p1.compareTo(p2)[ FD ]
