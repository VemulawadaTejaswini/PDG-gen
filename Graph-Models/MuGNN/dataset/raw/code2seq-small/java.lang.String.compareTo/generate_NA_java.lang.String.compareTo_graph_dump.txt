Line_9 $$ final List<?> list-->Line_46 $$ list.clear()[ FD ]
Line_4 $$ Runnable runnable = new Runnable() -->Line_10 $$ if (myResult.isEmpty()) [ CD ]
Line_9 $$ final List<?> list-->Line_21 $$ final int size = list.size()[ FD ]
Line_22 $$ final ProgressIndicator indicator = ProgressManager.getInstance().getProgressIndicator()-->Line_44 $$ indicator.setFraction(i / (double) size)[ FD ]
Line_4 $$ Runnable runnable = new Runnable() -->Line_9 $$ final List<?> list[ CD ]
Line_29 $$ if (o1 instanceof PsiElement && o2 instanceof PsiElement) -->Line_30 $$ return ((PsiElement) o1).getTextRange().getStartOffset() - ((PsiElement) o2).getTextRange().getStartOffset()[ CD ]
Line_19 $$ list = myResult-->Line_21 $$ final int size = list.size()[ FD ]
Line_36 $$ for (int i = 0; i < size; i++) -->Line_37 $$ indicator.checkCanceled()[ CD ]
Line_29 $$ if (o1 instanceof PsiElement && o2 instanceof PsiElement) -->Line_32 $$ return String.valueOf(o1).compareTo(String.valueOf(o2))[ CD ]
Line_4 $$ Runnable runnable = new Runnable() -->Line_21 $$ final int size = list.size()[ CD ]
Line_9 $$ final List<?> list-->Line_24 $$ Collections.sort(list, new Comparator() [ FD ]
Line_4 $$ Runnable runnable = new Runnable() -->Line_23 $$ indicator.setText("Collecting matches...")[ CD ]
Line_22 $$ final ProgressIndicator indicator = ProgressManager.getInstance().getProgressIndicator()-->Line_37 $$ indicator.checkCanceled()[ FD ]
Line_22 $$ final ProgressIndicator indicator = ProgressManager.getInstance().getProgressIndicator()-->Line_42 $$ indicator.setText2(element.getContainingFile().getName())[ FD ]
Line_24 $$ Collections.sort(list, new Comparator() -->Line_28 $$ indicator.checkCanceled()[ CD ]
Line_4 $$ Runnable runnable = new Runnable() -->Line_46 $$ list.clear()[ CD ]
Line_40 $$ final PsiElement element = (PsiElement) o-->Line_42 $$ indicator.setText2(element.getContainingFile().getName())[ FD ]
Line_39 $$ if (o instanceof PsiElement) -->Line_41 $$ processor.process(new UsageInfo2UsageAdapter(new UsageInfo(element)))[ CD ]
Line_4 $$ Runnable runnable = new Runnable() -->Line_22 $$ final ProgressIndicator indicator = ProgressManager.getInstance().getProgressIndicator()[ CD ]
Line_39 $$ if (o instanceof PsiElement) -->Line_42 $$ indicator.setText2(element.getContainingFile().getName())[ CD ]
Line_9 $$ final List<?> list-->Line_38 $$ Object o = list.get(i)[ FD ]
Line_21 $$ final int size = list.size()-->Line_36 $$ for (int i = 0; i < size; i++) [ FD ]
Line_39 $$ if (o instanceof PsiElement) -->Line_40 $$ final PsiElement element = (PsiElement) o[ CD ]
Line_22 $$ final ProgressIndicator indicator = ProgressManager.getInstance().getProgressIndicator()-->Line_28 $$ indicator.checkCanceled()[ FD ]
Line_9 $$ final List<?> list-->Line_19 $$ list = myResult[ FD ]
Line_19 $$ list = myResult-->Line_38 $$ Object o = list.get(i)[ FD ]
Line_12 $$ list = (List<?>) myXPath.selectNodes(myContextNode)-->Line_38 $$ Object o = list.get(i)[ FD ]
Line_38 $$ Object o = list.get(i)-->Line_39 $$ if (o instanceof PsiElement) [ FD ]
Line_4 $$ Runnable runnable = new Runnable() -->Line_24 $$ Collections.sort(list, new Comparator() [ CD ]
Line_12 $$ list = (List<?>) myXPath.selectNodes(myContextNode)-->Line_19 $$ list = myResult[ FD ]
Line_19 $$ list = myResult-->Line_24 $$ Collections.sort(list, new Comparator() [ FD ]
Line_19 $$ list = myResult-->Line_46 $$ list.clear()[ FD ]
Line_36 $$ for (int i = 0; i < size; i++) -->Line_44 $$ indicator.setFraction(i / (double) size)[ CD ]
Line_4 $$ Runnable runnable = new Runnable() -->Line_49 $$ ApplicationManager.getApplication().runReadAction(runnable)[ FD ]
Line_12 $$ list = (List<?>) myXPath.selectNodes(myContextNode)-->Line_24 $$ Collections.sort(list, new Comparator() [ FD ]
Line_36 $$ for (int i = 0; i < size; i++) -->Line_38 $$ Object o = list.get(i)[ CD ]
Line_24 $$ Collections.sort(list, new Comparator() -->Line_29 $$ if (o1 instanceof PsiElement && o2 instanceof PsiElement) [ CD ]
Line_36 $$ for (int i = 0; i < size; i++) -->Line_39 $$ if (o instanceof PsiElement) [ CD ]
Line_36 $$ for (int i = 0; i < size; i++) -->Line_38 $$ Object o = list.get(i)[ FD ]
Line_22 $$ final ProgressIndicator indicator = ProgressManager.getInstance().getProgressIndicator()-->Line_23 $$ indicator.setText("Collecting matches...")[ FD ]
Line_9 $$ final List<?> list-->Line_12 $$ list = (List<?>) myXPath.selectNodes(myContextNode)[ FD ]
Line_24 $$ Collections.sort(list, new Comparator() -->Line_32 $$ return String.valueOf(o1).compareTo(String.valueOf(o2))[ FD ]
Line_10 $$ if (myResult.isEmpty()) -->Line_19 $$ list = myResult[ CD ]
Line_4 $$ Runnable runnable = new Runnable() -->Line_36 $$ for (int i = 0; i < size; i++) [ CD ]
Line_12 $$ list = (List<?>) myXPath.selectNodes(myContextNode)-->Line_46 $$ list.clear()[ FD ]
Line_12 $$ list = (List<?>) myXPath.selectNodes(myContextNode)-->Line_21 $$ final int size = list.size()[ FD ]
