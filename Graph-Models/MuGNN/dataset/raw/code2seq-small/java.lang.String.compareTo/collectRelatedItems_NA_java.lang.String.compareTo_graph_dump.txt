Line_6 $$ if (dataContext != null) -->Line_7 $$ items.addAll(provider.getItems(dataContext))[ CD ]
Line_14 $$ String o2 = i2.getGroup()-->Line_15 $$ return StringUtil.isEmpty(o1) ? 1 : StringUtil.isEmpty(o2) ? -1 : o1.compareTo(o2)[ FD ]
Line_11 $$ Arrays.sort(result, new Comparator<GotoRelatedItem>() -->Line_14 $$ String o2 = i2.getGroup()[ FD ]
Line_10 $$ GotoRelatedItem[] result = items.toArray(new GotoRelatedItem[items.size()])-->Line_11 $$ Arrays.sort(result, new Comparator<GotoRelatedItem>() [ FD ]
Line_3 $$ Set<GotoRelatedItem> items = ContainerUtil.newLinkedHashSet()-->Line_10 $$ GotoRelatedItem[] result = items.toArray(new GotoRelatedItem[items.size()])[ FD ]
Line_4 $$ for (GotoRelatedProvider provider : Extensions.getExtensions(GotoRelatedProvider.EP_NAME)) -->Line_7 $$ items.addAll(provider.getItems(dataContext))[ FD ]
Line_2 $$ public static List<GotoRelatedItem> collectRelatedItems(@NotNull PsiElement contextElement, @Nullable DataContext dataContext) -->Line_18 $$ return Arrays.asList(result)[ CD ]
Line_13 $$ String o1 = i1.getGroup()-->Line_15 $$ return StringUtil.isEmpty(o1) ? 1 : StringUtil.isEmpty(o2) ? -1 : o1.compareTo(o2)[ FD ]
Line_11 $$ Arrays.sort(result, new Comparator<GotoRelatedItem>() -->Line_15 $$ return StringUtil.isEmpty(o1) ? 1 : StringUtil.isEmpty(o2) ? -1 : o1.compareTo(o2)[ CD ]
Line_2 $$ public static List<GotoRelatedItem> collectRelatedItems(@NotNull PsiElement contextElement, @Nullable DataContext dataContext) -->Line_5 $$ items.addAll(provider.getItems(contextElement))[ FD ]
Line_2 $$ public static List<GotoRelatedItem> collectRelatedItems(@NotNull PsiElement contextElement, @Nullable DataContext dataContext) -->Line_6 $$ if (dataContext != null) [ FD ]
Line_11 $$ Arrays.sort(result, new Comparator<GotoRelatedItem>() -->Line_14 $$ String o2 = i2.getGroup()[ CD ]
Line_2 $$ public static List<GotoRelatedItem> collectRelatedItems(@NotNull PsiElement contextElement, @Nullable DataContext dataContext) -->Line_7 $$ items.addAll(provider.getItems(dataContext))[ FD ]
Line_3 $$ Set<GotoRelatedItem> items = ContainerUtil.newLinkedHashSet()-->Line_7 $$ items.addAll(provider.getItems(dataContext))[ FD ]
Line_3 $$ Set<GotoRelatedItem> items = ContainerUtil.newLinkedHashSet()-->Line_5 $$ items.addAll(provider.getItems(contextElement))[ FD ]
Line_11 $$ Arrays.sort(result, new Comparator<GotoRelatedItem>() -->Line_13 $$ String o1 = i1.getGroup()[ CD ]
Line_11 $$ Arrays.sort(result, new Comparator<GotoRelatedItem>() -->Line_13 $$ String o1 = i1.getGroup()[ FD ]
Line_2 $$ public static List<GotoRelatedItem> collectRelatedItems(@NotNull PsiElement contextElement, @Nullable DataContext dataContext) -->Line_10 $$ GotoRelatedItem[] result = items.toArray(new GotoRelatedItem[items.size()])[ CD ]
Line_10 $$ GotoRelatedItem[] result = items.toArray(new GotoRelatedItem[items.size()])-->Line_18 $$ return Arrays.asList(result)[ FD ]
Line_2 $$ public static List<GotoRelatedItem> collectRelatedItems(@NotNull PsiElement contextElement, @Nullable DataContext dataContext) -->Line_11 $$ Arrays.sort(result, new Comparator<GotoRelatedItem>() [ CD ]
Line_2 $$ public static List<GotoRelatedItem> collectRelatedItems(@NotNull PsiElement contextElement, @Nullable DataContext dataContext) -->Line_3 $$ Set<GotoRelatedItem> items = ContainerUtil.newLinkedHashSet()[ CD ]
Line_4 $$ for (GotoRelatedProvider provider : Extensions.getExtensions(GotoRelatedProvider.EP_NAME)) -->Line_5 $$ items.addAll(provider.getItems(contextElement))[ FD ]
