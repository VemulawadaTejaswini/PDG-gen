Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_35 $$ stream.println(myIsAnonymous)[ CD ]
Line_38 $$ Arrays.sort(fs, new Comparator<FieldRepr>() -->Line_40 $$ if (o1.name == o2.name) [ CD ]
Line_52 $$ Arrays.sort(ms, new Comparator<MethodRepr>() -->Line_54 $$ if (o1.name == o2.name) [ CD ]
Line_40 $$ if (o1.name == o2.name) -->Line_41 $$ return o1.myType.getDescr(context).compareTo(o2.myType.getDescr(context))[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_56 $$ final String d2 = o2.myType.getDescr(context)[ FD ]
Line_61 $$ if (l1 == l2) -->Line_62 $$ for (int i = 0; i < l1; i++) [ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_28 $$ stream.print("      Policy     : ")[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_6 $$ stream.print("      Superclass : ")[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_5 $$ stream.println(context.getValue(myFileName))[ FD ]
Line_61 $$ if (l1 == l2) -->Line_70 $$ return 0[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_5 $$ stream.println(context.getValue(myFileName))[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_31 $$ stream.println(context.getValue(myOuterClassName))[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_36 $$ stream.println("      Fields:")[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_49 $$ stream.println("      End Of Fields")[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_63 $$ final String d11 = o1.myArgumentTypes[i].getDescr(context)[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_33 $$ stream.println(myIsLocal)[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_20 $$ stream.print("      Targets    : ")[ CD ]
Line_52 $$ Arrays.sort(ms, new Comparator<MethodRepr>() -->Line_76 $$ return context.getValue(o1.name).compareTo(context.getValue(o2.name))[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_51 $$ final MethodRepr[] ms = myMethods.toArray(new MethodRepr[myMethods.size()])[ CD ]
Line_58 $$ if (c == 0) -->Line_59 $$ final int l1 = o1.myArgumentTypes.length[ CD ]
Line_65 $$ final int cc = d11.compareTo(d22)-->Line_66 $$ if (cc != 0) [ FD ]
Line_58 $$ if (c == 0) -->Line_72 $$ return l1 - l2[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_83 $$ stream.println("      Usages:")[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_4 $$ stream.print("      Filename   : ")[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_9 $$ final TypeRepr.AbstractType[] is = myInterfaces.toArray(new TypeRepr.AbstractType[myInterfaces.size()])[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_43 $$ return context.getValue(o1.name).compareTo(context.getValue(o2.name))[ FD ]
Line_57 $$ final int c = d1.compareTo(d2)-->Line_58 $$ if (c == 0) [ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_7 $$ stream.println(mySuperClass == null ? "<null>" : mySuperClass.getDescr(context))[ CD ]
Line_62 $$ for (int i = 0; i < l1; i++) -->Line_64 $$ final String d22 = o2.myArgumentTypes[i].getDescr(context)[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_19 $$ stream.println()[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_82 $$ stream.println("      End Of Methods")[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_4 $$ stream.print("      Filename   : ")[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_16 $$ stream.print(t.getDescr(context))[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_36 $$ stream.println("      Fields:")[ FD ]
Line_54 $$ if (o1.name == o2.name) -->Line_58 $$ if (c == 0) [ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_31 $$ stream.println(context.getValue(myOuterClassName))[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_3 $$ super.toStream(context, stream)[ FD ]
Line_38 $$ Arrays.sort(fs, new Comparator<FieldRepr>() -->Line_43 $$ return context.getValue(o1.name).compareTo(context.getValue(o2.name))[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_8 $$ stream.print("      Interfaces : ")[ FD ]
Line_54 $$ if (o1.name == o2.name) -->Line_55 $$ final String d1 = o1.myType.getDescr(context)[ CD ]
Line_62 $$ for (int i = 0; i < l1; i++) -->Line_65 $$ final int cc = d11.compareTo(d22)[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_97 $$ stream.println(s)[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_64 $$ final String d22 = o2.myArgumentTypes[i].getDescr(context)[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_22 $$ Arrays.sort(es)[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_27 $$ stream.println()[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_20 $$ stream.print("      Targets    : ")[ FD ]
Line_66 $$ if (cc != 0) -->Line_67 $$ return cc[ CD ]
Line_54 $$ if (o1.name == o2.name) -->Line_74 $$ return c[ CD ]
Line_56 $$ final String d2 = o2.myType.getDescr(context)-->Line_57 $$ final int c = d1.compareTo(d2)[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_27 $$ stream.println()[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_37 $$ final FieldRepr[] fs = myFields.toArray(new FieldRepr[myFields.size()])[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_32 $$ stream.print("      Local class: ")[ FD ]
Line_9 $$ final TypeRepr.AbstractType[] is = myInterfaces.toArray(new TypeRepr.AbstractType[myInterfaces.size()])-->Line_10 $$ Arrays.sort(is, new Comparator<TypeRepr.AbstractType>() [ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_83 $$ stream.println("      Usages:")[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_32 $$ stream.print("      Local class: ")[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_80 $$ m.toStream(context, stream)[ FD ]
Line_10 $$ Arrays.sort(is, new Comparator<TypeRepr.AbstractType>() -->Line_12 $$ return o1.getDescr(context).compareTo(o2.getDescr(context))[ CD ]
Line_58 $$ if (c == 0) -->Line_60 $$ final int l2 = o2.myArgumentTypes.length[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_25 $$ stream.print("; ")[ FD ]
Line_54 $$ if (o1.name == o2.name) -->Line_57 $$ final int c = d1.compareTo(d2)[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_55 $$ final String d1 = o1.myType.getDescr(context)[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_30 $$ stream.print("      Outer class: ")[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_21 $$ final ElemType[] es = myAnnotationTargets.toArray(new ElemType[myAnnotationTargets.size()])[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_34 $$ stream.print("      Anonymous class: ")[ CD ]
Line_63 $$ final String d11 = o1.myArgumentTypes[i].getDescr(context)-->Line_65 $$ final int cc = d11.compareTo(d22)[ FD ]
Line_54 $$ if (o1.name == o2.name) -->Line_56 $$ final String d2 = o2.myType.getDescr(context)[ CD ]
Line_59 $$ final int l1 = o1.myArgumentTypes.length-->Line_62 $$ for (int i = 0; i < l1; i++) [ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_47 $$ f.toStream(context, stream)[ FD ]
Line_58 $$ if (c == 0) -->Line_61 $$ if (l1 == l2) [ CD ]
Line_62 $$ for (int i = 0; i < l1; i++) -->Line_63 $$ final String d11 = o1.myArgumentTypes[i].getDescr(context)[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_6 $$ stream.print("      Superclass : ")[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_49 $$ stream.println("      End Of Fields")[ FD ]
Line_64 $$ final String d22 = o2.myArgumentTypes[i].getDescr(context)-->Line_65 $$ final int cc = d11.compareTo(d22)[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_10 $$ Arrays.sort(is, new Comparator<TypeRepr.AbstractType>() [ CD ]
Line_10 $$ Arrays.sort(is, new Comparator<TypeRepr.AbstractType>() -->Line_12 $$ return o1.getDescr(context).compareTo(o2.getDescr(context))[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_52 $$ Arrays.sort(ms, new Comparator<MethodRepr>() [ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_7 $$ stream.println(mySuperClass == null ? "<null>" : mySuperClass.getDescr(context))[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_95 $$ Collections.sort(usages)[ CD ]
Line_62 $$ for (int i = 0; i < l1; i++) -->Line_66 $$ if (cc != 0) [ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_35 $$ stream.println(myIsAnonymous)[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_29 $$ stream.println(myRetentionPolicy)[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_76 $$ return context.getValue(o1.name).compareTo(context.getValue(o2.name))[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_38 $$ Arrays.sort(fs, new Comparator<FieldRepr>() [ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_34 $$ stream.print("      Anonymous class: ")[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_50 $$ stream.println("      Methods:")[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_29 $$ stream.println(myRetentionPolicy)[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_8 $$ stream.print("      Interfaces : ")[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_99 $$ stream.println("      End Of Usages")[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_82 $$ stream.println("      End Of Methods")[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_30 $$ stream.print("      Outer class: ")[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_28 $$ stream.print("      Policy     : ")[ CD ]
Line_55 $$ final String d1 = o1.myType.getDescr(context)-->Line_57 $$ final int c = d1.compareTo(d2)[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_99 $$ stream.println("      End Of Usages")[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_41 $$ return o1.myType.getDescr(context).compareTo(o2.myType.getDescr(context))[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_19 $$ stream.println()[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_24 $$ stream.print(e)[ FD ]
Line_60 $$ final int l2 = o2.myArgumentTypes.length-->Line_61 $$ if (l1 == l2) [ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_17 $$ stream.print(" ")[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_50 $$ stream.println("      Methods:")[ FD ]
Line_59 $$ final int l1 = o1.myArgumentTypes.length-->Line_61 $$ if (l1 == l2) [ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_3 $$ super.toStream(context, stream)[ CD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_33 $$ stream.println(myIsLocal)[ FD ]
Line_2 $$ public void toStream(final DependencyContext context, final PrintStream stream) -->Line_12 $$ return o1.getDescr(context).compareTo(o2.getDescr(context))[ FD ]
