Line_2 $$ private void setupUI() -->Line_6 $$ addTabs()[ CD ]
Line_8 $$ tabbedPane.addChangeListener(new ChangeListener() -->Line_10 $$ int selection = tabbedPane.getSelectedIndex()[ CD ]
Line_11 $$ if (selection >= 0 && selection < gradleTabs.size()) -->Line_12 $$ SettingsNode rootNode = settings.addChildIfNotPresent(MAIN_PANEL)[ CD ]
Line_12 $$ SettingsNode rootNode = settings.addChildIfNotPresent(MAIN_PANEL)-->Line_13 $$ rootNode.setValueOfChild(CURRENT_TAB, gradleTabs.get(selection).getName())[ FD ]
Line_10 $$ int selection = tabbedPane.getSelectedIndex()-->Line_13 $$ rootNode.setValueOfChild(CURRENT_TAB, gradleTabs.get(selection).getName())[ FD ]
Line_2 $$ private void setupUI() -->Line_8 $$ tabbedPane.addChangeListener(new ChangeListener() [ CD ]
Line_11 $$ if (selection >= 0 && selection < gradleTabs.size()) -->Line_13 $$ rootNode.setValueOfChild(CURRENT_TAB, gradleTabs.get(selection).getName())[ CD ]
Line_2 $$ private void setupUI() -->Line_3 $$ setLayout(new BorderLayout())[ CD ]
Line_2 $$ private void setupUI() -->Line_7 $$ restoreLastTab()[ CD ]
Line_2 $$ private void setupUI() -->Line_5 $$ add(tabbedPane, BorderLayout.CENTER)[ CD ]
Line_8 $$ tabbedPane.addChangeListener(new ChangeListener() -->Line_11 $$ if (selection >= 0 && selection < gradleTabs.size()) [ CD ]
