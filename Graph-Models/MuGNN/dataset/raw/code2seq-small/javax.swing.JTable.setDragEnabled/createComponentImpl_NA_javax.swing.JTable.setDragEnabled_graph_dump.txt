Line_2 $$ public JComponent createComponentImpl() -->Line_8 $$ myTable.setDragEnabled(false)[ CD ]
Line_26 $$ if (changes) -->Line_27 $$ saveData()[ CD ]
Line_21 $$ if (file != null) -->Line_22 $$ tableModel.addTableItem(new TableItem(file))[ CD ]
Line_2 $$ public JComponent createComponentImpl() -->Line_5 $$ myTable.setIntercellSpacing(new Dimension(0, 0))[ CD ]
Line_12 $$ JPanel tablePanel = ToolbarDecorator.createDecorator(myTable).setAddAction(new AnActionButtonRunnable() -->Line_17 $$ VirtualFile[] files = FileChooser.chooseFiles(myDescriptor, myTable, myProject, null)[ CD ]
Line_14 $$ FileChooserDescriptor myDescriptor = FileChooserDescriptorFactory.createSingleFolderDescriptor()-->Line_15 $$ myDescriptor.setTitle(ProjectBundle.message("add.external.annotations.path.title"))[ FD ]
Line_2 $$ public JComponent createComponentImpl() -->Line_11 $$ myTable.getSelectionModel().setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION)[ CD ]
Line_19 $$ boolean changes = false-->Line_23 $$ changes = true[ FD ]
Line_12 $$ JPanel tablePanel = ToolbarDecorator.createDecorator(myTable).setAddAction(new AnActionButtonRunnable() -->Line_14 $$ FileChooserDescriptor myDescriptor = FileChooserDescriptorFactory.createSingleFolderDescriptor()[ CD ]
Line_12 $$ JPanel tablePanel = ToolbarDecorator.createDecorator(myTable).setAddAction(new AnActionButtonRunnable() -->Line_33 $$ final List removedItems = TableUtil.removeSelectedItems(myTable)[ CD ]
Line_2 $$ public JComponent createComponentImpl() -->Line_41 $$ mainPanel.add(new JBLabel(ProjectBundle.message("project.roots.external.annotations.description"), UIUtil.ComponentStyle.SMALL, UIUtil.FontColor.BRIGHTER), BorderLayout.NORTH)[ CD ]
Line_2 $$ public JComponent createComponentImpl() -->Line_7 $$ myTable.setShowGrid(false)[ CD ]
Line_12 $$ JPanel tablePanel = ToolbarDecorator.createDecorator(myTable).setAddAction(new AnActionButtonRunnable() -->Line_15 $$ myDescriptor.setTitle(ProjectBundle.message("add.external.annotations.path.title"))[ CD ]
Line_12 $$ JPanel tablePanel = ToolbarDecorator.createDecorator(myTable).setAddAction(new AnActionButtonRunnable() -->Line_26 $$ if (changes) [ CD ]
Line_12 $$ JPanel tablePanel = ToolbarDecorator.createDecorator(myTable).setAddAction(new AnActionButtonRunnable() -->Line_40 $$ mainPanel.add(tablePanel, BorderLayout.CENTER)[ FD ]
Line_12 $$ JPanel tablePanel = ToolbarDecorator.createDecorator(myTable).setAddAction(new AnActionButtonRunnable() -->Line_19 $$ boolean changes = false[ CD ]
Line_18 $$ final MyTableModel tableModel = (MyTableModel) myTable.getModel()-->Line_28 $$ TableUtil.selectRows(myTable, new int[] [ FD ]
Line_2 $$ public JComponent createComponentImpl() -->Line_42 $$ return mainPanel[ CD ]
Line_12 $$ JPanel tablePanel = ToolbarDecorator.createDecorator(myTable).setAddAction(new AnActionButtonRunnable() -->Line_18 $$ final MyTableModel tableModel = (MyTableModel) myTable.getModel()[ CD ]
Line_2 $$ public JComponent createComponentImpl() -->Line_9 $$ myTable.setShowHorizontalLines(false)[ CD ]
Line_14 $$ FileChooserDescriptor myDescriptor = FileChooserDescriptorFactory.createSingleFolderDescriptor()-->Line_16 $$ myDescriptor.setDescription(ProjectBundle.message("add.external.annotations.path.description"))[ FD ]
Line_18 $$ final MyTableModel tableModel = (MyTableModel) myTable.getModel()-->Line_22 $$ tableModel.addTableItem(new TableItem(file))[ FD ]
Line_20 $$ for (final VirtualFile file : files) -->Line_21 $$ if (file != null) [ FD ]
Line_12 $$ JPanel tablePanel = ToolbarDecorator.createDecorator(myTable).setAddAction(new AnActionButtonRunnable() -->Line_16 $$ myDescriptor.setDescription(ProjectBundle.message("add.external.annotations.path.description"))[ CD ]
Line_14 $$ FileChooserDescriptor myDescriptor = FileChooserDescriptorFactory.createSingleFolderDescriptor()-->Line_17 $$ VirtualFile[] files = FileChooser.chooseFiles(myDescriptor, myTable, myProject, null)[ FD ]
Line_33 $$ final List removedItems = TableUtil.removeSelectedItems(myTable)-->Line_34 $$ if (removedItems.size() > 0) [ FD ]
Line_21 $$ if (file != null) -->Line_23 $$ changes = true[ CD ]
Line_3 $$ final DefaultTableModel tableModel = createModel()-->Line_22 $$ tableModel.addTableItem(new TableItem(file))[ FD ]
Line_2 $$ public JComponent createComponentImpl() -->Line_10 $$ myTable.setShowVerticalLines(false)[ CD ]
Line_3 $$ final DefaultTableModel tableModel = createModel()-->Line_28 $$ TableUtil.selectRows(myTable, new int[] [ FD ]
Line_2 $$ public JComponent createComponentImpl() -->Line_40 $$ mainPanel.add(tablePanel, BorderLayout.CENTER)[ CD ]
Line_2 $$ public JComponent createComponentImpl() -->Line_12 $$ JPanel tablePanel = ToolbarDecorator.createDecorator(myTable).setAddAction(new AnActionButtonRunnable() [ CD ]
Line_12 $$ JPanel tablePanel = ToolbarDecorator.createDecorator(myTable).setAddAction(new AnActionButtonRunnable() -->Line_34 $$ if (removedItems.size() > 0) [ CD ]
Line_34 $$ if (removedItems.size() > 0) -->Line_35 $$ saveData()[ CD ]
Line_2 $$ public JComponent createComponentImpl() -->Line_6 $$ myTable.setDefaultRenderer(TableItem.class, new MyRenderer())[ CD ]
Line_2 $$ public JComponent createComponentImpl() -->Line_3 $$ final DefaultTableModel tableModel = createModel()[ CD ]
Line_26 $$ if (changes) -->Line_28 $$ TableUtil.selectRows(myTable, new int[] [ CD ]
