Line_2 $$ private void reset(@NotNull Keymap keymap, @NotNull QuickList[] allQuickLists, String filter, @Nullable Shortcut shortcut) -->Line_10 $$ if ((filter != null && filter.length() > 0 || shortcut != null) && mainGroup.initIds().isEmpty()) [ CD ]
Line_9 $$ Group mainGroup = ActionsTreeUtil.createMainGroup(project, keymap, allQuickLists, filter, true, ActionsTreeUtil.isActionFiltered(actionManager, keymap, shortcut, filter, true))-->Line_11 $$ mainGroup = ActionsTreeUtil.createMainGroup(project, keymap, allQuickLists, filter, false, ActionsTreeUtil.isActionFiltered(actionManager, keymap, shortcut, filter, false))[ FD ]
Line_7 $$ ActionManager actionManager = ActionManager.getInstance()-->Line_11 $$ mainGroup = ActionsTreeUtil.createMainGroup(project, keymap, allQuickLists, filter, false, ActionsTreeUtil.isActionFiltered(actionManager, keymap, shortcut, filter, false))[ FD ]
Line_11 $$ mainGroup = ActionsTreeUtil.createMainGroup(project, keymap, allQuickLists, filter, false, ActionsTreeUtil.isActionFiltered(actionManager, keymap, shortcut, filter, false))-->Line_13 $$ myRoot = ActionsTreeUtil.createNode(mainGroup)[ FD ]
Line_9 $$ Group mainGroup = ActionsTreeUtil.createMainGroup(project, keymap, allQuickLists, filter, true, ActionsTreeUtil.isActionFiltered(actionManager, keymap, shortcut, filter, true))-->Line_10 $$ if ((filter != null && filter.length() > 0 || shortcut != null) && mainGroup.initIds().isEmpty()) [ FD ]
Line_7 $$ ActionManager actionManager = ActionManager.getInstance()-->Line_9 $$ Group mainGroup = ActionsTreeUtil.createMainGroup(project, keymap, allQuickLists, filter, true, ActionsTreeUtil.isActionFiltered(actionManager, keymap, shortcut, filter, true))[ FD ]
Line_8 $$ Project project = CommonDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(myComponent))-->Line_9 $$ Group mainGroup = ActionsTreeUtil.createMainGroup(project, keymap, allQuickLists, filter, true, ActionsTreeUtil.isActionFiltered(actionManager, keymap, shortcut, filter, true))[ FD ]
Line_2 $$ private void reset(@NotNull Keymap keymap, @NotNull QuickList[] allQuickLists, String filter, @Nullable Shortcut shortcut) -->Line_16 $$ model.setRoot(myRoot)[ CD ]
Line_2 $$ private void reset(@NotNull Keymap keymap, @NotNull QuickList[] allQuickLists, String filter, @Nullable Shortcut shortcut) -->Line_7 $$ ActionManager actionManager = ActionManager.getInstance()[ CD ]
Line_2 $$ private void reset(@NotNull Keymap keymap, @NotNull QuickList[] allQuickLists, String filter, @Nullable Shortcut shortcut) -->Line_18 $$ pathsKeeper.restorePaths()[ CD ]
Line_2 $$ private void reset(@NotNull Keymap keymap, @NotNull QuickList[] allQuickLists, String filter, @Nullable Shortcut shortcut) -->Line_5 $$ pathsKeeper.storePaths()[ CD ]
Line_9 $$ Group mainGroup = ActionsTreeUtil.createMainGroup(project, keymap, allQuickLists, filter, true, ActionsTreeUtil.isActionFiltered(actionManager, keymap, shortcut, filter, true))-->Line_13 $$ myRoot = ActionsTreeUtil.createNode(mainGroup)[ FD ]
Line_4 $$ final PathsKeeper pathsKeeper = new PathsKeeper()-->Line_5 $$ pathsKeeper.storePaths()[ FD ]
Line_2 $$ private void reset(@NotNull Keymap keymap, @NotNull QuickList[] allQuickLists, String filter, @Nullable Shortcut shortcut) -->Line_10 $$ if ((filter != null && filter.length() > 0 || shortcut != null) && mainGroup.initIds().isEmpty()) [ FD ]
Line_2 $$ private void reset(@NotNull Keymap keymap, @NotNull QuickList[] allQuickLists, String filter, @Nullable Shortcut shortcut) -->Line_9 $$ Group mainGroup = ActionsTreeUtil.createMainGroup(project, keymap, allQuickLists, filter, true, ActionsTreeUtil.isActionFiltered(actionManager, keymap, shortcut, filter, true))[ CD ]
Line_15 $$ MyModel model = (MyModel) myTree.getModel()-->Line_16 $$ model.setRoot(myRoot)[ FD ]
Line_15 $$ MyModel model = (MyModel) myTree.getModel()-->Line_17 $$ model.nodeStructureChanged(myRoot)[ FD ]
Line_2 $$ private void reset(@NotNull Keymap keymap, @NotNull QuickList[] allQuickLists, String filter, @Nullable Shortcut shortcut) -->Line_17 $$ model.nodeStructureChanged(myRoot)[ CD ]
Line_2 $$ private void reset(@NotNull Keymap keymap, @NotNull QuickList[] allQuickLists, String filter, @Nullable Shortcut shortcut) -->Line_4 $$ final PathsKeeper pathsKeeper = new PathsKeeper()[ CD ]
Line_2 $$ private void reset(@NotNull Keymap keymap, @NotNull QuickList[] allQuickLists, String filter, @Nullable Shortcut shortcut) -->Line_8 $$ Project project = CommonDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(myComponent))[ CD ]
Line_2 $$ private void reset(@NotNull Keymap keymap, @NotNull QuickList[] allQuickLists, String filter, @Nullable Shortcut shortcut) -->Line_15 $$ MyModel model = (MyModel) myTree.getModel()[ CD ]
Line_2 $$ private void reset(@NotNull Keymap keymap, @NotNull QuickList[] allQuickLists, String filter, @Nullable Shortcut shortcut) -->Line_9 $$ Group mainGroup = ActionsTreeUtil.createMainGroup(project, keymap, allQuickLists, filter, true, ActionsTreeUtil.isActionFiltered(actionManager, keymap, shortcut, filter, true))[ FD ]
Line_8 $$ Project project = CommonDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(myComponent))-->Line_11 $$ mainGroup = ActionsTreeUtil.createMainGroup(project, keymap, allQuickLists, filter, false, ActionsTreeUtil.isActionFiltered(actionManager, keymap, shortcut, filter, false))[ FD ]
Line_4 $$ final PathsKeeper pathsKeeper = new PathsKeeper()-->Line_18 $$ pathsKeeper.restorePaths()[ FD ]
Line_2 $$ private void reset(@NotNull Keymap keymap, @NotNull QuickList[] allQuickLists, String filter, @Nullable Shortcut shortcut) -->Line_11 $$ mainGroup = ActionsTreeUtil.createMainGroup(project, keymap, allQuickLists, filter, false, ActionsTreeUtil.isActionFiltered(actionManager, keymap, shortcut, filter, false))[ FD ]
Line_2 $$ private void reset(@NotNull Keymap keymap, @NotNull QuickList[] allQuickLists, String filter, @Nullable Shortcut shortcut) -->Line_13 $$ myRoot = ActionsTreeUtil.createNode(mainGroup)[ CD ]
Line_2 $$ private void reset(@NotNull Keymap keymap, @NotNull QuickList[] allQuickLists, String filter, @Nullable Shortcut shortcut) -->Line_6 $$ myRoot.removeAllChildren()[ CD ]
Line_10 $$ if ((filter != null && filter.length() > 0 || shortcut != null) && mainGroup.initIds().isEmpty()) -->Line_11 $$ mainGroup = ActionsTreeUtil.createMainGroup(project, keymap, allQuickLists, filter, false, ActionsTreeUtil.isActionFiltered(actionManager, keymap, shortcut, filter, false))[ CD ]
