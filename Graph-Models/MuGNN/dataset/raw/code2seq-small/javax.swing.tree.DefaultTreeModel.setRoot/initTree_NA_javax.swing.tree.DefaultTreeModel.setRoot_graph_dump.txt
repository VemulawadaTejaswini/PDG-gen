Line_11 $$ final MyNode node = ((MyNode) value)-->Line_12 $$ setIcon(node.getIcon(expanded))[ FD ]
Line_8 $$ myTree.setCellRenderer(new ColoredTreeCellRenderer() -->Line_10 $$ if (value instanceof MyNode) [ FD ]
Line_11 $$ final MyNode node = ((MyNode) value)-->Line_19 $$ append(node.getDisplayName(), node.isDisplayInBold() ? SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES : SimpleTextAttributes.REGULAR_ATTRIBUTES)[ FD ]
Line_25 $$ if (actions != null) -->Line_31 $$ if (actions != null) [ CD ]
Line_2 $$ protected void initTree() -->Line_5 $$ myTree.setShowsRootHandles(true)[ CD ]
Line_2 $$ protected void initTree() -->Line_23 $$ initToolbar()[ CD ]
Line_10 $$ if (value instanceof MyNode) -->Line_13 $$ final Font font = UIUtil.getTreeFont()[ CD ]
Line_8 $$ myTree.setCellRenderer(new ColoredTreeCellRenderer() -->Line_12 $$ setIcon(node.getIcon(expanded))[ FD ]
Line_13 $$ final Font font = UIUtil.getTreeFont()-->Line_17 $$ setFont(font.deriveFont(Font.PLAIN))[ FD ]
Line_14 $$ if (node.isDisplayInBold()) -->Line_17 $$ setFont(font.deriveFont(Font.PLAIN))[ CD ]
Line_2 $$ protected void initTree() -->Line_25 $$ if (actions != null) [ CD ]
Line_13 $$ final Font font = UIUtil.getTreeFont()-->Line_15 $$ setFont(font.deriveFont(Font.BOLD))[ FD ]
Line_25 $$ if (actions != null) -->Line_30 $$ actions = getAdditionalActions()[ CD ]
Line_2 $$ protected void initTree() -->Line_4 $$ myTree.setRootVisible(false)[ CD ]
Line_31 $$ if (actions != null) -->Line_32 $$ group.addSeparator()[ CD ]
Line_2 $$ protected void initTree() -->Line_8 $$ myTree.setCellRenderer(new ColoredTreeCellRenderer() [ CD ]
Line_2 $$ protected void initTree() -->Line_3 $$ ((DefaultTreeModel) myTree.getModel()).setRoot(myRoot)[ CD ]
Line_10 $$ if (value instanceof MyNode) -->Line_14 $$ if (node.isDisplayInBold()) [ CD ]
Line_2 $$ protected void initTree() -->Line_7 $$ TreeUtil.installActions(myTree)[ CD ]
Line_25 $$ if (actions != null) -->Line_37 $$ PopupHandler.installPopupHandler(myTree, group, ActionPlaces.UNKNOWN, ActionManager.getInstance())[ CD ]
Line_2 $$ protected void initTree() -->Line_6 $$ UIUtil.setLineStyleAngled(myTree)[ CD ]
Line_10 $$ if (value instanceof MyNode) -->Line_19 $$ append(node.getDisplayName(), node.isDisplayInBold() ? SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES : SimpleTextAttributes.REGULAR_ATTRIBUTES)[ CD ]
Line_14 $$ if (node.isDisplayInBold()) -->Line_15 $$ setFont(font.deriveFont(Font.BOLD))[ CD ]
Line_10 $$ if (value instanceof MyNode) -->Line_11 $$ final MyNode node = ((MyNode) value)[ CD ]
Line_2 $$ protected void initTree() -->Line_24 $$ ArrayList<AnAction> actions = createActions(true)[ CD ]
Line_11 $$ final MyNode node = ((MyNode) value)-->Line_14 $$ if (node.isDisplayInBold()) [ FD ]
Line_8 $$ myTree.setCellRenderer(new ColoredTreeCellRenderer() -->Line_10 $$ if (value instanceof MyNode) [ CD ]
Line_10 $$ if (value instanceof MyNode) -->Line_12 $$ setIcon(node.getIcon(expanded))[ CD ]
