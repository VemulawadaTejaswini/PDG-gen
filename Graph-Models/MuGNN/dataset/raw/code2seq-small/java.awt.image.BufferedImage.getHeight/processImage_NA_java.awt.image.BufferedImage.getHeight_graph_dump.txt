Line_2 $$ public BufferedImage processImage(BufferedImage image, int maxIterations) -->Line_4 $$ int height = image.getHeight()[ CD ]
Line_2 $$ public BufferedImage processImage(BufferedImage image, int maxIterations) -->Line_16 $$ return processedImage[ CD ]
Line_7 $$ Mask mask = new Mask(rgb)-->Line_12 $$ executeIteration(rgb, mask, width, height)[ FD ]
Line_4 $$ int height = image.getHeight()-->Line_12 $$ executeIteration(rgb, mask, width, height)[ FD ]
Line_6 $$ int[] rgb = image.getRGB(0, 0, width, height, null, 0, width)-->Line_15 $$ processedImage.setRGB(0, 0, width, height, rgb, 0, width)[ FD ]
Line_10 $$ while (mask.pendingSize > 0 && mask.pendingSize != lastPending && iterations < maxIterations) -->Line_12 $$ executeIteration(rgb, mask, width, height)[ CD ]
Line_10 $$ while (mask.pendingSize > 0 && mask.pendingSize != lastPending && iterations < maxIterations) -->Line_13 $$ iterations++[ CD ]
Line_8 $$ int iterations = 0-->Line_13 $$ iterations++[ FD ]
Line_4 $$ int height = image.getHeight()-->Line_15 $$ processedImage.setRGB(0, 0, width, height, rgb, 0, width)[ FD ]
Line_10 $$ while (mask.pendingSize > 0 && mask.pendingSize != lastPending && iterations < maxIterations) -->Line_11 $$ lastPending = mask.pendingSize[ CD ]
Line_2 $$ public BufferedImage processImage(BufferedImage image, int maxIterations) -->Line_7 $$ Mask mask = new Mask(rgb)[ CD ]
Line_2 $$ public BufferedImage processImage(BufferedImage image, int maxIterations) -->Line_6 $$ int[] rgb = image.getRGB(0, 0, width, height, null, 0, width)[ CD ]
Line_3 $$ int width = image.getWidth()-->Line_15 $$ processedImage.setRGB(0, 0, width, height, rgb, 0, width)[ FD ]
Line_2 $$ public BufferedImage processImage(BufferedImage image, int maxIterations) -->Line_3 $$ int width = image.getWidth()[ CD ]
Line_3 $$ int width = image.getWidth()-->Line_6 $$ int[] rgb = image.getRGB(0, 0, width, height, null, 0, width)[ FD ]
Line_6 $$ int[] rgb = image.getRGB(0, 0, width, height, null, 0, width)-->Line_12 $$ executeIteration(rgb, mask, width, height)[ FD ]
Line_2 $$ public BufferedImage processImage(BufferedImage image, int maxIterations) -->Line_15 $$ processedImage.setRGB(0, 0, width, height, rgb, 0, width)[ CD ]
Line_9 $$ int lastPending = -1-->Line_11 $$ lastPending = mask.pendingSize[ FD ]
Line_2 $$ public BufferedImage processImage(BufferedImage image, int maxIterations) -->Line_10 $$ while (mask.pendingSize > 0 && mask.pendingSize != lastPending && iterations < maxIterations) [ CD ]
Line_2 $$ public BufferedImage processImage(BufferedImage image, int maxIterations) -->Line_4 $$ int height = image.getHeight()[ FD ]
Line_5 $$ BufferedImage processedImage = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB)-->Line_15 $$ processedImage.setRGB(0, 0, width, height, rgb, 0, width)[ FD ]
Line_2 $$ public BufferedImage processImage(BufferedImage image, int maxIterations) -->Line_8 $$ int iterations = 0[ CD ]
Line_2 $$ public BufferedImage processImage(BufferedImage image, int maxIterations) -->Line_6 $$ int[] rgb = image.getRGB(0, 0, width, height, null, 0, width)[ FD ]
Line_2 $$ public BufferedImage processImage(BufferedImage image, int maxIterations) -->Line_5 $$ BufferedImage processedImage = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB)[ CD ]
Line_3 $$ int width = image.getWidth()-->Line_12 $$ executeIteration(rgb, mask, width, height)[ FD ]
Line_4 $$ int height = image.getHeight()-->Line_6 $$ int[] rgb = image.getRGB(0, 0, width, height, null, 0, width)[ FD ]
Line_2 $$ public BufferedImage processImage(BufferedImage image, int maxIterations) -->Line_9 $$ int lastPending = -1[ CD ]
Line_2 $$ public BufferedImage processImage(BufferedImage image, int maxIterations) -->Line_3 $$ int width = image.getWidth()[ FD ]
