Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_20 $$ g.drawImage(image, rect.x, rect.y, null)[ CD ]
Line_6 $$ borderPixels <<= 1-->Line_15 $$ borderPixels >>= 1[ FD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_23 $$ g.drawImage(image, rect.x, rect.y + rect.height, rect.x + rect.width, rect.y + rect.height + 1, 0, image.getHeight() - 1, image.getWidth(), image.getHeight(), null)[ FD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_3 $$ if (rects.containsKey(name))[ CD ]
Line_21 $$ if (duplicateBorder) -->Line_27 $$ g.drawImage(image, rect.x + rect.width, rect.y - 1, rect.x + rect.width + 1, rect.y, image.getWidth() - 1, 0, image.getWidth(), 1, null)[ CD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_14 $$ rect.height -= borderPixels[ CD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_7 $$ Rectangle rect = new Rectangle(0, 0, image.getWidth() + borderPixels, image.getHeight() + borderPixels)[ CD ]
Line_6 $$ borderPixels <<= 1-->Line_17 $$ rect.y += borderPixels[ FD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_16 $$ rect.x += borderPixels[ CD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_3 $$ if (rects.containsKey(name))[ FD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_18 $$ rects.put(name, rect)[ FD ]
Line_21 $$ if (duplicateBorder) -->Line_26 $$ g.drawImage(image, rect.x - 1, rect.y - 1, rect.x, rect.y, 0, 0, 1, 1, null)[ CD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_5 $$ int borderPixels = padding + (duplicateBorder ? 1 : 0)[ CD ]
Line_19 $$ Graphics2D g = this.image.createGraphics()-->Line_29 $$ g.drawImage(image, rect.x + rect.width, rect.y + rect.height, rect.x + rect.width + 1, rect.y + rect.height + 1, image.getWidth() - 1, image.getHeight() - 1, image.getWidth(), image.getHeight(), null)[ FD ]
Line_21 $$ if (duplicateBorder) -->Line_22 $$ g.drawImage(image, rect.x, rect.y - 1, rect.x + rect.width, rect.y, 0, 0, image.getWidth(), 1, null)[ CD ]
Line_6 $$ borderPixels <<= 1-->Line_13 $$ rect.width -= borderPixels[ FD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_19 $$ Graphics2D g = this.image.createGraphics()[ CD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_18 $$ rects.put(name, rect)[ CD ]
Line_19 $$ Graphics2D g = this.image.createGraphics()-->Line_24 $$ g.drawImage(image, rect.x - 1, rect.y, rect.x, rect.y + rect.height, 0, 0, 1, image.getHeight(), null)[ FD ]
Line_19 $$ Graphics2D g = this.image.createGraphics()-->Line_20 $$ g.drawImage(image, rect.x, rect.y, null)[ FD ]
Line_7 $$ Rectangle rect = new Rectangle(0, 0, image.getWidth() + borderPixels, image.getHeight() + borderPixels)-->Line_12 $$ rect = new Rectangle(node.rect)[ FD ]
Line_5 $$ int borderPixels = padding + (duplicateBorder ? 1 : 0)-->Line_13 $$ rect.width -= borderPixels[ FD ]
Line_5 $$ int borderPixels = padding + (duplicateBorder ? 1 : 0)-->Line_17 $$ rect.y += borderPixels[ FD ]
Line_19 $$ Graphics2D g = this.image.createGraphics()-->Line_25 $$ g.drawImage(image, rect.x + rect.width, rect.y, rect.x + rect.width + 1, rect.y + rect.height, image.getWidth() - 1, 0, image.getWidth(), image.getHeight(), null)[ FD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_29 $$ g.drawImage(image, rect.x + rect.width, rect.y + rect.height, rect.x + rect.width + 1, rect.y + rect.height + 1, image.getWidth() - 1, image.getHeight() - 1, image.getWidth(), image.getHeight(), null)[ FD ]
Line_21 $$ if (duplicateBorder) -->Line_29 $$ g.drawImage(image, rect.x + rect.width, rect.y + rect.height, rect.x + rect.width + 1, rect.y + rect.height + 1, image.getWidth() - 1, image.getHeight() - 1, image.getWidth(), image.getHeight(), null)[ CD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_17 $$ rect.y += borderPixels[ CD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_24 $$ g.drawImage(image, rect.x - 1, rect.y, rect.x, rect.y + rect.height, 0, 0, 1, image.getHeight(), null)[ FD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_9 $$ if (node == null)[ CD ]
Line_6 $$ borderPixels <<= 1-->Line_16 $$ rect.x += borderPixels[ FD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_27 $$ g.drawImage(image, rect.x + rect.width, rect.y - 1, rect.x + rect.width + 1, rect.y, image.getWidth() - 1, 0, image.getWidth(), 1, null)[ FD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_28 $$ g.drawImage(image, rect.x - 1, rect.y + rect.height, rect.x, rect.y + rect.height + 1, 0, image.getHeight() - 1, 1, image.getHeight(), null)[ FD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_21 $$ if (duplicateBorder) [ CD ]
Line_12 $$ rect = new Rectangle(node.rect)-->Line_18 $$ rects.put(name, rect)[ FD ]
Line_19 $$ Graphics2D g = this.image.createGraphics()-->Line_26 $$ g.drawImage(image, rect.x - 1, rect.y - 1, rect.x, rect.y, 0, 0, 1, 1, null)[ FD ]
Line_21 $$ if (duplicateBorder) -->Line_23 $$ g.drawImage(image, rect.x, rect.y + rect.height, rect.x + rect.width, rect.y + rect.height + 1, 0, image.getHeight() - 1, image.getWidth(), image.getHeight(), null)[ CD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_26 $$ g.drawImage(image, rect.x - 1, rect.y - 1, rect.x, rect.y, 0, 0, 1, 1, null)[ FD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_7 $$ Rectangle rect = new Rectangle(0, 0, image.getWidth() + borderPixels, image.getHeight() + borderPixels)[ FD ]
Line_7 $$ Rectangle rect = new Rectangle(0, 0, image.getWidth() + borderPixels, image.getHeight() + borderPixels)-->Line_8 $$ Node node = insert(root, rect)[ FD ]
Line_21 $$ if (duplicateBorder) -->Line_28 $$ g.drawImage(image, rect.x - 1, rect.y + rect.height, rect.x, rect.y + rect.height + 1, 0, image.getHeight() - 1, 1, image.getHeight(), null)[ CD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_13 $$ rect.width -= borderPixels[ CD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_31 $$ g.dispose()[ CD ]
Line_5 $$ int borderPixels = padding + (duplicateBorder ? 1 : 0)-->Line_15 $$ borderPixels >>= 1[ FD ]
Line_5 $$ int borderPixels = padding + (duplicateBorder ? 1 : 0)-->Line_16 $$ rect.x += borderPixels[ FD ]
Line_19 $$ Graphics2D g = this.image.createGraphics()-->Line_31 $$ g.dispose()[ FD ]
Line_19 $$ Graphics2D g = this.image.createGraphics()-->Line_28 $$ g.drawImage(image, rect.x - 1, rect.y + rect.height, rect.x, rect.y + rect.height + 1, 0, image.getHeight() - 1, 1, image.getHeight(), null)[ FD ]
Line_5 $$ int borderPixels = padding + (duplicateBorder ? 1 : 0)-->Line_14 $$ rect.height -= borderPixels[ FD ]
Line_21 $$ if (duplicateBorder) -->Line_24 $$ g.drawImage(image, rect.x - 1, rect.y, rect.x, rect.y + rect.height, 0, 0, 1, image.getHeight(), null)[ CD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_22 $$ g.drawImage(image, rect.x, rect.y - 1, rect.x + rect.width, rect.y, 0, 0, image.getWidth(), 1, null)[ FD ]
Line_21 $$ if (duplicateBorder) -->Line_25 $$ g.drawImage(image, rect.x + rect.width, rect.y, rect.x + rect.width + 1, rect.y + rect.height, image.getWidth() - 1, 0, image.getWidth(), image.getHeight(), null)[ CD ]
Line_5 $$ int borderPixels = padding + (duplicateBorder ? 1 : 0)-->Line_6 $$ borderPixels <<= 1[ FD ]
Line_19 $$ Graphics2D g = this.image.createGraphics()-->Line_23 $$ g.drawImage(image, rect.x, rect.y + rect.height, rect.x + rect.width, rect.y + rect.height + 1, 0, image.getHeight() - 1, image.getWidth(), image.getHeight(), null)[ FD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_20 $$ g.drawImage(image, rect.x, rect.y, null)[ FD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_11 $$ node.leaveName = name[ FD ]
Line_19 $$ Graphics2D g = this.image.createGraphics()-->Line_27 $$ g.drawImage(image, rect.x + rect.width, rect.y - 1, rect.x + rect.width + 1, rect.y, image.getWidth() - 1, 0, image.getWidth(), 1, null)[ FD ]
Line_8 $$ Node node = insert(root, rect)-->Line_9 $$ if (node == null)[ FD ]
Line_15 $$ borderPixels >>= 1-->Line_17 $$ rect.y += borderPixels[ FD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_12 $$ rect = new Rectangle(node.rect)[ CD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_15 $$ borderPixels >>= 1[ CD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_8 $$ Node node = insert(root, rect)[ CD ]
Line_15 $$ borderPixels >>= 1-->Line_16 $$ rect.x += borderPixels[ FD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_25 $$ g.drawImage(image, rect.x + rect.width, rect.y, rect.x + rect.width + 1, rect.y + rect.height, image.getWidth() - 1, 0, image.getWidth(), image.getHeight(), null)[ FD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_6 $$ borderPixels <<= 1[ CD ]
Line_2 $$ public void insertImage(String name, BufferedImage image) -->Line_11 $$ node.leaveName = name[ CD ]
Line_7 $$ Rectangle rect = new Rectangle(0, 0, image.getWidth() + borderPixels, image.getHeight() + borderPixels)-->Line_18 $$ rects.put(name, rect)[ FD ]
Line_6 $$ borderPixels <<= 1-->Line_14 $$ rect.height -= borderPixels[ FD ]
Line_19 $$ Graphics2D g = this.image.createGraphics()-->Line_22 $$ g.drawImage(image, rect.x, rect.y - 1, rect.x + rect.width, rect.y, 0, 0, image.getWidth(), 1, null)[ FD ]
