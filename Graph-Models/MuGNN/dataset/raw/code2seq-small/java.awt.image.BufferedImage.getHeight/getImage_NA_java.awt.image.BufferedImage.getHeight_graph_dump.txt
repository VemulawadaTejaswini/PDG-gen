Line_4 $$ BufferedImage image = imageRef.get()-->Line_11 $$ image = UIUtil.createImage(width, height, BufferedImage.TYPE_INT_RGB)[ FD ]
Line_4 $$ BufferedImage image = imageRef.get()-->Line_9 $$ image = myFrame.getGraphicsConfiguration().createCompatibleImage(width, height)[ FD ]
Line_2 $$ private Pair<BufferedImage, SoftReference<BufferedImage>> getImage(SoftReference<BufferedImage> imageRef) -->Line_5 $$ if (image == null || image.getWidth(null) < getWidth() || image.getHeight(null) < getHeight()) [ CD ]
Line_2 $$ private Pair<BufferedImage, SoftReference<BufferedImage>> getImage(SoftReference<BufferedImage> imageRef) -->Line_13 $$ imageRef = new SoftReference<BufferedImage>(image)[ FD ]
Line_2 $$ private Pair<BufferedImage, SoftReference<BufferedImage>> getImage(SoftReference<BufferedImage> imageRef) -->Line_4 $$ BufferedImage image = imageRef.get()[ CD ]
Line_5 $$ if (image == null || image.getWidth(null) < getWidth() || image.getHeight(null) < getHeight()) -->Line_8 $$ if (SystemInfo.isWindows) [ CD ]
Line_5 $$ if (image == null || image.getWidth(null) < getWidth() || image.getHeight(null) < getHeight()) -->Line_6 $$ final int width = Math.max(Math.max(1, getWidth()), myFrame.getWidth())[ CD ]
Line_9 $$ image = myFrame.getGraphicsConfiguration().createCompatibleImage(width, height)-->Line_15 $$ return Pair.create(image, imageRef)[ FD ]
Line_2 $$ private Pair<BufferedImage, SoftReference<BufferedImage>> getImage(SoftReference<BufferedImage> imageRef) -->Line_4 $$ BufferedImage image = imageRef.get()[ FD ]
Line_8 $$ if (SystemInfo.isWindows) -->Line_11 $$ image = UIUtil.createImage(width, height, BufferedImage.TYPE_INT_RGB)[ CD ]
Line_5 $$ if (image == null || image.getWidth(null) < getWidth() || image.getHeight(null) < getHeight()) -->Line_13 $$ imageRef = new SoftReference<BufferedImage>(image)[ CD ]
Line_13 $$ imageRef = new SoftReference<BufferedImage>(image)-->Line_15 $$ return Pair.create(image, imageRef)[ FD ]
Line_8 $$ if (SystemInfo.isWindows) -->Line_9 $$ image = myFrame.getGraphicsConfiguration().createCompatibleImage(width, height)[ CD ]
Line_4 $$ BufferedImage image = imageRef.get()-->Line_15 $$ return Pair.create(image, imageRef)[ FD ]
Line_6 $$ final int width = Math.max(Math.max(1, getWidth()), myFrame.getWidth())-->Line_11 $$ image = UIUtil.createImage(width, height, BufferedImage.TYPE_INT_RGB)[ FD ]
Line_5 $$ if (image == null || image.getWidth(null) < getWidth() || image.getHeight(null) < getHeight()) -->Line_7 $$ final int height = Math.max(Math.max(1, getHeight()), myFrame.getHeight())[ CD ]
Line_7 $$ final int height = Math.max(Math.max(1, getHeight()), myFrame.getHeight())-->Line_11 $$ image = UIUtil.createImage(width, height, BufferedImage.TYPE_INT_RGB)[ FD ]
Line_7 $$ final int height = Math.max(Math.max(1, getHeight()), myFrame.getHeight())-->Line_9 $$ image = myFrame.getGraphicsConfiguration().createCompatibleImage(width, height)[ FD ]
Line_2 $$ private Pair<BufferedImage, SoftReference<BufferedImage>> getImage(SoftReference<BufferedImage> imageRef) -->Line_15 $$ return Pair.create(image, imageRef)[ CD ]
Line_11 $$ image = UIUtil.createImage(width, height, BufferedImage.TYPE_INT_RGB)-->Line_15 $$ return Pair.create(image, imageRef)[ FD ]
Line_2 $$ private Pair<BufferedImage, SoftReference<BufferedImage>> getImage(SoftReference<BufferedImage> imageRef) -->Line_15 $$ return Pair.create(image, imageRef)[ FD ]
Line_4 $$ BufferedImage image = imageRef.get()-->Line_5 $$ if (image == null || image.getWidth(null) < getWidth() || image.getHeight(null) < getHeight()) [ FD ]
Line_9 $$ image = myFrame.getGraphicsConfiguration().createCompatibleImage(width, height)-->Line_11 $$ image = UIUtil.createImage(width, height, BufferedImage.TYPE_INT_RGB)[ FD ]
Line_6 $$ final int width = Math.max(Math.max(1, getWidth()), myFrame.getWidth())-->Line_9 $$ image = myFrame.getGraphicsConfiguration().createCompatibleImage(width, height)[ FD ]
Line_2 $$ private Pair<BufferedImage, SoftReference<BufferedImage>> getImage(SoftReference<BufferedImage> imageRef) -->Line_3 $$ LOG.assertTrue(UISettings.getInstance().ANIMATE_WINDOWS)[ CD ]
