Line_16 $$ Object queue = _QUEUE_FIELD.get(thread)-->Line_19 $$ _CLEAR_METHOD.invoke(queue)[ FD ]
Line_3 $$ if (!_INITIALIZED) -->Line_4 $$ return[ CD ]
Line_7 $$ for (Thread thread : threads) -->Line_11 $$ Class<?> threadClass = thread.getClass()[ FD ]
Line_12 $$ String threadClassName = threadClass.getName()-->Line_13 $$ if (!threadClassName.equals("java.util.TimerThread")) [ FD ]
Line_2 $$ public static void clearTimerThread() throws Exception -->Line_3 $$ if (!_INITIALIZED) [ CD ]
Line_2 $$ public static void clearTimerThread() throws Exception -->Line_6 $$ Thread[] threads = ThreadUtil.getThreads()[ CD ]
Line_7 $$ for (Thread thread : threads) -->Line_18 $$ _NEW_TASKS_MAY_BE_SCHEDULED_FIELD.setBoolean(thread, false)[ FD ]
Line_16 $$ Object queue = _QUEUE_FIELD.get(thread)-->Line_20 $$ queue.notify()[ FD ]
Line_7 $$ for (Thread thread : threads) -->Line_8 $$ if (thread == null) [ FD ]
Line_11 $$ Class<?> threadClass = thread.getClass()-->Line_12 $$ String threadClassName = threadClass.getName()[ FD ]
Line_7 $$ for (Thread thread : threads) -->Line_16 $$ Object queue = _QUEUE_FIELD.get(thread)[ FD ]
