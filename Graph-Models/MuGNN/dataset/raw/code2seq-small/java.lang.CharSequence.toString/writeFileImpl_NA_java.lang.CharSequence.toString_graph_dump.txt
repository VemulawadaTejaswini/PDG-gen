Line_2 $$ public static void writeFileImpl(String folder, @NonNls String fileName, CharSequence buf) throws IOException -->Line_4 $$ final String fullPath = folder + File.separator + fileName[ CD ]
Line_3 $$ ProgressIndicator indicator = ProgressManager.getInstance().getProgressIndicator()-->Line_5 $$ if (indicator != null) [ FD ]
Line_3 $$ ProgressIndicator indicator = ProgressManager.getInstance().getProgressIndicator()-->Line_7 $$ indicator.setText(InspectionsBundle.message("inspection.export.generating.html.for", fullPath))[ FD ]
Line_9 $$ FileWriter writer = null-->Line_14 $$ writer = new FileWriter(fullPath)[ FD ]
Line_2 $$ public static void writeFileImpl(String folder, @NonNls String fileName, CharSequence buf) throws IOException -->Line_3 $$ ProgressIndicator indicator = ProgressManager.getInstance().getProgressIndicator()[ CD ]
Line_11 $$ File folderFile = new File(folder)-->Line_12 $$ folderFile.mkdirs()[ FD ]
Line_9 $$ FileWriter writer = null-->Line_19 $$ writer.close()[ FD ]
Line_2 $$ public static void writeFileImpl(String folder, @NonNls String fileName, CharSequence buf) throws IOException -->Line_5 $$ if (indicator != null) [ CD ]
Line_4 $$ final String fullPath = folder + File.separator + fileName-->Line_7 $$ indicator.setText(InspectionsBundle.message("inspection.export.generating.html.for", fullPath))[ FD ]
Line_2 $$ public static void writeFileImpl(String folder, @NonNls String fileName, CharSequence buf) throws IOException -->Line_9 $$ FileWriter writer = null[ CD ]
Line_14 $$ writer = new FileWriter(fullPath)-->Line_17 $$ if (writer != null) [ FD ]
Line_14 $$ writer = new FileWriter(fullPath)-->Line_19 $$ writer.close()[ FD ]
Line_2 $$ public static void writeFileImpl(String folder, @NonNls String fileName, CharSequence buf) throws IOException -->Line_15 $$ writer.write(buf.toString().toCharArray())[ FD ]
Line_9 $$ FileWriter writer = null-->Line_17 $$ if (writer != null) [ FD ]
Line_5 $$ if (indicator != null) -->Line_7 $$ indicator.setText(InspectionsBundle.message("inspection.export.generating.html.for", fullPath))[ CD ]
Line_9 $$ FileWriter writer = null-->Line_15 $$ writer.write(buf.toString().toCharArray())[ FD ]
Line_14 $$ writer = new FileWriter(fullPath)-->Line_15 $$ writer.write(buf.toString().toCharArray())[ FD ]
Line_5 $$ if (indicator != null) -->Line_6 $$ ProgressManager.checkCanceled()[ CD ]
