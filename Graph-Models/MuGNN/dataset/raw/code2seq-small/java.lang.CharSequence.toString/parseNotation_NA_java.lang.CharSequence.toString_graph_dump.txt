Line_3 $$ String candidate = notation.toString().toUpperCase()-->Line_12 $$ return new NormalizedTimeUnit(value, TimeUnit.valueOf(candidate))[ FD ]
Line_8 $$ if (candidate.equals("MINUTES")) -->Line_9 $$ return millis(value * 60 * 1000)[ CD ]
Line_2 $$ public NormalizedTimeUnit parseNotation(CharSequence notation, int value) -->Line_3 $$ String candidate = notation.toString().toUpperCase()[ CD ]
Line_3 $$ String candidate = notation.toString().toUpperCase()-->Line_6 $$ if (candidate.equals("HOURS")) [ FD ]
Line_6 $$ if (candidate.equals("HOURS")) -->Line_7 $$ return millis(value * 60 * 60 * 1000)[ CD ]
Line_2 $$ public NormalizedTimeUnit parseNotation(CharSequence notation, int value) -->Line_4 $$ if (candidate.equals("DAYS")) [ CD ]
Line_4 $$ if (candidate.equals("DAYS")) -->Line_5 $$ return millis(value * 24 * 60 * 60 * 1000)[ CD ]
Line_3 $$ String candidate = notation.toString().toUpperCase()-->Line_4 $$ if (candidate.equals("DAYS")) [ FD ]
Line_3 $$ String candidate = notation.toString().toUpperCase()-->Line_8 $$ if (candidate.equals("MINUTES")) [ FD ]
Line_4 $$ if (candidate.equals("DAYS")) -->Line_6 $$ if (candidate.equals("HOURS")) [ CD ]
Line_6 $$ if (candidate.equals("HOURS")) -->Line_8 $$ if (candidate.equals("MINUTES")) [ CD ]
Line_2 $$ public NormalizedTimeUnit parseNotation(CharSequence notation, int value) -->Line_3 $$ String candidate = notation.toString().toUpperCase()[ FD ]
