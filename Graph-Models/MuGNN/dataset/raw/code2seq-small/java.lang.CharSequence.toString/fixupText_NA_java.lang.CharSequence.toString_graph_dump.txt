Line_11 $$ for (String s : secondSymbols) -->Line_12 $$ String pattern = "<" + quote(s)[ FD ]
Line_5 $$ while (fixupMatcher.find()) -->Line_7 $$ if (!s.equals("\\") && !secondSymbols.contains(s)) [ CD ]
Line_2 $$ public static String fixupText(@NotNull CharSequence docText) -->Line_3 $$ Matcher fixupMatcher = ourLtFixupPattern.matcher(docText)[ FD ]
Line_2 $$ public static String fixupText(@NotNull CharSequence docText) -->Line_19 $$ return docText.toString()[ CD ]
Line_6 $$ String s = fixupMatcher.group(1)-->Line_12 $$ String pattern = "<" + quote(s)[ FD ]
Line_2 $$ public static String fixupText(@NotNull CharSequence docText) -->Line_14 $$ docText = Pattern.compile(pattern).matcher(docText).replaceAll(LT_ENTITY + pattern)[ FD ]
Line_6 $$ String s = fixupMatcher.group(1)-->Line_8 $$ secondSymbols.addFirst(s)[ FD ]
Line_12 $$ String pattern = "<" + quote(s)-->Line_14 $$ docText = Pattern.compile(pattern).matcher(docText).replaceAll(LT_ENTITY + pattern)[ FD ]
Line_2 $$ public static String fixupText(@NotNull CharSequence docText) -->Line_19 $$ return docText.toString()[ FD ]
Line_2 $$ public static String fixupText(@NotNull CharSequence docText) -->Line_4 $$ LinkedList<String> secondSymbols = new LinkedList<String>()[ CD ]
Line_7 $$ if (!s.equals("\\") && !secondSymbols.contains(s)) -->Line_8 $$ secondSymbols.addFirst(s)[ CD ]
Line_3 $$ Matcher fixupMatcher = ourLtFixupPattern.matcher(docText)-->Line_5 $$ while (fixupMatcher.find()) [ FD ]
Line_4 $$ LinkedList<String> secondSymbols = new LinkedList<String>()-->Line_8 $$ secondSymbols.addFirst(s)[ FD ]
Line_2 $$ public static String fixupText(@NotNull CharSequence docText) -->Line_5 $$ while (fixupMatcher.find()) [ CD ]
Line_4 $$ LinkedList<String> secondSymbols = new LinkedList<String>()-->Line_7 $$ if (!s.equals("\\") && !secondSymbols.contains(s)) [ FD ]
Line_5 $$ while (fixupMatcher.find()) -->Line_6 $$ String s = fixupMatcher.group(1)[ CD ]
Line_6 $$ String s = fixupMatcher.group(1)-->Line_7 $$ if (!s.equals("\\") && !secondSymbols.contains(s)) [ FD ]
Line_2 $$ public static String fixupText(@NotNull CharSequence docText) -->Line_3 $$ Matcher fixupMatcher = ourLtFixupPattern.matcher(docText)[ CD ]
Line_3 $$ Matcher fixupMatcher = ourLtFixupPattern.matcher(docText)-->Line_6 $$ String s = fixupMatcher.group(1)[ FD ]
