Line_5 $$ int startOffset = valueElement.getTextRange().getStartOffset()-->Line_12 $$ return Pair.create(TextRange.create(startOffset, endOffset), text.subSequence(startOffset, endOffset).toString())[ FD ]
Line_2 $$ private static Pair<TextRange, String> parseTagValue(@NotNull PsiDocTag tag, @NotNull Document document) -->Line_8 $$ int i = CharArrayUtil.shiftBackward(text, endOffset - 1, " \t*")[ CD ]
Line_2 $$ private static Pair<TextRange, String> parseTagValue(@NotNull PsiDocTag tag, @NotNull Document document) -->Line_3 $$ PsiDocTagValue valueElement = tag.getValueElement()[ FD ]
Line_8 $$ int i = CharArrayUtil.shiftBackward(text, endOffset - 1, " \t*")-->Line_10 $$ endOffset = i[ FD ]
Line_10 $$ endOffset = i-->Line_12 $$ return Pair.create(TextRange.create(startOffset, endOffset), text.subSequence(startOffset, endOffset).toString())[ FD ]
Line_2 $$ private static Pair<TextRange, String> parseTagValue(@NotNull PsiDocTag tag, @NotNull Document document) -->Line_6 $$ int endOffset = tag.getTextRange().getEndOffset()[ FD ]
Line_7 $$ CharSequence text = document.getCharsSequence()-->Line_8 $$ int i = CharArrayUtil.shiftBackward(text, endOffset - 1, " \t*")[ FD ]
Line_7 $$ CharSequence text = document.getCharsSequence()-->Line_9 $$ if (i > 0 && text.charAt(i) == '\n') [ FD ]
Line_2 $$ private static Pair<TextRange, String> parseTagValue(@NotNull PsiDocTag tag, @NotNull Document document) -->Line_7 $$ CharSequence text = document.getCharsSequence()[ FD ]
Line_6 $$ int endOffset = tag.getTextRange().getEndOffset()-->Line_10 $$ endOffset = i[ FD ]
Line_9 $$ if (i > 0 && text.charAt(i) == '\n') -->Line_10 $$ endOffset = i[ CD ]
Line_2 $$ private static Pair<TextRange, String> parseTagValue(@NotNull PsiDocTag tag, @NotNull Document document) -->Line_9 $$ if (i > 0 && text.charAt(i) == '\n') [ CD ]
Line_3 $$ PsiDocTagValue valueElement = tag.getValueElement()-->Line_5 $$ int startOffset = valueElement.getTextRange().getStartOffset()[ FD ]
Line_8 $$ int i = CharArrayUtil.shiftBackward(text, endOffset - 1, " \t*")-->Line_9 $$ if (i > 0 && text.charAt(i) == '\n') [ FD ]
Line_2 $$ private static Pair<TextRange, String> parseTagValue(@NotNull PsiDocTag tag, @NotNull Document document) -->Line_6 $$ int endOffset = tag.getTextRange().getEndOffset()[ CD ]
Line_6 $$ int endOffset = tag.getTextRange().getEndOffset()-->Line_12 $$ return Pair.create(TextRange.create(startOffset, endOffset), text.subSequence(startOffset, endOffset).toString())[ FD ]
Line_2 $$ private static Pair<TextRange, String> parseTagValue(@NotNull PsiDocTag tag, @NotNull Document document) -->Line_5 $$ int startOffset = valueElement.getTextRange().getStartOffset()[ CD ]
Line_7 $$ CharSequence text = document.getCharsSequence()-->Line_12 $$ return Pair.create(TextRange.create(startOffset, endOffset), text.subSequence(startOffset, endOffset).toString())[ FD ]
Line_2 $$ private static Pair<TextRange, String> parseTagValue(@NotNull PsiDocTag tag, @NotNull Document document) -->Line_12 $$ return Pair.create(TextRange.create(startOffset, endOffset), text.subSequence(startOffset, endOffset).toString())[ CD ]
Line_2 $$ private static Pair<TextRange, String> parseTagValue(@NotNull PsiDocTag tag, @NotNull Document document) -->Line_3 $$ PsiDocTagValue valueElement = tag.getValueElement()[ CD ]
Line_2 $$ private static Pair<TextRange, String> parseTagValue(@NotNull PsiDocTag tag, @NotNull Document document) -->Line_7 $$ CharSequence text = document.getCharsSequence()[ CD ]
