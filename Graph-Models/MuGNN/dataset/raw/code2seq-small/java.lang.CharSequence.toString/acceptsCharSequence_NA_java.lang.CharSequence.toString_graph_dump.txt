Line_3 $$ if (matcher instanceof FileNameMatcherEx) -->Line_4 $$ return ((FileNameMatcherEx) matcher).acceptsCharSequence(fileName)[ CD ]
Line_2 $$ public static boolean acceptsCharSequence(@NotNull FileNameMatcher matcher, @NotNull CharSequence fileName) -->Line_6 $$ return matcher.accept(fileName.toString())[ FD ]
Line_2 $$ public static boolean acceptsCharSequence(@NotNull FileNameMatcher matcher, @NotNull CharSequence fileName) -->Line_3 $$ if (matcher instanceof FileNameMatcherEx) [ CD ]
Line_2 $$ public static boolean acceptsCharSequence(@NotNull FileNameMatcher matcher, @NotNull CharSequence fileName) -->Line_4 $$ return ((FileNameMatcherEx) matcher).acceptsCharSequence(fileName)[ FD ]
Line_2 $$ public static boolean acceptsCharSequence(@NotNull FileNameMatcher matcher, @NotNull CharSequence fileName) -->Line_3 $$ if (matcher instanceof FileNameMatcherEx) [ FD ]
Line_2 $$ public static boolean acceptsCharSequence(@NotNull FileNameMatcher matcher, @NotNull CharSequence fileName) -->Line_6 $$ return matcher.accept(fileName.toString())[ CD ]
