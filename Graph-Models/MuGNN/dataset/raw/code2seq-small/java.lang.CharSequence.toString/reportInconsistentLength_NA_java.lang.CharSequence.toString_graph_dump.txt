Line_7 $$ message += "; oldTextBefore==newTextBefore"-->Line_9 $$ LOG.error(message, new Attachment(file.getName() + "_oldNodeText.txt", node.getText()), new Attachment(file.getName() + "_oldFileText.txt", file.getText()), new Attachment(file.getName() + "_newFileText.txt", newFileText.toString()))[ FD ]
Line_2 $$ private static void reportInconsistentLength(PsiFile file, CharSequence newFileText, ASTNode node, int start, int end) -->Line_5 $$ String oldTextBefore = file.getText().subSequence(0, start).toString()[ CD ]
Line_5 $$ String oldTextBefore = file.getText().subSequence(0, start).toString()-->Line_6 $$ if (oldTextBefore.equals(newTextBefore)) [ FD ]
Line_2 $$ private static void reportInconsistentLength(PsiFile file, CharSequence newFileText, ASTNode node, int start, int end) -->Line_4 $$ String newTextBefore = newFileText.subSequence(0, start).toString()[ FD ]
Line_2 $$ private static void reportInconsistentLength(PsiFile file, CharSequence newFileText, ASTNode node, int start, int end) -->Line_4 $$ String newTextBefore = newFileText.subSequence(0, start).toString()[ CD ]
Line_6 $$ if (oldTextBefore.equals(newTextBefore)) -->Line_7 $$ message += "; oldTextBefore==newTextBefore"[ CD ]
Line_3 $$ String message = "Index out of bounds: type=" + node.getElementType() + "; file=" + file + "; file.class=" + file.getClass() + "; start=" + start + "; end=" + end + "; length=" + node.getTextLength()-->Line_7 $$ message += "; oldTextBefore==newTextBefore"[ FD ]
Line_2 $$ private static void reportInconsistentLength(PsiFile file, CharSequence newFileText, ASTNode node, int start, int end) -->Line_5 $$ String oldTextBefore = file.getText().subSequence(0, start).toString()[ FD ]
Line_3 $$ String message = "Index out of bounds: type=" + node.getElementType() + "; file=" + file + "; file.class=" + file.getClass() + "; start=" + start + "; end=" + end + "; length=" + node.getTextLength()-->Line_9 $$ LOG.error(message, new Attachment(file.getName() + "_oldNodeText.txt", node.getText()), new Attachment(file.getName() + "_oldFileText.txt", file.getText()), new Attachment(file.getName() + "_newFileText.txt", newFileText.toString()))[ FD ]
Line_4 $$ String newTextBefore = newFileText.subSequence(0, start).toString()-->Line_6 $$ if (oldTextBefore.equals(newTextBefore)) [ FD ]
Line_2 $$ private static void reportInconsistentLength(PsiFile file, CharSequence newFileText, ASTNode node, int start, int end) -->Line_9 $$ LOG.error(message, new Attachment(file.getName() + "_oldNodeText.txt", node.getText()), new Attachment(file.getName() + "_oldFileText.txt", file.getText()), new Attachment(file.getName() + "_newFileText.txt", newFileText.toString()))[ FD ]
Line_2 $$ private static void reportInconsistentLength(PsiFile file, CharSequence newFileText, ASTNode node, int start, int end) -->Line_3 $$ String message = "Index out of bounds: type=" + node.getElementType() + "; file=" + file + "; file.class=" + file.getClass() + "; start=" + start + "; end=" + end + "; length=" + node.getTextLength()[ FD ]
Line_2 $$ private static void reportInconsistentLength(PsiFile file, CharSequence newFileText, ASTNode node, int start, int end) -->Line_3 $$ String message = "Index out of bounds: type=" + node.getElementType() + "; file=" + file + "; file.class=" + file.getClass() + "; start=" + start + "; end=" + end + "; length=" + node.getTextLength()[ CD ]
Line_2 $$ private static void reportInconsistentLength(PsiFile file, CharSequence newFileText, ASTNode node, int start, int end) -->Line_6 $$ if (oldTextBefore.equals(newTextBefore)) [ CD ]
Line_2 $$ private static void reportInconsistentLength(PsiFile file, CharSequence newFileText, ASTNode node, int start, int end) -->Line_9 $$ LOG.error(message, new Attachment(file.getName() + "_oldNodeText.txt", node.getText()), new Attachment(file.getName() + "_oldFileText.txt", file.getText()), new Attachment(file.getName() + "_newFileText.txt", newFileText.toString()))[ CD ]
