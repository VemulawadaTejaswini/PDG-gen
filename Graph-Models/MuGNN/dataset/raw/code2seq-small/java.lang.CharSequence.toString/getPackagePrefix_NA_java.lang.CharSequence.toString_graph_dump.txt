Line_2 $$ private static String getPackagePrefix(final PsiElement context, final int offset) -->Line_4 $$ int i = offset - 1[ CD ]
Line_3 $$ final CharSequence fileText = context.getContainingFile().getViewProvider().getContents()-->Line_6 $$ final char c = fileText.charAt(i)[ FD ]
Line_5 $$ while (i >= 0) -->Line_9 $$ i--[ CD ]
Line_6 $$ final char c = fileText.charAt(i)-->Line_7 $$ if (!Character.isJavaIdentifierPart(c) && c != '.')[ FD ]
Line_2 $$ private static String getPackagePrefix(final PsiElement context, final int offset) -->Line_5 $$ while (i >= 0) [ CD ]
Line_4 $$ int i = offset - 1-->Line_9 $$ i--[ FD ]
Line_11 $$ String prefix = fileText.subSequence(i + 1, offset).toString()-->Line_13 $$ return j > 0 ? prefix.substring(0, j) : ""[ FD ]
Line_2 $$ private static String getPackagePrefix(final PsiElement context, final int offset) -->Line_11 $$ String prefix = fileText.subSequence(i + 1, offset).toString()[ FD ]
Line_4 $$ int i = offset - 1-->Line_5 $$ while (i >= 0) [ FD ]
Line_2 $$ private static String getPackagePrefix(final PsiElement context, final int offset) -->Line_13 $$ return j > 0 ? prefix.substring(0, j) : ""[ CD ]
Line_2 $$ private static String getPackagePrefix(final PsiElement context, final int offset) -->Line_3 $$ final CharSequence fileText = context.getContainingFile().getViewProvider().getContents()[ CD ]
Line_2 $$ private static String getPackagePrefix(final PsiElement context, final int offset) -->Line_12 $$ final int j = prefix.lastIndexOf('.')[ CD ]
Line_4 $$ int i = offset - 1-->Line_6 $$ final char c = fileText.charAt(i)[ FD ]
Line_12 $$ final int j = prefix.lastIndexOf('.')-->Line_13 $$ return j > 0 ? prefix.substring(0, j) : ""[ FD ]
Line_5 $$ while (i >= 0) -->Line_6 $$ final char c = fileText.charAt(i)[ CD ]
Line_11 $$ String prefix = fileText.subSequence(i + 1, offset).toString()-->Line_12 $$ final int j = prefix.lastIndexOf('.')[ FD ]
Line_2 $$ private static String getPackagePrefix(final PsiElement context, final int offset) -->Line_11 $$ String prefix = fileText.subSequence(i + 1, offset).toString()[ CD ]
Line_3 $$ final CharSequence fileText = context.getContainingFile().getViewProvider().getContents()-->Line_11 $$ String prefix = fileText.subSequence(i + 1, offset).toString()[ FD ]
Line_5 $$ while (i >= 0) -->Line_7 $$ if (!Character.isJavaIdentifierPart(c) && c != '.')[ CD ]
Line_2 $$ private static String getPackagePrefix(final PsiElement context, final int offset) -->Line_3 $$ final CharSequence fileText = context.getContainingFile().getViewProvider().getContents()[ FD ]
