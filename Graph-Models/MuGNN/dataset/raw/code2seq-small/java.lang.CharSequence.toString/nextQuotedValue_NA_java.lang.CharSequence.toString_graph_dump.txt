Line_17 $$ if (c == '\\') -->Line_19 $$ if (builder == null) [ CD ]
Line_19 $$ if (builder == null) -->Line_25 $$ builder = this.builder[ CD ]
Line_2 $$ private String nextQuotedValue(char quote) -->Line_5 $$ int l = limit[ CD ]
Line_4 $$ int p = position-->Line_31 $$ start = p[ FD ]
Line_2 $$ private String nextQuotedValue(char quote) -->Line_8 $$ while (p < l) [ CD ]
Line_4 $$ int p = position-->Line_29 $$ p = position[ FD ]
Line_6 $$ int start = p-->Line_31 $$ start = p[ FD ]
Line_6 $$ int start = p-->Line_13 $$ return in.subSequence(start, p - 1).toString()[ FD ]
Line_12 $$ if (builder == null) -->Line_15 $$ return builder.append(in, start, p - 1).toString()[ CD ]
Line_31 $$ start = p-->Line_27 $$ builder.append(in, start, p - 1)[ FD ]
Line_25 $$ builder = this.builder-->Line_19 $$ if (builder == null) [ FD ]
Line_29 $$ p = position-->Line_9 $$ char c = in.charAt(p++)[ FD ]
Line_10 $$ if (c == quote) -->Line_17 $$ if (c == '\\') [ CD ]
Line_25 $$ builder = this.builder-->Line_28 $$ builder.append(readEscapeCharacter())[ FD ]
Line_25 $$ builder = this.builder-->Line_27 $$ builder.append(in, start, p - 1)[ FD ]
Line_7 $$ StringBuilder builder = null-->Line_19 $$ if (builder == null) [ FD ]
Line_17 $$ if (c == '\\') -->Line_29 $$ p = position[ CD ]
Line_2 $$ private String nextQuotedValue(char quote) -->Line_3 $$ CharSequence in = this.in[ CD ]
Line_20 $$ if (this.builder == null) -->Line_21 $$ this.builder = new StringBuilder((p - start) + 16)[ CD ]
Line_6 $$ int start = p-->Line_15 $$ return builder.append(in, start, p - 1).toString()[ FD ]
Line_3 $$ CharSequence in = this.in-->Line_15 $$ return builder.append(in, start, p - 1).toString()[ FD ]
Line_7 $$ StringBuilder builder = null-->Line_27 $$ builder.append(in, start, p - 1)[ FD ]
Line_7 $$ StringBuilder builder = null-->Line_15 $$ return builder.append(in, start, p - 1).toString()[ FD ]
Line_3 $$ CharSequence in = this.in-->Line_13 $$ return in.subSequence(start, p - 1).toString()[ FD ]
Line_7 $$ StringBuilder builder = null-->Line_25 $$ builder = this.builder[ FD ]
Line_10 $$ if (c == quote) -->Line_12 $$ if (builder == null) [ CD ]
Line_3 $$ CharSequence in = this.in-->Line_9 $$ char c = in.charAt(p++)[ FD ]
Line_25 $$ builder = this.builder-->Line_15 $$ return builder.append(in, start, p - 1).toString()[ FD ]
Line_17 $$ if (c == '\\') -->Line_28 $$ builder.append(readEscapeCharacter())[ CD ]
Line_19 $$ if (builder == null) -->Line_20 $$ if (this.builder == null) [ CD ]
Line_3 $$ CharSequence in = this.in-->Line_27 $$ builder.append(in, start, p - 1)[ FD ]
Line_30 $$ l = limit-->Line_8 $$ while (p < l) [ FD ]
Line_17 $$ if (c == '\\') -->Line_30 $$ l = limit[ CD ]
Line_8 $$ while (p < l) -->Line_9 $$ char c = in.charAt(p++)[ CD ]
Line_2 $$ private String nextQuotedValue(char quote) -->Line_7 $$ StringBuilder builder = null[ CD ]
Line_4 $$ int p = position-->Line_9 $$ char c = in.charAt(p++)[ FD ]
Line_2 $$ private String nextQuotedValue(char quote) -->Line_10 $$ if (c == quote) [ FD ]
Line_31 $$ start = p-->Line_13 $$ return in.subSequence(start, p - 1).toString()[ FD ]
Line_17 $$ if (c == '\\') -->Line_27 $$ builder.append(in, start, p - 1)[ CD ]
Line_17 $$ if (c == '\\') -->Line_31 $$ start = p[ CD ]
Line_31 $$ start = p-->Line_15 $$ return builder.append(in, start, p - 1).toString()[ FD ]
Line_7 $$ StringBuilder builder = null-->Line_12 $$ if (builder == null) [ FD ]
Line_8 $$ while (p < l) -->Line_10 $$ if (c == quote) [ CD ]
Line_20 $$ if (this.builder == null) -->Line_23 $$ this.builder.setLength(0)[ CD ]
Line_7 $$ StringBuilder builder = null-->Line_28 $$ builder.append(readEscapeCharacter())[ FD ]
Line_6 $$ int start = p-->Line_27 $$ builder.append(in, start, p - 1)[ FD ]
Line_2 $$ private String nextQuotedValue(char quote) -->Line_6 $$ int start = p[ CD ]
Line_12 $$ if (builder == null) -->Line_13 $$ return in.subSequence(start, p - 1).toString()[ CD ]
Line_9 $$ char c = in.charAt(p++)-->Line_17 $$ if (c == '\\') [ FD ]
Line_29 $$ p = position-->Line_8 $$ while (p < l) [ FD ]
Line_4 $$ int p = position-->Line_8 $$ while (p < l) [ FD ]
Line_29 $$ p = position-->Line_31 $$ start = p[ FD ]
Line_25 $$ builder = this.builder-->Line_12 $$ if (builder == null) [ FD ]
Line_5 $$ int l = limit-->Line_8 $$ while (p < l) [ FD ]
Line_5 $$ int l = limit-->Line_30 $$ l = limit[ FD ]
Line_9 $$ char c = in.charAt(p++)-->Line_10 $$ if (c == quote) [ FD ]
Line_2 $$ private String nextQuotedValue(char quote) -->Line_4 $$ int p = position[ CD ]
