Line_2 $$ static String getTagName(@NotNull CharSequence text, int afterTagOffset) -->Line_11 $$ char c = text.charAt(i)[ FD ]
Line_2 $$ static String getTagName(@NotNull CharSequence text, int afterTagOffset) -->Line_18 $$ if (text.charAt(i + 1) == SLASH) [ FD ]
Line_2 $$ static String getTagName(@NotNull CharSequence text, int afterTagOffset) -->Line_21 $$ return text.subSequence(i + 1, endOffset).toString()[ FD ]
Line_2 $$ static String getTagName(@NotNull CharSequence text, int afterTagOffset) -->Line_3 $$ if (afterTagOffset > text.length()) [ FD ]
Line_10 $$ for (int i = endOffset - 1; i >= 0; i--) -->Line_11 $$ char c = text.charAt(i)[ FD ]
Line_2 $$ static String getTagName(@NotNull CharSequence text, int afterTagOffset) -->Line_6 $$ int endOffset = afterTagOffset - 1[ CD ]
Line_2 $$ static String getTagName(@NotNull CharSequence text, int afterTagOffset) -->Line_3 $$ if (afterTagOffset > text.length()) [ CD ]
Line_6 $$ int endOffset = afterTagOffset - 1-->Line_21 $$ return text.subSequence(i + 1, endOffset).toString()[ FD ]
Line_2 $$ static String getTagName(@NotNull CharSequence text, int afterTagOffset) -->Line_7 $$ if (endOffset > 0 && text.charAt(endOffset - 1) == SLASH) [ FD ]
Line_2 $$ static String getTagName(@NotNull CharSequence text, int afterTagOffset) -->Line_27 $$ return null[ CD ]
Line_24 $$ endOffset = i-->Line_21 $$ return text.subSequence(i + 1, endOffset).toString()[ FD ]
Line_7 $$ if (endOffset > 0 && text.charAt(endOffset - 1) == SLASH) -->Line_8 $$ return null[ CD ]
Line_10 $$ for (int i = endOffset - 1; i >= 0; i--) -->Line_11 $$ char c = text.charAt(i)[ CD ]
Line_2 $$ static String getTagName(@NotNull CharSequence text, int afterTagOffset) -->Line_7 $$ if (endOffset > 0 && text.charAt(endOffset - 1) == SLASH) [ CD ]
Line_6 $$ int endOffset = afterTagOffset - 1-->Line_24 $$ endOffset = i[ FD ]
Line_18 $$ if (text.charAt(i + 1) == SLASH) -->Line_19 $$ return null[ CD ]
Line_10 $$ for (int i = endOffset - 1; i >= 0; i--) -->Line_24 $$ endOffset = i[ FD ]
Line_3 $$ if (afterTagOffset > text.length()) -->Line_4 $$ return null[ CD ]
Line_2 $$ static String getTagName(@NotNull CharSequence text, int afterTagOffset) -->Line_10 $$ for (int i = endOffset - 1; i >= 0; i--) [ CD ]
