Line_25 $$ colorInt = colorInt * 16 + (ch - ('a' - 10))-->Line_27 $$ colorInt = colorInt * 16 + (ch - ('A' - 10))[ FD ]
Line_2 $$ private int parseColorMarkup(CharSequence str, int start, int end, Pool<Color> colorPool) -->Line_43 $$ char ch = str.charAt(i)[ FD ]
Line_23 $$ colorInt = colorInt * 16 + (ch - '0')-->Line_19 $$ Color.rgba8888ToColor(color, colorInt)[ FD ]
Line_42 $$ for (int i = start + 1; i < end; i++) -->Line_52 $$ return i - start[ CD ]
Line_7 $$ int colorInt = 0-->Line_25 $$ colorInt = colorInt * 16 + (ch - ('a' - 10))[ FD ]
Line_10 $$ if (ch == ']') -->Line_20 $$ return i - start[ CD ]
Line_2 $$ private int parseColorMarkup(CharSequence str, int start, int end, Pool<Color> colorPool) -->Line_41 $$ int colorStart = start[ CD ]
Line_24 $$ if (ch >= 'a' && ch <= 'f')-->Line_26 $$ if (ch >= 'A' && ch <= 'F')[ CD ]
Line_8 $$ for (int i = start + 1; i < end; i++) -->Line_43 $$ char ch = str.charAt(i)[ FD ]
Line_43 $$ char ch = str.charAt(i)-->Line_44 $$ if (ch != ']')[ FD ]
Line_10 $$ if (ch == ']') -->Line_11 $$ if (i < start + 2 || i > start + 9)[ CD ]
Line_2 $$ private int parseColorMarkup(CharSequence str, int start, int end, Pool<Color> colorPool) -->Line_38 $$ colorPool.free(colorStack.pop())[ FD ]
Line_41 $$ int colorStart = start-->Line_46 $$ Color namedColor = Colors.get(str.subSequence(colorStart, i).toString())[ FD ]
Line_49 $$ Color color = colorPool.obtain()-->Line_50 $$ colorStack.add(color)[ FD ]
Line_3 $$ if (start == end)-->Line_4 $$ return -1[ CD ]
Line_2 $$ private int parseColorMarkup(CharSequence str, int start, int end, Pool<Color> colorPool) -->Line_3 $$ if (start == end)[ CD ]
Line_7 $$ int colorInt = 0-->Line_14 $$ colorInt = colorInt << 4[ FD ]
Line_7 $$ int colorInt = 0-->Line_23 $$ colorInt = colorInt * 16 + (ch - '0')[ FD ]
Line_14 $$ colorInt = colorInt << 4-->Line_23 $$ colorInt = colorInt * 16 + (ch - '0')[ FD ]
Line_42 $$ for (int i = start + 1; i < end; i++) -->Line_51 $$ color.set(namedColor)[ CD ]
Line_8 $$ for (int i = start + 1; i < end; i++) -->Line_9 $$ char ch = str.charAt(i)[ CD ]
Line_42 $$ for (int i = start + 1; i < end; i++) -->Line_44 $$ if (ch != ']')[ CD ]
Line_2 $$ private int parseColorMarkup(CharSequence str, int start, int end, Pool<Color> colorPool) -->Line_3 $$ if (start == end)[ FD ]
Line_42 $$ for (int i = start + 1; i < end; i++) -->Line_43 $$ char ch = str.charAt(i)[ CD ]
Line_46 $$ Color namedColor = Colors.get(str.subSequence(colorStart, i).toString())-->Line_47 $$ if (namedColor == null)[ FD ]
Line_46 $$ Color namedColor = Colors.get(str.subSequence(colorStart, i).toString())-->Line_51 $$ color.set(namedColor)[ FD ]
Line_27 $$ colorInt = colorInt * 16 + (ch - ('A' - 10))-->Line_19 $$ Color.rgba8888ToColor(color, colorInt)[ FD ]
Line_42 $$ for (int i = start + 1; i < end; i++) -->Line_49 $$ Color color = colorPool.obtain()[ CD ]
Line_10 $$ if (ch == ']') -->Line_18 $$ colorStack.add(color)[ CD ]
Line_22 $$ if (ch >= '0' && ch <= '9')-->Line_23 $$ colorInt = colorInt * 16 + (ch - '0')[ CD ]
Line_7 $$ int colorInt = 0-->Line_27 $$ colorInt = colorInt * 16 + (ch - ('A' - 10))[ FD ]
Line_22 $$ if (ch >= '0' && ch <= '9')-->Line_24 $$ if (ch >= 'a' && ch <= 'f')[ CD ]
Line_49 $$ Color color = colorPool.obtain()-->Line_51 $$ color.set(namedColor)[ FD ]
Line_25 $$ colorInt = colorInt * 16 + (ch - ('a' - 10))-->Line_19 $$ Color.rgba8888ToColor(color, colorInt)[ FD ]
Line_2 $$ private int parseColorMarkup(CharSequence str, int start, int end, Pool<Color> colorPool) -->Line_17 $$ Color color = colorPool.obtain()[ FD ]
Line_37 $$ if (colorStack.size > 1)-->Line_38 $$ colorPool.free(colorStack.pop())[ CD ]
Line_15 $$ colorInt |= 0xff-->Line_25 $$ colorInt = colorInt * 16 + (ch - ('a' - 10))[ FD ]
Line_42 $$ for (int i = start + 1; i < end; i++) -->Line_46 $$ Color namedColor = Colors.get(str.subSequence(colorStart, i).toString())[ CD ]
Line_14 $$ colorInt = colorInt << 4-->Line_15 $$ colorInt |= 0xff[ FD ]
Line_2 $$ private int parseColorMarkup(CharSequence str, int start, int end, Pool<Color> colorPool) -->Line_42 $$ for (int i = start + 1; i < end; i++) [ FD ]
Line_26 $$ if (ch >= 'A' && ch <= 'F')-->Line_27 $$ colorInt = colorInt * 16 + (ch - ('A' - 10))[ CD ]
Line_23 $$ colorInt = colorInt * 16 + (ch - '0')-->Line_27 $$ colorInt = colorInt * 16 + (ch - ('A' - 10))[ FD ]
Line_2 $$ private int parseColorMarkup(CharSequence str, int start, int end, Pool<Color> colorPool) -->Line_46 $$ Color namedColor = Colors.get(str.subSequence(colorStart, i).toString())[ FD ]
Line_10 $$ if (ch == ']') -->Line_19 $$ Color.rgba8888ToColor(color, colorInt)[ CD ]
Line_8 $$ for (int i = start + 1; i < end; i++) -->Line_22 $$ if (ch >= '0' && ch <= '9')[ CD ]
Line_24 $$ if (ch >= 'a' && ch <= 'f')-->Line_25 $$ colorInt = colorInt * 16 + (ch - ('a' - 10))[ CD ]
Line_14 $$ colorInt = colorInt << 4-->Line_19 $$ Color.rgba8888ToColor(color, colorInt)[ FD ]
Line_47 $$ if (namedColor == null)-->Line_48 $$ return -1[ CD ]
Line_2 $$ private int parseColorMarkup(CharSequence str, int start, int end, Pool<Color> colorPool) -->Line_49 $$ Color color = colorPool.obtain()[ FD ]
Line_15 $$ colorInt |= 0xff-->Line_19 $$ Color.rgba8888ToColor(color, colorInt)[ FD ]
Line_2 $$ private int parseColorMarkup(CharSequence str, int start, int end, Pool<Color> colorPool) -->Line_8 $$ for (int i = start + 1; i < end; i++) [ FD ]
Line_7 $$ int colorInt = 0-->Line_15 $$ colorInt |= 0xff[ FD ]
Line_2 $$ private int parseColorMarkup(CharSequence str, int start, int end, Pool<Color> colorPool) -->Line_54 $$ return -1[ CD ]
Line_2 $$ private int parseColorMarkup(CharSequence str, int start, int end, Pool<Color> colorPool) -->Line_42 $$ for (int i = start + 1; i < end; i++) [ CD ]
Line_15 $$ colorInt |= 0xff-->Line_27 $$ colorInt = colorInt * 16 + (ch - ('A' - 10))[ FD ]
Line_42 $$ for (int i = start + 1; i < end; i++) -->Line_46 $$ Color namedColor = Colors.get(str.subSequence(colorStart, i).toString())[ FD ]
Line_42 $$ for (int i = start + 1; i < end; i++) -->Line_50 $$ colorStack.add(color)[ CD ]
Line_2 $$ private int parseColorMarkup(CharSequence str, int start, int end, Pool<Color> colorPool) -->Line_5 $$ switch(str.charAt(start)) [ FD ]
Line_14 $$ colorInt = colorInt << 4-->Line_25 $$ colorInt = colorInt * 16 + (ch - ('a' - 10))[ FD ]
Line_13 $$ if (i - start <= 7) -->Line_14 $$ for (int ii = 0, nn = 9 - (i - start); ii < nn; ii++) colorInt = colorInt << 4[ CD ]
Line_15 $$ colorInt |= 0xff-->Line_23 $$ colorInt = colorInt * 16 + (ch - '0')[ FD ]
Line_14 $$ colorInt = colorInt << 4-->Line_27 $$ colorInt = colorInt * 16 + (ch - ('A' - 10))[ FD ]
Line_42 $$ for (int i = start + 1; i < end; i++) -->Line_43 $$ char ch = str.charAt(i)[ FD ]
Line_23 $$ colorInt = colorInt * 16 + (ch - '0')-->Line_25 $$ colorInt = colorInt * 16 + (ch - ('a' - 10))[ FD ]
Line_8 $$ for (int i = start + 1; i < end; i++) -->Line_42 $$ for (int i = start + 1; i < end; i++) [ FD ]
Line_8 $$ for (int i = start + 1; i < end; i++) -->Line_9 $$ char ch = str.charAt(i)[ FD ]
Line_8 $$ for (int i = start + 1; i < end; i++) -->Line_10 $$ if (ch == ']') [ CD ]
Line_42 $$ for (int i = start + 1; i < end; i++) -->Line_47 $$ if (namedColor == null)[ CD ]
Line_8 $$ for (int i = start + 1; i < end; i++) -->Line_46 $$ Color namedColor = Colors.get(str.subSequence(colorStart, i).toString())[ FD ]
Line_2 $$ private int parseColorMarkup(CharSequence str, int start, int end, Pool<Color> colorPool) -->Line_9 $$ char ch = str.charAt(i)[ FD ]
Line_10 $$ if (ch == ']') -->Line_13 $$ if (i - start <= 7) [ CD ]
Line_13 $$ if (i - start <= 7) -->Line_15 $$ colorInt |= 0xff[ CD ]
Line_7 $$ int colorInt = 0-->Line_19 $$ Color.rgba8888ToColor(color, colorInt)[ FD ]
Line_9 $$ char ch = str.charAt(i)-->Line_10 $$ if (ch == ']') [ FD ]
Line_10 $$ if (ch == ']') -->Line_17 $$ Color color = colorPool.obtain()[ CD ]
Line_9 $$ char ch = str.charAt(i)-->Line_44 $$ if (ch != ']')[ FD ]
