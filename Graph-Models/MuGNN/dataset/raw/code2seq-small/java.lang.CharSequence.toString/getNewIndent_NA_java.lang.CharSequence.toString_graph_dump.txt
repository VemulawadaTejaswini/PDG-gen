Line_3 $$ final Document document = psiFile.getViewProvider().getDocument()-->Line_5 $$ final int startOffset = document.getLineStartOffset(document.getLineNumber(firstWhitespace))[ FD ]
Line_6 $$ int endOffset = startOffset-->Line_8 $$ while (Character.isWhitespace(charsSequence.charAt(endOffset++))) [ FD ]
Line_2 $$ private static int getNewIndent(@NotNull PsiFile psiFile, final int firstWhitespace) -->Line_8 $$ while (Character.isWhitespace(charsSequence.charAt(endOffset++))) [ CD ]
Line_2 $$ private static int getNewIndent(@NotNull PsiFile psiFile, final int firstWhitespace) -->Line_5 $$ final int startOffset = document.getLineStartOffset(document.getLineNumber(firstWhitespace))[ CD ]
Line_5 $$ final int startOffset = document.getLineStartOffset(document.getLineNumber(firstWhitespace))-->Line_9 $$ final String newIndentStr = charsSequence.subSequence(startOffset, endOffset - 1).toString()[ FD ]
Line_7 $$ final CharSequence charsSequence = document.getCharsSequence()-->Line_8 $$ while (Character.isWhitespace(charsSequence.charAt(endOffset++))) [ FD ]
Line_7 $$ final CharSequence charsSequence = document.getCharsSequence()-->Line_9 $$ final String newIndentStr = charsSequence.subSequence(startOffset, endOffset - 1).toString()[ FD ]
Line_9 $$ final String newIndentStr = charsSequence.subSequence(startOffset, endOffset - 1).toString()-->Line_10 $$ return IndentHelperImpl.getIndent(psiFile.getProject(), psiFile.getFileType(), newIndentStr, true)[ FD ]
Line_2 $$ private static int getNewIndent(@NotNull PsiFile psiFile, final int firstWhitespace) -->Line_10 $$ return IndentHelperImpl.getIndent(psiFile.getProject(), psiFile.getFileType(), newIndentStr, true)[ FD ]
Line_2 $$ private static int getNewIndent(@NotNull PsiFile psiFile, final int firstWhitespace) -->Line_3 $$ final Document document = psiFile.getViewProvider().getDocument()[ CD ]
Line_2 $$ private static int getNewIndent(@NotNull PsiFile psiFile, final int firstWhitespace) -->Line_7 $$ final CharSequence charsSequence = document.getCharsSequence()[ CD ]
Line_2 $$ private static int getNewIndent(@NotNull PsiFile psiFile, final int firstWhitespace) -->Line_9 $$ final String newIndentStr = charsSequence.subSequence(startOffset, endOffset - 1).toString()[ CD ]
Line_2 $$ private static int getNewIndent(@NotNull PsiFile psiFile, final int firstWhitespace) -->Line_10 $$ return IndentHelperImpl.getIndent(psiFile.getProject(), psiFile.getFileType(), newIndentStr, true)[ CD ]
Line_3 $$ final Document document = psiFile.getViewProvider().getDocument()-->Line_7 $$ final CharSequence charsSequence = document.getCharsSequence()[ FD ]
Line_2 $$ private static int getNewIndent(@NotNull PsiFile psiFile, final int firstWhitespace) -->Line_5 $$ final int startOffset = document.getLineStartOffset(document.getLineNumber(firstWhitespace))[ FD ]
Line_2 $$ private static int getNewIndent(@NotNull PsiFile psiFile, final int firstWhitespace) -->Line_3 $$ final Document document = psiFile.getViewProvider().getDocument()[ FD ]
Line_2 $$ private static int getNewIndent(@NotNull PsiFile psiFile, final int firstWhitespace) -->Line_6 $$ int endOffset = startOffset[ CD ]
