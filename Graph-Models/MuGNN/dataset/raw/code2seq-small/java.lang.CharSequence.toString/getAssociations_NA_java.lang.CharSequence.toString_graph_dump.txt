Line_20 $$ if (entries.getValue() == type) -->Line_21 $$ result.add(new ExtensionFileNameMatcher(entries.getKey().toString()))[ CD ]
Line_2 $$ public List<FileNameMatcher> getAssociations(@NotNull T type) -->Line_5 $$ if (mapping.getSecond() == type) [ FD ]
Line_9 $$ for (Map.Entry<CharSequence, T> entries : myExactFileNameMappings.entrySet()) -->Line_11 $$ result.add(new ExactFileNameMatcher(entries.getKey().toString()))[ FD ]
Line_4 $$ for (Pair<FileNameMatcher, T> mapping : myMatchingMappings) -->Line_6 $$ result.add(mapping.getFirst())[ FD ]
Line_2 $$ public List<FileNameMatcher> getAssociations(@NotNull T type) -->Line_3 $$ List<FileNameMatcher> result = new ArrayList<FileNameMatcher>()[ CD ]
Line_10 $$ if (entries.getValue() == type) -->Line_11 $$ result.add(new ExactFileNameMatcher(entries.getKey().toString()))[ CD ]
Line_9 $$ for (Map.Entry<CharSequence, T> entries : myExactFileNameMappings.entrySet()) -->Line_20 $$ if (entries.getValue() == type) [ FD ]
Line_2 $$ public List<FileNameMatcher> getAssociations(@NotNull T type) -->Line_15 $$ if (entries.getValue() == type) [ FD ]
Line_2 $$ public List<FileNameMatcher> getAssociations(@NotNull T type) -->Line_10 $$ if (entries.getValue() == type) [ FD ]
Line_9 $$ for (Map.Entry<CharSequence, T> entries : myExactFileNameMappings.entrySet()) -->Line_15 $$ if (entries.getValue() == type) [ FD ]
Line_9 $$ for (Map.Entry<CharSequence, T> entries : myExactFileNameMappings.entrySet()) -->Line_16 $$ result.add(new ExactFileNameMatcher(entries.getKey().toString(), true))[ FD ]
Line_4 $$ for (Pair<FileNameMatcher, T> mapping : myMatchingMappings) -->Line_5 $$ if (mapping.getSecond() == type) [ FD ]
Line_2 $$ public List<FileNameMatcher> getAssociations(@NotNull T type) -->Line_20 $$ if (entries.getValue() == type) [ FD ]
Line_15 $$ if (entries.getValue() == type) -->Line_16 $$ result.add(new ExactFileNameMatcher(entries.getKey().toString(), true))[ CD ]
Line_3 $$ List<FileNameMatcher> result = new ArrayList<FileNameMatcher>()-->Line_21 $$ result.add(new ExtensionFileNameMatcher(entries.getKey().toString()))[ FD ]
Line_9 $$ for (Map.Entry<CharSequence, T> entries : myExactFileNameMappings.entrySet()) -->Line_10 $$ if (entries.getValue() == type) [ FD ]
Line_5 $$ if (mapping.getSecond() == type) -->Line_6 $$ result.add(mapping.getFirst())[ CD ]
Line_3 $$ List<FileNameMatcher> result = new ArrayList<FileNameMatcher>()-->Line_16 $$ result.add(new ExactFileNameMatcher(entries.getKey().toString(), true))[ FD ]
Line_3 $$ List<FileNameMatcher> result = new ArrayList<FileNameMatcher>()-->Line_11 $$ result.add(new ExactFileNameMatcher(entries.getKey().toString()))[ FD ]
Line_2 $$ public List<FileNameMatcher> getAssociations(@NotNull T type) -->Line_24 $$ return result[ CD ]
Line_9 $$ for (Map.Entry<CharSequence, T> entries : myExactFileNameMappings.entrySet()) -->Line_21 $$ result.add(new ExtensionFileNameMatcher(entries.getKey().toString()))[ FD ]
Line_3 $$ List<FileNameMatcher> result = new ArrayList<FileNameMatcher>()-->Line_6 $$ result.add(mapping.getFirst())[ FD ]
