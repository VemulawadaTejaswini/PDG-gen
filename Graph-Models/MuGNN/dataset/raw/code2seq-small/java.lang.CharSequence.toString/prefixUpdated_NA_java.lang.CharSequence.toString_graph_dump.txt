Line_2 $$ public void prefixUpdated() -->Line_9 $$ final CharSequence text = myEditor.getDocument().getCharsSequence()[ CD ]
Line_12 $$ if (caretOffset >= start && start >= 0) -->Line_13 $$ final String newPrefix = text.subSequence(start, caretOffset).toString()[ CD ]
Line_14 $$ if (pair.second.accepts(newPrefix)) -->Line_15 $$ scheduleRestart()[ CD ]
Line_4 $$ if (caretOffset < myStartCaret) -->Line_7 $$ return[ CD ]
Line_3 $$ final int caretOffset = myEditor.getCaretModel().getOffset()-->Line_4 $$ if (caretOffset < myStartCaret) [ FD ]
Line_12 $$ if (caretOffset >= start && start >= 0) -->Line_14 $$ if (pair.second.accepts(newPrefix)) [ CD ]
Line_14 $$ if (pair.second.accepts(newPrefix)) -->Line_17 $$ return[ CD ]
Line_14 $$ if (pair.second.accepts(newPrefix)) -->Line_16 $$ myRestartingPrefixConditions.clear()[ CD ]
Line_2 $$ public void prefixUpdated() -->Line_3 $$ final int caretOffset = myEditor.getCaretModel().getOffset()[ CD ]
Line_13 $$ final String newPrefix = text.subSequence(start, caretOffset).toString()-->Line_14 $$ if (pair.second.accepts(newPrefix)) [ FD ]
Line_4 $$ if (caretOffset < myStartCaret) -->Line_5 $$ scheduleRestart()[ CD ]
Line_11 $$ int start = pair.first-->Line_13 $$ final String newPrefix = text.subSequence(start, caretOffset).toString()[ FD ]
Line_2 $$ public void prefixUpdated() -->Line_21 $$ hideAutopopupIfMeaningless()[ CD ]
Line_3 $$ final int caretOffset = myEditor.getCaretModel().getOffset()-->Line_13 $$ final String newPrefix = text.subSequence(start, caretOffset).toString()[ FD ]
Line_9 $$ final CharSequence text = myEditor.getDocument().getCharsSequence()-->Line_13 $$ final String newPrefix = text.subSequence(start, caretOffset).toString()[ FD ]
Line_2 $$ public void prefixUpdated() -->Line_4 $$ if (caretOffset < myStartCaret) [ CD ]
Line_4 $$ if (caretOffset < myStartCaret) -->Line_6 $$ myRestartingPrefixConditions.clear()[ CD ]
