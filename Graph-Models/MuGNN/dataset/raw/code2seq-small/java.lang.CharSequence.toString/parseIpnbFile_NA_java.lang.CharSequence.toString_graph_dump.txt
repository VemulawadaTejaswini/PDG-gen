Line_5 $$ if (rawFile == null) -->Line_10 $$ return new IpnbFile(ipnbFileRaw, Lists.<IpnbCell>newArrayList(), path)[ CD ]
Line_2 $$ public static IpnbFile parseIpnbFile(@NotNull final CharSequence fileText, @NotNull final VirtualFile virtualFile) throws IOException -->Line_12 $$ List<IpnbCell> cells = new ArrayList<IpnbCell>()[ CD ]
Line_7 $$ if (!isIpythonNewFormat(virtualFile)) -->Line_8 $$ ipnbFileRaw.nbformat = 3[ CD ]
Line_2 $$ public static IpnbFile parseIpnbFile(@NotNull final CharSequence fileText, @NotNull final VirtualFile virtualFile) throws IOException -->Line_3 $$ final String path = virtualFile.getPath()[ FD ]
Line_2 $$ public static IpnbFile parseIpnbFile(@NotNull final CharSequence fileText, @NotNull final VirtualFile virtualFile) throws IOException -->Line_4 $$ IpnbFileRaw rawFile = gson.fromJson(fileText.toString(), IpnbFileRaw.class)[ FD ]
Line_4 $$ IpnbFileRaw rawFile = gson.fromJson(fileText.toString(), IpnbFileRaw.class)-->Line_5 $$ if (rawFile == null) [ FD ]
Line_2 $$ public static IpnbFile parseIpnbFile(@NotNull final CharSequence fileText, @NotNull final VirtualFile virtualFile) throws IOException -->Line_4 $$ IpnbFileRaw rawFile = gson.fromJson(fileText.toString(), IpnbFileRaw.class)[ CD ]
Line_2 $$ public static IpnbFile parseIpnbFile(@NotNull final CharSequence fileText, @NotNull final VirtualFile virtualFile) throws IOException -->Line_26 $$ return new IpnbFile(rawFile, cells, path)[ CD ]
Line_12 $$ List<IpnbCell> cells = new ArrayList<IpnbCell>()-->Line_22 $$ cells.add(rawCell.createCell())[ FD ]
Line_15 $$ for (IpnbCellRaw rawCell : rawFile.cells) -->Line_22 $$ cells.add(rawCell.createCell())[ FD ]
Line_15 $$ for (IpnbCellRaw rawCell : rawFile.cells) -->Line_16 $$ cells.add(rawCell.createCell())[ FD ]
Line_2 $$ public static IpnbFile parseIpnbFile(@NotNull final CharSequence fileText, @NotNull final VirtualFile virtualFile) throws IOException -->Line_5 $$ if (rawFile == null) [ CD ]
Line_5 $$ if (rawFile == null) -->Line_7 $$ if (!isIpythonNewFormat(virtualFile)) [ CD ]
Line_13 $$ final IpnbWorksheet[] worksheets = rawFile.worksheets-->Line_14 $$ if (worksheets == null) [ FD ]
Line_5 $$ if (rawFile == null) -->Line_6 $$ final IpnbFileRaw ipnbFileRaw = new IpnbFileRaw()[ CD ]
Line_2 $$ public static IpnbFile parseIpnbFile(@NotNull final CharSequence fileText, @NotNull final VirtualFile virtualFile) throws IOException -->Line_3 $$ final String path = virtualFile.getPath()[ CD ]
Line_2 $$ public static IpnbFile parseIpnbFile(@NotNull final CharSequence fileText, @NotNull final VirtualFile virtualFile) throws IOException -->Line_14 $$ if (worksheets == null) [ CD ]
Line_12 $$ List<IpnbCell> cells = new ArrayList<IpnbCell>()-->Line_16 $$ cells.add(rawCell.createCell())[ FD ]
Line_2 $$ public static IpnbFile parseIpnbFile(@NotNull final CharSequence fileText, @NotNull final VirtualFile virtualFile) throws IOException -->Line_13 $$ final IpnbWorksheet[] worksheets = rawFile.worksheets[ CD ]
Line_2 $$ public static IpnbFile parseIpnbFile(@NotNull final CharSequence fileText, @NotNull final VirtualFile virtualFile) throws IOException -->Line_7 $$ if (!isIpythonNewFormat(virtualFile)) [ FD ]
