Line_6 $$ Files.walkFileTree(sourcePath, new SimpleFileVisitor<Path>() -->Line_13 $$ BigEndianCodec.putLong(buffer, 8, basicFileAttributes.size())[ CD ]
Line_5 $$ try (ZipOutputStream autoClosezipOutputStream = zipOutputStream) -->Line_17 $$ autoClosezipOutputStream.closeEntry()[ FD ]
Line_6 $$ Files.walkFileTree(sourcePath, new SimpleFileVisitor<Path>() -->Line_15 $$ autoClosezipOutputStream.putNextEntry(zipEntry)[ CD ]
Line_6 $$ Files.walkFileTree(sourcePath, new SimpleFileVisitor<Path>() -->Line_8 $$ Path relativePath = sourcePath.relativize(file)[ FD ]
Line_2 $$ public static long zip(final Path sourcePath, ZipOutputStream zipOutputStream) throws IOException -->Line_3 $$ final AtomicLong rawSize = new AtomicLong()[ CD ]
Line_6 $$ Files.walkFileTree(sourcePath, new SimpleFileVisitor<Path>() -->Line_10 $$ FileTime fileTime = basicFileAttributes.lastModifiedTime()[ FD ]
Line_5 $$ try (ZipOutputStream autoClosezipOutputStream = zipOutputStream) -->Line_15 $$ autoClosezipOutputStream.putNextEntry(zipEntry)[ FD ]
Line_2 $$ public static long zip(final Path sourcePath, ZipOutputStream zipOutputStream) throws IOException -->Line_6 $$ Files.walkFileTree(sourcePath, new SimpleFileVisitor<Path>() [ FD ]
Line_2 $$ public static long zip(final Path sourcePath, ZipOutputStream zipOutputStream) throws IOException -->Line_22 $$ return rawSize.get()[ CD ]
Line_4 $$ final byte[] buffer = new byte[16]-->Line_14 $$ zipEntry.setExtra(buffer)[ FD ]
Line_6 $$ Files.walkFileTree(sourcePath, new SimpleFileVisitor<Path>() -->Line_10 $$ FileTime fileTime = basicFileAttributes.lastModifiedTime()[ CD ]
Line_6 $$ Files.walkFileTree(sourcePath, new SimpleFileVisitor<Path>() -->Line_17 $$ autoClosezipOutputStream.closeEntry()[ CD ]
Line_6 $$ Files.walkFileTree(sourcePath, new SimpleFileVisitor<Path>() -->Line_18 $$ return FileVisitResult.CONTINUE[ CD ]
Line_6 $$ Files.walkFileTree(sourcePath, new SimpleFileVisitor<Path>() -->Line_11 $$ rawSize.addAndGet(basicFileAttributes.size())[ CD ]
Line_2 $$ public static long zip(final Path sourcePath, ZipOutputStream zipOutputStream) throws IOException -->Line_4 $$ final byte[] buffer = new byte[16][ CD ]
Line_10 $$ FileTime fileTime = basicFileAttributes.lastModifiedTime()-->Line_12 $$ BigEndianCodec.putLong(buffer, 0, fileTime.toMillis())[ FD ]
Line_4 $$ final byte[] buffer = new byte[16]-->Line_13 $$ BigEndianCodec.putLong(buffer, 8, basicFileAttributes.size())[ FD ]
Line_9 $$ ZipEntry zipEntry = new ZipEntry(relativePath.toString())-->Line_15 $$ autoClosezipOutputStream.putNextEntry(zipEntry)[ FD ]
Line_4 $$ final byte[] buffer = new byte[16]-->Line_12 $$ BigEndianCodec.putLong(buffer, 0, fileTime.toMillis())[ FD ]
Line_8 $$ Path relativePath = sourcePath.relativize(file)-->Line_9 $$ ZipEntry zipEntry = new ZipEntry(relativePath.toString())[ FD ]
Line_3 $$ final AtomicLong rawSize = new AtomicLong()-->Line_11 $$ rawSize.addAndGet(basicFileAttributes.size())[ FD ]
Line_6 $$ Files.walkFileTree(sourcePath, new SimpleFileVisitor<Path>() -->Line_11 $$ rawSize.addAndGet(basicFileAttributes.size())[ FD ]
Line_5 $$ try (ZipOutputStream autoClosezipOutputStream = zipOutputStream) -->Line_16 $$ Files.copy(file, autoClosezipOutputStream)[ FD ]
Line_6 $$ Files.walkFileTree(sourcePath, new SimpleFileVisitor<Path>() -->Line_13 $$ BigEndianCodec.putLong(buffer, 8, basicFileAttributes.size())[ FD ]
Line_6 $$ Files.walkFileTree(sourcePath, new SimpleFileVisitor<Path>() -->Line_9 $$ ZipEntry zipEntry = new ZipEntry(relativePath.toString())[ CD ]
Line_6 $$ Files.walkFileTree(sourcePath, new SimpleFileVisitor<Path>() -->Line_14 $$ zipEntry.setExtra(buffer)[ CD ]
Line_3 $$ final AtomicLong rawSize = new AtomicLong()-->Line_22 $$ return rawSize.get()[ FD ]
Line_6 $$ Files.walkFileTree(sourcePath, new SimpleFileVisitor<Path>() -->Line_16 $$ Files.copy(file, autoClosezipOutputStream)[ FD ]
Line_6 $$ Files.walkFileTree(sourcePath, new SimpleFileVisitor<Path>() -->Line_8 $$ Path relativePath = sourcePath.relativize(file)[ CD ]
Line_6 $$ Files.walkFileTree(sourcePath, new SimpleFileVisitor<Path>() -->Line_12 $$ BigEndianCodec.putLong(buffer, 0, fileTime.toMillis())[ CD ]
Line_9 $$ ZipEntry zipEntry = new ZipEntry(relativePath.toString())-->Line_14 $$ zipEntry.setExtra(buffer)[ FD ]
Line_2 $$ public static long zip(final Path sourcePath, ZipOutputStream zipOutputStream) throws IOException -->Line_8 $$ Path relativePath = sourcePath.relativize(file)[ FD ]
Line_6 $$ Files.walkFileTree(sourcePath, new SimpleFileVisitor<Path>() -->Line_16 $$ Files.copy(file, autoClosezipOutputStream)[ CD ]
