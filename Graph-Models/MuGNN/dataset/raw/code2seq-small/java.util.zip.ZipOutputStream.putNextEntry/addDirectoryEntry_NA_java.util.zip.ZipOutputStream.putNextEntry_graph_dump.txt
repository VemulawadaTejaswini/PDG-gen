Line_2 $$ private static void addDirectoryEntry(final ZipOutputStream output, @NonNls final String relativePath, Set<String> writtenPaths) throws IOException -->Line_8 $$ e.setCrc(0)[ CD ]
Line_2 $$ private static void addDirectoryEntry(final ZipOutputStream output, @NonNls final String relativePath, Set<String> writtenPaths) throws IOException -->Line_9 $$ output.putNextEntry(e)[ CD ]
Line_2 $$ private static void addDirectoryEntry(final ZipOutputStream output, @NonNls final String relativePath, Set<String> writtenPaths) throws IOException -->Line_9 $$ output.putNextEntry(e)[ FD ]
Line_3 $$ if (!writtenPaths.add(relativePath))-->Line_4 $$ return[ CD ]
Line_2 $$ private static void addDirectoryEntry(final ZipOutputStream output, @NonNls final String relativePath, Set<String> writtenPaths) throws IOException -->Line_7 $$ e.setSize(0)[ CD ]
Line_2 $$ private static void addDirectoryEntry(final ZipOutputStream output, @NonNls final String relativePath, Set<String> writtenPaths) throws IOException -->Line_5 $$ ZipEntry e = new ZipEntry(relativePath)[ CD ]
Line_2 $$ private static void addDirectoryEntry(final ZipOutputStream output, @NonNls final String relativePath, Set<String> writtenPaths) throws IOException -->Line_6 $$ e.setMethod(ZipEntry.STORED)[ CD ]
Line_5 $$ ZipEntry e = new ZipEntry(relativePath)-->Line_8 $$ e.setCrc(0)[ FD ]
Line_5 $$ ZipEntry e = new ZipEntry(relativePath)-->Line_7 $$ e.setSize(0)[ FD ]
Line_5 $$ ZipEntry e = new ZipEntry(relativePath)-->Line_6 $$ e.setMethod(ZipEntry.STORED)[ FD ]
Line_5 $$ ZipEntry e = new ZipEntry(relativePath)-->Line_9 $$ output.putNextEntry(e)[ FD ]
Line_2 $$ private static void addDirectoryEntry(final ZipOutputStream output, @NonNls final String relativePath, Set<String> writtenPaths) throws IOException -->Line_3 $$ if (!writtenPaths.add(relativePath))[ FD ]
Line_2 $$ private static void addDirectoryEntry(final ZipOutputStream output, @NonNls final String relativePath, Set<String> writtenPaths) throws IOException -->Line_10 $$ output.closeEntry()[ CD ]
Line_2 $$ private static void addDirectoryEntry(final ZipOutputStream output, @NonNls final String relativePath, Set<String> writtenPaths) throws IOException -->Line_10 $$ output.closeEntry()[ FD ]
Line_2 $$ private static void addDirectoryEntry(final ZipOutputStream output, @NonNls final String relativePath, Set<String> writtenPaths) throws IOException -->Line_3 $$ if (!writtenPaths.add(relativePath))[ CD ]
