Line_11 $$ bytesRead = is.read(buffer)-->Line_10 $$ zos.write(buffer, 0, bytesRead)[ FD ]
Line_8 $$ int bytesRead = is.read(buffer)-->Line_9 $$ while (bytesRead > -1) [ FD ]
Line_3 $$ byte[] buffer = new byte[1024]-->Line_8 $$ int bytesRead = is.read(buffer)[ FD ]
Line_2 $$ public void add(InputStream is, String path) -->Line_21 $$ ROOT_LOGGER.debugf(e, "Error when closing entry for %s", path)[ FD ]
Line_3 $$ byte[] buffer = new byte[1024]-->Line_10 $$ zos.write(buffer, 0, bytesRead)[ FD ]
Line_3 $$ byte[] buffer = new byte[1024]-->Line_11 $$ bytesRead = is.read(buffer)[ FD ]
Line_2 $$ public void add(InputStream is, String path) -->Line_14 $$ ROOT_LOGGER.debugf(ze, "%s is already in the zip", path)[ FD ]
Line_11 $$ bytesRead = is.read(buffer)-->Line_9 $$ while (bytesRead > -1) [ FD ]
Line_8 $$ int bytesRead = is.read(buffer)-->Line_10 $$ zos.write(buffer, 0, bytesRead)[ FD ]
Line_2 $$ public void add(InputStream is, String path) -->Line_11 $$ bytesRead = is.read(buffer)[ FD ]
Line_9 $$ while (bytesRead > -1) -->Line_10 $$ zos.write(buffer, 0, bytesRead)[ CD ]
Line_2 $$ public void add(InputStream is, String path) -->Line_16 $$ ROOT_LOGGER.debugf(e, "Error when adding %s", path)[ FD ]
Line_6 $$ ZipEntry ze = new ZipEntry(entryName)-->Line_7 $$ zos.putNextEntry(ze)[ FD ]
Line_9 $$ while (bytesRead > -1) -->Line_11 $$ bytesRead = is.read(buffer)[ CD ]
Line_2 $$ public void add(InputStream is, String path) -->Line_8 $$ int bytesRead = is.read(buffer)[ FD ]
Line_6 $$ ZipEntry ze = new ZipEntry(entryName)-->Line_14 $$ ROOT_LOGGER.debugf(ze, "%s is already in the zip", path)[ FD ]
Line_8 $$ int bytesRead = is.read(buffer)-->Line_11 $$ bytesRead = is.read(buffer)[ FD ]
Line_2 $$ public void add(InputStream is, String path) -->Line_3 $$ byte[] buffer = new byte[1024][ CD ]
