Line_2 $$ protected void createInput() throws IOException -->Line_4 $$ DataOutputStream dos = fileSys.create(new Path(INPUT_FILE))[ CD ]
Line_5 $$ String inputFileString = "symlink1" + File.separator + "cacheArchive1\nsymlink2" + File.separator + "cacheArchive2"-->Line_6 $$ dos.write(inputFileString.getBytes("UTF-8"))[ FD ]
Line_2 $$ protected void createInput() throws IOException -->Line_16 $$ zos = new ZipOutputStream(out)[ CD ]
Line_9 $$ ZipOutputStream zos = new ZipOutputStream(out)-->Line_12 $$ zos.write(input.getBytes("UTF-8"))[ FD ]
Line_2 $$ protected void createInput() throws IOException -->Line_19 $$ zos.write(input.getBytes("UTF-8"))[ CD ]
Line_2 $$ protected void createInput() throws IOException -->Line_14 $$ zos.close()[ CD ]
Line_9 $$ ZipOutputStream zos = new ZipOutputStream(out)-->Line_18 $$ zos.putNextEntry(ze)[ FD ]
Line_16 $$ zos = new ZipOutputStream(out)-->Line_20 $$ zos.closeEntry()[ FD ]
Line_9 $$ ZipOutputStream zos = new ZipOutputStream(out)-->Line_16 $$ zos = new ZipOutputStream(out)[ FD ]
Line_10 $$ ZipEntry ze = new ZipEntry(CACHE_FILE_1.toString())-->Line_18 $$ zos.putNextEntry(ze)[ FD ]
Line_9 $$ ZipOutputStream zos = new ZipOutputStream(out)-->Line_21 $$ zos.close()[ FD ]
Line_16 $$ zos = new ZipOutputStream(out)-->Line_21 $$ zos.close()[ FD ]
Line_2 $$ protected void createInput() throws IOException -->Line_10 $$ ZipEntry ze = new ZipEntry(CACHE_FILE_1.toString())[ CD ]
Line_9 $$ ZipOutputStream zos = new ZipOutputStream(out)-->Line_19 $$ zos.write(input.getBytes("UTF-8"))[ FD ]
Line_2 $$ protected void createInput() throws IOException -->Line_20 $$ zos.closeEntry()[ CD ]
Line_2 $$ protected void createInput() throws IOException -->Line_5 $$ String inputFileString = "symlink1" + File.separator + "cacheArchive1\nsymlink2" + File.separator + "cacheArchive2"[ CD ]
Line_2 $$ protected void createInput() throws IOException -->Line_6 $$ dos.write(inputFileString.getBytes("UTF-8"))[ CD ]
Line_2 $$ protected void createInput() throws IOException -->Line_18 $$ zos.putNextEntry(ze)[ CD ]
Line_17 $$ ze = new ZipEntry(CACHE_FILE_2.toString())-->Line_18 $$ zos.putNextEntry(ze)[ FD ]
Line_2 $$ protected void createInput() throws IOException -->Line_17 $$ ze = new ZipEntry(CACHE_FILE_2.toString())[ CD ]
Line_9 $$ ZipOutputStream zos = new ZipOutputStream(out)-->Line_20 $$ zos.closeEntry()[ FD ]
Line_2 $$ protected void createInput() throws IOException -->Line_8 $$ DataOutputStream out = fileSys.create(new Path(CACHE_ARCHIVE_1.toString()))[ CD ]
Line_2 $$ protected void createInput() throws IOException -->Line_15 $$ out = fileSys.create(new Path(CACHE_ARCHIVE_2.toString()))[ CD ]
Line_9 $$ ZipOutputStream zos = new ZipOutputStream(out)-->Line_11 $$ zos.putNextEntry(ze)[ FD ]
Line_4 $$ DataOutputStream dos = fileSys.create(new Path(INPUT_FILE))-->Line_6 $$ dos.write(inputFileString.getBytes("UTF-8"))[ FD ]
Line_9 $$ ZipOutputStream zos = new ZipOutputStream(out)-->Line_14 $$ zos.close()[ FD ]
Line_9 $$ ZipOutputStream zos = new ZipOutputStream(out)-->Line_13 $$ zos.closeEntry()[ FD ]
Line_2 $$ protected void createInput() throws IOException -->Line_11 $$ zos.putNextEntry(ze)[ CD ]
Line_2 $$ protected void createInput() throws IOException -->Line_12 $$ zos.write(input.getBytes("UTF-8"))[ CD ]
Line_2 $$ protected void createInput() throws IOException -->Line_3 $$ fileSys.delete(new Path(INPUT_DIR), true)[ CD ]
Line_4 $$ DataOutputStream dos = fileSys.create(new Path(INPUT_FILE))-->Line_7 $$ dos.close()[ FD ]
Line_2 $$ protected void createInput() throws IOException -->Line_9 $$ ZipOutputStream zos = new ZipOutputStream(out)[ CD ]
Line_2 $$ protected void createInput() throws IOException -->Line_13 $$ zos.closeEntry()[ CD ]
Line_2 $$ protected void createInput() throws IOException -->Line_21 $$ zos.close()[ CD ]
Line_8 $$ DataOutputStream out = fileSys.create(new Path(CACHE_ARCHIVE_1.toString()))-->Line_15 $$ out = fileSys.create(new Path(CACHE_ARCHIVE_2.toString()))[ FD ]
Line_10 $$ ZipEntry ze = new ZipEntry(CACHE_FILE_1.toString())-->Line_11 $$ zos.putNextEntry(ze)[ FD ]
Line_16 $$ zos = new ZipOutputStream(out)-->Line_19 $$ zos.write(input.getBytes("UTF-8"))[ FD ]
Line_2 $$ protected void createInput() throws IOException -->Line_7 $$ dos.close()[ CD ]
Line_10 $$ ZipEntry ze = new ZipEntry(CACHE_FILE_1.toString())-->Line_17 $$ ze = new ZipEntry(CACHE_FILE_2.toString())[ FD ]
Line_16 $$ zos = new ZipOutputStream(out)-->Line_18 $$ zos.putNextEntry(ze)[ FD ]
