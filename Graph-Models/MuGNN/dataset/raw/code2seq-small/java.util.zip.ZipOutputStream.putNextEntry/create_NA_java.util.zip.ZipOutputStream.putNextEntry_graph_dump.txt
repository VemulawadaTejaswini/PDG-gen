Line_3 $$ Patch patchInfo = new Patch(spec, ui)-->Line_11 $$ patchInfo.write(out)[ FD ]
Line_14 $$ File newerDir = new File(spec.getNewFolder())-->Line_20 $$ each.buildPatchFile(olderDir, newerDir, out)[ FD ]
Line_7 $$ ZipOutputStream out = new ZipOutputStream(new FileOutputStream(patchFile))-->Line_12 $$ out.closeEntry()[ FD ]
Line_7 $$ ZipOutputStream out = new ZipOutputStream(new FileOutputStream(patchFile))-->Line_23 $$ out.close()[ FD ]
Line_7 $$ ZipOutputStream out = new ZipOutputStream(new FileOutputStream(patchFile))-->Line_11 $$ patchInfo.write(out)[ FD ]
Line_2 $$ public static Patch create(PatchSpec spec, File patchFile, UpdaterUI ui) throws IOException, OperationCancelledException -->Line_14 $$ File newerDir = new File(spec.getNewFolder())[ FD ]
Line_2 $$ public static Patch create(PatchSpec spec, File patchFile, UpdaterUI ui) throws IOException, OperationCancelledException -->Line_4 $$ Runner.logger.info("Creating the patch file '" + patchFile + "'...")[ CD ]
Line_2 $$ public static Patch create(PatchSpec spec, File patchFile, UpdaterUI ui) throws IOException, OperationCancelledException -->Line_6 $$ ui.checkCancelled()[ CD ]
Line_2 $$ public static Patch create(PatchSpec spec, File patchFile, UpdaterUI ui) throws IOException, OperationCancelledException -->Line_25 $$ return patchInfo[ CD ]
Line_7 $$ ZipOutputStream out = new ZipOutputStream(new FileOutputStream(patchFile))-->Line_20 $$ each.buildPatchFile(olderDir, newerDir, out)[ FD ]
Line_2 $$ public static Patch create(PatchSpec spec, File patchFile, UpdaterUI ui) throws IOException, OperationCancelledException -->Line_3 $$ Patch patchInfo = new Patch(spec, ui)[ CD ]
Line_3 $$ Patch patchInfo = new Patch(spec, ui)-->Line_15 $$ List<PatchAction> actions = patchInfo.getActions()[ FD ]
Line_2 $$ public static Patch create(PatchSpec spec, File patchFile, UpdaterUI ui) throws IOException, OperationCancelledException -->Line_18 $$ ui.setStatus("Packing " + each.getPath())[ FD ]
Line_16 $$ for (PatchAction each : actions) -->Line_20 $$ each.buildPatchFile(olderDir, newerDir, out)[ FD ]
Line_2 $$ public static Patch create(PatchSpec spec, File patchFile, UpdaterUI ui) throws IOException, OperationCancelledException -->Line_7 $$ ZipOutputStream out = new ZipOutputStream(new FileOutputStream(patchFile))[ CD ]
Line_7 $$ ZipOutputStream out = new ZipOutputStream(new FileOutputStream(patchFile))-->Line_10 $$ out.putNextEntry(new ZipEntry(PATCH_INFO_FILE_NAME))[ FD ]
Line_2 $$ public static Patch create(PatchSpec spec, File patchFile, UpdaterUI ui) throws IOException, OperationCancelledException -->Line_5 $$ ui.startProcess("Creating the patch file '" + patchFile + "'...")[ FD ]
Line_2 $$ public static Patch create(PatchSpec spec, File patchFile, UpdaterUI ui) throws IOException, OperationCancelledException -->Line_19 $$ ui.checkCancelled()[ FD ]
Line_2 $$ public static Patch create(PatchSpec spec, File patchFile, UpdaterUI ui) throws IOException, OperationCancelledException -->Line_13 $$ File olderDir = new File(spec.getOldFolder())[ FD ]
Line_16 $$ for (PatchAction each : actions) -->Line_17 $$ Runner.logger.info("Packing " + each.getPath())[ FD ]
Line_2 $$ public static Patch create(PatchSpec spec, File patchFile, UpdaterUI ui) throws IOException, OperationCancelledException -->Line_6 $$ ui.checkCancelled()[ FD ]
Line_16 $$ for (PatchAction each : actions) -->Line_18 $$ ui.setStatus("Packing " + each.getPath())[ FD ]
Line_13 $$ File olderDir = new File(spec.getOldFolder())-->Line_20 $$ each.buildPatchFile(olderDir, newerDir, out)[ FD ]
Line_2 $$ public static Patch create(PatchSpec spec, File patchFile, UpdaterUI ui) throws IOException, OperationCancelledException -->Line_5 $$ ui.startProcess("Creating the patch file '" + patchFile + "'...")[ CD ]
Line_7 $$ ZipOutputStream out = new ZipOutputStream(new FileOutputStream(patchFile))-->Line_9 $$ out.setLevel(9)[ FD ]
