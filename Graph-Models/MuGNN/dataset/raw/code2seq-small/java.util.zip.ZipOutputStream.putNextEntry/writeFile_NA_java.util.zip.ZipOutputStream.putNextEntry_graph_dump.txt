Line_2 $$ private static void writeFile(String path, final String text, Project project, VirtualFile dir, ZipOutputStream stream, boolean overwrite) throws IOException -->Line_4 $$ if (descriptionFile == null) [ CD ]
Line_2 $$ private static void writeFile(String path, final String text, Project project, VirtualFile dir, ZipOutputStream stream, boolean overwrite) throws IOException -->Line_3 $$ final VirtualFile descriptionFile = getDescriptionFile(project, path)[ CD ]
Line_9 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_11 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() [ CD ]
Line_2 $$ private static void writeFile(String path, final String text, Project project, VirtualFile dir, ZipOutputStream stream, boolean overwrite) throws IOException -->Line_5 $$ stream.putNextEntry(new ZipEntry(dir.getName() + "/" + path))[ FD ]
Line_4 $$ if (descriptionFile == null) -->Line_8 $$ if (overwrite) [ CD ]
Line_3 $$ final VirtualFile descriptionFile = getDescriptionFile(project, path)-->Line_14 $$ VfsUtil.saveText(descriptionFile, text)[ FD ]
Line_2 $$ private static void writeFile(String path, final String text, Project project, VirtualFile dir, ZipOutputStream stream, boolean overwrite) throws IOException -->Line_14 $$ VfsUtil.saveText(descriptionFile, text)[ FD ]
Line_2 $$ private static void writeFile(String path, final String text, Project project, VirtualFile dir, ZipOutputStream stream, boolean overwrite) throws IOException -->Line_6 $$ stream.write(text.getBytes())[ FD ]
Line_4 $$ if (descriptionFile == null) -->Line_5 $$ stream.putNextEntry(new ZipEntry(dir.getName() + "/" + path))[ CD ]
Line_4 $$ if (descriptionFile == null) -->Line_6 $$ stream.write(text.getBytes())[ CD ]
Line_2 $$ private static void writeFile(String path, final String text, Project project, VirtualFile dir, ZipOutputStream stream, boolean overwrite) throws IOException -->Line_3 $$ final VirtualFile descriptionFile = getDescriptionFile(project, path)[ FD ]
Line_2 $$ private static void writeFile(String path, final String text, Project project, VirtualFile dir, ZipOutputStream stream, boolean overwrite) throws IOException -->Line_4 $$ if (descriptionFile == null) [ FD ]
Line_4 $$ if (descriptionFile == null) -->Line_7 $$ stream.closeEntry()[ CD ]
Line_8 $$ if (overwrite) -->Line_9 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() [ CD ]
Line_3 $$ final VirtualFile descriptionFile = getDescriptionFile(project, path)-->Line_4 $$ if (descriptionFile == null) [ FD ]
Line_2 $$ private static void writeFile(String path, final String text, Project project, VirtualFile dir, ZipOutputStream stream, boolean overwrite) throws IOException -->Line_7 $$ stream.closeEntry()[ FD ]
