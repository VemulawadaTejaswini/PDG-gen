Line_2 $$ public void process(ZipEntry newerEntry, InputStream newerEntryIn) throws IOException -->Line_5 $$ String name = newerEntry.getName()[ CD ]
Line_2 $$ public void process(ZipEntry newerEntry, InputStream newerEntryIn) throws IOException -->Line_6 $$ if (!filesToProcess.contains(name))[ CD ]
Line_2 $$ public void process(ZipEntry newerEntry, InputStream newerEntryIn) throws IOException -->Line_3 $$ if (newerEntry.isDirectory())[ FD ]
Line_5 $$ String name = newerEntry.getName()-->Line_6 $$ if (!filesToProcess.contains(name))[ FD ]
Line_10 $$ InputStream olderEntryIn = Utils.findEntryInputStream(olderZip, name)-->Line_11 $$ if (olderEntryIn == null) [ FD ]
Line_6 $$ if (!filesToProcess.contains(name))-->Line_7 $$ return[ CD ]
Line_2 $$ public void process(ZipEntry newerEntry, InputStream newerEntryIn) throws IOException -->Line_14 $$ writeDiff(olderEntryIn, newerEntryIn, patchOutput)[ FD ]
Line_10 $$ InputStream olderEntryIn = Utils.findEntryInputStream(olderZip, name)-->Line_14 $$ writeDiff(olderEntryIn, newerEntryIn, patchOutput)[ FD ]
Line_11 $$ if (olderEntryIn == null) -->Line_12 $$ Utils.copyStream(newerEntryIn, patchOutput)[ CD ]
Line_2 $$ public void process(ZipEntry newerEntry, InputStream newerEntryIn) throws IOException -->Line_12 $$ Utils.copyStream(newerEntryIn, patchOutput)[ FD ]
Line_3 $$ if (newerEntry.isDirectory())-->Line_4 $$ return[ CD ]
Line_2 $$ public void process(ZipEntry newerEntry, InputStream newerEntryIn) throws IOException -->Line_3 $$ if (newerEntry.isDirectory())[ CD ]
Line_11 $$ if (olderEntryIn == null) -->Line_14 $$ writeDiff(olderEntryIn, newerEntryIn, patchOutput)[ CD ]
Line_5 $$ String name = newerEntry.getName()-->Line_10 $$ InputStream olderEntryIn = Utils.findEntryInputStream(olderZip, name)[ FD ]
Line_2 $$ public void process(ZipEntry newerEntry, InputStream newerEntryIn) throws IOException -->Line_5 $$ String name = newerEntry.getName()[ FD ]
