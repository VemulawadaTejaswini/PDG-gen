Line_3 $$ URL codeLocation = FileUtils.class.getProtectionDomain().getCodeSource().getLocation()-->Line_5 $$ if (codeLocation.getFile().endsWith(".jar") && loadPackaged) [ FD ]
Line_3 $$ URL codeLocation = FileUtils.class.getProtectionDomain().getCodeSource().getLocation()-->Line_8 $$ try (InputStream in = codeLocation.openStream()) [ FD ]
Line_2 $$ static FileSystem getFileSystem() throws IOException -->Line_4 $$ boolean loadPackaged = RandomizedTest.systemPropertyAsBoolean(REST_LOAD_PACKAGED_TESTS, true)[ CD ]
Line_7 $$ Path tmp = Files.createTempFile(null, ".jar")-->Line_11 $$ return FileSystems.newFileSystem(new URI("jar:" + tmp.toUri()), Collections.<String, Object>emptyMap())[ FD ]
Line_2 $$ static FileSystem getFileSystem() throws IOException -->Line_5 $$ if (codeLocation.getFile().endsWith(".jar") && loadPackaged) [ CD ]
Line_7 $$ Path tmp = Files.createTempFile(null, ".jar")-->Line_9 $$ Files.copy(in, tmp, StandardCopyOption.REPLACE_EXISTING)[ FD ]
Line_8 $$ try (InputStream in = codeLocation.openStream()) -->Line_9 $$ Files.copy(in, tmp, StandardCopyOption.REPLACE_EXISTING)[ FD ]
Line_5 $$ if (codeLocation.getFile().endsWith(".jar") && loadPackaged) -->Line_16 $$ return null[ CD ]
Line_2 $$ static FileSystem getFileSystem() throws IOException -->Line_3 $$ URL codeLocation = FileUtils.class.getProtectionDomain().getCodeSource().getLocation()[ CD ]
Line_4 $$ boolean loadPackaged = RandomizedTest.systemPropertyAsBoolean(REST_LOAD_PACKAGED_TESTS, true)-->Line_5 $$ if (codeLocation.getFile().endsWith(".jar") && loadPackaged) [ FD ]
