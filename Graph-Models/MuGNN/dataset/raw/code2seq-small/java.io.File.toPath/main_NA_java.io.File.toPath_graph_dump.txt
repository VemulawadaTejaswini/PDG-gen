Line_2 $$ public static void main(final String[] args) throws IOException -->Line_17 $$ boolean setIsRepaired = args[1].equals("--is-repaired")[ CD ]
Line_25 $$ Descriptor descriptor = Descriptor.fromFilename(fname)-->Line_29 $$ descriptor.getMetadataSerializer().mutateRepairedAt(descriptor, f.toMillis())[ FD ]
Line_10 $$ if (args.length < 3 || !args[0].equals("--really-set") || (!args[1].equals("--is-repaired") && !args[1].equals("--is-unrepaired"))) -->Line_12 $$ out.println("Verify that Cassandra is not running and then execute the command like this:")[ CD ]
Line_5 $$ if (args.length == 0) -->Line_8 $$ System.exit(1)[ CD ]
Line_18 $$ List<String> fileNames-->Line_22 $$ fileNames = Arrays.asList(args).subList(2, args.length)[ FD ]
Line_27 $$ if (setIsRepaired) -->Line_29 $$ descriptor.getMetadataSerializer().mutateRepairedAt(descriptor, f.toMillis())[ CD ]
Line_5 $$ if (args.length == 0) -->Line_7 $$ out.println("Usage: sstablerepairedset [--is-repaired | --is-unrepaired] [-f <sstable-list> | <sstables>]")[ CD ]
Line_2 $$ public static void main(final String[] args) throws IOException -->Line_4 $$ PrintStream out = System.out[ CD ]
Line_19 $$ if (args[2].equals("-f")) -->Line_20 $$ fileNames = Files.readAllLines(Paths.get(args[3]), Charset.defaultCharset())[ CD ]
Line_2 $$ public static void main(final String[] args) throws IOException -->Line_22 $$ fileNames = Arrays.asList(args).subList(2, args.length)[ FD ]
Line_2 $$ public static void main(final String[] args) throws IOException -->Line_16 $$ Util.initDatabaseDescriptor()[ CD ]
Line_2 $$ public static void main(final String[] args) throws IOException -->Line_10 $$ if (args.length < 3 || !args[0].equals("--really-set") || (!args[1].equals("--is-repaired") && !args[1].equals("--is-unrepaired"))) [ CD ]
Line_26 $$ if (descriptor.version.hasRepairedAt()) -->Line_34 $$ System.err.println("SSTable " + fname + " does not have repaired property, run upgradesstables")[ CD ]
Line_10 $$ if (args.length < 3 || !args[0].equals("--really-set") || (!args[1].equals("--is-repaired") && !args[1].equals("--is-unrepaired"))) -->Line_14 $$ System.exit(1)[ CD ]
Line_4 $$ PrintStream out = System.out-->Line_12 $$ out.println("Verify that Cassandra is not running and then execute the command like this:")[ FD ]
Line_26 $$ if (descriptor.version.hasRepairedAt()) -->Line_27 $$ if (setIsRepaired) [ CD ]
Line_4 $$ PrintStream out = System.out-->Line_6 $$ out.println("This command should be run with Cassandra stopped!")[ FD ]
Line_10 $$ if (args.length < 3 || !args[0].equals("--really-set") || (!args[1].equals("--is-repaired") && !args[1].equals("--is-unrepaired"))) -->Line_13 $$ out.println("Usage: sstablerepairedset --really-set [--is-repaired | --is-unrepaired] [-f <sstable-list> | <sstables>]")[ CD ]
Line_4 $$ PrintStream out = System.out-->Line_11 $$ out.println("This command should be run with Cassandra stopped, otherwise you will get very strange behavior")[ FD ]
Line_2 $$ public static void main(final String[] args) throws IOException -->Line_18 $$ List<String> fileNames[ CD ]
Line_19 $$ if (args[2].equals("-f")) -->Line_22 $$ fileNames = Arrays.asList(args).subList(2, args.length)[ CD ]
Line_20 $$ fileNames = Files.readAllLines(Paths.get(args[3]), Charset.defaultCharset())-->Line_22 $$ fileNames = Arrays.asList(args).subList(2, args.length)[ FD ]
Line_4 $$ PrintStream out = System.out-->Line_7 $$ out.println("Usage: sstablerepairedset [--is-repaired | --is-unrepaired] [-f <sstable-list> | <sstables>]")[ FD ]
Line_4 $$ PrintStream out = System.out-->Line_13 $$ out.println("Usage: sstablerepairedset --really-set [--is-repaired | --is-unrepaired] [-f <sstable-list> | <sstables>]")[ FD ]
Line_25 $$ Descriptor descriptor = Descriptor.fromFilename(fname)-->Line_28 $$ FileTime f = Files.getLastModifiedTime(new File(descriptor.filenameFor(Component.DATA)).toPath())[ FD ]
Line_25 $$ Descriptor descriptor = Descriptor.fromFilename(fname)-->Line_31 $$ descriptor.getMetadataSerializer().mutateRepairedAt(descriptor, ActiveRepairService.UNREPAIRED_SSTABLE)[ FD ]
Line_27 $$ if (setIsRepaired) -->Line_31 $$ descriptor.getMetadataSerializer().mutateRepairedAt(descriptor, ActiveRepairService.UNREPAIRED_SSTABLE)[ CD ]
Line_2 $$ public static void main(final String[] args) throws IOException -->Line_19 $$ if (args[2].equals("-f")) [ CD ]
Line_5 $$ if (args.length == 0) -->Line_6 $$ out.println("This command should be run with Cassandra stopped!")[ CD ]
Line_2 $$ public static void main(final String[] args) throws IOException -->Line_5 $$ if (args.length == 0) [ CD ]
Line_24 $$ for (String fname : fileNames) -->Line_25 $$ Descriptor descriptor = Descriptor.fromFilename(fname)[ FD ]
Line_27 $$ if (setIsRepaired) -->Line_28 $$ FileTime f = Files.getLastModifiedTime(new File(descriptor.filenameFor(Component.DATA)).toPath())[ CD ]
Line_28 $$ FileTime f = Files.getLastModifiedTime(new File(descriptor.filenameFor(Component.DATA)).toPath())-->Line_29 $$ descriptor.getMetadataSerializer().mutateRepairedAt(descriptor, f.toMillis())[ FD ]
Line_2 $$ public static void main(final String[] args) throws IOException -->Line_3 $$ Config.setClientMode(true)[ CD ]
Line_18 $$ List<String> fileNames-->Line_20 $$ fileNames = Files.readAllLines(Paths.get(args[3]), Charset.defaultCharset())[ FD ]
Line_10 $$ if (args.length < 3 || !args[0].equals("--really-set") || (!args[1].equals("--is-repaired") && !args[1].equals("--is-unrepaired"))) -->Line_11 $$ out.println("This command should be run with Cassandra stopped, otherwise you will get very strange behavior")[ CD ]
