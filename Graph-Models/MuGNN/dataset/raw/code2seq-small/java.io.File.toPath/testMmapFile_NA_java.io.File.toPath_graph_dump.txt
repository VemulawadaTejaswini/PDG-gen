Line_4 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_38 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_2 $$ public void testMmapFile() throws Exception -->Line_8 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ CD ]
Line_3 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_43 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_23 $$ try (FileChannel channel = FileChannel.open(f1.toPath(), StandardOpenOption.WRITE, StandardOpenOption.READ)) -->Line_42 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)[ FD ]
Line_26 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_62 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_5 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_63 $$ Assert.assertEquals("mapped buffers don't work?", Long.valueOf(1L), mmapCount)[ FD ]
Line_38 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_40 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_5 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_25 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_4 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_61 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_25 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_63 $$ Assert.assertEquals("mapped buffers don't work?", Long.valueOf(1L), mmapCount)[ FD ]
Line_25 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_55 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_3 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_6 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_6 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_8 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_2 $$ public void testMmapFile() throws Exception -->Line_11 $$ File f3 = File.createTempFile("MmapFileTest2", ".bin")[ CD ]
Line_6 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_44 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_55 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_75 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_3 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_37 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_24 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_70 $$ buffer.putInt(42)[ FD ]
Line_43 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_55 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_3 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_73 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_10 $$ File f2 = File.createTempFile("MmapFileTest2", ".bin")-->Line_83 $$ f2.delete()[ FD ]
Line_26 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_40 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_38 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_62 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_13 $$ int size = 1024 * 1024-->Line_21 $$ raf.setLength(size)[ FD ]
Line_26 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_56 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_24 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_33 $$ buffer.putInt(42)[ FD ]
Line_24 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_52 $$ buffer.putInt(42)[ FD ]
Line_25 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_57 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_3 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_44 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_4 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_6 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_4 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_55 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_25 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_61 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_55 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_61 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_24 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_31 $$ buffer.putInt(42)[ FD ]
Line_4 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_26 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_3 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_5 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_23 $$ try (FileChannel channel = FileChannel.open(f1.toPath(), StandardOpenOption.WRITE, StandardOpenOption.READ)) -->Line_60 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)[ FD ]
Line_4 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_62 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_14 $$ try (RandomAccessFile raf = new RandomAccessFile(f1, "rw")) -->Line_21 $$ raf.setLength(size)[ FD ]
Line_5 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_75 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_56 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_58 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_4 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_56 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_5 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_27 $$ Assert.assertEquals("mapped buffers don't work?", Long.valueOf(1L), mmapCount)[ FD ]
Line_43 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_73 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_6 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_56 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_11 $$ File f3 = File.createTempFile("MmapFileTest2", ".bin")-->Line_84 $$ f3.delete()[ FD ]
Line_6 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_58 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_24 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_50 $$ buffer.putInt(42)[ FD ]
Line_3 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_38 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_10 $$ File f2 = File.createTempFile("MmapFileTest2", ".bin")-->Line_78 $$ Assert.assertTrue(f2.delete())[ FD ]
Line_10 $$ File f2 = File.createTempFile("MmapFileTest2", ".bin")-->Line_41 $$ try (FileChannel channel = FileChannel.open(f2.toPath(), StandardOpenOption.WRITE, StandardOpenOption.READ)) [ FD ]
Line_4 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_73 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_2 $$ public void testMmapFile() throws Exception -->Line_3 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")[ CD ]
Line_24 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_29 $$ Assert.assertTrue(buffer.isDirect())[ FD ]
Line_37 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_57 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_3 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_61 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_38 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_76 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_61 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_73 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_9 $$ File f1 = File.createTempFile("MmapFileTest1", ".bin")-->Line_82 $$ f1.delete()[ FD ]
Line_24 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_48 $$ buffer.putInt(42)[ FD ]
Line_24 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_49 $$ buffer.putInt(42)[ FD ]
Line_56 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_62 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_13 $$ int size = 1024 * 1024-->Line_60 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)[ FD ]
Line_37 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_55 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_44 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_62 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_73 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_75 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_24 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_67 $$ buffer.putInt(42)[ FD ]
Line_43 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_45 $$ Assert.assertEquals("mapped buffers don't work?", Long.valueOf(1L), mmapCount)[ FD ]
Line_24 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_51 $$ buffer.putInt(42)[ FD ]
Line_3 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_26 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_37 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_39 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_25 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_43 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_3 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_62 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_38 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_58 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_9 $$ File f1 = File.createTempFile("MmapFileTest1", ".bin")-->Line_77 $$ Assert.assertTrue(f1.delete())[ FD ]
Line_55 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_73 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_56 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_76 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_13 $$ int size = 1024 * 1024-->Line_18 $$ raf.setLength(size)[ FD ]
Line_3 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_25 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_5 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_55 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_26 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_58 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_2 $$ public void testMmapFile() throws Exception -->Line_9 $$ File f1 = File.createTempFile("MmapFileTest1", ".bin")[ CD ]
Line_4 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_5 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_62 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_74 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_14 $$ try (RandomAccessFile raf = new RandomAccessFile(f1, "rw")) -->Line_15 $$ raf.setLength(size)[ FD ]
Line_38 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_74 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_37 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_45 $$ Assert.assertEquals("mapped buffers don't work?", Long.valueOf(1L), mmapCount)[ FD ]
Line_25 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_45 $$ Assert.assertEquals("mapped buffers don't work?", Long.valueOf(1L), mmapCount)[ FD ]
Line_24 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_47 $$ Assert.assertTrue(buffer.isDirect())[ FD ]
Line_61 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_75 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_11 $$ File f3 = File.createTempFile("MmapFileTest2", ".bin")-->Line_79 $$ Assert.assertTrue(f3.delete())[ FD ]
Line_5 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_43 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_3 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_55 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_24 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_69 $$ buffer.putInt(42)[ FD ]
Line_6 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_26 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_44 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_56 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_24 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_30 $$ buffer.putInt(42)[ FD ]
Line_6 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_62 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_56 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_74 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_26 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_44 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_24 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_68 $$ buffer.putInt(42)[ FD ]
Line_11 $$ File f3 = File.createTempFile("MmapFileTest2", ".bin")-->Line_59 $$ try (FileChannel channel = FileChannel.open(f3.toPath(), StandardOpenOption.WRITE, StandardOpenOption.READ)) [ FD ]
Line_13 $$ int size = 1024 * 1024-->Line_42 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)[ FD ]
Line_3 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_56 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_25 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_75 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_25 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_73 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_26 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_76 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_62 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_76 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_25 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_39 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_38 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_44 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_55 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_63 $$ Assert.assertEquals("mapped buffers don't work?", Long.valueOf(1L), mmapCount)[ FD ]
Line_6 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_76 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_2 $$ public void testMmapFile() throws Exception -->Line_5 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ CD ]
Line_5 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_73 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_44 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_58 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_26 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_74 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_4 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_43 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_24 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_34 $$ buffer.putInt(42)[ FD ]
Line_4 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_37 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_4 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_44 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_55 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_57 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_13 $$ int size = 1024 * 1024-->Line_24 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)[ FD ]
Line_24 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_32 $$ buffer.putInt(42)[ FD ]
Line_2 $$ public void testMmapFile() throws Exception -->Line_4 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()[ CD ]
Line_26 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_38 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_5 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_39 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_23 $$ try (FileChannel channel = FileChannel.open(f1.toPath(), StandardOpenOption.WRITE, StandardOpenOption.READ)) -->Line_24 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)[ FD ]
Line_6 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_74 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_25 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_27 $$ Assert.assertEquals("mapped buffers don't work?", Long.valueOf(1L), mmapCount)[ FD ]
Line_43 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_57 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_9 $$ File f1 = File.createTempFile("MmapFileTest1", ".bin")-->Line_23 $$ try (FileChannel channel = FileChannel.open(f1.toPath(), StandardOpenOption.WRITE, StandardOpenOption.READ)) [ FD ]
Line_4 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_25 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_37 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_75 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_13 $$ int size = 1024 * 1024-->Line_15 $$ raf.setLength(size)[ FD ]
Line_2 $$ public void testMmapFile() throws Exception -->Line_6 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ CD ]
Line_5 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_37 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_24 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_66 $$ buffer.putInt(42)[ FD ]
Line_43 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_75 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_5 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_57 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_37 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_61 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_5 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_61 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_37 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_73 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_4 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_74 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_5 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_7 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_37 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_43 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_38 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_56 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_37 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_63 $$ Assert.assertEquals("mapped buffers don't work?", Long.valueOf(1L), mmapCount)[ FD ]
Line_43 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_63 $$ Assert.assertEquals("mapped buffers don't work?", Long.valueOf(1L), mmapCount)[ FD ]
Line_43 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_61 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_5 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_45 $$ Assert.assertEquals("mapped buffers don't work?", Long.valueOf(1L), mmapCount)[ FD ]
Line_25 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_37 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_74 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_76 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_44 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_76 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_24 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_65 $$ Assert.assertTrue(buffer.isDirect())[ FD ]
Line_14 $$ try (RandomAccessFile raf = new RandomAccessFile(f1, "rw")) -->Line_18 $$ raf.setLength(size)[ FD ]
Line_6 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_40 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_61 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_63 $$ Assert.assertEquals("mapped buffers don't work?", Long.valueOf(1L), mmapCount)[ FD ]
Line_2 $$ public void testMmapFile() throws Exception -->Line_10 $$ File f2 = File.createTempFile("MmapFileTest2", ".bin")[ CD ]
Line_2 $$ public void testMmapFile() throws Exception -->Line_7 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ CD ]
Line_44 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_74 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_6 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_38 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_3 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_74 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
