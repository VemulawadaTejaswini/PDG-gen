Line_2 $$ private static void verifyChecksum(File directory, HintsDescriptor descriptor) throws IOException -->Line_7 $$ String expectedChecksum = Files.readAllLines(checksumFile.toPath()).iterator().next()[ CD ]
Line_7 $$ String expectedChecksum = Files.readAllLines(checksumFile.toPath()).iterator().next()-->Line_8 $$ assertEquals(expectedChecksum, actualChecksum)[ FD ]
Line_2 $$ private static void verifyChecksum(File directory, HintsDescriptor descriptor) throws IOException -->Line_6 $$ String actualChecksum = Integer.toHexString(calculateChecksum(hintsFile))[ CD ]
Line_6 $$ String actualChecksum = Integer.toHexString(calculateChecksum(hintsFile))-->Line_8 $$ assertEquals(expectedChecksum, actualChecksum)[ FD ]
Line_2 $$ private static void verifyChecksum(File directory, HintsDescriptor descriptor) throws IOException -->Line_4 $$ File checksumFile = new File(directory, descriptor.checksumFileName())[ CD ]
Line_2 $$ private static void verifyChecksum(File directory, HintsDescriptor descriptor) throws IOException -->Line_8 $$ assertEquals(expectedChecksum, actualChecksum)[ CD ]
Line_4 $$ File checksumFile = new File(directory, descriptor.checksumFileName())-->Line_7 $$ String expectedChecksum = Files.readAllLines(checksumFile.toPath()).iterator().next()[ FD ]
Line_3 $$ File hintsFile = new File(directory, descriptor.fileName())-->Line_6 $$ String actualChecksum = Integer.toHexString(calculateChecksum(hintsFile))[ FD ]
Line_4 $$ File checksumFile = new File(directory, descriptor.checksumFileName())-->Line_5 $$ assertTrue(checksumFile.exists())[ FD ]
Line_2 $$ private static void verifyChecksum(File directory, HintsDescriptor descriptor) throws IOException -->Line_3 $$ File hintsFile = new File(directory, descriptor.fileName())[ CD ]
Line_2 $$ private static void verifyChecksum(File directory, HintsDescriptor descriptor) throws IOException -->Line_3 $$ File hintsFile = new File(directory, descriptor.fileName())[ FD ]
Line_2 $$ private static void verifyChecksum(File directory, HintsDescriptor descriptor) throws IOException -->Line_5 $$ assertTrue(checksumFile.exists())[ CD ]
Line_2 $$ private static void verifyChecksum(File directory, HintsDescriptor descriptor) throws IOException -->Line_4 $$ File checksumFile = new File(directory, descriptor.checksumFileName())[ FD ]
