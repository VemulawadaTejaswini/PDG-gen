Line_2 $$ public void testBackupStore() throws Exception -->Line_22 $$ assertTrue(store.shardExists(uuid1))[ CD ]
Line_3 $$ File file1 = new File(temporary, "file1")-->Line_7 $$ store.backupShard(uuid1, file1)[ FD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_13 $$ store.backupShard(uuid2, file2)[ CD ]
Line_18 $$ File restore2 = new File(temporary, "restore2")-->Line_20 $$ assertEquals(readAllBytes(file2.toPath()), readAllBytes(restore2.toPath()))[ FD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_24 $$ store.deleteShard(uuid1)[ CD ]
Line_11 $$ UUID uuid2 = randomUUID()-->Line_27 $$ assertTrue(store.shardExists(uuid2))[ FD ]
Line_11 $$ UUID uuid2 = randomUUID()-->Line_14 $$ assertTrue(store.shardExists(uuid2))[ FD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_9 $$ File file2 = new File(temporary, "file2")[ CD ]
Line_5 $$ UUID uuid1 = randomUUID()-->Line_22 $$ assertTrue(store.shardExists(uuid1))[ FD ]
Line_3 $$ File file1 = new File(temporary, "file1")-->Line_17 $$ assertEquals(readAllBytes(file1.toPath()), readAllBytes(restore1.toPath()))[ FD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_17 $$ assertEquals(readAllBytes(file1.toPath()), readAllBytes(restore1.toPath()))[ CD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_11 $$ UUID uuid2 = randomUUID()[ CD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_15 $$ File restore1 = new File(temporary, "restore1")[ CD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_26 $$ assertFalse(store.shardExists(uuid1))[ CD ]
Line_5 $$ UUID uuid1 = randomUUID()-->Line_25 $$ store.deleteShard(uuid1)[ FD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_21 $$ assertFalse(store.shardExists(randomUUID()))[ CD ]
Line_9 $$ File file2 = new File(temporary, "file2")-->Line_10 $$ Files.write("bye bye", file2, UTF_8)[ FD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_12 $$ assertFalse(store.shardExists(uuid2))[ CD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_10 $$ Files.write("bye bye", file2, UTF_8)[ CD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_7 $$ store.backupShard(uuid1, file1)[ CD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_28 $$ store.deleteShard(randomUUID())[ CD ]
Line_15 $$ File restore1 = new File(temporary, "restore1")-->Line_16 $$ store.restoreShard(uuid1, restore1)[ FD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_20 $$ assertEquals(readAllBytes(file2.toPath()), readAllBytes(restore2.toPath()))[ CD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_8 $$ assertTrue(store.shardExists(uuid1))[ CD ]
Line_11 $$ UUID uuid2 = randomUUID()-->Line_19 $$ store.restoreShard(uuid2, restore2)[ FD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_3 $$ File file1 = new File(temporary, "file1")[ CD ]
Line_18 $$ File restore2 = new File(temporary, "restore2")-->Line_19 $$ store.restoreShard(uuid2, restore2)[ FD ]
Line_11 $$ UUID uuid2 = randomUUID()-->Line_23 $$ assertTrue(store.shardExists(uuid2))[ FD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_16 $$ store.restoreShard(uuid1, restore1)[ CD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_27 $$ assertTrue(store.shardExists(uuid2))[ CD ]
Line_15 $$ File restore1 = new File(temporary, "restore1")-->Line_17 $$ assertEquals(readAllBytes(file1.toPath()), readAllBytes(restore1.toPath()))[ FD ]
Line_5 $$ UUID uuid1 = randomUUID()-->Line_24 $$ store.deleteShard(uuid1)[ FD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_4 $$ Files.write("hello world", file1, UTF_8)[ CD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_23 $$ assertTrue(store.shardExists(uuid2))[ CD ]
Line_5 $$ UUID uuid1 = randomUUID()-->Line_8 $$ assertTrue(store.shardExists(uuid1))[ FD ]
Line_5 $$ UUID uuid1 = randomUUID()-->Line_26 $$ assertFalse(store.shardExists(uuid1))[ FD ]
Line_11 $$ UUID uuid2 = randomUUID()-->Line_12 $$ assertFalse(store.shardExists(uuid2))[ FD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_25 $$ store.deleteShard(uuid1)[ CD ]
Line_9 $$ File file2 = new File(temporary, "file2")-->Line_13 $$ store.backupShard(uuid2, file2)[ FD ]
Line_5 $$ UUID uuid1 = randomUUID()-->Line_7 $$ store.backupShard(uuid1, file1)[ FD ]
Line_11 $$ UUID uuid2 = randomUUID()-->Line_13 $$ store.backupShard(uuid2, file2)[ FD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_6 $$ assertFalse(store.shardExists(uuid1))[ CD ]
Line_5 $$ UUID uuid1 = randomUUID()-->Line_6 $$ assertFalse(store.shardExists(uuid1))[ FD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_18 $$ File restore2 = new File(temporary, "restore2")[ CD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_19 $$ store.restoreShard(uuid2, restore2)[ CD ]
Line_9 $$ File file2 = new File(temporary, "file2")-->Line_20 $$ assertEquals(readAllBytes(file2.toPath()), readAllBytes(restore2.toPath()))[ FD ]
Line_5 $$ UUID uuid1 = randomUUID()-->Line_16 $$ store.restoreShard(uuid1, restore1)[ FD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_14 $$ assertTrue(store.shardExists(uuid2))[ CD ]
Line_2 $$ public void testBackupStore() throws Exception -->Line_5 $$ UUID uuid1 = randomUUID()[ CD ]
Line_3 $$ File file1 = new File(temporary, "file1")-->Line_4 $$ Files.write("hello world", file1, UTF_8)[ FD ]
