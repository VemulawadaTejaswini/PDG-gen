Line_11 $$ File destinationFile = new File(destination)-->Line_34 $$ Files.write(destinationFile.toPath(), content.getBytes(StringPool.UTF8))[ FD ]
Line_2 $$ public static void merge(String source, String destination) throws DocumentException, IOException -->Line_4 $$ SAXReader saxReader = _getSAXReader()[ CD ]
Line_2 $$ public static void merge(String source, String destination) throws DocumentException, IOException -->Line_5 $$ Document document = saxReader.read(sourceFile)[ CD ]
Line_18 $$ String name = serviceElement.attributeValue("name")-->Line_24 $$ servicesMap.put(name, serviceElement)[ FD ]
Line_12 $$ document = saxReader.read(destinationFile)-->Line_13 $$ String oldContent = Dom4jUtil.toString(document)[ FD ]
Line_15 $$ Map<String, Element> servicesMap = new TreeMap()-->Line_24 $$ servicesMap.put(name, serviceElement)[ FD ]
Line_17 $$ for (Element serviceElement : serviceElements) -->Line_25 $$ serviceElement.detach()[ FD ]
Line_14 $$ rootElement = document.getRootElement()-->Line_29 $$ rootElement.add(serviceElement)[ FD ]
Line_17 $$ for (Element serviceElement : serviceElements) -->Line_29 $$ rootElement.add(serviceElement)[ FD ]
Line_5 $$ Document document = saxReader.read(sourceFile)-->Line_31 $$ String content = Dom4jUtil.toString(document)[ FD ]
Line_17 $$ for (Element serviceElement : serviceElements) -->Line_23 $$ String name = serviceElement.attributeValue("name")[ FD ]
Line_17 $$ for (Element serviceElement : serviceElements) -->Line_20 $$ serviceElement.detach()[ FD ]
Line_2 $$ public static void merge(String source, String destination) throws DocumentException, IOException -->Line_31 $$ String content = Dom4jUtil.toString(document)[ CD ]
Line_2 $$ public static void merge(String source, String destination) throws DocumentException, IOException -->Line_14 $$ rootElement = document.getRootElement()[ CD ]
Line_14 $$ rootElement = document.getRootElement()-->Line_16 $$ List<Element> serviceElements = rootElement.elements("service")[ FD ]
Line_5 $$ Document document = saxReader.read(sourceFile)-->Line_14 $$ rootElement = document.getRootElement()[ FD ]
Line_2 $$ public static void merge(String source, String destination) throws DocumentException, IOException -->Line_7 $$ List<Element> sourceServiceElements = rootElement.elements("service")[ CD ]
Line_12 $$ document = saxReader.read(destinationFile)-->Line_14 $$ rootElement = document.getRootElement()[ FD ]
Line_15 $$ Map<String, Element> servicesMap = new TreeMap()-->Line_27 $$ for (Map.Entry<String, Element> entry : servicesMap.entrySet()) [ FD ]
Line_6 $$ Element rootElement = document.getRootElement()-->Line_7 $$ List<Element> sourceServiceElements = rootElement.elements("service")[ FD ]
Line_32 $$ if (!content.equals(oldContent)) -->Line_34 $$ Files.write(destinationFile.toPath(), content.getBytes(StringPool.UTF8))[ CD ]
Line_18 $$ String name = serviceElement.attributeValue("name")-->Line_19 $$ servicesMap.put(name, serviceElement)[ FD ]
Line_2 $$ public static void merge(String source, String destination) throws DocumentException, IOException -->Line_8 $$ if (sourceServiceElements.isEmpty()) [ CD ]
Line_2 $$ public static void merge(String source, String destination) throws DocumentException, IOException -->Line_6 $$ Element rootElement = document.getRootElement()[ CD ]
Line_6 $$ Element rootElement = document.getRootElement()-->Line_14 $$ rootElement = document.getRootElement()[ FD ]
Line_15 $$ Map<String, Element> servicesMap = new TreeMap()-->Line_19 $$ servicesMap.put(name, serviceElement)[ FD ]
Line_2 $$ public static void merge(String source, String destination) throws DocumentException, IOException -->Line_15 $$ Map<String, Element> servicesMap = new TreeMap()[ CD ]
Line_17 $$ for (Element serviceElement : serviceElements) -->Line_24 $$ servicesMap.put(name, serviceElement)[ FD ]
Line_32 $$ if (!content.equals(oldContent)) -->Line_33 $$ content = StringUtil.replace(content, "\"/>", "\" />")[ CD ]
Line_5 $$ Document document = saxReader.read(sourceFile)-->Line_6 $$ Element rootElement = document.getRootElement()[ FD ]
Line_2 $$ public static void merge(String source, String destination) throws DocumentException, IOException -->Line_13 $$ String oldContent = Dom4jUtil.toString(document)[ CD ]
Line_13 $$ String oldContent = Dom4jUtil.toString(document)-->Line_32 $$ if (!content.equals(oldContent)) [ FD ]
Line_8 $$ if (sourceServiceElements.isEmpty()) -->Line_9 $$ return[ CD ]
Line_31 $$ String content = Dom4jUtil.toString(document)-->Line_33 $$ content = StringUtil.replace(content, "\"/>", "\" />")[ FD ]
Line_4 $$ SAXReader saxReader = _getSAXReader()-->Line_12 $$ document = saxReader.read(destinationFile)[ FD ]
Line_2 $$ public static void merge(String source, String destination) throws DocumentException, IOException -->Line_11 $$ File destinationFile = new File(destination)[ CD ]
Line_31 $$ String content = Dom4jUtil.toString(document)-->Line_32 $$ if (!content.equals(oldContent)) [ FD ]
Line_5 $$ Document document = saxReader.read(sourceFile)-->Line_13 $$ String oldContent = Dom4jUtil.toString(document)[ FD ]
Line_5 $$ Document document = saxReader.read(sourceFile)-->Line_12 $$ document = saxReader.read(destinationFile)[ FD ]
Line_3 $$ File sourceFile = new File(source)-->Line_5 $$ Document document = saxReader.read(sourceFile)[ FD ]
Line_2 $$ public static void merge(String source, String destination) throws DocumentException, IOException -->Line_3 $$ File sourceFile = new File(source)[ CD ]
Line_17 $$ for (Element serviceElement : serviceElements) -->Line_18 $$ String name = serviceElement.attributeValue("name")[ FD ]
Line_2 $$ public static void merge(String source, String destination) throws DocumentException, IOException -->Line_12 $$ document = saxReader.read(destinationFile)[ CD ]
Line_6 $$ Element rootElement = document.getRootElement()-->Line_16 $$ List<Element> serviceElements = rootElement.elements("service")[ FD ]
Line_2 $$ public static void merge(String source, String destination) throws DocumentException, IOException -->Line_32 $$ if (!content.equals(oldContent)) [ CD ]
Line_4 $$ SAXReader saxReader = _getSAXReader()-->Line_5 $$ Document document = saxReader.read(sourceFile)[ FD ]
Line_17 $$ for (Element serviceElement : serviceElements) -->Line_19 $$ servicesMap.put(name, serviceElement)[ FD ]
Line_2 $$ public static void merge(String source, String destination) throws DocumentException, IOException -->Line_16 $$ List<Element> serviceElements = rootElement.elements("service")[ CD ]
Line_27 $$ for (Map.Entry<String, Element> entry : servicesMap.entrySet()) -->Line_28 $$ Element serviceElement = entry.getValue()[ FD ]
Line_6 $$ Element rootElement = document.getRootElement()-->Line_29 $$ rootElement.add(serviceElement)[ FD ]
Line_12 $$ document = saxReader.read(destinationFile)-->Line_31 $$ String content = Dom4jUtil.toString(document)[ FD ]
Line_33 $$ content = StringUtil.replace(content, "\"/>", "\" />")-->Line_34 $$ Files.write(destinationFile.toPath(), content.getBytes(StringPool.UTF8))[ FD ]
Line_31 $$ String content = Dom4jUtil.toString(document)-->Line_34 $$ Files.write(destinationFile.toPath(), content.getBytes(StringPool.UTF8))[ FD ]
Line_11 $$ File destinationFile = new File(destination)-->Line_12 $$ document = saxReader.read(destinationFile)[ FD ]
Line_7 $$ List<Element> sourceServiceElements = rootElement.elements("service")-->Line_8 $$ if (sourceServiceElements.isEmpty()) [ FD ]
