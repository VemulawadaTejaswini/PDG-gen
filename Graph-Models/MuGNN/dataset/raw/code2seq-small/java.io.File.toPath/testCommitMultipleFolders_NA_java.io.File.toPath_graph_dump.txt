Line_2 $$ public void testCommitMultipleFolders() throws Throwable -->Line_3 $$ ColumnFamilyStore cfs = MockSchema.newCFS(KEYSPACE)[ CD ]
Line_9 $$ SSTableReader[] sstables = -->Line_18 $$ Arrays.stream(sstables).forEach( s -> s.selfRef().release())[ FD ]
Line_6 $$ File dataFolder2 = new File(origiFolder, "2")-->Line_8 $$ Files.createDirectories(dataFolder2.toPath())[ FD ]
Line_2 $$ public void testCommitMultipleFolders() throws Throwable -->Line_9 $$ SSTableReader[] sstables = [ CD ]
Line_5 $$ File dataFolder1 = new File(origiFolder, "1")-->Line_7 $$ Files.createDirectories(dataFolder1.toPath())[ FD ]
Line_2 $$ public void testCommitMultipleFolders() throws Throwable -->Line_13 $$ log.trackNew(sstables[1])[ CD ]
Line_2 $$ public void testCommitMultipleFolders() throws Throwable -->Line_7 $$ Files.createDirectories(dataFolder1.toPath())[ CD ]
Line_2 $$ public void testCommitMultipleFolders() throws Throwable -->Line_6 $$ File dataFolder2 = new File(origiFolder, "2")[ CD ]
Line_10 $$ LogTransaction log = new LogTransaction(OperationType.COMPACTION)-->Line_15 $$ log.finish()[ FD ]
Line_2 $$ public void testCommitMultipleFolders() throws Throwable -->Line_14 $$ log.trackNew(sstables[3])[ CD ]
Line_2 $$ public void testCommitMultipleFolders() throws Throwable -->Line_17 $$ sstables[2].markObsolete(tidiers[1])[ CD ]
Line_2 $$ public void testCommitMultipleFolders() throws Throwable -->Line_15 $$ log.finish()[ CD ]
Line_2 $$ public void testCommitMultipleFolders() throws Throwable -->Line_4 $$ File origiFolder = new Directories(cfs.metadata).getDirectoryForNewSSTables()[ CD ]
Line_6 $$ File dataFolder2 = new File(origiFolder, "2")-->Line_21 $$ assertFiles(dataFolder2.getPath(), new HashSet(sstables[3].getAllFilePaths()))[ FD ]
Line_3 $$ ColumnFamilyStore cfs = MockSchema.newCFS(KEYSPACE)-->Line_9 $$ SSTableReader[] sstables = [ FD ]
Line_6 $$ File dataFolder2 = new File(origiFolder, "2")-->Line_9 $$ SSTableReader[] sstables = [ FD ]
Line_2 $$ public void testCommitMultipleFolders() throws Throwable -->Line_16 $$ sstables[0].markObsolete(tidiers[0])[ CD ]
Line_10 $$ LogTransaction log = new LogTransaction(OperationType.COMPACTION)-->Line_11 $$ assertNotNull(log)[ FD ]
Line_5 $$ File dataFolder1 = new File(origiFolder, "1")-->Line_20 $$ assertFiles(dataFolder1.getPath(), new HashSet(sstables[1].getAllFilePaths()))[ FD ]
Line_2 $$ public void testCommitMultipleFolders() throws Throwable -->Line_19 $$ LogTransaction.waitForDeletions()[ CD ]
Line_10 $$ LogTransaction log = new LogTransaction(OperationType.COMPACTION)-->Line_12 $$ LogTransaction.SSTableTidier[] tidiers = [ FD ]
Line_2 $$ public void testCommitMultipleFolders() throws Throwable -->Line_12 $$ LogTransaction.SSTableTidier[] tidiers = [ CD ]
Line_2 $$ public void testCommitMultipleFolders() throws Throwable -->Line_11 $$ assertNotNull(log)[ CD ]
Line_10 $$ LogTransaction log = new LogTransaction(OperationType.COMPACTION)-->Line_13 $$ log.trackNew(sstables[1])[ FD ]
Line_5 $$ File dataFolder1 = new File(origiFolder, "1")-->Line_9 $$ SSTableReader[] sstables = [ FD ]
Line_2 $$ public void testCommitMultipleFolders() throws Throwable -->Line_8 $$ Files.createDirectories(dataFolder2.toPath())[ CD ]
Line_10 $$ LogTransaction log = new LogTransaction(OperationType.COMPACTION)-->Line_14 $$ log.trackNew(sstables[3])[ FD ]
Line_2 $$ public void testCommitMultipleFolders() throws Throwable -->Line_10 $$ LogTransaction log = new LogTransaction(OperationType.COMPACTION)[ CD ]
Line_2 $$ public void testCommitMultipleFolders() throws Throwable -->Line_21 $$ assertFiles(dataFolder2.getPath(), new HashSet(sstables[3].getAllFilePaths()))[ CD ]
Line_2 $$ public void testCommitMultipleFolders() throws Throwable -->Line_5 $$ File dataFolder1 = new File(origiFolder, "1")[ CD ]
Line_2 $$ public void testCommitMultipleFolders() throws Throwable -->Line_20 $$ assertFiles(dataFolder1.getPath(), new HashSet(sstables[1].getAllFilePaths()))[ CD ]
Line_2 $$ public void testCommitMultipleFolders() throws Throwable -->Line_18 $$ Arrays.stream(sstables).forEach( s -> s.selfRef().release())[ CD ]
