Line_24 $$ String sourceMapContent = new String(Files.readAllBytes(sourceMapFile.toPath()))-->Line_25 $$ sourceMapContent = sourceMapContent.replaceAll("tmp\\.scss", fileName)[ FD ]
Line_14 $$ String outputFileName = getOutputFileName(fileName)-->Line_26 $$ sourceMapContent = sourceMapContent.replaceAll("tmp\\.css", outputFileName)[ FD ]
Line_2 $$ public String compileString(String input, String inputFileName, String includeDirName, boolean generateSourceMap, String sourceMapFileName) throws JniSassCompilerException -->Line_12 $$ String dirName = inputFileName.substring(0, index)[ FD ]
Line_8 $$ generateSourceMap = false-->Line_21 $$ String output = compileFile(tempFile.getCanonicalPath(), includeDirName, generateSourceMap, sourceMapFileName)[ FD ]
Line_26 $$ sourceMapContent = sourceMapContent.replaceAll("tmp\\.css", outputFileName)-->Line_27 $$ write(sourceMapFile, sourceMapContent)[ FD ]
Line_5 $$ inputFileName = _tmpDirName + "tmp.scss"-->Line_12 $$ String dirName = inputFileName.substring(0, index)[ FD ]
Line_5 $$ inputFileName = _tmpDirName + "tmp.scss"-->Line_11 $$ int index = inputFileName.lastIndexOf("/") + 1[ FD ]
Line_25 $$ sourceMapContent = sourceMapContent.replaceAll("tmp\\.scss", fileName)-->Line_26 $$ sourceMapContent = sourceMapContent.replaceAll("tmp\\.css", outputFileName)[ FD ]
Line_2 $$ public String compileString(String input, String inputFileName, String includeDirName, boolean generateSourceMap, String sourceMapFileName) throws JniSassCompilerException -->Line_8 $$ generateSourceMap = false[ FD ]
Line_23 $$ File sourceMapFile = new File(sourceMapFileName)-->Line_24 $$ String sourceMapContent = new String(Files.readAllBytes(sourceMapFile.toPath()))[ FD ]
Line_22 $$ if (generateSourceMap) -->Line_25 $$ sourceMapContent = sourceMapContent.replaceAll("tmp\\.scss", fileName)[ CD ]
Line_6 $$ if (generateSourceMap) -->Line_8 $$ generateSourceMap = false[ CD ]
Line_2 $$ public String compileString(String input, String inputFileName, String includeDirName, boolean generateSourceMap, String sourceMapFileName) throws JniSassCompilerException -->Line_16 $$ sourceMapFileName = dirName + outputFileName + ".map"[ FD ]
Line_22 $$ if (generateSourceMap) -->Line_26 $$ sourceMapContent = sourceMapContent.replaceAll("tmp\\.css", outputFileName)[ CD ]
Line_16 $$ sourceMapFileName = dirName + outputFileName + ".map"-->Line_21 $$ String output = compileFile(tempFile.getCanonicalPath(), includeDirName, generateSourceMap, sourceMapFileName)[ FD ]
Line_2 $$ public String compileString(String input, String inputFileName, String includeDirName, boolean generateSourceMap, String sourceMapFileName) throws JniSassCompilerException -->Line_4 $$ if ((inputFileName == null) || inputFileName.equals("")) [ FD ]
Line_6 $$ if (generateSourceMap) -->Line_7 $$ System.out.println("Source maps require a valid file name")[ CD ]
Line_13 $$ String fileName = inputFileName.substring(index)-->Line_25 $$ sourceMapContent = sourceMapContent.replaceAll("tmp\\.scss", fileName)[ FD ]
Line_18 $$ File tempFile = new File(dirName, "tmp.scss")-->Line_21 $$ String output = compileFile(tempFile.getCanonicalPath(), includeDirName, generateSourceMap, sourceMapFileName)[ FD ]
Line_22 $$ if (generateSourceMap) -->Line_23 $$ File sourceMapFile = new File(sourceMapFileName)[ CD ]
Line_24 $$ String sourceMapContent = new String(Files.readAllBytes(sourceMapFile.toPath()))-->Line_27 $$ write(sourceMapFile, sourceMapContent)[ FD ]
Line_22 $$ if (generateSourceMap) -->Line_24 $$ String sourceMapContent = new String(Files.readAllBytes(sourceMapFile.toPath()))[ CD ]
Line_2 $$ public String compileString(String input, String inputFileName, String includeDirName, boolean generateSourceMap, String sourceMapFileName) throws JniSassCompilerException -->Line_5 $$ inputFileName = _tmpDirName + "tmp.scss"[ FD ]
Line_23 $$ File sourceMapFile = new File(sourceMapFileName)-->Line_27 $$ write(sourceMapFile, sourceMapContent)[ FD ]
Line_4 $$ if ((inputFileName == null) || inputFileName.equals("")) -->Line_6 $$ if (generateSourceMap) [ CD ]
Line_18 $$ File tempFile = new File(dirName, "tmp.scss")-->Line_20 $$ write(tempFile, input)[ FD ]
Line_2 $$ public String compileString(String input, String inputFileName, String includeDirName, boolean generateSourceMap, String sourceMapFileName) throws JniSassCompilerException -->Line_21 $$ String output = compileFile(tempFile.getCanonicalPath(), includeDirName, generateSourceMap, sourceMapFileName)[ FD ]
Line_5 $$ inputFileName = _tmpDirName + "tmp.scss"-->Line_13 $$ String fileName = inputFileName.substring(index)[ FD ]
Line_22 $$ if (generateSourceMap) -->Line_27 $$ write(sourceMapFile, sourceMapContent)[ CD ]
Line_11 $$ int index = inputFileName.lastIndexOf("/") + 1-->Line_12 $$ String dirName = inputFileName.substring(0, index)[ FD ]
Line_2 $$ public String compileString(String input, String inputFileName, String includeDirName, boolean generateSourceMap, String sourceMapFileName) throws JniSassCompilerException -->Line_15 $$ if ((sourceMapFileName == null) || sourceMapFileName.equals("")) [ FD ]
Line_15 $$ if ((sourceMapFileName == null) || sourceMapFileName.equals("")) -->Line_16 $$ sourceMapFileName = dirName + outputFileName + ".map"[ CD ]
Line_2 $$ public String compileString(String input, String inputFileName, String includeDirName, boolean generateSourceMap, String sourceMapFileName) throws JniSassCompilerException -->Line_11 $$ int index = inputFileName.lastIndexOf("/") + 1[ FD ]
Line_13 $$ String fileName = inputFileName.substring(index)-->Line_14 $$ String outputFileName = getOutputFileName(fileName)[ FD ]
Line_18 $$ File tempFile = new File(dirName, "tmp.scss")-->Line_19 $$ tempFile.deleteOnExit()[ FD ]
Line_4 $$ if ((inputFileName == null) || inputFileName.equals("")) -->Line_5 $$ inputFileName = _tmpDirName + "tmp.scss"[ CD ]
Line_2 $$ public String compileString(String input, String inputFileName, String includeDirName, boolean generateSourceMap, String sourceMapFileName) throws JniSassCompilerException -->Line_13 $$ String fileName = inputFileName.substring(index)[ FD ]
Line_11 $$ int index = inputFileName.lastIndexOf("/") + 1-->Line_13 $$ String fileName = inputFileName.substring(index)[ FD ]
Line_25 $$ sourceMapContent = sourceMapContent.replaceAll("tmp\\.scss", fileName)-->Line_27 $$ write(sourceMapFile, sourceMapContent)[ FD ]
Line_24 $$ String sourceMapContent = new String(Files.readAllBytes(sourceMapFile.toPath()))-->Line_26 $$ sourceMapContent = sourceMapContent.replaceAll("tmp\\.css", outputFileName)[ FD ]
Line_2 $$ public String compileString(String input, String inputFileName, String includeDirName, boolean generateSourceMap, String sourceMapFileName) throws JniSassCompilerException -->Line_20 $$ write(tempFile, input)[ FD ]
