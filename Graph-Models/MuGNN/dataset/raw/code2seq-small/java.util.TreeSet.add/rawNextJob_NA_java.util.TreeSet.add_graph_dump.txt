Line_14 $$ int thisJobNeedsSkew = 0-->Line_20 $$ maxSkewBufferNeeded = Math.max(maxSkewBufferNeeded, thisJobNeedsSkew)[ FD ]
Line_16 $$ while (endCursor.hasNext() && (keyNeedingSkew = endCursor.next()) > thisTime) -->Line_18 $$ thisJobNeedsSkew += keyNeedsSkewAmount == null ? 1 : keyNeedsSkewAmount[ CD ]
Line_16 $$ while (endCursor.hasNext() && (keyNeedingSkew = endCursor.next()) > thisTime) -->Line_17 $$ Integer keyNeedsSkewAmount = countedRepeatedSubmitTimesSoFar.get(keyNeedingSkew)[ FD ]
Line_5 $$ long thisTime = result.getSubmitTime()-->Line_7 $$ Integer myCount = countedRepeatedSubmitTimesSoFar.get(thisTime)[ FD ]
Line_12 $$ if (thisTime < skewMeasurementLatestSubmitTime) -->Line_15 $$ Long keyNeedingSkew[ CD ]
Line_14 $$ int thisJobNeedsSkew = 0-->Line_18 $$ thisJobNeedsSkew += keyNeedsSkewAmount == null ? 1 : keyNeedsSkewAmount[ FD ]
Line_6 $$ if (submitTimesSoFar.contains(thisTime)) -->Line_8 $$ countedRepeatedSubmitTimesSoFar.put(thisTime, myCount == null ? 2 : myCount + 1)[ CD ]
Line_16 $$ while (endCursor.hasNext() && (keyNeedingSkew = endCursor.next()) > thisTime) -->Line_17 $$ Integer keyNeedsSkewAmount = countedRepeatedSubmitTimesSoFar.get(keyNeedingSkew)[ CD ]
Line_3 $$ LoggedJob result = reader.getNext()-->Line_5 $$ long thisTime = result.getSubmitTime()[ FD ]
Line_4 $$ if ((!abortOnUnfixableSkew || skewBufferLength > 0) && result != null) -->Line_12 $$ if (thisTime < skewMeasurementLatestSubmitTime) [ CD ]
Line_15 $$ Long keyNeedingSkew-->Line_17 $$ Integer keyNeedsSkewAmount = countedRepeatedSubmitTimesSoFar.get(keyNeedingSkew)[ FD ]
Line_6 $$ if (submitTimesSoFar.contains(thisTime)) -->Line_7 $$ Integer myCount = countedRepeatedSubmitTimesSoFar.get(thisTime)[ CD ]
Line_4 $$ if ((!abortOnUnfixableSkew || skewBufferLength > 0) && result != null) -->Line_6 $$ if (submitTimesSoFar.contains(thisTime)) [ CD ]
Line_5 $$ long thisTime = result.getSubmitTime()-->Line_22 $$ skewMeasurementLatestSubmitTime = Math.max(thisTime, skewMeasurementLatestSubmitTime)[ FD ]
Line_5 $$ long thisTime = result.getSubmitTime()-->Line_6 $$ if (submitTimesSoFar.contains(thisTime)) [ FD ]
Line_12 $$ if (thisTime < skewMeasurementLatestSubmitTime) -->Line_20 $$ maxSkewBufferNeeded = Math.max(maxSkewBufferNeeded, thisJobNeedsSkew)[ CD ]
Line_13 $$ Iterator<Long> endCursor = submitTimesSoFar.descendingIterator()-->Line_16 $$ while (endCursor.hasNext() && (keyNeedingSkew = endCursor.next()) > thisTime) [ FD ]
Line_18 $$ thisJobNeedsSkew += keyNeedsSkewAmount == null ? 1 : keyNeedsSkewAmount-->Line_20 $$ maxSkewBufferNeeded = Math.max(maxSkewBufferNeeded, thisJobNeedsSkew)[ FD ]
Line_4 $$ if ((!abortOnUnfixableSkew || skewBufferLength > 0) && result != null) -->Line_22 $$ skewMeasurementLatestSubmitTime = Math.max(thisTime, skewMeasurementLatestSubmitTime)[ CD ]
Line_12 $$ if (thisTime < skewMeasurementLatestSubmitTime) -->Line_14 $$ int thisJobNeedsSkew = 0[ CD ]
Line_5 $$ long thisTime = result.getSubmitTime()-->Line_8 $$ countedRepeatedSubmitTimesSoFar.put(thisTime, myCount == null ? 2 : myCount + 1)[ FD ]
Line_12 $$ if (thisTime < skewMeasurementLatestSubmitTime) -->Line_13 $$ Iterator<Long> endCursor = submitTimesSoFar.descendingIterator()[ CD ]
Line_4 $$ if ((!abortOnUnfixableSkew || skewBufferLength > 0) && result != null) -->Line_5 $$ long thisTime = result.getSubmitTime()[ CD ]
Line_2 $$ private LoggedJob rawNextJob() throws IOException -->Line_3 $$ LoggedJob result = reader.getNext()[ CD ]
Line_2 $$ private LoggedJob rawNextJob() throws IOException -->Line_24 $$ return result[ CD ]
Line_2 $$ private LoggedJob rawNextJob() throws IOException -->Line_4 $$ if ((!abortOnUnfixableSkew || skewBufferLength > 0) && result != null) [ CD ]
Line_15 $$ Long keyNeedingSkew-->Line_16 $$ while (endCursor.hasNext() && (keyNeedingSkew = endCursor.next()) > thisTime) [ FD ]
Line_5 $$ long thisTime = result.getSubmitTime()-->Line_10 $$ submitTimesSoFar.add(thisTime)[ FD ]
Line_6 $$ if (submitTimesSoFar.contains(thisTime)) -->Line_10 $$ submitTimesSoFar.add(thisTime)[ CD ]
Line_5 $$ long thisTime = result.getSubmitTime()-->Line_12 $$ if (thisTime < skewMeasurementLatestSubmitTime) [ FD ]
Line_12 $$ if (thisTime < skewMeasurementLatestSubmitTime) -->Line_16 $$ while (endCursor.hasNext() && (keyNeedingSkew = endCursor.next()) > thisTime) [ CD ]
