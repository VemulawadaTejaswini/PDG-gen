Line_5 $$ for (int i = 0; i < 128; i++) -->Line_7 $$ log("Testing " + id)[ CD ]
Line_5 $$ for (int i = 0; i < 128; i++) -->Line_6 $$ String id = String.format("[0..%d)", canon.size())[ CD ]
Line_6 $$ String id = String.format("[0..%d)", canon.size())-->Line_8 $$ Futures.allAsList(testAllSlices(id, cur, canon)).get()[ FD ]
Line_5 $$ for (int i = 0; i < 128; i++) -->Line_11 $$ cur = next[ CD ]
Line_3 $$ Object[] cur = BTree.empty()-->Line_11 $$ cur = next[ FD ]
Line_5 $$ for (int i = 0; i < 128; i++) -->Line_12 $$ canon.add(i)[ FD ]
Line_3 $$ Object[] cur = BTree.empty()-->Line_10 $$ next = BTree.update(cur, naturalOrder(), Arrays.asList(i), SPORADIC_ABORT)[ FD ]
Line_9 $$ Object[] next = null-->Line_11 $$ cur = next[ FD ]
Line_4 $$ TreeSet<Integer> canon = new TreeSet()-->Line_12 $$ canon.add(i)[ FD ]
Line_10 $$ next = BTree.update(cur, naturalOrder(), Arrays.asList(i), SPORADIC_ABORT)-->Line_11 $$ cur = next[ FD ]
Line_3 $$ Object[] cur = BTree.empty()-->Line_8 $$ Futures.allAsList(testAllSlices(id, cur, canon)).get()[ FD ]
Line_9 $$ Object[] next = null-->Line_10 $$ next = BTree.update(cur, naturalOrder(), Arrays.asList(i), SPORADIC_ABORT)[ FD ]
Line_4 $$ TreeSet<Integer> canon = new TreeSet()-->Line_6 $$ String id = String.format("[0..%d)", canon.size())[ FD ]
Line_9 $$ Object[] next = null-->Line_10 $$ while (next == null) next = BTree.update(cur, naturalOrder(), Arrays.asList(i), SPORADIC_ABORT)[ FD ]
Line_5 $$ for (int i = 0; i < 128; i++) -->Line_9 $$ Object[] next = null[ CD ]
Line_5 $$ for (int i = 0; i < 128; i++) -->Line_10 $$ next = BTree.update(cur, naturalOrder(), Arrays.asList(i), SPORADIC_ABORT)[ FD ]
Line_2 $$ public void testSlicingAllSmallTrees() throws ExecutionException, InterruptedException -->Line_5 $$ for (int i = 0; i < 128; i++) [ CD ]
Line_5 $$ for (int i = 0; i < 128; i++) -->Line_8 $$ Futures.allAsList(testAllSlices(id, cur, canon)).get()[ CD ]
Line_2 $$ public void testSlicingAllSmallTrees() throws ExecutionException, InterruptedException -->Line_3 $$ Object[] cur = BTree.empty()[ CD ]
Line_5 $$ for (int i = 0; i < 128; i++) -->Line_12 $$ canon.add(i)[ CD ]
Line_4 $$ TreeSet<Integer> canon = new TreeSet()-->Line_8 $$ Futures.allAsList(testAllSlices(id, cur, canon)).get()[ FD ]
Line_11 $$ cur = next-->Line_8 $$ Futures.allAsList(testAllSlices(id, cur, canon)).get()[ FD ]
Line_2 $$ public void testSlicingAllSmallTrees() throws ExecutionException, InterruptedException -->Line_4 $$ TreeSet<Integer> canon = new TreeSet()[ CD ]
Line_5 $$ for (int i = 0; i < 128; i++) -->Line_10 $$ while (next == null) next = BTree.update(cur, naturalOrder(), Arrays.asList(i), SPORADIC_ABORT)[ CD ]
