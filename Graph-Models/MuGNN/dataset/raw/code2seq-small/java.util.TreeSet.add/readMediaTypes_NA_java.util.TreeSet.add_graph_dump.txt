Line_15 $$ if (split.length > 1) -->Line_16 $$ result.add(!split[1].isEmpty() ? split[1] : withCategory(category, split[0]))[ CD ]
Line_2 $$ private static void readMediaTypes(TreeSet<String> result, final String category) -->Line_4 $$ String csv = ""[ CD ]
Line_11 $$ for (String line : lines) -->Line_14 $$ final String[] split = line.split(",")[ FD ]
Line_4 $$ String csv = ""-->Line_6 $$ csv = stream != null ? FileUtil.loadTextAndClose(stream) : ""[ FD ]
Line_4 $$ String csv = ""-->Line_10 $$ final String[] lines = StringUtil.splitByLines(csv)[ FD ]
Line_2 $$ private static void readMediaTypes(TreeSet<String> result, final String category) -->Line_3 $$ final InputStream stream = MimeTypeDictionary.class.getResourceAsStream("mimeTypes/" + category + ".csv")[ CD ]
Line_2 $$ private static void readMediaTypes(TreeSet<String> result, final String category) -->Line_10 $$ final String[] lines = StringUtil.splitByLines(csv)[ CD ]
Line_2 $$ private static void readMediaTypes(TreeSet<String> result, final String category) -->Line_16 $$ result.add(!split[1].isEmpty() ? split[1] : withCategory(category, split[0]))[ FD ]
Line_11 $$ for (String line : lines) -->Line_12 $$ if (line == lines[0])[ FD ]
Line_6 $$ csv = stream != null ? FileUtil.loadTextAndClose(stream) : ""-->Line_10 $$ final String[] lines = StringUtil.splitByLines(csv)[ FD ]
Line_3 $$ final InputStream stream = MimeTypeDictionary.class.getResourceAsStream("mimeTypes/" + category + ".csv")-->Line_6 $$ csv = stream != null ? FileUtil.loadTextAndClose(stream) : ""[ FD ]
