Line_6 $$ StoredProcedureExceptionTranslator sproc = new StoredProcedureExceptionTranslator(dataSource)-->Line_8 $$ sproc.execute()[ FD ]
Line_2 $$ public void testStoredProcedureExceptionTranslator() throws Exception -->Line_4 $$ given(callableStatement.execute()).willThrow(sqlException)[ CD ]
Line_2 $$ public void testStoredProcedureExceptionTranslator() throws Exception -->Line_6 $$ StoredProcedureExceptionTranslator sproc = new StoredProcedureExceptionTranslator(dataSource)[ CD ]
Line_2 $$ public void testStoredProcedureExceptionTranslator() throws Exception -->Line_7 $$ thrown.expect(CustomDataException.class)[ CD ]
Line_2 $$ public void testStoredProcedureExceptionTranslator() throws Exception -->Line_5 $$ given(connection.prepareCall("[ CD ]
Line_3 $$ SQLException sqlException = new SQLException("Syntax error or access violation exception", "42000")-->Line_4 $$ given(callableStatement.execute()).willThrow(sqlException)[ FD ]
Line_2 $$ public void testStoredProcedureExceptionTranslator() throws Exception -->Line_8 $$ sproc.execute()[ CD ]
Line_2 $$ public void testStoredProcedureExceptionTranslator() throws Exception -->Line_3 $$ SQLException sqlException = new SQLException("Syntax error or access violation exception", "42000")[ CD ]
