Line_2 $$ public void testStoredProcedureSkippingResultsProcessing() throws Exception -->Line_7 $$ jdbcTemplate.setSkipResultsProcessing(true)[ CD ]
Line_2 $$ public void testStoredProcedureSkippingResultsProcessing() throws Exception -->Line_3 $$ given(callableStatement.execute()).willReturn(true)[ CD ]
Line_2 $$ public void testStoredProcedureSkippingResultsProcessing() throws Exception -->Line_4 $$ given(callableStatement.getUpdateCount()).willReturn(-1)[ CD ]
Line_2 $$ public void testStoredProcedureSkippingResultsProcessing() throws Exception -->Line_9 $$ Map<String, Object> res = sproc.execute()[ CD ]
Line_2 $$ public void testStoredProcedureSkippingResultsProcessing() throws Exception -->Line_6 $$ JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource)[ CD ]
Line_9 $$ Map<String, Object> res = sproc.execute()-->Line_10 $$ assertEquals("incorrect number of returns", 0, res.size())[ FD ]
Line_2 $$ public void testStoredProcedureSkippingResultsProcessing() throws Exception -->Line_8 $$ StoredProcedureWithResultSetMapped sproc = new StoredProcedureWithResultSetMapped(jdbcTemplate)[ CD ]
Line_6 $$ JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource)-->Line_7 $$ jdbcTemplate.setSkipResultsProcessing(true)[ FD ]
Line_2 $$ public void testStoredProcedureSkippingResultsProcessing() throws Exception -->Line_5 $$ given(connection.prepareCall("[ CD ]
Line_8 $$ StoredProcedureWithResultSetMapped sproc = new StoredProcedureWithResultSetMapped(jdbcTemplate)-->Line_9 $$ Map<String, Object> res = sproc.execute()[ FD ]
Line_2 $$ public void testStoredProcedureSkippingResultsProcessing() throws Exception -->Line_10 $$ assertEquals("incorrect number of returns", 0, res.size())[ CD ]
