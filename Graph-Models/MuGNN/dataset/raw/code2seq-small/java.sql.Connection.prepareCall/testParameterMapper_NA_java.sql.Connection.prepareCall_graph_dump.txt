Line_2 $$ public void testParameterMapper() throws Exception -->Line_5 $$ given(callableStatement.getObject(2)).willReturn("OK")[ CD ]
Line_8 $$ Map<String, Object> out = pmsp.executeTest()-->Line_9 $$ assertEquals("OK", out.get("out"))[ FD ]
Line_2 $$ public void testParameterMapper() throws Exception -->Line_3 $$ given(callableStatement.execute()).willReturn(false)[ CD ]
Line_2 $$ public void testParameterMapper() throws Exception -->Line_11 $$ verify(callableStatement).registerOutParameter(2, Types.VARCHAR)[ CD ]
Line_2 $$ public void testParameterMapper() throws Exception -->Line_8 $$ Map<String, Object> out = pmsp.executeTest()[ CD ]
Line_7 $$ ParameterMapperStoredProcedure pmsp = new ParameterMapperStoredProcedure(dataSource)-->Line_8 $$ Map<String, Object> out = pmsp.executeTest()[ FD ]
Line_2 $$ public void testParameterMapper() throws Exception -->Line_6 $$ given(connection.prepareCall("[ CD ]
Line_2 $$ public void testParameterMapper() throws Exception -->Line_4 $$ given(callableStatement.getUpdateCount()).willReturn(-1)[ CD ]
Line_2 $$ public void testParameterMapper() throws Exception -->Line_10 $$ verify(callableStatement).setString(eq(1), startsWith("Mock for Connection"))[ CD ]
Line_2 $$ public void testParameterMapper() throws Exception -->Line_7 $$ ParameterMapperStoredProcedure pmsp = new ParameterMapperStoredProcedure(dataSource)[ CD ]
Line_2 $$ public void testParameterMapper() throws Exception -->Line_9 $$ assertEquals("OK", out.get("out"))[ CD ]
