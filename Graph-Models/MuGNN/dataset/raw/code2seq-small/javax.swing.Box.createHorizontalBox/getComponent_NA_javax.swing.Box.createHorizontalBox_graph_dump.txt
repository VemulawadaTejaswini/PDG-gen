Line_2 $$ public JComponent getComponent() -->Line_10 $$ gr.add(myRbShmem)[ CD ]
Line_2 $$ public JComponent getComponent() -->Line_11 $$ final Box box = Box.createHorizontalBox()[ CD ]
Line_14 $$ final JPanel transportPanel = new JPanel(new BorderLayout())-->Line_16 $$ transportPanel.add(box, BorderLayout.CENTER)[ FD ]
Line_17 $$ VerticalBox panel = new VerticalBox()-->Line_21 $$ panel.add(myCbDisableJIT)[ FD ]
Line_2 $$ public JComponent getComponent() -->Line_22 $$ panel.add(myCbShowAlternativeSource)[ CD ]
Line_14 $$ final JPanel transportPanel = new JPanel(new BorderLayout())-->Line_19 $$ panel.add(transportPanel)[ FD ]
Line_11 $$ final Box box = Box.createHorizontalBox()-->Line_16 $$ transportPanel.add(box, BorderLayout.CENTER)[ FD ]
Line_2 $$ public JComponent getComponent() -->Line_9 $$ gr.add(myRbSocket)[ CD ]
Line_2 $$ public JComponent getComponent() -->Line_21 $$ panel.add(myCbDisableJIT)[ CD ]
Line_2 $$ public JComponent getComponent() -->Line_17 $$ VerticalBox panel = new VerticalBox()[ CD ]
Line_2 $$ public JComponent getComponent() -->Line_14 $$ final JPanel transportPanel = new JPanel(new BorderLayout())[ CD ]
Line_23 $$ JPanel result = new JPanel(new BorderLayout())-->Line_24 $$ result.add(panel, BorderLayout.NORTH)[ FD ]
Line_2 $$ public JComponent getComponent() -->Line_8 $$ final ButtonGroup gr = new ButtonGroup()[ CD ]
Line_17 $$ VerticalBox panel = new VerticalBox()-->Line_24 $$ result.add(panel, BorderLayout.NORTH)[ FD ]
Line_14 $$ final JPanel transportPanel = new JPanel(new BorderLayout())-->Line_15 $$ transportPanel.add(new JLabel(DebuggerBundle.message("label.debugger.launching.configurable.debugger.transport")), BorderLayout.WEST)[ FD ]
Line_2 $$ public JComponent getComponent() -->Line_18 $$ panel.setOpaque(false)[ CD ]
Line_11 $$ final Box box = Box.createHorizontalBox()-->Line_12 $$ box.add(myRbSocket)[ FD ]
Line_2 $$ public JComponent getComponent() -->Line_12 $$ box.add(myRbSocket)[ CD ]
Line_2 $$ public JComponent getComponent() -->Line_24 $$ result.add(panel, BorderLayout.NORTH)[ CD ]
Line_17 $$ VerticalBox panel = new VerticalBox()-->Line_22 $$ panel.add(myCbShowAlternativeSource)[ FD ]
Line_2 $$ public JComponent getComponent() -->Line_16 $$ transportPanel.add(box, BorderLayout.CENTER)[ CD ]
Line_17 $$ VerticalBox panel = new VerticalBox()-->Line_18 $$ panel.setOpaque(false)[ FD ]
Line_2 $$ public JComponent getComponent() -->Line_13 $$ box.add(myRbShmem)[ CD ]
Line_11 $$ final Box box = Box.createHorizontalBox()-->Line_13 $$ box.add(myRbShmem)[ FD ]
Line_2 $$ public JComponent getComponent() -->Line_23 $$ JPanel result = new JPanel(new BorderLayout())[ CD ]
Line_2 $$ public JComponent getComponent() -->Line_15 $$ transportPanel.add(new JLabel(DebuggerBundle.message("label.debugger.launching.configurable.debugger.transport")), BorderLayout.WEST)[ CD ]
Line_2 $$ public JComponent getComponent() -->Line_25 $$ return result[ CD ]
Line_8 $$ final ButtonGroup gr = new ButtonGroup()-->Line_10 $$ gr.add(myRbShmem)[ FD ]
Line_17 $$ VerticalBox panel = new VerticalBox()-->Line_19 $$ panel.add(transportPanel)[ FD ]
Line_2 $$ public JComponent getComponent() -->Line_19 $$ panel.add(transportPanel)[ CD ]
Line_2 $$ public JComponent getComponent() -->Line_20 $$ panel.add(myCbForceClassicVM)[ CD ]
Line_8 $$ final ButtonGroup gr = new ButtonGroup()-->Line_9 $$ gr.add(myRbSocket)[ FD ]
Line_17 $$ VerticalBox panel = new VerticalBox()-->Line_20 $$ panel.add(myCbForceClassicVM)[ FD ]
