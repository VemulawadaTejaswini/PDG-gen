Line_33 $$ if (box.isSelected()) -->Line_36 $$ if (modules.contains(projectType)) [ CD ]
Line_24 $$ SetupCheckBox checkBox = new SetupCheckBox(projectType.getName().substring(0, 1).toUpperCase() + projectType.getName().substring(1, projectType.getName().length()))-->Line_27 $$ checkBox.addItemListener(new ItemListener() [ FD ]
Line_57 $$ if (projDep.equals(ProjectDependency.BOX2D)) -->Line_58 $$ depCheckBox.setSelected(true)[ CD ]
Line_2 $$ private void uiLayout() -->Line_8 $$ add(gameClassLabel, new GridBagConstraints(0, 2, 1, 1, 0, 0, EAST, NONE, new Insets(0, 0, 6, 6), 0, 0))[ CD ]
Line_47 $$ JPanel extensionPanel = new JPanel(new GridLayout(1, 5))-->Line_60 $$ extensionPanel.add(depCheckBox)[ FD ]
Line_33 $$ if (box.isSelected()) -->Line_34 $$ modules.add(projectType)[ CD ]
Line_61 $$ depCheckBox.addItemListener(new ItemListener() -->Line_63 $$ SetupCheckBox box = (SetupCheckBox) e.getSource()[ FD ]
Line_2 $$ private void uiLayout() -->Line_18 $$ add(sdkLocationButton, new GridBagConstraints(2, 4, 1, 1, 0, 0, CENTER, NONE, new Insets(0, 6, 0, 0), 0, 0))[ CD ]
Line_2 $$ private void uiLayout() -->Line_10 $$ add(destinationLabel, new GridBagConstraints(0, 3, 1, 1, 0, 0, EAST, NONE, new Insets(0, 0, 0, 6), 0, 0))[ CD ]
Line_2 $$ private void uiLayout() -->Line_5 $$ add(nameText, new GridBagConstraints(1, 0, 2, 1, 1, 0, CENTER, HORIZONTAL, new Insets(0, 0, 6, 0), 0, 0))[ CD ]
Line_2 $$ private void uiLayout() -->Line_13 $$ if (System.getenv("ANDROID_HOME") != null) [ CD ]
Line_55 $$ SetupCheckBox depCheckBox = new SetupCheckBox(projDep.name().substring(0, 1) + projDep.name().substring(1, projDep.name().length()).toLowerCase())-->Line_61 $$ depCheckBox.addItemListener(new ItemListener() [ FD ]
Line_27 $$ checkBox.addItemListener(new ItemListener() -->Line_63 $$ SetupCheckBox box = (SetupCheckBox) e.getSource()[ FD ]
Line_49 $$ if (ProjectDependency.values()[depCounter] != null) -->Line_61 $$ depCheckBox.addItemListener(new ItemListener() [ CD ]
Line_50 $$ final ProjectDependency projDep = ProjectDependency.values()[depCounter]-->Line_68 $$ dependencies.remove(builder.bank.getDependency(projDep))[ FD ]
Line_24 $$ SetupCheckBox checkBox = new SetupCheckBox(projectType.getName().substring(0, 1).toUpperCase() + projectType.getName().substring(1, projectType.getName().length()))-->Line_26 $$ subProjectsPanel.add(checkBox)[ FD ]
Line_49 $$ if (ProjectDependency.values()[depCounter] != null) -->Line_60 $$ extensionPanel.add(depCheckBox)[ CD ]
Line_64 $$ if (box.isSelected()) -->Line_67 $$ if (dependencies.contains(builder.bank.getDependency(projDep))) [ CD ]
Line_2 $$ private void uiLayout() -->Line_9 $$ add(gameClassText, new GridBagConstraints(1, 2, 2, 1, 1, 0, CENTER, HORIZONTAL, new Insets(0, 0, 6, 0), 0, 0))[ CD ]
Line_49 $$ if (ProjectDependency.values()[depCounter] != null) -->Line_50 $$ final ProjectDependency projDep = ProjectDependency.values()[depCounter][ CD ]
Line_64 $$ if (box.isSelected()) -->Line_65 $$ dependencies.add(builder.bank.getDependency(projDep))[ CD ]
Line_19 $$ for (final ProjectType projectType : ProjectType.values()) -->Line_36 $$ if (modules.contains(projectType)) [ FD ]
Line_27 $$ checkBox.addItemListener(new ItemListener() -->Line_29 $$ SetupCheckBox box = (SetupCheckBox) e.getSource()[ CD ]
Line_2 $$ private void uiLayout() -->Line_91 $$ add(showMoreExtensionsButton, new GridBagConstraints(0, 12, 0, 1, 0, 0, CENTER, WEST, new Insets(10, 0, 10, 0), 0, 0))[ CD ]
Line_46 $$ for (int row = 0; row <= (ProjectDependency.values().length / 5); row++) -->Line_47 $$ JPanel extensionPanel = new JPanel(new GridLayout(1, 5))[ CD ]
Line_29 $$ SetupCheckBox box = (SetupCheckBox) e.getSource()-->Line_64 $$ if (box.isSelected()) [ FD ]
Line_36 $$ if (modules.contains(projectType)) -->Line_37 $$ modules.remove(projectType)[ CD ]
Line_55 $$ SetupCheckBox depCheckBox = new SetupCheckBox(projDep.name().substring(0, 1) + projDep.name().substring(1, projDep.name().length()).toLowerCase())-->Line_56 $$ depCheckBox.setToolTipText(projDep.getDescription())[ FD ]
Line_2 $$ private void uiLayout() -->Line_43 $$ add(projectsLabel, new GridBagConstraints(0, 6, 1, 1, 0, 0, WEST, WEST, new Insets(20, 0, 0, 0), 0, 0))[ CD ]
Line_30 $$ if (projectType.equals(ProjectType.ANDROID)) -->Line_31 $$ sdkLocationText.setEnabled(box.isSelected())[ CD ]
Line_47 $$ JPanel extensionPanel = new JPanel(new GridLayout(1, 5))-->Line_83 $$ extensionsPanels.add(extensionPanel)[ FD ]
Line_49 $$ if (ProjectDependency.values()[depCounter] != null) -->Line_56 $$ depCheckBox.setToolTipText(projDep.getDescription())[ CD ]
Line_13 $$ if (System.getenv("ANDROID_HOME") != null) -->Line_14 $$ sdkLocationText.setText(System.getenv("ANDROID_HOME"))[ CD ]
Line_2 $$ private void uiLayout() -->Line_4 $$ add(nameLabel, new GridBagConstraints(0, 0, 1, 1, 0, 0, EAST, NONE, new Insets(0, 0, 6, 6), 0, 0))[ CD ]
Line_27 $$ checkBox.addItemListener(new ItemListener() -->Line_30 $$ if (projectType.equals(ProjectType.ANDROID)) [ CD ]
Line_50 $$ final ProjectDependency projDep = ProjectDependency.values()[depCounter]-->Line_67 $$ if (dependencies.contains(builder.bank.getDependency(projDep))) [ FD ]
Line_27 $$ checkBox.addItemListener(new ItemListener() -->Line_33 $$ if (box.isSelected()) [ CD ]
Line_49 $$ if (ProjectDependency.values()[depCounter] != null) -->Line_57 $$ if (projDep.equals(ProjectDependency.BOX2D)) [ CD ]
Line_49 $$ if (ProjectDependency.values()[depCounter] != null) -->Line_73 $$ if (depCounter % 5 == 0) [ CD ]
Line_63 $$ SetupCheckBox box = (SetupCheckBox) e.getSource()-->Line_64 $$ if (box.isSelected()) [ FD ]
Line_47 $$ JPanel extensionPanel = new JPanel(new GridLayout(1, 5))-->Line_81 $$ extensionPanel.add(Box.createHorizontalBox())[ FD ]
Line_24 $$ SetupCheckBox checkBox = new SetupCheckBox(projectType.getName().substring(0, 1).toUpperCase() + projectType.getName().substring(1, projectType.getName().length()))-->Line_25 $$ checkBox.setSelected(true)[ FD ]
Line_2 $$ private void uiLayout() -->Line_11 $$ add(destinationText, new GridBagConstraints(1, 3, 1, 1, 1, 0, CENTER, HORIZONTAL, new Insets(0, 0, 0, 0), 0, 0))[ CD ]
Line_2 $$ private void uiLayout() -->Line_17 $$ add(sdkLocationText, new GridBagConstraints(1, 4, 1, 1, 1, 0, CENTER, HORIZONTAL, new Insets(0, 0, 0, 0), 0, 0))[ CD ]
Line_46 $$ for (int row = 0; row <= (ProjectDependency.values().length / 5); row++) -->Line_80 $$ for (int left = ((depCounter - 1) % 5); left > 1; left--) [ CD ]
Line_2 $$ private void uiLayout() -->Line_85 $$ add(extensionsLabel, new GridBagConstraints(0, 8, 1, 1, 0, 0, WEST, WEST, new Insets(10, 0, 0, 0), 0, 0))[ CD ]
Line_2 $$ private void uiLayout() -->Line_16 $$ add(sdkLocationLabel, new GridBagConstraints(0, 4, 1, 1, 0, 0, EAST, NONE, new Insets(0, 0, 0, 6), 0, 0))[ CD ]
Line_49 $$ if (ProjectDependency.values()[depCounter] != null) -->Line_51 $$ if (projDep.equals(ProjectDependency.GDX)) [ CD ]
Line_19 $$ for (final ProjectType projectType : ProjectType.values()) -->Line_30 $$ if (projectType.equals(ProjectType.ANDROID)) [ FD ]
Line_61 $$ depCheckBox.addItemListener(new ItemListener() -->Line_63 $$ SetupCheckBox box = (SetupCheckBox) e.getSource()[ CD ]
Line_29 $$ SetupCheckBox box = (SetupCheckBox) e.getSource()-->Line_31 $$ sdkLocationText.setEnabled(box.isSelected())[ FD ]
Line_55 $$ SetupCheckBox depCheckBox = new SetupCheckBox(projDep.name().substring(0, 1) + projDep.name().substring(1, projDep.name().length()).toLowerCase())-->Line_58 $$ depCheckBox.setSelected(true)[ FD ]
Line_50 $$ final ProjectDependency projDep = ProjectDependency.values()[depCounter]-->Line_56 $$ depCheckBox.setToolTipText(projDep.getDescription())[ FD ]
Line_49 $$ if (ProjectDependency.values()[depCounter] != null) -->Line_55 $$ SetupCheckBox depCheckBox = new SetupCheckBox(projDep.name().substring(0, 1) + projDep.name().substring(1, projDep.name().length()).toLowerCase())[ CD ]
Line_2 $$ private void uiLayout() -->Line_3 $$ setLayout(new GridBagLayout())[ CD ]
Line_19 $$ for (final ProjectType projectType : ProjectType.values()) -->Line_34 $$ modules.add(projectType)[ FD ]
Line_67 $$ if (dependencies.contains(builder.bank.getDependency(projDep))) -->Line_68 $$ dependencies.remove(builder.bank.getDependency(projDep))[ CD ]
Line_46 $$ for (int row = 0; row <= (ProjectDependency.values().length / 5); row++) -->Line_83 $$ extensionsPanels.add(extensionPanel)[ CD ]
Line_55 $$ SetupCheckBox depCheckBox = new SetupCheckBox(projDep.name().substring(0, 1) + projDep.name().substring(1, projDep.name().length()).toLowerCase())-->Line_60 $$ extensionPanel.add(depCheckBox)[ FD ]
Line_19 $$ for (final ProjectType projectType : ProjectType.values()) -->Line_23 $$ modules.add(projectType)[ FD ]
Line_2 $$ private void uiLayout() -->Line_44 $$ add(subProjectsPanel, new GridBagConstraints(0, 7, 3, 1, 0, 0, CENTER, HORIZONTAL, new Insets(0, 0, 0, 0), 0, 0))[ CD ]
Line_2 $$ private void uiLayout() -->Line_7 $$ add(packageText, new GridBagConstraints(1, 1, 2, 1, 1, 0, CENTER, HORIZONTAL, new Insets(0, 0, 6, 0), 0, 0))[ CD ]
Line_27 $$ checkBox.addItemListener(new ItemListener() -->Line_29 $$ SetupCheckBox box = (SetupCheckBox) e.getSource()[ FD ]
Line_2 $$ private void uiLayout() -->Line_12 $$ add(destinationButton, new GridBagConstraints(2, 3, 1, 1, 0, 0, CENTER, NONE, new Insets(0, 6, 0, 0), 0, 0))[ CD ]
Line_61 $$ depCheckBox.addItemListener(new ItemListener() -->Line_64 $$ if (box.isSelected()) [ CD ]
Line_50 $$ final ProjectDependency projDep = ProjectDependency.values()[depCounter]-->Line_51 $$ if (projDep.equals(ProjectDependency.GDX)) [ FD ]
Line_2 $$ private void uiLayout() -->Line_46 $$ for (int row = 0; row <= (ProjectDependency.values().length / 5); row++) [ CD ]
Line_19 $$ for (final ProjectType projectType : ProjectType.values()) -->Line_37 $$ modules.remove(projectType)[ FD ]
Line_50 $$ final ProjectDependency projDep = ProjectDependency.values()[depCounter]-->Line_55 $$ SetupCheckBox depCheckBox = new SetupCheckBox(projDep.name().substring(0, 1) + projDep.name().substring(1, projDep.name().length()).toLowerCase())[ FD ]
Line_80 $$ for (int left = ((depCounter - 1) % 5); left > 1; left--) -->Line_81 $$ extensionPanel.add(Box.createHorizontalBox())[ CD ]
Line_50 $$ final ProjectDependency projDep = ProjectDependency.values()[depCounter]-->Line_65 $$ dependencies.add(builder.bank.getDependency(projDep))[ FD ]
Line_50 $$ final ProjectDependency projDep = ProjectDependency.values()[depCounter]-->Line_57 $$ if (projDep.equals(ProjectDependency.BOX2D)) [ FD ]
Line_29 $$ SetupCheckBox box = (SetupCheckBox) e.getSource()-->Line_33 $$ if (box.isSelected()) [ FD ]
Line_48 $$ while (depCounter < ProjectDependency.values().length) -->Line_49 $$ if (ProjectDependency.values()[depCounter] != null) [ CD ]
Line_19 $$ for (final ProjectType projectType : ProjectType.values()) -->Line_20 $$ if (projectType.equals(ProjectType.CORE)) [ FD ]
Line_46 $$ for (int row = 0; row <= (ProjectDependency.values().length / 5); row++) -->Line_48 $$ while (depCounter < ProjectDependency.values().length) [ CD ]
Line_2 $$ private void uiLayout() -->Line_6 $$ add(packageLabel, new GridBagConstraints(0, 1, 1, 1, 0, 0, EAST, NONE, new Insets(0, 0, 6, 6), 0, 0))[ CD ]
Line_19 $$ for (final ProjectType projectType : ProjectType.values()) -->Line_24 $$ SetupCheckBox checkBox = new SetupCheckBox(projectType.getName().substring(0, 1).toUpperCase() + projectType.getName().substring(1, projectType.getName().length()))[ FD ]
