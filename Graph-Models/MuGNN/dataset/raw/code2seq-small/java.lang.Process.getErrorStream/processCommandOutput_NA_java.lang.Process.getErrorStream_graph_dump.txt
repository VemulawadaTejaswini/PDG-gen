Line_15 $$ StringBuilder errorStr = new StringBuilder()-->Line_23 $$ if (throwOnError && errorStr.length() > 0) [ FD ]
Line_12 $$ while ((s = stdOutput.readLine()) != null) -->Line_17 $$ if (s.contains("environment variables being ignored")) [ FD ]
Line_3 $$ BufferedReader stdOutput = new BufferedReader(new InputStreamReader(process.getInputStream()))-->Line_12 $$ while ((s = stdOutput.readLine()) != null) [ FD ]
Line_2 $$ private static void processCommandOutput(Process process, Processor<String> processor, boolean skipFirstLine, boolean throwOnError) throws IOException -->Line_23 $$ if (throwOnError && errorStr.length() > 0) [ FD ]
Line_3 $$ BufferedReader stdOutput = new BufferedReader(new InputStreamReader(process.getInputStream()))-->Line_30 $$ stdOutput.close()[ FD ]
Line_15 $$ StringBuilder errorStr = new StringBuilder()-->Line_24 $$ throw new IOException("Error reading ps output:" + errorStr.toString())[ FD ]
Line_11 $$ String s-->Line_16 $$ while ((s = stdError.readLine()) != null) [ FD ]
Line_2 $$ private static void processCommandOutput(Process process, Processor<String> processor, boolean skipFirstLine, boolean throwOnError) throws IOException -->Line_3 $$ BufferedReader stdOutput = new BufferedReader(new InputStreamReader(process.getInputStream()))[ FD ]
Line_16 $$ while ((s = stdError.readLine()) != null) -->Line_17 $$ if (s.contains("environment variables being ignored")) [ FD ]
Line_11 $$ String s-->Line_21 $$ errorStr.append(s).append("\n")[ FD ]
Line_11 $$ String s-->Line_17 $$ if (s.contains("environment variables being ignored")) [ FD ]
Line_12 $$ while ((s = stdOutput.readLine()) != null) -->Line_16 $$ while ((s = stdError.readLine()) != null) [ FD ]
Line_11 $$ String s-->Line_13 $$ processor.process(s)[ FD ]
Line_12 $$ while ((s = stdOutput.readLine()) != null) -->Line_13 $$ processor.process(s)[ CD ]
Line_2 $$ private static void processCommandOutput(Process process, Processor<String> processor, boolean skipFirstLine, boolean throwOnError) throws IOException -->Line_13 $$ processor.process(s)[ FD ]
Line_2 $$ private static void processCommandOutput(Process process, Processor<String> processor, boolean skipFirstLine, boolean throwOnError) throws IOException -->Line_3 $$ BufferedReader stdOutput = new BufferedReader(new InputStreamReader(process.getInputStream()))[ CD ]
Line_11 $$ String s-->Line_12 $$ while ((s = stdOutput.readLine()) != null) [ FD ]
Line_2 $$ private static void processCommandOutput(Process process, Processor<String> processor, boolean skipFirstLine, boolean throwOnError) throws IOException -->Line_5 $$ BufferedReader stdError = new BufferedReader(new InputStreamReader(process.getErrorStream()))[ FD ]
Line_12 $$ while ((s = stdOutput.readLine()) != null) -->Line_13 $$ processor.process(s)[ FD ]
Line_5 $$ BufferedReader stdError = new BufferedReader(new InputStreamReader(process.getErrorStream()))-->Line_16 $$ while ((s = stdError.readLine()) != null) [ FD ]
Line_16 $$ while ((s = stdError.readLine()) != null) -->Line_21 $$ errorStr.append(s).append("\n")[ CD ]
Line_12 $$ while ((s = stdOutput.readLine()) != null) -->Line_21 $$ errorStr.append(s).append("\n")[ FD ]
Line_16 $$ while ((s = stdError.readLine()) != null) -->Line_21 $$ errorStr.append(s).append("\n")[ FD ]
Line_16 $$ while ((s = stdError.readLine()) != null) -->Line_17 $$ if (s.contains("environment variables being ignored")) [ CD ]
Line_15 $$ StringBuilder errorStr = new StringBuilder()-->Line_21 $$ errorStr.append(s).append("\n")[ FD ]
Line_5 $$ BufferedReader stdError = new BufferedReader(new InputStreamReader(process.getErrorStream()))-->Line_27 $$ stdError.close()[ FD ]
