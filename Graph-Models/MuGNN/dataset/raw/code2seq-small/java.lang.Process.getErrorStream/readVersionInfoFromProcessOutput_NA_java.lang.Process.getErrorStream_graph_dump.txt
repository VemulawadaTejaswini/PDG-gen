Line_3 $$ if (!new File(homePath).exists()) -->Line_4 $$ return null[ CD ]
Line_9 $$ final Future<?> parsingThreadFuture = actionRunner.run(parsingThread)-->Line_21 $$ parsingThreadFuture.get()[ FD ]
Line_7 $$ Process process = Runtime.getRuntime().exec(command)-->Line_8 $$ VersionParsingThread parsingThread = new VersionParsingThread(process.getErrorStream(), versionLineMarker)[ FD ]
Line_2 $$ private static JdkVersionInfo readVersionInfoFromProcessOutput(@NotNull String homePath, @NotNull String[] command, String versionLineMarker, @NotNull ActionRunner actionRunner) -->Line_9 $$ final Future<?> parsingThreadFuture = actionRunner.run(parsingThread)[ FD ]
Line_10 $$ ReadStreamThread readThread = new ReadStreamThread(process.getInputStream())-->Line_11 $$ actionRunner.run(readThread)[ FD ]
Line_8 $$ VersionParsingThread parsingThread = new VersionParsingThread(process.getErrorStream(), versionLineMarker)-->Line_26 $$ String version = parsingThread.getVersion()[ FD ]
Line_26 $$ String version = parsingThread.getVersion()-->Line_27 $$ if (version != null) [ FD ]
Line_2 $$ private static JdkVersionInfo readVersionInfoFromProcessOutput(@NotNull String homePath, @NotNull String[] command, String versionLineMarker, @NotNull ActionRunner actionRunner) -->Line_7 $$ Process process = Runtime.getRuntime().exec(command)[ FD ]
Line_2 $$ private static JdkVersionInfo readVersionInfoFromProcessOutput(@NotNull String homePath, @NotNull String[] command, String versionLineMarker, @NotNull ActionRunner actionRunner) -->Line_33 $$ return null[ CD ]
Line_27 $$ if (version != null) -->Line_28 $$ return new JdkVersionInfo(version, parsingThread.getBitness())[ CD ]
Line_8 $$ VersionParsingThread parsingThread = new VersionParsingThread(process.getErrorStream(), versionLineMarker)-->Line_28 $$ return new JdkVersionInfo(version, parsingThread.getBitness())[ FD ]
Line_7 $$ Process process = Runtime.getRuntime().exec(command)-->Line_14 $$ process.waitFor()[ FD ]
Line_2 $$ private static JdkVersionInfo readVersionInfoFromProcessOutput(@NotNull String homePath, @NotNull String[] command, String versionLineMarker, @NotNull ActionRunner actionRunner) -->Line_11 $$ actionRunner.run(readThread)[ FD ]
Line_8 $$ VersionParsingThread parsingThread = new VersionParsingThread(process.getErrorStream(), versionLineMarker)-->Line_9 $$ final Future<?> parsingThreadFuture = actionRunner.run(parsingThread)[ FD ]
Line_7 $$ Process process = Runtime.getRuntime().exec(command)-->Line_17 $$ process.destroy()[ FD ]
Line_2 $$ private static JdkVersionInfo readVersionInfoFromProcessOutput(@NotNull String homePath, @NotNull String[] command, String versionLineMarker, @NotNull ActionRunner actionRunner) -->Line_3 $$ if (!new File(homePath).exists()) [ CD ]
Line_7 $$ Process process = Runtime.getRuntime().exec(command)-->Line_10 $$ ReadStreamThread readThread = new ReadStreamThread(process.getInputStream())[ FD ]
