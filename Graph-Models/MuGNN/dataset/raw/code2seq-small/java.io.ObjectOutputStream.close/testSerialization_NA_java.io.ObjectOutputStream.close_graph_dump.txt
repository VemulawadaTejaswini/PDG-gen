Line_2 $$ private ResolvableType testSerialization(ResolvableType type) throws Exception -->Line_11 $$ assertThat(read.resolve(), equalTo((Class) type.resolve()))[ CD ]
Line_2 $$ private ResolvableType testSerialization(ResolvableType type) throws Exception -->Line_12 $$ return read[ CD ]
Line_8 $$ ResolvableType read = (ResolvableType) ois.readObject()-->Line_10 $$ assertThat(read.getType(), equalTo(type.getType()))[ FD ]
Line_2 $$ private ResolvableType testSerialization(ResolvableType type) throws Exception -->Line_6 $$ oos.close()[ CD ]
Line_4 $$ ObjectOutputStream oos = new ObjectOutputStream(bos)-->Line_6 $$ oos.close()[ FD ]
Line_2 $$ private ResolvableType testSerialization(ResolvableType type) throws Exception -->Line_4 $$ ObjectOutputStream oos = new ObjectOutputStream(bos)[ CD ]
Line_8 $$ ResolvableType read = (ResolvableType) ois.readObject()-->Line_9 $$ assertThat(read, equalTo(type))[ FD ]
Line_2 $$ private ResolvableType testSerialization(ResolvableType type) throws Exception -->Line_3 $$ ByteArrayOutputStream bos = new ByteArrayOutputStream()[ CD ]
Line_4 $$ ObjectOutputStream oos = new ObjectOutputStream(bos)-->Line_5 $$ oos.writeObject(type)[ FD ]
Line_2 $$ private ResolvableType testSerialization(ResolvableType type) throws Exception -->Line_10 $$ assertThat(read.getType(), equalTo(type.getType()))[ CD ]
Line_2 $$ private ResolvableType testSerialization(ResolvableType type) throws Exception -->Line_9 $$ assertThat(read, equalTo(type))[ CD ]
Line_2 $$ private ResolvableType testSerialization(ResolvableType type) throws Exception -->Line_5 $$ oos.writeObject(type)[ CD ]
Line_2 $$ private ResolvableType testSerialization(ResolvableType type) throws Exception -->Line_7 $$ ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bos.toByteArray()))[ CD ]
Line_8 $$ ResolvableType read = (ResolvableType) ois.readObject()-->Line_11 $$ assertThat(read.resolve(), equalTo((Class) type.resolve()))[ FD ]
Line_2 $$ private ResolvableType testSerialization(ResolvableType type) throws Exception -->Line_5 $$ oos.writeObject(type)[ FD ]
Line_2 $$ private ResolvableType testSerialization(ResolvableType type) throws Exception -->Line_8 $$ ResolvableType read = (ResolvableType) ois.readObject()[ CD ]
Line_2 $$ private ResolvableType testSerialization(ResolvableType type) throws Exception -->Line_9 $$ assertThat(read, equalTo(type))[ FD ]
Line_7 $$ ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bos.toByteArray()))-->Line_8 $$ ResolvableType read = (ResolvableType) ois.readObject()[ FD ]
Line_2 $$ private ResolvableType testSerialization(ResolvableType type) throws Exception -->Line_10 $$ assertThat(read.getType(), equalTo(type.getType()))[ FD ]
Line_2 $$ private ResolvableType testSerialization(ResolvableType type) throws Exception -->Line_11 $$ assertThat(read.resolve(), equalTo((Class) type.resolve()))[ FD ]
Line_3 $$ ByteArrayOutputStream bos = new ByteArrayOutputStream()-->Line_7 $$ ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bos.toByteArray()))[ FD ]
