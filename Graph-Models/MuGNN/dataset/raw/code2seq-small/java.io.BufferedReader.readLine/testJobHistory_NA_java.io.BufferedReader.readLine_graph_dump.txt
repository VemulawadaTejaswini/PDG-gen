Line_2 $$ private void testJobHistory(Configuration conf) throws Exception -->Line_21 $$ assertEquals(23, counter)[ CD ]
Line_3 $$ CLI jc = createJobClient()-->Line_10 $$ exitCode = runTool(conf, jc, new String[] [ FD ]
Line_15 $$ while ((line = br.readLine()) != null) -->Line_16 $$ LOG.info("line = " + line)[ CD ]
Line_8 $$ int exitCode = runTool(conf, jc, new String[] -->Line_9 $$ assertEquals("Exit code", -1, exitCode)[ FD ]
Line_2 $$ private void testJobHistory(Configuration conf) throws Exception -->Line_14 $$ int counter = 0[ CD ]
Line_4 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_10 $$ exitCode = runTool(conf, jc, new String[] [ FD ]
Line_4 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_8 $$ int exitCode = runTool(conf, jc, new String[] [ FD ]
Line_8 $$ int exitCode = runTool(conf, jc, new String[] -->Line_10 $$ exitCode = runTool(conf, jc, new String[] [ FD ]
Line_5 $$ File f = new File("src/test/resources/job_1329348432655_0001-10.jhist")-->Line_7 $$ String historyFileUri = new Path(f.getAbsolutePath()).makeQualified(localFs.getUri(), localFs.getWorkingDirectory()).toUri().toString()[ FD ]
Line_2 $$ private void testJobHistory(Configuration conf) throws Exception -->Line_5 $$ File f = new File("src/test/resources/job_1329348432655_0001-10.jhist")[ CD ]
Line_2 $$ private void testJobHistory(Configuration conf) throws Exception -->Line_7 $$ String historyFileUri = new Path(f.getAbsolutePath()).makeQualified(localFs.getUri(), localFs.getWorkingDirectory()).toUri().toString()[ CD ]
Line_14 $$ int counter = 0-->Line_21 $$ assertEquals(23, counter)[ FD ]
Line_2 $$ private void testJobHistory(Configuration conf) throws Exception -->Line_11 $$ assertEquals("Exit code", 0, exitCode)[ CD ]
Line_2 $$ private void testJobHistory(Configuration conf) throws Exception -->Line_13 $$ BufferedReader br = new BufferedReader(new InputStreamReader(new ByteArrayInputStream(out.toByteArray())))[ CD ]
Line_2 $$ private void testJobHistory(Configuration conf) throws Exception -->Line_4 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()[ CD ]
Line_13 $$ BufferedReader br = new BufferedReader(new InputStreamReader(new ByteArrayInputStream(out.toByteArray())))-->Line_15 $$ while ((line = br.readLine()) != null) [ FD ]
Line_2 $$ private void testJobHistory(Configuration conf) throws Exception -->Line_12 $$ String line[ CD ]
Line_4 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_13 $$ BufferedReader br = new BufferedReader(new InputStreamReader(new ByteArrayInputStream(out.toByteArray())))[ FD ]
Line_2 $$ private void testJobHistory(Configuration conf) throws Exception -->Line_8 $$ int exitCode = runTool(conf, jc, new String[] [ CD ]
Line_6 $$ FileSystem localFs = FileSystem.getLocal(conf)-->Line_7 $$ String historyFileUri = new Path(f.getAbsolutePath()).makeQualified(localFs.getUri(), localFs.getWorkingDirectory()).toUri().toString()[ FD ]
Line_8 $$ int exitCode = runTool(conf, jc, new String[] -->Line_11 $$ assertEquals("Exit code", 0, exitCode)[ FD ]
Line_12 $$ String line-->Line_15 $$ while ((line = br.readLine()) != null) [ FD ]
Line_2 $$ private void testJobHistory(Configuration conf) throws Exception -->Line_6 $$ FileSystem localFs = FileSystem.getLocal(conf)[ CD ]
Line_15 $$ while ((line = br.readLine()) != null) -->Line_17 $$ if (line.startsWith("task_")) [ FD ]
Line_2 $$ private void testJobHistory(Configuration conf) throws Exception -->Line_8 $$ int exitCode = runTool(conf, jc, new String[] [ FD ]
Line_2 $$ private void testJobHistory(Configuration conf) throws Exception -->Line_15 $$ while ((line = br.readLine()) != null) [ CD ]
Line_2 $$ private void testJobHistory(Configuration conf) throws Exception -->Line_6 $$ FileSystem localFs = FileSystem.getLocal(conf)[ FD ]
Line_2 $$ private void testJobHistory(Configuration conf) throws Exception -->Line_10 $$ exitCode = runTool(conf, jc, new String[] [ FD ]
Line_15 $$ while ((line = br.readLine()) != null) -->Line_17 $$ if (line.startsWith("task_")) [ CD ]
Line_2 $$ private void testJobHistory(Configuration conf) throws Exception -->Line_9 $$ assertEquals("Exit code", -1, exitCode)[ CD ]
Line_2 $$ private void testJobHistory(Configuration conf) throws Exception -->Line_10 $$ exitCode = runTool(conf, jc, new String[] [ CD ]
Line_3 $$ CLI jc = createJobClient()-->Line_8 $$ int exitCode = runTool(conf, jc, new String[] [ FD ]
Line_17 $$ if (line.startsWith("task_")) -->Line_18 $$ counter++[ CD ]
Line_14 $$ int counter = 0-->Line_18 $$ counter++[ FD ]
Line_2 $$ private void testJobHistory(Configuration conf) throws Exception -->Line_3 $$ CLI jc = createJobClient()[ CD ]
Line_10 $$ exitCode = runTool(conf, jc, new String[] -->Line_11 $$ assertEquals("Exit code", 0, exitCode)[ FD ]
Line_12 $$ String line-->Line_17 $$ if (line.startsWith("task_")) [ FD ]
