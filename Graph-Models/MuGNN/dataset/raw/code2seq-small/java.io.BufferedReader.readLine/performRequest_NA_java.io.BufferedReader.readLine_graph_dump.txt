Line_2 $$ public Header[][] performRequest(URI uri) throws Exception -->Line_14 $$ sc.init(null, trustAllCerts, new java.security.SecureRandom())[ CD ]
Line_2 $$ public Header[][] performRequest(URI uri) throws Exception -->Line_34 $$ Assert.assertEquals(200, httpsConn.getResponseCode())[ CD ]
Line_4 $$ TrustManager[] trustAllCerts = new TrustManager[] -->Line_6 $$ return new X509Certificate[0][ CD ]
Line_4 $$ TrustManager[] trustAllCerts = new TrustManager[] -->Line_14 $$ sc.init(null, trustAllCerts, new java.security.SecureRandom())[ FD ]
Line_2 $$ public Header[][] performRequest(URI uri) throws Exception -->Line_29 $$ br.close()[ CD ]
Line_2 $$ public Header[][] performRequest(URI uri) throws Exception -->Line_18 $$ httpsConn.setHostnameVerifier(new HostnameVerifier() [ CD ]
Line_2 $$ public Header[][] performRequest(URI uri) throws Exception -->Line_15 $$ HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory())[ CD ]
Line_2 $$ public Header[][] performRequest(URI uri) throws Exception -->Line_33 $$ log.info("The content of the URL ('" + uri + "'):\n" + sb.toString())[ CD ]
Line_2 $$ public Header[][] performRequest(URI uri) throws Exception -->Line_16 $$ HttpsURLConnection httpsConn = (HttpsURLConnection) uri.toURL().openConnection()[ FD ]
Line_2 $$ public Header[][] performRequest(URI uri) throws Exception -->Line_17 $$ httpsConn.setDoOutput(false)[ CD ]
Line_2 $$ public Header[][] performRequest(URI uri) throws Exception -->Line_36 $$ return reqAndrespHeaders[ CD ]
Line_2 $$ public Header[][] performRequest(URI uri) throws Exception -->Line_32 $$ reqAndrespHeaders[1] = retrieveHeaders(httpsConn.getHeaderFields())[ CD ]
Line_2 $$ public Header[][] performRequest(URI uri) throws Exception -->Line_4 $$ TrustManager[] trustAllCerts = new TrustManager[] [ CD ]
Line_18 $$ httpsConn.setHostnameVerifier(new HostnameVerifier() -->Line_20 $$ return true[ CD ]
Line_2 $$ public Header[][] performRequest(URI uri) throws Exception -->Line_13 $$ SSLContext sc = SSLContext.getInstance("TLS")[ CD ]
Line_26 $$ while ((input = br.readLine()) != null) -->Line_27 $$ sb = sb.append(input)[ CD ]
Line_2 $$ public Header[][] performRequest(URI uri) throws Exception -->Line_35 $$ Assert.assertEquals("Could not reach expected content via http request", "A file", sb.toString())[ CD ]
Line_2 $$ public Header[][] performRequest(URI uri) throws Exception -->Line_30 $$ httpsConn.disconnect()[ CD ]
Line_2 $$ public Header[][] performRequest(URI uri) throws Exception -->Line_26 $$ while ((input = br.readLine()) != null) [ CD ]
