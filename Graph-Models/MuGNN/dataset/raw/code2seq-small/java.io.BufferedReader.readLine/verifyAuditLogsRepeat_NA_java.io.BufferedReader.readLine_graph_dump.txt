Line_5 $$ Enumeration<?> appenders = logger.getAllAppenders()-->Line_7 $$ Appender appender = (Appender) appenders.nextElement()[ FD ]
Line_14 $$ for (int i = 0; i < ndupe; i++) -->Line_18 $$ ret &= successPattern.matcher(line).matches()[ CD ]
Line_2 $$ private void verifyAuditLogsRepeat(boolean expectSuccess, int ndupe) throws IOException -->Line_5 $$ Enumeration<?> appenders = logger.getAllAppenders()[ CD ]
Line_11 $$ String line = null-->Line_18 $$ ret &= successPattern.matcher(line).matches()[ FD ]
Line_10 $$ BufferedReader reader = new BufferedReader(new FileReader(auditLogFile))-->Line_20 $$ assertNull("Unexpected event in audit log", reader.readLine())[ FD ]
Line_2 $$ private void verifyAuditLogsRepeat(boolean expectSuccess, int ndupe) throws IOException -->Line_14 $$ for (int i = 0; i < ndupe; i++) [ FD ]
Line_2 $$ private void verifyAuditLogsRepeat(boolean expectSuccess, int ndupe) throws IOException -->Line_4 $$ logger.setLevel(Level.OFF)[ CD ]
Line_15 $$ line = reader.readLine()-->Line_18 $$ ret &= successPattern.matcher(line).matches()[ FD ]
Line_6 $$ while (appenders.hasMoreElements()) -->Line_8 $$ appender.close()[ CD ]
Line_11 $$ String line = null-->Line_17 $$ assertTrue("Expected audit event not found in audit log", auditPattern.matcher(line).matches())[ FD ]
Line_14 $$ for (int i = 0; i < ndupe; i++) -->Line_17 $$ assertTrue("Expected audit event not found in audit log", auditPattern.matcher(line).matches())[ CD ]
Line_2 $$ private void verifyAuditLogsRepeat(boolean expectSuccess, int ndupe) throws IOException -->Line_11 $$ String line = null[ CD ]
Line_12 $$ boolean ret = true-->Line_18 $$ ret &= successPattern.matcher(line).matches()[ FD ]
Line_11 $$ String line = null-->Line_15 $$ line = reader.readLine()[ FD ]
Line_15 $$ line = reader.readLine()-->Line_16 $$ assertNotNull(line)[ FD ]
Line_2 $$ private void verifyAuditLogsRepeat(boolean expectSuccess, int ndupe) throws IOException -->Line_3 $$ Logger logger = ((Log4JLogger) FSNamesystem.auditLog).getLogger()[ CD ]
Line_2 $$ private void verifyAuditLogsRepeat(boolean expectSuccess, int ndupe) throws IOException -->Line_10 $$ BufferedReader reader = new BufferedReader(new FileReader(auditLogFile))[ CD ]
Line_5 $$ Enumeration<?> appenders = logger.getAllAppenders()-->Line_6 $$ while (appenders.hasMoreElements()) [ FD ]
Line_6 $$ while (appenders.hasMoreElements()) -->Line_7 $$ Appender appender = (Appender) appenders.nextElement()[ CD ]
Line_7 $$ Appender appender = (Appender) appenders.nextElement()-->Line_8 $$ appender.close()[ FD ]
Line_14 $$ for (int i = 0; i < ndupe; i++) -->Line_16 $$ assertNotNull(line)[ CD ]
Line_3 $$ Logger logger = ((Log4JLogger) FSNamesystem.auditLog).getLogger()-->Line_4 $$ logger.setLevel(Level.OFF)[ FD ]
Line_10 $$ BufferedReader reader = new BufferedReader(new FileReader(auditLogFile))-->Line_23 $$ reader.close()[ FD ]
Line_14 $$ for (int i = 0; i < ndupe; i++) -->Line_15 $$ line = reader.readLine()[ CD ]
Line_11 $$ String line = null-->Line_16 $$ assertNotNull(line)[ FD ]
Line_10 $$ BufferedReader reader = new BufferedReader(new FileReader(auditLogFile))-->Line_15 $$ line = reader.readLine()[ FD ]
Line_15 $$ line = reader.readLine()-->Line_17 $$ assertTrue("Expected audit event not found in audit log", auditPattern.matcher(line).matches())[ FD ]
Line_2 $$ private void verifyAuditLogsRepeat(boolean expectSuccess, int ndupe) throws IOException -->Line_12 $$ boolean ret = true[ CD ]
Line_2 $$ private void verifyAuditLogsRepeat(boolean expectSuccess, int ndupe) throws IOException -->Line_6 $$ while (appenders.hasMoreElements()) [ CD ]
Line_3 $$ Logger logger = ((Log4JLogger) FSNamesystem.auditLog).getLogger()-->Line_5 $$ Enumeration<?> appenders = logger.getAllAppenders()[ FD ]
