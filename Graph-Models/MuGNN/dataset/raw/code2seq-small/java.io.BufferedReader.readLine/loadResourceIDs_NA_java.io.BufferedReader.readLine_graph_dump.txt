Line_4 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(arg)))-->Line_8 $$ String line = reader.readLine()[ FD ]
Line_11 $$ Matcher m = pattern.matcher(line)-->Line_12 $$ if (m.matches()) [ FD ]
Line_2 $$ private static Map<String, Integer> loadResourceIDs(String arg) throws IOException -->Line_5 $$ Pattern pattern = Pattern.compile("#define (\\w+)\\s+(\\d+)")[ CD ]
Line_8 $$ String line = reader.readLine()-->Line_11 $$ Matcher m = pattern.matcher(line)[ FD ]
Line_11 $$ Matcher m = pattern.matcher(line)-->Line_13 $$ result.put(m.group(1), Integer.parseInt(m.group(2)))[ FD ]
Line_7 $$ while (true) -->Line_9 $$ if (line == null)[ CD ]
Line_2 $$ private static Map<String, Integer> loadResourceIDs(String arg) throws IOException -->Line_19 $$ return result[ CD ]
Line_12 $$ if (m.matches()) -->Line_13 $$ result.put(m.group(1), Integer.parseInt(m.group(2)))[ CD ]
Line_8 $$ String line = reader.readLine()-->Line_9 $$ if (line == null)[ FD ]
Line_4 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(arg)))-->Line_17 $$ reader.close()[ FD ]
Line_2 $$ private static Map<String, Integer> loadResourceIDs(String arg) throws IOException -->Line_4 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(arg)))[ CD ]
Line_7 $$ while (true) -->Line_11 $$ Matcher m = pattern.matcher(line)[ CD ]
Line_7 $$ while (true) -->Line_8 $$ String line = reader.readLine()[ CD ]
Line_5 $$ Pattern pattern = Pattern.compile("#define (\\w+)\\s+(\\d+)")-->Line_11 $$ Matcher m = pattern.matcher(line)[ FD ]
Line_7 $$ while (true) -->Line_12 $$ if (m.matches()) [ CD ]
Line_3 $$ Map<String, Integer> result = new HashMap<String, Integer>()-->Line_13 $$ result.put(m.group(1), Integer.parseInt(m.group(2)))[ FD ]
Line_2 $$ private static Map<String, Integer> loadResourceIDs(String arg) throws IOException -->Line_3 $$ Map<String, Integer> result = new HashMap<String, Integer>()[ CD ]
