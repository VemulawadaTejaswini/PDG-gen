Line_4 $$ ArrayList<String> result = new ArrayList<String>()-->Line_10 $$ result.add(line)[ FD ]
Line_2 $$ public static List<String> readLinesFrom(File file, String cvsRootToSkip) throws IOException -->Line_5 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(file), CvsApplicationLevelConfiguration.getCharset()))[ CD ]
Line_2 $$ public static List<String> readLinesFrom(File file, String cvsRootToSkip) throws IOException -->Line_3 $$ FileUtil.createIfDoesntExist(file)[ CD ]
Line_8 $$ while ((line = reader.readLine()) != null) -->Line_10 $$ result.add(line)[ FD ]
Line_5 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(file), CvsApplicationLevelConfiguration.getCharset()))-->Line_14 $$ reader.close()[ FD ]
Line_7 $$ String line-->Line_10 $$ result.add(line)[ FD ]
Line_9 $$ if (!line.contains(cvsRootToSkip))-->Line_10 $$ result.add(line)[ CD ]
Line_7 $$ String line-->Line_8 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_5 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(file), CvsApplicationLevelConfiguration.getCharset()))-->Line_8 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_2 $$ public static List<String> readLinesFrom(File file, String cvsRootToSkip) throws IOException -->Line_9 $$ if (!line.contains(cvsRootToSkip))[ FD ]
Line_8 $$ while ((line = reader.readLine()) != null) -->Line_9 $$ if (!line.contains(cvsRootToSkip))[ CD ]
Line_2 $$ public static List<String> readLinesFrom(File file, String cvsRootToSkip) throws IOException -->Line_4 $$ ArrayList<String> result = new ArrayList<String>()[ CD ]
Line_7 $$ String line-->Line_9 $$ if (!line.contains(cvsRootToSkip))[ FD ]
Line_2 $$ public static List<String> readLinesFrom(File file, String cvsRootToSkip) throws IOException -->Line_3 $$ FileUtil.createIfDoesntExist(file)[ FD ]
Line_8 $$ while ((line = reader.readLine()) != null) -->Line_9 $$ if (!line.contains(cvsRootToSkip))[ FD ]
