Line_18 $$ line = br.readLine()-->Line_27 $$ String processId = line.substring(processIdI, line.length()).trim()[ FD ]
Line_27 $$ String processId = line.substring(processIdI, line.length()).trim()-->Line_28 $$ lst.add(new ProcessInfo(Integer.parseInt(processId), name + "   " + commandLine))[ FD ]
Line_10 $$ int processIdI = line.indexOf("ProcessId")-->Line_26 $$ String commandLine = line.substring(commandLineI, processIdI).trim()[ FD ]
Line_8 $$ String line = br.readLine()-->Line_26 $$ String commandLine = line.substring(commandLineI, processIdI).trim()[ FD ]
Line_6 $$ BufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()))-->Line_8 $$ String line = br.readLine()[ FD ]
Line_18 $$ line = br.readLine()-->Line_26 $$ String commandLine = line.substring(commandLineI, processIdI).trim()[ FD ]
Line_10 $$ int processIdI = line.indexOf("ProcessId")-->Line_27 $$ String processId = line.substring(processIdI, line.length()).trim()[ FD ]
Line_5 $$ List<ProcessInfo> lst = new ArrayList<ProcessInfo>()-->Line_30 $$ if (lst.size() == 0) [ FD ]
Line_6 $$ BufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()))-->Line_18 $$ line = br.readLine()[ FD ]
Line_2 $$ private static ProcessInfo[] createFromWMIC() throws Exception -->Line_5 $$ List<ProcessInfo> lst = new ArrayList<ProcessInfo>()[ CD ]
Line_2 $$ private static ProcessInfo[] createFromWMIC() throws Exception -->Line_4 $$ Process p = ProcessUtils.createProcess(command, null, null)[ CD ]
Line_17 $$ while (true) -->Line_22 $$ if (line.trim().length() == 0) [ CD ]
Line_8 $$ String line = br.readLine()-->Line_18 $$ line = br.readLine()[ FD ]
Line_9 $$ int commandLineI = line.indexOf("CommandLine")-->Line_11 $$ if (commandLineI == -1) [ FD ]
Line_4 $$ Process p = ProcessUtils.createProcess(command, null, null)-->Line_6 $$ BufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()))[ FD ]
Line_18 $$ line = br.readLine()-->Line_19 $$ if (line == null) [ FD ]
Line_8 $$ String line = br.readLine()-->Line_10 $$ int processIdI = line.indexOf("ProcessId")[ FD ]
Line_17 $$ while (true) -->Line_19 $$ if (line == null) [ CD ]
Line_17 $$ while (true) -->Line_27 $$ String processId = line.substring(processIdI, line.length()).trim()[ CD ]
Line_5 $$ List<ProcessInfo> lst = new ArrayList<ProcessInfo>()-->Line_28 $$ lst.add(new ProcessInfo(Integer.parseInt(processId), name + "   " + commandLine))[ FD ]
Line_9 $$ int commandLineI = line.indexOf("CommandLine")-->Line_25 $$ String name = line.substring(0, commandLineI).trim()[ FD ]
Line_9 $$ int commandLineI = line.indexOf("CommandLine")-->Line_26 $$ String commandLine = line.substring(commandLineI, processIdI).trim()[ FD ]
Line_17 $$ while (true) -->Line_18 $$ line = br.readLine()[ CD ]
Line_5 $$ List<ProcessInfo> lst = new ArrayList<ProcessInfo>()-->Line_33 $$ return lst.toArray(new ProcessInfo[lst.size()])[ FD ]
Line_2 $$ private static ProcessInfo[] createFromWMIC() throws Exception -->Line_3 $$ String[] command = [ CD ]
Line_10 $$ int processIdI = line.indexOf("ProcessId")-->Line_14 $$ if (processIdI == -1) [ FD ]
Line_8 $$ String line = br.readLine()-->Line_19 $$ if (line == null) [ FD ]
Line_17 $$ while (true) -->Line_25 $$ String name = line.substring(0, commandLineI).trim()[ CD ]
Line_3 $$ String[] command = -->Line_4 $$ Process p = ProcessUtils.createProcess(command, null, null)[ FD ]
Line_2 $$ private static ProcessInfo[] createFromWMIC() throws Exception -->Line_6 $$ BufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()))[ CD ]
Line_17 $$ while (true) -->Line_26 $$ String commandLine = line.substring(commandLineI, processIdI).trim()[ CD ]
Line_6 $$ BufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()))-->Line_38 $$ br.close()[ FD ]
Line_18 $$ line = br.readLine()-->Line_22 $$ if (line.trim().length() == 0) [ FD ]
Line_8 $$ String line = br.readLine()-->Line_27 $$ String processId = line.substring(processIdI, line.length()).trim()[ FD ]
Line_8 $$ String line = br.readLine()-->Line_25 $$ String name = line.substring(0, commandLineI).trim()[ FD ]
Line_8 $$ String line = br.readLine()-->Line_9 $$ int commandLineI = line.indexOf("CommandLine")[ FD ]
Line_18 $$ line = br.readLine()-->Line_25 $$ String name = line.substring(0, commandLineI).trim()[ FD ]
Line_17 $$ while (true) -->Line_28 $$ lst.add(new ProcessInfo(Integer.parseInt(processId), name + "   " + commandLine))[ CD ]
Line_8 $$ String line = br.readLine()-->Line_22 $$ if (line.trim().length() == 0) [ FD ]
