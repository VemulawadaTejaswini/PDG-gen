Line_4 $$ if (!inputFile.exists())-->Line_5 $$ return null[ CD ]
Line_10 $$ String line-->Line_12 $$ taskText.append(line).append("\n")[ FD ]
Line_9 $$ reader = new BufferedReader(new InputStreamReader(new FileInputStream(inputFile), encoding))-->Line_11 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_2 $$ public static String getFileText(@Nullable final String parentDir, @NotNull final String fileName, boolean wrapHTML, @NotNull final String encoding) -->Line_7 $$ BufferedReader reader = null[ CD ]
Line_11 $$ while ((line = reader.readLine()) != null) -->Line_12 $$ taskText.append(line).append("\n")[ FD ]
Line_11 $$ while ((line = reader.readLine()) != null) -->Line_12 $$ taskText.append(line).append("\n")[ CD ]
Line_7 $$ BufferedReader reader = null-->Line_9 $$ reader = new BufferedReader(new InputStreamReader(new FileInputStream(inputFile), encoding))[ FD ]
Line_11 $$ while ((line = reader.readLine()) != null) -->Line_13 $$ if (wrapHTML) [ CD ]
Line_9 $$ reader = new BufferedReader(new InputStreamReader(new FileInputStream(inputFile), encoding))-->Line_21 $$ closeSilently(reader)[ FD ]
Line_7 $$ BufferedReader reader = null-->Line_11 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_2 $$ public static String getFileText(@Nullable final String parentDir, @NotNull final String fileName, boolean wrapHTML, @NotNull final String encoding) -->Line_6 $$ final StringBuilder taskText = new StringBuilder()[ CD ]
Line_2 $$ public static String getFileText(@Nullable final String parentDir, @NotNull final String fileName, boolean wrapHTML, @NotNull final String encoding) -->Line_23 $$ return null[ CD ]
Line_6 $$ final StringBuilder taskText = new StringBuilder()-->Line_12 $$ taskText.append(line).append("\n")[ FD ]
Line_3 $$ final File inputFile = parentDir != null ? new File(parentDir, fileName) : new File(fileName)-->Line_4 $$ if (!inputFile.exists())[ FD ]
Line_10 $$ String line-->Line_11 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_6 $$ final StringBuilder taskText = new StringBuilder()-->Line_17 $$ return wrapHTML ? UIUtil.toHtml(taskText.toString()) : taskText.toString()[ FD ]
Line_6 $$ final StringBuilder taskText = new StringBuilder()-->Line_14 $$ taskText.append("<br>")[ FD ]
Line_2 $$ public static String getFileText(@Nullable final String parentDir, @NotNull final String fileName, boolean wrapHTML, @NotNull final String encoding) -->Line_4 $$ if (!inputFile.exists())[ CD ]
Line_7 $$ BufferedReader reader = null-->Line_21 $$ closeSilently(reader)[ FD ]
Line_13 $$ if (wrapHTML) -->Line_14 $$ taskText.append("<br>")[ CD ]
Line_2 $$ public static String getFileText(@Nullable final String parentDir, @NotNull final String fileName, boolean wrapHTML, @NotNull final String encoding) -->Line_3 $$ final File inputFile = parentDir != null ? new File(parentDir, fileName) : new File(fileName)[ CD ]
