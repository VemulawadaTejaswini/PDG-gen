Line_17 $$ String name = reader.readLine()-->Line_20 $$ name = reader.readLine()[ FD ]
Line_20 $$ name = reader.readLine()-->Line_18 $$ while (name != null) [ FD ]
Line_23 $$ int index = ThreadLocalRandom.current().nextInt(names.size())-->Line_24 $$ return names.get(index)[ FD ]
Line_2 $$ private static String randomNodeName(Path configDir) -->Line_3 $$ InputStream input[ CD ]
Line_3 $$ InputStream input-->Line_7 $$ input = Files.newInputStream(namesPath)[ FD ]
Line_16 $$ try (BufferedReader reader = new BufferedReader(new InputStreamReader(input, StandardCharsets.UTF_8))) -->Line_20 $$ name = reader.readLine()[ FD ]
Line_2 $$ private static String randomNodeName(Path configDir) -->Line_5 $$ Path namesPath = configDir.resolve("names.txt")[ FD ]
Line_7 $$ input = Files.newInputStream(namesPath)-->Line_12 $$ input = InternalSettingsPreparer.class.getResourceAsStream("/config/names.txt")[ FD ]
Line_18 $$ while (name != null) -->Line_20 $$ name = reader.readLine()[ CD ]
Line_16 $$ try (BufferedReader reader = new BufferedReader(new InputStreamReader(input, StandardCharsets.UTF_8))) -->Line_17 $$ String name = reader.readLine()[ FD ]
Line_15 $$ List<String> names = new ArrayList()-->Line_24 $$ return names.get(index)[ FD ]
Line_17 $$ String name = reader.readLine()-->Line_18 $$ while (name != null) [ FD ]
Line_17 $$ String name = reader.readLine()-->Line_19 $$ names.add(name)[ FD ]
Line_20 $$ name = reader.readLine()-->Line_19 $$ names.add(name)[ FD ]
Line_4 $$ if (configDir != null && Files.exists(configDir.resolve("names.txt"))) -->Line_5 $$ Path namesPath = configDir.resolve("names.txt")[ CD ]
Line_18 $$ while (name != null) -->Line_19 $$ names.add(name)[ CD ]
Line_15 $$ List<String> names = new ArrayList()-->Line_23 $$ int index = ThreadLocalRandom.current().nextInt(names.size())[ FD ]
Line_2 $$ private static String randomNodeName(Path configDir) -->Line_4 $$ if (configDir != null && Files.exists(configDir.resolve("names.txt"))) [ CD ]
Line_2 $$ private static String randomNodeName(Path configDir) -->Line_4 $$ if (configDir != null && Files.exists(configDir.resolve("names.txt"))) [ FD ]
Line_3 $$ InputStream input-->Line_12 $$ input = InternalSettingsPreparer.class.getResourceAsStream("/config/names.txt")[ FD ]
Line_4 $$ if (configDir != null && Files.exists(configDir.resolve("names.txt"))) -->Line_12 $$ input = InternalSettingsPreparer.class.getResourceAsStream("/config/names.txt")[ CD ]
Line_5 $$ Path namesPath = configDir.resolve("names.txt")-->Line_7 $$ input = Files.newInputStream(namesPath)[ FD ]
Line_15 $$ List<String> names = new ArrayList()-->Line_19 $$ names.add(name)[ FD ]
