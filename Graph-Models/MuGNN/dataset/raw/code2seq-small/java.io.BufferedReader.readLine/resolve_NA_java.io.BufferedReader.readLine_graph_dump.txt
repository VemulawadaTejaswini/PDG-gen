Line_11 $$ BufferedReader urlReader = new BufferedReader(new InputStreamReader(in, StandardCharsets.UTF_8))-->Line_12 $$ String metadataResult = urlReader.readLine()[ FD ]
Line_2 $$ public InetAddress[] resolve(Ec2HostnameType type) throws IOException -->Line_3 $$ InputStream in = null[ CD ]
Line_8 $$ URLConnection urlConnection = url.openConnection()-->Line_9 $$ urlConnection.setConnectTimeout(2000)[ FD ]
Line_3 $$ InputStream in = null-->Line_20 $$ IOUtils.closeWhileHandlingException(in)[ FD ]
Line_6 $$ URL url = new URL(metadataUrl)-->Line_8 $$ URLConnection urlConnection = url.openConnection()[ FD ]
Line_10 $$ in = urlConnection.getInputStream()-->Line_20 $$ IOUtils.closeWhileHandlingException(in)[ FD ]
Line_3 $$ InputStream in = null-->Line_10 $$ in = urlConnection.getInputStream()[ FD ]
Line_2 $$ public InetAddress[] resolve(Ec2HostnameType type) throws IOException -->Line_4 $$ String metadataUrl = AwsEc2ServiceImpl.EC2_METADATA_URL + type.ec2Name[ CD ]
Line_6 $$ URL url = new URL(metadataUrl)-->Line_7 $$ logger.debug("obtaining ec2 hostname from ec2 meta-data url [ FD ]
Line_12 $$ String metadataResult = urlReader.readLine()-->Line_16 $$ return new InetAddress[] [ FD ]
Line_12 $$ String metadataResult = urlReader.readLine()-->Line_13 $$ if (metadataResult == null || metadataResult.length() == 0) [ FD ]
Line_8 $$ URLConnection urlConnection = url.openConnection()-->Line_10 $$ in = urlConnection.getInputStream()[ FD ]
