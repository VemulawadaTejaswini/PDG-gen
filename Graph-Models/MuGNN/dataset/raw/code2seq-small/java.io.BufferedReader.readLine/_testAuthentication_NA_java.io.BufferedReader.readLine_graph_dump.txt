Line_10 $$ HttpURLConnection conn = aUrl.openConnection(url, token)-->Line_25 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_13 $$ if (doPost) -->Line_14 $$ conn.setRequestMethod("POST")[ CD ]
Line_31 $$ conn = aUrl.openConnection(url, token)-->Line_32 $$ conn.connect()[ FD ]
Line_25 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_28 $$ Assert.assertNull(reader.readLine())[ FD ]
Line_6 $$ AuthenticatedURL.Token token = new AuthenticatedURL.Token()-->Line_12 $$ String tokenStr = token.toString()[ FD ]
Line_18 $$ if (doPost) -->Line_20 $$ writer.write(POST)[ CD ]
Line_10 $$ HttpURLConnection conn = aUrl.openConnection(url, token)-->Line_23 $$ Assert.assertEquals(HttpURLConnection.HTTP_OK, conn.getResponseCode())[ FD ]
Line_6 $$ AuthenticatedURL.Token token = new AuthenticatedURL.Token()-->Line_10 $$ HttpURLConnection conn = aUrl.openConnection(url, token)[ FD ]
Line_18 $$ if (doPost) -->Line_19 $$ Writer writer = new OutputStreamWriter(conn.getOutputStream())[ CD ]
Line_2 $$ protected void _testAuthentication(Authenticator authenticator, boolean doPost) throws Exception -->Line_3 $$ start()[ CD ]
Line_6 $$ AuthenticatedURL.Token token = new AuthenticatedURL.Token()-->Line_31 $$ conn = aUrl.openConnection(url, token)[ FD ]
Line_9 $$ AuthenticatedURL aUrl = new AuthenticatedURL(authenticator, connConf)-->Line_31 $$ conn = aUrl.openConnection(url, token)[ FD ]
Line_10 $$ HttpURLConnection conn = aUrl.openConnection(url, token)-->Line_15 $$ conn.setDoOutput(true)[ FD ]
Line_13 $$ if (doPost) -->Line_15 $$ conn.setDoOutput(true)[ CD ]
Line_19 $$ Writer writer = new OutputStreamWriter(conn.getOutputStream())-->Line_20 $$ writer.write(POST)[ FD ]
Line_19 $$ Writer writer = new OutputStreamWriter(conn.getOutputStream())-->Line_21 $$ writer.close()[ FD ]
Line_24 $$ if (doPost) -->Line_27 $$ Assert.assertEquals(POST, echo)[ CD ]
Line_5 $$ URL url = new URL(getBaseURL())-->Line_31 $$ conn = aUrl.openConnection(url, token)[ FD ]
Line_10 $$ HttpURLConnection conn = aUrl.openConnection(url, token)-->Line_14 $$ conn.setRequestMethod("POST")[ FD ]
Line_31 $$ conn = aUrl.openConnection(url, token)-->Line_33 $$ Assert.assertEquals(HttpURLConnection.HTTP_OK, conn.getResponseCode())[ FD ]
Line_12 $$ String tokenStr = token.toString()-->Line_34 $$ Assert.assertEquals(tokenStr, token.toString())[ FD ]
Line_10 $$ HttpURLConnection conn = aUrl.openConnection(url, token)-->Line_31 $$ conn = aUrl.openConnection(url, token)[ FD ]
Line_30 $$ aUrl = new AuthenticatedURL()-->Line_31 $$ conn = aUrl.openConnection(url, token)[ FD ]
Line_25 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_26 $$ String echo = reader.readLine()[ FD ]
Line_24 $$ if (doPost) -->Line_28 $$ Assert.assertNull(reader.readLine())[ CD ]
Line_10 $$ HttpURLConnection conn = aUrl.openConnection(url, token)-->Line_19 $$ Writer writer = new OutputStreamWriter(conn.getOutputStream())[ FD ]
Line_24 $$ if (doPost) -->Line_25 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ CD ]
Line_10 $$ HttpURLConnection conn = aUrl.openConnection(url, token)-->Line_33 $$ Assert.assertEquals(HttpURLConnection.HTTP_OK, conn.getResponseCode())[ FD ]
Line_26 $$ String echo = reader.readLine()-->Line_27 $$ Assert.assertEquals(POST, echo)[ FD ]
Line_9 $$ AuthenticatedURL aUrl = new AuthenticatedURL(authenticator, connConf)-->Line_30 $$ aUrl = new AuthenticatedURL()[ FD ]
Line_5 $$ URL url = new URL(getBaseURL())-->Line_10 $$ HttpURLConnection conn = aUrl.openConnection(url, token)[ FD ]
Line_24 $$ if (doPost) -->Line_26 $$ String echo = reader.readLine()[ CD ]
Line_9 $$ AuthenticatedURL aUrl = new AuthenticatedURL(authenticator, connConf)-->Line_10 $$ HttpURLConnection conn = aUrl.openConnection(url, token)[ FD ]
Line_6 $$ AuthenticatedURL.Token token = new AuthenticatedURL.Token()-->Line_34 $$ Assert.assertEquals(tokenStr, token.toString())[ FD ]
Line_6 $$ AuthenticatedURL.Token token = new AuthenticatedURL.Token()-->Line_7 $$ Assert.assertFalse(token.isSet())[ FD ]
Line_10 $$ HttpURLConnection conn = aUrl.openConnection(url, token)-->Line_32 $$ conn.connect()[ FD ]
Line_18 $$ if (doPost) -->Line_21 $$ writer.close()[ CD ]
Line_10 $$ HttpURLConnection conn = aUrl.openConnection(url, token)-->Line_17 $$ conn.connect()[ FD ]
