Line_25 $$ if ("https".equals(expectedScheme)) -->Line_27 $$ return[ CD ]
Line_3 $$ final ModelNode address = new ModelNode()-->Line_4 $$ address.add(DEPLOYMENT, deploymentName)[ FD ]
Line_2 $$ private void checkWSDLUriScheme(final ModelControllerClient managementClient, String deploymentName, String expectedScheme) throws Exception -->Line_4 $$ address.add(DEPLOYMENT, deploymentName)[ FD ]
Line_16 $$ final URL wsdlURL = new URL(endpoint.get("wsdl-url").asString())-->Line_17 $$ HttpURLConnection connection = (HttpURLConnection) wsdlURL.openConnection()[ FD ]
Line_17 $$ HttpURLConnection connection = (HttpURLConnection) wsdlURL.openConnection()-->Line_20 $$ Assert.assertEquals(200, connection.getResponseCode())[ FD ]
Line_12 $$ ModelNode result = managementClient.execute(operation)-->Line_14 $$ for (final ModelNode endpointResult : result.get("result").asList()) [ FD ]
Line_17 $$ HttpURLConnection connection = (HttpURLConnection) wsdlURL.openConnection()-->Line_21 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()))[ FD ]
Line_2 $$ private void checkWSDLUriScheme(final ModelControllerClient managementClient, String deploymentName, String expectedScheme) throws Exception -->Line_12 $$ ModelNode result = managementClient.execute(operation)[ FD ]
Line_23 $$ while ((line = in.readLine()) != null) -->Line_24 $$ if (line.contains("address location")) [ FD ]
Line_22 $$ String line-->Line_24 $$ if (line.contains("address location")) [ FD ]
Line_3 $$ final ModelNode address = new ModelNode()-->Line_9 $$ operation.get(OP_ADDR).set(address)[ FD ]
Line_14 $$ for (final ModelNode endpointResult : result.get("result").asList()) -->Line_15 $$ final ModelNode endpoint = endpointResult.get("result")[ FD ]
Line_2 $$ private void checkWSDLUriScheme(final ModelControllerClient managementClient, String deploymentName, String expectedScheme) throws Exception -->Line_4 $$ address.add(DEPLOYMENT, deploymentName)[ CD ]
Line_2 $$ private void checkWSDLUriScheme(final ModelControllerClient managementClient, String deploymentName, String expectedScheme) throws Exception -->Line_5 $$ address.add(SUBSYSTEM, "webservices")[ CD ]
Line_17 $$ HttpURLConnection connection = (HttpURLConnection) wsdlURL.openConnection()-->Line_19 $$ connection.connect()[ FD ]
Line_23 $$ while ((line = in.readLine()) != null) -->Line_24 $$ if (line.contains("address location")) [ CD ]
Line_2 $$ private void checkWSDLUriScheme(final ModelControllerClient managementClient, String deploymentName, String expectedScheme) throws Exception -->Line_3 $$ final ModelNode address = new ModelNode()[ CD ]
Line_22 $$ String line-->Line_26 $$ Assert.assertTrue(line, line.contains("https"))[ FD ]
Line_2 $$ private void checkWSDLUriScheme(final ModelControllerClient managementClient, String deploymentName, String expectedScheme) throws Exception -->Line_11 $$ operation.get(RECURSIVE).set(true)[ CD ]
Line_17 $$ HttpURLConnection connection = (HttpURLConnection) wsdlURL.openConnection()-->Line_36 $$ connection.disconnect()[ FD ]
Line_2 $$ private void checkWSDLUriScheme(final ModelControllerClient managementClient, String deploymentName, String expectedScheme) throws Exception -->Line_12 $$ ModelNode result = managementClient.execute(operation)[ CD ]
Line_22 $$ String line-->Line_29 $$ Assert.assertTrue(line, line.contains("http") && !line.contains("https"))[ FD ]
Line_7 $$ final ModelNode operation = new ModelNode()-->Line_10 $$ operation.get(INCLUDE_RUNTIME).set(true)[ FD ]
Line_2 $$ private void checkWSDLUriScheme(final ModelControllerClient managementClient, String deploymentName, String expectedScheme) throws Exception -->Line_6 $$ address.add("endpoint", "*")[ CD ]
Line_2 $$ private void checkWSDLUriScheme(final ModelControllerClient managementClient, String deploymentName, String expectedScheme) throws Exception -->Line_7 $$ final ModelNode operation = new ModelNode()[ CD ]
Line_7 $$ final ModelNode operation = new ModelNode()-->Line_12 $$ ModelNode result = managementClient.execute(operation)[ FD ]
Line_23 $$ while ((line = in.readLine()) != null) -->Line_26 $$ Assert.assertTrue(line, line.contains("https"))[ FD ]
Line_25 $$ if ("https".equals(expectedScheme)) -->Line_30 $$ return[ CD ]
Line_7 $$ final ModelNode operation = new ModelNode()-->Line_11 $$ operation.get(RECURSIVE).set(true)[ FD ]
Line_24 $$ if (line.contains("address location")) -->Line_25 $$ if ("https".equals(expectedScheme)) [ CD ]
Line_22 $$ String line-->Line_23 $$ while ((line = in.readLine()) != null) [ FD ]
Line_25 $$ if ("https".equals(expectedScheme)) -->Line_26 $$ Assert.assertTrue(line, line.contains("https"))[ CD ]
Line_2 $$ private void checkWSDLUriScheme(final ModelControllerClient managementClient, String deploymentName, String expectedScheme) throws Exception -->Line_9 $$ operation.get(OP_ADDR).set(address)[ CD ]
Line_2 $$ private void checkWSDLUriScheme(final ModelControllerClient managementClient, String deploymentName, String expectedScheme) throws Exception -->Line_10 $$ operation.get(INCLUDE_RUNTIME).set(true)[ CD ]
Line_3 $$ final ModelNode address = new ModelNode()-->Line_6 $$ address.add("endpoint", "*")[ FD ]
Line_2 $$ private void checkWSDLUriScheme(final ModelControllerClient managementClient, String deploymentName, String expectedScheme) throws Exception -->Line_13 $$ Assert.assertEquals(SUCCESS, result.get(OUTCOME).asString())[ CD ]
Line_21 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()))-->Line_23 $$ while ((line = in.readLine()) != null) [ FD ]
Line_12 $$ ModelNode result = managementClient.execute(operation)-->Line_13 $$ Assert.assertEquals(SUCCESS, result.get(OUTCOME).asString())[ FD ]
Line_15 $$ final ModelNode endpoint = endpointResult.get("result")-->Line_16 $$ final URL wsdlURL = new URL(endpoint.get("wsdl-url").asString())[ FD ]
Line_25 $$ if ("https".equals(expectedScheme)) -->Line_29 $$ Assert.assertTrue(line, line.contains("http") && !line.contains("https"))[ CD ]
Line_7 $$ final ModelNode operation = new ModelNode()-->Line_9 $$ operation.get(OP_ADDR).set(address)[ FD ]
Line_3 $$ final ModelNode address = new ModelNode()-->Line_5 $$ address.add(SUBSYSTEM, "webservices")[ FD ]
Line_7 $$ final ModelNode operation = new ModelNode()-->Line_8 $$ operation.get(OP).set(READ_RESOURCE_OPERATION)[ FD ]
Line_2 $$ private void checkWSDLUriScheme(final ModelControllerClient managementClient, String deploymentName, String expectedScheme) throws Exception -->Line_8 $$ operation.get(OP).set(READ_RESOURCE_OPERATION)[ CD ]
Line_2 $$ private void checkWSDLUriScheme(final ModelControllerClient managementClient, String deploymentName, String expectedScheme) throws Exception -->Line_25 $$ if ("https".equals(expectedScheme)) [ FD ]
Line_23 $$ while ((line = in.readLine()) != null) -->Line_29 $$ Assert.assertTrue(line, line.contains("http") && !line.contains("https"))[ FD ]
