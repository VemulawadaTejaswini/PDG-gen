Line_2 $$ public synchronized Compute client() -->Line_3 $$ if (refreshInterval != null && refreshInterval.millis() != 0) [ CD ]
Line_15 $$ SecurityManager sm = System.getSecurityManager()-->Line_17 $$ sm.checkPermission(new SpecialPermission())[ FD ]
Line_5 $$ if (logger.isTraceEnabled())-->Line_6 $$ logger.trace("using cache to retrieve client")[ CD ]
Line_3 $$ if (refreshInterval != null && refreshInterval.millis() != 0) -->Line_9 $$ lastRefresh = System.currentTimeMillis()[ CD ]
Line_14 $$ ComputeCredential credential = new ComputeCredential.Builder(getGceHttpTransport(), gceJsonFactory).setTokenServerEncodedUrl(TOKEN_SERVER_ENCODED_URL).build()-->Line_21 $$ credential.refreshToken()[ FD ]
Line_26 $$ if (credential.getExpiresInSeconds() != null) -->Line_27 $$ refreshInterval = TimeValue.timeValueSeconds(credential.getExpiresInSeconds() - 1)[ CD ]
Line_2 $$ public synchronized Compute client() -->Line_48 $$ return this.client[ CD ]
Line_31 $$ if (ifRetry) -->Line_34 $$ if (maxWait > 0) [ CD ]
Line_4 $$ if (client != null && (refreshInterval.millis() < 0 || (System.currentTimeMillis() - lastRefresh) < refreshInterval.millis())) -->Line_5 $$ if (logger.isTraceEnabled())[ CD ]
Line_14 $$ ComputeCredential credential = new ComputeCredential.Builder(getGceHttpTransport(), gceJsonFactory).setTokenServerEncodedUrl(TOKEN_SERVER_ENCODED_URL).build()-->Line_25 $$ logger.debug("token [[ FD ]
Line_15 $$ SecurityManager sm = System.getSecurityManager()-->Line_16 $$ if (sm != null) [ FD ]
Line_19 $$ AccessController.doPrivileged(new PrivilegedExceptionAction<Void>() -->Line_21 $$ credential.refreshToken()[ CD ]
Line_31 $$ if (ifRetry) -->Line_32 $$ int maxWait = settings.getAsInt(Fields.MAXWAIT, -1)[ CD ]
Line_14 $$ ComputeCredential credential = new ComputeCredential.Builder(getGceHttpTransport(), gceJsonFactory).setTokenServerEncodedUrl(TOKEN_SERVER_ENCODED_URL).build()-->Line_27 $$ refreshInterval = TimeValue.timeValueSeconds(credential.getExpiresInSeconds() - 1)[ FD ]
Line_31 $$ if (ifRetry) -->Line_39 $$ builder.setHttpRequestInitializer(retryHttpInitializerWrapper)[ CD ]
Line_14 $$ ComputeCredential credential = new ComputeCredential.Builder(getGceHttpTransport(), gceJsonFactory).setTokenServerEncodedUrl(TOKEN_SERVER_ENCODED_URL).build()-->Line_26 $$ if (credential.getExpiresInSeconds() != null) [ FD ]
Line_31 $$ if (ifRetry) -->Line_41 $$ builder.setHttpRequestInitializer(credential)[ CD ]
Line_4 $$ if (client != null && (refreshInterval.millis() < 0 || (System.currentTimeMillis() - lastRefresh) < refreshInterval.millis())) -->Line_7 $$ return client[ CD ]
Line_19 $$ AccessController.doPrivileged(new PrivilegedExceptionAction<Void>() -->Line_22 $$ return null[ CD ]
Line_16 $$ if (sm != null) -->Line_17 $$ sm.checkPermission(new SpecialPermission())[ CD ]
Line_14 $$ ComputeCredential credential = new ComputeCredential.Builder(getGceHttpTransport(), gceJsonFactory).setTokenServerEncodedUrl(TOKEN_SERVER_ENCODED_URL).build()-->Line_41 $$ builder.setHttpRequestInitializer(credential)[ FD ]
Line_3 $$ if (refreshInterval != null && refreshInterval.millis() != 0) -->Line_4 $$ if (client != null && (refreshInterval.millis() < 0 || (System.currentTimeMillis() - lastRefresh) < refreshInterval.millis())) [ CD ]
