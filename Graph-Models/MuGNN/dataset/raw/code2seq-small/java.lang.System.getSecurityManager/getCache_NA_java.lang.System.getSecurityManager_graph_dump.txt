Line_2 $$ public <K, V> Cache<K, V> getCache(String cacheName, String configurationName) -->Line_5 $$ return (cache != null) ? new DefaultCache(this, this.batcherFactory, cache.getAdvancedCache()) : null[ CD ]
Line_2 $$ public <K, V> Cache<K, V> getCache(String cacheName, String configurationName) -->Line_4 $$ Cache<K, V> cache = (System.getSecurityManager() == null) ? action.run() : AccessController.doPrivileged(action)[ CD ]
Line_2 $$ public <K, V> Cache<K, V> getCache(String cacheName, String configurationName) -->Line_3 $$ PrivilegedAction<Cache<K, V>> action = () -> this.cm.<K, V>getCache(this.getCacheName(cacheName), this.getCacheName(configurationName))[ CD ]
Line_3 $$ PrivilegedAction<Cache<K, V>> action = () -> this.cm.<K, V>getCache(this.getCacheName(cacheName), this.getCacheName(configurationName))-->Line_4 $$ Cache<K, V> cache = (System.getSecurityManager() == null) ? action.run() : AccessController.doPrivileged(action)[ FD ]
Line_2 $$ public <K, V> Cache<K, V> getCache(String cacheName, String configurationName) -->Line_3 $$ this.cm.<K, V>getCache(this.getCacheName(cacheName), this.getCacheName(configurationName))[ FD ]
Line_4 $$ Cache<K, V> cache = (System.getSecurityManager() == null) ? action.run() : AccessController.doPrivileged(action)-->Line_5 $$ return (cache != null) ? new DefaultCache(this, this.batcherFactory, cache.getAdvancedCache()) : null[ FD ]
