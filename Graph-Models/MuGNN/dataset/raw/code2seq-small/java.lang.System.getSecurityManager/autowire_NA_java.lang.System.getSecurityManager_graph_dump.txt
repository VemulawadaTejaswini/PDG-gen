Line_3 $$ final RootBeanDefinition bd = new RootBeanDefinition(beanClass, autowireMode, dependencyCheck)-->Line_4 $$ bd.setScope(BeanDefinition.SCOPE_PROTOTYPE)[ FD ]
Line_3 $$ final RootBeanDefinition bd = new RootBeanDefinition(beanClass, autowireMode, dependencyCheck)-->Line_5 $$ if (bd.getResolvedAutowireMode() == AUTOWIRE_CONSTRUCTOR) [ FD ]
Line_3 $$ final RootBeanDefinition bd = new RootBeanDefinition(beanClass, autowireMode, dependencyCheck)-->Line_13 $$ return getInstantiationStrategy().instantiate(bd, null, parent)[ FD ]
Line_2 $$ public Object autowire(Class<?> beanClass, int autowireMode, boolean dependencyCheck) throws BeansException -->Line_5 $$ if (bd.getResolvedAutowireMode() == AUTOWIRE_CONSTRUCTOR) [ CD ]
Line_5 $$ if (bd.getResolvedAutowireMode() == AUTOWIRE_CONSTRUCTOR) -->Line_19 $$ populateBean(beanClass.getName(), bd, new BeanWrapperImpl(bean))[ CD ]
Line_11 $$ bean = AccessController.doPrivileged(new PrivilegedAction<Object>() -->Line_13 $$ return getInstantiationStrategy().instantiate(bd, null, parent)[ CD ]
Line_2 $$ public Object autowire(Class<?> beanClass, int autowireMode, boolean dependencyCheck) throws BeansException -->Line_4 $$ bd.setScope(BeanDefinition.SCOPE_PROTOTYPE)[ CD ]
Line_5 $$ if (bd.getResolvedAutowireMode() == AUTOWIRE_CONSTRUCTOR) -->Line_9 $$ final BeanFactory parent = this[ CD ]
Line_3 $$ final RootBeanDefinition bd = new RootBeanDefinition(beanClass, autowireMode, dependencyCheck)-->Line_19 $$ populateBean(beanClass.getName(), bd, new BeanWrapperImpl(bean))[ FD ]
Line_2 $$ public Object autowire(Class<?> beanClass, int autowireMode, boolean dependencyCheck) throws BeansException -->Line_19 $$ populateBean(beanClass.getName(), bd, new BeanWrapperImpl(bean))[ FD ]
Line_9 $$ final BeanFactory parent = this-->Line_13 $$ return getInstantiationStrategy().instantiate(bd, null, parent)[ FD ]
Line_9 $$ final BeanFactory parent = this-->Line_17 $$ bean = getInstantiationStrategy().instantiate(bd, null, parent)[ FD ]
Line_3 $$ final RootBeanDefinition bd = new RootBeanDefinition(beanClass, autowireMode, dependencyCheck)-->Line_17 $$ bean = getInstantiationStrategy().instantiate(bd, null, parent)[ FD ]
Line_2 $$ public Object autowire(Class<?> beanClass, int autowireMode, boolean dependencyCheck) throws BeansException -->Line_3 $$ final RootBeanDefinition bd = new RootBeanDefinition(beanClass, autowireMode, dependencyCheck)[ CD ]
Line_5 $$ if (bd.getResolvedAutowireMode() == AUTOWIRE_CONSTRUCTOR) -->Line_10 $$ if (System.getSecurityManager() != null) [ CD ]
Line_2 $$ public Object autowire(Class<?> beanClass, int autowireMode, boolean dependencyCheck) throws BeansException -->Line_6 $$ return autowireConstructor(beanClass.getName(), bd, null, null).getWrappedInstance()[ FD ]
Line_5 $$ if (bd.getResolvedAutowireMode() == AUTOWIRE_CONSTRUCTOR) -->Line_20 $$ return bean[ CD ]
Line_5 $$ if (bd.getResolvedAutowireMode() == AUTOWIRE_CONSTRUCTOR) -->Line_8 $$ Object bean[ CD ]
Line_8 $$ Object bean-->Line_11 $$ bean = AccessController.doPrivileged(new PrivilegedAction<Object>() [ FD ]
Line_10 $$ if (System.getSecurityManager() != null) -->Line_17 $$ bean = getInstantiationStrategy().instantiate(bd, null, parent)[ CD ]
Line_3 $$ final RootBeanDefinition bd = new RootBeanDefinition(beanClass, autowireMode, dependencyCheck)-->Line_6 $$ return autowireConstructor(beanClass.getName(), bd, null, null).getWrappedInstance()[ FD ]
Line_5 $$ if (bd.getResolvedAutowireMode() == AUTOWIRE_CONSTRUCTOR) -->Line_6 $$ return autowireConstructor(beanClass.getName(), bd, null, null).getWrappedInstance()[ CD ]
Line_10 $$ if (System.getSecurityManager() != null) -->Line_11 $$ bean = AccessController.doPrivileged(new PrivilegedAction<Object>() [ CD ]
