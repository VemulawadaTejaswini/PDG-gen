Line_3 $$ for (String key : _PROPS_VALUES_BOOLEAN) -->Line_4 $$ String fieldName = StringUtil.replace(StringUtil.toUpperCase(key), CharPool.PERIOD, CharPool.UNDERLINE)[ FD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_31 $$ if (!containsKey(portalProperties, key)) [ FD ]
Line_71 $$ if (containsKey(portalProperties, PORTLET_ADD_DEFAULT_RESOURCE_CHECK_WHITELIST)) -->Line_72 $$ AuthTokenWhitelistUtil.resetPortletInvocationWhitelist()[ CD ]
Line_74 $$ if (containsKey(portalProperties, PORTLET_ADD_DEFAULT_RESOURCE_CHECK_WHITELIST_ACTIONS)) -->Line_75 $$ AuthTokenWhitelistUtil.resetPortletInvocationWhitelistActions()[ CD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_80 $$ if (containsKey(portalProperties, PORTLET_INTERRUPTED_REQUEST_WHITELIST_ACTIONS)) [ CD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_56 $$ resetPortalPropertiesStringArray(servletContextName, portalProperties, initPhase, _PROPS_VALUES_OVERRIDE_STRING_ARRAY, _overrideStringArraysContainerMap)[ FD ]
Line_3 $$ for (String key : _PROPS_VALUES_BOOLEAN) -->Line_23 $$ Integer value = Integer.valueOf(GetterUtil.getInteger(PropsUtil.get(key)))[ FD ]
Line_80 $$ if (containsKey(portalProperties, PORTLET_INTERRUPTED_REQUEST_WHITELIST_ACTIONS)) -->Line_81 $$ InterruptedPortletRequestWhitelistUtil.resetPortletInvocationWhitelistActions()[ CD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_83 $$ CacheUtil.clearCache()[ CD ]
Line_9 $$ Field field = PropsValues.class.getField(fieldName)-->Line_11 $$ field.setBoolean(null, value)[ FD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_57 $$ if (containsKey(portalProperties, LOCALES) || containsKey(portalProperties, LOCALES_BETA)) [ FD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_71 $$ if (containsKey(portalProperties, PORTLET_ADD_DEFAULT_RESOURCE_CHECK_WHITELIST)) [ CD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_80 $$ if (containsKey(portalProperties, PORTLET_INTERRUPTED_REQUEST_WHITELIST_ACTIONS)) [ FD ]
Line_3 $$ for (String key : _PROPS_VALUES_BOOLEAN) -->Line_5 $$ if (!containsKey(portalProperties, key)) [ FD ]
Line_3 $$ for (String key : _PROPS_VALUES_BOOLEAN) -->Line_10 $$ Boolean value = Boolean.valueOf(GetterUtil.getBoolean(PropsUtil.get(key)))[ FD ]
Line_4 $$ String fieldName = StringUtil.replace(StringUtil.toUpperCase(key), CharPool.PERIOD, CharPool.UNDERLINE)-->Line_22 $$ Field field = PropsValues.class.getField(fieldName)[ FD ]
Line_3 $$ for (String key : _PROPS_VALUES_BOOLEAN) -->Line_18 $$ if (!containsKey(portalProperties, key)) [ FD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_56 $$ resetPortalPropertiesStringArray(servletContextName, portalProperties, initPhase, _PROPS_VALUES_OVERRIDE_STRING_ARRAY, _overrideStringArraysContainerMap)[ CD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_55 $$ resetPortalPropertiesStringArray(servletContextName, portalProperties, initPhase, _PROPS_VALUES_MERGE_STRING_ARRAY, _mergeStringArraysContainerMap)[ FD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_77 $$ if (containsKey(portalProperties, PORTLET_INTERRUPTED_REQUEST_WHITELIST)) [ CD ]
Line_77 $$ if (containsKey(portalProperties, PORTLET_INTERRUPTED_REQUEST_WHITELIST)) -->Line_78 $$ InterruptedPortletRequestWhitelistUtil.resetPortletInvocationWhitelist()[ CD ]
Line_68 $$ if (containsKey(portalProperties, AUTH_TOKEN_IGNORE_PORTLETS)) -->Line_69 $$ AuthTokenWhitelistUtil.resetPortletCSRFWhitelist()[ CD ]
Line_61 $$ if (containsKey(portalProperties, LOCALES_ENABLED)) -->Line_62 $$ PropsValues.LOCALES_ENABLED = PropsUtil.getArray(LOCALES_ENABLED)[ CD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_65 $$ if (containsKey(portalProperties, AUTH_TOKEN_IGNORE_ORIGINS)) [ CD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_61 $$ if (containsKey(portalProperties, LOCALES_ENABLED)) [ CD ]
Line_3 $$ for (String key : _PROPS_VALUES_BOOLEAN) -->Line_36 $$ Long value = Long.valueOf(GetterUtil.getLong(PropsUtil.get(key)))[ FD ]
Line_3 $$ for (String key : _PROPS_VALUES_BOOLEAN) -->Line_31 $$ if (!containsKey(portalProperties, key)) [ FD ]
Line_61 $$ if (containsKey(portalProperties, LOCALES_ENABLED)) -->Line_63 $$ LanguageUtil.init()[ CD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_65 $$ if (containsKey(portalProperties, AUTH_TOKEN_IGNORE_ORIGINS)) [ FD ]
Line_65 $$ if (containsKey(portalProperties, AUTH_TOKEN_IGNORE_ORIGINS)) -->Line_66 $$ AuthTokenWhitelistUtil.resetOriginCSRFWhitelist()[ CD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_74 $$ if (containsKey(portalProperties, PORTLET_ADD_DEFAULT_RESOURCE_CHECK_WHITELIST_ACTIONS)) [ CD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_57 $$ if (containsKey(portalProperties, LOCALES) || containsKey(portalProperties, LOCALES_BETA)) [ CD ]
Line_10 $$ Boolean value = Boolean.valueOf(GetterUtil.getBoolean(PropsUtil.get(key)))-->Line_11 $$ field.setBoolean(null, value)[ FD ]
Line_3 $$ for (String key : _PROPS_VALUES_BOOLEAN) -->Line_44 $$ if (!containsKey(portalProperties, key)) [ FD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_61 $$ if (containsKey(portalProperties, LOCALES_ENABLED)) [ FD ]
Line_9 $$ Field field = PropsValues.class.getField(fieldName)-->Line_50 $$ field.set(null, value)[ FD ]
Line_57 $$ if (containsKey(portalProperties, LOCALES) || containsKey(portalProperties, LOCALES_BETA)) -->Line_59 $$ LanguageUtil.init()[ CD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_68 $$ if (containsKey(portalProperties, AUTH_TOKEN_IGNORE_PORTLETS)) [ FD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_74 $$ if (containsKey(portalProperties, PORTLET_ADD_DEFAULT_RESOURCE_CHECK_WHITELIST_ACTIONS)) [ FD ]
Line_10 $$ Boolean value = Boolean.valueOf(GetterUtil.getBoolean(PropsUtil.get(key)))-->Line_24 $$ field.setInt(null, value)[ FD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_18 $$ if (!containsKey(portalProperties, key)) [ FD ]
Line_4 $$ String fieldName = StringUtil.replace(StringUtil.toUpperCase(key), CharPool.PERIOD, CharPool.UNDERLINE)-->Line_48 $$ Field field = PropsValues.class.getField(fieldName)[ FD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_77 $$ if (containsKey(portalProperties, PORTLET_INTERRUPTED_REQUEST_WHITELIST)) [ FD ]
Line_3 $$ for (String key : _PROPS_VALUES_BOOLEAN) -->Line_43 $$ String fieldName = StringUtil.replace(StringUtil.toUpperCase(key), CharPool.PERIOD, CharPool.UNDERLINE)[ FD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_71 $$ if (containsKey(portalProperties, PORTLET_ADD_DEFAULT_RESOURCE_CHECK_WHITELIST)) [ FD ]
Line_3 $$ for (String key : _PROPS_VALUES_BOOLEAN) -->Line_17 $$ String fieldName = StringUtil.replace(StringUtil.toUpperCase(key), CharPool.PERIOD, CharPool.UNDERLINE)[ FD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_84 $$ JavaScriptBundleUtil.clearCache()[ CD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_5 $$ if (!containsKey(portalProperties, key)) [ FD ]
Line_4 $$ String fieldName = StringUtil.replace(StringUtil.toUpperCase(key), CharPool.PERIOD, CharPool.UNDERLINE)-->Line_35 $$ Field field = PropsValues.class.getField(fieldName)[ FD ]
Line_10 $$ Boolean value = Boolean.valueOf(GetterUtil.getBoolean(PropsUtil.get(key)))-->Line_50 $$ field.set(null, value)[ FD ]
Line_3 $$ for (String key : _PROPS_VALUES_BOOLEAN) -->Line_30 $$ String fieldName = StringUtil.replace(StringUtil.toUpperCase(key), CharPool.PERIOD, CharPool.UNDERLINE)[ FD ]
Line_3 $$ for (String key : _PROPS_VALUES_BOOLEAN) -->Line_49 $$ String value = GetterUtil.getString(PropsUtil.get(key))[ FD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_55 $$ resetPortalPropertiesStringArray(servletContextName, portalProperties, initPhase, _PROPS_VALUES_MERGE_STRING_ARRAY, _mergeStringArraysContainerMap)[ CD ]
Line_57 $$ if (containsKey(portalProperties, LOCALES) || containsKey(portalProperties, LOCALES_BETA)) -->Line_58 $$ PropsValues.LOCALES = PropsUtil.getArray(LOCALES)[ CD ]
Line_9 $$ Field field = PropsValues.class.getField(fieldName)-->Line_24 $$ field.setInt(null, value)[ FD ]
Line_4 $$ String fieldName = StringUtil.replace(StringUtil.toUpperCase(key), CharPool.PERIOD, CharPool.UNDERLINE)-->Line_9 $$ Field field = PropsValues.class.getField(fieldName)[ FD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_44 $$ if (!containsKey(portalProperties, key)) [ FD ]
Line_2 $$ protected void resetPortalProperties(String servletContextName, Properties portalProperties, boolean initPhase) throws Exception -->Line_68 $$ if (containsKey(portalProperties, AUTH_TOKEN_IGNORE_PORTLETS)) [ CD ]
Line_10 $$ Boolean value = Boolean.valueOf(GetterUtil.getBoolean(PropsUtil.get(key)))-->Line_37 $$ field.setLong(null, value)[ FD ]
Line_9 $$ Field field = PropsValues.class.getField(fieldName)-->Line_37 $$ field.setLong(null, value)[ FD ]
