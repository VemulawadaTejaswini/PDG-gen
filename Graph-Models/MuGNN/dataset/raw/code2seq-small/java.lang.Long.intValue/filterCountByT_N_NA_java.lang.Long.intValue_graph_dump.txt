Line_15 $$ if (names.length > 0) -->Line_30 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_2 $$ public int filterCountByT_N(long tableId, String[] names) -->Line_6 $$ if (names == null) [ FD ]
Line_7 $$ names = new String[0]-->Line_10 $$ Arrays.sort(names, NULL_SAFE_STRING_COMPARATOR)[ FD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_30 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_2 $$ public int filterCountByT_N(long tableId, String[] names) -->Line_9 $$ names = ArrayUtil.distinct(names, NULL_SAFE_STRING_COMPARATOR)[ FD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_24 $$ query.append(_FINDER_COLUMN_T_N_NAME_2)[ FD ]
Line_34 $$ Session session = null-->Line_51 $$ closeSession(session)[ FD ]
Line_18 $$ String name = names[i]-->Line_21 $$ if (name.equals(StringPool.BLANK)) [ FD ]
Line_21 $$ if (name.equals(StringPool.BLANK)) -->Line_22 $$ query.append(_FINDER_COLUMN_T_N_NAME_3)[ CD ]
Line_21 $$ if (name.equals(StringPool.BLANK)) -->Line_24 $$ query.append(_FINDER_COLUMN_T_N_NAME_2)[ CD ]
Line_17 $$ for (int i = 0; i < names.length; i++) -->Line_26 $$ if ((i + 1) < names.length) [ CD ]
Line_2 $$ public int filterCountByT_N(long tableId, String[] names) -->Line_34 $$ Session session = null[ CD ]
Line_41 $$ for (String name : names) -->Line_43 $$ qPos.add(name)[ FD ]
Line_15 $$ if (names.length > 0) -->Line_17 $$ for (int i = 0; i < names.length; i++) [ CD ]
Line_18 $$ String name = names[i]-->Line_19 $$ if (name == null) [ FD ]
Line_2 $$ public int filterCountByT_N(long tableId, String[] names) -->Line_4 $$ return countByT_N(tableId, names)[ FD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_14 $$ query.append(_FINDER_COLUMN_T_N_TABLEID_2)[ FD ]
Line_37 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_38 $$ q.addScalar(COUNT_COLUMN_NAME, com.liferay.portal.kernel.dao.orm.Type.LONG)[ FD ]
Line_2 $$ public int filterCountByT_N(long tableId, String[] names) -->Line_40 $$ qPos.add(tableId)[ FD ]
Line_39 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_40 $$ qPos.add(tableId)[ FD ]
Line_19 $$ if (name == null) -->Line_20 $$ query.append(_FINDER_COLUMN_T_N_NAME_1)[ CD ]
Line_46 $$ Long count = (Long) q.uniqueResult()-->Line_47 $$ return count.intValue()[ FD ]
Line_18 $$ String name = names[i]-->Line_42 $$ if ((name != null) && !name.isEmpty()) [ FD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_20 $$ query.append(_FINDER_COLUMN_T_N_NAME_1)[ FD ]
Line_2 $$ public int filterCountByT_N(long tableId, String[] names) -->Line_14 $$ query.append(_FINDER_COLUMN_T_N_TABLEID_2)[ CD ]
Line_34 $$ Session session = null-->Line_37 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ public int filterCountByT_N(long tableId, String[] names) -->Line_12 $$ StringBundler query = new StringBundler()[ CD ]
Line_19 $$ if (name == null) -->Line_21 $$ if (name.equals(StringPool.BLANK)) [ CD ]
Line_6 $$ if (names == null) -->Line_7 $$ names = new String[0][ CD ]
Line_39 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_43 $$ qPos.add(name)[ FD ]
Line_2 $$ public int filterCountByT_N(long tableId, String[] names) -->Line_6 $$ if (names == null) [ CD ]
Line_34 $$ Session session = null-->Line_36 $$ session = openSession()[ FD ]
Line_6 $$ if (names == null) -->Line_8 $$ if (names.length > 1) [ CD ]
Line_17 $$ for (int i = 0; i < names.length; i++) -->Line_18 $$ String name = names[i][ CD ]
Line_2 $$ public int filterCountByT_N(long tableId, String[] names) -->Line_15 $$ if (names.length > 0) [ CD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_33 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), ExpandoColumn.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN)[ FD ]
Line_2 $$ public int filterCountByT_N(long tableId, String[] names) -->Line_10 $$ Arrays.sort(names, NULL_SAFE_STRING_COMPARATOR)[ FD ]
Line_2 $$ public int filterCountByT_N(long tableId, String[] names) -->Line_7 $$ names = new String[0][ FD ]
Line_26 $$ if ((i + 1) < names.length) -->Line_27 $$ query.append(WHERE_OR)[ CD ]
Line_2 $$ public int filterCountByT_N(long tableId, String[] names) -->Line_3 $$ if (!InlineSQLHelperUtil.isEnabled()) [ CD ]
Line_2 $$ public int filterCountByT_N(long tableId, String[] names) -->Line_32 $$ query.setStringAt(removeConjunction(query.stringAt(query.index() - 1)), query.index() - 1)[ CD ]
Line_2 $$ public int filterCountByT_N(long tableId, String[] names) -->Line_13 $$ query.append(_FILTER_SQL_COUNT_EXPANDOCOLUMN_WHERE)[ CD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_27 $$ query.append(WHERE_OR)[ FD ]
Line_42 $$ if ((name != null) && !name.isEmpty()) -->Line_43 $$ qPos.add(name)[ CD ]
Line_33 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), ExpandoColumn.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN)-->Line_37 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_15 $$ if (names.length > 0) -->Line_16 $$ query.append(StringPool.OPEN_PARENTHESIS)[ CD ]
Line_41 $$ for (String name : names) -->Line_42 $$ if ((name != null) && !name.isEmpty()) [ FD ]
Line_3 $$ if (!InlineSQLHelperUtil.isEnabled()) -->Line_4 $$ return countByT_N(tableId, names)[ CD ]
Line_8 $$ if (names.length > 1) -->Line_9 $$ names = ArrayUtil.distinct(names, NULL_SAFE_STRING_COMPARATOR)[ CD ]
Line_2 $$ public int filterCountByT_N(long tableId, String[] names) -->Line_33 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), ExpandoColumn.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN)[ CD ]
Line_36 $$ session = openSession()-->Line_37 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_18 $$ String name = names[i]-->Line_43 $$ qPos.add(name)[ FD ]
Line_9 $$ names = ArrayUtil.distinct(names, NULL_SAFE_STRING_COMPARATOR)-->Line_10 $$ Arrays.sort(names, NULL_SAFE_STRING_COMPARATOR)[ FD ]
Line_37 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_39 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_36 $$ session = openSession()-->Line_51 $$ closeSession(session)[ FD ]
Line_17 $$ for (int i = 0; i < names.length; i++) -->Line_19 $$ if (name == null) [ CD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_16 $$ query.append(StringPool.OPEN_PARENTHESIS)[ FD ]
Line_8 $$ if (names.length > 1) -->Line_10 $$ Arrays.sort(names, NULL_SAFE_STRING_COMPARATOR)[ CD ]
Line_37 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_46 $$ Long count = (Long) q.uniqueResult()[ FD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_22 $$ query.append(_FINDER_COLUMN_T_N_NAME_3)[ FD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_32 $$ query.setStringAt(removeConjunction(query.stringAt(query.index() - 1)), query.index() - 1)[ FD ]
Line_7 $$ names = new String[0]-->Line_9 $$ names = ArrayUtil.distinct(names, NULL_SAFE_STRING_COMPARATOR)[ FD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_13 $$ query.append(_FILTER_SQL_COUNT_EXPANDOCOLUMN_WHERE)[ FD ]
