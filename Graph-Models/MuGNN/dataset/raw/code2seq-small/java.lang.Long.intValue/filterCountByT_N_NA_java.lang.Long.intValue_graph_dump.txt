Line_20 $$ StringBundler query = new StringBundler()-->Line_30 $$ query.append(_FINDER_COLUMN_T_N_NAME_3)[ FD ]
Line_14 $$ if (names == null) -->Line_15 $$ names = new String[0][ CD ]
Line_23 $$ if (names.length > 0) -->Line_25 $$ for (int i = 0; i < names.length; i++) [ CD ]
Line_16 $$ if (names.length > 1) -->Line_18 $$ Arrays.sort(names, NULL_SAFE_STRING_COMPARATOR)[ CD ]
Line_26 $$ String name = names[i]-->Line_51 $$ qPos.add(name)[ FD ]
Line_15 $$ names = new String[0]-->Line_17 $$ names = ArrayUtil.distinct(names, NULL_SAFE_STRING_COMPARATOR)[ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_38 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_23 $$ if (names.length > 0) -->Line_24 $$ query.append(StringPool.OPEN_PARENTHESIS)[ CD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_22 $$ query.append(_FINDER_COLUMN_T_N_TABLEID_2)[ FD ]
Line_42 $$ Session session = null-->Line_45 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_29 $$ if (name.equals(StringPool.BLANK)) -->Line_30 $$ query.append(_FINDER_COLUMN_T_N_NAME_3)[ CD ]
Line_50 $$ if ((name != null) && !name.isEmpty()) -->Line_51 $$ qPos.add(name)[ CD ]
Line_15 $$ names = new String[0]-->Line_18 $$ Arrays.sort(names, NULL_SAFE_STRING_COMPARATOR)[ FD ]
Line_26 $$ String name = names[i]-->Line_50 $$ if ((name != null) && !name.isEmpty()) [ FD ]
Line_34 $$ if ((i + 1) < names.length) -->Line_35 $$ query.append(WHERE_OR)[ CD ]
Line_54 $$ Long count = (Long) q.uniqueResult()-->Line_55 $$ return count.intValue()[ FD ]
Line_11 $$ if (!InlineSQLHelperUtil.isEnabled()) -->Line_12 $$ return countByT_N(tableId, names)[ CD ]
Line_26 $$ String name = names[i]-->Line_27 $$ if (name == null) [ FD ]
Line_44 $$ session = openSession()-->Line_45 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_45 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_46 $$ q.addScalar(COUNT_COLUMN_NAME, com.liferay.portal.kernel.dao.orm.Type.LONG)[ FD ]
Line_17 $$ names = ArrayUtil.distinct(names, NULL_SAFE_STRING_COMPARATOR)-->Line_18 $$ Arrays.sort(names, NULL_SAFE_STRING_COMPARATOR)[ FD ]
Line_45 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_47 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_47 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_51 $$ qPos.add(name)[ FD ]
Line_27 $$ if (name == null) -->Line_28 $$ query.append(_FINDER_COLUMN_T_N_NAME_1)[ CD ]
Line_26 $$ String name = names[i]-->Line_29 $$ if (name.equals(StringPool.BLANK)) [ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_28 $$ query.append(_FINDER_COLUMN_T_N_NAME_1)[ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_40 $$ query.setStringAt(removeConjunction(query.stringAt(query.index() - 1)), query.index() - 1)[ FD ]
Line_29 $$ if (name.equals(StringPool.BLANK)) -->Line_32 $$ query.append(_FINDER_COLUMN_T_N_NAME_2)[ CD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_35 $$ query.append(WHERE_OR)[ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_41 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), ExpandoColumn.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN)[ FD ]
Line_16 $$ if (names.length > 1) -->Line_17 $$ names = ArrayUtil.distinct(names, NULL_SAFE_STRING_COMPARATOR)[ CD ]
Line_14 $$ if (names == null) -->Line_16 $$ if (names.length > 1) [ CD ]
Line_27 $$ if (name == null) -->Line_29 $$ if (name.equals(StringPool.BLANK)) [ CD ]
Line_23 $$ if (names.length > 0) -->Line_38 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_21 $$ query.append(_FILTER_SQL_COUNT_EXPANDOCOLUMN_WHERE)[ FD ]
Line_45 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_54 $$ Long count = (Long) q.uniqueResult()[ FD ]
Line_49 $$ for (String name : names) -->Line_51 $$ qPos.add(name)[ FD ]
Line_49 $$ for (String name : names) -->Line_50 $$ if ((name != null) && !name.isEmpty()) [ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_24 $$ query.append(StringPool.OPEN_PARENTHESIS)[ FD ]
Line_25 $$ for (int i = 0; i < names.length; i++) -->Line_26 $$ String name = names[i][ CD ]
Line_25 $$ for (int i = 0; i < names.length; i++) -->Line_27 $$ if (name == null) [ CD ]
Line_44 $$ session = openSession()-->Line_59 $$ closeSession(session)[ FD ]
Line_42 $$ Session session = null-->Line_44 $$ session = openSession()[ FD ]
Line_41 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), ExpandoColumn.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN)-->Line_45 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_42 $$ Session session = null-->Line_59 $$ closeSession(session)[ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_32 $$ query.append(_FINDER_COLUMN_T_N_NAME_2)[ FD ]
Line_47 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_48 $$ qPos.add(tableId)[ FD ]
Line_25 $$ for (int i = 0; i < names.length; i++) -->Line_34 $$ if ((i + 1) < names.length) [ CD ]
