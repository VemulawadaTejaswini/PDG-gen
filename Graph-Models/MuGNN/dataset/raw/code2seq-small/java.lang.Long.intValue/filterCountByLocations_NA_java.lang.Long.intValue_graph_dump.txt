Line_2 $$ public int filterCountByLocations(long companyId) -->Line_8 $$ query.append(_FINDER_COLUMN_LOCATIONS_COMPANYID_2)[ CD ]
Line_13 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_14 $$ q.addScalar(COUNT_COLUMN_NAME, com.liferay.portal.kernel.dao.orm.Type.LONG)[ FD ]
Line_10 $$ Session session = null-->Line_13 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ public int filterCountByLocations(long companyId) -->Line_16 $$ qPos.add(companyId)[ FD ]
Line_17 $$ Long count = (Long) q.uniqueResult()-->Line_18 $$ return count.intValue()[ FD ]
Line_13 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_17 $$ Long count = (Long) q.uniqueResult()[ FD ]
Line_2 $$ public int filterCountByLocations(long companyId) -->Line_10 $$ Session session = null[ CD ]
Line_2 $$ public int filterCountByLocations(long companyId) -->Line_7 $$ query.append(_FILTER_SQL_COUNT_ORGANIZATION_WHERE)[ CD ]
Line_15 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_16 $$ qPos.add(companyId)[ FD ]
Line_10 $$ Session session = null-->Line_22 $$ closeSession(session)[ FD ]
Line_2 $$ public int filterCountByLocations(long companyId) -->Line_4 $$ return countByLocations(companyId)[ FD ]
Line_6 $$ StringBundler query = new StringBundler(2)-->Line_9 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), Organization.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN)[ FD ]
Line_6 $$ StringBundler query = new StringBundler(2)-->Line_8 $$ query.append(_FINDER_COLUMN_LOCATIONS_COMPANYID_2)[ FD ]
Line_6 $$ StringBundler query = new StringBundler(2)-->Line_7 $$ query.append(_FILTER_SQL_COUNT_ORGANIZATION_WHERE)[ FD ]
Line_2 $$ public int filterCountByLocations(long companyId) -->Line_6 $$ StringBundler query = new StringBundler(2)[ CD ]
Line_12 $$ session = openSession()-->Line_22 $$ closeSession(session)[ FD ]
Line_2 $$ public int filterCountByLocations(long companyId) -->Line_9 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), Organization.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN)[ CD ]
Line_12 $$ session = openSession()-->Line_13 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_3 $$ if (!InlineSQLHelperUtil.isEnabled()) -->Line_4 $$ return countByLocations(companyId)[ CD ]
Line_2 $$ public int filterCountByLocations(long companyId) -->Line_3 $$ if (!InlineSQLHelperUtil.isEnabled()) [ CD ]
Line_10 $$ Session session = null-->Line_12 $$ session = openSession()[ FD ]
Line_9 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), Organization.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN)-->Line_13 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_13 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_15 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
