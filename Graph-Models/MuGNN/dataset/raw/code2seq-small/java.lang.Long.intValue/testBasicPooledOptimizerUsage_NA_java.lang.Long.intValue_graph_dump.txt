Line_7 $$ Optimizer optimizer = buildPooledOptimizer(-1, 10)-->Line_9 $$ next = (Long) optimizer.generate(sequence)[ FD ]
Line_9 $$ next = (Long) optimizer.generate(sequence)-->Line_17 $$ assertEquals(12, next.intValue())[ FD ]
Line_4 $$ Long next-->Line_17 $$ assertEquals(12, next.intValue())[ FD ]
Line_9 $$ next = (Long) optimizer.generate(sequence)-->Line_10 $$ assertEquals(i, next.intValue())[ FD ]
Line_4 $$ Long next-->Line_10 $$ assertEquals(i, next.intValue())[ FD ]
Line_8 $$ for (int i = 1; i <= 11; i++) -->Line_10 $$ assertEquals(i, next.intValue())[ FD ]
Line_8 $$ for (int i = 1; i <= 11; i++) -->Line_10 $$ assertEquals(i, next.intValue())[ CD ]
Line_4 $$ Long next-->Line_9 $$ next = (Long) optimizer.generate(sequence)[ FD ]
Line_8 $$ for (int i = 1; i <= 11; i++) -->Line_9 $$ next = (Long) optimizer.generate(sequence)[ CD ]
