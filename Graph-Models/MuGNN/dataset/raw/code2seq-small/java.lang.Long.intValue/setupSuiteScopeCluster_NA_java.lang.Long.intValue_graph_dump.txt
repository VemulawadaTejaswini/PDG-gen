Line_34 $$ singleVal = singleValues[i % numUniqueGeoPoints]-->Line_56 $$ singleVal = singleValues[i % numUniqueGeoPoints][ FD ]
Line_33 $$ for (int i = 0; i < numDocs; i++) -->Line_52 $$ builders.add(client().prepareIndex(DATELINE_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, geoValues[i].lon(), geoValues[i].lat()).field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_18 $$ for (int i = 0; i < singleValues.length; i++) -->Line_24 $$ for (int i = 0; i < multiValues.length; i++) [ FD ]
Line_33 $$ for (int i = 0; i < numDocs; i++) -->Line_37 $$ builders.add(client().prepareIndex(IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiVal[0].lon()).value(multiVal[0].lat()).endArray().startArray().value(multiVal[1].lon()).value(multiVal[1].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ CD ]
Line_18 $$ for (int i = 0; i < singleValues.length; i++) -->Line_21 $$ updateBoundsBottomRight(singleValues[i], singleBottomRight)[ CD ]
Line_55 $$ for (int i = 0; i < 2000; i++) -->Line_58 $$ updateGeohashBucketsCentroid(singleVal)[ CD ]
Line_55 $$ for (int i = 0; i < 2000; i++) -->Line_74 $$ for (int i = 0; i < totalHits; i++) [ FD ]
Line_51 $$ for (int i = 0; i < 5; i++) -->Line_52 $$ builders.add(client().prepareIndex(DATELINE_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, geoValues[i].lon(), geoValues[i].lat()).field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_78 $$ SearchHitField hitField = searchHit.field(NUMBER_FIELD_NAME)-->Line_79 $$ assertThat("Hit " + i + " has wrong number of values", hitField.getValues().size(), equalTo(1))[ FD ]
Line_75 $$ SearchHit searchHit = response.getHits().getAt(i)-->Line_77 $$ assertThat("Hit " + i + " with id: " + searchHit.getId(), searchHit.getType(), equalTo("type"))[ FD ]
Line_33 $$ for (int i = 0; i < numDocs; i++) -->Line_36 $$ multiVal[1] = multiValues[(i + 1) % numUniqueGeoPoints][ CD ]
Line_24 $$ for (int i = 0; i < multiValues.length; i++) -->Line_51 $$ for (int i = 0; i < 5; i++) [ FD ]
Line_18 $$ for (int i = 0; i < singleValues.length; i++) -->Line_33 $$ for (int i = 0; i < numDocs; i++) [ FD ]
Line_30 $$ GeoPoint singleVal-->Line_34 $$ singleVal = singleValues[i % numUniqueGeoPoints][ FD ]
Line_30 $$ GeoPoint singleVal-->Line_58 $$ updateGeohashBucketsCentroid(singleVal)[ FD ]
Line_78 $$ SearchHitField hitField = searchHit.field(NUMBER_FIELD_NAME)-->Line_80 $$ Long value = hitField.getValue()[ FD ]
Line_18 $$ for (int i = 0; i < singleValues.length; i++) -->Line_57 $$ builders.add(client().prepareIndex(HIGH_CARD_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiValues[i % numUniqueGeoPoints].lon()).value(multiValues[i % numUniqueGeoPoints].lat()).endArray().startArray().value(multiValues[(i + 1) % numUniqueGeoPoints].lon()).value(multiValues[(i + 1) % numUniqueGeoPoints].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_70 $$ XContentBuilder builder = XContentFactory.jsonBuilder().startObject()-->Line_73 $$ logger.info("Full high_card_idx Response Content:\n[ FD ]
Line_75 $$ SearchHit searchHit = response.getHits().getAt(i)-->Line_78 $$ SearchHitField hitField = searchHit.field(NUMBER_FIELD_NAME)[ FD ]
Line_18 $$ for (int i = 0; i < singleValues.length; i++) -->Line_55 $$ for (int i = 0; i < 2000; i++) [ FD ]
Line_51 $$ for (int i = 0; i < 5; i++) -->Line_81 $$ assertThat("Hit " + i + " has wrong value", value.intValue(), equalTo(i))[ FD ]
Line_34 $$ singleVal = singleValues[i % numUniqueGeoPoints]-->Line_38 $$ singleCentroid = singleCentroid.reset(singleCentroid.lat() + (singleVal.lat() - singleCentroid.lat()) / (i + 1), singleCentroid.lon() + (singleVal.lon() - singleCentroid.lon()) / (i + 1))[ FD ]
Line_55 $$ for (int i = 0; i < 2000; i++) -->Line_81 $$ assertThat("Hit " + i + " has wrong value", value.intValue(), equalTo(i))[ FD ]
Line_34 $$ singleVal = singleValues[i % numUniqueGeoPoints]-->Line_37 $$ builders.add(client().prepareIndex(IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiVal[0].lon()).value(multiVal[0].lat()).endArray().startArray().value(multiVal[1].lon()).value(multiVal[1].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_33 $$ for (int i = 0; i < numDocs; i++) -->Line_57 $$ builders.add(client().prepareIndex(HIGH_CARD_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiValues[i % numUniqueGeoPoints].lon()).value(multiValues[i % numUniqueGeoPoints].lat()).endArray().startArray().value(multiValues[(i + 1) % numUniqueGeoPoints].lon()).value(multiValues[(i + 1) % numUniqueGeoPoints].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_18 $$ for (int i = 0; i < singleValues.length; i++) -->Line_20 $$ updateBoundsTopLeft(singleValues[i], singleTopLeft)[ CD ]
Line_74 $$ for (int i = 0; i < totalHits; i++) -->Line_76 $$ assertThat("Hit " + i + " with id: " + searchHit.getId(), searchHit.getIndex(), equalTo("high_card_idx"))[ CD ]
Line_56 $$ singleVal = singleValues[i % numUniqueGeoPoints]-->Line_57 $$ builders.add(client().prepareIndex(HIGH_CARD_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiValues[i % numUniqueGeoPoints].lon()).value(multiValues[i % numUniqueGeoPoints].lat()).endArray().startArray().value(multiValues[(i + 1) % numUniqueGeoPoints].lon()).value(multiValues[(i + 1) % numUniqueGeoPoints].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_33 $$ for (int i = 0; i < numDocs; i++) -->Line_41 $$ multiCentroid = multiCentroid.reset(multiCentroid.lat() + (newMVLat - multiCentroid.lat()) / (i + 1), multiCentroid.lon() + (newMVLon - multiCentroid.lon()) / (i + 1))[ CD ]
Line_55 $$ for (int i = 0; i < 2000; i++) -->Line_57 $$ builders.add(client().prepareIndex(HIGH_CARD_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiValues[i % numUniqueGeoPoints].lon()).value(multiValues[i % numUniqueGeoPoints].lat()).endArray().startArray().value(multiValues[(i + 1) % numUniqueGeoPoints].lon()).value(multiValues[(i + 1) % numUniqueGeoPoints].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ CD ]
Line_74 $$ for (int i = 0; i < totalHits; i++) -->Line_75 $$ SearchHit searchHit = response.getHits().getAt(i)[ FD ]
Line_70 $$ XContentBuilder builder = XContentFactory.jsonBuilder().startObject()-->Line_72 $$ builder.endObject()[ FD ]
Line_74 $$ for (int i = 0; i < totalHits; i++) -->Line_79 $$ assertThat("Hit " + i + " has wrong number of values", hitField.getValues().size(), equalTo(1))[ CD ]
Line_29 $$ List<IndexRequestBuilder> builders = new ArrayList()-->Line_37 $$ builders.add(client().prepareIndex(IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiVal[0].lon()).value(multiVal[0].lat()).endArray().startArray().value(multiVal[1].lon()).value(multiVal[1].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_18 $$ for (int i = 0; i < singleValues.length; i++) -->Line_52 $$ builders.add(client().prepareIndex(DATELINE_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, geoValues[i].lon(), geoValues[i].lat()).field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_51 $$ for (int i = 0; i < 5; i++) -->Line_74 $$ for (int i = 0; i < totalHits; i++) [ FD ]
Line_24 $$ for (int i = 0; i < multiValues.length; i++) -->Line_26 $$ updateBoundsTopLeft(multiValues[i], multiTopLeft)[ CD ]
Line_18 $$ for (int i = 0; i < singleValues.length; i++) -->Line_74 $$ for (int i = 0; i < totalHits; i++) [ FD ]
Line_33 $$ for (int i = 0; i < numDocs; i++) -->Line_81 $$ assertThat("Hit " + i + " has wrong value", value.intValue(), equalTo(i))[ FD ]
Line_74 $$ for (int i = 0; i < totalHits; i++) -->Line_80 $$ Long value = hitField.getValue()[ CD ]
Line_18 $$ for (int i = 0; i < singleValues.length; i++) -->Line_37 $$ builders.add(client().prepareIndex(IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiVal[0].lon()).value(multiVal[0].lat()).endArray().startArray().value(multiVal[1].lon()).value(multiVal[1].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_33 $$ for (int i = 0; i < numDocs; i++) -->Line_74 $$ for (int i = 0; i < totalHits; i++) [ FD ]
Line_24 $$ for (int i = 0; i < multiValues.length; i++) -->Line_74 $$ for (int i = 0; i < totalHits; i++) [ FD ]
Line_69 $$ long totalHits = response.getHits().totalHits()-->Line_83 $$ assertThat(totalHits, equalTo(2000l))[ FD ]
Line_24 $$ for (int i = 0; i < multiValues.length; i++) -->Line_25 $$ multiValues[i] = RandomGeoGenerator.randomPoint(random())[ CD ]
Line_29 $$ List<IndexRequestBuilder> builders = new ArrayList()-->Line_60 $$ builders.add(client().prepareIndex(IDX_ZERO_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, 0.0, 1.0).endObject()))[ FD ]
Line_32 $$ double newMVLat, newMVLon-->Line_39 $$ newMVLat = (multiVal[0].lat() + multiVal[1].lat()) / 2d[ FD ]
Line_34 $$ singleVal = singleValues[i % numUniqueGeoPoints]-->Line_57 $$ builders.add(client().prepareIndex(HIGH_CARD_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiValues[i % numUniqueGeoPoints].lon()).value(multiValues[i % numUniqueGeoPoints].lat()).endArray().startArray().value(multiValues[(i + 1) % numUniqueGeoPoints].lon()).value(multiValues[(i + 1) % numUniqueGeoPoints].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_33 $$ for (int i = 0; i < numDocs; i++) -->Line_75 $$ SearchHit searchHit = response.getHits().getAt(i)[ FD ]
Line_33 $$ for (int i = 0; i < numDocs; i++) -->Line_34 $$ singleVal = singleValues[i % numUniqueGeoPoints][ CD ]
Line_18 $$ for (int i = 0; i < singleValues.length; i++) -->Line_19 $$ singleValues[i] = RandomGeoGenerator.randomPoint(random())[ CD ]
Line_30 $$ GeoPoint singleVal-->Line_38 $$ singleCentroid = singleCentroid.reset(singleCentroid.lat() + (singleVal.lat() - singleCentroid.lat()) / (i + 1), singleCentroid.lon() + (singleVal.lon() - singleCentroid.lon()) / (i + 1))[ FD ]
Line_24 $$ for (int i = 0; i < multiValues.length; i++) -->Line_75 $$ SearchHit searchHit = response.getHits().getAt(i)[ FD ]
Line_70 $$ XContentBuilder builder = XContentFactory.jsonBuilder().startObject()-->Line_71 $$ response.toXContent(builder, ToXContent.EMPTY_PARAMS)[ FD ]
Line_29 $$ List<IndexRequestBuilder> builders = new ArrayList()-->Line_52 $$ builders.add(client().prepareIndex(DATELINE_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, geoValues[i].lon(), geoValues[i].lat()).field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_33 $$ for (int i = 0; i < numDocs; i++) -->Line_38 $$ singleCentroid = singleCentroid.reset(singleCentroid.lat() + (singleVal.lat() - singleCentroid.lat()) / (i + 1), singleCentroid.lon() + (singleVal.lon() - singleCentroid.lon()) / (i + 1))[ CD ]
Line_33 $$ for (int i = 0; i < numDocs; i++) -->Line_35 $$ multiVal[0] = multiValues[i % numUniqueGeoPoints][ CD ]
Line_34 $$ singleVal = singleValues[i % numUniqueGeoPoints]-->Line_58 $$ updateGeohashBucketsCentroid(singleVal)[ FD ]
Line_33 $$ for (int i = 0; i < numDocs; i++) -->Line_55 $$ for (int i = 0; i < 2000; i++) [ FD ]
Line_51 $$ for (int i = 0; i < 5; i++) -->Line_52 $$ builders.add(client().prepareIndex(DATELINE_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, geoValues[i].lon(), geoValues[i].lat()).field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ CD ]
Line_30 $$ GeoPoint singleVal-->Line_57 $$ builders.add(client().prepareIndex(HIGH_CARD_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiValues[i % numUniqueGeoPoints].lon()).value(multiValues[i % numUniqueGeoPoints].lat()).endArray().startArray().value(multiValues[(i + 1) % numUniqueGeoPoints].lon()).value(multiValues[(i + 1) % numUniqueGeoPoints].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_33 $$ for (int i = 0; i < numDocs; i++) -->Line_39 $$ newMVLat = (multiVal[0].lat() + multiVal[1].lat()) / 2d[ CD ]
Line_24 $$ for (int i = 0; i < multiValues.length; i++) -->Line_81 $$ assertThat("Hit " + i + " has wrong value", value.intValue(), equalTo(i))[ FD ]
Line_24 $$ for (int i = 0; i < multiValues.length; i++) -->Line_33 $$ for (int i = 0; i < numDocs; i++) [ FD ]
Line_55 $$ for (int i = 0; i < 2000; i++) -->Line_56 $$ singleVal = singleValues[i % numUniqueGeoPoints][ CD ]
Line_24 $$ for (int i = 0; i < multiValues.length; i++) -->Line_37 $$ builders.add(client().prepareIndex(IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiVal[0].lon()).value(multiVal[0].lat()).endArray().startArray().value(multiVal[1].lon()).value(multiVal[1].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_18 $$ for (int i = 0; i < singleValues.length; i++) -->Line_51 $$ for (int i = 0; i < 5; i++) [ FD ]
Line_18 $$ for (int i = 0; i < singleValues.length; i++) -->Line_81 $$ assertThat("Hit " + i + " has wrong value", value.intValue(), equalTo(i))[ FD ]
Line_74 $$ for (int i = 0; i < totalHits; i++) -->Line_75 $$ SearchHit searchHit = response.getHits().getAt(i)[ CD ]
Line_30 $$ GeoPoint singleVal-->Line_56 $$ singleVal = singleValues[i % numUniqueGeoPoints][ FD ]
Line_74 $$ for (int i = 0; i < totalHits; i++) -->Line_77 $$ assertThat("Hit " + i + " with id: " + searchHit.getId(), searchHit.getType(), equalTo("type"))[ CD ]
Line_74 $$ for (int i = 0; i < totalHits; i++) -->Line_81 $$ assertThat("Hit " + i + " has wrong value", value.intValue(), equalTo(i))[ FD ]
Line_55 $$ for (int i = 0; i < 2000; i++) -->Line_75 $$ SearchHit searchHit = response.getHits().getAt(i)[ FD ]
Line_69 $$ long totalHits = response.getHits().totalHits()-->Line_74 $$ for (int i = 0; i < totalHits; i++) [ FD ]
Line_51 $$ for (int i = 0; i < 5; i++) -->Line_75 $$ SearchHit searchHit = response.getHits().getAt(i)[ FD ]
Line_56 $$ singleVal = singleValues[i % numUniqueGeoPoints]-->Line_58 $$ updateGeohashBucketsCentroid(singleVal)[ FD ]
Line_24 $$ for (int i = 0; i < multiValues.length; i++) -->Line_57 $$ builders.add(client().prepareIndex(HIGH_CARD_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiValues[i % numUniqueGeoPoints].lon()).value(multiValues[i % numUniqueGeoPoints].lat()).endArray().startArray().value(multiValues[(i + 1) % numUniqueGeoPoints].lon()).value(multiValues[(i + 1) % numUniqueGeoPoints].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_33 $$ for (int i = 0; i < numDocs; i++) -->Line_37 $$ builders.add(client().prepareIndex(IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiVal[0].lon()).value(multiVal[0].lat()).endArray().startArray().value(multiVal[1].lon()).value(multiVal[1].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_33 $$ for (int i = 0; i < numDocs; i++) -->Line_40 $$ newMVLon = (multiVal[0].lon() + multiVal[1].lon()) / 2d[ CD ]
Line_74 $$ for (int i = 0; i < totalHits; i++) -->Line_78 $$ SearchHitField hitField = searchHit.field(NUMBER_FIELD_NAME)[ CD ]
Line_33 $$ for (int i = 0; i < numDocs; i++) -->Line_51 $$ for (int i = 0; i < 5; i++) [ FD ]
Line_24 $$ for (int i = 0; i < multiValues.length; i++) -->Line_55 $$ for (int i = 0; i < 2000; i++) [ FD ]
Line_80 $$ Long value = hitField.getValue()-->Line_81 $$ assertThat("Hit " + i + " has wrong value", value.intValue(), equalTo(i))[ FD ]
Line_74 $$ for (int i = 0; i < totalHits; i++) -->Line_81 $$ assertThat("Hit " + i + " has wrong value", value.intValue(), equalTo(i))[ CD ]
Line_51 $$ for (int i = 0; i < 5; i++) -->Line_55 $$ for (int i = 0; i < 2000; i++) [ FD ]
Line_24 $$ for (int i = 0; i < multiValues.length; i++) -->Line_52 $$ builders.add(client().prepareIndex(DATELINE_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, geoValues[i].lon(), geoValues[i].lat()).field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_29 $$ List<IndexRequestBuilder> builders = new ArrayList()-->Line_62 $$ indexRandom(true, builders)[ FD ]
Line_29 $$ List<IndexRequestBuilder> builders = new ArrayList()-->Line_57 $$ builders.add(client().prepareIndex(HIGH_CARD_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiValues[i % numUniqueGeoPoints].lon()).value(multiValues[i % numUniqueGeoPoints].lat()).endArray().startArray().value(multiValues[(i + 1) % numUniqueGeoPoints].lon()).value(multiValues[(i + 1) % numUniqueGeoPoints].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_75 $$ SearchHit searchHit = response.getHits().getAt(i)-->Line_76 $$ assertThat("Hit " + i + " with id: " + searchHit.getId(), searchHit.getIndex(), equalTo("high_card_idx"))[ FD ]
Line_51 $$ for (int i = 0; i < 5; i++) -->Line_57 $$ builders.add(client().prepareIndex(HIGH_CARD_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiValues[i % numUniqueGeoPoints].lon()).value(multiValues[i % numUniqueGeoPoints].lat()).endArray().startArray().value(multiValues[(i + 1) % numUniqueGeoPoints].lon()).value(multiValues[(i + 1) % numUniqueGeoPoints].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_32 $$ double newMVLat, newMVLon-->Line_40 $$ newMVLon = (multiVal[0].lon() + multiVal[1].lon()) / 2d[ FD ]
Line_24 $$ for (int i = 0; i < multiValues.length; i++) -->Line_27 $$ updateBoundsBottomRight(multiValues[i], multiBottomRight)[ CD ]
Line_55 $$ for (int i = 0; i < 2000; i++) -->Line_57 $$ builders.add(client().prepareIndex(HIGH_CARD_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiValues[i % numUniqueGeoPoints].lon()).value(multiValues[i % numUniqueGeoPoints].lat()).endArray().startArray().value(multiValues[(i + 1) % numUniqueGeoPoints].lon()).value(multiValues[(i + 1) % numUniqueGeoPoints].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_18 $$ for (int i = 0; i < singleValues.length; i++) -->Line_75 $$ SearchHit searchHit = response.getHits().getAt(i)[ FD ]
Line_30 $$ GeoPoint singleVal-->Line_37 $$ builders.add(client().prepareIndex(IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiVal[0].lon()).value(multiVal[0].lat()).endArray().startArray().value(multiVal[1].lon()).value(multiVal[1].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
