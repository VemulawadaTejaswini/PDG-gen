Line_32 $$ for (int i = 0; i < numDocs; i++) -->Line_36 $$ builders.add(client().prepareIndex(IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiVal[0].lon()).value(multiVal[0].lat()).endArray().startArray().value(multiVal[1].lon()).value(multiVal[1].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_23 $$ for (int i = 0; i < multiValues.length; i++) -->Line_54 $$ for (int i = 0; i < 2000; i++) [ FD ]
Line_32 $$ for (int i = 0; i < numDocs; i++) -->Line_51 $$ builders.add(client().prepareIndex(DATELINE_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, geoValues[i].lon(), geoValues[i].lat()).field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_70 $$ for (int i = 0; i < totalHits; i++) [ CD ]
Line_32 $$ for (int i = 0; i < numDocs; i++) -->Line_33 $$ singleVal = singleValues[i % numUniqueGeoPoints][ CD ]
Line_32 $$ for (int i = 0; i < numDocs; i++) -->Line_35 $$ multiVal[1] = multiValues[(i + 1) % numUniqueGeoPoints][ CD ]
Line_17 $$ for (int i = 0; i < singleValues.length; i++) -->Line_50 $$ for (int i = 0; i < 5; i++) [ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_48 $$ geoValues[3] = new GeoPoint(32, -175)[ CD ]
Line_17 $$ for (int i = 0; i < singleValues.length; i++) -->Line_20 $$ updateBoundsBottomRight(singleValues[i], singleBottomRight)[ CD ]
Line_70 $$ for (int i = 0; i < totalHits; i++) -->Line_75 $$ assertThat("Hit " + i + " has wrong number of values", hitField.getValues().size(), equalTo(1))[ CD ]
Line_17 $$ for (int i = 0; i < singleValues.length; i++) -->Line_19 $$ updateBoundsTopLeft(singleValues[i], singleTopLeft)[ CD ]
Line_32 $$ for (int i = 0; i < numDocs; i++) -->Line_36 $$ builders.add(client().prepareIndex(IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiVal[0].lon()).value(multiVal[0].lat()).endArray().startArray().value(multiVal[1].lon()).value(multiVal[1].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ CD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_69 $$ logger.info("Full high_card_idx Response Content:\n[ CD ]
Line_23 $$ for (int i = 0; i < multiValues.length; i++) -->Line_71 $$ SearchHit searchHit = response.getHits().getAt(i)[ FD ]
Line_76 $$ Long value = hitField.getValue()-->Line_77 $$ assertThat("Hit " + i + " has wrong value", value.intValue(), equalTo(i))[ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_32 $$ for (int i = 0; i < numDocs; i++) [ CD ]
Line_17 $$ for (int i = 0; i < singleValues.length; i++) -->Line_70 $$ for (int i = 0; i < totalHits; i++) [ FD ]
Line_74 $$ SearchHitField hitField = searchHit.field(NUMBER_FIELD_NAME)-->Line_76 $$ Long value = hitField.getValue()[ FD ]
Line_50 $$ for (int i = 0; i < 5; i++) -->Line_51 $$ builders.add(client().prepareIndex(DATELINE_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, geoValues[i].lon(), geoValues[i].lat()).field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ CD ]
Line_32 $$ for (int i = 0; i < numDocs; i++) -->Line_54 $$ for (int i = 0; i < 2000; i++) [ FD ]
Line_54 $$ for (int i = 0; i < 2000; i++) -->Line_56 $$ builders.add(client().prepareIndex(HIGH_CARD_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiValues[i % numUniqueGeoPoints].lon()).value(multiValues[i % numUniqueGeoPoints].lat()).endArray().startArray().value(multiValues[(i + 1) % numUniqueGeoPoints].lon()).value(multiValues[(i + 1) % numUniqueGeoPoints].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ CD ]
Line_63 $$ SearchResponse response = client().prepareSearch(HIGH_CARD_IDX_NAME).addField(NUMBER_FIELD_NAME).addSort(SortBuilders.fieldSort(NUMBER_FIELD_NAME).order(SortOrder.ASC)).setSize(5000).get()-->Line_65 $$ long totalHits = response.getHits().totalHits()[ FD ]
Line_29 $$ GeoPoint singleVal-->Line_37 $$ singleCentroid = singleCentroid.reset(singleCentroid.lat() + (singleVal.lat() - singleCentroid.lat()) / (i + 1), singleCentroid.lon() + (singleVal.lon() - singleCentroid.lon()) / (i + 1))[ FD ]
Line_55 $$ singleVal = singleValues[i % numUniqueGeoPoints]-->Line_56 $$ builders.add(client().prepareIndex(HIGH_CARD_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiValues[i % numUniqueGeoPoints].lon()).value(multiValues[i % numUniqueGeoPoints].lat()).endArray().startArray().value(multiValues[(i + 1) % numUniqueGeoPoints].lon()).value(multiValues[(i + 1) % numUniqueGeoPoints].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_29 $$ GeoPoint singleVal-->Line_33 $$ singleVal = singleValues[i % numUniqueGeoPoints][ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_13 $$ numUniqueGeoPoints = randomIntBetween(1, numDocs)[ CD ]
Line_63 $$ SearchResponse response = client().prepareSearch(HIGH_CARD_IDX_NAME).addField(NUMBER_FIELD_NAME).addSort(SortBuilders.fieldSort(NUMBER_FIELD_NAME).order(SortOrder.ASC)).setSize(5000).get()-->Line_71 $$ SearchHit searchHit = response.getHits().getAt(i)[ FD ]
Line_17 $$ for (int i = 0; i < singleValues.length; i++) -->Line_54 $$ for (int i = 0; i < 2000; i++) [ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_62 $$ ensureSearchable()[ CD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_29 $$ GeoPoint singleVal[ CD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_30 $$ final GeoPoint[] multiVal = new GeoPoint[2][ CD ]
Line_33 $$ singleVal = singleValues[i % numUniqueGeoPoints]-->Line_36 $$ builders.add(client().prepareIndex(IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiVal[0].lon()).value(multiVal[0].lat()).endArray().startArray().value(multiVal[1].lon()).value(multiVal[1].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_31 $$ double newMVLat, newMVLon-->Line_39 $$ newMVLon = (multiVal[0].lon() + multiVal[1].lon()) / 2d[ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_79 $$ assertThat(totalHits, equalTo(2000l))[ CD ]
Line_23 $$ for (int i = 0; i < multiValues.length; i++) -->Line_24 $$ multiValues[i] = RandomGeoGenerator.randomPoint(random())[ CD ]
Line_63 $$ SearchResponse response = client().prepareSearch(HIGH_CARD_IDX_NAME).addField(NUMBER_FIELD_NAME).addSort(SortBuilders.fieldSort(NUMBER_FIELD_NAME).order(SortOrder.ASC)).setSize(5000).get()-->Line_64 $$ assertSearchResponse(response)[ FD ]
Line_71 $$ SearchHit searchHit = response.getHits().getAt(i)-->Line_72 $$ assertThat("Hit " + i + " with id: " + searchHit.getId(), searchHit.getIndex(), equalTo("high_card_idx"))[ FD ]
Line_23 $$ for (int i = 0; i < multiValues.length; i++) -->Line_51 $$ builders.add(client().prepareIndex(DATELINE_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, geoValues[i].lon(), geoValues[i].lat()).field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_23 $$ for (int i = 0; i < multiValues.length; i++) -->Line_36 $$ builders.add(client().prepareIndex(IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiVal[0].lon()).value(multiVal[0].lat()).endArray().startArray().value(multiVal[1].lon()).value(multiVal[1].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_3 $$ createIndex(UNMAPPED_IDX_NAME)[ CD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_23 $$ for (int i = 0; i < multiValues.length; i++) [ CD ]
Line_17 $$ for (int i = 0; i < singleValues.length; i++) -->Line_77 $$ assertThat("Hit " + i + " has wrong value", value.intValue(), equalTo(i))[ FD ]
Line_17 $$ for (int i = 0; i < singleValues.length; i++) -->Line_36 $$ builders.add(client().prepareIndex(IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiVal[0].lon()).value(multiVal[0].lat()).endArray().startArray().value(multiVal[1].lon()).value(multiVal[1].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_23 $$ for (int i = 0; i < multiValues.length; i++) -->Line_70 $$ for (int i = 0; i < totalHits; i++) [ FD ]
Line_74 $$ SearchHitField hitField = searchHit.field(NUMBER_FIELD_NAME)-->Line_75 $$ assertThat("Hit " + i + " has wrong number of values", hitField.getValues().size(), equalTo(1))[ FD ]
Line_50 $$ for (int i = 0; i < 5; i++) -->Line_51 $$ builders.add(client().prepareIndex(DATELINE_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, geoValues[i].lon(), geoValues[i].lat()).field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_50 $$ for (int i = 0; i < 5; i++) -->Line_56 $$ builders.add(client().prepareIndex(HIGH_CARD_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiValues[i % numUniqueGeoPoints].lon()).value(multiValues[i % numUniqueGeoPoints].lat()).endArray().startArray().value(multiValues[(i + 1) % numUniqueGeoPoints].lon()).value(multiValues[(i + 1) % numUniqueGeoPoints].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_32 $$ for (int i = 0; i < numDocs; i++) -->Line_56 $$ builders.add(client().prepareIndex(HIGH_CARD_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiValues[i % numUniqueGeoPoints].lon()).value(multiValues[i % numUniqueGeoPoints].lat()).endArray().startArray().value(multiValues[(i + 1) % numUniqueGeoPoints].lon()).value(multiValues[(i + 1) % numUniqueGeoPoints].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_68 $$ builder.endObject()[ CD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_42 $$ assertAcked(prepareCreate(EMPTY_IDX_NAME).addMapping("type", SINGLE_VALUED_FIELD_NAME, "type=geo_point"))[ CD ]
Line_29 $$ GeoPoint singleVal-->Line_55 $$ singleVal = singleValues[i % numUniqueGeoPoints][ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_46 $$ geoValues[1] = new GeoPoint(12, -179)[ CD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_28 $$ List<IndexRequestBuilder> builders = new ArrayList()[ CD ]
Line_32 $$ for (int i = 0; i < numDocs; i++) -->Line_40 $$ multiCentroid = multiCentroid.reset(multiCentroid.lat() + (newMVLat - multiCentroid.lat()) / (i + 1), multiCentroid.lon() + (newMVLon - multiCentroid.lon()) / (i + 1))[ CD ]
Line_32 $$ for (int i = 0; i < numDocs; i++) -->Line_70 $$ for (int i = 0; i < totalHits; i++) [ FD ]
Line_32 $$ for (int i = 0; i < numDocs; i++) -->Line_37 $$ singleCentroid = singleCentroid.reset(singleCentroid.lat() + (singleVal.lat() - singleCentroid.lat()) / (i + 1), singleCentroid.lon() + (singleVal.lon() - singleCentroid.lon()) / (i + 1))[ CD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_31 $$ double newMVLat, newMVLon[ CD ]
Line_71 $$ SearchHit searchHit = response.getHits().getAt(i)-->Line_74 $$ SearchHitField hitField = searchHit.field(NUMBER_FIELD_NAME)[ FD ]
Line_32 $$ for (int i = 0; i < numDocs; i++) -->Line_34 $$ multiVal[0] = multiValues[i % numUniqueGeoPoints][ CD ]
Line_28 $$ List<IndexRequestBuilder> builders = new ArrayList()-->Line_56 $$ builders.add(client().prepareIndex(HIGH_CARD_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiValues[i % numUniqueGeoPoints].lon()).value(multiValues[i % numUniqueGeoPoints].lat()).endArray().startArray().value(multiValues[(i + 1) % numUniqueGeoPoints].lon()).value(multiValues[(i + 1) % numUniqueGeoPoints].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_66 $$ XContentBuilder builder = XContentFactory.jsonBuilder().startObject()-->Line_68 $$ builder.endObject()[ FD ]
Line_54 $$ for (int i = 0; i < 2000; i++) -->Line_71 $$ SearchHit searchHit = response.getHits().getAt(i)[ FD ]
Line_50 $$ for (int i = 0; i < 5; i++) -->Line_70 $$ for (int i = 0; i < totalHits; i++) [ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_50 $$ for (int i = 0; i < 5; i++) [ CD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_49 $$ geoValues[4] = new GeoPoint(-11, 178)[ CD ]
Line_28 $$ List<IndexRequestBuilder> builders = new ArrayList()-->Line_51 $$ builders.add(client().prepareIndex(DATELINE_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, geoValues[i].lon(), geoValues[i].lat()).field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_17 $$ for (int i = 0; i < singleValues.length; i++) -->Line_23 $$ for (int i = 0; i < multiValues.length; i++) [ FD ]
Line_70 $$ for (int i = 0; i < totalHits; i++) -->Line_71 $$ SearchHit searchHit = response.getHits().getAt(i)[ FD ]
Line_70 $$ for (int i = 0; i < totalHits; i++) -->Line_72 $$ assertThat("Hit " + i + " with id: " + searchHit.getId(), searchHit.getIndex(), equalTo("high_card_idx"))[ CD ]
Line_70 $$ for (int i = 0; i < totalHits; i++) -->Line_73 $$ assertThat("Hit " + i + " with id: " + searchHit.getId(), searchHit.getType(), equalTo("type"))[ CD ]
Line_71 $$ SearchHit searchHit = response.getHits().getAt(i)-->Line_73 $$ assertThat("Hit " + i + " with id: " + searchHit.getId(), searchHit.getType(), equalTo("type"))[ FD ]
Line_70 $$ for (int i = 0; i < totalHits; i++) -->Line_77 $$ assertThat("Hit " + i + " has wrong value", value.intValue(), equalTo(i))[ CD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_47 $$ geoValues[2] = new GeoPoint(-24, 170)[ CD ]
Line_33 $$ singleVal = singleValues[i % numUniqueGeoPoints]-->Line_57 $$ updateGeohashBucketsCentroid(singleVal)[ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_66 $$ XContentBuilder builder = XContentFactory.jsonBuilder().startObject()[ CD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_12 $$ numDocs = randomIntBetween(6, 20)[ CD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_43 $$ assertAcked(prepareCreate(DATELINE_IDX_NAME).addMapping("type", SINGLE_VALUED_FIELD_NAME, "type=geo_point", MULTI_VALUED_FIELD_NAME, "type=geo_point", NUMBER_FIELD_NAME, "type=long", "tag", "type=string,index=not_analyzed"))[ CD ]
Line_55 $$ singleVal = singleValues[i % numUniqueGeoPoints]-->Line_57 $$ updateGeohashBucketsCentroid(singleVal)[ FD ]
Line_70 $$ for (int i = 0; i < totalHits; i++) -->Line_77 $$ assertThat("Hit " + i + " has wrong value", value.intValue(), equalTo(i))[ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_64 $$ assertSearchResponse(response)[ CD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_63 $$ SearchResponse response = client().prepareSearch(HIGH_CARD_IDX_NAME).addField(NUMBER_FIELD_NAME).addSort(SortBuilders.fieldSort(NUMBER_FIELD_NAME).order(SortOrder.ASC)).setSize(5000).get()[ CD ]
Line_65 $$ long totalHits = response.getHits().totalHits()-->Line_79 $$ assertThat(totalHits, equalTo(2000l))[ FD ]
Line_54 $$ for (int i = 0; i < 2000; i++) -->Line_70 $$ for (int i = 0; i < totalHits; i++) [ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_65 $$ long totalHits = response.getHits().totalHits()[ CD ]
Line_17 $$ for (int i = 0; i < singleValues.length; i++) -->Line_71 $$ SearchHit searchHit = response.getHits().getAt(i)[ FD ]
Line_17 $$ for (int i = 0; i < singleValues.length; i++) -->Line_32 $$ for (int i = 0; i < numDocs; i++) [ FD ]
Line_50 $$ for (int i = 0; i < 5; i++) -->Line_54 $$ for (int i = 0; i < 2000; i++) [ FD ]
Line_50 $$ for (int i = 0; i < 5; i++) -->Line_77 $$ assertThat("Hit " + i + " has wrong value", value.intValue(), equalTo(i))[ FD ]
Line_29 $$ GeoPoint singleVal-->Line_36 $$ builders.add(client().prepareIndex(IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiVal[0].lon()).value(multiVal[0].lat()).endArray().startArray().value(multiVal[1].lon()).value(multiVal[1].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_45 $$ geoValues[0] = new GeoPoint(38, 178)[ CD ]
Line_54 $$ for (int i = 0; i < 2000; i++) -->Line_77 $$ assertThat("Hit " + i + " has wrong value", value.intValue(), equalTo(i))[ FD ]
Line_70 $$ for (int i = 0; i < totalHits; i++) -->Line_74 $$ SearchHitField hitField = searchHit.field(NUMBER_FIELD_NAME)[ CD ]
Line_23 $$ for (int i = 0; i < multiValues.length; i++) -->Line_77 $$ assertThat("Hit " + i + " has wrong value", value.intValue(), equalTo(i))[ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_54 $$ for (int i = 0; i < 2000; i++) [ CD ]
Line_66 $$ XContentBuilder builder = XContentFactory.jsonBuilder().startObject()-->Line_69 $$ logger.info("Full high_card_idx Response Content:\n[ FD ]
Line_54 $$ for (int i = 0; i < 2000; i++) -->Line_57 $$ updateGeohashBucketsCentroid(singleVal)[ CD ]
Line_23 $$ for (int i = 0; i < multiValues.length; i++) -->Line_32 $$ for (int i = 0; i < numDocs; i++) [ FD ]
Line_32 $$ for (int i = 0; i < numDocs; i++) -->Line_50 $$ for (int i = 0; i < 5; i++) [ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_53 $$ assertAcked(prepareCreate(HIGH_CARD_IDX_NAME).setSettings(Settings.builder().put("number_of_shards", 2)).addMapping("type", SINGLE_VALUED_FIELD_NAME, "type=geo_point", MULTI_VALUED_FIELD_NAME, "type=geo_point", NUMBER_FIELD_NAME, "type=long,store=true", "tag", "type=string,index=not_analyzed"))[ CD ]
Line_66 $$ XContentBuilder builder = XContentFactory.jsonBuilder().startObject()-->Line_67 $$ response.toXContent(builder, ToXContent.EMPTY_PARAMS)[ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_60 $$ assertAcked(prepareCreate(IDX_ZERO_NAME).addMapping("type", SINGLE_VALUED_FIELD_NAME, "type=geo_point"))[ CD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_59 $$ builders.add(client().prepareIndex(IDX_ZERO_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, 0.0, 1.0).endObject()))[ CD ]
Line_17 $$ for (int i = 0; i < singleValues.length; i++) -->Line_18 $$ singleValues[i] = RandomGeoGenerator.randomPoint(random())[ CD ]
Line_32 $$ for (int i = 0; i < numDocs; i++) -->Line_77 $$ assertThat("Hit " + i + " has wrong value", value.intValue(), equalTo(i))[ FD ]
Line_65 $$ long totalHits = response.getHits().totalHits()-->Line_70 $$ for (int i = 0; i < totalHits; i++) [ FD ]
Line_54 $$ for (int i = 0; i < 2000; i++) -->Line_55 $$ singleVal = singleValues[i % numUniqueGeoPoints][ CD ]
Line_28 $$ List<IndexRequestBuilder> builders = new ArrayList()-->Line_61 $$ indexRandom(true, builders)[ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_61 $$ indexRandom(true, builders)[ CD ]
Line_23 $$ for (int i = 0; i < multiValues.length; i++) -->Line_50 $$ for (int i = 0; i < 5; i++) [ FD ]
Line_23 $$ for (int i = 0; i < multiValues.length; i++) -->Line_26 $$ updateBoundsBottomRight(multiValues[i], multiBottomRight)[ CD ]
Line_70 $$ for (int i = 0; i < totalHits; i++) -->Line_76 $$ Long value = hitField.getValue()[ CD ]
Line_23 $$ for (int i = 0; i < multiValues.length; i++) -->Line_25 $$ updateBoundsTopLeft(multiValues[i], multiTopLeft)[ CD ]
Line_29 $$ GeoPoint singleVal-->Line_56 $$ builders.add(client().prepareIndex(HIGH_CARD_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiValues[i % numUniqueGeoPoints].lon()).value(multiValues[i % numUniqueGeoPoints].lat()).endArray().startArray().value(multiValues[(i + 1) % numUniqueGeoPoints].lon()).value(multiValues[(i + 1) % numUniqueGeoPoints].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_32 $$ for (int i = 0; i < numDocs; i++) -->Line_38 $$ newMVLat = (multiVal[0].lat() + multiVal[1].lat()) / 2d[ CD ]
Line_33 $$ singleVal = singleValues[i % numUniqueGeoPoints]-->Line_55 $$ singleVal = singleValues[i % numUniqueGeoPoints][ FD ]
Line_33 $$ singleVal = singleValues[i % numUniqueGeoPoints]-->Line_37 $$ singleCentroid = singleCentroid.reset(singleCentroid.lat() + (singleVal.lat() - singleCentroid.lat()) / (i + 1), singleCentroid.lon() + (singleVal.lon() - singleCentroid.lon()) / (i + 1))[ FD ]
Line_63 $$ SearchResponse response = client().prepareSearch(HIGH_CARD_IDX_NAME).addField(NUMBER_FIELD_NAME).addSort(SortBuilders.fieldSort(NUMBER_FIELD_NAME).order(SortOrder.ASC)).setSize(5000).get()-->Line_67 $$ response.toXContent(builder, ToXContent.EMPTY_PARAMS)[ FD ]
Line_33 $$ singleVal = singleValues[i % numUniqueGeoPoints]-->Line_56 $$ builders.add(client().prepareIndex(HIGH_CARD_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiValues[i % numUniqueGeoPoints].lon()).value(multiValues[i % numUniqueGeoPoints].lat()).endArray().startArray().value(multiValues[(i + 1) % numUniqueGeoPoints].lon()).value(multiValues[(i + 1) % numUniqueGeoPoints].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_29 $$ GeoPoint singleVal-->Line_57 $$ updateGeohashBucketsCentroid(singleVal)[ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_67 $$ response.toXContent(builder, ToXContent.EMPTY_PARAMS)[ CD ]
Line_17 $$ for (int i = 0; i < singleValues.length; i++) -->Line_56 $$ builders.add(client().prepareIndex(HIGH_CARD_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiValues[i % numUniqueGeoPoints].lon()).value(multiValues[i % numUniqueGeoPoints].lat()).endArray().startArray().value(multiValues[(i + 1) % numUniqueGeoPoints].lon()).value(multiValues[(i + 1) % numUniqueGeoPoints].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_70 $$ for (int i = 0; i < totalHits; i++) -->Line_71 $$ SearchHit searchHit = response.getHits().getAt(i)[ CD ]
Line_23 $$ for (int i = 0; i < multiValues.length; i++) -->Line_56 $$ builders.add(client().prepareIndex(HIGH_CARD_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiValues[i % numUniqueGeoPoints].lon()).value(multiValues[i % numUniqueGeoPoints].lat()).endArray().startArray().value(multiValues[(i + 1) % numUniqueGeoPoints].lon()).value(multiValues[(i + 1) % numUniqueGeoPoints].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_28 $$ List<IndexRequestBuilder> builders = new ArrayList()-->Line_59 $$ builders.add(client().prepareIndex(IDX_ZERO_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, 0.0, 1.0).endObject()))[ FD ]
Line_28 $$ List<IndexRequestBuilder> builders = new ArrayList()-->Line_36 $$ builders.add(client().prepareIndex(IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiVal[0].lon()).value(multiVal[0].lat()).endArray().startArray().value(multiVal[1].lon()).value(multiVal[1].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_50 $$ for (int i = 0; i < 5; i++) -->Line_71 $$ SearchHit searchHit = response.getHits().getAt(i)[ FD ]
Line_31 $$ double newMVLat, newMVLon-->Line_38 $$ newMVLat = (multiVal[0].lat() + multiVal[1].lat()) / 2d[ FD ]
Line_32 $$ for (int i = 0; i < numDocs; i++) -->Line_71 $$ SearchHit searchHit = response.getHits().getAt(i)[ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_4 $$ assertAcked(prepareCreate(IDX_NAME).addMapping("type", SINGLE_VALUED_FIELD_NAME, "type=geo_point,geohash_prefix=true,geohash_precision=12", MULTI_VALUED_FIELD_NAME, "type=geo_point", NUMBER_FIELD_NAME, "type=long", "tag", "type=string,index=not_analyzed"))[ CD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_44 $$ GeoPoint[] geoValues = new GeoPoint[5][ CD ]
Line_32 $$ for (int i = 0; i < numDocs; i++) -->Line_39 $$ newMVLon = (multiVal[0].lon() + multiVal[1].lon()) / 2d[ CD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_17 $$ for (int i = 0; i < singleValues.length; i++) [ CD ]
Line_17 $$ for (int i = 0; i < singleValues.length; i++) -->Line_51 $$ builders.add(client().prepareIndex(DATELINE_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, geoValues[i].lon(), geoValues[i].lat()).field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
Line_54 $$ for (int i = 0; i < 2000; i++) -->Line_56 $$ builders.add(client().prepareIndex(HIGH_CARD_IDX_NAME, "type").setSource(jsonBuilder().startObject().array(SINGLE_VALUED_FIELD_NAME, singleVal.lon(), singleVal.lat()).startArray(MULTI_VALUED_FIELD_NAME).startArray().value(multiValues[i % numUniqueGeoPoints].lon()).value(multiValues[i % numUniqueGeoPoints].lat()).endArray().startArray().value(multiValues[(i + 1) % numUniqueGeoPoints].lon()).value(multiValues[(i + 1) % numUniqueGeoPoints].lat()).endArray().endArray().field(NUMBER_FIELD_NAME, i).field("tag", "tag" + i).endObject()))[ FD ]
