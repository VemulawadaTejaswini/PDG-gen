Line_2 $$ public int filterCountByC_C(long classNameId, long classPK) -->Line_10 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), AnnouncementsEntry.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN)[ CD ]
Line_6 $$ StringBundler query = new StringBundler(3)-->Line_7 $$ query.append(_FILTER_SQL_COUNT_ANNOUNCEMENTSENTRY_WHERE)[ FD ]
Line_14 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_15 $$ q.addScalar(COUNT_COLUMN_NAME, com.liferay.portal.kernel.dao.orm.Type.LONG)[ FD ]
Line_16 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_17 $$ qPos.add(classNameId)[ FD ]
Line_10 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), AnnouncementsEntry.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN)-->Line_14 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_13 $$ session = openSession()-->Line_24 $$ closeSession(session)[ FD ]
Line_2 $$ public int filterCountByC_C(long classNameId, long classPK) -->Line_17 $$ qPos.add(classNameId)[ FD ]
Line_19 $$ Long count = (Long) q.uniqueResult()-->Line_20 $$ return count.intValue()[ FD ]
Line_3 $$ if (!InlineSQLHelperUtil.isEnabled()) -->Line_4 $$ return countByC_C(classNameId, classPK)[ CD ]
Line_2 $$ public int filterCountByC_C(long classNameId, long classPK) -->Line_18 $$ qPos.add(classPK)[ FD ]
Line_16 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_18 $$ qPos.add(classPK)[ FD ]
Line_2 $$ public int filterCountByC_C(long classNameId, long classPK) -->Line_4 $$ return countByC_C(classNameId, classPK)[ FD ]
Line_6 $$ StringBundler query = new StringBundler(3)-->Line_8 $$ query.append(_FINDER_COLUMN_C_C_CLASSNAMEID_2)[ FD ]
Line_6 $$ StringBundler query = new StringBundler(3)-->Line_9 $$ query.append(_FINDER_COLUMN_C_C_CLASSPK_2)[ FD ]
Line_11 $$ Session session = null-->Line_24 $$ closeSession(session)[ FD ]
Line_14 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_19 $$ Long count = (Long) q.uniqueResult()[ FD ]
Line_2 $$ public int filterCountByC_C(long classNameId, long classPK) -->Line_6 $$ StringBundler query = new StringBundler(3)[ CD ]
Line_11 $$ Session session = null-->Line_13 $$ session = openSession()[ FD ]
Line_11 $$ Session session = null-->Line_14 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ public int filterCountByC_C(long classNameId, long classPK) -->Line_8 $$ query.append(_FINDER_COLUMN_C_C_CLASSNAMEID_2)[ CD ]
Line_13 $$ session = openSession()-->Line_14 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ public int filterCountByC_C(long classNameId, long classPK) -->Line_11 $$ Session session = null[ CD ]
Line_2 $$ public int filterCountByC_C(long classNameId, long classPK) -->Line_9 $$ query.append(_FINDER_COLUMN_C_C_CLASSPK_2)[ CD ]
Line_6 $$ StringBundler query = new StringBundler(3)-->Line_10 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), AnnouncementsEntry.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN)[ FD ]
Line_14 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_16 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_2 $$ public int filterCountByC_C(long classNameId, long classPK) -->Line_7 $$ query.append(_FILTER_SQL_COUNT_ANNOUNCEMENTSENTRY_WHERE)[ CD ]
Line_2 $$ public int filterCountByC_C(long classNameId, long classPK) -->Line_3 $$ if (!InlineSQLHelperUtil.isEnabled()) [ CD ]
