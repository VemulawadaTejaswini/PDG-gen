Line_10 $$ SoccerTeam team = new SoccerTeam()-->Line_15 $$ player1.setOneVoneTeam(team)[ FD ]
Line_17 $$ SoccerTeam team2 = new SoccerTeam()-->Line_34 $$ team2.setOneVonePlayer(null)[ FD ]
Line_10 $$ SoccerTeam team = new SoccerTeam()-->Line_11 $$ team.setName("Shalrie's team")[ FD ]
Line_25 $$ tx = s.beginTransaction()-->Line_41 $$ tx.commit()[ FD ]
Line_12 $$ Player player1 = new Player()-->Line_14 $$ team.setOneVonePlayer(player1)[ FD ]
Line_29 $$ int count = ((Long) s.createQuery("select count(*) from Player").iterate().next()).intValue()-->Line_39 $$ count = ((Long) s.createQuery("select count(*) from Player").iterate().next()).intValue()[ FD ]
Line_12 $$ Player player1 = new Player()-->Line_15 $$ player1.setOneVoneTeam(team)[ FD ]
Line_25 $$ tx = s.beginTransaction()-->Line_35 $$ tx.commit()[ FD ]
Line_17 $$ SoccerTeam team2 = new SoccerTeam()-->Line_27 $$ team2 = (SoccerTeam) s.load(team2.getClass(), team2.getId())[ FD ]
Line_10 $$ SoccerTeam team = new SoccerTeam()-->Line_14 $$ team.setOneVonePlayer(player1)[ FD ]
Line_25 $$ tx = s.beginTransaction()-->Line_38 $$ tx = s.beginTransaction()[ FD ]
Line_37 $$ s = openSession()-->Line_38 $$ tx = s.beginTransaction()[ FD ]
Line_19 $$ Player player2 = new Player()-->Line_22 $$ player2.setOneVoneTeam(team2)[ FD ]
Line_9 $$ Transaction tx = s.beginTransaction()-->Line_41 $$ tx.commit()[ FD ]
Line_12 $$ Player player1 = new Player()-->Line_13 $$ player1.setName("Shalrie Joseph")[ FD ]
Line_17 $$ SoccerTeam team2 = new SoccerTeam()-->Line_18 $$ team2.setName("Taylor's team")[ FD ]
Line_10 $$ SoccerTeam team = new SoccerTeam()-->Line_16 $$ s.persist(team)[ FD ]
Line_37 $$ s = openSession()-->Line_39 $$ count = ((Long) s.createQuery("select count(*) from Player").iterate().next()).intValue()[ FD ]
Line_29 $$ int count = ((Long) s.createQuery("select count(*) from Player").iterate().next()).intValue()-->Line_30 $$ assertEquals("expected count of 2 but got = " + count, count, 2)[ FD ]
Line_29 $$ int count = ((Long) s.createQuery("select count(*) from Player").iterate().next()).intValue()-->Line_40 $$ assertEquals("expected count of 0 but got = " + count, count, 0)[ FD ]
Line_27 $$ team2 = (SoccerTeam) s.load(team2.getClass(), team2.getId())-->Line_34 $$ team2.setOneVonePlayer(null)[ FD ]
Line_37 $$ s = openSession()-->Line_42 $$ s.close()[ FD ]
Line_9 $$ Transaction tx = s.beginTransaction()-->Line_35 $$ tx.commit()[ FD ]
Line_10 $$ SoccerTeam team = new SoccerTeam()-->Line_28 $$ team = (SoccerTeam) s.load(team.getClass(), team.getId())[ FD ]
Line_9 $$ Transaction tx = s.beginTransaction()-->Line_25 $$ tx = s.beginTransaction()[ FD ]
Line_19 $$ Player player2 = new Player()-->Line_20 $$ player2.setName("Taylor Twellman")[ FD ]
Line_9 $$ Transaction tx = s.beginTransaction()-->Line_38 $$ tx = s.beginTransaction()[ FD ]
Line_17 $$ SoccerTeam team2 = new SoccerTeam()-->Line_21 $$ team2.setOneVonePlayer(player2)[ FD ]
Line_38 $$ tx = s.beginTransaction()-->Line_41 $$ tx.commit()[ FD ]
Line_17 $$ SoccerTeam team2 = new SoccerTeam()-->Line_22 $$ player2.setOneVoneTeam(team2)[ FD ]
Line_17 $$ SoccerTeam team2 = new SoccerTeam()-->Line_23 $$ s.persist(team2)[ FD ]
Line_19 $$ Player player2 = new Player()-->Line_21 $$ team2.setOneVonePlayer(player2)[ FD ]
Line_9 $$ Transaction tx = s.beginTransaction()-->Line_24 $$ tx.commit()[ FD ]
Line_39 $$ count = ((Long) s.createQuery("select count(*) from Player").iterate().next()).intValue()-->Line_40 $$ assertEquals("expected count of 0 but got = " + count, count, 0)[ FD ]
