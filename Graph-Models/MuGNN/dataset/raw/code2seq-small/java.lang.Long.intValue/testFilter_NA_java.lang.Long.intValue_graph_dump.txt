Line_5 $$ s = openSession()-->Line_6 $$ tx = s.beginTransaction()[ FD ]
Line_5 $$ s = openSession()-->Line_24 $$ s.disableFilter("betweenLength")[ FD ]
Line_2 $$ public void testFilter() throws Exception -->Line_29 $$ tx.rollback()[ CD ]
Line_2 $$ public void testFilter() throws Exception -->Line_16 $$ s.persist(f3)[ CD ]
Line_5 $$ s = openSession()-->Line_25 $$ s.enableFilter("minLength").setParameter("minLength", 5)[ FD ]
Line_3 $$ Session s-->Line_22 $$ long count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).intValue()[ FD ]
Line_2 $$ public void testFilter() throws Exception -->Line_10 $$ s.persist(f1)[ CD ]
Line_19 $$ s = openSession()-->Line_24 $$ s.disableFilter("betweenLength")[ FD ]
Line_22 $$ long count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).intValue()-->Line_27 $$ assertEquals(2l, count)[ FD ]
Line_4 $$ Transaction tx-->Line_20 $$ tx = s.beginTransaction()[ FD ]
Line_3 $$ Session s-->Line_5 $$ s = openSession()[ FD ]
Line_2 $$ public void testFilter() throws Exception -->Line_17 $$ tx.commit()[ CD ]
Line_2 $$ public void testFilter() throws Exception -->Line_23 $$ assertEquals(1, count)[ CD ]
Line_3 $$ Session s-->Line_19 $$ s = openSession()[ FD ]
Line_2 $$ public void testFilter() throws Exception -->Line_25 $$ s.enableFilter("minLength").setParameter("minLength", 5)[ CD ]
Line_5 $$ s = openSession()-->Line_10 $$ s.persist(f1)[ FD ]
Line_3 $$ Session s-->Line_26 $$ count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).longValue()[ FD ]
Line_19 $$ s = openSession()-->Line_25 $$ s.enableFilter("minLength").setParameter("minLength", 5)[ FD ]
Line_11 $$ Forest f2 = new Forest()-->Line_12 $$ f2.setLength(20)[ FD ]
Line_2 $$ public void testFilter() throws Exception -->Line_15 $$ f3.setLength(200)[ CD ]
Line_8 $$ Forest f1 = new Forest()-->Line_10 $$ s.persist(f1)[ FD ]
Line_2 $$ public void testFilter() throws Exception -->Line_4 $$ Transaction tx[ CD ]
Line_5 $$ s = openSession()-->Line_16 $$ s.persist(f3)[ FD ]
Line_2 $$ public void testFilter() throws Exception -->Line_24 $$ s.disableFilter("betweenLength")[ CD ]
Line_2 $$ public void testFilter() throws Exception -->Line_11 $$ Forest f2 = new Forest()[ CD ]
Line_19 $$ s = openSession()-->Line_20 $$ tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testFilter() throws Exception -->Line_30 $$ s.close()[ CD ]
Line_22 $$ long count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).intValue()-->Line_23 $$ assertEquals(1, count)[ FD ]
Line_2 $$ public void testFilter() throws Exception -->Line_14 $$ Forest f3 = new Forest()[ CD ]
Line_3 $$ Session s-->Line_21 $$ s.enableFilter("betweenLength").setParameter("minLength", 5).setParameter("maxLength", 50)[ FD ]
Line_2 $$ public void testFilter() throws Exception -->Line_5 $$ s = openSession()[ CD ]
Line_5 $$ s = openSession()-->Line_26 $$ count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).longValue()[ FD ]
Line_22 $$ long count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).intValue()-->Line_26 $$ count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).longValue()[ FD ]
Line_8 $$ Forest f1 = new Forest()-->Line_9 $$ f1.setLength(2)[ FD ]
Line_26 $$ count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).longValue()-->Line_27 $$ assertEquals(2l, count)[ FD ]
Line_2 $$ public void testFilter() throws Exception -->Line_21 $$ s.enableFilter("betweenLength").setParameter("minLength", 5).setParameter("maxLength", 50)[ CD ]
Line_3 $$ Session s-->Line_30 $$ s.close()[ FD ]
Line_3 $$ Session s-->Line_16 $$ s.persist(f3)[ FD ]
Line_2 $$ public void testFilter() throws Exception -->Line_27 $$ assertEquals(2l, count)[ CD ]
Line_5 $$ s = openSession()-->Line_7 $$ s.createQuery("delete Forest").executeUpdate()[ FD ]
Line_5 $$ s = openSession()-->Line_28 $$ s.disableFilter("minLength")[ FD ]
Line_3 $$ Session s-->Line_10 $$ s.persist(f1)[ FD ]
Line_6 $$ tx = s.beginTransaction()-->Line_17 $$ tx.commit()[ FD ]
Line_20 $$ tx = s.beginTransaction()-->Line_29 $$ tx.rollback()[ FD ]
Line_2 $$ public void testFilter() throws Exception -->Line_6 $$ tx = s.beginTransaction()[ CD ]
Line_3 $$ Session s-->Line_7 $$ s.createQuery("delete Forest").executeUpdate()[ FD ]
Line_6 $$ tx = s.beginTransaction()-->Line_20 $$ tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testFilter() throws Exception -->Line_18 $$ s.close()[ CD ]
Line_19 $$ s = openSession()-->Line_22 $$ long count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).intValue()[ FD ]
Line_5 $$ s = openSession()-->Line_13 $$ s.persist(f2)[ FD ]
Line_2 $$ public void testFilter() throws Exception -->Line_26 $$ count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).longValue()[ CD ]
Line_4 $$ Transaction tx-->Line_6 $$ tx = s.beginTransaction()[ FD ]
Line_3 $$ Session s-->Line_20 $$ tx = s.beginTransaction()[ FD ]
Line_5 $$ s = openSession()-->Line_30 $$ s.close()[ FD ]
Line_3 $$ Session s-->Line_25 $$ s.enableFilter("minLength").setParameter("minLength", 5)[ FD ]
Line_5 $$ s = openSession()-->Line_21 $$ s.enableFilter("betweenLength").setParameter("minLength", 5).setParameter("maxLength", 50)[ FD ]
Line_2 $$ public void testFilter() throws Exception -->Line_7 $$ s.createQuery("delete Forest").executeUpdate()[ CD ]
Line_2 $$ public void testFilter() throws Exception -->Line_22 $$ long count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).intValue()[ CD ]
Line_3 $$ Session s-->Line_28 $$ s.disableFilter("minLength")[ FD ]
Line_3 $$ Session s-->Line_24 $$ s.disableFilter("betweenLength")[ FD ]
Line_2 $$ public void testFilter() throws Exception -->Line_13 $$ s.persist(f2)[ CD ]
Line_19 $$ s = openSession()-->Line_21 $$ s.enableFilter("betweenLength").setParameter("minLength", 5).setParameter("maxLength", 50)[ FD ]
Line_3 $$ Session s-->Line_18 $$ s.close()[ FD ]
Line_2 $$ public void testFilter() throws Exception -->Line_9 $$ f1.setLength(2)[ CD ]
Line_2 $$ public void testFilter() throws Exception -->Line_20 $$ tx = s.beginTransaction()[ CD ]
Line_3 $$ Session s-->Line_6 $$ tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testFilter() throws Exception -->Line_8 $$ Forest f1 = new Forest()[ CD ]
Line_5 $$ s = openSession()-->Line_18 $$ s.close()[ FD ]
Line_5 $$ s = openSession()-->Line_22 $$ long count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).intValue()[ FD ]
Line_19 $$ s = openSession()-->Line_26 $$ count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).longValue()[ FD ]
Line_2 $$ public void testFilter() throws Exception -->Line_19 $$ s = openSession()[ CD ]
Line_2 $$ public void testFilter() throws Exception -->Line_28 $$ s.disableFilter("minLength")[ CD ]
Line_4 $$ Transaction tx-->Line_29 $$ tx.rollback()[ FD ]
Line_6 $$ tx = s.beginTransaction()-->Line_29 $$ tx.rollback()[ FD ]
Line_14 $$ Forest f3 = new Forest()-->Line_15 $$ f3.setLength(200)[ FD ]
Line_19 $$ s = openSession()-->Line_28 $$ s.disableFilter("minLength")[ FD ]
Line_3 $$ Session s-->Line_13 $$ s.persist(f2)[ FD ]
Line_4 $$ Transaction tx-->Line_17 $$ tx.commit()[ FD ]
Line_14 $$ Forest f3 = new Forest()-->Line_16 $$ s.persist(f3)[ FD ]
Line_5 $$ s = openSession()-->Line_20 $$ tx = s.beginTransaction()[ FD ]
Line_5 $$ s = openSession()-->Line_19 $$ s = openSession()[ FD ]
Line_2 $$ public void testFilter() throws Exception -->Line_3 $$ Session s[ CD ]
Line_19 $$ s = openSession()-->Line_30 $$ s.close()[ FD ]
Line_2 $$ public void testFilter() throws Exception -->Line_12 $$ f2.setLength(20)[ CD ]
Line_11 $$ Forest f2 = new Forest()-->Line_13 $$ s.persist(f2)[ FD ]
