Line_5 $$ Transaction tx-->Line_18 $$ tx.commit()[ FD ]
Line_23 $$ long count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).intValue()-->Line_24 $$ assertEquals(1, count)[ FD ]
Line_20 $$ s = openSession()-->Line_21 $$ tx = s.beginTransaction()[ FD ]
Line_5 $$ Transaction tx-->Line_30 $$ tx.rollback()[ FD ]
Line_4 $$ Session s-->Line_8 $$ s.createQuery("delete Forest").executeUpdate()[ FD ]
Line_4 $$ Session s-->Line_27 $$ count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).longValue()[ FD ]
Line_4 $$ Session s-->Line_6 $$ s = openSession()[ FD ]
Line_4 $$ Session s-->Line_22 $$ s.enableFilter("betweenLength").setParameter("minLength", 5).setParameter("maxLength", 50)[ FD ]
Line_6 $$ s = openSession()-->Line_31 $$ s.close()[ FD ]
Line_6 $$ s = openSession()-->Line_20 $$ s = openSession()[ FD ]
Line_6 $$ s = openSession()-->Line_23 $$ long count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).intValue()[ FD ]
Line_4 $$ Session s-->Line_23 $$ long count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).intValue()[ FD ]
Line_6 $$ s = openSession()-->Line_17 $$ s.persist(f3)[ FD ]
Line_20 $$ s = openSession()-->Line_25 $$ s.disableFilter("betweenLength")[ FD ]
Line_4 $$ Session s-->Line_11 $$ s.persist(f1)[ FD ]
Line_4 $$ Session s-->Line_20 $$ s = openSession()[ FD ]
Line_4 $$ Session s-->Line_29 $$ s.disableFilter("minLength")[ FD ]
Line_6 $$ s = openSession()-->Line_29 $$ s.disableFilter("minLength")[ FD ]
Line_6 $$ s = openSession()-->Line_14 $$ s.persist(f2)[ FD ]
Line_6 $$ s = openSession()-->Line_21 $$ tx = s.beginTransaction()[ FD ]
Line_7 $$ tx = s.beginTransaction()-->Line_30 $$ tx.rollback()[ FD ]
Line_20 $$ s = openSession()-->Line_26 $$ s.enableFilter("minLength").setParameter("minLength", 5)[ FD ]
Line_20 $$ s = openSession()-->Line_29 $$ s.disableFilter("minLength")[ FD ]
Line_5 $$ Transaction tx-->Line_7 $$ tx = s.beginTransaction()[ FD ]
Line_5 $$ Transaction tx-->Line_21 $$ tx = s.beginTransaction()[ FD ]
Line_20 $$ s = openSession()-->Line_22 $$ s.enableFilter("betweenLength").setParameter("minLength", 5).setParameter("maxLength", 50)[ FD ]
Line_6 $$ s = openSession()-->Line_25 $$ s.disableFilter("betweenLength")[ FD ]
Line_9 $$ Forest f1 = new Forest()-->Line_11 $$ s.persist(f1)[ FD ]
Line_23 $$ long count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).intValue()-->Line_27 $$ count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).longValue()[ FD ]
Line_6 $$ s = openSession()-->Line_7 $$ tx = s.beginTransaction()[ FD ]
Line_6 $$ s = openSession()-->Line_27 $$ count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).longValue()[ FD ]
Line_20 $$ s = openSession()-->Line_23 $$ long count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).intValue()[ FD ]
Line_4 $$ Session s-->Line_25 $$ s.disableFilter("betweenLength")[ FD ]
Line_6 $$ s = openSession()-->Line_19 $$ s.close()[ FD ]
Line_4 $$ Session s-->Line_7 $$ tx = s.beginTransaction()[ FD ]
Line_4 $$ Session s-->Line_21 $$ tx = s.beginTransaction()[ FD ]
Line_9 $$ Forest f1 = new Forest()-->Line_10 $$ f1.setLength(2)[ FD ]
Line_7 $$ tx = s.beginTransaction()-->Line_18 $$ tx.commit()[ FD ]
Line_15 $$ Forest f3 = new Forest()-->Line_17 $$ s.persist(f3)[ FD ]
Line_6 $$ s = openSession()-->Line_8 $$ s.createQuery("delete Forest").executeUpdate()[ FD ]
Line_6 $$ s = openSession()-->Line_11 $$ s.persist(f1)[ FD ]
Line_21 $$ tx = s.beginTransaction()-->Line_30 $$ tx.rollback()[ FD ]
Line_4 $$ Session s-->Line_14 $$ s.persist(f2)[ FD ]
Line_12 $$ Forest f2 = new Forest()-->Line_13 $$ f2.setLength(20)[ FD ]
Line_27 $$ count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).longValue()-->Line_28 $$ assertEquals(2l, count)[ FD ]
Line_20 $$ s = openSession()-->Line_31 $$ s.close()[ FD ]
Line_7 $$ tx = s.beginTransaction()-->Line_21 $$ tx = s.beginTransaction()[ FD ]
Line_12 $$ Forest f2 = new Forest()-->Line_14 $$ s.persist(f2)[ FD ]
Line_6 $$ s = openSession()-->Line_22 $$ s.enableFilter("betweenLength").setParameter("minLength", 5).setParameter("maxLength", 50)[ FD ]
Line_4 $$ Session s-->Line_19 $$ s.close()[ FD ]
Line_15 $$ Forest f3 = new Forest()-->Line_16 $$ f3.setLength(200)[ FD ]
Line_6 $$ s = openSession()-->Line_26 $$ s.enableFilter("minLength").setParameter("minLength", 5)[ FD ]
Line_4 $$ Session s-->Line_17 $$ s.persist(f3)[ FD ]
Line_20 $$ s = openSession()-->Line_27 $$ count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).longValue()[ FD ]
Line_4 $$ Session s-->Line_31 $$ s.close()[ FD ]
Line_4 $$ Session s-->Line_26 $$ s.enableFilter("minLength").setParameter("minLength", 5)[ FD ]
Line_23 $$ long count = ((Long) s.createQuery("select count(*) from Forest").iterate().next()).intValue()-->Line_28 $$ assertEquals(2l, count)[ FD ]
