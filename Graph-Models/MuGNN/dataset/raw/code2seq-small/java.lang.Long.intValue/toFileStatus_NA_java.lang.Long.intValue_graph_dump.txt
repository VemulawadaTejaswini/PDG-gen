Line_2 $$ public static HdfsFileStatus toFileStatus(final Map<?, ?> json, boolean includesType) -->Line_8 $$ final PathType type = PathType.valueOf((String) m.get("type"))[ CD ]
Line_2 $$ public static HdfsFileStatus toFileStatus(final Map<?, ?> json, boolean includesType) -->Line_6 $$ final Map<?, ?> m = includesType ? (Map<?, ?>) json.get(FileStatus.class.getSimpleName()) : json[ CD ]
Line_2 $$ public static HdfsFileStatus toFileStatus(final Map<?, ?> json, boolean includesType) -->Line_15 $$ final long mTime = (Long) m.get("modificationTime")[ CD ]
Line_6 $$ final Map<?, ?> m = includesType ? (Map<?, ?>) json.get(FileStatus.class.getSimpleName()) : json-->Line_9 $$ final byte[] symlink = type != PathType.SYMLINK ? null : DFSUtil.string2Bytes((String) m.get("symlink"))[ FD ]
Line_2 $$ public static HdfsFileStatus toFileStatus(final Map<?, ?> json, boolean includesType) -->Line_14 $$ final long aTime = (Long) m.get("accessTime")[ CD ]
Line_2 $$ public static HdfsFileStatus toFileStatus(final Map<?, ?> json, boolean includesType) -->Line_11 $$ final String owner = (String) m.get("owner")[ CD ]
Line_2 $$ public static HdfsFileStatus toFileStatus(final Map<?, ?> json, boolean includesType) -->Line_7 $$ final String localName = (String) m.get("pathSuffix")[ CD ]
Line_6 $$ final Map<?, ?> m = includesType ? (Map<?, ?>) json.get(FileStatus.class.getSimpleName()) : json-->Line_19 $$ Long childrenNumLong = (Long) m.get("childrenNum")[ FD ]
Line_6 $$ final Map<?, ?> m = includesType ? (Map<?, ?>) json.get(FileStatus.class.getSimpleName()) : json-->Line_14 $$ final long aTime = (Long) m.get("accessTime")[ FD ]
Line_2 $$ public static HdfsFileStatus toFileStatus(final Map<?, ?> json, boolean includesType) -->Line_10 $$ final long len = (Long) m.get("length")[ CD ]
Line_19 $$ Long childrenNumLong = (Long) m.get("childrenNum")-->Line_20 $$ final int childrenNum = (childrenNumLong == null) ? -1 : childrenNumLong.intValue()[ FD ]
Line_2 $$ public static HdfsFileStatus toFileStatus(final Map<?, ?> json, boolean includesType) -->Line_20 $$ final int childrenNum = (childrenNumLong == null) ? -1 : childrenNumLong.intValue()[ CD ]
Line_2 $$ public static HdfsFileStatus toFileStatus(final Map<?, ?> json, boolean includesType) -->Line_19 $$ Long childrenNumLong = (Long) m.get("childrenNum")[ CD ]
Line_6 $$ final Map<?, ?> m = includesType ? (Map<?, ?>) json.get(FileStatus.class.getSimpleName()) : json-->Line_7 $$ final String localName = (String) m.get("pathSuffix")[ FD ]
Line_6 $$ final Map<?, ?> m = includesType ? (Map<?, ?>) json.get(FileStatus.class.getSimpleName()) : json-->Line_18 $$ final long fileId = m.containsKey("fileId") ? (Long) m.get("fileId") : INodeId.GRANDFATHER_INODE_ID[ FD ]
Line_7 $$ final String localName = (String) m.get("pathSuffix")-->Line_21 $$ return new HdfsFileStatus(len, type == PathType.DIRECTORY, replication, blockSize, mTime, aTime, permission, owner, group, symlink, DFSUtil.string2Bytes(localName), fileId, childrenNum, null)[ FD ]
Line_2 $$ public static HdfsFileStatus toFileStatus(final Map<?, ?> json, boolean includesType) -->Line_12 $$ final String group = (String) m.get("group")[ CD ]
Line_2 $$ public static HdfsFileStatus toFileStatus(final Map<?, ?> json, boolean includesType) -->Line_13 $$ final FsPermission permission = toFsPermission((String) m.get("permission"), (Boolean) m.get("aclBit"))[ CD ]
Line_2 $$ public static HdfsFileStatus toFileStatus(final Map<?, ?> json, boolean includesType) -->Line_16 $$ final long blockSize = (Long) m.get("blockSize")[ CD ]
Line_2 $$ public static HdfsFileStatus toFileStatus(final Map<?, ?> json, boolean includesType) -->Line_18 $$ final long fileId = m.containsKey("fileId") ? (Long) m.get("fileId") : INodeId.GRANDFATHER_INODE_ID[ CD ]
Line_2 $$ public static HdfsFileStatus toFileStatus(final Map<?, ?> json, boolean includesType) -->Line_3 $$ if (json == null) [ FD ]
Line_6 $$ final Map<?, ?> m = includesType ? (Map<?, ?>) json.get(FileStatus.class.getSimpleName()) : json-->Line_11 $$ final String owner = (String) m.get("owner")[ FD ]
Line_2 $$ public static HdfsFileStatus toFileStatus(final Map<?, ?> json, boolean includesType) -->Line_6 $$ final Map<?, ?> m = includesType ? (Map<?, ?>) json.get(FileStatus.class.getSimpleName()) : json[ FD ]
Line_6 $$ final Map<?, ?> m = includesType ? (Map<?, ?>) json.get(FileStatus.class.getSimpleName()) : json-->Line_16 $$ final long blockSize = (Long) m.get("blockSize")[ FD ]
Line_6 $$ final Map<?, ?> m = includesType ? (Map<?, ?>) json.get(FileStatus.class.getSimpleName()) : json-->Line_12 $$ final String group = (String) m.get("group")[ FD ]
Line_2 $$ public static HdfsFileStatus toFileStatus(final Map<?, ?> json, boolean includesType) -->Line_17 $$ final short replication = (short) (long) (Long) m.get("replication")[ CD ]
Line_6 $$ final Map<?, ?> m = includesType ? (Map<?, ?>) json.get(FileStatus.class.getSimpleName()) : json-->Line_10 $$ final long len = (Long) m.get("length")[ FD ]
Line_6 $$ final Map<?, ?> m = includesType ? (Map<?, ?>) json.get(FileStatus.class.getSimpleName()) : json-->Line_15 $$ final long mTime = (Long) m.get("modificationTime")[ FD ]
Line_3 $$ if (json == null) -->Line_4 $$ return null[ CD ]
Line_2 $$ public static HdfsFileStatus toFileStatus(final Map<?, ?> json, boolean includesType) -->Line_9 $$ final byte[] symlink = type != PathType.SYMLINK ? null : DFSUtil.string2Bytes((String) m.get("symlink"))[ CD ]
Line_2 $$ public static HdfsFileStatus toFileStatus(final Map<?, ?> json, boolean includesType) -->Line_21 $$ return new HdfsFileStatus(len, type == PathType.DIRECTORY, replication, blockSize, mTime, aTime, permission, owner, group, symlink, DFSUtil.string2Bytes(localName), fileId, childrenNum, null)[ CD ]
Line_2 $$ public static HdfsFileStatus toFileStatus(final Map<?, ?> json, boolean includesType) -->Line_3 $$ if (json == null) [ CD ]
Line_6 $$ final Map<?, ?> m = includesType ? (Map<?, ?>) json.get(FileStatus.class.getSimpleName()) : json-->Line_8 $$ final PathType type = PathType.valueOf((String) m.get("type"))[ FD ]
Line_6 $$ final Map<?, ?> m = includesType ? (Map<?, ?>) json.get(FileStatus.class.getSimpleName()) : json-->Line_17 $$ final short replication = (short) (long) (Long) m.get("replication")[ FD ]
Line_6 $$ final Map<?, ?> m = includesType ? (Map<?, ?>) json.get(FileStatus.class.getSimpleName()) : json-->Line_13 $$ final FsPermission permission = toFsPermission((String) m.get("permission"), (Boolean) m.get("aclBit"))[ FD ]
