Line_15 $$ StringBundler query = new StringBundler(4)-->Line_16 $$ query.append(_FILTER_SQL_COUNT_BLOGSENTRY_WHERE)[ FD ]
Line_30 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_38 $$ Long count = (Long) q.uniqueResult()[ FD ]
Line_29 $$ session = openSession()-->Line_30 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_15 $$ StringBundler query = new StringBundler(4)-->Line_26 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), BlogsEntry.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN, groupId)[ FD ]
Line_19 $$ if (displayDate == null) -->Line_22 $$ bindDisplayDate = true[ CD ]
Line_19 $$ if (displayDate == null) -->Line_23 $$ query.append(_FINDER_COLUMN_G_LTD_NOTS_DISPLAYDATE_2)[ CD ]
Line_27 $$ Session session = null-->Line_43 $$ closeSession(session)[ FD ]
Line_27 $$ Session session = null-->Line_29 $$ session = openSession()[ FD ]
Line_32 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_33 $$ qPos.add(groupId)[ FD ]
Line_19 $$ if (displayDate == null) -->Line_20 $$ query.append(_FINDER_COLUMN_G_LTD_NOTS_DISPLAYDATE_1)[ CD ]
Line_15 $$ StringBundler query = new StringBundler(4)-->Line_20 $$ query.append(_FINDER_COLUMN_G_LTD_NOTS_DISPLAYDATE_1)[ FD ]
Line_30 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_31 $$ q.addScalar(COUNT_COLUMN_NAME, com.liferay.portal.kernel.dao.orm.Type.LONG)[ FD ]
Line_30 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_32 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_15 $$ StringBundler query = new StringBundler(4)-->Line_23 $$ query.append(_FINDER_COLUMN_G_LTD_NOTS_DISPLAYDATE_2)[ FD ]
Line_26 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), BlogsEntry.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN, groupId)-->Line_30 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_27 $$ Session session = null-->Line_30 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_32 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_37 $$ qPos.add(status)[ FD ]
Line_38 $$ Long count = (Long) q.uniqueResult()-->Line_39 $$ return count.intValue()[ FD ]
Line_15 $$ StringBundler query = new StringBundler(4)-->Line_17 $$ query.append(_FINDER_COLUMN_G_LTD_NOTS_GROUPID_2)[ FD ]
Line_29 $$ session = openSession()-->Line_43 $$ closeSession(session)[ FD ]
Line_12 $$ if (!InlineSQLHelperUtil.isEnabled(groupId)) -->Line_13 $$ return countByG_LtD_NotS(groupId, displayDate, status)[ CD ]
Line_15 $$ StringBundler query = new StringBundler(4)-->Line_25 $$ query.append(_FINDER_COLUMN_G_LTD_NOTS_STATUS_2)[ FD ]
Line_18 $$ boolean bindDisplayDate = false-->Line_22 $$ bindDisplayDate = true[ FD ]
Line_32 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_35 $$ qPos.add(new Timestamp(displayDate.getTime()))[ FD ]
Line_34 $$ if (bindDisplayDate) -->Line_35 $$ qPos.add(new Timestamp(displayDate.getTime()))[ CD ]
