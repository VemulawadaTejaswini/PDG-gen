Line_4 $$ final SourceMock sequence = new SourceMock(1, 3)-->Line_19 $$ assertEquals(1, sequence.getCurrentValue())[ FD ]
Line_4 $$ final SourceMock sequence = new SourceMock(1, 3)-->Line_23 $$ assertEquals(2, sequence.getTimesCalled())[ FD ]
Line_5 $$ final Optimizer optimizer = buildPooledLoOptimizer(1, 3)-->Line_8 $$ Long next = (Long) optimizer.generate(sequence)[ FD ]
Line_4 $$ final SourceMock sequence = new SourceMock(1, 3)-->Line_12 $$ next = (Long) optimizer.generate(sequence)[ FD ]
Line_12 $$ next = (Long) optimizer.generate(sequence)-->Line_13 $$ assertEquals(2, next.intValue())[ FD ]
Line_4 $$ final SourceMock sequence = new SourceMock(1, 3)-->Line_16 $$ next = (Long) optimizer.generate(sequence)[ FD ]
Line_4 $$ final SourceMock sequence = new SourceMock(1, 3)-->Line_15 $$ assertEquals(1, sequence.getCurrentValue())[ FD ]
Line_16 $$ next = (Long) optimizer.generate(sequence)-->Line_17 $$ assertEquals(3, next.intValue())[ FD ]
Line_4 $$ final SourceMock sequence = new SourceMock(1, 3)-->Line_8 $$ Long next = (Long) optimizer.generate(sequence)[ FD ]
Line_4 $$ final SourceMock sequence = new SourceMock(1, 3)-->Line_6 $$ assertEquals(0, sequence.getTimesCalled())[ FD ]
Line_12 $$ next = (Long) optimizer.generate(sequence)-->Line_22 $$ assertEquals(4, next.intValue())[ FD ]
Line_4 $$ final SourceMock sequence = new SourceMock(1, 3)-->Line_18 $$ assertEquals(1, sequence.getTimesCalled())[ FD ]
Line_8 $$ Long next = (Long) optimizer.generate(sequence)-->Line_9 $$ assertEquals(1, next.intValue())[ FD ]
Line_4 $$ final SourceMock sequence = new SourceMock(1, 3)-->Line_11 $$ assertEquals(1, sequence.getCurrentValue())[ FD ]
Line_5 $$ final Optimizer optimizer = buildPooledLoOptimizer(1, 3)-->Line_12 $$ next = (Long) optimizer.generate(sequence)[ FD ]
Line_8 $$ Long next = (Long) optimizer.generate(sequence)-->Line_17 $$ assertEquals(3, next.intValue())[ FD ]
Line_16 $$ next = (Long) optimizer.generate(sequence)-->Line_22 $$ assertEquals(4, next.intValue())[ FD ]
Line_8 $$ Long next = (Long) optimizer.generate(sequence)-->Line_13 $$ assertEquals(2, next.intValue())[ FD ]
Line_12 $$ next = (Long) optimizer.generate(sequence)-->Line_16 $$ next = (Long) optimizer.generate(sequence)[ FD ]
Line_8 $$ Long next = (Long) optimizer.generate(sequence)-->Line_12 $$ next = (Long) optimizer.generate(sequence)[ FD ]
Line_8 $$ Long next = (Long) optimizer.generate(sequence)-->Line_22 $$ assertEquals(4, next.intValue())[ FD ]
Line_5 $$ final Optimizer optimizer = buildPooledLoOptimizer(1, 3)-->Line_16 $$ next = (Long) optimizer.generate(sequence)[ FD ]
Line_4 $$ final SourceMock sequence = new SourceMock(1, 3)-->Line_24 $$ assertEquals((1 + 3), sequence.getCurrentValue())[ FD ]
Line_4 $$ final SourceMock sequence = new SourceMock(1, 3)-->Line_10 $$ assertEquals(1, sequence.getTimesCalled())[ FD ]
Line_4 $$ final SourceMock sequence = new SourceMock(1, 3)-->Line_7 $$ assertEquals(-1, sequence.getCurrentValue())[ FD ]
Line_4 $$ final SourceMock sequence = new SourceMock(1, 3)-->Line_14 $$ assertEquals(1, sequence.getTimesCalled())[ FD ]
Line_8 $$ Long next = (Long) optimizer.generate(sequence)-->Line_16 $$ next = (Long) optimizer.generate(sequence)[ FD ]
Line_12 $$ next = (Long) optimizer.generate(sequence)-->Line_17 $$ assertEquals(3, next.intValue())[ FD ]
