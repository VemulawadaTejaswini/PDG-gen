Line_18 $$ Long count = (Long) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_G_V, finderArgs, this)-->Line_47 $$ return count.intValue()[ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_21 $$ query.append(_SQL_COUNT_ASSETCATEGORY_WHERE)[ FD ]
Line_18 $$ Long count = (Long) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_G_V, finderArgs, this)-->Line_19 $$ if (count == null) [ FD ]
Line_11 $$ if (vocabularyIds == null) -->Line_12 $$ vocabularyIds = new long[0][ CD ]
Line_32 $$ Session session = null-->Line_35 $$ Query q = session.createQuery(sql)[ FD ]
Line_23 $$ if (vocabularyIds.length > 0) -->Line_26 $$ query.append(StringUtil.merge(vocabularyIds))[ CD ]
Line_12 $$ vocabularyIds = new long[0]-->Line_26 $$ query.append(StringUtil.merge(vocabularyIds))[ FD ]
Line_12 $$ vocabularyIds = new long[0]-->Line_17 $$ Object[] finderArgs = new Object[] [ FD ]
Line_23 $$ if (vocabularyIds.length > 0) -->Line_27 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_32 $$ Session session = null-->Line_34 $$ session = openSession()[ FD ]
Line_17 $$ Object[] finderArgs = new Object[] -->Line_18 $$ Long count = (Long) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_G_V, finderArgs, this)[ FD ]
Line_13 $$ if (vocabularyIds.length > 1) -->Line_14 $$ vocabularyIds = ArrayUtil.unique(vocabularyIds)[ CD ]
Line_32 $$ Session session = null-->Line_44 $$ closeSession(session)[ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_28 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_31 $$ String sql = query.toString()[ FD ]
Line_31 $$ String sql = query.toString()-->Line_35 $$ Query q = session.createQuery(sql)[ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_30 $$ query.setStringAt(removeConjunction(query.stringAt(query.index() - 1)), query.index() - 1)[ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_22 $$ query.append(_FINDER_COLUMN_G_V_GROUPID_2)[ FD ]
Line_23 $$ if (vocabularyIds.length > 0) -->Line_28 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_34 $$ session = openSession()-->Line_35 $$ Query q = session.createQuery(sql)[ FD ]
Line_17 $$ Object[] finderArgs = new Object[] -->Line_39 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_G_V, finderArgs, count)[ FD ]
Line_14 $$ vocabularyIds = ArrayUtil.unique(vocabularyIds)-->Line_15 $$ Arrays.sort(vocabularyIds)[ FD ]
Line_18 $$ Long count = (Long) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_G_V, finderArgs, this)-->Line_38 $$ count = (Long) q.uniqueResult()[ FD ]
Line_19 $$ if (count == null) -->Line_23 $$ if (vocabularyIds.length > 0) [ CD ]
Line_11 $$ if (vocabularyIds == null) -->Line_13 $$ if (vocabularyIds.length > 1) [ CD ]
Line_19 $$ if (count == null) -->Line_32 $$ Session session = null[ CD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_25 $$ query.append(_FINDER_COLUMN_G_V_VOCABULARYID_7)[ FD ]
Line_13 $$ if (vocabularyIds.length > 1) -->Line_15 $$ Arrays.sort(vocabularyIds)[ CD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_27 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_35 $$ Query q = session.createQuery(sql)-->Line_38 $$ count = (Long) q.uniqueResult()[ FD ]
Line_23 $$ if (vocabularyIds.length > 0) -->Line_24 $$ query.append(StringPool.OPEN_PARENTHESIS)[ CD ]
Line_34 $$ session = openSession()-->Line_44 $$ closeSession(session)[ FD ]
Line_18 $$ Long count = (Long) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_G_V, finderArgs, this)-->Line_39 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_G_V, finderArgs, count)[ FD ]
Line_19 $$ if (count == null) -->Line_22 $$ query.append(_FINDER_COLUMN_G_V_GROUPID_2)[ CD ]
Line_35 $$ Query q = session.createQuery(sql)-->Line_36 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_38 $$ count = (Long) q.uniqueResult()-->Line_39 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_G_V, finderArgs, count)[ FD ]
Line_19 $$ if (count == null) -->Line_31 $$ String sql = query.toString()[ CD ]
Line_17 $$ Object[] finderArgs = new Object[] -->Line_41 $$ finderCache.removeResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_G_V, finderArgs)[ FD ]
Line_14 $$ vocabularyIds = ArrayUtil.unique(vocabularyIds)-->Line_26 $$ query.append(StringUtil.merge(vocabularyIds))[ FD ]
Line_12 $$ vocabularyIds = new long[0]-->Line_14 $$ vocabularyIds = ArrayUtil.unique(vocabularyIds)[ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_24 $$ query.append(StringPool.OPEN_PARENTHESIS)[ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_26 $$ query.append(StringUtil.merge(vocabularyIds))[ FD ]
Line_23 $$ if (vocabularyIds.length > 0) -->Line_25 $$ query.append(_FINDER_COLUMN_G_V_VOCABULARYID_7)[ CD ]
Line_19 $$ if (count == null) -->Line_20 $$ StringBundler query = new StringBundler()[ CD ]
Line_38 $$ count = (Long) q.uniqueResult()-->Line_47 $$ return count.intValue()[ FD ]
Line_12 $$ vocabularyIds = new long[0]-->Line_15 $$ Arrays.sort(vocabularyIds)[ FD ]
Line_19 $$ if (count == null) -->Line_21 $$ query.append(_SQL_COUNT_ASSETCATEGORY_WHERE)[ CD ]
Line_19 $$ if (count == null) -->Line_30 $$ query.setStringAt(removeConjunction(query.stringAt(query.index() - 1)), query.index() - 1)[ CD ]
Line_36 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_37 $$ qPos.add(groupId)[ FD ]
Line_14 $$ vocabularyIds = ArrayUtil.unique(vocabularyIds)-->Line_17 $$ Object[] finderArgs = new Object[] [ FD ]
