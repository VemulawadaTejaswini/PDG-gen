Line_18 $$ Session session = null-->Line_20 $$ session = openSession()[ FD ]
Line_29 $$ Long count = (Long) q.uniqueResult()-->Line_30 $$ return count.intValue()[ FD ]
Line_2 $$ public int filterCountByG_C_L(long groupId, long categoryId, Date lastPostDate) -->Line_9 $$ query.append(_FINDER_COLUMN_G_C_L_CATEGORYID_2)[ CD ]
Line_6 $$ StringBundler query = new StringBundler(4)-->Line_12 $$ query.append(_FINDER_COLUMN_G_C_L_LASTPOSTDATE_1)[ FD ]
Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_23 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_11 $$ if (lastPostDate == null) -->Line_12 $$ query.append(_FINDER_COLUMN_G_C_L_LASTPOSTDATE_1)[ CD ]
Line_11 $$ if (lastPostDate == null) -->Line_15 $$ query.append(_FINDER_COLUMN_G_C_L_LASTPOSTDATE_2)[ CD ]
Line_2 $$ public int filterCountByG_C_L(long groupId, long categoryId, Date lastPostDate) -->Line_18 $$ Session session = null[ CD ]
Line_2 $$ public int filterCountByG_C_L(long groupId, long categoryId, Date lastPostDate) -->Line_25 $$ qPos.add(categoryId)[ FD ]
Line_20 $$ session = openSession()-->Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ public int filterCountByG_C_L(long groupId, long categoryId, Date lastPostDate) -->Line_27 $$ qPos.add(new Timestamp(lastPostDate.getTime()))[ FD ]
Line_2 $$ public int filterCountByG_C_L(long groupId, long categoryId, Date lastPostDate) -->Line_3 $$ if (!InlineSQLHelperUtil.isEnabled(groupId)) [ FD ]
Line_2 $$ public int filterCountByG_C_L(long groupId, long categoryId, Date lastPostDate) -->Line_11 $$ if (lastPostDate == null) [ FD ]
Line_23 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_27 $$ qPos.add(new Timestamp(lastPostDate.getTime()))[ FD ]
Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_22 $$ q.addScalar(COUNT_COLUMN_NAME, com.liferay.portal.kernel.dao.orm.Type.LONG)[ FD ]
Line_6 $$ StringBundler query = new StringBundler(4)-->Line_9 $$ query.append(_FINDER_COLUMN_G_C_L_CATEGORYID_2)[ FD ]
Line_6 $$ StringBundler query = new StringBundler(4)-->Line_7 $$ query.append(_FILTER_SQL_COUNT_MBTHREAD_WHERE)[ FD ]
Line_3 $$ if (!InlineSQLHelperUtil.isEnabled(groupId)) -->Line_4 $$ return countByG_C_L(groupId, categoryId, lastPostDate)[ CD ]
Line_2 $$ public int filterCountByG_C_L(long groupId, long categoryId, Date lastPostDate) -->Line_7 $$ query.append(_FILTER_SQL_COUNT_MBTHREAD_WHERE)[ CD ]
Line_2 $$ public int filterCountByG_C_L(long groupId, long categoryId, Date lastPostDate) -->Line_6 $$ StringBundler query = new StringBundler(4)[ CD ]
Line_26 $$ if (bindLastPostDate) -->Line_27 $$ qPos.add(new Timestamp(lastPostDate.getTime()))[ CD ]
Line_6 $$ StringBundler query = new StringBundler(4)-->Line_15 $$ query.append(_FINDER_COLUMN_G_C_L_LASTPOSTDATE_2)[ FD ]
Line_18 $$ Session session = null-->Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ public int filterCountByG_C_L(long groupId, long categoryId, Date lastPostDate) -->Line_8 $$ query.append(_FINDER_COLUMN_G_C_L_GROUPID_2)[ CD ]
Line_18 $$ Session session = null-->Line_34 $$ closeSession(session)[ FD ]
Line_2 $$ public int filterCountByG_C_L(long groupId, long categoryId, Date lastPostDate) -->Line_4 $$ return countByG_C_L(groupId, categoryId, lastPostDate)[ FD ]
Line_6 $$ StringBundler query = new StringBundler(4)-->Line_17 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), MBThread.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN, groupId)[ FD ]
Line_20 $$ session = openSession()-->Line_34 $$ closeSession(session)[ FD ]
Line_2 $$ public int filterCountByG_C_L(long groupId, long categoryId, Date lastPostDate) -->Line_3 $$ if (!InlineSQLHelperUtil.isEnabled(groupId)) [ CD ]
Line_2 $$ public int filterCountByG_C_L(long groupId, long categoryId, Date lastPostDate) -->Line_24 $$ qPos.add(groupId)[ FD ]
Line_2 $$ public int filterCountByG_C_L(long groupId, long categoryId, Date lastPostDate) -->Line_11 $$ if (lastPostDate == null) [ CD ]
Line_2 $$ public int filterCountByG_C_L(long groupId, long categoryId, Date lastPostDate) -->Line_17 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), MBThread.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN, groupId)[ FD ]
Line_17 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), MBThread.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN, groupId)-->Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_23 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_24 $$ qPos.add(groupId)[ FD ]
Line_10 $$ boolean bindLastPostDate = false-->Line_14 $$ bindLastPostDate = true[ FD ]
Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_29 $$ Long count = (Long) q.uniqueResult()[ FD ]
Line_2 $$ public int filterCountByG_C_L(long groupId, long categoryId, Date lastPostDate) -->Line_17 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), MBThread.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN, groupId)[ CD ]
Line_6 $$ StringBundler query = new StringBundler(4)-->Line_8 $$ query.append(_FINDER_COLUMN_G_C_L_GROUPID_2)[ FD ]
Line_2 $$ public int filterCountByG_C_L(long groupId, long categoryId, Date lastPostDate) -->Line_10 $$ boolean bindLastPostDate = false[ CD ]
Line_23 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_25 $$ qPos.add(categoryId)[ FD ]
Line_11 $$ if (lastPostDate == null) -->Line_14 $$ bindLastPostDate = true[ CD ]
