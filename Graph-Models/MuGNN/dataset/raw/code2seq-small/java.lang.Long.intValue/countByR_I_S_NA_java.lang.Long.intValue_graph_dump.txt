Line_9 $$ Object[] finderArgs = new Object[] -->Line_33 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_R_I_S, finderArgs, count)[ FD ]
Line_11 $$ if (count == null) -->Line_25 $$ Session session = null[ CD ]
Line_10 $$ Long count = (Long) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_R_I_S, finderArgs, this)-->Line_11 $$ if (count == null) [ FD ]
Line_16 $$ if (statuses.length > 0) -->Line_18 $$ query.append(_FINDER_COLUMN_R_I_S_STATUS_7)[ CD ]
Line_16 $$ if (statuses.length > 0) -->Line_19 $$ query.append(StringUtil.merge(statuses))[ CD ]
Line_2 $$ public int countByR_I_S(long resourcePrimKey, boolean indexable, int[] statuses) -->Line_30 $$ qPos.add(resourcePrimKey)[ FD ]
Line_6 $$ statuses = ArrayUtil.unique(statuses)-->Line_9 $$ Object[] finderArgs = new Object[] [ FD ]
Line_11 $$ if (count == null) -->Line_12 $$ StringBundler query = new StringBundler()[ CD ]
Line_9 $$ Object[] finderArgs = new Object[] -->Line_10 $$ Long count = (Long) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_R_I_S, finderArgs, this)[ FD ]
Line_2 $$ public int countByR_I_S(long resourcePrimKey, boolean indexable, int[] statuses) -->Line_9 $$ Object[] finderArgs = new Object[] [ FD ]
Line_2 $$ public int countByR_I_S(long resourcePrimKey, boolean indexable, int[] statuses) -->Line_6 $$ statuses = ArrayUtil.unique(statuses)[ FD ]
Line_4 $$ statuses = new int[0]-->Line_7 $$ Arrays.sort(statuses)[ FD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_20 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_3 $$ if (statuses == null) -->Line_4 $$ statuses = new int[0][ CD ]
Line_25 $$ Session session = null-->Line_28 $$ Query q = session.createQuery(sql)[ FD ]
Line_32 $$ count = (Long) q.uniqueResult()-->Line_41 $$ return count.intValue()[ FD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_14 $$ query.append(_FINDER_COLUMN_R_I_S_RESOURCEPRIMKEY_2)[ FD ]
Line_11 $$ if (count == null) -->Line_14 $$ query.append(_FINDER_COLUMN_R_I_S_RESOURCEPRIMKEY_2)[ CD ]
Line_3 $$ if (statuses == null) -->Line_5 $$ if (statuses.length > 1) [ CD ]
Line_11 $$ if (count == null) -->Line_24 $$ String sql = query.toString()[ CD ]
Line_2 $$ public int countByR_I_S(long resourcePrimKey, boolean indexable, int[] statuses) -->Line_41 $$ return count.intValue()[ CD ]
Line_27 $$ session = openSession()-->Line_38 $$ closeSession(session)[ FD ]
Line_11 $$ if (count == null) -->Line_13 $$ query.append(_SQL_COUNT_JOURNALARTICLE_WHERE)[ CD ]
Line_28 $$ Query q = session.createQuery(sql)-->Line_29 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_2 $$ public int countByR_I_S(long resourcePrimKey, boolean indexable, int[] statuses) -->Line_3 $$ if (statuses == null) [ CD ]
Line_6 $$ statuses = ArrayUtil.unique(statuses)-->Line_19 $$ query.append(StringUtil.merge(statuses))[ FD ]
Line_25 $$ Session session = null-->Line_27 $$ session = openSession()[ FD ]
Line_29 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_30 $$ qPos.add(resourcePrimKey)[ FD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_18 $$ query.append(_FINDER_COLUMN_R_I_S_STATUS_7)[ FD ]
Line_25 $$ Session session = null-->Line_38 $$ closeSession(session)[ FD ]
Line_2 $$ public int countByR_I_S(long resourcePrimKey, boolean indexable, int[] statuses) -->Line_11 $$ if (count == null) [ CD ]
Line_6 $$ statuses = ArrayUtil.unique(statuses)-->Line_7 $$ Arrays.sort(statuses)[ FD ]
Line_24 $$ String sql = query.toString()-->Line_28 $$ Query q = session.createQuery(sql)[ FD ]
Line_27 $$ session = openSession()-->Line_28 $$ Query q = session.createQuery(sql)[ FD ]
Line_10 $$ Long count = (Long) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_R_I_S, finderArgs, this)-->Line_32 $$ count = (Long) q.uniqueResult()[ FD ]
Line_2 $$ public int countByR_I_S(long resourcePrimKey, boolean indexable, int[] statuses) -->Line_9 $$ Object[] finderArgs = new Object[] [ CD ]
Line_4 $$ statuses = new int[0]-->Line_6 $$ statuses = ArrayUtil.unique(statuses)[ FD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_15 $$ query.append(_FINDER_COLUMN_R_I_S_INDEXABLE_2)[ FD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_24 $$ String sql = query.toString()[ FD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_17 $$ query.append(StringPool.OPEN_PARENTHESIS)[ FD ]
Line_28 $$ Query q = session.createQuery(sql)-->Line_32 $$ count = (Long) q.uniqueResult()[ FD ]
Line_16 $$ if (statuses.length > 0) -->Line_20 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_9 $$ Object[] finderArgs = new Object[] -->Line_35 $$ finderCache.removeResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_R_I_S, finderArgs)[ FD ]
Line_2 $$ public int countByR_I_S(long resourcePrimKey, boolean indexable, int[] statuses) -->Line_7 $$ Arrays.sort(statuses)[ FD ]
Line_11 $$ if (count == null) -->Line_16 $$ if (statuses.length > 0) [ CD ]
Line_2 $$ public int countByR_I_S(long resourcePrimKey, boolean indexable, int[] statuses) -->Line_3 $$ if (statuses == null) [ FD ]
Line_2 $$ public int countByR_I_S(long resourcePrimKey, boolean indexable, int[] statuses) -->Line_19 $$ query.append(StringUtil.merge(statuses))[ FD ]
Line_11 $$ if (count == null) -->Line_23 $$ query.setStringAt(removeConjunction(query.stringAt(query.index() - 1)), query.index() - 1)[ CD ]
Line_2 $$ public int countByR_I_S(long resourcePrimKey, boolean indexable, int[] statuses) -->Line_10 $$ Long count = (Long) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_R_I_S, finderArgs, this)[ CD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_19 $$ query.append(StringUtil.merge(statuses))[ FD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_21 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_11 $$ if (count == null) -->Line_15 $$ query.append(_FINDER_COLUMN_R_I_S_INDEXABLE_2)[ CD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_23 $$ query.setStringAt(removeConjunction(query.stringAt(query.index() - 1)), query.index() - 1)[ FD ]
Line_2 $$ public int countByR_I_S(long resourcePrimKey, boolean indexable, int[] statuses) -->Line_4 $$ statuses = new int[0][ FD ]
Line_5 $$ if (statuses.length > 1) -->Line_7 $$ Arrays.sort(statuses)[ CD ]
Line_10 $$ Long count = (Long) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_R_I_S, finderArgs, this)-->Line_41 $$ return count.intValue()[ FD ]
Line_5 $$ if (statuses.length > 1) -->Line_6 $$ statuses = ArrayUtil.unique(statuses)[ CD ]
Line_4 $$ statuses = new int[0]-->Line_19 $$ query.append(StringUtil.merge(statuses))[ FD ]
Line_32 $$ count = (Long) q.uniqueResult()-->Line_33 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_R_I_S, finderArgs, count)[ FD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_13 $$ query.append(_SQL_COUNT_JOURNALARTICLE_WHERE)[ FD ]
Line_16 $$ if (statuses.length > 0) -->Line_21 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_29 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_31 $$ qPos.add(indexable)[ FD ]
Line_10 $$ Long count = (Long) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_R_I_S, finderArgs, this)-->Line_33 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_R_I_S, finderArgs, count)[ FD ]
Line_4 $$ statuses = new int[0]-->Line_9 $$ Object[] finderArgs = new Object[] [ FD ]
Line_16 $$ if (statuses.length > 0) -->Line_17 $$ query.append(StringPool.OPEN_PARENTHESIS)[ CD ]
Line_2 $$ public int countByR_I_S(long resourcePrimKey, boolean indexable, int[] statuses) -->Line_31 $$ qPos.add(indexable)[ FD ]
