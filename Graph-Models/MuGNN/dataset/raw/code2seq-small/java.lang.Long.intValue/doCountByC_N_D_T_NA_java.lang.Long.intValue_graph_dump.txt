Line_2 $$ protected int doCountByC_N_D_T(long companyId, String[] names, String[] descriptions, Integer[] types, LinkedHashMap<String, Object> params, boolean andOperator, boolean inlineSQLHelper) -->Line_3 $$ names = CustomSQLUtil.keywords(names, true)[ CD ]
Line_2 $$ protected int doCountByC_N_D_T(long companyId, String[] names, String[] descriptions, Integer[] types, LinkedHashMap<String, Object> params, boolean andOperator, boolean inlineSQLHelper) -->Line_8 $$ Session session = null[ CD ]
Line_31 $$ Long count = itr.next()-->Line_32 $$ if (count != null) [ FD ]
Line_2 $$ protected int doCountByC_N_D_T(long companyId, String[] names, String[] descriptions, Integer[] types, LinkedHashMap<String, Object> params, boolean andOperator, boolean inlineSQLHelper) -->Line_5 $$ if (types == null) [ CD ]
Line_6 $$ types = new Integer[0]-->Line_28 $$ qPos.add(types)[ FD ]
Line_17 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)-->Line_19 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Role.class.getName(), "Role_.roleId", null, null, new long[] [ FD ]
Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_22 $$ q.addScalar(COUNT_COLUMN_NAME, Type.LONG)[ FD ]
Line_30 $$ if (itr.hasNext()) -->Line_32 $$ if (count != null) [ CD ]
Line_2 $$ protected int doCountByC_N_D_T(long companyId, String[] names, String[] descriptions, Integer[] types, LinkedHashMap<String, Object> params, boolean andOperator, boolean inlineSQLHelper) -->Line_13 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(Role_.description)", StringPool.LIKE, true, descriptions)[ FD ]
Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_29 $$ Iterator<Long> itr = q.iterate()[ FD ]
Line_31 $$ Long count = itr.next()-->Line_33 $$ return count.intValue()[ FD ]
Line_14 $$ sql = StringUtil.replace(sql, "[$TYPE$]", getTypes(types))-->Line_19 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Role.class.getName(), "Role_.roleId", null, null, new long[] [ FD ]
Line_3 $$ names = CustomSQLUtil.keywords(names, true)-->Line_26 $$ qPos.add(names, 2)[ FD ]
Line_11 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_N_D_T)-->Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_12 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(Role_.name)", StringPool.LIKE, false, names)-->Line_15 $$ sql = StringUtil.replace(sql, "[$JOIN$]", getJoin(params))[ FD ]
Line_2 $$ protected int doCountByC_N_D_T(long companyId, String[] names, String[] descriptions, Integer[] types, LinkedHashMap<String, Object> params, boolean andOperator, boolean inlineSQLHelper) -->Line_28 $$ qPos.add(types)[ FD ]
Line_14 $$ sql = StringUtil.replace(sql, "[$TYPE$]", getTypes(types))-->Line_15 $$ sql = StringUtil.replace(sql, "[$JOIN$]", getJoin(params))[ FD ]
Line_23 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_24 $$ setJoin(qPos, params)[ FD ]
Line_29 $$ Iterator<Long> itr = q.iterate()-->Line_31 $$ Long count = itr.next()[ FD ]
Line_11 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_N_D_T)-->Line_13 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(Role_.description)", StringPool.LIKE, true, descriptions)[ FD ]
Line_2 $$ protected int doCountByC_N_D_T(long companyId, String[] names, String[] descriptions, Integer[] types, LinkedHashMap<String, Object> params, boolean andOperator, boolean inlineSQLHelper) -->Line_14 $$ sql = StringUtil.replace(sql, "[$TYPE$]", getTypes(types))[ FD ]
Line_15 $$ sql = StringUtil.replace(sql, "[$JOIN$]", getJoin(params))-->Line_19 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Role.class.getName(), "Role_.roleId", null, null, new long[] [ FD ]
Line_12 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(Role_.name)", StringPool.LIKE, false, names)-->Line_13 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(Role_.description)", StringPool.LIKE, true, descriptions)[ FD ]
Line_23 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_25 $$ qPos.add(companyId)[ FD ]
Line_14 $$ sql = StringUtil.replace(sql, "[$TYPE$]", getTypes(types))-->Line_16 $$ sql = StringUtil.replace(sql, "[$WHERE$]", getWhere(params))[ FD ]
Line_13 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(Role_.description)", StringPool.LIKE, true, descriptions)-->Line_14 $$ sql = StringUtil.replace(sql, "[$TYPE$]", getTypes(types))[ FD ]
Line_11 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_N_D_T)-->Line_17 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_6 $$ types = new Integer[0]-->Line_14 $$ sql = StringUtil.replace(sql, "[$TYPE$]", getTypes(types))[ FD ]
Line_2 $$ protected int doCountByC_N_D_T(long companyId, String[] names, String[] descriptions, Integer[] types, LinkedHashMap<String, Object> params, boolean andOperator, boolean inlineSQLHelper) -->Line_25 $$ qPos.add(companyId)[ FD ]
Line_18 $$ if (inlineSQLHelper) -->Line_19 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Role.class.getName(), "Role_.roleId", null, null, new long[] [ CD ]
Line_12 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(Role_.name)", StringPool.LIKE, false, names)-->Line_14 $$ sql = StringUtil.replace(sql, "[$TYPE$]", getTypes(types))[ FD ]
Line_8 $$ Session session = null-->Line_10 $$ session = openSession()[ FD ]
Line_15 $$ sql = StringUtil.replace(sql, "[$JOIN$]", getJoin(params))-->Line_16 $$ sql = StringUtil.replace(sql, "[$WHERE$]", getWhere(params))[ FD ]
Line_14 $$ sql = StringUtil.replace(sql, "[$TYPE$]", getTypes(types))-->Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_8 $$ Session session = null-->Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_10 $$ session = openSession()-->Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_11 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_N_D_T)-->Line_19 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Role.class.getName(), "Role_.roleId", null, null, new long[] [ FD ]
Line_15 $$ sql = StringUtil.replace(sql, "[$JOIN$]", getJoin(params))-->Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_32 $$ if (count != null) -->Line_33 $$ return count.intValue()[ CD ]
Line_5 $$ if (types == null) -->Line_6 $$ types = new Integer[0][ CD ]
Line_17 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)-->Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_23 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_28 $$ qPos.add(types)[ FD ]
Line_2 $$ protected int doCountByC_N_D_T(long companyId, String[] names, String[] descriptions, Integer[] types, LinkedHashMap<String, Object> params, boolean andOperator, boolean inlineSQLHelper) -->Line_12 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(Role_.name)", StringPool.LIKE, false, names)[ FD ]
Line_13 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(Role_.description)", StringPool.LIKE, true, descriptions)-->Line_15 $$ sql = StringUtil.replace(sql, "[$JOIN$]", getJoin(params))[ FD ]
Line_12 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(Role_.name)", StringPool.LIKE, false, names)-->Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected int doCountByC_N_D_T(long companyId, String[] names, String[] descriptions, Integer[] types, LinkedHashMap<String, Object> params, boolean andOperator, boolean inlineSQLHelper) -->Line_17 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_2 $$ protected int doCountByC_N_D_T(long companyId, String[] names, String[] descriptions, Integer[] types, LinkedHashMap<String, Object> params, boolean andOperator, boolean inlineSQLHelper) -->Line_4 $$ descriptions = CustomSQLUtil.keywords(descriptions, true)[ CD ]
Line_23 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_26 $$ qPos.add(names, 2)[ FD ]
Line_2 $$ protected int doCountByC_N_D_T(long companyId, String[] names, String[] descriptions, Integer[] types, LinkedHashMap<String, Object> params, boolean andOperator, boolean inlineSQLHelper) -->Line_26 $$ qPos.add(names, 2)[ FD ]
Line_4 $$ descriptions = CustomSQLUtil.keywords(descriptions, true)-->Line_27 $$ qPos.add(descriptions, 2)[ FD ]
Line_12 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(Role_.name)", StringPool.LIKE, false, names)-->Line_16 $$ sql = StringUtil.replace(sql, "[$WHERE$]", getWhere(params))[ FD ]
Line_10 $$ session = openSession()-->Line_40 $$ closeSession(session)[ FD ]
Line_11 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_N_D_T)-->Line_16 $$ sql = StringUtil.replace(sql, "[$WHERE$]", getWhere(params))[ FD ]
Line_30 $$ if (itr.hasNext()) -->Line_31 $$ Long count = itr.next()[ CD ]
Line_2 $$ protected int doCountByC_N_D_T(long companyId, String[] names, String[] descriptions, Integer[] types, LinkedHashMap<String, Object> params, boolean andOperator, boolean inlineSQLHelper) -->Line_16 $$ sql = StringUtil.replace(sql, "[$WHERE$]", getWhere(params))[ FD ]
Line_12 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(Role_.name)", StringPool.LIKE, false, names)-->Line_19 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Role.class.getName(), "Role_.roleId", null, null, new long[] [ FD ]
Line_29 $$ Iterator<Long> itr = q.iterate()-->Line_30 $$ if (itr.hasNext()) [ FD ]
Line_3 $$ names = CustomSQLUtil.keywords(names, true)-->Line_12 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(Role_.name)", StringPool.LIKE, false, names)[ FD ]
Line_11 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_N_D_T)-->Line_12 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(Role_.name)", StringPool.LIKE, false, names)[ FD ]
Line_11 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_N_D_T)-->Line_15 $$ sql = StringUtil.replace(sql, "[$JOIN$]", getJoin(params))[ FD ]
Line_8 $$ Session session = null-->Line_40 $$ closeSession(session)[ FD ]
Line_19 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Role.class.getName(), "Role_.roleId", null, null, new long[] -->Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_14 $$ sql = StringUtil.replace(sql, "[$TYPE$]", getTypes(types))-->Line_17 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_2 $$ protected int doCountByC_N_D_T(long companyId, String[] names, String[] descriptions, Integer[] types, LinkedHashMap<String, Object> params, boolean andOperator, boolean inlineSQLHelper) -->Line_3 $$ names = CustomSQLUtil.keywords(names, true)[ FD ]
Line_23 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_27 $$ qPos.add(descriptions, 2)[ FD ]
Line_2 $$ protected int doCountByC_N_D_T(long companyId, String[] names, String[] descriptions, Integer[] types, LinkedHashMap<String, Object> params, boolean andOperator, boolean inlineSQLHelper) -->Line_15 $$ sql = StringUtil.replace(sql, "[$JOIN$]", getJoin(params))[ FD ]
Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_23 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_15 $$ sql = StringUtil.replace(sql, "[$JOIN$]", getJoin(params))-->Line_17 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_16 $$ sql = StringUtil.replace(sql, "[$WHERE$]", getWhere(params))-->Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_13 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(Role_.description)", StringPool.LIKE, true, descriptions)-->Line_17 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_11 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_N_D_T)-->Line_14 $$ sql = StringUtil.replace(sql, "[$TYPE$]", getTypes(types))[ FD ]
Line_4 $$ descriptions = CustomSQLUtil.keywords(descriptions, true)-->Line_13 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(Role_.description)", StringPool.LIKE, true, descriptions)[ FD ]
Line_16 $$ sql = StringUtil.replace(sql, "[$WHERE$]", getWhere(params))-->Line_17 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_2 $$ protected int doCountByC_N_D_T(long companyId, String[] names, String[] descriptions, Integer[] types, LinkedHashMap<String, Object> params, boolean andOperator, boolean inlineSQLHelper) -->Line_4 $$ descriptions = CustomSQLUtil.keywords(descriptions, true)[ FD ]
Line_12 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(Role_.name)", StringPool.LIKE, false, names)-->Line_17 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_13 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(Role_.description)", StringPool.LIKE, true, descriptions)-->Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected int doCountByC_N_D_T(long companyId, String[] names, String[] descriptions, Integer[] types, LinkedHashMap<String, Object> params, boolean andOperator, boolean inlineSQLHelper) -->Line_27 $$ qPos.add(descriptions, 2)[ FD ]
Line_2 $$ protected int doCountByC_N_D_T(long companyId, String[] names, String[] descriptions, Integer[] types, LinkedHashMap<String, Object> params, boolean andOperator, boolean inlineSQLHelper) -->Line_5 $$ if (types == null) [ FD ]
Line_2 $$ protected int doCountByC_N_D_T(long companyId, String[] names, String[] descriptions, Integer[] types, LinkedHashMap<String, Object> params, boolean andOperator, boolean inlineSQLHelper) -->Line_24 $$ setJoin(qPos, params)[ FD ]
Line_2 $$ protected int doCountByC_N_D_T(long companyId, String[] names, String[] descriptions, Integer[] types, LinkedHashMap<String, Object> params, boolean andOperator, boolean inlineSQLHelper) -->Line_6 $$ types = new Integer[0][ FD ]
Line_13 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(Role_.description)", StringPool.LIKE, true, descriptions)-->Line_16 $$ sql = StringUtil.replace(sql, "[$WHERE$]", getWhere(params))[ FD ]
Line_13 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(Role_.description)", StringPool.LIKE, true, descriptions)-->Line_19 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Role.class.getName(), "Role_.roleId", null, null, new long[] [ FD ]
Line_16 $$ sql = StringUtil.replace(sql, "[$WHERE$]", getWhere(params))-->Line_19 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Role.class.getName(), "Role_.roleId", null, null, new long[] [ FD ]
