Line_59 $$ if (!isNullArray(ddmTemplateKeys)) -->Line_60 $$ qPos.add(ddmTemplateKeys, 2)[ CD ]
Line_18 $$ sql = StringUtil.replace(sql, "(JournalArticle.groupId = ?) AND", StringPool.BLANK)-->Line_41 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, JournalArticle.class.getName(), "JournalArticle.resourcePrimKey", groupId)[ FD ]
Line_20 $$ if (folderIds.isEmpty()) -->Line_21 $$ sql = StringUtil.replace(sql, "([$FOLDER_ID$]) AND", StringPool.BLANK)[ CD ]
Line_18 $$ sql = StringUtil.replace(sql, "(JournalArticle.groupId = ?) AND", StringPool.BLANK)-->Line_30 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.description", StringPool.LIKE, false, descriptions)[ FD ]
Line_23 $$ sql = StringUtil.replace(sql, "[$FOLDER_ID$]", getFolderIds(folderIds, JournalArticleImpl.TABLE_NAME))-->Line_25 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.articleId", StringPool.LIKE, false, articleIds)[ FD ]
Line_30 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.description", StringPool.LIKE, false, descriptions)-->Line_44 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_27 $$ sql = StringUtil.replace(sql, "(JournalArticle.version = ?) [$AND_OR_CONNECTOR$]", StringPool.BLANK)-->Line_42 $$ sql = StringUtil.replace(sql, "(companyId", "(JournalArticle.companyId")[ FD ]
Line_18 $$ sql = StringUtil.replace(sql, "(JournalArticle.groupId = ?) AND", StringPool.BLANK)-->Line_23 $$ sql = StringUtil.replace(sql, "[$FOLDER_ID$]", getFolderIds(folderIds, JournalArticleImpl.TABLE_NAME))[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_59 $$ if (!isNullArray(ddmTemplateKeys)) [ FD ]
Line_16 $$ sql = replaceStatusJoin(sql, queryDefinition)-->Line_29 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(JournalArticle.title)", StringPool.LIKE, false, titles)[ FD ]
Line_16 $$ sql = replaceStatusJoin(sql, queryDefinition)-->Line_37 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMTemplateKey", StringPool.LIKE, false, ddmTemplateKeys)[ FD ]
Line_27 $$ sql = StringUtil.replace(sql, "(JournalArticle.version = ?) [$AND_OR_CONNECTOR$]", StringPool.BLANK)-->Line_34 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMStructureKey", StringPool.LIKE, false, ddmStructureKeys)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_31 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.content", StringPool.LIKE, false, contents)[ FD ]
Line_23 $$ sql = StringUtil.replace(sql, "[$FOLDER_ID$]", getFolderIds(folderIds, JournalArticleImpl.TABLE_NAME))-->Line_37 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMTemplateKey", StringPool.LIKE, false, ddmTemplateKeys)[ FD ]
Line_21 $$ sql = StringUtil.replace(sql, "([$FOLDER_ID$]) AND", StringPool.BLANK)-->Line_31 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.content", StringPool.LIKE, false, contents)[ FD ]
Line_12 $$ Session session = null-->Line_14 $$ session = openSession()[ FD ]
Line_5 $$ descriptions = CustomSQLUtil.keywords(descriptions, false)-->Line_67 $$ qPos.add(descriptions, 2)[ FD ]
Line_29 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(JournalArticle.title)", StringPool.LIKE, false, titles)-->Line_32 $$ sql = replaceStructureTemplate(sql, ddmStructureKeys, ddmTemplateKeys)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_3 $$ articleIds = CustomSQLUtil.keywords(articleIds, false)[ FD ]
Line_30 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.description", StringPool.LIKE, false, descriptions)-->Line_32 $$ sql = replaceStructureTemplate(sql, ddmStructureKeys, ddmTemplateKeys)[ FD ]
Line_10 $$ Timestamp displayDateLT_TS = CalendarUtil.getTimestamp(displayDateLT)-->Line_71 $$ qPos.add(displayDateLT_TS)[ FD ]
Line_15 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_F_C_A_V_T_D_C_S_T_D_R, queryDefinition, "JournalArticle")-->Line_16 $$ sql = replaceStatusJoin(sql, queryDefinition)[ FD ]
Line_46 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_68 $$ qPos.add(contents, 2)[ FD ]
Line_16 $$ sql = replaceStatusJoin(sql, queryDefinition)-->Line_21 $$ sql = StringUtil.replace(sql, "([$FOLDER_ID$]) AND", StringPool.BLANK)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_67 $$ qPos.add(descriptions, 2)[ FD ]
Line_18 $$ sql = StringUtil.replace(sql, "(JournalArticle.groupId = ?) AND", StringPool.BLANK)-->Line_32 $$ sql = replaceStructureTemplate(sql, ddmStructureKeys, ddmTemplateKeys)[ FD ]
Line_27 $$ sql = StringUtil.replace(sql, "(JournalArticle.version = ?) [$AND_OR_CONNECTOR$]", StringPool.BLANK)-->Line_32 $$ sql = replaceStructureTemplate(sql, ddmStructureKeys, ddmTemplateKeys)[ FD ]
Line_23 $$ sql = StringUtil.replace(sql, "[$FOLDER_ID$]", getFolderIds(folderIds, JournalArticleImpl.TABLE_NAME))-->Line_42 $$ sql = StringUtil.replace(sql, "(companyId", "(JournalArticle.companyId")[ FD ]
Line_21 $$ sql = StringUtil.replace(sql, "([$FOLDER_ID$]) AND", StringPool.BLANK)-->Line_37 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMTemplateKey", StringPool.LIKE, false, ddmTemplateKeys)[ FD ]
Line_34 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMStructureKey", StringPool.LIKE, false, ddmStructureKeys)-->Line_37 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMTemplateKey", StringPool.LIKE, false, ddmTemplateKeys)[ FD ]
Line_37 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMTemplateKey", StringPool.LIKE, false, ddmTemplateKeys)-->Line_39 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_23 $$ sql = StringUtil.replace(sql, "[$FOLDER_ID$]", getFolderIds(folderIds, JournalArticleImpl.TABLE_NAME))-->Line_44 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_75 $$ Iterator<Long> itr = q.iterate()-->Line_77 $$ Long count = itr.next()[ FD ]
Line_9 $$ Timestamp displayDateGT_TS = CalendarUtil.getTimestamp(displayDateGT)-->Line_70 $$ qPos.add(displayDateGT_TS)[ FD ]
Line_23 $$ sql = StringUtil.replace(sql, "[$FOLDER_ID$]", getFolderIds(folderIds, JournalArticleImpl.TABLE_NAME))-->Line_39 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_9 $$ Timestamp displayDateGT_TS = CalendarUtil.getTimestamp(displayDateGT)[ CD ]
Line_11 $$ Timestamp reviewDate_TS = CalendarUtil.getTimestamp(reviewDate)-->Line_73 $$ qPos.add(reviewDate_TS)[ FD ]
Line_37 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMTemplateKey", StringPool.LIKE, false, ddmTemplateKeys)-->Line_44 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_23 $$ sql = StringUtil.replace(sql, "[$FOLDER_ID$]", getFolderIds(folderIds, JournalArticleImpl.TABLE_NAME))[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_17 $$ if (groupId <= 0) [ FD ]
Line_25 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.articleId", StringPool.LIKE, false, articleIds)-->Line_27 $$ sql = StringUtil.replace(sql, "(JournalArticle.version = ?) [$AND_OR_CONNECTOR$]", StringPool.BLANK)[ FD ]
Line_30 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.description", StringPool.LIKE, false, descriptions)-->Line_37 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMTemplateKey", StringPool.LIKE, false, ddmTemplateKeys)[ FD ]
Line_44 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_75 $$ Iterator<Long> itr = q.iterate()[ FD ]
Line_18 $$ sql = StringUtil.replace(sql, "(JournalArticle.groupId = ?) AND", StringPool.BLANK)-->Line_44 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_6 $$ contents = CustomSQLUtil.keywords(contents, false)-->Line_68 $$ qPos.add(contents, 2)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_6 $$ contents = CustomSQLUtil.keywords(contents, false)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_10 $$ Timestamp displayDateLT_TS = CalendarUtil.getTimestamp(displayDateLT)[ CD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_49 $$ qPos.add(groupId)[ FD ]
Line_15 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_F_C_A_V_T_D_C_S_T_D_R, queryDefinition, "JournalArticle")-->Line_42 $$ sql = StringUtil.replace(sql, "(companyId", "(JournalArticle.companyId")[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_12 $$ Session session = null[ CD ]
Line_23 $$ sql = StringUtil.replace(sql, "[$FOLDER_ID$]", getFolderIds(folderIds, JournalArticleImpl.TABLE_NAME))-->Line_30 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.description", StringPool.LIKE, false, descriptions)[ FD ]
Line_77 $$ Long count = itr.next()-->Line_78 $$ if (count != null) [ FD ]
Line_31 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.content", StringPool.LIKE, false, contents)-->Line_37 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMTemplateKey", StringPool.LIKE, false, ddmTemplateKeys)[ FD ]
Line_30 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.description", StringPool.LIKE, false, descriptions)-->Line_39 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_39 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_41 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, JournalArticle.class.getName(), "JournalArticle.resourcePrimKey", groupId)-->Line_44 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_16 $$ sql = replaceStatusJoin(sql, queryDefinition)-->Line_18 $$ sql = StringUtil.replace(sql, "(JournalArticle.groupId = ?) AND", StringPool.BLANK)[ FD ]
Line_46 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_57 $$ qPos.add(ddmStructureKeys, 2)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_60 $$ qPos.add(ddmTemplateKeys, 2)[ FD ]
Line_18 $$ sql = StringUtil.replace(sql, "(JournalArticle.groupId = ?) AND", StringPool.BLANK)-->Line_34 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMStructureKey", StringPool.LIKE, false, ddmStructureKeys)[ FD ]
Line_27 $$ sql = StringUtil.replace(sql, "(JournalArticle.version = ?) [$AND_OR_CONNECTOR$]", StringPool.BLANK)-->Line_41 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, JournalArticle.class.getName(), "JournalArticle.resourcePrimKey", groupId)[ FD ]
Line_3 $$ articleIds = CustomSQLUtil.keywords(articleIds, false)-->Line_62 $$ qPos.add(articleIds, 2)[ FD ]
Line_15 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_F_C_A_V_T_D_C_S_T_D_R, queryDefinition, "JournalArticle")-->Line_44 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_8 $$ ddmTemplateKeys = CustomSQLUtil.keywords(ddmTemplateKeys, false)[ FD ]
Line_42 $$ sql = StringUtil.replace(sql, "(companyId", "(JournalArticle.companyId")-->Line_44 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_25 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.articleId", StringPool.LIKE, false, articleIds)[ FD ]
Line_46 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_66 $$ qPos.add(titles, 2)[ FD ]
Line_34 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMStructureKey", StringPool.LIKE, false, ddmStructureKeys)-->Line_44 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_27 $$ sql = StringUtil.replace(sql, "(JournalArticle.version = ?) [$AND_OR_CONNECTOR$]", StringPool.BLANK)-->Line_37 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMTemplateKey", StringPool.LIKE, false, ddmTemplateKeys)[ FD ]
Line_34 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMStructureKey", StringPool.LIKE, false, ddmStructureKeys)-->Line_39 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_7 $$ ddmStructureKeys = CustomSQLUtil.keywords(ddmStructureKeys, false)-->Line_34 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMStructureKey", StringPool.LIKE, false, ddmStructureKeys)[ FD ]
Line_3 $$ articleIds = CustomSQLUtil.keywords(articleIds, false)-->Line_25 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.articleId", StringPool.LIKE, false, articleIds)[ FD ]
Line_12 $$ Session session = null-->Line_44 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_62 $$ qPos.add(articleIds, 2)[ FD ]
Line_30 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.description", StringPool.LIKE, false, descriptions)-->Line_42 $$ sql = StringUtil.replace(sql, "(companyId", "(JournalArticle.companyId")[ FD ]
Line_29 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(JournalArticle.title)", StringPool.LIKE, false, titles)-->Line_31 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.content", StringPool.LIKE, false, contents)[ FD ]
Line_29 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(JournalArticle.title)", StringPool.LIKE, false, titles)-->Line_44 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_76 $$ if (itr.hasNext()) -->Line_78 $$ if (count != null) [ CD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_20 $$ if (folderIds.isEmpty()) [ FD ]
Line_8 $$ ddmTemplateKeys = CustomSQLUtil.keywords(ddmTemplateKeys, false)-->Line_37 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMTemplateKey", StringPool.LIKE, false, ddmTemplateKeys)[ FD ]
Line_9 $$ Timestamp displayDateGT_TS = CalendarUtil.getTimestamp(displayDateGT)-->Line_69 $$ qPos.add(displayDateGT_TS)[ FD ]
Line_16 $$ sql = replaceStatusJoin(sql, queryDefinition)-->Line_23 $$ sql = StringUtil.replace(sql, "[$FOLDER_ID$]", getFolderIds(folderIds, JournalArticleImpl.TABLE_NAME))[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_4 $$ titles = CustomSQLUtil.keywords(titles)[ CD ]
Line_29 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(JournalArticle.title)", StringPool.LIKE, false, titles)-->Line_39 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_23 $$ sql = StringUtil.replace(sql, "[$FOLDER_ID$]", getFolderIds(folderIds, JournalArticleImpl.TABLE_NAME))-->Line_34 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMStructureKey", StringPool.LIKE, false, ddmStructureKeys)[ FD ]
Line_16 $$ sql = replaceStatusJoin(sql, queryDefinition)-->Line_42 $$ sql = StringUtil.replace(sql, "(companyId", "(JournalArticle.companyId")[ FD ]
Line_23 $$ sql = StringUtil.replace(sql, "[$FOLDER_ID$]", getFolderIds(folderIds, JournalArticleImpl.TABLE_NAME))-->Line_41 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, JournalArticle.class.getName(), "JournalArticle.resourcePrimKey", groupId)[ FD ]
Line_25 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.articleId", StringPool.LIKE, false, articleIds)-->Line_29 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(JournalArticle.title)", StringPool.LIKE, false, titles)[ FD ]
Line_15 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_F_C_A_V_T_D_C_S_T_D_R, queryDefinition, "JournalArticle")-->Line_21 $$ sql = StringUtil.replace(sql, "([$FOLDER_ID$]) AND", StringPool.BLANK)[ FD ]
Line_15 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_F_C_A_V_T_D_C_S_T_D_R, queryDefinition, "JournalArticle")-->Line_25 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.articleId", StringPool.LIKE, false, articleIds)[ FD ]
Line_26 $$ if ((version == null) || (version <= 0)) -->Line_27 $$ sql = StringUtil.replace(sql, "(JournalArticle.version = ?) [$AND_OR_CONNECTOR$]", StringPool.BLANK)[ CD ]
Line_18 $$ sql = StringUtil.replace(sql, "(JournalArticle.groupId = ?) AND", StringPool.BLANK)-->Line_29 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(JournalArticle.title)", StringPool.LIKE, false, titles)[ FD ]
Line_25 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.articleId", StringPool.LIKE, false, articleIds)-->Line_37 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMTemplateKey", StringPool.LIKE, false, ddmTemplateKeys)[ FD ]
Line_32 $$ sql = replaceStructureTemplate(sql, ddmStructureKeys, ddmTemplateKeys)-->Line_41 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, JournalArticle.class.getName(), "JournalArticle.resourcePrimKey", groupId)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_68 $$ qPos.add(contents, 2)[ FD ]
Line_30 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.description", StringPool.LIKE, false, descriptions)-->Line_34 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMStructureKey", StringPool.LIKE, false, ddmStructureKeys)[ FD ]
Line_31 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.content", StringPool.LIKE, false, contents)-->Line_41 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, JournalArticle.class.getName(), "JournalArticle.resourcePrimKey", groupId)[ FD ]
Line_27 $$ sql = StringUtil.replace(sql, "(JournalArticle.version = ?) [$AND_OR_CONNECTOR$]", StringPool.BLANK)-->Line_44 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_21 $$ sql = StringUtil.replace(sql, "([$FOLDER_ID$]) AND", StringPool.BLANK)-->Line_34 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMStructureKey", StringPool.LIKE, false, ddmStructureKeys)[ FD ]
Line_15 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_F_C_A_V_T_D_C_S_T_D_R, queryDefinition, "JournalArticle")-->Line_27 $$ sql = StringUtil.replace(sql, "(JournalArticle.version = ?) [$AND_OR_CONNECTOR$]", StringPool.BLANK)[ FD ]
Line_78 $$ if (count != null) -->Line_79 $$ return count.intValue()[ CD ]
Line_16 $$ sql = replaceStatusJoin(sql, queryDefinition)-->Line_30 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.description", StringPool.LIKE, false, descriptions)[ FD ]
Line_33 $$ if (!isNullArray(ddmStructureKeys)) -->Line_34 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMStructureKey", StringPool.LIKE, false, ddmStructureKeys)[ CD ]
Line_46 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_60 $$ qPos.add(ddmTemplateKeys, 2)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_41 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, JournalArticle.class.getName(), "JournalArticle.resourcePrimKey", groupId)[ FD ]
Line_31 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.content", StringPool.LIKE, false, contents)-->Line_34 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMStructureKey", StringPool.LIKE, false, ddmStructureKeys)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_64 $$ qPos.add(version)[ FD ]
Line_18 $$ sql = StringUtil.replace(sql, "(JournalArticle.groupId = ?) AND", StringPool.BLANK)-->Line_42 $$ sql = StringUtil.replace(sql, "(companyId", "(JournalArticle.companyId")[ FD ]
Line_29 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(JournalArticle.title)", StringPool.LIKE, false, titles)-->Line_34 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMStructureKey", StringPool.LIKE, false, ddmStructureKeys)[ FD ]
Line_40 $$ if (inlineSQLHelper) -->Line_41 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, JournalArticle.class.getName(), "JournalArticle.resourcePrimKey", groupId)[ CD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_66 $$ qPos.add(titles, 2)[ FD ]
Line_16 $$ sql = replaceStatusJoin(sql, queryDefinition)-->Line_41 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, JournalArticle.class.getName(), "JournalArticle.resourcePrimKey", groupId)[ FD ]
Line_25 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.articleId", StringPool.LIKE, false, articleIds)-->Line_34 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMStructureKey", StringPool.LIKE, false, ddmStructureKeys)[ FD ]
Line_29 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(JournalArticle.title)", StringPool.LIKE, false, titles)-->Line_41 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, JournalArticle.class.getName(), "JournalArticle.resourcePrimKey", groupId)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_8 $$ ddmTemplateKeys = CustomSQLUtil.keywords(ddmTemplateKeys, false)[ CD ]
Line_16 $$ sql = replaceStatusJoin(sql, queryDefinition)-->Line_27 $$ sql = StringUtil.replace(sql, "(JournalArticle.version = ?) [$AND_OR_CONNECTOR$]", StringPool.BLANK)[ FD ]
Line_25 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.articleId", StringPool.LIKE, false, articleIds)-->Line_32 $$ sql = replaceStructureTemplate(sql, ddmStructureKeys, ddmTemplateKeys)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_11 $$ Timestamp reviewDate_TS = CalendarUtil.getTimestamp(reviewDate)[ FD ]
Line_15 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_F_C_A_V_T_D_C_S_T_D_R, queryDefinition, "JournalArticle")-->Line_39 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_34 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMStructureKey", StringPool.LIKE, false, ddmStructureKeys)-->Line_41 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, JournalArticle.class.getName(), "JournalArticle.resourcePrimKey", groupId)[ FD ]
Line_7 $$ ddmStructureKeys = CustomSQLUtil.keywords(ddmStructureKeys, false)-->Line_57 $$ qPos.add(ddmStructureKeys, 2)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_55 $$ qPos.add(queryDefinition.getStatus())[ FD ]
Line_41 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, JournalArticle.class.getName(), "JournalArticle.resourcePrimKey", groupId)-->Line_42 $$ sql = StringUtil.replace(sql, "(companyId", "(JournalArticle.companyId")[ FD ]
Line_63 $$ if ((version != null) && (version > 0)) -->Line_64 $$ qPos.add(version)[ CD ]
Line_11 $$ Timestamp reviewDate_TS = CalendarUtil.getTimestamp(reviewDate)-->Line_74 $$ qPos.add(reviewDate_TS)[ FD ]
Line_27 $$ sql = StringUtil.replace(sql, "(JournalArticle.version = ?) [$AND_OR_CONNECTOR$]", StringPool.BLANK)-->Line_39 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_21 $$ sql = StringUtil.replace(sql, "([$FOLDER_ID$]) AND", StringPool.BLANK)-->Line_42 $$ sql = StringUtil.replace(sql, "(companyId", "(JournalArticle.companyId")[ FD ]
Line_18 $$ sql = StringUtil.replace(sql, "(JournalArticle.groupId = ?) AND", StringPool.BLANK)-->Line_31 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.content", StringPool.LIKE, false, contents)[ FD ]
Line_29 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(JournalArticle.title)", StringPool.LIKE, false, titles)-->Line_42 $$ sql = StringUtil.replace(sql, "(companyId", "(JournalArticle.companyId")[ FD ]
Line_31 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.content", StringPool.LIKE, false, contents)-->Line_32 $$ sql = replaceStructureTemplate(sql, ddmStructureKeys, ddmTemplateKeys)[ FD ]
Line_16 $$ sql = replaceStatusJoin(sql, queryDefinition)-->Line_34 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMStructureKey", StringPool.LIKE, false, ddmStructureKeys)[ FD ]
Line_39 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)-->Line_44 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_56 $$ if (!isNullArray(ddmStructureKeys)) [ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_16 $$ sql = replaceStatusJoin(sql, queryDefinition)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_48 $$ if (groupId > 0) [ FD ]
Line_14 $$ session = openSession()-->Line_86 $$ closeSession(session)[ FD ]
Line_21 $$ sql = StringUtil.replace(sql, "([$FOLDER_ID$]) AND", StringPool.BLANK)-->Line_39 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_16 $$ sql = replaceStatusJoin(sql, queryDefinition)-->Line_44 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_5 $$ descriptions = CustomSQLUtil.keywords(descriptions, false)-->Line_30 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.description", StringPool.LIKE, false, descriptions)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_11 $$ Timestamp reviewDate_TS = CalendarUtil.getTimestamp(reviewDate)[ CD ]
Line_46 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_62 $$ qPos.add(articleIds, 2)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_7 $$ ddmStructureKeys = CustomSQLUtil.keywords(ddmStructureKeys, false)[ CD ]
Line_4 $$ titles = CustomSQLUtil.keywords(titles)-->Line_66 $$ qPos.add(titles, 2)[ FD ]
Line_25 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.articleId", StringPool.LIKE, false, articleIds)-->Line_31 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.content", StringPool.LIKE, false, contents)[ FD ]
Line_18 $$ sql = StringUtil.replace(sql, "(JournalArticle.groupId = ?) AND", StringPool.BLANK)-->Line_37 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMTemplateKey", StringPool.LIKE, false, ddmTemplateKeys)[ FD ]
Line_46 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_72 $$ qPos.add(displayDateLT_TS)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_5 $$ descriptions = CustomSQLUtil.keywords(descriptions, false)[ CD ]
Line_7 $$ ddmStructureKeys = CustomSQLUtil.keywords(ddmStructureKeys, false)-->Line_32 $$ sql = replaceStructureTemplate(sql, ddmStructureKeys, ddmTemplateKeys)[ FD ]
Line_32 $$ sql = replaceStructureTemplate(sql, ddmStructureKeys, ddmTemplateKeys)-->Line_37 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMTemplateKey", StringPool.LIKE, false, ddmTemplateKeys)[ FD ]
Line_37 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMTemplateKey", StringPool.LIKE, false, ddmTemplateKeys)-->Line_42 $$ sql = StringUtil.replace(sql, "(companyId", "(JournalArticle.companyId")[ FD ]
Line_15 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_F_C_A_V_T_D_C_S_T_D_R, queryDefinition, "JournalArticle")-->Line_37 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMTemplateKey", StringPool.LIKE, false, ddmTemplateKeys)[ FD ]
Line_18 $$ sql = StringUtil.replace(sql, "(JournalArticle.groupId = ?) AND", StringPool.BLANK)-->Line_39 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_15 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_F_C_A_V_T_D_C_S_T_D_R, queryDefinition, "JournalArticle")[ FD ]
Line_4 $$ titles = CustomSQLUtil.keywords(titles)-->Line_29 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(JournalArticle.title)", StringPool.LIKE, false, titles)[ FD ]
Line_15 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_F_C_A_V_T_D_C_S_T_D_R, queryDefinition, "JournalArticle")-->Line_30 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.description", StringPool.LIKE, false, descriptions)[ FD ]
Line_40 $$ if (inlineSQLHelper) -->Line_42 $$ sql = StringUtil.replace(sql, "(companyId", "(JournalArticle.companyId")[ CD ]
Line_46 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_70 $$ qPos.add(displayDateGT_TS)[ FD ]
Line_18 $$ sql = StringUtil.replace(sql, "(JournalArticle.groupId = ?) AND", StringPool.BLANK)-->Line_21 $$ sql = StringUtil.replace(sql, "([$FOLDER_ID$]) AND", StringPool.BLANK)[ FD ]
Line_17 $$ if (groupId <= 0) -->Line_18 $$ sql = StringUtil.replace(sql, "(JournalArticle.groupId = ?) AND", StringPool.BLANK)[ CD ]
Line_18 $$ sql = StringUtil.replace(sql, "(JournalArticle.groupId = ?) AND", StringPool.BLANK)-->Line_25 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.articleId", StringPool.LIKE, false, articleIds)[ FD ]
Line_29 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(JournalArticle.title)", StringPool.LIKE, false, titles)-->Line_37 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMTemplateKey", StringPool.LIKE, false, ddmTemplateKeys)[ FD ]
Line_16 $$ sql = replaceStatusJoin(sql, queryDefinition)-->Line_31 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.content", StringPool.LIKE, false, contents)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_30 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.description", StringPool.LIKE, false, descriptions)[ FD ]
Line_23 $$ sql = StringUtil.replace(sql, "[$FOLDER_ID$]", getFolderIds(folderIds, JournalArticleImpl.TABLE_NAME))-->Line_29 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(JournalArticle.title)", StringPool.LIKE, false, titles)[ FD ]
Line_75 $$ Iterator<Long> itr = q.iterate()-->Line_76 $$ if (itr.hasNext()) [ FD ]
Line_31 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.content", StringPool.LIKE, false, contents)-->Line_44 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_18 $$ sql = StringUtil.replace(sql, "(JournalArticle.groupId = ?) AND", StringPool.BLANK)-->Line_27 $$ sql = StringUtil.replace(sql, "(JournalArticle.version = ?) [$AND_OR_CONNECTOR$]", StringPool.BLANK)[ FD ]
Line_30 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.description", StringPool.LIKE, false, descriptions)-->Line_31 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.content", StringPool.LIKE, false, contents)[ FD ]
Line_32 $$ sql = replaceStructureTemplate(sql, ddmStructureKeys, ddmTemplateKeys)-->Line_34 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMStructureKey", StringPool.LIKE, false, ddmStructureKeys)[ FD ]
Line_44 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_45 $$ q.addScalar(COUNT_COLUMN_NAME, Type.LONG)[ FD ]
Line_14 $$ session = openSession()-->Line_44 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_21 $$ sql = StringUtil.replace(sql, "([$FOLDER_ID$]) AND", StringPool.BLANK)-->Line_27 $$ sql = StringUtil.replace(sql, "(JournalArticle.version = ?) [$AND_OR_CONNECTOR$]", StringPool.BLANK)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_6 $$ contents = CustomSQLUtil.keywords(contents, false)[ CD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_7 $$ ddmStructureKeys = CustomSQLUtil.keywords(ddmStructureKeys, false)[ FD ]
Line_25 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.articleId", StringPool.LIKE, false, articleIds)-->Line_42 $$ sql = StringUtil.replace(sql, "(companyId", "(JournalArticle.companyId")[ FD ]
Line_34 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMStructureKey", StringPool.LIKE, false, ddmStructureKeys)-->Line_42 $$ sql = StringUtil.replace(sql, "(companyId", "(JournalArticle.companyId")[ FD ]
Line_46 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_54 $$ qPos.add(classNameId)[ FD ]
Line_21 $$ sql = StringUtil.replace(sql, "([$FOLDER_ID$]) AND", StringPool.BLANK)-->Line_25 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.articleId", StringPool.LIKE, false, articleIds)[ FD ]
Line_15 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_F_C_A_V_T_D_C_S_T_D_R, queryDefinition, "JournalArticle")-->Line_29 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(JournalArticle.title)", StringPool.LIKE, false, titles)[ FD ]
Line_46 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_71 $$ qPos.add(displayDateLT_TS)[ FD ]
Line_20 $$ if (folderIds.isEmpty()) -->Line_23 $$ sql = StringUtil.replace(sql, "[$FOLDER_ID$]", getFolderIds(folderIds, JournalArticleImpl.TABLE_NAME))[ CD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_36 $$ if (!isNullArray(ddmTemplateKeys)) [ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_57 $$ qPos.add(ddmStructureKeys, 2)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_29 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(JournalArticle.title)", StringPool.LIKE, false, titles)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_47 $$ qPos.add(companyId)[ FD ]
Line_25 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.articleId", StringPool.LIKE, false, articleIds)-->Line_44 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_23 $$ sql = StringUtil.replace(sql, "[$FOLDER_ID$]", getFolderIds(folderIds, JournalArticleImpl.TABLE_NAME))-->Line_27 $$ sql = StringUtil.replace(sql, "(JournalArticle.version = ?) [$AND_OR_CONNECTOR$]", StringPool.BLANK)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_32 $$ sql = replaceStructureTemplate(sql, ddmStructureKeys, ddmTemplateKeys)[ FD ]
Line_46 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_49 $$ qPos.add(groupId)[ FD ]
Line_7 $$ ddmStructureKeys = CustomSQLUtil.keywords(ddmStructureKeys, false)-->Line_33 $$ if (!isNullArray(ddmStructureKeys)) [ FD ]
Line_8 $$ ddmTemplateKeys = CustomSQLUtil.keywords(ddmTemplateKeys, false)-->Line_60 $$ qPos.add(ddmTemplateKeys, 2)[ FD ]
Line_25 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.articleId", StringPool.LIKE, false, articleIds)-->Line_39 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_15 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_F_C_A_V_T_D_C_S_T_D_R, queryDefinition, "JournalArticle")-->Line_34 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMStructureKey", StringPool.LIKE, false, ddmStructureKeys)[ FD ]
Line_44 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_46 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_46 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_74 $$ qPos.add(reviewDate_TS)[ FD ]
Line_16 $$ sql = replaceStatusJoin(sql, queryDefinition)-->Line_25 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.articleId", StringPool.LIKE, false, articleIds)[ FD ]
Line_46 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_55 $$ qPos.add(queryDefinition.getStatus())[ FD ]
Line_25 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.articleId", StringPool.LIKE, false, articleIds)-->Line_41 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, JournalArticle.class.getName(), "JournalArticle.resourcePrimKey", groupId)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_5 $$ descriptions = CustomSQLUtil.keywords(descriptions, false)[ FD ]
Line_25 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.articleId", StringPool.LIKE, false, articleIds)-->Line_30 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.description", StringPool.LIKE, false, descriptions)[ FD ]
Line_48 $$ if (groupId > 0) -->Line_49 $$ qPos.add(groupId)[ CD ]
Line_15 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_F_C_A_V_T_D_C_S_T_D_R, queryDefinition, "JournalArticle")-->Line_23 $$ sql = StringUtil.replace(sql, "[$FOLDER_ID$]", getFolderIds(folderIds, JournalArticleImpl.TABLE_NAME))[ FD ]
Line_21 $$ sql = StringUtil.replace(sql, "([$FOLDER_ID$]) AND", StringPool.BLANK)-->Line_29 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(JournalArticle.title)", StringPool.LIKE, false, titles)[ FD ]
Line_27 $$ sql = StringUtil.replace(sql, "(JournalArticle.version = ?) [$AND_OR_CONNECTOR$]", StringPool.BLANK)-->Line_31 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.content", StringPool.LIKE, false, contents)[ FD ]
Line_31 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.content", StringPool.LIKE, false, contents)-->Line_42 $$ sql = StringUtil.replace(sql, "(companyId", "(JournalArticle.companyId")[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_3 $$ articleIds = CustomSQLUtil.keywords(articleIds, false)[ CD ]
Line_46 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_47 $$ qPos.add(companyId)[ FD ]
Line_46 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_67 $$ qPos.add(descriptions, 2)[ FD ]
Line_36 $$ if (!isNullArray(ddmTemplateKeys)) -->Line_37 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMTemplateKey", StringPool.LIKE, false, ddmTemplateKeys)[ CD ]
Line_51 $$ for (long folderId : folderIds) -->Line_52 $$ qPos.add(folderId)[ FD ]
Line_21 $$ sql = StringUtil.replace(sql, "([$FOLDER_ID$]) AND", StringPool.BLANK)-->Line_41 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, JournalArticle.class.getName(), "JournalArticle.resourcePrimKey", groupId)[ FD ]
Line_23 $$ sql = StringUtil.replace(sql, "[$FOLDER_ID$]", getFolderIds(folderIds, JournalArticleImpl.TABLE_NAME))-->Line_31 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.content", StringPool.LIKE, false, contents)[ FD ]
Line_21 $$ sql = StringUtil.replace(sql, "([$FOLDER_ID$]) AND", StringPool.BLANK)-->Line_44 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_21 $$ sql = StringUtil.replace(sql, "([$FOLDER_ID$]) AND", StringPool.BLANK)-->Line_32 $$ sql = replaceStructureTemplate(sql, ddmStructureKeys, ddmTemplateKeys)[ FD ]
Line_15 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_F_C_A_V_T_D_C_S_T_D_R, queryDefinition, "JournalArticle")-->Line_32 $$ sql = replaceStructureTemplate(sql, ddmStructureKeys, ddmTemplateKeys)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_37 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMTemplateKey", StringPool.LIKE, false, ddmTemplateKeys)[ FD ]
Line_39 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)-->Line_41 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, JournalArticle.class.getName(), "JournalArticle.resourcePrimKey", groupId)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_34 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMStructureKey", StringPool.LIKE, false, ddmStructureKeys)[ FD ]
Line_21 $$ sql = StringUtil.replace(sql, "([$FOLDER_ID$]) AND", StringPool.BLANK)-->Line_23 $$ sql = StringUtil.replace(sql, "[$FOLDER_ID$]", getFolderIds(folderIds, JournalArticleImpl.TABLE_NAME))[ FD ]
Line_32 $$ sql = replaceStructureTemplate(sql, ddmStructureKeys, ddmTemplateKeys)-->Line_44 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_77 $$ Long count = itr.next()-->Line_79 $$ return count.intValue()[ FD ]
Line_16 $$ sql = replaceStatusJoin(sql, queryDefinition)-->Line_39 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_32 $$ sql = replaceStructureTemplate(sql, ddmStructureKeys, ddmTemplateKeys)-->Line_42 $$ sql = StringUtil.replace(sql, "(companyId", "(JournalArticle.companyId")[ FD ]
Line_32 $$ sql = replaceStructureTemplate(sql, ddmStructureKeys, ddmTemplateKeys)-->Line_39 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_27 $$ sql = StringUtil.replace(sql, "(JournalArticle.version = ?) [$AND_OR_CONNECTOR$]", StringPool.BLANK)-->Line_30 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.description", StringPool.LIKE, false, descriptions)[ FD ]
Line_15 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_F_C_A_V_T_D_C_S_T_D_R, queryDefinition, "JournalArticle")-->Line_41 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, JournalArticle.class.getName(), "JournalArticle.resourcePrimKey", groupId)[ FD ]
Line_76 $$ if (itr.hasNext()) -->Line_77 $$ Long count = itr.next()[ CD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_54 $$ qPos.add(classNameId)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_33 $$ if (!isNullArray(ddmStructureKeys)) [ FD ]
Line_23 $$ sql = StringUtil.replace(sql, "[$FOLDER_ID$]", getFolderIds(folderIds, JournalArticleImpl.TABLE_NAME))-->Line_32 $$ sql = replaceStructureTemplate(sql, ddmStructureKeys, ddmTemplateKeys)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_4 $$ titles = CustomSQLUtil.keywords(titles)[ FD ]
Line_46 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_73 $$ qPos.add(reviewDate_TS)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_9 $$ Timestamp displayDateGT_TS = CalendarUtil.getTimestamp(displayDateGT)[ FD ]
Line_15 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_F_C_A_V_T_D_C_S_T_D_R, queryDefinition, "JournalArticle")-->Line_18 $$ sql = StringUtil.replace(sql, "(JournalArticle.groupId = ?) AND", StringPool.BLANK)[ FD ]
Line_8 $$ ddmTemplateKeys = CustomSQLUtil.keywords(ddmTemplateKeys, false)-->Line_32 $$ sql = replaceStructureTemplate(sql, ddmStructureKeys, ddmTemplateKeys)[ FD ]
Line_10 $$ Timestamp displayDateLT_TS = CalendarUtil.getTimestamp(displayDateLT)-->Line_72 $$ qPos.add(displayDateLT_TS)[ FD ]
Line_31 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.content", StringPool.LIKE, false, contents)-->Line_39 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_8 $$ ddmTemplateKeys = CustomSQLUtil.keywords(ddmTemplateKeys, false)-->Line_59 $$ if (!isNullArray(ddmTemplateKeys)) [ FD ]
Line_37 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.DDMTemplateKey", StringPool.LIKE, false, ddmTemplateKeys)-->Line_41 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, JournalArticle.class.getName(), "JournalArticle.resourcePrimKey", groupId)[ FD ]
Line_6 $$ contents = CustomSQLUtil.keywords(contents, false)-->Line_31 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.content", StringPool.LIKE, false, contents)[ FD ]
Line_12 $$ Session session = null-->Line_86 $$ closeSession(session)[ FD ]
Line_15 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_F_C_A_V_T_D_C_S_T_D_R, queryDefinition, "JournalArticle")-->Line_31 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.content", StringPool.LIKE, false, contents)[ FD ]
Line_30 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.description", StringPool.LIKE, false, descriptions)-->Line_41 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, JournalArticle.class.getName(), "JournalArticle.resourcePrimKey", groupId)[ FD ]
Line_46 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_52 $$ qPos.add(folderId)[ FD ]
Line_8 $$ ddmTemplateKeys = CustomSQLUtil.keywords(ddmTemplateKeys, false)-->Line_36 $$ if (!isNullArray(ddmTemplateKeys)) [ FD ]
Line_56 $$ if (!isNullArray(ddmStructureKeys)) -->Line_57 $$ qPos.add(ddmStructureKeys, 2)[ CD ]
Line_16 $$ sql = replaceStatusJoin(sql, queryDefinition)-->Line_32 $$ sql = replaceStructureTemplate(sql, ddmStructureKeys, ddmTemplateKeys)[ FD ]
Line_46 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_69 $$ qPos.add(displayDateGT_TS)[ FD ]
Line_2 $$ protected int doCountByC_G_F_C_A_V_T_D_C_S_T_D_R(long companyId, long groupId, List<Long> folderIds, long classNameId, String[] articleIds, Double version, String[] titles, String[] descriptions, String[] contents, String[] ddmStructureKeys, String[] ddmTemplateKeys, Date displayDateGT, Date displayDateLT, Date reviewDate, boolean andOperator, QueryDefinition<JournalArticle> queryDefinition, boolean inlineSQLHelper) -->Line_10 $$ Timestamp displayDateLT_TS = CalendarUtil.getTimestamp(displayDateLT)[ FD ]
Line_29 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(JournalArticle.title)", StringPool.LIKE, false, titles)-->Line_30 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.description", StringPool.LIKE, false, descriptions)[ FD ]
Line_7 $$ ddmStructureKeys = CustomSQLUtil.keywords(ddmStructureKeys, false)-->Line_56 $$ if (!isNullArray(ddmStructureKeys)) [ FD ]
Line_27 $$ sql = StringUtil.replace(sql, "(JournalArticle.version = ?) [$AND_OR_CONNECTOR$]", StringPool.BLANK)-->Line_29 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(JournalArticle.title)", StringPool.LIKE, false, titles)[ FD ]
Line_21 $$ sql = StringUtil.replace(sql, "([$FOLDER_ID$]) AND", StringPool.BLANK)-->Line_30 $$ sql = CustomSQLUtil.replaceKeywords(sql, "JournalArticle.description", StringPool.LIKE, false, descriptions)[ FD ]
Line_46 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_64 $$ qPos.add(version)[ FD ]
Line_39 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)-->Line_42 $$ sql = StringUtil.replace(sql, "(companyId", "(JournalArticle.companyId")[ FD ]
