Line_45 $$ Query q = session.createQuery(sql)-->Line_53 $$ count = (Long) q.uniqueResult()[ FD ]
Line_53 $$ count = (Long) q.uniqueResult()-->Line_54 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_G_T, finderArgs, count)[ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_38 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_25 $$ for (int i = 0; i < types.length; i++) -->Line_34 $$ if ((i + 1) < types.length) [ CD ]
Line_19 $$ if (count == null) -->Line_23 $$ if (types.length > 0) [ CD ]
Line_19 $$ if (count == null) -->Line_40 $$ query.setStringAt(removeConjunction(query.stringAt(query.index() - 1)), query.index() - 1)[ CD ]
Line_19 $$ if (count == null) -->Line_41 $$ String sql = query.toString()[ CD ]
Line_34 $$ if ((i + 1) < types.length) -->Line_35 $$ query.append(WHERE_OR)[ CD ]
Line_49 $$ if ((type != null) && !type.isEmpty()) -->Line_50 $$ qPos.add(type)[ CD ]
Line_12 $$ types = new String[0]-->Line_17 $$ Object[] finderArgs = new Object[] [ FD ]
Line_19 $$ if (count == null) -->Line_22 $$ query.append(_FINDER_COLUMN_G_T_GROUPID_2)[ CD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_28 $$ query.append(_FINDER_COLUMN_G_T_TYPE_1)[ FD ]
Line_29 $$ if (type.equals(StringPool.BLANK)) -->Line_32 $$ query.append(_FINDER_COLUMN_G_T_TYPE_2)[ CD ]
Line_42 $$ Session session = null-->Line_45 $$ Query q = session.createQuery(sql)[ FD ]
Line_14 $$ types = ArrayUtil.distinct(types, NULL_SAFE_STRING_COMPARATOR)-->Line_15 $$ Arrays.sort(types, NULL_SAFE_STRING_COMPARATOR)[ FD ]
Line_18 $$ Long count = (Long) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_G_T, finderArgs, this)-->Line_19 $$ if (count == null) [ FD ]
Line_23 $$ if (types.length > 0) -->Line_25 $$ for (int i = 0; i < types.length; i++) [ CD ]
Line_25 $$ for (int i = 0; i < types.length; i++) -->Line_26 $$ String type = types[i][ CD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_22 $$ query.append(_FINDER_COLUMN_G_T_GROUPID_2)[ FD ]
Line_26 $$ String type = types[i]-->Line_49 $$ if ((type != null) && !type.isEmpty()) [ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_21 $$ query.append(_SQL_COUNT_CALEVENT_WHERE)[ FD ]
Line_13 $$ if (types.length > 1) -->Line_14 $$ types = ArrayUtil.distinct(types, NULL_SAFE_STRING_COMPARATOR)[ CD ]
Line_27 $$ if (type == null) -->Line_29 $$ if (type.equals(StringPool.BLANK)) [ CD ]
Line_26 $$ String type = types[i]-->Line_29 $$ if (type.equals(StringPool.BLANK)) [ FD ]
Line_18 $$ Long count = (Long) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_G_T, finderArgs, this)-->Line_62 $$ return count.intValue()[ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_40 $$ query.setStringAt(removeConjunction(query.stringAt(query.index() - 1)), query.index() - 1)[ FD ]
Line_53 $$ count = (Long) q.uniqueResult()-->Line_62 $$ return count.intValue()[ FD ]
Line_26 $$ String type = types[i]-->Line_50 $$ qPos.add(type)[ FD ]
Line_11 $$ if (types == null) -->Line_12 $$ types = new String[0][ CD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_35 $$ query.append(WHERE_OR)[ FD ]
Line_46 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_47 $$ qPos.add(groupId)[ FD ]
Line_48 $$ for (String type : types) -->Line_49 $$ if ((type != null) && !type.isEmpty()) [ FD ]
Line_14 $$ types = ArrayUtil.distinct(types, NULL_SAFE_STRING_COMPARATOR)-->Line_17 $$ Object[] finderArgs = new Object[] [ FD ]
Line_29 $$ if (type.equals(StringPool.BLANK)) -->Line_30 $$ query.append(_FINDER_COLUMN_G_T_TYPE_3)[ CD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_41 $$ String sql = query.toString()[ FD ]
Line_44 $$ session = openSession()-->Line_45 $$ Query q = session.createQuery(sql)[ FD ]
Line_13 $$ if (types.length > 1) -->Line_15 $$ Arrays.sort(types, NULL_SAFE_STRING_COMPARATOR)[ CD ]
Line_23 $$ if (types.length > 0) -->Line_38 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_45 $$ Query q = session.createQuery(sql)-->Line_46 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_17 $$ Object[] finderArgs = new Object[] -->Line_56 $$ finderCache.removeResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_G_T, finderArgs)[ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_24 $$ query.append(StringPool.OPEN_PARENTHESIS)[ FD ]
Line_17 $$ Object[] finderArgs = new Object[] -->Line_54 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_G_T, finderArgs, count)[ FD ]
Line_19 $$ if (count == null) -->Line_42 $$ Session session = null[ CD ]
Line_44 $$ session = openSession()-->Line_59 $$ closeSession(session)[ FD ]
Line_17 $$ Object[] finderArgs = new Object[] -->Line_18 $$ Long count = (Long) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_G_T, finderArgs, this)[ FD ]
Line_19 $$ if (count == null) -->Line_20 $$ StringBundler query = new StringBundler()[ CD ]
Line_27 $$ if (type == null) -->Line_28 $$ query.append(_FINDER_COLUMN_G_T_TYPE_1)[ CD ]
Line_42 $$ Session session = null-->Line_44 $$ session = openSession()[ FD ]
Line_42 $$ Session session = null-->Line_59 $$ closeSession(session)[ FD ]
Line_18 $$ Long count = (Long) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_G_T, finderArgs, this)-->Line_54 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_G_T, finderArgs, count)[ FD ]
Line_11 $$ if (types == null) -->Line_13 $$ if (types.length > 1) [ CD ]
Line_25 $$ for (int i = 0; i < types.length; i++) -->Line_27 $$ if (type == null) [ CD ]
Line_18 $$ Long count = (Long) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_COUNT_BY_G_T, finderArgs, this)-->Line_53 $$ count = (Long) q.uniqueResult()[ FD ]
Line_12 $$ types = new String[0]-->Line_14 $$ types = ArrayUtil.distinct(types, NULL_SAFE_STRING_COMPARATOR)[ FD ]
Line_41 $$ String sql = query.toString()-->Line_45 $$ Query q = session.createQuery(sql)[ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_32 $$ query.append(_FINDER_COLUMN_G_T_TYPE_2)[ FD ]
Line_23 $$ if (types.length > 0) -->Line_24 $$ query.append(StringPool.OPEN_PARENTHESIS)[ CD ]
Line_48 $$ for (String type : types) -->Line_50 $$ qPos.add(type)[ FD ]
Line_46 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_50 $$ qPos.add(type)[ FD ]
Line_12 $$ types = new String[0]-->Line_15 $$ Arrays.sort(types, NULL_SAFE_STRING_COMPARATOR)[ FD ]
Line_19 $$ if (count == null) -->Line_21 $$ query.append(_SQL_COUNT_CALEVENT_WHERE)[ CD ]
Line_26 $$ String type = types[i]-->Line_27 $$ if (type == null) [ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_30 $$ query.append(_FINDER_COLUMN_G_T_TYPE_3)[ FD ]
