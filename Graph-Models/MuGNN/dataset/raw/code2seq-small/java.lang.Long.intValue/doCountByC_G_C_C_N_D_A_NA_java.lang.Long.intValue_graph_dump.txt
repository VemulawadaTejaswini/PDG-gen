Line_14 $$ sql = StringUtil.replace(sql, "[$CLASS_NAME_ID$]", getClassNameIds(classNameIds))-->Line_18 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_2 $$ protected int doCountByC_G_C_C_N_D_A(long companyId, long[] groupIds, long[] classNameIds, String[] codes, String[] names, String[] descriptions, boolean active, boolean andOperator, boolean inlineSQLHelper) -->Line_5 $$ descriptions = CustomSQLUtil.keywords(descriptions, false)[ CD ]
Line_21 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_30 $$ qPos.add(active)[ FD ]
Line_21 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_22 $$ qPos.add(companyId)[ FD ]
Line_2 $$ protected int doCountByC_G_C_C_N_D_A(long companyId, long[] groupIds, long[] classNameIds, String[] codes, String[] names, String[] descriptions, boolean active, boolean andOperator, boolean inlineSQLHelper) -->Line_30 $$ qPos.add(active)[ FD ]
Line_13 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))-->Line_16 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, false, names)[ FD ]
Line_2 $$ protected int doCountByC_G_C_C_N_D_A(long companyId, long[] groupIds, long[] classNameIds, String[] codes, String[] names, String[] descriptions, boolean active, boolean andOperator, boolean inlineSQLHelper) -->Line_3 $$ codes = CustomSQLUtil.keywords(codes)[ FD ]
Line_11 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, CalendarResource.class.getName(), "CalendarResource.calendarResourceId", groupIds)-->Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(code_)", StringPool.LIKE, false, codes)[ FD ]
Line_2 $$ protected int doCountByC_G_C_C_N_D_A(long companyId, long[] groupIds, long[] classNameIds, String[] codes, String[] names, String[] descriptions, boolean active, boolean andOperator, boolean inlineSQLHelper) -->Line_17 $$ sql = CustomSQLUtil.replaceKeywords(sql, "description", StringPool.LIKE, true, descriptions)[ FD ]
Line_32 $$ if (itr.hasNext()) -->Line_34 $$ if (count != null) [ CD ]
Line_21 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_27 $$ qPos.add(codes, 2)[ FD ]
Line_11 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, CalendarResource.class.getName(), "CalendarResource.calendarResourceId", groupIds)-->Line_14 $$ sql = StringUtil.replace(sql, "[$CLASS_NAME_ID$]", getClassNameIds(classNameIds))[ FD ]
Line_24 $$ if (ArrayUtil.isNotEmpty(classNameIds)) -->Line_25 $$ qPos.add(classNameIds)[ CD ]
Line_2 $$ protected int doCountByC_G_C_C_N_D_A(long companyId, long[] groupIds, long[] classNameIds, String[] codes, String[] names, String[] descriptions, boolean active, boolean andOperator, boolean inlineSQLHelper) -->Line_22 $$ qPos.add(companyId)[ FD ]
Line_2 $$ protected int doCountByC_G_C_C_N_D_A(long companyId, long[] groupIds, long[] classNameIds, String[] codes, String[] names, String[] descriptions, boolean active, boolean andOperator, boolean inlineSQLHelper) -->Line_28 $$ qPos.add(names, 2)[ FD ]
Line_2 $$ protected int doCountByC_G_C_C_N_D_A(long companyId, long[] groupIds, long[] classNameIds, String[] codes, String[] names, String[] descriptions, boolean active, boolean andOperator, boolean inlineSQLHelper) -->Line_25 $$ qPos.add(classNameIds)[ FD ]
Line_2 $$ protected int doCountByC_G_C_C_N_D_A(long companyId, long[] groupIds, long[] classNameIds, String[] codes, String[] names, String[] descriptions, boolean active, boolean andOperator, boolean inlineSQLHelper) -->Line_4 $$ names = CustomSQLUtil.keywords(names)[ FD ]
Line_16 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, false, names)-->Line_18 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_9 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_C_C_N_D_A)-->Line_11 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, CalendarResource.class.getName(), "CalendarResource.calendarResourceId", groupIds)[ FD ]
Line_11 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, CalendarResource.class.getName(), "CalendarResource.calendarResourceId", groupIds)-->Line_19 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_3 $$ codes = CustomSQLUtil.keywords(codes)-->Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(code_)", StringPool.LIKE, false, codes)[ FD ]
Line_9 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_C_C_N_D_A)-->Line_13 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))[ FD ]
Line_13 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))-->Line_19 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_21 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_25 $$ qPos.add(classNameIds)[ FD ]
Line_11 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, CalendarResource.class.getName(), "CalendarResource.calendarResourceId", groupIds)-->Line_18 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_11 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, CalendarResource.class.getName(), "CalendarResource.calendarResourceId", groupIds)-->Line_16 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, false, names)[ FD ]
Line_6 $$ Session session = null-->Line_42 $$ closeSession(session)[ FD ]
Line_9 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_C_C_N_D_A)-->Line_18 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_33 $$ Long count = itr.next()-->Line_35 $$ return count.intValue()[ FD ]
Line_13 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))-->Line_14 $$ sql = StringUtil.replace(sql, "[$CLASS_NAME_ID$]", getClassNameIds(classNameIds))[ FD ]
Line_2 $$ protected int doCountByC_G_C_C_N_D_A(long companyId, long[] groupIds, long[] classNameIds, String[] codes, String[] names, String[] descriptions, boolean active, boolean andOperator, boolean inlineSQLHelper) -->Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(code_)", StringPool.LIKE, false, codes)[ FD ]
Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(code_)", StringPool.LIKE, false, codes)-->Line_16 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, false, names)[ FD ]
Line_19 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_21 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_14 $$ sql = StringUtil.replace(sql, "[$CLASS_NAME_ID$]", getClassNameIds(classNameIds))-->Line_16 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, false, names)[ FD ]
Line_2 $$ protected int doCountByC_G_C_C_N_D_A(long companyId, long[] groupIds, long[] classNameIds, String[] codes, String[] names, String[] descriptions, boolean active, boolean andOperator, boolean inlineSQLHelper) -->Line_18 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_10 $$ if (inlineSQLHelper) -->Line_11 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, CalendarResource.class.getName(), "CalendarResource.calendarResourceId", groupIds)[ CD ]
Line_13 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))-->Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(code_)", StringPool.LIKE, false, codes)[ FD ]
Line_11 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, CalendarResource.class.getName(), "CalendarResource.calendarResourceId", groupIds)-->Line_17 $$ sql = CustomSQLUtil.replaceKeywords(sql, "description", StringPool.LIKE, true, descriptions)[ FD ]
Line_31 $$ Iterator<Long> itr = q.iterate()-->Line_33 $$ Long count = itr.next()[ FD ]
Line_16 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, false, names)-->Line_17 $$ sql = CustomSQLUtil.replaceKeywords(sql, "description", StringPool.LIKE, true, descriptions)[ FD ]
Line_14 $$ sql = StringUtil.replace(sql, "[$CLASS_NAME_ID$]", getClassNameIds(classNameIds))-->Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(code_)", StringPool.LIKE, false, codes)[ FD ]
Line_5 $$ descriptions = CustomSQLUtil.keywords(descriptions, false)-->Line_29 $$ qPos.add(descriptions, 2)[ FD ]
Line_2 $$ protected int doCountByC_G_C_C_N_D_A(long companyId, long[] groupIds, long[] classNameIds, String[] codes, String[] names, String[] descriptions, boolean active, boolean andOperator, boolean inlineSQLHelper) -->Line_5 $$ descriptions = CustomSQLUtil.keywords(descriptions, false)[ FD ]
Line_3 $$ codes = CustomSQLUtil.keywords(codes)-->Line_27 $$ qPos.add(codes, 2)[ FD ]
Line_9 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_C_C_N_D_A)-->Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(code_)", StringPool.LIKE, false, codes)[ FD ]
Line_6 $$ Session session = null-->Line_19 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected int doCountByC_G_C_C_N_D_A(long companyId, long[] groupIds, long[] classNameIds, String[] codes, String[] names, String[] descriptions, boolean active, boolean andOperator, boolean inlineSQLHelper) -->Line_29 $$ qPos.add(descriptions, 2)[ FD ]
Line_33 $$ Long count = itr.next()-->Line_34 $$ if (count != null) [ FD ]
Line_5 $$ descriptions = CustomSQLUtil.keywords(descriptions, false)-->Line_17 $$ sql = CustomSQLUtil.replaceKeywords(sql, "description", StringPool.LIKE, true, descriptions)[ FD ]
Line_21 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_29 $$ qPos.add(descriptions, 2)[ FD ]
Line_32 $$ if (itr.hasNext()) -->Line_33 $$ Long count = itr.next()[ CD ]
Line_34 $$ if (count != null) -->Line_35 $$ return count.intValue()[ CD ]
Line_9 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_C_C_N_D_A)-->Line_16 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, false, names)[ FD ]
Line_19 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_20 $$ q.addScalar(COUNT_COLUMN_NAME, Type.LONG)[ FD ]
Line_2 $$ protected int doCountByC_G_C_C_N_D_A(long companyId, long[] groupIds, long[] classNameIds, String[] codes, String[] names, String[] descriptions, boolean active, boolean andOperator, boolean inlineSQLHelper) -->Line_6 $$ Session session = null[ CD ]
Line_31 $$ Iterator<Long> itr = q.iterate()-->Line_32 $$ if (itr.hasNext()) [ FD ]
Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(code_)", StringPool.LIKE, false, codes)-->Line_18 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_8 $$ session = openSession()-->Line_19 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected int doCountByC_G_C_C_N_D_A(long companyId, long[] groupIds, long[] classNameIds, String[] codes, String[] names, String[] descriptions, boolean active, boolean andOperator, boolean inlineSQLHelper) -->Line_14 $$ sql = StringUtil.replace(sql, "[$CLASS_NAME_ID$]", getClassNameIds(classNameIds))[ FD ]
Line_8 $$ session = openSession()-->Line_42 $$ closeSession(session)[ FD ]
Line_19 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_31 $$ Iterator<Long> itr = q.iterate()[ FD ]
Line_18 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)-->Line_19 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected int doCountByC_G_C_C_N_D_A(long companyId, long[] groupIds, long[] classNameIds, String[] codes, String[] names, String[] descriptions, boolean active, boolean andOperator, boolean inlineSQLHelper) -->Line_16 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, false, names)[ FD ]
Line_9 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_C_C_N_D_A)-->Line_17 $$ sql = CustomSQLUtil.replaceKeywords(sql, "description", StringPool.LIKE, true, descriptions)[ FD ]
Line_4 $$ names = CustomSQLUtil.keywords(names)-->Line_16 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, false, names)[ FD ]
Line_6 $$ Session session = null-->Line_8 $$ session = openSession()[ FD ]
Line_4 $$ names = CustomSQLUtil.keywords(names)-->Line_28 $$ qPos.add(names, 2)[ FD ]
Line_13 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))-->Line_18 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_21 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_28 $$ qPos.add(names, 2)[ FD ]
Line_13 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))-->Line_17 $$ sql = CustomSQLUtil.replaceKeywords(sql, "description", StringPool.LIKE, true, descriptions)[ FD ]
Line_2 $$ protected int doCountByC_G_C_C_N_D_A(long companyId, long[] groupIds, long[] classNameIds, String[] codes, String[] names, String[] descriptions, boolean active, boolean andOperator, boolean inlineSQLHelper) -->Line_11 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, CalendarResource.class.getName(), "CalendarResource.calendarResourceId", groupIds)[ FD ]
Line_2 $$ protected int doCountByC_G_C_C_N_D_A(long companyId, long[] groupIds, long[] classNameIds, String[] codes, String[] names, String[] descriptions, boolean active, boolean andOperator, boolean inlineSQLHelper) -->Line_24 $$ if (ArrayUtil.isNotEmpty(classNameIds)) [ FD ]
Line_17 $$ sql = CustomSQLUtil.replaceKeywords(sql, "description", StringPool.LIKE, true, descriptions)-->Line_19 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_21 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_23 $$ qPos.add(groupIds)[ FD ]
Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(code_)", StringPool.LIKE, false, codes)-->Line_17 $$ sql = CustomSQLUtil.replaceKeywords(sql, "description", StringPool.LIKE, true, descriptions)[ FD ]
Line_2 $$ protected int doCountByC_G_C_C_N_D_A(long companyId, long[] groupIds, long[] classNameIds, String[] codes, String[] names, String[] descriptions, boolean active, boolean andOperator, boolean inlineSQLHelper) -->Line_23 $$ qPos.add(groupIds)[ FD ]
Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(code_)", StringPool.LIKE, false, codes)-->Line_19 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_9 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_C_C_N_D_A)-->Line_19 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_9 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_C_C_N_D_A)-->Line_14 $$ sql = StringUtil.replace(sql, "[$CLASS_NAME_ID$]", getClassNameIds(classNameIds))[ FD ]
Line_14 $$ sql = StringUtil.replace(sql, "[$CLASS_NAME_ID$]", getClassNameIds(classNameIds))-->Line_19 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_17 $$ sql = CustomSQLUtil.replaceKeywords(sql, "description", StringPool.LIKE, true, descriptions)-->Line_18 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_2 $$ protected int doCountByC_G_C_C_N_D_A(long companyId, long[] groupIds, long[] classNameIds, String[] codes, String[] names, String[] descriptions, boolean active, boolean andOperator, boolean inlineSQLHelper) -->Line_27 $$ qPos.add(codes, 2)[ FD ]
Line_14 $$ sql = StringUtil.replace(sql, "[$CLASS_NAME_ID$]", getClassNameIds(classNameIds))-->Line_17 $$ sql = CustomSQLUtil.replaceKeywords(sql, "description", StringPool.LIKE, true, descriptions)[ FD ]
Line_2 $$ protected int doCountByC_G_C_C_N_D_A(long companyId, long[] groupIds, long[] classNameIds, String[] codes, String[] names, String[] descriptions, boolean active, boolean andOperator, boolean inlineSQLHelper) -->Line_4 $$ names = CustomSQLUtil.keywords(names)[ CD ]
Line_11 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, CalendarResource.class.getName(), "CalendarResource.calendarResourceId", groupIds)-->Line_13 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))[ FD ]
Line_2 $$ protected int doCountByC_G_C_C_N_D_A(long companyId, long[] groupIds, long[] classNameIds, String[] codes, String[] names, String[] descriptions, boolean active, boolean andOperator, boolean inlineSQLHelper) -->Line_13 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))[ FD ]
Line_2 $$ protected int doCountByC_G_C_C_N_D_A(long companyId, long[] groupIds, long[] classNameIds, String[] codes, String[] names, String[] descriptions, boolean active, boolean andOperator, boolean inlineSQLHelper) -->Line_3 $$ codes = CustomSQLUtil.keywords(codes)[ CD ]
Line_16 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, false, names)-->Line_19 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
