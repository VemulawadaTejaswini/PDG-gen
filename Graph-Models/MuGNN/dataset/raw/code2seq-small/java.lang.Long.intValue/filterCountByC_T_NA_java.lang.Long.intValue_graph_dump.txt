Line_35 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_36 $$ q.addScalar(COUNT_COLUMN_NAME, com.liferay.portal.kernel.dao.orm.Type.LONG)[ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_25 $$ query.append(_FINDER_COLUMN_C_T_TYPE_7_SQL)[ FD ]
Line_17 $$ types = ArrayUtil.unique(types)-->Line_26 $$ query.append(StringUtil.merge(types))[ FD ]
Line_23 $$ if (types.length > 0) -->Line_27 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_23 $$ if (types.length > 0) -->Line_25 $$ query.append(_FINDER_COLUMN_C_T_TYPE_7_SQL)[ CD ]
Line_39 $$ Long count = (Long) q.uniqueResult()-->Line_40 $$ return count.intValue()[ FD ]
Line_15 $$ types = new int[0]-->Line_18 $$ Arrays.sort(types)[ FD ]
Line_15 $$ types = new int[0]-->Line_17 $$ types = ArrayUtil.unique(types)[ FD ]
Line_32 $$ Session session = null-->Line_44 $$ closeSession(session)[ FD ]
Line_32 $$ Session session = null-->Line_34 $$ session = openSession()[ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_28 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_30 $$ query.setStringAt(removeConjunction(query.stringAt(query.index() - 1)), query.index() - 1)[ FD ]
Line_14 $$ if (types == null) -->Line_15 $$ types = new int[0][ CD ]
Line_23 $$ if (types.length > 0) -->Line_26 $$ query.append(StringUtil.merge(types))[ CD ]
Line_14 $$ if (types == null) -->Line_16 $$ if (types.length > 1) [ CD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_26 $$ query.append(StringUtil.merge(types))[ FD ]
Line_35 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_39 $$ Long count = (Long) q.uniqueResult()[ FD ]
Line_11 $$ if (!InlineSQLHelperUtil.isEnabled()) -->Line_12 $$ return countByC_T(companyId, types)[ CD ]
Line_35 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_37 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_32 $$ Session session = null-->Line_35 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_21 $$ query.append(_FILTER_SQL_COUNT_ROLE_WHERE)[ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_27 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_22 $$ query.append(_FINDER_COLUMN_C_T_COMPANYID_2)[ FD ]
Line_34 $$ session = openSession()-->Line_44 $$ closeSession(session)[ FD ]
Line_16 $$ if (types.length > 1) -->Line_18 $$ Arrays.sort(types)[ CD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_31 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), Role.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN)[ FD ]
Line_23 $$ if (types.length > 0) -->Line_28 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_20 $$ StringBundler query = new StringBundler()-->Line_24 $$ query.append(StringPool.OPEN_PARENTHESIS)[ FD ]
Line_17 $$ types = ArrayUtil.unique(types)-->Line_18 $$ Arrays.sort(types)[ FD ]
Line_16 $$ if (types.length > 1) -->Line_17 $$ types = ArrayUtil.unique(types)[ CD ]
Line_37 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_38 $$ qPos.add(companyId)[ FD ]
Line_15 $$ types = new int[0]-->Line_26 $$ query.append(StringUtil.merge(types))[ FD ]
Line_34 $$ session = openSession()-->Line_35 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_23 $$ if (types.length > 0) -->Line_24 $$ query.append(StringPool.OPEN_PARENTHESIS)[ CD ]
Line_31 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), Role.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN)-->Line_35 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
