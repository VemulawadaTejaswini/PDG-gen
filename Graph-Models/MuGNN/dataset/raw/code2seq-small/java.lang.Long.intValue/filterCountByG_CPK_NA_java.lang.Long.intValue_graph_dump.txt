Line_14 $$ if (groupIds.length > 0) -->Line_15 $$ query.append(StringPool.OPEN_PARENTHESIS)[ CD ]
Line_6 $$ if (groupIds == null) -->Line_8 $$ if (groupIds.length > 1) [ CD ]
Line_6 $$ if (groupIds == null) -->Line_7 $$ groupIds = new long[0][ CD ]
Line_7 $$ groupIds = new long[0]-->Line_10 $$ Arrays.sort(groupIds)[ FD ]
Line_2 $$ public int filterCountByG_CPK(long[] groupIds, long classPK) -->Line_22 $$ query.append(_FINDER_COLUMN_G_CPK_CLASSPK_2)[ CD ]
Line_2 $$ public int filterCountByG_CPK(long[] groupIds, long classPK) -->Line_7 $$ groupIds = new long[0][ FD ]
Line_9 $$ groupIds = ArrayUtil.unique(groupIds)-->Line_24 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), DDMTemplate.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN, groupIds)[ FD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_18 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_19 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_25 $$ Session session = null-->Line_37 $$ closeSession(session)[ FD ]
Line_2 $$ public int filterCountByG_CPK(long[] groupIds, long classPK) -->Line_9 $$ groupIds = ArrayUtil.unique(groupIds)[ FD ]
Line_8 $$ if (groupIds.length > 1) -->Line_10 $$ Arrays.sort(groupIds)[ CD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_13 $$ query.append(_FILTER_SQL_COUNT_DDMTEMPLATE_WHERE)[ FD ]
Line_2 $$ public int filterCountByG_CPK(long[] groupIds, long classPK) -->Line_24 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), DDMTemplate.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN, groupIds)[ CD ]
Line_2 $$ public int filterCountByG_CPK(long[] groupIds, long classPK) -->Line_6 $$ if (groupIds == null) [ FD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_15 $$ query.append(StringPool.OPEN_PARENTHESIS)[ FD ]
Line_7 $$ groupIds = new long[0]-->Line_24 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), DDMTemplate.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN, groupIds)[ FD ]
Line_25 $$ Session session = null-->Line_27 $$ session = openSession()[ FD ]
Line_30 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_31 $$ qPos.add(classPK)[ FD ]
Line_7 $$ groupIds = new long[0]-->Line_9 $$ groupIds = ArrayUtil.unique(groupIds)[ FD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_20 $$ query.append(WHERE_AND)[ FD ]
Line_28 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_30 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_27 $$ session = openSession()-->Line_37 $$ closeSession(session)[ FD ]
Line_14 $$ if (groupIds.length > 0) -->Line_18 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_9 $$ groupIds = ArrayUtil.unique(groupIds)-->Line_10 $$ Arrays.sort(groupIds)[ FD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_17 $$ query.append(StringUtil.merge(groupIds))[ FD ]
Line_2 $$ public int filterCountByG_CPK(long[] groupIds, long classPK) -->Line_17 $$ query.append(StringUtil.merge(groupIds))[ FD ]
Line_27 $$ session = openSession()-->Line_28 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_8 $$ if (groupIds.length > 1) -->Line_9 $$ groupIds = ArrayUtil.unique(groupIds)[ CD ]
Line_32 $$ Long count = (Long) q.uniqueResult()-->Line_33 $$ return count.intValue()[ FD ]
Line_14 $$ if (groupIds.length > 0) -->Line_20 $$ query.append(WHERE_AND)[ CD ]
Line_7 $$ groupIds = new long[0]-->Line_17 $$ query.append(StringUtil.merge(groupIds))[ FD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_24 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), DDMTemplate.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN, groupIds)[ FD ]
Line_14 $$ if (groupIds.length > 0) -->Line_17 $$ query.append(StringUtil.merge(groupIds))[ CD ]
Line_25 $$ Session session = null-->Line_28 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_14 $$ if (groupIds.length > 0) -->Line_16 $$ query.append(_FINDER_COLUMN_G_CPK_GROUPID_7)[ CD ]
Line_2 $$ public int filterCountByG_CPK(long[] groupIds, long classPK) -->Line_10 $$ Arrays.sort(groupIds)[ FD ]
Line_2 $$ public int filterCountByG_CPK(long[] groupIds, long classPK) -->Line_14 $$ if (groupIds.length > 0) [ CD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_22 $$ query.append(_FINDER_COLUMN_G_CPK_CLASSPK_2)[ FD ]
Line_2 $$ public int filterCountByG_CPK(long[] groupIds, long classPK) -->Line_25 $$ Session session = null[ CD ]
Line_28 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_29 $$ q.addScalar(COUNT_COLUMN_NAME, com.liferay.portal.kernel.dao.orm.Type.LONG)[ FD ]
Line_2 $$ public int filterCountByG_CPK(long[] groupIds, long classPK) -->Line_31 $$ qPos.add(classPK)[ FD ]
Line_2 $$ public int filterCountByG_CPK(long[] groupIds, long classPK) -->Line_13 $$ query.append(_FILTER_SQL_COUNT_DDMTEMPLATE_WHERE)[ CD ]
Line_2 $$ public int filterCountByG_CPK(long[] groupIds, long classPK) -->Line_3 $$ if (!InlineSQLHelperUtil.isEnabled(groupIds)) [ FD ]
Line_14 $$ if (groupIds.length > 0) -->Line_19 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_3 $$ if (!InlineSQLHelperUtil.isEnabled(groupIds)) -->Line_4 $$ return countByG_CPK(groupIds, classPK)[ CD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_23 $$ query.setStringAt(removeConjunction(query.stringAt(query.index() - 1)), query.index() - 1)[ FD ]
Line_9 $$ groupIds = ArrayUtil.unique(groupIds)-->Line_17 $$ query.append(StringUtil.merge(groupIds))[ FD ]
Line_2 $$ public int filterCountByG_CPK(long[] groupIds, long classPK) -->Line_3 $$ if (!InlineSQLHelperUtil.isEnabled(groupIds)) [ CD ]
Line_12 $$ StringBundler query = new StringBundler()-->Line_16 $$ query.append(_FINDER_COLUMN_G_CPK_GROUPID_7)[ FD ]
Line_24 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), DDMTemplate.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN, groupIds)-->Line_28 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_28 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_32 $$ Long count = (Long) q.uniqueResult()[ FD ]
Line_2 $$ public int filterCountByG_CPK(long[] groupIds, long classPK) -->Line_4 $$ return countByG_CPK(groupIds, classPK)[ FD ]
Line_2 $$ public int filterCountByG_CPK(long[] groupIds, long classPK) -->Line_24 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), DDMTemplate.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN, groupIds)[ FD ]
Line_2 $$ public int filterCountByG_CPK(long[] groupIds, long classPK) -->Line_23 $$ query.setStringAt(removeConjunction(query.stringAt(query.index() - 1)), query.index() - 1)[ CD ]
Line_2 $$ public int filterCountByG_CPK(long[] groupIds, long classPK) -->Line_6 $$ if (groupIds == null) [ CD ]
Line_2 $$ public int filterCountByG_CPK(long[] groupIds, long classPK) -->Line_12 $$ StringBundler query = new StringBundler()[ CD ]
