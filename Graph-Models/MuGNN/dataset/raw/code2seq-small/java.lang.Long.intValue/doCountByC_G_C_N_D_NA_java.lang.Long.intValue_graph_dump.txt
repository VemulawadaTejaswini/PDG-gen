Line_10 $$ session = openSession()-->Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_31 $$ if (itr.hasNext()) -->Line_33 $$ if (count != null) [ CD ]
Line_2 $$ protected int doCountByC_G_C_N_D(long companyId, long[] groupIds, long[] calendarResourceIds, String[] names, String[] descriptions, boolean andOperator, boolean inlineSQLHelper) -->Line_13 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Calendar.class.getName(), "Calendar.calendarId", groupIds)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D(long companyId, long[] groupIds, long[] calendarResourceIds, String[] names, String[] descriptions, boolean andOperator, boolean inlineSQLHelper) -->Line_8 $$ Session session = null[ CD ]
Line_15 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))-->Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_13 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Calendar.class.getName(), "Calendar.calendarId", groupIds)-->Line_16 $$ sql = StringUtil.replace(sql, "[$CALENDAR_RESOURCE_ID$]", getCalendarResourceIds(calendarResourceIds))[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D(long companyId, long[] groupIds, long[] calendarResourceIds, String[] names, String[] descriptions, boolean andOperator, boolean inlineSQLHelper) -->Line_7 $$ descriptions = CustomSQLUtil.keywords(descriptions, false)[ CD ]
Line_16 $$ sql = StringUtil.replace(sql, "[$CALENDAR_RESOURCE_ID$]", getCalendarResourceIds(calendarResourceIds))-->Line_17 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, false, names)[ FD ]
Line_4 $$ groupIds = new long[0]-->Line_15 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D(long companyId, long[] groupIds, long[] calendarResourceIds, String[] names, String[] descriptions, boolean andOperator, boolean inlineSQLHelper) -->Line_25 $$ if (ArrayUtil.isNotEmpty(calendarResourceIds)) [ FD ]
Line_11 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_C_N_D)-->Line_18 $$ sql = CustomSQLUtil.replaceKeywords(sql, "description", StringPool.LIKE, false, descriptions)[ FD ]
Line_19 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)-->Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D(long companyId, long[] groupIds, long[] calendarResourceIds, String[] names, String[] descriptions, boolean andOperator, boolean inlineSQLHelper) -->Line_28 $$ qPos.add(names, 2)[ FD ]
Line_15 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))-->Line_16 $$ sql = StringUtil.replace(sql, "[$CALENDAR_RESOURCE_ID$]", getCalendarResourceIds(calendarResourceIds))[ FD ]
Line_11 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_C_N_D)-->Line_15 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))[ FD ]
Line_11 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_C_N_D)-->Line_19 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_17 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, false, names)-->Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_30 $$ Iterator<Long> itr = q.iterate()-->Line_31 $$ if (itr.hasNext()) [ FD ]
Line_13 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Calendar.class.getName(), "Calendar.calendarId", groupIds)-->Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D(long companyId, long[] groupIds, long[] calendarResourceIds, String[] names, String[] descriptions, boolean andOperator, boolean inlineSQLHelper) -->Line_23 $$ qPos.add(companyId)[ FD ]
Line_7 $$ descriptions = CustomSQLUtil.keywords(descriptions, false)-->Line_29 $$ qPos.add(descriptions, 2)[ FD ]
Line_17 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, false, names)-->Line_18 $$ sql = CustomSQLUtil.replaceKeywords(sql, "description", StringPool.LIKE, false, descriptions)[ FD ]
Line_16 $$ sql = StringUtil.replace(sql, "[$CALENDAR_RESOURCE_ID$]", getCalendarResourceIds(calendarResourceIds))-->Line_19 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_25 $$ if (ArrayUtil.isNotEmpty(calendarResourceIds)) -->Line_26 $$ qPos.add(calendarResourceIds)[ CD ]
Line_2 $$ protected int doCountByC_G_C_N_D(long companyId, long[] groupIds, long[] calendarResourceIds, String[] names, String[] descriptions, boolean andOperator, boolean inlineSQLHelper) -->Line_4 $$ groupIds = new long[0][ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D(long companyId, long[] groupIds, long[] calendarResourceIds, String[] names, String[] descriptions, boolean andOperator, boolean inlineSQLHelper) -->Line_19 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_18 $$ sql = CustomSQLUtil.replaceKeywords(sql, "description", StringPool.LIKE, false, descriptions)-->Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D(long companyId, long[] groupIds, long[] calendarResourceIds, String[] names, String[] descriptions, boolean andOperator, boolean inlineSQLHelper) -->Line_6 $$ names = CustomSQLUtil.keywords(names)[ CD ]
Line_8 $$ Session session = null-->Line_10 $$ session = openSession()[ FD ]
Line_13 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Calendar.class.getName(), "Calendar.calendarId", groupIds)-->Line_18 $$ sql = CustomSQLUtil.replaceKeywords(sql, "description", StringPool.LIKE, false, descriptions)[ FD ]
Line_10 $$ session = openSession()-->Line_41 $$ closeSession(session)[ FD ]
Line_7 $$ descriptions = CustomSQLUtil.keywords(descriptions, false)-->Line_18 $$ sql = CustomSQLUtil.replaceKeywords(sql, "description", StringPool.LIKE, false, descriptions)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D(long companyId, long[] groupIds, long[] calendarResourceIds, String[] names, String[] descriptions, boolean andOperator, boolean inlineSQLHelper) -->Line_6 $$ names = CustomSQLUtil.keywords(names)[ FD ]
Line_15 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))-->Line_17 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, false, names)[ FD ]
Line_13 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Calendar.class.getName(), "Calendar.calendarId", groupIds)-->Line_15 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))[ FD ]
Line_12 $$ if (inlineSQLHelper) -->Line_13 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Calendar.class.getName(), "Calendar.calendarId", groupIds)[ CD ]
Line_6 $$ names = CustomSQLUtil.keywords(names)-->Line_28 $$ qPos.add(names, 2)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D(long companyId, long[] groupIds, long[] calendarResourceIds, String[] names, String[] descriptions, boolean andOperator, boolean inlineSQLHelper) -->Line_24 $$ qPos.add(groupIds)[ FD ]
Line_4 $$ groupIds = new long[0]-->Line_13 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Calendar.class.getName(), "Calendar.calendarId", groupIds)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D(long companyId, long[] groupIds, long[] calendarResourceIds, String[] names, String[] descriptions, boolean andOperator, boolean inlineSQLHelper) -->Line_18 $$ sql = CustomSQLUtil.replaceKeywords(sql, "description", StringPool.LIKE, false, descriptions)[ FD ]
Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_30 $$ Iterator<Long> itr = q.iterate()[ FD ]
Line_31 $$ if (itr.hasNext()) -->Line_32 $$ Long count = itr.next()[ CD ]
Line_2 $$ protected int doCountByC_G_C_N_D(long companyId, long[] groupIds, long[] calendarResourceIds, String[] names, String[] descriptions, boolean andOperator, boolean inlineSQLHelper) -->Line_15 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))[ FD ]
Line_18 $$ sql = CustomSQLUtil.replaceKeywords(sql, "description", StringPool.LIKE, false, descriptions)-->Line_19 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D(long companyId, long[] groupIds, long[] calendarResourceIds, String[] names, String[] descriptions, boolean andOperator, boolean inlineSQLHelper) -->Line_26 $$ qPos.add(calendarResourceIds)[ FD ]
Line_8 $$ Session session = null-->Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_13 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Calendar.class.getName(), "Calendar.calendarId", groupIds)-->Line_17 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, false, names)[ FD ]
Line_3 $$ if (groupIds == null) -->Line_4 $$ groupIds = new long[0][ CD ]
Line_8 $$ Session session = null-->Line_41 $$ closeSession(session)[ FD ]
Line_30 $$ Iterator<Long> itr = q.iterate()-->Line_32 $$ Long count = itr.next()[ FD ]
Line_22 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_24 $$ qPos.add(groupIds)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D(long companyId, long[] groupIds, long[] calendarResourceIds, String[] names, String[] descriptions, boolean andOperator, boolean inlineSQLHelper) -->Line_7 $$ descriptions = CustomSQLUtil.keywords(descriptions, false)[ FD ]
Line_22 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_26 $$ qPos.add(calendarResourceIds)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D(long companyId, long[] groupIds, long[] calendarResourceIds, String[] names, String[] descriptions, boolean andOperator, boolean inlineSQLHelper) -->Line_3 $$ if (groupIds == null) [ CD ]
Line_11 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_C_N_D)-->Line_16 $$ sql = StringUtil.replace(sql, "[$CALENDAR_RESOURCE_ID$]", getCalendarResourceIds(calendarResourceIds))[ FD ]
Line_11 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_C_N_D)-->Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_22 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_23 $$ qPos.add(companyId)[ FD ]
Line_6 $$ names = CustomSQLUtil.keywords(names)-->Line_17 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, false, names)[ FD ]
Line_4 $$ groupIds = new long[0]-->Line_24 $$ qPos.add(groupIds)[ FD ]
Line_22 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_29 $$ qPos.add(descriptions, 2)[ FD ]
Line_16 $$ sql = StringUtil.replace(sql, "[$CALENDAR_RESOURCE_ID$]", getCalendarResourceIds(calendarResourceIds))-->Line_18 $$ sql = CustomSQLUtil.replaceKeywords(sql, "description", StringPool.LIKE, false, descriptions)[ FD ]
Line_13 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Calendar.class.getName(), "Calendar.calendarId", groupIds)-->Line_19 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D(long companyId, long[] groupIds, long[] calendarResourceIds, String[] names, String[] descriptions, boolean andOperator, boolean inlineSQLHelper) -->Line_29 $$ qPos.add(descriptions, 2)[ FD ]
Line_32 $$ Long count = itr.next()-->Line_34 $$ return count.intValue()[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D(long companyId, long[] groupIds, long[] calendarResourceIds, String[] names, String[] descriptions, boolean andOperator, boolean inlineSQLHelper) -->Line_3 $$ if (groupIds == null) [ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D(long companyId, long[] groupIds, long[] calendarResourceIds, String[] names, String[] descriptions, boolean andOperator, boolean inlineSQLHelper) -->Line_17 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, false, names)[ FD ]
Line_33 $$ if (count != null) -->Line_34 $$ return count.intValue()[ CD ]
Line_15 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))-->Line_18 $$ sql = CustomSQLUtil.replaceKeywords(sql, "description", StringPool.LIKE, false, descriptions)[ FD ]
Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_21 $$ q.addScalar(COUNT_COLUMN_NAME, Type.LONG)[ FD ]
Line_16 $$ sql = StringUtil.replace(sql, "[$CALENDAR_RESOURCE_ID$]", getCalendarResourceIds(calendarResourceIds))-->Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_22 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_28 $$ qPos.add(names, 2)[ FD ]
Line_17 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, false, names)-->Line_19 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_11 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_C_N_D)-->Line_17 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, false, names)[ FD ]
Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_22 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_11 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_C_N_D)-->Line_13 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Calendar.class.getName(), "Calendar.calendarId", groupIds)[ FD ]
Line_15 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))-->Line_19 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D(long companyId, long[] groupIds, long[] calendarResourceIds, String[] names, String[] descriptions, boolean andOperator, boolean inlineSQLHelper) -->Line_16 $$ sql = StringUtil.replace(sql, "[$CALENDAR_RESOURCE_ID$]", getCalendarResourceIds(calendarResourceIds))[ FD ]
Line_32 $$ Long count = itr.next()-->Line_33 $$ if (count != null) [ FD ]
