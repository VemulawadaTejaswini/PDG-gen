Line_8 $$ Long next = (Long) optimizer.generate(sequence)-->Line_9 $$ assertEquals(1, next.intValue())[ FD ]
Line_4 $$ final SourceMock sequence = new SourceMock(1, 3)-->Line_11 $$ assertEquals(1, sequence.getCurrentValue())[ FD ]
Line_8 $$ Long next = (Long) optimizer.generate(sequence)-->Line_15 $$ assertEquals(4, next.intValue())[ FD ]
Line_4 $$ final SourceMock sequence = new SourceMock(1, 3)-->Line_16 $$ assertEquals(2, sequence.getTimesCalled())[ FD ]
Line_4 $$ final SourceMock sequence = new SourceMock(1, 3)-->Line_8 $$ Long next = (Long) optimizer.generate(sequence)[ FD ]
Line_4 $$ final SourceMock sequence = new SourceMock(1, 3)-->Line_17 $$ assertEquals(4, sequence.getCurrentValue())[ FD ]
Line_8 $$ Long next = (Long) optimizer.generate(sequence)-->Line_14 $$ next = (Long) optimizer2.generate(sequence)[ FD ]
Line_4 $$ final SourceMock sequence = new SourceMock(1, 3)-->Line_10 $$ assertEquals(1, sequence.getTimesCalled())[ FD ]
Line_5 $$ final Optimizer optimizer = buildPooledLoOptimizer(1, 3)-->Line_8 $$ Long next = (Long) optimizer.generate(sequence)[ FD ]
Line_4 $$ final SourceMock sequence = new SourceMock(1, 3)-->Line_7 $$ assertEquals(-1, sequence.getCurrentValue())[ FD ]
Line_4 $$ final SourceMock sequence = new SourceMock(1, 3)-->Line_6 $$ assertEquals(0, sequence.getTimesCalled())[ FD ]
Line_4 $$ final SourceMock sequence = new SourceMock(1, 3)-->Line_14 $$ next = (Long) optimizer2.generate(sequence)[ FD ]
Line_14 $$ next = (Long) optimizer2.generate(sequence)-->Line_15 $$ assertEquals(4, next.intValue())[ FD ]
