Line_4 $$ if (omitTaskDetails) -->Line_7 $$ jobBeingTraced.setOtherTasks(null)[ CD ]
Line_3 $$ if (jobBeingTraced != null) -->Line_36 $$ jobTraceGen.output(jobBeingTraced)[ CD ]
Line_18 $$ long totalSuccessfulAttempts = 0L-->Line_21 $$ totalSuccessfulAttempts += ent.getValue()[ FD ]
Line_3 $$ if (jobBeingTraced != null) -->Line_24 $$ if (totalSuccessfulAttempts > 0L) [ CD ]
Line_3 $$ if (jobBeingTraced != null) -->Line_18 $$ long totalSuccessfulAttempts = 0L[ CD ]
Line_3 $$ if (jobBeingTraced != null) -->Line_13 $$ discCDF.setCDF(successfulReduceAttemptTimes, attemptTimesPercentiles, 100)[ CD ]
Line_25 $$ double[] successAfterI = new double[(int) maxTriesToSucceed + 1]-->Line_32 $$ jobBeingTraced.setMapperTriesToSucceed(successAfterI)[ FD ]
Line_12 $$ LoggedDiscreteCDF discCDF = new LoggedDiscreteCDF()-->Line_17 $$ jobBeingTraced.setFailedReduceAttemptCDF(discCDF)[ FD ]
Line_20 $$ for (Map.Entry<Long, Long> ent : successfulNthMapperAttempts) -->Line_21 $$ totalSuccessfulAttempts += ent.getValue()[ FD ]
Line_3 $$ if (jobBeingTraced != null) -->Line_14 $$ jobBeingTraced.setSuccessfulReduceAttemptCDF(discCDF)[ CD ]
Line_20 $$ for (Map.Entry<Long, Long> ent : successfulNthMapperAttempts) -->Line_30 $$ successAfterI[ent.getKey().intValue()] = ((double) ent.getValue()) / totalSuccessfulAttempts[ FD ]
Line_2 $$ private void finalizeJob() throws IOException -->Line_3 $$ if (jobBeingTraced != null) [ CD ]
Line_18 $$ long totalSuccessfulAttempts = 0L-->Line_24 $$ if (totalSuccessfulAttempts > 0L) [ FD ]
Line_24 $$ if (totalSuccessfulAttempts > 0L) -->Line_34 $$ jobBeingTraced.setMapperTriesToSucceed(null)[ CD ]
Line_20 $$ for (Map.Entry<Long, Long> ent : successfulNthMapperAttempts) -->Line_22 $$ maxTriesToSucceed = Math.max(maxTriesToSucceed, ent.getKey())[ FD ]
Line_18 $$ long totalSuccessfulAttempts = 0L-->Line_30 $$ successAfterI[ent.getKey().intValue()] = ((double) ent.getValue()) / totalSuccessfulAttempts[ FD ]
Line_21 $$ totalSuccessfulAttempts += ent.getValue()-->Line_24 $$ if (totalSuccessfulAttempts > 0L) [ FD ]
Line_4 $$ if (omitTaskDetails) -->Line_6 $$ jobBeingTraced.setReduceTasks(null)[ CD ]
Line_15 $$ discCDF = new LoggedDiscreteCDF()-->Line_17 $$ jobBeingTraced.setFailedReduceAttemptCDF(discCDF)[ FD ]
Line_12 $$ LoggedDiscreteCDF discCDF = new LoggedDiscreteCDF()-->Line_16 $$ discCDF.setCDF(failedReduceAttemptTimes, attemptTimesPercentiles, 100)[ FD ]
Line_4 $$ if (omitTaskDetails) -->Line_5 $$ jobBeingTraced.setMapTasks(null)[ CD ]
Line_12 $$ LoggedDiscreteCDF discCDF = new LoggedDiscreteCDF()-->Line_13 $$ discCDF.setCDF(successfulReduceAttemptTimes, attemptTimesPercentiles, 100)[ FD ]
Line_12 $$ LoggedDiscreteCDF discCDF = new LoggedDiscreteCDF()-->Line_15 $$ discCDF = new LoggedDiscreteCDF()[ FD ]
Line_3 $$ if (jobBeingTraced != null) -->Line_11 $$ jobBeingTraced.setFailedMapAttemptCDFs(mapCDFArrayList(failedMapAttemptTimes))[ CD ]
Line_15 $$ discCDF = new LoggedDiscreteCDF()-->Line_16 $$ discCDF.setCDF(failedReduceAttemptTimes, attemptTimesPercentiles, 100)[ FD ]
Line_19 $$ long maxTriesToSucceed = 0L-->Line_22 $$ maxTriesToSucceed = Math.max(maxTriesToSucceed, ent.getKey())[ FD ]
Line_26 $$ for (int i = 0; i < successAfterI.length; ++i) -->Line_27 $$ successAfterI[i] = 0.0D[ CD ]
Line_24 $$ if (totalSuccessfulAttempts > 0L) -->Line_26 $$ for (int i = 0; i < successAfterI.length; ++i) [ CD ]
Line_3 $$ if (jobBeingTraced != null) -->Line_12 $$ LoggedDiscreteCDF discCDF = new LoggedDiscreteCDF()[ CD ]
Line_24 $$ if (totalSuccessfulAttempts > 0L) -->Line_25 $$ double[] successAfterI = new double[(int) maxTriesToSucceed + 1][ CD ]
Line_3 $$ if (jobBeingTraced != null) -->Line_15 $$ discCDF = new LoggedDiscreteCDF()[ CD ]
Line_3 $$ if (jobBeingTraced != null) -->Line_16 $$ discCDF.setCDF(failedReduceAttemptTimes, attemptTimesPercentiles, 100)[ CD ]
Line_3 $$ if (jobBeingTraced != null) -->Line_4 $$ if (omitTaskDetails) [ CD ]
Line_12 $$ LoggedDiscreteCDF discCDF = new LoggedDiscreteCDF()-->Line_14 $$ jobBeingTraced.setSuccessfulReduceAttemptCDF(discCDF)[ FD ]
Line_21 $$ totalSuccessfulAttempts += ent.getValue()-->Line_30 $$ successAfterI[ent.getKey().intValue()] = ((double) ent.getValue()) / totalSuccessfulAttempts[ FD ]
Line_24 $$ if (totalSuccessfulAttempts > 0L) -->Line_32 $$ jobBeingTraced.setMapperTriesToSucceed(successAfterI)[ CD ]
Line_3 $$ if (jobBeingTraced != null) -->Line_17 $$ jobBeingTraced.setFailedReduceAttemptCDF(discCDF)[ CD ]
Line_3 $$ if (jobBeingTraced != null) -->Line_19 $$ long maxTriesToSucceed = 0L[ CD ]
