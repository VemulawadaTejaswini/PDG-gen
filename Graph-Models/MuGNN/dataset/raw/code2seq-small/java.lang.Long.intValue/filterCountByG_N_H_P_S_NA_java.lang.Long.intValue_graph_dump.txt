Line_12 $$ if (parentTitle == null) -->Line_14 $$ if (parentTitle.equals(StringPool.BLANK)) [ CD ]
Line_2 $$ public int filterCountByG_N_H_P_S(long groupId, long nodeId, boolean head, String parentTitle, int status) -->Line_22 $$ Session session = null[ CD ]
Line_2 $$ public int filterCountByG_N_H_P_S(long groupId, long nodeId, boolean head, String parentTitle, int status) -->Line_10 $$ query.append(_FINDER_COLUMN_G_N_H_P_S_HEAD_2)[ CD ]
Line_14 $$ if (parentTitle.equals(StringPool.BLANK)) -->Line_17 $$ bindParentTitle = true[ CD ]
Line_3 $$ if (!InlineSQLHelperUtil.isEnabled(groupId)) -->Line_4 $$ return countByG_N_H_P_S(groupId, nodeId, head, parentTitle, status)[ CD ]
Line_6 $$ StringBundler query = new StringBundler(6)-->Line_7 $$ query.append(_FILTER_SQL_COUNT_WIKIPAGE_WHERE)[ FD ]
Line_6 $$ StringBundler query = new StringBundler(6)-->Line_8 $$ query.append(_FINDER_COLUMN_G_N_H_P_S_GROUPID_2)[ FD ]
Line_2 $$ public int filterCountByG_N_H_P_S(long groupId, long nodeId, boolean head, String parentTitle, int status) -->Line_12 $$ if (parentTitle == null) [ CD ]
Line_22 $$ Session session = null-->Line_25 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ public int filterCountByG_N_H_P_S(long groupId, long nodeId, boolean head, String parentTitle, int status) -->Line_21 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), WikiPage.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN, groupId)[ CD ]
Line_2 $$ public int filterCountByG_N_H_P_S(long groupId, long nodeId, boolean head, String parentTitle, int status) -->Line_11 $$ boolean bindParentTitle = false[ CD ]
Line_14 $$ if (parentTitle.equals(StringPool.BLANK)) -->Line_18 $$ query.append(_FINDER_COLUMN_G_N_H_P_S_PARENTTITLE_2)[ CD ]
Line_22 $$ Session session = null-->Line_24 $$ session = openSession()[ FD ]
Line_31 $$ if (bindParentTitle) -->Line_32 $$ qPos.add(StringUtil.toLowerCase(parentTitle))[ CD ]
Line_6 $$ StringBundler query = new StringBundler(6)-->Line_9 $$ query.append(_FINDER_COLUMN_G_N_H_P_S_NODEID_2)[ FD ]
Line_12 $$ if (parentTitle == null) -->Line_13 $$ query.append(_FINDER_COLUMN_G_N_H_P_S_PARENTTITLE_1)[ CD ]
Line_2 $$ public int filterCountByG_N_H_P_S(long groupId, long nodeId, boolean head, String parentTitle, int status) -->Line_28 $$ qPos.add(groupId)[ FD ]
Line_6 $$ StringBundler query = new StringBundler(6)-->Line_10 $$ query.append(_FINDER_COLUMN_G_N_H_P_S_HEAD_2)[ FD ]
Line_35 $$ Long count = (Long) q.uniqueResult()-->Line_36 $$ return count.intValue()[ FD ]
Line_25 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_26 $$ q.addScalar(COUNT_COLUMN_NAME, com.liferay.portal.kernel.dao.orm.Type.LONG)[ FD ]
Line_2 $$ public int filterCountByG_N_H_P_S(long groupId, long nodeId, boolean head, String parentTitle, int status) -->Line_14 $$ if (parentTitle.equals(StringPool.BLANK)) [ FD ]
Line_2 $$ public int filterCountByG_N_H_P_S(long groupId, long nodeId, boolean head, String parentTitle, int status) -->Line_29 $$ qPos.add(nodeId)[ FD ]
Line_2 $$ public int filterCountByG_N_H_P_S(long groupId, long nodeId, boolean head, String parentTitle, int status) -->Line_3 $$ if (!InlineSQLHelperUtil.isEnabled(groupId)) [ FD ]
Line_14 $$ if (parentTitle.equals(StringPool.BLANK)) -->Line_15 $$ query.append(_FINDER_COLUMN_G_N_H_P_S_PARENTTITLE_3)[ CD ]
Line_2 $$ public int filterCountByG_N_H_P_S(long groupId, long nodeId, boolean head, String parentTitle, int status) -->Line_21 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), WikiPage.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN, groupId)[ FD ]
Line_2 $$ public int filterCountByG_N_H_P_S(long groupId, long nodeId, boolean head, String parentTitle, int status) -->Line_34 $$ qPos.add(status)[ FD ]
Line_27 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_32 $$ qPos.add(StringUtil.toLowerCase(parentTitle))[ FD ]
Line_22 $$ Session session = null-->Line_40 $$ closeSession(session)[ FD ]
Line_2 $$ public int filterCountByG_N_H_P_S(long groupId, long nodeId, boolean head, String parentTitle, int status) -->Line_6 $$ StringBundler query = new StringBundler(6)[ CD ]
Line_11 $$ boolean bindParentTitle = false-->Line_17 $$ bindParentTitle = true[ FD ]
Line_2 $$ public int filterCountByG_N_H_P_S(long groupId, long nodeId, boolean head, String parentTitle, int status) -->Line_30 $$ qPos.add(head)[ FD ]
Line_6 $$ StringBundler query = new StringBundler(6)-->Line_15 $$ query.append(_FINDER_COLUMN_G_N_H_P_S_PARENTTITLE_3)[ FD ]
Line_2 $$ public int filterCountByG_N_H_P_S(long groupId, long nodeId, boolean head, String parentTitle, int status) -->Line_4 $$ return countByG_N_H_P_S(groupId, nodeId, head, parentTitle, status)[ FD ]
Line_25 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_27 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_27 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_28 $$ qPos.add(groupId)[ FD ]
Line_27 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_30 $$ qPos.add(head)[ FD ]
Line_2 $$ public int filterCountByG_N_H_P_S(long groupId, long nodeId, boolean head, String parentTitle, int status) -->Line_32 $$ qPos.add(StringUtil.toLowerCase(parentTitle))[ FD ]
Line_2 $$ public int filterCountByG_N_H_P_S(long groupId, long nodeId, boolean head, String parentTitle, int status) -->Line_9 $$ query.append(_FINDER_COLUMN_G_N_H_P_S_NODEID_2)[ CD ]
Line_25 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_35 $$ Long count = (Long) q.uniqueResult()[ FD ]
Line_21 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), WikiPage.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN, groupId)-->Line_25 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ public int filterCountByG_N_H_P_S(long groupId, long nodeId, boolean head, String parentTitle, int status) -->Line_7 $$ query.append(_FILTER_SQL_COUNT_WIKIPAGE_WHERE)[ CD ]
Line_6 $$ StringBundler query = new StringBundler(6)-->Line_20 $$ query.append(_FINDER_COLUMN_G_N_H_P_S_STATUS_2)[ FD ]
Line_2 $$ public int filterCountByG_N_H_P_S(long groupId, long nodeId, boolean head, String parentTitle, int status) -->Line_12 $$ if (parentTitle == null) [ FD ]
Line_6 $$ StringBundler query = new StringBundler(6)-->Line_21 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), WikiPage.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN, groupId)[ FD ]
Line_2 $$ public int filterCountByG_N_H_P_S(long groupId, long nodeId, boolean head, String parentTitle, int status) -->Line_20 $$ query.append(_FINDER_COLUMN_G_N_H_P_S_STATUS_2)[ CD ]
Line_2 $$ public int filterCountByG_N_H_P_S(long groupId, long nodeId, boolean head, String parentTitle, int status) -->Line_3 $$ if (!InlineSQLHelperUtil.isEnabled(groupId)) [ CD ]
Line_24 $$ session = openSession()-->Line_40 $$ closeSession(session)[ FD ]
Line_6 $$ StringBundler query = new StringBundler(6)-->Line_18 $$ query.append(_FINDER_COLUMN_G_N_H_P_S_PARENTTITLE_2)[ FD ]
Line_27 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_34 $$ qPos.add(status)[ FD ]
Line_27 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_29 $$ qPos.add(nodeId)[ FD ]
Line_6 $$ StringBundler query = new StringBundler(6)-->Line_13 $$ query.append(_FINDER_COLUMN_G_N_H_P_S_PARENTTITLE_1)[ FD ]
Line_24 $$ session = openSession()-->Line_25 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ public int filterCountByG_N_H_P_S(long groupId, long nodeId, boolean head, String parentTitle, int status) -->Line_8 $$ query.append(_FINDER_COLUMN_G_N_H_P_S_GROUPID_2)[ CD ]
