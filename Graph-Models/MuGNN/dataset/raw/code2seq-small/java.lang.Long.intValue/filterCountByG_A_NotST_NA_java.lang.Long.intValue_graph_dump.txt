Line_23 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_25 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_6 $$ StringBundler query = new StringBundler(4)-->Line_19 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), JournalArticle.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN, groupId)[ FD ]
Line_12 $$ if (articleId.equals(StringPool.BLANK)) -->Line_15 $$ bindArticleId = true[ CD ]
Line_23 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_24 $$ q.addScalar(COUNT_COLUMN_NAME, com.liferay.portal.kernel.dao.orm.Type.LONG)[ FD ]
Line_25 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_28 $$ qPos.add(articleId)[ FD ]
Line_3 $$ if (!InlineSQLHelperUtil.isEnabled(groupId)) -->Line_4 $$ return countByG_A_NotST(groupId, articleId, status)[ CD ]
Line_12 $$ if (articleId.equals(StringPool.BLANK)) -->Line_13 $$ query.append(_FINDER_COLUMN_G_A_NOTST_ARTICLEID_3)[ CD ]
Line_2 $$ public int filterCountByG_A_NotST(long groupId, String articleId, int status) -->Line_19 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), JournalArticle.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN, groupId)[ CD ]
Line_22 $$ session = openSession()-->Line_36 $$ closeSession(session)[ FD ]
Line_6 $$ StringBundler query = new StringBundler(4)-->Line_13 $$ query.append(_FINDER_COLUMN_G_A_NOTST_ARTICLEID_3)[ FD ]
Line_27 $$ if (bindArticleId) -->Line_28 $$ qPos.add(articleId)[ CD ]
Line_2 $$ public int filterCountByG_A_NotST(long groupId, String articleId, int status) -->Line_30 $$ qPos.add(status)[ FD ]
Line_2 $$ public int filterCountByG_A_NotST(long groupId, String articleId, int status) -->Line_9 $$ boolean bindArticleId = false[ CD ]
Line_6 $$ StringBundler query = new StringBundler(4)-->Line_16 $$ query.append(_FINDER_COLUMN_G_A_NOTST_ARTICLEID_2)[ FD ]
Line_2 $$ public int filterCountByG_A_NotST(long groupId, String articleId, int status) -->Line_19 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), JournalArticle.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN, groupId)[ FD ]
Line_9 $$ boolean bindArticleId = false-->Line_15 $$ bindArticleId = true[ FD ]
Line_6 $$ StringBundler query = new StringBundler(4)-->Line_11 $$ query.append(_FINDER_COLUMN_G_A_NOTST_ARTICLEID_1)[ FD ]
Line_2 $$ public int filterCountByG_A_NotST(long groupId, String articleId, int status) -->Line_10 $$ if (articleId == null) [ FD ]
Line_2 $$ public int filterCountByG_A_NotST(long groupId, String articleId, int status) -->Line_12 $$ if (articleId.equals(StringPool.BLANK)) [ FD ]
Line_2 $$ public int filterCountByG_A_NotST(long groupId, String articleId, int status) -->Line_10 $$ if (articleId == null) [ CD ]
Line_20 $$ Session session = null-->Line_23 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ public int filterCountByG_A_NotST(long groupId, String articleId, int status) -->Line_3 $$ if (!InlineSQLHelperUtil.isEnabled(groupId)) [ FD ]
Line_2 $$ public int filterCountByG_A_NotST(long groupId, String articleId, int status) -->Line_26 $$ qPos.add(groupId)[ FD ]
Line_2 $$ public int filterCountByG_A_NotST(long groupId, String articleId, int status) -->Line_28 $$ qPos.add(articleId)[ FD ]
Line_25 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_30 $$ qPos.add(status)[ FD ]
Line_2 $$ public int filterCountByG_A_NotST(long groupId, String articleId, int status) -->Line_4 $$ return countByG_A_NotST(groupId, articleId, status)[ FD ]
Line_31 $$ Long count = (Long) q.uniqueResult()-->Line_32 $$ return count.intValue()[ FD ]
Line_2 $$ public int filterCountByG_A_NotST(long groupId, String articleId, int status) -->Line_3 $$ if (!InlineSQLHelperUtil.isEnabled(groupId)) [ CD ]
Line_2 $$ public int filterCountByG_A_NotST(long groupId, String articleId, int status) -->Line_6 $$ StringBundler query = new StringBundler(4)[ CD ]
Line_20 $$ Session session = null-->Line_36 $$ closeSession(session)[ FD ]
Line_25 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_26 $$ qPos.add(groupId)[ FD ]
Line_23 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_31 $$ Long count = (Long) q.uniqueResult()[ FD ]
Line_22 $$ session = openSession()-->Line_23 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ public int filterCountByG_A_NotST(long groupId, String articleId, int status) -->Line_18 $$ query.append(_FINDER_COLUMN_G_A_NOTST_STATUS_2)[ CD ]
Line_6 $$ StringBundler query = new StringBundler(4)-->Line_7 $$ query.append(_FILTER_SQL_COUNT_JOURNALARTICLE_WHERE)[ FD ]
Line_10 $$ if (articleId == null) -->Line_12 $$ if (articleId.equals(StringPool.BLANK)) [ CD ]
Line_2 $$ public int filterCountByG_A_NotST(long groupId, String articleId, int status) -->Line_20 $$ Session session = null[ CD ]
Line_6 $$ StringBundler query = new StringBundler(4)-->Line_8 $$ query.append(_FINDER_COLUMN_G_A_NOTST_GROUPID_2)[ FD ]
Line_19 $$ String sql = InlineSQLHelperUtil.replacePermissionCheck(query.toString(), JournalArticle.class.getName(), _FILTER_ENTITY_TABLE_FILTER_PK_COLUMN, groupId)-->Line_23 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ public int filterCountByG_A_NotST(long groupId, String articleId, int status) -->Line_7 $$ query.append(_FILTER_SQL_COUNT_JOURNALARTICLE_WHERE)[ CD ]
Line_2 $$ public int filterCountByG_A_NotST(long groupId, String articleId, int status) -->Line_8 $$ query.append(_FINDER_COLUMN_G_A_NOTST_GROUPID_2)[ CD ]
Line_6 $$ StringBundler query = new StringBundler(4)-->Line_18 $$ query.append(_FINDER_COLUMN_G_A_NOTST_STATUS_2)[ FD ]
Line_12 $$ if (articleId.equals(StringPool.BLANK)) -->Line_16 $$ query.append(_FINDER_COLUMN_G_A_NOTST_ARTICLEID_2)[ CD ]
Line_20 $$ Session session = null-->Line_22 $$ session = openSession()[ FD ]
Line_10 $$ if (articleId == null) -->Line_11 $$ query.append(_FINDER_COLUMN_G_A_NOTST_ARTICLEID_1)[ CD ]
