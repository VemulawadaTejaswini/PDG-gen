Line_2 $$ public void testSPR2454() throws Exception -->Line_4 $$ TypeVariable<?> variable = findTypeVariable(MyHomer.class, "L")[ CD ]
Line_2 $$ public void testSPR2454() throws Exception -->Line_3 $$ Map<TypeVariable, Type> typeVariableMap = GenericTypeResolver.getTypeVariableMap(YourHomer.class)[ CD ]
Line_2 $$ public void testSPR2454() throws Exception -->Line_5 $$ assertEquals(AbstractBounded.class, ((ParameterizedType) typeVariableMap.get(variable)).getRawType())[ CD ]
Line_4 $$ TypeVariable<?> variable = findTypeVariable(MyHomer.class, "L")-->Line_5 $$ assertEquals(AbstractBounded.class, ((ParameterizedType) typeVariableMap.get(variable)).getRawType())[ FD ]
Line_3 $$ Map<TypeVariable, Type> typeVariableMap = GenericTypeResolver.getTypeVariableMap(YourHomer.class)-->Line_5 $$ assertEquals(AbstractBounded.class, ((ParameterizedType) typeVariableMap.get(variable)).getRawType())[ FD ]
