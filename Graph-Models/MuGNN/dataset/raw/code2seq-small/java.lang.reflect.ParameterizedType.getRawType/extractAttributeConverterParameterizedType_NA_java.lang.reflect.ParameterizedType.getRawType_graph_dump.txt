Line_2 $$ private ParameterizedType extractAttributeConverterParameterizedType(Type base) -->Line_22 $$ return null[ CD ]
Line_2 $$ private ParameterizedType extractAttributeConverterParameterizedType(Type base) -->Line_4 $$ Class clazz = extractClass(base)[ FD ]
Line_5 $$ List<Type> types = new ArrayList<Type>()-->Line_6 $$ types.add(clazz.getGenericSuperclass())[ FD ]
Line_4 $$ Class clazz = extractClass(base)-->Line_6 $$ types.add(clazz.getGenericSuperclass())[ FD ]
Line_5 $$ List<Type> types = new ArrayList<Type>()-->Line_7 $$ types.addAll(Arrays.asList(clazz.getGenericInterfaces()))[ FD ]
Line_11 $$ final ParameterizedType parameterizedType = (ParameterizedType) type-->Line_17 $$ if (parameterizedType != null) [ FD ]
Line_3 $$ if (base != null) -->Line_6 $$ types.add(clazz.getGenericSuperclass())[ CD ]
Line_2 $$ private ParameterizedType extractAttributeConverterParameterizedType(Type base) -->Line_3 $$ if (base != null) [ FD ]
Line_10 $$ if (ParameterizedType.class.isInstance(type)) -->Line_12 $$ if (AttributeConverter.class.equals(parameterizedType.getRawType())) [ CD ]
Line_9 $$ type = resolveType(type, base)-->Line_10 $$ if (ParameterizedType.class.isInstance(type)) [ FD ]
Line_3 $$ if (base != null) -->Line_4 $$ Class clazz = extractClass(base)[ CD ]
Line_4 $$ Class clazz = extractClass(base)-->Line_7 $$ types.addAll(Arrays.asList(clazz.getGenericInterfaces()))[ FD ]
Line_2 $$ private ParameterizedType extractAttributeConverterParameterizedType(Type base) -->Line_3 $$ if (base != null) [ CD ]
Line_12 $$ if (AttributeConverter.class.equals(parameterizedType.getRawType())) -->Line_13 $$ return parameterizedType[ CD ]
Line_2 $$ private ParameterizedType extractAttributeConverterParameterizedType(Type base) -->Line_9 $$ type = resolveType(type, base)[ FD ]
Line_8 $$ for (Type type : types) -->Line_10 $$ if (ParameterizedType.class.isInstance(type)) [ FD ]
Line_10 $$ if (ParameterizedType.class.isInstance(type)) -->Line_11 $$ final ParameterizedType parameterizedType = (ParameterizedType) type[ CD ]
Line_11 $$ final ParameterizedType parameterizedType = (ParameterizedType) type-->Line_12 $$ if (AttributeConverter.class.equals(parameterizedType.getRawType())) [ FD ]
Line_17 $$ if (parameterizedType != null) -->Line_18 $$ return parameterizedType[ CD ]
Line_9 $$ type = resolveType(type, base)-->Line_16 $$ ParameterizedType parameterizedType = extractAttributeConverterParameterizedType(type)[ FD ]
Line_3 $$ if (base != null) -->Line_7 $$ types.addAll(Arrays.asList(clazz.getGenericInterfaces()))[ CD ]
Line_3 $$ if (base != null) -->Line_5 $$ List<Type> types = new ArrayList<Type>()[ CD ]
Line_8 $$ for (Type type : types) -->Line_16 $$ ParameterizedType parameterizedType = extractAttributeConverterParameterizedType(type)[ FD ]
Line_8 $$ for (Type type : types) -->Line_9 $$ type = resolveType(type, base)[ FD ]
