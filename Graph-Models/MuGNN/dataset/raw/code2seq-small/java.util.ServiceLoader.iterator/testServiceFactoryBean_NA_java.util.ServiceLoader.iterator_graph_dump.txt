Line_2 $$ public void testServiceFactoryBean() -->Line_8 $$ assertTrue(bf.getBean("service") instanceof DocumentBuilderFactory)[ CD ]
Line_2 $$ public void testServiceFactoryBean() -->Line_5 $$ RootBeanDefinition bd = new RootBeanDefinition(ServiceFactoryBean.class)[ CD ]
Line_4 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_8 $$ assertTrue(bf.getBean("service") instanceof DocumentBuilderFactory)[ FD ]
Line_2 $$ public void testServiceFactoryBean() -->Line_6 $$ bd.getPropertyValues().add("serviceType", DocumentBuilderFactory.class.getName())[ CD ]
Line_2 $$ public void testServiceFactoryBean() -->Line_7 $$ bf.registerBeanDefinition("service", bd)[ CD ]
Line_5 $$ RootBeanDefinition bd = new RootBeanDefinition(ServiceFactoryBean.class)-->Line_7 $$ bf.registerBeanDefinition("service", bd)[ FD ]
Line_4 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_7 $$ bf.registerBeanDefinition("service", bd)[ FD ]
Line_2 $$ public void testServiceFactoryBean() -->Line_3 $$ assumeTrue(ServiceLoader.load(DocumentBuilderFactory.class).iterator().hasNext())[ CD ]
Line_2 $$ public void testServiceFactoryBean() -->Line_4 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()[ CD ]
Line_5 $$ RootBeanDefinition bd = new RootBeanDefinition(ServiceFactoryBean.class)-->Line_6 $$ bd.getPropertyValues().add("serviceType", DocumentBuilderFactory.class.getName())[ FD ]
