Line_3 $$ if (file.getFileName().toString().equals(IndexWriter.WRITE_LOCK_NAME)) -->Line_4 $$ logger.trace("Skipping lock file: " + file.toString())[ CD ]
Line_2 $$ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException -->Line_10 $$ Files.move(file, destFile)[ CD ]
Line_3 $$ if (file.getFileName().toString().equals(IndexWriter.WRITE_LOCK_NAME)) -->Line_5 $$ return FileVisitResult.CONTINUE[ CD ]
Line_2 $$ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException -->Line_8 $$ Path destFile = dests[randomInt(dests.length - 1)].resolve(indexName).resolve(relativeFile)[ CD ]
Line_2 $$ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException -->Line_3 $$ if (file.getFileName().toString().equals(IndexWriter.WRITE_LOCK_NAME)) [ CD ]
Line_2 $$ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException -->Line_4 $$ logger.trace("Skipping lock file: " + file.toString())[ FD ]
Line_2 $$ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException -->Line_12 $$ assertTrue(Files.exists(destFile))[ CD ]
Line_2 $$ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException -->Line_11 $$ assertFalse(Files.exists(file))[ FD ]
Line_2 $$ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException -->Line_3 $$ if (file.getFileName().toString().equals(IndexWriter.WRITE_LOCK_NAME)) [ FD ]
Line_2 $$ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException -->Line_7 $$ Path relativeFile = src.relativize(file)[ CD ]
Line_8 $$ Path destFile = dests[randomInt(dests.length - 1)].resolve(indexName).resolve(relativeFile)-->Line_10 $$ Files.move(file, destFile)[ FD ]
Line_2 $$ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException -->Line_11 $$ assertFalse(Files.exists(file))[ CD ]
Line_8 $$ Path destFile = dests[randomInt(dests.length - 1)].resolve(indexName).resolve(relativeFile)-->Line_12 $$ assertTrue(Files.exists(destFile))[ FD ]
Line_7 $$ Path relativeFile = src.relativize(file)-->Line_8 $$ Path destFile = dests[randomInt(dests.length - 1)].resolve(indexName).resolve(relativeFile)[ FD ]
Line_2 $$ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException -->Line_10 $$ Files.move(file, destFile)[ FD ]
Line_2 $$ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException -->Line_7 $$ Path relativeFile = src.relativize(file)[ FD ]
Line_2 $$ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException -->Line_13 $$ return FileVisitResult.CONTINUE[ CD ]
