Line_6 $$ File file = new File(fileName)-->Line_7 $$ Path filePath = file.toPath()[ FD ]
Line_13 $$ File dir = file.getParentFile()-->Line_24 $$ dir = dir.getParentFile()[ FD ]
Line_5 $$ fileName = baseDir.concat(fileName)-->Line_31 $$ fileName = StringUtil.replace(fileName, StringPool.SLASH, StringPool.BACK_SLASH)[ FD ]
Line_13 $$ File dir = file.getParentFile()-->Line_15 $$ Path dirPath = dir.toPath()[ FD ]
Line_5 $$ fileName = baseDir.concat(fileName)-->Line_33 $$ updateProperties(fileName)[ FD ]
Line_2 $$ protected List<String> getFileNames(String baseDir, List<String> recentChangesFileNames, List<PathMatcher> excludeDirPathMatchers, List<PathMatcher> excludeFilePathMatchers, List<PathMatcher> includeFilePathMatchers) throws Exception -->Line_3 $$ List<String> fileNames = new ArrayList()[ CD ]
Line_8 $$ for (PathMatcher pathMatcher : excludeFilePathMatchers) -->Line_30 $$ if (pathMatcher.matches(filePath)) [ FD ]
Line_31 $$ fileName = StringUtil.replace(fileName, StringPool.SLASH, StringPool.BACK_SLASH)-->Line_32 $$ fileNames.add(fileName)[ FD ]
Line_7 $$ Path filePath = file.toPath()-->Line_30 $$ if (pathMatcher.matches(filePath)) [ FD ]
Line_31 $$ fileName = StringUtil.replace(fileName, StringPool.SLASH, StringPool.BACK_SLASH)-->Line_33 $$ updateProperties(fileName)[ FD ]
Line_24 $$ dir = dir.getParentFile()-->Line_15 $$ Path dirPath = dir.toPath()[ FD ]
Line_5 $$ fileName = baseDir.concat(fileName)-->Line_32 $$ fileNames.add(fileName)[ FD ]
Line_16 $$ for (PathMatcher pathMatcher : excludeDirPathMatchers) -->Line_17 $$ if (pathMatcher.matches(dirPath)) [ FD ]
Line_3 $$ List<String> fileNames = new ArrayList()-->Line_32 $$ fileNames.add(fileName)[ FD ]
Line_6 $$ File file = new File(fileName)-->Line_13 $$ File dir = file.getParentFile()[ FD ]
Line_13 $$ File dir = file.getParentFile()-->Line_25 $$ if (dir == null) [ FD ]
Line_24 $$ dir = dir.getParentFile()-->Line_25 $$ if (dir == null) [ FD ]
Line_8 $$ for (PathMatcher pathMatcher : excludeFilePathMatchers) -->Line_9 $$ if (pathMatcher.matches(filePath)) [ FD ]
Line_4 $$ for (String fileName : recentChangesFileNames) -->Line_31 $$ fileName = StringUtil.replace(fileName, StringPool.SLASH, StringPool.BACK_SLASH)[ FD ]
Line_30 $$ if (pathMatcher.matches(filePath)) -->Line_32 $$ fileNames.add(fileName)[ CD ]
Line_30 $$ if (pathMatcher.matches(filePath)) -->Line_31 $$ fileName = StringUtil.replace(fileName, StringPool.SLASH, StringPool.BACK_SLASH)[ CD ]
Line_4 $$ for (String fileName : recentChangesFileNames) -->Line_32 $$ fileNames.add(fileName)[ FD ]
Line_4 $$ for (String fileName : recentChangesFileNames) -->Line_5 $$ fileName = baseDir.concat(fileName)[ FD ]
Line_4 $$ for (String fileName : recentChangesFileNames) -->Line_33 $$ updateProperties(fileName)[ FD ]
Line_2 $$ protected List<String> getFileNames(String baseDir, List<String> recentChangesFileNames, List<PathMatcher> excludeDirPathMatchers, List<PathMatcher> excludeFilePathMatchers, List<PathMatcher> includeFilePathMatchers) throws Exception -->Line_38 $$ return fileNames[ CD ]
Line_14 $$ while (true) -->Line_25 $$ if (dir == null) [ CD ]
Line_7 $$ Path filePath = file.toPath()-->Line_9 $$ if (pathMatcher.matches(filePath)) [ FD ]
Line_30 $$ if (pathMatcher.matches(filePath)) -->Line_33 $$ updateProperties(fileName)[ CD ]
Line_2 $$ protected List<String> getFileNames(String baseDir, List<String> recentChangesFileNames, List<PathMatcher> excludeDirPathMatchers, List<PathMatcher> excludeFilePathMatchers, List<PathMatcher> includeFilePathMatchers) throws Exception -->Line_5 $$ fileName = baseDir.concat(fileName)[ FD ]
Line_16 $$ for (PathMatcher pathMatcher : excludeDirPathMatchers) -->Line_30 $$ if (pathMatcher.matches(filePath)) [ FD ]
Line_15 $$ Path dirPath = dir.toPath()-->Line_17 $$ if (pathMatcher.matches(dirPath)) [ FD ]
Line_14 $$ while (true) -->Line_21 $$ if (Files.exists(dirPath.resolve("source_formatter.ignore"))) [ CD ]
Line_14 $$ while (true) -->Line_15 $$ Path dirPath = dir.toPath()[ CD ]
Line_14 $$ while (true) -->Line_24 $$ dir = dir.getParentFile()[ CD ]
Line_15 $$ Path dirPath = dir.toPath()-->Line_21 $$ if (Files.exists(dirPath.resolve("source_formatter.ignore"))) [ FD ]
Line_8 $$ for (PathMatcher pathMatcher : excludeFilePathMatchers) -->Line_17 $$ if (pathMatcher.matches(dirPath)) [ FD ]
