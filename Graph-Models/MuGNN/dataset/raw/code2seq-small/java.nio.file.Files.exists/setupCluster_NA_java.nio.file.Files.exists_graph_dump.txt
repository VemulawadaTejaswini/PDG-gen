Line_5 $$ Settings.Builder nodeSettings = Settings.builder().put("path.data", baseTempDir.resolve("single-path").toAbsolutePath()).put("node.master", false)-->Line_7 $$ InternalTestCluster.Async<String> singleDataPathNode = internalCluster().startNodeAsync(nodeSettings.build())[ FD ]
Line_2 $$ void setupCluster() throws Exception -->Line_14 $$ assertFalse(Files.exists(singleDataPath))[ CD ]
Line_3 $$ InternalTestCluster.Async<List<String>> replicas = internalCluster().startNodesAsync(1)-->Line_25 $$ replicas.get()[ FD ]
Line_4 $$ Path baseTempDir = createTempDir()-->Line_8 $$ nodeSettings = Settings.builder().put("path.data", baseTempDir.resolve("multi-path1").toAbsolutePath() + "," + baseTempDir.resolve("multi-path2").toAbsolutePath()).put("node.master", false)[ FD ]
Line_4 $$ Path baseTempDir = createTempDir()-->Line_5 $$ Settings.Builder nodeSettings = Settings.builder().put("path.data", baseTempDir.resolve("single-path").toAbsolutePath()).put("node.master", false)[ FD ]
Line_2 $$ void setupCluster() throws Exception -->Line_10 $$ InternalTestCluster.Async<String> multiDataPathNode = internalCluster().startNodeAsync(nodeSettings.build())[ CD ]
Line_2 $$ void setupCluster() throws Exception -->Line_18 $$ assertEquals(2, nodePaths.length)[ CD ]
Line_2 $$ void setupCluster() throws Exception -->Line_21 $$ assertFalse(Files.exists(multiDataPath[1]))[ CD ]
Line_10 $$ InternalTestCluster.Async<String> multiDataPathNode = internalCluster().startNodeAsync(nodeSettings.build())-->Line_17 $$ nodePaths = internalCluster().getInstance(NodeEnvironment.class, multiDataPathNode.get()).nodeDataPaths()[ FD ]
Line_2 $$ void setupCluster() throws Exception -->Line_8 $$ nodeSettings = Settings.builder().put("path.data", baseTempDir.resolve("multi-path1").toAbsolutePath() + "," + baseTempDir.resolve("multi-path2").toAbsolutePath()).put("node.master", false)[ CD ]
Line_2 $$ void setupCluster() throws Exception -->Line_11 $$ Path[] nodePaths = internalCluster().getInstance(NodeEnvironment.class, singleDataPathNode.get()).nodeDataPaths()[ CD ]
Line_2 $$ void setupCluster() throws Exception -->Line_3 $$ InternalTestCluster.Async<List<String>> replicas = internalCluster().startNodesAsync(1)[ CD ]
Line_11 $$ Path[] nodePaths = internalCluster().getInstance(NodeEnvironment.class, singleDataPathNode.get()).nodeDataPaths()-->Line_17 $$ nodePaths = internalCluster().getInstance(NodeEnvironment.class, multiDataPathNode.get()).nodeDataPaths()[ FD ]
Line_8 $$ nodeSettings = Settings.builder().put("path.data", baseTempDir.resolve("multi-path1").toAbsolutePath() + "," + baseTempDir.resolve("multi-path2").toAbsolutePath()).put("node.master", false)-->Line_10 $$ InternalTestCluster.Async<String> multiDataPathNode = internalCluster().startNodeAsync(nodeSettings.build())[ FD ]
Line_2 $$ void setupCluster() throws Exception -->Line_5 $$ Settings.Builder nodeSettings = Settings.builder().put("path.data", baseTempDir.resolve("single-path").toAbsolutePath()).put("node.master", false)[ CD ]
Line_2 $$ void setupCluster() throws Exception -->Line_23 $$ Files.createDirectories(multiDataPath[1])[ CD ]
Line_2 $$ void setupCluster() throws Exception -->Line_7 $$ InternalTestCluster.Async<String> singleDataPathNode = internalCluster().startNodeAsync(nodeSettings.build())[ CD ]
Line_2 $$ void setupCluster() throws Exception -->Line_12 $$ assertEquals(1, nodePaths.length)[ CD ]
Line_2 $$ void setupCluster() throws Exception -->Line_13 $$ singleDataPath = nodePaths[0].resolve(NodeEnvironment.INDICES_FOLDER)[ CD ]
Line_2 $$ void setupCluster() throws Exception -->Line_25 $$ replicas.get()[ CD ]
Line_5 $$ Settings.Builder nodeSettings = Settings.builder().put("path.data", baseTempDir.resolve("single-path").toAbsolutePath()).put("node.master", false)-->Line_8 $$ nodeSettings = Settings.builder().put("path.data", baseTempDir.resolve("multi-path1").toAbsolutePath() + "," + baseTempDir.resolve("multi-path2").toAbsolutePath()).put("node.master", false)[ FD ]
Line_5 $$ Settings.Builder nodeSettings = Settings.builder().put("path.data", baseTempDir.resolve("single-path").toAbsolutePath()).put("node.master", false)-->Line_10 $$ InternalTestCluster.Async<String> multiDataPathNode = internalCluster().startNodeAsync(nodeSettings.build())[ FD ]
Line_2 $$ void setupCluster() throws Exception -->Line_17 $$ nodePaths = internalCluster().getInstance(NodeEnvironment.class, multiDataPathNode.get()).nodeDataPaths()[ CD ]
Line_2 $$ void setupCluster() throws Exception -->Line_4 $$ Path baseTempDir = createTempDir()[ CD ]
Line_2 $$ void setupCluster() throws Exception -->Line_22 $$ Files.createDirectories(multiDataPath[0])[ CD ]
Line_7 $$ InternalTestCluster.Async<String> singleDataPathNode = internalCluster().startNodeAsync(nodeSettings.build())-->Line_11 $$ Path[] nodePaths = internalCluster().getInstance(NodeEnvironment.class, singleDataPathNode.get()).nodeDataPaths()[ FD ]
Line_2 $$ void setupCluster() throws Exception -->Line_15 $$ Files.createDirectories(singleDataPath)[ CD ]
Line_2 $$ void setupCluster() throws Exception -->Line_20 $$ assertFalse(Files.exists(multiDataPath[0]))[ CD ]
