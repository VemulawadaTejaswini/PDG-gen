Line_14 $$ if (Files.isDirectory(file)) -->Line_16 $$ if (Files.isRegularFile(file)) [ CD ]
Line_9 $$ for (Path file : stream) -->Line_15 $$ assertPathHasBeenCleared(file)[ FD ]
Line_14 $$ if (Files.isDirectory(file)) -->Line_15 $$ assertPathHasBeenCleared(file)[ CD ]
Line_5 $$ StringBuilder sb = new StringBuilder()-->Line_6 $$ sb.append("[")[ FD ]
Line_2 $$ public void assertPathHasBeenCleared(Path path) throws Exception -->Line_5 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ public void assertPathHasBeenCleared(Path path) throws Exception -->Line_7 $$ if (Files.exists(path)) [ CD ]
Line_9 $$ for (Path file : stream) -->Line_16 $$ if (Files.isRegularFile(file)) [ FD ]
Line_5 $$ StringBuilder sb = new StringBuilder()-->Line_24 $$ sb.append("]")[ FD ]
Line_2 $$ public void assertPathHasBeenCleared(Path path) throws Exception -->Line_24 $$ sb.append("]")[ CD ]
Line_2 $$ public void assertPathHasBeenCleared(Path path) throws Exception -->Line_8 $$ try (DirectoryStream<Path> stream = Files.newDirectoryStream(path)) [ FD ]
Line_4 $$ int count = 0-->Line_17 $$ count++[ FD ]
Line_4 $$ int count = 0-->Line_25 $$ assertThat(count + " files exist that should have been cleaned:\n" + sb.toString(), count, equalTo(0))[ FD ]
Line_16 $$ if (Files.isRegularFile(file)) -->Line_17 $$ count++[ CD ]
Line_2 $$ public void assertPathHasBeenCleared(Path path) throws Exception -->Line_6 $$ sb.append("[")[ CD ]
Line_2 $$ public void assertPathHasBeenCleared(Path path) throws Exception -->Line_25 $$ assertThat(count + " files exist that should have been cleaned:\n" + sb.toString(), count, equalTo(0))[ CD ]
Line_5 $$ StringBuilder sb = new StringBuilder()-->Line_25 $$ assertThat(count + " files exist that should have been cleaned:\n" + sb.toString(), count, equalTo(0))[ FD ]
Line_2 $$ public void assertPathHasBeenCleared(Path path) throws Exception -->Line_4 $$ int count = 0[ CD ]
Line_9 $$ for (Path file : stream) -->Line_18 $$ sb.append(file.toAbsolutePath().toString())[ FD ]
Line_2 $$ public void assertPathHasBeenCleared(Path path) throws Exception -->Line_7 $$ if (Files.exists(path)) [ FD ]
Line_9 $$ for (Path file : stream) -->Line_10 $$ if (file.getFileName().toString().startsWith("extra")) [ FD ]
Line_16 $$ if (Files.isRegularFile(file)) -->Line_18 $$ sb.append(file.toAbsolutePath().toString())[ CD ]
Line_16 $$ if (Files.isRegularFile(file)) -->Line_19 $$ sb.append("\n")[ CD ]
Line_5 $$ StringBuilder sb = new StringBuilder()-->Line_18 $$ sb.append(file.toAbsolutePath().toString())[ FD ]
Line_9 $$ for (Path file : stream) -->Line_14 $$ if (Files.isDirectory(file)) [ FD ]
Line_5 $$ StringBuilder sb = new StringBuilder()-->Line_19 $$ sb.append("\n")[ FD ]
