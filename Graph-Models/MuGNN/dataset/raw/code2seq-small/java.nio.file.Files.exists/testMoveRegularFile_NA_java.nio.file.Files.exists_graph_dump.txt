Line_3 $$ Path regularFromFilePath = Paths.get("RegularFromFile")-->Line_6 $$ FileHelperUtil.move(regularFromFilePath, regularToFilePath, false)[ FD ]
Line_2 $$ public void testMoveRegularFile() throws IOException -->Line_14 $$ Files.delete(regularToFilePath)[ CD ]
Line_2 $$ public void testMoveRegularFile() throws IOException -->Line_13 $$ Assert.assertTrue(Files.exists(regularToFilePath))[ CD ]
Line_2 $$ public void testMoveRegularFile() throws IOException -->Line_9 $$ Files.delete(regularToFilePath)[ CD ]
Line_3 $$ Path regularFromFilePath = Paths.get("RegularFromFile")-->Line_5 $$ createFile(regularFromFilePath)[ FD ]
Line_4 $$ Path regularToFilePath = Paths.get("RegularToFile")-->Line_11 $$ FileHelperUtil.move(regularFromFilePath, regularToFilePath)[ FD ]
Line_3 $$ Path regularFromFilePath = Paths.get("RegularFromFile")-->Line_11 $$ FileHelperUtil.move(regularFromFilePath, regularToFilePath)[ FD ]
Line_2 $$ public void testMoveRegularFile() throws IOException -->Line_10 $$ createFile(regularFromFilePath)[ CD ]
Line_3 $$ Path regularFromFilePath = Paths.get("RegularFromFile")-->Line_10 $$ createFile(regularFromFilePath)[ FD ]
Line_3 $$ Path regularFromFilePath = Paths.get("RegularFromFile")-->Line_7 $$ Assert.assertTrue(Files.notExists(regularFromFilePath))[ FD ]
Line_2 $$ public void testMoveRegularFile() throws IOException -->Line_5 $$ createFile(regularFromFilePath)[ CD ]
Line_2 $$ public void testMoveRegularFile() throws IOException -->Line_4 $$ Path regularToFilePath = Paths.get("RegularToFile")[ CD ]
Line_2 $$ public void testMoveRegularFile() throws IOException -->Line_7 $$ Assert.assertTrue(Files.notExists(regularFromFilePath))[ CD ]
Line_2 $$ public void testMoveRegularFile() throws IOException -->Line_3 $$ Path regularFromFilePath = Paths.get("RegularFromFile")[ CD ]
Line_4 $$ Path regularToFilePath = Paths.get("RegularToFile")-->Line_13 $$ Assert.assertTrue(Files.exists(regularToFilePath))[ FD ]
Line_4 $$ Path regularToFilePath = Paths.get("RegularToFile")-->Line_14 $$ Files.delete(regularToFilePath)[ FD ]
Line_4 $$ Path regularToFilePath = Paths.get("RegularToFile")-->Line_9 $$ Files.delete(regularToFilePath)[ FD ]
Line_2 $$ public void testMoveRegularFile() throws IOException -->Line_6 $$ FileHelperUtil.move(regularFromFilePath, regularToFilePath, false)[ CD ]
Line_2 $$ public void testMoveRegularFile() throws IOException -->Line_11 $$ FileHelperUtil.move(regularFromFilePath, regularToFilePath)[ CD ]
Line_4 $$ Path regularToFilePath = Paths.get("RegularToFile")-->Line_6 $$ FileHelperUtil.move(regularFromFilePath, regularToFilePath, false)[ FD ]
Line_4 $$ Path regularToFilePath = Paths.get("RegularToFile")-->Line_8 $$ Assert.assertTrue(Files.exists(regularToFilePath))[ FD ]
Line_2 $$ public void testMoveRegularFile() throws IOException -->Line_8 $$ Assert.assertTrue(Files.exists(regularToFilePath))[ CD ]
Line_2 $$ public void testMoveRegularFile() throws IOException -->Line_12 $$ Assert.assertTrue(Files.notExists(regularFromFilePath))[ CD ]
Line_3 $$ Path regularFromFilePath = Paths.get("RegularFromFile")-->Line_12 $$ Assert.assertTrue(Files.notExists(regularFromFilePath))[ FD ]
