Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_14 $$ addCreatedFilePathName(filePath.toString())[ FD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_7 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_CREATE)) [ CD ]
Line_7 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_CREATE)) -->Line_8 $$ if (isIgnoredFilePath(filePath)) [ CD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_23 $$ if (Files.exists(filePath)) [ FD ]
Line_22 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_DELETE)) -->Line_26 $$ removeCreatedFilePathName(filePath.toString())[ CD ]
Line_40 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_RENAME_FROM)) -->Line_43 $$ fireWatchEventListener(SyncWatchEvent.EVENT_TYPE_RENAME_FROM, filePath)[ CD ]
Line_35 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_MODIFY)) -->Line_36 $$ if (_downloadedFilePathNames.remove(filePath.toString()) || (removeCreatedFilePathName(filePath.toString()) && !FileUtil.isValidChecksum(filePath)) || FileUtil.isIgnoredFileName(String.valueOf(filePath.getFileName())) || Files.notExists(filePath) || Files.isDirectory(filePath)) [ CD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_35 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_MODIFY)) [ FD ]
Line_40 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_RENAME_FROM)) -->Line_42 $$ processMissingFilePath(filePath)[ CD ]
Line_7 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_CREATE)) -->Line_11 $$ if (!Files.isDirectory(filePath)) [ CD ]
Line_35 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_MODIFY)) -->Line_40 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_RENAME_FROM)) [ CD ]
Line_22 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_DELETE)) -->Line_30 $$ processMissingFilePath(filePath)[ CD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_19 $$ if (!OSDetector.isApple() && Files.isDirectory(filePath)) [ FD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_7 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_CREATE)) [ FD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_42 $$ processMissingFilePath(filePath)[ FD ]
Line_3 $$ if (!OSDetector.isLinux() && filePath.startsWith(_baseFilePath.resolve(".data"))) -->Line_4 $$ return[ CD ]
Line_40 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_RENAME_FROM)) -->Line_44 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_RENAME_TO)) [ CD ]
Line_11 $$ if (!Files.isDirectory(filePath)) -->Line_12 $$ FileUtil.checkFilePath(filePath)[ CD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_44 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_RENAME_TO)) [ FD ]
Line_7 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_CREATE)) -->Line_14 $$ addCreatedFilePathName(filePath.toString())[ CD ]
Line_44 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_RENAME_TO)) -->Line_45 $$ if (_downloadedFilePathNames.remove(filePath.toString()) || isIgnoredFilePath(filePath)) [ CD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_45 $$ if (_downloadedFilePathNames.remove(filePath.toString()) || isIgnoredFilePath(filePath)) [ FD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_43 $$ fireWatchEventListener(SyncWatchEvent.EVENT_TYPE_RENAME_FROM, filePath)[ FD ]
Line_15 $$ if (_downloadedFilePathNames.remove(filePath.toString())) -->Line_16 $$ return[ CD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_27 $$ if (_deletedFilePathNames.remove(filePath.toString())) [ FD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_22 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_DELETE)) [ FD ]
Line_22 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_DELETE)) -->Line_27 $$ if (_deletedFilePathNames.remove(filePath.toString())) [ CD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_36 $$ if (_downloadedFilePathNames.remove(filePath.toString()) || (removeCreatedFilePathName(filePath.toString()) && !FileUtil.isValidChecksum(filePath)) || FileUtil.isIgnoredFileName(String.valueOf(filePath.getFileName())) || Files.notExists(filePath) || Files.isDirectory(filePath)) [ FD ]
Line_36 $$ if (_downloadedFilePathNames.remove(filePath.toString()) || (removeCreatedFilePathName(filePath.toString()) && !FileUtil.isValidChecksum(filePath)) || FileUtil.isIgnoredFileName(String.valueOf(filePath.getFileName())) || Files.notExists(filePath) || Files.isDirectory(filePath)) -->Line_37 $$ return[ CD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_40 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_RENAME_FROM)) [ FD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_48 $$ fireWatchEventListener(SyncWatchEvent.EVENT_TYPE_RENAME_TO, filePath)[ FD ]
Line_31 $$ if (Files.notExists(filePath.getParent())) -->Line_32 $$ return[ CD ]
Line_7 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_CREATE)) -->Line_19 $$ if (!OSDetector.isApple() && Files.isDirectory(filePath)) [ CD ]
Line_23 $$ if (Files.exists(filePath)) -->Line_24 $$ return[ CD ]
Line_22 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_DELETE)) -->Line_35 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_MODIFY)) [ CD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_41 $$ removeCreatedFilePathName(filePath.toString())[ FD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_3 $$ if (!OSDetector.isLinux() && filePath.startsWith(_baseFilePath.resolve(".data"))) [ FD ]
Line_45 $$ if (_downloadedFilePathNames.remove(filePath.toString()) || isIgnoredFilePath(filePath)) -->Line_46 $$ return[ CD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_8 $$ if (isIgnoredFilePath(filePath)) [ FD ]
Line_7 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_CREATE)) -->Line_18 $$ fireWatchEventListener(eventType, filePath)[ CD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_3 $$ if (!OSDetector.isLinux() && filePath.startsWith(_baseFilePath.resolve(".data"))) [ CD ]
Line_22 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_DELETE)) -->Line_23 $$ if (Files.exists(filePath)) [ CD ]
Line_22 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_DELETE)) -->Line_31 $$ if (Files.notExists(filePath.getParent())) [ CD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_31 $$ if (Files.notExists(filePath.getParent())) [ FD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_34 $$ fireWatchEventListener(SyncWatchEvent.EVENT_TYPE_DELETE, filePath)[ FD ]
Line_35 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_MODIFY)) -->Line_39 $$ fireWatchEventListener(SyncWatchEvent.EVENT_TYPE_MODIFY, filePath)[ CD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_6 $$ _watcherEventsLogger.trace("[ CD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_12 $$ FileUtil.checkFilePath(filePath)[ FD ]
Line_22 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_DELETE)) -->Line_34 $$ fireWatchEventListener(SyncWatchEvent.EVENT_TYPE_DELETE, filePath)[ CD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_39 $$ fireWatchEventListener(SyncWatchEvent.EVENT_TYPE_MODIFY, filePath)[ FD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_30 $$ processMissingFilePath(filePath)[ FD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_18 $$ fireWatchEventListener(eventType, filePath)[ FD ]
Line_7 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_CREATE)) -->Line_22 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_DELETE)) [ CD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_6 $$ _watcherEventsLogger.trace("[ FD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_15 $$ if (_downloadedFilePathNames.remove(filePath.toString())) [ FD ]
Line_44 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_RENAME_TO)) -->Line_48 $$ fireWatchEventListener(SyncWatchEvent.EVENT_TYPE_RENAME_TO, filePath)[ CD ]
Line_7 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_CREATE)) -->Line_15 $$ if (_downloadedFilePathNames.remove(filePath.toString())) [ CD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_11 $$ if (!Files.isDirectory(filePath)) [ FD ]
Line_27 $$ if (_deletedFilePathNames.remove(filePath.toString())) -->Line_28 $$ return[ CD ]
Line_40 $$ if (eventType.equals(SyncWatchEvent.EVENT_TYPE_RENAME_FROM)) -->Line_41 $$ removeCreatedFilePathName(filePath.toString())[ CD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_26 $$ removeCreatedFilePathName(filePath.toString())[ FD ]
Line_2 $$ protected void processWatchEvent(String eventType, Path filePath) throws IOException -->Line_20 $$ walkFileTree(filePath)[ FD ]
Line_8 $$ if (isIgnoredFilePath(filePath)) -->Line_9 $$ return[ CD ]
Line_19 $$ if (!OSDetector.isApple() && Files.isDirectory(filePath)) -->Line_20 $$ walkFileTree(filePath)[ CD ]
