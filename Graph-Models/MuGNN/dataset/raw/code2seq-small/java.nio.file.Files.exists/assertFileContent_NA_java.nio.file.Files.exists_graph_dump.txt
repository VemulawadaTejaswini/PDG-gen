Line_4 $$ Path file = dir.resolve(filename)-->Line_8 $$ assertFileExists(file)[ FD ]
Line_2 $$ public static void assertFileContent(Path dir, String filename, String expected) throws IOException -->Line_3 $$ Assert.assertThat(Files.exists(dir), is(true))[ CD ]
Line_5 $$ if (expected == null) -->Line_6 $$ Assert.assertThat("file [" + file + "] should not exist.", Files.exists(file), is(false))[ CD ]
Line_2 $$ public static void assertFileContent(Path dir, String filename, String expected) throws IOException -->Line_3 $$ Assert.assertThat(Files.exists(dir), is(true))[ FD ]
Line_2 $$ public static void assertFileContent(Path dir, String filename, String expected) throws IOException -->Line_4 $$ Path file = dir.resolve(filename)[ FD ]
Line_5 $$ if (expected == null) -->Line_8 $$ assertFileExists(file)[ CD ]
Line_9 $$ String fileContent = new String(Files.readAllBytes(file), java.nio.charset.StandardCharsets.UTF_8)-->Line_10 $$ Assert.assertThat(fileContent.trim(), equalTo(expected.trim()))[ FD ]
Line_4 $$ Path file = dir.resolve(filename)-->Line_6 $$ Assert.assertThat("file [" + file + "] should not exist.", Files.exists(file), is(false))[ FD ]
Line_4 $$ Path file = dir.resolve(filename)-->Line_9 $$ String fileContent = new String(Files.readAllBytes(file), java.nio.charset.StandardCharsets.UTF_8)[ FD ]
Line_2 $$ public static void assertFileContent(Path dir, String filename, String expected) throws IOException -->Line_4 $$ Path file = dir.resolve(filename)[ CD ]
Line_5 $$ if (expected == null) -->Line_9 $$ String fileContent = new String(Files.readAllBytes(file), java.nio.charset.StandardCharsets.UTF_8)[ CD ]
Line_5 $$ if (expected == null) -->Line_10 $$ Assert.assertThat(fileContent.trim(), equalTo(expected.trim()))[ CD ]
Line_2 $$ public static void assertFileContent(Path dir, String filename, String expected) throws IOException -->Line_5 $$ if (expected == null) [ FD ]
Line_2 $$ public static void assertFileContent(Path dir, String filename, String expected) throws IOException -->Line_10 $$ Assert.assertThat(fileContent.trim(), equalTo(expected.trim()))[ FD ]
Line_2 $$ public static void assertFileContent(Path dir, String filename, String expected) throws IOException -->Line_5 $$ if (expected == null) [ CD ]
