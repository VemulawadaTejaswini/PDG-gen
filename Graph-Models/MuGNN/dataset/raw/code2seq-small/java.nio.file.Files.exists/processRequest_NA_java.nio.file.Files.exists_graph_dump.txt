Line_3 $$ SyncFile syncFile = (SyncFile) getParameterValue("syncFile")-->Line_4 $$ Path filePath = Paths.get(syncFile.getFilePathName())[ FD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_21 $$ sb.append("/")[ FD ]
Line_2 $$ protected void processRequest() throws Exception -->Line_35 $$ Path tempFilePath = FileUtil.getTempFilePath(syncFile)[ CD ]
Line_3 $$ SyncFile syncFile = (SyncFile) getParameterValue("syncFile")-->Line_6 $$ syncFile.setState(SyncFile.STATE_IN_PROGRESS)[ FD ]
Line_23 $$ if ((boolean) getParameterValue("patch")) -->Line_26 $$ sb.append("&targetVersionId=")[ CD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_22 $$ sb.append(syncFile.getTypeUuid())[ FD ]
Line_23 $$ if ((boolean) getParameterValue("patch")) -->Line_31 $$ sb.append("&versionId=")[ CD ]
Line_9 $$ if ((boolean) getParameterValue("batch")) -->Line_11 $$ if (batchDownloadEvent.addEvent(this)) [ CD ]
Line_2 $$ protected void processRequest() throws Exception -->Line_9 $$ if ((boolean) getParameterValue("batch")) [ CD ]
Line_2 $$ protected void processRequest() throws Exception -->Line_16 $$ SyncAccount syncAccount = SyncAccountService.fetchSyncAccount(getSyncAccountId())[ CD ]
Line_2 $$ protected void processRequest() throws Exception -->Line_4 $$ Path filePath = Paths.get(syncFile.getFilePathName())[ CD ]
Line_2 $$ protected void processRequest() throws Exception -->Line_7 $$ syncFile.setUiEvent(SyncFile.UI_EVENT_DOWNLOADING)[ CD ]
Line_23 $$ if ((boolean) getParameterValue("patch")) -->Line_24 $$ sb.append("?patch=true&sourceVersionId=")[ CD ]
Line_3 $$ SyncFile syncFile = (SyncFile) getParameterValue("syncFile")-->Line_7 $$ syncFile.setUiEvent(SyncFile.UI_EVENT_DOWNLOADING)[ FD ]
Line_23 $$ if ((boolean) getParameterValue("patch")) -->Line_27 $$ sb.append(getParameterValue("targetVersionId"))[ CD ]
Line_36 $$ if (ReleaseInfo.isServerCompatible(getSyncAccountId(), 5) && Files.exists(tempFilePath)) -->Line_37 $$ httpGet.setHeader("Range", "bytes=" + Files.size(tempFilePath) + "-")[ CD ]
Line_34 $$ HttpGet httpGet = new HttpGet(sb.toString())-->Line_39 $$ executeAsynchronousGet(httpGet)[ FD ]
Line_10 $$ BatchDownloadEvent batchDownloadEvent = BatchEventManager.getBatchDownloadEvent(getSyncAccountId())-->Line_11 $$ if (batchDownloadEvent.addEvent(this)) [ FD ]
Line_2 $$ protected void processRequest() throws Exception -->Line_39 $$ executeAsynchronousGet(httpGet)[ CD ]
Line_2 $$ protected void processRequest() throws Exception -->Line_6 $$ syncFile.setState(SyncFile.STATE_IN_PROGRESS)[ CD ]
Line_11 $$ if (batchDownloadEvent.addEvent(this)) -->Line_12 $$ return[ CD ]
Line_2 $$ protected void processRequest() throws Exception -->Line_15 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_35 $$ Path tempFilePath = FileUtil.getTempFilePath(syncFile)-->Line_36 $$ if (ReleaseInfo.isServerCompatible(getSyncAccountId(), 5) && Files.exists(tempFilePath)) [ FD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_26 $$ sb.append("&targetVersionId=")[ FD ]
Line_2 $$ protected void processRequest() throws Exception -->Line_20 $$ sb.append(syncFile.getRepositoryId())[ CD ]
Line_3 $$ SyncFile syncFile = (SyncFile) getParameterValue("syncFile")-->Line_22 $$ sb.append(syncFile.getTypeUuid())[ FD ]
Line_3 $$ SyncFile syncFile = (SyncFile) getParameterValue("syncFile")-->Line_35 $$ Path tempFilePath = FileUtil.getTempFilePath(syncFile)[ FD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_19 $$ sb.append("/")[ FD ]
Line_23 $$ if ((boolean) getParameterValue("patch")) -->Line_25 $$ sb.append(getParameterValue("sourceVersionId"))[ CD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_30 $$ sb.append(syncFile.getVersion())[ FD ]
Line_2 $$ protected void processRequest() throws Exception -->Line_34 $$ HttpGet httpGet = new HttpGet(sb.toString())[ CD ]
Line_23 $$ if ((boolean) getParameterValue("patch")) -->Line_29 $$ sb.append("?version=")[ CD ]
Line_2 $$ protected void processRequest() throws Exception -->Line_19 $$ sb.append("/")[ CD ]
Line_3 $$ SyncFile syncFile = (SyncFile) getParameterValue("syncFile")-->Line_20 $$ sb.append(syncFile.getRepositoryId())[ FD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_24 $$ sb.append("?patch=true&sourceVersionId=")[ FD ]
Line_35 $$ Path tempFilePath = FileUtil.getTempFilePath(syncFile)-->Line_37 $$ httpGet.setHeader("Range", "bytes=" + Files.size(tempFilePath) + "-")[ FD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_31 $$ sb.append("&versionId=")[ FD ]
Line_2 $$ protected void processRequest() throws Exception -->Line_5 $$ syncFile.setPreviousModifiedTime(FileUtil.getLastModifiedTime(filePath))[ CD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_27 $$ sb.append(getParameterValue("targetVersionId"))[ FD ]
Line_2 $$ protected void processRequest() throws Exception -->Line_21 $$ sb.append("/")[ CD ]
Line_3 $$ SyncFile syncFile = (SyncFile) getParameterValue("syncFile")-->Line_30 $$ sb.append(syncFile.getVersion())[ FD ]
Line_2 $$ protected void processRequest() throws Exception -->Line_8 $$ SyncFileService.update(syncFile)[ CD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_20 $$ sb.append(syncFile.getRepositoryId())[ FD ]
Line_9 $$ if ((boolean) getParameterValue("batch")) -->Line_10 $$ BatchDownloadEvent batchDownloadEvent = BatchEventManager.getBatchDownloadEvent(getSyncAccountId())[ CD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_25 $$ sb.append(getParameterValue("sourceVersionId"))[ FD ]
Line_23 $$ if ((boolean) getParameterValue("patch")) -->Line_32 $$ sb.append(syncFile.getVersionId())[ CD ]
Line_16 $$ SyncAccount syncAccount = SyncAccountService.fetchSyncAccount(getSyncAccountId())-->Line_17 $$ sb.append(syncAccount.getUrl())[ FD ]
Line_2 $$ protected void processRequest() throws Exception -->Line_18 $$ sb.append(_URL_PATH)[ CD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_29 $$ sb.append("?version=")[ FD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_32 $$ sb.append(syncFile.getVersionId())[ FD ]
Line_3 $$ SyncFile syncFile = (SyncFile) getParameterValue("syncFile")-->Line_5 $$ syncFile.setPreviousModifiedTime(FileUtil.getLastModifiedTime(filePath))[ FD ]
Line_4 $$ Path filePath = Paths.get(syncFile.getFilePathName())-->Line_5 $$ syncFile.setPreviousModifiedTime(FileUtil.getLastModifiedTime(filePath))[ FD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_34 $$ HttpGet httpGet = new HttpGet(sb.toString())[ FD ]
Line_2 $$ protected void processRequest() throws Exception -->Line_3 $$ SyncFile syncFile = (SyncFile) getParameterValue("syncFile")[ CD ]
Line_34 $$ HttpGet httpGet = new HttpGet(sb.toString())-->Line_37 $$ httpGet.setHeader("Range", "bytes=" + Files.size(tempFilePath) + "-")[ FD ]
Line_2 $$ protected void processRequest() throws Exception -->Line_17 $$ sb.append(syncAccount.getUrl())[ CD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_17 $$ sb.append(syncAccount.getUrl())[ FD ]
Line_3 $$ SyncFile syncFile = (SyncFile) getParameterValue("syncFile")-->Line_32 $$ sb.append(syncFile.getVersionId())[ FD ]
Line_2 $$ protected void processRequest() throws Exception -->Line_22 $$ sb.append(syncFile.getTypeUuid())[ CD ]
Line_23 $$ if ((boolean) getParameterValue("patch")) -->Line_30 $$ sb.append(syncFile.getVersion())[ CD ]
Line_2 $$ protected void processRequest() throws Exception -->Line_23 $$ if ((boolean) getParameterValue("patch")) [ CD ]
Line_3 $$ SyncFile syncFile = (SyncFile) getParameterValue("syncFile")-->Line_8 $$ SyncFileService.update(syncFile)[ FD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_18 $$ sb.append(_URL_PATH)[ FD ]
Line_2 $$ protected void processRequest() throws Exception -->Line_36 $$ if (ReleaseInfo.isServerCompatible(getSyncAccountId(), 5) && Files.exists(tempFilePath)) [ CD ]
