Line_30 $$ String createMappingTableSQL = _getCreateMappingTableSQL(entityMapping)-->Line_32 $$ _createSQLMappingTables(sqlFile, createMappingTableSQL, entityMapping, true)[ FD ]
Line_2 $$ private void _createSQLTables() throws Exception -->Line_7 $$ File sqlFile = new File(_sqlDirName + "/" + _sqlFileName)[ CD ]
Line_11 $$ for (int i = 0; i < _ejbList.size(); i++) -->Line_13 $$ if (!_isTargetEntity(entity)) [ CD ]
Line_3 $$ File sqlDir = new File(_sqlDirName)-->Line_4 $$ if (!sqlDir.exists()) [ FD ]
Line_22 $$ Path updateSQLFilePath = _getUpdateSQLFilePath()-->Line_23 $$ if ((updateSQLFilePath != null) && Files.exists(updateSQLFilePath)) [ FD ]
Line_11 $$ for (int i = 0; i < _ejbList.size(); i++) -->Line_16 $$ if (!entity.isDefaultDataSource()) [ CD ]
Line_4 $$ if (!sqlDir.exists()) -->Line_5 $$ _mkdir(sqlDir)[ CD ]
Line_19 $$ String createTableSQL = _getCreateTableSQL(entity)-->Line_21 $$ _createSQLTables(sqlFile, createTableSQL, entity, true)[ FD ]
Line_2 $$ private void _createSQLTables() throws Exception -->Line_11 $$ for (int i = 0; i < _ejbList.size(); i++) [ CD ]
Line_19 $$ String createTableSQL = _getCreateTableSQL(entity)-->Line_24 $$ _createSQLTables(updateSQLFilePath.toFile(), createTableSQL, entity, false)[ FD ]
Line_11 $$ for (int i = 0; i < _ejbList.size(); i++) -->Line_19 $$ String createTableSQL = _getCreateTableSQL(entity)[ CD ]
Line_30 $$ String createMappingTableSQL = _getCreateMappingTableSQL(entityMapping)-->Line_31 $$ if (Validator.isNotNull(createMappingTableSQL)) [ FD ]
Line_28 $$ for (Map.Entry<String, EntityMapping> entry : _entityMappings.entrySet()) -->Line_29 $$ EntityMapping entityMapping = entry.getValue()[ FD ]
Line_2 $$ private void _createSQLTables() throws Exception -->Line_35 $$ String content = _read(sqlFile)[ CD ]
Line_8 $$ if (!sqlFile.exists()) -->Line_9 $$ _touch(sqlFile)[ CD ]
Line_12 $$ Entity entity = _ejbList.get(i)-->Line_24 $$ _createSQLTables(updateSQLFilePath.toFile(), createTableSQL, entity, false)[ FD ]
Line_7 $$ File sqlFile = new File(_sqlDirName + "/" + _sqlFileName)-->Line_36 $$ ToolsUtil.writeFileRaw(sqlFile, content.trim(), _modifiedFileNames)[ FD ]
Line_2 $$ private void _createSQLTables() throws Exception -->Line_36 $$ ToolsUtil.writeFileRaw(sqlFile, content.trim(), _modifiedFileNames)[ CD ]
Line_12 $$ Entity entity = _ejbList.get(i)-->Line_13 $$ if (!_isTargetEntity(entity)) [ FD ]
Line_29 $$ EntityMapping entityMapping = entry.getValue()-->Line_30 $$ String createMappingTableSQL = _getCreateMappingTableSQL(entityMapping)[ FD ]
Line_7 $$ File sqlFile = new File(_sqlDirName + "/" + _sqlFileName)-->Line_35 $$ String content = _read(sqlFile)[ FD ]
Line_7 $$ File sqlFile = new File(_sqlDirName + "/" + _sqlFileName)-->Line_32 $$ _createSQLMappingTables(sqlFile, createMappingTableSQL, entityMapping, true)[ FD ]
Line_12 $$ Entity entity = _ejbList.get(i)-->Line_16 $$ if (!entity.isDefaultDataSource()) [ FD ]
Line_7 $$ File sqlFile = new File(_sqlDirName + "/" + _sqlFileName)-->Line_8 $$ if (!sqlFile.exists()) [ FD ]
Line_29 $$ EntityMapping entityMapping = entry.getValue()-->Line_32 $$ _createSQLMappingTables(sqlFile, createMappingTableSQL, entityMapping, true)[ FD ]
Line_11 $$ for (int i = 0; i < _ejbList.size(); i++) -->Line_12 $$ Entity entity = _ejbList.get(i)[ FD ]
Line_2 $$ private void _createSQLTables() throws Exception -->Line_4 $$ if (!sqlDir.exists()) [ CD ]
Line_2 $$ private void _createSQLTables() throws Exception -->Line_8 $$ if (!sqlFile.exists()) [ CD ]
Line_20 $$ if (Validator.isNotNull(createTableSQL)) -->Line_21 $$ _createSQLTables(sqlFile, createTableSQL, entity, true)[ CD ]
Line_7 $$ File sqlFile = new File(_sqlDirName + "/" + _sqlFileName)-->Line_9 $$ _touch(sqlFile)[ FD ]
Line_12 $$ Entity entity = _ejbList.get(i)-->Line_21 $$ _createSQLTables(sqlFile, createTableSQL, entity, true)[ FD ]
Line_11 $$ for (int i = 0; i < _ejbList.size(); i++) -->Line_12 $$ Entity entity = _ejbList.get(i)[ CD ]
Line_35 $$ String content = _read(sqlFile)-->Line_36 $$ ToolsUtil.writeFileRaw(sqlFile, content.trim(), _modifiedFileNames)[ FD ]
Line_31 $$ if (Validator.isNotNull(createMappingTableSQL)) -->Line_32 $$ _createSQLMappingTables(sqlFile, createMappingTableSQL, entityMapping, true)[ CD ]
Line_12 $$ Entity entity = _ejbList.get(i)-->Line_19 $$ String createTableSQL = _getCreateTableSQL(entity)[ FD ]
Line_3 $$ File sqlDir = new File(_sqlDirName)-->Line_5 $$ _mkdir(sqlDir)[ FD ]
Line_23 $$ if ((updateSQLFilePath != null) && Files.exists(updateSQLFilePath)) -->Line_24 $$ _createSQLTables(updateSQLFilePath.toFile(), createTableSQL, entity, false)[ CD ]
Line_20 $$ if (Validator.isNotNull(createTableSQL)) -->Line_22 $$ Path updateSQLFilePath = _getUpdateSQLFilePath()[ CD ]
Line_19 $$ String createTableSQL = _getCreateTableSQL(entity)-->Line_20 $$ if (Validator.isNotNull(createTableSQL)) [ FD ]
Line_20 $$ if (Validator.isNotNull(createTableSQL)) -->Line_23 $$ if ((updateSQLFilePath != null) && Files.exists(updateSQLFilePath)) [ CD ]
Line_2 $$ private void _createSQLTables() throws Exception -->Line_3 $$ File sqlDir = new File(_sqlDirName)[ CD ]
Line_11 $$ for (int i = 0; i < _ejbList.size(); i++) -->Line_20 $$ if (Validator.isNotNull(createTableSQL)) [ CD ]
Line_7 $$ File sqlFile = new File(_sqlDirName + "/" + _sqlFileName)-->Line_21 $$ _createSQLTables(sqlFile, createTableSQL, entity, true)[ FD ]
Line_22 $$ Path updateSQLFilePath = _getUpdateSQLFilePath()-->Line_24 $$ _createSQLTables(updateSQLFilePath.toFile(), createTableSQL, entity, false)[ FD ]
