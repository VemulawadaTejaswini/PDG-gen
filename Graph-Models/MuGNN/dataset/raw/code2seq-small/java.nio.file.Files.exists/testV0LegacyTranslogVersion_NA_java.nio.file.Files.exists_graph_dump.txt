Line_8 $$ final Translog.Operation operation = snapshot.next()-->Line_9 $$ assertThat("operation is the correct type correctly", operation.opType() == Translog.Operation.Type.INDEX, equalTo(true))[ FD ]
Line_10 $$ Translog.Index op = (Translog.Index) operation-->Line_18 $$ assertThat(op.ttl(), equalTo(-1L))[ FD ]
Line_10 $$ Translog.Index op = (Translog.Index) operation-->Line_19 $$ assertThat(op.versionType(), equalTo(VersionType.INTERNAL))[ FD ]
Line_3 $$ Path translogFile = getDataPath("/org/elasticsearch/index/translog/translog-v0.binary")-->Line_4 $$ assertThat("test file should exist", Files.exists(translogFile), equalTo(true))[ FD ]
Line_2 $$ public void testV0LegacyTranslogVersion() throws Exception -->Line_3 $$ Path translogFile = getDataPath("/org/elasticsearch/index/translog/translog-v0.binary")[ CD ]
Line_10 $$ Translog.Index op = (Translog.Index) operation-->Line_14 $$ assertThat(op.routing(), equalTo(null))[ FD ]
Line_10 $$ Translog.Index op = (Translog.Index) operation-->Line_15 $$ assertThat(op.parent(), equalTo(null))[ FD ]
Line_10 $$ Translog.Index op = (Translog.Index) operation-->Line_16 $$ assertThat(op.version(), equalTo(1L))[ FD ]
Line_7 $$ try (final Translog.Snapshot snapshot = reader.newSnapshot()) -->Line_20 $$ assertNull(snapshot.next())[ FD ]
Line_5 $$ try (ImmutableTranslogReader reader = openReader(translogFile, 0)) -->Line_7 $$ try (final Translog.Snapshot snapshot = reader.newSnapshot()) [ FD ]
Line_3 $$ Path translogFile = getDataPath("/org/elasticsearch/index/translog/translog-v0.binary")-->Line_5 $$ try (ImmutableTranslogReader reader = openReader(translogFile, 0)) [ FD ]
Line_10 $$ Translog.Index op = (Translog.Index) operation-->Line_11 $$ assertThat(op.id(), equalTo("1"))[ FD ]
Line_10 $$ Translog.Index op = (Translog.Index) operation-->Line_12 $$ assertThat(op.type(), equalTo("doc"))[ FD ]
Line_10 $$ Translog.Index op = (Translog.Index) operation-->Line_13 $$ assertThat(op.source().toUtf8(), equalTo("[ FD ]
Line_2 $$ public void testV0LegacyTranslogVersion() throws Exception -->Line_4 $$ assertThat("test file should exist", Files.exists(translogFile), equalTo(true))[ CD ]
Line_10 $$ Translog.Index op = (Translog.Index) operation-->Line_17 $$ assertThat(op.timestamp(), equalTo(1407312091791L))[ FD ]
Line_7 $$ try (final Translog.Snapshot snapshot = reader.newSnapshot()) -->Line_8 $$ final Translog.Operation operation = snapshot.next()[ FD ]
