Line_6 $$ Path configurationFilePath = Paths.get(PropsValues.SYNC_CONFIGURATION_DIRECTORY)-->Line_8 $$ Path loggerConfigurationFilePath = configurationFilePath.resolve(PropsValues.SYNC_LOGGER_CONFIGURATION_FILE)[ FD ]
Line_23 $$ for (UpgradeProcess upgradeProcess : upgradeProcesses) -->Line_24 $$ if (buildNumber < upgradeProcess.getThreshold()) [ FD ]
Line_4 $$ if (buildNumber == 0) -->Line_5 $$ createTables()[ CD ]
Line_4 $$ if (buildNumber == 0) -->Line_12 $$ SyncPropService.updateSyncProp("buildNumber", ReleaseInfo.getBuildNumber())[ CD ]
Line_3 $$ int buildNumber = SyncPropService.getInteger("buildNumber")-->Line_14 $$ if (buildNumber >= ReleaseInfo.getBuildNumber()) [ FD ]
Line_2 $$ public static void upgrade() throws Exception -->Line_18 $$ upgradeProcesses.add(new UpgradeProcess_3_0_4())[ CD ]
Line_2 $$ public static void upgrade() throws Exception -->Line_3 $$ int buildNumber = SyncPropService.getInteger("buildNumber")[ CD ]
Line_8 $$ Path loggerConfigurationFilePath = configurationFilePath.resolve(PropsValues.SYNC_LOGGER_CONFIGURATION_FILE)-->Line_9 $$ if (!Files.exists(loggerConfigurationFilePath)) [ FD ]
Line_2 $$ public static void upgrade() throws Exception -->Line_21 $$ upgradeProcesses.add(new UpgradeProcess_3_0_9())[ CD ]
Line_4 $$ if (buildNumber == 0) -->Line_14 $$ if (buildNumber >= ReleaseInfo.getBuildNumber()) [ CD ]
Line_2 $$ public static void upgrade() throws Exception -->Line_20 $$ upgradeProcesses.add(new UpgradeProcess_3_0_8())[ CD ]
Line_17 $$ List<UpgradeProcess> upgradeProcesses = new ArrayList()-->Line_18 $$ upgradeProcesses.add(new UpgradeProcess_3_0_4())[ FD ]
Line_3 $$ int buildNumber = SyncPropService.getInteger("buildNumber")-->Line_24 $$ if (buildNumber < upgradeProcess.getThreshold()) [ FD ]
Line_24 $$ if (buildNumber < upgradeProcess.getThreshold()) -->Line_25 $$ _logger.info("Upgrading to [ CD ]
Line_4 $$ if (buildNumber == 0) -->Line_6 $$ Path configurationFilePath = Paths.get(PropsValues.SYNC_CONFIGURATION_DIRECTORY)[ CD ]
Line_2 $$ public static void upgrade() throws Exception -->Line_29 $$ SyncPropService.updateSyncProp("buildNumber", ReleaseInfo.getBuildNumber())[ CD ]
Line_14 $$ if (buildNumber >= ReleaseInfo.getBuildNumber()) -->Line_15 $$ return[ CD ]
Line_24 $$ if (buildNumber < upgradeProcess.getThreshold()) -->Line_26 $$ upgradeProcess.upgrade()[ CD ]
Line_2 $$ public static void upgrade() throws Exception -->Line_17 $$ List<UpgradeProcess> upgradeProcesses = new ArrayList()[ CD ]
Line_2 $$ public static void upgrade() throws Exception -->Line_19 $$ upgradeProcesses.add(new UpgradeProcess_3_0_5())[ CD ]
Line_2 $$ public static void upgrade() throws Exception -->Line_4 $$ if (buildNumber == 0) [ CD ]
Line_9 $$ if (!Files.exists(loggerConfigurationFilePath)) -->Line_10 $$ copyLoggerConfiguration()[ CD ]
Line_23 $$ for (UpgradeProcess upgradeProcess : upgradeProcesses) -->Line_25 $$ _logger.info("Upgrading to [ FD ]
Line_23 $$ for (UpgradeProcess upgradeProcess : upgradeProcesses) -->Line_26 $$ upgradeProcess.upgrade()[ FD ]
Line_6 $$ Path configurationFilePath = Paths.get(PropsValues.SYNC_CONFIGURATION_DIRECTORY)-->Line_7 $$ Files.createDirectories(configurationFilePath.resolve("files"))[ FD ]
Line_17 $$ List<UpgradeProcess> upgradeProcesses = new ArrayList()-->Line_19 $$ upgradeProcesses.add(new UpgradeProcess_3_0_5())[ FD ]
Line_17 $$ List<UpgradeProcess> upgradeProcesses = new ArrayList()-->Line_20 $$ upgradeProcesses.add(new UpgradeProcess_3_0_8())[ FD ]
Line_2 $$ public static void upgrade() throws Exception -->Line_22 $$ upgradeProcesses.add(new UpgradeProcess_3_0_10())[ CD ]
Line_3 $$ int buildNumber = SyncPropService.getInteger("buildNumber")-->Line_4 $$ if (buildNumber == 0) [ FD ]
Line_4 $$ if (buildNumber == 0) -->Line_7 $$ Files.createDirectories(configurationFilePath.resolve("files"))[ CD ]
Line_4 $$ if (buildNumber == 0) -->Line_13 $$ return[ CD ]
Line_17 $$ List<UpgradeProcess> upgradeProcesses = new ArrayList()-->Line_22 $$ upgradeProcesses.add(new UpgradeProcess_3_0_10())[ FD ]
Line_4 $$ if (buildNumber == 0) -->Line_9 $$ if (!Files.exists(loggerConfigurationFilePath)) [ CD ]
Line_4 $$ if (buildNumber == 0) -->Line_8 $$ Path loggerConfigurationFilePath = configurationFilePath.resolve(PropsValues.SYNC_LOGGER_CONFIGURATION_FILE)[ CD ]
Line_17 $$ List<UpgradeProcess> upgradeProcesses = new ArrayList()-->Line_21 $$ upgradeProcesses.add(new UpgradeProcess_3_0_9())[ FD ]
