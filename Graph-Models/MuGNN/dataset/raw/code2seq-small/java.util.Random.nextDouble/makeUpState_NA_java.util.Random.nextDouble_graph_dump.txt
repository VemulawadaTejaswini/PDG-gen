Line_3 $$ if (numAttempts == null) -->Line_4 $$ return State.FAILED[ CD ]
Line_6 $$ if (taskAttemptNumber >= numAttempts.length - 1) -->Line_14 $$ return (random.nextDouble() < pSucceed / (pSucceed + pFail)) ? State.SUCCEEDED : State.FAILED[ CD ]
Line_11 $$ for (int i = taskAttemptNumber + 1; i < numAttempts.length; i++) -->Line_12 $$ pFail += numAttempts[i][ CD ]
Line_2 $$ private State makeUpState(int taskAttemptNumber, double[] numAttempts) -->Line_6 $$ if (taskAttemptNumber >= numAttempts.length - 1) [ CD ]
Line_6 $$ if (taskAttemptNumber >= numAttempts.length - 1) -->Line_9 $$ double pSucceed = numAttempts[taskAttemptNumber][ CD ]
Line_2 $$ private State makeUpState(int taskAttemptNumber, double[] numAttempts) -->Line_3 $$ if (numAttempts == null) [ FD ]
Line_6 $$ if (taskAttemptNumber >= numAttempts.length - 1) -->Line_10 $$ double pFail = 0[ CD ]
Line_6 $$ if (taskAttemptNumber >= numAttempts.length - 1) -->Line_11 $$ for (int i = taskAttemptNumber + 1; i < numAttempts.length; i++) [ CD ]
Line_2 $$ private State makeUpState(int taskAttemptNumber, double[] numAttempts) -->Line_3 $$ if (numAttempts == null) [ CD ]
Line_2 $$ private State makeUpState(int taskAttemptNumber, double[] numAttempts) -->Line_6 $$ if (taskAttemptNumber >= numAttempts.length - 1) [ FD ]
Line_6 $$ if (taskAttemptNumber >= numAttempts.length - 1) -->Line_7 $$ return State.SUCCEEDED[ CD ]
Line_10 $$ double pFail = 0-->Line_12 $$ pFail += numAttempts[i][ FD ]
