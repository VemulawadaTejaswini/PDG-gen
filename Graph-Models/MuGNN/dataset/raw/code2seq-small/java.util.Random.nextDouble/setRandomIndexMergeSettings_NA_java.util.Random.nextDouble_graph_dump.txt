Line_2 $$ private static Settings.Builder setRandomIndexMergeSettings(Random random, Settings.Builder builder) -->Line_11 $$ builder.put(MergeSchedulerConfig.MAX_THREAD_COUNT, maxThreadCount)[ FD ]
Line_9 $$ final int maxMergeCount = RandomInts.randomIntBetween(random, maxThreadCount, maxThreadCount + 4)-->Line_10 $$ builder.put(MergeSchedulerConfig.MAX_MERGE_COUNT, maxMergeCount)[ FD ]
Line_2 $$ private static Settings.Builder setRandomIndexMergeSettings(Random random, Settings.Builder builder) -->Line_14 $$ return builder[ CD ]
Line_2 $$ private static Settings.Builder setRandomIndexMergeSettings(Random random, Settings.Builder builder) -->Line_3 $$ if (random.nextBoolean()) [ CD ]
Line_2 $$ private static Settings.Builder setRandomIndexMergeSettings(Random random, Settings.Builder builder) -->Line_8 $$ final int maxThreadCount = RandomInts.randomIntBetween(random, 1, 4)[ FD ]
Line_3 $$ if (random.nextBoolean()) -->Line_4 $$ builder.put(MergePolicyConfig.INDEX_COMPOUND_FORMAT, random.nextBoolean() ? random.nextDouble() : random.nextBoolean())[ CD ]
Line_2 $$ private static Settings.Builder setRandomIndexMergeSettings(Random random, Settings.Builder builder) -->Line_6 $$ switch(random.nextInt(4)) [ FD ]
Line_2 $$ private static Settings.Builder setRandomIndexMergeSettings(Random random, Settings.Builder builder) -->Line_4 $$ builder.put(MergePolicyConfig.INDEX_COMPOUND_FORMAT, random.nextBoolean() ? random.nextDouble() : random.nextBoolean())[ FD ]
Line_2 $$ private static Settings.Builder setRandomIndexMergeSettings(Random random, Settings.Builder builder) -->Line_3 $$ if (random.nextBoolean()) [ FD ]
Line_2 $$ private static Settings.Builder setRandomIndexMergeSettings(Random random, Settings.Builder builder) -->Line_9 $$ final int maxMergeCount = RandomInts.randomIntBetween(random, maxThreadCount, maxThreadCount + 4)[ FD ]
Line_8 $$ final int maxThreadCount = RandomInts.randomIntBetween(random, 1, 4)-->Line_9 $$ final int maxMergeCount = RandomInts.randomIntBetween(random, maxThreadCount, maxThreadCount + 4)[ FD ]
Line_2 $$ private static Settings.Builder setRandomIndexMergeSettings(Random random, Settings.Builder builder) -->Line_10 $$ builder.put(MergeSchedulerConfig.MAX_MERGE_COUNT, maxMergeCount)[ FD ]
Line_8 $$ final int maxThreadCount = RandomInts.randomIntBetween(random, 1, 4)-->Line_11 $$ builder.put(MergeSchedulerConfig.MAX_THREAD_COUNT, maxThreadCount)[ FD ]
