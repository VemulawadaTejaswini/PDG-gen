Line_2 $$ static double[] getDistr(Random r, double mindist, int size) -->Line_4 $$ final double min = mindist / size[ CD ]
Line_14 $$ for (int i = 1; i < size; ++i) -->Line_15 $$ ret[i] = tmp[i] - tmp[i - 1] + min[ CD ]
Line_2 $$ static double[] getDistr(Random r, double mindist, int size) -->Line_14 $$ for (int i = 1; i < size; ++i) [ FD ]
Line_2 $$ static double[] getDistr(Random r, double mindist, int size) -->Line_14 $$ for (int i = 1; i < size; ++i) [ CD ]
Line_2 $$ static double[] getDistr(Random r, double mindist, int size) -->Line_12 $$ final double[] ret = new double[size][ CD ]
Line_2 $$ static double[] getDistr(Random r, double mindist, int size) -->Line_5 $$ final double rem = 1.0 - min * size[ CD ]
Line_5 $$ final double rem = 1.0 - min * size-->Line_8 $$ tmp[i] = r.nextDouble() * rem[ FD ]
Line_4 $$ final double min = mindist / size-->Line_13 $$ ret[0] = tmp[0] + min[ FD ]
Line_7 $$ for (int i = 0; i < tmp.length - 1; ++i) -->Line_14 $$ for (int i = 1; i < size; ++i) [ FD ]
Line_2 $$ static double[] getDistr(Random r, double mindist, int size) -->Line_10 $$ tmp[tmp.length - 1] = rem[ CD ]
Line_2 $$ static double[] getDistr(Random r, double mindist, int size) -->Line_11 $$ Arrays.sort(tmp)[ CD ]
Line_4 $$ final double min = mindist / size-->Line_15 $$ ret[i] = tmp[i] - tmp[i - 1] + min[ FD ]
Line_2 $$ static double[] getDistr(Random r, double mindist, int size) -->Line_8 $$ tmp[i] = r.nextDouble() * rem[ FD ]
Line_2 $$ static double[] getDistr(Random r, double mindist, int size) -->Line_13 $$ ret[0] = tmp[0] + min[ CD ]
Line_2 $$ static double[] getDistr(Random r, double mindist, int size) -->Line_7 $$ for (int i = 0; i < tmp.length - 1; ++i) [ CD ]
Line_7 $$ for (int i = 0; i < tmp.length - 1; ++i) -->Line_8 $$ tmp[i] = r.nextDouble() * rem[ CD ]
Line_5 $$ final double rem = 1.0 - min * size-->Line_10 $$ tmp[tmp.length - 1] = rem[ FD ]
Line_2 $$ static double[] getDistr(Random r, double mindist, int size) -->Line_17 $$ return ret[ CD ]
Line_2 $$ static double[] getDistr(Random r, double mindist, int size) -->Line_6 $$ final double[] tmp = new double[size][ CD ]
Line_6 $$ final double[] tmp = new double[size]-->Line_11 $$ Arrays.sort(tmp)[ FD ]
