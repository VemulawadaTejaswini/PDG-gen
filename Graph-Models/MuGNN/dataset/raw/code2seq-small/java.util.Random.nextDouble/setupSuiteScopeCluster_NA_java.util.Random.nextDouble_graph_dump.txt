Line_15 $$ for (int precision = GeoHashUtils.PRECISION - 1; precision > 0; precision--) -->Line_16 $$ String hash = GeoHashUtils.stringEncode(lng, lat, precision)[ FD ]
Line_16 $$ String hash = GeoHashUtils.stringEncode(lng, lat, precision)-->Line_17 $$ if ((smallestGeoHash == null) || (hash.length() < smallestGeoHash.length())) [ FD ]
Line_4 $$ Settings settings = Settings.settingsBuilder().put(IndexMetaData.SETTING_VERSION_CREATED, version).build()-->Line_24 $$ assertAcked(prepareCreate("multi_valued_idx").setSettings(settings).addMapping("type", "location", "type=geo_point", "city", "type=string,index=not_analyzed"))[ FD ]
Line_11 $$ double lng = (360d * random.nextDouble()) - 180d-->Line_36 $$ final String geoHash = GeoHashUtils.stringEncode(lng, lat, precision)[ FD ]
Line_27 $$ for (int i = 0; i < numDocs; i++) -->Line_30 $$ Set<String> geoHashes = new HashSet()[ CD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_9 $$ for (int i = 0; i < numDocs; i++) [ CD ]
Line_10 $$ double lat = (180d * random.nextDouble()) - 90d-->Line_12 $$ String randomGeoHash = GeoHashUtils.stringEncode(lng, lat, GeoHashUtils.PRECISION)[ FD ]
Line_27 $$ for (int i = 0; i < numDocs; i++) -->Line_40 $$ cities.add(indexCity("multi_valued_idx", Integer.toString(i), points))[ CD ]
Line_12 $$ String randomGeoHash = GeoHashUtils.stringEncode(lng, lat, GeoHashUtils.PRECISION)-->Line_13 $$ cities.add(indexCity("idx", randomGeoHash, lat + ", " + lng))[ FD ]
Line_11 $$ double lng = (360d * random.nextDouble()) - 180d-->Line_16 $$ String hash = GeoHashUtils.stringEncode(lng, lat, precision)[ FD ]
Line_16 $$ String hash = GeoHashUtils.stringEncode(lng, lat, precision)-->Line_42 $$ multiValuedExpectedDocCountsForGeoHash.put(hash, multiValuedExpectedDocCountsForGeoHash.getOrDefault(hash, 0) + 1)[ FD ]
Line_9 $$ for (int i = 0; i < numDocs; i++) -->Line_13 $$ cities.add(indexCity("idx", randomGeoHash, lat + ", " + lng))[ CD ]
Line_15 $$ for (int precision = GeoHashUtils.PRECISION - 1; precision > 0; precision--) -->Line_17 $$ if ((smallestGeoHash == null) || (hash.length() < smallestGeoHash.length())) [ CD ]
Line_10 $$ double lat = (180d * random.nextDouble()) - 90d-->Line_16 $$ String hash = GeoHashUtils.stringEncode(lng, lat, precision)[ FD ]
Line_7 $$ Random random = getRandom()-->Line_28 $$ final int numPoints = random.nextInt(4)[ FD ]
Line_9 $$ for (int i = 0; i < numDocs; i++) -->Line_11 $$ double lng = (360d * random.nextDouble()) - 180d[ CD ]
Line_28 $$ final int numPoints = random.nextInt(4)-->Line_31 $$ for (int j = 0; j < numPoints; ++j) [ FD ]
Line_12 $$ String randomGeoHash = GeoHashUtils.stringEncode(lng, lat, GeoHashUtils.PRECISION)-->Line_14 $$ expectedDocCountsForGeoHash.put(randomGeoHash, expectedDocCountsForGeoHash.getOrDefault(randomGeoHash, 0) + 1)[ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_7 $$ Random random = getRandom()[ CD ]
Line_15 $$ for (int precision = GeoHashUtils.PRECISION - 1; precision > 0; precision--) -->Line_36 $$ final String geoHash = GeoHashUtils.stringEncode(lng, lat, precision)[ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_27 $$ for (int i = 0; i < numDocs; i++) [ CD ]
Line_9 $$ for (int i = 0; i < numDocs; i++) -->Line_15 $$ for (int precision = GeoHashUtils.PRECISION - 1; precision > 0; precision--) [ CD ]
Line_27 $$ for (int i = 0; i < numDocs; i++) -->Line_29 $$ List<String> points = new ArrayList()[ CD ]
Line_15 $$ for (int precision = GeoHashUtils.PRECISION - 1; precision > 0; precision--) -->Line_35 $$ for (int precision = GeoHashUtils.PRECISION; precision > 0; precision--) [ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_3 $$ createIndex("idx_unmapped")[ CD ]
Line_9 $$ for (int i = 0; i < numDocs; i++) -->Line_10 $$ double lat = (180d * random.nextDouble()) - 90d[ CD ]
Line_30 $$ Set<String> geoHashes = new HashSet()-->Line_37 $$ geoHashes.add(geoHash)[ FD ]
Line_29 $$ List<String> points = new ArrayList()-->Line_40 $$ cities.add(indexCity("multi_valued_idx", Integer.toString(i), points))[ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_45 $$ indexRandom(true, cities)[ CD ]
Line_25 $$ cities = new ArrayList()-->Line_40 $$ cities.add(indexCity("multi_valued_idx", Integer.toString(i), points))[ FD ]
Line_33 $$ double lng = (360d * random.nextDouble()) - 180d-->Line_36 $$ final String geoHash = GeoHashUtils.stringEncode(lng, lat, precision)[ FD ]
Line_4 $$ Settings settings = Settings.settingsBuilder().put(IndexMetaData.SETTING_VERSION_CREATED, version).build()-->Line_5 $$ assertAcked(prepareCreate("idx").setSettings(settings).addMapping("type", "location", "type=geo_point", "city", "type=string,index=not_analyzed"))[ FD ]
Line_9 $$ for (int i = 0; i < numDocs; i++) -->Line_12 $$ String randomGeoHash = GeoHashUtils.stringEncode(lng, lat, GeoHashUtils.PRECISION)[ CD ]
Line_6 $$ List<IndexRequestBuilder> cities = new ArrayList()-->Line_13 $$ cities.add(indexCity("idx", randomGeoHash, lat + ", " + lng))[ FD ]
Line_9 $$ for (int i = 0; i < numDocs; i++) -->Line_27 $$ for (int i = 0; i < numDocs; i++) [ FD ]
Line_15 $$ for (int precision = GeoHashUtils.PRECISION - 1; precision > 0; precision--) -->Line_20 $$ expectedDocCountsForGeoHash.put(hash, expectedDocCountsForGeoHash.getOrDefault(hash, 0) + 1)[ CD ]
Line_27 $$ for (int i = 0; i < numDocs; i++) -->Line_40 $$ cities.add(indexCity("multi_valued_idx", Integer.toString(i), points))[ FD ]
Line_31 $$ for (int j = 0; j < numPoints; ++j) -->Line_34 $$ points.add(lat + "," + lng)[ CD ]
Line_6 $$ List<IndexRequestBuilder> cities = new ArrayList()-->Line_25 $$ cities = new ArrayList()[ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_24 $$ assertAcked(prepareCreate("multi_valued_idx").setSettings(settings).addMapping("type", "location", "type=geo_point", "city", "type=string,index=not_analyzed"))[ CD ]
Line_35 $$ for (int precision = GeoHashUtils.PRECISION; precision > 0; precision--) -->Line_36 $$ final String geoHash = GeoHashUtils.stringEncode(lng, lat, precision)[ CD ]
Line_31 $$ for (int j = 0; j < numPoints; ++j) -->Line_32 $$ double lat = (180d * random.nextDouble()) - 90d[ CD ]
Line_36 $$ final String geoHash = GeoHashUtils.stringEncode(lng, lat, precision)-->Line_37 $$ geoHashes.add(geoHash)[ FD ]
Line_15 $$ for (int precision = GeoHashUtils.PRECISION - 1; precision > 0; precision--) -->Line_16 $$ String hash = GeoHashUtils.stringEncode(lng, lat, precision)[ CD ]
Line_25 $$ cities = new ArrayList()-->Line_45 $$ indexRandom(true, cities)[ FD ]
Line_35 $$ for (int precision = GeoHashUtils.PRECISION; precision > 0; precision--) -->Line_36 $$ final String geoHash = GeoHashUtils.stringEncode(lng, lat, precision)[ FD ]
Line_27 $$ for (int i = 0; i < numDocs; i++) -->Line_31 $$ for (int j = 0; j < numPoints; ++j) [ CD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_4 $$ Settings settings = Settings.settingsBuilder().put(IndexMetaData.SETTING_VERSION_CREATED, version).build()[ CD ]
Line_27 $$ for (int i = 0; i < numDocs; i++) -->Line_28 $$ final int numPoints = random.nextInt(4)[ CD ]
Line_16 $$ String hash = GeoHashUtils.stringEncode(lng, lat, precision)-->Line_20 $$ expectedDocCountsForGeoHash.put(hash, expectedDocCountsForGeoHash.getOrDefault(hash, 0) + 1)[ FD ]
Line_6 $$ List<IndexRequestBuilder> cities = new ArrayList()-->Line_40 $$ cities.add(indexCity("multi_valued_idx", Integer.toString(i), points))[ FD ]
Line_35 $$ for (int precision = GeoHashUtils.PRECISION; precision > 0; precision--) -->Line_37 $$ geoHashes.add(geoHash)[ CD ]
Line_11 $$ double lng = (360d * random.nextDouble()) - 180d-->Line_12 $$ String randomGeoHash = GeoHashUtils.stringEncode(lng, lat, GeoHashUtils.PRECISION)[ FD ]
Line_31 $$ for (int j = 0; j < numPoints; ++j) -->Line_35 $$ for (int precision = GeoHashUtils.PRECISION; precision > 0; precision--) [ CD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_46 $$ ensureSearchable()[ CD ]
Line_7 $$ Random random = getRandom()-->Line_32 $$ double lat = (180d * random.nextDouble()) - 90d[ FD ]
Line_6 $$ List<IndexRequestBuilder> cities = new ArrayList()-->Line_45 $$ indexRandom(true, cities)[ FD ]
Line_7 $$ Random random = getRandom()-->Line_33 $$ double lng = (360d * random.nextDouble()) - 180d[ FD ]
Line_9 $$ for (int i = 0; i < numDocs; i++) -->Line_40 $$ cities.add(indexCity("multi_valued_idx", Integer.toString(i), points))[ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_6 $$ List<IndexRequestBuilder> cities = new ArrayList()[ CD ]
Line_31 $$ for (int j = 0; j < numPoints; ++j) -->Line_33 $$ double lng = (360d * random.nextDouble()) - 180d[ CD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_23 $$ indexRandom(true, cities)[ CD ]
Line_29 $$ List<String> points = new ArrayList()-->Line_34 $$ points.add(lat + "," + lng)[ FD ]
Line_9 $$ for (int i = 0; i < numDocs; i++) -->Line_14 $$ expectedDocCountsForGeoHash.put(randomGeoHash, expectedDocCountsForGeoHash.getOrDefault(randomGeoHash, 0) + 1)[ CD ]
Line_10 $$ double lat = (180d * random.nextDouble()) - 90d-->Line_36 $$ final String geoHash = GeoHashUtils.stringEncode(lng, lat, precision)[ FD ]
Line_6 $$ List<IndexRequestBuilder> cities = new ArrayList()-->Line_23 $$ indexRandom(true, cities)[ FD ]
Line_7 $$ Random random = getRandom()-->Line_10 $$ double lat = (180d * random.nextDouble()) - 90d[ FD ]
Line_7 $$ Random random = getRandom()-->Line_11 $$ double lng = (360d * random.nextDouble()) - 180d[ FD ]
Line_32 $$ double lat = (180d * random.nextDouble()) - 90d-->Line_36 $$ final String geoHash = GeoHashUtils.stringEncode(lng, lat, precision)[ FD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_25 $$ cities = new ArrayList()[ CD ]
Line_2 $$ public void setupSuiteScopeCluster() throws Exception -->Line_5 $$ assertAcked(prepareCreate("idx").setSettings(settings).addMapping("type", "location", "type=geo_point", "city", "type=string,index=not_analyzed"))[ CD ]
