Line_2 $$ private void fuzzOnce() throws Exception -->Line_6 $$ int action = 0[ CD ]
Line_19 $$ int val = r.nextInt()-->Line_53 $$ ndosp.writeByte(val)[ FD ]
Line_26 $$ byte[] randomBytes = new byte[r.nextInt(4096 * 2 + 1)]-->Line_38 $$ dosp.write(randomBytes, offset, length)[ FD ]
Line_19 $$ int val = r.nextInt()-->Line_95 $$ ndosp.writeDouble(val)[ FD ]
Line_112 $$ StringBuilder sb = new StringBuilder()-->Line_116 $$ sb.append(simple + twoByte + threeByte + fourByte)[ FD ]
Line_117 $$ for (int ii = 0; ii < length; ii++) -->Line_130 $$ for (int ii = 0; ii < length; ii++) [ FD ]
Line_115 $$ length += 4000-->Line_171 $$ dosp.write(buf, offset, length)[ FD ]
Line_6 $$ int action = 0-->Line_8 $$ action = r.nextInt(21)[ FD ]
Line_26 $$ byte[] randomBytes = new byte[r.nextInt(4096 * 2 + 1)]-->Line_39 $$ ndosp.write(randomBytes, offset, length)[ FD ]
Line_4 $$ int iteration = 0-->Line_193 $$ assertSameOutput(0, -1, iteration)[ FD ]
Line_36 $$ int offset = randomBytes.length == 0 ? 0 : r.nextInt(randomBytes.length)-->Line_171 $$ dosp.write(buf, offset, length)[ FD ]
Line_37 $$ int length = randomBytes.length == 0 ? 0 : r.nextInt(randomBytes.length - offset)-->Line_39 $$ ndosp.write(randomBytes, offset, length)[ FD ]
Line_36 $$ int offset = randomBytes.length == 0 ? 0 : r.nextInt(randomBytes.length)-->Line_39 $$ ndosp.write(randomBytes, offset, length)[ FD ]
Line_19 $$ int val = r.nextInt()-->Line_81 $$ ndosp.writeLong(val)[ FD ]
Line_19 $$ int val = r.nextInt()-->Line_80 $$ dosp.writeLong(val)[ FD ]
Line_7 $$ while (generated.size() < 1024 * 1024 * 8) -->Line_8 $$ action = r.nextInt(21)[ CD ]
Line_19 $$ int val = r.nextInt()-->Line_67 $$ ndosp.writeChar(val)[ FD ]
Line_19 $$ int val = r.nextInt()-->Line_94 $$ dosp.writeDouble(val)[ FD ]
Line_26 $$ byte[] randomBytes = new byte[r.nextInt(4096 * 2 + 1)]-->Line_35 $$ r.nextBytes(randomBytes)[ FD ]
Line_19 $$ int val = r.nextInt()-->Line_20 $$ dosp.write(val)[ FD ]
Line_112 $$ StringBuilder sb = new StringBuilder()-->Line_118 $$ sb.append((char) (r.nextInt() & 0xffff))[ FD ]
Line_37 $$ int length = randomBytes.length == 0 ? 0 : r.nextInt(randomBytes.length - offset)-->Line_170 $$ ndosp.write(buf, offset, length)[ FD ]
Line_112 $$ StringBuilder sb = new StringBuilder()-->Line_120 $$ String str = sb.toString()[ FD ]
Line_2 $$ private void fuzzOnce() throws Exception -->Line_4 $$ int iteration = 0[ CD ]
Line_19 $$ int val = r.nextInt()-->Line_52 $$ dosp.writeByte(val)[ FD ]
Line_19 $$ int val = r.nextInt()-->Line_60 $$ ndosp.writeShort(val)[ FD ]
Line_2 $$ private void fuzzOnce() throws Exception -->Line_3 $$ setUp()[ CD ]
Line_19 $$ int val = r.nextInt()-->Line_45 $$ dosp.writeBoolean(val)[ FD ]
Line_26 $$ byte[] randomBytes = new byte[r.nextInt(4096 * 2 + 1)]-->Line_28 $$ dosp.write(randomBytes)[ FD ]
Line_115 $$ length += 4000-->Line_39 $$ ndosp.write(randomBytes, offset, length)[ FD ]
Line_19 $$ int val = r.nextInt()-->Line_46 $$ ndosp.writeBoolean(val)[ FD ]
Line_115 $$ length += 4000-->Line_38 $$ dosp.write(randomBytes, offset, length)[ FD ]
Line_37 $$ int length = randomBytes.length == 0 ? 0 : r.nextInt(randomBytes.length - offset)-->Line_38 $$ dosp.write(randomBytes, offset, length)[ FD ]
Line_130 $$ for (int ii = 0; ii < length; ii++) -->Line_131 $$ sb.append(' ')[ CD ]
Line_19 $$ int val = r.nextInt()-->Line_185 $$ VIntCoding.writeUnsignedVInt(val, dosp)[ FD ]
Line_37 $$ int length = randomBytes.length == 0 ? 0 : r.nextInt(randomBytes.length - offset)-->Line_117 $$ for (int ii = 0; ii < length; ii++) [ FD ]
Line_115 $$ length += 4000-->Line_117 $$ for (int ii = 0; ii < length; ii++) [ FD ]
Line_2 $$ private void fuzzOnce() throws Exception -->Line_7 $$ while (generated.size() < 1024 * 1024 * 8) [ CD ]
Line_19 $$ int val = r.nextInt()-->Line_21 $$ ndosp.write(val)[ FD ]
Line_19 $$ int val = r.nextInt()-->Line_66 $$ dosp.writeChar(val)[ FD ]
Line_19 $$ int val = r.nextInt()-->Line_88 $$ ndosp.writeFloat(val)[ FD ]
Line_130 $$ for (int ii = 0; ii < length; ii++) -->Line_167 $$ buf.setByte(ii, (byte) r.nextInt())[ FD ]
Line_117 $$ for (int ii = 0; ii < length; ii++) -->Line_167 $$ buf.setByte(ii, (byte) r.nextInt())[ FD ]
Line_36 $$ int offset = randomBytes.length == 0 ? 0 : r.nextInt(randomBytes.length)-->Line_170 $$ ndosp.write(buf, offset, length)[ FD ]
Line_115 $$ length += 4000-->Line_130 $$ for (int ii = 0; ii < length; ii++) [ FD ]
Line_2 $$ private void fuzzOnce() throws Exception -->Line_5 $$ int bytesChecked = 0[ CD ]
Line_19 $$ int val = r.nextInt()-->Line_87 $$ dosp.writeFloat(val)[ FD ]
Line_19 $$ int val = r.nextInt()-->Line_179 $$ ndosp.writeVInt(val)[ FD ]
Line_4 $$ int iteration = 0-->Line_9 $$ iteration++[ FD ]
Line_115 $$ length += 4000-->Line_170 $$ ndosp.write(buf, offset, length)[ FD ]
Line_26 $$ byte[] randomBytes = new byte[r.nextInt(4096 * 2 + 1)]-->Line_27 $$ r.nextBytes(randomBytes)[ FD ]
Line_114 $$ if (r.nextDouble() > .95)-->Line_115 $$ length += 4000[ CD ]
Line_37 $$ int length = randomBytes.length == 0 ? 0 : r.nextInt(randomBytes.length - offset)-->Line_130 $$ for (int ii = 0; ii < length; ii++) [ FD ]
Line_112 $$ StringBuilder sb = new StringBuilder()-->Line_131 $$ sb.append(' ')[ FD ]
Line_19 $$ int val = r.nextInt()-->Line_59 $$ dosp.writeShort(val)[ FD ]
Line_7 $$ while (generated.size() < 1024 * 1024 * 8) -->Line_9 $$ iteration++[ CD ]
Line_117 $$ for (int ii = 0; ii < length; ii++) -->Line_167 $$ for (int ii = 0; ii < buf.size(); ii++) buf.setByte(ii, (byte) r.nextInt())[ FD ]
Line_37 $$ int length = randomBytes.length == 0 ? 0 : r.nextInt(randomBytes.length - offset)-->Line_115 $$ length += 4000[ FD ]
Line_19 $$ int val = r.nextInt()-->Line_186 $$ ndosp.writeUnsignedVInt(val)[ FD ]
Line_130 $$ for (int ii = 0; ii < length; ii++) -->Line_167 $$ for (int ii = 0; ii < buf.size(); ii++) buf.setByte(ii, (byte) r.nextInt())[ FD ]
Line_19 $$ int val = r.nextInt()-->Line_178 $$ VIntCoding.writeVInt(val, dosp)[ FD ]
Line_117 $$ for (int ii = 0; ii < length; ii++) -->Line_118 $$ sb.append((char) (r.nextInt() & 0xffff))[ CD ]
Line_19 $$ int val = r.nextInt()-->Line_74 $$ ndosp.writeInt(val)[ FD ]
Line_26 $$ byte[] randomBytes = new byte[r.nextInt(4096 * 2 + 1)]-->Line_29 $$ ndosp.write(randomBytes)[ FD ]
Line_19 $$ int val = r.nextInt()-->Line_73 $$ dosp.writeInt(val)[ FD ]
Line_37 $$ int length = randomBytes.length == 0 ? 0 : r.nextInt(randomBytes.length - offset)-->Line_171 $$ dosp.write(buf, offset, length)[ FD ]
Line_112 $$ StringBuilder sb = new StringBuilder()-->Line_133 $$ String str = sb.toString()[ FD ]
Line_112 $$ StringBuilder sb = new StringBuilder()-->Line_129 $$ sb.append("the very model of a modern major general familiar with all things animal vegetable and mineral")[ FD ]
Line_36 $$ int offset = randomBytes.length == 0 ? 0 : r.nextInt(randomBytes.length)-->Line_38 $$ dosp.write(randomBytes, offset, length)[ FD ]
Line_2 $$ private void fuzzOnce() throws Exception -->Line_193 $$ assertSameOutput(0, -1, iteration)[ CD ]
