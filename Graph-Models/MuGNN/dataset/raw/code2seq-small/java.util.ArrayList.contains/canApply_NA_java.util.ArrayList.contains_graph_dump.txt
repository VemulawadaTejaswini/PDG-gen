Line_19 $$ if (allNames.contains(currName)) -->Line_20 $$ itemWithError = currItem[ CD ]
Line_2 $$ private boolean canApply(String[] errorString, @Nullable MasterDetailsComponent rootConfigurable, boolean addedOnly) throws ConfigurationException -->Line_3 $$ LinkedHashMap<Sdk, Sdk> sdks = new LinkedHashMap<Sdk, Sdk>(myProjectSdks)[ CD ]
Line_29 $$ if (rootConfigurable != null) -->Line_30 $$ final Object projectJdk = rootConfigurable.getSelectedObject()[ CD ]
Line_31 $$ if (!(projectJdk instanceof Sdk) || !Comparing.strEqual(((Sdk) projectJdk).getName(), currName)) -->Line_32 $$ rootConfigurable.selectNodeInTree(currName)[ CD ]
Line_14 $$ if (currName.isEmpty()) -->Line_15 $$ itemWithError = currItem[ CD ]
Line_15 $$ itemWithError = currItem-->Line_20 $$ itemWithError = currItem[ FD ]
Line_2 $$ private boolean canApply(String[] errorString, @Nullable MasterDetailsComponent rootConfigurable, boolean addedOnly) throws ConfigurationException -->Line_29 $$ if (rootConfigurable != null) [ FD ]
Line_12 $$ for (Sdk currItem : sdks.values()) -->Line_15 $$ itemWithError = currItem[ FD ]
Line_11 $$ Sdk itemWithError = null-->Line_15 $$ itemWithError = currItem[ FD ]
Line_2 $$ private boolean canApply(String[] errorString, @Nullable MasterDetailsComponent rootConfigurable, boolean addedOnly) throws ConfigurationException -->Line_42 $$ if (rootConfigurable != null) [ CD ]
Line_4 $$ if (addedOnly) -->Line_5 $$ Sdk[] allJdks = ProjectJdkTable.getInstance().getAllJdks()[ CD ]
Line_3 $$ LinkedHashMap<Sdk, Sdk> sdks = new LinkedHashMap<Sdk, Sdk>(myProjectSdks)-->Line_12 $$ for (Sdk currItem : sdks.values()) [ FD ]
Line_13 $$ String currName = currItem.getName()-->Line_14 $$ if (currName.isEmpty()) [ FD ]
Line_20 $$ itemWithError = currItem-->Line_40 $$ if (itemWithError == null)[ FD ]
Line_2 $$ private boolean canApply(String[] errorString, @Nullable MasterDetailsComponent rootConfigurable, boolean addedOnly) throws ConfigurationException -->Line_43 $$ rootConfigurable.selectNodeInTree(itemWithError.getName())[ FD ]
Line_19 $$ if (allNames.contains(currName)) -->Line_21 $$ errorString[0] = ProjectBundle.message("sdk.list.unique.name.required.error")[ CD ]
Line_13 $$ String currName = currItem.getName()-->Line_32 $$ rootConfigurable.selectNodeInTree(currName)[ FD ]
Line_13 $$ String currName = currItem.getName()-->Line_35 $$ throw new ConfigurationException(ProjectBundle.message("sdk.configuration.exception", currName) + " " + e.getMessage())[ FD ]
Line_15 $$ itemWithError = currItem-->Line_43 $$ rootConfigurable.selectNodeInTree(itemWithError.getName())[ FD ]
Line_11 $$ Sdk itemWithError = null-->Line_20 $$ itemWithError = currItem[ FD ]
Line_12 $$ for (Sdk currItem : sdks.values()) -->Line_24 $$ final SdkAdditionalData sdkAdditionalData = currItem.getSdkAdditionalData()[ FD ]
Line_12 $$ for (Sdk currItem : sdks.values()) -->Line_20 $$ itemWithError = currItem[ FD ]
Line_2 $$ private boolean canApply(String[] errorString, @Nullable MasterDetailsComponent rootConfigurable, boolean addedOnly) throws ConfigurationException -->Line_32 $$ rootConfigurable.selectNodeInTree(currName)[ FD ]
Line_11 $$ Sdk itemWithError = null-->Line_40 $$ if (itemWithError == null)[ FD ]
Line_2 $$ private boolean canApply(String[] errorString, @Nullable MasterDetailsComponent rootConfigurable, boolean addedOnly) throws ConfigurationException -->Line_42 $$ if (rootConfigurable != null) [ FD ]
Line_13 $$ String currName = currItem.getName()-->Line_38 $$ allNames.add(currName)[ FD ]
Line_2 $$ private boolean canApply(String[] errorString, @Nullable MasterDetailsComponent rootConfigurable, boolean addedOnly) throws ConfigurationException -->Line_30 $$ final Object projectJdk = rootConfigurable.getSelectedObject()[ FD ]
Line_2 $$ private boolean canApply(String[] errorString, @Nullable MasterDetailsComponent rootConfigurable, boolean addedOnly) throws ConfigurationException -->Line_45 $$ return false[ CD ]
Line_40 $$ if (itemWithError == null)-->Line_41 $$ return true[ CD ]
Line_6 $$ for (Sdk jdk : allJdks) -->Line_7 $$ sdks.remove(jdk)[ FD ]
Line_24 $$ final SdkAdditionalData sdkAdditionalData = currItem.getSdkAdditionalData()-->Line_25 $$ if (sdkAdditionalData instanceof ValidatableSdkAdditionalData) [ FD ]
Line_10 $$ ArrayList<String> allNames = new ArrayList<String>()-->Line_38 $$ allNames.add(currName)[ FD ]
Line_11 $$ Sdk itemWithError = null-->Line_43 $$ rootConfigurable.selectNodeInTree(itemWithError.getName())[ FD ]
Line_12 $$ for (Sdk currItem : sdks.values()) -->Line_13 $$ String currName = currItem.getName()[ FD ]
Line_20 $$ itemWithError = currItem-->Line_43 $$ rootConfigurable.selectNodeInTree(itemWithError.getName())[ FD ]
Line_13 $$ String currName = currItem.getName()-->Line_19 $$ if (allNames.contains(currName)) [ FD ]
Line_2 $$ private boolean canApply(String[] errorString, @Nullable MasterDetailsComponent rootConfigurable, boolean addedOnly) throws ConfigurationException -->Line_4 $$ if (addedOnly) [ CD ]
Line_14 $$ if (currName.isEmpty()) -->Line_16 $$ errorString[0] = ProjectBundle.message("sdk.list.name.required.error")[ CD ]
Line_2 $$ private boolean canApply(String[] errorString, @Nullable MasterDetailsComponent rootConfigurable, boolean addedOnly) throws ConfigurationException -->Line_10 $$ ArrayList<String> allNames = new ArrayList<String>()[ CD ]
Line_10 $$ ArrayList<String> allNames = new ArrayList<String>()-->Line_19 $$ if (allNames.contains(currName)) [ FD ]
Line_2 $$ private boolean canApply(String[] errorString, @Nullable MasterDetailsComponent rootConfigurable, boolean addedOnly) throws ConfigurationException -->Line_40 $$ if (itemWithError == null)[ CD ]
Line_2 $$ private boolean canApply(String[] errorString, @Nullable MasterDetailsComponent rootConfigurable, boolean addedOnly) throws ConfigurationException -->Line_11 $$ Sdk itemWithError = null[ CD ]
Line_3 $$ LinkedHashMap<Sdk, Sdk> sdks = new LinkedHashMap<Sdk, Sdk>(myProjectSdks)-->Line_7 $$ sdks.remove(jdk)[ FD ]
Line_15 $$ itemWithError = currItem-->Line_40 $$ if (itemWithError == null)[ FD ]
Line_13 $$ String currName = currItem.getName()-->Line_31 $$ if (!(projectJdk instanceof Sdk) || !Comparing.strEqual(((Sdk) projectJdk).getName(), currName)) [ FD ]
Line_42 $$ if (rootConfigurable != null) -->Line_43 $$ rootConfigurable.selectNodeInTree(itemWithError.getName())[ CD ]
Line_29 $$ if (rootConfigurable != null) -->Line_31 $$ if (!(projectJdk instanceof Sdk) || !Comparing.strEqual(((Sdk) projectJdk).getName(), currName)) [ CD ]
