Line_3 $$ if (Skeleton.class.equals(implClass)) -->Line_4 $$ return[ CD ]
Line_2 $$ private void loadServiceDescByIntrospectionRecursive(Class implClass) -->Line_3 $$ if (Skeleton.class.equals(implClass)) [ CD ]
Line_7 $$ for (int i = 0; i < methods.length; i++) -->Line_8 $$ if (Modifier.isPublic(methods[i].getModifiers()) && !isServiceLifeCycleMethod(implClass, methods[i])) [ CD ]
Line_12 $$ if (implClass.isInterface()) -->Line_22 $$ if (superClass != null && !superClass.getName().startsWith("java.") && !superClass.getName().startsWith("javax.") && (stopClasses == null || !stopClasses.contains(superClass.getName()))) [ CD ]
Line_15 $$ Class superClass = superClasses[i]-->Line_22 $$ if (superClass != null && !superClass.getName().startsWith("java.") && !superClass.getName().startsWith("javax.") && (stopClasses == null || !stopClasses.contains(superClass.getName()))) [ FD ]
Line_16 $$ if (!superClass.getName().startsWith("java.") && !superClass.getName().startsWith("javax.") && (stopClasses == null || !stopClasses.contains(superClass.getName()))) -->Line_17 $$ loadServiceDescByIntrospectionRecursive(superClass)[ CD ]
Line_15 $$ Class superClass = superClasses[i]-->Line_17 $$ loadServiceDescByIntrospectionRecursive(superClass)[ FD ]
Line_12 $$ if (implClass.isInterface()) -->Line_13 $$ Class[] superClasses = implClass.getInterfaces()[ CD ]
Line_15 $$ Class superClass = superClasses[i]-->Line_23 $$ loadServiceDescByIntrospectionRecursive(superClass)[ FD ]
Line_2 $$ private void loadServiceDescByIntrospectionRecursive(Class implClass) -->Line_21 $$ Class superClass = implClass.getSuperclass()[ FD ]
Line_21 $$ Class superClass = implClass.getSuperclass()-->Line_22 $$ if (superClass != null && !superClass.getName().startsWith("java.") && !superClass.getName().startsWith("javax.") && (stopClasses == null || !stopClasses.contains(superClass.getName()))) [ FD ]
Line_2 $$ private void loadServiceDescByIntrospectionRecursive(Class implClass) -->Line_3 $$ if (Skeleton.class.equals(implClass)) [ FD ]
Line_21 $$ Class superClass = implClass.getSuperclass()-->Line_23 $$ loadServiceDescByIntrospectionRecursive(superClass)[ FD ]
Line_15 $$ Class superClass = superClasses[i]-->Line_16 $$ if (!superClass.getName().startsWith("java.") && !superClass.getName().startsWith("javax.") && (stopClasses == null || !stopClasses.contains(superClass.getName()))) [ FD ]
Line_12 $$ if (implClass.isInterface()) -->Line_14 $$ for (int i = 0; i < superClasses.length; i++) [ CD ]
Line_14 $$ for (int i = 0; i < superClasses.length; i++) -->Line_16 $$ if (!superClass.getName().startsWith("java.") && !superClass.getName().startsWith("javax.") && (stopClasses == null || !stopClasses.contains(superClass.getName()))) [ CD ]
Line_2 $$ private void loadServiceDescByIntrospectionRecursive(Class implClass) -->Line_7 $$ for (int i = 0; i < methods.length; i++) [ CD ]
Line_2 $$ private void loadServiceDescByIntrospectionRecursive(Class implClass) -->Line_6 $$ Method[] methods = getMethods(implClass)[ CD ]
Line_12 $$ if (implClass.isInterface()) -->Line_21 $$ Class superClass = implClass.getSuperclass()[ CD ]
Line_2 $$ private void loadServiceDescByIntrospectionRecursive(Class implClass) -->Line_12 $$ if (implClass.isInterface()) [ FD ]
Line_8 $$ if (Modifier.isPublic(methods[i].getModifiers()) && !isServiceLifeCycleMethod(implClass, methods[i])) -->Line_9 $$ getSyncedOperationsForName(implClass, methods[i].getName())[ CD ]
Line_7 $$ for (int i = 0; i < methods.length; i++) -->Line_14 $$ for (int i = 0; i < superClasses.length; i++) [ FD ]
Line_2 $$ private void loadServiceDescByIntrospectionRecursive(Class implClass) -->Line_13 $$ Class[] superClasses = implClass.getInterfaces()[ FD ]
Line_2 $$ private void loadServiceDescByIntrospectionRecursive(Class implClass) -->Line_6 $$ Method[] methods = getMethods(implClass)[ FD ]
Line_22 $$ if (superClass != null && !superClass.getName().startsWith("java.") && !superClass.getName().startsWith("javax.") && (stopClasses == null || !stopClasses.contains(superClass.getName()))) -->Line_23 $$ loadServiceDescByIntrospectionRecursive(superClass)[ CD ]
Line_14 $$ for (int i = 0; i < superClasses.length; i++) -->Line_15 $$ Class superClass = superClasses[i][ CD ]
Line_2 $$ private void loadServiceDescByIntrospectionRecursive(Class implClass) -->Line_8 $$ if (Modifier.isPublic(methods[i].getModifiers()) && !isServiceLifeCycleMethod(implClass, methods[i])) [ FD ]
Line_2 $$ private void loadServiceDescByIntrospectionRecursive(Class implClass) -->Line_9 $$ getSyncedOperationsForName(implClass, methods[i].getName())[ FD ]
Line_2 $$ private void loadServiceDescByIntrospectionRecursive(Class implClass) -->Line_12 $$ if (implClass.isInterface()) [ CD ]
