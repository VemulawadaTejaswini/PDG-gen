Line_10 $$ poll = set.pollN(10)-->Line_11 $$ assertEquals(10, poll.size())[ FD ]
Line_2 $$ public void testPollNMulti() -->Line_10 $$ poll = set.pollN(10)[ CD ]
Line_2 $$ public void testPollNMulti() -->Line_17 $$ assertEquals(NUM - 10, poll.size())[ CD ]
Line_5 $$ List<Integer> poll = set.pollN(0)-->Line_11 $$ assertEquals(10, poll.size())[ FD ]
Line_2 $$ public void testPollNMulti() -->Line_16 $$ poll = set.pollN(1000)[ CD ]
Line_2 $$ public void testPollNMulti() -->Line_5 $$ List<Integer> poll = set.pollN(0)[ CD ]
Line_2 $$ public void testPollNMulti() -->Line_4 $$ set.addAll(list)[ CD ]
Line_5 $$ List<Integer> poll = set.pollN(0)-->Line_10 $$ poll = set.pollN(10)[ FD ]
Line_10 $$ poll = set.pollN(10)-->Line_17 $$ assertEquals(NUM - 10, poll.size())[ FD ]
Line_10 $$ poll = set.pollN(10)-->Line_16 $$ poll = set.pollN(1000)[ FD ]
Line_7 $$ for (Integer i : list) -->Line_8 $$ assertTrue(set.contains(i))[ FD ]
Line_16 $$ poll = set.pollN(1000)-->Line_17 $$ assertEquals(NUM - 10, poll.size())[ FD ]
Line_2 $$ public void testPollNMulti() -->Line_23 $$ LOG.info("Test pollN multi - DONE")[ CD ]
Line_7 $$ for (Integer i : list) -->Line_13 $$ assertTrue(list.contains(i))[ FD ]
Line_2 $$ public void testPollNMulti() -->Line_3 $$ LOG.info("Test pollN multi")[ CD ]
Line_5 $$ List<Integer> poll = set.pollN(0)-->Line_17 $$ assertEquals(NUM - 10, poll.size())[ FD ]
Line_2 $$ public void testPollNMulti() -->Line_11 $$ assertEquals(10, poll.size())[ CD ]
Line_2 $$ public void testPollNMulti() -->Line_6 $$ assertEquals(0, poll.size())[ CD ]
Line_5 $$ List<Integer> poll = set.pollN(0)-->Line_16 $$ poll = set.pollN(1000)[ FD ]
Line_2 $$ public void testPollNMulti() -->Line_22 $$ assertEquals(0, set.size())[ CD ]
Line_7 $$ for (Integer i : list) -->Line_14 $$ assertFalse(set.contains(i))[ FD ]
Line_2 $$ public void testPollNMulti() -->Line_21 $$ assertTrue(set.isEmpty())[ CD ]
Line_5 $$ List<Integer> poll = set.pollN(0)-->Line_6 $$ assertEquals(0, poll.size())[ FD ]
Line_7 $$ for (Integer i : list) -->Line_19 $$ assertTrue(list.contains(i))[ FD ]
