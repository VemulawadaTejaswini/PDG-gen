Line_8 $$ TestBean tb = (TestBean) bf.getBean("testBean")-->Line_10 $$ assertTrue(tb.getFriends() instanceof ScopedObject)[ FD ]
Line_3 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_8 $$ TestBean tb = (TestBean) bf.getBean("testBean")[ FD ]
Line_8 $$ TestBean tb = (TestBean) bf.getBean("testBean")-->Line_16 $$ ArrayList<?> deserialized = (ArrayList<?>) SerializationTestUtils.serializeAndDeserialize(tb.getFriends())[ FD ]
Line_8 $$ TestBean tb = (TestBean) bf.getBean("testBean")-->Line_11 $$ ScopedObject scoped = (ScopedObject) tb.getFriends()[ FD ]
Line_2 $$ public void testCglibScopedProxy() throws Exception -->Line_4 $$ new XmlBeanDefinitionReader(bf).loadBeanDefinitions(LIST_CONTEXT)[ CD ]
Line_8 $$ TestBean tb = (TestBean) bf.getBean("testBean")-->Line_9 $$ assertTrue(AopUtils.isCglibProxy(tb.getFriends()))[ FD ]
Line_2 $$ public void testCglibScopedProxy() throws Exception -->Line_5 $$ bf.setSerializationId("Y")[ CD ]
Line_2 $$ public void testCglibScopedProxy() throws Exception -->Line_20 $$ assertTrue(deserialized instanceof ScopedObject)[ CD ]
Line_16 $$ ArrayList<?> deserialized = (ArrayList<?>) SerializationTestUtils.serializeAndDeserialize(tb.getFriends())-->Line_18 $$ assertTrue(AopUtils.isCglibProxy(deserialized))[ FD ]
Line_2 $$ public void testCglibScopedProxy() throws Exception -->Line_19 $$ assertTrue(deserialized.contains("myFriend"))[ CD ]
Line_2 $$ public void testCglibScopedProxy() throws Exception -->Line_13 $$ tb.getFriends().add("myFriend")[ CD ]
Line_8 $$ TestBean tb = (TestBean) bf.getBean("testBean")-->Line_13 $$ tb.getFriends().add("myFriend")[ FD ]
Line_16 $$ ArrayList<?> deserialized = (ArrayList<?>) SerializationTestUtils.serializeAndDeserialize(tb.getFriends())-->Line_17 $$ assertNotNull(deserialized)[ FD ]
Line_2 $$ public void testCglibScopedProxy() throws Exception -->Line_12 $$ assertEquals(ArrayList.class, scoped.getTargetObject().getClass())[ CD ]
Line_2 $$ public void testCglibScopedProxy() throws Exception -->Line_14 $$ assertTrue(scope.getMap().containsKey("scopedTarget.scopedList"))[ CD ]
Line_3 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_23 $$ bf.setSerializationId(null)[ FD ]
Line_6 $$ SimpleMapScope scope = new SimpleMapScope()-->Line_14 $$ assertTrue(scope.getMap().containsKey("scopedTarget.scopedList"))[ FD ]
Line_2 $$ public void testCglibScopedProxy() throws Exception -->Line_15 $$ assertEquals(ArrayList.class, scope.getMap().get("scopedTarget.scopedList").getClass())[ CD ]
Line_3 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_5 $$ bf.setSerializationId("Y")[ FD ]
Line_2 $$ public void testCglibScopedProxy() throws Exception -->Line_11 $$ ScopedObject scoped = (ScopedObject) tb.getFriends()[ CD ]
Line_2 $$ public void testCglibScopedProxy() throws Exception -->Line_23 $$ bf.setSerializationId(null)[ CD ]
Line_21 $$ ScopedObject scopedDeserialized = (ScopedObject) deserialized-->Line_22 $$ assertEquals(ArrayList.class, scopedDeserialized.getTargetObject().getClass())[ FD ]
Line_2 $$ public void testCglibScopedProxy() throws Exception -->Line_9 $$ assertTrue(AopUtils.isCglibProxy(tb.getFriends()))[ CD ]
Line_3 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_7 $$ bf.registerScope("request", scope)[ FD ]
Line_2 $$ public void testCglibScopedProxy() throws Exception -->Line_22 $$ assertEquals(ArrayList.class, scopedDeserialized.getTargetObject().getClass())[ CD ]
Line_2 $$ public void testCglibScopedProxy() throws Exception -->Line_6 $$ SimpleMapScope scope = new SimpleMapScope()[ CD ]
Line_2 $$ public void testCglibScopedProxy() throws Exception -->Line_10 $$ assertTrue(tb.getFriends() instanceof ScopedObject)[ CD ]
Line_2 $$ public void testCglibScopedProxy() throws Exception -->Line_17 $$ assertNotNull(deserialized)[ CD ]
Line_2 $$ public void testCglibScopedProxy() throws Exception -->Line_7 $$ bf.registerScope("request", scope)[ CD ]
Line_2 $$ public void testCglibScopedProxy() throws Exception -->Line_18 $$ assertTrue(AopUtils.isCglibProxy(deserialized))[ CD ]
Line_6 $$ SimpleMapScope scope = new SimpleMapScope()-->Line_7 $$ bf.registerScope("request", scope)[ FD ]
Line_2 $$ public void testCglibScopedProxy() throws Exception -->Line_21 $$ ScopedObject scopedDeserialized = (ScopedObject) deserialized[ CD ]
Line_2 $$ public void testCglibScopedProxy() throws Exception -->Line_8 $$ TestBean tb = (TestBean) bf.getBean("testBean")[ CD ]
Line_6 $$ SimpleMapScope scope = new SimpleMapScope()-->Line_15 $$ assertEquals(ArrayList.class, scope.getMap().get("scopedTarget.scopedList").getClass())[ FD ]
Line_2 $$ public void testCglibScopedProxy() throws Exception -->Line_16 $$ ArrayList<?> deserialized = (ArrayList<?>) SerializationTestUtils.serializeAndDeserialize(tb.getFriends())[ CD ]
Line_16 $$ ArrayList<?> deserialized = (ArrayList<?>) SerializationTestUtils.serializeAndDeserialize(tb.getFriends())-->Line_19 $$ assertTrue(deserialized.contains("myFriend"))[ FD ]
Line_11 $$ ScopedObject scoped = (ScopedObject) tb.getFriends()-->Line_12 $$ assertEquals(ArrayList.class, scoped.getTargetObject().getClass())[ FD ]
Line_2 $$ public void testCglibScopedProxy() throws Exception -->Line_3 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()[ CD ]
