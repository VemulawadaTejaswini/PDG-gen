Line_6 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_17 $$ assert !endpoints.contains(InetAddress.getByName("127.0.0.5"))[ FD ]
Line_5 $$ ArrayList<InetAddress> endpoints-->Line_23 $$ assert !endpoints.equals(initial)[ FD ]
Line_15 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_18 $$ assert !endpoints.equals(initial)[ FD ]
Line_10 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_22 $$ assert endpoints.size() == 5 : StringUtils.join(endpoints, ",")[ FD ]
Line_5 $$ ArrayList<InetAddress> endpoints-->Line_21 $$ endpoints = strategy.getNaturalEndpoints(searchToken)[ FD ]
Line_6 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_22 $$ assert endpoints.size() == 5 : StringUtils.join(endpoints, ",")[ FD ]
Line_6 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_11 $$ assert endpoints.size() == 5 : StringUtils.join(endpoints, ",")[ FD ]
Line_2 $$ public void runCacheRespectsTokenChangesTest(Class stratClass, Map<String, String> configOptions) throws Exception -->Line_19 $$ initial = strategy.getNaturalEndpoints(searchToken)[ CD ]
Line_21 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_22 $$ assert endpoints.size() == 5 : StringUtils.join(endpoints, ",")[ FD ]
Line_5 $$ ArrayList<InetAddress> endpoints-->Line_7 $$ assert endpoints.size() == 5 : StringUtils.join(endpoints, ",")[ FD ]
Line_13 $$ initial = strategy.getNaturalEndpoints(searchToken)-->Line_18 $$ assert !endpoints.equals(initial)[ FD ]
Line_21 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_23 $$ assert !endpoints.equals(initial)[ FD ]
Line_5 $$ ArrayList<InetAddress> endpoints-->Line_18 $$ assert !endpoints.equals(initial)[ FD ]
Line_2 $$ public void runCacheRespectsTokenChangesTest(Class stratClass, Map<String, String> configOptions) throws Exception -->Line_13 $$ initial = strategy.getNaturalEndpoints(searchToken)[ CD ]
Line_10 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_16 $$ assert endpoints.size() == 5 : StringUtils.join(endpoints, ",")[ FD ]
Line_6 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_18 $$ assert !endpoints.equals(initial)[ FD ]
Line_15 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_22 $$ assert endpoints.size() == 5 : StringUtils.join(endpoints, ",")[ FD ]
Line_8 $$ initial = strategy.getNaturalEndpoints(searchToken)-->Line_18 $$ assert !endpoints.equals(initial)[ FD ]
Line_2 $$ public void runCacheRespectsTokenChangesTest(Class stratClass, Map<String, String> configOptions) throws Exception -->Line_5 $$ ArrayList<InetAddress> endpoints[ CD ]
Line_10 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_12 $$ assert !endpoints.equals(initial)[ FD ]
Line_5 $$ ArrayList<InetAddress> endpoints-->Line_10 $$ endpoints = strategy.getNaturalEndpoints(searchToken)[ FD ]
Line_2 $$ public void runCacheRespectsTokenChangesTest(Class stratClass, Map<String, String> configOptions) throws Exception -->Line_9 $$ tmd.updateNormalToken(new BigIntegerToken(String.valueOf(35)), InetAddress.getByName("127.0.0.5"))[ CD ]
Line_10 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_11 $$ assert endpoints.size() == 5 : StringUtils.join(endpoints, ",")[ FD ]
Line_2 $$ public void runCacheRespectsTokenChangesTest(Class stratClass, Map<String, String> configOptions) throws Exception -->Line_10 $$ endpoints = strategy.getNaturalEndpoints(searchToken)[ CD ]
Line_5 $$ ArrayList<InetAddress> endpoints-->Line_17 $$ assert !endpoints.contains(InetAddress.getByName("127.0.0.5"))[ FD ]
Line_15 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_21 $$ endpoints = strategy.getNaturalEndpoints(searchToken)[ FD ]
Line_15 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_16 $$ assert endpoints.size() == 5 : StringUtils.join(endpoints, ",")[ FD ]
Line_2 $$ public void runCacheRespectsTokenChangesTest(Class stratClass, Map<String, String> configOptions) throws Exception -->Line_6 $$ endpoints = strategy.getNaturalEndpoints(searchToken)[ CD ]
Line_6 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_10 $$ endpoints = strategy.getNaturalEndpoints(searchToken)[ FD ]
Line_4 $$ ArrayList<InetAddress> initial-->Line_23 $$ assert !endpoints.equals(initial)[ FD ]
Line_2 $$ public void runCacheRespectsTokenChangesTest(Class stratClass, Map<String, String> configOptions) throws Exception -->Line_8 $$ initial = strategy.getNaturalEndpoints(searchToken)[ CD ]
Line_2 $$ public void runCacheRespectsTokenChangesTest(Class stratClass, Map<String, String> configOptions) throws Exception -->Line_14 $$ tmd.removeEndpoint(InetAddress.getByName("127.0.0.5"))[ CD ]
Line_6 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_15 $$ endpoints = strategy.getNaturalEndpoints(searchToken)[ FD ]
Line_5 $$ ArrayList<InetAddress> endpoints-->Line_16 $$ assert endpoints.size() == 5 : StringUtils.join(endpoints, ",")[ FD ]
Line_6 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_23 $$ assert !endpoints.equals(initial)[ FD ]
Line_13 $$ initial = strategy.getNaturalEndpoints(searchToken)-->Line_23 $$ assert !endpoints.equals(initial)[ FD ]
Line_4 $$ ArrayList<InetAddress> initial-->Line_18 $$ assert !endpoints.equals(initial)[ FD ]
Line_8 $$ initial = strategy.getNaturalEndpoints(searchToken)-->Line_19 $$ initial = strategy.getNaturalEndpoints(searchToken)[ FD ]
Line_19 $$ initial = strategy.getNaturalEndpoints(searchToken)-->Line_23 $$ assert !endpoints.equals(initial)[ FD ]
Line_5 $$ ArrayList<InetAddress> endpoints-->Line_6 $$ endpoints = strategy.getNaturalEndpoints(searchToken)[ FD ]
Line_10 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_18 $$ assert !endpoints.equals(initial)[ FD ]
Line_6 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_21 $$ endpoints = strategy.getNaturalEndpoints(searchToken)[ FD ]
Line_8 $$ initial = strategy.getNaturalEndpoints(searchToken)-->Line_13 $$ initial = strategy.getNaturalEndpoints(searchToken)[ FD ]
Line_2 $$ public void runCacheRespectsTokenChangesTest(Class stratClass, Map<String, String> configOptions) throws Exception -->Line_4 $$ ArrayList<InetAddress> initial[ CD ]
Line_10 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_17 $$ assert !endpoints.contains(InetAddress.getByName("127.0.0.5"))[ FD ]
Line_5 $$ ArrayList<InetAddress> endpoints-->Line_12 $$ assert !endpoints.equals(initial)[ FD ]
Line_6 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_7 $$ assert endpoints.size() == 5 : StringUtils.join(endpoints, ",")[ FD ]
Line_5 $$ ArrayList<InetAddress> endpoints-->Line_15 $$ endpoints = strategy.getNaturalEndpoints(searchToken)[ FD ]
Line_10 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_15 $$ endpoints = strategy.getNaturalEndpoints(searchToken)[ FD ]
Line_5 $$ ArrayList<InetAddress> endpoints-->Line_11 $$ assert endpoints.size() == 5 : StringUtils.join(endpoints, ",")[ FD ]
Line_15 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_17 $$ assert !endpoints.contains(InetAddress.getByName("127.0.0.5"))[ FD ]
Line_2 $$ public void runCacheRespectsTokenChangesTest(Class stratClass, Map<String, String> configOptions) throws Exception -->Line_20 $$ tmd.updateNormalToken(new BigIntegerToken(String.valueOf(25)), InetAddress.getByName("127.0.0.8"))[ CD ]
Line_8 $$ initial = strategy.getNaturalEndpoints(searchToken)-->Line_23 $$ assert !endpoints.equals(initial)[ FD ]
Line_2 $$ public void runCacheRespectsTokenChangesTest(Class stratClass, Map<String, String> configOptions) throws Exception -->Line_15 $$ endpoints = strategy.getNaturalEndpoints(searchToken)[ CD ]
Line_5 $$ ArrayList<InetAddress> endpoints-->Line_22 $$ assert endpoints.size() == 5 : StringUtils.join(endpoints, ",")[ FD ]
Line_6 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_12 $$ assert !endpoints.equals(initial)[ FD ]
Line_2 $$ public void runCacheRespectsTokenChangesTest(Class stratClass, Map<String, String> configOptions) throws Exception -->Line_3 $$ setup(stratClass, configOptions)[ CD ]
Line_10 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_21 $$ endpoints = strategy.getNaturalEndpoints(searchToken)[ FD ]
Line_8 $$ initial = strategy.getNaturalEndpoints(searchToken)-->Line_12 $$ assert !endpoints.equals(initial)[ FD ]
Line_15 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_23 $$ assert !endpoints.equals(initial)[ FD ]
Line_6 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_16 $$ assert endpoints.size() == 5 : StringUtils.join(endpoints, ",")[ FD ]
Line_2 $$ public void runCacheRespectsTokenChangesTest(Class stratClass, Map<String, String> configOptions) throws Exception -->Line_3 $$ setup(stratClass, configOptions)[ FD ]
Line_4 $$ ArrayList<InetAddress> initial-->Line_8 $$ initial = strategy.getNaturalEndpoints(searchToken)[ FD ]
Line_4 $$ ArrayList<InetAddress> initial-->Line_19 $$ initial = strategy.getNaturalEndpoints(searchToken)[ FD ]
Line_10 $$ endpoints = strategy.getNaturalEndpoints(searchToken)-->Line_23 $$ assert !endpoints.equals(initial)[ FD ]
Line_4 $$ ArrayList<InetAddress> initial-->Line_13 $$ initial = strategy.getNaturalEndpoints(searchToken)[ FD ]
Line_2 $$ public void runCacheRespectsTokenChangesTest(Class stratClass, Map<String, String> configOptions) throws Exception -->Line_21 $$ endpoints = strategy.getNaturalEndpoints(searchToken)[ CD ]
Line_4 $$ ArrayList<InetAddress> initial-->Line_12 $$ assert !endpoints.equals(initial)[ FD ]
Line_13 $$ initial = strategy.getNaturalEndpoints(searchToken)-->Line_19 $$ initial = strategy.getNaturalEndpoints(searchToken)[ FD ]
