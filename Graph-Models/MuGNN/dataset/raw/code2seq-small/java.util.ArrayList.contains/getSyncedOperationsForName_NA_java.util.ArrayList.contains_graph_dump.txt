Line_4 $$ if (methodName.equals("getOperationDescByName") || methodName.equals("getOperationDescs"))-->Line_5 $$ return[ CD ]
Line_9 $$ if (completedNames == null || completedNames.contains(methodName))-->Line_10 $$ return[ CD ]
Line_2 $$ private void getSyncedOperationsForName(Class implClass, String methodName) -->Line_4 $$ if (methodName.equals("getOperationDescByName") || methodName.equals("getOperationDescs"))[ FD ]
Line_2 $$ private void getSyncedOperationsForName(Class implClass, String methodName) -->Line_51 $$ if (name2OperationsMap != null) [ CD ]
Line_35 $$ if (log.isDebugEnabled()) -->Line_36 $$ log.debug(Messages.getMessage("exception00"), e)[ CD ]
Line_2 $$ private void getSyncedOperationsForName(Class implClass, String methodName) -->Line_13 $$ if ((disallowedMethods != null) && disallowedMethods.contains(methodName))[ CD ]
Line_2 $$ private void getSyncedOperationsForName(Class implClass, String methodName) -->Line_63 $$ completedNames.add(methodName)[ FD ]
Line_45 $$ if (log.isDebugEnabled()) -->Line_46 $$ log.debug(Messages.getMessage("exception00"), e)[ CD ]
Line_54 $$ for (Iterator i = currentOverloads.iterator(); i.hasNext(); ) -->Line_55 $$ OperationDesc oper = (OperationDesc) i.next()[ CD ]
Line_51 $$ if (name2OperationsMap != null) -->Line_52 $$ ArrayList currentOverloads = (ArrayList) name2OperationsMap.get(methodName)[ CD ]
Line_2 $$ private void getSyncedOperationsForName(Class implClass, String methodName) -->Line_7 $$ if (implClass == null)[ FD ]
Line_29 $$ Iterator i = skelList.iterator()-->Line_54 $$ for (Iterator i = currentOverloads.iterator(); i.hasNext(); ) [ FD ]
Line_55 $$ OperationDesc oper = (OperationDesc) i.next()-->Line_56 $$ if (oper.getMethod() == null) [ FD ]
Line_2 $$ private void getSyncedOperationsForName(Class implClass, String methodName) -->Line_18 $$ skelMethod = implClass.getDeclaredMethod("getOperationDescByName", new Class[] [ FD ]
Line_7 $$ if (implClass == null)-->Line_8 $$ return[ CD ]
Line_2 $$ private void getSyncedOperationsForName(Class implClass, String methodName) -->Line_63 $$ completedNames.add(methodName)[ CD ]
Line_52 $$ ArrayList currentOverloads = (ArrayList) name2OperationsMap.get(methodName)-->Line_53 $$ if (currentOverloads != null) [ FD ]
Line_28 $$ if (skelList != null) -->Line_29 $$ Iterator i = skelList.iterator()[ CD ]
Line_2 $$ private void getSyncedOperationsForName(Class implClass, String methodName) -->Line_52 $$ ArrayList currentOverloads = (ArrayList) name2OperationsMap.get(methodName)[ FD ]
Line_54 $$ for (Iterator i = currentOverloads.iterator(); i.hasNext(); ) -->Line_56 $$ if (oper.getMethod() == null) [ CD ]
Line_29 $$ Iterator i = skelList.iterator()-->Line_31 $$ addOperationDesc((OperationDesc) i.next())[ FD ]
Line_54 $$ for (Iterator i = currentOverloads.iterator(); i.hasNext(); ) -->Line_55 $$ OperationDesc oper = (OperationDesc) i.next()[ FD ]
Line_27 $$ List skelList = (List) skelMethod.invoke(implClass, new Object[] -->Line_28 $$ if (skelList != null) [ FD ]
Line_2 $$ private void getSyncedOperationsForName(Class implClass, String methodName) -->Line_57 $$ syncOperationToClass(oper, implClass)[ FD ]
Line_56 $$ if (oper.getMethod() == null) -->Line_57 $$ syncOperationToClass(oper, implClass)[ CD ]
Line_22 $$ if (skelMethod == null) -->Line_23 $$ return[ CD ]
Line_52 $$ ArrayList currentOverloads = (ArrayList) name2OperationsMap.get(methodName)-->Line_54 $$ for (Iterator i = currentOverloads.iterator(); i.hasNext(); ) [ FD ]
Line_53 $$ if (currentOverloads != null) -->Line_54 $$ for (Iterator i = currentOverloads.iterator(); i.hasNext(); ) [ CD ]
Line_2 $$ private void getSyncedOperationsForName(Class implClass, String methodName) -->Line_15 $$ if (isSkeletonClass && !haveAllSkeletonMethods) [ CD ]
Line_55 $$ OperationDesc oper = (OperationDesc) i.next()-->Line_57 $$ syncOperationToClass(oper, implClass)[ FD ]
Line_28 $$ if (skelList != null) -->Line_30 $$ while (i.hasNext()) [ CD ]
Line_29 $$ Iterator i = skelList.iterator()-->Line_55 $$ OperationDesc oper = (OperationDesc) i.next()[ FD ]
Line_51 $$ if (name2OperationsMap != null) -->Line_53 $$ if (currentOverloads != null) [ CD ]
Line_40 $$ if (log.isDebugEnabled()) -->Line_41 $$ log.debug(Messages.getMessage("exception00"), e)[ CD ]
Line_2 $$ private void getSyncedOperationsForName(Class implClass, String methodName) -->Line_9 $$ if (completedNames == null || completedNames.contains(methodName))[ CD ]
Line_3 $$ if (isSkeletonClass) -->Line_4 $$ if (methodName.equals("getOperationDescByName") || methodName.equals("getOperationDescs"))[ CD ]
Line_15 $$ if (isSkeletonClass && !haveAllSkeletonMethods) -->Line_16 $$ if (skelMethod == null) [ CD ]
Line_2 $$ private void getSyncedOperationsForName(Class implClass, String methodName) -->Line_11 $$ if ((allowedMethods != null) && !allowedMethods.contains(methodName))[ CD ]
Line_2 $$ private void getSyncedOperationsForName(Class implClass, String methodName) -->Line_3 $$ if (isSkeletonClass) [ CD ]
Line_29 $$ Iterator i = skelList.iterator()-->Line_30 $$ while (i.hasNext()) [ FD ]
Line_13 $$ if ((disallowedMethods != null) && disallowedMethods.contains(methodName))-->Line_14 $$ return[ CD ]
Line_2 $$ private void getSyncedOperationsForName(Class implClass, String methodName) -->Line_13 $$ if ((disallowedMethods != null) && disallowedMethods.contains(methodName))[ FD ]
Line_16 $$ if (skelMethod == null) -->Line_22 $$ if (skelMethod == null) [ CD ]
Line_11 $$ if ((allowedMethods != null) && !allowedMethods.contains(methodName))-->Line_12 $$ return[ CD ]
Line_2 $$ private void getSyncedOperationsForName(Class implClass, String methodName) -->Line_9 $$ if (completedNames == null || completedNames.contains(methodName))[ FD ]
Line_2 $$ private void getSyncedOperationsForName(Class implClass, String methodName) -->Line_27 $$ List skelList = (List) skelMethod.invoke(implClass, new Object[] [ FD ]
Line_30 $$ while (i.hasNext()) -->Line_31 $$ addOperationDesc((OperationDesc) i.next())[ CD ]
Line_27 $$ List skelList = (List) skelMethod.invoke(implClass, new Object[] -->Line_29 $$ Iterator i = skelList.iterator()[ FD ]
Line_2 $$ private void getSyncedOperationsForName(Class implClass, String methodName) -->Line_62 $$ createOperationsForName(implClass, methodName)[ CD ]
Line_2 $$ private void getSyncedOperationsForName(Class implClass, String methodName) -->Line_7 $$ if (implClass == null)[ CD ]
Line_2 $$ private void getSyncedOperationsForName(Class implClass, String methodName) -->Line_11 $$ if ((allowedMethods != null) && !allowedMethods.contains(methodName))[ FD ]
Line_2 $$ private void getSyncedOperationsForName(Class implClass, String methodName) -->Line_62 $$ createOperationsForName(implClass, methodName)[ FD ]
