Line_3 $$ final JPanel panel = new JPanel(new BorderLayout())-->Line_19 $$ panel.setBackground(UIUtil.getTableBackground())[ FD ]
Line_4 $$ final EditorTextField field = new EditorTextField(text, project, type) -->Line_13 $$ field.setFont(font)[ FD ]
Line_20 $$ if (selected) -->Line_21 $$ panel.setBorder(new DottedBorder(UIUtil.getTableForeground()))[ CD ]
Line_4 $$ final EditorTextField field = new EditorTextField(text, project, type) -->Line_17 $$ field.setAsRendererWithSelection(UIUtil.getTableSelectionBackground(), UIUtil.getTableSelectionForeground())[ FD ]
Line_15 $$ if (selected && focused) -->Line_16 $$ panel.setBackground(UIUtil.getTableSelectionBackground())[ CD ]
Line_2 $$ public static JComponent createEditorTextFieldPresentation(final Project project, final FileType type, final String text, boolean selected, boolean focused) -->Line_15 $$ if (selected && focused) [ FD ]
Line_3 $$ final JPanel panel = new JPanel(new BorderLayout())-->Line_21 $$ panel.setBorder(new DottedBorder(UIUtil.getTableForeground()))[ FD ]
Line_2 $$ public static JComponent createEditorTextFieldPresentation(final Project project, final FileType type, final String text, boolean selected, boolean focused) -->Line_3 $$ final JPanel panel = new JPanel(new BorderLayout())[ CD ]
Line_15 $$ if (selected && focused) -->Line_19 $$ panel.setBackground(UIUtil.getTableBackground())[ CD ]
Line_2 $$ public static JComponent createEditorTextFieldPresentation(final Project project, final FileType type, final String text, boolean selected, boolean focused) -->Line_4 $$ final EditorTextField field = new EditorTextField(text, project, type) [ CD ]
Line_4 $$ final EditorTextField field = new EditorTextField(text, project, type) -->Line_14 $$ field.addSettingsProvider(EditorSettingsProvider.NO_WHITESPACE)[ FD ]
Line_3 $$ final JPanel panel = new JPanel(new BorderLayout())-->Line_16 $$ panel.setBackground(UIUtil.getTableSelectionBackground())[ FD ]
Line_15 $$ if (selected && focused) -->Line_20 $$ if (selected) [ CD ]
Line_4 $$ final EditorTextField field = new EditorTextField(text, project, type) -->Line_24 $$ panel.add(field, BorderLayout.WEST)[ FD ]
Line_2 $$ public static JComponent createEditorTextFieldPresentation(final Project project, final FileType type, final String text, boolean selected, boolean focused) -->Line_24 $$ panel.add(field, BorderLayout.WEST)[ CD ]
Line_2 $$ public static JComponent createEditorTextFieldPresentation(final Project project, final FileType type, final String text, boolean selected, boolean focused) -->Line_15 $$ if (selected && focused) [ CD ]
Line_2 $$ public static JComponent createEditorTextFieldPresentation(final Project project, final FileType type, final String text, boolean selected, boolean focused) -->Line_25 $$ return panel[ CD ]
Line_2 $$ public static JComponent createEditorTextFieldPresentation(final Project project, final FileType type, final String text, boolean selected, boolean focused) -->Line_14 $$ field.addSettingsProvider(EditorSettingsProvider.NO_WHITESPACE)[ CD ]
Line_2 $$ public static JComponent createEditorTextFieldPresentation(final Project project, final FileType type, final String text, boolean selected, boolean focused) -->Line_11 $$ Font font = EditorColorsManager.getInstance().getGlobalScheme().getFont(EditorFontType.PLAIN)[ CD ]
Line_4 $$ final EditorTextField field = new EditorTextField(text, project, type) -->Line_8 $$ return false[ CD ]
Line_3 $$ final JPanel panel = new JPanel(new BorderLayout())-->Line_24 $$ panel.add(field, BorderLayout.WEST)[ FD ]
Line_15 $$ if (selected && focused) -->Line_17 $$ field.setAsRendererWithSelection(UIUtil.getTableSelectionBackground(), UIUtil.getTableSelectionForeground())[ CD ]
Line_2 $$ public static JComponent createEditorTextFieldPresentation(final Project project, final FileType type, final String text, boolean selected, boolean focused) -->Line_13 $$ field.setFont(font)[ CD ]
