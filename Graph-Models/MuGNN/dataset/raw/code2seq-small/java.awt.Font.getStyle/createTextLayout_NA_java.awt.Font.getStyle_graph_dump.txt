Line_13 $$ Font font = basefont-->Line_22 $$ if (!Comparing.equal(currentFont, font)) [ FD ]
Line_16 $$ font = provider.getFontAbleToDisplay(c, basefont.getSize(), basefont.getStyle(), basefont.getFamily())-->Line_26 $$ currentFont = font[ FD ]
Line_23 $$ if (i > currentIndex) -->Line_24 $$ string.addAttribute(TextAttribute.FONT, currentFont, currentIndex, i)[ CD ]
Line_12 $$ for (char c = it.first(); c != CharacterIterator.DONE; c = it.next()) -->Line_21 $$ int i = it.getIndex()[ CD ]
Line_26 $$ currentFont = font-->Line_22 $$ if (!Comparing.equal(currentFont, font)) [ FD ]
Line_11 $$ int currentIndex = start-->Line_31 $$ string.addAttribute(TextAttribute.FONT, currentFont, currentIndex, end)[ FD ]
Line_8 $$ int end = text.length()-->Line_30 $$ if (currentIndex < end) [ FD ]
Line_8 $$ int end = text.length()-->Line_9 $$ AttributedCharacterIterator it = string.getIterator(new AttributedCharacterIterator.Attribute[0], start, end)[ FD ]
Line_11 $$ int currentIndex = start-->Line_23 $$ if (i > currentIndex) [ FD ]
Line_8 $$ int end = text.length()-->Line_31 $$ string.addAttribute(TextAttribute.FONT, currentFont, currentIndex, end)[ FD ]
Line_12 $$ for (char c = it.first(); c != CharacterIterator.DONE; c = it.next()) -->Line_14 $$ if (!font.canDisplay(c)) [ CD ]
Line_9 $$ AttributedCharacterIterator it = string.getIterator(new AttributedCharacterIterator.Attribute[0], start, end)-->Line_21 $$ int i = it.getIndex()[ FD ]
Line_11 $$ int currentIndex = start-->Line_30 $$ if (currentIndex < end) [ FD ]
Line_12 $$ for (char c = it.first(); c != CharacterIterator.DONE; c = it.next()) -->Line_13 $$ Font font = basefont[ CD ]
Line_27 $$ currentIndex = i-->Line_30 $$ if (currentIndex < end) [ FD ]
Line_12 $$ for (char c = it.first(); c != CharacterIterator.DONE; c = it.next()) -->Line_14 $$ if (!font.canDisplay(c)) [ FD ]
Line_6 $$ AttributedString string = new AttributedString(text)-->Line_24 $$ string.addAttribute(TextAttribute.FONT, currentFont, currentIndex, i)[ FD ]
Line_10 $$ Font currentFont = basefont-->Line_24 $$ string.addAttribute(TextAttribute.FONT, currentFont, currentIndex, i)[ FD ]
Line_13 $$ Font font = basefont-->Line_14 $$ if (!font.canDisplay(c)) [ FD ]
Line_12 $$ for (char c = it.first(); c != CharacterIterator.DONE; c = it.next()) -->Line_16 $$ font = provider.getFontAbleToDisplay(c, basefont.getSize(), basefont.getStyle(), basefont.getFamily())[ FD ]
Line_27 $$ currentIndex = i-->Line_24 $$ string.addAttribute(TextAttribute.FONT, currentFont, currentIndex, i)[ FD ]
Line_26 $$ currentFont = font-->Line_24 $$ string.addAttribute(TextAttribute.FONT, currentFont, currentIndex, i)[ FD ]
Line_16 $$ font = provider.getFontAbleToDisplay(c, basefont.getSize(), basefont.getStyle(), basefont.getFamily())-->Line_22 $$ if (!Comparing.equal(currentFont, font)) [ FD ]
Line_16 $$ font = provider.getFontAbleToDisplay(c, basefont.getSize(), basefont.getStyle(), basefont.getFamily())-->Line_17 $$ if (font != null)[ FD ]
Line_13 $$ Font font = basefont-->Line_17 $$ if (font != null)[ FD ]
Line_6 $$ AttributedString string = new AttributedString(text)-->Line_33 $$ return new TextLayout(string.getIterator(), fontRenderContext)[ FD ]
Line_30 $$ if (currentIndex < end) -->Line_31 $$ string.addAttribute(TextAttribute.FONT, currentFont, currentIndex, end)[ CD ]
Line_27 $$ currentIndex = i-->Line_23 $$ if (i > currentIndex) [ FD ]
Line_21 $$ int i = it.getIndex()-->Line_24 $$ string.addAttribute(TextAttribute.FONT, currentFont, currentIndex, i)[ FD ]
Line_12 $$ for (char c = it.first(); c != CharacterIterator.DONE; c = it.next()) -->Line_22 $$ if (!Comparing.equal(currentFont, font)) [ CD ]
Line_10 $$ Font currentFont = basefont-->Line_26 $$ currentFont = font[ FD ]
Line_6 $$ AttributedString string = new AttributedString(text)-->Line_31 $$ string.addAttribute(TextAttribute.FONT, currentFont, currentIndex, end)[ FD ]
Line_22 $$ if (!Comparing.equal(currentFont, font)) -->Line_23 $$ if (i > currentIndex) [ CD ]
Line_27 $$ currentIndex = i-->Line_31 $$ string.addAttribute(TextAttribute.FONT, currentFont, currentIndex, end)[ FD ]
Line_13 $$ Font font = basefont-->Line_16 $$ font = provider.getFontAbleToDisplay(c, basefont.getSize(), basefont.getStyle(), basefont.getFamily())[ FD ]
Line_22 $$ if (!Comparing.equal(currentFont, font)) -->Line_26 $$ currentFont = font[ CD ]
Line_4 $$ if (StringUtil.isEmpty(text))-->Line_5 $$ return null[ CD ]
Line_9 $$ AttributedCharacterIterator it = string.getIterator(new AttributedCharacterIterator.Attribute[0], start, end)-->Line_12 $$ for (char c = it.first(); c != CharacterIterator.DONE; c = it.next()) [ FD ]
Line_21 $$ int i = it.getIndex()-->Line_23 $$ if (i > currentIndex) [ FD ]
Line_21 $$ int i = it.getIndex()-->Line_27 $$ currentIndex = i[ FD ]
Line_7 $$ int start = 0-->Line_9 $$ AttributedCharacterIterator it = string.getIterator(new AttributedCharacterIterator.Attribute[0], start, end)[ FD ]
Line_15 $$ for (SuitableFontProvider provider : SuitableFontProvider.EP_NAME.getExtensions()) -->Line_16 $$ font = provider.getFontAbleToDisplay(c, basefont.getSize(), basefont.getStyle(), basefont.getFamily())[ FD ]
Line_6 $$ AttributedString string = new AttributedString(text)-->Line_9 $$ AttributedCharacterIterator it = string.getIterator(new AttributedCharacterIterator.Attribute[0], start, end)[ FD ]
Line_11 $$ int currentIndex = start-->Line_27 $$ currentIndex = i[ FD ]
Line_26 $$ currentFont = font-->Line_31 $$ string.addAttribute(TextAttribute.FONT, currentFont, currentIndex, end)[ FD ]
Line_22 $$ if (!Comparing.equal(currentFont, font)) -->Line_27 $$ currentIndex = i[ CD ]
Line_10 $$ Font currentFont = basefont-->Line_31 $$ string.addAttribute(TextAttribute.FONT, currentFont, currentIndex, end)[ FD ]
Line_16 $$ font = provider.getFontAbleToDisplay(c, basefont.getSize(), basefont.getStyle(), basefont.getFamily())-->Line_14 $$ if (!font.canDisplay(c)) [ FD ]
Line_13 $$ Font font = basefont-->Line_26 $$ currentFont = font[ FD ]
Line_10 $$ Font currentFont = basefont-->Line_22 $$ if (!Comparing.equal(currentFont, font)) [ FD ]
Line_11 $$ int currentIndex = start-->Line_24 $$ string.addAttribute(TextAttribute.FONT, currentFont, currentIndex, i)[ FD ]
