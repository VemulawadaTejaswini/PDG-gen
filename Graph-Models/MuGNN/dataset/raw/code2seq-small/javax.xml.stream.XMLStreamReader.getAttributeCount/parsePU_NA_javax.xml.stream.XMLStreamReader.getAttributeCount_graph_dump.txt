Line_55 $$ String text = getElement(reader, propertyReplacer)-->Line_56 $$ if (text == null || text.isEmpty()) [ FD ]
Line_93 $$ if (traceEnabled) -->Line_94 $$ ROOT_LOGGER.trace("parse persistence.xml: reached ending persistence-unit tag")[ CD ]
Line_3 $$ PersistenceUnitMetadata pu = new PersistenceUnitMetadataImpl()-->Line_70 $$ pu.setNonJtaDataSourceName(getElement(reader, propertyReplacer))[ FD ]
Line_20 $$ for (int i = 0; i < count; i++) -->Line_39 $$ throw unexpectedAttribute(reader, i)[ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_5 $$ List<String> jarFiles = new ArrayList<String>(1)[ CD ]
Line_3 $$ PersistenceUnitMetadata pu = new PersistenceUnitMetadataImpl()-->Line_8 $$ pu.setTransactionType(PersistenceUnitTransactionType.JTA)[ FD ]
Line_20 $$ for (int i = 0; i < count; i++) -->Line_26 $$ if (attributeNamespace != null && !attributeNamespace.isEmpty()) [ CD ]
Line_20 $$ for (int i = 0; i < count; i++) -->Line_25 $$ final String attributeNamespace = reader.getAttributeNamespace(i)[ CD ]
Line_43 $$ final Element element = Element.forName(reader.getLocalName())-->Line_45 $$ ROOT_LOGGER.tracef("parse persistence.xml: element=%s", element.getLocalName())[ FD ]
Line_3 $$ PersistenceUnitMetadata pu = new PersistenceUnitMetadataImpl()-->Line_98 $$ pu.setMappingFiles(mappingFiles)[ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_79 $$ pu.setPersistenceProviderClassName(getElement(reader, propertyReplacer))[ FD ]
Line_20 $$ for (int i = 0; i < count; i++) -->Line_29 $$ final Attribute attribute = Attribute.forName(reader.getAttributeLocalName(i))[ CD ]
Line_6 $$ List<String> mappingFiles = new ArrayList<String>(1)-->Line_73 $$ mappingFiles.add(getElement(reader, propertyReplacer))[ FD ]
Line_3 $$ PersistenceUnitMetadata pu = new PersistenceUnitMetadataImpl()-->Line_32 $$ pu.setPersistenceUnitName(value)[ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_86 $$ String validationMode = getElement(reader, propertyReplacer)[ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_90 $$ throw unexpectedElement(reader)[ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_21 $$ final String value = reader.getAttributeValue(i)[ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_76 $$ parseProperties(reader, properties, propertyReplacer)[ FD ]
Line_3 $$ PersistenceUnitMetadata pu = new PersistenceUnitMetadataImpl()-->Line_67 $$ pu.setJtaDataSourceName(getElement(reader, propertyReplacer))[ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_42 $$ while (reader.hasNext() && reader.nextTag() != END_ELEMENT) [ CD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_98 $$ pu.setMappingFiles(mappingFiles)[ CD ]
Line_3 $$ PersistenceUnitMetadata pu = new PersistenceUnitMetadataImpl()-->Line_36 $$ pu.setTransactionType(PersistenceUnitTransactionType.RESOURCE_LOCAL)[ FD ]
Line_42 $$ while (reader.hasNext() && reader.nextTag() != END_ELEMENT) -->Line_44 $$ if (traceEnabled) [ CD ]
Line_55 $$ String text = getElement(reader, propertyReplacer)-->Line_59 $$ pu.setExcludeUnlistedClasses(Boolean.valueOf(text))[ FD ]
Line_3 $$ PersistenceUnitMetadata pu = new PersistenceUnitMetadataImpl()-->Line_11 $$ pu.setPersistenceProviderClassName(Configuration.PROVIDER_CLASS_DEFAULT)[ FD ]
Line_22 $$ if (traceEnabled) -->Line_23 $$ ROOT_LOGGER.tracef("parse persistence.xml: attribute value(%d) = %s", i, value)[ CD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_19 $$ final int count = reader.getAttributeCount()[ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_29 $$ final Attribute attribute = Attribute.forName(reader.getAttributeLocalName(i))[ FD ]
Line_21 $$ final String value = reader.getAttributeValue(i)-->Line_23 $$ ROOT_LOGGER.tracef("parse persistence.xml: attribute value(%d) = %s", i, value)[ FD ]
Line_44 $$ if (traceEnabled) -->Line_45 $$ ROOT_LOGGER.tracef("parse persistence.xml: element=%s", element.getLocalName())[ CD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_49 $$ classes.add(getElement(reader, propertyReplacer))[ FD ]
Line_63 $$ String file = getElement(reader, propertyReplacer)-->Line_64 $$ jarFiles.add(file)[ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_97 $$ pu.setJarFiles(jarFiles)[ CD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_70 $$ pu.setNonJtaDataSourceName(getElement(reader, propertyReplacer))[ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_12 $$ if (version.equals(Version.JPA_1_0)) [ CD ]
Line_20 $$ for (int i = 0; i < count; i++) -->Line_21 $$ final String value = reader.getAttributeValue(i)[ FD ]
Line_82 $$ String cm = getElement(reader, propertyReplacer)-->Line_83 $$ pu.setSharedCacheMode(SharedCacheMode.valueOf(cm))[ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_25 $$ final String attributeNamespace = reader.getAttributeNamespace(i)[ FD ]
Line_6 $$ List<String> mappingFiles = new ArrayList<String>(1)-->Line_98 $$ pu.setMappingFiles(mappingFiles)[ FD ]
Line_14 $$ if (version.equals(Version.JPA_2_0)) -->Line_17 $$ pu.setPersistenceXMLSchemaVersion("2.1")[ CD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_67 $$ pu.setJtaDataSourceName(getElement(reader, propertyReplacer))[ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_55 $$ String text = getElement(reader, propertyReplacer)[ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_63 $$ String file = getElement(reader, propertyReplacer)[ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_9 $$ pu.setValidationMode(ValidationMode.AUTO)[ CD ]
Line_3 $$ PersistenceUnitMetadata pu = new PersistenceUnitMetadataImpl()-->Line_96 $$ pu.setManagedClassNames(classes)[ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_96 $$ pu.setManagedClassNames(classes)[ CD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_20 $$ for (int i = 0; i < count; i++) [ CD ]
Line_12 $$ if (version.equals(Version.JPA_1_0)) -->Line_14 $$ if (version.equals(Version.JPA_2_0)) [ CD ]
Line_3 $$ PersistenceUnitMetadata pu = new PersistenceUnitMetadataImpl()-->Line_79 $$ pu.setPersistenceProviderClassName(getElement(reader, propertyReplacer))[ FD ]
Line_3 $$ PersistenceUnitMetadata pu = new PersistenceUnitMetadataImpl()-->Line_83 $$ pu.setSharedCacheMode(SharedCacheMode.valueOf(cm))[ FD ]
Line_20 $$ for (int i = 0; i < count; i++) -->Line_25 $$ final String attributeNamespace = reader.getAttributeNamespace(i)[ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_4 $$ List<String> classes = new ArrayList<String>(1)[ CD ]
Line_25 $$ final String attributeNamespace = reader.getAttributeNamespace(i)-->Line_26 $$ if (attributeNamespace != null && !attributeNamespace.isEmpty()) [ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_42 $$ while (reader.hasNext() && reader.nextTag() != END_ELEMENT) [ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_93 $$ if (traceEnabled) [ CD ]
Line_21 $$ final String value = reader.getAttributeValue(i)-->Line_35 $$ if (value.equalsIgnoreCase("RESOURCE_LOCAL"))[ FD ]
Line_7 $$ Properties properties = new Properties()-->Line_99 $$ pu.setProperties(properties)[ FD ]
Line_56 $$ if (text == null || text.isEmpty()) -->Line_57 $$ pu.setExcludeUnlistedClasses(true)[ CD ]
Line_4 $$ List<String> classes = new ArrayList<String>(1)-->Line_49 $$ classes.add(getElement(reader, propertyReplacer))[ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_14 $$ if (version.equals(Version.JPA_2_0)) [ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_3 $$ PersistenceUnitMetadata pu = new PersistenceUnitMetadataImpl()[ CD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_100 $$ return pu[ CD ]
Line_86 $$ String validationMode = getElement(reader, propertyReplacer)-->Line_87 $$ pu.setValidationMode(ValidationMode.valueOf(validationMode))[ FD ]
Line_21 $$ final String value = reader.getAttributeValue(i)-->Line_32 $$ pu.setPersistenceUnitName(value)[ FD ]
Line_3 $$ PersistenceUnitMetadata pu = new PersistenceUnitMetadataImpl()-->Line_9 $$ pu.setValidationMode(ValidationMode.AUTO)[ FD ]
Line_42 $$ while (reader.hasNext() && reader.nextTag() != END_ELEMENT) -->Line_43 $$ final Element element = Element.forName(reader.getLocalName())[ CD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_43 $$ final Element element = Element.forName(reader.getLocalName())[ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_11 $$ pu.setPersistenceProviderClassName(Configuration.PROVIDER_CLASS_DEFAULT)[ CD ]
Line_35 $$ if (value.equalsIgnoreCase("RESOURCE_LOCAL"))-->Line_36 $$ pu.setTransactionType(PersistenceUnitTransactionType.RESOURCE_LOCAL)[ CD ]
Line_56 $$ if (text == null || text.isEmpty()) -->Line_59 $$ pu.setExcludeUnlistedClasses(Boolean.valueOf(text))[ CD ]
Line_20 $$ for (int i = 0; i < count; i++) -->Line_23 $$ ROOT_LOGGER.tracef("parse persistence.xml: attribute value(%d) = %s", i, value)[ FD ]
Line_20 $$ for (int i = 0; i < count; i++) -->Line_29 $$ final Attribute attribute = Attribute.forName(reader.getAttributeLocalName(i))[ FD ]
Line_3 $$ PersistenceUnitMetadata pu = new PersistenceUnitMetadataImpl()-->Line_57 $$ pu.setExcludeUnlistedClasses(true)[ FD ]
Line_7 $$ Properties properties = new Properties()-->Line_76 $$ parseProperties(reader, properties, propertyReplacer)[ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_6 $$ List<String> mappingFiles = new ArrayList<String>(1)[ CD ]
Line_20 $$ for (int i = 0; i < count; i++) -->Line_22 $$ if (traceEnabled) [ CD ]
Line_14 $$ if (version.equals(Version.JPA_2_0)) -->Line_15 $$ pu.setPersistenceXMLSchemaVersion("2.0")[ CD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_99 $$ pu.setProperties(properties)[ CD ]
Line_4 $$ List<String> classes = new ArrayList<String>(1)-->Line_96 $$ pu.setManagedClassNames(classes)[ FD ]
Line_3 $$ PersistenceUnitMetadata pu = new PersistenceUnitMetadataImpl()-->Line_15 $$ pu.setPersistenceXMLSchemaVersion("2.0")[ FD ]
Line_3 $$ PersistenceUnitMetadata pu = new PersistenceUnitMetadataImpl()-->Line_17 $$ pu.setPersistenceXMLSchemaVersion("2.1")[ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_19 $$ final int count = reader.getAttributeCount()[ CD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_39 $$ throw unexpectedAttribute(reader, i)[ FD ]
Line_3 $$ PersistenceUnitMetadata pu = new PersistenceUnitMetadataImpl()-->Line_59 $$ pu.setExcludeUnlistedClasses(Boolean.valueOf(text))[ FD ]
Line_3 $$ PersistenceUnitMetadata pu = new PersistenceUnitMetadataImpl()-->Line_13 $$ pu.setPersistenceXMLSchemaVersion("1.0")[ FD ]
Line_3 $$ PersistenceUnitMetadata pu = new PersistenceUnitMetadataImpl()-->Line_10 $$ pu.setSharedCacheMode(SharedCacheMode.UNSPECIFIED)[ FD ]
Line_19 $$ final int count = reader.getAttributeCount()-->Line_20 $$ for (int i = 0; i < count; i++) [ FD ]
Line_12 $$ if (version.equals(Version.JPA_1_0)) -->Line_13 $$ pu.setPersistenceXMLSchemaVersion("1.0")[ CD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_7 $$ Properties properties = new Properties()[ CD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_12 $$ if (version.equals(Version.JPA_1_0)) [ FD ]
Line_20 $$ for (int i = 0; i < count; i++) -->Line_21 $$ final String value = reader.getAttributeValue(i)[ CD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_52 $$ final String description = getElement(reader, propertyReplacer)[ FD ]
Line_3 $$ PersistenceUnitMetadata pu = new PersistenceUnitMetadataImpl()-->Line_99 $$ pu.setProperties(properties)[ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_8 $$ pu.setTransactionType(PersistenceUnitTransactionType.JTA)[ CD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_82 $$ String cm = getElement(reader, propertyReplacer)[ FD ]
Line_3 $$ PersistenceUnitMetadata pu = new PersistenceUnitMetadataImpl()-->Line_97 $$ pu.setJarFiles(jarFiles)[ FD ]
Line_5 $$ List<String> jarFiles = new ArrayList<String>(1)-->Line_97 $$ pu.setJarFiles(jarFiles)[ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_10 $$ pu.setSharedCacheMode(SharedCacheMode.UNSPECIFIED)[ CD ]
Line_5 $$ List<String> jarFiles = new ArrayList<String>(1)-->Line_64 $$ jarFiles.add(file)[ FD ]
Line_3 $$ PersistenceUnitMetadata pu = new PersistenceUnitMetadataImpl()-->Line_87 $$ pu.setValidationMode(ValidationMode.valueOf(validationMode))[ FD ]
Line_2 $$ private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_73 $$ mappingFiles.add(getElement(reader, propertyReplacer))[ FD ]
