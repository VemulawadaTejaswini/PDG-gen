Line_11 $$ if (uri.isOpaque()) -->Line_27 $$ if (StringUtils.hasLength(uri.getRawQuery())) [ CD ]
Line_15 $$ if (uri.getRawUserInfo() != null) -->Line_16 $$ this.userInfo = uri.getRawUserInfo()[ CD ]
Line_11 $$ if (uri.isOpaque()) -->Line_24 $$ if (StringUtils.hasLength(uri.getRawPath())) [ CD ]
Line_11 $$ if (uri.isOpaque()) -->Line_31 $$ resetSchemeSpecificPart()[ CD ]
Line_11 $$ if (uri.isOpaque()) -->Line_21 $$ if (uri.getPort() != -1) [ CD ]
Line_21 $$ if (uri.getPort() != -1) -->Line_22 $$ this.port = String.valueOf(uri.getPort())[ CD ]
Line_33 $$ if (uri.getRawFragment() != null) -->Line_34 $$ this.fragment = uri.getRawFragment()[ CD ]
Line_11 $$ if (uri.isOpaque()) -->Line_18 $$ if (uri.getHost() != null) [ CD ]
Line_18 $$ if (uri.getHost() != null) -->Line_19 $$ this.host = uri.getHost()[ CD ]
Line_11 $$ if (uri.isOpaque()) -->Line_15 $$ if (uri.getRawUserInfo() != null) [ CD ]
Line_11 $$ if (uri.isOpaque()) -->Line_13 $$ resetHierarchicalComponents()[ CD ]
Line_24 $$ if (StringUtils.hasLength(uri.getRawPath())) -->Line_25 $$ this.pathBuilder = new CompositePathComponentBuilder(uri.getRawPath())[ CD ]
Line_27 $$ if (StringUtils.hasLength(uri.getRawQuery())) -->Line_29 $$ query(uri.getRawQuery())[ CD ]
Line_27 $$ if (StringUtils.hasLength(uri.getRawQuery())) -->Line_28 $$ this.queryParams.clear()[ CD ]
Line_11 $$ if (uri.isOpaque()) -->Line_12 $$ this.ssp = uri.getRawSchemeSpecificPart()[ CD ]
