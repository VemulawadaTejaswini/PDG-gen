Line_16 $$ final Class<?> serviceRefType = getClass(classLoader, serviceRefTypeName)-->Line_17 $$ processInjectionTargets(resourceInjectionTarget, valueSource, classLoader, deploymentReflectionIndex, serviceRefMD, serviceRefType)[ FD ]
Line_2 $$ protected List<BindingConfiguration> processDescriptorEntries(final DeploymentUnit unit, final DeploymentDescriptorEnvironment environment, final ResourceInjectionTarget resourceInjectionTarget, final ComponentDescription componentDescription, final ClassLoader classLoader, final DeploymentReflectionIndex deploymentReflectionIndex, final EEApplicationClasses applicationClasses) throws DeploymentUnitProcessingException -->Line_19 $$ return bindingDescriptions[ CD ]
Line_2 $$ protected List<BindingConfiguration> processDescriptorEntries(final DeploymentUnit unit, final DeploymentDescriptorEnvironment environment, final ResourceInjectionTarget resourceInjectionTarget, final ComponentDescription componentDescription, final ClassLoader classLoader, final DeploymentReflectionIndex deploymentReflectionIndex, final EEApplicationClasses applicationClasses) throws DeploymentUnitProcessingException -->Line_16 $$ final Class<?> serviceRefType = getClass(classLoader, serviceRefTypeName)[ FD ]
Line_2 $$ protected List<BindingConfiguration> processDescriptorEntries(final DeploymentUnit unit, final DeploymentDescriptorEnvironment environment, final ResourceInjectionTarget resourceInjectionTarget, final ComponentDescription componentDescription, final ClassLoader classLoader, final DeploymentReflectionIndex deploymentReflectionIndex, final EEApplicationClasses applicationClasses) throws DeploymentUnitProcessingException -->Line_3 $$ final ServiceReferencesMetaData serviceRefsMD = environment.getEnvironment().getServiceReferences()[ CD ]
Line_2 $$ protected List<BindingConfiguration> processDescriptorEntries(final DeploymentUnit unit, final DeploymentDescriptorEnvironment environment, final ResourceInjectionTarget resourceInjectionTarget, final ComponentDescription componentDescription, final ClassLoader classLoader, final DeploymentReflectionIndex deploymentReflectionIndex, final EEApplicationClasses applicationClasses) throws DeploymentUnitProcessingException -->Line_9 $$ final UnifiedServiceRefMetaData serviceRefUMDM = getServiceRef(unit, componentDescription, serviceRefMD)[ FD ]
Line_3 $$ final ServiceReferencesMetaData serviceRefsMD = environment.getEnvironment().getServiceReferences()-->Line_4 $$ if (serviceRefsMD == null) [ FD ]
Line_2 $$ protected List<BindingConfiguration> processDescriptorEntries(final DeploymentUnit unit, final DeploymentDescriptorEnvironment environment, final ResourceInjectionTarget resourceInjectionTarget, final ComponentDescription componentDescription, final ClassLoader classLoader, final DeploymentReflectionIndex deploymentReflectionIndex, final EEApplicationClasses applicationClasses) throws DeploymentUnitProcessingException -->Line_3 $$ final ServiceReferencesMetaData serviceRefsMD = environment.getEnvironment().getServiceReferences()[ FD ]
Line_2 $$ protected List<BindingConfiguration> processDescriptorEntries(final DeploymentUnit unit, final DeploymentDescriptorEnvironment environment, final ResourceInjectionTarget resourceInjectionTarget, final ComponentDescription componentDescription, final ClassLoader classLoader, final DeploymentReflectionIndex deploymentReflectionIndex, final EEApplicationClasses applicationClasses) throws DeploymentUnitProcessingException -->Line_7 $$ final List<BindingConfiguration> bindingDescriptions = new LinkedList<BindingConfiguration>()[ CD ]
Line_12 $$ final FixedInjectionSource valueSource = new FixedInjectionSource(factory, factory)-->Line_17 $$ processInjectionTargets(resourceInjectionTarget, valueSource, classLoader, deploymentReflectionIndex, serviceRefMD, serviceRefType)[ FD ]
Line_8 $$ for (final ServiceReferenceMetaData serviceRefMD : serviceRefsMD) -->Line_17 $$ processInjectionTargets(resourceInjectionTarget, valueSource, classLoader, deploymentReflectionIndex, serviceRefMD, serviceRefType)[ FD ]
Line_2 $$ protected List<BindingConfiguration> processDescriptorEntries(final DeploymentUnit unit, final DeploymentDescriptorEnvironment environment, final ResourceInjectionTarget resourceInjectionTarget, final ComponentDescription componentDescription, final ClassLoader classLoader, final DeploymentReflectionIndex deploymentReflectionIndex, final EEApplicationClasses applicationClasses) throws DeploymentUnitProcessingException -->Line_10 $$ final Module module = unit.getAttachment(Attachments.MODULE)[ FD ]
Line_13 $$ final BindingConfiguration bindingConfiguration = new BindingConfiguration(serviceRefUMDM.getServiceRefName(), valueSource)-->Line_14 $$ bindingDescriptions.add(bindingConfiguration)[ FD ]
Line_9 $$ final UnifiedServiceRefMetaData serviceRefUMDM = getServiceRef(unit, componentDescription, serviceRefMD)-->Line_15 $$ final String serviceRefTypeName = serviceRefUMDM.getServiceRefType()[ FD ]
Line_15 $$ final String serviceRefTypeName = serviceRefUMDM.getServiceRefType()-->Line_16 $$ final Class<?> serviceRefType = getClass(classLoader, serviceRefTypeName)[ FD ]
Line_8 $$ for (final ServiceReferenceMetaData serviceRefMD : serviceRefsMD) -->Line_9 $$ final UnifiedServiceRefMetaData serviceRefUMDM = getServiceRef(unit, componentDescription, serviceRefMD)[ FD ]
Line_2 $$ protected List<BindingConfiguration> processDescriptorEntries(final DeploymentUnit unit, final DeploymentDescriptorEnvironment environment, final ResourceInjectionTarget resourceInjectionTarget, final ComponentDescription componentDescription, final ClassLoader classLoader, final DeploymentReflectionIndex deploymentReflectionIndex, final EEApplicationClasses applicationClasses) throws DeploymentUnitProcessingException -->Line_17 $$ processInjectionTargets(resourceInjectionTarget, valueSource, classLoader, deploymentReflectionIndex, serviceRefMD, serviceRefType)[ FD ]
Line_7 $$ final List<BindingConfiguration> bindingDescriptions = new LinkedList<BindingConfiguration>()-->Line_14 $$ bindingDescriptions.add(bindingConfiguration)[ FD ]
Line_4 $$ if (serviceRefsMD == null) -->Line_5 $$ return Collections.<BindingConfiguration>emptyList()[ CD ]
Line_9 $$ final UnifiedServiceRefMetaData serviceRefUMDM = getServiceRef(unit, componentDescription, serviceRefMD)-->Line_13 $$ final BindingConfiguration bindingConfiguration = new BindingConfiguration(serviceRefUMDM.getServiceRefName(), valueSource)[ FD ]
Line_10 $$ final Module module = unit.getAttachment(Attachments.MODULE)-->Line_11 $$ WebServiceManagedReferenceFactory factory = new WebServiceManagedReferenceFactory(serviceRefUMDM, module.getClassLoader())[ FD ]
Line_2 $$ protected List<BindingConfiguration> processDescriptorEntries(final DeploymentUnit unit, final DeploymentDescriptorEnvironment environment, final ResourceInjectionTarget resourceInjectionTarget, final ComponentDescription componentDescription, final ClassLoader classLoader, final DeploymentReflectionIndex deploymentReflectionIndex, final EEApplicationClasses applicationClasses) throws DeploymentUnitProcessingException -->Line_4 $$ if (serviceRefsMD == null) [ CD ]
