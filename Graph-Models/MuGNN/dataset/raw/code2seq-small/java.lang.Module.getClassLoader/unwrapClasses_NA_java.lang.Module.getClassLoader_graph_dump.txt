Line_8 $$ ModuleIdentifier moduleID = ModuleIdentifier.create(moduleName)-->Line_9 $$ Module module = Module.getCallerModuleLoader().loadModule(moduleID)[ FD ]
Line_5 $$ String className = classModel.get(NAME).asString()-->Line_10 $$ Class<?> clazz = module.getClassLoader().loadClass(className)[ FD ]
Line_5 $$ String className = classModel.get(NAME).asString()-->Line_13 $$ throw MessagingLogger.ROOT_LOGGER.unableToLoadClassFromModule(className, moduleName)[ FD ]
Line_10 $$ Class<?> clazz = module.getClassLoader().loadClass(className)-->Line_11 $$ classes.add(clazz)[ FD ]
Line_6 $$ String moduleName = classModel.get(MODULE).asString()-->Line_13 $$ throw MessagingLogger.ROOT_LOGGER.unableToLoadClassFromModule(className, moduleName)[ FD ]
Line_9 $$ Module module = Module.getCallerModuleLoader().loadModule(moduleID)-->Line_10 $$ Class<?> clazz = module.getClassLoader().loadClass(className)[ FD ]
Line_4 $$ for (ModelNode classModel : classesModel) -->Line_5 $$ String className = classModel.get(NAME).asString()[ FD ]
Line_3 $$ List<Class> classes = new ArrayList()-->Line_11 $$ classes.add(clazz)[ FD ]
Line_6 $$ String moduleName = classModel.get(MODULE).asString()-->Line_8 $$ ModuleIdentifier moduleID = ModuleIdentifier.create(moduleName)[ FD ]
Line_2 $$ private List<Class> unwrapClasses(List<ModelNode> classesModel) throws OperationFailedException -->Line_3 $$ List<Class> classes = new ArrayList()[ CD ]
Line_4 $$ for (ModelNode classModel : classesModel) -->Line_6 $$ String moduleName = classModel.get(MODULE).asString()[ FD ]
Line_2 $$ private List<Class> unwrapClasses(List<ModelNode> classesModel) throws OperationFailedException -->Line_16 $$ return classes[ CD ]
