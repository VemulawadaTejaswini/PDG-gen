Line_2 $$ public boolean isAccessible(BeanDeploymentArchive target) -->Line_24 $$ Iterator<String> iterator = target.getBeanClasses().iterator()[ FD ]
Line_2 $$ public boolean isAccessible(BeanDeploymentArchive target) -->Line_7 $$ if (that.getModule() == null) [ CD ]
Line_2 $$ public boolean isAccessible(BeanDeploymentArchive target) -->Line_25 $$ if (iterator.hasNext()) [ CD ]
Line_7 $$ if (that.getModule() == null) -->Line_8 $$ return true[ CD ]
Line_2 $$ public boolean isAccessible(BeanDeploymentArchive target) -->Line_10 $$ if (module == null) [ CD ]
Line_10 $$ if (module == null) -->Line_11 $$ return that.getModule() == null[ CD ]
Line_17 $$ if (dependency instanceof ModuleDependencySpec) -->Line_19 $$ if (moduleDependency.getIdentifier().equals(that.getModule().getIdentifier())) [ CD ]
Line_24 $$ Iterator<String> iterator = target.getBeanClasses().iterator()-->Line_26 $$ Class<?> clazz = Reflections.loadClass(iterator.next(), module.getClassLoader())[ FD ]
Line_2 $$ public boolean isAccessible(BeanDeploymentArchive target) -->Line_3 $$ if (this == target) [ FD ]
Line_25 $$ if (iterator.hasNext()) -->Line_26 $$ Class<?> clazz = Reflections.loadClass(iterator.next(), module.getClassLoader())[ CD ]
Line_27 $$ if (clazz != null) -->Line_28 $$ Module classModule = Module.forClass(clazz)[ CD ]
Line_26 $$ Class<?> clazz = Reflections.loadClass(iterator.next(), module.getClassLoader())-->Line_27 $$ if (clazz != null) [ FD ]
Line_25 $$ if (iterator.hasNext()) -->Line_27 $$ if (clazz != null) [ CD ]
Line_27 $$ if (clazz != null) -->Line_29 $$ return classModule != null && classModule.equals(that.getModule())[ CD ]
Line_2 $$ public boolean isAccessible(BeanDeploymentArchive target) -->Line_3 $$ if (this == target) [ CD ]
Line_16 $$ for (DependencySpec dependency : module.getDependencies()) -->Line_17 $$ if (dependency instanceof ModuleDependencySpec) [ FD ]
Line_26 $$ Class<?> clazz = Reflections.loadClass(iterator.next(), module.getClassLoader())-->Line_28 $$ Module classModule = Module.forClass(clazz)[ FD ]
Line_6 $$ BeanDeploymentArchiveImpl that = (BeanDeploymentArchiveImpl) target-->Line_19 $$ if (moduleDependency.getIdentifier().equals(that.getModule().getIdentifier())) [ FD ]
Line_6 $$ BeanDeploymentArchiveImpl that = (BeanDeploymentArchiveImpl) target-->Line_11 $$ return that.getModule() == null[ FD ]
Line_24 $$ Iterator<String> iterator = target.getBeanClasses().iterator()-->Line_25 $$ if (iterator.hasNext()) [ FD ]
Line_6 $$ BeanDeploymentArchiveImpl that = (BeanDeploymentArchiveImpl) target-->Line_29 $$ return classModule != null && classModule.equals(that.getModule())[ FD ]
Line_2 $$ public boolean isAccessible(BeanDeploymentArchive target) -->Line_24 $$ Iterator<String> iterator = target.getBeanClasses().iterator()[ CD ]
Line_17 $$ if (dependency instanceof ModuleDependencySpec) -->Line_18 $$ ModuleDependencySpec moduleDependency = (ModuleDependencySpec) dependency[ CD ]
Line_3 $$ if (this == target) -->Line_4 $$ return true[ CD ]
Line_2 $$ public boolean isAccessible(BeanDeploymentArchive target) -->Line_6 $$ BeanDeploymentArchiveImpl that = (BeanDeploymentArchiveImpl) target[ CD ]
Line_19 $$ if (moduleDependency.getIdentifier().equals(that.getModule().getIdentifier())) -->Line_20 $$ return true[ CD ]
Line_2 $$ public boolean isAccessible(BeanDeploymentArchive target) -->Line_32 $$ return false[ CD ]
Line_28 $$ Module classModule = Module.forClass(clazz)-->Line_29 $$ return classModule != null && classModule.equals(that.getModule())[ FD ]
Line_2 $$ public boolean isAccessible(BeanDeploymentArchive target) -->Line_13 $$ if (module.equals(that.getModule())) [ CD ]
Line_18 $$ ModuleDependencySpec moduleDependency = (ModuleDependencySpec) dependency-->Line_19 $$ if (moduleDependency.getIdentifier().equals(that.getModule().getIdentifier())) [ FD ]
Line_13 $$ if (module.equals(that.getModule())) -->Line_14 $$ return true[ CD ]
Line_6 $$ BeanDeploymentArchiveImpl that = (BeanDeploymentArchiveImpl) target-->Line_7 $$ if (that.getModule() == null) [ FD ]
Line_6 $$ BeanDeploymentArchiveImpl that = (BeanDeploymentArchiveImpl) target-->Line_13 $$ if (module.equals(that.getModule())) [ FD ]
