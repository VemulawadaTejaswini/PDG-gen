Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_4 $$ if (isTxRequired(method)) [ CD ]
Line_20 $$ if (this.transactionManager.getStatus() == Status.STATUS_ACTIVE) -->Line_21 $$ this.transactionManager.commit()[ CD ]
Line_5 $$ if (this.transactionManager.getStatus() == Status.STATUS_NO_TRANSACTION) -->Line_7 $$ isManagedTransaction = true[ CD ]
Line_5 $$ if (this.transactionManager.getStatus() == Status.STATUS_NO_TRANSACTION) -->Line_6 $$ this.transactionManager.begin()[ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_4 $$ if (isTxRequired(method)) [ FD ]
Line_4 $$ if (isTxRequired(method)) -->Line_5 $$ if (this.transactionManager.getStatus() == Status.STATUS_NO_TRANSACTION) [ CD ]
Line_4 $$ if (isTxRequired(method)) -->Line_9 $$ this.entityManager.joinTransaction()[ CD ]
Line_13 $$ if (this.entityModule != null) -->Line_14 $$ Thread.currentThread().setContextClassLoader(this.entityModule.getClassLoader())[ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_11 $$ ClassLoader originalClassLoader = Thread.currentThread().getContextClassLoader()[ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_16 $$ return method.invoke(this.entityManager, args)[ FD ]
Line_20 $$ if (this.transactionManager.getStatus() == Status.STATUS_ACTIVE) -->Line_22 $$ this.transactionManager.suspend()[ CD ]
Line_3 $$ boolean isManagedTransaction = false-->Line_7 $$ isManagedTransaction = true[ FD ]
Line_19 $$ if (isManagedTransaction) -->Line_20 $$ if (this.transactionManager.getStatus() == Status.STATUS_ACTIVE) [ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_3 $$ boolean isManagedTransaction = false[ CD ]
Line_11 $$ ClassLoader originalClassLoader = Thread.currentThread().getContextClassLoader()-->Line_18 $$ Thread.currentThread().setContextClassLoader(originalClassLoader)[ FD ]
