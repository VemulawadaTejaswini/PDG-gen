Line_11 $$ Boolean hasWeldDependencies = processedStaticModules.get(definingModule.getIdentifier())-->Line_15 $$ logWarning = processedStaticModules.putIfAbsent(definingModule.getIdentifier(), hasWeldDependencies) == null[ FD ]
Line_13 $$ if (hasWeldDependencies == null) -->Line_14 $$ hasWeldDependencies = canLoadWeldProxies(definingModule)[ CD ]
Line_2 $$ private ClassLoader _getClassLoader(Class<?> proxiedBeanType) -->Line_3 $$ if (proxiedBeanType.getName().startsWith("java")) [ CD ]
Line_2 $$ private ClassLoader _getClassLoader(Class<?> proxiedBeanType) -->Line_6 $$ final ModuleClassLoader loader = (ModuleClassLoader) proxiedBeanType.getClassLoader()[ FD ]
Line_10 $$ final Module definingModule = loader.getModule()-->Line_21 $$ WeldLogger.ROOT_LOGGER.loadingProxiesUsingDeploymentClassLoader(definingModule.getIdentifier(), Arrays.toString(REQUIRED_WELD_DEPENDENCIES))[ FD ]
Line_12 $$ boolean logWarning = false-->Line_15 $$ logWarning = processedStaticModules.putIfAbsent(definingModule.getIdentifier(), hasWeldDependencies) == null[ FD ]
Line_7 $$ if (loader.getModule().getModuleLoader() instanceof ServiceModuleLoader) -->Line_13 $$ if (hasWeldDependencies == null) [ CD ]
Line_7 $$ if (loader.getModule().getModuleLoader() instanceof ServiceModuleLoader) -->Line_11 $$ Boolean hasWeldDependencies = processedStaticModules.get(definingModule.getIdentifier())[ CD ]
Line_7 $$ if (loader.getModule().getModuleLoader() instanceof ServiceModuleLoader) -->Line_12 $$ boolean logWarning = false[ CD ]
Line_17 $$ if (hasWeldDependencies) -->Line_18 $$ return proxiedBeanType.getClassLoader()[ CD ]
Line_10 $$ final Module definingModule = loader.getModule()-->Line_14 $$ hasWeldDependencies = canLoadWeldProxies(definingModule)[ FD ]
Line_2 $$ private ClassLoader _getClassLoader(Class<?> proxiedBeanType) -->Line_27 $$ return proxiedBeanType.getClassLoader()[ FD ]
Line_7 $$ if (loader.getModule().getModuleLoader() instanceof ServiceModuleLoader) -->Line_8 $$ return proxiedBeanType.getClassLoader()[ CD ]
Line_6 $$ final ModuleClassLoader loader = (ModuleClassLoader) proxiedBeanType.getClassLoader()-->Line_7 $$ if (loader.getModule().getModuleLoader() instanceof ServiceModuleLoader) [ FD ]
Line_3 $$ if (proxiedBeanType.getName().startsWith("java")) -->Line_5 $$ if (proxiedBeanType.getClassLoader() instanceof ModuleClassLoader) [ CD ]
Line_5 $$ if (proxiedBeanType.getClassLoader() instanceof ModuleClassLoader) -->Line_27 $$ return proxiedBeanType.getClassLoader()[ CD ]
Line_11 $$ Boolean hasWeldDependencies = processedStaticModules.get(definingModule.getIdentifier())-->Line_13 $$ if (hasWeldDependencies == null) [ FD ]
Line_2 $$ private ClassLoader _getClassLoader(Class<?> proxiedBeanType) -->Line_5 $$ if (proxiedBeanType.getClassLoader() instanceof ModuleClassLoader) [ FD ]
Line_7 $$ if (loader.getModule().getModuleLoader() instanceof ServiceModuleLoader) -->Line_10 $$ final Module definingModule = loader.getModule()[ CD ]
Line_6 $$ final ModuleClassLoader loader = (ModuleClassLoader) proxiedBeanType.getClassLoader()-->Line_10 $$ final Module definingModule = loader.getModule()[ FD ]
Line_13 $$ if (hasWeldDependencies == null) -->Line_15 $$ logWarning = processedStaticModules.putIfAbsent(definingModule.getIdentifier(), hasWeldDependencies) == null[ CD ]
Line_3 $$ if (proxiedBeanType.getName().startsWith("java")) -->Line_4 $$ return module.getClassLoader()[ CD ]
Line_10 $$ final Module definingModule = loader.getModule()-->Line_15 $$ logWarning = processedStaticModules.putIfAbsent(definingModule.getIdentifier(), hasWeldDependencies) == null[ FD ]
Line_5 $$ if (proxiedBeanType.getClassLoader() instanceof ModuleClassLoader) -->Line_6 $$ final ModuleClassLoader loader = (ModuleClassLoader) proxiedBeanType.getClassLoader()[ CD ]
Line_17 $$ if (hasWeldDependencies) -->Line_20 $$ if (logWarning) [ CD ]
Line_2 $$ private ClassLoader _getClassLoader(Class<?> proxiedBeanType) -->Line_8 $$ return proxiedBeanType.getClassLoader()[ FD ]
Line_10 $$ final Module definingModule = loader.getModule()-->Line_11 $$ Boolean hasWeldDependencies = processedStaticModules.get(definingModule.getIdentifier())[ FD ]
Line_17 $$ if (hasWeldDependencies) -->Line_23 $$ return this.module.getClassLoader()[ CD ]
Line_2 $$ private ClassLoader _getClassLoader(Class<?> proxiedBeanType) -->Line_3 $$ if (proxiedBeanType.getName().startsWith("java")) [ FD ]
Line_14 $$ hasWeldDependencies = canLoadWeldProxies(definingModule)-->Line_15 $$ logWarning = processedStaticModules.putIfAbsent(definingModule.getIdentifier(), hasWeldDependencies) == null[ FD ]
Line_11 $$ Boolean hasWeldDependencies = processedStaticModules.get(definingModule.getIdentifier())-->Line_14 $$ hasWeldDependencies = canLoadWeldProxies(definingModule)[ FD ]
Line_20 $$ if (logWarning) -->Line_21 $$ WeldLogger.ROOT_LOGGER.loadingProxiesUsingDeploymentClassLoader(definingModule.getIdentifier(), Arrays.toString(REQUIRED_WELD_DEPENDENCIES))[ CD ]
Line_5 $$ if (proxiedBeanType.getClassLoader() instanceof ModuleClassLoader) -->Line_7 $$ if (loader.getModule().getModuleLoader() instanceof ServiceModuleLoader) [ CD ]
Line_2 $$ private ClassLoader _getClassLoader(Class<?> proxiedBeanType) -->Line_18 $$ return proxiedBeanType.getClassLoader()[ FD ]
Line_7 $$ if (loader.getModule().getModuleLoader() instanceof ServiceModuleLoader) -->Line_17 $$ if (hasWeldDependencies) [ CD ]
