Line_7 $$ isJre50 = myVersionDetector.isModuleJre50Configured((ModuleBasedConfiguration) runConfiguration)-->Line_11 $$ myCoverageNotSupportedLabel.setVisible(!isJre50)[ FD ]
Line_18 $$ if (runnerId != null) -->Line_20 $$ final DefaultComboBoxModel model = (DefaultComboBoxModel) myCoverageRunnerCb.getModel()[ CD ]
Line_14 $$ if (runner != null) -->Line_17 $$ final String runnerId = configuration.getRunnerId()[ CD ]
Line_3 $$ final boolean isJre50-->Line_5 $$ isJre50 = true[ FD ]
Line_2 $$ protected void resetEditorFrom(final RunConfigurationBase runConfiguration) -->Line_4 $$ if (runConfiguration instanceof CommonJavaRunConfigurationParameters && myVersionDetector.isJre50Configured((CommonJavaRunConfigurationParameters) runConfiguration)) [ CD ]
Line_13 $$ CoverageRunner runner = configuration.getCoverageRunner()-->Line_32 $$ final boolean isCoverageByTestApplicable = runner != null && runner.isCoverageByTestApplicable()[ FD ]
Line_17 $$ final String runnerId = configuration.getRunnerId()-->Line_18 $$ if (runnerId != null) [ FD ]
Line_2 $$ protected void resetEditorFrom(final RunConfigurationBase runConfiguration) -->Line_13 $$ CoverageRunner runner = configuration.getCoverageRunner()[ CD ]
Line_2 $$ protected void resetEditorFrom(final RunConfigurationBase runConfiguration) -->Line_34 $$ mySamplingRb.setSelected(configuration.isSampling() || !isCoverageByTestApplicable)[ CD ]
Line_2 $$ protected void resetEditorFrom(final RunConfigurationBase runConfiguration) -->Line_33 $$ myTracingRb.setEnabled(myTracingRb.isEnabled() && isCoverageByTestApplicable)[ CD ]
Line_2 $$ protected void resetEditorFrom(final RunConfigurationBase runConfiguration) -->Line_14 $$ if (runner != null) [ CD ]
Line_3 $$ final boolean isJre50-->Line_9 $$ isJre50 = true[ FD ]
Line_5 $$ isJre50 = true-->Line_11 $$ myCoverageNotSupportedLabel.setVisible(!isJre50)[ FD ]
Line_3 $$ final boolean isJre50-->Line_30 $$ UIUtil.setEnabled(myRunnerPanel, isJre50, true)[ FD ]
Line_18 $$ if (runnerId != null) -->Line_26 $$ myCoverageRunnerCb.setSelectedIndex(0)[ CD ]
Line_2 $$ protected void resetEditorFrom(final RunConfigurationBase runConfiguration) -->Line_6 $$ if (runConfiguration instanceof ModuleBasedConfiguration) [ FD ]
Line_32 $$ final boolean isCoverageByTestApplicable = runner != null && runner.isCoverageByTestApplicable()-->Line_34 $$ mySamplingRb.setSelected(configuration.isSampling() || !isCoverageByTestApplicable)[ FD ]
Line_2 $$ protected void resetEditorFrom(final RunConfigurationBase runConfiguration) -->Line_12 $$ final JavaCoverageEnabledConfiguration configuration = (JavaCoverageEnabledConfiguration) CoverageEnabledConfiguration.getOrCreate(runConfiguration)[ CD ]
Line_19 $$ final CoverageRunnerItem runnerItem = new CoverageRunnerItem(runnerId)-->Line_21 $$ if (model.getIndexOf(runnerItem) == -1) [ FD ]
Line_5 $$ isJre50 = true-->Line_7 $$ isJre50 = myVersionDetector.isModuleJre50Configured((ModuleBasedConfiguration) runConfiguration)[ FD ]
Line_2 $$ protected void resetEditorFrom(final RunConfigurationBase runConfiguration) -->Line_35 $$ myTracingRb.setSelected(!mySamplingRb.isSelected())[ CD ]
Line_2 $$ protected void resetEditorFrom(final RunConfigurationBase runConfiguration) -->Line_37 $$ myTrackPerTestCoverageCb.setEnabled(myTracingRb.isEnabled() && myTracingRb.isSelected() && canHavePerTestCoverage())[ CD ]
Line_18 $$ if (runnerId != null) -->Line_21 $$ if (model.getIndexOf(runnerItem) == -1) [ CD ]
Line_20 $$ final DefaultComboBoxModel model = (DefaultComboBoxModel) myCoverageRunnerCb.getModel()-->Line_21 $$ if (model.getIndexOf(runnerItem) == -1) [ FD ]
Line_4 $$ if (runConfiguration instanceof CommonJavaRunConfigurationParameters && myVersionDetector.isJre50Configured((CommonJavaRunConfigurationParameters) runConfiguration)) -->Line_6 $$ if (runConfiguration instanceof ModuleBasedConfiguration) [ CD ]
Line_12 $$ final JavaCoverageEnabledConfiguration configuration = (JavaCoverageEnabledConfiguration) CoverageEnabledConfiguration.getOrCreate(runConfiguration)-->Line_31 $$ myClassFilterEditor.setFilters(configuration.getCoveragePatterns())[ FD ]
Line_14 $$ if (runner != null) -->Line_18 $$ if (runnerId != null) [ CD ]
Line_3 $$ final boolean isJre50-->Line_11 $$ myCoverageNotSupportedLabel.setVisible(!isJre50)[ FD ]
Line_12 $$ final JavaCoverageEnabledConfiguration configuration = (JavaCoverageEnabledConfiguration) CoverageEnabledConfiguration.getOrCreate(runConfiguration)-->Line_13 $$ CoverageRunner runner = configuration.getCoverageRunner()[ FD ]
Line_7 $$ isJre50 = myVersionDetector.isModuleJre50Configured((ModuleBasedConfiguration) runConfiguration)-->Line_30 $$ UIUtil.setEnabled(myRunnerPanel, isJre50, true)[ FD ]
Line_13 $$ CoverageRunner runner = configuration.getCoverageRunner()-->Line_14 $$ if (runner != null) [ FD ]
Line_2 $$ protected void resetEditorFrom(final RunConfigurationBase runConfiguration) -->Line_32 $$ final boolean isCoverageByTestApplicable = runner != null && runner.isCoverageByTestApplicable()[ CD ]
Line_14 $$ if (runner != null) -->Line_15 $$ myCoverageRunnerCb.setSelectedItem(new CoverageRunnerItem(runner))[ CD ]
Line_13 $$ CoverageRunner runner = configuration.getCoverageRunner()-->Line_28 $$ runner = ((CoverageRunnerItem) myCoverageRunnerCb.getSelectedItem()).getRunner()[ FD ]
Line_12 $$ final JavaCoverageEnabledConfiguration configuration = (JavaCoverageEnabledConfiguration) CoverageEnabledConfiguration.getOrCreate(runConfiguration)-->Line_34 $$ mySamplingRb.setSelected(configuration.isSampling() || !isCoverageByTestApplicable)[ FD ]
Line_2 $$ protected void resetEditorFrom(final RunConfigurationBase runConfiguration) -->Line_36 $$ myTrackPerTestCoverageCb.setSelected(configuration.isTrackPerTestCoverage())[ CD ]
Line_12 $$ final JavaCoverageEnabledConfiguration configuration = (JavaCoverageEnabledConfiguration) CoverageEnabledConfiguration.getOrCreate(runConfiguration)-->Line_38 $$ myTrackTestSourcesCb.setSelected(configuration.isTrackTestFolders())[ FD ]
Line_6 $$ if (runConfiguration instanceof ModuleBasedConfiguration) -->Line_9 $$ isJre50 = true[ CD ]
Line_5 $$ isJre50 = true-->Line_9 $$ isJre50 = true[ FD ]
Line_18 $$ if (runnerId != null) -->Line_19 $$ final CoverageRunnerItem runnerItem = new CoverageRunnerItem(runnerId)[ CD ]
Line_5 $$ isJre50 = true-->Line_30 $$ UIUtil.setEnabled(myRunnerPanel, isJre50, true)[ FD ]
Line_2 $$ protected void resetEditorFrom(final RunConfigurationBase runConfiguration) -->Line_11 $$ myCoverageNotSupportedLabel.setVisible(!isJre50)[ CD ]
Line_2 $$ protected void resetEditorFrom(final RunConfigurationBase runConfiguration) -->Line_12 $$ final JavaCoverageEnabledConfiguration configuration = (JavaCoverageEnabledConfiguration) CoverageEnabledConfiguration.getOrCreate(runConfiguration)[ FD ]
Line_9 $$ isJre50 = true-->Line_11 $$ myCoverageNotSupportedLabel.setVisible(!isJre50)[ FD ]
Line_12 $$ final JavaCoverageEnabledConfiguration configuration = (JavaCoverageEnabledConfiguration) CoverageEnabledConfiguration.getOrCreate(runConfiguration)-->Line_17 $$ final String runnerId = configuration.getRunnerId()[ FD ]
Line_20 $$ final DefaultComboBoxModel model = (DefaultComboBoxModel) myCoverageRunnerCb.getModel()-->Line_22 $$ model.addElement(runnerItem)[ FD ]
Line_28 $$ runner = ((CoverageRunnerItem) myCoverageRunnerCb.getSelectedItem()).getRunner()-->Line_32 $$ final boolean isCoverageByTestApplicable = runner != null && runner.isCoverageByTestApplicable()[ FD ]
Line_3 $$ final boolean isJre50-->Line_7 $$ isJre50 = myVersionDetector.isModuleJre50Configured((ModuleBasedConfiguration) runConfiguration)[ FD ]
Line_19 $$ final CoverageRunnerItem runnerItem = new CoverageRunnerItem(runnerId)-->Line_22 $$ model.addElement(runnerItem)[ FD ]
Line_19 $$ final CoverageRunnerItem runnerItem = new CoverageRunnerItem(runnerId)-->Line_24 $$ myCoverageRunnerCb.setSelectedItem(runnerItem)[ FD ]
Line_14 $$ if (runner != null) -->Line_28 $$ runner = ((CoverageRunnerItem) myCoverageRunnerCb.getSelectedItem()).getRunner()[ CD ]
Line_2 $$ protected void resetEditorFrom(final RunConfigurationBase runConfiguration) -->Line_31 $$ myClassFilterEditor.setFilters(configuration.getCoveragePatterns())[ CD ]
Line_4 $$ if (runConfiguration instanceof CommonJavaRunConfigurationParameters && myVersionDetector.isJre50Configured((CommonJavaRunConfigurationParameters) runConfiguration)) -->Line_5 $$ isJre50 = true[ CD ]
Line_12 $$ final JavaCoverageEnabledConfiguration configuration = (JavaCoverageEnabledConfiguration) CoverageEnabledConfiguration.getOrCreate(runConfiguration)-->Line_36 $$ myTrackPerTestCoverageCb.setSelected(configuration.isTrackPerTestCoverage())[ FD ]
Line_2 $$ protected void resetEditorFrom(final RunConfigurationBase runConfiguration) -->Line_30 $$ UIUtil.setEnabled(myRunnerPanel, isJre50, true)[ CD ]
Line_18 $$ if (runnerId != null) -->Line_24 $$ myCoverageRunnerCb.setSelectedItem(runnerItem)[ CD ]
Line_2 $$ protected void resetEditorFrom(final RunConfigurationBase runConfiguration) -->Line_3 $$ final boolean isJre50[ CD ]
Line_7 $$ isJre50 = myVersionDetector.isModuleJre50Configured((ModuleBasedConfiguration) runConfiguration)-->Line_9 $$ isJre50 = true[ FD ]
Line_21 $$ if (model.getIndexOf(runnerItem) == -1) -->Line_22 $$ model.addElement(runnerItem)[ CD ]
Line_6 $$ if (runConfiguration instanceof ModuleBasedConfiguration) -->Line_7 $$ isJre50 = myVersionDetector.isModuleJre50Configured((ModuleBasedConfiguration) runConfiguration)[ CD ]
Line_9 $$ isJre50 = true-->Line_30 $$ UIUtil.setEnabled(myRunnerPanel, isJre50, true)[ FD ]
Line_2 $$ protected void resetEditorFrom(final RunConfigurationBase runConfiguration) -->Line_38 $$ myTrackTestSourcesCb.setSelected(configuration.isTrackTestFolders())[ CD ]
