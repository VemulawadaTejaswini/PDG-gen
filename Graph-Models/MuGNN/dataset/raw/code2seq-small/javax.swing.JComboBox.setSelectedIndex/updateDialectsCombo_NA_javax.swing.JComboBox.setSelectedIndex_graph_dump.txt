Line_18 $$ String curLanguage = myCurrentFile != null ? myCurrentFile.getLanguage().toString() : lastUsed-->Line_20 $$ if (curLanguage.equals(items.get(i).toString())) [ FD ]
Line_5 $$ if (source instanceof LanguageFileType) -->Line_8 $$ Language[] dialects = LanguageUtil.getLanguageDialects(baseLang)[ CD ]
Line_2 $$ private void updateDialectsCombo(@Nullable final String lastUsed) -->Line_12 $$ myDialectComboBox.setModel(new CollectionComboBoxModel(items))[ CD ]
Line_6 $$ final Language baseLang = ((LanguageFileType) source).getLanguage()-->Line_8 $$ Language[] dialects = LanguageUtil.getLanguageDialects(baseLang)[ FD ]
Line_8 $$ Language[] dialects = LanguageUtil.getLanguageDialects(baseLang)-->Line_9 $$ Arrays.sort(dialects, LanguageUtil.LANGUAGE_COMPARATOR)[ FD ]
Line_5 $$ if (source instanceof LanguageFileType) -->Line_10 $$ items.addAll(Arrays.asList(dialects))[ CD ]
Line_4 $$ ArrayList<Language> items = new ArrayList<Language>()-->Line_13 $$ final int size = items.size()[ FD ]
Line_2 $$ private void updateDialectsCombo(@Nullable final String lastUsed) -->Line_17 $$ if (visible && (myCurrentFile != null || lastUsed != null)) [ CD ]
Line_5 $$ if (source instanceof LanguageFileType) -->Line_7 $$ items.add(baseLang)[ CD ]
Line_5 $$ if (source instanceof LanguageFileType) -->Line_9 $$ Arrays.sort(dialects, LanguageUtil.LANGUAGE_COMPARATOR)[ CD ]
Line_19 $$ for (int i = 0; i < size; ++i) -->Line_20 $$ if (curLanguage.equals(items.get(i).toString())) [ CD ]
Line_4 $$ ArrayList<Language> items = new ArrayList<Language>()-->Line_10 $$ items.addAll(Arrays.asList(dialects))[ FD ]
Line_2 $$ private void updateDialectsCombo(@Nullable final String lastUsed) -->Line_15 $$ myDialectLabel.setVisible(visible)[ CD ]
Line_17 $$ if (visible && (myCurrentFile != null || lastUsed != null)) -->Line_19 $$ for (int i = 0; i < size; ++i) [ CD ]
Line_14 $$ final boolean visible = size > 1-->Line_15 $$ myDialectLabel.setVisible(visible)[ FD ]
Line_20 $$ if (curLanguage.equals(items.get(i).toString())) -->Line_21 $$ myDialectComboBox.setSelectedIndex(i)[ CD ]
Line_14 $$ final boolean visible = size > 1-->Line_17 $$ if (visible && (myCurrentFile != null || lastUsed != null)) [ FD ]
Line_2 $$ private void updateDialectsCombo(@Nullable final String lastUsed) -->Line_5 $$ if (source instanceof LanguageFileType) [ CD ]
Line_14 $$ final boolean visible = size > 1-->Line_16 $$ myDialectComboBox.setVisible(visible)[ FD ]
Line_20 $$ if (curLanguage.equals(items.get(i).toString())) -->Line_22 $$ return[ CD ]
Line_2 $$ private void updateDialectsCombo(@Nullable final String lastUsed) -->Line_16 $$ myDialectComboBox.setVisible(visible)[ CD ]
Line_17 $$ if (visible && (myCurrentFile != null || lastUsed != null)) -->Line_25 $$ myDialectComboBox.setSelectedIndex(size > 0 ? 0 : -1)[ CD ]
Line_6 $$ final Language baseLang = ((LanguageFileType) source).getLanguage()-->Line_7 $$ items.add(baseLang)[ FD ]
Line_19 $$ for (int i = 0; i < size; ++i) -->Line_21 $$ myDialectComboBox.setSelectedIndex(i)[ FD ]
Line_3 $$ final Object source = getSource()-->Line_5 $$ if (source instanceof LanguageFileType) [ FD ]
Line_2 $$ private void updateDialectsCombo(@Nullable final String lastUsed) -->Line_13 $$ final int size = items.size()[ CD ]
Line_2 $$ private void updateDialectsCombo(@Nullable final String lastUsed) -->Line_4 $$ ArrayList<Language> items = new ArrayList<Language>()[ CD ]
Line_5 $$ if (source instanceof LanguageFileType) -->Line_6 $$ final Language baseLang = ((LanguageFileType) source).getLanguage()[ CD ]
Line_2 $$ private void updateDialectsCombo(@Nullable final String lastUsed) -->Line_14 $$ final boolean visible = size > 1[ CD ]
Line_17 $$ if (visible && (myCurrentFile != null || lastUsed != null)) -->Line_18 $$ String curLanguage = myCurrentFile != null ? myCurrentFile.getLanguage().toString() : lastUsed[ CD ]
Line_19 $$ for (int i = 0; i < size; ++i) -->Line_20 $$ if (curLanguage.equals(items.get(i).toString())) [ FD ]
Line_4 $$ ArrayList<Language> items = new ArrayList<Language>()-->Line_7 $$ items.add(baseLang)[ FD ]
Line_2 $$ private void updateDialectsCombo(@Nullable final String lastUsed) -->Line_3 $$ final Object source = getSource()[ CD ]
Line_4 $$ ArrayList<Language> items = new ArrayList<Language>()-->Line_20 $$ if (curLanguage.equals(items.get(i).toString())) [ FD ]
Line_8 $$ Language[] dialects = LanguageUtil.getLanguageDialects(baseLang)-->Line_10 $$ items.addAll(Arrays.asList(dialects))[ FD ]
Line_13 $$ final int size = items.size()-->Line_19 $$ for (int i = 0; i < size; ++i) [ FD ]
