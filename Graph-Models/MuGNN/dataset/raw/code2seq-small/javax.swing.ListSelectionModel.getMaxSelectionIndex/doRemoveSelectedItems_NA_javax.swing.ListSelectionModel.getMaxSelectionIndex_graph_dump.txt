Line_6 $$ ListSelectionModel selectionModel = table.getSelectionModel()-->Line_31 $$ selectionModel.setSelectionInterval(minSelectionIndex, minSelectionIndex)[ FD ]
Line_2 $$ public static boolean doRemoveSelectedItems(@NotNull JTable table, @NotNull ItemRemovable itemRemovable, @Nullable ItemChecker applyable) -->Line_24 $$ int count = model.getRowCount()[ CD ]
Line_2 $$ public static boolean doRemoveSelectedItems(@NotNull JTable table, @NotNull ItemRemovable itemRemovable, @Nullable ItemChecker applyable) -->Line_25 $$ if (count == 0) [ CD ]
Line_2 $$ public static boolean doRemoveSelectedItems(@NotNull JTable table, @NotNull ItemRemovable itemRemovable, @Nullable ItemChecker applyable) -->Line_21 $$ if (!removed) [ CD ]
Line_2 $$ public static boolean doRemoveSelectedItems(@NotNull JTable table, @NotNull ItemRemovable itemRemovable, @Nullable ItemChecker applyable) -->Line_3 $$ if (table.isEditing()) [ FD ]
Line_2 $$ public static boolean doRemoveSelectedItems(@NotNull JTable table, @NotNull ItemRemovable itemRemovable, @Nullable ItemChecker applyable) -->Line_12 $$ TableModel model = table.getModel()[ FD ]
Line_2 $$ public static boolean doRemoveSelectedItems(@NotNull JTable table, @NotNull ItemRemovable itemRemovable, @Nullable ItemChecker applyable) -->Line_14 $$ for (int index = maxSelectionIndex; index >= 0; index--) [ CD ]
Line_2 $$ public static boolean doRemoveSelectedItems(@NotNull JTable table, @NotNull ItemRemovable itemRemovable, @Nullable ItemChecker applyable) -->Line_17 $$ itemRemovable.removeRow(modelIndex)[ FD ]
Line_16 $$ if (selectionModel.isSelectedIndex(index) && (applyable == null || applyable.isOperationApplyable(model, modelIndex))) -->Line_17 $$ itemRemovable.removeRow(modelIndex)[ CD ]
Line_21 $$ if (!removed) -->Line_22 $$ return false[ CD ]
Line_7 $$ int minSelectionIndex = selectionModel.getMinSelectionIndex()-->Line_31 $$ selectionModel.setSelectionInterval(minSelectionIndex, minSelectionIndex)[ FD ]
Line_25 $$ if (count == 0) -->Line_27 $$ if (selectionModel.getMinSelectionIndex() == -1) [ CD ]
Line_2 $$ public static boolean doRemoveSelectedItems(@NotNull JTable table, @NotNull ItemRemovable itemRemovable, @Nullable ItemChecker applyable) -->Line_13 $$ boolean removed = false[ CD ]
Line_12 $$ TableModel model = table.getModel()-->Line_28 $$ if (minSelectionIndex >= model.getRowCount()) [ FD ]
Line_7 $$ int minSelectionIndex = selectionModel.getMinSelectionIndex()-->Line_28 $$ if (minSelectionIndex >= model.getRowCount()) [ FD ]
Line_14 $$ for (int index = maxSelectionIndex; index >= 0; index--) -->Line_15 $$ int modelIndex = table.convertRowIndexToModel(index)[ CD ]
Line_6 $$ ListSelectionModel selectionModel = table.getSelectionModel()-->Line_16 $$ if (selectionModel.isSelectedIndex(index) && (applyable == null || applyable.isOperationApplyable(model, modelIndex))) [ FD ]
Line_12 $$ TableModel model = table.getModel()-->Line_24 $$ int count = model.getRowCount()[ FD ]
Line_2 $$ public static boolean doRemoveSelectedItems(@NotNull JTable table, @NotNull ItemRemovable itemRemovable, @Nullable ItemChecker applyable) -->Line_15 $$ int modelIndex = table.convertRowIndexToModel(index)[ FD ]
Line_13 $$ boolean removed = false-->Line_18 $$ removed = true[ FD ]
Line_2 $$ public static boolean doRemoveSelectedItems(@NotNull JTable table, @NotNull ItemRemovable itemRemovable, @Nullable ItemChecker applyable) -->Line_26 $$ table.clearSelection()[ FD ]
Line_2 $$ public static boolean doRemoveSelectedItems(@NotNull JTable table, @NotNull ItemRemovable itemRemovable, @Nullable ItemChecker applyable) -->Line_34 $$ return true[ CD ]
Line_28 $$ if (minSelectionIndex >= model.getRowCount()) -->Line_29 $$ selectionModel.setSelectionInterval(model.getRowCount() - 1, model.getRowCount() - 1)[ CD ]
Line_15 $$ int modelIndex = table.convertRowIndexToModel(index)-->Line_16 $$ if (selectionModel.isSelectedIndex(index) && (applyable == null || applyable.isOperationApplyable(model, modelIndex))) [ FD ]
Line_3 $$ if (table.isEditing()) -->Line_4 $$ table.getCellEditor().stopCellEditing()[ CD ]
Line_2 $$ public static boolean doRemoveSelectedItems(@NotNull JTable table, @NotNull ItemRemovable itemRemovable, @Nullable ItemChecker applyable) -->Line_4 $$ table.getCellEditor().stopCellEditing()[ FD ]
Line_27 $$ if (selectionModel.getMinSelectionIndex() == -1) -->Line_28 $$ if (minSelectionIndex >= model.getRowCount()) [ CD ]
Line_12 $$ TableModel model = table.getModel()-->Line_16 $$ if (selectionModel.isSelectedIndex(index) && (applyable == null || applyable.isOperationApplyable(model, modelIndex))) [ FD ]
Line_2 $$ public static boolean doRemoveSelectedItems(@NotNull JTable table, @NotNull ItemRemovable itemRemovable, @Nullable ItemChecker applyable) -->Line_8 $$ int maxSelectionIndex = selectionModel.getMaxSelectionIndex()[ CD ]
Line_2 $$ public static boolean doRemoveSelectedItems(@NotNull JTable table, @NotNull ItemRemovable itemRemovable, @Nullable ItemChecker applyable) -->Line_12 $$ TableModel model = table.getModel()[ CD ]
Line_9 $$ if (minSelectionIndex == -1 || maxSelectionIndex == -1) -->Line_10 $$ return false[ CD ]
Line_14 $$ for (int index = maxSelectionIndex; index >= 0; index--) -->Line_15 $$ int modelIndex = table.convertRowIndexToModel(index)[ FD ]
Line_2 $$ public static boolean doRemoveSelectedItems(@NotNull JTable table, @NotNull ItemRemovable itemRemovable, @Nullable ItemChecker applyable) -->Line_6 $$ ListSelectionModel selectionModel = table.getSelectionModel()[ FD ]
Line_24 $$ int count = model.getRowCount()-->Line_25 $$ if (count == 0) [ FD ]
Line_12 $$ TableModel model = table.getModel()-->Line_29 $$ selectionModel.setSelectionInterval(model.getRowCount() - 1, model.getRowCount() - 1)[ FD ]
Line_2 $$ public static boolean doRemoveSelectedItems(@NotNull JTable table, @NotNull ItemRemovable itemRemovable, @Nullable ItemChecker applyable) -->Line_3 $$ if (table.isEditing()) [ CD ]
Line_28 $$ if (minSelectionIndex >= model.getRowCount()) -->Line_31 $$ selectionModel.setSelectionInterval(minSelectionIndex, minSelectionIndex)[ CD ]
Line_15 $$ int modelIndex = table.convertRowIndexToModel(index)-->Line_17 $$ itemRemovable.removeRow(modelIndex)[ FD ]
Line_6 $$ ListSelectionModel selectionModel = table.getSelectionModel()-->Line_29 $$ selectionModel.setSelectionInterval(model.getRowCount() - 1, model.getRowCount() - 1)[ FD ]
Line_2 $$ public static boolean doRemoveSelectedItems(@NotNull JTable table, @NotNull ItemRemovable itemRemovable, @Nullable ItemChecker applyable) -->Line_6 $$ ListSelectionModel selectionModel = table.getSelectionModel()[ CD ]
Line_14 $$ for (int index = maxSelectionIndex; index >= 0; index--) -->Line_16 $$ if (selectionModel.isSelectedIndex(index) && (applyable == null || applyable.isOperationApplyable(model, modelIndex))) [ FD ]
Line_16 $$ if (selectionModel.isSelectedIndex(index) && (applyable == null || applyable.isOperationApplyable(model, modelIndex))) -->Line_18 $$ removed = true[ CD ]
Line_2 $$ public static boolean doRemoveSelectedItems(@NotNull JTable table, @NotNull ItemRemovable itemRemovable, @Nullable ItemChecker applyable) -->Line_9 $$ if (minSelectionIndex == -1 || maxSelectionIndex == -1) [ CD ]
Line_13 $$ boolean removed = false-->Line_21 $$ if (!removed) [ FD ]
Line_25 $$ if (count == 0) -->Line_26 $$ table.clearSelection()[ CD ]
Line_6 $$ ListSelectionModel selectionModel = table.getSelectionModel()-->Line_27 $$ if (selectionModel.getMinSelectionIndex() == -1) [ FD ]
Line_18 $$ removed = true-->Line_21 $$ if (!removed) [ FD ]
Line_6 $$ ListSelectionModel selectionModel = table.getSelectionModel()-->Line_7 $$ int minSelectionIndex = selectionModel.getMinSelectionIndex()[ FD ]
Line_2 $$ public static boolean doRemoveSelectedItems(@NotNull JTable table, @NotNull ItemRemovable itemRemovable, @Nullable ItemChecker applyable) -->Line_16 $$ if (selectionModel.isSelectedIndex(index) && (applyable == null || applyable.isOperationApplyable(model, modelIndex))) [ FD ]
Line_6 $$ ListSelectionModel selectionModel = table.getSelectionModel()-->Line_8 $$ int maxSelectionIndex = selectionModel.getMaxSelectionIndex()[ FD ]
Line_2 $$ public static boolean doRemoveSelectedItems(@NotNull JTable table, @NotNull ItemRemovable itemRemovable, @Nullable ItemChecker applyable) -->Line_7 $$ int minSelectionIndex = selectionModel.getMinSelectionIndex()[ CD ]
Line_14 $$ for (int index = maxSelectionIndex; index >= 0; index--) -->Line_16 $$ if (selectionModel.isSelectedIndex(index) && (applyable == null || applyable.isOperationApplyable(model, modelIndex))) [ CD ]
