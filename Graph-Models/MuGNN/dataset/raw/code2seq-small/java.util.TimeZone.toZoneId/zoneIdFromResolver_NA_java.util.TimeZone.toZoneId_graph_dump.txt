Line_2 $$ public void zoneIdFromResolver() throws Exception -->Line_7 $$ Object result = resolver.resolveArgument(zoneIdParameter, null, webRequest, null)[ CD ]
Line_3 $$ TimeZone timeZone = TimeZone.getTimeZone("America/New_York")-->Line_8 $$ assertEquals("Invalid result", timeZone.toZoneId(), result)[ FD ]
Line_2 $$ public void zoneIdFromResolver() throws Exception -->Line_8 $$ assertEquals("Invalid result", timeZone.toZoneId(), result)[ CD ]
Line_2 $$ public void zoneIdFromResolver() throws Exception -->Line_4 $$ servletRequest.setAttribute(DispatcherServlet.LOCALE_RESOLVER_ATTRIBUTE, new FixedLocaleResolver(Locale.US, timeZone))[ CD ]
Line_2 $$ public void zoneIdFromResolver() throws Exception -->Line_5 $$ MethodParameter zoneIdParameter = new MethodParameter(method, 9)[ CD ]
Line_2 $$ public void zoneIdFromResolver() throws Exception -->Line_6 $$ assertTrue("ZoneId not supported", resolver.supportsParameter(zoneIdParameter))[ CD ]
Line_7 $$ Object result = resolver.resolveArgument(zoneIdParameter, null, webRequest, null)-->Line_8 $$ assertEquals("Invalid result", timeZone.toZoneId(), result)[ FD ]
Line_5 $$ MethodParameter zoneIdParameter = new MethodParameter(method, 9)-->Line_7 $$ Object result = resolver.resolveArgument(zoneIdParameter, null, webRequest, null)[ FD ]
Line_5 $$ MethodParameter zoneIdParameter = new MethodParameter(method, 9)-->Line_6 $$ assertTrue("ZoneId not supported", resolver.supportsParameter(zoneIdParameter))[ FD ]
Line_2 $$ public void zoneIdFromResolver() throws Exception -->Line_3 $$ TimeZone timeZone = TimeZone.getTimeZone("America/New_York")[ CD ]
