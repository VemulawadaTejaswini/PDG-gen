Line_2 $$ public static <E> Collection<E> createApproximateCollection(Object collection, int capacity) -->Line_5 $$ if (collection instanceof List) [ FD ]
Line_2 $$ public static <E> Collection<E> createApproximateCollection(Object collection, int capacity) -->Line_7 $$ if (collection instanceof EnumSet) [ FD ]
Line_7 $$ if (collection instanceof EnumSet) -->Line_10 $$ return enumSet[ CD ]
Line_11 $$ if (collection instanceof SortedSet) -->Line_14 $$ return new LinkedHashSet<E>(capacity)[ CD ]
Line_8 $$ Collection<E> enumSet = (Collection<E>) EnumSet.copyOf((EnumSet) collection)-->Line_9 $$ enumSet.clear()[ FD ]
Line_2 $$ public static <E> Collection<E> createApproximateCollection(Object collection, int capacity) -->Line_11 $$ if (collection instanceof SortedSet) [ FD ]
Line_5 $$ if (collection instanceof List) -->Line_6 $$ return new ArrayList<E>(capacity)[ CD ]
Line_5 $$ if (collection instanceof List) -->Line_7 $$ if (collection instanceof EnumSet) [ CD ]
Line_2 $$ public static <E> Collection<E> createApproximateCollection(Object collection, int capacity) -->Line_3 $$ if (collection instanceof LinkedList) [ CD ]
Line_7 $$ if (collection instanceof EnumSet) -->Line_9 $$ enumSet.clear()[ CD ]
Line_7 $$ if (collection instanceof EnumSet) -->Line_11 $$ if (collection instanceof SortedSet) [ CD ]
Line_7 $$ if (collection instanceof EnumSet) -->Line_8 $$ Collection<E> enumSet = (Collection<E>) EnumSet.copyOf((EnumSet) collection)[ CD ]
Line_3 $$ if (collection instanceof LinkedList) -->Line_5 $$ if (collection instanceof List) [ CD ]
Line_11 $$ if (collection instanceof SortedSet) -->Line_12 $$ return new TreeSet<E>(((SortedSet<E>) collection).comparator())[ CD ]
Line_3 $$ if (collection instanceof LinkedList) -->Line_4 $$ return new LinkedList<E>()[ CD ]
Line_2 $$ public static <E> Collection<E> createApproximateCollection(Object collection, int capacity) -->Line_3 $$ if (collection instanceof LinkedList) [ FD ]
