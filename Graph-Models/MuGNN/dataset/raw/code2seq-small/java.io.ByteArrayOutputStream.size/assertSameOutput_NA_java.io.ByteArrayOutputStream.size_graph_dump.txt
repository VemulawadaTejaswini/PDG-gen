Line_7 $$ int count = generated.size()-->Line_8 $$ if (count != canonical.size())[ FD ]
Line_2 $$ private int assertSameOutput(int bytesChecked, int lastAction, int iteration) throws Exception -->Line_3 $$ ndosp.flush()[ CD ]
Line_13 $$ byte canonicalByte = canonicalBytes[bytesChecked]-->Line_14 $$ if (generatedByte != canonicalByte)[ FD ]
Line_7 $$ int count = generated.size()-->Line_10 $$ assertEquals(count, canonical.size())[ FD ]
Line_7 $$ int count = generated.size()-->Line_11 $$ for (; bytesChecked < count; bytesChecked++) [ FD ]
Line_2 $$ private int assertSameOutput(int bytesChecked, int lastAction, int iteration) throws Exception -->Line_11 $$ for (; bytesChecked < count; bytesChecked++) [ FD ]
Line_11 $$ for (; bytesChecked < count; bytesChecked++) -->Line_13 $$ byte canonicalByte = canonicalBytes[bytesChecked][ CD ]
Line_11 $$ for (; bytesChecked < count; bytesChecked++) -->Line_14 $$ if (generatedByte != canonicalByte)[ CD ]
Line_11 $$ for (; bytesChecked < count; bytesChecked++) -->Line_16 $$ assertEquals(generatedByte, canonicalByte)[ CD ]
Line_2 $$ private int assertSameOutput(int bytesChecked, int lastAction, int iteration) throws Exception -->Line_11 $$ for (; bytesChecked < count; bytesChecked++) [ CD ]
Line_2 $$ private int assertSameOutput(int bytesChecked, int lastAction, int iteration) throws Exception -->Line_7 $$ int count = generated.size()[ CD ]
Line_12 $$ byte generatedByte = generatedBytes[bytesChecked]-->Line_14 $$ if (generatedByte != canonicalByte)[ FD ]
Line_12 $$ byte generatedByte = generatedBytes[bytesChecked]-->Line_16 $$ assertEquals(generatedByte, canonicalByte)[ FD ]
Line_2 $$ private int assertSameOutput(int bytesChecked, int lastAction, int iteration) throws Exception -->Line_8 $$ if (count != canonical.size())[ CD ]
Line_2 $$ private int assertSameOutput(int bytesChecked, int lastAction, int iteration) throws Exception -->Line_5 $$ byte[] generatedBytes = (byte[]) baos_bytes.get(generated)[ CD ]
Line_8 $$ if (count != canonical.size())-->Line_9 $$ System.out.println("Failed at " + bytesChecked + " last action " + lastAction + " iteration " + iteration)[ CD ]
Line_2 $$ private int assertSameOutput(int bytesChecked, int lastAction, int iteration) throws Exception -->Line_4 $$ dosp.flush()[ CD ]
Line_13 $$ byte canonicalByte = canonicalBytes[bytesChecked]-->Line_16 $$ assertEquals(generatedByte, canonicalByte)[ FD ]
Line_2 $$ private int assertSameOutput(int bytesChecked, int lastAction, int iteration) throws Exception -->Line_10 $$ assertEquals(count, canonical.size())[ CD ]
Line_14 $$ if (generatedByte != canonicalByte)-->Line_15 $$ System.out.println("Failed at " + bytesChecked + " last action " + lastAction + " iteration " + iteration)[ CD ]
Line_2 $$ private int assertSameOutput(int bytesChecked, int lastAction, int iteration) throws Exception -->Line_6 $$ byte[] canonicalBytes = (byte[]) baos_bytes.get(canonical)[ CD ]
Line_2 $$ private int assertSameOutput(int bytesChecked, int lastAction, int iteration) throws Exception -->Line_18 $$ return count[ CD ]
Line_11 $$ for (; bytesChecked < count; bytesChecked++) -->Line_12 $$ byte generatedByte = generatedBytes[bytesChecked][ CD ]
