Line_7 $$ for (int i = 0; i < _SIZE; i++) -->Line_8 $$ Assert.assertEquals(i, unsyncBufferedOutputStream.buffer[i])[ FD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_11 $$ for (int i = _SIZE; i < _SIZE * 2; i++) [ CD ]
Line_7 $$ for (int i = 0; i < _SIZE; i++) -->Line_11 $$ for (int i = _SIZE; i < _SIZE * 2; i++) [ FD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_5 $$ Assert.assertEquals(_SIZE * 2, unsyncBufferedOutputStream.buffer.length)[ CD ]
Line_11 $$ for (int i = _SIZE; i < _SIZE * 2; i++) -->Line_12 $$ Assert.assertEquals(i - _SIZE, unsyncBufferedOutputStream.buffer[i])[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_14 $$ unsyncBufferedOutputStream.write(100)[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_16 $$ Assert.assertEquals(_SIZE * 2, byteArrayOutputStream.size())[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_6 $$ unsyncBufferedOutputStream.write(_BUFFER)[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_10 $$ unsyncBufferedOutputStream.write(_BUFFER)[ CD ]
Line_4 $$ UnsyncBufferedOutputStream unsyncBufferedOutputStream = new UnsyncBufferedOutputStream(byteArrayOutputStream, _SIZE * 2)-->Line_10 $$ unsyncBufferedOutputStream.write(_BUFFER)[ FD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_3 $$ ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()[ CD ]
Line_7 $$ for (int i = 0; i < _SIZE; i++) -->Line_8 $$ Assert.assertEquals(i, unsyncBufferedOutputStream.buffer[i])[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_7 $$ for (int i = 0; i < _SIZE; i++) [ CD ]
Line_4 $$ UnsyncBufferedOutputStream unsyncBufferedOutputStream = new UnsyncBufferedOutputStream(byteArrayOutputStream, _SIZE * 2)-->Line_14 $$ unsyncBufferedOutputStream.write(100)[ FD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_4 $$ UnsyncBufferedOutputStream unsyncBufferedOutputStream = new UnsyncBufferedOutputStream(byteArrayOutputStream, _SIZE * 2)[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_15 $$ Assert.assertEquals(100, unsyncBufferedOutputStream.buffer[0])[ CD ]
Line_3 $$ ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()-->Line_16 $$ Assert.assertEquals(_SIZE * 2, byteArrayOutputStream.size())[ FD ]
Line_4 $$ UnsyncBufferedOutputStream unsyncBufferedOutputStream = new UnsyncBufferedOutputStream(byteArrayOutputStream, _SIZE * 2)-->Line_6 $$ unsyncBufferedOutputStream.write(_BUFFER)[ FD ]
