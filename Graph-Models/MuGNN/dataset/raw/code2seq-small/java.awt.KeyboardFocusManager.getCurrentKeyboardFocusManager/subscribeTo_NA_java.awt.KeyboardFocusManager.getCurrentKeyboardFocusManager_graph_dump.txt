Line_6 $$ final NavBarListener listener = new NavBarListener(panel)-->Line_17 $$ connection.subscribe(FileEditorManagerListener.FILE_EDITOR_MANAGER, listener)[ FD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_12 $$ WolfTheProblemSolver.getInstance(project).addProblemListener(listener)[ CD ]
Line_14 $$ final MessageBusConnection connection = project.getMessageBus().connect()-->Line_16 $$ connection.subscribe(NavBarModelListener.NAV_BAR, listener)[ FD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_10 $$ FileStatusManager.getInstance(project).addFileStatusListener(listener)[ CD ]
Line_14 $$ final MessageBusConnection connection = project.getMessageBus().connect()-->Line_15 $$ connection.subscribe(ProjectTopics.PROJECT_ROOTS, listener)[ FD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_7 $$ final Project project = panel.getProject()[ CD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_21 $$ final Window window = SwingUtilities.windowForComponent(panel)[ FD ]
Line_6 $$ final NavBarListener listener = new NavBarListener(panel)-->Line_16 $$ connection.subscribe(NavBarModelListener.NAV_BAR, listener)[ FD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_18 $$ panel.putClientProperty(BUS, connection)[ FD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_19 $$ panel.addKeyListener(listener)[ FD ]
Line_6 $$ final NavBarListener listener = new NavBarListener(panel)-->Line_11 $$ PsiManager.getInstance(project).addPsiTreeChangeListener(listener)[ FD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_13 $$ ActionManager.getInstance().addAnActionListener(listener)[ CD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_3 $$ if (panel.getClientProperty(LISTENER) != null) [ CD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_8 $$ panel.putClientProperty(LISTENER, listener)[ CD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_4 $$ unsubscribeFrom(panel)[ FD ]
Line_7 $$ final Project project = panel.getProject()-->Line_11 $$ PsiManager.getInstance(project).addPsiTreeChangeListener(listener)[ FD ]
Line_6 $$ final NavBarListener listener = new NavBarListener(panel)-->Line_19 $$ panel.addKeyListener(listener)[ FD ]
Line_20 $$ if (panel.isInFloatingMode()) -->Line_22 $$ if (window != null) [ CD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_9 $$ KeyboardFocusManager.getCurrentKeyboardFocusManager().addPropertyChangeListener(listener)[ CD ]
Line_6 $$ final NavBarListener listener = new NavBarListener(panel)-->Line_8 $$ panel.putClientProperty(LISTENER, listener)[ FD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_17 $$ connection.subscribe(FileEditorManagerListener.FILE_EDITOR_MANAGER, listener)[ CD ]
Line_14 $$ final MessageBusConnection connection = project.getMessageBus().connect()-->Line_17 $$ connection.subscribe(FileEditorManagerListener.FILE_EDITOR_MANAGER, listener)[ FD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_16 $$ connection.subscribe(NavBarModelListener.NAV_BAR, listener)[ CD ]
Line_3 $$ if (panel.getClientProperty(LISTENER) != null) -->Line_4 $$ unsubscribeFrom(panel)[ CD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_8 $$ panel.putClientProperty(LISTENER, listener)[ FD ]
Line_22 $$ if (window != null) -->Line_23 $$ window.addWindowFocusListener(listener)[ CD ]
Line_21 $$ final Window window = SwingUtilities.windowForComponent(panel)-->Line_23 $$ window.addWindowFocusListener(listener)[ FD ]
Line_6 $$ final NavBarListener listener = new NavBarListener(panel)-->Line_10 $$ FileStatusManager.getInstance(project).addFileStatusListener(listener)[ FD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_20 $$ if (panel.isInFloatingMode()) [ FD ]
Line_6 $$ final NavBarListener listener = new NavBarListener(panel)-->Line_9 $$ KeyboardFocusManager.getCurrentKeyboardFocusManager().addPropertyChangeListener(listener)[ FD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_14 $$ final MessageBusConnection connection = project.getMessageBus().connect()[ CD ]
Line_21 $$ final Window window = SwingUtilities.windowForComponent(panel)-->Line_22 $$ if (window != null) [ FD ]
Line_7 $$ final Project project = panel.getProject()-->Line_10 $$ FileStatusManager.getInstance(project).addFileStatusListener(listener)[ FD ]
Line_6 $$ final NavBarListener listener = new NavBarListener(panel)-->Line_12 $$ WolfTheProblemSolver.getInstance(project).addProblemListener(listener)[ FD ]
Line_7 $$ final Project project = panel.getProject()-->Line_12 $$ WolfTheProblemSolver.getInstance(project).addProblemListener(listener)[ FD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_15 $$ connection.subscribe(ProjectTopics.PROJECT_ROOTS, listener)[ CD ]
Line_20 $$ if (panel.isInFloatingMode()) -->Line_21 $$ final Window window = SwingUtilities.windowForComponent(panel)[ CD ]
Line_6 $$ final NavBarListener listener = new NavBarListener(panel)-->Line_26 $$ LafManager.getInstance().addLafManagerListener(listener)[ FD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_11 $$ PsiManager.getInstance(project).addPsiTreeChangeListener(listener)[ CD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_6 $$ final NavBarListener listener = new NavBarListener(panel)[ CD ]
Line_6 $$ final NavBarListener listener = new NavBarListener(panel)-->Line_13 $$ ActionManager.getInstance().addAnActionListener(listener)[ FD ]
Line_14 $$ final MessageBusConnection connection = project.getMessageBus().connect()-->Line_18 $$ panel.putClientProperty(BUS, connection)[ FD ]
Line_6 $$ final NavBarListener listener = new NavBarListener(panel)-->Line_15 $$ connection.subscribe(ProjectTopics.PROJECT_ROOTS, listener)[ FD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_20 $$ if (panel.isInFloatingMode()) [ CD ]
Line_6 $$ final NavBarListener listener = new NavBarListener(panel)-->Line_23 $$ window.addWindowFocusListener(listener)[ FD ]
Line_7 $$ final Project project = panel.getProject()-->Line_14 $$ final MessageBusConnection connection = project.getMessageBus().connect()[ FD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_18 $$ panel.putClientProperty(BUS, connection)[ CD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_19 $$ panel.addKeyListener(listener)[ CD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_3 $$ if (panel.getClientProperty(LISTENER) != null) [ FD ]
Line_2 $$ static void subscribeTo(NavBarPanel panel) -->Line_7 $$ final Project project = panel.getProject()[ FD ]
Line_20 $$ if (panel.isInFloatingMode()) -->Line_26 $$ LafManager.getInstance().addLafManagerListener(listener)[ CD ]
