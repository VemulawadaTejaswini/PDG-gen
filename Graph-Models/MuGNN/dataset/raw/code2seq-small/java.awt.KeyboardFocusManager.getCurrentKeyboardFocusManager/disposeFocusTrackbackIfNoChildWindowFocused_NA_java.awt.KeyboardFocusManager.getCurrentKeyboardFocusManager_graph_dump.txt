Line_17 $$ if (owner == null || !SwingUtilities.isDescendingFrom(owner, wrapper.getContentPane())) -->Line_18 $$ myFocusTrackback.dispose()[ CD ]
Line_2 $$ private void disposeFocusTrackbackIfNoChildWindowFocused(@Nullable IdeFocusManager focusManager) -->Line_11 $$ final Component c = focusManager.getFocusedDescendantFor(wrapper.getContentPane())[ FD ]
Line_2 $$ private void disposeFocusTrackbackIfNoChildWindowFocused(@Nullable IdeFocusManager focusManager) -->Line_3 $$ if (myFocusTrackback == null)[ CD ]
Line_2 $$ private void disposeFocusTrackbackIfNoChildWindowFocused(@Nullable IdeFocusManager focusManager) -->Line_10 $$ if (focusManager != null) [ CD ]
Line_10 $$ if (focusManager != null) -->Line_17 $$ if (owner == null || !SwingUtilities.isDescendingFrom(owner, wrapper.getContentPane())) [ CD ]
Line_6 $$ if (wrapper == null || !wrapper.isShowing()) -->Line_7 $$ myFocusTrackback.dispose()[ CD ]
Line_6 $$ if (wrapper == null || !wrapper.isShowing()) -->Line_8 $$ return[ CD ]
Line_2 $$ private void disposeFocusTrackbackIfNoChildWindowFocused(@Nullable IdeFocusManager focusManager) -->Line_10 $$ if (focusManager != null) [ FD ]
Line_5 $$ final DialogWrapper wrapper = myDialogWrapper.get()-->Line_11 $$ final Component c = focusManager.getFocusedDescendantFor(wrapper.getContentPane())[ FD ]
Line_10 $$ if (focusManager != null) -->Line_12 $$ if (c == null) [ CD ]
Line_5 $$ final DialogWrapper wrapper = myDialogWrapper.get()-->Line_17 $$ if (owner == null || !SwingUtilities.isDescendingFrom(owner, wrapper.getContentPane())) [ FD ]
Line_10 $$ if (focusManager != null) -->Line_11 $$ final Component c = focusManager.getFocusedDescendantFor(wrapper.getContentPane())[ CD ]
Line_3 $$ if (myFocusTrackback == null)-->Line_4 $$ return[ CD ]
Line_11 $$ final Component c = focusManager.getFocusedDescendantFor(wrapper.getContentPane())-->Line_12 $$ if (c == null) [ FD ]
Line_2 $$ private void disposeFocusTrackbackIfNoChildWindowFocused(@Nullable IdeFocusManager focusManager) -->Line_6 $$ if (wrapper == null || !wrapper.isShowing()) [ CD ]
Line_5 $$ final DialogWrapper wrapper = myDialogWrapper.get()-->Line_6 $$ if (wrapper == null || !wrapper.isShowing()) [ FD ]
Line_16 $$ final Component owner = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner()-->Line_17 $$ if (owner == null || !SwingUtilities.isDescendingFrom(owner, wrapper.getContentPane())) [ FD ]
Line_2 $$ private void disposeFocusTrackbackIfNoChildWindowFocused(@Nullable IdeFocusManager focusManager) -->Line_5 $$ final DialogWrapper wrapper = myDialogWrapper.get()[ CD ]
Line_10 $$ if (focusManager != null) -->Line_16 $$ final Component owner = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner()[ CD ]
Line_12 $$ if (c == null) -->Line_13 $$ myFocusTrackback.dispose()[ CD ]
