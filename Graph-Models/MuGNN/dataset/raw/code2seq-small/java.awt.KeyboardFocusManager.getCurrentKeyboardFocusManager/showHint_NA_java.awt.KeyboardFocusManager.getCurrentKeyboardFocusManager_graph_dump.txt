Line_39 $$ getHintContainerShowPoint().doWhenDone(new Consumer<RelativePoint>() -->Line_43 $$ Point p = rp.getPointOn(myHintContainer).getPoint()[ CD ]
Line_24 $$ if (editor == null) -->Line_26 $$ getHintContainerShowPoint().doWhenDone(new Consumer<RelativePoint>() [ CD ]
Line_11 $$ myHint = new LightweightHint(panel) -->Line_17 $$ Disposer.dispose(NavBarPanel.this)[ CD ]
Line_26 $$ getHintContainerShowPoint().doWhenDone(new Consumer<RelativePoint>() -->Line_31 $$ final Component cmp = relativePoint.getComponent()[ CD ]
Line_11 $$ myHint = new LightweightHint(panel) -->Line_16 $$ cancelPopup()[ CD ]
Line_26 $$ getHintContainerShowPoint().doWhenDone(new Consumer<RelativePoint>() -->Line_30 $$ final Component owner = focusManager.getFocusOwner()[ CD ]
Line_24 $$ if (editor == null) -->Line_39 $$ getHintContainerShowPoint().doWhenDone(new Consumer<RelativePoint>() [ CD ]
Line_11 $$ myHint = new LightweightHint(panel) -->Line_15 $$ super.hide()[ CD ]
Line_26 $$ getHintContainerShowPoint().doWhenDone(new Consumer<RelativePoint>() -->Line_33 $$ myHint.show((JComponent) cmp, relativePoint.getPoint().x, relativePoint.getPoint().y, owner instanceof JComponent ? (JComponent) owner : null, new HintHint(relativePoint.getComponent(), relativePoint.getPoint()))[ FD ]
Line_7 $$ final JPanel panel = new JPanel(new BorderLayout())-->Line_8 $$ panel.add(this)[ FD ]
Line_26 $$ getHintContainerShowPoint().doWhenDone(new Consumer<RelativePoint>() -->Line_31 $$ final Component cmp = relativePoint.getComponent()[ FD ]
Line_5 $$ if (myModel.isEmpty())-->Line_6 $$ return[ CD ]
Line_31 $$ final Component cmp = relativePoint.getComponent()-->Line_32 $$ if (cmp instanceof JComponent && cmp.isShowing()) [ FD ]
Line_39 $$ getHintContainerShowPoint().doWhenDone(new Consumer<RelativePoint>() -->Line_45 $$ HintManagerImpl.getInstanceImpl().showEditorHint(myHint, editor, p, HintManager.HIDE_BY_ESCAPE, 0, true, hintInfo)[ CD ]
Line_24 $$ if (editor == null) -->Line_25 $$ myContextComponent = PlatformDataKeys.CONTEXT_COMPONENT.getData(dataContext)[ CD ]
Line_44 $$ final HintHint hintInfo = new HintHint(editor, p)-->Line_45 $$ HintManagerImpl.getInstanceImpl().showEditorHint(myHint, editor, p, HintManager.HIDE_BY_ESCAPE, 0, true, hintInfo)[ FD ]
Line_39 $$ getHintContainerShowPoint().doWhenDone(new Consumer<RelativePoint>() -->Line_43 $$ Point p = rp.getPointOn(myHintContainer).getPoint()[ FD ]
Line_39 $$ getHintContainerShowPoint().doWhenDone(new Consumer<RelativePoint>() -->Line_44 $$ final HintHint hintInfo = new HintHint(editor, p)[ CD ]
Line_26 $$ getHintContainerShowPoint().doWhenDone(new Consumer<RelativePoint>() -->Line_32 $$ if (cmp instanceof JComponent && cmp.isShowing()) [ CD ]
Line_43 $$ Point p = rp.getPointOn(myHintContainer).getPoint()-->Line_45 $$ HintManagerImpl.getInstanceImpl().showEditorHint(myHint, editor, p, HintManager.HIDE_BY_ESCAPE, 0, true, hintInfo)[ FD ]
Line_7 $$ final JPanel panel = new JPanel(new BorderLayout())-->Line_9 $$ panel.setOpaque(true)[ FD ]
Line_32 $$ if (cmp instanceof JComponent && cmp.isShowing()) -->Line_33 $$ myHint.show((JComponent) cmp, relativePoint.getPoint().x, relativePoint.getPoint().y, owner instanceof JComponent ? (JComponent) owner : null, new HintHint(relativePoint.getComponent(), relativePoint.getPoint()))[ CD ]
Line_24 $$ if (editor == null) -->Line_38 $$ myHintContainer = editor.getContentComponent()[ CD ]
Line_7 $$ final JPanel panel = new JPanel(new BorderLayout())-->Line_10 $$ panel.setBackground(UIUtil.isUnderGTKLookAndFeel() ? Color.WHITE : UIUtil.getListBackground())[ FD ]
