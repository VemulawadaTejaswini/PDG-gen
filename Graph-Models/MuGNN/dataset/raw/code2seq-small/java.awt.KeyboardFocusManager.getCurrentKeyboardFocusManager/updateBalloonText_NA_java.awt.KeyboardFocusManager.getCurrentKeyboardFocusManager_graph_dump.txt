Line_5 $$ if (myTooltipHint == null) -->Line_7 $$ myTooltipHint.setCancelOnClickOutside(false)[ CD ]
Line_5 $$ if (myTooltipHint == null) -->Line_8 $$ myTooltipHint.setCancelOnOtherWindowOpen(false)[ CD ]
Line_9 $$ final HintHint hint = new HintHint(this, point).setPreferredPosition(myVertical ? Balloon.Position.atLeft : Balloon.Position.above).setBorderColor(Color.BLACK).setAwtTooltip(true).setFont(UIUtil.getLabelFont().deriveFont(Font.BOLD)).setTextBg(HintUtil.INFORMATION_COLOR).setShowImmediately(true)-->Line_11 $$ myTooltipHint.show(this, point.x, point.y, owner instanceof JComponent ? (JComponent) owner : null, hint)[ FD ]
Line_5 $$ if (myTooltipHint == null) -->Line_9 $$ final HintHint hint = new HintHint(this, point).setPreferredPosition(myVertical ? Balloon.Position.atLeft : Balloon.Position.above).setBorderColor(Color.BLACK).setAwtTooltip(true).setFont(UIUtil.getLabelFont().deriveFont(Font.BOLD)).setTextBg(HintUtil.INFORMATION_COLOR).setShowImmediately(true)[ CD ]
Line_5 $$ if (myTooltipHint == null) -->Line_11 $$ myTooltipHint.show(this, point.x, point.y, owner instanceof JComponent ? (JComponent) owner : null, hint)[ CD ]
Line_5 $$ if (myTooltipHint == null) -->Line_13 $$ myTooltipHint.setLocation(new RelativePoint(this, point))[ CD ]
Line_2 $$ private void updateBalloonText() -->Line_3 $$ final Point point = myVertical ? new Point(0, myPointerValue) : new Point(myPointerValue, 0)[ CD ]
Line_2 $$ private void updateBalloonText() -->Line_4 $$ myLabel.setText(myTitle + ": " + Unit.formatValue(myValue, myUnit))[ CD ]
Line_5 $$ if (myTooltipHint == null) -->Line_10 $$ final Component owner = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner()[ CD ]
Line_2 $$ private void updateBalloonText() -->Line_5 $$ if (myTooltipHint == null) [ CD ]
