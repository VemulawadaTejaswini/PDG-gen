Line_22 $$ if (files != null && files.length == 1) -->Line_24 $$ if (files != null && files.length > 1) [ CD ]
Line_29 $$ if (!history.isEmpty()) -->Line_30 $$ setFile(history.get(0).getFirst())[ CD ]
Line_2 $$ private void checkUpdate() -->Line_5 $$ final Component owner = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner()[ CD ]
Line_26 $$ if (myFirstRun) -->Line_27 $$ final FileEditorManagerImpl editorManager = (FileEditorManagerImpl) FileEditorManager.getInstance(myProject)[ CD ]
Line_10 $$ final DataContext dataContext = DataManager.getInstance().getDataContext(owner)-->Line_13 $$ if (CommonDataKeys.PROJECT.getData(dataContext) != myProject)[ FD ]
Line_11 $$ if (dataContext.getData(myKey) == this)-->Line_12 $$ return[ CD ]
Line_2 $$ private void checkUpdate() -->Line_11 $$ if (dataContext.getData(myKey) == this)[ CD ]
Line_16 $$ if (!myToolWindow.isVisible()) -->Line_17 $$ if (files != null && files.length > 0) [ CD ]
Line_28 $$ final List<Pair<VirtualFile, EditorWindow>> history = editorManager.getSelectionHistory()-->Line_30 $$ setFile(history.get(0).getFirst())[ FD ]
Line_16 $$ if (!myToolWindow.isVisible()) -->Line_20 $$ return[ CD ]
Line_10 $$ final DataContext dataContext = DataManager.getInstance().getDataContext(owner)-->Line_11 $$ if (dataContext.getData(myKey) == this)[ FD ]
Line_28 $$ final List<Pair<VirtualFile, EditorWindow>> history = editorManager.getSelectionHistory()-->Line_29 $$ if (!history.isEmpty()) [ FD ]
Line_24 $$ if (files != null && files.length > 1) -->Line_26 $$ if (myFirstRun) [ CD ]
Line_2 $$ private void checkUpdate() -->Line_10 $$ final DataContext dataContext = DataManager.getInstance().getDataContext(owner)[ CD ]
Line_27 $$ final FileEditorManagerImpl editorManager = (FileEditorManagerImpl) FileEditorManager.getInstance(myProject)-->Line_28 $$ final List<Pair<VirtualFile, EditorWindow>> history = editorManager.getSelectionHistory()[ FD ]
Line_5 $$ final Component owner = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner()-->Line_6 $$ final boolean insideToolwindow = SwingUtilities.isDescendingFrom(myToolWindow.getComponent(), owner)[ FD ]
Line_13 $$ if (CommonDataKeys.PROJECT.getData(dataContext) != myProject)-->Line_14 $$ return[ CD ]
Line_3 $$ if (myProject.isDisposed())-->Line_4 $$ return[ CD ]
Line_10 $$ final DataContext dataContext = DataManager.getInstance().getDataContext(owner)-->Line_15 $$ final VirtualFile[] files = hasFocus() ? null : CommonDataKeys.VIRTUAL_FILE_ARRAY.getData(dataContext)[ FD ]
Line_2 $$ private void checkUpdate() -->Line_22 $$ if (files != null && files.length == 1) [ CD ]
Line_26 $$ if (myFirstRun) -->Line_28 $$ final List<Pair<VirtualFile, EditorWindow>> history = editorManager.getSelectionHistory()[ CD ]
Line_2 $$ private void checkUpdate() -->Line_16 $$ if (!myToolWindow.isVisible()) [ CD ]
Line_7 $$ if (!myFirstRun && (insideToolwindow || JBPopupFactory.getInstance().isPopupActive())) -->Line_8 $$ return[ CD ]
Line_26 $$ if (myFirstRun) -->Line_29 $$ if (!history.isEmpty()) [ CD ]
Line_2 $$ private void checkUpdate() -->Line_7 $$ if (!myFirstRun && (insideToolwindow || JBPopupFactory.getInstance().isPopupActive())) [ CD ]
Line_2 $$ private void checkUpdate() -->Line_6 $$ final boolean insideToolwindow = SwingUtilities.isDescendingFrom(myToolWindow.getComponent(), owner)[ CD ]
Line_24 $$ if (files != null && files.length > 1) -->Line_25 $$ setFile(null)[ CD ]
Line_2 $$ private void checkUpdate() -->Line_13 $$ if (CommonDataKeys.PROJECT.getData(dataContext) != myProject)[ CD ]
Line_2 $$ private void checkUpdate() -->Line_15 $$ final VirtualFile[] files = hasFocus() ? null : CommonDataKeys.VIRTUAL_FILE_ARRAY.getData(dataContext)[ CD ]
Line_22 $$ if (files != null && files.length == 1) -->Line_23 $$ setFile(files[0])[ CD ]
Line_5 $$ final Component owner = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner()-->Line_10 $$ final DataContext dataContext = DataManager.getInstance().getDataContext(owner)[ FD ]
Line_2 $$ private void checkUpdate() -->Line_3 $$ if (myProject.isDisposed())[ CD ]
