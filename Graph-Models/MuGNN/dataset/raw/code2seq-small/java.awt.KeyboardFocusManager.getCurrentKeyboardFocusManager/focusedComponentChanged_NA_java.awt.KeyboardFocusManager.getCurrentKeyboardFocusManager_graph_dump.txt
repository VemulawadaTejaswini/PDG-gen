Line_8 $$ if (owner instanceof EditorComponentImpl && cause instanceof FocusEvent) -->Line_11 $$ if (oppositeComponent != null && UIUtil.getWindow(oppositeComponent) != frame) [ CD ]
Line_10 $$ Component oppositeComponent = ((FocusEvent) cause).getOppositeComponent()-->Line_11 $$ if (oppositeComponent != null && UIUtil.getWindow(oppositeComponent) != frame) [ FD ]
Line_2 $$ protected void focusedComponentChanged(final Component component, final AWTEvent cause) -->Line_7 $$ final Component owner = mgr.getFocusOwner()[ CD ]
Line_8 $$ if (owner instanceof EditorComponentImpl && cause instanceof FocusEvent) -->Line_9 $$ JFrame frame = WindowManager.getInstance().getFrame(myProject)[ CD ]
Line_17 $$ if (mgr.getFocusOwner() == owner) -->Line_18 $$ activateEditorComponent(false)[ CD ]
Line_3 $$ if (myWindowManager.getCommandProcessor().getCommandCount() > 0 || component == null) -->Line_4 $$ return[ CD ]
Line_7 $$ final Component owner = mgr.getFocusOwner()-->Line_17 $$ if (mgr.getFocusOwner() == owner) [ FD ]
Line_11 $$ if (oppositeComponent != null && UIUtil.getWindow(oppositeComponent) != frame) -->Line_12 $$ return[ CD ]
Line_2 $$ protected void focusedComponentChanged(final Component component, final AWTEvent cause) -->Line_3 $$ if (myWindowManager.getCommandProcessor().getCommandCount() > 0 || component == null) [ CD ]
Line_15 $$ IdeFocusManager.getInstance(myProject).doWhenFocusSettlesDown(new ExpirableRunnable.ForProject(myProject) -->Line_17 $$ if (mgr.getFocusOwner() == owner) [ CD ]
Line_2 $$ protected void focusedComponentChanged(final Component component, final AWTEvent cause) -->Line_6 $$ final KeyboardFocusManager mgr = KeyboardFocusManager.getCurrentKeyboardFocusManager()[ CD ]
Line_6 $$ final KeyboardFocusManager mgr = KeyboardFocusManager.getCurrentKeyboardFocusManager()-->Line_17 $$ if (mgr.getFocusOwner() == owner) [ FD ]
Line_2 $$ protected void focusedComponentChanged(final Component component, final AWTEvent cause) -->Line_15 $$ IdeFocusManager.getInstance(myProject).doWhenFocusSettlesDown(new ExpirableRunnable.ForProject(myProject) [ CD ]
Line_6 $$ final KeyboardFocusManager mgr = KeyboardFocusManager.getCurrentKeyboardFocusManager()-->Line_7 $$ final Component owner = mgr.getFocusOwner()[ FD ]
Line_2 $$ protected void focusedComponentChanged(final Component component, final AWTEvent cause) -->Line_8 $$ if (owner instanceof EditorComponentImpl && cause instanceof FocusEvent) [ CD ]
Line_8 $$ if (owner instanceof EditorComponentImpl && cause instanceof FocusEvent) -->Line_10 $$ Component oppositeComponent = ((FocusEvent) cause).getOppositeComponent()[ CD ]
