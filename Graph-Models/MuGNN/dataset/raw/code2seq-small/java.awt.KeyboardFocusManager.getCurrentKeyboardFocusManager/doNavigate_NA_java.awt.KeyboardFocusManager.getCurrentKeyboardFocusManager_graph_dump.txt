Line_11 $$ WidgetID wid = null-->Line_17 $$ wid = WidgetID.SETTINGS[ FD ]
Line_11 $$ WidgetID wid = null-->Line_23 $$ wid = WidgetID.RUN_CONFIGURATIONS[ FD ]
Line_2 $$ private void doNavigate(final int index) -->Line_14 $$ if (index == model.moreIndex.files)[ FD ]
Line_13 $$ wid = WidgetID.CLASSES-->Line_17 $$ wid = WidgetID.SETTINGS[ FD ]
Line_2 $$ private void doNavigate(final int index) -->Line_12 $$ if (index == model.moreIndex.classes)[ FD ]
Line_11 $$ WidgetID wid = null-->Line_21 $$ wid = WidgetID.SYMBOLS[ FD ]
Line_17 $$ wid = WidgetID.SETTINGS-->Line_21 $$ wid = WidgetID.SYMBOLS[ FD ]
Line_84 $$ c = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner()-->Line_96 $$ GotoActionAction.openOptionOrPerformAction(value, pattern, project, c, event)[ FD ]
Line_52 $$ SwingUtilities.invokeLater(new Runnable() -->Line_54 $$ getField().setText("#" + ((OptionsTopHitProvider) value).getId() + " ")[ CD ]
Line_16 $$ if (index == model.moreIndex.settings)-->Line_17 $$ wid = WidgetID.SETTINGS[ CD ]
Line_86 $$ if (isRunConfiguration(value)) -->Line_88 $$ RunnerAndConfigurationSettings settings = ObjectUtils.tryCast(itemWrapper.getValue(), RunnerAndConfigurationSettings.class)[ CD ]
Line_2 $$ private void doNavigate(final int index) -->Line_4 $$ if (dataManager == null)[ CD ]
Line_11 $$ WidgetID wid = null-->Line_19 $$ wid = WidgetID.ACTIONS[ FD ]
Line_89 $$ if (settings != null) -->Line_90 $$ Executor executor = findExecutor(settings)[ CD ]
Line_40 $$ if (myPopup != null && myPopup.isVisible()) -->Line_41 $$ myPopup.cancel()[ CD ]
Line_97 $$ if (isToolWindowAction(value))-->Line_98 $$ return[ CD ]
Line_2 $$ private void doNavigate(final int index) -->Line_38 $$ saveHistory(project, pattern, value)[ CD ]
Line_16 $$ if (index == model.moreIndex.settings)-->Line_18 $$ if (index == model.moreIndex.actions)[ CD ]
Line_11 $$ WidgetID wid = null-->Line_13 $$ wid = WidgetID.CLASSES[ FD ]
Line_2 $$ private void doNavigate(final int index) -->Line_16 $$ if (index == model.moreIndex.settings)[ FD ]
Line_15 $$ wid = WidgetID.FILES-->Line_24 $$ if (wid != null) [ FD ]
Line_2 $$ private void doNavigate(final int index) -->Line_30 $$ myCurrentWorker = myCalcThread.insert(index, widgetID)[ FD ]
Line_91 $$ if (executor != null) -->Line_92 $$ itemWrapper.perform(project, executor, dataManager.getDataContext(c))[ CD ]
Line_10 $$ final String pattern = myPopupField.getText()-->Line_38 $$ saveHistory(project, pattern, value)[ FD ]
Line_13 $$ wid = WidgetID.CLASSES-->Line_21 $$ wid = WidgetID.SYMBOLS[ FD ]
Line_25 $$ final WidgetID widgetID = wid-->Line_30 $$ myCurrentWorker = myCalcThread.insert(index, widgetID)[ FD ]
Line_26 $$ myCurrentWorker.doWhenProcessed(new Runnable() -->Line_30 $$ myCurrentWorker = myCalcThread.insert(index, widgetID)[ CD ]
Line_14 $$ if (index == model.moreIndex.files)-->Line_15 $$ wid = WidgetID.FILES[ CD ]
Line_6 $$ final Project project = CommonDataKeys.PROJECT.getData(dataManager.getDataContext(getField().getTextEditor()))-->Line_92 $$ itemWrapper.perform(project, executor, dataManager.getDataContext(c))[ FD ]
Line_104 $$ onDone = new Runnable() -->Line_106 $$ OpenSourceUtil.navigate(true, (Navigatable) value)[ CD ]
Line_23 $$ wid = WidgetID.RUN_CONFIGURATIONS-->Line_24 $$ if (wid != null) [ FD ]
Line_2 $$ private void doNavigate(final int index) -->Line_43 $$ if (value instanceof BooleanOptionDescription) [ CD ]
Line_80 $$ IdeFocusManager.getInstance(project).doWhenFocusSettlesDown(new Runnable() -->Line_83 $$ if (c == null) [ CD ]
Line_9 $$ if (isMoreItem(index)) -->Line_24 $$ if (wid != null) [ CD ]
Line_12 $$ if (index == model.moreIndex.classes)-->Line_13 $$ wid = WidgetID.CLASSES[ CD ]
Line_12 $$ if (index == model.moreIndex.classes)-->Line_14 $$ if (index == model.moreIndex.files)[ CD ]
Line_3 $$ final DataManager dataManager = DataManager.getInstance()-->Line_4 $$ if (dataManager == null)[ FD ]
Line_21 $$ wid = WidgetID.SYMBOLS-->Line_24 $$ if (wid != null) [ FD ]
Line_24 $$ if (wid != null) -->Line_25 $$ final WidgetID widgetID = wid[ CD ]
Line_15 $$ wid = WidgetID.FILES-->Line_21 $$ wid = WidgetID.SYMBOLS[ FD ]
Line_9 $$ if (isMoreItem(index)) -->Line_12 $$ if (index == model.moreIndex.classes)[ CD ]
Line_2 $$ private void doNavigate(final int index) -->Line_40 $$ if (myPopup != null && myPopup.isVisible()) [ CD ]
Line_10 $$ final String pattern = myPopupField.getText()-->Line_96 $$ GotoActionAction.openOptionOrPerformAction(value, pattern, project, c, event)[ FD ]
Line_114 $$ if (onDone != null) -->Line_115 $$ callback.doWhenDone(onDone)[ CD ]
Line_17 $$ wid = WidgetID.SETTINGS-->Line_19 $$ wid = WidgetID.ACTIONS[ FD ]
Line_2 $$ private void doNavigate(final int index) -->Line_118 $$ focusManager.requestDefaultFocus(true)[ CD ]
Line_51 $$ if (value instanceof OptionsTopHitProvider) -->Line_57 $$ return[ CD ]
Line_13 $$ wid = WidgetID.CLASSES-->Line_19 $$ wid = WidgetID.ACTIONS[ FD ]
Line_13 $$ wid = WidgetID.CLASSES-->Line_23 $$ wid = WidgetID.RUN_CONFIGURATIONS[ FD ]
Line_82 $$ Component c = comp-->Line_83 $$ if (c == null) [ FD ]
Line_17 $$ wid = WidgetID.SETTINGS-->Line_23 $$ wid = WidgetID.RUN_CONFIGURATIONS[ FD ]
Line_6 $$ final Project project = CommonDataKeys.PROJECT.getData(dataManager.getDataContext(getField().getTextEditor()))-->Line_80 $$ IdeFocusManager.getInstance(project).doWhenFocusSettlesDown(new Runnable() [ FD ]
Line_88 $$ RunnerAndConfigurationSettings settings = ObjectUtils.tryCast(itemWrapper.getValue(), RunnerAndConfigurationSettings.class)-->Line_89 $$ if (settings != null) [ FD ]
Line_15 $$ wid = WidgetID.FILES-->Line_17 $$ wid = WidgetID.SETTINGS[ FD ]
Line_43 $$ if (value instanceof BooleanOptionDescription) -->Line_49 $$ return[ CD ]
Line_82 $$ Component c = comp-->Line_84 $$ c = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner()[ FD ]
Line_19 $$ wid = WidgetID.ACTIONS-->Line_21 $$ wid = WidgetID.SYMBOLS[ FD ]
Line_13 $$ wid = WidgetID.CLASSES-->Line_15 $$ wid = WidgetID.FILES[ FD ]
Line_80 $$ IdeFocusManager.getInstance(project).doWhenFocusSettlesDown(new Runnable() -->Line_86 $$ if (isRunConfiguration(value)) [ CD ]
Line_14 $$ if (index == model.moreIndex.files)-->Line_16 $$ if (index == model.moreIndex.settings)[ CD ]
Line_2 $$ private void doNavigate(final int index) -->Line_37 $$ final Object value = myList.getSelectedValue()[ CD ]
Line_86 $$ if (isRunConfiguration(value)) -->Line_97 $$ if (isToolWindowAction(value))[ CD ]
Line_76 $$ if (isActionValue(value) || isSetting(value) || isRunConfiguration(value)) -->Line_77 $$ focusManager.requestDefaultFocus(true)[ CD ]
Line_11 $$ WidgetID wid = null-->Line_15 $$ wid = WidgetID.FILES[ FD ]
Line_82 $$ Component c = comp-->Line_96 $$ GotoActionAction.openOptionOrPerformAction(value, pattern, project, c, event)[ FD ]
Line_2 $$ private void doNavigate(final int index) -->Line_60 $$ AccessToken token = ApplicationManager.getApplication().acquireReadActionLock()[ CD ]
Line_70 $$ onDone = new Runnable() -->Line_72 $$ OpenSourceUtil.navigate(true, new OpenFileDescriptor(project, (VirtualFile) value))[ CD ]
Line_80 $$ IdeFocusManager.getInstance(project).doWhenFocusSettlesDown(new Runnable() -->Line_82 $$ Component c = comp[ CD ]
Line_9 $$ if (isMoreItem(index)) -->Line_11 $$ WidgetID wid = null[ CD ]
Line_6 $$ final Project project = CommonDataKeys.PROJECT.getData(dataManager.getDataContext(getField().getTextEditor()))-->Line_38 $$ saveHistory(project, pattern, value)[ FD ]
Line_24 $$ if (wid != null) -->Line_33 $$ return[ CD ]
Line_86 $$ if (isRunConfiguration(value)) -->Line_96 $$ GotoActionAction.openOptionOrPerformAction(value, pattern, project, c, event)[ CD ]
Line_15 $$ wid = WidgetID.FILES-->Line_23 $$ wid = WidgetID.RUN_CONFIGURATIONS[ FD ]
Line_86 $$ if (isRunConfiguration(value)) -->Line_89 $$ if (settings != null) [ CD ]
Line_43 $$ if (value instanceof BooleanOptionDescription) -->Line_48 $$ getField().requestFocus()[ CD ]
Line_19 $$ wid = WidgetID.ACTIONS-->Line_24 $$ if (wid != null) [ FD ]
Line_88 $$ RunnerAndConfigurationSettings settings = ObjectUtils.tryCast(itemWrapper.getValue(), RunnerAndConfigurationSettings.class)-->Line_90 $$ Executor executor = findExecutor(settings)[ FD ]
Line_3 $$ final DataManager dataManager = DataManager.getInstance()-->Line_6 $$ final Project project = CommonDataKeys.PROJECT.getData(dataManager.getDataContext(getField().getTextEditor()))[ FD ]
Line_82 $$ Component c = comp-->Line_92 $$ itemWrapper.perform(project, executor, dataManager.getDataContext(c))[ FD ]
Line_62 $$ if (value instanceof PsiElement) -->Line_69 $$ if (isVirtualFile(value)) [ CD ]
Line_2 $$ private void doNavigate(final int index) -->Line_9 $$ if (isMoreItem(index)) [ CD ]
Line_76 $$ if (isActionValue(value) || isSetting(value) || isRunConfiguration(value)) -->Line_103 $$ if (value instanceof Navigatable) [ CD ]
Line_43 $$ if (value instanceof BooleanOptionDescription) -->Line_46 $$ myList.revalidate()[ CD ]
Line_76 $$ if (isActionValue(value) || isSetting(value) || isRunConfiguration(value)) -->Line_102 $$ return[ CD ]
Line_63 $$ onDone = new Runnable() -->Line_65 $$ NavigationUtil.activateFileWithPsiElement((PsiElement) value, true)[ CD ]
Line_22 $$ if (index == model.moreIndex.runConfigurations)-->Line_23 $$ wid = WidgetID.RUN_CONFIGURATIONS[ CD ]
Line_2 $$ private void doNavigate(final int index) -->Line_36 $$ final String pattern = getField().getText()[ CD ]
Line_89 $$ if (settings != null) -->Line_91 $$ if (executor != null) [ CD ]
Line_3 $$ final DataManager dataManager = DataManager.getInstance()-->Line_92 $$ itemWrapper.perform(project, executor, dataManager.getDataContext(c))[ FD ]
Line_103 $$ if (value instanceof Navigatable) -->Line_109 $$ return[ CD ]
Line_15 $$ wid = WidgetID.FILES-->Line_19 $$ wid = WidgetID.ACTIONS[ FD ]
Line_86 $$ if (isRunConfiguration(value)) -->Line_87 $$ ChooseRunConfigurationPopup.ItemWrapper itemWrapper = (ChooseRunConfigurationPopup.ItemWrapper) value[ CD ]
Line_9 $$ if (isMoreItem(index)) -->Line_10 $$ final String pattern = myPopupField.getText()[ CD ]
Line_83 $$ if (c == null) -->Line_84 $$ c = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner()[ CD ]
Line_90 $$ Executor executor = findExecutor(settings)-->Line_91 $$ if (executor != null) [ FD ]
Line_4 $$ if (dataManager == null)-->Line_5 $$ return[ CD ]
Line_62 $$ if (value instanceof PsiElement) -->Line_68 $$ return[ CD ]
Line_20 $$ if (index == model.moreIndex.symbols)-->Line_21 $$ wid = WidgetID.SYMBOLS[ CD ]
Line_43 $$ if (value instanceof BooleanOptionDescription) -->Line_45 $$ option.setOptionState(!option.isOptionEnabled())[ CD ]
Line_87 $$ ChooseRunConfigurationPopup.ItemWrapper itemWrapper = (ChooseRunConfigurationPopup.ItemWrapper) value-->Line_92 $$ itemWrapper.perform(project, executor, dataManager.getDataContext(c))[ FD ]
Line_2 $$ private void doNavigate(final int index) -->Line_9 $$ if (isMoreItem(index)) [ FD ]
Line_2 $$ private void doNavigate(final int index) -->Line_20 $$ if (index == model.moreIndex.symbols)[ FD ]
Line_13 $$ wid = WidgetID.CLASSES-->Line_24 $$ if (wid != null) [ FD ]
Line_18 $$ if (index == model.moreIndex.actions)-->Line_19 $$ wid = WidgetID.ACTIONS[ CD ]
Line_90 $$ Executor executor = findExecutor(settings)-->Line_92 $$ itemWrapper.perform(project, executor, dataManager.getDataContext(c))[ FD ]
Line_24 $$ if (wid != null) -->Line_26 $$ myCurrentWorker.doWhenProcessed(new Runnable() [ CD ]
Line_19 $$ wid = WidgetID.ACTIONS-->Line_23 $$ wid = WidgetID.RUN_CONFIGURATIONS[ FD ]
Line_76 $$ if (isActionValue(value) || isSetting(value) || isRunConfiguration(value)) -->Line_80 $$ IdeFocusManager.getInstance(project).doWhenFocusSettlesDown(new Runnable() [ CD ]
Line_2 $$ private void doNavigate(final int index) -->Line_18 $$ if (index == model.moreIndex.actions)[ FD ]
Line_11 $$ WidgetID wid = null-->Line_24 $$ if (wid != null) [ FD ]
Line_2 $$ private void doNavigate(final int index) -->Line_3 $$ final DataManager dataManager = DataManager.getInstance()[ CD ]
Line_18 $$ if (index == model.moreIndex.actions)-->Line_20 $$ if (index == model.moreIndex.symbols)[ CD ]
Line_20 $$ if (index == model.moreIndex.symbols)-->Line_22 $$ if (index == model.moreIndex.runConfigurations)[ CD ]
Line_43 $$ if (value instanceof BooleanOptionDescription) -->Line_47 $$ myList.repaint()[ CD ]
Line_87 $$ ChooseRunConfigurationPopup.ItemWrapper itemWrapper = (ChooseRunConfigurationPopup.ItemWrapper) value-->Line_88 $$ RunnerAndConfigurationSettings settings = ObjectUtils.tryCast(itemWrapper.getValue(), RunnerAndConfigurationSettings.class)[ FD ]
Line_69 $$ if (isVirtualFile(value)) -->Line_76 $$ if (isActionValue(value) || isSetting(value) || isRunConfiguration(value)) [ CD ]
Line_69 $$ if (isVirtualFile(value)) -->Line_75 $$ return[ CD ]
Line_17 $$ wid = WidgetID.SETTINGS-->Line_24 $$ if (wid != null) [ FD ]
Line_2 $$ private void doNavigate(final int index) -->Line_39 $$ IdeFocusManager focusManager = IdeFocusManager.findInstanceByComponent(getField().getTextEditor())[ CD ]
Line_21 $$ wid = WidgetID.SYMBOLS-->Line_23 $$ wid = WidgetID.RUN_CONFIGURATIONS[ FD ]
Line_2 $$ private void doNavigate(final int index) -->Line_6 $$ final Project project = CommonDataKeys.PROJECT.getData(dataManager.getDataContext(getField().getTextEditor()))[ CD ]
Line_2 $$ private void doNavigate(final int index) -->Line_22 $$ if (index == model.moreIndex.runConfigurations)[ FD ]
Line_6 $$ final Project project = CommonDataKeys.PROJECT.getData(dataManager.getDataContext(getField().getTextEditor()))-->Line_96 $$ GotoActionAction.openOptionOrPerformAction(value, pattern, project, c, event)[ FD ]
Line_51 $$ if (value instanceof OptionsTopHitProvider) -->Line_52 $$ SwingUtilities.invokeLater(new Runnable() [ CD ]
Line_2 $$ private void doNavigate(final int index) -->Line_8 $$ final SearchListModel model = getModel()[ CD ]
Line_84 $$ c = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner()-->Line_92 $$ itemWrapper.perform(project, executor, dataManager.getDataContext(c))[ FD ]
Line_2 $$ private void doNavigate(final int index) -->Line_51 $$ if (value instanceof OptionsTopHitProvider) [ CD ]
