Line_12 $$ if (focusOwner == null || !focusOwner.isShowing() || focusOwner instanceof JFrame || focusOwner instanceof JDialog) -->Line_13 $$ final Application app = ApplicationManager.getApplication()[ CD ]
Line_22 $$ if (showingWindow == null) -->Line_24 $$ if (getNativeFocusOwner != null) [ CD ]
Line_37 $$ ExpirableRunnable maybeRequestDefaultFocus = new ExpirableRunnable() -->Line_43 $$ final Application app = ApplicationManager.getApplication()[ CD ]
Line_18 $$ boolean focusTransferredNow = IdeFocusManager.getGlobalInstance().isFocusBeingTransferred()-->Line_19 $$ boolean okToFixFocus = !mouseEventsAhead && !focusTransferredNow[ FD ]
Line_12 $$ if (focusOwner == null || !focusOwner.isShowing() || focusOwner instanceof JFrame || focusOwner instanceof JDialog) -->Line_20 $$ if (okToFixFocus) [ CD ]
Line_21 $$ Window showingWindow = mgr.getActiveWindow()-->Line_28 $$ showingWindow = UIUtil.getWindow((Component) owner)[ FD ]
Line_13 $$ final Application app = ApplicationManager.getApplication()-->Line_44 $$ if (app != null && app.isActive()) [ FD ]
Line_35 $$ if (showingWindow != null) -->Line_36 $$ final IdeFocusManager fm = IdeFocusManager.findInstanceByComponent(showingWindow)[ CD ]
Line_5 $$ final KeyboardFocusManager mgr = KeyboardFocusManager.getCurrentKeyboardFocusManager()-->Line_21 $$ Window showingWindow = mgr.getActiveWindow()[ FD ]
Line_2 $$ public void fixStickyFocusedComponents(@Nullable AWTEvent e) -->Line_5 $$ final KeyboardFocusManager mgr = KeyboardFocusManager.getCurrentKeyboardFocusManager()[ CD ]
Line_21 $$ Window showingWindow = mgr.getActiveWindow()-->Line_22 $$ if (showingWindow == null) [ FD ]
Line_2 $$ public void fixStickyFocusedComponents(@Nullable AWTEvent e) -->Line_3 $$ if (e != null && !(e instanceof InputEvent))[ CD ]
Line_6 $$ if (Registry.is("actionSystem.fixStickyFocusedWindows")) -->Line_7 $$ fixStickyWindow(mgr, mgr.getActiveWindow(), "setGlobalActiveWindow")[ CD ]
Line_37 $$ ExpirableRunnable maybeRequestDefaultFocus = new ExpirableRunnable() -->Line_41 $$ if (getPopupManager().requestDefaultFocus(false))[ CD ]
Line_21 $$ Window showingWindow = mgr.getActiveWindow()-->Line_35 $$ if (showingWindow != null) [ FD ]
Line_12 $$ if (focusOwner == null || !focusOwner.isShowing() || focusOwner instanceof JFrame || focusOwner instanceof JDialog) -->Line_18 $$ boolean focusTransferredNow = IdeFocusManager.getGlobalInstance().isFocusBeingTransferred()[ CD ]
Line_2 $$ public void fixStickyFocusedComponents(@Nullable AWTEvent e) -->Line_6 $$ if (Registry.is("actionSystem.fixStickyFocusedWindows")) [ CD ]
Line_20 $$ if (okToFixFocus) -->Line_21 $$ Window showingWindow = mgr.getActiveWindow()[ CD ]
Line_28 $$ showingWindow = UIUtil.getWindow((Component) owner)-->Line_35 $$ if (showingWindow != null) [ FD ]
Line_2 $$ public void fixStickyFocusedComponents(@Nullable AWTEvent e) -->Line_17 $$ boolean mouseEventsAhead = isMouseEventAhead(e)[ FD ]
Line_5 $$ final KeyboardFocusManager mgr = KeyboardFocusManager.getCurrentKeyboardFocusManager()-->Line_8 $$ fixStickyWindow(mgr, mgr.getFocusedWindow(), "setGlobalFocusedWindow")[ FD ]
Line_23 $$ Method getNativeFocusOwner = ReflectionUtil.getDeclaredMethod(KeyboardFocusManager.class, "getNativeFocusOwner")-->Line_26 $$ Object owner = getNativeFocusOwner.invoke(mgr)[ FD ]
Line_3 $$ if (e != null && !(e instanceof InputEvent))-->Line_4 $$ return[ CD ]
Line_5 $$ final KeyboardFocusManager mgr = KeyboardFocusManager.getCurrentKeyboardFocusManager()-->Line_7 $$ fixStickyWindow(mgr, mgr.getActiveWindow(), "setGlobalActiveWindow")[ FD ]
Line_6 $$ if (Registry.is("actionSystem.fixStickyFocusedWindows")) -->Line_8 $$ fixStickyWindow(mgr, mgr.getFocusedWindow(), "setGlobalFocusedWindow")[ CD ]
Line_41 $$ if (getPopupManager().requestDefaultFocus(false))-->Line_42 $$ return[ CD ]
Line_21 $$ Window showingWindow = mgr.getActiveWindow()-->Line_36 $$ final IdeFocusManager fm = IdeFocusManager.findInstanceByComponent(showingWindow)[ FD ]
Line_26 $$ Object owner = getNativeFocusOwner.invoke(mgr)-->Line_27 $$ if (owner instanceof Component) [ FD ]
Line_37 $$ ExpirableRunnable maybeRequestDefaultFocus = new ExpirableRunnable() -->Line_51 $$ return !UIUtil.isMeaninglessFocusOwner(mgr.getFocusOwner())[ CD ]
Line_12 $$ if (focusOwner == null || !focusOwner.isShowing() || focusOwner instanceof JFrame || focusOwner instanceof JDialog) -->Line_17 $$ boolean mouseEventsAhead = isMouseEventAhead(e)[ CD ]
Line_5 $$ final KeyboardFocusManager mgr = KeyboardFocusManager.getCurrentKeyboardFocusManager()-->Line_51 $$ return !UIUtil.isMeaninglessFocusOwner(mgr.getFocusOwner())[ FD ]
Line_36 $$ final IdeFocusManager fm = IdeFocusManager.findInstanceByComponent(showingWindow)-->Line_45 $$ fm.requestDefaultFocus(false)[ FD ]
Line_43 $$ final Application app = ApplicationManager.getApplication()-->Line_44 $$ if (app != null && app.isActive()) [ FD ]
Line_10 $$ if (Registry.is("actionSystem.fixNullFocusedComponent")) -->Line_12 $$ if (focusOwner == null || !focusOwner.isShowing() || focusOwner instanceof JFrame || focusOwner instanceof JDialog) [ CD ]
Line_27 $$ if (owner instanceof Component) -->Line_28 $$ showingWindow = UIUtil.getWindow((Component) owner)[ CD ]
Line_37 $$ ExpirableRunnable maybeRequestDefaultFocus = new ExpirableRunnable() -->Line_54 $$ fm.revalidateFocus(maybeRequestDefaultFocus)[ FD ]
Line_17 $$ boolean mouseEventsAhead = isMouseEventAhead(e)-->Line_19 $$ boolean okToFixFocus = !mouseEventsAhead && !focusTransferredNow[ FD ]
Line_14 $$ if (app instanceof ApplicationEx && !((ApplicationEx) app).isLoaded()) -->Line_15 $$ return[ CD ]
Line_12 $$ if (focusOwner == null || !focusOwner.isShowing() || focusOwner instanceof JFrame || focusOwner instanceof JDialog) -->Line_14 $$ if (app instanceof ApplicationEx && !((ApplicationEx) app).isLoaded()) [ CD ]
Line_5 $$ final KeyboardFocusManager mgr = KeyboardFocusManager.getCurrentKeyboardFocusManager()-->Line_26 $$ Object owner = getNativeFocusOwner.invoke(mgr)[ FD ]
Line_20 $$ if (okToFixFocus) -->Line_35 $$ if (showingWindow != null) [ CD ]
Line_35 $$ if (showingWindow != null) -->Line_54 $$ fm.revalidateFocus(maybeRequestDefaultFocus)[ CD ]
Line_5 $$ final KeyboardFocusManager mgr = KeyboardFocusManager.getCurrentKeyboardFocusManager()-->Line_11 $$ final Component focusOwner = mgr.getFocusOwner()[ FD ]
Line_12 $$ if (focusOwner == null || !focusOwner.isShowing() || focusOwner instanceof JFrame || focusOwner instanceof JDialog) -->Line_19 $$ boolean okToFixFocus = !mouseEventsAhead && !focusTransferredNow[ CD ]
Line_22 $$ if (showingWindow == null) -->Line_23 $$ Method getNativeFocusOwner = ReflectionUtil.getDeclaredMethod(KeyboardFocusManager.class, "getNativeFocusOwner")[ CD ]
Line_23 $$ Method getNativeFocusOwner = ReflectionUtil.getDeclaredMethod(KeyboardFocusManager.class, "getNativeFocusOwner")-->Line_24 $$ if (getNativeFocusOwner != null) [ FD ]
Line_36 $$ final IdeFocusManager fm = IdeFocusManager.findInstanceByComponent(showingWindow)-->Line_54 $$ fm.revalidateFocus(maybeRequestDefaultFocus)[ FD ]
Line_37 $$ ExpirableRunnable maybeRequestDefaultFocus = new ExpirableRunnable() -->Line_44 $$ if (app != null && app.isActive()) [ CD ]
Line_35 $$ if (showingWindow != null) -->Line_37 $$ ExpirableRunnable maybeRequestDefaultFocus = new ExpirableRunnable() [ CD ]
Line_2 $$ public void fixStickyFocusedComponents(@Nullable AWTEvent e) -->Line_10 $$ if (Registry.is("actionSystem.fixNullFocusedComponent")) [ CD ]
Line_44 $$ if (app != null && app.isActive()) -->Line_45 $$ fm.requestDefaultFocus(false)[ CD ]
Line_11 $$ final Component focusOwner = mgr.getFocusOwner()-->Line_12 $$ if (focusOwner == null || !focusOwner.isShowing() || focusOwner instanceof JFrame || focusOwner instanceof JDialog) [ FD ]
Line_28 $$ showingWindow = UIUtil.getWindow((Component) owner)-->Line_36 $$ final IdeFocusManager fm = IdeFocusManager.findInstanceByComponent(showingWindow)[ FD ]
Line_10 $$ if (Registry.is("actionSystem.fixNullFocusedComponent")) -->Line_11 $$ final Component focusOwner = mgr.getFocusOwner()[ CD ]
Line_20 $$ if (okToFixFocus) -->Line_22 $$ if (showingWindow == null) [ CD ]
