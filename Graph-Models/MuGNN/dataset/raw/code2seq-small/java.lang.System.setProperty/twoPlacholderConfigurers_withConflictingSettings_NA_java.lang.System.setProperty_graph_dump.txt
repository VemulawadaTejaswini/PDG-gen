Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_28 $$ getModifiableSystemEnvironment().remove(P2)[ CD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_15 $$ ppc2Properties.put(P2, P2_LOCAL_PROPS_VAL)[ CD ]
Line_6 $$ String P2_SYSTEM_ENV_VAL = "p2SystemEnvVal"-->Line_13 $$ getModifiableSystemEnvironment().put(P2, P2_SYSTEM_ENV_VAL)[ FD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_16 $$ PropertyPlaceholderConfigurer ppc2 = new PropertyPlaceholderConfigurer()[ CD ]
Line_5 $$ String P2_SYSTEM_PROPS_VAL = "p2SystemPropsVal"-->Line_12 $$ System.setProperty(P2, P2_SYSTEM_PROPS_VAL)[ FD ]
Line_7 $$ AbstractBeanDefinition p2BeanDef = rootBeanDefinition(TestBean.class).addPropertyValue("name", "$-->Line_9 $$ bf.registerBeanDefinition("p2Bean", p2BeanDef)[ FD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_6 $$ String P2_SYSTEM_ENV_VAL = "p2SystemEnvVal"[ CD ]
Line_19 $$ ppc2Properties = new Properties()-->Line_20 $$ ppc2Properties.setProperty(P2, P2_LOCAL_PROPS_VAL)[ FD ]
Line_16 $$ PropertyPlaceholderConfigurer ppc2 = new PropertyPlaceholderConfigurer()-->Line_21 $$ ppc2.postProcessBeanFactory(bf)[ FD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_24 $$ TestBean p2Bean = bf.getBean("p2Bean", TestBean.class)[ CD ]
Line_24 $$ TestBean p2Bean = bf.getBean("p2Bean", TestBean.class)-->Line_25 $$ assertThat(p2Bean.getName(), equalTo(P1_LOCAL_PROPS_VAL))[ FD ]
Line_5 $$ String P2_SYSTEM_PROPS_VAL = "p2SystemPropsVal"-->Line_26 $$ assertThat(p2Bean.getCountry(), equalTo(P2_SYSTEM_PROPS_VAL))[ FD ]
Line_3 $$ String P2 = "p2"-->Line_20 $$ ppc2Properties.setProperty(P2, P2_LOCAL_PROPS_VAL)[ FD ]
Line_3 $$ String P2 = "p2"-->Line_27 $$ System.clearProperty(P2)[ FD ]
Line_14 $$ Properties ppc2Properties = new Properties()-->Line_19 $$ ppc2Properties = new Properties()[ FD ]
Line_3 $$ String P2 = "p2"-->Line_12 $$ System.setProperty(P2, P2_SYSTEM_PROPS_VAL)[ FD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_17 $$ ppc2.setSystemPropertiesMode(PropertyPlaceholderConfigurer.SYSTEM_PROPERTIES_MODE_OVERRIDE)[ CD ]
Line_24 $$ TestBean p2Bean = bf.getBean("p2Bean", TestBean.class)-->Line_26 $$ assertThat(p2Bean.getCountry(), equalTo(P2_SYSTEM_PROPS_VAL))[ FD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_14 $$ Properties ppc2Properties = new Properties()[ CD ]
Line_3 $$ String P2 = "p2"-->Line_28 $$ getModifiableSystemEnvironment().remove(P2)[ FD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_13 $$ getModifiableSystemEnvironment().put(P2, P2_SYSTEM_ENV_VAL)[ CD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_18 $$ ppc2.setProperties(ppc2Properties)[ CD ]
Line_3 $$ String P2 = "p2"-->Line_13 $$ getModifiableSystemEnvironment().put(P2, P2_SYSTEM_ENV_VAL)[ FD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_3 $$ String P2 = "p2"[ CD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_25 $$ assertThat(p2Bean.getName(), equalTo(P1_LOCAL_PROPS_VAL))[ CD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_5 $$ String P2_SYSTEM_PROPS_VAL = "p2SystemPropsVal"[ CD ]
Line_3 $$ String P2 = "p2"-->Line_15 $$ ppc2Properties.put(P2, P2_LOCAL_PROPS_VAL)[ FD ]
Line_4 $$ String P2_LOCAL_PROPS_VAL = "p2LocalPropsVal"-->Line_20 $$ ppc2Properties.setProperty(P2, P2_LOCAL_PROPS_VAL)[ FD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_12 $$ System.setProperty(P2, P2_SYSTEM_PROPS_VAL)[ CD ]
Line_14 $$ Properties ppc2Properties = new Properties()-->Line_15 $$ ppc2Properties.put(P2, P2_LOCAL_PROPS_VAL)[ FD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_20 $$ ppc2Properties.setProperty(P2, P2_LOCAL_PROPS_VAL)[ CD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_9 $$ bf.registerBeanDefinition("p2Bean", p2BeanDef)[ CD ]
Line_22 $$ TestBean p1Bean = bf.getBean("p1Bean", TestBean.class)-->Line_23 $$ assertThat(p1Bean.getName(), equalTo(P1_LOCAL_PROPS_VAL))[ FD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_26 $$ assertThat(p2Bean.getCountry(), equalTo(P2_SYSTEM_PROPS_VAL))[ CD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_27 $$ System.clearProperty(P2)[ CD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_21 $$ ppc2.postProcessBeanFactory(bf)[ CD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_4 $$ String P2_LOCAL_PROPS_VAL = "p2LocalPropsVal"[ CD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_8 $$ bf.registerBeanDefinition("p1Bean", p1BeanDef)[ CD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_23 $$ assertThat(p1Bean.getName(), equalTo(P1_LOCAL_PROPS_VAL))[ CD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_11 $$ ppc.postProcessBeanFactory(bf)[ CD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_10 $$ ppc.setIgnoreUnresolvablePlaceholders(true)[ CD ]
Line_16 $$ PropertyPlaceholderConfigurer ppc2 = new PropertyPlaceholderConfigurer()-->Line_17 $$ ppc2.setSystemPropertiesMode(PropertyPlaceholderConfigurer.SYSTEM_PROPERTIES_MODE_OVERRIDE)[ FD ]
Line_16 $$ PropertyPlaceholderConfigurer ppc2 = new PropertyPlaceholderConfigurer()-->Line_18 $$ ppc2.setProperties(ppc2Properties)[ FD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_7 $$ AbstractBeanDefinition p2BeanDef = rootBeanDefinition(TestBean.class).addPropertyValue("name", "$[ CD ]
Line_14 $$ Properties ppc2Properties = new Properties()-->Line_18 $$ ppc2.setProperties(ppc2Properties)[ FD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_22 $$ TestBean p1Bean = bf.getBean("p1Bean", TestBean.class)[ CD ]
Line_4 $$ String P2_LOCAL_PROPS_VAL = "p2LocalPropsVal"-->Line_15 $$ ppc2Properties.put(P2, P2_LOCAL_PROPS_VAL)[ FD ]
Line_14 $$ Properties ppc2Properties = new Properties()-->Line_20 $$ ppc2Properties.setProperty(P2, P2_LOCAL_PROPS_VAL)[ FD ]
Line_2 $$ public void twoPlacholderConfigurers_withConflictingSettings() -->Line_19 $$ ppc2Properties = new Properties()[ CD ]
