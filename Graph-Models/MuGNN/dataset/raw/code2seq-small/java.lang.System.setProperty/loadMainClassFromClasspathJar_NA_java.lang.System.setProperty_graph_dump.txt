Line_16 $$ if (inputStream != null) -->Line_17 $$ inputStream.close()[ CD ]
Line_2 $$ private static MainPair loadMainClassFromClasspathJar(File jarFile, String[] args) throws Exception -->Line_21 $$ return new MainPair(Class.forName(args[1]), new String[args.length - 2])[ CD ]
Line_3 $$ final JarInputStream inputStream = new JarInputStream(new FileInputStream(jarFile))-->Line_17 $$ inputStream.close()[ FD ]
Line_7 $$ if (vmParams != null) -->Line_10 $$ for (Iterator iterator = vmOptions.keySet().iterator(); iterator.hasNext(); ) [ CD ]
Line_2 $$ private static MainPair loadMainClassFromClasspathJar(File jarFile, String[] args) throws Exception -->Line_3 $$ final JarInputStream inputStream = new JarInputStream(new FileInputStream(jarFile))[ CD ]
Line_7 $$ if (vmParams != null) -->Line_9 $$ parseVmOptions(vmParams, vmOptions)[ CD ]
Line_6 $$ final String vmParams = manifest.getMainAttributes().getValue("VM-Options")-->Line_7 $$ if (vmParams != null) [ FD ]
Line_3 $$ final JarInputStream inputStream = new JarInputStream(new FileInputStream(jarFile))-->Line_16 $$ if (inputStream != null) [ FD ]
Line_7 $$ if (vmParams != null) -->Line_8 $$ final HashMap vmOptions = new HashMap()[ CD ]
Line_8 $$ final HashMap vmOptions = new HashMap()-->Line_9 $$ parseVmOptions(vmParams, vmOptions)[ FD ]
Line_10 $$ for (Iterator iterator = vmOptions.keySet().iterator(); iterator.hasNext(); ) -->Line_11 $$ String optionName = (String) iterator.next()[ FD ]
Line_2 $$ private static MainPair loadMainClassFromClasspathJar(File jarFile, String[] args) throws Exception -->Line_19 $$ jarFile.deleteOnExit()[ FD ]
Line_10 $$ for (Iterator iterator = vmOptions.keySet().iterator(); iterator.hasNext(); ) -->Line_12 $$ System.setProperty(optionName, (String) vmOptions.get(optionName))[ CD ]
Line_3 $$ final JarInputStream inputStream = new JarInputStream(new FileInputStream(jarFile))-->Line_5 $$ final Manifest manifest = inputStream.getManifest()[ FD ]
Line_8 $$ final HashMap vmOptions = new HashMap()-->Line_10 $$ for (Iterator iterator = vmOptions.keySet().iterator(); iterator.hasNext(); ) [ FD ]
Line_5 $$ final Manifest manifest = inputStream.getManifest()-->Line_6 $$ final String vmParams = manifest.getMainAttributes().getValue("VM-Options")[ FD ]
Line_10 $$ for (Iterator iterator = vmOptions.keySet().iterator(); iterator.hasNext(); ) -->Line_11 $$ String optionName = (String) iterator.next()[ CD ]
Line_8 $$ final HashMap vmOptions = new HashMap()-->Line_12 $$ System.setProperty(optionName, (String) vmOptions.get(optionName))[ FD ]
Line_11 $$ String optionName = (String) iterator.next()-->Line_12 $$ System.setProperty(optionName, (String) vmOptions.get(optionName))[ FD ]
Line_6 $$ final String vmParams = manifest.getMainAttributes().getValue("VM-Options")-->Line_9 $$ parseVmOptions(vmParams, vmOptions)[ FD ]
