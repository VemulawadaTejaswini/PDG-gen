Line_6 $$ if (arg.startsWith("-D")) -->Line_8 $$ if (keyValue.length == 2 && safeKeys.contains(keyValue[0])) [ CD ]
Line_3 $$ ArrayList<String> arguments = new ArrayList<String>()-->Line_15 $$ return ArrayUtil.toStringArray(arguments)[ FD ]
Line_5 $$ for (String arg : args) -->Line_7 $$ String[] keyValue = arg.substring(2).split("=")[ FD ]
Line_5 $$ for (String arg : args) -->Line_6 $$ if (arg.startsWith("-D")) [ FD ]
Line_3 $$ ArrayList<String> arguments = new ArrayList<String>()-->Line_13 $$ arguments.add(arg)[ FD ]
Line_8 $$ if (keyValue.length == 2 && safeKeys.contains(keyValue[0])) -->Line_9 $$ System.setProperty(keyValue[0], keyValue[1])[ CD ]
Line_4 $$ List<String> safeKeys = Arrays.asList(SAFE_JAVA_ENV_PARAMETERS)-->Line_8 $$ if (keyValue.length == 2 && safeKeys.contains(keyValue[0])) [ FD ]
Line_2 $$ private static String[] processProgramArguments(String[] args) -->Line_15 $$ return ArrayUtil.toStringArray(arguments)[ CD ]
Line_2 $$ private static String[] processProgramArguments(String[] args) -->Line_3 $$ ArrayList<String> arguments = new ArrayList<String>()[ CD ]
Line_2 $$ private static String[] processProgramArguments(String[] args) -->Line_4 $$ List<String> safeKeys = Arrays.asList(SAFE_JAVA_ENV_PARAMETERS)[ CD ]
Line_6 $$ if (arg.startsWith("-D")) -->Line_7 $$ String[] keyValue = arg.substring(2).split("=")[ CD ]
Line_5 $$ for (String arg : args) -->Line_13 $$ arguments.add(arg)[ FD ]
