Line_2 $$ public static void setUpClass() -->Line_20 $$ System.setProperty("log.sanitizer.escape.html.enabled", "false")[ CD ]
Line_2 $$ public static void setUpClass() -->Line_22 $$ StringBundler sb = new StringBundler(191)[ CD ]
Line_2 $$ public static void setUpClass() -->Line_30 $$ SanitizerLogWrapper.init()[ CD ]
Line_10 $$ for (int i = 0; i < chars.length; i++) -->Line_25 $$ sb.append(i)[ FD ]
Line_2 $$ public static void setUpClass() -->Line_3 $$ char[] chars = new char[128][ CD ]
Line_11 $$ if ((i == 9) || ((i >= 32) && (i != 127))) -->Line_12 $$ _messageChars[i] = (char) i[ CD ]
Line_4 $$ for (int i = 0; i < chars.length; i++) -->Line_25 $$ sb.append(i)[ FD ]
Line_22 $$ StringBundler sb = new StringBundler(191)-->Line_26 $$ sb.append(",")[ FD ]
Line_2 $$ public static void setUpClass() -->Line_29 $$ ReflectionTestUtil.setFieldValue(SanitizerLogWrapper.class, "_LOG_SANITIZER_ENABLED", true)[ CD ]
Line_8 $$ String sanitizedMessageSuffix = " [Sanitized]"-->Line_9 $$ _messageChars = new char[chars.length + sanitizedMessageSuffix.length()][ FD ]
Line_2 $$ public static void setUpClass() -->Line_21 $$ System.setProperty("log.sanitizer.replacement.character", "95")[ CD ]
Line_4 $$ for (int i = 0; i < chars.length; i++) -->Line_24 $$ for (int i = 32; i <= 126; i++) [ FD ]
Line_22 $$ StringBundler sb = new StringBundler(191)-->Line_28 $$ System.setProperty("log.sanitizer.whitelist.characters", sb.toString())[ FD ]
Line_24 $$ for (int i = 32; i <= 126; i++) -->Line_26 $$ sb.append(",")[ CD ]
Line_4 $$ for (int i = 0; i < chars.length; i++) -->Line_5 $$ chars[i] = (char) i[ CD ]
Line_2 $$ public static void setUpClass() -->Line_10 $$ for (int i = 0; i < chars.length; i++) [ CD ]
Line_2 $$ public static void setUpClass() -->Line_17 $$ System.arraycopy(sanitizedMessageSuffix.toCharArray(), 0, _messageChars, chars.length, sanitizedMessageSuffix.length())[ CD ]
Line_2 $$ public static void setUpClass() -->Line_8 $$ String sanitizedMessageSuffix = " [Sanitized]"[ CD ]
Line_10 $$ for (int i = 0; i < chars.length; i++) -->Line_11 $$ if ((i == 9) || ((i >= 32) && (i != 127))) [ CD ]
Line_2 $$ public static void setUpClass() -->Line_23 $$ sb.append("9,")[ CD ]
Line_2 $$ public static void setUpClass() -->Line_24 $$ for (int i = 32; i <= 126; i++) [ CD ]
Line_2 $$ public static void setUpClass() -->Line_28 $$ System.setProperty("log.sanitizer.whitelist.characters", sb.toString())[ CD ]
Line_22 $$ StringBundler sb = new StringBundler(191)-->Line_23 $$ sb.append("9,")[ FD ]
Line_11 $$ if ((i == 9) || ((i >= 32) && (i != 127))) -->Line_14 $$ _messageChars[i] = CharPool.UNDERLINE[ CD ]
Line_24 $$ for (int i = 32; i <= 126; i++) -->Line_25 $$ sb.append(i)[ FD ]
Line_24 $$ for (int i = 32; i <= 126; i++) -->Line_25 $$ sb.append(i)[ CD ]
Line_4 $$ for (int i = 0; i < chars.length; i++) -->Line_10 $$ for (int i = 0; i < chars.length; i++) [ FD ]
Line_2 $$ public static void setUpClass() -->Line_19 $$ System.setProperty("log.sanitizer.enabled", "true")[ CD ]
Line_8 $$ String sanitizedMessageSuffix = " [Sanitized]"-->Line_17 $$ System.arraycopy(sanitizedMessageSuffix.toCharArray(), 0, _messageChars, chars.length, sanitizedMessageSuffix.length())[ FD ]
Line_2 $$ public static void setUpClass() -->Line_4 $$ for (int i = 0; i < chars.length; i++) [ CD ]
Line_10 $$ for (int i = 0; i < chars.length; i++) -->Line_24 $$ for (int i = 32; i <= 126; i++) [ FD ]
Line_22 $$ StringBundler sb = new StringBundler(191)-->Line_25 $$ sb.append(i)[ FD ]
