Line_2 $$ public void logsLineWhichIsLongerThanInitialBufferLength() throws IOException -->Line_4 $$ LineBufferingOutputStream outputStream = new LineBufferingOutputStream(action, 8)[ CD ]
Line_2 $$ public void logsLineWhichIsLongerThanInitialBufferLength() throws IOException -->Line_3 $$ System.setProperty("line.separator", "-")[ CD ]
Line_4 $$ LineBufferingOutputStream outputStream = new LineBufferingOutputStream(action, 8)-->Line_11 $$ outputStream.write("a line longer than 8 bytes long-".getBytes())[ FD ]
Line_2 $$ public void logsLineWhichIsLongerThanInitialBufferLength() throws IOException -->Line_13 $$ outputStream.flush()[ CD ]
Line_2 $$ public void logsLineWhichIsLongerThanInitialBufferLength() throws IOException -->Line_12 $$ outputStream.write("line 2".getBytes())[ CD ]
Line_2 $$ public void logsLineWhichIsLongerThanInitialBufferLength() throws IOException -->Line_5 $$ context.checking(new Expectations() [ CD ]
Line_4 $$ LineBufferingOutputStream outputStream = new LineBufferingOutputStream(action, 8)-->Line_12 $$ outputStream.write("line 2".getBytes())[ FD ]
Line_2 $$ public void logsLineWhichIsLongerThanInitialBufferLength() throws IOException -->Line_11 $$ outputStream.write("a line longer than 8 bytes long-".getBytes())[ CD ]
Line_4 $$ LineBufferingOutputStream outputStream = new LineBufferingOutputStream(action, 8)-->Line_13 $$ outputStream.flush()[ FD ]
