Line_6 $$ Properties properties = configurationImpl.getProperties("namespace.", false)-->Line_8 $$ Assert.assertEquals("value1", properties.get("namespace.key1"))[ FD ]
Line_2 $$ public void testSystemPropertyOverrideProperties() throws IOException -->Line_10 $$ properties = configurationImpl.getProperties("namespace.", true)[ CD ]
Line_17 $$ properties = configurationImpl.getProperties("namespace.", false)-->Line_20 $$ Assert.assertEquals("valuex", properties.get("namespace.key2"))[ FD ]
Line_2 $$ public void testSystemPropertyOverrideProperties() throws IOException -->Line_3 $$ TestResourceClassLoader testResourceClassLoader = new TestResourceClassLoader()[ CD ]
Line_2 $$ public void testSystemPropertyOverrideProperties() throws IOException -->Line_12 $$ Assert.assertEquals("value1", properties.get("key1"))[ CD ]
Line_17 $$ properties = configurationImpl.getProperties("namespace.", false)-->Line_23 $$ Assert.assertEquals("value1", properties.get("key1"))[ FD ]
Line_3 $$ TestResourceClassLoader testResourceClassLoader = new TestResourceClassLoader()-->Line_4 $$ testResourceClassLoader.addPropertiesResource(ConfigurationImplTest.class.getName(), "namespace.key1=value1\nnamespace.key2=value2")[ FD ]
Line_6 $$ Properties properties = configurationImpl.getProperties("namespace.", false)-->Line_24 $$ Assert.assertEquals("valuex", properties.get("key2"))[ FD ]
Line_2 $$ public void testSystemPropertyOverrideProperties() throws IOException -->Line_9 $$ Assert.assertEquals("value2", properties.get("namespace.key2"))[ CD ]
Line_6 $$ Properties properties = configurationImpl.getProperties("namespace.", false)-->Line_13 $$ Assert.assertEquals("value2", properties.get("key2"))[ FD ]
Line_6 $$ Properties properties = configurationImpl.getProperties("namespace.", false)-->Line_11 $$ Assert.assertEquals(2, properties.size())[ FD ]
Line_10 $$ properties = configurationImpl.getProperties("namespace.", true)-->Line_13 $$ Assert.assertEquals("value2", properties.get("key2"))[ FD ]
Line_6 $$ Properties properties = configurationImpl.getProperties("namespace.", false)-->Line_19 $$ Assert.assertEquals("value1", properties.get("namespace.key1"))[ FD ]
Line_6 $$ Properties properties = configurationImpl.getProperties("namespace.", false)-->Line_7 $$ Assert.assertEquals(2, properties.size())[ FD ]
Line_10 $$ properties = configurationImpl.getProperties("namespace.", true)-->Line_18 $$ Assert.assertEquals(2, properties.size())[ FD ]
Line_2 $$ public void testSystemPropertyOverrideProperties() throws IOException -->Line_13 $$ Assert.assertEquals("value2", properties.get("key2"))[ CD ]
Line_10 $$ properties = configurationImpl.getProperties("namespace.", true)-->Line_19 $$ Assert.assertEquals("value1", properties.get("namespace.key1"))[ FD ]
Line_6 $$ Properties properties = configurationImpl.getProperties("namespace.", false)-->Line_22 $$ Assert.assertEquals(2, properties.size())[ FD ]
Line_5 $$ ConfigurationImpl configurationImpl = new ConfigurationImpl(testResourceClassLoader, ConfigurationImplTest.class.getName())-->Line_6 $$ Properties properties = configurationImpl.getProperties("namespace.", false)[ FD ]
Line_5 $$ ConfigurationImpl configurationImpl = new ConfigurationImpl(testResourceClassLoader, ConfigurationImplTest.class.getName())-->Line_14 $$ configurationImpl.clearCache()[ FD ]
Line_21 $$ properties = configurationImpl.getProperties("namespace.", true)-->Line_24 $$ Assert.assertEquals("valuex", properties.get("key2"))[ FD ]
Line_2 $$ public void testSystemPropertyOverrideProperties() throws IOException -->Line_6 $$ Properties properties = configurationImpl.getProperties("namespace.", false)[ CD ]
Line_2 $$ public void testSystemPropertyOverrideProperties() throws IOException -->Line_5 $$ ConfigurationImpl configurationImpl = new ConfigurationImpl(testResourceClassLoader, ConfigurationImplTest.class.getName())[ CD ]
Line_2 $$ public void testSystemPropertyOverrideProperties() throws IOException -->Line_14 $$ configurationImpl.clearCache()[ CD ]
Line_17 $$ properties = configurationImpl.getProperties("namespace.", false)-->Line_19 $$ Assert.assertEquals("value1", properties.get("namespace.key1"))[ FD ]
Line_6 $$ Properties properties = configurationImpl.getProperties("namespace.", false)-->Line_17 $$ properties = configurationImpl.getProperties("namespace.", false)[ FD ]
Line_10 $$ properties = configurationImpl.getProperties("namespace.", true)-->Line_24 $$ Assert.assertEquals("valuex", properties.get("key2"))[ FD ]
Line_10 $$ properties = configurationImpl.getProperties("namespace.", true)-->Line_20 $$ Assert.assertEquals("valuex", properties.get("namespace.key2"))[ FD ]
Line_17 $$ properties = configurationImpl.getProperties("namespace.", false)-->Line_18 $$ Assert.assertEquals(2, properties.size())[ FD ]
Line_21 $$ properties = configurationImpl.getProperties("namespace.", true)-->Line_22 $$ Assert.assertEquals(2, properties.size())[ FD ]
Line_21 $$ properties = configurationImpl.getProperties("namespace.", true)-->Line_23 $$ Assert.assertEquals("value1", properties.get("key1"))[ FD ]
Line_2 $$ public void testSystemPropertyOverrideProperties() throws IOException -->Line_7 $$ Assert.assertEquals(2, properties.size())[ CD ]
Line_2 $$ public void testSystemPropertyOverrideProperties() throws IOException -->Line_15 $$ System.setProperty(ConfigurationImplTest.class.getName() + ":namespace.key2", "valuex")[ CD ]
Line_10 $$ properties = configurationImpl.getProperties("namespace.", true)-->Line_22 $$ Assert.assertEquals(2, properties.size())[ FD ]
Line_17 $$ properties = configurationImpl.getProperties("namespace.", false)-->Line_22 $$ Assert.assertEquals(2, properties.size())[ FD ]
Line_5 $$ ConfigurationImpl configurationImpl = new ConfigurationImpl(testResourceClassLoader, ConfigurationImplTest.class.getName())-->Line_29 $$ Assert.assertEquals("value2", configurationImpl.get("namespace.key2"))[ FD ]
Line_2 $$ public void testSystemPropertyOverrideProperties() throws IOException -->Line_4 $$ testResourceClassLoader.addPropertiesResource(ConfigurationImplTest.class.getName(), "namespace.key1=value1\nnamespace.key2=value2")[ CD ]
Line_6 $$ Properties properties = configurationImpl.getProperties("namespace.", false)-->Line_18 $$ Assert.assertEquals(2, properties.size())[ FD ]
Line_2 $$ public void testSystemPropertyOverrideProperties() throws IOException -->Line_11 $$ Assert.assertEquals(2, properties.size())[ CD ]
Line_6 $$ Properties properties = configurationImpl.getProperties("namespace.", false)-->Line_10 $$ properties = configurationImpl.getProperties("namespace.", true)[ FD ]
Line_5 $$ ConfigurationImpl configurationImpl = new ConfigurationImpl(testResourceClassLoader, ConfigurationImplTest.class.getName())-->Line_21 $$ properties = configurationImpl.getProperties("namespace.", true)[ FD ]
Line_10 $$ properties = configurationImpl.getProperties("namespace.", true)-->Line_23 $$ Assert.assertEquals("value1", properties.get("key1"))[ FD ]
Line_6 $$ Properties properties = configurationImpl.getProperties("namespace.", false)-->Line_12 $$ Assert.assertEquals("value1", properties.get("key1"))[ FD ]
Line_17 $$ properties = configurationImpl.getProperties("namespace.", false)-->Line_24 $$ Assert.assertEquals("valuex", properties.get("key2"))[ FD ]
Line_6 $$ Properties properties = configurationImpl.getProperties("namespace.", false)-->Line_9 $$ Assert.assertEquals("value2", properties.get("namespace.key2"))[ FD ]
Line_6 $$ Properties properties = configurationImpl.getProperties("namespace.", false)-->Line_23 $$ Assert.assertEquals("value1", properties.get("key1"))[ FD ]
Line_6 $$ Properties properties = configurationImpl.getProperties("namespace.", false)-->Line_20 $$ Assert.assertEquals("valuex", properties.get("namespace.key2"))[ FD ]
Line_10 $$ properties = configurationImpl.getProperties("namespace.", true)-->Line_11 $$ Assert.assertEquals(2, properties.size())[ FD ]
Line_5 $$ ConfigurationImpl configurationImpl = new ConfigurationImpl(testResourceClassLoader, ConfigurationImplTest.class.getName())-->Line_25 $$ configurationImpl.clearCache()[ FD ]
Line_6 $$ Properties properties = configurationImpl.getProperties("namespace.", false)-->Line_21 $$ properties = configurationImpl.getProperties("namespace.", true)[ FD ]
Line_17 $$ properties = configurationImpl.getProperties("namespace.", false)-->Line_21 $$ properties = configurationImpl.getProperties("namespace.", true)[ FD ]
Line_5 $$ ConfigurationImpl configurationImpl = new ConfigurationImpl(testResourceClassLoader, ConfigurationImplTest.class.getName())-->Line_10 $$ properties = configurationImpl.getProperties("namespace.", true)[ FD ]
Line_10 $$ properties = configurationImpl.getProperties("namespace.", true)-->Line_12 $$ Assert.assertEquals("value1", properties.get("key1"))[ FD ]
Line_5 $$ ConfigurationImpl configurationImpl = new ConfigurationImpl(testResourceClassLoader, ConfigurationImplTest.class.getName())-->Line_28 $$ Assert.assertEquals("value1", configurationImpl.get("namespace.key1"))[ FD ]
Line_10 $$ properties = configurationImpl.getProperties("namespace.", true)-->Line_21 $$ properties = configurationImpl.getProperties("namespace.", true)[ FD ]
Line_2 $$ public void testSystemPropertyOverrideProperties() throws IOException -->Line_8 $$ Assert.assertEquals("value1", properties.get("namespace.key1"))[ CD ]
Line_5 $$ ConfigurationImpl configurationImpl = new ConfigurationImpl(testResourceClassLoader, ConfigurationImplTest.class.getName())-->Line_17 $$ properties = configurationImpl.getProperties("namespace.", false)[ FD ]
Line_10 $$ properties = configurationImpl.getProperties("namespace.", true)-->Line_17 $$ properties = configurationImpl.getProperties("namespace.", false)[ FD ]
