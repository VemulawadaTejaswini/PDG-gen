Line_25 $$ queries = applyOverrides(config, queries)-->Line_26 $$ queries = filterQueries(queries)[ FD ]
Line_20 $$ ImmutableList.Builder<QueryPair> queriesBuilder = ImmutableList.builder()-->Line_22 $$ queriesBuilder.addAll(dao.getQueriesBySuite(suite, config.getMaxQueries()))[ FD ]
Line_8 $$ Injector injector = app.strictConfig().initialize()-->Line_12 $$ Set<String> supportedEventClients = injector.getInstance(Key.get(new TypeLiteral<Set<String>>() [ FD ]
Line_27 $$ if (config.getAdditionalJdbcDriverPath() != null) -->Line_30 $$ urlList.toArray(urls)[ CD ]
Line_24 $$ List<QueryPair> queries = queriesBuilder.build()-->Line_26 $$ queries = filterQueries(queries)[ FD ]
Line_28 $$ List<URL> urlList = getUrls(config.getAdditionalJdbcDriverPath())-->Line_30 $$ urlList.toArray(urls)[ FD ]
Line_28 $$ List<URL> urlList = getUrls(config.getAdditionalJdbcDriverPath())-->Line_29 $$ URL[] urls = new URL[urlList.size()][ FD ]
Line_27 $$ if (config.getAdditionalJdbcDriverPath() != null) -->Line_31 $$ if (config.getTestJdbcDriverName() != null) [ CD ]
Line_10 $$ VerifierConfig config = injector.getInstance(VerifierConfig.class)-->Line_19 $$ VerifierDao dao = new DBI(config.getQueryDatabase()).onDemand(VerifierDao.class)[ FD ]
Line_8 $$ Injector injector = app.strictConfig().initialize()-->Line_17 $$ Set<EventClient> eventClients = injector.getInstance(Key.get(new TypeLiteral<Set<EventClient>>() [ FD ]
Line_2 $$ public int run(String[] args) throws Exception -->Line_3 $$ if (args.length > 0) [ CD ]
Line_24 $$ List<QueryPair> queries = queriesBuilder.build()-->Line_25 $$ queries = applyOverrides(config, queries)[ FD ]
Line_2 $$ public int run(String[] args) throws Exception -->Line_8 $$ Injector injector = app.strictConfig().initialize()[ CD ]
Line_25 $$ queries = applyOverrides(config, queries)-->Line_39 $$ return verifier.run(queries)[ FD ]
Line_29 $$ URL[] urls = new URL[urlList.size()]-->Line_35 $$ loadJdbcDriver(urls, config.getControlJdbcDriverName())[ FD ]
Line_12 $$ Set<String> supportedEventClients = injector.getInstance(Key.get(new TypeLiteral<Set<String>>() -->Line_15 $$ checkArgument(supportedEventClients.contains(clientType), "Unsupported event client: %s", clientType)[ FD ]
Line_10 $$ VerifierConfig config = injector.getInstance(VerifierConfig.class)-->Line_35 $$ loadJdbcDriver(urls, config.getControlJdbcDriverName())[ FD ]
Line_3 $$ if (args.length > 0) -->Line_4 $$ System.setProperty("config", args[0])[ CD ]
Line_26 $$ queries = filterQueries(queries)-->Line_39 $$ return verifier.run(queries)[ FD ]
Line_10 $$ VerifierConfig config = injector.getInstance(VerifierConfig.class)-->Line_14 $$ for (String clientType : config.getEventClients()) [ FD ]
Line_27 $$ if (config.getAdditionalJdbcDriverPath() != null) -->Line_29 $$ URL[] urls = new URL[urlList.size()][ CD ]
Line_10 $$ VerifierConfig config = injector.getInstance(VerifierConfig.class)-->Line_22 $$ queriesBuilder.addAll(dao.getQueriesBySuite(suite, config.getMaxQueries()))[ FD ]
Line_8 $$ Injector injector = app.strictConfig().initialize()-->Line_11 $$ injector.injectMembers(this)[ FD ]
Line_10 $$ VerifierConfig config = injector.getInstance(VerifierConfig.class)-->Line_25 $$ queries = applyOverrides(config, queries)[ FD ]
Line_10 $$ VerifierConfig config = injector.getInstance(VerifierConfig.class)-->Line_27 $$ if (config.getAdditionalJdbcDriverPath() != null) [ FD ]
Line_14 $$ for (String clientType : config.getEventClients()) -->Line_15 $$ checkArgument(supportedEventClients.contains(clientType), "Unsupported event client: %s", clientType)[ FD ]
Line_21 $$ for (String suite : config.getSuites()) -->Line_22 $$ queriesBuilder.addAll(dao.getQueriesBySuite(suite, config.getMaxQueries()))[ FD ]
Line_2 $$ public int run(String[] args) throws Exception -->Line_7 $$ Bootstrap app = new Bootstrap(builder.build())[ CD ]
Line_20 $$ ImmutableList.Builder<QueryPair> queriesBuilder = ImmutableList.builder()-->Line_24 $$ List<QueryPair> queries = queriesBuilder.build()[ FD ]
Line_31 $$ if (config.getTestJdbcDriverName() != null) -->Line_32 $$ loadJdbcDriver(urls, config.getTestJdbcDriverName())[ CD ]
Line_34 $$ if (config.getControlJdbcDriverName() != null) -->Line_35 $$ loadJdbcDriver(urls, config.getControlJdbcDriverName())[ CD ]
Line_29 $$ URL[] urls = new URL[urlList.size()]-->Line_30 $$ urlList.toArray(urls)[ FD ]
Line_10 $$ VerifierConfig config = injector.getInstance(VerifierConfig.class)-->Line_28 $$ List<URL> urlList = getUrls(config.getAdditionalJdbcDriverPath())[ FD ]
Line_6 $$ ImmutableList.Builder<Module> builder = ImmutableList.<Module>builder().add(new PrestoVerifierModule()).addAll(getAdditionalModules())-->Line_7 $$ Bootstrap app = new Bootstrap(builder.build())[ FD ]
Line_2 $$ public int run(String[] args) throws Exception -->Line_6 $$ ImmutableList.Builder<Module> builder = ImmutableList.<Module>builder().add(new PrestoVerifierModule()).addAll(getAdditionalModules())[ CD ]
Line_29 $$ URL[] urls = new URL[urlList.size()]-->Line_32 $$ loadJdbcDriver(urls, config.getTestJdbcDriverName())[ FD ]
Line_24 $$ List<QueryPair> queries = queriesBuilder.build()-->Line_39 $$ return verifier.run(queries)[ FD ]
Line_10 $$ VerifierConfig config = injector.getInstance(VerifierConfig.class)-->Line_34 $$ if (config.getControlJdbcDriverName() != null) [ FD ]
Line_27 $$ if (config.getAdditionalJdbcDriverPath() != null) -->Line_28 $$ List<URL> urlList = getUrls(config.getAdditionalJdbcDriverPath())[ CD ]
Line_8 $$ Injector injector = app.strictConfig().initialize()-->Line_10 $$ VerifierConfig config = injector.getInstance(VerifierConfig.class)[ FD ]
Line_19 $$ VerifierDao dao = new DBI(config.getQueryDatabase()).onDemand(VerifierDao.class)-->Line_22 $$ queriesBuilder.addAll(dao.getQueriesBySuite(suite, config.getMaxQueries()))[ FD ]
Line_10 $$ VerifierConfig config = injector.getInstance(VerifierConfig.class)-->Line_32 $$ loadJdbcDriver(urls, config.getTestJdbcDriverName())[ FD ]
Line_7 $$ Bootstrap app = new Bootstrap(builder.build())-->Line_8 $$ Injector injector = app.strictConfig().initialize()[ FD ]
Line_10 $$ VerifierConfig config = injector.getInstance(VerifierConfig.class)-->Line_21 $$ for (String suite : config.getSuites()) [ FD ]
Line_10 $$ VerifierConfig config = injector.getInstance(VerifierConfig.class)-->Line_31 $$ if (config.getTestJdbcDriverName() != null) [ FD ]
Line_27 $$ if (config.getAdditionalJdbcDriverPath() != null) -->Line_34 $$ if (config.getControlJdbcDriverName() != null) [ CD ]
Line_38 $$ Verifier verifier = new Verifier(System.out, config, eventClients)-->Line_39 $$ return verifier.run(queries)[ FD ]
Line_8 $$ Injector injector = app.strictConfig().initialize()-->Line_41 $$ injector.getInstance(LifeCycleManager.class).stop()[ FD ]
