Line_5 $$ if (projectPathFile.isFile() && projectPath.endsWith(GradleConstants.EXTENSION) && projectPathFile.getParent() != null) -->Line_8 $$ projectDir = projectPath[ CD ]
Line_8 $$ projectDir = projectPath-->Line_15 $$ System.setProperty("user.dir", projectDir)[ FD ]
Line_31 $$ if (userDir != null) -->Line_32 $$ System.setProperty("user.dir", userDir)[ CD ]
Line_13 $$ userDir = System.getProperty("user.dir")-->Line_32 $$ System.setProperty("user.dir", userDir)[ FD ]
Line_8 $$ projectDir = projectPath-->Line_19 $$ ProjectConnection connection = getConnection(projectDir, settings)[ FD ]
Line_26 $$ Throwable rootCause = ExceptionUtil.getRootCause(e)-->Line_27 $$ throw new ExternalSystemException(ExceptionUtil.getMessage(rootCause))[ FD ]
Line_2 $$ public <T> T execute(@NotNull String projectPath, @Nullable GradleExecutionSettings settings, @NotNull Function<ProjectConnection, T> f) -->Line_19 $$ ProjectConnection connection = getConnection(projectDir, settings)[ FD ]
Line_10 $$ String userDir = null-->Line_32 $$ System.setProperty("user.dir", userDir)[ FD ]
Line_10 $$ String userDir = null-->Line_13 $$ userDir = System.getProperty("user.dir")[ FD ]
Line_2 $$ public <T> T execute(@NotNull String projectPath, @Nullable GradleExecutionSettings settings, @NotNull Function<ProjectConnection, T> f) -->Line_5 $$ if (projectPathFile.isFile() && projectPath.endsWith(GradleConstants.EXTENSION) && projectPathFile.getParent() != null) [ CD ]
Line_2 $$ public <T> T execute(@NotNull String projectPath, @Nullable GradleExecutionSettings settings, @NotNull Function<ProjectConnection, T> f) -->Line_11 $$ if (!GradleEnvironment.ADJUST_USER_DIR) [ CD ]
Line_4 $$ final File projectPathFile = new File(projectPath)-->Line_5 $$ if (projectPathFile.isFile() && projectPath.endsWith(GradleConstants.EXTENSION) && projectPathFile.getParent() != null) [ FD ]
Line_2 $$ public <T> T execute(@NotNull String projectPath, @Nullable GradleExecutionSettings settings, @NotNull Function<ProjectConnection, T> f) -->Line_4 $$ final File projectPathFile = new File(projectPath)[ CD ]
Line_2 $$ public <T> T execute(@NotNull String projectPath, @Nullable GradleExecutionSettings settings, @NotNull Function<ProjectConnection, T> f) -->Line_3 $$ final String projectDir[ CD ]
Line_2 $$ public <T> T execute(@NotNull String projectPath, @Nullable GradleExecutionSettings settings, @NotNull Function<ProjectConnection, T> f) -->Line_8 $$ projectDir = projectPath[ FD ]
Line_10 $$ String userDir = null-->Line_31 $$ if (userDir != null) [ FD ]
Line_6 $$ projectDir = projectPathFile.getParent()-->Line_8 $$ projectDir = projectPath[ FD ]
Line_5 $$ if (projectPathFile.isFile() && projectPath.endsWith(GradleConstants.EXTENSION) && projectPathFile.getParent() != null) -->Line_6 $$ projectDir = projectPathFile.getParent()[ CD ]
Line_14 $$ if (userDir != null)-->Line_15 $$ System.setProperty("user.dir", projectDir)[ CD ]
Line_19 $$ ProjectConnection connection = getConnection(projectDir, settings)-->Line_21 $$ return f.fun(connection)[ FD ]
Line_13 $$ userDir = System.getProperty("user.dir")-->Line_31 $$ if (userDir != null) [ FD ]
Line_3 $$ final String projectDir-->Line_15 $$ System.setProperty("user.dir", projectDir)[ FD ]
Line_2 $$ public <T> T execute(@NotNull String projectPath, @Nullable GradleExecutionSettings settings, @NotNull Function<ProjectConnection, T> f) -->Line_21 $$ return f.fun(connection)[ FD ]
Line_6 $$ projectDir = projectPathFile.getParent()-->Line_19 $$ ProjectConnection connection = getConnection(projectDir, settings)[ FD ]
Line_2 $$ public <T> T execute(@NotNull String projectPath, @Nullable GradleExecutionSettings settings, @NotNull Function<ProjectConnection, T> f) -->Line_5 $$ if (projectPathFile.isFile() && projectPath.endsWith(GradleConstants.EXTENSION) && projectPathFile.getParent() != null) [ FD ]
Line_3 $$ final String projectDir-->Line_8 $$ projectDir = projectPath[ FD ]
Line_2 $$ public <T> T execute(@NotNull String projectPath, @Nullable GradleExecutionSettings settings, @NotNull Function<ProjectConnection, T> f) -->Line_19 $$ ProjectConnection connection = getConnection(projectDir, settings)[ CD ]
Line_10 $$ String userDir = null-->Line_14 $$ if (userDir != null)[ FD ]
Line_3 $$ final String projectDir-->Line_6 $$ projectDir = projectPathFile.getParent()[ FD ]
Line_19 $$ ProjectConnection connection = getConnection(projectDir, settings)-->Line_30 $$ connection.close()[ FD ]
Line_4 $$ final File projectPathFile = new File(projectPath)-->Line_6 $$ projectDir = projectPathFile.getParent()[ FD ]
Line_2 $$ public <T> T execute(@NotNull String projectPath, @Nullable GradleExecutionSettings settings, @NotNull Function<ProjectConnection, T> f) -->Line_10 $$ String userDir = null[ CD ]
Line_6 $$ projectDir = projectPathFile.getParent()-->Line_15 $$ System.setProperty("user.dir", projectDir)[ FD ]
Line_3 $$ final String projectDir-->Line_19 $$ ProjectConnection connection = getConnection(projectDir, settings)[ FD ]
Line_13 $$ userDir = System.getProperty("user.dir")-->Line_14 $$ if (userDir != null)[ FD ]
