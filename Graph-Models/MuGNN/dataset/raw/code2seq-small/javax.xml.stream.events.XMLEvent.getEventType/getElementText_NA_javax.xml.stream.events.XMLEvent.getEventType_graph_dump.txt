Line_4 $$ XMLEvent event = this.previousEvent-->Line_8 $$ if (!event.isStartElement()) [ FD ]
Line_12 $$ while (!event.isEndDocument()) -->Line_40 $$ event = this.nextEvent()[ CD ]
Line_11 $$ final StringBuilder text = new StringBuilder()-->Line_26 $$ text.append(declaration.getReplacementText())[ FD ]
Line_40 $$ event = this.nextEvent()-->Line_12 $$ while (!event.isEndDocument()) [ FD ]
Line_4 $$ XMLEvent event = this.previousEvent-->Line_18 $$ final Characters characters = event.asCharacters()[ FD ]
Line_40 $$ event = this.nextEvent()-->Line_13 $$ switch(event.getEventType()) [ FD ]
Line_4 $$ XMLEvent event = this.previousEvent-->Line_12 $$ while (!event.isEndDocument()) [ FD ]
Line_4 $$ XMLEvent event = this.previousEvent-->Line_40 $$ event = this.nextEvent()[ FD ]
Line_18 $$ final Characters characters = event.asCharacters()-->Line_19 $$ text.append(characters.getData())[ FD ]
Line_4 $$ XMLEvent event = this.previousEvent-->Line_37 $$ throw new XMLStreamException("Unexpected event type '" + XMLStreamConstantsUtils.getEventName(event.getEventType()) + "' encountered. Found event: " + event, event.getLocation())[ FD ]
Line_40 $$ event = this.nextEvent()-->Line_37 $$ throw new XMLStreamException("Unexpected event type '" + XMLStreamConstantsUtils.getEventName(event.getEventType()) + "' encountered. Found event: " + event, event.getLocation())[ FD ]
Line_4 $$ XMLEvent event = this.previousEvent-->Line_5 $$ if (event == null) [ FD ]
Line_11 $$ final StringBuilder text = new StringBuilder()-->Line_42 $$ return text.toString()[ FD ]
Line_11 $$ final StringBuilder text = new StringBuilder()-->Line_19 $$ text.append(characters.getData())[ FD ]
Line_4 $$ XMLEvent event = this.previousEvent-->Line_9 $$ throw new XMLStreamException("Must be on START_ELEMENT to read next text", event.getLocation())[ FD ]
Line_4 $$ XMLEvent event = this.previousEvent-->Line_13 $$ switch(event.getEventType()) [ FD ]
Line_25 $$ final EntityDeclaration declaration = entityReference.getDeclaration()-->Line_26 $$ text.append(declaration.getReplacementText())[ FD ]
Line_40 $$ event = this.nextEvent()-->Line_18 $$ final Characters characters = event.asCharacters()[ FD ]
Line_24 $$ final EntityReference entityReference = (EntityReference) event-->Line_25 $$ final EntityDeclaration declaration = entityReference.getDeclaration()[ FD ]
