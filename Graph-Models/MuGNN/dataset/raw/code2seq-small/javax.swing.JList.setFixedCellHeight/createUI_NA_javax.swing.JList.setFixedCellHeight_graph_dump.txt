Line_3 $$ if (cellRenderer == null || list == null) -->Line_17 $$ list.setLayoutOrientation(JList.HORIZONTAL_WRAP)[ CD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_28 $$ JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(list, ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER)[ CD ]
Line_21 $$ ThumbnailsMouseAdapter mouseListener = new ThumbnailsMouseAdapter()-->Line_22 $$ list.addMouseListener(mouseListener)[ FD ]
Line_7 $$ Options options = OptionsManager.getInstance().getOptions()-->Line_8 $$ EditorOptions editorOptions = options.getEditorOptions()[ FD ]
Line_28 $$ JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(list, ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER)-->Line_29 $$ scrollPane.setBorder(IdeBorderFactory.createBorder(SideBorder.TOP))[ FD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_26 $$ list.setFixedCellWidth(preferredSize.width)[ CD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_34 $$ JComponent toolbar = actionToolbar.getComponent()[ CD ]
Line_31 $$ ActionGroup actionGroup = (ActionGroup) actionManager.getAction(ThumbnailViewActions.GROUP_TOOLBAR)-->Line_32 $$ ActionToolbar actionToolbar = actionManager.createActionToolbar(ThumbnailViewActions.ACTION_PLACE, actionGroup, true)[ FD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_19 $$ list.setCellRenderer(cellRenderer)[ CD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_35 $$ FocusRequester focusRequester = new FocusRequester()[ CD ]
Line_35 $$ FocusRequester focusRequester = new FocusRequester()-->Line_37 $$ scrollPane.addMouseListener(focusRequester)[ FD ]
Line_28 $$ JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(list, ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER)-->Line_39 $$ add(scrollPane, BorderLayout.CENTER)[ FD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_6 $$ VirtualFileManager.getInstance().addVirtualFileListener(vfsListener)[ CD ]
Line_21 $$ ThumbnailsMouseAdapter mouseListener = new ThumbnailsMouseAdapter()-->Line_23 $$ list.addMouseMotionListener(mouseListener)[ FD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_37 $$ scrollPane.addMouseListener(focusRequester)[ CD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_5 $$ ImageComponent imageComponent = cellRenderer.getImageComponent()[ CD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_21 $$ ThumbnailsMouseAdapter mouseListener = new ThumbnailsMouseAdapter()[ CD ]
Line_34 $$ JComponent toolbar = actionToolbar.getComponent()-->Line_38 $$ add(toolbar, BorderLayout.NORTH)[ FD ]
Line_35 $$ FocusRequester focusRequester = new FocusRequester()-->Line_36 $$ toolbar.addMouseListener(focusRequester)[ FD ]
Line_9 $$ TransparencyChessboardOptions chessboardOptions = editorOptions.getTransparencyChessboardOptions()-->Line_11 $$ imageComponent.setTransparencyChessboardCellSize(chessboardOptions.getCellSize())[ FD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_8 $$ EditorOptions editorOptions = options.getEditorOptions()[ CD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_31 $$ ActionGroup actionGroup = (ActionGroup) actionManager.getAction(ThumbnailViewActions.GROUP_TOOLBAR)[ CD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_33 $$ actionToolbar.setTargetComponent(this)[ CD ]
Line_34 $$ JComponent toolbar = actionToolbar.getComponent()-->Line_36 $$ toolbar.addMouseListener(focusRequester)[ FD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_24 $$ ThumbnailComponentUI componentUI = (ThumbnailComponentUI) UIManager.getUI(cellRenderer)[ CD ]
Line_28 $$ JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(list, ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER)-->Line_37 $$ scrollPane.addMouseListener(focusRequester)[ FD ]
Line_5 $$ ImageComponent imageComponent = cellRenderer.getImageComponent()-->Line_12 $$ imageComponent.setTransparencyChessboardWhiteColor(chessboardOptions.getWhiteColor())[ FD ]
Line_9 $$ TransparencyChessboardOptions chessboardOptions = editorOptions.getTransparencyChessboardOptions()-->Line_13 $$ imageComponent.setTransparencyChessboardBlankColor(chessboardOptions.getBlackColor())[ FD ]
Line_24 $$ ThumbnailComponentUI componentUI = (ThumbnailComponentUI) UIManager.getUI(cellRenderer)-->Line_25 $$ Dimension preferredSize = componentUI.getPreferredSize(cellRenderer)[ FD ]
Line_5 $$ ImageComponent imageComponent = cellRenderer.getImageComponent()-->Line_10 $$ imageComponent.setTransparencyChessboardVisible(chessboardOptions.isShowDefault())[ FD ]
Line_5 $$ ImageComponent imageComponent = cellRenderer.getImageComponent()-->Line_11 $$ imageComponent.setTransparencyChessboardCellSize(chessboardOptions.getCellSize())[ FD ]
Line_32 $$ ActionToolbar actionToolbar = actionManager.createActionToolbar(ThumbnailViewActions.ACTION_PLACE, actionGroup, true)-->Line_33 $$ actionToolbar.setTargetComponent(this)[ FD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_10 $$ imageComponent.setTransparencyChessboardVisible(chessboardOptions.isShowDefault())[ CD ]
Line_8 $$ EditorOptions editorOptions = options.getEditorOptions()-->Line_9 $$ TransparencyChessboardOptions chessboardOptions = editorOptions.getTransparencyChessboardOptions()[ FD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_12 $$ imageComponent.setTransparencyChessboardWhiteColor(chessboardOptions.getWhiteColor())[ CD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_14 $$ options.addPropertyChangeListener(optionsListener)[ CD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_16 $$ list.setModel(new DefaultListModel())[ CD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_11 $$ imageComponent.setTransparencyChessboardCellSize(chessboardOptions.getCellSize())[ CD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_27 $$ list.setFixedCellHeight(preferredSize.height)[ CD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_36 $$ toolbar.addMouseListener(focusRequester)[ CD ]
Line_2 $$ private void createUI() -->Line_3 $$ if (cellRenderer == null || list == null) [ CD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_25 $$ Dimension preferredSize = componentUI.getPreferredSize(cellRenderer)[ CD ]
Line_30 $$ ActionManager actionManager = ActionManager.getInstance()-->Line_31 $$ ActionGroup actionGroup = (ActionGroup) actionManager.getAction(ThumbnailViewActions.GROUP_TOOLBAR)[ FD ]
Line_32 $$ ActionToolbar actionToolbar = actionManager.createActionToolbar(ThumbnailViewActions.ACTION_PLACE, actionGroup, true)-->Line_34 $$ JComponent toolbar = actionToolbar.getComponent()[ FD ]
Line_9 $$ TransparencyChessboardOptions chessboardOptions = editorOptions.getTransparencyChessboardOptions()-->Line_12 $$ imageComponent.setTransparencyChessboardWhiteColor(chessboardOptions.getWhiteColor())[ FD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_32 $$ ActionToolbar actionToolbar = actionManager.createActionToolbar(ThumbnailViewActions.ACTION_PLACE, actionGroup, true)[ CD ]
Line_9 $$ TransparencyChessboardOptions chessboardOptions = editorOptions.getTransparencyChessboardOptions()-->Line_10 $$ imageComponent.setTransparencyChessboardVisible(chessboardOptions.isShowDefault())[ FD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_13 $$ imageComponent.setTransparencyChessboardBlankColor(chessboardOptions.getBlackColor())[ CD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_7 $$ Options options = OptionsManager.getInstance().getOptions()[ CD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_23 $$ list.addMouseMotionListener(mouseListener)[ CD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_30 $$ ActionManager actionManager = ActionManager.getInstance()[ CD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_9 $$ TransparencyChessboardOptions chessboardOptions = editorOptions.getTransparencyChessboardOptions()[ CD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_20 $$ list.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION)[ CD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_38 $$ add(toolbar, BorderLayout.NORTH)[ CD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_22 $$ list.addMouseListener(mouseListener)[ CD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_18 $$ list.setVisibleRowCount(-1)[ CD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_29 $$ scrollPane.setBorder(IdeBorderFactory.createBorder(SideBorder.TOP))[ CD ]
Line_30 $$ ActionManager actionManager = ActionManager.getInstance()-->Line_32 $$ ActionToolbar actionToolbar = actionManager.createActionToolbar(ThumbnailViewActions.ACTION_PLACE, actionGroup, true)[ FD ]
Line_3 $$ if (cellRenderer == null || list == null) -->Line_39 $$ add(scrollPane, BorderLayout.CENTER)[ CD ]
Line_7 $$ Options options = OptionsManager.getInstance().getOptions()-->Line_14 $$ options.addPropertyChangeListener(optionsListener)[ FD ]
Line_5 $$ ImageComponent imageComponent = cellRenderer.getImageComponent()-->Line_13 $$ imageComponent.setTransparencyChessboardBlankColor(chessboardOptions.getBlackColor())[ FD ]
