Line_2 $$ public void printUsage(Appendable out) -->Line_5 $$ orderedOptions.addAll(optionsByString.values())[ CD ]
Line_12 $$ if (optionString.length() == 1) -->Line_13 $$ prefixedStrings.add("-" + optionString)[ CD ]
Line_29 $$ for (Map.Entry<String, String> entry : lines.entrySet()) -->Line_30 $$ if (entry.getValue().length() == 0) [ FD ]
Line_2 $$ public void printUsage(Appendable out) -->Line_3 $$ Formatter formatter = new Formatter(out)[ CD ]
Line_10 $$ List<String> prefixedStrings = new ArrayList<String>()-->Line_13 $$ prefixedStrings.add("-" + optionString)[ FD ]
Line_8 $$ Set<String> orderedOptionStrings = new TreeSet<String>(new OptionStringComparator())-->Line_9 $$ orderedOptionStrings.addAll(option.getOptions())[ FD ]
Line_3 $$ Formatter formatter = new Formatter(out)-->Line_33 $$ formatter.format("%-" + max + "s  %s%n", entry.getKey(), entry.getValue())[ FD ]
Line_19 $$ String value = option.getDescription()-->Line_21 $$ value = ""[ FD ]
Line_6 $$ Map<String, String> lines = new LinkedHashMap<String, String>()-->Line_26 $$ for (String optionStr : lines.keySet()) [ FD ]
Line_2 $$ public void printUsage(Appendable out) -->Line_4 $$ Set<CommandLineOption> orderedOptions = new TreeSet<CommandLineOption>(new OptionComparator())[ CD ]
Line_20 $$ if (value == null || value.length() == 0) -->Line_21 $$ value = ""[ CD ]
Line_4 $$ Set<CommandLineOption> orderedOptions = new TreeSet<CommandLineOption>(new OptionComparator())-->Line_5 $$ orderedOptions.addAll(optionsByString.values())[ FD ]
Line_29 $$ for (Map.Entry<String, String> entry : lines.entrySet()) -->Line_33 $$ formatter.format("%-" + max + "s  %s%n", entry.getKey(), entry.getValue())[ FD ]
Line_29 $$ for (Map.Entry<String, String> entry : lines.entrySet()) -->Line_31 $$ formatter.format("%s%n", entry.getKey())[ FD ]
Line_6 $$ Map<String, String> lines = new LinkedHashMap<String, String>()-->Line_29 $$ for (Map.Entry<String, String> entry : lines.entrySet()) [ FD ]
Line_3 $$ Formatter formatter = new Formatter(out)-->Line_31 $$ formatter.format("%s%n", entry.getKey())[ FD ]
Line_2 $$ public void printUsage(Appendable out) -->Line_6 $$ Map<String, String> lines = new LinkedHashMap<String, String>()[ CD ]
Line_3 $$ Formatter formatter = new Formatter(out)-->Line_36 $$ formatter.flush()[ FD ]
Line_30 $$ if (entry.getValue().length() == 0) -->Line_31 $$ formatter.format("%s%n", entry.getKey())[ CD ]
Line_18 $$ String key = join(prefixedStrings, ", ")-->Line_23 $$ lines.put(key, value)[ FD ]
Line_2 $$ public void printUsage(Appendable out) -->Line_36 $$ formatter.flush()[ CD ]
Line_19 $$ String value = option.getDescription()-->Line_20 $$ if (value == null || value.length() == 0) [ FD ]
Line_7 $$ for (CommandLineOption option : orderedOptions) -->Line_19 $$ String value = option.getDescription()[ FD ]
Line_10 $$ List<String> prefixedStrings = new ArrayList<String>()-->Line_15 $$ prefixedStrings.add("--" + optionString)[ FD ]
Line_25 $$ int max = 0-->Line_27 $$ max = Math.max(max, optionStr.length())[ FD ]
Line_19 $$ String value = option.getDescription()-->Line_23 $$ lines.put(key, value)[ FD ]
Line_10 $$ List<String> prefixedStrings = new ArrayList<String>()-->Line_18 $$ String key = join(prefixedStrings, ", ")[ FD ]
Line_11 $$ for (String optionString : orderedOptionStrings) -->Line_12 $$ if (optionString.length() == 1) [ FD ]
Line_6 $$ Map<String, String> lines = new LinkedHashMap<String, String>()-->Line_23 $$ lines.put(key, value)[ FD ]
Line_26 $$ for (String optionStr : lines.keySet()) -->Line_27 $$ max = Math.max(max, optionStr.length())[ FD ]
Line_30 $$ if (entry.getValue().length() == 0) -->Line_33 $$ formatter.format("%-" + max + "s  %s%n", entry.getKey(), entry.getValue())[ CD ]
Line_12 $$ if (optionString.length() == 1) -->Line_15 $$ prefixedStrings.add("--" + optionString)[ CD ]
Line_21 $$ value = ""-->Line_23 $$ lines.put(key, value)[ FD ]
Line_2 $$ public void printUsage(Appendable out) -->Line_25 $$ int max = 0[ CD ]
Line_7 $$ for (CommandLineOption option : orderedOptions) -->Line_9 $$ orderedOptionStrings.addAll(option.getOptions())[ FD ]
