Line_2 $$ public static String getGradleExceptionMessage(Throwable failure, ShowStacktrace stackTraceLevel) -->Line_13 $$ if (failure instanceof LocationAwareException) [ FD ]
Line_6 $$ Formatter formatter = new Formatter()-->Line_28 $$ return formatter.toString() + getStackTraceAsText(StackTraceUtils.deepSanitize(failure))[ FD ]
Line_6 $$ Formatter formatter = new Formatter()-->Line_9 $$ formatter.format("Use the stack trace options to get more details.")[ FD ]
Line_6 $$ Formatter formatter = new Formatter()-->Line_7 $$ formatter.format("%nBuild failed.%n")[ FD ]
Line_6 $$ Formatter formatter = new Formatter()-->Line_24 $$ formatter.format("%n%nException is:\n")[ FD ]
Line_14 $$ LocationAwareException scriptException = (LocationAwareException) failure-->Line_16 $$ formatter.format("%s", scriptException.getCause().getMessage())[ FD ]
Line_2 $$ public static String getGradleExceptionMessage(Throwable failure, ShowStacktrace stackTraceLevel) -->Line_31 $$ return formatter.toString()[ CD ]
Line_2 $$ public static String getGradleExceptionMessage(Throwable failure, ShowStacktrace stackTraceLevel) -->Line_11 $$ if (failure != null) [ FD ]
Line_6 $$ Formatter formatter = new Formatter()-->Line_18 $$ formatter.format("%nCause: %s", getMessage(cause))[ FD ]
Line_23 $$ if (stackTraceLevel != ShowStacktrace.INTERNAL_EXCEPTIONS) -->Line_25 $$ if (stackTraceLevel == ShowStacktrace.ALWAYS_FULL) [ CD ]
Line_2 $$ public static String getGradleExceptionMessage(Throwable failure, ShowStacktrace stackTraceLevel) -->Line_6 $$ Formatter formatter = new Formatter()[ CD ]
Line_2 $$ public static String getGradleExceptionMessage(Throwable failure, ShowStacktrace stackTraceLevel) -->Line_26 $$ return formatter.toString() + getStackTraceAsText(failure)[ FD ]
Line_2 $$ public static String getGradleExceptionMessage(Throwable failure, ShowStacktrace stackTraceLevel) -->Line_8 $$ if (stackTraceLevel == ShowStacktrace.INTERNAL_EXCEPTIONS) [ FD ]
Line_2 $$ public static String getGradleExceptionMessage(Throwable failure, ShowStacktrace stackTraceLevel) -->Line_21 $$ formatter.format("%s", getMessage(failure))[ FD ]
Line_6 $$ Formatter formatter = new Formatter()-->Line_21 $$ formatter.format("%s", getMessage(failure))[ FD ]
Line_2 $$ public static String getGradleExceptionMessage(Throwable failure, ShowStacktrace stackTraceLevel) -->Line_25 $$ if (stackTraceLevel == ShowStacktrace.ALWAYS_FULL) [ FD ]
Line_23 $$ if (stackTraceLevel != ShowStacktrace.INTERNAL_EXCEPTIONS) -->Line_28 $$ return formatter.toString() + getStackTraceAsText(StackTraceUtils.deepSanitize(failure))[ CD ]
Line_6 $$ Formatter formatter = new Formatter()-->Line_12 $$ formatter.format("%n")[ FD ]
Line_3 $$ if (failure == null) -->Line_4 $$ return ""[ CD ]
Line_13 $$ if (failure instanceof LocationAwareException) -->Line_15 $$ formatter.format("%s%n%n", scriptException.getLocation())[ CD ]
Line_14 $$ LocationAwareException scriptException = (LocationAwareException) failure-->Line_15 $$ formatter.format("%s%n%n", scriptException.getLocation())[ FD ]
Line_25 $$ if (stackTraceLevel == ShowStacktrace.ALWAYS_FULL) -->Line_26 $$ return formatter.toString() + getStackTraceAsText(failure)[ CD ]
Line_17 $$ for (Throwable cause : scriptException.getReportableCauses()) -->Line_18 $$ formatter.format("%nCause: %s", getMessage(cause))[ FD ]
Line_2 $$ public static String getGradleExceptionMessage(Throwable failure, ShowStacktrace stackTraceLevel) -->Line_3 $$ if (failure == null) [ CD ]
Line_2 $$ public static String getGradleExceptionMessage(Throwable failure, ShowStacktrace stackTraceLevel) -->Line_11 $$ if (failure != null) [ CD ]
Line_13 $$ if (failure instanceof LocationAwareException) -->Line_16 $$ formatter.format("%s", scriptException.getCause().getMessage())[ CD ]
Line_23 $$ if (stackTraceLevel != ShowStacktrace.INTERNAL_EXCEPTIONS) -->Line_24 $$ formatter.format("%n%nException is:\n")[ CD ]
Line_6 $$ Formatter formatter = new Formatter()-->Line_31 $$ return formatter.toString()[ FD ]
Line_2 $$ public static String getGradleExceptionMessage(Throwable failure, ShowStacktrace stackTraceLevel) -->Line_7 $$ formatter.format("%nBuild failed.%n")[ CD ]
Line_2 $$ public static String getGradleExceptionMessage(Throwable failure, ShowStacktrace stackTraceLevel) -->Line_23 $$ if (stackTraceLevel != ShowStacktrace.INTERNAL_EXCEPTIONS) [ FD ]
Line_11 $$ if (failure != null) -->Line_13 $$ if (failure instanceof LocationAwareException) [ CD ]
Line_6 $$ Formatter formatter = new Formatter()-->Line_26 $$ return formatter.toString() + getStackTraceAsText(failure)[ FD ]
Line_2 $$ public static String getGradleExceptionMessage(Throwable failure, ShowStacktrace stackTraceLevel) -->Line_3 $$ if (failure == null) [ FD ]
Line_2 $$ public static String getGradleExceptionMessage(Throwable failure, ShowStacktrace stackTraceLevel) -->Line_28 $$ return formatter.toString() + getStackTraceAsText(StackTraceUtils.deepSanitize(failure))[ FD ]
Line_11 $$ if (failure != null) -->Line_23 $$ if (stackTraceLevel != ShowStacktrace.INTERNAL_EXCEPTIONS) [ CD ]
Line_6 $$ Formatter formatter = new Formatter()-->Line_15 $$ formatter.format("%s%n%n", scriptException.getLocation())[ FD ]
Line_11 $$ if (failure != null) -->Line_12 $$ formatter.format("%n")[ CD ]
Line_8 $$ if (stackTraceLevel == ShowStacktrace.INTERNAL_EXCEPTIONS) -->Line_9 $$ formatter.format("Use the stack trace options to get more details.")[ CD ]
Line_14 $$ LocationAwareException scriptException = (LocationAwareException) failure-->Line_17 $$ for (Throwable cause : scriptException.getReportableCauses()) [ FD ]
Line_13 $$ if (failure instanceof LocationAwareException) -->Line_14 $$ LocationAwareException scriptException = (LocationAwareException) failure[ CD ]
Line_13 $$ if (failure instanceof LocationAwareException) -->Line_21 $$ formatter.format("%s", getMessage(failure))[ CD ]
Line_6 $$ Formatter formatter = new Formatter()-->Line_16 $$ formatter.format("%s", scriptException.getCause().getMessage())[ FD ]
Line_2 $$ public static String getGradleExceptionMessage(Throwable failure, ShowStacktrace stackTraceLevel) -->Line_8 $$ if (stackTraceLevel == ShowStacktrace.INTERNAL_EXCEPTIONS) [ CD ]
