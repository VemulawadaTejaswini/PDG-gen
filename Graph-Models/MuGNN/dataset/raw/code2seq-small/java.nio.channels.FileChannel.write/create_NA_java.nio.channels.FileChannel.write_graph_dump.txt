Line_2 $$ static HintsWriter create(File directory, HintsDescriptor descriptor) throws IOException -->Line_3 $$ File file = new File(directory, descriptor.fileName())[ CD ]
Line_2 $$ static HintsWriter create(File directory, HintsDescriptor descriptor) throws IOException -->Line_3 $$ File file = new File(directory, descriptor.fileName())[ FD ]
Line_2 $$ static HintsWriter create(File directory, HintsDescriptor descriptor) throws IOException -->Line_6 $$ CRC32 crc = new CRC32()[ CD ]
Line_2 $$ static HintsWriter create(File directory, HintsDescriptor descriptor) throws IOException -->Line_8 $$ descriptor.serialize(dob)[ FD ]
Line_16 $$ if (descriptor.isCompressed()) -->Line_17 $$ return new CompressedHintsWriter(directory, descriptor, file, channel, fd, crc)[ CD ]
Line_16 $$ if (descriptor.isCompressed()) -->Line_19 $$ return new HintsWriter(directory, descriptor, file, channel, fd, crc)[ CD ]
Line_7 $$ try (DataOutputBuffer dob = new DataOutputBuffer()) -->Line_9 $$ ByteBuffer descriptorBytes = dob.buffer()[ FD ]
Line_4 $$ FileChannel channel = FileChannel.open(file.toPath(), StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW)-->Line_11 $$ channel.write(descriptorBytes)[ FD ]
Line_9 $$ ByteBuffer descriptorBytes = dob.buffer()-->Line_10 $$ updateChecksum(crc, descriptorBytes)[ FD ]
Line_4 $$ FileChannel channel = FileChannel.open(file.toPath(), StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW)-->Line_5 $$ int fd = CLibrary.getfd(channel)[ FD ]
Line_2 $$ static HintsWriter create(File directory, HintsDescriptor descriptor) throws IOException -->Line_4 $$ FileChannel channel = FileChannel.open(file.toPath(), StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW)[ CD ]
Line_2 $$ static HintsWriter create(File directory, HintsDescriptor descriptor) throws IOException -->Line_16 $$ if (descriptor.isCompressed()) [ FD ]
Line_7 $$ try (DataOutputBuffer dob = new DataOutputBuffer()) -->Line_8 $$ descriptor.serialize(dob)[ FD ]
Line_2 $$ static HintsWriter create(File directory, HintsDescriptor descriptor) throws IOException -->Line_16 $$ if (descriptor.isCompressed()) [ CD ]
Line_6 $$ CRC32 crc = new CRC32()-->Line_10 $$ updateChecksum(crc, descriptorBytes)[ FD ]
Line_3 $$ File file = new File(directory, descriptor.fileName())-->Line_4 $$ FileChannel channel = FileChannel.open(file.toPath(), StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW)[ FD ]
Line_9 $$ ByteBuffer descriptorBytes = dob.buffer()-->Line_11 $$ channel.write(descriptorBytes)[ FD ]
Line_2 $$ static HintsWriter create(File directory, HintsDescriptor descriptor) throws IOException -->Line_5 $$ int fd = CLibrary.getfd(channel)[ CD ]
Line_4 $$ FileChannel channel = FileChannel.open(file.toPath(), StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW)-->Line_13 $$ channel.close()[ FD ]
