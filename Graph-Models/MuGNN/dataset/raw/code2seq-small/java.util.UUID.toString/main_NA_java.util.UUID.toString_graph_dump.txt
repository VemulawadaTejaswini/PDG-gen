Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_7 $$ long sysTime = System.currentTimeMillis()[ CD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_26 $$ System.out.println("  variant : " + uuid.variant())[ CD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_22 $$ System.out.println("             lsb : " + BytesHelper.toBinaryString(leastSignificantBits))[ CD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_13 $$ System.out.println("    before bit setting ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")[ CD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_18 $$ loBits[0] |= ((byte) 2 << (byte) 6)[ CD ]
Line_8 $$ short hiTime = (short) (System.currentTimeMillis() >>> 32)-->Line_10 $$ System.arraycopy(BytesHelper.fromShort(hiTime), 0, loBits, 0, 2)[ FD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_20 $$ System.out.println("       loBits[0] : " + BytesHelper.toBinaryString(loBits[0]))[ CD ]
Line_24 $$ UUID uuid = new UUID(strategy.mostSignificantBits, leastSignificantBits)-->Line_26 $$ System.out.println("  variant : " + uuid.variant())[ FD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_11 $$ System.arraycopy(BytesHelper.fromInt(loTime), 0, loBits, 2, 4)[ CD ]
Line_6 $$ byte[] loBits = new byte[8]-->Line_11 $$ System.arraycopy(BytesHelper.fromInt(loTime), 0, loBits, 2, 4)[ FD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_15 $$ System.out.println("             lsb : " + BytesHelper.toBinaryString(BytesHelper.asLong(loBits)))[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ for (int i = 0; i < 1000; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ CustomVersionOneStrategy strategy = new CustomVersionOneStrategy()[ CD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_25 $$ System.out.println("  uuid : " + uuid.toString())[ CD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_31 $$ System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")[ CD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_23 $$ System.out.println("    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")[ CD ]
Line_6 $$ byte[] loBits = new byte[8]-->Line_12 $$ System.arraycopy(Helper.getCountBytes(), 0, loBits, 6, 2)[ FD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_5 $$ System.out.println("Generation # " + i + " ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")[ CD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_14 $$ System.out.println("       loBits[0] : " + BytesHelper.toBinaryString(loBits[0]))[ CD ]
Line_6 $$ byte[] loBits = new byte[8]-->Line_21 $$ long leastSignificantBits = BytesHelper.asLong(loBits)[ FD ]
Line_6 $$ byte[] loBits = new byte[8]-->Line_10 $$ System.arraycopy(BytesHelper.fromShort(hiTime), 0, loBits, 0, 2)[ FD ]
Line_24 $$ UUID uuid = new UUID(strategy.mostSignificantBits, leastSignificantBits)-->Line_27 $$ System.out.println("  version : " + uuid.version())[ FD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_28 $$ if (uuid.variant() != 2) [ CD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_24 $$ UUID uuid = new UUID(strategy.mostSignificantBits, leastSignificantBits)[ CD ]
Line_9 $$ int loTime = (int) sysTime-->Line_11 $$ System.arraycopy(BytesHelper.fromInt(loTime), 0, loBits, 2, 4)[ FD ]
Line_24 $$ UUID uuid = new UUID(strategy.mostSignificantBits, leastSignificantBits)-->Line_25 $$ System.out.println("  uuid : " + uuid.toString())[ FD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_12 $$ System.arraycopy(Helper.getCountBytes(), 0, loBits, 6, 2)[ CD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_21 $$ long leastSignificantBits = BytesHelper.asLong(loBits)[ CD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_9 $$ int loTime = (int) sysTime[ CD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_16 $$ System.out.println("    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")[ CD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_17 $$ loBits[0] &= 0x3f[ CD ]
Line_24 $$ UUID uuid = new UUID(strategy.mostSignificantBits, leastSignificantBits)-->Line_28 $$ if (uuid.variant() != 2) [ FD ]
Line_21 $$ long leastSignificantBits = BytesHelper.asLong(loBits)-->Line_22 $$ System.out.println("             lsb : " + BytesHelper.toBinaryString(leastSignificantBits))[ FD ]
Line_6 $$ byte[] loBits = new byte[8]-->Line_15 $$ System.out.println("             lsb : " + BytesHelper.toBinaryString(BytesHelper.asLong(loBits)))[ FD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_10 $$ System.arraycopy(BytesHelper.fromShort(hiTime), 0, loBits, 0, 2)[ CD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_19 $$ System.out.println("    after bit setting ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")[ CD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_27 $$ System.out.println("  version : " + uuid.version())[ CD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_6 $$ byte[] loBits = new byte[8][ CD ]
Line_4 $$ for (int i = 0; i < 1000; i++) -->Line_8 $$ short hiTime = (short) (System.currentTimeMillis() >>> 32)[ CD ]
