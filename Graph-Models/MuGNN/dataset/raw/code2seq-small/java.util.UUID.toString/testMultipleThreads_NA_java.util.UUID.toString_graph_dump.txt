Line_2 $$ public void testMultipleThreads() throws InterruptedException -->Line_11 $$ assertEquals(opCount, operations.size())[ CD ]
Line_5 $$ final List<Monitorable> operations = Collections.synchronizedList(new ArrayList(opCount))-->Line_11 $$ assertEquals(opCount, operations.size())[ FD ]
Line_3 $$ final int opCount = 50-->Line_6 $$ for (int i = 0; i < opCount; i++) [ FD ]
Line_2 $$ public void testMultipleThreads() throws InterruptedException -->Line_5 $$ final List<Monitorable> operations = Collections.synchronizedList(new ArrayList(opCount))[ CD ]
Line_2 $$ public void testMultipleThreads() throws InterruptedException -->Line_13 $$ assertEquals(opCount, MonitoringTask.instance.getFailedOperations().size())[ CD ]
Line_5 $$ final List<Monitorable> operations = Collections.synchronizedList(new ArrayList(opCount))-->Line_7 $$ operations.add(new TestMonitor(UUID.randomUUID().toString(), new ConstructionTime(), timeout))[ FD ]
Line_2 $$ public void testMultipleThreads() throws InterruptedException -->Line_6 $$ for (int i = 0; i < opCount; i++) [ CD ]
Line_2 $$ public void testMultipleThreads() throws InterruptedException -->Line_4 $$ final ExecutorService executorService = Executors.newFixedThreadPool(20)[ CD ]
Line_6 $$ for (int i = 0; i < opCount; i++) -->Line_7 $$ executorService.submit(() -> operations.add(new TestMonitor(UUID.randomUUID().toString(), new ConstructionTime(), timeout)))[ CD ]
Line_2 $$ public void testMultipleThreads() throws InterruptedException -->Line_3 $$ final int opCount = 50[ CD ]
Line_3 $$ final int opCount = 50-->Line_13 $$ assertEquals(opCount, MonitoringTask.instance.getFailedOperations().size())[ FD ]
Line_4 $$ final ExecutorService executorService = Executors.newFixedThreadPool(20)-->Line_9 $$ executorService.shutdown()[ FD ]
Line_3 $$ final int opCount = 50-->Line_11 $$ assertEquals(opCount, operations.size())[ FD ]
Line_2 $$ public void testMultipleThreads() throws InterruptedException -->Line_9 $$ executorService.shutdown()[ CD ]
Line_2 $$ public void testMultipleThreads() throws InterruptedException -->Line_10 $$ assertTrue(executorService.awaitTermination(30, TimeUnit.SECONDS))[ CD ]
Line_4 $$ final ExecutorService executorService = Executors.newFixedThreadPool(20)-->Line_7 $$ executorService.submit(() -> operations.add(new TestMonitor(UUID.randomUUID().toString(), new ConstructionTime(), timeout)))[ FD ]
Line_5 $$ final List<Monitorable> operations = Collections.synchronizedList(new ArrayList(opCount))-->Line_12 $$ waitForOperationsToComplete(operations)[ FD ]
Line_2 $$ public void testMultipleThreads() throws InterruptedException -->Line_12 $$ waitForOperationsToComplete(operations)[ CD ]
Line_4 $$ final ExecutorService executorService = Executors.newFixedThreadPool(20)-->Line_10 $$ assertTrue(executorService.awaitTermination(30, TimeUnit.SECONDS))[ FD ]
