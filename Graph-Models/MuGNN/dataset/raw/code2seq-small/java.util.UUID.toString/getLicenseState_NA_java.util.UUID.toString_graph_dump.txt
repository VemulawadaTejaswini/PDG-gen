Line_31 $$ if (responseRandomUuid.equals(randomUuid)) -->Line_33 $$ return licenseState[ CD ]
Line_25 $$ JSONObject responseJSONObject = new JSONObjectImpl(response)-->Line_26 $$ String errorMessage = responseJSONObject.getString("errorMessage")[ FD ]
Line_3 $$ String productId = licenseProperties.get("productId")-->Line_4 $$ if (Validator.isNull(productId)) [ FD ]
Line_25 $$ JSONObject responseJSONObject = new JSONObjectImpl(response)-->Line_30 $$ String responseRandomUuid = responseJSONObject.getString("randomUuid")[ FD ]
Line_2 $$ public int getLicenseState(Map<String, String> licenseProperties) -->Line_3 $$ String productId = licenseProperties.get("productId")[ CD ]
Line_8 $$ JSONObject jsonObject = new JSONObjectImpl()-->Line_14 $$ jsonObject.put("productId", productId)[ FD ]
Line_30 $$ String responseRandomUuid = responseJSONObject.getString("randomUuid")-->Line_31 $$ if (responseRandomUuid.equals(randomUuid)) [ FD ]
Line_2 $$ public int getLicenseState(Map<String, String> licenseProperties) -->Line_21 $$ String userCount = licenseProperties.get("userCount")[ FD ]
Line_2 $$ public int getLicenseState(Map<String, String> licenseProperties) -->Line_4 $$ if (Validator.isNull(productId)) [ CD ]
Line_8 $$ JSONObject jsonObject = new JSONObjectImpl()-->Line_20 $$ jsonObject.put("serverId", Arrays.toString(serverIdBytes))[ FD ]
Line_2 $$ public int getLicenseState(Map<String, String> licenseProperties) -->Line_3 $$ String productId = licenseProperties.get("productId")[ FD ]
Line_3 $$ String productId = licenseProperties.get("productId")-->Line_14 $$ jsonObject.put("productId", productId)[ FD ]
Line_8 $$ JSONObject jsonObject = new JSONObjectImpl()-->Line_23 $$ jsonObject.put("version", 2)[ FD ]
Line_8 $$ JSONObject jsonObject = new JSONObjectImpl()-->Line_10 $$ jsonObject.put(Constants.CMD, "GET_LICENSE_STATE")[ FD ]
Line_8 $$ JSONObject jsonObject = new JSONObjectImpl()-->Line_24 $$ String response = LicenseUtil.sendRequest(jsonObject.toString())[ FD ]
Line_18 $$ String randomUuid = uuid.toString()-->Line_31 $$ if (responseRandomUuid.equals(randomUuid)) [ FD ]
Line_8 $$ JSONObject jsonObject = new JSONObjectImpl()-->Line_11 $$ jsonObject.put("hostName", getHostName())[ FD ]
Line_8 $$ JSONObject jsonObject = new JSONObjectImpl()-->Line_13 $$ jsonObject.put("macAddresses", StringUtil.merge(getMacAddresses()))[ FD ]
Line_26 $$ String errorMessage = responseJSONObject.getString("errorMessage")-->Line_27 $$ if (Validator.isNotNull(errorMessage)) [ FD ]
Line_8 $$ JSONObject jsonObject = new JSONObjectImpl()-->Line_16 $$ jsonObject.put("productVersion", productVersion)[ FD ]
Line_8 $$ JSONObject jsonObject = new JSONObjectImpl()-->Line_12 $$ jsonObject.put("ipAddresses", StringUtil.merge(getIpAddresses()))[ FD ]
Line_17 $$ UUID uuid = new UUID(SecureRandomUtil.nextLong(), SecureRandomUtil.nextLong())-->Line_18 $$ String randomUuid = uuid.toString()[ FD ]
Line_2 $$ public int getLicenseState(Map<String, String> licenseProperties) -->Line_15 $$ String productVersion = licenseProperties.get("productVersion")[ FD ]
Line_21 $$ String userCount = licenseProperties.get("userCount")-->Line_22 $$ jsonObject.put("userCount", userCount)[ FD ]
Line_31 $$ if (responseRandomUuid.equals(randomUuid)) -->Line_32 $$ int licenseState = responseJSONObject.getInt("licenseState")[ CD ]
Line_8 $$ JSONObject jsonObject = new JSONObjectImpl()-->Line_19 $$ jsonObject.put("randomUuid", randomUuid)[ FD ]
Line_9 $$ byte[] serverIdBytes = LicenseUtil.getServerIdBytes()-->Line_20 $$ jsonObject.put("serverId", Arrays.toString(serverIdBytes))[ FD ]
Line_4 $$ if (Validator.isNull(productId)) -->Line_5 $$ return 0[ CD ]
Line_18 $$ String randomUuid = uuid.toString()-->Line_19 $$ jsonObject.put("randomUuid", randomUuid)[ FD ]
Line_25 $$ JSONObject responseJSONObject = new JSONObjectImpl(response)-->Line_32 $$ int licenseState = responseJSONObject.getInt("licenseState")[ FD ]
Line_15 $$ String productVersion = licenseProperties.get("productVersion")-->Line_16 $$ jsonObject.put("productVersion", productVersion)[ FD ]
Line_2 $$ public int getLicenseState(Map<String, String> licenseProperties) -->Line_38 $$ return 0[ CD ]
Line_8 $$ JSONObject jsonObject = new JSONObjectImpl()-->Line_22 $$ jsonObject.put("userCount", userCount)[ FD ]
