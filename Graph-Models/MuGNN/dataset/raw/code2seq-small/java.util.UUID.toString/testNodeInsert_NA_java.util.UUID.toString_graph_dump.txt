Line_2 $$ public void testNodeInsert() throws Exception -->Line_6 $$ assertEquals(dao.getNodeId(nodeName), (Integer) nodeId)[ CD ]
Line_2 $$ public void testNodeInsert() throws Exception -->Line_4 $$ String nodeName = UUID.randomUUID().toString()[ CD ]
Line_2 $$ public void testNodeInsert() throws Exception -->Line_7 $$ assertEquals(dao.getAllNodesInUse(), ImmutableSet.of(nodeName))[ CD ]
Line_2 $$ public void testNodeInsert() throws Exception -->Line_5 $$ int nodeId = dao.insertNode(nodeName)[ CD ]
Line_4 $$ String nodeName = UUID.randomUUID().toString()-->Line_7 $$ assertEquals(dao.getAllNodesInUse(), ImmutableSet.of(nodeName))[ FD ]
Line_4 $$ String nodeName = UUID.randomUUID().toString()-->Line_5 $$ int nodeId = dao.insertNode(nodeName)[ FD ]
Line_2 $$ public void testNodeInsert() throws Exception -->Line_3 $$ assertEquals(dao.getAllNodesInUse(), ImmutableSet.of())[ CD ]
Line_4 $$ String nodeName = UUID.randomUUID().toString()-->Line_6 $$ assertEquals(dao.getNodeId(nodeName), (Integer) nodeId)[ FD ]
