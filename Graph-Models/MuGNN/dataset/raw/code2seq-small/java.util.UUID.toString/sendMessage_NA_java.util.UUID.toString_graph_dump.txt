Line_5 $$ TemporaryQueue tempQueue = context.createTemporaryQueue()-->Line_6 $$ producerBean.sendToDestination(tempQueue, text)[ FD ]
Line_8 $$ String reply = consumer.receiveBody(String.class, adjust(2000))-->Line_9 $$ assertEquals(text, reply)[ FD ]
Line_5 $$ TemporaryQueue tempQueue = context.createTemporaryQueue()-->Line_7 $$ JMSConsumer consumer = context.createConsumer(tempQueue)[ FD ]
Line_7 $$ JMSConsumer consumer = context.createConsumer(tempQueue)-->Line_8 $$ String reply = consumer.receiveBody(String.class, adjust(2000))[ FD ]
Line_4 $$ try (JMSContext context = factory.createContext()) -->Line_7 $$ JMSConsumer consumer = context.createConsumer(tempQueue)[ FD ]
Line_3 $$ String text = UUID.randomUUID().toString()-->Line_9 $$ assertEquals(text, reply)[ FD ]
Line_3 $$ String text = UUID.randomUUID().toString()-->Line_6 $$ producerBean.sendToDestination(tempQueue, text)[ FD ]
Line_2 $$ public void sendMessage() throws JMSException -->Line_3 $$ String text = UUID.randomUUID().toString()[ CD ]
Line_4 $$ try (JMSContext context = factory.createContext()) -->Line_5 $$ TemporaryQueue tempQueue = context.createTemporaryQueue()[ FD ]
