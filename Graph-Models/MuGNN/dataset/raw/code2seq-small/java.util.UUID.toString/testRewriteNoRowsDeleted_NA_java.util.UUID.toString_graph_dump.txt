Line_11 $$ OrcFileInfo info = OrcFileRewriter.rewrite(file, newFile, rowsToDelete)-->Line_12 $$ assertEquals(info.getRowCount(), 2)[ FD ]
Line_5 $$ File file = new File(temporary, randomUUID().toString())-->Line_14 $$ assertEquals(readAllBytes(newFile.toPath()), readAllBytes(file.toPath()))[ FD ]
Line_2 $$ public void testRewriteNoRowsDeleted() throws Exception -->Line_12 $$ assertEquals(info.getRowCount(), 2)[ CD ]
Line_4 $$ List<Type> columnTypes = ImmutableList.of(BIGINT)-->Line_7 $$ writer.appendPages(rowPagesBuilder(columnTypes).row(123).row(456).build())[ FD ]
Line_2 $$ public void testRewriteNoRowsDeleted() throws Exception -->Line_14 $$ assertEquals(readAllBytes(newFile.toPath()), readAllBytes(file.toPath()))[ CD ]
Line_2 $$ public void testRewriteNoRowsDeleted() throws Exception -->Line_10 $$ File newFile = new File(temporary, randomUUID().toString())[ CD ]
Line_2 $$ public void testRewriteNoRowsDeleted() throws Exception -->Line_3 $$ List<Long> columnIds = ImmutableList.of(3L)[ CD ]
Line_6 $$ try (OrcFileWriter writer = new OrcFileWriter(columnIds, columnTypes, file)) -->Line_7 $$ writer.appendPages(rowPagesBuilder(columnTypes).row(123).row(456).build())[ FD ]
Line_2 $$ public void testRewriteNoRowsDeleted() throws Exception -->Line_9 $$ BitSet rowsToDelete = new BitSet()[ CD ]
Line_2 $$ public void testRewriteNoRowsDeleted() throws Exception -->Line_13 $$ assertEquals(info.getUncompressedSize(), 16)[ CD ]
Line_10 $$ File newFile = new File(temporary, randomUUID().toString())-->Line_11 $$ OrcFileInfo info = OrcFileRewriter.rewrite(file, newFile, rowsToDelete)[ FD ]
Line_11 $$ OrcFileInfo info = OrcFileRewriter.rewrite(file, newFile, rowsToDelete)-->Line_13 $$ assertEquals(info.getUncompressedSize(), 16)[ FD ]
Line_9 $$ BitSet rowsToDelete = new BitSet()-->Line_11 $$ OrcFileInfo info = OrcFileRewriter.rewrite(file, newFile, rowsToDelete)[ FD ]
Line_2 $$ public void testRewriteNoRowsDeleted() throws Exception -->Line_11 $$ OrcFileInfo info = OrcFileRewriter.rewrite(file, newFile, rowsToDelete)[ CD ]
Line_10 $$ File newFile = new File(temporary, randomUUID().toString())-->Line_14 $$ assertEquals(readAllBytes(newFile.toPath()), readAllBytes(file.toPath()))[ FD ]
Line_5 $$ File file = new File(temporary, randomUUID().toString())-->Line_11 $$ OrcFileInfo info = OrcFileRewriter.rewrite(file, newFile, rowsToDelete)[ FD ]
Line_2 $$ public void testRewriteNoRowsDeleted() throws Exception -->Line_4 $$ List<Type> columnTypes = ImmutableList.of(BIGINT)[ CD ]
Line_2 $$ public void testRewriteNoRowsDeleted() throws Exception -->Line_5 $$ File file = new File(temporary, randomUUID().toString())[ CD ]
