Line_2 $$ public synchronized int read(byte[] buf, int off, int len) throws IOException -->Line_11 $$ if (LOG.isTraceEnabled()) [ CD ]
Line_2 $$ public synchronized int read(byte[] buf, int off, int len) throws IOException -->Line_17 $$ int nRead = Math.min(curDataSlice.remaining(), len)[ CD ]
Line_11 $$ if (LOG.isTraceEnabled()) -->Line_12 $$ LOG.trace(String.format("Finishing read #" + randomId))[ CD ]
Line_2 $$ public synchronized int read(byte[] buf, int off, int len) throws IOException -->Line_3 $$ UUID randomId = null[ CD ]
Line_4 $$ if (LOG.isTraceEnabled()) -->Line_6 $$ LOG.trace(String.format("Starting read #%s file %s from datanode %s", randomId.toString(), this.filename, this.datanodeID.getHostName()))[ CD ]
Line_5 $$ randomId = UUID.randomUUID()-->Line_6 $$ LOG.trace(String.format("Starting read #%s file %s from datanode %s", randomId.toString(), this.filename, this.datanodeID.getHostName()))[ FD ]
Line_2 $$ public synchronized int read(byte[] buf, int off, int len) throws IOException -->Line_14 $$ if (curDataSlice.remaining() == 0) [ CD ]
Line_2 $$ public synchronized int read(byte[] buf, int off, int len) throws IOException -->Line_17 $$ int nRead = Math.min(curDataSlice.remaining(), len)[ FD ]
Line_2 $$ public synchronized int read(byte[] buf, int off, int len) throws IOException -->Line_18 $$ curDataSlice.get(buf, off, nRead)[ FD ]
Line_14 $$ if (curDataSlice.remaining() == 0) -->Line_15 $$ return -1[ CD ]
Line_8 $$ if (curDataSlice == null || curDataSlice.remaining() == 0 && bytesNeededToFinish > 0) -->Line_9 $$ readNextPacket()[ CD ]
Line_2 $$ public synchronized int read(byte[] buf, int off, int len) throws IOException -->Line_19 $$ return nRead[ CD ]
Line_4 $$ if (LOG.isTraceEnabled()) -->Line_5 $$ randomId = UUID.randomUUID()[ CD ]
Line_3 $$ UUID randomId = null-->Line_6 $$ LOG.trace(String.format("Starting read #%s file %s from datanode %s", randomId.toString(), this.filename, this.datanodeID.getHostName()))[ FD ]
Line_2 $$ public synchronized int read(byte[] buf, int off, int len) throws IOException -->Line_4 $$ if (LOG.isTraceEnabled()) [ CD ]
Line_17 $$ int nRead = Math.min(curDataSlice.remaining(), len)-->Line_18 $$ curDataSlice.get(buf, off, nRead)[ FD ]
Line_2 $$ public synchronized int read(byte[] buf, int off, int len) throws IOException -->Line_18 $$ curDataSlice.get(buf, off, nRead)[ CD ]
Line_3 $$ UUID randomId = null-->Line_5 $$ randomId = UUID.randomUUID()[ FD ]
Line_2 $$ public synchronized int read(byte[] buf, int off, int len) throws IOException -->Line_8 $$ if (curDataSlice == null || curDataSlice.remaining() == 0 && bytesNeededToFinish > 0) [ CD ]
