Line_5 $$ TemporaryQueue tempQueue = context.createTemporaryQueue()-->Line_7 $$ assertMessageIsReceived(tempQueue, context, text, rollback)[ FD ]
Line_4 $$ try (JMSContext context = factory.createContext()) -->Line_7 $$ assertMessageIsReceived(tempQueue, context, text, rollback)[ FD ]
Line_3 $$ String text = UUID.randomUUID().toString()-->Line_7 $$ assertMessageIsReceived(tempQueue, context, text, rollback)[ FD ]
Line_2 $$ private void sendWith_REQUIRED_transaction(boolean rollback) throws JMSException -->Line_3 $$ String text = UUID.randomUUID().toString()[ CD ]
Line_3 $$ String text = UUID.randomUUID().toString()-->Line_6 $$ producerBean.sendToDestination(tempQueue, text, rollback)[ FD ]
Line_2 $$ private void sendWith_REQUIRED_transaction(boolean rollback) throws JMSException -->Line_7 $$ assertMessageIsReceived(tempQueue, context, text, rollback)[ FD ]
Line_5 $$ TemporaryQueue tempQueue = context.createTemporaryQueue()-->Line_6 $$ producerBean.sendToDestination(tempQueue, text, rollback)[ FD ]
Line_4 $$ try (JMSContext context = factory.createContext()) -->Line_5 $$ TemporaryQueue tempQueue = context.createTemporaryQueue()[ FD ]
Line_2 $$ private void sendWith_REQUIRED_transaction(boolean rollback) throws JMSException -->Line_6 $$ producerBean.sendToDestination(tempQueue, text, rollback)[ FD ]
