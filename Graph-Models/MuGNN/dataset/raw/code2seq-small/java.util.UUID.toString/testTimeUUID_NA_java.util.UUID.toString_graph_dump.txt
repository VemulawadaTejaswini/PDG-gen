Line_3 $$ UUID uuid = UUIDGen.getTimeUUID()-->Line_6 $$ assert TimeUUIDType.instance.compose(ByteBuffer.wrap(UUIDGen.decompose(uuid))).equals(uuid)[ FD ]
Line_3 $$ UUID uuid = UUIDGen.getTimeUUID()-->Line_7 $$ assert uuid.equals(TimeUUIDType.instance.compose(TimeUUIDType.instance.fromString(uuid.toString())))[ FD ]
Line_3 $$ UUID uuid = UUIDGen.getTimeUUID()-->Line_8 $$ assert UUIDSerializer.instance.toString(uuid).equals(uuid.toString())[ FD ]
Line_3 $$ UUID uuid = UUIDGen.getTimeUUID()-->Line_4 $$ assert TimeUUIDType.instance.getString(TimeUUIDType.instance.fromString(uuid.toString())).equals(uuid.toString())[ FD ]
Line_3 $$ UUID uuid = UUIDGen.getTimeUUID()-->Line_5 $$ assert TimeUUIDType.instance.fromString(TimeUUIDType.instance.getString(ByteBuffer.wrap(UUIDGen.decompose(uuid)))).equals(ByteBuffer.wrap(UUIDGen.decompose(uuid)))[ FD ]
Line_2 $$ public void testTimeUUID() -->Line_3 $$ UUID uuid = UUIDGen.getTimeUUID()[ CD ]
