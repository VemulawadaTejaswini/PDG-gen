Line_2 $$ public void testNnLearnsNewStorages() throws IOException, InterruptedException -->Line_8 $$ assertNotNull(storageInfo)[ CD ]
Line_7 $$ DatanodeStorageInfo storageInfo = cluster.getNameNode().getNamesystem().getBlockManager().getDatanodeManager().getDatanode(dn0.getDatanodeId()).getStorageInfo(newStorageUuid)-->Line_8 $$ assertNotNull(storageInfo)[ FD ]
Line_2 $$ public void testNnLearnsNewStorages() throws IOException, InterruptedException -->Line_6 $$ cluster.getNameNodeRpc().blockReceivedAndDeleted(dn0Reg, poolId, reports)[ CD ]
Line_2 $$ public void testNnLearnsNewStorages() throws IOException, InterruptedException -->Line_3 $$ final String newStorageUuid = UUID.randomUUID().toString()[ CD ]
Line_4 $$ final DatanodeStorage newStorage = new DatanodeStorage(newStorageUuid)-->Line_5 $$ StorageReceivedDeletedBlocks[] reports = makeReportForReceivedBlock(getDummyBlock(), newStorage)[ FD ]
Line_2 $$ public void testNnLearnsNewStorages() throws IOException, InterruptedException -->Line_7 $$ DatanodeStorageInfo storageInfo = cluster.getNameNode().getNamesystem().getBlockManager().getDatanodeManager().getDatanode(dn0.getDatanodeId()).getStorageInfo(newStorageUuid)[ CD ]
Line_5 $$ StorageReceivedDeletedBlocks[] reports = makeReportForReceivedBlock(getDummyBlock(), newStorage)-->Line_6 $$ cluster.getNameNodeRpc().blockReceivedAndDeleted(dn0Reg, poolId, reports)[ FD ]
Line_2 $$ public void testNnLearnsNewStorages() throws IOException, InterruptedException -->Line_4 $$ final DatanodeStorage newStorage = new DatanodeStorage(newStorageUuid)[ CD ]
Line_2 $$ public void testNnLearnsNewStorages() throws IOException, InterruptedException -->Line_5 $$ StorageReceivedDeletedBlocks[] reports = makeReportForReceivedBlock(getDummyBlock(), newStorage)[ CD ]
Line_3 $$ final String newStorageUuid = UUID.randomUUID().toString()-->Line_7 $$ DatanodeStorageInfo storageInfo = cluster.getNameNode().getNamesystem().getBlockManager().getDatanodeManager().getDatanode(dn0.getDatanodeId()).getStorageInfo(newStorageUuid)[ FD ]
