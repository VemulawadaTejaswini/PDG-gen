Line_2 $$ public void testNoOpCache() throws Exception -->Line_7 $$ cache.put(key, new Object())[ CD ]
Line_4 $$ Cache cache = manager.getCache(name)-->Line_7 $$ cache.put(key, new Object())[ FD ]
Line_6 $$ Object key = new Object()-->Line_8 $$ assertNull(cache.get(key))[ FD ]
Line_6 $$ Object key = new Object()-->Line_7 $$ cache.put(key, new Object())[ FD ]
Line_2 $$ public void testNoOpCache() throws Exception -->Line_3 $$ String name = UUID.randomUUID().toString()[ CD ]
Line_4 $$ Cache cache = manager.getCache(name)-->Line_5 $$ assertEquals(name, cache.getName())[ FD ]
Line_4 $$ Cache cache = manager.getCache(name)-->Line_8 $$ assertNull(cache.get(key))[ FD ]
Line_4 $$ Cache cache = manager.getCache(name)-->Line_9 $$ assertNull(cache.get(key, Object.class))[ FD ]
Line_3 $$ String name = UUID.randomUUID().toString()-->Line_5 $$ assertEquals(name, cache.getName())[ FD ]
Line_6 $$ Object key = new Object()-->Line_9 $$ assertNull(cache.get(key, Object.class))[ FD ]
Line_2 $$ public void testNoOpCache() throws Exception -->Line_4 $$ Cache cache = manager.getCache(name)[ CD ]
Line_3 $$ String name = UUID.randomUUID().toString()-->Line_4 $$ Cache cache = manager.getCache(name)[ FD ]
Line_4 $$ Cache cache = manager.getCache(name)-->Line_10 $$ assertNull(cache.getNativeCache())[ FD ]
Line_2 $$ public void testNoOpCache() throws Exception -->Line_5 $$ assertEquals(name, cache.getName())[ CD ]
Line_2 $$ public void testNoOpCache() throws Exception -->Line_9 $$ assertNull(cache.get(key, Object.class))[ CD ]
Line_2 $$ public void testNoOpCache() throws Exception -->Line_6 $$ Object key = new Object()[ CD ]
Line_2 $$ public void testNoOpCache() throws Exception -->Line_10 $$ assertNull(cache.getNativeCache())[ CD ]
Line_2 $$ public void testNoOpCache() throws Exception -->Line_8 $$ assertNull(cache.get(key))[ CD ]
