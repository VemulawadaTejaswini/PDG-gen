Line_2 $$ public void testSimulatorRunning() throws Exception -->Line_5 $$ Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() [ CD ]
Line_5 $$ Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() -->Line_7 $$ exceptionList.add(e)[ CD ]
Line_2 $$ public void testSimulatorRunning() throws Exception -->Line_12 $$ SLSRunner.main(args)[ CD ]
Line_2 $$ public void testSimulatorRunning() throws Exception -->Line_14 $$ while (count >= 0) [ CD ]
Line_2 $$ public void testSimulatorRunning() throws Exception -->Line_23 $$ SLSRunner.getRunner().stop()[ CD ]
Line_2 $$ public void testSimulatorRunning() throws Exception -->Line_3 $$ File tempDir = new File("target", UUID.randomUUID().toString())[ CD ]
Line_4 $$ final List<Throwable> exceptionList = Collections.synchronizedList(new ArrayList<Throwable>())-->Line_16 $$ if (!exceptionList.isEmpty()) [ FD ]
Line_2 $$ public void testSimulatorRunning() throws Exception -->Line_4 $$ final List<Throwable> exceptionList = Collections.synchronizedList(new ArrayList<Throwable>())[ CD ]
Line_16 $$ if (!exceptionList.isEmpty()) -->Line_18 $$ Assert.fail("TestSLSRunner catched exception from child thread " + "(TaskRunner.Task): " + exceptionList.get(0).getMessage())[ CD ]
Line_14 $$ while (count >= 0) -->Line_15 $$ Thread.sleep(1000)[ CD ]
Line_4 $$ final List<Throwable> exceptionList = Collections.synchronizedList(new ArrayList<Throwable>())-->Line_18 $$ Assert.fail("TestSLSRunner catched exception from child thread " + "(TaskRunner.Task): " + exceptionList.get(0).getMessage())[ FD ]
Line_5 $$ Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() -->Line_7 $$ exceptionList.add(e)[ FD ]
Line_14 $$ while (count >= 0) -->Line_16 $$ if (!exceptionList.isEmpty()) [ CD ]
Line_3 $$ File tempDir = new File("target", UUID.randomUUID().toString())-->Line_10 $$ File slsOutputDir = new File(tempDir.getAbsolutePath() + "/slsoutput/")[ FD ]
Line_4 $$ final List<Throwable> exceptionList = Collections.synchronizedList(new ArrayList<Throwable>())-->Line_7 $$ exceptionList.add(e)[ FD ]
Line_16 $$ if (!exceptionList.isEmpty()) -->Line_17 $$ SLSRunner.getRunner().stop()[ CD ]
