Line_2 $$ public void createPrincipal(File keytabFile, String... principals) throws Exception -->Line_5 $$ List<KeytabEntry> entries = new ArrayList<KeytabEntry>()[ CD ]
Line_3 $$ String generatedPassword = UUID.randomUUID().toString()-->Line_7 $$ createPrincipal(principal, generatedPassword)[ FD ]
Line_2 $$ public void createPrincipal(File keytabFile, String... principals) throws Exception -->Line_17 $$ keytab.write(keytabFile)[ FD ]
Line_2 $$ public void createPrincipal(File keytabFile, String... principals) throws Exception -->Line_4 $$ Keytab keytab = new Keytab()[ CD ]
Line_10 $$ for (Map.Entry<EncryptionType, EncryptionKey> entry : KerberosKeyFactory.getKerberosKeys(principal, generatedPassword).entrySet()) -->Line_11 $$ EncryptionKey ekey = entry.getValue()[ FD ]
Line_6 $$ for (String principal : principals) -->Line_8 $$ principal = principal + "@" + getRealm()[ FD ]
Line_4 $$ Keytab keytab = new Keytab()-->Line_16 $$ keytab.setEntries(entries)[ FD ]
Line_11 $$ EncryptionKey ekey = entry.getValue()-->Line_12 $$ byte keyVersion = (byte) ekey.getKeyVersion()[ FD ]
Line_2 $$ public void createPrincipal(File keytabFile, String... principals) throws Exception -->Line_17 $$ keytab.write(keytabFile)[ CD ]
Line_4 $$ Keytab keytab = new Keytab()-->Line_17 $$ keytab.write(keytabFile)[ FD ]
Line_5 $$ List<KeytabEntry> entries = new ArrayList<KeytabEntry>()-->Line_16 $$ keytab.setEntries(entries)[ FD ]
Line_5 $$ List<KeytabEntry> entries = new ArrayList<KeytabEntry>()-->Line_13 $$ entries.add(new KeytabEntry(principal, 1L, timestamp, keyVersion, ekey))[ FD ]
Line_2 $$ public void createPrincipal(File keytabFile, String... principals) throws Exception -->Line_3 $$ String generatedPassword = UUID.randomUUID().toString()[ CD ]
Line_6 $$ for (String principal : principals) -->Line_7 $$ createPrincipal(principal, generatedPassword)[ FD ]
Line_3 $$ String generatedPassword = UUID.randomUUID().toString()-->Line_10 $$ for (Map.Entry<EncryptionType, EncryptionKey> entry : KerberosKeyFactory.getKerberosKeys(principal, generatedPassword).entrySet()) [ FD ]
Line_8 $$ principal = principal + "@" + getRealm()-->Line_10 $$ for (Map.Entry<EncryptionType, EncryptionKey> entry : KerberosKeyFactory.getKerberosKeys(principal, generatedPassword).entrySet()) [ FD ]
Line_2 $$ public void createPrincipal(File keytabFile, String... principals) throws Exception -->Line_16 $$ keytab.setEntries(entries)[ CD ]
Line_6 $$ for (String principal : principals) -->Line_10 $$ for (Map.Entry<EncryptionType, EncryptionKey> entry : KerberosKeyFactory.getKerberosKeys(principal, generatedPassword).entrySet()) [ FD ]
