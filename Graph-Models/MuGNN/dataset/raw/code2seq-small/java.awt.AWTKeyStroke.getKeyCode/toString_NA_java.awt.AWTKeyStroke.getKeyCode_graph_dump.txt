Line_21 $$ if (stroke != null) -->Line_26 $$ append(sb, "meta", modifiers, InputEvent.META_DOWN_MASK)[ CD ]
Line_21 $$ if (stroke != null) -->Line_25 $$ append(sb, "ctrl", modifiers, InputEvent.CTRL_DOWN_MASK)[ CD ]
Line_22 $$ StringBuilder sb = new StringBuilder()-->Line_26 $$ append(sb, "meta", modifiers, InputEvent.META_DOWN_MASK)[ FD ]
Line_35 $$ String name = LazyVirtualKeys.myCodeToName.get(code)-->Line_38 $$ name = Integer.toHexString(code)[ FD ]
Line_22 $$ StringBuilder sb = new StringBuilder()-->Line_45 $$ return sb.append(ch).toString()[ FD ]
Line_21 $$ if (stroke != null) -->Line_42 $$ char ch = stroke.getKeyChar()[ CD ]
Line_42 $$ char ch = stroke.getKeyChar()-->Line_43 $$ if (ch != KeyEvent.CHAR_UNDEFINED) [ FD ]
Line_36 $$ if (name == null) -->Line_38 $$ name = Integer.toHexString(code)[ CD ]
Line_32 $$ int code = stroke.getKeyCode()-->Line_35 $$ String name = LazyVirtualKeys.myCodeToName.get(code)[ FD ]
Line_21 $$ if (stroke != null) -->Line_23 $$ int modifiers = stroke.getModifiers()[ CD ]
Line_22 $$ StringBuilder sb = new StringBuilder()-->Line_40 $$ return sb.append(name).toString()[ FD ]
Line_33 $$ if (code != KeyEvent.VK_UNDEFINED) -->Line_36 $$ if (name == null) [ CD ]
Line_21 $$ if (stroke != null) -->Line_24 $$ append(sb, "shift", modifiers, InputEvent.SHIFT_DOWN_MASK)[ CD ]
Line_21 $$ if (stroke != null) -->Line_27 $$ append(sb, "alt", modifiers, InputEvent.ALT_DOWN_MASK)[ CD ]
Line_22 $$ StringBuilder sb = new StringBuilder()-->Line_37 $$ sb.append('#')[ FD ]
Line_36 $$ if (name == null) -->Line_37 $$ sb.append('#')[ CD ]
Line_42 $$ char ch = stroke.getKeyChar()-->Line_45 $$ return sb.append(ch).toString()[ FD ]
Line_23 $$ int modifiers = stroke.getModifiers()-->Line_28 $$ append(sb, "altGraph", modifiers, InputEvent.ALT_GRAPH_DOWN_MASK)[ FD ]
Line_21 $$ if (stroke != null) -->Line_22 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_21 $$ if (stroke != null) -->Line_32 $$ int code = stroke.getKeyCode()[ CD ]
Line_32 $$ int code = stroke.getKeyCode()-->Line_38 $$ name = Integer.toHexString(code)[ FD ]
Line_22 $$ StringBuilder sb = new StringBuilder()-->Line_31 $$ append(sb, "button3", modifiers, InputEvent.BUTTON3_DOWN_MASK)[ FD ]
Line_23 $$ int modifiers = stroke.getModifiers()-->Line_27 $$ append(sb, "alt", modifiers, InputEvent.ALT_DOWN_MASK)[ FD ]
Line_21 $$ if (stroke != null) -->Line_43 $$ if (ch != KeyEvent.CHAR_UNDEFINED) [ CD ]
Line_23 $$ int modifiers = stroke.getModifiers()-->Line_26 $$ append(sb, "meta", modifiers, InputEvent.META_DOWN_MASK)[ FD ]
Line_23 $$ int modifiers = stroke.getModifiers()-->Line_31 $$ append(sb, "button3", modifiers, InputEvent.BUTTON3_DOWN_MASK)[ FD ]
Line_22 $$ StringBuilder sb = new StringBuilder()-->Line_34 $$ append(sb, "released", stroke.isOnKeyRelease())[ FD ]
Line_21 $$ if (stroke != null) -->Line_47 $$ LOG.error("undefined key stroke")[ CD ]
Line_21 $$ if (stroke != null) -->Line_33 $$ if (code != KeyEvent.VK_UNDEFINED) [ CD ]
Line_38 $$ name = Integer.toHexString(code)-->Line_40 $$ return sb.append(name).toString()[ FD ]
Line_33 $$ if (code != KeyEvent.VK_UNDEFINED) -->Line_34 $$ append(sb, "released", stroke.isOnKeyRelease())[ CD ]
Line_35 $$ String name = LazyVirtualKeys.myCodeToName.get(code)-->Line_40 $$ return sb.append(name).toString()[ FD ]
Line_43 $$ if (ch != KeyEvent.CHAR_UNDEFINED) -->Line_44 $$ append(sb, "typed", true)[ CD ]
Line_35 $$ String name = LazyVirtualKeys.myCodeToName.get(code)-->Line_36 $$ if (name == null) [ FD ]
Line_22 $$ StringBuilder sb = new StringBuilder()-->Line_44 $$ append(sb, "typed", true)[ FD ]
Line_21 $$ if (stroke != null) -->Line_28 $$ append(sb, "altGraph", modifiers, InputEvent.ALT_GRAPH_DOWN_MASK)[ CD ]
Line_23 $$ int modifiers = stroke.getModifiers()-->Line_30 $$ append(sb, "button2", modifiers, InputEvent.BUTTON2_DOWN_MASK)[ FD ]
Line_21 $$ if (stroke != null) -->Line_31 $$ append(sb, "button3", modifiers, InputEvent.BUTTON3_DOWN_MASK)[ CD ]
Line_22 $$ StringBuilder sb = new StringBuilder()-->Line_27 $$ append(sb, "alt", modifiers, InputEvent.ALT_DOWN_MASK)[ FD ]
Line_22 $$ StringBuilder sb = new StringBuilder()-->Line_25 $$ append(sb, "ctrl", modifiers, InputEvent.CTRL_DOWN_MASK)[ FD ]
Line_23 $$ int modifiers = stroke.getModifiers()-->Line_24 $$ append(sb, "shift", modifiers, InputEvent.SHIFT_DOWN_MASK)[ FD ]
Line_23 $$ int modifiers = stroke.getModifiers()-->Line_29 $$ append(sb, "button1", modifiers, InputEvent.BUTTON1_DOWN_MASK)[ FD ]
Line_33 $$ if (code != KeyEvent.VK_UNDEFINED) -->Line_40 $$ return sb.append(name).toString()[ CD ]
Line_22 $$ StringBuilder sb = new StringBuilder()-->Line_30 $$ append(sb, "button2", modifiers, InputEvent.BUTTON2_DOWN_MASK)[ FD ]
Line_33 $$ if (code != KeyEvent.VK_UNDEFINED) -->Line_35 $$ String name = LazyVirtualKeys.myCodeToName.get(code)[ CD ]
Line_23 $$ int modifiers = stroke.getModifiers()-->Line_25 $$ append(sb, "ctrl", modifiers, InputEvent.CTRL_DOWN_MASK)[ FD ]
Line_22 $$ StringBuilder sb = new StringBuilder()-->Line_28 $$ append(sb, "altGraph", modifiers, InputEvent.ALT_GRAPH_DOWN_MASK)[ FD ]
Line_22 $$ StringBuilder sb = new StringBuilder()-->Line_29 $$ append(sb, "button1", modifiers, InputEvent.BUTTON1_DOWN_MASK)[ FD ]
Line_43 $$ if (ch != KeyEvent.CHAR_UNDEFINED) -->Line_45 $$ return sb.append(ch).toString()[ CD ]
Line_22 $$ StringBuilder sb = new StringBuilder()-->Line_24 $$ append(sb, "shift", modifiers, InputEvent.SHIFT_DOWN_MASK)[ FD ]
Line_21 $$ if (stroke != null) -->Line_30 $$ append(sb, "button2", modifiers, InputEvent.BUTTON2_DOWN_MASK)[ CD ]
Line_32 $$ int code = stroke.getKeyCode()-->Line_33 $$ if (code != KeyEvent.VK_UNDEFINED) [ FD ]
Line_21 $$ if (stroke != null) -->Line_29 $$ append(sb, "button1", modifiers, InputEvent.BUTTON1_DOWN_MASK)[ CD ]
