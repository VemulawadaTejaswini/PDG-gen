Line_3 $$ class TestRedirectView extends RedirectView -->Line_7 $$ this.queryPropertiesCalled = true[ CD ]
Line_2 $$ private void doTest(final Map<String, ?> map, final String url, final boolean contextRelative, final boolean exposeModelAttributes, String expectedUrlForEncoding) throws Exception -->Line_14 $$ rv.setExposeModelAttributes(exposeModelAttributes)[ CD ]
Line_3 $$ class TestRedirectView extends RedirectView -->Line_6 $$ assertTrue("Map and model must be equal.", map.equals(model))[ CD ]
Line_2 $$ private void doTest(final Map<String, ?> map, final String url, final boolean contextRelative, final boolean exposeModelAttributes, String expectedUrlForEncoding) throws Exception -->Line_15 $$ HttpServletRequest request = mock(HttpServletRequest.class, "request")[ CD ]
Line_2 $$ private void doTest(final Map<String, ?> map, final String url, final boolean contextRelative, final boolean exposeModelAttributes, String expectedUrlForEncoding) throws Exception -->Line_29 $$ rv.render(map, request, response)[ FD ]
Line_2 $$ private void doTest(final Map<String, ?> map, final String url, final boolean contextRelative, final boolean exposeModelAttributes, String expectedUrlForEncoding) throws Exception -->Line_28 $$ response.sendRedirect(expectedUrlForEncoding)[ FD ]
Line_2 $$ private void doTest(final Map<String, ?> map, final String url, final boolean contextRelative, final boolean exposeModelAttributes, String expectedUrlForEncoding) throws Exception -->Line_19 $$ if (contextRelative) [ CD ]
Line_2 $$ private void doTest(final Map<String, ?> map, final String url, final boolean contextRelative, final boolean exposeModelAttributes, String expectedUrlForEncoding) throws Exception -->Line_12 $$ rv.setUrl(url)[ CD ]
Line_16 $$ if (exposeModelAttributes) -->Line_17 $$ given(request.getCharacterEncoding()).willReturn(WebUtils.DEFAULT_CHARACTER_ENCODING)[ CD ]
Line_2 $$ private void doTest(final Map<String, ?> map, final String url, final boolean contextRelative, final boolean exposeModelAttributes, String expectedUrlForEncoding) throws Exception -->Line_26 $$ HttpServletResponse response = mock(HttpServletResponse.class, "response")[ CD ]
Line_2 $$ private void doTest(final Map<String, ?> map, final String url, final boolean contextRelative, final boolean exposeModelAttributes, String expectedUrlForEncoding) throws Exception -->Line_30 $$ if (exposeModelAttributes) [ CD ]
Line_2 $$ private void doTest(final Map<String, ?> map, final String url, final boolean contextRelative, final boolean exposeModelAttributes, String expectedUrlForEncoding) throws Exception -->Line_13 $$ rv.setContextRelative(contextRelative)[ FD ]
Line_2 $$ private void doTest(final Map<String, ?> map, final String url, final boolean contextRelative, final boolean exposeModelAttributes, String expectedUrlForEncoding) throws Exception -->Line_27 $$ given(response.encodeRedirectURL(expectedUrlForEncoding)).willReturn(expectedUrlForEncoding)[ CD ]
Line_3 $$ class TestRedirectView extends RedirectView -->Line_8 $$ return super.queryProperties(model)[ CD ]
Line_2 $$ private void doTest(final Map<String, ?> map, final String url, final boolean contextRelative, final boolean exposeModelAttributes, String expectedUrlForEncoding) throws Exception -->Line_25 $$ given(request.getAttribute(DispatcherServlet.FLASH_MAP_MANAGER_ATTRIBUTE)).willReturn(flashMapManager)[ CD ]
Line_30 $$ if (exposeModelAttributes) -->Line_31 $$ assertTrue("queryProperties() should have been called.", rv.queryPropertiesCalled)[ CD ]
Line_19 $$ if (contextRelative) -->Line_21 $$ given(request.getContextPath()).willReturn("/context")[ CD ]
Line_3 $$ class TestRedirectView extends RedirectView -->Line_6 $$ assertTrue("Map and model must be equal.", map.equals(model))[ FD ]
Line_2 $$ private void doTest(final Map<String, ?> map, final String url, final boolean contextRelative, final boolean exposeModelAttributes, String expectedUrlForEncoding) throws Exception -->Line_14 $$ rv.setExposeModelAttributes(exposeModelAttributes)[ FD ]
Line_3 $$ class TestRedirectView extends RedirectView -->Line_8 $$ return super.queryProperties(model)[ FD ]
Line_2 $$ private void doTest(final Map<String, ?> map, final String url, final boolean contextRelative, final boolean exposeModelAttributes, String expectedUrlForEncoding) throws Exception -->Line_28 $$ response.sendRedirect(expectedUrlForEncoding)[ CD ]
Line_2 $$ private void doTest(final Map<String, ?> map, final String url, final boolean contextRelative, final boolean exposeModelAttributes, String expectedUrlForEncoding) throws Exception -->Line_6 $$ assertTrue("Map and model must be equal.", map.equals(model))[ FD ]
Line_2 $$ private void doTest(final Map<String, ?> map, final String url, final boolean contextRelative, final boolean exposeModelAttributes, String expectedUrlForEncoding) throws Exception -->Line_23 $$ given(request.getAttribute(DispatcherServlet.OUTPUT_FLASH_MAP_ATTRIBUTE)).willReturn(new FlashMap())[ CD ]
Line_2 $$ private void doTest(final Map<String, ?> map, final String url, final boolean contextRelative, final boolean exposeModelAttributes, String expectedUrlForEncoding) throws Exception -->Line_29 $$ rv.render(map, request, response)[ CD ]
Line_2 $$ private void doTest(final Map<String, ?> map, final String url, final boolean contextRelative, final boolean exposeModelAttributes, String expectedUrlForEncoding) throws Exception -->Line_27 $$ given(response.encodeRedirectURL(expectedUrlForEncoding)).willReturn(expectedUrlForEncoding)[ FD ]
Line_2 $$ private void doTest(final Map<String, ?> map, final String url, final boolean contextRelative, final boolean exposeModelAttributes, String expectedUrlForEncoding) throws Exception -->Line_13 $$ rv.setContextRelative(contextRelative)[ CD ]
Line_2 $$ private void doTest(final Map<String, ?> map, final String url, final boolean contextRelative, final boolean exposeModelAttributes, String expectedUrlForEncoding) throws Exception -->Line_16 $$ if (exposeModelAttributes) [ CD ]
Line_2 $$ private void doTest(final Map<String, ?> map, final String url, final boolean contextRelative, final boolean exposeModelAttributes, String expectedUrlForEncoding) throws Exception -->Line_12 $$ rv.setUrl(url)[ FD ]
