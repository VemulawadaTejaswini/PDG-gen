Line_46 $$ if (chown) -->Line_47 $$ targetFS.setOwner(path, user, group)[ CD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_5 $$ String user = targetFileStatus.getOwner()[ CD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_9 $$ List<AclEntry> targetAcl = getAcl(targetFS, targetFileStatus)[ FD ]
Line_7 $$ if (attributes.contains(FileAttribute.ACL)) -->Line_10 $$ if (!srcAcl.equals(targetAcl)) [ CD ]
Line_25 $$ Iterator<Entry<String, byte[]>> iter = srcXAttrs.entrySet().iterator()-->Line_26 $$ while (iter.hasNext()) [ FD ]
Line_21 $$ final String rawNS = XAttr.NameSpace.RAW.name().toLowerCase()-->Line_29 $$ if (xattrName.startsWith(rawNS) || preserveXAttrs) [ FD ]
Line_20 $$ if (preserveXAttrs || preserveRawXattrs) -->Line_24 $$ if (srcXAttrs != null && !srcXAttrs.equals(targetXAttrs)) [ CD ]
Line_3 $$ FileStatus targetFileStatus = targetFS.getFileStatus(path)-->Line_5 $$ String user = targetFileStatus.getOwner()[ FD ]
Line_3 $$ FileStatus targetFileStatus = targetFS.getFileStatus(path)-->Line_9 $$ List<AclEntry> targetAcl = getAcl(targetFS, targetFileStatus)[ FD ]
Line_28 $$ final String xattrName = entry.getKey()-->Line_29 $$ if (xattrName.startsWith(rawNS) || preserveXAttrs) [ FD ]
Line_20 $$ if (preserveXAttrs || preserveRawXattrs) -->Line_23 $$ Map<String, byte[]> targetXAttrs = getXAttrs(targetFS, path)[ CD ]
Line_5 $$ String user = targetFileStatus.getOwner()-->Line_43 $$ user = srcFileStatus.getOwner()[ FD ]
Line_42 $$ if (attributes.contains(FileAttribute.USER) && !user.equals(srcFileStatus.getOwner())) -->Line_43 $$ user = srcFileStatus.getOwner()[ CD ]
Line_7 $$ if (attributes.contains(FileAttribute.ACL)) -->Line_13 $$ if (srcFileStatus.getPermission().getStickyBit() != targetFileStatus.getPermission().getStickyBit()) [ CD ]
Line_26 $$ while (iter.hasNext()) -->Line_29 $$ if (xattrName.startsWith(rawNS) || preserveXAttrs) [ CD ]
Line_43 $$ user = srcFileStatus.getOwner()-->Line_47 $$ targetFS.setOwner(path, user, group)[ FD ]
Line_42 $$ if (attributes.contains(FileAttribute.USER) && !user.equals(srcFileStatus.getOwner())) -->Line_44 $$ chown = true[ CD ]
Line_4 $$ String group = targetFileStatus.getGroup()-->Line_47 $$ targetFS.setOwner(path, user, group)[ FD ]
Line_20 $$ if (preserveXAttrs || preserveRawXattrs) -->Line_21 $$ final String rawNS = XAttr.NameSpace.RAW.name().toLowerCase()[ CD ]
Line_8 $$ List<AclEntry> srcAcl = srcFileStatus.getAclEntries()-->Line_10 $$ if (!srcAcl.equals(targetAcl)) [ FD ]
Line_38 $$ if (attributes.contains(FileAttribute.GROUP) && !group.equals(srcFileStatus.getGroup())) -->Line_39 $$ group = srcFileStatus.getGroup()[ CD ]
Line_19 $$ final boolean preserveXAttrs = attributes.contains(FileAttribute.XATTR)-->Line_20 $$ if (preserveXAttrs || preserveRawXattrs) [ FD ]
Line_38 $$ if (attributes.contains(FileAttribute.GROUP) && !group.equals(srcFileStatus.getGroup())) -->Line_40 $$ chown = true[ CD ]
Line_7 $$ if (attributes.contains(FileAttribute.ACL)) -->Line_8 $$ List<AclEntry> srcAcl = srcFileStatus.getAclEntries()[ CD ]
Line_5 $$ String user = targetFileStatus.getOwner()-->Line_42 $$ if (attributes.contains(FileAttribute.USER) && !user.equals(srcFileStatus.getOwner())) [ FD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_38 $$ if (attributes.contains(FileAttribute.GROUP) && !group.equals(srcFileStatus.getGroup())) [ FD ]
Line_6 $$ boolean chown = false-->Line_44 $$ chown = true[ FD ]
Line_39 $$ group = srcFileStatus.getGroup()-->Line_47 $$ targetFS.setOwner(path, user, group)[ FD ]
Line_13 $$ if (srcFileStatus.getPermission().getStickyBit() != targetFileStatus.getPermission().getStickyBit()) -->Line_14 $$ targetFS.setPermission(path, srcFileStatus.getPermission())[ CD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_8 $$ List<AclEntry> srcAcl = srcFileStatus.getAclEntries()[ FD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_7 $$ if (attributes.contains(FileAttribute.ACL)) [ FD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_38 $$ if (attributes.contains(FileAttribute.GROUP) && !group.equals(srcFileStatus.getGroup())) [ CD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_46 $$ if (chown) [ CD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_20 $$ if (preserveXAttrs || preserveRawXattrs) [ FD ]
Line_7 $$ if (attributes.contains(FileAttribute.ACL)) -->Line_16 $$ if (attributes.contains(FileAttribute.PERMISSION) && !srcFileStatus.getPermission().equals(targetFileStatus.getPermission())) [ CD ]
Line_27 $$ Entry<String, byte[]> entry = iter.next()-->Line_30 $$ targetFS.setXAttr(path, entry.getKey(), entry.getValue())[ FD ]
Line_27 $$ Entry<String, byte[]> entry = iter.next()-->Line_28 $$ final String xattrName = entry.getKey()[ FD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_42 $$ if (attributes.contains(FileAttribute.USER) && !user.equals(srcFileStatus.getOwner())) [ FD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_39 $$ group = srcFileStatus.getGroup()[ FD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_16 $$ if (attributes.contains(FileAttribute.PERMISSION) && !srcFileStatus.getPermission().equals(targetFileStatus.getPermission())) [ FD ]
Line_10 $$ if (!srcAcl.equals(targetAcl)) -->Line_11 $$ targetFS.setAcl(path, srcAcl)[ CD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_19 $$ final boolean preserveXAttrs = attributes.contains(FileAttribute.XATTR)[ FD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_20 $$ if (preserveXAttrs || preserveRawXattrs) [ CD ]
Line_40 $$ chown = true-->Line_44 $$ chown = true[ FD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_6 $$ boolean chown = false[ CD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_30 $$ targetFS.setXAttr(path, entry.getKey(), entry.getValue())[ FD ]
Line_3 $$ FileStatus targetFileStatus = targetFS.getFileStatus(path)-->Line_35 $$ if (attributes.contains(FileAttribute.REPLICATION) && !targetFileStatus.isDirectory() && srcFileStatus.getReplication() != targetFileStatus.getReplication()) [ FD ]
Line_16 $$ if (attributes.contains(FileAttribute.PERMISSION) && !srcFileStatus.getPermission().equals(targetFileStatus.getPermission())) -->Line_17 $$ targetFS.setPermission(path, srcFileStatus.getPermission())[ CD ]
Line_20 $$ if (preserveXAttrs || preserveRawXattrs) -->Line_22 $$ Map<String, byte[]> srcXAttrs = srcFileStatus.getXAttrs()[ CD ]
Line_24 $$ if (srcXAttrs != null && !srcXAttrs.equals(targetXAttrs)) -->Line_25 $$ Iterator<Entry<String, byte[]>> iter = srcXAttrs.entrySet().iterator()[ CD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_3 $$ FileStatus targetFileStatus = targetFS.getFileStatus(path)[ CD ]
Line_24 $$ if (srcXAttrs != null && !srcXAttrs.equals(targetXAttrs)) -->Line_26 $$ while (iter.hasNext()) [ CD ]
Line_3 $$ FileStatus targetFileStatus = targetFS.getFileStatus(path)-->Line_4 $$ String group = targetFileStatus.getGroup()[ FD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_4 $$ String group = targetFileStatus.getGroup()[ CD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_19 $$ final boolean preserveXAttrs = attributes.contains(FileAttribute.XATTR)[ CD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_35 $$ if (attributes.contains(FileAttribute.REPLICATION) && !targetFileStatus.isDirectory() && srcFileStatus.getReplication() != targetFileStatus.getReplication()) [ CD ]
Line_7 $$ if (attributes.contains(FileAttribute.ACL)) -->Line_9 $$ List<AclEntry> targetAcl = getAcl(targetFS, targetFileStatus)[ CD ]
Line_3 $$ FileStatus targetFileStatus = targetFS.getFileStatus(path)-->Line_16 $$ if (attributes.contains(FileAttribute.PERMISSION) && !srcFileStatus.getPermission().equals(targetFileStatus.getPermission())) [ FD ]
Line_8 $$ List<AclEntry> srcAcl = srcFileStatus.getAclEntries()-->Line_11 $$ targetFS.setAcl(path, srcAcl)[ FD ]
Line_29 $$ if (xattrName.startsWith(rawNS) || preserveXAttrs) -->Line_30 $$ targetFS.setXAttr(path, entry.getKey(), entry.getValue())[ CD ]
Line_26 $$ while (iter.hasNext()) -->Line_27 $$ Entry<String, byte[]> entry = iter.next()[ CD ]
Line_4 $$ String group = targetFileStatus.getGroup()-->Line_39 $$ group = srcFileStatus.getGroup()[ FD ]
Line_5 $$ String user = targetFileStatus.getOwner()-->Line_47 $$ targetFS.setOwner(path, user, group)[ FD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_14 $$ targetFS.setPermission(path, srcFileStatus.getPermission())[ FD ]
Line_25 $$ Iterator<Entry<String, byte[]>> iter = srcXAttrs.entrySet().iterator()-->Line_27 $$ Entry<String, byte[]> entry = iter.next()[ FD ]
Line_4 $$ String group = targetFileStatus.getGroup()-->Line_38 $$ if (attributes.contains(FileAttribute.GROUP) && !group.equals(srcFileStatus.getGroup())) [ FD ]
Line_6 $$ boolean chown = false-->Line_40 $$ chown = true[ FD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_23 $$ Map<String, byte[]> targetXAttrs = getXAttrs(targetFS, path)[ FD ]
Line_3 $$ FileStatus targetFileStatus = targetFS.getFileStatus(path)-->Line_13 $$ if (srcFileStatus.getPermission().getStickyBit() != targetFileStatus.getPermission().getStickyBit()) [ FD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_47 $$ targetFS.setOwner(path, user, group)[ FD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_17 $$ targetFS.setPermission(path, srcFileStatus.getPermission())[ FD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_42 $$ if (attributes.contains(FileAttribute.USER) && !user.equals(srcFileStatus.getOwner())) [ CD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_36 $$ targetFS.setReplication(path, srcFileStatus.getReplication())[ FD ]
Line_22 $$ Map<String, byte[]> srcXAttrs = srcFileStatus.getXAttrs()-->Line_25 $$ Iterator<Entry<String, byte[]>> iter = srcXAttrs.entrySet().iterator()[ FD ]
Line_22 $$ Map<String, byte[]> srcXAttrs = srcFileStatus.getXAttrs()-->Line_24 $$ if (srcXAttrs != null && !srcXAttrs.equals(targetXAttrs)) [ FD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_7 $$ if (attributes.contains(FileAttribute.ACL)) [ CD ]
Line_35 $$ if (attributes.contains(FileAttribute.REPLICATION) && !targetFileStatus.isDirectory() && srcFileStatus.getReplication() != targetFileStatus.getReplication()) -->Line_36 $$ targetFS.setReplication(path, srcFileStatus.getReplication())[ CD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_11 $$ targetFS.setAcl(path, srcAcl)[ FD ]
Line_9 $$ List<AclEntry> targetAcl = getAcl(targetFS, targetFileStatus)-->Line_10 $$ if (!srcAcl.equals(targetAcl)) [ FD ]
Line_23 $$ Map<String, byte[]> targetXAttrs = getXAttrs(targetFS, path)-->Line_24 $$ if (srcXAttrs != null && !srcXAttrs.equals(targetXAttrs)) [ FD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_13 $$ if (srcFileStatus.getPermission().getStickyBit() != targetFileStatus.getPermission().getStickyBit()) [ FD ]
Line_19 $$ final boolean preserveXAttrs = attributes.contains(FileAttribute.XATTR)-->Line_29 $$ if (xattrName.startsWith(rawNS) || preserveXAttrs) [ FD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_35 $$ if (attributes.contains(FileAttribute.REPLICATION) && !targetFileStatus.isDirectory() && srcFileStatus.getReplication() != targetFileStatus.getReplication()) [ FD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_3 $$ FileStatus targetFileStatus = targetFS.getFileStatus(path)[ FD ]
Line_26 $$ while (iter.hasNext()) -->Line_28 $$ final String xattrName = entry.getKey()[ CD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_43 $$ user = srcFileStatus.getOwner()[ FD ]
Line_2 $$ public static void preserve(FileSystem targetFS, Path path, CopyListingFileStatus srcFileStatus, EnumSet<FileAttribute> attributes, boolean preserveRawXattrs) throws IOException -->Line_22 $$ Map<String, byte[]> srcXAttrs = srcFileStatus.getXAttrs()[ FD ]
