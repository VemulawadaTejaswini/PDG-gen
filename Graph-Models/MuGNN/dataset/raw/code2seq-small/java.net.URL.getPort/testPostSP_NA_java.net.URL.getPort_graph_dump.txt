Line_12 $$ final UsernamePasswordCredentials credentials = new UsernamePasswordCredentials(PicketLinkTestBase.ANIL, PicketLinkTestBase.ANIL)-->Line_13 $$ httpClient.getCredentialsProvider().setCredentials(new AuthScope(null, idpUrl.getPort()), credentials)[ FD ]
Line_9 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_19 $$ httpClient.getConnectionManager().shutdown()[ FD ]
Line_16 $$ response = PicketLinkTestBase.postSAML2Assertions(sp1Url, idpUrl, httpClient)-->Line_17 $$ assertTrue("SP1 index page was not reached", response.contains("Welcome to SP1"))[ FD ]
Line_9 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_13 $$ httpClient.getCredentialsProvider().setCredentials(new AuthScope(null, idpUrl.getPort()), credentials)[ FD ]
Line_9 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_14 $$ String response = PicketLinkTestBase.makeCall(idpUrl, httpClient, 200)[ FD ]
Line_14 $$ String response = PicketLinkTestBase.makeCall(idpUrl, httpClient, 200)-->Line_16 $$ response = PicketLinkTestBase.postSAML2Assertions(sp1Url, idpUrl, httpClient)[ FD ]
Line_9 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_10 $$ httpClient.setRedirectStrategy(Utils.REDIRECT_STRATEGY)[ FD ]
Line_14 $$ String response = PicketLinkTestBase.makeCall(idpUrl, httpClient, 200)-->Line_15 $$ assertTrue("IdP index page was not reached", response.contains("Welcome to IdP"))[ FD ]
Line_14 $$ String response = PicketLinkTestBase.makeCall(idpUrl, httpClient, 200)-->Line_17 $$ assertTrue("SP1 index page was not reached", response.contains("Welcome to SP1"))[ FD ]
Line_9 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_16 $$ response = PicketLinkTestBase.postSAML2Assertions(sp1Url, idpUrl, httpClient)[ FD ]
