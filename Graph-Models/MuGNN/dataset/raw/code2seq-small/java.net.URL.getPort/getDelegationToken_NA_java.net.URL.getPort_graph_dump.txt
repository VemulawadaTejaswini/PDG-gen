Line_2 $$ public Token<AbstractDelegationTokenIdentifier> getDelegationToken(URL url, AuthenticatedURL.Token token, String renewer) throws IOException, AuthenticationException -->Line_7 $$ dToken.decodeFromUrlString(tokenStr)[ CD ]
Line_2 $$ public Token<AbstractDelegationTokenIdentifier> getDelegationToken(URL url, AuthenticatedURL.Token token, String renewer) throws IOException, AuthenticationException -->Line_6 $$ Token<AbstractDelegationTokenIdentifier> dToken = new Token<AbstractDelegationTokenIdentifier>()[ CD ]
Line_2 $$ public Token<AbstractDelegationTokenIdentifier> getDelegationToken(URL url, AuthenticatedURL.Token token, String renewer) throws IOException, AuthenticationException -->Line_10 $$ return dToken[ CD ]
Line_2 $$ public Token<AbstractDelegationTokenIdentifier> getDelegationToken(URL url, AuthenticatedURL.Token token, String renewer) throws IOException, AuthenticationException -->Line_4 $$ json = (Map) json.get(DELEGATION_TOKEN_JSON)[ CD ]
Line_2 $$ public Token<AbstractDelegationTokenIdentifier> getDelegationToken(URL url, AuthenticatedURL.Token token, String renewer) throws IOException, AuthenticationException -->Line_5 $$ String tokenStr = (String) json.get(DELEGATION_TOKEN_URL_STRING_JSON)[ CD ]
Line_2 $$ public Token<AbstractDelegationTokenIdentifier> getDelegationToken(URL url, AuthenticatedURL.Token token, String renewer) throws IOException, AuthenticationException -->Line_8 $$ InetSocketAddress service = new InetSocketAddress(url.getHost(), url.getPort())[ CD ]
Line_2 $$ public Token<AbstractDelegationTokenIdentifier> getDelegationToken(URL url, AuthenticatedURL.Token token, String renewer) throws IOException, AuthenticationException -->Line_3 $$ Map json = doDelegationTokenOperation(url, token, DelegationTokenOperation.GETDELEGATIONTOKEN, renewer, null, true)[ CD ]
Line_2 $$ public Token<AbstractDelegationTokenIdentifier> getDelegationToken(URL url, AuthenticatedURL.Token token, String renewer) throws IOException, AuthenticationException -->Line_3 $$ Map json = doDelegationTokenOperation(url, token, DelegationTokenOperation.GETDELEGATIONTOKEN, renewer, null, true)[ FD ]
Line_4 $$ json = (Map) json.get(DELEGATION_TOKEN_JSON)-->Line_5 $$ String tokenStr = (String) json.get(DELEGATION_TOKEN_URL_STRING_JSON)[ FD ]
Line_6 $$ Token<AbstractDelegationTokenIdentifier> dToken = new Token<AbstractDelegationTokenIdentifier>()-->Line_9 $$ SecurityUtil.setTokenService(dToken, service)[ FD ]
Line_6 $$ Token<AbstractDelegationTokenIdentifier> dToken = new Token<AbstractDelegationTokenIdentifier>()-->Line_7 $$ dToken.decodeFromUrlString(tokenStr)[ FD ]
Line_5 $$ String tokenStr = (String) json.get(DELEGATION_TOKEN_URL_STRING_JSON)-->Line_7 $$ dToken.decodeFromUrlString(tokenStr)[ FD ]
Line_3 $$ Map json = doDelegationTokenOperation(url, token, DelegationTokenOperation.GETDELEGATIONTOKEN, renewer, null, true)-->Line_4 $$ json = (Map) json.get(DELEGATION_TOKEN_JSON)[ FD ]
Line_2 $$ public Token<AbstractDelegationTokenIdentifier> getDelegationToken(URL url, AuthenticatedURL.Token token, String renewer) throws IOException, AuthenticationException -->Line_9 $$ SecurityUtil.setTokenService(dToken, service)[ CD ]
Line_2 $$ public Token<AbstractDelegationTokenIdentifier> getDelegationToken(URL url, AuthenticatedURL.Token token, String renewer) throws IOException, AuthenticationException -->Line_8 $$ InetSocketAddress service = new InetSocketAddress(url.getHost(), url.getPort())[ FD ]
Line_3 $$ Map json = doDelegationTokenOperation(url, token, DelegationTokenOperation.GETDELEGATIONTOKEN, renewer, null, true)-->Line_5 $$ String tokenStr = (String) json.get(DELEGATION_TOKEN_URL_STRING_JSON)[ FD ]
Line_8 $$ InetSocketAddress service = new InetSocketAddress(url.getHost(), url.getPort())-->Line_9 $$ SecurityUtil.setTokenService(dToken, service)[ FD ]
