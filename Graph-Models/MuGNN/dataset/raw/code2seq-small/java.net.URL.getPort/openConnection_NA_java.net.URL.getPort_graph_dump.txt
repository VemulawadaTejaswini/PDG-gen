Line_24 $$ Text service = SecurityUtil.buildTokenService(serviceAddr)-->Line_25 $$ org.apache.hadoop.security.token.Token<? extends TokenIdentifier> dt = creds.getToken(service)[ FD ]
Line_22 $$ if (!creds.getAllTokens().isEmpty()) -->Line_23 $$ InetSocketAddress serviceAddr = new InetSocketAddress(url.getHost(), url.getPort())[ CD ]
Line_22 $$ if (!creds.getAllTokens().isEmpty()) -->Line_26 $$ if (dt != null) [ CD ]
Line_19 $$ Map<String, String> extraParams = new HashMap<String, String>()-->Line_27 $$ extraParams.put(KerberosDelegationTokenAuthenticator.DELEGATION_PARAM, dt.encodeToUrlString())[ FD ]
Line_25 $$ org.apache.hadoop.security.token.Token<? extends TokenIdentifier> dt = creds.getToken(service)-->Line_27 $$ extraParams.put(KerberosDelegationTokenAuthenticator.DELEGATION_PARAM, dt.encodeToUrlString())[ FD ]
Line_19 $$ Map<String, String> extraParams = new HashMap<String, String>()-->Line_32 $$ extraParams.put(DO_AS, URLEncoder.encode(doAs, "UTF-8"))[ FD ]
Line_25 $$ org.apache.hadoop.security.token.Token<? extends TokenIdentifier> dt = creds.getToken(service)-->Line_26 $$ if (dt != null) [ FD ]
Line_34 $$ url = augmentURL(url, extraParams)-->Line_35 $$ return super.openConnection(url, token)[ FD ]
Line_26 $$ if (dt != null) -->Line_27 $$ extraParams.put(KerberosDelegationTokenAuthenticator.DELEGATION_PARAM, dt.encodeToUrlString())[ CD ]
Line_19 $$ Map<String, String> extraParams = new HashMap<String, String>()-->Line_34 $$ url = augmentURL(url, extraParams)[ FD ]
Line_22 $$ if (!creds.getAllTokens().isEmpty()) -->Line_25 $$ org.apache.hadoop.security.token.Token<? extends TokenIdentifier> dt = creds.getToken(service)[ CD ]
Line_22 $$ if (!creds.getAllTokens().isEmpty()) -->Line_24 $$ Text service = SecurityUtil.buildTokenService(serviceAddr)[ CD ]
Line_23 $$ InetSocketAddress serviceAddr = new InetSocketAddress(url.getHost(), url.getPort())-->Line_24 $$ Text service = SecurityUtil.buildTokenService(serviceAddr)[ FD ]
