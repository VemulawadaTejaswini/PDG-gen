Line_9 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_13 $$ httpClient.getCredentialsProvider().setCredentials(new AuthScope(null, idpUrl.getPort()), credentials)[ FD ]
Line_21 $$ URL logoutUrl = new URL(sp1Url.toExternalForm() + LOGOUT_PARAMETER)-->Line_22 $$ response = PicketLinkTestBase.makeCall(logoutUrl, httpClient, 200)[ FD ]
Line_14 $$ String response = PicketLinkTestBase.makeCall(sp1Url, httpClient, 200)-->Line_15 $$ assertTrue("SP1 index page was not reached", response.contains("Welcome to SP1"))[ FD ]
Line_9 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_10 $$ httpClient.setRedirectStrategy(Utils.REDIRECT_STRATEGY)[ FD ]
Line_9 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_22 $$ response = PicketLinkTestBase.makeCall(logoutUrl, httpClient, 200)[ FD ]
Line_14 $$ String response = PicketLinkTestBase.makeCall(sp1Url, httpClient, 200)-->Line_23 $$ assertTrue("Logout page was not reached", response.contains("Logout"))[ FD ]
Line_19 $$ response = PicketLinkTestBase.makeCall(sp2Url, httpClient, 200)-->Line_22 $$ response = PicketLinkTestBase.makeCall(logoutUrl, httpClient, 200)[ FD ]
Line_9 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_24 $$ PicketLinkTestBase.makeCall(sp1Url, httpClient, 403)[ FD ]
Line_9 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_25 $$ PicketLinkTestBase.makeCall(sp2Url, httpClient, 403)[ FD ]
Line_22 $$ response = PicketLinkTestBase.makeCall(logoutUrl, httpClient, 200)-->Line_23 $$ assertTrue("Logout page was not reached", response.contains("Logout"))[ FD ]
Line_9 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_14 $$ String response = PicketLinkTestBase.makeCall(sp1Url, httpClient, 200)[ FD ]
Line_14 $$ String response = PicketLinkTestBase.makeCall(sp1Url, httpClient, 200)-->Line_20 $$ assertTrue("SP2 index page was not reached", response.contains("Welcome to SP2"))[ FD ]
Line_19 $$ response = PicketLinkTestBase.makeCall(sp2Url, httpClient, 200)-->Line_23 $$ assertTrue("Logout page was not reached", response.contains("Logout"))[ FD ]
Line_12 $$ UsernamePasswordCredentials credentials = new UsernamePasswordCredentials(PicketLinkTestBase.ANIL, PicketLinkTestBase.ANIL)-->Line_18 $$ httpClient.getCredentialsProvider().setCredentials(new AuthScope(null, idpUrl.getPort()), credentials)[ FD ]
Line_14 $$ String response = PicketLinkTestBase.makeCall(sp1Url, httpClient, 200)-->Line_19 $$ response = PicketLinkTestBase.makeCall(sp2Url, httpClient, 200)[ FD ]
Line_12 $$ UsernamePasswordCredentials credentials = new UsernamePasswordCredentials(PicketLinkTestBase.ANIL, PicketLinkTestBase.ANIL)-->Line_13 $$ httpClient.getCredentialsProvider().setCredentials(new AuthScope(null, idpUrl.getPort()), credentials)[ FD ]
Line_9 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_27 $$ httpClient.getConnectionManager().shutdown()[ FD ]
Line_9 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_18 $$ httpClient.getCredentialsProvider().setCredentials(new AuthScope(null, idpUrl.getPort()), credentials)[ FD ]
Line_14 $$ String response = PicketLinkTestBase.makeCall(sp1Url, httpClient, 200)-->Line_22 $$ response = PicketLinkTestBase.makeCall(logoutUrl, httpClient, 200)[ FD ]
Line_19 $$ response = PicketLinkTestBase.makeCall(sp2Url, httpClient, 200)-->Line_20 $$ assertTrue("SP2 index page was not reached", response.contains("Welcome to SP2"))[ FD ]
Line_9 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_19 $$ response = PicketLinkTestBase.makeCall(sp2Url, httpClient, 200)[ FD ]
