Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_8 $$ httpClient.getCredentialsProvider().setCredentials(new AuthScope(null, idpUrl.getPort()), credentials)[ FD ]
Line_2 $$ public void testUnauthorizedAccess() throws Exception -->Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()[ CD ]
Line_7 $$ final UsernamePasswordCredentials credentials = new UsernamePasswordCredentials(PicketLinkTestBase.MARCUS, PicketLinkTestBase.MARCUS)-->Line_8 $$ httpClient.getCredentialsProvider().setCredentials(new AuthScope(null, idpUrl.getPort()), credentials)[ FD ]
Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_4 $$ httpClient.setRedirectStrategy(Utils.REDIRECT_STRATEGY)[ FD ]
Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_6 $$ PicketLinkTestBase.makeCall(sp2Url, httpClient, 401)[ FD ]
Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_11 $$ httpClient.getConnectionManager().shutdown()[ FD ]
Line_2 $$ public void testUnauthorizedAccess() throws Exception -->Line_4 $$ httpClient.setRedirectStrategy(Utils.REDIRECT_STRATEGY)[ CD ]
Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_9 $$ PicketLinkTestBase.makeCall(sp2Url, httpClient, 403)[ FD ]
