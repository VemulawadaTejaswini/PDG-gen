Line_12 $$ if (shouldAddTopElement()) -->Line_13 $$ myModel.addElement(new TopLevelNode(myProject, parentElement.getValue()))[ CD ]
Line_2 $$ private void buildList(final AbstractTreeNode parentElement) -->Line_11 $$ myModel.removeAllElements()[ CD ]
Line_2 $$ private void buildList(final AbstractTreeNode parentElement) -->Line_10 $$ final Object[] children = getChildren(parentElement)[ CD ]
Line_2 $$ private void buildList(final AbstractTreeNode parentElement) -->Line_12 $$ if (shouldAddTopElement()) [ CD ]
Line_27 $$ alarm.addRequest(new Runnable() -->Line_29 $$ myList.setCursor(Cursor.getDefaultCursor())[ CD ]
Line_2 $$ private void buildList(final AbstractTreeNode parentElement) -->Line_13 $$ myModel.addElement(new TopLevelNode(myProject, parentElement.getValue()))[ FD ]
Line_19 $$ if (myComparator != null) -->Line_20 $$ Arrays.sort(children, myComparator)[ CD ]
Line_2 $$ private void buildList(final AbstractTreeNode parentElement) -->Line_25 $$ final int n = alarm.cancelAllRequests()[ CD ]
Line_4 $$ final Alarm alarm = new Alarm(Alarm.ThreadToUse.SHARED_THREAD)-->Line_5 $$ alarm.addRequest(new Runnable() [ FD ]
Line_2 $$ private void buildList(final AbstractTreeNode parentElement) -->Line_5 $$ alarm.addRequest(new Runnable() [ CD ]
Line_5 $$ alarm.addRequest(new Runnable() -->Line_7 $$ myList.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR))[ CD ]
Line_26 $$ if (n == 0) -->Line_27 $$ alarm.addRequest(new Runnable() [ CD ]
Line_4 $$ final Alarm alarm = new Alarm(Alarm.ThreadToUse.SHARED_THREAD)-->Line_25 $$ final int n = alarm.cancelAllRequests()[ FD ]
Line_2 $$ private void buildList(final AbstractTreeNode parentElement) -->Line_4 $$ final Alarm alarm = new Alarm(Alarm.ThreadToUse.SHARED_THREAD)[ CD ]
Line_2 $$ private void buildList(final AbstractTreeNode parentElement) -->Line_10 $$ final Object[] children = getChildren(parentElement)[ FD ]
Line_2 $$ private void buildList(final AbstractTreeNode parentElement) -->Line_19 $$ if (myComparator != null) [ CD ]
Line_2 $$ private void buildList(final AbstractTreeNode parentElement) -->Line_26 $$ if (n == 0) [ CD ]
Line_4 $$ final Alarm alarm = new Alarm(Alarm.ThreadToUse.SHARED_THREAD)-->Line_27 $$ alarm.addRequest(new Runnable() [ FD ]
