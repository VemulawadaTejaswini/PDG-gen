Line_2 $$ BigDecimal stringToBigDecimal(String str) -->Line_4 $$ BigDecimal curPlace = ONE_PLACE[ CD ]
Line_5 $$ int len = Math.min(str.length(), MAX_CHARS)-->Line_6 $$ for (int i = 0; i < len; i++) [ FD ]
Line_2 $$ BigDecimal stringToBigDecimal(String str) -->Line_7 $$ int codePoint = str.codePointAt(i)[ FD ]
Line_6 $$ for (int i = 0; i < len; i++) -->Line_9 $$ curPlace = curPlace.multiply(ONE_PLACE)[ CD ]
Line_2 $$ BigDecimal stringToBigDecimal(String str) -->Line_5 $$ int len = Math.min(str.length(), MAX_CHARS)[ CD ]
Line_4 $$ BigDecimal curPlace = ONE_PLACE-->Line_9 $$ curPlace = curPlace.multiply(ONE_PLACE)[ FD ]
Line_6 $$ for (int i = 0; i < len; i++) -->Line_8 $$ result = result.add(tryDivide(new BigDecimal(codePoint), curPlace))[ CD ]
Line_3 $$ BigDecimal result = BigDecimal.ZERO-->Line_8 $$ result = result.add(tryDivide(new BigDecimal(codePoint), curPlace))[ FD ]
Line_2 $$ BigDecimal stringToBigDecimal(String str) -->Line_11 $$ return result[ CD ]
Line_2 $$ BigDecimal stringToBigDecimal(String str) -->Line_6 $$ for (int i = 0; i < len; i++) [ CD ]
Line_4 $$ BigDecimal curPlace = ONE_PLACE-->Line_8 $$ result = result.add(tryDivide(new BigDecimal(codePoint), curPlace))[ FD ]
Line_6 $$ for (int i = 0; i < len; i++) -->Line_7 $$ int codePoint = str.codePointAt(i)[ FD ]
Line_2 $$ BigDecimal stringToBigDecimal(String str) -->Line_3 $$ BigDecimal result = BigDecimal.ZERO[ CD ]
Line_2 $$ BigDecimal stringToBigDecimal(String str) -->Line_5 $$ int len = Math.min(str.length(), MAX_CHARS)[ FD ]
Line_9 $$ curPlace = curPlace.multiply(ONE_PLACE)-->Line_8 $$ result = result.add(tryDivide(new BigDecimal(codePoint), curPlace))[ FD ]
Line_6 $$ for (int i = 0; i < len; i++) -->Line_7 $$ int codePoint = str.codePointAt(i)[ CD ]
