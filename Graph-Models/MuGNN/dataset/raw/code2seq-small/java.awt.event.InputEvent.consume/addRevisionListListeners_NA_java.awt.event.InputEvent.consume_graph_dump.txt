Line_26 $$ for (Object o : selected) -->Line_27 $$ if (o instanceof SvnChangeList) [ FD ]
Line_23 $$ if (selected.isEmpty()) -->Line_24 $$ return[ CD ]
Line_8 $$ final Rectangle baseRect = myRevisionsList.getCellRect(idx, 0, false)-->Line_9 $$ baseRect.setSize(checkboxWidth, baseRect.height)[ FD ]
Line_11 $$ final SvnChangeList changeList = (SvnChangeList) myRevisionsList.getModel().getValueAt(idx, 0)-->Line_12 $$ toggleInclusion(changeList.getNumber())[ FD ]
Line_19 $$ myRevisionsList.addKeyListener(new KeyAdapter() -->Line_21 $$ if (KeyEvent.VK_SPACE == e.getKeyCode()) [ CD ]
Line_21 $$ if (KeyEvent.VK_SPACE == e.getKeyCode()) -->Line_23 $$ if (selected.isEmpty()) [ CD ]
Line_21 $$ if (KeyEvent.VK_SPACE == e.getKeyCode()) -->Line_31 $$ myRevisionsList.repaint()[ CD ]
Line_6 $$ final int idx = myRevisionsList.rowAtPoint(e.getPoint())-->Line_7 $$ if (idx >= 0) [ FD ]
Line_4 $$ new ClickListener() -->Line_10 $$ if (baseRect.contains(e.getPoint())) [ FD ]
Line_2 $$ private void addRevisionListListeners() -->Line_4 $$ new ClickListener() [ CD ]
Line_7 $$ if (idx >= 0) -->Line_9 $$ baseRect.setSize(checkboxWidth, baseRect.height)[ CD ]
Line_4 $$ new ClickListener() -->Line_6 $$ final int idx = myRevisionsList.rowAtPoint(e.getPoint())[ FD ]
Line_10 $$ if (baseRect.contains(e.getPoint())) -->Line_12 $$ toggleInclusion(changeList.getNumber())[ CD ]
Line_22 $$ final List selected = myRevisionsList.getSelectedObjects()-->Line_23 $$ if (selected.isEmpty()) [ FD ]
Line_21 $$ if (KeyEvent.VK_SPACE == e.getKeyCode()) -->Line_32 $$ e.consume()[ CD ]
Line_3 $$ final int checkboxWidth = new JCheckBox().getPreferredSize().width-->Line_9 $$ baseRect.setSize(checkboxWidth, baseRect.height)[ FD ]
Line_10 $$ if (baseRect.contains(e.getPoint())) -->Line_13 $$ myRevisionsList.repaint(baseRect)[ CD ]
Line_10 $$ if (baseRect.contains(e.getPoint())) -->Line_11 $$ final SvnChangeList changeList = (SvnChangeList) myRevisionsList.getModel().getValueAt(idx, 0)[ CD ]
Line_27 $$ if (o instanceof SvnChangeList) -->Line_28 $$ toggleInclusion(((SvnChangeList) o).getNumber())[ CD ]
Line_8 $$ final Rectangle baseRect = myRevisionsList.getCellRect(idx, 0, false)-->Line_10 $$ if (baseRect.contains(e.getPoint())) [ FD ]
Line_7 $$ if (idx >= 0) -->Line_10 $$ if (baseRect.contains(e.getPoint())) [ CD ]
Line_2 $$ private void addRevisionListListeners() -->Line_19 $$ myRevisionsList.addKeyListener(new KeyAdapter() [ CD ]
Line_4 $$ new ClickListener() -->Line_21 $$ if (KeyEvent.VK_SPACE == e.getKeyCode()) [ FD ]
Line_21 $$ if (KeyEvent.VK_SPACE == e.getKeyCode()) -->Line_22 $$ final List selected = myRevisionsList.getSelectedObjects()[ CD ]
Line_4 $$ new ClickListener() -->Line_7 $$ if (idx >= 0) [ CD ]
Line_8 $$ final Rectangle baseRect = myRevisionsList.getCellRect(idx, 0, false)-->Line_13 $$ myRevisionsList.repaint(baseRect)[ FD ]
Line_19 $$ myRevisionsList.addKeyListener(new KeyAdapter() -->Line_32 $$ e.consume()[ FD ]
Line_4 $$ new ClickListener() -->Line_32 $$ e.consume()[ FD ]
Line_6 $$ final int idx = myRevisionsList.rowAtPoint(e.getPoint())-->Line_11 $$ final SvnChangeList changeList = (SvnChangeList) myRevisionsList.getModel().getValueAt(idx, 0)[ FD ]
Line_2 $$ private void addRevisionListListeners() -->Line_3 $$ final int checkboxWidth = new JCheckBox().getPreferredSize().width[ CD ]
Line_7 $$ if (idx >= 0) -->Line_8 $$ final Rectangle baseRect = myRevisionsList.getCellRect(idx, 0, false)[ CD ]
Line_19 $$ myRevisionsList.addKeyListener(new KeyAdapter() -->Line_21 $$ if (KeyEvent.VK_SPACE == e.getKeyCode()) [ FD ]
Line_4 $$ new ClickListener() -->Line_16 $$ return true[ CD ]
Line_6 $$ final int idx = myRevisionsList.rowAtPoint(e.getPoint())-->Line_8 $$ final Rectangle baseRect = myRevisionsList.getCellRect(idx, 0, false)[ FD ]
Line_4 $$ new ClickListener() -->Line_6 $$ final int idx = myRevisionsList.rowAtPoint(e.getPoint())[ CD ]
