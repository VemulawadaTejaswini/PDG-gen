Line_13 $$ JLayeredPane layeredPane = new JBLayeredPane() -->Line_15 $$ final Component[] components = getComponents()[ CD ]
Line_2 $$ private void initComponent() -->Line_10 $$ myEditorComponent.setTransferHandler(new MyTransferHandler())[ CD ]
Line_2 $$ private void initComponent() -->Line_12 $$ if (mayShowToolbar()) [ CD ]
Line_13 $$ JLayeredPane layeredPane = new JBLayeredPane() -->Line_31 $$ layeredPane.add(myScrollPane, JLayeredPane.DEFAULT_LAYER)[ FD ]
Line_17 $$ for (Component c : components) -->Line_19 $$ c.setBounds(0, 0, r.width, r.height)[ FD ]
Line_37 $$ myEditorComponent.addKeyListener(new KeyListener() -->Line_39 $$ if (e.getKeyCode() >= KeyEvent.VK_A && e.getKeyCode() <= KeyEvent.VK_Z) [ CD ]
Line_37 $$ myEditorComponent.addKeyListener(new KeyListener() -->Line_39 $$ if (e.getKeyCode() >= KeyEvent.VK_A && e.getKeyCode() <= KeyEvent.VK_Z) [ FD ]
Line_2 $$ private void initComponent() -->Line_6 $$ myScrollPane.setViewportView(myEditorComponent)[ CD ]
Line_37 $$ myEditorComponent.addKeyListener(new KeyListener() -->Line_106 $$ LOG.error(e)[ FD ]
Line_89 $$ if (dropTarget != null) -->Line_90 $$ dropTarget.addDropTargetListener(new DropTargetAdapter() [ CD ]
Line_108 $$ myPanel.addComponentListener(new ComponentAdapter() -->Line_111 $$ myMarkupModel.repaint(-1, -1)[ CD ]
Line_66 $$ for (Caret caret : myCaretModel.getAllCarets()) -->Line_67 $$ int caretLine = caret.getLogicalPosition().line[ FD ]
Line_2 $$ private void initComponent() -->Line_7 $$ myScrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS)[ CD ]
Line_37 $$ myEditorComponent.addKeyListener(new KeyListener() -->Line_50 $$ event.consume()[ FD ]
Line_2 $$ private void initComponent() -->Line_11 $$ myEditorComponent.setAutoscrolls(true)[ CD ]
Line_2 $$ private void initComponent() -->Line_86 $$ Disposer.register(getDisposable(), connector)[ CD ]
Line_2 $$ private void initComponent() -->Line_37 $$ myEditorComponent.addKeyListener(new KeyListener() [ CD ]
Line_46 $$ if (event.isConsumed()) -->Line_47 $$ return[ CD ]
Line_13 $$ JLayeredPane layeredPane = new JBLayeredPane() -->Line_16 $$ final Rectangle r = getBounds()[ CD ]
Line_37 $$ myEditorComponent.addKeyListener(new KeyListener() -->Line_94 $$ Point location = e.getLocation()[ FD ]
Line_67 $$ int caretLine = caret.getLogicalPosition().line-->Line_68 $$ repaintLines(caretLine, caretLine)[ FD ]
Line_17 $$ for (Component c : components) -->Line_18 $$ if (c instanceof JScrollPane) [ FD ]
Line_18 $$ if (c instanceof JScrollPane) -->Line_19 $$ c.setBounds(0, 0, r.width, r.height)[ CD ]
Line_18 $$ if (c instanceof JScrollPane) -->Line_22 $$ final MyScrollBar scrollBar = getVerticalScrollBar()[ CD ]
Line_17 $$ for (Component c : components) -->Line_23 $$ c.setBounds(r.width - d.width - scrollBar.getWidth() - 30, 20, d.width, d.height)[ FD ]
Line_90 $$ dropTarget.addDropTargetListener(new DropTargetAdapter() -->Line_95 $$ if (myUseNewRendering) [ CD ]
Line_18 $$ if (c instanceof JScrollPane) -->Line_23 $$ c.setBounds(r.width - d.width - scrollBar.getWidth() - 30, 20, d.width, d.height)[ CD ]
Line_13 $$ JLayeredPane layeredPane = new JBLayeredPane() -->Line_28 $$ return myScrollPane.getPreferredSize()[ CD ]
Line_12 $$ if (mayShowToolbar()) -->Line_31 $$ layeredPane.add(myScrollPane, JLayeredPane.DEFAULT_LAYER)[ CD ]
Line_13 $$ JLayeredPane layeredPane = new JBLayeredPane() -->Line_32 $$ myPanel.add(layeredPane)[ FD ]
Line_37 $$ myEditorComponent.addKeyListener(new KeyListener() -->Line_49 $$ if (processKeyTyped(event)) [ FD ]
Line_22 $$ final MyScrollBar scrollBar = getVerticalScrollBar()-->Line_23 $$ c.setBounds(r.width - d.width - scrollBar.getWidth() - 30, 20, d.width, d.height)[ FD ]
Line_17 $$ for (Component c : components) -->Line_21 $$ final Dimension d = c.getPreferredSize()[ FD ]
Line_12 $$ if (mayShowToolbar()) -->Line_35 $$ myPanel.add(myScrollPane)[ CD ]
Line_37 $$ myEditorComponent.addKeyListener(new KeyListener() -->Line_46 $$ if (event.isConsumed()) [ FD ]
Line_74 $$ for (Caret caret : myCaretModel.getAllCarets()) -->Line_75 $$ int caretLine = caret.getLogicalPosition().line[ FD ]
Line_90 $$ dropTarget.addDropTargetListener(new DropTargetAdapter() -->Line_101 $$ requestFocus()[ CD ]
Line_37 $$ myEditorComponent.addKeyListener(new KeyListener() -->Line_42 $$ KeyboardInternationalizationNotificationManager.showNotification()[ CD ]
Line_37 $$ myEditorComponent.addKeyListener(new KeyListener() -->Line_46 $$ if (event.isConsumed()) [ CD ]
Line_37 $$ myEditorComponent.addKeyListener(new KeyListener() -->Line_49 $$ if (processKeyTyped(event)) [ CD ]
Line_2 $$ private void initComponent() -->Line_8 $$ myScrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED)[ CD ]
Line_63 $$ myEditorComponent.addFocusListener(new FocusAdapter() -->Line_70 $$ fireFocusGained()[ CD ]
Line_66 $$ for (Caret caret : myCaretModel.getAllCarets()) -->Line_75 $$ int caretLine = caret.getLogicalPosition().line[ FD ]
Line_63 $$ myEditorComponent.addFocusListener(new FocusAdapter() -->Line_94 $$ Point location = e.getLocation()[ FD ]
Line_90 $$ dropTarget.addDropTargetListener(new DropTargetAdapter() -->Line_94 $$ Point location = e.getLocation()[ FD ]
Line_95 $$ if (myUseNewRendering) -->Line_96 $$ getCaretModel().moveToVisualPosition(getTargetPosition(location.x, location.y, true))[ CD ]
Line_2 $$ private void initComponent() -->Line_3 $$ myPanel.setLayout(new BorderLayout())[ CD ]
Line_2 $$ private void initComponent() -->Line_9 $$ myScrollPane.setRowHeaderView(myGutterComponent)[ CD ]
Line_2 $$ private void initComponent() -->Line_4 $$ myPanel.add(myHeaderPanel, BorderLayout.NORTH)[ CD ]
Line_67 $$ int caretLine = caret.getLogicalPosition().line-->Line_76 $$ repaintLines(caretLine, caretLine)[ FD ]
Line_2 $$ private void initComponent() -->Line_59 $$ myGutterComponent.addMouseListener(mouseAdapter)[ CD ]
Line_2 $$ private void initComponent() -->Line_5 $$ myGutterComponent.setOpaque(true)[ CD ]
Line_18 $$ if (c instanceof JScrollPane) -->Line_21 $$ final Dimension d = c.getPreferredSize()[ CD ]
Line_63 $$ myEditorComponent.addFocusListener(new FocusAdapter() -->Line_78 $$ fireFocusLost()[ CD ]
Line_2 $$ private void initComponent() -->Line_108 $$ myPanel.addComponentListener(new ComponentAdapter() [ CD ]
Line_108 $$ myPanel.addComponentListener(new ComponentAdapter() -->Line_110 $$ myMarkupModel.recalcEditorDimensions()[ CD ]
Line_2 $$ private void initComponent() -->Line_61 $$ myEditorComponent.addMouseMotionListener(mouseMotionListener)[ CD ]
Line_2 $$ private void initComponent() -->Line_63 $$ myEditorComponent.addFocusListener(new FocusAdapter() [ CD ]
Line_90 $$ dropTarget.addDropTargetListener(new DropTargetAdapter() -->Line_100 $$ getScrollingModel().scrollToCaret(ScrollType.RELATIVE)[ CD ]
Line_81 $$ UiNotifyConnector connector = new UiNotifyConnector(myEditorComponent, new Activatable.Adapter() -->Line_83 $$ myGutterComponent.updateSize()[ CD ]
Line_90 $$ dropTarget.addDropTargetListener(new DropTargetAdapter() -->Line_106 $$ LOG.error(e)[ FD ]
Line_63 $$ myEditorComponent.addFocusListener(new FocusAdapter() -->Line_106 $$ LOG.error(e)[ FD ]
Line_95 $$ if (myUseNewRendering) -->Line_98 $$ getCaretModel().moveToLogicalPosition(getLogicalPositionForScreenPos(location.x, location.y, true))[ CD ]
Line_12 $$ if (mayShowToolbar()) -->Line_13 $$ JLayeredPane layeredPane = new JBLayeredPane() [ CD ]
Line_63 $$ myEditorComponent.addFocusListener(new FocusAdapter() -->Line_73 $$ clearCaretThread()[ CD ]
Line_12 $$ if (mayShowToolbar()) -->Line_32 $$ myPanel.add(layeredPane)[ CD ]
Line_63 $$ myEditorComponent.addFocusListener(new FocusAdapter() -->Line_65 $$ myCaretCursor.activate()[ CD ]
Line_90 $$ dropTarget.addDropTargetListener(new DropTargetAdapter() -->Line_94 $$ Point location = e.getLocation()[ CD ]
Line_75 $$ int caretLine = caret.getLogicalPosition().line-->Line_76 $$ repaintLines(caretLine, caretLine)[ FD ]
Line_49 $$ if (processKeyTyped(event)) -->Line_50 $$ event.consume()[ CD ]
Line_2 $$ private void initComponent() -->Line_62 $$ myGutterComponent.addMouseMotionListener(mouseMotionListener)[ CD ]
Line_2 $$ private void initComponent() -->Line_58 $$ myEditorComponent.addMouseListener(mouseAdapter)[ CD ]
