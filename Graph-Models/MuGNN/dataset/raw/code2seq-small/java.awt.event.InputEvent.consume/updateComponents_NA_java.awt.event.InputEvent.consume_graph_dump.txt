Line_26 $$ myList.addMouseListener(new MouseAdapter() -->Line_30 $$ if (i != -1) [ CD ]
Line_2 $$ private void updateComponents() -->Line_25 $$ myList.setCellRenderer(myRenderer)[ CD ]
Line_4 $$ myList = new JBList(new SearchListModel()) -->Line_7 $$ final Dimension size = super.getPreferredSize()[ CD ]
Line_2 $$ private void updateComponents() -->Line_44 $$ myNonProjectCheckBox.setAlignmentX(1.0f)[ CD ]
Line_50 $$ if (editor != null) -->Line_53 $$ myAlarm.addRequest(new Runnable() [ CD ]
Line_26 $$ myList.addMouseListener(new MouseAdapter() -->Line_29 $$ final int i = myList.locationToIndex(e.getPoint())[ FD ]
Line_53 $$ myAlarm.addRequest(new Runnable() -->Line_55 $$ if (editor.hasFocus()) [ CD ]
Line_29 $$ final int i = myList.locationToIndex(e.getPoint())-->Line_30 $$ if (i != -1) [ FD ]
Line_33 $$ SwingUtilities.invokeLater(new Runnable() -->Line_36 $$ doNavigate(i)[ CD ]
Line_45 $$ myNonProjectCheckBox.addActionListener(new ActionListener() -->Line_47 $$ if (showAll.get() != myNonProjectCheckBox.isSelected()) [ CD ]
Line_29 $$ final int i = myList.locationToIndex(e.getPoint())-->Line_36 $$ doNavigate(i)[ FD ]
Line_4 $$ myList = new JBList(new SearchListModel()) -->Line_13 $$ return new Dimension(Math.max(myBalloon.getSize().width, Math.min(size.width - 2, POPUP_MAX_WIDTH)), myList.isEmpty() ? JBUI.scale(30) : size.height)[ CD ]
Line_26 $$ myList.addMouseListener(new MouseAdapter() -->Line_28 $$ e.consume()[ FD ]
Line_55 $$ if (editor.hasFocus()) -->Line_56 $$ rebuildList(pattern)[ CD ]
Line_47 $$ if (showAll.get() != myNonProjectCheckBox.isSelected()) -->Line_50 $$ if (editor != null) [ CD ]
Line_50 $$ if (editor != null) -->Line_51 $$ final String pattern = editor.getText()[ CD ]
Line_30 $$ if (i != -1) -->Line_33 $$ SwingUtilities.invokeLater(new Runnable() [ CD ]
Line_33 $$ SwingUtilities.invokeLater(new Runnable() -->Line_35 $$ myList.setSelectedIndex(i)[ CD ]
Line_26 $$ myList.addMouseListener(new MouseAdapter() -->Line_29 $$ final int i = myList.locationToIndex(e.getPoint())[ CD ]
Line_26 $$ myList.addMouseListener(new MouseAdapter() -->Line_28 $$ e.consume()[ CD ]
Line_8 $$ if (size.height == -1) -->Line_9 $$ size.height = lastKnownHeight[ CD ]
Line_29 $$ final int i = myList.locationToIndex(e.getPoint())-->Line_35 $$ myList.setSelectedIndex(i)[ FD ]
Line_2 $$ private void updateComponents() -->Line_26 $$ myList.addMouseListener(new MouseAdapter() [ CD ]
Line_30 $$ if (i != -1) -->Line_32 $$ getField().requestFocus()[ CD ]
Line_47 $$ if (showAll.get() != myNonProjectCheckBox.isSelected()) -->Line_49 $$ final JTextField editor = UIUtil.findComponentOfType(myBalloon.getContent(), JTextField.class)[ CD ]
Line_49 $$ final JTextField editor = UIUtil.findComponentOfType(myBalloon.getContent(), JTextField.class)-->Line_50 $$ if (editor != null) [ FD ]
Line_51 $$ final String pattern = editor.getText()-->Line_56 $$ rebuildList(pattern)[ FD ]
Line_49 $$ final JTextField editor = UIUtil.findComponentOfType(myBalloon.getContent(), JTextField.class)-->Line_55 $$ if (editor.hasFocus()) [ FD ]
Line_4 $$ myList = new JBList(new SearchListModel()) -->Line_8 $$ if (size.height == -1) [ CD ]
Line_2 $$ private void updateComponents() -->Line_43 $$ myNonProjectCheckBox.setOpaque(false)[ CD ]
Line_2 $$ private void updateComponents() -->Line_45 $$ myNonProjectCheckBox.addActionListener(new ActionListener() [ CD ]
Line_8 $$ if (size.height == -1) -->Line_11 $$ lastKnownHeight = size.height[ CD ]
Line_50 $$ if (editor != null) -->Line_52 $$ myAlarm.cancelAllRequests()[ CD ]
Line_49 $$ final JTextField editor = UIUtil.findComponentOfType(myBalloon.getContent(), JTextField.class)-->Line_51 $$ final String pattern = editor.getText()[ FD ]
Line_47 $$ if (showAll.get() != myNonProjectCheckBox.isSelected()) -->Line_48 $$ showAll.set(!showAll.get())[ CD ]
