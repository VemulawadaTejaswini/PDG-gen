Line_2 $$ protected JTree createOptionsTree() -->Line_5 $$ DefaultMutableTreeNode groupNode = null[ CD ]
Line_8 $$ String newGroupName = key.groupName-->Line_10 $$ groupName = newGroupName[ FD ]
Line_11 $$ groupNode = new DefaultMutableTreeNode(newGroupName)-->Line_15 $$ groupNode.add(new MyToggleTreeNode(key, key.title))[ FD ]
Line_38 $$ if (!optionsTree.isEnabled())-->Line_39 $$ return false[ CD ]
Line_2 $$ protected JTree createOptionsTree() -->Line_23 $$ UIUtil.setLineStyleAngled(optionsTree)[ CD ]
Line_2 $$ protected JTree createOptionsTree() -->Line_20 $$ new TreeSpeedSearch(optionsTree).setComparator(new SpeedSearchComparator(false))[ CD ]
Line_27 $$ if (!optionsTree.isEnabled())-->Line_28 $$ return[ CD ]
Line_2 $$ protected JTree createOptionsTree() -->Line_4 $$ String groupName = ""[ CD ]
Line_2 $$ protected JTree createOptionsTree() -->Line_18 $$ DefaultTreeModel model = new DefaultTreeModel(rootNode)[ CD ]
Line_4 $$ String groupName = ""-->Line_9 $$ if (!newGroupName.equals(groupName) || groupNode == null) [ FD ]
Line_4 $$ String groupName = ""-->Line_10 $$ groupName = newGroupName[ FD ]
Line_29 $$ if (e.getKeyCode() == KeyEvent.VK_SPACE) -->Line_30 $$ TreePath treePath = optionsTree.getLeadSelectionPath()[ CD ]
Line_9 $$ if (!newGroupName.equals(groupName) || groupNode == null) -->Line_11 $$ groupNode = new DefaultMutableTreeNode(newGroupName)[ CD ]
Line_2 $$ protected JTree createOptionsTree() -->Line_22 $$ optionsTree.setRootVisible(false)[ CD ]
Line_9 $$ if (!newGroupName.equals(groupName) || groupNode == null) -->Line_10 $$ groupName = newGroupName[ CD ]
Line_25 $$ optionsTree.addKeyListener(new KeyAdapter() -->Line_32 $$ e.consume()[ FD ]
Line_2 $$ protected JTree createOptionsTree() -->Line_6 $$ List<BooleanOptionKey> result = sortOptions(orderByGroup(myKeys))[ CD ]
Line_19 $$ final Tree optionsTree = new Tree(model)-->Line_21 $$ TreeUtil.installActions(optionsTree)[ FD ]
Line_19 $$ final Tree optionsTree = new Tree(model)-->Line_40 $$ TreePath treePath = optionsTree.getPathForLocation(e.getX(), e.getY())[ FD ]
Line_40 $$ TreePath treePath = optionsTree.getPathForLocation(e.getX(), e.getY())-->Line_41 $$ selectCheckbox(treePath)[ FD ]
Line_3 $$ DefaultMutableTreeNode rootNode = new DefaultMutableTreeNode()-->Line_12 $$ rootNode.add(groupNode)[ FD ]
Line_2 $$ protected JTree createOptionsTree() -->Line_19 $$ final Tree optionsTree = new Tree(model)[ CD ]
Line_19 $$ final Tree optionsTree = new Tree(model)-->Line_22 $$ optionsTree.setRootVisible(false)[ FD ]
Line_5 $$ DefaultMutableTreeNode groupNode = null-->Line_12 $$ rootNode.add(groupNode)[ FD ]
Line_8 $$ String newGroupName = key.groupName-->Line_9 $$ if (!newGroupName.equals(groupName) || groupNode == null) [ FD ]
Line_19 $$ final Tree optionsTree = new Tree(model)-->Line_23 $$ UIUtil.setLineStyleAngled(optionsTree)[ FD ]
Line_19 $$ final Tree optionsTree = new Tree(model)-->Line_47 $$ optionsTree.expandRow(row)[ FD ]
Line_19 $$ final Tree optionsTree = new Tree(model)-->Line_30 $$ TreePath treePath = optionsTree.getLeadSelectionPath()[ FD ]
Line_19 $$ final Tree optionsTree = new Tree(model)-->Line_38 $$ if (!optionsTree.isEnabled())[ FD ]
Line_25 $$ optionsTree.addKeyListener(new KeyAdapter() -->Line_27 $$ if (!optionsTree.isEnabled())[ CD ]
Line_36 $$ new ClickListener() -->Line_38 $$ if (!optionsTree.isEnabled())[ CD ]
Line_25 $$ optionsTree.addKeyListener(new KeyAdapter() -->Line_29 $$ if (e.getKeyCode() == KeyEvent.VK_SPACE) [ FD ]
Line_29 $$ if (e.getKeyCode() == KeyEvent.VK_SPACE) -->Line_32 $$ e.consume()[ CD ]
Line_2 $$ protected JTree createOptionsTree() -->Line_36 $$ new ClickListener() [ CD ]
Line_19 $$ final Tree optionsTree = new Tree(model)-->Line_24 $$ optionsTree.setShowsRootHandles(true)[ FD ]
Line_30 $$ TreePath treePath = optionsTree.getLeadSelectionPath()-->Line_31 $$ selectCheckbox(treePath)[ FD ]
Line_5 $$ DefaultMutableTreeNode groupNode = null-->Line_11 $$ groupNode = new DefaultMutableTreeNode(newGroupName)[ FD ]
Line_2 $$ protected JTree createOptionsTree() -->Line_21 $$ TreeUtil.installActions(optionsTree)[ CD ]
Line_2 $$ protected JTree createOptionsTree() -->Line_25 $$ optionsTree.addKeyListener(new KeyAdapter() [ CD ]
Line_19 $$ final Tree optionsTree = new Tree(model)-->Line_25 $$ optionsTree.addKeyListener(new KeyAdapter() [ FD ]
Line_36 $$ new ClickListener() -->Line_40 $$ TreePath treePath = optionsTree.getPathForLocation(e.getX(), e.getY())[ FD ]
Line_2 $$ protected JTree createOptionsTree() -->Line_50 $$ return optionsTree[ CD ]
Line_14 $$ if (isOptionVisible(key)) -->Line_15 $$ groupNode.add(new MyToggleTreeNode(key, key.title))[ CD ]
Line_36 $$ new ClickListener() -->Line_40 $$ TreePath treePath = optionsTree.getPathForLocation(e.getX(), e.getY())[ CD ]
Line_19 $$ final Tree optionsTree = new Tree(model)-->Line_27 $$ if (!optionsTree.isEnabled())[ FD ]
Line_29 $$ if (e.getKeyCode() == KeyEvent.VK_SPACE) -->Line_31 $$ selectCheckbox(treePath)[ CD ]
Line_36 $$ new ClickListener() -->Line_42 $$ return true[ CD ]
Line_19 $$ final Tree optionsTree = new Tree(model)-->Line_46 $$ while (row < optionsTree.getRowCount()) [ FD ]
Line_9 $$ if (!newGroupName.equals(groupName) || groupNode == null) -->Line_12 $$ rootNode.add(groupNode)[ CD ]
Line_2 $$ protected JTree createOptionsTree() -->Line_46 $$ while (row < optionsTree.getRowCount()) [ CD ]
Line_25 $$ optionsTree.addKeyListener(new KeyAdapter() -->Line_40 $$ TreePath treePath = optionsTree.getPathForLocation(e.getX(), e.getY())[ FD ]
Line_7 $$ for (BooleanOptionKey key : result) -->Line_14 $$ if (isOptionVisible(key)) [ FD ]
Line_36 $$ new ClickListener() -->Line_41 $$ selectCheckbox(treePath)[ CD ]
Line_25 $$ optionsTree.addKeyListener(new KeyAdapter() -->Line_29 $$ if (e.getKeyCode() == KeyEvent.VK_SPACE) [ CD ]
Line_2 $$ protected JTree createOptionsTree() -->Line_3 $$ DefaultMutableTreeNode rootNode = new DefaultMutableTreeNode()[ CD ]
Line_5 $$ DefaultMutableTreeNode groupNode = null-->Line_15 $$ groupNode.add(new MyToggleTreeNode(key, key.title))[ FD ]
Line_11 $$ groupNode = new DefaultMutableTreeNode(newGroupName)-->Line_12 $$ rootNode.add(groupNode)[ FD ]
Line_46 $$ while (row < optionsTree.getRowCount()) -->Line_47 $$ optionsTree.expandRow(row)[ CD ]
Line_2 $$ protected JTree createOptionsTree() -->Line_24 $$ optionsTree.setShowsRootHandles(true)[ CD ]
Line_19 $$ final Tree optionsTree = new Tree(model)-->Line_36 $$ new ClickListener() [ FD ]
Line_30 $$ TreePath treePath = optionsTree.getLeadSelectionPath()-->Line_41 $$ selectCheckbox(treePath)[ FD ]
