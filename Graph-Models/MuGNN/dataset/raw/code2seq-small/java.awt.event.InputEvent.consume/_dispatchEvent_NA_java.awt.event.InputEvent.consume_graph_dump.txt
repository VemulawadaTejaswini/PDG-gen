Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_20 $$ if (e instanceof KeyEvent) [ FD ]
Line_78 $$ if (e instanceof ComponentEvent && myWindowManager != null) -->Line_79 $$ myWindowManager.dispatchComponentEvent((ComponentEvent) e)[ CD ]
Line_82 $$ if (mySuspendMode || !myKeyEventDispatcher.dispatchKeyEvent((KeyEvent) e)) -->Line_85 $$ ((KeyEvent) e).consume()[ CD ]
Line_90 $$ if (IdeMouseEventDispatcher.patchClickCount(me) && me.getID() == MouseEvent.MOUSE_CLICKED) -->Line_91 $$ final MouseEvent toDispatch = new MouseEvent(me.getComponent(), me.getID(), System.currentTimeMillis(), me.getModifiers(), me.getX(), me.getY(), 1, me.isPopupTrigger(), me.getButton())[ CD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_20 $$ if (e instanceof KeyEvent) [ CD ]
Line_81 $$ if (e instanceof KeyEvent) -->Line_88 $$ if (e instanceof MouseEvent) [ CD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_83 $$ defaultDispatchEvent(e)[ FD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_42 $$ if (e instanceof KeyEvent || e instanceof MouseEvent) [ CD ]
Line_56 $$ for (Runnable activityListener : myActivityListeners) -->Line_57 $$ activityListener.run()[ FD ]
Line_98 $$ if (!myMouseEventDispatcher.dispatchMouseEvent(me)) -->Line_99 $$ defaultDispatchEvent(e)[ CD ]
Line_82 $$ if (mySuspendMode || !myKeyEventDispatcher.dispatchKeyEvent((KeyEvent) e)) -->Line_86 $$ defaultDispatchEvent(e)[ CD ]
Line_16 $$ if (!myPopupManager.isPopupActive()) -->Line_17 $$ enterSuspendModeIfNeeded(e)[ CD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_86 $$ defaultDispatchEvent(e)[ FD ]
Line_20 $$ if (e instanceof KeyEvent) -->Line_21 $$ if (e.getID() == KeyEvent.KEY_RELEASED && ((KeyEvent) e).getKeyCode() == KeyEvent.VK_SHIFT) [ CD ]
Line_54 $$ if (KeyEvent.KEY_PRESSED == e.getID() || KeyEvent.KEY_TYPED == e.getID() || MouseEvent.MOUSE_PRESSED == e.getID() || MouseEvent.MOUSE_RELEASED == e.getID() || MouseEvent.MOUSE_CLICKED == e.getID()) -->Line_55 $$ addIdleTimeCounterRequest()[ CD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_73 $$ if (e instanceof InputMethodEvent) [ FD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_10 $$ traceClipboardEvents(e)[ FD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_73 $$ if (e instanceof InputMethodEvent) [ CD ]
Line_92 $$ SwingUtilities.invokeLater(new Runnable() -->Line_94 $$ dispatchEvent(toDispatch)[ CD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_3 $$ if (e.getID() == MouseEvent.MOUSE_DRAGGED) [ FD ]
Line_47 $$ final MyFireIdleRequest request = myListener2Request.get(idleListener)-->Line_51 $$ myIdleRequestsAlarm.addRequest(request, request.getTimeout(), ModalityState.NON_MODAL)[ FD ]
Line_81 $$ if (e instanceof KeyEvent) -->Line_82 $$ if (mySuspendMode || !myKeyEventDispatcher.dispatchKeyEvent((KeyEvent) e)) [ CD ]
Line_3 $$ if (e.getID() == MouseEvent.MOUSE_DRAGGED) -->Line_5 $$ if (dndManager != null) [ CD ]
Line_68 $$ for (EventDispatcher eachDispatcher : myDispatchers) -->Line_69 $$ if (eachDispatcher.dispatch(e)) [ FD ]
Line_46 $$ for (Runnable idleListener : myIdleListeners) -->Line_47 $$ final MyFireIdleRequest request = myListener2Request.get(idleListener)[ FD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_11 $$ if (processAppActivationEvents(e))[ CD ]
Line_88 $$ if (e instanceof MouseEvent) -->Line_90 $$ if (IdeMouseEventDispatcher.patchClickCount(me) && me.getID() == MouseEvent.MOUSE_CLICKED) [ CD ]
Line_63 $$ if (myKeyEventDispatcher.isWaitingForSecondKeyStroke()) -->Line_64 $$ myKeyEventDispatcher.setState(KeyState.STATE_INIT)[ CD ]
Line_25 $$ if (!typeAheadFlushing && typeAheadDispatchToFocusManager(e)) -->Line_26 $$ return[ CD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_28 $$ if (e instanceof WindowEvent) [ CD ]
Line_90 $$ if (IdeMouseEventDispatcher.patchClickCount(me) && me.getID() == MouseEvent.MOUSE_CLICKED) -->Line_92 $$ SwingUtilities.invokeLater(new Runnable() [ CD ]
Line_3 $$ if (e.getID() == MouseEvent.MOUSE_DRAGGED) -->Line_4 $$ DnDManagerImpl dndManager = (DnDManagerImpl) DnDManager.getInstance()[ CD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_99 $$ defaultDispatchEvent(e)[ FD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_14 $$ fixStickyFocusedComponents(e)[ FD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_54 $$ if (KeyEvent.KEY_PRESSED == e.getID() || KeyEvent.KEY_TYPED == e.getID() || MouseEvent.MOUSE_PRESSED == e.getID() || MouseEvent.MOUSE_RELEASED == e.getID() || MouseEvent.MOUSE_CLICKED == e.getID()) [ FD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_21 $$ if (e.getID() == KeyEvent.KEY_RELEASED && ((KeyEvent) e).getKeyCode() == KeyEvent.VK_SHIFT) [ FD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_31 $$ if (e instanceof MouseWheelEvent) [ FD ]
Line_74 $$ if (SystemInfo.isMac && myKeyEventDispatcher.isWaitingForSecondKeyStroke()) -->Line_75 $$ return[ CD ]
Line_89 $$ MouseEvent me = (MouseEvent) e-->Line_98 $$ if (!myMouseEventDispatcher.dispatchMouseEvent(me)) [ FD ]
Line_88 $$ if (e instanceof MouseEvent) -->Line_89 $$ MouseEvent me = (MouseEvent) e[ CD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_62 $$ if (myPopupManager.isPopupActive() && myPopupManager.dispatch(e)) [ FD ]
Line_73 $$ if (e instanceof InputMethodEvent) -->Line_74 $$ if (SystemInfo.isMac && myKeyEventDispatcher.isWaitingForSecondKeyStroke()) [ CD ]
Line_48 $$ if (request == null) -->Line_51 $$ myIdleRequestsAlarm.addRequest(request, request.getTimeout(), ModalityState.NON_MODAL)[ CD ]
Line_42 $$ if (e instanceof KeyEvent || e instanceof MouseEvent) -->Line_43 $$ ActivityTracker.getInstance().inc()[ CD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_10 $$ traceClipboardEvents(e)[ CD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_13 $$ if (!typeAheadFlushing) [ FD ]
Line_33 $$ if (selectedPath.length > 0 && !(selectedPath[0] instanceof ComboPopup)) -->Line_39 $$ return[ CD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_78 $$ if (e instanceof ComponentEvent && myWindowManager != null) [ CD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_62 $$ if (myPopupManager.isPopupActive() && myPopupManager.dispatch(e)) [ CD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_25 $$ if (!typeAheadFlushing && typeAheadDispatchToFocusManager(e)) [ FD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_28 $$ if (e instanceof WindowEvent) [ FD ]
Line_11 $$ if (processAppActivationEvents(e))-->Line_12 $$ return[ CD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_11 $$ if (processAppActivationEvents(e))[ FD ]
Line_89 $$ MouseEvent me = (MouseEvent) e-->Line_91 $$ final MouseEvent toDispatch = new MouseEvent(me.getComponent(), me.getID(), System.currentTimeMillis(), me.getModifiers(), me.getX(), me.getY(), 1, me.isPopupTrigger(), me.getButton())[ FD ]
Line_31 $$ if (e instanceof MouseWheelEvent) -->Line_33 $$ if (selectedPath.length > 0 && !(selectedPath[0] instanceof ComboPopup)) [ CD ]
Line_33 $$ if (selectedPath.length > 0 && !(selectedPath[0] instanceof ComboPopup)) -->Line_34 $$ ((MouseWheelEvent) e).consume()[ CD ]
Line_13 $$ if (!typeAheadFlushing) -->Line_14 $$ fixStickyFocusedComponents(e)[ CD ]
Line_47 $$ final MyFireIdleRequest request = myListener2Request.get(idleListener)-->Line_48 $$ if (request == null) [ FD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_13 $$ if (!typeAheadFlushing) [ CD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_16 $$ if (!myPopupManager.isPopupActive()) [ CD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_25 $$ if (!typeAheadFlushing && typeAheadDispatchToFocusManager(e)) [ CD ]
Line_91 $$ final MouseEvent toDispatch = new MouseEvent(me.getComponent(), me.getID(), System.currentTimeMillis(), me.getModifiers(), me.getX(), me.getY(), 1, me.isPopupTrigger(), me.getButton())-->Line_94 $$ dispatchEvent(toDispatch)[ FD ]
Line_4 $$ DnDManagerImpl dndManager = (DnDManagerImpl) DnDManager.getInstance()-->Line_5 $$ if (dndManager != null) [ FD ]
Line_35 $$ Component component = selectedPath[0].getComponent()-->Line_36 $$ if (component instanceof JBPopupMenu) [ FD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_88 $$ if (e instanceof MouseEvent) [ FD ]
Line_69 $$ if (eachDispatcher.dispatch(e)) -->Line_70 $$ return[ CD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_69 $$ if (eachDispatcher.dispatch(e)) [ FD ]
Line_36 $$ if (component instanceof JBPopupMenu) -->Line_37 $$ ((JBPopupMenu) component).processMouseWheelEvent((MouseWheelEvent) e)[ CD ]
Line_82 $$ if (mySuspendMode || !myKeyEventDispatcher.dispatchKeyEvent((KeyEvent) e)) -->Line_83 $$ defaultDispatchEvent(e)[ CD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_81 $$ if (e instanceof KeyEvent) [ FD ]
Line_33 $$ if (selectedPath.length > 0 && !(selectedPath[0] instanceof ComboPopup)) -->Line_36 $$ if (component instanceof JBPopupMenu) [ CD ]
Line_5 $$ if (dndManager != null) -->Line_6 $$ dndManager.setLastDropHandler(null)[ CD ]
Line_31 $$ if (e instanceof MouseWheelEvent) -->Line_32 $$ final MenuElement[] selectedPath = MenuSelectionManager.defaultManager().getSelectedPath()[ CD ]
Line_21 $$ if (e.getID() == KeyEvent.KEY_RELEASED && ((KeyEvent) e).getKeyCode() == KeyEvent.VK_SHIFT) -->Line_22 $$ myMouseEventDispatcher.resetHorScrollingTracker()[ CD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_31 $$ if (e instanceof MouseWheelEvent) [ CD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_102 $$ defaultDispatchEvent(e)[ FD ]
Line_62 $$ if (myPopupManager.isPopupActive() && myPopupManager.dispatch(e)) -->Line_66 $$ return[ CD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_17 $$ enterSuspendModeIfNeeded(e)[ FD ]
Line_4 $$ DnDManagerImpl dndManager = (DnDManagerImpl) DnDManager.getInstance()-->Line_6 $$ dndManager.setLastDropHandler(null)[ FD ]
Line_88 $$ if (e instanceof MouseEvent) -->Line_102 $$ defaultDispatchEvent(e)[ CD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_3 $$ if (e.getID() == MouseEvent.MOUSE_DRAGGED) [ CD ]
Line_33 $$ if (selectedPath.length > 0 && !(selectedPath[0] instanceof ComboPopup)) -->Line_35 $$ Component component = selectedPath[0].getComponent()[ CD ]
Line_88 $$ if (e instanceof MouseEvent) -->Line_98 $$ if (!myMouseEventDispatcher.dispatchMouseEvent(me)) [ CD ]
Line_62 $$ if (myPopupManager.isPopupActive() && myPopupManager.dispatch(e)) -->Line_63 $$ if (myKeyEventDispatcher.isWaitingForSecondKeyStroke()) [ CD ]
Line_2 $$ public void _dispatchEvent(@NotNull AWTEvent e, boolean typeAheadFlushing) -->Line_81 $$ if (e instanceof KeyEvent) [ CD ]
Line_89 $$ MouseEvent me = (MouseEvent) e-->Line_90 $$ if (IdeMouseEventDispatcher.patchClickCount(me) && me.getID() == MouseEvent.MOUSE_CLICKED) [ FD ]
Line_28 $$ if (e instanceof WindowEvent) -->Line_29 $$ ActivityTracker.getInstance().inc()[ CD ]
Line_48 $$ if (request == null) -->Line_49 $$ LOG.error("There is no request for " + idleListener)[ CD ]
