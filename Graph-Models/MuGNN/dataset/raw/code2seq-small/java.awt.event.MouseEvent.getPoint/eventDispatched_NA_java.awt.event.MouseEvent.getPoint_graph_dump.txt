Line_19 $$ Project project = editor.getProject()-->Line_20 $$ LookupImpl activeLookup = project != null ? (LookupImpl) LookupManager.getInstance(project).getActiveLookup() : null[ FD ]
Line_21 $$ if (activeLookup != null) -->Line_23 $$ if (activeLookup.getComponent().getBounds().contains(lookupPoint)) [ CD ]
Line_21 $$ if (activeLookup != null) -->Line_22 $$ final Point lookupPoint = SwingUtilities.convertPoint(sourceComponent, originalPoint, activeLookup.getComponent())[ CD ]
Line_6 $$ MouseEvent mouseEvent = (MouseEvent) event-->Line_15 $$ final Point originalPoint = mouseEvent.getPoint()[ FD ]
Line_2 $$ public void eventDispatched(AWTEvent event) -->Line_17 $$ if (editor == null)[ CD ]
Line_2 $$ public void eventDispatched(AWTEvent event) -->Line_20 $$ LookupImpl activeLookup = project != null ? (LookupImpl) LookupManager.getInstance(project).getActiveLookup() : null[ CD ]
Line_2 $$ public void eventDispatched(AWTEvent event) -->Line_48 $$ cancelEditing()[ CD ]
Line_2 $$ public void eventDispatched(AWTEvent event) -->Line_40 $$ for (Component comp = componentAtPoint; comp != null; comp = comp.getParent()) [ CD ]
Line_2 $$ public void eventDispatched(AWTEvent event) -->Line_15 $$ final Point originalPoint = mouseEvent.getPoint()[ CD ]
Line_15 $$ final Point originalPoint = mouseEvent.getPoint()-->Line_35 $$ final Point point = SwingUtilities.convertPoint(sourceComponent, originalPoint, myInplaceEditorComponent)[ FD ]
Line_3 $$ if (!isShown()) -->Line_4 $$ return[ CD ]
Line_17 $$ if (editor == null)-->Line_18 $$ return[ CD ]
Line_2 $$ public void eventDispatched(AWTEvent event) -->Line_11 $$ if (id != MouseEvent.MOUSE_PRESSED && id != MouseEvent.MOUSE_RELEASED && id != MouseEvent.MOUSE_CLICKED && id != MouseEvent.MOUSE_WHEEL) [ CD ]
Line_2 $$ public void eventDispatched(AWTEvent event) -->Line_21 $$ if (activeLookup != null) [ CD ]
Line_6 $$ MouseEvent mouseEvent = (MouseEvent) event-->Line_7 $$ if (mouseEvent.getClickCount() == 0 && !(event instanceof MouseWheelEvent)) [ FD ]
Line_40 $$ for (Component comp = componentAtPoint; comp != null; comp = comp.getParent()) -->Line_41 $$ if (comp instanceof ComboPopup) [ CD ]
Line_41 $$ if (comp instanceof ComboPopup) -->Line_45 $$ return[ CD ]
Line_7 $$ if (mouseEvent.getClickCount() == 0 && !(event instanceof MouseWheelEvent)) -->Line_8 $$ return[ CD ]
Line_20 $$ LookupImpl activeLookup = project != null ? (LookupImpl) LookupManager.getInstance(project).getActiveLookup() : null-->Line_26 $$ activeLookup.hide()[ FD ]
Line_22 $$ final Point lookupPoint = SwingUtilities.convertPoint(sourceComponent, originalPoint, activeLookup.getComponent())-->Line_23 $$ if (activeLookup.getComponent().getBounds().contains(lookupPoint)) [ FD ]
Line_35 $$ final Point point = SwingUtilities.convertPoint(sourceComponent, originalPoint, myInplaceEditorComponent)-->Line_36 $$ if (myInplaceEditorComponent.contains(point)) [ FD ]
Line_2 $$ public void eventDispatched(AWTEvent event) -->Line_10 $$ final int id = mouseEvent.getID()[ CD ]
Line_11 $$ if (id != MouseEvent.MOUSE_PRESSED && id != MouseEvent.MOUSE_RELEASED && id != MouseEvent.MOUSE_CLICKED && id != MouseEvent.MOUSE_WHEEL) -->Line_12 $$ return[ CD ]
Line_36 $$ if (myInplaceEditorComponent.contains(point)) -->Line_37 $$ return[ CD ]
Line_20 $$ LookupImpl activeLookup = project != null ? (LookupImpl) LookupManager.getInstance(project).getActiveLookup() : null-->Line_23 $$ if (activeLookup.getComponent().getBounds().contains(lookupPoint)) [ FD ]
Line_31 $$ if (SwingUtilities.isDescendingFrom(sourceComponent, popup.getContent())) -->Line_32 $$ return[ CD ]
Line_2 $$ public void eventDispatched(AWTEvent event) -->Line_19 $$ Project project = editor.getProject()[ CD ]
Line_2 $$ public void eventDispatched(AWTEvent event) -->Line_36 $$ if (myInplaceEditorComponent.contains(point)) [ CD ]
Line_20 $$ LookupImpl activeLookup = project != null ? (LookupImpl) LookupManager.getInstance(project).getActiveLookup() : null-->Line_21 $$ if (activeLookup != null) [ FD ]
Line_2 $$ public void eventDispatched(AWTEvent event) -->Line_35 $$ final Point point = SwingUtilities.convertPoint(sourceComponent, originalPoint, myInplaceEditorComponent)[ CD ]
Line_14 $$ final Component sourceComponent = mouseEvent.getComponent()-->Line_35 $$ final Point point = SwingUtilities.convertPoint(sourceComponent, originalPoint, myInplaceEditorComponent)[ FD ]
Line_16 $$ final Editor editor = getEditor()-->Line_19 $$ Project project = editor.getProject()[ FD ]
Line_2 $$ public void eventDispatched(AWTEvent event) -->Line_16 $$ final Editor editor = getEditor()[ CD ]
Line_15 $$ final Point originalPoint = mouseEvent.getPoint()-->Line_22 $$ final Point lookupPoint = SwingUtilities.convertPoint(sourceComponent, originalPoint, activeLookup.getComponent())[ FD ]
Line_40 $$ for (Component comp = componentAtPoint; comp != null; comp = comp.getParent()) -->Line_41 $$ if (comp instanceof ComboPopup) [ FD ]
Line_6 $$ MouseEvent mouseEvent = (MouseEvent) event-->Line_10 $$ final int id = mouseEvent.getID()[ FD ]
Line_2 $$ public void eventDispatched(AWTEvent event) -->Line_29 $$ final List<JBPopup> popups = JBPopupFactory.getInstance().getChildPopups(myInplaceEditorComponent)[ CD ]
Line_14 $$ final Component sourceComponent = mouseEvent.getComponent()-->Line_39 $$ final Component componentAtPoint = SwingUtilities.getDeepestComponentAt(sourceComponent, originalPoint.x, originalPoint.y)[ FD ]
Line_20 $$ LookupImpl activeLookup = project != null ? (LookupImpl) LookupManager.getInstance(project).getActiveLookup() : null-->Line_22 $$ final Point lookupPoint = SwingUtilities.convertPoint(sourceComponent, originalPoint, activeLookup.getComponent())[ FD ]
Line_23 $$ if (activeLookup.getComponent().getBounds().contains(lookupPoint)) -->Line_26 $$ activeLookup.hide()[ CD ]
Line_2 $$ public void eventDispatched(AWTEvent event) -->Line_39 $$ final Component componentAtPoint = SwingUtilities.getDeepestComponentAt(sourceComponent, originalPoint.x, originalPoint.y)[ CD ]
Line_41 $$ if (comp instanceof ComboPopup) -->Line_42 $$ if (id != MouseEvent.MOUSE_WHEEL) [ CD ]
Line_10 $$ final int id = mouseEvent.getID()-->Line_42 $$ if (id != MouseEvent.MOUSE_WHEEL) [ FD ]
Line_16 $$ final Editor editor = getEditor()-->Line_17 $$ if (editor == null)[ FD ]
Line_2 $$ public void eventDispatched(AWTEvent event) -->Line_6 $$ MouseEvent mouseEvent = (MouseEvent) event[ CD ]
Line_42 $$ if (id != MouseEvent.MOUSE_WHEEL) -->Line_43 $$ doOKAction()[ CD ]
Line_6 $$ MouseEvent mouseEvent = (MouseEvent) event-->Line_14 $$ final Component sourceComponent = mouseEvent.getComponent()[ FD ]
Line_14 $$ final Component sourceComponent = mouseEvent.getComponent()-->Line_22 $$ final Point lookupPoint = SwingUtilities.convertPoint(sourceComponent, originalPoint, activeLookup.getComponent())[ FD ]
Line_14 $$ final Component sourceComponent = mouseEvent.getComponent()-->Line_31 $$ if (SwingUtilities.isDescendingFrom(sourceComponent, popup.getContent())) [ FD ]
Line_23 $$ if (activeLookup.getComponent().getBounds().contains(lookupPoint)) -->Line_24 $$ return[ CD ]
Line_30 $$ for (JBPopup popup : popups) -->Line_31 $$ if (SwingUtilities.isDescendingFrom(sourceComponent, popup.getContent())) [ FD ]
Line_2 $$ public void eventDispatched(AWTEvent event) -->Line_7 $$ if (mouseEvent.getClickCount() == 0 && !(event instanceof MouseWheelEvent)) [ CD ]
Line_2 $$ public void eventDispatched(AWTEvent event) -->Line_14 $$ final Component sourceComponent = mouseEvent.getComponent()[ CD ]
Line_2 $$ public void eventDispatched(AWTEvent event) -->Line_3 $$ if (!isShown()) [ CD ]
