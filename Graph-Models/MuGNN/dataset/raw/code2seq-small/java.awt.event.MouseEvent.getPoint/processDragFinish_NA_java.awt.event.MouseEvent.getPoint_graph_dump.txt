Line_2 $$ protected void processDragFinish(MouseEvent event, boolean willDragOutStart) -->Line_4 $$ endDrag(willDragOutStart)[ CD ]
Line_7 $$ Point p = new Point(event.getPoint())-->Line_9 $$ if (myTabs.getVisibleRect().contains(p) && myPressedOnScreenPoint.distance(new RelativePoint(event).getScreenPoint()) > 15) [ FD ]
Line_9 $$ if (myTabs.getVisibleRect().contains(p) && myPressedOnScreenPoint.distance(new RelativePoint(event).getScreenPoint()) > 15) -->Line_10 $$ final int answer = Messages.showOkCancelDialog(myTabs, IdeBundle.message("alphabetical.mode.is.on.warning"), IdeBundle.message("title.warning"), Messages.getQuestionIcon())[ CD ]
Line_2 $$ protected void processDragFinish(MouseEvent event, boolean willDragOutStart) -->Line_3 $$ super.processDragFinish(event, willDragOutStart)[ FD ]
Line_2 $$ protected void processDragFinish(MouseEvent event, boolean willDragOutStart) -->Line_5 $$ final JBTabsPosition position = myTabs.getTabsPosition()[ CD ]
Line_2 $$ protected void processDragFinish(MouseEvent event, boolean willDragOutStart) -->Line_6 $$ if (!willDragOutStart && myTabs.isAlphabeticalMode() && position != JBTabsPosition.top && position != JBTabsPosition.bottom) [ FD ]
Line_11 $$ if (answer == Messages.OK) -->Line_12 $$ JBEditorTabs.setAlphabeticalMode(false)[ CD ]
Line_9 $$ if (myTabs.getVisibleRect().contains(p) && myPressedOnScreenPoint.distance(new RelativePoint(event).getScreenPoint()) > 15) -->Line_11 $$ if (answer == Messages.OK) [ CD ]
Line_2 $$ protected void processDragFinish(MouseEvent event, boolean willDragOutStart) -->Line_8 $$ p = SwingUtilities.convertPoint(event.getComponent(), p, myTabs)[ FD ]
Line_6 $$ if (!willDragOutStart && myTabs.isAlphabeticalMode() && position != JBTabsPosition.top && position != JBTabsPosition.bottom) -->Line_8 $$ p = SwingUtilities.convertPoint(event.getComponent(), p, myTabs)[ CD ]
Line_7 $$ Point p = new Point(event.getPoint())-->Line_8 $$ p = SwingUtilities.convertPoint(event.getComponent(), p, myTabs)[ FD ]
Line_6 $$ if (!willDragOutStart && myTabs.isAlphabeticalMode() && position != JBTabsPosition.top && position != JBTabsPosition.bottom) -->Line_7 $$ Point p = new Point(event.getPoint())[ CD ]
Line_10 $$ final int answer = Messages.showOkCancelDialog(myTabs, IdeBundle.message("alphabetical.mode.is.on.warning"), IdeBundle.message("title.warning"), Messages.getQuestionIcon())-->Line_11 $$ if (answer == Messages.OK) [ FD ]
Line_6 $$ if (!willDragOutStart && myTabs.isAlphabeticalMode() && position != JBTabsPosition.top && position != JBTabsPosition.bottom) -->Line_9 $$ if (myTabs.getVisibleRect().contains(p) && myPressedOnScreenPoint.distance(new RelativePoint(event).getScreenPoint()) > 15) [ CD ]
Line_2 $$ protected void processDragFinish(MouseEvent event, boolean willDragOutStart) -->Line_6 $$ if (!willDragOutStart && myTabs.isAlphabeticalMode() && position != JBTabsPosition.top && position != JBTabsPosition.bottom) [ CD ]
Line_2 $$ protected void processDragFinish(MouseEvent event, boolean willDragOutStart) -->Line_4 $$ endDrag(willDragOutStart)[ FD ]
Line_2 $$ protected void processDragFinish(MouseEvent event, boolean willDragOutStart) -->Line_7 $$ Point p = new Point(event.getPoint())[ FD ]
Line_11 $$ if (answer == Messages.OK) -->Line_13 $$ myTabs.relayout(true, false)[ CD ]
Line_8 $$ p = SwingUtilities.convertPoint(event.getComponent(), p, myTabs)-->Line_9 $$ if (myTabs.getVisibleRect().contains(p) && myPressedOnScreenPoint.distance(new RelativePoint(event).getScreenPoint()) > 15) [ FD ]
Line_11 $$ if (answer == Messages.OK) -->Line_14 $$ myTabs.revalidate()[ CD ]
Line_2 $$ protected void processDragFinish(MouseEvent event, boolean willDragOutStart) -->Line_3 $$ super.processDragFinish(event, willDragOutStart)[ CD ]
