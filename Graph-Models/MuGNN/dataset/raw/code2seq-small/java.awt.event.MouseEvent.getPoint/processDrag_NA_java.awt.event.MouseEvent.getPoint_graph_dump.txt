Line_35 $$ targetLabel = findMostOverlapping(Axis.X, left, right)-->Line_45 $$ if (targetLabel != null) [ FD ]
Line_2 $$ protected void processDrag(MouseEvent event, Point targetScreenPoint, Point startPointScreen) -->Line_61 $$ event.consume()[ FD ]
Line_33 $$ TabLabel targetLabel-->Line_42 $$ targetLabel = findMostOverlapping(Axis.X, left, right)[ FD ]
Line_40 $$ targetLabel = findMostOverlapping(Axis.Y, top, bottom)-->Line_45 $$ if (targetLabel != null) [ FD ]
Line_6 $$ if (isDragJustStarted()) -->Line_15 $$ myDragOriginalRec.y -= myHoldDelta.height[ CD ]
Line_45 $$ if (targetLabel != null) -->Line_59 $$ myTabs.repaint(headerRec)[ CD ]
Line_45 $$ if (targetLabel != null) -->Line_58 $$ headerRec.height += border * 2[ CD ]
Line_32 $$ final TabLabel right = findLabel(new Point(myDragRec.x + myDragRec.width - deadZoneX, myDragRec.y + myDragRec.height / 2))-->Line_35 $$ targetLabel = findMostOverlapping(Axis.X, left, right)[ FD ]
Line_31 $$ final TabLabel left = findLabel(new Point(myDragRec.x + deadZoneX, myDragRec.y + myDragRec.height / 2))-->Line_35 $$ targetLabel = findMostOverlapping(Axis.X, left, right)[ FD ]
Line_6 $$ if (isDragJustStarted()) -->Line_11 $$ myDragSource = myPressedTabLabel.getInfo()[ CD ]
Line_35 $$ targetLabel = findMostOverlapping(Axis.X, left, right)-->Line_37 $$ targetLabel = findMostOverlapping(Axis.Y, top, bottom)[ FD ]
Line_33 $$ TabLabel targetLabel-->Line_37 $$ targetLabel = findMostOverlapping(Axis.Y, top, bottom)[ FD ]
Line_2 $$ protected void processDrag(MouseEvent event, Point targetScreenPoint, Point startPointScreen) -->Line_27 $$ int deadZoneX = 0[ CD ]
Line_42 $$ targetLabel = findMostOverlapping(Axis.X, left, right)-->Line_48 $$ myTabs.reallocate(myDragSource, targetLabel.getInfo())[ FD ]
Line_54 $$ final int border = myTabs.getTabsBorder().getTabBorderSize()-->Line_55 $$ headerRec.x -= border[ FD ]
Line_2 $$ protected void processDrag(MouseEvent event, Point targetScreenPoint, Point startPointScreen) -->Line_45 $$ if (targetLabel != null) [ CD ]
Line_45 $$ if (targetLabel != null) -->Line_48 $$ myTabs.reallocate(myDragSource, targetLabel.getInfo())[ CD ]
Line_35 $$ targetLabel = findMostOverlapping(Axis.X, left, right)-->Line_36 $$ if (targetLabel == null) [ FD ]
Line_34 $$ if (myTabs.isHorizontalTabs()) -->Line_36 $$ if (targetLabel == null) [ CD ]
Line_45 $$ if (targetLabel != null) -->Line_51 $$ myTabs.moveDraggedTabLabel()[ CD ]
Line_2 $$ protected void processDrag(MouseEvent event, Point targetScreenPoint, Point startPointScreen) -->Line_25 $$ final Rectangle headerRec = myTabs.getLastLayoutPass().getHeaderRectangle()[ CD ]
Line_42 $$ targetLabel = findMostOverlapping(Axis.X, left, right)-->Line_45 $$ if (targetLabel != null) [ FD ]
Line_45 $$ if (targetLabel != null) -->Line_55 $$ headerRec.x -= border[ CD ]
Line_7 $$ if (myPressedTabLabel == null)-->Line_8 $$ return[ CD ]
Line_2 $$ protected void processDrag(MouseEvent event, Point targetScreenPoint, Point startPointScreen) -->Line_31 $$ final TabLabel left = findLabel(new Point(myDragRec.x + deadZoneX, myDragRec.y + myDragRec.height / 2))[ CD ]
Line_2 $$ protected void processDrag(MouseEvent event, Point targetScreenPoint, Point startPointScreen) -->Line_19 $$ final Point toPoint = SwingUtilities.convertPoint(event.getComponent(), event.getPoint(), myTabs)[ FD ]
Line_30 $$ final TabLabel bottom = findLabel(new Point(myDragRec.x + myDragRec.width / 2, myDragRec.y + myDragRec.height - deadZoneY))-->Line_37 $$ targetLabel = findMostOverlapping(Axis.Y, top, bottom)[ FD ]
Line_37 $$ targetLabel = findMostOverlapping(Axis.Y, top, bottom)-->Line_48 $$ myTabs.reallocate(myDragSource, targetLabel.getInfo())[ FD ]
Line_6 $$ if (isDragJustStarted()) -->Line_21 $$ myDragRec.y = toPoint.y[ CD ]
Line_54 $$ final int border = myTabs.getTabsBorder().getTabBorderSize()-->Line_56 $$ headerRec.y -= border[ FD ]
Line_33 $$ TabLabel targetLabel-->Line_45 $$ if (targetLabel != null) [ FD ]
Line_33 $$ TabLabel targetLabel-->Line_41 $$ if (targetLabel == null) [ FD ]
Line_33 $$ TabLabel targetLabel-->Line_48 $$ myTabs.reallocate(myDragSource, targetLabel.getInfo())[ FD ]
Line_34 $$ if (myTabs.isHorizontalTabs()) -->Line_35 $$ targetLabel = findMostOverlapping(Axis.X, left, right)[ CD ]
Line_25 $$ final Rectangle headerRec = myTabs.getLastLayoutPass().getHeaderRectangle()-->Line_59 $$ myTabs.repaint(headerRec)[ FD ]
Line_45 $$ if (targetLabel != null) -->Line_56 $$ headerRec.y -= border[ CD ]
Line_2 $$ protected void processDrag(MouseEvent event, Point targetScreenPoint, Point startPointScreen) -->Line_61 $$ event.consume()[ CD ]
Line_17 $$ if (myDragRec == null)-->Line_18 $$ return[ CD ]
Line_2 $$ protected void processDrag(MouseEvent event, Point targetScreenPoint, Point startPointScreen) -->Line_3 $$ if (!myTabs.isTabDraggingEnabled() || !isDragSource(event) || !MouseDragHelper.checkModifiers(event))[ CD ]
Line_2 $$ protected void processDrag(MouseEvent event, Point targetScreenPoint, Point startPointScreen) -->Line_5 $$ SwingUtilities.convertPointFromScreen(startPointScreen, myTabs)[ FD ]
Line_2 $$ protected void processDrag(MouseEvent event, Point targetScreenPoint, Point startPointScreen) -->Line_30 $$ final TabLabel bottom = findLabel(new Point(myDragRec.x + myDragRec.width / 2, myDragRec.y + myDragRec.height - deadZoneY))[ CD ]
Line_2 $$ protected void processDrag(MouseEvent event, Point targetScreenPoint, Point startPointScreen) -->Line_29 $$ final TabLabel top = findLabel(new Point(myDragRec.x + myDragRec.width / 2, myDragRec.y + deadZoneY))[ CD ]
Line_35 $$ targetLabel = findMostOverlapping(Axis.X, left, right)-->Line_40 $$ targetLabel = findMostOverlapping(Axis.Y, top, bottom)[ FD ]
Line_40 $$ targetLabel = findMostOverlapping(Axis.Y, top, bottom)-->Line_42 $$ targetLabel = findMostOverlapping(Axis.X, left, right)[ FD ]
Line_6 $$ if (isDragJustStarted()) -->Line_14 $$ myDragOriginalRec.x -= myHoldDelta.width[ CD ]
Line_35 $$ targetLabel = findMostOverlapping(Axis.X, left, right)-->Line_41 $$ if (targetLabel == null) [ FD ]
Line_37 $$ targetLabel = findMostOverlapping(Axis.Y, top, bottom)-->Line_40 $$ targetLabel = findMostOverlapping(Axis.Y, top, bottom)[ FD ]
Line_33 $$ TabLabel targetLabel-->Line_40 $$ targetLabel = findMostOverlapping(Axis.Y, top, bottom)[ FD ]
Line_32 $$ final TabLabel right = findLabel(new Point(myDragRec.x + myDragRec.width - deadZoneX, myDragRec.y + myDragRec.height / 2))-->Line_42 $$ targetLabel = findMostOverlapping(Axis.X, left, right)[ FD ]
Line_40 $$ targetLabel = findMostOverlapping(Axis.Y, top, bottom)-->Line_41 $$ if (targetLabel == null) [ FD ]
Line_33 $$ TabLabel targetLabel-->Line_35 $$ targetLabel = findMostOverlapping(Axis.X, left, right)[ FD ]
Line_45 $$ if (targetLabel != null) -->Line_53 $$ myTabs.moveDraggedTabLabel()[ CD ]
Line_25 $$ final Rectangle headerRec = myTabs.getLastLayoutPass().getHeaderRectangle()-->Line_26 $$ ScreenUtil.moveToFit(myDragRec, headerRec, null)[ FD ]
Line_34 $$ if (myTabs.isHorizontalTabs()) -->Line_40 $$ targetLabel = findMostOverlapping(Axis.Y, top, bottom)[ CD ]
Line_45 $$ if (targetLabel != null) -->Line_49 $$ myDragOriginalRec = myTabs.myInfo2Label.get(myDragSource).getBounds()[ CD ]
Line_54 $$ final int border = myTabs.getTabsBorder().getTabBorderSize()-->Line_57 $$ headerRec.width += border * 2[ FD ]
Line_2 $$ protected void processDrag(MouseEvent event, Point targetScreenPoint, Point startPointScreen) -->Line_3 $$ if (!myTabs.isTabDraggingEnabled() || !isDragSource(event) || !MouseDragHelper.checkModifiers(event))[ FD ]
Line_35 $$ targetLabel = findMostOverlapping(Axis.X, left, right)-->Line_42 $$ targetLabel = findMostOverlapping(Axis.X, left, right)[ FD ]
Line_37 $$ targetLabel = findMostOverlapping(Axis.Y, top, bottom)-->Line_42 $$ targetLabel = findMostOverlapping(Axis.X, left, right)[ FD ]
Line_45 $$ if (targetLabel != null) -->Line_57 $$ headerRec.width += border * 2[ CD ]
Line_45 $$ if (targetLabel != null) -->Line_46 $$ Rectangle saved = myDragRec[ CD ]
Line_30 $$ final TabLabel bottom = findLabel(new Point(myDragRec.x + myDragRec.width / 2, myDragRec.y + myDragRec.height - deadZoneY))-->Line_40 $$ targetLabel = findMostOverlapping(Axis.Y, top, bottom)[ FD ]
Line_40 $$ targetLabel = findMostOverlapping(Axis.Y, top, bottom)-->Line_48 $$ myTabs.reallocate(myDragSource, targetLabel.getInfo())[ FD ]
Line_2 $$ protected void processDrag(MouseEvent event, Point targetScreenPoint, Point startPointScreen) -->Line_26 $$ ScreenUtil.moveToFit(myDragRec, headerRec, null)[ CD ]
Line_35 $$ targetLabel = findMostOverlapping(Axis.X, left, right)-->Line_48 $$ myTabs.reallocate(myDragSource, targetLabel.getInfo())[ FD ]
Line_6 $$ if (isDragJustStarted()) -->Line_19 $$ final Point toPoint = SwingUtilities.convertPoint(event.getComponent(), event.getPoint(), myTabs)[ CD ]
Line_41 $$ if (targetLabel == null) -->Line_42 $$ targetLabel = findMostOverlapping(Axis.X, left, right)[ CD ]
Line_2 $$ protected void processDrag(MouseEvent event, Point targetScreenPoint, Point startPointScreen) -->Line_23 $$ myDragRec.x -= myHoldDelta.width[ CD ]
Line_54 $$ final int border = myTabs.getTabsBorder().getTabBorderSize()-->Line_58 $$ headerRec.height += border * 2[ FD ]
Line_9 $$ final Rectangle labelBounds = myPressedTabLabel.getBounds()-->Line_12 $$ myDragRec = new Rectangle(startPointScreen, labelBounds.getSize())[ FD ]
Line_2 $$ protected void processDrag(MouseEvent event, Point targetScreenPoint, Point startPointScreen) -->Line_28 $$ int deadZoneY = 0[ CD ]
Line_45 $$ if (targetLabel != null) -->Line_54 $$ final int border = myTabs.getTabsBorder().getTabBorderSize()[ CD ]
Line_6 $$ if (isDragJustStarted()) -->Line_9 $$ final Rectangle labelBounds = myPressedTabLabel.getBounds()[ CD ]
Line_2 $$ protected void processDrag(MouseEvent event, Point targetScreenPoint, Point startPointScreen) -->Line_6 $$ if (isDragJustStarted()) [ CD ]
Line_33 $$ TabLabel targetLabel-->Line_36 $$ if (targetLabel == null) [ FD ]
Line_37 $$ targetLabel = findMostOverlapping(Axis.Y, top, bottom)-->Line_45 $$ if (targetLabel != null) [ FD ]
Line_6 $$ if (isDragJustStarted()) -->Line_17 $$ if (myDragRec == null)[ CD ]
Line_31 $$ final TabLabel left = findLabel(new Point(myDragRec.x + deadZoneX, myDragRec.y + myDragRec.height / 2))-->Line_42 $$ targetLabel = findMostOverlapping(Axis.X, left, right)[ FD ]
Line_36 $$ if (targetLabel == null) -->Line_37 $$ targetLabel = findMostOverlapping(Axis.Y, top, bottom)[ CD ]
Line_29 $$ final TabLabel top = findLabel(new Point(myDragRec.x + myDragRec.width / 2, myDragRec.y + deadZoneY))-->Line_40 $$ targetLabel = findMostOverlapping(Axis.Y, top, bottom)[ FD ]
Line_37 $$ targetLabel = findMostOverlapping(Axis.Y, top, bottom)-->Line_41 $$ if (targetLabel == null) [ FD ]
Line_2 $$ protected void processDrag(MouseEvent event, Point targetScreenPoint, Point startPointScreen) -->Line_5 $$ SwingUtilities.convertPointFromScreen(startPointScreen, myTabs)[ CD ]
Line_2 $$ protected void processDrag(MouseEvent event, Point targetScreenPoint, Point startPointScreen) -->Line_34 $$ if (myTabs.isHorizontalTabs()) [ CD ]
Line_2 $$ protected void processDrag(MouseEvent event, Point targetScreenPoint, Point startPointScreen) -->Line_24 $$ myDragRec.y -= myHoldDelta.height[ CD ]
Line_3 $$ if (!myTabs.isTabDraggingEnabled() || !isDragSource(event) || !MouseDragHelper.checkModifiers(event))-->Line_4 $$ return[ CD ]
Line_6 $$ if (isDragJustStarted()) -->Line_20 $$ myDragRec.x = toPoint.x[ CD ]
Line_2 $$ protected void processDrag(MouseEvent event, Point targetScreenPoint, Point startPointScreen) -->Line_32 $$ final TabLabel right = findLabel(new Point(myDragRec.x + myDragRec.width - deadZoneX, myDragRec.y + myDragRec.height / 2))[ CD ]
Line_34 $$ if (myTabs.isHorizontalTabs()) -->Line_41 $$ if (targetLabel == null) [ CD ]
Line_2 $$ protected void processDrag(MouseEvent event, Point targetScreenPoint, Point startPointScreen) -->Line_33 $$ TabLabel targetLabel[ CD ]
Line_6 $$ if (isDragJustStarted()) -->Line_7 $$ if (myPressedTabLabel == null)[ CD ]
Line_29 $$ final TabLabel top = findLabel(new Point(myDragRec.x + myDragRec.width / 2, myDragRec.y + deadZoneY))-->Line_37 $$ targetLabel = findMostOverlapping(Axis.Y, top, bottom)[ FD ]
