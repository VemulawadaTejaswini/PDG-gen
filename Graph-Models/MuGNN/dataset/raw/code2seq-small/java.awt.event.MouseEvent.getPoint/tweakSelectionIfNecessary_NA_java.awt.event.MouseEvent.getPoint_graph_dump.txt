Line_16 $$ int endLineOffset = EditorUtil.getVisualLineEndOffset(this, clickVisLine)-->Line_17 $$ getSelectionModel().setSelection(getSelectionModel().getSelectionStart(), endLineOffset)[ FD ]
Line_8 $$ int endSelectionOffset = getSelectionModel().getSelectionEnd()-->Line_27 $$ getSelectionModel().setSelection(startOffset, endSelectionOffset)[ FD ]
Line_10 $$ int clickVisLine = yPositionToVisibleLine(e.getPoint().y)-->Line_30 $$ if (clickVisLine == endVisLine) [ FD ]
Line_2 $$ private boolean tweakSelectionIfNecessary(@NotNull MouseEvent e) -->Line_10 $$ int clickVisLine = yPositionToVisibleLine(e.getPoint().y)[ FD ]
Line_7 $$ int startVisLine = offsetToVisualLine(startSelectionOffset)-->Line_23 $$ if (clickVisLine == startVisLine) [ FD ]
Line_12 $$ int startOffset = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(clickVisLine, 0)))-->Line_28 $$ getCaretModel().moveToOffset(startOffset)[ FD ]
Line_10 $$ int clickVisLine = yPositionToVisibleLine(e.getPoint().y)-->Line_15 $$ if (clickVisLine > endVisLine) [ FD ]
Line_2 $$ private boolean tweakSelectionIfNecessary(@NotNull MouseEvent e) -->Line_11 $$ if (clickVisLine < startVisLine) [ CD ]
Line_22 $$ if (getSelectionModel().getLeadSelectionOffset() == endSelectionOffset) -->Line_34 $$ getSelectionModel().setSelection(startSelectionOffset, endLineOffset)[ CD ]
Line_2 $$ private boolean tweakSelectionIfNecessary(@NotNull MouseEvent e) -->Line_7 $$ int startVisLine = offsetToVisualLine(startSelectionOffset)[ CD ]
Line_15 $$ if (clickVisLine > endVisLine) -->Line_19 $$ if (startVisLine == endVisLine) [ CD ]
Line_22 $$ if (getSelectionModel().getLeadSelectionOffset() == endSelectionOffset) -->Line_27 $$ getSelectionModel().setSelection(startOffset, endSelectionOffset)[ CD ]
Line_8 $$ int endSelectionOffset = getSelectionModel().getSelectionEnd()-->Line_13 $$ getSelectionModel().setSelection(startOffset, endSelectionOffset)[ FD ]
Line_2 $$ private boolean tweakSelectionIfNecessary(@NotNull MouseEvent e) -->Line_10 $$ int clickVisLine = yPositionToVisibleLine(e.getPoint().y)[ CD ]
Line_2 $$ private boolean tweakSelectionIfNecessary(@NotNull MouseEvent e) -->Line_3 $$ if (!tweakSelectionEvent(e)) [ CD ]
Line_22 $$ if (getSelectionModel().getLeadSelectionOffset() == endSelectionOffset) -->Line_28 $$ getCaretModel().moveToOffset(startOffset)[ CD ]
Line_15 $$ if (clickVisLine > endVisLine) -->Line_16 $$ int endLineOffset = EditorUtil.getVisualLineEndOffset(this, clickVisLine)[ CD ]
Line_15 $$ if (clickVisLine > endVisLine) -->Line_18 $$ getCaretModel().moveToOffset(endLineOffset, true)[ CD ]
Line_9 $$ int endVisLine = offsetToVisualLine(endSelectionOffset - 1)-->Line_15 $$ if (clickVisLine > endVisLine) [ FD ]
Line_10 $$ int clickVisLine = yPositionToVisibleLine(e.getPoint().y)-->Line_11 $$ if (clickVisLine < startVisLine) [ FD ]
Line_15 $$ if (clickVisLine > endVisLine) -->Line_17 $$ getSelectionModel().setSelection(getSelectionModel().getSelectionStart(), endLineOffset)[ CD ]
Line_16 $$ int endLineOffset = EditorUtil.getVisualLineEndOffset(this, clickVisLine)-->Line_18 $$ getCaretModel().moveToOffset(endLineOffset, true)[ FD ]
Line_22 $$ if (getSelectionModel().getLeadSelectionOffset() == endSelectionOffset) -->Line_30 $$ if (clickVisLine == endVisLine) [ CD ]
Line_10 $$ int clickVisLine = yPositionToVisibleLine(e.getPoint().y)-->Line_33 $$ int endLineOffset = EditorUtil.getVisualLineEndOffset(this, clickVisLine)[ FD ]
Line_16 $$ int endLineOffset = EditorUtil.getVisualLineEndOffset(this, clickVisLine)-->Line_34 $$ getSelectionModel().setSelection(startSelectionOffset, endLineOffset)[ FD ]
Line_11 $$ if (clickVisLine < startVisLine) -->Line_14 $$ getCaretModel().moveToOffset(startOffset)[ CD ]
Line_10 $$ int clickVisLine = yPositionToVisibleLine(e.getPoint().y)-->Line_16 $$ int endLineOffset = EditorUtil.getVisualLineEndOffset(this, clickVisLine)[ FD ]
Line_16 $$ int endLineOffset = EditorUtil.getVisualLineEndOffset(this, clickVisLine)-->Line_35 $$ getCaretModel().moveToOffset(endLineOffset)[ FD ]
Line_6 $$ int startSelectionOffset = getSelectionModel().getSelectionStart()-->Line_34 $$ getSelectionModel().setSelection(startSelectionOffset, endLineOffset)[ FD ]
Line_19 $$ if (startVisLine == endVisLine) -->Line_22 $$ if (getSelectionModel().getLeadSelectionOffset() == endSelectionOffset) [ CD ]
Line_7 $$ int startVisLine = offsetToVisualLine(startSelectionOffset)-->Line_11 $$ if (clickVisLine < startVisLine) [ FD ]
Line_2 $$ private boolean tweakSelectionIfNecessary(@NotNull MouseEvent e) -->Line_39 $$ return true[ CD ]
Line_6 $$ int startSelectionOffset = getSelectionModel().getSelectionStart()-->Line_7 $$ int startVisLine = offsetToVisualLine(startSelectionOffset)[ FD ]
Line_12 $$ int startOffset = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(clickVisLine, 0)))-->Line_13 $$ getSelectionModel().setSelection(startOffset, endSelectionOffset)[ FD ]
Line_7 $$ int startVisLine = offsetToVisualLine(startSelectionOffset)-->Line_19 $$ if (startVisLine == endVisLine) [ FD ]
Line_8 $$ int endSelectionOffset = getSelectionModel().getSelectionEnd()-->Line_22 $$ if (getSelectionModel().getLeadSelectionOffset() == endSelectionOffset) [ FD ]
Line_11 $$ if (clickVisLine < startVisLine) -->Line_15 $$ if (clickVisLine > endVisLine) [ CD ]
Line_2 $$ private boolean tweakSelectionIfNecessary(@NotNull MouseEvent e) -->Line_38 $$ e.consume()[ CD ]
Line_2 $$ private boolean tweakSelectionIfNecessary(@NotNull MouseEvent e) -->Line_3 $$ if (!tweakSelectionEvent(e)) [ FD ]
Line_10 $$ int clickVisLine = yPositionToVisibleLine(e.getPoint().y)-->Line_24 $$ clickVisLine++[ FD ]
Line_12 $$ int startOffset = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(clickVisLine, 0)))-->Line_14 $$ getCaretModel().moveToOffset(startOffset)[ FD ]
Line_10 $$ int clickVisLine = yPositionToVisibleLine(e.getPoint().y)-->Line_23 $$ if (clickVisLine == startVisLine) [ FD ]
Line_9 $$ int endVisLine = offsetToVisualLine(endSelectionOffset - 1)-->Line_30 $$ if (clickVisLine == endVisLine) [ FD ]
Line_2 $$ private boolean tweakSelectionIfNecessary(@NotNull MouseEvent e) -->Line_8 $$ int endSelectionOffset = getSelectionModel().getSelectionEnd()[ CD ]
Line_19 $$ if (startVisLine == endVisLine) -->Line_20 $$ getSelectionModel().removeSelection()[ CD ]
Line_22 $$ if (getSelectionModel().getLeadSelectionOffset() == endSelectionOffset) -->Line_26 $$ int startOffset = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(clickVisLine, 0)))[ CD ]
Line_2 $$ private boolean tweakSelectionIfNecessary(@NotNull MouseEvent e) -->Line_9 $$ int endVisLine = offsetToVisualLine(endSelectionOffset - 1)[ CD ]
Line_30 $$ if (clickVisLine == endVisLine) -->Line_31 $$ clickVisLine--[ CD ]
Line_22 $$ if (getSelectionModel().getLeadSelectionOffset() == endSelectionOffset) -->Line_35 $$ getCaretModel().moveToOffset(endLineOffset)[ CD ]
Line_2 $$ private boolean tweakSelectionIfNecessary(@NotNull MouseEvent e) -->Line_38 $$ e.consume()[ FD ]
Line_3 $$ if (!tweakSelectionEvent(e)) -->Line_4 $$ return false[ CD ]
Line_12 $$ int startOffset = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(clickVisLine, 0)))-->Line_27 $$ getSelectionModel().setSelection(startOffset, endSelectionOffset)[ FD ]
Line_22 $$ if (getSelectionModel().getLeadSelectionOffset() == endSelectionOffset) -->Line_23 $$ if (clickVisLine == startVisLine) [ CD ]
Line_2 $$ private boolean tweakSelectionIfNecessary(@NotNull MouseEvent e) -->Line_6 $$ int startSelectionOffset = getSelectionModel().getSelectionStart()[ CD ]
Line_10 $$ int clickVisLine = yPositionToVisibleLine(e.getPoint().y)-->Line_31 $$ clickVisLine--[ FD ]
Line_11 $$ if (clickVisLine < startVisLine) -->Line_12 $$ int startOffset = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(clickVisLine, 0)))[ CD ]
Line_22 $$ if (getSelectionModel().getLeadSelectionOffset() == endSelectionOffset) -->Line_33 $$ int endLineOffset = EditorUtil.getVisualLineEndOffset(this, clickVisLine)[ CD ]
Line_11 $$ if (clickVisLine < startVisLine) -->Line_13 $$ getSelectionModel().setSelection(startOffset, endSelectionOffset)[ CD ]
Line_9 $$ int endVisLine = offsetToVisualLine(endSelectionOffset - 1)-->Line_19 $$ if (startVisLine == endVisLine) [ FD ]
Line_23 $$ if (clickVisLine == startVisLine) -->Line_24 $$ clickVisLine++[ CD ]
