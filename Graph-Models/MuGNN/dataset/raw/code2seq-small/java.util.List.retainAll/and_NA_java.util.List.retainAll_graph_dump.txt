Line_4 $$ return new DslPointcut<T, V>() -->Line_8 $$ final List<V> vs1 = first.matches(src, context)[ CD ]
Line_2 $$ public DslPointcut<T, V> and(final DslPointcut<T, V> next) -->Line_21 $$ return first.operatesOn(c) && next.operatesOn(c)[ FD ]
Line_4 $$ return new DslPointcut<T, V>() -->Line_21 $$ return first.operatesOn(c) && next.operatesOn(c)[ CD ]
Line_9 $$ if (vs1 == null)-->Line_10 $$ return null[ CD ]
Line_2 $$ public DslPointcut<T, V> and(final DslPointcut<T, V> next) -->Line_11 $$ final List<V> vs2 = next.matches(src, context)[ FD ]
Line_2 $$ public DslPointcut<T, V> and(final DslPointcut<T, V> next) -->Line_4 $$ return new DslPointcut<T, V>() [ CD ]
Line_4 $$ return new DslPointcut<T, V>() -->Line_15 $$ result.retainAll(new HashSet<V>(vs2))[ CD ]
Line_12 $$ if (vs2 == null)-->Line_13 $$ return null[ CD ]
Line_8 $$ final List<V> vs1 = first.matches(src, context)-->Line_9 $$ if (vs1 == null)[ FD ]
Line_4 $$ return new DslPointcut<T, V>() -->Line_21 $$ return first.operatesOn(c) && next.operatesOn(c)[ FD ]
Line_4 $$ return new DslPointcut<T, V>() -->Line_12 $$ if (vs2 == null)[ CD ]
Line_2 $$ public DslPointcut<T, V> and(final DslPointcut<T, V> next) -->Line_3 $$ final DslPointcut<T, V> first = this[ CD ]
Line_14 $$ final List<V> result = new ArrayList<V>(vs1)-->Line_15 $$ result.retainAll(new HashSet<V>(vs2))[ FD ]
Line_4 $$ return new DslPointcut<T, V>() -->Line_9 $$ if (vs1 == null)[ CD ]
Line_3 $$ final DslPointcut<T, V> first = this-->Line_8 $$ final List<V> vs1 = first.matches(src, context)[ FD ]
Line_3 $$ final DslPointcut<T, V> first = this-->Line_21 $$ return first.operatesOn(c) && next.operatesOn(c)[ FD ]
Line_4 $$ return new DslPointcut<T, V>() -->Line_11 $$ final List<V> vs2 = next.matches(src, context)[ FD ]
Line_4 $$ return new DslPointcut<T, V>() -->Line_8 $$ final List<V> vs1 = first.matches(src, context)[ FD ]
Line_4 $$ return new DslPointcut<T, V>() -->Line_11 $$ final List<V> vs2 = next.matches(src, context)[ CD ]
Line_11 $$ final List<V> vs2 = next.matches(src, context)-->Line_12 $$ if (vs2 == null)[ FD ]
Line_4 $$ return new DslPointcut<T, V>() -->Line_14 $$ final List<V> result = new ArrayList<V>(vs1)[ CD ]
Line_4 $$ return new DslPointcut<T, V>() -->Line_16 $$ return result[ CD ]
