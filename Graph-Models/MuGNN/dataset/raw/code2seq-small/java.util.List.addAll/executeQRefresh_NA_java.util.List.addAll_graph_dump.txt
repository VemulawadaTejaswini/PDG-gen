Line_2 $$ private void executeQRefresh(@NotNull List<String> chunkFiles) throws VcsException -->Line_3 $$ List<String> args = ContainerUtil.newArrayList()[ CD ]
Line_2 $$ private void executeQRefresh(@NotNull List<String> chunkFiles) throws VcsException -->Line_6 $$ args.add("-s")[ CD ]
Line_8 $$ new HgCommandExecutor(myProject).execute(myRepository.getRoot(), "qrefresh", args, new HgCommandResultHandler() -->Line_10 $$ if (HgErrorUtil.hasErrorsInCommandExecution(result)) [ CD ]
Line_2 $$ private void executeQRefresh(@NotNull List<String> chunkFiles) throws VcsException -->Line_7 $$ args.addAll(chunkFiles)[ FD ]
Line_3 $$ List<String> args = ContainerUtil.newArrayList()-->Line_5 $$ args.add(saveCommitMessage().getAbsolutePath())[ FD ]
Line_2 $$ private void executeQRefresh(@NotNull List<String> chunkFiles) throws VcsException -->Line_8 $$ new HgCommandExecutor(myProject).execute(myRepository.getRoot(), "qrefresh", args, new HgCommandResultHandler() [ CD ]
Line_10 $$ if (HgErrorUtil.hasErrorsInCommandExecution(result)) -->Line_11 $$ new HgCommandResultNotifier(myProject).notifyError(result, "QRefresh Failed", "Could not amend selected changes to newly created patch")[ CD ]
Line_3 $$ List<String> args = ContainerUtil.newArrayList()-->Line_6 $$ args.add("-s")[ FD ]
Line_8 $$ new HgCommandExecutor(myProject).execute(myRepository.getRoot(), "qrefresh", args, new HgCommandResultHandler() -->Line_11 $$ new HgCommandResultNotifier(myProject).notifyError(result, "QRefresh Failed", "Could not amend selected changes to newly created patch")[ FD ]
Line_2 $$ private void executeQRefresh(@NotNull List<String> chunkFiles) throws VcsException -->Line_4 $$ args.add("-l")[ CD ]
Line_2 $$ private void executeQRefresh(@NotNull List<String> chunkFiles) throws VcsException -->Line_5 $$ args.add(saveCommitMessage().getAbsolutePath())[ CD ]
Line_3 $$ List<String> args = ContainerUtil.newArrayList()-->Line_4 $$ args.add("-l")[ FD ]
Line_2 $$ private void executeQRefresh(@NotNull List<String> chunkFiles) throws VcsException -->Line_7 $$ args.addAll(chunkFiles)[ CD ]
Line_8 $$ new HgCommandExecutor(myProject).execute(myRepository.getRoot(), "qrefresh", args, new HgCommandResultHandler() -->Line_10 $$ if (HgErrorUtil.hasErrorsInCommandExecution(result)) [ FD ]
Line_3 $$ List<String> args = ContainerUtil.newArrayList()-->Line_8 $$ new HgCommandExecutor(myProject).execute(myRepository.getRoot(), "qrefresh", args, new HgCommandResultHandler() [ FD ]
Line_3 $$ List<String> args = ContainerUtil.newArrayList()-->Line_7 $$ args.addAll(chunkFiles)[ FD ]
