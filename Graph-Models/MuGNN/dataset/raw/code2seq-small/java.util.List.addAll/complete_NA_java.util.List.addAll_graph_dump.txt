Line_2 $$ public int complete(String buffer, int cursor, List<CharSequence> candidates) -->Line_3 $$ if (cursor <= 0) [ FD ]
Line_8 $$ String schemaName = queryRunner.getSession().getSchema()-->Line_10 $$ List<String> functionNames = functionCache.getIfPresent(schemaName)[ FD ]
Line_11 $$ List<String> tableNames = tableCache.getIfPresent(schemaName)-->Line_16 $$ if (tableNames != null) [ FD ]
Line_10 $$ List<String> functionNames = functionCache.getIfPresent(schemaName)-->Line_13 $$ if (functionNames != null) [ FD ]
Line_2 $$ public int complete(String buffer, int cursor, List<CharSequence> candidates) -->Line_9 $$ if (schemaName != null) [ CD ]
Line_2 $$ public int complete(String buffer, int cursor, List<CharSequence> candidates) -->Line_6 $$ int blankPos = findLastBlank(buffer.substring(0, cursor))[ FD ]
Line_3 $$ if (cursor <= 0) -->Line_4 $$ return cursor[ CD ]
Line_7 $$ String prefix = buffer.substring(blankPos + 1, cursor)-->Line_14 $$ sortedCandidates.addAll(filterResults(functionNames, prefix))[ FD ]
Line_12 $$ SortedSet<String> sortedCandidates = new TreeSet()-->Line_19 $$ candidates.addAll(sortedCandidates)[ FD ]
Line_2 $$ public int complete(String buffer, int cursor, List<CharSequence> candidates) -->Line_6 $$ int blankPos = findLastBlank(buffer.substring(0, cursor))[ CD ]
Line_2 $$ public int complete(String buffer, int cursor, List<CharSequence> candidates) -->Line_3 $$ if (cursor <= 0) [ CD ]
Line_9 $$ if (schemaName != null) -->Line_16 $$ if (tableNames != null) [ CD ]
Line_16 $$ if (tableNames != null) -->Line_17 $$ sortedCandidates.addAll(filterResults(tableNames, prefix))[ CD ]
Line_8 $$ String schemaName = queryRunner.getSession().getSchema()-->Line_9 $$ if (schemaName != null) [ FD ]
Line_10 $$ List<String> functionNames = functionCache.getIfPresent(schemaName)-->Line_14 $$ sortedCandidates.addAll(filterResults(functionNames, prefix))[ FD ]
Line_7 $$ String prefix = buffer.substring(blankPos + 1, cursor)-->Line_17 $$ sortedCandidates.addAll(filterResults(tableNames, prefix))[ FD ]
Line_9 $$ if (schemaName != null) -->Line_19 $$ candidates.addAll(sortedCandidates)[ CD ]
Line_2 $$ public int complete(String buffer, int cursor, List<CharSequence> candidates) -->Line_8 $$ String schemaName = queryRunner.getSession().getSchema()[ CD ]
Line_2 $$ public int complete(String buffer, int cursor, List<CharSequence> candidates) -->Line_19 $$ candidates.addAll(sortedCandidates)[ FD ]
Line_8 $$ String schemaName = queryRunner.getSession().getSchema()-->Line_11 $$ List<String> tableNames = tableCache.getIfPresent(schemaName)[ FD ]
Line_11 $$ List<String> tableNames = tableCache.getIfPresent(schemaName)-->Line_17 $$ sortedCandidates.addAll(filterResults(tableNames, prefix))[ FD ]
Line_12 $$ SortedSet<String> sortedCandidates = new TreeSet()-->Line_17 $$ sortedCandidates.addAll(filterResults(tableNames, prefix))[ FD ]
Line_2 $$ public int complete(String buffer, int cursor, List<CharSequence> candidates) -->Line_7 $$ String prefix = buffer.substring(blankPos + 1, cursor)[ FD ]
Line_9 $$ if (schemaName != null) -->Line_12 $$ SortedSet<String> sortedCandidates = new TreeSet()[ CD ]
Line_9 $$ if (schemaName != null) -->Line_13 $$ if (functionNames != null) [ CD ]
Line_2 $$ public int complete(String buffer, int cursor, List<CharSequence> candidates) -->Line_21 $$ return blankPos + 1[ CD ]
Line_2 $$ public int complete(String buffer, int cursor, List<CharSequence> candidates) -->Line_7 $$ String prefix = buffer.substring(blankPos + 1, cursor)[ CD ]
Line_9 $$ if (schemaName != null) -->Line_11 $$ List<String> tableNames = tableCache.getIfPresent(schemaName)[ CD ]
Line_12 $$ SortedSet<String> sortedCandidates = new TreeSet()-->Line_14 $$ sortedCandidates.addAll(filterResults(functionNames, prefix))[ FD ]
Line_13 $$ if (functionNames != null) -->Line_14 $$ sortedCandidates.addAll(filterResults(functionNames, prefix))[ CD ]
Line_9 $$ if (schemaName != null) -->Line_10 $$ List<String> functionNames = functionCache.getIfPresent(schemaName)[ CD ]
