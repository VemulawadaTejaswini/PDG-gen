Line_3 $$ List<String> templates = new ArrayList<String>()-->Line_4 $$ templates.add("[ FD ]
Line_3 $$ List<String> templates = new ArrayList<String>()-->Line_5 $$ templates.add("[ FD ]
Line_2 $$ public static String[] constructFullTemplateArgument(boolean includeFiles, @NotNull HgVersion currentVersion) -->Line_6 $$ if (currentVersion.isParentRevisionTemplateSupported()) [ FD ]
Line_2 $$ public static String[] constructFullTemplateArgument(boolean includeFiles, @NotNull HgVersion currentVersion) -->Line_16 $$ templates.addAll(wrapIn(fileTemplates, currentVersion))[ CD ]
Line_3 $$ List<String> templates = new ArrayList<String>()-->Line_17 $$ return ArrayUtil.toStringArray(templates)[ FD ]
Line_15 $$ List<String> fileTemplates = ContainerUtil.newArrayList("file_adds", "file_mods", "file_dels", "file_copies")-->Line_16 $$ templates.addAll(wrapIn(fileTemplates, currentVersion))[ FD ]
Line_2 $$ public static String[] constructFullTemplateArgument(boolean includeFiles, @NotNull HgVersion currentVersion) -->Line_5 $$ templates.add("[ CD ]
Line_3 $$ List<String> templates = new ArrayList<String>()-->Line_9 $$ templates.add("[ FD ]
Line_2 $$ public static String[] constructFullTemplateArgument(boolean includeFiles, @NotNull HgVersion currentVersion) -->Line_12 $$ if (!includeFiles) [ FD ]
Line_2 $$ public static String[] constructFullTemplateArgument(boolean includeFiles, @NotNull HgVersion currentVersion) -->Line_3 $$ List<String> templates = new ArrayList<String>()[ CD ]
Line_2 $$ public static String[] constructFullTemplateArgument(boolean includeFiles, @NotNull HgVersion currentVersion) -->Line_16 $$ templates.addAll(wrapIn(fileTemplates, currentVersion))[ FD ]
Line_3 $$ List<String> templates = new ArrayList<String>()-->Line_13 $$ return ArrayUtil.toStringArray(templates)[ FD ]
Line_2 $$ public static String[] constructFullTemplateArgument(boolean includeFiles, @NotNull HgVersion currentVersion) -->Line_6 $$ if (currentVersion.isParentRevisionTemplateSupported()) [ CD ]
Line_6 $$ if (currentVersion.isParentRevisionTemplateSupported()) -->Line_7 $$ templates.add("[ CD ]
Line_2 $$ public static String[] constructFullTemplateArgument(boolean includeFiles, @NotNull HgVersion currentVersion) -->Line_15 $$ List<String> fileTemplates = ContainerUtil.newArrayList("file_adds", "file_mods", "file_dels", "file_copies")[ CD ]
Line_2 $$ public static String[] constructFullTemplateArgument(boolean includeFiles, @NotNull HgVersion currentVersion) -->Line_17 $$ return ArrayUtil.toStringArray(templates)[ CD ]
Line_2 $$ public static String[] constructFullTemplateArgument(boolean includeFiles, @NotNull HgVersion currentVersion) -->Line_12 $$ if (!includeFiles) [ CD ]
Line_3 $$ List<String> templates = new ArrayList<String>()-->Line_11 $$ templates.addAll(Arrays.asList("[ FD ]
Line_2 $$ public static String[] constructFullTemplateArgument(boolean includeFiles, @NotNull HgVersion currentVersion) -->Line_4 $$ templates.add("[ CD ]
Line_3 $$ List<String> templates = new ArrayList<String>()-->Line_16 $$ templates.addAll(wrapIn(fileTemplates, currentVersion))[ FD ]
Line_2 $$ public static String[] constructFullTemplateArgument(boolean includeFiles, @NotNull HgVersion currentVersion) -->Line_11 $$ templates.addAll(Arrays.asList("[ CD ]
Line_6 $$ if (currentVersion.isParentRevisionTemplateSupported()) -->Line_9 $$ templates.add("[ CD ]
Line_12 $$ if (!includeFiles) -->Line_13 $$ return ArrayUtil.toStringArray(templates)[ CD ]
Line_3 $$ List<String> templates = new ArrayList<String>()-->Line_7 $$ templates.add("[ FD ]
