Line_3 $$ ConcurrentMapCache serializeCache = createCacheWithStoreByValue()-->Line_4 $$ assertTrue(serializeCache.isStoreByValue())[ FD ]
Line_6 $$ List<String> content = new ArrayList()-->Line_7 $$ content.addAll(Arrays.asList("one", "two", "three"))[ FD ]
Line_2 $$ public void testSerializer() -->Line_5 $$ Object key = createRandomKey()[ CD ]
Line_6 $$ List<String> content = new ArrayList()-->Line_9 $$ content.remove(0)[ FD ]
Line_2 $$ public void testSerializer() -->Line_3 $$ ConcurrentMapCache serializeCache = createCacheWithStoreByValue()[ CD ]
Line_5 $$ Object key = createRandomKey()-->Line_8 $$ serializeCache.put(key, content)[ FD ]
Line_2 $$ public void testSerializer() -->Line_10 $$ List<String> entry = (List<String>) serializeCache.get(key).get()[ CD ]
Line_3 $$ ConcurrentMapCache serializeCache = createCacheWithStoreByValue()-->Line_10 $$ List<String> entry = (List<String>) serializeCache.get(key).get()[ FD ]
Line_10 $$ List<String> entry = (List<String>) serializeCache.get(key).get()-->Line_12 $$ assertEquals("one", entry.get(0))[ FD ]
Line_6 $$ List<String> content = new ArrayList()-->Line_8 $$ serializeCache.put(key, content)[ FD ]
Line_3 $$ ConcurrentMapCache serializeCache = createCacheWithStoreByValue()-->Line_8 $$ serializeCache.put(key, content)[ FD ]
Line_10 $$ List<String> entry = (List<String>) serializeCache.get(key).get()-->Line_11 $$ assertEquals(3, entry.size())[ FD ]
Line_2 $$ public void testSerializer() -->Line_9 $$ content.remove(0)[ CD ]
Line_2 $$ public void testSerializer() -->Line_8 $$ serializeCache.put(key, content)[ CD ]
Line_2 $$ public void testSerializer() -->Line_7 $$ content.addAll(Arrays.asList("one", "two", "three"))[ CD ]
Line_5 $$ Object key = createRandomKey()-->Line_10 $$ List<String> entry = (List<String>) serializeCache.get(key).get()[ FD ]
Line_2 $$ public void testSerializer() -->Line_11 $$ assertEquals(3, entry.size())[ CD ]
Line_2 $$ public void testSerializer() -->Line_6 $$ List<String> content = new ArrayList()[ CD ]
Line_2 $$ public void testSerializer() -->Line_4 $$ assertTrue(serializeCache.isStoreByValue())[ CD ]
Line_2 $$ public void testSerializer() -->Line_12 $$ assertEquals("one", entry.get(0))[ CD ]
