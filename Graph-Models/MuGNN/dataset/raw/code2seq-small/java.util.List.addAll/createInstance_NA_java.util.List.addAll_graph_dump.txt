Line_16 $$ if (valueType != null) -->Line_22 $$ result.addAll(this.sourceList)[ CD ]
Line_2 $$ protected List<Object> createInstance() -->Line_12 $$ Class<?> valueType = null[ CD ]
Line_13 $$ if (this.targetListClass != null) -->Line_14 $$ valueType = GenericCollectionTypeResolver.getCollectionType(this.targetListClass)[ CD ]
Line_2 $$ protected List<Object> createInstance() -->Line_24 $$ return result[ CD ]
Line_8 $$ result = BeanUtils.instantiateClass(this.targetListClass)-->Line_19 $$ result.add(converter.convertIfNecessary(elem, valueType))[ FD ]
Line_12 $$ Class<?> valueType = null-->Line_14 $$ valueType = GenericCollectionTypeResolver.getCollectionType(this.targetListClass)[ FD ]
Line_8 $$ result = BeanUtils.instantiateClass(this.targetListClass)-->Line_10 $$ result = new ArrayList<Object>(this.sourceList.size())[ FD ]
Line_2 $$ protected List<Object> createInstance() -->Line_16 $$ if (valueType != null) [ CD ]
Line_2 $$ protected List<Object> createInstance() -->Line_3 $$ if (this.sourceList == null) [ CD ]
Line_12 $$ Class<?> valueType = null-->Line_16 $$ if (valueType != null) [ FD ]
Line_10 $$ result = new ArrayList<Object>(this.sourceList.size())-->Line_19 $$ result.add(converter.convertIfNecessary(elem, valueType))[ FD ]
Line_6 $$ List<Object> result = null-->Line_10 $$ result = new ArrayList<Object>(this.sourceList.size())[ FD ]
Line_7 $$ if (this.targetListClass != null) -->Line_8 $$ result = BeanUtils.instantiateClass(this.targetListClass)[ CD ]
Line_7 $$ if (this.targetListClass != null) -->Line_10 $$ result = new ArrayList<Object>(this.sourceList.size())[ CD ]
Line_17 $$ TypeConverter converter = getBeanTypeConverter()-->Line_19 $$ result.add(converter.convertIfNecessary(elem, valueType))[ FD ]
Line_2 $$ protected List<Object> createInstance() -->Line_13 $$ if (this.targetListClass != null) [ CD ]
Line_6 $$ List<Object> result = null-->Line_8 $$ result = BeanUtils.instantiateClass(this.targetListClass)[ FD ]
Line_14 $$ valueType = GenericCollectionTypeResolver.getCollectionType(this.targetListClass)-->Line_16 $$ if (valueType != null) [ FD ]
Line_6 $$ List<Object> result = null-->Line_19 $$ result.add(converter.convertIfNecessary(elem, valueType))[ FD ]
Line_8 $$ result = BeanUtils.instantiateClass(this.targetListClass)-->Line_22 $$ result.addAll(this.sourceList)[ FD ]
Line_10 $$ result = new ArrayList<Object>(this.sourceList.size())-->Line_22 $$ result.addAll(this.sourceList)[ FD ]
Line_2 $$ protected List<Object> createInstance() -->Line_7 $$ if (this.targetListClass != null) [ CD ]
Line_12 $$ Class<?> valueType = null-->Line_19 $$ result.add(converter.convertIfNecessary(elem, valueType))[ FD ]
Line_18 $$ for (Object elem : this.sourceList) -->Line_19 $$ result.add(converter.convertIfNecessary(elem, valueType))[ FD ]
Line_6 $$ List<Object> result = null-->Line_22 $$ result.addAll(this.sourceList)[ FD ]
Line_2 $$ protected List<Object> createInstance() -->Line_6 $$ List<Object> result = null[ CD ]
Line_14 $$ valueType = GenericCollectionTypeResolver.getCollectionType(this.targetListClass)-->Line_19 $$ result.add(converter.convertIfNecessary(elem, valueType))[ FD ]
Line_16 $$ if (valueType != null) -->Line_17 $$ TypeConverter converter = getBeanTypeConverter()[ CD ]
