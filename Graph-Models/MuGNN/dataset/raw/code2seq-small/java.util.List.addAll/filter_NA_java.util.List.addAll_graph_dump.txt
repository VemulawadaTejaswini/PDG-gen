Line_2 $$ private static void filter(List<Object> from, List<Object> to, String[] includes, String[] excludes, StringBuilder sb) -->Line_3 $$ if (includes.length == 0 && excludes.length == 0) [ CD ]
Line_8 $$ if (o instanceof Map) -->Line_11 $$ if (!innerInto.isEmpty()) [ CD ]
Line_9 $$ Map<String, Object> innerInto = new HashMap()-->Line_17 $$ if (!innerInto.isEmpty()) [ FD ]
Line_9 $$ Map<String, Object> innerInto = new HashMap()-->Line_11 $$ if (!innerInto.isEmpty()) [ FD ]
Line_9 $$ Map<String, Object> innerInto = new HashMap()-->Line_10 $$ filter((Map<String, Object>) o, innerInto, includes, excludes, sb)[ FD ]
Line_2 $$ private static void filter(List<Object> from, List<Object> to, String[] includes, String[] excludes, StringBuilder sb) -->Line_18 $$ to.add(innerInto)[ FD ]
Line_2 $$ private static void filter(List<Object> from, List<Object> to, String[] includes, String[] excludes, StringBuilder sb) -->Line_21 $$ to.add(o)[ FD ]
Line_9 $$ Map<String, Object> innerInto = new HashMap()-->Line_18 $$ to.add(innerInto)[ FD ]
Line_7 $$ for (Object o : from) -->Line_21 $$ to.add(o)[ FD ]
Line_11 $$ if (!innerInto.isEmpty()) -->Line_12 $$ to.add(innerInto)[ CD ]
Line_2 $$ private static void filter(List<Object> from, List<Object> to, String[] includes, String[] excludes, StringBuilder sb) -->Line_10 $$ filter((Map<String, Object>) o, innerInto, includes, excludes, sb)[ FD ]
Line_2 $$ private static void filter(List<Object> from, List<Object> to, String[] includes, String[] excludes, StringBuilder sb) -->Line_12 $$ to.add(innerInto)[ FD ]
Line_17 $$ if (!innerInto.isEmpty()) -->Line_18 $$ to.add(innerInto)[ CD ]
Line_2 $$ private static void filter(List<Object> from, List<Object> to, String[] includes, String[] excludes, StringBuilder sb) -->Line_16 $$ filter((List<Object>) o, innerInto, includes, excludes, sb)[ FD ]
Line_14 $$ if (o instanceof List) -->Line_17 $$ if (!innerInto.isEmpty()) [ CD ]
Line_3 $$ if (includes.length == 0 && excludes.length == 0) -->Line_5 $$ return[ CD ]
Line_2 $$ private static void filter(List<Object> from, List<Object> to, String[] includes, String[] excludes, StringBuilder sb) -->Line_4 $$ to.addAll(from)[ FD ]
Line_8 $$ if (o instanceof Map) -->Line_14 $$ if (o instanceof List) [ CD ]
Line_7 $$ for (Object o : from) -->Line_14 $$ if (o instanceof List) [ FD ]
Line_14 $$ if (o instanceof List) -->Line_16 $$ filter((List<Object>) o, innerInto, includes, excludes, sb)[ CD ]
Line_8 $$ if (o instanceof Map) -->Line_10 $$ filter((Map<String, Object>) o, innerInto, includes, excludes, sb)[ CD ]
Line_14 $$ if (o instanceof List) -->Line_21 $$ to.add(o)[ CD ]
Line_3 $$ if (includes.length == 0 && excludes.length == 0) -->Line_4 $$ to.addAll(from)[ CD ]
Line_7 $$ for (Object o : from) -->Line_8 $$ if (o instanceof Map) [ FD ]
Line_9 $$ Map<String, Object> innerInto = new HashMap()-->Line_16 $$ filter((List<Object>) o, innerInto, includes, excludes, sb)[ FD ]
Line_8 $$ if (o instanceof Map) -->Line_9 $$ Map<String, Object> innerInto = new HashMap()[ CD ]
Line_9 $$ Map<String, Object> innerInto = new HashMap()-->Line_12 $$ to.add(innerInto)[ FD ]
