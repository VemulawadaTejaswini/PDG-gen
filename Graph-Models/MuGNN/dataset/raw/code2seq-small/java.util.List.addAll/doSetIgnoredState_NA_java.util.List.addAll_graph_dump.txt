Line_4 $$ doChangeIgnoreStatus(new Runnable() -->Line_6 $$ if (ignored) [ CD ]
Line_3 $$ final List<String> paths = MavenUtil.collectPaths(MavenUtil.collectFiles(projects))-->Line_7 $$ myIgnoredFilesPaths.addAll(paths)[ FD ]
Line_2 $$ private void doSetIgnoredState(List<MavenProject> projects, final boolean ignored, boolean fromImport) -->Line_4 $$ doChangeIgnoreStatus(new Runnable() [ FD ]
Line_2 $$ private void doSetIgnoredState(List<MavenProject> projects, final boolean ignored, boolean fromImport) -->Line_3 $$ final List<String> paths = MavenUtil.collectPaths(MavenUtil.collectFiles(projects))[ FD ]
Line_6 $$ if (ignored) -->Line_9 $$ myIgnoredFilesPaths.removeAll(paths)[ CD ]
Line_6 $$ if (ignored) -->Line_7 $$ myIgnoredFilesPaths.addAll(paths)[ CD ]
Line_3 $$ final List<String> paths = MavenUtil.collectPaths(MavenUtil.collectFiles(projects))-->Line_9 $$ myIgnoredFilesPaths.removeAll(paths)[ FD ]
Line_2 $$ private void doSetIgnoredState(List<MavenProject> projects, final boolean ignored, boolean fromImport) -->Line_4 $$ doChangeIgnoreStatus(new Runnable() [ CD ]
Line_2 $$ private void doSetIgnoredState(List<MavenProject> projects, final boolean ignored, boolean fromImport) -->Line_3 $$ final List<String> paths = MavenUtil.collectPaths(MavenUtil.collectFiles(projects))[ CD ]
