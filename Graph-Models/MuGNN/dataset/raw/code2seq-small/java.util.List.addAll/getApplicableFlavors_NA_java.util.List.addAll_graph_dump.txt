Line_2 $$ public static List<PythonSdkFlavor> getApplicableFlavors(boolean addPlatformIndependent) -->Line_11 $$ if (addPlatformIndependent)[ CD ]
Line_3 $$ List<PythonSdkFlavor> result = new ArrayList<PythonSdkFlavor>()-->Line_12 $$ result.addAll(getPlatformIndependentFlavors())[ FD ]
Line_6 $$ if (SystemInfo.isMac) -->Line_7 $$ result.add(MacPythonSdkFlavor.INSTANCE)[ CD ]
Line_6 $$ if (SystemInfo.isMac) -->Line_8 $$ if (SystemInfo.isUnix) [ CD ]
Line_4 $$ if (SystemInfo.isWindows) -->Line_6 $$ if (SystemInfo.isMac) [ CD ]
Line_2 $$ public static List<PythonSdkFlavor> getApplicableFlavors(boolean addPlatformIndependent) -->Line_13 $$ return result[ CD ]
Line_2 $$ public static List<PythonSdkFlavor> getApplicableFlavors(boolean addPlatformIndependent) -->Line_3 $$ List<PythonSdkFlavor> result = new ArrayList<PythonSdkFlavor>()[ CD ]
Line_2 $$ public static List<PythonSdkFlavor> getApplicableFlavors(boolean addPlatformIndependent) -->Line_4 $$ if (SystemInfo.isWindows) [ CD ]
Line_4 $$ if (SystemInfo.isWindows) -->Line_5 $$ result.add(WinPythonSdkFlavor.INSTANCE)[ CD ]
Line_8 $$ if (SystemInfo.isUnix) -->Line_9 $$ result.add(UnixPythonSdkFlavor.INSTANCE)[ CD ]
Line_3 $$ List<PythonSdkFlavor> result = new ArrayList<PythonSdkFlavor>()-->Line_9 $$ result.add(UnixPythonSdkFlavor.INSTANCE)[ FD ]
Line_11 $$ if (addPlatformIndependent)-->Line_12 $$ result.addAll(getPlatformIndependentFlavors())[ CD ]
Line_3 $$ List<PythonSdkFlavor> result = new ArrayList<PythonSdkFlavor>()-->Line_7 $$ result.add(MacPythonSdkFlavor.INSTANCE)[ FD ]
Line_3 $$ List<PythonSdkFlavor> result = new ArrayList<PythonSdkFlavor>()-->Line_5 $$ result.add(WinPythonSdkFlavor.INSTANCE)[ FD ]
