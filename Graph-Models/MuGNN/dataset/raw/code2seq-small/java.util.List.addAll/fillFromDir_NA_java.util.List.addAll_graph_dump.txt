Line_7 $$ ProcessingContext context = new ProcessingContext()-->Line_9 $$ Object[] completionVariants = moduleType.getCompletionVariants("", getElement(), context)[ FD ]
Line_3 $$ if (targetDir != null) -->Line_4 $$ PsiFile initPy = targetDir.findFile(PyNames.INIT_DOT_PY)[ CD ]
Line_5 $$ if (initPy instanceof PyFile) -->Line_9 $$ Object[] completionVariants = moduleType.getCompletionVariants("", getElement(), context)[ CD ]
Line_10 $$ if (insertHandler != null) -->Line_11 $$ replaceInsertHandler(completionVariants, insertHandler)[ CD ]
Line_2 $$ private void fillFromDir(PsiDirectory targetDir, @Nullable InsertHandler<LookupElement> insertHandler) -->Line_10 $$ if (insertHandler != null) [ FD ]
Line_4 $$ PsiFile initPy = targetDir.findFile(PyNames.INIT_DOT_PY)-->Line_5 $$ if (initPy instanceof PyFile) [ FD ]
Line_9 $$ Object[] completionVariants = moduleType.getCompletionVariants("", getElement(), context)-->Line_13 $$ myObjects.addAll(Arrays.asList(completionVariants))[ FD ]
Line_2 $$ private void fillFromDir(PsiDirectory targetDir, @Nullable InsertHandler<LookupElement> insertHandler) -->Line_3 $$ if (targetDir != null) [ FD ]
Line_2 $$ private void fillFromDir(PsiDirectory targetDir, @Nullable InsertHandler<LookupElement> insertHandler) -->Line_11 $$ replaceInsertHandler(completionVariants, insertHandler)[ FD ]
Line_5 $$ if (initPy instanceof PyFile) -->Line_6 $$ PyModuleType moduleType = new PyModuleType((PyFile) initPy)[ CD ]
Line_2 $$ private void fillFromDir(PsiDirectory targetDir, @Nullable InsertHandler<LookupElement> insertHandler) -->Line_3 $$ if (targetDir != null) [ CD ]
Line_3 $$ if (targetDir != null) -->Line_5 $$ if (initPy instanceof PyFile) [ CD ]
Line_5 $$ if (initPy instanceof PyFile) -->Line_7 $$ ProcessingContext context = new ProcessingContext()[ CD ]
Line_5 $$ if (initPy instanceof PyFile) -->Line_8 $$ context.put(PyType.CTX_NAMES, myNamesAlready)[ CD ]
Line_2 $$ private void fillFromDir(PsiDirectory targetDir, @Nullable InsertHandler<LookupElement> insertHandler) -->Line_4 $$ PsiFile initPy = targetDir.findFile(PyNames.INIT_DOT_PY)[ FD ]
Line_2 $$ private void fillFromDir(PsiDirectory targetDir, @Nullable InsertHandler<LookupElement> insertHandler) -->Line_15 $$ myObjects.addAll(PyModuleType.getSubModuleVariants(targetDir, myElement, myNamesAlready))[ FD ]
Line_5 $$ if (initPy instanceof PyFile) -->Line_10 $$ if (insertHandler != null) [ CD ]
Line_7 $$ ProcessingContext context = new ProcessingContext()-->Line_8 $$ context.put(PyType.CTX_NAMES, myNamesAlready)[ FD ]
Line_9 $$ Object[] completionVariants = moduleType.getCompletionVariants("", getElement(), context)-->Line_11 $$ replaceInsertHandler(completionVariants, insertHandler)[ FD ]
Line_5 $$ if (initPy instanceof PyFile) -->Line_15 $$ myObjects.addAll(PyModuleType.getSubModuleVariants(targetDir, myElement, myNamesAlready))[ CD ]
Line_5 $$ if (initPy instanceof PyFile) -->Line_13 $$ myObjects.addAll(Arrays.asList(completionVariants))[ CD ]
Line_6 $$ PyModuleType moduleType = new PyModuleType((PyFile) initPy)-->Line_9 $$ Object[] completionVariants = moduleType.getCompletionVariants("", getElement(), context)[ FD ]
