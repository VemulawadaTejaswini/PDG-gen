Line_10 $$ if (contextLoader instanceof SmartContextLoader) -->Line_12 $$ smartContextLoader.processContextConfiguration(configAttributes)[ CD ]
Line_11 $$ SmartContextLoader smartContextLoader = (SmartContextLoader) contextLoader-->Line_12 $$ smartContextLoader.processContextConfiguration(configAttributes)[ FD ]
Line_10 $$ if (contextLoader instanceof SmartContextLoader) -->Line_16 $$ String[] processedLocations = contextLoader.processLocations(configAttributes.getDeclaringClass(), configAttributes.getLocations())[ CD ]
Line_2 $$ private MergedContextConfiguration buildMergedContextConfiguration(Class<?> testClass, List<ContextConfigurationAttributes> configAttributesList, MergedContextConfiguration parentConfig, CacheAwareContextLoaderDelegate cacheAwareContextLoaderDelegate) -->Line_28 $$ MergedTestPropertySources mergedTestPropertySources = TestPropertySourceUtils.buildMergedTestPropertySources(testClass)[ FD ]
Line_2 $$ private MergedContextConfiguration buildMergedContextConfiguration(Class<?> testClass, List<ContextConfigurationAttributes> configAttributesList, MergedContextConfiguration parentConfig, CacheAwareContextLoaderDelegate cacheAwareContextLoaderDelegate) -->Line_28 $$ MergedTestPropertySources mergedTestPropertySources = TestPropertySourceUtils.buildMergedTestPropertySources(testClass)[ CD ]
Line_6 $$ for (ContextConfigurationAttributes configAttributes : configAttributesList) -->Line_13 $$ locationsList.addAll(0, Arrays.asList(configAttributes.getLocations()))[ FD ]
Line_4 $$ List<String> locationsList = new ArrayList<String>()-->Line_17 $$ locationsList.addAll(0, Arrays.asList(processedLocations))[ FD ]
Line_3 $$ ContextLoader contextLoader = resolveContextLoader(testClass, configAttributesList)-->Line_16 $$ String[] processedLocations = contextLoader.processLocations(configAttributes.getDeclaringClass(), configAttributes.getLocations())[ FD ]
Line_2 $$ private MergedContextConfiguration buildMergedContextConfiguration(Class<?> testClass, List<ContextConfigurationAttributes> configAttributesList, MergedContextConfiguration parentConfig, CacheAwareContextLoaderDelegate cacheAwareContextLoaderDelegate) -->Line_23 $$ String[] locations = StringUtils.toStringArray(locationsList)[ CD ]
Line_2 $$ private MergedContextConfiguration buildMergedContextConfiguration(Class<?> testClass, List<ContextConfigurationAttributes> configAttributesList, MergedContextConfiguration parentConfig, CacheAwareContextLoaderDelegate cacheAwareContextLoaderDelegate) -->Line_3 $$ ContextLoader contextLoader = resolveContextLoader(testClass, configAttributesList)[ FD ]
Line_10 $$ if (contextLoader instanceof SmartContextLoader) -->Line_11 $$ SmartContextLoader smartContextLoader = (SmartContextLoader) contextLoader[ CD ]
Line_5 $$ List<Class<?>> classesList = new ArrayList<Class<?>>()-->Line_14 $$ classesList.addAll(0, Arrays.asList(configAttributes.getClasses()))[ FD ]
Line_10 $$ if (contextLoader instanceof SmartContextLoader) -->Line_17 $$ locationsList.addAll(0, Arrays.asList(processedLocations))[ CD ]
Line_3 $$ ContextLoader contextLoader = resolveContextLoader(testClass, configAttributesList)-->Line_10 $$ if (contextLoader instanceof SmartContextLoader) [ FD ]
Line_2 $$ private MergedContextConfiguration buildMergedContextConfiguration(Class<?> testClass, List<ContextConfigurationAttributes> configAttributesList, MergedContextConfiguration parentConfig, CacheAwareContextLoaderDelegate cacheAwareContextLoaderDelegate) -->Line_29 $$ MergedContextConfiguration mergedConfig = new MergedContextConfiguration(testClass, locations, classes, initializerClasses, activeProfiles, mergedTestPropertySources.getLocations(), mergedTestPropertySources.getProperties(), contextLoader, cacheAwareContextLoaderDelegate, parentConfig)[ CD ]
Line_7 $$ if (logger.isTraceEnabled()) -->Line_8 $$ logger.trace(String.format("Processing locations and classes for context configuration attributes %s", configAttributes))[ CD ]
Line_10 $$ if (contextLoader instanceof SmartContextLoader) -->Line_13 $$ locationsList.addAll(0, Arrays.asList(configAttributes.getLocations()))[ CD ]
Line_10 $$ if (contextLoader instanceof SmartContextLoader) -->Line_14 $$ classesList.addAll(0, Arrays.asList(configAttributes.getClasses()))[ CD ]
Line_2 $$ private MergedContextConfiguration buildMergedContextConfiguration(Class<?> testClass, List<ContextConfigurationAttributes> configAttributesList, MergedContextConfiguration parentConfig, CacheAwareContextLoaderDelegate cacheAwareContextLoaderDelegate) -->Line_25 $$ Set<Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>> initializerClasses = ApplicationContextInitializerUtils.resolveInitializerClasses(configAttributesList)[ FD ]
Line_29 $$ MergedContextConfiguration mergedConfig = new MergedContextConfiguration(testClass, locations, classes, initializerClasses, activeProfiles, mergedTestPropertySources.getLocations(), mergedTestPropertySources.getProperties(), contextLoader, cacheAwareContextLoaderDelegate, parentConfig)-->Line_30 $$ return processMergedContextConfiguration(mergedConfig)[ FD ]
Line_4 $$ List<String> locationsList = new ArrayList<String>()-->Line_23 $$ String[] locations = StringUtils.toStringArray(locationsList)[ FD ]
Line_6 $$ for (ContextConfigurationAttributes configAttributes : configAttributesList) -->Line_12 $$ smartContextLoader.processContextConfiguration(configAttributes)[ FD ]
Line_2 $$ private MergedContextConfiguration buildMergedContextConfiguration(Class<?> testClass, List<ContextConfigurationAttributes> configAttributesList, MergedContextConfiguration parentConfig, CacheAwareContextLoaderDelegate cacheAwareContextLoaderDelegate) -->Line_27 $$ String[] activeProfiles = ActiveProfilesUtils.resolveActiveProfiles(testClass)[ FD ]
Line_4 $$ List<String> locationsList = new ArrayList<String>()-->Line_13 $$ locationsList.addAll(0, Arrays.asList(configAttributes.getLocations()))[ FD ]
Line_5 $$ List<Class<?>> classesList = new ArrayList<Class<?>>()-->Line_24 $$ Class<?>[] classes = ClassUtils.toClassArray(classesList)[ FD ]
Line_2 $$ private MergedContextConfiguration buildMergedContextConfiguration(Class<?> testClass, List<ContextConfigurationAttributes> configAttributesList, MergedContextConfiguration parentConfig, CacheAwareContextLoaderDelegate cacheAwareContextLoaderDelegate) -->Line_5 $$ List<Class<?>> classesList = new ArrayList<Class<?>>()[ CD ]
Line_2 $$ private MergedContextConfiguration buildMergedContextConfiguration(Class<?> testClass, List<ContextConfigurationAttributes> configAttributesList, MergedContextConfiguration parentConfig, CacheAwareContextLoaderDelegate cacheAwareContextLoaderDelegate) -->Line_30 $$ return processMergedContextConfiguration(mergedConfig)[ CD ]
Line_2 $$ private MergedContextConfiguration buildMergedContextConfiguration(Class<?> testClass, List<ContextConfigurationAttributes> configAttributesList, MergedContextConfiguration parentConfig, CacheAwareContextLoaderDelegate cacheAwareContextLoaderDelegate) -->Line_24 $$ Class<?>[] classes = ClassUtils.toClassArray(classesList)[ CD ]
Line_16 $$ String[] processedLocations = contextLoader.processLocations(configAttributes.getDeclaringClass(), configAttributes.getLocations())-->Line_17 $$ locationsList.addAll(0, Arrays.asList(processedLocations))[ FD ]
Line_6 $$ for (ContextConfigurationAttributes configAttributes : configAttributesList) -->Line_19 $$ if (!configAttributes.isInheritLocations()) [ FD ]
Line_2 $$ private MergedContextConfiguration buildMergedContextConfiguration(Class<?> testClass, List<ContextConfigurationAttributes> configAttributesList, MergedContextConfiguration parentConfig, CacheAwareContextLoaderDelegate cacheAwareContextLoaderDelegate) -->Line_3 $$ ContextLoader contextLoader = resolveContextLoader(testClass, configAttributesList)[ CD ]
Line_2 $$ private MergedContextConfiguration buildMergedContextConfiguration(Class<?> testClass, List<ContextConfigurationAttributes> configAttributesList, MergedContextConfiguration parentConfig, CacheAwareContextLoaderDelegate cacheAwareContextLoaderDelegate) -->Line_4 $$ List<String> locationsList = new ArrayList<String>()[ CD ]
Line_6 $$ for (ContextConfigurationAttributes configAttributes : configAttributesList) -->Line_16 $$ String[] processedLocations = contextLoader.processLocations(configAttributes.getDeclaringClass(), configAttributes.getLocations())[ FD ]
Line_28 $$ MergedTestPropertySources mergedTestPropertySources = TestPropertySourceUtils.buildMergedTestPropertySources(testClass)-->Line_29 $$ MergedContextConfiguration mergedConfig = new MergedContextConfiguration(testClass, locations, classes, initializerClasses, activeProfiles, mergedTestPropertySources.getLocations(), mergedTestPropertySources.getProperties(), contextLoader, cacheAwareContextLoaderDelegate, parentConfig)[ FD ]
Line_2 $$ private MergedContextConfiguration buildMergedContextConfiguration(Class<?> testClass, List<ContextConfigurationAttributes> configAttributesList, MergedContextConfiguration parentConfig, CacheAwareContextLoaderDelegate cacheAwareContextLoaderDelegate) -->Line_27 $$ String[] activeProfiles = ActiveProfilesUtils.resolveActiveProfiles(testClass)[ CD ]
Line_2 $$ private MergedContextConfiguration buildMergedContextConfiguration(Class<?> testClass, List<ContextConfigurationAttributes> configAttributesList, MergedContextConfiguration parentConfig, CacheAwareContextLoaderDelegate cacheAwareContextLoaderDelegate) -->Line_25 $$ Set<Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>> initializerClasses = ApplicationContextInitializerUtils.resolveInitializerClasses(configAttributesList)[ CD ]
Line_6 $$ for (ContextConfigurationAttributes configAttributes : configAttributesList) -->Line_14 $$ classesList.addAll(0, Arrays.asList(configAttributes.getClasses()))[ FD ]
Line_6 $$ for (ContextConfigurationAttributes configAttributes : configAttributesList) -->Line_8 $$ logger.trace(String.format("Processing locations and classes for context configuration attributes %s", configAttributes))[ FD ]
