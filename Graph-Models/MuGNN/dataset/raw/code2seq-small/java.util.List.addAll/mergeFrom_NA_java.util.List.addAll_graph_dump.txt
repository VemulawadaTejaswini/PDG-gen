Line_3 $$ IndexEntry newChildEntry = parent.entries.remove(parentEntryIndex)-->Line_11 $$ entries.add(newChildEntry)[ FD ]
Line_2 $$ private void mergeFrom(IndexBlock right) throws Exception -->Line_17 $$ store.remove(right)[ FD ]
Line_4 $$ if (right.getPos().equals(parent.tailPos)) -->Line_7 $$ IndexEntry newParentEntry = parent.entries.get(parentEntryIndex)[ CD ]
Line_4 $$ if (right.getPos().equals(parent.tailPos)) -->Line_9 $$ newParentEntry.childIndexBlock = getPos()[ CD ]
Line_2 $$ private void mergeFrom(IndexBlock right) throws Exception -->Line_12 $$ entries.addAll(right.entries)[ CD ]
Line_2 $$ private void mergeFrom(IndexBlock right) throws Exception -->Line_4 $$ if (right.getPos().equals(parent.tailPos)) [ FD ]
Line_2 $$ private void mergeFrom(IndexBlock right) throws Exception -->Line_8 $$ assert newParentEntry.childIndexBlock.equals(right.getPos())[ FD ]
Line_2 $$ private void mergeFrom(IndexBlock right) throws Exception -->Line_4 $$ if (right.getPos().equals(parent.tailPos)) [ CD ]
Line_2 $$ private void mergeFrom(IndexBlock right) throws Exception -->Line_16 $$ store.write(this)[ CD ]
Line_4 $$ if (right.getPos().equals(parent.tailPos)) -->Line_5 $$ parent.tailPos = getPos()[ CD ]
Line_2 $$ private void mergeFrom(IndexBlock right) throws Exception -->Line_17 $$ store.remove(right)[ CD ]
Line_2 $$ private void mergeFrom(IndexBlock right) throws Exception -->Line_15 $$ store.write(parent)[ CD ]
Line_2 $$ private void mergeFrom(IndexBlock right) throws Exception -->Line_11 $$ entries.add(newChildEntry)[ CD ]
Line_2 $$ private void mergeFrom(IndexBlock right) throws Exception -->Line_3 $$ IndexEntry newChildEntry = parent.entries.remove(parentEntryIndex)[ CD ]
