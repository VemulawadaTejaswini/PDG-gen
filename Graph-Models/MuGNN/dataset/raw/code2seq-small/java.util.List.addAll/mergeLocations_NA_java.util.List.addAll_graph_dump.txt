Line_2 $$ private static String[] mergeLocations(List<TestPropertySourceAttributes> attributesList) -->Line_3 $$ final List<String> locations = new ArrayList<String>()[ CD ]
Line_8 $$ String[] locationsArray = TestContextResourceUtils.convertToClasspathResourcePaths(attrs.getDeclaringClass(), attrs.getLocations())-->Line_9 $$ locations.addAll(0, Arrays.<String>asList(locationsArray))[ FD ]
Line_4 $$ for (TestPropertySourceAttributes attrs : attributesList) -->Line_8 $$ String[] locationsArray = TestContextResourceUtils.convertToClasspathResourcePaths(attrs.getDeclaringClass(), attrs.getLocations())[ FD ]
Line_4 $$ for (TestPropertySourceAttributes attrs : attributesList) -->Line_10 $$ if (!attrs.isInheritLocations()) [ FD ]
Line_2 $$ private static String[] mergeLocations(List<TestPropertySourceAttributes> attributesList) -->Line_14 $$ return StringUtils.toStringArray(locations)[ CD ]
Line_3 $$ final List<String> locations = new ArrayList<String>()-->Line_14 $$ return StringUtils.toStringArray(locations)[ FD ]
Line_3 $$ final List<String> locations = new ArrayList<String>()-->Line_9 $$ locations.addAll(0, Arrays.<String>asList(locationsArray))[ FD ]
Line_4 $$ for (TestPropertySourceAttributes attrs : attributesList) -->Line_6 $$ logger.trace(String.format("Processing locations for TestPropertySource attributes %s", attrs))[ FD ]
Line_5 $$ if (logger.isTraceEnabled()) -->Line_6 $$ logger.trace(String.format("Processing locations for TestPropertySource attributes %s", attrs))[ CD ]
