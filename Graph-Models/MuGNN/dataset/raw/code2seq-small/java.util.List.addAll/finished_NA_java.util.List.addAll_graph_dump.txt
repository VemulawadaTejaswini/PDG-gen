Line_12 $$ for (int category : myMessages.keys()) -->Line_13 $$ messages.addAll(getMessages(category))[ FD ]
Line_2 $$ public void finished() -->Line_6 $$ if (!errors.isEmpty()) [ CD ]
Line_2 $$ public void finished() -->Line_5 $$ final List<String> warnings = getMessages(MessageCategory.WARNING)[ CD ]
Line_5 $$ final List<String> warnings = getMessages(MessageCategory.WARNING)-->Line_9 $$ NOTIFICATION_GROUP.createNotification(DebuggerBundle.message("status.hot.swap.completed.with.warnings"), buildMessage(warnings), NotificationType.WARNING, null).notify(getProject())[ FD ]
Line_8 $$ if (!warnings.isEmpty()) -->Line_10 $$ if (!myMessages.isEmpty()) [ CD ]
Line_10 $$ if (!myMessages.isEmpty()) -->Line_15 $$ NOTIFICATION_GROUP.createNotification(buildMessage(messages), NotificationType.INFORMATION).notify(getProject())[ CD ]
Line_10 $$ if (!myMessages.isEmpty()) -->Line_11 $$ List<String> messages = new ArrayList<String>()[ CD ]
Line_4 $$ final List<String> errors = getMessages(MessageCategory.ERROR)-->Line_6 $$ if (!errors.isEmpty()) [ FD ]
Line_11 $$ List<String> messages = new ArrayList<String>()-->Line_13 $$ messages.addAll(getMessages(category))[ FD ]
Line_2 $$ public void finished() -->Line_3 $$ super.finished()[ CD ]
Line_4 $$ final List<String> errors = getMessages(MessageCategory.ERROR)-->Line_7 $$ NOTIFICATION_GROUP.createNotification(DebuggerBundle.message("status.hot.swap.completed.with.errors"), buildMessage(errors), NotificationType.ERROR, null).notify(getProject())[ FD ]
Line_8 $$ if (!warnings.isEmpty()) -->Line_9 $$ NOTIFICATION_GROUP.createNotification(DebuggerBundle.message("status.hot.swap.completed.with.warnings"), buildMessage(warnings), NotificationType.WARNING, null).notify(getProject())[ CD ]
Line_11 $$ List<String> messages = new ArrayList<String>()-->Line_15 $$ NOTIFICATION_GROUP.createNotification(buildMessage(messages), NotificationType.INFORMATION).notify(getProject())[ FD ]
Line_6 $$ if (!errors.isEmpty()) -->Line_7 $$ NOTIFICATION_GROUP.createNotification(DebuggerBundle.message("status.hot.swap.completed.with.errors"), buildMessage(errors), NotificationType.ERROR, null).notify(getProject())[ CD ]
Line_5 $$ final List<String> warnings = getMessages(MessageCategory.WARNING)-->Line_8 $$ if (!warnings.isEmpty()) [ FD ]
Line_6 $$ if (!errors.isEmpty()) -->Line_8 $$ if (!warnings.isEmpty()) [ CD ]
Line_2 $$ public void finished() -->Line_4 $$ final List<String> errors = getMessages(MessageCategory.ERROR)[ CD ]
