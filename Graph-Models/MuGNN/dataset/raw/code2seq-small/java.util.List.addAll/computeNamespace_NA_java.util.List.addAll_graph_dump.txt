Line_2 $$ public static XsdNamespaceBuilder computeNamespace(final Reader reader) -->Line_12 $$ if (reader != null) [ FD ]
Line_2 $$ public static XsdNamespaceBuilder computeNamespace(final Reader reader) -->Line_13 $$ reader.close()[ FD ]
Line_4 $$ final XsdNamespaceBuilder builder = new XsdNamespaceBuilder()-->Line_8 $$ builder.getRootTags().addAll(tags)[ FD ]
Line_2 $$ public static XsdNamespaceBuilder computeNamespace(final Reader reader) -->Line_5 $$ NanoXmlUtil.parse(reader, builder)[ FD ]
Line_4 $$ final XsdNamespaceBuilder builder = new XsdNamespaceBuilder()-->Line_6 $$ HashSet<String> tags = new HashSet<String>(builder.getTags())[ FD ]
Line_4 $$ final XsdNamespaceBuilder builder = new XsdNamespaceBuilder()-->Line_5 $$ NanoXmlUtil.parse(reader, builder)[ FD ]
Line_12 $$ if (reader != null) -->Line_13 $$ reader.close()[ CD ]
Line_6 $$ HashSet<String> tags = new HashSet<String>(builder.getTags())-->Line_8 $$ builder.getRootTags().addAll(tags)[ FD ]
Line_6 $$ HashSet<String> tags = new HashSet<String>(builder.getTags())-->Line_7 $$ tags.removeAll(builder.myReferencedTags)[ FD ]
