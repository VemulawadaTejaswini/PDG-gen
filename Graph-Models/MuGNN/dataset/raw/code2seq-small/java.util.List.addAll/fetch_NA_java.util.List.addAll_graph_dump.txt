Line_4 $$ GetRequest getRequest = new GetRequest(termsLookup.index(), termsLookup.type(), termsLookup.id()).preference("_local").routing(termsLookup.routing())-->Line_6 $$ final GetResponse getResponse = client.get(getRequest).actionGet()[ FD ]
Line_6 $$ final GetResponse getResponse = client.get(getRequest).actionGet()-->Line_8 $$ List<Object> extractedValues = XContentMapValues.extractRawValues(termsLookup.path(), getResponse.getSourceAsMap())[ FD ]
Line_6 $$ final GetResponse getResponse = client.get(getRequest).actionGet()-->Line_7 $$ if (getResponse.isExists()) [ FD ]
Line_2 $$ private List<Object> fetch(TermsLookup termsLookup, Client client) -->Line_4 $$ GetRequest getRequest = new GetRequest(termsLookup.index(), termsLookup.type(), termsLookup.id()).preference("_local").routing(termsLookup.routing())[ FD ]
Line_3 $$ List<Object> terms = new ArrayList()-->Line_9 $$ terms.addAll(extractedValues)[ FD ]
Line_2 $$ private List<Object> fetch(TermsLookup termsLookup, Client client) -->Line_4 $$ GetRequest getRequest = new GetRequest(termsLookup.index(), termsLookup.type(), termsLookup.id()).preference("_local").routing(termsLookup.routing())[ CD ]
Line_4 $$ GetRequest getRequest = new GetRequest(termsLookup.index(), termsLookup.type(), termsLookup.id()).preference("_local").routing(termsLookup.routing())-->Line_5 $$ getRequest.copyContextAndHeadersFrom(SearchContext.current())[ FD ]
Line_2 $$ private List<Object> fetch(TermsLookup termsLookup, Client client) -->Line_11 $$ return terms[ CD ]
Line_2 $$ private List<Object> fetch(TermsLookup termsLookup, Client client) -->Line_6 $$ final GetResponse getResponse = client.get(getRequest).actionGet()[ CD ]
Line_7 $$ if (getResponse.isExists()) -->Line_9 $$ terms.addAll(extractedValues)[ CD ]
Line_2 $$ private List<Object> fetch(TermsLookup termsLookup, Client client) -->Line_8 $$ List<Object> extractedValues = XContentMapValues.extractRawValues(termsLookup.path(), getResponse.getSourceAsMap())[ FD ]
Line_2 $$ private List<Object> fetch(TermsLookup termsLookup, Client client) -->Line_5 $$ getRequest.copyContextAndHeadersFrom(SearchContext.current())[ CD ]
Line_8 $$ List<Object> extractedValues = XContentMapValues.extractRawValues(termsLookup.path(), getResponse.getSourceAsMap())-->Line_9 $$ terms.addAll(extractedValues)[ FD ]
Line_2 $$ private List<Object> fetch(TermsLookup termsLookup, Client client) -->Line_6 $$ final GetResponse getResponse = client.get(getRequest).actionGet()[ FD ]
Line_2 $$ private List<Object> fetch(TermsLookup termsLookup, Client client) -->Line_7 $$ if (getResponse.isExists()) [ CD ]
Line_7 $$ if (getResponse.isExists()) -->Line_8 $$ List<Object> extractedValues = XContentMapValues.extractRawValues(termsLookup.path(), getResponse.getSourceAsMap())[ CD ]
Line_2 $$ private List<Object> fetch(TermsLookup termsLookup, Client client) -->Line_3 $$ List<Object> terms = new ArrayList()[ CD ]
