Line_4 $$ final List<String> cmdLine = new LinkedList<String>()-->Line_8 $$ cmdLine.add(repo.getPath())[ FD ]
Line_2 $$ private ShellCommand createShellCommandWithArgs(@Nullable VirtualFile repo, @NotNull String operation, @Nullable List<String> arguments) -->Line_17 $$ if (HgVcs.HGENCODING == null) [ CD ]
Line_4 $$ final List<String> cmdLine = new LinkedList<String>()-->Line_13 $$ cmdLine.add(operation)[ FD ]
Line_6 $$ if (repo != null) -->Line_7 $$ cmdLine.add("--repository")[ CD ]
Line_2 $$ private ShellCommand createShellCommandWithArgs(@Nullable VirtualFile repo, @NotNull String operation, @Nullable List<String> arguments) -->Line_22 $$ return new ShellCommand(cmdLine, workingDir, myCharset)[ CD ]
Line_4 $$ final List<String> cmdLine = new LinkedList<String>()-->Line_5 $$ cmdLine.add(myVcs.getGlobalSettings().getHgExecutable())[ FD ]
Line_17 $$ if (HgVcs.HGENCODING == null) -->Line_19 $$ cmdLine.add(HgEncodingUtil.getNameFor(myCharset))[ CD ]
Line_4 $$ final List<String> cmdLine = new LinkedList<String>()-->Line_7 $$ cmdLine.add("--repository")[ FD ]
Line_4 $$ final List<String> cmdLine = new LinkedList<String>()-->Line_11 $$ cmdLine.add("extensions.mq=")[ FD ]
Line_2 $$ private ShellCommand createShellCommandWithArgs(@Nullable VirtualFile repo, @NotNull String operation, @Nullable List<String> arguments) -->Line_21 $$ String workingDir = repo != null ? repo.getPath() : null[ FD ]
Line_2 $$ private ShellCommand createShellCommandWithArgs(@Nullable VirtualFile repo, @NotNull String operation, @Nullable List<String> arguments) -->Line_10 $$ cmdLine.add("--config")[ CD ]
Line_14 $$ if (arguments != null && arguments.size() != 0) -->Line_15 $$ cmdLine.addAll(arguments)[ CD ]
Line_4 $$ final List<String> cmdLine = new LinkedList<String>()-->Line_12 $$ cmdLine.addAll(DEFAULT_OPTIONS)[ FD ]
Line_2 $$ private ShellCommand createShellCommandWithArgs(@Nullable VirtualFile repo, @NotNull String operation, @Nullable List<String> arguments) -->Line_6 $$ if (repo != null) [ FD ]
Line_17 $$ if (HgVcs.HGENCODING == null) -->Line_18 $$ cmdLine.add("--encoding")[ CD ]
Line_2 $$ private ShellCommand createShellCommandWithArgs(@Nullable VirtualFile repo, @NotNull String operation, @Nullable List<String> arguments) -->Line_3 $$ logCommand(operation, arguments)[ FD ]
Line_2 $$ private ShellCommand createShellCommandWithArgs(@Nullable VirtualFile repo, @NotNull String operation, @Nullable List<String> arguments) -->Line_12 $$ cmdLine.addAll(DEFAULT_OPTIONS)[ CD ]
Line_4 $$ final List<String> cmdLine = new LinkedList<String>()-->Line_19 $$ cmdLine.add(HgEncodingUtil.getNameFor(myCharset))[ FD ]
Line_2 $$ private ShellCommand createShellCommandWithArgs(@Nullable VirtualFile repo, @NotNull String operation, @Nullable List<String> arguments) -->Line_5 $$ cmdLine.add(myVcs.getGlobalSettings().getHgExecutable())[ CD ]
Line_2 $$ private ShellCommand createShellCommandWithArgs(@Nullable VirtualFile repo, @NotNull String operation, @Nullable List<String> arguments) -->Line_13 $$ cmdLine.add(operation)[ FD ]
Line_2 $$ private ShellCommand createShellCommandWithArgs(@Nullable VirtualFile repo, @NotNull String operation, @Nullable List<String> arguments) -->Line_4 $$ final List<String> cmdLine = new LinkedList<String>()[ CD ]
Line_2 $$ private ShellCommand createShellCommandWithArgs(@Nullable VirtualFile repo, @NotNull String operation, @Nullable List<String> arguments) -->Line_13 $$ cmdLine.add(operation)[ CD ]
Line_2 $$ private ShellCommand createShellCommandWithArgs(@Nullable VirtualFile repo, @NotNull String operation, @Nullable List<String> arguments) -->Line_8 $$ cmdLine.add(repo.getPath())[ FD ]
Line_6 $$ if (repo != null) -->Line_8 $$ cmdLine.add(repo.getPath())[ CD ]
Line_2 $$ private ShellCommand createShellCommandWithArgs(@Nullable VirtualFile repo, @NotNull String operation, @Nullable List<String> arguments) -->Line_14 $$ if (arguments != null && arguments.size() != 0) [ FD ]
Line_2 $$ private ShellCommand createShellCommandWithArgs(@Nullable VirtualFile repo, @NotNull String operation, @Nullable List<String> arguments) -->Line_6 $$ if (repo != null) [ CD ]
Line_2 $$ private ShellCommand createShellCommandWithArgs(@Nullable VirtualFile repo, @NotNull String operation, @Nullable List<String> arguments) -->Line_11 $$ cmdLine.add("extensions.mq=")[ CD ]
Line_2 $$ private ShellCommand createShellCommandWithArgs(@Nullable VirtualFile repo, @NotNull String operation, @Nullable List<String> arguments) -->Line_21 $$ String workingDir = repo != null ? repo.getPath() : null[ CD ]
Line_4 $$ final List<String> cmdLine = new LinkedList<String>()-->Line_15 $$ cmdLine.addAll(arguments)[ FD ]
Line_4 $$ final List<String> cmdLine = new LinkedList<String>()-->Line_10 $$ cmdLine.add("--config")[ FD ]
Line_4 $$ final List<String> cmdLine = new LinkedList<String>()-->Line_18 $$ cmdLine.add("--encoding")[ FD ]
Line_2 $$ private ShellCommand createShellCommandWithArgs(@Nullable VirtualFile repo, @NotNull String operation, @Nullable List<String> arguments) -->Line_15 $$ cmdLine.addAll(arguments)[ FD ]
Line_2 $$ private ShellCommand createShellCommandWithArgs(@Nullable VirtualFile repo, @NotNull String operation, @Nullable List<String> arguments) -->Line_14 $$ if (arguments != null && arguments.size() != 0) [ CD ]
Line_2 $$ private ShellCommand createShellCommandWithArgs(@Nullable VirtualFile repo, @NotNull String operation, @Nullable List<String> arguments) -->Line_3 $$ logCommand(operation, arguments)[ CD ]
