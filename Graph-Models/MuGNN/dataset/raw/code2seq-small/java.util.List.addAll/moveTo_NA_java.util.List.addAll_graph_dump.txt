Line_2 $$ public static <T> void moveTo(List<T> sourceList, List<T> moveList, int index) -->Line_3 $$ if (index < 0 || index >= sourceList.size()) [ FD ]
Line_7 $$ if (moveList.contains(moveBeforeObject)) -->Line_11 $$ newMoveList.remove(moveBeforeObject)[ CD ]
Line_2 $$ public static <T> void moveTo(List<T> sourceList, List<T> moveList, int index) -->Line_20 $$ if (index > sourceList.size() - 1) [ CD ]
Line_7 $$ if (moveList.contains(moveBeforeObject)) -->Line_12 $$ moveTo(sourceList, newMoveList, index + 1)[ CD ]
Line_2 $$ public static <T> void moveTo(List<T> sourceList, List<T> moveList, int index) -->Line_6 $$ T moveBeforeObject = sourceList.get(index)[ FD ]
Line_2 $$ public static <T> void moveTo(List<T> sourceList, List<T> moveList, int index) -->Line_16 $$ index = sourceList.indexOf(moveBeforeObject)[ CD ]
Line_2 $$ public static <T> void moveTo(List<T> sourceList, List<T> moveList, int index) -->Line_7 $$ if (moveList.contains(moveBeforeObject)) [ FD ]
Line_2 $$ public static <T> void moveTo(List<T> sourceList, List<T> moveList, int index) -->Line_17 $$ if (index < 0) [ FD ]
Line_2 $$ public static <T> void moveTo(List<T> sourceList, List<T> moveList, int index) -->Line_23 $$ sourceList.addAll(index, moveList)[ FD ]
Line_3 $$ if (index < 0 || index >= sourceList.size()) -->Line_4 $$ return[ CD ]
Line_2 $$ public static <T> void moveTo(List<T> sourceList, List<T> moveList, int index) -->Line_17 $$ if (index < 0) [ CD ]
Line_16 $$ index = sourceList.indexOf(moveBeforeObject)-->Line_23 $$ sourceList.addAll(index, moveList)[ FD ]
Line_2 $$ public static <T> void moveTo(List<T> sourceList, List<T> moveList, int index) -->Line_3 $$ if (index < 0 || index >= sourceList.size()) [ CD ]
Line_2 $$ public static <T> void moveTo(List<T> sourceList, List<T> moveList, int index) -->Line_6 $$ T moveBeforeObject = sourceList.get(index)[ CD ]
Line_18 $$ index = 0-->Line_20 $$ if (index > sourceList.size() - 1) [ FD ]
Line_9 $$ List<T> newMoveList = new ArrayList<T>(moveList)-->Line_11 $$ newMoveList.remove(moveBeforeObject)[ FD ]
Line_7 $$ if (moveList.contains(moveBeforeObject)) -->Line_13 $$ return[ CD ]
Line_2 $$ public static <T> void moveTo(List<T> sourceList, List<T> moveList, int index) -->Line_20 $$ if (index > sourceList.size() - 1) [ FD ]
Line_2 $$ public static <T> void moveTo(List<T> sourceList, List<T> moveList, int index) -->Line_12 $$ moveTo(sourceList, newMoveList, index + 1)[ FD ]
Line_2 $$ public static <T> void moveTo(List<T> sourceList, List<T> moveList, int index) -->Line_15 $$ sourceList.removeAll(moveList)[ CD ]
Line_2 $$ public static <T> void moveTo(List<T> sourceList, List<T> moveList, int index) -->Line_23 $$ sourceList.addAll(index, moveList)[ CD ]
Line_7 $$ if (moveList.contains(moveBeforeObject)) -->Line_9 $$ List<T> newMoveList = new ArrayList<T>(moveList)[ CD ]
Line_16 $$ index = sourceList.indexOf(moveBeforeObject)-->Line_20 $$ if (index > sourceList.size() - 1) [ FD ]
Line_21 $$ index = sourceList.size() - 1-->Line_23 $$ sourceList.addAll(index, moveList)[ FD ]
Line_2 $$ public static <T> void moveTo(List<T> sourceList, List<T> moveList, int index) -->Line_18 $$ index = 0[ FD ]
Line_2 $$ public static <T> void moveTo(List<T> sourceList, List<T> moveList, int index) -->Line_21 $$ index = sourceList.size() - 1[ FD ]
Line_6 $$ T moveBeforeObject = sourceList.get(index)-->Line_11 $$ newMoveList.remove(moveBeforeObject)[ FD ]
Line_18 $$ index = 0-->Line_23 $$ sourceList.addAll(index, moveList)[ FD ]
Line_16 $$ index = sourceList.indexOf(moveBeforeObject)-->Line_17 $$ if (index < 0) [ FD ]
Line_2 $$ public static <T> void moveTo(List<T> sourceList, List<T> moveList, int index) -->Line_16 $$ index = sourceList.indexOf(moveBeforeObject)[ FD ]
Line_6 $$ T moveBeforeObject = sourceList.get(index)-->Line_16 $$ index = sourceList.indexOf(moveBeforeObject)[ FD ]
Line_2 $$ public static <T> void moveTo(List<T> sourceList, List<T> moveList, int index) -->Line_7 $$ if (moveList.contains(moveBeforeObject)) [ CD ]
Line_9 $$ List<T> newMoveList = new ArrayList<T>(moveList)-->Line_12 $$ moveTo(sourceList, newMoveList, index + 1)[ FD ]
Line_20 $$ if (index > sourceList.size() - 1) -->Line_21 $$ index = sourceList.size() - 1[ CD ]
Line_16 $$ index = sourceList.indexOf(moveBeforeObject)-->Line_21 $$ index = sourceList.size() - 1[ FD ]
Line_17 $$ if (index < 0) -->Line_18 $$ index = 0[ CD ]
Line_6 $$ T moveBeforeObject = sourceList.get(index)-->Line_7 $$ if (moveList.contains(moveBeforeObject)) [ FD ]
Line_18 $$ index = 0-->Line_21 $$ index = sourceList.size() - 1[ FD ]
Line_2 $$ public static <T> void moveTo(List<T> sourceList, List<T> moveList, int index) -->Line_15 $$ sourceList.removeAll(moveList)[ FD ]
Line_16 $$ index = sourceList.indexOf(moveBeforeObject)-->Line_18 $$ index = 0[ FD ]
