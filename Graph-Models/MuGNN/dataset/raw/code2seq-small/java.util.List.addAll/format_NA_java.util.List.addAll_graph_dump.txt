Line_26 $$ if (!fsImage.confirmFormat(force, isInteractive)) -->Line_27 $$ return true[ CD ]
Line_7 $$ if (UserGroupInformation.isSecurityEnabled()) -->Line_9 $$ SecurityUtil.login(conf, DFS_NAMENODE_KEYTAB_FILE_KEY, DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY, socAddr.getHostName())[ CD ]
Line_17 $$ String clusterId = StartupOption.FORMAT.getClusterId()-->Line_29 $$ fsImage.format(fsn, clusterId)[ FD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_8 $$ InetSocketAddress socAddr = getAddress(conf)[ FD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_9 $$ SecurityUtil.login(conf, DFS_NAMENODE_KEYTAB_FILE_KEY, DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY, socAddr.getHostName())[ FD ]
Line_4 $$ String namenodeId = HAUtil.getNameNodeId(conf, nsId)-->Line_5 $$ initializeGenericKeys(conf, nsId, namenodeId)[ FD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_15 $$ dirsToPrompt.addAll(sharedDirs)[ CD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_4 $$ String namenodeId = HAUtil.getNameNodeId(conf, nsId)[ CD ]
Line_19 $$ clusterId = NNStorage.newClusterID()-->Line_29 $$ fsImage.format(fsn, clusterId)[ FD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_16 $$ List<URI> editDirsToFormat = FSNamesystem.getNamespaceEditsDirs(conf)[ FD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_6 $$ checkAllowFormat(conf)[ CD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_14 $$ dirsToPrompt.addAll(nameDirsToFormat)[ CD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_12 $$ List<URI> sharedDirs = FSNamesystem.getSharedEditsDirs(conf)[ CD ]
Line_18 $$ if (clusterId == null || clusterId.equals("")) -->Line_19 $$ clusterId = NNStorage.newClusterID()[ CD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_5 $$ initializeGenericKeys(conf, nsId, namenodeId)[ CD ]
Line_3 $$ String nsId = DFSUtil.getNamenodeNameServiceId(conf)-->Line_5 $$ initializeGenericKeys(conf, nsId, namenodeId)[ FD ]
Line_12 $$ List<URI> sharedDirs = FSNamesystem.getSharedEditsDirs(conf)-->Line_15 $$ dirsToPrompt.addAll(sharedDirs)[ FD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_3 $$ String nsId = DFSUtil.getNamenodeNameServiceId(conf)[ FD ]
Line_3 $$ String nsId = DFSUtil.getNamenodeNameServiceId(conf)-->Line_4 $$ String namenodeId = HAUtil.getNameNodeId(conf, nsId)[ FD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_12 $$ List<URI> sharedDirs = FSNamesystem.getSharedEditsDirs(conf)[ FD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_26 $$ if (!fsImage.confirmFormat(force, isInteractive)) [ FD ]
Line_8 $$ InetSocketAddress socAddr = getAddress(conf)-->Line_9 $$ SecurityUtil.login(conf, DFS_NAMENODE_KEYTAB_FILE_KEY, DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY, socAddr.getHostName())[ FD ]
Line_11 $$ Collection<URI> nameDirsToFormat = FSNamesystem.getNamespaceDirs(conf)-->Line_14 $$ dirsToPrompt.addAll(nameDirsToFormat)[ FD ]
Line_13 $$ List<URI> dirsToPrompt = new ArrayList<URI>()-->Line_15 $$ dirsToPrompt.addAll(sharedDirs)[ FD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_4 $$ String namenodeId = HAUtil.getNameNodeId(conf, nsId)[ FD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_16 $$ List<URI> editDirsToFormat = FSNamesystem.getNamespaceEditsDirs(conf)[ CD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_13 $$ List<URI> dirsToPrompt = new ArrayList<URI>()[ CD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_11 $$ Collection<URI> nameDirsToFormat = FSNamesystem.getNamespaceDirs(conf)[ CD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_21 $$ System.out.println("Formatting using clusterid: " + clusterId)[ CD ]
Line_22 $$ FSImage fsImage = new FSImage(conf, nameDirsToFormat, editDirsToFormat)-->Line_32 $$ fsImage.close()[ FD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_6 $$ checkAllowFormat(conf)[ FD ]
Line_22 $$ FSImage fsImage = new FSImage(conf, nameDirsToFormat, editDirsToFormat)-->Line_26 $$ if (!fsImage.confirmFormat(force, isInteractive)) [ FD ]
Line_7 $$ if (UserGroupInformation.isSecurityEnabled()) -->Line_8 $$ InetSocketAddress socAddr = getAddress(conf)[ CD ]
Line_13 $$ List<URI> dirsToPrompt = new ArrayList<URI>()-->Line_14 $$ dirsToPrompt.addAll(nameDirsToFormat)[ FD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_5 $$ initializeGenericKeys(conf, nsId, namenodeId)[ FD ]
Line_17 $$ String clusterId = StartupOption.FORMAT.getClusterId()-->Line_19 $$ clusterId = NNStorage.newClusterID()[ FD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_35 $$ return false[ CD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_18 $$ if (clusterId == null || clusterId.equals("")) [ CD ]
Line_17 $$ String clusterId = StartupOption.FORMAT.getClusterId()-->Line_18 $$ if (clusterId == null || clusterId.equals("")) [ FD ]
Line_24 $$ FSNamesystem fsn = new FSNamesystem(conf, fsImage)-->Line_29 $$ fsImage.format(fsn, clusterId)[ FD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_3 $$ String nsId = DFSUtil.getNamenodeNameServiceId(conf)[ CD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_17 $$ String clusterId = StartupOption.FORMAT.getClusterId()[ CD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_22 $$ FSImage fsImage = new FSImage(conf, nameDirsToFormat, editDirsToFormat)[ CD ]
Line_22 $$ FSImage fsImage = new FSImage(conf, nameDirsToFormat, editDirsToFormat)-->Line_25 $$ fsImage.getEditLog().initJournalsForWrite()[ FD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_7 $$ if (UserGroupInformation.isSecurityEnabled()) [ CD ]
Line_22 $$ FSImage fsImage = new FSImage(conf, nameDirsToFormat, editDirsToFormat)-->Line_29 $$ fsImage.format(fsn, clusterId)[ FD ]
Line_2 $$ private static boolean format(Configuration conf, boolean force, boolean isInteractive) throws IOException -->Line_11 $$ Collection<URI> nameDirsToFormat = FSNamesystem.getNamespaceDirs(conf)[ FD ]
