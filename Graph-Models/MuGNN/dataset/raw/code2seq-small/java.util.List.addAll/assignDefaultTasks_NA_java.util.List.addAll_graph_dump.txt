Line_2 $$ private static void assignDefaultTasks(JUnit4Mockery context, final Project project, final String... defaultTasksArray) -->Line_3 $$ final List<String> defaultTaskList = new ArrayList<String>()[ CD ]
Line_2 $$ private static void assignDefaultTasks(JUnit4Mockery context, final Project project, final String... defaultTasksArray) -->Line_5 $$ defaultTaskList.addAll(Arrays.asList(defaultTasksArray))[ FD ]
Line_2 $$ private static void assignDefaultTasks(JUnit4Mockery context, final Project project, final String... defaultTasksArray) -->Line_4 $$ if (defaultTasksArray != null && defaultTasksArray.length != 0) [ CD ]
Line_2 $$ private static void assignDefaultTasks(JUnit4Mockery context, final Project project, final String... defaultTasksArray) -->Line_7 $$ context.checking(new Expectations() [ FD ]
Line_4 $$ if (defaultTasksArray != null && defaultTasksArray.length != 0) -->Line_5 $$ defaultTaskList.addAll(Arrays.asList(defaultTasksArray))[ CD ]
Line_3 $$ final List<String> defaultTaskList = new ArrayList<String>()-->Line_5 $$ defaultTaskList.addAll(Arrays.asList(defaultTasksArray))[ FD ]
Line_2 $$ private static void assignDefaultTasks(JUnit4Mockery context, final Project project, final String... defaultTasksArray) -->Line_7 $$ context.checking(new Expectations() [ CD ]
Line_3 $$ final List<String> defaultTaskList = new ArrayList<String>()-->Line_10 $$ will(returnValue(defaultTaskList))[ FD ]
Line_2 $$ private static void assignDefaultTasks(JUnit4Mockery context, final Project project, final String... defaultTasksArray) -->Line_9 $$ allowing(project).getDefaultTasks()[ FD ]
