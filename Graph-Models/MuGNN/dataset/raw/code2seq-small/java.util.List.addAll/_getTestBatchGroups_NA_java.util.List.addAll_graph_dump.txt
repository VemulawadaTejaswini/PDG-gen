Line_2 $$ private static String _getTestBatchGroups() throws Exception -->Line_12 $$ if (PropsValues.TEST_BATCH_RUN_TYPE.equals("sequential")) [ CD ]
Line_5 $$ List<String> classCommandNames = new ArrayList()-->Line_10 $$ classCommandNames.addAll(_getRunTestCaseCommandNames(propertyNames[i], propertyValues[i]))[ FD ]
Line_2 $$ private static String _getTestBatchGroups() throws Exception -->Line_6 $$ if (propertyNames.length != propertyValues.length) [ CD ]
Line_12 $$ if (PropsValues.TEST_BATCH_RUN_TYPE.equals("sequential")) -->Line_13 $$ return _getTestBatchSequentialGroups(classCommandNames)[ CD ]
Line_14 $$ if (PropsValues.TEST_BATCH_RUN_TYPE.equals("single")) -->Line_15 $$ return _getTestBatchSingleGroups(classCommandNames)[ CD ]
Line_5 $$ List<String> classCommandNames = new ArrayList()-->Line_15 $$ return _getTestBatchSingleGroups(classCommandNames)[ FD ]
Line_2 $$ private static String _getTestBatchGroups() throws Exception -->Line_4 $$ String[] propertyValues = PropsValues.TEST_BATCH_PROPERTY_VALUES[ CD ]
Line_2 $$ private static String _getTestBatchGroups() throws Exception -->Line_3 $$ String[] propertyNames = PropsValues.TEST_BATCH_PROPERTY_NAMES[ CD ]
Line_2 $$ private static String _getTestBatchGroups() throws Exception -->Line_9 $$ for (int i = 0; i < propertyNames.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < propertyNames.length; i++) -->Line_10 $$ classCommandNames.addAll(_getRunTestCaseCommandNames(propertyNames[i], propertyValues[i]))[ CD ]
Line_2 $$ private static String _getTestBatchGroups() throws Exception -->Line_5 $$ List<String> classCommandNames = new ArrayList()[ CD ]
Line_12 $$ if (PropsValues.TEST_BATCH_RUN_TYPE.equals("sequential")) -->Line_14 $$ if (PropsValues.TEST_BATCH_RUN_TYPE.equals("single")) [ CD ]
Line_5 $$ List<String> classCommandNames = new ArrayList()-->Line_13 $$ return _getTestBatchSequentialGroups(classCommandNames)[ FD ]
