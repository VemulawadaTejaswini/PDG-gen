Line_41 $$ for (Alias alias : request.aliases) -->Line_43 $$ if (request.template.equals(alias.name())) [ FD ]
Line_3 $$ List<String> validationErrors = new ArrayList()-->Line_5 $$ validationErrors.add("name must not contain a space")[ FD ]
Line_3 $$ List<String> validationErrors = new ArrayList()-->Line_23 $$ validationErrors.add("template must not contain a ','")[ FD ]
Line_16 $$ if (!request.name.toLowerCase(Locale.ROOT).equals(request.name)) -->Line_17 $$ validationErrors.add("name must be lower cased")[ CD ]
Line_3 $$ List<String> validationErrors = new ArrayList()-->Line_35 $$ validationErrors.addAll(indexSettingsValidation)[ FD ]
Line_3 $$ List<String> validationErrors = new ArrayList()-->Line_32 $$ validationErrors.add("template must not container the following characters " + Strings.INVALID_FILENAME_CHARS)[ FD ]
Line_25 $$ if (request.template.contains("#")) -->Line_26 $$ validationErrors.add("template must not contain a '#'")[ CD ]
Line_36 $$ if (!validationErrors.isEmpty()) -->Line_38 $$ validationException.addValidationErrors(validationErrors)[ CD ]
Line_2 $$ private void validate(PutRequest request) -->Line_16 $$ if (!request.name.toLowerCase(Locale.ROOT).equals(request.name)) [ CD ]
Line_2 $$ private void validate(PutRequest request) -->Line_36 $$ if (!validationErrors.isEmpty()) [ CD ]
Line_31 $$ if (!Strings.validFileNameExcludingAstrix(request.template)) -->Line_32 $$ validationErrors.add("template must not container the following characters " + Strings.INVALID_FILENAME_CHARS)[ CD ]
Line_36 $$ if (!validationErrors.isEmpty()) -->Line_37 $$ ValidationException validationException = new ValidationException()[ CD ]
Line_2 $$ private void validate(PutRequest request) -->Line_28 $$ if (request.template.startsWith("_")) [ CD ]
Line_2 $$ private void validate(PutRequest request) -->Line_7 $$ if (request.name.contains(",")) [ CD ]
Line_2 $$ private void validate(PutRequest request) -->Line_25 $$ if (request.template.contains("#")) [ CD ]
Line_10 $$ if (request.name.contains("#")) -->Line_11 $$ validationErrors.add("name must not contain a '#'")[ CD ]
Line_2 $$ private void validate(PutRequest request) -->Line_10 $$ if (request.name.contains("#")) [ CD ]
Line_2 $$ private void validate(PutRequest request) -->Line_19 $$ if (request.template.contains(" ")) [ CD ]
Line_3 $$ List<String> validationErrors = new ArrayList()-->Line_11 $$ validationErrors.add("name must not contain a '#'")[ FD ]
Line_3 $$ List<String> validationErrors = new ArrayList()-->Line_14 $$ validationErrors.add("name must not start with '_'")[ FD ]
Line_4 $$ if (request.name.contains(" ")) -->Line_5 $$ validationErrors.add("name must not contain a space")[ CD ]
Line_37 $$ ValidationException validationException = new ValidationException()-->Line_39 $$ throw new InvalidIndexTemplateException(request.name, validationException.getMessage())[ FD ]
Line_2 $$ private void validate(PutRequest request) -->Line_31 $$ if (!Strings.validFileNameExcludingAstrix(request.template)) [ CD ]
Line_2 $$ private void validate(PutRequest request) -->Line_34 $$ List<String> indexSettingsValidation = metaDataCreateIndexService.getIndexSettingsValidationErrors(request.settings)[ CD ]
Line_3 $$ List<String> validationErrors = new ArrayList()-->Line_29 $$ validationErrors.add("template must not start with '_'")[ FD ]
Line_34 $$ List<String> indexSettingsValidation = metaDataCreateIndexService.getIndexSettingsValidationErrors(request.settings)-->Line_35 $$ validationErrors.addAll(indexSettingsValidation)[ FD ]
Line_28 $$ if (request.template.startsWith("_")) -->Line_29 $$ validationErrors.add("template must not start with '_'")[ CD ]
Line_2 $$ private void validate(PutRequest request) -->Line_3 $$ List<String> validationErrors = new ArrayList()[ CD ]
Line_3 $$ List<String> validationErrors = new ArrayList()-->Line_36 $$ if (!validationErrors.isEmpty()) [ FD ]
Line_2 $$ private void validate(PutRequest request) -->Line_4 $$ if (request.name.contains(" ")) [ CD ]
Line_19 $$ if (request.template.contains(" ")) -->Line_20 $$ validationErrors.add("template must not contain a space")[ CD ]
Line_37 $$ ValidationException validationException = new ValidationException()-->Line_38 $$ validationException.addValidationErrors(validationErrors)[ FD ]
Line_7 $$ if (request.name.contains(",")) -->Line_8 $$ validationErrors.add("name must not contain a ','")[ CD ]
Line_3 $$ List<String> validationErrors = new ArrayList()-->Line_38 $$ validationException.addValidationErrors(validationErrors)[ FD ]
Line_2 $$ private void validate(PutRequest request) -->Line_35 $$ validationErrors.addAll(indexSettingsValidation)[ CD ]
Line_3 $$ List<String> validationErrors = new ArrayList()-->Line_26 $$ validationErrors.add("template must not contain a '#'")[ FD ]
Line_13 $$ if (request.name.startsWith("_")) -->Line_14 $$ validationErrors.add("name must not start with '_'")[ CD ]
Line_3 $$ List<String> validationErrors = new ArrayList()-->Line_8 $$ validationErrors.add("name must not contain a ','")[ FD ]
Line_3 $$ List<String> validationErrors = new ArrayList()-->Line_17 $$ validationErrors.add("name must be lower cased")[ FD ]
Line_2 $$ private void validate(PutRequest request) -->Line_22 $$ if (request.template.contains(",")) [ CD ]
Line_22 $$ if (request.template.contains(",")) -->Line_23 $$ validationErrors.add("template must not contain a ','")[ CD ]
Line_41 $$ for (Alias alias : request.aliases) -->Line_42 $$ aliasValidator.validateAliasStandalone(alias)[ FD ]
Line_41 $$ for (Alias alias : request.aliases) -->Line_44 $$ throw new IllegalArgumentException("Alias [" + alias.name() + "] cannot be the same as the template pattern [" + request.template + "]")[ FD ]
Line_2 $$ private void validate(PutRequest request) -->Line_13 $$ if (request.name.startsWith("_")) [ CD ]
Line_3 $$ List<String> validationErrors = new ArrayList()-->Line_20 $$ validationErrors.add("template must not contain a space")[ FD ]
