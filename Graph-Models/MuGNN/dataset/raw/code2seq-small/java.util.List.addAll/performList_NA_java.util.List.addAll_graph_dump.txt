Line_2 $$ public List performList(QueryParameters queryParameters, SessionImplementor session) throws HibernateException -->Line_23 $$ final int guessedResultSize = guessResultSize(rowSelection)[ CD ]
Line_2 $$ public List performList(QueryParameters queryParameters, SessionImplementor session) throws HibernateException -->Line_11 $$ if (needsLimit) [ CD ]
Line_35 $$ final int first = queryParameters.getRowSelection().getFirstRow() == null ? 0 : queryParameters.getRowSelection().getFirstRow()-->Line_42 $$ if (includedCount < first) [ FD ]
Line_2 $$ public List performList(QueryParameters queryParameters, SessionImplementor session) throws HibernateException -->Line_10 $$ final QueryParameters queryParametersToUse[ CD ]
Line_2 $$ public List performList(QueryParameters queryParameters, SessionImplementor session) throws HibernateException -->Line_16 $$ queryParametersToUse = queryParameters.createCopyUsing(selection)[ FD ]
Line_37 $$ for (final Object result : tmp) -->Line_45 $$ combinedResults.add(result)[ FD ]
Line_2 $$ public List performList(QueryParameters queryParameters, SessionImplementor session) throws HibernateException -->Line_33 $$ final List tmp = translator.list(session, queryParametersToUse)[ FD ]
Line_16 $$ queryParametersToUse = queryParameters.createCopyUsing(selection)-->Line_33 $$ final List tmp = translator.list(session, queryParametersToUse)[ FD ]
Line_16 $$ queryParametersToUse = queryParameters.createCopyUsing(selection)-->Line_18 $$ queryParametersToUse = queryParameters[ FD ]
Line_18 $$ queryParametersToUse = queryParameters-->Line_21 $$ return translators[0].list(session, queryParametersToUse)[ FD ]
Line_13 $$ final RowSelection selection = new RowSelection()-->Line_15 $$ selection.setTimeout(queryParameters.getRowSelection().getTimeout())[ FD ]
Line_18 $$ queryParametersToUse = queryParameters-->Line_33 $$ final List tmp = translator.list(session, queryParametersToUse)[ FD ]
Line_31 $$ int includedCount = -1-->Line_42 $$ if (includedCount < first) [ FD ]
Line_2 $$ public List performList(QueryParameters queryParameters, SessionImplementor session) throws HibernateException -->Line_20 $$ if (translators.length == 1) [ CD ]
Line_20 $$ if (translators.length == 1) -->Line_21 $$ return translators[0].list(session, queryParametersToUse)[ CD ]
Line_2 $$ public List performList(QueryParameters queryParameters, SessionImplementor session) throws HibernateException -->Line_25 $$ final IdentitySet distinction[ CD ]
Line_25 $$ final IdentitySet distinction-->Line_27 $$ distinction = new IdentitySet(guessedResultSize)[ FD ]
Line_2 $$ public List performList(QueryParameters queryParameters, SessionImplementor session) throws HibernateException -->Line_54 $$ return combinedResults[ CD ]
Line_2 $$ public List performList(QueryParameters queryParameters, SessionImplementor session) throws HibernateException -->Line_9 $$ final boolean needsLimit = hasLimit && translators.length > 1[ CD ]
Line_10 $$ final QueryParameters queryParametersToUse-->Line_18 $$ queryParametersToUse = queryParameters[ FD ]
Line_11 $$ if (needsLimit) -->Line_18 $$ queryParametersToUse = queryParameters[ CD ]
Line_2 $$ public List performList(QueryParameters queryParameters, SessionImplementor session) throws HibernateException -->Line_21 $$ return translators[0].list(session, queryParametersToUse)[ FD ]
Line_27 $$ distinction = new IdentitySet(guessedResultSize)-->Line_29 $$ distinction = null[ FD ]
Line_2 $$ public List performList(QueryParameters queryParameters, SessionImplementor session) throws HibernateException -->Line_31 $$ int includedCount = -1[ CD ]
Line_2 $$ public List performList(QueryParameters queryParameters, SessionImplementor session) throws HibernateException -->Line_8 $$ final boolean hasLimit = rowSelection != null && rowSelection.definesLimits()[ CD ]
Line_11 $$ if (needsLimit) -->Line_16 $$ queryParametersToUse = queryParameters.createCopyUsing(selection)[ CD ]
Line_2 $$ public List performList(QueryParameters queryParameters, SessionImplementor session) throws HibernateException -->Line_14 $$ selection.setFetchSize(queryParameters.getRowSelection().getFetchSize())[ FD ]
Line_2 $$ public List performList(QueryParameters queryParameters, SessionImplementor session) throws HibernateException -->Line_15 $$ selection.setTimeout(queryParameters.getRowSelection().getTimeout())[ FD ]
Line_2 $$ public List performList(QueryParameters queryParameters, SessionImplementor session) throws HibernateException -->Line_24 $$ final List combinedResults = new ArrayList(guessedResultSize)[ CD ]
Line_27 $$ distinction = new IdentitySet(guessedResultSize)-->Line_38 $$ if (!distinction.add(result)) [ FD ]
Line_29 $$ distinction = null-->Line_38 $$ if (!distinction.add(result)) [ FD ]
Line_34 $$ if (needsLimit) -->Line_51 $$ combinedResults.addAll(tmp)[ CD ]
Line_25 $$ final IdentitySet distinction-->Line_29 $$ distinction = null[ FD ]
Line_13 $$ final RowSelection selection = new RowSelection()-->Line_14 $$ selection.setFetchSize(queryParameters.getRowSelection().getFetchSize())[ FD ]
Line_10 $$ final QueryParameters queryParametersToUse-->Line_21 $$ return translators[0].list(session, queryParametersToUse)[ FD ]
Line_7 $$ final RowSelection rowSelection = queryParameters.getRowSelection()-->Line_8 $$ final boolean hasLimit = rowSelection != null && rowSelection.definesLimits()[ FD ]
Line_2 $$ public List performList(QueryParameters queryParameters, SessionImplementor session) throws HibernateException -->Line_26 $$ if (needsLimit) [ CD ]
Line_2 $$ public List performList(QueryParameters queryParameters, SessionImplementor session) throws HibernateException -->Line_36 $$ final int max = queryParameters.getRowSelection().getMaxRows() == null ? -1 : queryParameters.getRowSelection().getMaxRows()[ FD ]
Line_2 $$ public List performList(QueryParameters queryParameters, SessionImplementor session) throws HibernateException -->Line_7 $$ final RowSelection rowSelection = queryParameters.getRowSelection()[ FD ]
Line_2 $$ public List performList(QueryParameters queryParameters, SessionImplementor session) throws HibernateException -->Line_3 $$ if (traceEnabled) [ CD ]
Line_16 $$ queryParametersToUse = queryParameters.createCopyUsing(selection)-->Line_21 $$ return translators[0].list(session, queryParametersToUse)[ FD ]
Line_34 $$ if (needsLimit) -->Line_35 $$ final int first = queryParameters.getRowSelection().getFirstRow() == null ? 0 : queryParameters.getRowSelection().getFirstRow()[ CD ]
Line_3 $$ if (traceEnabled) -->Line_5 $$ queryParameters.traceParameters(session.getFactory())[ CD ]
Line_11 $$ if (needsLimit) -->Line_13 $$ final RowSelection selection = new RowSelection()[ CD ]
Line_34 $$ if (needsLimit) -->Line_36 $$ final int max = queryParameters.getRowSelection().getMaxRows() == null ? -1 : queryParameters.getRowSelection().getMaxRows()[ CD ]
Line_2 $$ public List performList(QueryParameters queryParameters, SessionImplementor session) throws HibernateException -->Line_7 $$ final RowSelection rowSelection = queryParameters.getRowSelection()[ CD ]
Line_2 $$ public List performList(QueryParameters queryParameters, SessionImplementor session) throws HibernateException -->Line_18 $$ queryParametersToUse = queryParameters[ FD ]
Line_24 $$ final List combinedResults = new ArrayList(guessedResultSize)-->Line_51 $$ combinedResults.addAll(tmp)[ FD ]
Line_3 $$ if (traceEnabled) -->Line_4 $$ LOG.tracev("Find: [ CD ]
Line_10 $$ final QueryParameters queryParametersToUse-->Line_16 $$ queryParametersToUse = queryParameters.createCopyUsing(selection)[ FD ]
Line_26 $$ if (needsLimit) -->Line_29 $$ distinction = null[ CD ]
Line_33 $$ final List tmp = translator.list(session, queryParametersToUse)-->Line_51 $$ combinedResults.addAll(tmp)[ FD ]
Line_25 $$ final IdentitySet distinction-->Line_38 $$ if (!distinction.add(result)) [ FD ]
Line_13 $$ final RowSelection selection = new RowSelection()-->Line_16 $$ queryParametersToUse = queryParameters.createCopyUsing(selection)[ FD ]
Line_37 $$ for (final Object result : tmp) -->Line_38 $$ if (!distinction.add(result)) [ FD ]
Line_32 $$ for (QueryTranslator translator : translators) -->Line_33 $$ final List tmp = translator.list(session, queryParametersToUse)[ FD ]
Line_26 $$ if (needsLimit) -->Line_27 $$ distinction = new IdentitySet(guessedResultSize)[ CD ]
Line_10 $$ final QueryParameters queryParametersToUse-->Line_33 $$ final List tmp = translator.list(session, queryParametersToUse)[ FD ]
Line_7 $$ final RowSelection rowSelection = queryParameters.getRowSelection()-->Line_23 $$ final int guessedResultSize = guessResultSize(rowSelection)[ FD ]
Line_31 $$ int includedCount = -1-->Line_41 $$ includedCount++[ FD ]
Line_2 $$ public List performList(QueryParameters queryParameters, SessionImplementor session) throws HibernateException -->Line_5 $$ queryParameters.traceParameters(session.getFactory())[ FD ]
Line_24 $$ final List combinedResults = new ArrayList(guessedResultSize)-->Line_45 $$ combinedResults.add(result)[ FD ]
Line_11 $$ if (needsLimit) -->Line_15 $$ selection.setTimeout(queryParameters.getRowSelection().getTimeout())[ CD ]
Line_11 $$ if (needsLimit) -->Line_12 $$ LOG.needsLimit()[ CD ]
Line_11 $$ if (needsLimit) -->Line_14 $$ selection.setFetchSize(queryParameters.getRowSelection().getFetchSize())[ CD ]
Line_2 $$ public List performList(QueryParameters queryParameters, SessionImplementor session) throws HibernateException -->Line_35 $$ final int first = queryParameters.getRowSelection().getFirstRow() == null ? 0 : queryParameters.getRowSelection().getFirstRow()[ FD ]
