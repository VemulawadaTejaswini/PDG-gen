Line_3 $$ final List<String> args = new ArrayList<String>()-->Line_4 $$ args.add(INSTALL)[ FD ]
Line_21 $$ for (PyRequirement req : requirements) -->Line_22 $$ args.addAll(req.toOptions())[ FD ]
Line_5 $$ final File buildDir-->Line_12 $$ args.addAll(Arrays.asList(BUILD_DIR_OPTION, buildDir.getAbsolutePath()))[ FD ]
Line_29 $$ if (proxyString != null) -->Line_31 $$ simplifiedArgs.add(proxyString)[ CD ]
Line_3 $$ final List<String> args = new ArrayList<String>()-->Line_25 $$ getHelperResult(PACKAGING_TOOL, args, !useUserSite, true, null)[ FD ]
Line_16 $$ if (proxyString != null) -->Line_17 $$ args.add("--proxy")[ CD ]
Line_3 $$ final List<String> args = new ArrayList<String>()-->Line_17 $$ args.add("--proxy")[ FD ]
Line_2 $$ public void install(@NotNull List<PyRequirement> requirements, @NotNull List<String> extraArgs) throws ExecutionException -->Line_20 $$ args.addAll(extraArgs)[ CD ]
Line_3 $$ final List<String> args = new ArrayList<String>()-->Line_22 $$ args.addAll(req.toOptions())[ FD ]
Line_27 $$ final List<String> simplifiedArgs = new ArrayList<String>()-->Line_33 $$ simplifiedArgs.addAll(extraArgs)[ FD ]
Line_5 $$ final File buildDir-->Line_7 $$ buildDir = FileUtil.createTempDirectory("pycharm-packaging", null)[ FD ]
Line_11 $$ if (!extraArgs.contains(BUILD_DIR_OPTION)) -->Line_12 $$ args.addAll(Arrays.asList(BUILD_DIR_OPTION, buildDir.getAbsolutePath()))[ CD ]
Line_3 $$ final List<String> args = new ArrayList<String>()-->Line_12 $$ args.addAll(Arrays.asList(BUILD_DIR_OPTION, buildDir.getAbsolutePath()))[ FD ]
Line_27 $$ final List<String> simplifiedArgs = new ArrayList<String>()-->Line_28 $$ simplifiedArgs.add("install")[ FD ]
Line_7 $$ buildDir = FileUtil.createTempDirectory("pycharm-packaging", null)-->Line_12 $$ args.addAll(Arrays.asList(BUILD_DIR_OPTION, buildDir.getAbsolutePath()))[ FD ]
Line_2 $$ public void install(@NotNull List<PyRequirement> requirements, @NotNull List<String> extraArgs) throws ExecutionException -->Line_16 $$ if (proxyString != null) [ CD ]
Line_2 $$ public void install(@NotNull List<PyRequirement> requirements, @NotNull List<String> extraArgs) throws ExecutionException -->Line_11 $$ if (!extraArgs.contains(BUILD_DIR_OPTION)) [ FD ]
Line_16 $$ if (proxyString != null) -->Line_18 $$ args.add(proxyString)[ CD ]
Line_2 $$ public void install(@NotNull List<PyRequirement> requirements, @NotNull List<String> extraArgs) throws ExecutionException -->Line_20 $$ args.addAll(extraArgs)[ FD ]
Line_2 $$ public void install(@NotNull List<PyRequirement> requirements, @NotNull List<String> extraArgs) throws ExecutionException -->Line_4 $$ args.add(INSTALL)[ CD ]
Line_7 $$ buildDir = FileUtil.createTempDirectory("pycharm-packaging", null)-->Line_40 $$ FileUtil.delete(buildDir)[ FD ]
Line_2 $$ public void install(@NotNull List<PyRequirement> requirements, @NotNull List<String> extraArgs) throws ExecutionException -->Line_11 $$ if (!extraArgs.contains(BUILD_DIR_OPTION)) [ CD ]
Line_27 $$ final List<String> simplifiedArgs = new ArrayList<String>()-->Line_30 $$ simplifiedArgs.add("--proxy")[ FD ]
Line_27 $$ final List<String> simplifiedArgs = new ArrayList<String>()-->Line_35 $$ simplifiedArgs.addAll(req.toOptions())[ FD ]
Line_14 $$ boolean useUserSite = extraArgs.contains(USE_USER_SITE)-->Line_25 $$ getHelperResult(PACKAGING_TOOL, args, !useUserSite, true, null)[ FD ]
Line_5 $$ final File buildDir-->Line_40 $$ FileUtil.delete(buildDir)[ FD ]
Line_15 $$ final String proxyString = getProxyString()-->Line_31 $$ simplifiedArgs.add(proxyString)[ FD ]
Line_27 $$ final List<String> simplifiedArgs = new ArrayList<String>()-->Line_31 $$ simplifiedArgs.add(proxyString)[ FD ]
Line_2 $$ public void install(@NotNull List<PyRequirement> requirements, @NotNull List<String> extraArgs) throws ExecutionException -->Line_5 $$ final File buildDir[ CD ]
Line_3 $$ final List<String> args = new ArrayList<String>()-->Line_18 $$ args.add(proxyString)[ FD ]
Line_21 $$ for (PyRequirement req : requirements) -->Line_35 $$ simplifiedArgs.addAll(req.toOptions())[ FD ]
Line_15 $$ final String proxyString = getProxyString()-->Line_29 $$ if (proxyString != null) [ FD ]
Line_15 $$ final String proxyString = getProxyString()-->Line_18 $$ args.add(proxyString)[ FD ]
Line_15 $$ final String proxyString = getProxyString()-->Line_16 $$ if (proxyString != null) [ FD ]
Line_2 $$ public void install(@NotNull List<PyRequirement> requirements, @NotNull List<String> extraArgs) throws ExecutionException -->Line_33 $$ simplifiedArgs.addAll(extraArgs)[ FD ]
Line_2 $$ public void install(@NotNull List<PyRequirement> requirements, @NotNull List<String> extraArgs) throws ExecutionException -->Line_14 $$ boolean useUserSite = extraArgs.contains(USE_USER_SITE)[ CD ]
Line_2 $$ public void install(@NotNull List<PyRequirement> requirements, @NotNull List<String> extraArgs) throws ExecutionException -->Line_14 $$ boolean useUserSite = extraArgs.contains(USE_USER_SITE)[ FD ]
Line_29 $$ if (proxyString != null) -->Line_30 $$ simplifiedArgs.add("--proxy")[ CD ]
Line_2 $$ public void install(@NotNull List<PyRequirement> requirements, @NotNull List<String> extraArgs) throws ExecutionException -->Line_15 $$ final String proxyString = getProxyString()[ CD ]
Line_3 $$ final List<String> args = new ArrayList<String>()-->Line_20 $$ args.addAll(extraArgs)[ FD ]
Line_2 $$ public void install(@NotNull List<PyRequirement> requirements, @NotNull List<String> extraArgs) throws ExecutionException -->Line_3 $$ final List<String> args = new ArrayList<String>()[ CD ]
