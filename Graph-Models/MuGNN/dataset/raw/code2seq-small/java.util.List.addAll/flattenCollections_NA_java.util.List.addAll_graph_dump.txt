Line_7 $$ if (things.length == 1) -->Line_28 $$ return Collections.singletonList(cast(type, thing))[ CD ]
Line_12 $$ if (thing.getClass().isArray()) -->Line_18 $$ return list[ CD ]
Line_3 $$ if (things == null) -->Line_5 $$ if (things.length == 0) [ CD ]
Line_5 $$ if (things.length == 0) -->Line_6 $$ return Collections.emptyList()[ CD ]
Line_8 $$ Object thing = things[0]-->Line_28 $$ return Collections.singletonList(cast(type, thing))[ FD ]
Line_8 $$ Object thing = things[0]-->Line_20 $$ if (thing instanceof Collection) [ FD ]
Line_7 $$ if (things.length == 1) -->Line_8 $$ Object thing = things[0][ CD ]
Line_2 $$ public static <T> List<T> flattenCollections(Class<T> type, Object... things) -->Line_28 $$ return Collections.singletonList(cast(type, thing))[ FD ]
Line_7 $$ if (things.length == 1) -->Line_20 $$ if (thing instanceof Collection) [ CD ]
Line_9 $$ if (thing == null) -->Line_10 $$ return Collections.singletonList(null)[ CD ]
Line_2 $$ public static <T> List<T> flattenCollections(Class<T> type, Object... things) -->Line_3 $$ if (things == null) [ CD ]
Line_3 $$ if (things == null) -->Line_4 $$ return Collections.singletonList(null)[ CD ]
Line_15 $$ for (Object thingThing : thingArray) -->Line_16 $$ list.addAll(flattenCollections(type, thingThing))[ FD ]
Line_14 $$ List<T> list = new ArrayList<T>(thingArray.length)-->Line_16 $$ list.addAll(flattenCollections(type, thingThing))[ FD ]
Line_2 $$ public static <T> List<T> flattenCollections(Class<T> type, Object... things) -->Line_3 $$ if (things == null) [ FD ]
Line_2 $$ public static <T> List<T> flattenCollections(Class<T> type, Object... things) -->Line_16 $$ list.addAll(flattenCollections(type, thingThing))[ FD ]
Line_2 $$ public static <T> List<T> flattenCollections(Class<T> type, Object... things) -->Line_24 $$ list.addAll(flattenCollections(type, element))[ FD ]
Line_7 $$ if (things.length == 1) -->Line_34 $$ return list[ CD ]
Line_14 $$ List<T> list = new ArrayList<T>(thingArray.length)-->Line_24 $$ list.addAll(flattenCollections(type, element))[ FD ]
Line_20 $$ if (thing instanceof Collection) -->Line_26 $$ return list[ CD ]
Line_23 $$ for (Object element : collection) -->Line_24 $$ list.addAll(flattenCollections(type, element))[ FD ]
Line_12 $$ if (thing.getClass().isArray()) -->Line_14 $$ List<T> list = new ArrayList<T>(thingArray.length)[ CD ]
Line_8 $$ Object thing = things[0]-->Line_9 $$ if (thing == null) [ FD ]
Line_8 $$ Object thing = things[0]-->Line_32 $$ list.addAll(flattenCollections(type, thing))[ FD ]
Line_5 $$ if (things.length == 0) -->Line_7 $$ if (things.length == 1) [ CD ]
Line_12 $$ if (thing.getClass().isArray()) -->Line_13 $$ Object[] thingArray = (Object[]) thing[ CD ]
Line_20 $$ if (thing instanceof Collection) -->Line_21 $$ Collection<?> collection = (Collection<?>) thing[ CD ]
Line_7 $$ if (things.length == 1) -->Line_9 $$ if (thing == null) [ CD ]
Line_8 $$ Object thing = things[0]-->Line_12 $$ if (thing.getClass().isArray()) [ FD ]
Line_14 $$ List<T> list = new ArrayList<T>(thingArray.length)-->Line_32 $$ list.addAll(flattenCollections(type, thing))[ FD ]
Line_2 $$ public static <T> List<T> flattenCollections(Class<T> type, Object... things) -->Line_32 $$ list.addAll(flattenCollections(type, thing))[ FD ]
Line_7 $$ if (things.length == 1) -->Line_12 $$ if (thing.getClass().isArray()) [ CD ]
