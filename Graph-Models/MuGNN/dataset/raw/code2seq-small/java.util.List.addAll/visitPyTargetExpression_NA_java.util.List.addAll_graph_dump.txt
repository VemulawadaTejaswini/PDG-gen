Line_6 $$ if (value instanceof PyBinaryExpression) -->Line_17 $$ myResult = PyUtil.getStringListFromTargetExpression(node)[ CD ]
Line_21 $$ List<String> names = PyUtil.getStringListFromTargetExpression(node)-->Line_22 $$ if (names != null) [ FD ]
Line_2 $$ public void visitPyTargetExpression(PyTargetExpression node) -->Line_20 $$ if (!myFoundDunderAll) [ CD ]
Line_20 $$ if (!myFoundDunderAll) -->Line_21 $$ List<String> names = PyUtil.getStringListFromTargetExpression(node)[ CD ]
Line_7 $$ PyBinaryExpression binaryExpression = (PyBinaryExpression) value-->Line_8 $$ if (binaryExpression.isOperator("+")) [ FD ]
Line_22 $$ if (names != null) -->Line_23 $$ myDunderLike.put(node.getName(), names)[ CD ]
Line_2 $$ public void visitPyTargetExpression(PyTargetExpression node) -->Line_5 $$ PyExpression value = node.findAssignedValue()[ FD ]
Line_8 $$ if (binaryExpression.isOperator("+")) -->Line_10 $$ List<String> rhs = getStringListFromValue(binaryExpression.getRightExpression())[ CD ]
Line_8 $$ if (binaryExpression.isOperator("+")) -->Line_9 $$ List<String> lhs = getStringListFromValue(binaryExpression.getLeftExpression())[ CD ]
Line_7 $$ PyBinaryExpression binaryExpression = (PyBinaryExpression) value-->Line_9 $$ List<String> lhs = getStringListFromValue(binaryExpression.getLeftExpression())[ FD ]
Line_2 $$ public void visitPyTargetExpression(PyTargetExpression node) -->Line_3 $$ if (PyNames.ALL.equals(node.getName())) [ CD ]
Line_3 $$ if (PyNames.ALL.equals(node.getName())) -->Line_6 $$ if (value instanceof PyBinaryExpression) [ CD ]
Line_7 $$ PyBinaryExpression binaryExpression = (PyBinaryExpression) value-->Line_10 $$ List<String> rhs = getStringListFromValue(binaryExpression.getRightExpression())[ FD ]
Line_10 $$ List<String> rhs = getStringListFromValue(binaryExpression.getRightExpression())-->Line_13 $$ myResult.addAll(rhs)[ FD ]
Line_20 $$ if (!myFoundDunderAll) -->Line_22 $$ if (names != null) [ CD ]
Line_6 $$ if (value instanceof PyBinaryExpression) -->Line_8 $$ if (binaryExpression.isOperator("+")) [ CD ]
Line_5 $$ PyExpression value = node.findAssignedValue()-->Line_6 $$ if (value instanceof PyBinaryExpression) [ FD ]
Line_2 $$ public void visitPyTargetExpression(PyTargetExpression node) -->Line_17 $$ myResult = PyUtil.getStringListFromTargetExpression(node)[ FD ]
Line_8 $$ if (binaryExpression.isOperator("+")) -->Line_11 $$ if (lhs != null && rhs != null) [ CD ]
Line_21 $$ List<String> names = PyUtil.getStringListFromTargetExpression(node)-->Line_23 $$ myDunderLike.put(node.getName(), names)[ FD ]
Line_3 $$ if (PyNames.ALL.equals(node.getName())) -->Line_5 $$ PyExpression value = node.findAssignedValue()[ CD ]
Line_2 $$ public void visitPyTargetExpression(PyTargetExpression node) -->Line_21 $$ List<String> names = PyUtil.getStringListFromTargetExpression(node)[ FD ]
Line_2 $$ public void visitPyTargetExpression(PyTargetExpression node) -->Line_23 $$ myDunderLike.put(node.getName(), names)[ FD ]
Line_6 $$ if (value instanceof PyBinaryExpression) -->Line_7 $$ PyBinaryExpression binaryExpression = (PyBinaryExpression) value[ CD ]
Line_2 $$ public void visitPyTargetExpression(PyTargetExpression node) -->Line_3 $$ if (PyNames.ALL.equals(node.getName())) [ FD ]
Line_11 $$ if (lhs != null && rhs != null) -->Line_13 $$ myResult.addAll(rhs)[ CD ]
