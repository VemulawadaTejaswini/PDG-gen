Line_2 $$ private VisiblePack getVisiblePack(@Nullable VisiblePack visiblePack, @NotNull List<Request> requests) -->Line_8 $$ if (refreshRequest != null) [ CD ]
Line_2 $$ private VisiblePack getVisiblePack(@Nullable VisiblePack visiblePack, @NotNull List<Request> requests) -->Line_17 $$ if (myDataPack == null) [ CD ]
Line_2 $$ private VisiblePack getVisiblePack(@Nullable VisiblePack visiblePack, @NotNull List<Request> requests) -->Line_6 $$ List<MoreCommitsRequest> moreCommitsRequests = ContainerUtil.findAll(requests, MoreCommitsRequest.class)[ FD ]
Line_20 $$ if (filterRequest != null) -->Line_22 $$ if (!moreCommitsRequests.isEmpty()) [ CD ]
Line_2 $$ private VisiblePack getVisiblePack(@Nullable VisiblePack visiblePack, @NotNull List<Request> requests) -->Line_6 $$ List<MoreCommitsRequest> moreCommitsRequests = ContainerUtil.findAll(requests, MoreCommitsRequest.class)[ CD ]
Line_2 $$ private VisiblePack getVisiblePack(@Nullable VisiblePack visiblePack, @NotNull List<Request> requests) -->Line_4 $$ FilterRequest filterRequest = ContainerUtil.findLastInstance(requests, FilterRequest.class)[ FD ]
Line_2 $$ private VisiblePack getVisiblePack(@Nullable VisiblePack visiblePack, @NotNull List<Request> requests) -->Line_25 $$ Pair<VisiblePack, CommitCountStage> pair = myVisiblePackBuilder.build(myDataPack, mySortType, myFilters, myCommitCount)[ CD ]
Line_2 $$ private VisiblePack getVisiblePack(@Nullable VisiblePack visiblePack, @NotNull List<Request> requests) -->Line_28 $$ return visiblePack[ CD ]
Line_2 $$ private VisiblePack getVisiblePack(@Nullable VisiblePack visiblePack, @NotNull List<Request> requests) -->Line_7 $$ myRequestsToRun.addAll(moreCommitsRequests)[ CD ]
Line_6 $$ List<MoreCommitsRequest> moreCommitsRequests = ContainerUtil.findAll(requests, MoreCommitsRequest.class)-->Line_7 $$ myRequestsToRun.addAll(moreCommitsRequests)[ FD ]
Line_4 $$ FilterRequest filterRequest = ContainerUtil.findLastInstance(requests, FilterRequest.class)-->Line_11 $$ if (filterRequest != null) [ FD ]
Line_5 $$ SortTypeRequest sortTypeRequest = ContainerUtil.findLastInstance(requests, SortTypeRequest.class)-->Line_14 $$ if (sortTypeRequest != null) [ FD ]
Line_4 $$ FilterRequest filterRequest = ContainerUtil.findLastInstance(requests, FilterRequest.class)-->Line_20 $$ if (filterRequest != null) [ FD ]
Line_2 $$ private VisiblePack getVisiblePack(@Nullable VisiblePack visiblePack, @NotNull List<Request> requests) -->Line_3 $$ RefreshRequest refreshRequest = ContainerUtil.findLastInstance(requests, RefreshRequest.class)[ FD ]
Line_2 $$ private VisiblePack getVisiblePack(@Nullable VisiblePack visiblePack, @NotNull List<Request> requests) -->Line_5 $$ SortTypeRequest sortTypeRequest = ContainerUtil.findLastInstance(requests, SortTypeRequest.class)[ FD ]
Line_2 $$ private VisiblePack getVisiblePack(@Nullable VisiblePack visiblePack, @NotNull List<Request> requests) -->Line_11 $$ if (filterRequest != null) [ CD ]
Line_2 $$ private VisiblePack getVisiblePack(@Nullable VisiblePack visiblePack, @NotNull List<Request> requests) -->Line_4 $$ FilterRequest filterRequest = ContainerUtil.findLastInstance(requests, FilterRequest.class)[ CD ]
Line_2 $$ private VisiblePack getVisiblePack(@Nullable VisiblePack visiblePack, @NotNull List<Request> requests) -->Line_5 $$ SortTypeRequest sortTypeRequest = ContainerUtil.findLastInstance(requests, SortTypeRequest.class)[ CD ]
Line_2 $$ private VisiblePack getVisiblePack(@Nullable VisiblePack visiblePack, @NotNull List<Request> requests) -->Line_14 $$ if (sortTypeRequest != null) [ CD ]
Line_2 $$ private VisiblePack getVisiblePack(@Nullable VisiblePack visiblePack, @NotNull List<Request> requests) -->Line_20 $$ if (filterRequest != null) [ CD ]
Line_3 $$ RefreshRequest refreshRequest = ContainerUtil.findLastInstance(requests, RefreshRequest.class)-->Line_8 $$ if (refreshRequest != null) [ FD ]
Line_6 $$ List<MoreCommitsRequest> moreCommitsRequests = ContainerUtil.findAll(requests, MoreCommitsRequest.class)-->Line_22 $$ if (!moreCommitsRequests.isEmpty()) [ FD ]
Line_22 $$ if (!moreCommitsRequests.isEmpty()) -->Line_23 $$ myCommitCount = myCommitCount.next()[ CD ]
Line_2 $$ private VisiblePack getVisiblePack(@Nullable VisiblePack visiblePack, @NotNull List<Request> requests) -->Line_3 $$ RefreshRequest refreshRequest = ContainerUtil.findLastInstance(requests, RefreshRequest.class)[ CD ]
Line_17 $$ if (myDataPack == null) -->Line_18 $$ return visiblePack[ CD ]
