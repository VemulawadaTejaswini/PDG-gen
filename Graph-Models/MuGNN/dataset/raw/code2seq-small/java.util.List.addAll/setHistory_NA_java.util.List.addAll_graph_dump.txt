Line_3 $$ Set<String> newHistorySet = ContainerUtil.newHashSet(history)-->Line_8 $$ if (!newHistorySet.contains(item)) [ FD ]
Line_8 $$ if (!newHistorySet.contains(item)) -->Line_9 $$ mergedHistory.add(item)[ CD ]
Line_2 $$ public static void setHistory(@NotNull TextFieldWithHistory textFieldWithHistory, @NotNull List<String> history, boolean mergeWithPrevHistory) -->Line_13 $$ mergedHistory.addAll(history)[ FD ]
Line_7 $$ for (String item : prevHistory) -->Line_8 $$ if (!newHistorySet.contains(item)) [ FD ]
Line_2 $$ public static void setHistory(@NotNull TextFieldWithHistory textFieldWithHistory, @NotNull List<String> history, boolean mergeWithPrevHistory) -->Line_13 $$ mergedHistory.addAll(history)[ CD ]
Line_2 $$ public static void setHistory(@NotNull TextFieldWithHistory textFieldWithHistory, @NotNull List<String> history, boolean mergeWithPrevHistory) -->Line_6 $$ if (mergeWithPrevHistory) [ CD ]
Line_17 $$ oldSelectedItem = null-->Line_22 $$ textFieldWithHistory.setSelectedItem(oldSelectedItem)[ FD ]
Line_2 $$ public static void setHistory(@NotNull TextFieldWithHistory textFieldWithHistory, @NotNull List<String> history, boolean mergeWithPrevHistory) -->Line_5 $$ List<String> mergedHistory = ContainerUtil.newArrayListWithCapacity(history.size())[ FD ]
Line_2 $$ public static void setHistory(@NotNull TextFieldWithHistory textFieldWithHistory, @NotNull List<String> history, boolean mergeWithPrevHistory) -->Line_15 $$ String oldSelectedItem = ObjectUtils.tryCast(textFieldWithHistory.getSelectedItem(), String.class)[ CD ]
Line_5 $$ List<String> mergedHistory = ContainerUtil.newArrayListWithCapacity(history.size())-->Line_16 $$ if (!mergedHistory.contains(oldSelectedItem)) [ FD ]
Line_14 $$ String oldText = StringUtil.notNullize(textFieldWithHistory.getText())-->Line_24 $$ if (!oldText.equals(oldSelectedItem)) [ FD ]
Line_15 $$ String oldSelectedItem = ObjectUtils.tryCast(textFieldWithHistory.getSelectedItem(), String.class)-->Line_22 $$ textFieldWithHistory.setSelectedItem(oldSelectedItem)[ FD ]
Line_21 $$ if (oldSelectedItem != null) -->Line_22 $$ textFieldWithHistory.setSelectedItem(oldSelectedItem)[ CD ]
Line_2 $$ public static void setHistory(@NotNull TextFieldWithHistory textFieldWithHistory, @NotNull List<String> history, boolean mergeWithPrevHistory) -->Line_4 $$ List<String> prevHistory = textFieldWithHistory.getHistory()[ CD ]
Line_24 $$ if (!oldText.equals(oldSelectedItem)) -->Line_25 $$ textFieldWithHistory.setText(oldText)[ CD ]
Line_2 $$ public static void setHistory(@NotNull TextFieldWithHistory textFieldWithHistory, @NotNull List<String> history, boolean mergeWithPrevHistory) -->Line_19 $$ textFieldWithHistory.setHistory(mergedHistory)[ CD ]
Line_5 $$ List<String> mergedHistory = ContainerUtil.newArrayListWithCapacity(history.size())-->Line_20 $$ setLongestAsPrototype(textFieldWithHistory, mergedHistory)[ FD ]
Line_2 $$ public static void setHistory(@NotNull TextFieldWithHistory textFieldWithHistory, @NotNull List<String> history, boolean mergeWithPrevHistory) -->Line_15 $$ String oldSelectedItem = ObjectUtils.tryCast(textFieldWithHistory.getSelectedItem(), String.class)[ FD ]
Line_15 $$ String oldSelectedItem = ObjectUtils.tryCast(textFieldWithHistory.getSelectedItem(), String.class)-->Line_24 $$ if (!oldText.equals(oldSelectedItem)) [ FD ]
Line_7 $$ for (String item : prevHistory) -->Line_9 $$ mergedHistory.add(item)[ FD ]
Line_5 $$ List<String> mergedHistory = ContainerUtil.newArrayListWithCapacity(history.size())-->Line_9 $$ mergedHistory.add(item)[ FD ]
Line_2 $$ public static void setHistory(@NotNull TextFieldWithHistory textFieldWithHistory, @NotNull List<String> history, boolean mergeWithPrevHistory) -->Line_14 $$ String oldText = StringUtil.notNullize(textFieldWithHistory.getText())[ FD ]
Line_2 $$ public static void setHistory(@NotNull TextFieldWithHistory textFieldWithHistory, @NotNull List<String> history, boolean mergeWithPrevHistory) -->Line_20 $$ setLongestAsPrototype(textFieldWithHistory, mergedHistory)[ FD ]
Line_15 $$ String oldSelectedItem = ObjectUtils.tryCast(textFieldWithHistory.getSelectedItem(), String.class)-->Line_21 $$ if (oldSelectedItem != null) [ FD ]
Line_2 $$ public static void setHistory(@NotNull TextFieldWithHistory textFieldWithHistory, @NotNull List<String> history, boolean mergeWithPrevHistory) -->Line_25 $$ textFieldWithHistory.setText(oldText)[ FD ]
Line_16 $$ if (!mergedHistory.contains(oldSelectedItem)) -->Line_17 $$ oldSelectedItem = null[ CD ]
Line_17 $$ oldSelectedItem = null-->Line_24 $$ if (!oldText.equals(oldSelectedItem)) [ FD ]
Line_2 $$ public static void setHistory(@NotNull TextFieldWithHistory textFieldWithHistory, @NotNull List<String> history, boolean mergeWithPrevHistory) -->Line_3 $$ Set<String> newHistorySet = ContainerUtil.newHashSet(history)[ FD ]
Line_2 $$ public static void setHistory(@NotNull TextFieldWithHistory textFieldWithHistory, @NotNull List<String> history, boolean mergeWithPrevHistory) -->Line_14 $$ String oldText = StringUtil.notNullize(textFieldWithHistory.getText())[ CD ]
Line_15 $$ String oldSelectedItem = ObjectUtils.tryCast(textFieldWithHistory.getSelectedItem(), String.class)-->Line_17 $$ oldSelectedItem = null[ FD ]
Line_15 $$ String oldSelectedItem = ObjectUtils.tryCast(textFieldWithHistory.getSelectedItem(), String.class)-->Line_16 $$ if (!mergedHistory.contains(oldSelectedItem)) [ FD ]
Line_17 $$ oldSelectedItem = null-->Line_21 $$ if (oldSelectedItem != null) [ FD ]
Line_2 $$ public static void setHistory(@NotNull TextFieldWithHistory textFieldWithHistory, @NotNull List<String> history, boolean mergeWithPrevHistory) -->Line_16 $$ if (!mergedHistory.contains(oldSelectedItem)) [ CD ]
Line_2 $$ public static void setHistory(@NotNull TextFieldWithHistory textFieldWithHistory, @NotNull List<String> history, boolean mergeWithPrevHistory) -->Line_21 $$ if (oldSelectedItem != null) [ CD ]
Line_2 $$ public static void setHistory(@NotNull TextFieldWithHistory textFieldWithHistory, @NotNull List<String> history, boolean mergeWithPrevHistory) -->Line_22 $$ textFieldWithHistory.setSelectedItem(oldSelectedItem)[ FD ]
Line_5 $$ List<String> mergedHistory = ContainerUtil.newArrayListWithCapacity(history.size())-->Line_13 $$ mergedHistory.addAll(history)[ FD ]
Line_2 $$ public static void setHistory(@NotNull TextFieldWithHistory textFieldWithHistory, @NotNull List<String> history, boolean mergeWithPrevHistory) -->Line_4 $$ List<String> prevHistory = textFieldWithHistory.getHistory()[ FD ]
Line_2 $$ public static void setHistory(@NotNull TextFieldWithHistory textFieldWithHistory, @NotNull List<String> history, boolean mergeWithPrevHistory) -->Line_5 $$ List<String> mergedHistory = ContainerUtil.newArrayListWithCapacity(history.size())[ CD ]
Line_2 $$ public static void setHistory(@NotNull TextFieldWithHistory textFieldWithHistory, @NotNull List<String> history, boolean mergeWithPrevHistory) -->Line_24 $$ if (!oldText.equals(oldSelectedItem)) [ CD ]
Line_2 $$ public static void setHistory(@NotNull TextFieldWithHistory textFieldWithHistory, @NotNull List<String> history, boolean mergeWithPrevHistory) -->Line_19 $$ textFieldWithHistory.setHistory(mergedHistory)[ FD ]
Line_2 $$ public static void setHistory(@NotNull TextFieldWithHistory textFieldWithHistory, @NotNull List<String> history, boolean mergeWithPrevHistory) -->Line_20 $$ setLongestAsPrototype(textFieldWithHistory, mergedHistory)[ CD ]
Line_5 $$ List<String> mergedHistory = ContainerUtil.newArrayListWithCapacity(history.size())-->Line_19 $$ textFieldWithHistory.setHistory(mergedHistory)[ FD ]
Line_14 $$ String oldText = StringUtil.notNullize(textFieldWithHistory.getText())-->Line_25 $$ textFieldWithHistory.setText(oldText)[ FD ]
Line_2 $$ public static void setHistory(@NotNull TextFieldWithHistory textFieldWithHistory, @NotNull List<String> history, boolean mergeWithPrevHistory) -->Line_3 $$ Set<String> newHistorySet = ContainerUtil.newHashSet(history)[ CD ]
