Line_2 $$ public TaskInfo startNewTask(@NotNull final String taskName) -->Line_4 $$ List<R> problems = ContainerUtil.filter(repositories, new Condition<R>() [ CD ]
Line_4 $$ List<R> problems = ContainerUtil.filter(repositories, new Condition<R>() -->Line_6 $$ return hasBranch(repository, taskName)[ FD ]
Line_4 $$ List<R> problems = ContainerUtil.filter(repositories, new Condition<R>() -->Line_10 $$ if (!problems.isEmpty()) [ FD ]
Line_2 $$ public TaskInfo startNewTask(@NotNull final String taskName) -->Line_16 $$ repositories.removeAll(problems)[ CD ]
Line_4 $$ List<R> problems = ContainerUtil.filter(repositories, new Condition<R>() -->Line_11 $$ if (ApplicationManager.getApplication().isUnitTestMode() || Messages.showDialog(myProject, "<html>The following repositories already have specified " + myBranchType + "<b>" + taskName + "</b>:<br>" + StringUtil.join(problems, "<br>") + ".<br>" + "Do you want to checkout existing " + myBranchType + "?", StringUtil.capitalize(myBranchType) + " Already Exists", new String[] [ FD ]
Line_3 $$ List<R> repositories = myRepositoryManager.getRepositories()-->Line_20 $$ map.addAll(repositories)[ FD ]
Line_3 $$ List<R> repositories = myRepositoryManager.getRepositories()-->Line_4 $$ List<R> problems = ContainerUtil.filter(repositories, new Condition<R>() [ FD ]
Line_3 $$ List<R> repositories = myRepositoryManager.getRepositories()-->Line_17 $$ if (!repositories.isEmpty()) [ FD ]
Line_21 $$ return new TaskInfo(taskName, ContainerUtil.map(map, new Function<R, String>() -->Line_23 $$ return r.getPresentableUrl()[ FD ]
Line_2 $$ public TaskInfo startNewTask(@NotNull final String taskName) -->Line_20 $$ map.addAll(repositories)[ CD ]
Line_10 $$ if (!problems.isEmpty()) -->Line_11 $$ if (ApplicationManager.getApplication().isUnitTestMode() || Messages.showDialog(myProject, "<html>The following repositories already have specified " + myBranchType + "<b>" + taskName + "</b>:<br>" + StringUtil.join(problems, "<br>") + ".<br>" + "Do you want to checkout existing " + myBranchType + "?", StringUtil.capitalize(myBranchType) + " Already Exists", new String[] [ CD ]
Line_4 $$ List<R> problems = ContainerUtil.filter(repositories, new Condition<R>() -->Line_16 $$ repositories.removeAll(problems)[ FD ]
Line_4 $$ List<R> problems = ContainerUtil.filter(repositories, new Condition<R>() -->Line_6 $$ return hasBranch(repository, taskName)[ CD ]
Line_2 $$ public TaskInfo startNewTask(@NotNull final String taskName) -->Line_3 $$ List<R> repositories = myRepositoryManager.getRepositories()[ CD ]
Line_2 $$ public TaskInfo startNewTask(@NotNull final String taskName) -->Line_17 $$ if (!repositories.isEmpty()) [ CD ]
Line_2 $$ public TaskInfo startNewTask(@NotNull final String taskName) -->Line_18 $$ checkoutAsNewBranch(taskName, repositories)[ FD ]
Line_11 $$ if (ApplicationManager.getApplication().isUnitTestMode() || Messages.showDialog(myProject, "<html>The following repositories already have specified " + myBranchType + "<b>" + taskName + "</b>:<br>" + StringUtil.join(problems, "<br>") + ".<br>" + "Do you want to checkout existing " + myBranchType + "?", StringUtil.capitalize(myBranchType) + " Already Exists", new String[] -->Line_12 $$ checkout(taskName, problems, null)[ CD ]
Line_2 $$ public TaskInfo startNewTask(@NotNull final String taskName) -->Line_21 $$ return new TaskInfo(taskName, ContainerUtil.map(map, new Function<R, String>() [ CD ]
Line_2 $$ public TaskInfo startNewTask(@NotNull final String taskName) -->Line_12 $$ checkout(taskName, problems, null)[ FD ]
Line_3 $$ List<R> repositories = myRepositoryManager.getRepositories()-->Line_18 $$ checkoutAsNewBranch(taskName, repositories)[ FD ]
Line_2 $$ public TaskInfo startNewTask(@NotNull final String taskName) -->Line_6 $$ return hasBranch(repository, taskName)[ FD ]
Line_4 $$ List<R> problems = ContainerUtil.filter(repositories, new Condition<R>() -->Line_13 $$ map.addAll(problems)[ FD ]
Line_4 $$ List<R> problems = ContainerUtil.filter(repositories, new Condition<R>() -->Line_12 $$ checkout(taskName, problems, null)[ FD ]
Line_3 $$ List<R> repositories = myRepositoryManager.getRepositories()-->Line_16 $$ repositories.removeAll(problems)[ FD ]
Line_2 $$ public TaskInfo startNewTask(@NotNull final String taskName) -->Line_10 $$ if (!problems.isEmpty()) [ CD ]
Line_11 $$ if (ApplicationManager.getApplication().isUnitTestMode() || Messages.showDialog(myProject, "<html>The following repositories already have specified " + myBranchType + "<b>" + taskName + "</b>:<br>" + StringUtil.join(problems, "<br>") + ".<br>" + "Do you want to checkout existing " + myBranchType + "?", StringUtil.capitalize(myBranchType) + " Already Exists", new String[] -->Line_13 $$ map.addAll(problems)[ CD ]
Line_21 $$ return new TaskInfo(taskName, ContainerUtil.map(map, new Function<R, String>() -->Line_23 $$ return r.getPresentableUrl()[ CD ]
Line_17 $$ if (!repositories.isEmpty()) -->Line_18 $$ checkoutAsNewBranch(taskName, repositories)[ CD ]
