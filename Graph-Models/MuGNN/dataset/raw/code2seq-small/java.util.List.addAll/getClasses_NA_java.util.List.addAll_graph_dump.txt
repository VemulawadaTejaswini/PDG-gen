Line_2 $$ public List<Class> getClasses() -->Line_4 $$ if (myFirstTestClass != null) [ CD ]
Line_3 $$ List<Class> result = new ArrayList<Class>(myClassList.size())-->Line_7 $$ result.addAll(myClassList)[ FD ]
Line_8 $$ if (myLastTestClass != null) -->Line_9 $$ result.add(myLastTestClass)[ CD ]
Line_2 $$ public List<Class> getClasses() -->Line_3 $$ List<Class> result = new ArrayList<Class>(myClassList.size())[ CD ]
Line_3 $$ List<Class> result = new ArrayList<Class>(myClassList.size())-->Line_9 $$ result.add(myLastTestClass)[ FD ]
Line_12 $$ Collections.sort(result, new Comparator<Class>() -->Line_14 $$ return getRank(o1) - getRank(o2)[ CD ]
Line_3 $$ List<Class> result = new ArrayList<Class>(myClassList.size())-->Line_5 $$ result.add(myFirstTestClass)[ FD ]
Line_12 $$ Collections.sort(result, new Comparator<Class>() -->Line_14 $$ return getRank(o1) - getRank(o2)[ FD ]
Line_3 $$ List<Class> result = new ArrayList<Class>(myClassList.size())-->Line_12 $$ Collections.sort(result, new Comparator<Class>() [ FD ]
Line_2 $$ public List<Class> getClasses() -->Line_8 $$ if (myLastTestClass != null) [ CD ]
Line_2 $$ public List<Class> getClasses() -->Line_18 $$ return result[ CD ]
Line_2 $$ public List<Class> getClasses() -->Line_7 $$ result.addAll(myClassList)[ CD ]
Line_11 $$ if (!ourRankList.isEmpty()) -->Line_12 $$ Collections.sort(result, new Comparator<Class>() [ CD ]
Line_2 $$ public List<Class> getClasses() -->Line_11 $$ if (!ourRankList.isEmpty()) [ CD ]
Line_4 $$ if (myFirstTestClass != null) -->Line_5 $$ result.add(myFirstTestClass)[ CD ]
