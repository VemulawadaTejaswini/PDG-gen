Line_6 $$ if (ObjectUtils.isEmpty(array2)) -->Line_7 $$ return array1[ CD ]
Line_9 $$ List<String> result = new ArrayList<String>()-->Line_13 $$ result.add(str)[ FD ]
Line_2 $$ public static String[] mergeStringArrays(String[] array1, String[] array2) -->Line_3 $$ if (ObjectUtils.isEmpty(array1)) [ FD ]
Line_11 $$ for (String str : array2) -->Line_13 $$ result.add(str)[ FD ]
Line_3 $$ if (ObjectUtils.isEmpty(array1)) -->Line_4 $$ return array2[ CD ]
Line_2 $$ public static String[] mergeStringArrays(String[] array1, String[] array2) -->Line_6 $$ if (ObjectUtils.isEmpty(array2)) [ CD ]
Line_9 $$ List<String> result = new ArrayList<String>()-->Line_12 $$ if (!result.contains(str)) [ FD ]
Line_2 $$ public static String[] mergeStringArrays(String[] array1, String[] array2) -->Line_3 $$ if (ObjectUtils.isEmpty(array1)) [ CD ]
Line_2 $$ public static String[] mergeStringArrays(String[] array1, String[] array2) -->Line_10 $$ result.addAll(Arrays.asList(array1))[ CD ]
Line_11 $$ for (String str : array2) -->Line_12 $$ if (!result.contains(str)) [ FD ]
Line_9 $$ List<String> result = new ArrayList<String>()-->Line_10 $$ result.addAll(Arrays.asList(array1))[ FD ]
Line_12 $$ if (!result.contains(str)) -->Line_13 $$ result.add(str)[ CD ]
Line_2 $$ public static String[] mergeStringArrays(String[] array1, String[] array2) -->Line_10 $$ result.addAll(Arrays.asList(array1))[ FD ]
Line_2 $$ public static String[] mergeStringArrays(String[] array1, String[] array2) -->Line_16 $$ return toStringArray(result)[ CD ]
Line_2 $$ public static String[] mergeStringArrays(String[] array1, String[] array2) -->Line_9 $$ List<String> result = new ArrayList<String>()[ CD ]
Line_9 $$ List<String> result = new ArrayList<String>()-->Line_16 $$ return toStringArray(result)[ FD ]
Line_2 $$ public static String[] mergeStringArrays(String[] array1, String[] array2) -->Line_6 $$ if (ObjectUtils.isEmpty(array2)) [ FD ]
