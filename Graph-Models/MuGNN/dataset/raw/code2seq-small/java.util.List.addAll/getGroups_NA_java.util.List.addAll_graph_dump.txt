Line_10 $$ if (groups != null && !groups.isEmpty()) -->Line_12 $$ if (!combined)[ CD ]
Line_2 $$ public synchronized List<String> getGroups(String user) throws IOException -->Line_3 $$ Set<String> groupSet = new TreeSet<String>()[ CD ]
Line_16 $$ List<String> results = new ArrayList<String>(groupSet.size())-->Line_17 $$ results.addAll(groupSet)[ FD ]
Line_3 $$ Set<String> groupSet = new TreeSet<String>()-->Line_17 $$ results.addAll(groupSet)[ FD ]
Line_2 $$ public synchronized List<String> getGroups(String user) throws IOException -->Line_17 $$ results.addAll(groupSet)[ CD ]
Line_4 $$ List<String> groups = null-->Line_10 $$ if (groups != null && !groups.isEmpty()) [ FD ]
Line_4 $$ List<String> groups = null-->Line_7 $$ groups = provider.getGroups(user)[ FD ]
Line_2 $$ public synchronized List<String> getGroups(String user) throws IOException -->Line_4 $$ List<String> groups = null[ CD ]
Line_10 $$ if (groups != null && !groups.isEmpty()) -->Line_11 $$ groupSet.addAll(groups)[ CD ]
Line_3 $$ Set<String> groupSet = new TreeSet<String>()-->Line_11 $$ groupSet.addAll(groups)[ FD ]
Line_4 $$ List<String> groups = null-->Line_11 $$ groupSet.addAll(groups)[ FD ]
Line_3 $$ Set<String> groupSet = new TreeSet<String>()-->Line_16 $$ List<String> results = new ArrayList<String>(groupSet.size())[ FD ]
Line_5 $$ for (GroupMappingServiceProvider provider : providersList) -->Line_7 $$ groups = provider.getGroups(user)[ FD ]
Line_7 $$ groups = provider.getGroups(user)-->Line_10 $$ if (groups != null && !groups.isEmpty()) [ FD ]
Line_7 $$ groups = provider.getGroups(user)-->Line_11 $$ groupSet.addAll(groups)[ FD ]
Line_2 $$ public synchronized List<String> getGroups(String user) throws IOException -->Line_7 $$ groups = provider.getGroups(user)[ FD ]
Line_2 $$ public synchronized List<String> getGroups(String user) throws IOException -->Line_18 $$ return results[ CD ]
Line_2 $$ public synchronized List<String> getGroups(String user) throws IOException -->Line_16 $$ List<String> results = new ArrayList<String>(groupSet.size())[ CD ]
