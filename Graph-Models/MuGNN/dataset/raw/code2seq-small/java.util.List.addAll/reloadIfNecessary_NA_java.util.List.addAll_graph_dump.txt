Line_14 $$ UrlClassLoader loader = new UrlClassLoader(UrlClassLoader.build().urls(urls).parent(baseLoader.getParent())) -->Line_22 $$ return super.loadClass(name, resolve)[ FD ]
Line_2 $$ public static <T extends ParametersEnhancer> T reloadIfNecessary(@NotNull final Class<T> clazz) throws IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException, ClassNotFoundException -->Line_10 $$ Method method = baseLoader.getClass().getMethod("getUrls")[ CD ]
Line_10 $$ Method method = baseLoader.getClass().getMethod("getUrls")-->Line_12 $$ urls.addAll((Collection<? extends URL>) method.invoke(baseLoader))[ FD ]
Line_9 $$ final ClassLoader baseLoader = clazz.getClassLoader()-->Line_20 $$ return baseLoader.loadClass(name)[ FD ]
Line_2 $$ public static <T extends ParametersEnhancer> T reloadIfNecessary(@NotNull final Class<T> clazz) throws IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException, ClassNotFoundException -->Line_16 $$ if (name.equals(clazz.getName())) [ FD ]
Line_4 $$ List<URL> urls = ContainerUtilRt.newArrayList()-->Line_14 $$ UrlClassLoader loader = new UrlClassLoader(UrlClassLoader.build().urls(urls).parent(baseLoader.getParent())) [ FD ]
Line_2 $$ public static <T extends ParametersEnhancer> T reloadIfNecessary(@NotNull final Class<T> clazz) throws IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException, ClassNotFoundException -->Line_4 $$ List<URL> urls = ContainerUtilRt.newArrayList()[ CD ]
Line_2 $$ public static <T extends ParametersEnhancer> T reloadIfNecessary(@NotNull final Class<T> clazz) throws IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException, ClassNotFoundException -->Line_5 $$ instance.enhanceLocalProcessing(urls)[ CD ]
Line_14 $$ UrlClassLoader loader = new UrlClassLoader(UrlClassLoader.build().urls(urls).parent(baseLoader.getParent())) -->Line_17 $$ return super.loadClass(name, resolve)[ FD ]
Line_9 $$ final ClassLoader baseLoader = clazz.getClassLoader()-->Line_10 $$ Method method = baseLoader.getClass().getMethod("getUrls")[ FD ]
Line_10 $$ Method method = baseLoader.getClass().getMethod("getUrls")-->Line_11 $$ if (method != null) [ FD ]
Line_4 $$ List<URL> urls = ContainerUtilRt.newArrayList()-->Line_12 $$ urls.addAll((Collection<? extends URL>) method.invoke(baseLoader))[ FD ]
Line_6 $$ if (urls.isEmpty()) -->Line_7 $$ return instance[ CD ]
Line_2 $$ public static <T extends ParametersEnhancer> T reloadIfNecessary(@NotNull final Class<T> clazz) throws IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException, ClassNotFoundException -->Line_11 $$ if (method != null) [ CD ]
Line_9 $$ final ClassLoader baseLoader = clazz.getClassLoader()-->Line_12 $$ urls.addAll((Collection<? extends URL>) method.invoke(baseLoader))[ FD ]
Line_11 $$ if (method != null) -->Line_12 $$ urls.addAll((Collection<? extends URL>) method.invoke(baseLoader))[ CD ]
Line_2 $$ public static <T extends ParametersEnhancer> T reloadIfNecessary(@NotNull final Class<T> clazz) throws IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException, ClassNotFoundException -->Line_3 $$ T instance = clazz.newInstance()[ CD ]
Line_2 $$ public static <T extends ParametersEnhancer> T reloadIfNecessary(@NotNull final Class<T> clazz) throws IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException, ClassNotFoundException -->Line_9 $$ final ClassLoader baseLoader = clazz.getClassLoader()[ CD ]
Line_16 $$ if (name.equals(clazz.getName())) -->Line_17 $$ return super.loadClass(name, resolve)[ CD ]
Line_3 $$ T instance = clazz.newInstance()-->Line_5 $$ instance.enhanceLocalProcessing(urls)[ FD ]
Line_2 $$ public static <T extends ParametersEnhancer> T reloadIfNecessary(@NotNull final Class<T> clazz) throws IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException, ClassNotFoundException -->Line_14 $$ UrlClassLoader loader = new UrlClassLoader(UrlClassLoader.build().urls(urls).parent(baseLoader.getParent())) [ CD ]
Line_14 $$ UrlClassLoader loader = new UrlClassLoader(UrlClassLoader.build().urls(urls).parent(baseLoader.getParent())) -->Line_16 $$ if (name.equals(clazz.getName())) [ FD ]
Line_9 $$ final ClassLoader baseLoader = clazz.getClassLoader()-->Line_14 $$ UrlClassLoader loader = new UrlClassLoader(UrlClassLoader.build().urls(urls).parent(baseLoader.getParent())) [ FD ]
Line_2 $$ public static <T extends ParametersEnhancer> T reloadIfNecessary(@NotNull final Class<T> clazz) throws IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException, ClassNotFoundException -->Line_6 $$ if (urls.isEmpty()) [ CD ]
Line_14 $$ UrlClassLoader loader = new UrlClassLoader(UrlClassLoader.build().urls(urls).parent(baseLoader.getParent())) -->Line_20 $$ return baseLoader.loadClass(name)[ FD ]
Line_4 $$ List<URL> urls = ContainerUtilRt.newArrayList()-->Line_5 $$ instance.enhanceLocalProcessing(urls)[ FD ]
Line_14 $$ UrlClassLoader loader = new UrlClassLoader(UrlClassLoader.build().urls(urls).parent(baseLoader.getParent())) -->Line_16 $$ if (name.equals(clazz.getName())) [ CD ]
Line_4 $$ List<URL> urls = ContainerUtilRt.newArrayList()-->Line_6 $$ if (urls.isEmpty()) [ FD ]
Line_14 $$ UrlClassLoader loader = new UrlClassLoader(UrlClassLoader.build().urls(urls).parent(baseLoader.getParent())) -->Line_27 $$ return (T) loader.loadClass(clazz.getName()).newInstance()[ FD ]
Line_2 $$ public static <T extends ParametersEnhancer> T reloadIfNecessary(@NotNull final Class<T> clazz) throws IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException, ClassNotFoundException -->Line_9 $$ final ClassLoader baseLoader = clazz.getClassLoader()[ FD ]
Line_2 $$ public static <T extends ParametersEnhancer> T reloadIfNecessary(@NotNull final Class<T> clazz) throws IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException, ClassNotFoundException -->Line_3 $$ T instance = clazz.newInstance()[ FD ]
Line_2 $$ public static <T extends ParametersEnhancer> T reloadIfNecessary(@NotNull final Class<T> clazz) throws IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException, ClassNotFoundException -->Line_27 $$ return (T) loader.loadClass(clazz.getName()).newInstance()[ FD ]
Line_2 $$ public static <T extends ParametersEnhancer> T reloadIfNecessary(@NotNull final Class<T> clazz) throws IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException, ClassNotFoundException -->Line_27 $$ return (T) loader.loadClass(clazz.getName()).newInstance()[ CD ]
