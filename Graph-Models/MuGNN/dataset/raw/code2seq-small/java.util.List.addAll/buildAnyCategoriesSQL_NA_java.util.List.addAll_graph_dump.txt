Line_2 $$ protected void buildAnyCategoriesSQL(long[] categoryIds, StringBundler sb) -->Line_4 $$ String categoryIdsString = null[ CD ]
Line_6 $$ List<Long> categoryIdsList = new ArrayList()-->Line_13 $$ categoryIdsString = StringUtil.merge(categoryIdsList)[ FD ]
Line_7 $$ for (long categoryId : categoryIds) -->Line_8 $$ categoryIdsList.addAll(getSubcategoryIds(categoryId))[ FD ]
Line_5 $$ if (PropsValues.ASSET_CATEGORIES_SEARCH_HIERARCHICAL) -->Line_15 $$ categoryIdsString = StringUtil.merge(categoryIds)[ CD ]
Line_2 $$ protected void buildAnyCategoriesSQL(long[] categoryIds, StringBundler sb) -->Line_18 $$ sb.append(StringUtil.replace(sql, "[$CATEGORY_ID$]", categoryIdsString))[ CD ]
Line_2 $$ protected void buildAnyCategoriesSQL(long[] categoryIds, StringBundler sb) -->Line_18 $$ sb.append(StringUtil.replace(sql, "[$CATEGORY_ID$]", categoryIdsString))[ FD ]
Line_5 $$ if (PropsValues.ASSET_CATEGORIES_SEARCH_HIERARCHICAL) -->Line_10 $$ if (categoryIdsList.isEmpty()) [ CD ]
Line_2 $$ protected void buildAnyCategoriesSQL(long[] categoryIds, StringBundler sb) -->Line_19 $$ sb.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_2 $$ protected void buildAnyCategoriesSQL(long[] categoryIds, StringBundler sb) -->Line_19 $$ sb.append(StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_4 $$ String categoryIdsString = null-->Line_18 $$ sb.append(StringUtil.replace(sql, "[$CATEGORY_ID$]", categoryIdsString))[ FD ]
Line_2 $$ protected void buildAnyCategoriesSQL(long[] categoryIds, StringBundler sb) -->Line_17 $$ sb.append(" AND (")[ CD ]
Line_6 $$ List<Long> categoryIdsList = new ArrayList()-->Line_10 $$ if (categoryIdsList.isEmpty()) [ FD ]
Line_10 $$ if (categoryIdsList.isEmpty()) -->Line_11 $$ return[ CD ]
Line_2 $$ protected void buildAnyCategoriesSQL(long[] categoryIds, StringBundler sb) -->Line_3 $$ String sql = CustomSQLUtil.get(FIND_BY_AND_CATEGORY_IDS)[ CD ]
Line_3 $$ String sql = CustomSQLUtil.get(FIND_BY_AND_CATEGORY_IDS)-->Line_18 $$ sb.append(StringUtil.replace(sql, "[$CATEGORY_ID$]", categoryIdsString))[ FD ]
Line_13 $$ categoryIdsString = StringUtil.merge(categoryIdsList)-->Line_18 $$ sb.append(StringUtil.replace(sql, "[$CATEGORY_ID$]", categoryIdsString))[ FD ]
Line_2 $$ protected void buildAnyCategoriesSQL(long[] categoryIds, StringBundler sb) -->Line_15 $$ categoryIdsString = StringUtil.merge(categoryIds)[ FD ]
Line_5 $$ if (PropsValues.ASSET_CATEGORIES_SEARCH_HIERARCHICAL) -->Line_13 $$ categoryIdsString = StringUtil.merge(categoryIdsList)[ CD ]
Line_13 $$ categoryIdsString = StringUtil.merge(categoryIdsList)-->Line_15 $$ categoryIdsString = StringUtil.merge(categoryIds)[ FD ]
Line_2 $$ protected void buildAnyCategoriesSQL(long[] categoryIds, StringBundler sb) -->Line_17 $$ sb.append(" AND (")[ FD ]
Line_4 $$ String categoryIdsString = null-->Line_13 $$ categoryIdsString = StringUtil.merge(categoryIdsList)[ FD ]
Line_4 $$ String categoryIdsString = null-->Line_15 $$ categoryIdsString = StringUtil.merge(categoryIds)[ FD ]
Line_15 $$ categoryIdsString = StringUtil.merge(categoryIds)-->Line_18 $$ sb.append(StringUtil.replace(sql, "[$CATEGORY_ID$]", categoryIdsString))[ FD ]
Line_5 $$ if (PropsValues.ASSET_CATEGORIES_SEARCH_HIERARCHICAL) -->Line_6 $$ List<Long> categoryIdsList = new ArrayList()[ CD ]
Line_6 $$ List<Long> categoryIdsList = new ArrayList()-->Line_8 $$ categoryIdsList.addAll(getSubcategoryIds(categoryId))[ FD ]
Line_2 $$ protected void buildAnyCategoriesSQL(long[] categoryIds, StringBundler sb) -->Line_5 $$ if (PropsValues.ASSET_CATEGORIES_SEARCH_HIERARCHICAL) [ CD ]
