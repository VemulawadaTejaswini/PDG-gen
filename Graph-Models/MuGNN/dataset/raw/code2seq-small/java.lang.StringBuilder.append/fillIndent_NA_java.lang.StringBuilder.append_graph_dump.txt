Line_2 $$ public static String fillIndent(Project project, FileType fileType, int indent) -->Line_3 $$ final CodeStyleSettings settings = CodeStyleSettingsManager.getSettings(project)[ FD ]
Line_13 $$ for (int i = 0; i < tabCount; i++) -->Line_32 $$ for (int i = 0; i < totalSize; i++) [ FD ]
Line_3 $$ final CodeStyleSettings settings = CodeStyleSettingsManager.getSettings(project)-->Line_6 $$ int indentLevelSize = indentLevel * settings.getIndentSize(fileType)[ FD ]
Line_22 $$ if (size >= settings.getTabSize(fileType)) -->Line_23 $$ buffer.append('\t')[ CD ]
Line_22 $$ if (size >= settings.getTabSize(fileType)) -->Line_27 $$ size--[ CD ]
Line_2 $$ public static String fillIndent(Project project, FileType fileType, int indent) -->Line_6 $$ int indentLevelSize = indentLevel * settings.getIndentSize(fileType)[ CD ]
Line_16 $$ for (int i = 0; i < leftSpaces + spaceCount; i++) -->Line_32 $$ for (int i = 0; i < totalSize; i++) [ FD ]
Line_20 $$ int size = totalSize-->Line_21 $$ while (size > 0) [ FD ]
Line_10 $$ if (settings.isSmartTabs(fileType)) -->Line_12 $$ int leftSpaces = indentLevelSize - tabCount * settings.getTabSize(fileType)[ CD ]
Line_32 $$ for (int i = 0; i < totalSize; i++) -->Line_33 $$ buffer.append(' ')[ CD ]
Line_2 $$ public static String fillIndent(Project project, FileType fileType, int indent) -->Line_36 $$ return buffer.toString()[ CD ]
Line_2 $$ public static String fillIndent(Project project, FileType fileType, int indent) -->Line_9 $$ if (settings.useTabCharacter(fileType)) [ CD ]
Line_22 $$ if (size >= settings.getTabSize(fileType)) -->Line_26 $$ buffer.append(' ')[ CD ]
Line_2 $$ public static String fillIndent(Project project, FileType fileType, int indent) -->Line_6 $$ int indentLevelSize = indentLevel * settings.getIndentSize(fileType)[ FD ]
Line_8 $$ StringBuilder buffer = new StringBuilder()-->Line_26 $$ buffer.append(' ')[ FD ]
Line_21 $$ while (size > 0) -->Line_22 $$ if (size >= settings.getTabSize(fileType)) [ CD ]
Line_2 $$ public static String fillIndent(Project project, FileType fileType, int indent) -->Line_8 $$ StringBuilder buffer = new StringBuilder()[ CD ]
Line_22 $$ if (size >= settings.getTabSize(fileType)) -->Line_24 $$ size -= settings.getTabSize(fileType)[ CD ]
Line_2 $$ public static String fillIndent(Project project, FileType fileType, int indent) -->Line_11 $$ int tabCount = indentLevelSize / settings.getTabSize(fileType)[ FD ]
Line_13 $$ for (int i = 0; i < tabCount; i++) -->Line_14 $$ buffer.append('\t')[ CD ]
Line_2 $$ public static String fillIndent(Project project, FileType fileType, int indent) -->Line_7 $$ int totalSize = indentLevelSize + spaceCount[ CD ]
Line_8 $$ StringBuilder buffer = new StringBuilder()-->Line_14 $$ buffer.append('\t')[ FD ]
Line_3 $$ final CodeStyleSettings settings = CodeStyleSettingsManager.getSettings(project)-->Line_22 $$ if (size >= settings.getTabSize(fileType)) [ FD ]
Line_2 $$ public static String fillIndent(Project project, FileType fileType, int indent) -->Line_12 $$ int leftSpaces = indentLevelSize - tabCount * settings.getTabSize(fileType)[ FD ]
Line_3 $$ final CodeStyleSettings settings = CodeStyleSettingsManager.getSettings(project)-->Line_11 $$ int tabCount = indentLevelSize / settings.getTabSize(fileType)[ FD ]
Line_11 $$ int tabCount = indentLevelSize / settings.getTabSize(fileType)-->Line_13 $$ for (int i = 0; i < tabCount; i++) [ FD ]
Line_13 $$ for (int i = 0; i < tabCount; i++) -->Line_16 $$ for (int i = 0; i < leftSpaces + spaceCount; i++) [ FD ]
Line_10 $$ if (settings.isSmartTabs(fileType)) -->Line_11 $$ int tabCount = indentLevelSize / settings.getTabSize(fileType)[ CD ]
Line_20 $$ int size = totalSize-->Line_24 $$ size -= settings.getTabSize(fileType)[ FD ]
Line_3 $$ final CodeStyleSettings settings = CodeStyleSettingsManager.getSettings(project)-->Line_9 $$ if (settings.useTabCharacter(fileType)) [ FD ]
Line_10 $$ if (settings.isSmartTabs(fileType)) -->Line_16 $$ for (int i = 0; i < leftSpaces + spaceCount; i++) [ CD ]
Line_8 $$ StringBuilder buffer = new StringBuilder()-->Line_23 $$ buffer.append('\t')[ FD ]
Line_9 $$ if (settings.useTabCharacter(fileType)) -->Line_32 $$ for (int i = 0; i < totalSize; i++) [ CD ]
Line_2 $$ public static String fillIndent(Project project, FileType fileType, int indent) -->Line_5 $$ int spaceCount = indent - indentLevel * INDENT_FACTOR[ CD ]
Line_10 $$ if (settings.isSmartTabs(fileType)) -->Line_21 $$ while (size > 0) [ CD ]
Line_2 $$ public static String fillIndent(Project project, FileType fileType, int indent) -->Line_24 $$ size -= settings.getTabSize(fileType)[ FD ]
Line_10 $$ if (settings.isSmartTabs(fileType)) -->Line_13 $$ for (int i = 0; i < tabCount; i++) [ CD ]
Line_8 $$ StringBuilder buffer = new StringBuilder()-->Line_36 $$ return buffer.toString()[ FD ]
Line_24 $$ size -= settings.getTabSize(fileType)-->Line_22 $$ if (size >= settings.getTabSize(fileType)) [ FD ]
Line_2 $$ public static String fillIndent(Project project, FileType fileType, int indent) -->Line_10 $$ if (settings.isSmartTabs(fileType)) [ FD ]
Line_2 $$ public static String fillIndent(Project project, FileType fileType, int indent) -->Line_9 $$ if (settings.useTabCharacter(fileType)) [ FD ]
Line_3 $$ final CodeStyleSettings settings = CodeStyleSettingsManager.getSettings(project)-->Line_12 $$ int leftSpaces = indentLevelSize - tabCount * settings.getTabSize(fileType)[ FD ]
Line_10 $$ if (settings.isSmartTabs(fileType)) -->Line_20 $$ int size = totalSize[ CD ]
Line_20 $$ int size = totalSize-->Line_27 $$ size--[ FD ]
Line_3 $$ final CodeStyleSettings settings = CodeStyleSettingsManager.getSettings(project)-->Line_10 $$ if (settings.isSmartTabs(fileType)) [ FD ]
Line_24 $$ size -= settings.getTabSize(fileType)-->Line_27 $$ size--[ FD ]
Line_8 $$ StringBuilder buffer = new StringBuilder()-->Line_17 $$ buffer.append(' ')[ FD ]
Line_8 $$ StringBuilder buffer = new StringBuilder()-->Line_33 $$ buffer.append(' ')[ FD ]
Line_9 $$ if (settings.useTabCharacter(fileType)) -->Line_10 $$ if (settings.isSmartTabs(fileType)) [ CD ]
Line_2 $$ public static String fillIndent(Project project, FileType fileType, int indent) -->Line_22 $$ if (size >= settings.getTabSize(fileType)) [ FD ]
Line_7 $$ int totalSize = indentLevelSize + spaceCount-->Line_32 $$ for (int i = 0; i < totalSize; i++) [ FD ]
Line_3 $$ final CodeStyleSettings settings = CodeStyleSettingsManager.getSettings(project)-->Line_24 $$ size -= settings.getTabSize(fileType)[ FD ]
Line_24 $$ size -= settings.getTabSize(fileType)-->Line_21 $$ while (size > 0) [ FD ]
Line_2 $$ public static String fillIndent(Project project, FileType fileType, int indent) -->Line_3 $$ final CodeStyleSettings settings = CodeStyleSettingsManager.getSettings(project)[ CD ]
Line_16 $$ for (int i = 0; i < leftSpaces + spaceCount; i++) -->Line_17 $$ buffer.append(' ')[ CD ]
Line_20 $$ int size = totalSize-->Line_22 $$ if (size >= settings.getTabSize(fileType)) [ FD ]
Line_2 $$ public static String fillIndent(Project project, FileType fileType, int indent) -->Line_4 $$ int indentLevel = (indent + INDENT_FACTOR / 2) / INDENT_FACTOR[ CD ]
