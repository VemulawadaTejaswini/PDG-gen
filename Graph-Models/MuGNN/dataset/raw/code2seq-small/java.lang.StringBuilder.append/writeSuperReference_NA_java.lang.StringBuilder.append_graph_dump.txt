Line_2 $$ public static void writeSuperReference(@Nullable PsiClass targetClass, StringBuilder buffer, ExpressionContext context) -->Line_3 $$ if (targetClass != null && !(targetClass instanceof PsiAnonymousClass)) [ CD ]
Line_3 $$ if (targetClass != null && !(targetClass instanceof PsiAnonymousClass)) -->Line_6 $$ buffer.append('.')[ CD ]
Line_2 $$ public static void writeSuperReference(@Nullable PsiClass targetClass, StringBuilder buffer, ExpressionContext context) -->Line_8 $$ buffer.append("super")[ CD ]
Line_3 $$ if (targetClass != null && !(targetClass instanceof PsiAnonymousClass)) -->Line_4 $$ final GrCodeReferenceElement ref = GroovyPsiElementFactory.getInstance(context.project).createCodeReferenceElementFromClass(targetClass)[ CD ]
Line_2 $$ public static void writeSuperReference(@Nullable PsiClass targetClass, StringBuilder buffer, ExpressionContext context) -->Line_6 $$ buffer.append('.')[ FD ]
Line_2 $$ public static void writeSuperReference(@Nullable PsiClass targetClass, StringBuilder buffer, ExpressionContext context) -->Line_5 $$ writeCodeReferenceElement(buffer, ref)[ FD ]
Line_4 $$ final GrCodeReferenceElement ref = GroovyPsiElementFactory.getInstance(context.project).createCodeReferenceElementFromClass(targetClass)-->Line_5 $$ writeCodeReferenceElement(buffer, ref)[ FD ]
Line_3 $$ if (targetClass != null && !(targetClass instanceof PsiAnonymousClass)) -->Line_5 $$ writeCodeReferenceElement(buffer, ref)[ CD ]
Line_2 $$ public static void writeSuperReference(@Nullable PsiClass targetClass, StringBuilder buffer, ExpressionContext context) -->Line_4 $$ final GrCodeReferenceElement ref = GroovyPsiElementFactory.getInstance(context.project).createCodeReferenceElementFromClass(targetClass)[ FD ]
Line_2 $$ public static void writeSuperReference(@Nullable PsiClass targetClass, StringBuilder buffer, ExpressionContext context) -->Line_8 $$ buffer.append("super")[ FD ]
