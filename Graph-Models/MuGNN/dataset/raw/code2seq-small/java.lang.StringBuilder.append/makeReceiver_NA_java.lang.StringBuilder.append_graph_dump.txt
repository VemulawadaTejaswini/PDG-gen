Line_8 $$ if (i < receivers.size() - 1)-->Line_9 $$ inName.append(",")[ CD ]
Line_4 $$ StringBuilder inName = new StringBuilder("(")-->Line_12 $$ inName.append(')')[ FD ]
Line_2 $$ private static ColumnSpecification makeReceiver(List<? extends ColumnSpecification> receivers) -->Line_8 $$ if (i < receivers.size() - 1)[ FD ]
Line_2 $$ private static ColumnSpecification makeReceiver(List<? extends ColumnSpecification> receivers) -->Line_15 $$ return new ColumnSpecification(receivers.get(0).ksName, receivers.get(0).cfName, identifier, type)[ FD ]
Line_2 $$ private static ColumnSpecification makeReceiver(List<? extends ColumnSpecification> receivers) -->Line_14 $$ TupleType type = new TupleType(types)[ CD ]
Line_4 $$ StringBuilder inName = new StringBuilder("(")-->Line_9 $$ inName.append(",")[ FD ]
Line_4 $$ StringBuilder inName = new StringBuilder("(")-->Line_13 $$ ColumnIdentifier identifier = new ColumnIdentifier(inName.toString(), true)[ FD ]
Line_5 $$ for (int i = 0; i < receivers.size(); i++) -->Line_7 $$ inName.append(receiver.name)[ CD ]
Line_5 $$ for (int i = 0; i < receivers.size(); i++) -->Line_6 $$ ColumnSpecification receiver = receivers.get(i)[ FD ]
Line_2 $$ private static ColumnSpecification makeReceiver(List<? extends ColumnSpecification> receivers) -->Line_5 $$ for (int i = 0; i < receivers.size(); i++) [ FD ]
Line_4 $$ StringBuilder inName = new StringBuilder("(")-->Line_7 $$ inName.append(receiver.name)[ FD ]
Line_2 $$ private static ColumnSpecification makeReceiver(List<? extends ColumnSpecification> receivers) -->Line_4 $$ StringBuilder inName = new StringBuilder("(")[ CD ]
Line_2 $$ private static ColumnSpecification makeReceiver(List<? extends ColumnSpecification> receivers) -->Line_5 $$ for (int i = 0; i < receivers.size(); i++) [ CD ]
Line_2 $$ private static ColumnSpecification makeReceiver(List<? extends ColumnSpecification> receivers) -->Line_3 $$ List<AbstractType<?>> types = new ArrayList(receivers.size())[ FD ]
Line_3 $$ List<AbstractType<?>> types = new ArrayList(receivers.size())-->Line_10 $$ types.add(receiver.type)[ FD ]
Line_2 $$ private static ColumnSpecification makeReceiver(List<? extends ColumnSpecification> receivers) -->Line_15 $$ return new ColumnSpecification(receivers.get(0).ksName, receivers.get(0).cfName, identifier, type)[ CD ]
Line_5 $$ for (int i = 0; i < receivers.size(); i++) -->Line_10 $$ types.add(receiver.type)[ CD ]
Line_2 $$ private static ColumnSpecification makeReceiver(List<? extends ColumnSpecification> receivers) -->Line_3 $$ List<AbstractType<?>> types = new ArrayList(receivers.size())[ CD ]
Line_5 $$ for (int i = 0; i < receivers.size(); i++) -->Line_8 $$ if (i < receivers.size() - 1)[ FD ]
Line_2 $$ private static ColumnSpecification makeReceiver(List<? extends ColumnSpecification> receivers) -->Line_12 $$ inName.append(')')[ CD ]
Line_2 $$ private static ColumnSpecification makeReceiver(List<? extends ColumnSpecification> receivers) -->Line_13 $$ ColumnIdentifier identifier = new ColumnIdentifier(inName.toString(), true)[ CD ]
Line_2 $$ private static ColumnSpecification makeReceiver(List<? extends ColumnSpecification> receivers) -->Line_6 $$ ColumnSpecification receiver = receivers.get(i)[ FD ]
Line_5 $$ for (int i = 0; i < receivers.size(); i++) -->Line_6 $$ ColumnSpecification receiver = receivers.get(i)[ CD ]
Line_5 $$ for (int i = 0; i < receivers.size(); i++) -->Line_8 $$ if (i < receivers.size() - 1)[ CD ]
