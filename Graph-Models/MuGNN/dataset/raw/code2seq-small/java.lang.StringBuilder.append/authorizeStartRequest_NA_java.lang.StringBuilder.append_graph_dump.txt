Line_7 $$ if (!nmTokenIdentifier.getApplicationAttemptId().getApplicationId().equals(containerId.getApplicationAttemptId().getApplicationId())) -->Line_8 $$ unauthorized = true[ CD ]
Line_5 $$ boolean unauthorized = false-->Line_14 $$ unauthorized = true[ FD ]
Line_7 $$ if (!nmTokenIdentifier.getApplicationAttemptId().getApplicationId().equals(containerId.getApplicationAttemptId().getApplicationId())) -->Line_10 $$ if (!this.context.getContainerTokenSecretManager().isValidStartContainerRequest(containerTokenIdentifier)) [ CD ]
Line_2 $$ protected void authorizeStartRequest(NMTokenIdentifier nmTokenIdentifier, ContainerTokenIdentifier containerTokenIdentifier) throws YarnException -->Line_4 $$ String containerIDStr = containerId.toString()[ CD ]
Line_6 $$ StringBuilder messageBuilder = new StringBuilder("Unauthorized request to start container. ")-->Line_9 $$ messageBuilder.append("\nNMToken for application attempt : ").append(nmTokenIdentifier.getApplicationAttemptId()).append(" was used for starting container with container token").append(" issued for application attempt : ").append(containerId.getApplicationAttemptId())[ FD ]
Line_2 $$ protected void authorizeStartRequest(NMTokenIdentifier nmTokenIdentifier, ContainerTokenIdentifier containerTokenIdentifier) throws YarnException -->Line_3 $$ ContainerId containerId = containerTokenIdentifier.getContainerID()[ CD ]
Line_2 $$ protected void authorizeStartRequest(NMTokenIdentifier nmTokenIdentifier, ContainerTokenIdentifier containerTokenIdentifier) throws YarnException -->Line_9 $$ messageBuilder.append("\nNMToken for application attempt : ").append(nmTokenIdentifier.getApplicationAttemptId()).append(" was used for starting container with container token").append(" issued for application attempt : ").append(containerId.getApplicationAttemptId())[ FD ]
Line_2 $$ protected void authorizeStartRequest(NMTokenIdentifier nmTokenIdentifier, ContainerTokenIdentifier containerTokenIdentifier) throws YarnException -->Line_3 $$ ContainerId containerId = containerTokenIdentifier.getContainerID()[ FD ]
Line_13 $$ if (containerTokenIdentifier.getExpiryTimeStamp() < System.currentTimeMillis()) -->Line_16 $$ messageBuilder.append("\nNote: System times on machines may be out of sync.").append(" Check system time and time zones.")[ CD ]
Line_5 $$ boolean unauthorized = false-->Line_8 $$ unauthorized = true[ FD ]
Line_2 $$ protected void authorizeStartRequest(NMTokenIdentifier nmTokenIdentifier, ContainerTokenIdentifier containerTokenIdentifier) throws YarnException -->Line_18 $$ if (unauthorized) [ CD ]
Line_3 $$ ContainerId containerId = containerTokenIdentifier.getContainerID()-->Line_7 $$ if (!nmTokenIdentifier.getApplicationAttemptId().getApplicationId().equals(containerId.getApplicationAttemptId().getApplicationId())) [ FD ]
Line_2 $$ protected void authorizeStartRequest(NMTokenIdentifier nmTokenIdentifier, ContainerTokenIdentifier containerTokenIdentifier) throws YarnException -->Line_15 $$ messageBuilder.append("\nThis token is expired. current time is ").append(System.currentTimeMillis()).append(" found ").append(containerTokenIdentifier.getExpiryTimeStamp())[ FD ]
Line_13 $$ if (containerTokenIdentifier.getExpiryTimeStamp() < System.currentTimeMillis()) -->Line_15 $$ messageBuilder.append("\nThis token is expired. current time is ").append(System.currentTimeMillis()).append(" found ").append(containerTokenIdentifier.getExpiryTimeStamp())[ CD ]
Line_18 $$ if (unauthorized) -->Line_20 $$ LOG.error(msg)[ CD ]
Line_6 $$ StringBuilder messageBuilder = new StringBuilder("Unauthorized request to start container. ")-->Line_12 $$ messageBuilder.append("\n Attempt to relaunch the same ").append("container with id ").append(containerIDStr).append(".")[ FD ]
Line_6 $$ StringBuilder messageBuilder = new StringBuilder("Unauthorized request to start container. ")-->Line_16 $$ messageBuilder.append("\nNote: System times on machines may be out of sync.").append(" Check system time and time zones.")[ FD ]
Line_11 $$ unauthorized = true-->Line_14 $$ unauthorized = true[ FD ]
Line_13 $$ if (containerTokenIdentifier.getExpiryTimeStamp() < System.currentTimeMillis()) -->Line_14 $$ unauthorized = true[ CD ]
Line_2 $$ protected void authorizeStartRequest(NMTokenIdentifier nmTokenIdentifier, ContainerTokenIdentifier containerTokenIdentifier) throws YarnException -->Line_7 $$ if (!nmTokenIdentifier.getApplicationAttemptId().getApplicationId().equals(containerId.getApplicationAttemptId().getApplicationId())) [ FD ]
Line_5 $$ boolean unauthorized = false-->Line_11 $$ unauthorized = true[ FD ]
Line_10 $$ if (!this.context.getContainerTokenSecretManager().isValidStartContainerRequest(containerTokenIdentifier)) -->Line_12 $$ messageBuilder.append("\n Attempt to relaunch the same ").append("container with id ").append(containerIDStr).append(".")[ CD ]
Line_3 $$ ContainerId containerId = containerTokenIdentifier.getContainerID()-->Line_4 $$ String containerIDStr = containerId.toString()[ FD ]
Line_4 $$ String containerIDStr = containerId.toString()-->Line_12 $$ messageBuilder.append("\n Attempt to relaunch the same ").append("container with id ").append(containerIDStr).append(".")[ FD ]
Line_10 $$ if (!this.context.getContainerTokenSecretManager().isValidStartContainerRequest(containerTokenIdentifier)) -->Line_13 $$ if (containerTokenIdentifier.getExpiryTimeStamp() < System.currentTimeMillis()) [ CD ]
Line_2 $$ protected void authorizeStartRequest(NMTokenIdentifier nmTokenIdentifier, ContainerTokenIdentifier containerTokenIdentifier) throws YarnException -->Line_6 $$ StringBuilder messageBuilder = new StringBuilder("Unauthorized request to start container. ")[ CD ]
Line_10 $$ if (!this.context.getContainerTokenSecretManager().isValidStartContainerRequest(containerTokenIdentifier)) -->Line_11 $$ unauthorized = true[ CD ]
Line_7 $$ if (!nmTokenIdentifier.getApplicationAttemptId().getApplicationId().equals(containerId.getApplicationAttemptId().getApplicationId())) -->Line_9 $$ messageBuilder.append("\nNMToken for application attempt : ").append(nmTokenIdentifier.getApplicationAttemptId()).append(" was used for starting container with container token").append(" issued for application attempt : ").append(containerId.getApplicationAttemptId())[ CD ]
Line_2 $$ protected void authorizeStartRequest(NMTokenIdentifier nmTokenIdentifier, ContainerTokenIdentifier containerTokenIdentifier) throws YarnException -->Line_13 $$ if (containerTokenIdentifier.getExpiryTimeStamp() < System.currentTimeMillis()) [ FD ]
Line_8 $$ unauthorized = true-->Line_14 $$ unauthorized = true[ FD ]
Line_19 $$ String msg = messageBuilder.toString()-->Line_20 $$ LOG.error(msg)[ FD ]
Line_19 $$ String msg = messageBuilder.toString()-->Line_21 $$ throw RPCUtil.getRemoteException(msg)[ FD ]
Line_2 $$ protected void authorizeStartRequest(NMTokenIdentifier nmTokenIdentifier, ContainerTokenIdentifier containerTokenIdentifier) throws YarnException -->Line_10 $$ if (!this.context.getContainerTokenSecretManager().isValidStartContainerRequest(containerTokenIdentifier)) [ FD ]
Line_3 $$ ContainerId containerId = containerTokenIdentifier.getContainerID()-->Line_9 $$ messageBuilder.append("\nNMToken for application attempt : ").append(nmTokenIdentifier.getApplicationAttemptId()).append(" was used for starting container with container token").append(" issued for application attempt : ").append(containerId.getApplicationAttemptId())[ FD ]
Line_6 $$ StringBuilder messageBuilder = new StringBuilder("Unauthorized request to start container. ")-->Line_19 $$ String msg = messageBuilder.toString()[ FD ]
Line_2 $$ protected void authorizeStartRequest(NMTokenIdentifier nmTokenIdentifier, ContainerTokenIdentifier containerTokenIdentifier) throws YarnException -->Line_5 $$ boolean unauthorized = false[ CD ]
Line_6 $$ StringBuilder messageBuilder = new StringBuilder("Unauthorized request to start container. ")-->Line_15 $$ messageBuilder.append("\nThis token is expired. current time is ").append(System.currentTimeMillis()).append(" found ").append(containerTokenIdentifier.getExpiryTimeStamp())[ FD ]
Line_8 $$ unauthorized = true-->Line_11 $$ unauthorized = true[ FD ]
Line_2 $$ protected void authorizeStartRequest(NMTokenIdentifier nmTokenIdentifier, ContainerTokenIdentifier containerTokenIdentifier) throws YarnException -->Line_7 $$ if (!nmTokenIdentifier.getApplicationAttemptId().getApplicationId().equals(containerId.getApplicationAttemptId().getApplicationId())) [ CD ]
Line_18 $$ if (unauthorized) -->Line_19 $$ String msg = messageBuilder.toString()[ CD ]
