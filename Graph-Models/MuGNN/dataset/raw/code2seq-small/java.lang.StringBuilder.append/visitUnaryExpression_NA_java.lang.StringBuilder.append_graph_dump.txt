Line_6 $$ final GrExpression operand = expression.getOperand()-->Line_21 $$ invokeMethodOn(((PsiMethod) resolved), operand, GrExpression.EMPTY_ARRAY, GrNamedArgument.EMPTY_ARRAY, GrClosableBlock.EMPTY_ARRAY, resolveResult.getSubstitutor(), expression)[ FD ]
Line_2 $$ public void visitUnaryExpression(GrUnaryExpression expression) -->Line_10 $$ if (!postfix || expression.getParent() instanceof GrStatementOwner || expression.getParent() instanceof GrControlStatement) [ FD ]
Line_15 $$ if (operand != null && shouldNotReplaceOperatorWithMethod(operand.getType(), null, expression.getOperationTokenType())) -->Line_16 $$ writeSimpleUnary(operand, expression, this)[ CD ]
Line_6 $$ final GrExpression operand = expression.getOperand()-->Line_11 $$ if (generatePrefixIncDec((PsiMethod) resolved, operand, expression))[ FD ]
Line_23 $$ if (operand != null) -->Line_24 $$ if (postfix) [ CD ]
Line_2 $$ public void visitUnaryExpression(GrUnaryExpression expression) -->Line_4 $$ final GroovyResolveResult resolveResult = PsiImplUtil.extractUniqueResult(expression.multiResolve(false))[ CD ]
Line_2 $$ public void visitUnaryExpression(GrUnaryExpression expression) -->Line_7 $$ IElementType opType = expression.getOperationTokenType()[ CD ]
Line_5 $$ final PsiElement resolved = resolveResult.getElement()-->Line_8 $$ if (resolved instanceof PsiMethod) [ FD ]
Line_2 $$ public void visitUnaryExpression(GrUnaryExpression expression) -->Line_28 $$ builder.append(expression.getOperationToken().getText())[ FD ]
Line_2 $$ public void visitUnaryExpression(GrUnaryExpression expression) -->Line_5 $$ final PsiElement resolved = resolveResult.getElement()[ CD ]
Line_4 $$ final GroovyResolveResult resolveResult = PsiImplUtil.extractUniqueResult(expression.multiResolve(false))-->Line_5 $$ final PsiElement resolved = resolveResult.getElement()[ FD ]
Line_6 $$ final GrExpression operand = expression.getOperand()-->Line_15 $$ if (operand != null && shouldNotReplaceOperatorWithMethod(operand.getType(), null, expression.getOperationTokenType())) [ FD ]
Line_2 $$ public void visitUnaryExpression(GrUnaryExpression expression) -->Line_6 $$ final GrExpression operand = expression.getOperand()[ FD ]
Line_7 $$ IElementType opType = expression.getOperationTokenType()-->Line_18 $$ if (opType == GroovyTokenTypes.mLNOT) [ FD ]
Line_18 $$ if (opType == GroovyTokenTypes.mLNOT) -->Line_19 $$ builder.append('!')[ CD ]
Line_2 $$ public void visitUnaryExpression(GrUnaryExpression expression) -->Line_3 $$ final boolean postfix = expression.isPostfix()[ FD ]
Line_6 $$ final GrExpression operand = expression.getOperand()-->Line_29 $$ operand.accept(this)[ FD ]
Line_2 $$ public void visitUnaryExpression(GrUnaryExpression expression) -->Line_15 $$ if (operand != null && shouldNotReplaceOperatorWithMethod(operand.getType(), null, expression.getOperationTokenType())) [ FD ]
Line_2 $$ public void visitUnaryExpression(GrUnaryExpression expression) -->Line_8 $$ if (resolved instanceof PsiMethod) [ CD ]
Line_2 $$ public void visitUnaryExpression(GrUnaryExpression expression) -->Line_21 $$ invokeMethodOn(((PsiMethod) resolved), operand, GrExpression.EMPTY_ARRAY, GrNamedArgument.EMPTY_ARRAY, GrClosableBlock.EMPTY_ARRAY, resolveResult.getSubstitutor(), expression)[ FD ]
Line_3 $$ final boolean postfix = expression.isPostfix()-->Line_10 $$ if (!postfix || expression.getParent() instanceof GrStatementOwner || expression.getParent() instanceof GrControlStatement) [ FD ]
Line_15 $$ if (operand != null && shouldNotReplaceOperatorWithMethod(operand.getType(), null, expression.getOperationTokenType())) -->Line_21 $$ invokeMethodOn(((PsiMethod) resolved), operand, GrExpression.EMPTY_ARRAY, GrNamedArgument.EMPTY_ARRAY, GrClosableBlock.EMPTY_ARRAY, resolveResult.getSubstitutor(), expression)[ CD ]
Line_2 $$ public void visitUnaryExpression(GrUnaryExpression expression) -->Line_7 $$ IElementType opType = expression.getOperationTokenType()[ FD ]
Line_24 $$ if (postfix) -->Line_28 $$ builder.append(expression.getOperationToken().getText())[ CD ]
Line_24 $$ if (postfix) -->Line_26 $$ builder.append(expression.getOperationToken().getText())[ CD ]
Line_9 $$ if (opType == GroovyTokenTypes.mINC || opType == GroovyTokenTypes.mDEC) -->Line_10 $$ if (!postfix || expression.getParent() instanceof GrStatementOwner || expression.getParent() instanceof GrControlStatement) [ CD ]
Line_2 $$ public void visitUnaryExpression(GrUnaryExpression expression) -->Line_16 $$ writeSimpleUnary(operand, expression, this)[ FD ]
Line_8 $$ if (resolved instanceof PsiMethod) -->Line_9 $$ if (opType == GroovyTokenTypes.mINC || opType == GroovyTokenTypes.mDEC) [ CD ]
Line_6 $$ final GrExpression operand = expression.getOperand()-->Line_25 $$ operand.accept(this)[ FD ]
Line_2 $$ public void visitUnaryExpression(GrUnaryExpression expression) -->Line_4 $$ final GroovyResolveResult resolveResult = PsiImplUtil.extractUniqueResult(expression.multiResolve(false))[ FD ]
Line_2 $$ public void visitUnaryExpression(GrUnaryExpression expression) -->Line_26 $$ builder.append(expression.getOperationToken().getText())[ FD ]
Line_8 $$ if (resolved instanceof PsiMethod) -->Line_23 $$ if (operand != null) [ CD ]
Line_2 $$ public void visitUnaryExpression(GrUnaryExpression expression) -->Line_11 $$ if (generatePrefixIncDec((PsiMethod) resolved, operand, expression))[ FD ]
Line_6 $$ final GrExpression operand = expression.getOperand()-->Line_23 $$ if (operand != null) [ FD ]
Line_4 $$ final GroovyResolveResult resolveResult = PsiImplUtil.extractUniqueResult(expression.multiResolve(false))-->Line_21 $$ invokeMethodOn(((PsiMethod) resolved), operand, GrExpression.EMPTY_ARRAY, GrNamedArgument.EMPTY_ARRAY, GrClosableBlock.EMPTY_ARRAY, resolveResult.getSubstitutor(), expression)[ FD ]
Line_15 $$ if (operand != null && shouldNotReplaceOperatorWithMethod(operand.getType(), null, expression.getOperationTokenType())) -->Line_18 $$ if (opType == GroovyTokenTypes.mLNOT) [ CD ]
Line_8 $$ if (resolved instanceof PsiMethod) -->Line_15 $$ if (operand != null && shouldNotReplaceOperatorWithMethod(operand.getType(), null, expression.getOperationTokenType())) [ CD ]
Line_10 $$ if (!postfix || expression.getParent() instanceof GrStatementOwner || expression.getParent() instanceof GrControlStatement) -->Line_11 $$ if (generatePrefixIncDec((PsiMethod) resolved, operand, expression))[ CD ]
Line_6 $$ final GrExpression operand = expression.getOperand()-->Line_16 $$ writeSimpleUnary(operand, expression, this)[ FD ]
Line_24 $$ if (postfix) -->Line_25 $$ operand.accept(this)[ CD ]
Line_24 $$ if (postfix) -->Line_29 $$ operand.accept(this)[ CD ]
Line_2 $$ public void visitUnaryExpression(GrUnaryExpression expression) -->Line_3 $$ final boolean postfix = expression.isPostfix()[ CD ]
Line_2 $$ public void visitUnaryExpression(GrUnaryExpression expression) -->Line_6 $$ final GrExpression operand = expression.getOperand()[ CD ]
Line_11 $$ if (generatePrefixIncDec((PsiMethod) resolved, operand, expression))-->Line_12 $$ return[ CD ]
