Line_3 $$ GeneralCommandLine cmd = new GeneralCommandLine()-->Line_32 $$ cmd.setExePath(homePath)[ FD ]
Line_7 $$ String homePath = mySdk.getHomePath()-->Line_32 $$ cmd.setExePath(homePath)[ FD ]
Line_3 $$ GeneralCommandLine cmd = new GeneralCommandLine()-->Line_17 $$ ParamsGroup bashParams = cmd.getParametersList().addParamsGroupAt(0, "Bash")[ FD ]
Line_8 $$ if (homePath != null) -->Line_9 $$ homePath = FileUtil.toSystemDependentName(homePath)[ CD ]
Line_7 $$ String homePath = mySdk.getHomePath()-->Line_25 $$ paramString = new StringBuilder(escaperFunction.fun(homePath) + " " + escaperFunction.fun(myRunnerScript))[ FD ]
Line_9 $$ homePath = FileUtil.toSystemDependentName(homePath)-->Line_22 $$ paramString = new StringBuilder(escaperFunction.fun(homePath) + " " + escaperFunction.fun(myHelper.asParamString()))[ FD ]
Line_2 $$ public GeneralCommandLine createCommandLine() -->Line_15 $$ if (!SystemInfo.isWindows && !PySdkUtil.isRemote(mySdk)) [ CD ]
Line_15 $$ if (!SystemInfo.isWindows && !PySdkUtil.isRemote(mySdk)) -->Line_19 $$ NotNullFunction<String, String> escaperFunction = StringUtil.escaper(false, "|>$\"'& ")[ CD ]
Line_22 $$ paramString = new StringBuilder(escaperFunction.fun(homePath) + " " + escaperFunction.fun(myHelper.asParamString()))-->Line_30 $$ bashParams.addParameter(paramString.toString())[ FD ]
Line_12 $$ ParamsGroup scriptParams = cmd.getParametersList().getParamsGroup(PythonCommandLineState.GROUP_SCRIPT)-->Line_36 $$ scriptParams.addParameter(myRunnerScript)[ FD ]
Line_2 $$ public GeneralCommandLine createCommandLine() -->Line_3 $$ GeneralCommandLine cmd = new GeneralCommandLine()[ CD ]
Line_2 $$ public GeneralCommandLine createCommandLine() -->Line_12 $$ ParamsGroup scriptParams = cmd.getParametersList().getParamsGroup(PythonCommandLineState.GROUP_SCRIPT)[ CD ]
Line_17 $$ ParamsGroup bashParams = cmd.getParametersList().addParamsGroupAt(0, "Bash")-->Line_30 $$ bashParams.addParameter(paramString.toString())[ FD ]
Line_12 $$ ParamsGroup scriptParams = cmd.getParametersList().getParamsGroup(PythonCommandLineState.GROUP_SCRIPT)-->Line_38 $$ scriptParams.addParameters(myParameters)[ FD ]
Line_41 $$ List<String> pythonPath = setupPythonPath()-->Line_42 $$ PythonCommandLineState.initPythonPath(cmd, true, pythonPath, homePath)[ FD ]
Line_3 $$ GeneralCommandLine cmd = new GeneralCommandLine()-->Line_16 $$ cmd.setExePath("bash")[ FD ]
Line_7 $$ String homePath = mySdk.getHomePath()-->Line_9 $$ homePath = FileUtil.toSystemDependentName(homePath)[ FD ]
Line_22 $$ paramString = new StringBuilder(escaperFunction.fun(homePath) + " " + escaperFunction.fun(myHelper.asParamString()))-->Line_28 $$ paramString.append(" ").append(p)[ FD ]
Line_2 $$ public GeneralCommandLine createCommandLine() -->Line_47 $$ return cmd[ CD ]
Line_3 $$ GeneralCommandLine cmd = new GeneralCommandLine()-->Line_5 $$ cmd.setWorkDirectory(myWorkingDirectory)[ FD ]
Line_17 $$ ParamsGroup bashParams = cmd.getParametersList().addParamsGroupAt(0, "Bash")-->Line_18 $$ bashParams.addParameter("-cl")[ FD ]
Line_27 $$ for (String p : myParameters) -->Line_28 $$ paramString.append(" ").append(p)[ FD ]
Line_43 $$ BuildoutFacet facet = BuildoutFacet.getInstance(myModule)-->Line_45 $$ facet.patchCommandLineForBuildout(cmd)[ FD ]
Line_2 $$ public GeneralCommandLine createCommandLine() -->Line_7 $$ String homePath = mySdk.getHomePath()[ CD ]
Line_15 $$ if (!SystemInfo.isWindows && !PySdkUtil.isRemote(mySdk)) -->Line_20 $$ StringBuilder paramString[ CD ]
Line_15 $$ if (!SystemInfo.isWindows && !PySdkUtil.isRemote(mySdk)) -->Line_30 $$ bashParams.addParameter(paramString.toString())[ CD ]
Line_2 $$ public GeneralCommandLine createCommandLine() -->Line_4 $$ if (myWorkingDirectory != null) [ CD ]
Line_3 $$ GeneralCommandLine cmd = new GeneralCommandLine()-->Line_34 $$ myHelper.addToGroup(scriptParams, cmd)[ FD ]
Line_15 $$ if (!SystemInfo.isWindows && !PySdkUtil.isRemote(mySdk)) -->Line_16 $$ cmd.setExePath("bash")[ CD ]
Line_20 $$ StringBuilder paramString-->Line_25 $$ paramString = new StringBuilder(escaperFunction.fun(homePath) + " " + escaperFunction.fun(myRunnerScript))[ FD ]
Line_7 $$ String homePath = mySdk.getHomePath()-->Line_8 $$ if (homePath != null) [ FD ]
Line_20 $$ StringBuilder paramString-->Line_30 $$ bashParams.addParameter(paramString.toString())[ FD ]
Line_20 $$ StringBuilder paramString-->Line_28 $$ paramString.append(" ").append(p)[ FD ]
Line_15 $$ if (!SystemInfo.isWindows && !PySdkUtil.isRemote(mySdk)) -->Line_32 $$ cmd.setExePath(homePath)[ CD ]
Line_3 $$ GeneralCommandLine cmd = new GeneralCommandLine()-->Line_14 $$ Map<String, String> env = cmd.getEnvironment()[ FD ]
Line_19 $$ NotNullFunction<String, String> escaperFunction = StringUtil.escaper(false, "|>$\"'& ")-->Line_22 $$ paramString = new StringBuilder(escaperFunction.fun(homePath) + " " + escaperFunction.fun(myHelper.asParamString()))[ FD ]
Line_15 $$ if (!SystemInfo.isWindows && !PySdkUtil.isRemote(mySdk)) -->Line_18 $$ bashParams.addParameter("-cl")[ CD ]
Line_9 $$ homePath = FileUtil.toSystemDependentName(homePath)-->Line_25 $$ paramString = new StringBuilder(escaperFunction.fun(homePath) + " " + escaperFunction.fun(myRunnerScript))[ FD ]
Line_33 $$ if (myHelper != null) -->Line_36 $$ scriptParams.addParameter(myRunnerScript)[ CD ]
Line_2 $$ public GeneralCommandLine createCommandLine() -->Line_40 $$ PythonEnvUtil.setPythonUnbuffered(env)[ CD ]
Line_2 $$ public GeneralCommandLine createCommandLine() -->Line_14 $$ Map<String, String> env = cmd.getEnvironment()[ CD ]
Line_19 $$ NotNullFunction<String, String> escaperFunction = StringUtil.escaper(false, "|>$\"'& ")-->Line_25 $$ paramString = new StringBuilder(escaperFunction.fun(homePath) + " " + escaperFunction.fun(myRunnerScript))[ FD ]
Line_12 $$ ParamsGroup scriptParams = cmd.getParametersList().getParamsGroup(PythonCommandLineState.GROUP_SCRIPT)-->Line_34 $$ myHelper.addToGroup(scriptParams, cmd)[ FD ]
Line_9 $$ homePath = FileUtil.toSystemDependentName(homePath)-->Line_32 $$ cmd.setExePath(homePath)[ FD ]
Line_14 $$ Map<String, String> env = cmd.getEnvironment()-->Line_40 $$ PythonEnvUtil.setPythonUnbuffered(env)[ FD ]
Line_2 $$ public GeneralCommandLine createCommandLine() -->Line_8 $$ if (homePath != null) [ CD ]
Line_20 $$ StringBuilder paramString-->Line_22 $$ paramString = new StringBuilder(escaperFunction.fun(homePath) + " " + escaperFunction.fun(myHelper.asParamString()))[ FD ]
Line_2 $$ public GeneralCommandLine createCommandLine() -->Line_41 $$ List<String> pythonPath = setupPythonPath()[ CD ]
Line_2 $$ public GeneralCommandLine createCommandLine() -->Line_43 $$ BuildoutFacet facet = BuildoutFacet.getInstance(myModule)[ CD ]
Line_44 $$ if (facet != null) -->Line_45 $$ facet.patchCommandLineForBuildout(cmd)[ CD ]
Line_3 $$ GeneralCommandLine cmd = new GeneralCommandLine()-->Line_45 $$ facet.patchCommandLineForBuildout(cmd)[ FD ]
Line_25 $$ paramString = new StringBuilder(escaperFunction.fun(homePath) + " " + escaperFunction.fun(myRunnerScript))-->Line_28 $$ paramString.append(" ").append(p)[ FD ]
Line_43 $$ BuildoutFacet facet = BuildoutFacet.getInstance(myModule)-->Line_44 $$ if (facet != null) [ FD ]
Line_3 $$ GeneralCommandLine cmd = new GeneralCommandLine()-->Line_23 $$ myHelper.addToPythonPath(cmd.getEnvironment())[ FD ]
Line_4 $$ if (myWorkingDirectory != null) -->Line_5 $$ cmd.setWorkDirectory(myWorkingDirectory)[ CD ]
Line_7 $$ String homePath = mySdk.getHomePath()-->Line_22 $$ paramString = new StringBuilder(escaperFunction.fun(homePath) + " " + escaperFunction.fun(myHelper.asParamString()))[ FD ]
Line_33 $$ if (myHelper != null) -->Line_34 $$ myHelper.addToGroup(scriptParams, cmd)[ CD ]
Line_15 $$ if (!SystemInfo.isWindows && !PySdkUtil.isRemote(mySdk)) -->Line_21 $$ if (myHelper != null) [ CD ]
Line_21 $$ if (myHelper != null) -->Line_23 $$ myHelper.addToPythonPath(cmd.getEnvironment())[ CD ]
Line_2 $$ public GeneralCommandLine createCommandLine() -->Line_44 $$ if (facet != null) [ CD ]
Line_21 $$ if (myHelper != null) -->Line_22 $$ paramString = new StringBuilder(escaperFunction.fun(homePath) + " " + escaperFunction.fun(myHelper.asParamString()))[ CD ]
Line_21 $$ if (myHelper != null) -->Line_25 $$ paramString = new StringBuilder(escaperFunction.fun(homePath) + " " + escaperFunction.fun(myRunnerScript))[ CD ]
Line_15 $$ if (!SystemInfo.isWindows && !PySdkUtil.isRemote(mySdk)) -->Line_17 $$ ParamsGroup bashParams = cmd.getParametersList().addParamsGroupAt(0, "Bash")[ CD ]
Line_25 $$ paramString = new StringBuilder(escaperFunction.fun(homePath) + " " + escaperFunction.fun(myRunnerScript))-->Line_30 $$ bashParams.addParameter(paramString.toString())[ FD ]
Line_22 $$ paramString = new StringBuilder(escaperFunction.fun(homePath) + " " + escaperFunction.fun(myHelper.asParamString()))-->Line_25 $$ paramString = new StringBuilder(escaperFunction.fun(homePath) + " " + escaperFunction.fun(myRunnerScript))[ FD ]
Line_9 $$ homePath = FileUtil.toSystemDependentName(homePath)-->Line_42 $$ PythonCommandLineState.initPythonPath(cmd, true, pythonPath, homePath)[ FD ]
Line_15 $$ if (!SystemInfo.isWindows && !PySdkUtil.isRemote(mySdk)) -->Line_38 $$ scriptParams.addParameters(myParameters)[ CD ]
Line_3 $$ GeneralCommandLine cmd = new GeneralCommandLine()-->Line_42 $$ PythonCommandLineState.initPythonPath(cmd, true, pythonPath, homePath)[ FD ]
Line_15 $$ if (!SystemInfo.isWindows && !PySdkUtil.isRemote(mySdk)) -->Line_33 $$ if (myHelper != null) [ CD ]
Line_2 $$ public GeneralCommandLine createCommandLine() -->Line_11 $$ PythonCommandLineState.createStandardGroups(cmd)[ CD ]
Line_3 $$ GeneralCommandLine cmd = new GeneralCommandLine()-->Line_11 $$ PythonCommandLineState.createStandardGroups(cmd)[ FD ]
Line_3 $$ GeneralCommandLine cmd = new GeneralCommandLine()-->Line_12 $$ ParamsGroup scriptParams = cmd.getParametersList().getParamsGroup(PythonCommandLineState.GROUP_SCRIPT)[ FD ]
Line_2 $$ public GeneralCommandLine createCommandLine() -->Line_42 $$ PythonCommandLineState.initPythonPath(cmd, true, pythonPath, homePath)[ CD ]
Line_7 $$ String homePath = mySdk.getHomePath()-->Line_42 $$ PythonCommandLineState.initPythonPath(cmd, true, pythonPath, homePath)[ FD ]
