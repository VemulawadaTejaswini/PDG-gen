Line_2 $$ private static boolean replaceVariableName(PsiElement element, PsiReferenceExpression firstReference, String newName, String originalName, StringBuilder out) -->Line_9 $$ out.append(' ')[ FD ]
Line_4 $$ final PsiReferenceExpression referenceExpression = (PsiReferenceExpression) element-->Line_5 $$ if (element.equals(firstReference) && isLeftSideOfSimpleAssignment(referenceExpression)) [ FD ]
Line_2 $$ private static boolean replaceVariableName(PsiElement element, PsiReferenceExpression firstReference, String newName, String originalName, StringBuilder out) -->Line_3 $$ if (element instanceof PsiReferenceExpression) [ FD ]
Line_26 $$ for (final PsiElement child : children) -->Line_30 $$ result = replaceVariableName(child, firstReference, newName, originalName, out)[ FD ]
Line_27 $$ if (result) -->Line_28 $$ out.append(child.getText())[ CD ]
Line_6 $$ final PsiType type = firstReference.getType()-->Line_8 $$ out.append(type.getCanonicalText())[ FD ]
Line_21 $$ if (children.length == 0) -->Line_23 $$ out.append(text)[ CD ]
Line_21 $$ if (children.length == 0) -->Line_33 $$ return result[ CD ]
Line_3 $$ if (element instanceof PsiReferenceExpression) -->Line_5 $$ if (element.equals(firstReference) && isLeftSideOfSimpleAssignment(referenceExpression)) [ CD ]
Line_3 $$ if (element instanceof PsiReferenceExpression) -->Line_15 $$ if (text.equals(originalName)) [ CD ]
Line_21 $$ if (children.length == 0) -->Line_25 $$ boolean result = false[ CD ]
Line_2 $$ private static boolean replaceVariableName(PsiElement element, PsiReferenceExpression firstReference, String newName, String originalName, StringBuilder out) -->Line_30 $$ result = replaceVariableName(child, firstReference, newName, originalName, out)[ FD ]
Line_27 $$ if (result) -->Line_30 $$ result = replaceVariableName(child, firstReference, newName, originalName, out)[ CD ]
Line_2 $$ private static boolean replaceVariableName(PsiElement element, PsiReferenceExpression firstReference, String newName, String originalName, StringBuilder out) -->Line_6 $$ final PsiType type = firstReference.getType()[ FD ]
Line_15 $$ if (text.equals(originalName)) -->Line_16 $$ out.append(newName)[ CD ]
Line_2 $$ private static boolean replaceVariableName(PsiElement element, PsiReferenceExpression firstReference, String newName, String originalName, StringBuilder out) -->Line_20 $$ final PsiElement[] children = element.getChildren()[ FD ]
Line_25 $$ boolean result = false-->Line_30 $$ result = replaceVariableName(child, firstReference, newName, originalName, out)[ FD ]
Line_7 $$ if (type != null) -->Line_9 $$ out.append(' ')[ CD ]
Line_2 $$ private static boolean replaceVariableName(PsiElement element, PsiReferenceExpression firstReference, String newName, String originalName, StringBuilder out) -->Line_28 $$ out.append(child.getText())[ FD ]
Line_2 $$ private static boolean replaceVariableName(PsiElement element, PsiReferenceExpression firstReference, String newName, String originalName, StringBuilder out) -->Line_10 $$ out.append(newName)[ FD ]
Line_2 $$ private static boolean replaceVariableName(PsiElement element, PsiReferenceExpression firstReference, String newName, String originalName, StringBuilder out) -->Line_8 $$ out.append(type.getCanonicalText())[ FD ]
Line_7 $$ if (type != null) -->Line_8 $$ out.append(type.getCanonicalText())[ CD ]
Line_2 $$ private static boolean replaceVariableName(PsiElement element, PsiReferenceExpression firstReference, String newName, String originalName, StringBuilder out) -->Line_15 $$ if (text.equals(originalName)) [ FD ]
Line_15 $$ if (text.equals(originalName)) -->Line_17 $$ return false[ CD ]
Line_14 $$ final String text = element.getText()-->Line_15 $$ if (text.equals(originalName)) [ FD ]
Line_3 $$ if (element instanceof PsiReferenceExpression) -->Line_14 $$ final String text = element.getText()[ CD ]
Line_2 $$ private static boolean replaceVariableName(PsiElement element, PsiReferenceExpression firstReference, String newName, String originalName, StringBuilder out) -->Line_14 $$ final String text = element.getText()[ FD ]
Line_5 $$ if (element.equals(firstReference) && isLeftSideOfSimpleAssignment(referenceExpression)) -->Line_6 $$ final PsiType type = firstReference.getType()[ CD ]
Line_2 $$ private static boolean replaceVariableName(PsiElement element, PsiReferenceExpression firstReference, String newName, String originalName, StringBuilder out) -->Line_21 $$ if (children.length == 0) [ CD ]
Line_21 $$ if (children.length == 0) -->Line_22 $$ final String text = element.getText()[ CD ]
Line_7 $$ if (type != null) -->Line_10 $$ out.append(newName)[ CD ]
Line_14 $$ final String text = element.getText()-->Line_23 $$ out.append(text)[ FD ]
Line_5 $$ if (element.equals(firstReference) && isLeftSideOfSimpleAssignment(referenceExpression)) -->Line_7 $$ if (type != null) [ CD ]
Line_2 $$ private static boolean replaceVariableName(PsiElement element, PsiReferenceExpression firstReference, String newName, String originalName, StringBuilder out) -->Line_23 $$ out.append(text)[ FD ]
Line_2 $$ private static boolean replaceVariableName(PsiElement element, PsiReferenceExpression firstReference, String newName, String originalName, StringBuilder out) -->Line_20 $$ final PsiElement[] children = element.getChildren()[ CD ]
Line_2 $$ private static boolean replaceVariableName(PsiElement element, PsiReferenceExpression firstReference, String newName, String originalName, StringBuilder out) -->Line_5 $$ if (element.equals(firstReference) && isLeftSideOfSimpleAssignment(referenceExpression)) [ FD ]
Line_26 $$ for (final PsiElement child : children) -->Line_28 $$ out.append(child.getText())[ FD ]
Line_6 $$ final PsiType type = firstReference.getType()-->Line_7 $$ if (type != null) [ FD ]
Line_2 $$ private static boolean replaceVariableName(PsiElement element, PsiReferenceExpression firstReference, String newName, String originalName, StringBuilder out) -->Line_22 $$ final String text = element.getText()[ FD ]
Line_3 $$ if (element instanceof PsiReferenceExpression) -->Line_4 $$ final PsiReferenceExpression referenceExpression = (PsiReferenceExpression) element[ CD ]
Line_2 $$ private static boolean replaceVariableName(PsiElement element, PsiReferenceExpression firstReference, String newName, String originalName, StringBuilder out) -->Line_35 $$ return false[ CD ]
Line_7 $$ if (type != null) -->Line_11 $$ return true[ CD ]
Line_2 $$ private static boolean replaceVariableName(PsiElement element, PsiReferenceExpression firstReference, String newName, String originalName, StringBuilder out) -->Line_16 $$ out.append(newName)[ FD ]
Line_2 $$ private static boolean replaceVariableName(PsiElement element, PsiReferenceExpression firstReference, String newName, String originalName, StringBuilder out) -->Line_3 $$ if (element instanceof PsiReferenceExpression) [ CD ]
