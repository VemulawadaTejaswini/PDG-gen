Line_2 $$ final void innerMoveToSecondPhase() throws Exception -->Line_3 $$ if (logger.isTraceEnabled()) [ CD ]
Line_6 $$ for (int i = 0; i < firstResults.length(); i++) -->Line_7 $$ FirstResult result = firstResults.get(i)[ FD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_12 $$ sb.append(",")[ FD ]
Line_3 $$ if (logger.isTraceEnabled()) -->Line_6 $$ for (int i = 0; i < firstResults.length(); i++) [ CD ]
Line_3 $$ if (logger.isTraceEnabled()) -->Line_18 $$ logger.trace("Moving to second phase, based on results from: [ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_18 $$ logger.trace("Moving to second phase, based on results from: [ FD ]
Line_6 $$ for (int i = 0; i < firstResults.length(); i++) -->Line_7 $$ FirstResult result = firstResults.get(i)[ CD ]
Line_6 $$ for (int i = 0; i < firstResults.length(); i++) -->Line_11 $$ if (hadOne) [ CD ]
Line_5 $$ boolean hadOne = false-->Line_14 $$ hadOne = true[ FD ]
Line_11 $$ if (hadOne) -->Line_14 $$ hadOne = true[ CD ]
Line_7 $$ FirstResult result = firstResults.get(i)-->Line_16 $$ sb.append(result.shardTarget())[ FD ]
Line_11 $$ if (hadOne) -->Line_12 $$ sb.append(",")[ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_16 $$ sb.append(result.shardTarget())[ FD ]
Line_7 $$ FirstResult result = firstResults.get(i)-->Line_8 $$ if (result == null) [ FD ]
Line_2 $$ final void innerMoveToSecondPhase() throws Exception -->Line_20 $$ moveToSecondPhase()[ CD ]
Line_6 $$ for (int i = 0; i < firstResults.length(); i++) -->Line_8 $$ if (result == null) [ CD ]
Line_3 $$ if (logger.isTraceEnabled()) -->Line_4 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_6 $$ for (int i = 0; i < firstResults.length(); i++) -->Line_16 $$ sb.append(result.shardTarget())[ CD ]
Line_3 $$ if (logger.isTraceEnabled()) -->Line_5 $$ boolean hadOne = false[ CD ]
