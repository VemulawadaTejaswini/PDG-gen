Line_3 $$ if (insertionContext.getCompletionChar() == '<') -->Line_4 $$ return ""[ CD ]
Line_25 $$ if (builder.length() > 0) -->Line_26 $$ return "<" + builder + ">"[ CD ]
Line_2 $$ public String calcGenerics(@NotNull PsiElement context, InsertionContext insertionContext) -->Line_3 $$ if (insertionContext.getCompletionChar() == '<') [ FD ]
Line_7 $$ if (myDiamond) -->Line_8 $$ return "<>"[ CD ]
Line_10 $$ if (getObject() instanceof PsiClass) -->Line_11 $$ PsiClass psiClass = (PsiClass) getObject()[ CD ]
Line_2 $$ public String calcGenerics(@NotNull PsiElement context, InsertionContext insertionContext) -->Line_7 $$ if (myDiamond) [ CD ]
Line_14 $$ StringBuilder builder = new StringBuilder()-->Line_25 $$ if (builder.length() > 0) [ FD ]
Line_2 $$ public String calcGenerics(@NotNull PsiElement context, InsertionContext insertionContext) -->Line_10 $$ if (getObject() instanceof PsiClass) [ CD ]
Line_2 $$ public String calcGenerics(@NotNull PsiElement context, InsertionContext insertionContext) -->Line_17 $$ if (substitute == null || (PsiUtil.resolveClassInType(substitute) == parameter && resolveHelper.resolveReferencedClass(parameter.getName(), context) != CompletionUtil.getOriginalOrSelf(parameter))) [ FD ]
Line_14 $$ StringBuilder builder = new StringBuilder()-->Line_20 $$ if (builder.length() > 0) [ FD ]
Line_11 $$ PsiClass psiClass = (PsiClass) getObject()-->Line_15 $$ for (PsiTypeParameter parameter : psiClass.getTypeParameters()) [ FD ]
Line_10 $$ if (getObject() instanceof PsiClass) -->Line_25 $$ if (builder.length() > 0) [ CD ]
Line_10 $$ if (getObject() instanceof PsiClass) -->Line_12 $$ PsiResolveHelper resolveHelper = JavaPsiFacade.getInstance(psiClass.getProject()).getResolveHelper()[ CD ]
Line_16 $$ PsiType substitute = substitutor.substitute(parameter)-->Line_17 $$ if (substitute == null || (PsiUtil.resolveClassInType(substitute) == parameter && resolveHelper.resolveReferencedClass(parameter.getName(), context) != CompletionUtil.getOriginalOrSelf(parameter))) [ FD ]
Line_11 $$ PsiClass psiClass = (PsiClass) getObject()-->Line_12 $$ PsiResolveHelper resolveHelper = JavaPsiFacade.getInstance(psiClass.getProject()).getResolveHelper()[ FD ]
Line_20 $$ if (builder.length() > 0) -->Line_21 $$ builder.append(", ")[ CD ]
Line_2 $$ public String calcGenerics(@NotNull PsiElement context, InsertionContext insertionContext) -->Line_29 $$ return ""[ CD ]
Line_2 $$ public String calcGenerics(@NotNull PsiElement context, InsertionContext insertionContext) -->Line_6 $$ assert context.isValid()[ FD ]
Line_12 $$ PsiResolveHelper resolveHelper = JavaPsiFacade.getInstance(psiClass.getProject()).getResolveHelper()-->Line_17 $$ if (substitute == null || (PsiUtil.resolveClassInType(substitute) == parameter && resolveHelper.resolveReferencedClass(parameter.getName(), context) != CompletionUtil.getOriginalOrSelf(parameter))) [ FD ]
Line_16 $$ PsiType substitute = substitutor.substitute(parameter)-->Line_23 $$ builder.append(substitute.getCanonicalText())[ FD ]
Line_17 $$ if (substitute == null || (PsiUtil.resolveClassInType(substitute) == parameter && resolveHelper.resolveReferencedClass(parameter.getName(), context) != CompletionUtil.getOriginalOrSelf(parameter))) -->Line_18 $$ return ""[ CD ]
Line_2 $$ public String calcGenerics(@NotNull PsiElement context, InsertionContext insertionContext) -->Line_3 $$ if (insertionContext.getCompletionChar() == '<') [ CD ]
Line_10 $$ if (getObject() instanceof PsiClass) -->Line_13 $$ PsiSubstitutor substitutor = getSubstitutor()[ CD ]
Line_15 $$ for (PsiTypeParameter parameter : psiClass.getTypeParameters()) -->Line_16 $$ PsiType substitute = substitutor.substitute(parameter)[ FD ]
Line_10 $$ if (getObject() instanceof PsiClass) -->Line_14 $$ StringBuilder builder = new StringBuilder()[ CD ]
Line_15 $$ for (PsiTypeParameter parameter : psiClass.getTypeParameters()) -->Line_17 $$ if (substitute == null || (PsiUtil.resolveClassInType(substitute) == parameter && resolveHelper.resolveReferencedClass(parameter.getName(), context) != CompletionUtil.getOriginalOrSelf(parameter))) [ FD ]
Line_14 $$ StringBuilder builder = new StringBuilder()-->Line_21 $$ builder.append(", ")[ FD ]
Line_13 $$ PsiSubstitutor substitutor = getSubstitutor()-->Line_16 $$ PsiType substitute = substitutor.substitute(parameter)[ FD ]
Line_14 $$ StringBuilder builder = new StringBuilder()-->Line_23 $$ builder.append(substitute.getCanonicalText())[ FD ]
