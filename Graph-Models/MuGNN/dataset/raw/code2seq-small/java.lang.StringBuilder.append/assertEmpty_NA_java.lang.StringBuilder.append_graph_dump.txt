Line_3 $$ if (!exceptions.isEmpty()) -->Line_5 $$ for (int i = 0; i < exceptions.size(); i++) [ CD ]
Line_3 $$ if (!exceptions.isEmpty()) -->Line_4 $$ final StringBuilder b = new StringBuilder("There are ").append(exceptions.size()).append(" exception(s):")[ CD ]
Line_2 $$ static void assertEmpty(final List<Exception> exceptions) -->Line_5 $$ for (int i = 0; i < exceptions.size(); i++) [ FD ]
Line_2 $$ static void assertEmpty(final List<Exception> exceptions) -->Line_6 $$ b.append("\n  Exception ").append(i).append(": ").append(StringUtils.stringifyException(exceptions.get(i)))[ FD ]
Line_4 $$ final StringBuilder b = new StringBuilder("There are ").append(exceptions.size()).append(" exception(s):")-->Line_8 $$ fail(b.toString())[ FD ]
Line_2 $$ static void assertEmpty(final List<Exception> exceptions) -->Line_3 $$ if (!exceptions.isEmpty()) [ FD ]
Line_2 $$ static void assertEmpty(final List<Exception> exceptions) -->Line_3 $$ if (!exceptions.isEmpty()) [ CD ]
Line_5 $$ for (int i = 0; i < exceptions.size(); i++) -->Line_6 $$ b.append("\n  Exception ").append(i).append(": ").append(StringUtils.stringifyException(exceptions.get(i)))[ CD ]
Line_4 $$ final StringBuilder b = new StringBuilder("There are ").append(exceptions.size()).append(" exception(s):")-->Line_6 $$ b.append("\n  Exception ").append(i).append(": ").append(StringUtils.stringifyException(exceptions.get(i)))[ FD ]
Line_5 $$ for (int i = 0; i < exceptions.size(); i++) -->Line_6 $$ b.append("\n  Exception ").append(i).append(": ").append(StringUtils.stringifyException(exceptions.get(i)))[ FD ]
Line_3 $$ if (!exceptions.isEmpty()) -->Line_8 $$ fail(b.toString())[ CD ]
Line_2 $$ static void assertEmpty(final List<Exception> exceptions) -->Line_4 $$ final StringBuilder b = new StringBuilder("There are ").append(exceptions.size()).append(" exception(s):")[ FD ]
