Line_2 $$ private void suggestNamesFromGenericParameters(@NotNull PsiType type, @NotNull VariableKind variableKind, @NotNull Collection<String> suggestions, boolean correctKeywords) -->Line_17 $$ if (baseName != null) [ CD ]
Line_2 $$ private void suggestNamesFromGenericParameters(@NotNull PsiType type, @NotNull VariableKind variableKind, @NotNull Collection<String> suggestions, boolean correctKeywords) -->Line_19 $$ ContainerUtil.addAll(suggestions, getSuggestionsByName(fullNameBuilder.toString(), variableKind, false, correctKeywords))[ FD ]
Line_6 $$ StringBuilder fullNameBuilder = new StringBuilder()-->Line_18 $$ fullNameBuilder.append(baseName)[ FD ]
Line_16 $$ String baseName = normalizeTypeName(getTypeName(type))-->Line_18 $$ fullNameBuilder.append(baseName)[ FD ]
Line_10 $$ final String typeName = normalizeTypeName(getTypeName(parameter))-->Line_11 $$ if (typeName != null) [ FD ]
Line_8 $$ for (PsiType parameter : parameters) -->Line_9 $$ if (parameter instanceof PsiClassType) [ FD ]
Line_9 $$ if (parameter instanceof PsiClassType) -->Line_11 $$ if (typeName != null) [ CD ]
Line_2 $$ private void suggestNamesFromGenericParameters(@NotNull PsiType type, @NotNull VariableKind variableKind, @NotNull Collection<String> suggestions, boolean correctKeywords) -->Line_16 $$ String baseName = normalizeTypeName(getTypeName(type))[ FD ]
Line_3 $$ if (!(type instanceof PsiClassType)) -->Line_4 $$ return[ CD ]
Line_11 $$ if (typeName != null) -->Line_12 $$ fullNameBuilder.append(typeName)[ CD ]
Line_6 $$ StringBuilder fullNameBuilder = new StringBuilder()-->Line_12 $$ fullNameBuilder.append(typeName)[ FD ]
Line_2 $$ private void suggestNamesFromGenericParameters(@NotNull PsiType type, @NotNull VariableKind variableKind, @NotNull Collection<String> suggestions, boolean correctKeywords) -->Line_6 $$ StringBuilder fullNameBuilder = new StringBuilder()[ CD ]
Line_2 $$ private void suggestNamesFromGenericParameters(@NotNull PsiType type, @NotNull VariableKind variableKind, @NotNull Collection<String> suggestions, boolean correctKeywords) -->Line_3 $$ if (!(type instanceof PsiClassType)) [ CD ]
Line_8 $$ for (PsiType parameter : parameters) -->Line_10 $$ final String typeName = normalizeTypeName(getTypeName(parameter))[ FD ]
Line_17 $$ if (baseName != null) -->Line_18 $$ fullNameBuilder.append(baseName)[ CD ]
Line_16 $$ String baseName = normalizeTypeName(getTypeName(type))-->Line_17 $$ if (baseName != null) [ FD ]
Line_10 $$ final String typeName = normalizeTypeName(getTypeName(parameter))-->Line_12 $$ fullNameBuilder.append(typeName)[ FD ]
Line_9 $$ if (parameter instanceof PsiClassType) -->Line_10 $$ final String typeName = normalizeTypeName(getTypeName(parameter))[ CD ]
Line_2 $$ private void suggestNamesFromGenericParameters(@NotNull PsiType type, @NotNull VariableKind variableKind, @NotNull Collection<String> suggestions, boolean correctKeywords) -->Line_7 $$ final PsiType[] parameters = ((PsiClassType) type).getParameters()[ CD ]
Line_2 $$ private void suggestNamesFromGenericParameters(@NotNull PsiType type, @NotNull VariableKind variableKind, @NotNull Collection<String> suggestions, boolean correctKeywords) -->Line_16 $$ String baseName = normalizeTypeName(getTypeName(type))[ CD ]
Line_17 $$ if (baseName != null) -->Line_19 $$ ContainerUtil.addAll(suggestions, getSuggestionsByName(fullNameBuilder.toString(), variableKind, false, correctKeywords))[ CD ]
Line_6 $$ StringBuilder fullNameBuilder = new StringBuilder()-->Line_19 $$ ContainerUtil.addAll(suggestions, getSuggestionsByName(fullNameBuilder.toString(), variableKind, false, correctKeywords))[ FD ]
