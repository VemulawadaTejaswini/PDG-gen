Line_2 $$ protected String visitLikePredicate(LikePredicate node, Boolean unmangleNames) -->Line_5 $$ if (node.getEscape() != null) [ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_8 $$ builder.append(')')[ FD ]
Line_5 $$ if (node.getEscape() != null) -->Line_6 $$ builder.append(" ESCAPE ").append(process(node.getEscape(), unmangleNames))[ CD ]
Line_2 $$ protected String visitLikePredicate(LikePredicate node, Boolean unmangleNames) -->Line_6 $$ builder.append(" ESCAPE ").append(process(node.getEscape(), unmangleNames))[ FD ]
Line_2 $$ protected String visitLikePredicate(LikePredicate node, Boolean unmangleNames) -->Line_4 $$ builder.append('(').append(process(node.getValue(), unmangleNames)).append(" LIKE ").append(process(node.getPattern(), unmangleNames))[ CD ]
Line_2 $$ protected String visitLikePredicate(LikePredicate node, Boolean unmangleNames) -->Line_3 $$ StringBuilder builder = new StringBuilder()[ CD ]
Line_2 $$ protected String visitLikePredicate(LikePredicate node, Boolean unmangleNames) -->Line_5 $$ if (node.getEscape() != null) [ FD ]
Line_2 $$ protected String visitLikePredicate(LikePredicate node, Boolean unmangleNames) -->Line_9 $$ return builder.toString()[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_6 $$ builder.append(" ESCAPE ").append(process(node.getEscape(), unmangleNames))[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_9 $$ return builder.toString()[ FD ]
Line_2 $$ protected String visitLikePredicate(LikePredicate node, Boolean unmangleNames) -->Line_8 $$ builder.append(')')[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_4 $$ builder.append('(').append(process(node.getValue(), unmangleNames)).append(" LIKE ").append(process(node.getPattern(), unmangleNames))[ FD ]
Line_2 $$ protected String visitLikePredicate(LikePredicate node, Boolean unmangleNames) -->Line_4 $$ builder.append('(').append(process(node.getValue(), unmangleNames)).append(" LIKE ").append(process(node.getPattern(), unmangleNames))[ FD ]
