Line_18 $$ final FSDataInputStream in = webhdfs[i].open(p)-->Line_36 $$ for (int c; (c = in.read()) != -1; ) [ FD ]
Line_17 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_33 $$ for (int i = 0; i < webhdfs.length; i++) [ FD ]
Line_5 $$ final Path p = new Path(dir, filename)-->Line_9 $$ final FSDataOutputStream out = webhdfs[i].create(p)[ FD ]
Line_17 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_29 $$ for (int i = 0; i < webhdfs.length; i++) [ FD ]
Line_2 $$ public void testRedirect() throws Exception -->Line_8 $$ for (int i = 0; i < webhdfs.length; i++) [ CD ]
Line_19 $$ for (int c, j = 0; (c = in.read()) != -1; j++) -->Line_20 $$ Assert.assertEquals(writeStrings[i].charAt(j), c)[ CD ]
Line_5 $$ final Path p = new Path(dir, filename)-->Line_15 $$ Assert.assertEquals(expected, webhdfs[i].getFileStatus(p).getLen())[ FD ]
Line_9 $$ final FSDataOutputStream out = webhdfs[i].create(p)-->Line_26 $$ out.write(appendStrings[i].getBytes())[ FD ]
Line_33 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_36 $$ for (int c; (c = in.read()) != -1; ) [ CD ]
Line_18 $$ final FSDataInputStream in = webhdfs[i].open(p)-->Line_19 $$ for (int c, j = 0; (c = in.read()) != -1; j++) [ FD ]
Line_17 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_18 $$ final FSDataInputStream in = webhdfs[i].open(p)[ CD ]
Line_25 $$ final FSDataOutputStream out = webhdfs[i].append(p)-->Line_26 $$ out.write(appendStrings[i].getBytes())[ FD ]
Line_33 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_34 $$ final StringBuilder b = new StringBuilder()[ CD ]
Line_34 $$ final StringBuilder b = new StringBuilder()-->Line_40 $$ Assert.assertEquals(writeStrings[i], b.substring(0, wlen))[ FD ]
Line_8 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_29 $$ for (int i = 0; i < webhdfs.length; i++) [ FD ]
Line_2 $$ public void testRedirect() throws Exception -->Line_6 $$ final String[] writeStrings = createStrings("write to webhdfs ", "write")[ CD ]
Line_29 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_30 $$ final long expected = writeStrings[i].length() + appendStrings[i].length()[ CD ]
Line_9 $$ final FSDataOutputStream out = webhdfs[i].create(p)-->Line_27 $$ out.close()[ FD ]
Line_5 $$ final Path p = new Path(dir, filename)-->Line_25 $$ final FSDataOutputStream out = webhdfs[i].append(p)[ FD ]
Line_2 $$ public void testRedirect() throws Exception -->Line_5 $$ final Path p = new Path(dir, filename)[ CD ]
Line_2 $$ public void testRedirect() throws Exception -->Line_4 $$ final String filename = "file"[ CD ]
Line_9 $$ final FSDataOutputStream out = webhdfs[i].create(p)-->Line_11 $$ out.close()[ FD ]
Line_2 $$ public void testRedirect() throws Exception -->Line_13 $$ for (int i = 0; i < webhdfs.length; i++) [ CD ]
Line_8 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_13 $$ for (int i = 0; i < webhdfs.length; i++) [ FD ]
Line_9 $$ final FSDataOutputStream out = webhdfs[i].create(p)-->Line_10 $$ out.write(writeStrings[i].getBytes())[ FD ]
Line_13 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_33 $$ for (int i = 0; i < webhdfs.length; i++) [ FD ]
Line_35 $$ final FSDataInputStream in = webhdfs[i].open(p)-->Line_36 $$ for (int c; (c = in.read()) != -1; ) [ FD ]
Line_24 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_25 $$ final FSDataOutputStream out = webhdfs[i].append(p)[ CD ]
Line_2 $$ public void testRedirect() throws Exception -->Line_3 $$ final String dir = "/testRedirect/"[ CD ]
Line_34 $$ final StringBuilder b = new StringBuilder()-->Line_37 $$ b.append((char) c)[ FD ]
Line_33 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_42 $$ in.close()[ CD ]
Line_29 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_33 $$ for (int i = 0; i < webhdfs.length; i++) [ FD ]
Line_33 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_35 $$ final FSDataInputStream in = webhdfs[i].open(p)[ CD ]
Line_13 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_15 $$ Assert.assertEquals(expected, webhdfs[i].getFileStatus(p).getLen())[ CD ]
Line_19 $$ for (int c, j = 0; (c = in.read()) != -1; j++) -->Line_20 $$ Assert.assertEquals(writeStrings[i].charAt(j), c)[ FD ]
Line_33 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_40 $$ Assert.assertEquals(writeStrings[i], b.substring(0, wlen))[ CD ]
Line_24 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_33 $$ for (int i = 0; i < webhdfs.length; i++) [ FD ]
Line_2 $$ public void testRedirect() throws Exception -->Line_24 $$ for (int i = 0; i < webhdfs.length; i++) [ CD ]
Line_35 $$ final FSDataInputStream in = webhdfs[i].open(p)-->Line_42 $$ in.close()[ FD ]
Line_18 $$ final FSDataInputStream in = webhdfs[i].open(p)-->Line_22 $$ in.close()[ FD ]
Line_8 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_10 $$ out.write(writeStrings[i].getBytes())[ CD ]
Line_13 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_17 $$ for (int i = 0; i < webhdfs.length; i++) [ FD ]
Line_17 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_22 $$ in.close()[ CD ]
Line_34 $$ final StringBuilder b = new StringBuilder()-->Line_41 $$ Assert.assertEquals(appendStrings[i], b.substring(wlen))[ FD ]
Line_2 $$ public void testRedirect() throws Exception -->Line_7 $$ final String[] appendStrings = createStrings("append to webhdfs ", "append")[ CD ]
Line_14 $$ final long expected = writeStrings[i].length()-->Line_31 $$ Assert.assertEquals(expected, webhdfs[i].getFileStatus(p).getLen())[ FD ]
Line_13 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_24 $$ for (int i = 0; i < webhdfs.length; i++) [ FD ]
Line_5 $$ final Path p = new Path(dir, filename)-->Line_31 $$ Assert.assertEquals(expected, webhdfs[i].getFileStatus(p).getLen())[ FD ]
Line_29 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_31 $$ Assert.assertEquals(expected, webhdfs[i].getFileStatus(p).getLen())[ CD ]
Line_30 $$ final long expected = writeStrings[i].length() + appendStrings[i].length()-->Line_31 $$ Assert.assertEquals(expected, webhdfs[i].getFileStatus(p).getLen())[ FD ]
Line_2 $$ public void testRedirect() throws Exception -->Line_33 $$ for (int i = 0; i < webhdfs.length; i++) [ CD ]
Line_25 $$ final FSDataOutputStream out = webhdfs[i].append(p)-->Line_27 $$ out.close()[ FD ]
Line_24 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_29 $$ for (int i = 0; i < webhdfs.length; i++) [ FD ]
Line_8 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_33 $$ for (int i = 0; i < webhdfs.length; i++) [ FD ]
Line_33 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_39 $$ final int wlen = writeStrings[i].length()[ CD ]
Line_19 $$ for (int c, j = 0; (c = in.read()) != -1; j++) -->Line_36 $$ for (int c; (c = in.read()) != -1; ) [ FD ]
Line_33 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_41 $$ Assert.assertEquals(appendStrings[i], b.substring(wlen))[ CD ]
Line_8 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_9 $$ final FSDataOutputStream out = webhdfs[i].create(p)[ CD ]
Line_8 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_17 $$ for (int i = 0; i < webhdfs.length; i++) [ FD ]
Line_14 $$ final long expected = writeStrings[i].length()-->Line_15 $$ Assert.assertEquals(expected, webhdfs[i].getFileStatus(p).getLen())[ FD ]
Line_5 $$ final Path p = new Path(dir, filename)-->Line_18 $$ final FSDataInputStream in = webhdfs[i].open(p)[ FD ]
Line_17 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_19 $$ for (int c, j = 0; (c = in.read()) != -1; j++) [ CD ]
Line_24 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_26 $$ out.write(appendStrings[i].getBytes())[ CD ]
Line_24 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_27 $$ out.close()[ CD ]
Line_18 $$ final FSDataInputStream in = webhdfs[i].open(p)-->Line_42 $$ in.close()[ FD ]
Line_8 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_11 $$ out.close()[ CD ]
Line_13 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_14 $$ final long expected = writeStrings[i].length()[ CD ]
Line_13 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_29 $$ for (int i = 0; i < webhdfs.length; i++) [ FD ]
Line_2 $$ public void testRedirect() throws Exception -->Line_29 $$ for (int i = 0; i < webhdfs.length; i++) [ CD ]
Line_8 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_24 $$ for (int i = 0; i < webhdfs.length; i++) [ FD ]
Line_36 $$ for (int c; (c = in.read()) != -1; ) -->Line_37 $$ b.append((char) c)[ CD ]
Line_17 $$ for (int i = 0; i < webhdfs.length; i++) -->Line_24 $$ for (int i = 0; i < webhdfs.length; i++) [ FD ]
Line_2 $$ public void testRedirect() throws Exception -->Line_17 $$ for (int i = 0; i < webhdfs.length; i++) [ CD ]
Line_5 $$ final Path p = new Path(dir, filename)-->Line_35 $$ final FSDataInputStream in = webhdfs[i].open(p)[ FD ]
