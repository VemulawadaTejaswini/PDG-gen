Line_6 $$ if (iter.hasNext()) -->Line_7 $$ Map.Entry<Byte, AbstractType<?>> entry = iter.next()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_14 $$ sb.append(')')[ FD ]
Line_7 $$ Map.Entry<Byte, AbstractType<?>> entry = iter.next()-->Line_12 $$ sb.append(',').append((char) (byte) entry.getKey()).append("=>").append(entry.getValue())[ FD ]
Line_2 $$ public static String stringifyAliasesParameters(Map<Byte, AbstractType<?>> aliases) -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_6 $$ if (iter.hasNext()) -->Line_8 $$ sb.append((char) (byte) entry.getKey()).append("=>").append(entry.getValue())[ CD ]
Line_7 $$ Map.Entry<Byte, AbstractType<?>> entry = iter.next()-->Line_8 $$ sb.append((char) (byte) entry.getKey()).append("=>").append(entry.getValue())[ FD ]
Line_2 $$ public static String stringifyAliasesParameters(Map<Byte, AbstractType<?>> aliases) -->Line_5 $$ Iterator<Map.Entry<Byte, AbstractType<?>>> iter = aliases.entrySet().iterator()[ FD ]
Line_5 $$ Iterator<Map.Entry<Byte, AbstractType<?>>> iter = aliases.entrySet().iterator()-->Line_7 $$ Map.Entry<Byte, AbstractType<?>> entry = iter.next()[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_15 $$ return sb.toString()[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_8 $$ sb.append((char) (byte) entry.getKey()).append("=>").append(entry.getValue())[ FD ]
Line_2 $$ public static String stringifyAliasesParameters(Map<Byte, AbstractType<?>> aliases) -->Line_5 $$ Iterator<Map.Entry<Byte, AbstractType<?>>> iter = aliases.entrySet().iterator()[ CD ]
Line_2 $$ public static String stringifyAliasesParameters(Map<Byte, AbstractType<?>> aliases) -->Line_14 $$ sb.append(')')[ CD ]
Line_2 $$ public static String stringifyAliasesParameters(Map<Byte, AbstractType<?>> aliases) -->Line_6 $$ if (iter.hasNext()) [ CD ]
Line_5 $$ Iterator<Map.Entry<Byte, AbstractType<?>>> iter = aliases.entrySet().iterator()-->Line_10 $$ while (iter.hasNext()) [ FD ]
Line_2 $$ public static String stringifyAliasesParameters(Map<Byte, AbstractType<?>> aliases) -->Line_4 $$ sb.append('(')[ CD ]
Line_2 $$ public static String stringifyAliasesParameters(Map<Byte, AbstractType<?>> aliases) -->Line_15 $$ return sb.toString()[ CD ]
Line_11 $$ Map.Entry<Byte, AbstractType<?>> entry = iter.next()-->Line_12 $$ sb.append(',').append((char) (byte) entry.getKey()).append("=>").append(entry.getValue())[ FD ]
Line_5 $$ Iterator<Map.Entry<Byte, AbstractType<?>>> iter = aliases.entrySet().iterator()-->Line_6 $$ if (iter.hasNext()) [ FD ]
Line_2 $$ public static String stringifyAliasesParameters(Map<Byte, AbstractType<?>> aliases) -->Line_10 $$ while (iter.hasNext()) [ CD ]
Line_10 $$ while (iter.hasNext()) -->Line_12 $$ sb.append(',').append((char) (byte) entry.getKey()).append("=>").append(entry.getValue())[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_12 $$ sb.append(',').append((char) (byte) entry.getKey()).append("=>").append(entry.getValue())[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_4 $$ sb.append('(')[ FD ]
Line_5 $$ Iterator<Map.Entry<Byte, AbstractType<?>>> iter = aliases.entrySet().iterator()-->Line_11 $$ Map.Entry<Byte, AbstractType<?>> entry = iter.next()[ FD ]
Line_10 $$ while (iter.hasNext()) -->Line_11 $$ Map.Entry<Byte, AbstractType<?>> entry = iter.next()[ CD ]
