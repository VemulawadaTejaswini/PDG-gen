Line_12 $$ docPos += matcher.start() - pos-->Line_18 $$ foldRegions.get(--foldInsertPosition).endPos = docPos[ FD ]
Line_2 $$ private void doTestSoftWraps(int wrapWidth, String text) throws IOException -->Line_5 $$ int foldInsertPosition = 0[ CD ]
Line_8 $$ Matcher matcher = Pattern.compile(TAGS_PATTERN).matcher(text)-->Line_12 $$ docPos += matcher.start() - pos[ FD ]
Line_9 $$ StringBuilder cleanedText = new StringBuilder()-->Line_25 $$ init(cleanedText.toString(), TestFileType.TEXT)[ FD ]
Line_4 $$ List<Integer> wrapPositions = new ArrayList<Integer>()-->Line_20 $$ wrapPositions.add(docPos)[ FD ]
Line_8 $$ Matcher matcher = Pattern.compile(TAGS_PATTERN).matcher(text)-->Line_14 $$ if (matcher.group(1) != null) [ FD ]
Line_2 $$ private void doTestSoftWraps(int wrapWidth, String text) throws IOException -->Line_25 $$ init(cleanedText.toString(), TestFileType.TEXT)[ CD ]
Line_2 $$ private void doTestSoftWraps(int wrapWidth, String text) throws IOException -->Line_23 $$ assertTrue("Missing closing fold marker tag: " + text, foldInsertPosition == 0)[ CD ]
Line_5 $$ int foldInsertPosition = 0-->Line_18 $$ foldRegions.get(--foldInsertPosition).endPos = docPos[ FD ]
Line_10 $$ while (matcher.find()) -->Line_13 $$ pos = matcher.end()[ CD ]
Line_16 $$ if (matcher.group(4) != null) -->Line_17 $$ assertTrue("Misplaced closing fold marker tag: " + text, foldInsertPosition > 0)[ CD ]
Line_3 $$ List<MyFoldRegion> foldRegions = new ArrayList<MyFoldRegion>()-->Line_18 $$ foldRegions.get(--foldInsertPosition).endPos = docPos[ FD ]
Line_10 $$ while (matcher.find()) -->Line_14 $$ if (matcher.group(1) != null) [ CD ]
Line_13 $$ pos = matcher.end()-->Line_12 $$ docPos += matcher.start() - pos[ FD ]
Line_33 $$ List<Integer> actualWrapPositions = new ArrayList<Integer>()-->Line_35 $$ actualWrapPositions.add(wrap.getStart())[ FD ]
Line_2 $$ private void doTestSoftWraps(int wrapWidth, String text) throws IOException -->Line_32 $$ EditorTestUtil.configureSoftWraps(myEditor, wrapWidth)[ FD ]
Line_14 $$ if (matcher.group(1) != null) -->Line_15 $$ foldRegions.add(foldInsertPosition++, new MyFoldRegion(docPos, matcher.group(3), matcher.group(2) != null))[ CD ]
Line_6 $$ int pos = 0-->Line_12 $$ docPos += matcher.start() - pos[ FD ]
Line_8 $$ Matcher matcher = Pattern.compile(TAGS_PATTERN).matcher(text)-->Line_16 $$ if (matcher.group(4) != null) [ FD ]
Line_10 $$ while (matcher.find()) -->Line_11 $$ cleanedText.append(text.substring(pos, matcher.start()))[ CD ]
Line_6 $$ int pos = 0-->Line_11 $$ cleanedText.append(text.substring(pos, matcher.start()))[ FD ]
Line_28 $$ if (region.collapse) -->Line_29 $$ toggleFoldRegionState(r, false)[ CD ]
Line_7 $$ int docPos = 0-->Line_18 $$ foldRegions.get(--foldInsertPosition).endPos = docPos[ FD ]
Line_2 $$ private void doTestSoftWraps(int wrapWidth, String text) throws IOException -->Line_9 $$ StringBuilder cleanedText = new StringBuilder()[ CD ]
Line_2 $$ private void doTestSoftWraps(int wrapWidth, String text) throws IOException -->Line_37 $$ assertEquals("Wrong wrap positions", wrapPositions, actualWrapPositions)[ CD ]
Line_2 $$ private void doTestSoftWraps(int wrapWidth, String text) throws IOException -->Line_6 $$ int pos = 0[ CD ]
Line_2 $$ private void doTestSoftWraps(int wrapWidth, String text) throws IOException -->Line_24 $$ cleanedText.append(text.substring(pos))[ FD ]
Line_2 $$ private void doTestSoftWraps(int wrapWidth, String text) throws IOException -->Line_11 $$ cleanedText.append(text.substring(pos, matcher.start()))[ FD ]
Line_6 $$ int pos = 0-->Line_13 $$ pos = matcher.end()[ FD ]
Line_3 $$ List<MyFoldRegion> foldRegions = new ArrayList<MyFoldRegion>()-->Line_15 $$ foldRegions.add(foldInsertPosition++, new MyFoldRegion(docPos, matcher.group(3), matcher.group(2) != null))[ FD ]
Line_6 $$ int pos = 0-->Line_24 $$ cleanedText.append(text.substring(pos))[ FD ]
Line_2 $$ private void doTestSoftWraps(int wrapWidth, String text) throws IOException -->Line_7 $$ int docPos = 0[ CD ]
Line_2 $$ private void doTestSoftWraps(int wrapWidth, String text) throws IOException -->Line_8 $$ Matcher matcher = Pattern.compile(TAGS_PATTERN).matcher(text)[ FD ]
Line_26 $$ for (MyFoldRegion region : foldRegions) -->Line_28 $$ if (region.collapse) [ FD ]
Line_2 $$ private void doTestSoftWraps(int wrapWidth, String text) throws IOException -->Line_3 $$ List<MyFoldRegion> foldRegions = new ArrayList<MyFoldRegion>()[ CD ]
Line_9 $$ StringBuilder cleanedText = new StringBuilder()-->Line_24 $$ cleanedText.append(text.substring(pos))[ FD ]
Line_13 $$ pos = matcher.end()-->Line_24 $$ cleanedText.append(text.substring(pos))[ FD ]
Line_7 $$ int docPos = 0-->Line_20 $$ wrapPositions.add(docPos)[ FD ]
Line_12 $$ docPos += matcher.start() - pos-->Line_20 $$ wrapPositions.add(docPos)[ FD ]
Line_2 $$ private void doTestSoftWraps(int wrapWidth, String text) throws IOException -->Line_33 $$ List<Integer> actualWrapPositions = new ArrayList<Integer>()[ CD ]
Line_8 $$ Matcher matcher = Pattern.compile(TAGS_PATTERN).matcher(text)-->Line_11 $$ cleanedText.append(text.substring(pos, matcher.start()))[ FD ]
Line_2 $$ private void doTestSoftWraps(int wrapWidth, String text) throws IOException -->Line_4 $$ List<Integer> wrapPositions = new ArrayList<Integer>()[ CD ]
Line_8 $$ Matcher matcher = Pattern.compile(TAGS_PATTERN).matcher(text)-->Line_10 $$ while (matcher.find()) [ FD ]
Line_16 $$ if (matcher.group(4) != null) -->Line_20 $$ wrapPositions.add(docPos)[ CD ]
Line_33 $$ List<Integer> actualWrapPositions = new ArrayList<Integer>()-->Line_37 $$ assertEquals("Wrong wrap positions", wrapPositions, actualWrapPositions)[ FD ]
Line_34 $$ for (SoftWrap wrap : myEditor.getSoftWrapModel().getSoftWrapsForRange(0, myEditor.getDocument().getTextLength())) -->Line_35 $$ actualWrapPositions.add(wrap.getStart())[ FD ]
Line_7 $$ int docPos = 0-->Line_12 $$ docPos += matcher.start() - pos[ FD ]
Line_8 $$ Matcher matcher = Pattern.compile(TAGS_PATTERN).matcher(text)-->Line_15 $$ foldRegions.add(foldInsertPosition++, new MyFoldRegion(docPos, matcher.group(3), matcher.group(2) != null))[ FD ]
Line_2 $$ private void doTestSoftWraps(int wrapWidth, String text) throws IOException -->Line_10 $$ while (matcher.find()) [ CD ]
Line_16 $$ if (matcher.group(4) != null) -->Line_18 $$ foldRegions.get(--foldInsertPosition).endPos = docPos[ CD ]
Line_2 $$ private void doTestSoftWraps(int wrapWidth, String text) throws IOException -->Line_8 $$ Matcher matcher = Pattern.compile(TAGS_PATTERN).matcher(text)[ CD ]
Line_2 $$ private void doTestSoftWraps(int wrapWidth, String text) throws IOException -->Line_32 $$ EditorTestUtil.configureSoftWraps(myEditor, wrapWidth)[ CD ]
Line_4 $$ List<Integer> wrapPositions = new ArrayList<Integer>()-->Line_37 $$ assertEquals("Wrong wrap positions", wrapPositions, actualWrapPositions)[ FD ]
Line_13 $$ pos = matcher.end()-->Line_11 $$ cleanedText.append(text.substring(pos, matcher.start()))[ FD ]
Line_2 $$ private void doTestSoftWraps(int wrapWidth, String text) throws IOException -->Line_24 $$ cleanedText.append(text.substring(pos))[ CD ]
Line_10 $$ while (matcher.find()) -->Line_12 $$ docPos += matcher.start() - pos[ CD ]
Line_9 $$ StringBuilder cleanedText = new StringBuilder()-->Line_11 $$ cleanedText.append(text.substring(pos, matcher.start()))[ FD ]
Line_14 $$ if (matcher.group(1) != null) -->Line_16 $$ if (matcher.group(4) != null) [ CD ]
Line_8 $$ Matcher matcher = Pattern.compile(TAGS_PATTERN).matcher(text)-->Line_13 $$ pos = matcher.end()[ FD ]
Line_27 $$ FoldRegion r = addFoldRegion(region.startPos, region.endPos, region.placeholder)-->Line_29 $$ toggleFoldRegionState(r, false)[ FD ]
Line_5 $$ int foldInsertPosition = 0-->Line_15 $$ foldRegions.add(foldInsertPosition++, new MyFoldRegion(docPos, matcher.group(3), matcher.group(2) != null))[ FD ]
