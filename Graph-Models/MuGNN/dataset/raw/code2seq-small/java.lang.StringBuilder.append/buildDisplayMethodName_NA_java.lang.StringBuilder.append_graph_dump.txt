Line_3 $$ final StringBuilder builder = new StringBuilder(pyFunction.getName())-->Line_4 $$ builder.append('(')[ FD ]
Line_6 $$ for (final PyParameter parameter : arguments) -->Line_7 $$ builder.append(parameter.getName())[ FD ]
Line_2 $$ private static String buildDisplayMethodName(@NotNull final PyFunction pyFunction) -->Line_5 $$ final PyParameter[] arguments = pyFunction.getParameterList().getParameters()[ FD ]
Line_2 $$ private static String buildDisplayMethodName(@NotNull final PyFunction pyFunction) -->Line_3 $$ final StringBuilder builder = new StringBuilder(pyFunction.getName())[ FD ]
Line_2 $$ private static String buildDisplayMethodName(@NotNull final PyFunction pyFunction) -->Line_12 $$ builder.append(')')[ CD ]
Line_3 $$ final StringBuilder builder = new StringBuilder(pyFunction.getName())-->Line_12 $$ builder.append(')')[ FD ]
Line_3 $$ final StringBuilder builder = new StringBuilder(pyFunction.getName())-->Line_13 $$ return builder.toString()[ FD ]
Line_8 $$ if (arguments.length > 1 && parameter != arguments[arguments.length - 1]) -->Line_9 $$ builder.append(", ")[ CD ]
Line_2 $$ private static String buildDisplayMethodName(@NotNull final PyFunction pyFunction) -->Line_4 $$ builder.append('(')[ CD ]
Line_2 $$ private static String buildDisplayMethodName(@NotNull final PyFunction pyFunction) -->Line_5 $$ final PyParameter[] arguments = pyFunction.getParameterList().getParameters()[ CD ]
Line_2 $$ private static String buildDisplayMethodName(@NotNull final PyFunction pyFunction) -->Line_13 $$ return builder.toString()[ CD ]
Line_3 $$ final StringBuilder builder = new StringBuilder(pyFunction.getName())-->Line_7 $$ builder.append(parameter.getName())[ FD ]
Line_3 $$ final StringBuilder builder = new StringBuilder(pyFunction.getName())-->Line_9 $$ builder.append(", ")[ FD ]
Line_2 $$ private static String buildDisplayMethodName(@NotNull final PyFunction pyFunction) -->Line_3 $$ final StringBuilder builder = new StringBuilder(pyFunction.getName())[ CD ]
