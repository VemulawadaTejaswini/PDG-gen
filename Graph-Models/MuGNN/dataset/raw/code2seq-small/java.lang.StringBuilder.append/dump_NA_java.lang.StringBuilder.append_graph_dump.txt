Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_13 $$ final Object[] children = treeStructure.getChildElements(descriptor)[ FD ]
Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_3 $$ if (level > 10) [ FD ]
Line_10 $$ for (int i = 0; i < level; i++) b.append("  ")-->Line_20 $$ for (int i = 0; i < level; i++) b.append("  ")[ FD ]
Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_20 $$ b.append("  ")[ FD ]
Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_18 $$ dump(treeStructure, d, level + 1, b)[ FD ]
Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_10 $$ for (int i = 0; i < level; i++) b.append("  ")[ CD ]
Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_12 $$ b.append("<node text=\"").append(descriptor.getHighlightedText().getText()).append("\"").append(treeStructure.getBaseDescriptor() == descriptor ? " base=\"true\"" : "")[ FD ]
Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_13 $$ final Object[] children = treeStructure.getChildElements(descriptor)[ CD ]
Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_23 $$ b.append("/>\n")[ FD ]
Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_10 $$ for (int i = 0; i < level; i++) b.append("  ")[ FD ]
Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_21 $$ b.append("</node>\n")[ FD ]
Line_14 $$ if (children.length > 0) -->Line_21 $$ b.append("</node>\n")[ CD ]
Line_14 $$ if (children.length > 0) -->Line_15 $$ b.append(">\n")[ CD ]
Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_4 $$ for (int i = 0; i < level; i++) b.append("  ")[ FD ]
Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_8 $$ if (descriptor == null)[ CD ]
Line_4 $$ for (int i = 0; i < level; i++) b.append("  ")-->Line_20 $$ for (int i = 0; i < level; i++) b.append("  ")[ FD ]
Line_17 $$ HierarchyNodeDescriptor d = (HierarchyNodeDescriptor) o-->Line_18 $$ dump(treeStructure, d, level + 1, b)[ FD ]
Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_3 $$ if (level > 10) [ CD ]
Line_3 $$ if (level > 10) -->Line_4 $$ for (int i = 0; i < level; i++) b.append("  ")[ CD ]
Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_12 $$ b.append("<node text=\"").append(descriptor.getHighlightedText().getText()).append("\"").append(treeStructure.getBaseDescriptor() == descriptor ? " base=\"true\"" : "")[ CD ]
Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_11 $$ descriptor.update()[ FD ]
Line_3 $$ if (level > 10) -->Line_5 $$ b.append("<Probably infinite part skipped>\n")[ CD ]
Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_20 $$ for (int i = 0; i < level; i++) b.append("  ")[ FD ]
Line_14 $$ if (children.length > 0) -->Line_20 $$ for (int i = 0; i < level; i++) b.append("  ")[ CD ]
Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_4 $$ b.append("  ")[ FD ]
Line_3 $$ if (level > 10) -->Line_6 $$ return[ CD ]
Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_11 $$ descriptor.update()[ CD ]
Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_15 $$ b.append(">\n")[ FD ]
Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_14 $$ if (children.length > 0) [ CD ]
Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_10 $$ b.append("  ")[ FD ]
Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_8 $$ if (descriptor == null)[ FD ]
Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_5 $$ b.append("<Probably infinite part skipped>\n")[ FD ]
Line_14 $$ if (children.length > 0) -->Line_23 $$ b.append("/>\n")[ CD ]
Line_2 $$ private static void dump(final HierarchyTreeStructure treeStructure, @Nullable HierarchyNodeDescriptor descriptor, int level, StringBuilder b) -->Line_9 $$ descriptor = (HierarchyNodeDescriptor) treeStructure.getRootElement()[ FD ]
Line_4 $$ for (int i = 0; i < level; i++) b.append("  ")-->Line_10 $$ for (int i = 0; i < level; i++) b.append("  ")[ FD ]
