Line_7 $$ final PsiType type = param.getType()-->Line_11 $$ TypeWriter.writeType(myBuilder, type, actual)[ FD ]
Line_2 $$ private boolean generateSingeArg(GrClosureSignatureUtil.ArgInfo<PsiElement> arg, GrClosureParameter param) -->Line_4 $$ if (argExists) [ CD ]
Line_4 $$ if (argExists) -->Line_9 $$ if (type != null && declaredType != null && !TypesUtil.isAssignableByMethodCallConversion(type, declaredType, (GrExpression) actual)) [ CD ]
Line_4 $$ if (argExists) -->Line_7 $$ final PsiType type = param.getType()[ CD ]
Line_9 $$ if (type != null && declaredType != null && !TypesUtil.isAssignableByMethodCallConversion(type, declaredType, (GrExpression) actual)) -->Line_11 $$ TypeWriter.writeType(myBuilder, type, actual)[ CD ]
Line_9 $$ if (type != null && declaredType != null && !TypesUtil.isAssignableByMethodCallConversion(type, declaredType, (GrExpression) actual)) -->Line_12 $$ myBuilder.append(')')[ CD ]
Line_2 $$ private boolean generateSingeArg(GrClosureSignatureUtil.ArgInfo<PsiElement> arg, GrClosureParameter param) -->Line_7 $$ final PsiType type = param.getType()[ FD ]
Line_5 $$ final PsiElement actual = arg.args.get(0)-->Line_11 $$ TypeWriter.writeType(myBuilder, type, actual)[ FD ]
Line_4 $$ if (argExists) -->Line_8 $$ final PsiType declaredType = GenerationUtil.getDeclaredType((GrExpression) actual, myExpressionGenerator.getContext())[ CD ]
Line_9 $$ if (type != null && declaredType != null && !TypesUtil.isAssignableByMethodCallConversion(type, declaredType, (GrExpression) actual)) -->Line_10 $$ myBuilder.append('(')[ CD ]
Line_4 $$ if (argExists) -->Line_6 $$ LOG.assertTrue(actual instanceof GrExpression)[ CD ]
Line_4 $$ if (argExists) -->Line_15 $$ return true[ CD ]
Line_7 $$ final PsiType type = param.getType()-->Line_9 $$ if (type != null && declaredType != null && !TypesUtil.isAssignableByMethodCallConversion(type, declaredType, (GrExpression) actual)) [ FD ]
Line_2 $$ private boolean generateSingeArg(GrClosureSignatureUtil.ArgInfo<PsiElement> arg, GrClosureParameter param) -->Line_3 $$ boolean argExists = !arg.args.isEmpty() && arg.args.get(0) != null[ CD ]
Line_8 $$ final PsiType declaredType = GenerationUtil.getDeclaredType((GrExpression) actual, myExpressionGenerator.getContext())-->Line_9 $$ if (type != null && declaredType != null && !TypesUtil.isAssignableByMethodCallConversion(type, declaredType, (GrExpression) actual)) [ FD ]
Line_4 $$ if (argExists) -->Line_5 $$ final PsiElement actual = arg.args.get(0)[ CD ]
Line_4 $$ if (argExists) -->Line_17 $$ return false[ CD ]
Line_4 $$ if (argExists) -->Line_14 $$ ((GrExpression) actual).accept(myExpressionGenerator)[ CD ]
