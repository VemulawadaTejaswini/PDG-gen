Line_7 $$ for (int i = 0; i < splits.length; i++) -->Line_8 $$ if (i != 0)[ CD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_10 $$ sb.append(splits[i])[ FD ]
Line_8 $$ if (i != 0)-->Line_9 $$ sb.append(",")[ CD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_9 $$ sb.append(",")[ FD ]
Line_7 $$ for (int i = 0; i < splits.length; i++) -->Line_10 $$ sb.append(splits[i])[ CD ]
Line_2 $$ protected String getSplitsAsString() -->Line_4 $$ if (splits == null || splits.length == 0)[ CD ]
Line_2 $$ protected String getSplitsAsString() -->Line_6 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ protected String getSplitsAsString() -->Line_7 $$ for (int i = 0; i < splits.length; i++) [ CD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_12 $$ return sb.toString()[ FD ]
Line_7 $$ for (int i = 0; i < splits.length; i++) -->Line_8 $$ if (i != 0)[ FD ]
Line_2 $$ protected String getSplitsAsString() -->Line_3 $$ String[] splits = getTaskSplitMetaInfo().getLocations()[ CD ]
Line_4 $$ if (splits == null || splits.length == 0)-->Line_5 $$ return ""[ CD ]
Line_2 $$ protected String getSplitsAsString() -->Line_12 $$ return sb.toString()[ CD ]
