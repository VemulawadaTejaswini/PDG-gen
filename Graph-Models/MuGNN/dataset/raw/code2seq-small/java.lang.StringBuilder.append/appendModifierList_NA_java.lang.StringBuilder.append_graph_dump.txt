Line_7 $$ if (element != null) -->Line_9 $$ if (resolved instanceof PsiClass && !JavaDocInfoGenerator.isDocumentedAnnotationType(resolved)) [ CD ]
Line_13 $$ if (shownAnnotations.add(referenceName) || JavaDocInfoGenerator.isRepeatableAnnotationType(resolved)) -->Line_14 $$ if (lastSize != buffer.length())[ CD ]
Line_2 $$ private static void appendModifierList(@NotNull StringBuilder buffer, @NotNull PsiModifierListOwner owner) -->Line_20 $$ if (lastSize != buffer.length())[ CD ]
Line_6 $$ final PsiJavaCodeReferenceElement element = annotation.getNameReferenceElement()-->Line_12 $$ String referenceName = element.getReferenceName()[ FD ]
Line_2 $$ private static void appendModifierList(@NotNull StringBuilder buffer, @NotNull PsiModifierListOwner owner) -->Line_3 $$ int lastSize = buffer.length()[ CD ]
Line_4 $$ Set<String> shownAnnotations = ContainerUtil.newHashSet()-->Line_13 $$ if (shownAnnotations.add(referenceName) || JavaDocInfoGenerator.isRepeatableAnnotationType(resolved)) [ FD ]
Line_2 $$ private static void appendModifierList(@NotNull StringBuilder buffer, @NotNull PsiModifierListOwner owner) -->Line_15 $$ buffer.append(" ")[ FD ]
Line_2 $$ private static void appendModifierList(@NotNull StringBuilder buffer, @NotNull PsiModifierListOwner owner) -->Line_20 $$ if (lastSize != buffer.length())[ FD ]
Line_8 $$ final PsiElement resolved = element.resolve()-->Line_9 $$ if (resolved instanceof PsiClass && !JavaDocInfoGenerator.isDocumentedAnnotationType(resolved)) [ FD ]
Line_2 $$ private static void appendModifierList(@NotNull StringBuilder buffer, @NotNull PsiModifierListOwner owner) -->Line_16 $$ buffer.append("@").append(referenceName)[ FD ]
Line_7 $$ if (element != null) -->Line_8 $$ final PsiElement resolved = element.resolve()[ CD ]
Line_5 $$ for (PsiAnnotation annotation : AnnotationUtil.getAllAnnotations(owner, false, null, !DumbService.isDumb(owner.getProject()))) -->Line_6 $$ final PsiJavaCodeReferenceElement element = annotation.getNameReferenceElement()[ FD ]
Line_13 $$ if (shownAnnotations.add(referenceName) || JavaDocInfoGenerator.isRepeatableAnnotationType(resolved)) -->Line_16 $$ buffer.append("@").append(referenceName)[ CD ]
Line_6 $$ final PsiJavaCodeReferenceElement element = annotation.getNameReferenceElement()-->Line_7 $$ if (element != null) [ FD ]
Line_7 $$ if (element != null) -->Line_12 $$ String referenceName = element.getReferenceName()[ CD ]
Line_2 $$ private static void appendModifierList(@NotNull StringBuilder buffer, @NotNull PsiModifierListOwner owner) -->Line_21 $$ buffer.append(" ")[ FD ]
Line_12 $$ String referenceName = element.getReferenceName()-->Line_16 $$ buffer.append("@").append(referenceName)[ FD ]
Line_7 $$ if (element != null) -->Line_13 $$ if (shownAnnotations.add(referenceName) || JavaDocInfoGenerator.isRepeatableAnnotationType(resolved)) [ CD ]
Line_3 $$ int lastSize = buffer.length()-->Line_14 $$ if (lastSize != buffer.length())[ FD ]
Line_20 $$ if (lastSize != buffer.length())-->Line_21 $$ buffer.append(" ")[ CD ]
Line_2 $$ private static void appendModifierList(@NotNull StringBuilder buffer, @NotNull PsiModifierListOwner owner) -->Line_4 $$ Set<String> shownAnnotations = ContainerUtil.newHashSet()[ CD ]
Line_6 $$ final PsiJavaCodeReferenceElement element = annotation.getNameReferenceElement()-->Line_8 $$ final PsiElement resolved = element.resolve()[ FD ]
Line_2 $$ private static void appendModifierList(@NotNull StringBuilder buffer, @NotNull PsiModifierListOwner owner) -->Line_5 $$ for (PsiAnnotation annotation : AnnotationUtil.getAllAnnotations(owner, false, null, !DumbService.isDumb(owner.getProject()))) [ FD ]
Line_2 $$ private static void appendModifierList(@NotNull StringBuilder buffer, @NotNull PsiModifierListOwner owner) -->Line_14 $$ if (lastSize != buffer.length())[ FD ]
Line_12 $$ String referenceName = element.getReferenceName()-->Line_13 $$ if (shownAnnotations.add(referenceName) || JavaDocInfoGenerator.isRepeatableAnnotationType(resolved)) [ FD ]
Line_3 $$ int lastSize = buffer.length()-->Line_20 $$ if (lastSize != buffer.length())[ FD ]
Line_8 $$ final PsiElement resolved = element.resolve()-->Line_13 $$ if (shownAnnotations.add(referenceName) || JavaDocInfoGenerator.isRepeatableAnnotationType(resolved)) [ FD ]
Line_2 $$ private static void appendModifierList(@NotNull StringBuilder buffer, @NotNull PsiModifierListOwner owner) -->Line_3 $$ int lastSize = buffer.length()[ FD ]
Line_14 $$ if (lastSize != buffer.length())-->Line_15 $$ buffer.append(" ")[ CD ]
