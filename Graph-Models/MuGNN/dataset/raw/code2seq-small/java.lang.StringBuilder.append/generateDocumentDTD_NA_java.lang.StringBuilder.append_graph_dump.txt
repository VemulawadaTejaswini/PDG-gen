Line_17 $$ final StringBuilder buffer = new StringBuilder()-->Line_21 $$ return buffer.toString()[ FD ]
Line_2 $$ public static String generateDocumentDTD(XmlDocument doc, boolean full) -->Line_6 $$ XmlEntityRefImpl.setNoEntityExpandOutOfDocument(doc, true)[ FD ]
Line_2 $$ public static String generateDocumentDTD(XmlDocument doc, boolean full) -->Line_7 $$ final XmlTag rootTag = doc.getRootTag()[ FD ]
Line_2 $$ public static String generateDocumentDTD(XmlDocument doc, boolean full) -->Line_8 $$ computeTag(rootTag, tags, attributes, full)[ FD ]
Line_2 $$ public static String generateDocumentDTD(XmlDocument doc, boolean full) -->Line_21 $$ return buffer.toString()[ CD ]
Line_7 $$ final XmlTag rootTag = doc.getRootTag()-->Line_8 $$ computeTag(rootTag, tags, attributes, full)[ FD ]
Line_4 $$ final Map<String, List<MyAttributeInfo>> attributes = new LinkedHashMap<String, List<MyAttributeInfo>>()-->Line_19 $$ buffer.append(generateElementDTD(tagName, tags.get(tagName), attributes.get(tagName)))[ FD ]
Line_4 $$ final Map<String, List<MyAttributeInfo>> attributes = new LinkedHashMap<String, List<MyAttributeInfo>>()-->Line_11 $$ computeTag((XmlTag) element, tags, attributes, full)[ FD ]
Line_3 $$ final Map<String, List<String>> tags = new LinkedHashMap<String, List<String>>()-->Line_11 $$ computeTag((XmlTag) element, tags, attributes, full)[ FD ]
Line_3 $$ final Map<String, List<String>> tags = new LinkedHashMap<String, List<String>>()-->Line_8 $$ computeTag(rootTag, tags, attributes, full)[ FD ]
Line_9 $$ for (PsiElement element = rootTag != null ? rootTag.getNextSibling() : null; element != null; element = element.getNextSibling()) -->Line_10 $$ if (element instanceof XmlTag) [ CD ]
Line_2 $$ public static String generateDocumentDTD(XmlDocument doc, boolean full) -->Line_15 $$ XmlEntityRefImpl.setNoEntityExpandOutOfDocument(doc, false)[ FD ]
Line_3 $$ final Map<String, List<String>> tags = new LinkedHashMap<String, List<String>>()-->Line_19 $$ buffer.append(generateElementDTD(tagName, tags.get(tagName), attributes.get(tagName)))[ FD ]
Line_2 $$ public static String generateDocumentDTD(XmlDocument doc, boolean full) -->Line_4 $$ final Map<String, List<MyAttributeInfo>> attributes = new LinkedHashMap<String, List<MyAttributeInfo>>()[ CD ]
Line_18 $$ for (final String tagName : tags.keySet()) -->Line_19 $$ buffer.append(generateElementDTD(tagName, tags.get(tagName), attributes.get(tagName)))[ FD ]
Line_10 $$ if (element instanceof XmlTag) -->Line_11 $$ computeTag((XmlTag) element, tags, attributes, full)[ CD ]
Line_17 $$ final StringBuilder buffer = new StringBuilder()-->Line_19 $$ buffer.append(generateElementDTD(tagName, tags.get(tagName), attributes.get(tagName)))[ FD ]
Line_4 $$ final Map<String, List<MyAttributeInfo>> attributes = new LinkedHashMap<String, List<MyAttributeInfo>>()-->Line_8 $$ computeTag(rootTag, tags, attributes, full)[ FD ]
Line_2 $$ public static String generateDocumentDTD(XmlDocument doc, boolean full) -->Line_3 $$ final Map<String, List<String>> tags = new LinkedHashMap<String, List<String>>()[ CD ]
Line_9 $$ for (PsiElement element = rootTag != null ? rootTag.getNextSibling() : null; element != null; element = element.getNextSibling()) -->Line_10 $$ if (element instanceof XmlTag) [ FD ]
Line_2 $$ public static String generateDocumentDTD(XmlDocument doc, boolean full) -->Line_11 $$ computeTag((XmlTag) element, tags, attributes, full)[ FD ]
Line_7 $$ final XmlTag rootTag = doc.getRootTag()-->Line_9 $$ for (PsiElement element = rootTag != null ? rootTag.getNextSibling() : null; element != null; element = element.getNextSibling()) [ FD ]
Line_2 $$ public static String generateDocumentDTD(XmlDocument doc, boolean full) -->Line_17 $$ final StringBuilder buffer = new StringBuilder()[ CD ]
Line_3 $$ final Map<String, List<String>> tags = new LinkedHashMap<String, List<String>>()-->Line_18 $$ for (final String tagName : tags.keySet()) [ FD ]
