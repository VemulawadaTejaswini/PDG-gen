Line_4 $$ for (int i = 0; i < paths.size(); i++) -->Line_6 $$ if (i < (paths.size() - 1)) [ FD ]
Line_4 $$ for (int i = 0; i < paths.size(); i++) -->Line_5 $$ sb.append(paths.get(i))[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_10 $$ return sb.toString()[ FD ]
Line_4 $$ for (int i = 0; i < paths.size(); i++) -->Line_6 $$ if (i < (paths.size() - 1)) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_5 $$ sb.append(paths.get(i))[ FD ]
Line_2 $$ public String buildAsString(String separator) -->Line_10 $$ return sb.toString()[ CD ]
Line_2 $$ public String buildAsString(String separator) -->Line_7 $$ sb.append(separator)[ FD ]
Line_2 $$ public String buildAsString(String separator) -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_7 $$ sb.append(separator)[ FD ]
Line_2 $$ public String buildAsString(String separator) -->Line_4 $$ for (int i = 0; i < paths.size(); i++) [ CD ]
Line_4 $$ for (int i = 0; i < paths.size(); i++) -->Line_5 $$ sb.append(paths.get(i))[ CD ]
Line_6 $$ if (i < (paths.size() - 1)) -->Line_7 $$ sb.append(separator)[ CD ]
