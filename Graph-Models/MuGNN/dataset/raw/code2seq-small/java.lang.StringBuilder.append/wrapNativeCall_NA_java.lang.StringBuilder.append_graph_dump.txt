Line_9 $$ final String message = SvnNativeCallsTranslator.getMessage(info)-->Line_13 $$ sb.append(message)[ FD ]
Line_7 $$ final StringBuilder sb = new StringBuilder()-->Line_16 $$ if (sb.length() > 0) [ FD ]
Line_11 $$ if (sb.length() > 0)-->Line_12 $$ sb.append('\n')[ CD ]
Line_7 $$ final StringBuilder sb = new StringBuilder()-->Line_18 $$ LOG.info(sb.toString())[ FD ]
Line_2 $$ private <T> T wrapNativeCall(final ThrowableComputable<T, SVNException> runnable) throws SVNException -->Line_5 $$ final T t = runnable.compute()[ FD ]
Line_9 $$ final String message = SvnNativeCallsTranslator.getMessage(info)-->Line_10 $$ if (message != null) [ FD ]
Line_10 $$ if (message != null) -->Line_11 $$ if (sb.length() > 0)[ CD ]
Line_16 $$ if (sb.length() > 0) -->Line_18 $$ LOG.info(sb.toString())[ CD ]
Line_7 $$ final StringBuilder sb = new StringBuilder()-->Line_12 $$ sb.append('\n')[ FD ]
Line_10 $$ if (message != null) -->Line_13 $$ sb.append(message)[ CD ]
Line_7 $$ final StringBuilder sb = new StringBuilder()-->Line_17 $$ VcsBalloonProblemNotifier.showOverChangesView(myProject, sb.toString(), MessageType.ERROR)[ FD ]
Line_8 $$ for (NativeLogReader.CallInfo info : logged) -->Line_9 $$ final String message = SvnNativeCallsTranslator.getMessage(info)[ FD ]
Line_7 $$ final StringBuilder sb = new StringBuilder()-->Line_11 $$ if (sb.length() > 0)[ FD ]
Line_16 $$ if (sb.length() > 0) -->Line_17 $$ VcsBalloonProblemNotifier.showOverChangesView(myProject, sb.toString(), MessageType.ERROR)[ CD ]
Line_7 $$ final StringBuilder sb = new StringBuilder()-->Line_13 $$ sb.append(message)[ FD ]
