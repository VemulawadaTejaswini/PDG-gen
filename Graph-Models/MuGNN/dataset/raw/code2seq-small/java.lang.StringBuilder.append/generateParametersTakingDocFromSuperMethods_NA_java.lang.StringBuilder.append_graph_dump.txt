Line_20 $$ if (paramName != null) -->Line_21 $$ param2Description.put(paramName, param.getText())[ CD ]
Line_29 $$ if (description != null) -->Line_30 $$ builder.append(CodeDocumentationUtil.createDocCommentLine("", project, commenter))[ CD ]
Line_8 $$ if (comment != null) -->Line_9 $$ final PsiDocTag[] params = comment.findTagsByName("param")[ CD ]
Line_29 $$ if (description != null) -->Line_36 $$ builder.append(parameter.getName())[ CD ]
Line_2 $$ public static void generateParametersTakingDocFromSuperMethods(Project project, StringBuilder builder, CodeDocumentationAwareCommenter commenter, PsiMethod psiMethod) -->Line_4 $$ final Map<String, String> param2Description = new HashMap<String, String>()[ CD ]
Line_28 $$ String description = param2Description.get(parameter.getName())-->Line_29 $$ if (description != null) [ FD ]
Line_14 $$ for (PsiElement dataElement : dataElements) -->Line_16 $$ paramName = dataElement.getReference().getCanonicalText()[ FD ]
Line_16 $$ paramName = dataElement.getReference().getCanonicalText()-->Line_21 $$ param2Description.put(paramName, param.getText())[ FD ]
Line_2 $$ public static void generateParametersTakingDocFromSuperMethods(Project project, StringBuilder builder, CodeDocumentationAwareCommenter commenter, PsiMethod psiMethod) -->Line_3 $$ final PsiParameter[] parameters = psiMethod.getParameterList().getParameters()[ CD ]
Line_11 $$ final PsiElement[] dataElements = param.getDataElements()-->Line_12 $$ if (dataElements != null) [ FD ]
Line_2 $$ public static void generateParametersTakingDocFromSuperMethods(Project project, StringBuilder builder, CodeDocumentationAwareCommenter commenter, PsiMethod psiMethod) -->Line_38 $$ builder.append(LINE_SEPARATOR)[ FD ]
Line_2 $$ public static void generateParametersTakingDocFromSuperMethods(Project project, StringBuilder builder, CodeDocumentationAwareCommenter commenter, PsiMethod psiMethod) -->Line_30 $$ builder.append(CodeDocumentationUtil.createDocCommentLine("", project, commenter))[ FD ]
Line_29 $$ if (description != null) -->Line_33 $$ builder.append(description)[ CD ]
Line_13 $$ String paramName = null-->Line_16 $$ paramName = dataElement.getReference().getCanonicalText()[ FD ]
Line_27 $$ for (PsiParameter parameter : parameters) -->Line_28 $$ String description = param2Description.get(parameter.getName())[ FD ]
Line_31 $$ if (description.indexOf('\n') > -1)-->Line_32 $$ description = description.substring(0, description.lastIndexOf('\n'))[ CD ]
Line_15 $$ if (dataElement instanceof PsiDocParamRef) -->Line_16 $$ paramName = dataElement.getReference().getCanonicalText()[ CD ]
Line_4 $$ final Map<String, String> param2Description = new HashMap<String, String>()-->Line_28 $$ String description = param2Description.get(parameter.getName())[ FD ]
Line_2 $$ public static void generateParametersTakingDocFromSuperMethods(Project project, StringBuilder builder, CodeDocumentationAwareCommenter commenter, PsiMethod psiMethod) -->Line_3 $$ final PsiParameter[] parameters = psiMethod.getParameterList().getParameters()[ FD ]
Line_29 $$ if (description != null) -->Line_31 $$ if (description.indexOf('\n') > -1)[ CD ]
Line_28 $$ String description = param2Description.get(parameter.getName())-->Line_32 $$ description = description.substring(0, description.lastIndexOf('\n'))[ FD ]
Line_2 $$ public static void generateParametersTakingDocFromSuperMethods(Project project, StringBuilder builder, CodeDocumentationAwareCommenter commenter, PsiMethod psiMethod) -->Line_5 $$ final PsiMethod[] superMethods = psiMethod.findSuperMethods()[ FD ]
Line_12 $$ if (dataElements != null) -->Line_20 $$ if (paramName != null) [ CD ]
Line_2 $$ public static void generateParametersTakingDocFromSuperMethods(Project project, StringBuilder builder, CodeDocumentationAwareCommenter commenter, PsiMethod psiMethod) -->Line_5 $$ final PsiMethod[] superMethods = psiMethod.findSuperMethods()[ CD ]
Line_13 $$ String paramName = null-->Line_21 $$ param2Description.put(paramName, param.getText())[ FD ]
Line_10 $$ for (PsiDocTag param : params) -->Line_11 $$ final PsiElement[] dataElements = param.getDataElements()[ FD ]
Line_6 $$ for (PsiMethod superMethod : superMethods) -->Line_7 $$ final PsiDocComment comment = superMethod.getDocComment()[ FD ]
Line_13 $$ String paramName = null-->Line_20 $$ if (paramName != null) [ FD ]
Line_28 $$ String description = param2Description.get(parameter.getName())-->Line_33 $$ builder.append(description)[ FD ]
Line_10 $$ for (PsiDocTag param : params) -->Line_21 $$ param2Description.put(paramName, param.getText())[ FD ]
Line_7 $$ final PsiDocComment comment = superMethod.getDocComment()-->Line_8 $$ if (comment != null) [ FD ]
Line_27 $$ for (PsiParameter parameter : parameters) -->Line_36 $$ builder.append(parameter.getName())[ FD ]
Line_28 $$ String description = param2Description.get(parameter.getName())-->Line_31 $$ if (description.indexOf('\n') > -1)[ FD ]
Line_32 $$ description = description.substring(0, description.lastIndexOf('\n'))-->Line_33 $$ builder.append(description)[ FD ]
Line_2 $$ public static void generateParametersTakingDocFromSuperMethods(Project project, StringBuilder builder, CodeDocumentationAwareCommenter commenter, PsiMethod psiMethod) -->Line_35 $$ builder.append(CodeDocumentationUtil.createDocCommentLine(PARAM_TAG, project, commenter))[ FD ]
Line_2 $$ public static void generateParametersTakingDocFromSuperMethods(Project project, StringBuilder builder, CodeDocumentationAwareCommenter commenter, PsiMethod psiMethod) -->Line_36 $$ builder.append(parameter.getName())[ FD ]
Line_16 $$ paramName = dataElement.getReference().getCanonicalText()-->Line_20 $$ if (paramName != null) [ FD ]
Line_29 $$ if (description != null) -->Line_35 $$ builder.append(CodeDocumentationUtil.createDocCommentLine(PARAM_TAG, project, commenter))[ CD ]
Line_12 $$ if (dataElements != null) -->Line_13 $$ String paramName = null[ CD ]
Line_4 $$ final Map<String, String> param2Description = new HashMap<String, String>()-->Line_21 $$ param2Description.put(paramName, param.getText())[ FD ]
Line_14 $$ for (PsiElement dataElement : dataElements) -->Line_15 $$ if (dataElement instanceof PsiDocParamRef) [ FD ]
Line_2 $$ public static void generateParametersTakingDocFromSuperMethods(Project project, StringBuilder builder, CodeDocumentationAwareCommenter commenter, PsiMethod psiMethod) -->Line_33 $$ builder.append(description)[ FD ]
Line_7 $$ final PsiDocComment comment = superMethod.getDocComment()-->Line_9 $$ final PsiDocTag[] params = comment.findTagsByName("param")[ FD ]
