Line_16 $$ if (resolved == null || resolved instanceof GrBindingVariable) -->Line_22 $$ if (method != null) [ CD ]
Line_37 $$ if (token == GroovyTokenTypes.mASSIGN) -->Line_39 $$ builder.append(" = ")[ CD ]
Line_21 $$ final PsiMethod method = PsiImplUtil.extractUniqueElement(candidates)-->Line_23 $$ writeAssignmentWithSetter(qualifier, method, args, GrNamedArgument.EMPTY_ARRAY, GrClosableBlock.EMPTY_ARRAY, PsiSubstitutor.EMPTY, expression)[ FD ]
Line_3 $$ final GrExpression lValue = expression.getLValue()-->Line_38 $$ lValue.accept(this)[ FD ]
Line_3 $$ final GrExpression lValue = expression.getLValue()-->Line_61 $$ writeSimpleBinaryExpression(expression.getOperationToken(), lValue, rValue)[ FD ]
Line_2 $$ public void visitAssignmentExpression(final GrAssignmentExpression expression) -->Line_51 $$ if (resolved instanceof PsiMethod && !shouldNotReplaceOperatorWithMethod(lValue.getType(), rValue, expression.getOperationTokenType())) [ FD ]
Line_2 $$ public void visitAssignmentExpression(final GrAssignmentExpression expression) -->Line_61 $$ writeSimpleBinaryExpression(expression.getOperationToken(), lValue, rValue)[ FD ]
Line_42 $$ GenerationUtil.wrapInCastIfNeeded(builder, GenerationUtil.getNotNullType(expression, lType), rType, expression, context, new StatementWriter() -->Line_54 $$ final PsiType rType = GenerationUtil.getDeclaredType((PsiMethod) resolved, resolveResult.getSubstitutor(), context)[ FD ]
Line_16 $$ if (resolved == null || resolved instanceof GrBindingVariable) -->Line_18 $$ final PsiType type = PsiImplUtil.getQualifierType((GrReferenceExpression) realLValue)[ CD ]
Line_3 $$ final GrExpression lValue = expression.getLValue()-->Line_6 $$ PsiElement realLValue = PsiUtil.skipParentheses(lValue, false)[ FD ]
Line_7 $$ if (realLValue instanceof GrReferenceExpression && rValue != null) -->Line_27 $$ if (realLValue instanceof GrIndexProperty) [ CD ]
Line_36 $$ final PsiType lType = GenerationUtil.getDeclaredType(lValue, context)-->Line_55 $$ GenerationUtil.wrapInCastIfNeeded(builder, GenerationUtil.getNotNullType(expression, lType), rType, expression, context, new StatementWriter() [ FD ]
Line_3 $$ final GrExpression lValue = expression.getLValue()-->Line_57 $$ invokeMethodOn(((PsiMethod) resolved), (GrExpression) lValue.copy(), rValue == null ? GrExpression.EMPTY_ARRAY : new GrExpression[] [ FD ]
Line_18 $$ final PsiType type = PsiImplUtil.getQualifierType((GrReferenceExpression) realLValue)-->Line_20 $$ GroovyResolveResult[] candidates = type != null ? ResolveUtil.getMethodCandidates(type, "setProperty", expression, args[0].getType(), args[1].getType()) : GroovyResolveResult.EMPTY_ARRAY[ FD ]
Line_28 $$ final GroovyResolveResult result = PsiImplUtil.extractUniqueResult(((GrIndexProperty) realLValue).multiResolve(false))-->Line_32 $$ writeAssignmentWithSetter(((GrIndexProperty) realLValue).getInvokedExpression(), (PsiMethod) resolved, ArrayUtil.append(args, getRValue(expression)), GrNamedArgument.EMPTY_ARRAY, GrClosableBlock.EMPTY_ARRAY, result.getSubstitutor(), expression)[ FD ]
Line_2 $$ public void visitAssignmentExpression(final GrAssignmentExpression expression) -->Line_5 $$ final IElementType token = expression.getOperationTokenType()[ FD ]
Line_37 $$ if (token == GroovyTokenTypes.mASSIGN) -->Line_49 $$ final GroovyResolveResult resolveResult = PsiImplUtil.extractUniqueResult(expression.multiResolve(false))[ CD ]
Line_22 $$ if (method != null) -->Line_23 $$ writeAssignmentWithSetter(qualifier, method, args, GrNamedArgument.EMPTY_ARRAY, GrClosableBlock.EMPTY_ARRAY, PsiSubstitutor.EMPTY, expression)[ CD ]
Line_27 $$ if (realLValue instanceof GrIndexProperty) -->Line_30 $$ if (resolved instanceof PsiMethod) [ CD ]
Line_9 $$ PsiElement resolved = resolveResult.getElement()-->Line_30 $$ if (resolved instanceof PsiMethod) [ FD ]
Line_4 $$ final GrExpression rValue = expression.getRValue()-->Line_51 $$ if (resolved instanceof PsiMethod && !shouldNotReplaceOperatorWithMethod(lValue.getType(), rValue, expression.getOperationTokenType())) [ FD ]
Line_30 $$ if (resolved instanceof PsiMethod) -->Line_33 $$ return[ CD ]
Line_16 $$ if (resolved == null || resolved instanceof GrBindingVariable) -->Line_19 $$ final GrExpression[] args = [ CD ]
Line_13 $$ if (resolved instanceof PsiMethod && resolveResult.isInvokedOnProperty()) -->Line_15 $$ return[ CD ]
Line_42 $$ GenerationUtil.wrapInCastIfNeeded(builder, GenerationUtil.getNotNullType(expression, lType), rType, expression, context, new StatementWriter() -->Line_53 $$ builder.append(" = ")[ FD ]
Line_37 $$ if (token == GroovyTokenTypes.mASSIGN) -->Line_51 $$ if (resolved instanceof PsiMethod && !shouldNotReplaceOperatorWithMethod(lValue.getType(), rValue, expression.getOperationTokenType())) [ CD ]
Line_7 $$ if (realLValue instanceof GrReferenceExpression && rValue != null) -->Line_9 $$ PsiElement resolved = resolveResult.getElement()[ CD ]
Line_8 $$ GroovyResolveResult resolveResult = ((GrReferenceExpression) realLValue).advancedResolve()-->Line_54 $$ final PsiType rType = GenerationUtil.getDeclaredType((PsiMethod) resolved, resolveResult.getSubstitutor(), context)[ FD ]
Line_2 $$ public void visitAssignmentExpression(final GrAssignmentExpression expression) -->Line_36 $$ final PsiType lType = GenerationUtil.getDeclaredType(lValue, context)[ CD ]
Line_8 $$ GroovyResolveResult resolveResult = ((GrReferenceExpression) realLValue).advancedResolve()-->Line_50 $$ final PsiElement resolved = resolveResult.getElement()[ FD ]
Line_16 $$ if (resolved == null || resolved instanceof GrBindingVariable) -->Line_20 $$ GroovyResolveResult[] candidates = type != null ? ResolveUtil.getMethodCandidates(type, "setProperty", expression, args[0].getType(), args[1].getType()) : GroovyResolveResult.EMPTY_ARRAY[ CD ]
Line_2 $$ public void visitAssignmentExpression(final GrAssignmentExpression expression) -->Line_4 $$ final GrExpression rValue = expression.getRValue()[ FD ]
Line_51 $$ if (resolved instanceof PsiMethod && !shouldNotReplaceOperatorWithMethod(lValue.getType(), rValue, expression.getOperationTokenType())) -->Line_54 $$ final PsiType rType = GenerationUtil.getDeclaredType((PsiMethod) resolved, resolveResult.getSubstitutor(), context)[ CD ]
Line_4 $$ final GrExpression rValue = expression.getRValue()-->Line_44 $$ rValue.accept(ExpressionGenerator.this)[ FD ]
Line_4 $$ final GrExpression rValue = expression.getRValue()-->Line_61 $$ writeSimpleBinaryExpression(expression.getOperationToken(), lValue, rValue)[ FD ]
Line_7 $$ if (realLValue instanceof GrReferenceExpression && rValue != null) -->Line_10 $$ if (resolved instanceof GrVariable && context.analyzedVars.toWrap((GrVariable) resolved)) [ CD ]
Line_51 $$ if (resolved instanceof PsiMethod && !shouldNotReplaceOperatorWithMethod(lValue.getType(), rValue, expression.getOperationTokenType())) -->Line_52 $$ lValue.accept(this)[ CD ]
Line_7 $$ if (realLValue instanceof GrReferenceExpression && rValue != null) -->Line_8 $$ GroovyResolveResult resolveResult = ((GrReferenceExpression) realLValue).advancedResolve()[ CD ]
Line_55 $$ GenerationUtil.wrapInCastIfNeeded(builder, GenerationUtil.getNotNullType(expression, lType), rType, expression, context, new StatementWriter() -->Line_57 $$ invokeMethodOn(((PsiMethod) resolved), (GrExpression) lValue.copy(), rValue == null ? GrExpression.EMPTY_ARRAY : new GrExpression[] [ CD ]
Line_16 $$ if (resolved == null || resolved instanceof GrBindingVariable) -->Line_21 $$ final PsiMethod method = PsiImplUtil.extractUniqueElement(candidates)[ CD ]
Line_21 $$ final PsiMethod method = PsiImplUtil.extractUniqueElement(candidates)-->Line_22 $$ if (method != null) [ FD ]
Line_2 $$ public void visitAssignmentExpression(final GrAssignmentExpression expression) -->Line_5 $$ final IElementType token = expression.getOperationTokenType()[ CD ]
Line_30 $$ if (resolved instanceof PsiMethod) -->Line_31 $$ final GrExpression[] args = ((GrIndexProperty) realLValue).getArgumentList().getExpressionArguments()[ CD ]
Line_8 $$ GroovyResolveResult resolveResult = ((GrReferenceExpression) realLValue).advancedResolve()-->Line_9 $$ PsiElement resolved = resolveResult.getElement()[ FD ]
Line_51 $$ if (resolved instanceof PsiMethod && !shouldNotReplaceOperatorWithMethod(lValue.getType(), rValue, expression.getOperationTokenType())) -->Line_53 $$ builder.append(" = ")[ CD ]
Line_40 $$ if (rValue != null) -->Line_42 $$ GenerationUtil.wrapInCastIfNeeded(builder, GenerationUtil.getNotNullType(expression, lType), rType, expression, context, new StatementWriter() [ CD ]
Line_2 $$ public void visitAssignmentExpression(final GrAssignmentExpression expression) -->Line_6 $$ PsiElement realLValue = PsiUtil.skipParentheses(lValue, false)[ CD ]
Line_20 $$ GroovyResolveResult[] candidates = type != null ? ResolveUtil.getMethodCandidates(type, "setProperty", expression, args[0].getType(), args[1].getType()) : GroovyResolveResult.EMPTY_ARRAY-->Line_21 $$ final PsiMethod method = PsiImplUtil.extractUniqueElement(candidates)[ FD ]
Line_2 $$ public void visitAssignmentExpression(final GrAssignmentExpression expression) -->Line_14 $$ writeAssignmentWithSetter(((GrReferenceExpression) realLValue).getQualifier(), (PsiMethod) resolved, expression)[ FD ]
Line_19 $$ final GrExpression[] args = -->Line_23 $$ writeAssignmentWithSetter(qualifier, method, args, GrNamedArgument.EMPTY_ARRAY, GrClosableBlock.EMPTY_ARRAY, PsiSubstitutor.EMPTY, expression)[ FD ]
Line_28 $$ final GroovyResolveResult result = PsiImplUtil.extractUniqueResult(((GrIndexProperty) realLValue).multiResolve(false))-->Line_29 $$ final PsiElement resolved = result.getElement()[ FD ]
Line_40 $$ if (rValue != null) -->Line_41 $$ final PsiType rType = GenerationUtil.getDeclaredType(rValue, context)[ CD ]
Line_41 $$ final PsiType rType = GenerationUtil.getDeclaredType(rValue, context)-->Line_55 $$ GenerationUtil.wrapInCastIfNeeded(builder, GenerationUtil.getNotNullType(expression, lType), rType, expression, context, new StatementWriter() [ FD ]
Line_13 $$ if (resolved instanceof PsiMethod && resolveResult.isInvokedOnProperty()) -->Line_16 $$ if (resolved == null || resolved instanceof GrBindingVariable) [ CD ]
Line_2 $$ public void visitAssignmentExpression(final GrAssignmentExpression expression) -->Line_42 $$ GenerationUtil.wrapInCastIfNeeded(builder, GenerationUtil.getNotNullType(expression, lType), rType, expression, context, new StatementWriter() [ FD ]
Line_42 $$ GenerationUtil.wrapInCastIfNeeded(builder, GenerationUtil.getNotNullType(expression, lType), rType, expression, context, new StatementWriter() -->Line_55 $$ GenerationUtil.wrapInCastIfNeeded(builder, GenerationUtil.getNotNullType(expression, lType), rType, expression, context, new StatementWriter() [ FD ]
Line_5 $$ final IElementType token = expression.getOperationTokenType()-->Line_37 $$ if (token == GroovyTokenTypes.mASSIGN) [ FD ]
Line_2 $$ public void visitAssignmentExpression(final GrAssignmentExpression expression) -->Line_3 $$ final GrExpression lValue = expression.getLValue()[ FD ]
Line_2 $$ public void visitAssignmentExpression(final GrAssignmentExpression expression) -->Line_4 $$ final GrExpression rValue = expression.getRValue()[ CD ]
Line_42 $$ GenerationUtil.wrapInCastIfNeeded(builder, GenerationUtil.getNotNullType(expression, lType), rType, expression, context, new StatementWriter() -->Line_44 $$ rValue.accept(ExpressionGenerator.this)[ CD ]
Line_16 $$ if (resolved == null || resolved instanceof GrBindingVariable) -->Line_17 $$ final GrExpression qualifier = ((GrReferenceExpression) realLValue).getQualifier()[ CD ]
Line_4 $$ final GrExpression rValue = expression.getRValue()-->Line_41 $$ final PsiType rType = GenerationUtil.getDeclaredType(rValue, context)[ FD ]
Line_2 $$ public void visitAssignmentExpression(final GrAssignmentExpression expression) -->Line_20 $$ GroovyResolveResult[] candidates = type != null ? ResolveUtil.getMethodCandidates(type, "setProperty", expression, args[0].getType(), args[1].getType()) : GroovyResolveResult.EMPTY_ARRAY[ FD ]
Line_37 $$ if (token == GroovyTokenTypes.mASSIGN) -->Line_40 $$ if (rValue != null) [ CD ]
Line_37 $$ if (token == GroovyTokenTypes.mASSIGN) -->Line_38 $$ lValue.accept(this)[ CD ]
Line_3 $$ final GrExpression lValue = expression.getLValue()-->Line_51 $$ if (resolved instanceof PsiMethod && !shouldNotReplaceOperatorWithMethod(lValue.getType(), rValue, expression.getOperationTokenType())) [ FD ]
Line_2 $$ public void visitAssignmentExpression(final GrAssignmentExpression expression) -->Line_37 $$ if (token == GroovyTokenTypes.mASSIGN) [ CD ]
Line_2 $$ public void visitAssignmentExpression(final GrAssignmentExpression expression) -->Line_3 $$ final GrExpression lValue = expression.getLValue()[ CD ]
Line_22 $$ if (method != null) -->Line_24 $$ return[ CD ]
Line_2 $$ public void visitAssignmentExpression(final GrAssignmentExpression expression) -->Line_11 $$ writeAssignmentWithRefSetter((GrExpression) realLValue, expression)[ FD ]
Line_19 $$ final GrExpression[] args = -->Line_32 $$ writeAssignmentWithSetter(((GrIndexProperty) realLValue).getInvokedExpression(), (PsiMethod) resolved, ArrayUtil.append(args, getRValue(expression)), GrNamedArgument.EMPTY_ARRAY, GrClosableBlock.EMPTY_ARRAY, result.getSubstitutor(), expression)[ FD ]
Line_2 $$ public void visitAssignmentExpression(final GrAssignmentExpression expression) -->Line_7 $$ if (realLValue instanceof GrReferenceExpression && rValue != null) [ CD ]
Line_8 $$ GroovyResolveResult resolveResult = ((GrReferenceExpression) realLValue).advancedResolve()-->Line_13 $$ if (resolved instanceof PsiMethod && resolveResult.isInvokedOnProperty()) [ FD ]
Line_3 $$ final GrExpression lValue = expression.getLValue()-->Line_52 $$ lValue.accept(this)[ FD ]
Line_37 $$ if (token == GroovyTokenTypes.mASSIGN) -->Line_50 $$ final PsiElement resolved = resolveResult.getElement()[ CD ]
Line_8 $$ GroovyResolveResult resolveResult = ((GrReferenceExpression) realLValue).advancedResolve()-->Line_57 $$ invokeMethodOn(((PsiMethod) resolved), (GrExpression) lValue.copy(), rValue == null ? GrExpression.EMPTY_ARRAY : new GrExpression[] [ FD ]
Line_2 $$ public void visitAssignmentExpression(final GrAssignmentExpression expression) -->Line_57 $$ invokeMethodOn(((PsiMethod) resolved), (GrExpression) lValue.copy(), rValue == null ? GrExpression.EMPTY_ARRAY : new GrExpression[] [ FD ]
Line_2 $$ public void visitAssignmentExpression(final GrAssignmentExpression expression) -->Line_19 $$ final GrExpression[] args = [ FD ]
Line_6 $$ PsiElement realLValue = PsiUtil.skipParentheses(lValue, false)-->Line_27 $$ if (realLValue instanceof GrIndexProperty) [ FD ]
Line_27 $$ if (realLValue instanceof GrIndexProperty) -->Line_28 $$ final GroovyResolveResult result = PsiImplUtil.extractUniqueResult(((GrIndexProperty) realLValue).multiResolve(false))[ CD ]
Line_10 $$ if (resolved instanceof GrVariable && context.analyzedVars.toWrap((GrVariable) resolved)) -->Line_13 $$ if (resolved instanceof PsiMethod && resolveResult.isInvokedOnProperty()) [ CD ]
Line_10 $$ if (resolved instanceof GrVariable && context.analyzedVars.toWrap((GrVariable) resolved)) -->Line_11 $$ writeAssignmentWithRefSetter((GrExpression) realLValue, expression)[ CD ]
Line_4 $$ final GrExpression rValue = expression.getRValue()-->Line_40 $$ if (rValue != null) [ FD ]
Line_17 $$ final GrExpression qualifier = ((GrReferenceExpression) realLValue).getQualifier()-->Line_23 $$ writeAssignmentWithSetter(qualifier, method, args, GrNamedArgument.EMPTY_ARRAY, GrClosableBlock.EMPTY_ARRAY, PsiSubstitutor.EMPTY, expression)[ FD ]
Line_51 $$ if (resolved instanceof PsiMethod && !shouldNotReplaceOperatorWithMethod(lValue.getType(), rValue, expression.getOperationTokenType())) -->Line_61 $$ writeSimpleBinaryExpression(expression.getOperationToken(), lValue, rValue)[ CD ]
Line_2 $$ public void visitAssignmentExpression(final GrAssignmentExpression expression) -->Line_55 $$ GenerationUtil.wrapInCastIfNeeded(builder, GenerationUtil.getNotNullType(expression, lType), rType, expression, context, new StatementWriter() [ FD ]
Line_2 $$ public void visitAssignmentExpression(final GrAssignmentExpression expression) -->Line_23 $$ writeAssignmentWithSetter(qualifier, method, args, GrNamedArgument.EMPTY_ARRAY, GrClosableBlock.EMPTY_ARRAY, PsiSubstitutor.EMPTY, expression)[ FD ]
Line_2 $$ public void visitAssignmentExpression(final GrAssignmentExpression expression) -->Line_49 $$ final GroovyResolveResult resolveResult = PsiImplUtil.extractUniqueResult(expression.multiResolve(false))[ FD ]
Line_27 $$ if (realLValue instanceof GrIndexProperty) -->Line_29 $$ final PsiElement resolved = result.getElement()[ CD ]
Line_36 $$ final PsiType lType = GenerationUtil.getDeclaredType(lValue, context)-->Line_42 $$ GenerationUtil.wrapInCastIfNeeded(builder, GenerationUtil.getNotNullType(expression, lType), rType, expression, context, new StatementWriter() [ FD ]
Line_41 $$ final PsiType rType = GenerationUtil.getDeclaredType(rValue, context)-->Line_42 $$ GenerationUtil.wrapInCastIfNeeded(builder, GenerationUtil.getNotNullType(expression, lType), rType, expression, context, new StatementWriter() [ FD ]
Line_13 $$ if (resolved instanceof PsiMethod && resolveResult.isInvokedOnProperty()) -->Line_14 $$ writeAssignmentWithSetter(((GrReferenceExpression) realLValue).getQualifier(), (PsiMethod) resolved, expression)[ CD ]
Line_51 $$ if (resolved instanceof PsiMethod && !shouldNotReplaceOperatorWithMethod(lValue.getType(), rValue, expression.getOperationTokenType())) -->Line_55 $$ GenerationUtil.wrapInCastIfNeeded(builder, GenerationUtil.getNotNullType(expression, lType), rType, expression, context, new StatementWriter() [ CD ]
Line_30 $$ if (resolved instanceof PsiMethod) -->Line_32 $$ writeAssignmentWithSetter(((GrIndexProperty) realLValue).getInvokedExpression(), (PsiMethod) resolved, ArrayUtil.append(args, getRValue(expression)), GrNamedArgument.EMPTY_ARRAY, GrClosableBlock.EMPTY_ARRAY, result.getSubstitutor(), expression)[ CD ]
Line_3 $$ final GrExpression lValue = expression.getLValue()-->Line_36 $$ final PsiType lType = GenerationUtil.getDeclaredType(lValue, context)[ FD ]
Line_10 $$ if (resolved instanceof GrVariable && context.analyzedVars.toWrap((GrVariable) resolved)) -->Line_12 $$ return[ CD ]
Line_2 $$ public void visitAssignmentExpression(final GrAssignmentExpression expression) -->Line_32 $$ writeAssignmentWithSetter(((GrIndexProperty) realLValue).getInvokedExpression(), (PsiMethod) resolved, ArrayUtil.append(args, getRValue(expression)), GrNamedArgument.EMPTY_ARRAY, GrClosableBlock.EMPTY_ARRAY, result.getSubstitutor(), expression)[ FD ]
