Line_13 $$ char[] buffer = new char[bufferSize]-->Line_20 $$ stringBuilder.append(buffer, 0, amountRead)[ FD ]
Line_3 $$ if (length == 0) -->Line_4 $$ return ""[ CD ]
Line_16 $$ int amountRead = characterStream.read(buffer, 0, bufferSize)-->Line_20 $$ stringBuilder.append(buffer, 0, amountRead)[ FD ]
Line_15 $$ while (true) -->Line_16 $$ int amountRead = characterStream.read(buffer, 0, bufferSize)[ CD ]
Line_15 $$ while (true) -->Line_25 $$ if (charsRead >= length) [ CD ]
Line_2 $$ private static String extractString(Reader characterStream, long start, int length) -->Line_25 $$ if (charsRead >= length) [ FD ]
Line_16 $$ int amountRead = characterStream.read(buffer, 0, bufferSize)-->Line_24 $$ charsRead += amountRead[ FD ]
Line_2 $$ private static String extractString(Reader characterStream, long start, int length) -->Line_9 $$ if (skipped != start) [ FD ]
Line_2 $$ private static String extractString(Reader characterStream, long start, int length) -->Line_12 $$ final int bufferSize = getSuggestedBufferSize(length)[ FD ]
Line_15 $$ while (true) -->Line_21 $$ if (amountRead < bufferSize) [ CD ]
Line_6 $$ StringBuilder stringBuilder = new StringBuilder(length)-->Line_20 $$ stringBuilder.append(buffer, 0, amountRead)[ FD ]
Line_2 $$ private static String extractString(Reader characterStream, long start, int length) -->Line_6 $$ StringBuilder stringBuilder = new StringBuilder(length)[ CD ]
Line_14 $$ int charsRead = 0-->Line_25 $$ if (charsRead >= length) [ FD ]
Line_16 $$ int amountRead = characterStream.read(buffer, 0, bufferSize)-->Line_17 $$ if (amountRead == -1) [ FD ]
Line_15 $$ while (true) -->Line_17 $$ if (amountRead == -1) [ CD ]
Line_15 $$ while (true) -->Line_24 $$ charsRead += amountRead[ CD ]
Line_2 $$ private static String extractString(Reader characterStream, long start, int length) -->Line_3 $$ if (length == 0) [ FD ]
Line_16 $$ int amountRead = characterStream.read(buffer, 0, bufferSize)-->Line_21 $$ if (amountRead < bufferSize) [ FD ]
Line_12 $$ final int bufferSize = getSuggestedBufferSize(length)-->Line_16 $$ int amountRead = characterStream.read(buffer, 0, bufferSize)[ FD ]
Line_2 $$ private static String extractString(Reader characterStream, long start, int length) -->Line_8 $$ long skipped = characterStream.skip(start)[ FD ]
Line_12 $$ final int bufferSize = getSuggestedBufferSize(length)-->Line_21 $$ if (amountRead < bufferSize) [ FD ]
Line_15 $$ while (true) -->Line_20 $$ stringBuilder.append(buffer, 0, amountRead)[ CD ]
Line_14 $$ int charsRead = 0-->Line_24 $$ charsRead += amountRead[ FD ]
Line_2 $$ private static String extractString(Reader characterStream, long start, int length) -->Line_16 $$ int amountRead = characterStream.read(buffer, 0, bufferSize)[ FD ]
Line_2 $$ private static String extractString(Reader characterStream, long start, int length) -->Line_32 $$ return stringBuilder.toString()[ CD ]
Line_8 $$ long skipped = characterStream.skip(start)-->Line_9 $$ if (skipped != start) [ FD ]
Line_6 $$ StringBuilder stringBuilder = new StringBuilder(length)-->Line_32 $$ return stringBuilder.toString()[ FD ]
Line_2 $$ private static String extractString(Reader characterStream, long start, int length) -->Line_3 $$ if (length == 0) [ CD ]
Line_24 $$ charsRead += amountRead-->Line_25 $$ if (charsRead >= length) [ FD ]
Line_13 $$ char[] buffer = new char[bufferSize]-->Line_16 $$ int amountRead = characterStream.read(buffer, 0, bufferSize)[ FD ]
