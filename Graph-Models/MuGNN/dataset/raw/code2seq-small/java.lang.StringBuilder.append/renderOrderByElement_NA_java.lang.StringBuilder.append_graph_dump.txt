Line_3 $$ final StringBuilder orderByElement = new StringBuilder(expression)-->Line_5 $$ orderByElement.append(" ").append(collation)[ FD ]
Line_3 $$ final StringBuilder orderByElement = new StringBuilder(expression)-->Line_13 $$ return orderByElement.toString()[ FD ]
Line_2 $$ public String renderOrderByElement(String expression, String collation, String order, NullPrecedence nulls) -->Line_7 $$ if (order != null) [ CD ]
Line_3 $$ final StringBuilder orderByElement = new StringBuilder(expression)-->Line_8 $$ orderByElement.append(" ").append(order)[ FD ]
Line_2 $$ public String renderOrderByElement(String expression, String collation, String order, NullPrecedence nulls) -->Line_4 $$ if (collation != null) [ CD ]
Line_10 $$ if (nulls != NullPrecedence.NONE) -->Line_11 $$ orderByElement.append(" nulls ").append(nulls.name().toLowerCase(Locale.ROOT))[ CD ]
Line_2 $$ public String renderOrderByElement(String expression, String collation, String order, NullPrecedence nulls) -->Line_7 $$ if (order != null) [ FD ]
Line_2 $$ public String renderOrderByElement(String expression, String collation, String order, NullPrecedence nulls) -->Line_11 $$ orderByElement.append(" nulls ").append(nulls.name().toLowerCase(Locale.ROOT))[ FD ]
Line_2 $$ public String renderOrderByElement(String expression, String collation, String order, NullPrecedence nulls) -->Line_4 $$ if (collation != null) [ FD ]
Line_2 $$ public String renderOrderByElement(String expression, String collation, String order, NullPrecedence nulls) -->Line_5 $$ orderByElement.append(" ").append(collation)[ FD ]
Line_7 $$ if (order != null) -->Line_8 $$ orderByElement.append(" ").append(order)[ CD ]
Line_4 $$ if (collation != null) -->Line_5 $$ orderByElement.append(" ").append(collation)[ CD ]
Line_2 $$ public String renderOrderByElement(String expression, String collation, String order, NullPrecedence nulls) -->Line_8 $$ orderByElement.append(" ").append(order)[ FD ]
Line_2 $$ public String renderOrderByElement(String expression, String collation, String order, NullPrecedence nulls) -->Line_10 $$ if (nulls != NullPrecedence.NONE) [ CD ]
Line_3 $$ final StringBuilder orderByElement = new StringBuilder(expression)-->Line_11 $$ orderByElement.append(" nulls ").append(nulls.name().toLowerCase(Locale.ROOT))[ FD ]
Line_2 $$ public String renderOrderByElement(String expression, String collation, String order, NullPrecedence nulls) -->Line_10 $$ if (nulls != NullPrecedence.NONE) [ FD ]
Line_2 $$ public String renderOrderByElement(String expression, String collation, String order, NullPrecedence nulls) -->Line_3 $$ final StringBuilder orderByElement = new StringBuilder(expression)[ CD ]
Line_2 $$ public String renderOrderByElement(String expression, String collation, String order, NullPrecedence nulls) -->Line_13 $$ return orderByElement.toString()[ CD ]
