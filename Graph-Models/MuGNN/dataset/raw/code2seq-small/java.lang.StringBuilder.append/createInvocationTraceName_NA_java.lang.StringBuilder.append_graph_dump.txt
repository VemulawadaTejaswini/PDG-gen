Line_3 $$ StringBuilder sb = new StringBuilder(getPrefix())-->Line_11 $$ sb.append(getSuffix())[ FD ]
Line_2 $$ protected String createInvocationTraceName(MethodInvocation invocation) -->Line_6 $$ if (this.logTargetClassInvocation && clazz.isInstance(invocation.getThis())) [ FD ]
Line_2 $$ protected String createInvocationTraceName(MethodInvocation invocation) -->Line_7 $$ clazz = invocation.getThis().getClass()[ FD ]
Line_4 $$ Method method = invocation.getMethod()-->Line_10 $$ sb.append('.').append(method.getName())[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder(getPrefix())-->Line_10 $$ sb.append('.').append(method.getName())[ FD ]
Line_2 $$ protected String createInvocationTraceName(MethodInvocation invocation) -->Line_6 $$ if (this.logTargetClassInvocation && clazz.isInstance(invocation.getThis())) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder(getPrefix())-->Line_12 $$ return sb.toString()[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder(getPrefix())-->Line_9 $$ sb.append(clazz.getName())[ FD ]
Line_5 $$ Class<?> clazz = method.getDeclaringClass()-->Line_6 $$ if (this.logTargetClassInvocation && clazz.isInstance(invocation.getThis())) [ FD ]
Line_6 $$ if (this.logTargetClassInvocation && clazz.isInstance(invocation.getThis())) -->Line_7 $$ clazz = invocation.getThis().getClass()[ CD ]
Line_2 $$ protected String createInvocationTraceName(MethodInvocation invocation) -->Line_12 $$ return sb.toString()[ CD ]
Line_2 $$ protected String createInvocationTraceName(MethodInvocation invocation) -->Line_4 $$ Method method = invocation.getMethod()[ CD ]
Line_2 $$ protected String createInvocationTraceName(MethodInvocation invocation) -->Line_10 $$ sb.append('.').append(method.getName())[ CD ]
Line_7 $$ clazz = invocation.getThis().getClass()-->Line_9 $$ sb.append(clazz.getName())[ FD ]
Line_5 $$ Class<?> clazz = method.getDeclaringClass()-->Line_9 $$ sb.append(clazz.getName())[ FD ]
Line_4 $$ Method method = invocation.getMethod()-->Line_5 $$ Class<?> clazz = method.getDeclaringClass()[ FD ]
Line_5 $$ Class<?> clazz = method.getDeclaringClass()-->Line_7 $$ clazz = invocation.getThis().getClass()[ FD ]
Line_2 $$ protected String createInvocationTraceName(MethodInvocation invocation) -->Line_5 $$ Class<?> clazz = method.getDeclaringClass()[ CD ]
Line_2 $$ protected String createInvocationTraceName(MethodInvocation invocation) -->Line_4 $$ Method method = invocation.getMethod()[ FD ]
Line_2 $$ protected String createInvocationTraceName(MethodInvocation invocation) -->Line_9 $$ sb.append(clazz.getName())[ CD ]
Line_2 $$ protected String createInvocationTraceName(MethodInvocation invocation) -->Line_3 $$ StringBuilder sb = new StringBuilder(getPrefix())[ CD ]
Line_2 $$ protected String createInvocationTraceName(MethodInvocation invocation) -->Line_11 $$ sb.append(getSuffix())[ CD ]
