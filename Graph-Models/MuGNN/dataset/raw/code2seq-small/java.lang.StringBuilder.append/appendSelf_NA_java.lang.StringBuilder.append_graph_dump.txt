Line_3 $$ if (staticMethod) -->Line_8 $$ builder.append(PyUtil.getFirstParameterName(PsiTreeUtil.getParentOfType(firstElement, PyFunction.class)))[ CD ]
Line_2 $$ private static void appendSelf(@NotNull PsiElement firstElement, @NotNull StringBuilder builder, boolean staticMethod) -->Line_10 $$ builder.append(".")[ CD ]
Line_2 $$ private static void appendSelf(@NotNull PsiElement firstElement, @NotNull StringBuilder builder, boolean staticMethod) -->Line_4 $$ final PyClass containingClass = PsiTreeUtil.getParentOfType(firstElement, PyClass.class)[ FD ]
Line_3 $$ if (staticMethod) -->Line_4 $$ final PyClass containingClass = PsiTreeUtil.getParentOfType(firstElement, PyClass.class)[ CD ]
Line_3 $$ if (staticMethod) -->Line_6 $$ builder.append(containingClass.getName())[ CD ]
Line_2 $$ private static void appendSelf(@NotNull PsiElement firstElement, @NotNull StringBuilder builder, boolean staticMethod) -->Line_8 $$ builder.append(PyUtil.getFirstParameterName(PsiTreeUtil.getParentOfType(firstElement, PyFunction.class)))[ FD ]
Line_2 $$ private static void appendSelf(@NotNull PsiElement firstElement, @NotNull StringBuilder builder, boolean staticMethod) -->Line_3 $$ if (staticMethod) [ CD ]
Line_4 $$ final PyClass containingClass = PsiTreeUtil.getParentOfType(firstElement, PyClass.class)-->Line_6 $$ builder.append(containingClass.getName())[ FD ]
Line_2 $$ private static void appendSelf(@NotNull PsiElement firstElement, @NotNull StringBuilder builder, boolean staticMethod) -->Line_10 $$ builder.append(".")[ FD ]
Line_2 $$ private static void appendSelf(@NotNull PsiElement firstElement, @NotNull StringBuilder builder, boolean staticMethod) -->Line_6 $$ builder.append(containingClass.getName())[ FD ]
