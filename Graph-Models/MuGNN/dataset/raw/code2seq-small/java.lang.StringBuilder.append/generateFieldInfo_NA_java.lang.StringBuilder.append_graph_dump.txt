Line_5 $$ if (parentClass != null && !(parentClass instanceof PsiAnonymousClass)) -->Line_6 $$ buffer.append(JavaDocUtil.getShortestClassName(parentClass, field))[ CD ]
Line_2 $$ private static String generateFieldInfo(PsiField field, PsiSubstitutor substitutor) -->Line_5 $$ if (parentClass != null && !(parentClass instanceof PsiAnonymousClass)) [ CD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_9 $$ generateModifiers(buffer, field)[ FD ]
Line_2 $$ private static String generateFieldInfo(PsiField field, PsiSubstitutor substitutor) -->Line_11 $$ buffer.append(" ")[ CD ]
Line_2 $$ private static String generateFieldInfo(PsiField field, PsiSubstitutor substitutor) -->Line_4 $$ PsiClass parentClass = field.getContainingClass()[ CD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_10 $$ JavaDocInfoGenerator.generateType(buffer, substitutor.substitute(field.getType()), field, false)[ FD ]
Line_2 $$ private static String generateFieldInfo(PsiField field, PsiSubstitutor substitutor) -->Line_9 $$ generateModifiers(buffer, field)[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_7 $$ newLine(buffer)[ FD ]
Line_2 $$ private static String generateFieldInfo(PsiField field, PsiSubstitutor substitutor) -->Line_12 $$ buffer.append(field.getName())[ FD ]
Line_4 $$ PsiClass parentClass = field.getContainingClass()-->Line_6 $$ buffer.append(JavaDocUtil.getShortestClassName(parentClass, field))[ FD ]
Line_2 $$ private static String generateFieldInfo(PsiField field, PsiSubstitutor substitutor) -->Line_10 $$ JavaDocInfoGenerator.generateType(buffer, substitutor.substitute(field.getType()), field, false)[ FD ]
Line_5 $$ if (parentClass != null && !(parentClass instanceof PsiAnonymousClass)) -->Line_7 $$ newLine(buffer)[ CD ]
Line_4 $$ PsiClass parentClass = field.getContainingClass()-->Line_14 $$ JavaDocInfoGenerator.enumConstantOrdinal(buffer, field, parentClass, "\n")[ FD ]
Line_2 $$ private static String generateFieldInfo(PsiField field, PsiSubstitutor substitutor) -->Line_15 $$ return buffer.toString()[ CD ]
Line_2 $$ private static String generateFieldInfo(PsiField field, PsiSubstitutor substitutor) -->Line_12 $$ buffer.append(field.getName())[ CD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_14 $$ JavaDocInfoGenerator.enumConstantOrdinal(buffer, field, parentClass, "\n")[ FD ]
Line_2 $$ private static String generateFieldInfo(PsiField field, PsiSubstitutor substitutor) -->Line_4 $$ PsiClass parentClass = field.getContainingClass()[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_12 $$ buffer.append(field.getName())[ FD ]
Line_2 $$ private static String generateFieldInfo(PsiField field, PsiSubstitutor substitutor) -->Line_10 $$ JavaDocInfoGenerator.generateType(buffer, substitutor.substitute(field.getType()), field, false)[ CD ]
Line_2 $$ private static String generateFieldInfo(PsiField field, PsiSubstitutor substitutor) -->Line_14 $$ JavaDocInfoGenerator.enumConstantOrdinal(buffer, field, parentClass, "\n")[ FD ]
Line_2 $$ private static String generateFieldInfo(PsiField field, PsiSubstitutor substitutor) -->Line_3 $$ StringBuilder buffer = new StringBuilder()[ CD ]
Line_2 $$ private static String generateFieldInfo(PsiField field, PsiSubstitutor substitutor) -->Line_13 $$ generateInitializer(buffer, field)[ CD ]
Line_2 $$ private static String generateFieldInfo(PsiField field, PsiSubstitutor substitutor) -->Line_14 $$ JavaDocInfoGenerator.enumConstantOrdinal(buffer, field, parentClass, "\n")[ CD ]
Line_2 $$ private static String generateFieldInfo(PsiField field, PsiSubstitutor substitutor) -->Line_9 $$ generateModifiers(buffer, field)[ CD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_11 $$ buffer.append(" ")[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_13 $$ generateInitializer(buffer, field)[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_6 $$ buffer.append(JavaDocUtil.getShortestClassName(parentClass, field))[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_15 $$ return buffer.toString()[ FD ]
Line_2 $$ private static String generateFieldInfo(PsiField field, PsiSubstitutor substitutor) -->Line_6 $$ buffer.append(JavaDocUtil.getShortestClassName(parentClass, field))[ FD ]
Line_2 $$ private static String generateFieldInfo(PsiField field, PsiSubstitutor substitutor) -->Line_13 $$ generateInitializer(buffer, field)[ FD ]
