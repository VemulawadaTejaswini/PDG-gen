Line_2 $$ public static void appendParameterPresentation(GrParameter parameter, PsiSubstitutor substitutor, TypePresentation typePresentation, StringBuilder builder) -->Line_17 $$ builder.append(type.getCanonicalText()).append(' ').append(parameter.getName())[ FD ]
Line_21 $$ final Set<String> structural = Collections.synchronizedSet(new LinkedHashSet<String>())-->Line_26 $$ if (structural.size() >= CONSTRAINTS_NUMBER) [ FD ]
Line_33 $$ if (argTypes != null) -->Line_35 $$ if (argTypes.length > 0) [ CD ]
Line_55 $$ for (int i = 0; i < array.length; i++) -->Line_56 $$ if (i > 0)[ CD ]
Line_7 $$ type = substitutor.substitute(type)-->Line_15 $$ builder.append(type.getPresentableText()).append(' ').append(parameter.getName())[ FD ]
Line_33 $$ if (argTypes != null) -->Line_34 $$ builder1.append("(")[ CD ]
Line_21 $$ final Set<String> structural = Collections.synchronizedSet(new LinkedHashSet<String>())-->Line_45 $$ structural.add(builder1.toString())[ FD ]
Line_22 $$ ReferencesSearch.search(parameter, parameter.getUseScope()).forEach(new Processor<PsiReference>() -->Line_47 $$ return true[ CD ]
Line_55 $$ for (int i = 0; i < array.length; i++) -->Line_58 $$ builder.append(array[i])[ CD ]
Line_55 $$ for (int i = 0; i < array.length; i++) -->Line_56 $$ if (i > 0)[ FD ]
Line_24 $$ PsiElement parent = ref.getElement().getParent()-->Line_25 $$ if (parent instanceof GrReferenceExpression) [ FD ]
Line_37 $$ if (argTypes.length == 1) -->Line_40 $$ builder1.append(" args")[ CD ]
Line_13 $$ if (type != null) -->Line_14 $$ if (typePresentation == TypePresentation.PRESENTABLE) [ CD ]
Line_2 $$ public static void appendParameterPresentation(GrParameter parameter, PsiSubstitutor substitutor, TypePresentation typePresentation, StringBuilder builder) -->Line_9 $$ PsiImplUtil.appendTypeString(builder, type, parameter)[ FD ]
Line_24 $$ PsiElement parent = ref.getElement().getParent()-->Line_32 $$ PsiType[] argTypes = PsiUtil.getArgumentTypes(parent, true)[ FD ]
Line_2 $$ public static void appendParameterPresentation(GrParameter parameter, PsiSubstitutor substitutor, TypePresentation typePresentation, StringBuilder builder) -->Line_61 $$ builder.append("]")[ FD ]
Line_2 $$ public static void appendParameterPresentation(GrParameter parameter, PsiSubstitutor substitutor, TypePresentation typePresentation, StringBuilder builder) -->Line_6 $$ PsiType type = parameter.getTypeGroovy()[ FD ]
Line_2 $$ public static void appendParameterPresentation(GrParameter parameter, PsiSubstitutor substitutor, TypePresentation typePresentation, StringBuilder builder) -->Line_54 $$ builder.append("[")[ FD ]
Line_35 $$ if (argTypes.length > 0) -->Line_36 $$ builder1.append(argTypes.length)[ CD ]
Line_2 $$ public static void appendParameterPresentation(GrParameter parameter, PsiSubstitutor substitutor, TypePresentation typePresentation, StringBuilder builder) -->Line_13 $$ if (type != null) [ CD ]
Line_6 $$ PsiType type = parameter.getTypeGroovy()-->Line_15 $$ builder.append(type.getPresentableText()).append(' ').append(parameter.getName())[ FD ]
Line_2 $$ public static void appendParameterPresentation(GrParameter parameter, PsiSubstitutor substitutor, TypePresentation typePresentation, StringBuilder builder) -->Line_7 $$ type = substitutor.substitute(type)[ FD ]
Line_2 $$ public static void appendParameterPresentation(GrParameter parameter, PsiSubstitutor substitutor, TypePresentation typePresentation, StringBuilder builder) -->Line_10 $$ builder.append(' ').append(parameter.getName())[ FD ]
Line_25 $$ if (parent instanceof GrReferenceExpression) -->Line_45 $$ structural.add(builder1.toString())[ CD ]
Line_21 $$ final Set<String> structural = Collections.synchronizedSet(new LinkedHashSet<String>())-->Line_50 $$ if (!structural.isEmpty()) [ FD ]
Line_30 $$ StringBuilder builder1 = new StringBuilder()-->Line_36 $$ builder1.append(argTypes.length)[ FD ]
Line_50 $$ if (!structural.isEmpty()) -->Line_60 $$ if (array.length > 1)[ CD ]
Line_13 $$ if (type != null) -->Line_21 $$ final Set<String> structural = Collections.synchronizedSet(new LinkedHashSet<String>())[ CD ]
Line_2 $$ public static void appendParameterPresentation(GrParameter parameter, PsiSubstitutor substitutor, TypePresentation typePresentation, StringBuilder builder) -->Line_15 $$ builder.append(type.getPresentableText()).append(' ').append(parameter.getName())[ FD ]
Line_14 $$ if (typePresentation == TypePresentation.PRESENTABLE) -->Line_16 $$ if (typePresentation == TypePresentation.CANONICAL) [ CD ]
Line_13 $$ if (type != null) -->Line_20 $$ builder.append(parameter.getName())[ CD ]
Line_2 $$ public static void appendParameterPresentation(GrParameter parameter, PsiSubstitutor substitutor, TypePresentation typePresentation, StringBuilder builder) -->Line_20 $$ builder.append(parameter.getName())[ FD ]
Line_30 $$ StringBuilder builder1 = new StringBuilder()-->Line_38 $$ builder1.append(" arg")[ FD ]
Line_14 $$ if (typePresentation == TypePresentation.PRESENTABLE) -->Line_15 $$ builder.append(type.getPresentableText()).append(' ').append(parameter.getName())[ CD ]
Line_13 $$ if (type != null) -->Line_50 $$ if (!structural.isEmpty()) [ CD ]
Line_2 $$ public static void appendParameterPresentation(GrParameter parameter, PsiSubstitutor substitutor, TypePresentation typePresentation, StringBuilder builder) -->Line_58 $$ builder.append(array[i])[ FD ]
Line_25 $$ if (parent instanceof GrReferenceExpression) -->Line_32 $$ PsiType[] argTypes = PsiUtil.getArgumentTypes(parent, true)[ CD ]
Line_53 $$ if (array.length > 1)-->Line_54 $$ builder.append("[")[ CD ]
Line_8 $$ if (typePresentation == TypePresentation.LINK) -->Line_10 $$ builder.append(' ').append(parameter.getName())[ CD ]
Line_30 $$ StringBuilder builder1 = new StringBuilder()-->Line_43 $$ builder1.append(')')[ FD ]
Line_32 $$ PsiType[] argTypes = PsiUtil.getArgumentTypes(parent, true)-->Line_33 $$ if (argTypes != null) [ FD ]
Line_22 $$ ReferencesSearch.search(parameter, parameter.getUseScope()).forEach(new Processor<PsiReference>() -->Line_24 $$ PsiElement parent = ref.getElement().getParent()[ FD ]
Line_2 $$ public static void appendParameterPresentation(GrParameter parameter, PsiSubstitutor substitutor, TypePresentation typePresentation, StringBuilder builder) -->Line_22 $$ ReferencesSearch.search(parameter, parameter.getUseScope()).forEach(new Processor<PsiReference>() [ FD ]
Line_25 $$ if (parent instanceof GrReferenceExpression) -->Line_26 $$ if (structural.size() >= CONSTRAINTS_NUMBER) [ CD ]
Line_21 $$ final Set<String> structural = Collections.synchronizedSet(new LinkedHashSet<String>())-->Line_27 $$ structural.add("...")[ FD ]
Line_30 $$ StringBuilder builder1 = new StringBuilder()-->Line_34 $$ builder1.append("(")[ FD ]
Line_2 $$ public static void appendParameterPresentation(GrParameter parameter, PsiSubstitutor substitutor, TypePresentation typePresentation, StringBuilder builder) -->Line_16 $$ if (typePresentation == TypePresentation.CANONICAL) [ FD ]
Line_2 $$ public static void appendParameterPresentation(GrParameter parameter, PsiSubstitutor substitutor, TypePresentation typePresentation, StringBuilder builder) -->Line_14 $$ if (typePresentation == TypePresentation.PRESENTABLE) [ FD ]
Line_35 $$ if (argTypes.length > 0) -->Line_37 $$ if (argTypes.length == 1) [ CD ]
Line_56 $$ if (i > 0)-->Line_57 $$ builder.append(", ")[ CD ]
Line_21 $$ final Set<String> structural = Collections.synchronizedSet(new LinkedHashSet<String>())-->Line_52 $$ String[] array = ArrayUtil.toStringArray(structural)[ FD ]
Line_50 $$ if (!structural.isEmpty()) -->Line_52 $$ String[] array = ArrayUtil.toStringArray(structural)[ CD ]
Line_2 $$ public static void appendParameterPresentation(GrParameter parameter, PsiSubstitutor substitutor, TypePresentation typePresentation, StringBuilder builder) -->Line_7 $$ type = substitutor.substitute(type)[ CD ]
Line_26 $$ if (structural.size() >= CONSTRAINTS_NUMBER) -->Line_28 $$ return false[ CD ]
Line_25 $$ if (parent instanceof GrReferenceExpression) -->Line_33 $$ if (argTypes != null) [ CD ]
Line_7 $$ type = substitutor.substitute(type)-->Line_13 $$ if (type != null) [ FD ]
Line_25 $$ if (parent instanceof GrReferenceExpression) -->Line_30 $$ StringBuilder builder1 = new StringBuilder()[ CD ]
Line_7 $$ type = substitutor.substitute(type)-->Line_17 $$ builder.append(type.getCanonicalText()).append(' ').append(parameter.getName())[ FD ]
Line_37 $$ if (argTypes.length == 1) -->Line_38 $$ builder1.append(" arg")[ CD ]
Line_25 $$ if (parent instanceof GrReferenceExpression) -->Line_31 $$ builder1.append(((GrReferenceElement) parent).getReferenceName())[ CD ]
Line_8 $$ if (typePresentation == TypePresentation.LINK) -->Line_11 $$ return[ CD ]
Line_2 $$ public static void appendParameterPresentation(GrParameter parameter, PsiSubstitutor substitutor, TypePresentation typePresentation, StringBuilder builder) -->Line_51 $$ builder.append(".")[ FD ]
Line_30 $$ StringBuilder builder1 = new StringBuilder()-->Line_40 $$ builder1.append(" args")[ FD ]
Line_13 $$ if (type != null) -->Line_22 $$ ReferencesSearch.search(parameter, parameter.getUseScope()).forEach(new Processor<PsiReference>() [ CD ]
Line_6 $$ PsiType type = parameter.getTypeGroovy()-->Line_13 $$ if (type != null) [ FD ]
Line_26 $$ if (structural.size() >= CONSTRAINTS_NUMBER) -->Line_27 $$ structural.add("...")[ CD ]
Line_22 $$ ReferencesSearch.search(parameter, parameter.getUseScope()).forEach(new Processor<PsiReference>() -->Line_25 $$ if (parent instanceof GrReferenceExpression) [ CD ]
Line_8 $$ if (typePresentation == TypePresentation.LINK) -->Line_9 $$ PsiImplUtil.appendTypeString(builder, type, parameter)[ CD ]
Line_2 $$ public static void appendParameterPresentation(GrParameter parameter, PsiSubstitutor substitutor, TypePresentation typePresentation, StringBuilder builder) -->Line_8 $$ if (typePresentation == TypePresentation.LINK) [ CD ]
Line_16 $$ if (typePresentation == TypePresentation.CANONICAL) -->Line_17 $$ builder.append(type.getCanonicalText()).append(' ').append(parameter.getName())[ CD ]
Line_2 $$ public static void appendParameterPresentation(GrParameter parameter, PsiSubstitutor substitutor, TypePresentation typePresentation, StringBuilder builder) -->Line_8 $$ if (typePresentation == TypePresentation.LINK) [ FD ]
Line_2 $$ public static void appendParameterPresentation(GrParameter parameter, PsiSubstitutor substitutor, TypePresentation typePresentation, StringBuilder builder) -->Line_4 $$ builder.append(annotation.getText()).append(' ')[ FD ]
Line_50 $$ if (!structural.isEmpty()) -->Line_51 $$ builder.append(".")[ CD ]
Line_2 $$ public static void appendParameterPresentation(GrParameter parameter, PsiSubstitutor substitutor, TypePresentation typePresentation, StringBuilder builder) -->Line_3 $$ for (PsiAnnotation annotation : parameter.getModifierList().getAnnotations()) [ FD ]
Line_2 $$ public static void appendParameterPresentation(GrParameter parameter, PsiSubstitutor substitutor, TypePresentation typePresentation, StringBuilder builder) -->Line_6 $$ PsiType type = parameter.getTypeGroovy()[ CD ]
Line_7 $$ type = substitutor.substitute(type)-->Line_9 $$ PsiImplUtil.appendTypeString(builder, type, parameter)[ FD ]
Line_6 $$ PsiType type = parameter.getTypeGroovy()-->Line_9 $$ PsiImplUtil.appendTypeString(builder, type, parameter)[ FD ]
Line_33 $$ if (argTypes != null) -->Line_43 $$ builder1.append(')')[ CD ]
Line_50 $$ if (!structural.isEmpty()) -->Line_55 $$ for (int i = 0; i < array.length; i++) [ CD ]
Line_30 $$ StringBuilder builder1 = new StringBuilder()-->Line_45 $$ structural.add(builder1.toString())[ FD ]
Line_50 $$ if (!structural.isEmpty()) -->Line_53 $$ if (array.length > 1)[ CD ]
Line_30 $$ StringBuilder builder1 = new StringBuilder()-->Line_31 $$ builder1.append(((GrReferenceElement) parent).getReferenceName())[ FD ]
Line_6 $$ PsiType type = parameter.getTypeGroovy()-->Line_17 $$ builder.append(type.getCanonicalText()).append(' ').append(parameter.getName())[ FD ]
Line_6 $$ PsiType type = parameter.getTypeGroovy()-->Line_7 $$ type = substitutor.substitute(type)[ FD ]
Line_2 $$ public static void appendParameterPresentation(GrParameter parameter, PsiSubstitutor substitutor, TypePresentation typePresentation, StringBuilder builder) -->Line_57 $$ builder.append(", ")[ FD ]
Line_3 $$ for (PsiAnnotation annotation : parameter.getModifierList().getAnnotations()) -->Line_4 $$ builder.append(annotation.getText()).append(' ')[ FD ]
Line_60 $$ if (array.length > 1)-->Line_61 $$ builder.append("]")[ CD ]
Line_22 $$ ReferencesSearch.search(parameter, parameter.getUseScope()).forEach(new Processor<PsiReference>() -->Line_24 $$ PsiElement parent = ref.getElement().getParent()[ CD ]
