Line_2 $$ public static List<String> splitHonorQuotes(@NotNull String s, char separator) -->Line_15 $$ if ((c == '"' || c == '\'') && !(i > 0 && s.charAt(i - 1) == '\\')) [ FD ]
Line_16 $$ inQuotes = !inQuotes-->Line_8 $$ if (c == separator && !inQuotes) [ FD ]
Line_6 $$ for (int i = 0; i < s.length(); i++) -->Line_7 $$ final char c = s.charAt(i)[ FD ]
Line_6 $$ for (int i = 0; i < s.length(); i++) -->Line_15 $$ if ((c == '"' || c == '\'') && !(i > 0 && s.charAt(i - 1) == '\\')) [ CD ]
Line_2 $$ public static List<String> splitHonorQuotes(@NotNull String s, char separator) -->Line_4 $$ final StringBuilder builder = new StringBuilder(s.length())[ CD ]
Line_2 $$ public static List<String> splitHonorQuotes(@NotNull String s, char separator) -->Line_5 $$ boolean inQuotes = false[ CD ]
Line_4 $$ final StringBuilder builder = new StringBuilder(s.length())-->Line_11 $$ builder.setLength(0)[ FD ]
Line_5 $$ boolean inQuotes = false-->Line_16 $$ inQuotes = !inQuotes[ FD ]
Line_20 $$ if (builder.length() > 0) -->Line_21 $$ result.add(builder.toString())[ CD ]
Line_4 $$ final StringBuilder builder = new StringBuilder(s.length())-->Line_21 $$ result.add(builder.toString())[ FD ]
Line_8 $$ if (c == separator && !inQuotes) -->Line_9 $$ if (builder.length() > 0) [ CD ]
Line_4 $$ final StringBuilder builder = new StringBuilder(s.length())-->Line_9 $$ if (builder.length() > 0) [ FD ]
Line_2 $$ public static List<String> splitHonorQuotes(@NotNull String s, char separator) -->Line_3 $$ final List<String> result = new ArrayList<String>()[ CD ]
Line_4 $$ final StringBuilder builder = new StringBuilder(s.length())-->Line_10 $$ result.add(builder.toString())[ FD ]
Line_6 $$ for (int i = 0; i < s.length(); i++) -->Line_8 $$ if (c == separator && !inQuotes) [ CD ]
Line_7 $$ final char c = s.charAt(i)-->Line_18 $$ builder.append(c)[ FD ]
Line_2 $$ public static List<String> splitHonorQuotes(@NotNull String s, char separator) -->Line_6 $$ for (int i = 0; i < s.length(); i++) [ FD ]
Line_9 $$ if (builder.length() > 0) -->Line_10 $$ result.add(builder.toString())[ CD ]
Line_4 $$ final StringBuilder builder = new StringBuilder(s.length())-->Line_18 $$ builder.append(c)[ FD ]
Line_5 $$ boolean inQuotes = false-->Line_8 $$ if (c == separator && !inQuotes) [ FD ]
Line_2 $$ public static List<String> splitHonorQuotes(@NotNull String s, char separator) -->Line_7 $$ final char c = s.charAt(i)[ FD ]
Line_6 $$ for (int i = 0; i < s.length(); i++) -->Line_18 $$ builder.append(c)[ CD ]
Line_4 $$ final StringBuilder builder = new StringBuilder(s.length())-->Line_20 $$ if (builder.length() > 0) [ FD ]
Line_15 $$ if ((c == '"' || c == '\'') && !(i > 0 && s.charAt(i - 1) == '\\')) -->Line_16 $$ inQuotes = !inQuotes[ CD ]
Line_3 $$ final List<String> result = new ArrayList<String>()-->Line_21 $$ result.add(builder.toString())[ FD ]
Line_2 $$ public static List<String> splitHonorQuotes(@NotNull String s, char separator) -->Line_6 $$ for (int i = 0; i < s.length(); i++) [ CD ]
Line_9 $$ if (builder.length() > 0) -->Line_11 $$ builder.setLength(0)[ CD ]
Line_6 $$ for (int i = 0; i < s.length(); i++) -->Line_7 $$ final char c = s.charAt(i)[ CD ]
Line_2 $$ public static List<String> splitHonorQuotes(@NotNull String s, char separator) -->Line_4 $$ final StringBuilder builder = new StringBuilder(s.length())[ FD ]
Line_2 $$ public static List<String> splitHonorQuotes(@NotNull String s, char separator) -->Line_23 $$ return result[ CD ]
Line_2 $$ public static List<String> splitHonorQuotes(@NotNull String s, char separator) -->Line_20 $$ if (builder.length() > 0) [ CD ]
Line_3 $$ final List<String> result = new ArrayList<String>()-->Line_10 $$ result.add(builder.toString())[ FD ]
