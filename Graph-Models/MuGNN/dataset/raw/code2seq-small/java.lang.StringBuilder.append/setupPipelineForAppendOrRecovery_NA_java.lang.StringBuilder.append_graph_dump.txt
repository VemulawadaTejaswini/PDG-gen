Line_25 $$ StringBuilder pipelineMsg = new StringBuilder()-->Line_29 $$ pipelineMsg.append(", ")[ FD ]
Line_12 $$ while (!success && !streamerClosed && dfsClient.clientRunning) -->Line_65 $$ newGS = lb.getBlock().getGenerationStamp()[ CD ]
Line_23 $$ boolean isRecovery = hasError-->Line_75 $$ success = createBlockOutputStream(nodes, storageTypes, newGS, isRecovery)[ FD ]
Line_12 $$ while (!success && !streamerClosed && dfsClient.clientRunning) -->Line_77 $$ if (restartingNodeIndex >= 0) [ CD ]
Line_24 $$ if (errorIndex >= 0) -->Line_25 $$ StringBuilder pipelineMsg = new StringBuilder()[ CD ]
Line_4 $$ String msg = "Could not get block locations. " + "Source file \"" + src + "\" - Aborting..."-->Line_5 $$ DFSClient.LOG.warn(msg)[ FD ]
Line_77 $$ if (restartingNodeIndex >= 0) -->Line_88 $$ DFSClient.LOG.warn("Datanode did not restart in time: " + nodes[expiredNodeIndex])[ CD ]
Line_65 $$ newGS = lb.getBlock().getGenerationStamp()-->Line_68 $$ success = createBlockOutputStream(nodes, storageTypes, newGS, isRecovery)[ FD ]
Line_67 $$ if (failPacket) -->Line_68 $$ success = createBlockOutputStream(nodes, storageTypes, newGS, isRecovery)[ CD ]
Line_2 $$ private boolean setupPipelineForAppendOrRecovery() throws IOException -->Line_11 $$ long newGS = 0L[ CD ]
Line_12 $$ while (!success && !streamerClosed && dfsClient.clientRunning) -->Line_23 $$ boolean isRecovery = hasError[ CD ]
Line_26 $$ for (int j = 0; j < nodes.length; j++) -->Line_28 $$ if (j < nodes.length - 1) [ FD ]
Line_24 $$ if (errorIndex >= 0) -->Line_59 $$ errorIndex = -1[ CD ]
Line_24 $$ if (errorIndex >= 0) -->Line_46 $$ if (restartingNodeIndex >= 0) [ CD ]
Line_2 $$ private boolean setupPipelineForAppendOrRecovery() throws IOException -->Line_12 $$ while (!success && !streamerClosed && dfsClient.clientRunning) [ CD ]
Line_32 $$ if (nodes.length <= 1) -->Line_33 $$ lastException.set(new IOException("All datanodes " + pipelineMsg + " are bad. Aborting..."))[ CD ]
Line_24 $$ if (errorIndex >= 0) -->Line_58 $$ lastException.set(null)[ CD ]
Line_10 $$ boolean success = false-->Line_68 $$ success = createBlockOutputStream(nodes, storageTypes, newGS, isRecovery)[ FD ]
Line_67 $$ if (failPacket) -->Line_75 $$ success = createBlockOutputStream(nodes, storageTypes, newGS, isRecovery)[ CD ]
Line_77 $$ if (restartingNodeIndex >= 0) -->Line_79 $$ if (errorIndex == restartingNodeIndex) [ CD ]
Line_94 $$ if (success) -->Line_95 $$ ExtendedBlock newBlock = new ExtendedBlock(block.getBlockPoolId(), block.getBlockId(), block.getNumBytes(), newGS)[ CD ]
Line_94 $$ if (success) -->Line_96 $$ dfsClient.namenode.updatePipeline(dfsClient.clientName, block, newBlock, nodes, storageIDs)[ CD ]
Line_2 $$ private boolean setupPipelineForAppendOrRecovery() throws IOException -->Line_10 $$ boolean success = false[ CD ]
Line_11 $$ long newGS = 0L-->Line_75 $$ success = createBlockOutputStream(nodes, storageTypes, newGS, isRecovery)[ FD ]
Line_2 $$ private boolean setupPipelineForAppendOrRecovery() throws IOException -->Line_99 $$ return false[ CD ]
Line_47 $$ if (errorIndex > restartingNodeIndex) -->Line_49 $$ if (errorIndex < restartingNodeIndex) [ CD ]
Line_65 $$ newGS = lb.getBlock().getGenerationStamp()-->Line_75 $$ success = createBlockOutputStream(nodes, storageTypes, newGS, isRecovery)[ FD ]
Line_23 $$ boolean isRecovery = hasError-->Line_68 $$ success = createBlockOutputStream(nodes, storageTypes, newGS, isRecovery)[ FD ]
Line_12 $$ while (!success && !streamerClosed && dfsClient.clientRunning) -->Line_67 $$ if (failPacket) [ CD ]
Line_24 $$ if (errorIndex >= 0) -->Line_37 $$ DFSClient.LOG.warn("Error Recovery for block " + block + " in pipeline " + pipelineMsg + ": bad datanode " + nodes[errorIndex])[ CD ]
Line_24 $$ if (errorIndex >= 0) -->Line_45 $$ setPipeline(newnodes, newStorageTypes, newStorageIDs)[ CD ]
Line_10 $$ boolean success = false-->Line_75 $$ success = createBlockOutputStream(nodes, storageTypes, newGS, isRecovery)[ FD ]
Line_46 $$ if (restartingNodeIndex >= 0) -->Line_47 $$ if (errorIndex > restartingNodeIndex) [ CD ]
Line_24 $$ if (errorIndex >= 0) -->Line_40 $$ arraycopy(nodes, newnodes, errorIndex)[ CD ]
Line_13 $$ if (restartingNodeIndex >= 0) -->Line_14 $$ long delay = Math.min(dfsClient.getConf().datanodeRestartTimeout, 4000L)[ CD ]
Line_12 $$ while (!success && !streamerClosed && dfsClient.clientRunning) -->Line_66 $$ accessToken = lb.getBlockToken()[ CD ]
Line_3 $$ if (nodes == null || nodes.length == 0) -->Line_5 $$ DFSClient.LOG.warn(msg)[ CD ]
Line_77 $$ if (restartingNodeIndex >= 0) -->Line_82 $$ if (Time.now() < restartDeadline) [ CD ]
Line_68 $$ success = createBlockOutputStream(nodes, storageTypes, newGS, isRecovery)-->Line_12 $$ while (!success && !streamerClosed && dfsClient.clientRunning) [ FD ]
Line_28 $$ if (j < nodes.length - 1) -->Line_29 $$ pipelineMsg.append(", ")[ CD ]
Line_24 $$ if (errorIndex >= 0) -->Line_26 $$ for (int j = 0; j < nodes.length; j++) [ CD ]
Line_24 $$ if (errorIndex >= 0) -->Line_38 $$ failed.add(nodes[errorIndex])[ CD ]
Line_75 $$ success = createBlockOutputStream(nodes, storageTypes, newGS, isRecovery)-->Line_12 $$ while (!success && !streamerClosed && dfsClient.clientRunning) [ FD ]
Line_12 $$ while (!success && !streamerClosed && dfsClient.clientRunning) -->Line_24 $$ if (errorIndex >= 0) [ CD ]
Line_25 $$ StringBuilder pipelineMsg = new StringBuilder()-->Line_27 $$ pipelineMsg.append(nodes[j])[ FD ]
Line_11 $$ long newGS = 0L-->Line_65 $$ newGS = lb.getBlock().getGenerationStamp()[ FD ]
Line_47 $$ if (errorIndex > restartingNodeIndex) -->Line_48 $$ restartingNodeIndex = -1[ CD ]
Line_12 $$ while (!success && !streamerClosed && dfsClient.clientRunning) -->Line_61 $$ if (dfsClient.dtpReplaceDatanodeOnFailure.satisfy(blockReplication, nodes, isAppend, isHflushed)) [ CD ]
Line_11 $$ long newGS = 0L-->Line_68 $$ success = createBlockOutputStream(nodes, storageTypes, newGS, isRecovery)[ FD ]
Line_12 $$ while (!success && !streamerClosed && dfsClient.clientRunning) -->Line_13 $$ if (restartingNodeIndex >= 0) [ CD ]
Line_26 $$ for (int j = 0; j < nodes.length; j++) -->Line_28 $$ if (j < nodes.length - 1) [ CD ]
Line_3 $$ if (nodes == null || nodes.length == 0) -->Line_4 $$ String msg = "Could not get block locations. " + "Source file \"" + src + "\" - Aborting..."[ CD ]
Line_3 $$ if (nodes == null || nodes.length == 0) -->Line_6 $$ setLastException(new IOException(msg))[ CD ]
Line_24 $$ if (errorIndex >= 0) -->Line_32 $$ if (nodes.length <= 1) [ CD ]
Line_26 $$ for (int j = 0; j < nodes.length; j++) -->Line_27 $$ pipelineMsg.append(nodes[j])[ CD ]
Line_24 $$ if (errorIndex >= 0) -->Line_44 $$ arraycopy(storageIDs, newStorageIDs, errorIndex)[ CD ]
Line_79 $$ if (errorIndex == restartingNodeIndex) -->Line_80 $$ errorIndex = -1[ CD ]
Line_2 $$ private boolean setupPipelineForAppendOrRecovery() throws IOException -->Line_3 $$ if (nodes == null || nodes.length == 0) [ CD ]
Line_10 $$ boolean success = false-->Line_12 $$ while (!success && !streamerClosed && dfsClient.clientRunning) [ FD ]
Line_24 $$ if (errorIndex >= 0) -->Line_42 $$ arraycopy(storageTypes, newStorageTypes, errorIndex)[ CD ]
Line_24 $$ if (errorIndex >= 0) -->Line_55 $$ if (restartingNodeIndex == -1) [ CD ]
Line_61 $$ if (dfsClient.dtpReplaceDatanodeOnFailure.satisfy(blockReplication, nodes, isAppend, isHflushed)) -->Line_62 $$ addDatanode2ExistingPipeline()[ CD ]
Line_68 $$ success = createBlockOutputStream(nodes, storageTypes, newGS, isRecovery)-->Line_75 $$ success = createBlockOutputStream(nodes, storageTypes, newGS, isRecovery)[ FD ]
Line_77 $$ if (restartingNodeIndex >= 0) -->Line_89 $$ if (errorIndex == -1) [ CD ]
Line_2 $$ private boolean setupPipelineForAppendOrRecovery() throws IOException -->Line_94 $$ if (success) [ CD ]
Line_12 $$ while (!success && !streamerClosed && dfsClient.clientRunning) -->Line_64 $$ LocatedBlock lb = dfsClient.namenode.updateBlockForPipeline(block, dfsClient.clientName)[ CD ]
Line_95 $$ ExtendedBlock newBlock = new ExtendedBlock(block.getBlockPoolId(), block.getBlockId(), block.getNumBytes(), newGS)-->Line_96 $$ dfsClient.namenode.updatePipeline(dfsClient.clientName, block, newBlock, nodes, storageIDs)[ FD ]
Line_14 $$ long delay = Math.min(dfsClient.getConf().datanodeRestartTimeout, 4000L)-->Line_16 $$ Thread.sleep(delay)[ FD ]
Line_77 $$ if (restartingNodeIndex >= 0) -->Line_87 $$ restartingNodeIndex = -1[ CD ]
Line_3 $$ if (nodes == null || nodes.length == 0) -->Line_8 $$ return false[ CD ]
Line_32 $$ if (nodes.length <= 1) -->Line_35 $$ return false[ CD ]
