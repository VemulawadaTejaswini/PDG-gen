Line_2 $$ private void writeCastForMethod(@NotNull GrExpression caller, @NotNull PsiMethod method, @NotNull GroovyPsiElement context) -->Line_4 $$ if (type == null)[ CD ]
Line_3 $$ final PsiType type = inferCastType(caller, method, context)-->Line_4 $$ if (type == null)[ FD ]
Line_2 $$ private void writeCastForMethod(@NotNull GrExpression caller, @NotNull PsiMethod method, @NotNull GroovyPsiElement context) -->Line_8 $$ TypeWriter.writeType(builder, type, context)[ FD ]
Line_4 $$ if (type == null)-->Line_5 $$ return[ CD ]
Line_2 $$ private void writeCastForMethod(@NotNull GrExpression caller, @NotNull PsiMethod method, @NotNull GroovyPsiElement context) -->Line_9 $$ builder.append(')')[ CD ]
Line_2 $$ private void writeCastForMethod(@NotNull GrExpression caller, @NotNull PsiMethod method, @NotNull GroovyPsiElement context) -->Line_6 $$ builder.append('(')[ CD ]
Line_2 $$ private void writeCastForMethod(@NotNull GrExpression caller, @NotNull PsiMethod method, @NotNull GroovyPsiElement context) -->Line_3 $$ final PsiType type = inferCastType(caller, method, context)[ CD ]
Line_2 $$ private void writeCastForMethod(@NotNull GrExpression caller, @NotNull PsiMethod method, @NotNull GroovyPsiElement context) -->Line_3 $$ final PsiType type = inferCastType(caller, method, context)[ FD ]
Line_3 $$ final PsiType type = inferCastType(caller, method, context)-->Line_8 $$ TypeWriter.writeType(builder, type, context)[ FD ]
Line_2 $$ private void writeCastForMethod(@NotNull GrExpression caller, @NotNull PsiMethod method, @NotNull GroovyPsiElement context) -->Line_7 $$ builder.append('(')[ CD ]
Line_2 $$ private void writeCastForMethod(@NotNull GrExpression caller, @NotNull PsiMethod method, @NotNull GroovyPsiElement context) -->Line_8 $$ TypeWriter.writeType(builder, type, context)[ CD ]
