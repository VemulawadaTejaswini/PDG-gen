Line_18 $$ final DomFileDescription<T> description = findFileDescription(rootTagName, sb)-->Line_38 $$ if (description.hasStubs() && file instanceof VirtualFileWithId && !isFileParsed()) [ FD ]
Line_41 $$ ObjectStubTree stubTree = StubTreeLoader.getInstance().readOrBuild(myXmlFile.getProject(), file, myXmlFile)-->Line_42 $$ if (stubTree != null) [ FD ]
Line_3 $$ if (sb != null) -->Line_4 $$ sb.append(rootTagName).append("\n")[ CD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_4 $$ sb.append(rootTagName).append("\n")[ FD ]
Line_15 $$ if (sb != null) -->Line_16 $$ sb.append("File is of dom file type\n")[ CD ]
Line_48 $$ if (sb != null) -->Line_49 $$ sb.append("success " + result + "\n")[ CD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_18 $$ final DomFileDescription<T> description = findFileDescription(rootTagName, sb)[ CD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_32 $$ final Class<T> rootElementClass = description.getRootElementClass()[ CD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_37 $$ FileStub stub = null[ CD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_38 $$ if (description.hasStubs() && file instanceof VirtualFileWithId && !isFileParsed()) [ CD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_16 $$ sb.append("File is of dom file type\n")[ FD ]
Line_42 $$ if (stubTree != null) -->Line_43 $$ stub = (FileStub) stubTree.getRoot()[ CD ]
Line_40 $$ if (!XmlUtil.isStubBuilding()) -->Line_42 $$ if (stubTree != null) [ CD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_51 $$ if (fireEvents) [ CD ]
Line_9 $$ if (sb != null) -->Line_10 $$ sb.append("File is valid\n")[ CD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_24 $$ if (oldValue != null) [ CD ]
Line_25 $$ if (fireEvents) -->Line_26 $$ events.add(new DomEvent(oldValue, false))[ CD ]
Line_18 $$ final DomFileDescription<T> description = findFileDescription(rootTagName, sb)-->Line_32 $$ final Class<T> rootElementClass = description.getRootElementClass()[ FD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_9 $$ if (sb != null) [ CD ]
Line_32 $$ final Class<T> rootElementClass = description.getRootElementClass()-->Line_33 $$ final XmlName xmlName = DomImplUtil.createXmlName(description.getRootTagName(), rootElementClass, null)[ FD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_10 $$ sb.append("File is valid\n")[ FD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_33 $$ final XmlName xmlName = DomImplUtil.createXmlName(description.getRootTagName(), rootElementClass, null)[ CD ]
Line_37 $$ FileStub stub = null-->Line_43 $$ stub = (FileStub) stubTree.getRoot()[ FD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_29 $$ if (description == null) [ CD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_20 $$ if (sb != null) [ FD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_6 $$ if (!myXmlFile.isValid()) [ CD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_36 $$ VirtualFile file = myXmlFile.getVirtualFile()[ CD ]
Line_36 $$ VirtualFile file = myXmlFile.getVirtualFile()-->Line_41 $$ ObjectStubTree stubTree = StubTreeLoader.getInstance().readOrBuild(myXmlFile.getProject(), file, myXmlFile)[ FD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_48 $$ if (sb != null) [ FD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_12 $$ if (!(myXmlFile.getFileType() instanceof DomSupportEnabled)) [ CD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_3 $$ if (sb != null) [ CD ]
Line_23 $$ final List<DomEvent> events = fireEvents ? new SmartList<DomEvent>() : Collections.<DomEvent>emptyList()-->Line_52 $$ events.add(new DomEvent(result, true))[ FD ]
Line_23 $$ final List<DomEvent> events = fireEvents ? new SmartList<DomEvent>() : Collections.<DomEvent>emptyList()-->Line_26 $$ events.add(new DomEvent(oldValue, false))[ FD ]
Line_24 $$ if (oldValue != null) -->Line_25 $$ if (fireEvents) [ CD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_9 $$ if (sb != null) [ FD ]
Line_6 $$ if (!myXmlFile.isValid()) -->Line_7 $$ return null[ CD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_15 $$ if (sb != null) [ FD ]
Line_41 $$ ObjectStubTree stubTree = StubTreeLoader.getInstance().readOrBuild(myXmlFile.getProject(), file, myXmlFile)-->Line_43 $$ stub = (FileStub) stubTree.getRoot()[ FD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_23 $$ final List<DomEvent> events = fireEvents ? new SmartList<DomEvent>() : Collections.<DomEvent>emptyList()[ CD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_35 $$ final EvaluatedXmlNameImpl rootTagName1 = EvaluatedXmlNameImpl.createEvaluatedXmlName(xmlName, xmlName.getNamespaceKey(), false)[ CD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_19 $$ final DomFileElementImpl oldValue = getLastValue()[ CD ]
Line_12 $$ if (!(myXmlFile.getFileType() instanceof DomSupportEnabled)) -->Line_13 $$ return null[ CD ]
Line_18 $$ final DomFileDescription<T> description = findFileDescription(rootTagName, sb)-->Line_33 $$ final XmlName xmlName = DomImplUtil.createXmlName(description.getRootTagName(), rootElementClass, null)[ FD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_21 $$ sb.append("last " + oldValue + "\n")[ FD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_47 $$ DomFileElementImpl<T> result = new DomFileElementImpl<T>(myXmlFile, rootElementClass, rootTagName1, myDomManager, description, stub)[ CD ]
Line_18 $$ final DomFileDescription<T> description = findFileDescription(rootTagName, sb)-->Line_29 $$ if (description == null) [ FD ]
Line_51 $$ if (fireEvents) -->Line_52 $$ events.add(new DomEvent(result, true))[ CD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_54 $$ return result[ CD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_48 $$ if (sb != null) [ CD ]
Line_20 $$ if (sb != null) -->Line_21 $$ sb.append("last " + oldValue + "\n")[ CD ]
Line_19 $$ final DomFileElementImpl oldValue = getLastValue()-->Line_24 $$ if (oldValue != null) [ FD ]
Line_33 $$ final XmlName xmlName = DomImplUtil.createXmlName(description.getRootTagName(), rootElementClass, null)-->Line_35 $$ final EvaluatedXmlNameImpl rootTagName1 = EvaluatedXmlNameImpl.createEvaluatedXmlName(xmlName, xmlName.getNamespaceKey(), false)[ FD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_18 $$ final DomFileDescription<T> description = findFileDescription(rootTagName, sb)[ FD ]
Line_38 $$ if (description.hasStubs() && file instanceof VirtualFileWithId && !isFileParsed()) -->Line_40 $$ if (!XmlUtil.isStubBuilding()) [ CD ]
Line_40 $$ if (!XmlUtil.isStubBuilding()) -->Line_41 $$ ObjectStubTree stubTree = StubTreeLoader.getInstance().readOrBuild(myXmlFile.getProject(), file, myXmlFile)[ CD ]
Line_38 $$ if (description.hasStubs() && file instanceof VirtualFileWithId && !isFileParsed()) -->Line_39 $$ ApplicationManager.getApplication().assertReadAccessAllowed()[ CD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_3 $$ if (sb != null) [ FD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_20 $$ if (sb != null) [ CD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_15 $$ if (sb != null) [ CD ]
Line_2 $$ private DomFileElementImpl<T> _computeFileElement(final boolean fireEvents, @NotNull final XmlFileHeader rootTagName, @Nullable StringBuilder sb) -->Line_49 $$ sb.append("success " + result + "\n")[ FD ]
Line_29 $$ if (description == null) -->Line_30 $$ return null[ CD ]
