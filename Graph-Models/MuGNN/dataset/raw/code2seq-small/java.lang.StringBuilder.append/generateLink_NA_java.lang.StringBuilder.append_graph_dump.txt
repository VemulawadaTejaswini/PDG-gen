Line_2 $$ private static int generateLink(StringBuilder buffer, String refText, String label, @NotNull PsiElement context, boolean plainLink) -->Line_11 $$ buffer.append("<font color=red>")[ FD ]
Line_10 $$ if (isBrokenLink) -->Line_13 $$ buffer.append("</font>")[ CD ]
Line_5 $$ label = JavaDocUtil.getLabelText(manager.getProject(), manager, refText, context)-->Line_12 $$ buffer.append(label)[ FD ]
Line_3 $$ if (label == null) -->Line_5 $$ label = JavaDocUtil.getLabelText(manager.getProject(), manager, refText, context)[ CD ]
Line_10 $$ if (isBrokenLink) -->Line_11 $$ buffer.append("<font color=red>")[ CD ]
Line_2 $$ private static int generateLink(StringBuilder buffer, String refText, String label, @NotNull PsiElement context, boolean plainLink) -->Line_5 $$ label = JavaDocUtil.getLabelText(manager.getProject(), manager, refText, context)[ FD ]
Line_2 $$ private static int generateLink(StringBuilder buffer, String refText, String label, @NotNull PsiElement context, boolean plainLink) -->Line_16 $$ generateLink(buffer, target, label, plainLink)[ FD ]
Line_2 $$ private static int generateLink(StringBuilder buffer, String refText, String label, @NotNull PsiElement context, boolean plainLink) -->Line_4 $$ final PsiManager manager = context.getManager()[ FD ]
Line_2 $$ private static int generateLink(StringBuilder buffer, String refText, String label, @NotNull PsiElement context, boolean plainLink) -->Line_3 $$ if (label == null) [ FD ]
Line_5 $$ label = JavaDocUtil.getLabelText(manager.getProject(), manager, refText, context)-->Line_14 $$ return StringUtil.stripHtml(label, true).length()[ FD ]
Line_2 $$ private static int generateLink(StringBuilder buffer, String refText, String label, @NotNull PsiElement context, boolean plainLink) -->Line_8 $$ final PsiElement target = JavaDocUtil.findReferenceTarget(context.getManager(), refText, context)[ CD ]
Line_2 $$ private static int generateLink(StringBuilder buffer, String refText, String label, @NotNull PsiElement context, boolean plainLink) -->Line_3 $$ if (label == null) [ CD ]
Line_5 $$ label = JavaDocUtil.getLabelText(manager.getProject(), manager, refText, context)-->Line_16 $$ generateLink(buffer, target, label, plainLink)[ FD ]
Line_4 $$ final PsiManager manager = context.getManager()-->Line_5 $$ label = JavaDocUtil.getLabelText(manager.getProject(), manager, refText, context)[ FD ]
Line_2 $$ private static int generateLink(StringBuilder buffer, String refText, String label, @NotNull PsiElement context, boolean plainLink) -->Line_17 $$ return StringUtil.stripHtml(label, true).length()[ FD ]
Line_2 $$ private static int generateLink(StringBuilder buffer, String refText, String label, @NotNull PsiElement context, boolean plainLink) -->Line_12 $$ buffer.append(label)[ FD ]
Line_10 $$ if (isBrokenLink) -->Line_14 $$ return StringUtil.stripHtml(label, true).length()[ CD ]
Line_2 $$ private static int generateLink(StringBuilder buffer, String refText, String label, @NotNull PsiElement context, boolean plainLink) -->Line_16 $$ generateLink(buffer, target, label, plainLink)[ CD ]
Line_8 $$ final PsiElement target = JavaDocUtil.findReferenceTarget(context.getManager(), refText, context)-->Line_16 $$ generateLink(buffer, target, label, plainLink)[ FD ]
Line_2 $$ private static int generateLink(StringBuilder buffer, String refText, String label, @NotNull PsiElement context, boolean plainLink) -->Line_13 $$ buffer.append("</font>")[ FD ]
Line_2 $$ private static int generateLink(StringBuilder buffer, String refText, String label, @NotNull PsiElement context, boolean plainLink) -->Line_8 $$ final PsiElement target = JavaDocUtil.findReferenceTarget(context.getManager(), refText, context)[ FD ]
Line_2 $$ private static int generateLink(StringBuilder buffer, String refText, String label, @NotNull PsiElement context, boolean plainLink) -->Line_17 $$ return StringUtil.stripHtml(label, true).length()[ CD ]
Line_5 $$ label = JavaDocUtil.getLabelText(manager.getProject(), manager, refText, context)-->Line_17 $$ return StringUtil.stripHtml(label, true).length()[ FD ]
Line_2 $$ private static int generateLink(StringBuilder buffer, String refText, String label, @NotNull PsiElement context, boolean plainLink) -->Line_7 $$ LOG.assertTrue(refText != null, "refText appears to be null.")[ CD ]
Line_10 $$ if (isBrokenLink) -->Line_12 $$ buffer.append(label)[ CD ]
Line_2 $$ private static int generateLink(StringBuilder buffer, String refText, String label, @NotNull PsiElement context, boolean plainLink) -->Line_14 $$ return StringUtil.stripHtml(label, true).length()[ FD ]
Line_3 $$ if (label == null) -->Line_4 $$ final PsiManager manager = context.getManager()[ CD ]
Line_2 $$ private static int generateLink(StringBuilder buffer, String refText, String label, @NotNull PsiElement context, boolean plainLink) -->Line_9 $$ boolean isBrokenLink = target == null[ CD ]
Line_2 $$ private static int generateLink(StringBuilder buffer, String refText, String label, @NotNull PsiElement context, boolean plainLink) -->Line_10 $$ if (isBrokenLink) [ CD ]
