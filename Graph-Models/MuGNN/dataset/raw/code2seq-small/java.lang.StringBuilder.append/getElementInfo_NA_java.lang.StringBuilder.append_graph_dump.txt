Line_2 $$ public String getElementInfo(@NotNull final PsiElement e) -->Line_5 $$ sb.append(tag.getName())[ CD ]
Line_2 $$ public String getElementInfo(@NotNull final PsiElement e) -->Line_20 $$ return sb.toString()[ CD ]
Line_3 $$ final XmlTag tag = (XmlTag) e-->Line_12 $$ final String class_value = tag.getAttributeValue(HtmlUtil.CLASS_ATTRIBUTE_NAME)[ FD ]
Line_13 $$ if (null != class_value) -->Line_14 $$ final StringTokenizer tokenizer = new StringTokenizer(class_value, " ")[ CD ]
Line_4 $$ final StringBuilder sb = new StringBuilder()-->Line_20 $$ return sb.toString()[ FD ]
Line_8 $$ final String id_value = tag.getAttributeValue(HtmlUtil.ID_ATTRIBUTE_NAME)-->Line_10 $$ sb.append("#").append(id_value)[ FD ]
Line_14 $$ final StringTokenizer tokenizer = new StringTokenizer(class_value, " ")-->Line_16 $$ sb.append(".").append(tokenizer.nextToken())[ FD ]
Line_12 $$ final String class_value = tag.getAttributeValue(HtmlUtil.CLASS_ATTRIBUTE_NAME)-->Line_13 $$ if (null != class_value) [ FD ]
Line_3 $$ final XmlTag tag = (XmlTag) e-->Line_5 $$ sb.append(tag.getName())[ FD ]
Line_8 $$ final String id_value = tag.getAttributeValue(HtmlUtil.ID_ATTRIBUTE_NAME)-->Line_9 $$ if (null != id_value) [ FD ]
Line_4 $$ final StringBuilder sb = new StringBuilder()-->Line_10 $$ sb.append("#").append(id_value)[ FD ]
Line_2 $$ public String getElementInfo(@NotNull final PsiElement e) -->Line_6 $$ final boolean addHtmlInfo = e.getContainingFile().getLanguage() != XMLLanguage.INSTANCE[ FD ]
Line_2 $$ public String getElementInfo(@NotNull final PsiElement e) -->Line_3 $$ final XmlTag tag = (XmlTag) e[ CD ]
Line_7 $$ if (addHtmlInfo) -->Line_9 $$ if (null != id_value) [ CD ]
Line_15 $$ while (tokenizer.hasMoreTokens()) -->Line_16 $$ sb.append(".").append(tokenizer.nextToken())[ CD ]
Line_13 $$ if (null != class_value) -->Line_15 $$ while (tokenizer.hasMoreTokens()) [ CD ]
Line_2 $$ public String getElementInfo(@NotNull final PsiElement e) -->Line_4 $$ final StringBuilder sb = new StringBuilder()[ CD ]
Line_14 $$ final StringTokenizer tokenizer = new StringTokenizer(class_value, " ")-->Line_15 $$ while (tokenizer.hasMoreTokens()) [ FD ]
Line_4 $$ final StringBuilder sb = new StringBuilder()-->Line_5 $$ sb.append(tag.getName())[ FD ]
Line_3 $$ final XmlTag tag = (XmlTag) e-->Line_8 $$ final String id_value = tag.getAttributeValue(HtmlUtil.ID_ATTRIBUTE_NAME)[ FD ]
Line_2 $$ public String getElementInfo(@NotNull final PsiElement e) -->Line_6 $$ final boolean addHtmlInfo = e.getContainingFile().getLanguage() != XMLLanguage.INSTANCE[ CD ]
Line_7 $$ if (addHtmlInfo) -->Line_8 $$ final String id_value = tag.getAttributeValue(HtmlUtil.ID_ATTRIBUTE_NAME)[ CD ]
Line_9 $$ if (null != id_value) -->Line_10 $$ sb.append("#").append(id_value)[ CD ]
Line_7 $$ if (addHtmlInfo) -->Line_12 $$ final String class_value = tag.getAttributeValue(HtmlUtil.CLASS_ATTRIBUTE_NAME)[ CD ]
Line_4 $$ final StringBuilder sb = new StringBuilder()-->Line_16 $$ sb.append(".").append(tokenizer.nextToken())[ FD ]
Line_2 $$ public String getElementInfo(@NotNull final PsiElement e) -->Line_7 $$ if (addHtmlInfo) [ CD ]
Line_7 $$ if (addHtmlInfo) -->Line_13 $$ if (null != class_value) [ CD ]
