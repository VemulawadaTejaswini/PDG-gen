Line_2 $$ private String fillQualifier(StringTokenizer st) -->Line_3 $$ StringBuilder buf = new StringBuilder()[ CD ]
Line_6 $$ if (QUALIFIER.matcher(token).matches()) -->Line_7 $$ buf.append(token)[ CD ]
Line_4 $$ while (st.hasMoreTokens()) -->Line_5 $$ String token = st.nextToken()[ CD ]
Line_5 $$ String token = st.nextToken()-->Line_6 $$ if (QUALIFIER.matcher(token).matches()) [ FD ]
Line_2 $$ private String fillQualifier(StringTokenizer st) -->Line_5 $$ String token = st.nextToken()[ FD ]
Line_2 $$ private String fillQualifier(StringTokenizer st) -->Line_12 $$ return buf.toString()[ CD ]
Line_5 $$ String token = st.nextToken()-->Line_7 $$ buf.append(token)[ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_12 $$ return buf.toString()[ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_9 $$ buf.append("_")[ FD ]
Line_6 $$ if (QUALIFIER.matcher(token).matches()) -->Line_9 $$ buf.append("_")[ CD ]
Line_2 $$ private String fillQualifier(StringTokenizer st) -->Line_4 $$ while (st.hasMoreTokens()) [ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_7 $$ buf.append(token)[ FD ]
Line_2 $$ private String fillQualifier(StringTokenizer st) -->Line_4 $$ while (st.hasMoreTokens()) [ CD ]
Line_4 $$ while (st.hasMoreTokens()) -->Line_6 $$ if (QUALIFIER.matcher(token).matches()) [ CD ]
