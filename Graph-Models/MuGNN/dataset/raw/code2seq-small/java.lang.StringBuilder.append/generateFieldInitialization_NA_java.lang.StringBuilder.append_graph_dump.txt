Line_5 $$ String paramName = parameters[i].getName()-->Line_11 $$ buffer.append(paramName)[ FD ]
Line_6 $$ if (existingNames.contains(fieldName)) -->Line_7 $$ buffer.append("this.")[ CD ]
Line_3 $$ for (int i = 0, length = fields.length; i < length; i++) -->Line_5 $$ String paramName = parameters[i].getName()[ CD ]
Line_3 $$ for (int i = 0, length = fields.length; i < length; i++) -->Line_6 $$ if (existingNames.contains(fieldName)) [ CD ]
Line_2 $$ public void generateFieldInitialization(@NotNull StringBuilder buffer, @NotNull PsiField[] fields, @NotNull PsiParameter[] parameters, @NotNull Collection<String> existingNames) -->Line_10 $$ buffer.append("=")[ FD ]
Line_3 $$ for (int i = 0, length = fields.length; i < length; i++) -->Line_10 $$ buffer.append("=")[ CD ]
Line_2 $$ public void generateFieldInitialization(@NotNull StringBuilder buffer, @NotNull PsiField[] fields, @NotNull PsiParameter[] parameters, @NotNull Collection<String> existingNames) -->Line_13 $$ buffer.append("\n")[ FD ]
Line_3 $$ for (int i = 0, length = fields.length; i < length; i++) -->Line_4 $$ String fieldName = fields[i].getName()[ CD ]
Line_3 $$ for (int i = 0, length = fields.length; i < length; i++) -->Line_11 $$ buffer.append(paramName)[ CD ]
Line_3 $$ for (int i = 0, length = fields.length; i < length; i++) -->Line_13 $$ buffer.append("\n")[ CD ]
Line_3 $$ for (int i = 0, length = fields.length; i < length; i++) -->Line_9 $$ buffer.append(fieldName)[ CD ]
Line_4 $$ String fieldName = fields[i].getName()-->Line_6 $$ if (existingNames.contains(fieldName)) [ FD ]
Line_2 $$ public void generateFieldInitialization(@NotNull StringBuilder buffer, @NotNull PsiField[] fields, @NotNull PsiParameter[] parameters, @NotNull Collection<String> existingNames) -->Line_7 $$ buffer.append("this.")[ FD ]
Line_4 $$ String fieldName = fields[i].getName()-->Line_9 $$ buffer.append(fieldName)[ FD ]
Line_3 $$ for (int i = 0, length = fields.length; i < length; i++) -->Line_12 $$ appendSemicolon(buffer)[ CD ]
Line_2 $$ public void generateFieldInitialization(@NotNull StringBuilder buffer, @NotNull PsiField[] fields, @NotNull PsiParameter[] parameters, @NotNull Collection<String> existingNames) -->Line_12 $$ appendSemicolon(buffer)[ FD ]
Line_2 $$ public void generateFieldInitialization(@NotNull StringBuilder buffer, @NotNull PsiField[] fields, @NotNull PsiParameter[] parameters, @NotNull Collection<String> existingNames) -->Line_11 $$ buffer.append(paramName)[ FD ]
Line_2 $$ public void generateFieldInitialization(@NotNull StringBuilder buffer, @NotNull PsiField[] fields, @NotNull PsiParameter[] parameters, @NotNull Collection<String> existingNames) -->Line_9 $$ buffer.append(fieldName)[ FD ]
Line_2 $$ public void generateFieldInitialization(@NotNull StringBuilder buffer, @NotNull PsiField[] fields, @NotNull PsiParameter[] parameters, @NotNull Collection<String> existingNames) -->Line_3 $$ for (int i = 0, length = fields.length; i < length; i++) [ CD ]
Line_2 $$ public void generateFieldInitialization(@NotNull StringBuilder buffer, @NotNull PsiField[] fields, @NotNull PsiParameter[] parameters, @NotNull Collection<String> existingNames) -->Line_6 $$ if (existingNames.contains(fieldName)) [ FD ]
