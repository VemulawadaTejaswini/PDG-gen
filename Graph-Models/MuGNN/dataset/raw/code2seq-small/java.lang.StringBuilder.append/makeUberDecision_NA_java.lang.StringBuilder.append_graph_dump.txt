Line_2 $$ private void makeUberDecision(long dataInputLength) -->Line_4 $$ int sysMaxReduces = conf.getInt(MRJobConfig.JOB_UBERTASK_MAXREDUCES, 1)[ CD ]
Line_2 $$ private void makeUberDecision(long dataInputLength) -->Line_14 $$ long requiredReduceMB = conf.getLong(MRJobConfig.REDUCE_MEMORY_MB, 0)[ CD ]
Line_2 $$ private void makeUberDecision(long dataInputLength) -->Line_8 $$ long sysCPUSizeForUberSlot = conf.getInt(MRJobConfig.MR_AM_CPU_VCORES, MRJobConfig.DEFAULT_MR_AM_CPU_VCORES)[ CD ]
Line_13 $$ long requiredMapMB = conf.getLong(MRJobConfig.MAP_MEMORY_MB, 0)-->Line_15 $$ long requiredMB = Math.max(requiredMapMB, requiredReduceMB)[ FD ]
Line_16 $$ int requiredMapCores = conf.getInt(MRJobConfig.MAP_CPU_VCORES, MRJobConfig.DEFAULT_MAP_CPU_VCORES)-->Line_18 $$ int requiredCores = Math.max(requiredMapCores, requiredReduceCores)[ FD ]
Line_17 $$ int requiredReduceCores = conf.getInt(MRJobConfig.REDUCE_CPU_VCORES, MRJobConfig.DEFAULT_REDUCE_CPU_VCORES)-->Line_18 $$ int requiredCores = Math.max(requiredMapCores, requiredReduceCores)[ FD ]
Line_11 $$ boolean smallNumReduceTasks = (numReduceTasks <= sysMaxReduces)-->Line_41 $$ if (!smallNumReduceTasks)[ FD ]
Line_35 $$ StringBuilder msg = new StringBuilder()-->Line_46 $$ msg.append(" too much RAM;")[ FD ]
Line_35 $$ StringBuilder msg = new StringBuilder()-->Line_49 $$ LOG.info(msg.toString())[ FD ]
Line_2 $$ private void makeUberDecision(long dataInputLength) -->Line_17 $$ int requiredReduceCores = conf.getInt(MRJobConfig.REDUCE_CPU_VCORES, MRJobConfig.DEFAULT_REDUCE_CPU_VCORES)[ CD ]
Line_2 $$ private void makeUberDecision(long dataInputLength) -->Line_15 $$ long requiredMB = Math.max(requiredMapMB, requiredReduceMB)[ CD ]
Line_2 $$ private void makeUberDecision(long dataInputLength) -->Line_25 $$ boolean notChainJob = !isChainJob(conf)[ CD ]
Line_35 $$ StringBuilder msg = new StringBuilder()-->Line_36 $$ msg.append("Not uberizing ").append(jobId).append(" because:")[ FD ]
Line_27 $$ if (isUber) -->Line_29 $$ conf.setFloat(MRJobConfig.COMPLETED_MAPS_FOR_REDUCE_SLOWSTART, 1.0f)[ CD ]
Line_37 $$ if (!uberEnabled)-->Line_38 $$ msg.append(" not enabled;")[ CD ]
Line_2 $$ private void makeUberDecision(long dataInputLength) -->Line_27 $$ if (isUber) [ CD ]
Line_45 $$ if (!smallMemory)-->Line_46 $$ msg.append(" too much RAM;")[ CD ]
Line_35 $$ StringBuilder msg = new StringBuilder()-->Line_48 $$ msg.append(" chainjob;")[ FD ]
Line_18 $$ int requiredCores = Math.max(requiredMapCores, requiredReduceCores)-->Line_21 $$ requiredCores = requiredMapCores[ FD ]
Line_27 $$ if (isUber) -->Line_33 $$ conf.setBoolean(MRJobConfig.REDUCE_SPECULATIVE, false)[ CD ]
Line_27 $$ if (isUber) -->Line_43 $$ if (!smallInput)[ CD ]
Line_27 $$ if (isUber) -->Line_28 $$ LOG.info("Uberizing job " + jobId + ": " + numMapTasks + "m+" + numReduceTasks + "r tasks (" + dataInputLength + " input bytes) will run sequentially on single node.")[ CD ]
Line_2 $$ private void makeUberDecision(long dataInputLength) -->Line_3 $$ int sysMaxMaps = conf.getInt(MRJobConfig.JOB_UBERTASK_MAXMAPS, 9)[ CD ]
Line_27 $$ if (isUber) -->Line_35 $$ StringBuilder msg = new StringBuilder()[ CD ]
Line_2 $$ private void makeUberDecision(long dataInputLength) -->Line_13 $$ long requiredMapMB = conf.getLong(MRJobConfig.MAP_MEMORY_MB, 0)[ CD ]
Line_35 $$ StringBuilder msg = new StringBuilder()-->Line_40 $$ msg.append(" too many maps;")[ FD ]
Line_14 $$ long requiredReduceMB = conf.getLong(MRJobConfig.REDUCE_MEMORY_MB, 0)-->Line_15 $$ long requiredMB = Math.max(requiredMapMB, requiredReduceMB)[ FD ]
Line_16 $$ int requiredMapCores = conf.getInt(MRJobConfig.MAP_CPU_VCORES, MRJobConfig.DEFAULT_MAP_CPU_VCORES)-->Line_21 $$ requiredCores = requiredMapCores[ FD ]
Line_2 $$ private void makeUberDecision(long dataInputLength) -->Line_16 $$ int requiredMapCores = conf.getInt(MRJobConfig.MAP_CPU_VCORES, MRJobConfig.DEFAULT_MAP_CPU_VCORES)[ CD ]
Line_43 $$ if (!smallInput)-->Line_44 $$ msg.append(" too much input;")[ CD ]
Line_2 $$ private void makeUberDecision(long dataInputLength) -->Line_18 $$ int requiredCores = Math.max(requiredMapCores, requiredReduceCores)[ CD ]
Line_2 $$ private void makeUberDecision(long dataInputLength) -->Line_24 $$ boolean smallCpu = requiredCores <= sysCPUSizeForUberSlot[ CD ]
Line_27 $$ if (isUber) -->Line_30 $$ conf.setInt(MRJobConfig.MAP_MAX_ATTEMPTS, 1)[ CD ]
Line_35 $$ StringBuilder msg = new StringBuilder()-->Line_42 $$ msg.append(" too many reduces;")[ FD ]
Line_23 $$ boolean smallMemory = (requiredMB <= sysMemSizeForUberSlot) || (sysMemSizeForUberSlot == JobConf.DISABLED_MEMORY_LIMIT)-->Line_45 $$ if (!smallMemory)[ FD ]
Line_2 $$ private void makeUberDecision(long dataInputLength) -->Line_10 $$ boolean smallNumMapTasks = (numMapTasks <= sysMaxMaps)[ CD ]
Line_9 $$ boolean uberEnabled = conf.getBoolean(MRJobConfig.JOB_UBERTASK_ENABLE, false)-->Line_37 $$ if (!uberEnabled)[ FD ]
Line_47 $$ if (!notChainJob)-->Line_48 $$ msg.append(" chainjob;")[ CD ]
Line_27 $$ if (isUber) -->Line_37 $$ if (!uberEnabled)[ CD ]
Line_27 $$ if (isUber) -->Line_47 $$ if (!notChainJob)[ CD ]
Line_2 $$ private void makeUberDecision(long dataInputLength) -->Line_23 $$ boolean smallMemory = (requiredMB <= sysMemSizeForUberSlot) || (sysMemSizeForUberSlot == JobConf.DISABLED_MEMORY_LIMIT)[ CD ]
Line_27 $$ if (isUber) -->Line_41 $$ if (!smallNumReduceTasks)[ CD ]
Line_19 $$ if (numReduceTasks == 0) -->Line_21 $$ requiredCores = requiredMapCores[ CD ]
Line_27 $$ if (isUber) -->Line_32 $$ conf.setBoolean(MRJobConfig.MAP_SPECULATIVE, false)[ CD ]
Line_15 $$ long requiredMB = Math.max(requiredMapMB, requiredReduceMB)-->Line_20 $$ requiredMB = requiredMapMB[ FD ]
Line_13 $$ long requiredMapMB = conf.getLong(MRJobConfig.MAP_MEMORY_MB, 0)-->Line_20 $$ requiredMB = requiredMapMB[ FD ]
Line_12 $$ boolean smallInput = (dataInputLength <= sysMaxBytes)-->Line_43 $$ if (!smallInput)[ FD ]
Line_10 $$ boolean smallNumMapTasks = (numMapTasks <= sysMaxMaps)-->Line_39 $$ if (!smallNumMapTasks)[ FD ]
Line_35 $$ StringBuilder msg = new StringBuilder()-->Line_38 $$ msg.append(" not enabled;")[ FD ]
Line_35 $$ StringBuilder msg = new StringBuilder()-->Line_44 $$ msg.append(" too much input;")[ FD ]
Line_27 $$ if (isUber) -->Line_45 $$ if (!smallMemory)[ CD ]
Line_2 $$ private void makeUberDecision(long dataInputLength) -->Line_9 $$ boolean uberEnabled = conf.getBoolean(MRJobConfig.JOB_UBERTASK_ENABLE, false)[ CD ]
Line_25 $$ boolean notChainJob = !isChainJob(conf)-->Line_47 $$ if (!notChainJob)[ FD ]
Line_2 $$ private void makeUberDecision(long dataInputLength) -->Line_5 $$ long sysMaxBytes = conf.getLong(MRJobConfig.JOB_UBERTASK_MAXBYTES, fs.getDefaultBlockSize(this.remoteJobSubmitDir))[ CD ]
Line_2 $$ private void makeUberDecision(long dataInputLength) -->Line_7 $$ long sysMemSizeForUberSlot = conf.getInt(MRJobConfig.MR_AM_VMEM_MB, MRJobConfig.DEFAULT_MR_AM_VMEM_MB)[ CD ]
Line_2 $$ private void makeUberDecision(long dataInputLength) -->Line_11 $$ boolean smallNumReduceTasks = (numReduceTasks <= sysMaxReduces)[ CD ]
Line_27 $$ if (isUber) -->Line_39 $$ if (!smallNumMapTasks)[ CD ]
Line_41 $$ if (!smallNumReduceTasks)-->Line_42 $$ msg.append(" too many reduces;")[ CD ]
Line_19 $$ if (numReduceTasks == 0) -->Line_20 $$ requiredMB = requiredMapMB[ CD ]
Line_2 $$ private void makeUberDecision(long dataInputLength) -->Line_19 $$ if (numReduceTasks == 0) [ CD ]
Line_39 $$ if (!smallNumMapTasks)-->Line_40 $$ msg.append(" too many maps;")[ CD ]
Line_27 $$ if (isUber) -->Line_49 $$ LOG.info(msg.toString())[ CD ]
Line_27 $$ if (isUber) -->Line_31 $$ conf.setInt(MRJobConfig.REDUCE_MAX_ATTEMPTS, 1)[ CD ]
Line_2 $$ private void makeUberDecision(long dataInputLength) -->Line_12 $$ boolean smallInput = (dataInputLength <= sysMaxBytes)[ CD ]
Line_27 $$ if (isUber) -->Line_36 $$ msg.append("Not uberizing ").append(jobId).append(" because:")[ CD ]
