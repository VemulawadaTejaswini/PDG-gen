Line_2 $$ private static void appendElementText(@NotNull PsiElement element, @NotNull PsiElement elementToReplace, @Nullable PsiExpression replacementExpression, @NotNull StringBuilder out) -->Line_9 $$ if (children.length == 0) [ CD ]
Line_20 $$ for (PsiElement child : children) -->Line_21 $$ appendElementText(child, elementToReplace, replacementExpression, out)[ FD ]
Line_4 $$ final String replacementText = (replacementExpression == null) ? "" : replacementExpression.getText()-->Line_5 $$ out.append(replacementText)[ FD ]
Line_2 $$ private static void appendElementText(@NotNull PsiElement element, @NotNull PsiElement elementToReplace, @Nullable PsiExpression replacementExpression, @NotNull StringBuilder out) -->Line_21 $$ appendElementText(child, elementToReplace, replacementExpression, out)[ FD ]
Line_2 $$ private static void appendElementText(@NotNull PsiElement element, @NotNull PsiElement elementToReplace, @Nullable PsiExpression replacementExpression, @NotNull StringBuilder out) -->Line_11 $$ if (element instanceof PsiComment) [ FD ]
Line_2 $$ private static void appendElementText(@NotNull PsiElement element, @NotNull PsiElement elementToReplace, @Nullable PsiExpression replacementExpression, @NotNull StringBuilder out) -->Line_3 $$ if (element.equals(elementToReplace)) [ CD ]
Line_9 $$ if (children.length == 0) -->Line_10 $$ out.append(element.getText())[ CD ]
Line_13 $$ final IElementType tokenType = comment.getTokenType()-->Line_14 $$ if (tokenType == JavaTokenType.END_OF_LINE_COMMENT) [ FD ]
Line_2 $$ private static void appendElementText(@NotNull PsiElement element, @NotNull PsiElement elementToReplace, @Nullable PsiExpression replacementExpression, @NotNull StringBuilder out) -->Line_15 $$ out.append('\n')[ FD ]
Line_12 $$ final PsiComment comment = (PsiComment) element-->Line_13 $$ final IElementType tokenType = comment.getTokenType()[ FD ]
Line_11 $$ if (element instanceof PsiComment) -->Line_13 $$ final IElementType tokenType = comment.getTokenType()[ CD ]
Line_2 $$ private static void appendElementText(@NotNull PsiElement element, @NotNull PsiElement elementToReplace, @Nullable PsiExpression replacementExpression, @NotNull StringBuilder out) -->Line_10 $$ out.append(element.getText())[ FD ]
Line_9 $$ if (children.length == 0) -->Line_18 $$ return[ CD ]
Line_2 $$ private static void appendElementText(@NotNull PsiElement element, @NotNull PsiElement elementToReplace, @Nullable PsiExpression replacementExpression, @NotNull StringBuilder out) -->Line_5 $$ out.append(replacementText)[ FD ]
Line_3 $$ if (element.equals(elementToReplace)) -->Line_4 $$ final String replacementText = (replacementExpression == null) ? "" : replacementExpression.getText()[ CD ]
Line_3 $$ if (element.equals(elementToReplace)) -->Line_6 $$ return[ CD ]
Line_2 $$ private static void appendElementText(@NotNull PsiElement element, @NotNull PsiElement elementToReplace, @Nullable PsiExpression replacementExpression, @NotNull StringBuilder out) -->Line_3 $$ if (element.equals(elementToReplace)) [ FD ]
Line_2 $$ private static void appendElementText(@NotNull PsiElement element, @NotNull PsiElement elementToReplace, @Nullable PsiExpression replacementExpression, @NotNull StringBuilder out) -->Line_8 $$ final PsiElement[] children = element.getChildren()[ CD ]
Line_11 $$ if (element instanceof PsiComment) -->Line_12 $$ final PsiComment comment = (PsiComment) element[ CD ]
Line_2 $$ private static void appendElementText(@NotNull PsiElement element, @NotNull PsiElement elementToReplace, @Nullable PsiExpression replacementExpression, @NotNull StringBuilder out) -->Line_4 $$ final String replacementText = (replacementExpression == null) ? "" : replacementExpression.getText()[ FD ]
Line_14 $$ if (tokenType == JavaTokenType.END_OF_LINE_COMMENT) -->Line_15 $$ out.append('\n')[ CD ]
Line_9 $$ if (children.length == 0) -->Line_11 $$ if (element instanceof PsiComment) [ CD ]
Line_2 $$ private static void appendElementText(@NotNull PsiElement element, @NotNull PsiElement elementToReplace, @Nullable PsiExpression replacementExpression, @NotNull StringBuilder out) -->Line_8 $$ final PsiElement[] children = element.getChildren()[ FD ]
Line_3 $$ if (element.equals(elementToReplace)) -->Line_5 $$ out.append(replacementText)[ CD ]
Line_11 $$ if (element instanceof PsiComment) -->Line_14 $$ if (tokenType == JavaTokenType.END_OF_LINE_COMMENT) [ CD ]
