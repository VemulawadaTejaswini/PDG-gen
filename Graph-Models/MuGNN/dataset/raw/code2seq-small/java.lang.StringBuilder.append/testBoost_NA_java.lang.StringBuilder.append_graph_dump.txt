Line_21 $$ TermQuery query = new TermQuery(new Term("value", "value"))-->Line_22 $$ TopDocs topDocs = searcher.search(query, 100)[ FD ]
Line_6 $$ StringBuilder value = new StringBuilder().append("value")-->Line_14 $$ textField = new TextField("value", value.toString(), Field.Store.YES)[ FD ]
Line_20 $$ IndexSearcher searcher = new IndexSearcher(reader)-->Line_25 $$ Document doc = searcher.doc(topDocs.scoreDocs[i].doc)[ FD ]
Line_5 $$ for (int i = 0; i < 100; i++) -->Line_7 $$ for (int j = 0; j < i; j++) [ FD ]
Line_5 $$ for (int i = 0; i < 100; i++) -->Line_15 $$ textField.setBoost(i)[ CD ]
Line_5 $$ for (int i = 0; i < 100; i++) -->Line_16 $$ document.add(textField)[ CD ]
Line_5 $$ for (int i = 0; i < 100; i++) -->Line_12 $$ textField.setBoost(i)[ FD ]
Line_25 $$ Document doc = searcher.doc(topDocs.scoreDocs[i].doc)-->Line_26 $$ assertThat(doc.get("_id"), equalTo(Integer.toString(100 - i - 1)))[ FD ]
Line_5 $$ for (int i = 0; i < 100; i++) -->Line_7 $$ for (int j = 0; j < i; j++) [ CD ]
Line_5 $$ for (int i = 0; i < 100; i++) -->Line_13 $$ document.add(textField)[ CD ]
Line_2 $$ public void testBoost() throws Exception -->Line_22 $$ TopDocs topDocs = searcher.search(query, 100)[ CD ]
Line_2 $$ public void testBoost() throws Exception -->Line_24 $$ for (int i = 0; i < topDocs.scoreDocs.length; i++) [ CD ]
Line_5 $$ for (int i = 0; i < 100; i++) -->Line_15 $$ textField.setBoost(i)[ FD ]
Line_2 $$ public void testBoost() throws Exception -->Line_20 $$ IndexSearcher searcher = new IndexSearcher(reader)[ CD ]
Line_2 $$ public void testBoost() throws Exception -->Line_23 $$ assertThat(100, equalTo(topDocs.totalHits))[ CD ]
Line_2 $$ public void testBoost() throws Exception -->Line_21 $$ TermQuery query = new TermQuery(new Term("value", "value"))[ CD ]
Line_24 $$ for (int i = 0; i < topDocs.scoreDocs.length; i++) -->Line_26 $$ assertThat(doc.get("_id"), equalTo(Integer.toString(100 - i - 1)))[ CD ]
Line_6 $$ StringBuilder value = new StringBuilder().append("value")-->Line_8 $$ value.append(" ").append("value")[ FD ]
Line_5 $$ for (int i = 0; i < 100; i++) -->Line_17 $$ indexWriter.addDocument(document)[ CD ]
Line_2 $$ public void testBoost() throws Exception -->Line_28 $$ indexWriter.close()[ CD ]
Line_20 $$ IndexSearcher searcher = new IndexSearcher(reader)-->Line_22 $$ TopDocs topDocs = searcher.search(query, 100)[ FD ]
Line_2 $$ public void testBoost() throws Exception -->Line_19 $$ IndexReader reader = DirectoryReader.open(indexWriter, true)[ CD ]
Line_2 $$ public void testBoost() throws Exception -->Line_3 $$ Directory dir = new RAMDirectory()[ CD ]
Line_5 $$ for (int i = 0; i < 100; i++) -->Line_12 $$ textField.setBoost(i)[ CD ]
Line_5 $$ for (int i = 0; i < 100; i++) -->Line_24 $$ for (int i = 0; i < topDocs.scoreDocs.length; i++) [ FD ]
Line_4 $$ IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.STANDARD_ANALYZER))-->Line_28 $$ indexWriter.close()[ FD ]
Line_5 $$ for (int i = 0; i < 100; i++) -->Line_6 $$ StringBuilder value = new StringBuilder().append("value")[ CD ]
Line_7 $$ for (int j = 0; j < i; j++) -->Line_8 $$ value.append(" ").append("value")[ CD ]
Line_5 $$ for (int i = 0; i < 100; i++) -->Line_11 $$ TextField textField = new TextField("_id", Integer.toString(i), Field.Store.YES)[ FD ]
Line_4 $$ IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.STANDARD_ANALYZER))-->Line_19 $$ IndexReader reader = DirectoryReader.open(indexWriter, true)[ FD ]
Line_2 $$ public void testBoost() throws Exception -->Line_4 $$ IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.STANDARD_ANALYZER))[ CD ]
Line_2 $$ public void testBoost() throws Exception -->Line_5 $$ for (int i = 0; i < 100; i++) [ CD ]
Line_24 $$ for (int i = 0; i < topDocs.scoreDocs.length; i++) -->Line_25 $$ Document doc = searcher.doc(topDocs.scoreDocs[i].doc)[ CD ]
Line_4 $$ IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.STANDARD_ANALYZER))-->Line_17 $$ indexWriter.addDocument(document)[ FD ]
