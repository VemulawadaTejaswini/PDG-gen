Line_4 $$ final StringBuilder builder = new StringBuilder()-->Line_9 $$ if (builder.length() > 0) [ FD ]
Line_8 $$ if (Character.isWhitespace(ch)) -->Line_14 $$ builder.append(ch)[ CD ]
Line_2 $$ public Map<String, String> map(@NotNull final PathContentPair inputData) -->Line_5 $$ final String content = inputData.content[ CD ]
Line_4 $$ final StringBuilder builder = new StringBuilder()-->Line_14 $$ builder.append(ch)[ FD ]
Line_3 $$ final Map<String, String> _map = new HashMap<String, String>()-->Line_10 $$ _map.put(builder.toString(), inputData.path)[ FD ]
Line_17 $$ if (builder.length() > 0) -->Line_18 $$ _map.put(builder.toString(), inputData.path)[ CD ]
Line_6 $$ for (int idx = 0; idx < content.length(); idx++) -->Line_8 $$ if (Character.isWhitespace(ch)) [ CD ]
Line_5 $$ final String content = inputData.content-->Line_7 $$ final char ch = content.charAt(idx)[ FD ]
Line_5 $$ final String content = inputData.content-->Line_6 $$ for (int idx = 0; idx < content.length(); idx++) [ FD ]
Line_6 $$ for (int idx = 0; idx < content.length(); idx++) -->Line_7 $$ final char ch = content.charAt(idx)[ CD ]
Line_4 $$ final StringBuilder builder = new StringBuilder()-->Line_19 $$ builder.setLength(0)[ FD ]
Line_2 $$ public Map<String, String> map(@NotNull final PathContentPair inputData) -->Line_3 $$ final Map<String, String> _map = new HashMap<String, String>()[ CD ]
Line_4 $$ final StringBuilder builder = new StringBuilder()-->Line_18 $$ _map.put(builder.toString(), inputData.path)[ FD ]
Line_17 $$ if (builder.length() > 0) -->Line_19 $$ builder.setLength(0)[ CD ]
Line_2 $$ public Map<String, String> map(@NotNull final PathContentPair inputData) -->Line_21 $$ return _map[ CD ]
Line_6 $$ for (int idx = 0; idx < content.length(); idx++) -->Line_7 $$ final char ch = content.charAt(idx)[ FD ]
Line_4 $$ final StringBuilder builder = new StringBuilder()-->Line_11 $$ builder.setLength(0)[ FD ]
Line_7 $$ final char ch = content.charAt(idx)-->Line_8 $$ if (Character.isWhitespace(ch)) [ FD ]
Line_4 $$ final StringBuilder builder = new StringBuilder()-->Line_10 $$ _map.put(builder.toString(), inputData.path)[ FD ]
Line_2 $$ public Map<String, String> map(@NotNull final PathContentPair inputData) -->Line_4 $$ final StringBuilder builder = new StringBuilder()[ CD ]
Line_2 $$ public Map<String, String> map(@NotNull final PathContentPair inputData) -->Line_6 $$ for (int idx = 0; idx < content.length(); idx++) [ CD ]
Line_2 $$ public Map<String, String> map(@NotNull final PathContentPair inputData) -->Line_17 $$ if (builder.length() > 0) [ CD ]
Line_7 $$ final char ch = content.charAt(idx)-->Line_14 $$ builder.append(ch)[ FD ]
Line_8 $$ if (Character.isWhitespace(ch)) -->Line_9 $$ if (builder.length() > 0) [ CD ]
Line_3 $$ final Map<String, String> _map = new HashMap<String, String>()-->Line_18 $$ _map.put(builder.toString(), inputData.path)[ FD ]
Line_9 $$ if (builder.length() > 0) -->Line_10 $$ _map.put(builder.toString(), inputData.path)[ CD ]
Line_9 $$ if (builder.length() > 0) -->Line_11 $$ builder.setLength(0)[ CD ]
Line_4 $$ final StringBuilder builder = new StringBuilder()-->Line_17 $$ if (builder.length() > 0) [ FD ]
