Line_2 $$ private void writeSimpleBinaryExpression(PsiElement opToken, GrExpression left, GrExpression right) -->Line_5 $$ builder.append(opToken.getText())[ FD ]
Line_2 $$ private void writeSimpleBinaryExpression(PsiElement opToken, GrExpression left, GrExpression right) -->Line_4 $$ builder.append(' ')[ CD ]
Line_2 $$ private void writeSimpleBinaryExpression(PsiElement opToken, GrExpression left, GrExpression right) -->Line_6 $$ if (right != null) [ FD ]
Line_2 $$ private void writeSimpleBinaryExpression(PsiElement opToken, GrExpression left, GrExpression right) -->Line_3 $$ left.accept(this)[ FD ]
Line_6 $$ if (right != null) -->Line_8 $$ right.accept(this)[ CD ]
Line_2 $$ private void writeSimpleBinaryExpression(PsiElement opToken, GrExpression left, GrExpression right) -->Line_6 $$ if (right != null) [ CD ]
Line_2 $$ private void writeSimpleBinaryExpression(PsiElement opToken, GrExpression left, GrExpression right) -->Line_3 $$ left.accept(this)[ CD ]
Line_6 $$ if (right != null) -->Line_7 $$ builder.append(' ')[ CD ]
Line_2 $$ private void writeSimpleBinaryExpression(PsiElement opToken, GrExpression left, GrExpression right) -->Line_5 $$ builder.append(opToken.getText())[ CD ]
Line_2 $$ private void writeSimpleBinaryExpression(PsiElement opToken, GrExpression left, GrExpression right) -->Line_8 $$ right.accept(this)[ FD ]
