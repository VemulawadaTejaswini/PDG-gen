Line_2 $$ private void testSuccessLogFormatHelper(boolean checkIP, ApplicationId appId, ApplicationAttemptId attemptId, ContainerId containerId) -->Line_14 $$ if (attemptId != null) [ FD ]
Line_17 $$ if (containerId != null) -->Line_18 $$ expLog.append("\tCONTAINERID=container_1")[ CD ]
Line_4 $$ StringBuilder expLog = new StringBuilder()-->Line_15 $$ expLog.append("\tAPPATTEMPTID=app_attempt_1")[ FD ]
Line_2 $$ private void testSuccessLogFormatHelper(boolean checkIP, ApplicationId appId, ApplicationAttemptId attemptId, ContainerId containerId) -->Line_17 $$ if (containerId != null) [ CD ]
Line_4 $$ StringBuilder expLog = new StringBuilder()-->Line_10 $$ expLog.append("OPERATION=oper\tTARGET=tgt\tRESULT=SUCCESS")[ FD ]
Line_6 $$ if (checkIP) -->Line_7 $$ InetAddress ip = Server.getRemoteIp()[ CD ]
Line_4 $$ StringBuilder expLog = new StringBuilder()-->Line_20 $$ assertEquals(expLog.toString(), sLog)[ FD ]
Line_4 $$ StringBuilder expLog = new StringBuilder()-->Line_12 $$ expLog.append("\tAPPID=app_1")[ FD ]
Line_2 $$ private void testSuccessLogFormatHelper(boolean checkIP, ApplicationId appId, ApplicationAttemptId attemptId, ContainerId containerId) -->Line_20 $$ assertEquals(expLog.toString(), sLog)[ CD ]
Line_3 $$ String sLog = RMAuditLogger.createSuccessLog(USER, OPERATION, TARGET, appId, attemptId, containerId)-->Line_20 $$ assertEquals(expLog.toString(), sLog)[ FD ]
Line_2 $$ private void testSuccessLogFormatHelper(boolean checkIP, ApplicationId appId, ApplicationAttemptId attemptId, ContainerId containerId) -->Line_4 $$ StringBuilder expLog = new StringBuilder()[ CD ]
Line_4 $$ StringBuilder expLog = new StringBuilder()-->Line_8 $$ expLog.append(Keys.IP.name() + "=" + ip.getHostAddress() + "\t")[ FD ]
Line_2 $$ private void testSuccessLogFormatHelper(boolean checkIP, ApplicationId appId, ApplicationAttemptId attemptId, ContainerId containerId) -->Line_17 $$ if (containerId != null) [ FD ]
Line_7 $$ InetAddress ip = Server.getRemoteIp()-->Line_8 $$ expLog.append(Keys.IP.name() + "=" + ip.getHostAddress() + "\t")[ FD ]
Line_2 $$ private void testSuccessLogFormatHelper(boolean checkIP, ApplicationId appId, ApplicationAttemptId attemptId, ContainerId containerId) -->Line_11 $$ if (appId != null) [ FD ]
Line_4 $$ StringBuilder expLog = new StringBuilder()-->Line_18 $$ expLog.append("\tCONTAINERID=container_1")[ FD ]
Line_6 $$ if (checkIP) -->Line_8 $$ expLog.append(Keys.IP.name() + "=" + ip.getHostAddress() + "\t")[ CD ]
Line_2 $$ private void testSuccessLogFormatHelper(boolean checkIP, ApplicationId appId, ApplicationAttemptId attemptId, ContainerId containerId) -->Line_3 $$ String sLog = RMAuditLogger.createSuccessLog(USER, OPERATION, TARGET, appId, attemptId, containerId)[ CD ]
Line_2 $$ private void testSuccessLogFormatHelper(boolean checkIP, ApplicationId appId, ApplicationAttemptId attemptId, ContainerId containerId) -->Line_10 $$ expLog.append("OPERATION=oper\tTARGET=tgt\tRESULT=SUCCESS")[ CD ]
Line_4 $$ StringBuilder expLog = new StringBuilder()-->Line_5 $$ expLog.append("USER=test\t")[ FD ]
Line_2 $$ private void testSuccessLogFormatHelper(boolean checkIP, ApplicationId appId, ApplicationAttemptId attemptId, ContainerId containerId) -->Line_14 $$ if (attemptId != null) [ CD ]
Line_2 $$ private void testSuccessLogFormatHelper(boolean checkIP, ApplicationId appId, ApplicationAttemptId attemptId, ContainerId containerId) -->Line_11 $$ if (appId != null) [ CD ]
Line_2 $$ private void testSuccessLogFormatHelper(boolean checkIP, ApplicationId appId, ApplicationAttemptId attemptId, ContainerId containerId) -->Line_3 $$ String sLog = RMAuditLogger.createSuccessLog(USER, OPERATION, TARGET, appId, attemptId, containerId)[ FD ]
Line_11 $$ if (appId != null) -->Line_12 $$ expLog.append("\tAPPID=app_1")[ CD ]
Line_14 $$ if (attemptId != null) -->Line_15 $$ expLog.append("\tAPPATTEMPTID=app_attempt_1")[ CD ]
Line_2 $$ private void testSuccessLogFormatHelper(boolean checkIP, ApplicationId appId, ApplicationAttemptId attemptId, ContainerId containerId) -->Line_5 $$ expLog.append("USER=test\t")[ CD ]
Line_2 $$ private void testSuccessLogFormatHelper(boolean checkIP, ApplicationId appId, ApplicationAttemptId attemptId, ContainerId containerId) -->Line_6 $$ if (checkIP) [ CD ]
