Line_3 $$ for (int i = 0; i < size; i++) -->Line_4 $$ if (i > 0)[ CD ]
Line_3 $$ for (int i = 0; i < size; i++) -->Line_7 $$ elements.toCQLLiteral(element, version, target)[ CD ]
Line_2 $$ private static void generateSetOrListCQLLiteral(ByteBuffer buffer, int version, StringBuilder target, int size, CQL3Type elements) -->Line_6 $$ ByteBuffer element = CollectionSerializer.readValue(buffer, version)[ FD ]
Line_2 $$ private static void generateSetOrListCQLLiteral(ByteBuffer buffer, int version, StringBuilder target, int size, CQL3Type elements) -->Line_3 $$ for (int i = 0; i < size; i++) [ CD ]
Line_2 $$ private static void generateSetOrListCQLLiteral(ByteBuffer buffer, int version, StringBuilder target, int size, CQL3Type elements) -->Line_7 $$ elements.toCQLLiteral(element, version, target)[ FD ]
Line_6 $$ ByteBuffer element = CollectionSerializer.readValue(buffer, version)-->Line_7 $$ elements.toCQLLiteral(element, version, target)[ FD ]
Line_2 $$ private static void generateSetOrListCQLLiteral(ByteBuffer buffer, int version, StringBuilder target, int size, CQL3Type elements) -->Line_3 $$ for (int i = 0; i < size; i++) [ FD ]
Line_4 $$ if (i > 0)-->Line_5 $$ target.append(", ")[ CD ]
Line_3 $$ for (int i = 0; i < size; i++) -->Line_6 $$ ByteBuffer element = CollectionSerializer.readValue(buffer, version)[ CD ]
Line_2 $$ private static void generateSetOrListCQLLiteral(ByteBuffer buffer, int version, StringBuilder target, int size, CQL3Type elements) -->Line_5 $$ target.append(", ")[ FD ]
Line_3 $$ for (int i = 0; i < size; i++) -->Line_4 $$ if (i > 0)[ FD ]
