Line_3 $$ StringBuilder builder = new StringBuilder(" '").append(myReferenceExpression.getReferenceName())-->Line_10 $$ builder.append(type.getPresentableText())[ FD ]
Line_2 $$ private String calcSignature(final PsiType[] argTypes) -->Line_12 $$ builder.append(")")[ CD ]
Line_2 $$ private String calcSignature(final PsiType[] argTypes) -->Line_14 $$ return builder.toString()[ CD ]
Line_5 $$ for (int i = 0; i < argTypes.length; i++) -->Line_6 $$ PsiType type = argTypes[i][ CD ]
Line_2 $$ private String calcSignature(final PsiType[] argTypes) -->Line_4 $$ builder.append("(")[ CD ]
Line_5 $$ for (int i = 0; i < argTypes.length; i++) -->Line_7 $$ if (i > 0) [ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder(" '").append(myReferenceExpression.getReferenceName())-->Line_12 $$ builder.append(")")[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder(" '").append(myReferenceExpression.getReferenceName())-->Line_4 $$ builder.append("(")[ FD ]
Line_2 $$ private String calcSignature(final PsiType[] argTypes) -->Line_3 $$ StringBuilder builder = new StringBuilder(" '").append(myReferenceExpression.getReferenceName())[ CD ]
Line_5 $$ for (int i = 0; i < argTypes.length; i++) -->Line_10 $$ builder.append(type.getPresentableText())[ CD ]
Line_5 $$ for (int i = 0; i < argTypes.length; i++) -->Line_7 $$ if (i > 0) [ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder(" '").append(myReferenceExpression.getReferenceName())-->Line_8 $$ builder.append(", ")[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder(" '").append(myReferenceExpression.getReferenceName())-->Line_14 $$ return builder.toString()[ FD ]
Line_2 $$ private String calcSignature(final PsiType[] argTypes) -->Line_5 $$ for (int i = 0; i < argTypes.length; i++) [ CD ]
Line_2 $$ private String calcSignature(final PsiType[] argTypes) -->Line_13 $$ builder.append("' ")[ CD ]
Line_6 $$ PsiType type = argTypes[i]-->Line_10 $$ builder.append(type.getPresentableText())[ FD ]
Line_7 $$ if (i > 0) -->Line_8 $$ builder.append(", ")[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder(" '").append(myReferenceExpression.getReferenceName())-->Line_13 $$ builder.append("' ")[ FD ]
