Line_4 $$ if (originalClosure.hasParametersSection()) -->Line_5 $$ result = myFactory.createClosureFromText("[ CD ]
Line_5 $$ result = myFactory.createClosureFromText("-->Line_13 $$ final GrParameter[] parameters = result.getParameters()[ FD ]
Line_11 $$ StringBuilder call = new StringBuilder()-->Line_21 $$ final GrStatement statement = myFactory.createStatementFromText(call.toString())[ FD ]
Line_11 $$ StringBuilder call = new StringBuilder()-->Line_12 $$ call.append(newName).append('(')[ FD ]
Line_5 $$ result = myFactory.createClosureFromText("-->Line_9 $$ result = myFactory.createClosureFromText("[ FD ]
Line_2 $$ private GrClosableBlock generateDelegateClosure(GrClosableBlock originalClosure, GrVariable anchor, String newName) -->Line_12 $$ call.append(newName).append('(')[ CD ]
Line_11 $$ StringBuilder call = new StringBuilder()-->Line_20 $$ call.append(")")[ FD ]
Line_2 $$ private GrClosableBlock generateDelegateClosure(GrClosableBlock originalClosure, GrVariable anchor, String newName) -->Line_12 $$ call.append(newName).append('(')[ FD ]
Line_3 $$ GrClosableBlock result-->Line_13 $$ final GrParameter[] parameters = result.getParameters()[ FD ]
Line_2 $$ private GrClosableBlock generateDelegateClosure(GrClosableBlock originalClosure, GrVariable anchor, String newName) -->Line_13 $$ final GrParameter[] parameters = result.getParameters()[ CD ]
Line_5 $$ result = myFactory.createClosureFromText("-->Line_7 $$ result.getParameterList().replace(parameterList)[ FD ]
Line_2 $$ private GrClosableBlock generateDelegateClosure(GrClosableBlock originalClosure, GrVariable anchor, String newName) -->Line_6 $$ final GrParameterList parameterList = (GrParameterList) originalClosure.getParameterList().copy()[ FD ]
Line_11 $$ StringBuilder call = new StringBuilder()-->Line_16 $$ call.append(parameters[i].getName()).append(", ")[ FD ]
Line_2 $$ private GrClosableBlock generateDelegateClosure(GrClosableBlock originalClosure, GrVariable anchor, String newName) -->Line_19 $$ call.append(myParameterInitializer.getText())[ CD ]
Line_2 $$ private GrClosableBlock generateDelegateClosure(GrClosableBlock originalClosure, GrVariable anchor, String newName) -->Line_3 $$ GrClosableBlock result[ CD ]
Line_4 $$ if (originalClosure.hasParametersSection()) -->Line_6 $$ final GrParameterList parameterList = (GrParameterList) originalClosure.getParameterList().copy()[ CD ]
Line_2 $$ private GrClosableBlock generateDelegateClosure(GrClosableBlock originalClosure, GrVariable anchor, String newName) -->Line_23 $$ return result[ CD ]
Line_4 $$ if (originalClosure.hasParametersSection()) -->Line_9 $$ result = myFactory.createClosureFromText("[ CD ]
Line_2 $$ private GrClosableBlock generateDelegateClosure(GrClosableBlock originalClosure, GrVariable anchor, String newName) -->Line_5 $$ result = myFactory.createClosureFromText("[ FD ]
Line_5 $$ result = myFactory.createClosureFromText("-->Line_22 $$ result.addStatementBefore(statement, null)[ FD ]
Line_6 $$ final GrParameterList parameterList = (GrParameterList) originalClosure.getParameterList().copy()-->Line_7 $$ result.getParameterList().replace(parameterList)[ FD ]
Line_3 $$ GrClosableBlock result-->Line_22 $$ result.addStatementBefore(statement, null)[ FD ]
Line_4 $$ if (originalClosure.hasParametersSection()) -->Line_7 $$ result.getParameterList().replace(parameterList)[ CD ]
Line_3 $$ GrClosableBlock result-->Line_7 $$ result.getParameterList().replace(parameterList)[ FD ]
Line_3 $$ GrClosableBlock result-->Line_9 $$ result = myFactory.createClosureFromText("[ FD ]
Line_2 $$ private GrClosableBlock generateDelegateClosure(GrClosableBlock originalClosure, GrVariable anchor, String newName) -->Line_22 $$ result.addStatementBefore(statement, null)[ CD ]
Line_2 $$ private GrClosableBlock generateDelegateClosure(GrClosableBlock originalClosure, GrVariable anchor, String newName) -->Line_9 $$ result = myFactory.createClosureFromText("[ FD ]
Line_3 $$ GrClosableBlock result-->Line_5 $$ result = myFactory.createClosureFromText("[ FD ]
Line_2 $$ private GrClosableBlock generateDelegateClosure(GrClosableBlock originalClosure, GrVariable anchor, String newName) -->Line_4 $$ if (originalClosure.hasParametersSection()) [ CD ]
Line_2 $$ private GrClosableBlock generateDelegateClosure(GrClosableBlock originalClosure, GrVariable anchor, String newName) -->Line_14 $$ for (int i = 0; i < parameters.length; i++) [ CD ]
Line_21 $$ final GrStatement statement = myFactory.createStatementFromText(call.toString())-->Line_22 $$ result.addStatementBefore(statement, null)[ FD ]
Line_11 $$ StringBuilder call = new StringBuilder()-->Line_19 $$ call.append(myParameterInitializer.getText())[ FD ]
Line_2 $$ private GrClosableBlock generateDelegateClosure(GrClosableBlock originalClosure, GrVariable anchor, String newName) -->Line_11 $$ StringBuilder call = new StringBuilder()[ CD ]
Line_9 $$ result = myFactory.createClosureFromText("-->Line_13 $$ final GrParameter[] parameters = result.getParameters()[ FD ]
Line_14 $$ for (int i = 0; i < parameters.length; i++) -->Line_15 $$ if (!mySettings.parametersToRemove().contains(i)) [ CD ]
Line_2 $$ private GrClosableBlock generateDelegateClosure(GrClosableBlock originalClosure, GrVariable anchor, String newName) -->Line_20 $$ call.append(")")[ CD ]
Line_2 $$ private GrClosableBlock generateDelegateClosure(GrClosableBlock originalClosure, GrVariable anchor, String newName) -->Line_21 $$ final GrStatement statement = myFactory.createStatementFromText(call.toString())[ CD ]
Line_9 $$ result = myFactory.createClosureFromText("-->Line_22 $$ result.addStatementBefore(statement, null)[ FD ]
Line_14 $$ for (int i = 0; i < parameters.length; i++) -->Line_15 $$ if (!mySettings.parametersToRemove().contains(i)) [ FD ]
Line_2 $$ private GrClosableBlock generateDelegateClosure(GrClosableBlock originalClosure, GrVariable anchor, String newName) -->Line_4 $$ if (originalClosure.hasParametersSection()) [ FD ]
Line_15 $$ if (!mySettings.parametersToRemove().contains(i)) -->Line_16 $$ call.append(parameters[i].getName()).append(", ")[ CD ]
