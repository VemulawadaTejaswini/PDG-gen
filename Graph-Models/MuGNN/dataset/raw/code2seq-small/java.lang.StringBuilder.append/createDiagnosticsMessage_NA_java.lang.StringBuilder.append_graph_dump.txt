Line_4 $$ StringBuilder message = new StringBuilder()-->Line_5 $$ message.append(trailingMessage)[ FD ]
Line_2 $$ String createDiagnosticsMessage(String trailingMessage, GradleExecutionResult gradleExecutionResult) -->Line_10 $$ String output = gradleExecutionResult.getOutput()[ FD ]
Line_4 $$ StringBuilder message = new StringBuilder()-->Line_18 $$ return message.toString()[ FD ]
Line_4 $$ StringBuilder message = new StringBuilder()-->Line_6 $$ message.append(" in ")[ FD ]
Line_2 $$ String createDiagnosticsMessage(String trailingMessage, GradleExecutionResult gradleExecutionResult) -->Line_10 $$ String output = gradleExecutionResult.getOutput()[ CD ]
Line_3 $$ String lineBreak = SystemProperties.getInstance().getLineSeparator()-->Line_15 $$ message.append(lineBreak)[ FD ]
Line_2 $$ String createDiagnosticsMessage(String trailingMessage, GradleExecutionResult gradleExecutionResult) -->Line_6 $$ message.append(" in ")[ CD ]
Line_4 $$ StringBuilder message = new StringBuilder()-->Line_8 $$ message.append(" with arguments ")[ FD ]
Line_10 $$ String output = gradleExecutionResult.getOutput()-->Line_16 $$ message.append(output)[ FD ]
Line_3 $$ String lineBreak = SystemProperties.getInstance().getLineSeparator()-->Line_12 $$ message.append(lineBreak)[ FD ]
Line_2 $$ String createDiagnosticsMessage(String trailingMessage, GradleExecutionResult gradleExecutionResult) -->Line_3 $$ String lineBreak = SystemProperties.getInstance().getLineSeparator()[ CD ]
Line_2 $$ String createDiagnosticsMessage(String trailingMessage, GradleExecutionResult gradleExecutionResult) -->Line_18 $$ return message.toString()[ CD ]
Line_4 $$ StringBuilder message = new StringBuilder()-->Line_9 $$ message.append(getArguments())[ FD ]
Line_11 $$ if (output != null && !output.isEmpty()) -->Line_16 $$ message.append(output)[ CD ]
Line_11 $$ if (output != null && !output.isEmpty()) -->Line_12 $$ message.append(lineBreak)[ CD ]
Line_2 $$ String createDiagnosticsMessage(String trailingMessage, GradleExecutionResult gradleExecutionResult) -->Line_5 $$ message.append(trailingMessage)[ CD ]
Line_4 $$ StringBuilder message = new StringBuilder()-->Line_7 $$ message.append(getProjectDir().getAbsolutePath())[ FD ]
Line_2 $$ String createDiagnosticsMessage(String trailingMessage, GradleExecutionResult gradleExecutionResult) -->Line_9 $$ message.append(getArguments())[ CD ]
Line_11 $$ if (output != null && !output.isEmpty()) -->Line_13 $$ message.append(lineBreak)[ CD ]
Line_4 $$ StringBuilder message = new StringBuilder()-->Line_14 $$ message.append("Output:")[ FD ]
Line_4 $$ StringBuilder message = new StringBuilder()-->Line_12 $$ message.append(lineBreak)[ FD ]
Line_4 $$ StringBuilder message = new StringBuilder()-->Line_16 $$ message.append(output)[ FD ]
Line_2 $$ String createDiagnosticsMessage(String trailingMessage, GradleExecutionResult gradleExecutionResult) -->Line_8 $$ message.append(" with arguments ")[ CD ]
Line_4 $$ StringBuilder message = new StringBuilder()-->Line_13 $$ message.append(lineBreak)[ FD ]
Line_2 $$ String createDiagnosticsMessage(String trailingMessage, GradleExecutionResult gradleExecutionResult) -->Line_11 $$ if (output != null && !output.isEmpty()) [ CD ]
Line_3 $$ String lineBreak = SystemProperties.getInstance().getLineSeparator()-->Line_13 $$ message.append(lineBreak)[ FD ]
Line_2 $$ String createDiagnosticsMessage(String trailingMessage, GradleExecutionResult gradleExecutionResult) -->Line_7 $$ message.append(getProjectDir().getAbsolutePath())[ CD ]
Line_11 $$ if (output != null && !output.isEmpty()) -->Line_14 $$ message.append("Output:")[ CD ]
Line_4 $$ StringBuilder message = new StringBuilder()-->Line_15 $$ message.append(lineBreak)[ FD ]
Line_2 $$ String createDiagnosticsMessage(String trailingMessage, GradleExecutionResult gradleExecutionResult) -->Line_4 $$ StringBuilder message = new StringBuilder()[ CD ]
Line_11 $$ if (output != null && !output.isEmpty()) -->Line_15 $$ message.append(lineBreak)[ CD ]
Line_2 $$ String createDiagnosticsMessage(String trailingMessage, GradleExecutionResult gradleExecutionResult) -->Line_5 $$ message.append(trailingMessage)[ FD ]
Line_10 $$ String output = gradleExecutionResult.getOutput()-->Line_11 $$ if (output != null && !output.isEmpty()) [ FD ]
