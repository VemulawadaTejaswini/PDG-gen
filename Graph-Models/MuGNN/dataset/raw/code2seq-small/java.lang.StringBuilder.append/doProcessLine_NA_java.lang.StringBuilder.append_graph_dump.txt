Line_16 $$ if (PyConsoleUtil.isDoubleQuoteMultilineStarts(line) || PyConsoleUtil.isSingleQuoteMultilineStarts(line)) -->Line_19 $$ myConsoleView.setPrompt(PyConsoleUtil.ORDINARY_PROMPT)[ CD ]
Line_49 $$ if ((myCurrentIndentSize > 0 && indent > 0) || flag) -->Line_53 $$ myConsoleCommunication.notifyCommandExecuted(true)[ CD ]
Line_2 $$ public void doProcessLine(final String line) -->Line_8 $$ if (!line.endsWith("\n")) [ FD ]
Line_32 $$ if (myInMultilineStringState != null) -->Line_34 $$ myConsoleView.setPrompt(PyConsoleUtil.INDENT_PROMPT)[ CD ]
Line_32 $$ if (myInMultilineStringState != null) -->Line_35 $$ return[ CD ]
Line_42 $$ if (!StringUtil.isEmptyOrSpaces(line)) -->Line_45 $$ if (PyConsoleIndentUtil.shouldIndent(line)) [ CD ]
Line_46 $$ indent += getPythonIndent()-->Line_50 $$ setCurrentIndentSize(indent)[ FD ]
Line_2 $$ public void doProcessLine(final String line) -->Line_15 $$ if (myInMultilineStringState != null) [ CD ]
Line_21 $$ if (line.equals("\n")) -->Line_22 $$ myInputBuffer.append("\n")[ CD ]
Line_44 $$ boolean flag = false-->Line_49 $$ if ((myCurrentIndentSize > 0 && indent > 0) || flag) [ FD ]
Line_2 $$ public void doProcessLine(final String line) -->Line_38 $$ if (line.endsWith("\\")) [ CD ]
Line_43 $$ int indent = IndentHelperImpl.getIndent(getProject(), PythonFileType.INSTANCE, line, false)-->Line_51 $$ indentEditor(myConsoleView.getConsoleEditor(), indent)[ FD ]
Line_43 $$ int indent = IndentHelperImpl.getIndent(getProject(), PythonFileType.INSTANCE, line, false)-->Line_46 $$ indent += getPythonIndent()[ FD ]
Line_38 $$ if (line.endsWith("\\")) -->Line_39 $$ myConsoleView.setPrompt(PyConsoleUtil.INDENT_PROMPT)[ CD ]
Line_49 $$ if ((myCurrentIndentSize > 0 && indent > 0) || flag) -->Line_54 $$ return[ CD ]
Line_8 $$ if (!line.endsWith("\n")) -->Line_9 $$ myInputBuffer.append("\n")[ CD ]
Line_2 $$ public void doProcessLine(final String line) -->Line_12 $$ if (StringUtil.isEmptyOrSpaces(line) && StringUtil.isEmptyOrSpaces(myInputBuffer.toString())) [ FD ]
Line_2 $$ public void doProcessLine(final String line) -->Line_43 $$ int indent = IndentHelperImpl.getIndent(getProject(), PythonFileType.INSTANCE, line, false)[ FD ]
Line_2 $$ public void doProcessLine(final String line) -->Line_7 $$ myInputBuffer.append(line)[ FD ]
Line_2 $$ public void doProcessLine(final String line) -->Line_38 $$ if (line.endsWith("\\")) [ FD ]
Line_49 $$ if ((myCurrentIndentSize > 0 && indent > 0) || flag) -->Line_51 $$ indentEditor(myConsoleView.getConsoleEditor(), indent)[ CD ]
Line_15 $$ if (myInMultilineStringState != null) -->Line_32 $$ if (myInMultilineStringState != null) [ CD ]
Line_12 $$ if (StringUtil.isEmptyOrSpaces(line) && StringUtil.isEmptyOrSpaces(myInputBuffer.toString())) -->Line_13 $$ myInputBuffer.append("")[ CD ]
Line_44 $$ boolean flag = false-->Line_47 $$ flag = true[ FD ]
Line_2 $$ public void doProcessLine(final String line) -->Line_42 $$ if (!StringUtil.isEmptyOrSpaces(line)) [ FD ]
Line_42 $$ if (!StringUtil.isEmptyOrSpaces(line)) -->Line_49 $$ if ((myCurrentIndentSize > 0 && indent > 0) || flag) [ CD ]
Line_47 $$ flag = true-->Line_49 $$ if ((myCurrentIndentSize > 0 && indent > 0) || flag) [ FD ]
Line_42 $$ if (!StringUtil.isEmptyOrSpaces(line)) -->Line_44 $$ boolean flag = false[ CD ]
Line_45 $$ if (PyConsoleIndentUtil.shouldIndent(line)) -->Line_47 $$ flag = true[ CD ]
Line_49 $$ if ((myCurrentIndentSize > 0 && indent > 0) || flag) -->Line_50 $$ setCurrentIndentSize(indent)[ CD ]
Line_45 $$ if (PyConsoleIndentUtil.shouldIndent(line)) -->Line_46 $$ indent += getPythonIndent()[ CD ]
Line_2 $$ public void doProcessLine(final String line) -->Line_42 $$ if (!StringUtil.isEmptyOrSpaces(line)) [ CD ]
Line_6 $$ if (!StringUtil.isEmptyOrSpaces(line)) -->Line_7 $$ myInputBuffer.append(line)[ CD ]
Line_2 $$ public void doProcessLine(final String line) -->Line_12 $$ if (StringUtil.isEmptyOrSpaces(line) && StringUtil.isEmptyOrSpaces(myInputBuffer.toString())) [ CD ]
Line_16 $$ if (PyConsoleUtil.isDoubleQuoteMultilineStarts(line) || PyConsoleUtil.isSingleQuoteMultilineStarts(line)) -->Line_18 $$ myConsoleView.setLanguage(PythonLanguage.getInstance())[ CD ]
Line_6 $$ if (!StringUtil.isEmptyOrSpaces(line)) -->Line_8 $$ if (!line.endsWith("\n")) [ CD ]
Line_16 $$ if (PyConsoleUtil.isDoubleQuoteMultilineStarts(line) || PyConsoleUtil.isSingleQuoteMultilineStarts(line)) -->Line_24 $$ return[ CD ]
Line_38 $$ if (line.endsWith("\\")) -->Line_40 $$ return[ CD ]
Line_46 $$ indent += getPythonIndent()-->Line_51 $$ indentEditor(myConsoleView.getConsoleEditor(), indent)[ FD ]
Line_2 $$ public void doProcessLine(final String line) -->Line_6 $$ if (!StringUtil.isEmptyOrSpaces(line)) [ FD ]
Line_49 $$ if ((myCurrentIndentSize > 0 && indent > 0) || flag) -->Line_52 $$ more()[ CD ]
Line_2 $$ public void doProcessLine(final String line) -->Line_27 $$ if (PyConsoleUtil.isDoubleQuoteMultilineStarts(line)) [ FD ]
Line_2 $$ public void doProcessLine(final String line) -->Line_57 $$ sendLineToConsole(new ConsoleCommunication.ConsoleCodeFragment(myInputBuffer.toString(), true))[ CD ]
Line_2 $$ public void doProcessLine(final String line) -->Line_3 $$ if (myInputBuffer == null) [ CD ]
Line_2 $$ public void doProcessLine(final String line) -->Line_29 $$ if (PyConsoleUtil.isSingleQuoteMultilineStarts(line)) [ FD ]
Line_2 $$ public void doProcessLine(final String line) -->Line_6 $$ if (!StringUtil.isEmptyOrSpaces(line)) [ CD ]
Line_15 $$ if (myInMultilineStringState != null) -->Line_27 $$ if (PyConsoleUtil.isDoubleQuoteMultilineStarts(line)) [ CD ]
Line_43 $$ int indent = IndentHelperImpl.getIndent(getProject(), PythonFileType.INSTANCE, line, false)-->Line_50 $$ setCurrentIndentSize(indent)[ FD ]
Line_16 $$ if (PyConsoleUtil.isDoubleQuoteMultilineStarts(line) || PyConsoleUtil.isSingleQuoteMultilineStarts(line)) -->Line_21 $$ if (line.equals("\n")) [ CD ]
Line_15 $$ if (myInMultilineStringState != null) -->Line_16 $$ if (PyConsoleUtil.isDoubleQuoteMultilineStarts(line) || PyConsoleUtil.isSingleQuoteMultilineStarts(line)) [ CD ]
Line_42 $$ if (!StringUtil.isEmptyOrSpaces(line)) -->Line_43 $$ int indent = IndentHelperImpl.getIndent(getProject(), PythonFileType.INSTANCE, line, false)[ CD ]
Line_2 $$ public void doProcessLine(final String line) -->Line_45 $$ if (PyConsoleIndentUtil.shouldIndent(line)) [ FD ]
Line_32 $$ if (myInMultilineStringState != null) -->Line_33 $$ myConsoleView.setLanguage(PlainTextLanguage.INSTANCE)[ CD ]
Line_2 $$ public void doProcessLine(final String line) -->Line_16 $$ if (PyConsoleUtil.isDoubleQuoteMultilineStarts(line) || PyConsoleUtil.isSingleQuoteMultilineStarts(line)) [ FD ]
Line_2 $$ public void doProcessLine(final String line) -->Line_21 $$ if (line.equals("\n")) [ FD ]
Line_27 $$ if (PyConsoleUtil.isDoubleQuoteMultilineStarts(line)) -->Line_29 $$ if (PyConsoleUtil.isSingleQuoteMultilineStarts(line)) [ CD ]
