Line_2 $$ private String getPositionText(@NotNull Editor editor) -->Line_16 $$ int selectionEndLine = editor.getDocument().getLineNumber(selectionEnd)[ FD ]
Line_17 $$ if (selectionEndLine > selectionStartLine) -->Line_19 $$ message.append(UIBundle.message("position.panel.selected.lines.count", selectionEndLine - selectionStartLine + 1))[ CD ]
Line_4 $$ StringBuilder message = new StringBuilder()-->Line_25 $$ message.append(caret.line + 1).append(":").append(caret.column + 1)[ FD ]
Line_4 $$ StringBuilder message = new StringBuilder()-->Line_19 $$ message.append(UIBundle.message("position.panel.selected.lines.count", selectionEndLine - selectionStartLine + 1))[ FD ]
Line_4 $$ StringBuilder message = new StringBuilder()-->Line_27 $$ return message.toString()[ FD ]
Line_12 $$ int selectionEnd = selectionModel.getSelectionEnd()-->Line_16 $$ int selectionEndLine = editor.getDocument().getLineNumber(selectionEnd)[ FD ]
Line_3 $$ if (!editor.isDisposed() && myStatusBar != null) -->Line_27 $$ return message.toString()[ CD ]
Line_13 $$ if (selectionEnd > selectionStart) -->Line_16 $$ int selectionEndLine = editor.getDocument().getLineNumber(selectionEnd)[ CD ]
Line_5 $$ SelectionModel selectionModel = editor.getSelectionModel()-->Line_10 $$ if (selectionModel.hasSelection()) [ FD ]
Line_10 $$ if (selectionModel.hasSelection()) -->Line_12 $$ int selectionEnd = selectionModel.getSelectionEnd()[ CD ]
Line_13 $$ if (selectionEnd > selectionStart) -->Line_17 $$ if (selectionEndLine > selectionStartLine) [ CD ]
Line_5 $$ SelectionModel selectionModel = editor.getSelectionModel()-->Line_11 $$ int selectionStart = selectionModel.getSelectionStart()[ FD ]
Line_2 $$ private String getPositionText(@NotNull Editor editor) -->Line_3 $$ if (!editor.isDisposed() && myStatusBar != null) [ FD ]
Line_4 $$ StringBuilder message = new StringBuilder()-->Line_18 $$ message.append(", ")[ FD ]
Line_4 $$ StringBuilder message = new StringBuilder()-->Line_14 $$ message.append(UIBundle.message("position.panel.selected.chars.count", selectionEnd - selectionStart))[ FD ]
Line_2 $$ private String getPositionText(@NotNull Editor editor) -->Line_3 $$ if (!editor.isDisposed() && myStatusBar != null) [ CD ]
Line_3 $$ if (!editor.isDisposed() && myStatusBar != null) -->Line_5 $$ SelectionModel selectionModel = editor.getSelectionModel()[ CD ]
Line_2 $$ private String getPositionText(@NotNull Editor editor) -->Line_5 $$ SelectionModel selectionModel = editor.getSelectionModel()[ FD ]
Line_7 $$ if (caretCount > 1) -->Line_25 $$ message.append(caret.line + 1).append(":").append(caret.column + 1)[ CD ]
Line_16 $$ int selectionEndLine = editor.getDocument().getLineNumber(selectionEnd)-->Line_17 $$ if (selectionEndLine > selectionStartLine) [ FD ]
Line_2 $$ private String getPositionText(@NotNull Editor editor) -->Line_15 $$ int selectionStartLine = editor.getDocument().getLineNumber(selectionStart)[ FD ]
Line_4 $$ StringBuilder message = new StringBuilder()-->Line_8 $$ message.append(UIBundle.message("position.panel.caret.count", caretCount))[ FD ]
Line_2 $$ private String getPositionText(@NotNull Editor editor) -->Line_24 $$ LogicalPosition caret = editor.getCaretModel().getLogicalPosition()[ FD ]
Line_13 $$ if (selectionEnd > selectionStart) -->Line_15 $$ int selectionStartLine = editor.getDocument().getLineNumber(selectionStart)[ CD ]
Line_7 $$ if (caretCount > 1) -->Line_8 $$ message.append(UIBundle.message("position.panel.caret.count", caretCount))[ CD ]
Line_10 $$ if (selectionModel.hasSelection()) -->Line_13 $$ if (selectionEnd > selectionStart) [ CD ]
Line_2 $$ private String getPositionText(@NotNull Editor editor) -->Line_6 $$ int caretCount = editor.getCaretModel().getCaretCount()[ FD ]
Line_3 $$ if (!editor.isDisposed() && myStatusBar != null) -->Line_4 $$ StringBuilder message = new StringBuilder()[ CD ]
Line_3 $$ if (!editor.isDisposed() && myStatusBar != null) -->Line_7 $$ if (caretCount > 1) [ CD ]
Line_10 $$ if (selectionModel.hasSelection()) -->Line_11 $$ int selectionStart = selectionModel.getSelectionStart()[ CD ]
Line_11 $$ int selectionStart = selectionModel.getSelectionStart()-->Line_13 $$ if (selectionEnd > selectionStart) [ FD ]
Line_11 $$ int selectionStart = selectionModel.getSelectionStart()-->Line_15 $$ int selectionStartLine = editor.getDocument().getLineNumber(selectionStart)[ FD ]
Line_5 $$ SelectionModel selectionModel = editor.getSelectionModel()-->Line_12 $$ int selectionEnd = selectionModel.getSelectionEnd()[ FD ]
Line_7 $$ if (caretCount > 1) -->Line_10 $$ if (selectionModel.hasSelection()) [ CD ]
Line_6 $$ int caretCount = editor.getCaretModel().getCaretCount()-->Line_7 $$ if (caretCount > 1) [ FD ]
Line_13 $$ if (selectionEnd > selectionStart) -->Line_21 $$ message.append("     ")[ CD ]
Line_15 $$ int selectionStartLine = editor.getDocument().getLineNumber(selectionStart)-->Line_17 $$ if (selectionEndLine > selectionStartLine) [ FD ]
Line_4 $$ StringBuilder message = new StringBuilder()-->Line_21 $$ message.append("     ")[ FD ]
Line_6 $$ int caretCount = editor.getCaretModel().getCaretCount()-->Line_8 $$ message.append(UIBundle.message("position.panel.caret.count", caretCount))[ FD ]
Line_13 $$ if (selectionEnd > selectionStart) -->Line_14 $$ message.append(UIBundle.message("position.panel.selected.chars.count", selectionEnd - selectionStart))[ CD ]
Line_12 $$ int selectionEnd = selectionModel.getSelectionEnd()-->Line_13 $$ if (selectionEnd > selectionStart) [ FD ]
Line_3 $$ if (!editor.isDisposed() && myStatusBar != null) -->Line_29 $$ return ""[ CD ]
Line_17 $$ if (selectionEndLine > selectionStartLine) -->Line_18 $$ message.append(", ")[ CD ]
Line_3 $$ if (!editor.isDisposed() && myStatusBar != null) -->Line_6 $$ int caretCount = editor.getCaretModel().getCaretCount()[ CD ]
Line_7 $$ if (caretCount > 1) -->Line_24 $$ LogicalPosition caret = editor.getCaretModel().getLogicalPosition()[ CD ]
