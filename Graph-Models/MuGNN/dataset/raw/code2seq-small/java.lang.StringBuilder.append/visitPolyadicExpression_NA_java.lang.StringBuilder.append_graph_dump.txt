Line_2 $$ public void visitPolyadicExpression(PsiPolyadicExpression expression) -->Line_3 $$ PsiExpression[] operands = expression.getOperands()[ CD ]
Line_4 $$ for (int i = 0; i < operands.length; i++) -->Line_5 $$ PsiExpression operand = operands[i][ CD ]
Line_4 $$ for (int i = 0; i < operands.length; i++) -->Line_10 $$ operand.accept(this)[ CD ]
Line_4 $$ for (int i = 0; i < operands.length; i++) -->Line_6 $$ if (i != 0) [ FD ]
Line_2 $$ public void visitPolyadicExpression(PsiPolyadicExpression expression) -->Line_3 $$ PsiExpression[] operands = expression.getOperands()[ FD ]
Line_7 $$ PsiJavaToken token = expression.getTokenBeforeOperand(operand)-->Line_8 $$ myBuf.append(" ").append(token.getText()).append(" ")[ FD ]
Line_5 $$ PsiExpression operand = operands[i]-->Line_7 $$ PsiJavaToken token = expression.getTokenBeforeOperand(operand)[ FD ]
Line_6 $$ if (i != 0) -->Line_7 $$ PsiJavaToken token = expression.getTokenBeforeOperand(operand)[ CD ]
Line_2 $$ public void visitPolyadicExpression(PsiPolyadicExpression expression) -->Line_4 $$ for (int i = 0; i < operands.length; i++) [ CD ]
Line_4 $$ for (int i = 0; i < operands.length; i++) -->Line_6 $$ if (i != 0) [ CD ]
Line_2 $$ public void visitPolyadicExpression(PsiPolyadicExpression expression) -->Line_7 $$ PsiJavaToken token = expression.getTokenBeforeOperand(operand)[ FD ]
Line_5 $$ PsiExpression operand = operands[i]-->Line_10 $$ operand.accept(this)[ FD ]
Line_6 $$ if (i != 0) -->Line_8 $$ myBuf.append(" ").append(token.getText()).append(" ")[ CD ]
