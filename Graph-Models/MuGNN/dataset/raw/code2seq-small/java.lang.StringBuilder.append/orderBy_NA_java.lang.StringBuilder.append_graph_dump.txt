Line_2 $$ protected static String orderBy(List associations) throws MappingException -->Line_4 $$ Iterator iter = associations.iterator()[ FD ]
Line_27 $$ last = oj-->Line_18 $$ if (queryableCollection.isManyToMany() && last.isManyToManyWith(oj)) [ FD ]
Line_7 $$ OuterJoinableAssociation oj = (OuterJoinableAssociation) iter.next()-->Line_12 $$ final String orderByString = queryableCollection.getSQLOrderByString(oj.getRHSAlias())[ FD ]
Line_5 $$ OuterJoinableAssociation last = null-->Line_16 $$ if (last != null && last.getJoinable().isCollection()) [ FD ]
Line_7 $$ OuterJoinableAssociation oj = (OuterJoinableAssociation) iter.next()-->Line_9 $$ if (oj.getJoinable().isCollection()) [ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_32 $$ return buf.toString()[ FD ]
Line_2 $$ protected static String orderBy(List associations) throws MappingException -->Line_4 $$ Iterator iter = associations.iterator()[ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_29 $$ if (buf.length() > 0) [ FD ]
Line_6 $$ while (iter.hasNext()) -->Line_8 $$ if (oj.getJoinType() == JoinType.LEFT_OUTER_JOIN) [ CD ]
Line_10 $$ final QueryableCollection queryableCollection = (QueryableCollection) oj.getJoinable()-->Line_11 $$ if (queryableCollection.hasOrdering()) [ FD ]
Line_10 $$ final QueryableCollection queryableCollection = (QueryableCollection) oj.getJoinable()-->Line_20 $$ final String orderByString = queryableCollection.getManyToManyOrderByString(oj.getRHSAlias())[ FD ]
Line_11 $$ if (queryableCollection.hasOrdering()) -->Line_12 $$ final String orderByString = queryableCollection.getSQLOrderByString(oj.getRHSAlias())[ CD ]
Line_19 $$ if (queryableCollection.hasManyToManyOrdering()) -->Line_20 $$ final String orderByString = queryableCollection.getManyToManyOrderByString(oj.getRHSAlias())[ CD ]
Line_19 $$ if (queryableCollection.hasManyToManyOrdering()) -->Line_21 $$ buf.append(orderByString).append(", ")[ CD ]
Line_29 $$ if (buf.length() > 0) -->Line_30 $$ buf.setLength(buf.length() - 2)[ CD ]
Line_6 $$ while (iter.hasNext()) -->Line_7 $$ OuterJoinableAssociation oj = (OuterJoinableAssociation) iter.next()[ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_13 $$ buf.append(orderByString).append(", ")[ FD ]
Line_6 $$ while (iter.hasNext()) -->Line_27 $$ last = oj[ CD ]
Line_2 $$ protected static String orderBy(List associations) throws MappingException -->Line_3 $$ StringBuilder buf = new StringBuilder()[ CD ]
Line_11 $$ if (queryableCollection.hasOrdering()) -->Line_13 $$ buf.append(orderByString).append(", ")[ CD ]
Line_10 $$ final QueryableCollection queryableCollection = (QueryableCollection) oj.getJoinable()-->Line_19 $$ if (queryableCollection.hasManyToManyOrdering()) [ FD ]
Line_7 $$ OuterJoinableAssociation oj = (OuterJoinableAssociation) iter.next()-->Line_20 $$ final String orderByString = queryableCollection.getManyToManyOrderByString(oj.getRHSAlias())[ FD ]
Line_10 $$ final QueryableCollection queryableCollection = (QueryableCollection) oj.getJoinable()-->Line_12 $$ final String orderByString = queryableCollection.getSQLOrderByString(oj.getRHSAlias())[ FD ]
Line_4 $$ Iterator iter = associations.iterator()-->Line_6 $$ while (iter.hasNext()) [ FD ]
Line_27 $$ last = oj-->Line_16 $$ if (last != null && last.getJoinable().isCollection()) [ FD ]
Line_27 $$ last = oj-->Line_17 $$ final QueryableCollection queryableCollection = (QueryableCollection) last.getJoinable()[ FD ]
Line_4 $$ Iterator iter = associations.iterator()-->Line_7 $$ OuterJoinableAssociation oj = (OuterJoinableAssociation) iter.next()[ FD ]
Line_12 $$ final String orderByString = queryableCollection.getSQLOrderByString(oj.getRHSAlias())-->Line_21 $$ buf.append(orderByString).append(", ")[ FD ]
Line_2 $$ protected static String orderBy(List associations) throws MappingException -->Line_32 $$ return buf.toString()[ CD ]
Line_5 $$ OuterJoinableAssociation last = null-->Line_17 $$ final QueryableCollection queryableCollection = (QueryableCollection) last.getJoinable()[ FD ]
Line_2 $$ protected static String orderBy(List associations) throws MappingException -->Line_5 $$ OuterJoinableAssociation last = null[ CD ]
Line_7 $$ OuterJoinableAssociation oj = (OuterJoinableAssociation) iter.next()-->Line_18 $$ if (queryableCollection.isManyToMany() && last.isManyToManyWith(oj)) [ FD ]
Line_9 $$ if (oj.getJoinable().isCollection()) -->Line_11 $$ if (queryableCollection.hasOrdering()) [ CD ]
Line_9 $$ if (oj.getJoinable().isCollection()) -->Line_10 $$ final QueryableCollection queryableCollection = (QueryableCollection) oj.getJoinable()[ CD ]
Line_9 $$ if (oj.getJoinable().isCollection()) -->Line_16 $$ if (last != null && last.getJoinable().isCollection()) [ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_21 $$ buf.append(orderByString).append(", ")[ FD ]
Line_5 $$ OuterJoinableAssociation last = null-->Line_27 $$ last = oj[ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_30 $$ buf.setLength(buf.length() - 2)[ FD ]
Line_10 $$ final QueryableCollection queryableCollection = (QueryableCollection) oj.getJoinable()-->Line_18 $$ if (queryableCollection.isManyToMany() && last.isManyToManyWith(oj)) [ FD ]
Line_8 $$ if (oj.getJoinType() == JoinType.LEFT_OUTER_JOIN) -->Line_9 $$ if (oj.getJoinable().isCollection()) [ CD ]
Line_7 $$ OuterJoinableAssociation oj = (OuterJoinableAssociation) iter.next()-->Line_8 $$ if (oj.getJoinType() == JoinType.LEFT_OUTER_JOIN) [ FD ]
Line_7 $$ OuterJoinableAssociation oj = (OuterJoinableAssociation) iter.next()-->Line_27 $$ last = oj[ FD ]
Line_7 $$ OuterJoinableAssociation oj = (OuterJoinableAssociation) iter.next()-->Line_10 $$ final QueryableCollection queryableCollection = (QueryableCollection) oj.getJoinable()[ FD ]
Line_18 $$ if (queryableCollection.isManyToMany() && last.isManyToManyWith(oj)) -->Line_19 $$ if (queryableCollection.hasManyToManyOrdering()) [ CD ]
Line_2 $$ protected static String orderBy(List associations) throws MappingException -->Line_29 $$ if (buf.length() > 0) [ CD ]
Line_12 $$ final String orderByString = queryableCollection.getSQLOrderByString(oj.getRHSAlias())-->Line_13 $$ buf.append(orderByString).append(", ")[ FD ]
Line_2 $$ protected static String orderBy(List associations) throws MappingException -->Line_6 $$ while (iter.hasNext()) [ CD ]
Line_16 $$ if (last != null && last.getJoinable().isCollection()) -->Line_18 $$ if (queryableCollection.isManyToMany() && last.isManyToManyWith(oj)) [ CD ]
Line_5 $$ OuterJoinableAssociation last = null-->Line_18 $$ if (queryableCollection.isManyToMany() && last.isManyToManyWith(oj)) [ FD ]
