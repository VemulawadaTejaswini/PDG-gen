Line_5 $$ for (int i = 0; st.hasMoreTokens(); i++) -->Line_10 $$ if (i == 0) [ FD ]
Line_6 $$ final String token = st.nextToken().trim()-->Line_16 $$ sb.append(token.substring(0, idx))[ FD ]
Line_6 $$ final String token = st.nextToken().trim()-->Line_14 $$ sb.append(token)[ FD ]
Line_5 $$ for (int i = 0; st.hasMoreTokens(); i++) -->Line_7 $$ if (i > 1)[ CD ]
Line_6 $$ final String token = st.nextToken().trim()-->Line_12 $$ if ((idx = token.indexOf(' ')) > -1) [ FD ]
Line_6 $$ final String token = st.nextToken().trim()-->Line_19 $$ sb.append(token)[ FD ]
Line_9 $$ final int idx-->Line_12 $$ if ((idx = token.indexOf(' ')) > -1) [ FD ]
Line_13 $$ if (parameterNames) -->Line_16 $$ sb.append(token.substring(0, idx))[ CD ]
Line_2 $$ public static String fixSignature(final String signature, final boolean parameterNames) -->Line_25 $$ sb.append(")")[ CD ]
Line_3 $$ final StringBuilder sb = new StringBuilder()-->Line_16 $$ sb.append(token.substring(0, idx))[ FD ]
Line_3 $$ final StringBuilder sb = new StringBuilder()-->Line_25 $$ sb.append(")")[ FD ]
Line_12 $$ if ((idx = token.indexOf(' ')) > -1) -->Line_16 $$ sb.append(token.substring(0, idx))[ FD ]
Line_2 $$ public static String fixSignature(final String signature, final boolean parameterNames) -->Line_5 $$ for (int i = 0; st.hasMoreTokens(); i++) [ CD ]
Line_10 $$ if (i == 0) -->Line_11 $$ sb.append(token).append("(")[ CD ]
Line_3 $$ final StringBuilder sb = new StringBuilder()-->Line_21 $$ sb.append(' ').append('p').append(i)[ FD ]
Line_5 $$ for (int i = 0; st.hasMoreTokens(); i++) -->Line_7 $$ if (i > 1)[ FD ]
Line_4 $$ final StringTokenizer st = new StringTokenizer(signature, "(,)")-->Line_5 $$ for (int i = 0; st.hasMoreTokens(); i++) [ FD ]
Line_7 $$ if (i > 1)-->Line_8 $$ sb.append(", ")[ CD ]
Line_10 $$ if (i == 0) -->Line_12 $$ if ((idx = token.indexOf(' ')) > -1) [ CD ]
Line_5 $$ for (int i = 0; st.hasMoreTokens(); i++) -->Line_6 $$ final String token = st.nextToken().trim()[ CD ]
Line_13 $$ if (parameterNames) -->Line_14 $$ sb.append(token)[ CD ]
Line_2 $$ public static String fixSignature(final String signature, final boolean parameterNames) -->Line_26 $$ return sb.toString()[ CD ]
Line_9 $$ final int idx-->Line_16 $$ sb.append(token.substring(0, idx))[ FD ]
Line_3 $$ final StringBuilder sb = new StringBuilder()-->Line_26 $$ return sb.toString()[ FD ]
Line_20 $$ if (parameterNames) -->Line_21 $$ sb.append(' ').append('p').append(i)[ CD ]
Line_3 $$ final StringBuilder sb = new StringBuilder()-->Line_8 $$ sb.append(", ")[ FD ]
Line_12 $$ if ((idx = token.indexOf(' ')) > -1) -->Line_13 $$ if (parameterNames) [ CD ]
Line_5 $$ for (int i = 0; st.hasMoreTokens(); i++) -->Line_21 $$ sb.append(' ').append('p').append(i)[ FD ]
Line_3 $$ final StringBuilder sb = new StringBuilder()-->Line_19 $$ sb.append(token)[ FD ]
Line_2 $$ public static String fixSignature(final String signature, final boolean parameterNames) -->Line_4 $$ final StringTokenizer st = new StringTokenizer(signature, "(,)")[ CD ]
Line_12 $$ if ((idx = token.indexOf(' ')) > -1) -->Line_19 $$ sb.append(token)[ CD ]
Line_2 $$ public static String fixSignature(final String signature, final boolean parameterNames) -->Line_3 $$ final StringBuilder sb = new StringBuilder()[ CD ]
Line_12 $$ if ((idx = token.indexOf(' ')) > -1) -->Line_20 $$ if (parameterNames) [ CD ]
Line_4 $$ final StringTokenizer st = new StringTokenizer(signature, "(,)")-->Line_6 $$ final String token = st.nextToken().trim()[ FD ]
Line_3 $$ final StringBuilder sb = new StringBuilder()-->Line_11 $$ sb.append(token).append("(")[ FD ]
Line_3 $$ final StringBuilder sb = new StringBuilder()-->Line_14 $$ sb.append(token)[ FD ]
Line_6 $$ final String token = st.nextToken().trim()-->Line_11 $$ sb.append(token).append("(")[ FD ]
Line_5 $$ for (int i = 0; st.hasMoreTokens(); i++) -->Line_9 $$ final int idx[ CD ]
Line_5 $$ for (int i = 0; st.hasMoreTokens(); i++) -->Line_10 $$ if (i == 0) [ CD ]
