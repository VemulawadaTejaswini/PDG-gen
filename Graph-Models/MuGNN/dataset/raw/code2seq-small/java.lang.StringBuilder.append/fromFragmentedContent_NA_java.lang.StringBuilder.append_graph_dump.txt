Line_3 $$ ApplicationManager.getApplication().runReadAction(new Runnable() -->Line_11 $$ List<BeforeAfter<TextRange>> expandedRanges = expand(fragmentedContent.getRanges(), VcsConfiguration.getInstance(myProject).SHORT_DIFF_EXTRA_LINES, fragmentedContent.getBefore(), fragmentedContent.getAfter())[ CD ]
Line_43 $$ if (!expandedRanges.isEmpty()) -->Line_44 $$ BeforeAfter<TextRange> last = expandedRanges.get(expandedRanges.size() - 1)[ CD ]
Line_46 $$ if (document.getLineEndOffset(last.getBefore().getEndOffset()) != document.getTextLength()) -->Line_47 $$ sbOld.append('\n')[ CD ]
Line_3 $$ ApplicationManager.getApplication().runReadAction(new Runnable() -->Line_6 $$ if (DumbService.isDumb(myProject)) [ CD ]
Line_40 $$ lines = new BeforeAfter<Integer>(before, after)-->Line_48 $$ oldConvertor.emptyLine(lines.getBefore())[ FD ]
Line_12 $$ final Document document = fragmentedContent.getBefore()-->Line_31 $$ sbOld.append(document.getText(beforeRange))[ FD ]
Line_46 $$ if (document.getLineEndOffset(last.getBefore().getEndOffset()) != document.getTextLength()) -->Line_48 $$ oldConvertor.emptyLine(lines.getBefore())[ CD ]
Line_3 $$ ApplicationManager.getApplication().runReadAction(new Runnable() -->Line_59 $$ setTodoHighlighting(fragmentedContent.getBefore(), fragmentedContent.getAfter())[ CD ]
Line_14 $$ BeforeAfter<Integer> lines = new BeforeAfter<Integer>(0, 0)-->Line_18 $$ newConvertor.emptyLine(lines.getAfter())[ FD ]
Line_16 $$ if (lines.getBefore() > 0 || lines.getAfter() > 0) -->Line_17 $$ oldConvertor.emptyLine(lines.getBefore())[ CD ]
Line_14 $$ BeforeAfter<Integer> lines = new BeforeAfter<Integer>(0, 0)-->Line_19 $$ lines = new BeforeAfter<Integer>(lines.getBefore() + 1, lines.getAfter() + 1)[ FD ]
Line_15 $$ for (BeforeAfter<TextRange> lineNumbers : expandedRanges) -->Line_39 $$ int after = lines.getAfter() + lineNumbers.getAfter().getEndOffset() - lineNumbers.getAfter().getStartOffset() + 1[ FD ]
Line_2 $$ private void fromFragmentedContent(final FragmentedContent fragmentedContent) -->Line_10 $$ myIsAddition = fragmentedContent.isAddition()[ FD ]
Line_13 $$ final Document document1 = fragmentedContent.getAfter()-->Line_52 $$ if (document1.getLineEndOffset(last.getAfter().getEndOffset()) != document1.getTextLength()) [ FD ]
Line_19 $$ lines = new BeforeAfter<Integer>(lines.getBefore() + 1, lines.getAfter() + 1)-->Line_54 $$ newConvertor.emptyLine(lines.getAfter())[ FD ]
Line_44 $$ BeforeAfter<TextRange> last = expandedRanges.get(expandedRanges.size() - 1)-->Line_52 $$ if (document1.getLineEndOffset(last.getAfter().getEndOffset()) != document1.getTextLength()) [ FD ]
Line_3 $$ ApplicationManager.getApplication().runReadAction(new Runnable() -->Line_13 $$ final Document document1 = fragmentedContent.getAfter()[ CD ]
Line_14 $$ BeforeAfter<Integer> lines = new BeforeAfter<Integer>(0, 0)-->Line_54 $$ newConvertor.emptyLine(lines.getAfter())[ FD ]
Line_13 $$ final Document document1 = fragmentedContent.getAfter()-->Line_37 $$ sbNew.append(document1.getText(afterRange))[ FD ]
Line_14 $$ BeforeAfter<Integer> lines = new BeforeAfter<Integer>(0, 0)-->Line_48 $$ oldConvertor.emptyLine(lines.getBefore())[ FD ]
Line_15 $$ for (BeforeAfter<TextRange> lineNumbers : expandedRanges) -->Line_35 $$ final TextRange afterRange = new TextRange(document1.getLineStartOffset(lineNumbers.getAfter().getStartOffset()), document1.getLineEndOffset(lineNumbers.getAfter().getEndOffset()))[ FD ]
Line_2 $$ private void fromFragmentedContent(final FragmentedContent fragmentedContent) -->Line_11 $$ List<BeforeAfter<TextRange>> expandedRanges = expand(fragmentedContent.getRanges(), VcsConfiguration.getInstance(myProject).SHORT_DIFF_EXTRA_LINES, fragmentedContent.getBefore(), fragmentedContent.getAfter())[ FD ]
Line_15 $$ for (BeforeAfter<TextRange> lineNumbers : expandedRanges) -->Line_25 $$ newConvertor.put(lines.getAfter(), lineNumbers.getAfter().getStartOffset())[ FD ]
Line_52 $$ if (document1.getLineEndOffset(last.getAfter().getEndOffset()) != document1.getTextLength()) -->Line_54 $$ newConvertor.emptyLine(lines.getAfter())[ CD ]
Line_19 $$ lines = new BeforeAfter<Integer>(lines.getBefore() + 1, lines.getAfter() + 1)-->Line_40 $$ lines = new BeforeAfter<Integer>(before, after)[ FD ]
Line_3 $$ ApplicationManager.getApplication().runReadAction(new Runnable() -->Line_10 $$ myIsAddition = fragmentedContent.isAddition()[ CD ]
Line_35 $$ final TextRange afterRange = new TextRange(document1.getLineStartOffset(lineNumbers.getAfter().getStartOffset()), document1.getLineEndOffset(lineNumbers.getAfter().getEndOffset()))-->Line_36 $$ myAfterFragments.add(afterRange)[ FD ]
Line_14 $$ BeforeAfter<Integer> lines = new BeforeAfter<Integer>(0, 0)-->Line_16 $$ if (lines.getBefore() > 0 || lines.getAfter() > 0) [ FD ]
Line_11 $$ List<BeforeAfter<TextRange>> expandedRanges = expand(fragmentedContent.getRanges(), VcsConfiguration.getInstance(myProject).SHORT_DIFF_EXTRA_LINES, fragmentedContent.getBefore(), fragmentedContent.getAfter())-->Line_43 $$ if (!expandedRanges.isEmpty()) [ FD ]
Line_3 $$ ApplicationManager.getApplication().runReadAction(new Runnable() -->Line_58 $$ setHighlighters(fragmentedContent.getBefore(), fragmentedContent.getAfter(), expandedRanges, fragmentedContent)[ CD ]
Line_15 $$ for (BeforeAfter<TextRange> lineNumbers : expandedRanges) -->Line_29 $$ final TextRange beforeRange = new TextRange(document.getLineStartOffset(lineNumbers.getBefore().getStartOffset()), document.getLineEndOffset(lineNumbers.getBefore().getEndOffset()))[ FD ]
Line_19 $$ lines = new BeforeAfter<Integer>(lines.getBefore() + 1, lines.getAfter() + 1)-->Line_39 $$ int after = lines.getAfter() + lineNumbers.getAfter().getEndOffset() - lineNumbers.getAfter().getStartOffset() + 1[ FD ]
Line_14 $$ BeforeAfter<Integer> lines = new BeforeAfter<Integer>(0, 0)-->Line_38 $$ int before = lines.getBefore() + lineNumbers.getBefore().getEndOffset() - lineNumbers.getBefore().getStartOffset() + 1[ FD ]
Line_19 $$ lines = new BeforeAfter<Integer>(lines.getBefore() + 1, lines.getAfter() + 1)-->Line_24 $$ oldConvertor.put(lines.getBefore(), lineNumbers.getBefore().getStartOffset())[ FD ]
Line_14 $$ BeforeAfter<Integer> lines = new BeforeAfter<Integer>(0, 0)-->Line_42 $$ myLineRanges.add(new BeforeAfter<Integer>(lines.getBefore() == 0 ? 0 : lines.getBefore() - 1, lines.getAfter() == 0 ? 0 : lines.getAfter() - 1))[ FD ]
Line_19 $$ lines = new BeforeAfter<Integer>(lines.getBefore() + 1, lines.getAfter() + 1)-->Line_48 $$ oldConvertor.emptyLine(lines.getBefore())[ FD ]
Line_2 $$ private void fromFragmentedContent(final FragmentedContent fragmentedContent) -->Line_59 $$ setTodoHighlighting(fragmentedContent.getBefore(), fragmentedContent.getAfter())[ FD ]
Line_2 $$ private void fromFragmentedContent(final FragmentedContent fragmentedContent) -->Line_13 $$ final Document document1 = fragmentedContent.getAfter()[ FD ]
Line_45 $$ if (sbOld.length() > 0) -->Line_46 $$ if (document.getLineEndOffset(last.getBefore().getEndOffset()) != document.getTextLength()) [ CD ]
Line_44 $$ BeforeAfter<TextRange> last = expandedRanges.get(expandedRanges.size() - 1)-->Line_46 $$ if (document.getLineEndOffset(last.getBefore().getEndOffset()) != document.getTextLength()) [ FD ]
Line_2 $$ private void fromFragmentedContent(final FragmentedContent fragmentedContent) -->Line_58 $$ setHighlighters(fragmentedContent.getBefore(), fragmentedContent.getAfter(), expandedRanges, fragmentedContent)[ FD ]
Line_3 $$ ApplicationManager.getApplication().runReadAction(new Runnable() -->Line_12 $$ final Document document = fragmentedContent.getBefore()[ CD ]
Line_43 $$ if (!expandedRanges.isEmpty()) -->Line_51 $$ if (sbNew.length() > 0) [ CD ]
Line_29 $$ final TextRange beforeRange = new TextRange(document.getLineStartOffset(lineNumbers.getBefore().getStartOffset()), document.getLineEndOffset(lineNumbers.getBefore().getEndOffset()))-->Line_31 $$ sbOld.append(document.getText(beforeRange))[ FD ]
Line_32 $$ if (sbNew.length() > 0) -->Line_33 $$ sbNew.append('\n')[ CD ]
Line_3 $$ ApplicationManager.getApplication().runReadAction(new Runnable() -->Line_14 $$ BeforeAfter<Integer> lines = new BeforeAfter<Integer>(0, 0)[ CD ]
Line_29 $$ final TextRange beforeRange = new TextRange(document.getLineStartOffset(lineNumbers.getBefore().getStartOffset()), document.getLineEndOffset(lineNumbers.getBefore().getEndOffset()))-->Line_30 $$ myBeforeFragments.add(beforeRange)[ FD ]
Line_12 $$ final Document document = fragmentedContent.getBefore()-->Line_46 $$ if (document.getLineEndOffset(last.getBefore().getEndOffset()) != document.getTextLength()) [ FD ]
Line_16 $$ if (lines.getBefore() > 0 || lines.getAfter() > 0) -->Line_18 $$ newConvertor.emptyLine(lines.getAfter())[ CD ]
Line_16 $$ if (lines.getBefore() > 0 || lines.getAfter() > 0) -->Line_19 $$ lines = new BeforeAfter<Integer>(lines.getBefore() + 1, lines.getAfter() + 1)[ CD ]
Line_16 $$ if (lines.getBefore() > 0 || lines.getAfter() > 0) -->Line_20 $$ sbOld.append('\n')[ CD ]
Line_15 $$ for (BeforeAfter<TextRange> lineNumbers : expandedRanges) -->Line_24 $$ oldConvertor.put(lines.getBefore(), lineNumbers.getBefore().getStartOffset())[ FD ]
Line_2 $$ private void fromFragmentedContent(final FragmentedContent fragmentedContent) -->Line_9 $$ myOneSide = fragmentedContent.isOneSide()[ FD ]
Line_3 $$ ApplicationManager.getApplication().runReadAction(new Runnable() -->Line_42 $$ myLineRanges.add(new BeforeAfter<Integer>(lines.getBefore() == 0 ? 0 : lines.getBefore() - 1, lines.getAfter() == 0 ? 0 : lines.getAfter() - 1))[ CD ]
Line_14 $$ BeforeAfter<Integer> lines = new BeforeAfter<Integer>(0, 0)-->Line_23 $$ myLineRanges.add(lines)[ FD ]
Line_19 $$ lines = new BeforeAfter<Integer>(lines.getBefore() + 1, lines.getAfter() + 1)-->Line_38 $$ int before = lines.getBefore() + lineNumbers.getBefore().getEndOffset() - lineNumbers.getBefore().getStartOffset() + 1[ FD ]
Line_52 $$ if (document1.getLineEndOffset(last.getAfter().getEndOffset()) != document1.getTextLength()) -->Line_53 $$ sbNew.append('\n')[ CD ]
Line_3 $$ ApplicationManager.getApplication().runReadAction(new Runnable() -->Line_9 $$ myOneSide = fragmentedContent.isOneSide()[ CD ]
Line_14 $$ BeforeAfter<Integer> lines = new BeforeAfter<Integer>(0, 0)-->Line_39 $$ int after = lines.getAfter() + lineNumbers.getAfter().getEndOffset() - lineNumbers.getAfter().getStartOffset() + 1[ FD ]
Line_14 $$ BeforeAfter<Integer> lines = new BeforeAfter<Integer>(0, 0)-->Line_25 $$ newConvertor.put(lines.getAfter(), lineNumbers.getAfter().getStartOffset())[ FD ]
Line_2 $$ private void fromFragmentedContent(final FragmentedContent fragmentedContent) -->Line_12 $$ final Document document = fragmentedContent.getBefore()[ FD ]
Line_2 $$ private void fromFragmentedContent(final FragmentedContent fragmentedContent) -->Line_3 $$ ApplicationManager.getApplication().runReadAction(new Runnable() [ CD ]
Line_15 $$ for (BeforeAfter<TextRange> lineNumbers : expandedRanges) -->Line_38 $$ int before = lines.getBefore() + lineNumbers.getBefore().getEndOffset() - lineNumbers.getBefore().getStartOffset() + 1[ FD ]
Line_11 $$ List<BeforeAfter<TextRange>> expandedRanges = expand(fragmentedContent.getRanges(), VcsConfiguration.getInstance(myProject).SHORT_DIFF_EXTRA_LINES, fragmentedContent.getBefore(), fragmentedContent.getAfter())-->Line_58 $$ setHighlighters(fragmentedContent.getBefore(), fragmentedContent.getAfter(), expandedRanges, fragmentedContent)[ FD ]
Line_14 $$ BeforeAfter<Integer> lines = new BeforeAfter<Integer>(0, 0)-->Line_40 $$ lines = new BeforeAfter<Integer>(before, after)[ FD ]
Line_14 $$ BeforeAfter<Integer> lines = new BeforeAfter<Integer>(0, 0)-->Line_17 $$ oldConvertor.emptyLine(lines.getBefore())[ FD ]
Line_26 $$ if (sbOld.length() > 0) -->Line_27 $$ sbOld.append('\n')[ CD ]
Line_16 $$ if (lines.getBefore() > 0 || lines.getAfter() > 0) -->Line_21 $$ sbNew.append('\n')[ CD ]
Line_11 $$ List<BeforeAfter<TextRange>> expandedRanges = expand(fragmentedContent.getRanges(), VcsConfiguration.getInstance(myProject).SHORT_DIFF_EXTRA_LINES, fragmentedContent.getBefore(), fragmentedContent.getAfter())-->Line_44 $$ BeforeAfter<TextRange> last = expandedRanges.get(expandedRanges.size() - 1)[ FD ]
Line_40 $$ lines = new BeforeAfter<Integer>(before, after)-->Line_42 $$ myLineRanges.add(new BeforeAfter<Integer>(lines.getBefore() == 0 ? 0 : lines.getBefore() - 1, lines.getAfter() == 0 ? 0 : lines.getAfter() - 1))[ FD ]
Line_40 $$ lines = new BeforeAfter<Integer>(before, after)-->Line_54 $$ newConvertor.emptyLine(lines.getAfter())[ FD ]
Line_19 $$ lines = new BeforeAfter<Integer>(lines.getBefore() + 1, lines.getAfter() + 1)-->Line_23 $$ myLineRanges.add(lines)[ FD ]
Line_35 $$ final TextRange afterRange = new TextRange(document1.getLineStartOffset(lineNumbers.getAfter().getStartOffset()), document1.getLineEndOffset(lineNumbers.getAfter().getEndOffset()))-->Line_37 $$ sbNew.append(document1.getText(afterRange))[ FD ]
Line_19 $$ lines = new BeforeAfter<Integer>(lines.getBefore() + 1, lines.getAfter() + 1)-->Line_42 $$ myLineRanges.add(new BeforeAfter<Integer>(lines.getBefore() == 0 ? 0 : lines.getBefore() - 1, lines.getAfter() == 0 ? 0 : lines.getAfter() - 1))[ FD ]
Line_3 $$ ApplicationManager.getApplication().runReadAction(new Runnable() -->Line_43 $$ if (!expandedRanges.isEmpty()) [ CD ]
Line_12 $$ final Document document = fragmentedContent.getBefore()-->Line_29 $$ final TextRange beforeRange = new TextRange(document.getLineStartOffset(lineNumbers.getBefore().getStartOffset()), document.getLineEndOffset(lineNumbers.getBefore().getEndOffset()))[ FD ]
Line_14 $$ BeforeAfter<Integer> lines = new BeforeAfter<Integer>(0, 0)-->Line_24 $$ oldConvertor.put(lines.getBefore(), lineNumbers.getBefore().getStartOffset())[ FD ]
Line_13 $$ final Document document1 = fragmentedContent.getAfter()-->Line_35 $$ final TextRange afterRange = new TextRange(document1.getLineStartOffset(lineNumbers.getAfter().getStartOffset()), document1.getLineEndOffset(lineNumbers.getAfter().getEndOffset()))[ FD ]
Line_19 $$ lines = new BeforeAfter<Integer>(lines.getBefore() + 1, lines.getAfter() + 1)-->Line_25 $$ newConvertor.put(lines.getAfter(), lineNumbers.getAfter().getStartOffset())[ FD ]
Line_43 $$ if (!expandedRanges.isEmpty()) -->Line_45 $$ if (sbOld.length() > 0) [ CD ]
Line_51 $$ if (sbNew.length() > 0) -->Line_52 $$ if (document1.getLineEndOffset(last.getAfter().getEndOffset()) != document1.getTextLength()) [ CD ]
