Line_3 $$ if (key != null) -->Line_4 $$ return key[ CD ]
Line_2 $$ private static String key(String key, double from, double to) -->Line_10 $$ return sb.toString()[ CD ]
Line_2 $$ private static String key(String key, double from, double to) -->Line_7 $$ sb.append(from == 0 ? "*" : from)[ CD ]
Line_2 $$ private static String key(String key, double from, double to) -->Line_9 $$ sb.append(Double.isInfinite(to) ? "*" : to)[ FD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_10 $$ return sb.toString()[ FD ]
Line_2 $$ private static String key(String key, double from, double to) -->Line_3 $$ if (key != null) [ CD ]
Line_2 $$ private static String key(String key, double from, double to) -->Line_3 $$ if (key != null) [ FD ]
Line_2 $$ private static String key(String key, double from, double to) -->Line_8 $$ sb.append("-")[ CD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_8 $$ sb.append("-")[ FD ]
Line_2 $$ private static String key(String key, double from, double to) -->Line_9 $$ sb.append(Double.isInfinite(to) ? "*" : to)[ CD ]
Line_2 $$ private static String key(String key, double from, double to) -->Line_6 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_9 $$ sb.append(Double.isInfinite(to) ? "*" : to)[ FD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_7 $$ sb.append(from == 0 ? "*" : from)[ FD ]
