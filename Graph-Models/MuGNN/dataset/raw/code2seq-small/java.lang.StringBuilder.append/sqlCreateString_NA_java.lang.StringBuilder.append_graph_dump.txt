Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_51 $$ if (dialect.supportsTableCheck()) [ FD ]
Line_11 $$ Column col = (Column) iter.next()-->Line_31 $$ String keyName = Constraint.generateName("UK_", this, col)[ FD ]
Line_10 $$ while (iter.hasNext()) -->Line_40 $$ if (columnComment != null) [ CD ]
Line_39 $$ String columnComment = col.getComment()-->Line_40 $$ if (columnComment != null) [ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder(hasPrimaryKey() ? dialect.getCreateTableString() : dialect.getCreateMultisetTableString()).append(' ').append(getQualifiedName(dialect, defaultCatalog, defaultSchema)).append(" (")-->Line_22 $$ buf.append(" default ").append(defaultValue)[ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder(hasPrimaryKey() ? dialect.getCreateTableString() : dialect.getCreateMultisetTableString()).append(' ').append(getQualifiedName(dialect, defaultCatalog, defaultSchema)).append(" (")-->Line_53 $$ buf.append(", check (").append(checkConstraint).append(')')[ FD ]
Line_31 $$ String keyName = Constraint.generateName("UK_", this, col)-->Line_32 $$ UniqueKey uk = getOrCreateUniqueKey(keyName)[ FD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_14 $$ if (dialect.getIdentityColumnSupport().hasDataTypeInIdentityColumn()) [ FD ]
Line_4 $$ boolean identityColumn = idValue != null && idValue.isIdentityColumn(p.getIdentifierGeneratorFactory(), dialect)-->Line_13 $$ if (identityColumn && col.getQuotedName(dialect).equals(pkname)) [ FD ]
Line_11 $$ Column col = (Column) iter.next()-->Line_30 $$ if (col.isUnique()) [ FD ]
Line_13 $$ if (identityColumn && col.getQuotedName(dialect).equals(pkname)) -->Line_24 $$ if (col.isNullable()) [ CD ]
Line_13 $$ if (identityColumn && col.getQuotedName(dialect).equals(pkname)) -->Line_17 $$ buf.append(' ').append(dialect.getIdentityColumnSupport().getIdentityColumnString(col.getSqlTypeCode(p)))[ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder(hasPrimaryKey() ? dialect.getCreateTableString() : dialect.getCreateMultisetTableString()).append(' ').append(getQualifiedName(dialect, defaultCatalog, defaultSchema)).append(" (")-->Line_12 $$ buf.append(col.getQuotedName(dialect)).append(' ')[ FD ]
Line_10 $$ while (iter.hasNext()) -->Line_30 $$ if (col.isUnique()) [ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder(hasPrimaryKey() ? dialect.getCreateTableString() : dialect.getCreateMultisetTableString()).append(' ').append(getQualifiedName(dialect, defaultCatalog, defaultSchema)).append(" (")-->Line_60 $$ return buf.append(dialect.getTableTypeString()).toString()[ FD ]
Line_43 $$ if (iter.hasNext()) -->Line_44 $$ buf.append(", ")[ CD ]
Line_7 $$ pkname = ((Column) getPrimaryKey().getColumnIterator().next()).getQuotedName(dialect)-->Line_13 $$ if (identityColumn && col.getQuotedName(dialect).equals(pkname)) [ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder(hasPrimaryKey() ? dialect.getCreateTableString() : dialect.getCreateMultisetTableString()).append(' ').append(getQualifiedName(dialect, defaultCatalog, defaultSchema)).append(" (")-->Line_48 $$ buf.append(", ").append(getPrimaryKey().sqlConstraintString(dialect))[ FD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_60 $$ return buf.append(dialect.getTableTypeString()).toString()[ FD ]
Line_13 $$ if (identityColumn && col.getQuotedName(dialect).equals(pkname)) -->Line_21 $$ if (defaultValue != null) [ CD ]
Line_11 $$ Column col = (Column) iter.next()-->Line_24 $$ if (col.isNullable()) [ FD ]
Line_9 $$ Iterator iter = getColumnIterator()-->Line_10 $$ while (iter.hasNext()) [ FD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_12 $$ buf.append(col.getQuotedName(dialect)).append(' ')[ FD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_60 $$ return buf.append(dialect.getTableTypeString()).toString()[ CD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_58 $$ buf.append(dialect.getTableComment(comment))[ FD ]
Line_11 $$ Column col = (Column) iter.next()-->Line_33 $$ uk.addColumn(col)[ FD ]
Line_21 $$ if (defaultValue != null) -->Line_22 $$ buf.append(" default ").append(defaultValue)[ CD ]
Line_32 $$ UniqueKey uk = getOrCreateUniqueKey(keyName)-->Line_33 $$ uk.addColumn(col)[ FD ]
Line_11 $$ Column col = (Column) iter.next()-->Line_37 $$ buf.append(" check (").append(col.getCheckConstraint()).append(")")[ FD ]
Line_5 $$ String pkname = null-->Line_13 $$ if (identityColumn && col.getQuotedName(dialect).equals(pkname)) [ FD ]
Line_13 $$ if (identityColumn && col.getQuotedName(dialect).equals(pkname)) -->Line_19 $$ buf.append(col.getSqlType(dialect, p))[ CD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_34 $$ buf.append(dialect.getUniqueDelegate().getColumnDefinitionUniquenessFragment(col))[ FD ]
Line_5 $$ String pkname = null-->Line_7 $$ pkname = ((Column) getPrimaryKey().getColumnIterator().next()).getQuotedName(dialect)[ FD ]
Line_4 $$ boolean identityColumn = idValue != null && idValue.isIdentityColumn(p.getIdentifierGeneratorFactory(), dialect)-->Line_6 $$ if (hasPrimaryKey() && identityColumn) [ FD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_57 $$ if (comment != null) [ CD ]
Line_30 $$ if (col.isUnique()) -->Line_34 $$ buf.append(dialect.getUniqueDelegate().getColumnDefinitionUniquenessFragment(col))[ CD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_6 $$ if (hasPrimaryKey() && identityColumn) [ CD ]
Line_24 $$ if (col.isNullable()) -->Line_27 $$ buf.append(" not null")[ CD ]
Line_11 $$ Column col = (Column) iter.next()-->Line_34 $$ buf.append(dialect.getUniqueDelegate().getColumnDefinitionUniquenessFragment(col))[ FD ]
Line_10 $$ while (iter.hasNext()) -->Line_36 $$ if (col.hasCheckConstraint() && dialect.supportsColumnCheck()) [ CD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_7 $$ pkname = ((Column) getPrimaryKey().getColumnIterator().next()).getQuotedName(dialect)[ FD ]
Line_9 $$ Iterator iter = getColumnIterator()-->Line_43 $$ if (iter.hasNext()) [ FD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_47 $$ if (hasPrimaryKey()) [ CD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_19 $$ buf.append(col.getSqlType(dialect, p))[ FD ]
Line_57 $$ if (comment != null) -->Line_58 $$ buf.append(dialect.getTableComment(comment))[ CD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_56 $$ buf.append(')')[ CD ]
Line_11 $$ Column col = (Column) iter.next()-->Line_15 $$ buf.append(col.getSqlType(dialect, p))[ FD ]
Line_9 $$ Iterator iter = getColumnIterator()-->Line_11 $$ Column col = (Column) iter.next()[ FD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_9 $$ Iterator iter = getColumnIterator()[ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder(hasPrimaryKey() ? dialect.getCreateTableString() : dialect.getCreateMultisetTableString()).append(' ').append(getQualifiedName(dialect, defaultCatalog, defaultSchema)).append(" (")-->Line_58 $$ buf.append(dialect.getTableComment(comment))[ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder(hasPrimaryKey() ? dialect.getCreateTableString() : dialect.getCreateMultisetTableString()).append(' ').append(getQualifiedName(dialect, defaultCatalog, defaultSchema)).append(" (")-->Line_56 $$ buf.append(')')[ FD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_3 $$ StringBuilder buf = new StringBuilder(hasPrimaryKey() ? dialect.getCreateTableString() : dialect.getCreateMultisetTableString()).append(' ').append(getQualifiedName(dialect, defaultCatalog, defaultSchema)).append(" (")[ CD ]
Line_13 $$ if (identityColumn && col.getQuotedName(dialect).equals(pkname)) -->Line_14 $$ if (dialect.getIdentityColumnSupport().hasDataTypeInIdentityColumn()) [ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder(hasPrimaryKey() ? dialect.getCreateTableString() : dialect.getCreateMultisetTableString()).append(' ').append(getQualifiedName(dialect, defaultCatalog, defaultSchema)).append(" (")-->Line_27 $$ buf.append(" not null")[ FD ]
Line_40 $$ if (columnComment != null) -->Line_41 $$ buf.append(dialect.getColumnComment(columnComment))[ CD ]
Line_30 $$ if (col.isUnique()) -->Line_32 $$ UniqueKey uk = getOrCreateUniqueKey(keyName)[ CD ]
Line_10 $$ while (iter.hasNext()) -->Line_13 $$ if (identityColumn && col.getQuotedName(dialect).equals(pkname)) [ CD ]
Line_39 $$ String columnComment = col.getComment()-->Line_41 $$ buf.append(dialect.getColumnComment(columnComment))[ FD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_4 $$ boolean identityColumn = idValue != null && idValue.isIdentityColumn(p.getIdentifierGeneratorFactory(), dialect)[ FD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_4 $$ boolean identityColumn = idValue != null && idValue.isIdentityColumn(p.getIdentifierGeneratorFactory(), dialect)[ CD ]
Line_11 $$ Column col = (Column) iter.next()-->Line_12 $$ buf.append(col.getQuotedName(dialect)).append(' ')[ FD ]
Line_10 $$ while (iter.hasNext()) -->Line_11 $$ Column col = (Column) iter.next()[ CD ]
Line_13 $$ if (identityColumn && col.getQuotedName(dialect).equals(pkname)) -->Line_20 $$ String defaultValue = col.getDefaultValue()[ CD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_5 $$ String pkname = null[ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder(hasPrimaryKey() ? dialect.getCreateTableString() : dialect.getCreateMultisetTableString()).append(' ').append(getQualifiedName(dialect, defaultCatalog, defaultSchema)).append(" (")-->Line_15 $$ buf.append(col.getSqlType(dialect, p))[ FD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_10 $$ while (iter.hasNext()) [ CD ]
Line_11 $$ Column col = (Column) iter.next()-->Line_13 $$ if (identityColumn && col.getQuotedName(dialect).equals(pkname)) [ FD ]
Line_11 $$ Column col = (Column) iter.next()-->Line_36 $$ if (col.hasCheckConstraint() && dialect.supportsColumnCheck()) [ FD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_50 $$ buf.append(dialect.getUniqueDelegate().getTableCreationUniqueConstraintsFragment(this))[ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder(hasPrimaryKey() ? dialect.getCreateTableString() : dialect.getCreateMultisetTableString()).append(' ').append(getQualifiedName(dialect, defaultCatalog, defaultSchema)).append(" (")-->Line_25 $$ buf.append(dialect.getNullColumnString())[ FD ]
Line_6 $$ if (hasPrimaryKey() && identityColumn) -->Line_7 $$ pkname = ((Column) getPrimaryKey().getColumnIterator().next()).getQuotedName(dialect)[ CD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_50 $$ buf.append(dialect.getUniqueDelegate().getTableCreationUniqueConstraintsFragment(this))[ FD ]
Line_47 $$ if (hasPrimaryKey()) -->Line_48 $$ buf.append(", ").append(getPrimaryKey().sqlConstraintString(dialect))[ CD ]
Line_14 $$ if (dialect.getIdentityColumnSupport().hasDataTypeInIdentityColumn()) -->Line_15 $$ buf.append(col.getSqlType(dialect, p))[ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder(hasPrimaryKey() ? dialect.getCreateTableString() : dialect.getCreateMultisetTableString()).append(' ').append(getQualifiedName(dialect, defaultCatalog, defaultSchema)).append(" (")-->Line_19 $$ buf.append(col.getSqlType(dialect, p))[ FD ]
Line_36 $$ if (col.hasCheckConstraint() && dialect.supportsColumnCheck()) -->Line_37 $$ buf.append(" check (").append(col.getCheckConstraint()).append(")")[ CD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_17 $$ buf.append(' ').append(dialect.getIdentityColumnSupport().getIdentityColumnString(col.getSqlTypeCode(p)))[ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder(hasPrimaryKey() ? dialect.getCreateTableString() : dialect.getCreateMultisetTableString()).append(' ').append(getQualifiedName(dialect, defaultCatalog, defaultSchema)).append(" (")-->Line_41 $$ buf.append(dialect.getColumnComment(columnComment))[ FD ]
Line_20 $$ String defaultValue = col.getDefaultValue()-->Line_21 $$ if (defaultValue != null) [ FD ]
Line_10 $$ while (iter.hasNext()) -->Line_43 $$ if (iter.hasNext()) [ CD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_13 $$ if (identityColumn && col.getQuotedName(dialect).equals(pkname)) [ FD ]
Line_10 $$ while (iter.hasNext()) -->Line_12 $$ buf.append(col.getQuotedName(dialect)).append(' ')[ CD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_15 $$ buf.append(col.getSqlType(dialect, p))[ FD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_48 $$ buf.append(", ").append(getPrimaryKey().sqlConstraintString(dialect))[ FD ]
Line_10 $$ while (iter.hasNext()) -->Line_39 $$ String columnComment = col.getComment()[ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder(hasPrimaryKey() ? dialect.getCreateTableString() : dialect.getCreateMultisetTableString()).append(' ').append(getQualifiedName(dialect, defaultCatalog, defaultSchema)).append(" (")-->Line_50 $$ buf.append(dialect.getUniqueDelegate().getTableCreationUniqueConstraintsFragment(this))[ FD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_36 $$ if (col.hasCheckConstraint() && dialect.supportsColumnCheck()) [ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder(hasPrimaryKey() ? dialect.getCreateTableString() : dialect.getCreateMultisetTableString()).append(' ').append(getQualifiedName(dialect, defaultCatalog, defaultSchema)).append(" (")-->Line_34 $$ buf.append(dialect.getUniqueDelegate().getColumnDefinitionUniquenessFragment(col))[ FD ]
Line_11 $$ Column col = (Column) iter.next()-->Line_39 $$ String columnComment = col.getComment()[ FD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_41 $$ buf.append(dialect.getColumnComment(columnComment))[ FD ]
Line_20 $$ String defaultValue = col.getDefaultValue()-->Line_22 $$ buf.append(" default ").append(defaultValue)[ FD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_25 $$ buf.append(dialect.getNullColumnString())[ FD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_51 $$ if (dialect.supportsTableCheck()) [ CD ]
Line_11 $$ Column col = (Column) iter.next()-->Line_20 $$ String defaultValue = col.getDefaultValue()[ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder(hasPrimaryKey() ? dialect.getCreateTableString() : dialect.getCreateMultisetTableString()).append(' ').append(getQualifiedName(dialect, defaultCatalog, defaultSchema)).append(" (")-->Line_37 $$ buf.append(" check (").append(col.getCheckConstraint()).append(")")[ FD ]
Line_24 $$ if (col.isNullable()) -->Line_25 $$ buf.append(dialect.getNullColumnString())[ CD ]
Line_52 $$ for (String checkConstraint : checkConstraints) -->Line_53 $$ buf.append(", check (").append(checkConstraint).append(')')[ FD ]
Line_30 $$ if (col.isUnique()) -->Line_31 $$ String keyName = Constraint.generateName("UK_", this, col)[ CD ]
Line_30 $$ if (col.isUnique()) -->Line_33 $$ uk.addColumn(col)[ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder(hasPrimaryKey() ? dialect.getCreateTableString() : dialect.getCreateMultisetTableString()).append(' ').append(getQualifiedName(dialect, defaultCatalog, defaultSchema)).append(" (")-->Line_44 $$ buf.append(", ")[ FD ]
Line_2 $$ public String sqlCreateString(Dialect dialect, Mapping p, String defaultCatalog, String defaultSchema) -->Line_3 $$ StringBuilder buf = new StringBuilder(hasPrimaryKey() ? dialect.getCreateTableString() : dialect.getCreateMultisetTableString()).append(' ').append(getQualifiedName(dialect, defaultCatalog, defaultSchema)).append(" (")[ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder(hasPrimaryKey() ? dialect.getCreateTableString() : dialect.getCreateMultisetTableString()).append(' ').append(getQualifiedName(dialect, defaultCatalog, defaultSchema)).append(" (")-->Line_17 $$ buf.append(' ').append(dialect.getIdentityColumnSupport().getIdentityColumnString(col.getSqlTypeCode(p)))[ FD ]
Line_11 $$ Column col = (Column) iter.next()-->Line_19 $$ buf.append(col.getSqlType(dialect, p))[ FD ]
Line_11 $$ Column col = (Column) iter.next()-->Line_17 $$ buf.append(' ').append(dialect.getIdentityColumnSupport().getIdentityColumnString(col.getSqlTypeCode(p)))[ FD ]
