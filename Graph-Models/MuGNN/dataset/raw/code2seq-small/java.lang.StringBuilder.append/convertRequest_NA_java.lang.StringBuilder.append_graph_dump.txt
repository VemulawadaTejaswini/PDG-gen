Line_2 $$ private static Pair<WrapperRequest, List<DiffChange>> convertRequest(@NotNull SvnPropertiesDiffRequest request, boolean embedded) -->Line_4 $$ StringBuilder builder1 = new StringBuilder()[ CD ]
Line_16 $$ int appendedLines = Math.max(lines1, lines2) + 1-->Line_18 $$ for (int i = lines1; i < appendedLines; i++) [ FD ]
Line_8 $$ for (PropertyRecord record : records) -->Line_10 $$ String before = StringUtil.notNullize(record.getBefore())[ FD ]
Line_10 $$ String before = StringUtil.notNullize(record.getBefore())-->Line_12 $$ builder1.append(before)[ FD ]
Line_16 $$ int appendedLines = Math.max(lines1, lines2) + 1-->Line_21 $$ for (int i = lines2; i < appendedLines; i++) [ FD ]
Line_2 $$ private static Pair<WrapperRequest, List<DiffChange>> convertRequest(@NotNull SvnPropertiesDiffRequest request, boolean embedded) -->Line_7 $$ int totalLines = 0[ CD ]
Line_14 $$ int lines1 = StringUtil.countNewLines(before)-->Line_16 $$ int appendedLines = Math.max(lines1, lines2) + 1[ FD ]
Line_2 $$ private static Pair<WrapperRequest, List<DiffChange>> convertRequest(@NotNull SvnPropertiesDiffRequest request, boolean embedded) -->Line_26 $$ Document document1 = new DocumentImpl(builder1)[ CD ]
Line_6 $$ List<DiffChange> diffChanges = new ArrayList<DiffChange>()-->Line_28 $$ return Pair.create(new WrapperRequest(request, document1, document2, embedded), diffChanges)[ FD ]
Line_4 $$ StringBuilder builder1 = new StringBuilder()-->Line_19 $$ builder1.append('\n')[ FD ]
Line_7 $$ int totalLines = 0-->Line_17 $$ totalLines += appendedLines[ FD ]
Line_11 $$ String after = StringUtil.notNullize(record.getAfter())-->Line_15 $$ int lines2 = StringUtil.countNewLines(after)[ FD ]
Line_5 $$ StringBuilder builder2 = new StringBuilder()-->Line_13 $$ builder2.append(after)[ FD ]
Line_2 $$ private static Pair<WrapperRequest, List<DiffChange>> convertRequest(@NotNull SvnPropertiesDiffRequest request, boolean embedded) -->Line_6 $$ List<DiffChange> diffChanges = new ArrayList<DiffChange>()[ CD ]
Line_16 $$ int appendedLines = Math.max(lines1, lines2) + 1-->Line_17 $$ totalLines += appendedLines[ FD ]
Line_2 $$ private static Pair<WrapperRequest, List<DiffChange>> convertRequest(@NotNull SvnPropertiesDiffRequest request, boolean embedded) -->Line_27 $$ Document document2 = new DocumentImpl(builder2)[ CD ]
Line_2 $$ private static Pair<WrapperRequest, List<DiffChange>> convertRequest(@NotNull SvnPropertiesDiffRequest request, boolean embedded) -->Line_3 $$ List<PropertyRecord> records = collectRecords(request)[ CD ]
Line_2 $$ private static Pair<WrapperRequest, List<DiffChange>> convertRequest(@NotNull SvnPropertiesDiffRequest request, boolean embedded) -->Line_28 $$ return Pair.create(new WrapperRequest(request, document1, document2, embedded), diffChanges)[ CD ]
Line_6 $$ List<DiffChange> diffChanges = new ArrayList<DiffChange>()-->Line_24 $$ diffChanges.add(new DiffChange(record, start, totalLines, start, totalLines))[ FD ]
Line_10 $$ String before = StringUtil.notNullize(record.getBefore())-->Line_14 $$ int lines1 = StringUtil.countNewLines(before)[ FD ]
Line_2 $$ private static Pair<WrapperRequest, List<DiffChange>> convertRequest(@NotNull SvnPropertiesDiffRequest request, boolean embedded) -->Line_3 $$ List<PropertyRecord> records = collectRecords(request)[ FD ]
Line_18 $$ for (int i = lines1; i < appendedLines; i++) -->Line_21 $$ for (int i = lines2; i < appendedLines; i++) [ FD ]
Line_4 $$ StringBuilder builder1 = new StringBuilder()-->Line_12 $$ builder1.append(before)[ FD ]
Line_21 $$ for (int i = lines2; i < appendedLines; i++) -->Line_22 $$ builder2.append('\n')[ CD ]
Line_15 $$ int lines2 = StringUtil.countNewLines(after)-->Line_16 $$ int appendedLines = Math.max(lines1, lines2) + 1[ FD ]
Line_5 $$ StringBuilder builder2 = new StringBuilder()-->Line_22 $$ builder2.append('\n')[ FD ]
Line_8 $$ for (PropertyRecord record : records) -->Line_11 $$ String after = StringUtil.notNullize(record.getAfter())[ FD ]
Line_11 $$ String after = StringUtil.notNullize(record.getAfter())-->Line_13 $$ builder2.append(after)[ FD ]
Line_2 $$ private static Pair<WrapperRequest, List<DiffChange>> convertRequest(@NotNull SvnPropertiesDiffRequest request, boolean embedded) -->Line_5 $$ StringBuilder builder2 = new StringBuilder()[ CD ]
Line_18 $$ for (int i = lines1; i < appendedLines; i++) -->Line_19 $$ builder1.append('\n')[ CD ]
