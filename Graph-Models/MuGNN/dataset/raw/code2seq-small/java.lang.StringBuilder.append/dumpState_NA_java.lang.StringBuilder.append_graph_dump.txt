Line_3 $$ StringBuilder result = new StringBuilder()-->Line_11 $$ return result.toString()[ FD ]
Line_3 $$ StringBuilder result = new StringBuilder()-->Line_4 $$ result.append(", intervals:\n")[ FD ]
Line_2 $$ public String dumpState() -->Line_4 $$ result.append(", intervals:\n")[ CD ]
Line_2 $$ public String dumpState() -->Line_11 $$ return result.toString()[ CD ]
Line_8 $$ if (result.length() > 0) -->Line_9 $$ result.setLength(result.length() - 1)[ CD ]
Line_3 $$ StringBuilder result = new StringBuilder()-->Line_8 $$ if (result.length() > 0) [ FD ]
Line_2 $$ public String dumpState() -->Line_3 $$ StringBuilder result = new StringBuilder()[ CD ]
Line_3 $$ StringBuilder result = new StringBuilder()-->Line_9 $$ result.setLength(result.length() - 1)[ FD ]
Line_2 $$ public String dumpState() -->Line_5 $$ for (int line = 0; line < getLineCount(); line++) [ CD ]
Line_5 $$ for (int line = 0; line < getLineCount(); line++) -->Line_6 $$ result.append(line).append(": ").append(getLineStartOffset(line)).append("-").append(getLineEndOffset(line)).append(", ")[ FD ]
Line_3 $$ StringBuilder result = new StringBuilder()-->Line_6 $$ result.append(line).append(": ").append(getLineStartOffset(line)).append("-").append(getLineEndOffset(line)).append(", ")[ FD ]
Line_2 $$ public String dumpState() -->Line_8 $$ if (result.length() > 0) [ CD ]
Line_5 $$ for (int line = 0; line < getLineCount(); line++) -->Line_6 $$ result.append(line).append(": ").append(getLineStartOffset(line)).append("-").append(getLineEndOffset(line)).append(", ")[ CD ]
