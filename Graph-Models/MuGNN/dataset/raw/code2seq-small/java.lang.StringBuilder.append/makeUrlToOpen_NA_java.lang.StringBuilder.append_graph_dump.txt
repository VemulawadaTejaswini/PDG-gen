Line_2 $$ private static String makeUrlToOpen(@Nullable Editor editor, @NotNull String relativePath, @NotNull String branch, @NotNull String githubRemoteUrl) -->Line_11 $$ builder.append(githubRepoUrl).append("/blob/").append(branch).append(relativePath)[ FD ]
Line_4 $$ final String githubRepoUrl = GithubUrlUtil.makeGithubRepoUrlFromRemoteUrl(githubRemoteUrl)-->Line_11 $$ builder.append(githubRepoUrl).append("/blob/").append(branch).append(relativePath)[ FD ]
Line_2 $$ private static String makeUrlToOpen(@Nullable Editor editor, @NotNull String relativePath, @NotNull String branch, @NotNull String githubRemoteUrl) -->Line_18 $$ if (editor.getDocument().getLineStartOffset(end - 1) == selectionEnd) [ FD ]
Line_17 $$ int end = editor.getDocument().getLineNumber(selectionEnd) + 1-->Line_19 $$ end -= 1[ FD ]
Line_13 $$ if (editor != null && editor.getDocument().getLineCount() >= 1) -->Line_15 $$ final int begin = editor.getDocument().getLineNumber(selectionModel.getSelectionStart()) + 1[ CD ]
Line_16 $$ final int selectionEnd = selectionModel.getSelectionEnd()-->Line_18 $$ if (editor.getDocument().getLineStartOffset(end - 1) == selectionEnd) [ FD ]
Line_19 $$ end -= 1-->Line_21 $$ builder.append("#L").append(begin).append("-L").append(end)[ FD ]
Line_2 $$ private static String makeUrlToOpen(@Nullable Editor editor, @NotNull String relativePath, @NotNull String branch, @NotNull String githubRemoteUrl) -->Line_9 $$ builder.append(githubRepoUrl).append("/tree/").append(branch)[ FD ]
Line_14 $$ SelectionModel selectionModel = editor.getSelectionModel()-->Line_15 $$ final int begin = editor.getDocument().getLineNumber(selectionModel.getSelectionStart()) + 1[ FD ]
Line_3 $$ final StringBuilder builder = new StringBuilder()-->Line_21 $$ builder.append("#L").append(begin).append("-L").append(end)[ FD ]
Line_2 $$ private static String makeUrlToOpen(@Nullable Editor editor, @NotNull String relativePath, @NotNull String branch, @NotNull String githubRemoteUrl) -->Line_8 $$ if (StringUtil.isEmptyOrSpaces(relativePath)) [ FD ]
Line_13 $$ if (editor != null && editor.getDocument().getLineCount() >= 1) -->Line_21 $$ builder.append("#L").append(begin).append("-L").append(end)[ CD ]
Line_2 $$ private static String makeUrlToOpen(@Nullable Editor editor, @NotNull String relativePath, @NotNull String branch, @NotNull String githubRemoteUrl) -->Line_23 $$ return builder.toString()[ CD ]
Line_13 $$ if (editor != null && editor.getDocument().getLineCount() >= 1) -->Line_14 $$ SelectionModel selectionModel = editor.getSelectionModel()[ CD ]
Line_2 $$ private static String makeUrlToOpen(@Nullable Editor editor, @NotNull String relativePath, @NotNull String branch, @NotNull String githubRemoteUrl) -->Line_3 $$ final StringBuilder builder = new StringBuilder()[ CD ]
Line_8 $$ if (StringUtil.isEmptyOrSpaces(relativePath)) -->Line_11 $$ builder.append(githubRepoUrl).append("/blob/").append(branch).append(relativePath)[ CD ]
Line_17 $$ int end = editor.getDocument().getLineNumber(selectionEnd) + 1-->Line_21 $$ builder.append("#L").append(begin).append("-L").append(end)[ FD ]
Line_8 $$ if (StringUtil.isEmptyOrSpaces(relativePath)) -->Line_9 $$ builder.append(githubRepoUrl).append("/tree/").append(branch)[ CD ]
Line_2 $$ private static String makeUrlToOpen(@Nullable Editor editor, @NotNull String relativePath, @NotNull String branch, @NotNull String githubRemoteUrl) -->Line_17 $$ int end = editor.getDocument().getLineNumber(selectionEnd) + 1[ FD ]
Line_2 $$ private static String makeUrlToOpen(@Nullable Editor editor, @NotNull String relativePath, @NotNull String branch, @NotNull String githubRemoteUrl) -->Line_4 $$ final String githubRepoUrl = GithubUrlUtil.makeGithubRepoUrlFromRemoteUrl(githubRemoteUrl)[ FD ]
Line_14 $$ SelectionModel selectionModel = editor.getSelectionModel()-->Line_16 $$ final int selectionEnd = selectionModel.getSelectionEnd()[ FD ]
Line_3 $$ final StringBuilder builder = new StringBuilder()-->Line_11 $$ builder.append(githubRepoUrl).append("/blob/").append(branch).append(relativePath)[ FD ]
Line_3 $$ final StringBuilder builder = new StringBuilder()-->Line_23 $$ return builder.toString()[ FD ]
Line_13 $$ if (editor != null && editor.getDocument().getLineCount() >= 1) -->Line_16 $$ final int selectionEnd = selectionModel.getSelectionEnd()[ CD ]
Line_3 $$ final StringBuilder builder = new StringBuilder()-->Line_9 $$ builder.append(githubRepoUrl).append("/tree/").append(branch)[ FD ]
Line_2 $$ private static String makeUrlToOpen(@Nullable Editor editor, @NotNull String relativePath, @NotNull String branch, @NotNull String githubRemoteUrl) -->Line_15 $$ final int begin = editor.getDocument().getLineNumber(selectionModel.getSelectionStart()) + 1[ FD ]
Line_2 $$ private static String makeUrlToOpen(@Nullable Editor editor, @NotNull String relativePath, @NotNull String branch, @NotNull String githubRemoteUrl) -->Line_4 $$ final String githubRepoUrl = GithubUrlUtil.makeGithubRepoUrlFromRemoteUrl(githubRemoteUrl)[ CD ]
Line_2 $$ private static String makeUrlToOpen(@Nullable Editor editor, @NotNull String relativePath, @NotNull String branch, @NotNull String githubRemoteUrl) -->Line_13 $$ if (editor != null && editor.getDocument().getLineCount() >= 1) [ FD ]
Line_2 $$ private static String makeUrlToOpen(@Nullable Editor editor, @NotNull String relativePath, @NotNull String branch, @NotNull String githubRemoteUrl) -->Line_5 $$ if (githubRepoUrl == null) [ CD ]
Line_16 $$ final int selectionEnd = selectionModel.getSelectionEnd()-->Line_17 $$ int end = editor.getDocument().getLineNumber(selectionEnd) + 1[ FD ]
Line_13 $$ if (editor != null && editor.getDocument().getLineCount() >= 1) -->Line_17 $$ int end = editor.getDocument().getLineNumber(selectionEnd) + 1[ CD ]
Line_5 $$ if (githubRepoUrl == null) -->Line_6 $$ return null[ CD ]
Line_2 $$ private static String makeUrlToOpen(@Nullable Editor editor, @NotNull String relativePath, @NotNull String branch, @NotNull String githubRemoteUrl) -->Line_14 $$ SelectionModel selectionModel = editor.getSelectionModel()[ FD ]
Line_4 $$ final String githubRepoUrl = GithubUrlUtil.makeGithubRepoUrlFromRemoteUrl(githubRemoteUrl)-->Line_5 $$ if (githubRepoUrl == null) [ FD ]
Line_2 $$ private static String makeUrlToOpen(@Nullable Editor editor, @NotNull String relativePath, @NotNull String branch, @NotNull String githubRemoteUrl) -->Line_8 $$ if (StringUtil.isEmptyOrSpaces(relativePath)) [ CD ]
Line_2 $$ private static String makeUrlToOpen(@Nullable Editor editor, @NotNull String relativePath, @NotNull String branch, @NotNull String githubRemoteUrl) -->Line_13 $$ if (editor != null && editor.getDocument().getLineCount() >= 1) [ CD ]
Line_18 $$ if (editor.getDocument().getLineStartOffset(end - 1) == selectionEnd) -->Line_19 $$ end -= 1[ CD ]
Line_4 $$ final String githubRepoUrl = GithubUrlUtil.makeGithubRepoUrlFromRemoteUrl(githubRemoteUrl)-->Line_9 $$ builder.append(githubRepoUrl).append("/tree/").append(branch)[ FD ]
Line_15 $$ final int begin = editor.getDocument().getLineNumber(selectionModel.getSelectionStart()) + 1-->Line_21 $$ builder.append("#L").append(begin).append("-L").append(end)[ FD ]
Line_13 $$ if (editor != null && editor.getDocument().getLineCount() >= 1) -->Line_18 $$ if (editor.getDocument().getLineStartOffset(end - 1) == selectionEnd) [ CD ]
