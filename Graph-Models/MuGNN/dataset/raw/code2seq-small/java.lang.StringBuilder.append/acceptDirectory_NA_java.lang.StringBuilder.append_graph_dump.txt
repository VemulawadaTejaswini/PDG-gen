Line_5 $$ for (final VirtualFile child : children) -->Line_15 $$ accept(child, fileRoot, _filePath)[ FD ]
Line_2 $$ protected void acceptDirectory(final VirtualFile file, final String fileRoot, final String filePath) -->Line_15 $$ accept(child, fileRoot, _filePath)[ FD ]
Line_7 $$ final String _filePath-->Line_11 $$ _filePath = buf.toString()[ FD ]
Line_8 $$ final StringBuilder buf = StringBuilderSpinAllocator.alloc()-->Line_10 $$ buf.append(filePath).append("/").append(name)[ FD ]
Line_8 $$ final StringBuilder buf = StringBuilderSpinAllocator.alloc()-->Line_13 $$ StringBuilderSpinAllocator.dispose(buf)[ FD ]
Line_2 $$ protected void acceptDirectory(final VirtualFile file, final String fileRoot, final String filePath) -->Line_4 $$ final VirtualFile[] children = file.getChildren()[ CD ]
Line_6 $$ final String name = child.getName()-->Line_10 $$ buf.append(filePath).append("/").append(name)[ FD ]
Line_11 $$ _filePath = buf.toString()-->Line_15 $$ accept(child, fileRoot, _filePath)[ FD ]
Line_7 $$ final String _filePath-->Line_15 $$ accept(child, fileRoot, _filePath)[ FD ]
Line_2 $$ protected void acceptDirectory(final VirtualFile file, final String fileRoot, final String filePath) -->Line_3 $$ ProgressManager.checkCanceled()[ CD ]
Line_2 $$ protected void acceptDirectory(final VirtualFile file, final String fileRoot, final String filePath) -->Line_10 $$ buf.append(filePath).append("/").append(name)[ FD ]
Line_2 $$ protected void acceptDirectory(final VirtualFile file, final String fileRoot, final String filePath) -->Line_4 $$ final VirtualFile[] children = file.getChildren()[ FD ]
Line_8 $$ final StringBuilder buf = StringBuilderSpinAllocator.alloc()-->Line_11 $$ _filePath = buf.toString()[ FD ]
Line_5 $$ for (final VirtualFile child : children) -->Line_6 $$ final String name = child.getName()[ FD ]
