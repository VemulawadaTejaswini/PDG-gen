Line_2 $$ private static boolean ensureCouldCloseIfUnableToSave(@NotNull Project project) -->Line_3 $$ UnableToSaveProjectNotification[] notifications = NotificationsManager.getNotificationsManager().getNotificationsOfType(UnableToSaveProjectNotification.class, project)[ CD ]
Line_7 $$ StringBuilder message = new StringBuilder()-->Line_9 $$ message.append("\n\nRead-only files:\n")[ FD ]
Line_2 $$ private static boolean ensureCouldCloseIfUnableToSave(@NotNull Project project) -->Line_4 $$ if (notifications.length == 0) [ CD ]
Line_2 $$ private static boolean ensureCouldCloseIfUnableToSave(@NotNull Project project) -->Line_10 $$ int count = 0[ CD ]
Line_7 $$ StringBuilder message = new StringBuilder()-->Line_20 $$ return Messages.showYesNoDialog(project, message.toString(), "Unsaved Project", Messages.getWarningIcon()) == Messages.YES[ FD ]
Line_2 $$ private static boolean ensureCouldCloseIfUnableToSave(@NotNull Project project) -->Line_20 $$ return Messages.showYesNoDialog(project, message.toString(), "Unsaved Project", Messages.getWarningIcon()) == Messages.YES[ CD ]
Line_7 $$ StringBuilder message = new StringBuilder()-->Line_8 $$ message.append(String.format("%s was unable to save some project files,\nare you sure you want to close this project anyway?", ApplicationNamesInfo.getInstance().getProductName()))[ FD ]
Line_4 $$ if (notifications.length == 0) -->Line_5 $$ return true[ CD ]
Line_13 $$ if (count == 10) -->Line_16 $$ message.append(file.getPath()).append('\n')[ CD ]
Line_2 $$ private static boolean ensureCouldCloseIfUnableToSave(@NotNull Project project) -->Line_7 $$ StringBuilder message = new StringBuilder()[ CD ]
Line_7 $$ StringBuilder message = new StringBuilder()-->Line_14 $$ message.append('\n').append("and ").append(files.length - count).append(" more").append('\n')[ FD ]
Line_2 $$ private static boolean ensureCouldCloseIfUnableToSave(@NotNull Project project) -->Line_8 $$ message.append(String.format("%s was unable to save some project files,\nare you sure you want to close this project anyway?", ApplicationNamesInfo.getInstance().getProductName()))[ CD ]
Line_2 $$ private static boolean ensureCouldCloseIfUnableToSave(@NotNull Project project) -->Line_20 $$ return Messages.showYesNoDialog(project, message.toString(), "Unsaved Project", Messages.getWarningIcon()) == Messages.YES[ FD ]
Line_2 $$ private static boolean ensureCouldCloseIfUnableToSave(@NotNull Project project) -->Line_9 $$ message.append("\n\nRead-only files:\n")[ CD ]
Line_12 $$ for (VirtualFile file : files) -->Line_16 $$ message.append(file.getPath()).append('\n')[ FD ]
Line_2 $$ private static boolean ensureCouldCloseIfUnableToSave(@NotNull Project project) -->Line_11 $$ VirtualFile[] files = notifications[0].myFiles[ CD ]
Line_2 $$ private static boolean ensureCouldCloseIfUnableToSave(@NotNull Project project) -->Line_3 $$ UnableToSaveProjectNotification[] notifications = NotificationsManager.getNotificationsManager().getNotificationsOfType(UnableToSaveProjectNotification.class, project)[ FD ]
Line_13 $$ if (count == 10) -->Line_14 $$ message.append('\n').append("and ").append(files.length - count).append(" more").append('\n')[ CD ]
Line_13 $$ if (count == 10) -->Line_17 $$ count++[ CD ]
Line_10 $$ int count = 0-->Line_17 $$ count++[ FD ]
Line_7 $$ StringBuilder message = new StringBuilder()-->Line_16 $$ message.append(file.getPath()).append('\n')[ FD ]
Line_10 $$ int count = 0-->Line_13 $$ if (count == 10) [ FD ]
