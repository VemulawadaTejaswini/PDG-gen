Line_11 $$ var = null-->Line_16 $$ builder.append(var)[ FD ]
Line_11 $$ var = null-->Line_28 $$ builder.append(var)[ FD ]
Line_27 $$ if (elvis) -->Line_30 $$ thenBranch.accept(this)[ CD ]
Line_8 $$ if (elvis) -->Line_9 $$ var = createVarByInitializer(condition)[ CD ]
Line_7 $$ final String var-->Line_28 $$ builder.append(var)[ FD ]
Line_2 $$ public void visitConditionalExpression(GrConditionalExpression expression) -->Line_34 $$ if (elseBranch != null) [ CD ]
Line_7 $$ final String var-->Line_11 $$ var = null[ FD ]
Line_14 $$ if (type == null || PsiType.BOOLEAN.equals(TypesUtil.unboxPrimitiveTypeWrapper(type))) -->Line_15 $$ if (elvis) [ CD ]
Line_4 $$ final GrExpression thenBranch = expression.getThenBranch()-->Line_30 $$ thenBranch.accept(this)[ FD ]
Line_2 $$ public void visitConditionalExpression(GrConditionalExpression expression) -->Line_5 $$ final GrExpression elseBranch = expression.getElseBranch()[ CD ]
Line_2 $$ public void visitConditionalExpression(GrConditionalExpression expression) -->Line_3 $$ final GrExpression condition = expression.getCondition()[ FD ]
Line_22 $$ final GroovyResolveResult result = PsiImplUtil.extractUniqueResult(results)-->Line_23 $$ GenerationUtil.invokeMethodByResolveResult(elvis ? factory.createReferenceExpressionFromText(var, expression) : condition, result, "asBoolean", GrExpression.EMPTY_ARRAY, GrNamedArgument.EMPTY_ARRAY, GrClosableBlock.EMPTY_ARRAY, this, expression)[ FD ]
Line_4 $$ final GrExpression thenBranch = expression.getThenBranch()-->Line_26 $$ if (thenBranch != null) [ FD ]
Line_14 $$ if (type == null || PsiType.BOOLEAN.equals(TypesUtil.unboxPrimitiveTypeWrapper(type))) -->Line_21 $$ final GroovyResolveResult[] results = ResolveUtil.getMethodCandidates(type, "asBoolean", expression, PsiType.EMPTY_ARRAY)[ CD ]
Line_2 $$ public void visitConditionalExpression(GrConditionalExpression expression) -->Line_4 $$ final GrExpression thenBranch = expression.getThenBranch()[ FD ]
Line_14 $$ if (type == null || PsiType.BOOLEAN.equals(TypesUtil.unboxPrimitiveTypeWrapper(type))) -->Line_22 $$ final GroovyResolveResult result = PsiImplUtil.extractUniqueResult(results)[ CD ]
Line_8 $$ if (elvis) -->Line_11 $$ var = null[ CD ]
Line_15 $$ if (elvis) -->Line_18 $$ condition.accept(this)[ CD ]
Line_15 $$ if (elvis) -->Line_16 $$ builder.append(var)[ CD ]
Line_7 $$ final String var-->Line_23 $$ GenerationUtil.invokeMethodByResolveResult(elvis ? factory.createReferenceExpressionFromText(var, expression) : condition, result, "asBoolean", GrExpression.EMPTY_ARRAY, GrNamedArgument.EMPTY_ARRAY, GrClosableBlock.EMPTY_ARRAY, this, expression)[ FD ]
Line_2 $$ public void visitConditionalExpression(GrConditionalExpression expression) -->Line_33 $$ builder.append(':')[ CD ]
Line_2 $$ public void visitConditionalExpression(GrConditionalExpression expression) -->Line_6 $$ final boolean elvis = expression instanceof GrElvisExpression[ CD ]
Line_3 $$ final GrExpression condition = expression.getCondition()-->Line_9 $$ var = createVarByInitializer(condition)[ FD ]
Line_2 $$ public void visitConditionalExpression(GrConditionalExpression expression) -->Line_5 $$ final GrExpression elseBranch = expression.getElseBranch()[ FD ]
Line_9 $$ var = createVarByInitializer(condition)-->Line_23 $$ GenerationUtil.invokeMethodByResolveResult(elvis ? factory.createReferenceExpressionFromText(var, expression) : condition, result, "asBoolean", GrExpression.EMPTY_ARRAY, GrNamedArgument.EMPTY_ARRAY, GrClosableBlock.EMPTY_ARRAY, this, expression)[ FD ]
Line_2 $$ public void visitConditionalExpression(GrConditionalExpression expression) -->Line_25 $$ builder.append('?')[ CD ]
Line_7 $$ final String var-->Line_16 $$ builder.append(var)[ FD ]
Line_9 $$ var = createVarByInitializer(condition)-->Line_28 $$ builder.append(var)[ FD ]
Line_2 $$ public void visitConditionalExpression(GrConditionalExpression expression) -->Line_3 $$ final GrExpression condition = expression.getCondition()[ CD ]
Line_2 $$ public void visitConditionalExpression(GrConditionalExpression expression) -->Line_4 $$ final GrExpression thenBranch = expression.getThenBranch()[ CD ]
Line_2 $$ public void visitConditionalExpression(GrConditionalExpression expression) -->Line_14 $$ if (type == null || PsiType.BOOLEAN.equals(TypesUtil.unboxPrimitiveTypeWrapper(type))) [ CD ]
Line_2 $$ public void visitConditionalExpression(GrConditionalExpression expression) -->Line_7 $$ final String var[ CD ]
Line_14 $$ if (type == null || PsiType.BOOLEAN.equals(TypesUtil.unboxPrimitiveTypeWrapper(type))) -->Line_23 $$ GenerationUtil.invokeMethodByResolveResult(elvis ? factory.createReferenceExpressionFromText(var, expression) : condition, result, "asBoolean", GrExpression.EMPTY_ARRAY, GrNamedArgument.EMPTY_ARRAY, GrClosableBlock.EMPTY_ARRAY, this, expression)[ CD ]
Line_2 $$ public void visitConditionalExpression(GrConditionalExpression expression) -->Line_13 $$ final PsiType type = condition.getType()[ CD ]
Line_2 $$ public void visitConditionalExpression(GrConditionalExpression expression) -->Line_21 $$ final GroovyResolveResult[] results = ResolveUtil.getMethodCandidates(type, "asBoolean", expression, PsiType.EMPTY_ARRAY)[ FD ]
Line_9 $$ var = createVarByInitializer(condition)-->Line_16 $$ builder.append(var)[ FD ]
Line_2 $$ public void visitConditionalExpression(GrConditionalExpression expression) -->Line_26 $$ if (thenBranch != null) [ CD ]
Line_13 $$ final PsiType type = condition.getType()-->Line_21 $$ final GroovyResolveResult[] results = ResolveUtil.getMethodCandidates(type, "asBoolean", expression, PsiType.EMPTY_ARRAY)[ FD ]
Line_26 $$ if (thenBranch != null) -->Line_27 $$ if (elvis) [ CD ]
Line_5 $$ final GrExpression elseBranch = expression.getElseBranch()-->Line_35 $$ elseBranch.accept(this)[ FD ]
Line_7 $$ final String var-->Line_9 $$ var = createVarByInitializer(condition)[ FD ]
Line_3 $$ final GrExpression condition = expression.getCondition()-->Line_13 $$ final PsiType type = condition.getType()[ FD ]
Line_2 $$ public void visitConditionalExpression(GrConditionalExpression expression) -->Line_8 $$ if (elvis) [ CD ]
Line_34 $$ if (elseBranch != null) -->Line_35 $$ elseBranch.accept(this)[ CD ]
Line_9 $$ var = createVarByInitializer(condition)-->Line_11 $$ var = null[ FD ]
Line_11 $$ var = null-->Line_23 $$ GenerationUtil.invokeMethodByResolveResult(elvis ? factory.createReferenceExpressionFromText(var, expression) : condition, result, "asBoolean", GrExpression.EMPTY_ARRAY, GrNamedArgument.EMPTY_ARRAY, GrClosableBlock.EMPTY_ARRAY, this, expression)[ FD ]
Line_13 $$ final PsiType type = condition.getType()-->Line_14 $$ if (type == null || PsiType.BOOLEAN.equals(TypesUtil.unboxPrimitiveTypeWrapper(type))) [ FD ]
Line_2 $$ public void visitConditionalExpression(GrConditionalExpression expression) -->Line_23 $$ GenerationUtil.invokeMethodByResolveResult(elvis ? factory.createReferenceExpressionFromText(var, expression) : condition, result, "asBoolean", GrExpression.EMPTY_ARRAY, GrNamedArgument.EMPTY_ARRAY, GrClosableBlock.EMPTY_ARRAY, this, expression)[ FD ]
Line_3 $$ final GrExpression condition = expression.getCondition()-->Line_18 $$ condition.accept(this)[ FD ]
Line_21 $$ final GroovyResolveResult[] results = ResolveUtil.getMethodCandidates(type, "asBoolean", expression, PsiType.EMPTY_ARRAY)-->Line_22 $$ final GroovyResolveResult result = PsiImplUtil.extractUniqueResult(results)[ FD ]
Line_5 $$ final GrExpression elseBranch = expression.getElseBranch()-->Line_34 $$ if (elseBranch != null) [ FD ]
Line_27 $$ if (elvis) -->Line_28 $$ builder.append(var)[ CD ]
