Line_2 $$ protected String getOriginalLibSrcUrl() -->Line_24 $$ return sb.toString()[ CD ]
Line_5 $$ if (Validator.isNotNull(baseUrl)) -->Line_12 $$ String moduleGroup = getOriginalLibModuleGroup()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_21 $$ sb.append('-')[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_22 $$ sb.append(getOriginalLibModuleVersion())[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_20 $$ sb.append(getOriginalLibModuleName())[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_13 $$ sb.append(moduleGroup.replace('.', '/'))[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_6 $$ sb.append(baseUrl)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_19 $$ sb.append('/')[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_23 $$ sb.append("-sources.jar")[ FD ]
Line_5 $$ if (Validator.isNotNull(baseUrl)) -->Line_6 $$ sb.append(baseUrl)[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_16 $$ sb.append(getOriginalLibModuleName())[ FD ]
Line_2 $$ protected String getOriginalLibSrcUrl() -->Line_5 $$ if (Validator.isNotNull(baseUrl)) [ CD ]
Line_2 $$ protected String getOriginalLibSrcUrl() -->Line_20 $$ sb.append(getOriginalLibModuleName())[ CD ]
Line_4 $$ String baseUrl = getOriginalLibSrcBaseUrl()-->Line_7 $$ if (baseUrl.charAt(baseUrl.length() - 1) != '/') [ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_18 $$ sb.append(getOriginalLibModuleVersion())[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_8 $$ sb.append('/')[ FD ]
Line_12 $$ String moduleGroup = getOriginalLibModuleGroup()-->Line_13 $$ sb.append(moduleGroup.replace('.', '/'))[ FD ]
Line_5 $$ if (Validator.isNotNull(baseUrl)) -->Line_11 $$ sb.append(_BASE_URL)[ CD ]
Line_5 $$ if (Validator.isNotNull(baseUrl)) -->Line_14 $$ sb.append('/')[ CD ]
Line_2 $$ protected String getOriginalLibSrcUrl() -->Line_23 $$ sb.append("-sources.jar")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_24 $$ return sb.toString()[ FD ]
Line_2 $$ protected String getOriginalLibSrcUrl() -->Line_19 $$ sb.append('/')[ CD ]
Line_2 $$ protected String getOriginalLibSrcUrl() -->Line_17 $$ sb.append('/')[ CD ]
Line_2 $$ protected String getOriginalLibSrcUrl() -->Line_18 $$ sb.append(getOriginalLibModuleVersion())[ CD ]
Line_5 $$ if (Validator.isNotNull(baseUrl)) -->Line_7 $$ if (baseUrl.charAt(baseUrl.length() - 1) != '/') [ CD ]
Line_2 $$ protected String getOriginalLibSrcUrl() -->Line_16 $$ sb.append(getOriginalLibModuleName())[ CD ]
Line_2 $$ protected String getOriginalLibSrcUrl() -->Line_22 $$ sb.append(getOriginalLibModuleVersion())[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_17 $$ sb.append('/')[ FD ]
Line_4 $$ String baseUrl = getOriginalLibSrcBaseUrl()-->Line_5 $$ if (Validator.isNotNull(baseUrl)) [ FD ]
Line_2 $$ protected String getOriginalLibSrcUrl() -->Line_21 $$ sb.append('-')[ CD ]
Line_5 $$ if (Validator.isNotNull(baseUrl)) -->Line_13 $$ sb.append(moduleGroup.replace('.', '/'))[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_14 $$ sb.append('/')[ FD ]
Line_2 $$ protected String getOriginalLibSrcUrl() -->Line_4 $$ String baseUrl = getOriginalLibSrcBaseUrl()[ CD ]
Line_7 $$ if (baseUrl.charAt(baseUrl.length() - 1) != '/') -->Line_8 $$ sb.append('/')[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_11 $$ sb.append(_BASE_URL)[ FD ]
Line_2 $$ protected String getOriginalLibSrcUrl() -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_4 $$ String baseUrl = getOriginalLibSrcBaseUrl()-->Line_6 $$ sb.append(baseUrl)[ FD ]
