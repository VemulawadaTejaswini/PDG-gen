Line_6 $$ final StringBuilder builder = new StringBuilder()-->Line_7 $$ builder.append(prompt).append(prompt)[ FD ]
Line_5 $$ if (prompt != HELP_PROMPT) -->Line_11 $$ final String multiPrompt = builder.toString().substring(prompt.length())[ CD ]
Line_19 $$ final String currentPrompt = languageConsole.getPrompt()-->Line_21 $$ if (currentPrompt != null && !currentPrompt.equals(trimmedPrompt)) [ FD ]
Line_4 $$ if (string.startsWith(prompt)) -->Line_20 $$ final String trimmedPrompt = prompt.trim()[ CD ]
Line_2 $$ static String processPrompts(final LanguageConsoleView languageConsole, String string) -->Line_15 $$ string = string.substring(multiPrompt.length())[ FD ]
Line_4 $$ if (string.startsWith(prompt)) -->Line_21 $$ if (currentPrompt != null && !currentPrompt.equals(trimmedPrompt)) [ CD ]
Line_3 $$ for (String prompt : PROMPTS) -->Line_12 $$ if (prompt == INDENT_PROMPT) [ FD ]
Line_5 $$ if (prompt != HELP_PROMPT) -->Line_8 $$ while (string.startsWith(builder.toString())) [ CD ]
Line_21 $$ if (currentPrompt != null && !currentPrompt.equals(trimmedPrompt)) -->Line_22 $$ languageConsole.setPrompt(trimmedPrompt)[ CD ]
Line_8 $$ while (string.startsWith(builder.toString())) -->Line_9 $$ builder.append(prompt)[ CD ]
Line_2 $$ static String processPrompts(final LanguageConsoleView languageConsole, String string) -->Line_8 $$ while (string.startsWith(builder.toString())) [ FD ]
Line_2 $$ static String processPrompts(final LanguageConsoleView languageConsole, String string) -->Line_28 $$ return string[ CD ]
Line_2 $$ static String processPrompts(final LanguageConsoleView languageConsole, String string) -->Line_4 $$ if (string.startsWith(prompt)) [ FD ]
Line_5 $$ if (prompt != HELP_PROMPT) -->Line_12 $$ if (prompt == INDENT_PROMPT) [ CD ]
Line_4 $$ if (string.startsWith(prompt)) -->Line_19 $$ final String currentPrompt = languageConsole.getPrompt()[ CD ]
Line_5 $$ if (prompt != HELP_PROMPT) -->Line_7 $$ builder.append(prompt).append(prompt)[ CD ]
Line_2 $$ static String processPrompts(final LanguageConsoleView languageConsole, String string) -->Line_17 $$ string = string.substring(prompt.length())[ FD ]
Line_3 $$ for (String prompt : PROMPTS) -->Line_4 $$ if (string.startsWith(prompt)) [ FD ]
Line_2 $$ static String processPrompts(final LanguageConsoleView languageConsole, String string) -->Line_22 $$ languageConsole.setPrompt(trimmedPrompt)[ FD ]
Line_11 $$ final String multiPrompt = builder.toString().substring(prompt.length())-->Line_15 $$ string = string.substring(multiPrompt.length())[ FD ]
Line_15 $$ string = string.substring(multiPrompt.length())-->Line_17 $$ string = string.substring(prompt.length())[ FD ]
Line_3 $$ for (String prompt : PROMPTS) -->Line_9 $$ builder.append(prompt)[ FD ]
Line_3 $$ for (String prompt : PROMPTS) -->Line_5 $$ if (prompt != HELP_PROMPT) [ FD ]
Line_3 $$ for (String prompt : PROMPTS) -->Line_11 $$ final String multiPrompt = builder.toString().substring(prompt.length())[ FD ]
Line_20 $$ final String trimmedPrompt = prompt.trim()-->Line_21 $$ if (currentPrompt != null && !currentPrompt.equals(trimmedPrompt)) [ FD ]
Line_20 $$ final String trimmedPrompt = prompt.trim()-->Line_22 $$ languageConsole.setPrompt(trimmedPrompt)[ FD ]
Line_6 $$ final StringBuilder builder = new StringBuilder()-->Line_9 $$ builder.append(prompt)[ FD ]
Line_13 $$ prompt = multiPrompt-->Line_20 $$ final String trimmedPrompt = prompt.trim()[ FD ]
Line_2 $$ static String processPrompts(final LanguageConsoleView languageConsole, String string) -->Line_19 $$ final String currentPrompt = languageConsole.getPrompt()[ FD ]
Line_3 $$ for (String prompt : PROMPTS) -->Line_20 $$ final String trimmedPrompt = prompt.trim()[ FD ]
Line_3 $$ for (String prompt : PROMPTS) -->Line_17 $$ string = string.substring(prompt.length())[ FD ]
Line_5 $$ if (prompt != HELP_PROMPT) -->Line_15 $$ string = string.substring(multiPrompt.length())[ CD ]
Line_11 $$ final String multiPrompt = builder.toString().substring(prompt.length())-->Line_13 $$ prompt = multiPrompt[ FD ]
Line_3 $$ for (String prompt : PROMPTS) -->Line_7 $$ builder.append(prompt).append(prompt)[ FD ]
Line_4 $$ if (string.startsWith(prompt)) -->Line_5 $$ if (prompt != HELP_PROMPT) [ CD ]
Line_6 $$ final StringBuilder builder = new StringBuilder()-->Line_8 $$ while (string.startsWith(builder.toString())) [ FD ]
Line_5 $$ if (prompt != HELP_PROMPT) -->Line_17 $$ string = string.substring(prompt.length())[ CD ]
Line_21 $$ if (currentPrompt != null && !currentPrompt.equals(trimmedPrompt)) -->Line_23 $$ scrollDown(languageConsole.getConsoleEditor())[ CD ]
Line_5 $$ if (prompt != HELP_PROMPT) -->Line_6 $$ final StringBuilder builder = new StringBuilder()[ CD ]
Line_12 $$ if (prompt == INDENT_PROMPT) -->Line_13 $$ prompt = multiPrompt[ CD ]
Line_13 $$ prompt = multiPrompt-->Line_17 $$ string = string.substring(prompt.length())[ FD ]
Line_6 $$ final StringBuilder builder = new StringBuilder()-->Line_11 $$ final String multiPrompt = builder.toString().substring(prompt.length())[ FD ]
Line_3 $$ for (String prompt : PROMPTS) -->Line_13 $$ prompt = multiPrompt[ FD ]
Line_2 $$ static String processPrompts(final LanguageConsoleView languageConsole, String string) -->Line_23 $$ scrollDown(languageConsole.getConsoleEditor())[ FD ]
