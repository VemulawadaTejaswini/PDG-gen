Line_13 $$ Value value = data.get(keyValueEntry.getKey())-->Line_15 $$ moreInfo.append("Previous data has different value for key:").append(keyValueEntry.getKey()).append(", new value ").append(keyValueEntry.getValue()).append(", oldValue:").append(value).append("\n")[ FD ]
Line_10 $$ if (!data.containsKey(keyValueEntry.getKey())) -->Line_14 $$ if (!Comparing.equal(keyValueEntry.getValue(), value)) [ CD ]
Line_3 $$ StringBuilder moreInfo = new StringBuilder()-->Line_5 $$ moreInfo.append("Indexer has different number of elements, previously ").append(data.size()).append(" after ").append(contentData.size()).append("\n")[ FD ]
Line_13 $$ Value value = data.get(keyValueEntry.getKey())-->Line_24 $$ if (!Comparing.equal(keyValueEntry.getValue(), value)) [ FD ]
Line_9 $$ for (Map.Entry<Key, Value> keyValueEntry : contentData.entrySet()) -->Line_21 $$ moreInfo.append("New data doesn't contain:").append(keyValueEntry.getKey()).append(" with value ").append(keyValueEntry.getValue()).append("\n")[ FD ]
Line_3 $$ StringBuilder moreInfo = new StringBuilder()-->Line_7 $$ moreInfo.append("total ").append(contentData.size()).append(" entries\n")[ FD ]
Line_2 $$ private StringBuilder buildDiff(Map<Key, Value> data, Map<Key, Value> contentData) -->Line_10 $$ if (!data.containsKey(keyValueEntry.getKey())) [ FD ]
Line_3 $$ StringBuilder moreInfo = new StringBuilder()-->Line_11 $$ moreInfo.append("Previous data doesn't contain:").append(keyValueEntry.getKey()).append(" with value ").append(keyValueEntry.getValue()).append("\n")[ FD ]
Line_9 $$ for (Map.Entry<Key, Value> keyValueEntry : contentData.entrySet()) -->Line_23 $$ Value value = contentData.get(keyValueEntry.getKey())[ FD ]
Line_2 $$ private StringBuilder buildDiff(Map<Key, Value> data, Map<Key, Value> contentData) -->Line_4 $$ if (contentData.size() != data.size()) [ FD ]
Line_9 $$ for (Map.Entry<Key, Value> keyValueEntry : contentData.entrySet()) -->Line_24 $$ if (!Comparing.equal(keyValueEntry.getValue(), value)) [ FD ]
Line_10 $$ if (!data.containsKey(keyValueEntry.getKey())) -->Line_11 $$ moreInfo.append("Previous data doesn't contain:").append(keyValueEntry.getKey()).append(" with value ").append(keyValueEntry.getValue()).append("\n")[ CD ]
Line_13 $$ Value value = data.get(keyValueEntry.getKey())-->Line_14 $$ if (!Comparing.equal(keyValueEntry.getValue(), value)) [ FD ]
Line_20 $$ if (!contentData.containsKey(keyValueEntry.getKey())) -->Line_21 $$ moreInfo.append("New data doesn't contain:").append(keyValueEntry.getKey()).append(" with value ").append(keyValueEntry.getValue()).append("\n")[ CD ]
Line_4 $$ if (contentData.size() != data.size()) -->Line_5 $$ moreInfo.append("Indexer has different number of elements, previously ").append(data.size()).append(" after ").append(contentData.size()).append("\n")[ CD ]
Line_9 $$ for (Map.Entry<Key, Value> keyValueEntry : contentData.entrySet()) -->Line_15 $$ moreInfo.append("Previous data has different value for key:").append(keyValueEntry.getKey()).append(", new value ").append(keyValueEntry.getValue()).append(", oldValue:").append(value).append("\n")[ FD ]
Line_13 $$ Value value = data.get(keyValueEntry.getKey())-->Line_25 $$ moreInfo.append("New data has different value for key:").append(keyValueEntry.getKey()).append(" new value ").append(value).append(", oldValue:").append(keyValueEntry.getValue()).append("\n")[ FD ]
Line_2 $$ private StringBuilder buildDiff(Map<Key, Value> data, Map<Key, Value> contentData) -->Line_3 $$ StringBuilder moreInfo = new StringBuilder()[ CD ]
Line_9 $$ for (Map.Entry<Key, Value> keyValueEntry : contentData.entrySet()) -->Line_25 $$ moreInfo.append("New data has different value for key:").append(keyValueEntry.getKey()).append(" new value ").append(value).append(", oldValue:").append(keyValueEntry.getValue()).append("\n")[ FD ]
Line_3 $$ StringBuilder moreInfo = new StringBuilder()-->Line_25 $$ moreInfo.append("New data has different value for key:").append(keyValueEntry.getKey()).append(" new value ").append(value).append(", oldValue:").append(keyValueEntry.getValue()).append("\n")[ FD ]
Line_2 $$ private StringBuilder buildDiff(Map<Key, Value> data, Map<Key, Value> contentData) -->Line_9 $$ for (Map.Entry<Key, Value> keyValueEntry : contentData.entrySet()) [ FD ]
Line_24 $$ if (!Comparing.equal(keyValueEntry.getValue(), value)) -->Line_25 $$ moreInfo.append("New data has different value for key:").append(keyValueEntry.getKey()).append(" new value ").append(value).append(", oldValue:").append(keyValueEntry.getValue()).append("\n")[ CD ]
Line_9 $$ for (Map.Entry<Key, Value> keyValueEntry : contentData.entrySet()) -->Line_11 $$ moreInfo.append("Previous data doesn't contain:").append(keyValueEntry.getKey()).append(" with value ").append(keyValueEntry.getValue()).append("\n")[ FD ]
Line_2 $$ private StringBuilder buildDiff(Map<Key, Value> data, Map<Key, Value> contentData) -->Line_29 $$ return moreInfo[ CD ]
Line_2 $$ private StringBuilder buildDiff(Map<Key, Value> data, Map<Key, Value> contentData) -->Line_20 $$ if (!contentData.containsKey(keyValueEntry.getKey())) [ FD ]
Line_9 $$ for (Map.Entry<Key, Value> keyValueEntry : contentData.entrySet()) -->Line_10 $$ if (!data.containsKey(keyValueEntry.getKey())) [ FD ]
Line_20 $$ if (!contentData.containsKey(keyValueEntry.getKey())) -->Line_24 $$ if (!Comparing.equal(keyValueEntry.getValue(), value)) [ CD ]
Line_9 $$ for (Map.Entry<Key, Value> keyValueEntry : contentData.entrySet()) -->Line_14 $$ if (!Comparing.equal(keyValueEntry.getValue(), value)) [ FD ]
Line_10 $$ if (!data.containsKey(keyValueEntry.getKey())) -->Line_13 $$ Value value = data.get(keyValueEntry.getKey())[ CD ]
Line_2 $$ private StringBuilder buildDiff(Map<Key, Value> data, Map<Key, Value> contentData) -->Line_4 $$ if (contentData.size() != data.size()) [ CD ]
Line_20 $$ if (!contentData.containsKey(keyValueEntry.getKey())) -->Line_23 $$ Value value = contentData.get(keyValueEntry.getKey())[ CD ]
Line_9 $$ for (Map.Entry<Key, Value> keyValueEntry : contentData.entrySet()) -->Line_13 $$ Value value = data.get(keyValueEntry.getKey())[ FD ]
Line_2 $$ private StringBuilder buildDiff(Map<Key, Value> data, Map<Key, Value> contentData) -->Line_13 $$ Value value = data.get(keyValueEntry.getKey())[ FD ]
Line_2 $$ private StringBuilder buildDiff(Map<Key, Value> data, Map<Key, Value> contentData) -->Line_5 $$ moreInfo.append("Indexer has different number of elements, previously ").append(data.size()).append(" after ").append(contentData.size()).append("\n")[ FD ]
Line_4 $$ if (contentData.size() != data.size()) -->Line_7 $$ moreInfo.append("total ").append(contentData.size()).append(" entries\n")[ CD ]
Line_2 $$ private StringBuilder buildDiff(Map<Key, Value> data, Map<Key, Value> contentData) -->Line_23 $$ Value value = contentData.get(keyValueEntry.getKey())[ FD ]
Line_2 $$ private StringBuilder buildDiff(Map<Key, Value> data, Map<Key, Value> contentData) -->Line_19 $$ for (Map.Entry<Key, Value> keyValueEntry : data.entrySet()) [ FD ]
Line_14 $$ if (!Comparing.equal(keyValueEntry.getValue(), value)) -->Line_15 $$ moreInfo.append("Previous data has different value for key:").append(keyValueEntry.getKey()).append(", new value ").append(keyValueEntry.getValue()).append(", oldValue:").append(value).append("\n")[ CD ]
Line_2 $$ private StringBuilder buildDiff(Map<Key, Value> data, Map<Key, Value> contentData) -->Line_7 $$ moreInfo.append("total ").append(contentData.size()).append(" entries\n")[ FD ]
Line_9 $$ for (Map.Entry<Key, Value> keyValueEntry : contentData.entrySet()) -->Line_20 $$ if (!contentData.containsKey(keyValueEntry.getKey())) [ FD ]
Line_3 $$ StringBuilder moreInfo = new StringBuilder()-->Line_15 $$ moreInfo.append("Previous data has different value for key:").append(keyValueEntry.getKey()).append(", new value ").append(keyValueEntry.getValue()).append(", oldValue:").append(value).append("\n")[ FD ]
Line_3 $$ StringBuilder moreInfo = new StringBuilder()-->Line_21 $$ moreInfo.append("New data doesn't contain:").append(keyValueEntry.getKey()).append(" with value ").append(keyValueEntry.getValue()).append("\n")[ FD ]
