Line_2 $$ private static String outputString(@NotNull String type, @Nullable String beforePath, @Nullable String afterPath) -->Line_11 $$ sb.append("\n")[ CD ]
Line_2 $$ private static String outputString(@NotNull String type, @Nullable String beforePath, @Nullable String afterPath) -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ private static String outputString(@NotNull String type, @Nullable String beforePath, @Nullable String afterPath) -->Line_4 $$ sb.append(type).append("\t")[ FD ]
Line_2 $$ private static String outputString(@NotNull String type, @Nullable String beforePath, @Nullable String afterPath) -->Line_12 $$ return sb.toString()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_6 $$ sb.append(beforePath).append("\t")[ FD ]
Line_2 $$ private static String outputString(@NotNull String type, @Nullable String beforePath, @Nullable String afterPath) -->Line_5 $$ if (beforePath != null) [ FD ]
Line_2 $$ private static String outputString(@NotNull String type, @Nullable String beforePath, @Nullable String afterPath) -->Line_6 $$ sb.append(beforePath).append("\t")[ FD ]
Line_2 $$ private static String outputString(@NotNull String type, @Nullable String beforePath, @Nullable String afterPath) -->Line_8 $$ if (afterPath != null) [ FD ]
Line_2 $$ private static String outputString(@NotNull String type, @Nullable String beforePath, @Nullable String afterPath) -->Line_9 $$ sb.append(afterPath).append("\t")[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_12 $$ return sb.toString()[ FD ]
Line_2 $$ private static String outputString(@NotNull String type, @Nullable String beforePath, @Nullable String afterPath) -->Line_4 $$ sb.append(type).append("\t")[ CD ]
Line_2 $$ private static String outputString(@NotNull String type, @Nullable String beforePath, @Nullable String afterPath) -->Line_8 $$ if (afterPath != null) [ CD ]
Line_5 $$ if (beforePath != null) -->Line_6 $$ sb.append(beforePath).append("\t")[ CD ]
Line_8 $$ if (afterPath != null) -->Line_9 $$ sb.append(afterPath).append("\t")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_11 $$ sb.append("\n")[ FD ]
Line_2 $$ private static String outputString(@NotNull String type, @Nullable String beforePath, @Nullable String afterPath) -->Line_5 $$ if (beforePath != null) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_4 $$ sb.append(type).append("\t")[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_9 $$ sb.append(afterPath).append("\t")[ FD ]
