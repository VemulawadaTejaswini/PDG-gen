Line_6 $$ final StringBuilder b = new StringBuilder("REPRODUCE WITH: gradle ")-->Line_8 $$ b.append(task)[ FD ]
Line_3 $$ if (failure.getException() instanceof AssumptionViolatedException) -->Line_4 $$ return[ CD ]
Line_6 $$ final StringBuilder b = new StringBuilder("REPRODUCE WITH: gradle ")-->Line_14 $$ System.err.println(b.toString())[ FD ]
Line_2 $$ public void testFailure(Failure failure) throws Exception -->Line_6 $$ final StringBuilder b = new StringBuilder("REPRODUCE WITH: gradle ")[ CD ]
Line_2 $$ public void testFailure(Failure failure) throws Exception -->Line_10 $$ gradleMessageBuilder.appendAllOpts(failure.getDescription())[ CD ]
Line_2 $$ public void testFailure(Failure failure) throws Exception -->Line_7 $$ String task = System.getProperty("tests.task")[ CD ]
Line_2 $$ public void testFailure(Failure failure) throws Exception -->Line_14 $$ System.err.println(b.toString())[ CD ]
Line_2 $$ public void testFailure(Failure failure) throws Exception -->Line_8 $$ b.append(task)[ CD ]
Line_7 $$ String task = System.getProperty("tests.task")-->Line_8 $$ b.append(task)[ FD ]
Line_2 $$ public void testFailure(Failure failure) throws Exception -->Line_10 $$ gradleMessageBuilder.appendAllOpts(failure.getDescription())[ FD ]
Line_11 $$ if (failure.getDescription().getTestClass().isAnnotationPresent(Rest.class)) -->Line_12 $$ gradleMessageBuilder.appendRestTestsProperties()[ CD ]
Line_2 $$ public void testFailure(Failure failure) throws Exception -->Line_9 $$ GradleMessageBuilder gradleMessageBuilder = new GradleMessageBuilder(b)[ CD ]
Line_2 $$ public void testFailure(Failure failure) throws Exception -->Line_11 $$ if (failure.getDescription().getTestClass().isAnnotationPresent(Rest.class)) [ CD ]
Line_9 $$ GradleMessageBuilder gradleMessageBuilder = new GradleMessageBuilder(b)-->Line_12 $$ gradleMessageBuilder.appendRestTestsProperties()[ FD ]
Line_2 $$ public void testFailure(Failure failure) throws Exception -->Line_3 $$ if (failure.getException() instanceof AssumptionViolatedException) [ FD ]
Line_2 $$ public void testFailure(Failure failure) throws Exception -->Line_3 $$ if (failure.getException() instanceof AssumptionViolatedException) [ CD ]
Line_9 $$ GradleMessageBuilder gradleMessageBuilder = new GradleMessageBuilder(b)-->Line_10 $$ gradleMessageBuilder.appendAllOpts(failure.getDescription())[ FD ]
Line_2 $$ public void testFailure(Failure failure) throws Exception -->Line_11 $$ if (failure.getDescription().getTestClass().isAnnotationPresent(Rest.class)) [ FD ]
