Line_6 $$ while ((nextByte = stream.read()) >= 0) -->Line_7 $$ builder.append((char) nextByte)[ CD ]
Line_2 $$ public static PsiFile loadContentAsFile(Project project, InputStream stream, LanguageFileType fileType) throws IOException -->Line_13 $$ return factory.createFileFromText("_ant_dummy__." + fileType.getDefaultExtension(), fileType, builder, LocalTimeCounter.currentTime(), false, false)[ FD ]
Line_12 $$ final PsiFileFactory factory = PsiFileFactory.getInstance(project)-->Line_13 $$ return factory.createFileFromText("_ant_dummy__." + fileType.getDefaultExtension(), fileType, builder, LocalTimeCounter.currentTime(), false, false)[ FD ]
Line_2 $$ public static PsiFile loadContentAsFile(Project project, InputStream stream, LanguageFileType fileType) throws IOException -->Line_12 $$ final PsiFileFactory factory = PsiFileFactory.getInstance(project)[ CD ]
Line_3 $$ final StringBuilder builder = new StringBuilder()-->Line_13 $$ return factory.createFileFromText("_ant_dummy__." + fileType.getDefaultExtension(), fileType, builder, LocalTimeCounter.currentTime(), false, false)[ FD ]
Line_2 $$ public static PsiFile loadContentAsFile(Project project, InputStream stream, LanguageFileType fileType) throws IOException -->Line_6 $$ while ((nextByte = stream.read()) >= 0) [ FD ]
Line_5 $$ int nextByte-->Line_6 $$ while ((nextByte = stream.read()) >= 0) [ FD ]
Line_2 $$ public static PsiFile loadContentAsFile(Project project, InputStream stream, LanguageFileType fileType) throws IOException -->Line_10 $$ stream.close()[ FD ]
Line_2 $$ public static PsiFile loadContentAsFile(Project project, InputStream stream, LanguageFileType fileType) throws IOException -->Line_13 $$ return factory.createFileFromText("_ant_dummy__." + fileType.getDefaultExtension(), fileType, builder, LocalTimeCounter.currentTime(), false, false)[ CD ]
Line_2 $$ public static PsiFile loadContentAsFile(Project project, InputStream stream, LanguageFileType fileType) throws IOException -->Line_12 $$ final PsiFileFactory factory = PsiFileFactory.getInstance(project)[ FD ]
Line_2 $$ public static PsiFile loadContentAsFile(Project project, InputStream stream, LanguageFileType fileType) throws IOException -->Line_3 $$ final StringBuilder builder = new StringBuilder()[ CD ]
Line_3 $$ final StringBuilder builder = new StringBuilder()-->Line_7 $$ builder.append((char) nextByte)[ FD ]
