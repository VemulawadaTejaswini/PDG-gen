Line_2 $$ public void testCreateLinkMaxPathLink() throws IOException -->Line_10 $$ for (int i = 0; i < (len / 10); i++) [ CD ]
Line_10 $$ for (int i = 0; i < (len / 10); i++) -->Line_13 $$ for (int i = 0; i < (len % 10); i++) [ FD ]
Line_2 $$ public void testCreateLinkMaxPathLink() throws IOException -->Line_20 $$ wrapper.createSymlink(file, link, false)[ CD ]
Line_4 $$ Path dir = new Path(testBaseDir1())-->Line_7 $$ final int dirLen = dir.toString().length() + 1[ FD ]
Line_16 $$ Path link = new Path(sb.toString())-->Line_17 $$ assertEquals(maxPathLen, dirLen + link.toString().length())[ FD ]
Line_2 $$ public void testCreateLinkMaxPathLink() throws IOException -->Line_5 $$ Path file = new Path(testBaseDir1(), "file")[ CD ]
Line_9 $$ StringBuilder sb = new StringBuilder("")-->Line_14 $$ sb.append("x")[ FD ]
Line_2 $$ public void testCreateLinkMaxPathLink() throws IOException -->Line_19 $$ wrapper.setWorkingDirectory(dir)[ CD ]
Line_16 $$ Path link = new Path(sb.toString())-->Line_22 $$ link = new Path(sb.toString() + "x")[ FD ]
Line_6 $$ final int maxPathLen = HdfsConstants.MAX_PATH_LENGTH-->Line_17 $$ assertEquals(maxPathLen, dirLen + link.toString().length())[ FD ]
Line_5 $$ Path file = new Path(testBaseDir1(), "file")-->Line_18 $$ createAndWriteFile(file)[ FD ]
Line_5 $$ Path file = new Path(testBaseDir1(), "file")-->Line_20 $$ wrapper.createSymlink(file, link, false)[ FD ]
Line_2 $$ public void testCreateLinkMaxPathLink() throws IOException -->Line_22 $$ link = new Path(sb.toString() + "x")[ CD ]
Line_9 $$ StringBuilder sb = new StringBuilder("")-->Line_22 $$ link = new Path(sb.toString() + "x")[ FD ]
Line_5 $$ Path file = new Path(testBaseDir1(), "file")-->Line_24 $$ wrapper.createSymlink(file, link, false)[ FD ]
Line_2 $$ public void testCreateLinkMaxPathLink() throws IOException -->Line_13 $$ for (int i = 0; i < (len % 10); i++) [ CD ]
Line_9 $$ StringBuilder sb = new StringBuilder("")-->Line_16 $$ Path link = new Path(sb.toString())[ FD ]
Line_22 $$ link = new Path(sb.toString() + "x")-->Line_24 $$ wrapper.createSymlink(file, link, false)[ FD ]
Line_2 $$ public void testCreateLinkMaxPathLink() throws IOException -->Line_7 $$ final int dirLen = dir.toString().length() + 1[ CD ]
Line_9 $$ StringBuilder sb = new StringBuilder("")-->Line_11 $$ sb.append("0123456789")[ FD ]
Line_2 $$ public void testCreateLinkMaxPathLink() throws IOException -->Line_16 $$ Path link = new Path(sb.toString())[ CD ]
Line_2 $$ public void testCreateLinkMaxPathLink() throws IOException -->Line_21 $$ readFile(link)[ CD ]
Line_2 $$ public void testCreateLinkMaxPathLink() throws IOException -->Line_18 $$ createAndWriteFile(file)[ CD ]
Line_16 $$ Path link = new Path(sb.toString())-->Line_21 $$ readFile(link)[ FD ]
Line_16 $$ Path link = new Path(sb.toString())-->Line_24 $$ wrapper.createSymlink(file, link, false)[ FD ]
Line_10 $$ for (int i = 0; i < (len / 10); i++) -->Line_11 $$ sb.append("0123456789")[ CD ]
Line_2 $$ public void testCreateLinkMaxPathLink() throws IOException -->Line_17 $$ assertEquals(maxPathLen, dirLen + link.toString().length())[ CD ]
Line_16 $$ Path link = new Path(sb.toString())-->Line_20 $$ wrapper.createSymlink(file, link, false)[ FD ]
Line_2 $$ public void testCreateLinkMaxPathLink() throws IOException -->Line_4 $$ Path dir = new Path(testBaseDir1())[ CD ]
Line_2 $$ public void testCreateLinkMaxPathLink() throws IOException -->Line_6 $$ final int maxPathLen = HdfsConstants.MAX_PATH_LENGTH[ CD ]
Line_13 $$ for (int i = 0; i < (len % 10); i++) -->Line_14 $$ sb.append("x")[ CD ]
Line_4 $$ Path dir = new Path(testBaseDir1())-->Line_19 $$ wrapper.setWorkingDirectory(dir)[ FD ]
Line_2 $$ public void testCreateLinkMaxPathLink() throws IOException -->Line_9 $$ StringBuilder sb = new StringBuilder("")[ CD ]
Line_2 $$ public void testCreateLinkMaxPathLink() throws IOException -->Line_8 $$ int len = maxPathLen - dirLen[ CD ]
