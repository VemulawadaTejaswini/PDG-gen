Line_6 $$ if (isLikeEnabled && isString) -->Line_9 $$ condition = new SimpleExpression(propertyName, propertyValue, "=", isIgnoreCaseEnabled && isString)[ CD ]
Line_4 $$ if (propertyValue != null) -->Line_6 $$ if (isLikeEnabled && isString) [ CD ]
Line_7 $$ condition = new LikeExpression(propertyName, (String) propertyValue, matchMode, escapeCharacter, isIgnoreCaseEnabled)-->Line_14 $$ final String conditionFragment = condition.toSqlString(criteria, cq)[ FD ]
Line_3 $$ final Criterion condition-->Line_9 $$ condition = new SimpleExpression(propertyName, propertyValue, "=", isIgnoreCaseEnabled && isString)[ FD ]
Line_15 $$ if (conditionFragment.trim().length() > 0) -->Line_19 $$ buf.append(conditionFragment)[ CD ]
Line_2 $$ protected void appendPropertyCondition(String propertyName, Object propertyValue, Criteria criteria, CriteriaQuery cq, StringBuilder buf) -->Line_14 $$ final String conditionFragment = condition.toSqlString(criteria, cq)[ FD ]
Line_2 $$ protected void appendPropertyCondition(String propertyName, Object propertyValue, Criteria criteria, CriteriaQuery cq, StringBuilder buf) -->Line_16 $$ if (buf.length() > 1) [ FD ]
Line_4 $$ if (propertyValue != null) -->Line_5 $$ final boolean isString = propertyValue instanceof String[ CD ]
Line_14 $$ final String conditionFragment = condition.toSqlString(criteria, cq)-->Line_15 $$ if (conditionFragment.trim().length() > 0) [ FD ]
Line_7 $$ condition = new LikeExpression(propertyName, (String) propertyValue, matchMode, escapeCharacter, isIgnoreCaseEnabled)-->Line_9 $$ condition = new SimpleExpression(propertyName, propertyValue, "=", isIgnoreCaseEnabled && isString)[ FD ]
Line_16 $$ if (buf.length() > 1) -->Line_17 $$ buf.append(" and ")[ CD ]
Line_2 $$ protected void appendPropertyCondition(String propertyName, Object propertyValue, Criteria criteria, CriteriaQuery cq, StringBuilder buf) -->Line_3 $$ final Criterion condition[ CD ]
Line_2 $$ protected void appendPropertyCondition(String propertyName, Object propertyValue, Criteria criteria, CriteriaQuery cq, StringBuilder buf) -->Line_14 $$ final String conditionFragment = condition.toSqlString(criteria, cq)[ CD ]
Line_12 $$ condition = new NullExpression(propertyName)-->Line_14 $$ final String conditionFragment = condition.toSqlString(criteria, cq)[ FD ]
Line_6 $$ if (isLikeEnabled && isString) -->Line_7 $$ condition = new LikeExpression(propertyName, (String) propertyValue, matchMode, escapeCharacter, isIgnoreCaseEnabled)[ CD ]
Line_7 $$ condition = new LikeExpression(propertyName, (String) propertyValue, matchMode, escapeCharacter, isIgnoreCaseEnabled)-->Line_12 $$ condition = new NullExpression(propertyName)[ FD ]
Line_3 $$ final Criterion condition-->Line_14 $$ final String conditionFragment = condition.toSqlString(criteria, cq)[ FD ]
Line_4 $$ if (propertyValue != null) -->Line_12 $$ condition = new NullExpression(propertyName)[ CD ]
Line_2 $$ protected void appendPropertyCondition(String propertyName, Object propertyValue, Criteria criteria, CriteriaQuery cq, StringBuilder buf) -->Line_19 $$ buf.append(conditionFragment)[ FD ]
Line_2 $$ protected void appendPropertyCondition(String propertyName, Object propertyValue, Criteria criteria, CriteriaQuery cq, StringBuilder buf) -->Line_4 $$ if (propertyValue != null) [ FD ]
Line_14 $$ final String conditionFragment = condition.toSqlString(criteria, cq)-->Line_19 $$ buf.append(conditionFragment)[ FD ]
Line_3 $$ final Criterion condition-->Line_12 $$ condition = new NullExpression(propertyName)[ FD ]
Line_9 $$ condition = new SimpleExpression(propertyName, propertyValue, "=", isIgnoreCaseEnabled && isString)-->Line_12 $$ condition = new NullExpression(propertyName)[ FD ]
Line_2 $$ protected void appendPropertyCondition(String propertyName, Object propertyValue, Criteria criteria, CriteriaQuery cq, StringBuilder buf) -->Line_4 $$ if (propertyValue != null) [ CD ]
Line_3 $$ final Criterion condition-->Line_7 $$ condition = new LikeExpression(propertyName, (String) propertyValue, matchMode, escapeCharacter, isIgnoreCaseEnabled)[ FD ]
Line_2 $$ protected void appendPropertyCondition(String propertyName, Object propertyValue, Criteria criteria, CriteriaQuery cq, StringBuilder buf) -->Line_15 $$ if (conditionFragment.trim().length() > 0) [ CD ]
Line_9 $$ condition = new SimpleExpression(propertyName, propertyValue, "=", isIgnoreCaseEnabled && isString)-->Line_14 $$ final String conditionFragment = condition.toSqlString(criteria, cq)[ FD ]
Line_5 $$ final boolean isString = propertyValue instanceof String-->Line_6 $$ if (isLikeEnabled && isString) [ FD ]
Line_15 $$ if (conditionFragment.trim().length() > 0) -->Line_16 $$ if (buf.length() > 1) [ CD ]
Line_2 $$ protected void appendPropertyCondition(String propertyName, Object propertyValue, Criteria criteria, CriteriaQuery cq, StringBuilder buf) -->Line_17 $$ buf.append(" and ")[ FD ]
