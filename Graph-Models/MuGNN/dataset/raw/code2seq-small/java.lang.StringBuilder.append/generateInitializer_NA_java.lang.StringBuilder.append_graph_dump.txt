Line_6 $$ PsiExpression constantInitializer = JavaDocInfoGenerator.calcInitializerExpression(variable)-->Line_9 $$ JavaDocInfoGenerator.appendExpressionValue(buffer, constantInitializer, CodeInsightBundle.message("javadoc.resolved.value"))[ FD ]
Line_3 $$ PsiExpression initializer = variable.getInitializer()-->Line_5 $$ JavaDocInfoGenerator.appendExpressionValue(buffer, initializer, " = ")[ FD ]
Line_4 $$ if (initializer != null) -->Line_5 $$ JavaDocInfoGenerator.appendExpressionValue(buffer, initializer, " = ")[ CD ]
Line_2 $$ private static void generateInitializer(StringBuilder buffer, PsiVariable variable) -->Line_6 $$ PsiExpression constantInitializer = JavaDocInfoGenerator.calcInitializerExpression(variable)[ FD ]
Line_6 $$ PsiExpression constantInitializer = JavaDocInfoGenerator.calcInitializerExpression(variable)-->Line_7 $$ if (constantInitializer != null) [ FD ]
Line_2 $$ private static void generateInitializer(StringBuilder buffer, PsiVariable variable) -->Line_9 $$ JavaDocInfoGenerator.appendExpressionValue(buffer, constantInitializer, CodeInsightBundle.message("javadoc.resolved.value"))[ FD ]
Line_2 $$ private static void generateInitializer(StringBuilder buffer, PsiVariable variable) -->Line_5 $$ JavaDocInfoGenerator.appendExpressionValue(buffer, initializer, " = ")[ FD ]
Line_4 $$ if (initializer != null) -->Line_7 $$ if (constantInitializer != null) [ CD ]
Line_3 $$ PsiExpression initializer = variable.getInitializer()-->Line_4 $$ if (initializer != null) [ FD ]
Line_2 $$ private static void generateInitializer(StringBuilder buffer, PsiVariable variable) -->Line_3 $$ PsiExpression initializer = variable.getInitializer()[ FD ]
Line_7 $$ if (constantInitializer != null) -->Line_8 $$ buffer.append("\n")[ CD ]
Line_2 $$ private static void generateInitializer(StringBuilder buffer, PsiVariable variable) -->Line_3 $$ PsiExpression initializer = variable.getInitializer()[ CD ]
Line_2 $$ private static void generateInitializer(StringBuilder buffer, PsiVariable variable) -->Line_4 $$ if (initializer != null) [ CD ]
Line_2 $$ private static void generateInitializer(StringBuilder buffer, PsiVariable variable) -->Line_8 $$ buffer.append("\n")[ FD ]
Line_7 $$ if (constantInitializer != null) -->Line_9 $$ JavaDocInfoGenerator.appendExpressionValue(buffer, constantInitializer, CodeInsightBundle.message("javadoc.resolved.value"))[ CD ]
Line_4 $$ if (initializer != null) -->Line_6 $$ PsiExpression constantInitializer = JavaDocInfoGenerator.calcInitializerExpression(variable)[ CD ]
