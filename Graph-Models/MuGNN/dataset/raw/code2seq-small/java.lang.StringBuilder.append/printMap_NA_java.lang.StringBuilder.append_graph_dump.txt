Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_7 $$ if (buffer.length() > 0) [ FD ]
Line_2 $$ void printMap(Map<String, Map<String, InetSocketAddress>> map) -->Line_3 $$ StringBuilder buffer = new StringBuilder()[ CD ]
Line_6 $$ InetSocketAddress address = cnn.getAddress()-->Line_10 $$ buffer.append(address.getHostName())[ FD ]
Line_7 $$ if (buffer.length() > 0) -->Line_8 $$ buffer.append(" ")[ CD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_8 $$ buffer.append(" ")[ FD ]
Line_2 $$ void printMap(Map<String, Map<String, InetSocketAddress>> map) -->Line_4 $$ List<ConfiguredNNAddress> cnns = DFSUtil.flattenAddressMap(map)[ CD ]
Line_2 $$ void printMap(Map<String, Map<String, InetSocketAddress>> map) -->Line_4 $$ List<ConfiguredNNAddress> cnns = DFSUtil.flattenAddressMap(map)[ FD ]
Line_2 $$ void printMap(Map<String, Map<String, InetSocketAddress>> map) -->Line_12 $$ printOut(buffer.toString())[ CD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_10 $$ buffer.append(address.getHostName())[ FD ]
Line_5 $$ for (ConfiguredNNAddress cnn : cnns) -->Line_6 $$ InetSocketAddress address = cnn.getAddress()[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_12 $$ printOut(buffer.toString())[ FD ]
