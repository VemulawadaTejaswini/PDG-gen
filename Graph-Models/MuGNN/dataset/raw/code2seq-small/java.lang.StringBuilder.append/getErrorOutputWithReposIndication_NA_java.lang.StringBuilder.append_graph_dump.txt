Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_8 $$ sb.append("<p>")[ FD ]
Line_7 $$ if (!result.success()) -->Line_12 $$ sb.append(result.getErrorOutputAsHtmlString())[ CD ]
Line_6 $$ GitCommandResult result = entry.getValue()-->Line_7 $$ if (!result.success()) [ FD ]
Line_2 $$ public String getErrorOutputWithReposIndication() -->Line_16 $$ return sb.toString()[ CD ]
Line_7 $$ if (!result.success()) -->Line_9 $$ if (!GitUtil.justOneGitRepository(myProject)) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_10 $$ sb.append("<code>" + repository.getPresentableUrl() + "</code>:<br/>")[ FD ]
Line_4 $$ for (Map.Entry<GitRepository, GitCommandResult> entry : resultsByRepos.entrySet()) -->Line_5 $$ GitRepository repository = entry.getKey()[ FD ]
Line_7 $$ if (!result.success()) -->Line_8 $$ sb.append("<p>")[ CD ]
Line_9 $$ if (!GitUtil.justOneGitRepository(myProject)) -->Line_10 $$ sb.append("<code>" + repository.getPresentableUrl() + "</code>:<br/>")[ CD ]
Line_2 $$ public String getErrorOutputWithReposIndication() -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_12 $$ sb.append(result.getErrorOutputAsHtmlString())[ FD ]
Line_4 $$ for (Map.Entry<GitRepository, GitCommandResult> entry : resultsByRepos.entrySet()) -->Line_6 $$ GitCommandResult result = entry.getValue()[ FD ]
Line_5 $$ GitRepository repository = entry.getKey()-->Line_10 $$ sb.append("<code>" + repository.getPresentableUrl() + "</code>:<br/>")[ FD ]
Line_6 $$ GitCommandResult result = entry.getValue()-->Line_12 $$ sb.append(result.getErrorOutputAsHtmlString())[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_13 $$ sb.append("</p>")[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_16 $$ return sb.toString()[ FD ]
Line_7 $$ if (!result.success()) -->Line_13 $$ sb.append("</p>")[ CD ]
