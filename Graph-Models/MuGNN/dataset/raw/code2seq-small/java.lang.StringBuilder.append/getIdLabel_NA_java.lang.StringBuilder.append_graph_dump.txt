Line_14 $$ if (classRenderer.SHOW_OBJECT_ID) -->Line_15 $$ buf.append('@')[ CD ]
Line_2 $$ public static String getIdLabel(ObjectReference objRef) -->Line_12 $$ buf.append(classRenderer.renderTypeName(objRef.type().name()))[ FD ]
Line_3 $$ final ClassRenderer classRenderer = NodeRendererSettings.getInstance().getClassRenderer()-->Line_14 $$ if (classRenderer.SHOW_OBJECT_ID) [ FD ]
Line_2 $$ public static String getIdLabel(ObjectReference objRef) -->Line_7 $$ StringBuilder buf = StringBuilderSpinAllocator.alloc()[ CD ]
Line_7 $$ StringBuilder buf = StringBuilderSpinAllocator.alloc()-->Line_12 $$ buf.append(classRenderer.renderTypeName(objRef.type().name()))[ FD ]
Line_23 $$ if (objRef instanceof ArrayReference) -->Line_24 $$ int idx = buf.indexOf("[")[ CD ]
Line_10 $$ if (showConcreteType || classRenderer.SHOW_OBJECT_ID) -->Line_11 $$ if (showConcreteType) [ CD ]
Line_10 $$ if (showConcreteType || classRenderer.SHOW_OBJECT_ID) -->Line_14 $$ if (classRenderer.SHOW_OBJECT_ID) [ CD ]
Line_23 $$ if (objRef instanceof ArrayReference) -->Line_25 $$ if (idx >= 0) [ CD ]
Line_7 $$ StringBuilder buf = StringBuilderSpinAllocator.alloc()-->Line_26 $$ buf.insert(idx + 1, Integer.toString(((ArrayReference) objRef).length()))[ FD ]
Line_2 $$ public static String getIdLabel(ObjectReference objRef) -->Line_23 $$ if (objRef instanceof ArrayReference) [ FD ]
Line_7 $$ StringBuilder buf = StringBuilderSpinAllocator.alloc()-->Line_15 $$ buf.append('@')[ FD ]
Line_11 $$ if (showConcreteType) -->Line_12 $$ buf.append(classRenderer.renderTypeName(objRef.type().name()))[ CD ]
Line_7 $$ StringBuilder buf = StringBuilderSpinAllocator.alloc()-->Line_29 $$ return buf.toString()[ FD ]
Line_16 $$ if (ApplicationManager.getApplication().isUnitTestMode()) -->Line_19 $$ buf.append(objRef.uniqueID())[ CD ]
Line_2 $$ public static String getIdLabel(ObjectReference objRef) -->Line_19 $$ buf.append(objRef.uniqueID())[ FD ]
Line_25 $$ if (idx >= 0) -->Line_26 $$ buf.insert(idx + 1, Integer.toString(((ArrayReference) objRef).length()))[ CD ]
Line_16 $$ if (ApplicationManager.getApplication().isUnitTestMode()) -->Line_17 $$ buf.append("uniqueID")[ CD ]
Line_24 $$ int idx = buf.indexOf("[")-->Line_25 $$ if (idx >= 0) [ FD ]
Line_9 $$ final boolean showConcreteType = !classRenderer.SHOW_DECLARED_TYPE || (!(objRef instanceof StringReference) && !(objRef instanceof ClassObjectReference) && !isEnumConstant(objRef))-->Line_10 $$ if (showConcreteType || classRenderer.SHOW_OBJECT_ID) [ FD ]
Line_7 $$ StringBuilder buf = StringBuilderSpinAllocator.alloc()-->Line_17 $$ buf.append("uniqueID")[ FD ]
Line_3 $$ final ClassRenderer classRenderer = NodeRendererSettings.getInstance().getClassRenderer()-->Line_12 $$ buf.append(classRenderer.renderTypeName(objRef.type().name()))[ FD ]
Line_2 $$ public static String getIdLabel(ObjectReference objRef) -->Line_9 $$ final boolean showConcreteType = !classRenderer.SHOW_DECLARED_TYPE || (!(objRef instanceof StringReference) && !(objRef instanceof ClassObjectReference) && !isEnumConstant(objRef))[ FD ]
Line_2 $$ public static String getIdLabel(ObjectReference objRef) -->Line_3 $$ final ClassRenderer classRenderer = NodeRendererSettings.getInstance().getClassRenderer()[ CD ]
Line_14 $$ if (classRenderer.SHOW_OBJECT_ID) -->Line_16 $$ if (ApplicationManager.getApplication().isUnitTestMode()) [ CD ]
Line_7 $$ StringBuilder buf = StringBuilderSpinAllocator.alloc()-->Line_24 $$ int idx = buf.indexOf("[")[ FD ]
Line_2 $$ public static String getIdLabel(ObjectReference objRef) -->Line_4 $$ if (objRef instanceof StringReference && !classRenderer.SHOW_STRINGS_TYPE) [ CD ]
Line_4 $$ if (objRef instanceof StringReference && !classRenderer.SHOW_STRINGS_TYPE) -->Line_5 $$ return null[ CD ]
Line_7 $$ StringBuilder buf = StringBuilderSpinAllocator.alloc()-->Line_31 $$ StringBuilderSpinAllocator.dispose(buf)[ FD ]
Line_7 $$ StringBuilder buf = StringBuilderSpinAllocator.alloc()-->Line_19 $$ buf.append(objRef.uniqueID())[ FD ]
