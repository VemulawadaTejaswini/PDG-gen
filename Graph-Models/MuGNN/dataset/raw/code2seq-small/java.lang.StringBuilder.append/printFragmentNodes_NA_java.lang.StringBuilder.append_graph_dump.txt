Line_2 $$ private static void printFragmentNodes(StringBuilder output, PlanFragment fragment, PlanNodeIdGenerator idGenerator) -->Line_8 $$ output.append("}").append('\n')[ FD ]
Line_3 $$ String clusterId = "cluster_" + fragment.getId()-->Line_4 $$ output.append("subgraph ").append(clusterId).append(" [ FD ]
Line_2 $$ private static void printFragmentNodes(StringBuilder output, PlanFragment fragment, PlanNodeIdGenerator idGenerator) -->Line_3 $$ String clusterId = "cluster_" + fragment.getId()[ FD ]
Line_2 $$ private static void printFragmentNodes(StringBuilder output, PlanFragment fragment, PlanNodeIdGenerator idGenerator) -->Line_6 $$ PlanNode plan = fragment.getRoot()[ FD ]
Line_2 $$ private static void printFragmentNodes(StringBuilder output, PlanFragment fragment, PlanNodeIdGenerator idGenerator) -->Line_3 $$ String clusterId = "cluster_" + fragment.getId()[ CD ]
Line_2 $$ private static void printFragmentNodes(StringBuilder output, PlanFragment fragment, PlanNodeIdGenerator idGenerator) -->Line_5 $$ output.append(format("label = \"%s\"", fragment.getDistribution())).append('\n')[ CD ]
Line_2 $$ private static void printFragmentNodes(StringBuilder output, PlanFragment fragment, PlanNodeIdGenerator idGenerator) -->Line_4 $$ output.append("subgraph ").append(clusterId).append(" [ CD ]
Line_2 $$ private static void printFragmentNodes(StringBuilder output, PlanFragment fragment, PlanNodeIdGenerator idGenerator) -->Line_8 $$ output.append("}").append('\n')[ CD ]
Line_2 $$ private static void printFragmentNodes(StringBuilder output, PlanFragment fragment, PlanNodeIdGenerator idGenerator) -->Line_4 $$ output.append("subgraph ").append(clusterId).append(" [ FD ]
Line_6 $$ PlanNode plan = fragment.getRoot()-->Line_7 $$ plan.accept(new NodePrinter(output, idGenerator), null)[ FD ]
Line_2 $$ private static void printFragmentNodes(StringBuilder output, PlanFragment fragment, PlanNodeIdGenerator idGenerator) -->Line_5 $$ output.append(format("label = \"%s\"", fragment.getDistribution())).append('\n')[ FD ]
Line_2 $$ private static void printFragmentNodes(StringBuilder output, PlanFragment fragment, PlanNodeIdGenerator idGenerator) -->Line_7 $$ plan.accept(new NodePrinter(output, idGenerator), null)[ CD ]
Line_2 $$ private static void printFragmentNodes(StringBuilder output, PlanFragment fragment, PlanNodeIdGenerator idGenerator) -->Line_6 $$ PlanNode plan = fragment.getRoot()[ CD ]
