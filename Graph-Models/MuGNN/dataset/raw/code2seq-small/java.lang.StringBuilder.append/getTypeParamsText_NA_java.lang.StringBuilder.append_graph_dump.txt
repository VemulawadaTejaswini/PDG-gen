Line_4 $$ final PsiSubstitutor substitutor = getInferenceSubstitutor()-->Line_13 $$ PsiType type = substitutor.substitute(parameter)[ FD ]
Line_7 $$ final StringBuilder builder = new StringBuilder("<")-->Line_26 $$ return builder.append(">").toString()[ FD ]
Line_15 $$ type = ((PsiWildcardType) type).getExtendsBound()-->Line_21 $$ final String text = presentable ? type.getPresentableText() : type.getCanonicalText()[ FD ]
Line_8 $$ boolean first = true-->Line_12 $$ first = false[ FD ]
Line_10 $$ if (!first)-->Line_11 $$ builder.append(", ")[ CD ]
Line_13 $$ PsiType type = substitutor.substitute(parameter)-->Line_21 $$ final String text = presentable ? type.getPresentableText() : type.getCanonicalText()[ FD ]
Line_15 $$ type = ((PsiWildcardType) type).getExtendsBound()-->Line_19 $$ if (type.equals(TypeConversionUtil.typeParameterErasure(parameter)))[ FD ]
Line_14 $$ if (type instanceof PsiWildcardType) -->Line_15 $$ type = ((PsiWildcardType) type).getExtendsBound()[ CD ]
Line_3 $$ final PsiMethod method = getObject()-->Line_5 $$ final PsiTypeParameter[] parameters = method.getTypeParameters()[ FD ]
Line_9 $$ for (final PsiTypeParameter parameter : parameters) -->Line_13 $$ PsiType type = substitutor.substitute(parameter)[ FD ]
Line_7 $$ final StringBuilder builder = new StringBuilder("<")-->Line_24 $$ builder.append(text)[ FD ]
Line_9 $$ for (final PsiTypeParameter parameter : parameters) -->Line_19 $$ if (type.equals(TypeConversionUtil.typeParameterErasure(parameter)))[ FD ]
Line_2 $$ private String getTypeParamsText(boolean presentable) -->Line_3 $$ final PsiMethod method = getObject()[ CD ]
Line_2 $$ private String getTypeParamsText(boolean presentable) -->Line_26 $$ return builder.append(">").toString()[ CD ]
Line_2 $$ private String getTypeParamsText(boolean presentable) -->Line_5 $$ final PsiTypeParameter[] parameters = method.getTypeParameters()[ CD ]
Line_22 $$ if (text.indexOf('?') >= 0)-->Line_23 $$ return null[ CD ]
Line_13 $$ PsiType type = substitutor.substitute(parameter)-->Line_15 $$ type = ((PsiWildcardType) type).getExtendsBound()[ FD ]
Line_13 $$ PsiType type = substitutor.substitute(parameter)-->Line_14 $$ if (type instanceof PsiWildcardType) [ FD ]
Line_2 $$ private String getTypeParamsText(boolean presentable) -->Line_8 $$ boolean first = true[ CD ]
Line_8 $$ boolean first = true-->Line_10 $$ if (!first)[ FD ]
Line_2 $$ private String getTypeParamsText(boolean presentable) -->Line_7 $$ final StringBuilder builder = new StringBuilder("<")[ CD ]
Line_19 $$ if (type.equals(TypeConversionUtil.typeParameterErasure(parameter)))-->Line_20 $$ return null[ CD ]
Line_7 $$ final StringBuilder builder = new StringBuilder("<")-->Line_11 $$ builder.append(", ")[ FD ]
Line_13 $$ PsiType type = substitutor.substitute(parameter)-->Line_19 $$ if (type.equals(TypeConversionUtil.typeParameterErasure(parameter)))[ FD ]
Line_21 $$ final String text = presentable ? type.getPresentableText() : type.getCanonicalText()-->Line_22 $$ if (text.indexOf('?') >= 0)[ FD ]
Line_17 $$ if (type == null || type instanceof PsiCapturedWildcardType)-->Line_18 $$ return null[ CD ]
Line_21 $$ final String text = presentable ? type.getPresentableText() : type.getCanonicalText()-->Line_24 $$ builder.append(text)[ FD ]
Line_2 $$ private String getTypeParamsText(boolean presentable) -->Line_4 $$ final PsiSubstitutor substitutor = getInferenceSubstitutor()[ CD ]
