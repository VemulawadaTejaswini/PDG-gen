Line_2 $$ private void printPageSimulate(HttpServletRequest request, HttpServletResponse response, int timeunit, String timeunitLabel) throws IOException -->Line_6 $$ StringBuilder queueInfo = new StringBuilder()[ CD ]
Line_2 $$ private void printPageSimulate(HttpServletRequest request, HttpServletResponse response, int timeunit, String timeunitLabel) throws IOException -->Line_13 $$ String simulateInfo = MessageFormat.format(simulateTemplate, queueInfo.toString(), timeunitLabel, "" + timeunit, "" + ajaxUpdateTimeMS)[ CD ]
Line_2 $$ private void printPageSimulate(HttpServletRequest request, HttpServletResponse response, int timeunit, String timeunitLabel) throws IOException -->Line_14 $$ response.getWriter().println(simulateInfo)[ CD ]
Line_6 $$ StringBuilder queueInfo = new StringBuilder()-->Line_9 $$ queueInfo.append("legends[4][").append(i).append("] = 'queue.").append(queue).append(".allocated.memory';")[ FD ]
Line_2 $$ private void printPageSimulate(HttpServletRequest request, HttpServletResponse response, int timeunit, String timeunitLabel) throws IOException -->Line_5 $$ Set<String> queues = wrapper.getQueueSet()[ CD ]
Line_7 $$ int i = 0-->Line_9 $$ queueInfo.append("legends[4][").append(i).append("] = 'queue.").append(queue).append(".allocated.memory';")[ FD ]
Line_2 $$ private void printPageSimulate(HttpServletRequest request, HttpServletResponse response, int timeunit, String timeunitLabel) throws IOException -->Line_7 $$ int i = 0[ CD ]
Line_2 $$ private void printPageSimulate(HttpServletRequest request, HttpServletResponse response, int timeunit, String timeunitLabel) throws IOException -->Line_13 $$ String simulateInfo = MessageFormat.format(simulateTemplate, queueInfo.toString(), timeunitLabel, "" + timeunit, "" + ajaxUpdateTimeMS)[ FD ]
Line_6 $$ StringBuilder queueInfo = new StringBuilder()-->Line_10 $$ queueInfo.append("legends[5][").append(i).append("] = 'queue.").append(queue).append(".allocated.vcores';")[ FD ]
Line_8 $$ for (String queue : queues) -->Line_9 $$ queueInfo.append("legends[4][").append(i).append("] = 'queue.").append(queue).append(".allocated.memory';")[ FD ]
Line_2 $$ private void printPageSimulate(HttpServletRequest request, HttpServletResponse response, int timeunit, String timeunitLabel) throws IOException -->Line_15 $$ ((Request) request).setHandled(true)[ CD ]
Line_8 $$ for (String queue : queues) -->Line_10 $$ queueInfo.append("legends[5][").append(i).append("] = 'queue.").append(queue).append(".allocated.vcores';")[ FD ]
Line_2 $$ private void printPageSimulate(HttpServletRequest request, HttpServletResponse response, int timeunit, String timeunitLabel) throws IOException -->Line_4 $$ response.setStatus(HttpServletResponse.SC_OK)[ FD ]
Line_2 $$ private void printPageSimulate(HttpServletRequest request, HttpServletResponse response, int timeunit, String timeunitLabel) throws IOException -->Line_3 $$ response.setContentType("text/html")[ CD ]
Line_2 $$ private void printPageSimulate(HttpServletRequest request, HttpServletResponse response, int timeunit, String timeunitLabel) throws IOException -->Line_3 $$ response.setContentType("text/html")[ FD ]
Line_7 $$ int i = 0-->Line_11 $$ i++[ FD ]
Line_7 $$ int i = 0-->Line_10 $$ queueInfo.append("legends[5][").append(i).append("] = 'queue.").append(queue).append(".allocated.vcores';")[ FD ]
Line_2 $$ private void printPageSimulate(HttpServletRequest request, HttpServletResponse response, int timeunit, String timeunitLabel) throws IOException -->Line_14 $$ response.getWriter().println(simulateInfo)[ FD ]
Line_2 $$ private void printPageSimulate(HttpServletRequest request, HttpServletResponse response, int timeunit, String timeunitLabel) throws IOException -->Line_4 $$ response.setStatus(HttpServletResponse.SC_OK)[ CD ]
Line_6 $$ StringBuilder queueInfo = new StringBuilder()-->Line_13 $$ String simulateInfo = MessageFormat.format(simulateTemplate, queueInfo.toString(), timeunitLabel, "" + timeunit, "" + ajaxUpdateTimeMS)[ FD ]
Line_13 $$ String simulateInfo = MessageFormat.format(simulateTemplate, queueInfo.toString(), timeunitLabel, "" + timeunit, "" + ajaxUpdateTimeMS)-->Line_14 $$ response.getWriter().println(simulateInfo)[ FD ]
