Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_17 $$ return sb.toString()[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_15 $$ sb.append(")")[ FD ]
Line_4 $$ if (!inclusions.isEmpty()) -->Line_5 $$ sb.append("(")[ CD ]
Line_2 $$ public final String describe() -->Line_12 $$ if (!exclusions.isEmpty()) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_9 $$ sb.append(" AND ")[ FD ]
Line_8 $$ if (!exclusions.isEmpty()) -->Line_9 $$ sb.append(" AND ")[ CD ]
Line_12 $$ if (!exclusions.isEmpty()) -->Line_14 $$ sb.append(StringUtils.join(exclusions, " OR "))[ CD ]
Line_12 $$ if (!exclusions.isEmpty()) -->Line_13 $$ sb.append("NOT (")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_13 $$ sb.append("NOT (")[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_7 $$ sb.append(")")[ FD ]
Line_2 $$ public final String describe() -->Line_17 $$ return sb.toString()[ CD ]
Line_2 $$ public final String describe() -->Line_4 $$ if (!inclusions.isEmpty()) [ CD ]
Line_4 $$ if (!inclusions.isEmpty()) -->Line_7 $$ sb.append(")")[ CD ]
Line_2 $$ public final String describe() -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_4 $$ if (!inclusions.isEmpty()) -->Line_6 $$ sb.append(StringUtils.join(inclusions, " OR "))[ CD ]
Line_12 $$ if (!exclusions.isEmpty()) -->Line_15 $$ sb.append(")")[ CD ]
Line_4 $$ if (!inclusions.isEmpty()) -->Line_8 $$ if (!exclusions.isEmpty()) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_14 $$ sb.append(StringUtils.join(exclusions, " OR "))[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_6 $$ sb.append(StringUtils.join(inclusions, " OR "))[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_5 $$ sb.append("(")[ FD ]
