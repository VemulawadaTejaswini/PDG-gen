Line_6 $$ if (isDirectoryBased) -->Line_7 $$ sb.append(", ")[ CD ]
Line_2 $$ public String getProjectConfigurationMessage(final Project project) -->Line_12 $$ if (isDirectoryBased) [ CD ]
Line_2 $$ public String getProjectConfigurationMessage(final Project project) -->Line_5 $$ final StringBuilder sb = new StringBuilder(parts[0])[ CD ]
Line_12 $$ if (isDirectoryBased) -->Line_13 $$ sb.append(", and ")[ CD ]
Line_5 $$ final StringBuilder sb = new StringBuilder(parts[0])-->Line_11 $$ sb.append(parts[1])[ FD ]
Line_5 $$ final StringBuilder sb = new StringBuilder(parts[0])-->Line_13 $$ sb.append(", and ")[ FD ]
Line_2 $$ public String getProjectConfigurationMessage(final Project project) -->Line_6 $$ if (isDirectoryBased) [ CD ]
Line_2 $$ public String getProjectConfigurationMessage(final Project project) -->Line_16 $$ return sb.toString()[ CD ]
Line_2 $$ public String getProjectConfigurationMessage(final Project project) -->Line_4 $$ final String[] parts = new String[] [ CD ]
Line_2 $$ public String getProjectConfigurationMessage(final Project project) -->Line_3 $$ boolean isDirectoryBased = ProjectUtil.isDirectoryBased(project)[ CD ]
Line_2 $$ public String getProjectConfigurationMessage(final Project project) -->Line_3 $$ boolean isDirectoryBased = ProjectUtil.isDirectoryBased(project)[ FD ]
Line_5 $$ final StringBuilder sb = new StringBuilder(parts[0])-->Line_9 $$ sb.append(", and ")[ FD ]
Line_2 $$ public String getProjectConfigurationMessage(final Project project) -->Line_11 $$ sb.append(parts[1])[ CD ]
Line_12 $$ if (isDirectoryBased) -->Line_14 $$ sb.append(parts[2])[ CD ]
Line_5 $$ final StringBuilder sb = new StringBuilder(parts[0])-->Line_16 $$ return sb.toString()[ FD ]
Line_5 $$ final StringBuilder sb = new StringBuilder(parts[0])-->Line_14 $$ sb.append(parts[2])[ FD ]
Line_6 $$ if (isDirectoryBased) -->Line_9 $$ sb.append(", and ")[ CD ]
Line_5 $$ final StringBuilder sb = new StringBuilder(parts[0])-->Line_7 $$ sb.append(", ")[ FD ]
