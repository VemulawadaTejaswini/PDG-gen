Line_4 $$ if (elements.length == 0)-->Line_5 $$ return[ CD ]
Line_2 $$ private void generateOneParameter(StringBuilder buffer, ParamInfo tag) -->Line_13 $$ buffer.append(StringUtil.escapeXml(tag.name))[ FD ]
Line_2 $$ private void generateOneParameter(StringBuilder buffer, ParamInfo tag) -->Line_3 $$ PsiElement[] elements = tag.docTag.getDataElements()[ CD ]
Line_10 $$ spaceIndex = text.length()-->Line_16 $$ buffer.append(text.substring(spaceIndex))[ FD ]
Line_2 $$ private void generateOneParameter(StringBuilder buffer, ParamInfo tag) -->Line_7 $$ buffer.append("<DD>")[ CD ]
Line_8 $$ int spaceIndex = text.indexOf(' ')-->Line_16 $$ buffer.append(text.substring(spaceIndex))[ FD ]
Line_6 $$ String text = elements[0].getText()-->Line_8 $$ int spaceIndex = text.indexOf(' ')[ FD ]
Line_2 $$ private void generateOneParameter(StringBuilder buffer, ParamInfo tag) -->Line_17 $$ generateValue(buffer, elements, 1, mapProvider(tag.inheritDocTagProvider, true))[ CD ]
Line_3 $$ PsiElement[] elements = tag.docTag.getDataElements()-->Line_17 $$ generateValue(buffer, elements, 1, mapProvider(tag.inheritDocTagProvider, true))[ FD ]
Line_2 $$ private void generateOneParameter(StringBuilder buffer, ParamInfo tag) -->Line_12 $$ buffer.append("<code>")[ CD ]
Line_2 $$ private void generateOneParameter(StringBuilder buffer, ParamInfo tag) -->Line_15 $$ buffer.append(" - ")[ FD ]
Line_2 $$ private void generateOneParameter(StringBuilder buffer, ParamInfo tag) -->Line_14 $$ buffer.append("</code>")[ CD ]
Line_8 $$ int spaceIndex = text.indexOf(' ')-->Line_10 $$ spaceIndex = text.length()[ FD ]
Line_2 $$ private void generateOneParameter(StringBuilder buffer, ParamInfo tag) -->Line_12 $$ buffer.append("<code>")[ FD ]
Line_2 $$ private void generateOneParameter(StringBuilder buffer, ParamInfo tag) -->Line_17 $$ generateValue(buffer, elements, 1, mapProvider(tag.inheritDocTagProvider, true))[ FD ]
Line_2 $$ private void generateOneParameter(StringBuilder buffer, ParamInfo tag) -->Line_14 $$ buffer.append("</code>")[ FD ]
Line_2 $$ private void generateOneParameter(StringBuilder buffer, ParamInfo tag) -->Line_16 $$ buffer.append(text.substring(spaceIndex))[ FD ]
Line_2 $$ private void generateOneParameter(StringBuilder buffer, ParamInfo tag) -->Line_13 $$ buffer.append(StringUtil.escapeXml(tag.name))[ CD ]
Line_2 $$ private void generateOneParameter(StringBuilder buffer, ParamInfo tag) -->Line_16 $$ buffer.append(text.substring(spaceIndex))[ CD ]
Line_2 $$ private void generateOneParameter(StringBuilder buffer, ParamInfo tag) -->Line_8 $$ int spaceIndex = text.indexOf(' ')[ CD ]
Line_8 $$ int spaceIndex = text.indexOf(' ')-->Line_9 $$ if (spaceIndex < 0) [ FD ]
Line_6 $$ String text = elements[0].getText()-->Line_16 $$ buffer.append(text.substring(spaceIndex))[ FD ]
Line_9 $$ if (spaceIndex < 0) -->Line_10 $$ spaceIndex = text.length()[ CD ]
Line_2 $$ private void generateOneParameter(StringBuilder buffer, ParamInfo tag) -->Line_6 $$ String text = elements[0].getText()[ CD ]
Line_6 $$ String text = elements[0].getText()-->Line_10 $$ spaceIndex = text.length()[ FD ]
Line_2 $$ private void generateOneParameter(StringBuilder buffer, ParamInfo tag) -->Line_4 $$ if (elements.length == 0)[ CD ]
Line_2 $$ private void generateOneParameter(StringBuilder buffer, ParamInfo tag) -->Line_9 $$ if (spaceIndex < 0) [ CD ]
Line_2 $$ private void generateOneParameter(StringBuilder buffer, ParamInfo tag) -->Line_15 $$ buffer.append(" - ")[ CD ]
Line_2 $$ private void generateOneParameter(StringBuilder buffer, ParamInfo tag) -->Line_7 $$ buffer.append("<DD>")[ FD ]
