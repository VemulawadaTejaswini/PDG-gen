Line_15 $$ if (!closingBraceIndentAdjusted) -->Line_21 $$ for (int i = start; i < end; i++) [ CD ]
Line_2 $$ protected void formatCodeFragmentBetweenBraces(@NotNull PsiFile file, @NotNull Document document, int caretOffset, int rBracesInsertOffset, String generatedRBraces) -->Line_13 $$ document.deleteString(caretOffset, caretOffset + 1)[ FD ]
Line_4 $$ long stamp = document.getModificationStamp()-->Line_12 $$ closingBraceIndentAdjusted = stamp != document.getModificationStamp()[ FD ]
Line_20 $$ final CharSequence text = document.getCharsSequence()-->Line_22 $$ char c = text.charAt(i)[ FD ]
Line_3 $$ Project project = file.getProject()-->Line_7 $$ PsiDocumentManager.getInstance(project).commitDocument(document)[ FD ]
Line_16 $$ int line = document.getLineNumber(rBracesInsertOffset)-->Line_18 $$ int start = document.getLineStartOffset(line)[ FD ]
Line_2 $$ protected void formatCodeFragmentBetweenBraces(@NotNull PsiFile file, @NotNull Document document, int caretOffset, int rBracesInsertOffset, String generatedRBraces) -->Line_19 $$ int end = document.getLineEndOffset(line)[ FD ]
Line_2 $$ protected void formatCodeFragmentBetweenBraces(@NotNull PsiFile file, @NotNull Document document, int caretOffset, int rBracesInsertOffset, String generatedRBraces) -->Line_20 $$ final CharSequence text = document.getCharsSequence()[ FD ]
Line_2 $$ protected void formatCodeFragmentBetweenBraces(@NotNull PsiFile file, @NotNull Document document, int caretOffset, int rBracesInsertOffset, String generatedRBraces) -->Line_4 $$ long stamp = document.getModificationStamp()[ CD ]
Line_15 $$ if (!closingBraceIndentAdjusted) -->Line_16 $$ int line = document.getLineNumber(rBracesInsertOffset)[ CD ]
Line_2 $$ protected void formatCodeFragmentBetweenBraces(@NotNull PsiFile file, @NotNull Document document, int caretOffset, int rBracesInsertOffset, String generatedRBraces) -->Line_4 $$ long stamp = document.getModificationStamp()[ FD ]
Line_2 $$ protected void formatCodeFragmentBetweenBraces(@NotNull PsiFile file, @NotNull Document document, int caretOffset, int rBracesInsertOffset, String generatedRBraces) -->Line_16 $$ int line = document.getLineNumber(rBracesInsertOffset)[ FD ]
Line_21 $$ for (int i = start; i < end; i++) -->Line_22 $$ char c = text.charAt(i)[ CD ]
Line_2 $$ protected void formatCodeFragmentBetweenBraces(@NotNull PsiFile file, @NotNull Document document, int caretOffset, int rBracesInsertOffset, String generatedRBraces) -->Line_12 $$ closingBraceIndentAdjusted = stamp != document.getModificationStamp()[ FD ]
Line_2 $$ protected void formatCodeFragmentBetweenBraces(@NotNull PsiFile file, @NotNull Document document, int caretOffset, int rBracesInsertOffset, String generatedRBraces) -->Line_30 $$ document.insertString(rBracesInsertOffset + 1, buffer)[ FD ]
Line_16 $$ int line = document.getLineNumber(rBracesInsertOffset)-->Line_19 $$ int end = document.getLineEndOffset(line)[ FD ]
Line_19 $$ int end = document.getLineEndOffset(line)-->Line_21 $$ for (int i = start; i < end; i++) [ FD ]
Line_2 $$ protected void formatCodeFragmentBetweenBraces(@NotNull PsiFile file, @NotNull Document document, int caretOffset, int rBracesInsertOffset, String generatedRBraces) -->Line_8 $$ CodeStyleManager.getInstance(project).adjustLineIndent(file, new TextRange(caretOffset, rBracesInsertOffset + 2))[ FD ]
Line_17 $$ StringBuilder buffer = new StringBuilder()-->Line_26 $$ buffer.append(c)[ FD ]
Line_22 $$ char c = text.charAt(i)-->Line_26 $$ buffer.append(c)[ FD ]
Line_17 $$ StringBuilder buffer = new StringBuilder()-->Line_30 $$ document.insertString(rBracesInsertOffset + 1, buffer)[ FD ]
Line_2 $$ protected void formatCodeFragmentBetweenBraces(@NotNull PsiFile file, @NotNull Document document, int caretOffset, int rBracesInsertOffset, String generatedRBraces) -->Line_3 $$ Project project = file.getProject()[ CD ]
Line_15 $$ if (!closingBraceIndentAdjusted) -->Line_17 $$ StringBuilder buffer = new StringBuilder()[ CD ]
Line_3 $$ Project project = file.getProject()-->Line_8 $$ CodeStyleManager.getInstance(project).adjustLineIndent(file, new TextRange(caretOffset, rBracesInsertOffset + 2))[ FD ]
Line_17 $$ StringBuilder buffer = new StringBuilder()-->Line_29 $$ if (buffer.length() > 0) [ FD ]
Line_15 $$ if (!closingBraceIndentAdjusted) -->Line_20 $$ final CharSequence text = document.getCharsSequence()[ CD ]
Line_21 $$ for (int i = start; i < end; i++) -->Line_22 $$ char c = text.charAt(i)[ FD ]
Line_15 $$ if (!closingBraceIndentAdjusted) -->Line_18 $$ int start = document.getLineStartOffset(line)[ CD ]
Line_12 $$ closingBraceIndentAdjusted = stamp != document.getModificationStamp()-->Line_15 $$ if (!closingBraceIndentAdjusted) [ FD ]
Line_2 $$ protected void formatCodeFragmentBetweenBraces(@NotNull PsiFile file, @NotNull Document document, int caretOffset, int rBracesInsertOffset, String generatedRBraces) -->Line_5 $$ boolean closingBraceIndentAdjusted[ CD ]
Line_15 $$ if (!closingBraceIndentAdjusted) -->Line_29 $$ if (buffer.length() > 0) [ CD ]
Line_5 $$ boolean closingBraceIndentAdjusted-->Line_15 $$ if (!closingBraceIndentAdjusted) [ FD ]
Line_29 $$ if (buffer.length() > 0) -->Line_30 $$ document.insertString(rBracesInsertOffset + 1, buffer)[ CD ]
Line_5 $$ boolean closingBraceIndentAdjusted-->Line_12 $$ closingBraceIndentAdjusted = stamp != document.getModificationStamp()[ FD ]
Line_2 $$ protected void formatCodeFragmentBetweenBraces(@NotNull PsiFile file, @NotNull Document document, int caretOffset, int rBracesInsertOffset, String generatedRBraces) -->Line_7 $$ PsiDocumentManager.getInstance(project).commitDocument(document)[ FD ]
Line_2 $$ protected void formatCodeFragmentBetweenBraces(@NotNull PsiFile file, @NotNull Document document, int caretOffset, int rBracesInsertOffset, String generatedRBraces) -->Line_15 $$ if (!closingBraceIndentAdjusted) [ CD ]
Line_15 $$ if (!closingBraceIndentAdjusted) -->Line_19 $$ int end = document.getLineEndOffset(line)[ CD ]
Line_2 $$ protected void formatCodeFragmentBetweenBraces(@NotNull PsiFile file, @NotNull Document document, int caretOffset, int rBracesInsertOffset, String generatedRBraces) -->Line_18 $$ int start = document.getLineStartOffset(line)[ FD ]
Line_21 $$ for (int i = start; i < end; i++) -->Line_23 $$ if (c != ' ' && c != '\t') [ CD ]
Line_23 $$ if (c != ' ' && c != '\t') -->Line_26 $$ buffer.append(c)[ CD ]
Line_2 $$ protected void formatCodeFragmentBetweenBraces(@NotNull PsiFile file, @NotNull Document document, int caretOffset, int rBracesInsertOffset, String generatedRBraces) -->Line_3 $$ Project project = file.getProject()[ FD ]
