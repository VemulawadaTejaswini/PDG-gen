Line_4 $$ final StringTokenizer tokens = new StringTokenizer(sql, " (,)'[]\"", true)-->Line_6 $$ while (tokens.hasMoreTokens()) [ FD ]
Line_2 $$ private String formatAlterTable(String sql) -->Line_3 $$ final StringBuilder result = new StringBuilder(60).append("\n    ")[ CD ]
Line_8 $$ if (isQuote(token)) -->Line_10 $$ if (!quoted) [ CD ]
Line_4 $$ final StringTokenizer tokens = new StringTokenizer(sql, " (,)'[]\"", true)-->Line_7 $$ final String token = tokens.nextToken()[ FD ]
Line_2 $$ private String formatAlterTable(String sql) -->Line_6 $$ while (tokens.hasMoreTokens()) [ CD ]
Line_5 $$ boolean quoted = false-->Line_10 $$ if (!quoted) [ FD ]
Line_5 $$ boolean quoted = false-->Line_9 $$ quoted = !quoted[ FD ]
Line_11 $$ if (isBreak(token)) -->Line_12 $$ result.append("\n        ")[ CD ]
Line_3 $$ final StringBuilder result = new StringBuilder(60).append("\n    ")-->Line_12 $$ result.append("\n        ")[ FD ]
Line_2 $$ private String formatAlterTable(String sql) -->Line_17 $$ return result.toString()[ CD ]
Line_6 $$ while (tokens.hasMoreTokens()) -->Line_15 $$ result.append(token)[ CD ]
Line_6 $$ while (tokens.hasMoreTokens()) -->Line_8 $$ if (isQuote(token)) [ CD ]
Line_2 $$ private String formatAlterTable(String sql) -->Line_4 $$ final StringTokenizer tokens = new StringTokenizer(sql, " (,)'[]\"", true)[ CD ]
Line_3 $$ final StringBuilder result = new StringBuilder(60).append("\n    ")-->Line_15 $$ result.append(token)[ FD ]
Line_3 $$ final StringBuilder result = new StringBuilder(60).append("\n    ")-->Line_17 $$ return result.toString()[ FD ]
Line_9 $$ quoted = !quoted-->Line_10 $$ if (!quoted) [ FD ]
Line_7 $$ final String token = tokens.nextToken()-->Line_15 $$ result.append(token)[ FD ]
Line_6 $$ while (tokens.hasMoreTokens()) -->Line_7 $$ final String token = tokens.nextToken()[ CD ]
Line_8 $$ if (isQuote(token)) -->Line_9 $$ quoted = !quoted[ CD ]
Line_7 $$ final String token = tokens.nextToken()-->Line_8 $$ if (isQuote(token)) [ FD ]
Line_2 $$ private String formatAlterTable(String sql) -->Line_5 $$ boolean quoted = false[ CD ]
Line_10 $$ if (!quoted) -->Line_11 $$ if (isBreak(token)) [ CD ]
Line_7 $$ final String token = tokens.nextToken()-->Line_11 $$ if (isBreak(token)) [ FD ]
