Line_13 $$ for (String err_line : genResult.getStderrLines()) -->Line_14 $$ sb.append(err_line).append("\n")[ FD ]
Line_5 $$ StringBuilder sb = new StringBuilder("Skeleton for ")-->Line_16 $$ sb.append("--")[ FD ]
Line_5 $$ StringBuilder sb = new StringBuilder("Skeleton for ")-->Line_20 $$ LOG.info(sb.toString())[ FD ]
Line_4 $$ if (genResult.getStderrLines().size() > 0) -->Line_5 $$ StringBuilder sb = new StringBuilder("Skeleton for ")[ CD ]
Line_2 $$ protected void generateSkeleton(String modname, String modfilename, List<String> assemblyRefs, String syspath, String sdkHomePath, Consumer<Boolean> resultConsumer) throws InvalidSdkException -->Line_3 $$ final ProcessOutput genResult = runSkeletonGeneration(modname, modfilename, assemblyRefs, sdkHomePath, syspath)[ CD ]
Line_17 $$ if (ApplicationManagerEx.getApplicationEx().isInternal()) -->Line_20 $$ LOG.info(sb.toString())[ CD ]
Line_5 $$ StringBuilder sb = new StringBuilder("Skeleton for ")-->Line_10 $$ sb.append(" had some minor errors on ")[ FD ]
Line_2 $$ protected void generateSkeleton(String modname, String modfilename, List<String> assemblyRefs, String syspath, String sdkHomePath, Consumer<Boolean> resultConsumer) throws InvalidSdkException -->Line_3 $$ final ProcessOutput genResult = runSkeletonGeneration(modname, modfilename, assemblyRefs, sdkHomePath, syspath)[ FD ]
Line_2 $$ protected void generateSkeleton(String modname, String modfilename, List<String> assemblyRefs, String syspath, String sdkHomePath, Consumer<Boolean> resultConsumer) throws InvalidSdkException -->Line_23 $$ resultConsumer.consume(genResult.getExitCode() == 0)[ FD ]
Line_4 $$ if (genResult.getStderrLines().size() > 0) -->Line_7 $$ if (genResult.getExitCode() != 0) [ CD ]
Line_3 $$ final ProcessOutput genResult = runSkeletonGeneration(modname, modfilename, assemblyRefs, sdkHomePath, syspath)-->Line_13 $$ for (String err_line : genResult.getStderrLines()) [ FD ]
Line_4 $$ if (genResult.getStderrLines().size() > 0) -->Line_12 $$ sb.append(sdkHomePath).append(". stderr: --\n")[ CD ]
Line_4 $$ if (genResult.getStderrLines().size() > 0) -->Line_6 $$ sb.append(modname)[ CD ]
Line_3 $$ final ProcessOutput genResult = runSkeletonGeneration(modname, modfilename, assemblyRefs, sdkHomePath, syspath)-->Line_23 $$ resultConsumer.consume(genResult.getExitCode() == 0)[ FD ]
Line_7 $$ if (genResult.getExitCode() != 0) -->Line_8 $$ sb.append(" failed on ")[ CD ]
Line_5 $$ StringBuilder sb = new StringBuilder("Skeleton for ")-->Line_6 $$ sb.append(modname)[ FD ]
Line_3 $$ final ProcessOutput genResult = runSkeletonGeneration(modname, modfilename, assemblyRefs, sdkHomePath, syspath)-->Line_4 $$ if (genResult.getStderrLines().size() > 0) [ FD ]
Line_2 $$ protected void generateSkeleton(String modname, String modfilename, List<String> assemblyRefs, String syspath, String sdkHomePath, Consumer<Boolean> resultConsumer) throws InvalidSdkException -->Line_4 $$ if (genResult.getStderrLines().size() > 0) [ CD ]
Line_5 $$ StringBuilder sb = new StringBuilder("Skeleton for ")-->Line_12 $$ sb.append(sdkHomePath).append(". stderr: --\n")[ FD ]
Line_2 $$ protected void generateSkeleton(String modname, String modfilename, List<String> assemblyRefs, String syspath, String sdkHomePath, Consumer<Boolean> resultConsumer) throws InvalidSdkException -->Line_23 $$ resultConsumer.consume(genResult.getExitCode() == 0)[ CD ]
Line_7 $$ if (genResult.getExitCode() != 0) -->Line_10 $$ sb.append(" had some minor errors on ")[ CD ]
Line_5 $$ StringBuilder sb = new StringBuilder("Skeleton for ")-->Line_14 $$ sb.append(err_line).append("\n")[ FD ]
Line_5 $$ StringBuilder sb = new StringBuilder("Skeleton for ")-->Line_18 $$ LOG.warn(sb.toString())[ FD ]
Line_2 $$ protected void generateSkeleton(String modname, String modfilename, List<String> assemblyRefs, String syspath, String sdkHomePath, Consumer<Boolean> resultConsumer) throws InvalidSdkException -->Line_6 $$ sb.append(modname)[ FD ]
Line_2 $$ protected void generateSkeleton(String modname, String modfilename, List<String> assemblyRefs, String syspath, String sdkHomePath, Consumer<Boolean> resultConsumer) throws InvalidSdkException -->Line_12 $$ sb.append(sdkHomePath).append(". stderr: --\n")[ FD ]
Line_4 $$ if (genResult.getStderrLines().size() > 0) -->Line_16 $$ sb.append("--")[ CD ]
Line_4 $$ if (genResult.getStderrLines().size() > 0) -->Line_17 $$ if (ApplicationManagerEx.getApplicationEx().isInternal()) [ CD ]
Line_17 $$ if (ApplicationManagerEx.getApplicationEx().isInternal()) -->Line_18 $$ LOG.warn(sb.toString())[ CD ]
Line_5 $$ StringBuilder sb = new StringBuilder("Skeleton for ")-->Line_8 $$ sb.append(" failed on ")[ FD ]
Line_3 $$ final ProcessOutput genResult = runSkeletonGeneration(modname, modfilename, assemblyRefs, sdkHomePath, syspath)-->Line_7 $$ if (genResult.getExitCode() != 0) [ FD ]
