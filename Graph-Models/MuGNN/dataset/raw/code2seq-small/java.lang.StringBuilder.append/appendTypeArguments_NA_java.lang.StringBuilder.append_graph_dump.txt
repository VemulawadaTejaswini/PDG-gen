Line_2 $$ private static void appendTypeArguments(GenericType type, StringBuilder buffer) -->Line_12 $$ buffer.append('?')[ FD ]
Line_5 $$ for (int i = 0; i < type.getArguments().size(); i++) -->Line_6 $$ if (i > 0) [ FD ]
Line_6 $$ if (i > 0) -->Line_7 $$ buffer.append(", ")[ CD ]
Line_5 $$ for (int i = 0; i < type.getArguments().size(); i++) -->Line_9 $$ int wildcard = type.getWildcards().get(i)[ CD ]
Line_5 $$ for (int i = 0; i < type.getArguments().size(); i++) -->Line_21 $$ GenericType genPar = type.getArguments().get(i)[ FD ]
Line_2 $$ private static void appendTypeArguments(GenericType type, StringBuilder buffer) -->Line_18 $$ buffer.append("? super ")[ FD ]
Line_2 $$ private static void appendTypeArguments(GenericType type, StringBuilder buffer) -->Line_3 $$ if (!type.getArguments().isEmpty()) [ FD ]
Line_2 $$ private static void appendTypeArguments(GenericType type, StringBuilder buffer) -->Line_9 $$ int wildcard = type.getWildcards().get(i)[ FD ]
Line_5 $$ for (int i = 0; i < type.getArguments().size(); i++) -->Line_6 $$ if (i > 0) [ CD ]
Line_2 $$ private static void appendTypeArguments(GenericType type, StringBuilder buffer) -->Line_3 $$ if (!type.getArguments().isEmpty()) [ CD ]
Line_5 $$ for (int i = 0; i < type.getArguments().size(); i++) -->Line_9 $$ int wildcard = type.getWildcards().get(i)[ FD ]
Line_3 $$ if (!type.getArguments().isEmpty()) -->Line_4 $$ buffer.append('<')[ CD ]
Line_2 $$ private static void appendTypeArguments(GenericType type, StringBuilder buffer) -->Line_21 $$ GenericType genPar = type.getArguments().get(i)[ FD ]
Line_21 $$ GenericType genPar = type.getArguments().get(i)-->Line_22 $$ if (genPar != null) [ FD ]
Line_5 $$ for (int i = 0; i < type.getArguments().size(); i++) -->Line_22 $$ if (genPar != null) [ CD ]
Line_5 $$ for (int i = 0; i < type.getArguments().size(); i++) -->Line_21 $$ GenericType genPar = type.getArguments().get(i)[ CD ]
Line_3 $$ if (!type.getArguments().isEmpty()) -->Line_26 $$ buffer.append(">")[ CD ]
Line_3 $$ if (!type.getArguments().isEmpty()) -->Line_5 $$ for (int i = 0; i < type.getArguments().size(); i++) [ CD ]
Line_2 $$ private static void appendTypeArguments(GenericType type, StringBuilder buffer) -->Line_7 $$ buffer.append(", ")[ FD ]
Line_22 $$ if (genPar != null) -->Line_23 $$ buffer.append(getGenericCastTypeName(genPar))[ CD ]
Line_2 $$ private static void appendTypeArguments(GenericType type, StringBuilder buffer) -->Line_15 $$ buffer.append("? extends ")[ FD ]
Line_2 $$ private static void appendTypeArguments(GenericType type, StringBuilder buffer) -->Line_5 $$ for (int i = 0; i < type.getArguments().size(); i++) [ FD ]
Line_2 $$ private static void appendTypeArguments(GenericType type, StringBuilder buffer) -->Line_26 $$ buffer.append(">")[ FD ]
Line_21 $$ GenericType genPar = type.getArguments().get(i)-->Line_23 $$ buffer.append(getGenericCastTypeName(genPar))[ FD ]
Line_2 $$ private static void appendTypeArguments(GenericType type, StringBuilder buffer) -->Line_23 $$ buffer.append(getGenericCastTypeName(genPar))[ FD ]
Line_2 $$ private static void appendTypeArguments(GenericType type, StringBuilder buffer) -->Line_4 $$ buffer.append('<')[ FD ]
