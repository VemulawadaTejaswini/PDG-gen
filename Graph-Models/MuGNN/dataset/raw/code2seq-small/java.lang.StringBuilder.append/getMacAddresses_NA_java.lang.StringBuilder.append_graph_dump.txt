Line_10 $$ Matcher matcher = macAddressPattern.matcher(line)-->Line_11 $$ if (!matcher.find()) [ FD ]
Line_6 $$ Pattern macAddressPattern = getMacAddressPattern()-->Line_10 $$ Matcher matcher = macAddressPattern.matcher(line)[ FD ]
Line_17 $$ macAddress = macAddress.replace(CharPool.PERIOD, CharPool.COLON)-->Line_29 $$ macAddress = sb.toString()[ FD ]
Line_2 $$ protected Set<String> getMacAddresses() throws Exception -->Line_3 $$ String osName = getDependenciesFileName()[ CD ]
Line_14 $$ String macAddress = matcher.group(1)-->Line_17 $$ macAddress = macAddress.replace(CharPool.PERIOD, CharPool.COLON)[ FD ]
Line_20 $$ for (int i = 1; i < 5; ++i) -->Line_21 $$ int pos = (i * 3) - 1[ CD ]
Line_26 $$ if (sb.length() < 17) -->Line_27 $$ sb.insert(15, CharPool.NUMBER_0)[ CD ]
Line_2 $$ protected Set<String> getMacAddresses() throws Exception -->Line_4 $$ InputStream processInputStream = getInputStream(osName)[ CD ]
Line_17 $$ macAddress = macAddress.replace(CharPool.PERIOD, CharPool.COLON)-->Line_30 $$ macAddresses.add(macAddress)[ FD ]
Line_18 $$ StringBuilder sb = new StringBuilder(17)-->Line_22 $$ if (sb.charAt(pos) != CharPool.COLON) [ FD ]
Line_16 $$ macAddress = macAddress.replace(CharPool.DASH, CharPool.COLON)-->Line_30 $$ macAddresses.add(macAddress)[ FD ]
Line_9 $$ for (String line : lines) -->Line_10 $$ Matcher matcher = macAddressPattern.matcher(line)[ FD ]
Line_14 $$ String macAddress = matcher.group(1)-->Line_19 $$ sb.append(macAddress)[ FD ]
Line_14 $$ String macAddress = matcher.group(1)-->Line_29 $$ macAddress = sb.toString()[ FD ]
Line_18 $$ StringBuilder sb = new StringBuilder(17)-->Line_19 $$ sb.append(macAddress)[ FD ]
Line_10 $$ Matcher matcher = macAddressPattern.matcher(line)-->Line_14 $$ String macAddress = matcher.group(1)[ FD ]
Line_3 $$ String osName = getDependenciesFileName()-->Line_4 $$ InputStream processInputStream = getInputStream(osName)[ FD ]
Line_18 $$ StringBuilder sb = new StringBuilder(17)-->Line_26 $$ if (sb.length() < 17) [ FD ]
Line_4 $$ InputStream processInputStream = getInputStream(osName)-->Line_7 $$ String processOutput = StringUtil.read(processInputStream)[ FD ]
Line_15 $$ macAddress = StringUtil.toLowerCase(macAddress)-->Line_30 $$ macAddresses.add(macAddress)[ FD ]
Line_16 $$ macAddress = macAddress.replace(CharPool.DASH, CharPool.COLON)-->Line_29 $$ macAddress = sb.toString()[ FD ]
Line_14 $$ String macAddress = matcher.group(1)-->Line_16 $$ macAddress = macAddress.replace(CharPool.DASH, CharPool.COLON)[ FD ]
Line_14 $$ String macAddress = matcher.group(1)-->Line_15 $$ macAddress = StringUtil.toLowerCase(macAddress)[ FD ]
Line_18 $$ StringBuilder sb = new StringBuilder(17)-->Line_23 $$ sb.insert((i - 1) * 3, CharPool.NUMBER_0)[ FD ]
Line_20 $$ for (int i = 1; i < 5; ++i) -->Line_22 $$ if (sb.charAt(pos) != CharPool.COLON) [ CD ]
Line_5 $$ Set<String> macAddresses = new HashSet()-->Line_30 $$ macAddresses.add(macAddress)[ FD ]
Line_15 $$ macAddress = StringUtil.toLowerCase(macAddress)-->Line_29 $$ macAddress = sb.toString()[ FD ]
Line_2 $$ protected Set<String> getMacAddresses() throws Exception -->Line_5 $$ Set<String> macAddresses = new HashSet()[ CD ]
Line_2 $$ protected Set<String> getMacAddresses() throws Exception -->Line_8 $$ String[] lines = StringUtil.split(processOutput, CharPool.NEW_LINE)[ CD ]
Line_15 $$ macAddress = StringUtil.toLowerCase(macAddress)-->Line_17 $$ macAddress = macAddress.replace(CharPool.PERIOD, CharPool.COLON)[ FD ]
Line_15 $$ macAddress = StringUtil.toLowerCase(macAddress)-->Line_19 $$ sb.append(macAddress)[ FD ]
Line_7 $$ String processOutput = StringUtil.read(processInputStream)-->Line_8 $$ String[] lines = StringUtil.split(processOutput, CharPool.NEW_LINE)[ FD ]
Line_17 $$ macAddress = macAddress.replace(CharPool.PERIOD, CharPool.COLON)-->Line_19 $$ sb.append(macAddress)[ FD ]
Line_18 $$ StringBuilder sb = new StringBuilder(17)-->Line_27 $$ sb.insert(15, CharPool.NUMBER_0)[ FD ]
Line_14 $$ String macAddress = matcher.group(1)-->Line_30 $$ macAddresses.add(macAddress)[ FD ]
Line_2 $$ protected Set<String> getMacAddresses() throws Exception -->Line_7 $$ String processOutput = StringUtil.read(processInputStream)[ CD ]
Line_2 $$ protected Set<String> getMacAddresses() throws Exception -->Line_6 $$ Pattern macAddressPattern = getMacAddressPattern()[ CD ]
Line_16 $$ macAddress = macAddress.replace(CharPool.DASH, CharPool.COLON)-->Line_19 $$ sb.append(macAddress)[ FD ]
Line_21 $$ int pos = (i * 3) - 1-->Line_22 $$ if (sb.charAt(pos) != CharPool.COLON) [ FD ]
Line_16 $$ macAddress = macAddress.replace(CharPool.DASH, CharPool.COLON)-->Line_17 $$ macAddress = macAddress.replace(CharPool.PERIOD, CharPool.COLON)[ FD ]
Line_2 $$ protected Set<String> getMacAddresses() throws Exception -->Line_32 $$ return macAddresses[ CD ]
Line_22 $$ if (sb.charAt(pos) != CharPool.COLON) -->Line_23 $$ sb.insert((i - 1) * 3, CharPool.NUMBER_0)[ CD ]
Line_15 $$ macAddress = StringUtil.toLowerCase(macAddress)-->Line_16 $$ macAddress = macAddress.replace(CharPool.DASH, CharPool.COLON)[ FD ]
Line_18 $$ StringBuilder sb = new StringBuilder(17)-->Line_29 $$ macAddress = sb.toString()[ FD ]
Line_29 $$ macAddress = sb.toString()-->Line_30 $$ macAddresses.add(macAddress)[ FD ]
