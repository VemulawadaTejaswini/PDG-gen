Line_2 $$ public PsiParameterList createParameterList(@NotNull final String[] names, @NotNull final PsiType[] types) throws IncorrectOperationException -->Line_4 $$ builder.append("void method(")[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_10 $$ builder.append(");")[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_11 $$ return createMethodFromText(builder.toString(), null).getParameterList()[ FD ]
Line_5 $$ for (int i = 0; i < names.length; i++) -->Line_6 $$ if (i > 0)[ FD ]
Line_6 $$ if (i > 0)-->Line_7 $$ builder.append(", ")[ CD ]
Line_5 $$ for (int i = 0; i < names.length; i++) -->Line_8 $$ builder.append(types[i].getCanonicalText(true)).append(' ').append(names[i])[ CD ]
Line_2 $$ public PsiParameterList createParameterList(@NotNull final String[] names, @NotNull final PsiType[] types) throws IncorrectOperationException -->Line_11 $$ return createMethodFromText(builder.toString(), null).getParameterList()[ CD ]
Line_2 $$ public PsiParameterList createParameterList(@NotNull final String[] names, @NotNull final PsiType[] types) throws IncorrectOperationException -->Line_10 $$ builder.append(");")[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_7 $$ builder.append(", ")[ FD ]
Line_2 $$ public PsiParameterList createParameterList(@NotNull final String[] names, @NotNull final PsiType[] types) throws IncorrectOperationException -->Line_3 $$ StringBuilder builder = new StringBuilder()[ CD ]
Line_2 $$ public PsiParameterList createParameterList(@NotNull final String[] names, @NotNull final PsiType[] types) throws IncorrectOperationException -->Line_5 $$ for (int i = 0; i < names.length; i++) [ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_4 $$ builder.append("void method(")[ FD ]
Line_5 $$ for (int i = 0; i < names.length; i++) -->Line_6 $$ if (i > 0)[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_8 $$ builder.append(types[i].getCanonicalText(true)).append(' ').append(names[i])[ FD ]
