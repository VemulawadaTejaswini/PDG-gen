Line_2 $$ private static String getDelegationBody(PsiMethod methodToAdd, String delegationTarget) -->Line_13 $$ for (int i = 0; i < params.length; i++) [ CD ]
Line_13 $$ for (int i = 0; i < params.length; i++) -->Line_15 $$ if (i > 0) [ FD ]
Line_13 $$ for (int i = 0; i < params.length; i++) -->Line_18 $$ buffer.append(param.getName())[ CD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_11 $$ buffer.append("(")[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_9 $$ buffer.append(".")[ FD ]
Line_13 $$ for (int i = 0; i < params.length; i++) -->Line_14 $$ PsiParameter param = params[i][ CD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_6 $$ buffer.append("return ")[ FD ]
Line_14 $$ PsiParameter param = params[i]-->Line_18 $$ buffer.append(param.getName())[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_18 $$ buffer.append(param.getName())[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_10 $$ buffer.append(methodToAdd.getName())[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_4 $$ buffer.append("[ FD ]
Line_2 $$ private static String getDelegationBody(PsiMethod methodToAdd, String delegationTarget) -->Line_21 $$ return buffer.toString()[ CD ]
Line_2 $$ private static String getDelegationBody(PsiMethod methodToAdd, String delegationTarget) -->Line_12 $$ PsiParameter[] params = methodToAdd.getParameterList().getParameters()[ CD ]
Line_13 $$ for (int i = 0; i < params.length; i++) -->Line_15 $$ if (i > 0) [ CD ]
Line_15 $$ if (i > 0) -->Line_16 $$ buffer.append(",")[ CD ]
Line_2 $$ private static String getDelegationBody(PsiMethod methodToAdd, String delegationTarget) -->Line_3 $$ StringBuilder buffer = new StringBuilder()[ CD ]
Line_2 $$ private static String getDelegationBody(PsiMethod methodToAdd, String delegationTarget) -->Line_12 $$ PsiParameter[] params = methodToAdd.getParameterList().getParameters()[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_21 $$ return buffer.toString()[ FD ]
Line_2 $$ private static String getDelegationBody(PsiMethod methodToAdd, String delegationTarget) -->Line_10 $$ buffer.append(methodToAdd.getName())[ CD ]
Line_2 $$ private static String getDelegationBody(PsiMethod methodToAdd, String delegationTarget) -->Line_11 $$ buffer.append("(")[ CD ]
Line_2 $$ private static String getDelegationBody(PsiMethod methodToAdd, String delegationTarget) -->Line_9 $$ buffer.append(".")[ CD ]
Line_2 $$ private static String getDelegationBody(PsiMethod methodToAdd, String delegationTarget) -->Line_4 $$ buffer.append("[ CD ]
Line_2 $$ private static String getDelegationBody(PsiMethod methodToAdd, String delegationTarget) -->Line_8 $$ buffer.append(delegationTarget)[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_16 $$ buffer.append(",")[ FD ]
Line_2 $$ private static String getDelegationBody(PsiMethod methodToAdd, String delegationTarget) -->Line_20 $$ buffer.append(");\n}")[ CD ]
Line_2 $$ private static String getDelegationBody(PsiMethod methodToAdd, String delegationTarget) -->Line_8 $$ buffer.append(delegationTarget)[ CD ]
Line_2 $$ private static String getDelegationBody(PsiMethod methodToAdd, String delegationTarget) -->Line_10 $$ buffer.append(methodToAdd.getName())[ FD ]
Line_5 $$ if (!PsiType.VOID.equals(methodToAdd.getReturnType())) -->Line_6 $$ buffer.append("return ")[ CD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_20 $$ buffer.append(");\n}")[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_8 $$ buffer.append(delegationTarget)[ FD ]
Line_2 $$ private static String getDelegationBody(PsiMethod methodToAdd, String delegationTarget) -->Line_5 $$ if (!PsiType.VOID.equals(methodToAdd.getReturnType())) [ FD ]
Line_2 $$ private static String getDelegationBody(PsiMethod methodToAdd, String delegationTarget) -->Line_5 $$ if (!PsiType.VOID.equals(methodToAdd.getReturnType())) [ CD ]
