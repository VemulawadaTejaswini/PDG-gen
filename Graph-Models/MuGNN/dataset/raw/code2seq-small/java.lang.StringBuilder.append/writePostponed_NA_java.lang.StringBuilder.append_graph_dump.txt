Line_2 $$ public void writePostponed(StringBuilder builder, PsiClass psiClass) -->Line_20 $$ if (name != null) [ CD ]
Line_2 $$ public void writePostponed(StringBuilder builder, PsiClass psiClass) -->Line_19 $$ final String name = context.getRefSetterName()[ CD ]
Line_20 $$ if (name != null) -->Line_21 $$ builder.append("private static <T> T ").append(name).append("(groovy.lang.Reference<T> ref, T newValue) [ CD ]
Line_2 $$ public void writePostponed(StringBuilder builder, PsiClass psiClass) -->Line_7 $$ Map<PsiMethod, String> setters = context.getSetters()[ CD ]
Line_2 $$ public void writePostponed(StringBuilder builder, PsiClass psiClass) -->Line_21 $$ builder.append("private static <T> T ").append(name).append("(groovy.lang.Reference<T> ref, T newValue) [ FD ]
Line_2 $$ public void writePostponed(StringBuilder builder, PsiClass psiClass) -->Line_5 $$ if (psiClass instanceof PsiAnonymousClass)[ FD ]
Line_10 $$ entries = ImmutableSortedSet.copyOf(new Comparator<Map.Entry<PsiMethod, String>>() -->Line_12 $$ return o1.getValue().compareTo(o2.getValue())[ FD ]
Line_2 $$ public void writePostponed(StringBuilder builder, PsiClass psiClass) -->Line_5 $$ if (psiClass instanceof PsiAnonymousClass)[ CD ]
Line_8 $$ Set<Map.Entry<PsiMethod, String>> entries = setters.entrySet()-->Line_10 $$ entries = ImmutableSortedSet.copyOf(new Comparator<Map.Entry<PsiMethod, String>>() [ FD ]
Line_2 $$ public void writePostponed(StringBuilder builder, PsiClass psiClass) -->Line_8 $$ Set<Map.Entry<PsiMethod, String>> entries = setters.entrySet()[ CD ]
Line_5 $$ if (psiClass instanceof PsiAnonymousClass)-->Line_6 $$ return[ CD ]
Line_3 $$ if (psiClass.getContainingClass() != null)-->Line_4 $$ return[ CD ]
Line_10 $$ entries = ImmutableSortedSet.copyOf(new Comparator<Map.Entry<PsiMethod, String>>() -->Line_12 $$ return o1.getValue().compareTo(o2.getValue())[ CD ]
Line_9 $$ if (ApplicationManager.getApplication().isUnitTestMode()) -->Line_10 $$ entries = ImmutableSortedSet.copyOf(new Comparator<Map.Entry<PsiMethod, String>>() [ CD ]
Line_2 $$ public void writePostponed(StringBuilder builder, PsiClass psiClass) -->Line_3 $$ if (psiClass.getContainingClass() != null)[ FD ]
Line_2 $$ public void writePostponed(StringBuilder builder, PsiClass psiClass) -->Line_3 $$ if (psiClass.getContainingClass() != null)[ CD ]
Line_7 $$ Map<PsiMethod, String> setters = context.getSetters()-->Line_8 $$ Set<Map.Entry<PsiMethod, String>> entries = setters.entrySet()[ FD ]
Line_2 $$ public void writePostponed(StringBuilder builder, PsiClass psiClass) -->Line_9 $$ if (ApplicationManager.getApplication().isUnitTestMode()) [ CD ]
