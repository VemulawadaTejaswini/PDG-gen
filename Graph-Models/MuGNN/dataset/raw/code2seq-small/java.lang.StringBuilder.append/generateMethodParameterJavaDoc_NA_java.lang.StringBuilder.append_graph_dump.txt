Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_16 $$ buffer.append("<b>")[ CD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_20 $$ buffer.append("</PRE>")[ CD ]
Line_4 $$ if (generatePrologueAndEpilogue) -->Line_5 $$ generatePrologue(buffer)[ CD ]
Line_22 $$ if (method instanceof PsiMethod) -->Line_25 $$ if (parameter.getParent() == parameterList) [ CD ]
Line_23 $$ PsiMethod psiMethod = (PsiMethod) method-->Line_26 $$ final PsiDocComment docComment = getDocComment(psiMethod)[ FD ]
Line_22 $$ if (method instanceof PsiMethod) -->Line_24 $$ PsiParameterList parameterList = psiMethod.getParameterList()[ CD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_3 $$ String parameterName = parameter.getName()[ FD ]
Line_23 $$ PsiMethod psiMethod = (PsiMethod) method-->Line_29 $$ final ParamInfo tagInfoProvider = findDocTag(localTags, parameterName, psiMethod, parameterLocator(parameterIndex))[ FD ]
Line_28 $$ int parameterIndex = parameterList.getParameterIndex(parameter)-->Line_29 $$ final ParamInfo tagInfoProvider = findDocTag(localTags, parameterName, psiMethod, parameterLocator(parameterIndex))[ FD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_16 $$ buffer.append("<b>")[ FD ]
Line_35 $$ if (generatePrologueAndEpilogue)-->Line_36 $$ generateEpilogue(buffer)[ CD ]
Line_29 $$ final ParamInfo tagInfoProvider = findDocTag(localTags, parameterName, psiMethod, parameterLocator(parameterIndex))-->Line_30 $$ if (tagInfoProvider != null) [ FD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_7 $$ buffer.append("<PRE>")[ CD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_35 $$ if (generatePrologueAndEpilogue)[ CD ]
Line_30 $$ if (tagInfoProvider != null) -->Line_31 $$ generateOneParameter(buffer, tagInfoProvider)[ CD ]
Line_9 $$ if (!modifiers.isEmpty()) -->Line_11 $$ buffer.append(" ")[ CD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_7 $$ buffer.append("<PRE>")[ FD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_3 $$ String parameterName = parameter.getName()[ CD ]
Line_8 $$ String modifiers = PsiFormatUtil.formatModifiers(parameter, PsiFormatUtilBase.JAVADOC_MODIFIERS_ONLY)-->Line_10 $$ buffer.append(modifiers)[ FD ]
Line_23 $$ PsiMethod psiMethod = (PsiMethod) method-->Line_24 $$ PsiParameterList parameterList = psiMethod.getParameterList()[ FD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_4 $$ if (generatePrologueAndEpilogue) [ CD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_14 $$ generateType(buffer, parameter.getType(), parameter)[ CD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_15 $$ buffer.append(" ")[ FD ]
Line_24 $$ PsiParameterList parameterList = psiMethod.getParameterList()-->Line_28 $$ int parameterIndex = parameterList.getParameterIndex(parameter)[ FD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_10 $$ buffer.append(modifiers)[ FD ]
Line_26 $$ final PsiDocComment docComment = getDocComment(psiMethod)-->Line_27 $$ final PsiDocTag[] localTags = docComment != null ? docComment.getTags() : PsiDocTag.EMPTY_ARRAY[ FD ]
Line_22 $$ if (method instanceof PsiMethod) -->Line_23 $$ PsiMethod psiMethod = (PsiMethod) method[ CD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_14 $$ generateType(buffer, parameter.getType(), parameter)[ FD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_9 $$ if (!modifiers.isEmpty()) [ CD ]
Line_9 $$ if (!modifiers.isEmpty()) -->Line_10 $$ buffer.append(modifiers)[ CD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_21 $$ final PsiElement method = PsiTreeUtil.getParentOfType(parameter, PsiMethod.class, PsiLambdaExpression.class)[ FD ]
Line_24 $$ PsiParameterList parameterList = psiMethod.getParameterList()-->Line_25 $$ if (parameter.getParent() == parameterList) [ FD ]
Line_25 $$ if (parameter.getParent() == parameterList) -->Line_29 $$ final ParamInfo tagInfoProvider = findDocTag(localTags, parameterName, psiMethod, parameterLocator(parameterIndex))[ CD ]
Line_3 $$ String parameterName = parameter.getName()-->Line_29 $$ final ParamInfo tagInfoProvider = findDocTag(localTags, parameterName, psiMethod, parameterLocator(parameterIndex))[ FD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_8 $$ String modifiers = PsiFormatUtil.formatModifiers(parameter, PsiFormatUtilBase.JAVADOC_MODIFIERS_ONLY)[ CD ]
Line_25 $$ if (parameter.getParent() == parameterList) -->Line_30 $$ if (tagInfoProvider != null) [ CD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_19 $$ buffer.append("</b>")[ FD ]
Line_21 $$ final PsiElement method = PsiTreeUtil.getParentOfType(parameter, PsiMethod.class, PsiLambdaExpression.class)-->Line_22 $$ if (method instanceof PsiMethod) [ FD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_36 $$ generateEpilogue(buffer)[ FD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_20 $$ buffer.append("</PRE>")[ FD ]
Line_3 $$ String parameterName = parameter.getName()-->Line_17 $$ buffer.append(parameterName)[ FD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_19 $$ buffer.append("</b>")[ CD ]
Line_25 $$ if (parameter.getParent() == parameterList) -->Line_27 $$ final PsiDocTag[] localTags = docComment != null ? docComment.getTags() : PsiDocTag.EMPTY_ARRAY[ CD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_18 $$ appendInitializer(buffer, parameter)[ FD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_17 $$ buffer.append(parameterName)[ CD ]
Line_27 $$ final PsiDocTag[] localTags = docComment != null ? docComment.getTags() : PsiDocTag.EMPTY_ARRAY-->Line_29 $$ final ParamInfo tagInfoProvider = findDocTag(localTags, parameterName, psiMethod, parameterLocator(parameterIndex))[ FD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_25 $$ if (parameter.getParent() == parameterList) [ FD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_31 $$ generateOneParameter(buffer, tagInfoProvider)[ FD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_28 $$ int parameterIndex = parameterList.getParameterIndex(parameter)[ FD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_21 $$ final PsiElement method = PsiTreeUtil.getParentOfType(parameter, PsiMethod.class, PsiLambdaExpression.class)[ CD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_18 $$ appendInitializer(buffer, parameter)[ CD ]
Line_29 $$ final ParamInfo tagInfoProvider = findDocTag(localTags, parameterName, psiMethod, parameterLocator(parameterIndex))-->Line_31 $$ generateOneParameter(buffer, tagInfoProvider)[ FD ]
Line_8 $$ String modifiers = PsiFormatUtil.formatModifiers(parameter, PsiFormatUtilBase.JAVADOC_MODIFIERS_ONLY)-->Line_9 $$ if (!modifiers.isEmpty()) [ FD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_13 $$ generateAnnotations(buffer, parameter, true, true, false)[ FD ]
Line_25 $$ if (parameter.getParent() == parameterList) -->Line_26 $$ final PsiDocComment docComment = getDocComment(psiMethod)[ CD ]
Line_25 $$ if (parameter.getParent() == parameterList) -->Line_28 $$ int parameterIndex = parameterList.getParameterIndex(parameter)[ CD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_13 $$ generateAnnotations(buffer, parameter, true, true, false)[ CD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_11 $$ buffer.append(" ")[ FD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_17 $$ buffer.append(parameterName)[ FD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_15 $$ buffer.append(" ")[ CD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_8 $$ String modifiers = PsiFormatUtil.formatModifiers(parameter, PsiFormatUtilBase.JAVADOC_MODIFIERS_ONLY)[ FD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_22 $$ if (method instanceof PsiMethod) [ CD ]
Line_2 $$ private void generateMethodParameterJavaDoc(@NonNls StringBuilder buffer, PsiParameter parameter, boolean generatePrologueAndEpilogue) -->Line_5 $$ generatePrologue(buffer)[ FD ]
