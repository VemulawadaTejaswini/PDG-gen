Line_5 $$ if (i == 32) -->Line_6 $$ builder.append('\n')[ CD ]
Line_4 $$ for (int i = 0; i < hex.length(); i += 2) -->Line_8 $$ builder.append(hex.substring(i, i + 2))[ FD ]
Line_2 $$ private static String formatHex(@NotNull String hex) -->Line_14 $$ return builder.toString().toUpperCase()[ CD ]
Line_2 $$ private static String formatHex(@NotNull String hex) -->Line_11 $$ if (hex.length() > 0) [ CD ]
Line_2 $$ private static String formatHex(@NotNull String hex) -->Line_4 $$ for (int i = 0; i < hex.length(); i += 2) [ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_12 $$ builder.deleteCharAt(builder.length() - 1)[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_14 $$ return builder.toString().toUpperCase()[ FD ]
Line_2 $$ private static String formatHex(@NotNull String hex) -->Line_11 $$ if (hex.length() > 0) [ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_8 $$ builder.append(hex.substring(i, i + 2))[ FD ]
Line_2 $$ private static String formatHex(@NotNull String hex) -->Line_4 $$ for (int i = 0; i < hex.length(); i += 2) [ FD ]
Line_4 $$ for (int i = 0; i < hex.length(); i += 2) -->Line_8 $$ builder.append(hex.substring(i, i + 2))[ CD ]
Line_4 $$ for (int i = 0; i < hex.length(); i += 2) -->Line_5 $$ if (i == 32) [ CD ]
Line_11 $$ if (hex.length() > 0) -->Line_12 $$ builder.deleteCharAt(builder.length() - 1)[ CD ]
Line_2 $$ private static String formatHex(@NotNull String hex) -->Line_3 $$ StringBuilder builder = new StringBuilder()[ CD ]
Line_2 $$ private static String formatHex(@NotNull String hex) -->Line_8 $$ builder.append(hex.substring(i, i + 2))[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_9 $$ builder.append(' ')[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_6 $$ builder.append('\n')[ FD ]
Line_4 $$ for (int i = 0; i < hex.length(); i += 2) -->Line_9 $$ builder.append(' ')[ CD ]
Line_4 $$ for (int i = 0; i < hex.length(); i += 2) -->Line_5 $$ if (i == 32) [ FD ]
