Line_4 $$ StringBuilder builder = new StringBuilder()-->Line_10 $$ builder.append(compilerPrefix).append("Compiler.").append(action).append(" ").append(quotedArgs).append("\n")[ FD ]
Line_5 $$ for (String plugin : getPluginList()) -->Line_6 $$ String compilerPrefix = getCompilerPrefix(plugin)[ FD ]
Line_2 $$ private String compilerConfig(String action, String... args) -->Line_4 $$ StringBuilder builder = new StringBuilder()[ CD ]
Line_2 $$ private String compilerConfig(String action, String... args) -->Line_3 $$ String quotedArgs = CollectionUtils.join(",", CollectionUtils.collect(args, new SingleQuotingTransformer()))[ CD ]
Line_2 $$ private String compilerConfig(String action, String... args) -->Line_3 $$ String quotedArgs = CollectionUtils.join(",", CollectionUtils.collect(args, new SingleQuotingTransformer()))[ FD ]
Line_3 $$ String quotedArgs = CollectionUtils.join(",", CollectionUtils.collect(args, new SingleQuotingTransformer()))-->Line_10 $$ builder.append(compilerPrefix).append("Compiler.").append(action).append(" ").append(quotedArgs).append("\n")[ FD ]
Line_2 $$ private String compilerConfig(String action, String... args) -->Line_12 $$ return builder.toString()[ CD ]
Line_6 $$ String compilerPrefix = getCompilerPrefix(plugin)-->Line_10 $$ builder.append(compilerPrefix).append("Compiler.").append(action).append(" ").append(quotedArgs).append("\n")[ FD ]
Line_2 $$ private String compilerConfig(String action, String... args) -->Line_10 $$ builder.append(compilerPrefix).append("Compiler.").append(action).append(" ").append(quotedArgs).append("\n")[ FD ]
Line_4 $$ StringBuilder builder = new StringBuilder()-->Line_12 $$ return builder.toString()[ FD ]
Line_6 $$ String compilerPrefix = getCompilerPrefix(plugin)-->Line_7 $$ if (compilerPrefix == null) [ FD ]
