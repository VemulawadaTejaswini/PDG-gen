Line_41 $$ if (value != null) -->Line_42 $$ if (value instanceof PsiArrayInitializerMemberValue) [ CD ]
Line_22 $$ if (inferred && !generateLink) -->Line_23 $$ buffer.append(type.getPresentableText())[ CD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_70 $$ buffer.append("&nbsp;")[ FD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_25 $$ generateType(buffer, type, owner, generateLink, useShortNames && !external)[ FD ]
Line_11 $$ String qualifiedName = annotation.getQualifiedName()-->Line_15 $$ if (resolved instanceof PsiClass && qualifiedName != null && JavaDocUtil.findReferenceTarget(owner.getManager(), qualifiedName, owner) != null) [ FD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_72 $$ buffer.append("<font color=red>")[ FD ]
Line_10 $$ boolean inferred = AnnotationUtil.isInferredAnnotation(annotation)-->Line_22 $$ if (inferred && !generateLink) [ FD ]
Line_40 $$ final PsiAnnotationMemberValue value = pair.getValue()-->Line_53 $$ appendLinkOrText(buffer, value, generateLink)[ FD ]
Line_5 $$ for (PsiAnnotation annotation : annotations) -->Line_66 $$ String annoText = inferred ? "@" + annotation.getNameReferenceElement().getReferenceName() + annotation.getParameterList().getText() : annotation.getText()[ FD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_4 $$ Set<String> shownAnnotations = ContainerUtil.newHashSet()[ CD ]
Line_64 $$ if (inferred)-->Line_65 $$ buffer.append("<i>")[ CD ]
Line_20 $$ final PsiClassType type = JavaPsiFacade.getInstance(manager.getProject()).getElementFactory().createType(annotationType, PsiSubstitutor.EMPTY)-->Line_25 $$ generateType(buffer, type, owner, generateLink, useShortNames && !external)[ FD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_22 $$ if (inferred && !generateLink) [ FD ]
Line_63 $$ if (external) -->Line_64 $$ if (inferred)[ CD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_51 $$ buffer.append("}")[ FD ]
Line_40 $$ final PsiAnnotationMemberValue value = pair.getValue()-->Line_42 $$ if (value instanceof PsiArrayInitializerMemberValue) [ FD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_29 $$ buffer.append("(")[ FD ]
Line_40 $$ final PsiAnnotationMemberValue value = pair.getValue()-->Line_41 $$ if (value != null) [ FD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_74 $$ buffer.append("</font>")[ FD ]
Line_42 $$ if (value instanceof PsiArrayInitializerMemberValue) -->Line_51 $$ buffer.append("}")[ CD ]
Line_17 $$ if (isDocumentedAnnotationType(annotationType)) -->Line_20 $$ final PsiClassType type = JavaPsiFacade.getInstance(manager.getProject()).getElementFactory().createType(annotationType, PsiSubstitutor.EMPTY)[ CD ]
Line_66 $$ String annoText = inferred ? "@" + annotation.getNameReferenceElement().getReferenceName() + annotation.getParameterList().getText() : annotation.getText()-->Line_67 $$ buffer.append(XmlStringUtil.escapeString(annoText))[ FD ]
Line_36 $$ if (name != null) -->Line_37 $$ buffer.append(name)[ CD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_15 $$ if (resolved instanceof PsiClass && qualifiedName != null && JavaDocUtil.findReferenceTarget(owner.getManager(), qualifiedName, owner) != null) [ FD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_33 $$ buffer.append(",&nbsp;")[ FD ]
Line_63 $$ if (external) -->Line_67 $$ buffer.append(XmlStringUtil.escapeString(annoText))[ CD ]
Line_63 $$ if (external) -->Line_68 $$ if (inferred)[ CD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_23 $$ buffer.append(type.getPresentableText())[ FD ]
Line_16 $$ final PsiClass annotationType = (PsiClass) resolved-->Line_20 $$ final PsiClassType type = JavaPsiFacade.getInstance(manager.getProject()).getElementFactory().createType(annotationType, PsiSubstitutor.EMPTY)[ FD ]
Line_68 $$ if (inferred)-->Line_69 $$ buffer.append("</i>")[ CD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_75 $$ buffer.append("&nbsp;")[ FD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_47 $$ buffer.append(",")[ FD ]
Line_45 $$ for (PsiAnnotationMemberValue memberValue : ((PsiArrayInitializerMemberValue) value).getInitializers()) -->Line_49 $$ appendLinkOrText(buffer, memberValue, generateLink)[ FD ]
Line_5 $$ for (PsiAnnotation annotation : annotations) -->Line_27 $$ final PsiNameValuePair[] attributes = annotation.getParameterList().getAttributes()[ FD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_61 $$ buffer.append("&nbsp;")[ FD ]
Line_42 $$ if (value instanceof PsiArrayInitializerMemberValue) -->Line_44 $$ boolean firstMember = true[ CD ]
Line_17 $$ if (isDocumentedAnnotationType(annotationType)) -->Line_59 $$ if (inferred)[ CD ]
Line_15 $$ if (resolved instanceof PsiClass && qualifiedName != null && JavaDocUtil.findReferenceTarget(owner.getManager(), qualifiedName, owner) != null) -->Line_16 $$ final PsiClass annotationType = (PsiClass) resolved[ CD ]
Line_17 $$ if (isDocumentedAnnotationType(annotationType)) -->Line_18 $$ if (inferred)[ CD ]
Line_15 $$ if (resolved instanceof PsiClass && qualifiedName != null && JavaDocUtil.findReferenceTarget(owner.getManager(), qualifiedName, owner) != null) -->Line_63 $$ if (external) [ CD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_73 $$ buffer.append(XmlStringUtil.escapeString(annotation.getText()))[ FD ]
Line_31 $$ for (PsiNameValuePair pair : attributes) -->Line_35 $$ final String name = pair.getName()[ FD ]
Line_9 $$ final PsiElement resolved = nameReferenceElement.resolve()-->Line_12 $$ if (!(shownAnnotations.add(qualifiedName) || isRepeatableAnnotationType(resolved))) [ FD ]
Line_17 $$ if (isDocumentedAnnotationType(annotationType)) -->Line_21 $$ buffer.append("@")[ CD ]
Line_42 $$ if (value instanceof PsiArrayInitializerMemberValue) -->Line_43 $$ buffer.append("[ CD ]
Line_28 $$ if (attributes.length > 0) -->Line_29 $$ buffer.append("(")[ CD ]
Line_35 $$ final String name = pair.getName()-->Line_37 $$ buffer.append(name)[ FD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_69 $$ buffer.append("</i>")[ FD ]
Line_22 $$ if (inferred && !generateLink) -->Line_25 $$ generateType(buffer, type, owner, generateLink, useShortNames && !external)[ CD ]
Line_17 $$ if (isDocumentedAnnotationType(annotationType)) -->Line_28 $$ if (attributes.length > 0) [ CD ]
Line_15 $$ if (resolved instanceof PsiClass && qualifiedName != null && JavaDocUtil.findReferenceTarget(owner.getManager(), qualifiedName, owner) != null) -->Line_17 $$ if (isDocumentedAnnotationType(annotationType)) [ CD ]
Line_32 $$ if (!first)-->Line_33 $$ buffer.append(",&nbsp;")[ CD ]
Line_63 $$ if (external) -->Line_73 $$ buffer.append(XmlStringUtil.escapeString(annotation.getText()))[ CD ]
Line_5 $$ for (PsiAnnotation annotation : annotations) -->Line_10 $$ boolean inferred = AnnotationUtil.isInferredAnnotation(annotation)[ FD ]
Line_63 $$ if (external) -->Line_74 $$ buffer.append("</font>")[ CD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_21 $$ buffer.append("@")[ FD ]
Line_20 $$ final PsiClassType type = JavaPsiFacade.getInstance(manager.getProject()).getElementFactory().createType(annotationType, PsiSubstitutor.EMPTY)-->Line_23 $$ buffer.append(type.getPresentableText())[ FD ]
Line_17 $$ if (isDocumentedAnnotationType(annotationType)) -->Line_27 $$ final PsiNameValuePair[] attributes = annotation.getParameterList().getAttributes()[ CD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_49 $$ appendLinkOrText(buffer, memberValue, generateLink)[ FD ]
Line_63 $$ if (external) -->Line_70 $$ buffer.append("&nbsp;")[ CD ]
Line_18 $$ if (inferred)-->Line_19 $$ buffer.append("<i>")[ CD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_65 $$ buffer.append("<i>")[ FD ]
Line_4 $$ Set<String> shownAnnotations = ContainerUtil.newHashSet()-->Line_12 $$ if (!(shownAnnotations.add(qualifiedName) || isRepeatableAnnotationType(resolved))) [ FD ]
Line_17 $$ if (isDocumentedAnnotationType(annotationType)) -->Line_22 $$ if (inferred && !generateLink) [ CD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_38 $$ buffer.append(" = ")[ FD ]
Line_35 $$ final String name = pair.getName()-->Line_36 $$ if (name != null) [ FD ]
Line_44 $$ boolean firstMember = true-->Line_48 $$ firstMember = false[ FD ]
Line_63 $$ if (external) -->Line_66 $$ String annoText = inferred ? "@" + annotation.getNameReferenceElement().getReferenceName() + annotation.getParameterList().getText() : annotation.getText()[ CD ]
Line_5 $$ for (PsiAnnotation annotation : annotations) -->Line_11 $$ String qualifiedName = annotation.getQualifiedName()[ FD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_53 $$ appendLinkOrText(buffer, value, generateLink)[ FD ]
Line_17 $$ if (isDocumentedAnnotationType(annotationType)) -->Line_61 $$ buffer.append("&nbsp;")[ CD ]
Line_36 $$ if (name != null) -->Line_38 $$ buffer.append(" = ")[ CD ]
Line_11 $$ String qualifiedName = annotation.getQualifiedName()-->Line_12 $$ if (!(shownAnnotations.add(qualifiedName) || isRepeatableAnnotationType(resolved))) [ FD ]
Line_30 $$ boolean first = true-->Line_32 $$ if (!first)[ FD ]
Line_3 $$ PsiManager manager = owner.getManager()-->Line_20 $$ final PsiClassType type = JavaPsiFacade.getInstance(manager.getProject()).getElementFactory().createType(annotationType, PsiSubstitutor.EMPTY)[ FD ]
Line_30 $$ boolean first = true-->Line_34 $$ first = false[ FD ]
Line_5 $$ for (PsiAnnotation annotation : annotations) -->Line_6 $$ final PsiJavaCodeReferenceElement nameReferenceElement = annotation.getNameReferenceElement()[ FD ]
Line_31 $$ for (PsiNameValuePair pair : attributes) -->Line_40 $$ final PsiAnnotationMemberValue value = pair.getValue()[ FD ]
Line_6 $$ final PsiJavaCodeReferenceElement nameReferenceElement = annotation.getNameReferenceElement()-->Line_7 $$ if (nameReferenceElement == null)[ FD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_43 $$ buffer.append("[ FD ]
Line_28 $$ if (attributes.length > 0) -->Line_30 $$ boolean first = true[ CD ]
Line_59 $$ if (inferred)-->Line_60 $$ buffer.append("</i>")[ CD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_3 $$ PsiManager manager = owner.getManager()[ FD ]
Line_63 $$ if (external) -->Line_75 $$ buffer.append("&nbsp;")[ CD ]
Line_16 $$ final PsiClass annotationType = (PsiClass) resolved-->Line_17 $$ if (isDocumentedAnnotationType(annotationType)) [ FD ]
Line_63 $$ if (external) -->Line_72 $$ buffer.append("<font color=red>")[ CD ]
Line_42 $$ if (value instanceof PsiArrayInitializerMemberValue) -->Line_53 $$ appendLinkOrText(buffer, value, generateLink)[ CD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_3 $$ PsiManager manager = owner.getManager()[ CD ]
Line_6 $$ final PsiJavaCodeReferenceElement nameReferenceElement = annotation.getNameReferenceElement()-->Line_9 $$ final PsiElement resolved = nameReferenceElement.resolve()[ FD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_60 $$ buffer.append("</i>")[ FD ]
Line_46 $$ if (!firstMember)-->Line_47 $$ buffer.append(",")[ CD ]
Line_77 $$ if (splitAnnotations)-->Line_78 $$ buffer.append("\n")[ CD ]
Line_5 $$ for (PsiAnnotation annotation : annotations) -->Line_73 $$ buffer.append(XmlStringUtil.escapeString(annotation.getText()))[ FD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_19 $$ buffer.append("<i>")[ FD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_67 $$ buffer.append(XmlStringUtil.escapeString(annoText))[ FD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_37 $$ buffer.append(name)[ FD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_78 $$ buffer.append("\n")[ FD ]
Line_2 $$ private static void generateAnnotations(StringBuilder buffer, PsiModifierListOwner owner, PsiAnnotation[] annotations, boolean external, boolean generateLink, boolean splitAnnotations, boolean useShortNames) -->Line_57 $$ buffer.append(")")[ FD ]
Line_44 $$ boolean firstMember = true-->Line_46 $$ if (!firstMember)[ FD ]
Line_28 $$ if (attributes.length > 0) -->Line_57 $$ buffer.append(")")[ CD ]
