Line_2 $$ private static List<StringWithOffset> expandLeftmost(StringWithOffset filePatternWithOffset) throws IOException -->Line_14 $$ for (int i = leftmost; i < filePattern.length(); i++) [ CD ]
Line_36 $$ cur = suffix-->Line_45 $$ cur.append(c)[ FD ]
Line_11 $$ List<String> alts = new ArrayList<String>()-->Line_42 $$ alts.add(alt.toString())[ FD ]
Line_36 $$ cur = suffix-->Line_30 $$ cur.append(c)[ FD ]
Line_33 $$ if (--curlyOpen == 0) -->Line_34 $$ alts.add(alt.toString())[ CD ]
Line_12 $$ StringBuilder alt = new StringBuilder()-->Line_28 $$ cur = alt[ FD ]
Line_4 $$ int leftmost = leftmostOuterCurlyContainingSlash(filePattern, filePatternWithOffset.offset)-->Line_5 $$ if (leftmost == -1) [ FD ]
Line_40 $$ if (c == ',') -->Line_48 $$ cur.append(c)[ CD ]
Line_2 $$ private static List<StringWithOffset> expandLeftmost(StringWithOffset filePatternWithOffset) throws IOException -->Line_8 $$ int curlyOpen = 0[ CD ]
Line_23 $$ c = filePattern.charAt(i)-->Line_18 $$ if (c == '\\') [ FD ]
Line_18 $$ if (c == '\\') -->Line_23 $$ c = filePattern.charAt(i)[ CD ]
Line_33 $$ if (--curlyOpen == 0) -->Line_38 $$ cur.append(c)[ CD ]
Line_5 $$ if (leftmost == -1) -->Line_6 $$ return null[ CD ]
Line_25 $$ if (c == '-->Line_26 $$ if (curlyOpen++ == 0) [ CD ]
Line_12 $$ StringBuilder alt = new StringBuilder()-->Line_42 $$ alts.add(alt.toString())[ FD ]
Line_2 $$ private static List<StringWithOffset> expandLeftmost(StringWithOffset filePatternWithOffset) throws IOException -->Line_10 $$ StringBuilder suffix = new StringBuilder()[ CD ]
Line_2 $$ private static List<StringWithOffset> expandLeftmost(StringWithOffset filePatternWithOffset) throws IOException -->Line_3 $$ String filePattern = filePatternWithOffset.string[ CD ]
Line_18 $$ if (c == '\\') -->Line_19 $$ i++[ CD ]
Line_28 $$ cur = alt-->Line_16 $$ if (cur == suffix) [ FD ]
Line_8 $$ int curlyOpen = 0-->Line_33 $$ if (--curlyOpen == 0) [ FD ]
Line_36 $$ cur = suffix-->Line_48 $$ cur.append(c)[ FD ]
Line_15 $$ char c = filePattern.charAt(i)-->Line_23 $$ c = filePattern.charAt(i)[ FD ]
Line_13 $$ StringBuilder cur = prefix-->Line_17 $$ cur.append(c)[ FD ]
Line_15 $$ char c = filePattern.charAt(i)-->Line_25 $$ if (c == '[ FD ]
Line_13 $$ StringBuilder cur = prefix-->Line_24 $$ cur.append(c)[ FD ]
Line_15 $$ char c = filePattern.charAt(i)-->Line_38 $$ cur.append(c)[ FD ]
Line_3 $$ String filePattern = filePatternWithOffset.string-->Line_9 $$ StringBuilder prefix = new StringBuilder(filePattern.substring(0, leftmost))[ FD ]
Line_25 $$ if (c == '-->Line_32 $$ if (c == '}' && curlyOpen > 0) [ CD ]
Line_28 $$ cur = alt-->Line_38 $$ cur.append(c)[ FD ]
Line_23 $$ c = filePattern.charAt(i)-->Line_48 $$ cur.append(c)[ FD ]
Line_16 $$ if (cur == suffix) -->Line_17 $$ cur.append(c)[ CD ]
Line_13 $$ StringBuilder cur = prefix-->Line_45 $$ cur.append(c)[ FD ]
Line_2 $$ private static List<StringWithOffset> expandLeftmost(StringWithOffset filePatternWithOffset) throws IOException -->Line_55 $$ return exp[ CD ]
Line_26 $$ if (curlyOpen++ == 0) -->Line_27 $$ alt.setLength(0)[ CD ]
Line_2 $$ private static List<StringWithOffset> expandLeftmost(StringWithOffset filePatternWithOffset) throws IOException -->Line_11 $$ List<String> alts = new ArrayList<String>()[ CD ]
Line_15 $$ char c = filePattern.charAt(i)-->Line_24 $$ cur.append(c)[ FD ]
Line_2 $$ private static List<StringWithOffset> expandLeftmost(StringWithOffset filePatternWithOffset) throws IOException -->Line_13 $$ StringBuilder cur = prefix[ CD ]
Line_51 $$ List<StringWithOffset> exp = new ArrayList<StringWithOffset>()-->Line_53 $$ exp.add(new StringWithOffset(prefix + string + suffix, prefix.length()))[ FD ]
Line_33 $$ if (--curlyOpen == 0) -->Line_36 $$ cur = suffix[ CD ]
Line_15 $$ char c = filePattern.charAt(i)-->Line_18 $$ if (c == '\\') [ FD ]
Line_41 $$ if (curlyOpen == 1) -->Line_43 $$ alt.setLength(0)[ CD ]
Line_36 $$ cur = suffix-->Line_17 $$ cur.append(c)[ FD ]
Line_18 $$ if (c == '\\') -->Line_25 $$ if (c == '[ CD ]
Line_28 $$ cur = alt-->Line_17 $$ cur.append(c)[ FD ]
Line_32 $$ if (c == '}' && curlyOpen > 0) -->Line_40 $$ if (c == ',') [ CD ]
Line_4 $$ int leftmost = leftmostOuterCurlyContainingSlash(filePattern, filePatternWithOffset.offset)-->Line_9 $$ StringBuilder prefix = new StringBuilder(filePattern.substring(0, leftmost))[ FD ]
Line_23 $$ c = filePattern.charAt(i)-->Line_45 $$ cur.append(c)[ FD ]
Line_3 $$ String filePattern = filePatternWithOffset.string-->Line_20 $$ if (i >= filePattern.length()) [ FD ]
Line_2 $$ private static List<StringWithOffset> expandLeftmost(StringWithOffset filePatternWithOffset) throws IOException -->Line_5 $$ if (leftmost == -1) [ CD ]
Line_12 $$ StringBuilder alt = new StringBuilder()-->Line_34 $$ alts.add(alt.toString())[ FD ]
Line_28 $$ cur = alt-->Line_30 $$ cur.append(c)[ FD ]
Line_13 $$ StringBuilder cur = prefix-->Line_38 $$ cur.append(c)[ FD ]
Line_28 $$ cur = alt-->Line_45 $$ cur.append(c)[ FD ]
Line_41 $$ if (curlyOpen == 1) -->Line_45 $$ cur.append(c)[ CD ]
Line_3 $$ String filePattern = filePatternWithOffset.string-->Line_14 $$ for (int i = leftmost; i < filePattern.length(); i++) [ FD ]
Line_32 $$ if (c == '}' && curlyOpen > 0) -->Line_33 $$ if (--curlyOpen == 0) [ CD ]
Line_23 $$ c = filePattern.charAt(i)-->Line_30 $$ cur.append(c)[ FD ]
Line_16 $$ if (cur == suffix) -->Line_18 $$ if (c == '\\') [ CD ]
Line_12 $$ StringBuilder alt = new StringBuilder()-->Line_43 $$ alt.setLength(0)[ FD ]
Line_15 $$ char c = filePattern.charAt(i)-->Line_30 $$ cur.append(c)[ FD ]
Line_36 $$ cur = suffix-->Line_16 $$ if (cur == suffix) [ FD ]
Line_36 $$ cur = suffix-->Line_38 $$ cur.append(c)[ FD ]
Line_13 $$ StringBuilder cur = prefix-->Line_28 $$ cur = alt[ FD ]
Line_8 $$ int curlyOpen = 0-->Line_26 $$ if (curlyOpen++ == 0) [ FD ]
Line_15 $$ char c = filePattern.charAt(i)-->Line_45 $$ cur.append(c)[ FD ]
Line_13 $$ StringBuilder cur = prefix-->Line_36 $$ cur = suffix[ FD ]
Line_10 $$ StringBuilder suffix = new StringBuilder()-->Line_36 $$ cur = suffix[ FD ]
Line_15 $$ char c = filePattern.charAt(i)-->Line_40 $$ if (c == ',') [ FD ]
Line_3 $$ String filePattern = filePatternWithOffset.string-->Line_23 $$ c = filePattern.charAt(i)[ FD ]
Line_28 $$ cur = alt-->Line_48 $$ cur.append(c)[ FD ]
Line_15 $$ char c = filePattern.charAt(i)-->Line_17 $$ cur.append(c)[ FD ]
Line_14 $$ for (int i = leftmost; i < filePattern.length(); i++) -->Line_16 $$ if (cur == suffix) [ CD ]
Line_3 $$ String filePattern = filePatternWithOffset.string-->Line_15 $$ char c = filePattern.charAt(i)[ FD ]
Line_10 $$ StringBuilder suffix = new StringBuilder()-->Line_16 $$ if (cur == suffix) [ FD ]
Line_15 $$ char c = filePattern.charAt(i)-->Line_48 $$ cur.append(c)[ FD ]
Line_23 $$ c = filePattern.charAt(i)-->Line_17 $$ cur.append(c)[ FD ]
Line_40 $$ if (c == ',') -->Line_41 $$ if (curlyOpen == 1) [ CD ]
Line_14 $$ for (int i = leftmost; i < filePattern.length(); i++) -->Line_19 $$ i++[ FD ]
Line_11 $$ List<String> alts = new ArrayList<String>()-->Line_34 $$ alts.add(alt.toString())[ FD ]
Line_13 $$ StringBuilder cur = prefix-->Line_16 $$ if (cur == suffix) [ FD ]
Line_2 $$ private static List<StringWithOffset> expandLeftmost(StringWithOffset filePatternWithOffset) throws IOException -->Line_12 $$ StringBuilder alt = new StringBuilder()[ CD ]
Line_26 $$ if (curlyOpen++ == 0) -->Line_30 $$ cur.append(c)[ CD ]
Line_41 $$ if (curlyOpen == 1) -->Line_42 $$ alts.add(alt.toString())[ CD ]
Line_26 $$ if (curlyOpen++ == 0) -->Line_28 $$ cur = alt[ CD ]
Line_23 $$ c = filePattern.charAt(i)-->Line_24 $$ cur.append(c)[ FD ]
Line_2 $$ private static List<StringWithOffset> expandLeftmost(StringWithOffset filePatternWithOffset) throws IOException -->Line_9 $$ StringBuilder prefix = new StringBuilder(filePattern.substring(0, leftmost))[ CD ]
Line_23 $$ c = filePattern.charAt(i)-->Line_40 $$ if (c == ',') [ FD ]
Line_12 $$ StringBuilder alt = new StringBuilder()-->Line_27 $$ alt.setLength(0)[ FD ]
Line_18 $$ if (c == '\\') -->Line_20 $$ if (i >= filePattern.length()) [ CD ]
Line_13 $$ StringBuilder cur = prefix-->Line_48 $$ cur.append(c)[ FD ]
Line_23 $$ c = filePattern.charAt(i)-->Line_25 $$ if (c == '[ FD ]
Line_9 $$ StringBuilder prefix = new StringBuilder(filePattern.substring(0, leftmost))-->Line_53 $$ exp.add(new StringWithOffset(prefix + string + suffix, prefix.length()))[ FD ]
Line_8 $$ int curlyOpen = 0-->Line_41 $$ if (curlyOpen == 1) [ FD ]
Line_14 $$ for (int i = leftmost; i < filePattern.length(); i++) -->Line_15 $$ char c = filePattern.charAt(i)[ CD ]
Line_2 $$ private static List<StringWithOffset> expandLeftmost(StringWithOffset filePatternWithOffset) throws IOException -->Line_4 $$ int leftmost = leftmostOuterCurlyContainingSlash(filePattern, filePatternWithOffset.offset)[ CD ]
Line_28 $$ cur = alt-->Line_24 $$ cur.append(c)[ FD ]
Line_3 $$ String filePattern = filePatternWithOffset.string-->Line_4 $$ int leftmost = leftmostOuterCurlyContainingSlash(filePattern, filePatternWithOffset.offset)[ FD ]
Line_18 $$ if (c == '\\') -->Line_24 $$ cur.append(c)[ CD ]
Line_14 $$ for (int i = leftmost; i < filePattern.length(); i++) -->Line_15 $$ char c = filePattern.charAt(i)[ FD ]
Line_2 $$ private static List<StringWithOffset> expandLeftmost(StringWithOffset filePatternWithOffset) throws IOException -->Line_51 $$ List<StringWithOffset> exp = new ArrayList<StringWithOffset>()[ CD ]
Line_12 $$ StringBuilder alt = new StringBuilder()-->Line_35 $$ alt.setLength(0)[ FD ]
Line_33 $$ if (--curlyOpen == 0) -->Line_35 $$ alt.setLength(0)[ CD ]
Line_13 $$ StringBuilder cur = prefix-->Line_30 $$ cur.append(c)[ FD ]
Line_14 $$ for (int i = leftmost; i < filePattern.length(); i++) -->Line_20 $$ if (i >= filePattern.length()) [ FD ]
Line_28 $$ cur = alt-->Line_36 $$ cur = suffix[ FD ]
Line_23 $$ c = filePattern.charAt(i)-->Line_38 $$ cur.append(c)[ FD ]
Line_36 $$ cur = suffix-->Line_24 $$ cur.append(c)[ FD ]
Line_14 $$ for (int i = leftmost; i < filePattern.length(); i++) -->Line_23 $$ c = filePattern.charAt(i)[ FD ]
