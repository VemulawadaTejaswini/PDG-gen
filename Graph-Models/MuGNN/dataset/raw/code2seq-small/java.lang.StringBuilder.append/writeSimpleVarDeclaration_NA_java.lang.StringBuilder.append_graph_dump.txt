Line_2 $$ public static void writeSimpleVarDeclaration(GrVariableDeclaration variableDeclaration, StringBuilder builder, ExpressionContext expressionContext) -->Line_9 $$ builder.append(";\n")[ FD ]
Line_7 $$ for (GrVariable variable : variables) -->Line_8 $$ writeVariableSeparately(variable, builder, expressionContext)[ FD ]
Line_2 $$ public static void writeSimpleVarDeclaration(GrVariableDeclaration variableDeclaration, StringBuilder builder, ExpressionContext expressionContext) -->Line_5 $$ expressionContext.setInsertCurlyBrackets()[ FD ]
Line_4 $$ if (variables.length > 1 && variableDeclaration.getParent() instanceof GrControlStatement) -->Line_5 $$ expressionContext.setInsertCurlyBrackets()[ CD ]
Line_2 $$ public static void writeSimpleVarDeclaration(GrVariableDeclaration variableDeclaration, StringBuilder builder, ExpressionContext expressionContext) -->Line_11 $$ builder.delete(builder.length() - 1, builder.length())[ FD ]
Line_2 $$ public static void writeSimpleVarDeclaration(GrVariableDeclaration variableDeclaration, StringBuilder builder, ExpressionContext expressionContext) -->Line_11 $$ builder.delete(builder.length() - 1, builder.length())[ CD ]
Line_2 $$ public static void writeSimpleVarDeclaration(GrVariableDeclaration variableDeclaration, StringBuilder builder, ExpressionContext expressionContext) -->Line_3 $$ GrVariable[] variables = variableDeclaration.getVariables()[ CD ]
Line_2 $$ public static void writeSimpleVarDeclaration(GrVariableDeclaration variableDeclaration, StringBuilder builder, ExpressionContext expressionContext) -->Line_3 $$ GrVariable[] variables = variableDeclaration.getVariables()[ FD ]
Line_2 $$ public static void writeSimpleVarDeclaration(GrVariableDeclaration variableDeclaration, StringBuilder builder, ExpressionContext expressionContext) -->Line_4 $$ if (variables.length > 1 && variableDeclaration.getParent() instanceof GrControlStatement) [ FD ]
Line_2 $$ public static void writeSimpleVarDeclaration(GrVariableDeclaration variableDeclaration, StringBuilder builder, ExpressionContext expressionContext) -->Line_8 $$ writeVariableSeparately(variable, builder, expressionContext)[ FD ]
Line_2 $$ public static void writeSimpleVarDeclaration(GrVariableDeclaration variableDeclaration, StringBuilder builder, ExpressionContext expressionContext) -->Line_4 $$ if (variables.length > 1 && variableDeclaration.getParent() instanceof GrControlStatement) [ CD ]
