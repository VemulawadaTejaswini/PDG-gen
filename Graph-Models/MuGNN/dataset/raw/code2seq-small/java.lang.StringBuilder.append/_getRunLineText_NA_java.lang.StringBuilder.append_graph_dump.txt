Line_8 $$ for (String argument : arguments) -->Line_9 $$ sb.append(_getLineItemText("param-value", HtmlUtil.escape(argument)))[ FD ]
Line_2 $$ private static String _getRunLineText(Element element, List<String> arguments) -->Line_5 $$ sb.append(_getLineItemText("command-name", element.attributeValue("selenium")))[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_9 $$ sb.append(_getLineItemText("param-value", HtmlUtil.escape(argument)))[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_7 $$ sb.append(_getLineItemText("misc", " with parameters"))[ FD ]
Line_2 $$ private static String _getRunLineText(Element element, List<String> arguments) -->Line_12 $$ return sb.toString()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_5 $$ sb.append(_getLineItemText("command-name", element.attributeValue("selenium")))[ FD ]
Line_2 $$ private static String _getRunLineText(Element element, List<String> arguments) -->Line_6 $$ if (!arguments.isEmpty()) [ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_12 $$ return sb.toString()[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_4 $$ sb.append(_getLineItemText("misc", "Running "))[ FD ]
Line_2 $$ private static String _getRunLineText(Element element, List<String> arguments) -->Line_4 $$ sb.append(_getLineItemText("misc", "Running "))[ CD ]
Line_2 $$ private static String _getRunLineText(Element element, List<String> arguments) -->Line_6 $$ if (!arguments.isEmpty()) [ CD ]
Line_2 $$ private static String _getRunLineText(Element element, List<String> arguments) -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_6 $$ if (!arguments.isEmpty()) -->Line_7 $$ sb.append(_getLineItemText("misc", " with parameters"))[ CD ]
Line_2 $$ private static String _getRunLineText(Element element, List<String> arguments) -->Line_5 $$ sb.append(_getLineItemText("command-name", element.attributeValue("selenium")))[ FD ]
