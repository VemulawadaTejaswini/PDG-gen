Line_3 $$ final DataOutputStream outputStream-->Line_22 $$ clusterTopologyWriter.writeNodesRemoved(outputStream, clusterName, removedNodes)[ FD ]
Line_15 $$ final StringBuilder sb = new StringBuilder()-->Line_20 $$ EjbLogger.REMOTE_LOGGER.debug(sb.toString())[ FD ]
Line_3 $$ final DataOutputStream outputStream-->Line_25 $$ outputStream.close()[ FD ]
Line_2 $$ private void sendClusterNodesRemoved(final Set<String> removedNodes) throws IOException -->Line_4 $$ final MessageOutputStream messageOutputStream[ CD ]
Line_13 $$ if (EjbLogger.REMOTE_LOGGER.isDebugEnabled()) -->Line_15 $$ final StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ private void sendClusterNodesRemoved(final Set<String> removedNodes) throws IOException -->Line_10 $$ outputStream = new DataOutputStream(messageOutputStream)[ CD ]
Line_16 $$ for (final String nodeName : removedNodes) -->Line_17 $$ sb.append(nodeName)[ FD ]
Line_4 $$ final MessageOutputStream messageOutputStream-->Line_24 $$ channelAssociation.releaseChannelMessageOutputStream(messageOutputStream)[ FD ]
Line_13 $$ if (EjbLogger.REMOTE_LOGGER.isDebugEnabled()) -->Line_14 $$ EjbLogger.REMOTE_LOGGER.debug("Following " + removedNodes.size() + " nodes removed from cluster " + clusterName + ", writing a protocol message to channel " + this.channelReceiver.channelAssociation.getChannel())[ CD ]
Line_2 $$ private void sendClusterNodesRemoved(final Set<String> removedNodes) throws IOException -->Line_11 $$ final ClusterTopologyWriter clusterTopologyWriter = new ClusterTopologyWriter()[ CD ]
Line_2 $$ private void sendClusterNodesRemoved(final Set<String> removedNodes) throws IOException -->Line_22 $$ clusterTopologyWriter.writeNodesRemoved(outputStream, clusterName, removedNodes)[ FD ]
Line_4 $$ final MessageOutputStream messageOutputStream-->Line_6 $$ messageOutputStream = channelAssociation.acquireChannelMessageOutputStream()[ FD ]
Line_13 $$ if (EjbLogger.REMOTE_LOGGER.isDebugEnabled()) -->Line_20 $$ EjbLogger.REMOTE_LOGGER.debug(sb.toString())[ CD ]
Line_15 $$ final StringBuilder sb = new StringBuilder()-->Line_18 $$ sb.append(System.lineSeparator())[ FD ]
Line_15 $$ final StringBuilder sb = new StringBuilder()-->Line_17 $$ sb.append(nodeName)[ FD ]
Line_6 $$ messageOutputStream = channelAssociation.acquireChannelMessageOutputStream()-->Line_24 $$ channelAssociation.releaseChannelMessageOutputStream(messageOutputStream)[ FD ]
Line_2 $$ private void sendClusterNodesRemoved(final Set<String> removedNodes) throws IOException -->Line_14 $$ EjbLogger.REMOTE_LOGGER.debug("Following " + removedNodes.size() + " nodes removed from cluster " + clusterName + ", writing a protocol message to channel " + this.channelReceiver.channelAssociation.getChannel())[ FD ]
Line_2 $$ private void sendClusterNodesRemoved(final Set<String> removedNodes) throws IOException -->Line_3 $$ final DataOutputStream outputStream[ CD ]
Line_10 $$ outputStream = new DataOutputStream(messageOutputStream)-->Line_22 $$ clusterTopologyWriter.writeNodesRemoved(outputStream, clusterName, removedNodes)[ FD ]
Line_3 $$ final DataOutputStream outputStream-->Line_10 $$ outputStream = new DataOutputStream(messageOutputStream)[ FD ]
Line_11 $$ final ClusterTopologyWriter clusterTopologyWriter = new ClusterTopologyWriter()-->Line_22 $$ clusterTopologyWriter.writeNodesRemoved(outputStream, clusterName, removedNodes)[ FD ]
Line_10 $$ outputStream = new DataOutputStream(messageOutputStream)-->Line_25 $$ outputStream.close()[ FD ]
