Line_35 $$ do -->Line_40 $$ while (addedLine.indexOf('\f') > 0) [ CD ]
Line_11 $$ String subjectLine = readCountedLine()-->Line_17 $$ while (subjectLine != null && (subjectLine.length() == 0 || subjectLine.charAt(0) != '\f')) [ FD ]
Line_2 $$ private Pair<String, String> readBalancedLine() throws IOException -->Line_29 $$ if (line.length() < endlineString.length()) [ CD ]
Line_35 $$ do -->Line_36 $$ addedLine = readCountedLine()[ CD ]
Line_3 $$ String line = readCountedLine()-->Line_8 $$ line = line.substring(line.indexOf('\f'))[ FD ]
Line_19 $$ subjectLine = readCountedLine()-->Line_17 $$ while (subjectLine != null && (subjectLine.length() == 0 || subjectLine.charAt(0) != '\f')) [ FD ]
Line_17 $$ while (subjectLine != null && (subjectLine.length() == 0 || subjectLine.charAt(0) != '\f')) -->Line_19 $$ subjectLine = readCountedLine()[ CD ]
Line_11 $$ String subjectLine = readCountedLine()-->Line_12 $$ if (subjectLine != null && subjectLine.length() != 0 && apparentConfFileHeader(line) && apparentXMLFileStart(subjectLine)) [ FD ]
Line_8 $$ line = line.substring(line.indexOf('\f'))-->Line_32 $$ if (!endlineString.equals(line.substring(line.length() - endlineString.length()))) [ FD ]
Line_12 $$ if (subjectLine != null && subjectLine.length() != 0 && apparentConfFileHeader(line) && apparentXMLFileStart(subjectLine)) -->Line_14 $$ while (subjectLine != null && subjectLine.indexOf('\f') > 0) [ CD ]
Line_11 $$ String subjectLine = readCountedLine()-->Line_15 $$ subjectLine = subjectLine.substring(subjectLine.indexOf('\f'))[ FD ]
Line_2 $$ private Pair<String, String> readBalancedLine() throws IOException -->Line_52 $$ return new Pair<String, String>(null, line)[ CD ]
Line_10 $$ if (line.length() != 0 && line.charAt(0) == '\f') -->Line_12 $$ if (subjectLine != null && subjectLine.length() != 0 && apparentConfFileHeader(line) && apparentXMLFileStart(subjectLine)) [ CD ]
Line_36 $$ addedLine = readCountedLine()-->Line_35 $$ do [ FD ]
Line_13 $$ StringBuilder sb = new StringBuilder()-->Line_24 $$ return new Pair<String, String>(line, sb.toString())[ FD ]
Line_41 $$ addedLine = addedLine.substring(addedLine.indexOf('\f'))-->Line_40 $$ while (addedLine.indexOf('\f') > 0) [ FD ]
Line_3 $$ String line = readCountedLine()-->Line_4 $$ if (line == null) [ FD ]
Line_10 $$ if (line.length() != 0 && line.charAt(0) == '\f') -->Line_26 $$ return readBalancedLine()[ CD ]
Line_3 $$ String line = readCountedLine()-->Line_32 $$ if (!endlineString.equals(line.substring(line.length() - endlineString.length()))) [ FD ]
Line_12 $$ if (subjectLine != null && subjectLine.length() != 0 && apparentConfFileHeader(line) && apparentXMLFileStart(subjectLine)) -->Line_17 $$ while (subjectLine != null && (subjectLine.length() == 0 || subjectLine.charAt(0) != '\f')) [ CD ]
Line_41 $$ addedLine = addedLine.substring(addedLine.indexOf('\f'))-->Line_48 $$ sb.append(addedLine)[ FD ]
Line_14 $$ while (subjectLine != null && subjectLine.indexOf('\f') > 0) -->Line_15 $$ subjectLine = subjectLine.substring(subjectLine.indexOf('\f'))[ CD ]
Line_19 $$ subjectLine = readCountedLine()-->Line_21 $$ if (subjectLine != null) [ FD ]
Line_11 $$ String subjectLine = readCountedLine()-->Line_21 $$ if (subjectLine != null) [ FD ]
Line_32 $$ if (!endlineString.equals(line.substring(line.length() - endlineString.length()))) -->Line_34 $$ String addedLine[ CD ]
Line_13 $$ StringBuilder sb = new StringBuilder()-->Line_47 $$ sb.append("\n")[ FD ]
Line_41 $$ addedLine = addedLine.substring(addedLine.indexOf('\f'))-->Line_43 $$ if (addedLine.length() > 0 && addedLine.charAt(0) == '\f') [ FD ]
Line_15 $$ subjectLine = subjectLine.substring(subjectLine.indexOf('\f'))-->Line_14 $$ while (subjectLine != null && subjectLine.indexOf('\f') > 0) [ FD ]
Line_21 $$ if (subjectLine != null) -->Line_22 $$ unreadCountedLine(subjectLine)[ CD ]
Line_36 $$ addedLine = readCountedLine()-->Line_37 $$ if (addedLine == null) [ FD ]
Line_43 $$ if (addedLine.length() > 0 && addedLine.charAt(0) == '\f') -->Line_44 $$ unreadCountedLine(addedLine)[ CD ]
Line_28 $$ String endlineString = (version == 0 ? " " : " .")-->Line_32 $$ if (!endlineString.equals(line.substring(line.length() - endlineString.length()))) [ FD ]
Line_35 $$ do -->Line_47 $$ sb.append("\n")[ CD ]
Line_36 $$ addedLine = readCountedLine()-->Line_48 $$ sb.append(addedLine)[ FD ]
Line_2 $$ private Pair<String, String> readBalancedLine() throws IOException -->Line_7 $$ while (line.indexOf('\f') > 0) [ CD ]
Line_13 $$ StringBuilder sb = new StringBuilder()-->Line_48 $$ sb.append(addedLine)[ FD ]
Line_29 $$ if (line.length() < endlineString.length()) -->Line_30 $$ return new Pair<String, String>(null, line)[ CD ]
Line_15 $$ subjectLine = subjectLine.substring(subjectLine.indexOf('\f'))-->Line_21 $$ if (subjectLine != null) [ FD ]
Line_13 $$ StringBuilder sb = new StringBuilder()-->Line_38 $$ return new Pair<String, String>(null, sb.toString())[ FD ]
Line_13 $$ StringBuilder sb = new StringBuilder()-->Line_18 $$ sb.append(subjectLine)[ FD ]
Line_11 $$ String subjectLine = readCountedLine()-->Line_19 $$ subjectLine = readCountedLine()[ FD ]
Line_2 $$ private Pair<String, String> readBalancedLine() throws IOException -->Line_32 $$ if (!endlineString.equals(line.substring(line.length() - endlineString.length()))) [ CD ]
Line_2 $$ private Pair<String, String> readBalancedLine() throws IOException -->Line_28 $$ String endlineString = (version == 0 ? " " : " .")[ CD ]
Line_32 $$ if (!endlineString.equals(line.substring(line.length() - endlineString.length()))) -->Line_35 $$ do [ CD ]
Line_37 $$ if (addedLine == null) -->Line_38 $$ return new Pair<String, String>(null, sb.toString())[ CD ]
Line_35 $$ do -->Line_43 $$ if (addedLine.length() > 0 && addedLine.charAt(0) == '\f') [ CD ]
Line_4 $$ if (line == null) -->Line_5 $$ return null[ CD ]
Line_8 $$ line = line.substring(line.indexOf('\f'))-->Line_29 $$ if (line.length() < endlineString.length()) [ FD ]
Line_3 $$ String line = readCountedLine()-->Line_7 $$ while (line.indexOf('\f') > 0) [ FD ]
Line_11 $$ String subjectLine = readCountedLine()-->Line_14 $$ while (subjectLine != null && subjectLine.indexOf('\f') > 0) [ FD ]
Line_2 $$ private Pair<String, String> readBalancedLine() throws IOException -->Line_3 $$ String line = readCountedLine()[ CD ]
Line_35 $$ do -->Line_48 $$ sb.append(addedLine)[ CD ]
Line_7 $$ while (line.indexOf('\f') > 0) -->Line_8 $$ line = line.substring(line.indexOf('\f'))[ CD ]
Line_8 $$ line = line.substring(line.indexOf('\f'))-->Line_12 $$ if (subjectLine != null && subjectLine.length() != 0 && apparentConfFileHeader(line) && apparentXMLFileStart(subjectLine)) [ FD ]
Line_40 $$ while (addedLine.indexOf('\f') > 0) -->Line_41 $$ addedLine = addedLine.substring(addedLine.indexOf('\f'))[ CD ]
Line_3 $$ String line = readCountedLine()-->Line_50 $$ line = sb.toString()[ FD ]
Line_41 $$ addedLine = addedLine.substring(addedLine.indexOf('\f'))-->Line_44 $$ unreadCountedLine(addedLine)[ FD ]
Line_19 $$ subjectLine = readCountedLine()-->Line_18 $$ sb.append(subjectLine)[ FD ]
Line_28 $$ String endlineString = (version == 0 ? " " : " .")-->Line_35 $$ do [ FD ]
Line_15 $$ subjectLine = subjectLine.substring(subjectLine.indexOf('\f'))-->Line_19 $$ subjectLine = readCountedLine()[ FD ]
Line_19 $$ subjectLine = readCountedLine()-->Line_22 $$ unreadCountedLine(subjectLine)[ FD ]
Line_2 $$ private Pair<String, String> readBalancedLine() throws IOException -->Line_4 $$ if (line == null) [ CD ]
Line_41 $$ addedLine = addedLine.substring(addedLine.indexOf('\f'))-->Line_35 $$ do [ FD ]
Line_3 $$ String line = readCountedLine()-->Line_10 $$ if (line.length() != 0 && line.charAt(0) == '\f') [ FD ]
Line_13 $$ StringBuilder sb = new StringBuilder()-->Line_50 $$ line = sb.toString()[ FD ]
Line_10 $$ if (line.length() != 0 && line.charAt(0) == '\f') -->Line_11 $$ String subjectLine = readCountedLine()[ CD ]
Line_34 $$ String addedLine-->Line_36 $$ addedLine = readCountedLine()[ FD ]
Line_36 $$ addedLine = readCountedLine()-->Line_44 $$ unreadCountedLine(addedLine)[ FD ]
Line_34 $$ String addedLine-->Line_40 $$ while (addedLine.indexOf('\f') > 0) [ FD ]
Line_12 $$ if (subjectLine != null && subjectLine.length() != 0 && apparentConfFileHeader(line) && apparentXMLFileStart(subjectLine)) -->Line_13 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_28 $$ String endlineString = (version == 0 ? " " : " .")-->Line_29 $$ if (line.length() < endlineString.length()) [ FD ]
Line_43 $$ if (addedLine.length() > 0 && addedLine.charAt(0) == '\f') -->Line_45 $$ return new Pair<String, String>(null, sb.toString())[ CD ]
Line_3 $$ String line = readCountedLine()-->Line_29 $$ if (line.length() < endlineString.length()) [ FD ]
Line_35 $$ do -->Line_37 $$ if (addedLine == null) [ CD ]
Line_34 $$ String addedLine-->Line_41 $$ addedLine = addedLine.substring(addedLine.indexOf('\f'))[ FD ]
Line_36 $$ addedLine = readCountedLine()-->Line_40 $$ while (addedLine.indexOf('\f') > 0) [ FD ]
Line_12 $$ if (subjectLine != null && subjectLine.length() != 0 && apparentConfFileHeader(line) && apparentXMLFileStart(subjectLine)) -->Line_24 $$ return new Pair<String, String>(line, sb.toString())[ CD ]
Line_36 $$ addedLine = readCountedLine()-->Line_41 $$ addedLine = addedLine.substring(addedLine.indexOf('\f'))[ FD ]
Line_12 $$ if (subjectLine != null && subjectLine.length() != 0 && apparentConfFileHeader(line) && apparentXMLFileStart(subjectLine)) -->Line_21 $$ if (subjectLine != null) [ CD ]
Line_8 $$ line = line.substring(line.indexOf('\f'))-->Line_50 $$ line = sb.toString()[ FD ]
Line_32 $$ if (!endlineString.equals(line.substring(line.length() - endlineString.length()))) -->Line_50 $$ line = sb.toString()[ CD ]
Line_34 $$ String addedLine-->Line_35 $$ do [ FD ]
Line_8 $$ line = line.substring(line.indexOf('\f'))-->Line_10 $$ if (line.length() != 0 && line.charAt(0) == '\f') [ FD ]
Line_34 $$ String addedLine-->Line_37 $$ if (addedLine == null) [ FD ]
Line_34 $$ String addedLine-->Line_43 $$ if (addedLine.length() > 0 && addedLine.charAt(0) == '\f') [ FD ]
Line_8 $$ line = line.substring(line.indexOf('\f'))-->Line_7 $$ while (line.indexOf('\f') > 0) [ FD ]
Line_3 $$ String line = readCountedLine()-->Line_12 $$ if (subjectLine != null && subjectLine.length() != 0 && apparentConfFileHeader(line) && apparentXMLFileStart(subjectLine)) [ FD ]
Line_2 $$ private Pair<String, String> readBalancedLine() throws IOException -->Line_10 $$ if (line.length() != 0 && line.charAt(0) == '\f') [ CD ]
Line_15 $$ subjectLine = subjectLine.substring(subjectLine.indexOf('\f'))-->Line_22 $$ unreadCountedLine(subjectLine)[ FD ]
Line_13 $$ StringBuilder sb = new StringBuilder()-->Line_45 $$ return new Pair<String, String>(null, sb.toString())[ FD ]
Line_11 $$ String subjectLine = readCountedLine()-->Line_22 $$ unreadCountedLine(subjectLine)[ FD ]
Line_34 $$ String addedLine-->Line_48 $$ sb.append(addedLine)[ FD ]
Line_15 $$ subjectLine = subjectLine.substring(subjectLine.indexOf('\f'))-->Line_18 $$ sb.append(subjectLine)[ FD ]
Line_15 $$ subjectLine = subjectLine.substring(subjectLine.indexOf('\f'))-->Line_17 $$ while (subjectLine != null && (subjectLine.length() == 0 || subjectLine.charAt(0) != '\f')) [ FD ]
Line_34 $$ String addedLine-->Line_44 $$ unreadCountedLine(addedLine)[ FD ]
Line_17 $$ while (subjectLine != null && (subjectLine.length() == 0 || subjectLine.charAt(0) != '\f')) -->Line_18 $$ sb.append(subjectLine)[ CD ]
Line_11 $$ String subjectLine = readCountedLine()-->Line_18 $$ sb.append(subjectLine)[ FD ]
Line_36 $$ addedLine = readCountedLine()-->Line_43 $$ if (addedLine.length() > 0 && addedLine.charAt(0) == '\f') [ FD ]
