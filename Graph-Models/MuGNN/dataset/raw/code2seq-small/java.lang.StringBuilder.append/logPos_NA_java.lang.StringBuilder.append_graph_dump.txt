Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_17 $$ LOG.info(sb.toString())[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_7 $$ sb.append("\nshrunk:" + token.shrunkStart + "," + token.shrunkEnd)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_11 $$ sb.append("\ndelegate:")[ FD ]
Line_2 $$ private void logPos() -->Line_13 $$ if (!myDelegate.eof()) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_9 $$ sb.append("\nTT:" + getTokenText())[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_14 $$ sb.append("\nposition:" + myDelegate.getCurrentOffset() + "," + (myDelegate.getCurrentOffset() + myDelegate.getTokenText().length()))[ FD ]
Line_5 $$ if (myLexPosition < myShrunkSequence.size()) -->Line_8 $$ sb.append("\nreal:" + token.realStart + "," + token.realEnd)[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_15 $$ sb.append("\nTT:" + myDelegate.getTokenText())[ FD ]
Line_2 $$ private void logPos() -->Line_12 $$ sb.append("eof=" + myDelegate.eof())[ CD ]
Line_13 $$ if (!myDelegate.eof()) -->Line_15 $$ sb.append("\nTT:" + myDelegate.getTokenText())[ CD ]
Line_2 $$ private void logPos() -->Line_5 $$ if (myLexPosition < myShrunkSequence.size()) [ CD ]
Line_5 $$ if (myLexPosition < myShrunkSequence.size()) -->Line_6 $$ final MyShiftedToken token = myShrunkSequence.get(myLexPosition)[ CD ]
Line_5 $$ if (myLexPosition < myShrunkSequence.size()) -->Line_9 $$ sb.append("\nTT:" + getTokenText())[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_8 $$ sb.append("\nreal:" + token.realStart + "," + token.realEnd)[ FD ]
Line_5 $$ if (myLexPosition < myShrunkSequence.size()) -->Line_7 $$ sb.append("\nshrunk:" + token.shrunkStart + "," + token.shrunkEnd)[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_4 $$ sb.append("\nmyLexPosition=" + myLexPosition + "/" + myShrunkSequence.size())[ FD ]
Line_13 $$ if (!myDelegate.eof()) -->Line_14 $$ sb.append("\nposition:" + myDelegate.getCurrentOffset() + "," + (myDelegate.getCurrentOffset() + myDelegate.getTokenText().length()))[ CD ]
Line_2 $$ private void logPos() -->Line_17 $$ LOG.info(sb.toString())[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_12 $$ sb.append("eof=" + myDelegate.eof())[ FD ]
Line_2 $$ private void logPos() -->Line_4 $$ sb.append("\nmyLexPosition=" + myLexPosition + "/" + myShrunkSequence.size())[ CD ]
Line_2 $$ private void logPos() -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ private void logPos() -->Line_11 $$ sb.append("\ndelegate:")[ CD ]
