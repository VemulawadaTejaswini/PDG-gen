Line_5 $$ if ((header & 0x8000) == 0) -->Line_10 $$ sb.append((char) (header & 0xFF)).append("@")[ CD ]
Line_2 $$ protected AbstractType<?> getAndAppendComparator(int i, ByteBuffer bb, StringBuilder sb) -->Line_4 $$ int header = ByteBufferUtil.readShortLength(bb)[ FD ]
Line_2 $$ protected AbstractType<?> getAndAppendComparator(int i, ByteBuffer bb, StringBuilder sb) -->Line_7 $$ sb.append(name).append("@")[ FD ]
Line_5 $$ if ((header & 0x8000) == 0) -->Line_11 $$ return aliases.get((byte) (header & 0xFF))[ CD ]
Line_2 $$ protected AbstractType<?> getAndAppendComparator(int i, ByteBuffer bb, StringBuilder sb) -->Line_10 $$ sb.append((char) (header & 0xFF)).append("@")[ FD ]
Line_5 $$ if ((header & 0x8000) == 0) -->Line_6 $$ String name = ByteBufferUtil.string(ByteBufferUtil.readBytes(bb, header))[ CD ]
Line_5 $$ if ((header & 0x8000) == 0) -->Line_8 $$ return TypeParser.parse(name)[ CD ]
Line_6 $$ String name = ByteBufferUtil.string(ByteBufferUtil.readBytes(bb, header))-->Line_7 $$ sb.append(name).append("@")[ FD ]
Line_6 $$ String name = ByteBufferUtil.string(ByteBufferUtil.readBytes(bb, header))-->Line_8 $$ return TypeParser.parse(name)[ FD ]
Line_4 $$ int header = ByteBufferUtil.readShortLength(bb)-->Line_6 $$ String name = ByteBufferUtil.string(ByteBufferUtil.readBytes(bb, header))[ FD ]
Line_2 $$ protected AbstractType<?> getAndAppendComparator(int i, ByteBuffer bb, StringBuilder sb) -->Line_6 $$ String name = ByteBufferUtil.string(ByteBufferUtil.readBytes(bb, header))[ FD ]
Line_5 $$ if ((header & 0x8000) == 0) -->Line_7 $$ sb.append(name).append("@")[ CD ]
