Line_2 $$ private static void writeVariableWithoutSemicolonAndInitializer(StringBuilder builder, GrVariable var, ExpressionContext context) -->Line_3 $$ ModifierListGenerator.writeModifiers(builder, var.getModifierList())[ FD ]
Line_2 $$ private static void writeVariableWithoutSemicolonAndInitializer(StringBuilder builder, GrVariable var, ExpressionContext context) -->Line_5 $$ builder.append(' ').append(var.getName())[ CD ]
Line_2 $$ private static void writeVariableWithoutSemicolonAndInitializer(StringBuilder builder, GrVariable var, ExpressionContext context) -->Line_4 $$ TypeWriter.writeType(builder, context.typeProvider.getVarType(var), var)[ CD ]
Line_2 $$ private static void writeVariableWithoutSemicolonAndInitializer(StringBuilder builder, GrVariable var, ExpressionContext context) -->Line_3 $$ ModifierListGenerator.writeModifiers(builder, var.getModifierList())[ CD ]
Line_2 $$ private static void writeVariableWithoutSemicolonAndInitializer(StringBuilder builder, GrVariable var, ExpressionContext context) -->Line_4 $$ TypeWriter.writeType(builder, context.typeProvider.getVarType(var), var)[ FD ]
Line_2 $$ private static void writeVariableWithoutSemicolonAndInitializer(StringBuilder builder, GrVariable var, ExpressionContext context) -->Line_5 $$ builder.append(' ').append(var.getName())[ FD ]
