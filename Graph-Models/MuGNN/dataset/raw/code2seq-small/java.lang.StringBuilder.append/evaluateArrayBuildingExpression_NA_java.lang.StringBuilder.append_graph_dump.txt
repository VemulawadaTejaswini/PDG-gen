Line_36 $$ for (int i = 0; i < array.length; i++) -->Line_37 $$ if (i > 0) [ CD ]
Line_20 $$ for (int i = 0; i < array.length; i++) -->Line_29 $$ if (i > 0) [ FD ]
Line_12 $$ for (int i = 0; i < array.length; i++) -->Line_20 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_12 $$ for (int i = 0; i < array.length; i++) -->Line_53 $$ if (i > 0) [ FD ]
Line_2 $$ private String evaluateArrayBuildingExpression(String expression, String expectedToString) -->Line_6 $$ assertNotNull(o)[ CD ]
Line_20 $$ for (int i = 0; i < array.length; i++) -->Line_28 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_60 $$ for (int i = 0; i < array.length; i++) -->Line_68 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_36 $$ for (int i = 0; i < array.length; i++) -->Line_45 $$ if (i > 0) [ FD ]
Line_10 $$ if (o instanceof int[]) -->Line_12 $$ for (int i = 0; i < array.length; i++) [ CD ]
Line_44 $$ for (int i = 0; i < array.length; i++) -->Line_69 $$ if (i > 0) [ FD ]
Line_28 $$ for (int i = 0; i < array.length; i++) -->Line_29 $$ if (i > 0) [ FD ]
Line_2 $$ private String evaluateArrayBuildingExpression(String expression, String expectedToString) -->Line_10 $$ if (o instanceof int[]) [ CD ]
Line_8 $$ StringBuilder s = new StringBuilder()-->Line_16 $$ s.append(array[i])[ FD ]
Line_12 $$ for (int i = 0; i < array.length; i++) -->Line_21 $$ if (i > 0) [ FD ]
Line_44 $$ for (int i = 0; i < array.length; i++) -->Line_45 $$ if (i > 0) [ CD ]
Line_52 $$ for (int i = 0; i < array.length; i++) -->Line_53 $$ if (i > 0) [ FD ]
Line_8 $$ StringBuilder s = new StringBuilder()-->Line_32 $$ s.append(array[i])[ FD ]
Line_52 $$ for (int i = 0; i < array.length; i++) -->Line_61 $$ if (i > 0) [ FD ]
Line_28 $$ for (int i = 0; i < array.length; i++) -->Line_68 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_12 $$ for (int i = 0; i < array.length; i++) -->Line_68 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_8 $$ StringBuilder s = new StringBuilder()-->Line_70 $$ s.append(',')[ FD ]
Line_60 $$ for (int i = 0; i < array.length; i++) -->Line_64 $$ s.append(array[i])[ CD ]
Line_52 $$ for (int i = 0; i < array.length; i++) -->Line_56 $$ s.append(array[i])[ CD ]
Line_12 $$ for (int i = 0; i < array.length; i++) -->Line_52 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_52 $$ for (int i = 0; i < array.length; i++) -->Line_68 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_12 $$ for (int i = 0; i < array.length; i++) -->Line_13 $$ if (i > 0) [ FD ]
Line_44 $$ for (int i = 0; i < array.length; i++) -->Line_68 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_20 $$ for (int i = 0; i < array.length; i++) -->Line_60 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_3 $$ SpelExpressionParser parser = new SpelExpressionParser()-->Line_4 $$ Expression e = parser.parseExpression(expression)[ FD ]
Line_2 $$ private String evaluateArrayBuildingExpression(String expression, String expectedToString) -->Line_4 $$ Expression e = parser.parseExpression(expression)[ CD ]
Line_50 $$ if (o instanceof double[]) -->Line_52 $$ for (int i = 0; i < array.length; i++) [ CD ]
Line_5 $$ Object o = e.getValue()-->Line_7 $$ assertTrue(o.getClass().isArray())[ FD ]
Line_10 $$ if (o instanceof int[]) -->Line_18 $$ if (o instanceof boolean[]) [ CD ]
Line_26 $$ if (o instanceof char[]) -->Line_28 $$ for (int i = 0; i < array.length; i++) [ CD ]
Line_36 $$ for (int i = 0; i < array.length; i++) -->Line_68 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_29 $$ if (i > 0) -->Line_30 $$ s.append(',')[ CD ]
Line_5 $$ Object o = e.getValue()-->Line_75 $$ fail("Not supported " + o.getClass())[ FD ]
Line_2 $$ private String evaluateArrayBuildingExpression(String expression, String expectedToString) -->Line_7 $$ assertTrue(o.getClass().isArray())[ CD ]
Line_36 $$ for (int i = 0; i < array.length; i++) -->Line_52 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_5 $$ Object o = e.getValue()-->Line_42 $$ if (o instanceof short[]) [ FD ]
Line_28 $$ for (int i = 0; i < array.length; i++) -->Line_44 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_60 $$ for (int i = 0; i < array.length; i++) -->Line_61 $$ if (i > 0) [ CD ]
Line_12 $$ for (int i = 0; i < array.length; i++) -->Line_16 $$ s.append(array[i])[ CD ]
Line_36 $$ for (int i = 0; i < array.length; i++) -->Line_60 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_13 $$ if (i > 0) -->Line_14 $$ s.append(',')[ CD ]
Line_8 $$ StringBuilder s = new StringBuilder()-->Line_62 $$ s.append(',')[ FD ]
Line_44 $$ for (int i = 0; i < array.length; i++) -->Line_48 $$ s.append(array[i])[ CD ]
Line_8 $$ StringBuilder s = new StringBuilder()-->Line_30 $$ s.append(',')[ FD ]
Line_18 $$ if (o instanceof boolean[]) -->Line_26 $$ if (o instanceof char[]) [ CD ]
Line_20 $$ for (int i = 0; i < array.length; i++) -->Line_53 $$ if (i > 0) [ FD ]
Line_8 $$ StringBuilder s = new StringBuilder()-->Line_38 $$ s.append(',')[ FD ]
Line_50 $$ if (o instanceof double[]) -->Line_58 $$ if (o instanceof float[]) [ CD ]
Line_60 $$ for (int i = 0; i < array.length; i++) -->Line_61 $$ if (i > 0) [ FD ]
Line_20 $$ for (int i = 0; i < array.length; i++) -->Line_21 $$ if (i > 0) [ CD ]
Line_20 $$ for (int i = 0; i < array.length; i++) -->Line_44 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_2 $$ private String evaluateArrayBuildingExpression(String expression, String expectedToString) -->Line_77 $$ s.append(']')[ CD ]
Line_58 $$ if (o instanceof float[]) -->Line_66 $$ if (o instanceof byte[]) [ CD ]
Line_20 $$ for (int i = 0; i < array.length; i++) -->Line_24 $$ s.append(array[i])[ CD ]
Line_10 $$ if (o instanceof int[]) -->Line_11 $$ int[] array = (int[]) o[ CD ]
Line_37 $$ if (i > 0) -->Line_38 $$ s.append(',')[ CD ]
Line_26 $$ if (o instanceof char[]) -->Line_34 $$ if (o instanceof long[]) [ CD ]
Line_53 $$ if (i > 0) -->Line_54 $$ s.append(',')[ CD ]
Line_5 $$ Object o = e.getValue()-->Line_18 $$ if (o instanceof boolean[]) [ FD ]
Line_36 $$ for (int i = 0; i < array.length; i++) -->Line_44 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_45 $$ if (i > 0) -->Line_46 $$ s.append(',')[ CD ]
Line_2 $$ private String evaluateArrayBuildingExpression(String expression, String expectedToString) -->Line_9 $$ s.append('[')[ CD ]
Line_28 $$ for (int i = 0; i < array.length; i++) -->Line_52 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_8 $$ StringBuilder s = new StringBuilder()-->Line_54 $$ s.append(',')[ FD ]
Line_44 $$ for (int i = 0; i < array.length; i++) -->Line_61 $$ if (i > 0) [ FD ]
Line_8 $$ StringBuilder s = new StringBuilder()-->Line_72 $$ s.append(array[i])[ FD ]
Line_36 $$ for (int i = 0; i < array.length; i++) -->Line_40 $$ s.append(array[i])[ CD ]
Line_44 $$ for (int i = 0; i < array.length; i++) -->Line_52 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_12 $$ for (int i = 0; i < array.length; i++) -->Line_60 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_34 $$ if (o instanceof long[]) -->Line_36 $$ for (int i = 0; i < array.length; i++) [ CD ]
Line_52 $$ for (int i = 0; i < array.length; i++) -->Line_53 $$ if (i > 0) [ CD ]
Line_42 $$ if (o instanceof short[]) -->Line_44 $$ for (int i = 0; i < array.length; i++) [ CD ]
Line_66 $$ if (o instanceof byte[]) -->Line_68 $$ for (int i = 0; i < array.length; i++) [ CD ]
Line_5 $$ Object o = e.getValue()-->Line_6 $$ assertNotNull(o)[ FD ]
Line_8 $$ StringBuilder s = new StringBuilder()-->Line_14 $$ s.append(',')[ FD ]
Line_5 $$ Object o = e.getValue()-->Line_66 $$ if (o instanceof byte[]) [ FD ]
Line_5 $$ Object o = e.getValue()-->Line_26 $$ if (o instanceof char[]) [ FD ]
Line_36 $$ for (int i = 0; i < array.length; i++) -->Line_37 $$ if (i > 0) [ FD ]
Line_68 $$ for (int i = 0; i < array.length; i++) -->Line_72 $$ s.append(array[i])[ CD ]
Line_2 $$ private String evaluateArrayBuildingExpression(String expression, String expectedToString) -->Line_78 $$ assertEquals(expectedToString, s.toString())[ FD ]
Line_12 $$ for (int i = 0; i < array.length; i++) -->Line_37 $$ if (i > 0) [ FD ]
Line_8 $$ StringBuilder s = new StringBuilder()-->Line_64 $$ s.append(array[i])[ FD ]
Line_12 $$ for (int i = 0; i < array.length; i++) -->Line_13 $$ if (i > 0) [ CD ]
Line_2 $$ private String evaluateArrayBuildingExpression(String expression, String expectedToString) -->Line_5 $$ Object o = e.getValue()[ CD ]
Line_44 $$ for (int i = 0; i < array.length; i++) -->Line_60 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_5 $$ Object o = e.getValue()-->Line_10 $$ if (o instanceof int[]) [ FD ]
Line_36 $$ for (int i = 0; i < array.length; i++) -->Line_61 $$ if (i > 0) [ FD ]
Line_52 $$ for (int i = 0; i < array.length; i++) -->Line_69 $$ if (i > 0) [ FD ]
Line_60 $$ for (int i = 0; i < array.length; i++) -->Line_69 $$ if (i > 0) [ FD ]
Line_8 $$ StringBuilder s = new StringBuilder()-->Line_78 $$ assertEquals(expectedToString, s.toString())[ FD ]
Line_44 $$ for (int i = 0; i < array.length; i++) -->Line_45 $$ if (i > 0) [ FD ]
Line_8 $$ StringBuilder s = new StringBuilder()-->Line_46 $$ s.append(',')[ FD ]
Line_4 $$ Expression e = parser.parseExpression(expression)-->Line_5 $$ Object o = e.getValue()[ FD ]
Line_12 $$ for (int i = 0; i < array.length; i++) -->Line_44 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_20 $$ for (int i = 0; i < array.length; i++) -->Line_52 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_20 $$ for (int i = 0; i < array.length; i++) -->Line_37 $$ if (i > 0) [ FD ]
Line_20 $$ for (int i = 0; i < array.length; i++) -->Line_36 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_12 $$ for (int i = 0; i < array.length; i++) -->Line_29 $$ if (i > 0) [ FD ]
Line_8 $$ StringBuilder s = new StringBuilder()-->Line_24 $$ s.append(array[i])[ FD ]
Line_68 $$ for (int i = 0; i < array.length; i++) -->Line_69 $$ if (i > 0) [ FD ]
Line_36 $$ for (int i = 0; i < array.length; i++) -->Line_53 $$ if (i > 0) [ FD ]
Line_8 $$ StringBuilder s = new StringBuilder()-->Line_9 $$ s.append('[')[ FD ]
Line_5 $$ Object o = e.getValue()-->Line_34 $$ if (o instanceof long[]) [ FD ]
Line_12 $$ for (int i = 0; i < array.length; i++) -->Line_69 $$ if (i > 0) [ FD ]
Line_8 $$ StringBuilder s = new StringBuilder()-->Line_79 $$ return s.toString()[ FD ]
Line_18 $$ if (o instanceof boolean[]) -->Line_20 $$ for (int i = 0; i < array.length; i++) [ CD ]
Line_2 $$ private String evaluateArrayBuildingExpression(String expression, String expectedToString) -->Line_4 $$ Expression e = parser.parseExpression(expression)[ FD ]
Line_20 $$ for (int i = 0; i < array.length; i++) -->Line_45 $$ if (i > 0) [ FD ]
Line_42 $$ if (o instanceof short[]) -->Line_50 $$ if (o instanceof double[]) [ CD ]
Line_28 $$ for (int i = 0; i < array.length; i++) -->Line_45 $$ if (i > 0) [ FD ]
Line_61 $$ if (i > 0) -->Line_62 $$ s.append(',')[ CD ]
Line_28 $$ for (int i = 0; i < array.length; i++) -->Line_29 $$ if (i > 0) [ CD ]
Line_28 $$ for (int i = 0; i < array.length; i++) -->Line_36 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_34 $$ if (o instanceof long[]) -->Line_42 $$ if (o instanceof short[]) [ CD ]
Line_28 $$ for (int i = 0; i < array.length; i++) -->Line_61 $$ if (i > 0) [ FD ]
Line_2 $$ private String evaluateArrayBuildingExpression(String expression, String expectedToString) -->Line_79 $$ return s.toString()[ CD ]
Line_36 $$ for (int i = 0; i < array.length; i++) -->Line_69 $$ if (i > 0) [ FD ]
Line_20 $$ for (int i = 0; i < array.length; i++) -->Line_69 $$ if (i > 0) [ FD ]
Line_12 $$ for (int i = 0; i < array.length; i++) -->Line_28 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_20 $$ for (int i = 0; i < array.length; i++) -->Line_68 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_28 $$ for (int i = 0; i < array.length; i++) -->Line_60 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_2 $$ private String evaluateArrayBuildingExpression(String expression, String expectedToString) -->Line_78 $$ assertEquals(expectedToString, s.toString())[ CD ]
Line_69 $$ if (i > 0) -->Line_70 $$ s.append(',')[ CD ]
Line_8 $$ StringBuilder s = new StringBuilder()-->Line_40 $$ s.append(array[i])[ FD ]
Line_12 $$ for (int i = 0; i < array.length; i++) -->Line_45 $$ if (i > 0) [ FD ]
Line_58 $$ if (o instanceof float[]) -->Line_60 $$ for (int i = 0; i < array.length; i++) [ CD ]
Line_28 $$ for (int i = 0; i < array.length; i++) -->Line_69 $$ if (i > 0) [ FD ]
Line_2 $$ private String evaluateArrayBuildingExpression(String expression, String expectedToString) -->Line_8 $$ StringBuilder s = new StringBuilder()[ CD ]
Line_66 $$ if (o instanceof byte[]) -->Line_75 $$ fail("Not supported " + o.getClass())[ CD ]
Line_20 $$ for (int i = 0; i < array.length; i++) -->Line_61 $$ if (i > 0) [ FD ]
Line_5 $$ Object o = e.getValue()-->Line_58 $$ if (o instanceof float[]) [ FD ]
Line_5 $$ Object o = e.getValue()-->Line_50 $$ if (o instanceof double[]) [ FD ]
Line_2 $$ private String evaluateArrayBuildingExpression(String expression, String expectedToString) -->Line_3 $$ SpelExpressionParser parser = new SpelExpressionParser()[ CD ]
Line_8 $$ StringBuilder s = new StringBuilder()-->Line_48 $$ s.append(array[i])[ FD ]
Line_28 $$ for (int i = 0; i < array.length; i++) -->Line_37 $$ if (i > 0) [ FD ]
Line_12 $$ for (int i = 0; i < array.length; i++) -->Line_36 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_8 $$ StringBuilder s = new StringBuilder()-->Line_22 $$ s.append(',')[ FD ]
Line_20 $$ for (int i = 0; i < array.length; i++) -->Line_21 $$ if (i > 0) [ FD ]
Line_21 $$ if (i > 0) -->Line_22 $$ s.append(',')[ CD ]
Line_28 $$ for (int i = 0; i < array.length; i++) -->Line_32 $$ s.append(array[i])[ CD ]
Line_52 $$ for (int i = 0; i < array.length; i++) -->Line_60 $$ for (int i = 0; i < array.length; i++) [ FD ]
Line_68 $$ for (int i = 0; i < array.length; i++) -->Line_69 $$ if (i > 0) [ CD ]
Line_8 $$ StringBuilder s = new StringBuilder()-->Line_56 $$ s.append(array[i])[ FD ]
Line_44 $$ for (int i = 0; i < array.length; i++) -->Line_53 $$ if (i > 0) [ FD ]
Line_28 $$ for (int i = 0; i < array.length; i++) -->Line_53 $$ if (i > 0) [ FD ]
Line_8 $$ StringBuilder s = new StringBuilder()-->Line_77 $$ s.append(']')[ FD ]
Line_12 $$ for (int i = 0; i < array.length; i++) -->Line_61 $$ if (i > 0) [ FD ]
