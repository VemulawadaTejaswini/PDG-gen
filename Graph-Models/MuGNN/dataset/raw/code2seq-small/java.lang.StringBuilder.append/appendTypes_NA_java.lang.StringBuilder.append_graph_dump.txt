Line_2 $$ private void appendTypes(StringBuilder sb, Class<?>[] types, boolean includeArgs, boolean useLongReturnAndArgumentTypeName) -->Line_7 $$ sb.append(",")[ FD ]
Line_2 $$ private void appendTypes(StringBuilder sb, Class<?>[] types, boolean includeArgs, boolean useLongReturnAndArgumentTypeName) -->Line_12 $$ sb.append("..")[ FD ]
Line_3 $$ if (includeArgs) -->Line_11 $$ if (types.length != 0) [ CD ]
Line_2 $$ private void appendTypes(StringBuilder sb, Class<?>[] types, boolean includeArgs, boolean useLongReturnAndArgumentTypeName) -->Line_3 $$ if (includeArgs) [ CD ]
Line_6 $$ if (i < size - 1) -->Line_7 $$ sb.append(",")[ CD ]
Line_2 $$ private void appendTypes(StringBuilder sb, Class<?>[] types, boolean includeArgs, boolean useLongReturnAndArgumentTypeName) -->Line_5 $$ appendType(sb, types[i], useLongReturnAndArgumentTypeName)[ FD ]
Line_3 $$ if (includeArgs) -->Line_4 $$ for (int size = types.length, i = 0; i < size; i++) [ CD ]
Line_4 $$ for (int size = types.length, i = 0; i < size; i++) -->Line_5 $$ appendType(sb, types[i], useLongReturnAndArgumentTypeName)[ CD ]
Line_11 $$ if (types.length != 0) -->Line_12 $$ sb.append("..")[ CD ]
Line_4 $$ for (int size = types.length, i = 0; i < size; i++) -->Line_6 $$ if (i < size - 1) [ FD ]
Line_4 $$ for (int size = types.length, i = 0; i < size; i++) -->Line_6 $$ if (i < size - 1) [ CD ]
