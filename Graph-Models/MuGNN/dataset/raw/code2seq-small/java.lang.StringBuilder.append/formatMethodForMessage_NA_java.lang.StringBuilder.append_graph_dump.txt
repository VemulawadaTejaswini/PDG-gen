Line_3 $$ StringBuilder sb = new StringBuilder(name)-->Line_11 $$ sb.append(formatClassNameForMessage(typeDescriptor.getType()))[ FD ]
Line_2 $$ public static String formatMethodForMessage(String name, List<TypeDescriptor> argumentTypes) -->Line_5 $$ for (int i = 0; i < argumentTypes.size(); i++) [ CD ]
Line_5 $$ for (int i = 0; i < argumentTypes.size(); i++) -->Line_9 $$ TypeDescriptor typeDescriptor = argumentTypes.get(i)[ CD ]
Line_2 $$ public static String formatMethodForMessage(String name, List<TypeDescriptor> argumentTypes) -->Line_9 $$ TypeDescriptor typeDescriptor = argumentTypes.get(i)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder(name)-->Line_7 $$ sb.append(",")[ FD ]
Line_6 $$ if (i > 0) -->Line_7 $$ sb.append(",")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder(name)-->Line_4 $$ sb.append("(")[ FD ]
Line_2 $$ public static String formatMethodForMessage(String name, List<TypeDescriptor> argumentTypes) -->Line_4 $$ sb.append("(")[ CD ]
Line_5 $$ for (int i = 0; i < argumentTypes.size(); i++) -->Line_9 $$ TypeDescriptor typeDescriptor = argumentTypes.get(i)[ FD ]
Line_10 $$ if (typeDescriptor != null) -->Line_11 $$ sb.append(formatClassNameForMessage(typeDescriptor.getType()))[ CD ]
Line_10 $$ if (typeDescriptor != null) -->Line_13 $$ sb.append(formatClassNameForMessage(null))[ CD ]
Line_2 $$ public static String formatMethodForMessage(String name, List<TypeDescriptor> argumentTypes) -->Line_16 $$ sb.append(")")[ CD ]
Line_2 $$ public static String formatMethodForMessage(String name, List<TypeDescriptor> argumentTypes) -->Line_5 $$ for (int i = 0; i < argumentTypes.size(); i++) [ FD ]
Line_5 $$ for (int i = 0; i < argumentTypes.size(); i++) -->Line_6 $$ if (i > 0) [ FD ]
Line_2 $$ public static String formatMethodForMessage(String name, List<TypeDescriptor> argumentTypes) -->Line_3 $$ StringBuilder sb = new StringBuilder(name)[ CD ]
Line_5 $$ for (int i = 0; i < argumentTypes.size(); i++) -->Line_6 $$ if (i > 0) [ CD ]
Line_2 $$ public static String formatMethodForMessage(String name, List<TypeDescriptor> argumentTypes) -->Line_17 $$ return sb.toString()[ CD ]
Line_9 $$ TypeDescriptor typeDescriptor = argumentTypes.get(i)-->Line_10 $$ if (typeDescriptor != null) [ FD ]
Line_9 $$ TypeDescriptor typeDescriptor = argumentTypes.get(i)-->Line_11 $$ sb.append(formatClassNameForMessage(typeDescriptor.getType()))[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder(name)-->Line_13 $$ sb.append(formatClassNameForMessage(null))[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder(name)-->Line_17 $$ return sb.toString()[ FD ]
Line_5 $$ for (int i = 0; i < argumentTypes.size(); i++) -->Line_10 $$ if (typeDescriptor != null) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder(name)-->Line_16 $$ sb.append(")")[ FD ]
