Line_6 $$ for (int i = localTags.length - 1; i > -1; i--) -->Line_7 $$ PsiDocTagValue valueElement = localTags[i].getValueElement()[ CD ]
Line_2 $$ private void generateThrowsSection(StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_76 $$ buffer.append("</DD></DL></DD>")[ FD ]
Line_9 $$ for (Iterator<PsiClassType> iterator = declaredThrows.iterator(); iterator.hasNext(); ) -->Line_11 $$ if (Comparing.strEqual(valueElement.getText(), classType.getClassName()) || Comparing.strEqual(valueElement.getText(), classType.getCanonicalText())) [ CD ]
Line_11 $$ if (Comparing.strEqual(valueElement.getText(), classType.getClassName()) || Comparing.strEqual(valueElement.getText(), classType.getCanonicalText())) -->Line_12 $$ iterator.remove()[ CD ]
Line_4 $$ LinkedList<Pair<PsiDocTag, InheritDocProvider<PsiDocTag>>> collectedTags = new LinkedList<Pair<PsiDocTag, InheritDocProvider<PsiDocTag>>>()-->Line_51 $$ collectedTags.addLast(Pair.create(tag, ourEmptyProvider))[ FD ]
Line_2 $$ private void generateThrowsSection(StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_3 $$ final PsiDocTag[] localTags = getThrowsTags(comment)[ CD ]
Line_7 $$ PsiDocTagValue valueElement = localTags[i].getValueElement()-->Line_11 $$ if (Comparing.strEqual(valueElement.getText(), classType.getClassName()) || Comparing.strEqual(valueElement.getText(), classType.getCanonicalText())) [ FD ]
Line_9 $$ for (Iterator<PsiClassType> iterator = declaredThrows.iterator(); iterator.hasNext(); ) -->Line_12 $$ iterator.remove()[ FD ]
Line_2 $$ private void generateThrowsSection(StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_58 $$ if (!collectedTags.isEmpty()) [ CD ]
Line_2 $$ private void generateThrowsSection(StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_49 $$ final PsiElementFactory elementFactory = JavaPsiFacade.getInstance(method.getProject()).getElementFactory()[ FD ]
Line_2 $$ private void generateThrowsSection(StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_69 $$ generateLink(buffer, refText, null, method, false)[ FD ]
Line_58 $$ if (!collectedTags.isEmpty()) -->Line_76 $$ buffer.append("</DD></DL></DD>")[ CD ]
Line_58 $$ if (!collectedTags.isEmpty()) -->Line_59 $$ buffer.append("<DD><DL>")[ CD ]
Line_58 $$ if (!collectedTags.isEmpty()) -->Line_60 $$ buffer.append("<DT><b>").append(CodeInsightBundle.message("javadoc.throws")).append("</b>")[ CD ]
Line_2 $$ private void generateThrowsSection(StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_5 $$ final List<PsiClassType> declaredThrows = new ArrayList<PsiClassType>(Arrays.asList(method.getThrowsList().getReferencedTypes()))[ FD ]
Line_2 $$ private void generateThrowsSection(StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_6 $$ for (int i = localTags.length - 1; i > -1; i--) [ CD ]
Line_9 $$ for (Iterator<PsiClassType> iterator = declaredThrows.iterator(); iterator.hasNext(); ) -->Line_10 $$ PsiClassType classType = iterator.next()[ FD ]
Line_2 $$ private void generateThrowsSection(StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_4 $$ LinkedList<Pair<PsiDocTag, InheritDocProvider<PsiDocTag>>> collectedTags = new LinkedList<Pair<PsiDocTag, InheritDocProvider<PsiDocTag>>>()[ CD ]
Line_2 $$ private void generateThrowsSection(StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_22 $$ return method.getContainingClass()[ FD ]
Line_42 $$ if (parmTag == null) -->Line_43 $$ parmTag = findInheritDocTag(method, exceptionLocator(paramName))[ CD ]
Line_5 $$ final List<PsiClassType> declaredThrows = new ArrayList<PsiClassType>(Arrays.asList(method.getThrowsList().getReferencedTypes()))-->Line_9 $$ for (Iterator<PsiClassType> iterator = declaredThrows.iterator(); iterator.hasNext(); ) [ FD ]
Line_29 $$ if (trouser != null) -->Line_45 $$ if (parmTag != null) [ CD ]
Line_29 $$ if (trouser != null) -->Line_30 $$ String paramName = trouser.getCanonicalText()[ CD ]
Line_34 $$ if (value != null) -->Line_36 $$ if (tagName != null && areWeakEqual(tagName, paramName)) [ CD ]
Line_2 $$ private void generateThrowsSection(StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_16 $$ final Pair<PsiDocTag, InheritDocProvider<PsiDocTag>> tag = findInheritDocTag(method, exceptionLocator(valueElement.getText()))[ FD ]
Line_71 $$ if (!rest.isEmpty() || elements.length > 1)-->Line_72 $$ buffer.append(" - ")[ CD ]
Line_7 $$ PsiDocTagValue valueElement = localTags[i].getValueElement()-->Line_16 $$ final Pair<PsiDocTag, InheritDocProvider<PsiDocTag>> tag = findInheritDocTag(method, exceptionLocator(valueElement.getText()))[ FD ]
Line_29 $$ if (trouser != null) -->Line_42 $$ if (parmTag == null) [ CD ]
Line_2 $$ private void generateThrowsSection(StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_73 $$ buffer.append(rest)[ FD ]
Line_2 $$ private void generateThrowsSection(StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_43 $$ parmTag = findInheritDocTag(method, exceptionLocator(paramName))[ FD ]
Line_17 $$ collectedTags.addFirst(new Pair<PsiDocTag, InheritDocProvider<PsiDocTag>>(localTags[i], new InheritDocProvider<PsiDocTag>() -->Line_19 $$ return tag[ CD ]
Line_2 $$ private void generateThrowsSection(StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_74 $$ generateValue(buffer, elements, 1, mapProvider(tag.second, true))[ FD ]
Line_4 $$ LinkedList<Pair<PsiDocTag, InheritDocProvider<PsiDocTag>>> collectedTags = new LinkedList<Pair<PsiDocTag, InheritDocProvider<PsiDocTag>>>()-->Line_58 $$ if (!collectedTags.isEmpty()) [ FD ]
Line_4 $$ LinkedList<Pair<PsiDocTag, InheritDocProvider<PsiDocTag>>> collectedTags = new LinkedList<Pair<PsiDocTag, InheritDocProvider<PsiDocTag>>>()-->Line_17 $$ collectedTags.addFirst(new Pair<PsiDocTag, InheritDocProvider<PsiDocTag>>(localTags[i], new InheritDocProvider<PsiDocTag>() [ FD ]
Line_2 $$ private void generateThrowsSection(StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_3 $$ final PsiDocTag[] localTags = getThrowsTags(comment)[ FD ]
Line_10 $$ PsiClassType classType = iterator.next()-->Line_11 $$ if (Comparing.strEqual(valueElement.getText(), classType.getClassName()) || Comparing.strEqual(valueElement.getText(), classType.getCanonicalText())) [ FD ]
Line_2 $$ private void generateThrowsSection(StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_65 $$ buffer.append("<DD>")[ FD ]
Line_34 $$ if (value != null) -->Line_35 $$ String tagName = value.getText()[ CD ]
Line_7 $$ PsiDocTagValue valueElement = localTags[i].getValueElement()-->Line_8 $$ if (valueElement != null) [ FD ]
Line_2 $$ private void generateThrowsSection(StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_27 $$ PsiClassType[] trousers = declaredThrows.toArray(new PsiClassType[declaredThrows.size()])[ CD ]
Line_2 $$ private void generateThrowsSection(StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_59 $$ buffer.append("<DD><DL>")[ FD ]
Line_2 $$ private void generateThrowsSection(StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_5 $$ final List<PsiClassType> declaredThrows = new ArrayList<PsiClassType>(Arrays.asList(method.getThrowsList().getReferencedTypes()))[ CD ]
Line_4 $$ LinkedList<Pair<PsiDocTag, InheritDocProvider<PsiDocTag>>> collectedTags = new LinkedList<Pair<PsiDocTag, InheritDocProvider<PsiDocTag>>>()-->Line_46 $$ collectedTags.addLast(parmTag)[ FD ]
Line_2 $$ private void generateThrowsSection(StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_60 $$ buffer.append("<DT><b>").append(CodeInsightBundle.message("javadoc.throws")).append("</b>")[ FD ]
Line_17 $$ collectedTags.addFirst(new Pair<PsiDocTag, InheritDocProvider<PsiDocTag>>(localTags[i], new InheritDocProvider<PsiDocTag>() -->Line_22 $$ return method.getContainingClass()[ CD ]
Line_8 $$ if (valueElement != null) -->Line_9 $$ for (Iterator<PsiClassType> iterator = declaredThrows.iterator(); iterator.hasNext(); ) [ CD ]
Line_45 $$ if (parmTag != null) -->Line_46 $$ collectedTags.addLast(parmTag)[ CD ]
Line_6 $$ for (int i = localTags.length - 1; i > -1; i--) -->Line_8 $$ if (valueElement != null) [ CD ]
Line_5 $$ final List<PsiClassType> declaredThrows = new ArrayList<PsiClassType>(Arrays.asList(method.getThrowsList().getReferencedTypes()))-->Line_27 $$ PsiClassType[] trousers = declaredThrows.toArray(new PsiClassType[declaredThrows.size()])[ FD ]
Line_2 $$ private void generateThrowsSection(StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_72 $$ buffer.append(" - ")[ FD ]
Line_8 $$ if (valueElement != null) -->Line_17 $$ collectedTags.addFirst(new Pair<PsiDocTag, InheritDocProvider<PsiDocTag>>(localTags[i], new InheritDocProvider<PsiDocTag>() [ CD ]
Line_9 $$ for (Iterator<PsiClassType> iterator = declaredThrows.iterator(); iterator.hasNext(); ) -->Line_10 $$ PsiClassType classType = iterator.next()[ CD ]
Line_8 $$ if (valueElement != null) -->Line_16 $$ final Pair<PsiDocTag, InheritDocProvider<PsiDocTag>> tag = findInheritDocTag(method, exceptionLocator(valueElement.getText()))[ CD ]
Line_36 $$ if (tagName != null && areWeakEqual(tagName, paramName)) -->Line_37 $$ parmTag = Pair.create(localTag, ourEmptyProvider)[ CD ]
