Line_3 $$ StringBuilder code = new StringBuilder(64 * paramTypes.length)-->Line_8 $$ code.append("            \n")[ FD ]
Line_2 $$ private static String generateArguments(Class<?>[] paramTypes, List<ColumnIdentifier> argNames) -->Line_3 $$ StringBuilder code = new StringBuilder(64 * paramTypes.length)[ CD ]
Line_4 $$ for (int i = 0; i < paramTypes.length; i++) -->Line_5 $$ if (i > 0)[ CD ]
Line_2 $$ private static String generateArguments(Class<?>[] paramTypes, List<ColumnIdentifier> argNames) -->Line_4 $$ for (int i = 0; i < paramTypes.length; i++) [ CD ]
Line_3 $$ StringBuilder code = new StringBuilder(64 * paramTypes.length)-->Line_6 $$ code.append(",\n")[ FD ]
Line_3 $$ StringBuilder code = new StringBuilder(64 * paramTypes.length)-->Line_13 $$ return code.toString()[ FD ]
Line_7 $$ if (logger.isTraceEnabled())-->Line_8 $$ code.append("            \n")[ CD ]
Line_2 $$ private static String generateArguments(Class<?>[] paramTypes, List<ColumnIdentifier> argNames) -->Line_13 $$ return code.toString()[ CD ]
Line_4 $$ for (int i = 0; i < paramTypes.length; i++) -->Line_5 $$ if (i > 0)[ FD ]
Line_4 $$ for (int i = 0; i < paramTypes.length; i++) -->Line_9 $$ code.append("            (").append(javaSourceName(paramTypes[i])).append(") ").append(composeMethod(paramTypes[i])).append("(protocolVersion, ").append(i).append(", params.get(").append(i).append("))")[ FD ]
Line_5 $$ if (i > 0)-->Line_6 $$ code.append(",\n")[ CD ]
Line_4 $$ for (int i = 0; i < paramTypes.length; i++) -->Line_7 $$ if (logger.isTraceEnabled())[ CD ]
Line_4 $$ for (int i = 0; i < paramTypes.length; i++) -->Line_9 $$ code.append("            (").append(javaSourceName(paramTypes[i])).append(") ").append(composeMethod(paramTypes[i])).append("(protocolVersion, ").append(i).append(", params.get(").append(i).append("))")[ CD ]
Line_3 $$ StringBuilder code = new StringBuilder(64 * paramTypes.length)-->Line_9 $$ code.append("            (").append(javaSourceName(paramTypes[i])).append(") ").append(composeMethod(paramTypes[i])).append("(protocolVersion, ").append(i).append(", params.get(").append(i).append("))")[ FD ]
