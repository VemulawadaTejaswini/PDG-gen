Line_2 $$ private void buildDelegate() -->Line_23 $$ if (!typeParams.isEmpty()) [ CD ]
Line_2 $$ private void buildDelegate() -->Line_20 $$ fieldBuffer.append(' ')[ CD ]
Line_6 $$ final StringBuilder fieldBuffer = new StringBuilder()-->Line_30 $$ fieldBuffer.append('(')[ FD ]
Line_6 $$ final StringBuilder fieldBuffer = new StringBuilder()-->Line_24 $$ fieldBuffer.append('<')[ FD ]
Line_6 $$ final StringBuilder fieldBuffer = new StringBuilder()-->Line_36 $$ final String fieldString = fieldBuffer.toString()[ FD ]
Line_6 $$ final StringBuilder fieldBuffer = new StringBuilder()-->Line_14 $$ fieldBuffer.append('<')[ FD ]
Line_4 $$ final PsiElementFactory factory = JavaPsiFacade.getInstance(manager.getProject()).getElementFactory()-->Line_37 $$ final PsiField field = factory.createFieldFromText(fieldString, sourceClass)[ FD ]
Line_2 $$ private void buildDelegate() -->Line_21 $$ fieldBuffer.append(delegateFieldName)[ CD ]
Line_2 $$ private void buildDelegate() -->Line_34 $$ fieldBuffer.append(");")[ CD ]
Line_2 $$ private void buildDelegate() -->Line_4 $$ final PsiElementFactory factory = JavaPsiFacade.getInstance(manager.getProject()).getElementFactory()[ CD ]
Line_15 $$ for (PsiTypeParameter typeParameter : typeParams) -->Line_26 $$ fieldBuffer.append(typeParameter.getName())[ FD ]
Line_3 $$ final PsiManager manager = sourceClass.getManager()-->Line_4 $$ final PsiElementFactory factory = JavaPsiFacade.getInstance(manager.getProject()).getElementFactory()[ FD ]
Line_6 $$ final StringBuilder fieldBuffer = new StringBuilder()-->Line_16 $$ fieldBuffer.append(typeParameter.getName())[ FD ]
Line_31 $$ if (requiresBackpointer) -->Line_32 $$ fieldBuffer.append("this")[ CD ]
Line_2 $$ private void buildDelegate() -->Line_31 $$ if (requiresBackpointer) [ CD ]
Line_6 $$ final StringBuilder fieldBuffer = new StringBuilder()-->Line_10 $$ fieldBuffer.append("final ")[ FD ]
Line_6 $$ final StringBuilder fieldBuffer = new StringBuilder()-->Line_22 $$ fieldBuffer.append(" = new ").append(fullyQualifiedName)[ FD ]
Line_6 $$ final StringBuilder fieldBuffer = new StringBuilder()-->Line_9 $$ fieldBuffer.append(delegateVisibility).append(' ')[ FD ]
Line_6 $$ final StringBuilder fieldBuffer = new StringBuilder()-->Line_12 $$ fieldBuffer.append(fullyQualifiedName)[ FD ]
Line_11 $$ final String fullyQualifiedName = getQualifiedName()-->Line_12 $$ fieldBuffer.append(fullyQualifiedName)[ FD ]
Line_2 $$ private void buildDelegate() -->Line_13 $$ if (!typeParams.isEmpty()) [ CD ]
Line_7 $$ final String delegateVisibility = calculateDelegateVisibility()-->Line_9 $$ fieldBuffer.append(delegateVisibility).append(' ')[ FD ]
Line_36 $$ final String fieldString = fieldBuffer.toString()-->Line_37 $$ final PsiField field = factory.createFieldFromText(fieldString, sourceClass)[ FD ]
Line_6 $$ final StringBuilder fieldBuffer = new StringBuilder()-->Line_18 $$ fieldBuffer.append('>')[ FD ]
Line_11 $$ final String fullyQualifiedName = getQualifiedName()-->Line_22 $$ fieldBuffer.append(" = new ").append(fullyQualifiedName)[ FD ]
Line_2 $$ private void buildDelegate() -->Line_30 $$ fieldBuffer.append('(')[ CD ]
Line_13 $$ if (!typeParams.isEmpty()) -->Line_18 $$ fieldBuffer.append('>')[ CD ]
Line_2 $$ private void buildDelegate() -->Line_8 $$ if (delegateVisibility.length() > 0)[ CD ]
Line_2 $$ private void buildDelegate() -->Line_7 $$ final String delegateVisibility = calculateDelegateVisibility()[ CD ]
Line_6 $$ final StringBuilder fieldBuffer = new StringBuilder()-->Line_34 $$ fieldBuffer.append(");")[ FD ]
Line_2 $$ private void buildDelegate() -->Line_11 $$ final String fullyQualifiedName = getQualifiedName()[ CD ]
Line_2 $$ private void buildDelegate() -->Line_5 $$ final CodeStyleManager codeStyleManager = CodeStyleManager.getInstance(manager.getProject())[ CD ]
Line_8 $$ if (delegateVisibility.length() > 0)-->Line_9 $$ fieldBuffer.append(delegateVisibility).append(' ')[ CD ]
Line_2 $$ private void buildDelegate() -->Line_12 $$ fieldBuffer.append(fullyQualifiedName)[ CD ]
Line_2 $$ private void buildDelegate() -->Line_3 $$ final PsiManager manager = sourceClass.getManager()[ CD ]
Line_37 $$ final PsiField field = factory.createFieldFromText(fieldString, sourceClass)-->Line_38 $$ final PsiElement newField = sourceClass.add(field)[ FD ]
Line_2 $$ private void buildDelegate() -->Line_6 $$ final StringBuilder fieldBuffer = new StringBuilder()[ CD ]
Line_7 $$ final String delegateVisibility = calculateDelegateVisibility()-->Line_8 $$ if (delegateVisibility.length() > 0)[ FD ]
Line_6 $$ final StringBuilder fieldBuffer = new StringBuilder()-->Line_20 $$ fieldBuffer.append(' ')[ FD ]
Line_2 $$ private void buildDelegate() -->Line_22 $$ fieldBuffer.append(" = new ").append(fullyQualifiedName)[ CD ]
Line_6 $$ final StringBuilder fieldBuffer = new StringBuilder()-->Line_32 $$ fieldBuffer.append("this")[ FD ]
Line_5 $$ final CodeStyleManager codeStyleManager = CodeStyleManager.getInstance(manager.getProject())-->Line_39 $$ codeStyleManager.reformat(JavaCodeStyleManager.getInstance(myProject).shortenClassReferences(newField))[ FD ]
Line_23 $$ if (!typeParams.isEmpty()) -->Line_24 $$ fieldBuffer.append('<')[ CD ]
Line_2 $$ private void buildDelegate() -->Line_10 $$ fieldBuffer.append("final ")[ CD ]
Line_6 $$ final StringBuilder fieldBuffer = new StringBuilder()-->Line_28 $$ fieldBuffer.append('>')[ FD ]
Line_6 $$ final StringBuilder fieldBuffer = new StringBuilder()-->Line_26 $$ fieldBuffer.append(typeParameter.getName())[ FD ]
Line_38 $$ final PsiElement newField = sourceClass.add(field)-->Line_39 $$ codeStyleManager.reformat(JavaCodeStyleManager.getInstance(myProject).shortenClassReferences(newField))[ FD ]
Line_23 $$ if (!typeParams.isEmpty()) -->Line_28 $$ fieldBuffer.append('>')[ CD ]
Line_3 $$ final PsiManager manager = sourceClass.getManager()-->Line_5 $$ final CodeStyleManager codeStyleManager = CodeStyleManager.getInstance(manager.getProject())[ FD ]
Line_6 $$ final StringBuilder fieldBuffer = new StringBuilder()-->Line_21 $$ fieldBuffer.append(delegateFieldName)[ FD ]
Line_13 $$ if (!typeParams.isEmpty()) -->Line_14 $$ fieldBuffer.append('<')[ CD ]
Line_15 $$ for (PsiTypeParameter typeParameter : typeParams) -->Line_16 $$ fieldBuffer.append(typeParameter.getName())[ FD ]
