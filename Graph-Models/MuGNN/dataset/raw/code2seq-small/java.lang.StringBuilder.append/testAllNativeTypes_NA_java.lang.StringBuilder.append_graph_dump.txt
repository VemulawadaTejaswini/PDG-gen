Line_8 $$ if (sig.length() > 0)-->Line_9 $$ sig.append(',')[ CD ]
Line_3 $$ StringBuilder sig = new StringBuilder()-->Line_8 $$ if (sig.length() > 0)[ FD ]
Line_2 $$ public void testAllNativeTypes() throws Throwable -->Line_4 $$ StringBuilder args = new StringBuilder()[ CD ]
Line_4 $$ StringBuilder args = new StringBuilder()-->Line_12 $$ args.append(',')[ FD ]
Line_3 $$ StringBuilder sig = new StringBuilder()-->Line_15 $$ createFunction(KEYSPACE, sig.toString(), "CREATE OR REPLACE FUNCTION %s(" + args + ") " + "RETURNS NULL ON NULL INPUT " + "RETURNS int " + "LANGUAGE JAVA\n" + "AS 'return 0;'")[ FD ]
Line_5 $$ for (CQL3Type.Native type : CQL3Type.Native.values()) -->Line_6 $$ if (type == CQL3Type.Native.EMPTY)[ FD ]
Line_11 $$ if (args.length() > 0)-->Line_12 $$ args.append(',')[ CD ]
Line_5 $$ for (CQL3Type.Native type : CQL3Type.Native.values()) -->Line_13 $$ args.append("arg").append(type.toString()).append(' ').append(type.toString())[ FD ]
Line_4 $$ StringBuilder args = new StringBuilder()-->Line_13 $$ args.append("arg").append(type.toString()).append(' ').append(type.toString())[ FD ]
Line_3 $$ StringBuilder sig = new StringBuilder()-->Line_10 $$ sig.append(type.toString())[ FD ]
Line_3 $$ StringBuilder sig = new StringBuilder()-->Line_9 $$ sig.append(',')[ FD ]
Line_2 $$ public void testAllNativeTypes() throws Throwable -->Line_15 $$ createFunction(KEYSPACE, sig.toString(), "CREATE OR REPLACE FUNCTION %s(" + args + ") " + "RETURNS NULL ON NULL INPUT " + "RETURNS int " + "LANGUAGE JAVA\n" + "AS 'return 0;'")[ CD ]
Line_5 $$ for (CQL3Type.Native type : CQL3Type.Native.values()) -->Line_10 $$ sig.append(type.toString())[ FD ]
Line_5 $$ for (CQL3Type.Native type : CQL3Type.Native.values()) -->Line_17 $$ if (type == CQL3Type.Native.EMPTY)[ FD ]
Line_4 $$ StringBuilder args = new StringBuilder()-->Line_11 $$ if (args.length() > 0)[ FD ]
Line_2 $$ public void testAllNativeTypes() throws Throwable -->Line_3 $$ StringBuilder sig = new StringBuilder()[ CD ]
Line_5 $$ for (CQL3Type.Native type : CQL3Type.Native.values()) -->Line_19 $$ createFunction(KEYSPACE_PER_TEST, type.toString(), "CREATE OR REPLACE FUNCTION %s(val " + type.toString() + ") " + "RETURNS NULL ON NULL INPUT " + "RETURNS int " + "LANGUAGE JAVA\n" + "AS 'return 0;'")[ FD ]
