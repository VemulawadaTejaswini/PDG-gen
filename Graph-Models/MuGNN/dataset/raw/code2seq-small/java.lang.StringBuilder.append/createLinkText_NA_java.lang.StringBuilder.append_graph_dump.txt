Line_4 $$ StringBuilder buffer = new StringBuilder()-->Line_10 $$ collectElementText(buffer, tagElement)[ FD ]
Line_5 $$ for (int j = 0; j < tagElements.length; j++) -->Line_11 $$ if (j < tagElements.length - 1) [ CD ]
Line_4 $$ StringBuilder buffer = new StringBuilder()-->Line_15 $$ return buffer.toString().trim()[ FD ]
Line_2 $$ private static String createLinkText(final PsiElement[] tagElements) -->Line_4 $$ StringBuilder buffer = new StringBuilder()[ CD ]
Line_5 $$ for (int j = 0; j < tagElements.length; j++) -->Line_9 $$ predictOffset = tagElement.getTextOffset() + tagElement.getText().length()[ CD ]
Line_5 $$ for (int j = 0; j < tagElements.length; j++) -->Line_7 $$ if (tagElement.getTextOffset() > predictOffset)[ CD ]
Line_9 $$ predictOffset = tagElement.getTextOffset() + tagElement.getText().length()-->Line_7 $$ if (tagElement.getTextOffset() > predictOffset)[ FD ]
Line_3 $$ int predictOffset = tagElements.length > 0 ? tagElements[0].getTextOffset() + tagElements[0].getText().length() : 0-->Line_7 $$ if (tagElement.getTextOffset() > predictOffset)[ FD ]
Line_2 $$ private static String createLinkText(final PsiElement[] tagElements) -->Line_5 $$ for (int j = 0; j < tagElements.length; j++) [ CD ]
Line_2 $$ private static String createLinkText(final PsiElement[] tagElements) -->Line_15 $$ return buffer.toString().trim()[ CD ]
Line_7 $$ if (tagElement.getTextOffset() > predictOffset)-->Line_8 $$ buffer.append(" ")[ CD ]
Line_5 $$ for (int j = 0; j < tagElements.length; j++) -->Line_6 $$ PsiElement tagElement = tagElements[j][ CD ]
Line_6 $$ PsiElement tagElement = tagElements[j]-->Line_10 $$ collectElementText(buffer, tagElement)[ FD ]
Line_5 $$ for (int j = 0; j < tagElements.length; j++) -->Line_10 $$ collectElementText(buffer, tagElement)[ CD ]
Line_11 $$ if (j < tagElements.length - 1) -->Line_12 $$ buffer.append(" ")[ CD ]
Line_4 $$ StringBuilder buffer = new StringBuilder()-->Line_12 $$ buffer.append(" ")[ FD ]
Line_2 $$ private static String createLinkText(final PsiElement[] tagElements) -->Line_3 $$ int predictOffset = tagElements.length > 0 ? tagElements[0].getTextOffset() + tagElements[0].getText().length() : 0[ CD ]
Line_4 $$ StringBuilder buffer = new StringBuilder()-->Line_8 $$ buffer.append(" ")[ FD ]
Line_6 $$ PsiElement tagElement = tagElements[j]-->Line_7 $$ if (tagElement.getTextOffset() > predictOffset)[ FD ]
Line_3 $$ int predictOffset = tagElements.length > 0 ? tagElements[0].getTextOffset() + tagElements[0].getText().length() : 0-->Line_9 $$ predictOffset = tagElement.getTextOffset() + tagElement.getText().length()[ FD ]
Line_6 $$ PsiElement tagElement = tagElements[j]-->Line_9 $$ predictOffset = tagElement.getTextOffset() + tagElement.getText().length()[ FD ]
Line_5 $$ for (int j = 0; j < tagElements.length; j++) -->Line_11 $$ if (j < tagElements.length - 1) [ FD ]
