Line_7 $$ final String shortClassName = getShortClassName(aClass, new StringBuilder()).toString()-->Line_8 $$ if (isReferenceToTargetClass(shortClassName, aClass, element)) [ FD ]
Line_2 $$ private static StringBuilder buildNewText(PsiElement element, Collection<PsiJavaCodeReferenceElement> references, PsiClass aClass, StringBuilder out) -->Line_17 $$ if (children.length == 0) [ CD ]
Line_6 $$ if (references.contains(element)) -->Line_8 $$ if (isReferenceToTargetClass(shortClassName, aClass, element)) [ CD ]
Line_2 $$ private static StringBuilder buildNewText(PsiElement element, Collection<PsiJavaCodeReferenceElement> references, PsiClass aClass, StringBuilder out) -->Line_16 $$ final PsiElement[] children = element.getChildren()[ FD ]
Line_7 $$ final String shortClassName = getShortClassName(aClass, new StringBuilder()).toString()-->Line_9 $$ out.append(shortClassName)[ FD ]
Line_17 $$ if (children.length == 0) -->Line_18 $$ return out.append(element.getText())[ CD ]
Line_2 $$ private static StringBuilder buildNewText(PsiElement element, Collection<PsiJavaCodeReferenceElement> references, PsiClass aClass, StringBuilder out) -->Line_16 $$ final PsiElement[] children = element.getChildren()[ CD ]
Line_2 $$ private static StringBuilder buildNewText(PsiElement element, Collection<PsiJavaCodeReferenceElement> references, PsiClass aClass, StringBuilder out) -->Line_13 $$ out.append('.')[ FD ]
Line_6 $$ if (references.contains(element)) -->Line_14 $$ return out.append(element.getText())[ CD ]
Line_2 $$ private static StringBuilder buildNewText(PsiElement element, Collection<PsiJavaCodeReferenceElement> references, PsiClass aClass, StringBuilder out) -->Line_6 $$ if (references.contains(element)) [ FD ]
Line_20 $$ for (PsiElement child : children) -->Line_21 $$ buildNewText(child, references, aClass, out)[ FD ]
Line_2 $$ private static StringBuilder buildNewText(PsiElement element, Collection<PsiJavaCodeReferenceElement> references, PsiClass aClass, StringBuilder out) -->Line_9 $$ out.append(shortClassName)[ FD ]
Line_8 $$ if (isReferenceToTargetClass(shortClassName, aClass, element)) -->Line_11 $$ out.append(aClass.getQualifiedName())[ CD ]
Line_2 $$ private static StringBuilder buildNewText(PsiElement element, Collection<PsiJavaCodeReferenceElement> references, PsiClass aClass, StringBuilder out) -->Line_6 $$ if (references.contains(element)) [ CD ]
Line_3 $$ if (element == null) -->Line_4 $$ return out[ CD ]
Line_2 $$ private static StringBuilder buildNewText(PsiElement element, Collection<PsiJavaCodeReferenceElement> references, PsiClass aClass, StringBuilder out) -->Line_7 $$ final String shortClassName = getShortClassName(aClass, new StringBuilder()).toString()[ FD ]
Line_2 $$ private static StringBuilder buildNewText(PsiElement element, Collection<PsiJavaCodeReferenceElement> references, PsiClass aClass, StringBuilder out) -->Line_8 $$ if (isReferenceToTargetClass(shortClassName, aClass, element)) [ FD ]
Line_2 $$ private static StringBuilder buildNewText(PsiElement element, Collection<PsiJavaCodeReferenceElement> references, PsiClass aClass, StringBuilder out) -->Line_3 $$ if (element == null) [ FD ]
Line_2 $$ private static StringBuilder buildNewText(PsiElement element, Collection<PsiJavaCodeReferenceElement> references, PsiClass aClass, StringBuilder out) -->Line_18 $$ return out.append(element.getText())[ FD ]
Line_2 $$ private static StringBuilder buildNewText(PsiElement element, Collection<PsiJavaCodeReferenceElement> references, PsiClass aClass, StringBuilder out) -->Line_14 $$ return out.append(element.getText())[ FD ]
Line_2 $$ private static StringBuilder buildNewText(PsiElement element, Collection<PsiJavaCodeReferenceElement> references, PsiClass aClass, StringBuilder out) -->Line_23 $$ return out[ CD ]
Line_6 $$ if (references.contains(element)) -->Line_13 $$ out.append('.')[ CD ]
Line_6 $$ if (references.contains(element)) -->Line_7 $$ final String shortClassName = getShortClassName(aClass, new StringBuilder()).toString()[ CD ]
Line_2 $$ private static StringBuilder buildNewText(PsiElement element, Collection<PsiJavaCodeReferenceElement> references, PsiClass aClass, StringBuilder out) -->Line_21 $$ buildNewText(child, references, aClass, out)[ FD ]
Line_2 $$ private static StringBuilder buildNewText(PsiElement element, Collection<PsiJavaCodeReferenceElement> references, PsiClass aClass, StringBuilder out) -->Line_3 $$ if (element == null) [ CD ]
Line_8 $$ if (isReferenceToTargetClass(shortClassName, aClass, element)) -->Line_9 $$ out.append(shortClassName)[ CD ]
Line_2 $$ private static StringBuilder buildNewText(PsiElement element, Collection<PsiJavaCodeReferenceElement> references, PsiClass aClass, StringBuilder out) -->Line_11 $$ out.append(aClass.getQualifiedName())[ FD ]
