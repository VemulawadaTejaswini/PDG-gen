Line_6 $$ if (parent instanceof PyFromImportStatement) -->Line_9 $$ sb.append(source.getVisibleName()).append(".").append(name)[ CD ]
Line_2 $$ public static String getQualifiedName(@NotNull String name, @Nullable QualifiedName importPath, @Nullable PyImportElement source) -->Line_15 $$ sb.append(name)[ FD ]
Line_2 $$ public static String getQualifiedName(@NotNull String name, @Nullable QualifiedName importPath, @Nullable PyImportElement source) -->Line_7 $$ sb.append(name)[ FD ]
Line_2 $$ public static String getQualifiedName(@NotNull String name, @Nullable QualifiedName importPath, @Nullable PyImportElement source) -->Line_4 $$ if (source != null) [ FD ]
Line_2 $$ public static String getQualifiedName(@NotNull String name, @Nullable QualifiedName importPath, @Nullable PyImportElement source) -->Line_12 $$ if (importPath != null && importPath.getComponentCount() > 0) [ FD ]
Line_12 $$ if (importPath != null && importPath.getComponentCount() > 0) -->Line_13 $$ sb.append(importPath).append(".")[ CD ]
Line_3 $$ final StringBuilder sb = new StringBuilder()-->Line_9 $$ sb.append(source.getVisibleName()).append(".").append(name)[ FD ]
Line_4 $$ if (source != null) -->Line_15 $$ sb.append(name)[ CD ]
Line_3 $$ final StringBuilder sb = new StringBuilder()-->Line_13 $$ sb.append(importPath).append(".")[ FD ]
Line_4 $$ if (source != null) -->Line_6 $$ if (parent instanceof PyFromImportStatement) [ CD ]
Line_4 $$ if (source != null) -->Line_12 $$ if (importPath != null && importPath.getComponentCount() > 0) [ CD ]
Line_2 $$ public static String getQualifiedName(@NotNull String name, @Nullable QualifiedName importPath, @Nullable PyImportElement source) -->Line_4 $$ if (source != null) [ CD ]
Line_2 $$ public static String getQualifiedName(@NotNull String name, @Nullable QualifiedName importPath, @Nullable PyImportElement source) -->Line_17 $$ return sb.toString()[ CD ]
Line_2 $$ public static String getQualifiedName(@NotNull String name, @Nullable QualifiedName importPath, @Nullable PyImportElement source) -->Line_13 $$ sb.append(importPath).append(".")[ FD ]
Line_2 $$ public static String getQualifiedName(@NotNull String name, @Nullable QualifiedName importPath, @Nullable PyImportElement source) -->Line_3 $$ final StringBuilder sb = new StringBuilder()[ CD ]
Line_3 $$ final StringBuilder sb = new StringBuilder()-->Line_15 $$ sb.append(name)[ FD ]
Line_2 $$ public static String getQualifiedName(@NotNull String name, @Nullable QualifiedName importPath, @Nullable PyImportElement source) -->Line_9 $$ sb.append(source.getVisibleName()).append(".").append(name)[ FD ]
Line_3 $$ final StringBuilder sb = new StringBuilder()-->Line_7 $$ sb.append(name)[ FD ]
Line_5 $$ final PsiElement parent = source.getParent()-->Line_6 $$ if (parent instanceof PyFromImportStatement) [ FD ]
Line_2 $$ public static String getQualifiedName(@NotNull String name, @Nullable QualifiedName importPath, @Nullable PyImportElement source) -->Line_5 $$ final PsiElement parent = source.getParent()[ FD ]
Line_6 $$ if (parent instanceof PyFromImportStatement) -->Line_7 $$ sb.append(name)[ CD ]
Line_3 $$ final StringBuilder sb = new StringBuilder()-->Line_17 $$ return sb.toString()[ FD ]
Line_4 $$ if (source != null) -->Line_5 $$ final PsiElement parent = source.getParent()[ CD ]
