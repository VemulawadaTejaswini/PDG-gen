Line_2 $$ protected String visitLambdaExpression(LambdaExpression node, Boolean unmangleNames) -->Line_7 $$ builder.append(process(node.getBody(), unmangleNames))[ FD ]
Line_2 $$ protected String visitLambdaExpression(LambdaExpression node, Boolean unmangleNames) -->Line_4 $$ builder.append('(')[ CD ]
Line_2 $$ protected String visitLambdaExpression(LambdaExpression node, Boolean unmangleNames) -->Line_8 $$ return builder.toString()[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_7 $$ builder.append(process(node.getBody(), unmangleNames))[ FD ]
Line_2 $$ protected String visitLambdaExpression(LambdaExpression node, Boolean unmangleNames) -->Line_6 $$ builder.append(") -> ")[ CD ]
Line_2 $$ protected String visitLambdaExpression(LambdaExpression node, Boolean unmangleNames) -->Line_5 $$ Joiner.on(", ").appendTo(builder, node.getArguments())[ CD ]
Line_2 $$ protected String visitLambdaExpression(LambdaExpression node, Boolean unmangleNames) -->Line_3 $$ StringBuilder builder = new StringBuilder()[ CD ]
Line_2 $$ protected String visitLambdaExpression(LambdaExpression node, Boolean unmangleNames) -->Line_7 $$ builder.append(process(node.getBody(), unmangleNames))[ CD ]
Line_2 $$ protected String visitLambdaExpression(LambdaExpression node, Boolean unmangleNames) -->Line_5 $$ Joiner.on(", ").appendTo(builder, node.getArguments())[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_8 $$ return builder.toString()[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_6 $$ builder.append(") -> ")[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_4 $$ builder.append('(')[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_5 $$ Joiner.on(", ").appendTo(builder, node.getArguments())[ FD ]
