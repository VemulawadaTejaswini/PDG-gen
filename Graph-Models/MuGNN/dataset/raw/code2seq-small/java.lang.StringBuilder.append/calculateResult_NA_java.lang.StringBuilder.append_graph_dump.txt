Line_9 $$ for (int i = 1; i < strings.size(); i++) -->Line_10 $$ buf.append(StringUtil.capitalize(strings.get(i).toLowerCase()))[ CD ]
Line_6 $$ if (strings.size() > 0) -->Line_7 $$ final StringBuilder buf = new StringBuilder()[ CD ]
Line_4 $$ if (text != null) -->Line_5 $$ final List<String> strings = StringUtil.split(text, "_")[ CD ]
Line_5 $$ final List<String> strings = StringUtil.split(text, "_")-->Line_6 $$ if (strings.size() > 0) [ FD ]
Line_4 $$ if (text != null) -->Line_6 $$ if (strings.size() > 0) [ CD ]
Line_7 $$ final StringBuilder buf = new StringBuilder()-->Line_8 $$ buf.append(strings.get(0).toLowerCase())[ FD ]
Line_7 $$ final StringBuilder buf = new StringBuilder()-->Line_10 $$ buf.append(StringUtil.capitalize(strings.get(i).toLowerCase()))[ FD ]
Line_7 $$ final StringBuilder buf = new StringBuilder()-->Line_12 $$ return new TextResult(buf.toString())[ FD ]
Line_2 $$ protected Result calculateResult(@NotNull Expression[] params, ExpressionContext context, boolean quick) -->Line_3 $$ final String text = getTextResult(params, context, true)[ FD ]
Line_6 $$ if (strings.size() > 0) -->Line_12 $$ return new TextResult(buf.toString())[ CD ]
Line_2 $$ protected Result calculateResult(@NotNull Expression[] params, ExpressionContext context, boolean quick) -->Line_3 $$ final String text = getTextResult(params, context, true)[ CD ]
Line_2 $$ protected Result calculateResult(@NotNull Expression[] params, ExpressionContext context, boolean quick) -->Line_4 $$ if (text != null) [ CD ]
Line_9 $$ for (int i = 1; i < strings.size(); i++) -->Line_10 $$ buf.append(StringUtil.capitalize(strings.get(i).toLowerCase()))[ FD ]
Line_6 $$ if (strings.size() > 0) -->Line_8 $$ buf.append(strings.get(0).toLowerCase())[ CD ]
Line_3 $$ final String text = getTextResult(params, context, true)-->Line_4 $$ if (text != null) [ FD ]
Line_5 $$ final List<String> strings = StringUtil.split(text, "_")-->Line_9 $$ for (int i = 1; i < strings.size(); i++) [ FD ]
Line_2 $$ protected Result calculateResult(@NotNull Expression[] params, ExpressionContext context, boolean quick) -->Line_15 $$ return null[ CD ]
Line_5 $$ final List<String> strings = StringUtil.split(text, "_")-->Line_10 $$ buf.append(StringUtil.capitalize(strings.get(i).toLowerCase()))[ FD ]
Line_6 $$ if (strings.size() > 0) -->Line_9 $$ for (int i = 1; i < strings.size(); i++) [ CD ]
Line_5 $$ final List<String> strings = StringUtil.split(text, "_")-->Line_8 $$ buf.append(strings.get(0).toLowerCase())[ FD ]
Line_3 $$ final String text = getTextResult(params, context, true)-->Line_5 $$ final List<String> strings = StringUtil.split(text, "_")[ FD ]
