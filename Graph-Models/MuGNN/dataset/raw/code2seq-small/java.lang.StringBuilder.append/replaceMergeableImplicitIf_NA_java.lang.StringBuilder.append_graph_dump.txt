Line_31 $$ final StringBuilder newStatement = new StringBuilder()-->Line_37 $$ newStatement.append(parentThenBranch.getText())[ FD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_27 $$ final PsiStatement parentThenBranch = parentStatement.getThenBranch()[ CD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_6 $$ final PsiExpression childCondition = childStatement.getCondition()[ CD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_38 $$ final PsiStatement childElseBranch = childStatement.getElseBranch()[ CD ]
Line_4 $$ final PsiIfStatement childStatement = (PsiIfStatement) PsiTreeUtil.skipSiblingsForward(parentStatement, PsiWhiteSpace.class)-->Line_38 $$ final PsiStatement childElseBranch = childStatement.getElseBranch()[ FD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_7 $$ if (childCondition == null) [ CD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_11 $$ if (ParenthesesUtils.getPrecedence(childCondition) > ParenthesesUtils.OR_PRECEDENCE) [ CD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_4 $$ final PsiIfStatement childStatement = (PsiIfStatement) PsiTreeUtil.skipSiblingsForward(parentStatement, PsiWhiteSpace.class)[ CD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_28 $$ if (parentThenBranch == null) [ CD ]
Line_3 $$ final PsiIfStatement parentStatement = (PsiIfStatement) token.getParent()-->Line_17 $$ final PsiExpression condition = parentStatement.getCondition()[ FD ]
Line_10 $$ final String childConditionText-->Line_35 $$ newStatement.append(childConditionText)[ FD ]
Line_31 $$ final StringBuilder newStatement = new StringBuilder()-->Line_41 $$ newStatement.append(childElseBranch.getText())[ FD ]
Line_4 $$ final PsiIfStatement childStatement = (PsiIfStatement) PsiTreeUtil.skipSiblingsForward(parentStatement, PsiWhiteSpace.class)-->Line_44 $$ childStatement.delete()[ FD ]
Line_7 $$ if (childCondition == null) -->Line_8 $$ return[ CD ]
Line_28 $$ if (parentThenBranch == null) -->Line_29 $$ return[ CD ]
Line_23 $$ parentConditionText = '(' + condition.getText() + ')'-->Line_25 $$ parentConditionText = condition.getText()[ FD ]
Line_21 $$ final String parentConditionText-->Line_33 $$ newStatement.append(parentConditionText)[ FD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_33 $$ newStatement.append(parentConditionText)[ CD ]
Line_14 $$ childConditionText = childCondition.getText()-->Line_35 $$ newStatement.append(childConditionText)[ FD ]
Line_6 $$ final PsiExpression childCondition = childStatement.getCondition()-->Line_11 $$ if (ParenthesesUtils.getPrecedence(childCondition) > ParenthesesUtils.OR_PRECEDENCE) [ FD ]
Line_11 $$ if (ParenthesesUtils.getPrecedence(childCondition) > ParenthesesUtils.OR_PRECEDENCE) -->Line_14 $$ childConditionText = childCondition.getText()[ CD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_34 $$ newStatement.append("||")[ CD ]
Line_17 $$ final PsiExpression condition = parentStatement.getCondition()-->Line_22 $$ if (ParenthesesUtils.getPrecedence(condition) > ParenthesesUtils.OR_PRECEDENCE) [ FD ]
Line_31 $$ final StringBuilder newStatement = new StringBuilder()-->Line_36 $$ newStatement.append(')')[ FD ]
Line_39 $$ if (childElseBranch != null) -->Line_41 $$ newStatement.append(childElseBranch.getText())[ CD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_44 $$ childStatement.delete()[ CD ]
Line_3 $$ final PsiIfStatement parentStatement = (PsiIfStatement) token.getParent()-->Line_4 $$ final PsiIfStatement childStatement = (PsiIfStatement) PsiTreeUtil.skipSiblingsForward(parentStatement, PsiWhiteSpace.class)[ FD ]
Line_27 $$ final PsiStatement parentThenBranch = parentStatement.getThenBranch()-->Line_37 $$ newStatement.append(parentThenBranch.getText())[ FD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_18 $$ if (condition == null) [ CD ]
Line_38 $$ final PsiStatement childElseBranch = childStatement.getElseBranch()-->Line_41 $$ newStatement.append(childElseBranch.getText())[ FD ]
Line_18 $$ if (condition == null) -->Line_19 $$ return[ CD ]
Line_10 $$ final String childConditionText-->Line_14 $$ childConditionText = childCondition.getText()[ FD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_35 $$ newStatement.append(childConditionText)[ CD ]
Line_17 $$ final PsiExpression condition = parentStatement.getCondition()-->Line_23 $$ parentConditionText = '(' + condition.getText() + ')'[ FD ]
Line_27 $$ final PsiStatement parentThenBranch = parentStatement.getThenBranch()-->Line_28 $$ if (parentThenBranch == null) [ FD ]
Line_38 $$ final PsiStatement childElseBranch = childStatement.getElseBranch()-->Line_39 $$ if (childElseBranch != null) [ FD ]
Line_6 $$ final PsiExpression childCondition = childStatement.getCondition()-->Line_7 $$ if (childCondition == null) [ FD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_37 $$ newStatement.append(parentThenBranch.getText())[ CD ]
Line_22 $$ if (ParenthesesUtils.getPrecedence(condition) > ParenthesesUtils.OR_PRECEDENCE) -->Line_25 $$ parentConditionText = condition.getText()[ CD ]
Line_3 $$ final PsiIfStatement parentStatement = (PsiIfStatement) token.getParent()-->Line_27 $$ final PsiStatement parentThenBranch = parentStatement.getThenBranch()[ FD ]
Line_31 $$ final StringBuilder newStatement = new StringBuilder()-->Line_32 $$ newStatement.append("if(")[ FD ]
Line_31 $$ final StringBuilder newStatement = new StringBuilder()-->Line_33 $$ newStatement.append(parentConditionText)[ FD ]
Line_17 $$ final PsiExpression condition = parentStatement.getCondition()-->Line_18 $$ if (condition == null) [ FD ]
Line_12 $$ childConditionText = '(' + childCondition.getText() + ')'-->Line_14 $$ childConditionText = childCondition.getText()[ FD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_3 $$ final PsiIfStatement parentStatement = (PsiIfStatement) token.getParent()[ FD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_17 $$ final PsiExpression condition = parentStatement.getCondition()[ CD ]
Line_17 $$ final PsiExpression condition = parentStatement.getCondition()-->Line_25 $$ parentConditionText = condition.getText()[ FD ]
Line_31 $$ final StringBuilder newStatement = new StringBuilder()-->Line_35 $$ newStatement.append(childConditionText)[ FD ]
Line_21 $$ final String parentConditionText-->Line_25 $$ parentConditionText = condition.getText()[ FD ]
Line_23 $$ parentConditionText = '(' + condition.getText() + ')'-->Line_33 $$ newStatement.append(parentConditionText)[ FD ]
Line_39 $$ if (childElseBranch != null) -->Line_40 $$ newStatement.append("else ")[ CD ]
Line_31 $$ final StringBuilder newStatement = new StringBuilder()-->Line_34 $$ newStatement.append("||")[ FD ]
Line_12 $$ childConditionText = '(' + childCondition.getText() + ')'-->Line_35 $$ newStatement.append(childConditionText)[ FD ]
Line_6 $$ final PsiExpression childCondition = childStatement.getCondition()-->Line_14 $$ childConditionText = childCondition.getText()[ FD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_39 $$ if (childElseBranch != null) [ CD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_21 $$ final String parentConditionText[ CD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_31 $$ final StringBuilder newStatement = new StringBuilder()[ CD ]
Line_10 $$ final String childConditionText-->Line_12 $$ childConditionText = '(' + childCondition.getText() + ')'[ FD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_10 $$ final String childConditionText[ CD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_36 $$ newStatement.append(')')[ CD ]
Line_22 $$ if (ParenthesesUtils.getPrecedence(condition) > ParenthesesUtils.OR_PRECEDENCE) -->Line_23 $$ parentConditionText = '(' + condition.getText() + ')'[ CD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_32 $$ newStatement.append("if(")[ CD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_3 $$ final PsiIfStatement parentStatement = (PsiIfStatement) token.getParent()[ CD ]
Line_6 $$ final PsiExpression childCondition = childStatement.getCondition()-->Line_12 $$ childConditionText = '(' + childCondition.getText() + ')'[ FD ]
Line_21 $$ final String parentConditionText-->Line_23 $$ parentConditionText = '(' + condition.getText() + ')'[ FD ]
Line_11 $$ if (ParenthesesUtils.getPrecedence(childCondition) > ParenthesesUtils.OR_PRECEDENCE) -->Line_12 $$ childConditionText = '(' + childCondition.getText() + ')'[ CD ]
Line_3 $$ final PsiIfStatement parentStatement = (PsiIfStatement) token.getParent()-->Line_43 $$ PsiReplacementUtil.replaceStatement(parentStatement, newStatement.toString())[ FD ]
Line_31 $$ final StringBuilder newStatement = new StringBuilder()-->Line_43 $$ PsiReplacementUtil.replaceStatement(parentStatement, newStatement.toString())[ FD ]
Line_31 $$ final StringBuilder newStatement = new StringBuilder()-->Line_40 $$ newStatement.append("else ")[ FD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_43 $$ PsiReplacementUtil.replaceStatement(parentStatement, newStatement.toString())[ CD ]
Line_2 $$ private static void replaceMergeableImplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_22 $$ if (ParenthesesUtils.getPrecedence(condition) > ParenthesesUtils.OR_PRECEDENCE) [ CD ]
Line_25 $$ parentConditionText = condition.getText()-->Line_33 $$ newStatement.append(parentConditionText)[ FD ]
Line_4 $$ final PsiIfStatement childStatement = (PsiIfStatement) PsiTreeUtil.skipSiblingsForward(parentStatement, PsiWhiteSpace.class)-->Line_6 $$ final PsiExpression childCondition = childStatement.getCondition()[ FD ]
