Line_2 $$ private static String formatAuthenticationHeader(boolean includeRealm, Optional<byte[]> token) -->Line_3 $$ StringBuilder header = new StringBuilder(NEGOTIATE_SCHEME)[ CD ]
Line_2 $$ private static String formatAuthenticationHeader(boolean includeRealm, Optional<byte[]> token) -->Line_8 $$ header.append(" ").append(Base64.getEncoder().encodeToString(token.get()))[ FD ]
Line_2 $$ private static String formatAuthenticationHeader(boolean includeRealm, Optional<byte[]> token) -->Line_4 $$ if (includeRealm) [ CD ]
Line_2 $$ private static String formatAuthenticationHeader(boolean includeRealm, Optional<byte[]> token) -->Line_7 $$ if (token.isPresent()) [ CD ]
Line_4 $$ if (includeRealm) -->Line_5 $$ header.append(" realm=\"presto\"")[ CD ]
Line_7 $$ if (token.isPresent()) -->Line_8 $$ header.append(" ").append(Base64.getEncoder().encodeToString(token.get()))[ CD ]
Line_3 $$ StringBuilder header = new StringBuilder(NEGOTIATE_SCHEME)-->Line_8 $$ header.append(" ").append(Base64.getEncoder().encodeToString(token.get()))[ FD ]
Line_2 $$ private static String formatAuthenticationHeader(boolean includeRealm, Optional<byte[]> token) -->Line_7 $$ if (token.isPresent()) [ FD ]
Line_2 $$ private static String formatAuthenticationHeader(boolean includeRealm, Optional<byte[]> token) -->Line_10 $$ return header.toString()[ CD ]
Line_3 $$ StringBuilder header = new StringBuilder(NEGOTIATE_SCHEME)-->Line_5 $$ header.append(" realm=\"presto\"")[ FD ]
Line_3 $$ StringBuilder header = new StringBuilder(NEGOTIATE_SCHEME)-->Line_10 $$ return header.toString()[ FD ]
