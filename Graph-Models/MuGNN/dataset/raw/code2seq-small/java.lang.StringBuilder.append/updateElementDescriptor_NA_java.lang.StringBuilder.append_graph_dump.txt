Line_25 $$ if (!(text3.toString().equals(" "))) -->Line_26 $$ text3.append(", ")[ CD ]
Line_7 $$ if (attributes.length == 0) -->Line_12 $$ StringBuilder text3 = new StringBuilder(" ")[ CD ]
Line_7 $$ if (attributes.length == 0) -->Line_34 $$ if (!text2.toString().equals(" ") && !text3.toString().equals(" ")) [ CD ]
Line_10 $$ StringBuilder text1 = new StringBuilder(" ")-->Line_16 $$ text1.append(", ")[ FD ]
Line_2 $$ public static void updateElementDescriptor(XmlElementDescriptor descriptor, ParameterInfoUIContext context, Function<String, Boolean> attributePresentFun) -->Line_46 $$ context.setupUIComponentPresentation(buffer.toString(), highlightStartOffset, highlightEndOffset, false, false, true, context.getDefaultParameterColor())[ FD ]
Line_11 $$ StringBuilder text2 = new StringBuilder(" ")-->Line_37 $$ if (!text1.toString().equals(" ") && !text3.toString().equals(" ") && text2.toString().equals(" ")) [ FD ]
Line_4 $$ StringBuilder buffer = new StringBuilder()-->Line_41 $$ highlightStartOffset = buffer.length()[ FD ]
Line_7 $$ if (attributes.length == 0) -->Line_8 $$ buffer.append(CodeInsightBundle.message("xml.tag.info.no.attributes"))[ CD ]
Line_43 $$ highlightEndOffset = buffer.length()-->Line_46 $$ context.setupUIComponentPresentation(buffer.toString(), highlightStartOffset, highlightEndOffset, false, false, true, context.getDefaultParameterColor())[ FD ]
Line_10 $$ StringBuilder text1 = new StringBuilder(" ")-->Line_18 $$ text1.append(attribute.getName())[ FD ]
Line_14 $$ if (Boolean.TRUE.equals(attributePresentFun.fun(attribute.getName()))) -->Line_18 $$ text1.append(attribute.getName())[ CD ]
Line_2 $$ public static void updateElementDescriptor(XmlElementDescriptor descriptor, ParameterInfoUIContext context, Function<String, Boolean> attributePresentFun) -->Line_3 $$ final XmlAttributeDescriptor[] attributes = descriptor != null ? getSortedDescriptors(descriptor) : XmlAttributeDescriptor.EMPTY[ FD ]
Line_19 $$ if (attribute.isRequired()) -->Line_20 $$ if (!(text2.toString().equals(" "))) [ CD ]
Line_11 $$ StringBuilder text2 = new StringBuilder(" ")-->Line_20 $$ if (!(text2.toString().equals(" "))) [ FD ]
Line_12 $$ StringBuilder text3 = new StringBuilder(" ")-->Line_34 $$ if (!text2.toString().equals(" ") && !text3.toString().equals(" ")) [ FD ]
Line_5 $$ int highlightStartOffset = -1-->Line_41 $$ highlightStartOffset = buffer.length()[ FD ]
Line_15 $$ if (!(text1.toString().equals(" "))) -->Line_16 $$ text1.append(", ")[ CD ]
Line_10 $$ StringBuilder text1 = new StringBuilder(" ")-->Line_15 $$ if (!(text1.toString().equals(" "))) [ FD ]
Line_10 $$ StringBuilder text1 = new StringBuilder(" ")-->Line_40 $$ buffer.append(text1)[ FD ]
Line_12 $$ StringBuilder text3 = new StringBuilder(" ")-->Line_44 $$ buffer.append(text3)[ FD ]
Line_13 $$ for (XmlAttributeDescriptor attribute : attributes) -->Line_28 $$ text3.append(attribute.getName())[ FD ]
Line_7 $$ if (attributes.length == 0) -->Line_31 $$ if (!text1.toString().equals(" ") && !text2.toString().equals(" ")) [ CD ]
Line_31 $$ if (!text1.toString().equals(" ") && !text2.toString().equals(" ")) -->Line_32 $$ text1.append(", ")[ CD ]
Line_10 $$ StringBuilder text1 = new StringBuilder(" ")-->Line_38 $$ text1.append(", ")[ FD ]
Line_13 $$ for (XmlAttributeDescriptor attribute : attributes) -->Line_14 $$ if (Boolean.TRUE.equals(attributePresentFun.fun(attribute.getName()))) [ FD ]
Line_12 $$ StringBuilder text3 = new StringBuilder(" ")-->Line_26 $$ text3.append(", ")[ FD ]
Line_41 $$ highlightStartOffset = buffer.length()-->Line_46 $$ context.setupUIComponentPresentation(buffer.toString(), highlightStartOffset, highlightEndOffset, false, false, true, context.getDefaultParameterColor())[ FD ]
Line_11 $$ StringBuilder text2 = new StringBuilder(" ")-->Line_42 $$ buffer.append(text2)[ FD ]
Line_19 $$ if (attribute.isRequired()) -->Line_25 $$ if (!(text3.toString().equals(" "))) [ CD ]
Line_11 $$ StringBuilder text2 = new StringBuilder(" ")-->Line_34 $$ if (!text2.toString().equals(" ") && !text3.toString().equals(" ")) [ FD ]
Line_2 $$ public static void updateElementDescriptor(XmlElementDescriptor descriptor, ParameterInfoUIContext context, Function<String, Boolean> attributePresentFun) -->Line_14 $$ if (Boolean.TRUE.equals(attributePresentFun.fun(attribute.getName()))) [ FD ]
Line_14 $$ if (Boolean.TRUE.equals(attributePresentFun.fun(attribute.getName()))) -->Line_15 $$ if (!(text1.toString().equals(" "))) [ CD ]
Line_13 $$ for (XmlAttributeDescriptor attribute : attributes) -->Line_18 $$ text1.append(attribute.getName())[ FD ]
Line_11 $$ StringBuilder text2 = new StringBuilder(" ")-->Line_31 $$ if (!text1.toString().equals(" ") && !text2.toString().equals(" ")) [ FD ]
Line_2 $$ public static void updateElementDescriptor(XmlElementDescriptor descriptor, ParameterInfoUIContext context, Function<String, Boolean> attributePresentFun) -->Line_6 $$ int highlightEndOffset = -1[ CD ]
Line_2 $$ public static void updateElementDescriptor(XmlElementDescriptor descriptor, ParameterInfoUIContext context, Function<String, Boolean> attributePresentFun) -->Line_7 $$ if (attributes.length == 0) [ CD ]
Line_19 $$ if (attribute.isRequired()) -->Line_23 $$ text2.append(attribute.getName())[ CD ]
Line_6 $$ int highlightEndOffset = -1-->Line_46 $$ context.setupUIComponentPresentation(buffer.toString(), highlightStartOffset, highlightEndOffset, false, false, true, context.getDefaultParameterColor())[ FD ]
Line_7 $$ if (attributes.length == 0) -->Line_11 $$ StringBuilder text2 = new StringBuilder(" ")[ CD ]
Line_4 $$ StringBuilder buffer = new StringBuilder()-->Line_40 $$ buffer.append(text1)[ FD ]
Line_19 $$ if (attribute.isRequired()) -->Line_28 $$ text3.append(attribute.getName())[ CD ]
Line_4 $$ StringBuilder buffer = new StringBuilder()-->Line_42 $$ buffer.append(text2)[ FD ]
Line_12 $$ StringBuilder text3 = new StringBuilder(" ")-->Line_28 $$ text3.append(attribute.getName())[ FD ]
Line_7 $$ if (attributes.length == 0) -->Line_44 $$ buffer.append(text3)[ CD ]
Line_11 $$ StringBuilder text2 = new StringBuilder(" ")-->Line_35 $$ text2.append(", ")[ FD ]
Line_10 $$ StringBuilder text1 = new StringBuilder(" ")-->Line_31 $$ if (!text1.toString().equals(" ") && !text2.toString().equals(" ")) [ FD ]
Line_11 $$ StringBuilder text2 = new StringBuilder(" ")-->Line_21 $$ text2.append(", ")[ FD ]
Line_7 $$ if (attributes.length == 0) -->Line_41 $$ highlightStartOffset = buffer.length()[ CD ]
Line_4 $$ StringBuilder buffer = new StringBuilder()-->Line_46 $$ context.setupUIComponentPresentation(buffer.toString(), highlightStartOffset, highlightEndOffset, false, false, true, context.getDefaultParameterColor())[ FD ]
Line_2 $$ public static void updateElementDescriptor(XmlElementDescriptor descriptor, ParameterInfoUIContext context, Function<String, Boolean> attributePresentFun) -->Line_3 $$ final XmlAttributeDescriptor[] attributes = descriptor != null ? getSortedDescriptors(descriptor) : XmlAttributeDescriptor.EMPTY[ CD ]
Line_7 $$ if (attributes.length == 0) -->Line_37 $$ if (!text1.toString().equals(" ") && !text3.toString().equals(" ") && text2.toString().equals(" ")) [ CD ]
Line_6 $$ int highlightEndOffset = -1-->Line_43 $$ highlightEndOffset = buffer.length()[ FD ]
Line_2 $$ public static void updateElementDescriptor(XmlElementDescriptor descriptor, ParameterInfoUIContext context, Function<String, Boolean> attributePresentFun) -->Line_4 $$ StringBuilder buffer = new StringBuilder()[ CD ]
Line_5 $$ int highlightStartOffset = -1-->Line_46 $$ context.setupUIComponentPresentation(buffer.toString(), highlightStartOffset, highlightEndOffset, false, false, true, context.getDefaultParameterColor())[ FD ]
Line_12 $$ StringBuilder text3 = new StringBuilder(" ")-->Line_25 $$ if (!(text3.toString().equals(" "))) [ FD ]
Line_37 $$ if (!text1.toString().equals(" ") && !text3.toString().equals(" ") && text2.toString().equals(" ")) -->Line_38 $$ text1.append(", ")[ CD ]
Line_2 $$ public static void updateElementDescriptor(XmlElementDescriptor descriptor, ParameterInfoUIContext context, Function<String, Boolean> attributePresentFun) -->Line_5 $$ int highlightStartOffset = -1[ CD ]
Line_7 $$ if (attributes.length == 0) -->Line_42 $$ buffer.append(text2)[ CD ]
Line_2 $$ public static void updateElementDescriptor(XmlElementDescriptor descriptor, ParameterInfoUIContext context, Function<String, Boolean> attributePresentFun) -->Line_46 $$ context.setupUIComponentPresentation(buffer.toString(), highlightStartOffset, highlightEndOffset, false, false, true, context.getDefaultParameterColor())[ CD ]
Line_7 $$ if (attributes.length == 0) -->Line_43 $$ highlightEndOffset = buffer.length()[ CD ]
Line_13 $$ for (XmlAttributeDescriptor attribute : attributes) -->Line_19 $$ if (attribute.isRequired()) [ FD ]
Line_14 $$ if (Boolean.TRUE.equals(attributePresentFun.fun(attribute.getName()))) -->Line_19 $$ if (attribute.isRequired()) [ CD ]
Line_12 $$ StringBuilder text3 = new StringBuilder(" ")-->Line_37 $$ if (!text1.toString().equals(" ") && !text3.toString().equals(" ") && text2.toString().equals(" ")) [ FD ]
Line_20 $$ if (!(text2.toString().equals(" "))) -->Line_21 $$ text2.append(", ")[ CD ]
Line_7 $$ if (attributes.length == 0) -->Line_10 $$ StringBuilder text1 = new StringBuilder(" ")[ CD ]
Line_4 $$ StringBuilder buffer = new StringBuilder()-->Line_8 $$ buffer.append(CodeInsightBundle.message("xml.tag.info.no.attributes"))[ FD ]
Line_34 $$ if (!text2.toString().equals(" ") && !text3.toString().equals(" ")) -->Line_35 $$ text2.append(", ")[ CD ]
Line_7 $$ if (attributes.length == 0) -->Line_40 $$ buffer.append(text1)[ CD ]
Line_10 $$ StringBuilder text1 = new StringBuilder(" ")-->Line_32 $$ text1.append(", ")[ FD ]
Line_10 $$ StringBuilder text1 = new StringBuilder(" ")-->Line_37 $$ if (!text1.toString().equals(" ") && !text3.toString().equals(" ") && text2.toString().equals(" ")) [ FD ]
Line_13 $$ for (XmlAttributeDescriptor attribute : attributes) -->Line_23 $$ text2.append(attribute.getName())[ FD ]
Line_4 $$ StringBuilder buffer = new StringBuilder()-->Line_43 $$ highlightEndOffset = buffer.length()[ FD ]
Line_4 $$ StringBuilder buffer = new StringBuilder()-->Line_44 $$ buffer.append(text3)[ FD ]
Line_11 $$ StringBuilder text2 = new StringBuilder(" ")-->Line_23 $$ text2.append(attribute.getName())[ FD ]
