Line_2 $$ public String toSqlString(Criteria criteria, CriteriaQuery criteriaQuery) throws HibernateException -->Line_5 $$ final StringBuilder fragment = new StringBuilder()[ CD ]
Line_2 $$ public String toSqlString(Criteria criteria, CriteriaQuery criteriaQuery) throws HibernateException -->Line_9 $$ final SessionFactoryImplementor factory = criteriaQuery.getFactory()[ CD ]
Line_9 $$ final SessionFactoryImplementor factory = criteriaQuery.getFactory()-->Line_14 $$ fragment.append(factory.getDialect().getLowercaseFunction()).append('(')[ FD ]
Line_2 $$ public String toSqlString(Criteria criteria, CriteriaQuery criteriaQuery) throws HibernateException -->Line_3 $$ final String[] columns = criteriaQuery.findColumns(propertyName, criteria)[ CD ]
Line_21 $$ if (i < columns.length - 1) -->Line_22 $$ fragment.append(" and ")[ CD ]
Line_2 $$ public String toSqlString(Criteria criteria, CriteriaQuery criteriaQuery) throws HibernateException -->Line_11 $$ for (int i = 0; i < columns.length; i++) [ CD ]
Line_5 $$ final StringBuilder fragment = new StringBuilder()-->Line_16 $$ fragment.append(columns[i])[ FD ]
Line_4 $$ final Type type = criteriaQuery.getTypeUsingProjection(criteria, propertyName)-->Line_10 $$ final int[] sqlTypes = type.sqlTypes(factory)[ FD ]
Line_11 $$ for (int i = 0; i < columns.length; i++) -->Line_13 $$ if (lower) [ CD ]
Line_2 $$ public String toSqlString(Criteria criteria, CriteriaQuery criteriaQuery) throws HibernateException -->Line_10 $$ final int[] sqlTypes = type.sqlTypes(factory)[ CD ]
Line_5 $$ final StringBuilder fragment = new StringBuilder()-->Line_14 $$ fragment.append(factory.getDialect().getLowercaseFunction()).append('(')[ FD ]
Line_11 $$ for (int i = 0; i < columns.length; i++) -->Line_12 $$ final boolean lower = ignoreCase && (sqlTypes[i] == Types.VARCHAR || sqlTypes[i] == Types.CHAR)[ CD ]
Line_5 $$ final StringBuilder fragment = new StringBuilder()-->Line_22 $$ fragment.append(" and ")[ FD ]
Line_11 $$ for (int i = 0; i < columns.length; i++) -->Line_17 $$ if (lower) [ CD ]
Line_2 $$ public String toSqlString(Criteria criteria, CriteriaQuery criteriaQuery) throws HibernateException -->Line_4 $$ final Type type = criteriaQuery.getTypeUsingProjection(criteria, propertyName)[ FD ]
Line_5 $$ final StringBuilder fragment = new StringBuilder()-->Line_20 $$ fragment.append(getOp()).append("?")[ FD ]
Line_2 $$ public String toSqlString(Criteria criteria, CriteriaQuery criteriaQuery) throws HibernateException -->Line_6 $$ if (columns.length > 1) [ CD ]
Line_5 $$ final StringBuilder fragment = new StringBuilder()-->Line_18 $$ fragment.append(')')[ FD ]
Line_2 $$ public String toSqlString(Criteria criteria, CriteriaQuery criteriaQuery) throws HibernateException -->Line_28 $$ return fragment.toString()[ CD ]
Line_5 $$ final StringBuilder fragment = new StringBuilder()-->Line_26 $$ fragment.append(')')[ FD ]
Line_17 $$ if (lower) -->Line_18 $$ fragment.append(')')[ CD ]
Line_11 $$ for (int i = 0; i < columns.length; i++) -->Line_16 $$ fragment.append(columns[i])[ CD ]
Line_11 $$ for (int i = 0; i < columns.length; i++) -->Line_21 $$ if (i < columns.length - 1) [ FD ]
Line_6 $$ if (columns.length > 1) -->Line_7 $$ fragment.append('(')[ CD ]
Line_2 $$ public String toSqlString(Criteria criteria, CriteriaQuery criteriaQuery) throws HibernateException -->Line_9 $$ final SessionFactoryImplementor factory = criteriaQuery.getFactory()[ FD ]
Line_2 $$ public String toSqlString(Criteria criteria, CriteriaQuery criteriaQuery) throws HibernateException -->Line_4 $$ final Type type = criteriaQuery.getTypeUsingProjection(criteria, propertyName)[ CD ]
Line_25 $$ if (columns.length > 1) -->Line_26 $$ fragment.append(')')[ CD ]
Line_9 $$ final SessionFactoryImplementor factory = criteriaQuery.getFactory()-->Line_10 $$ final int[] sqlTypes = type.sqlTypes(factory)[ FD ]
Line_2 $$ public String toSqlString(Criteria criteria, CriteriaQuery criteriaQuery) throws HibernateException -->Line_25 $$ if (columns.length > 1) [ CD ]
Line_5 $$ final StringBuilder fragment = new StringBuilder()-->Line_7 $$ fragment.append('(')[ FD ]
Line_2 $$ public String toSqlString(Criteria criteria, CriteriaQuery criteriaQuery) throws HibernateException -->Line_3 $$ final String[] columns = criteriaQuery.findColumns(propertyName, criteria)[ FD ]
Line_5 $$ final StringBuilder fragment = new StringBuilder()-->Line_28 $$ return fragment.toString()[ FD ]
Line_13 $$ if (lower) -->Line_14 $$ fragment.append(factory.getDialect().getLowercaseFunction()).append('(')[ CD ]
Line_11 $$ for (int i = 0; i < columns.length; i++) -->Line_20 $$ fragment.append(getOp()).append("?")[ CD ]
Line_11 $$ for (int i = 0; i < columns.length; i++) -->Line_21 $$ if (i < columns.length - 1) [ CD ]
