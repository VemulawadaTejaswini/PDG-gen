Line_7 $$ boolean append-->Line_18 $$ append = language == XHTMLLanguage.INSTANCE[ FD ]
Line_4 $$ final PsiFile containingFile = element.getContainingFile()-->Line_5 $$ if (containingFile != null) [ FD ]
Line_7 $$ boolean append-->Line_9 $$ append = true[ FD ]
Line_7 $$ boolean append-->Line_22 $$ if (descriptor != null && append) [ FD ]
Line_8 $$ if (tag instanceof HtmlTag) -->Line_11 $$ final FileViewProvider provider = containingFile.getViewProvider()[ CD ]
Line_12 $$ Language language-->Line_18 $$ append = language == XHTMLLanguage.INSTANCE[ FD ]
Line_14 $$ language = ((TemplateLanguageFileViewProvider) provider).getTemplateDataLanguage()-->Line_16 $$ language = provider.getBaseLanguage()[ FD ]
Line_6 $$ final XmlTag tag = PsiTreeUtil.getParentOfType(element, XmlTag.class, false)-->Line_20 $$ if (tag != null) [ FD ]
Line_5 $$ if (containingFile != null) -->Line_8 $$ if (tag instanceof HtmlTag) [ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_23 $$ buf.append("<br>")[ FD ]
Line_8 $$ if (tag instanceof HtmlTag) -->Line_9 $$ append = true[ CD ]
Line_21 $$ EntityDescriptor descriptor = HtmlDescriptorsTable.getTagDescriptor(tag.getName())-->Line_24 $$ buf.append(XmlBundle.message("html.quickdoc.additional.template", descriptor.getHelpRef(), BASE_SITEPOINT_URL + tag.getName()))[ FD ]
Line_12 $$ Language language-->Line_16 $$ language = provider.getBaseLanguage()[ FD ]
Line_8 $$ if (tag instanceof HtmlTag) -->Line_12 $$ Language language[ CD ]
Line_9 $$ append = true-->Line_22 $$ if (descriptor != null && append) [ FD ]
Line_6 $$ final XmlTag tag = PsiTreeUtil.getParentOfType(element, XmlTag.class, false)-->Line_8 $$ if (tag instanceof HtmlTag) [ FD ]
Line_9 $$ append = true-->Line_18 $$ append = language == XHTMLLanguage.INSTANCE[ FD ]
Line_5 $$ if (containingFile != null) -->Line_20 $$ if (tag != null) [ CD ]
Line_5 $$ if (containingFile != null) -->Line_7 $$ boolean append[ CD ]
Line_16 $$ language = provider.getBaseLanguage()-->Line_18 $$ append = language == XHTMLLanguage.INSTANCE[ FD ]
Line_2 $$ static String generateHtmlAdditionalDocTemplate(@NotNull PsiElement element) -->Line_3 $$ StringBuilder buf = new StringBuilder()[ CD ]
Line_13 $$ if (provider instanceof TemplateLanguageFileViewProvider) -->Line_14 $$ language = ((TemplateLanguageFileViewProvider) provider).getTemplateDataLanguage()[ CD ]
Line_2 $$ static String generateHtmlAdditionalDocTemplate(@NotNull PsiElement element) -->Line_4 $$ final PsiFile containingFile = element.getContainingFile()[ FD ]
Line_2 $$ static String generateHtmlAdditionalDocTemplate(@NotNull PsiElement element) -->Line_4 $$ final PsiFile containingFile = element.getContainingFile()[ CD ]
Line_20 $$ if (tag != null) -->Line_22 $$ if (descriptor != null && append) [ CD ]
Line_8 $$ if (tag instanceof HtmlTag) -->Line_18 $$ append = language == XHTMLLanguage.INSTANCE[ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_24 $$ buf.append(XmlBundle.message("html.quickdoc.additional.template", descriptor.getHelpRef(), BASE_SITEPOINT_URL + tag.getName()))[ FD ]
Line_2 $$ static String generateHtmlAdditionalDocTemplate(@NotNull PsiElement element) -->Line_28 $$ return buf.toString()[ CD ]
Line_12 $$ Language language-->Line_14 $$ language = ((TemplateLanguageFileViewProvider) provider).getTemplateDataLanguage()[ FD ]
Line_6 $$ final XmlTag tag = PsiTreeUtil.getParentOfType(element, XmlTag.class, false)-->Line_21 $$ EntityDescriptor descriptor = HtmlDescriptorsTable.getTagDescriptor(tag.getName())[ FD ]
Line_5 $$ if (containingFile != null) -->Line_6 $$ final XmlTag tag = PsiTreeUtil.getParentOfType(element, XmlTag.class, false)[ CD ]
Line_22 $$ if (descriptor != null && append) -->Line_23 $$ buf.append("<br>")[ CD ]
Line_4 $$ final PsiFile containingFile = element.getContainingFile()-->Line_11 $$ final FileViewProvider provider = containingFile.getViewProvider()[ FD ]
Line_14 $$ language = ((TemplateLanguageFileViewProvider) provider).getTemplateDataLanguage()-->Line_18 $$ append = language == XHTMLLanguage.INSTANCE[ FD ]
Line_18 $$ append = language == XHTMLLanguage.INSTANCE-->Line_22 $$ if (descriptor != null && append) [ FD ]
Line_11 $$ final FileViewProvider provider = containingFile.getViewProvider()-->Line_16 $$ language = provider.getBaseLanguage()[ FD ]
Line_2 $$ static String generateHtmlAdditionalDocTemplate(@NotNull PsiElement element) -->Line_6 $$ final XmlTag tag = PsiTreeUtil.getParentOfType(element, XmlTag.class, false)[ FD ]
Line_13 $$ if (provider instanceof TemplateLanguageFileViewProvider) -->Line_16 $$ language = provider.getBaseLanguage()[ CD ]
Line_22 $$ if (descriptor != null && append) -->Line_24 $$ buf.append(XmlBundle.message("html.quickdoc.additional.template", descriptor.getHelpRef(), BASE_SITEPOINT_URL + tag.getName()))[ CD ]
Line_11 $$ final FileViewProvider provider = containingFile.getViewProvider()-->Line_13 $$ if (provider instanceof TemplateLanguageFileViewProvider) [ FD ]
Line_6 $$ final XmlTag tag = PsiTreeUtil.getParentOfType(element, XmlTag.class, false)-->Line_24 $$ buf.append(XmlBundle.message("html.quickdoc.additional.template", descriptor.getHelpRef(), BASE_SITEPOINT_URL + tag.getName()))[ FD ]
Line_2 $$ static String generateHtmlAdditionalDocTemplate(@NotNull PsiElement element) -->Line_5 $$ if (containingFile != null) [ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_28 $$ return buf.toString()[ FD ]
Line_8 $$ if (tag instanceof HtmlTag) -->Line_13 $$ if (provider instanceof TemplateLanguageFileViewProvider) [ CD ]
Line_20 $$ if (tag != null) -->Line_21 $$ EntityDescriptor descriptor = HtmlDescriptorsTable.getTagDescriptor(tag.getName())[ CD ]
