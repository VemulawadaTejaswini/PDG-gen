Line_3 $$ StringBuilder sb = new StringBuilder(super.dumpDatanode())-->Line_10 $$ sb.append(" ").append(inval).append(" blocks to be invalidated;")[ FD ]
Line_13 $$ if (recover > 0) -->Line_14 $$ sb.append(" ").append(recover).append(" blocks to be recovered;")[ CD ]
Line_2 $$ public String dumpDatanode() -->Line_4 $$ int repl = replicateBlocks.size()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder(super.dumpDatanode())-->Line_14 $$ sb.append(" ").append(recover).append(" blocks to be recovered;")[ FD ]
Line_12 $$ int recover = recoverBlocks.size()-->Line_14 $$ sb.append(" ").append(recover).append(" blocks to be recovered;")[ FD ]
Line_4 $$ int repl = replicateBlocks.size()-->Line_6 $$ sb.append(" ").append(repl).append(" blocks to be replicated;")[ FD ]
Line_4 $$ int repl = replicateBlocks.size()-->Line_5 $$ if (repl > 0) [ FD ]
Line_2 $$ public String dumpDatanode() -->Line_8 $$ int inval = invalidateBlocks.size()[ CD ]
Line_2 $$ public String dumpDatanode() -->Line_3 $$ StringBuilder sb = new StringBuilder(super.dumpDatanode())[ CD ]
Line_2 $$ public String dumpDatanode() -->Line_16 $$ return sb.toString()[ CD ]
Line_2 $$ public String dumpDatanode() -->Line_9 $$ if (inval > 0) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder(super.dumpDatanode())-->Line_6 $$ sb.append(" ").append(repl).append(" blocks to be replicated;")[ FD ]
Line_2 $$ public String dumpDatanode() -->Line_13 $$ if (recover > 0) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder(super.dumpDatanode())-->Line_16 $$ return sb.toString()[ FD ]
Line_12 $$ int recover = recoverBlocks.size()-->Line_13 $$ if (recover > 0) [ FD ]
Line_8 $$ int inval = invalidateBlocks.size()-->Line_10 $$ sb.append(" ").append(inval).append(" blocks to be invalidated;")[ FD ]
Line_2 $$ public String dumpDatanode() -->Line_12 $$ int recover = recoverBlocks.size()[ CD ]
Line_2 $$ public String dumpDatanode() -->Line_5 $$ if (repl > 0) [ CD ]
Line_8 $$ int inval = invalidateBlocks.size()-->Line_9 $$ if (inval > 0) [ FD ]
Line_9 $$ if (inval > 0) -->Line_10 $$ sb.append(" ").append(inval).append(" blocks to be invalidated;")[ CD ]
Line_5 $$ if (repl > 0) -->Line_6 $$ sb.append(" ").append(repl).append(" blocks to be replicated;")[ CD ]
