Line_2 $$ private String getContentFromModel() -->Line_6 $$ content.append(separator)[ CD ]
Line_2 $$ private String getContentFromModel() -->Line_3 $$ StringBuilder content = new StringBuilder()[ CD ]
Line_3 $$ StringBuilder content = new StringBuilder()-->Line_10 $$ return content.toString()[ FD ]
Line_2 $$ private String getContentFromModel() -->Line_7 $$ for (int i = 0; i < myPatchTable.getRowCount(); i++) [ CD ]
Line_4 $$ String separator = "\n"-->Line_5 $$ StringUtil.join(HgUtil.getNamesWithoutHashes(myRepository.getMQAppliedPatches()), separator, content)[ FD ]
Line_2 $$ private String getContentFromModel() -->Line_10 $$ return content.toString()[ CD ]
Line_3 $$ StringBuilder content = new StringBuilder()-->Line_6 $$ content.append(separator)[ FD ]
Line_3 $$ StringBuilder content = new StringBuilder()-->Line_5 $$ StringUtil.join(HgUtil.getNamesWithoutHashes(myRepository.getMQAppliedPatches()), separator, content)[ FD ]
Line_2 $$ private String getContentFromModel() -->Line_5 $$ StringUtil.join(HgUtil.getNamesWithoutHashes(myRepository.getMQAppliedPatches()), separator, content)[ CD ]
Line_3 $$ StringBuilder content = new StringBuilder()-->Line_8 $$ content.append(getPatchName(i)).append(separator)[ FD ]
Line_4 $$ String separator = "\n"-->Line_8 $$ content.append(getPatchName(i)).append(separator)[ FD ]
Line_7 $$ for (int i = 0; i < myPatchTable.getRowCount(); i++) -->Line_8 $$ content.append(getPatchName(i)).append(separator)[ FD ]
Line_4 $$ String separator = "\n"-->Line_6 $$ content.append(separator)[ FD ]
Line_2 $$ private String getContentFromModel() -->Line_4 $$ String separator = "\n"[ CD ]
Line_7 $$ for (int i = 0; i < myPatchTable.getRowCount(); i++) -->Line_8 $$ content.append(getPatchName(i)).append(separator)[ CD ]
