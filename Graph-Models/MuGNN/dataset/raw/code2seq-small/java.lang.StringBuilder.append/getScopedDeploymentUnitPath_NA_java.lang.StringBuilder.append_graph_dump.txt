Line_14 $$ StringBuilder result = new StringBuilder()-->Line_23 $$ return result.toString()[ FD ]
Line_4 $$ do -->Line_6 $$ DeploymentUnit parentdeploymentUnit = deploymentUnit.getParent()[ FD ]
Line_4 $$ do -->Line_7 $$ if (parentdeploymentUnit != null) [ CD ]
Line_4 $$ do -->Line_5 $$ final ResourceRoot deploymentRoot = deploymentUnit.getAttachment(Attachments.DEPLOYMENT_ROOT)[ FD ]
Line_14 $$ StringBuilder result = new StringBuilder()-->Line_20 $$ result.append(part)[ FD ]
Line_2 $$ private static String getScopedDeploymentUnitPath(DeploymentUnit deploymentUnit) -->Line_6 $$ DeploymentUnit parentdeploymentUnit = deploymentUnit.getParent()[ FD ]
Line_2 $$ private static String getScopedDeploymentUnitPath(DeploymentUnit deploymentUnit) -->Line_5 $$ final ResourceRoot deploymentRoot = deploymentUnit.getAttachment(Attachments.DEPLOYMENT_ROOT)[ FD ]
Line_4 $$ do -->Line_6 $$ DeploymentUnit parentdeploymentUnit = deploymentUnit.getParent()[ CD ]
Line_7 $$ if (parentdeploymentUnit != null) -->Line_11 $$ parts.add(0, deploymentRoot.getRoot().getName())[ CD ]
Line_7 $$ if (parentdeploymentUnit != null) -->Line_8 $$ ResourceRoot parentDeploymentRoot = parentdeploymentUnit.getAttachment(Attachments.DEPLOYMENT_ROOT)[ CD ]
Line_2 $$ private static String getScopedDeploymentUnitPath(DeploymentUnit deploymentUnit) -->Line_4 $$ do [ CD ]
Line_6 $$ DeploymentUnit parentdeploymentUnit = deploymentUnit.getParent()-->Line_7 $$ if (parentdeploymentUnit != null) [ FD ]
Line_2 $$ private static String getScopedDeploymentUnitPath(DeploymentUnit deploymentUnit) -->Line_4 $$ do [ FD ]
Line_14 $$ StringBuilder result = new StringBuilder()-->Line_18 $$ result.append('/')[ FD ]
Line_5 $$ final ResourceRoot deploymentRoot = deploymentUnit.getAttachment(Attachments.DEPLOYMENT_ROOT)-->Line_9 $$ parts.add(0, deploymentRoot.getRoot().getPathNameRelativeTo(parentDeploymentRoot.getRoot()))[ FD ]
Line_2 $$ private static String getScopedDeploymentUnitPath(DeploymentUnit deploymentUnit) -->Line_3 $$ ArrayList<String> parts = new ArrayList<String>()[ CD ]
Line_5 $$ final ResourceRoot deploymentRoot = deploymentUnit.getAttachment(Attachments.DEPLOYMENT_ROOT)-->Line_11 $$ parts.add(0, deploymentRoot.getRoot().getName())[ FD ]
Line_3 $$ ArrayList<String> parts = new ArrayList<String>()-->Line_11 $$ parts.add(0, deploymentRoot.getRoot().getName())[ FD ]
Line_16 $$ for (String part : parts) -->Line_20 $$ result.append(part)[ FD ]
Line_8 $$ ResourceRoot parentDeploymentRoot = parentdeploymentUnit.getAttachment(Attachments.DEPLOYMENT_ROOT)-->Line_9 $$ parts.add(0, deploymentRoot.getRoot().getPathNameRelativeTo(parentDeploymentRoot.getRoot()))[ FD ]
Line_2 $$ private static String getScopedDeploymentUnitPath(DeploymentUnit deploymentUnit) -->Line_14 $$ StringBuilder result = new StringBuilder()[ CD ]
Line_17 $$ if (needSeparator) -->Line_18 $$ result.append('/')[ CD ]
Line_4 $$ do -->Line_5 $$ final ResourceRoot deploymentRoot = deploymentUnit.getAttachment(Attachments.DEPLOYMENT_ROOT)[ CD ]
Line_3 $$ ArrayList<String> parts = new ArrayList<String>()-->Line_9 $$ parts.add(0, deploymentRoot.getRoot().getPathNameRelativeTo(parentDeploymentRoot.getRoot()))[ FD ]
Line_2 $$ private static String getScopedDeploymentUnitPath(DeploymentUnit deploymentUnit) -->Line_23 $$ return result.toString()[ CD ]
Line_6 $$ DeploymentUnit parentdeploymentUnit = deploymentUnit.getParent()-->Line_8 $$ ResourceRoot parentDeploymentRoot = parentdeploymentUnit.getAttachment(Attachments.DEPLOYMENT_ROOT)[ FD ]
Line_15 $$ boolean needSeparator = false-->Line_21 $$ needSeparator = true[ FD ]
Line_7 $$ if (parentdeploymentUnit != null) -->Line_9 $$ parts.add(0, deploymentRoot.getRoot().getPathNameRelativeTo(parentDeploymentRoot.getRoot()))[ CD ]
Line_2 $$ private static String getScopedDeploymentUnitPath(DeploymentUnit deploymentUnit) -->Line_15 $$ boolean needSeparator = false[ CD ]
