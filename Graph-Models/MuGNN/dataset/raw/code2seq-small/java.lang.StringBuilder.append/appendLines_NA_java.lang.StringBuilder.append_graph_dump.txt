Line_2 $$ private void appendLines(StringBuilder res, String[] srcLines, int from, int to, int requiredLineNumber) -->Line_7 $$ res.append(s)[ FD ]
Line_3 $$ if (to - from > requiredLineNumber) -->Line_13 $$ if (to - from <= requiredLineNumber) [ CD ]
Line_2 $$ private void appendLines(StringBuilder res, String[] srcLines, int from, int to, int requiredLineNumber) -->Line_9 $$ res.append(myLineSeparator)[ FD ]
Line_2 $$ private void appendLines(StringBuilder res, String[] srcLines, int from, int to, int requiredLineNumber) -->Line_3 $$ if (to - from > requiredLineNumber) [ FD ]
Line_2 $$ private void appendLines(StringBuilder res, String[] srcLines, int from, int to, int requiredLineNumber) -->Line_3 $$ if (to - from > requiredLineNumber) [ CD ]
Line_2 $$ private void appendLines(StringBuilder res, String[] srcLines, int from, int to, int requiredLineNumber) -->Line_18 $$ res.append(myLineSeparator)[ FD ]
Line_6 $$ for (String s : strings) -->Line_7 $$ res.append(s)[ FD ]
Line_14 $$ for (int i = from; i < to; i++) -->Line_17 $$ for (int i = 0; i < requiredLineNumber - to + from; i++) [ FD ]
Line_2 $$ private void appendLines(StringBuilder res, String[] srcLines, int from, int to, int requiredLineNumber) -->Line_13 $$ if (to - from <= requiredLineNumber) [ FD ]
Line_14 $$ for (int i = from; i < to; i++) -->Line_15 $$ res.append(srcLines[i]).append(myLineSeparator)[ CD ]
Line_8 $$ if (separatorsRequired-- > 0) -->Line_9 $$ res.append(myLineSeparator)[ CD ]
Line_13 $$ if (to - from <= requiredLineNumber) -->Line_17 $$ for (int i = 0; i < requiredLineNumber - to + from; i++) [ CD ]
Line_2 $$ private void appendLines(StringBuilder res, String[] srcLines, int from, int to, int requiredLineNumber) -->Line_12 $$ res.append(myLineSeparator)[ FD ]
Line_2 $$ private void appendLines(StringBuilder res, String[] srcLines, int from, int to, int requiredLineNumber) -->Line_15 $$ res.append(srcLines[i]).append(myLineSeparator)[ FD ]
Line_3 $$ if (to - from > requiredLineNumber) -->Line_4 $$ List<String> strings = compactLines(Arrays.asList(srcLines).subList(from, to), requiredLineNumber)[ CD ]
Line_5 $$ int separatorsRequired = requiredLineNumber - 1-->Line_8 $$ if (separatorsRequired-- > 0) [ FD ]
Line_17 $$ for (int i = 0; i < requiredLineNumber - to + from; i++) -->Line_18 $$ res.append(myLineSeparator)[ CD ]
Line_3 $$ if (to - from > requiredLineNumber) -->Line_5 $$ int separatorsRequired = requiredLineNumber - 1[ CD ]
Line_2 $$ private void appendLines(StringBuilder res, String[] srcLines, int from, int to, int requiredLineNumber) -->Line_4 $$ List<String> strings = compactLines(Arrays.asList(srcLines).subList(from, to), requiredLineNumber)[ FD ]
Line_3 $$ if (to - from > requiredLineNumber) -->Line_12 $$ res.append(myLineSeparator)[ CD ]
Line_13 $$ if (to - from <= requiredLineNumber) -->Line_14 $$ for (int i = from; i < to; i++) [ CD ]
Line_2 $$ private void appendLines(StringBuilder res, String[] srcLines, int from, int to, int requiredLineNumber) -->Line_14 $$ for (int i = from; i < to; i++) [ FD ]
