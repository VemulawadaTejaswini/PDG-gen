Line_5 $$ for (String part : args) -->Line_12 $$ uappend(sb, part)[ FD ]
Line_2 $$ public static String ujoin(String pathPrefix, String... args) -->Line_11 $$ uappend(sb, pathPrefix)[ FD ]
Line_5 $$ for (String part : args) -->Line_9 $$ sb.append(part)[ FD ]
Line_5 $$ for (String part : args) -->Line_8 $$ if (part.startsWith("#") || isAbsUrl(part)) [ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_12 $$ uappend(sb, part)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_9 $$ sb.append(part)[ FD ]
Line_8 $$ if (part.startsWith("#") || isAbsUrl(part)) -->Line_9 $$ sb.append(part)[ CD ]
Line_8 $$ if (part.startsWith("#") || isAbsUrl(part)) -->Line_11 $$ uappend(sb, pathPrefix)[ CD ]
Line_4 $$ boolean first = true-->Line_7 $$ first = false[ FD ]
Line_2 $$ public static String ujoin(String pathPrefix, String... args) -->Line_18 $$ return sb.toString()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_15 $$ uappend(sb, part)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_11 $$ uappend(sb, pathPrefix)[ FD ]
Line_6 $$ if (first) -->Line_7 $$ first = false[ CD ]
Line_5 $$ for (String part : args) -->Line_15 $$ uappend(sb, part)[ FD ]
Line_2 $$ public static String ujoin(String pathPrefix, String... args) -->Line_4 $$ boolean first = true[ CD ]
Line_6 $$ if (first) -->Line_8 $$ if (part.startsWith("#") || isAbsUrl(part)) [ CD ]
Line_2 $$ public static String ujoin(String pathPrefix, String... args) -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_18 $$ return sb.toString()[ FD ]
Line_8 $$ if (part.startsWith("#") || isAbsUrl(part)) -->Line_12 $$ uappend(sb, part)[ CD ]
Line_6 $$ if (first) -->Line_15 $$ uappend(sb, part)[ CD ]
