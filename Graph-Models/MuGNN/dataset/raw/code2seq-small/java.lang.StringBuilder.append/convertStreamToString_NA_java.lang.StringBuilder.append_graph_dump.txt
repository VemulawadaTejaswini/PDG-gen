Line_2 $$ private static String convertStreamToString(InputStream is) -->Line_3 $$ if (is != null) [ FD ]
Line_2 $$ private static String convertStreamToString(InputStream is) -->Line_3 $$ if (is != null) [ CD ]
Line_3 $$ if (is != null) -->Line_4 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_9 $$ while ((line = reader.readLine()) != null) -->Line_10 $$ sb.append(line).append('\n')[ FD ]
Line_9 $$ while ((line = reader.readLine()) != null) -->Line_10 $$ sb.append(line).append('\n')[ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_10 $$ sb.append(line).append('\n')[ FD ]
Line_3 $$ if (is != null) -->Line_20 $$ return ""[ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_18 $$ return sb.toString()[ FD ]
Line_3 $$ if (is != null) -->Line_18 $$ return sb.toString()[ CD ]
Line_8 $$ String line-->Line_9 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_6 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(is, CharsetToolkit.UTF8_CHARSET))-->Line_9 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_6 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(is, CharsetToolkit.UTF8_CHARSET))-->Line_13 $$ reader.close()[ FD ]
Line_8 $$ String line-->Line_10 $$ sb.append(line).append('\n')[ FD ]
