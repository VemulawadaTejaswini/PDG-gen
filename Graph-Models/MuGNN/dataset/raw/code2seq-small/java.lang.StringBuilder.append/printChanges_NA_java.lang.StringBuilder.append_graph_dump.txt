Line_3 $$ final StringBuilder sb = new StringBuilder("Data: ").append(data.myLocalPath).append(" exists: ").append(new File(data.myLocalPath).exists()).append(" Changes: ")-->Line_9 $$ return sb.toString()[ FD ]
Line_6 $$ final File ioFile = cr.getFile().getIOFile()-->Line_7 $$ sb.append("'").append(ioFile.getAbsolutePath()).append("' exists: ").append(ioFile.exists()).append(" | ")[ FD ]
Line_4 $$ for (Change change : changes) -->Line_5 $$ final ContentRevision cr = change.getAfterRevision() == null ? change.getBeforeRevision() : change.getAfterRevision()[ FD ]
Line_3 $$ final StringBuilder sb = new StringBuilder("Data: ").append(data.myLocalPath).append(" exists: ").append(new File(data.myLocalPath).exists()).append(" Changes: ")-->Line_7 $$ sb.append("'").append(ioFile.getAbsolutePath()).append("' exists: ").append(ioFile.exists()).append(" | ")[ FD ]
Line_5 $$ final ContentRevision cr = change.getAfterRevision() == null ? change.getBeforeRevision() : change.getAfterRevision()-->Line_6 $$ final File ioFile = cr.getFile().getIOFile()[ FD ]
Line_2 $$ private static String printChanges(final Data data, final Collection<Change> changes) -->Line_9 $$ return sb.toString()[ CD ]
Line_2 $$ private static String printChanges(final Data data, final Collection<Change> changes) -->Line_3 $$ final StringBuilder sb = new StringBuilder("Data: ").append(data.myLocalPath).append(" exists: ").append(new File(data.myLocalPath).exists()).append(" Changes: ")[ CD ]
