Line_2 $$ private String formatInternalTestExecutionRequest() -->Line_3 $$ StringBuilder requestDetails = new StringBuilder(INDENT).append("Requested tests:")[ CD ]
Line_11 $$ final String methodName = internalJvmTestRequest.getMethodName()-->Line_12 $$ if (methodName == null) [ FD ]
Line_2 $$ private String formatInternalTestExecutionRequest() -->Line_18 $$ return requestDetails.toString()[ CD ]
Line_3 $$ StringBuilder requestDetails = new StringBuilder(INDENT).append("Requested tests:")-->Line_6 $$ requestDetails.append(" (Task: '").append(((DefaultTestDescriptor) internalTestDescriptor).getTaskPath()).append("')")[ FD ]
Line_10 $$ final String className = internalJvmTestRequest.getClassName()-->Line_13 $$ requestDetails.append("\n").append(Strings.repeat(INDENT, 2)).append("Test class ").append(className)[ FD ]
Line_3 $$ StringBuilder requestDetails = new StringBuilder(INDENT).append("Requested tests:")-->Line_18 $$ return requestDetails.toString()[ FD ]
Line_12 $$ if (methodName == null) -->Line_13 $$ requestDetails.append("\n").append(Strings.repeat(INDENT, 2)).append("Test class ").append(className)[ CD ]
Line_3 $$ StringBuilder requestDetails = new StringBuilder(INDENT).append("Requested tests:")-->Line_15 $$ requestDetails.append("\n").append(Strings.repeat(INDENT, 2)).append("Test method ").append(className).append(".").append(methodName).append("()")[ FD ]
Line_2 $$ private String formatInternalTestExecutionRequest() -->Line_8 $$ final Collection<InternalJvmTestRequest> internalJvmTestRequests = internalTestExecutionRequest.getInternalJvmTestRequests()[ CD ]
Line_3 $$ StringBuilder requestDetails = new StringBuilder(INDENT).append("Requested tests:")-->Line_13 $$ requestDetails.append("\n").append(Strings.repeat(INDENT, 2)).append("Test class ").append(className)[ FD ]
Line_3 $$ StringBuilder requestDetails = new StringBuilder(INDENT).append("Requested tests:")-->Line_5 $$ requestDetails.append("\n").append(Strings.repeat(INDENT, 2)).append(internalTestDescriptor.getDisplayName())[ FD ]
Line_11 $$ final String methodName = internalJvmTestRequest.getMethodName()-->Line_15 $$ requestDetails.append("\n").append(Strings.repeat(INDENT, 2)).append("Test method ").append(className).append(".").append(methodName).append("()")[ FD ]
Line_4 $$ for (InternalTestDescriptor internalTestDescriptor : internalTestExecutionRequest.getTestExecutionDescriptors()) -->Line_5 $$ requestDetails.append("\n").append(Strings.repeat(INDENT, 2)).append(internalTestDescriptor.getDisplayName())[ FD ]
Line_9 $$ for (InternalJvmTestRequest internalJvmTestRequest : internalJvmTestRequests) -->Line_10 $$ final String className = internalJvmTestRequest.getClassName()[ FD ]
Line_12 $$ if (methodName == null) -->Line_15 $$ requestDetails.append("\n").append(Strings.repeat(INDENT, 2)).append("Test method ").append(className).append(".").append(methodName).append("()")[ CD ]
Line_10 $$ final String className = internalJvmTestRequest.getClassName()-->Line_15 $$ requestDetails.append("\n").append(Strings.repeat(INDENT, 2)).append("Test method ").append(className).append(".").append(methodName).append("()")[ FD ]
Line_9 $$ for (InternalJvmTestRequest internalJvmTestRequest : internalJvmTestRequests) -->Line_11 $$ final String methodName = internalJvmTestRequest.getMethodName()[ FD ]
