Line_3 $$ final StringBuilder builder = new StringBuilder()-->Line_7 $$ final int len = builder.length()[ FD ]
Line_2 $$ public static String concatPaths(String... paths) -->Line_3 $$ final StringBuilder builder = new StringBuilder()[ CD ]
Line_2 $$ public static String concatPaths(String... paths) -->Line_13 $$ return builder.toString()[ CD ]
Line_4 $$ for (String path : paths) -->Line_11 $$ builder.append(len != 0 ? trimForwardSlashes(path) : path)[ FD ]
Line_3 $$ final StringBuilder builder = new StringBuilder()-->Line_9 $$ builder.append('/')[ FD ]
Line_8 $$ if (len > 0 && builder.charAt(len - 1) != '/' && builder.charAt(len - 1) != File.separatorChar) -->Line_9 $$ builder.append('/')[ CD ]
Line_3 $$ final StringBuilder builder = new StringBuilder()-->Line_8 $$ if (len > 0 && builder.charAt(len - 1) != '/' && builder.charAt(len - 1) != File.separatorChar) [ FD ]
Line_3 $$ final StringBuilder builder = new StringBuilder()-->Line_13 $$ return builder.toString()[ FD ]
Line_4 $$ for (String path : paths) -->Line_5 $$ if (path.length() == 0)[ FD ]
Line_3 $$ final StringBuilder builder = new StringBuilder()-->Line_11 $$ builder.append(len != 0 ? trimForwardSlashes(path) : path)[ FD ]
