Line_6 $$ final RecoveryState recoveryState = indexShard.recoveryState()-->Line_10 $$ sb.append("recovery completed from ").append("shard_store").append(", took [").append(timeValueMillis(recoveryState.getTimer().time())).append("]\n")[ FD ]
Line_8 $$ if (logger.isTraceEnabled()) -->Line_13 $$ sb.append("             : recovered_files [").append(index.recoveredFileCount()).append("] with total_size [").append(new ByteSizeValue(index.recoveredBytes())).append("]\n")[ CD ]
Line_9 $$ StringBuilder sb = new StringBuilder()-->Line_15 $$ sb.append("    verify_index    : took [").append(TimeValue.timeValueMillis(recoveryState.getVerifyIndex().time())).append("], check_index [").append(timeValueMillis(recoveryState.getVerifyIndex().checkIndexTime())).append("]\n")[ FD ]
Line_8 $$ if (logger.isTraceEnabled()) -->Line_14 $$ sb.append("             : reusing_files   [").append(index.reusedFileCount()).append("] with total_size [").append(new ByteSizeValue(index.reusedBytes())).append("]\n")[ CD ]
Line_2 $$ private boolean executeRecovery(final IndexShard indexShard, Runnable recoveryRunnable) throws IndexShardRecoveryException -->Line_4 $$ recoveryRunnable.run()[ FD ]
Line_9 $$ StringBuilder sb = new StringBuilder()-->Line_13 $$ sb.append("             : recovered_files [").append(index.recoveredFileCount()).append("] with total_size [").append(new ByteSizeValue(index.recoveredBytes())).append("]\n")[ FD ]
Line_18 $$ if (logger.isDebugEnabled()) -->Line_19 $$ logger.debug("recovery completed from [shard_store], took [[ CD ]
Line_9 $$ StringBuilder sb = new StringBuilder()-->Line_14 $$ sb.append("             : reusing_files   [").append(index.reusedFileCount()).append("] with total_size [").append(new ByteSizeValue(index.reusedBytes())).append("]\n")[ FD ]
Line_9 $$ StringBuilder sb = new StringBuilder()-->Line_12 $$ sb.append("    index    : files           [").append(index.totalFileCount()).append("] with total_size [").append(new ByteSizeValue(index.totalBytes())).append("], took[").append(TimeValue.timeValueMillis(index.time())).append("]\n")[ FD ]
Line_6 $$ final RecoveryState recoveryState = indexShard.recoveryState()-->Line_19 $$ logger.debug("recovery completed from [shard_store], took [[ FD ]
Line_6 $$ final RecoveryState recoveryState = indexShard.recoveryState()-->Line_11 $$ RecoveryState.Index index = recoveryState.getIndex()[ FD ]
Line_26 $$ if ((e.getCause() instanceof IndexShardClosedException) || (e.getCause() instanceof IndexShardNotStartedException)) -->Line_27 $$ return false[ CD ]
Line_2 $$ private boolean executeRecovery(final IndexShard indexShard, Runnable recoveryRunnable) throws IndexShardRecoveryException -->Line_5 $$ final IndexShardState shardState = indexShard.state()[ FD ]
Line_8 $$ if (logger.isTraceEnabled()) -->Line_11 $$ RecoveryState.Index index = recoveryState.getIndex()[ CD ]
Line_8 $$ if (logger.isTraceEnabled()) -->Line_18 $$ if (logger.isDebugEnabled()) [ CD ]
Line_2 $$ private boolean executeRecovery(final IndexShard indexShard, Runnable recoveryRunnable) throws IndexShardRecoveryException -->Line_23 $$ if (indexShard.state() == IndexShardState.CLOSED) [ FD ]
Line_2 $$ private boolean executeRecovery(final IndexShard indexShard, Runnable recoveryRunnable) throws IndexShardRecoveryException -->Line_37 $$ return false[ CD ]
Line_32 $$ if (indexShard.state() == IndexShardState.CLOSED) -->Line_33 $$ return false[ CD ]
Line_8 $$ if (logger.isTraceEnabled()) -->Line_15 $$ sb.append("    verify_index    : took [").append(TimeValue.timeValueMillis(recoveryState.getVerifyIndex().time())).append("], check_index [").append(timeValueMillis(recoveryState.getVerifyIndex().checkIndexTime())).append("]\n")[ CD ]
Line_2 $$ private boolean executeRecovery(final IndexShard indexShard, Runnable recoveryRunnable) throws IndexShardRecoveryException -->Line_6 $$ final RecoveryState recoveryState = indexShard.recoveryState()[ FD ]
Line_8 $$ if (logger.isTraceEnabled()) -->Line_16 $$ sb.append("    translog : number_of_operations [").append(recoveryState.getTranslog().recoveredOperations()).append("], took [").append(TimeValue.timeValueMillis(recoveryState.getTranslog().time())).append("]")[ CD ]
Line_8 $$ if (logger.isTraceEnabled()) -->Line_10 $$ sb.append("recovery completed from ").append("shard_store").append(", took [").append(timeValueMillis(recoveryState.getTimer().time())).append("]\n")[ CD ]
Line_23 $$ if (indexShard.state() == IndexShardState.CLOSED) -->Line_24 $$ return false[ CD ]
Line_11 $$ RecoveryState.Index index = recoveryState.getIndex()-->Line_13 $$ sb.append("             : recovered_files [").append(index.recoveredFileCount()).append("] with total_size [").append(new ByteSizeValue(index.recoveredBytes())).append("]\n")[ FD ]
Line_9 $$ StringBuilder sb = new StringBuilder()-->Line_17 $$ logger.trace(sb.toString())[ FD ]
Line_8 $$ if (logger.isTraceEnabled()) -->Line_12 $$ sb.append("    index    : files           [").append(index.totalFileCount()).append("] with total_size [").append(new ByteSizeValue(index.totalBytes())).append("], took[").append(TimeValue.timeValueMillis(index.time())).append("]\n")[ CD ]
Line_6 $$ final RecoveryState recoveryState = indexShard.recoveryState()-->Line_16 $$ sb.append("    translog : number_of_operations [").append(recoveryState.getTranslog().recoveredOperations()).append("], took [").append(TimeValue.timeValueMillis(recoveryState.getTranslog().time())).append("]")[ FD ]
Line_9 $$ StringBuilder sb = new StringBuilder()-->Line_16 $$ sb.append("    translog : number_of_operations [").append(recoveryState.getTranslog().recoveredOperations()).append("], took [").append(TimeValue.timeValueMillis(recoveryState.getTranslog().time())).append("]")[ FD ]
Line_6 $$ final RecoveryState recoveryState = indexShard.recoveryState()-->Line_15 $$ sb.append("    verify_index    : took [").append(TimeValue.timeValueMillis(recoveryState.getVerifyIndex().time())).append("], check_index [").append(timeValueMillis(recoveryState.getVerifyIndex().checkIndexTime())).append("]\n")[ FD ]
Line_8 $$ if (logger.isTraceEnabled()) -->Line_17 $$ logger.trace(sb.toString())[ CD ]
Line_8 $$ if (logger.isTraceEnabled()) -->Line_9 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ private boolean executeRecovery(final IndexShard indexShard, Runnable recoveryRunnable) throws IndexShardRecoveryException -->Line_32 $$ if (indexShard.state() == IndexShardState.CLOSED) [ FD ]
Line_11 $$ RecoveryState.Index index = recoveryState.getIndex()-->Line_14 $$ sb.append("             : reusing_files   [").append(index.reusedFileCount()).append("] with total_size [").append(new ByteSizeValue(index.reusedBytes())).append("]\n")[ FD ]
Line_9 $$ StringBuilder sb = new StringBuilder()-->Line_10 $$ sb.append("recovery completed from ").append("shard_store").append(", took [").append(timeValueMillis(recoveryState.getTimer().time())).append("]\n")[ FD ]
Line_11 $$ RecoveryState.Index index = recoveryState.getIndex()-->Line_12 $$ sb.append("    index    : files           [").append(index.totalFileCount()).append("] with total_size [").append(new ByteSizeValue(index.totalBytes())).append("], took[").append(TimeValue.timeValueMillis(index.time())).append("]\n")[ FD ]
