Line_8 $$ StringBuilder modulesBuilder = new StringBuilder()-->Line_10 $$ modulesBuilder.append("<br>\"")[ FD ]
Line_3 $$ if (!ApplicationManager.getApplication().isHeadlessEnvironment() && !modulesWithUnknownTypes.isEmpty()) -->Line_5 $$ if (modulesWithUnknownTypes.size() == 1) [ CD ]
Line_5 $$ if (modulesWithUnknownTypes.size() == 1) -->Line_6 $$ message = ProjectBundle.message("module.unknown.type.single.error", modulesWithUnknownTypes.get(0).getName(), ModuleType.get(modulesWithUnknownTypes.get(0)).getId())[ CD ]
Line_8 $$ StringBuilder modulesBuilder = new StringBuilder()-->Line_11 $$ modulesBuilder.append(module.getName()).append("\" (type '").append(ModuleType.get(module).getId()).append("')")[ FD ]
Line_4 $$ String message-->Line_6 $$ message = ProjectBundle.message("module.unknown.type.single.error", modulesWithUnknownTypes.get(0).getName(), ModuleType.get(modulesWithUnknownTypes.get(0)).getId())[ FD ]
Line_5 $$ if (modulesWithUnknownTypes.size() == 1) -->Line_14 $$ message = ProjectBundle.message("module.unknown.type.multiple.error", modulesBuilder.toString())[ CD ]
Line_8 $$ StringBuilder modulesBuilder = new StringBuilder()-->Line_13 $$ modulesBuilder.append("<br>")[ FD ]
Line_5 $$ if (modulesWithUnknownTypes.size() == 1) -->Line_13 $$ modulesBuilder.append("<br>")[ CD ]
Line_2 $$ protected void showUnknownModuleTypeNotification(@NotNull List<Module> modulesWithUnknownTypes) -->Line_5 $$ if (modulesWithUnknownTypes.size() == 1) [ FD ]
Line_5 $$ if (modulesWithUnknownTypes.size() == 1) -->Line_8 $$ StringBuilder modulesBuilder = new StringBuilder()[ CD ]
Line_2 $$ protected void showUnknownModuleTypeNotification(@NotNull List<Module> modulesWithUnknownTypes) -->Line_6 $$ message = ProjectBundle.message("module.unknown.type.single.error", modulesWithUnknownTypes.get(0).getName(), ModuleType.get(modulesWithUnknownTypes.get(0)).getId())[ FD ]
Line_4 $$ String message-->Line_14 $$ message = ProjectBundle.message("module.unknown.type.multiple.error", modulesBuilder.toString())[ FD ]
Line_9 $$ for (final Module module : modulesWithUnknownTypes) -->Line_11 $$ modulesBuilder.append(module.getName()).append("\" (type '").append(ModuleType.get(module).getId()).append("')")[ FD ]
Line_2 $$ protected void showUnknownModuleTypeNotification(@NotNull List<Module> modulesWithUnknownTypes) -->Line_3 $$ if (!ApplicationManager.getApplication().isHeadlessEnvironment() && !modulesWithUnknownTypes.isEmpty()) [ FD ]
Line_3 $$ if (!ApplicationManager.getApplication().isHeadlessEnvironment() && !modulesWithUnknownTypes.isEmpty()) -->Line_16 $$ Notifications.Bus.notify(new Notification("Module Manager", ProjectBundle.message("module.unknown.type.title"), message, NotificationType.WARNING), myProject)[ CD ]
Line_3 $$ if (!ApplicationManager.getApplication().isHeadlessEnvironment() && !modulesWithUnknownTypes.isEmpty()) -->Line_4 $$ String message[ CD ]
Line_8 $$ StringBuilder modulesBuilder = new StringBuilder()-->Line_14 $$ message = ProjectBundle.message("module.unknown.type.multiple.error", modulesBuilder.toString())[ FD ]
Line_2 $$ protected void showUnknownModuleTypeNotification(@NotNull List<Module> modulesWithUnknownTypes) -->Line_3 $$ if (!ApplicationManager.getApplication().isHeadlessEnvironment() && !modulesWithUnknownTypes.isEmpty()) [ CD ]
Line_6 $$ message = ProjectBundle.message("module.unknown.type.single.error", modulesWithUnknownTypes.get(0).getName(), ModuleType.get(modulesWithUnknownTypes.get(0)).getId())-->Line_14 $$ message = ProjectBundle.message("module.unknown.type.multiple.error", modulesBuilder.toString())[ FD ]
