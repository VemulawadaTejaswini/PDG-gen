Line_2 $$ private static void genForPart(StringBuilder builder, GroovyPsiElement part, final Generator visitor) -->Line_7 $$ builder.append(visitor.getBuilder())[ FD ]
Line_2 $$ private static void genForPart(StringBuilder builder, GroovyPsiElement part, final Generator visitor) -->Line_7 $$ builder.append(visitor.getBuilder())[ CD ]
Line_4 $$ for (String statement : visitor.getContext().myStatements) -->Line_5 $$ builder.append(statement).append(", ")[ FD ]
Line_2 $$ private static void genForPart(StringBuilder builder, GroovyPsiElement part, final Generator visitor) -->Line_3 $$ part.accept(visitor)[ FD ]
Line_2 $$ private static void genForPart(StringBuilder builder, GroovyPsiElement part, final Generator visitor) -->Line_4 $$ for (String statement : visitor.getContext().myStatements) [ FD ]
Line_2 $$ private static void genForPart(StringBuilder builder, GroovyPsiElement part, final Generator visitor) -->Line_5 $$ builder.append(statement).append(", ")[ FD ]
Line_2 $$ private static void genForPart(StringBuilder builder, GroovyPsiElement part, final Generator visitor) -->Line_3 $$ part.accept(visitor)[ CD ]
