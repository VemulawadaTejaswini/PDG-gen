Line_2 $$ protected String getDistanceString(LeafReaderContext ctx, int docId) -->Line_8 $$ if (num > 0) [ CD ]
Line_2 $$ protected String getDistanceString(LeafReaderContext ctx, int docId) -->Line_6 $$ doubleValues.setDocument(docId)[ FD ]
Line_10 $$ double value = doubleValues.valueAt(i)-->Line_12 $$ values.append(value).append("(=doc value) - ").append(origin).append("(=origin))) - ").append(offset).append("(=offset), 0)")[ FD ]
Line_3 $$ StringBuilder values = new StringBuilder(mode.name())-->Line_11 $$ values.append("Math.max(Math.abs(")[ FD ]
Line_3 $$ StringBuilder values = new StringBuilder(mode.name())-->Line_21 $$ return values.toString()[ FD ]
Line_2 $$ protected String getDistanceString(LeafReaderContext ctx, int docId) -->Line_7 $$ final int num = doubleValues.count()[ CD ]
Line_8 $$ if (num > 0) -->Line_9 $$ for (int i = 0; i < num; i++) [ CD ]
Line_9 $$ for (int i = 0; i < num; i++) -->Line_11 $$ values.append("Math.max(Math.abs(")[ CD ]
Line_2 $$ protected String getDistanceString(LeafReaderContext ctx, int docId) -->Line_5 $$ final SortedNumericDoubleValues doubleValues = fieldData.load(ctx).getDoubleValues()[ FD ]
Line_9 $$ for (int i = 0; i < num; i++) -->Line_10 $$ double value = doubleValues.valueAt(i)[ CD ]
Line_5 $$ final SortedNumericDoubleValues doubleValues = fieldData.load(ctx).getDoubleValues()-->Line_10 $$ double value = doubleValues.valueAt(i)[ FD ]
Line_9 $$ for (int i = 0; i < num; i++) -->Line_12 $$ values.append(value).append("(=doc value) - ").append(origin).append("(=origin))) - ").append(offset).append("(=offset), 0)")[ CD ]
Line_3 $$ StringBuilder values = new StringBuilder(mode.name())-->Line_12 $$ values.append(value).append("(=doc value) - ").append(origin).append("(=origin))) - ").append(offset).append("(=offset), 0)")[ FD ]
Line_5 $$ final SortedNumericDoubleValues doubleValues = fieldData.load(ctx).getDoubleValues()-->Line_7 $$ final int num = doubleValues.count()[ FD ]
Line_2 $$ protected String getDistanceString(LeafReaderContext ctx, int docId) -->Line_20 $$ values.append("]")[ CD ]
Line_9 $$ for (int i = 0; i < num; i++) -->Line_10 $$ double value = doubleValues.valueAt(i)[ FD ]
Line_2 $$ protected String getDistanceString(LeafReaderContext ctx, int docId) -->Line_21 $$ return values.toString()[ CD ]
Line_2 $$ protected String getDistanceString(LeafReaderContext ctx, int docId) -->Line_6 $$ doubleValues.setDocument(docId)[ CD ]
Line_7 $$ final int num = doubleValues.count()-->Line_8 $$ if (num > 0) [ FD ]
Line_3 $$ StringBuilder values = new StringBuilder(mode.name())-->Line_4 $$ values.append("[")[ FD ]
Line_3 $$ StringBuilder values = new StringBuilder(mode.name())-->Line_18 $$ values.append("0.0")[ FD ]
Line_2 $$ protected String getDistanceString(LeafReaderContext ctx, int docId) -->Line_3 $$ StringBuilder values = new StringBuilder(mode.name())[ CD ]
Line_9 $$ for (int i = 0; i < num; i++) -->Line_13 $$ if (i != num - 1) [ FD ]
Line_13 $$ if (i != num - 1) -->Line_14 $$ values.append(", ")[ CD ]
Line_2 $$ protected String getDistanceString(LeafReaderContext ctx, int docId) -->Line_4 $$ values.append("[")[ CD ]
Line_5 $$ final SortedNumericDoubleValues doubleValues = fieldData.load(ctx).getDoubleValues()-->Line_6 $$ doubleValues.setDocument(docId)[ FD ]
Line_9 $$ for (int i = 0; i < num; i++) -->Line_13 $$ if (i != num - 1) [ CD ]
Line_8 $$ if (num > 0) -->Line_18 $$ values.append("0.0")[ CD ]
Line_3 $$ StringBuilder values = new StringBuilder(mode.name())-->Line_14 $$ values.append(", ")[ FD ]
Line_2 $$ protected String getDistanceString(LeafReaderContext ctx, int docId) -->Line_5 $$ final SortedNumericDoubleValues doubleValues = fieldData.load(ctx).getDoubleValues()[ CD ]
Line_7 $$ final int num = doubleValues.count()-->Line_9 $$ for (int i = 0; i < num; i++) [ FD ]
Line_3 $$ StringBuilder values = new StringBuilder(mode.name())-->Line_20 $$ values.append("]")[ FD ]
