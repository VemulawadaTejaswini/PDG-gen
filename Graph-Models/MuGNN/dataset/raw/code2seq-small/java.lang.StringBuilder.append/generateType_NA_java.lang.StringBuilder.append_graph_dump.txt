Line_100 $$ length += 3-->Line_102 $$ length += generateType(buffer, psiType, context, true, useShortNames)[ FD ]
Line_48 $$ String name = useShortNames ? ((PsiClassType) type).rawType().getPresentableText() : qName-->Line_51 $$ length = generateLink(buffer, name, null, context, false)[ FD ]
Line_49 $$ int length-->Line_60 $$ length += 1[ FD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_83 $$ if (!generateLink) [ FD ]
Line_34 $$ PsiClass psiClass = result.getElement()-->Line_58 $$ PsiTypeParameter[] params = psiClass.getTypeParameters()[ FD ]
Line_51 $$ length = generateLink(buffer, name, null, context, false)-->Line_74 $$ length += 1[ FD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_23 $$ buffer.append("?")[ FD ]
Line_32 $$ if (type instanceof PsiClassType) -->Line_50 $$ if (generateLink) [ CD ]
Line_32 $$ if (type instanceof PsiClassType) -->Line_33 $$ PsiClassType.ClassResolveResult result = ((PsiClassType) type).resolveGenerics()[ CD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_82 $$ if (type instanceof PsiDisjunctionType || type instanceof PsiIntersectionType) [ CD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_86 $$ buffer.append(text)[ FD ]
Line_8 $$ if (type instanceof PsiArrayType) -->Line_10 $$ if (type instanceof PsiEllipsisType) [ CD ]
Line_75 $$ if (goodSubst) -->Line_76 $$ String text = subst.toString()[ CD ]
Line_56 $$ if (psiClass.hasTypeParameters()) -->Line_75 $$ if (goodSubst) [ CD ]
Line_60 $$ length += 1-->Line_100 $$ length += 3[ FD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_21 $$ if (type instanceof PsiWildcardType) [ CD ]
Line_69 $$ if (i < params.length - 1) -->Line_70 $$ subst.append(", ")[ CD ]
Line_75 $$ if (goodSubst) -->Line_77 $$ buffer.append(text)[ CD ]
Line_3 $$ if (type instanceof PsiPrimitiveType) -->Line_4 $$ String text = StringUtil.escapeXml(type.getCanonicalText())[ CD ]
Line_32 $$ if (type instanceof PsiClassType) -->Line_35 $$ PsiSubstitutor psiSubst = result.getSubstitutor()[ CD ]
Line_56 $$ if (psiClass.hasTypeParameters()) -->Line_62 $$ for (int i = 0; i < params.length; i++) [ CD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_14 $$ buffer.append("[]")[ FD ]
Line_64 $$ if (t == null) -->Line_65 $$ goodSubst = false[ CD ]
Line_83 $$ if (!generateLink) -->Line_91 $$ if (type instanceof PsiIntersectionType) [ CD ]
Line_62 $$ for (int i = 0; i < params.length; i++) -->Line_68 $$ length += generateType(subst, t, context, generateLink, useShortNames)[ CD ]
Line_32 $$ if (type instanceof PsiClassType) -->Line_36 $$ if (psiClass == null) [ CD ]
Line_24 $$ PsiType bound = wt.getBound()-->Line_28 $$ return generateType(buffer, bound, context, generateLink, useShortNames) + 1 + keyword.length()[ FD ]
Line_74 $$ length += 1-->Line_100 $$ length += 3[ FD ]
Line_36 $$ if (psiClass == null) -->Line_37 $$ String canonicalText = type.getCanonicalText()[ CD ]
Line_32 $$ if (type instanceof PsiClassType) -->Line_56 $$ if (psiClass.hasTypeParameters()) [ CD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_54 $$ length = buffer.length()[ FD ]
Line_4 $$ String text = StringUtil.escapeXml(type.getCanonicalText())-->Line_39 $$ buffer.append(text)[ FD ]
Line_68 $$ length += generateType(subst, t, context, generateLink, useShortNames)-->Line_74 $$ length += 1[ FD ]
Line_25 $$ if (bound != null) -->Line_26 $$ final String keyword = wt.isExtends() ? " extends " : " super "[ CD ]
Line_32 $$ if (type instanceof PsiClassType) -->Line_49 $$ int length[ CD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_68 $$ length += generateType(subst, t, context, generateLink, useShortNames)[ FD ]
Line_4 $$ String text = StringUtil.escapeXml(type.getCanonicalText())-->Line_77 $$ buffer.append(text)[ FD ]
Line_32 $$ if (type instanceof PsiClassType) -->Line_48 $$ String name = useShortNames ? ((PsiClassType) type).rawType().getPresentableText() : qName[ CD ]
Line_50 $$ if (generateLink) -->Line_53 $$ buffer.append(name)[ CD ]
Line_60 $$ length += 1-->Line_68 $$ length += generateType(subst, t, context, generateLink, useShortNames)[ FD ]
Line_4 $$ String text = StringUtil.escapeXml(type.getCanonicalText())-->Line_6 $$ return text.length()[ FD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_51 $$ length = generateLink(buffer, name, null, context, false)[ FD ]
Line_83 $$ if (!generateLink) -->Line_85 $$ final String text = StringUtil.escapeXml(canonicalText)[ CD ]
Line_49 $$ int length-->Line_102 $$ length += generateType(buffer, psiType, context, true, useShortNames)[ FD ]
Line_60 $$ length += 1-->Line_74 $$ length += 1[ FD ]
Line_4 $$ String text = StringUtil.escapeXml(type.getCanonicalText())-->Line_46 $$ return text.length()[ FD ]
Line_68 $$ length += generateType(subst, t, context, generateLink, useShortNames)-->Line_100 $$ length += 3[ FD ]
Line_37 $$ String canonicalText = type.getCanonicalText()-->Line_87 $$ return canonicalText.length()[ FD ]
Line_10 $$ if (type instanceof PsiEllipsisType) -->Line_15 $$ return rest + 2[ CD ]
Line_25 $$ if (bound != null) -->Line_28 $$ return generateType(buffer, bound, context, generateLink, useShortNames) + 1 + keyword.length()[ CD ]
Line_3 $$ if (type instanceof PsiPrimitiveType) -->Line_6 $$ return text.length()[ CD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_102 $$ length += generateType(buffer, psiType, context, true, useShortNames)[ FD ]
Line_33 $$ PsiClassType.ClassResolveResult result = ((PsiClassType) type).resolveGenerics()-->Line_34 $$ PsiClass psiClass = result.getElement()[ FD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_28 $$ return generateType(buffer, bound, context, generateLink, useShortNames) + 1 + keyword.length()[ FD ]
Line_37 $$ String canonicalText = type.getCanonicalText()-->Line_85 $$ final String text = StringUtil.escapeXml(canonicalText)[ FD ]
Line_43 $$ if (qName == null || psiClass instanceof PsiTypeParameter) -->Line_44 $$ String text = StringUtil.escapeXml(useShortNames ? type.getPresentableText() : type.getCanonicalText())[ CD ]
Line_19 $$ type = ((PsiCapturedWildcardType) type).getWildcard()-->Line_91 $$ if (type instanceof PsiIntersectionType) [ FD ]
Line_37 $$ String canonicalText = type.getCanonicalText()-->Line_40 $$ return canonicalText.length()[ FD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_3 $$ if (type instanceof PsiPrimitiveType) [ CD ]
Line_56 $$ if (psiClass.hasTypeParameters()) -->Line_57 $$ StringBuilder subst = new StringBuilder()[ CD ]
Line_43 $$ if (qName == null || psiClass instanceof PsiTypeParameter) -->Line_46 $$ return text.length()[ CD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_11 $$ buffer.append("...")[ FD ]
Line_51 $$ length = generateLink(buffer, name, null, context, false)-->Line_54 $$ length = buffer.length()[ FD ]
Line_57 $$ StringBuilder subst = new StringBuilder()-->Line_68 $$ length += generateType(subst, t, context, generateLink, useShortNames)[ FD ]
Line_21 $$ if (type instanceof PsiWildcardType) -->Line_23 $$ buffer.append("?")[ CD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_39 $$ buffer.append(text)[ FD ]
Line_22 $$ PsiWildcardType wt = (PsiWildcardType) type-->Line_26 $$ final String keyword = wt.isExtends() ? " extends " : " super "[ FD ]
Line_57 $$ StringBuilder subst = new StringBuilder()-->Line_70 $$ subst.append(", ")[ FD ]
Line_51 $$ length = generateLink(buffer, name, null, context, false)-->Line_100 $$ length += 3[ FD ]
Line_51 $$ length = generateLink(buffer, name, null, context, false)-->Line_60 $$ length += 1[ FD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_91 $$ if (type instanceof PsiIntersectionType) [ FD ]
Line_56 $$ if (psiClass.hasTypeParameters()) -->Line_59 $$ subst.append(LT)[ CD ]
Line_61 $$ boolean goodSubst = true-->Line_65 $$ goodSubst = false[ FD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_19 $$ type = ((PsiCapturedWildcardType) type).getWildcard()[ FD ]
Line_4 $$ String text = StringUtil.escapeXml(type.getCanonicalText())-->Line_45 $$ buffer.append(text)[ FD ]
Line_82 $$ if (type instanceof PsiDisjunctionType || type instanceof PsiIntersectionType) -->Line_83 $$ if (!generateLink) [ CD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_44 $$ String text = StringUtil.escapeXml(useShortNames ? type.getPresentableText() : type.getCanonicalText())[ FD ]
Line_22 $$ PsiWildcardType wt = (PsiWildcardType) type-->Line_24 $$ PsiType bound = wt.getBound()[ FD ]
Line_32 $$ if (type instanceof PsiClassType) -->Line_34 $$ PsiClass psiClass = result.getElement()[ CD ]
Line_54 $$ length = buffer.length()-->Line_102 $$ length += generateType(buffer, psiType, context, true, useShortNames)[ FD ]
Line_83 $$ if (!generateLink) -->Line_90 $$ final List<PsiType> componentTypes[ CD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_77 $$ buffer.append(text)[ FD ]
Line_90 $$ final List<PsiType> componentTypes-->Line_92 $$ componentTypes = Arrays.asList(((PsiIntersectionType) type).getConjuncts())[ FD ]
Line_54 $$ length = buffer.length()-->Line_68 $$ length += generateType(subst, t, context, generateLink, useShortNames)[ FD ]
Line_54 $$ length = buffer.length()-->Line_100 $$ length += 3[ FD ]
Line_83 $$ if (!generateLink) -->Line_104 $$ return length[ CD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_37 $$ String canonicalText = type.getCanonicalText()[ FD ]
Line_35 $$ PsiSubstitutor psiSubst = result.getSubstitutor()-->Line_63 $$ PsiType t = psiSubst.substitute(params[i])[ FD ]
Line_34 $$ PsiClass psiClass = result.getElement()-->Line_36 $$ if (psiClass == null) [ FD ]
Line_24 $$ PsiType bound = wt.getBound()-->Line_25 $$ if (bound != null) [ FD ]
Line_54 $$ length = buffer.length()-->Line_74 $$ length += 1[ FD ]
Line_26 $$ final String keyword = wt.isExtends() ? " extends " : " super "-->Line_27 $$ buffer.append(keyword)[ FD ]
Line_49 $$ int length-->Line_54 $$ length = buffer.length()[ FD ]
Line_49 $$ int length-->Line_74 $$ length += 1[ FD ]
Line_19 $$ type = ((PsiCapturedWildcardType) type).getWildcard()-->Line_21 $$ if (type instanceof PsiWildcardType) [ FD ]
Line_36 $$ if (psiClass == null) -->Line_40 $$ return canonicalText.length()[ CD ]
Line_10 $$ if (type instanceof PsiEllipsisType) -->Line_14 $$ buffer.append("[]")[ CD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_53 $$ buffer.append(name)[ FD ]
Line_51 $$ length = generateLink(buffer, name, null, context, false)-->Line_102 $$ length += generateType(buffer, psiType, context, true, useShortNames)[ FD ]
Line_32 $$ if (type instanceof PsiClassType) -->Line_42 $$ String qName = psiClass.getQualifiedName()[ CD ]
Line_32 $$ if (type instanceof PsiClassType) -->Line_43 $$ if (qName == null || psiClass instanceof PsiTypeParameter) [ CD ]
Line_34 $$ PsiClass psiClass = result.getElement()-->Line_42 $$ String qName = psiClass.getQualifiedName()[ FD ]
Line_34 $$ PsiClass psiClass = result.getElement()-->Line_56 $$ if (psiClass.hasTypeParameters()) [ FD ]
Line_33 $$ PsiClassType.ClassResolveResult result = ((PsiClassType) type).resolveGenerics()-->Line_35 $$ PsiSubstitutor psiSubst = result.getSubstitutor()[ FD ]
Line_57 $$ StringBuilder subst = new StringBuilder()-->Line_73 $$ subst.append(GT)[ FD ]
Line_25 $$ if (bound != null) -->Line_27 $$ buffer.append(keyword)[ CD ]
Line_43 $$ if (qName == null || psiClass instanceof PsiTypeParameter) -->Line_45 $$ buffer.append(text)[ CD ]
Line_62 $$ for (int i = 0; i < params.length; i++) -->Line_64 $$ if (t == null) [ CD ]
Line_57 $$ StringBuilder subst = new StringBuilder()-->Line_59 $$ subst.append(LT)[ FD ]
Line_83 $$ if (!generateLink) -->Line_89 $$ final String separator = type instanceof PsiDisjunctionType ? " | " : " & "[ CD ]
Line_56 $$ if (psiClass.hasTypeParameters()) -->Line_73 $$ subst.append(GT)[ CD ]
Line_56 $$ if (psiClass.hasTypeParameters()) -->Line_60 $$ length += 1[ CD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_4 $$ String text = StringUtil.escapeXml(type.getCanonicalText())[ FD ]
Line_83 $$ if (!generateLink) -->Line_86 $$ buffer.append(text)[ CD ]
Line_68 $$ length += generateType(subst, t, context, generateLink, useShortNames)-->Line_102 $$ length += generateType(buffer, psiType, context, true, useShortNames)[ FD ]
Line_56 $$ if (psiClass.hasTypeParameters()) -->Line_58 $$ PsiTypeParameter[] params = psiClass.getTypeParameters()[ CD ]
Line_8 $$ if (type instanceof PsiArrayType) -->Line_9 $$ int rest = generateType(buffer, ((PsiArrayType) type).getComponentType(), context, generateLink, useShortNames)[ CD ]
Line_63 $$ PsiType t = psiSubst.substitute(params[i])-->Line_68 $$ length += generateType(subst, t, context, generateLink, useShortNames)[ FD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_9 $$ int rest = generateType(buffer, ((PsiArrayType) type).getComponentType(), context, generateLink, useShortNames)[ FD ]
Line_21 $$ if (type instanceof PsiWildcardType) -->Line_22 $$ PsiWildcardType wt = (PsiWildcardType) type[ CD ]
Line_54 $$ length = buffer.length()-->Line_98 $$ if (length > 0) [ FD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_5 $$ buffer.append(text)[ FD ]
Line_92 $$ componentTypes = Arrays.asList(((PsiIntersectionType) type).getConjuncts())-->Line_94 $$ componentTypes = ((PsiDisjunctionType) type).getDisjunctions()[ FD ]
Line_10 $$ if (type instanceof PsiEllipsisType) -->Line_11 $$ buffer.append("...")[ CD ]
Line_60 $$ length += 1-->Line_98 $$ if (length > 0) [ FD ]
Line_21 $$ if (type instanceof PsiWildcardType) -->Line_25 $$ if (bound != null) [ CD ]
Line_56 $$ if (psiClass.hasTypeParameters()) -->Line_74 $$ length += 1[ CD ]
Line_51 $$ length = generateLink(buffer, name, null, context, false)-->Line_98 $$ if (length > 0) [ FD ]
Line_60 $$ length += 1-->Line_102 $$ length += generateType(buffer, psiType, context, true, useShortNames)[ FD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_27 $$ buffer.append(keyword)[ FD ]
Line_36 $$ if (psiClass == null) -->Line_39 $$ buffer.append(text)[ CD ]
Line_4 $$ String text = StringUtil.escapeXml(type.getCanonicalText())-->Line_86 $$ buffer.append(text)[ FD ]
Line_4 $$ String text = StringUtil.escapeXml(type.getCanonicalText())-->Line_5 $$ buffer.append(text)[ FD ]
Line_49 $$ int length-->Line_51 $$ length = generateLink(buffer, name, null, context, false)[ FD ]
Line_62 $$ for (int i = 0; i < params.length; i++) -->Line_69 $$ if (i < params.length - 1) [ CD ]
Line_57 $$ StringBuilder subst = new StringBuilder()-->Line_76 $$ String text = subst.toString()[ FD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_45 $$ buffer.append(text)[ FD ]
Line_50 $$ if (generateLink) -->Line_54 $$ length = buffer.length()[ CD ]
Line_89 $$ final String separator = type instanceof PsiDisjunctionType ? " | " : " & "-->Line_99 $$ buffer.append(separator)[ FD ]
Line_97 $$ for (PsiType psiType : componentTypes) -->Line_102 $$ length += generateType(buffer, psiType, context, true, useShortNames)[ FD ]
Line_90 $$ final List<PsiType> componentTypes-->Line_94 $$ componentTypes = ((PsiDisjunctionType) type).getDisjunctions()[ FD ]
Line_54 $$ length = buffer.length()-->Line_60 $$ length += 1[ FD ]
Line_37 $$ String canonicalText = type.getCanonicalText()-->Line_38 $$ String text = "<font color=red>" + StringUtil.escapeXml(canonicalText) + "</font>"[ FD ]
Line_21 $$ if (type instanceof PsiWildcardType) -->Line_24 $$ PsiType bound = wt.getBound()[ CD ]
Line_32 $$ if (type instanceof PsiClassType) -->Line_80 $$ return length[ CD ]
Line_19 $$ type = ((PsiCapturedWildcardType) type).getWildcard()-->Line_37 $$ String canonicalText = type.getCanonicalText()[ FD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_84 $$ String canonicalText = useShortNames ? type.getPresentableText() : type.getCanonicalText()[ FD ]
Line_19 $$ type = ((PsiCapturedWildcardType) type).getWildcard()-->Line_32 $$ if (type instanceof PsiClassType) [ FD ]
Line_51 $$ length = generateLink(buffer, name, null, context, false)-->Line_68 $$ length += generateType(subst, t, context, generateLink, useShortNames)[ FD ]
Line_3 $$ if (type instanceof PsiPrimitiveType) -->Line_5 $$ buffer.append(text)[ CD ]
Line_18 $$ if (type instanceof PsiCapturedWildcardType) -->Line_19 $$ type = ((PsiCapturedWildcardType) type).getWildcard()[ CD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_32 $$ if (type instanceof PsiClassType) [ FD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_18 $$ if (type instanceof PsiCapturedWildcardType) [ FD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_107 $$ return 0[ CD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_8 $$ if (type instanceof PsiArrayType) [ CD ]
Line_49 $$ int length-->Line_68 $$ length += generateType(subst, t, context, generateLink, useShortNames)[ FD ]
Line_26 $$ final String keyword = wt.isExtends() ? " extends " : " super "-->Line_28 $$ return generateType(buffer, bound, context, generateLink, useShortNames) + 1 + keyword.length()[ FD ]
Line_91 $$ if (type instanceof PsiIntersectionType) -->Line_94 $$ componentTypes = ((PsiDisjunctionType) type).getDisjunctions()[ CD ]
Line_62 $$ for (int i = 0; i < params.length; i++) -->Line_69 $$ if (i < params.length - 1) [ FD ]
Line_62 $$ for (int i = 0; i < params.length; i++) -->Line_63 $$ PsiType t = psiSubst.substitute(params[i])[ CD ]
Line_49 $$ int length-->Line_98 $$ if (length > 0) [ FD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_32 $$ if (type instanceof PsiClassType) [ CD ]
Line_68 $$ length += generateType(subst, t, context, generateLink, useShortNames)-->Line_98 $$ if (length > 0) [ FD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_8 $$ if (type instanceof PsiArrayType) [ FD ]
Line_48 $$ String name = useShortNames ? ((PsiClassType) type).rawType().getPresentableText() : qName-->Line_53 $$ buffer.append(name)[ FD ]
Line_10 $$ if (type instanceof PsiEllipsisType) -->Line_12 $$ return rest + 3[ CD ]
Line_50 $$ if (generateLink) -->Line_51 $$ length = generateLink(buffer, name, null, context, false)[ CD ]
Line_74 $$ length += 1-->Line_102 $$ length += generateType(buffer, psiType, context, true, useShortNames)[ FD ]
Line_91 $$ if (type instanceof PsiIntersectionType) -->Line_92 $$ componentTypes = Arrays.asList(((PsiIntersectionType) type).getConjuncts())[ CD ]
Line_63 $$ PsiType t = psiSubst.substitute(params[i])-->Line_64 $$ if (t == null) [ FD ]
Line_19 $$ type = ((PsiCapturedWildcardType) type).getWildcard()-->Line_84 $$ String canonicalText = useShortNames ? type.getPresentableText() : type.getCanonicalText()[ FD ]
Line_21 $$ if (type instanceof PsiWildcardType) -->Line_30 $$ return 1[ CD ]
Line_74 $$ length += 1-->Line_98 $$ if (length > 0) [ FD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_99 $$ buffer.append(separator)[ FD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_18 $$ if (type instanceof PsiCapturedWildcardType) [ CD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_21 $$ if (type instanceof PsiWildcardType) [ FD ]
Line_56 $$ if (psiClass.hasTypeParameters()) -->Line_61 $$ boolean goodSubst = true[ CD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_10 $$ if (type instanceof PsiEllipsisType) [ FD ]
Line_83 $$ if (!generateLink) -->Line_87 $$ return canonicalText.length()[ CD ]
Line_98 $$ if (length > 0) -->Line_100 $$ length += 3[ CD ]
Line_2 $$ public static int generateType(StringBuilder buffer, PsiType type, PsiElement context, boolean generateLink, boolean useShortNames) -->Line_3 $$ if (type instanceof PsiPrimitiveType) [ FD ]
Line_98 $$ if (length > 0) -->Line_99 $$ buffer.append(separator)[ CD ]
Line_49 $$ int length-->Line_100 $$ length += 3[ FD ]
Line_19 $$ type = ((PsiCapturedWildcardType) type).getWildcard()-->Line_44 $$ String text = StringUtil.escapeXml(useShortNames ? type.getPresentableText() : type.getCanonicalText())[ FD ]
