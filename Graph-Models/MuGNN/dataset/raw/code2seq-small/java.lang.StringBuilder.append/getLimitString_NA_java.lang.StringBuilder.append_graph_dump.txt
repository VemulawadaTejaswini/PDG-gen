Line_2 $$ public String getLimitString(String sql, boolean hasOffset) -->Line_9 $$ final StringBuilder pagingSelect = new StringBuilder(sql.length() + 100)[ CD ]
Line_2 $$ public String getLimitString(String sql, boolean hasOffset) -->Line_5 $$ if (sql.toLowerCase(Locale.ROOT).endsWith(" for update")) [ CD ]
Line_2 $$ public String getLimitString(String sql, boolean hasOffset) -->Line_6 $$ sql = sql.substring(0, sql.length() - 11)[ FD ]
Line_10 $$ if (hasOffset) -->Line_13 $$ pagingSelect.append("select * from ( ")[ CD ]
Line_2 $$ public String getLimitString(String sql, boolean hasOffset) -->Line_15 $$ pagingSelect.append(sql)[ CD ]
Line_2 $$ public String getLimitString(String sql, boolean hasOffset) -->Line_3 $$ sql = sql.trim()[ FD ]
Line_2 $$ public String getLimitString(String sql, boolean hasOffset) -->Line_3 $$ sql = sql.trim()[ CD ]
Line_5 $$ if (sql.toLowerCase(Locale.ROOT).endsWith(" for update")) -->Line_7 $$ isForUpdate = true[ CD ]
Line_3 $$ sql = sql.trim()-->Line_9 $$ final StringBuilder pagingSelect = new StringBuilder(sql.length() + 100)[ FD ]
Line_5 $$ if (sql.toLowerCase(Locale.ROOT).endsWith(" for update")) -->Line_6 $$ sql = sql.substring(0, sql.length() - 11)[ CD ]
Line_9 $$ final StringBuilder pagingSelect = new StringBuilder(sql.length() + 100)-->Line_22 $$ pagingSelect.append(" for update")[ FD ]
Line_6 $$ sql = sql.substring(0, sql.length() - 11)-->Line_15 $$ pagingSelect.append(sql)[ FD ]
Line_2 $$ public String getLimitString(String sql, boolean hasOffset) -->Line_9 $$ final StringBuilder pagingSelect = new StringBuilder(sql.length() + 100)[ FD ]
Line_16 $$ if (hasOffset) -->Line_17 $$ pagingSelect.append(" ) row_ ) where rownum_ <= ? and rownum_ > ?")[ CD ]
Line_21 $$ if (isForUpdate) -->Line_22 $$ pagingSelect.append(" for update")[ CD ]
Line_9 $$ final StringBuilder pagingSelect = new StringBuilder(sql.length() + 100)-->Line_15 $$ pagingSelect.append(sql)[ FD ]
Line_3 $$ sql = sql.trim()-->Line_6 $$ sql = sql.substring(0, sql.length() - 11)[ FD ]
Line_9 $$ final StringBuilder pagingSelect = new StringBuilder(sql.length() + 100)-->Line_17 $$ pagingSelect.append(" ) row_ ) where rownum_ <= ? and rownum_ > ?")[ FD ]
Line_10 $$ if (hasOffset) -->Line_11 $$ pagingSelect.append("select * from ( select row_.*, rownum rownum_ from ( ")[ CD ]
Line_3 $$ sql = sql.trim()-->Line_5 $$ if (sql.toLowerCase(Locale.ROOT).endsWith(" for update")) [ FD ]
Line_16 $$ if (hasOffset) -->Line_19 $$ pagingSelect.append(" ) where rownum <= ?")[ CD ]
Line_3 $$ sql = sql.trim()-->Line_15 $$ pagingSelect.append(sql)[ FD ]
Line_9 $$ final StringBuilder pagingSelect = new StringBuilder(sql.length() + 100)-->Line_11 $$ pagingSelect.append("select * from ( select row_.*, rownum rownum_ from ( ")[ FD ]
Line_2 $$ public String getLimitString(String sql, boolean hasOffset) -->Line_16 $$ if (hasOffset) [ CD ]
Line_9 $$ final StringBuilder pagingSelect = new StringBuilder(sql.length() + 100)-->Line_19 $$ pagingSelect.append(" ) where rownum <= ?")[ FD ]
Line_2 $$ public String getLimitString(String sql, boolean hasOffset) -->Line_24 $$ return pagingSelect.toString()[ CD ]
Line_2 $$ public String getLimitString(String sql, boolean hasOffset) -->Line_10 $$ if (hasOffset) [ CD ]
Line_9 $$ final StringBuilder pagingSelect = new StringBuilder(sql.length() + 100)-->Line_24 $$ return pagingSelect.toString()[ FD ]
Line_2 $$ public String getLimitString(String sql, boolean hasOffset) -->Line_15 $$ pagingSelect.append(sql)[ FD ]
Line_2 $$ public String getLimitString(String sql, boolean hasOffset) -->Line_5 $$ if (sql.toLowerCase(Locale.ROOT).endsWith(" for update")) [ FD ]
Line_4 $$ boolean isForUpdate = false-->Line_7 $$ isForUpdate = true[ FD ]
Line_2 $$ public String getLimitString(String sql, boolean hasOffset) -->Line_4 $$ boolean isForUpdate = false[ CD ]
Line_9 $$ final StringBuilder pagingSelect = new StringBuilder(sql.length() + 100)-->Line_13 $$ pagingSelect.append("select * from ( ")[ FD ]
Line_6 $$ sql = sql.substring(0, sql.length() - 11)-->Line_9 $$ final StringBuilder pagingSelect = new StringBuilder(sql.length() + 100)[ FD ]
Line_2 $$ public String getLimitString(String sql, boolean hasOffset) -->Line_21 $$ if (isForUpdate) [ CD ]
