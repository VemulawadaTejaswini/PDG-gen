Line_2 $$ private static StringBuilder createNewLeafChars(final ASTNode leafElement, final TextRange textRange, final String whiteSpace) -->Line_10 $$ if (elementRange.getEndOffset() > textRange.getEndOffset()) [ CD ]
Line_5 $$ final StringBuilder result = new StringBuilder()-->Line_7 $$ result.append(elementText.substring(0, textRange.getStartOffset() - elementRange.getStartOffset()))[ FD ]
Line_2 $$ private static StringBuilder createNewLeafChars(final ASTNode leafElement, final TextRange textRange, final String whiteSpace) -->Line_9 $$ result.append(whiteSpace)[ CD ]
Line_2 $$ private static StringBuilder createNewLeafChars(final ASTNode leafElement, final TextRange textRange, final String whiteSpace) -->Line_7 $$ result.append(elementText.substring(0, textRange.getStartOffset() - elementRange.getStartOffset()))[ FD ]
Line_10 $$ if (elementRange.getEndOffset() > textRange.getEndOffset()) -->Line_11 $$ result.append(elementText.substring(textRange.getEndOffset() - elementRange.getStartOffset()))[ CD ]
Line_4 $$ final String elementText = leafElement.getText()-->Line_11 $$ result.append(elementText.substring(textRange.getEndOffset() - elementRange.getStartOffset()))[ FD ]
Line_6 $$ if (elementRange.getStartOffset() < textRange.getStartOffset()) -->Line_7 $$ result.append(elementText.substring(0, textRange.getStartOffset() - elementRange.getStartOffset()))[ CD ]
Line_2 $$ private static StringBuilder createNewLeafChars(final ASTNode leafElement, final TextRange textRange, final String whiteSpace) -->Line_13 $$ return result[ CD ]
Line_3 $$ final TextRange elementRange = leafElement.getTextRange()-->Line_11 $$ result.append(elementText.substring(textRange.getEndOffset() - elementRange.getStartOffset()))[ FD ]
Line_5 $$ final StringBuilder result = new StringBuilder()-->Line_11 $$ result.append(elementText.substring(textRange.getEndOffset() - elementRange.getStartOffset()))[ FD ]
Line_2 $$ private static StringBuilder createNewLeafChars(final ASTNode leafElement, final TextRange textRange, final String whiteSpace) -->Line_3 $$ final TextRange elementRange = leafElement.getTextRange()[ FD ]
Line_3 $$ final TextRange elementRange = leafElement.getTextRange()-->Line_10 $$ if (elementRange.getEndOffset() > textRange.getEndOffset()) [ FD ]
Line_2 $$ private static StringBuilder createNewLeafChars(final ASTNode leafElement, final TextRange textRange, final String whiteSpace) -->Line_6 $$ if (elementRange.getStartOffset() < textRange.getStartOffset()) [ FD ]
Line_2 $$ private static StringBuilder createNewLeafChars(final ASTNode leafElement, final TextRange textRange, final String whiteSpace) -->Line_10 $$ if (elementRange.getEndOffset() > textRange.getEndOffset()) [ FD ]
Line_2 $$ private static StringBuilder createNewLeafChars(final ASTNode leafElement, final TextRange textRange, final String whiteSpace) -->Line_3 $$ final TextRange elementRange = leafElement.getTextRange()[ CD ]
Line_2 $$ private static StringBuilder createNewLeafChars(final ASTNode leafElement, final TextRange textRange, final String whiteSpace) -->Line_5 $$ final StringBuilder result = new StringBuilder()[ CD ]
Line_4 $$ final String elementText = leafElement.getText()-->Line_7 $$ result.append(elementText.substring(0, textRange.getStartOffset() - elementRange.getStartOffset()))[ FD ]
Line_2 $$ private static StringBuilder createNewLeafChars(final ASTNode leafElement, final TextRange textRange, final String whiteSpace) -->Line_4 $$ final String elementText = leafElement.getText()[ CD ]
Line_3 $$ final TextRange elementRange = leafElement.getTextRange()-->Line_6 $$ if (elementRange.getStartOffset() < textRange.getStartOffset()) [ FD ]
Line_2 $$ private static StringBuilder createNewLeafChars(final ASTNode leafElement, final TextRange textRange, final String whiteSpace) -->Line_9 $$ result.append(whiteSpace)[ FD ]
Line_2 $$ private static StringBuilder createNewLeafChars(final ASTNode leafElement, final TextRange textRange, final String whiteSpace) -->Line_11 $$ result.append(elementText.substring(textRange.getEndOffset() - elementRange.getStartOffset()))[ FD ]
Line_2 $$ private static StringBuilder createNewLeafChars(final ASTNode leafElement, final TextRange textRange, final String whiteSpace) -->Line_4 $$ final String elementText = leafElement.getText()[ FD ]
Line_2 $$ private static StringBuilder createNewLeafChars(final ASTNode leafElement, final TextRange textRange, final String whiteSpace) -->Line_6 $$ if (elementRange.getStartOffset() < textRange.getStartOffset()) [ CD ]
Line_3 $$ final TextRange elementRange = leafElement.getTextRange()-->Line_7 $$ result.append(elementText.substring(0, textRange.getStartOffset() - elementRange.getStartOffset()))[ FD ]
Line_5 $$ final StringBuilder result = new StringBuilder()-->Line_9 $$ result.append(whiteSpace)[ FD ]
