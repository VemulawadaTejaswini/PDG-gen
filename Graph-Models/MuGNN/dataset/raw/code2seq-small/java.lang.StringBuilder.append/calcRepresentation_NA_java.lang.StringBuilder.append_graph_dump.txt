Line_28 $$ String name-->Line_44 $$ label.append(name.substring(0, dotIndex))[ FD ]
Line_38 $$ if (dotIndex < 0) -->Line_42 $$ if (settings.SHOW_PACKAGE_NAME) [ CD ]
Line_18 $$ lineNumber = Integer.toString(myLocation.lineNumber())-->Line_24 $$ label.append(lineNumber)[ FD ]
Line_35 $$ if (name != null) -->Line_37 $$ int dotIndex = name.lastIndexOf('.')[ CD ]
Line_42 $$ if (settings.SHOW_PACKAGE_NAME) -->Line_45 $$ label.append("}")[ CD ]
Line_37 $$ int dotIndex = name.lastIndexOf('.')-->Line_38 $$ if (dotIndex < 0) [ FD ]
Line_33 $$ name = e.toString()-->Line_41 $$ label.append(name.substring(dotIndex + 1))[ FD ]
Line_2 $$ protected String calcRepresentation(EvaluationContextImpl context, DescriptorLabelListener descriptorLabelListener) throws EvaluateException -->Line_7 $$ ThreadsViewSettings settings = ThreadsViewSettings.getInstance()[ CD ]
Line_10 $$ Method method = myMethodOccurrence.getMethod()-->Line_13 $$ label.append(settings.SHOW_ARGUMENTS_TYPES ? DebuggerUtilsEx.methodNameWithArguments(method) : myName)[ FD ]
Line_27 $$ if (settings.SHOW_CLASS_NAME) -->Line_28 $$ String name[ CD ]
Line_52 $$ String sourceName-->Line_54 $$ sourceName = myLocation.sourceName()[ FD ]
Line_56 $$ sourceName = e.toString()-->Line_59 $$ label.append(sourceName)[ FD ]
Line_10 $$ Method method = myMethodOccurrence.getMethod()-->Line_12 $$ myName = method.name()[ FD ]
Line_8 $$ final StringBuilder label = StringBuilderSpinAllocator.alloc()-->Line_44 $$ label.append(name.substring(0, dotIndex))[ FD ]
Line_16 $$ String lineNumber-->Line_24 $$ label.append(lineNumber)[ FD ]
Line_33 $$ name = e.toString()-->Line_44 $$ label.append(name.substring(0, dotIndex))[ FD ]
Line_35 $$ if (name != null) -->Line_38 $$ if (dotIndex < 0) [ CD ]
Line_2 $$ protected String calcRepresentation(EvaluationContextImpl context, DescriptorLabelListener descriptorLabelListener) throws EvaluateException -->Line_3 $$ DebuggerManagerThreadImpl.assertIsManagerThread()[ CD ]
Line_4 $$ if (myLocation == null) -->Line_5 $$ return ""[ CD ]
Line_2 $$ protected String calcRepresentation(EvaluationContextImpl context, DescriptorLabelListener descriptorLabelListener) throws EvaluateException -->Line_4 $$ if (myLocation == null) [ CD ]
Line_31 $$ name = refType != null ? refType.name() : null-->Line_37 $$ int dotIndex = name.lastIndexOf('.')[ FD ]
Line_20 $$ lineNumber = e.toString()-->Line_22 $$ if (lineNumber != null) [ FD ]
Line_31 $$ name = refType != null ? refType.name() : null-->Line_41 $$ label.append(name.substring(dotIndex + 1))[ FD ]
Line_16 $$ String lineNumber-->Line_22 $$ if (lineNumber != null) [ FD ]
Line_38 $$ if (dotIndex < 0) -->Line_41 $$ label.append(name.substring(dotIndex + 1))[ CD ]
Line_8 $$ final StringBuilder label = StringBuilderSpinAllocator.alloc()-->Line_24 $$ label.append(lineNumber)[ FD ]
Line_11 $$ if (method != null) -->Line_12 $$ myName = method.name()[ CD ]
Line_8 $$ final StringBuilder label = StringBuilderSpinAllocator.alloc()-->Line_13 $$ label.append(settings.SHOW_ARGUMENTS_TYPES ? DebuggerUtilsEx.methodNameWithArguments(method) : myName)[ FD ]
Line_28 $$ String name-->Line_35 $$ if (name != null) [ FD ]
Line_16 $$ String lineNumber-->Line_18 $$ lineNumber = Integer.toString(myLocation.lineNumber())[ FD ]
Line_8 $$ final StringBuilder label = StringBuilderSpinAllocator.alloc()-->Line_43 $$ label.append(" [ FD ]
Line_16 $$ String lineNumber-->Line_20 $$ lineNumber = e.toString()[ FD ]
Line_7 $$ ThreadsViewSettings settings = ThreadsViewSettings.getInstance()-->Line_15 $$ if (settings.SHOW_LINE_NUMBER) [ FD ]
Line_7 $$ ThreadsViewSettings settings = ThreadsViewSettings.getInstance()-->Line_50 $$ if (settings.SHOW_SOURCE_NAME) [ FD ]
Line_31 $$ name = refType != null ? refType.name() : null-->Line_39 $$ label.append(name)[ FD ]
Line_35 $$ if (name != null) -->Line_36 $$ label.append(", ")[ CD ]
Line_28 $$ String name-->Line_39 $$ label.append(name)[ FD ]
Line_2 $$ protected String calcRepresentation(EvaluationContextImpl context, DescriptorLabelListener descriptorLabelListener) throws EvaluateException -->Line_8 $$ final StringBuilder label = StringBuilderSpinAllocator.alloc()[ CD ]
Line_8 $$ final StringBuilder label = StringBuilderSpinAllocator.alloc()-->Line_41 $$ label.append(name.substring(dotIndex + 1))[ FD ]
Line_42 $$ if (settings.SHOW_PACKAGE_NAME) -->Line_43 $$ label.append(" [ CD ]
Line_18 $$ lineNumber = Integer.toString(myLocation.lineNumber())-->Line_20 $$ lineNumber = e.toString()[ FD ]
Line_52 $$ String sourceName-->Line_56 $$ sourceName = e.toString()[ FD ]
Line_8 $$ final StringBuilder label = StringBuilderSpinAllocator.alloc()-->Line_23 $$ label.append(':')[ FD ]
Line_28 $$ String name-->Line_41 $$ label.append(name.substring(dotIndex + 1))[ FD ]
Line_31 $$ name = refType != null ? refType.name() : null-->Line_44 $$ label.append(name.substring(0, dotIndex))[ FD ]
Line_11 $$ if (method != null) -->Line_13 $$ label.append(settings.SHOW_ARGUMENTS_TYPES ? DebuggerUtilsEx.methodNameWithArguments(method) : myName)[ CD ]
Line_54 $$ sourceName = myLocation.sourceName()-->Line_56 $$ sourceName = e.toString()[ FD ]
Line_33 $$ name = e.toString()-->Line_37 $$ int dotIndex = name.lastIndexOf('.')[ FD ]
Line_30 $$ ReferenceType refType = myLocation.declaringType()-->Line_31 $$ name = refType != null ? refType.name() : null[ FD ]
Line_15 $$ if (settings.SHOW_LINE_NUMBER) -->Line_22 $$ if (lineNumber != null) [ CD ]
Line_54 $$ sourceName = myLocation.sourceName()-->Line_59 $$ label.append(sourceName)[ FD ]
Line_7 $$ ThreadsViewSettings settings = ThreadsViewSettings.getInstance()-->Line_27 $$ if (settings.SHOW_CLASS_NAME) [ FD ]
Line_28 $$ String name-->Line_37 $$ int dotIndex = name.lastIndexOf('.')[ FD ]
Line_22 $$ if (lineNumber != null) -->Line_24 $$ label.append(lineNumber)[ CD ]
Line_8 $$ final StringBuilder label = StringBuilderSpinAllocator.alloc()-->Line_36 $$ label.append(", ")[ FD ]
Line_7 $$ ThreadsViewSettings settings = ThreadsViewSettings.getInstance()-->Line_42 $$ if (settings.SHOW_PACKAGE_NAME) [ FD ]
Line_8 $$ final StringBuilder label = StringBuilderSpinAllocator.alloc()-->Line_58 $$ label.append(", ")[ FD ]
Line_31 $$ name = refType != null ? refType.name() : null-->Line_33 $$ name = e.toString()[ FD ]
Line_18 $$ lineNumber = Integer.toString(myLocation.lineNumber())-->Line_22 $$ if (lineNumber != null) [ FD ]
Line_27 $$ if (settings.SHOW_CLASS_NAME) -->Line_35 $$ if (name != null) [ CD ]
Line_20 $$ lineNumber = e.toString()-->Line_24 $$ label.append(lineNumber)[ FD ]
Line_28 $$ String name-->Line_33 $$ name = e.toString()[ FD ]
Line_10 $$ Method method = myMethodOccurrence.getMethod()-->Line_11 $$ if (method != null) [ FD ]
Line_33 $$ name = e.toString()-->Line_39 $$ label.append(name)[ FD ]
Line_52 $$ String sourceName-->Line_59 $$ label.append(sourceName)[ FD ]
Line_8 $$ final StringBuilder label = StringBuilderSpinAllocator.alloc()-->Line_39 $$ label.append(name)[ FD ]
Line_31 $$ name = refType != null ? refType.name() : null-->Line_35 $$ if (name != null) [ FD ]
Line_15 $$ if (settings.SHOW_LINE_NUMBER) -->Line_16 $$ String lineNumber[ CD ]
Line_42 $$ if (settings.SHOW_PACKAGE_NAME) -->Line_44 $$ label.append(name.substring(0, dotIndex))[ CD ]
Line_8 $$ final StringBuilder label = StringBuilderSpinAllocator.alloc()-->Line_65 $$ StringBuilderSpinAllocator.dispose(label)[ FD ]
Line_8 $$ final StringBuilder label = StringBuilderSpinAllocator.alloc()-->Line_59 $$ label.append(sourceName)[ FD ]
Line_22 $$ if (lineNumber != null) -->Line_23 $$ label.append(':')[ CD ]
Line_8 $$ final StringBuilder label = StringBuilderSpinAllocator.alloc()-->Line_45 $$ label.append("}")[ FD ]
Line_8 $$ final StringBuilder label = StringBuilderSpinAllocator.alloc()-->Line_63 $$ return label.toString()[ FD ]
Line_33 $$ name = e.toString()-->Line_35 $$ if (name != null) [ FD ]
Line_28 $$ String name-->Line_31 $$ name = refType != null ? refType.name() : null[ FD ]
Line_38 $$ if (dotIndex < 0) -->Line_39 $$ label.append(name)[ CD ]
Line_37 $$ int dotIndex = name.lastIndexOf('.')-->Line_44 $$ label.append(name.substring(0, dotIndex))[ FD ]
