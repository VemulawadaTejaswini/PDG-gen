Line_3 $$ StringBuilder text = new StringBuilder()-->Line_14 $$ text.append(out.toString())[ FD ]
Line_2 $$ public static String getTextFromThrowable(Throwable internalError) -->Line_12 $$ final ByteArrayOutputStream out = new ByteArrayOutputStream()[ CD ]
Line_2 $$ public static String getTextFromThrowable(Throwable internalError) -->Line_6 $$ if (!StringUtil.isEmptyOrSpaces(msg)) [ CD ]
Line_2 $$ public static String getTextFromThrowable(Throwable internalError) -->Line_13 $$ internalError.printStackTrace(new PrintStream(out))[ CD ]
Line_2 $$ public static String getTextFromThrowable(Throwable internalError) -->Line_5 $$ final String msg = internalError.getMessage()[ FD ]
Line_2 $$ public static String getTextFromThrowable(Throwable internalError) -->Line_13 $$ internalError.printStackTrace(new PrintStream(out))[ FD ]
Line_2 $$ public static String getTextFromThrowable(Throwable internalError) -->Line_11 $$ text.append("\n")[ CD ]
Line_3 $$ StringBuilder text = new StringBuilder()-->Line_9 $$ text.append(internalError.getClass().getName())[ FD ]
Line_2 $$ public static String getTextFromThrowable(Throwable internalError) -->Line_3 $$ StringBuilder text = new StringBuilder()[ CD ]
Line_2 $$ public static String getTextFromThrowable(Throwable internalError) -->Line_9 $$ text.append(internalError.getClass().getName())[ FD ]
Line_5 $$ final String msg = internalError.getMessage()-->Line_7 $$ text.append(msg)[ FD ]
Line_12 $$ final ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_14 $$ text.append(out.toString())[ FD ]
Line_3 $$ StringBuilder text = new StringBuilder()-->Line_15 $$ return text.toString()[ FD ]
Line_2 $$ public static String getTextFromThrowable(Throwable internalError) -->Line_14 $$ text.append(out.toString())[ CD ]
Line_2 $$ public static String getTextFromThrowable(Throwable internalError) -->Line_5 $$ final String msg = internalError.getMessage()[ CD ]
Line_3 $$ StringBuilder text = new StringBuilder()-->Line_7 $$ text.append(msg)[ FD ]
Line_6 $$ if (!StringUtil.isEmptyOrSpaces(msg)) -->Line_7 $$ text.append(msg)[ CD ]
Line_2 $$ public static String getTextFromThrowable(Throwable internalError) -->Line_4 $$ text.append("Error: ")[ CD ]
Line_3 $$ StringBuilder text = new StringBuilder()-->Line_11 $$ text.append("\n")[ FD ]
Line_2 $$ public static String getTextFromThrowable(Throwable internalError) -->Line_15 $$ return text.toString()[ CD ]
Line_5 $$ final String msg = internalError.getMessage()-->Line_6 $$ if (!StringUtil.isEmptyOrSpaces(msg)) [ FD ]
Line_6 $$ if (!StringUtil.isEmptyOrSpaces(msg)) -->Line_9 $$ text.append(internalError.getClass().getName())[ CD ]
Line_3 $$ StringBuilder text = new StringBuilder()-->Line_4 $$ text.append("Error: ")[ FD ]
