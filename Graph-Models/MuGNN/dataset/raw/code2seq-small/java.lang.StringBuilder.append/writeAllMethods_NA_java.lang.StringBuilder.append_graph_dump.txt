Line_6 $$ if (method.isConstructor()) -->Line_7 $$ classItemGenerator.writeConstructor(text, method, aClass.isEnum())[ CD ]
Line_3 $$ for (PsiMethod method : methods) -->Line_4 $$ if (!shouldBeGenerated(method))[ FD ]
Line_3 $$ for (PsiMethod method : methods) -->Line_6 $$ if (method.isConstructor()) [ FD ]
Line_2 $$ private void writeAllMethods(StringBuilder text, Collection<PsiMethod> methods, PsiClass aClass) -->Line_7 $$ classItemGenerator.writeConstructor(text, method, aClass.isEnum())[ FD ]
Line_6 $$ if (method.isConstructor()) -->Line_9 $$ classItemGenerator.writeMethod(text, method)[ CD ]
Line_3 $$ for (PsiMethod method : methods) -->Line_7 $$ classItemGenerator.writeConstructor(text, method, aClass.isEnum())[ FD ]
Line_3 $$ for (PsiMethod method : methods) -->Line_9 $$ classItemGenerator.writeMethod(text, method)[ FD ]
Line_2 $$ private void writeAllMethods(StringBuilder text, Collection<PsiMethod> methods, PsiClass aClass) -->Line_10 $$ text.append('\n')[ FD ]
Line_6 $$ if (method.isConstructor()) -->Line_10 $$ text.append('\n')[ CD ]
Line_2 $$ private void writeAllMethods(StringBuilder text, Collection<PsiMethod> methods, PsiClass aClass) -->Line_9 $$ classItemGenerator.writeMethod(text, method)[ FD ]
