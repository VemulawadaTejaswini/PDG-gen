Line_2 $$ public void testAddEntryFromStringBuilder() throws Exception -->Line_5 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_9 $$ ZipReader zipReader = new ZipReaderImpl(file)-->Line_10 $$ Assert.assertEquals("This is a string.", zipReader.getEntryAsString("string.txt"))[ FD ]
Line_4 $$ ZipWriter zipWriter = new ZipWriterImpl(tempZipFile)-->Line_7 $$ zipWriter.addEntry("string.txt", sb)[ FD ]
Line_2 $$ public void testAddEntryFromStringBuilder() throws Exception -->Line_6 $$ sb.append("This is a string.")[ CD ]
Line_2 $$ public void testAddEntryFromStringBuilder() throws Exception -->Line_12 $$ file.delete()[ CD ]
Line_4 $$ ZipWriter zipWriter = new ZipWriterImpl(tempZipFile)-->Line_8 $$ File file = zipWriter.getFile()[ FD ]
Line_2 $$ public void testAddEntryFromStringBuilder() throws Exception -->Line_11 $$ zipReader.close()[ CD ]
Line_8 $$ File file = zipWriter.getFile()-->Line_12 $$ file.delete()[ FD ]
Line_9 $$ ZipReader zipReader = new ZipReaderImpl(file)-->Line_11 $$ zipReader.close()[ FD ]
Line_2 $$ public void testAddEntryFromStringBuilder() throws Exception -->Line_4 $$ ZipWriter zipWriter = new ZipWriterImpl(tempZipFile)[ CD ]
Line_2 $$ public void testAddEntryFromStringBuilder() throws Exception -->Line_7 $$ zipWriter.addEntry("string.txt", sb)[ CD ]
Line_2 $$ public void testAddEntryFromStringBuilder() throws Exception -->Line_8 $$ File file = zipWriter.getFile()[ CD ]
Line_2 $$ public void testAddEntryFromStringBuilder() throws Exception -->Line_10 $$ Assert.assertEquals("This is a string.", zipReader.getEntryAsString("string.txt"))[ CD ]
Line_5 $$ StringBuilder sb = new StringBuilder()-->Line_7 $$ zipWriter.addEntry("string.txt", sb)[ FD ]
Line_2 $$ public void testAddEntryFromStringBuilder() throws Exception -->Line_3 $$ File tempZipFile = new File(_tempZipFilePath)[ CD ]
Line_2 $$ public void testAddEntryFromStringBuilder() throws Exception -->Line_9 $$ ZipReader zipReader = new ZipReaderImpl(file)[ CD ]
Line_5 $$ StringBuilder sb = new StringBuilder()-->Line_6 $$ sb.append("This is a string.")[ FD ]
