Line_2 $$ private static void writeHunkStart(Writer writer, int startLine1, int endLine1, int startLine2, int endLine2, final String lineSeparator) throws IOException -->Line_6 $$ writer.append(builder.toString())[ CD ]
Line_2 $$ private static void writeHunkStart(Writer writer, int startLine1, int endLine1, int startLine2, int endLine2, final String lineSeparator) throws IOException -->Line_4 $$ builder.append(startLine1 + 1).append(",").append(endLine1 - startLine1)[ CD ]
Line_2 $$ private static void writeHunkStart(Writer writer, int startLine1, int endLine1, int startLine2, int endLine2, final String lineSeparator) throws IOException -->Line_6 $$ writer.append(builder.toString())[ FD ]
Line_2 $$ private static void writeHunkStart(Writer writer, int startLine1, int endLine1, int startLine2, int endLine2, final String lineSeparator) throws IOException -->Line_5 $$ builder.append(" +").append(startLine2 + 1).append(",").append(endLine2 - startLine2).append(" @@").append(lineSeparator)[ FD ]
Line_2 $$ private static void writeHunkStart(Writer writer, int startLine1, int endLine1, int startLine2, int endLine2, final String lineSeparator) throws IOException -->Line_3 $$ StringBuilder builder = new StringBuilder("@@ -")[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder("@@ -")-->Line_6 $$ writer.append(builder.toString())[ FD ]
Line_2 $$ private static void writeHunkStart(Writer writer, int startLine1, int endLine1, int startLine2, int endLine2, final String lineSeparator) throws IOException -->Line_5 $$ builder.append(" +").append(startLine2 + 1).append(",").append(endLine2 - startLine2).append(" @@").append(lineSeparator)[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder("@@ -")-->Line_4 $$ builder.append(startLine1 + 1).append(",").append(endLine1 - startLine1)[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder("@@ -")-->Line_5 $$ builder.append(" +").append(startLine2 + 1).append(",").append(endLine2 - startLine2).append(" @@").append(lineSeparator)[ FD ]
