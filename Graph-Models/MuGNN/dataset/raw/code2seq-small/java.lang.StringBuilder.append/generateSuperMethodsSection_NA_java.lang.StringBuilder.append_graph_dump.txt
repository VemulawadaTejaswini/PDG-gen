Line_34 $$ StringBuilder classBuffer = new StringBuilder()-->Line_37 $$ buffer.append(CodeInsightBundle.message("javadoc.method.in.interface", methodBuffer.toString(), classBuffer.toString()))[ FD ]
Line_2 $$ private static void generateSuperMethodsSection(StringBuilder buffer, PsiMethod method, boolean overrides) -->Line_43 $$ buffer.append("</DD></DL></DD>")[ FD ]
Line_24 $$ if (!headerGenerated) -->Line_29 $$ headerGenerated = true[ CD ]
Line_12 $$ for (PsiMethod superMethod : supers) -->Line_33 $$ generateLink(methodBuffer, superMethod, superMethod.getName(), false)[ FD ]
Line_2 $$ private static void generateSuperMethodsSection(StringBuilder buffer, PsiMethod method, boolean overrides) -->Line_9 $$ if (supers.length == 0)[ CD ]
Line_14 $$ if (overrides) -->Line_18 $$ if (!isAbstract)[ CD ]
Line_2 $$ private static void generateSuperMethodsSection(StringBuilder buffer, PsiMethod method, boolean overrides) -->Line_3 $$ PsiClass parentClass = method.getContainingClass()[ CD ]
Line_24 $$ if (!headerGenerated) -->Line_26 $$ buffer.append("<DT><b>")[ CD ]
Line_24 $$ if (!headerGenerated) -->Line_27 $$ buffer.append(overrides ? CodeInsightBundle.message("javadoc.method.overrides") : CodeInsightBundle.message("javadoc.method.specified.by"))[ CD ]
Line_42 $$ if (headerGenerated) -->Line_43 $$ buffer.append("</DD></DL></DD>")[ CD ]
Line_13 $$ boolean isAbstract = superMethod.hasModifierProperty(PsiModifier.ABSTRACT)-->Line_18 $$ if (!isAbstract)[ FD ]
Line_24 $$ if (!headerGenerated) -->Line_25 $$ buffer.append("<DD><DL>")[ CD ]
Line_2 $$ private static void generateSuperMethodsSection(StringBuilder buffer, PsiMethod method, boolean overrides) -->Line_6 $$ if (parentClass.isInterface() && !overrides)[ CD ]
Line_2 $$ private static void generateSuperMethodsSection(StringBuilder buffer, PsiMethod method, boolean overrides) -->Line_8 $$ PsiMethod[] supers = method.findSuperMethods()[ CD ]
Line_2 $$ private static void generateSuperMethodsSection(StringBuilder buffer, PsiMethod method, boolean overrides) -->Line_3 $$ PsiClass parentClass = method.getContainingClass()[ FD ]
Line_14 $$ if (overrides) -->Line_15 $$ if (parentClass.isInterface() ? !isAbstract : isAbstract)[ CD ]
Line_13 $$ boolean isAbstract = superMethod.hasModifierProperty(PsiModifier.ABSTRACT)-->Line_15 $$ if (parentClass.isInterface() ? !isAbstract : isAbstract)[ FD ]
Line_21 $$ PsiClass superClass = superMethod.getContainingClass()-->Line_36 $$ if (superClass.isInterface()) [ FD ]
Line_11 $$ boolean headerGenerated = false-->Line_29 $$ headerGenerated = true[ FD ]
Line_34 $$ StringBuilder classBuffer = new StringBuilder()-->Line_35 $$ generateLink(classBuffer, superClass, superClass.getName(), false)[ FD ]
Line_2 $$ private static void generateSuperMethodsSection(StringBuilder buffer, PsiMethod method, boolean overrides) -->Line_39 $$ buffer.append(CodeInsightBundle.message("javadoc.method.in.class", methodBuffer.toString(), classBuffer.toString()))[ FD ]
Line_3 $$ PsiClass parentClass = method.getContainingClass()-->Line_15 $$ if (parentClass.isInterface() ? !isAbstract : isAbstract)[ FD ]
Line_34 $$ StringBuilder classBuffer = new StringBuilder()-->Line_39 $$ buffer.append(CodeInsightBundle.message("javadoc.method.in.class", methodBuffer.toString(), classBuffer.toString()))[ FD ]
Line_2 $$ private static void generateSuperMethodsSection(StringBuilder buffer, PsiMethod method, boolean overrides) -->Line_31 $$ buffer.append("<DD>")[ FD ]
Line_2 $$ private static void generateSuperMethodsSection(StringBuilder buffer, PsiMethod method, boolean overrides) -->Line_27 $$ buffer.append(overrides ? CodeInsightBundle.message("javadoc.method.overrides") : CodeInsightBundle.message("javadoc.method.specified.by"))[ FD ]
Line_36 $$ if (superClass.isInterface()) -->Line_39 $$ buffer.append(CodeInsightBundle.message("javadoc.method.in.class", methodBuffer.toString(), classBuffer.toString()))[ CD ]
Line_12 $$ for (PsiMethod superMethod : supers) -->Line_21 $$ PsiClass superClass = superMethod.getContainingClass()[ FD ]
Line_2 $$ private static void generateSuperMethodsSection(StringBuilder buffer, PsiMethod method, boolean overrides) -->Line_26 $$ buffer.append("<DT><b>")[ FD ]
Line_2 $$ private static void generateSuperMethodsSection(StringBuilder buffer, PsiMethod method, boolean overrides) -->Line_25 $$ buffer.append("<DD><DL>")[ FD ]
Line_32 $$ StringBuilder methodBuffer = new StringBuilder()-->Line_37 $$ buffer.append(CodeInsightBundle.message("javadoc.method.in.interface", methodBuffer.toString(), classBuffer.toString()))[ FD ]
Line_36 $$ if (superClass.isInterface()) -->Line_37 $$ buffer.append(CodeInsightBundle.message("javadoc.method.in.interface", methodBuffer.toString(), classBuffer.toString()))[ CD ]
Line_3 $$ PsiClass parentClass = method.getContainingClass()-->Line_4 $$ if (parentClass == null)[ FD ]
Line_2 $$ private static void generateSuperMethodsSection(StringBuilder buffer, PsiMethod method, boolean overrides) -->Line_37 $$ buffer.append(CodeInsightBundle.message("javadoc.method.in.interface", methodBuffer.toString(), classBuffer.toString()))[ FD ]
Line_12 $$ for (PsiMethod superMethod : supers) -->Line_13 $$ boolean isAbstract = superMethod.hasModifierProperty(PsiModifier.ABSTRACT)[ FD ]
Line_2 $$ private static void generateSuperMethodsSection(StringBuilder buffer, PsiMethod method, boolean overrides) -->Line_11 $$ boolean headerGenerated = false[ CD ]
Line_2 $$ private static void generateSuperMethodsSection(StringBuilder buffer, PsiMethod method, boolean overrides) -->Line_28 $$ buffer.append("</b>")[ FD ]
Line_9 $$ if (supers.length == 0)-->Line_10 $$ return[ CD ]
Line_24 $$ if (!headerGenerated) -->Line_28 $$ buffer.append("</b>")[ CD ]
Line_32 $$ StringBuilder methodBuffer = new StringBuilder()-->Line_39 $$ buffer.append(CodeInsightBundle.message("javadoc.method.in.class", methodBuffer.toString(), classBuffer.toString()))[ FD ]
Line_3 $$ PsiClass parentClass = method.getContainingClass()-->Line_6 $$ if (parentClass.isInterface() && !overrides)[ FD ]
Line_6 $$ if (parentClass.isInterface() && !overrides)-->Line_7 $$ return[ CD ]
Line_2 $$ private static void generateSuperMethodsSection(StringBuilder buffer, PsiMethod method, boolean overrides) -->Line_8 $$ PsiMethod[] supers = method.findSuperMethods()[ FD ]
Line_11 $$ boolean headerGenerated = false-->Line_24 $$ if (!headerGenerated) [ FD ]
Line_4 $$ if (parentClass == null)-->Line_5 $$ return[ CD ]
Line_21 $$ PsiClass superClass = superMethod.getContainingClass()-->Line_35 $$ generateLink(classBuffer, superClass, superClass.getName(), false)[ FD ]
Line_32 $$ StringBuilder methodBuffer = new StringBuilder()-->Line_33 $$ generateLink(methodBuffer, superMethod, superMethod.getName(), false)[ FD ]
Line_2 $$ private static void generateSuperMethodsSection(StringBuilder buffer, PsiMethod method, boolean overrides) -->Line_42 $$ if (headerGenerated) [ CD ]
Line_2 $$ private static void generateSuperMethodsSection(StringBuilder buffer, PsiMethod method, boolean overrides) -->Line_4 $$ if (parentClass == null)[ CD ]
Line_2 $$ private static void generateSuperMethodsSection(StringBuilder buffer, PsiMethod method, boolean overrides) -->Line_6 $$ if (parentClass.isInterface() && !overrides)[ FD ]
Line_21 $$ PsiClass superClass = superMethod.getContainingClass()-->Line_22 $$ if (superClass == null)[ FD ]
