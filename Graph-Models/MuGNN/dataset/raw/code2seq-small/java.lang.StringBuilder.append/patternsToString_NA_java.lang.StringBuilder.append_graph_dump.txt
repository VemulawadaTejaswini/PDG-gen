Line_4 $$ for (int idx = 0; idx < patterns.length; idx++) -->Line_8 $$ extensionsString.append(patterns[idx])[ CD ]
Line_4 $$ for (int idx = 0; idx < patterns.length; idx++) -->Line_5 $$ if (idx > 0) [ FD ]
Line_2 $$ private static String patternsToString(final String[] patterns) -->Line_10 $$ return extensionsString.toString()[ CD ]
Line_4 $$ for (int idx = 0; idx < patterns.length; idx++) -->Line_5 $$ if (idx > 0) [ CD ]
Line_3 $$ final StringBuilder extensionsString = new StringBuilder()-->Line_6 $$ extensionsString.append(";")[ FD ]
Line_3 $$ final StringBuilder extensionsString = new StringBuilder()-->Line_10 $$ return extensionsString.toString()[ FD ]
Line_3 $$ final StringBuilder extensionsString = new StringBuilder()-->Line_8 $$ extensionsString.append(patterns[idx])[ FD ]
Line_2 $$ private static String patternsToString(final String[] patterns) -->Line_3 $$ final StringBuilder extensionsString = new StringBuilder()[ CD ]
Line_5 $$ if (idx > 0) -->Line_6 $$ extensionsString.append(";")[ CD ]
Line_2 $$ private static String patternsToString(final String[] patterns) -->Line_4 $$ for (int idx = 0; idx < patterns.length; idx++) [ CD ]
