Line_4 $$ StringBuilder result = new StringBuilder()-->Line_26 $$ result.append(text == null ? "" : text)[ FD ]
Line_16 $$ Object userObject = treeNode.getUserObject()-->Line_53 $$ result.append(userObject == null ? "" : userObject.toString())[ FD ]
Line_2 $$ String getPlainTextForNode(Object value) -->Line_5 $$ if (value instanceof Node) [ FD ]
Line_4 $$ StringBuilder result = new StringBuilder()-->Line_33 $$ result.append(StringUtil.capitalize(myPresentation.getUsagesWord()))[ FD ]
Line_6 $$ Node node = (Node) value-->Line_37 $$ int count = node.getRecursiveUsageCount()[ FD ]
Line_7 $$ if (!node.isValid()) -->Line_8 $$ result.append(UsageViewBundle.message("node.invalid")).append(" ")[ CD ]
Line_17 $$ if (userObject instanceof UsageTarget) -->Line_18 $$ UsageTarget usageTarget = (UsageTarget) userObject[ CD ]
Line_39 $$ if (treeNode instanceof UsageNode) -->Line_44 $$ if (node.isValid()) [ CD ]
Line_39 $$ if (treeNode instanceof UsageNode) -->Line_50 $$ if (userObject instanceof String) [ CD ]
Line_50 $$ if (userObject instanceof String) -->Line_51 $$ result.append((String) userObject)[ CD ]
Line_16 $$ Object userObject = treeNode.getUserObject()-->Line_17 $$ if (userObject instanceof UsageTarget) [ FD ]
Line_32 $$ if (node.isRoot()) -->Line_35 $$ result.append(node.getGroup().getText(myView))[ CD ]
Line_15 $$ DefaultMutableTreeNode treeNode = (DefaultMutableTreeNode) value-->Line_39 $$ if (treeNode instanceof UsageNode) [ FD ]
Line_19 $$ if (usageTarget.isValid()) -->Line_22 $$ if (showAsReadOnly) [ CD ]
Line_16 $$ Object userObject = treeNode.getUserObject()-->Line_50 $$ if (userObject instanceof String) [ FD ]
Line_2 $$ String getPlainTextForNode(Object value) -->Line_4 $$ StringBuilder result = new StringBuilder()[ CD ]
Line_6 $$ Node node = (Node) value-->Line_10 $$ if (myPresentation.isShowReadOnlyStatusAsRed() && node.isReadOnly()) [ FD ]
Line_4 $$ StringBuilder result = new StringBuilder()-->Line_53 $$ result.append(userObject == null ? "" : userObject.toString())[ FD ]
Line_14 $$ if (value instanceof DefaultMutableTreeNode) -->Line_16 $$ Object userObject = treeNode.getUserObject()[ CD ]
Line_5 $$ if (value instanceof Node) -->Line_10 $$ if (myPresentation.isShowReadOnlyStatusAsRed() && node.isReadOnly()) [ CD ]
Line_30 $$ if (treeNode instanceof GroupNode) -->Line_38 $$ result.append(" (").append(StringUtil.pluralize(count + " " + myPresentation.getUsagesWord(), count)).append(")")[ CD ]
Line_6 $$ Node node = (Node) value-->Line_44 $$ if (node.isValid()) [ FD ]
Line_19 $$ if (usageTarget.isValid()) -->Line_28 $$ result.append(UsageViewBundle.message("node.invalid"))[ CD ]
Line_2 $$ String getPlainTextForNode(Object value) -->Line_14 $$ if (value instanceof DefaultMutableTreeNode) [ CD ]
Line_4 $$ StringBuilder result = new StringBuilder()-->Line_56 $$ result.append(value)[ FD ]
Line_17 $$ if (userObject instanceof UsageTarget) -->Line_30 $$ if (treeNode instanceof GroupNode) [ CD ]
Line_4 $$ StringBuilder result = new StringBuilder()-->Line_35 $$ result.append(node.getGroup().getText(myView))[ FD ]
Line_4 $$ StringBuilder result = new StringBuilder()-->Line_58 $$ return result.toString()[ FD ]
Line_2 $$ String getPlainTextForNode(Object value) -->Line_58 $$ return result.toString()[ CD ]
Line_3 $$ boolean showAsReadOnly = false-->Line_11 $$ showAsReadOnly = true[ FD ]
Line_19 $$ if (usageTarget.isValid()) -->Line_20 $$ final ItemPresentation presentation = usageTarget.getPresentation()[ CD ]
Line_41 $$ if (showAsReadOnly) -->Line_42 $$ result.append(UsageViewBundle.message("node.readonly")).append(" ")[ CD ]
Line_6 $$ Node node = (Node) value-->Line_45 $$ TextChunk[] text = node.getUsage().getPresentation().getText()[ FD ]
Line_2 $$ String getPlainTextForNode(Object value) -->Line_5 $$ if (value instanceof Node) [ CD ]
Line_17 $$ if (userObject instanceof UsageTarget) -->Line_19 $$ if (usageTarget.isValid()) [ CD ]
Line_14 $$ if (value instanceof DefaultMutableTreeNode) -->Line_15 $$ DefaultMutableTreeNode treeNode = (DefaultMutableTreeNode) value[ CD ]
Line_20 $$ final ItemPresentation presentation = usageTarget.getPresentation()-->Line_25 $$ final String text = presentation.getPresentableText()[ FD ]
Line_19 $$ if (usageTarget.isValid()) -->Line_25 $$ final String text = presentation.getPresentableText()[ CD ]
Line_30 $$ if (treeNode instanceof GroupNode) -->Line_37 $$ int count = node.getRecursiveUsageCount()[ CD ]
Line_4 $$ StringBuilder result = new StringBuilder()-->Line_47 $$ result.append(textChunk.getText())[ FD ]
Line_30 $$ if (treeNode instanceof GroupNode) -->Line_39 $$ if (treeNode instanceof UsageNode) [ CD ]
Line_14 $$ if (value instanceof DefaultMutableTreeNode) -->Line_56 $$ result.append(value)[ CD ]
Line_2 $$ String getPlainTextForNode(Object value) -->Line_56 $$ result.append(value)[ FD ]
Line_6 $$ Node node = (Node) value-->Line_35 $$ result.append(node.getGroup().getText(myView))[ FD ]
Line_4 $$ StringBuilder result = new StringBuilder()-->Line_51 $$ result.append((String) userObject)[ FD ]
Line_5 $$ if (value instanceof Node) -->Line_6 $$ Node node = (Node) value[ CD ]
Line_6 $$ Node node = (Node) value-->Line_7 $$ if (!node.isValid()) [ FD ]
Line_18 $$ UsageTarget usageTarget = (UsageTarget) userObject-->Line_19 $$ if (usageTarget.isValid()) [ FD ]
Line_14 $$ if (value instanceof DefaultMutableTreeNode) -->Line_17 $$ if (userObject instanceof UsageTarget) [ CD ]
Line_19 $$ if (usageTarget.isValid()) -->Line_26 $$ result.append(text == null ? "" : text)[ CD ]
Line_4 $$ StringBuilder result = new StringBuilder()-->Line_28 $$ result.append(UsageViewBundle.message("node.invalid"))[ FD ]
Line_5 $$ if (value instanceof Node) -->Line_7 $$ if (!node.isValid()) [ CD ]
Line_15 $$ DefaultMutableTreeNode treeNode = (DefaultMutableTreeNode) value-->Line_16 $$ Object userObject = treeNode.getUserObject()[ FD ]
Line_2 $$ String getPlainTextForNode(Object value) -->Line_14 $$ if (value instanceof DefaultMutableTreeNode) [ FD ]
Line_19 $$ if (usageTarget.isValid()) -->Line_21 $$ LOG.assertTrue(presentation != null)[ CD ]
Line_4 $$ StringBuilder result = new StringBuilder()-->Line_38 $$ result.append(" (").append(StringUtil.pluralize(count + " " + myPresentation.getUsagesWord(), count)).append(")")[ FD ]
Line_2 $$ String getPlainTextForNode(Object value) -->Line_3 $$ boolean showAsReadOnly = false[ CD ]
Line_4 $$ StringBuilder result = new StringBuilder()-->Line_42 $$ result.append(UsageViewBundle.message("node.readonly")).append(" ")[ FD ]
Line_39 $$ if (treeNode instanceof UsageNode) -->Line_41 $$ if (showAsReadOnly) [ CD ]
Line_4 $$ StringBuilder result = new StringBuilder()-->Line_23 $$ result.append(UsageViewBundle.message("node.readonly")).append(" ")[ FD ]
Line_44 $$ if (node.isValid()) -->Line_45 $$ TextChunk[] text = node.getUsage().getPresentation().getText()[ CD ]
Line_15 $$ DefaultMutableTreeNode treeNode = (DefaultMutableTreeNode) value-->Line_30 $$ if (treeNode instanceof GroupNode) [ FD ]
Line_50 $$ if (userObject instanceof String) -->Line_53 $$ result.append(userObject == null ? "" : userObject.toString())[ CD ]
Line_6 $$ Node node = (Node) value-->Line_32 $$ if (node.isRoot()) [ FD ]
Line_32 $$ if (node.isRoot()) -->Line_33 $$ result.append(StringUtil.capitalize(myPresentation.getUsagesWord()))[ CD ]
Line_46 $$ for (TextChunk textChunk : text) -->Line_47 $$ result.append(textChunk.getText())[ FD ]
Line_4 $$ StringBuilder result = new StringBuilder()-->Line_8 $$ result.append(UsageViewBundle.message("node.invalid")).append(" ")[ FD ]
Line_37 $$ int count = node.getRecursiveUsageCount()-->Line_38 $$ result.append(" (").append(StringUtil.pluralize(count + " " + myPresentation.getUsagesWord(), count)).append(")")[ FD ]
Line_22 $$ if (showAsReadOnly) -->Line_23 $$ result.append(UsageViewBundle.message("node.readonly")).append(" ")[ CD ]
Line_30 $$ if (treeNode instanceof GroupNode) -->Line_32 $$ if (node.isRoot()) [ CD ]
Line_18 $$ UsageTarget usageTarget = (UsageTarget) userObject-->Line_20 $$ final ItemPresentation presentation = usageTarget.getPresentation()[ FD ]
Line_10 $$ if (myPresentation.isShowReadOnlyStatusAsRed() && node.isReadOnly()) -->Line_11 $$ showAsReadOnly = true[ CD ]
