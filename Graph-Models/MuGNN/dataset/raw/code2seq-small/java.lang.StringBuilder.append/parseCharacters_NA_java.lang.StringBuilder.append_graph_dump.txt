Line_66 $$ if (aChar == '\n') -->Line_67 $$ while (off < len && (s.charAt(off) == ' ' || s.charAt(off) == '\t')) [ CD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_10 $$ if (sourceOffsets != null) [ FD ]
Line_9 $$ char aChar = s.charAt(off++)-->Line_70 $$ if (aChar == 't') [ FD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_88 $$ return result[ CD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_9 $$ char aChar = s.charAt(off++)[ FD ]
Line_4 $$ int off = 0-->Line_9 $$ char aChar = s.charAt(off++)[ FD ]
Line_17 $$ int value = 0-->Line_32 $$ value = (value << 4) + aChar - '0'[ FD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_5 $$ int len = s.length()[ CD ]
Line_57 $$ off = end-->Line_67 $$ while (off < len && (s.charAt(off) == ' ' || s.charAt(off) == '\t')) [ FD ]
Line_8 $$ while (off < len) -->Line_84 $$ if (sourceOffsets != null) [ CD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_75 $$ outChars.append('\n')[ FD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_5 $$ int len = s.length()[ FD ]
Line_14 $$ if (aChar == '\\') -->Line_82 $$ outChars.append(aChar)[ CD ]
Line_84 $$ if (sourceOffsets != null) -->Line_85 $$ sourceOffsets[outChars.length() - outOffset] = off[ CD ]
Line_8 $$ while (off < len) -->Line_14 $$ if (aChar == '\\') [ CD ]
Line_72 $$ if (aChar == 'r') -->Line_73 $$ outChars.append('\r')[ CD ]
Line_10 $$ if (sourceOffsets != null) -->Line_11 $$ sourceOffsets[outChars.length() - outOffset] = off - 1[ CD ]
Line_9 $$ char aChar = s.charAt(off++)-->Line_76 $$ if (aChar == 'f') [ FD ]
Line_67 $$ while (off < len && (s.charAt(off) == ' ' || s.charAt(off) == '\t')) -->Line_68 $$ off++[ CD ]
Line_53 $$ int end = start + 4 < s.length() ? start + 4 : s.length()-->Line_57 $$ off = end[ FD ]
Line_4 $$ int off = 0-->Line_67 $$ while (off < len && (s.charAt(off) == ' ' || s.charAt(off) == '\t')) [ FD ]
Line_8 $$ while (off < len) -->Line_9 $$ char aChar = s.charAt(off++)[ CD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_85 $$ sourceOffsets[outChars.length() - outOffset] = off[ FD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_7 $$ final int outOffset = outChars.length()[ FD ]
Line_16 $$ if (aChar == 'u') -->Line_66 $$ if (aChar == '\n') [ CD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_20 $$ aChar = s.charAt(off++)[ FD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_84 $$ if (sourceOffsets != null) [ FD ]
Line_66 $$ if (aChar == '\n') -->Line_70 $$ if (aChar == 't') [ CD ]
Line_20 $$ aChar = s.charAt(off++)-->Line_79 $$ outChars.append(aChar)[ FD ]
Line_57 $$ off = end-->Line_68 $$ off++[ FD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_62 $$ outChars.append((char) value)[ FD ]
Line_5 $$ int len = s.length()-->Line_8 $$ while (off < len) [ FD ]
Line_20 $$ aChar = s.charAt(off++)-->Line_76 $$ if (aChar == 'f') [ FD ]
Line_17 $$ int value = 0-->Line_48 $$ value = (value << 4) + 10 + aChar - 'A'[ FD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_7 $$ final int outOffset = outChars.length()[ CD ]
Line_74 $$ if (aChar == 'n') -->Line_76 $$ if (aChar == 'f') [ CD ]
Line_18 $$ boolean error = false-->Line_56 $$ error = true[ FD ]
Line_6 $$ boolean result = true-->Line_64 $$ result = false[ FD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_11 $$ sourceOffsets[outChars.length() - outOffset] = off - 1[ FD ]
Line_15 $$ aChar = s.charAt(off++)-->Line_82 $$ outChars.append(aChar)[ FD ]
Line_57 $$ off = end-->Line_20 $$ aChar = s.charAt(off++)[ FD ]
Line_19 $$ for (int i = 0; i < 4 && off < s.length(); i++) -->Line_20 $$ aChar = s.charAt(off++)[ CD ]
Line_15 $$ aChar = s.charAt(off++)-->Line_76 $$ if (aChar == 'f') [ FD ]
Line_4 $$ int off = 0-->Line_15 $$ aChar = s.charAt(off++)[ FD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_6 $$ boolean result = true[ CD ]
Line_15 $$ aChar = s.charAt(off++)-->Line_20 $$ aChar = s.charAt(off++)[ FD ]
Line_55 $$ i = 4-->Line_19 $$ for (int i = 0; i < 4 && off < s.length(); i++) [ FD ]
Line_15 $$ aChar = s.charAt(off++)-->Line_74 $$ if (aChar == 'n') [ FD ]
Line_52 $$ int start = off - i - 1-->Line_54 $$ outChars.append(s, start, end)[ FD ]
Line_19 $$ for (int i = 0; i < 4 && off < s.length(); i++) -->Line_55 $$ i = 4[ FD ]
Line_15 $$ aChar = s.charAt(off++)-->Line_66 $$ if (aChar == '\n') [ FD ]
Line_9 $$ char aChar = s.charAt(off++)-->Line_14 $$ if (aChar == '\\') [ FD ]
Line_40 $$ value = (value << 4) + 10 + aChar - 'a'-->Line_48 $$ value = (value << 4) + 10 + aChar - 'A'[ FD ]
Line_9 $$ char aChar = s.charAt(off++)-->Line_74 $$ if (aChar == 'n') [ FD ]
Line_4 $$ int off = 0-->Line_8 $$ while (off < len) [ FD ]
Line_4 $$ int off = 0-->Line_12 $$ sourceOffsets[outChars.length() + 1 - outOffset] = off[ FD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_53 $$ int end = start + 4 < s.length() ? start + 4 : s.length()[ FD ]
Line_9 $$ char aChar = s.charAt(off++)-->Line_72 $$ if (aChar == 'r') [ FD ]
Line_76 $$ if (aChar == 'f') -->Line_79 $$ outChars.append(aChar)[ CD ]
Line_32 $$ value = (value << 4) + aChar - '0'-->Line_48 $$ value = (value << 4) + 10 + aChar - 'A'[ FD ]
Line_18 $$ boolean error = false-->Line_61 $$ if (!error) [ FD ]
Line_20 $$ aChar = s.charAt(off++)-->Line_74 $$ if (aChar == 'n') [ FD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_67 $$ while (off < len && (s.charAt(off) == ' ' || s.charAt(off) == '\t')) [ FD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_54 $$ outChars.append(s, start, end)[ FD ]
Line_74 $$ if (aChar == 'n') -->Line_75 $$ outChars.append('\n')[ CD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_82 $$ outChars.append(aChar)[ FD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_8 $$ while (off < len) [ CD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_19 $$ for (int i = 0; i < 4 && off < s.length(); i++) [ FD ]
Line_9 $$ char aChar = s.charAt(off++)-->Line_79 $$ outChars.append(aChar)[ FD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_51 $$ outChars.append("\\u")[ FD ]
Line_20 $$ aChar = s.charAt(off++)-->Line_82 $$ outChars.append(aChar)[ FD ]
Line_9 $$ char aChar = s.charAt(off++)-->Line_66 $$ if (aChar == '\n') [ FD ]
Line_16 $$ if (aChar == 'u') -->Line_17 $$ int value = 0[ CD ]
Line_4 $$ int off = 0-->Line_85 $$ sourceOffsets[outChars.length() - outOffset] = off[ FD ]
Line_70 $$ if (aChar == 't') -->Line_72 $$ if (aChar == 'r') [ CD ]
Line_4 $$ int off = 0-->Line_68 $$ off++[ FD ]
Line_53 $$ int end = start + 4 < s.length() ? start + 4 : s.length()-->Line_54 $$ outChars.append(s, start, end)[ FD ]
Line_15 $$ aChar = s.charAt(off++)-->Line_79 $$ outChars.append(aChar)[ FD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_15 $$ aChar = s.charAt(off++)[ FD ]
Line_15 $$ aChar = s.charAt(off++)-->Line_14 $$ if (aChar == '\\') [ FD ]
Line_4 $$ int off = 0-->Line_20 $$ aChar = s.charAt(off++)[ FD ]
Line_9 $$ char aChar = s.charAt(off++)-->Line_20 $$ aChar = s.charAt(off++)[ FD ]
Line_57 $$ off = end-->Line_85 $$ sourceOffsets[outChars.length() - outOffset] = off[ FD ]
Line_9 $$ char aChar = s.charAt(off++)-->Line_82 $$ outChars.append(aChar)[ FD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_71 $$ outChars.append('\t')[ FD ]
Line_4 $$ int off = 0-->Line_11 $$ sourceOffsets[outChars.length() - outOffset] = off - 1[ FD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_3 $$ assert sourceOffsets == null || sourceOffsets.length == s.length() + 1[ FD ]
Line_17 $$ int value = 0-->Line_40 $$ value = (value << 4) + 10 + aChar - 'a'[ FD ]
Line_61 $$ if (!error) -->Line_62 $$ outChars.append((char) value)[ CD ]
Line_10 $$ if (sourceOffsets != null) -->Line_12 $$ sourceOffsets[outChars.length() + 1 - outOffset] = off[ CD ]
Line_14 $$ if (aChar == '\\') -->Line_15 $$ aChar = s.charAt(off++)[ CD ]
Line_72 $$ if (aChar == 'r') -->Line_74 $$ if (aChar == 'n') [ CD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_77 $$ outChars.append('\f')[ FD ]
Line_32 $$ value = (value << 4) + aChar - '0'-->Line_40 $$ value = (value << 4) + 10 + aChar - 'a'[ FD ]
Line_9 $$ char aChar = s.charAt(off++)-->Line_15 $$ aChar = s.charAt(off++)[ FD ]
Line_70 $$ if (aChar == 't') -->Line_71 $$ outChars.append('\t')[ CD ]
Line_15 $$ aChar = s.charAt(off++)-->Line_72 $$ if (aChar == 'r') [ FD ]
Line_8 $$ while (off < len) -->Line_10 $$ if (sourceOffsets != null) [ CD ]
Line_76 $$ if (aChar == 'f') -->Line_77 $$ outChars.append('\f')[ CD ]
Line_16 $$ if (aChar == 'u') -->Line_18 $$ boolean error = false[ CD ]
Line_4 $$ int off = 0-->Line_57 $$ off = end[ FD ]
Line_16 $$ if (aChar == 'u') -->Line_19 $$ for (int i = 0; i < 4 && off < s.length(); i++) [ CD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_12 $$ sourceOffsets[outChars.length() + 1 - outOffset] = off[ FD ]
Line_16 $$ if (aChar == 'u') -->Line_61 $$ if (!error) [ CD ]
Line_15 $$ aChar = s.charAt(off++)-->Line_16 $$ if (aChar == 'u') [ FD ]
Line_15 $$ aChar = s.charAt(off++)-->Line_70 $$ if (aChar == 't') [ FD ]
Line_20 $$ aChar = s.charAt(off++)-->Line_66 $$ if (aChar == '\n') [ FD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_73 $$ outChars.append('\r')[ FD ]
Line_9 $$ char aChar = s.charAt(off++)-->Line_16 $$ if (aChar == 'u') [ FD ]
Line_20 $$ aChar = s.charAt(off++)-->Line_72 $$ if (aChar == 'r') [ FD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_4 $$ int off = 0[ CD ]
Line_2 $$ public static boolean parseCharacters(String s, StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_79 $$ outChars.append(aChar)[ FD ]
Line_61 $$ if (!error) -->Line_64 $$ result = false[ CD ]
Line_56 $$ error = true-->Line_61 $$ if (!error) [ FD ]
Line_14 $$ if (aChar == '\\') -->Line_16 $$ if (aChar == 'u') [ CD ]
Line_20 $$ aChar = s.charAt(off++)-->Line_70 $$ if (aChar == 't') [ FD ]
