Line_2 $$ public static String getSignaturePresentation(MethodSignature signature) -->Line_4 $$ builder.append(signature.getName()).append('(')[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_12 $$ return builder.toString()[ FD ]
Line_2 $$ public static String getSignaturePresentation(MethodSignature signature) -->Line_4 $$ builder.append(signature.getName()).append('(')[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_4 $$ builder.append(signature.getName()).append('(')[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_7 $$ builder.append(type.getPresentableText()).append(", ")[ FD ]
Line_2 $$ public static String getSignaturePresentation(MethodSignature signature) -->Line_9 $$ if (types.length > 0)[ CD ]
Line_9 $$ if (types.length > 0)-->Line_10 $$ builder.delete(builder.length() - 2, builder.length())[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_11 $$ builder.append(")")[ FD ]
Line_2 $$ public static String getSignaturePresentation(MethodSignature signature) -->Line_12 $$ return builder.toString()[ CD ]
Line_2 $$ public static String getSignaturePresentation(MethodSignature signature) -->Line_11 $$ builder.append(")")[ CD ]
Line_2 $$ public static String getSignaturePresentation(MethodSignature signature) -->Line_5 $$ PsiType[] types = signature.getParameterTypes()[ FD ]
Line_2 $$ public static String getSignaturePresentation(MethodSignature signature) -->Line_5 $$ PsiType[] types = signature.getParameterTypes()[ CD ]
Line_6 $$ for (PsiType type : types) -->Line_7 $$ builder.append(type.getPresentableText()).append(", ")[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_10 $$ builder.delete(builder.length() - 2, builder.length())[ FD ]
Line_2 $$ public static String getSignaturePresentation(MethodSignature signature) -->Line_3 $$ StringBuilder builder = new StringBuilder()[ CD ]
