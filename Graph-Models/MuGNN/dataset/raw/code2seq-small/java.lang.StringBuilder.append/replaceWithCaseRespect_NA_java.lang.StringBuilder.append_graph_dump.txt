Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_12 $$ return buffer.toString()[ FD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_23 $$ boolean isTailUpper = true[ CD ]
Line_23 $$ boolean isTailUpper = true-->Line_31 $$ if (isTailUpper && isReplacementLowercase) [ FD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_32 $$ buffer.append(StringUtil.toUpperCase(toReplace.substring(1)))[ FD ]
Line_25 $$ for (int i = 1; i < foundString.length(); i++) -->Line_27 $$ isTailLower &= Character.isLowerCase(foundString.charAt(i))[ FD ]
Line_3 $$ if (foundString.isEmpty() || toReplace.isEmpty())-->Line_4 $$ return toReplace[ CD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_31 $$ if (isTailUpper && isReplacementLowercase) [ CD ]
Line_13 $$ if (foundString.length() == 1) -->Line_15 $$ return buffer.toString()[ CD ]
Line_19 $$ isReplacementLowercase = Character.isLowerCase(toReplace.charAt(i))-->Line_20 $$ if (!isReplacementLowercase)[ FD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_7 $$ buffer.append(Character.toUpperCase(toReplace.charAt(0)))[ FD ]
Line_6 $$ if (Character.isUpperCase(foundString.charAt(0))) -->Line_9 $$ buffer.append(Character.toLowerCase(toReplace.charAt(0)))[ CD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_19 $$ isReplacementLowercase = Character.isLowerCase(toReplace.charAt(i))[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_32 $$ buffer.append(StringUtil.toUpperCase(toReplace.substring(1)))[ FD ]
Line_19 $$ isReplacementLowercase = Character.isLowerCase(toReplace.charAt(i))-->Line_33 $$ if (isTailLower && isReplacementLowercase) [ FD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_13 $$ if (foundString.length() == 1) [ CD ]
Line_18 $$ for (int i = 1; i < toReplace.length(); i++) -->Line_25 $$ for (int i = 1; i < foundString.length(); i++) [ FD ]
Line_17 $$ boolean isReplacementLowercase = true-->Line_31 $$ if (isTailUpper && isReplacementLowercase) [ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_15 $$ return buffer.toString()[ FD ]
Line_17 $$ boolean isReplacementLowercase = true-->Line_20 $$ if (!isReplacementLowercase)[ FD ]
Line_25 $$ for (int i = 1; i < foundString.length(); i++) -->Line_28 $$ if (!isTailUpper && !isTailLower)[ CD ]
Line_31 $$ if (isTailUpper && isReplacementLowercase) -->Line_32 $$ buffer.append(StringUtil.toUpperCase(toReplace.substring(1)))[ CD ]
Line_24 $$ boolean isTailLower = true-->Line_33 $$ if (isTailLower && isReplacementLowercase) [ FD ]
Line_17 $$ boolean isReplacementLowercase = true-->Line_19 $$ isReplacementLowercase = Character.isLowerCase(toReplace.charAt(i))[ FD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_17 $$ boolean isReplacementLowercase = true[ CD ]
Line_33 $$ if (isTailLower && isReplacementLowercase) -->Line_34 $$ buffer.append(toReplace.substring(1).toLowerCase())[ CD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_25 $$ for (int i = 1; i < foundString.length(); i++) [ CD ]
Line_24 $$ boolean isTailLower = true-->Line_28 $$ if (!isTailUpper && !isTailLower)[ FD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_34 $$ buffer.append(toReplace.substring(1).toLowerCase())[ FD ]
Line_23 $$ boolean isTailUpper = true-->Line_26 $$ isTailUpper &= Character.isUpperCase(foundString.charAt(i))[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_36 $$ buffer.append(toReplace.substring(1))[ FD ]
Line_27 $$ isTailLower &= Character.isLowerCase(foundString.charAt(i))-->Line_33 $$ if (isTailLower && isReplacementLowercase) [ FD ]
Line_18 $$ for (int i = 1; i < toReplace.length(); i++) -->Line_19 $$ isReplacementLowercase = Character.isLowerCase(toReplace.charAt(i))[ FD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_18 $$ for (int i = 1; i < toReplace.length(); i++) [ CD ]
Line_18 $$ for (int i = 1; i < toReplace.length(); i++) -->Line_26 $$ isTailUpper &= Character.isUpperCase(foundString.charAt(i))[ FD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_14 $$ buffer.append(toReplace.substring(1))[ FD ]
Line_26 $$ isTailUpper &= Character.isUpperCase(foundString.charAt(i))-->Line_31 $$ if (isTailUpper && isReplacementLowercase) [ FD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_25 $$ for (int i = 1; i < foundString.length(); i++) [ FD ]
Line_17 $$ boolean isReplacementLowercase = true-->Line_33 $$ if (isTailLower && isReplacementLowercase) [ FD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_36 $$ buffer.append(toReplace.substring(1))[ FD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_26 $$ isTailUpper &= Character.isUpperCase(foundString.charAt(i))[ FD ]
Line_18 $$ for (int i = 1; i < toReplace.length(); i++) -->Line_19 $$ isReplacementLowercase = Character.isLowerCase(toReplace.charAt(i))[ CD ]
Line_31 $$ if (isTailUpper && isReplacementLowercase) -->Line_33 $$ if (isTailLower && isReplacementLowercase) [ CD ]
Line_19 $$ isReplacementLowercase = Character.isLowerCase(toReplace.charAt(i))-->Line_31 $$ if (isTailUpper && isReplacementLowercase) [ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_38 $$ return buffer.toString()[ FD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_6 $$ if (Character.isUpperCase(foundString.charAt(0))) [ CD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_34 $$ buffer.append(toReplace.substring(1).toLowerCase())[ FD ]
Line_24 $$ boolean isTailLower = true-->Line_27 $$ isTailLower &= Character.isLowerCase(foundString.charAt(i))[ FD ]
Line_18 $$ for (int i = 1; i < toReplace.length(); i++) -->Line_27 $$ isTailLower &= Character.isLowerCase(foundString.charAt(i))[ FD ]
Line_13 $$ if (foundString.length() == 1) -->Line_14 $$ buffer.append(toReplace.substring(1))[ CD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_9 $$ buffer.append(Character.toLowerCase(toReplace.charAt(0)))[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_9 $$ buffer.append(Character.toLowerCase(toReplace.charAt(0)))[ FD ]
Line_27 $$ isTailLower &= Character.isLowerCase(foundString.charAt(i))-->Line_28 $$ if (!isTailUpper && !isTailLower)[ FD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_11 $$ if (toReplace.length() == 1)[ CD ]
Line_11 $$ if (toReplace.length() == 1)-->Line_12 $$ return buffer.toString()[ CD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_6 $$ if (Character.isUpperCase(foundString.charAt(0))) [ FD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_3 $$ if (foundString.isEmpty() || toReplace.isEmpty())[ FD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_24 $$ boolean isTailLower = true[ CD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_5 $$ StringBuilder buffer = new StringBuilder()[ CD ]
Line_6 $$ if (Character.isUpperCase(foundString.charAt(0))) -->Line_7 $$ buffer.append(Character.toUpperCase(toReplace.charAt(0)))[ CD ]
Line_25 $$ for (int i = 1; i < foundString.length(); i++) -->Line_26 $$ isTailUpper &= Character.isUpperCase(foundString.charAt(i))[ CD ]
Line_23 $$ boolean isTailUpper = true-->Line_28 $$ if (!isTailUpper && !isTailLower)[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_7 $$ buffer.append(Character.toUpperCase(toReplace.charAt(0)))[ FD ]
Line_33 $$ if (isTailLower && isReplacementLowercase) -->Line_36 $$ buffer.append(toReplace.substring(1))[ CD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_14 $$ buffer.append(toReplace.substring(1))[ FD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_18 $$ for (int i = 1; i < toReplace.length(); i++) [ FD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_38 $$ return buffer.toString()[ CD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_13 $$ if (foundString.length() == 1) [ FD ]
Line_25 $$ for (int i = 1; i < foundString.length(); i++) -->Line_27 $$ isTailLower &= Character.isLowerCase(foundString.charAt(i))[ CD ]
Line_26 $$ isTailUpper &= Character.isUpperCase(foundString.charAt(i))-->Line_28 $$ if (!isTailUpper && !isTailLower)[ FD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_3 $$ if (foundString.isEmpty() || toReplace.isEmpty())[ CD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_11 $$ if (toReplace.length() == 1)[ FD ]
Line_18 $$ for (int i = 1; i < toReplace.length(); i++) -->Line_20 $$ if (!isReplacementLowercase)[ CD ]
Line_2 $$ private static String replaceWithCaseRespect(String toReplace, String foundString) -->Line_27 $$ isTailLower &= Character.isLowerCase(foundString.charAt(i))[ FD ]
Line_25 $$ for (int i = 1; i < foundString.length(); i++) -->Line_26 $$ isTailUpper &= Character.isUpperCase(foundString.charAt(i))[ FD ]
