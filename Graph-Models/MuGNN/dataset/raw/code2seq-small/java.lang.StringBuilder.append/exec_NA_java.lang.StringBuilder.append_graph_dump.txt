Line_9 $$ String lineSep = System.getProperty("line.separator")-->Line_12 $$ sb.append(str).append(lineSep)[ FD ]
Line_11 $$ String str-->Line_13 $$ sb.append(str).append(lineSep)[ FD ]
Line_2 $$ public static void exec(ProcessBuilder pb) throws IOException -->Line_3 $$ Process p = pb.start()[ CD ]
Line_2 $$ public static void exec(ProcessBuilder pb) throws IOException -->Line_14 $$ throw new IOException("Exception while executing the command: " + StringUtils.join(pb.command(), " ") + ", command error Code: " + errCode + ", command output: " + sb.toString())[ FD ]
Line_3 $$ Process p = pb.start()-->Line_5 $$ int errCode = p.waitFor()[ FD ]
Line_11 $$ String str-->Line_13 $$ while ((str = err.readLine()) != null) sb.append(str).append(lineSep)[ FD ]
Line_10 $$ StringBuilder sb = new StringBuilder()-->Line_12 $$ sb.append(str).append(lineSep)[ FD ]
Line_2 $$ public static void exec(ProcessBuilder pb) throws IOException -->Line_3 $$ Process p = pb.start()[ FD ]
Line_12 $$ while ((str = in.readLine()) != null) sb.append(str).append(lineSep)-->Line_13 $$ while ((str = err.readLine()) != null) sb.append(str).append(lineSep)[ FD ]
Line_10 $$ StringBuilder sb = new StringBuilder()-->Line_13 $$ sb.append(str).append(lineSep)[ FD ]
Line_12 $$ while ((str = in.readLine()) != null) sb.append(str).append(lineSep)-->Line_13 $$ sb.append(str).append(lineSep)[ FD ]
Line_11 $$ String str-->Line_12 $$ sb.append(str).append(lineSep)[ FD ]
Line_9 $$ String lineSep = System.getProperty("line.separator")-->Line_13 $$ sb.append(str).append(lineSep)[ FD ]
Line_7 $$ try (BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()));-->Line_13 $$ while ((str = err.readLine()) != null) sb.append(str).append(lineSep)[ FD ]
Line_11 $$ String str-->Line_12 $$ while ((str = in.readLine()) != null) sb.append(str).append(lineSep)[ FD ]
Line_7 $$ try (BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()));-->Line_12 $$ while ((str = in.readLine()) != null) sb.append(str).append(lineSep)[ FD ]
Line_10 $$ StringBuilder sb = new StringBuilder()-->Line_14 $$ throw new IOException("Exception while executing the command: " + StringUtils.join(pb.command(), " ") + ", command error Code: " + errCode + ", command output: " + sb.toString())[ FD ]
Line_5 $$ int errCode = p.waitFor()-->Line_6 $$ if (errCode != 0) [ FD ]
Line_3 $$ Process p = pb.start()-->Line_7 $$ try (BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()));[ FD ]
