Line_24 $$ c = reader.read()-->Line_22 $$ while (c > -1) [ FD ]
Line_19 $$ StringBuilder secret = new StringBuilder()-->Line_23 $$ secret.append((char) c)[ FD ]
Line_8 $$ if (name.startsWith(CONF_PREFIX)) -->Line_9 $$ String value = conf.get(name)[ CD ]
Line_7 $$ String name = entry.getKey()-->Line_10 $$ name = name.substring(CONF_PREFIX.length())[ FD ]
Line_20 $$ Reader reader = new FileReader(signatureSecretFile)-->Line_21 $$ int c = reader.read()[ FD ]
Line_7 $$ String name = entry.getKey()-->Line_9 $$ String value = conf.get(name)[ FD ]
Line_8 $$ if (name.startsWith(CONF_PREFIX)) -->Line_11 $$ props.setProperty(name, value)[ CD ]
Line_21 $$ int c = reader.read()-->Line_22 $$ while (c > -1) [ FD ]
Line_3 $$ Properties props = new Properties()-->Line_11 $$ props.setProperty(name, value)[ FD ]
Line_2 $$ protected Properties getConfiguration(String configPrefix, FilterConfig filterConfig) throws ServletException -->Line_31 $$ return props[ CD ]
Line_2 $$ protected Properties getConfiguration(String configPrefix, FilterConfig filterConfig) throws ServletException -->Line_15 $$ if (signatureSecretFile == null) [ CD ]
Line_2 $$ protected Properties getConfiguration(String configPrefix, FilterConfig filterConfig) throws ServletException -->Line_4 $$ Configuration conf = HttpFSServerWebApp.get().getConfig()[ CD ]
Line_8 $$ if (name.startsWith(CONF_PREFIX)) -->Line_10 $$ name = name.substring(CONF_PREFIX.length())[ CD ]
Line_22 $$ while (c > -1) -->Line_23 $$ secret.append((char) c)[ CD ]
Line_3 $$ Properties props = new Properties()-->Line_14 $$ String signatureSecretFile = props.getProperty(SIGNATURE_SECRET_FILE, null)[ FD ]
Line_2 $$ protected Properties getConfiguration(String configPrefix, FilterConfig filterConfig) throws ServletException -->Line_5 $$ props.setProperty(AuthenticationFilter.COOKIE_PATH, "/")[ CD ]
Line_20 $$ Reader reader = new FileReader(signatureSecretFile)-->Line_26 $$ reader.close()[ FD ]
Line_9 $$ String value = conf.get(name)-->Line_11 $$ props.setProperty(name, value)[ FD ]
Line_2 $$ protected Properties getConfiguration(String configPrefix, FilterConfig filterConfig) throws ServletException -->Line_14 $$ String signatureSecretFile = props.getProperty(SIGNATURE_SECRET_FILE, null)[ CD ]
Line_3 $$ Properties props = new Properties()-->Line_5 $$ props.setProperty(AuthenticationFilter.COOKIE_PATH, "/")[ FD ]
Line_3 $$ Properties props = new Properties()-->Line_27 $$ props.setProperty(AuthenticationFilter.SIGNATURE_SECRET, secret.toString())[ FD ]
Line_2 $$ protected Properties getConfiguration(String configPrefix, FilterConfig filterConfig) throws ServletException -->Line_3 $$ Properties props = new Properties()[ CD ]
Line_6 $$ for (Map.Entry<String, String> entry : conf) -->Line_7 $$ String name = entry.getKey()[ FD ]
Line_7 $$ String name = entry.getKey()-->Line_8 $$ if (name.startsWith(CONF_PREFIX)) [ FD ]
Line_21 $$ int c = reader.read()-->Line_24 $$ c = reader.read()[ FD ]
Line_7 $$ String name = entry.getKey()-->Line_11 $$ props.setProperty(name, value)[ FD ]
Line_19 $$ StringBuilder secret = new StringBuilder()-->Line_27 $$ props.setProperty(AuthenticationFilter.SIGNATURE_SECRET, secret.toString())[ FD ]
Line_10 $$ name = name.substring(CONF_PREFIX.length())-->Line_11 $$ props.setProperty(name, value)[ FD ]
Line_4 $$ Configuration conf = HttpFSServerWebApp.get().getConfig()-->Line_9 $$ String value = conf.get(name)[ FD ]
Line_22 $$ while (c > -1) -->Line_24 $$ c = reader.read()[ CD ]
Line_14 $$ String signatureSecretFile = props.getProperty(SIGNATURE_SECRET_FILE, null)-->Line_15 $$ if (signatureSecretFile == null) [ FD ]
Line_20 $$ Reader reader = new FileReader(signatureSecretFile)-->Line_24 $$ c = reader.read()[ FD ]
