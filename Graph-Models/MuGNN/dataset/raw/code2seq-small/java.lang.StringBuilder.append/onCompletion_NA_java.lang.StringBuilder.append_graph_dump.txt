Line_3 $$ final StringBuilder sb = new StringBuilder()-->Line_7 $$ sb.append("completion event")[ FD ]
Line_3 $$ final StringBuilder sb = new StringBuilder()-->Line_12 $$ assertEquals("completion event", sb.toString())[ FD ]
Line_5 $$ result.onCompletion(new Runnable() -->Line_7 $$ sb.append("completion event")[ CD ]
Line_2 $$ public void onCompletion() throws Exception -->Line_11 $$ assertTrue(result.isSetOrExpired())[ CD ]
Line_2 $$ public void onCompletion() throws Exception -->Line_5 $$ result.onCompletion(new Runnable() [ CD ]
Line_4 $$ DeferredResult<String> result = new DeferredResult<String>()-->Line_5 $$ result.onCompletion(new Runnable() [ FD ]
Line_4 $$ DeferredResult<String> result = new DeferredResult<String>()-->Line_10 $$ result.getInterceptor().afterCompletion(null, null)[ FD ]
Line_2 $$ public void onCompletion() throws Exception -->Line_12 $$ assertEquals("completion event", sb.toString())[ CD ]
Line_2 $$ public void onCompletion() throws Exception -->Line_4 $$ DeferredResult<String> result = new DeferredResult<String>()[ CD ]
Line_2 $$ public void onCompletion() throws Exception -->Line_10 $$ result.getInterceptor().afterCompletion(null, null)[ CD ]
Line_2 $$ public void onCompletion() throws Exception -->Line_3 $$ final StringBuilder sb = new StringBuilder()[ CD ]
Line_4 $$ DeferredResult<String> result = new DeferredResult<String>()-->Line_11 $$ assertTrue(result.isSetOrExpired())[ FD ]
