Line_3 $$ char[] buffer = myBuffer-->Line_6 $$ int n = myReader.read(buffer)[ FD ]
Line_2 $$ private synchronized boolean readAvailable() throws IOException -->Line_4 $$ StringBuilder token = new StringBuilder()[ CD ]
Line_20 $$ if (c == '\n') -->Line_21 $$ textAvailable(token.toString())[ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_10 $$ char c = buffer[i][ CD ]
Line_11 $$ if (skipLF && c != '\n') -->Line_12 $$ token.append('\r')[ CD ]
Line_6 $$ int n = myReader.read(buffer)-->Line_7 $$ if (n <= 0)[ FD ]
Line_10 $$ char c = buffer[i]-->Line_20 $$ if (c == '\n') [ FD ]
Line_30 $$ if (myIsProcessTerminated) -->Line_35 $$ return false[ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_14 $$ if (c == '\r') [ CD ]
Line_26 $$ if (token.length() != 0) -->Line_27 $$ textAvailable(token.toString())[ CD ]
Line_5 $$ while (myReader.ready()) -->Line_7 $$ if (n <= 0)[ CD ]
Line_4 $$ StringBuilder token = new StringBuilder()-->Line_22 $$ token.setLength(0)[ FD ]
Line_2 $$ private synchronized boolean readAvailable() throws IOException -->Line_37 $$ return true[ CD ]
Line_10 $$ char c = buffer[i]-->Line_14 $$ if (c == '\r') [ FD ]
Line_6 $$ int n = myReader.read(buffer)-->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_4 $$ StringBuilder token = new StringBuilder()-->Line_28 $$ token.setLength(0)[ FD ]
Line_4 $$ StringBuilder token = new StringBuilder()-->Line_27 $$ textAvailable(token.toString())[ FD ]
Line_4 $$ StringBuilder token = new StringBuilder()-->Line_18 $$ token.append(c)[ FD ]
Line_2 $$ private synchronized boolean readAvailable() throws IOException -->Line_30 $$ if (myIsProcessTerminated) [ CD ]
Line_4 $$ StringBuilder token = new StringBuilder()-->Line_12 $$ token.append('\r')[ FD ]
Line_2 $$ private synchronized boolean readAvailable() throws IOException -->Line_3 $$ char[] buffer = myBuffer[ CD ]
Line_4 $$ StringBuilder token = new StringBuilder()-->Line_21 $$ textAvailable(token.toString())[ FD ]
Line_26 $$ if (token.length() != 0) -->Line_28 $$ token.setLength(0)[ CD ]
Line_5 $$ while (myReader.ready()) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_11 $$ if (skipLF && c != '\n') [ CD ]
Line_2 $$ private synchronized boolean readAvailable() throws IOException -->Line_26 $$ if (token.length() != 0) [ CD ]
Line_2 $$ private synchronized boolean readAvailable() throws IOException -->Line_5 $$ while (myReader.ready()) [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_20 $$ if (c == '\n') [ CD ]
Line_14 $$ if (c == '\r') -->Line_18 $$ token.append(c)[ CD ]
Line_4 $$ StringBuilder token = new StringBuilder()-->Line_26 $$ if (token.length() != 0) [ FD ]
Line_10 $$ char c = buffer[i]-->Line_18 $$ token.append(c)[ FD ]
Line_5 $$ while (myReader.ready()) -->Line_6 $$ int n = myReader.read(buffer)[ CD ]
Line_20 $$ if (c == '\n') -->Line_22 $$ token.setLength(0)[ CD ]
