Line_6 $$ if (settings.GENERATE_FINAL_LOCALS) -->Line_7 $$ buffer.append("final ")[ CD ]
Line_2 $$ private String addTempForOneField(PsiField field, StringBuilder buffer) -->Line_7 $$ buffer.append("final ")[ FD ]
Line_4 $$ final String name = getUniqueLocalVarName(TEMP_VARIABLE, myHashCodeFields)-->Line_9 $$ buffer.append("long ").append(name)[ FD ]
Line_3 $$ if (PsiType.DOUBLE.equals(field.getType())) -->Line_10 $$ addTempForDoubleInitialization(field, buffer)[ CD ]
Line_2 $$ private String addTempForOneField(PsiField field, StringBuilder buffer) -->Line_3 $$ if (PsiType.DOUBLE.equals(field.getType())) [ FD ]
Line_2 $$ private String addTempForOneField(PsiField field, StringBuilder buffer) -->Line_3 $$ if (PsiType.DOUBLE.equals(field.getType())) [ CD ]
Line_3 $$ if (PsiType.DOUBLE.equals(field.getType())) -->Line_9 $$ buffer.append("long ").append(name)[ CD ]
Line_3 $$ if (PsiType.DOUBLE.equals(field.getType())) -->Line_5 $$ CodeStyleSettings settings = CodeStyleSettingsManager.getSettings(myProject)[ CD ]
Line_3 $$ if (PsiType.DOUBLE.equals(field.getType())) -->Line_11 $$ return name[ CD ]
Line_5 $$ CodeStyleSettings settings = CodeStyleSettingsManager.getSettings(myProject)-->Line_6 $$ if (settings.GENERATE_FINAL_LOCALS) [ FD ]
Line_2 $$ private String addTempForOneField(PsiField field, StringBuilder buffer) -->Line_9 $$ buffer.append("long ").append(name)[ FD ]
Line_3 $$ if (PsiType.DOUBLE.equals(field.getType())) -->Line_4 $$ final String name = getUniqueLocalVarName(TEMP_VARIABLE, myHashCodeFields)[ CD ]
Line_3 $$ if (PsiType.DOUBLE.equals(field.getType())) -->Line_6 $$ if (settings.GENERATE_FINAL_LOCALS) [ CD ]
Line_2 $$ private String addTempForOneField(PsiField field, StringBuilder buffer) -->Line_10 $$ addTempForDoubleInitialization(field, buffer)[ FD ]
Line_3 $$ if (PsiType.DOUBLE.equals(field.getType())) -->Line_13 $$ return null[ CD ]
