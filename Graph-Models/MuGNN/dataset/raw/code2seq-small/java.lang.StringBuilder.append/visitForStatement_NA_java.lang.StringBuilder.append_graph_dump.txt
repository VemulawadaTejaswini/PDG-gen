Line_6 $$ if (clause instanceof GrForInClause) -->Line_16 $$ if (clause instanceof GrTraditionalForClause) [ CD ]
Line_2 $$ public void visitForStatement(GrForStatement forStatement) -->Line_4 $$ final GrForClause clause = forStatement.getClause()[ FD ]
Line_2 $$ public void visitForStatement(GrForStatement forStatement) -->Line_5 $$ ExpressionContext forContext = context.extend()[ CD ]
Line_7 $$ final GrExpression expression = ((GrForInClause) clause).getIteratedExpression()-->Line_14 $$ writeExpression(expression, builder, context)[ FD ]
Line_4 $$ final GrForClause clause = forStatement.getClause()-->Line_16 $$ if (clause instanceof GrTraditionalForClause) [ FD ]
Line_21 $$ if (initialization instanceof GrParameter) -->Line_24 $$ final GrExpression initializer = ((GrParameter) initialization).getInitializerGroovy()[ CD ]
Line_2 $$ public void visitForStatement(GrForStatement forStatement) -->Line_48 $$ builder.append(')')[ CD ]
Line_25 $$ if (initializer != null) -->Line_28 $$ writeExpression(initializer, partBuilder, partContext)[ CD ]
Line_18 $$ final GrCondition initialization = cl.getInitialization()-->Line_21 $$ if (initialization instanceof GrParameter) [ FD ]
Line_16 $$ if (clause instanceof GrTraditionalForClause) -->Line_44 $$ if (update != null) [ CD ]
Line_25 $$ if (initializer != null) -->Line_26 $$ final ExpressionContext partContext = forContext.copy()[ CD ]
Line_7 $$ final GrExpression expression = ((GrForInClause) clause).getIteratedExpression()-->Line_12 $$ if (expression != null) [ FD ]
Line_2 $$ public void visitForStatement(GrForStatement forStatement) -->Line_49 $$ final GrStatement body = forStatement.getBody()[ FD ]
Line_5 $$ ExpressionContext forContext = context.extend()-->Line_41 $$ genForPart(builder, condition, forContext.copy())[ FD ]
Line_21 $$ if (initialization instanceof GrParameter) -->Line_23 $$ writeVariableWithoutSemicolonAndInitializer(partBuilder, (GrParameter) initialization, context)[ CD ]
Line_22 $$ StringBuilder partBuilder = new StringBuilder()-->Line_32 $$ builder.append(partBuilder)[ FD ]
Line_49 $$ final GrStatement body = forStatement.getBody()-->Line_51 $$ body.accept(new CodeBlockGenerator(builder, forContext, null))[ FD ]
Line_17 $$ final GrTraditionalForClause cl = (GrTraditionalForClause) clause-->Line_19 $$ final GrExpression condition = cl.getCondition()[ FD ]
Line_19 $$ final GrExpression condition = cl.getCondition()-->Line_41 $$ genForPart(builder, condition, forContext.copy())[ FD ]
Line_24 $$ final GrExpression initializer = ((GrParameter) initialization).getInitializerGroovy()-->Line_25 $$ if (initializer != null) [ FD ]
Line_16 $$ if (clause instanceof GrTraditionalForClause) -->Line_39 $$ builder.append(';')[ CD ]
Line_4 $$ final GrForClause clause = forStatement.getClause()-->Line_6 $$ if (clause instanceof GrForInClause) [ FD ]
Line_25 $$ if (initializer != null) -->Line_32 $$ builder.append(partBuilder)[ CD ]
Line_6 $$ if (clause instanceof GrForInClause) -->Line_7 $$ final GrExpression expression = ((GrForInClause) clause).getIteratedExpression()[ CD ]
Line_16 $$ if (clause instanceof GrTraditionalForClause) -->Line_20 $$ final GrExpression update = cl.getUpdate()[ CD ]
Line_16 $$ if (clause instanceof GrTraditionalForClause) -->Line_21 $$ if (initialization instanceof GrParameter) [ CD ]
Line_16 $$ if (clause instanceof GrTraditionalForClause) -->Line_43 $$ builder.append(';')[ CD ]
Line_16 $$ if (clause instanceof GrTraditionalForClause) -->Line_18 $$ final GrCondition initialization = cl.getInitialization()[ CD ]
Line_50 $$ if (body != null) -->Line_51 $$ body.accept(new CodeBlockGenerator(builder, forContext, null))[ CD ]
Line_2 $$ public void visitForStatement(GrForStatement forStatement) -->Line_6 $$ if (clause instanceof GrForInClause) [ CD ]
Line_6 $$ if (clause instanceof GrForInClause) -->Line_8 $$ final GrVariable declaredVariable = clause.getDeclaredVariable()[ CD ]
Line_5 $$ ExpressionContext forContext = context.extend()-->Line_26 $$ final ExpressionContext partContext = forContext.copy()[ FD ]
Line_22 $$ StringBuilder partBuilder = new StringBuilder()-->Line_28 $$ writeExpression(initializer, partBuilder, partContext)[ FD ]
Line_12 $$ if (expression != null) -->Line_14 $$ writeExpression(expression, builder, context)[ CD ]
Line_5 $$ ExpressionContext forContext = context.extend()-->Line_45 $$ genForPart(builder, update, forContext.copy())[ FD ]
Line_16 $$ if (clause instanceof GrTraditionalForClause) -->Line_40 $$ if (condition != null) [ CD ]
Line_2 $$ public void visitForStatement(GrForStatement forStatement) -->Line_3 $$ builder.append("for(")[ CD ]
Line_2 $$ public void visitForStatement(GrForStatement forStatement) -->Line_4 $$ final GrForClause clause = forStatement.getClause()[ CD ]
Line_4 $$ final GrForClause clause = forStatement.getClause()-->Line_8 $$ final GrVariable declaredVariable = clause.getDeclaredVariable()[ FD ]
Line_13 $$ final ExpressionContext context = forContext.copy()-->Line_23 $$ writeVariableWithoutSemicolonAndInitializer(partBuilder, (GrParameter) initialization, context)[ FD ]
Line_18 $$ final GrCondition initialization = cl.getInitialization()-->Line_34 $$ if (initialization != null) [ FD ]
Line_24 $$ final GrExpression initializer = ((GrParameter) initialization).getInitializerGroovy()-->Line_28 $$ writeExpression(initializer, partBuilder, partContext)[ FD ]
Line_40 $$ if (condition != null) -->Line_41 $$ genForPart(builder, condition, forContext.copy())[ CD ]
Line_13 $$ final ExpressionContext context = forContext.copy()-->Line_14 $$ writeExpression(expression, builder, context)[ FD ]
Line_6 $$ if (clause instanceof GrForInClause) -->Line_12 $$ if (expression != null) [ CD ]
Line_2 $$ public void visitForStatement(GrForStatement forStatement) -->Line_50 $$ if (body != null) [ CD ]
Line_19 $$ final GrExpression condition = cl.getCondition()-->Line_40 $$ if (condition != null) [ FD ]
Line_20 $$ final GrExpression update = cl.getUpdate()-->Line_44 $$ if (update != null) [ FD ]
Line_26 $$ final ExpressionContext partContext = forContext.copy()-->Line_28 $$ writeExpression(initializer, partBuilder, partContext)[ FD ]
Line_21 $$ if (initialization instanceof GrParameter) -->Line_34 $$ if (initialization != null) [ CD ]
Line_44 $$ if (update != null) -->Line_45 $$ genForPart(builder, update, forContext.copy())[ CD ]
Line_6 $$ if (clause instanceof GrForInClause) -->Line_10 $$ writeVariableWithoutSemicolonAndInitializer(builder, declaredVariable, context)[ CD ]
Line_17 $$ final GrTraditionalForClause cl = (GrTraditionalForClause) clause-->Line_20 $$ final GrExpression update = cl.getUpdate()[ FD ]
Line_16 $$ if (clause instanceof GrTraditionalForClause) -->Line_17 $$ final GrTraditionalForClause cl = (GrTraditionalForClause) clause[ CD ]
Line_34 $$ if (initialization != null) -->Line_37 $$ genForPart(builder, initialization, new CodeBlockGenerator(partBuilder, partContext, null))[ CD ]
Line_5 $$ ExpressionContext forContext = context.extend()-->Line_13 $$ final ExpressionContext context = forContext.copy()[ FD ]
Line_2 $$ public void visitForStatement(GrForStatement forStatement) -->Line_49 $$ final GrStatement body = forStatement.getBody()[ CD ]
Line_5 $$ ExpressionContext forContext = context.extend()-->Line_36 $$ final ExpressionContext partContext = forContext.copy()[ FD ]
Line_16 $$ if (clause instanceof GrTraditionalForClause) -->Line_19 $$ final GrExpression condition = cl.getCondition()[ CD ]
Line_22 $$ StringBuilder partBuilder = new StringBuilder()-->Line_23 $$ writeVariableWithoutSemicolonAndInitializer(partBuilder, (GrParameter) initialization, context)[ FD ]
Line_20 $$ final GrExpression update = cl.getUpdate()-->Line_45 $$ genForPart(builder, update, forContext.copy())[ FD ]
Line_8 $$ final GrVariable declaredVariable = clause.getDeclaredVariable()-->Line_10 $$ writeVariableWithoutSemicolonAndInitializer(builder, declaredVariable, context)[ FD ]
Line_6 $$ if (clause instanceof GrForInClause) -->Line_11 $$ builder.append(" : ")[ CD ]
Line_12 $$ if (expression != null) -->Line_13 $$ final ExpressionContext context = forContext.copy()[ CD ]
Line_49 $$ final GrStatement body = forStatement.getBody()-->Line_50 $$ if (body != null) [ FD ]
Line_17 $$ final GrTraditionalForClause cl = (GrTraditionalForClause) clause-->Line_18 $$ final GrCondition initialization = cl.getInitialization()[ FD ]
Line_34 $$ if (initialization != null) -->Line_36 $$ final ExpressionContext partContext = forContext.copy()[ CD ]
Line_6 $$ if (clause instanceof GrForInClause) -->Line_9 $$ LOG.assertTrue(declaredVariable != null)[ CD ]
Line_22 $$ StringBuilder partBuilder = new StringBuilder()-->Line_27 $$ partBuilder.append(" = ")[ FD ]
Line_29 $$ for (String statement : partContext.myStatements) -->Line_30 $$ builder.append(statement).append(", ")[ FD ]
Line_18 $$ final GrCondition initialization = cl.getInitialization()-->Line_37 $$ genForPart(builder, initialization, new CodeBlockGenerator(partBuilder, partContext, null))[ FD ]
Line_25 $$ if (initializer != null) -->Line_27 $$ partBuilder.append(" = ")[ CD ]
Line_21 $$ if (initialization instanceof GrParameter) -->Line_22 $$ StringBuilder partBuilder = new StringBuilder()[ CD ]
Line_21 $$ if (initialization instanceof GrParameter) -->Line_25 $$ if (initializer != null) [ CD ]
