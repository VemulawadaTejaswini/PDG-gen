Line_38 $$ Connection actualTarget = this.target-->Line_40 $$ actualTarget = DataSourceUtils.doGetConnection(this.targetDataSource)[ FD ]
Line_19 $$ if (method.getName().equals("isWrapperFor")) -->Line_20 $$ if (((Class<?>) args[0]).isInstance(proxy)) [ CD ]
Line_8 $$ StringBuilder sb = new StringBuilder("Transaction-aware proxy for target Connection ")-->Line_10 $$ sb.append("[").append(this.target.toString()).append("]")[ FD ]
Line_42 $$ if (method.getName().equals("getTargetConnection")) -->Line_43 $$ return actualTarget[ CD ]
Line_38 $$ Connection actualTarget = this.target-->Line_39 $$ if (actualTarget == null) [ FD ]
Line_47 $$ if (retVal instanceof Statement) -->Line_48 $$ DataSourceUtils.applyTransactionTimeout((Statement) retVal, this.targetDataSource)[ CD ]
Line_19 $$ if (method.getName().equals("isWrapperFor")) -->Line_23 $$ if (method.getName().equals("close")) [ CD ]
Line_40 $$ actualTarget = DataSourceUtils.doGetConnection(this.targetDataSource)-->Line_55 $$ DataSourceUtils.doReleaseConnection(actualTarget, this.targetDataSource)[ FD ]
Line_27 $$ if (method.getName().equals("isClosed")) -->Line_28 $$ return this.closed[ CD ]
Line_5 $$ if (method.getName().equals("hashCode")) -->Line_6 $$ return System.identityHashCode(proxy)[ CD ]
Line_15 $$ if (method.getName().equals("unwrap")) -->Line_16 $$ if (((Class<?>) args[0]).isInstance(proxy)) [ CD ]
Line_7 $$ if (method.getName().equals("toString")) -->Line_8 $$ StringBuilder sb = new StringBuilder("Transaction-aware proxy for target Connection ")[ CD ]
Line_23 $$ if (method.getName().equals("close")) -->Line_24 $$ DataSourceUtils.doReleaseConnection(this.target, this.targetDataSource)[ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_42 $$ if (method.getName().equals("getTargetConnection")) [ FD ]
Line_20 $$ if (((Class<?>) args[0]).isInstance(proxy)) -->Line_21 $$ return true[ CD ]
Line_38 $$ Connection actualTarget = this.target-->Line_46 $$ Object retVal = method.invoke(actualTarget, args)[ FD ]
Line_9 $$ if (this.target != null) -->Line_10 $$ sb.append("[").append(this.target.toString()).append("]")[ CD ]
Line_23 $$ if (method.getName().equals("close")) -->Line_26 $$ return null[ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_3 $$ if (method.getName().equals("equals")) [ FD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_38 $$ Connection actualTarget = this.target[ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_5 $$ if (method.getName().equals("hashCode")) [ FD ]
Line_8 $$ StringBuilder sb = new StringBuilder("Transaction-aware proxy for target Connection ")-->Line_14 $$ return sb.toString()[ FD ]
Line_40 $$ actualTarget = DataSourceUtils.doGetConnection(this.targetDataSource)-->Line_46 $$ Object retVal = method.invoke(actualTarget, args)[ FD ]
Line_38 $$ Connection actualTarget = this.target-->Line_55 $$ DataSourceUtils.doReleaseConnection(actualTarget, this.targetDataSource)[ FD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_46 $$ Object retVal = method.invoke(actualTarget, args)[ FD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_15 $$ if (method.getName().equals("unwrap")) [ FD ]
Line_34 $$ if (shouldObtainFixedConnection(this.targetDataSource)) -->Line_35 $$ this.target = DataSourceUtils.doGetConnection(this.targetDataSource)[ CD ]
Line_39 $$ if (actualTarget == null) -->Line_40 $$ actualTarget = DataSourceUtils.doGetConnection(this.targetDataSource)[ CD ]
Line_3 $$ if (method.getName().equals("equals")) -->Line_4 $$ return (proxy == args[0])[ CD ]
Line_15 $$ if (method.getName().equals("unwrap")) -->Line_19 $$ if (method.getName().equals("isWrapperFor")) [ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_3 $$ if (method.getName().equals("equals")) [ CD ]
Line_40 $$ actualTarget = DataSourceUtils.doGetConnection(this.targetDataSource)-->Line_54 $$ if (actualTarget != this.target) [ FD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_23 $$ if (method.getName().equals("close")) [ FD ]
Line_9 $$ if (this.target != null) -->Line_12 $$ sb.append(" from DataSource [").append(this.targetDataSource).append("]")[ CD ]
Line_30 $$ if (this.target == null) -->Line_34 $$ if (shouldObtainFixedConnection(this.targetDataSource)) [ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_19 $$ if (method.getName().equals("isWrapperFor")) [ FD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_39 $$ if (actualTarget == null) [ CD ]
Line_16 $$ if (((Class<?>) args[0]).isInstance(proxy)) -->Line_17 $$ return proxy[ CD ]
Line_30 $$ if (this.target == null) -->Line_31 $$ if (this.closed) [ CD ]
Line_46 $$ Object retVal = method.invoke(actualTarget, args)-->Line_47 $$ if (retVal instanceof Statement) [ FD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_27 $$ if (method.getName().equals("isClosed")) [ FD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_7 $$ if (method.getName().equals("toString")) [ FD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_6 $$ return System.identityHashCode(proxy)[ FD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_16 $$ if (((Class<?>) args[0]).isInstance(proxy)) [ FD ]
Line_8 $$ StringBuilder sb = new StringBuilder("Transaction-aware proxy for target Connection ")-->Line_12 $$ sb.append(" from DataSource [").append(this.targetDataSource).append("]")[ FD ]
Line_7 $$ if (method.getName().equals("toString")) -->Line_14 $$ return sb.toString()[ CD ]
Line_23 $$ if (method.getName().equals("close")) -->Line_25 $$ this.closed = true[ CD ]
Line_5 $$ if (method.getName().equals("hashCode")) -->Line_7 $$ if (method.getName().equals("toString")) [ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_30 $$ if (this.target == null) [ CD ]
Line_38 $$ Connection actualTarget = this.target-->Line_54 $$ if (actualTarget != this.target) [ FD ]
Line_7 $$ if (method.getName().equals("toString")) -->Line_15 $$ if (method.getName().equals("unwrap")) [ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_42 $$ if (method.getName().equals("getTargetConnection")) [ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_20 $$ if (((Class<?>) args[0]).isInstance(proxy)) [ FD ]
Line_54 $$ if (actualTarget != this.target) -->Line_55 $$ DataSourceUtils.doReleaseConnection(actualTarget, this.targetDataSource)[ CD ]
Line_7 $$ if (method.getName().equals("toString")) -->Line_9 $$ if (this.target != null) [ CD ]
Line_3 $$ if (method.getName().equals("equals")) -->Line_5 $$ if (method.getName().equals("hashCode")) [ CD ]
Line_23 $$ if (method.getName().equals("close")) -->Line_27 $$ if (method.getName().equals("isClosed")) [ CD ]
