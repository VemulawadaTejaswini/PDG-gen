Line_2 $$ private void appendEndpointState(StringBuilder sb, EndpointState endpointState) -->Line_5 $$ for (Map.Entry<ApplicationState, VersionedValue> state : endpointState.states()) [ FD ]
Line_2 $$ private void appendEndpointState(StringBuilder sb, EndpointState endpointState) -->Line_10 $$ VersionedValue tokens = endpointState.getApplicationState(ApplicationState.TOKENS)[ CD ]
Line_11 $$ if (tokens != null) -->Line_12 $$ sb.append("  TOKENS:").append(tokens.version).append(":<hidden>\n")[ CD ]
Line_11 $$ if (tokens != null) -->Line_14 $$ sb.append("  TOKENS: not present\n")[ CD ]
Line_5 $$ for (Map.Entry<ApplicationState, VersionedValue> state : endpointState.states()) -->Line_6 $$ if (state.getKey() == ApplicationState.TOKENS)[ FD ]
Line_2 $$ private void appendEndpointState(StringBuilder sb, EndpointState endpointState) -->Line_4 $$ sb.append("  heartbeat:").append(endpointState.getHeartBeatState().getHeartBeatVersion()).append("\n")[ CD ]
Line_2 $$ private void appendEndpointState(StringBuilder sb, EndpointState endpointState) -->Line_8 $$ sb.append("  ").append(state.getKey()).append(":").append(state.getValue().version).append(":").append(state.getValue().value).append("\n")[ FD ]
Line_5 $$ for (Map.Entry<ApplicationState, VersionedValue> state : endpointState.states()) -->Line_8 $$ sb.append("  ").append(state.getKey()).append(":").append(state.getValue().version).append(":").append(state.getValue().value).append("\n")[ FD ]
Line_10 $$ VersionedValue tokens = endpointState.getApplicationState(ApplicationState.TOKENS)-->Line_11 $$ if (tokens != null) [ FD ]
Line_2 $$ private void appendEndpointState(StringBuilder sb, EndpointState endpointState) -->Line_10 $$ VersionedValue tokens = endpointState.getApplicationState(ApplicationState.TOKENS)[ FD ]
Line_2 $$ private void appendEndpointState(StringBuilder sb, EndpointState endpointState) -->Line_11 $$ if (tokens != null) [ CD ]
Line_2 $$ private void appendEndpointState(StringBuilder sb, EndpointState endpointState) -->Line_14 $$ sb.append("  TOKENS: not present\n")[ FD ]
Line_2 $$ private void appendEndpointState(StringBuilder sb, EndpointState endpointState) -->Line_3 $$ sb.append("  generation:").append(endpointState.getHeartBeatState().getGeneration()).append("\n")[ FD ]
Line_2 $$ private void appendEndpointState(StringBuilder sb, EndpointState endpointState) -->Line_12 $$ sb.append("  TOKENS:").append(tokens.version).append(":<hidden>\n")[ FD ]
Line_2 $$ private void appendEndpointState(StringBuilder sb, EndpointState endpointState) -->Line_4 $$ sb.append("  heartbeat:").append(endpointState.getHeartBeatState().getHeartBeatVersion()).append("\n")[ FD ]
Line_2 $$ private void appendEndpointState(StringBuilder sb, EndpointState endpointState) -->Line_3 $$ sb.append("  generation:").append(endpointState.getHeartBeatState().getGeneration()).append("\n")[ CD ]
