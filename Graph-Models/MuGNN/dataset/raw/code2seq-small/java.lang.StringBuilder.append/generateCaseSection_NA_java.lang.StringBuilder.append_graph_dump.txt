Line_2 $$ private static void generateCaseSection(@NotNull StringBuilder builder, @NotNull ExpressionContext context, @NotNull ExpressionContext innerContext, @NotNull GrCaseSection section) -->Line_6 $$ final GrStatement[] statements = section.getStatements()[ CD ]
Line_2 $$ private static void generateCaseSection(@NotNull StringBuilder builder, @NotNull ExpressionContext context, @NotNull ExpressionContext innerContext, @NotNull GrCaseSection section) -->Line_6 $$ final GrStatement[] statements = section.getStatements()[ FD ]
Line_2 $$ private static void generateCaseSection(@NotNull StringBuilder builder, @NotNull ExpressionContext context, @NotNull ExpressionContext innerContext, @NotNull GrCaseSection section) -->Line_7 $$ CodeBlockGenerator generator = new CodeBlockGenerator(builder, innerContext)[ CD ]
Line_2 $$ private static void generateCaseSection(@NotNull StringBuilder builder, @NotNull ExpressionContext context, @NotNull ExpressionContext innerContext, @NotNull GrCaseSection section) -->Line_10 $$ builder.append("\n")[ FD ]
Line_7 $$ CodeBlockGenerator generator = new CodeBlockGenerator(builder, innerContext)-->Line_9 $$ statement.accept(generator)[ FD ]
Line_2 $$ private static void generateCaseSection(@NotNull StringBuilder builder, @NotNull ExpressionContext context, @NotNull ExpressionContext innerContext, @NotNull GrCaseSection section) -->Line_3 $$ for (GrCaseLabel label : section.getCaseLabels()) [ FD ]
Line_8 $$ for (GrStatement statement : statements) -->Line_9 $$ statement.accept(generator)[ FD ]
Line_3 $$ for (GrCaseLabel label : section.getCaseLabels()) -->Line_4 $$ writeLabel(builder, context, label)[ FD ]
Line_2 $$ private static void generateCaseSection(@NotNull StringBuilder builder, @NotNull ExpressionContext context, @NotNull ExpressionContext innerContext, @NotNull GrCaseSection section) -->Line_4 $$ writeLabel(builder, context, label)[ FD ]
