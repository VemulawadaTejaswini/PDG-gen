Line_2 $$ public String evaluateBundleName(final PsiFile psiFile) -->Line_14 $$ if (qName.length() > 0)[ CD ]
Line_2 $$ public String evaluateBundleName(final PsiFile psiFile) -->Line_16 $$ qName.append(ResourceBundleManager.getInstance(psiFile.getProject()).getBaseName(psiFile))[ FD ]
Line_14 $$ if (qName.length() > 0)-->Line_15 $$ qName.append(".")[ CD ]
Line_3 $$ PsiDirectory directory = ApplicationManager.getApplication().runReadAction(new Computable<PsiDirectory>() -->Line_5 $$ return psiFile.getParent()[ CD ]
Line_2 $$ public String evaluateBundleName(final PsiFile psiFile) -->Line_8 $$ if (directory == null)[ CD ]
Line_11 $$ if (packageQualifiedName == null)-->Line_12 $$ return null[ CD ]
Line_2 $$ public String evaluateBundleName(final PsiFile psiFile) -->Line_3 $$ PsiDirectory directory = ApplicationManager.getApplication().runReadAction(new Computable<PsiDirectory>() [ CD ]
Line_2 $$ public String evaluateBundleName(final PsiFile psiFile) -->Line_17 $$ return qName.toString()[ CD ]
Line_2 $$ public String evaluateBundleName(final PsiFile psiFile) -->Line_11 $$ if (packageQualifiedName == null)[ CD ]
Line_8 $$ if (directory == null)-->Line_9 $$ return null[ CD ]
Line_3 $$ PsiDirectory directory = ApplicationManager.getApplication().runReadAction(new Computable<PsiDirectory>() -->Line_8 $$ if (directory == null)[ FD ]
Line_3 $$ PsiDirectory directory = ApplicationManager.getApplication().runReadAction(new Computable<PsiDirectory>() -->Line_10 $$ String packageQualifiedName = PropertiesUtil.getPackageQualifiedName(directory)[ FD ]
Line_2 $$ public String evaluateBundleName(final PsiFile psiFile) -->Line_5 $$ return psiFile.getParent()[ FD ]
Line_2 $$ public String evaluateBundleName(final PsiFile psiFile) -->Line_16 $$ qName.append(ResourceBundleManager.getInstance(psiFile.getProject()).getBaseName(psiFile))[ CD ]
Line_2 $$ public String evaluateBundleName(final PsiFile psiFile) -->Line_10 $$ String packageQualifiedName = PropertiesUtil.getPackageQualifiedName(directory)[ CD ]
