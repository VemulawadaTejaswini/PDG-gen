Line_2 $$ private void outputConstructor(StringBuilder out) -->Line_6 $$ final String fieldName = getFieldName(name)[ CD ]
Line_2 $$ private void outputConstructor(StringBuilder out) -->Line_9 $$ out.append(typeText).append(' ').append(parameterName)[ CD ]
Line_5 $$ final String parameterName = JavaCodeStyleManager.getInstance(myProject).propertyNameToVariableName(name, VariableKind.PARAMETER)-->Line_12 $$ out.append("\t\tthis.").append(fieldName).append(" = ").append(parameterName).append(";\n")[ FD ]
Line_2 $$ private void outputConstructor(StringBuilder out) -->Line_5 $$ final String parameterName = JavaCodeStyleManager.getInstance(myProject).propertyNameToVariableName(name, VariableKind.PARAMETER)[ CD ]
Line_2 $$ private void outputConstructor(StringBuilder out) -->Line_11 $$ if (fieldName.equals(parameterName)) [ CD ]
Line_2 $$ private void outputConstructor(StringBuilder out) -->Line_8 $$ out.append(CodeStyleSettingsManager.getSettings(myProject).GENERATE_FINAL_PARAMETERS ? "final " : "")[ CD ]
Line_2 $$ private void outputConstructor(StringBuilder out) -->Line_3 $$ final String typeText = myValueType.getCanonicalText(true)[ CD ]
Line_2 $$ private void outputConstructor(StringBuilder out) -->Line_7 $$ out.append("\tpublic ").append(myClassName).append('(')[ CD ]
Line_5 $$ final String parameterName = JavaCodeStyleManager.getInstance(myProject).propertyNameToVariableName(name, VariableKind.PARAMETER)-->Line_9 $$ out.append(typeText).append(' ').append(parameterName)[ FD ]
Line_2 $$ private void outputConstructor(StringBuilder out) -->Line_9 $$ out.append(typeText).append(' ').append(parameterName)[ FD ]
Line_2 $$ private void outputConstructor(StringBuilder out) -->Line_12 $$ out.append("\t\tthis.").append(fieldName).append(" = ").append(parameterName).append(";\n")[ FD ]
Line_3 $$ final String typeText = myValueType.getCanonicalText(true)-->Line_9 $$ out.append(typeText).append(' ').append(parameterName)[ FD ]
Line_6 $$ final String fieldName = getFieldName(name)-->Line_12 $$ out.append("\t\tthis.").append(fieldName).append(" = ").append(parameterName).append(";\n")[ FD ]
Line_2 $$ private void outputConstructor(StringBuilder out) -->Line_14 $$ out.append("\t\t").append(fieldName).append(" = ").append(parameterName).append(";\n")[ FD ]
Line_2 $$ private void outputConstructor(StringBuilder out) -->Line_4 $$ final String name = "value"[ CD ]
Line_11 $$ if (fieldName.equals(parameterName)) -->Line_14 $$ out.append("\t\t").append(fieldName).append(" = ").append(parameterName).append(";\n")[ CD ]
Line_6 $$ final String fieldName = getFieldName(name)-->Line_14 $$ out.append("\t\t").append(fieldName).append(" = ").append(parameterName).append(";\n")[ FD ]
Line_2 $$ private void outputConstructor(StringBuilder out) -->Line_16 $$ out.append("\t}")[ CD ]
Line_2 $$ private void outputConstructor(StringBuilder out) -->Line_7 $$ out.append("\tpublic ").append(myClassName).append('(')[ FD ]
Line_5 $$ final String parameterName = JavaCodeStyleManager.getInstance(myProject).propertyNameToVariableName(name, VariableKind.PARAMETER)-->Line_14 $$ out.append("\t\t").append(fieldName).append(" = ").append(parameterName).append(";\n")[ FD ]
Line_2 $$ private void outputConstructor(StringBuilder out) -->Line_16 $$ out.append("\t}")[ FD ]
Line_6 $$ final String fieldName = getFieldName(name)-->Line_11 $$ if (fieldName.equals(parameterName)) [ FD ]
Line_2 $$ private void outputConstructor(StringBuilder out) -->Line_10 $$ out.append(") [ FD ]
Line_11 $$ if (fieldName.equals(parameterName)) -->Line_12 $$ out.append("\t\tthis.").append(fieldName).append(" = ").append(parameterName).append(";\n")[ CD ]
Line_4 $$ final String name = "value"-->Line_6 $$ final String fieldName = getFieldName(name)[ FD ]
Line_2 $$ private void outputConstructor(StringBuilder out) -->Line_8 $$ out.append(CodeStyleSettingsManager.getSettings(myProject).GENERATE_FINAL_PARAMETERS ? "final " : "")[ FD ]
Line_4 $$ final String name = "value"-->Line_5 $$ final String parameterName = JavaCodeStyleManager.getInstance(myProject).propertyNameToVariableName(name, VariableKind.PARAMETER)[ FD ]
Line_5 $$ final String parameterName = JavaCodeStyleManager.getInstance(myProject).propertyNameToVariableName(name, VariableKind.PARAMETER)-->Line_11 $$ if (fieldName.equals(parameterName)) [ FD ]
Line_2 $$ private void outputConstructor(StringBuilder out) -->Line_10 $$ out.append(") [ CD ]
