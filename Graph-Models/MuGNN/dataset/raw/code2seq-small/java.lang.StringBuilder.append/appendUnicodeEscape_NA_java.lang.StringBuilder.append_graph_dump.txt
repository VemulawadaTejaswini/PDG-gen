Line_2 $$ private static int appendUnicodeEscape(String text, int escapeStart, @NonNls StringBuilder out) -->Line_4 $$ int length = 1[ CD ]
Line_2 $$ private static int appendUnicodeEscape(String text, int escapeStart, @NonNls StringBuilder out) -->Line_3 $$ final int textLength = text.length()[ CD ]
Line_2 $$ private static int appendUnicodeEscape(String text, int escapeStart, @NonNls StringBuilder out) -->Line_7 $$ final char c = text.charAt(escapeStart + length)[ FD ]
Line_11 $$ if (c < '0' || c > '7' || length > 3 || (length > 2 && !zeroToThree)) -->Line_13 $$ out.append("\\u").append(String.format("%04x", Integer.valueOf(ch)))[ CD ]
Line_2 $$ private static int appendUnicodeEscape(String text, int escapeStart, @NonNls StringBuilder out) -->Line_12 $$ final int ch = Integer.parseInt(text.substring(escapeStart + 1, escapeStart + length), 8)[ FD ]
Line_4 $$ int length = 1-->Line_16 $$ length++[ FD ]
Line_2 $$ private static int appendUnicodeEscape(String text, int escapeStart, @NonNls StringBuilder out) -->Line_5 $$ boolean zeroToThree = false[ CD ]
Line_8 $$ if (length == 1 && (c == '0' || c == '1' || c == '2' || c == '3')) -->Line_9 $$ zeroToThree = true[ CD ]
Line_6 $$ while (escapeStart + length < textLength) -->Line_8 $$ if (length == 1 && (c == '0' || c == '1' || c == '2' || c == '3')) [ CD ]
Line_3 $$ final int textLength = text.length()-->Line_6 $$ while (escapeStart + length < textLength) [ FD ]
Line_2 $$ private static int appendUnicodeEscape(String text, int escapeStart, @NonNls StringBuilder out) -->Line_3 $$ final int textLength = text.length()[ FD ]
Line_12 $$ final int ch = Integer.parseInt(text.substring(escapeStart + 1, escapeStart + length), 8)-->Line_13 $$ out.append("\\u").append(String.format("%04x", Integer.valueOf(ch)))[ FD ]
Line_2 $$ private static int appendUnicodeEscape(String text, int escapeStart, @NonNls StringBuilder out) -->Line_18 $$ return escapeStart + length[ CD ]
Line_6 $$ while (escapeStart + length < textLength) -->Line_7 $$ final char c = text.charAt(escapeStart + length)[ CD ]
Line_11 $$ if (c < '0' || c > '7' || length > 3 || (length > 2 && !zeroToThree)) -->Line_12 $$ final int ch = Integer.parseInt(text.substring(escapeStart + 1, escapeStart + length), 8)[ CD ]
Line_6 $$ while (escapeStart + length < textLength) -->Line_16 $$ length++[ CD ]
Line_2 $$ private static int appendUnicodeEscape(String text, int escapeStart, @NonNls StringBuilder out) -->Line_13 $$ out.append("\\u").append(String.format("%04x", Integer.valueOf(ch)))[ FD ]
Line_9 $$ zeroToThree = true-->Line_11 $$ if (c < '0' || c > '7' || length > 3 || (length > 2 && !zeroToThree)) [ FD ]
Line_5 $$ boolean zeroToThree = false-->Line_11 $$ if (c < '0' || c > '7' || length > 3 || (length > 2 && !zeroToThree)) [ FD ]
Line_5 $$ boolean zeroToThree = false-->Line_9 $$ zeroToThree = true[ FD ]
Line_6 $$ while (escapeStart + length < textLength) -->Line_11 $$ if (c < '0' || c > '7' || length > 3 || (length > 2 && !zeroToThree)) [ CD ]
Line_2 $$ private static int appendUnicodeEscape(String text, int escapeStart, @NonNls StringBuilder out) -->Line_6 $$ while (escapeStart + length < textLength) [ CD ]
