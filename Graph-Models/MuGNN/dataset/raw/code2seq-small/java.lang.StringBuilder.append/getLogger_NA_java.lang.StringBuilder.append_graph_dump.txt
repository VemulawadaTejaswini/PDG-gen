Line_17 $$ prefix = sb.toString()-->Line_20 $$ return ESLoggerFactory.getLogger(prefix, getLoggerName(name))[ FD ]
Line_5 $$ StringBuilder sb = new StringBuilder()-->Line_17 $$ prefix = sb.toString()[ FD ]
Line_15 $$ if (sb.length() > 0) -->Line_17 $$ prefix = sb.toString()[ CD ]
Line_6 $$ for (String prefixX : prefixes) -->Line_8 $$ if (prefixX.equals(SPACE)) [ FD ]
Line_2 $$ public static ESLogger getLogger(String name, String... prefixes) -->Line_20 $$ return ESLoggerFactory.getLogger(prefix, getLoggerName(name))[ CD ]
Line_2 $$ public static ESLogger getLogger(String name, String... prefixes) -->Line_3 $$ String prefix = null[ CD ]
Line_5 $$ StringBuilder sb = new StringBuilder()-->Line_9 $$ sb.append(" ")[ FD ]
Line_6 $$ for (String prefixX : prefixes) -->Line_7 $$ if (prefixX != null) [ FD ]
Line_4 $$ if (prefixes != null && prefixes.length > 0) -->Line_5 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_15 $$ if (sb.length() > 0) -->Line_16 $$ sb.append(" ")[ CD ]
Line_7 $$ if (prefixX != null) -->Line_8 $$ if (prefixX.equals(SPACE)) [ CD ]
Line_8 $$ if (prefixX.equals(SPACE)) -->Line_9 $$ sb.append(" ")[ CD ]
Line_8 $$ if (prefixX.equals(SPACE)) -->Line_11 $$ sb.append("[").append(prefixX).append("]")[ CD ]
Line_2 $$ public static ESLogger getLogger(String name, String... prefixes) -->Line_20 $$ return ESLoggerFactory.getLogger(prefix, getLoggerName(name))[ FD ]
Line_5 $$ StringBuilder sb = new StringBuilder()-->Line_16 $$ sb.append(" ")[ FD ]
Line_5 $$ StringBuilder sb = new StringBuilder()-->Line_11 $$ sb.append("[").append(prefixX).append("]")[ FD ]
Line_4 $$ if (prefixes != null && prefixes.length > 0) -->Line_15 $$ if (sb.length() > 0) [ CD ]
Line_3 $$ String prefix = null-->Line_17 $$ prefix = sb.toString()[ FD ]
Line_3 $$ String prefix = null-->Line_20 $$ return ESLoggerFactory.getLogger(prefix, getLoggerName(name))[ FD ]
Line_2 $$ public static ESLogger getLogger(String name, String... prefixes) -->Line_4 $$ if (prefixes != null && prefixes.length > 0) [ CD ]
Line_5 $$ StringBuilder sb = new StringBuilder()-->Line_15 $$ if (sb.length() > 0) [ FD ]
Line_6 $$ for (String prefixX : prefixes) -->Line_11 $$ sb.append("[").append(prefixX).append("]")[ FD ]
