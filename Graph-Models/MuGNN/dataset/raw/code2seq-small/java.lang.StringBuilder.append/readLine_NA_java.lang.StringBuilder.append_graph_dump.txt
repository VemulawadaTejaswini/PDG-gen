Line_5 $$ while (true) -->Line_9 $$ first = false[ CD ]
Line_2 $$ private String readLine() throws IOException -->Line_26 $$ String s = buffer.toString()[ CD ]
Line_2 $$ private String readLine() throws IOException -->Line_24 $$ if (first)[ CD ]
Line_16 $$ if (c == '\r') -->Line_21 $$ buffer.append((char) c)[ CD ]
Line_2 $$ private String readLine() throws IOException -->Line_27 $$ return s[ CD ]
Line_5 $$ while (true) -->Line_6 $$ int c = myReader.read()[ CD ]
Line_24 $$ if (first)-->Line_25 $$ return null[ CD ]
Line_2 $$ private String readLine() throws IOException -->Line_3 $$ boolean first = true[ CD ]
Line_4 $$ StringBuilder buffer = new StringBuilder()-->Line_21 $$ buffer.append((char) c)[ FD ]
Line_2 $$ private String readLine() throws IOException -->Line_4 $$ StringBuilder buffer = new StringBuilder()[ CD ]
Line_4 $$ StringBuilder buffer = new StringBuilder()-->Line_26 $$ String s = buffer.toString()[ FD ]
Line_3 $$ boolean first = true-->Line_9 $$ first = false[ FD ]
Line_5 $$ while (true) -->Line_7 $$ if (c == -1)[ CD ]
Line_6 $$ int c = myReader.read()-->Line_7 $$ if (c == -1)[ FD ]
Line_2 $$ private String readLine() throws IOException -->Line_5 $$ while (true) [ CD ]
Line_6 $$ int c = myReader.read()-->Line_16 $$ if (c == '\r') [ FD ]
Line_5 $$ while (true) -->Line_10 $$ if (c == '\n') [ CD ]
Line_6 $$ int c = myReader.read()-->Line_10 $$ if (c == '\n') [ FD ]
Line_10 $$ if (c == '\n') -->Line_11 $$ if (mySkipLF) [ CD ]
Line_10 $$ if (c == '\n') -->Line_16 $$ if (c == '\r') [ CD ]
