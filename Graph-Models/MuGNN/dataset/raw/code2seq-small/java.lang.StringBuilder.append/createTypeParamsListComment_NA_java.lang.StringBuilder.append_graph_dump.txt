Line_2 $$ public static void createTypeParamsListComment(final StringBuilder buffer, final Project project, final CodeDocumentationAwareCommenter commenter, final PsiTypeParameterList typeParameterList) -->Line_7 $$ buffer.append(LINE_SEPARATOR)[ FD ]
Line_2 $$ public static void createTypeParamsListComment(final StringBuilder buffer, final Project project, final CodeDocumentationAwareCommenter commenter, final PsiTypeParameterList typeParameterList) -->Line_3 $$ final PsiTypeParameter[] typeParameters = typeParameterList.getTypeParameters()[ FD ]
Line_2 $$ public static void createTypeParamsListComment(final StringBuilder buffer, final Project project, final CodeDocumentationAwareCommenter commenter, final PsiTypeParameterList typeParameterList) -->Line_3 $$ final PsiTypeParameter[] typeParameters = typeParameterList.getTypeParameters()[ CD ]
Line_4 $$ for (PsiTypeParameter typeParameter : typeParameters) -->Line_6 $$ buffer.append("<").append(typeParameter.getName()).append(">")[ FD ]
Line_2 $$ public static void createTypeParamsListComment(final StringBuilder buffer, final Project project, final CodeDocumentationAwareCommenter commenter, final PsiTypeParameterList typeParameterList) -->Line_5 $$ buffer.append(CodeDocumentationUtil.createDocCommentLine(PARAM_TAG, project, commenter))[ FD ]
Line_2 $$ public static void createTypeParamsListComment(final StringBuilder buffer, final Project project, final CodeDocumentationAwareCommenter commenter, final PsiTypeParameterList typeParameterList) -->Line_6 $$ buffer.append("<").append(typeParameter.getName()).append(">")[ FD ]
