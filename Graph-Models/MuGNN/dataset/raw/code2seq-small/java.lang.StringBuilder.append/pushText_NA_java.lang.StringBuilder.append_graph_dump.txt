Line_9 $$ String line-->Line_15 $$ builder.append(line)[ FD ]
Line_10 $$ while ((line = reader.readLine()) != null) -->Line_11 $$ line = line.replaceFirst("\\s*\\* ?", "")[ FD ]
Line_2 $$ public void pushText(String rawCommentText) -->Line_6 $$ StringBuilder builder = new StringBuilder()[ CD ]
Line_11 $$ line = line.replaceFirst("\\s*\\* ?", "")-->Line_15 $$ builder.append(line)[ FD ]
Line_3 $$ if (rawCommentText == null) -->Line_4 $$ return[ CD ]
Line_2 $$ public void pushText(String rawCommentText) -->Line_3 $$ if (rawCommentText == null) [ FD ]
Line_9 $$ String line-->Line_10 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_10 $$ while ((line = reader.readLine()) != null) -->Line_12 $$ if (line.startsWith("@")) [ FD ]
Line_6 $$ StringBuilder builder = new StringBuilder()-->Line_21 $$ input.insert(pos, builder.toString().trim())[ FD ]
Line_11 $$ line = line.replaceFirst("\\s*\\* ?", "")-->Line_12 $$ if (line.startsWith("@")) [ FD ]
Line_10 $$ while ((line = reader.readLine()) != null) -->Line_11 $$ line = line.replaceFirst("\\s*\\* ?", "")[ CD ]
Line_9 $$ String line-->Line_12 $$ if (line.startsWith("@")) [ FD ]
Line_10 $$ while ((line = reader.readLine()) != null) -->Line_15 $$ builder.append(line)[ FD ]
Line_10 $$ while ((line = reader.readLine()) != null) -->Line_16 $$ builder.append("\n")[ CD ]
Line_9 $$ String line-->Line_11 $$ line = line.replaceFirst("\\s*\\* ?", "")[ FD ]
Line_2 $$ public void pushText(String rawCommentText) -->Line_21 $$ input.insert(pos, builder.toString().trim())[ CD ]
Line_8 $$ BufferedReader reader = new BufferedReader(new StringReader(rawCommentText))-->Line_10 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_10 $$ while ((line = reader.readLine()) != null) -->Line_12 $$ if (line.startsWith("@")) [ CD ]
Line_6 $$ StringBuilder builder = new StringBuilder()-->Line_15 $$ builder.append(line)[ FD ]
Line_2 $$ public void pushText(String rawCommentText) -->Line_3 $$ if (rawCommentText == null) [ CD ]
Line_10 $$ while ((line = reader.readLine()) != null) -->Line_15 $$ builder.append(line)[ CD ]
Line_6 $$ StringBuilder builder = new StringBuilder()-->Line_16 $$ builder.append("\n")[ FD ]
