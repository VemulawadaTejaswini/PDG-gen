Line_4 $$ final StringBuilder stringBuilder = new StringBuilder()-->Line_18 $$ stringBuilder.append(test.getText())[ FD ]
Line_7 $$ if (component instanceof ComprhForComponent) -->Line_12 $$ stringBuilder.append(":\n")[ CD ]
Line_16 $$ if (test != null) -->Line_19 $$ stringBuilder.append(":\n")[ CD ]
Line_7 $$ if (component instanceof ComprhForComponent) -->Line_9 $$ stringBuilder.append(((ComprhForComponent) component).getIteratorVariable().getText())[ CD ]
Line_4 $$ final StringBuilder stringBuilder = new StringBuilder()-->Line_8 $$ stringBuilder.append("for ")[ FD ]
Line_2 $$ private static PyForStatement createForLoop(final PyListCompExpression expression, final PyElementGenerator elementGenerator, final String result) -->Line_25 $$ stringBuilder.append(result)[ FD ]
Line_14 $$ if (component instanceof ComprhIfComponent) -->Line_15 $$ final PyExpression test = ((ComprhIfComponent) component).getTest()[ CD ]
Line_7 $$ if (component instanceof ComprhForComponent) -->Line_8 $$ stringBuilder.append("for ")[ CD ]
Line_5 $$ int slashNum = 1-->Line_23 $$ ++slashNum[ FD ]
Line_2 $$ private static PyForStatement createForLoop(final PyListCompExpression expression, final PyElementGenerator elementGenerator, final String result) -->Line_3 $$ final List<ComprehensionComponent> components = expression.getComponents()[ CD ]
Line_2 $$ private static PyForStatement createForLoop(final PyListCompExpression expression, final PyElementGenerator elementGenerator, final String result) -->Line_3 $$ final List<ComprehensionComponent> components = expression.getComponents()[ FD ]
Line_2 $$ private static PyForStatement createForLoop(final PyListCompExpression expression, final PyElementGenerator elementGenerator, final String result) -->Line_4 $$ final StringBuilder stringBuilder = new StringBuilder()[ CD ]
Line_4 $$ final StringBuilder stringBuilder = new StringBuilder()-->Line_10 $$ stringBuilder.append(" in ")[ FD ]
Line_2 $$ private static PyForStatement createForLoop(final PyListCompExpression expression, final PyElementGenerator elementGenerator, final String result) -->Line_25 $$ stringBuilder.append(result)[ CD ]
Line_4 $$ final StringBuilder stringBuilder = new StringBuilder()-->Line_26 $$ return elementGenerator.createFromText(LanguageLevel.forElement(expression), PyForStatement.class, stringBuilder.toString())[ FD ]
Line_4 $$ final StringBuilder stringBuilder = new StringBuilder()-->Line_19 $$ stringBuilder.append(":\n")[ FD ]
Line_7 $$ if (component instanceof ComprhForComponent) -->Line_11 $$ stringBuilder.append(((ComprhForComponent) component).getIteratedList().getText())[ CD ]
Line_2 $$ private static PyForStatement createForLoop(final PyListCompExpression expression, final PyElementGenerator elementGenerator, final String result) -->Line_26 $$ return elementGenerator.createFromText(LanguageLevel.forElement(expression), PyForStatement.class, stringBuilder.toString())[ CD ]
Line_4 $$ final StringBuilder stringBuilder = new StringBuilder()-->Line_22 $$ stringBuilder.append("\t")[ FD ]
Line_16 $$ if (test != null) -->Line_18 $$ stringBuilder.append(test.getText())[ CD ]
Line_6 $$ for (ComprehensionComponent component : components) -->Line_14 $$ if (component instanceof ComprhIfComponent) [ FD ]
Line_2 $$ private static PyForStatement createForLoop(final PyListCompExpression expression, final PyElementGenerator elementGenerator, final String result) -->Line_26 $$ return elementGenerator.createFromText(LanguageLevel.forElement(expression), PyForStatement.class, stringBuilder.toString())[ FD ]
Line_16 $$ if (test != null) -->Line_17 $$ stringBuilder.append("if ")[ CD ]
Line_2 $$ private static PyForStatement createForLoop(final PyListCompExpression expression, final PyElementGenerator elementGenerator, final String result) -->Line_5 $$ int slashNum = 1[ CD ]
Line_4 $$ final StringBuilder stringBuilder = new StringBuilder()-->Line_12 $$ stringBuilder.append(":\n")[ FD ]
Line_4 $$ final StringBuilder stringBuilder = new StringBuilder()-->Line_17 $$ stringBuilder.append("if ")[ FD ]
Line_15 $$ final PyExpression test = ((ComprhIfComponent) component).getTest()-->Line_18 $$ stringBuilder.append(test.getText())[ FD ]
Line_4 $$ final StringBuilder stringBuilder = new StringBuilder()-->Line_11 $$ stringBuilder.append(((ComprhForComponent) component).getIteratedList().getText())[ FD ]
Line_15 $$ final PyExpression test = ((ComprhIfComponent) component).getTest()-->Line_16 $$ if (test != null) [ FD ]
Line_6 $$ for (ComprehensionComponent component : components) -->Line_7 $$ if (component instanceof ComprhForComponent) [ FD ]
Line_14 $$ if (component instanceof ComprhIfComponent) -->Line_16 $$ if (test != null) [ CD ]
Line_5 $$ int slashNum = 1-->Line_22 $$ for (int i = 0; i != slashNum; ++i) stringBuilder.append("\t")[ FD ]
Line_4 $$ final StringBuilder stringBuilder = new StringBuilder()-->Line_9 $$ stringBuilder.append(((ComprhForComponent) component).getIteratorVariable().getText())[ FD ]
Line_7 $$ if (component instanceof ComprhForComponent) -->Line_10 $$ stringBuilder.append(" in ")[ CD ]
Line_4 $$ final StringBuilder stringBuilder = new StringBuilder()-->Line_25 $$ stringBuilder.append(result)[ FD ]
