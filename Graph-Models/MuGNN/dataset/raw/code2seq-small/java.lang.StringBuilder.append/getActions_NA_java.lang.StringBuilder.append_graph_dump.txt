Line_2 $$ private static String getActions(int mask) -->Line_15 $$ return sb.toString()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_15 $$ return sb.toString()[ FD ]
Line_6 $$ for (int n = 1; n < allActions.length; n++) -->Line_7 $$ int action = 1 << (n - 1)[ CD ]
Line_7 $$ int action = 1 << (n - 1)-->Line_8 $$ if ((mask & action) == action) [ FD ]
Line_2 $$ private static String getActions(int mask) -->Line_5 $$ final Action[] allActions = Action.values()[ CD ]
Line_2 $$ private static String getActions(int mask) -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_6 $$ for (int n = 1; n < allActions.length; n++) -->Line_8 $$ if ((mask & action) == action) [ CD ]
Line_8 $$ if ((mask & action) == action) -->Line_12 $$ insertComma = true[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_10 $$ sb.append(',')[ FD ]
Line_4 $$ boolean insertComma = false-->Line_12 $$ insertComma = true[ FD ]
Line_9 $$ if (insertComma)-->Line_10 $$ sb.append(',')[ CD ]
Line_2 $$ private static String getActions(int mask) -->Line_6 $$ for (int n = 1; n < allActions.length; n++) [ CD ]
Line_8 $$ if ((mask & action) == action) -->Line_9 $$ if (insertComma)[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_11 $$ sb.append(allActions[n].actionName)[ FD ]
Line_2 $$ private static String getActions(int mask) -->Line_4 $$ boolean insertComma = false[ CD ]
Line_8 $$ if ((mask & action) == action) -->Line_11 $$ sb.append(allActions[n].actionName)[ CD ]
