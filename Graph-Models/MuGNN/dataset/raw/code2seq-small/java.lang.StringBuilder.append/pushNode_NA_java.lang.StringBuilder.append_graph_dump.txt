Line_7 $$ if (myCurrentNodePath.size() > 2) -->Line_8 $$ myCurrentName.append(mySeparator)[ CD ]
Line_3 $$ final HashMap<String, Node<T>> childrenMap = node.myChildren-->Line_4 $$ final boolean hasChildren = childrenMap != null && childrenMap.size() > 0[ FD ]
Line_5 $$ if (hasChildren || node.mappingExists()) -->Line_11 $$ return true[ CD ]
Line_2 $$ private boolean pushNode(@NotNull final String name, @NotNull Node<T> node) -->Line_13 $$ return false[ CD ]
Line_2 $$ private boolean pushNode(@NotNull final String name, @NotNull Node<T> node) -->Line_5 $$ if (hasChildren || node.mappingExists()) [ CD ]
Line_2 $$ private boolean pushNode(@NotNull final String name, @NotNull Node<T> node) -->Line_3 $$ final HashMap<String, Node<T>> childrenMap = node.myChildren[ CD ]
Line_5 $$ if (hasChildren || node.mappingExists()) -->Line_10 $$ myCurrentName.append(name)[ CD ]
Line_3 $$ final HashMap<String, Node<T>> childrenMap = node.myChildren-->Line_6 $$ myCurrentNodePath.push(new PathElement<T>(node, hasChildren ? childrenMap.keySet().iterator() : EmptyIterator.<String>getInstance()))[ FD ]
Line_2 $$ private boolean pushNode(@NotNull final String name, @NotNull Node<T> node) -->Line_5 $$ if (hasChildren || node.mappingExists()) [ FD ]
Line_2 $$ private boolean pushNode(@NotNull final String name, @NotNull Node<T> node) -->Line_10 $$ myCurrentName.append(name)[ FD ]
Line_4 $$ final boolean hasChildren = childrenMap != null && childrenMap.size() > 0-->Line_5 $$ if (hasChildren || node.mappingExists()) [ FD ]
Line_2 $$ private boolean pushNode(@NotNull final String name, @NotNull Node<T> node) -->Line_4 $$ final boolean hasChildren = childrenMap != null && childrenMap.size() > 0[ CD ]
Line_5 $$ if (hasChildren || node.mappingExists()) -->Line_6 $$ myCurrentNodePath.push(new PathElement<T>(node, hasChildren ? childrenMap.keySet().iterator() : EmptyIterator.<String>getInstance()))[ CD ]
Line_5 $$ if (hasChildren || node.mappingExists()) -->Line_7 $$ if (myCurrentNodePath.size() > 2) [ CD ]
