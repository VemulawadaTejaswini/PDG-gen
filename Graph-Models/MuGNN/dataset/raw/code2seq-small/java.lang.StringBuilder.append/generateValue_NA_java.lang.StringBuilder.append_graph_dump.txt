Line_2 $$ private void generateValue(StringBuilder buffer, PsiElement[] elements, int startIndex, InheritDocProvider<PsiElement[]> provider) -->Line_21 $$ Pair<PsiElement[], InheritDocProvider<PsiElement[]>> inheritInfo = provider.getInheritDoc()[ FD ]
Line_20 $$ if (tagName.equals(INHERITDOC_TAG)) -->Line_22 $$ if (inheritInfo != null) [ CD ]
Line_10 $$ PsiInlineDocTag tag = (PsiInlineDocTag) element-->Line_13 $$ generateLinkValue(tag, buffer, false)[ FD ]
Line_3 $$ int predictOffset = startIndex < elements.length ? elements[startIndex].getTextOffset() + elements[startIndex].getText().length() : 0-->Line_5 $$ if (elements[i].getTextOffset() > predictOffset)[ FD ]
Line_18 $$ if (tagName.equals(LINKPLAIN_TAG)) -->Line_20 $$ if (tagName.equals(INHERITDOC_TAG)) [ CD ]
Line_2 $$ private void generateValue(StringBuilder buffer, PsiElement[] elements, int startIndex, InheritDocProvider<PsiElement[]> provider) -->Line_31 $$ buffer.append(StringUtil.replaceUnicodeEscapeSequences(element.getText()))[ FD ]
Line_20 $$ if (tagName.equals(INHERITDOC_TAG)) -->Line_21 $$ Pair<PsiElement[], InheritDocProvider<PsiElement[]>> inheritInfo = provider.getInheritDoc()[ CD ]
Line_2 $$ private void generateValue(StringBuilder buffer, PsiElement[] elements, int startIndex, InheritDocProvider<PsiElement[]> provider) -->Line_4 $$ for (int i = startIndex; i < elements.length; i++) [ CD ]
Line_4 $$ for (int i = startIndex; i < elements.length; i++) -->Line_5 $$ if (elements[i].getTextOffset() > predictOffset)[ CD ]
Line_11 $$ final String tagName = tag.getName()-->Line_25 $$ if (tagName.equals(DOCROOT_TAG)) [ FD ]
Line_7 $$ predictOffset = elements[i].getTextOffset() + elements[i].getText().length()-->Line_5 $$ if (elements[i].getTextOffset() > predictOffset)[ FD ]
Line_4 $$ for (int i = startIndex; i < elements.length; i++) -->Line_9 $$ if (element instanceof PsiInlineDocTag) [ CD ]
Line_12 $$ if (tagName.equals(LINK_TAG)) -->Line_14 $$ if (tagName.equals(LITERAL_TAG)) [ CD ]
Line_11 $$ final String tagName = tag.getName()-->Line_20 $$ if (tagName.equals(INHERITDOC_TAG)) [ FD ]
Line_9 $$ if (element instanceof PsiInlineDocTag) -->Line_11 $$ final String tagName = tag.getName()[ CD ]
Line_2 $$ private void generateValue(StringBuilder buffer, PsiElement[] elements, int startIndex, InheritDocProvider<PsiElement[]> provider) -->Line_19 $$ generateLinkValue(tag, buffer, true)[ FD ]
Line_2 $$ private void generateValue(StringBuilder buffer, PsiElement[] elements, int startIndex, InheritDocProvider<PsiElement[]> provider) -->Line_23 $$ generateValue(buffer, inheritInfo.first, inheritInfo.second)[ FD ]
Line_16 $$ if (tagName.equals(CODE_TAG)) -->Line_17 $$ generateCodeValue(tag, buffer)[ CD ]
Line_10 $$ PsiInlineDocTag tag = (PsiInlineDocTag) element-->Line_19 $$ generateLinkValue(tag, buffer, true)[ FD ]
Line_2 $$ private void generateValue(StringBuilder buffer, PsiElement[] elements, int startIndex, InheritDocProvider<PsiElement[]> provider) -->Line_17 $$ generateCodeValue(tag, buffer)[ FD ]
Line_3 $$ int predictOffset = startIndex < elements.length ? elements[startIndex].getTextOffset() + elements[startIndex].getText().length() : 0-->Line_7 $$ predictOffset = elements[i].getTextOffset() + elements[i].getText().length()[ FD ]
Line_10 $$ PsiInlineDocTag tag = (PsiInlineDocTag) element-->Line_17 $$ generateCodeValue(tag, buffer)[ FD ]
Line_27 $$ if (tagName.equals(VALUE_TAG)) -->Line_28 $$ generateValueValue(tag, buffer, element)[ CD ]
Line_2 $$ private void generateValue(StringBuilder buffer, PsiElement[] elements, int startIndex, InheritDocProvider<PsiElement[]> provider) -->Line_3 $$ int predictOffset = startIndex < elements.length ? elements[startIndex].getTextOffset() + elements[startIndex].getText().length() : 0[ CD ]
Line_2 $$ private void generateValue(StringBuilder buffer, PsiElement[] elements, int startIndex, InheritDocProvider<PsiElement[]> provider) -->Line_15 $$ generateLiteralValue(buffer, tag)[ FD ]
Line_2 $$ private void generateValue(StringBuilder buffer, PsiElement[] elements, int startIndex, InheritDocProvider<PsiElement[]> provider) -->Line_28 $$ generateValueValue(tag, buffer, element)[ FD ]
Line_11 $$ final String tagName = tag.getName()-->Line_14 $$ if (tagName.equals(LITERAL_TAG)) [ FD ]
Line_2 $$ private void generateValue(StringBuilder buffer, PsiElement[] elements, int startIndex, InheritDocProvider<PsiElement[]> provider) -->Line_26 $$ buffer.append(getDocRoot())[ FD ]
Line_8 $$ PsiElement element = elements[i]-->Line_9 $$ if (element instanceof PsiInlineDocTag) [ FD ]
Line_25 $$ if (tagName.equals(DOCROOT_TAG)) -->Line_26 $$ buffer.append(getDocRoot())[ CD ]
Line_22 $$ if (inheritInfo != null) -->Line_23 $$ generateValue(buffer, inheritInfo.first, inheritInfo.second)[ CD ]
Line_5 $$ if (elements[i].getTextOffset() > predictOffset)-->Line_6 $$ buffer.append(" ")[ CD ]
Line_14 $$ if (tagName.equals(LITERAL_TAG)) -->Line_15 $$ generateLiteralValue(buffer, tag)[ CD ]
Line_8 $$ PsiElement element = elements[i]-->Line_31 $$ buffer.append(StringUtil.replaceUnicodeEscapeSequences(element.getText()))[ FD ]
Line_9 $$ if (element instanceof PsiInlineDocTag) -->Line_31 $$ buffer.append(StringUtil.replaceUnicodeEscapeSequences(element.getText()))[ CD ]
Line_11 $$ final String tagName = tag.getName()-->Line_27 $$ if (tagName.equals(VALUE_TAG)) [ FD ]
Line_18 $$ if (tagName.equals(LINKPLAIN_TAG)) -->Line_19 $$ generateLinkValue(tag, buffer, true)[ CD ]
Line_9 $$ if (element instanceof PsiInlineDocTag) -->Line_12 $$ if (tagName.equals(LINK_TAG)) [ CD ]
Line_11 $$ final String tagName = tag.getName()-->Line_18 $$ if (tagName.equals(LINKPLAIN_TAG)) [ FD ]
Line_10 $$ PsiInlineDocTag tag = (PsiInlineDocTag) element-->Line_11 $$ final String tagName = tag.getName()[ FD ]
Line_20 $$ if (tagName.equals(INHERITDOC_TAG)) -->Line_25 $$ if (tagName.equals(DOCROOT_TAG)) [ CD ]
Line_14 $$ if (tagName.equals(LITERAL_TAG)) -->Line_16 $$ if (tagName.equals(CODE_TAG)) [ CD ]
Line_25 $$ if (tagName.equals(DOCROOT_TAG)) -->Line_27 $$ if (tagName.equals(VALUE_TAG)) [ CD ]
Line_8 $$ PsiElement element = elements[i]-->Line_28 $$ generateValueValue(tag, buffer, element)[ FD ]
Line_16 $$ if (tagName.equals(CODE_TAG)) -->Line_18 $$ if (tagName.equals(LINKPLAIN_TAG)) [ CD ]
Line_9 $$ if (element instanceof PsiInlineDocTag) -->Line_10 $$ PsiInlineDocTag tag = (PsiInlineDocTag) element[ CD ]
Line_21 $$ Pair<PsiElement[], InheritDocProvider<PsiElement[]>> inheritInfo = provider.getInheritDoc()-->Line_22 $$ if (inheritInfo != null) [ FD ]
Line_10 $$ PsiInlineDocTag tag = (PsiInlineDocTag) element-->Line_28 $$ generateValueValue(tag, buffer, element)[ FD ]
Line_2 $$ private void generateValue(StringBuilder buffer, PsiElement[] elements, int startIndex, InheritDocProvider<PsiElement[]> provider) -->Line_6 $$ buffer.append(" ")[ FD ]
Line_2 $$ private void generateValue(StringBuilder buffer, PsiElement[] elements, int startIndex, InheritDocProvider<PsiElement[]> provider) -->Line_13 $$ generateLinkValue(tag, buffer, false)[ FD ]
Line_4 $$ for (int i = startIndex; i < elements.length; i++) -->Line_7 $$ predictOffset = elements[i].getTextOffset() + elements[i].getText().length()[ CD ]
Line_11 $$ final String tagName = tag.getName()-->Line_12 $$ if (tagName.equals(LINK_TAG)) [ FD ]
Line_10 $$ PsiInlineDocTag tag = (PsiInlineDocTag) element-->Line_15 $$ generateLiteralValue(buffer, tag)[ FD ]
Line_4 $$ for (int i = startIndex; i < elements.length; i++) -->Line_8 $$ PsiElement element = elements[i][ CD ]
Line_11 $$ final String tagName = tag.getName()-->Line_16 $$ if (tagName.equals(CODE_TAG)) [ FD ]
Line_12 $$ if (tagName.equals(LINK_TAG)) -->Line_13 $$ generateLinkValue(tag, buffer, false)[ CD ]
