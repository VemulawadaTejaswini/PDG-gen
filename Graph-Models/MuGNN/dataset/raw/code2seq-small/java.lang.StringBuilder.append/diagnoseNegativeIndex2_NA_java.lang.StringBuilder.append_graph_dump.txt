Line_16 $$ if (parentTag != null) -->Line_18 $$ if (t instanceof GenericAttributeValue) [ CD ]
Line_4 $$ StringBuilder diag = new StringBuilder("Index<0: description=" + description + "\nparent=" + parent + "\nt=" + t + "\nvalues=" + values + "\n")-->Line_20 $$ diag.append(", attr: ").append(attribute.getName())[ FD ]
Line_3 $$ final XmlTag parentTag = parent.getXmlTag()-->Line_17 $$ diag.append("Parent tag: ").append(parentTag.getName()).append("\n")[ FD ]
Line_5 $$ for (int i = 0, size = values.size(); i < size; i++) -->Line_6 $$ DomElement value = values.get(i)[ CD ]
Line_6 $$ DomElement value = values.get(i)-->Line_9 $$ final XmlElement valElement = value.getXmlElement()[ FD ]
Line_7 $$ if (value.toString().equals(t.toString())) -->Line_8 $$ final XmlElement tElement = t.getXmlElement()[ CD ]
Line_8 $$ final XmlElement tElement = t.getXmlElement()-->Line_12 $$ diag.append("  sameFile=" + (tElement.getContainingFile() == valElement.getContainingFile()) + ", sameParent=" + (tElement.getParent() == valElement.getParent()) + "\n")[ FD ]
Line_6 $$ DomElement value = values.get(i)-->Line_10 $$ diag.append(" hasSame, i=" + i + "; same=" + (value == t) + ", equal=" + value.equals(t) + ", equal2=" + t.equals(value) + ", t.physical=" + (tElement == null ? "null" : String.valueOf(tElement.isPhysical())) + ", value.physical=" + (valElement == null ? "null" : String.valueOf(valElement.isPhysical())) + ", sameElements=" + (tElement == value.getXmlElement()) + "\n")[ FD ]
Line_2 $$ private static <T extends DomElement> void diagnoseNegativeIndex2(T t, DomElement parent, AbstractDomChildrenDescription description, List<? extends DomElement> values) -->Line_30 $$ diag.append("Child name: ").append(t.getXmlElementName()).append(";").append(t.getXmlElementNamespaceKey())[ FD ]
Line_24 $$ for (XmlTag tag : parentTag.getSubTags()) -->Line_25 $$ diag.append("\n subtag: ").append(tag.getName())[ FD ]
Line_6 $$ DomElement value = values.get(i)-->Line_7 $$ if (value.toString().equals(t.toString())) [ FD ]
Line_3 $$ final XmlTag parentTag = parent.getXmlTag()-->Line_16 $$ if (parentTag != null) [ FD ]
Line_2 $$ private static <T extends DomElement> void diagnoseNegativeIndex2(T t, DomElement parent, AbstractDomChildrenDescription description, List<? extends DomElement> values) -->Line_30 $$ diag.append("Child name: ").append(t.getXmlElementName()).append(";").append(t.getXmlElementNamespaceKey())[ CD ]
Line_16 $$ if (parentTag != null) -->Line_17 $$ diag.append("Parent tag: ").append(parentTag.getName()).append("\n")[ CD ]
Line_8 $$ final XmlElement tElement = t.getXmlElement()-->Line_10 $$ diag.append(" hasSame, i=" + i + "; same=" + (value == t) + ", equal=" + value.equals(t) + ", equal2=" + t.equals(value) + ", t.physical=" + (tElement == null ? "null" : String.valueOf(tElement.isPhysical())) + ", value.physical=" + (valElement == null ? "null" : String.valueOf(valElement.isPhysical())) + ", sameElements=" + (tElement == value.getXmlElement()) + "\n")[ FD ]
Line_5 $$ for (int i = 0, size = values.size(); i < size; i++) -->Line_6 $$ DomElement value = values.get(i)[ FD ]
Line_18 $$ if (t instanceof GenericAttributeValue) -->Line_27 $$ diag.append("\n")[ CD ]
Line_2 $$ private static <T extends DomElement> void diagnoseNegativeIndex2(T t, DomElement parent, AbstractDomChildrenDescription description, List<? extends DomElement> values) -->Line_4 $$ StringBuilder diag = new StringBuilder("Index<0: description=" + description + "\nparent=" + parent + "\nt=" + t + "\nvalues=" + values + "\n")[ CD ]
Line_4 $$ StringBuilder diag = new StringBuilder("Index<0: description=" + description + "\nparent=" + parent + "\nt=" + t + "\nvalues=" + values + "\n")-->Line_22 $$ diag.append("\n")[ FD ]
Line_2 $$ private static <T extends DomElement> void diagnoseNegativeIndex2(T t, DomElement parent, AbstractDomChildrenDescription description, List<? extends DomElement> values) -->Line_5 $$ for (int i = 0, size = values.size(); i < size; i++) [ CD ]
Line_4 $$ StringBuilder diag = new StringBuilder("Index<0: description=" + description + "\nparent=" + parent + "\nt=" + t + "\nvalues=" + values + "\n")-->Line_12 $$ diag.append("  sameFile=" + (tElement.getContainingFile() == valElement.getContainingFile()) + ", sameParent=" + (tElement.getParent() == valElement.getParent()) + "\n")[ FD ]
Line_2 $$ private static <T extends DomElement> void diagnoseNegativeIndex2(T t, DomElement parent, AbstractDomChildrenDescription description, List<? extends DomElement> values) -->Line_3 $$ final XmlTag parentTag = parent.getXmlTag()[ CD ]
Line_2 $$ private static <T extends DomElement> void diagnoseNegativeIndex2(T t, DomElement parent, AbstractDomChildrenDescription description, List<? extends DomElement> values) -->Line_6 $$ DomElement value = values.get(i)[ FD ]
Line_4 $$ StringBuilder diag = new StringBuilder("Index<0: description=" + description + "\nparent=" + parent + "\nt=" + t + "\nvalues=" + values + "\n")-->Line_17 $$ diag.append("Parent tag: ").append(parentTag.getName()).append("\n")[ FD ]
Line_4 $$ StringBuilder diag = new StringBuilder("Index<0: description=" + description + "\nparent=" + parent + "\nt=" + t + "\nvalues=" + values + "\n")-->Line_25 $$ diag.append("\n subtag: ").append(tag.getName())[ FD ]
Line_7 $$ if (value.toString().equals(t.toString())) -->Line_11 $$ if (tElement != null && valElement != null) [ CD ]
Line_7 $$ if (value.toString().equals(t.toString())) -->Line_10 $$ diag.append(" hasSame, i=" + i + "; same=" + (value == t) + ", equal=" + value.equals(t) + ", equal2=" + t.equals(value) + ", t.physical=" + (tElement == null ? "null" : String.valueOf(tElement.isPhysical())) + ", value.physical=" + (valElement == null ? "null" : String.valueOf(valElement.isPhysical())) + ", sameElements=" + (tElement == value.getXmlElement()) + "\n")[ CD ]
Line_2 $$ private static <T extends DomElement> void diagnoseNegativeIndex2(T t, DomElement parent, AbstractDomChildrenDescription description, List<? extends DomElement> values) -->Line_31 $$ LOG.error(diag)[ CD ]
Line_19 $$ for (XmlAttribute attribute : parentTag.getAttributes()) -->Line_20 $$ diag.append(", attr: ").append(attribute.getName())[ FD ]
Line_2 $$ private static <T extends DomElement> void diagnoseNegativeIndex2(T t, DomElement parent, AbstractDomChildrenDescription description, List<? extends DomElement> values) -->Line_7 $$ if (value.toString().equals(t.toString())) [ FD ]
Line_2 $$ private static <T extends DomElement> void diagnoseNegativeIndex2(T t, DomElement parent, AbstractDomChildrenDescription description, List<? extends DomElement> values) -->Line_16 $$ if (parentTag != null) [ CD ]
Line_4 $$ StringBuilder diag = new StringBuilder("Index<0: description=" + description + "\nparent=" + parent + "\nt=" + t + "\nvalues=" + values + "\n")-->Line_30 $$ diag.append("Child name: ").append(t.getXmlElementName()).append(";").append(t.getXmlElementNamespaceKey())[ FD ]
Line_4 $$ StringBuilder diag = new StringBuilder("Index<0: description=" + description + "\nparent=" + parent + "\nt=" + t + "\nvalues=" + values + "\n")-->Line_31 $$ LOG.error(diag)[ FD ]
Line_18 $$ if (t instanceof GenericAttributeValue) -->Line_22 $$ diag.append("\n")[ CD ]
Line_7 $$ if (value.toString().equals(t.toString())) -->Line_9 $$ final XmlElement valElement = value.getXmlElement()[ CD ]
Line_9 $$ final XmlElement valElement = value.getXmlElement()-->Line_12 $$ diag.append("  sameFile=" + (tElement.getContainingFile() == valElement.getContainingFile()) + ", sameParent=" + (tElement.getParent() == valElement.getParent()) + "\n")[ FD ]
Line_11 $$ if (tElement != null && valElement != null) -->Line_12 $$ diag.append("  sameFile=" + (tElement.getContainingFile() == valElement.getContainingFile()) + ", sameParent=" + (tElement.getParent() == valElement.getParent()) + "\n")[ CD ]
Line_2 $$ private static <T extends DomElement> void diagnoseNegativeIndex2(T t, DomElement parent, AbstractDomChildrenDescription description, List<? extends DomElement> values) -->Line_10 $$ diag.append(" hasSame, i=" + i + "; same=" + (value == t) + ", equal=" + value.equals(t) + ", equal2=" + t.equals(value) + ", t.physical=" + (tElement == null ? "null" : String.valueOf(tElement.isPhysical())) + ", value.physical=" + (valElement == null ? "null" : String.valueOf(valElement.isPhysical())) + ", sameElements=" + (tElement == value.getXmlElement()) + "\n")[ FD ]
Line_2 $$ private static <T extends DomElement> void diagnoseNegativeIndex2(T t, DomElement parent, AbstractDomChildrenDescription description, List<? extends DomElement> values) -->Line_5 $$ for (int i = 0, size = values.size(); i < size; i++) [ FD ]
Line_9 $$ final XmlElement valElement = value.getXmlElement()-->Line_10 $$ diag.append(" hasSame, i=" + i + "; same=" + (value == t) + ", equal=" + value.equals(t) + ", equal2=" + t.equals(value) + ", t.physical=" + (tElement == null ? "null" : String.valueOf(tElement.isPhysical())) + ", value.physical=" + (valElement == null ? "null" : String.valueOf(valElement.isPhysical())) + ", sameElements=" + (tElement == value.getXmlElement()) + "\n")[ FD ]
Line_3 $$ final XmlTag parentTag = parent.getXmlTag()-->Line_19 $$ for (XmlAttribute attribute : parentTag.getAttributes()) [ FD ]
Line_4 $$ StringBuilder diag = new StringBuilder("Index<0: description=" + description + "\nparent=" + parent + "\nt=" + t + "\nvalues=" + values + "\n")-->Line_27 $$ diag.append("\n")[ FD ]
Line_3 $$ final XmlTag parentTag = parent.getXmlTag()-->Line_24 $$ for (XmlTag tag : parentTag.getSubTags()) [ FD ]
Line_2 $$ private static <T extends DomElement> void diagnoseNegativeIndex2(T t, DomElement parent, AbstractDomChildrenDescription description, List<? extends DomElement> values) -->Line_3 $$ final XmlTag parentTag = parent.getXmlTag()[ FD ]
Line_4 $$ StringBuilder diag = new StringBuilder("Index<0: description=" + description + "\nparent=" + parent + "\nt=" + t + "\nvalues=" + values + "\n")-->Line_10 $$ diag.append(" hasSame, i=" + i + "; same=" + (value == t) + ", equal=" + value.equals(t) + ", equal2=" + t.equals(value) + ", t.physical=" + (tElement == null ? "null" : String.valueOf(tElement.isPhysical())) + ", value.physical=" + (valElement == null ? "null" : String.valueOf(valElement.isPhysical())) + ", sameElements=" + (tElement == value.getXmlElement()) + "\n")[ FD ]
Line_2 $$ private static <T extends DomElement> void diagnoseNegativeIndex2(T t, DomElement parent, AbstractDomChildrenDescription description, List<? extends DomElement> values) -->Line_8 $$ final XmlElement tElement = t.getXmlElement()[ FD ]
Line_2 $$ private static <T extends DomElement> void diagnoseNegativeIndex2(T t, DomElement parent, AbstractDomChildrenDescription description, List<? extends DomElement> values) -->Line_18 $$ if (t instanceof GenericAttributeValue) [ FD ]
Line_5 $$ for (int i = 0, size = values.size(); i < size; i++) -->Line_7 $$ if (value.toString().equals(t.toString())) [ CD ]
