Line_2 $$ public static String formatDuration(long delta) -->Line_4 $$ for (int i = 0; i < DENOMINATORS.length; i++) [ CD ]
Line_2 $$ public static String formatDuration(long delta) -->Line_10 $$ delta = delta % denominator[ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_8 $$ buf.append(composeDurationMessage(PERIODS[i], n))[ FD ]
Line_4 $$ for (int i = 0; i < DENOMINATORS.length; i++) -->Line_5 $$ long denominator = DENOMINATORS[i][ CD ]
Line_2 $$ public static String formatDuration(long delta) -->Line_15 $$ return buf.toString().trim()[ CD ]
Line_6 $$ int n = (int) (delta / denominator)-->Line_8 $$ buf.append(composeDurationMessage(PERIODS[i], n))[ FD ]
Line_7 $$ if (n != 0) -->Line_10 $$ delta = delta % denominator[ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_15 $$ return buf.toString().trim()[ FD ]
Line_4 $$ for (int i = 0; i < DENOMINATORS.length; i++) -->Line_6 $$ int n = (int) (delta / denominator)[ CD ]
Line_2 $$ public static String formatDuration(long delta) -->Line_13 $$ if (buf.length() == 0)[ CD ]
Line_5 $$ long denominator = DENOMINATORS[i]-->Line_10 $$ delta = delta % denominator[ FD ]
Line_7 $$ if (n != 0) -->Line_8 $$ buf.append(composeDurationMessage(PERIODS[i], n))[ CD ]
Line_4 $$ for (int i = 0; i < DENOMINATORS.length; i++) -->Line_7 $$ if (n != 0) [ CD ]
Line_7 $$ if (n != 0) -->Line_9 $$ buf.append(' ')[ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_9 $$ buf.append(' ')[ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_13 $$ if (buf.length() == 0)[ FD ]
Line_2 $$ public static String formatDuration(long delta) -->Line_3 $$ StringBuilder buf = new StringBuilder()[ CD ]
Line_6 $$ int n = (int) (delta / denominator)-->Line_7 $$ if (n != 0) [ FD ]
Line_13 $$ if (buf.length() == 0)-->Line_14 $$ return CommonBundle.message("date.format.less.than.a.minute")[ CD ]
