Line_39 $$ if (cutpos >= 0) -->Line_40 $$ String[] strs = line.split("\t")[ CD ]
Line_13 $$ final ProcessOutput process = getProcessOutput(parentDir, ArrayUtil.toStringArray(cmd), PythonSdkType.getVirtualEnvExtraEnv(homePath), MINUTE * 4)-->Line_22 $$ for (String line : process.getStderrLines()) [ FD ]
Line_2 $$ public ListBinariesResult listBinaries(@NotNull Sdk sdk, @NotNull String extraSysPath) throws InvalidSdkException -->Line_3 $$ final String homePath = sdk.getHomePath()[ CD ]
Line_2 $$ public ListBinariesResult listBinaries(@NotNull Sdk sdk, @NotNull String extraSysPath) throws InvalidSdkException -->Line_29 $$ final List<String> lines = process.getStdoutLines()[ CD ]
Line_2 $$ public ListBinariesResult listBinaries(@NotNull Sdk sdk, @NotNull String extraSysPath) throws InvalidSdkException -->Line_36 $$ while (iter.hasNext()) [ CD ]
Line_2 $$ public ListBinariesResult listBinaries(@NotNull Sdk sdk, @NotNull String extraSysPath) throws InvalidSdkException -->Line_50 $$ return new ListBinariesResult(generatorVersion, binaries)[ CD ]
Line_9 $$ if (!StringUtil.isEmpty(extraSysPath)) -->Line_11 $$ cmd.add(extraSysPath)[ CD ]
Line_2 $$ public ListBinariesResult listBinaries(@NotNull Sdk sdk, @NotNull String extraSysPath) throws InvalidSdkException -->Line_3 $$ final String homePath = sdk.getHomePath()[ FD ]
Line_2 $$ public ListBinariesResult listBinaries(@NotNull Sdk sdk, @NotNull String extraSysPath) throws InvalidSdkException -->Line_11 $$ cmd.add(extraSysPath)[ FD ]
Line_3 $$ final String homePath = sdk.getHomePath()-->Line_5 $$ if (homePath == null)[ FD ]
Line_8 $$ List<String> cmd = new ArrayList<String>(Arrays.asList(homePath, PythonHelpersLocator.getHelperPath(GENERATOR3), "-v", "-L"))-->Line_13 $$ final ProcessOutput process = getProcessOutput(parentDir, ArrayUtil.toStringArray(cmd), PythonSdkType.getVirtualEnvExtraEnv(homePath), MINUTE * 4)[ FD ]
Line_3 $$ final String homePath = sdk.getHomePath()-->Line_13 $$ final ProcessOutput process = getProcessOutput(parentDir, ArrayUtil.toStringArray(cmd), PythonSdkType.getVirtualEnvExtraEnv(homePath), MINUTE * 4)[ FD ]
Line_33 $$ final Iterator<String> iter = lines.iterator()-->Line_34 $$ final int generatorVersion = fromVersionString(iter.next().trim())[ FD ]
Line_2 $$ public ListBinariesResult listBinaries(@NotNull Sdk sdk, @NotNull String extraSysPath) throws InvalidSdkException -->Line_30 $$ if (lines.size() < 1) [ CD ]
Line_8 $$ List<String> cmd = new ArrayList<String>(Arrays.asList(homePath, PythonHelpersLocator.getHelperPath(GENERATOR3), "-v", "-L"))-->Line_11 $$ cmd.add(extraSysPath)[ FD ]
Line_2 $$ public ListBinariesResult listBinaries(@NotNull Sdk sdk, @NotNull String extraSysPath) throws InvalidSdkException -->Line_9 $$ if (!StringUtil.isEmpty(extraSysPath)) [ CD ]
Line_39 $$ if (cutpos >= 0) -->Line_47 $$ LOG.error("Bad binaries line: '" + line + "', SDK " + homePath)[ CD ]
Line_29 $$ final List<String> lines = process.getStdoutLines()-->Line_30 $$ if (lines.size() < 1) [ FD ]
Line_17 $$ final StringBuilder sb = new StringBuilder("failed to run ").append(GENERATOR3).append(" for ").append(homePath)-->Line_21 $$ sb.append(", exit code ").append(process.getExitCode()).append(", stderr: \n-----\n")[ FD ]
Line_13 $$ final ProcessOutput process = getProcessOutput(parentDir, ArrayUtil.toStringArray(cmd), PythonSdkType.getVirtualEnvExtraEnv(homePath), MINUTE * 4)-->Line_16 $$ if (process.getExitCode() != 0) [ FD ]
Line_13 $$ final ProcessOutput process = getProcessOutput(parentDir, ArrayUtil.toStringArray(cmd), PythonSdkType.getVirtualEnvExtraEnv(homePath), MINUTE * 4)-->Line_21 $$ sb.append(", exit code ").append(process.getExitCode()).append(", stderr: \n-----\n")[ FD ]
Line_17 $$ final StringBuilder sb = new StringBuilder("failed to run ").append(GENERATOR3).append(" for ").append(homePath)-->Line_23 $$ sb.append(line).append("\n")[ FD ]
Line_13 $$ final ProcessOutput process = getProcessOutput(parentDir, ArrayUtil.toStringArray(cmd), PythonSdkType.getVirtualEnvExtraEnv(homePath), MINUTE * 4)-->Line_29 $$ final List<String> lines = process.getStdoutLines()[ FD ]
Line_29 $$ final List<String> lines = process.getStdoutLines()-->Line_33 $$ final Iterator<String> iter = lines.iterator()[ FD ]
Line_38 $$ int cutpos = line.indexOf('\t')-->Line_39 $$ if (cutpos >= 0) [ FD ]
Line_39 $$ if (cutpos >= 0) -->Line_45 $$ binaries.put(moduleName, new PySkeletonRefresher.PyBinaryItem(moduleName, path, length, lastModified))[ CD ]
Line_39 $$ if (cutpos >= 0) -->Line_41 $$ String moduleName = strs[0][ CD ]
Line_33 $$ final Iterator<String> iter = lines.iterator()-->Line_36 $$ while (iter.hasNext()) [ FD ]
Line_39 $$ if (cutpos >= 0) -->Line_43 $$ int length = Integer.parseInt(strs[2])[ CD ]
Line_39 $$ if (cutpos >= 0) -->Line_42 $$ String path = strs[1][ CD ]
Line_2 $$ public ListBinariesResult listBinaries(@NotNull Sdk sdk, @NotNull String extraSysPath) throws InvalidSdkException -->Line_13 $$ final ProcessOutput process = getProcessOutput(parentDir, ArrayUtil.toStringArray(cmd), PythonSdkType.getVirtualEnvExtraEnv(homePath), MINUTE * 4)[ CD ]
Line_2 $$ public ListBinariesResult listBinaries(@NotNull Sdk sdk, @NotNull String extraSysPath) throws InvalidSdkException -->Line_4 $$ final long startTime = System.currentTimeMillis()[ CD ]
Line_7 $$ final String parentDir = new File(homePath).getParent()-->Line_13 $$ final ProcessOutput process = getProcessOutput(parentDir, ArrayUtil.toStringArray(cmd), PythonSdkType.getVirtualEnvExtraEnv(homePath), MINUTE * 4)[ FD ]
Line_9 $$ if (!StringUtil.isEmpty(extraSysPath)) -->Line_10 $$ cmd.add("-s")[ CD ]
Line_36 $$ while (iter.hasNext()) -->Line_38 $$ int cutpos = line.indexOf('\t')[ CD ]
Line_2 $$ public ListBinariesResult listBinaries(@NotNull Sdk sdk, @NotNull String extraSysPath) throws InvalidSdkException -->Line_15 $$ LOG.info("Retrieving binary module list took " + (System.currentTimeMillis() - startTime) + " ms")[ CD ]
Line_41 $$ String moduleName = strs[0]-->Line_45 $$ binaries.put(moduleName, new PySkeletonRefresher.PyBinaryItem(moduleName, path, length, lastModified))[ FD ]
Line_2 $$ public ListBinariesResult listBinaries(@NotNull Sdk sdk, @NotNull String extraSysPath) throws InvalidSdkException -->Line_33 $$ final Iterator<String> iter = lines.iterator()[ CD ]
Line_2 $$ public ListBinariesResult listBinaries(@NotNull Sdk sdk, @NotNull String extraSysPath) throws InvalidSdkException -->Line_34 $$ final int generatorVersion = fromVersionString(iter.next().trim())[ CD ]
Line_2 $$ public ListBinariesResult listBinaries(@NotNull Sdk sdk, @NotNull String extraSysPath) throws InvalidSdkException -->Line_6 $$ throw new InvalidSdkException("Broken home path for " + sdk.getName())[ FD ]
Line_35 $$ final Map<String, PySkeletonRefresher.PyBinaryItem> binaries = Maps.newHashMap()-->Line_45 $$ binaries.put(moduleName, new PySkeletonRefresher.PyBinaryItem(moduleName, path, length, lastModified))[ FD ]
Line_2 $$ public ListBinariesResult listBinaries(@NotNull Sdk sdk, @NotNull String extraSysPath) throws InvalidSdkException -->Line_16 $$ if (process.getExitCode() != 0) [ CD ]
Line_17 $$ final StringBuilder sb = new StringBuilder("failed to run ").append(GENERATOR3).append(" for ").append(homePath)-->Line_27 $$ throw new InvalidSdkException(sb.toString())[ FD ]
Line_13 $$ final ProcessOutput process = getProcessOutput(parentDir, ArrayUtil.toStringArray(cmd), PythonSdkType.getVirtualEnvExtraEnv(homePath), MINUTE * 4)-->Line_18 $$ if (process.isTimeout()) [ FD ]
Line_36 $$ while (iter.hasNext()) -->Line_37 $$ final String line = iter.next()[ CD ]
Line_37 $$ final String line = iter.next()-->Line_40 $$ String[] strs = line.split("\t")[ FD ]
Line_18 $$ if (process.isTimeout()) -->Line_21 $$ sb.append(", exit code ").append(process.getExitCode()).append(", stderr: \n-----\n")[ CD ]
Line_2 $$ public ListBinariesResult listBinaries(@NotNull Sdk sdk, @NotNull String extraSysPath) throws InvalidSdkException -->Line_9 $$ if (!StringUtil.isEmpty(extraSysPath)) [ FD ]
Line_3 $$ final String homePath = sdk.getHomePath()-->Line_17 $$ final StringBuilder sb = new StringBuilder("failed to run ").append(GENERATOR3).append(" for ").append(homePath)[ FD ]
Line_18 $$ if (process.isTimeout()) -->Line_19 $$ sb.append(": timed out.")[ CD ]
Line_17 $$ final StringBuilder sb = new StringBuilder("failed to run ").append(GENERATOR3).append(" for ").append(homePath)-->Line_19 $$ sb.append(": timed out.")[ FD ]
Line_22 $$ for (String line : process.getStderrLines()) -->Line_40 $$ String[] strs = line.split("\t")[ FD ]
Line_2 $$ public ListBinariesResult listBinaries(@NotNull Sdk sdk, @NotNull String extraSysPath) throws InvalidSdkException -->Line_8 $$ List<String> cmd = new ArrayList<String>(Arrays.asList(homePath, PythonHelpersLocator.getHelperPath(GENERATOR3), "-v", "-L"))[ CD ]
Line_16 $$ if (process.getExitCode() != 0) -->Line_18 $$ if (process.isTimeout()) [ CD ]
Line_2 $$ public ListBinariesResult listBinaries(@NotNull Sdk sdk, @NotNull String extraSysPath) throws InvalidSdkException -->Line_35 $$ final Map<String, PySkeletonRefresher.PyBinaryItem> binaries = Maps.newHashMap()[ CD ]
Line_22 $$ for (String line : process.getStderrLines()) -->Line_23 $$ sb.append(line).append("\n")[ FD ]
Line_16 $$ if (process.getExitCode() != 0) -->Line_17 $$ final StringBuilder sb = new StringBuilder("failed to run ").append(GENERATOR3).append(" for ").append(homePath)[ CD ]
Line_22 $$ for (String line : process.getStderrLines()) -->Line_38 $$ int cutpos = line.indexOf('\t')[ FD ]
Line_2 $$ public ListBinariesResult listBinaries(@NotNull Sdk sdk, @NotNull String extraSysPath) throws InvalidSdkException -->Line_7 $$ final String parentDir = new File(homePath).getParent()[ CD ]
Line_8 $$ List<String> cmd = new ArrayList<String>(Arrays.asList(homePath, PythonHelpersLocator.getHelperPath(GENERATOR3), "-v", "-L"))-->Line_10 $$ cmd.add("-s")[ FD ]
Line_33 $$ final Iterator<String> iter = lines.iterator()-->Line_37 $$ final String line = iter.next()[ FD ]
Line_37 $$ final String line = iter.next()-->Line_38 $$ int cutpos = line.indexOf('\t')[ FD ]
Line_17 $$ final StringBuilder sb = new StringBuilder("failed to run ").append(GENERATOR3).append(" for ").append(homePath)-->Line_25 $$ sb.append("-----")[ FD ]
Line_36 $$ while (iter.hasNext()) -->Line_39 $$ if (cutpos >= 0) [ CD ]
Line_18 $$ if (process.isTimeout()) -->Line_25 $$ sb.append("-----")[ CD ]
Line_3 $$ final String homePath = sdk.getHomePath()-->Line_8 $$ List<String> cmd = new ArrayList<String>(Arrays.asList(homePath, PythonHelpersLocator.getHelperPath(GENERATOR3), "-v", "-L"))[ FD ]
Line_2 $$ public ListBinariesResult listBinaries(@NotNull Sdk sdk, @NotNull String extraSysPath) throws InvalidSdkException -->Line_5 $$ if (homePath == null)[ CD ]
Line_39 $$ if (cutpos >= 0) -->Line_44 $$ int lastModified = Integer.parseInt(strs[3])[ CD ]
