Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_19 $$ sb.setLength(sbBaseLen)[ FD ]
Line_13 $$ for (String metricName : outRec.getMetricNames()) -->Line_14 $$ Object metric = outRec.getMetric(metricName)[ FD ]
Line_2 $$ public void emitRecord(String contextName, String recordName, OutputRecord outRec) throws IOException -->Line_6 $$ if (contextName.equals("jvm") && outRec.getTag("processName") != null) [ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_4 $$ sb.append(contextName)[ FD ]
Line_2 $$ public void emitRecord(String contextName, String recordName, OutputRecord outRec) throws IOException -->Line_5 $$ sb.append('.')[ CD ]
Line_16 $$ if (type != null) -->Line_18 $$ emitMetric(sb.toString(), type, metric.toString())[ CD ]
Line_2 $$ public void emitRecord(String contextName, String recordName, OutputRecord outRec) throws IOException -->Line_6 $$ if (contextName.equals("jvm") && outRec.getTag("processName") != null) [ CD ]
Line_16 $$ if (type != null) -->Line_21 $$ LOG.warn("Unknown metrics type: " + metric.getClass())[ CD ]
Line_2 $$ public void emitRecord(String contextName, String recordName, OutputRecord outRec) throws IOException -->Line_10 $$ sb.append(recordName)[ FD ]
Line_2 $$ public void emitRecord(String contextName, String recordName, OutputRecord outRec) throws IOException -->Line_4 $$ sb.append(contextName)[ CD ]
Line_6 $$ if (contextName.equals("jvm") && outRec.getTag("processName") != null) -->Line_8 $$ sb.append('.')[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_11 $$ sb.append('.')[ FD ]
Line_2 $$ public void emitRecord(String contextName, String recordName, OutputRecord outRec) throws IOException -->Line_11 $$ sb.append('.')[ CD ]
Line_15 $$ String type = typeTable.get(metric.getClass())-->Line_16 $$ if (type != null) [ FD ]
Line_2 $$ public void emitRecord(String contextName, String recordName, OutputRecord outRec) throws IOException -->Line_4 $$ sb.append(contextName)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_17 $$ sb.append(metricName)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_8 $$ sb.append('.')[ FD ]
Line_16 $$ if (type != null) -->Line_19 $$ sb.setLength(sbBaseLen)[ CD ]
Line_2 $$ public void emitRecord(String contextName, String recordName, OutputRecord outRec) throws IOException -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ public void emitRecord(String contextName, String recordName, OutputRecord outRec) throws IOException -->Line_10 $$ sb.append(recordName)[ CD ]
Line_14 $$ Object metric = outRec.getMetric(metricName)-->Line_18 $$ emitMetric(sb.toString(), type, metric.toString())[ FD ]
Line_13 $$ for (String metricName : outRec.getMetricNames()) -->Line_17 $$ sb.append(metricName)[ FD ]
Line_14 $$ Object metric = outRec.getMetric(metricName)-->Line_21 $$ LOG.warn("Unknown metrics type: " + metric.getClass())[ FD ]
Line_2 $$ public void emitRecord(String contextName, String recordName, OutputRecord outRec) throws IOException -->Line_7 $$ sb.append(outRec.getTag("processName"))[ FD ]
Line_2 $$ public void emitRecord(String contextName, String recordName, OutputRecord outRec) throws IOException -->Line_13 $$ for (String metricName : outRec.getMetricNames()) [ FD ]
Line_6 $$ if (contextName.equals("jvm") && outRec.getTag("processName") != null) -->Line_7 $$ sb.append(outRec.getTag("processName"))[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_10 $$ sb.append(recordName)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_12 $$ int sbBaseLen = sb.length()[ FD ]
Line_2 $$ public void emitRecord(String contextName, String recordName, OutputRecord outRec) throws IOException -->Line_14 $$ Object metric = outRec.getMetric(metricName)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_5 $$ sb.append('.')[ FD ]
Line_2 $$ public void emitRecord(String contextName, String recordName, OutputRecord outRec) throws IOException -->Line_12 $$ int sbBaseLen = sb.length()[ CD ]
Line_12 $$ int sbBaseLen = sb.length()-->Line_19 $$ sb.setLength(sbBaseLen)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_7 $$ sb.append(outRec.getTag("processName"))[ FD ]
Line_15 $$ String type = typeTable.get(metric.getClass())-->Line_18 $$ emitMetric(sb.toString(), type, metric.toString())[ FD ]
Line_14 $$ Object metric = outRec.getMetric(metricName)-->Line_15 $$ String type = typeTable.get(metric.getClass())[ FD ]
Line_16 $$ if (type != null) -->Line_17 $$ sb.append(metricName)[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_18 $$ emitMetric(sb.toString(), type, metric.toString())[ FD ]
