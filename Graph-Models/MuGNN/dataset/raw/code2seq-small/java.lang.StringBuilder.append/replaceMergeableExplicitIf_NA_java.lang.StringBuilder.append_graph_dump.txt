Line_41 $$ final PsiStatement childElseBranch = childStatement.getElseBranch()-->Line_42 $$ if (childElseBranch != null) [ FD ]
Line_23 $$ final String parentConditionText-->Line_36 $$ statement.append(parentConditionText)[ FD ]
Line_10 $$ if (childCondition == null) -->Line_11 $$ return[ CD ]
Line_19 $$ final PsiExpression condition = parentStatement.getCondition()-->Line_27 $$ parentConditionText = condition.getText()[ FD ]
Line_9 $$ final PsiExpression childCondition = childStatement.getCondition()-->Line_14 $$ if (ParenthesesUtils.getPrecedence(childCondition) > ParenthesesUtils.OR_PRECEDENCE) [ FD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_6 $$ if (childStatement == null) [ CD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_38 $$ statement.append(childConditionText)[ CD ]
Line_14 $$ if (ParenthesesUtils.getPrecedence(childCondition) > ParenthesesUtils.OR_PRECEDENCE) -->Line_15 $$ childConditionText = '(' + childCondition.getText() + ')'[ CD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_34 $$ final StringBuilder statement = new StringBuilder()[ CD ]
Line_3 $$ final PsiIfStatement parentStatement = (PsiIfStatement) token.getParent()-->Line_5 $$ final PsiIfStatement childStatement = (PsiIfStatement) parentStatement.getElseBranch()[ FD ]
Line_13 $$ final String childConditionText-->Line_15 $$ childConditionText = '(' + childCondition.getText() + ')'[ FD ]
Line_47 $$ final String newStatement = statement.toString()-->Line_48 $$ PsiReplacementUtil.replaceStatement(parentStatement, newStatement)[ FD ]
Line_23 $$ final String parentConditionText-->Line_25 $$ parentConditionText = '(' + condition.getText() + ')'[ FD ]
Line_17 $$ childConditionText = childCondition.getText()-->Line_38 $$ statement.append(childConditionText)[ FD ]
Line_19 $$ final PsiExpression condition = parentStatement.getCondition()-->Line_20 $$ if (condition == null) [ FD ]
Line_34 $$ final StringBuilder statement = new StringBuilder()-->Line_35 $$ statement.append("if(")[ FD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_3 $$ final PsiIfStatement parentStatement = (PsiIfStatement) token.getParent()[ FD ]
Line_43 $$ final String childElseBranchText = childElseBranch.getText()-->Line_45 $$ statement.append(childElseBranchText)[ FD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_5 $$ final PsiIfStatement childStatement = (PsiIfStatement) parentStatement.getElseBranch()[ CD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_47 $$ final String newStatement = statement.toString()[ CD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_30 $$ if (parentThenBranch == null) [ CD ]
Line_9 $$ final PsiExpression childCondition = childStatement.getCondition()-->Line_17 $$ childConditionText = childCondition.getText()[ FD ]
Line_34 $$ final StringBuilder statement = new StringBuilder()-->Line_39 $$ statement.append(')')[ FD ]
Line_34 $$ final StringBuilder statement = new StringBuilder()-->Line_40 $$ statement.append(parentThenBranchText)[ FD ]
Line_34 $$ final StringBuilder statement = new StringBuilder()-->Line_44 $$ statement.append("else ")[ FD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_14 $$ if (ParenthesesUtils.getPrecedence(childCondition) > ParenthesesUtils.OR_PRECEDENCE) [ CD ]
Line_14 $$ if (ParenthesesUtils.getPrecedence(childCondition) > ParenthesesUtils.OR_PRECEDENCE) -->Line_17 $$ childConditionText = childCondition.getText()[ CD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_23 $$ final String parentConditionText[ CD ]
Line_41 $$ final PsiStatement childElseBranch = childStatement.getElseBranch()-->Line_43 $$ final String childElseBranchText = childElseBranch.getText()[ FD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_24 $$ if (ParenthesesUtils.getPrecedence(condition) > ParenthesesUtils.OR_PRECEDENCE) [ CD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_39 $$ statement.append(')')[ CD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_13 $$ final String childConditionText[ CD ]
Line_5 $$ final PsiIfStatement childStatement = (PsiIfStatement) parentStatement.getElseBranch()-->Line_9 $$ final PsiExpression childCondition = childStatement.getCondition()[ FD ]
Line_15 $$ childConditionText = '(' + childCondition.getText() + ')'-->Line_17 $$ childConditionText = childCondition.getText()[ FD ]
Line_34 $$ final StringBuilder statement = new StringBuilder()-->Line_45 $$ statement.append(childElseBranchText)[ FD ]
Line_20 $$ if (condition == null) -->Line_21 $$ return[ CD ]
Line_9 $$ final PsiExpression childCondition = childStatement.getCondition()-->Line_10 $$ if (childCondition == null) [ FD ]
Line_23 $$ final String parentConditionText-->Line_27 $$ parentConditionText = condition.getText()[ FD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_40 $$ statement.append(parentThenBranchText)[ CD ]
Line_19 $$ final PsiExpression condition = parentStatement.getCondition()-->Line_25 $$ parentConditionText = '(' + condition.getText() + ')'[ FD ]
Line_33 $$ final String parentThenBranchText = parentThenBranch.getText()-->Line_40 $$ statement.append(parentThenBranchText)[ FD ]
Line_13 $$ final String childConditionText-->Line_38 $$ statement.append(childConditionText)[ FD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_33 $$ final String parentThenBranchText = parentThenBranch.getText()[ CD ]
Line_13 $$ final String childConditionText-->Line_17 $$ childConditionText = childCondition.getText()[ FD ]
Line_3 $$ final PsiIfStatement parentStatement = (PsiIfStatement) token.getParent()-->Line_48 $$ PsiReplacementUtil.replaceStatement(parentStatement, newStatement)[ FD ]
Line_5 $$ final PsiIfStatement childStatement = (PsiIfStatement) parentStatement.getElseBranch()-->Line_6 $$ if (childStatement == null) [ FD ]
Line_42 $$ if (childElseBranch != null) -->Line_43 $$ final String childElseBranchText = childElseBranch.getText()[ CD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_41 $$ final PsiStatement childElseBranch = childStatement.getElseBranch()[ CD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_36 $$ statement.append(parentConditionText)[ CD ]
Line_34 $$ final StringBuilder statement = new StringBuilder()-->Line_38 $$ statement.append(childConditionText)[ FD ]
Line_42 $$ if (childElseBranch != null) -->Line_44 $$ statement.append("else ")[ CD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_10 $$ if (childCondition == null) [ CD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_37 $$ statement.append("||")[ CD ]
Line_5 $$ final PsiIfStatement childStatement = (PsiIfStatement) parentStatement.getElseBranch()-->Line_41 $$ final PsiStatement childElseBranch = childStatement.getElseBranch()[ FD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_29 $$ final PsiStatement parentThenBranch = parentStatement.getThenBranch()[ CD ]
Line_29 $$ final PsiStatement parentThenBranch = parentStatement.getThenBranch()-->Line_33 $$ final String parentThenBranchText = parentThenBranch.getText()[ FD ]
Line_25 $$ parentConditionText = '(' + condition.getText() + ')'-->Line_27 $$ parentConditionText = condition.getText()[ FD ]
Line_30 $$ if (parentThenBranch == null) -->Line_31 $$ return[ CD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_48 $$ PsiReplacementUtil.replaceStatement(parentStatement, newStatement)[ CD ]
Line_24 $$ if (ParenthesesUtils.getPrecedence(condition) > ParenthesesUtils.OR_PRECEDENCE) -->Line_27 $$ parentConditionText = condition.getText()[ CD ]
Line_6 $$ if (childStatement == null) -->Line_7 $$ return[ CD ]
Line_34 $$ final StringBuilder statement = new StringBuilder()-->Line_47 $$ final String newStatement = statement.toString()[ FD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_42 $$ if (childElseBranch != null) [ CD ]
Line_9 $$ final PsiExpression childCondition = childStatement.getCondition()-->Line_15 $$ childConditionText = '(' + childCondition.getText() + ')'[ FD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_3 $$ final PsiIfStatement parentStatement = (PsiIfStatement) token.getParent()[ CD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_19 $$ final PsiExpression condition = parentStatement.getCondition()[ CD ]
Line_15 $$ childConditionText = '(' + childCondition.getText() + ')'-->Line_38 $$ statement.append(childConditionText)[ FD ]
Line_3 $$ final PsiIfStatement parentStatement = (PsiIfStatement) token.getParent()-->Line_19 $$ final PsiExpression condition = parentStatement.getCondition()[ FD ]
Line_34 $$ final StringBuilder statement = new StringBuilder()-->Line_36 $$ statement.append(parentConditionText)[ FD ]
Line_34 $$ final StringBuilder statement = new StringBuilder()-->Line_37 $$ statement.append("||")[ FD ]
Line_19 $$ final PsiExpression condition = parentStatement.getCondition()-->Line_24 $$ if (ParenthesesUtils.getPrecedence(condition) > ParenthesesUtils.OR_PRECEDENCE) [ FD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_20 $$ if (condition == null) [ CD ]
Line_42 $$ if (childElseBranch != null) -->Line_45 $$ statement.append(childElseBranchText)[ CD ]
Line_25 $$ parentConditionText = '(' + condition.getText() + ')'-->Line_36 $$ statement.append(parentConditionText)[ FD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_9 $$ final PsiExpression childCondition = childStatement.getCondition()[ CD ]
Line_2 $$ private static void replaceMergeableExplicitIf(PsiJavaToken token) throws IncorrectOperationException -->Line_35 $$ statement.append("if(")[ CD ]
Line_27 $$ parentConditionText = condition.getText()-->Line_36 $$ statement.append(parentConditionText)[ FD ]
Line_29 $$ final PsiStatement parentThenBranch = parentStatement.getThenBranch()-->Line_30 $$ if (parentThenBranch == null) [ FD ]
Line_24 $$ if (ParenthesesUtils.getPrecedence(condition) > ParenthesesUtils.OR_PRECEDENCE) -->Line_25 $$ parentConditionText = '(' + condition.getText() + ')'[ CD ]
Line_3 $$ final PsiIfStatement parentStatement = (PsiIfStatement) token.getParent()-->Line_29 $$ final PsiStatement parentThenBranch = parentStatement.getThenBranch()[ FD ]
