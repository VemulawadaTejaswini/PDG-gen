Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_42 $$ g2.setFont(oldFont)[ FD ]
Line_29 $$ final StringBuilder sb = new StringBuilder()-->Line_37 $$ sb.append(string.charAt(i))[ FD ]
Line_26 $$ String string = c.getString()-->Line_37 $$ sb.append(string.charAt(i))[ FD ]
Line_31 $$ for (int i = 0; i < string.length(); i++) -->Line_37 $$ sb.append(string.charAt(i))[ FD ]
Line_22 $$ if (font != null) -->Line_23 $$ g2.setFont(font)[ CD ]
Line_6 $$ final Color bg = s.getBackgroundColor(c)-->Line_8 $$ if (bg != null) [ FD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_7 $$ final int width = c.getWidth()[ CD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_42 $$ g2.setFont(oldFont)[ CD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_12 $$ final Color borderColor = s.getBorderColor(c)[ CD ]
Line_27 $$ if (fm.stringWidth(string) > width) -->Line_28 $$ final int dotsWidth = fm.stringWidth("...")[ CD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_12 $$ final Color borderColor = s.getBorderColor(c)[ FD ]
Line_39 $$ string = sb.append("...").toString()-->Line_41 $$ g2.drawString(string, offset + ROUND_VALUE + 5, height - fm.getDescent() - 3)[ FD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_4 $$ final Font oldFont = g2.getFont()[ FD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_6 $$ final Color bg = s.getBackgroundColor(c)[ FD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_9 $$ g2.setColor(bg)[ FD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_25 $$ final FontMetrics fm = g2.getFontMetrics()[ CD ]
Line_26 $$ String string = c.getString()-->Line_32 $$ final int charWidth = fm.charWidth(string.charAt(i))[ FD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_3 $$ final PainterSettings s = getSettings()[ CD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_27 $$ if (fm.stringWidth(string) > width) [ CD ]
Line_13 $$ if (borderColor != null) -->Line_15 $$ g2.drawRoundRect(offset + 2, 1, width - 4, height - 3, ROUND_VALUE, ROUND_VALUE)[ CD ]
Line_3 $$ final PainterSettings s = getSettings()-->Line_6 $$ final Color bg = s.getBackgroundColor(c)[ FD ]
Line_3 $$ final PainterSettings s = getSettings()-->Line_12 $$ final Color borderColor = s.getBorderColor(c)[ FD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_17 $$ final Color textColor = s.getForegroundColor(c)[ CD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_6 $$ final Color bg = s.getBackgroundColor(c)[ CD ]
Line_26 $$ String string = c.getString()-->Line_41 $$ g2.drawString(string, offset + ROUND_VALUE + 5, height - fm.getDescent() - 3)[ FD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_5 $$ final int offset = c.getOffset() - pageOffset[ FD ]
Line_21 $$ final Font font = s.getFont(g2, c)-->Line_23 $$ g2.setFont(font)[ FD ]
Line_25 $$ final FontMetrics fm = g2.getFontMetrics()-->Line_41 $$ g2.drawString(string, offset + ROUND_VALUE + 5, height - fm.getDescent() - 3)[ FD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_15 $$ g2.drawRoundRect(offset + 2, 1, width - 4, height - 3, ROUND_VALUE, ROUND_VALUE)[ FD ]
Line_31 $$ for (int i = 0; i < string.length(); i++) -->Line_33 $$ if (length + charWidth + dotsWidth > width) [ CD ]
Line_26 $$ String string = c.getString()-->Line_27 $$ if (fm.stringWidth(string) > width) [ FD ]
Line_27 $$ if (fm.stringWidth(string) > width) -->Line_30 $$ int length = 0[ CD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_21 $$ final Font font = s.getFont(g2, c)[ FD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_26 $$ String string = c.getString()[ CD ]
Line_21 $$ final Font font = s.getFont(g2, c)-->Line_22 $$ if (font != null) [ FD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_14 $$ g2.setColor(borderColor)[ FD ]
Line_17 $$ final Color textColor = s.getForegroundColor(c)-->Line_19 $$ g2.setColor(textColor)[ FD ]
Line_7 $$ final int width = c.getWidth()-->Line_33 $$ if (length + charWidth + dotsWidth > width) [ FD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_7 $$ final int width = c.getWidth()[ FD ]
Line_27 $$ if (fm.stringWidth(string) > width) -->Line_29 $$ final StringBuilder sb = new StringBuilder()[ CD ]
Line_29 $$ final StringBuilder sb = new StringBuilder()-->Line_39 $$ string = sb.append("...").toString()[ FD ]
Line_12 $$ final Color borderColor = s.getBorderColor(c)-->Line_13 $$ if (borderColor != null) [ FD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_10 $$ g2.fillRoundRect(offset + 2, 1, width - 4, height - 3, ROUND_VALUE, ROUND_VALUE)[ FD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_13 $$ if (borderColor != null) [ CD ]
Line_31 $$ for (int i = 0; i < string.length(); i++) -->Line_32 $$ final int charWidth = fm.charWidth(string.charAt(i))[ CD ]
Line_3 $$ final PainterSettings s = getSettings()-->Line_17 $$ final Color textColor = s.getForegroundColor(c)[ FD ]
Line_25 $$ final FontMetrics fm = g2.getFontMetrics()-->Line_27 $$ if (fm.stringWidth(string) > width) [ FD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_19 $$ g2.setColor(textColor)[ FD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_17 $$ final Color textColor = s.getForegroundColor(c)[ FD ]
Line_7 $$ final int width = c.getWidth()-->Line_27 $$ if (fm.stringWidth(string) > width) [ FD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_4 $$ final Font oldFont = g2.getFont()[ CD ]
Line_3 $$ final PainterSettings s = getSettings()-->Line_21 $$ final Font font = s.getFont(g2, c)[ FD ]
Line_4 $$ final Font oldFont = g2.getFont()-->Line_42 $$ g2.setFont(oldFont)[ FD ]
Line_13 $$ if (borderColor != null) -->Line_14 $$ g2.setColor(borderColor)[ CD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_25 $$ final FontMetrics fm = g2.getFontMetrics()[ FD ]
Line_31 $$ for (int i = 0; i < string.length(); i++) -->Line_36 $$ length += charWidth[ CD ]
Line_8 $$ if (bg != null) -->Line_9 $$ g2.setColor(bg)[ CD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_18 $$ if (textColor != null) [ CD ]
Line_26 $$ String string = c.getString()-->Line_39 $$ string = sb.append("...").toString()[ FD ]
Line_25 $$ final FontMetrics fm = g2.getFontMetrics()-->Line_32 $$ final int charWidth = fm.charWidth(string.charAt(i))[ FD ]
Line_27 $$ if (fm.stringWidth(string) > width) -->Line_39 $$ string = sb.append("...").toString()[ CD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_21 $$ final Font font = s.getFont(g2, c)[ CD ]
Line_27 $$ if (fm.stringWidth(string) > width) -->Line_31 $$ for (int i = 0; i < string.length(); i++) [ CD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_23 $$ g2.setFont(font)[ FD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_41 $$ g2.drawString(string, offset + ROUND_VALUE + 5, height - fm.getDescent() - 3)[ CD ]
Line_31 $$ for (int i = 0; i < string.length(); i++) -->Line_37 $$ sb.append(string.charAt(i))[ CD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_5 $$ final int offset = c.getOffset() - pageOffset[ CD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_8 $$ if (bg != null) [ CD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_26 $$ String string = c.getString()[ FD ]
Line_26 $$ String string = c.getString()-->Line_31 $$ for (int i = 0; i < string.length(); i++) [ FD ]
Line_8 $$ if (bg != null) -->Line_10 $$ g2.fillRoundRect(offset + 2, 1, width - 4, height - 3, ROUND_VALUE, ROUND_VALUE)[ CD ]
Line_12 $$ final Color borderColor = s.getBorderColor(c)-->Line_14 $$ g2.setColor(borderColor)[ FD ]
Line_25 $$ final FontMetrics fm = g2.getFontMetrics()-->Line_28 $$ final int dotsWidth = fm.stringWidth("...")[ FD ]
Line_32 $$ final int charWidth = fm.charWidth(string.charAt(i))-->Line_36 $$ length += charWidth[ FD ]
Line_6 $$ final Color bg = s.getBackgroundColor(c)-->Line_9 $$ g2.setColor(bg)[ FD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_41 $$ g2.drawString(string, offset + ROUND_VALUE + 5, height - fm.getDescent() - 3)[ FD ]
Line_17 $$ final Color textColor = s.getForegroundColor(c)-->Line_18 $$ if (textColor != null) [ FD ]
Line_2 $$ public void paint(@NotNull final Crumb c, @NotNull final Graphics2D g2, final int height, final int pageOffset) -->Line_22 $$ if (font != null) [ CD ]
Line_30 $$ int length = 0-->Line_36 $$ length += charWidth[ FD ]
Line_31 $$ for (int i = 0; i < string.length(); i++) -->Line_32 $$ final int charWidth = fm.charWidth(string.charAt(i))[ FD ]
Line_18 $$ if (textColor != null) -->Line_19 $$ g2.setColor(textColor)[ CD ]
