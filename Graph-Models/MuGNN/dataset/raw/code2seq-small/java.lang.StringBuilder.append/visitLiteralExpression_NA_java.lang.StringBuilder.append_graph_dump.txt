Line_2 $$ public void visitLiteralExpression(GrLiteral literal) -->Line_4 $$ final TypeConstraint[] constraints = GroovyExpectedTypesProvider.calculateTypeConstraints(literal)[ FD ]
Line_12 $$ if (text.startsWith("'''") || text.startsWith("\"\"\"")) -->Line_14 $$ builder.append('"').append(string).append('"')[ CD ]
Line_2 $$ public void visitLiteralExpression(GrLiteral literal) -->Line_4 $$ final TypeConstraint[] constraints = GroovyExpectedTypesProvider.calculateTypeConstraints(literal)[ CD ]
Line_5 $$ boolean isChar = false-->Line_8 $$ isChar = true[ FD ]
Line_16 $$ if (isChar) -->Line_19 $$ builder.append('"').append(StringUtil.escapeQuotes(StringUtil.trimEnd(text.substring(1, text.length()), "'"))).append('"')[ CD ]
Line_21 $$ if (text.startsWith("\"")) -->Line_22 $$ if (isChar) [ CD ]
Line_11 $$ final String text = literal.getText()-->Line_28 $$ builder.append(text)[ FD ]
Line_12 $$ if (text.startsWith("'''") || text.startsWith("\"\"\"")) -->Line_15 $$ if (text.startsWith("'")) [ CD ]
Line_2 $$ public void visitLiteralExpression(GrLiteral literal) -->Line_12 $$ if (text.startsWith("'''") || text.startsWith("\"\"\"")) [ CD ]
Line_2 $$ public void visitLiteralExpression(GrLiteral literal) -->Line_5 $$ boolean isChar = false[ CD ]
Line_11 $$ final String text = literal.getText()-->Line_25 $$ builder.append(text)[ FD ]
Line_22 $$ if (isChar) -->Line_23 $$ builder.append('\'').append(StringUtil.escapeQuotes(StringUtil.trimEnd(text.substring(1, text.length()), "\""))).append('\'')[ CD ]
Line_2 $$ public void visitLiteralExpression(GrLiteral literal) -->Line_11 $$ final String text = literal.getText()[ FD ]
Line_15 $$ if (text.startsWith("'")) -->Line_16 $$ if (isChar) [ CD ]
Line_16 $$ if (isChar) -->Line_17 $$ builder.append(text)[ CD ]
Line_11 $$ final String text = literal.getText()-->Line_17 $$ builder.append(text)[ FD ]
Line_12 $$ if (text.startsWith("'''") || text.startsWith("\"\"\"")) -->Line_13 $$ String string = GrStringUtil.removeQuotes(text).replace("\n", "\\n").replace("\r", "\\r")[ CD ]
Line_11 $$ final String text = literal.getText()-->Line_13 $$ String string = GrStringUtil.removeQuotes(text).replace("\n", "\\n").replace("\r", "\\r")[ FD ]
Line_11 $$ final String text = literal.getText()-->Line_23 $$ builder.append('\'').append(StringUtil.escapeQuotes(StringUtil.trimEnd(text.substring(1, text.length()), "\""))).append('\'')[ FD ]
Line_11 $$ final String text = literal.getText()-->Line_12 $$ if (text.startsWith("'''") || text.startsWith("\"\"\"")) [ FD ]
Line_21 $$ if (text.startsWith("\"")) -->Line_28 $$ builder.append(text)[ CD ]
Line_11 $$ final String text = literal.getText()-->Line_15 $$ if (text.startsWith("'")) [ FD ]
Line_22 $$ if (isChar) -->Line_25 $$ builder.append(text)[ CD ]
Line_15 $$ if (text.startsWith("'")) -->Line_21 $$ if (text.startsWith("\"")) [ CD ]
Line_13 $$ String string = GrStringUtil.removeQuotes(text).replace("\n", "\\n").replace("\r", "\\r")-->Line_14 $$ builder.append('"').append(string).append('"')[ FD ]
Line_7 $$ if (constraint instanceof SubtypeConstraint && PsiType.CHAR.equals(TypesUtil.unboxPrimitiveTypeWrapper(constraint.getDefaultType()))) -->Line_8 $$ isChar = true[ CD ]
Line_11 $$ final String text = literal.getText()-->Line_19 $$ builder.append('"').append(StringUtil.escapeQuotes(StringUtil.trimEnd(text.substring(1, text.length()), "'"))).append('"')[ FD ]
Line_11 $$ final String text = literal.getText()-->Line_21 $$ if (text.startsWith("\"")) [ FD ]
Line_6 $$ for (TypeConstraint constraint : constraints) -->Line_7 $$ if (constraint instanceof SubtypeConstraint && PsiType.CHAR.equals(TypesUtil.unboxPrimitiveTypeWrapper(constraint.getDefaultType()))) [ FD ]
Line_2 $$ public void visitLiteralExpression(GrLiteral literal) -->Line_11 $$ final String text = literal.getText()[ CD ]
