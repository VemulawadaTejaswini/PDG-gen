Line_2 $$ private static String createFile(Path root, FileSystem fs, byte[] fileContent, String... dirsAndFile) throws IOException -->Line_11 $$ final FSDataOutputStream out = fs.create(f)[ CD ]
Line_2 $$ private static String createFile(Path root, FileSystem fs, byte[] fileContent, String... dirsAndFile) throws IOException -->Line_11 $$ final FSDataOutputStream out = fs.create(f)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_6 $$ sb.append(Path.SEPARATOR)[ FD ]
Line_4 $$ for (String segment : dirsAndFile) -->Line_8 $$ sb.append(segment)[ FD ]
Line_2 $$ private static String createFile(Path root, FileSystem fs, byte[] fileContent, String... dirsAndFile) throws IOException -->Line_13 $$ out.write(fileContent)[ FD ]
Line_11 $$ final FSDataOutputStream out = fs.create(f)-->Line_13 $$ out.write(fileContent)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_10 $$ final Path f = new Path(root, sb.toString())[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_5 $$ if (sb.length() > 0) [ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_17 $$ return sb.toString()[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_8 $$ sb.append(segment)[ FD ]
Line_5 $$ if (sb.length() > 0) -->Line_6 $$ sb.append(Path.SEPARATOR)[ CD ]
Line_2 $$ private static String createFile(Path root, FileSystem fs, byte[] fileContent, String... dirsAndFile) throws IOException -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_11 $$ final FSDataOutputStream out = fs.create(f)-->Line_15 $$ out.close()[ FD ]
Line_2 $$ private static String createFile(Path root, FileSystem fs, byte[] fileContent, String... dirsAndFile) throws IOException -->Line_17 $$ return sb.toString()[ CD ]
Line_2 $$ private static String createFile(Path root, FileSystem fs, byte[] fileContent, String... dirsAndFile) throws IOException -->Line_10 $$ final Path f = new Path(root, sb.toString())[ CD ]
Line_10 $$ final Path f = new Path(root, sb.toString())-->Line_11 $$ final FSDataOutputStream out = fs.create(f)[ FD ]
