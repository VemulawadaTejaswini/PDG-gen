Line_2 $$ private static String getMergeableStackTrace(String stackTrace, boolean skipFirstLine) -->Line_6 $$ String[] lines = stackTrace.split("\n")[ FD ]
Line_2 $$ private static String getMergeableStackTrace(String stackTrace, boolean skipFirstLine) -->Line_3 $$ if (stackTrace == null)[ FD ]
Line_2 $$ private static String getMergeableStackTrace(String stackTrace, boolean skipFirstLine) -->Line_9 $$ if (i == 0 && skipFirstLine)[ FD ]
Line_7 $$ for (int i = 0; i < lines.length; i++) -->Line_9 $$ if (i == 0 && skipFirstLine)[ CD ]
Line_2 $$ private static String getMergeableStackTrace(String stackTrace, boolean skipFirstLine) -->Line_7 $$ for (int i = 0; i < lines.length; i++) [ CD ]
Line_2 $$ private static String getMergeableStackTrace(String stackTrace, boolean skipFirstLine) -->Line_6 $$ String[] lines = stackTrace.split("\n")[ CD ]
Line_7 $$ for (int i = 0; i < lines.length; i++) -->Line_8 $$ String line = lines[i][ CD ]
Line_8 $$ String line = lines[i]-->Line_11 $$ line = line.replaceAll("<0x.+>\\s", "<merged>")[ FD ]
Line_7 $$ for (int i = 0; i < lines.length; i++) -->Line_12 $$ builder.append(line).append("\n")[ CD ]
Line_2 $$ private static String getMergeableStackTrace(String stackTrace, boolean skipFirstLine) -->Line_14 $$ return builder.toString()[ CD ]
Line_7 $$ for (int i = 0; i < lines.length; i++) -->Line_11 $$ line = line.replaceAll("<0x.+>\\s", "<merged>")[ CD ]
Line_2 $$ private static String getMergeableStackTrace(String stackTrace, boolean skipFirstLine) -->Line_3 $$ if (stackTrace == null)[ CD ]
Line_11 $$ line = line.replaceAll("<0x.+>\\s", "<merged>")-->Line_12 $$ builder.append(line).append("\n")[ FD ]
Line_3 $$ if (stackTrace == null)-->Line_4 $$ return null[ CD ]
Line_8 $$ String line = lines[i]-->Line_12 $$ builder.append(line).append("\n")[ FD ]
Line_2 $$ private static String getMergeableStackTrace(String stackTrace, boolean skipFirstLine) -->Line_5 $$ StringBuilder builder = new StringBuilder()[ CD ]
Line_5 $$ StringBuilder builder = new StringBuilder()-->Line_14 $$ return builder.toString()[ FD ]
Line_5 $$ StringBuilder builder = new StringBuilder()-->Line_12 $$ builder.append(line).append("\n")[ FD ]
