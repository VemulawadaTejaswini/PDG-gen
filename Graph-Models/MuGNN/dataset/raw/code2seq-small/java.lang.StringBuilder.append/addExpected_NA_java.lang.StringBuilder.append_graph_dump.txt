Line_2 $$ private boolean addExpected(StringBuilder sb, int position, boolean expected) -->Line_5 $$ long[] hashes = new long[strings.length][ CD ]
Line_34 $$ char c = s.charAt(0)-->Line_35 $$ String displayText = c == '<' || StringUtil.isJavaIdentifierStart(c) ? s : '\'' + s + '\''[ FD ]
Line_2 $$ private boolean addExpected(StringBuilder sb, int position, boolean expected) -->Line_3 $$ MyList<Variant> list = expected ? variants : unexpected[ CD ]
Line_10 $$ String text = variant.object.toString()-->Line_17 $$ strings[count] = text[ FD ]
Line_11 $$ long hash = StringHash.calc(text)-->Line_16 $$ hashes[count] = hash[ FD ]
Line_38 $$ if (count > 1 && count < MAX_VARIANTS_TO_DISPLAY) -->Line_39 $$ int idx = sb.lastIndexOf(", ")[ CD ]
Line_9 $$ if (position == variant.position) -->Line_10 $$ String text = variant.object.toString()[ CD ]
Line_12 $$ for (int i = 0; i < count; i++) -->Line_13 $$ if (hashes[i] == hash)[ CD ]
Line_27 $$ if (count > MAX_VARIANTS_TO_DISPLAY) -->Line_31 $$ sb.append(", ")[ CD ]
Line_2 $$ private boolean addExpected(StringBuilder sb, int position, boolean expected) -->Line_39 $$ int idx = sb.lastIndexOf(", ")[ FD ]
Line_2 $$ private boolean addExpected(StringBuilder sb, int position, boolean expected) -->Line_31 $$ sb.append(", ")[ FD ]
Line_26 $$ if (count++ > 0) -->Line_27 $$ if (count > MAX_VARIANTS_TO_DISPLAY) [ CD ]
Line_2 $$ private boolean addExpected(StringBuilder sb, int position, boolean expected) -->Line_36 $$ sb.append(displayText)[ FD ]
Line_7 $$ int count = 0-->Line_27 $$ if (count > MAX_VARIANTS_TO_DISPLAY) [ FD ]
Line_2 $$ private boolean addExpected(StringBuilder sb, int position, boolean expected) -->Line_7 $$ int count = 0[ CD ]
Line_2 $$ private boolean addExpected(StringBuilder sb, int position, boolean expected) -->Line_28 $$ sb.append(" and ...")[ FD ]
Line_38 $$ if (count > 1 && count < MAX_VARIANTS_TO_DISPLAY) -->Line_40 $$ sb.replace(idx, idx + 1, " or")[ CD ]
Line_4 $$ String[] strings = new String[list.size()]-->Line_6 $$ Arrays.fill(strings, "")[ FD ]
Line_23 $$ for (String s : strings) -->Line_24 $$ if (s.length() == 0)[ FD ]
Line_2 $$ private boolean addExpected(StringBuilder sb, int position, boolean expected) -->Line_9 $$ if (position == variant.position) [ FD ]
Line_22 $$ count = 0-->Line_27 $$ if (count > MAX_VARIANTS_TO_DISPLAY) [ FD ]
Line_4 $$ String[] strings = new String[list.size()]-->Line_21 $$ Arrays.sort(strings)[ FD ]
Line_7 $$ int count = 0-->Line_22 $$ count = 0[ FD ]
Line_39 $$ int idx = sb.lastIndexOf(", ")-->Line_40 $$ sb.replace(idx, idx + 1, " or")[ FD ]
Line_2 $$ private boolean addExpected(StringBuilder sb, int position, boolean expected) -->Line_42 $$ return count > 0[ CD ]
Line_9 $$ if (position == variant.position) -->Line_16 $$ hashes[count] = hash[ CD ]
Line_7 $$ int count = 0-->Line_26 $$ if (count++ > 0) [ FD ]
Line_2 $$ private boolean addExpected(StringBuilder sb, int position, boolean expected) -->Line_21 $$ Arrays.sort(strings)[ CD ]
Line_27 $$ if (count > MAX_VARIANTS_TO_DISPLAY) -->Line_28 $$ sb.append(" and ...")[ CD ]
Line_7 $$ int count = 0-->Line_18 $$ count++[ FD ]
Line_35 $$ String displayText = c == '<' || StringUtil.isJavaIdentifierStart(c) ? s : '\'' + s + '\''-->Line_36 $$ sb.append(displayText)[ FD ]
Line_10 $$ String text = variant.object.toString()-->Line_11 $$ long hash = StringHash.calc(text)[ FD ]
Line_23 $$ for (String s : strings) -->Line_34 $$ char c = s.charAt(0)[ FD ]
Line_2 $$ private boolean addExpected(StringBuilder sb, int position, boolean expected) -->Line_38 $$ if (count > 1 && count < MAX_VARIANTS_TO_DISPLAY) [ CD ]
Line_2 $$ private boolean addExpected(StringBuilder sb, int position, boolean expected) -->Line_4 $$ String[] strings = new String[list.size()][ CD ]
Line_22 $$ count = 0-->Line_26 $$ if (count++ > 0) [ FD ]
Line_2 $$ private boolean addExpected(StringBuilder sb, int position, boolean expected) -->Line_40 $$ sb.replace(idx, idx + 1, " or")[ FD ]
Line_9 $$ if (position == variant.position) -->Line_12 $$ for (int i = 0; i < count; i++) [ CD ]
Line_9 $$ if (position == variant.position) -->Line_11 $$ long hash = StringHash.calc(text)[ CD ]
Line_2 $$ private boolean addExpected(StringBuilder sb, int position, boolean expected) -->Line_22 $$ count = 0[ CD ]
Line_3 $$ MyList<Variant> list = expected ? variants : unexpected-->Line_4 $$ String[] strings = new String[list.size()][ FD ]
Line_9 $$ if (position == variant.position) -->Line_17 $$ strings[count] = text[ CD ]
Line_9 $$ if (position == variant.position) -->Line_18 $$ count++[ CD ]
Line_2 $$ private boolean addExpected(StringBuilder sb, int position, boolean expected) -->Line_6 $$ Arrays.fill(strings, "")[ CD ]
Line_11 $$ long hash = StringHash.calc(text)-->Line_13 $$ if (hashes[i] == hash)[ FD ]
Line_7 $$ int count = 0-->Line_12 $$ for (int i = 0; i < count; i++) [ FD ]
