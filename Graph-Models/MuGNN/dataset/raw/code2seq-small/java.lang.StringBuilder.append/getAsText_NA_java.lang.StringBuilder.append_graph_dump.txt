Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_10 $$ sb.append(",")[ FD ]
Line_9 $$ if (i > 0) -->Line_10 $$ sb.append(",")[ CD ]
Line_8 $$ for (int i = 0; i < classes.length; ++i) -->Line_12 $$ sb.append(ClassUtils.getQualifiedName(classes[i]))[ CD ]
Line_2 $$ public String getAsText() -->Line_8 $$ for (int i = 0; i < classes.length; ++i) [ CD ]
Line_2 $$ public String getAsText() -->Line_7 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ public String getAsText() -->Line_3 $$ Class<?>[] classes = (Class[]) getValue()[ CD ]
Line_2 $$ public String getAsText() -->Line_4 $$ if (ObjectUtils.isEmpty(classes)) [ CD ]
Line_8 $$ for (int i = 0; i < classes.length; ++i) -->Line_9 $$ if (i > 0) [ FD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_12 $$ sb.append(ClassUtils.getQualifiedName(classes[i]))[ FD ]
Line_2 $$ public String getAsText() -->Line_14 $$ return sb.toString()[ CD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_14 $$ return sb.toString()[ FD ]
Line_8 $$ for (int i = 0; i < classes.length; ++i) -->Line_9 $$ if (i > 0) [ CD ]
Line_4 $$ if (ObjectUtils.isEmpty(classes)) -->Line_5 $$ return ""[ CD ]
Line_3 $$ Class<?>[] classes = (Class[]) getValue()-->Line_4 $$ if (ObjectUtils.isEmpty(classes)) [ FD ]
