Line_24 $$ if (!node.getOrderBy().isEmpty()) -->Line_25 $$ append(indent, "ORDER BY " + formatSortItems(node.getOrderBy())).append('\n')[ CD ]
Line_12 $$ WithQuery query = queries.next()-->Line_13 $$ append(indent, query.getName())[ FD ]
Line_11 $$ while (queries.hasNext()) -->Line_14 $$ appendAliasColumns(builder, query.getColumnNames())[ CD ]
Line_3 $$ if (node.getWith().isPresent()) -->Line_10 $$ Iterator<WithQuery> queries = with.getQueries().iterator()[ CD ]
Line_12 $$ WithQuery query = queries.next()-->Line_16 $$ process(new TableSubquery(query.getQuery()), indent)[ FD ]
Line_3 $$ if (node.getWith().isPresent()) -->Line_9 $$ builder.append("\n  ")[ CD ]
Line_10 $$ Iterator<WithQuery> queries = with.getQueries().iterator()-->Line_18 $$ if (queries.hasNext()) [ FD ]
Line_27 $$ if (node.getLimit().isPresent()) -->Line_28 $$ append(indent, "LIMIT " + node.getLimit().get()).append('\n')[ CD ]
Line_11 $$ while (queries.hasNext()) -->Line_18 $$ if (queries.hasNext()) [ CD ]
Line_2 $$ protected Void visitQuery(Query node, Integer indent) -->Line_5 $$ append(indent, "WITH")[ FD ]
Line_2 $$ protected Void visitQuery(Query node, Integer indent) -->Line_27 $$ if (node.getLimit().isPresent()) [ FD ]
Line_3 $$ if (node.getWith().isPresent()) -->Line_6 $$ if (with.isRecursive()) [ CD ]
Line_2 $$ protected Void visitQuery(Query node, Integer indent) -->Line_25 $$ append(indent, "ORDER BY " + formatSortItems(node.getOrderBy())).append('\n')[ FD ]
Line_3 $$ if (node.getWith().isPresent()) -->Line_4 $$ With with = node.getWith().get()[ CD ]
Line_2 $$ protected Void visitQuery(Query node, Integer indent) -->Line_34 $$ return null[ CD ]
Line_2 $$ protected Void visitQuery(Query node, Integer indent) -->Line_3 $$ if (node.getWith().isPresent()) [ CD ]
Line_2 $$ protected Void visitQuery(Query node, Integer indent) -->Line_27 $$ if (node.getLimit().isPresent()) [ CD ]
Line_11 $$ while (queries.hasNext()) -->Line_12 $$ WithQuery query = queries.next()[ CD ]
Line_18 $$ if (queries.hasNext()) -->Line_19 $$ builder.append(", ")[ CD ]
Line_2 $$ protected Void visitQuery(Query node, Integer indent) -->Line_30 $$ if (node.getApproximate().isPresent()) [ FD ]
Line_11 $$ while (queries.hasNext()) -->Line_15 $$ builder.append(" AS ")[ CD ]
Line_11 $$ while (queries.hasNext()) -->Line_16 $$ process(new TableSubquery(query.getQuery()), indent)[ CD ]
Line_30 $$ if (node.getApproximate().isPresent()) -->Line_31 $$ String confidence = node.getApproximate().get().getConfidence()[ CD ]
Line_2 $$ protected Void visitQuery(Query node, Integer indent) -->Line_24 $$ if (!node.getOrderBy().isEmpty()) [ FD ]
Line_4 $$ With with = node.getWith().get()-->Line_10 $$ Iterator<WithQuery> queries = with.getQueries().iterator()[ FD ]
Line_2 $$ protected Void visitQuery(Query node, Integer indent) -->Line_31 $$ String confidence = node.getApproximate().get().getConfidence()[ FD ]
Line_30 $$ if (node.getApproximate().isPresent()) -->Line_32 $$ append(indent, "APPROXIMATE AT " + confidence + " CONFIDENCE").append('\n')[ CD ]
Line_10 $$ Iterator<WithQuery> queries = with.getQueries().iterator()-->Line_11 $$ while (queries.hasNext()) [ FD ]
Line_11 $$ while (queries.hasNext()) -->Line_17 $$ builder.append('\n')[ CD ]
Line_4 $$ With with = node.getWith().get()-->Line_6 $$ if (with.isRecursive()) [ FD ]
Line_2 $$ protected Void visitQuery(Query node, Integer indent) -->Line_4 $$ With with = node.getWith().get()[ FD ]
Line_12 $$ WithQuery query = queries.next()-->Line_14 $$ appendAliasColumns(builder, query.getColumnNames())[ FD ]
Line_2 $$ protected Void visitQuery(Query node, Integer indent) -->Line_23 $$ processRelation(node.getQueryBody(), indent)[ CD ]
Line_2 $$ protected Void visitQuery(Query node, Integer indent) -->Line_3 $$ if (node.getWith().isPresent()) [ FD ]
Line_3 $$ if (node.getWith().isPresent()) -->Line_11 $$ while (queries.hasNext()) [ CD ]
Line_2 $$ protected Void visitQuery(Query node, Integer indent) -->Line_23 $$ processRelation(node.getQueryBody(), indent)[ FD ]
Line_2 $$ protected Void visitQuery(Query node, Integer indent) -->Line_30 $$ if (node.getApproximate().isPresent()) [ CD ]
Line_2 $$ protected Void visitQuery(Query node, Integer indent) -->Line_13 $$ append(indent, query.getName())[ FD ]
Line_11 $$ while (queries.hasNext()) -->Line_13 $$ append(indent, query.getName())[ CD ]
Line_2 $$ protected Void visitQuery(Query node, Integer indent) -->Line_32 $$ append(indent, "APPROXIMATE AT " + confidence + " CONFIDENCE").append('\n')[ FD ]
Line_6 $$ if (with.isRecursive()) -->Line_7 $$ builder.append(" RECURSIVE")[ CD ]
Line_10 $$ Iterator<WithQuery> queries = with.getQueries().iterator()-->Line_12 $$ WithQuery query = queries.next()[ FD ]
Line_2 $$ protected Void visitQuery(Query node, Integer indent) -->Line_28 $$ append(indent, "LIMIT " + node.getLimit().get()).append('\n')[ FD ]
Line_3 $$ if (node.getWith().isPresent()) -->Line_5 $$ append(indent, "WITH")[ CD ]
Line_2 $$ protected Void visitQuery(Query node, Integer indent) -->Line_24 $$ if (!node.getOrderBy().isEmpty()) [ CD ]
Line_2 $$ protected Void visitQuery(Query node, Integer indent) -->Line_16 $$ process(new TableSubquery(query.getQuery()), indent)[ FD ]
