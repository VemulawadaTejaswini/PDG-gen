Line_18 $$ final GrConstructorInvocation invocation = PsiImplUtil.getChainingConstructorInvocation((GrMethod) constructor)-->Line_19 $$ if (invocation != null) [ FD ]
Line_19 $$ if (invocation != null) -->Line_20 $$ final GroovyResolveResult resolveResult = resolveChainingConstructor((GrMethod) constructor)[ CD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_11 $$ text.append("throws ").append(StringUtil.join(throwsTypes, ", ")).append(' ')[ FD ]
Line_21 $$ if (resolveResult != null) -->Line_22 $$ text.append(invocation.isSuperCall() ? "super(" : "this(")[ CD ]
Line_9 $$ final Set<String> throwsTypes = collectThrowsTypes(constructor, new THashSet<PsiMethod>())-->Line_11 $$ text.append("throws ").append(StringUtil.join(throwsTypes, ", ")).append(' ')[ FD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_5 $$ text.append("public ")[ FD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_22 $$ text.append(invocation.isSuperCall() ? "super(" : "this(")[ FD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_7 $$ text.append(constructor.getName())[ CD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_15 $$ constructor = ((GrReflectedMethod) constructor).getBaseMethod()[ FD ]
Line_9 $$ final Set<String> throwsTypes = collectThrowsTypes(constructor, new THashSet<PsiMethod>())-->Line_10 $$ if (!throwsTypes.isEmpty()) [ FD ]
Line_20 $$ final GroovyResolveResult resolveResult = resolveChainingConstructor((GrMethod) constructor)-->Line_23 $$ writeStubConstructorInvocation(text, (PsiMethod) resolveResult.getElement(), resolveResult.getSubstitutor(), invocation)[ FD ]
Line_18 $$ final GrConstructorInvocation invocation = PsiImplUtil.getChainingConstructorInvocation((GrMethod) constructor)-->Line_22 $$ text.append(invocation.isSuperCall() ? "super(" : "this(")[ FD ]
Line_20 $$ final GroovyResolveResult resolveResult = resolveChainingConstructor((GrMethod) constructor)-->Line_21 $$ if (resolveResult != null) [ FD ]
Line_18 $$ final GrConstructorInvocation invocation = PsiImplUtil.getChainingConstructorInvocation((GrMethod) constructor)-->Line_23 $$ writeStubConstructorInvocation(text, (PsiMethod) resolveResult.getElement(), resolveResult.getSubstitutor(), invocation)[ FD ]
Line_4 $$ if (!isEnum) -->Line_5 $$ text.append("public ")[ CD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_30 $$ text.append("\n}\n")[ CD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_23 $$ writeStubConstructorInvocation(text, (PsiMethod) resolveResult.getElement(), resolveResult.getSubstitutor(), invocation)[ FD ]
Line_10 $$ if (!throwsTypes.isEmpty()) -->Line_11 $$ text.append("throws ").append(StringUtil.join(throwsTypes, ", ")).append(' ')[ CD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_26 $$ if (constructor instanceof LightElement) [ FD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_13 $$ text.append("[ CD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_30 $$ text.append("\n}\n")[ FD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_3 $$ LOG.assertTrue(constructor.isConstructor())[ CD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_9 $$ final Set<String> throwsTypes = collectThrowsTypes(constructor, new THashSet<PsiMethod>())[ FD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_4 $$ if (!isEnum) [ CD ]
Line_21 $$ if (resolveResult != null) -->Line_23 $$ writeStubConstructorInvocation(text, (PsiMethod) resolveResult.getElement(), resolveResult.getSubstitutor(), invocation)[ CD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_14 $$ if (constructor instanceof GrReflectedMethod) [ CD ]
Line_17 $$ if (constructor instanceof GrMethod) -->Line_19 $$ if (invocation != null) [ CD ]
Line_21 $$ if (resolveResult != null) -->Line_24 $$ text.append(");")[ CD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_17 $$ if (constructor instanceof GrMethod) [ FD ]
Line_19 $$ if (invocation != null) -->Line_26 $$ if (constructor instanceof LightElement) [ CD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_8 $$ GenerationUtil.writeParameterList(text, constructor.getParameterList().getParameters(), classNameProvider, null)[ CD ]
Line_19 $$ if (invocation != null) -->Line_21 $$ if (resolveResult != null) [ CD ]
Line_15 $$ constructor = ((GrReflectedMethod) constructor).getBaseMethod()-->Line_27 $$ writeStubConstructorInvocation(constructor, text)[ FD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_4 $$ if (!isEnum) [ FD ]
Line_26 $$ if (constructor instanceof LightElement) -->Line_27 $$ writeStubConstructorInvocation(constructor, text)[ CD ]
Line_17 $$ if (constructor instanceof GrMethod) -->Line_18 $$ final GrConstructorInvocation invocation = PsiImplUtil.getChainingConstructorInvocation((GrMethod) constructor)[ CD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_14 $$ if (constructor instanceof GrReflectedMethod) [ FD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_3 $$ LOG.assertTrue(constructor.isConstructor())[ FD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_27 $$ writeStubConstructorInvocation(constructor, text)[ FD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_7 $$ text.append(constructor.getName())[ FD ]
Line_15 $$ constructor = ((GrReflectedMethod) constructor).getBaseMethod()-->Line_26 $$ if (constructor instanceof LightElement) [ FD ]
Line_14 $$ if (constructor instanceof GrReflectedMethod) -->Line_15 $$ constructor = ((GrReflectedMethod) constructor).getBaseMethod()[ CD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_17 $$ if (constructor instanceof GrMethod) [ CD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_10 $$ if (!throwsTypes.isEmpty()) [ CD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_13 $$ text.append("[ FD ]
Line_15 $$ constructor = ((GrReflectedMethod) constructor).getBaseMethod()-->Line_17 $$ if (constructor instanceof GrMethod) [ FD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_24 $$ text.append(");")[ FD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_8 $$ GenerationUtil.writeParameterList(text, constructor.getParameterList().getParameters(), classNameProvider, null)[ FD ]
Line_2 $$ public void writeConstructor(final StringBuilder text, PsiMethod constructor, boolean isEnum) -->Line_9 $$ final Set<String> throwsTypes = collectThrowsTypes(constructor, new THashSet<PsiMethod>())[ CD ]
