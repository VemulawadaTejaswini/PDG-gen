Line_27 $$ FSImageStorageInspector inspector-->Line_33 $$ inspectStorageDirs(inspector)[ FD ]
Line_2 $$ FSImageStorageInspector readAndInspectDirs(EnumSet<NameNodeFile> fileTypes) throws IOException -->Line_3 $$ Integer layoutVersion = null[ CD ]
Line_7 $$ StorageDirectory sd = it.next()-->Line_19 $$ layoutVersions.append("(").append(sd.getRoot()).append(", ").append(lv).append(") ")[ FD ]
Line_6 $$ for (Iterator<StorageDirectory> it = dirIterator(false); it.hasNext(); ) -->Line_14 $$ if (layoutVersion == null) [ CD ]
Line_4 $$ boolean multipleLV = false-->Line_17 $$ multipleLV = true[ FD ]
Line_2 $$ FSImageStorageInspector readAndInspectDirs(EnumSet<NameNodeFile> fileTypes) throws IOException -->Line_33 $$ inspectStorageDirs(inspector)[ CD ]
Line_27 $$ FSImageStorageInspector inspector-->Line_29 $$ inspector = new FSImageTransactionalStorageInspector(fileTypes)[ FD ]
Line_2 $$ FSImageStorageInspector readAndInspectDirs(EnumSet<NameNodeFile> fileTypes) throws IOException -->Line_6 $$ for (Iterator<StorageDirectory> it = dirIterator(false); it.hasNext(); ) [ CD ]
Line_3 $$ Integer layoutVersion = null-->Line_15 $$ layoutVersion = Integer.valueOf(lv)[ FD ]
Line_2 $$ FSImageStorageInspector readAndInspectDirs(EnumSet<NameNodeFile> fileTypes) throws IOException -->Line_28 $$ if (NameNodeLayoutVersion.supports(LayoutVersion.Feature.TXID_BASED_LAYOUT, getLayoutVersion())) [ CD ]
Line_27 $$ FSImageStorageInspector inspector-->Line_31 $$ inspector = new FSImagePreTransactionalStorageInspector()[ FD ]
Line_6 $$ for (Iterator<StorageDirectory> it = dirIterator(false); it.hasNext(); ) -->Line_13 $$ int lv = getLayoutVersion()[ CD ]
Line_7 $$ StorageDirectory sd = it.next()-->Line_12 $$ readProperties(sd)[ FD ]
Line_14 $$ if (layoutVersion == null) -->Line_16 $$ if (!layoutVersion.equals(lv)) [ CD ]
Line_28 $$ if (NameNodeLayoutVersion.supports(LayoutVersion.Feature.TXID_BASED_LAYOUT, getLayoutVersion())) -->Line_29 $$ inspector = new FSImageTransactionalStorageInspector(fileTypes)[ CD ]
Line_29 $$ inspector = new FSImageTransactionalStorageInspector(fileTypes)-->Line_33 $$ inspectStorageDirs(inspector)[ FD ]
Line_2 $$ FSImageStorageInspector readAndInspectDirs(EnumSet<NameNodeFile> fileTypes) throws IOException -->Line_5 $$ StringBuilder layoutVersions = new StringBuilder()[ CD ]
Line_31 $$ inspector = new FSImagePreTransactionalStorageInspector()-->Line_33 $$ inspectStorageDirs(inspector)[ FD ]
Line_3 $$ Integer layoutVersion = null-->Line_14 $$ if (layoutVersion == null) [ FD ]
Line_6 $$ for (Iterator<StorageDirectory> it = dirIterator(false); it.hasNext(); ) -->Line_12 $$ readProperties(sd)[ CD ]
Line_6 $$ for (Iterator<StorageDirectory> it = dirIterator(false); it.hasNext(); ) -->Line_19 $$ layoutVersions.append("(").append(sd.getRoot()).append(", ").append(lv).append(") ")[ CD ]
Line_15 $$ layoutVersion = Integer.valueOf(lv)-->Line_21 $$ if (layoutVersion == null) [ FD ]
Line_13 $$ int lv = getLayoutVersion()-->Line_16 $$ if (!layoutVersion.equals(lv)) [ FD ]
Line_2 $$ FSImageStorageInspector readAndInspectDirs(EnumSet<NameNodeFile> fileTypes) throws IOException -->Line_27 $$ FSImageStorageInspector inspector[ CD ]
Line_15 $$ layoutVersion = Integer.valueOf(lv)-->Line_16 $$ if (!layoutVersion.equals(lv)) [ FD ]
Line_7 $$ StorageDirectory sd = it.next()-->Line_8 $$ if (!sd.getVersionFile().exists()) [ FD ]
Line_14 $$ if (layoutVersion == null) -->Line_15 $$ layoutVersion = Integer.valueOf(lv)[ CD ]
Line_13 $$ int lv = getLayoutVersion()-->Line_15 $$ layoutVersion = Integer.valueOf(lv)[ FD ]
Line_3 $$ Integer layoutVersion = null-->Line_21 $$ if (layoutVersion == null) [ FD ]
Line_6 $$ for (Iterator<StorageDirectory> it = dirIterator(false); it.hasNext(); ) -->Line_8 $$ if (!sd.getVersionFile().exists()) [ CD ]
Line_16 $$ if (!layoutVersion.equals(lv)) -->Line_17 $$ multipleLV = true[ CD ]
Line_2 $$ FSImageStorageInspector readAndInspectDirs(EnumSet<NameNodeFile> fileTypes) throws IOException -->Line_4 $$ boolean multipleLV = false[ CD ]
Line_5 $$ StringBuilder layoutVersions = new StringBuilder()-->Line_19 $$ layoutVersions.append("(").append(sd.getRoot()).append(", ").append(lv).append(") ")[ FD ]
Line_2 $$ FSImageStorageInspector readAndInspectDirs(EnumSet<NameNodeFile> fileTypes) throws IOException -->Line_34 $$ return inspector[ CD ]
Line_15 $$ layoutVersion = Integer.valueOf(lv)-->Line_14 $$ if (layoutVersion == null) [ FD ]
Line_29 $$ inspector = new FSImageTransactionalStorageInspector(fileTypes)-->Line_31 $$ inspector = new FSImagePreTransactionalStorageInspector()[ FD ]
Line_6 $$ for (Iterator<StorageDirectory> it = dirIterator(false); it.hasNext(); ) -->Line_7 $$ StorageDirectory sd = it.next()[ CD ]
Line_3 $$ Integer layoutVersion = null-->Line_16 $$ if (!layoutVersion.equals(lv)) [ FD ]
Line_2 $$ FSImageStorageInspector readAndInspectDirs(EnumSet<NameNodeFile> fileTypes) throws IOException -->Line_24 $$ if (multipleLV) [ CD ]
Line_6 $$ for (Iterator<StorageDirectory> it = dirIterator(false); it.hasNext(); ) -->Line_7 $$ StorageDirectory sd = it.next()[ FD ]
Line_13 $$ int lv = getLayoutVersion()-->Line_19 $$ layoutVersions.append("(").append(sd.getRoot()).append(", ").append(lv).append(") ")[ FD ]
Line_8 $$ if (!sd.getVersionFile().exists()) -->Line_9 $$ FSImage.LOG.warn("Storage directory " + sd + " contains no VERSION file. Skipping...")[ CD ]
Line_28 $$ if (NameNodeLayoutVersion.supports(LayoutVersion.Feature.TXID_BASED_LAYOUT, getLayoutVersion())) -->Line_31 $$ inspector = new FSImagePreTransactionalStorageInspector()[ CD ]
Line_2 $$ FSImageStorageInspector readAndInspectDirs(EnumSet<NameNodeFile> fileTypes) throws IOException -->Line_21 $$ if (layoutVersion == null) [ CD ]
