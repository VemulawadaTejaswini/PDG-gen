Line_2 $$ public void testSimulateInfoPageHtmlTemplate() throws Exception -->Line_5 $$ SLSRunner.simulateInfoMap.put("Number of nodes", 100)[ CD ]
Line_2 $$ public void testSimulateInfoPageHtmlTemplate() throws Exception -->Line_9 $$ SLSRunner.simulateInfoMap.put("Number of tasks", 1000)[ CD ]
Line_2 $$ public void testSimulateInfoPageHtmlTemplate() throws Exception -->Line_11 $$ SLSRunner.simulateInfoMap.put("Number of queues", 4)[ CD ]
Line_15 $$ for (Map.Entry<String, Object> entry : SLSRunner.simulateInfoMap.entrySet()) -->Line_17 $$ info.append("<td class='td1'>" + entry.getKey() + "</td>")[ FD ]
Line_2 $$ public void testSimulateInfoPageHtmlTemplate() throws Exception -->Line_10 $$ SLSRunner.simulateInfoMap.put("Average tasks per applicaion", 10)[ CD ]
Line_14 $$ StringBuilder info = new StringBuilder()-->Line_18 $$ info.append("<td class='td2'>" + entry.getValue() + "</td>")[ FD ]
Line_2 $$ public void testSimulateInfoPageHtmlTemplate() throws Exception -->Line_6 $$ SLSRunner.simulateInfoMap.put("Node memory (MB)", 1024)[ CD ]
Line_14 $$ StringBuilder info = new StringBuilder()-->Line_16 $$ info.append("<tr>")[ FD ]
Line_2 $$ public void testSimulateInfoPageHtmlTemplate() throws Exception -->Line_3 $$ String simulateInfoTemplate = FileUtils.readFileToString(new File("src/main/html/simulate.info.html.template"))[ CD ]
Line_14 $$ StringBuilder info = new StringBuilder()-->Line_17 $$ info.append("<td class='td1'>" + entry.getKey() + "</td>")[ FD ]
Line_2 $$ public void testSimulateInfoPageHtmlTemplate() throws Exception -->Line_21 $$ String simulateInfo = MessageFormat.format(simulateInfoTemplate, info.toString())[ CD ]
Line_2 $$ public void testSimulateInfoPageHtmlTemplate() throws Exception -->Line_8 $$ SLSRunner.simulateInfoMap.put("Number of applications", 100)[ CD ]
Line_3 $$ String simulateInfoTemplate = FileUtils.readFileToString(new File("src/main/html/simulate.info.html.template"))-->Line_21 $$ String simulateInfo = MessageFormat.format(simulateInfoTemplate, info.toString())[ FD ]
Line_14 $$ StringBuilder info = new StringBuilder()-->Line_21 $$ String simulateInfo = MessageFormat.format(simulateInfoTemplate, info.toString())[ FD ]
Line_15 $$ for (Map.Entry<String, Object> entry : SLSRunner.simulateInfoMap.entrySet()) -->Line_18 $$ info.append("<td class='td2'>" + entry.getValue() + "</td>")[ FD ]
Line_2 $$ public void testSimulateInfoPageHtmlTemplate() throws Exception -->Line_7 $$ SLSRunner.simulateInfoMap.put("Node VCores", 1)[ CD ]
Line_2 $$ public void testSimulateInfoPageHtmlTemplate() throws Exception -->Line_22 $$ Assert.assertTrue("The simulate info html page should not be empty", simulateInfo.length() > 0)[ CD ]
Line_2 $$ public void testSimulateInfoPageHtmlTemplate() throws Exception -->Line_13 $$ SLSRunner.simulateInfoMap.put("Estimated simulate time (s)", 10000)[ CD ]
Line_21 $$ String simulateInfo = MessageFormat.format(simulateInfoTemplate, info.toString())-->Line_24 $$ Assert.assertTrue("The simulate info html page should have information " + "of " + entry.getKey(), simulateInfo.contains("<td class='td1'>" + entry.getKey() + "</td><td class='td2'>" + entry.getValue() + "</td>"))[ FD ]
Line_2 $$ public void testSimulateInfoPageHtmlTemplate() throws Exception -->Line_12 $$ SLSRunner.simulateInfoMap.put("Average applications per queue", 25)[ CD ]
Line_2 $$ public void testSimulateInfoPageHtmlTemplate() throws Exception -->Line_14 $$ StringBuilder info = new StringBuilder()[ CD ]
Line_15 $$ for (Map.Entry<String, Object> entry : SLSRunner.simulateInfoMap.entrySet()) -->Line_24 $$ Assert.assertTrue("The simulate info html page should have information " + "of " + entry.getKey(), simulateInfo.contains("<td class='td1'>" + entry.getKey() + "</td><td class='td2'>" + entry.getValue() + "</td>"))[ FD ]
Line_2 $$ public void testSimulateInfoPageHtmlTemplate() throws Exception -->Line_4 $$ SLSRunner.simulateInfoMap.put("Number of racks", 10)[ CD ]
Line_21 $$ String simulateInfo = MessageFormat.format(simulateInfoTemplate, info.toString())-->Line_22 $$ Assert.assertTrue("The simulate info html page should not be empty", simulateInfo.length() > 0)[ FD ]
Line_14 $$ StringBuilder info = new StringBuilder()-->Line_19 $$ info.append("</tr>")[ FD ]
