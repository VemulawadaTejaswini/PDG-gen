Line_28 $$ managedBeanClass = true-->Line_34 $$ managedBeanClass = false[ FD ]
Line_27 $$ if (parser.getLocalName().equals(MANAGED_BEAN_CLASS)) -->Line_29 $$ className = new StringBuilder()[ CD ]
Line_10 $$ StringBuilder className = null-->Line_43 $$ className.append(parser.getText())[ FD ]
Line_11 $$ int indent = 0-->Line_21 $$ indent++[ FD ]
Line_36 $$ managedBean = false-->Line_26 $$ if (indent == 3 && managedBean) [ FD ]
Line_27 $$ if (parser.getLocalName().equals(MANAGED_BEAN_CLASS)) -->Line_28 $$ managedBeanClass = true[ CD ]
Line_6 $$ is = facesConfig.openStream()-->Line_51 $$ is.close()[ FD ]
Line_32 $$ if (event == XMLStreamConstants.END_ELEMENT) -->Line_38 $$ if (className != null) [ CD ]
Line_3 $$ for (final VirtualFile facesConfig : getConfigurationFiles(deploymentUnit)) -->Line_47 $$ JSFLogger.ROOT_LOGGER.managedBeansConfigParseFailed(facesConfig)[ FD ]
Line_4 $$ InputStream is = null-->Line_51 $$ is.close()[ FD ]
Line_22 $$ if (indent == 2) -->Line_26 $$ if (indent == 3 && managedBean) [ CD ]
Line_14 $$ while (true) -->Line_20 $$ if (event == XMLStreamConstants.START_ELEMENT) [ CD ]
Line_11 $$ int indent = 0-->Line_22 $$ if (indent == 2) [ FD ]
Line_20 $$ if (event == XMLStreamConstants.START_ELEMENT) -->Line_22 $$ if (indent == 2) [ CD ]
Line_20 $$ if (event == XMLStreamConstants.START_ELEMENT) -->Line_21 $$ indent++[ CD ]
Line_9 $$ XMLStreamReader parser = inputFactory.createXMLStreamReader(is)-->Line_15 $$ int event = parser.next()[ FD ]
Line_15 $$ int event = parser.next()-->Line_32 $$ if (event == XMLStreamConstants.END_ELEMENT) [ FD ]
Line_6 $$ is = facesConfig.openStream()-->Line_50 $$ if (is != null) [ FD ]
Line_9 $$ XMLStreamReader parser = inputFactory.createXMLStreamReader(is)-->Line_27 $$ if (parser.getLocalName().equals(MANAGED_BEAN_CLASS)) [ FD ]
Line_38 $$ if (className != null) -->Line_40 $$ className = null[ CD ]
Line_20 $$ if (event == XMLStreamConstants.START_ELEMENT) -->Line_32 $$ if (event == XMLStreamConstants.END_ELEMENT) [ CD ]
Line_11 $$ int indent = 0-->Line_33 $$ indent--[ FD ]
Line_16 $$ if (event == XMLStreamConstants.END_DOCUMENT) -->Line_17 $$ parser.close()[ CD ]
Line_9 $$ XMLStreamReader parser = inputFactory.createXMLStreamReader(is)-->Line_23 $$ if (parser.getLocalName().equals(MANAGED_BEAN)) [ FD ]
Line_34 $$ managedBeanClass = false-->Line_42 $$ if (managedBeanClass && event == XMLStreamConstants.CHARACTERS) [ FD ]
Line_24 $$ managedBean = true-->Line_26 $$ if (indent == 3 && managedBean) [ FD ]
Line_32 $$ if (event == XMLStreamConstants.END_ELEMENT) -->Line_42 $$ if (managedBeanClass && event == XMLStreamConstants.CHARACTERS) [ CD ]
Line_22 $$ if (indent == 2) -->Line_23 $$ if (parser.getLocalName().equals(MANAGED_BEAN)) [ CD ]
Line_42 $$ if (managedBeanClass && event == XMLStreamConstants.CHARACTERS) -->Line_43 $$ className.append(parser.getText())[ CD ]
Line_32 $$ if (event == XMLStreamConstants.END_ELEMENT) -->Line_35 $$ if (indent == 1) [ CD ]
Line_50 $$ if (is != null) -->Line_51 $$ is.close()[ CD ]
Line_10 $$ StringBuilder className = null-->Line_40 $$ className = null[ FD ]
Line_15 $$ int event = parser.next()-->Line_20 $$ if (event == XMLStreamConstants.START_ELEMENT) [ FD ]
Line_29 $$ className = new StringBuilder()-->Line_39 $$ managedBeanClasses.add(className.toString().trim())[ FD ]
Line_7 $$ final XMLInputFactory inputFactory = XMLInputFactory.newInstance()-->Line_9 $$ XMLStreamReader parser = inputFactory.createXMLStreamReader(is)[ FD ]
Line_2 $$ private void processXmlManagedBeans(final DeploymentUnit deploymentUnit, final Set<String> managedBeanClasses) -->Line_39 $$ managedBeanClasses.add(className.toString().trim())[ FD ]
Line_13 $$ boolean managedBeanClass = false-->Line_28 $$ managedBeanClass = true[ FD ]
Line_23 $$ if (parser.getLocalName().equals(MANAGED_BEAN)) -->Line_24 $$ managedBean = true[ CD ]
Line_12 $$ boolean managedBean = false-->Line_36 $$ managedBean = false[ FD ]
Line_4 $$ InputStream is = null-->Line_6 $$ is = facesConfig.openStream()[ FD ]
Line_4 $$ InputStream is = null-->Line_9 $$ XMLStreamReader parser = inputFactory.createXMLStreamReader(is)[ FD ]
Line_24 $$ managedBean = true-->Line_36 $$ managedBean = false[ FD ]
Line_40 $$ className = null-->Line_38 $$ if (className != null) [ FD ]
Line_10 $$ StringBuilder className = null-->Line_38 $$ if (className != null) [ FD ]
Line_13 $$ boolean managedBeanClass = false-->Line_42 $$ if (managedBeanClass && event == XMLStreamConstants.CHARACTERS) [ FD ]
Line_3 $$ for (final VirtualFile facesConfig : getConfigurationFiles(deploymentUnit)) -->Line_6 $$ is = facesConfig.openStream()[ FD ]
Line_40 $$ className = null-->Line_39 $$ managedBeanClasses.add(className.toString().trim())[ FD ]
Line_12 $$ boolean managedBean = false-->Line_26 $$ if (indent == 3 && managedBean) [ FD ]
Line_9 $$ XMLStreamReader parser = inputFactory.createXMLStreamReader(is)-->Line_17 $$ parser.close()[ FD ]
Line_29 $$ className = new StringBuilder()-->Line_40 $$ className = null[ FD ]
Line_10 $$ StringBuilder className = null-->Line_29 $$ className = new StringBuilder()[ FD ]
Line_26 $$ if (indent == 3 && managedBean) -->Line_27 $$ if (parser.getLocalName().equals(MANAGED_BEAN_CLASS)) [ CD ]
Line_35 $$ if (indent == 1) -->Line_36 $$ managedBean = false[ CD ]
Line_29 $$ className = new StringBuilder()-->Line_38 $$ if (className != null) [ FD ]
Line_38 $$ if (className != null) -->Line_39 $$ managedBeanClasses.add(className.toString().trim())[ CD ]
Line_40 $$ className = null-->Line_43 $$ className.append(parser.getText())[ FD ]
Line_7 $$ final XMLInputFactory inputFactory = XMLInputFactory.newInstance()-->Line_8 $$ inputFactory.setXMLResolver(NoopXMLResolver.create())[ FD ]
Line_32 $$ if (event == XMLStreamConstants.END_ELEMENT) -->Line_34 $$ managedBeanClass = false[ CD ]
Line_14 $$ while (true) -->Line_15 $$ int event = parser.next()[ CD ]
Line_12 $$ boolean managedBean = false-->Line_24 $$ managedBean = true[ FD ]
Line_10 $$ StringBuilder className = null-->Line_39 $$ managedBeanClasses.add(className.toString().trim())[ FD ]
Line_13 $$ boolean managedBeanClass = false-->Line_34 $$ managedBeanClass = false[ FD ]
Line_6 $$ is = facesConfig.openStream()-->Line_9 $$ XMLStreamReader parser = inputFactory.createXMLStreamReader(is)[ FD ]
Line_28 $$ managedBeanClass = true-->Line_42 $$ if (managedBeanClass && event == XMLStreamConstants.CHARACTERS) [ FD ]
Line_9 $$ XMLStreamReader parser = inputFactory.createXMLStreamReader(is)-->Line_43 $$ className.append(parser.getText())[ FD ]
Line_4 $$ InputStream is = null-->Line_50 $$ if (is != null) [ FD ]
Line_2 $$ private void processXmlManagedBeans(final DeploymentUnit deploymentUnit, final Set<String> managedBeanClasses) -->Line_3 $$ for (final VirtualFile facesConfig : getConfigurationFiles(deploymentUnit)) [ FD ]
Line_29 $$ className = new StringBuilder()-->Line_43 $$ className.append(parser.getText())[ FD ]
Line_11 $$ int indent = 0-->Line_35 $$ if (indent == 1) [ FD ]
Line_32 $$ if (event == XMLStreamConstants.END_ELEMENT) -->Line_33 $$ indent--[ CD ]
Line_15 $$ int event = parser.next()-->Line_16 $$ if (event == XMLStreamConstants.END_DOCUMENT) [ FD ]
Line_14 $$ while (true) -->Line_16 $$ if (event == XMLStreamConstants.END_DOCUMENT) [ CD ]
