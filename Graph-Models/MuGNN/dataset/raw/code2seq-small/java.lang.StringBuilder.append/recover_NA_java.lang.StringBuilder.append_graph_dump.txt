Line_3 $$ ApplicationState appState = state.getApplicationState().get(getAppAttemptId().getApplicationId())-->Line_4 $$ ApplicationAttemptState attemptState = appState.getAttempt(getAppAttemptId())[ FD ]
Line_2 $$ public void recover(RMState state) throws Exception -->Line_3 $$ ApplicationState appState = state.getApplicationState().get(getAppAttemptId().getApplicationId())[ FD ]
Line_4 $$ ApplicationAttemptState attemptState = appState.getAttempt(getAppAttemptId())-->Line_8 $$ diagnostics.append(attemptState.getDiagnostics())[ FD ]
Line_2 $$ public void recover(RMState state) throws Exception -->Line_19 $$ this.startTime = attemptState.getStartTime()[ CD ]
Line_4 $$ ApplicationAttemptState attemptState = appState.getAttempt(getAppAttemptId())-->Line_19 $$ this.startTime = attemptState.getStartTime()[ FD ]
Line_2 $$ public void recover(RMState state) throws Exception -->Line_18 $$ this.finalStatus = attemptState.getFinalApplicationStatus()[ CD ]
Line_2 $$ public void recover(RMState state) throws Exception -->Line_17 $$ this.proxiedTrackingUrl = generateProxyUriWithScheme(originalTrackingUrl)[ CD ]
Line_2 $$ public void recover(RMState state) throws Exception -->Line_13 $$ setMasterContainer(attemptState.getMasterContainer())[ CD ]
Line_2 $$ public void recover(RMState state) throws Exception -->Line_16 $$ this.originalTrackingUrl = attemptState.getFinalTrackingUrl()[ CD ]
Line_2 $$ public void recover(RMState state) throws Exception -->Line_7 $$ diagnostics.append("Attempt recovered after RM restart")[ CD ]
Line_2 $$ public void recover(RMState state) throws Exception -->Line_3 $$ ApplicationState appState = state.getApplicationState().get(getAppAttemptId().getApplicationId())[ CD ]
Line_4 $$ ApplicationAttemptState attemptState = appState.getAttempt(getAppAttemptId())-->Line_13 $$ setMasterContainer(attemptState.getMasterContainer())[ FD ]
Line_4 $$ ApplicationAttemptState attemptState = appState.getAttempt(getAppAttemptId())-->Line_9 $$ this.amContainerExitStatus = attemptState.getAMContainerExitStatus()[ FD ]
Line_4 $$ ApplicationAttemptState attemptState = appState.getAttempt(getAppAttemptId())-->Line_16 $$ this.originalTrackingUrl = attemptState.getFinalTrackingUrl()[ FD ]
Line_2 $$ public void recover(RMState state) throws Exception -->Line_14 $$ recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials(), attemptState.getState())[ CD ]
Line_4 $$ ApplicationAttemptState attemptState = appState.getAttempt(getAppAttemptId())-->Line_14 $$ recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials(), attemptState.getState())[ FD ]
Line_4 $$ ApplicationAttemptState attemptState = appState.getAttempt(getAppAttemptId())-->Line_15 $$ this.recoveredFinalState = attemptState.getState()[ FD ]
Line_4 $$ ApplicationAttemptState attemptState = appState.getAttempt(getAppAttemptId())-->Line_6 $$ LOG.info("Recovering attempt: " + getAppAttemptId() + " with final state: " + attemptState.getState())[ FD ]
Line_10 $$ if (amContainerExitStatus == ContainerExitStatus.PREEMPTED) -->Line_11 $$ this.attemptMetrics.setIsPreempted()[ CD ]
Line_2 $$ public void recover(RMState state) throws Exception -->Line_10 $$ if (amContainerExitStatus == ContainerExitStatus.PREEMPTED) [ CD ]
Line_2 $$ public void recover(RMState state) throws Exception -->Line_9 $$ this.amContainerExitStatus = attemptState.getAMContainerExitStatus()[ CD ]
Line_2 $$ public void recover(RMState state) throws Exception -->Line_8 $$ diagnostics.append(attemptState.getDiagnostics())[ CD ]
Line_2 $$ public void recover(RMState state) throws Exception -->Line_4 $$ ApplicationAttemptState attemptState = appState.getAttempt(getAppAttemptId())[ CD ]
Line_2 $$ public void recover(RMState state) throws Exception -->Line_15 $$ this.recoveredFinalState = attemptState.getState()[ CD ]
Line_4 $$ ApplicationAttemptState attemptState = appState.getAttempt(getAppAttemptId())-->Line_18 $$ this.finalStatus = attemptState.getFinalApplicationStatus()[ FD ]
Line_2 $$ public void recover(RMState state) throws Exception -->Line_6 $$ LOG.info("Recovering attempt: " + getAppAttemptId() + " with final state: " + attemptState.getState())[ CD ]
