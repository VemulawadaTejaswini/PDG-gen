Line_2 $$ protected final void processLine(char[] buffer, StringBuilder line, int n) -->Line_6 $$ line.setCharAt(line.length() - 1, '\n')[ FD ]
Line_3 $$ for (int i = 0; i < n; i++) -->Line_4 $$ char c = buffer[i][ CD ]
Line_2 $$ protected final void processLine(char[] buffer, StringBuilder line, int n) -->Line_3 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ protected final void processLine(char[] buffer, StringBuilder line, int n) -->Line_5 $$ if (c == '\n' && line.length() > 0 && line.charAt(line.length() - 1) == '\r') [ FD ]
Line_4 $$ char c = buffer[i]-->Line_8 $$ line.append(c)[ FD ]
Line_4 $$ char c = buffer[i]-->Line_10 $$ if (c == '\n') [ FD ]
Line_5 $$ if (c == '\n' && line.length() > 0 && line.charAt(line.length() - 1) == '\r') -->Line_6 $$ line.setCharAt(line.length() - 1, '\n')[ CD ]
Line_5 $$ if (c == '\n' && line.length() > 0 && line.charAt(line.length() - 1) == '\r') -->Line_8 $$ line.append(c)[ CD ]
Line_10 $$ if (c == '\n') -->Line_11 $$ sendLine(line)[ CD ]
Line_2 $$ protected final void processLine(char[] buffer, StringBuilder line, int n) -->Line_3 $$ for (int i = 0; i < n; i++) [ FD ]
Line_2 $$ protected final void processLine(char[] buffer, StringBuilder line, int n) -->Line_11 $$ sendLine(line)[ FD ]
Line_2 $$ protected final void processLine(char[] buffer, StringBuilder line, int n) -->Line_8 $$ line.append(c)[ FD ]
Line_3 $$ for (int i = 0; i < n; i++) -->Line_5 $$ if (c == '\n' && line.length() > 0 && line.charAt(line.length() - 1) == '\r') [ CD ]
Line_3 $$ for (int i = 0; i < n; i++) -->Line_10 $$ if (c == '\n') [ CD ]
