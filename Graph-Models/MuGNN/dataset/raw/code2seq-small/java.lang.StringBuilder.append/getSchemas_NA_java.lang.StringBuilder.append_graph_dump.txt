Line_3 $$ StringBuilder query = new StringBuilder("" + "SELECT TABLE_SCHEM, TABLE_CATALOG\n" + "FROM system.jdbc.schemas")-->Line_9 $$ return select(query.toString())[ FD ]
Line_2 $$ public ResultSet getSchemas(String catalog, String schemaPattern) throws SQLException -->Line_5 $$ emptyStringEqualsFilter(filters, "TABLE_CATALOG", catalog)[ FD ]
Line_4 $$ List<String> filters = new ArrayList()-->Line_5 $$ emptyStringEqualsFilter(filters, "TABLE_CATALOG", catalog)[ FD ]
Line_2 $$ public ResultSet getSchemas(String catalog, String schemaPattern) throws SQLException -->Line_8 $$ query.append("\nORDER BY TABLE_CATALOG, TABLE_SCHEM")[ CD ]
Line_3 $$ StringBuilder query = new StringBuilder("" + "SELECT TABLE_SCHEM, TABLE_CATALOG\n" + "FROM system.jdbc.schemas")-->Line_8 $$ query.append("\nORDER BY TABLE_CATALOG, TABLE_SCHEM")[ FD ]
Line_2 $$ public ResultSet getSchemas(String catalog, String schemaPattern) throws SQLException -->Line_9 $$ return select(query.toString())[ CD ]
Line_2 $$ public ResultSet getSchemas(String catalog, String schemaPattern) throws SQLException -->Line_7 $$ buildFilters(query, filters)[ CD ]
Line_2 $$ public ResultSet getSchemas(String catalog, String schemaPattern) throws SQLException -->Line_3 $$ StringBuilder query = new StringBuilder("" + "SELECT TABLE_SCHEM, TABLE_CATALOG\n" + "FROM system.jdbc.schemas")[ CD ]
Line_2 $$ public ResultSet getSchemas(String catalog, String schemaPattern) throws SQLException -->Line_6 $$ optionalStringLikeFilter(filters, "TABLE_SCHEM", schemaPattern)[ FD ]
Line_3 $$ StringBuilder query = new StringBuilder("" + "SELECT TABLE_SCHEM, TABLE_CATALOG\n" + "FROM system.jdbc.schemas")-->Line_7 $$ buildFilters(query, filters)[ FD ]
Line_2 $$ public ResultSet getSchemas(String catalog, String schemaPattern) throws SQLException -->Line_6 $$ optionalStringLikeFilter(filters, "TABLE_SCHEM", schemaPattern)[ CD ]
Line_4 $$ List<String> filters = new ArrayList()-->Line_6 $$ optionalStringLikeFilter(filters, "TABLE_SCHEM", schemaPattern)[ FD ]
Line_2 $$ public ResultSet getSchemas(String catalog, String schemaPattern) throws SQLException -->Line_5 $$ emptyStringEqualsFilter(filters, "TABLE_CATALOG", catalog)[ CD ]
Line_4 $$ List<String> filters = new ArrayList()-->Line_7 $$ buildFilters(query, filters)[ FD ]
Line_2 $$ public ResultSet getSchemas(String catalog, String schemaPattern) throws SQLException -->Line_4 $$ List<String> filters = new ArrayList()[ CD ]
