Line_25 $$ if (caller != null) -->Line_34 $$ builder.append('.')[ CD ]
Line_20 $$ final PsiClass containingClass = method.getContainingClass()-->Line_21 $$ if (containingClass != null && !PsiTreeUtil.isAncestor(containingClass, context, true)) [ FD ]
Line_2 $$ public void invokeMethodOn(@NotNull PsiMethod method, @Nullable GrExpression caller, @NotNull GrExpression[] exprs, @NotNull GrNamedArgument[] namedArgs, @NotNull GrClosableBlock[] closures, @NotNull PsiSubstitutor substitutor, @NotNull GroovyPsiElement context) -->Line_20 $$ final PsiClass containingClass = method.getContainingClass()[ FD ]
Line_2 $$ public void invokeMethodOn(@NotNull PsiMethod method, @Nullable GrExpression caller, @NotNull GrExpression[] exprs, @NotNull GrNamedArgument[] namedArgs, @NotNull GrClosableBlock[] closures, @NotNull PsiSubstitutor substitutor, @NotNull GroovyPsiElement context) -->Line_25 $$ if (caller != null) [ FD ]
Line_2 $$ public void invokeMethodOn(@NotNull PsiMethod method, @Nullable GrExpression caller, @NotNull GrExpression[] exprs, @NotNull GrNamedArgument[] namedArgs, @NotNull GrClosableBlock[] closures, @NotNull PsiSubstitutor substitutor, @NotNull GroovyPsiElement context) -->Line_28 $$ writeCastForMethod(caller, method, context)[ FD ]
Line_19 $$ if (method.hasModifierProperty(PsiModifier.STATIC) && caller == null) -->Line_25 $$ if (caller != null) [ CD ]
Line_2 $$ public void invokeMethodOn(@NotNull PsiMethod method, @Nullable GrExpression caller, @NotNull GrExpression[] exprs, @NotNull GrNamedArgument[] namedArgs, @NotNull GrClosableBlock[] closures, @NotNull PsiSubstitutor substitutor, @NotNull GroovyPsiElement context) -->Line_4 $$ if (CustomMethodInvocator.invokeMethodOn(this, (GrGdkMethod) method, caller, exprs, namedArgs, closures, substitutor, context))[ FD ]
Line_3 $$ if (method instanceof GrGdkMethod) -->Line_8 $$ if (method.hasModifierProperty(PsiModifier.STATIC)) [ CD ]
Line_2 $$ public void invokeMethodOn(@NotNull PsiMethod method, @Nullable GrExpression caller, @NotNull GrExpression[] exprs, @NotNull GrNamedArgument[] namedArgs, @NotNull GrClosableBlock[] closures, @NotNull PsiSubstitutor substitutor, @NotNull GroovyPsiElement context) -->Line_3 $$ if (method instanceof GrGdkMethod) [ FD ]
Line_3 $$ if (method instanceof GrGdkMethod) -->Line_7 $$ System.arraycopy(exprs, 0, newArgs, 1, exprs.length)[ CD ]
Line_2 $$ public void invokeMethodOn(@NotNull PsiMethod method, @Nullable GrExpression caller, @NotNull GrExpression[] exprs, @NotNull GrNamedArgument[] namedArgs, @NotNull GrClosableBlock[] closures, @NotNull PsiSubstitutor substitutor, @NotNull GroovyPsiElement context) -->Line_11 $$ if (caller == null) [ FD ]
Line_11 $$ if (caller == null) -->Line_12 $$ caller = factory.createExpressionFromText("this", context)[ CD ]
Line_19 $$ if (method.hasModifierProperty(PsiModifier.STATIC) && caller == null) -->Line_20 $$ final PsiClass containingClass = method.getContainingClass()[ CD ]
Line_2 $$ public void invokeMethodOn(@NotNull PsiMethod method, @Nullable GrExpression caller, @NotNull GrExpression[] exprs, @NotNull GrNamedArgument[] namedArgs, @NotNull GrClosableBlock[] closures, @NotNull PsiSubstitutor substitutor, @NotNull GroovyPsiElement context) -->Line_26 $$ final boolean castNeeded = GenerationUtil.isCastNeeded(caller, method, this.context)[ FD ]
Line_31 $$ if (castNeeded) -->Line_32 $$ builder.append(')')[ CD ]
Line_2 $$ public void invokeMethodOn(@NotNull PsiMethod method, @Nullable GrExpression caller, @NotNull GrExpression[] exprs, @NotNull GrNamedArgument[] namedArgs, @NotNull GrClosableBlock[] closures, @NotNull PsiSubstitutor substitutor, @NotNull GroovyPsiElement context) -->Line_38 $$ final GrClosureSignature signature = GrClosureSignatureUtil.createSignature(method, substitutor)[ FD ]
Line_21 $$ if (containingClass != null && !PsiTreeUtil.isAncestor(containingClass, context, true)) -->Line_22 $$ builder.append(containingClass.getQualifiedName()).append('.')[ CD ]
Line_3 $$ if (method instanceof GrGdkMethod) -->Line_16 $$ invokeMethodOn(((GrGdkMethod) method).getStaticMethod(), null, newArgs, namedArgs, closures, substitutor, context)[ CD ]
Line_2 $$ public void invokeMethodOn(@NotNull PsiMethod method, @Nullable GrExpression caller, @NotNull GrExpression[] exprs, @NotNull GrNamedArgument[] namedArgs, @NotNull GrClosableBlock[] closures, @NotNull PsiSubstitutor substitutor, @NotNull GroovyPsiElement context) -->Line_7 $$ System.arraycopy(exprs, 0, newArgs, 1, exprs.length)[ FD ]
Line_3 $$ if (method instanceof GrGdkMethod) -->Line_6 $$ GrExpression[] newArgs = new GrExpression[exprs.length + 1][ CD ]
Line_6 $$ GrExpression[] newArgs = new GrExpression[exprs.length + 1]-->Line_16 $$ invokeMethodOn(((GrGdkMethod) method).getStaticMethod(), null, newArgs, namedArgs, closures, substitutor, context)[ FD ]
Line_25 $$ if (caller != null) -->Line_30 $$ caller.accept(this)[ CD ]
Line_38 $$ final GrClosureSignature signature = GrClosureSignatureUtil.createSignature(method, substitutor)-->Line_39 $$ new ArgumentListGenerator(builder, this.context).generate(signature, exprs, namedArgs, closures, context)[ FD ]
Line_25 $$ if (caller != null) -->Line_27 $$ if (castNeeded) [ CD ]
Line_2 $$ public void invokeMethodOn(@NotNull PsiMethod method, @Nullable GrExpression caller, @NotNull GrExpression[] exprs, @NotNull GrNamedArgument[] namedArgs, @NotNull GrClosableBlock[] closures, @NotNull PsiSubstitutor substitutor, @NotNull GroovyPsiElement context) -->Line_39 $$ new ArgumentListGenerator(builder, this.context).generate(signature, exprs, namedArgs, closures, context)[ CD ]
Line_19 $$ if (method.hasModifierProperty(PsiModifier.STATIC) && caller == null) -->Line_21 $$ if (containingClass != null && !PsiTreeUtil.isAncestor(containingClass, context, true)) [ CD ]
Line_2 $$ public void invokeMethodOn(@NotNull PsiMethod method, @Nullable GrExpression caller, @NotNull GrExpression[] exprs, @NotNull GrNamedArgument[] namedArgs, @NotNull GrClosableBlock[] closures, @NotNull PsiSubstitutor substitutor, @NotNull GroovyPsiElement context) -->Line_39 $$ new ArgumentListGenerator(builder, this.context).generate(signature, exprs, namedArgs, closures, context)[ FD ]
Line_25 $$ if (caller != null) -->Line_31 $$ if (castNeeded) [ CD ]
Line_2 $$ public void invokeMethodOn(@NotNull PsiMethod method, @Nullable GrExpression caller, @NotNull GrExpression[] exprs, @NotNull GrNamedArgument[] namedArgs, @NotNull GrClosableBlock[] closures, @NotNull PsiSubstitutor substitutor, @NotNull GroovyPsiElement context) -->Line_8 $$ if (method.hasModifierProperty(PsiModifier.STATIC)) [ FD ]
Line_2 $$ public void invokeMethodOn(@NotNull PsiMethod method, @Nullable GrExpression caller, @NotNull GrExpression[] exprs, @NotNull GrNamedArgument[] namedArgs, @NotNull GrClosableBlock[] closures, @NotNull PsiSubstitutor substitutor, @NotNull GroovyPsiElement context) -->Line_19 $$ if (method.hasModifierProperty(PsiModifier.STATIC) && caller == null) [ FD ]
Line_8 $$ if (method.hasModifierProperty(PsiModifier.STATIC)) -->Line_11 $$ if (caller == null) [ CD ]
Line_2 $$ public void invokeMethodOn(@NotNull PsiMethod method, @Nullable GrExpression caller, @NotNull GrExpression[] exprs, @NotNull GrNamedArgument[] namedArgs, @NotNull GrClosableBlock[] closures, @NotNull PsiSubstitutor substitutor, @NotNull GroovyPsiElement context) -->Line_19 $$ if (method.hasModifierProperty(PsiModifier.STATIC) && caller == null) [ CD ]
Line_2 $$ public void invokeMethodOn(@NotNull PsiMethod method, @Nullable GrExpression caller, @NotNull GrExpression[] exprs, @NotNull GrNamedArgument[] namedArgs, @NotNull GrClosableBlock[] closures, @NotNull PsiSubstitutor substitutor, @NotNull GroovyPsiElement context) -->Line_37 $$ builder.append(method.getName())[ CD ]
Line_20 $$ final PsiClass containingClass = method.getContainingClass()-->Line_22 $$ builder.append(containingClass.getQualifiedName()).append('.')[ FD ]
Line_2 $$ public void invokeMethodOn(@NotNull PsiMethod method, @Nullable GrExpression caller, @NotNull GrExpression[] exprs, @NotNull GrNamedArgument[] namedArgs, @NotNull GrClosableBlock[] closures, @NotNull PsiSubstitutor substitutor, @NotNull GroovyPsiElement context) -->Line_12 $$ caller = factory.createExpressionFromText("this", context)[ FD ]
Line_27 $$ if (castNeeded) -->Line_28 $$ writeCastForMethod(caller, method, context)[ CD ]
Line_2 $$ public void invokeMethodOn(@NotNull PsiMethod method, @Nullable GrExpression caller, @NotNull GrExpression[] exprs, @NotNull GrNamedArgument[] namedArgs, @NotNull GrClosableBlock[] closures, @NotNull PsiSubstitutor substitutor, @NotNull GroovyPsiElement context) -->Line_21 $$ if (containingClass != null && !PsiTreeUtil.isAncestor(containingClass, context, true)) [ FD ]
Line_2 $$ public void invokeMethodOn(@NotNull PsiMethod method, @Nullable GrExpression caller, @NotNull GrExpression[] exprs, @NotNull GrNamedArgument[] namedArgs, @NotNull GrClosableBlock[] closures, @NotNull PsiSubstitutor substitutor, @NotNull GroovyPsiElement context) -->Line_16 $$ invokeMethodOn(((GrGdkMethod) method).getStaticMethod(), null, newArgs, namedArgs, closures, substitutor, context)[ FD ]
Line_25 $$ if (caller != null) -->Line_26 $$ final boolean castNeeded = GenerationUtil.isCastNeeded(caller, method, this.context)[ CD ]
Line_8 $$ if (method.hasModifierProperty(PsiModifier.STATIC)) -->Line_9 $$ newArgs[0] = factory.createExpressionFromText("null")[ CD ]
Line_3 $$ if (method instanceof GrGdkMethod) -->Line_17 $$ return[ CD ]
Line_6 $$ GrExpression[] newArgs = new GrExpression[exprs.length + 1]-->Line_7 $$ System.arraycopy(exprs, 0, newArgs, 1, exprs.length)[ FD ]
Line_2 $$ public void invokeMethodOn(@NotNull PsiMethod method, @Nullable GrExpression caller, @NotNull GrExpression[] exprs, @NotNull GrNamedArgument[] namedArgs, @NotNull GrClosableBlock[] closures, @NotNull PsiSubstitutor substitutor, @NotNull GroovyPsiElement context) -->Line_3 $$ if (method instanceof GrGdkMethod) [ CD ]
Line_3 $$ if (method instanceof GrGdkMethod) -->Line_4 $$ if (CustomMethodInvocator.invokeMethodOn(this, (GrGdkMethod) method, caller, exprs, namedArgs, closures, substitutor, context))[ CD ]
Line_2 $$ public void invokeMethodOn(@NotNull PsiMethod method, @Nullable GrExpression caller, @NotNull GrExpression[] exprs, @NotNull GrNamedArgument[] namedArgs, @NotNull GrClosableBlock[] closures, @NotNull PsiSubstitutor substitutor, @NotNull GroovyPsiElement context) -->Line_37 $$ builder.append(method.getName())[ FD ]
Line_2 $$ public void invokeMethodOn(@NotNull PsiMethod method, @Nullable GrExpression caller, @NotNull GrExpression[] exprs, @NotNull GrNamedArgument[] namedArgs, @NotNull GrClosableBlock[] closures, @NotNull PsiSubstitutor substitutor, @NotNull GroovyPsiElement context) -->Line_30 $$ caller.accept(this)[ FD ]
Line_4 $$ if (CustomMethodInvocator.invokeMethodOn(this, (GrGdkMethod) method, caller, exprs, namedArgs, closures, substitutor, context))-->Line_5 $$ return[ CD ]
Line_2 $$ public void invokeMethodOn(@NotNull PsiMethod method, @Nullable GrExpression caller, @NotNull GrExpression[] exprs, @NotNull GrNamedArgument[] namedArgs, @NotNull GrClosableBlock[] closures, @NotNull PsiSubstitutor substitutor, @NotNull GroovyPsiElement context) -->Line_38 $$ final GrClosureSignature signature = GrClosureSignatureUtil.createSignature(method, substitutor)[ CD ]
