Line_4 $$ if (tipText == null) -->Line_16 $$ if (!tipText.isEmpty()) [ CD ]
Line_11 $$ StringBuilder tipBuilder = new StringBuilder()-->Line_29 $$ tooltip.setTipText(UIUtil.toHtml(tipBuilder.toString(), 0))[ FD ]
Line_3 $$ final JToolTip tooltip = new JToolTip()-->Line_31 $$ tooltip.setBorder(null)[ FD ]
Line_2 $$ private JComponent createTipContent(String tipText, DebuggerTreeNodeImpl node) -->Line_12 $$ final String markupText = node.getMarkupTooltipText()[ FD ]
Line_19 $$ final String each = tokenizer.nextElement()-->Line_22 $$ if (" ".equals(each)) [ FD ]
Line_2 $$ private JComponent createTipContent(String tipText, DebuggerTreeNodeImpl node) -->Line_4 $$ if (tipText == null) [ FD ]
Line_2 $$ private JComponent createTipContent(String tipText, DebuggerTreeNodeImpl node) -->Line_16 $$ if (!tipText.isEmpty()) [ FD ]
Line_4 $$ if (tipText == null) -->Line_5 $$ tooltip.setTipText(tipText)[ CD ]
Line_22 $$ if (" ".equals(each)) -->Line_25 $$ tipBuilder.append(JDOMUtil.legalizeText(each))[ CD ]
Line_22 $$ if (" ".equals(each)) -->Line_23 $$ tipBuilder.append("&nbsp ")[ CD ]
Line_4 $$ if (tipText == null) -->Line_12 $$ final String markupText = node.getMarkupTooltipText()[ CD ]
Line_20 $$ if ("\n".equals(each)) -->Line_21 $$ tipBuilder.append("<br>")[ CD ]
Line_11 $$ StringBuilder tipBuilder = new StringBuilder()-->Line_23 $$ tipBuilder.append("&nbsp ")[ FD ]
Line_3 $$ final JToolTip tooltip = new JToolTip()-->Line_8 $$ Insets borderInsets = tooltip.getBorder().getBorderInsets(tooltip)[ FD ]
Line_16 $$ if (!tipText.isEmpty()) -->Line_17 $$ final StringTokenizer tokenizer = new StringTokenizer(tipText, "\n ", true)[ CD ]
Line_17 $$ final StringTokenizer tokenizer = new StringTokenizer(tipText, "\n ", true)-->Line_19 $$ final String each = tokenizer.nextElement()[ FD ]
Line_11 $$ StringBuilder tipBuilder = new StringBuilder()-->Line_25 $$ tipBuilder.append(JDOMUtil.legalizeText(each))[ FD ]
Line_2 $$ private JComponent createTipContent(String tipText, DebuggerTreeNodeImpl node) -->Line_4 $$ if (tipText == null) [ CD ]
Line_12 $$ final String markupText = node.getMarkupTooltipText()-->Line_13 $$ if (markupText != null) [ FD ]
Line_4 $$ if (tipText == null) -->Line_29 $$ tooltip.setTipText(UIUtil.toHtml(tipBuilder.toString(), 0))[ CD ]
Line_2 $$ private JComponent createTipContent(String tipText, DebuggerTreeNodeImpl node) -->Line_3 $$ final JToolTip tooltip = new JToolTip()[ CD ]
Line_12 $$ final String markupText = node.getMarkupTooltipText()-->Line_14 $$ tipBuilder.append(markupText)[ FD ]
Line_2 $$ private JComponent createTipContent(String tipText, DebuggerTreeNodeImpl node) -->Line_31 $$ tooltip.setBorder(null)[ CD ]
Line_4 $$ if (tipText == null) -->Line_8 $$ Insets borderInsets = tooltip.getBorder().getBorderInsets(tooltip)[ CD ]
Line_11 $$ StringBuilder tipBuilder = new StringBuilder()-->Line_21 $$ tipBuilder.append("<br>")[ FD ]
Line_3 $$ final JToolTip tooltip = new JToolTip()-->Line_5 $$ tooltip.setTipText(tipText)[ FD ]
Line_4 $$ if (tipText == null) -->Line_7 $$ Dimension rootSize = getVisibleRect().getSize()[ CD ]
Line_19 $$ final String each = tokenizer.nextElement()-->Line_20 $$ if ("\n".equals(each)) [ FD ]
Line_2 $$ private JComponent createTipContent(String tipText, DebuggerTreeNodeImpl node) -->Line_5 $$ tooltip.setTipText(tipText)[ FD ]
Line_19 $$ final String each = tokenizer.nextElement()-->Line_25 $$ tipBuilder.append(JDOMUtil.legalizeText(each))[ FD ]
Line_2 $$ private JComponent createTipContent(String tipText, DebuggerTreeNodeImpl node) -->Line_32 $$ return tooltip[ CD ]
Line_4 $$ if (tipText == null) -->Line_13 $$ if (markupText != null) [ CD ]
Line_4 $$ if (tipText == null) -->Line_10 $$ rootSize.height -= (borderInsets.top + borderInsets.bottom) * 2[ CD ]
Line_3 $$ final JToolTip tooltip = new JToolTip()-->Line_29 $$ tooltip.setTipText(UIUtil.toHtml(tipBuilder.toString(), 0))[ FD ]
Line_18 $$ while (tokenizer.hasMoreElements()) -->Line_19 $$ final String each = tokenizer.nextElement()[ CD ]
Line_13 $$ if (markupText != null) -->Line_14 $$ tipBuilder.append(markupText)[ CD ]
Line_11 $$ StringBuilder tipBuilder = new StringBuilder()-->Line_14 $$ tipBuilder.append(markupText)[ FD ]
Line_16 $$ if (!tipText.isEmpty()) -->Line_18 $$ while (tokenizer.hasMoreElements()) [ CD ]
Line_17 $$ final StringTokenizer tokenizer = new StringTokenizer(tipText, "\n ", true)-->Line_18 $$ while (tokenizer.hasMoreElements()) [ FD ]
Line_20 $$ if ("\n".equals(each)) -->Line_22 $$ if (" ".equals(each)) [ CD ]
Line_18 $$ while (tokenizer.hasMoreElements()) -->Line_20 $$ if ("\n".equals(each)) [ CD ]
Line_4 $$ if (tipText == null) -->Line_11 $$ StringBuilder tipBuilder = new StringBuilder()[ CD ]
Line_4 $$ if (tipText == null) -->Line_9 $$ rootSize.width -= (borderInsets.left + borderInsets.right) * 2[ CD ]
