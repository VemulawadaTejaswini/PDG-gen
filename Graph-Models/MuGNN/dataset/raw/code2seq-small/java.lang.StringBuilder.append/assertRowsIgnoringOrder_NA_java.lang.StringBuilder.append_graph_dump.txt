Line_3 $$ if (result == null) -->Line_4 $$ if (rows.length > 0)[ CD ]
Line_2 $$ public static void assertRowsIgnoringOrder(UntypedResultSet result, Object[]... rows) -->Line_8 $$ List<ColumnSpecification> meta = result.metadata()[ CD ]
Line_22 $$ com.google.common.collect.Sets.SetView<List<ByteBuffer>> extra = com.google.common.collect.Sets.difference(actualRows, expectedRows)-->Line_29 $$ sb.append("Got ").append(extra.size()).append(" extra row(s) ")[ FD ]
Line_23 $$ com.google.common.collect.Sets.SetView<List<ByteBuffer>> missing = com.google.common.collect.Sets.difference(expectedRows, actualRows)-->Line_31 $$ sb.append("and ").append(missing.size()).append(" missing row(s) ")[ FD ]
Line_26 $$ List<String> missingRows = makeRowStrings(missing, meta)-->Line_39 $$ Assert.fail("Missing " + missing.size() + " row(s) in result: \n    " + missingRows.stream().collect(Collectors.joining("\n    ")))[ FD ]
Line_24 $$ if (!extra.isEmpty() || !missing.isEmpty()) -->Line_38 $$ if (!missing.isEmpty())[ CD ]
Line_8 $$ List<ColumnSpecification> meta = result.metadata()-->Line_18 $$ List<ByteBuffer> actualRow = new ArrayList(meta.size())[ FD ]
Line_27 $$ StringBuilder sb = new StringBuilder()-->Line_29 $$ sb.append("Got ").append(extra.size()).append(" extra row(s) ")[ FD ]
Line_8 $$ List<ColumnSpecification> meta = result.metadata()-->Line_19 $$ actualRow.add(actual.getBytes(meta.get(j).name.toString()))[ FD ]
Line_13 $$ for (int j = 0; j < meta.size(); j++) expectedRow.add(makeByteBuffer(expected[j], meta.get(j).type))-->Line_19 $$ actualRow.add(actual.getBytes(meta.get(j).name.toString()))[ FD ]
Line_9 $$ Set<List<ByteBuffer>> expectedRows = new HashSet(rows.length)-->Line_22 $$ com.google.common.collect.Sets.SetView<List<ByteBuffer>> extra = com.google.common.collect.Sets.difference(actualRows, expectedRows)[ FD ]
Line_28 $$ if (!extra.isEmpty()) -->Line_33 $$ sb.append(extraRows.stream().collect(Collectors.joining("\n    ")))[ CD ]
Line_23 $$ com.google.common.collect.Sets.SetView<List<ByteBuffer>> missing = com.google.common.collect.Sets.difference(expectedRows, actualRows)-->Line_24 $$ if (!extra.isEmpty() || !missing.isEmpty()) [ FD ]
Line_12 $$ List<ByteBuffer> expectedRow = new ArrayList(meta.size())-->Line_14 $$ expectedRows.add(expectedRow)[ FD ]
Line_23 $$ com.google.common.collect.Sets.SetView<List<ByteBuffer>> missing = com.google.common.collect.Sets.difference(expectedRows, actualRows)-->Line_26 $$ List<String> missingRows = makeRowStrings(missing, meta)[ FD ]
Line_27 $$ StringBuilder sb = new StringBuilder()-->Line_35 $$ sb.append("\nMissing Rows:\n    ").append(missingRows.stream().collect(Collectors.joining("\n    ")))[ FD ]
Line_23 $$ com.google.common.collect.Sets.SetView<List<ByteBuffer>> missing = com.google.common.collect.Sets.difference(expectedRows, actualRows)-->Line_38 $$ if (!missing.isEmpty())[ FD ]
Line_8 $$ List<ColumnSpecification> meta = result.metadata()-->Line_25 $$ List<String> extraRows = makeRowStrings(extra, meta)[ FD ]
Line_18 $$ List<ByteBuffer> actualRow = new ArrayList(meta.size())-->Line_19 $$ actualRow.add(actual.getBytes(meta.get(j).name.toString()))[ FD ]
Line_28 $$ if (!extra.isEmpty()) -->Line_34 $$ if (!missing.isEmpty())[ CD ]
Line_38 $$ if (!missing.isEmpty())-->Line_39 $$ Assert.fail("Missing " + missing.size() + " row(s) in result: \n    " + missingRows.stream().collect(Collectors.joining("\n    ")))[ CD ]
Line_13 $$ for (int j = 0; j < meta.size(); j++) expectedRow.add(makeByteBuffer(expected[j], meta.get(j).type))-->Line_19 $$ for (int j = 0; j < meta.size(); j++) actualRow.add(actual.getBytes(meta.get(j).name.toString()))[ FD ]
Line_25 $$ List<String> extraRows = makeRowStrings(extra, meta)-->Line_33 $$ sb.append(extraRows.stream().collect(Collectors.joining("\n    ")))[ FD ]
Line_2 $$ public static void assertRowsIgnoringOrder(UntypedResultSet result, Object[]... rows) -->Line_23 $$ com.google.common.collect.Sets.SetView<List<ByteBuffer>> missing = com.google.common.collect.Sets.difference(expectedRows, actualRows)[ CD ]
Line_8 $$ List<ColumnSpecification> meta = result.metadata()-->Line_26 $$ List<String> missingRows = makeRowStrings(missing, meta)[ FD ]
Line_16 $$ Set<List<ByteBuffer>> actualRows = new HashSet(result.size())-->Line_22 $$ com.google.common.collect.Sets.SetView<List<ByteBuffer>> extra = com.google.common.collect.Sets.difference(actualRows, expectedRows)[ FD ]
Line_27 $$ StringBuilder sb = new StringBuilder()-->Line_36 $$ Assert.fail(sb.toString())[ FD ]
Line_23 $$ com.google.common.collect.Sets.SetView<List<ByteBuffer>> missing = com.google.common.collect.Sets.difference(expectedRows, actualRows)-->Line_39 $$ Assert.fail("Missing " + missing.size() + " row(s) in result: \n    " + missingRows.stream().collect(Collectors.joining("\n    ")))[ FD ]
Line_9 $$ Set<List<ByteBuffer>> expectedRows = new HashSet(rows.length)-->Line_41 $$ assert expectedRows.size() == actualRows.size()[ FD ]
Line_16 $$ Set<List<ByteBuffer>> actualRows = new HashSet(result.size())-->Line_41 $$ assert expectedRows.size() == actualRows.size()[ FD ]
Line_2 $$ public static void assertRowsIgnoringOrder(UntypedResultSet result, Object[]... rows) -->Line_22 $$ com.google.common.collect.Sets.SetView<List<ByteBuffer>> extra = com.google.common.collect.Sets.difference(actualRows, expectedRows)[ CD ]
Line_23 $$ com.google.common.collect.Sets.SetView<List<ByteBuffer>> missing = com.google.common.collect.Sets.difference(expectedRows, actualRows)-->Line_30 $$ if (!missing.isEmpty())[ FD ]
Line_27 $$ StringBuilder sb = new StringBuilder()-->Line_32 $$ sb.append("in result.  Extra rows:\n    ")[ FD ]
Line_26 $$ List<String> missingRows = makeRowStrings(missing, meta)-->Line_35 $$ sb.append("\nMissing Rows:\n    ").append(missingRows.stream().collect(Collectors.joining("\n    ")))[ FD ]
Line_2 $$ public static void assertRowsIgnoringOrder(UntypedResultSet result, Object[]... rows) -->Line_24 $$ if (!extra.isEmpty() || !missing.isEmpty()) [ CD ]
Line_22 $$ com.google.common.collect.Sets.SetView<List<ByteBuffer>> extra = com.google.common.collect.Sets.difference(actualRows, expectedRows)-->Line_24 $$ if (!extra.isEmpty() || !missing.isEmpty()) [ FD ]
Line_8 $$ List<ColumnSpecification> meta = result.metadata()-->Line_12 $$ List<ByteBuffer> expectedRow = new ArrayList(meta.size())[ FD ]
Line_24 $$ if (!extra.isEmpty() || !missing.isEmpty()) -->Line_28 $$ if (!extra.isEmpty()) [ CD ]
Line_24 $$ if (!extra.isEmpty() || !missing.isEmpty()) -->Line_26 $$ List<String> missingRows = makeRowStrings(missing, meta)[ CD ]
Line_28 $$ if (!extra.isEmpty()) -->Line_29 $$ sb.append("Got ").append(extra.size()).append(" extra row(s) ")[ CD ]
Line_2 $$ public static void assertRowsIgnoringOrder(UntypedResultSet result, Object[]... rows) -->Line_3 $$ if (result == null) [ FD ]
Line_2 $$ public static void assertRowsIgnoringOrder(UntypedResultSet result, Object[]... rows) -->Line_9 $$ Set<List<ByteBuffer>> expectedRows = new HashSet(rows.length)[ CD ]
Line_3 $$ if (result == null) -->Line_6 $$ return[ CD ]
Line_2 $$ public static void assertRowsIgnoringOrder(UntypedResultSet result, Object[]... rows) -->Line_16 $$ Set<List<ByteBuffer>> actualRows = new HashSet(result.size())[ FD ]
Line_22 $$ com.google.common.collect.Sets.SetView<List<ByteBuffer>> extra = com.google.common.collect.Sets.difference(actualRows, expectedRows)-->Line_25 $$ List<String> extraRows = makeRowStrings(extra, meta)[ FD ]
Line_28 $$ if (!extra.isEmpty()) -->Line_32 $$ sb.append("in result.  Extra rows:\n    ")[ CD ]
Line_24 $$ if (!extra.isEmpty() || !missing.isEmpty()) -->Line_25 $$ List<String> extraRows = makeRowStrings(extra, meta)[ CD ]
Line_2 $$ public static void assertRowsIgnoringOrder(UntypedResultSet result, Object[]... rows) -->Line_8 $$ List<ColumnSpecification> meta = result.metadata()[ FD ]
Line_23 $$ com.google.common.collect.Sets.SetView<List<ByteBuffer>> missing = com.google.common.collect.Sets.difference(expectedRows, actualRows)-->Line_34 $$ if (!missing.isEmpty())[ FD ]
Line_8 $$ List<ColumnSpecification> meta = result.metadata()-->Line_11 $$ Assert.assertEquals("Invalid number of (expected) values provided for row", expected.length, meta.size())[ FD ]
Line_17 $$ for (UntypedResultSet.Row actual : result) -->Line_19 $$ actualRow.add(actual.getBytes(meta.get(j).name.toString()))[ FD ]
Line_16 $$ Set<List<ByteBuffer>> actualRows = new HashSet(result.size())-->Line_20 $$ actualRows.add(actualRow)[ FD ]
Line_30 $$ if (!missing.isEmpty())-->Line_31 $$ sb.append("and ").append(missing.size()).append(" missing row(s) ")[ CD ]
Line_28 $$ if (!extra.isEmpty()) -->Line_30 $$ if (!missing.isEmpty())[ CD ]
Line_27 $$ StringBuilder sb = new StringBuilder()-->Line_33 $$ sb.append(extraRows.stream().collect(Collectors.joining("\n    ")))[ FD ]
Line_34 $$ if (!missing.isEmpty())-->Line_35 $$ sb.append("\nMissing Rows:\n    ").append(missingRows.stream().collect(Collectors.joining("\n    ")))[ CD ]
Line_2 $$ public static void assertRowsIgnoringOrder(UntypedResultSet result, Object[]... rows) -->Line_16 $$ Set<List<ByteBuffer>> actualRows = new HashSet(result.size())[ CD ]
Line_16 $$ Set<List<ByteBuffer>> actualRows = new HashSet(result.size())-->Line_23 $$ com.google.common.collect.Sets.SetView<List<ByteBuffer>> missing = com.google.common.collect.Sets.difference(expectedRows, actualRows)[ FD ]
Line_9 $$ Set<List<ByteBuffer>> expectedRows = new HashSet(rows.length)-->Line_14 $$ expectedRows.add(expectedRow)[ FD ]
Line_27 $$ StringBuilder sb = new StringBuilder()-->Line_31 $$ sb.append("and ").append(missing.size()).append(" missing row(s) ")[ FD ]
Line_2 $$ public static void assertRowsIgnoringOrder(UntypedResultSet result, Object[]... rows) -->Line_3 $$ if (result == null) [ CD ]
Line_28 $$ if (!extra.isEmpty()) -->Line_36 $$ Assert.fail(sb.toString())[ CD ]
Line_8 $$ List<ColumnSpecification> meta = result.metadata()-->Line_13 $$ for (int j = 0; j < meta.size(); j++) expectedRow.add(makeByteBuffer(expected[j], meta.get(j).type))[ FD ]
Line_9 $$ Set<List<ByteBuffer>> expectedRows = new HashSet(rows.length)-->Line_23 $$ com.google.common.collect.Sets.SetView<List<ByteBuffer>> missing = com.google.common.collect.Sets.difference(expectedRows, actualRows)[ FD ]
Line_22 $$ com.google.common.collect.Sets.SetView<List<ByteBuffer>> extra = com.google.common.collect.Sets.difference(actualRows, expectedRows)-->Line_28 $$ if (!extra.isEmpty()) [ FD ]
Line_4 $$ if (rows.length > 0)-->Line_5 $$ Assert.fail(String.format("No rows returned by query but %d expected", rows.length))[ CD ]
Line_24 $$ if (!extra.isEmpty() || !missing.isEmpty()) -->Line_27 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_18 $$ List<ByteBuffer> actualRow = new ArrayList(meta.size())-->Line_20 $$ actualRows.add(actualRow)[ FD ]
Line_12 $$ List<ByteBuffer> expectedRow = new ArrayList(meta.size())-->Line_13 $$ expectedRow.add(makeByteBuffer(expected[j], meta.get(j).type))[ FD ]
Line_8 $$ List<ColumnSpecification> meta = result.metadata()-->Line_19 $$ for (int j = 0; j < meta.size(); j++) actualRow.add(actual.getBytes(meta.get(j).name.toString()))[ FD ]
Line_8 $$ List<ColumnSpecification> meta = result.metadata()-->Line_13 $$ expectedRow.add(makeByteBuffer(expected[j], meta.get(j).type))[ FD ]
