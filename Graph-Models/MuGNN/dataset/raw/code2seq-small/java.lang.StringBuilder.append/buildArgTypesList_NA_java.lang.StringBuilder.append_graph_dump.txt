Line_2 $$ private static String buildArgTypesList(PsiExpressionList list) -->Line_14 $$ return builder.toString()[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_11 $$ builder.append(argType != null ? JavaHighlightUtil.formatType(argType) : "?")[ FD ]
Line_2 $$ private static String buildArgTypesList(PsiExpressionList list) -->Line_5 $$ PsiExpression[] args = list.getExpressions()[ FD ]
Line_6 $$ for (int i = 0; i < args.length; i++) -->Line_10 $$ PsiType argType = args[i].getType()[ CD ]
Line_2 $$ private static String buildArgTypesList(PsiExpressionList list) -->Line_13 $$ builder.append(")")[ CD ]
Line_2 $$ private static String buildArgTypesList(PsiExpressionList list) -->Line_5 $$ PsiExpression[] args = list.getExpressions()[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_14 $$ return builder.toString()[ FD ]
Line_2 $$ private static String buildArgTypesList(PsiExpressionList list) -->Line_4 $$ builder.append("(")[ CD ]
Line_10 $$ PsiType argType = args[i].getType()-->Line_11 $$ builder.append(argType != null ? JavaHighlightUtil.formatType(argType) : "?")[ FD ]
Line_6 $$ for (int i = 0; i < args.length; i++) -->Line_7 $$ if (i > 0) [ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_8 $$ builder.append(", ")[ FD ]
Line_2 $$ private static String buildArgTypesList(PsiExpressionList list) -->Line_6 $$ for (int i = 0; i < args.length; i++) [ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_13 $$ builder.append(")")[ FD ]
Line_7 $$ if (i > 0) -->Line_8 $$ builder.append(", ")[ CD ]
Line_6 $$ for (int i = 0; i < args.length; i++) -->Line_7 $$ if (i > 0) [ FD ]
Line_2 $$ private static String buildArgTypesList(PsiExpressionList list) -->Line_3 $$ StringBuilder builder = new StringBuilder()[ CD ]
Line_6 $$ for (int i = 0; i < args.length; i++) -->Line_11 $$ builder.append(argType != null ? JavaHighlightUtil.formatType(argType) : "?")[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_4 $$ builder.append("(")[ FD ]
