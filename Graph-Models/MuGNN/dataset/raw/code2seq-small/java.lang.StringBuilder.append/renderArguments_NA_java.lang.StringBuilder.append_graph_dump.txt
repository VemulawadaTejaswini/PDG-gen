Line_3 $$ if (isDistinct()) -->Line_4 $$ buffer.append("distinct ")[ CD ]
Line_3 $$ if (isDistinct()) -->Line_7 $$ if (argExprs.size() == 1) [ CD ]
Line_3 $$ if (isDistinct()) -->Line_6 $$ List<Expression<?>> argExprs = getArgumentExpressions()[ CD ]
Line_9 $$ if (argExpr instanceof Root<?>) -->Line_11 $$ if (!root.getModel().hasSingleIdAttribute()) [ CD ]
Line_11 $$ if (!root.getModel().hasSingleIdAttribute()) -->Line_13 $$ return[ CD ]
Line_7 $$ if (argExprs.size() == 1) -->Line_9 $$ if (argExpr instanceof Root<?>) [ CD ]
Line_9 $$ if (argExpr instanceof Root<?>) -->Line_10 $$ Root<?> root = (Root<?>) argExpr[ CD ]
Line_2 $$ protected void renderArguments(StringBuilder buffer, RenderingContext renderingContext) -->Line_18 $$ super.renderArguments(buffer, renderingContext)[ CD ]
Line_2 $$ protected void renderArguments(StringBuilder buffer, RenderingContext renderingContext) -->Line_3 $$ if (isDistinct()) [ CD ]
Line_6 $$ List<Expression<?>> argExprs = getArgumentExpressions()-->Line_7 $$ if (argExprs.size() == 1) [ FD ]
Line_7 $$ if (argExprs.size() == 1) -->Line_8 $$ Expression argExpr = argExprs.get(0)[ CD ]
Line_11 $$ if (!root.getModel().hasSingleIdAttribute()) -->Line_12 $$ buffer.append('*')[ CD ]
Line_2 $$ protected void renderArguments(StringBuilder buffer, RenderingContext renderingContext) -->Line_12 $$ buffer.append('*')[ FD ]
Line_2 $$ protected void renderArguments(StringBuilder buffer, RenderingContext renderingContext) -->Line_18 $$ super.renderArguments(buffer, renderingContext)[ FD ]
Line_10 $$ Root<?> root = (Root<?>) argExpr-->Line_11 $$ if (!root.getModel().hasSingleIdAttribute()) [ FD ]
Line_2 $$ protected void renderArguments(StringBuilder buffer, RenderingContext renderingContext) -->Line_4 $$ buffer.append("distinct ")[ FD ]
Line_6 $$ List<Expression<?>> argExprs = getArgumentExpressions()-->Line_8 $$ Expression argExpr = argExprs.get(0)[ FD ]
Line_8 $$ Expression argExpr = argExprs.get(0)-->Line_9 $$ if (argExpr instanceof Root<?>) [ FD ]
