Line_2 $$ private void snapshot(final IndexShard indexShard, final SnapshotId snapshotId, final IndexShardSnapshotStatus snapshotStatus) -->Line_20 $$ sb.append("snapshot (").append(snapshotId.getSnapshot()).append(") completed to ").append(indexShardRepository).append(", took [").append(TimeValue.timeValueMillis(snapshotStatus.time())).append("]\n")[ FD ]
Line_2 $$ private void snapshot(final IndexShard indexShard, final SnapshotId snapshotId, final IndexShardSnapshotStatus snapshotStatus) -->Line_11 $$ if (indexShard.state() == IndexShardState.CREATED || indexShard.state() == IndexShardState.RECOVERING) [ CD ]
Line_18 $$ if (logger.isDebugEnabled()) -->Line_19 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_3 $$ IndexShardRepository indexShardRepository = snapshotsService.getRepositoriesService().indexShardRepository(snapshotId.getRepository())-->Line_17 $$ indexShardRepository.snapshot(snapshotId, shardId, snapshotIndexCommit, snapshotStatus)[ FD ]
Line_2 $$ private void snapshot(final IndexShard indexShard, final SnapshotId snapshotId, final IndexShardSnapshotStatus snapshotStatus) -->Line_3 $$ IndexShardRepository indexShardRepository = snapshotsService.getRepositoriesService().indexShardRepository(snapshotId.getRepository())[ FD ]
Line_18 $$ if (logger.isDebugEnabled()) -->Line_22 $$ logger.debug(sb.toString())[ CD ]
Line_2 $$ private void snapshot(final IndexShard indexShard, final SnapshotId snapshotId, final IndexShardSnapshotStatus snapshotStatus) -->Line_5 $$ if (!indexShard.routingEntry().primary()) [ FD ]
Line_2 $$ private void snapshot(final IndexShard indexShard, final SnapshotId snapshotId, final IndexShardSnapshotStatus snapshotStatus) -->Line_11 $$ if (indexShard.state() == IndexShardState.CREATED || indexShard.state() == IndexShardState.RECOVERING) [ FD ]
Line_19 $$ StringBuilder sb = new StringBuilder()-->Line_22 $$ logger.debug(sb.toString())[ FD ]
Line_3 $$ IndexShardRepository indexShardRepository = snapshotsService.getRepositoriesService().indexShardRepository(snapshotId.getRepository())-->Line_20 $$ sb.append("snapshot (").append(snapshotId.getSnapshot()).append(") completed to ").append(indexShardRepository).append(", took [").append(TimeValue.timeValueMillis(snapshotStatus.time())).append("]\n")[ FD ]
Line_18 $$ if (logger.isDebugEnabled()) -->Line_21 $$ sb.append("    index    : version [").append(snapshotStatus.indexVersion()).append("], number_of_files [").append(snapshotStatus.numberOfFiles()).append("] with total_size [").append(new ByteSizeValue(snapshotStatus.totalSize())).append("]\n")[ CD ]
Line_15 $$ IndexCommit snapshotIndexCommit = indexShard.snapshotIndex(true)-->Line_17 $$ indexShardRepository.snapshot(snapshotId, shardId, snapshotIndexCommit, snapshotStatus)[ FD ]
Line_4 $$ ShardId shardId = indexShard.shardId()-->Line_17 $$ indexShardRepository.snapshot(snapshotId, shardId, snapshotIndexCommit, snapshotStatus)[ FD ]
Line_2 $$ private void snapshot(final IndexShard indexShard, final SnapshotId snapshotId, final IndexShardSnapshotStatus snapshotStatus) -->Line_15 $$ IndexCommit snapshotIndexCommit = indexShard.snapshotIndex(true)[ FD ]
Line_2 $$ private void snapshot(final IndexShard indexShard, final SnapshotId snapshotId, final IndexShardSnapshotStatus snapshotStatus) -->Line_4 $$ ShardId shardId = indexShard.shardId()[ FD ]
Line_2 $$ private void snapshot(final IndexShard indexShard, final SnapshotId snapshotId, final IndexShardSnapshotStatus snapshotStatus) -->Line_8 $$ if (indexShard.routingEntry().relocating()) [ CD ]
Line_2 $$ private void snapshot(final IndexShard indexShard, final SnapshotId snapshotId, final IndexShardSnapshotStatus snapshotStatus) -->Line_25 $$ indexShard.releaseSnapshot(snapshotIndexCommit)[ FD ]
Line_15 $$ IndexCommit snapshotIndexCommit = indexShard.snapshotIndex(true)-->Line_25 $$ indexShard.releaseSnapshot(snapshotIndexCommit)[ FD ]
Line_2 $$ private void snapshot(final IndexShard indexShard, final SnapshotId snapshotId, final IndexShardSnapshotStatus snapshotStatus) -->Line_5 $$ if (!indexShard.routingEntry().primary()) [ CD ]
Line_2 $$ private void snapshot(final IndexShard indexShard, final SnapshotId snapshotId, final IndexShardSnapshotStatus snapshotStatus) -->Line_3 $$ IndexShardRepository indexShardRepository = snapshotsService.getRepositoriesService().indexShardRepository(snapshotId.getRepository())[ CD ]
Line_2 $$ private void snapshot(final IndexShard indexShard, final SnapshotId snapshotId, final IndexShardSnapshotStatus snapshotStatus) -->Line_21 $$ sb.append("    index    : version [").append(snapshotStatus.indexVersion()).append("], number_of_files [").append(snapshotStatus.numberOfFiles()).append("] with total_size [").append(new ByteSizeValue(snapshotStatus.totalSize())).append("]\n")[ FD ]
Line_2 $$ private void snapshot(final IndexShard indexShard, final SnapshotId snapshotId, final IndexShardSnapshotStatus snapshotStatus) -->Line_4 $$ ShardId shardId = indexShard.shardId()[ CD ]
Line_2 $$ private void snapshot(final IndexShard indexShard, final SnapshotId snapshotId, final IndexShardSnapshotStatus snapshotStatus) -->Line_17 $$ indexShardRepository.snapshot(snapshotId, shardId, snapshotIndexCommit, snapshotStatus)[ FD ]
Line_19 $$ StringBuilder sb = new StringBuilder()-->Line_20 $$ sb.append("snapshot (").append(snapshotId.getSnapshot()).append(") completed to ").append(indexShardRepository).append(", took [").append(TimeValue.timeValueMillis(snapshotStatus.time())).append("]\n")[ FD ]
Line_2 $$ private void snapshot(final IndexShard indexShard, final SnapshotId snapshotId, final IndexShardSnapshotStatus snapshotStatus) -->Line_8 $$ if (indexShard.routingEntry().relocating()) [ FD ]
Line_18 $$ if (logger.isDebugEnabled()) -->Line_20 $$ sb.append("snapshot (").append(snapshotId.getSnapshot()).append(") completed to ").append(indexShardRepository).append(", took [").append(TimeValue.timeValueMillis(snapshotStatus.time())).append("]\n")[ CD ]
Line_19 $$ StringBuilder sb = new StringBuilder()-->Line_21 $$ sb.append("    index    : version [").append(snapshotStatus.indexVersion()).append("], number_of_files [").append(snapshotStatus.numberOfFiles()).append("] with total_size [").append(new ByteSizeValue(snapshotStatus.totalSize())).append("]\n")[ FD ]
