Line_2 $$ private String readLogFile(Path logFilePath, long skipBytes) throws FileNotFoundException, IOException -->Line_6 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ private String readLogFile(Path logFilePath, long skipBytes) throws FileNotFoundException, IOException -->Line_5 $$ LineNumberReader lnr = new LineNumberReader(new FileReader(logFilePath.toFile()))[ CD ]
Line_2 $$ private String readLogFile(Path logFilePath, long skipBytes) throws FileNotFoundException, IOException -->Line_7 $$ log.info("I am skipping '" + skipBytes + "' bytes from the beggining of the file.")[ CD ]
Line_2 $$ private String readLogFile(Path logFilePath, long skipBytes) throws FileNotFoundException, IOException -->Line_10 $$ while ((input = lnr.readLine()) != null) [ CD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_14 $$ return sb.toString()[ FD ]
Line_9 $$ String input-->Line_10 $$ while ((input = lnr.readLine()) != null) [ FD ]
Line_5 $$ LineNumberReader lnr = new LineNumberReader(new FileReader(logFilePath.toFile()))-->Line_13 $$ lnr.close()[ FD ]
Line_2 $$ private String readLogFile(Path logFilePath, long skipBytes) throws FileNotFoundException, IOException -->Line_3 $$ Assert.assertTrue("Log file ('" + logFilePath + "') does not exist", logFilePath.toFile().exists())[ CD ]
Line_2 $$ private String readLogFile(Path logFilePath, long skipBytes) throws FileNotFoundException, IOException -->Line_5 $$ LineNumberReader lnr = new LineNumberReader(new FileReader(logFilePath.toFile()))[ FD ]
Line_5 $$ LineNumberReader lnr = new LineNumberReader(new FileReader(logFilePath.toFile()))-->Line_8 $$ lnr.skip(skipBytes)[ FD ]
Line_2 $$ private String readLogFile(Path logFilePath, long skipBytes) throws FileNotFoundException, IOException -->Line_3 $$ Assert.assertTrue("Log file ('" + logFilePath + "') does not exist", logFilePath.toFile().exists())[ FD ]
Line_2 $$ private String readLogFile(Path logFilePath, long skipBytes) throws FileNotFoundException, IOException -->Line_9 $$ String input[ CD ]
Line_2 $$ private String readLogFile(Path logFilePath, long skipBytes) throws FileNotFoundException, IOException -->Line_8 $$ lnr.skip(skipBytes)[ FD ]
Line_2 $$ private String readLogFile(Path logFilePath, long skipBytes) throws FileNotFoundException, IOException -->Line_13 $$ lnr.close()[ CD ]
Line_2 $$ private String readLogFile(Path logFilePath, long skipBytes) throws FileNotFoundException, IOException -->Line_4 $$ Assert.assertTrue("The '" + logFilePath + "' is not a file", logFilePath.toFile().isFile())[ FD ]
Line_2 $$ private String readLogFile(Path logFilePath, long skipBytes) throws FileNotFoundException, IOException -->Line_4 $$ Assert.assertTrue("The '" + logFilePath + "' is not a file", logFilePath.toFile().isFile())[ CD ]
Line_2 $$ private String readLogFile(Path logFilePath, long skipBytes) throws FileNotFoundException, IOException -->Line_8 $$ lnr.skip(skipBytes)[ CD ]
Line_10 $$ while ((input = lnr.readLine()) != null) -->Line_11 $$ sb.append("\n" + input)[ CD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_11 $$ sb.append("\n" + input)[ FD ]
Line_2 $$ private String readLogFile(Path logFilePath, long skipBytes) throws FileNotFoundException, IOException -->Line_14 $$ return sb.toString()[ CD ]
Line_5 $$ LineNumberReader lnr = new LineNumberReader(new FileReader(logFilePath.toFile()))-->Line_10 $$ while ((input = lnr.readLine()) != null) [ FD ]
