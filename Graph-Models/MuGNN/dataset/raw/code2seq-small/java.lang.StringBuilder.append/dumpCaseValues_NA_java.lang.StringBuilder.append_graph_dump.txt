Line_2 $$ private static void dumpCaseValues(String expressionText, List<String> caseValues, boolean useEquals, @NonNls StringBuilder ifStatementString) -->Line_17 $$ ifStatementString.append(caseValue)[ FD ]
Line_2 $$ private static void dumpCaseValues(String expressionText, List<String> caseValues, boolean useEquals, @NonNls StringBuilder ifStatementString) -->Line_3 $$ ifStatementString.append("if(")[ CD ]
Line_2 $$ private static void dumpCaseValues(String expressionText, List<String> caseValues, boolean useEquals, @NonNls StringBuilder ifStatementString) -->Line_3 $$ ifStatementString.append("if(")[ FD ]
Line_11 $$ if (useEquals) -->Line_13 $$ ifStatementString.append(caseValue)[ CD ]
Line_2 $$ private static void dumpCaseValues(String expressionText, List<String> caseValues, boolean useEquals, @NonNls StringBuilder ifStatementString) -->Line_16 $$ ifStatementString.append("==")[ FD ]
Line_2 $$ private static void dumpCaseValues(String expressionText, List<String> caseValues, boolean useEquals, @NonNls StringBuilder ifStatementString) -->Line_14 $$ ifStatementString.append(')')[ FD ]
Line_11 $$ if (useEquals) -->Line_16 $$ ifStatementString.append("==")[ CD ]
Line_2 $$ private static void dumpCaseValues(String expressionText, List<String> caseValues, boolean useEquals, @NonNls StringBuilder ifStatementString) -->Line_20 $$ ifStatementString.append(')')[ FD ]
Line_2 $$ private static void dumpCaseValues(String expressionText, List<String> caseValues, boolean useEquals, @NonNls StringBuilder ifStatementString) -->Line_20 $$ ifStatementString.append(')')[ CD ]
Line_2 $$ private static void dumpCaseValues(String expressionText, List<String> caseValues, boolean useEquals, @NonNls StringBuilder ifStatementString) -->Line_13 $$ ifStatementString.append(caseValue)[ FD ]
Line_11 $$ if (useEquals) -->Line_14 $$ ifStatementString.append(')')[ CD ]
Line_5 $$ for (String caseValue : caseValues) -->Line_13 $$ ifStatementString.append(caseValue)[ FD ]
Line_5 $$ for (String caseValue : caseValues) -->Line_17 $$ ifStatementString.append(caseValue)[ FD ]
Line_4 $$ boolean firstCaseValue = true-->Line_6 $$ if (!firstCaseValue) [ FD ]
Line_2 $$ private static void dumpCaseValues(String expressionText, List<String> caseValues, boolean useEquals, @NonNls StringBuilder ifStatementString) -->Line_10 $$ ifStatementString.append(expressionText)[ FD ]
Line_11 $$ if (useEquals) -->Line_17 $$ ifStatementString.append(caseValue)[ CD ]
Line_6 $$ if (!firstCaseValue) -->Line_7 $$ ifStatementString.append("||")[ CD ]
Line_2 $$ private static void dumpCaseValues(String expressionText, List<String> caseValues, boolean useEquals, @NonNls StringBuilder ifStatementString) -->Line_12 $$ ifStatementString.append(".equals(")[ FD ]
Line_2 $$ private static void dumpCaseValues(String expressionText, List<String> caseValues, boolean useEquals, @NonNls StringBuilder ifStatementString) -->Line_7 $$ ifStatementString.append("||")[ FD ]
Line_11 $$ if (useEquals) -->Line_12 $$ ifStatementString.append(".equals(")[ CD ]
Line_2 $$ private static void dumpCaseValues(String expressionText, List<String> caseValues, boolean useEquals, @NonNls StringBuilder ifStatementString) -->Line_4 $$ boolean firstCaseValue = true[ CD ]
Line_4 $$ boolean firstCaseValue = true-->Line_9 $$ firstCaseValue = false[ FD ]
