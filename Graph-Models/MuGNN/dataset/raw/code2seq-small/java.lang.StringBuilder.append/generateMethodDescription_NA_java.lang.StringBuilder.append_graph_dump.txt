Line_2 $$ private void generateMethodDescription(@NonNls StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_21 $$ return method.getContainingClass()[ FD ]
Line_3 $$ final DocTagLocator<PsiElement[]> descriptionLocator = new DocTagLocator<PsiElement[]>() -->Line_8 $$ if (isEmptyDescription(comment)) [ CD ]
Line_2 $$ private void generateMethodDescription(@NonNls StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_33 $$ buffer.append("<DT><b>")[ FD ]
Line_31 $$ if (elements != null) -->Line_33 $$ buffer.append("<DT><b>")[ CD ]
Line_31 $$ if (elements != null) -->Line_34 $$ buffer.append(extendee.isInterface() ? CodeInsightBundle.message("javadoc.description.copied.from.interface") : CodeInsightBundle.message("javadoc.description.copied.from.class"))[ CD ]
Line_5 $$ if (comment == null) -->Line_6 $$ return null[ CD ]
Line_31 $$ if (elements != null) -->Line_39 $$ buffer.append("</DD></DL></DD>")[ CD ]
Line_2 $$ private void generateMethodDescription(@NonNls StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_32 $$ buffer.append("<DD><DL>")[ FD ]
Line_3 $$ final DocTagLocator<PsiElement[]> descriptionLocator = new DocTagLocator<PsiElement[]>() -->Line_14 $$ if (comment != null) [ FD ]
Line_2 $$ private void generateMethodDescription(@NonNls StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_34 $$ buffer.append(extendee.isInterface() ? CodeInsightBundle.message("javadoc.description.copied.from.interface") : CodeInsightBundle.message("javadoc.description.copied.from.class"))[ FD ]
Line_2 $$ private void generateMethodDescription(@NonNls StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_18 $$ return findInheritDocTag(method, descriptionLocator)[ FD ]
Line_3 $$ final DocTagLocator<PsiElement[]> descriptionLocator = new DocTagLocator<PsiElement[]>() -->Line_5 $$ if (comment == null) [ FD ]
Line_2 $$ private void generateMethodDescription(@NonNls StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_5 $$ if (comment == null) [ FD ]
Line_2 $$ private void generateMethodDescription(@NonNls StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_35 $$ buffer.append("</b>&nbsp;")[ FD ]
Line_2 $$ private void generateMethodDescription(@NonNls StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_27 $$ Pair<PsiElement[], InheritDocProvider<PsiElement[]>> pair = findInheritDocTag(method, descriptionLocator)[ CD ]
Line_2 $$ private void generateMethodDescription(@NonNls StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_36 $$ generateLink(buffer, extendee, JavaDocUtil.getShortestClassName(extendee, method), false)[ FD ]
Line_2 $$ private void generateMethodDescription(@NonNls StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_38 $$ generateValue(buffer, elements, pair.second)[ FD ]
Line_3 $$ final DocTagLocator<PsiElement[]> descriptionLocator = new DocTagLocator<PsiElement[]>() -->Line_18 $$ return findInheritDocTag(method, descriptionLocator)[ FD ]
Line_3 $$ final DocTagLocator<PsiElement[]> descriptionLocator = new DocTagLocator<PsiElement[]>() -->Line_11 $$ return comment.getDescriptionElements()[ CD ]
Line_2 $$ private void generateMethodDescription(@NonNls StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_15 $$ if (!isEmptyDescription(comment)) [ FD ]
Line_3 $$ final DocTagLocator<PsiElement[]> descriptionLocator = new DocTagLocator<PsiElement[]>() -->Line_8 $$ if (isEmptyDescription(comment)) [ FD ]
Line_3 $$ final DocTagLocator<PsiElement[]> descriptionLocator = new DocTagLocator<PsiElement[]>() -->Line_15 $$ if (!isEmptyDescription(comment)) [ FD ]
Line_2 $$ private void generateMethodDescription(@NonNls StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_28 $$ if (pair != null) [ CD ]
Line_31 $$ if (elements != null) -->Line_35 $$ buffer.append("</b>&nbsp;")[ CD ]
Line_28 $$ if (pair != null) -->Line_30 $$ PsiClass extendee = pair.second.getElement()[ CD ]
Line_3 $$ final DocTagLocator<PsiElement[]> descriptionLocator = new DocTagLocator<PsiElement[]>() -->Line_16 $$ generateValue(buffer, comment.getDescriptionElements(), new InheritDocProvider<PsiElement[]>() [ FD ]
Line_31 $$ if (elements != null) -->Line_38 $$ generateValue(buffer, elements, pair.second)[ CD ]
Line_28 $$ if (pair != null) -->Line_31 $$ if (elements != null) [ CD ]
Line_2 $$ private void generateMethodDescription(@NonNls StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_8 $$ if (isEmptyDescription(comment)) [ FD ]
Line_8 $$ if (isEmptyDescription(comment)) -->Line_9 $$ return null[ CD ]
Line_2 $$ private void generateMethodDescription(@NonNls StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_14 $$ if (comment != null) [ CD ]
Line_2 $$ private void generateMethodDescription(@NonNls StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_27 $$ Pair<PsiElement[], InheritDocProvider<PsiElement[]>> pair = findInheritDocTag(method, descriptionLocator)[ FD ]
Line_2 $$ private void generateMethodDescription(@NonNls StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_39 $$ buffer.append("</DD></DL></DD>")[ FD ]
Line_2 $$ private void generateMethodDescription(@NonNls StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_16 $$ generateValue(buffer, comment.getDescriptionElements(), new InheritDocProvider<PsiElement[]>() [ FD ]
Line_16 $$ generateValue(buffer, comment.getDescriptionElements(), new InheritDocProvider<PsiElement[]>() -->Line_18 $$ return findInheritDocTag(method, descriptionLocator)[ CD ]
Line_2 $$ private void generateMethodDescription(@NonNls StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_3 $$ final DocTagLocator<PsiElement[]> descriptionLocator = new DocTagLocator<PsiElement[]>() [ CD ]
Line_15 $$ if (!isEmptyDescription(comment)) -->Line_24 $$ return[ CD ]
Line_31 $$ if (elements != null) -->Line_36 $$ generateLink(buffer, extendee, JavaDocUtil.getShortestClassName(extendee, method), false)[ CD ]
Line_16 $$ generateValue(buffer, comment.getDescriptionElements(), new InheritDocProvider<PsiElement[]>() -->Line_21 $$ return method.getContainingClass()[ CD ]
Line_2 $$ private void generateMethodDescription(@NonNls StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_11 $$ return comment.getDescriptionElements()[ FD ]
Line_31 $$ if (elements != null) -->Line_32 $$ buffer.append("<DD><DL>")[ CD ]
Line_15 $$ if (!isEmptyDescription(comment)) -->Line_16 $$ generateValue(buffer, comment.getDescriptionElements(), new InheritDocProvider<PsiElement[]>() [ CD ]
Line_3 $$ final DocTagLocator<PsiElement[]> descriptionLocator = new DocTagLocator<PsiElement[]>() -->Line_11 $$ return comment.getDescriptionElements()[ FD ]
Line_3 $$ final DocTagLocator<PsiElement[]> descriptionLocator = new DocTagLocator<PsiElement[]>() -->Line_27 $$ Pair<PsiElement[], InheritDocProvider<PsiElement[]>> pair = findInheritDocTag(method, descriptionLocator)[ FD ]
Line_2 $$ private void generateMethodDescription(@NonNls StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_14 $$ if (comment != null) [ FD ]
Line_3 $$ final DocTagLocator<PsiElement[]> descriptionLocator = new DocTagLocator<PsiElement[]>() -->Line_5 $$ if (comment == null) [ CD ]
Line_31 $$ if (elements != null) -->Line_37 $$ buffer.append(BR_TAG)[ CD ]
Line_14 $$ if (comment != null) -->Line_15 $$ if (!isEmptyDescription(comment)) [ CD ]
Line_2 $$ private void generateMethodDescription(@NonNls StringBuilder buffer, final PsiMethod method, final PsiDocComment comment) -->Line_37 $$ buffer.append(BR_TAG)[ FD ]
