Line_2 $$ public void accept(CacheVisitor visitor) -->Line_3 $$ lock.lock()[ CD ]
Line_23 $$ prefix = ","-->Line_31 $$ prefix = ""[ FD ]
Line_5 $$ Map<ExtendedBlockId, ShortCircuitReplica> replicas = new HashMap<ExtendedBlockId, ShortCircuitReplica>()-->Line_21 $$ for (Entry<ExtendedBlockId, ShortCircuitReplica> entry : replicas.entrySet()) [ FD ]
Line_20 $$ String prefix = ""-->Line_35 $$ prefix = ","[ FD ]
Line_20 $$ String prefix = ""-->Line_29 $$ prefix = ","[ FD ]
Line_6 $$ Map<ExtendedBlockId, InvalidToken> failedLoads = new HashMap<ExtendedBlockId, InvalidToken>()-->Line_13 $$ failedLoads.put(entry.getKey(), waitable.getVal().getInvalidTokenException())[ FD ]
Line_31 $$ prefix = ""-->Line_41 $$ prefix = ","[ FD ]
Line_17 $$ if (LOG.isDebugEnabled()) -->Line_43 $$ LOG.debug(builder.toString())[ CD ]
Line_20 $$ String prefix = ""-->Line_37 $$ prefix = ""[ FD ]
Line_17 $$ if (LOG.isDebugEnabled()) -->Line_37 $$ prefix = ""[ CD ]
Line_18 $$ StringBuilder builder = new StringBuilder()-->Line_28 $$ builder.append(prefix).append(entry.getValue())[ FD ]
Line_2 $$ public void accept(CacheVisitor visitor) -->Line_45 $$ visitor.visit(outstandingMmapCount, replicas, failedLoads, evictable, evictableMmapped)[ FD ]
Line_7 $$ for (Entry<ExtendedBlockId, Waitable<ShortCircuitReplicaInfo>> entry : replicaInfoMap.entrySet()) -->Line_40 $$ builder.append(prefix).append(entry.getKey()).append(":").append(entry.getValue())[ FD ]
Line_20 $$ String prefix = ""-->Line_40 $$ builder.append(prefix).append(entry.getKey()).append(":").append(entry.getValue())[ FD ]
Line_37 $$ prefix = ""-->Line_40 $$ builder.append(prefix).append(entry.getKey()).append(":").append(entry.getValue())[ FD ]
Line_17 $$ if (LOG.isDebugEnabled()) -->Line_18 $$ StringBuilder builder = new StringBuilder()[ CD ]
Line_18 $$ StringBuilder builder = new StringBuilder()-->Line_22 $$ builder.append(prefix).append(entry.getValue())[ FD ]
Line_8 $$ Waitable<ShortCircuitReplicaInfo> waitable = entry.getValue()-->Line_9 $$ if (waitable.hasVal()) [ FD ]
Line_7 $$ for (Entry<ExtendedBlockId, Waitable<ShortCircuitReplicaInfo>> entry : replicaInfoMap.entrySet()) -->Line_8 $$ Waitable<ShortCircuitReplicaInfo> waitable = entry.getValue()[ FD ]
Line_31 $$ prefix = ""-->Line_35 $$ prefix = ","[ FD ]
Line_18 $$ StringBuilder builder = new StringBuilder()-->Line_40 $$ builder.append(prefix).append(entry.getKey()).append(":").append(entry.getValue())[ FD ]
Line_6 $$ Map<ExtendedBlockId, InvalidToken> failedLoads = new HashMap<ExtendedBlockId, InvalidToken>()-->Line_27 $$ for (Entry<ExtendedBlockId, InvalidToken> entry : failedLoads.entrySet()) [ FD ]
Line_25 $$ prefix = ""-->Line_40 $$ builder.append(prefix).append(entry.getKey()).append(":").append(entry.getValue())[ FD ]
Line_9 $$ if (waitable.hasVal()) -->Line_10 $$ if (waitable.getVal().getReplica() != null) [ CD ]
Line_17 $$ if (LOG.isDebugEnabled()) -->Line_25 $$ prefix = ""[ CD ]
Line_23 $$ prefix = ","-->Line_41 $$ prefix = ","[ FD ]
Line_8 $$ Waitable<ShortCircuitReplicaInfo> waitable = entry.getValue()-->Line_13 $$ failedLoads.put(entry.getKey(), waitable.getVal().getInvalidTokenException())[ FD ]
Line_17 $$ if (LOG.isDebugEnabled()) -->Line_32 $$ builder.append(", evictable=")[ CD ]
Line_29 $$ prefix = ","-->Line_37 $$ prefix = ""[ FD ]
Line_7 $$ for (Entry<ExtendedBlockId, Waitable<ShortCircuitReplicaInfo>> entry : replicaInfoMap.entrySet()) -->Line_13 $$ failedLoads.put(entry.getKey(), waitable.getVal().getInvalidTokenException())[ FD ]
Line_20 $$ String prefix = ""-->Line_34 $$ builder.append(prefix).append(entry.getKey()).append(":").append(entry.getValue())[ FD ]
Line_31 $$ prefix = ""-->Line_37 $$ prefix = ""[ FD ]
Line_20 $$ String prefix = ""-->Line_41 $$ prefix = ","[ FD ]
Line_18 $$ StringBuilder builder = new StringBuilder()-->Line_19 $$ builder.append("visiting ").append(visitor.getClass().getName()).append("with outstandingMmapCount=").append(outstandingMmapCount).append(", replicas=")[ FD ]
Line_8 $$ Waitable<ShortCircuitReplicaInfo> waitable = entry.getValue()-->Line_11 $$ replicas.put(entry.getKey(), waitable.getVal().getReplica())[ FD ]
Line_5 $$ Map<ExtendedBlockId, ShortCircuitReplica> replicas = new HashMap<ExtendedBlockId, ShortCircuitReplica>()-->Line_11 $$ replicas.put(entry.getKey(), waitable.getVal().getReplica())[ FD ]
Line_20 $$ String prefix = ""-->Line_31 $$ prefix = ""[ FD ]
Line_23 $$ prefix = ","-->Line_29 $$ prefix = ","[ FD ]
Line_29 $$ prefix = ","-->Line_34 $$ builder.append(prefix).append(entry.getKey()).append(":").append(entry.getValue())[ FD ]
Line_25 $$ prefix = ""-->Line_37 $$ prefix = ""[ FD ]
Line_23 $$ prefix = ","-->Line_34 $$ builder.append(prefix).append(entry.getKey()).append(":").append(entry.getValue())[ FD ]
Line_31 $$ prefix = ""-->Line_40 $$ builder.append(prefix).append(entry.getKey()).append(":").append(entry.getValue())[ FD ]
Line_10 $$ if (waitable.getVal().getReplica() != null) -->Line_13 $$ failedLoads.put(entry.getKey(), waitable.getVal().getInvalidTokenException())[ CD ]
Line_25 $$ prefix = ""-->Line_31 $$ prefix = ""[ FD ]
Line_20 $$ String prefix = ""-->Line_25 $$ prefix = ""[ FD ]
Line_18 $$ StringBuilder builder = new StringBuilder()-->Line_34 $$ builder.append(prefix).append(entry.getKey()).append(":").append(entry.getValue())[ FD ]
Line_31 $$ prefix = ""-->Line_34 $$ builder.append(prefix).append(entry.getKey()).append(":").append(entry.getValue())[ FD ]
Line_29 $$ prefix = ","-->Line_40 $$ builder.append(prefix).append(entry.getKey()).append(":").append(entry.getValue())[ FD ]
Line_2 $$ public void accept(CacheVisitor visitor) -->Line_19 $$ builder.append("visiting ").append(visitor.getClass().getName()).append("with outstandingMmapCount=").append(outstandingMmapCount).append(", replicas=")[ FD ]
Line_20 $$ String prefix = ""-->Line_23 $$ prefix = ","[ FD ]
Line_7 $$ for (Entry<ExtendedBlockId, Waitable<ShortCircuitReplicaInfo>> entry : replicaInfoMap.entrySet()) -->Line_28 $$ builder.append(prefix).append(entry.getValue())[ FD ]
Line_29 $$ prefix = ","-->Line_41 $$ prefix = ","[ FD ]
Line_7 $$ for (Entry<ExtendedBlockId, Waitable<ShortCircuitReplicaInfo>> entry : replicaInfoMap.entrySet()) -->Line_34 $$ builder.append(prefix).append(entry.getKey()).append(":").append(entry.getValue())[ FD ]
Line_7 $$ for (Entry<ExtendedBlockId, Waitable<ShortCircuitReplicaInfo>> entry : replicaInfoMap.entrySet()) -->Line_11 $$ replicas.put(entry.getKey(), waitable.getVal().getReplica())[ FD ]
Line_20 $$ String prefix = ""-->Line_22 $$ builder.append(prefix).append(entry.getValue())[ FD ]
Line_35 $$ prefix = ","-->Line_40 $$ builder.append(prefix).append(entry.getKey()).append(":").append(entry.getValue())[ FD ]
Line_18 $$ StringBuilder builder = new StringBuilder()-->Line_32 $$ builder.append(", evictable=")[ FD ]
Line_23 $$ prefix = ","-->Line_28 $$ builder.append(prefix).append(entry.getValue())[ FD ]
Line_17 $$ if (LOG.isDebugEnabled()) -->Line_38 $$ builder.append(", evictableMmapped=")[ CD ]
Line_18 $$ StringBuilder builder = new StringBuilder()-->Line_26 $$ builder.append(", failedLoads=")[ FD ]
Line_17 $$ if (LOG.isDebugEnabled()) -->Line_31 $$ prefix = ""[ CD ]
Line_8 $$ Waitable<ShortCircuitReplicaInfo> waitable = entry.getValue()-->Line_10 $$ if (waitable.getVal().getReplica() != null) [ FD ]
Line_25 $$ prefix = ""-->Line_41 $$ prefix = ","[ FD ]
Line_23 $$ prefix = ","-->Line_35 $$ prefix = ","[ FD ]
Line_29 $$ prefix = ","-->Line_35 $$ prefix = ","[ FD ]
Line_17 $$ if (LOG.isDebugEnabled()) -->Line_20 $$ String prefix = ""[ CD ]
Line_17 $$ if (LOG.isDebugEnabled()) -->Line_26 $$ builder.append(", failedLoads=")[ CD ]
Line_5 $$ Map<ExtendedBlockId, ShortCircuitReplica> replicas = new HashMap<ExtendedBlockId, ShortCircuitReplica>()-->Line_45 $$ visitor.visit(outstandingMmapCount, replicas, failedLoads, evictable, evictableMmapped)[ FD ]
Line_20 $$ String prefix = ""-->Line_28 $$ builder.append(prefix).append(entry.getValue())[ FD ]
Line_10 $$ if (waitable.getVal().getReplica() != null) -->Line_11 $$ replicas.put(entry.getKey(), waitable.getVal().getReplica())[ CD ]
Line_29 $$ prefix = ","-->Line_31 $$ prefix = ""[ FD ]
Line_23 $$ prefix = ","-->Line_37 $$ prefix = ""[ FD ]
Line_37 $$ prefix = ""-->Line_41 $$ prefix = ","[ FD ]
Line_25 $$ prefix = ""-->Line_29 $$ prefix = ","[ FD ]
Line_7 $$ for (Entry<ExtendedBlockId, Waitable<ShortCircuitReplicaInfo>> entry : replicaInfoMap.entrySet()) -->Line_22 $$ builder.append(prefix).append(entry.getValue())[ FD ]
Line_35 $$ prefix = ","-->Line_37 $$ prefix = ""[ FD ]
Line_23 $$ prefix = ","-->Line_40 $$ builder.append(prefix).append(entry.getKey()).append(":").append(entry.getValue())[ FD ]
Line_25 $$ prefix = ""-->Line_35 $$ prefix = ","[ FD ]
Line_23 $$ prefix = ","-->Line_25 $$ prefix = ""[ FD ]
Line_25 $$ prefix = ""-->Line_28 $$ builder.append(prefix).append(entry.getValue())[ FD ]
Line_18 $$ StringBuilder builder = new StringBuilder()-->Line_43 $$ LOG.debug(builder.toString())[ FD ]
Line_35 $$ prefix = ","-->Line_41 $$ prefix = ","[ FD ]
Line_6 $$ Map<ExtendedBlockId, InvalidToken> failedLoads = new HashMap<ExtendedBlockId, InvalidToken>()-->Line_45 $$ visitor.visit(outstandingMmapCount, replicas, failedLoads, evictable, evictableMmapped)[ FD ]
Line_25 $$ prefix = ""-->Line_34 $$ builder.append(prefix).append(entry.getKey()).append(":").append(entry.getValue())[ FD ]
Line_18 $$ StringBuilder builder = new StringBuilder()-->Line_38 $$ builder.append(", evictableMmapped=")[ FD ]
Line_17 $$ if (LOG.isDebugEnabled()) -->Line_19 $$ builder.append("visiting ").append(visitor.getClass().getName()).append("with outstandingMmapCount=").append(outstandingMmapCount).append(", replicas=")[ CD ]
