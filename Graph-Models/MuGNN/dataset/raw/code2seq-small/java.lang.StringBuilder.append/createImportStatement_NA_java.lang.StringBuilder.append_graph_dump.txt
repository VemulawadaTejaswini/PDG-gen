Line_2 $$ public GrImportStatement createImportStatement(@NotNull String qname, boolean isStatic, boolean isOnDemand, String alias, PsiElement context) -->Line_3 $$ StringBuilder builder = new StringBuilder()[ CD ]
Line_2 $$ public GrImportStatement createImportStatement(@NotNull String qname, boolean isStatic, boolean isOnDemand, String alias, PsiElement context) -->Line_5 $$ if (isStatic) [ CD ]
Line_2 $$ public GrImportStatement createImportStatement(@NotNull String qname, boolean isStatic, boolean isOnDemand, String alias, PsiElement context) -->Line_12 $$ if (StringUtil.isNotEmpty(alias)) [ FD ]
Line_5 $$ if (isStatic) -->Line_6 $$ builder.append("static ")[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_6 $$ builder.append("static ")[ FD ]
Line_2 $$ public GrImportStatement createImportStatement(@NotNull String qname, boolean isStatic, boolean isOnDemand, String alias, PsiElement context) -->Line_9 $$ if (isOnDemand) [ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_13 $$ builder.append(" as ").append(alias)[ FD ]
Line_2 $$ public GrImportStatement createImportStatement(@NotNull String qname, boolean isStatic, boolean isOnDemand, String alias, PsiElement context) -->Line_8 $$ builder.append(qname)[ FD ]
Line_12 $$ if (StringUtil.isNotEmpty(alias)) -->Line_13 $$ builder.append(" as ").append(alias)[ CD ]
Line_2 $$ public GrImportStatement createImportStatement(@NotNull String qname, boolean isStatic, boolean isOnDemand, String alias, PsiElement context) -->Line_16 $$ return ((GrImportStatement) dummyFile.getFirstChild())[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_10 $$ builder.append(".*")[ FD ]
Line_2 $$ public GrImportStatement createImportStatement(@NotNull String qname, boolean isStatic, boolean isOnDemand, String alias, PsiElement context) -->Line_13 $$ builder.append(" as ").append(alias)[ FD ]
Line_9 $$ if (isOnDemand) -->Line_10 $$ builder.append(".*")[ CD ]
Line_2 $$ public GrImportStatement createImportStatement(@NotNull String qname, boolean isStatic, boolean isOnDemand, String alias, PsiElement context) -->Line_12 $$ if (StringUtil.isNotEmpty(alias)) [ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_15 $$ PsiFile dummyFile = createGroovyFileChecked(builder, false, context)[ FD ]
Line_2 $$ public GrImportStatement createImportStatement(@NotNull String qname, boolean isStatic, boolean isOnDemand, String alias, PsiElement context) -->Line_15 $$ PsiFile dummyFile = createGroovyFileChecked(builder, false, context)[ FD ]
Line_15 $$ PsiFile dummyFile = createGroovyFileChecked(builder, false, context)-->Line_16 $$ return ((GrImportStatement) dummyFile.getFirstChild())[ FD ]
Line_2 $$ public GrImportStatement createImportStatement(@NotNull String qname, boolean isStatic, boolean isOnDemand, String alias, PsiElement context) -->Line_8 $$ builder.append(qname)[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_8 $$ builder.append(qname)[ FD ]
Line_2 $$ public GrImportStatement createImportStatement(@NotNull String qname, boolean isStatic, boolean isOnDemand, String alias, PsiElement context) -->Line_4 $$ builder.append("import ")[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_4 $$ builder.append("import ")[ FD ]
Line_2 $$ public GrImportStatement createImportStatement(@NotNull String qname, boolean isStatic, boolean isOnDemand, String alias, PsiElement context) -->Line_15 $$ PsiFile dummyFile = createGroovyFileChecked(builder, false, context)[ CD ]
