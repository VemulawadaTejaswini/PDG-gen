Line_7 $$ String spinsDesc-->Line_11 $$ spinsDesc = "possibly"[ FD ]
Line_15 $$ FsInfo.Path fsPath = FsProbe.getFSInfo(nodePath)-->Line_29 $$ String type = fsPath.getType()[ FD ]
Line_27 $$ if (allMounts.contains(mount) == false) -->Line_29 $$ String type = fsPath.getType()[ CD ]
Line_22 $$ Set<String> allSpins = new HashSet()-->Line_35 $$ allSpins.add("unknown")[ FD ]
Line_15 $$ FsInfo.Path fsPath = FsProbe.getFSInfo(nodePath)-->Line_26 $$ String mount = fsPath.getMount()[ FD ]
Line_23 $$ Set<String> allMounts = new HashSet()-->Line_27 $$ if (allMounts.contains(mount) == false) [ FD ]
Line_29 $$ String type = fsPath.getType()-->Line_31 $$ allTypes.add(type)[ FD ]
Line_8 $$ if (nodePath.spins == null) -->Line_10 $$ if (nodePath.spins) [ CD ]
Line_27 $$ if (allMounts.contains(mount) == false) -->Line_30 $$ if (type != null) [ CD ]
Line_34 $$ if (spins == null) -->Line_36 $$ if (spins.booleanValue()) [ CD ]
Line_11 $$ spinsDesc = "possibly"-->Line_13 $$ spinsDesc = "no"[ FD ]
Line_15 $$ FsInfo.Path fsPath = FsProbe.getFSInfo(nodePath)-->Line_16 $$ sb.append(", free_space [").append(fsPath.getFree()).append("], usable_space [").append(fsPath.getAvailable()).append("], total_space [").append(fsPath.getTotal()).append("], spins? [").append(spinsDesc).append("], mount [").append(fsPath.getMount()).append("], type [").append(fsPath.getType()).append(']')[ FD ]
Line_4 $$ StringBuilder sb = new StringBuilder("node data locations details:")-->Line_18 $$ logger.debug(sb.toString())[ FD ]
Line_2 $$ private void maybeLogPathDetails() throws IOException -->Line_3 $$ if (logger.isDebugEnabled()) [ CD ]
Line_33 $$ Boolean spins = fsPath.getSpins()-->Line_34 $$ if (spins == null) [ FD ]
Line_4 $$ StringBuilder sb = new StringBuilder("node data locations details:")-->Line_6 $$ sb.append('\n').append(" -> ").append(nodePath.path.toAbsolutePath())[ FD ]
Line_22 $$ Set<String> allSpins = new HashSet()-->Line_39 $$ allSpins.add("no")[ FD ]
Line_15 $$ FsInfo.Path fsPath = FsProbe.getFSInfo(nodePath)-->Line_41 $$ totFSPath.add(fsPath)[ FD ]
Line_11 $$ spinsDesc = "possibly"-->Line_16 $$ sb.append(", free_space [").append(fsPath.getFree()).append("], usable_space [").append(fsPath.getAvailable()).append("], total_space [").append(fsPath.getTotal()).append("], spins? [").append(spinsDesc).append("], mount [").append(fsPath.getMount()).append("], type [").append(fsPath.getType()).append(']')[ FD ]
Line_27 $$ if (allMounts.contains(mount) == false) -->Line_33 $$ Boolean spins = fsPath.getSpins()[ CD ]
Line_30 $$ if (type != null) -->Line_31 $$ allTypes.add(type)[ CD ]
Line_23 $$ Set<String> allMounts = new HashSet()-->Line_44 $$ logger.info(String.format(Locale.ROOT, "using [%d] data paths, mounts [%s], net usable_space [%s], net total_space [%s], spins? [%s], types [%s]", nodePaths.length, allMounts, totFSPath.getAvailable(), totFSPath.getTotal(), toString(allSpins), toString(allTypes)))[ FD ]
Line_3 $$ if (logger.isDebugEnabled()) -->Line_18 $$ logger.debug(sb.toString())[ CD ]
Line_5 $$ for (NodePath nodePath : nodePaths) -->Line_15 $$ FsInfo.Path fsPath = FsProbe.getFSInfo(nodePath)[ FD ]
Line_33 $$ Boolean spins = fsPath.getSpins()-->Line_36 $$ if (spins.booleanValue()) [ FD ]
Line_23 $$ Set<String> allMounts = new HashSet()-->Line_28 $$ allMounts.add(mount)[ FD ]
Line_7 $$ String spinsDesc-->Line_16 $$ sb.append(", free_space [").append(fsPath.getFree()).append("], usable_space [").append(fsPath.getAvailable()).append("], total_space [").append(fsPath.getTotal()).append("], spins? [").append(spinsDesc).append("], mount [").append(fsPath.getMount()).append("], type [").append(fsPath.getType()).append(']')[ FD ]
Line_7 $$ String spinsDesc-->Line_9 $$ spinsDesc = "unknown"[ FD ]
Line_36 $$ if (spins.booleanValue()) -->Line_37 $$ allSpins.add("possibly")[ CD ]
Line_19 $$ if (logger.isInfoEnabled()) -->Line_20 $$ FsInfo.Path totFSPath = new FsInfo.Path()[ CD ]
Line_34 $$ if (spins == null) -->Line_35 $$ allSpins.add("unknown")[ CD ]
Line_27 $$ if (allMounts.contains(mount) == false) -->Line_34 $$ if (spins == null) [ CD ]
Line_10 $$ if (nodePath.spins) -->Line_13 $$ spinsDesc = "no"[ CD ]
Line_27 $$ if (allMounts.contains(mount) == false) -->Line_41 $$ totFSPath.add(fsPath)[ CD ]
Line_3 $$ if (logger.isDebugEnabled()) -->Line_4 $$ StringBuilder sb = new StringBuilder("node data locations details:")[ CD ]
Line_19 $$ if (logger.isInfoEnabled()) -->Line_22 $$ Set<String> allSpins = new HashSet()[ CD ]
Line_9 $$ spinsDesc = "unknown"-->Line_13 $$ spinsDesc = "no"[ FD ]
Line_19 $$ if (logger.isInfoEnabled()) -->Line_23 $$ Set<String> allMounts = new HashSet()[ CD ]
Line_13 $$ spinsDesc = "no"-->Line_16 $$ sb.append(", free_space [").append(fsPath.getFree()).append("], usable_space [").append(fsPath.getAvailable()).append("], total_space [").append(fsPath.getTotal()).append("], spins? [").append(spinsDesc).append("], mount [").append(fsPath.getMount()).append("], type [").append(fsPath.getType()).append(']')[ FD ]
Line_27 $$ if (allMounts.contains(mount) == false) -->Line_28 $$ allMounts.add(mount)[ CD ]
Line_21 $$ Set<String> allTypes = new HashSet()-->Line_44 $$ logger.info(String.format(Locale.ROOT, "using [%d] data paths, mounts [%s], net usable_space [%s], net total_space [%s], spins? [%s], types [%s]", nodePaths.length, allMounts, totFSPath.getAvailable(), totFSPath.getTotal(), toString(allSpins), toString(allTypes)))[ FD ]
Line_8 $$ if (nodePath.spins == null) -->Line_9 $$ spinsDesc = "unknown"[ CD ]
Line_20 $$ FsInfo.Path totFSPath = new FsInfo.Path()-->Line_41 $$ totFSPath.add(fsPath)[ FD ]
Line_26 $$ String mount = fsPath.getMount()-->Line_28 $$ allMounts.add(mount)[ FD ]
Line_4 $$ StringBuilder sb = new StringBuilder("node data locations details:")-->Line_16 $$ sb.append(", free_space [").append(fsPath.getFree()).append("], usable_space [").append(fsPath.getAvailable()).append("], total_space [").append(fsPath.getTotal()).append("], spins? [").append(spinsDesc).append("], mount [").append(fsPath.getMount()).append("], type [").append(fsPath.getType()).append(']')[ FD ]
Line_22 $$ Set<String> allSpins = new HashSet()-->Line_44 $$ logger.info(String.format(Locale.ROOT, "using [%d] data paths, mounts [%s], net usable_space [%s], net total_space [%s], spins? [%s], types [%s]", nodePaths.length, allMounts, totFSPath.getAvailable(), totFSPath.getTotal(), toString(allSpins), toString(allTypes)))[ FD ]
Line_19 $$ if (logger.isInfoEnabled()) -->Line_44 $$ logger.info(String.format(Locale.ROOT, "using [%d] data paths, mounts [%s], net usable_space [%s], net total_space [%s], spins? [%s], types [%s]", nodePaths.length, allMounts, totFSPath.getAvailable(), totFSPath.getTotal(), toString(allSpins), toString(allTypes)))[ CD ]
Line_5 $$ for (NodePath nodePath : nodePaths) -->Line_10 $$ if (nodePath.spins) [ FD ]
Line_19 $$ if (logger.isInfoEnabled()) -->Line_21 $$ Set<String> allTypes = new HashSet()[ CD ]
Line_20 $$ FsInfo.Path totFSPath = new FsInfo.Path()-->Line_44 $$ logger.info(String.format(Locale.ROOT, "using [%d] data paths, mounts [%s], net usable_space [%s], net total_space [%s], spins? [%s], types [%s]", nodePaths.length, allMounts, totFSPath.getAvailable(), totFSPath.getTotal(), toString(allSpins), toString(allTypes)))[ FD ]
Line_15 $$ FsInfo.Path fsPath = FsProbe.getFSInfo(nodePath)-->Line_33 $$ Boolean spins = fsPath.getSpins()[ FD ]
Line_29 $$ String type = fsPath.getType()-->Line_30 $$ if (type != null) [ FD ]
Line_22 $$ Set<String> allSpins = new HashSet()-->Line_37 $$ allSpins.add("possibly")[ FD ]
Line_3 $$ if (logger.isDebugEnabled()) -->Line_19 $$ if (logger.isInfoEnabled()) [ CD ]
Line_5 $$ for (NodePath nodePath : nodePaths) -->Line_25 $$ FsInfo.Path fsPath = FsProbe.getFSInfo(nodePath)[ FD ]
Line_26 $$ String mount = fsPath.getMount()-->Line_27 $$ if (allMounts.contains(mount) == false) [ FD ]
Line_10 $$ if (nodePath.spins) -->Line_11 $$ spinsDesc = "possibly"[ CD ]
Line_21 $$ Set<String> allTypes = new HashSet()-->Line_31 $$ allTypes.add(type)[ FD ]
Line_7 $$ String spinsDesc-->Line_13 $$ spinsDesc = "no"[ FD ]
Line_36 $$ if (spins.booleanValue()) -->Line_39 $$ allSpins.add("no")[ CD ]
Line_9 $$ spinsDesc = "unknown"-->Line_11 $$ spinsDesc = "possibly"[ FD ]
Line_9 $$ spinsDesc = "unknown"-->Line_16 $$ sb.append(", free_space [").append(fsPath.getFree()).append("], usable_space [").append(fsPath.getAvailable()).append("], total_space [").append(fsPath.getTotal()).append("], spins? [").append(spinsDesc).append("], mount [").append(fsPath.getMount()).append("], type [").append(fsPath.getType()).append(']')[ FD ]
