Line_14 $$ final String linesCoverageInfo = getLinesCoverageInformationString(coverageInfo)-->Line_16 $$ builder.append(", ").append(linesCoverageInfo)[ FD ]
Line_7 $$ if (manager.isSubCoverageActive()) -->Line_8 $$ return coverageInfo.coveredLineCount > 0 ? "covered" : null[ CD ]
Line_2 $$ public String getDirCoverageInformationString(@NotNull final PsiDirectory directory, @NotNull final CoverageSuitesBundle currentSuite, @NotNull final CoverageDataManager manager) -->Line_4 $$ if (coverageInfo == null) [ CD ]
Line_11 $$ if (filesCoverageInfo != null) -->Line_18 $$ return builder.toString()[ CD ]
Line_2 $$ public String getDirCoverageInformationString(@NotNull final PsiDirectory directory, @NotNull final CoverageSuitesBundle currentSuite, @NotNull final CoverageDataManager manager) -->Line_20 $$ return null[ CD ]
Line_2 $$ public String getDirCoverageInformationString(@NotNull final PsiDirectory directory, @NotNull final CoverageSuitesBundle currentSuite, @NotNull final CoverageDataManager manager) -->Line_11 $$ if (filesCoverageInfo != null) [ CD ]
Line_4 $$ if (coverageInfo == null) -->Line_5 $$ return null[ CD ]
Line_12 $$ final StringBuilder builder = new StringBuilder()-->Line_18 $$ return builder.toString()[ FD ]
Line_11 $$ if (filesCoverageInfo != null) -->Line_15 $$ if (linesCoverageInfo != null) [ CD ]
Line_3 $$ DirCoverageInfo coverageInfo = getDirCoverageInfo(directory, currentSuite)-->Line_14 $$ final String linesCoverageInfo = getLinesCoverageInformationString(coverageInfo)[ FD ]
Line_10 $$ final String filesCoverageInfo = getFilesCoverageInformationString(coverageInfo)-->Line_13 $$ builder.append(filesCoverageInfo)[ FD ]
Line_11 $$ if (filesCoverageInfo != null) -->Line_12 $$ final StringBuilder builder = new StringBuilder()[ CD ]
Line_15 $$ if (linesCoverageInfo != null) -->Line_16 $$ builder.append(", ").append(linesCoverageInfo)[ CD ]
Line_10 $$ final String filesCoverageInfo = getFilesCoverageInformationString(coverageInfo)-->Line_11 $$ if (filesCoverageInfo != null) [ FD ]
Line_11 $$ if (filesCoverageInfo != null) -->Line_14 $$ final String linesCoverageInfo = getLinesCoverageInformationString(coverageInfo)[ CD ]
Line_12 $$ final StringBuilder builder = new StringBuilder()-->Line_16 $$ builder.append(", ").append(linesCoverageInfo)[ FD ]
Line_2 $$ public String getDirCoverageInformationString(@NotNull final PsiDirectory directory, @NotNull final CoverageSuitesBundle currentSuite, @NotNull final CoverageDataManager manager) -->Line_7 $$ if (manager.isSubCoverageActive()) [ FD ]
Line_2 $$ public String getDirCoverageInformationString(@NotNull final PsiDirectory directory, @NotNull final CoverageSuitesBundle currentSuite, @NotNull final CoverageDataManager manager) -->Line_10 $$ final String filesCoverageInfo = getFilesCoverageInformationString(coverageInfo)[ CD ]
Line_11 $$ if (filesCoverageInfo != null) -->Line_13 $$ builder.append(filesCoverageInfo)[ CD ]
Line_2 $$ public String getDirCoverageInformationString(@NotNull final PsiDirectory directory, @NotNull final CoverageSuitesBundle currentSuite, @NotNull final CoverageDataManager manager) -->Line_7 $$ if (manager.isSubCoverageActive()) [ CD ]
Line_12 $$ final StringBuilder builder = new StringBuilder()-->Line_13 $$ builder.append(filesCoverageInfo)[ FD ]
Line_2 $$ public String getDirCoverageInformationString(@NotNull final PsiDirectory directory, @NotNull final CoverageSuitesBundle currentSuite, @NotNull final CoverageDataManager manager) -->Line_3 $$ DirCoverageInfo coverageInfo = getDirCoverageInfo(directory, currentSuite)[ CD ]
Line_3 $$ DirCoverageInfo coverageInfo = getDirCoverageInfo(directory, currentSuite)-->Line_4 $$ if (coverageInfo == null) [ FD ]
Line_14 $$ final String linesCoverageInfo = getLinesCoverageInformationString(coverageInfo)-->Line_15 $$ if (linesCoverageInfo != null) [ FD ]
Line_3 $$ DirCoverageInfo coverageInfo = getDirCoverageInfo(directory, currentSuite)-->Line_10 $$ final String filesCoverageInfo = getFilesCoverageInformationString(coverageInfo)[ FD ]
Line_2 $$ public String getDirCoverageInformationString(@NotNull final PsiDirectory directory, @NotNull final CoverageSuitesBundle currentSuite, @NotNull final CoverageDataManager manager) -->Line_3 $$ DirCoverageInfo coverageInfo = getDirCoverageInfo(directory, currentSuite)[ FD ]
