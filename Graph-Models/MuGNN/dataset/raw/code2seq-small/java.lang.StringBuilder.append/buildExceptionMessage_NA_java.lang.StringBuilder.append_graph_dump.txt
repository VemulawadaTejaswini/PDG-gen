Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_10 $$ sb.append(" and")[ FD ]
Line_2 $$ private String buildExceptionMessage(List<String> invalidProperties, String beanName) -->Line_4 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_12 $$ sb.append(",")[ FD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_19 $$ return sb.toString()[ FD ]
Line_2 $$ private String buildExceptionMessage(List<String> invalidProperties, String beanName) -->Line_3 $$ int size = invalidProperties.size()[ FD ]
Line_6 $$ for (int i = 0; i < size; i++) -->Line_15 $$ sb.append(" '").append(propertyName).append("'")[ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_18 $$ sb.append(" required for bean '").append(beanName).append("'")[ FD ]
Line_2 $$ private String buildExceptionMessage(List<String> invalidProperties, String beanName) -->Line_3 $$ int size = invalidProperties.size()[ CD ]
Line_2 $$ private String buildExceptionMessage(List<String> invalidProperties, String beanName) -->Line_6 $$ for (int i = 0; i < size; i++) [ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_15 $$ sb.append(" '").append(propertyName).append("'")[ FD ]
Line_6 $$ for (int i = 0; i < size; i++) -->Line_9 $$ if (i == (size - 1)) [ FD ]
Line_2 $$ private String buildExceptionMessage(List<String> invalidProperties, String beanName) -->Line_5 $$ sb.append(size == 1 ? "Property" : "Properties")[ CD ]
Line_7 $$ String propertyName = invalidProperties.get(i)-->Line_15 $$ sb.append(" '").append(propertyName).append("'")[ FD ]
Line_2 $$ private String buildExceptionMessage(List<String> invalidProperties, String beanName) -->Line_18 $$ sb.append(" required for bean '").append(beanName).append("'")[ CD ]
Line_9 $$ if (i == (size - 1)) -->Line_10 $$ sb.append(" and")[ CD ]
Line_6 $$ for (int i = 0; i < size; i++) -->Line_7 $$ String propertyName = invalidProperties.get(i)[ CD ]
Line_8 $$ if (i > 0) -->Line_9 $$ if (i == (size - 1)) [ CD ]
Line_6 $$ for (int i = 0; i < size; i++) -->Line_8 $$ if (i > 0) [ CD ]
Line_6 $$ for (int i = 0; i < size; i++) -->Line_8 $$ if (i > 0) [ FD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_17 $$ sb.append(size == 1 ? " is" : " are")[ FD ]
Line_9 $$ if (i == (size - 1)) -->Line_12 $$ sb.append(",")[ CD ]
Line_2 $$ private String buildExceptionMessage(List<String> invalidProperties, String beanName) -->Line_17 $$ sb.append(size == 1 ? " is" : " are")[ CD ]
Line_2 $$ private String buildExceptionMessage(List<String> invalidProperties, String beanName) -->Line_7 $$ String propertyName = invalidProperties.get(i)[ FD ]
Line_3 $$ int size = invalidProperties.size()-->Line_6 $$ for (int i = 0; i < size; i++) [ FD ]
Line_2 $$ private String buildExceptionMessage(List<String> invalidProperties, String beanName) -->Line_19 $$ return sb.toString()[ CD ]
Line_2 $$ private String buildExceptionMessage(List<String> invalidProperties, String beanName) -->Line_18 $$ sb.append(" required for bean '").append(beanName).append("'")[ FD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_5 $$ sb.append(size == 1 ? "Property" : "Properties")[ FD ]
Line_6 $$ for (int i = 0; i < size; i++) -->Line_7 $$ String propertyName = invalidProperties.get(i)[ FD ]
