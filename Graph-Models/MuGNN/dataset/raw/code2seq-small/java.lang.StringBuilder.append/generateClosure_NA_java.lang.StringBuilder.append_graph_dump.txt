Line_4 $$ StringBuilder buffer = new StringBuilder()-->Line_12 $$ buffer.delete(buffer.length() - 1, buffer.length())[ FD ]
Line_2 $$ private GrClosableBlock generateClosure(@NotNull GrMethod method) -->Line_6 $$ GrParameter[] parameters = method.getParameters()[ CD ]
Line_7 $$ for (GrParameter parameter : parameters) -->Line_8 $$ buffer.append(parameter.getText())[ FD ]
Line_4 $$ StringBuilder buffer = new StringBuilder()-->Line_9 $$ buffer.append(',')[ FD ]
Line_2 $$ private GrClosableBlock generateClosure(@NotNull GrMethod method) -->Line_11 $$ if (parameters.length > 0)[ CD ]
Line_2 $$ private GrClosableBlock generateClosure(@NotNull GrMethod method) -->Line_14 $$ return factory.createClosureFromText(buffer.toString(), getFile())[ CD ]
Line_4 $$ StringBuilder buffer = new StringBuilder()-->Line_8 $$ buffer.append(parameter.getText())[ FD ]
Line_3 $$ GroovyPsiElementFactory factory = GroovyPsiElementFactory.getInstance(getProject())-->Line_14 $$ return factory.createClosureFromText(buffer.toString(), getFile())[ FD ]
Line_2 $$ private GrClosableBlock generateClosure(@NotNull GrMethod method) -->Line_3 $$ GroovyPsiElementFactory factory = GroovyPsiElementFactory.getInstance(getProject())[ CD ]
Line_11 $$ if (parameters.length > 0)-->Line_12 $$ buffer.delete(buffer.length() - 1, buffer.length())[ CD ]
Line_4 $$ StringBuilder buffer = new StringBuilder()-->Line_13 $$ buffer.append("->}")[ FD ]
Line_4 $$ StringBuilder buffer = new StringBuilder()-->Line_14 $$ return factory.createClosureFromText(buffer.toString(), getFile())[ FD ]
Line_4 $$ StringBuilder buffer = new StringBuilder()-->Line_5 $$ buffer.append('[ FD ]
Line_2 $$ private GrClosableBlock generateClosure(@NotNull GrMethod method) -->Line_13 $$ buffer.append("->}")[ CD ]
Line_2 $$ private GrClosableBlock generateClosure(@NotNull GrMethod method) -->Line_6 $$ GrParameter[] parameters = method.getParameters()[ FD ]
Line_2 $$ private GrClosableBlock generateClosure(@NotNull GrMethod method) -->Line_4 $$ StringBuilder buffer = new StringBuilder()[ CD ]
Line_2 $$ private GrClosableBlock generateClosure(@NotNull GrMethod method) -->Line_5 $$ buffer.append('[ CD ]
