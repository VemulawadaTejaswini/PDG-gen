Line_2 $$ public static String getMultiProjectDisplayName(@NotNull Project project) -->Line_25 $$ return result.toString()[ CD ]
Line_10 $$ Module primaryModule = getPrimaryModule(project)-->Line_11 $$ if (primaryModule == null) [ FD ]
Line_10 $$ Module primaryModule = getPrimaryModule(project)-->Line_12 $$ primaryModule = modules[0][ FD ]
Line_22 $$ if (modules.length > 2) -->Line_23 $$ result.append("...")[ CD ]
Line_16 $$ for (Module module : modules) -->Line_17 $$ if (module == primaryModule)[ FD ]
Line_12 $$ primaryModule = modules[0]-->Line_14 $$ final StringBuilder result = new StringBuilder(primaryModule.getName())[ FD ]
Line_14 $$ final StringBuilder result = new StringBuilder(primaryModule.getName())-->Line_23 $$ result.append("...")[ FD ]
Line_2 $$ public static String getMultiProjectDisplayName(@NotNull Project project) -->Line_15 $$ result.append(", ")[ CD ]
Line_14 $$ final StringBuilder result = new StringBuilder(primaryModule.getName())-->Line_19 $$ result.append(module.getName())[ FD ]
Line_2 $$ public static String getMultiProjectDisplayName(@NotNull Project project) -->Line_6 $$ final Module[] modules = ModuleManager.getInstance(project).getModules()[ FD ]
Line_11 $$ if (primaryModule == null) -->Line_12 $$ primaryModule = modules[0][ CD ]
Line_2 $$ public static String getMultiProjectDisplayName(@NotNull Project project) -->Line_3 $$ if (!ProjectAttachProcessor.canAttachToProject()) [ CD ]
Line_14 $$ final StringBuilder result = new StringBuilder(primaryModule.getName())-->Line_15 $$ result.append(", ")[ FD ]
Line_12 $$ primaryModule = modules[0]-->Line_17 $$ if (module == primaryModule)[ FD ]
Line_2 $$ public static String getMultiProjectDisplayName(@NotNull Project project) -->Line_11 $$ if (primaryModule == null) [ CD ]
Line_2 $$ public static String getMultiProjectDisplayName(@NotNull Project project) -->Line_10 $$ Module primaryModule = getPrimaryModule(project)[ FD ]
Line_2 $$ public static String getMultiProjectDisplayName(@NotNull Project project) -->Line_22 $$ if (modules.length > 2) [ CD ]
Line_7 $$ if (modules.length <= 1) -->Line_8 $$ return null[ CD ]
Line_16 $$ for (Module module : modules) -->Line_19 $$ result.append(module.getName())[ FD ]
Line_10 $$ Module primaryModule = getPrimaryModule(project)-->Line_14 $$ final StringBuilder result = new StringBuilder(primaryModule.getName())[ FD ]
Line_10 $$ Module primaryModule = getPrimaryModule(project)-->Line_17 $$ if (module == primaryModule)[ FD ]
Line_2 $$ public static String getMultiProjectDisplayName(@NotNull Project project) -->Line_14 $$ final StringBuilder result = new StringBuilder(primaryModule.getName())[ CD ]
Line_2 $$ public static String getMultiProjectDisplayName(@NotNull Project project) -->Line_7 $$ if (modules.length <= 1) [ CD ]
Line_3 $$ if (!ProjectAttachProcessor.canAttachToProject()) -->Line_4 $$ return null[ CD ]
Line_2 $$ public static String getMultiProjectDisplayName(@NotNull Project project) -->Line_6 $$ final Module[] modules = ModuleManager.getInstance(project).getModules()[ CD ]
Line_2 $$ public static String getMultiProjectDisplayName(@NotNull Project project) -->Line_10 $$ Module primaryModule = getPrimaryModule(project)[ CD ]
Line_14 $$ final StringBuilder result = new StringBuilder(primaryModule.getName())-->Line_25 $$ return result.toString()[ FD ]
