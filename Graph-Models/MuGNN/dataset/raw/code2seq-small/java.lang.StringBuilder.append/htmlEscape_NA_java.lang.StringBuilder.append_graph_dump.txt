Line_7 $$ StringBuilder escaped = new StringBuilder(input.length() * 2)-->Line_17 $$ return escaped.toString()[ FD ]
Line_2 $$ public static String htmlEscape(String input, String encoding) -->Line_4 $$ if (input == null) [ CD ]
Line_2 $$ public static String htmlEscape(String input, String encoding) -->Line_17 $$ return escaped.toString()[ CD ]
Line_8 $$ for (int i = 0; i < input.length(); i++) -->Line_9 $$ char character = input.charAt(i)[ FD ]
Line_10 $$ String reference = characterEntityReferences.convertToReference(character, encoding)-->Line_11 $$ if (reference != null) [ FD ]
Line_7 $$ StringBuilder escaped = new StringBuilder(input.length() * 2)-->Line_14 $$ escaped.append(character)[ FD ]
Line_2 $$ public static String htmlEscape(String input, String encoding) -->Line_7 $$ StringBuilder escaped = new StringBuilder(input.length() * 2)[ CD ]
Line_7 $$ StringBuilder escaped = new StringBuilder(input.length() * 2)-->Line_12 $$ escaped.append(reference)[ FD ]
Line_9 $$ char character = input.charAt(i)-->Line_14 $$ escaped.append(character)[ FD ]
Line_8 $$ for (int i = 0; i < input.length(); i++) -->Line_9 $$ char character = input.charAt(i)[ CD ]
Line_9 $$ char character = input.charAt(i)-->Line_10 $$ String reference = characterEntityReferences.convertToReference(character, encoding)[ FD ]
Line_8 $$ for (int i = 0; i < input.length(); i++) -->Line_10 $$ String reference = characterEntityReferences.convertToReference(character, encoding)[ CD ]
Line_2 $$ public static String htmlEscape(String input, String encoding) -->Line_10 $$ String reference = characterEntityReferences.convertToReference(character, encoding)[ FD ]
Line_11 $$ if (reference != null) -->Line_12 $$ escaped.append(reference)[ CD ]
Line_2 $$ public static String htmlEscape(String input, String encoding) -->Line_8 $$ for (int i = 0; i < input.length(); i++) [ FD ]
Line_2 $$ public static String htmlEscape(String input, String encoding) -->Line_8 $$ for (int i = 0; i < input.length(); i++) [ CD ]
Line_10 $$ String reference = characterEntityReferences.convertToReference(character, encoding)-->Line_12 $$ escaped.append(reference)[ FD ]
Line_11 $$ if (reference != null) -->Line_14 $$ escaped.append(character)[ CD ]
Line_2 $$ public static String htmlEscape(String input, String encoding) -->Line_7 $$ StringBuilder escaped = new StringBuilder(input.length() * 2)[ FD ]
Line_2 $$ public static String htmlEscape(String input, String encoding) -->Line_9 $$ char character = input.charAt(i)[ FD ]
Line_2 $$ public static String htmlEscape(String input, String encoding) -->Line_3 $$ Assert.notNull(encoding, "Encoding is required")[ FD ]
Line_4 $$ if (input == null) -->Line_5 $$ return null[ CD ]
Line_8 $$ for (int i = 0; i < input.length(); i++) -->Line_11 $$ if (reference != null) [ CD ]
Line_2 $$ public static String htmlEscape(String input, String encoding) -->Line_3 $$ Assert.notNull(encoding, "Encoding is required")[ CD ]
Line_2 $$ public static String htmlEscape(String input, String encoding) -->Line_4 $$ if (input == null) [ FD ]
