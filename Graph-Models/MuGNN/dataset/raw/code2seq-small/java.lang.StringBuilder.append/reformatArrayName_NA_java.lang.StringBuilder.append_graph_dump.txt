Line_10 $$ StringBuilder buffer = StringBuilderSpinAllocator.alloc()-->Line_25 $$ StringBuilderSpinAllocator.dispose(buffer)[ FD ]
Line_10 $$ StringBuilder buffer = StringBuilderSpinAllocator.alloc()-->Line_21 $$ buffer.append(';')[ FD ]
Line_12 $$ for (int i = 0; i < dims; i++) -->Line_13 $$ buffer.append('[')[ CD ]
Line_7 $$ className = className.substring(0, className.length() - 2)-->Line_15 $$ String primitiveSignature = JVMNameUtil.getPrimitiveSignature(className)[ FD ]
Line_2 $$ private static String reformatArrayName(String className) -->Line_6 $$ while (className.endsWith("[]")) [ CD ]
Line_10 $$ StringBuilder buffer = StringBuilderSpinAllocator.alloc()-->Line_17 $$ buffer.append(primitiveSignature)[ FD ]
Line_10 $$ StringBuilder buffer = StringBuilderSpinAllocator.alloc()-->Line_13 $$ buffer.append('[')[ FD ]
Line_15 $$ String primitiveSignature = JVMNameUtil.getPrimitiveSignature(className)-->Line_16 $$ if (primitiveSignature != null) [ FD ]
Line_5 $$ int dims = 0-->Line_12 $$ for (int i = 0; i < dims; i++) [ FD ]
Line_5 $$ int dims = 0-->Line_8 $$ dims++[ FD ]
Line_7 $$ className = className.substring(0, className.length() - 2)-->Line_20 $$ buffer.append(className)[ FD ]
Line_2 $$ private static String reformatArrayName(String className) -->Line_6 $$ while (className.endsWith("[]")) [ FD ]
Line_6 $$ while (className.endsWith("[]")) -->Line_7 $$ className = className.substring(0, className.length() - 2)[ CD ]
Line_2 $$ private static String reformatArrayName(String className) -->Line_7 $$ className = className.substring(0, className.length() - 2)[ FD ]
Line_16 $$ if (primitiveSignature != null) -->Line_19 $$ buffer.append('L')[ CD ]
Line_16 $$ if (primitiveSignature != null) -->Line_21 $$ buffer.append(';')[ CD ]
Line_15 $$ String primitiveSignature = JVMNameUtil.getPrimitiveSignature(className)-->Line_17 $$ buffer.append(primitiveSignature)[ FD ]
Line_2 $$ private static String reformatArrayName(String className) -->Line_10 $$ StringBuilder buffer = StringBuilderSpinAllocator.alloc()[ CD ]
Line_2 $$ private static String reformatArrayName(String className) -->Line_15 $$ String primitiveSignature = JVMNameUtil.getPrimitiveSignature(className)[ FD ]
Line_2 $$ private static String reformatArrayName(String className) -->Line_20 $$ buffer.append(className)[ FD ]
Line_16 $$ if (primitiveSignature != null) -->Line_20 $$ buffer.append(className)[ CD ]
Line_2 $$ private static String reformatArrayName(String className) -->Line_3 $$ if (className.indexOf('[') == -1)[ CD ]
Line_10 $$ StringBuilder buffer = StringBuilderSpinAllocator.alloc()-->Line_19 $$ buffer.append('L')[ FD ]
Line_3 $$ if (className.indexOf('[') == -1)-->Line_4 $$ return className[ CD ]
Line_10 $$ StringBuilder buffer = StringBuilderSpinAllocator.alloc()-->Line_23 $$ return buffer.toString()[ FD ]
Line_7 $$ className = className.substring(0, className.length() - 2)-->Line_6 $$ while (className.endsWith("[]")) [ FD ]
Line_2 $$ private static String reformatArrayName(String className) -->Line_5 $$ int dims = 0[ CD ]
Line_2 $$ private static String reformatArrayName(String className) -->Line_3 $$ if (className.indexOf('[') == -1)[ FD ]
Line_16 $$ if (primitiveSignature != null) -->Line_17 $$ buffer.append(primitiveSignature)[ CD ]
Line_10 $$ StringBuilder buffer = StringBuilderSpinAllocator.alloc()-->Line_20 $$ buffer.append(className)[ FD ]
Line_6 $$ while (className.endsWith("[]")) -->Line_8 $$ dims++[ CD ]
