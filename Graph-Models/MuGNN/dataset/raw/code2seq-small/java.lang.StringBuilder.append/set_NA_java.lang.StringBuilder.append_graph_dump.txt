Line_5 $$ int curlyOpen = 0-->Line_44 $$ curlyOpen--[ FD ]
Line_2 $$ public void set(String glob) -->Line_8 $$ for (int i = 0; i < len; i++) [ CD ]
Line_5 $$ int curlyOpen = 0-->Line_43 $$ if (curlyOpen > 0) [ FD ]
Line_6 $$ int len = glob.length()-->Line_12 $$ if (++i >= len) [ FD ]
Line_2 $$ public void set(String glob) -->Line_15 $$ regex.append(c).append(glob.charAt(i))[ FD ]
Line_3 $$ StringBuilder regex = new StringBuilder()-->Line_23 $$ regex.append(BACKSLASH)[ FD ]
Line_2 $$ public void set(String glob) -->Line_51 $$ error("Unclosed character class", glob, i)[ FD ]
Line_6 $$ int len = glob.length()-->Line_74 $$ error("Unclosed character class", glob, len)[ FD ]
Line_67 $$ setOpen = 0-->Line_53 $$ setOpen++[ FD ]
Line_2 $$ public void set(String glob) -->Line_5 $$ int curlyOpen = 0[ CD ]
Line_3 $$ StringBuilder regex = new StringBuilder()-->Line_64 $$ regex.append(setOpen > 0 && '[' == glob.charAt(i - 1) ? '^' : '!')[ FD ]
Line_2 $$ public void set(String glob) -->Line_4 $$ int setOpen = 0[ CD ]
Line_4 $$ int setOpen = 0-->Line_53 $$ setOpen++[ FD ]
Line_4 $$ int setOpen = 0-->Line_50 $$ if (setOpen > 0) [ FD ]
Line_3 $$ StringBuilder regex = new StringBuilder()-->Line_45 $$ regex.append(")")[ FD ]
Line_8 $$ for (int i = 0; i < len; i++) -->Line_51 $$ error("Unclosed character class", glob, i)[ FD ]
Line_5 $$ int curlyOpen = 0-->Line_36 $$ curlyOpen++[ FD ]
Line_9 $$ char c = glob.charAt(i)-->Line_71 $$ regex.append(c)[ FD ]
Line_4 $$ int setOpen = 0-->Line_67 $$ setOpen = 0[ FD ]
Line_8 $$ for (int i = 0; i < len; i++) -->Line_9 $$ char c = glob.charAt(i)[ CD ]
Line_2 $$ public void set(String glob) -->Line_3 $$ StringBuilder regex = new StringBuilder()[ CD ]
Line_8 $$ for (int i = 0; i < len; i++) -->Line_15 $$ regex.append(c).append(glob.charAt(i))[ FD ]
Line_58 $$ if (setOpen == 0) -->Line_59 $$ regex.append(BACKSLASH)[ CD ]
Line_2 $$ public void set(String glob) -->Line_73 $$ if (setOpen > 0) [ CD ]
Line_5 $$ int curlyOpen = 0-->Line_76 $$ if (curlyOpen > 0) [ FD ]
Line_4 $$ int setOpen = 0-->Line_73 $$ if (setOpen > 0) [ FD ]
Line_9 $$ char c = glob.charAt(i)-->Line_15 $$ regex.append(c).append(glob.charAt(i))[ FD ]
Line_76 $$ if (curlyOpen > 0) -->Line_77 $$ error("Unclosed group", glob, len)[ CD ]
Line_3 $$ StringBuilder regex = new StringBuilder()-->Line_26 $$ regex.append('.')[ FD ]
Line_2 $$ public void set(String glob) -->Line_74 $$ error("Unclosed character class", glob, len)[ FD ]
Line_43 $$ if (curlyOpen > 0) -->Line_45 $$ regex.append(")")[ CD ]
Line_3 $$ StringBuilder regex = new StringBuilder()-->Line_79 $$ compiled = Pattern.compile(regex.toString())[ FD ]
Line_2 $$ public void set(String glob) -->Line_6 $$ int len = glob.length()[ FD ]
Line_3 $$ StringBuilder regex = new StringBuilder()-->Line_35 $$ regex.append("(?:")[ FD ]
Line_3 $$ StringBuilder regex = new StringBuilder()-->Line_30 $$ regex.append('.')[ FD ]
Line_2 $$ public void set(String glob) -->Line_64 $$ regex.append(setOpen > 0 && '[' == glob.charAt(i - 1) ? '^' : '!')[ FD ]
Line_6 $$ int len = glob.length()-->Line_77 $$ error("Unclosed group", glob, len)[ FD ]
Line_8 $$ for (int i = 0; i < len; i++) -->Line_12 $$ if (++i >= len) [ FD ]
Line_2 $$ public void set(String glob) -->Line_13 $$ error("Missing escaped character", glob, i)[ FD ]
Line_2 $$ public void set(String glob) -->Line_77 $$ error("Unclosed group", glob, len)[ FD ]
Line_67 $$ setOpen = 0-->Line_58 $$ if (setOpen == 0) [ FD ]
Line_43 $$ if (curlyOpen > 0) -->Line_44 $$ curlyOpen--[ CD ]
Line_67 $$ setOpen = 0-->Line_50 $$ if (setOpen > 0) [ FD ]
Line_8 $$ for (int i = 0; i < len; i++) -->Line_9 $$ char c = glob.charAt(i)[ FD ]
Line_4 $$ int setOpen = 0-->Line_58 $$ if (setOpen == 0) [ FD ]
Line_2 $$ public void set(String glob) -->Line_6 $$ int len = glob.length()[ CD ]
Line_67 $$ setOpen = 0-->Line_73 $$ if (setOpen > 0) [ FD ]
Line_12 $$ if (++i >= len) -->Line_13 $$ error("Missing escaped character", glob, i)[ CD ]
Line_50 $$ if (setOpen > 0) -->Line_51 $$ error("Unclosed character class", glob, i)[ CD ]
Line_8 $$ for (int i = 0; i < len; i++) -->Line_71 $$ regex.append(c)[ CD ]
Line_3 $$ StringBuilder regex = new StringBuilder()-->Line_15 $$ regex.append(c).append(glob.charAt(i))[ FD ]
Line_3 $$ StringBuilder regex = new StringBuilder()-->Line_71 $$ regex.append(c)[ FD ]
Line_3 $$ StringBuilder regex = new StringBuilder()-->Line_59 $$ regex.append(BACKSLASH)[ FD ]
Line_73 $$ if (setOpen > 0) -->Line_74 $$ error("Unclosed character class", glob, len)[ CD ]
Line_8 $$ for (int i = 0; i < len; i++) -->Line_13 $$ error("Missing escaped character", glob, i)[ FD ]
Line_3 $$ StringBuilder regex = new StringBuilder()-->Line_40 $$ regex.append(curlyOpen > 0 ? '|' : c)[ FD ]
Line_2 $$ public void set(String glob) -->Line_76 $$ if (curlyOpen > 0) [ CD ]
Line_2 $$ public void set(String glob) -->Line_79 $$ compiled = Pattern.compile(regex.toString())[ CD ]
Line_6 $$ int len = glob.length()-->Line_8 $$ for (int i = 0; i < len; i++) [ FD ]
Line_2 $$ public void set(String glob) -->Line_9 $$ char c = glob.charAt(i)[ FD ]
