Line_3 $$ StringBuilder s = new StringBuilder()-->Line_9 $$ return s.toString()[ FD ]
Line_4 $$ for (int nodeIndex = 0; nodeIndex < nodesCount; nodeIndex++) -->Line_7 $$ s.append(graphLayout.getLayoutIndex(nodeIndex)).append(CommitParser.SEPARATOR).append(graphLayout.getOneOfHeadNodeIndex(nodeIndex))[ CD ]
Line_2 $$ public static String permanentGraphLayoutModelToStr(GraphLayout graphLayout, int nodesCount) -->Line_3 $$ StringBuilder s = new StringBuilder()[ CD ]
Line_2 $$ public static String permanentGraphLayoutModelToStr(GraphLayout graphLayout, int nodesCount) -->Line_7 $$ s.append(graphLayout.getLayoutIndex(nodeIndex)).append(CommitParser.SEPARATOR).append(graphLayout.getOneOfHeadNodeIndex(nodeIndex))[ FD ]
Line_5 $$ if (nodeIndex != 0)-->Line_6 $$ s.append("\n")[ CD ]
Line_3 $$ StringBuilder s = new StringBuilder()-->Line_7 $$ s.append(graphLayout.getLayoutIndex(nodeIndex)).append(CommitParser.SEPARATOR).append(graphLayout.getOneOfHeadNodeIndex(nodeIndex))[ FD ]
Line_2 $$ public static String permanentGraphLayoutModelToStr(GraphLayout graphLayout, int nodesCount) -->Line_9 $$ return s.toString()[ CD ]
Line_4 $$ for (int nodeIndex = 0; nodeIndex < nodesCount; nodeIndex++) -->Line_7 $$ s.append(graphLayout.getLayoutIndex(nodeIndex)).append(CommitParser.SEPARATOR).append(graphLayout.getOneOfHeadNodeIndex(nodeIndex))[ FD ]
Line_2 $$ public static String permanentGraphLayoutModelToStr(GraphLayout graphLayout, int nodesCount) -->Line_4 $$ for (int nodeIndex = 0; nodeIndex < nodesCount; nodeIndex++) [ CD ]
Line_4 $$ for (int nodeIndex = 0; nodeIndex < nodesCount; nodeIndex++) -->Line_5 $$ if (nodeIndex != 0)[ FD ]
Line_4 $$ for (int nodeIndex = 0; nodeIndex < nodesCount; nodeIndex++) -->Line_5 $$ if (nodeIndex != 0)[ CD ]
Line_2 $$ public static String permanentGraphLayoutModelToStr(GraphLayout graphLayout, int nodesCount) -->Line_4 $$ for (int nodeIndex = 0; nodeIndex < nodesCount; nodeIndex++) [ FD ]
Line_3 $$ StringBuilder s = new StringBuilder()-->Line_6 $$ s.append("\n")[ FD ]
