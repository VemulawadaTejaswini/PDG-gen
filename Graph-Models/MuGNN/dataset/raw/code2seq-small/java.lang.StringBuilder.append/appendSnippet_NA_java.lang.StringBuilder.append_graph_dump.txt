Line_3 $$ if (!areTokensValid(from, to, offending))-->Line_4 $$ return[ CD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_8 $$ builder.append(" (")[ FD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_16 $$ builder.append(lines[i])[ FD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_13 $$ lines[lineIndex(to)] = toEnd >= toLine.length() ? toLine : toLine.substring(0, toEnd)[ FD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_15 $$ lines[lineIndex(from)] = lines[lineIndex(from)].substring(from.getCharPositionInLine())[ CD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_18 $$ builder.append("...")[ FD ]
Line_12 $$ int toEnd = getLastCharPositionInLine(to)-->Line_13 $$ lines[lineIndex(to)] = toEnd >= toLine.length() ? toLine : toLine.substring(0, toEnd)[ FD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_16 $$ for (int i = lineIndex(from), m = lineIndex(to); i <= m; i++) builder.append(lines[i])[ CD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_15 $$ lines[lineIndex(from)] = lines[lineIndex(from)].substring(from.getCharPositionInLine())[ FD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_19 $$ builder.append(")")[ FD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_6 $$ boolean includeQueryStart = (from.getLine() == 1) && (from.getCharPositionInLine() == 0)[ CD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_14 $$ lines[lineIndex(offending)] = highlightToken(lines[lineIndex(offending)], offending)[ FD ]
Line_17 $$ if (!includeQueryEnd)-->Line_18 $$ builder.append("...")[ CD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_12 $$ int toEnd = getLastCharPositionInLine(to)[ FD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_7 $$ boolean includeQueryEnd = (to.getLine() == lines.length) && (getLastCharPositionInLine(to) == lines[lines.length - 1].length())[ CD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_19 $$ builder.append(")")[ CD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_9 $$ if (!includeQueryStart)[ CD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_3 $$ if (!areTokensValid(from, to, offending))[ CD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_7 $$ boolean includeQueryEnd = (to.getLine() == lines.length) && (getLastCharPositionInLine(to) == lines[lines.length - 1].length())[ FD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_13 $$ lines[lineIndex(to)] = toEnd >= toLine.length() ? toLine : toLine.substring(0, toEnd)[ CD ]
Line_7 $$ boolean includeQueryEnd = (to.getLine() == lines.length) && (getLastCharPositionInLine(to) == lines[lines.length - 1].length())-->Line_17 $$ if (!includeQueryEnd)[ FD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_11 $$ String toLine = lines[lineIndex(to)][ FD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_17 $$ if (!includeQueryEnd)[ CD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_12 $$ int toEnd = getLastCharPositionInLine(to)[ CD ]
Line_9 $$ if (!includeQueryStart)-->Line_10 $$ builder.append("...")[ CD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_3 $$ if (!areTokensValid(from, to, offending))[ FD ]
Line_11 $$ String toLine = lines[lineIndex(to)]-->Line_13 $$ lines[lineIndex(to)] = toEnd >= toLine.length() ? toLine : toLine.substring(0, toEnd)[ FD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_8 $$ builder.append(" (")[ CD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_6 $$ boolean includeQueryStart = (from.getLine() == 1) && (from.getCharPositionInLine() == 0)[ FD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_16 $$ for (int i = lineIndex(from), m = lineIndex(to); i <= m; i++) builder.append(lines[i])[ FD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_5 $$ String[] lines = query.split("\n")[ CD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_11 $$ String toLine = lines[lineIndex(to)][ CD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_10 $$ builder.append("...")[ FD ]
Line_2 $$ final void appendSnippet(StringBuilder builder, Token from, Token to, Token offending) -->Line_14 $$ lines[lineIndex(offending)] = highlightToken(lines[lineIndex(offending)], offending)[ CD ]
Line_6 $$ boolean includeQueryStart = (from.getLine() == 1) && (from.getCharPositionInLine() == 0)-->Line_9 $$ if (!includeQueryStart)[ FD ]
