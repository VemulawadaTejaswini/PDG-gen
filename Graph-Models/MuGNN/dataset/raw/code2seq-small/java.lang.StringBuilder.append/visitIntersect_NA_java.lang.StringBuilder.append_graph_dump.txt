Line_4 $$ while (relations.hasNext()) -->Line_6 $$ if (relations.hasNext()) [ CD ]
Line_3 $$ Iterator<Relation> relations = node.getRelations().iterator()-->Line_6 $$ if (relations.hasNext()) [ FD ]
Line_2 $$ protected Void visitIntersect(Intersect node, Integer indent) -->Line_13 $$ return null[ CD ]
Line_2 $$ protected Void visitIntersect(Intersect node, Integer indent) -->Line_4 $$ while (relations.hasNext()) [ CD ]
Line_2 $$ protected Void visitIntersect(Intersect node, Integer indent) -->Line_8 $$ if (!node.isDistinct()) [ FD ]
Line_8 $$ if (!node.isDistinct()) -->Line_9 $$ builder.append("ALL ")[ CD ]
Line_6 $$ if (relations.hasNext()) -->Line_7 $$ builder.append("INTERSECT ")[ CD ]
Line_3 $$ Iterator<Relation> relations = node.getRelations().iterator()-->Line_4 $$ while (relations.hasNext()) [ FD ]
Line_4 $$ while (relations.hasNext()) -->Line_5 $$ processRelation(relations.next(), indent)[ CD ]
Line_2 $$ protected Void visitIntersect(Intersect node, Integer indent) -->Line_5 $$ processRelation(relations.next(), indent)[ FD ]
Line_6 $$ if (relations.hasNext()) -->Line_8 $$ if (!node.isDistinct()) [ CD ]
Line_2 $$ protected Void visitIntersect(Intersect node, Integer indent) -->Line_3 $$ Iterator<Relation> relations = node.getRelations().iterator()[ CD ]
Line_3 $$ Iterator<Relation> relations = node.getRelations().iterator()-->Line_5 $$ processRelation(relations.next(), indent)[ FD ]
Line_2 $$ protected Void visitIntersect(Intersect node, Integer indent) -->Line_3 $$ Iterator<Relation> relations = node.getRelations().iterator()[ FD ]
