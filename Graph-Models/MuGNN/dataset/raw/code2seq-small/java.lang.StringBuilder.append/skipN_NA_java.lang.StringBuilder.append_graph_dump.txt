Line_2 $$ private static String skipN(final String path, final int num) -->Line_9 $$ return sb.toString()[ CD ]
Line_5 $$ for (int i = num; i < pieces.length; i++) -->Line_7 $$ sb.append('/').append(piece)[ CD ]
Line_4 $$ final StringBuilder sb = new StringBuilder()-->Line_9 $$ return sb.toString()[ FD ]
Line_6 $$ final String piece = pieces[i]-->Line_7 $$ sb.append('/').append(piece)[ FD ]
Line_2 $$ private static String skipN(final String path, final int num) -->Line_5 $$ for (int i = num; i < pieces.length; i++) [ CD ]
Line_4 $$ final StringBuilder sb = new StringBuilder()-->Line_7 $$ sb.append('/').append(piece)[ FD ]
Line_5 $$ for (int i = num; i < pieces.length; i++) -->Line_6 $$ final String piece = pieces[i][ CD ]
Line_2 $$ private static String skipN(final String path, final int num) -->Line_3 $$ final String[] pieces = path.split("/")[ FD ]
Line_2 $$ private static String skipN(final String path, final int num) -->Line_3 $$ final String[] pieces = path.split("/")[ CD ]
Line_2 $$ private static String skipN(final String path, final int num) -->Line_4 $$ final StringBuilder sb = new StringBuilder()[ CD ]
