Line_2 $$ protected String formatOneLine() -->Line_3 $$ StringBuilder builder = new StringBuilder()[ CD ]
Line_2 $$ protected String formatOneLine() -->Line_9 $$ builder.append(methodName).append("(").append(Joiner.on(", ").join(parameters)).append(")")[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_9 $$ builder.append(methodName).append("(").append(Joiner.on(", ").join(parameters)).append(")")[ FD ]
Line_2 $$ protected String formatOneLine() -->Line_8 $$ builder.append("]=>")[ CD ]
Line_5 $$ if (!bootstrapArgs.isEmpty()) -->Line_6 $$ builder.append("(").append(Joiner.on(", ").join(transform(bootstrapArgs, ConstantByteCodeExpression::<>renderConstant))).append(")")[ CD ]
Line_2 $$ protected String formatOneLine() -->Line_10 $$ return builder.toString()[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_8 $$ builder.append("]=>")[ FD ]
Line_2 $$ protected String formatOneLine() -->Line_4 $$ builder.append("[").append(bootstrapMethod.getName())[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_10 $$ return builder.toString()[ FD ]
Line_2 $$ protected String formatOneLine() -->Line_5 $$ if (!bootstrapArgs.isEmpty()) [ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_6 $$ builder.append("(").append(Joiner.on(", ").join(transform(bootstrapArgs, ConstantByteCodeExpression::<>renderConstant))).append(")")[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_4 $$ builder.append("[").append(bootstrapMethod.getName())[ FD ]
