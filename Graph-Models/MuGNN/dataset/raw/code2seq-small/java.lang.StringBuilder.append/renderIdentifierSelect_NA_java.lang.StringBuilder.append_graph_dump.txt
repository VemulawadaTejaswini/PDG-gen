Line_7 $$ for (int i = 0; i < idColumnNames.length; i++) -->Line_9 $$ if (i != idColumnNames.length - 1) [ CD ]
Line_4 $$ if (fromElement.getFromClause().isSubQuery()) -->Line_5 $$ String[] idColumnNames = (persister != null) ? ((Queryable) persister).getIdentifierColumnNames() : new String[0][ CD ]
Line_2 $$ String renderIdentifierSelect(int size, int k) -->Line_4 $$ if (fromElement.getFromClause().isSubQuery()) [ CD ]
Line_7 $$ for (int i = 0; i < idColumnNames.length; i++) -->Line_9 $$ if (i != idColumnNames.length - 1) [ FD ]
Line_2 $$ String renderIdentifierSelect(int size, int k) -->Line_3 $$ checkInitialized()[ CD ]
Line_4 $$ if (fromElement.getFromClause().isSubQuery()) -->Line_15 $$ if (persister == null) [ CD ]
Line_2 $$ String renderIdentifierSelect(int size, int k) -->Line_18 $$ String fragment = ((Queryable) persister).identifierSelectFragment(getTableAlias(), getSuffix(size, k))[ FD ]
Line_4 $$ if (fromElement.getFromClause().isSubQuery()) -->Line_19 $$ return trimLeadingCommaAndSpaces(fragment)[ CD ]
Line_4 $$ if (fromElement.getFromClause().isSubQuery()) -->Line_13 $$ return buf.toString()[ CD ]
Line_9 $$ if (i != idColumnNames.length - 1) -->Line_10 $$ buf.append(", ")[ CD ]
Line_4 $$ if (fromElement.getFromClause().isSubQuery()) -->Line_6 $$ StringBuilder buf = new StringBuilder()[ CD ]
Line_4 $$ if (fromElement.getFromClause().isSubQuery()) -->Line_7 $$ for (int i = 0; i < idColumnNames.length; i++) [ CD ]
Line_6 $$ StringBuilder buf = new StringBuilder()-->Line_10 $$ buf.append(", ")[ FD ]
Line_4 $$ if (fromElement.getFromClause().isSubQuery()) -->Line_18 $$ String fragment = ((Queryable) persister).identifierSelectFragment(getTableAlias(), getSuffix(size, k))[ CD ]
Line_6 $$ StringBuilder buf = new StringBuilder()-->Line_13 $$ return buf.toString()[ FD ]
Line_7 $$ for (int i = 0; i < idColumnNames.length; i++) -->Line_8 $$ buf.append(fromElement.getTableAlias()).append('.').append(idColumnNames[i])[ CD ]
Line_6 $$ StringBuilder buf = new StringBuilder()-->Line_8 $$ buf.append(fromElement.getTableAlias()).append('.').append(idColumnNames[i])[ FD ]
Line_18 $$ String fragment = ((Queryable) persister).identifierSelectFragment(getTableAlias(), getSuffix(size, k))-->Line_19 $$ return trimLeadingCommaAndSpaces(fragment)[ FD ]
