Line_2 $$ private static int eatTypedVarCondition(int index, String pattern, StringBuilder miscBuffer, MatchVariableConstraint constraint) -->Line_14 $$ ++index[ FD ]
Line_2 $$ private static int eatTypedVarCondition(int index, String pattern, StringBuilder miscBuffer, MatchVariableConstraint constraint) -->Line_15 $$ if (index >= length)[ FD ]
Line_3 $$ final int length = pattern.length()-->Line_15 $$ if (index >= length)[ FD ]
Line_2 $$ private static int eatTypedVarCondition(int index, String pattern, StringBuilder miscBuffer, MatchVariableConstraint constraint) -->Line_23 $$ ch = pattern.charAt(index)[ FD ]
Line_22 $$ while (++index < length) -->Line_30 $$ miscBuffer.append(ch)[ CD ]
Line_19 $$ if (ch == '[') -->Line_20 $$ miscBuffer.setLength(0)[ CD ]
Line_19 $$ if (ch == '[') -->Line_34 $$ if (ch != ']')[ CD ]
Line_2 $$ private static int eatTypedVarCondition(int index, String pattern, StringBuilder miscBuffer, MatchVariableConstraint constraint) -->Line_19 $$ if (ch == '[') [ CD ]
Line_22 $$ while (++index < length) -->Line_24 $$ if (pattern.charAt(index - 1) != '\\') [ CD ]
Line_2 $$ private static int eatTypedVarCondition(int index, String pattern, StringBuilder miscBuffer, MatchVariableConstraint constraint) -->Line_40 $$ index = handleRegExp(index, pattern, miscBuffer, constraint)[ FD ]
Line_19 $$ if (ch == '[') -->Line_22 $$ while (++index < length) [ CD ]
Line_4 $$ char ch = pattern.charAt(index)-->Line_25 $$ if (ch == '"')[ FD ]
Line_4 $$ char ch = pattern.charAt(index)-->Line_34 $$ if (ch != ']')[ FD ]
Line_25 $$ if (ch == '"')-->Line_27 $$ if (ch == ']' && !quoted)[ CD ]
Line_23 $$ ch = pattern.charAt(index)-->Line_34 $$ if (ch != ']')[ FD ]
Line_2 $$ private static int eatTypedVarCondition(int index, String pattern, StringBuilder miscBuffer, MatchVariableConstraint constraint) -->Line_17 $$ ch = pattern.charAt(index)[ FD ]
Line_4 $$ char ch = pattern.charAt(index)-->Line_23 $$ ch = pattern.charAt(index)[ FD ]
Line_19 $$ if (ch == '[') -->Line_21 $$ boolean quoted = false[ CD ]
Line_25 $$ if (ch == '"')-->Line_26 $$ quoted = !quoted[ CD ]
Line_19 $$ if (ch == '[') -->Line_32 $$ if (quoted)[ CD ]
Line_17 $$ ch = pattern.charAt(index)-->Line_30 $$ miscBuffer.append(ch)[ FD ]
Line_5 $$ if (ch == '+' || ch == '*') -->Line_14 $$ ++index[ CD ]
Line_21 $$ boolean quoted = false-->Line_27 $$ if (ch == ']' && !quoted)[ FD ]
Line_17 $$ ch = pattern.charAt(index)-->Line_34 $$ if (ch != ']')[ FD ]
Line_5 $$ if (ch == '+' || ch == '*') -->Line_15 $$ if (index >= length)[ CD ]
Line_2 $$ private static int eatTypedVarCondition(int index, String pattern, StringBuilder miscBuffer, MatchVariableConstraint constraint) -->Line_11 $$ constraint.setWithinHierarchy(true)[ FD ]
Line_19 $$ if (ch == '[') -->Line_36 $$ ++index[ CD ]
Line_2 $$ private static int eatTypedVarCondition(int index, String pattern, StringBuilder miscBuffer, MatchVariableConstraint constraint) -->Line_3 $$ final int length = pattern.length()[ CD ]
Line_2 $$ private static int eatTypedVarCondition(int index, String pattern, StringBuilder miscBuffer, MatchVariableConstraint constraint) -->Line_5 $$ if (ch == '+' || ch == '*') [ CD ]
Line_2 $$ private static int eatTypedVarCondition(int index, String pattern, StringBuilder miscBuffer, MatchVariableConstraint constraint) -->Line_4 $$ char ch = pattern.charAt(index)[ FD ]
Line_2 $$ private static int eatTypedVarCondition(int index, String pattern, StringBuilder miscBuffer, MatchVariableConstraint constraint) -->Line_30 $$ miscBuffer.append(ch)[ FD ]
Line_19 $$ if (ch == '[') -->Line_40 $$ index = handleRegExp(index, pattern, miscBuffer, constraint)[ CD ]
Line_19 $$ if (ch == '[') -->Line_37 $$ parseCondition(constraint, miscBuffer.toString())[ CD ]
Line_23 $$ ch = pattern.charAt(index)-->Line_30 $$ miscBuffer.append(ch)[ FD ]
Line_4 $$ char ch = pattern.charAt(index)-->Line_17 $$ ch = pattern.charAt(index)[ FD ]
Line_2 $$ private static int eatTypedVarCondition(int index, String pattern, StringBuilder miscBuffer, MatchVariableConstraint constraint) -->Line_20 $$ miscBuffer.setLength(0)[ FD ]
Line_2 $$ private static int eatTypedVarCondition(int index, String pattern, StringBuilder miscBuffer, MatchVariableConstraint constraint) -->Line_8 $$ constraint.setStrictlyWithinHierarchy(true)[ FD ]
Line_3 $$ final int length = pattern.length()-->Line_22 $$ while (++index < length) [ FD ]
Line_17 $$ ch = pattern.charAt(index)-->Line_25 $$ if (ch == '"')[ FD ]
Line_22 $$ while (++index < length) -->Line_23 $$ ch = pattern.charAt(index)[ CD ]
Line_2 $$ private static int eatTypedVarCondition(int index, String pattern, StringBuilder miscBuffer, MatchVariableConstraint constraint) -->Line_3 $$ final int length = pattern.length()[ FD ]
Line_17 $$ ch = pattern.charAt(index)-->Line_19 $$ if (ch == '[') [ FD ]
Line_26 $$ quoted = !quoted-->Line_27 $$ if (ch == ']' && !quoted)[ FD ]
Line_2 $$ private static int eatTypedVarCondition(int index, String pattern, StringBuilder miscBuffer, MatchVariableConstraint constraint) -->Line_4 $$ char ch = pattern.charAt(index)[ CD ]
Line_23 $$ ch = pattern.charAt(index)-->Line_25 $$ if (ch == '"')[ FD ]
Line_2 $$ private static int eatTypedVarCondition(int index, String pattern, StringBuilder miscBuffer, MatchVariableConstraint constraint) -->Line_39 $$ miscBuffer.setLength(0)[ FD ]
Line_2 $$ private static int eatTypedVarCondition(int index, String pattern, StringBuilder miscBuffer, MatchVariableConstraint constraint) -->Line_42 $$ return index[ CD ]
Line_17 $$ ch = pattern.charAt(index)-->Line_23 $$ ch = pattern.charAt(index)[ FD ]
Line_2 $$ private static int eatTypedVarCondition(int index, String pattern, StringBuilder miscBuffer, MatchVariableConstraint constraint) -->Line_37 $$ parseCondition(constraint, miscBuffer.toString())[ FD ]
Line_4 $$ char ch = pattern.charAt(index)-->Line_16 $$ throw new MalformedPatternException(SSRBundle.message("error.expected.condition", ch))[ FD ]
Line_24 $$ if (pattern.charAt(index - 1) != '\\') -->Line_25 $$ if (ch == '"')[ CD ]
Line_2 $$ private static int eatTypedVarCondition(int index, String pattern, StringBuilder miscBuffer, MatchVariableConstraint constraint) -->Line_24 $$ if (pattern.charAt(index - 1) != '\\') [ FD ]
Line_21 $$ boolean quoted = false-->Line_26 $$ quoted = !quoted[ FD ]
Line_2 $$ private static int eatTypedVarCondition(int index, String pattern, StringBuilder miscBuffer, MatchVariableConstraint constraint) -->Line_36 $$ ++index[ FD ]
Line_4 $$ char ch = pattern.charAt(index)-->Line_30 $$ miscBuffer.append(ch)[ FD ]
Line_4 $$ char ch = pattern.charAt(index)-->Line_19 $$ if (ch == '[') [ FD ]
Line_5 $$ if (ch == '+' || ch == '*') -->Line_17 $$ ch = pattern.charAt(index)[ CD ]
Line_19 $$ if (ch == '[') -->Line_39 $$ miscBuffer.setLength(0)[ CD ]
Line_2 $$ private static int eatTypedVarCondition(int index, String pattern, StringBuilder miscBuffer, MatchVariableConstraint constraint) -->Line_22 $$ while (++index < length) [ FD ]
