Line_20 $$ for (int propIdx = 0; propIdx < naturalIdPropertyIndexes.length; propIdx++) -->Line_21 $$ valuesIndex++[ CD ]
Line_13 $$ final String rootAlias = getRootAlias()-->Line_26 $$ final String tableAlias = generateTableAlias(rootAlias, propertyTableNumbers[naturalIdIdx])[ FD ]
Line_20 $$ for (int propIdx = 0; propIdx < naturalIdPropertyIndexes.length; propIdx++) -->Line_29 $$ if (valueNullness != null && valueNullness[valuesIndex]) [ CD ]
Line_16 $$ final StringBuilder whereClause = new StringBuilder()-->Line_36 $$ return select.setOuterJoins("", "").setWhereClause(whereClause.toString()).toStatementString()[ FD ]
Line_19 $$ int valuesIndex = -1-->Line_21 $$ valuesIndex++[ FD ]
Line_5 $$ if (rootPersister instanceof AbstractEntityPersister) -->Line_6 $$ return ((AbstractEntityPersister) rootPersister).generateEntityIdByNaturalIdSql(valueNullness)[ CD ]
Line_2 $$ private String generateEntityIdByNaturalIdSql(boolean[] valueNullness) -->Line_19 $$ int valuesIndex = -1[ CD ]
Line_20 $$ for (int propIdx = 0; propIdx < naturalIdPropertyIndexes.length; propIdx++) -->Line_22 $$ if (propIdx > 0) [ CD ]
Line_2 $$ private String generateEntityIdByNaturalIdSql(boolean[] valueNullness) -->Line_4 $$ if (rootPersister != this) [ CD ]
Line_25 $$ final int naturalIdIdx = naturalIdPropertyIndexes[propIdx]-->Line_27 $$ final String[] propertyColumnNames = getPropertyColumnNames(naturalIdIdx)[ FD ]
Line_28 $$ final String[] aliasedPropertyColumns = StringHelper.qualify(tableAlias, propertyColumnNames)-->Line_30 $$ whereClause.append(StringHelper.join(" is null and ", aliasedPropertyColumns)).append(" is null")[ FD ]
Line_2 $$ private String generateEntityIdByNaturalIdSql(boolean[] valueNullness) -->Line_15 $$ select.setFromClause(fromTableFragment(rootAlias) + fromJoinFragment(rootAlias, true, false))[ CD ]
Line_10 $$ if (getFactory().getSessionFactoryOptions().isCommentsEnabled()) -->Line_11 $$ select.setComment("get current natural-id->entity-id state " + getEntityName())[ CD ]
Line_4 $$ if (rootPersister != this) -->Line_5 $$ if (rootPersister instanceof AbstractEntityPersister) [ CD ]
Line_2 $$ private String generateEntityIdByNaturalIdSql(boolean[] valueNullness) -->Line_10 $$ if (getFactory().getSessionFactoryOptions().isCommentsEnabled()) [ CD ]
Line_13 $$ final String rootAlias = getRootAlias()-->Line_14 $$ select.setSelectClause(identifierSelectFragment(rootAlias, ""))[ FD ]
Line_9 $$ Select select = new Select(getFactory().getDialect())-->Line_11 $$ select.setComment("get current natural-id->entity-id state " + getEntityName())[ FD ]
Line_20 $$ for (int propIdx = 0; propIdx < naturalIdPropertyIndexes.length; propIdx++) -->Line_26 $$ final String tableAlias = generateTableAlias(rootAlias, propertyTableNumbers[naturalIdIdx])[ CD ]
Line_29 $$ if (valueNullness != null && valueNullness[valuesIndex]) -->Line_32 $$ whereClause.append(StringHelper.join("=? and ", aliasedPropertyColumns)).append("=?")[ CD ]
Line_3 $$ EntityPersister rootPersister = getFactory().getEntityPersister(getRootEntityName())-->Line_4 $$ if (rootPersister != this) [ FD ]
Line_16 $$ final StringBuilder whereClause = new StringBuilder()-->Line_35 $$ whereClause.append(whereJoinFragment(getRootAlias(), true, false))[ FD ]
Line_26 $$ final String tableAlias = generateTableAlias(rootAlias, propertyTableNumbers[naturalIdIdx])-->Line_28 $$ final String[] aliasedPropertyColumns = StringHelper.qualify(tableAlias, propertyColumnNames)[ FD ]
Line_2 $$ private String generateEntityIdByNaturalIdSql(boolean[] valueNullness) -->Line_14 $$ select.setSelectClause(identifierSelectFragment(rootAlias, ""))[ CD ]
Line_2 $$ private String generateEntityIdByNaturalIdSql(boolean[] valueNullness) -->Line_18 $$ final int[] naturalIdPropertyIndexes = this.getNaturalIdentifierProperties()[ CD ]
Line_9 $$ Select select = new Select(getFactory().getDialect())-->Line_36 $$ return select.setOuterJoins("", "").setWhereClause(whereClause.toString()).toStatementString()[ FD ]
Line_2 $$ private String generateEntityIdByNaturalIdSql(boolean[] valueNullness) -->Line_9 $$ Select select = new Select(getFactory().getDialect())[ CD ]
Line_13 $$ final String rootAlias = getRootAlias()-->Line_15 $$ select.setFromClause(fromTableFragment(rootAlias) + fromJoinFragment(rootAlias, true, false))[ FD ]
Line_28 $$ final String[] aliasedPropertyColumns = StringHelper.qualify(tableAlias, propertyColumnNames)-->Line_32 $$ whereClause.append(StringHelper.join("=? and ", aliasedPropertyColumns)).append("=?")[ FD ]
Line_2 $$ private String generateEntityIdByNaturalIdSql(boolean[] valueNullness) -->Line_35 $$ whereClause.append(whereJoinFragment(getRootAlias(), true, false))[ CD ]
Line_16 $$ final StringBuilder whereClause = new StringBuilder()-->Line_30 $$ whereClause.append(StringHelper.join(" is null and ", aliasedPropertyColumns)).append(" is null")[ FD ]
Line_16 $$ final StringBuilder whereClause = new StringBuilder()-->Line_32 $$ whereClause.append(StringHelper.join("=? and ", aliasedPropertyColumns)).append("=?")[ FD ]
Line_2 $$ private String generateEntityIdByNaturalIdSql(boolean[] valueNullness) -->Line_3 $$ EntityPersister rootPersister = getFactory().getEntityPersister(getRootEntityName())[ CD ]
Line_9 $$ Select select = new Select(getFactory().getDialect())-->Line_14 $$ select.setSelectClause(identifierSelectFragment(rootAlias, ""))[ FD ]
Line_20 $$ for (int propIdx = 0; propIdx < naturalIdPropertyIndexes.length; propIdx++) -->Line_28 $$ final String[] aliasedPropertyColumns = StringHelper.qualify(tableAlias, propertyColumnNames)[ CD ]
Line_2 $$ private String generateEntityIdByNaturalIdSql(boolean[] valueNullness) -->Line_20 $$ for (int propIdx = 0; propIdx < naturalIdPropertyIndexes.length; propIdx++) [ CD ]
Line_20 $$ for (int propIdx = 0; propIdx < naturalIdPropertyIndexes.length; propIdx++) -->Line_25 $$ final int naturalIdIdx = naturalIdPropertyIndexes[propIdx][ CD ]
Line_2 $$ private String generateEntityIdByNaturalIdSql(boolean[] valueNullness) -->Line_36 $$ return select.setOuterJoins("", "").setWhereClause(whereClause.toString()).toStatementString()[ CD ]
Line_20 $$ for (int propIdx = 0; propIdx < naturalIdPropertyIndexes.length; propIdx++) -->Line_22 $$ if (propIdx > 0) [ FD ]
Line_9 $$ Select select = new Select(getFactory().getDialect())-->Line_15 $$ select.setFromClause(fromTableFragment(rootAlias) + fromJoinFragment(rootAlias, true, false))[ FD ]
Line_29 $$ if (valueNullness != null && valueNullness[valuesIndex]) -->Line_30 $$ whereClause.append(StringHelper.join(" is null and ", aliasedPropertyColumns)).append(" is null")[ CD ]
Line_3 $$ EntityPersister rootPersister = getFactory().getEntityPersister(getRootEntityName())-->Line_5 $$ if (rootPersister instanceof AbstractEntityPersister) [ FD ]
Line_27 $$ final String[] propertyColumnNames = getPropertyColumnNames(naturalIdIdx)-->Line_28 $$ final String[] aliasedPropertyColumns = StringHelper.qualify(tableAlias, propertyColumnNames)[ FD ]
Line_2 $$ private String generateEntityIdByNaturalIdSql(boolean[] valueNullness) -->Line_16 $$ final StringBuilder whereClause = new StringBuilder()[ CD ]
Line_2 $$ private String generateEntityIdByNaturalIdSql(boolean[] valueNullness) -->Line_13 $$ final String rootAlias = getRootAlias()[ CD ]
Line_20 $$ for (int propIdx = 0; propIdx < naturalIdPropertyIndexes.length; propIdx++) -->Line_27 $$ final String[] propertyColumnNames = getPropertyColumnNames(naturalIdIdx)[ CD ]
Line_16 $$ final StringBuilder whereClause = new StringBuilder()-->Line_23 $$ whereClause.append(" and ")[ FD ]
Line_2 $$ private String generateEntityIdByNaturalIdSql(boolean[] valueNullness) -->Line_17 $$ final int[] propertyTableNumbers = getPropertyTableNumbers()[ CD ]
Line_2 $$ private String generateEntityIdByNaturalIdSql(boolean[] valueNullness) -->Line_6 $$ return ((AbstractEntityPersister) rootPersister).generateEntityIdByNaturalIdSql(valueNullness)[ FD ]
Line_22 $$ if (propIdx > 0) -->Line_23 $$ whereClause.append(" and ")[ CD ]
