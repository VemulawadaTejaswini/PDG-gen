Line_3 $$ long count = (int) (percent * width)-->Line_7 $$ for (int i = 0; i < count; i++) [ FD ]
Line_4 $$ count = Math.min(width, count)-->Line_7 $$ for (int i = 0; i < count; i++) [ FD ]
Line_2 $$ public static Slice bar(@SqlType(StandardTypes.DOUBLE) double percent, @SqlType(StandardTypes.BIGINT) long width, @SqlType(ColorType.NAME) long lowColor, @SqlType(ColorType.NAME) long highColor) -->Line_5 $$ count = Math.max(0, count)[ CD ]
Line_2 $$ public static Slice bar(@SqlType(StandardTypes.DOUBLE) double percent, @SqlType(StandardTypes.BIGINT) long width, @SqlType(ColorType.NAME) long lowColor, @SqlType(ColorType.NAME) long highColor) -->Line_4 $$ count = Math.min(width, count)[ CD ]
Line_2 $$ public static Slice bar(@SqlType(StandardTypes.DOUBLE) double percent, @SqlType(StandardTypes.BIGINT) long width, @SqlType(ColorType.NAME) long lowColor, @SqlType(ColorType.NAME) long highColor) -->Line_16 $$ return utf8Slice(builder.toString())[ CD ]
Line_7 $$ for (int i = 0; i < count; i++) -->Line_10 $$ builder.append(ansiColorEscape(color)).append('█')[ CD ]
Line_2 $$ public static Slice bar(@SqlType(StandardTypes.DOUBLE) double percent, @SqlType(StandardTypes.BIGINT) long width, @SqlType(ColorType.NAME) long lowColor, @SqlType(ColorType.NAME) long highColor) -->Line_9 $$ int color = interpolate(fraction, lowColor, highColor)[ FD ]
Line_7 $$ for (int i = 0; i < count; i++) -->Line_8 $$ float fraction = (float) (i * 1.0 / (width - 1))[ CD ]
Line_6 $$ StringBuilder builder = new StringBuilder()-->Line_14 $$ builder.append(' ')[ FD ]
Line_3 $$ long count = (int) (percent * width)-->Line_4 $$ count = Math.min(width, count)[ FD ]
Line_2 $$ public static Slice bar(@SqlType(StandardTypes.DOUBLE) double percent, @SqlType(StandardTypes.BIGINT) long width, @SqlType(ColorType.NAME) long lowColor, @SqlType(ColorType.NAME) long highColor) -->Line_6 $$ StringBuilder builder = new StringBuilder()[ CD ]
Line_2 $$ public static Slice bar(@SqlType(StandardTypes.DOUBLE) double percent, @SqlType(StandardTypes.BIGINT) long width, @SqlType(ColorType.NAME) long lowColor, @SqlType(ColorType.NAME) long highColor) -->Line_13 $$ for (long i = count; i < width; ++i) [ CD ]
Line_6 $$ StringBuilder builder = new StringBuilder()-->Line_16 $$ return utf8Slice(builder.toString())[ FD ]
Line_3 $$ long count = (int) (percent * width)-->Line_5 $$ count = Math.max(0, count)[ FD ]
Line_2 $$ public static Slice bar(@SqlType(StandardTypes.DOUBLE) double percent, @SqlType(StandardTypes.BIGINT) long width, @SqlType(ColorType.NAME) long lowColor, @SqlType(ColorType.NAME) long highColor) -->Line_3 $$ long count = (int) (percent * width)[ CD ]
Line_7 $$ for (int i = 0; i < count; i++) -->Line_9 $$ int color = interpolate(fraction, lowColor, highColor)[ CD ]
Line_9 $$ int color = interpolate(fraction, lowColor, highColor)-->Line_10 $$ builder.append(ansiColorEscape(color)).append('█')[ FD ]
Line_4 $$ count = Math.min(width, count)-->Line_5 $$ count = Math.max(0, count)[ FD ]
Line_2 $$ public static Slice bar(@SqlType(StandardTypes.DOUBLE) double percent, @SqlType(StandardTypes.BIGINT) long width, @SqlType(ColorType.NAME) long lowColor, @SqlType(ColorType.NAME) long highColor) -->Line_4 $$ count = Math.min(width, count)[ FD ]
Line_6 $$ StringBuilder builder = new StringBuilder()-->Line_10 $$ builder.append(ansiColorEscape(color)).append('█')[ FD ]
Line_2 $$ public static Slice bar(@SqlType(StandardTypes.DOUBLE) double percent, @SqlType(StandardTypes.BIGINT) long width, @SqlType(ColorType.NAME) long lowColor, @SqlType(ColorType.NAME) long highColor) -->Line_12 $$ builder.append(ANSI_RESET)[ CD ]
Line_7 $$ for (int i = 0; i < count; i++) -->Line_13 $$ for (long i = count; i < width; ++i) [ FD ]
Line_13 $$ for (long i = count; i < width; ++i) -->Line_14 $$ builder.append(' ')[ CD ]
Line_6 $$ StringBuilder builder = new StringBuilder()-->Line_12 $$ builder.append(ANSI_RESET)[ FD ]
Line_2 $$ public static Slice bar(@SqlType(StandardTypes.DOUBLE) double percent, @SqlType(StandardTypes.BIGINT) long width, @SqlType(ColorType.NAME) long lowColor, @SqlType(ColorType.NAME) long highColor) -->Line_13 $$ for (long i = count; i < width; ++i) [ FD ]
Line_2 $$ public static Slice bar(@SqlType(StandardTypes.DOUBLE) double percent, @SqlType(StandardTypes.BIGINT) long width, @SqlType(ColorType.NAME) long lowColor, @SqlType(ColorType.NAME) long highColor) -->Line_7 $$ for (int i = 0; i < count; i++) [ CD ]
Line_8 $$ float fraction = (float) (i * 1.0 / (width - 1))-->Line_9 $$ int color = interpolate(fraction, lowColor, highColor)[ FD ]
Line_5 $$ count = Math.max(0, count)-->Line_7 $$ for (int i = 0; i < count; i++) [ FD ]
