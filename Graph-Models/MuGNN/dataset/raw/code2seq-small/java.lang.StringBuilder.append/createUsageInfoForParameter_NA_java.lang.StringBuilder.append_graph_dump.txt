Line_2 $$ public void createUsageInfoForParameter(PsiReference reference, List<UsageInfo> usages, final PsiParameter parameter, final PsiMethod method) -->Line_4 $$ final PsiElement element = reference.getElement()[ CD ]
Line_4 $$ final PsiElement element = reference.getElement()-->Line_21 $$ if (element instanceof GrDocMethodReference) [ FD ]
Line_22 $$ final StringBuilder newText = new StringBuilder()-->Line_23 $$ newText.append("")[ FD ]
Line_9 $$ call = (GrCall) element.getParent()-->Line_12 $$ GrClosureSignature signature = GrClosureSignatureUtil.createSignature(call)[ FD ]
Line_21 $$ if (element instanceof GrDocMethodReference) -->Line_22 $$ final StringBuilder newText = new StringBuilder()[ CD ]
Line_4 $$ final PsiElement element = reference.getElement()-->Line_8 $$ if (element.getParent() instanceof GrCall) [ FD ]
Line_5 $$ GrCall call = null-->Line_11 $$ if (call != null) [ FD ]
Line_9 $$ call = (GrCall) element.getParent()-->Line_15 $$ GrClosureSignatureUtil.ArgInfo<PsiElement>[] argInfos = GrClosureSignatureUtil.mapParametersToArguments(signature, call)[ FD ]
Line_2 $$ public void createUsageInfoForParameter(PsiReference reference, List<UsageInfo> usages, final PsiParameter parameter, final PsiMethod method) -->Line_24 $$ usages.add(new SafeDeleteReferenceJavaDeleteUsageInfo(element, parameter, true) [ FD ]
Line_11 $$ if (call != null) -->Line_12 $$ GrClosureSignature signature = GrClosureSignatureUtil.createSignature(call)[ CD ]
Line_12 $$ GrClosureSignature signature = GrClosureSignatureUtil.createSignature(call)-->Line_15 $$ GrClosureSignatureUtil.ArgInfo<PsiElement>[] argInfos = GrClosureSignatureUtil.mapParametersToArguments(signature, call)[ FD ]
Line_16 $$ if (argInfos == null)-->Line_17 $$ return[ CD ]
Line_2 $$ public void createUsageInfoForParameter(PsiReference reference, List<UsageInfo> usages, final PsiParameter parameter, final PsiMethod method) -->Line_6 $$ if (element instanceof GrCall) [ CD ]
Line_6 $$ if (element instanceof GrCall) -->Line_8 $$ if (element.getParent() instanceof GrCall) [ CD ]
Line_12 $$ GrClosureSignature signature = GrClosureSignatureUtil.createSignature(call)-->Line_13 $$ if (signature == null)[ FD ]
Line_9 $$ call = (GrCall) element.getParent()-->Line_11 $$ if (call != null) [ FD ]
Line_2 $$ public void createUsageInfoForParameter(PsiReference reference, List<UsageInfo> usages, final PsiParameter parameter, final PsiMethod method) -->Line_11 $$ if (call != null) [ CD ]
Line_2 $$ public void createUsageInfoForParameter(PsiReference reference, List<UsageInfo> usages, final PsiParameter parameter, final PsiMethod method) -->Line_3 $$ int index = method.getParameterList().getParameterIndex(parameter)[ FD ]
Line_2 $$ public void createUsageInfoForParameter(PsiReference reference, List<UsageInfo> usages, final PsiParameter parameter, final PsiMethod method) -->Line_19 $$ usages.add(new SafeDeleteReferenceJavaDeleteUsageInfo(arg, parameter, true))[ FD ]
Line_22 $$ final StringBuilder newText = new StringBuilder()-->Line_26 $$ ((GrDocMethodReference) element).bindToText(method.getProject(), newText.toString())[ FD ]
Line_7 $$ call = (GrCall) element-->Line_9 $$ call = (GrCall) element.getParent()[ FD ]
Line_5 $$ GrCall call = null-->Line_12 $$ GrClosureSignature signature = GrClosureSignatureUtil.createSignature(call)[ FD ]
Line_11 $$ if (call != null) -->Line_16 $$ if (argInfos == null)[ CD ]
Line_6 $$ if (element instanceof GrCall) -->Line_7 $$ call = (GrCall) element[ CD ]
Line_2 $$ public void createUsageInfoForParameter(PsiReference reference, List<UsageInfo> usages, final PsiParameter parameter, final PsiMethod method) -->Line_4 $$ final PsiElement element = reference.getElement()[ FD ]
Line_5 $$ GrCall call = null-->Line_9 $$ call = (GrCall) element.getParent()[ FD ]
Line_7 $$ call = (GrCall) element-->Line_11 $$ if (call != null) [ FD ]
Line_15 $$ GrClosureSignatureUtil.ArgInfo<PsiElement>[] argInfos = GrClosureSignatureUtil.mapParametersToArguments(signature, call)-->Line_16 $$ if (argInfos == null)[ FD ]
Line_2 $$ public void createUsageInfoForParameter(PsiReference reference, List<UsageInfo> usages, final PsiParameter parameter, final PsiMethod method) -->Line_26 $$ ((GrDocMethodReference) element).bindToText(method.getProject(), newText.toString())[ FD ]
Line_8 $$ if (element.getParent() instanceof GrCall) -->Line_9 $$ call = (GrCall) element.getParent()[ CD ]
Line_11 $$ if (call != null) -->Line_13 $$ if (signature == null)[ CD ]
Line_24 $$ usages.add(new SafeDeleteReferenceJavaDeleteUsageInfo(element, parameter, true) -->Line_26 $$ ((GrDocMethodReference) element).bindToText(method.getProject(), newText.toString())[ CD ]
Line_4 $$ final PsiElement element = reference.getElement()-->Line_6 $$ if (element instanceof GrCall) [ FD ]
Line_11 $$ if (call != null) -->Line_15 $$ GrClosureSignatureUtil.ArgInfo<PsiElement>[] argInfos = GrClosureSignatureUtil.mapParametersToArguments(signature, call)[ CD ]
Line_4 $$ final PsiElement element = reference.getElement()-->Line_9 $$ call = (GrCall) element.getParent()[ FD ]
Line_7 $$ call = (GrCall) element-->Line_12 $$ GrClosureSignature signature = GrClosureSignatureUtil.createSignature(call)[ FD ]
Line_13 $$ if (signature == null)-->Line_14 $$ return[ CD ]
Line_21 $$ if (element instanceof GrDocMethodReference) -->Line_23 $$ newText.append("")[ CD ]
Line_2 $$ public void createUsageInfoForParameter(PsiReference reference, List<UsageInfo> usages, final PsiParameter parameter, final PsiMethod method) -->Line_5 $$ GrCall call = null[ CD ]
Line_7 $$ call = (GrCall) element-->Line_15 $$ GrClosureSignatureUtil.ArgInfo<PsiElement>[] argInfos = GrClosureSignatureUtil.mapParametersToArguments(signature, call)[ FD ]
Line_5 $$ GrCall call = null-->Line_15 $$ GrClosureSignatureUtil.ArgInfo<PsiElement>[] argInfos = GrClosureSignatureUtil.mapParametersToArguments(signature, call)[ FD ]
Line_11 $$ if (call != null) -->Line_21 $$ if (element instanceof GrDocMethodReference) [ CD ]
Line_5 $$ GrCall call = null-->Line_7 $$ call = (GrCall) element[ FD ]
Line_21 $$ if (element instanceof GrDocMethodReference) -->Line_24 $$ usages.add(new SafeDeleteReferenceJavaDeleteUsageInfo(element, parameter, true) [ CD ]
Line_2 $$ public void createUsageInfoForParameter(PsiReference reference, List<UsageInfo> usages, final PsiParameter parameter, final PsiMethod method) -->Line_3 $$ int index = method.getParameterList().getParameterIndex(parameter)[ CD ]
