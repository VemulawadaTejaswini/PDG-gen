Line_5 $$ int len-->Line_14 $$ sb.append(buf, 0, len)[ FD ]
Line_5 $$ int len-->Line_13 $$ if (len > 0)[ FD ]
Line_7 $$ do -->Line_13 $$ if (len > 0)[ CD ]
Line_2 $$ private static String writeCharStream(Reader input) -->Line_5 $$ int len[ CD ]
Line_9 $$ len = input.read(buf, 0, BUFFER_SIZE)-->Line_14 $$ sb.append(buf, 0, len)[ FD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_16 $$ return sb.toString()[ FD ]
Line_9 $$ len = input.read(buf, 0, BUFFER_SIZE)-->Line_7 $$ do [ FD ]
Line_2 $$ private static String writeCharStream(Reader input) -->Line_6 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_4 $$ char[] buf = new char[BUFFER_SIZE]-->Line_14 $$ sb.append(buf, 0, len)[ FD ]
Line_2 $$ private static String writeCharStream(Reader input) -->Line_9 $$ len = input.read(buf, 0, BUFFER_SIZE)[ FD ]
Line_5 $$ int len-->Line_7 $$ do [ FD ]
Line_4 $$ char[] buf = new char[BUFFER_SIZE]-->Line_9 $$ len = input.read(buf, 0, BUFFER_SIZE)[ FD ]
Line_3 $$ final int BUFFER_SIZE = 1024-->Line_7 $$ do [ FD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_14 $$ sb.append(buf, 0, len)[ FD ]
Line_13 $$ if (len > 0)-->Line_14 $$ sb.append(buf, 0, len)[ CD ]
Line_9 $$ len = input.read(buf, 0, BUFFER_SIZE)-->Line_13 $$ if (len > 0)[ FD ]
Line_2 $$ private static String writeCharStream(Reader input) -->Line_3 $$ final int BUFFER_SIZE = 1024[ CD ]
Line_5 $$ int len-->Line_9 $$ len = input.read(buf, 0, BUFFER_SIZE)[ FD ]
Line_2 $$ private static String writeCharStream(Reader input) -->Line_16 $$ return sb.toString()[ CD ]
Line_2 $$ private static String writeCharStream(Reader input) -->Line_4 $$ char[] buf = new char[BUFFER_SIZE][ CD ]
Line_2 $$ private static String writeCharStream(Reader input) -->Line_7 $$ do [ CD ]
Line_3 $$ final int BUFFER_SIZE = 1024-->Line_9 $$ len = input.read(buf, 0, BUFFER_SIZE)[ FD ]
