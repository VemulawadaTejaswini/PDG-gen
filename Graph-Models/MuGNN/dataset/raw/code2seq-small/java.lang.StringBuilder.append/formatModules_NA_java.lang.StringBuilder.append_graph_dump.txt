Line_10 $$ if (i > 20) -->Line_11 $$ res.append("\n ... and other ").append(modules.size() - 20).append(" modules")[ CD ]
Line_2 $$ private static String formatModules(final Collection<Module> modules) -->Line_10 $$ if (i > 20) [ CD ]
Line_5 $$ for (Module module : modules) -->Line_6 $$ res.append('\'').append(module.getName()).append("'\n")[ FD ]
Line_4 $$ int i = 0-->Line_10 $$ if (i > 20) [ FD ]
Line_3 $$ StringBuilder res = new StringBuilder()-->Line_6 $$ res.append('\'').append(module.getName()).append("'\n")[ FD ]
Line_3 $$ StringBuilder res = new StringBuilder()-->Line_11 $$ res.append("\n ... and other ").append(modules.size() - 20).append(" modules")[ FD ]
Line_2 $$ private static String formatModules(final Collection<Module> modules) -->Line_3 $$ StringBuilder res = new StringBuilder()[ CD ]
Line_3 $$ StringBuilder res = new StringBuilder()-->Line_13 $$ return res.toString()[ FD ]
Line_2 $$ private static String formatModules(final Collection<Module> modules) -->Line_13 $$ return res.toString()[ CD ]
Line_4 $$ int i = 0-->Line_7 $$ if (++i > 20)[ FD ]
Line_2 $$ private static String formatModules(final Collection<Module> modules) -->Line_4 $$ int i = 0[ CD ]
Line_2 $$ private static String formatModules(final Collection<Module> modules) -->Line_11 $$ res.append("\n ... and other ").append(modules.size() - 20).append(" modules")[ FD ]
