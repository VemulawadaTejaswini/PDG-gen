Line_11 $$ for (PsiElement child : gstring.getAllContentParts()) -->Line_14 $$ if (child instanceof GrStringInjection) [ FD ]
Line_12 $$ if (child instanceof GrStringContent) -->Line_14 $$ if (child instanceof GrStringInjection) [ CD ]
Line_4 $$ final StringBuilder buffer = new StringBuilder()-->Line_15 $$ buffer.append(child.getText())[ FD ]
Line_4 $$ final StringBuilder buffer = new StringBuilder()-->Line_20 $$ buffer.append(quote)[ FD ]
Line_11 $$ for (PsiElement child : gstring.getAllContentParts()) -->Line_15 $$ buffer.append(child.getText())[ FD ]
Line_4 $$ final StringBuilder buffer = new StringBuilder()-->Line_5 $$ buffer.append(quote)[ FD ]
Line_7 $$ if (literal instanceof GrLiteralImpl) -->Line_8 $$ appendSimpleStringValue(literal, buffer, quote)[ CD ]
Line_4 $$ final StringBuilder buffer = new StringBuilder()-->Line_8 $$ appendSimpleStringValue(literal, buffer, quote)[ FD ]
Line_14 $$ if (child instanceof GrStringInjection) -->Line_15 $$ buffer.append(child.getText())[ CD ]
Line_2 $$ private static StringBuilder prepareNewLiteralText(List<GrLiteral> literals) -->Line_3 $$ String quote = !containsInjections(literals) && literals.get(0).getText().startsWith("'") ? "'''" : "\"\"\""[ CD ]
Line_2 $$ private static StringBuilder prepareNewLiteralText(List<GrLiteral> literals) -->Line_20 $$ buffer.append(quote)[ CD ]
Line_2 $$ private static StringBuilder prepareNewLiteralText(List<GrLiteral> literals) -->Line_21 $$ return buffer[ CD ]
Line_3 $$ String quote = !containsInjections(literals) && literals.get(0).getText().startsWith("'") ? "'''" : "\"\"\""-->Line_8 $$ appendSimpleStringValue(literal, buffer, quote)[ FD ]
Line_12 $$ if (child instanceof GrStringContent) -->Line_13 $$ appendSimpleStringValue(child, buffer, "\"\"\"")[ CD ]
Line_2 $$ private static StringBuilder prepareNewLiteralText(List<GrLiteral> literals) -->Line_3 $$ String quote = !containsInjections(literals) && literals.get(0).getText().startsWith("'") ? "'''" : "\"\"\""[ FD ]
Line_6 $$ for (GrLiteral literal : literals) -->Line_8 $$ appendSimpleStringValue(literal, buffer, quote)[ FD ]
Line_10 $$ final GrStringImpl gstring = (GrStringImpl) literal-->Line_11 $$ for (PsiElement child : gstring.getAllContentParts()) [ FD ]
Line_11 $$ for (PsiElement child : gstring.getAllContentParts()) -->Line_13 $$ appendSimpleStringValue(child, buffer, "\"\"\"")[ FD ]
Line_11 $$ for (PsiElement child : gstring.getAllContentParts()) -->Line_12 $$ if (child instanceof GrStringContent) [ FD ]
Line_4 $$ final StringBuilder buffer = new StringBuilder()-->Line_13 $$ appendSimpleStringValue(child, buffer, "\"\"\"")[ FD ]
Line_2 $$ private static StringBuilder prepareNewLiteralText(List<GrLiteral> literals) -->Line_4 $$ final StringBuilder buffer = new StringBuilder()[ CD ]
Line_6 $$ for (GrLiteral literal : literals) -->Line_7 $$ if (literal instanceof GrLiteralImpl) [ FD ]
Line_7 $$ if (literal instanceof GrLiteralImpl) -->Line_10 $$ final GrStringImpl gstring = (GrStringImpl) literal[ CD ]
Line_3 $$ String quote = !containsInjections(literals) && literals.get(0).getText().startsWith("'") ? "'''" : "\"\"\""-->Line_5 $$ buffer.append(quote)[ FD ]
Line_3 $$ String quote = !containsInjections(literals) && literals.get(0).getText().startsWith("'") ? "'''" : "\"\"\""-->Line_20 $$ buffer.append(quote)[ FD ]
Line_2 $$ private static StringBuilder prepareNewLiteralText(List<GrLiteral> literals) -->Line_5 $$ buffer.append(quote)[ CD ]
