Line_9 $$ if (ch == '\r') -->Line_11 $$ bufferedIn.mark(1)[ CD ]
Line_3 $$ StringBuilder line = new StringBuilder()-->Line_23 $$ Object result = closure.call(line.toString())[ FD ]
Line_2 $$ private void readTransformedLine() throws IOException -->Line_6 $$ while (!eol && (ch = bufferedIn.read()) >= 0) [ CD ]
Line_4 $$ boolean eol = false-->Line_8 $$ eol = true[ FD ]
Line_5 $$ int ch-->Line_6 $$ while (!eol && (ch = bufferedIn.read()) >= 0) [ FD ]
Line_4 $$ boolean eol = false-->Line_6 $$ while (!eol && (ch = bufferedIn.read()) >= 0) [ FD ]
Line_23 $$ Object result = closure.call(line.toString())-->Line_29 $$ builder.append(result.toString())[ FD ]
Line_5 $$ int ch-->Line_7 $$ if (ch == '\n') [ FD ]
Line_6 $$ while (!eol && (ch = bufferedIn.read()) >= 0) -->Line_7 $$ if (ch == '\n') [ CD ]
Line_7 $$ if (ch == '\n') -->Line_8 $$ eol = true[ CD ]
Line_2 $$ private void readTransformedLine() throws IOException -->Line_19 $$ if (line.length() == 0 && !eol) [ CD ]
Line_2 $$ private void readTransformedLine() throws IOException -->Line_30 $$ if (eol) [ CD ]
Line_30 $$ if (eol) -->Line_31 $$ builder.append(SystemProperties.getInstance().getLineSeparator())[ CD ]
Line_3 $$ StringBuilder line = new StringBuilder()-->Line_16 $$ line.append((char) ch)[ FD ]
Line_9 $$ if (ch == '\r') -->Line_10 $$ eol = true[ CD ]
Line_2 $$ private void readTransformedLine() throws IOException -->Line_24 $$ if (result == null) [ CD ]
Line_23 $$ Object result = closure.call(line.toString())-->Line_24 $$ if (result == null) [ FD ]
Line_7 $$ if (ch == '\n') -->Line_9 $$ if (ch == '\r') [ CD ]
Line_2 $$ private void readTransformedLine() throws IOException -->Line_3 $$ StringBuilder line = new StringBuilder()[ CD ]
Line_2 $$ private void readTransformedLine() throws IOException -->Line_4 $$ boolean eol = false[ CD ]
Line_28 $$ StringBuilder builder = new StringBuilder()-->Line_34 $$ transformedLine = builder.toString()[ FD ]
Line_8 $$ eol = true-->Line_6 $$ while (!eol && (ch = bufferedIn.read()) >= 0) [ FD ]
Line_9 $$ if (ch == '\r') -->Line_12 $$ if (bufferedIn.read() != '\n') [ CD ]
Line_28 $$ StringBuilder builder = new StringBuilder()-->Line_31 $$ builder.append(SystemProperties.getInstance().getLineSeparator())[ FD ]
Line_6 $$ while (!eol && (ch = bufferedIn.read()) >= 0) -->Line_7 $$ if (ch == '\n') [ FD ]
Line_6 $$ while (!eol && (ch = bufferedIn.read()) >= 0) -->Line_9 $$ if (ch == '\r') [ FD ]
Line_12 $$ if (bufferedIn.read() != '\n') -->Line_13 $$ bufferedIn.reset()[ CD ]
Line_5 $$ int ch-->Line_9 $$ if (ch == '\r') [ FD ]
Line_2 $$ private void readTransformedLine() throws IOException -->Line_5 $$ int ch[ CD ]
Line_2 $$ private void readTransformedLine() throws IOException -->Line_28 $$ StringBuilder builder = new StringBuilder()[ CD ]
Line_2 $$ private void readTransformedLine() throws IOException -->Line_23 $$ Object result = closure.call(line.toString())[ CD ]
Line_10 $$ eol = true-->Line_6 $$ while (!eol && (ch = bufferedIn.read()) >= 0) [ FD ]
Line_3 $$ StringBuilder line = new StringBuilder()-->Line_19 $$ if (line.length() == 0 && !eol) [ FD ]
Line_2 $$ private void readTransformedLine() throws IOException -->Line_34 $$ transformedLine = builder.toString()[ CD ]
Line_10 $$ eol = true-->Line_19 $$ if (line.length() == 0 && !eol) [ FD ]
Line_28 $$ StringBuilder builder = new StringBuilder()-->Line_29 $$ builder.append(result.toString())[ FD ]
Line_8 $$ eol = true-->Line_19 $$ if (line.length() == 0 && !eol) [ FD ]
Line_19 $$ if (line.length() == 0 && !eol) -->Line_21 $$ return[ CD ]
Line_4 $$ boolean eol = false-->Line_19 $$ if (line.length() == 0 && !eol) [ FD ]
Line_2 $$ private void readTransformedLine() throws IOException -->Line_29 $$ builder.append(result.toString())[ CD ]
Line_24 $$ if (result == null) -->Line_26 $$ return[ CD ]
Line_9 $$ if (ch == '\r') -->Line_16 $$ line.append((char) ch)[ CD ]
Line_8 $$ eol = true-->Line_10 $$ eol = true[ FD ]
Line_4 $$ boolean eol = false-->Line_10 $$ eol = true[ FD ]
