Line_2 $$ private void initTokenListAndCharSequence(MasqueradingLexer lexer) -->Line_11 $$ final int realLength = lexer.getTokenEnd() - lexer.getTokenStart()[ FD ]
Line_2 $$ private void initTokenListAndCharSequence(MasqueradingLexer lexer) -->Line_5 $$ StringBuilder charSequenceBuilder = new StringBuilder()[ CD ]
Line_2 $$ private void initTokenListAndCharSequence(MasqueradingLexer lexer) -->Line_3 $$ lexer.start(getDelegate().getOriginalText())[ FD ]
Line_2 $$ private void initTokenListAndCharSequence(MasqueradingLexer lexer) -->Line_10 $$ final String masqueTokenText = lexer.getMasqueTokenText()[ FD ]
Line_8 $$ while (lexer.getTokenType() != null) -->Line_10 $$ final String masqueTokenText = lexer.getMasqueTokenText()[ CD ]
Line_2 $$ private void initTokenListAndCharSequence(MasqueradingLexer lexer) -->Line_3 $$ lexer.start(getDelegate().getOriginalText())[ CD ]
Line_2 $$ private void initTokenListAndCharSequence(MasqueradingLexer lexer) -->Line_6 $$ int realPos = 0[ CD ]
Line_10 $$ final String masqueTokenText = lexer.getMasqueTokenText()-->Line_16 $$ charSequenceBuilder.append(masqueTokenText)[ FD ]
Line_6 $$ int realPos = 0-->Line_19 $$ realPos += realLength[ FD ]
Line_8 $$ while (lexer.getTokenType() != null) -->Line_19 $$ realPos += realLength[ CD ]
Line_5 $$ StringBuilder charSequenceBuilder = new StringBuilder()-->Line_16 $$ charSequenceBuilder.append(masqueTokenText)[ FD ]
Line_10 $$ final String masqueTokenText = lexer.getMasqueTokenText()-->Line_14 $$ final int masqueLength = masqueTokenText.length()[ FD ]
Line_9 $$ final IElementType masqueTokenType = lexer.getMasqueTokenType()-->Line_12 $$ if (masqueTokenType != null) [ FD ]
Line_12 $$ if (masqueTokenType != null) -->Line_16 $$ charSequenceBuilder.append(masqueTokenText)[ CD ]
Line_2 $$ private void initTokenListAndCharSequence(MasqueradingLexer lexer) -->Line_7 $$ int shrunkPos = 0[ CD ]
Line_8 $$ while (lexer.getTokenType() != null) -->Line_20 $$ lexer.advance()[ CD ]
Line_2 $$ private void initTokenListAndCharSequence(MasqueradingLexer lexer) -->Line_8 $$ while (lexer.getTokenType() != null) [ FD ]
Line_12 $$ if (masqueTokenType != null) -->Line_17 $$ shrunkPos += masqueLength[ CD ]
Line_7 $$ int shrunkPos = 0-->Line_17 $$ shrunkPos += masqueLength[ FD ]
Line_14 $$ final int masqueLength = masqueTokenText.length()-->Line_17 $$ shrunkPos += masqueLength[ FD ]
Line_12 $$ if (masqueTokenType != null) -->Line_14 $$ final int masqueLength = masqueTokenText.length()[ CD ]
Line_12 $$ if (masqueTokenType != null) -->Line_15 $$ myShrunkSequence.add(new MyShiftedToken(masqueTokenType, realPos, realPos + realLength, shrunkPos, shrunkPos + masqueLength))[ CD ]
Line_2 $$ private void initTokenListAndCharSequence(MasqueradingLexer lexer) -->Line_20 $$ lexer.advance()[ FD ]
Line_2 $$ private void initTokenListAndCharSequence(MasqueradingLexer lexer) -->Line_22 $$ myShrunkCharSequence = charSequenceBuilder.toString()[ CD ]
Line_5 $$ StringBuilder charSequenceBuilder = new StringBuilder()-->Line_22 $$ myShrunkCharSequence = charSequenceBuilder.toString()[ FD ]
Line_2 $$ private void initTokenListAndCharSequence(MasqueradingLexer lexer) -->Line_8 $$ while (lexer.getTokenType() != null) [ CD ]
Line_8 $$ while (lexer.getTokenType() != null) -->Line_9 $$ final IElementType masqueTokenType = lexer.getMasqueTokenType()[ CD ]
Line_2 $$ private void initTokenListAndCharSequence(MasqueradingLexer lexer) -->Line_9 $$ final IElementType masqueTokenType = lexer.getMasqueTokenType()[ FD ]
Line_8 $$ while (lexer.getTokenType() != null) -->Line_12 $$ if (masqueTokenType != null) [ CD ]
Line_8 $$ while (lexer.getTokenType() != null) -->Line_11 $$ final int realLength = lexer.getTokenEnd() - lexer.getTokenStart()[ CD ]
Line_11 $$ final int realLength = lexer.getTokenEnd() - lexer.getTokenStart()-->Line_19 $$ realPos += realLength[ FD ]
