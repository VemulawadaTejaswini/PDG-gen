Line_6 $$ StringBuilder sb = null-->Line_10 $$ sb.setLength(0)[ FD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_6 $$ StringBuilder sb = null[ CD ]
Line_7 $$ if (id != -1) -->Line_8 $$ sb = new StringBuilder()[ CD ]
Line_13 $$ if (domain != null) -->Line_14 $$ if (hasPrev) [ CD ]
Line_20 $$ if (command == null) -->Line_26 $$ return addBuffer(effectiveBuffer, buffer)[ CD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_33 $$ if (rawData != null) [ FD ]
Line_22 $$ effectiveBuffer = byteBufAllocator.compositeBuffer().addComponent(buffer).addComponent(rawData)-->Line_37 $$ effectiveBuffer = byteBufAllocator.compositeBuffer().addComponent(buffer).addComponent(rawData)[ FD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_20 $$ if (command == null) [ FD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_23 $$ buffer = byteBufAllocator.ioBuffer()[ FD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_7 $$ if (id != -1) [ CD ]
Line_14 $$ if (hasPrev) -->Line_15 $$ buffer.writeByte(',')[ CD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_33 $$ if (rawData != null) [ CD ]
Line_20 $$ if (command == null) -->Line_28 $$ ByteBufUtil.writeAscii(buffer, command)[ CD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_22 $$ effectiveBuffer = byteBufAllocator.compositeBuffer().addComponent(buffer).addComponent(rawData)[ FD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_3 $$ buffer.writeByte('[')[ FD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_3 $$ buffer.writeByte('[')[ CD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_4 $$ ByteBuf effectiveBuffer = buffer[ CD ]
Line_20 $$ if (command == null) -->Line_21 $$ if (rawData != null) [ CD ]
Line_4 $$ ByteBuf effectiveBuffer = buffer-->Line_22 $$ effectiveBuffer = byteBufAllocator.compositeBuffer().addComponent(buffer).addComponent(rawData)[ FD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_5 $$ boolean hasPrev = false[ CD ]
Line_8 $$ sb = new StringBuilder()-->Line_9 $$ ByteBufUtil.writeAscii(buffer, sb.append(id))[ FD ]
Line_7 $$ if (id != -1) -->Line_10 $$ sb.setLength(0)[ CD ]
Line_20 $$ if (command == null) -->Line_25 $$ buffer.writeByte('"')[ CD ]
Line_33 $$ if (rawData != null) -->Line_37 $$ effectiveBuffer = byteBufAllocator.compositeBuffer().addComponent(buffer).addComponent(rawData)[ CD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_25 $$ buffer.writeByte('"')[ FD ]
Line_4 $$ ByteBuf effectiveBuffer = buffer-->Line_26 $$ return addBuffer(effectiveBuffer, buffer)[ FD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_26 $$ return addBuffer(effectiveBuffer, buffer)[ FD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_42 $$ return addBuffer(effectiveBuffer, buffer)[ CD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_32 $$ encodeParameters(buffer, params, sb)[ FD ]
Line_37 $$ effectiveBuffer = byteBufAllocator.compositeBuffer().addComponent(buffer).addComponent(rawData)-->Line_42 $$ return addBuffer(effectiveBuffer, buffer)[ FD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_15 $$ buffer.writeByte(',')[ FD ]
Line_13 $$ if (domain != null) -->Line_19 $$ buffer.writeByte('"').writeByte(',').writeByte('"')[ CD ]
Line_4 $$ ByteBuf effectiveBuffer = buffer-->Line_37 $$ effectiveBuffer = byteBufAllocator.compositeBuffer().addComponent(buffer).addComponent(rawData)[ FD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_7 $$ if (id != -1) [ FD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_40 $$ buffer.writeByte(']')[ CD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_18 $$ ByteBufUtil.writeAscii(buffer, domain)[ FD ]
Line_13 $$ if (domain != null) -->Line_20 $$ if (command == null) [ CD ]
Line_22 $$ effectiveBuffer = byteBufAllocator.compositeBuffer().addComponent(buffer).addComponent(rawData)-->Line_26 $$ return addBuffer(effectiveBuffer, buffer)[ FD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_28 $$ ByteBufUtil.writeAscii(buffer, command)[ FD ]
Line_6 $$ StringBuilder sb = null-->Line_32 $$ encodeParameters(buffer, params, sb)[ FD ]
Line_33 $$ if (rawData != null) -->Line_38 $$ buffer = byteBufAllocator.ioBuffer()[ CD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_29 $$ buffer.writeByte('"')[ FD ]
Line_8 $$ sb = new StringBuilder()-->Line_10 $$ sb.setLength(0)[ FD ]
Line_34 $$ if (params.length > 0) -->Line_35 $$ buffer.writeByte(',')[ CD ]
Line_21 $$ if (rawData != null) -->Line_23 $$ buffer = byteBufAllocator.ioBuffer()[ CD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_40 $$ buffer.writeByte(']')[ FD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_42 $$ return addBuffer(effectiveBuffer, buffer)[ FD ]
Line_6 $$ StringBuilder sb = null-->Line_9 $$ ByteBufUtil.writeAscii(buffer, sb.append(id))[ FD ]
Line_7 $$ if (id != -1) -->Line_11 $$ hasPrev = true[ CD ]
Line_5 $$ boolean hasPrev = false-->Line_11 $$ hasPrev = true[ FD ]
Line_8 $$ sb = new StringBuilder()-->Line_32 $$ encodeParameters(buffer, params, sb)[ FD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_13 $$ if (domain != null) [ CD ]
Line_7 $$ if (id != -1) -->Line_9 $$ ByteBufUtil.writeAscii(buffer, sb.append(id))[ CD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_13 $$ if (domain != null) [ FD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_32 $$ encodeParameters(buffer, params, sb)[ CD ]
Line_4 $$ ByteBuf effectiveBuffer = buffer-->Line_42 $$ return addBuffer(effectiveBuffer, buffer)[ FD ]
Line_33 $$ if (rawData != null) -->Line_34 $$ if (params.length > 0) [ CD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_37 $$ effectiveBuffer = byteBufAllocator.compositeBuffer().addComponent(buffer).addComponent(rawData)[ FD ]
Line_22 $$ effectiveBuffer = byteBufAllocator.compositeBuffer().addComponent(buffer).addComponent(rawData)-->Line_42 $$ return addBuffer(effectiveBuffer, buffer)[ FD ]
Line_21 $$ if (rawData != null) -->Line_22 $$ effectiveBuffer = byteBufAllocator.compositeBuffer().addComponent(buffer).addComponent(rawData)[ CD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_35 $$ buffer.writeByte(',')[ FD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_21 $$ if (rawData != null) [ FD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_38 $$ buffer = byteBufAllocator.ioBuffer()[ FD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_19 $$ buffer.writeByte('"').writeByte(',').writeByte('"')[ FD ]
Line_20 $$ if (command == null) -->Line_29 $$ buffer.writeByte('"')[ CD ]
Line_6 $$ StringBuilder sb = null-->Line_8 $$ sb = new StringBuilder()[ FD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_9 $$ ByteBufUtil.writeAscii(buffer, sb.append(id))[ FD ]
Line_13 $$ if (domain != null) -->Line_18 $$ ByteBufUtil.writeAscii(buffer, domain)[ CD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_41 $$ buffer.writeByte(']')[ FD ]
Line_13 $$ if (domain != null) -->Line_17 $$ buffer.writeByte('"')[ CD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_17 $$ buffer.writeByte('"')[ FD ]
Line_2 $$ private ByteBuf doEncodeMessage(@NotNull ByteBufAllocator byteBufAllocator, @NotNull ByteBuf buffer, int id, @Nullable String domain, @Nullable String command, @NotNull Object[] params, @Nullable ByteBuf rawData) throws IOException -->Line_41 $$ buffer.writeByte(']')[ CD ]
