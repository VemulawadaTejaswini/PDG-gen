Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_23 $$ LOG.warn(info.toString())[ CD ]
Line_3 $$ StringBuilder info = new StringBuilder()-->Line_13 $$ info.append("e.getOldLength() - ").append(e.getOldLength()).append('\n')[ FD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_13 $$ info.append("e.getOldLength() - ").append(e.getOldLength()).append('\n')[ FD ]
Line_3 $$ StringBuilder info = new StringBuilder()-->Line_21 $$ info.append("non-strict transferEndLine - ").append(pair2.first[0]).append("-").append(pair2.first[1]).append(":").append(pair2.second).append('\n')[ FD ]
Line_3 $$ StringBuilder info = new StringBuilder()-->Line_9 $$ info.append("myRightDocument.length() - ").append(document2.getTextLength()).append('\n')[ FD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_6 $$ info.append("==== UnifiedDiffViewer Debug Info ====")[ CD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_8 $$ info.append("myLeftDocument.length() - ").append(document1.getTextLength()).append('\n')[ CD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_14 $$ info.append("onesideStartPosition - ").append(onesideStartPosition).append('\n')[ CD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_18 $$ Pair<int[], Side> pair1 = transferLineFromOneside(onesideStartPosition.line)[ CD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_11 $$ info.append("e.getOffset() - ").append(e.getOffset()).append('\n')[ FD ]
Line_3 $$ StringBuilder info = new StringBuilder()-->Line_8 $$ info.append("myLeftDocument.length() - ").append(document1.getTextLength()).append('\n')[ FD ]
Line_3 $$ StringBuilder info = new StringBuilder()-->Line_14 $$ info.append("onesideStartPosition - ").append(onesideStartPosition).append('\n')[ FD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_9 $$ info.append("myRightDocument.length() - ").append(document2.getTextLength()).append('\n')[ CD ]
Line_3 $$ StringBuilder info = new StringBuilder()-->Line_15 $$ info.append("onesideEndPosition - ").append(onesideEndPosition).append('\n')[ FD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_17 $$ info.append("twosideEndLine - ").append(twosideEndLine).append('\n')[ FD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_20 $$ info.append("non-strict transferStartLine - ").append(pair1.first[0]).append("-").append(pair1.first[1]).append(":").append(pair1.second).append('\n')[ CD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_15 $$ info.append("onesideEndPosition - ").append(onesideEndPosition).append('\n')[ CD ]
Line_3 $$ StringBuilder info = new StringBuilder()-->Line_17 $$ info.append("twosideEndLine - ").append(twosideEndLine).append('\n')[ FD ]
Line_3 $$ StringBuilder info = new StringBuilder()-->Line_16 $$ info.append("twosideStartLine - ").append(twosideStartLine).append('\n')[ FD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_13 $$ info.append("e.getOldLength() - ").append(e.getOldLength()).append('\n')[ CD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_5 $$ Document document2 = getDocument(Side.RIGHT)[ CD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_7 $$ info.append("myMasterSide - ").append(myMasterSide).append('\n')[ CD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_21 $$ info.append("non-strict transferEndLine - ").append(pair2.first[0]).append("-").append(pair2.first[1]).append(":").append(pair2.second).append('\n')[ CD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_12 $$ info.append("e.getNewLength() - ").append(e.getNewLength()).append('\n')[ FD ]
Line_4 $$ Document document1 = getDocument(Side.LEFT)-->Line_8 $$ info.append("myLeftDocument.length() - ").append(document1.getTextLength()).append('\n')[ FD ]
Line_3 $$ StringBuilder info = new StringBuilder()-->Line_22 $$ info.append("---- UnifiedDiffViewer Debug Info ----")[ FD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_14 $$ info.append("onesideStartPosition - ").append(onesideStartPosition).append('\n')[ FD ]
Line_3 $$ StringBuilder info = new StringBuilder()-->Line_6 $$ info.append("==== UnifiedDiffViewer Debug Info ====")[ FD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_15 $$ info.append("onesideEndPosition - ").append(onesideEndPosition).append('\n')[ FD ]
Line_3 $$ StringBuilder info = new StringBuilder()-->Line_7 $$ info.append("myMasterSide - ").append(myMasterSide).append('\n')[ FD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_17 $$ info.append("twosideEndLine - ").append(twosideEndLine).append('\n')[ CD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_19 $$ Pair<int[], Side> pair2 = transferLineFromOneside(onesideEndPosition.line)[ CD ]
Line_3 $$ StringBuilder info = new StringBuilder()-->Line_20 $$ info.append("non-strict transferStartLine - ").append(pair1.first[0]).append("-").append(pair1.first[1]).append(":").append(pair1.second).append('\n')[ FD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_16 $$ info.append("twosideStartLine - ").append(twosideStartLine).append('\n')[ CD ]
Line_3 $$ StringBuilder info = new StringBuilder()-->Line_11 $$ info.append("e.getOffset() - ").append(e.getOffset()).append('\n')[ FD ]
Line_5 $$ Document document2 = getDocument(Side.RIGHT)-->Line_9 $$ info.append("myRightDocument.length() - ").append(document2.getTextLength()).append('\n')[ FD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_4 $$ Document document1 = getDocument(Side.LEFT)[ CD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_22 $$ info.append("---- UnifiedDiffViewer Debug Info ----")[ CD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_3 $$ StringBuilder info = new StringBuilder()[ CD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_11 $$ info.append("e.getOffset() - ").append(e.getOffset()).append('\n')[ CD ]
Line_3 $$ StringBuilder info = new StringBuilder()-->Line_12 $$ info.append("e.getNewLength() - ").append(e.getNewLength()).append('\n')[ FD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_12 $$ info.append("e.getNewLength() - ").append(e.getNewLength()).append('\n')[ CD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_10 $$ info.append("myDocument.length() - ").append(myDocument.getTextLength()).append('\n')[ CD ]
Line_2 $$ private void logDebugInfo(DocumentEvent e, LineCol onesideStartPosition, LineCol onesideEndPosition, int twosideStartLine, int twosideEndLine) -->Line_16 $$ info.append("twosideStartLine - ").append(twosideStartLine).append('\n')[ FD ]
Line_3 $$ StringBuilder info = new StringBuilder()-->Line_10 $$ info.append("myDocument.length() - ").append(myDocument.getTextLength()).append('\n')[ FD ]
Line_3 $$ StringBuilder info = new StringBuilder()-->Line_23 $$ LOG.warn(info.toString())[ FD ]
