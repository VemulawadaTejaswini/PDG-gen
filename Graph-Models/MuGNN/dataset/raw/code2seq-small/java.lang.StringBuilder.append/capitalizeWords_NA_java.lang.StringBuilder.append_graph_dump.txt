Line_2 $$ public static String capitalizeWords(@NotNull String text, @NotNull String tokenizerDelim, boolean allWords, boolean leaveOriginalDelims) -->Line_6 $$ while (tokenizer.hasMoreTokens()) [ CD ]
Line_6 $$ while (tokenizer.hasMoreTokens()) -->Line_7 $$ final String word = tokenizer.nextToken()[ CD ]
Line_3 $$ final StringTokenizer tokenizer = new StringTokenizer(text, tokenizerDelim, leaveOriginalDelims)-->Line_6 $$ while (tokenizer.hasMoreTokens()) [ FD ]
Line_6 $$ while (tokenizer.hasMoreTokens()) -->Line_8 $$ if (!leaveOriginalDelims && out.length() > 0) [ CD ]
Line_2 $$ public static String capitalizeWords(@NotNull String text, @NotNull String tokenizerDelim, boolean allWords, boolean leaveOriginalDelims) -->Line_3 $$ final StringTokenizer tokenizer = new StringTokenizer(text, tokenizerDelim, leaveOriginalDelims)[ CD ]
Line_6 $$ while (tokenizer.hasMoreTokens()) -->Line_12 $$ if (!allWords) [ CD ]
Line_4 $$ final StringBuilder out = new StringBuilder(text.length())-->Line_16 $$ return out.toString()[ FD ]
Line_12 $$ if (!allWords) -->Line_13 $$ toCapitalize = false[ CD ]
Line_2 $$ public static String capitalizeWords(@NotNull String text, @NotNull String tokenizerDelim, boolean allWords, boolean leaveOriginalDelims) -->Line_4 $$ final StringBuilder out = new StringBuilder(text.length())[ FD ]
Line_2 $$ public static String capitalizeWords(@NotNull String text, @NotNull String tokenizerDelim, boolean allWords, boolean leaveOriginalDelims) -->Line_8 $$ if (!leaveOriginalDelims && out.length() > 0) [ FD ]
Line_7 $$ final String word = tokenizer.nextToken()-->Line_11 $$ out.append(toCapitalize ? capitalize(word) : word)[ FD ]
Line_2 $$ public static String capitalizeWords(@NotNull String text, @NotNull String tokenizerDelim, boolean allWords, boolean leaveOriginalDelims) -->Line_4 $$ final StringBuilder out = new StringBuilder(text.length())[ CD ]
Line_5 $$ boolean toCapitalize = true-->Line_13 $$ toCapitalize = false[ FD ]
Line_2 $$ public static String capitalizeWords(@NotNull String text, @NotNull String tokenizerDelim, boolean allWords, boolean leaveOriginalDelims) -->Line_5 $$ boolean toCapitalize = true[ CD ]
Line_4 $$ final StringBuilder out = new StringBuilder(text.length())-->Line_8 $$ if (!leaveOriginalDelims && out.length() > 0) [ FD ]
Line_4 $$ final StringBuilder out = new StringBuilder(text.length())-->Line_9 $$ out.append(' ')[ FD ]
Line_3 $$ final StringTokenizer tokenizer = new StringTokenizer(text, tokenizerDelim, leaveOriginalDelims)-->Line_7 $$ final String word = tokenizer.nextToken()[ FD ]
Line_2 $$ public static String capitalizeWords(@NotNull String text, @NotNull String tokenizerDelim, boolean allWords, boolean leaveOriginalDelims) -->Line_12 $$ if (!allWords) [ FD ]
Line_6 $$ while (tokenizer.hasMoreTokens()) -->Line_11 $$ out.append(toCapitalize ? capitalize(word) : word)[ CD ]
Line_8 $$ if (!leaveOriginalDelims && out.length() > 0) -->Line_9 $$ out.append(' ')[ CD ]
Line_4 $$ final StringBuilder out = new StringBuilder(text.length())-->Line_11 $$ out.append(toCapitalize ? capitalize(word) : word)[ FD ]
Line_2 $$ public static String capitalizeWords(@NotNull String text, @NotNull String tokenizerDelim, boolean allWords, boolean leaveOriginalDelims) -->Line_16 $$ return out.toString()[ CD ]
