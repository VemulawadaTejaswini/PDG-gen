Line_12 $$ StringBuilder sb = new StringBuilder()-->Line_16 $$ sb.append(strings.get(i))[ FD ]
Line_14 $$ if (i != 0)-->Line_15 $$ sb.append(", ")[ CD ]
Line_2 $$ private static String joinWithAnd(@NotNull List<String> strings, int limit) -->Line_4 $$ if (size == 0)[ CD ]
Line_2 $$ private static String joinWithAnd(@NotNull List<String> strings, int limit) -->Line_8 $$ if (size == 2)[ CD ]
Line_2 $$ private static String joinWithAnd(@NotNull List<String> strings, int limit) -->Line_3 $$ int size = strings.size()[ FD ]
Line_13 $$ for (int i = 0; i < listCount; i++) -->Line_16 $$ sb.append(strings.get(i))[ CD ]
Line_2 $$ private static String joinWithAnd(@NotNull List<String> strings, int limit) -->Line_23 $$ return sb.toString()[ CD ]
Line_13 $$ for (int i = 0; i < listCount; i++) -->Line_16 $$ sb.append(strings.get(i))[ FD ]
Line_12 $$ StringBuilder sb = new StringBuilder()-->Line_19 $$ sb.append(" and ").append(size - limit + 1).append(" others")[ FD ]
Line_2 $$ private static String joinWithAnd(@NotNull List<String> strings, int limit) -->Line_9 $$ return strings.get(0) + " and " + strings.get(1)[ FD ]
Line_2 $$ private static String joinWithAnd(@NotNull List<String> strings, int limit) -->Line_11 $$ int listCount = isLimited ? limit - 1 : size - 1[ CD ]
Line_8 $$ if (size == 2)-->Line_9 $$ return strings.get(0) + " and " + strings.get(1)[ CD ]
Line_3 $$ int size = strings.size()-->Line_6 $$ if (size == 1)[ FD ]
Line_2 $$ private static String joinWithAnd(@NotNull List<String> strings, int limit) -->Line_10 $$ boolean isLimited = limit >= 2 && limit < size[ CD ]
Line_2 $$ private static String joinWithAnd(@NotNull List<String> strings, int limit) -->Line_12 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ private static String joinWithAnd(@NotNull List<String> strings, int limit) -->Line_21 $$ sb.append(" and ").append(strings.get(size - 1))[ FD ]
Line_18 $$ if (isLimited) -->Line_19 $$ sb.append(" and ").append(size - limit + 1).append(" others")[ CD ]
Line_12 $$ StringBuilder sb = new StringBuilder()-->Line_15 $$ sb.append(", ")[ FD ]
Line_11 $$ int listCount = isLimited ? limit - 1 : size - 1-->Line_13 $$ for (int i = 0; i < listCount; i++) [ FD ]
Line_13 $$ for (int i = 0; i < listCount; i++) -->Line_14 $$ if (i != 0)[ FD ]
Line_12 $$ StringBuilder sb = new StringBuilder()-->Line_21 $$ sb.append(" and ").append(strings.get(size - 1))[ FD ]
Line_2 $$ private static String joinWithAnd(@NotNull List<String> strings, int limit) -->Line_3 $$ int size = strings.size()[ CD ]
Line_18 $$ if (isLimited) -->Line_21 $$ sb.append(" and ").append(strings.get(size - 1))[ CD ]
Line_2 $$ private static String joinWithAnd(@NotNull List<String> strings, int limit) -->Line_13 $$ for (int i = 0; i < listCount; i++) [ CD ]
Line_3 $$ int size = strings.size()-->Line_4 $$ if (size == 0)[ FD ]
Line_2 $$ private static String joinWithAnd(@NotNull List<String> strings, int limit) -->Line_16 $$ sb.append(strings.get(i))[ FD ]
Line_12 $$ StringBuilder sb = new StringBuilder()-->Line_23 $$ return sb.toString()[ FD ]
Line_3 $$ int size = strings.size()-->Line_8 $$ if (size == 2)[ FD ]
Line_2 $$ private static String joinWithAnd(@NotNull List<String> strings, int limit) -->Line_18 $$ if (isLimited) [ CD ]
Line_2 $$ private static String joinWithAnd(@NotNull List<String> strings, int limit) -->Line_6 $$ if (size == 1)[ CD ]
Line_6 $$ if (size == 1)-->Line_7 $$ return strings.get(0)[ CD ]
Line_13 $$ for (int i = 0; i < listCount; i++) -->Line_14 $$ if (i != 0)[ CD ]
Line_4 $$ if (size == 0)-->Line_5 $$ return ""[ CD ]
Line_2 $$ private static String joinWithAnd(@NotNull List<String> strings, int limit) -->Line_7 $$ return strings.get(0)[ FD ]
