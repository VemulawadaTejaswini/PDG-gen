Line_10 $$ if (rangeInElement == null) -->Line_13 $$ append(os, "-1")[ CD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_17 $$ os.append(separator)[ FD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_9 $$ final ProperTextRange rangeInElement = info.getRangeInElement()[ CD ]
Line_9 $$ final ProperTextRange rangeInElement = info.getRangeInElement()-->Line_16 $$ append(os, String.valueOf(rangeInElement.getStartOffset()))[ FD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_3 $$ final GenericElementSignatureProvider provider = new GenericElementSignatureProvider()[ CD ]
Line_4 $$ final String signature = provider.getSignature(info.getElement())-->Line_7 $$ append(os, signature)[ FD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_11 $$ append(os, "-1")[ FD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_27 $$ os.append(separator)[ FD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_5 $$ append(os, info.getFile().getVirtualFile().getPath())[ CD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_8 $$ os.append(separator)[ CD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_19 $$ os.append(separator)[ FD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_26 $$ append(os, text)[ FD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_10 $$ if (rangeInElement == null) [ CD ]
Line_10 $$ if (rangeInElement == null) -->Line_14 $$ os.append(separator)[ CD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_6 $$ os.append(separator)[ CD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_24 $$ os.append(separator)[ CD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_14 $$ os.append(separator)[ FD ]
Line_10 $$ if (rangeInElement == null) -->Line_17 $$ os.append(separator)[ CD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_21 $$ append(os, String.valueOf(info.isNonCodeUsage()))[ FD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_4 $$ final String signature = provider.getSignature(info.getElement())[ CD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_8 $$ os.append(separator)[ FD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_12 $$ os.append(separator)[ FD ]
Line_9 $$ final ProperTextRange rangeInElement = info.getRangeInElement()-->Line_10 $$ if (rangeInElement == null) [ FD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_22 $$ os.append(separator)[ FD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_16 $$ append(os, String.valueOf(rangeInElement.getStartOffset()))[ FD ]
Line_9 $$ final ProperTextRange rangeInElement = info.getRangeInElement()-->Line_18 $$ append(os, String.valueOf(rangeInElement.getEndOffset()))[ FD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_24 $$ os.append(separator)[ FD ]
Line_3 $$ final GenericElementSignatureProvider provider = new GenericElementSignatureProvider()-->Line_4 $$ final String signature = provider.getSignature(info.getElement())[ FD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_9 $$ final ProperTextRange rangeInElement = info.getRangeInElement()[ FD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_5 $$ append(os, info.getFile().getVirtualFile().getPath())[ FD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_6 $$ os.append(separator)[ FD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_7 $$ append(os, signature)[ FD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_13 $$ append(os, "-1")[ FD ]
Line_10 $$ if (rangeInElement == null) -->Line_18 $$ append(os, String.valueOf(rangeInElement.getEndOffset()))[ CD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_23 $$ append(os, String.valueOf(info.isDynamicUsage()))[ FD ]
Line_10 $$ if (rangeInElement == null) -->Line_19 $$ os.append(separator)[ CD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_26 $$ append(os, text)[ CD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_18 $$ append(os, String.valueOf(rangeInElement.getEndOffset()))[ FD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_25 $$ final String text = new UsageInfo2UsageAdapter(info).getPlainText()[ CD ]
Line_10 $$ if (rangeInElement == null) -->Line_11 $$ append(os, "-1")[ CD ]
Line_25 $$ final String text = new UsageInfo2UsageAdapter(info).getPlainText()-->Line_26 $$ append(os, text)[ FD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_7 $$ append(os, signature)[ CD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_22 $$ os.append(separator)[ CD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_23 $$ append(os, String.valueOf(info.isDynamicUsage()))[ CD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_27 $$ os.append(separator)[ CD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_4 $$ final String signature = provider.getSignature(info.getElement())[ FD ]
Line_2 $$ public void serializeMe(UsageInfo info, StringBuilder os) throws IOException -->Line_21 $$ append(os, String.valueOf(info.isNonCodeUsage()))[ CD ]
Line_10 $$ if (rangeInElement == null) -->Line_16 $$ append(os, String.valueOf(rangeInElement.getStartOffset()))[ CD ]
Line_10 $$ if (rangeInElement == null) -->Line_12 $$ os.append(separator)[ CD ]
