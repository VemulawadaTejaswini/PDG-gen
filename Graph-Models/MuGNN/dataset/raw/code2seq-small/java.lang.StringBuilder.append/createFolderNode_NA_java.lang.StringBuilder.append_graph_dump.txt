Line_3 $$ PsiDirectory realDirectory = directory-->Line_16 $$ realDirectory = subdirectories[0][ FD ]
Line_13 $$ textBuilder = new StringBuilder()-->Line_17 $$ textBuilder.append('.').append(realDirectory.getName())[ FD ]
Line_2 $$ private AbstractFolderNode createFolderNode(PsiDirectory directory) -->Line_21 $$ return new AbstractFolderNode(getModule(), realDirectory, presentableText, myLocationMark, getSettings(), FOLDER) [ CD ]
Line_6 $$ do -->Line_9 $$ PsiDirectory[] subdirectories = realDirectory.getSubdirectories()[ CD ]
Line_4 $$ StringBuilder textBuilder = null-->Line_13 $$ textBuilder = new StringBuilder()[ FD ]
Line_5 $$ if (getSettings().isHideEmptyMiddlePackages()) -->Line_6 $$ do [ CD ]
Line_12 $$ if (textBuilder == null) -->Line_14 $$ textBuilder.append(realDirectory.getName())[ CD ]
Line_21 $$ return new AbstractFolderNode(getModule(), realDirectory, presentableText, myLocationMark, getSettings(), FOLDER) -->Line_23 $$ AbstractFolderNode.this.processNotDirectoryFile(nodes, file)[ FD ]
Line_13 $$ textBuilder = new StringBuilder()-->Line_20 $$ String presentableText = textBuilder == null ? directory.getName() : textBuilder.toString()[ FD ]
Line_2 $$ private AbstractFolderNode createFolderNode(PsiDirectory directory) -->Line_5 $$ if (getSettings().isHideEmptyMiddlePackages()) [ CD ]
Line_2 $$ private AbstractFolderNode createFolderNode(PsiDirectory directory) -->Line_20 $$ String presentableText = textBuilder == null ? directory.getName() : textBuilder.toString()[ FD ]
Line_21 $$ return new AbstractFolderNode(getModule(), realDirectory, presentableText, myLocationMark, getSettings(), FOLDER) -->Line_26 $$ return AbstractFolderNode.this.createClassNode(typeDefinition)[ CD ]
Line_6 $$ do -->Line_17 $$ textBuilder.append('.').append(realDirectory.getName())[ CD ]
Line_3 $$ PsiDirectory realDirectory = directory-->Line_7 $$ if (realDirectory.getFiles().length > 0)[ FD ]
Line_16 $$ realDirectory = subdirectories[0]-->Line_14 $$ textBuilder.append(realDirectory.getName())[ FD ]
Line_21 $$ return new AbstractFolderNode(getModule(), realDirectory, presentableText, myLocationMark, getSettings(), FOLDER) -->Line_23 $$ AbstractFolderNode.this.processNotDirectoryFile(nodes, file)[ CD ]
Line_2 $$ private AbstractFolderNode createFolderNode(PsiDirectory directory) -->Line_4 $$ StringBuilder textBuilder = null[ CD ]
Line_13 $$ textBuilder = new StringBuilder()-->Line_14 $$ textBuilder.append(realDirectory.getName())[ FD ]
Line_6 $$ do -->Line_7 $$ if (realDirectory.getFiles().length > 0)[ CD ]
Line_3 $$ PsiDirectory realDirectory = directory-->Line_17 $$ textBuilder.append('.').append(realDirectory.getName())[ FD ]
Line_6 $$ do -->Line_16 $$ realDirectory = subdirectories[0][ CD ]
Line_6 $$ do -->Line_10 $$ if (subdirectories.length != 1)[ CD ]
Line_16 $$ realDirectory = subdirectories[0]-->Line_9 $$ PsiDirectory[] subdirectories = realDirectory.getSubdirectories()[ FD ]
Line_13 $$ textBuilder = new StringBuilder()-->Line_12 $$ if (textBuilder == null) [ FD ]
Line_16 $$ realDirectory = subdirectories[0]-->Line_17 $$ textBuilder.append('.').append(realDirectory.getName())[ FD ]
Line_3 $$ PsiDirectory realDirectory = directory-->Line_9 $$ PsiDirectory[] subdirectories = realDirectory.getSubdirectories()[ FD ]
Line_4 $$ StringBuilder textBuilder = null-->Line_20 $$ String presentableText = textBuilder == null ? directory.getName() : textBuilder.toString()[ FD ]
Line_21 $$ return new AbstractFolderNode(getModule(), realDirectory, presentableText, myLocationMark, getSettings(), FOLDER) -->Line_26 $$ return AbstractFolderNode.this.createClassNode(typeDefinition)[ FD ]
Line_12 $$ if (textBuilder == null) -->Line_13 $$ textBuilder = new StringBuilder()[ CD ]
Line_2 $$ private AbstractFolderNode createFolderNode(PsiDirectory directory) -->Line_3 $$ PsiDirectory realDirectory = directory[ CD ]
Line_2 $$ private AbstractFolderNode createFolderNode(PsiDirectory directory) -->Line_20 $$ String presentableText = textBuilder == null ? directory.getName() : textBuilder.toString()[ CD ]
Line_4 $$ StringBuilder textBuilder = null-->Line_17 $$ textBuilder.append('.').append(realDirectory.getName())[ FD ]
Line_4 $$ StringBuilder textBuilder = null-->Line_14 $$ textBuilder.append(realDirectory.getName())[ FD ]
Line_3 $$ PsiDirectory realDirectory = directory-->Line_14 $$ textBuilder.append(realDirectory.getName())[ FD ]
Line_16 $$ realDirectory = subdirectories[0]-->Line_7 $$ if (realDirectory.getFiles().length > 0)[ FD ]
Line_4 $$ StringBuilder textBuilder = null-->Line_12 $$ if (textBuilder == null) [ FD ]
Line_6 $$ do -->Line_12 $$ if (textBuilder == null) [ CD ]
