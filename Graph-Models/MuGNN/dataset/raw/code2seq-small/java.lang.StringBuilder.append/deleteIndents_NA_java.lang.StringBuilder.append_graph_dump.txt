Line_3 $$ StringBuilder result = new StringBuilder()-->Line_11 $$ return result.toString()[ FD ]
Line_4 $$ int offset = startOffset-->Line_8 $$ offset = deletion.getRealPos() + deletion.getLength()[ FD ]
Line_2 $$ private CharSequence deleteIndents(@NotNull CharSequence buffer, int startOffset, int endOffset) -->Line_3 $$ StringBuilder result = new StringBuilder()[ CD ]
Line_4 $$ int offset = startOffset-->Line_6 $$ result.append(buffer.subSequence(offset, deletion.getRealPos()))[ FD ]
Line_2 $$ private CharSequence deleteIndents(@NotNull CharSequence buffer, int startOffset, int endOffset) -->Line_10 $$ result.append(buffer.subSequence(offset, endOffset))[ FD ]
Line_2 $$ private CharSequence deleteIndents(@NotNull CharSequence buffer, int startOffset, int endOffset) -->Line_11 $$ return result.toString()[ CD ]
Line_3 $$ StringBuilder result = new StringBuilder()-->Line_6 $$ result.append(buffer.subSequence(offset, deletion.getRealPos()))[ FD ]
Line_2 $$ private CharSequence deleteIndents(@NotNull CharSequence buffer, int startOffset, int endOffset) -->Line_4 $$ int offset = startOffset[ CD ]
Line_2 $$ private CharSequence deleteIndents(@NotNull CharSequence buffer, int startOffset, int endOffset) -->Line_6 $$ result.append(buffer.subSequence(offset, deletion.getRealPos()))[ FD ]
Line_8 $$ offset = deletion.getRealPos() + deletion.getLength()-->Line_10 $$ result.append(buffer.subSequence(offset, endOffset))[ FD ]
Line_4 $$ int offset = startOffset-->Line_10 $$ result.append(buffer.subSequence(offset, endOffset))[ FD ]
Line_3 $$ StringBuilder result = new StringBuilder()-->Line_10 $$ result.append(buffer.subSequence(offset, endOffset))[ FD ]
Line_3 $$ StringBuilder result = new StringBuilder()-->Line_7 $$ deletion.setShrunkPos(result.length())[ FD ]
Line_5 $$ for (DeletedIndentInfo deletion : myDeletions) -->Line_6 $$ result.append(buffer.subSequence(offset, deletion.getRealPos()))[ FD ]
Line_5 $$ for (DeletedIndentInfo deletion : myDeletions) -->Line_8 $$ offset = deletion.getRealPos() + deletion.getLength()[ FD ]
Line_2 $$ private CharSequence deleteIndents(@NotNull CharSequence buffer, int startOffset, int endOffset) -->Line_10 $$ result.append(buffer.subSequence(offset, endOffset))[ CD ]
Line_5 $$ for (DeletedIndentInfo deletion : myDeletions) -->Line_7 $$ deletion.setShrunkPos(result.length())[ FD ]
