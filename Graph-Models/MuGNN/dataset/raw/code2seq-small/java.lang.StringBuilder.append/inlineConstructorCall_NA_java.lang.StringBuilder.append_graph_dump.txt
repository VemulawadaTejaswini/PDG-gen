Line_2 $$ public static void inlineConstructorCall(PsiCall constructorCall) -->Line_29 $$ final PsiExpression[] args = methodCall.getArgumentList().getExpressions()[ CD ]
Line_2 $$ public static void inlineConstructorCall(PsiCall constructorCall) -->Line_4 $$ LOG.assertTrue(oldConstructor != null)[ CD ]
Line_9 $$ if (varargType instanceof PsiEllipsisType) -->Line_14 $$ for (int i = parameters.length - 1; i < instanceCreationArguments.length; i++) [ CD ]
Line_2 $$ public static void inlineConstructorCall(PsiCall constructorCall) -->Line_24 $$ LOG.assertTrue(statements.length == 1 && statements[0] instanceof PsiExpressionStatement)[ CD ]
Line_2 $$ public static void inlineConstructorCall(PsiCall constructorCall) -->Line_5 $$ PsiExpression[] instanceCreationArguments = constructorCall.getArgumentList().getExpressions()[ CD ]
Line_9 $$ if (varargType instanceof PsiEllipsisType) -->Line_20 $$ instanceCreationArguments = exprs[ CD ]
Line_34 $$ final PsiExpressionList exprList = (PsiExpressionList) constructorCall.getArgumentList().replace(methodCall.getArgumentList())-->Line_35 $$ ChangeContextUtil.decodeContextInfo(exprList, PsiTreeUtil.getParentOfType(constructorCall, PsiClass.class), null)[ FD ]
Line_6 $$ if (oldConstructor.isVarArgs()) -->Line_8 $$ final PsiType varargType = parameters[parameters.length - 1].getType()[ CD ]
Line_9 $$ if (varargType instanceof PsiEllipsisType) -->Line_10 $$ final PsiType arrayType = constructorCall.resolveMethodGenerics().getSubstitutor().substitute(((PsiEllipsisType) varargType).getComponentType())[ CD ]
Line_13 $$ StringBuilder varargs = new StringBuilder()-->Line_16 $$ varargs.append(", ")[ FD ]
Line_2 $$ public static void inlineConstructorCall(PsiCall constructorCall) -->Line_28 $$ PsiMethodCallExpression methodCall = (PsiMethodCallExpression) expression.copy()[ CD ]
Line_13 $$ StringBuilder varargs = new StringBuilder()-->Line_17 $$ varargs.append(instanceCreationArguments[i].getText())[ FD ]
Line_9 $$ if (varargType instanceof PsiEllipsisType) -->Line_19 $$ exprs[parameters.length - 1] = JavaPsiFacade.getElementFactory(constructorCall.getProject()).createExpressionFromText("new " + arrayType.getCanonicalText() + "[][ CD ]
Line_5 $$ PsiExpression[] instanceCreationArguments = constructorCall.getArgumentList().getExpressions()-->Line_31 $$ replaceParameterReferences(arg, oldConstructor, instanceCreationArguments)[ FD ]
Line_6 $$ if (oldConstructor.isVarArgs()) -->Line_9 $$ if (varargType instanceof PsiEllipsisType) [ CD ]
Line_14 $$ for (int i = parameters.length - 1; i < instanceCreationArguments.length; i++) -->Line_15 $$ if (varargs.length() > 0)[ CD ]
Line_3 $$ final PsiMethod oldConstructor = constructorCall.resolveMethod()-->Line_7 $$ final PsiParameter[] parameters = oldConstructor.getParameterList().getParameters()[ FD ]
Line_9 $$ if (varargType instanceof PsiEllipsisType) -->Line_11 $$ final PsiExpression[] exprs = new PsiExpression[parameters.length][ CD ]
Line_14 $$ for (int i = parameters.length - 1; i < instanceCreationArguments.length; i++) -->Line_17 $$ varargs.append(instanceCreationArguments[i].getText())[ CD ]
Line_2 $$ public static void inlineConstructorCall(PsiCall constructorCall) -->Line_23 $$ PsiStatement[] statements = oldConstructor.getBody().getStatements()[ CD ]
Line_25 $$ PsiExpression expression = ((PsiExpressionStatement) statements[0]).getExpression()-->Line_39 $$ ChangeContextUtil.clearContextInfo(expression)[ FD ]
Line_25 $$ PsiExpression expression = ((PsiExpressionStatement) statements[0]).getExpression()-->Line_27 $$ ChangeContextUtil.encodeContextInfo(expression, true)[ FD ]
Line_30 $$ for (PsiExpression arg : args) -->Line_31 $$ replaceParameterReferences(arg, oldConstructor, instanceCreationArguments)[ FD ]
Line_25 $$ PsiExpression expression = ((PsiExpressionStatement) statements[0]).getExpression()-->Line_28 $$ PsiMethodCallExpression methodCall = (PsiMethodCallExpression) expression.copy()[ FD ]
Line_3 $$ final PsiMethod oldConstructor = constructorCall.resolveMethod()-->Line_6 $$ if (oldConstructor.isVarArgs()) [ FD ]
Line_11 $$ final PsiExpression[] exprs = new PsiExpression[parameters.length]-->Line_12 $$ System.arraycopy(instanceCreationArguments, 0, exprs, 0, parameters.length - 1)[ FD ]
Line_13 $$ StringBuilder varargs = new StringBuilder()-->Line_19 $$ exprs[parameters.length - 1] = JavaPsiFacade.getElementFactory(constructorCall.getProject()).createExpressionFromText("new " + arrayType.getCanonicalText() + "[][ FD ]
Line_2 $$ public static void inlineConstructorCall(PsiCall constructorCall) -->Line_19 $$ exprs[parameters.length - 1] = JavaPsiFacade.getElementFactory(constructorCall.getProject()).createExpressionFromText("new " + arrayType.getCanonicalText() + "[][ FD ]
Line_2 $$ public static void inlineConstructorCall(PsiCall constructorCall) -->Line_10 $$ final PsiType arrayType = constructorCall.resolveMethodGenerics().getSubstitutor().substitute(((PsiEllipsisType) varargType).getComponentType())[ FD ]
Line_2 $$ public static void inlineConstructorCall(PsiCall constructorCall) -->Line_27 $$ ChangeContextUtil.encodeContextInfo(expression, true)[ CD ]
Line_2 $$ public static void inlineConstructorCall(PsiCall constructorCall) -->Line_3 $$ final PsiMethod oldConstructor = constructorCall.resolveMethod()[ FD ]
Line_2 $$ public static void inlineConstructorCall(PsiCall constructorCall) -->Line_25 $$ PsiExpression expression = ((PsiExpressionStatement) statements[0]).getExpression()[ CD ]
Line_13 $$ StringBuilder varargs = new StringBuilder()-->Line_15 $$ if (varargs.length() > 0)[ FD ]
Line_2 $$ public static void inlineConstructorCall(PsiCall constructorCall) -->Line_5 $$ PsiExpression[] instanceCreationArguments = constructorCall.getArgumentList().getExpressions()[ FD ]
Line_3 $$ final PsiMethod oldConstructor = constructorCall.resolveMethod()-->Line_31 $$ replaceParameterReferences(arg, oldConstructor, instanceCreationArguments)[ FD ]
Line_2 $$ public static void inlineConstructorCall(PsiCall constructorCall) -->Line_3 $$ final PsiMethod oldConstructor = constructorCall.resolveMethod()[ CD ]
Line_28 $$ PsiMethodCallExpression methodCall = (PsiMethodCallExpression) expression.copy()-->Line_29 $$ final PsiExpression[] args = methodCall.getArgumentList().getExpressions()[ FD ]
Line_20 $$ instanceCreationArguments = exprs-->Line_31 $$ replaceParameterReferences(arg, oldConstructor, instanceCreationArguments)[ FD ]
Line_9 $$ if (varargType instanceof PsiEllipsisType) -->Line_12 $$ System.arraycopy(instanceCreationArguments, 0, exprs, 0, parameters.length - 1)[ CD ]
Line_28 $$ PsiMethodCallExpression methodCall = (PsiMethodCallExpression) expression.copy()-->Line_34 $$ final PsiExpressionList exprList = (PsiExpressionList) constructorCall.getArgumentList().replace(methodCall.getArgumentList())[ FD ]
Line_2 $$ public static void inlineConstructorCall(PsiCall constructorCall) -->Line_26 $$ LOG.assertTrue(expression instanceof PsiMethodCallExpression)[ CD ]
Line_5 $$ PsiExpression[] instanceCreationArguments = constructorCall.getArgumentList().getExpressions()-->Line_12 $$ System.arraycopy(instanceCreationArguments, 0, exprs, 0, parameters.length - 1)[ FD ]
Line_2 $$ public static void inlineConstructorCall(PsiCall constructorCall) -->Line_6 $$ if (oldConstructor.isVarArgs()) [ CD ]
Line_2 $$ public static void inlineConstructorCall(PsiCall constructorCall) -->Line_34 $$ final PsiExpressionList exprList = (PsiExpressionList) constructorCall.getArgumentList().replace(methodCall.getArgumentList())[ FD ]
Line_5 $$ PsiExpression[] instanceCreationArguments = constructorCall.getArgumentList().getExpressions()-->Line_20 $$ instanceCreationArguments = exprs[ FD ]
Line_10 $$ final PsiType arrayType = constructorCall.resolveMethodGenerics().getSubstitutor().substitute(((PsiEllipsisType) varargType).getComponentType())-->Line_19 $$ exprs[parameters.length - 1] = JavaPsiFacade.getElementFactory(constructorCall.getProject()).createExpressionFromText("new " + arrayType.getCanonicalText() + "[][ FD ]
Line_6 $$ if (oldConstructor.isVarArgs()) -->Line_7 $$ final PsiParameter[] parameters = oldConstructor.getParameterList().getParameters()[ CD ]
Line_15 $$ if (varargs.length() > 0)-->Line_16 $$ varargs.append(", ")[ CD ]
Line_8 $$ final PsiType varargType = parameters[parameters.length - 1].getType()-->Line_9 $$ if (varargType instanceof PsiEllipsisType) [ FD ]
Line_3 $$ final PsiMethod oldConstructor = constructorCall.resolveMethod()-->Line_23 $$ PsiStatement[] statements = oldConstructor.getBody().getStatements()[ FD ]
Line_9 $$ if (varargType instanceof PsiEllipsisType) -->Line_13 $$ StringBuilder varargs = new StringBuilder()[ CD ]
Line_2 $$ public static void inlineConstructorCall(PsiCall constructorCall) -->Line_39 $$ ChangeContextUtil.clearContextInfo(expression)[ CD ]
Line_11 $$ final PsiExpression[] exprs = new PsiExpression[parameters.length]-->Line_20 $$ instanceCreationArguments = exprs[ FD ]
Line_2 $$ public static void inlineConstructorCall(PsiCall constructorCall) -->Line_35 $$ ChangeContextUtil.decodeContextInfo(exprList, PsiTreeUtil.getParentOfType(constructorCall, PsiClass.class), null)[ FD ]
