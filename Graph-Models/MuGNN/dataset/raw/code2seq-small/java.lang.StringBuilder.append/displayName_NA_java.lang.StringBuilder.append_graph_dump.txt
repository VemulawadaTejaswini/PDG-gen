Line_22 $$ if (hasTrailingClosure) -->Line_23 $$ builder.append(" [ CD ]
Line_9 $$ if (expression.getArguments() instanceof ArgumentListExpression) -->Line_13 $$ if (!otherArgs.isEmpty() || !hasTrailingClosure) [ CD ]
Line_10 $$ ArgumentListExpression arguments = (ArgumentListExpression) expression.getArguments()-->Line_12 $$ List<Expression> otherArgs = hasTrailingClosure ? arguments.getExpressions().subList(0, arguments.getExpressions().size() - 1) : arguments.getExpressions()[ FD ]
Line_12 $$ List<Expression> otherArgs = hasTrailingClosure ? arguments.getExpressions().subList(0, arguments.getExpressions().size() - 1) : arguments.getExpressions()-->Line_15 $$ builder.append(Joiner.on(", ").join(CollectionUtils.collect(otherArgs, new Transformer<Object, Expression>() [ FD ]
Line_2 $$ public static String displayName(MethodCallExpression expression) -->Line_4 $$ if (!expression.isImplicitThis()) [ FD ]
Line_9 $$ if (expression.getArguments() instanceof ArgumentListExpression) -->Line_12 $$ List<Expression> otherArgs = hasTrailingClosure ? arguments.getExpressions().subList(0, arguments.getExpressions().size() - 1) : arguments.getExpressions()[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_5 $$ builder.append(expression.getObjectExpression().getText())[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_15 $$ builder.append(Joiner.on(", ").join(CollectionUtils.collect(otherArgs, new Transformer<Object, Expression>() [ FD ]
Line_13 $$ if (!otherArgs.isEmpty() || !hasTrailingClosure) -->Line_20 $$ builder.append(")")[ CD ]
Line_9 $$ if (expression.getArguments() instanceof ArgumentListExpression) -->Line_22 $$ if (hasTrailingClosure) [ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_8 $$ builder.append(expression.getMethodAsString())[ FD ]
Line_2 $$ public static String displayName(MethodCallExpression expression) -->Line_28 $$ return builder.toString()[ CD ]
Line_15 $$ builder.append(Joiner.on(", ").join(CollectionUtils.collect(otherArgs, new Transformer<Object, Expression>() -->Line_17 $$ return expression.getText()[ FD ]
Line_2 $$ public static String displayName(MethodCallExpression expression) -->Line_17 $$ return expression.getText()[ FD ]
Line_2 $$ public static String displayName(MethodCallExpression expression) -->Line_4 $$ if (!expression.isImplicitThis()) [ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_6 $$ builder.append('.')[ FD ]
Line_2 $$ public static String displayName(MethodCallExpression expression) -->Line_5 $$ builder.append(expression.getObjectExpression().getText())[ FD ]
Line_2 $$ public static String displayName(MethodCallExpression expression) -->Line_3 $$ StringBuilder builder = new StringBuilder()[ CD ]
Line_4 $$ if (!expression.isImplicitThis()) -->Line_6 $$ builder.append('.')[ CD ]
Line_13 $$ if (!otherArgs.isEmpty() || !hasTrailingClosure) -->Line_14 $$ builder.append("(")[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_20 $$ builder.append(")")[ FD ]
Line_15 $$ builder.append(Joiner.on(", ").join(CollectionUtils.collect(otherArgs, new Transformer<Object, Expression>() -->Line_17 $$ return expression.getText()[ CD ]
Line_9 $$ if (expression.getArguments() instanceof ArgumentListExpression) -->Line_11 $$ boolean hasTrailingClosure = !arguments.getExpressions().isEmpty() && arguments.getExpression(arguments.getExpressions().size() - 1) instanceof ClosureExpression[ CD ]
Line_2 $$ public static String displayName(MethodCallExpression expression) -->Line_9 $$ if (expression.getArguments() instanceof ArgumentListExpression) [ CD ]
Line_2 $$ public static String displayName(MethodCallExpression expression) -->Line_9 $$ if (expression.getArguments() instanceof ArgumentListExpression) [ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_23 $$ builder.append(" [ FD ]
Line_12 $$ List<Expression> otherArgs = hasTrailingClosure ? arguments.getExpressions().subList(0, arguments.getExpressions().size() - 1) : arguments.getExpressions()-->Line_13 $$ if (!otherArgs.isEmpty() || !hasTrailingClosure) [ FD ]
Line_4 $$ if (!expression.isImplicitThis()) -->Line_5 $$ builder.append(expression.getObjectExpression().getText())[ CD ]
Line_9 $$ if (expression.getArguments() instanceof ArgumentListExpression) -->Line_26 $$ builder.append("()")[ CD ]
Line_9 $$ if (expression.getArguments() instanceof ArgumentListExpression) -->Line_10 $$ ArgumentListExpression arguments = (ArgumentListExpression) expression.getArguments()[ CD ]
Line_13 $$ if (!otherArgs.isEmpty() || !hasTrailingClosure) -->Line_15 $$ builder.append(Joiner.on(", ").join(CollectionUtils.collect(otherArgs, new Transformer<Object, Expression>() [ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_28 $$ return builder.toString()[ FD ]
Line_2 $$ public static String displayName(MethodCallExpression expression) -->Line_8 $$ builder.append(expression.getMethodAsString())[ FD ]
Line_2 $$ public static String displayName(MethodCallExpression expression) -->Line_8 $$ builder.append(expression.getMethodAsString())[ CD ]
Line_10 $$ ArgumentListExpression arguments = (ArgumentListExpression) expression.getArguments()-->Line_11 $$ boolean hasTrailingClosure = !arguments.getExpressions().isEmpty() && arguments.getExpression(arguments.getExpressions().size() - 1) instanceof ClosureExpression[ FD ]
Line_11 $$ boolean hasTrailingClosure = !arguments.getExpressions().isEmpty() && arguments.getExpression(arguments.getExpressions().size() - 1) instanceof ClosureExpression-->Line_13 $$ if (!otherArgs.isEmpty() || !hasTrailingClosure) [ FD ]
Line_2 $$ public static String displayName(MethodCallExpression expression) -->Line_10 $$ ArgumentListExpression arguments = (ArgumentListExpression) expression.getArguments()[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_14 $$ builder.append("(")[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_26 $$ builder.append("()")[ FD ]
