Line_2 $$ static void writeTypeParameters(StringBuilder text, PsiTypeParameterListOwner typeParameterListOwner, final ClassNameProvider classNameProvider) -->Line_23 $$ text.append('>')[ FD ]
Line_2 $$ static void writeTypeParameters(StringBuilder text, PsiTypeParameterListOwner typeParameterListOwner, final ClassNameProvider classNameProvider) -->Line_3 $$ if (!typeParameterListOwner.hasTypeParameters())[ FD ]
Line_7 $$ final PsiTypeParameterList typeParameterList = typeParameterListOwner.getTypeParameterList()-->Line_19 $$ TypeWriter.writeType(text, extendsListTypes[j], typeParameterList, classNameProvider)[ FD ]
Line_17 $$ if (j > 0)-->Line_18 $$ text.append(" & ")[ CD ]
Line_2 $$ static void writeTypeParameters(StringBuilder text, PsiTypeParameterListOwner typeParameterListOwner, final ClassNameProvider classNameProvider) -->Line_15 $$ text.append(" extends ")[ FD ]
Line_3 $$ if (!typeParameterListOwner.hasTypeParameters())-->Line_4 $$ return[ CD ]
Line_8 $$ for (int i = 0; i < parameters.length; i++) -->Line_9 $$ if (i > 0)[ CD ]
Line_2 $$ static void writeTypeParameters(StringBuilder text, PsiTypeParameterListOwner typeParameterListOwner, final ClassNameProvider classNameProvider) -->Line_10 $$ text.append(", ")[ FD ]
Line_11 $$ PsiTypeParameter parameter = parameters[i]-->Line_13 $$ PsiClassType[] extendsListTypes = parameter.getExtendsListTypes()[ FD ]
Line_8 $$ for (int i = 0; i < parameters.length; i++) -->Line_12 $$ text.append(parameter.getName())[ CD ]
Line_2 $$ static void writeTypeParameters(StringBuilder text, PsiTypeParameterListOwner typeParameterListOwner, final ClassNameProvider classNameProvider) -->Line_19 $$ TypeWriter.writeType(text, extendsListTypes[j], typeParameterList, classNameProvider)[ FD ]
Line_16 $$ for (int j = 0; j < extendsListTypes.length; j++) -->Line_17 $$ if (j > 0)[ CD ]
Line_2 $$ static void writeTypeParameters(StringBuilder text, PsiTypeParameterListOwner typeParameterListOwner, final ClassNameProvider classNameProvider) -->Line_6 $$ PsiTypeParameter[] parameters = typeParameterListOwner.getTypeParameters()[ CD ]
Line_2 $$ static void writeTypeParameters(StringBuilder text, PsiTypeParameterListOwner typeParameterListOwner, final ClassNameProvider classNameProvider) -->Line_12 $$ text.append(parameter.getName())[ FD ]
Line_8 $$ for (int i = 0; i < parameters.length; i++) -->Line_13 $$ PsiClassType[] extendsListTypes = parameter.getExtendsListTypes()[ CD ]
Line_2 $$ static void writeTypeParameters(StringBuilder text, PsiTypeParameterListOwner typeParameterListOwner, final ClassNameProvider classNameProvider) -->Line_8 $$ for (int i = 0; i < parameters.length; i++) [ CD ]
Line_16 $$ for (int j = 0; j < extendsListTypes.length; j++) -->Line_19 $$ TypeWriter.writeType(text, extendsListTypes[j], typeParameterList, classNameProvider)[ CD ]
Line_2 $$ static void writeTypeParameters(StringBuilder text, PsiTypeParameterListOwner typeParameterListOwner, final ClassNameProvider classNameProvider) -->Line_7 $$ final PsiTypeParameterList typeParameterList = typeParameterListOwner.getTypeParameterList()[ CD ]
Line_2 $$ static void writeTypeParameters(StringBuilder text, PsiTypeParameterListOwner typeParameterListOwner, final ClassNameProvider classNameProvider) -->Line_5 $$ text.append('<')[ FD ]
Line_2 $$ static void writeTypeParameters(StringBuilder text, PsiTypeParameterListOwner typeParameterListOwner, final ClassNameProvider classNameProvider) -->Line_6 $$ PsiTypeParameter[] parameters = typeParameterListOwner.getTypeParameters()[ FD ]
Line_2 $$ static void writeTypeParameters(StringBuilder text, PsiTypeParameterListOwner typeParameterListOwner, final ClassNameProvider classNameProvider) -->Line_7 $$ final PsiTypeParameterList typeParameterList = typeParameterListOwner.getTypeParameterList()[ FD ]
Line_8 $$ for (int i = 0; i < parameters.length; i++) -->Line_14 $$ if (extendsListTypes.length > 0) [ CD ]
Line_11 $$ PsiTypeParameter parameter = parameters[i]-->Line_12 $$ text.append(parameter.getName())[ FD ]
Line_8 $$ for (int i = 0; i < parameters.length; i++) -->Line_11 $$ PsiTypeParameter parameter = parameters[i][ CD ]
Line_2 $$ static void writeTypeParameters(StringBuilder text, PsiTypeParameterListOwner typeParameterListOwner, final ClassNameProvider classNameProvider) -->Line_23 $$ text.append('>')[ CD ]
Line_2 $$ static void writeTypeParameters(StringBuilder text, PsiTypeParameterListOwner typeParameterListOwner, final ClassNameProvider classNameProvider) -->Line_5 $$ text.append('<')[ CD ]
Line_9 $$ if (i > 0)-->Line_10 $$ text.append(", ")[ CD ]
Line_16 $$ for (int j = 0; j < extendsListTypes.length; j++) -->Line_17 $$ if (j > 0)[ FD ]
Line_8 $$ for (int i = 0; i < parameters.length; i++) -->Line_9 $$ if (i > 0)[ FD ]
Line_14 $$ if (extendsListTypes.length > 0) -->Line_15 $$ text.append(" extends ")[ CD ]
Line_14 $$ if (extendsListTypes.length > 0) -->Line_16 $$ for (int j = 0; j < extendsListTypes.length; j++) [ CD ]
Line_2 $$ static void writeTypeParameters(StringBuilder text, PsiTypeParameterListOwner typeParameterListOwner, final ClassNameProvider classNameProvider) -->Line_18 $$ text.append(" & ")[ FD ]
Line_2 $$ static void writeTypeParameters(StringBuilder text, PsiTypeParameterListOwner typeParameterListOwner, final ClassNameProvider classNameProvider) -->Line_3 $$ if (!typeParameterListOwner.hasTypeParameters())[ CD ]
