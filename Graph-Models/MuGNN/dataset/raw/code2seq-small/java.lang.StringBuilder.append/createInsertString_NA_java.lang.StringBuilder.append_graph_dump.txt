Line_7 $$ StringBuilder insertStatement = new StringBuilder()-->Line_35 $$ insertStatement.append(", ")[ FD ]
Line_2 $$ public String createInsertString(String... generatedKeyNames) -->Line_15 $$ int columnCount = 0[ CD ]
Line_7 $$ StringBuilder insertStatement = new StringBuilder()-->Line_13 $$ insertStatement.append(getTableName())[ FD ]
Line_2 $$ public String createInsertString(String... generatedKeyNames) -->Line_9 $$ if (getSchemaName() != null) [ CD ]
Line_34 $$ if (i > 0) -->Line_35 $$ insertStatement.append(", ")[ CD ]
Line_33 $$ for (int i = 0; i < columnCount; i++) -->Line_34 $$ if (i > 0) [ CD ]
Line_2 $$ public String createInsertString(String... generatedKeyNames) -->Line_25 $$ insertStatement.append(") VALUES(")[ CD ]
Line_9 $$ if (getSchemaName() != null) -->Line_10 $$ insertStatement.append(getSchemaName())[ CD ]
Line_7 $$ StringBuilder insertStatement = new StringBuilder()-->Line_22 $$ insertStatement.append(columnName)[ FD ]
Line_7 $$ StringBuilder insertStatement = new StringBuilder()-->Line_20 $$ insertStatement.append(", ")[ FD ]
Line_7 $$ StringBuilder insertStatement = new StringBuilder()-->Line_14 $$ insertStatement.append(" (")[ FD ]
Line_17 $$ if (!keys.contains(columnName.toUpperCase())) -->Line_19 $$ if (columnCount > 1) [ CD ]
Line_17 $$ if (!keys.contains(columnName.toUpperCase())) -->Line_18 $$ columnCount++[ CD ]
Line_2 $$ public String createInsertString(String... generatedKeyNames) -->Line_13 $$ insertStatement.append(getTableName())[ CD ]
Line_2 $$ public String createInsertString(String... generatedKeyNames) -->Line_3 $$ Set<String> keys = new LinkedHashSet<String>(generatedKeyNames.length)[ CD ]
Line_27 $$ if (this.generatedKeyColumnsUsed) -->Line_28 $$ logger.info("Unable to locate non-key columns for table '" + getTableName() + "' so an empty insert statement is generated")[ CD ]
Line_2 $$ public String createInsertString(String... generatedKeyNames) -->Line_40 $$ return insertStatement.toString()[ CD ]
Line_9 $$ if (getSchemaName() != null) -->Line_11 $$ insertStatement.append(".")[ CD ]
Line_15 $$ int columnCount = 0-->Line_33 $$ for (int i = 0; i < columnCount; i++) [ FD ]
Line_33 $$ for (int i = 0; i < columnCount; i++) -->Line_37 $$ insertStatement.append("?")[ CD ]
Line_7 $$ StringBuilder insertStatement = new StringBuilder()-->Line_39 $$ insertStatement.append(")")[ FD ]
Line_2 $$ public String createInsertString(String... generatedKeyNames) -->Line_7 $$ StringBuilder insertStatement = new StringBuilder()[ CD ]
Line_7 $$ StringBuilder insertStatement = new StringBuilder()-->Line_11 $$ insertStatement.append(".")[ FD ]
Line_7 $$ StringBuilder insertStatement = new StringBuilder()-->Line_25 $$ insertStatement.append(") VALUES(")[ FD ]
Line_16 $$ for (String columnName : getTableColumns()) -->Line_17 $$ if (!keys.contains(columnName.toUpperCase())) [ FD ]
Line_2 $$ public String createInsertString(String... generatedKeyNames) -->Line_33 $$ for (int i = 0; i < columnCount; i++) [ CD ]
Line_7 $$ StringBuilder insertStatement = new StringBuilder()-->Line_8 $$ insertStatement.append("INSERT INTO ")[ FD ]
Line_2 $$ public String createInsertString(String... generatedKeyNames) -->Line_14 $$ insertStatement.append(" (")[ CD ]
Line_2 $$ public String createInsertString(String... generatedKeyNames) -->Line_8 $$ insertStatement.append("INSERT INTO ")[ CD ]
Line_3 $$ Set<String> keys = new LinkedHashSet<String>(generatedKeyNames.length)-->Line_5 $$ keys.add(key.toUpperCase())[ FD ]
Line_26 $$ if (columnCount < 1) -->Line_27 $$ if (this.generatedKeyColumnsUsed) [ CD ]
Line_17 $$ if (!keys.contains(columnName.toUpperCase())) -->Line_22 $$ insertStatement.append(columnName)[ CD ]
Line_3 $$ Set<String> keys = new LinkedHashSet<String>(generatedKeyNames.length)-->Line_17 $$ if (!keys.contains(columnName.toUpperCase())) [ FD ]
Line_4 $$ for (String key : generatedKeyNames) -->Line_5 $$ keys.add(key.toUpperCase())[ FD ]
Line_15 $$ int columnCount = 0-->Line_26 $$ if (columnCount < 1) [ FD ]
Line_16 $$ for (String columnName : getTableColumns()) -->Line_22 $$ insertStatement.append(columnName)[ FD ]
Line_15 $$ int columnCount = 0-->Line_18 $$ columnCount++[ FD ]
Line_7 $$ StringBuilder insertStatement = new StringBuilder()-->Line_40 $$ return insertStatement.toString()[ FD ]
Line_7 $$ StringBuilder insertStatement = new StringBuilder()-->Line_37 $$ insertStatement.append("?")[ FD ]
Line_19 $$ if (columnCount > 1) -->Line_20 $$ insertStatement.append(", ")[ CD ]
Line_7 $$ StringBuilder insertStatement = new StringBuilder()-->Line_10 $$ insertStatement.append(getSchemaName())[ FD ]
Line_2 $$ public String createInsertString(String... generatedKeyNames) -->Line_39 $$ insertStatement.append(")")[ CD ]
Line_2 $$ public String createInsertString(String... generatedKeyNames) -->Line_26 $$ if (columnCount < 1) [ CD ]
Line_33 $$ for (int i = 0; i < columnCount; i++) -->Line_34 $$ if (i > 0) [ FD ]
Line_15 $$ int columnCount = 0-->Line_19 $$ if (columnCount > 1) [ FD ]
