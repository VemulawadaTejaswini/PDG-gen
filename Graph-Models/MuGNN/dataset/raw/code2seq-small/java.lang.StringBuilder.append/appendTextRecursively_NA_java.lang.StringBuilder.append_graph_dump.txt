Line_5 $$ final String text = tag.getValue().getTrimmedText()-->Line_7 $$ buf.append(text)[ FD ]
Line_9 $$ for (XmlTag subTag : tag.getSubTags()) -->Line_10 $$ appendTextRecursively(subTag, buf, maximumTextLength)[ FD ]
Line_2 $$ private static void appendTextRecursively(final XmlTag tag, final StringBuilder buf, final int maximumTextLength) -->Line_5 $$ final String text = tag.getValue().getTrimmedText()[ FD ]
Line_2 $$ private static void appendTextRecursively(final XmlTag tag, final StringBuilder buf, final int maximumTextLength) -->Line_6 $$ if (!text.isEmpty()) [ CD ]
Line_2 $$ private static void appendTextRecursively(final XmlTag tag, final StringBuilder buf, final int maximumTextLength) -->Line_7 $$ buf.append(text)[ FD ]
Line_2 $$ private static void appendTextRecursively(final XmlTag tag, final StringBuilder buf, final int maximumTextLength) -->Line_3 $$ if (buf.length() >= maximumTextLength)[ CD ]
Line_2 $$ private static void appendTextRecursively(final XmlTag tag, final StringBuilder buf, final int maximumTextLength) -->Line_5 $$ final String text = tag.getValue().getTrimmedText()[ CD ]
Line_6 $$ if (!text.isEmpty()) -->Line_7 $$ buf.append(text)[ CD ]
Line_3 $$ if (buf.length() >= maximumTextLength)-->Line_4 $$ return[ CD ]
Line_2 $$ private static void appendTextRecursively(final XmlTag tag, final StringBuilder buf, final int maximumTextLength) -->Line_3 $$ if (buf.length() >= maximumTextLength)[ FD ]
Line_2 $$ private static void appendTextRecursively(final XmlTag tag, final StringBuilder buf, final int maximumTextLength) -->Line_10 $$ appendTextRecursively(subTag, buf, maximumTextLength)[ FD ]
Line_5 $$ final String text = tag.getValue().getTrimmedText()-->Line_6 $$ if (!text.isEmpty()) [ FD ]
Line_2 $$ private static void appendTextRecursively(final XmlTag tag, final StringBuilder buf, final int maximumTextLength) -->Line_9 $$ for (XmlTag subTag : tag.getSubTags()) [ FD ]
