Line_3 $$ final StringBuilder builder = new StringBuilder()-->Line_12 $$ builder.append(", ")[ FD ]
Line_3 $$ final StringBuilder builder = new StringBuilder()-->Line_14 $$ builder.append(outputName)[ FD ]
Line_2 $$ private void updateOutputVariables() -->Line_17 $$ myOutputVariablesTextArea.setText(builder.length() > 0 ? builder.toString() : RefactoringBundle.message("refactoring.extract.method.dialog.empty"))[ CD ]
Line_7 $$ final AbstractVariableData data = myVariablesMap.get(variable)-->Line_8 $$ final String outputName = data != null ? data.getName() : variable[ FD ]
Line_6 $$ if (myVariablesMap != null) -->Line_8 $$ final String outputName = data != null ? data.getName() : variable[ CD ]
Line_8 $$ final String outputName = data != null ? data.getName() : variable-->Line_14 $$ builder.append(outputName)[ FD ]
Line_6 $$ if (myVariablesMap != null) -->Line_9 $$ if (first) [ CD ]
Line_2 $$ private void updateOutputVariables() -->Line_4 $$ boolean first = true[ CD ]
Line_6 $$ if (myVariablesMap != null) -->Line_14 $$ builder.append(outputName)[ CD ]
Line_6 $$ if (myVariablesMap != null) -->Line_7 $$ final AbstractVariableData data = myVariablesMap.get(variable)[ CD ]
Line_9 $$ if (first) -->Line_10 $$ first = false[ CD ]
Line_9 $$ if (first) -->Line_12 $$ builder.append(", ")[ CD ]
Line_5 $$ for (String variable : myOutputVariables) -->Line_7 $$ final AbstractVariableData data = myVariablesMap.get(variable)[ FD ]
Line_3 $$ final StringBuilder builder = new StringBuilder()-->Line_17 $$ myOutputVariablesTextArea.setText(builder.length() > 0 ? builder.toString() : RefactoringBundle.message("refactoring.extract.method.dialog.empty"))[ FD ]
Line_4 $$ boolean first = true-->Line_10 $$ first = false[ FD ]
Line_2 $$ private void updateOutputVariables() -->Line_3 $$ final StringBuilder builder = new StringBuilder()[ CD ]
