Line_2 $$ private static String buildAnnotationText(PsiAnnotation annotation) -->Line_8 $$ final PsiNameValuePair[] attributes = parameterList.getAttributes()[ CD ]
Line_3 $$ final StringBuilder out = new StringBuilder("@")-->Line_10 $$ return out.toString()[ FD ]
Line_14 $$ final PsiNameValuePair attribute = attributes[0]-->Line_26 $$ out.append(attribute.getName()).append('=')[ FD ]
Line_15 $$ final String name = attribute.getName()-->Line_16 $$ if (name != null && !PsiAnnotation.DEFAULT_REFERENCED_METHOD_NAME.equals(name)) [ FD ]
Line_3 $$ final StringBuilder out = new StringBuilder("@")-->Line_19 $$ buildAttributeValueText(attribute.getValue(), out)[ FD ]
Line_21 $$ for (int i = 0; i < attributes.length; i++) -->Line_26 $$ out.append(attribute.getName()).append('=')[ CD ]
Line_14 $$ final PsiNameValuePair attribute = attributes[0]-->Line_27 $$ buildAttributeValueText(attribute.getValue(), out)[ FD ]
Line_2 $$ private static String buildAnnotationText(PsiAnnotation annotation) -->Line_12 $$ out.append('(')[ CD ]
Line_2 $$ private static String buildAnnotationText(PsiAnnotation annotation) -->Line_7 $$ final PsiAnnotationParameterList parameterList = annotation.getParameterList()[ FD ]
Line_13 $$ if (attributes.length == 1) -->Line_14 $$ final PsiNameValuePair attribute = attributes[0][ CD ]
Line_2 $$ private static String buildAnnotationText(PsiAnnotation annotation) -->Line_30 $$ out.append(')')[ CD ]
Line_14 $$ final PsiNameValuePair attribute = attributes[0]-->Line_15 $$ final String name = attribute.getName()[ FD ]
Line_21 $$ for (int i = 0; i < attributes.length; i++) -->Line_22 $$ final PsiNameValuePair attribute = attributes[i][ CD ]
Line_7 $$ final PsiAnnotationParameterList parameterList = annotation.getParameterList()-->Line_8 $$ final PsiNameValuePair[] attributes = parameterList.getAttributes()[ FD ]
Line_2 $$ private static String buildAnnotationText(PsiAnnotation annotation) -->Line_13 $$ if (attributes.length == 1) [ CD ]
Line_2 $$ private static String buildAnnotationText(PsiAnnotation annotation) -->Line_4 $$ final PsiJavaCodeReferenceElement nameReferenceElement = annotation.getNameReferenceElement()[ FD ]
Line_16 $$ if (name != null && !PsiAnnotation.DEFAULT_REFERENCED_METHOD_NAME.equals(name)) -->Line_17 $$ out.append(name).append('=')[ CD ]
Line_14 $$ final PsiNameValuePair attribute = attributes[0]-->Line_19 $$ buildAttributeValueText(attribute.getValue(), out)[ FD ]
Line_13 $$ if (attributes.length == 1) -->Line_19 $$ buildAttributeValueText(attribute.getValue(), out)[ CD ]
Line_21 $$ for (int i = 0; i < attributes.length; i++) -->Line_23 $$ if (i > 0) [ CD ]
Line_3 $$ final StringBuilder out = new StringBuilder("@")-->Line_12 $$ out.append('(')[ FD ]
Line_2 $$ private static String buildAnnotationText(PsiAnnotation annotation) -->Line_3 $$ final StringBuilder out = new StringBuilder("@")[ CD ]
Line_2 $$ private static String buildAnnotationText(PsiAnnotation annotation) -->Line_31 $$ return out.toString()[ CD ]
Line_3 $$ final StringBuilder out = new StringBuilder("@")-->Line_30 $$ out.append(')')[ FD ]
Line_15 $$ final String name = attribute.getName()-->Line_17 $$ out.append(name).append('=')[ FD ]
Line_3 $$ final StringBuilder out = new StringBuilder("@")-->Line_26 $$ out.append(attribute.getName()).append('=')[ FD ]
Line_3 $$ final StringBuilder out = new StringBuilder("@")-->Line_31 $$ return out.toString()[ FD ]
Line_21 $$ for (int i = 0; i < attributes.length; i++) -->Line_27 $$ buildAttributeValueText(attribute.getValue(), out)[ CD ]
Line_3 $$ final StringBuilder out = new StringBuilder("@")-->Line_17 $$ out.append(name).append('=')[ FD ]
Line_4 $$ final PsiJavaCodeReferenceElement nameReferenceElement = annotation.getNameReferenceElement()-->Line_6 $$ out.append(nameReferenceElement.getText())[ FD ]
Line_13 $$ if (attributes.length == 1) -->Line_21 $$ for (int i = 0; i < attributes.length; i++) [ CD ]
Line_2 $$ private static String buildAnnotationText(PsiAnnotation annotation) -->Line_9 $$ if (attributes.length == 0) [ CD ]
Line_9 $$ if (attributes.length == 0) -->Line_10 $$ return out.toString()[ CD ]
Line_22 $$ final PsiNameValuePair attribute = attributes[i]-->Line_26 $$ out.append(attribute.getName()).append('=')[ FD ]
Line_23 $$ if (i > 0) -->Line_24 $$ out.append(',')[ CD ]
Line_13 $$ if (attributes.length == 1) -->Line_16 $$ if (name != null && !PsiAnnotation.DEFAULT_REFERENCED_METHOD_NAME.equals(name)) [ CD ]
Line_13 $$ if (attributes.length == 1) -->Line_15 $$ final String name = attribute.getName()[ CD ]
Line_21 $$ for (int i = 0; i < attributes.length; i++) -->Line_23 $$ if (i > 0) [ FD ]
Line_3 $$ final StringBuilder out = new StringBuilder("@")-->Line_24 $$ out.append(',')[ FD ]
Line_3 $$ final StringBuilder out = new StringBuilder("@")-->Line_27 $$ buildAttributeValueText(attribute.getValue(), out)[ FD ]
Line_3 $$ final StringBuilder out = new StringBuilder("@")-->Line_6 $$ out.append(nameReferenceElement.getText())[ FD ]
Line_2 $$ private static String buildAnnotationText(PsiAnnotation annotation) -->Line_7 $$ final PsiAnnotationParameterList parameterList = annotation.getParameterList()[ CD ]
Line_22 $$ final PsiNameValuePair attribute = attributes[i]-->Line_27 $$ buildAttributeValueText(attribute.getValue(), out)[ FD ]
Line_2 $$ private static String buildAnnotationText(PsiAnnotation annotation) -->Line_4 $$ final PsiJavaCodeReferenceElement nameReferenceElement = annotation.getNameReferenceElement()[ CD ]
Line_2 $$ private static String buildAnnotationText(PsiAnnotation annotation) -->Line_6 $$ out.append(nameReferenceElement.getText())[ CD ]
