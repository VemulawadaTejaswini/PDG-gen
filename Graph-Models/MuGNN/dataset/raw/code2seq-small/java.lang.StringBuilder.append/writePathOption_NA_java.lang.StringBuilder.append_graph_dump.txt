Line_4 $$ Iterator<File> filesIt = files.iterator()-->Line_5 $$ while (filesIt.hasNext()) [ FD ]
Line_5 $$ while (filesIt.hasNext()) -->Line_6 $$ builder.append(filesIt.next().getAbsolutePath())[ CD ]
Line_2 $$ public JavadocOptionFileWriterContext writePathOption(String option, Collection<File> files, String joinValuesBy) throws IOException -->Line_11 $$ writeValueOption(option, builder.toString())[ FD ]
Line_2 $$ public JavadocOptionFileWriterContext writePathOption(String option, Collection<File> files, String joinValuesBy) throws IOException -->Line_8 $$ builder.append(joinValuesBy)[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_8 $$ builder.append(joinValuesBy)[ FD ]
Line_2 $$ public JavadocOptionFileWriterContext writePathOption(String option, Collection<File> files, String joinValuesBy) throws IOException -->Line_4 $$ Iterator<File> filesIt = files.iterator()[ CD ]
Line_2 $$ public JavadocOptionFileWriterContext writePathOption(String option, Collection<File> files, String joinValuesBy) throws IOException -->Line_11 $$ writeValueOption(option, builder.toString())[ CD ]
Line_2 $$ public JavadocOptionFileWriterContext writePathOption(String option, Collection<File> files, String joinValuesBy) throws IOException -->Line_4 $$ Iterator<File> filesIt = files.iterator()[ FD ]
Line_2 $$ public JavadocOptionFileWriterContext writePathOption(String option, Collection<File> files, String joinValuesBy) throws IOException -->Line_12 $$ return this[ CD ]
Line_4 $$ Iterator<File> filesIt = files.iterator()-->Line_6 $$ builder.append(filesIt.next().getAbsolutePath())[ FD ]
Line_7 $$ if (filesIt.hasNext()) -->Line_8 $$ builder.append(joinValuesBy)[ CD ]
Line_2 $$ public JavadocOptionFileWriterContext writePathOption(String option, Collection<File> files, String joinValuesBy) throws IOException -->Line_3 $$ StringBuilder builder = new StringBuilder()[ CD ]
Line_5 $$ while (filesIt.hasNext()) -->Line_7 $$ if (filesIt.hasNext()) [ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_11 $$ writeValueOption(option, builder.toString())[ FD ]
Line_4 $$ Iterator<File> filesIt = files.iterator()-->Line_7 $$ if (filesIt.hasNext()) [ FD ]
Line_2 $$ public JavadocOptionFileWriterContext writePathOption(String option, Collection<File> files, String joinValuesBy) throws IOException -->Line_5 $$ while (filesIt.hasNext()) [ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_6 $$ builder.append(filesIt.next().getAbsolutePath())[ FD ]
