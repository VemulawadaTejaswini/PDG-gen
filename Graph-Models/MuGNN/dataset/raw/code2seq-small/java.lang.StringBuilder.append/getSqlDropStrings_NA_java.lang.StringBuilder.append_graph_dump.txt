Line_3 $$ StringBuilder buf = new StringBuilder("drop table ")-->Line_5 $$ buf.append("if exists ")[ FD ]
Line_7 $$ final QualifiedName tableName = new QualifiedNameParser.NameParts(Identifier.toIdentifier(table.getCatalog(), table.isCatalogQuoted()), Identifier.toIdentifier(table.getSchema(), table.isSchemaQuoted()), table.getNameIdentifier())-->Line_9 $$ buf.append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(dialect.getCascadeConstraintsString())[ FD ]
Line_4 $$ if (dialect.supportsIfExistsBeforeTableName()) -->Line_5 $$ buf.append("if exists ")[ CD ]
Line_2 $$ public String[] getSqlDropStrings(Table table, Metadata metadata) -->Line_3 $$ StringBuilder buf = new StringBuilder("drop table ")[ CD ]
Line_2 $$ public String[] getSqlDropStrings(Table table, Metadata metadata) -->Line_7 $$ final QualifiedName tableName = new QualifiedNameParser.NameParts(Identifier.toIdentifier(table.getCatalog(), table.isCatalogQuoted()), Identifier.toIdentifier(table.getSchema(), table.isSchemaQuoted()), table.getNameIdentifier())[ FD ]
Line_2 $$ public String[] getSqlDropStrings(Table table, Metadata metadata) -->Line_8 $$ final JdbcEnvironment jdbcEnvironment = metadata.getDatabase().getJdbcEnvironment()[ FD ]
Line_10 $$ if (dialect.supportsIfExistsAfterTableName()) -->Line_11 $$ buf.append(" if exists")[ CD ]
Line_2 $$ public String[] getSqlDropStrings(Table table, Metadata metadata) -->Line_13 $$ return new String[] [ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder("drop table ")-->Line_11 $$ buf.append(" if exists")[ FD ]
Line_2 $$ public String[] getSqlDropStrings(Table table, Metadata metadata) -->Line_4 $$ if (dialect.supportsIfExistsBeforeTableName()) [ CD ]
Line_2 $$ public String[] getSqlDropStrings(Table table, Metadata metadata) -->Line_10 $$ if (dialect.supportsIfExistsAfterTableName()) [ CD ]
Line_8 $$ final JdbcEnvironment jdbcEnvironment = metadata.getDatabase().getJdbcEnvironment()-->Line_9 $$ buf.append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(dialect.getCascadeConstraintsString())[ FD ]
Line_2 $$ public String[] getSqlDropStrings(Table table, Metadata metadata) -->Line_7 $$ final QualifiedName tableName = new QualifiedNameParser.NameParts(Identifier.toIdentifier(table.getCatalog(), table.isCatalogQuoted()), Identifier.toIdentifier(table.getSchema(), table.isSchemaQuoted()), table.getNameIdentifier())[ CD ]
Line_2 $$ public String[] getSqlDropStrings(Table table, Metadata metadata) -->Line_8 $$ final JdbcEnvironment jdbcEnvironment = metadata.getDatabase().getJdbcEnvironment()[ CD ]
Line_2 $$ public String[] getSqlDropStrings(Table table, Metadata metadata) -->Line_9 $$ buf.append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(dialect.getCascadeConstraintsString())[ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder("drop table ")-->Line_9 $$ buf.append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(dialect.getCascadeConstraintsString())[ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder("drop table ")-->Line_13 $$ return new String[] [ FD ]
