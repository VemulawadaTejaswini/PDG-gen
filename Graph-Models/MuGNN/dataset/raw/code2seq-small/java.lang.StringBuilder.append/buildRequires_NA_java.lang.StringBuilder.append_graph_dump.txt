Line_3 $$ StringBuilder requiresBuffer = new StringBuilder()-->Line_8 $$ if (requiresBuffer.length() == 0) [ FD ]
Line_30 $$ if (requiresBuffer.length() > 0) -->Line_31 $$ requiresBuffer.append(")")[ CD ]
Line_17 $$ if (requiredBy.size() > 0) -->Line_24 $$ requiresBuffer.append(StringUtil.join(requiredBy, new Function<IdeaPluginDescriptor, String>() [ CD ]
Line_2 $$ private String buildRequires(final IdeaPluginDescriptor descriptor) -->Line_3 $$ StringBuilder requiresBuffer = new StringBuilder()[ CD ]
Line_24 $$ requiresBuffer.append(StringUtil.join(requiredBy, new Function<IdeaPluginDescriptor, String>() -->Line_26 $$ return getAbbreviatedName(ideaPluginDescriptor)[ FD ]
Line_6 $$ if (dependent != null) -->Line_7 $$ String name = getAbbreviatedName(dependent)[ CD ]
Line_18 $$ if (requiresBuffer.length() > 0) -->Line_19 $$ requiresBuffer.append(", ")[ CD ]
Line_3 $$ StringBuilder requiresBuffer = new StringBuilder()-->Line_30 $$ if (requiresBuffer.length() > 0) [ FD ]
Line_3 $$ StringBuilder requiresBuffer = new StringBuilder()-->Line_23 $$ requiresBuffer.append("required by ")[ FD ]
Line_7 $$ String name = getAbbreviatedName(dependent)-->Line_13 $$ requiresBuffer.append(name)[ FD ]
Line_2 $$ private String buildRequires(final IdeaPluginDescriptor descriptor) -->Line_4 $$ for (PluginId id : StartupWizardModel.getNonOptionalDependencies(descriptor)) [ FD ]
Line_3 $$ StringBuilder requiresBuffer = new StringBuilder()-->Line_18 $$ if (requiresBuffer.length() > 0) [ FD ]
Line_2 $$ private String buildRequires(final IdeaPluginDescriptor descriptor) -->Line_17 $$ if (requiredBy.size() > 0) [ CD ]
Line_16 $$ List<IdeaPluginDescriptor> requiredBy = myModel.getDependentsOnEarlierPages(descriptor, false)-->Line_24 $$ requiresBuffer.append(StringUtil.join(requiredBy, new Function<IdeaPluginDescriptor, String>() [ FD ]
Line_5 $$ final IdeaPluginDescriptor dependent = findPlugin(id)-->Line_6 $$ if (dependent != null) [ FD ]
Line_3 $$ StringBuilder requiresBuffer = new StringBuilder()-->Line_9 $$ requiresBuffer.append("   (requires ")[ FD ]
Line_6 $$ if (dependent != null) -->Line_8 $$ if (requiresBuffer.length() == 0) [ CD ]
Line_6 $$ if (dependent != null) -->Line_13 $$ requiresBuffer.append(name)[ CD ]
Line_3 $$ StringBuilder requiresBuffer = new StringBuilder()-->Line_33 $$ return requiresBuffer.toString()[ FD ]
Line_3 $$ StringBuilder requiresBuffer = new StringBuilder()-->Line_13 $$ requiresBuffer.append(name)[ FD ]
Line_3 $$ StringBuilder requiresBuffer = new StringBuilder()-->Line_11 $$ requiresBuffer.append(", ")[ FD ]
Line_4 $$ for (PluginId id : StartupWizardModel.getNonOptionalDependencies(descriptor)) -->Line_5 $$ final IdeaPluginDescriptor dependent = findPlugin(id)[ FD ]
Line_3 $$ StringBuilder requiresBuffer = new StringBuilder()-->Line_21 $$ requiresBuffer.append("   (")[ FD ]
Line_2 $$ private String buildRequires(final IdeaPluginDescriptor descriptor) -->Line_33 $$ return requiresBuffer.toString()[ CD ]
Line_2 $$ private String buildRequires(final IdeaPluginDescriptor descriptor) -->Line_16 $$ List<IdeaPluginDescriptor> requiredBy = myModel.getDependentsOnEarlierPages(descriptor, false)[ CD ]
Line_5 $$ final IdeaPluginDescriptor dependent = findPlugin(id)-->Line_7 $$ String name = getAbbreviatedName(dependent)[ FD ]
Line_8 $$ if (requiresBuffer.length() == 0) -->Line_9 $$ requiresBuffer.append("   (requires ")[ CD ]
Line_2 $$ private String buildRequires(final IdeaPluginDescriptor descriptor) -->Line_16 $$ List<IdeaPluginDescriptor> requiredBy = myModel.getDependentsOnEarlierPages(descriptor, false)[ FD ]
Line_16 $$ List<IdeaPluginDescriptor> requiredBy = myModel.getDependentsOnEarlierPages(descriptor, false)-->Line_17 $$ if (requiredBy.size() > 0) [ FD ]
Line_8 $$ if (requiresBuffer.length() == 0) -->Line_11 $$ requiresBuffer.append(", ")[ CD ]
Line_3 $$ StringBuilder requiresBuffer = new StringBuilder()-->Line_24 $$ requiresBuffer.append(StringUtil.join(requiredBy, new Function<IdeaPluginDescriptor, String>() [ FD ]
Line_3 $$ StringBuilder requiresBuffer = new StringBuilder()-->Line_31 $$ requiresBuffer.append(")")[ FD ]
Line_17 $$ if (requiredBy.size() > 0) -->Line_18 $$ if (requiresBuffer.length() > 0) [ CD ]
Line_3 $$ StringBuilder requiresBuffer = new StringBuilder()-->Line_19 $$ requiresBuffer.append(", ")[ FD ]
Line_24 $$ requiresBuffer.append(StringUtil.join(requiredBy, new Function<IdeaPluginDescriptor, String>() -->Line_26 $$ return getAbbreviatedName(ideaPluginDescriptor)[ CD ]
Line_17 $$ if (requiredBy.size() > 0) -->Line_23 $$ requiresBuffer.append("required by ")[ CD ]
Line_18 $$ if (requiresBuffer.length() > 0) -->Line_21 $$ requiresBuffer.append("   (")[ CD ]
Line_2 $$ private String buildRequires(final IdeaPluginDescriptor descriptor) -->Line_30 $$ if (requiresBuffer.length() > 0) [ CD ]
