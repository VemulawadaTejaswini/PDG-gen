Line_2 $$ private void printPageIndex(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_19 $$ response.getWriter().println(simulateInfo)[ CD ]
Line_11 $$ for (Map.Entry<String, Object> entry : SLSRunner.simulateInfoMap.entrySet()) -->Line_13 $$ info.append("<td class='td1'>").append(entry.getKey()).append("</td>")[ FD ]
Line_6 $$ if (SLSRunner.simulateInfoMap.isEmpty()) -->Line_10 $$ StringBuilder info = new StringBuilder()[ CD ]
Line_5 $$ String simulateInfo-->Line_8 $$ simulateInfo = MessageFormat.format(simulateInfoTemplate, empty)[ FD ]
Line_10 $$ StringBuilder info = new StringBuilder()-->Line_14 $$ info.append("<td class='td2'>").append(entry.getValue()).append("</td>")[ FD ]
Line_6 $$ if (SLSRunner.simulateInfoMap.isEmpty()) -->Line_17 $$ simulateInfo = MessageFormat.format(simulateInfoTemplate, info.toString())[ CD ]
Line_2 $$ private void printPageIndex(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_19 $$ response.getWriter().println(simulateInfo)[ FD ]
Line_2 $$ private void printPageIndex(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_4 $$ response.setStatus(HttpServletResponse.SC_OK)[ CD ]
Line_2 $$ private void printPageIndex(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_3 $$ response.setContentType("text/html")[ FD ]
Line_7 $$ String empty = "<tr><td colspan='2' align='center'>" + "No information available</td></tr>"-->Line_8 $$ simulateInfo = MessageFormat.format(simulateInfoTemplate, empty)[ FD ]
Line_10 $$ StringBuilder info = new StringBuilder()-->Line_12 $$ info.append("<tr>")[ FD ]
Line_6 $$ if (SLSRunner.simulateInfoMap.isEmpty()) -->Line_7 $$ String empty = "<tr><td colspan='2' align='center'>" + "No information available</td></tr>"[ CD ]
Line_6 $$ if (SLSRunner.simulateInfoMap.isEmpty()) -->Line_8 $$ simulateInfo = MessageFormat.format(simulateInfoTemplate, empty)[ CD ]
Line_8 $$ simulateInfo = MessageFormat.format(simulateInfoTemplate, empty)-->Line_17 $$ simulateInfo = MessageFormat.format(simulateInfoTemplate, info.toString())[ FD ]
Line_17 $$ simulateInfo = MessageFormat.format(simulateInfoTemplate, info.toString())-->Line_19 $$ response.getWriter().println(simulateInfo)[ FD ]
Line_2 $$ private void printPageIndex(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_20 $$ ((Request) request).setHandled(true)[ CD ]
Line_10 $$ StringBuilder info = new StringBuilder()-->Line_15 $$ info.append("</tr>")[ FD ]
Line_8 $$ simulateInfo = MessageFormat.format(simulateInfoTemplate, empty)-->Line_19 $$ response.getWriter().println(simulateInfo)[ FD ]
Line_10 $$ StringBuilder info = new StringBuilder()-->Line_17 $$ simulateInfo = MessageFormat.format(simulateInfoTemplate, info.toString())[ FD ]
Line_2 $$ private void printPageIndex(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_3 $$ response.setContentType("text/html")[ CD ]
Line_2 $$ private void printPageIndex(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_4 $$ response.setStatus(HttpServletResponse.SC_OK)[ FD ]
Line_5 $$ String simulateInfo-->Line_19 $$ response.getWriter().println(simulateInfo)[ FD ]
Line_2 $$ private void printPageIndex(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_5 $$ String simulateInfo[ CD ]
Line_5 $$ String simulateInfo-->Line_17 $$ simulateInfo = MessageFormat.format(simulateInfoTemplate, info.toString())[ FD ]
Line_10 $$ StringBuilder info = new StringBuilder()-->Line_13 $$ info.append("<td class='td1'>").append(entry.getKey()).append("</td>")[ FD ]
Line_11 $$ for (Map.Entry<String, Object> entry : SLSRunner.simulateInfoMap.entrySet()) -->Line_14 $$ info.append("<td class='td2'>").append(entry.getValue()).append("</td>")[ FD ]
Line_2 $$ private void printPageIndex(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_6 $$ if (SLSRunner.simulateInfoMap.isEmpty()) [ CD ]
