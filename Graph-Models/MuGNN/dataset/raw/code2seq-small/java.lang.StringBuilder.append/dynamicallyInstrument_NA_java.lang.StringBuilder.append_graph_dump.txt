Line_14 $$ if (index != -1) -->Line_16 $$ sb.append(agentLine, 0, index + 1)[ CD ]
Line_14 $$ if (index != -1) -->Line_21 $$ if (includes.length > 0) [ CD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_19 $$ sb.append(',')[ FD ]
Line_2 $$ public static synchronized void dynamicallyInstrument(String[] includes, String[] excludes) throws UnmodifiableClassException -->Line_37 $$ _instrumentation.addTransformer(_whipClassFileTransformer, true)[ CD ]
Line_2 $$ public static synchronized void dynamicallyInstrument(String[] includes, String[] excludes) throws UnmodifiableClassException -->Line_39 $$ List<Class<?>> modifiableClasses = new ArrayList()[ CD ]
Line_2 $$ public static synchronized void dynamicallyInstrument(String[] includes, String[] excludes) throws UnmodifiableClassException -->Line_9 $$ if (excludes == null) [ CD ]
Line_12 $$ String agentLine = System.getProperty("whip.agent")-->Line_16 $$ sb.append(agentLine, 0, index + 1)[ FD ]
Line_14 $$ if (index != -1) -->Line_15 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_24 $$ sb.append(';')[ FD ]
Line_25 $$ for (String exclude : excludes) -->Line_26 $$ sb.append(exclude)[ FD ]
Line_2 $$ public static synchronized void dynamicallyInstrument(String[] includes, String[] excludes) throws UnmodifiableClassException -->Line_34 $$ if (_whipClassFileTransformer == null) [ CD ]
Line_40 $$ for (Class<?> loadedClass : allLoadedClasses) -->Line_42 $$ String className = loadedClass.getName()[ FD ]
Line_41 $$ if (_instrumentation.isModifiableClass(loadedClass)) -->Line_43 $$ className = className.replace('.', '/')[ CD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_27 $$ sb.append(',')[ FD ]
Line_29 $$ if (excludes.length > 0) -->Line_30 $$ sb.setLength(sb.length() - 1)[ CD ]
Line_14 $$ if (index != -1) -->Line_24 $$ sb.append(';')[ CD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_18 $$ sb.append(include)[ FD ]
Line_42 $$ String className = loadedClass.getName()-->Line_44 $$ if (_whipClassFileTransformer.matches(className)) [ FD ]
Line_2 $$ public static synchronized void dynamicallyInstrument(String[] includes, String[] excludes) throws UnmodifiableClassException -->Line_6 $$ if (includes == null) [ FD ]
Line_39 $$ List<Class<?>> modifiableClasses = new ArrayList()-->Line_45 $$ modifiableClasses.add(loadedClass)[ FD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_26 $$ sb.append(exclude)[ FD ]
Line_44 $$ if (_whipClassFileTransformer.matches(className)) -->Line_45 $$ modifiableClasses.add(loadedClass)[ CD ]
Line_2 $$ public static synchronized void dynamicallyInstrument(String[] includes, String[] excludes) throws UnmodifiableClassException -->Line_7 $$ includes = _includes[ FD ]
Line_39 $$ List<Class<?>> modifiableClasses = new ArrayList()-->Line_49 $$ _instrumentation.retransformClasses(modifiableClasses.toArray(new Class<?>[modifiableClasses.size()]))[ FD ]
Line_2 $$ public static synchronized void dynamicallyInstrument(String[] includes, String[] excludes) throws UnmodifiableClassException -->Line_6 $$ if (includes == null) [ CD ]
Line_43 $$ className = className.replace('.', '/')-->Line_44 $$ if (_whipClassFileTransformer.matches(className)) [ FD ]
Line_2 $$ public static synchronized void dynamicallyInstrument(String[] includes, String[] excludes) throws UnmodifiableClassException -->Line_13 $$ int index = agentLine.indexOf('=')[ CD ]
Line_14 $$ if (index != -1) -->Line_29 $$ if (excludes.length > 0) [ CD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_32 $$ System.setProperty("whip.agent", sb.toString())[ FD ]
Line_2 $$ public static synchronized void dynamicallyInstrument(String[] includes, String[] excludes) throws UnmodifiableClassException -->Line_10 $$ excludes = _excludes[ FD ]
Line_2 $$ public static synchronized void dynamicallyInstrument(String[] includes, String[] excludes) throws UnmodifiableClassException -->Line_3 $$ if ((_instrumentation == null) || _dynamicallyInstrumented) [ CD ]
Line_42 $$ String className = loadedClass.getName()-->Line_43 $$ className = className.replace('.', '/')[ FD ]
Line_2 $$ public static synchronized void dynamicallyInstrument(String[] includes, String[] excludes) throws UnmodifiableClassException -->Line_14 $$ if (index != -1) [ CD ]
Line_13 $$ int index = agentLine.indexOf('=')-->Line_14 $$ if (index != -1) [ FD ]
Line_41 $$ if (_instrumentation.isModifiableClass(loadedClass)) -->Line_42 $$ String className = loadedClass.getName()[ CD ]
Line_3 $$ if ((_instrumentation == null) || _dynamicallyInstrumented) -->Line_4 $$ return[ CD ]
Line_40 $$ for (Class<?> loadedClass : allLoadedClasses) -->Line_45 $$ modifiableClasses.add(loadedClass)[ FD ]
Line_2 $$ public static synchronized void dynamicallyInstrument(String[] includes, String[] excludes) throws UnmodifiableClassException -->Line_38 $$ Class<?>[] allLoadedClasses = _instrumentation.getAllLoadedClasses()[ CD ]
Line_12 $$ String agentLine = System.getProperty("whip.agent")-->Line_13 $$ int index = agentLine.indexOf('=')[ FD ]
Line_9 $$ if (excludes == null) -->Line_10 $$ excludes = _excludes[ CD ]
Line_2 $$ public static synchronized void dynamicallyInstrument(String[] includes, String[] excludes) throws UnmodifiableClassException -->Line_12 $$ String agentLine = System.getProperty("whip.agent")[ CD ]
Line_21 $$ if (includes.length > 0) -->Line_22 $$ sb.setLength(sb.length() - 1)[ CD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_30 $$ sb.setLength(sb.length() - 1)[ FD ]
Line_40 $$ for (Class<?> loadedClass : allLoadedClasses) -->Line_41 $$ if (_instrumentation.isModifiableClass(loadedClass)) [ FD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_16 $$ sb.append(agentLine, 0, index + 1)[ FD ]
Line_41 $$ if (_instrumentation.isModifiableClass(loadedClass)) -->Line_44 $$ if (_whipClassFileTransformer.matches(className)) [ CD ]
Line_17 $$ for (String include : includes) -->Line_18 $$ sb.append(include)[ FD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_22 $$ sb.setLength(sb.length() - 1)[ FD ]
Line_2 $$ public static synchronized void dynamicallyInstrument(String[] includes, String[] excludes) throws UnmodifiableClassException -->Line_49 $$ _instrumentation.retransformClasses(modifiableClasses.toArray(new Class<?>[modifiableClasses.size()]))[ CD ]
Line_2 $$ public static synchronized void dynamicallyInstrument(String[] includes, String[] excludes) throws UnmodifiableClassException -->Line_9 $$ if (excludes == null) [ FD ]
Line_14 $$ if (index != -1) -->Line_32 $$ System.setProperty("whip.agent", sb.toString())[ CD ]
Line_6 $$ if (includes == null) -->Line_7 $$ includes = _includes[ CD ]
