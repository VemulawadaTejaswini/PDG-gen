Line_8 $$ referenceDataElement = getImportDataElement(clazz.getSimpleName(), "path", path)-->Line_27 $$ referenceDataElements.add(referenceDataElement)[ FD ]
Line_7 $$ if (Validator.isNotNull(path)) -->Line_19 $$ sb.append(StringPool.CLOSE_BRACKET)[ CD ]
Line_5 $$ Element referenceDataElement = null-->Line_27 $$ referenceDataElements.add(referenceDataElement)[ FD ]
Line_22 $$ referenceDataElement = (Element) xPath.selectSingleNode(groupElement)-->Line_24 $$ if (referenceDataElement == null) [ FD ]
Line_4 $$ for (Element referenceElement : referenceElements) -->Line_6 $$ String path = referenceElement.attributeValue("path")[ FD ]
Line_7 $$ if (Validator.isNotNull(path)) -->Line_21 $$ Element groupElement = getImportDataGroupElement(clazz.getSimpleName())[ CD ]
Line_10 $$ String groupId = referenceElement.attributeValue("group-id")-->Line_15 $$ if (groupId != null) [ FD ]
Line_6 $$ String path = referenceElement.attributeValue("path")-->Line_7 $$ if (Validator.isNotNull(path)) [ FD ]
Line_11 $$ String uuid = referenceElement.attributeValue("uuid")-->Line_14 $$ sb.append(HtmlUtil.escapeXPathAttribute(uuid))[ FD ]
Line_10 $$ String groupId = referenceElement.attributeValue("group-id")-->Line_17 $$ sb.append(HtmlUtil.escapeXPathAttribute(groupId))[ FD ]
Line_21 $$ Element groupElement = getImportDataGroupElement(clazz.getSimpleName())-->Line_22 $$ referenceDataElement = (Element) xPath.selectSingleNode(groupElement)[ FD ]
Line_20 $$ XPath xPath = SAXReaderUtil.createXPath(sb.toString())-->Line_22 $$ referenceDataElement = (Element) xPath.selectSingleNode(groupElement)[ FD ]
Line_7 $$ if (Validator.isNotNull(path)) -->Line_15 $$ if (groupId != null) [ CD ]
Line_12 $$ StringBuilder sb = new StringBuilder(5)-->Line_16 $$ sb.append(" and @group-id=")[ FD ]
Line_12 $$ StringBuilder sb = new StringBuilder(5)-->Line_20 $$ XPath xPath = SAXReaderUtil.createXPath(sb.toString())[ FD ]
Line_2 $$ protected List<Element> getReferenceDataElements(List<Element> referenceElements, Class<?> clazz) -->Line_8 $$ referenceDataElement = getImportDataElement(clazz.getSimpleName(), "path", path)[ FD ]
Line_5 $$ Element referenceDataElement = null-->Line_22 $$ referenceDataElement = (Element) xPath.selectSingleNode(groupElement)[ FD ]
Line_12 $$ StringBuilder sb = new StringBuilder(5)-->Line_13 $$ sb.append("staged-model[@uuid=")[ FD ]
Line_4 $$ for (Element referenceElement : referenceElements) -->Line_10 $$ String groupId = referenceElement.attributeValue("group-id")[ FD ]
Line_5 $$ Element referenceDataElement = null-->Line_8 $$ referenceDataElement = getImportDataElement(clazz.getSimpleName(), "path", path)[ FD ]
Line_12 $$ StringBuilder sb = new StringBuilder(5)-->Line_14 $$ sb.append(HtmlUtil.escapeXPathAttribute(uuid))[ FD ]
Line_15 $$ if (groupId != null) -->Line_16 $$ sb.append(" and @group-id=")[ CD ]
Line_12 $$ StringBuilder sb = new StringBuilder(5)-->Line_19 $$ sb.append(StringPool.CLOSE_BRACKET)[ FD ]
Line_5 $$ Element referenceDataElement = null-->Line_24 $$ if (referenceDataElement == null) [ FD ]
Line_2 $$ protected List<Element> getReferenceDataElements(List<Element> referenceElements, Class<?> clazz) -->Line_3 $$ List<Element> referenceDataElements = new ArrayList()[ CD ]
Line_15 $$ if (groupId != null) -->Line_17 $$ sb.append(HtmlUtil.escapeXPathAttribute(groupId))[ CD ]
Line_8 $$ referenceDataElement = getImportDataElement(clazz.getSimpleName(), "path", path)-->Line_22 $$ referenceDataElement = (Element) xPath.selectSingleNode(groupElement)[ FD ]
Line_7 $$ if (Validator.isNotNull(path)) -->Line_20 $$ XPath xPath = SAXReaderUtil.createXPath(sb.toString())[ CD ]
Line_2 $$ protected List<Element> getReferenceDataElements(List<Element> referenceElements, Class<?> clazz) -->Line_21 $$ Element groupElement = getImportDataGroupElement(clazz.getSimpleName())[ FD ]
Line_7 $$ if (Validator.isNotNull(path)) -->Line_12 $$ StringBuilder sb = new StringBuilder(5)[ CD ]
Line_8 $$ referenceDataElement = getImportDataElement(clazz.getSimpleName(), "path", path)-->Line_24 $$ if (referenceDataElement == null) [ FD ]
Line_2 $$ protected List<Element> getReferenceDataElements(List<Element> referenceElements, Class<?> clazz) -->Line_29 $$ return referenceDataElements[ CD ]
Line_7 $$ if (Validator.isNotNull(path)) -->Line_10 $$ String groupId = referenceElement.attributeValue("group-id")[ CD ]
Line_7 $$ if (Validator.isNotNull(path)) -->Line_8 $$ referenceDataElement = getImportDataElement(clazz.getSimpleName(), "path", path)[ CD ]
Line_7 $$ if (Validator.isNotNull(path)) -->Line_11 $$ String uuid = referenceElement.attributeValue("uuid")[ CD ]
Line_22 $$ referenceDataElement = (Element) xPath.selectSingleNode(groupElement)-->Line_27 $$ referenceDataElements.add(referenceDataElement)[ FD ]
Line_7 $$ if (Validator.isNotNull(path)) -->Line_13 $$ sb.append("staged-model[@uuid=")[ CD ]
Line_7 $$ if (Validator.isNotNull(path)) -->Line_22 $$ referenceDataElement = (Element) xPath.selectSingleNode(groupElement)[ CD ]
Line_4 $$ for (Element referenceElement : referenceElements) -->Line_11 $$ String uuid = referenceElement.attributeValue("uuid")[ FD ]
Line_3 $$ List<Element> referenceDataElements = new ArrayList()-->Line_27 $$ referenceDataElements.add(referenceDataElement)[ FD ]
Line_12 $$ StringBuilder sb = new StringBuilder(5)-->Line_17 $$ sb.append(HtmlUtil.escapeXPathAttribute(groupId))[ FD ]
Line_6 $$ String path = referenceElement.attributeValue("path")-->Line_8 $$ referenceDataElement = getImportDataElement(clazz.getSimpleName(), "path", path)[ FD ]
Line_7 $$ if (Validator.isNotNull(path)) -->Line_14 $$ sb.append(HtmlUtil.escapeXPathAttribute(uuid))[ CD ]
