Line_5 $$ if (myIsChainedConstructor) -->Line_32 $$ buffer.append(myMethodName)[ CD ]
Line_16 $$ String methodName = ((PsiMethod) parent).getName()-->Line_17 $$ if (methodName.equals(myMethodName)) [ FD ]
Line_2 $$ protected PsiMethodCallExpression generateMethodCall(PsiExpression instanceQualifier, final boolean generateArgs) throws IncorrectOperationException -->Line_4 $$ final boolean skipInstanceQualifier[ CD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_25 $$ buffer.append(myTargetClass.getName())[ FD ]
Line_36 $$ int count = 0-->Line_39 $$ if (count > 0) [ FD ]
Line_38 $$ if (data.passAsParameter) -->Line_39 $$ if (count > 0) [ CD ]
Line_4 $$ final boolean skipInstanceQualifier-->Line_51 $$ if (!skipInstanceQualifier) [ FD ]
Line_22 $$ parent = parent.getParent()-->Line_15 $$ if (parent instanceof PsiMethod) [ FD ]
Line_10 $$ if (skipInstanceQualifier) -->Line_30 $$ buffer.append("qqq.")[ CD ]
Line_39 $$ if (count > 0) -->Line_40 $$ buffer.append(",")[ CD ]
Line_2 $$ protected PsiMethodCallExpression generateMethodCall(PsiExpression instanceQualifier, final boolean generateArgs) throws IncorrectOperationException -->Line_3 $$ StringBuilder buffer = new StringBuilder()[ CD ]
Line_49 $$ PsiMethodCallExpression expr = (PsiMethodCallExpression) myElementFactory.createExpressionFromText(text, null)-->Line_52 $$ PsiExpression qualifierExpression = expr.getMethodExpression().getQualifierExpression()[ FD ]
Line_51 $$ if (!skipInstanceQualifier) -->Line_53 $$ LOG.assertTrue(qualifierExpression != null)[ CD ]
Line_5 $$ if (myIsChainedConstructor) -->Line_10 $$ if (skipInstanceQualifier) [ CD ]
Line_35 $$ if (generateArgs) -->Line_36 $$ int count = 0[ CD ]
Line_2 $$ protected PsiMethodCallExpression generateMethodCall(PsiExpression instanceQualifier, final boolean generateArgs) throws IncorrectOperationException -->Line_56 $$ return (PsiMethodCallExpression) JavaCodeStyleManager.getInstance(myProject).shortenClassReferences(expr)[ CD ]
Line_6 $$ skipInstanceQualifier = true-->Line_51 $$ if (!skipInstanceQualifier) [ FD ]
Line_15 $$ if (parent instanceof PsiMethod) -->Line_17 $$ if (methodName.equals(myMethodName)) [ CD ]
Line_2 $$ protected PsiMethodCallExpression generateMethodCall(PsiExpression instanceQualifier, final boolean generateArgs) throws IncorrectOperationException -->Line_48 $$ String text = buffer.toString()[ CD ]
Line_11 $$ if (isNeedToChangeCallContext() && myNeedChangeContext) -->Line_24 $$ if (needsThisQualifier) [ CD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_34 $$ buffer.append("(")[ FD ]
Line_2 $$ protected PsiMethodCallExpression generateMethodCall(PsiExpression instanceQualifier, final boolean generateArgs) throws IncorrectOperationException -->Line_47 $$ buffer.append(")")[ CD ]
Line_5 $$ if (myIsChainedConstructor) -->Line_9 $$ skipInstanceQualifier = instanceQualifier == null || instanceQualifier instanceof PsiThisExpression[ CD ]
Line_2 $$ protected PsiMethodCallExpression generateMethodCall(PsiExpression instanceQualifier, final boolean generateArgs) throws IncorrectOperationException -->Line_54 $$ qualifierExpression.replace(instanceQualifier)[ FD ]
Line_10 $$ if (skipInstanceQualifier) -->Line_11 $$ if (isNeedToChangeCallContext() && myNeedChangeContext) [ CD ]
Line_2 $$ protected PsiMethodCallExpression generateMethodCall(PsiExpression instanceQualifier, final boolean generateArgs) throws IncorrectOperationException -->Line_35 $$ if (generateArgs) [ CD ]
Line_52 $$ PsiExpression qualifierExpression = expr.getMethodExpression().getQualifierExpression()-->Line_54 $$ qualifierExpression.replace(instanceQualifier)[ FD ]
Line_12 $$ boolean needsThisQualifier = false-->Line_18 $$ needsThisQualifier = true[ FD ]
Line_13 $$ PsiElement parent = myCodeFragmentMember-->Line_22 $$ parent = parent.getParent()[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_40 $$ buffer.append(",")[ FD ]
Line_4 $$ final boolean skipInstanceQualifier-->Line_6 $$ skipInstanceQualifier = true[ FD ]
Line_2 $$ protected PsiMethodCallExpression generateMethodCall(PsiExpression instanceQualifier, final boolean generateArgs) throws IncorrectOperationException -->Line_50 $$ expr = (PsiMethodCallExpression) myStyleManager.reformat(expr)[ CD ]
Line_5 $$ if (myIsChainedConstructor) -->Line_7 $$ buffer.append(PsiKeyword.THIS)[ CD ]
Line_11 $$ if (isNeedToChangeCallContext() && myNeedChangeContext) -->Line_13 $$ PsiElement parent = myCodeFragmentMember[ CD ]
Line_9 $$ skipInstanceQualifier = instanceQualifier == null || instanceQualifier instanceof PsiThisExpression-->Line_51 $$ if (!skipInstanceQualifier) [ FD ]
Line_2 $$ protected PsiMethodCallExpression generateMethodCall(PsiExpression instanceQualifier, final boolean generateArgs) throws IncorrectOperationException -->Line_49 $$ PsiMethodCallExpression expr = (PsiMethodCallExpression) myElementFactory.createExpressionFromText(text, null)[ CD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_26 $$ buffer.append(".this.")[ FD ]
Line_24 $$ if (needsThisQualifier) -->Line_26 $$ buffer.append(".this.")[ CD ]
Line_36 $$ int count = 0-->Line_43 $$ count++[ FD ]
Line_15 $$ if (parent instanceof PsiMethod) -->Line_16 $$ String methodName = ((PsiMethod) parent).getName()[ CD ]
Line_14 $$ while (!myTargetClass.equals(parent)) -->Line_22 $$ parent = parent.getParent()[ CD ]
Line_2 $$ protected PsiMethodCallExpression generateMethodCall(PsiExpression instanceQualifier, final boolean generateArgs) throws IncorrectOperationException -->Line_5 $$ if (myIsChainedConstructor) [ CD ]
Line_2 $$ protected PsiMethodCallExpression generateMethodCall(PsiExpression instanceQualifier, final boolean generateArgs) throws IncorrectOperationException -->Line_51 $$ if (!skipInstanceQualifier) [ CD ]
Line_22 $$ parent = parent.getParent()-->Line_14 $$ while (!myTargetClass.equals(parent)) [ FD ]
Line_17 $$ if (methodName.equals(myMethodName)) -->Line_18 $$ needsThisQualifier = true[ CD ]
Line_2 $$ protected PsiMethodCallExpression generateMethodCall(PsiExpression instanceQualifier, final boolean generateArgs) throws IncorrectOperationException -->Line_34 $$ buffer.append("(")[ CD ]
Line_38 $$ if (data.passAsParameter) -->Line_43 $$ count++[ CD ]
Line_37 $$ for (VariableData data : myVariableDatum) -->Line_42 $$ myInputVariables.appendCallArguments(data, buffer)[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_47 $$ buffer.append(")")[ FD ]
Line_51 $$ if (!skipInstanceQualifier) -->Line_54 $$ qualifierExpression.replace(instanceQualifier)[ CD ]
Line_50 $$ expr = (PsiMethodCallExpression) myStyleManager.reformat(expr)-->Line_56 $$ return (PsiMethodCallExpression) JavaCodeStyleManager.getInstance(myProject).shortenClassReferences(expr)[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_7 $$ buffer.append(PsiKeyword.THIS)[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_32 $$ buffer.append(myMethodName)[ FD ]
Line_4 $$ final boolean skipInstanceQualifier-->Line_9 $$ skipInstanceQualifier = instanceQualifier == null || instanceQualifier instanceof PsiThisExpression[ FD ]
Line_49 $$ PsiMethodCallExpression expr = (PsiMethodCallExpression) myElementFactory.createExpressionFromText(text, null)-->Line_50 $$ expr = (PsiMethodCallExpression) myStyleManager.reformat(expr)[ FD ]
Line_13 $$ PsiElement parent = myCodeFragmentMember-->Line_15 $$ if (parent instanceof PsiMethod) [ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_42 $$ myInputVariables.appendCallArguments(data, buffer)[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_30 $$ buffer.append("qqq.")[ FD ]
Line_50 $$ expr = (PsiMethodCallExpression) myStyleManager.reformat(expr)-->Line_52 $$ PsiExpression qualifierExpression = expr.getMethodExpression().getQualifierExpression()[ FD ]
Line_38 $$ if (data.passAsParameter) -->Line_42 $$ myInputVariables.appendCallArguments(data, buffer)[ CD ]
Line_13 $$ PsiElement parent = myCodeFragmentMember-->Line_14 $$ while (!myTargetClass.equals(parent)) [ FD ]
Line_11 $$ if (isNeedToChangeCallContext() && myNeedChangeContext) -->Line_14 $$ while (!myTargetClass.equals(parent)) [ CD ]
Line_49 $$ PsiMethodCallExpression expr = (PsiMethodCallExpression) myElementFactory.createExpressionFromText(text, null)-->Line_56 $$ return (PsiMethodCallExpression) JavaCodeStyleManager.getInstance(myProject).shortenClassReferences(expr)[ FD ]
Line_5 $$ if (myIsChainedConstructor) -->Line_6 $$ skipInstanceQualifier = true[ CD ]
Line_24 $$ if (needsThisQualifier) -->Line_25 $$ buffer.append(myTargetClass.getName())[ CD ]
Line_14 $$ while (!myTargetClass.equals(parent)) -->Line_15 $$ if (parent instanceof PsiMethod) [ CD ]
Line_37 $$ for (VariableData data : myVariableDatum) -->Line_38 $$ if (data.passAsParameter) [ FD ]
Line_51 $$ if (!skipInstanceQualifier) -->Line_52 $$ PsiExpression qualifierExpression = expr.getMethodExpression().getQualifierExpression()[ CD ]
Line_11 $$ if (isNeedToChangeCallContext() && myNeedChangeContext) -->Line_12 $$ boolean needsThisQualifier = false[ CD ]
Line_6 $$ skipInstanceQualifier = true-->Line_9 $$ skipInstanceQualifier = instanceQualifier == null || instanceQualifier instanceof PsiThisExpression[ FD ]
Line_48 $$ String text = buffer.toString()-->Line_49 $$ PsiMethodCallExpression expr = (PsiMethodCallExpression) myElementFactory.createExpressionFromText(text, null)[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_48 $$ String text = buffer.toString()[ FD ]
