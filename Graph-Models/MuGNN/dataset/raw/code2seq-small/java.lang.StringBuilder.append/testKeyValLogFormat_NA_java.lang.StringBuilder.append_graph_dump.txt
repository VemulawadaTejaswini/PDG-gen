Line_3 $$ StringBuilder actLog = new StringBuilder()-->Line_7 $$ assertEquals(expLog.toString(), actLog.toString())[ FD ]
Line_3 $$ StringBuilder actLog = new StringBuilder()-->Line_16 $$ assertEquals(expLog.toString(), actLog.toString())[ FD ]
Line_2 $$ public void testKeyValLogFormat() throws Exception -->Line_11 $$ RMAuditLogger.add(Keys.APPID, (String) null, actLog)[ CD ]
Line_4 $$ StringBuilder expLog = new StringBuilder()-->Line_15 $$ expLog.append("\tTARGET=tgt")[ FD ]
Line_2 $$ public void testKeyValLogFormat() throws Exception -->Line_5 $$ RMAuditLogger.start(Keys.USER, USER, actLog)[ CD ]
Line_3 $$ StringBuilder actLog = new StringBuilder()-->Line_14 $$ RMAuditLogger.add(Keys.TARGET, TARGET, actLog)[ FD ]
Line_4 $$ StringBuilder expLog = new StringBuilder()-->Line_10 $$ assertEquals(expLog.toString(), actLog.toString())[ FD ]
Line_2 $$ public void testKeyValLogFormat() throws Exception -->Line_3 $$ StringBuilder actLog = new StringBuilder()[ CD ]
Line_4 $$ StringBuilder expLog = new StringBuilder()-->Line_13 $$ assertEquals(expLog.toString(), actLog.toString())[ FD ]
Line_2 $$ public void testKeyValLogFormat() throws Exception -->Line_13 $$ assertEquals(expLog.toString(), actLog.toString())[ CD ]
Line_2 $$ public void testKeyValLogFormat() throws Exception -->Line_7 $$ assertEquals(expLog.toString(), actLog.toString())[ CD ]
Line_2 $$ public void testKeyValLogFormat() throws Exception -->Line_15 $$ expLog.append("\tTARGET=tgt")[ CD ]
Line_4 $$ StringBuilder expLog = new StringBuilder()-->Line_6 $$ expLog.append("USER=test")[ FD ]
Line_2 $$ public void testKeyValLogFormat() throws Exception -->Line_8 $$ RMAuditLogger.add(Keys.OPERATION, OPERATION, actLog)[ CD ]
Line_4 $$ StringBuilder expLog = new StringBuilder()-->Line_7 $$ assertEquals(expLog.toString(), actLog.toString())[ FD ]
Line_4 $$ StringBuilder expLog = new StringBuilder()-->Line_12 $$ expLog.append("\tAPPID=null")[ FD ]
Line_2 $$ public void testKeyValLogFormat() throws Exception -->Line_6 $$ expLog.append("USER=test")[ CD ]
Line_3 $$ StringBuilder actLog = new StringBuilder()-->Line_5 $$ RMAuditLogger.start(Keys.USER, USER, actLog)[ FD ]
Line_2 $$ public void testKeyValLogFormat() throws Exception -->Line_4 $$ StringBuilder expLog = new StringBuilder()[ CD ]
Line_3 $$ StringBuilder actLog = new StringBuilder()-->Line_10 $$ assertEquals(expLog.toString(), actLog.toString())[ FD ]
Line_2 $$ public void testKeyValLogFormat() throws Exception -->Line_14 $$ RMAuditLogger.add(Keys.TARGET, TARGET, actLog)[ CD ]
Line_2 $$ public void testKeyValLogFormat() throws Exception -->Line_9 $$ expLog.append("\tOPERATION=oper")[ CD ]
Line_2 $$ public void testKeyValLogFormat() throws Exception -->Line_16 $$ assertEquals(expLog.toString(), actLog.toString())[ CD ]
Line_3 $$ StringBuilder actLog = new StringBuilder()-->Line_13 $$ assertEquals(expLog.toString(), actLog.toString())[ FD ]
Line_3 $$ StringBuilder actLog = new StringBuilder()-->Line_8 $$ RMAuditLogger.add(Keys.OPERATION, OPERATION, actLog)[ FD ]
Line_2 $$ public void testKeyValLogFormat() throws Exception -->Line_12 $$ expLog.append("\tAPPID=null")[ CD ]
Line_2 $$ public void testKeyValLogFormat() throws Exception -->Line_10 $$ assertEquals(expLog.toString(), actLog.toString())[ CD ]
Line_3 $$ StringBuilder actLog = new StringBuilder()-->Line_11 $$ RMAuditLogger.add(Keys.APPID, (String) null, actLog)[ FD ]
Line_4 $$ StringBuilder expLog = new StringBuilder()-->Line_16 $$ assertEquals(expLog.toString(), actLog.toString())[ FD ]
Line_4 $$ StringBuilder expLog = new StringBuilder()-->Line_9 $$ expLog.append("\tOPERATION=oper")[ FD ]
