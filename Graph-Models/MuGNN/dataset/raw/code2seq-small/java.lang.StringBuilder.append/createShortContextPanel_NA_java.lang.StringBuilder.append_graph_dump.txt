Line_37 $$ String contexts = (noContexts ? "No applicable contexts" + (allowNoContexts ? "" : " yet") : "Applicable in " + sb.toString()) + ".  "-->Line_38 $$ ctxLabel.setText(StringUtil.first(contexts, 100, true))[ FD ]
Line_2 $$ private JPanel createShortContextPanel(final boolean allowNoContexts) -->Line_7 $$ change.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR))[ CD ]
Line_10 $$ final Runnable updateLabel = new Runnable() -->Line_37 $$ String contexts = (noContexts ? "No applicable contexts" + (allowNoContexts ? "" : " yet") : "Applicable in " + sb.toString()) + ".  "[ CD ]
Line_22 $$ ownName = StringUtil.decapitalize(ownName)-->Line_34 $$ sb.append(ownName)[ FD ]
Line_43 $$ new ClickListener() -->Line_59 $$ return true[ CD ]
Line_43 $$ new ClickListener() -->Line_47 $$ final JPanel content = createPopupContextPanel(updateLabel, myContext)[ CD ]
Line_47 $$ final JPanel content = createPopupContextPanel(updateLabel, myContext)-->Line_53 $$ myContextPopup.show(new RelativePoint(change, new Point(change.getWidth(), -content.getPreferredSize().height - 10)))[ FD ]
Line_18 $$ String ownName = UIUtil.removeMnemonic(type.getPresentableName())-->Line_22 $$ ownName = StringUtil.decapitalize(ownName)[ FD ]
Line_24 $$ if (type instanceof EverywhereContextType) -->Line_25 $$ ownName = "Other"[ CD ]
Line_47 $$ final JPanel content = createPopupContextPanel(updateLabel, myContext)-->Line_52 $$ myContextPopup = JBPopupFactory.getInstance().createComponentPopupBuilder(content, null).setResizable(true).createPopup()[ FD ]
Line_10 $$ final Runnable updateLabel = new Runnable() -->Line_40 $$ change.setText(noContexts ? "Define" : "Change")[ CD ]
Line_18 $$ String ownName = UIUtil.removeMnemonic(type.getPresentableName())-->Line_25 $$ ownName = "Other"[ FD ]
Line_49 $$ if (myLastSize != null && (myLastSize.width > prefSize.width || myLastSize.height > prefSize.height)) -->Line_50 $$ content.setPreferredSize(new Dimension(Math.max(prefSize.width, myLastSize.width), Math.max(prefSize.height, myLastSize.height)))[ CD ]
Line_25 $$ ownName = "Other"-->Line_34 $$ sb.append(ownName)[ FD ]
Line_4 $$ final JLabel ctxLabel = new JLabel()-->Line_39 $$ ctxLabel.setForeground(noContexts ? allowNoContexts ? JBColor.GRAY : JBColor.RED : UIUtil.getLabelForeground())[ FD ]
Line_5 $$ final JLabel change = new JLabel()-->Line_43 $$ new ClickListener() [ FD ]
Line_15 $$ String oldPrefix = ""-->Line_28 $$ sb.append(oldPrefix.equals(prefix) ? ", " : "; ")[ FD ]
Line_2 $$ private JPanel createShortContextPanel(final boolean allowNoContexts) -->Line_63 $$ return panel[ CD ]
Line_47 $$ final JPanel content = createPopupContextPanel(updateLabel, myContext)-->Line_48 $$ Dimension prefSize = content.getPreferredSize()[ FD ]
Line_30 $$ if (!oldPrefix.equals(prefix)) -->Line_31 $$ sb.append(prefix)[ CD ]
Line_14 $$ StringBuilder sb = new StringBuilder()-->Line_31 $$ sb.append(prefix)[ FD ]
Line_10 $$ final Runnable updateLabel = new Runnable() -->Line_14 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ private JPanel createShortContextPanel(final boolean allowNoContexts) -->Line_5 $$ final JLabel change = new JLabel()[ CD ]
Line_21 $$ prefix = UIUtil.removeMnemonic(base.getPresentableName()) + ": "-->Line_28 $$ sb.append(oldPrefix.equals(prefix) ? ", " : "; ")[ FD ]
Line_21 $$ prefix = UIUtil.removeMnemonic(base.getPresentableName()) + ": "-->Line_32 $$ oldPrefix = prefix[ FD ]
Line_15 $$ String oldPrefix = ""-->Line_30 $$ if (!oldPrefix.equals(prefix)) [ FD ]
Line_43 $$ new ClickListener() -->Line_54 $$ myContextPopup.addListener(new JBPopupAdapter() [ CD ]
Line_5 $$ final JLabel change = new JLabel()-->Line_53 $$ myContextPopup.show(new RelativePoint(change, new Point(change.getWidth(), -content.getPreferredSize().height - 10)))[ FD ]
Line_2 $$ private JPanel createShortContextPanel(final boolean allowNoContexts) -->Line_6 $$ change.setForeground(PlatformColors.BLUE)[ CD ]
Line_2 $$ private JPanel createShortContextPanel(final boolean allowNoContexts) -->Line_43 $$ new ClickListener() [ CD ]
Line_21 $$ prefix = UIUtil.removeMnemonic(base.getPresentableName()) + ": "-->Line_31 $$ sb.append(prefix)[ FD ]
Line_2 $$ private JPanel createShortContextPanel(final boolean allowNoContexts) -->Line_9 $$ panel.add(change, BorderLayout.EAST)[ CD ]
Line_14 $$ StringBuilder sb = new StringBuilder()-->Line_37 $$ String contexts = (noContexts ? "No applicable contexts" + (allowNoContexts ? "" : " yet") : "Applicable in " + sb.toString()) + ".  "[ FD ]
Line_21 $$ prefix = UIUtil.removeMnemonic(base.getPresentableName()) + ": "-->Line_30 $$ if (!oldPrefix.equals(prefix)) [ FD ]
Line_4 $$ final JLabel ctxLabel = new JLabel()-->Line_8 $$ panel.add(ctxLabel, BorderLayout.CENTER)[ FD ]
Line_47 $$ final JPanel content = createPopupContextPanel(updateLabel, myContext)-->Line_56 $$ myLastSize = content.getSize()[ FD ]
Line_20 $$ if (base != null && !(base instanceof EverywhereContextType)) -->Line_21 $$ prefix = UIUtil.removeMnemonic(base.getPresentableName()) + ": "[ CD ]
Line_43 $$ new ClickListener() -->Line_49 $$ if (myLastSize != null && (myLastSize.width > prefSize.width || myLastSize.height > prefSize.height)) [ CD ]
Line_14 $$ StringBuilder sb = new StringBuilder()-->Line_28 $$ sb.append(oldPrefix.equals(prefix) ? ", " : "; ")[ FD ]
Line_43 $$ new ClickListener() -->Line_48 $$ Dimension prefSize = content.getPreferredSize()[ CD ]
Line_17 $$ final TemplateContextType base = type.getBaseContextType()-->Line_21 $$ prefix = UIUtil.removeMnemonic(base.getPresentableName()) + ": "[ FD ]
Line_19 $$ String prefix = ""-->Line_30 $$ if (!oldPrefix.equals(prefix)) [ FD ]
Line_43 $$ new ClickListener() -->Line_53 $$ myContextPopup.show(new RelativePoint(change, new Point(change.getWidth(), -content.getPreferredSize().height - 10)))[ CD ]
Line_54 $$ myContextPopup.addListener(new JBPopupAdapter() -->Line_56 $$ myLastSize = content.getSize()[ CD ]
Line_2 $$ private JPanel createShortContextPanel(final boolean allowNoContexts) -->Line_3 $$ JPanel panel = new JPanel(new BorderLayout())[ CD ]
Line_43 $$ new ClickListener() -->Line_45 $$ if (disposeContextPopup())[ CD ]
Line_10 $$ final Runnable updateLabel = new Runnable() -->Line_12 $$ myExpandByCombo.setEnabled(isExpandableFromEditor())[ CD ]
Line_4 $$ final JLabel ctxLabel = new JLabel()-->Line_38 $$ ctxLabel.setText(StringUtil.first(contexts, 100, true))[ FD ]
Line_14 $$ StringBuilder sb = new StringBuilder()-->Line_34 $$ sb.append(ownName)[ FD ]
Line_15 $$ String oldPrefix = ""-->Line_32 $$ oldPrefix = prefix[ FD ]
Line_3 $$ JPanel panel = new JPanel(new BorderLayout())-->Line_9 $$ panel.add(change, BorderLayout.EAST)[ FD ]
Line_22 $$ ownName = StringUtil.decapitalize(ownName)-->Line_25 $$ ownName = "Other"[ FD ]
Line_10 $$ final Runnable updateLabel = new Runnable() -->Line_15 $$ String oldPrefix = ""[ CD ]
Line_2 $$ private JPanel createShortContextPanel(final boolean allowNoContexts) -->Line_4 $$ final JLabel ctxLabel = new JLabel()[ CD ]
Line_5 $$ final JLabel change = new JLabel()-->Line_40 $$ change.setText(noContexts ? "Define" : "Change")[ FD ]
Line_10 $$ final Runnable updateLabel = new Runnable() -->Line_39 $$ ctxLabel.setForeground(noContexts ? allowNoContexts ? JBColor.GRAY : JBColor.RED : UIUtil.getLabelForeground())[ CD ]
Line_16 $$ for (TemplateContextType type : getApplicableContexts()) -->Line_17 $$ final TemplateContextType base = type.getBaseContextType()[ FD ]
Line_18 $$ String ownName = UIUtil.removeMnemonic(type.getPresentableName())-->Line_34 $$ sb.append(ownName)[ FD ]
Line_10 $$ final Runnable updateLabel = new Runnable() -->Line_62 $$ updateLabel.run()[ FD ]
Line_2 $$ private JPanel createShortContextPanel(final boolean allowNoContexts) -->Line_8 $$ panel.add(ctxLabel, BorderLayout.CENTER)[ CD ]
Line_43 $$ new ClickListener() -->Line_52 $$ myContextPopup = JBPopupFactory.getInstance().createComponentPopupBuilder(content, null).setResizable(true).createPopup()[ CD ]
Line_5 $$ final JLabel change = new JLabel()-->Line_6 $$ change.setForeground(PlatformColors.BLUE)[ FD ]
Line_10 $$ final Runnable updateLabel = new Runnable() -->Line_47 $$ final JPanel content = createPopupContextPanel(updateLabel, myContext)[ FD ]
Line_19 $$ String prefix = ""-->Line_21 $$ prefix = UIUtil.removeMnemonic(base.getPresentableName()) + ": "[ FD ]
Line_19 $$ String prefix = ""-->Line_32 $$ oldPrefix = prefix[ FD ]
Line_45 $$ if (disposeContextPopup())-->Line_46 $$ return false[ CD ]
Line_16 $$ for (TemplateContextType type : getApplicableContexts()) -->Line_24 $$ if (type instanceof EverywhereContextType) [ FD ]
Line_5 $$ final JLabel change = new JLabel()-->Line_7 $$ change.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR))[ FD ]
Line_3 $$ JPanel panel = new JPanel(new BorderLayout())-->Line_8 $$ panel.add(ctxLabel, BorderLayout.CENTER)[ FD ]
Line_47 $$ final JPanel content = createPopupContextPanel(updateLabel, myContext)-->Line_50 $$ content.setPreferredSize(new Dimension(Math.max(prefSize.width, myLastSize.width), Math.max(prefSize.height, myLastSize.height)))[ FD ]
Line_14 $$ StringBuilder sb = new StringBuilder()-->Line_36 $$ final boolean noContexts = sb.length() == 0[ FD ]
Line_2 $$ private JPanel createShortContextPanel(final boolean allowNoContexts) -->Line_62 $$ updateLabel.run()[ CD ]
Line_19 $$ String prefix = ""-->Line_28 $$ sb.append(oldPrefix.equals(prefix) ? ", " : "; ")[ FD ]
Line_27 $$ if (sb.length() > 0) -->Line_28 $$ sb.append(oldPrefix.equals(prefix) ? ", " : "; ")[ CD ]
Line_10 $$ final Runnable updateLabel = new Runnable() -->Line_13 $$ updateHighlighter()[ CD ]
Line_10 $$ final Runnable updateLabel = new Runnable() -->Line_38 $$ ctxLabel.setText(StringUtil.first(contexts, 100, true))[ CD ]
Line_16 $$ for (TemplateContextType type : getApplicableContexts()) -->Line_18 $$ String ownName = UIUtil.removeMnemonic(type.getPresentableName())[ FD ]
Line_20 $$ if (base != null && !(base instanceof EverywhereContextType)) -->Line_22 $$ ownName = StringUtil.decapitalize(ownName)[ CD ]
Line_19 $$ String prefix = ""-->Line_31 $$ sb.append(prefix)[ FD ]
Line_2 $$ private JPanel createShortContextPanel(final boolean allowNoContexts) -->Line_10 $$ final Runnable updateLabel = new Runnable() [ CD ]
Line_10 $$ final Runnable updateLabel = new Runnable() -->Line_36 $$ final boolean noContexts = sb.length() == 0[ CD ]
Line_30 $$ if (!oldPrefix.equals(prefix)) -->Line_32 $$ oldPrefix = prefix[ CD ]
Line_14 $$ StringBuilder sb = new StringBuilder()-->Line_27 $$ if (sb.length() > 0) [ FD ]
Line_5 $$ final JLabel change = new JLabel()-->Line_9 $$ panel.add(change, BorderLayout.EAST)[ FD ]
