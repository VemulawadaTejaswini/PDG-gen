Line_4 $$ if (parentClass != null) -->Line_5 $$ String qName = parentClass.getQualifiedName()[ CD ]
Line_3 $$ PsiClass parentClass = member.getContainingClass()-->Line_5 $$ String qName = parentClass.getQualifiedName()[ FD ]
Line_2 $$ private static void generateLinkToParentIfNeeded(StringBuilder buffer, PsiMember member) -->Line_7 $$ buffer.append("<small><b>")[ FD ]
Line_3 $$ PsiClass parentClass = member.getContainingClass()-->Line_4 $$ if (parentClass != null) [ FD ]
Line_6 $$ if (qName != null) -->Line_9 $$ buffer.append("</b></small>")[ CD ]
Line_2 $$ private static void generateLinkToParentIfNeeded(StringBuilder buffer, PsiMember member) -->Line_3 $$ PsiClass parentClass = member.getContainingClass()[ FD ]
Line_6 $$ if (qName != null) -->Line_8 $$ generateLink(buffer, qName, qName, member, false)[ CD ]
Line_5 $$ String qName = parentClass.getQualifiedName()-->Line_6 $$ if (qName != null) [ FD ]
Line_2 $$ private static void generateLinkToParentIfNeeded(StringBuilder buffer, PsiMember member) -->Line_8 $$ generateLink(buffer, qName, qName, member, false)[ FD ]
Line_6 $$ if (qName != null) -->Line_7 $$ buffer.append("<small><b>")[ CD ]
Line_2 $$ private static void generateLinkToParentIfNeeded(StringBuilder buffer, PsiMember member) -->Line_3 $$ PsiClass parentClass = member.getContainingClass()[ CD ]
Line_2 $$ private static void generateLinkToParentIfNeeded(StringBuilder buffer, PsiMember member) -->Line_4 $$ if (parentClass != null) [ CD ]
Line_2 $$ private static void generateLinkToParentIfNeeded(StringBuilder buffer, PsiMember member) -->Line_9 $$ buffer.append("</b></small>")[ FD ]
Line_5 $$ String qName = parentClass.getQualifiedName()-->Line_8 $$ generateLink(buffer, qName, qName, member, false)[ FD ]
Line_4 $$ if (parentClass != null) -->Line_6 $$ if (qName != null) [ CD ]
