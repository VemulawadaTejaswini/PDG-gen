Line_2 $$ private static String getStackTraceAsText(Throwable t) -->Line_9 $$ return builder.toString()[ CD ]
Line_5 $$ for (int index = 0; index < stackTraceElements.length; index++) -->Line_7 $$ builder.append("   ").append(stackTraceElement.toString()).append('\n')[ CD ]
Line_5 $$ for (int index = 0; index < stackTraceElements.length; index++) -->Line_6 $$ StackTraceElement stackTraceElement = stackTraceElements[index][ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_7 $$ builder.append("   ").append(stackTraceElement.toString()).append('\n')[ FD ]
Line_2 $$ private static String getStackTraceAsText(Throwable t) -->Line_3 $$ StringBuilder builder = new StringBuilder()[ CD ]
Line_2 $$ private static String getStackTraceAsText(Throwable t) -->Line_4 $$ StackTraceElement[] stackTraceElements = t.getStackTrace()[ FD ]
Line_2 $$ private static String getStackTraceAsText(Throwable t) -->Line_4 $$ StackTraceElement[] stackTraceElements = t.getStackTrace()[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_9 $$ return builder.toString()[ FD ]
Line_2 $$ private static String getStackTraceAsText(Throwable t) -->Line_5 $$ for (int index = 0; index < stackTraceElements.length; index++) [ CD ]
Line_6 $$ StackTraceElement stackTraceElement = stackTraceElements[index]-->Line_7 $$ builder.append("   ").append(stackTraceElement.toString()).append('\n')[ FD ]
