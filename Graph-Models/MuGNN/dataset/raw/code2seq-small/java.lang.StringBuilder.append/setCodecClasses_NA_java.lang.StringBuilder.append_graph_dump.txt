Line_6 $$ Class cls = itr.next()-->Line_7 $$ buf.append(cls.getName())[ FD ]
Line_2 $$ public static void setCodecClasses(Configuration conf, List<Class> classes) -->Line_3 $$ StringBuilder buf = new StringBuilder()[ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_13 $$ conf.set("io.compression.codecs", buf.toString())[ FD ]
Line_4 $$ Iterator<Class> itr = classes.iterator()-->Line_8 $$ while (itr.hasNext()) [ FD ]
Line_5 $$ if (itr.hasNext()) -->Line_6 $$ Class cls = itr.next()[ CD ]
Line_8 $$ while (itr.hasNext()) -->Line_9 $$ buf.append(',')[ CD ]
Line_2 $$ public static void setCodecClasses(Configuration conf, List<Class> classes) -->Line_5 $$ if (itr.hasNext()) [ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_9 $$ buf.append(',')[ FD ]
Line_4 $$ Iterator<Class> itr = classes.iterator()-->Line_10 $$ buf.append(itr.next().getName())[ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_10 $$ buf.append(itr.next().getName())[ FD ]
Line_5 $$ if (itr.hasNext()) -->Line_7 $$ buf.append(cls.getName())[ CD ]
Line_2 $$ public static void setCodecClasses(Configuration conf, List<Class> classes) -->Line_4 $$ Iterator<Class> itr = classes.iterator()[ CD ]
Line_8 $$ while (itr.hasNext()) -->Line_10 $$ buf.append(itr.next().getName())[ CD ]
Line_5 $$ if (itr.hasNext()) -->Line_8 $$ while (itr.hasNext()) [ CD ]
Line_2 $$ public static void setCodecClasses(Configuration conf, List<Class> classes) -->Line_4 $$ Iterator<Class> itr = classes.iterator()[ FD ]
Line_4 $$ Iterator<Class> itr = classes.iterator()-->Line_5 $$ if (itr.hasNext()) [ FD ]
Line_2 $$ public static void setCodecClasses(Configuration conf, List<Class> classes) -->Line_13 $$ conf.set("io.compression.codecs", buf.toString())[ CD ]
Line_4 $$ Iterator<Class> itr = classes.iterator()-->Line_6 $$ Class cls = itr.next()[ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_7 $$ buf.append(cls.getName())[ FD ]
Line_2 $$ public static void setCodecClasses(Configuration conf, List<Class> classes) -->Line_13 $$ conf.set("io.compression.codecs", buf.toString())[ FD ]
