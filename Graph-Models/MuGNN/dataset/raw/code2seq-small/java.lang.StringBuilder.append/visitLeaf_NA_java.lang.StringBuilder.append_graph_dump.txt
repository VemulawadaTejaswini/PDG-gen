Line_2 $$ public void visitLeaf(LeafElement leaf) -->Line_12 $$ if (!Comparing.equal(leafText, leafEncodedText)) [ CD ]
Line_2 $$ public void visitLeaf(LeafElement leaf) -->Line_6 $$ StringBuilder leafEncodedText = constructTextFromHostPSI(leafRange.getStartOffset(), leafRange.getEndOffset())[ CD ]
Line_2 $$ public void visitLeaf(LeafElement leaf) -->Line_13 $$ newTexts.put(leaf, leafEncodedText.toString())[ FD ]
Line_3 $$ String leafText = leaf instanceof ForeignLeafPsiElement ? "" : leaf.getText()-->Line_12 $$ if (!Comparing.equal(leafText, leafEncodedText)) [ FD ]
Line_12 $$ if (!Comparing.equal(leafText, leafEncodedText)) -->Line_13 $$ newTexts.put(leaf, leafEncodedText.toString())[ CD ]
Line_2 $$ public void visitLeaf(LeafElement leaf) -->Line_3 $$ String leafText = leaf instanceof ForeignLeafPsiElement ? "" : leaf.getText()[ CD ]
Line_7 $$ if (leaf.getElementType() == TokenType.WHITE_SPACE && prevElementTail != null) -->Line_10 $$ storeUnescapedTextFor(prevElement, null)[ CD ]
Line_2 $$ public void visitLeaf(LeafElement leaf) -->Line_3 $$ String leafText = leaf instanceof ForeignLeafPsiElement ? "" : leaf.getText()[ FD ]
Line_2 $$ public void visitLeaf(LeafElement leaf) -->Line_7 $$ if (leaf.getElementType() == TokenType.WHITE_SPACE && prevElementTail != null) [ FD ]
Line_2 $$ public void visitLeaf(LeafElement leaf) -->Line_5 $$ final TextRange leafRange = leaf.getTextRange()[ CD ]
Line_7 $$ if (leaf.getElementType() == TokenType.WHITE_SPACE && prevElementTail != null) -->Line_8 $$ leafEncodedText.insert(0, prevElementTail)[ CD ]
Line_3 $$ String leafText = leaf instanceof ForeignLeafPsiElement ? "" : leaf.getText()-->Line_4 $$ catLeafs.append(leafText)[ FD ]
Line_2 $$ public void visitLeaf(LeafElement leaf) -->Line_4 $$ catLeafs.append(leafText)[ CD ]
Line_12 $$ if (!Comparing.equal(leafText, leafEncodedText)) -->Line_14 $$ storeUnescapedTextFor(leaf, leafText)[ CD ]
Line_6 $$ StringBuilder leafEncodedText = constructTextFromHostPSI(leafRange.getStartOffset(), leafRange.getEndOffset())-->Line_16 $$ prevElementTail = StringUtil.startsWith(leafEncodedText, leafText) && leafEncodedText.length() != leafText.length() ? leafEncodedText.substring(leafText.length()) : null[ FD ]
Line_2 $$ public void visitLeaf(LeafElement leaf) -->Line_5 $$ final TextRange leafRange = leaf.getTextRange()[ FD ]
Line_2 $$ public void visitLeaf(LeafElement leaf) -->Line_14 $$ storeUnescapedTextFor(leaf, leafText)[ FD ]
Line_6 $$ StringBuilder leafEncodedText = constructTextFromHostPSI(leafRange.getStartOffset(), leafRange.getEndOffset())-->Line_8 $$ leafEncodedText.insert(0, prevElementTail)[ FD ]
Line_7 $$ if (leaf.getElementType() == TokenType.WHITE_SPACE && prevElementTail != null) -->Line_9 $$ newTexts.remove(prevElement)[ CD ]
Line_5 $$ final TextRange leafRange = leaf.getTextRange()-->Line_6 $$ StringBuilder leafEncodedText = constructTextFromHostPSI(leafRange.getStartOffset(), leafRange.getEndOffset())[ FD ]
Line_3 $$ String leafText = leaf instanceof ForeignLeafPsiElement ? "" : leaf.getText()-->Line_14 $$ storeUnescapedTextFor(leaf, leafText)[ FD ]
Line_6 $$ StringBuilder leafEncodedText = constructTextFromHostPSI(leafRange.getStartOffset(), leafRange.getEndOffset())-->Line_13 $$ newTexts.put(leaf, leafEncodedText.toString())[ FD ]
Line_2 $$ public void visitLeaf(LeafElement leaf) -->Line_7 $$ if (leaf.getElementType() == TokenType.WHITE_SPACE && prevElementTail != null) [ CD ]
Line_6 $$ StringBuilder leafEncodedText = constructTextFromHostPSI(leafRange.getStartOffset(), leafRange.getEndOffset())-->Line_12 $$ if (!Comparing.equal(leafText, leafEncodedText)) [ FD ]
Line_3 $$ String leafText = leaf instanceof ForeignLeafPsiElement ? "" : leaf.getText()-->Line_16 $$ prevElementTail = StringUtil.startsWith(leafEncodedText, leafText) && leafEncodedText.length() != leafText.length() ? leafEncodedText.substring(leafText.length()) : null[ FD ]
