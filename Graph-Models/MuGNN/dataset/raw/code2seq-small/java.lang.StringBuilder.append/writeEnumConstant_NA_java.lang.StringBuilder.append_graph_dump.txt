Line_12 $$ if (anonymousBlock != null) -->Line_13 $$ builder.append("[ CD ]
Line_2 $$ public void writeEnumConstant(StringBuilder builder, GrEnumConstant constant) -->Line_15 $$ builder.append("\n}")[ FD ]
Line_2 $$ public void writeEnumConstant(StringBuilder builder, GrEnumConstant constant) -->Line_3 $$ GenerationUtil.writeDocComment(builder, constant, false)[ FD ]
Line_12 $$ if (anonymousBlock != null) -->Line_14 $$ new ClassGenerator(classNameProvider, this).writeMembers(builder, anonymousBlock)[ CD ]
Line_5 $$ final GrArgumentList argumentList = constant.getArgumentList()-->Line_6 $$ if (argumentList != null) [ FD ]
Line_12 $$ if (anonymousBlock != null) -->Line_15 $$ builder.append("\n}")[ CD ]
Line_2 $$ public void writeEnumConstant(StringBuilder builder, GrEnumConstant constant) -->Line_3 $$ GenerationUtil.writeDocComment(builder, constant, false)[ CD ]
Line_2 $$ public void writeEnumConstant(StringBuilder builder, GrEnumConstant constant) -->Line_6 $$ if (argumentList != null) [ CD ]
Line_5 $$ final GrArgumentList argumentList = constant.getArgumentList()-->Line_9 $$ new ArgumentListGenerator(builder, context.extend()).generate(signature, argumentList.getExpressionArguments(), argumentList.getNamedArguments(), GrClosableBlock.EMPTY_ARRAY, constant)[ FD ]
Line_2 $$ public void writeEnumConstant(StringBuilder builder, GrEnumConstant constant) -->Line_11 $$ final GrEnumConstantInitializer anonymousBlock = constant.getInitializingClass()[ CD ]
Line_8 $$ GrClosureSignature signature = GrClosureSignatureUtil.createSignature(resolveResult)-->Line_9 $$ new ArgumentListGenerator(builder, context.extend()).generate(signature, argumentList.getExpressionArguments(), argumentList.getNamedArguments(), GrClosableBlock.EMPTY_ARRAY, constant)[ FD ]
Line_2 $$ public void writeEnumConstant(StringBuilder builder, GrEnumConstant constant) -->Line_4 $$ builder.append(constant.getName())[ CD ]
Line_7 $$ final GroovyResolveResult resolveResult = constant.advancedResolve()-->Line_8 $$ GrClosureSignature signature = GrClosureSignatureUtil.createSignature(resolveResult)[ FD ]
Line_2 $$ public void writeEnumConstant(StringBuilder builder, GrEnumConstant constant) -->Line_5 $$ final GrArgumentList argumentList = constant.getArgumentList()[ FD ]
Line_2 $$ public void writeEnumConstant(StringBuilder builder, GrEnumConstant constant) -->Line_4 $$ builder.append(constant.getName())[ FD ]
Line_2 $$ public void writeEnumConstant(StringBuilder builder, GrEnumConstant constant) -->Line_7 $$ final GroovyResolveResult resolveResult = constant.advancedResolve()[ FD ]
Line_2 $$ public void writeEnumConstant(StringBuilder builder, GrEnumConstant constant) -->Line_11 $$ final GrEnumConstantInitializer anonymousBlock = constant.getInitializingClass()[ FD ]
Line_2 $$ public void writeEnumConstant(StringBuilder builder, GrEnumConstant constant) -->Line_13 $$ builder.append("[ FD ]
Line_2 $$ public void writeEnumConstant(StringBuilder builder, GrEnumConstant constant) -->Line_12 $$ if (anonymousBlock != null) [ CD ]
Line_6 $$ if (argumentList != null) -->Line_8 $$ GrClosureSignature signature = GrClosureSignatureUtil.createSignature(resolveResult)[ CD ]
Line_2 $$ public void writeEnumConstant(StringBuilder builder, GrEnumConstant constant) -->Line_5 $$ final GrArgumentList argumentList = constant.getArgumentList()[ CD ]
Line_2 $$ public void writeEnumConstant(StringBuilder builder, GrEnumConstant constant) -->Line_14 $$ new ClassGenerator(classNameProvider, this).writeMembers(builder, anonymousBlock)[ FD ]
Line_6 $$ if (argumentList != null) -->Line_7 $$ final GroovyResolveResult resolveResult = constant.advancedResolve()[ CD ]
Line_2 $$ public void writeEnumConstant(StringBuilder builder, GrEnumConstant constant) -->Line_9 $$ new ArgumentListGenerator(builder, context.extend()).generate(signature, argumentList.getExpressionArguments(), argumentList.getNamedArguments(), GrClosableBlock.EMPTY_ARRAY, constant)[ FD ]
Line_11 $$ final GrEnumConstantInitializer anonymousBlock = constant.getInitializingClass()-->Line_14 $$ new ClassGenerator(classNameProvider, this).writeMembers(builder, anonymousBlock)[ FD ]
Line_6 $$ if (argumentList != null) -->Line_9 $$ new ArgumentListGenerator(builder, context.extend()).generate(signature, argumentList.getExpressionArguments(), argumentList.getNamedArguments(), GrClosableBlock.EMPTY_ARRAY, constant)[ CD ]
Line_11 $$ final GrEnumConstantInitializer anonymousBlock = constant.getInitializingClass()-->Line_12 $$ if (anonymousBlock != null) [ FD ]
