Line_2 $$ public void notifyTextAvailable(String text, Key outputType) -->Line_3 $$ text = StringUtil.convertLineSeparators(text)[ CD ]
Line_4 $$ if (LOG.isDebugEnabled()) -->Line_5 $$ LOG.debug(outputType + text)[ CD ]
Line_9 $$ if (outputType == ProcessOutputTypes.STDERR) -->Line_10 $$ myStdErr.append(text)[ CD ]
Line_2 $$ public void notifyTextAvailable(String text, Key outputType) -->Line_3 $$ text = StringUtil.convertLineSeparators(text)[ FD ]
Line_2 $$ public void notifyTextAvailable(String text, Key outputType) -->Line_8 $$ myStdOut.append(text)[ FD ]
Line_2 $$ public void notifyTextAvailable(String text, Key outputType) -->Line_7 $$ if (outputType == ProcessOutputTypes.STDOUT) [ FD ]
Line_3 $$ text = StringUtil.convertLineSeparators(text)-->Line_10 $$ myStdErr.append(text)[ FD ]
Line_7 $$ if (outputType == ProcessOutputTypes.STDOUT) -->Line_8 $$ myStdOut.append(text)[ CD ]
Line_2 $$ public void notifyTextAvailable(String text, Key outputType) -->Line_9 $$ if (outputType == ProcessOutputTypes.STDERR) [ FD ]
Line_2 $$ public void notifyTextAvailable(String text, Key outputType) -->Line_7 $$ if (outputType == ProcessOutputTypes.STDOUT) [ CD ]
Line_2 $$ public void notifyTextAvailable(String text, Key outputType) -->Line_10 $$ myStdErr.append(text)[ FD ]
Line_7 $$ if (outputType == ProcessOutputTypes.STDOUT) -->Line_9 $$ if (outputType == ProcessOutputTypes.STDERR) [ CD ]
Line_2 $$ public void notifyTextAvailable(String text, Key outputType) -->Line_4 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_3 $$ text = StringUtil.convertLineSeparators(text)-->Line_8 $$ myStdOut.append(text)[ FD ]
