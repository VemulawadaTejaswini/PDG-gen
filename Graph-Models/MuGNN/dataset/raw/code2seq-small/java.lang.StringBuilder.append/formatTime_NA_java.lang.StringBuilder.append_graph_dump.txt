Line_9 $$ if (hours != 0) -->Line_10 $$ buf.append(hours)[ CD ]
Line_2 $$ public static String formatTime(long timeDiff) -->Line_8 $$ long seconds = rem / 1000[ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_15 $$ buf.append("mins, ")[ FD ]
Line_8 $$ long seconds = rem / 1000-->Line_17 $$ buf.append(seconds)[ FD ]
Line_2 $$ public static String formatTime(long timeDiff) -->Line_3 $$ StringBuilder buf = new StringBuilder()[ CD ]
Line_2 $$ public static String formatTime(long timeDiff) -->Line_9 $$ if (hours != 0) [ CD ]
Line_2 $$ public static String formatTime(long timeDiff) -->Line_5 $$ long rem = (timeDiff % (60 * 60 * 1000))[ CD ]
Line_2 $$ public static String formatTime(long timeDiff) -->Line_4 $$ long hours = timeDiff / (60 * 60 * 1000)[ CD ]
Line_2 $$ public static String formatTime(long timeDiff) -->Line_13 $$ if (minutes != 0) [ CD ]
Line_13 $$ if (minutes != 0) -->Line_15 $$ buf.append("mins, ")[ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_19 $$ return buf.toString()[ FD ]
Line_6 $$ long minutes = rem / (60 * 1000)-->Line_14 $$ buf.append(minutes)[ FD ]
Line_2 $$ public static String formatTime(long timeDiff) -->Line_7 $$ rem = rem % (60 * 1000)[ CD ]
Line_5 $$ long rem = (timeDiff % (60 * 60 * 1000))-->Line_7 $$ rem = rem % (60 * 1000)[ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_14 $$ buf.append(minutes)[ FD ]
Line_4 $$ long hours = timeDiff / (60 * 60 * 1000)-->Line_9 $$ if (hours != 0) [ FD ]
Line_4 $$ long hours = timeDiff / (60 * 60 * 1000)-->Line_10 $$ buf.append(hours)[ FD ]
Line_13 $$ if (minutes != 0) -->Line_14 $$ buf.append(minutes)[ CD ]
Line_2 $$ public static String formatTime(long timeDiff) -->Line_6 $$ long minutes = rem / (60 * 1000)[ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_10 $$ buf.append(hours)[ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_11 $$ buf.append("hrs, ")[ FD ]
Line_6 $$ long minutes = rem / (60 * 1000)-->Line_13 $$ if (minutes != 0) [ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_17 $$ buf.append(seconds)[ FD ]
Line_2 $$ public static String formatTime(long timeDiff) -->Line_19 $$ return buf.toString()[ CD ]
Line_9 $$ if (hours != 0) -->Line_11 $$ buf.append("hrs, ")[ CD ]
Line_2 $$ public static String formatTime(long timeDiff) -->Line_17 $$ buf.append(seconds)[ CD ]
Line_2 $$ public static String formatTime(long timeDiff) -->Line_18 $$ buf.append("sec")[ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder()-->Line_18 $$ buf.append("sec")[ FD ]
