Line_2 $$ private static StringBuilder buildIf(@Nullable PsiExpression expression, boolean top, StringBuilder out) -->Line_11 $$ if (top && !StringUtil.endsWith(out, "return true;")) [ FD ]
Line_2 $$ private static StringBuilder buildIf(@Nullable PsiExpression expression, boolean top, StringBuilder out) -->Line_24 $$ if (expression instanceof PsiParenthesizedExpression) [ FD ]
Line_2 $$ private static StringBuilder buildIf(@Nullable PsiExpression expression, boolean top, StringBuilder out) -->Line_9 $$ buildIf(operand, false, out)[ FD ]
Line_3 $$ if (expression instanceof PsiPolyadicExpression) -->Line_6 $$ final IElementType tokenType = polyadicExpression.getOperationTokenType()[ CD ]
Line_2 $$ private static StringBuilder buildIf(@Nullable PsiExpression expression, boolean top, StringBuilder out) -->Line_29 $$ if (expression != null) [ CD ]
Line_8 $$ for (PsiExpression operand : operands) -->Line_9 $$ buildIf(operand, false, out)[ FD ]
Line_4 $$ final PsiPolyadicExpression polyadicExpression = (PsiPolyadicExpression) expression-->Line_6 $$ final IElementType tokenType = polyadicExpression.getOperationTokenType()[ FD ]
Line_29 $$ if (expression != null) -->Line_30 $$ out.append("if(").append(expression.getText()).append(")")[ CD ]
Line_25 $$ final PsiParenthesizedExpression parenthesizedExpression = (PsiParenthesizedExpression) expression-->Line_26 $$ buildIf(parenthesizedExpression.getExpression(), top, out)[ FD ]
Line_6 $$ final IElementType tokenType = polyadicExpression.getOperationTokenType()-->Line_15 $$ if (top && JavaTokenType.OROR.equals(tokenType)) [ FD ]
Line_3 $$ if (expression instanceof PsiPolyadicExpression) -->Line_4 $$ final PsiPolyadicExpression polyadicExpression = (PsiPolyadicExpression) expression[ CD ]
Line_2 $$ private static StringBuilder buildIf(@Nullable PsiExpression expression, boolean top, StringBuilder out) -->Line_3 $$ if (expression instanceof PsiPolyadicExpression) [ CD ]
Line_3 $$ if (expression instanceof PsiPolyadicExpression) -->Line_7 $$ if (JavaTokenType.ANDAND.equals(tokenType)) [ CD ]
Line_7 $$ if (JavaTokenType.ANDAND.equals(tokenType)) -->Line_15 $$ if (top && JavaTokenType.OROR.equals(tokenType)) [ CD ]
Line_2 $$ private static StringBuilder buildIf(@Nullable PsiExpression expression, boolean top, StringBuilder out) -->Line_18 $$ if (!StringUtil.endsWith(out, "return true;")) [ FD ]
Line_2 $$ private static StringBuilder buildIf(@Nullable PsiExpression expression, boolean top, StringBuilder out) -->Line_32 $$ return out[ CD ]
Line_2 $$ private static StringBuilder buildIf(@Nullable PsiExpression expression, boolean top, StringBuilder out) -->Line_29 $$ if (expression != null) [ FD ]
Line_2 $$ private static StringBuilder buildIf(@Nullable PsiExpression expression, boolean top, StringBuilder out) -->Line_17 $$ buildIf(operand, false, out)[ FD ]
Line_2 $$ private static StringBuilder buildIf(@Nullable PsiExpression expression, boolean top, StringBuilder out) -->Line_3 $$ if (expression instanceof PsiPolyadicExpression) [ FD ]
Line_3 $$ if (expression instanceof PsiPolyadicExpression) -->Line_24 $$ if (expression instanceof PsiParenthesizedExpression) [ CD ]
Line_2 $$ private static StringBuilder buildIf(@Nullable PsiExpression expression, boolean top, StringBuilder out) -->Line_26 $$ buildIf(parenthesizedExpression.getExpression(), top, out)[ FD ]
Line_24 $$ if (expression instanceof PsiParenthesizedExpression) -->Line_27 $$ return out[ CD ]
Line_2 $$ private static StringBuilder buildIf(@Nullable PsiExpression expression, boolean top, StringBuilder out) -->Line_12 $$ out.append("return true;")[ FD ]
Line_24 $$ if (expression instanceof PsiParenthesizedExpression) -->Line_25 $$ final PsiParenthesizedExpression parenthesizedExpression = (PsiParenthesizedExpression) expression[ CD ]
Line_6 $$ final IElementType tokenType = polyadicExpression.getOperationTokenType()-->Line_7 $$ if (JavaTokenType.ANDAND.equals(tokenType)) [ FD ]
Line_7 $$ if (JavaTokenType.ANDAND.equals(tokenType)) -->Line_11 $$ if (top && !StringUtil.endsWith(out, "return true;")) [ CD ]
Line_24 $$ if (expression instanceof PsiParenthesizedExpression) -->Line_26 $$ buildIf(parenthesizedExpression.getExpression(), top, out)[ CD ]
Line_15 $$ if (top && JavaTokenType.OROR.equals(tokenType)) -->Line_22 $$ return out[ CD ]
Line_2 $$ private static StringBuilder buildIf(@Nullable PsiExpression expression, boolean top, StringBuilder out) -->Line_30 $$ out.append("if(").append(expression.getText()).append(")")[ FD ]
Line_7 $$ if (JavaTokenType.ANDAND.equals(tokenType)) -->Line_14 $$ return out[ CD ]
Line_8 $$ for (PsiExpression operand : operands) -->Line_17 $$ buildIf(operand, false, out)[ FD ]
Line_3 $$ if (expression instanceof PsiPolyadicExpression) -->Line_5 $$ final PsiExpression[] operands = polyadicExpression.getOperands()[ CD ]
Line_4 $$ final PsiPolyadicExpression polyadicExpression = (PsiPolyadicExpression) expression-->Line_5 $$ final PsiExpression[] operands = polyadicExpression.getOperands()[ FD ]
Line_18 $$ if (!StringUtil.endsWith(out, "return true;")) -->Line_19 $$ out.append("return true;")[ CD ]
Line_2 $$ private static StringBuilder buildIf(@Nullable PsiExpression expression, boolean top, StringBuilder out) -->Line_15 $$ if (top && JavaTokenType.OROR.equals(tokenType)) [ FD ]
Line_2 $$ private static StringBuilder buildIf(@Nullable PsiExpression expression, boolean top, StringBuilder out) -->Line_19 $$ out.append("return true;")[ FD ]
Line_11 $$ if (top && !StringUtil.endsWith(out, "return true;")) -->Line_12 $$ out.append("return true;")[ CD ]
