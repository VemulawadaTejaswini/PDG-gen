Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_26 $$ sb.append("COMMENTS|")[ FD ]
Line_2 $$ public static String flagsToString(int flags) -->Line_7 $$ if ((flags & Pattern.MULTILINE) != 0) [ CD ]
Line_10 $$ if ((flags & Pattern.DOTALL) != 0) -->Line_11 $$ sb.append("DOTALL|")[ CD ]
Line_2 $$ public static String flagsToString(int flags) -->Line_19 $$ if ((flags & Pattern.UNIX_LINES) != 0) [ CD ]
Line_16 $$ if ((flags & Pattern.CANON_EQ) != 0) -->Line_17 $$ sb.append("CANON_EQ|")[ CD ]
Line_2 $$ public static String flagsToString(int flags) -->Line_4 $$ if ((flags & Pattern.CASE_INSENSITIVE) != 0) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_14 $$ sb.append("UNICODE_CASE|")[ FD ]
Line_7 $$ if ((flags & Pattern.MULTILINE) != 0) -->Line_8 $$ sb.append("MULTILINE|")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_23 $$ sb.append("LITERAL|")[ FD ]
Line_25 $$ if ((flags & Pattern.COMMENTS) != 0) -->Line_26 $$ sb.append("COMMENTS|")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_5 $$ sb.append("CASE_INSENSITIVE|")[ FD ]
Line_2 $$ public static String flagsToString(int flags) -->Line_13 $$ if ((flags & Pattern.UNICODE_CASE) != 0) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_17 $$ sb.append("CANON_EQ|")[ FD ]
Line_2 $$ public static String flagsToString(int flags) -->Line_10 $$ if ((flags & Pattern.DOTALL) != 0) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_31 $$ return sb.toString()[ FD ]
Line_2 $$ public static String flagsToString(int flags) -->Line_22 $$ if ((flags & Pattern.LITERAL) != 0) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_11 $$ sb.append("DOTALL|")[ FD ]
Line_4 $$ if ((flags & Pattern.CASE_INSENSITIVE) != 0) -->Line_5 $$ sb.append("CASE_INSENSITIVE|")[ CD ]
Line_2 $$ public static String flagsToString(int flags) -->Line_16 $$ if ((flags & Pattern.CANON_EQ) != 0) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_29 $$ sb.append("UNICODE_CHAR_CLASS|")[ FD ]
Line_2 $$ public static String flagsToString(int flags) -->Line_28 $$ if ((flags & UNICODE_CHARACTER_CLASS) != 0) [ CD ]
Line_2 $$ public static String flagsToString(int flags) -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_28 $$ if ((flags & UNICODE_CHARACTER_CLASS) != 0) -->Line_29 $$ sb.append("UNICODE_CHAR_CLASS|")[ CD ]
Line_2 $$ public static String flagsToString(int flags) -->Line_31 $$ return sb.toString()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_8 $$ sb.append("MULTILINE|")[ FD ]
Line_2 $$ public static String flagsToString(int flags) -->Line_25 $$ if ((flags & Pattern.COMMENTS) != 0) [ CD ]
Line_19 $$ if ((flags & Pattern.UNIX_LINES) != 0) -->Line_20 $$ sb.append("UNIX_LINES|")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_20 $$ sb.append("UNIX_LINES|")[ FD ]
Line_22 $$ if ((flags & Pattern.LITERAL) != 0) -->Line_23 $$ sb.append("LITERAL|")[ CD ]
Line_13 $$ if ((flags & Pattern.UNICODE_CASE) != 0) -->Line_14 $$ sb.append("UNICODE_CASE|")[ CD ]
