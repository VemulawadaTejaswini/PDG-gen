Line_4 $$ if (value.indexOf('\n') >= 0) -->Line_5 $$ buffer.append("'''")[ CD ]
Line_2 $$ public static StringBuilder getLiteralTextByValue(String value) -->Line_6 $$ escapeStringCharacters(value.length(), value, "", false, true, buffer)[ FD ]
Line_2 $$ public static StringBuilder getLiteralTextByValue(String value) -->Line_4 $$ if (value.indexOf('\n') >= 0) [ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_10 $$ escapeStringCharacters(value.length(), value, "'", false, true, buffer)[ FD ]
Line_2 $$ public static StringBuilder getLiteralTextByValue(String value) -->Line_13 $$ return buffer[ CD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_5 $$ buffer.append("'''")[ FD ]
Line_2 $$ public static StringBuilder getLiteralTextByValue(String value) -->Line_3 $$ StringBuilder buffer = new StringBuilder()[ CD ]
Line_4 $$ if (value.indexOf('\n') >= 0) -->Line_10 $$ escapeStringCharacters(value.length(), value, "'", false, true, buffer)[ CD ]
Line_4 $$ if (value.indexOf('\n') >= 0) -->Line_11 $$ buffer.append("'")[ CD ]
Line_4 $$ if (value.indexOf('\n') >= 0) -->Line_9 $$ buffer.append("'")[ CD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_6 $$ escapeStringCharacters(value.length(), value, "", false, true, buffer)[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_7 $$ buffer.append("'''")[ FD ]
Line_4 $$ if (value.indexOf('\n') >= 0) -->Line_7 $$ buffer.append("'''")[ CD ]
Line_2 $$ public static StringBuilder getLiteralTextByValue(String value) -->Line_4 $$ if (value.indexOf('\n') >= 0) [ CD ]
Line_4 $$ if (value.indexOf('\n') >= 0) -->Line_6 $$ escapeStringCharacters(value.length(), value, "", false, true, buffer)[ CD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_9 $$ buffer.append("'")[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_11 $$ buffer.append("'")[ FD ]
Line_2 $$ public static StringBuilder getLiteralTextByValue(String value) -->Line_10 $$ escapeStringCharacters(value.length(), value, "'", false, true, buffer)[ FD ]
