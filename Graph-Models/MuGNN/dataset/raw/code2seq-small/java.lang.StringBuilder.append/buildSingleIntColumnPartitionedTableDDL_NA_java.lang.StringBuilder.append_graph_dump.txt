Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_11 $$ sb.append(" STORED AS " + fileFormat)[ FD ]
Line_2 $$ private static String buildSingleIntColumnPartitionedTableDDL(String fileFormat, Optional<String> rowFormat) -->Line_9 $$ sb.append("ROW FORMAT ").append(rowFormat.get())[ FD ]
Line_2 $$ private static String buildSingleIntColumnPartitionedTableDDL(String fileFormat, Optional<String> rowFormat) -->Line_8 $$ if (rowFormat.isPresent()) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_12 $$ return sb.toString()[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_9 $$ sb.append("ROW FORMAT ").append(rowFormat.get())[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_6 $$ sb.append(") ")[ FD ]
Line_2 $$ private static String buildSingleIntColumnPartitionedTableDDL(String fileFormat, Optional<String> rowFormat) -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ private static String buildSingleIntColumnPartitionedTableDDL(String fileFormat, Optional<String> rowFormat) -->Line_5 $$ sb.append("   col INT")[ CD ]
Line_8 $$ if (rowFormat.isPresent()) -->Line_9 $$ sb.append("ROW FORMAT ").append(rowFormat.get())[ CD ]
Line_2 $$ private static String buildSingleIntColumnPartitionedTableDDL(String fileFormat, Optional<String> rowFormat) -->Line_4 $$ sb.append("CREATE EXTERNAL TABLE %NAME%(")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_4 $$ sb.append("CREATE EXTERNAL TABLE %NAME%(")[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_7 $$ sb.append("PARTITIONED BY (part_col INT) ")[ FD ]
Line_2 $$ private static String buildSingleIntColumnPartitionedTableDDL(String fileFormat, Optional<String> rowFormat) -->Line_6 $$ sb.append(") ")[ CD ]
Line_2 $$ private static String buildSingleIntColumnPartitionedTableDDL(String fileFormat, Optional<String> rowFormat) -->Line_7 $$ sb.append("PARTITIONED BY (part_col INT) ")[ CD ]
Line_2 $$ private static String buildSingleIntColumnPartitionedTableDDL(String fileFormat, Optional<String> rowFormat) -->Line_11 $$ sb.append(" STORED AS " + fileFormat)[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_5 $$ sb.append("   col INT")[ FD ]
Line_2 $$ private static String buildSingleIntColumnPartitionedTableDDL(String fileFormat, Optional<String> rowFormat) -->Line_12 $$ return sb.toString()[ CD ]
Line_2 $$ private static String buildSingleIntColumnPartitionedTableDDL(String fileFormat, Optional<String> rowFormat) -->Line_8 $$ if (rowFormat.isPresent()) [ FD ]
