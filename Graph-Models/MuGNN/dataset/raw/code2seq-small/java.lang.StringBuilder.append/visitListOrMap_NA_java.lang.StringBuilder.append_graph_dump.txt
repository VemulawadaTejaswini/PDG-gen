Line_2 $$ public void visitListOrMap(GrListOrMap listOrMap) -->Line_8 $$ TypeWriter.writeTypeForNew(builder, type, listOrMap)[ FD ]
Line_11 $$ String varName = generateMapVariableDeclaration(listOrMap, type)-->Line_12 $$ generateMapElementInsertions(listOrMap, varName)[ FD ]
Line_19 $$ if (typeToUse instanceof PsiArrayType) -->Line_20 $$ if (listOrMap.getInitializers().length == 0) [ CD ]
Line_2 $$ public void visitListOrMap(GrListOrMap listOrMap) -->Line_24 $$ genInitializers(listOrMap)[ FD ]
Line_27 $$ if (listOrMap.getInitializers().length == 0) -->Line_28 $$ builder.append("()")[ CD ]
Line_2 $$ public void visitListOrMap(GrListOrMap listOrMap) -->Line_12 $$ generateMapElementInsertions(listOrMap, varName)[ FD ]
Line_2 $$ public void visitListOrMap(GrListOrMap listOrMap) -->Line_4 $$ LOG.assertTrue(type instanceof GrLiteralClassType || type instanceof PsiArrayType || type instanceof PsiClassType)[ CD ]
Line_6 $$ if (listOrMap.getNamedArguments().length == 0) -->Line_9 $$ builder.append("()")[ CD ]
Line_17 $$ PsiType typeToUse = getTypeToUseByList(listOrMap, type)-->Line_19 $$ if (typeToUse instanceof PsiArrayType) [ FD ]
Line_27 $$ if (listOrMap.getInitializers().length == 0) -->Line_31 $$ genInitializers(listOrMap)[ CD ]
Line_3 $$ final PsiType type = listOrMap.getType()-->Line_8 $$ TypeWriter.writeTypeForNew(builder, type, listOrMap)[ FD ]
Line_2 $$ public void visitListOrMap(GrListOrMap listOrMap) -->Line_3 $$ final PsiType type = listOrMap.getType()[ FD ]
Line_3 $$ final PsiType type = listOrMap.getType()-->Line_11 $$ String varName = generateMapVariableDeclaration(listOrMap, type)[ FD ]
Line_5 $$ if (listOrMap.isMap()) -->Line_17 $$ PsiType typeToUse = getTypeToUseByList(listOrMap, type)[ CD ]
Line_2 $$ public void visitListOrMap(GrListOrMap listOrMap) -->Line_17 $$ PsiType typeToUse = getTypeToUseByList(listOrMap, type)[ FD ]
Line_5 $$ if (listOrMap.isMap()) -->Line_18 $$ TypeWriter.writeTypeForNew(builder, typeToUse, listOrMap)[ CD ]
Line_5 $$ if (listOrMap.isMap()) -->Line_19 $$ if (typeToUse instanceof PsiArrayType) [ CD ]
Line_2 $$ public void visitListOrMap(GrListOrMap listOrMap) -->Line_20 $$ if (listOrMap.getInitializers().length == 0) [ FD ]
Line_6 $$ if (listOrMap.getNamedArguments().length == 0) -->Line_7 $$ builder.append("new ")[ CD ]
Line_20 $$ if (listOrMap.getInitializers().length == 0) -->Line_23 $$ builder.append('[ CD ]
Line_6 $$ if (listOrMap.getNamedArguments().length == 0) -->Line_11 $$ String varName = generateMapVariableDeclaration(listOrMap, type)[ CD ]
Line_2 $$ public void visitListOrMap(GrListOrMap listOrMap) -->Line_5 $$ if (listOrMap.isMap()) [ FD ]
Line_2 $$ public void visitListOrMap(GrListOrMap listOrMap) -->Line_27 $$ if (listOrMap.getInitializers().length == 0) [ FD ]
Line_6 $$ if (listOrMap.getNamedArguments().length == 0) -->Line_13 $$ builder.append(varName)[ CD ]
Line_2 $$ public void visitListOrMap(GrListOrMap listOrMap) -->Line_11 $$ String varName = generateMapVariableDeclaration(listOrMap, type)[ FD ]
Line_3 $$ final PsiType type = listOrMap.getType()-->Line_17 $$ PsiType typeToUse = getTypeToUseByList(listOrMap, type)[ FD ]
Line_27 $$ if (listOrMap.getInitializers().length == 0) -->Line_30 $$ builder.append("(java.util.Arrays.asList(")[ CD ]
Line_17 $$ PsiType typeToUse = getTypeToUseByList(listOrMap, type)-->Line_18 $$ TypeWriter.writeTypeForNew(builder, typeToUse, listOrMap)[ FD ]
Line_2 $$ public void visitListOrMap(GrListOrMap listOrMap) -->Line_31 $$ genInitializers(listOrMap)[ FD ]
Line_2 $$ public void visitListOrMap(GrListOrMap listOrMap) -->Line_5 $$ if (listOrMap.isMap()) [ CD ]
Line_2 $$ public void visitListOrMap(GrListOrMap listOrMap) -->Line_3 $$ final PsiType type = listOrMap.getType()[ CD ]
Line_6 $$ if (listOrMap.getNamedArguments().length == 0) -->Line_8 $$ TypeWriter.writeTypeForNew(builder, type, listOrMap)[ CD ]
Line_20 $$ if (listOrMap.getInitializers().length == 0) -->Line_21 $$ builder.replace(builder.length() - 2, builder.length(), "[0]")[ CD ]
Line_20 $$ if (listOrMap.getInitializers().length == 0) -->Line_25 $$ builder.append('}')[ CD ]
Line_2 $$ public void visitListOrMap(GrListOrMap listOrMap) -->Line_6 $$ if (listOrMap.getNamedArguments().length == 0) [ FD ]
Line_11 $$ String varName = generateMapVariableDeclaration(listOrMap, type)-->Line_13 $$ builder.append(varName)[ FD ]
Line_2 $$ public void visitListOrMap(GrListOrMap listOrMap) -->Line_18 $$ TypeWriter.writeTypeForNew(builder, typeToUse, listOrMap)[ FD ]
Line_6 $$ if (listOrMap.getNamedArguments().length == 0) -->Line_12 $$ generateMapElementInsertions(listOrMap, varName)[ CD ]
Line_20 $$ if (listOrMap.getInitializers().length == 0) -->Line_24 $$ genInitializers(listOrMap)[ CD ]
Line_5 $$ if (listOrMap.isMap()) -->Line_6 $$ if (listOrMap.getNamedArguments().length == 0) [ CD ]
Line_19 $$ if (typeToUse instanceof PsiArrayType) -->Line_27 $$ if (listOrMap.getInitializers().length == 0) [ CD ]
Line_5 $$ if (listOrMap.isMap()) -->Line_16 $$ builder.append("new ")[ CD ]
Line_27 $$ if (listOrMap.getInitializers().length == 0) -->Line_32 $$ builder.append("))")[ CD ]
