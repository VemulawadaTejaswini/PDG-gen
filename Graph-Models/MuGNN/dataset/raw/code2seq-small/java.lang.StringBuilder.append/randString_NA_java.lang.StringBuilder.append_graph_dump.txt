Line_2 $$ static String randString(boolean ascii) -->Line_13 $$ return UTF8Serializer.instance.deserialize(UTF8Serializer.instance.serialize(sb.toString()))[ CD ]
Line_2 $$ static String randString(boolean ascii) -->Line_4 $$ StringBuilder sb = new StringBuilder(l)[ CD ]
Line_2 $$ static String randString(boolean ascii) -->Line_3 $$ int l = randInt(20)[ CD ]
Line_6 $$ if (randBool(.05))-->Line_9 $$ char c = (char) (ascii ? randInt(128) : randShort())[ CD ]
Line_9 $$ char c = (char) (ascii ? randInt(128) : randShort())-->Line_10 $$ sb.append(c)[ FD ]
Line_3 $$ int l = randInt(20)-->Line_5 $$ for (int i = 0; i < l; i++) [ FD ]
Line_6 $$ if (randBool(.05))-->Line_7 $$ sb.append('\'')[ CD ]
Line_6 $$ if (randBool(.05))-->Line_10 $$ sb.append(c)[ CD ]
Line_5 $$ for (int i = 0; i < l; i++) -->Line_6 $$ if (randBool(.05))[ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder(l)-->Line_7 $$ sb.append('\'')[ FD ]
Line_4 $$ StringBuilder sb = new StringBuilder(l)-->Line_10 $$ sb.append(c)[ FD ]
Line_2 $$ static String randString(boolean ascii) -->Line_5 $$ for (int i = 0; i < l; i++) [ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder(l)-->Line_13 $$ return UTF8Serializer.instance.deserialize(UTF8Serializer.instance.serialize(sb.toString()))[ FD ]
