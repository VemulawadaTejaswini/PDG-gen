Line_10 $$ fault = new FileNotFoundException("Operation " + method.getName() + " on " + uri)-->Line_32 $$ fault = new SwiftThrottledRequestException("Client is being throttled: too many requests", method.getName(), uri, method)[ FD ]
Line_2 $$ private <M extends HttpMethod> IOException buildException(URI uri, M method, int statusCode) -->Line_21 $$ Header availableContentRange = method.getResponseHeader(HEADER_CONTENT_RANGE)[ FD ]
Line_25 $$ fault = new EOFException(errorText.toString())-->Line_35 $$ fault = new SwiftInvalidResponseException(errorMessage, method.getName(), uri, method)[ FD ]
Line_25 $$ fault = new EOFException(errorText.toString())-->Line_28 $$ fault = new SwiftAuthenticationFailedException("Operation not authorized- current access token =" + getToken(), method.getName(), uri, method)[ FD ]
Line_2 $$ private <M extends HttpMethod> IOException buildException(URI uri, M method, int statusCode) -->Line_4 $$ String errorMessage = String.format("Method %s on %s failed, status code: %d," + " status line: %s", method.getName(), uri, statusCode, method.getStatusLine())[ FD ]
Line_3 $$ IOException fault-->Line_25 $$ fault = new EOFException(errorText.toString())[ FD ]
Line_2 $$ private <M extends HttpMethod> IOException buildException(URI uri, M method, int statusCode) -->Line_37 $$ return fault[ CD ]
Line_25 $$ fault = new EOFException(errorText.toString())-->Line_32 $$ fault = new SwiftThrottledRequestException("Client is being throttled: too many requests", method.getName(), uri, method)[ FD ]
Line_17 $$ Header requestContentLen = method.getRequestHeader(HEADER_CONTENT_LENGTH)-->Line_18 $$ if (requestContentLen != null) [ FD ]
Line_22 $$ if (requestContentLen != null) -->Line_23 $$ errorText.append(" available ").append(availableContentRange.getValue())[ CD ]
Line_21 $$ Header availableContentRange = method.getResponseHeader(HEADER_CONTENT_RANGE)-->Line_23 $$ errorText.append(" available ").append(availableContentRange.getValue())[ FD ]
Line_16 $$ StringBuilder errorText = new StringBuilder(method.getStatusText())-->Line_19 $$ errorText.append(" requested ").append(requestContentLen.getValue())[ FD ]
Line_3 $$ IOException fault-->Line_10 $$ fault = new FileNotFoundException("Operation " + method.getName() + " on " + uri)[ FD ]
Line_2 $$ private <M extends HttpMethod> IOException buildException(URI uri, M method, int statusCode) -->Line_17 $$ Header requestContentLen = method.getRequestHeader(HEADER_CONTENT_LENGTH)[ FD ]
Line_10 $$ fault = new FileNotFoundException("Operation " + method.getName() + " on " + uri)-->Line_35 $$ fault = new SwiftInvalidResponseException(errorMessage, method.getName(), uri, method)[ FD ]
Line_2 $$ private <M extends HttpMethod> IOException buildException(URI uri, M method, int statusCode) -->Line_16 $$ StringBuilder errorText = new StringBuilder(method.getStatusText())[ FD ]
Line_3 $$ IOException fault-->Line_35 $$ fault = new SwiftInvalidResponseException(errorMessage, method.getName(), uri, method)[ FD ]
Line_5 $$ if (LOG.isDebugEnabled()) -->Line_6 $$ LOG.debug(errorMessage)[ CD ]
Line_28 $$ fault = new SwiftAuthenticationFailedException("Operation not authorized- current access token =" + getToken(), method.getName(), uri, method)-->Line_32 $$ fault = new SwiftThrottledRequestException("Client is being throttled: too many requests", method.getName(), uri, method)[ FD ]
Line_32 $$ fault = new SwiftThrottledRequestException("Client is being throttled: too many requests", method.getName(), uri, method)-->Line_35 $$ fault = new SwiftInvalidResponseException(errorMessage, method.getName(), uri, method)[ FD ]
Line_2 $$ private <M extends HttpMethod> IOException buildException(URI uri, M method, int statusCode) -->Line_13 $$ fault = new SwiftBadRequestException("Bad request against " + uri, method.getName(), uri, method)[ FD ]
Line_18 $$ if (requestContentLen != null) -->Line_19 $$ errorText.append(" requested ").append(requestContentLen.getValue())[ CD ]
Line_10 $$ fault = new FileNotFoundException("Operation " + method.getName() + " on " + uri)-->Line_28 $$ fault = new SwiftAuthenticationFailedException("Operation not authorized- current access token =" + getToken(), method.getName(), uri, method)[ FD ]
Line_3 $$ IOException fault-->Line_13 $$ fault = new SwiftBadRequestException("Bad request against " + uri, method.getName(), uri, method)[ FD ]
Line_10 $$ fault = new FileNotFoundException("Operation " + method.getName() + " on " + uri)-->Line_13 $$ fault = new SwiftBadRequestException("Bad request against " + uri, method.getName(), uri, method)[ FD ]
Line_16 $$ StringBuilder errorText = new StringBuilder(method.getStatusText())-->Line_23 $$ errorText.append(" available ").append(availableContentRange.getValue())[ FD ]
Line_4 $$ String errorMessage = String.format("Method %s on %s failed, status code: %d," + " status line: %s", method.getName(), uri, statusCode, method.getStatusLine())-->Line_6 $$ LOG.debug(errorMessage)[ FD ]
Line_13 $$ fault = new SwiftBadRequestException("Bad request against " + uri, method.getName(), uri, method)-->Line_32 $$ fault = new SwiftThrottledRequestException("Client is being throttled: too many requests", method.getName(), uri, method)[ FD ]
Line_2 $$ private <M extends HttpMethod> IOException buildException(URI uri, M method, int statusCode) -->Line_35 $$ fault = new SwiftInvalidResponseException(errorMessage, method.getName(), uri, method)[ FD ]
Line_2 $$ private <M extends HttpMethod> IOException buildException(URI uri, M method, int statusCode) -->Line_3 $$ IOException fault[ CD ]
Line_17 $$ Header requestContentLen = method.getRequestHeader(HEADER_CONTENT_LENGTH)-->Line_22 $$ if (requestContentLen != null) [ FD ]
Line_2 $$ private <M extends HttpMethod> IOException buildException(URI uri, M method, int statusCode) -->Line_5 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_10 $$ fault = new FileNotFoundException("Operation " + method.getName() + " on " + uri)-->Line_25 $$ fault = new EOFException(errorText.toString())[ FD ]
Line_2 $$ private <M extends HttpMethod> IOException buildException(URI uri, M method, int statusCode) -->Line_10 $$ fault = new FileNotFoundException("Operation " + method.getName() + " on " + uri)[ FD ]
Line_3 $$ IOException fault-->Line_28 $$ fault = new SwiftAuthenticationFailedException("Operation not authorized- current access token =" + getToken(), method.getName(), uri, method)[ FD ]
Line_13 $$ fault = new SwiftBadRequestException("Bad request against " + uri, method.getName(), uri, method)-->Line_28 $$ fault = new SwiftAuthenticationFailedException("Operation not authorized- current access token =" + getToken(), method.getName(), uri, method)[ FD ]
Line_13 $$ fault = new SwiftBadRequestException("Bad request against " + uri, method.getName(), uri, method)-->Line_25 $$ fault = new EOFException(errorText.toString())[ FD ]
Line_13 $$ fault = new SwiftBadRequestException("Bad request against " + uri, method.getName(), uri, method)-->Line_35 $$ fault = new SwiftInvalidResponseException(errorMessage, method.getName(), uri, method)[ FD ]
Line_17 $$ Header requestContentLen = method.getRequestHeader(HEADER_CONTENT_LENGTH)-->Line_19 $$ errorText.append(" requested ").append(requestContentLen.getValue())[ FD ]
Line_2 $$ private <M extends HttpMethod> IOException buildException(URI uri, M method, int statusCode) -->Line_4 $$ String errorMessage = String.format("Method %s on %s failed, status code: %d," + " status line: %s", method.getName(), uri, statusCode, method.getStatusLine())[ CD ]
Line_3 $$ IOException fault-->Line_32 $$ fault = new SwiftThrottledRequestException("Client is being throttled: too many requests", method.getName(), uri, method)[ FD ]
Line_2 $$ private <M extends HttpMethod> IOException buildException(URI uri, M method, int statusCode) -->Line_32 $$ fault = new SwiftThrottledRequestException("Client is being throttled: too many requests", method.getName(), uri, method)[ FD ]
Line_16 $$ StringBuilder errorText = new StringBuilder(method.getStatusText())-->Line_25 $$ fault = new EOFException(errorText.toString())[ FD ]
Line_28 $$ fault = new SwiftAuthenticationFailedException("Operation not authorized- current access token =" + getToken(), method.getName(), uri, method)-->Line_35 $$ fault = new SwiftInvalidResponseException(errorMessage, method.getName(), uri, method)[ FD ]
Line_2 $$ private <M extends HttpMethod> IOException buildException(URI uri, M method, int statusCode) -->Line_28 $$ fault = new SwiftAuthenticationFailedException("Operation not authorized- current access token =" + getToken(), method.getName(), uri, method)[ FD ]
