Line_2 $$ void buildExpression(StringBuilder result) -->Line_6 $$ myParent.buildExpression(result)[ FD ]
Line_3 $$ if (myParent == null) -->Line_4 $$ result.append(getTempName())[ CD ]
Line_12 $$ if (("ndarray".equals(myParent.getType()) || "matrix".equals(myParent.getType())) && myName.startsWith("[")) -->Line_15 $$ result.append('.').append(myName)[ CD ]
Line_3 $$ if (myParent == null) -->Line_6 $$ myParent.buildExpression(result)[ CD ]
Line_2 $$ void buildExpression(StringBuilder result) -->Line_4 $$ result.append(getTempName())[ FD ]
Line_2 $$ void buildExpression(StringBuilder result) -->Line_3 $$ if (myParent == null) [ CD ]
Line_3 $$ if (myParent == null) -->Line_7 $$ if (("dict".equals(myParent.getType()) || "list".equals(myParent.getType()) || "tuple".equals(myParent.getType())) && !isLen(myName)) [ CD ]
Line_10 $$ if (isLen(myName)) -->Line_12 $$ if (("ndarray".equals(myParent.getType()) || "matrix".equals(myParent.getType())) && myName.startsWith("[")) [ CD ]
Line_2 $$ void buildExpression(StringBuilder result) -->Line_8 $$ result.append('[').append(removeLeadingZeros(removeId(myName))).append(']')[ FD ]
Line_2 $$ void buildExpression(StringBuilder result) -->Line_15 $$ result.append('.').append(myName)[ FD ]
Line_12 $$ if (("ndarray".equals(myParent.getType()) || "matrix".equals(myParent.getType())) && myName.startsWith("[")) -->Line_13 $$ result.append(removeLeadingZeros(myName))[ CD ]
Line_7 $$ if (("dict".equals(myParent.getType()) || "list".equals(myParent.getType()) || "tuple".equals(myParent.getType())) && !isLen(myName)) -->Line_9 $$ if (("set".equals(myParent.getType())) && !isLen(myName)) [ CD ]
Line_10 $$ if (isLen(myName)) -->Line_11 $$ result.append('.').append(myName).append("()")[ CD ]
Line_2 $$ void buildExpression(StringBuilder result) -->Line_11 $$ result.append('.').append(myName).append("()")[ FD ]
Line_9 $$ if (("set".equals(myParent.getType())) && !isLen(myName)) -->Line_10 $$ if (isLen(myName)) [ CD ]
Line_7 $$ if (("dict".equals(myParent.getType()) || "list".equals(myParent.getType()) || "tuple".equals(myParent.getType())) && !isLen(myName)) -->Line_8 $$ result.append('[').append(removeLeadingZeros(removeId(myName))).append(']')[ CD ]
Line_2 $$ void buildExpression(StringBuilder result) -->Line_13 $$ result.append(removeLeadingZeros(myName))[ FD ]
