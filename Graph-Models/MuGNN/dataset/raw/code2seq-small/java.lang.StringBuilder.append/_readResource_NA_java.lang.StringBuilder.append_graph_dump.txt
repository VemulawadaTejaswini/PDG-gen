Line_2 $$ private static String _readResource(String path) throws Exception -->Line_4 $$ ClassLoader classLoader = SummaryLoggerHandler.class.getClassLoader()[ CD ]
Line_9 $$ while ((line = bufferedReader.readLine()) != null) -->Line_10 $$ sb.append(line)[ FD ]
Line_2 $$ private static String _readResource(String path) throws Exception -->Line_7 $$ BufferedReader bufferedReader = new BufferedReader(inputStreamReader)[ CD ]
Line_2 $$ private static String _readResource(String path) throws Exception -->Line_9 $$ while ((line = bufferedReader.readLine()) != null) [ CD ]
Line_2 $$ private static String _readResource(String path) throws Exception -->Line_6 $$ InputStreamReader inputStreamReader = new InputStreamReader(inputStream)[ CD ]
Line_7 $$ BufferedReader bufferedReader = new BufferedReader(inputStreamReader)-->Line_9 $$ while ((line = bufferedReader.readLine()) != null) [ FD ]
Line_9 $$ while ((line = bufferedReader.readLine()) != null) -->Line_11 $$ sb.append("\n")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_11 $$ sb.append("\n")[ FD ]
Line_2 $$ private static String _readResource(String path) throws Exception -->Line_8 $$ String line = null[ CD ]
Line_7 $$ BufferedReader bufferedReader = new BufferedReader(inputStreamReader)-->Line_13 $$ bufferedReader.close()[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_14 $$ return sb.toString()[ FD ]
Line_2 $$ private static String _readResource(String path) throws Exception -->Line_13 $$ bufferedReader.close()[ CD ]
Line_8 $$ String line = null-->Line_9 $$ while ((line = bufferedReader.readLine()) != null) [ FD ]
Line_9 $$ while ((line = bufferedReader.readLine()) != null) -->Line_10 $$ sb.append(line)[ CD ]
Line_8 $$ String line = null-->Line_10 $$ sb.append(line)[ FD ]
Line_2 $$ private static String _readResource(String path) throws Exception -->Line_5 $$ InputStream inputStream = classLoader.getResourceAsStream(path)[ FD ]
Line_2 $$ private static String _readResource(String path) throws Exception -->Line_5 $$ InputStream inputStream = classLoader.getResourceAsStream(path)[ CD ]
Line_2 $$ private static String _readResource(String path) throws Exception -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ private static String _readResource(String path) throws Exception -->Line_14 $$ return sb.toString()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_10 $$ sb.append(line)[ FD ]
Line_4 $$ ClassLoader classLoader = SummaryLoggerHandler.class.getClassLoader()-->Line_5 $$ InputStream inputStream = classLoader.getResourceAsStream(path)[ FD ]
