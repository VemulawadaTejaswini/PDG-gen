Line_10 $$ JEditorPane messagePane = new JEditorPane(UIUtil.HTML_MIME, buf.toString())-->Line_11 $$ messagePane.setEditable(false)[ FD ]
Line_5 $$ StringBuilder buf = new StringBuilder()-->Line_7 $$ buf.append(description)[ FD ]
Line_12 $$ JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(messagePane, ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED)-->Line_14 $$ panel.add(scrollPane, BorderLayout.CENTER)[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_12 $$ JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(messagePane, ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED)[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_18 $$ return panel[ CD ]
Line_3 $$ JPanel panel = new JPanel(new BorderLayout(0, 2))-->Line_4 $$ panel.add(new JLabel(RefactoringBundle.message("the.following.problems.were.found")), BorderLayout.NORTH)[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_5 $$ StringBuilder buf = new StringBuilder()[ CD ]
Line_5 $$ StringBuilder buf = new StringBuilder()-->Line_10 $$ JEditorPane messagePane = new JEditorPane(UIUtil.HTML_MIME, buf.toString())[ FD ]
Line_15 $$ if (getOKAction().isEnabled()) -->Line_16 $$ panel.add(new JLabel(RefactoringBundle.message("do.you.wish.to.ignore.them.and.continue")), BorderLayout.SOUTH)[ CD ]
Line_10 $$ JEditorPane messagePane = new JEditorPane(UIUtil.HTML_MIME, buf.toString())-->Line_12 $$ JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(messagePane, ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED)[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_3 $$ JPanel panel = new JPanel(new BorderLayout(0, 2))[ CD ]
Line_12 $$ JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(messagePane, ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED)-->Line_13 $$ scrollPane.setPreferredSize(JBUI.size(500, 400))[ FD ]
Line_3 $$ JPanel panel = new JPanel(new BorderLayout(0, 2))-->Line_14 $$ panel.add(scrollPane, BorderLayout.CENTER)[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_13 $$ scrollPane.setPreferredSize(JBUI.size(500, 400))[ CD ]
Line_6 $$ for (String description : myConflictDescriptions) -->Line_7 $$ buf.append(description)[ FD ]
Line_5 $$ StringBuilder buf = new StringBuilder()-->Line_8 $$ buf.append("<br><br>")[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_14 $$ panel.add(scrollPane, BorderLayout.CENTER)[ CD ]
Line_3 $$ JPanel panel = new JPanel(new BorderLayout(0, 2))-->Line_16 $$ panel.add(new JLabel(RefactoringBundle.message("do.you.wish.to.ignore.them.and.continue")), BorderLayout.SOUTH)[ FD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_10 $$ JEditorPane messagePane = new JEditorPane(UIUtil.HTML_MIME, buf.toString())[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_11 $$ messagePane.setEditable(false)[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_4 $$ panel.add(new JLabel(RefactoringBundle.message("the.following.problems.were.found")), BorderLayout.NORTH)[ CD ]
Line_2 $$ protected JComponent createCenterPanel() -->Line_15 $$ if (getOKAction().isEnabled()) [ CD ]
