Line_2 $$ public void testSOEForTypeOfHugeBinaryExpression() throws IOException -->Line_17 $$ final PsiType type = expression.getType()[ CD ]
Line_2 $$ public void testSOEForTypeOfHugeBinaryExpression() throws IOException -->Line_9 $$ final int pos = getEditor().getDocument().getText().indexOf("\"\"")[ CD ]
Line_15 $$ final PsiExpression expression = field.getInitializer()-->Line_17 $$ final PsiType type = expression.getType()[ FD ]
Line_17 $$ final PsiType type = expression.getType()-->Line_19 $$ assertEquals("PsiType:String", type.toString())[ FD ]
Line_2 $$ public void testSOEForTypeOfHugeBinaryExpression() throws IOException -->Line_7 $$ for (int i = 0; i < 10000; i++) sb.append("+\"b\"")[ CD ]
Line_9 $$ final int pos = getEditor().getDocument().getText().indexOf("\"\"")-->Line_11 $$ getEditor().getDocument().replaceString(pos, pos + 2, hugeExpr)[ FD ]
Line_2 $$ public void testSOEForTypeOfHugeBinaryExpression() throws IOException -->Line_15 $$ final PsiExpression expression = field.getInitializer()[ CD ]
Line_2 $$ public void testSOEForTypeOfHugeBinaryExpression() throws IOException -->Line_19 $$ assertEquals("PsiType:String", type.toString())[ CD ]
Line_2 $$ public void testSOEForTypeOfHugeBinaryExpression() throws IOException -->Line_14 $$ final PsiField field = ((PsiJavaFile) getFile()).getClasses()[0].getFields()[0][ CD ]
Line_6 $$ final StringBuilder sb = new StringBuilder("\"-\"")-->Line_7 $$ sb.append("+\"b\"")[ FD ]
Line_8 $$ final String hugeExpr = sb.toString()-->Line_11 $$ getEditor().getDocument().replaceString(pos, pos + 2, hugeExpr)[ FD ]
Line_14 $$ final PsiField field = ((PsiJavaFile) getFile()).getClasses()[0].getFields()[0]-->Line_15 $$ final PsiExpression expression = field.getInitializer()[ FD ]
Line_2 $$ public void testSOEForTypeOfHugeBinaryExpression() throws IOException -->Line_4 $$ assertEmpty(highlightErrors())[ CD ]
Line_2 $$ public void testSOEForTypeOfHugeBinaryExpression() throws IOException -->Line_6 $$ final StringBuilder sb = new StringBuilder("\"-\"")[ CD ]
Line_2 $$ public void testSOEForTypeOfHugeBinaryExpression() throws IOException -->Line_5 $$ PsiDocumentManager.getInstance(getProject()).commitAllDocuments()[ CD ]
Line_2 $$ public void testSOEForTypeOfHugeBinaryExpression() throws IOException -->Line_10 $$ ApplicationManager.getApplication().runWriteAction(() -> [ CD ]
Line_2 $$ public void testSOEForTypeOfHugeBinaryExpression() throws IOException -->Line_3 $$ configureFromFileText("a.java", "class A [ CD ]
Line_2 $$ public void testSOEForTypeOfHugeBinaryExpression() throws IOException -->Line_8 $$ final String hugeExpr = sb.toString()[ CD ]
Line_6 $$ final StringBuilder sb = new StringBuilder("\"-\"")-->Line_8 $$ final String hugeExpr = sb.toString()[ FD ]
