Line_2 $$ List<String> getLogArgs() -->Line_5 $$ Date beforeDate = myBrowserSettings.getDateBefore()[ CD ]
Line_11 $$ if (afterFilter != null) -->Line_13 $$ if (beforeFilter != null) [ CD ]
Line_28 $$ if (args.length() > 0) -->Line_29 $$ List<String> logArgs = new ArrayList<String>()[ CD ]
Line_4 $$ Date afterDate = myBrowserSettings.getDateAfter()-->Line_20 $$ args.append("date('>").append(dateFormatter.format(afterDate)).append("')")[ FD ]
Line_29 $$ List<String> logArgs = new ArrayList<String>()-->Line_30 $$ logArgs.add("-r")[ FD ]
Line_3 $$ StringBuilder args = new StringBuilder()-->Line_28 $$ if (args.length() > 0) [ FD ]
Line_2 $$ List<String> getLogArgs() -->Line_4 $$ Date afterDate = myBrowserSettings.getDateAfter()[ CD ]
Line_2 $$ List<String> getLogArgs() -->Line_7 $$ Long beforeFilter = myBrowserSettings.getChangeBeforeFilter()[ CD ]
Line_13 $$ if (beforeFilter != null) -->Line_14 $$ args.append("reverse(:").append(beforeFilter).append(")")[ CD ]
Line_3 $$ StringBuilder args = new StringBuilder()-->Line_26 $$ args.append("date('<").append(dateFormatter.format(beforeDate)).append("')")[ FD ]
Line_23 $$ if (args.length() > 0) -->Line_24 $$ args.append(" and ")[ CD ]
Line_28 $$ if (args.length() > 0) -->Line_30 $$ logArgs.add("-r")[ CD ]
Line_2 $$ List<String> getLogArgs() -->Line_34 $$ return Collections.emptyList()[ CD ]
Line_6 $$ Long afterFilter = myBrowserSettings.getChangeAfterFilter()-->Line_12 $$ args.append("tip:").append(afterFilter)[ FD ]
Line_3 $$ StringBuilder args = new StringBuilder()-->Line_18 $$ args.append(" and ")[ FD ]
Line_3 $$ StringBuilder args = new StringBuilder()-->Line_24 $$ args.append(" and ")[ FD ]
Line_4 $$ Date afterDate = myBrowserSettings.getDateAfter()-->Line_16 $$ if (afterDate != null) [ FD ]
Line_3 $$ StringBuilder args = new StringBuilder()-->Line_31 $$ logArgs.add(args.toString())[ FD ]
Line_5 $$ Date beforeDate = myBrowserSettings.getDateBefore()-->Line_22 $$ if (beforeDate != null) [ FD ]
Line_9 $$ if ((afterFilter != null) && (beforeFilter != null)) -->Line_10 $$ args.append(afterFilter).append(":").append(beforeFilter)[ CD ]
Line_16 $$ if (afterDate != null) -->Line_20 $$ args.append("date('>").append(dateFormatter.format(afterDate)).append("')")[ CD ]
Line_2 $$ List<String> getLogArgs() -->Line_6 $$ Long afterFilter = myBrowserSettings.getChangeAfterFilter()[ CD ]
Line_7 $$ Long beforeFilter = myBrowserSettings.getChangeBeforeFilter()-->Line_10 $$ args.append(afterFilter).append(":").append(beforeFilter)[ FD ]
Line_2 $$ List<String> getLogArgs() -->Line_28 $$ if (args.length() > 0) [ CD ]
Line_7 $$ Long beforeFilter = myBrowserSettings.getChangeBeforeFilter()-->Line_14 $$ args.append("reverse(:").append(beforeFilter).append(")")[ FD ]
Line_2 $$ List<String> getLogArgs() -->Line_22 $$ if (beforeDate != null) [ CD ]
Line_3 $$ StringBuilder args = new StringBuilder()-->Line_12 $$ args.append("tip:").append(afterFilter)[ FD ]
Line_17 $$ if (args.length() > 0) -->Line_18 $$ args.append(" and ")[ CD ]
Line_11 $$ if (afterFilter != null) -->Line_12 $$ args.append("tip:").append(afterFilter)[ CD ]
Line_22 $$ if (beforeDate != null) -->Line_23 $$ if (args.length() > 0) [ CD ]
Line_2 $$ List<String> getLogArgs() -->Line_9 $$ if ((afterFilter != null) && (beforeFilter != null)) [ CD ]
Line_2 $$ List<String> getLogArgs() -->Line_8 $$ final SimpleDateFormat dateFormatter = new SimpleDateFormat("yyyy-MM-dd HH:mm")[ CD ]
Line_3 $$ StringBuilder args = new StringBuilder()-->Line_23 $$ if (args.length() > 0) [ FD ]
Line_8 $$ final SimpleDateFormat dateFormatter = new SimpleDateFormat("yyyy-MM-dd HH:mm")-->Line_26 $$ args.append("date('<").append(dateFormatter.format(beforeDate)).append("')")[ FD ]
Line_7 $$ Long beforeFilter = myBrowserSettings.getChangeBeforeFilter()-->Line_13 $$ if (beforeFilter != null) [ FD ]
Line_3 $$ StringBuilder args = new StringBuilder()-->Line_17 $$ if (args.length() > 0) [ FD ]
Line_5 $$ Date beforeDate = myBrowserSettings.getDateBefore()-->Line_26 $$ args.append("date('<").append(dateFormatter.format(beforeDate)).append("')")[ FD ]
Line_2 $$ List<String> getLogArgs() -->Line_16 $$ if (afterDate != null) [ CD ]
Line_6 $$ Long afterFilter = myBrowserSettings.getChangeAfterFilter()-->Line_10 $$ args.append(afterFilter).append(":").append(beforeFilter)[ FD ]
Line_16 $$ if (afterDate != null) -->Line_17 $$ if (args.length() > 0) [ CD ]
Line_9 $$ if ((afterFilter != null) && (beforeFilter != null)) -->Line_11 $$ if (afterFilter != null) [ CD ]
Line_28 $$ if (args.length() > 0) -->Line_31 $$ logArgs.add(args.toString())[ CD ]
Line_8 $$ final SimpleDateFormat dateFormatter = new SimpleDateFormat("yyyy-MM-dd HH:mm")-->Line_20 $$ args.append("date('>").append(dateFormatter.format(afterDate)).append("')")[ FD ]
Line_28 $$ if (args.length() > 0) -->Line_32 $$ return logArgs[ CD ]
Line_2 $$ List<String> getLogArgs() -->Line_3 $$ StringBuilder args = new StringBuilder()[ CD ]
Line_3 $$ StringBuilder args = new StringBuilder()-->Line_20 $$ args.append("date('>").append(dateFormatter.format(afterDate)).append("')")[ FD ]
Line_6 $$ Long afterFilter = myBrowserSettings.getChangeAfterFilter()-->Line_11 $$ if (afterFilter != null) [ FD ]
Line_3 $$ StringBuilder args = new StringBuilder()-->Line_14 $$ args.append("reverse(:").append(beforeFilter).append(")")[ FD ]
Line_29 $$ List<String> logArgs = new ArrayList<String>()-->Line_31 $$ logArgs.add(args.toString())[ FD ]
Line_22 $$ if (beforeDate != null) -->Line_26 $$ args.append("date('<").append(dateFormatter.format(beforeDate)).append("')")[ CD ]
Line_3 $$ StringBuilder args = new StringBuilder()-->Line_10 $$ args.append(afterFilter).append(":").append(beforeFilter)[ FD ]
