Line_14 $$ for (ZenPing.PingResponse pingResponse : fullPingResponses) -->Line_45 $$ pingMasters.add(pingResponse.master())[ FD ]
Line_9 $$ if (logger.isTraceEnabled()) -->Line_11 $$ if (fullPingResponses.length == 0) [ CD ]
Line_2 $$ private DiscoveryNode findMaster() -->Line_41 $$ List<DiscoveryNode> pingMasters = new ArrayList()[ CD ]
Line_40 $$ final DiscoveryNode localNode = clusterService.localNode()-->Line_44 $$ if (!localNode.equals(pingResponse.master())) [ FD ]
Line_24 $$ if (masterElectionFilterDataNodes && (!node.masterNode() && node.dataNode())) -->Line_26 $$ pingResponses.add(pingResponse)[ CD ]
Line_14 $$ for (ZenPing.PingResponse pingResponse : fullPingResponses) -->Line_62 $$ joinedOnceActiveNodes.add(pingResponse.node())[ FD ]
Line_40 $$ final DiscoveryNode localNode = clusterService.localNode()-->Line_51 $$ if (localNode.masterNode()) [ FD ]
Line_10 $$ StringBuilder sb = new StringBuilder("full ping responses:")-->Line_18 $$ logger.trace(sb.toString())[ FD ]
Line_2 $$ private DiscoveryNode findMaster() -->Line_9 $$ if (logger.isTraceEnabled()) [ CD ]
Line_23 $$ if (masterElectionFilterClientNodes && (node.clientNode() || (!node.masterNode() && !node.dataNode()))) -->Line_24 $$ if (masterElectionFilterDataNodes && (!node.masterNode() && node.dataNode())) [ CD ]
Line_50 $$ Set<DiscoveryNode> joinedOnceActiveNodes = new HashSet()-->Line_56 $$ joinedOnceActiveNodes.add(localNode)[ FD ]
Line_66 $$ if (electMaster.hasEnoughMasterNodes(activeNodes)) -->Line_68 $$ if (master != null) [ CD ]
Line_14 $$ for (ZenPing.PingResponse pingResponse : fullPingResponses) -->Line_44 $$ if (!localNode.equals(pingResponse.master())) [ FD ]
Line_11 $$ if (fullPingResponses.length == 0) -->Line_12 $$ sb.append(" [ CD ]
Line_9 $$ if (logger.isTraceEnabled()) -->Line_18 $$ logger.trace(sb.toString())[ CD ]
Line_2 $$ private DiscoveryNode findMaster() -->Line_5 $$ if (fullPingResponses == null) [ CD ]
Line_51 $$ if (localNode.masterNode()) -->Line_54 $$ if (joinsCounter > 0) [ CD ]
Line_9 $$ if (logger.isTraceEnabled()) -->Line_10 $$ StringBuilder sb = new StringBuilder("full ping responses:")[ CD ]
Line_14 $$ for (ZenPing.PingResponse pingResponse : fullPingResponses) -->Line_61 $$ if (pingResponse.hasJoinedOnce()) [ FD ]
Line_4 $$ ZenPing.PingResponse[] fullPingResponses = pingService.pingAndWait(pingTimeout)-->Line_5 $$ if (fullPingResponses == null) [ FD ]
Line_40 $$ final DiscoveryNode localNode = clusterService.localNode()-->Line_52 $$ activeNodes.add(localNode)[ FD ]
Line_41 $$ List<DiscoveryNode> pingMasters = new ArrayList()-->Line_45 $$ pingMasters.add(pingResponse.master())[ FD ]
Line_41 $$ List<DiscoveryNode> pingMasters = new ArrayList()-->Line_77 $$ assert !pingMasters.contains(localNode) : "local node should never be elected as master when other nodes indicate an active master"[ FD ]
Line_53 $$ long joinsCounter = clusterJoinsCounter.get()-->Line_54 $$ if (joinsCounter > 0) [ FD ]
Line_31 $$ if (pingResponses.isEmpty()) -->Line_32 $$ sb.append(" [ CD ]
Line_65 $$ if (pingMasters.isEmpty()) -->Line_78 $$ return electMaster.electMaster(pingMasters)[ CD ]
Line_40 $$ final DiscoveryNode localNode = clusterService.localNode()-->Line_56 $$ joinedOnceActiveNodes.add(localNode)[ FD ]
Line_65 $$ if (pingMasters.isEmpty()) -->Line_66 $$ if (electMaster.hasEnoughMasterNodes(activeNodes)) [ CD ]
Line_10 $$ StringBuilder sb = new StringBuilder("full ping responses:")-->Line_38 $$ logger.debug(sb.toString())[ FD ]
Line_20 $$ List<ZenPing.PingResponse> pingResponses = new ArrayList()-->Line_26 $$ pingResponses.add(pingResponse)[ FD ]
Line_5 $$ if (fullPingResponses == null) -->Line_7 $$ return null[ CD ]
Line_2 $$ private DiscoveryNode findMaster() -->Line_3 $$ logger.trace("starting to ping")[ CD ]
Line_2 $$ private DiscoveryNode findMaster() -->Line_50 $$ Set<DiscoveryNode> joinedOnceActiveNodes = new HashSet()[ CD ]
Line_14 $$ for (ZenPing.PingResponse pingResponse : fullPingResponses) -->Line_22 $$ DiscoveryNode node = pingResponse.node()[ FD ]
Line_66 $$ if (electMaster.hasEnoughMasterNodes(activeNodes)) -->Line_67 $$ DiscoveryNode master = electMaster.electMaster(joinedOnceActiveNodes)[ CD ]
Line_49 $$ Set<DiscoveryNode> activeNodes = new HashSet()-->Line_73 $$ logger.trace("not enough master nodes [[ FD ]
Line_68 $$ if (master != null) -->Line_69 $$ return master[ CD ]
Line_5 $$ if (fullPingResponses == null) -->Line_6 $$ logger.trace("No full ping responses")[ CD ]
Line_14 $$ for (ZenPing.PingResponse pingResponse : fullPingResponses) -->Line_43 $$ if (pingResponse.master() != null) [ FD ]
Line_2 $$ private DiscoveryNode findMaster() -->Line_49 $$ Set<DiscoveryNode> activeNodes = new HashSet()[ CD ]
Line_51 $$ if (localNode.masterNode()) -->Line_52 $$ activeNodes.add(localNode)[ CD ]
Line_50 $$ Set<DiscoveryNode> joinedOnceActiveNodes = new HashSet()-->Line_62 $$ joinedOnceActiveNodes.add(pingResponse.node())[ FD ]
Line_2 $$ private DiscoveryNode findMaster() -->Line_40 $$ final DiscoveryNode localNode = clusterService.localNode()[ CD ]
Line_41 $$ List<DiscoveryNode> pingMasters = new ArrayList()-->Line_65 $$ if (pingMasters.isEmpty()) [ FD ]
Line_2 $$ private DiscoveryNode findMaster() -->Line_51 $$ if (localNode.masterNode()) [ CD ]
Line_66 $$ if (electMaster.hasEnoughMasterNodes(activeNodes)) -->Line_74 $$ return null[ CD ]
Line_29 $$ if (logger.isDebugEnabled()) -->Line_38 $$ logger.debug(sb.toString())[ CD ]
Line_50 $$ Set<DiscoveryNode> joinedOnceActiveNodes = new HashSet()-->Line_67 $$ DiscoveryNode master = electMaster.electMaster(joinedOnceActiveNodes)[ FD ]
Line_20 $$ List<ZenPing.PingResponse> pingResponses = new ArrayList()-->Line_31 $$ if (pingResponses.isEmpty()) [ FD ]
Line_14 $$ for (ZenPing.PingResponse pingResponse : fullPingResponses) -->Line_60 $$ activeNodes.add(pingResponse.node())[ FD ]
Line_49 $$ Set<DiscoveryNode> activeNodes = new HashSet()-->Line_66 $$ if (electMaster.hasEnoughMasterNodes(activeNodes)) [ FD ]
Line_49 $$ Set<DiscoveryNode> activeNodes = new HashSet()-->Line_60 $$ activeNodes.add(pingResponse.node())[ FD ]
Line_61 $$ if (pingResponse.hasJoinedOnce()) -->Line_62 $$ joinedOnceActiveNodes.add(pingResponse.node())[ CD ]
Line_22 $$ DiscoveryNode node = pingResponse.node()-->Line_24 $$ if (masterElectionFilterDataNodes && (!node.masterNode() && node.dataNode())) [ FD ]
Line_14 $$ for (ZenPing.PingResponse pingResponse : fullPingResponses) -->Line_26 $$ pingResponses.add(pingResponse)[ FD ]
Line_67 $$ DiscoveryNode master = electMaster.electMaster(joinedOnceActiveNodes)-->Line_68 $$ if (master != null) [ FD ]
Line_66 $$ if (electMaster.hasEnoughMasterNodes(activeNodes)) -->Line_71 $$ return electMaster.electMaster(activeNodes)[ CD ]
Line_40 $$ final DiscoveryNode localNode = clusterService.localNode()-->Line_77 $$ assert !pingMasters.contains(localNode) : "local node should never be elected as master when other nodes indicate an active master"[ FD ]
Line_43 $$ if (pingResponse.master() != null) -->Line_44 $$ if (!localNode.equals(pingResponse.master())) [ CD ]
Line_51 $$ if (localNode.masterNode()) -->Line_53 $$ long joinsCounter = clusterJoinsCounter.get()[ CD ]
Line_2 $$ private DiscoveryNode findMaster() -->Line_4 $$ ZenPing.PingResponse[] fullPingResponses = pingService.pingAndWait(pingTimeout)[ CD ]
Line_54 $$ if (joinsCounter > 0) -->Line_56 $$ joinedOnceActiveNodes.add(localNode)[ CD ]
Line_10 $$ StringBuilder sb = new StringBuilder("full ping responses:")-->Line_12 $$ sb.append(" [ FD ]
Line_29 $$ if (logger.isDebugEnabled()) -->Line_30 $$ StringBuilder sb = new StringBuilder("filtered ping responses: (filter_client[").append(masterElectionFilterClientNodes).append("], filter_data[").append(masterElectionFilterDataNodes).append("])")[ CD ]
Line_53 $$ long joinsCounter = clusterJoinsCounter.get()-->Line_55 $$ logger.trace("adding local node to the list of active nodes who has previously joined the cluster (joins counter is [[ FD ]
Line_2 $$ private DiscoveryNode findMaster() -->Line_20 $$ List<ZenPing.PingResponse> pingResponses = new ArrayList()[ CD ]
Line_49 $$ Set<DiscoveryNode> activeNodes = new HashSet()-->Line_71 $$ return electMaster.electMaster(activeNodes)[ FD ]
Line_2 $$ private DiscoveryNode findMaster() -->Line_65 $$ if (pingMasters.isEmpty()) [ CD ]
Line_54 $$ if (joinsCounter > 0) -->Line_55 $$ logger.trace("adding local node to the list of active nodes who has previously joined the cluster (joins counter is [[ CD ]
Line_44 $$ if (!localNode.equals(pingResponse.master())) -->Line_45 $$ pingMasters.add(pingResponse.master())[ CD ]
Line_10 $$ StringBuilder sb = new StringBuilder("full ping responses:")-->Line_32 $$ sb.append(" [ FD ]
Line_2 $$ private DiscoveryNode findMaster() -->Line_29 $$ if (logger.isDebugEnabled()) [ CD ]
Line_41 $$ List<DiscoveryNode> pingMasters = new ArrayList()-->Line_78 $$ return electMaster.electMaster(pingMasters)[ FD ]
Line_49 $$ Set<DiscoveryNode> activeNodes = new HashSet()-->Line_52 $$ activeNodes.add(localNode)[ FD ]
Line_66 $$ if (electMaster.hasEnoughMasterNodes(activeNodes)) -->Line_73 $$ logger.trace("not enough master nodes [[ CD ]
Line_22 $$ DiscoveryNode node = pingResponse.node()-->Line_23 $$ if (masterElectionFilterClientNodes && (node.clientNode() || (!node.masterNode() && !node.dataNode()))) [ FD ]
Line_29 $$ if (logger.isDebugEnabled()) -->Line_31 $$ if (pingResponses.isEmpty()) [ CD ]
