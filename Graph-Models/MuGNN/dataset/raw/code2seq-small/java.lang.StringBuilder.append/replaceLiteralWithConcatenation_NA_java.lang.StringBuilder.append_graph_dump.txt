Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_13 $$ buffer.append('+').append(suffix)[ FD ]
Line_7 $$ if (prefixExists) -->Line_8 $$ buffer.append(prefix).append('+')[ CD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_31 $$ throw new IncorrectOperationException(buffer.toString())[ FD ]
Line_2 $$ public GrExpression replaceLiteralWithConcatenation(@Nullable String varName) -->Line_12 $$ if (suffixExists) [ CD ]
Line_21 $$ if (!prefixExists && suffixExists) -->Line_22 $$ return ((GrBinaryExpression) replaced).getLeftOperand()[ CD ]
Line_27 $$ if (!prefixExists && !suffixExists) -->Line_28 $$ return replaced[ CD ]
Line_6 $$ boolean prefixExists = !GrStringUtil.removeQuotes(prefix).isEmpty()-->Line_27 $$ if (!prefixExists && !suffixExists) [ FD ]
Line_3 $$ String prefix = preparePrefix()-->Line_6 $$ boolean prefixExists = !GrStringUtil.removeQuotes(prefix).isEmpty()[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_8 $$ buffer.append(prefix).append('+')[ FD ]
Line_11 $$ boolean suffixExists = !GrStringUtil.removeQuotes(suffix).isEmpty()-->Line_27 $$ if (!prefixExists && !suffixExists) [ FD ]
Line_2 $$ public GrExpression replaceLiteralWithConcatenation(@Nullable String varName) -->Line_16 $$ final GrExpression replaced = getLiteral().replaceWithExpression(concatenation, false)[ CD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_33 $$ throw new IncorrectOperationException(buffer.toString())[ FD ]
Line_4 $$ String suffix = prepareSuffix()-->Line_13 $$ buffer.append('+').append(suffix)[ FD ]
Line_6 $$ boolean prefixExists = !GrStringUtil.removeQuotes(prefix).isEmpty()-->Line_24 $$ if (prefixExists && !suffixExists) [ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_10 $$ buffer.append(varName != null ? varName : prepareSelected())[ FD ]
Line_2 $$ public GrExpression replaceLiteralWithConcatenation(@Nullable String varName) -->Line_4 $$ String suffix = prepareSuffix()[ CD ]
Line_15 $$ final GrExpression concatenation = GroovyPsiElementFactory.getInstance(myLiteral.getProject()).createExpressionFromText(buffer)-->Line_16 $$ final GrExpression replaced = getLiteral().replaceWithExpression(concatenation, false)[ FD ]
Line_3 $$ String prefix = preparePrefix()-->Line_8 $$ buffer.append(prefix).append('+')[ FD ]
Line_2 $$ public GrExpression replaceLiteralWithConcatenation(@Nullable String varName) -->Line_11 $$ boolean suffixExists = !GrStringUtil.removeQuotes(suffix).isEmpty()[ CD ]
Line_2 $$ public GrExpression replaceLiteralWithConcatenation(@Nullable String varName) -->Line_15 $$ final GrExpression concatenation = GroovyPsiElementFactory.getInstance(myLiteral.getProject()).createExpressionFromText(buffer)[ CD ]
Line_12 $$ if (suffixExists) -->Line_13 $$ buffer.append('+').append(suffix)[ CD ]
Line_4 $$ String suffix = prepareSuffix()-->Line_11 $$ boolean suffixExists = !GrStringUtil.removeQuotes(suffix).isEmpty()[ FD ]
Line_2 $$ public GrExpression replaceLiteralWithConcatenation(@Nullable String varName) -->Line_3 $$ String prefix = preparePrefix()[ CD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_15 $$ final GrExpression concatenation = GroovyPsiElementFactory.getInstance(myLiteral.getProject()).createExpressionFromText(buffer)[ FD ]
Line_2 $$ public GrExpression replaceLiteralWithConcatenation(@Nullable String varName) -->Line_7 $$ if (prefixExists) [ CD ]
Line_18 $$ if (prefixExists && suffixExists) -->Line_19 $$ return ((GrBinaryExpression) ((GrBinaryExpression) replaced).getLeftOperand()).getRightOperand()[ CD ]
Line_11 $$ boolean suffixExists = !GrStringUtil.removeQuotes(suffix).isEmpty()-->Line_21 $$ if (!prefixExists && suffixExists) [ FD ]
Line_11 $$ boolean suffixExists = !GrStringUtil.removeQuotes(suffix).isEmpty()-->Line_24 $$ if (prefixExists && !suffixExists) [ FD ]
Line_2 $$ public GrExpression replaceLiteralWithConcatenation(@Nullable String varName) -->Line_6 $$ boolean prefixExists = !GrStringUtil.removeQuotes(prefix).isEmpty()[ CD ]
Line_11 $$ boolean suffixExists = !GrStringUtil.removeQuotes(suffix).isEmpty()-->Line_18 $$ if (prefixExists && suffixExists) [ FD ]
Line_24 $$ if (prefixExists && !suffixExists) -->Line_25 $$ return ((GrBinaryExpression) replaced).getRightOperand()[ CD ]
Line_6 $$ boolean prefixExists = !GrStringUtil.removeQuotes(prefix).isEmpty()-->Line_18 $$ if (prefixExists && suffixExists) [ FD ]
Line_2 $$ public GrExpression replaceLiteralWithConcatenation(@Nullable String varName) -->Line_10 $$ buffer.append(varName != null ? varName : prepareSelected())[ CD ]
Line_2 $$ public GrExpression replaceLiteralWithConcatenation(@Nullable String varName) -->Line_5 $$ StringBuilder buffer = new StringBuilder()[ CD ]
Line_6 $$ boolean prefixExists = !GrStringUtil.removeQuotes(prefix).isEmpty()-->Line_21 $$ if (!prefixExists && suffixExists) [ FD ]
