Line_2 $$ private void writeMainScriptMethodBody(StringBuilder builder, PsiMethod method) -->Line_3 $$ final PsiClass containingClass = method.getContainingClass()[ FD ]
Line_2 $$ private void writeMainScriptMethodBody(StringBuilder builder, PsiMethod method) -->Line_4 $$ LOG.assertTrue(containingClass instanceof GroovyScriptClass)[ CD ]
Line_2 $$ private void writeMainScriptMethodBody(StringBuilder builder, PsiMethod method) -->Line_6 $$ LOG.assertTrue(parameters.length == 1)[ CD ]
Line_3 $$ final PsiClass containingClass = method.getContainingClass()-->Line_7 $$ builder.append("[ FD ]
Line_2 $$ private void writeMainScriptMethodBody(StringBuilder builder, PsiMethod method) -->Line_5 $$ final PsiParameter[] parameters = method.getParameterList().getParameters()[ FD ]
Line_2 $$ private void writeMainScriptMethodBody(StringBuilder builder, PsiMethod method) -->Line_5 $$ final PsiParameter[] parameters = method.getParameterList().getParameters()[ CD ]
Line_2 $$ private void writeMainScriptMethodBody(StringBuilder builder, PsiMethod method) -->Line_7 $$ builder.append("[ FD ]
Line_2 $$ private void writeMainScriptMethodBody(StringBuilder builder, PsiMethod method) -->Line_3 $$ final PsiClass containingClass = method.getContainingClass()[ CD ]
Line_2 $$ private void writeMainScriptMethodBody(StringBuilder builder, PsiMethod method) -->Line_7 $$ builder.append("[ CD ]
