Line_2 $$ private static String contractElement(int arity, InOut inOut, Value value) -->Line_16 $$ return sb.toString()[ CD ]
Line_4 $$ for (int i = 0; i < arity; i++) -->Line_6 $$ if (i == inOut.paramIndex) [ FD ]
Line_4 $$ for (int i = 0; i < arity; i++) -->Line_9 $$ if (i > 0) [ CD ]
Line_2 $$ private static String contractElement(int arity, InOut inOut, Value value) -->Line_15 $$ sb.append(contractValueString(value))[ FD ]
Line_5 $$ Value currentValue = Value.Top-->Line_7 $$ currentValue = inOut.inValue[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_12 $$ sb.append(contractValueString(currentValue))[ FD ]
Line_2 $$ private static String contractElement(int arity, InOut inOut, Value value) -->Line_15 $$ sb.append(contractValueString(value))[ CD ]
Line_2 $$ private static String contractElement(int arity, InOut inOut, Value value) -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_16 $$ return sb.toString()[ FD ]
Line_7 $$ currentValue = inOut.inValue-->Line_12 $$ sb.append(contractValueString(currentValue))[ FD ]
Line_4 $$ for (int i = 0; i < arity; i++) -->Line_6 $$ if (i == inOut.paramIndex) [ CD ]
Line_2 $$ private static String contractElement(int arity, InOut inOut, Value value) -->Line_4 $$ for (int i = 0; i < arity; i++) [ FD ]
Line_2 $$ private static String contractElement(int arity, InOut inOut, Value value) -->Line_4 $$ for (int i = 0; i < arity; i++) [ CD ]
Line_4 $$ for (int i = 0; i < arity; i++) -->Line_5 $$ Value currentValue = Value.Top[ CD ]
Line_9 $$ if (i > 0) -->Line_10 $$ sb.append(',')[ CD ]
Line_5 $$ Value currentValue = Value.Top-->Line_12 $$ sb.append(contractValueString(currentValue))[ FD ]
Line_6 $$ if (i == inOut.paramIndex) -->Line_7 $$ currentValue = inOut.inValue[ CD ]
Line_4 $$ for (int i = 0; i < arity; i++) -->Line_9 $$ if (i > 0) [ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_10 $$ sb.append(',')[ FD ]
Line_4 $$ for (int i = 0; i < arity; i++) -->Line_12 $$ sb.append(contractValueString(currentValue))[ CD ]
Line_2 $$ private static String contractElement(int arity, InOut inOut, Value value) -->Line_14 $$ sb.append("->")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_15 $$ sb.append(contractValueString(value))[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_14 $$ sb.append("->")[ FD ]
