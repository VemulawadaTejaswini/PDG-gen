Line_2 $$ public ResultSet getColumns(String catalog, String schemaPattern, String tableNamePattern, String columnNamePattern) throws SQLException -->Line_3 $$ StringBuilder query = new StringBuilder("" + "SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE,\n" + "  TYPE_NAME, COLUMN_SIZE, BUFFER_LENGTH, DECIMAL_DIGITS, NUM_PREC_RADIX,\n" + "  NULLABLE, REMARKS, COLUMN_DEF, SQL_DATA_TYPE, SQL_DATETIME_SUB,\n" + "  CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE,\n" + "  SCOPE_CATALOG, SCOPE_SCHEMA, SCOPE_TABLE,\n" + "  SOURCE_DATA_TYPE, IS_AUTOINCREMENT, IS_GENERATEDCOLUMN\n" + "FROM system.jdbc.columns\n")[ CD ]
Line_2 $$ public ResultSet getColumns(String catalog, String schemaPattern, String tableNamePattern, String columnNamePattern) throws SQLException -->Line_8 $$ optionalStringLikeFilter(filters, "COLUMN_NAME", columnNamePattern)[ CD ]
Line_2 $$ public ResultSet getColumns(String catalog, String schemaPattern, String tableNamePattern, String columnNamePattern) throws SQLException -->Line_11 $$ return select(query.toString())[ CD ]
Line_2 $$ public ResultSet getColumns(String catalog, String schemaPattern, String tableNamePattern, String columnNamePattern) throws SQLException -->Line_6 $$ emptyStringLikeFilter(filters, "TABLE_SCHEM", schemaPattern)[ FD ]
Line_2 $$ public ResultSet getColumns(String catalog, String schemaPattern, String tableNamePattern, String columnNamePattern) throws SQLException -->Line_4 $$ List<String> filters = new ArrayList()[ CD ]
Line_2 $$ public ResultSet getColumns(String catalog, String schemaPattern, String tableNamePattern, String columnNamePattern) throws SQLException -->Line_7 $$ optionalStringLikeFilter(filters, "TABLE_NAME", tableNamePattern)[ FD ]
Line_2 $$ public ResultSet getColumns(String catalog, String schemaPattern, String tableNamePattern, String columnNamePattern) throws SQLException -->Line_7 $$ optionalStringLikeFilter(filters, "TABLE_NAME", tableNamePattern)[ CD ]
Line_2 $$ public ResultSet getColumns(String catalog, String schemaPattern, String tableNamePattern, String columnNamePattern) throws SQLException -->Line_6 $$ emptyStringLikeFilter(filters, "TABLE_SCHEM", schemaPattern)[ CD ]
Line_2 $$ public ResultSet getColumns(String catalog, String schemaPattern, String tableNamePattern, String columnNamePattern) throws SQLException -->Line_8 $$ optionalStringLikeFilter(filters, "COLUMN_NAME", columnNamePattern)[ FD ]
Line_3 $$ StringBuilder query = new StringBuilder("" + "SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE,\n" + "  TYPE_NAME, COLUMN_SIZE, BUFFER_LENGTH, DECIMAL_DIGITS, NUM_PREC_RADIX,\n" + "  NULLABLE, REMARKS, COLUMN_DEF, SQL_DATA_TYPE, SQL_DATETIME_SUB,\n" + "  CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE,\n" + "  SCOPE_CATALOG, SCOPE_SCHEMA, SCOPE_TABLE,\n" + "  SOURCE_DATA_TYPE, IS_AUTOINCREMENT, IS_GENERATEDCOLUMN\n" + "FROM system.jdbc.columns\n")-->Line_9 $$ buildFilters(query, filters)[ FD ]
Line_2 $$ public ResultSet getColumns(String catalog, String schemaPattern, String tableNamePattern, String columnNamePattern) throws SQLException -->Line_5 $$ emptyStringEqualsFilter(filters, "TABLE_CAT", catalog)[ FD ]
Line_4 $$ List<String> filters = new ArrayList()-->Line_8 $$ optionalStringLikeFilter(filters, "COLUMN_NAME", columnNamePattern)[ FD ]
Line_2 $$ public ResultSet getColumns(String catalog, String schemaPattern, String tableNamePattern, String columnNamePattern) throws SQLException -->Line_5 $$ emptyStringEqualsFilter(filters, "TABLE_CAT", catalog)[ CD ]
Line_2 $$ public ResultSet getColumns(String catalog, String schemaPattern, String tableNamePattern, String columnNamePattern) throws SQLException -->Line_10 $$ query.append("\nORDER BY TABLE_CAT, TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION")[ CD ]
Line_4 $$ List<String> filters = new ArrayList()-->Line_9 $$ buildFilters(query, filters)[ FD ]
Line_4 $$ List<String> filters = new ArrayList()-->Line_6 $$ emptyStringLikeFilter(filters, "TABLE_SCHEM", schemaPattern)[ FD ]
Line_2 $$ public ResultSet getColumns(String catalog, String schemaPattern, String tableNamePattern, String columnNamePattern) throws SQLException -->Line_9 $$ buildFilters(query, filters)[ CD ]
Line_3 $$ StringBuilder query = new StringBuilder("" + "SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE,\n" + "  TYPE_NAME, COLUMN_SIZE, BUFFER_LENGTH, DECIMAL_DIGITS, NUM_PREC_RADIX,\n" + "  NULLABLE, REMARKS, COLUMN_DEF, SQL_DATA_TYPE, SQL_DATETIME_SUB,\n" + "  CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE,\n" + "  SCOPE_CATALOG, SCOPE_SCHEMA, SCOPE_TABLE,\n" + "  SOURCE_DATA_TYPE, IS_AUTOINCREMENT, IS_GENERATEDCOLUMN\n" + "FROM system.jdbc.columns\n")-->Line_11 $$ return select(query.toString())[ FD ]
Line_4 $$ List<String> filters = new ArrayList()-->Line_7 $$ optionalStringLikeFilter(filters, "TABLE_NAME", tableNamePattern)[ FD ]
Line_3 $$ StringBuilder query = new StringBuilder("" + "SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, DATA_TYPE,\n" + "  TYPE_NAME, COLUMN_SIZE, BUFFER_LENGTH, DECIMAL_DIGITS, NUM_PREC_RADIX,\n" + "  NULLABLE, REMARKS, COLUMN_DEF, SQL_DATA_TYPE, SQL_DATETIME_SUB,\n" + "  CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE,\n" + "  SCOPE_CATALOG, SCOPE_SCHEMA, SCOPE_TABLE,\n" + "  SOURCE_DATA_TYPE, IS_AUTOINCREMENT, IS_GENERATEDCOLUMN\n" + "FROM system.jdbc.columns\n")-->Line_10 $$ query.append("\nORDER BY TABLE_CAT, TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION")[ FD ]
Line_4 $$ List<String> filters = new ArrayList()-->Line_5 $$ emptyStringEqualsFilter(filters, "TABLE_CAT", catalog)[ FD ]
