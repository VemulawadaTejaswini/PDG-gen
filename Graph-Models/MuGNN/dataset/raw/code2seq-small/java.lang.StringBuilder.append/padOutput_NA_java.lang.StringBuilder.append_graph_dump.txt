Line_5 $$ for (String line : lines) -->Line_10 $$ result.append(line)[ FD ]
Line_5 $$ for (String line : lines) -->Line_7 $$ line = Strings.padStart(line, indentArray[i] + line.length(), ' ')[ FD ]
Line_6 $$ if (!StringUtil.isEmpty(line)) -->Line_7 $$ line = Strings.padStart(line, indentArray[i] + line.length(), ' ')[ CD ]
Line_2 $$ private static String padOutput(List<String> lines, int[] indentArray) -->Line_15 $$ return result.toString()[ CD ]
Line_2 $$ private static String padOutput(List<String> lines, int[] indentArray) -->Line_3 $$ int i = 0[ CD ]
Line_3 $$ int i = 0-->Line_9 $$ i++[ FD ]
Line_4 $$ StringBuilder result = new StringBuilder()-->Line_10 $$ result.append(line)[ FD ]
Line_11 $$ if (i < lines.size()) -->Line_12 $$ result.append("\n")[ CD ]
Line_4 $$ StringBuilder result = new StringBuilder()-->Line_15 $$ return result.toString()[ FD ]
Line_3 $$ int i = 0-->Line_11 $$ if (i < lines.size()) [ FD ]
Line_2 $$ private static String padOutput(List<String> lines, int[] indentArray) -->Line_11 $$ if (i < lines.size()) [ FD ]
Line_4 $$ StringBuilder result = new StringBuilder()-->Line_12 $$ result.append("\n")[ FD ]
Line_5 $$ for (String line : lines) -->Line_6 $$ if (!StringUtil.isEmpty(line)) [ FD ]
Line_2 $$ private static String padOutput(List<String> lines, int[] indentArray) -->Line_4 $$ StringBuilder result = new StringBuilder()[ CD ]
Line_7 $$ line = Strings.padStart(line, indentArray[i] + line.length(), ' ')-->Line_10 $$ result.append(line)[ FD ]
