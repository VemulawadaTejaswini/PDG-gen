Line_2 $$ private void updateInfoLabel(AbstractMessage message) -->Line_26 $$ SubmittedReportInfo info = message.getSubmissionInfo()[ FD ]
Line_2 $$ private void updateInfoLabel(AbstractMessage message) -->Line_36 $$ myInfoLabel.setHyperlinkTarget(url)[ CD ]
Line_12 $$ StringBuilder text = new StringBuilder()-->Line_31 $$ text.append(" Submitting...")[ FD ]
Line_15 $$ if (throwable instanceof AbstractMethodError) -->Line_18 $$ text.append(DiagnosticBundle.message("error.list.message.blame.core", ApplicationNamesInfo.getInstance().getProductName()))[ CD ]
Line_12 $$ StringBuilder text = new StringBuilder()-->Line_21 $$ text.append(DiagnosticBundle.message("error.list.message.blame.plugin", PluginManager.getPlugin(pluginId).getName()))[ FD ]
Line_2 $$ private void updateInfoLabel(AbstractMessage message) -->Line_14 $$ if (pluginId == null) [ CD ]
Line_2 $$ private void updateInfoLabel(AbstractMessage message) -->Line_32 $$ if (!message.isRead()) [ FD ]
Line_12 $$ StringBuilder text = new StringBuilder()-->Line_33 $$ text.append(" ").append(DiagnosticBundle.message("error.list.message.unread"))[ FD ]
Line_7 $$ final Throwable throwable = message.getThrowable()-->Line_8 $$ if (throwable instanceof MessagePool.TooManyErrorsException) [ FD ]
Line_25 $$ if (message.isSubmitted()) -->Line_27 $$ url = info.getURL()[ CD ]
Line_32 $$ if (!message.isRead()) -->Line_33 $$ text.append(" ").append(DiagnosticBundle.message("error.list.message.unread"))[ CD ]
Line_8 $$ if (throwable instanceof MessagePool.TooManyErrorsException) -->Line_9 $$ myInfoLabel.setText("")[ CD ]
Line_25 $$ if (message.isSubmitted()) -->Line_30 $$ if (message.isSubmitting()) [ CD ]
Line_13 $$ PluginId pluginId = findPluginId(throwable)-->Line_21 $$ text.append(DiagnosticBundle.message("error.list.message.blame.plugin", PluginManager.getPlugin(pluginId).getName()))[ FD ]
Line_2 $$ private void updateInfoLabel(AbstractMessage message) -->Line_35 $$ myInfoLabel.setHtmlText(XmlStringUtil.wrapInHtml(text))[ CD ]
Line_25 $$ if (message.isSubmitted()) -->Line_26 $$ SubmittedReportInfo info = message.getSubmissionInfo()[ CD ]
Line_3 $$ if (message == null) -->Line_4 $$ myInfoLabel.setText("")[ CD ]
Line_13 $$ PluginId pluginId = findPluginId(throwable)-->Line_14 $$ if (pluginId == null) [ FD ]
Line_26 $$ SubmittedReportInfo info = message.getSubmissionInfo()-->Line_27 $$ url = info.getURL()[ FD ]
Line_2 $$ private void updateInfoLabel(AbstractMessage message) -->Line_25 $$ if (message.isSubmitted()) [ CD ]
Line_7 $$ final Throwable throwable = message.getThrowable()-->Line_13 $$ PluginId pluginId = findPluginId(throwable)[ FD ]
Line_2 $$ private void updateInfoLabel(AbstractMessage message) -->Line_23 $$ text.append(" ").append(DiagnosticBundle.message("error.list.message.info", DateFormatUtil.formatPrettyDateTime(message.getDate()), myMergedMessages.get(myIndex).size()))[ FD ]
Line_12 $$ StringBuilder text = new StringBuilder()-->Line_18 $$ text.append(DiagnosticBundle.message("error.list.message.blame.core", ApplicationNamesInfo.getInstance().getProductName()))[ FD ]
Line_12 $$ StringBuilder text = new StringBuilder()-->Line_16 $$ text.append(DiagnosticBundle.message("error.list.message.blame.unknown.plugin"))[ FD ]
Line_12 $$ StringBuilder text = new StringBuilder()-->Line_35 $$ myInfoLabel.setHtmlText(XmlStringUtil.wrapInHtml(text))[ FD ]
Line_24 $$ String url = null-->Line_27 $$ url = info.getURL()[ FD ]
Line_24 $$ String url = null-->Line_36 $$ myInfoLabel.setHyperlinkTarget(url)[ FD ]
Line_2 $$ private void updateInfoLabel(AbstractMessage message) -->Line_3 $$ if (message == null) [ FD ]
Line_3 $$ if (message == null) -->Line_5 $$ return[ CD ]
Line_14 $$ if (pluginId == null) -->Line_21 $$ text.append(DiagnosticBundle.message("error.list.message.blame.plugin", PluginManager.getPlugin(pluginId).getName()))[ CD ]
Line_2 $$ private void updateInfoLabel(AbstractMessage message) -->Line_30 $$ if (message.isSubmitting()) [ FD ]
Line_30 $$ if (message.isSubmitting()) -->Line_31 $$ text.append(" Submitting...")[ CD ]
Line_8 $$ if (throwable instanceof MessagePool.TooManyErrorsException) -->Line_10 $$ return[ CD ]
Line_7 $$ final Throwable throwable = message.getThrowable()-->Line_15 $$ if (throwable instanceof AbstractMethodError) [ FD ]
Line_12 $$ StringBuilder text = new StringBuilder()-->Line_29 $$ text.append(". ")[ FD ]
Line_2 $$ private void updateInfoLabel(AbstractMessage message) -->Line_23 $$ text.append(" ").append(DiagnosticBundle.message("error.list.message.info", DateFormatUtil.formatPrettyDateTime(message.getDate()), myMergedMessages.get(myIndex).size()))[ CD ]
Line_2 $$ private void updateInfoLabel(AbstractMessage message) -->Line_7 $$ final Throwable throwable = message.getThrowable()[ FD ]
Line_25 $$ if (message.isSubmitted()) -->Line_29 $$ text.append(". ")[ CD ]
Line_27 $$ url = info.getURL()-->Line_36 $$ myInfoLabel.setHyperlinkTarget(url)[ FD ]
Line_2 $$ private void updateInfoLabel(AbstractMessage message) -->Line_3 $$ if (message == null) [ CD ]
Line_12 $$ StringBuilder text = new StringBuilder()-->Line_28 $$ appendSubmissionInformation(info, text)[ FD ]
Line_2 $$ private void updateInfoLabel(AbstractMessage message) -->Line_24 $$ String url = null[ CD ]
Line_25 $$ if (message.isSubmitted()) -->Line_28 $$ appendSubmissionInformation(info, text)[ CD ]
Line_2 $$ private void updateInfoLabel(AbstractMessage message) -->Line_13 $$ PluginId pluginId = findPluginId(throwable)[ CD ]
Line_2 $$ private void updateInfoLabel(AbstractMessage message) -->Line_25 $$ if (message.isSubmitted()) [ FD ]
Line_12 $$ StringBuilder text = new StringBuilder()-->Line_23 $$ text.append(" ").append(DiagnosticBundle.message("error.list.message.info", DateFormatUtil.formatPrettyDateTime(message.getDate()), myMergedMessages.get(myIndex).size()))[ FD ]
Line_2 $$ private void updateInfoLabel(AbstractMessage message) -->Line_7 $$ final Throwable throwable = message.getThrowable()[ CD ]
Line_2 $$ private void updateInfoLabel(AbstractMessage message) -->Line_8 $$ if (throwable instanceof MessagePool.TooManyErrorsException) [ CD ]
Line_26 $$ SubmittedReportInfo info = message.getSubmissionInfo()-->Line_28 $$ appendSubmissionInformation(info, text)[ FD ]
Line_2 $$ private void updateInfoLabel(AbstractMessage message) -->Line_12 $$ StringBuilder text = new StringBuilder()[ CD ]
Line_15 $$ if (throwable instanceof AbstractMethodError) -->Line_16 $$ text.append(DiagnosticBundle.message("error.list.message.blame.unknown.plugin"))[ CD ]
Line_30 $$ if (message.isSubmitting()) -->Line_32 $$ if (!message.isRead()) [ CD ]
Line_14 $$ if (pluginId == null) -->Line_15 $$ if (throwable instanceof AbstractMethodError) [ CD ]
