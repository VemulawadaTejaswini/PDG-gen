Line_13 $$ ASTNode child = node.getNode().getFirstChildNode()-->Line_26 $$ child = child.getTreeNext()[ FD ]
Line_2 $$ public void visitPyStringLiteralExpression(PyStringLiteralExpression node) -->Line_4 $$ if (data != null) [ CD ]
Line_4 $$ if (data != null) -->Line_11 $$ myResult.append(quotes.getFirst()).append(substring).append(quotes.getSecond())[ CD ]
Line_2 $$ public void visitPyStringLiteralExpression(PyStringLiteralExpression node) -->Line_3 $$ final Pair<PsiElement, TextRange> data = node.getUserData(PyReplaceExpressionUtil.SELECTION_BREAKS_AST_NODE)[ FD ]
Line_6 $$ final String text = parent.getText()-->Line_18 $$ if (!text.contains("\\")) [ FD ]
Line_17 $$ if (text.contains("\n")) -->Line_21 $$ myResult.append(text)[ CD ]
Line_2 $$ public void visitPyStringLiteralExpression(PyStringLiteralExpression node) -->Line_3 $$ final Pair<PsiElement, TextRange> data = node.getUserData(PyReplaceExpressionUtil.SELECTION_BREAKS_AST_NODE)[ CD ]
Line_3 $$ final Pair<PsiElement, TextRange> data = node.getUserData(PyReplaceExpressionUtil.SELECTION_BREAKS_AST_NODE)-->Line_5 $$ final PsiElement parent = data.getFirst()[ FD ]
Line_6 $$ final String text = parent.getText()-->Line_24 $$ myResult.append(text)[ FD ]
Line_14 $$ while (child != null) -->Line_16 $$ if (child.getElementType() == TokenType.WHITE_SPACE) [ CD ]
Line_2 $$ public void visitPyStringLiteralExpression(PyStringLiteralExpression node) -->Line_13 $$ ASTNode child = node.getNode().getFirstChildNode()[ FD ]
Line_4 $$ if (data != null) -->Line_7 $$ final Pair<String, String> detectedQuotes = PythonStringUtil.getQuotes(text)[ CD ]
Line_14 $$ while (child != null) -->Line_15 $$ String text = child.getText()[ CD ]
Line_15 $$ String text = child.getText()-->Line_18 $$ if (!text.contains("\\")) [ FD ]
Line_13 $$ ASTNode child = node.getNode().getFirstChildNode()-->Line_14 $$ while (child != null) [ FD ]
Line_10 $$ final String substring = range.substring(text)-->Line_11 $$ myResult.append(quotes.getFirst()).append(substring).append(quotes.getSecond())[ FD ]
Line_6 $$ final String text = parent.getText()-->Line_17 $$ if (text.contains("\n")) [ FD ]
Line_6 $$ final String text = parent.getText()-->Line_21 $$ myResult.append(text)[ FD ]
Line_17 $$ if (text.contains("\n")) -->Line_18 $$ if (!text.contains("\\")) [ CD ]
Line_26 $$ child = child.getTreeNext()-->Line_16 $$ if (child.getElementType() == TokenType.WHITE_SPACE) [ FD ]
Line_5 $$ final PsiElement parent = data.getFirst()-->Line_6 $$ final String text = parent.getText()[ FD ]
Line_4 $$ if (data != null) -->Line_10 $$ final String substring = range.substring(text)[ CD ]
Line_3 $$ final Pair<PsiElement, TextRange> data = node.getUserData(PyReplaceExpressionUtil.SELECTION_BREAKS_AST_NODE)-->Line_9 $$ final TextRange range = data.getSecond()[ FD ]
Line_15 $$ String text = child.getText()-->Line_24 $$ myResult.append(text)[ FD ]
Line_4 $$ if (data != null) -->Line_8 $$ final Pair<String, String> quotes = detectedQuotes != null ? detectedQuotes : Pair.create("'", "'")[ CD ]
Line_8 $$ final Pair<String, String> quotes = detectedQuotes != null ? detectedQuotes : Pair.create("'", "'")-->Line_11 $$ myResult.append(quotes.getFirst()).append(substring).append(quotes.getSecond())[ FD ]
Line_9 $$ final TextRange range = data.getSecond()-->Line_10 $$ final String substring = range.substring(text)[ FD ]
Line_26 $$ child = child.getTreeNext()-->Line_14 $$ while (child != null) [ FD ]
Line_3 $$ final Pair<PsiElement, TextRange> data = node.getUserData(PyReplaceExpressionUtil.SELECTION_BREAKS_AST_NODE)-->Line_4 $$ if (data != null) [ FD ]
Line_26 $$ child = child.getTreeNext()-->Line_15 $$ String text = child.getText()[ FD ]
Line_4 $$ if (data != null) -->Line_13 $$ ASTNode child = node.getNode().getFirstChildNode()[ CD ]
Line_16 $$ if (child.getElementType() == TokenType.WHITE_SPACE) -->Line_17 $$ if (text.contains("\n")) [ CD ]
Line_4 $$ if (data != null) -->Line_6 $$ final String text = parent.getText()[ CD ]
Line_6 $$ final String text = parent.getText()-->Line_7 $$ final Pair<String, String> detectedQuotes = PythonStringUtil.getQuotes(text)[ FD ]
Line_14 $$ while (child != null) -->Line_26 $$ child = child.getTreeNext()[ CD ]
Line_16 $$ if (child.getElementType() == TokenType.WHITE_SPACE) -->Line_24 $$ myResult.append(text)[ CD ]
Line_4 $$ if (data != null) -->Line_9 $$ final TextRange range = data.getSecond()[ CD ]
Line_13 $$ ASTNode child = node.getNode().getFirstChildNode()-->Line_15 $$ String text = child.getText()[ FD ]
Line_4 $$ if (data != null) -->Line_14 $$ while (child != null) [ CD ]
Line_18 $$ if (!text.contains("\\")) -->Line_19 $$ myResult.append("\\")[ CD ]
Line_13 $$ ASTNode child = node.getNode().getFirstChildNode()-->Line_16 $$ if (child.getElementType() == TokenType.WHITE_SPACE) [ FD ]
Line_4 $$ if (data != null) -->Line_5 $$ final PsiElement parent = data.getFirst()[ CD ]
Line_15 $$ String text = child.getText()-->Line_17 $$ if (text.contains("\n")) [ FD ]
Line_15 $$ String text = child.getText()-->Line_21 $$ myResult.append(text)[ FD ]
Line_6 $$ final String text = parent.getText()-->Line_10 $$ final String substring = range.substring(text)[ FD ]
