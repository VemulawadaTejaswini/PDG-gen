Line_14 $$ for (String property : missingIdProperties) -->Line_15 $$ missings.append(property).append(", ")[ FD ]
Line_2 $$ private static void processIdPropertiesIfNotAlready(Map<XClass, InheritanceState> inheritanceStatePerClass, MetadataBuildingContext context, PersistentClass persistentClass, EntityBinder entityBinder, PropertyHolder propertyHolder, HashMap<String, IdentifierGeneratorDefinition> classGenerators, InheritanceState.ElementsToProcess elementsToProcess, boolean subclassAndSingleTableStrategy, Set<String> idPropertiesIfIdClass) -->Line_17 $$ throw new AnnotationException("Unable to find properties (" + missings.substring(0, missings.length() - 2) + ") in entity annotated with @IdClass:" + persistentClass.getEntityName())[ FD ]
Line_2 $$ private static void processIdPropertiesIfNotAlready(Map<XClass, InheritanceState> inheritanceStatePerClass, MetadataBuildingContext context, PersistentClass persistentClass, EntityBinder entityBinder, PropertyHolder propertyHolder, HashMap<String, IdentifierGeneratorDefinition> classGenerators, InheritanceState.ElementsToProcess elementsToProcess, boolean subclassAndSingleTableStrategy, Set<String> idPropertiesIfIdClass) -->Line_3 $$ Set<String> missingIdProperties = new HashSet<String>(idPropertiesIfIdClass)[ CD ]
Line_4 $$ for (PropertyData propertyAnnotatedElement : elementsToProcess.getElements()) -->Line_7 $$ processElementAnnotations(propertyHolder, subclassAndSingleTableStrategy ? Nullability.FORCED_NULL : Nullability.NO_CONSTRAINT, propertyAnnotatedElement, classGenerators, entityBinder, false, false, false, context, inheritanceStatePerClass)[ FD ]
Line_3 $$ Set<String> missingIdProperties = new HashSet<String>(idPropertiesIfIdClass)-->Line_12 $$ if (missingIdProperties.size() != 0) [ FD ]
Line_6 $$ if (!idPropertiesIfIdClass.contains(propertyName)) -->Line_7 $$ processElementAnnotations(propertyHolder, subclassAndSingleTableStrategy ? Nullability.FORCED_NULL : Nullability.NO_CONSTRAINT, propertyAnnotatedElement, classGenerators, entityBinder, false, false, false, context, inheritanceStatePerClass)[ CD ]
Line_12 $$ if (missingIdProperties.size() != 0) -->Line_13 $$ StringBuilder missings = new StringBuilder()[ CD ]
Line_2 $$ private static void processIdPropertiesIfNotAlready(Map<XClass, InheritanceState> inheritanceStatePerClass, MetadataBuildingContext context, PersistentClass persistentClass, EntityBinder entityBinder, PropertyHolder propertyHolder, HashMap<String, IdentifierGeneratorDefinition> classGenerators, InheritanceState.ElementsToProcess elementsToProcess, boolean subclassAndSingleTableStrategy, Set<String> idPropertiesIfIdClass) -->Line_6 $$ if (!idPropertiesIfIdClass.contains(propertyName)) [ FD ]
Line_13 $$ StringBuilder missings = new StringBuilder()-->Line_15 $$ missings.append(property).append(", ")[ FD ]
Line_13 $$ StringBuilder missings = new StringBuilder()-->Line_17 $$ throw new AnnotationException("Unable to find properties (" + missings.substring(0, missings.length() - 2) + ") in entity annotated with @IdClass:" + persistentClass.getEntityName())[ FD ]
Line_3 $$ Set<String> missingIdProperties = new HashSet<String>(idPropertiesIfIdClass)-->Line_9 $$ missingIdProperties.remove(propertyName)[ FD ]
Line_2 $$ private static void processIdPropertiesIfNotAlready(Map<XClass, InheritanceState> inheritanceStatePerClass, MetadataBuildingContext context, PersistentClass persistentClass, EntityBinder entityBinder, PropertyHolder propertyHolder, HashMap<String, IdentifierGeneratorDefinition> classGenerators, InheritanceState.ElementsToProcess elementsToProcess, boolean subclassAndSingleTableStrategy, Set<String> idPropertiesIfIdClass) -->Line_4 $$ for (PropertyData propertyAnnotatedElement : elementsToProcess.getElements()) [ FD ]
Line_4 $$ for (PropertyData propertyAnnotatedElement : elementsToProcess.getElements()) -->Line_5 $$ String propertyName = propertyAnnotatedElement.getPropertyName()[ FD ]
Line_6 $$ if (!idPropertiesIfIdClass.contains(propertyName)) -->Line_9 $$ missingIdProperties.remove(propertyName)[ CD ]
Line_2 $$ private static void processIdPropertiesIfNotAlready(Map<XClass, InheritanceState> inheritanceStatePerClass, MetadataBuildingContext context, PersistentClass persistentClass, EntityBinder entityBinder, PropertyHolder propertyHolder, HashMap<String, IdentifierGeneratorDefinition> classGenerators, InheritanceState.ElementsToProcess elementsToProcess, boolean subclassAndSingleTableStrategy, Set<String> idPropertiesIfIdClass) -->Line_12 $$ if (missingIdProperties.size() != 0) [ CD ]
Line_5 $$ String propertyName = propertyAnnotatedElement.getPropertyName()-->Line_9 $$ missingIdProperties.remove(propertyName)[ FD ]
Line_2 $$ private static void processIdPropertiesIfNotAlready(Map<XClass, InheritanceState> inheritanceStatePerClass, MetadataBuildingContext context, PersistentClass persistentClass, EntityBinder entityBinder, PropertyHolder propertyHolder, HashMap<String, IdentifierGeneratorDefinition> classGenerators, InheritanceState.ElementsToProcess elementsToProcess, boolean subclassAndSingleTableStrategy, Set<String> idPropertiesIfIdClass) -->Line_7 $$ processElementAnnotations(propertyHolder, subclassAndSingleTableStrategy ? Nullability.FORCED_NULL : Nullability.NO_CONSTRAINT, propertyAnnotatedElement, classGenerators, entityBinder, false, false, false, context, inheritanceStatePerClass)[ FD ]
Line_5 $$ String propertyName = propertyAnnotatedElement.getPropertyName()-->Line_6 $$ if (!idPropertiesIfIdClass.contains(propertyName)) [ FD ]
