Line_7 $$ StringBuilder s = new StringBuilder()-->Line_8 $$ s.append("mismatch on number of cells ")[ FD ]
Line_6 $$ if (check && (currentCells.size() != headers.size())) -->Line_7 $$ StringBuilder s = new StringBuilder()[ CD ]
Line_6 $$ if (check && (currentCells.size() != headers.size())) -->Line_9 $$ s.append(currentCells.size())[ CD ]
Line_7 $$ StringBuilder s = new StringBuilder()-->Line_9 $$ s.append(currentCells.size())[ FD ]
Line_2 $$ public Table endRow(boolean check) -->Line_3 $$ if (currentCells == null) [ CD ]
Line_7 $$ StringBuilder s = new StringBuilder()-->Line_10 $$ s.append(" in a row compared to header ")[ FD ]
Line_7 $$ StringBuilder s = new StringBuilder()-->Line_12 $$ throw new IllegalStateException(s.toString())[ FD ]
Line_2 $$ public Table endRow(boolean check) -->Line_14 $$ rows.add(currentCells)[ CD ]
Line_7 $$ StringBuilder s = new StringBuilder()-->Line_11 $$ s.append(headers.size())[ FD ]
Line_6 $$ if (check && (currentCells.size() != headers.size())) -->Line_11 $$ s.append(headers.size())[ CD ]
Line_2 $$ public Table endRow(boolean check) -->Line_16 $$ return this[ CD ]
Line_2 $$ public Table endRow(boolean check) -->Line_6 $$ if (check && (currentCells.size() != headers.size())) [ CD ]
Line_2 $$ public Table endRow(boolean check) -->Line_6 $$ if (check && (currentCells.size() != headers.size())) [ FD ]
Line_6 $$ if (check && (currentCells.size() != headers.size())) -->Line_10 $$ s.append(" in a row compared to header ")[ CD ]
Line_6 $$ if (check && (currentCells.size() != headers.size())) -->Line_8 $$ s.append("mismatch on number of cells ")[ CD ]
