Line_6 $$ for (int i = startPosition; i < startPosition + nColumns; i++) -->Line_7 $$ if (i > startPosition) [ CD ]
Line_2 $$ private String getColumnPositionsString(int scalarColumnIndex) -->Line_6 $$ for (int i = startPosition; i < startPosition + nColumns; i++) [ CD ]
Line_3 $$ int startPosition = getWalker().getSelectClause().getColumnNamesStartPosition(scalarColumnIndex)-->Line_7 $$ if (i > startPosition) [ FD ]
Line_6 $$ for (int i = startPosition; i < startPosition + nColumns; i++) -->Line_10 $$ buf.append(i)[ CD ]
Line_2 $$ private String getColumnPositionsString(int scalarColumnIndex) -->Line_12 $$ return buf.toString()[ CD ]
Line_6 $$ for (int i = startPosition; i < startPosition + nColumns; i++) -->Line_10 $$ buf.append(i)[ FD ]
Line_4 $$ StringBuilder buf = new StringBuilder()-->Line_12 $$ return buf.toString()[ FD ]
Line_2 $$ private String getColumnPositionsString(int scalarColumnIndex) -->Line_5 $$ int nColumns = getWalker().getSelectClause().getColumnNames()[scalarColumnIndex].length[ CD ]
Line_7 $$ if (i > startPosition) -->Line_8 $$ buf.append(", ")[ CD ]
Line_4 $$ StringBuilder buf = new StringBuilder()-->Line_8 $$ buf.append(", ")[ FD ]
Line_2 $$ private String getColumnPositionsString(int scalarColumnIndex) -->Line_3 $$ int startPosition = getWalker().getSelectClause().getColumnNamesStartPosition(scalarColumnIndex)[ FD ]
Line_6 $$ for (int i = startPosition; i < startPosition + nColumns; i++) -->Line_7 $$ if (i > startPosition) [ FD ]
Line_4 $$ StringBuilder buf = new StringBuilder()-->Line_10 $$ buf.append(i)[ FD ]
Line_2 $$ private String getColumnPositionsString(int scalarColumnIndex) -->Line_4 $$ StringBuilder buf = new StringBuilder()[ CD ]
Line_2 $$ private String getColumnPositionsString(int scalarColumnIndex) -->Line_3 $$ int startPosition = getWalker().getSelectClause().getColumnNamesStartPosition(scalarColumnIndex)[ CD ]
