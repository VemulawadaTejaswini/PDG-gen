Line_16 $$ char c = chars.charAt(index++)-->Line_22 $$ outChars.append(c)[ FD ]
Line_25 $$ if (index == chars.length())-->Line_26 $$ return false[ CD ]
Line_101 $$ index += 4-->Line_74 $$ c = chars.charAt(index++)[ FD ]
Line_101 $$ index += 4-->Line_83 $$ index--[ FD ]
Line_69 $$ c = chars.charAt(index++)-->Line_21 $$ if (c != '\\') [ FD ]
Line_97 $$ c = chars.charAt(index)-->Line_77 $$ v += c - '0'[ FD ]
Line_13 $$ int index = 0-->Line_89 $$ while (index != chars.length() && chars.charAt(index) == 'u') [ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_73 $$ if (startC <= '3' && index < chars.length()) [ FD ]
Line_13 $$ int index = 0-->Line_16 $$ char c = chars.charAt(index++)[ FD ]
Line_89 $$ while (index != chars.length() && chars.charAt(index) == 'u') -->Line_90 $$ index++[ CD ]
Line_71 $$ v <<= 3-->Line_76 $$ v <<= 3[ FD ]
Line_101 $$ index += 4-->Line_97 $$ c = chars.charAt(index)[ FD ]
Line_17 $$ if (sourceOffsets != null) -->Line_19 $$ sourceOffsets[outChars.length() + 1 - outOffset] = index[ CD ]
Line_13 $$ int index = 0-->Line_74 $$ c = chars.charAt(index++)[ FD ]
Line_13 $$ int index = 0-->Line_97 $$ c = chars.charAt(index)[ FD ]
Line_15 $$ while (index < chars.length()) -->Line_21 $$ if (c != '\\') [ CD ]
Line_13 $$ int index = 0-->Line_83 $$ index--[ FD ]
Line_67 $$ int v = (int) c - '0'-->Line_77 $$ v += c - '0'[ FD ]
Line_13 $$ int index = 0-->Line_19 $$ sourceOffsets[outChars.length() + 1 - outOffset] = index[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_48 $$ outChars.append('\'')[ FD ]
Line_75 $$ if ('0' <= c && c <= '7') -->Line_77 $$ v += c - '0'[ CD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_89 $$ while (index != chars.length() && chars.charAt(index) == 'u') [ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_45 $$ outChars.append('\"')[ FD ]
Line_15 $$ while (index < chars.length()) -->Line_17 $$ if (sourceOffsets != null) [ CD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_17 $$ if (sourceOffsets != null) [ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_68 $$ if (index < chars.length()) [ FD ]
Line_72 $$ v += c - '0'-->Line_76 $$ v <<= 3[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_22 $$ outChars.append(c)[ FD ]
Line_13 $$ int index = 0-->Line_90 $$ index++[ FD ]
Line_16 $$ char c = chars.charAt(index++)-->Line_69 $$ c = chars.charAt(index++)[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_92 $$ if (index + 4 <= chars.length()) [ FD ]
Line_16 $$ char c = chars.charAt(index++)-->Line_77 $$ v += c - '0'[ FD ]
Line_73 $$ if (startC <= '3' && index < chars.length()) -->Line_75 $$ if ('0' <= c && c <= '7') [ CD ]
Line_15 $$ while (index < chars.length()) -->Line_112 $$ if (sourceOffsets != null) [ CD ]
Line_69 $$ c = chars.charAt(index++)-->Line_77 $$ v += c - '0'[ FD ]
Line_101 $$ index += 4-->Line_113 $$ sourceOffsets[outChars.length() - outOffset] = index[ FD ]
Line_69 $$ c = chars.charAt(index++)-->Line_74 $$ c = chars.charAt(index++)[ FD ]
Line_13 $$ int index = 0-->Line_68 $$ if (index < chars.length()) [ FD ]
Line_74 $$ c = chars.charAt(index++)-->Line_77 $$ v += c - '0'[ FD ]
Line_27 $$ c = chars.charAt(index++)-->Line_22 $$ outChars.append(c)[ FD ]
Line_67 $$ int v = (int) c - '0'-->Line_76 $$ v <<= 3[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_6 $$ if (sourceOffsets != null) [ FD ]
Line_4 $$ if (chars.indexOf('\\') < 0) -->Line_6 $$ if (sourceOffsets != null) [ CD ]
Line_71 $$ v <<= 3-->Line_72 $$ v += c - '0'[ FD ]
Line_101 $$ index += 4-->Line_79 $$ index--[ FD ]
Line_7 $$ for (int i = 0; i < sourceOffsets.length; i++) -->Line_8 $$ sourceOffsets[i] = i[ FD ]
Line_4 $$ if (chars.indexOf('\\') < 0) -->Line_5 $$ outChars.append(chars)[ CD ]
Line_74 $$ c = chars.charAt(index++)-->Line_21 $$ if (c != '\\') [ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_42 $$ outChars.append('\r')[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_116 $$ return true[ CD ]
Line_13 $$ int index = 0-->Line_15 $$ while (index < chars.length()) [ FD ]
Line_92 $$ if (index + 4 <= chars.length()) -->Line_106 $$ return false[ CD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_86 $$ outChars.append((char) v)[ FD ]
Line_13 $$ int index = 0-->Line_18 $$ sourceOffsets[outChars.length() - outOffset] = index - 1[ FD ]
Line_72 $$ v += c - '0'-->Line_77 $$ v += c - '0'[ FD ]
Line_75 $$ if ('0' <= c && c <= '7') -->Line_76 $$ v <<= 3[ CD ]
Line_16 $$ char c = chars.charAt(index++)-->Line_97 $$ c = chars.charAt(index)[ FD ]
Line_101 $$ index += 4-->Line_69 $$ c = chars.charAt(index++)[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_19 $$ sourceOffsets[outChars.length() + 1 - outOffset] = index[ FD ]
Line_27 $$ c = chars.charAt(index++)-->Line_69 $$ c = chars.charAt(index++)[ FD ]
Line_101 $$ index += 4-->Line_68 $$ if (index < chars.length()) [ FD ]
Line_101 $$ index += 4-->Line_19 $$ sourceOffsets[outChars.length() + 1 - outOffset] = index[ FD ]
Line_101 $$ index += 4-->Line_27 $$ c = chars.charAt(index++)[ FD ]
Line_75 $$ if ('0' <= c && c <= '7') -->Line_79 $$ index--[ CD ]
Line_69 $$ c = chars.charAt(index++)-->Line_97 $$ c = chars.charAt(index)[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_39 $$ outChars.append('\f')[ FD ]
Line_13 $$ int index = 0-->Line_94 $$ int code = Integer.parseInt(chars.substring(index, index + 4), 16)[ FD ]
Line_95 $$ if (code == 0x000a || code == 0x000d)-->Line_96 $$ return false[ CD ]
Line_6 $$ if (sourceOffsets != null) -->Line_7 $$ for (int i = 0; i < sourceOffsets.length; i++) [ CD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_4 $$ if (chars.indexOf('\\') < 0) [ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_112 $$ if (sourceOffsets != null) [ FD ]
Line_97 $$ c = chars.charAt(index)-->Line_21 $$ if (c != '\\') [ FD ]
Line_70 $$ if ('0' <= c && c <= '7') -->Line_83 $$ index--[ CD ]
Line_13 $$ int index = 0-->Line_69 $$ c = chars.charAt(index++)[ FD ]
Line_7 $$ for (int i = 0; i < sourceOffsets.length; i++) -->Line_8 $$ sourceOffsets[i] = i[ CD ]
Line_67 $$ int v = (int) c - '0'-->Line_71 $$ v <<= 3[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_97 $$ c = chars.charAt(index)[ FD ]
Line_15 $$ while (index < chars.length()) -->Line_25 $$ if (index == chars.length())[ CD ]
Line_69 $$ c = chars.charAt(index++)-->Line_72 $$ v += c - '0'[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_4 $$ if (chars.indexOf('\\') < 0) [ CD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_14 $$ final int outOffset = outChars.length()[ FD ]
Line_70 $$ if ('0' <= c && c <= '7') -->Line_73 $$ if (startC <= '3' && index < chars.length()) [ CD ]
Line_101 $$ index += 4-->Line_15 $$ while (index < chars.length()) [ FD ]
Line_74 $$ c = chars.charAt(index++)-->Line_72 $$ v += c - '0'[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_100 $$ outChars.append((char) code)[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_25 $$ if (index == chars.length())[ FD ]
Line_27 $$ c = chars.charAt(index++)-->Line_74 $$ c = chars.charAt(index++)[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_14 $$ final int outOffset = outChars.length()[ CD ]
Line_76 $$ v <<= 3-->Line_77 $$ v += c - '0'[ FD ]
Line_71 $$ v <<= 3-->Line_77 $$ v += c - '0'[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_30 $$ outChars.append('\b')[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_3 $$ assert sourceOffsets == null || sourceOffsets.length == chars.length() + 1[ FD ]
Line_15 $$ while (index < chars.length()) -->Line_16 $$ char c = chars.charAt(index++)[ CD ]
Line_112 $$ if (sourceOffsets != null) -->Line_113 $$ sourceOffsets[outChars.length() - outOffset] = index[ CD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_18 $$ sourceOffsets[outChars.length() - outOffset] = index - 1[ FD ]
Line_16 $$ char c = chars.charAt(index++)-->Line_21 $$ if (c != '\\') [ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_15 $$ while (index < chars.length()) [ CD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_27 $$ c = chars.charAt(index++)[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_113 $$ sourceOffsets[outChars.length() - outOffset] = index[ FD ]
Line_69 $$ c = chars.charAt(index++)-->Line_22 $$ outChars.append(c)[ FD ]
Line_74 $$ c = chars.charAt(index++)-->Line_22 $$ outChars.append(c)[ FD ]
Line_101 $$ index += 4-->Line_25 $$ if (index == chars.length())[ FD ]
Line_101 $$ index += 4-->Line_94 $$ int code = Integer.parseInt(chars.substring(index, index + 4), 16)[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_54 $$ outChars.append('\\')[ FD ]
Line_67 $$ int v = (int) c - '0'-->Line_72 $$ v += c - '0'[ FD ]
Line_98 $$ if (c == '+' || c == '-')-->Line_99 $$ return false[ CD ]
Line_13 $$ int index = 0-->Line_101 $$ index += 4[ FD ]
Line_17 $$ if (sourceOffsets != null) -->Line_18 $$ sourceOffsets[outChars.length() - outOffset] = index - 1[ CD ]
Line_73 $$ if (startC <= '3' && index < chars.length()) -->Line_74 $$ c = chars.charAt(index++)[ CD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_94 $$ int code = Integer.parseInt(chars.substring(index, index + 4), 16)[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_33 $$ outChars.append('\t')[ FD ]
Line_27 $$ c = chars.charAt(index++)-->Line_72 $$ v += c - '0'[ FD ]
Line_13 $$ int index = 0-->Line_25 $$ if (index == chars.length())[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_74 $$ c = chars.charAt(index++)[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_36 $$ outChars.append('\n')[ FD ]
Line_16 $$ char c = chars.charAt(index++)-->Line_72 $$ v += c - '0'[ FD ]
Line_13 $$ int index = 0-->Line_27 $$ c = chars.charAt(index++)[ FD ]
Line_4 $$ if (chars.indexOf('\\') < 0) -->Line_11 $$ return true[ CD ]
Line_101 $$ index += 4-->Line_16 $$ char c = chars.charAt(index++)[ FD ]
Line_21 $$ if (c != '\\') -->Line_22 $$ outChars.append(c)[ CD ]
Line_97 $$ c = chars.charAt(index)-->Line_72 $$ v += c - '0'[ FD ]
Line_13 $$ int index = 0-->Line_79 $$ index--[ FD ]
Line_97 $$ c = chars.charAt(index)-->Line_22 $$ outChars.append(c)[ FD ]
Line_74 $$ c = chars.charAt(index++)-->Line_97 $$ c = chars.charAt(index)[ FD ]
Line_70 $$ if ('0' <= c && c <= '7') -->Line_72 $$ v += c - '0'[ CD ]
Line_16 $$ char c = chars.charAt(index++)-->Line_27 $$ c = chars.charAt(index++)[ FD ]
Line_27 $$ c = chars.charAt(index++)-->Line_97 $$ c = chars.charAt(index)[ FD ]
Line_15 $$ while (index < chars.length()) -->Line_27 $$ c = chars.charAt(index++)[ CD ]
Line_70 $$ if ('0' <= c && c <= '7') -->Line_71 $$ v <<= 3[ CD ]
Line_27 $$ c = chars.charAt(index++)-->Line_77 $$ v += c - '0'[ FD ]
Line_13 $$ int index = 0-->Line_113 $$ sourceOffsets[outChars.length() - outOffset] = index[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_16 $$ char c = chars.charAt(index++)[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_5 $$ outChars.append(chars)[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_69 $$ c = chars.charAt(index++)[ FD ]
Line_68 $$ if (index < chars.length()) -->Line_70 $$ if ('0' <= c && c <= '7') [ CD ]
Line_68 $$ if (index < chars.length()) -->Line_69 $$ c = chars.charAt(index++)[ CD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_15 $$ while (index < chars.length()) [ FD ]
Line_16 $$ char c = chars.charAt(index++)-->Line_74 $$ c = chars.charAt(index++)[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_13 $$ int index = 0[ CD ]
Line_101 $$ index += 4-->Line_18 $$ sourceOffsets[outChars.length() - outOffset] = index - 1[ FD ]
Line_2 $$ public static boolean parseStringCharacters(@NotNull String chars, @NotNull StringBuilder outChars, @Nullable int[] sourceOffsets) -->Line_51 $$ outChars.append('$')[ FD ]
Line_27 $$ c = chars.charAt(index++)-->Line_21 $$ if (c != '\\') [ FD ]
