Line_14 $$ if (typeParameterList != null) -->Line_16 $$ buffer.append(" ")[ CD ]
Line_4 $$ if (!match.myChangedParams.isEmpty() || returnType != null) -->Line_14 $$ if (typeParameterList != null) [ CD ]
Line_13 $$ final PsiTypeParameterList typeParameterList = method.getTypeParameterList()-->Line_15 $$ buffer.append(typeParameterList.getText())[ FD ]
Line_22 $$ int count = 0-->Line_35 $$ count++[ FD ]
Line_7 $$ if (buffer.length() > 0) -->Line_8 $$ buffer.append(" ")[ CD ]
Line_42 $$ if (exceptions.length > 0) -->Line_44 $$ buffer.append("throws\n")[ CD ]
Line_4 $$ if (!match.myChangedParams.isEmpty() || returnType != null) -->Line_18 $$ buffer.append(PsiFormatUtil.formatType(returnType != null ? returnType : method.getReturnType(), 0, PsiSubstitutor.EMPTY))[ CD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_11 $$ buffer.append("static ")[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_30 $$ buffer.append("\n")[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_33 $$ buffer.append(" ")[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_18 $$ buffer.append(PsiFormatUtil.formatType(returnType != null ? returnType : method.getReturnType(), 0, PsiSubstitutor.EMPTY))[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_20 $$ buffer.append(method.getName())[ FD ]
Line_4 $$ if (!match.myChangedParams.isEmpty() || returnType != null) -->Line_22 $$ int count = 0[ CD ]
Line_27 $$ if (count > 0) -->Line_28 $$ buffer.append(",")[ CD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_44 $$ buffer.append("throws\n")[ FD ]
Line_4 $$ if (!match.myChangedParams.isEmpty() || returnType != null) -->Line_21 $$ buffer.append("(")[ CD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_28 $$ buffer.append(",")[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_48 $$ buffer.append("\n")[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_16 $$ buffer.append(" ")[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_8 $$ buffer.append(" ")[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_34 $$ buffer.append(param.getName())[ FD ]
Line_2 $$ public static String getChangedSignature(Match match, final PsiMethod method, final boolean shouldBeStatic, String visibility) -->Line_13 $$ final PsiTypeParameterList typeParameterList = method.getTypeParameterList()[ FD ]
Line_26 $$ String typeText = param.getTypeText()-->Line_32 $$ buffer.append(typeText)[ FD ]
Line_13 $$ final PsiTypeParameterList typeParameterList = method.getTypeParameterList()-->Line_14 $$ if (typeParameterList != null) [ FD ]
Line_23 $$ final String INDENT = "    "-->Line_46 $$ buffer.append(INDENT)[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_38 $$ buffer.append("\n")[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_46 $$ buffer.append(INDENT)[ FD ]
Line_4 $$ if (!match.myChangedParams.isEmpty() || returnType != null) -->Line_40 $$ buffer.append(")")[ CD ]
Line_4 $$ if (!match.myChangedParams.isEmpty() || returnType != null) -->Line_13 $$ final PsiTypeParameterList typeParameterList = method.getTypeParameterList()[ CD ]
Line_42 $$ if (exceptions.length > 0) -->Line_43 $$ buffer.append("\n")[ CD ]
Line_4 $$ if (!match.myChangedParams.isEmpty() || returnType != null) -->Line_20 $$ buffer.append(method.getName())[ CD ]
Line_10 $$ if (shouldBeStatic) -->Line_11 $$ buffer.append("static ")[ CD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_40 $$ buffer.append(")")[ FD ]
Line_4 $$ if (!match.myChangedParams.isEmpty() || returnType != null) -->Line_42 $$ if (exceptions.length > 0) [ CD ]
Line_2 $$ public static String getChangedSignature(Match match, final PsiMethod method, final boolean shouldBeStatic, String visibility) -->Line_3 $$ final PsiType returnType = match.getChangedReturnType(method)[ FD ]
Line_22 $$ int count = 0-->Line_37 $$ if (count > 0) [ FD ]
Line_4 $$ if (!match.myChangedParams.isEmpty() || returnType != null) -->Line_51 $$ return buffer.toString()[ CD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_15 $$ buffer.append(typeParameterList.getText())[ FD ]
Line_2 $$ public static String getChangedSignature(Match match, final PsiMethod method, final boolean shouldBeStatic, String visibility) -->Line_18 $$ buffer.append(PsiFormatUtil.formatType(returnType != null ? returnType : method.getReturnType(), 0, PsiSubstitutor.EMPTY))[ FD ]
Line_23 $$ final String INDENT = "    "-->Line_31 $$ buffer.append(INDENT)[ FD ]
Line_25 $$ for (ParameterInfoImpl param : params) -->Line_26 $$ String typeText = param.getTypeText()[ FD ]
Line_45 $$ for (PsiType exception : exceptions) -->Line_47 $$ buffer.append(PsiFormatUtil.formatType(exception, 0, PsiSubstitutor.EMPTY))[ FD ]
Line_2 $$ public static String getChangedSignature(Match match, final PsiMethod method, final boolean shouldBeStatic, String visibility) -->Line_6 $$ buffer.append(visibility)[ FD ]
Line_2 $$ public static String getChangedSignature(Match match, final PsiMethod method, final boolean shouldBeStatic, String visibility) -->Line_24 $$ final List<ParameterInfoImpl> params = patchParams(match.myChangedParams, method)[ FD ]
Line_2 $$ public static String getChangedSignature(Match match, final PsiMethod method, final boolean shouldBeStatic, String visibility) -->Line_4 $$ if (!match.myChangedParams.isEmpty() || returnType != null) [ CD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_7 $$ if (buffer.length() > 0) [ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_31 $$ buffer.append(INDENT)[ FD ]
Line_4 $$ if (!match.myChangedParams.isEmpty() || returnType != null) -->Line_19 $$ buffer.append(" ")[ CD ]
Line_4 $$ if (!match.myChangedParams.isEmpty() || returnType != null) -->Line_37 $$ if (count > 0) [ CD ]
Line_2 $$ public static String getChangedSignature(Match match, final PsiMethod method, final boolean shouldBeStatic, String visibility) -->Line_20 $$ buffer.append(method.getName())[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_6 $$ buffer.append(visibility)[ FD ]
Line_37 $$ if (count > 0) -->Line_38 $$ buffer.append("\n")[ CD ]
Line_2 $$ public static String getChangedSignature(Match match, final PsiMethod method, final boolean shouldBeStatic, String visibility) -->Line_53 $$ return null[ CD ]
Line_2 $$ public static String getChangedSignature(Match match, final PsiMethod method, final boolean shouldBeStatic, String visibility) -->Line_3 $$ final PsiType returnType = match.getChangedReturnType(method)[ CD ]
Line_14 $$ if (typeParameterList != null) -->Line_15 $$ buffer.append(typeParameterList.getText())[ CD ]
Line_4 $$ if (!match.myChangedParams.isEmpty() || returnType != null) -->Line_5 $$ StringBuilder buffer = new StringBuilder()[ CD ]
Line_4 $$ if (!match.myChangedParams.isEmpty() || returnType != null) -->Line_41 $$ final PsiClassType[] exceptions = method.getThrowsList().getReferencedTypes()[ CD ]
Line_22 $$ int count = 0-->Line_27 $$ if (count > 0) [ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_51 $$ return buffer.toString()[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_21 $$ buffer.append("(")[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_47 $$ buffer.append(PsiFormatUtil.formatType(exception, 0, PsiSubstitutor.EMPTY))[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_43 $$ buffer.append("\n")[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_19 $$ buffer.append(" ")[ FD ]
Line_4 $$ if (!match.myChangedParams.isEmpty() || returnType != null) -->Line_23 $$ final String INDENT = "    "[ CD ]
Line_4 $$ if (!match.myChangedParams.isEmpty() || returnType != null) -->Line_6 $$ buffer.append(visibility)[ CD ]
Line_25 $$ for (ParameterInfoImpl param : params) -->Line_34 $$ buffer.append(param.getName())[ FD ]
Line_4 $$ if (!match.myChangedParams.isEmpty() || returnType != null) -->Line_24 $$ final List<ParameterInfoImpl> params = patchParams(match.myChangedParams, method)[ CD ]
Line_4 $$ if (!match.myChangedParams.isEmpty() || returnType != null) -->Line_10 $$ if (shouldBeStatic) [ CD ]
Line_4 $$ if (!match.myChangedParams.isEmpty() || returnType != null) -->Line_7 $$ if (buffer.length() > 0) [ CD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_32 $$ buffer.append(typeText)[ FD ]
Line_2 $$ public static String getChangedSignature(Match match, final PsiMethod method, final boolean shouldBeStatic, String visibility) -->Line_41 $$ final PsiClassType[] exceptions = method.getThrowsList().getReferencedTypes()[ FD ]
