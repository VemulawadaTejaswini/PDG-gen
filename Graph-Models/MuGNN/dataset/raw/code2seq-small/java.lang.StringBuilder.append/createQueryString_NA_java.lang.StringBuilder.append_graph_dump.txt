Line_2 $$ protected String createQueryString(List<Param> params, Set<String> usedParams, boolean includeQueryStringDelimiter) throws JspException -->Line_7 $$ if (includeQueryStringDelimiter && qs.length() == 0) [ FD ]
Line_7 $$ if (includeQueryStringDelimiter && qs.length() == 0) -->Line_10 $$ qs.append("&")[ CD ]
Line_2 $$ protected String createQueryString(List<Param> params, Set<String> usedParams, boolean includeQueryStringDelimiter) throws JspException -->Line_6 $$ if (!usedParams.contains(param.getName()) && StringUtils.hasLength(param.getName())) [ FD ]
Line_3 $$ String encoding = pageContext.getResponse().getCharacterEncoding()-->Line_16 $$ qs.append(UriUtils.encodeQueryParam(param.getValue(), encoding))[ FD ]
Line_2 $$ protected String createQueryString(List<Param> params, Set<String> usedParams, boolean includeQueryStringDelimiter) throws JspException -->Line_3 $$ String encoding = pageContext.getResponse().getCharacterEncoding()[ CD ]
Line_4 $$ StringBuilder qs = new StringBuilder()-->Line_23 $$ return qs.toString()[ FD ]
Line_2 $$ protected String createQueryString(List<Param> params, Set<String> usedParams, boolean includeQueryStringDelimiter) throws JspException -->Line_4 $$ StringBuilder qs = new StringBuilder()[ CD ]
Line_5 $$ for (Param param : params) -->Line_13 $$ qs.append(UriUtils.encodeQueryParam(param.getName(), encoding))[ FD ]
Line_4 $$ StringBuilder qs = new StringBuilder()-->Line_15 $$ qs.append("=")[ FD ]
Line_5 $$ for (Param param : params) -->Line_16 $$ qs.append(UriUtils.encodeQueryParam(param.getValue(), encoding))[ FD ]
Line_5 $$ for (Param param : params) -->Line_14 $$ if (param.getValue() != null) [ FD ]
Line_4 $$ StringBuilder qs = new StringBuilder()-->Line_13 $$ qs.append(UriUtils.encodeQueryParam(param.getName(), encoding))[ FD ]
Line_4 $$ StringBuilder qs = new StringBuilder()-->Line_16 $$ qs.append(UriUtils.encodeQueryParam(param.getValue(), encoding))[ FD ]
Line_4 $$ StringBuilder qs = new StringBuilder()-->Line_7 $$ if (includeQueryStringDelimiter && qs.length() == 0) [ FD ]
Line_4 $$ StringBuilder qs = new StringBuilder()-->Line_10 $$ qs.append("&")[ FD ]
Line_3 $$ String encoding = pageContext.getResponse().getCharacterEncoding()-->Line_13 $$ qs.append(UriUtils.encodeQueryParam(param.getName(), encoding))[ FD ]
Line_5 $$ for (Param param : params) -->Line_6 $$ if (!usedParams.contains(param.getName()) && StringUtils.hasLength(param.getName())) [ FD ]
Line_14 $$ if (param.getValue() != null) -->Line_16 $$ qs.append(UriUtils.encodeQueryParam(param.getValue(), encoding))[ CD ]
Line_14 $$ if (param.getValue() != null) -->Line_15 $$ qs.append("=")[ CD ]
Line_6 $$ if (!usedParams.contains(param.getName()) && StringUtils.hasLength(param.getName())) -->Line_7 $$ if (includeQueryStringDelimiter && qs.length() == 0) [ CD ]
Line_2 $$ protected String createQueryString(List<Param> params, Set<String> usedParams, boolean includeQueryStringDelimiter) throws JspException -->Line_23 $$ return qs.toString()[ CD ]
Line_4 $$ StringBuilder qs = new StringBuilder()-->Line_8 $$ qs.append("?")[ FD ]
Line_7 $$ if (includeQueryStringDelimiter && qs.length() == 0) -->Line_8 $$ qs.append("?")[ CD ]
