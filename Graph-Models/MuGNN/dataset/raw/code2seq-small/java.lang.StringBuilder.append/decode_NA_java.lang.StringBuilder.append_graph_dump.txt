Line_2 $$ public boolean decode(@NotNull final TextRange rangeInsideHost, @NotNull StringBuilder outChars) -->Line_3 $$ TextRange valueTextRange = myXmlAttribute.getValueTextRange()[ CD ]
Line_5 $$ int endInDecoded = myXmlAttribute.physicalToDisplay(rangeInsideHost.getEndOffset() - valueTextRange.getStartOffset())-->Line_11 $$ outChars.append(displayValue, startInDecoded, endInDecoded)[ FD ]
Line_2 $$ public boolean decode(@NotNull final TextRange rangeInsideHost, @NotNull StringBuilder outChars) -->Line_11 $$ outChars.append(displayValue, startInDecoded, endInDecoded)[ FD ]
Line_7 $$ startInDecoded = startInDecoded < 0 ? 0 : startInDecoded > displayValue.length() ? displayValue.length() : startInDecoded-->Line_10 $$ endInDecoded = startInDecoded[ FD ]
Line_4 $$ int startInDecoded = myXmlAttribute.physicalToDisplay(rangeInsideHost.getStartOffset() - valueTextRange.getStartOffset())-->Line_10 $$ endInDecoded = startInDecoded[ FD ]
Line_2 $$ public boolean decode(@NotNull final TextRange rangeInsideHost, @NotNull StringBuilder outChars) -->Line_5 $$ int endInDecoded = myXmlAttribute.physicalToDisplay(rangeInsideHost.getEndOffset() - valueTextRange.getStartOffset())[ FD ]
Line_2 $$ public boolean decode(@NotNull final TextRange rangeInsideHost, @NotNull StringBuilder outChars) -->Line_6 $$ String displayValue = myXmlAttribute.getDisplayValue()[ CD ]
Line_4 $$ int startInDecoded = myXmlAttribute.physicalToDisplay(rangeInsideHost.getStartOffset() - valueTextRange.getStartOffset())-->Line_7 $$ startInDecoded = startInDecoded < 0 ? 0 : startInDecoded > displayValue.length() ? displayValue.length() : startInDecoded[ FD ]
Line_7 $$ startInDecoded = startInDecoded < 0 ? 0 : startInDecoded > displayValue.length() ? displayValue.length() : startInDecoded-->Line_9 $$ if (startInDecoded > endInDecoded)[ FD ]
Line_8 $$ endInDecoded = endInDecoded < 0 ? 0 : endInDecoded > displayValue.length() ? displayValue.length() : endInDecoded-->Line_11 $$ outChars.append(displayValue, startInDecoded, endInDecoded)[ FD ]
Line_3 $$ TextRange valueTextRange = myXmlAttribute.getValueTextRange()-->Line_5 $$ int endInDecoded = myXmlAttribute.physicalToDisplay(rangeInsideHost.getEndOffset() - valueTextRange.getStartOffset())[ FD ]
Line_2 $$ public boolean decode(@NotNull final TextRange rangeInsideHost, @NotNull StringBuilder outChars) -->Line_5 $$ int endInDecoded = myXmlAttribute.physicalToDisplay(rangeInsideHost.getEndOffset() - valueTextRange.getStartOffset())[ CD ]
Line_3 $$ TextRange valueTextRange = myXmlAttribute.getValueTextRange()-->Line_4 $$ int startInDecoded = myXmlAttribute.physicalToDisplay(rangeInsideHost.getStartOffset() - valueTextRange.getStartOffset())[ FD ]
Line_2 $$ public boolean decode(@NotNull final TextRange rangeInsideHost, @NotNull StringBuilder outChars) -->Line_7 $$ startInDecoded = startInDecoded < 0 ? 0 : startInDecoded > displayValue.length() ? displayValue.length() : startInDecoded[ CD ]
Line_2 $$ public boolean decode(@NotNull final TextRange rangeInsideHost, @NotNull StringBuilder outChars) -->Line_12 $$ return true[ CD ]
Line_2 $$ public boolean decode(@NotNull final TextRange rangeInsideHost, @NotNull StringBuilder outChars) -->Line_4 $$ int startInDecoded = myXmlAttribute.physicalToDisplay(rangeInsideHost.getStartOffset() - valueTextRange.getStartOffset())[ FD ]
Line_4 $$ int startInDecoded = myXmlAttribute.physicalToDisplay(rangeInsideHost.getStartOffset() - valueTextRange.getStartOffset())-->Line_11 $$ outChars.append(displayValue, startInDecoded, endInDecoded)[ FD ]
Line_7 $$ startInDecoded = startInDecoded < 0 ? 0 : startInDecoded > displayValue.length() ? displayValue.length() : startInDecoded-->Line_11 $$ outChars.append(displayValue, startInDecoded, endInDecoded)[ FD ]
Line_6 $$ String displayValue = myXmlAttribute.getDisplayValue()-->Line_11 $$ outChars.append(displayValue, startInDecoded, endInDecoded)[ FD ]
Line_5 $$ int endInDecoded = myXmlAttribute.physicalToDisplay(rangeInsideHost.getEndOffset() - valueTextRange.getStartOffset())-->Line_9 $$ if (startInDecoded > endInDecoded)[ FD ]
Line_6 $$ String displayValue = myXmlAttribute.getDisplayValue()-->Line_7 $$ startInDecoded = startInDecoded < 0 ? 0 : startInDecoded > displayValue.length() ? displayValue.length() : startInDecoded[ FD ]
Line_2 $$ public boolean decode(@NotNull final TextRange rangeInsideHost, @NotNull StringBuilder outChars) -->Line_9 $$ if (startInDecoded > endInDecoded)[ CD ]
Line_8 $$ endInDecoded = endInDecoded < 0 ? 0 : endInDecoded > displayValue.length() ? displayValue.length() : endInDecoded-->Line_9 $$ if (startInDecoded > endInDecoded)[ FD ]
Line_2 $$ public boolean decode(@NotNull final TextRange rangeInsideHost, @NotNull StringBuilder outChars) -->Line_11 $$ outChars.append(displayValue, startInDecoded, endInDecoded)[ CD ]
Line_4 $$ int startInDecoded = myXmlAttribute.physicalToDisplay(rangeInsideHost.getStartOffset() - valueTextRange.getStartOffset())-->Line_9 $$ if (startInDecoded > endInDecoded)[ FD ]
Line_6 $$ String displayValue = myXmlAttribute.getDisplayValue()-->Line_8 $$ endInDecoded = endInDecoded < 0 ? 0 : endInDecoded > displayValue.length() ? displayValue.length() : endInDecoded[ FD ]
Line_2 $$ public boolean decode(@NotNull final TextRange rangeInsideHost, @NotNull StringBuilder outChars) -->Line_8 $$ endInDecoded = endInDecoded < 0 ? 0 : endInDecoded > displayValue.length() ? displayValue.length() : endInDecoded[ CD ]
Line_10 $$ endInDecoded = startInDecoded-->Line_11 $$ outChars.append(displayValue, startInDecoded, endInDecoded)[ FD ]
Line_2 $$ public boolean decode(@NotNull final TextRange rangeInsideHost, @NotNull StringBuilder outChars) -->Line_4 $$ int startInDecoded = myXmlAttribute.physicalToDisplay(rangeInsideHost.getStartOffset() - valueTextRange.getStartOffset())[ CD ]
Line_9 $$ if (startInDecoded > endInDecoded)-->Line_10 $$ endInDecoded = startInDecoded[ CD ]
Line_8 $$ endInDecoded = endInDecoded < 0 ? 0 : endInDecoded > displayValue.length() ? displayValue.length() : endInDecoded-->Line_10 $$ endInDecoded = startInDecoded[ FD ]
Line_5 $$ int endInDecoded = myXmlAttribute.physicalToDisplay(rangeInsideHost.getEndOffset() - valueTextRange.getStartOffset())-->Line_10 $$ endInDecoded = startInDecoded[ FD ]
Line_5 $$ int endInDecoded = myXmlAttribute.physicalToDisplay(rangeInsideHost.getEndOffset() - valueTextRange.getStartOffset())-->Line_8 $$ endInDecoded = endInDecoded < 0 ? 0 : endInDecoded > displayValue.length() ? displayValue.length() : endInDecoded[ FD ]
