Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_12 $$ PsiDirectory psiDir = vDir == null ? null : PsiManager.getInstance(project).findDirectory(vDir)[ FD ]
Line_8 $$ FileViewProvider viewProvider = psiManager.findViewProvider(file)-->Line_23 $$ sb.append("\nviewProvider=").append(viewProvider == null ? "null" : viewProvider.getClass().getName())[ FD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_20 $$ sb.append(" underIgnored=").append(indexFacade.isUnderIgnored(file))[ FD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_10 $$ boolean ignored = !(file instanceof LightVirtualFile) && FileTypeRegistry.getInstance().isFileIgnored(file)[ CD ]
Line_24 $$ if (viewProvider != null) -->Line_27 $$ sb.append(" physical=").append(viewProvider.isPhysical())[ CD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_11 $$ VirtualFile vDir = file.getParent()[ CD ]
Line_13 $$ FileIndexFacade indexFacade = FileIndexFacade.getInstance(project)-->Line_20 $$ sb.append(" underIgnored=").append(indexFacade.isUnderIgnored(file))[ FD ]
Line_13 $$ FileIndexFacade indexFacade = FileIndexFacade.getInstance(project)-->Line_21 $$ sb.append(" inLibrary=").append(indexFacade.isInLibrarySource(file) || indexFacade.isInLibraryClasses(file))[ FD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_18 $$ sb.append("\nfileType=").append(fileType.getName()).append("/").append(fileType.getClass().getName())[ CD ]
Line_14 $$ StringBuilder sb = new StringBuilder()-->Line_27 $$ sb.append(" physical=").append(viewProvider.isPhysical())[ FD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_7 $$ FileType fileType = file.getFileType()[ FD ]
Line_29 $$ for (PsiFile o : files) -->Line_30 $$ sb.append("\n  root=").append(o.getLanguage().getID()).append("/").append(o.getClass().getName())[ FD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_15 $$ sb.append("valid=").append(file.isValid()).append(" isDirectory=").append(file.isDirectory()).append(" hasDocument=").append(document != null).append(" length=").append(file.getLength())[ CD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_21 $$ sb.append(" inLibrary=").append(indexFacade.isInLibrarySource(file) || indexFacade.isInLibraryClasses(file))[ CD ]
Line_24 $$ if (viewProvider != null) -->Line_26 $$ sb.append(" language=").append(viewProvider.getBaseLanguage().getID())[ CD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_20 $$ sb.append(" underIgnored=").append(indexFacade.isUnderIgnored(file))[ CD ]
Line_5 $$ if (psi != null)-->Line_6 $$ return psi[ CD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_22 $$ sb.append(" parentDir=").append(vDir == null ? "no-vfs" : vDir.isDirectory() ? "has-vfs-dir" : "has-vfs-file").append("/").append(psiDir == null ? "no-psi" : "has-psi")[ CD ]
Line_8 $$ FileViewProvider viewProvider = psiManager.findViewProvider(file)-->Line_24 $$ if (viewProvider != null) [ FD ]
Line_8 $$ FileViewProvider viewProvider = psiManager.findViewProvider(file)-->Line_26 $$ sb.append(" language=").append(viewProvider.getBaseLanguage().getID())[ FD ]
Line_8 $$ FileViewProvider viewProvider = psiManager.findViewProvider(file)-->Line_27 $$ sb.append(" physical=").append(viewProvider.isPhysical())[ FD ]
Line_24 $$ if (viewProvider != null) -->Line_28 $$ sb.append(" rootCount=").append(files.size())[ CD ]
Line_14 $$ StringBuilder sb = new StringBuilder()-->Line_30 $$ sb.append("\n  root=").append(o.getLanguage().getID()).append("/").append(o.getClass().getName())[ FD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_8 $$ FileViewProvider viewProvider = psiManager.findViewProvider(file)[ FD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_16 $$ sb.append("\nproject=").append(project.getName()).append(" default=").append(project.isDefault()).append(" open=").append(project.isOpen())[ CD ]
Line_24 $$ if (viewProvider != null) -->Line_25 $$ List<PsiFile> files = viewProvider.getAllFiles()[ CD ]
Line_14 $$ StringBuilder sb = new StringBuilder()-->Line_28 $$ sb.append(" rootCount=").append(files.size())[ FD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_13 $$ FileIndexFacade indexFacade = FileIndexFacade.getInstance(project)[ CD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_33 $$ LOG.error("no PSI for file '" + file.getName() + "'", new Attachment(file.getPresentableUrl(), sb.toString()))[ FD ]
Line_25 $$ List<PsiFile> files = viewProvider.getAllFiles()-->Line_28 $$ sb.append(" rootCount=").append(files.size())[ FD ]
Line_3 $$ PsiManager psiManager = PsiManager.getInstance(project)-->Line_4 $$ PsiFile psi = psiManager.findFile(file)[ FD ]
Line_4 $$ PsiFile psi = psiManager.findFile(file)-->Line_5 $$ if (psi != null)[ FD ]
Line_14 $$ StringBuilder sb = new StringBuilder()-->Line_19 $$ sb.append("\nisIgnored=").append(ignored)[ FD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_3 $$ PsiManager psiManager = PsiManager.getInstance(project)[ FD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_8 $$ FileViewProvider viewProvider = psiManager.findViewProvider(file)[ CD ]
Line_14 $$ StringBuilder sb = new StringBuilder()-->Line_16 $$ sb.append("\nproject=").append(project.getName()).append(" default=").append(project.isDefault()).append(" open=").append(project.isOpen())[ FD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_10 $$ boolean ignored = !(file instanceof LightVirtualFile) && FileTypeRegistry.getInstance().isFileIgnored(file)[ FD ]
Line_14 $$ StringBuilder sb = new StringBuilder()-->Line_33 $$ LOG.error("no PSI for file '" + file.getName() + "'", new Attachment(file.getPresentableUrl(), sb.toString()))[ FD ]
Line_10 $$ boolean ignored = !(file instanceof LightVirtualFile) && FileTypeRegistry.getInstance().isFileIgnored(file)-->Line_19 $$ sb.append("\nisIgnored=").append(ignored)[ FD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_14 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_14 $$ StringBuilder sb = new StringBuilder()-->Line_15 $$ sb.append("valid=").append(file.isValid()).append(" isDirectory=").append(file.isDirectory()).append(" hasDocument=").append(document != null).append(" length=").append(file.getLength())[ FD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_15 $$ sb.append("valid=").append(file.isValid()).append(" isDirectory=").append(file.isDirectory()).append(" hasDocument=").append(document != null).append(" length=").append(file.getLength())[ FD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_7 $$ FileType fileType = file.getFileType()[ CD ]
Line_11 $$ VirtualFile vDir = file.getParent()-->Line_12 $$ PsiDirectory psiDir = vDir == null ? null : PsiManager.getInstance(project).findDirectory(vDir)[ FD ]
Line_3 $$ PsiManager psiManager = PsiManager.getInstance(project)-->Line_8 $$ FileViewProvider viewProvider = psiManager.findViewProvider(file)[ FD ]
Line_14 $$ StringBuilder sb = new StringBuilder()-->Line_18 $$ sb.append("\nfileType=").append(fileType.getName()).append("/").append(fileType.getClass().getName())[ FD ]
Line_14 $$ StringBuilder sb = new StringBuilder()-->Line_21 $$ sb.append(" inLibrary=").append(indexFacade.isInLibrarySource(file) || indexFacade.isInLibraryClasses(file))[ FD ]
Line_11 $$ VirtualFile vDir = file.getParent()-->Line_22 $$ sb.append(" parentDir=").append(vDir == null ? "no-vfs" : vDir.isDirectory() ? "has-vfs-dir" : "has-vfs-file").append("/").append(psiDir == null ? "no-psi" : "has-psi")[ FD ]
Line_14 $$ StringBuilder sb = new StringBuilder()-->Line_26 $$ sb.append(" language=").append(viewProvider.getBaseLanguage().getID())[ FD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_4 $$ PsiFile psi = psiManager.findFile(file)[ FD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_3 $$ PsiManager psiManager = PsiManager.getInstance(project)[ CD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_12 $$ PsiDirectory psiDir = vDir == null ? null : PsiManager.getInstance(project).findDirectory(vDir)[ CD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_19 $$ sb.append("\nisIgnored=").append(ignored)[ CD ]
Line_14 $$ StringBuilder sb = new StringBuilder()-->Line_23 $$ sb.append("\nviewProvider=").append(viewProvider == null ? "null" : viewProvider.getClass().getName())[ FD ]
Line_14 $$ StringBuilder sb = new StringBuilder()-->Line_20 $$ sb.append(" underIgnored=").append(indexFacade.isUnderIgnored(file))[ FD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_13 $$ FileIndexFacade indexFacade = FileIndexFacade.getInstance(project)[ FD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_21 $$ sb.append(" inLibrary=").append(indexFacade.isInLibrarySource(file) || indexFacade.isInLibraryClasses(file))[ FD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_33 $$ LOG.error("no PSI for file '" + file.getName() + "'", new Attachment(file.getPresentableUrl(), sb.toString()))[ CD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_9 $$ Document document = FileDocumentManager.getInstance().getDocument(file)[ FD ]
Line_7 $$ FileType fileType = file.getFileType()-->Line_18 $$ sb.append("\nfileType=").append(fileType.getName()).append("/").append(fileType.getClass().getName())[ FD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_16 $$ sb.append("\nproject=").append(project.getName()).append(" default=").append(project.isDefault()).append(" open=").append(project.isOpen())[ FD ]
Line_8 $$ FileViewProvider viewProvider = psiManager.findViewProvider(file)-->Line_25 $$ List<PsiFile> files = viewProvider.getAllFiles()[ FD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_9 $$ Document document = FileDocumentManager.getInstance().getDocument(file)[ CD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_11 $$ VirtualFile vDir = file.getParent()[ FD ]
Line_14 $$ StringBuilder sb = new StringBuilder()-->Line_22 $$ sb.append(" parentDir=").append(vDir == null ? "no-vfs" : vDir.isDirectory() ? "has-vfs-dir" : "has-vfs-file").append("/").append(psiDir == null ? "no-psi" : "has-psi")[ FD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_4 $$ PsiFile psi = psiManager.findFile(file)[ CD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_23 $$ sb.append("\nviewProvider=").append(viewProvider == null ? "null" : viewProvider.getClass().getName())[ CD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_5 $$ if (psi != null)[ CD ]
Line_2 $$ public static PsiFile getPsiFile(@NotNull Project project, @NotNull VirtualFile file) -->Line_24 $$ if (viewProvider != null) [ CD ]
