Line_6 $$ final StringBuilder buffer = new StringBuilder()-->Line_8 $$ StringUtil.escapeStringCharacters(key.length(), key, buffer)[ FD ]
Line_12 $$ final PsiExpression newKeyLiteral = JavaPsiFacade.getElementFactory(project).createExpressionFromText(buffer.toString(), null)-->Line_13 $$ psiElement.replace(newKeyLiteral)[ FD ]
Line_6 $$ final StringBuilder buffer = new StringBuilder()-->Line_7 $$ buffer.append('"')[ FD ]
Line_5 $$ final String key = result.first-->Line_8 $$ StringUtil.escapeStringCharacters(key.length(), key, buffer)[ FD ]
Line_2 $$ protected Couple<String> doAction(Project project, PsiElement psiElement, I18nizeQuickFixModel model) -->Line_13 $$ psiElement.replace(newKeyLiteral)[ FD ]
Line_6 $$ final StringBuilder buffer = new StringBuilder()-->Line_9 $$ buffer.append('"')[ FD ]
Line_4 $$ if (result != null && psiElement instanceof PsiLiteralExpression) -->Line_7 $$ buffer.append('"')[ CD ]
Line_2 $$ protected Couple<String> doAction(Project project, PsiElement psiElement, I18nizeQuickFixModel model) -->Line_12 $$ final PsiExpression newKeyLiteral = JavaPsiFacade.getElementFactory(project).createExpressionFromText(buffer.toString(), null)[ FD ]
Line_4 $$ if (result != null && psiElement instanceof PsiLiteralExpression) -->Line_10 $$ final AccessToken token = ApplicationManager.getApplication().acquireWriteActionLock(JavaCreatePropertyFix.class)[ CD ]
Line_4 $$ if (result != null && psiElement instanceof PsiLiteralExpression) -->Line_9 $$ buffer.append('"')[ CD ]
Line_6 $$ final StringBuilder buffer = new StringBuilder()-->Line_12 $$ final PsiExpression newKeyLiteral = JavaPsiFacade.getElementFactory(project).createExpressionFromText(buffer.toString(), null)[ FD ]
Line_2 $$ protected Couple<String> doAction(Project project, PsiElement psiElement, I18nizeQuickFixModel model) -->Line_3 $$ final Couple<String> result = super.doAction(project, psiElement, model)[ CD ]
Line_10 $$ final AccessToken token = ApplicationManager.getApplication().acquireWriteActionLock(JavaCreatePropertyFix.class)-->Line_17 $$ token.finish()[ FD ]
Line_2 $$ protected Couple<String> doAction(Project project, PsiElement psiElement, I18nizeQuickFixModel model) -->Line_20 $$ return result[ CD ]
Line_2 $$ protected Couple<String> doAction(Project project, PsiElement psiElement, I18nizeQuickFixModel model) -->Line_3 $$ final Couple<String> result = super.doAction(project, psiElement, model)[ FD ]
Line_4 $$ if (result != null && psiElement instanceof PsiLiteralExpression) -->Line_5 $$ final String key = result.first[ CD ]
Line_2 $$ protected Couple<String> doAction(Project project, PsiElement psiElement, I18nizeQuickFixModel model) -->Line_4 $$ if (result != null && psiElement instanceof PsiLiteralExpression) [ CD ]
Line_4 $$ if (result != null && psiElement instanceof PsiLiteralExpression) -->Line_6 $$ final StringBuilder buffer = new StringBuilder()[ CD ]
Line_4 $$ if (result != null && psiElement instanceof PsiLiteralExpression) -->Line_8 $$ StringUtil.escapeStringCharacters(key.length(), key, buffer)[ CD ]
