Line_28 $$ JSONObject runJSONObject = runsJSONArray.getJSONObject(i)-->Line_29 $$ String runBuildURL = runJSONObject.getString("url")[ FD ]
Line_27 $$ for (int i = 0; i < runsJSONArray.length(); i++) -->Line_33 $$ JSONObject runBuildURLJSONObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(runBuildURL + "api/json"))[ CD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_21 $$ sb.append(" Failed.</p>")[ CD ]
Line_42 $$ int failureCount = _getUnstableMessage(sb, runBuildURLs)-->Line_44 $$ if (failureCount > 3) [ FD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_12 $$ if (passCount != 1) -->Line_13 $$ sb.append("s")[ CD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_16 $$ sb.append(failCount)[ CD ]
Line_27 $$ for (int i = 0; i < runsJSONArray.length(); i++) -->Line_29 $$ String runBuildURL = runJSONObject.getString("url")[ CD ]
Line_27 $$ for (int i = 0; i < runsJSONArray.length(); i++) -->Line_34 $$ String result = runBuildURLJSONObject.getString("result")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_47 $$ sb.append("/testReport/\\\">here</a> for more failures.</strong>")[ FD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_24 $$ JSONObject jsonObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(buildURL + "api/json"))[ CD ]
Line_44 $$ if (failureCount > 3) -->Line_48 $$ sb.append("</p>")[ CD ]
Line_4 $$ JSONObject testReportJSONObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(buildURL + "testReport/api/json"))-->Line_5 $$ int failCount = testReportJSONObject.getInt("failCount")[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_42 $$ int failureCount = _getUnstableMessage(sb, runBuildURLs)[ FD ]
Line_26 $$ JSONArray runsJSONArray = jsonObject.getJSONArray("runs")-->Line_28 $$ JSONObject runJSONObject = runsJSONArray.getJSONObject(i)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_45 $$ sb.append("<p><strong>Click <a href=\\\"")[ FD ]
Line_44 $$ if (failureCount > 3) -->Line_46 $$ sb.append(buildURL)[ CD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_18 $$ if (failCount != 1) [ CD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_10 $$ sb.append(passCount)[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_50 $$ return sb.toString()[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_16 $$ sb.append(failCount)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_43 $$ sb.append("</ol>")[ FD ]
Line_35 $$ if (!result.equals("SUCCESS")) -->Line_36 $$ runBuildURLs.add(runBuildURL)[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_9 $$ sb.append("<p>")[ FD ]
Line_29 $$ String runBuildURL = runJSONObject.getString("url")-->Line_36 $$ runBuildURLs.add(runBuildURL)[ FD ]
Line_26 $$ JSONArray runsJSONArray = jsonObject.getJSONArray("runs")-->Line_27 $$ for (int i = 0; i < runsJSONArray.length(); i++) [ FD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_9 $$ sb.append("<p>")[ CD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_11 $$ sb.append(" Test")[ CD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_12 $$ if (passCount != 1) [ CD ]
Line_34 $$ String result = runBuildURLJSONObject.getString("result")-->Line_35 $$ if (!result.equals("SUCCESS")) [ FD ]
Line_24 $$ JSONObject jsonObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(buildURL + "api/json"))-->Line_30 $$ if (!runBuildURL.endsWith("/" + jsonObject.getInt("number") + "/")) [ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_11 $$ sb.append(" Test")[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_22 $$ sb.append("<ol>")[ FD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_43 $$ sb.append("</ol>")[ CD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_25 $$ if (jsonObject.has("runs")) [ CD ]
Line_27 $$ for (int i = 0; i < runsJSONArray.length(); i++) -->Line_28 $$ JSONObject runJSONObject = runsJSONArray.getJSONObject(i)[ CD ]
Line_27 $$ for (int i = 0; i < runsJSONArray.length(); i++) -->Line_28 $$ JSONObject runJSONObject = runsJSONArray.getJSONObject(i)[ FD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_15 $$ sb.append(" Passed.<br />")[ CD ]
Line_5 $$ int failCount = testReportJSONObject.getInt("failCount")-->Line_16 $$ sb.append(failCount)[ FD ]
Line_44 $$ if (failureCount > 3) -->Line_47 $$ sb.append("/testReport/\\\">here</a> for more failures.</strong>")[ CD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_50 $$ return sb.toString()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_46 $$ sb.append(buildURL)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_10 $$ sb.append(passCount)[ FD ]
Line_24 $$ JSONObject jsonObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(buildURL + "api/json"))-->Line_25 $$ if (jsonObject.has("runs")) [ FD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_6 $$ int totalCount = testReportJSONObject.getInt("totalCount")[ CD ]
Line_27 $$ for (int i = 0; i < runsJSONArray.length(); i++) -->Line_30 $$ if (!runBuildURL.endsWith("/" + jsonObject.getInt("number") + "/")) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_17 $$ sb.append(" Test")[ FD ]
Line_25 $$ if (jsonObject.has("runs")) -->Line_26 $$ JSONArray runsJSONArray = jsonObject.getJSONArray("runs")[ CD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_22 $$ sb.append("<ol>")[ CD ]
Line_29 $$ String runBuildURL = runJSONObject.getString("url")-->Line_30 $$ if (!runBuildURL.endsWith("/" + jsonObject.getInt("number") + "/")) [ FD ]
Line_23 $$ List<String> runBuildURLs = new ArrayList()-->Line_42 $$ int failureCount = _getUnstableMessage(sb, runBuildURLs)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_48 $$ sb.append("</p>")[ FD ]
Line_23 $$ List<String> runBuildURLs = new ArrayList()-->Line_36 $$ runBuildURLs.add(runBuildURL)[ FD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_4 $$ JSONObject testReportJSONObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(buildURL + "testReport/api/json"))[ CD ]
Line_27 $$ for (int i = 0; i < runsJSONArray.length(); i++) -->Line_35 $$ if (!result.equals("SUCCESS")) [ CD ]
Line_25 $$ if (jsonObject.has("runs")) -->Line_27 $$ for (int i = 0; i < runsJSONArray.length(); i++) [ CD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_40 $$ runBuildURLs.add(buildURL)[ FD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_23 $$ List<String> runBuildURLs = new ArrayList()[ CD ]
Line_18 $$ if (failCount != 1) -->Line_19 $$ sb.append("s")[ CD ]
Line_44 $$ if (failureCount > 3) -->Line_45 $$ sb.append("<p><strong>Click <a href=\\\"")[ CD ]
Line_33 $$ JSONObject runBuildURLJSONObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(runBuildURL + "api/json"))-->Line_34 $$ String result = runBuildURLJSONObject.getString("result")[ FD ]
Line_25 $$ if (jsonObject.has("runs")) -->Line_40 $$ runBuildURLs.add(buildURL)[ CD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_44 $$ if (failureCount > 3) [ CD ]
Line_7 $$ int passCount = totalCount - failCount-->Line_12 $$ if (passCount != 1) [ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_21 $$ sb.append(" Failed.</p>")[ FD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_42 $$ int failureCount = _getUnstableMessage(sb, runBuildURLs)[ CD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_7 $$ int passCount = totalCount - failCount[ CD ]
Line_5 $$ int failCount = testReportJSONObject.getInt("failCount")-->Line_18 $$ if (failCount != 1) [ FD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_17 $$ sb.append(" Test")[ CD ]
Line_7 $$ int passCount = totalCount - failCount-->Line_10 $$ sb.append(passCount)[ FD ]
Line_23 $$ List<String> runBuildURLs = new ArrayList()-->Line_40 $$ runBuildURLs.add(buildURL)[ FD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_46 $$ sb.append(buildURL)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_8 $$ sb.append("<h6>Job Results:</h6>")[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_15 $$ sb.append(" Passed.<br />")[ FD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_8 $$ sb.append("<h6>Job Results:</h6>")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_19 $$ sb.append("s")[ FD ]
Line_2 $$ public static String getUnstableMessage(String buildURL) throws Exception -->Line_5 $$ int failCount = testReportJSONObject.getInt("failCount")[ CD ]
Line_4 $$ JSONObject testReportJSONObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(buildURL + "testReport/api/json"))-->Line_6 $$ int totalCount = testReportJSONObject.getInt("totalCount")[ FD ]
Line_24 $$ JSONObject jsonObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(buildURL + "api/json"))-->Line_26 $$ JSONArray runsJSONArray = jsonObject.getJSONArray("runs")[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_13 $$ sb.append("s")[ FD ]
