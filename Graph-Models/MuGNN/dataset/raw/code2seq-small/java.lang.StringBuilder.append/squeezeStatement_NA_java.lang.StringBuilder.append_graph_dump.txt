Line_2 $$ public static String squeezeStatement(String sql) -->Line_3 $$ TokenSource tokens = getLexer(sql, ImmutableSet.<String>of())[ FD ]
Line_6 $$ Token token = tokens.nextToken()-->Line_10 $$ if (token.getType() == SqlBaseLexer.WS) [ FD ]
Line_2 $$ public static String squeezeStatement(String sql) -->Line_16 $$ return sb.toString().trim()[ CD ]
Line_5 $$ while (true) -->Line_7 $$ if (token.getType() == Token.EOF) [ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_11 $$ sb.append(' ')[ FD ]
Line_2 $$ public static String squeezeStatement(String sql) -->Line_4 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_10 $$ if (token.getType() == SqlBaseLexer.WS) -->Line_13 $$ sb.append(token.getText())[ CD ]
Line_5 $$ while (true) -->Line_6 $$ Token token = tokens.nextToken()[ CD ]
Line_2 $$ public static String squeezeStatement(String sql) -->Line_5 $$ while (true) [ CD ]
Line_5 $$ while (true) -->Line_10 $$ if (token.getType() == SqlBaseLexer.WS) [ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_16 $$ return sb.toString().trim()[ FD ]
Line_3 $$ TokenSource tokens = getLexer(sql, ImmutableSet.<String>of())-->Line_6 $$ Token token = tokens.nextToken()[ FD ]
Line_10 $$ if (token.getType() == SqlBaseLexer.WS) -->Line_11 $$ sb.append(' ')[ CD ]
Line_2 $$ public static String squeezeStatement(String sql) -->Line_3 $$ TokenSource tokens = getLexer(sql, ImmutableSet.<String>of())[ CD ]
Line_6 $$ Token token = tokens.nextToken()-->Line_7 $$ if (token.getType() == Token.EOF) [ FD ]
Line_6 $$ Token token = tokens.nextToken()-->Line_13 $$ sb.append(token.getText())[ FD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_13 $$ sb.append(token.getText())[ FD ]
