Line_2 $$ public boolean process(final Set<? extends TypeElement> annotations, final RoundEnvironment roundEnvironment) -->Line_18 $$ return ALLOW_OTHER_PROCESSORS_TO_CLAIM_ANNOTATIONS[ CD ]
Line_2 $$ public boolean process(final Set<? extends TypeElement> annotations, final RoundEnvironment roundEnvironment) -->Line_10 $$ Set<? extends Element> elements = roundEnvironment.getRootElements()[ FD ]
Line_11 $$ for (Element element : elements) -->Line_13 $$ context.logMessage(Diagnostic.Kind.OTHER, "Processing annotated class " + element.toString())[ FD ]
Line_11 $$ for (Element element : elements) -->Line_14 $$ handleRootElementAnnotationMirrors(element)[ FD ]
Line_11 $$ for (Element element : elements) -->Line_12 $$ if (isJPAEntity(element)) [ FD ]
Line_2 $$ public boolean process(final Set<? extends TypeElement> annotations, final RoundEnvironment roundEnvironment) -->Line_3 $$ if (roundEnvironment.processingOver() || annotations.size() == 0) [ CD ]
Line_2 $$ public boolean process(final Set<? extends TypeElement> annotations, final RoundEnvironment roundEnvironment) -->Line_3 $$ if (roundEnvironment.processingOver() || annotations.size() == 0) [ FD ]
Line_2 $$ public boolean process(final Set<? extends TypeElement> annotations, final RoundEnvironment roundEnvironment) -->Line_6 $$ if (context.isFullyXmlConfigured()) [ CD ]
Line_2 $$ public boolean process(final Set<? extends TypeElement> annotations, final RoundEnvironment roundEnvironment) -->Line_10 $$ Set<? extends Element> elements = roundEnvironment.getRootElements()[ CD ]
Line_12 $$ if (isJPAEntity(element)) -->Line_13 $$ context.logMessage(Diagnostic.Kind.OTHER, "Processing annotated class " + element.toString())[ CD ]
Line_12 $$ if (isJPAEntity(element)) -->Line_14 $$ handleRootElementAnnotationMirrors(element)[ CD ]
Line_6 $$ if (context.isFullyXmlConfigured()) -->Line_8 $$ return ALLOW_OTHER_PROCESSORS_TO_CLAIM_ANNOTATIONS[ CD ]
Line_6 $$ if (context.isFullyXmlConfigured()) -->Line_7 $$ context.logMessage(Diagnostic.Kind.OTHER, "Skipping the processing of annotations since persistence unit is purely xml configured.")[ CD ]
Line_3 $$ if (roundEnvironment.processingOver() || annotations.size() == 0) -->Line_4 $$ return ALLOW_OTHER_PROCESSORS_TO_CLAIM_ANNOTATIONS[ CD ]
Line_2 $$ public boolean process(final Set<? extends TypeElement> annotations, final RoundEnvironment roundEnvironment) -->Line_17 $$ createMetaModelClasses()[ CD ]
