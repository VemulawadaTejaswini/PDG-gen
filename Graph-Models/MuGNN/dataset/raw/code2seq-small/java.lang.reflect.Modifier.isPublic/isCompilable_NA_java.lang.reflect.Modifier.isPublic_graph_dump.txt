Line_18 $$ if (executor.didArgumentConversionOccur()) -->Line_19 $$ return false[ CD ]
Line_17 $$ ReflectiveMethodExecutor executor = (ReflectiveMethodExecutor) executorToCheck.get()-->Line_21 $$ Method method = executor.getMethod()[ FD ]
Line_13 $$ if (!child.isCompilable()) -->Line_14 $$ return false[ CD ]
Line_8 $$ CachedMethodExecutor executorToCheck = this.cachedExecutor-->Line_9 $$ if (executorToCheck == null || !(executorToCheck.get() instanceof ReflectiveMethodExecutor)) [ FD ]
Line_23 $$ if (!Modifier.isPublic(clazz.getModifiers()) && executor.getPublicDeclaringClass() == null) -->Line_24 $$ return false[ CD ]
Line_8 $$ CachedMethodExecutor executorToCheck = this.cachedExecutor-->Line_17 $$ ReflectiveMethodExecutor executor = (ReflectiveMethodExecutor) executorToCheck.get()[ FD ]
Line_21 $$ Method method = executor.getMethod()-->Line_22 $$ Class<?> clazz = method.getDeclaringClass()[ FD ]
Line_17 $$ ReflectiveMethodExecutor executor = (ReflectiveMethodExecutor) executorToCheck.get()-->Line_18 $$ if (executor.didArgumentConversionOccur()) [ FD ]
Line_17 $$ ReflectiveMethodExecutor executor = (ReflectiveMethodExecutor) executorToCheck.get()-->Line_23 $$ if (!Modifier.isPublic(clazz.getModifiers()) && executor.getPublicDeclaringClass() == null) [ FD ]
Line_22 $$ Class<?> clazz = method.getDeclaringClass()-->Line_23 $$ if (!Modifier.isPublic(clazz.getModifiers()) && executor.getPublicDeclaringClass() == null) [ FD ]
Line_9 $$ if (executorToCheck == null || !(executorToCheck.get() instanceof ReflectiveMethodExecutor)) -->Line_10 $$ return false[ CD ]
Line_12 $$ for (SpelNodeImpl child : this.children) -->Line_13 $$ if (!child.isCompilable()) [ FD ]
