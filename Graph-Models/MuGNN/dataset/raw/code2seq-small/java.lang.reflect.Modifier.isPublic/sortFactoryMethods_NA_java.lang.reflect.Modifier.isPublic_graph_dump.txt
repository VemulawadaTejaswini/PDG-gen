Line_3 $$ Arrays.sort(factoryMethods, new Comparator<Method>() -->Line_7 $$ if (p1 != p2) [ CD ]
Line_3 $$ Arrays.sort(factoryMethods, new Comparator<Method>() -->Line_6 $$ boolean p2 = Modifier.isPublic(fm2.getModifiers())[ FD ]
Line_3 $$ Arrays.sort(factoryMethods, new Comparator<Method>() -->Line_11 $$ int c2pl = fm2.getParameterTypes().length[ FD ]
Line_3 $$ Arrays.sort(factoryMethods, new Comparator<Method>() -->Line_11 $$ int c2pl = fm2.getParameterTypes().length[ CD ]
Line_3 $$ Arrays.sort(factoryMethods, new Comparator<Method>() -->Line_5 $$ boolean p1 = Modifier.isPublic(fm1.getModifiers())[ CD ]
Line_2 $$ public static void sortFactoryMethods(Method[] factoryMethods) -->Line_3 $$ Arrays.sort(factoryMethods, new Comparator<Method>() [ CD ]
Line_3 $$ Arrays.sort(factoryMethods, new Comparator<Method>() -->Line_10 $$ int c1pl = fm1.getParameterTypes().length[ CD ]
Line_3 $$ Arrays.sort(factoryMethods, new Comparator<Method>() -->Line_6 $$ boolean p2 = Modifier.isPublic(fm2.getModifiers())[ CD ]
Line_5 $$ boolean p1 = Modifier.isPublic(fm1.getModifiers())-->Line_7 $$ if (p1 != p2) [ FD ]
Line_3 $$ Arrays.sort(factoryMethods, new Comparator<Method>() -->Line_12 $$ return (c1pl < c2pl ? 1 : (c1pl > c2pl ? -1 : 0))[ CD ]
Line_3 $$ Arrays.sort(factoryMethods, new Comparator<Method>() -->Line_5 $$ boolean p1 = Modifier.isPublic(fm1.getModifiers())[ FD ]
Line_3 $$ Arrays.sort(factoryMethods, new Comparator<Method>() -->Line_10 $$ int c1pl = fm1.getParameterTypes().length[ FD ]
Line_7 $$ if (p1 != p2) -->Line_8 $$ return (p1 ? -1 : 1)[ CD ]
Line_2 $$ public static void sortFactoryMethods(Method[] factoryMethods) -->Line_3 $$ Arrays.sort(factoryMethods, new Comparator<Method>() [ FD ]
Line_6 $$ boolean p2 = Modifier.isPublic(fm2.getModifiers())-->Line_7 $$ if (p1 != p2) [ FD ]
