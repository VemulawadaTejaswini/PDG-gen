Line_2 $$ private void ensureNoProtectedOrPrivateMethods(ModelSchemaExtractionContext<?> extractionContext, Class<?> typeClass) -->Line_8 $$ extractionContext.add(method, "Protected and private methods are not supported.")[ FD ]
Line_2 $$ private void ensureNoProtectedOrPrivateMethods(ModelSchemaExtractionContext<?> extractionContext, Class<?> typeClass) -->Line_3 $$ Method[] methods = typeClass.getDeclaredMethods()[ CD ]
Line_5 $$ for (Method method : methods) -->Line_7 $$ if (!method.isSynthetic() && !Modifier.isPublic(modifiers) && !Modifier.isStatic(modifiers)) [ FD ]
Line_2 $$ private void ensureNoProtectedOrPrivateMethods(ModelSchemaExtractionContext<?> extractionContext, Class<?> typeClass) -->Line_4 $$ Arrays.sort(methods, Ordering.usingToString())[ CD ]
Line_7 $$ if (!method.isSynthetic() && !Modifier.isPublic(modifiers) && !Modifier.isStatic(modifiers)) -->Line_8 $$ extractionContext.add(method, "Protected and private methods are not supported.")[ CD ]
Line_5 $$ for (Method method : methods) -->Line_8 $$ extractionContext.add(method, "Protected and private methods are not supported.")[ FD ]
Line_6 $$ int modifiers = method.getModifiers()-->Line_7 $$ if (!method.isSynthetic() && !Modifier.isPublic(modifiers) && !Modifier.isStatic(modifiers)) [ FD ]
Line_5 $$ for (Method method : methods) -->Line_6 $$ int modifiers = method.getModifiers()[ FD ]
Line_2 $$ private void ensureNoProtectedOrPrivateMethods(ModelSchemaExtractionContext<?> extractionContext, Class<?> typeClass) -->Line_3 $$ Method[] methods = typeClass.getDeclaredMethods()[ FD ]
Line_3 $$ Method[] methods = typeClass.getDeclaredMethods()-->Line_4 $$ Arrays.sort(methods, Ordering.usingToString())[ FD ]
