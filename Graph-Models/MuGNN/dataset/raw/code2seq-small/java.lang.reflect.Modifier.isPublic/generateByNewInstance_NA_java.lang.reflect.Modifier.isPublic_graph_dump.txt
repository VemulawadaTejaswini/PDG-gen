Line_2 $$ private static Object generateByNewInstance(Class clazz) throws Exception -->Line_23 $$ for (int i = 0; i < args.length; i++) [ CD ]
Line_3 $$ Object ret = typeValueCache.get(clazz)-->Line_4 $$ if (ret != null) [ FD ]
Line_10 $$ int mod = m.getModifiers()-->Line_11 $$ if (m.getDeclaringClass().equals(clazz) && Modifier.isPublic(mod) && Modifier.isStatic(mod) && m.getName().equals("newInstance")) [ FD ]
Line_2 $$ private static Object generateByNewInstance(Class clazz) throws Exception -->Line_27 $$ typeValueCache.put(clazz, ret)[ FD ]
Line_7 $$ Method newInstance = null-->Line_19 $$ if (newInstance == null) [ FD ]
Line_8 $$ Type[] paramTypes = new Type[0]-->Line_15 $$ paramTypes = pts[ FD ]
Line_14 $$ newInstance = m-->Line_26 $$ ret = newInstance.invoke(null, args)[ FD ]
Line_2 $$ private static Object generateByNewInstance(Class clazz) throws Exception -->Line_3 $$ Object ret = typeValueCache.get(clazz)[ CD ]
Line_7 $$ Method newInstance = null-->Line_14 $$ newInstance = m[ FD ]
Line_3 $$ Object ret = typeValueCache.get(clazz)-->Line_27 $$ typeValueCache.put(clazz, ret)[ FD ]
Line_2 $$ private static Object generateByNewInstance(Class clazz) throws Exception -->Line_11 $$ if (m.getDeclaringClass().equals(clazz) && Modifier.isPublic(mod) && Modifier.isStatic(mod) && m.getName().equals("newInstance")) [ FD ]
Line_3 $$ Object ret = typeValueCache.get(clazz)-->Line_26 $$ ret = newInstance.invoke(null, args)[ FD ]
Line_14 $$ newInstance = m-->Line_19 $$ if (newInstance == null) [ FD ]
Line_9 $$ for (Method m : clazz.getMethods()) -->Line_12 $$ Type[] pts = m.getGenericParameterTypes()[ FD ]
Line_2 $$ private static Object generateByNewInstance(Class clazz) throws Exception -->Line_7 $$ Method newInstance = null[ CD ]
Line_2 $$ private static Object generateByNewInstance(Class clazz) throws Exception -->Line_9 $$ for (Method m : clazz.getMethods()) [ FD ]
Line_2 $$ private static Object generateByNewInstance(Class clazz) throws Exception -->Line_28 $$ return ret[ CD ]
Line_9 $$ for (Method m : clazz.getMethods()) -->Line_14 $$ newInstance = m[ FD ]
Line_11 $$ if (m.getDeclaringClass().equals(clazz) && Modifier.isPublic(mod) && Modifier.isStatic(mod) && m.getName().equals("newInstance")) -->Line_13 $$ if (newInstance == null || (pts.length > paramTypes.length)) [ CD ]
Line_12 $$ Type[] pts = m.getGenericParameterTypes()-->Line_15 $$ paramTypes = pts[ FD ]
Line_2 $$ private static Object generateByNewInstance(Class clazz) throws Exception -->Line_20 $$ throw new IllegalArgumentException("type " + clazz.getName() + " does not have newInstance method")[ FD ]
Line_23 $$ for (int i = 0; i < args.length; i++) -->Line_24 $$ args[i] = genTypeValue(paramTypes[i])[ CD ]
Line_26 $$ ret = newInstance.invoke(null, args)-->Line_27 $$ typeValueCache.put(clazz, ret)[ FD ]
Line_9 $$ for (Method m : clazz.getMethods()) -->Line_10 $$ int mod = m.getModifiers()[ FD ]
Line_13 $$ if (newInstance == null || (pts.length > paramTypes.length)) -->Line_15 $$ paramTypes = pts[ CD ]
Line_2 $$ private static Object generateByNewInstance(Class clazz) throws Exception -->Line_3 $$ Object ret = typeValueCache.get(clazz)[ FD ]
Line_13 $$ if (newInstance == null || (pts.length > paramTypes.length)) -->Line_14 $$ newInstance = m[ CD ]
Line_2 $$ private static Object generateByNewInstance(Class clazz) throws Exception -->Line_4 $$ if (ret != null) [ CD ]
Line_9 $$ for (Method m : clazz.getMethods()) -->Line_11 $$ if (m.getDeclaringClass().equals(clazz) && Modifier.isPublic(mod) && Modifier.isStatic(mod) && m.getName().equals("newInstance")) [ FD ]
Line_4 $$ if (ret != null) -->Line_5 $$ return ret[ CD ]
Line_11 $$ if (m.getDeclaringClass().equals(clazz) && Modifier.isPublic(mod) && Modifier.isStatic(mod) && m.getName().equals("newInstance")) -->Line_12 $$ Type[] pts = m.getGenericParameterTypes()[ CD ]
Line_2 $$ private static Object generateByNewInstance(Class clazz) throws Exception -->Line_19 $$ if (newInstance == null) [ CD ]
Line_2 $$ private static Object generateByNewInstance(Class clazz) throws Exception -->Line_27 $$ typeValueCache.put(clazz, ret)[ CD ]
Line_22 $$ Object[] args = new Object[paramTypes.length]-->Line_26 $$ ret = newInstance.invoke(null, args)[ FD ]
Line_2 $$ private static Object generateByNewInstance(Class clazz) throws Exception -->Line_8 $$ Type[] paramTypes = new Type[0][ CD ]
Line_2 $$ private static Object generateByNewInstance(Class clazz) throws Exception -->Line_26 $$ ret = newInstance.invoke(null, args)[ CD ]
Line_2 $$ private static Object generateByNewInstance(Class clazz) throws Exception -->Line_22 $$ Object[] args = new Object[paramTypes.length][ CD ]
Line_7 $$ Method newInstance = null-->Line_26 $$ ret = newInstance.invoke(null, args)[ FD ]
