Line_2 $$ protected TransactionAttribute computeTransactionAttribute(Method method, Class<?> targetClass) -->Line_8 $$ specificMethod = BridgeMethodResolver.findBridgedMethod(specificMethod)[ CD ]
Line_9 $$ TransactionAttribute txAtt = findTransactionAttribute(specificMethod)-->Line_14 $$ if (txAtt != null) [ FD ]
Line_9 $$ TransactionAttribute txAtt = findTransactionAttribute(specificMethod)-->Line_18 $$ txAtt = findTransactionAttribute(method)[ FD ]
Line_8 $$ specificMethod = BridgeMethodResolver.findBridgedMethod(specificMethod)-->Line_9 $$ TransactionAttribute txAtt = findTransactionAttribute(specificMethod)[ FD ]
Line_2 $$ protected TransactionAttribute computeTransactionAttribute(Method method, Class<?> targetClass) -->Line_22 $$ return findTransactionAttribute(method.getDeclaringClass())[ FD ]
Line_2 $$ protected TransactionAttribute computeTransactionAttribute(Method method, Class<?> targetClass) -->Line_7 $$ Method specificMethod = ClassUtils.getMostSpecificMethod(method, userClass)[ CD ]
Line_2 $$ protected TransactionAttribute computeTransactionAttribute(Method method, Class<?> targetClass) -->Line_10 $$ if (txAtt != null) [ CD ]
Line_17 $$ if (specificMethod != method) -->Line_22 $$ return findTransactionAttribute(method.getDeclaringClass())[ CD ]
Line_2 $$ protected TransactionAttribute computeTransactionAttribute(Method method, Class<?> targetClass) -->Line_17 $$ if (specificMethod != method) [ FD ]
Line_9 $$ TransactionAttribute txAtt = findTransactionAttribute(specificMethod)-->Line_13 $$ txAtt = findTransactionAttribute(specificMethod.getDeclaringClass())[ FD ]
Line_10 $$ if (txAtt != null) -->Line_11 $$ return txAtt[ CD ]
Line_6 $$ Class<?> userClass = ClassUtils.getUserClass(targetClass)-->Line_7 $$ Method specificMethod = ClassUtils.getMostSpecificMethod(method, userClass)[ FD ]
Line_7 $$ Method specificMethod = ClassUtils.getMostSpecificMethod(method, userClass)-->Line_9 $$ TransactionAttribute txAtt = findTransactionAttribute(specificMethod)[ FD ]
Line_2 $$ protected TransactionAttribute computeTransactionAttribute(Method method, Class<?> targetClass) -->Line_6 $$ Class<?> userClass = ClassUtils.getUserClass(targetClass)[ FD ]
Line_17 $$ if (specificMethod != method) -->Line_18 $$ txAtt = findTransactionAttribute(method)[ CD ]
Line_2 $$ protected TransactionAttribute computeTransactionAttribute(Method method, Class<?> targetClass) -->Line_6 $$ Class<?> userClass = ClassUtils.getUserClass(targetClass)[ CD ]
Line_7 $$ Method specificMethod = ClassUtils.getMostSpecificMethod(method, userClass)-->Line_17 $$ if (specificMethod != method) [ FD ]
Line_8 $$ specificMethod = BridgeMethodResolver.findBridgedMethod(specificMethod)-->Line_17 $$ if (specificMethod != method) [ FD ]
Line_2 $$ protected TransactionAttribute computeTransactionAttribute(Method method, Class<?> targetClass) -->Line_13 $$ txAtt = findTransactionAttribute(specificMethod.getDeclaringClass())[ CD ]
Line_2 $$ protected TransactionAttribute computeTransactionAttribute(Method method, Class<?> targetClass) -->Line_24 $$ return null[ CD ]
Line_14 $$ if (txAtt != null) -->Line_15 $$ return txAtt[ CD ]
Line_2 $$ protected TransactionAttribute computeTransactionAttribute(Method method, Class<?> targetClass) -->Line_3 $$ if (allowPublicMethodsOnly() && !Modifier.isPublic(method.getModifiers())) [ CD ]
Line_2 $$ protected TransactionAttribute computeTransactionAttribute(Method method, Class<?> targetClass) -->Line_3 $$ if (allowPublicMethodsOnly() && !Modifier.isPublic(method.getModifiers())) [ FD ]
Line_19 $$ if (txAtt != null) -->Line_20 $$ return txAtt[ CD ]
Line_13 $$ txAtt = findTransactionAttribute(specificMethod.getDeclaringClass())-->Line_19 $$ if (txAtt != null) [ FD ]
Line_7 $$ Method specificMethod = ClassUtils.getMostSpecificMethod(method, userClass)-->Line_13 $$ txAtt = findTransactionAttribute(specificMethod.getDeclaringClass())[ FD ]
Line_2 $$ protected TransactionAttribute computeTransactionAttribute(Method method, Class<?> targetClass) -->Line_7 $$ Method specificMethod = ClassUtils.getMostSpecificMethod(method, userClass)[ FD ]
Line_2 $$ protected TransactionAttribute computeTransactionAttribute(Method method, Class<?> targetClass) -->Line_17 $$ if (specificMethod != method) [ CD ]
Line_13 $$ txAtt = findTransactionAttribute(specificMethod.getDeclaringClass())-->Line_18 $$ txAtt = findTransactionAttribute(method)[ FD ]
Line_8 $$ specificMethod = BridgeMethodResolver.findBridgedMethod(specificMethod)-->Line_13 $$ txAtt = findTransactionAttribute(specificMethod.getDeclaringClass())[ FD ]
Line_3 $$ if (allowPublicMethodsOnly() && !Modifier.isPublic(method.getModifiers())) -->Line_4 $$ return null[ CD ]
Line_17 $$ if (specificMethod != method) -->Line_19 $$ if (txAtt != null) [ CD ]
Line_2 $$ protected TransactionAttribute computeTransactionAttribute(Method method, Class<?> targetClass) -->Line_14 $$ if (txAtt != null) [ CD ]
Line_9 $$ TransactionAttribute txAtt = findTransactionAttribute(specificMethod)-->Line_19 $$ if (txAtt != null) [ FD ]
Line_9 $$ TransactionAttribute txAtt = findTransactionAttribute(specificMethod)-->Line_10 $$ if (txAtt != null) [ FD ]
Line_18 $$ txAtt = findTransactionAttribute(method)-->Line_19 $$ if (txAtt != null) [ FD ]
Line_2 $$ protected TransactionAttribute computeTransactionAttribute(Method method, Class<?> targetClass) -->Line_9 $$ TransactionAttribute txAtt = findTransactionAttribute(specificMethod)[ CD ]
Line_7 $$ Method specificMethod = ClassUtils.getMostSpecificMethod(method, userClass)-->Line_8 $$ specificMethod = BridgeMethodResolver.findBridgedMethod(specificMethod)[ FD ]
Line_2 $$ protected TransactionAttribute computeTransactionAttribute(Method method, Class<?> targetClass) -->Line_18 $$ txAtt = findTransactionAttribute(method)[ FD ]
Line_13 $$ txAtt = findTransactionAttribute(specificMethod.getDeclaringClass())-->Line_14 $$ if (txAtt != null) [ FD ]
