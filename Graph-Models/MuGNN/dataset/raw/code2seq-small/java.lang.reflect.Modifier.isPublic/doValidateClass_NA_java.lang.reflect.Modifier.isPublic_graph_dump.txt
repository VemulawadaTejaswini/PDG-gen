Line_10 $$ int mod = method.getModifiers()-->Line_12 $$ if (Modifier.isFinal(mod)) [ FD ]
Line_10 $$ int mod = method.getModifiers()-->Line_14 $$ if (!Modifier.isPublic(mod) && !Modifier.isProtected(mod) && !Modifier.isPrivate(mod) && proxyClassLoader != null && proxySuperClass.getClassLoader() != proxyClassLoader) [ FD ]
Line_10 $$ int mod = method.getModifiers()-->Line_11 $$ if (!Modifier.isStatic(mod)) [ FD ]
Line_11 $$ if (!Modifier.isStatic(mod)) -->Line_12 $$ if (Modifier.isFinal(mod)) [ CD ]
Line_7 $$ if (Object.class != proxySuperClass) -->Line_8 $$ Method[] methods = proxySuperClass.getDeclaredMethods()[ CD ]
Line_9 $$ for (Method method : methods) -->Line_10 $$ int mod = method.getModifiers()[ FD ]
Line_12 $$ if (Modifier.isFinal(mod)) -->Line_14 $$ if (!Modifier.isPublic(mod) && !Modifier.isProtected(mod) && !Modifier.isPrivate(mod) && proxyClassLoader != null && proxySuperClass.getClassLoader() != proxyClassLoader) [ CD ]
Line_7 $$ if (Object.class != proxySuperClass) -->Line_19 $$ doValidateClass(proxySuperClass.getSuperclass(), proxyClassLoader)[ CD ]
Line_12 $$ if (Modifier.isFinal(mod)) -->Line_13 $$ logger.info("Unable to proxy method [" + method + "] because it is final: " + "All calls to this method via a proxy will NOT be routed to the target instance.")[ CD ]
Line_14 $$ if (!Modifier.isPublic(mod) && !Modifier.isProtected(mod) && !Modifier.isPrivate(mod) && proxyClassLoader != null && proxySuperClass.getClassLoader() != proxyClassLoader) -->Line_15 $$ logger.info("Unable to proxy method [" + method + "] because it is package-visible " + "across different ClassLoaders: All calls to this method via a proxy will " + "NOT be routed to the target instance.")[ CD ]
