Line_6 $$ int mod = method.getModifiers()-->Line_7 $$ if (!Modifier.isStatic(mod)) [ FD ]
Line_2 $$ private void doValidateClass(Class<?> proxySuperClass, ClassLoader proxyClassLoader) -->Line_3 $$ if (Object.class != proxySuperClass) [ FD ]
Line_2 $$ private void doValidateClass(Class<?> proxySuperClass, ClassLoader proxyClassLoader) -->Line_15 $$ doValidateClass(proxySuperClass.getSuperclass(), proxyClassLoader)[ FD ]
Line_5 $$ for (Method method : methods) -->Line_6 $$ int mod = method.getModifiers()[ FD ]
Line_2 $$ private void doValidateClass(Class<?> proxySuperClass, ClassLoader proxyClassLoader) -->Line_4 $$ Method[] methods = proxySuperClass.getDeclaredMethods()[ FD ]
Line_2 $$ private void doValidateClass(Class<?> proxySuperClass, ClassLoader proxyClassLoader) -->Line_10 $$ if (!Modifier.isPublic(mod) && !Modifier.isProtected(mod) && !Modifier.isPrivate(mod) && proxyClassLoader != null && proxySuperClass.getClassLoader() != proxyClassLoader) [ FD ]
Line_3 $$ if (Object.class != proxySuperClass) -->Line_15 $$ doValidateClass(proxySuperClass.getSuperclass(), proxyClassLoader)[ CD ]
Line_6 $$ int mod = method.getModifiers()-->Line_10 $$ if (!Modifier.isPublic(mod) && !Modifier.isProtected(mod) && !Modifier.isPrivate(mod) && proxyClassLoader != null && proxySuperClass.getClassLoader() != proxyClassLoader) [ FD ]
Line_3 $$ if (Object.class != proxySuperClass) -->Line_4 $$ Method[] methods = proxySuperClass.getDeclaredMethods()[ CD ]
Line_7 $$ if (!Modifier.isStatic(mod)) -->Line_8 $$ if (Modifier.isFinal(mod)) [ CD ]
Line_10 $$ if (!Modifier.isPublic(mod) && !Modifier.isProtected(mod) && !Modifier.isPrivate(mod) && proxyClassLoader != null && proxySuperClass.getClassLoader() != proxyClassLoader) -->Line_11 $$ logger.info("Unable to proxy method [" + method + "] because it is package-visible " + "across different ClassLoaders: All calls to this method via a proxy will " + "NOT be routed to the target instance.")[ CD ]
Line_2 $$ private void doValidateClass(Class<?> proxySuperClass, ClassLoader proxyClassLoader) -->Line_3 $$ if (Object.class != proxySuperClass) [ CD ]
Line_6 $$ int mod = method.getModifiers()-->Line_8 $$ if (Modifier.isFinal(mod)) [ FD ]
Line_8 $$ if (Modifier.isFinal(mod)) -->Line_9 $$ logger.info("Unable to proxy method [" + method + "] because it is final: " + "All calls to this method via a proxy will NOT be routed to the target instance.")[ CD ]
Line_8 $$ if (Modifier.isFinal(mod)) -->Line_10 $$ if (!Modifier.isPublic(mod) && !Modifier.isProtected(mod) && !Modifier.isPrivate(mod) && proxyClassLoader != null && proxySuperClass.getClassLoader() != proxyClassLoader) [ CD ]
