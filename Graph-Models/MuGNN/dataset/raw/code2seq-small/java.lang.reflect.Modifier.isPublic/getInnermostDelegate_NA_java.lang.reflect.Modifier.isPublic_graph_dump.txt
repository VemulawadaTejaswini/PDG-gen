Line_15 $$ classToAnalyze = classToAnalyze.getSuperclass()-->Line_16 $$ if (classToAnalyze == null) [ FD ]
Line_13 $$ Class<?> classToAnalyze = obj.getClass()-->Line_14 $$ while (!Modifier.isPublic(classToAnalyze.getModifiers())) [ FD ]
Line_9 $$ if (obj == null) -->Line_10 $$ return null[ CD ]
Line_14 $$ while (!Modifier.isPublic(classToAnalyze.getModifiers())) -->Line_15 $$ classToAnalyze = classToAnalyze.getSuperclass()[ CD ]
Line_13 $$ Class<?> classToAnalyze = obj.getClass()-->Line_16 $$ if (classToAnalyze == null) [ FD ]
Line_21 $$ Method getInnermostDelegate = classToAnalyze.getMethod(GET_INNERMOST_DELEGATE_METHOD_NAME, (Class[]) null)-->Line_22 $$ Object delegate = ReflectionUtils.invokeJdbcMethod(getInnermostDelegate, obj)[ FD ]
Line_13 $$ Class<?> classToAnalyze = obj.getClass()-->Line_21 $$ Method getInnermostDelegate = classToAnalyze.getMethod(GET_INNERMOST_DELEGATE_METHOD_NAME, (Class[]) null)[ FD ]
Line_13 $$ Class<?> classToAnalyze = obj.getClass()-->Line_15 $$ classToAnalyze = classToAnalyze.getSuperclass()[ FD ]
Line_15 $$ classToAnalyze = classToAnalyze.getSuperclass()-->Line_14 $$ while (!Modifier.isPublic(classToAnalyze.getModifiers())) [ FD ]
Line_15 $$ classToAnalyze = classToAnalyze.getSuperclass()-->Line_21 $$ Method getInnermostDelegate = classToAnalyze.getMethod(GET_INNERMOST_DELEGATE_METHOD_NAME, (Class[]) null)[ FD ]
Line_14 $$ while (!Modifier.isPublic(classToAnalyze.getModifiers())) -->Line_16 $$ if (classToAnalyze == null) [ CD ]
