Line_12 $$ opDef = findCacheOperations(specificMethod.getDeclaringClass())-->Line_17 $$ opDef = findCacheOperations(method)[ FD ]
Line_2 $$ private Collection<CacheOperation> computeCacheOperations(Method method, Class<?> targetClass) -->Line_17 $$ opDef = findCacheOperations(method)[ FD ]
Line_17 $$ opDef = findCacheOperations(method)-->Line_18 $$ if (opDef != null) [ FD ]
Line_18 $$ if (opDef != null) -->Line_19 $$ return opDef[ CD ]
Line_2 $$ private Collection<CacheOperation> computeCacheOperations(Method method, Class<?> targetClass) -->Line_6 $$ Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)[ CD ]
Line_2 $$ private Collection<CacheOperation> computeCacheOperations(Method method, Class<?> targetClass) -->Line_13 $$ if (opDef != null) [ CD ]
Line_2 $$ private Collection<CacheOperation> computeCacheOperations(Method method, Class<?> targetClass) -->Line_9 $$ if (opDef != null) [ CD ]
Line_12 $$ opDef = findCacheOperations(specificMethod.getDeclaringClass())-->Line_13 $$ if (opDef != null) [ FD ]
Line_13 $$ if (opDef != null) -->Line_14 $$ return opDef[ CD ]
Line_2 $$ private Collection<CacheOperation> computeCacheOperations(Method method, Class<?> targetClass) -->Line_23 $$ return null[ CD ]
Line_8 $$ Collection<CacheOperation> opDef = findCacheOperations(specificMethod)-->Line_12 $$ opDef = findCacheOperations(specificMethod.getDeclaringClass())[ FD ]
Line_6 $$ Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)-->Line_16 $$ if (specificMethod != method) [ FD ]
Line_12 $$ opDef = findCacheOperations(specificMethod.getDeclaringClass())-->Line_18 $$ if (opDef != null) [ FD ]
Line_7 $$ specificMethod = BridgeMethodResolver.findBridgedMethod(specificMethod)-->Line_8 $$ Collection<CacheOperation> opDef = findCacheOperations(specificMethod)[ FD ]
Line_16 $$ if (specificMethod != method) -->Line_21 $$ return findCacheOperations(method.getDeclaringClass())[ CD ]
Line_2 $$ private Collection<CacheOperation> computeCacheOperations(Method method, Class<?> targetClass) -->Line_6 $$ Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)[ FD ]
Line_16 $$ if (specificMethod != method) -->Line_18 $$ if (opDef != null) [ CD ]
Line_9 $$ if (opDef != null) -->Line_10 $$ return opDef[ CD ]
Line_7 $$ specificMethod = BridgeMethodResolver.findBridgedMethod(specificMethod)-->Line_16 $$ if (specificMethod != method) [ FD ]
Line_6 $$ Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)-->Line_7 $$ specificMethod = BridgeMethodResolver.findBridgedMethod(specificMethod)[ FD ]
Line_8 $$ Collection<CacheOperation> opDef = findCacheOperations(specificMethod)-->Line_9 $$ if (opDef != null) [ FD ]
Line_2 $$ private Collection<CacheOperation> computeCacheOperations(Method method, Class<?> targetClass) -->Line_21 $$ return findCacheOperations(method.getDeclaringClass())[ FD ]
Line_2 $$ private Collection<CacheOperation> computeCacheOperations(Method method, Class<?> targetClass) -->Line_3 $$ if (allowPublicMethodsOnly() && !Modifier.isPublic(method.getModifiers())) [ FD ]
Line_2 $$ private Collection<CacheOperation> computeCacheOperations(Method method, Class<?> targetClass) -->Line_7 $$ specificMethod = BridgeMethodResolver.findBridgedMethod(specificMethod)[ CD ]
Line_8 $$ Collection<CacheOperation> opDef = findCacheOperations(specificMethod)-->Line_17 $$ opDef = findCacheOperations(method)[ FD ]
Line_2 $$ private Collection<CacheOperation> computeCacheOperations(Method method, Class<?> targetClass) -->Line_16 $$ if (specificMethod != method) [ FD ]
Line_2 $$ private Collection<CacheOperation> computeCacheOperations(Method method, Class<?> targetClass) -->Line_3 $$ if (allowPublicMethodsOnly() && !Modifier.isPublic(method.getModifiers())) [ CD ]
Line_7 $$ specificMethod = BridgeMethodResolver.findBridgedMethod(specificMethod)-->Line_12 $$ opDef = findCacheOperations(specificMethod.getDeclaringClass())[ FD ]
Line_16 $$ if (specificMethod != method) -->Line_17 $$ opDef = findCacheOperations(method)[ CD ]
Line_3 $$ if (allowPublicMethodsOnly() && !Modifier.isPublic(method.getModifiers())) -->Line_4 $$ return null[ CD ]
Line_2 $$ private Collection<CacheOperation> computeCacheOperations(Method method, Class<?> targetClass) -->Line_8 $$ Collection<CacheOperation> opDef = findCacheOperations(specificMethod)[ CD ]
Line_6 $$ Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)-->Line_12 $$ opDef = findCacheOperations(specificMethod.getDeclaringClass())[ FD ]
Line_8 $$ Collection<CacheOperation> opDef = findCacheOperations(specificMethod)-->Line_13 $$ if (opDef != null) [ FD ]
Line_2 $$ private Collection<CacheOperation> computeCacheOperations(Method method, Class<?> targetClass) -->Line_16 $$ if (specificMethod != method) [ CD ]
Line_6 $$ Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)-->Line_8 $$ Collection<CacheOperation> opDef = findCacheOperations(specificMethod)[ FD ]
Line_8 $$ Collection<CacheOperation> opDef = findCacheOperations(specificMethod)-->Line_18 $$ if (opDef != null) [ FD ]
Line_2 $$ private Collection<CacheOperation> computeCacheOperations(Method method, Class<?> targetClass) -->Line_12 $$ opDef = findCacheOperations(specificMethod.getDeclaringClass())[ CD ]
