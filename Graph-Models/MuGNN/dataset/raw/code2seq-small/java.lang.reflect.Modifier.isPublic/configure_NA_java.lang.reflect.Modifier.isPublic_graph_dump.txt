Line_17 $$ if (method.getName().startsWith("create")) -->Line_19 $$ final Method ejbPostCreate = resolveEjbMethod("create", "ejbPostCreate", void.class.getName(), componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName())[ CD ]
Line_41 $$ if (method.getName().equals("remove") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Handle.class) -->Line_42 $$ configuration.addViewInterceptor(method, EntityBeanHomeRemoveByHandleInterceptorFactory.INSTANCE, InterceptorOrder.View.COMPONENT_DISPATCHER)[ CD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_42 $$ configuration.addViewInterceptor(method, EntityBeanHomeRemoveByHandleInterceptorFactory.INSTANCE, InterceptorOrder.View.COMPONENT_DISPATCHER)[ FD ]
Line_10 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_16 $$ if (method.getName().equals("toString") && method.getParameterTypes().length == 0) [ FD ]
Line_10 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_12 $$ if (method.getName().equals("equals") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Object.class) [ FD ]
Line_10 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_27 $$ if (method.getName().startsWith("find")) [ FD ]
Line_17 $$ if (method.getName().startsWith("create")) -->Line_21 $$ configuration.getDependencies().add(new DependencyConfigurator<ViewService>() [ CD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_26 $$ configuration.addViewInterceptor(method, factory, InterceptorOrder.View.HOME_METHOD_INTERCEPTOR)[ FD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_3 $$ final DeploymentUnit deploymentUnit = context.getDeploymentUnit()[ CD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_38 $$ configuration.addViewInterceptor(method, interceptorFactory, InterceptorOrder.View.COMPONENT_DISPATCHER)[ FD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_19 $$ final Method ejbPostCreate = resolveEjbMethod("create", "ejbPostCreate", void.class.getName(), componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName())[ FD ]
Line_16 $$ if (method.getName().equals("toString") && method.getParameterTypes().length == 0) -->Line_17 $$ if (method.getName().startsWith("create")) [ CD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_61 $$ Method home = resolveEjbHomeBusinessMethod(componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName())[ FD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_8 $$ final EntityBeanComponentDescription componentDescription = (EntityBeanComponentDescription) componentConfiguration.getComponentDescription()[ FD ]
Line_10 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_61 $$ Method home = resolveEjbHomeBusinessMethod(componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName())[ FD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_7 $$ final boolean localHome = EjbHomeViewDescription.class.cast(description).getMethodIntf() == MethodIntf.LOCAL_HOME[ CD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_11 $$ configuration.addClientInterceptor(method, ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY, InterceptorOrder.Client.CLIENT_DISPATCHER)[ FD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_18 $$ final Method ejbCreate = resolveEjbMethod("create", "ejbCreate", componentDescription.getPrimaryKeyType(), componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName())[ FD ]
Line_8 $$ final EntityBeanComponentDescription componentDescription = (EntityBeanComponentDescription) componentConfiguration.getComponentDescription()-->Line_18 $$ final Method ejbCreate = resolveEjbMethod("create", "ejbCreate", componentDescription.getPrimaryKeyType(), componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName())[ FD ]
Line_27 $$ if (method.getName().startsWith("find")) -->Line_33 $$ configuration.getDependencies().add(new DependencyConfigurator<ViewService>() [ CD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_13 $$ configuration.addClientInterceptor(method, ComponentTypeIdentityInterceptorFactory.INSTANCE, InterceptorOrder.Client.EJB_EQUALS_HASHCODE)[ FD ]
Line_10 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_19 $$ final Method ejbPostCreate = resolveEjbMethod("create", "ejbPostCreate", void.class.getName(), componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName())[ FD ]
Line_33 $$ configuration.getDependencies().add(new DependencyConfigurator<ViewService>() -->Line_55 $$ serviceBuilder.addDependency(configuration.getViewServiceName(), ComponentView.class, factory.getHomeView())[ FD ]
Line_10 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_40 $$ configuration.addViewInterceptor(method, EntityBeanHomeRemoveInterceptorFactory.instance(!localHome), InterceptorOrder.View.COMPONENT_DISPATCHER)[ FD ]
Line_21 $$ configuration.getDependencies().add(new DependencyConfigurator<ViewService>() -->Line_55 $$ serviceBuilder.addDependency(configuration.getViewServiceName(), ComponentView.class, factory.getHomeView())[ FD ]
Line_4 $$ final DeploymentReflectionIndex deploymentReflectionIndex = deploymentUnit.getAttachment(Attachments.REFLECTION_INDEX)-->Line_61 $$ Method home = resolveEjbHomeBusinessMethod(componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName())[ FD ]
Line_20 $$ final EntityBeanHomeCreateInterceptorFactory factory = new EntityBeanHomeCreateInterceptorFactory(ejbCreate, ejbPostCreate)-->Line_23 $$ serviceBuilder.addDependency(createdView.getServiceName(), ComponentView.class, factory.getViewToCreate())[ FD ]
Line_10 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_13 $$ configuration.addClientInterceptor(method, ComponentTypeIdentityInterceptorFactory.INSTANCE, InterceptorOrder.Client.EJB_EQUALS_HASHCODE)[ FD ]
Line_10 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_58 $$ configuration.addViewInterceptor(method, new ImmediateInterceptorFactory(factory), InterceptorOrder.View.HOME_METHOD_INTERCEPTOR)[ FD ]
Line_8 $$ final EntityBeanComponentDescription componentDescription = (EntityBeanComponentDescription) componentConfiguration.getComponentDescription()-->Line_28 $$ final Method ejbFind = resolveEjbFinderMethod(componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName(), componentDescription.getPersistenceType())[ FD ]
Line_12 $$ if (method.getName().equals("equals") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Object.class) -->Line_13 $$ configuration.addClientInterceptor(method, ComponentTypeIdentityInterceptorFactory.INSTANCE, InterceptorOrder.Client.EJB_EQUALS_HASHCODE)[ CD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_7 $$ final boolean localHome = EjbHomeViewDescription.class.cast(description).getMethodIntf() == MethodIntf.LOCAL_HOME[ FD ]
Line_59 $$ if (method.getName().equals("getHomeHandle") && method.getParameterTypes().length == 0) -->Line_65 $$ configuration.addViewInterceptor(method, new EntityBeanHomeMethodInterceptorFactory(home), InterceptorOrder.View.COMPONENT_DISPATCHER)[ CD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_8 $$ final EntityBeanComponentDescription componentDescription = (EntityBeanComponentDescription) componentConfiguration.getComponentDescription()[ CD ]
Line_21 $$ configuration.getDependencies().add(new DependencyConfigurator<ViewService>() -->Line_23 $$ serviceBuilder.addDependency(createdView.getServiceName(), ComponentView.class, factory.getViewToCreate())[ FD ]
Line_7 $$ final boolean localHome = EjbHomeViewDescription.class.cast(description).getMethodIntf() == MethodIntf.LOCAL_HOME-->Line_32 $$ final EntityBeanHomeFinderInterceptorFactory interceptorFactory = createHomeFindInterceptorFactory(ejbFind, localHome)[ FD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_52 $$ final EjbMetadataInterceptor factory = new EjbMetadataInterceptor(ejbObjectClass, configuration.getViewClass(), pkClass, false, false)[ FD ]
Line_9 $$ final EJBViewDescription createdView = localHome ? componentDescription.getEjbLocalView() : componentDescription.getEjbRemoteView()-->Line_35 $$ serviceBuilder.addDependency(createdView.getServiceName(), ComponentView.class, interceptorFactory.getViewToCreate())[ FD ]
Line_4 $$ final DeploymentReflectionIndex deploymentReflectionIndex = deploymentUnit.getAttachment(Attachments.REFLECTION_INDEX)-->Line_28 $$ final Method ejbFind = resolveEjbFinderMethod(componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName(), componentDescription.getPersistenceType())[ FD ]
Line_21 $$ configuration.getDependencies().add(new DependencyConfigurator<ViewService>() -->Line_23 $$ serviceBuilder.addDependency(createdView.getServiceName(), ComponentView.class, factory.getViewToCreate())[ CD ]
Line_8 $$ final EntityBeanComponentDescription componentDescription = (EntityBeanComponentDescription) componentConfiguration.getComponentDescription()-->Line_50 $$ throw EjbLogger.ROOT_LOGGER.failedToLoadViewClassForComponent(e, componentDescription.getComponentName())[ FD ]
Line_10 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_43 $$ if (method.getName().equals("getEJBMetaData") && method.getParameterTypes().length == 0) [ FD ]
Line_4 $$ final DeploymentReflectionIndex deploymentReflectionIndex = deploymentUnit.getAttachment(Attachments.REFLECTION_INDEX)-->Line_19 $$ final Method ejbPostCreate = resolveEjbMethod("create", "ejbPostCreate", void.class.getName(), componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName())[ FD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_21 $$ configuration.getDependencies().add(new DependencyConfigurator<ViewService>() [ FD ]
Line_9 $$ final EJBViewDescription createdView = localHome ? componentDescription.getEjbLocalView() : componentDescription.getEjbRemoteView()-->Line_23 $$ serviceBuilder.addDependency(createdView.getServiceName(), ComponentView.class, factory.getViewToCreate())[ FD ]
Line_33 $$ configuration.getDependencies().add(new DependencyConfigurator<ViewService>() -->Line_35 $$ serviceBuilder.addDependency(createdView.getServiceName(), ComponentView.class, interceptorFactory.getViewToCreate())[ CD ]
Line_10 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_26 $$ configuration.addViewInterceptor(method, factory, InterceptorOrder.View.HOME_METHOD_INTERCEPTOR)[ FD ]
Line_33 $$ configuration.getDependencies().add(new DependencyConfigurator<ViewService>() -->Line_35 $$ serviceBuilder.addDependency(createdView.getServiceName(), ComponentView.class, interceptorFactory.getViewToCreate())[ FD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_9 $$ final EJBViewDescription createdView = localHome ? componentDescription.getEjbLocalView() : componentDescription.getEjbRemoteView()[ CD ]
Line_3 $$ final DeploymentUnit deploymentUnit = context.getDeploymentUnit()-->Line_4 $$ final DeploymentReflectionIndex deploymentReflectionIndex = deploymentUnit.getAttachment(Attachments.REFLECTION_INDEX)[ FD ]
Line_3 $$ final DeploymentUnit deploymentUnit = context.getDeploymentUnit()-->Line_48 $$ pkClass = ClassLoadingUtils.loadClass(componentDescription.getPrimaryKeyType(), deploymentUnit)[ FD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_40 $$ configuration.addViewInterceptor(method, EntityBeanHomeRemoveInterceptorFactory.instance(!localHome), InterceptorOrder.View.COMPONENT_DISPATCHER)[ FD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_6 $$ configuration.addClientPreDestroyInterceptor(org.jboss.invocation.Interceptors.getTerminalInterceptorFactory(), InterceptorOrder.ClientPreDestroy.TERMINAL_INTERCEPTOR)[ CD ]
Line_3 $$ final DeploymentUnit deploymentUnit = context.getDeploymentUnit()-->Line_47 $$ ejbObjectClass = ClassLoadingUtils.loadClass(createdView.getViewClassName(), deploymentUnit)[ FD ]
Line_10 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_11 $$ configuration.addClientInterceptor(method, ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY, InterceptorOrder.Client.CLIENT_DISPATCHER)[ FD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_53 $$ componentConfiguration.getStartDependencies().add(new DependencyConfigurator<ComponentStartService>() [ FD ]
Line_59 $$ if (method.getName().equals("getHomeHandle") && method.getParameterTypes().length == 0) -->Line_61 $$ Method home = resolveEjbHomeBusinessMethod(componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName())[ CD ]
Line_12 $$ if (method.getName().equals("equals") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Object.class) -->Line_14 $$ if (method.getName().equals("hashCode") && method.getParameterTypes().length == 0) [ CD ]
Line_39 $$ if (method.getName().equals("remove") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Object.class) -->Line_40 $$ configuration.addViewInterceptor(method, EntityBeanHomeRemoveInterceptorFactory.instance(!localHome), InterceptorOrder.View.COMPONENT_DISPATCHER)[ CD ]
Line_17 $$ if (method.getName().startsWith("create")) -->Line_20 $$ final EntityBeanHomeCreateInterceptorFactory factory = new EntityBeanHomeCreateInterceptorFactory(ejbCreate, ejbPostCreate)[ CD ]
Line_43 $$ if (method.getName().equals("getEJBMetaData") && method.getParameterTypes().length == 0) -->Line_58 $$ configuration.addViewInterceptor(method, new ImmediateInterceptorFactory(factory), InterceptorOrder.View.HOME_METHOD_INTERCEPTOR)[ CD ]
Line_59 $$ if (method.getName().equals("getHomeHandle") && method.getParameterTypes().length == 0) -->Line_62 $$ if (!Modifier.isPublic(home.getModifiers())) [ CD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_5 $$ configuration.addClientPostConstructInterceptor(org.jboss.invocation.Interceptors.getTerminalInterceptorFactory(), InterceptorOrder.ClientPostConstruct.TERMINAL_INTERCEPTOR)[ CD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_15 $$ configuration.addClientInterceptor(method, ComponentTypeIdentityInterceptorFactory.INSTANCE, InterceptorOrder.Client.EJB_EQUALS_HASHCODE)[ FD ]
Line_10 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_41 $$ if (method.getName().equals("remove") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Handle.class) [ FD ]
Line_27 $$ if (method.getName().startsWith("find")) -->Line_28 $$ final Method ejbFind = resolveEjbFinderMethod(componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName(), componentDescription.getPersistenceType())[ CD ]
Line_10 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_39 $$ if (method.getName().equals("remove") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Object.class) [ FD ]
Line_17 $$ if (method.getName().startsWith("create")) -->Line_26 $$ configuration.addViewInterceptor(method, factory, InterceptorOrder.View.HOME_METHOD_INTERCEPTOR)[ CD ]
Line_10 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_42 $$ configuration.addViewInterceptor(method, EntityBeanHomeRemoveByHandleInterceptorFactory.INSTANCE, InterceptorOrder.View.COMPONENT_DISPATCHER)[ FD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_6 $$ configuration.addClientPreDestroyInterceptor(org.jboss.invocation.Interceptors.getTerminalInterceptorFactory(), InterceptorOrder.ClientPreDestroy.TERMINAL_INTERCEPTOR)[ FD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_3 $$ final DeploymentUnit deploymentUnit = context.getDeploymentUnit()[ FD ]
Line_17 $$ if (method.getName().startsWith("create")) -->Line_18 $$ final Method ejbCreate = resolveEjbMethod("create", "ejbCreate", componentDescription.getPrimaryKeyType(), componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName())[ CD ]
Line_10 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_15 $$ configuration.addClientInterceptor(method, ComponentTypeIdentityInterceptorFactory.INSTANCE, InterceptorOrder.Client.EJB_EQUALS_HASHCODE)[ FD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_58 $$ configuration.addViewInterceptor(method, new ImmediateInterceptorFactory(factory), InterceptorOrder.View.HOME_METHOD_INTERCEPTOR)[ FD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_4 $$ final DeploymentReflectionIndex deploymentReflectionIndex = deploymentUnit.getAttachment(Attachments.REFLECTION_INDEX)[ CD ]
Line_10 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_38 $$ configuration.addViewInterceptor(method, interceptorFactory, InterceptorOrder.View.COMPONENT_DISPATCHER)[ FD ]
Line_39 $$ if (method.getName().equals("remove") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Object.class) -->Line_41 $$ if (method.getName().equals("remove") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Handle.class) [ CD ]
Line_27 $$ if (method.getName().startsWith("find")) -->Line_32 $$ final EntityBeanHomeFinderInterceptorFactory interceptorFactory = createHomeFindInterceptorFactory(ejbFind, localHome)[ CD ]
Line_10 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_18 $$ final Method ejbCreate = resolveEjbMethod("create", "ejbCreate", componentDescription.getPrimaryKeyType(), componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName())[ FD ]
Line_43 $$ if (method.getName().equals("getEJBMetaData") && method.getParameterTypes().length == 0) -->Line_59 $$ if (method.getName().equals("getHomeHandle") && method.getParameterTypes().length == 0) [ CD ]
Line_10 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_65 $$ configuration.addViewInterceptor(method, new EntityBeanHomeMethodInterceptorFactory(home), InterceptorOrder.View.COMPONENT_DISPATCHER)[ FD ]
Line_53 $$ componentConfiguration.getStartDependencies().add(new DependencyConfigurator<ComponentStartService>() -->Line_55 $$ serviceBuilder.addDependency(configuration.getViewServiceName(), ComponentView.class, factory.getHomeView())[ CD ]
Line_43 $$ if (method.getName().equals("getEJBMetaData") && method.getParameterTypes().length == 0) -->Line_53 $$ componentConfiguration.getStartDependencies().add(new DependencyConfigurator<ComponentStartService>() [ CD ]
Line_27 $$ if (method.getName().startsWith("find")) -->Line_29 $$ if (!Modifier.isPublic(ejbFind.getModifiers())) [ CD ]
Line_4 $$ final DeploymentReflectionIndex deploymentReflectionIndex = deploymentUnit.getAttachment(Attachments.REFLECTION_INDEX)-->Line_18 $$ final Method ejbCreate = resolveEjbMethod("create", "ejbCreate", componentDescription.getPrimaryKeyType(), componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName())[ FD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_5 $$ configuration.addClientPostConstructInterceptor(org.jboss.invocation.Interceptors.getTerminalInterceptorFactory(), InterceptorOrder.ClientPostConstruct.TERMINAL_INTERCEPTOR)[ FD ]
Line_10 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_59 $$ if (method.getName().equals("getHomeHandle") && method.getParameterTypes().length == 0) [ FD ]
Line_10 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_28 $$ final Method ejbFind = resolveEjbFinderMethod(componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName(), componentDescription.getPersistenceType())[ FD ]
Line_27 $$ if (method.getName().startsWith("find")) -->Line_38 $$ configuration.addViewInterceptor(method, interceptorFactory, InterceptorOrder.View.COMPONENT_DISPATCHER)[ CD ]
Line_10 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_17 $$ if (method.getName().startsWith("create")) [ FD ]
Line_27 $$ if (method.getName().startsWith("find")) -->Line_39 $$ if (method.getName().equals("remove") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Object.class) [ CD ]
Line_8 $$ final EntityBeanComponentDescription componentDescription = (EntityBeanComponentDescription) componentConfiguration.getComponentDescription()-->Line_9 $$ final EJBViewDescription createdView = localHome ? componentDescription.getEjbLocalView() : componentDescription.getEjbRemoteView()[ FD ]
Line_20 $$ final EntityBeanHomeCreateInterceptorFactory factory = new EntityBeanHomeCreateInterceptorFactory(ejbCreate, ejbPostCreate)-->Line_55 $$ serviceBuilder.addDependency(configuration.getViewServiceName(), ComponentView.class, factory.getHomeView())[ FD ]
Line_17 $$ if (method.getName().startsWith("create")) -->Line_27 $$ if (method.getName().startsWith("find")) [ CD ]
Line_41 $$ if (method.getName().equals("remove") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Handle.class) -->Line_43 $$ if (method.getName().equals("getEJBMetaData") && method.getParameterTypes().length == 0) [ CD ]
Line_9 $$ final EJBViewDescription createdView = localHome ? componentDescription.getEjbLocalView() : componentDescription.getEjbRemoteView()-->Line_47 $$ ejbObjectClass = ClassLoadingUtils.loadClass(createdView.getViewClassName(), deploymentUnit)[ FD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_55 $$ serviceBuilder.addDependency(configuration.getViewServiceName(), ComponentView.class, factory.getHomeView())[ FD ]
Line_21 $$ configuration.getDependencies().add(new DependencyConfigurator<ViewService>() -->Line_35 $$ serviceBuilder.addDependency(createdView.getServiceName(), ComponentView.class, interceptorFactory.getViewToCreate())[ FD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_65 $$ configuration.addViewInterceptor(method, new EntityBeanHomeMethodInterceptorFactory(home), InterceptorOrder.View.COMPONENT_DISPATCHER)[ FD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_28 $$ final Method ejbFind = resolveEjbFinderMethod(componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName(), componentDescription.getPersistenceType())[ FD ]
Line_14 $$ if (method.getName().equals("hashCode") && method.getParameterTypes().length == 0) -->Line_15 $$ configuration.addClientInterceptor(method, ComponentTypeIdentityInterceptorFactory.INSTANCE, InterceptorOrder.Client.EJB_EQUALS_HASHCODE)[ CD ]
Line_53 $$ componentConfiguration.getStartDependencies().add(new DependencyConfigurator<ComponentStartService>() -->Line_55 $$ serviceBuilder.addDependency(configuration.getViewServiceName(), ComponentView.class, factory.getHomeView())[ FD ]
Line_14 $$ if (method.getName().equals("hashCode") && method.getParameterTypes().length == 0) -->Line_16 $$ if (method.getName().equals("toString") && method.getParameterTypes().length == 0) [ CD ]
Line_10 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_14 $$ if (method.getName().equals("hashCode") && method.getParameterTypes().length == 0) [ FD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_10 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) [ FD ]
Line_8 $$ final EntityBeanComponentDescription componentDescription = (EntityBeanComponentDescription) componentConfiguration.getComponentDescription()-->Line_48 $$ pkClass = ClassLoadingUtils.loadClass(componentDescription.getPrimaryKeyType(), deploymentUnit)[ FD ]
Line_20 $$ final EntityBeanHomeCreateInterceptorFactory factory = new EntityBeanHomeCreateInterceptorFactory(ejbCreate, ejbPostCreate)-->Line_26 $$ configuration.addViewInterceptor(method, factory, InterceptorOrder.View.HOME_METHOD_INTERCEPTOR)[ FD ]
Line_2 $$ public void configure(final DeploymentPhaseContext context, final ComponentConfiguration componentConfiguration, final ViewDescription description, final ViewConfiguration configuration) throws DeploymentUnitProcessingException -->Line_33 $$ configuration.getDependencies().add(new DependencyConfigurator<ViewService>() [ FD ]
