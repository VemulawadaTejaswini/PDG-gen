Line_11 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_15 $$ if (method.getName().equals("hashCode") && method.getParameterTypes().length == 0) [ FD ]
Line_11 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_35 $$ if (method.getName().startsWith("find")) [ FD ]
Line_5 $$ final DeploymentReflectionIndex deploymentReflectionIndex = deploymentUnit.getAttachment(Attachments.REFLECTION_INDEX)-->Line_36 $$ final Method ejbFind = resolveEjbFinderMethod(componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName(), componentDescription.getPersistenceType())[ FD ]
Line_35 $$ if (method.getName().startsWith("find")) -->Line_40 $$ final EntityBeanHomeFinderInterceptorFactory interceptorFactory = createHomeFindInterceptorFactory(ejbFind, localHome)[ CD ]
Line_11 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_51 $$ if (method.getName().equals("remove") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Handle.class) [ FD ]
Line_19 $$ if (method.getName().startsWith("create")) -->Line_23 $$ final Method ejbPostCreate = resolveEjbMethod("create", "ejbPostCreate", void.class.getName(), componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName())[ CD ]
Line_11 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_48 $$ configuration.addViewInterceptor(method, interceptorFactory, InterceptorOrder.View.COMPONENT_DISPATCHER)[ FD ]
Line_11 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_49 $$ if (method.getName().equals("remove") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Object.class) [ FD ]
Line_51 $$ if (method.getName().equals("remove") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Handle.class) -->Line_52 $$ configuration.addViewInterceptor(method, EntityBeanHomeRemoveByHandleInterceptorFactory.INSTANCE, InterceptorOrder.View.COMPONENT_DISPATCHER)[ CD ]
Line_9 $$ final EntityBeanComponentDescription componentDescription = (EntityBeanComponentDescription) componentConfiguration.getComponentDescription()-->Line_10 $$ final EJBViewDescription createdView = localHome ? componentDescription.getEjbLocalView() : componentDescription.getEjbRemoteView()[ FD ]
Line_35 $$ if (method.getName().startsWith("find")) -->Line_48 $$ configuration.addViewInterceptor(method, interceptorFactory, InterceptorOrder.View.COMPONENT_DISPATCHER)[ CD ]
Line_11 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_53 $$ if (method.getName().equals("getEJBMetaData") && method.getParameterTypes().length == 0) [ FD ]
Line_15 $$ if (method.getName().equals("hashCode") && method.getParameterTypes().length == 0) -->Line_16 $$ configuration.addClientInterceptor(method, ComponentTypeIdentityInterceptorFactory.INSTANCE, InterceptorOrder.Client.EJB_EQUALS_HASHCODE)[ CD ]
Line_11 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_50 $$ configuration.addViewInterceptor(method, EntityBeanHomeRemoveInterceptorFactory.instance(!localHome), InterceptorOrder.View.COMPONENT_DISPATCHER)[ FD ]
Line_11 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_14 $$ configuration.addClientInterceptor(method, ComponentTypeIdentityInterceptorFactory.INSTANCE, InterceptorOrder.Client.EJB_EQUALS_HASHCODE)[ FD ]
Line_35 $$ if (method.getName().startsWith("find")) -->Line_36 $$ final Method ejbFind = resolveEjbFinderMethod(componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName(), componentDescription.getPersistenceType())[ CD ]
Line_19 $$ if (method.getName().startsWith("create")) -->Line_35 $$ if (method.getName().startsWith("find")) [ CD ]
Line_49 $$ if (method.getName().equals("remove") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Object.class) -->Line_51 $$ if (method.getName().equals("remove") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Handle.class) [ CD ]
Line_4 $$ final DeploymentUnit deploymentUnit = context.getDeploymentUnit()-->Line_58 $$ pkClass = ClassLoadingUtils.loadClass(componentDescription.getPrimaryKeyType(), deploymentUnit)[ FD ]
Line_11 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_81 $$ configuration.addViewInterceptor(method, new EntityBeanHomeMethodInterceptorFactory(home), InterceptorOrder.View.COMPONENT_DISPATCHER)[ FD ]
Line_9 $$ final EntityBeanComponentDescription componentDescription = (EntityBeanComponentDescription) componentConfiguration.getComponentDescription()-->Line_58 $$ pkClass = ClassLoadingUtils.loadClass(componentDescription.getPrimaryKeyType(), deploymentUnit)[ FD ]
Line_10 $$ final EJBViewDescription createdView = localHome ? componentDescription.getEjbLocalView() : componentDescription.getEjbRemoteView()-->Line_45 $$ serviceBuilder.addDependency(createdView.getServiceName(), ComponentView.class, interceptorFactory.getViewToCreate())[ FD ]
Line_11 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_23 $$ final Method ejbPostCreate = resolveEjbMethod("create", "ejbPostCreate", void.class.getName(), componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName())[ FD ]
Line_41 $$ configuration.getDependencies().add(new DependencyConfigurator<ViewService>() -->Line_45 $$ serviceBuilder.addDependency(createdView.getServiceName(), ComponentView.class, interceptorFactory.getViewToCreate())[ CD ]
Line_11 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_13 $$ if (method.getName().equals("equals") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Object.class) [ FD ]
Line_10 $$ final EJBViewDescription createdView = localHome ? componentDescription.getEjbLocalView() : componentDescription.getEjbRemoteView()-->Line_30 $$ serviceBuilder.addDependency(createdView.getServiceName(), ComponentView.class, factory.getViewToCreate())[ FD ]
Line_8 $$ final boolean localHome = EjbHomeViewDescription.class.cast(description).getMethodIntf() == MethodIntf.LOCAL_HOME-->Line_40 $$ final EntityBeanHomeFinderInterceptorFactory interceptorFactory = createHomeFindInterceptorFactory(ejbFind, localHome)[ FD ]
Line_35 $$ if (method.getName().startsWith("find")) -->Line_49 $$ if (method.getName().equals("remove") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Object.class) [ CD ]
Line_41 $$ configuration.getDependencies().add(new DependencyConfigurator<ViewService>() -->Line_45 $$ serviceBuilder.addDependency(createdView.getServiceName(), ComponentView.class, interceptorFactory.getViewToCreate())[ FD ]
Line_73 $$ if (method.getName().equals("getHomeHandle") && method.getParameterTypes().length == 0) -->Line_81 $$ configuration.addViewInterceptor(method, new EntityBeanHomeMethodInterceptorFactory(home), InterceptorOrder.View.COMPONENT_DISPATCHER)[ CD ]
Line_11 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_17 $$ if (method.getName().equals("toString") && method.getParameterTypes().length == 0) [ FD ]
Line_4 $$ final DeploymentUnit deploymentUnit = context.getDeploymentUnit()-->Line_5 $$ final DeploymentReflectionIndex deploymentReflectionIndex = deploymentUnit.getAttachment(Attachments.REFLECTION_INDEX)[ FD ]
Line_9 $$ final EntityBeanComponentDescription componentDescription = (EntityBeanComponentDescription) componentConfiguration.getComponentDescription()-->Line_60 $$ throw EjbLogger.ROOT_LOGGER.failedToLoadViewClassForComponent(e, componentDescription.getComponentName())[ FD ]
Line_13 $$ if (method.getName().equals("equals") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Object.class) -->Line_14 $$ configuration.addClientInterceptor(method, ComponentTypeIdentityInterceptorFactory.INSTANCE, InterceptorOrder.Client.EJB_EQUALS_HASHCODE)[ CD ]
Line_13 $$ if (method.getName().equals("equals") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Object.class) -->Line_15 $$ if (method.getName().equals("hashCode") && method.getParameterTypes().length == 0) [ CD ]
Line_5 $$ final DeploymentReflectionIndex deploymentReflectionIndex = deploymentUnit.getAttachment(Attachments.REFLECTION_INDEX)-->Line_23 $$ final Method ejbPostCreate = resolveEjbMethod("create", "ejbPostCreate", void.class.getName(), componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName())[ FD ]
Line_19 $$ if (method.getName().startsWith("create")) -->Line_24 $$ final EntityBeanHomeCreateInterceptorFactory factory = new EntityBeanHomeCreateInterceptorFactory(ejbCreate, ejbPostCreate)[ CD ]
Line_11 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_52 $$ configuration.addViewInterceptor(method, EntityBeanHomeRemoveByHandleInterceptorFactory.INSTANCE, InterceptorOrder.View.COMPONENT_DISPATCHER)[ FD ]
Line_17 $$ if (method.getName().equals("toString") && method.getParameterTypes().length == 0) -->Line_19 $$ if (method.getName().startsWith("create")) [ CD ]
Line_41 $$ configuration.getDependencies().add(new DependencyConfigurator<ViewService>() -->Line_68 $$ serviceBuilder.addDependency(configuration.getViewServiceName(), ComponentView.class, factory.getHomeView())[ FD ]
Line_4 $$ final DeploymentUnit deploymentUnit = context.getDeploymentUnit()-->Line_57 $$ ejbObjectClass = ClassLoadingUtils.loadClass(createdView.getViewClassName(), deploymentUnit)[ FD ]
Line_9 $$ final EntityBeanComponentDescription componentDescription = (EntityBeanComponentDescription) componentConfiguration.getComponentDescription()-->Line_36 $$ final Method ejbFind = resolveEjbFinderMethod(componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName(), componentDescription.getPersistenceType())[ FD ]
Line_51 $$ if (method.getName().equals("remove") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Handle.class) -->Line_53 $$ if (method.getName().equals("getEJBMetaData") && method.getParameterTypes().length == 0) [ CD ]
Line_49 $$ if (method.getName().equals("remove") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Object.class) -->Line_50 $$ configuration.addViewInterceptor(method, EntityBeanHomeRemoveInterceptorFactory.instance(!localHome), InterceptorOrder.View.COMPONENT_DISPATCHER)[ CD ]
Line_24 $$ final EntityBeanHomeCreateInterceptorFactory factory = new EntityBeanHomeCreateInterceptorFactory(ejbCreate, ejbPostCreate)-->Line_30 $$ serviceBuilder.addDependency(createdView.getServiceName(), ComponentView.class, factory.getViewToCreate())[ FD ]
Line_35 $$ if (method.getName().startsWith("find")) -->Line_41 $$ configuration.getDependencies().add(new DependencyConfigurator<ViewService>() [ CD ]
Line_11 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_73 $$ if (method.getName().equals("getHomeHandle") && method.getParameterTypes().length == 0) [ FD ]
Line_73 $$ if (method.getName().equals("getHomeHandle") && method.getParameterTypes().length == 0) -->Line_78 $$ if (!Modifier.isPublic(home.getModifiers())) [ CD ]
Line_11 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_12 $$ configuration.addClientInterceptor(method, ViewDescription.CLIENT_DISPATCHER_INTERCEPTOR_FACTORY, InterceptorOrder.Client.CLIENT_DISPATCHER)[ FD ]
Line_11 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_19 $$ if (method.getName().startsWith("create")) [ FD ]
Line_15 $$ if (method.getName().equals("hashCode") && method.getParameterTypes().length == 0) -->Line_17 $$ if (method.getName().equals("toString") && method.getParameterTypes().length == 0) [ CD ]
Line_35 $$ if (method.getName().startsWith("find")) -->Line_37 $$ if (!Modifier.isPublic(ejbFind.getModifiers())) [ CD ]
Line_11 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_16 $$ configuration.addClientInterceptor(method, ComponentTypeIdentityInterceptorFactory.INSTANCE, InterceptorOrder.Client.EJB_EQUALS_HASHCODE)[ FD ]
Line_53 $$ if (method.getName().equals("getEJBMetaData") && method.getParameterTypes().length == 0) -->Line_73 $$ if (method.getName().equals("getHomeHandle") && method.getParameterTypes().length == 0) [ CD ]
Line_10 $$ final EJBViewDescription createdView = localHome ? componentDescription.getEjbLocalView() : componentDescription.getEjbRemoteView()-->Line_57 $$ ejbObjectClass = ClassLoadingUtils.loadClass(createdView.getViewClassName(), deploymentUnit)[ FD ]
Line_11 $$ for (final Method method : configuration.getProxyFactory().getCachedMethods()) -->Line_36 $$ final Method ejbFind = resolveEjbFinderMethod(componentConfiguration.getComponentClass(), deploymentReflectionIndex, method, componentConfiguration.getComponentName(), componentDescription.getPersistenceType())[ FD ]
Line_24 $$ final EntityBeanHomeCreateInterceptorFactory factory = new EntityBeanHomeCreateInterceptorFactory(ejbCreate, ejbPostCreate)-->Line_68 $$ serviceBuilder.addDependency(configuration.getViewServiceName(), ComponentView.class, factory.getHomeView())[ FD ]
