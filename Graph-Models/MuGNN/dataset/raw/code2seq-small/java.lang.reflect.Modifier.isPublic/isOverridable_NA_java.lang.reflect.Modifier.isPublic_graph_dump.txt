Line_2 $$ private static boolean isOverridable(Method method, Class<?> targetClass) -->Line_6 $$ if (Modifier.isPublic(method.getModifiers()) || Modifier.isProtected(method.getModifiers())) [ CD ]
Line_2 $$ private static boolean isOverridable(Method method, Class<?> targetClass) -->Line_3 $$ if (Modifier.isPrivate(method.getModifiers())) [ CD ]
Line_2 $$ private static boolean isOverridable(Method method, Class<?> targetClass) -->Line_9 $$ return getPackageName(method.getDeclaringClass()).equals(getPackageName(targetClass))[ CD ]
Line_2 $$ private static boolean isOverridable(Method method, Class<?> targetClass) -->Line_6 $$ if (Modifier.isPublic(method.getModifiers()) || Modifier.isProtected(method.getModifiers())) [ FD ]
Line_2 $$ private static boolean isOverridable(Method method, Class<?> targetClass) -->Line_3 $$ if (Modifier.isPrivate(method.getModifiers())) [ FD ]
Line_3 $$ if (Modifier.isPrivate(method.getModifiers())) -->Line_4 $$ return false[ CD ]
Line_6 $$ if (Modifier.isPublic(method.getModifiers()) || Modifier.isProtected(method.getModifiers())) -->Line_7 $$ return true[ CD ]
Line_2 $$ private static boolean isOverridable(Method method, Class<?> targetClass) -->Line_9 $$ return getPackageName(method.getDeclaringClass()).equals(getPackageName(targetClass))[ FD ]
