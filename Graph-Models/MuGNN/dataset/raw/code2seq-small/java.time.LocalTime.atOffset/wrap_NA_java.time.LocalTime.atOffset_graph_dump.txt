Line_2 $$ public <X> OffsetTime wrap(X value, WrapperOptions options) -->Line_23 $$ if (Calendar.class.isInstance(value)) [ FD ]
Line_3 $$ if (value == null) -->Line_4 $$ return null[ CD ]
Line_9 $$ if (Time.class.isInstance(value)) -->Line_10 $$ return ((Time) value).toLocalTime().atOffset(OffsetDateTime.now().getOffset())[ CD ]
Line_23 $$ if (Calendar.class.isInstance(value)) -->Line_24 $$ final Calendar calendar = (Calendar) value[ CD ]
Line_2 $$ public <X> OffsetTime wrap(X value, WrapperOptions options) -->Line_6 $$ if (OffsetTime.class.isInstance(value)) [ FD ]
Line_20 $$ if (Long.class.isInstance(value)) -->Line_21 $$ return OffsetTime.ofInstant(Instant.ofEpochMilli((Long) value), ZoneId.systemDefault())[ CD ]
Line_2 $$ public <X> OffsetTime wrap(X value, WrapperOptions options) -->Line_23 $$ if (Calendar.class.isInstance(value)) [ CD ]
Line_23 $$ if (Calendar.class.isInstance(value)) -->Line_25 $$ return OffsetTime.ofInstant(calendar.toInstant(), calendar.getTimeZone().toZoneId())[ CD ]
Line_2 $$ public <X> OffsetTime wrap(X value, WrapperOptions options) -->Line_20 $$ if (Long.class.isInstance(value)) [ FD ]
Line_2 $$ public <X> OffsetTime wrap(X value, WrapperOptions options) -->Line_3 $$ if (value == null) [ CD ]
Line_2 $$ public <X> OffsetTime wrap(X value, WrapperOptions options) -->Line_27 $$ throw unknownWrap(value.getClass())[ FD ]
Line_2 $$ public <X> OffsetTime wrap(X value, WrapperOptions options) -->Line_9 $$ if (Time.class.isInstance(value)) [ FD ]
Line_2 $$ public <X> OffsetTime wrap(X value, WrapperOptions options) -->Line_12 $$ if (Timestamp.class.isInstance(value)) [ FD ]
Line_2 $$ public <X> OffsetTime wrap(X value, WrapperOptions options) -->Line_12 $$ if (Timestamp.class.isInstance(value)) [ CD ]
Line_2 $$ public <X> OffsetTime wrap(X value, WrapperOptions options) -->Line_16 $$ if (Date.class.isInstance(value)) [ CD ]
Line_17 $$ final Date date = (Date) value-->Line_18 $$ return OffsetTime.ofInstant(date.toInstant(), ZoneId.systemDefault())[ FD ]
Line_6 $$ if (OffsetTime.class.isInstance(value)) -->Line_7 $$ return (OffsetTime) value[ CD ]
Line_12 $$ if (Timestamp.class.isInstance(value)) -->Line_13 $$ final Timestamp ts = (Timestamp) value[ CD ]
Line_2 $$ public <X> OffsetTime wrap(X value, WrapperOptions options) -->Line_3 $$ if (value == null) [ FD ]
Line_13 $$ final Timestamp ts = (Timestamp) value-->Line_14 $$ return OffsetTime.ofInstant(ts.toInstant(), ZoneId.systemDefault())[ FD ]
Line_24 $$ final Calendar calendar = (Calendar) value-->Line_25 $$ return OffsetTime.ofInstant(calendar.toInstant(), calendar.getTimeZone().toZoneId())[ FD ]
Line_16 $$ if (Date.class.isInstance(value)) -->Line_17 $$ final Date date = (Date) value[ CD ]
Line_12 $$ if (Timestamp.class.isInstance(value)) -->Line_14 $$ return OffsetTime.ofInstant(ts.toInstant(), ZoneId.systemDefault())[ CD ]
Line_2 $$ public <X> OffsetTime wrap(X value, WrapperOptions options) -->Line_16 $$ if (Date.class.isInstance(value)) [ FD ]
Line_2 $$ public <X> OffsetTime wrap(X value, WrapperOptions options) -->Line_6 $$ if (OffsetTime.class.isInstance(value)) [ CD ]
Line_2 $$ public <X> OffsetTime wrap(X value, WrapperOptions options) -->Line_9 $$ if (Time.class.isInstance(value)) [ CD ]
Line_2 $$ public <X> OffsetTime wrap(X value, WrapperOptions options) -->Line_20 $$ if (Long.class.isInstance(value)) [ CD ]
Line_16 $$ if (Date.class.isInstance(value)) -->Line_18 $$ return OffsetTime.ofInstant(date.toInstant(), ZoneId.systemDefault())[ CD ]
