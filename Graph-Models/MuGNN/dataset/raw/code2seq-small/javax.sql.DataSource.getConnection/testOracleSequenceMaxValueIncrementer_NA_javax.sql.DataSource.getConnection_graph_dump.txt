Line_2 $$ public void testOracleSequenceMaxValueIncrementer() throws SQLException -->Line_6 $$ given(resultSet.next()).willReturn(true)[ CD ]
Line_8 $$ OracleSequenceMaxValueIncrementer incrementer = new OracleSequenceMaxValueIncrementer()-->Line_12 $$ incrementer.afterPropertiesSet()[ FD ]
Line_2 $$ public void testOracleSequenceMaxValueIncrementer() throws SQLException -->Line_16 $$ verify(statement, times(2)).close()[ CD ]
Line_2 $$ public void testOracleSequenceMaxValueIncrementer() throws SQLException -->Line_15 $$ verify(resultSet, times(2)).close()[ CD ]
Line_2 $$ public void testOracleSequenceMaxValueIncrementer() throws SQLException -->Line_14 $$ assertEquals("12", incrementer.nextStringValue())[ CD ]
Line_8 $$ OracleSequenceMaxValueIncrementer incrementer = new OracleSequenceMaxValueIncrementer()-->Line_10 $$ incrementer.setIncrementerName("myseq")[ FD ]
Line_8 $$ OracleSequenceMaxValueIncrementer incrementer = new OracleSequenceMaxValueIncrementer()-->Line_9 $$ incrementer.setDataSource(dataSource)[ FD ]
Line_2 $$ public void testOracleSequenceMaxValueIncrementer() throws SQLException -->Line_13 $$ assertEquals(10, incrementer.nextLongValue())[ CD ]
Line_8 $$ OracleSequenceMaxValueIncrementer incrementer = new OracleSequenceMaxValueIncrementer()-->Line_11 $$ incrementer.setPaddingLength(2)[ FD ]
Line_2 $$ public void testOracleSequenceMaxValueIncrementer() throws SQLException -->Line_7 $$ given(resultSet.getLong(1)).willReturn(10L, 12L)[ CD ]
Line_2 $$ public void testOracleSequenceMaxValueIncrementer() throws SQLException -->Line_3 $$ given(dataSource.getConnection()).willReturn(connection)[ CD ]
Line_2 $$ public void testOracleSequenceMaxValueIncrementer() throws SQLException -->Line_11 $$ incrementer.setPaddingLength(2)[ CD ]
Line_2 $$ public void testOracleSequenceMaxValueIncrementer() throws SQLException -->Line_17 $$ verify(connection, times(2)).close()[ CD ]
Line_2 $$ public void testOracleSequenceMaxValueIncrementer() throws SQLException -->Line_12 $$ incrementer.afterPropertiesSet()[ CD ]
Line_2 $$ public void testOracleSequenceMaxValueIncrementer() throws SQLException -->Line_10 $$ incrementer.setIncrementerName("myseq")[ CD ]
Line_8 $$ OracleSequenceMaxValueIncrementer incrementer = new OracleSequenceMaxValueIncrementer()-->Line_14 $$ assertEquals("12", incrementer.nextStringValue())[ FD ]
Line_8 $$ OracleSequenceMaxValueIncrementer incrementer = new OracleSequenceMaxValueIncrementer()-->Line_13 $$ assertEquals(10, incrementer.nextLongValue())[ FD ]
Line_2 $$ public void testOracleSequenceMaxValueIncrementer() throws SQLException -->Line_4 $$ given(connection.createStatement()).willReturn(statement)[ CD ]
Line_2 $$ public void testOracleSequenceMaxValueIncrementer() throws SQLException -->Line_8 $$ OracleSequenceMaxValueIncrementer incrementer = new OracleSequenceMaxValueIncrementer()[ CD ]
Line_2 $$ public void testOracleSequenceMaxValueIncrementer() throws SQLException -->Line_5 $$ given(statement.executeQuery("select myseq.nextval from dual")).willReturn(resultSet)[ CD ]
Line_2 $$ public void testOracleSequenceMaxValueIncrementer() throws SQLException -->Line_9 $$ incrementer.setDataSource(dataSource)[ CD ]
