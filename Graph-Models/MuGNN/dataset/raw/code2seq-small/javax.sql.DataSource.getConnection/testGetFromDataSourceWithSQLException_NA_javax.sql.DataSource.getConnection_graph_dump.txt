Line_2 $$ public void testGetFromDataSourceWithSQLException() throws Exception -->Line_7 $$ assertIsEmpty(sec)[ CD ]
Line_2 $$ public void testGetFromDataSourceWithSQLException() throws Exception -->Line_6 $$ SQLErrorCodes sec = SQLErrorCodesFactory.getInstance().getErrorCodes(dataSource)[ CD ]
Line_2 $$ public void testGetFromDataSourceWithSQLException() throws Exception -->Line_4 $$ DataSource dataSource = mock(DataSource.class)[ CD ]
Line_4 $$ DataSource dataSource = mock(DataSource.class)-->Line_5 $$ given(dataSource.getConnection()).willThrow(expectedSQLException)[ FD ]
Line_4 $$ DataSource dataSource = mock(DataSource.class)-->Line_6 $$ SQLErrorCodes sec = SQLErrorCodesFactory.getInstance().getErrorCodes(dataSource)[ FD ]
Line_2 $$ public void testGetFromDataSourceWithSQLException() throws Exception -->Line_5 $$ given(dataSource.getConnection()).willThrow(expectedSQLException)[ CD ]
Line_6 $$ SQLErrorCodes sec = SQLErrorCodesFactory.getInstance().getErrorCodes(dataSource)-->Line_7 $$ assertIsEmpty(sec)[ FD ]
Line_3 $$ SQLException expectedSQLException = new SQLException()-->Line_5 $$ given(dataSource.getConnection()).willThrow(expectedSQLException)[ FD ]
Line_2 $$ public void testGetFromDataSourceWithSQLException() throws Exception -->Line_3 $$ SQLException expectedSQLException = new SQLException()[ CD ]
