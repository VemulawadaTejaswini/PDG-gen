Line_10 $$ tt.execute(new TransactionCallbackWithoutResult() -->Line_21 $$ assertTrue("Is new transaction", status.isNewTransaction())[ FD ]
Line_17 $$ tt2.execute(new TransactionCallbackWithoutResult() -->Line_21 $$ assertTrue("Is new transaction", status.isNewTransaction())[ CD ]
Line_6 $$ final TransactionTemplate tt = new TransactionTemplate(tm)-->Line_10 $$ tt.execute(new TransactionCallbackWithoutResult() [ FD ]
Line_2 $$ public void testPropagationSupportsAndRequiresNewWithEarlyAccess() throws Exception -->Line_3 $$ final Connection con1 = mock(Connection.class)[ CD ]
Line_2 $$ public void testPropagationSupportsAndRequiresNewWithEarlyAccess() throws Exception -->Line_8 $$ assertTrue("Hasn't thread connection", !TransactionSynchronizationManager.hasResource(ds))[ CD ]
Line_17 $$ tt2.execute(new TransactionCallbackWithoutResult() -->Line_21 $$ assertTrue("Is new transaction", status.isNewTransaction())[ FD ]
Line_10 $$ tt.execute(new TransactionCallbackWithoutResult() -->Line_12 $$ assertTrue("Synchronization active", TransactionSynchronizationManager.isSynchronizationActive())[ CD ]
Line_17 $$ tt2.execute(new TransactionCallbackWithoutResult() -->Line_23 $$ assertSame(con2, DataSourceUtils.getConnection(ds))[ CD ]
Line_3 $$ final Connection con1 = mock(Connection.class)-->Line_14 $$ assertSame(con1, DataSourceUtils.getConnection(ds))[ FD ]
Line_3 $$ final Connection con1 = mock(Connection.class)-->Line_5 $$ given(ds.getConnection()).willReturn(con1, con2)[ FD ]
Line_2 $$ public void testPropagationSupportsAndRequiresNewWithEarlyAccess() throws Exception -->Line_5 $$ given(ds.getConnection()).willReturn(con1, con2)[ CD ]
Line_10 $$ tt.execute(new TransactionCallbackWithoutResult() -->Line_15 $$ TransactionTemplate tt2 = new TransactionTemplate(tm)[ CD ]
Line_2 $$ public void testPropagationSupportsAndRequiresNewWithEarlyAccess() throws Exception -->Line_30 $$ verify(con1).close()[ CD ]
Line_2 $$ public void testPropagationSupportsAndRequiresNewWithEarlyAccess() throws Exception -->Line_6 $$ final TransactionTemplate tt = new TransactionTemplate(tm)[ CD ]
Line_17 $$ tt2.execute(new TransactionCallbackWithoutResult() -->Line_19 $$ assertTrue("Has thread connection", TransactionSynchronizationManager.hasResource(ds))[ CD ]
Line_2 $$ public void testPropagationSupportsAndRequiresNewWithEarlyAccess() throws Exception -->Line_9 $$ assertTrue("Synchronization not active", !TransactionSynchronizationManager.isSynchronizationActive())[ CD ]
Line_2 $$ public void testPropagationSupportsAndRequiresNewWithEarlyAccess() throws Exception -->Line_32 $$ verify(con2).close()[ CD ]
Line_2 $$ public void testPropagationSupportsAndRequiresNewWithEarlyAccess() throws Exception -->Line_4 $$ final Connection con2 = mock(Connection.class)[ CD ]
Line_2 $$ public void testPropagationSupportsAndRequiresNewWithEarlyAccess() throws Exception -->Line_31 $$ verify(con2).commit()[ CD ]
Line_10 $$ tt.execute(new TransactionCallbackWithoutResult() -->Line_13 $$ assertSame(con1, DataSourceUtils.getConnection(ds))[ CD ]
Line_2 $$ public void testPropagationSupportsAndRequiresNewWithEarlyAccess() throws Exception -->Line_10 $$ tt.execute(new TransactionCallbackWithoutResult() [ CD ]
Line_6 $$ final TransactionTemplate tt = new TransactionTemplate(tm)-->Line_7 $$ tt.setPropagationBehavior(TransactionDefinition.PROPAGATION_SUPPORTS)[ FD ]
Line_3 $$ final Connection con1 = mock(Connection.class)-->Line_13 $$ assertSame(con1, DataSourceUtils.getConnection(ds))[ FD ]
Line_17 $$ tt2.execute(new TransactionCallbackWithoutResult() -->Line_22 $$ assertSame(con2, DataSourceUtils.getConnection(ds))[ CD ]
Line_10 $$ tt.execute(new TransactionCallbackWithoutResult() -->Line_26 $$ assertSame(con1, DataSourceUtils.getConnection(ds))[ CD ]
Line_2 $$ public void testPropagationSupportsAndRequiresNewWithEarlyAccess() throws Exception -->Line_7 $$ tt.setPropagationBehavior(TransactionDefinition.PROPAGATION_SUPPORTS)[ CD ]
Line_10 $$ tt.execute(new TransactionCallbackWithoutResult() -->Line_17 $$ tt2.execute(new TransactionCallbackWithoutResult() [ CD ]
Line_3 $$ final Connection con1 = mock(Connection.class)-->Line_26 $$ assertSame(con1, DataSourceUtils.getConnection(ds))[ FD ]
Line_15 $$ TransactionTemplate tt2 = new TransactionTemplate(tm)-->Line_17 $$ tt2.execute(new TransactionCallbackWithoutResult() [ FD ]
Line_15 $$ TransactionTemplate tt2 = new TransactionTemplate(tm)-->Line_16 $$ tt2.setPropagationBehavior(TransactionDefinition.PROPAGATION_REQUIRES_NEW)[ FD ]
Line_4 $$ final Connection con2 = mock(Connection.class)-->Line_5 $$ given(ds.getConnection()).willReturn(con1, con2)[ FD ]
Line_4 $$ final Connection con2 = mock(Connection.class)-->Line_22 $$ assertSame(con2, DataSourceUtils.getConnection(ds))[ FD ]
Line_2 $$ public void testPropagationSupportsAndRequiresNewWithEarlyAccess() throws Exception -->Line_29 $$ assertTrue("Hasn't thread connection", !TransactionSynchronizationManager.hasResource(ds))[ CD ]
Line_4 $$ final Connection con2 = mock(Connection.class)-->Line_23 $$ assertSame(con2, DataSourceUtils.getConnection(ds))[ FD ]
Line_4 $$ final Connection con2 = mock(Connection.class)-->Line_31 $$ verify(con2).commit()[ FD ]
Line_10 $$ tt.execute(new TransactionCallbackWithoutResult() -->Line_14 $$ assertSame(con1, DataSourceUtils.getConnection(ds))[ CD ]
Line_4 $$ final Connection con2 = mock(Connection.class)-->Line_32 $$ verify(con2).close()[ FD ]
Line_17 $$ tt2.execute(new TransactionCallbackWithoutResult() -->Line_20 $$ assertTrue("Synchronization active", TransactionSynchronizationManager.isSynchronizationActive())[ CD ]
Line_3 $$ final Connection con1 = mock(Connection.class)-->Line_30 $$ verify(con1).close()[ FD ]
Line_10 $$ tt.execute(new TransactionCallbackWithoutResult() -->Line_16 $$ tt2.setPropagationBehavior(TransactionDefinition.PROPAGATION_REQUIRES_NEW)[ CD ]
