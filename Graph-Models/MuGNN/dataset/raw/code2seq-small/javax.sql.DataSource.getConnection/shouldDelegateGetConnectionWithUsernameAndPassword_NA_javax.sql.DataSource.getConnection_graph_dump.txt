Line_2 $$ public void shouldDelegateGetConnectionWithUsernameAndPassword() throws Exception -->Line_3 $$ Connection connection = mock(Connection.class)[ CD ]
Line_5 $$ String password = "password"-->Line_7 $$ assertThat(dataSource.getConnection(username, password), is(connection))[ FD ]
Line_2 $$ public void shouldDelegateGetConnectionWithUsernameAndPassword() throws Exception -->Line_4 $$ String username = "username"[ CD ]
Line_5 $$ String password = "password"-->Line_6 $$ given(delegate.getConnection(username, password)).willReturn(connection)[ FD ]
Line_2 $$ public void shouldDelegateGetConnectionWithUsernameAndPassword() throws Exception -->Line_6 $$ given(delegate.getConnection(username, password)).willReturn(connection)[ CD ]
Line_2 $$ public void shouldDelegateGetConnectionWithUsernameAndPassword() throws Exception -->Line_5 $$ String password = "password"[ CD ]
Line_4 $$ String username = "username"-->Line_7 $$ assertThat(dataSource.getConnection(username, password), is(connection))[ FD ]
Line_3 $$ Connection connection = mock(Connection.class)-->Line_7 $$ assertThat(dataSource.getConnection(username, password), is(connection))[ FD ]
Line_4 $$ String username = "username"-->Line_6 $$ given(delegate.getConnection(username, password)).willReturn(connection)[ FD ]
Line_2 $$ public void shouldDelegateGetConnectionWithUsernameAndPassword() throws Exception -->Line_7 $$ assertThat(dataSource.getConnection(username, password), is(connection))[ CD ]
Line_3 $$ Connection connection = mock(Connection.class)-->Line_6 $$ given(delegate.getConnection(username, password)).willReturn(connection)[ FD ]
