Line_2 $$ private SQLErrorCodes getErrorCodesFromDataSource(String productName, SQLErrorCodesFactory factory) throws Exception -->Line_18 $$ verify(connection).close()[ CD ]
Line_2 $$ private SQLErrorCodes getErrorCodesFromDataSource(String productName, SQLErrorCodesFactory factory) throws Exception -->Line_17 $$ assertSame("Cached per DataSource", sec2, sec)[ CD ]
Line_7 $$ DataSource dataSource = mock(DataSource.class)-->Line_16 $$ SQLErrorCodes sec2 = secf.getErrorCodes(dataSource)[ FD ]
Line_2 $$ private SQLErrorCodes getErrorCodesFromDataSource(String productName, SQLErrorCodesFactory factory) throws Exception -->Line_7 $$ DataSource dataSource = mock(DataSource.class)[ CD ]
Line_10 $$ if (factory != null) -->Line_13 $$ secf = SQLErrorCodesFactory.getInstance()[ CD ]
Line_7 $$ DataSource dataSource = mock(DataSource.class)-->Line_15 $$ SQLErrorCodes sec = secf.getErrorCodes(dataSource)[ FD ]
Line_11 $$ secf = factory-->Line_13 $$ secf = SQLErrorCodesFactory.getInstance()[ FD ]
Line_3 $$ DatabaseMetaData databaseMetaData = mock(DatabaseMetaData.class)-->Line_6 $$ given(connection.getMetaData()).willReturn(databaseMetaData)[ FD ]
Line_5 $$ Connection connection = mock(Connection.class)-->Line_6 $$ given(connection.getMetaData()).willReturn(databaseMetaData)[ FD ]
Line_2 $$ private SQLErrorCodes getErrorCodesFromDataSource(String productName, SQLErrorCodesFactory factory) throws Exception -->Line_15 $$ SQLErrorCodes sec = secf.getErrorCodes(dataSource)[ CD ]
Line_13 $$ secf = SQLErrorCodesFactory.getInstance()-->Line_15 $$ SQLErrorCodes sec = secf.getErrorCodes(dataSource)[ FD ]
Line_2 $$ private SQLErrorCodes getErrorCodesFromDataSource(String productName, SQLErrorCodesFactory factory) throws Exception -->Line_3 $$ DatabaseMetaData databaseMetaData = mock(DatabaseMetaData.class)[ CD ]
Line_9 $$ SQLErrorCodesFactory secf = null-->Line_16 $$ SQLErrorCodes sec2 = secf.getErrorCodes(dataSource)[ FD ]
Line_9 $$ SQLErrorCodesFactory secf = null-->Line_15 $$ SQLErrorCodes sec = secf.getErrorCodes(dataSource)[ FD ]
Line_11 $$ secf = factory-->Line_16 $$ SQLErrorCodes sec2 = secf.getErrorCodes(dataSource)[ FD ]
Line_2 $$ private SQLErrorCodes getErrorCodesFromDataSource(String productName, SQLErrorCodesFactory factory) throws Exception -->Line_5 $$ Connection connection = mock(Connection.class)[ CD ]
Line_9 $$ SQLErrorCodesFactory secf = null-->Line_13 $$ secf = SQLErrorCodesFactory.getInstance()[ FD ]
Line_7 $$ DataSource dataSource = mock(DataSource.class)-->Line_8 $$ given(dataSource.getConnection()).willReturn(connection)[ FD ]
Line_3 $$ DatabaseMetaData databaseMetaData = mock(DatabaseMetaData.class)-->Line_4 $$ given(databaseMetaData.getDatabaseProductName()).willReturn(productName)[ FD ]
Line_16 $$ SQLErrorCodes sec2 = secf.getErrorCodes(dataSource)-->Line_17 $$ assertSame("Cached per DataSource", sec2, sec)[ FD ]
Line_2 $$ private SQLErrorCodes getErrorCodesFromDataSource(String productName, SQLErrorCodesFactory factory) throws Exception -->Line_19 $$ return sec[ CD ]
Line_2 $$ private SQLErrorCodes getErrorCodesFromDataSource(String productName, SQLErrorCodesFactory factory) throws Exception -->Line_16 $$ SQLErrorCodes sec2 = secf.getErrorCodes(dataSource)[ CD ]
Line_10 $$ if (factory != null) -->Line_11 $$ secf = factory[ CD ]
Line_11 $$ secf = factory-->Line_15 $$ SQLErrorCodes sec = secf.getErrorCodes(dataSource)[ FD ]
Line_15 $$ SQLErrorCodes sec = secf.getErrorCodes(dataSource)-->Line_17 $$ assertSame("Cached per DataSource", sec2, sec)[ FD ]
Line_13 $$ secf = SQLErrorCodesFactory.getInstance()-->Line_16 $$ SQLErrorCodes sec2 = secf.getErrorCodes(dataSource)[ FD ]
Line_5 $$ Connection connection = mock(Connection.class)-->Line_18 $$ verify(connection).close()[ FD ]
Line_2 $$ private SQLErrorCodes getErrorCodesFromDataSource(String productName, SQLErrorCodesFactory factory) throws Exception -->Line_11 $$ secf = factory[ FD ]
Line_5 $$ Connection connection = mock(Connection.class)-->Line_8 $$ given(dataSource.getConnection()).willReturn(connection)[ FD ]
Line_2 $$ private SQLErrorCodes getErrorCodesFromDataSource(String productName, SQLErrorCodesFactory factory) throws Exception -->Line_4 $$ given(databaseMetaData.getDatabaseProductName()).willReturn(productName)[ FD ]
Line_2 $$ private SQLErrorCodes getErrorCodesFromDataSource(String productName, SQLErrorCodesFactory factory) throws Exception -->Line_4 $$ given(databaseMetaData.getDatabaseProductName()).willReturn(productName)[ CD ]
Line_2 $$ private SQLErrorCodes getErrorCodesFromDataSource(String productName, SQLErrorCodesFactory factory) throws Exception -->Line_10 $$ if (factory != null) [ FD ]
Line_2 $$ private SQLErrorCodes getErrorCodesFromDataSource(String productName, SQLErrorCodesFactory factory) throws Exception -->Line_9 $$ SQLErrorCodesFactory secf = null[ CD ]
Line_9 $$ SQLErrorCodesFactory secf = null-->Line_11 $$ secf = factory[ FD ]
Line_2 $$ private SQLErrorCodes getErrorCodesFromDataSource(String productName, SQLErrorCodesFactory factory) throws Exception -->Line_8 $$ given(dataSource.getConnection()).willReturn(connection)[ CD ]
Line_2 $$ private SQLErrorCodes getErrorCodesFromDataSource(String productName, SQLErrorCodesFactory factory) throws Exception -->Line_10 $$ if (factory != null) [ CD ]
Line_2 $$ private SQLErrorCodes getErrorCodesFromDataSource(String productName, SQLErrorCodesFactory factory) throws Exception -->Line_6 $$ given(connection.getMetaData()).willReturn(databaseMetaData)[ CD ]
