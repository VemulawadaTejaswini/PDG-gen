Line_7 $$ CountingAttributeChangeNotificationListener listener = new CountingAttributeChangeNotificationListener()-->Line_9 $$ listenerBean.setNotificationListener(listener)[ FD ]
Line_2 $$ public void testRegisterNotificationListenerWithFilter() throws Exception -->Line_22 $$ exporter.setBeans(beans)[ CD ]
Line_2 $$ public void testRegisterNotificationListenerWithFilter() throws Exception -->Line_9 $$ listenerBean.setNotificationListener(listener)[ CD ]
Line_2 $$ public void testRegisterNotificationListenerWithFilter() throws Exception -->Line_6 $$ beans.put(objectName.getCanonicalName(), bean)[ CD ]
Line_2 $$ public void testRegisterNotificationListenerWithFilter() throws Exception -->Line_30 $$ assertEquals("Listener incorrectly notified for Age", 0, listener.getCount(ageAttribute))[ CD ]
Line_2 $$ public void testRegisterNotificationListenerWithFilter() throws Exception -->Line_21 $$ exporter.setServer(server)[ CD ]
Line_2 $$ public void testRegisterNotificationListenerWithFilter() throws Exception -->Line_23 $$ exporter.setNotificationListeners(new NotificationListenerBean[] [ CD ]
Line_12 $$ if (notification instanceof AttributeChangeNotification) -->Line_14 $$ return "Name".equals(changeNotification.getAttributeName())[ CD ]
Line_2 $$ public void testRegisterNotificationListenerWithFilter() throws Exception -->Line_8 $$ NotificationListenerBean listenerBean = new NotificationListenerBean()[ CD ]
Line_13 $$ AttributeChangeNotification changeNotification = (AttributeChangeNotification) notification-->Line_14 $$ return "Name".equals(changeNotification.getAttributeName())[ FD ]
Line_12 $$ if (notification instanceof AttributeChangeNotification) -->Line_13 $$ AttributeChangeNotification changeNotification = (AttributeChangeNotification) notification[ CD ]
Line_2 $$ public void testRegisterNotificationListenerWithFilter() throws Exception -->Line_4 $$ JmxTestBean bean = new JmxTestBean()[ CD ]
Line_3 $$ ObjectName objectName = ObjectName.getInstance("spring:name=Test")-->Line_6 $$ beans.put(objectName.getCanonicalName(), bean)[ FD ]
Line_2 $$ public void testRegisterNotificationListenerWithFilter() throws Exception -->Line_10 $$ listenerBean.setNotificationFilter(new NotificationFilter() [ CD ]
Line_2 $$ public void testRegisterNotificationListenerWithFilter() throws Exception -->Line_29 $$ assertEquals("Listener not notified for Name", 1, listener.getCount(nameAttribute))[ CD ]
Line_12 $$ if (notification instanceof AttributeChangeNotification) -->Line_16 $$ return false[ CD ]
Line_2 $$ public void testRegisterNotificationListenerWithFilter() throws Exception -->Line_3 $$ ObjectName objectName = ObjectName.getInstance("spring:name=Test")[ CD ]
Line_2 $$ public void testRegisterNotificationListenerWithFilter() throws Exception -->Line_7 $$ CountingAttributeChangeNotificationListener listener = new CountingAttributeChangeNotificationListener()[ CD ]
Line_5 $$ Map<String, Object> beans = new HashMap<String, Object>()-->Line_6 $$ beans.put(objectName.getCanonicalName(), bean)[ FD ]
Line_8 $$ NotificationListenerBean listenerBean = new NotificationListenerBean()-->Line_10 $$ listenerBean.setNotificationFilter(new NotificationFilter() [ FD ]
Line_10 $$ listenerBean.setNotificationFilter(new NotificationFilter() -->Line_12 $$ if (notification instanceof AttributeChangeNotification) [ CD ]
Line_2 $$ public void testRegisterNotificationListenerWithFilter() throws Exception -->Line_28 $$ server.setAttribute(objectName, new Attribute(ageAttribute, new Integer(90)))[ CD ]
Line_7 $$ CountingAttributeChangeNotificationListener listener = new CountingAttributeChangeNotificationListener()-->Line_30 $$ assertEquals("Listener incorrectly notified for Age", 0, listener.getCount(ageAttribute))[ FD ]
Line_2 $$ public void testRegisterNotificationListenerWithFilter() throws Exception -->Line_5 $$ Map<String, Object> beans = new HashMap<String, Object>()[ CD ]
Line_2 $$ public void testRegisterNotificationListenerWithFilter() throws Exception -->Line_27 $$ server.setAttribute(objectName, new Attribute(nameAttribute, "Rob Harrop"))[ CD ]
Line_3 $$ ObjectName objectName = ObjectName.getInstance("spring:name=Test")-->Line_27 $$ server.setAttribute(objectName, new Attribute(nameAttribute, "Rob Harrop"))[ FD ]
Line_7 $$ CountingAttributeChangeNotificationListener listener = new CountingAttributeChangeNotificationListener()-->Line_29 $$ assertEquals("Listener not notified for Name", 1, listener.getCount(nameAttribute))[ FD ]
Line_5 $$ Map<String, Object> beans = new HashMap<String, Object>()-->Line_22 $$ exporter.setBeans(beans)[ FD ]
Line_3 $$ ObjectName objectName = ObjectName.getInstance("spring:name=Test")-->Line_28 $$ server.setAttribute(objectName, new Attribute(ageAttribute, new Integer(90)))[ FD ]
Line_8 $$ NotificationListenerBean listenerBean = new NotificationListenerBean()-->Line_9 $$ listenerBean.setNotificationListener(listener)[ FD ]
Line_10 $$ listenerBean.setNotificationFilter(new NotificationFilter() -->Line_12 $$ if (notification instanceof AttributeChangeNotification) [ FD ]
Line_2 $$ public void testRegisterNotificationListenerWithFilter() throws Exception -->Line_24 $$ start(exporter)[ CD ]
Line_4 $$ JmxTestBean bean = new JmxTestBean()-->Line_6 $$ beans.put(objectName.getCanonicalName(), bean)[ FD ]
