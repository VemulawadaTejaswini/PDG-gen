Line_5 $$ if (!transactionId.contains("puid") && transactionId.contains("itype")) -->Line_6 $$ final Resource transaction = new LogStoreResource.LogStoreRuntimeResource(oi.getObjectName())[ CD ]
Line_5 $$ if (!transactionId.contains("puid") && transactionId.contains("itype")) -->Line_15 $$ parent.registerChild(element, transaction)[ CD ]
Line_3 $$ for (ObjectInstance oi : transactions) -->Line_6 $$ final Resource transaction = new LogStoreResource.LogStoreRuntimeResource(oi.getObjectName())[ FD ]
Line_2 $$ private void addTransactions(final Resource parent, Set<ObjectInstance> transactions, MBeanServer mbs) throws IntrospectionException, InstanceNotFoundException, IOException, ReflectionException, MalformedObjectNameException -->Line_8 $$ Map<String, String> tAttributes = getMBeanValues(mbs, oi.getObjectName(), LogStoreConstants.TXN_JMX_NAMES)[ FD ]
Line_9 $$ String txnId = tAttributes.get("Id")-->Line_14 $$ final PathElement element = PathElement.pathElement(LogStoreConstants.TRANSACTIONS, txnId)[ FD ]
Line_2 $$ private void addTransactions(final Resource parent, Set<ObjectInstance> transactions, MBeanServer mbs) throws IntrospectionException, InstanceNotFoundException, IOException, ReflectionException, MalformedObjectNameException -->Line_15 $$ parent.registerChild(element, transaction)[ FD ]
Line_5 $$ if (!transactionId.contains("puid") && transactionId.contains("itype")) -->Line_7 $$ final ModelNode model = transaction.getModel()[ CD ]
Line_2 $$ private void addTransactions(final Resource parent, Set<ObjectInstance> transactions, MBeanServer mbs) throws IntrospectionException, InstanceNotFoundException, IOException, ReflectionException, MalformedObjectNameException -->Line_13 $$ addParticipants(transaction, participants, mbs)[ FD ]
Line_5 $$ if (!transactionId.contains("puid") && transactionId.contains("itype")) -->Line_10 $$ addAttributes(model, LogStoreConstants.MODEL_TO_JMX_TXN_NAMES, tAttributes)[ CD ]
Line_5 $$ if (!transactionId.contains("puid") && transactionId.contains("itype")) -->Line_9 $$ String txnId = tAttributes.get("Id")[ CD ]
Line_8 $$ Map<String, String> tAttributes = getMBeanValues(mbs, oi.getObjectName(), LogStoreConstants.TXN_JMX_NAMES)-->Line_9 $$ String txnId = tAttributes.get("Id")[ FD ]
Line_6 $$ final Resource transaction = new LogStoreResource.LogStoreRuntimeResource(oi.getObjectName())-->Line_15 $$ parent.registerChild(element, transaction)[ FD ]
Line_12 $$ Set<ObjectInstance> participants = mbs.queryMBeans(new ObjectName(participantQuery), null)-->Line_13 $$ addParticipants(transaction, participants, mbs)[ FD ]
Line_6 $$ final Resource transaction = new LogStoreResource.LogStoreRuntimeResource(oi.getObjectName())-->Line_13 $$ addParticipants(transaction, participants, mbs)[ FD ]
Line_7 $$ final ModelNode model = transaction.getModel()-->Line_10 $$ addAttributes(model, LogStoreConstants.MODEL_TO_JMX_TXN_NAMES, tAttributes)[ FD ]
Line_5 $$ if (!transactionId.contains("puid") && transactionId.contains("itype")) -->Line_14 $$ final PathElement element = PathElement.pathElement(LogStoreConstants.TRANSACTIONS, txnId)[ CD ]
Line_8 $$ Map<String, String> tAttributes = getMBeanValues(mbs, oi.getObjectName(), LogStoreConstants.TXN_JMX_NAMES)-->Line_10 $$ addAttributes(model, LogStoreConstants.MODEL_TO_JMX_TXN_NAMES, tAttributes)[ FD ]
Line_14 $$ final PathElement element = PathElement.pathElement(LogStoreConstants.TRANSACTIONS, txnId)-->Line_15 $$ parent.registerChild(element, transaction)[ FD ]
Line_5 $$ if (!transactionId.contains("puid") && transactionId.contains("itype")) -->Line_11 $$ String participantQuery = transactionId + ",puid=*"[ CD ]
Line_6 $$ final Resource transaction = new LogStoreResource.LogStoreRuntimeResource(oi.getObjectName())-->Line_7 $$ final ModelNode model = transaction.getModel()[ FD ]
Line_4 $$ String transactionId = oi.getObjectName().getCanonicalName()-->Line_5 $$ if (!transactionId.contains("puid") && transactionId.contains("itype")) [ FD ]
Line_5 $$ if (!transactionId.contains("puid") && transactionId.contains("itype")) -->Line_12 $$ Set<ObjectInstance> participants = mbs.queryMBeans(new ObjectName(participantQuery), null)[ CD ]
Line_3 $$ for (ObjectInstance oi : transactions) -->Line_4 $$ String transactionId = oi.getObjectName().getCanonicalName()[ FD ]
Line_5 $$ if (!transactionId.contains("puid") && transactionId.contains("itype")) -->Line_8 $$ Map<String, String> tAttributes = getMBeanValues(mbs, oi.getObjectName(), LogStoreConstants.TXN_JMX_NAMES)[ CD ]
Line_5 $$ if (!transactionId.contains("puid") && transactionId.contains("itype")) -->Line_13 $$ addParticipants(transaction, participants, mbs)[ CD ]
Line_2 $$ private void addTransactions(final Resource parent, Set<ObjectInstance> transactions, MBeanServer mbs) throws IntrospectionException, InstanceNotFoundException, IOException, ReflectionException, MalformedObjectNameException -->Line_12 $$ Set<ObjectInstance> participants = mbs.queryMBeans(new ObjectName(participantQuery), null)[ FD ]
Line_3 $$ for (ObjectInstance oi : transactions) -->Line_8 $$ Map<String, String> tAttributes = getMBeanValues(mbs, oi.getObjectName(), LogStoreConstants.TXN_JMX_NAMES)[ FD ]
