Line_7 $$ CountingAttributeChangeNotificationListener listener = new CountingAttributeChangeNotificationListener()-->Line_9 $$ listenerBean.setNotificationListener(listener)[ FD ]
Line_2 $$ public void testRegisterNotificationListenerForAllMBeans() throws Exception -->Line_14 $$ start(exporter)[ CD ]
Line_2 $$ public void testRegisterNotificationListenerForAllMBeans() throws Exception -->Line_5 $$ Map<String, Object> beans = new HashMap<String, Object>()[ CD ]
Line_2 $$ public void testRegisterNotificationListenerForAllMBeans() throws Exception -->Line_6 $$ beans.put(objectName.getCanonicalName(), bean)[ CD ]
Line_2 $$ public void testRegisterNotificationListenerForAllMBeans() throws Exception -->Line_8 $$ NotificationListenerBean listenerBean = new NotificationListenerBean()[ CD ]
Line_10 $$ MBeanExporter exporter = new MBeanExporter()-->Line_13 $$ exporter.setNotificationListeners(new NotificationListenerBean[] [ FD ]
Line_15 $$ String attributeName = "Name"-->Line_17 $$ assertEquals("Listener not notified", 1, listener.getCount(attributeName))[ FD ]
Line_2 $$ public void testRegisterNotificationListenerForAllMBeans() throws Exception -->Line_11 $$ exporter.setServer(server)[ CD ]
Line_3 $$ ObjectName objectName = ObjectName.getInstance("spring:name=Test")-->Line_6 $$ beans.put(objectName.getCanonicalName(), bean)[ FD ]
Line_2 $$ public void testRegisterNotificationListenerForAllMBeans() throws Exception -->Line_17 $$ assertEquals("Listener not notified", 1, listener.getCount(attributeName))[ CD ]
Line_2 $$ public void testRegisterNotificationListenerForAllMBeans() throws Exception -->Line_12 $$ exporter.setBeans(beans)[ CD ]
Line_5 $$ Map<String, Object> beans = new HashMap<String, Object>()-->Line_6 $$ beans.put(objectName.getCanonicalName(), bean)[ FD ]
Line_5 $$ Map<String, Object> beans = new HashMap<String, Object>()-->Line_12 $$ exporter.setBeans(beans)[ FD ]
Line_2 $$ public void testRegisterNotificationListenerForAllMBeans() throws Exception -->Line_3 $$ ObjectName objectName = ObjectName.getInstance("spring:name=Test")[ CD ]
Line_2 $$ public void testRegisterNotificationListenerForAllMBeans() throws Exception -->Line_4 $$ JmxTestBean bean = new JmxTestBean()[ CD ]
Line_2 $$ public void testRegisterNotificationListenerForAllMBeans() throws Exception -->Line_16 $$ server.setAttribute(objectName, new Attribute(attributeName, "Rob Harrop"))[ CD ]
Line_7 $$ CountingAttributeChangeNotificationListener listener = new CountingAttributeChangeNotificationListener()-->Line_17 $$ assertEquals("Listener not notified", 1, listener.getCount(attributeName))[ FD ]
Line_2 $$ public void testRegisterNotificationListenerForAllMBeans() throws Exception -->Line_7 $$ CountingAttributeChangeNotificationListener listener = new CountingAttributeChangeNotificationListener()[ CD ]
Line_10 $$ MBeanExporter exporter = new MBeanExporter()-->Line_11 $$ exporter.setServer(server)[ FD ]
Line_2 $$ public void testRegisterNotificationListenerForAllMBeans() throws Exception -->Line_13 $$ exporter.setNotificationListeners(new NotificationListenerBean[] [ CD ]
Line_8 $$ NotificationListenerBean listenerBean = new NotificationListenerBean()-->Line_9 $$ listenerBean.setNotificationListener(listener)[ FD ]
Line_10 $$ MBeanExporter exporter = new MBeanExporter()-->Line_14 $$ start(exporter)[ FD ]
Line_2 $$ public void testRegisterNotificationListenerForAllMBeans() throws Exception -->Line_15 $$ String attributeName = "Name"[ CD ]
Line_3 $$ ObjectName objectName = ObjectName.getInstance("spring:name=Test")-->Line_16 $$ server.setAttribute(objectName, new Attribute(attributeName, "Rob Harrop"))[ FD ]
Line_2 $$ public void testRegisterNotificationListenerForAllMBeans() throws Exception -->Line_9 $$ listenerBean.setNotificationListener(listener)[ CD ]
Line_10 $$ MBeanExporter exporter = new MBeanExporter()-->Line_12 $$ exporter.setBeans(beans)[ FD ]
Line_2 $$ public void testRegisterNotificationListenerForAllMBeans() throws Exception -->Line_10 $$ MBeanExporter exporter = new MBeanExporter()[ CD ]
Line_4 $$ JmxTestBean bean = new JmxTestBean()-->Line_6 $$ beans.put(objectName.getCanonicalName(), bean)[ FD ]
