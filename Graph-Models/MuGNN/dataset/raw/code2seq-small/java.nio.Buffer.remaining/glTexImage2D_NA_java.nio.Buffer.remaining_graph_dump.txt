Line_2 $$ public void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, Buffer pixels) -->Line_10 $$ int byteOffset = webGLArray.byteOffset() + pixels.position() * 4[ FD ]
Line_6 $$ if (pixels.limit() > 1) -->Line_12 $$ gl.texImage2D(target, level, internalformat, width, height, border, format, type, buffer)[ CD ]
Line_6 $$ if (pixels.limit() > 1) -->Line_9 $$ int remainingBytes = pixels.remaining() * 4[ CD ]
Line_2 $$ public void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, Buffer pixels) -->Line_6 $$ if (pixels.limit() > 1) [ FD ]
Line_2 $$ public void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, Buffer pixels) -->Line_3 $$ if (pixels == null) [ FD ]
Line_10 $$ int byteOffset = webGLArray.byteOffset() + pixels.position() * 4-->Line_11 $$ Uint8Array buffer = Uint8ArrayNative.create(webGLArray.buffer(), byteOffset, remainingBytes)[ FD ]
Line_2 $$ public void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, Buffer pixels) -->Line_15 $$ gl.texImage2D(target, level, internalformat, format, type, pixmap.getCanvasElement())[ FD ]
Line_6 $$ if (pixels.limit() > 1) -->Line_8 $$ ArrayBufferView webGLArray = arrayHolder.getTypedArray()[ CD ]
Line_11 $$ Uint8Array buffer = Uint8ArrayNative.create(webGLArray.buffer(), byteOffset, remainingBytes)-->Line_12 $$ gl.texImage2D(target, level, internalformat, width, height, border, format, type, buffer)[ FD ]
Line_7 $$ HasArrayBufferView arrayHolder = (HasArrayBufferView) pixels-->Line_8 $$ ArrayBufferView webGLArray = arrayHolder.getTypedArray()[ FD ]
Line_2 $$ public void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, Buffer pixels) -->Line_12 $$ gl.texImage2D(target, level, internalformat, width, height, border, format, type, buffer)[ FD ]
Line_8 $$ ArrayBufferView webGLArray = arrayHolder.getTypedArray()-->Line_10 $$ int byteOffset = webGLArray.byteOffset() + pixels.position() * 4[ FD ]
Line_2 $$ public void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, Buffer pixels) -->Line_9 $$ int remainingBytes = pixels.remaining() * 4[ FD ]
Line_2 $$ public void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, Buffer pixels) -->Line_3 $$ if (pixels == null) [ CD ]
Line_6 $$ if (pixels.limit() > 1) -->Line_15 $$ gl.texImage2D(target, level, internalformat, format, type, pixmap.getCanvasElement())[ CD ]
Line_9 $$ int remainingBytes = pixels.remaining() * 4-->Line_11 $$ Uint8Array buffer = Uint8ArrayNative.create(webGLArray.buffer(), byteOffset, remainingBytes)[ FD ]
Line_8 $$ ArrayBufferView webGLArray = arrayHolder.getTypedArray()-->Line_11 $$ Uint8Array buffer = Uint8ArrayNative.create(webGLArray.buffer(), byteOffset, remainingBytes)[ FD ]
Line_3 $$ if (pixels == null) -->Line_6 $$ if (pixels.limit() > 1) [ CD ]
Line_6 $$ if (pixels.limit() > 1) -->Line_11 $$ Uint8Array buffer = Uint8ArrayNative.create(webGLArray.buffer(), byteOffset, remainingBytes)[ CD ]
Line_6 $$ if (pixels.limit() > 1) -->Line_7 $$ HasArrayBufferView arrayHolder = (HasArrayBufferView) pixels[ CD ]
Line_3 $$ if (pixels == null) -->Line_4 $$ gl.texImage2D(target, level, internalformat, width, height, border, format, type, null)[ CD ]
Line_6 $$ if (pixels.limit() > 1) -->Line_10 $$ int byteOffset = webGLArray.byteOffset() + pixels.position() * 4[ CD ]
Line_6 $$ if (pixels.limit() > 1) -->Line_14 $$ Pixmap pixmap = Pixmap.pixmaps.get(((IntBuffer) pixels).get(0))[ CD ]
Line_14 $$ Pixmap pixmap = Pixmap.pixmaps.get(((IntBuffer) pixels).get(0))-->Line_15 $$ gl.texImage2D(target, level, internalformat, format, type, pixmap.getCanvasElement())[ FD ]
Line_2 $$ public void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, Buffer pixels) -->Line_4 $$ gl.texImage2D(target, level, internalformat, width, height, border, format, type, null)[ FD ]
