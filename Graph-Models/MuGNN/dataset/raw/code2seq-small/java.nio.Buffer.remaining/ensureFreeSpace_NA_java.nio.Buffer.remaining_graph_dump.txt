Line_2 $$ private void ensureFreeSpace(int size) -->Line_3 $$ Preconditions.checkState(state == State.WRITING)[ CD ]
Line_4 $$ if (buf.remaining() < size) -->Line_13 $$ newbuf.put(buf)[ CD ]
Line_6 $$ int newRemaining = buf.capacity() + buf.remaining()-->Line_7 $$ while (newRemaining < size) [ FD ]
Line_5 $$ int newCapacity = buf.capacity() * 2-->Line_11 $$ ByteBuffer newbuf = ByteBuffer.allocate(newCapacity)[ FD ]
Line_7 $$ while (newRemaining < size) -->Line_8 $$ newRemaining += newCapacity[ CD ]
Line_5 $$ int newCapacity = buf.capacity() * 2-->Line_8 $$ newRemaining += newCapacity[ FD ]
Line_4 $$ if (buf.remaining() < size) -->Line_11 $$ ByteBuffer newbuf = ByteBuffer.allocate(newCapacity)[ CD ]
Line_9 $$ newCapacity *= 2-->Line_8 $$ newRemaining += newCapacity[ FD ]
Line_2 $$ private void ensureFreeSpace(int size) -->Line_4 $$ if (buf.remaining() < size) [ CD ]
Line_11 $$ ByteBuffer newbuf = ByteBuffer.allocate(newCapacity)-->Line_13 $$ newbuf.put(buf)[ FD ]
Line_4 $$ if (buf.remaining() < size) -->Line_12 $$ buf.flip()[ CD ]
Line_4 $$ if (buf.remaining() < size) -->Line_5 $$ int newCapacity = buf.capacity() * 2[ CD ]
Line_4 $$ if (buf.remaining() < size) -->Line_6 $$ int newRemaining = buf.capacity() + buf.remaining()[ CD ]
Line_6 $$ int newRemaining = buf.capacity() + buf.remaining()-->Line_8 $$ newRemaining += newCapacity[ FD ]
Line_8 $$ newRemaining += newCapacity-->Line_7 $$ while (newRemaining < size) [ FD ]
Line_5 $$ int newCapacity = buf.capacity() * 2-->Line_9 $$ newCapacity *= 2[ FD ]
Line_2 $$ private void ensureFreeSpace(int size) -->Line_7 $$ while (newRemaining < size) [ FD ]
Line_9 $$ newCapacity *= 2-->Line_11 $$ ByteBuffer newbuf = ByteBuffer.allocate(newCapacity)[ FD ]
Line_2 $$ private void ensureFreeSpace(int size) -->Line_4 $$ if (buf.remaining() < size) [ FD ]
Line_4 $$ if (buf.remaining() < size) -->Line_7 $$ while (newRemaining < size) [ CD ]
Line_7 $$ while (newRemaining < size) -->Line_9 $$ newCapacity *= 2[ CD ]
