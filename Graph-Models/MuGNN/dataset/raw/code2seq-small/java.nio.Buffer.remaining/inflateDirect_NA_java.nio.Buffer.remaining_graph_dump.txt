Line_2 $$ int inflateDirect(ByteBuffer src, ByteBuffer dst) throws IOException -->Line_5 $$ if (dst.position() > 0) [ CD ]
Line_6 $$ presliced = dst-->Line_20 $$ presliced.position(presliced.position() + n)[ FD ]
Line_2 $$ int inflateDirect(ByteBuffer src, ByteBuffer dst) throws IOException -->Line_22 $$ src.position(compressedDirectBufOff)[ FD ]
Line_2 $$ int inflateDirect(ByteBuffer src, ByteBuffer dst) throws IOException -->Line_10 $$ Buffer originalUncompressed = uncompressedDirectBuf[ CD ]
Line_4 $$ ByteBuffer presliced = dst-->Line_20 $$ presliced.position(presliced.position() + n)[ FD ]
Line_2 $$ int inflateDirect(ByteBuffer src, ByteBuffer dst) throws IOException -->Line_4 $$ ByteBuffer presliced = dst[ CD ]
Line_2 $$ int inflateDirect(ByteBuffer src, ByteBuffer dst) throws IOException -->Line_17 $$ int n = 0[ CD ]
Line_2 $$ int inflateDirect(ByteBuffer src, ByteBuffer dst) throws IOException -->Line_16 $$ directBufferSize = dst.remaining()[ FD ]
Line_21 $$ if (compressedDirectBufLen > 0) -->Line_24 $$ src.position(src.limit())[ CD ]
Line_2 $$ int inflateDirect(ByteBuffer src, ByteBuffer dst) throws IOException -->Line_11 $$ int originalBufferSize = directBufferSize[ CD ]
Line_5 $$ if (dst.position() > 0) -->Line_6 $$ presliced = dst[ CD ]
Line_2 $$ int inflateDirect(ByteBuffer src, ByteBuffer dst) throws IOException -->Line_16 $$ directBufferSize = dst.remaining()[ CD ]
Line_2 $$ int inflateDirect(ByteBuffer src, ByteBuffer dst) throws IOException -->Line_13 $$ compressedDirectBufOff = src.position()[ CD ]
Line_17 $$ int n = 0-->Line_19 $$ n = inflateBytesDirect()[ FD ]
Line_2 $$ int inflateDirect(ByteBuffer src, ByteBuffer dst) throws IOException -->Line_13 $$ compressedDirectBufOff = src.position()[ FD ]
Line_2 $$ int inflateDirect(ByteBuffer src, ByteBuffer dst) throws IOException -->Line_5 $$ if (dst.position() > 0) [ FD ]
Line_21 $$ if (compressedDirectBufLen > 0) -->Line_22 $$ src.position(compressedDirectBufOff)[ CD ]
Line_2 $$ int inflateDirect(ByteBuffer src, ByteBuffer dst) throws IOException -->Line_9 $$ Buffer originalCompressed = compressedDirectBuf[ CD ]
Line_2 $$ int inflateDirect(ByteBuffer src, ByteBuffer dst) throws IOException -->Line_14 $$ compressedDirectBufLen = src.remaining()[ CD ]
Line_2 $$ int inflateDirect(ByteBuffer src, ByteBuffer dst) throws IOException -->Line_14 $$ compressedDirectBufLen = src.remaining()[ FD ]
Line_2 $$ int inflateDirect(ByteBuffer src, ByteBuffer dst) throws IOException -->Line_33 $$ return n[ CD ]
Line_4 $$ ByteBuffer presliced = dst-->Line_6 $$ presliced = dst[ FD ]
Line_2 $$ int inflateDirect(ByteBuffer src, ByteBuffer dst) throws IOException -->Line_7 $$ dst = dst.slice()[ FD ]
Line_2 $$ int inflateDirect(ByteBuffer src, ByteBuffer dst) throws IOException -->Line_6 $$ presliced = dst[ FD ]
Line_7 $$ dst = dst.slice()-->Line_16 $$ directBufferSize = dst.remaining()[ FD ]
Line_5 $$ if (dst.position() > 0) -->Line_7 $$ dst = dst.slice()[ CD ]
Line_2 $$ int inflateDirect(ByteBuffer src, ByteBuffer dst) throws IOException -->Line_24 $$ src.position(src.limit())[ FD ]
