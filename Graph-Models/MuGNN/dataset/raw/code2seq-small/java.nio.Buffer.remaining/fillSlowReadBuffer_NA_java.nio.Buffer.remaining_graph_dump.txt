Line_2 $$ private synchronized int fillSlowReadBuffer(int len) throws IOException -->Line_3 $$ int nRead = -1[ CD ]
Line_7 $$ int nextChunk = len + offsetFromChunkBoundary + (bytesPerChecksum - ((len + offsetFromChunkBoundary) % bytesPerChecksum))-->Line_8 $$ int limit = Math.min(nextChunk, slowReadBuff.capacity())[ FD ]
Line_2 $$ private synchronized int fillSlowReadBuffer(int len) throws IOException -->Line_17 $$ return nRead[ CD ]
Line_2 $$ private synchronized int fillSlowReadBuffer(int len) throws IOException -->Line_5 $$ nRead = Math.min(len, slowReadBuff.remaining())[ FD ]
Line_13 $$ if (nRead > 0) -->Line_14 $$ slowReadBuff.limit(nRead + slowReadBuff.position())[ CD ]
Line_3 $$ int nRead = -1-->Line_13 $$ if (nRead > 0) [ FD ]
Line_5 $$ nRead = Math.min(len, slowReadBuff.remaining())-->Line_12 $$ nRead = doByteBufferRead(slowReadBuff)[ FD ]
Line_4 $$ if (slowReadBuff.hasRemaining()) -->Line_8 $$ int limit = Math.min(nextChunk, slowReadBuff.capacity())[ CD ]
Line_5 $$ nRead = Math.min(len, slowReadBuff.remaining())-->Line_13 $$ if (nRead > 0) [ FD ]
Line_4 $$ if (slowReadBuff.hasRemaining()) -->Line_12 $$ nRead = doByteBufferRead(slowReadBuff)[ CD ]
Line_3 $$ int nRead = -1-->Line_12 $$ nRead = doByteBufferRead(slowReadBuff)[ FD ]
Line_4 $$ if (slowReadBuff.hasRemaining()) -->Line_13 $$ if (nRead > 0) [ CD ]
Line_12 $$ nRead = doByteBufferRead(slowReadBuff)-->Line_13 $$ if (nRead > 0) [ FD ]
Line_3 $$ int nRead = -1-->Line_5 $$ nRead = Math.min(len, slowReadBuff.remaining())[ FD ]
Line_8 $$ int limit = Math.min(nextChunk, slowReadBuff.capacity())-->Line_11 $$ slowReadBuff.limit(limit)[ FD ]
Line_2 $$ private synchronized int fillSlowReadBuffer(int len) throws IOException -->Line_4 $$ if (slowReadBuff.hasRemaining()) [ CD ]
Line_4 $$ if (slowReadBuff.hasRemaining()) -->Line_7 $$ int nextChunk = len + offsetFromChunkBoundary + (bytesPerChecksum - ((len + offsetFromChunkBoundary) % bytesPerChecksum))[ CD ]
Line_4 $$ if (slowReadBuff.hasRemaining()) -->Line_5 $$ nRead = Math.min(len, slowReadBuff.remaining())[ CD ]
Line_4 $$ if (slowReadBuff.hasRemaining()) -->Line_10 $$ slowReadBuff.clear()[ CD ]
Line_4 $$ if (slowReadBuff.hasRemaining()) -->Line_11 $$ slowReadBuff.limit(limit)[ CD ]
