Line_4 $$ totalLength += 4 + (component == null ? 0 : component.remaining())-->Line_5 $$ ByteBuffer result = ByteBuffer.allocate(totalLength)[ FD ]
Line_2 $$ public static ByteBuffer buildValue(ByteBuffer[] components) -->Line_5 $$ ByteBuffer result = ByteBuffer.allocate(totalLength)[ CD ]
Line_4 $$ for (ByteBuffer component : components) totalLength += 4 + (component == null ? 0 : component.remaining())-->Line_7 $$ if (component == null) [ FD ]
Line_2 $$ public static ByteBuffer buildValue(ByteBuffer[] components) -->Line_14 $$ result.rewind()[ CD ]
Line_4 $$ for (ByteBuffer component : components) totalLength += 4 + (component == null ? 0 : component.remaining())-->Line_10 $$ result.putInt(component.remaining())[ FD ]
Line_5 $$ ByteBuffer result = ByteBuffer.allocate(totalLength)-->Line_8 $$ result.putInt(-1)[ FD ]
Line_2 $$ public static ByteBuffer buildValue(ByteBuffer[] components) -->Line_3 $$ int totalLength = 0[ CD ]
Line_5 $$ ByteBuffer result = ByteBuffer.allocate(totalLength)-->Line_11 $$ result.put(component.duplicate())[ FD ]
Line_7 $$ if (component == null) -->Line_10 $$ result.putInt(component.remaining())[ CD ]
Line_5 $$ ByteBuffer result = ByteBuffer.allocate(totalLength)-->Line_10 $$ result.putInt(component.remaining())[ FD ]
Line_7 $$ if (component == null) -->Line_11 $$ result.put(component.duplicate())[ CD ]
Line_3 $$ int totalLength = 0-->Line_5 $$ ByteBuffer result = ByteBuffer.allocate(totalLength)[ FD ]
Line_5 $$ ByteBuffer result = ByteBuffer.allocate(totalLength)-->Line_14 $$ result.rewind()[ FD ]
Line_2 $$ public static ByteBuffer buildValue(ByteBuffer[] components) -->Line_15 $$ return result[ CD ]
Line_4 $$ for (ByteBuffer component : components) totalLength += 4 + (component == null ? 0 : component.remaining())-->Line_11 $$ result.put(component.duplicate())[ FD ]
Line_7 $$ if (component == null) -->Line_8 $$ result.putInt(-1)[ CD ]
Line_3 $$ int totalLength = 0-->Line_4 $$ totalLength += 4 + (component == null ? 0 : component.remaining())[ FD ]
