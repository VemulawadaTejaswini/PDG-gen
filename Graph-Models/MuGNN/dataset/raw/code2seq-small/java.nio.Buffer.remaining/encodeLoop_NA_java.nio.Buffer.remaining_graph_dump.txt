Line_7 $$ if (c < '') -->Line_8 $$ ByteBuffer byteBuffer = myBaseCharset.encode(Character.toString(c))[ CD ]
Line_2 $$ protected CoderResult encodeLoop(CharBuffer in, ByteBuffer out) -->Line_21 $$ in.reset()[ FD ]
Line_7 $$ if (c < '') -->Line_16 $$ out.put(toHexChar((c >> 8) & 0xf))[ CD ]
Line_2 $$ protected CoderResult encodeLoop(CharBuffer in, ByteBuffer out) -->Line_14 $$ out.put((byte) 'u')[ FD ]
Line_2 $$ protected CoderResult encodeLoop(CharBuffer in, ByteBuffer out) -->Line_3 $$ while (in.position() < in.limit()) [ CD ]
Line_2 $$ protected CoderResult encodeLoop(CharBuffer in, ByteBuffer out) -->Line_3 $$ while (in.position() < in.limit()) [ FD ]
Line_2 $$ protected CoderResult encodeLoop(CharBuffer in, ByteBuffer out) -->Line_27 $$ return CoderResult.UNDERFLOW[ CD ]
Line_2 $$ protected CoderResult encodeLoop(CharBuffer in, ByteBuffer out) -->Line_6 $$ char c = in.get()[ FD ]
Line_6 $$ char c = in.get()-->Line_7 $$ if (c < '') [ FD ]
Line_2 $$ protected CoderResult encodeLoop(CharBuffer in, ByteBuffer out) -->Line_15 $$ out.put(toHexChar(c >> 12))[ FD ]
Line_6 $$ char c = in.get()-->Line_8 $$ ByteBuffer byteBuffer = myBaseCharset.encode(Character.toString(c))[ FD ]
Line_3 $$ while (in.position() < in.limit()) -->Line_4 $$ in.mark()[ CD ]
Line_7 $$ if (c < '') -->Line_14 $$ out.put((byte) 'u')[ CD ]
Line_2 $$ protected CoderResult encodeLoop(CharBuffer in, ByteBuffer out) -->Line_18 $$ out.put(toHexChar(c & 0xf))[ FD ]
Line_8 $$ ByteBuffer byteBuffer = myBaseCharset.encode(Character.toString(c))-->Line_9 $$ out.put(byteBuffer)[ FD ]
Line_7 $$ if (c < '') -->Line_11 $$ if (out.remaining() < 6)[ CD ]
Line_2 $$ protected CoderResult encodeLoop(CharBuffer in, ByteBuffer out) -->Line_11 $$ if (out.remaining() < 6)[ FD ]
Line_2 $$ protected CoderResult encodeLoop(CharBuffer in, ByteBuffer out) -->Line_13 $$ out.put((byte) '\\')[ FD ]
Line_7 $$ if (c < '') -->Line_9 $$ out.put(byteBuffer)[ CD ]
Line_7 $$ if (c < '') -->Line_17 $$ out.put(toHexChar((c >> 4) & 0xf))[ CD ]
Line_7 $$ if (c < '') -->Line_18 $$ out.put(toHexChar(c & 0xf))[ CD ]
Line_2 $$ protected CoderResult encodeLoop(CharBuffer in, ByteBuffer out) -->Line_9 $$ out.put(byteBuffer)[ FD ]
Line_2 $$ protected CoderResult encodeLoop(CharBuffer in, ByteBuffer out) -->Line_4 $$ in.mark()[ FD ]
Line_2 $$ protected CoderResult encodeLoop(CharBuffer in, ByteBuffer out) -->Line_17 $$ out.put(toHexChar((c >> 4) & 0xf))[ FD ]
Line_7 $$ if (c < '') -->Line_13 $$ out.put((byte) '\\')[ CD ]
Line_7 $$ if (c < '') -->Line_15 $$ out.put(toHexChar(c >> 12))[ CD ]
Line_2 $$ protected CoderResult encodeLoop(CharBuffer in, ByteBuffer out) -->Line_23 $$ in.reset()[ FD ]
Line_2 $$ protected CoderResult encodeLoop(CharBuffer in, ByteBuffer out) -->Line_16 $$ out.put(toHexChar((c >> 8) & 0xf))[ FD ]
