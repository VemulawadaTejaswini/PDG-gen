Line_3 $$ int length = Math.min(src.remaining(), trg.remaining())-->Line_4 $$ arrayCopy(src, src.position(), trg, trg.position(), length)[ FD ]
Line_2 $$ public static int put(ByteBuffer src, ByteBuffer trg) -->Line_3 $$ int length = Math.min(src.remaining(), trg.remaining())[ CD ]
Line_2 $$ public static int put(ByteBuffer src, ByteBuffer trg) -->Line_5 $$ trg.position(trg.position() + length)[ CD ]
Line_2 $$ public static int put(ByteBuffer src, ByteBuffer trg) -->Line_6 $$ src.position(src.position() + length)[ CD ]
Line_2 $$ public static int put(ByteBuffer src, ByteBuffer trg) -->Line_5 $$ trg.position(trg.position() + length)[ FD ]
Line_2 $$ public static int put(ByteBuffer src, ByteBuffer trg) -->Line_6 $$ src.position(src.position() + length)[ FD ]
Line_2 $$ public static int put(ByteBuffer src, ByteBuffer trg) -->Line_3 $$ int length = Math.min(src.remaining(), trg.remaining())[ FD ]
Line_2 $$ public static int put(ByteBuffer src, ByteBuffer trg) -->Line_4 $$ arrayCopy(src, src.position(), trg, trg.position(), length)[ FD ]
Line_2 $$ public static int put(ByteBuffer src, ByteBuffer trg) -->Line_7 $$ return length[ CD ]
Line_2 $$ public static int put(ByteBuffer src, ByteBuffer trg) -->Line_4 $$ arrayCopy(src, src.position(), trg, trg.position(), length)[ CD ]
