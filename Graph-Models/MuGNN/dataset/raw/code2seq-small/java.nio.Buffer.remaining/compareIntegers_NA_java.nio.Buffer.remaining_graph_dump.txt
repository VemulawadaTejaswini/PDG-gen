Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_3 $$ int lhsLen = lhs.remaining()[ CD ]
Line_13 $$ byte lhsMsb = lhs.get(lhs.position() + lhsMsbIdx)-->Line_16 $$ if (lhsMsb < 0)[ FD ]
Line_13 $$ byte lhsMsb = lhs.get(lhs.position() + lhsMsbIdx)-->Line_22 $$ if (lhsMsb != rhsMsb)[ FD ]
Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_26 $$ while (lhsMsbIdx < lhsLen) [ CD ]
Line_16 $$ if (lhsMsb < 0)-->Line_17 $$ return rhsMsb < 0 ? rhsLenDiff - lhsLenDiff : -1[ CD ]
Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_25 $$ rhsMsbIdx++[ CD ]
Line_22 $$ if (lhsMsb != rhsMsb)-->Line_23 $$ return lhsMsb - rhsMsb[ CD ]
Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_22 $$ if (lhsMsb != rhsMsb)[ CD ]
Line_26 $$ while (lhsMsbIdx < lhsLen) -->Line_28 $$ rhsMsb = rhs.get(rhs.position() + rhsMsbIdx++)[ CD ]
Line_12 $$ int rhsLenDiff = rhsLen - rhsMsbIdx-->Line_15 $$ if (lhsLenDiff != rhsLenDiff) [ FD ]
Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_4 $$ int rhsLen = rhs.remaining()[ FD ]
Line_9 $$ int lhsMsbIdx = findMostSignificantByte(lhs)-->Line_26 $$ while (lhsMsbIdx < lhsLen) [ FD ]
Line_18 $$ if (rhsMsb < 0)-->Line_19 $$ return 1[ CD ]
Line_14 $$ byte rhsMsb = rhs.get(rhs.position() + rhsMsbIdx)-->Line_28 $$ rhsMsb = rhs.get(rhs.position() + rhsMsbIdx++)[ FD ]
Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_11 $$ int lhsLenDiff = lhsLen - lhsMsbIdx[ CD ]
Line_15 $$ if (lhsLenDiff != rhsLenDiff) -->Line_16 $$ if (lhsMsb < 0)[ CD ]
Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_24 $$ lhsMsbIdx++[ CD ]
Line_13 $$ byte lhsMsb = lhs.get(lhs.position() + lhsMsbIdx)-->Line_29 $$ if (lhsMsb != rhsMsb)[ FD ]
Line_29 $$ if (lhsMsb != rhsMsb)-->Line_30 $$ return (lhsMsb & 0xFF) - (rhsMsb & 0xFF)[ CD ]
Line_3 $$ int lhsLen = lhs.remaining()-->Line_5 $$ if (lhsLen == 0)[ FD ]
Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_14 $$ byte rhsMsb = rhs.get(rhs.position() + rhsMsbIdx)[ FD ]
Line_13 $$ byte lhsMsb = lhs.get(lhs.position() + lhsMsbIdx)-->Line_27 $$ lhsMsb = lhs.get(lhs.position() + lhsMsbIdx++)[ FD ]
Line_15 $$ if (lhsLenDiff != rhsLenDiff) -->Line_20 $$ return lhsLenDiff - rhsLenDiff[ CD ]
Line_14 $$ byte rhsMsb = rhs.get(rhs.position() + rhsMsbIdx)-->Line_29 $$ if (lhsMsb != rhsMsb)[ FD ]
Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_10 $$ int rhsMsbIdx = findMostSignificantByte(rhs)[ CD ]
Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_14 $$ byte rhsMsb = rhs.get(rhs.position() + rhsMsbIdx)[ CD ]
Line_28 $$ rhsMsb = rhs.get(rhs.position() + rhsMsbIdx++)-->Line_29 $$ if (lhsMsb != rhsMsb)[ FD ]
Line_14 $$ byte rhsMsb = rhs.get(rhs.position() + rhsMsbIdx)-->Line_22 $$ if (lhsMsb != rhsMsb)[ FD ]
Line_4 $$ int rhsLen = rhs.remaining()-->Line_7 $$ if (rhsLen == 0)[ FD ]
Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_13 $$ byte lhsMsb = lhs.get(lhs.position() + lhsMsbIdx)[ CD ]
Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_5 $$ if (lhsLen == 0)[ CD ]
Line_15 $$ if (lhsLenDiff != rhsLenDiff) -->Line_18 $$ if (rhsMsb < 0)[ CD ]
Line_26 $$ while (lhsMsbIdx < lhsLen) -->Line_29 $$ if (lhsMsb != rhsMsb)[ CD ]
Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_10 $$ int rhsMsbIdx = findMostSignificantByte(rhs)[ FD ]
Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_9 $$ int lhsMsbIdx = findMostSignificantByte(lhs)[ CD ]
Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_15 $$ if (lhsLenDiff != rhsLenDiff) [ CD ]
Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_27 $$ lhsMsb = lhs.get(lhs.position() + lhsMsbIdx++)[ FD ]
Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_28 $$ rhsMsb = rhs.get(rhs.position() + rhsMsbIdx++)[ FD ]
Line_5 $$ if (lhsLen == 0)-->Line_6 $$ return rhsLen == 0 ? 0 : -1[ CD ]
Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_4 $$ int rhsLen = rhs.remaining()[ CD ]
Line_9 $$ int lhsMsbIdx = findMostSignificantByte(lhs)-->Line_27 $$ lhsMsb = lhs.get(lhs.position() + lhsMsbIdx++)[ FD ]
Line_27 $$ lhsMsb = lhs.get(lhs.position() + lhsMsbIdx++)-->Line_29 $$ if (lhsMsb != rhsMsb)[ FD ]
Line_3 $$ int lhsLen = lhs.remaining()-->Line_26 $$ while (lhsMsbIdx < lhsLen) [ FD ]
Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_7 $$ if (rhsLen == 0)[ CD ]
Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_3 $$ int lhsLen = lhs.remaining()[ FD ]
Line_9 $$ int lhsMsbIdx = findMostSignificantByte(lhs)-->Line_24 $$ lhsMsbIdx++[ FD ]
Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_13 $$ byte lhsMsb = lhs.get(lhs.position() + lhsMsbIdx)[ FD ]
Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_12 $$ int rhsLenDiff = rhsLen - rhsMsbIdx[ CD ]
Line_7 $$ if (rhsLen == 0)-->Line_8 $$ return 1[ CD ]
Line_10 $$ int rhsMsbIdx = findMostSignificantByte(rhs)-->Line_25 $$ rhsMsbIdx++[ FD ]
Line_26 $$ while (lhsMsbIdx < lhsLen) -->Line_27 $$ lhsMsb = lhs.get(lhs.position() + lhsMsbIdx++)[ CD ]
Line_11 $$ int lhsLenDiff = lhsLen - lhsMsbIdx-->Line_15 $$ if (lhsLenDiff != rhsLenDiff) [ FD ]
Line_10 $$ int rhsMsbIdx = findMostSignificantByte(rhs)-->Line_28 $$ rhsMsb = rhs.get(rhs.position() + rhsMsbIdx++)[ FD ]
Line_14 $$ byte rhsMsb = rhs.get(rhs.position() + rhsMsbIdx)-->Line_18 $$ if (rhsMsb < 0)[ FD ]
Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_32 $$ return 0[ CD ]
Line_2 $$ public static int compareIntegers(ByteBuffer lhs, ByteBuffer rhs) -->Line_9 $$ int lhsMsbIdx = findMostSignificantByte(lhs)[ FD ]
