Line_3 $$ int hintSize = (int) Hint.serializer.serializedSize(hint, descriptor.messagingVersion())-->Line_14 $$ updateChecksum(crc, hintBuffer, hintBuffer.position() - hintSize, hintSize)[ FD ]
Line_3 $$ int hintSize = (int) Hint.serializer.serializedSize(hint, descriptor.messagingVersion())-->Line_11 $$ updateChecksumInt(crc, hintSize)[ FD ]
Line_7 $$ ByteBuffer hintBuffer = totalSize <= buffer.remaining() ? buffer : ByteBuffer.allocate(totalSize)-->Line_20 $$ append((ByteBuffer) hintBuffer.flip())[ FD ]
Line_4 $$ int totalSize = hintSize + HintsBuffer.ENTRY_OVERHEAD_SIZE-->Line_7 $$ ByteBuffer hintBuffer = totalSize <= buffer.remaining() ? buffer : ByteBuffer.allocate(totalSize)[ FD ]
Line_8 $$ CRC32 crc = new CRC32()-->Line_12 $$ out.writeInt((int) crc.getValue())[ FD ]
Line_2 $$ void append(Hint hint) throws IOException -->Line_5 $$ if (totalSize > buffer.remaining())[ CD ]
Line_2 $$ void append(Hint hint) throws IOException -->Line_3 $$ int hintSize = (int) Hint.serializer.serializedSize(hint, descriptor.messagingVersion())[ FD ]
Line_2 $$ void append(Hint hint) throws IOException -->Line_3 $$ int hintSize = (int) Hint.serializer.serializedSize(hint, descriptor.messagingVersion())[ CD ]
Line_9 $$ try (DataOutputBufferFixed out = new DataOutputBufferFixed(hintBuffer)) -->Line_12 $$ out.writeInt((int) crc.getValue())[ FD ]
Line_8 $$ CRC32 crc = new CRC32()-->Line_15 $$ out.writeInt((int) crc.getValue())[ FD ]
Line_9 $$ try (DataOutputBufferFixed out = new DataOutputBufferFixed(hintBuffer)) -->Line_10 $$ out.writeInt(hintSize)[ FD ]
Line_2 $$ void append(Hint hint) throws IOException -->Line_13 $$ Hint.serializer.serialize(hint, out, descriptor.messagingVersion())[ FD ]
Line_2 $$ void append(Hint hint) throws IOException -->Line_8 $$ CRC32 crc = new CRC32()[ CD ]
Line_5 $$ if (totalSize > buffer.remaining())-->Line_6 $$ flushBuffer()[ CD ]
Line_8 $$ CRC32 crc = new CRC32()-->Line_14 $$ updateChecksum(crc, hintBuffer, hintBuffer.position() - hintSize, hintSize)[ FD ]
Line_7 $$ ByteBuffer hintBuffer = totalSize <= buffer.remaining() ? buffer : ByteBuffer.allocate(totalSize)-->Line_17 $$ if (hintBuffer == buffer)[ FD ]
Line_4 $$ int totalSize = hintSize + HintsBuffer.ENTRY_OVERHEAD_SIZE-->Line_5 $$ if (totalSize > buffer.remaining())[ FD ]
Line_8 $$ CRC32 crc = new CRC32()-->Line_11 $$ updateChecksumInt(crc, hintSize)[ FD ]
Line_2 $$ void append(Hint hint) throws IOException -->Line_7 $$ ByteBuffer hintBuffer = totalSize <= buffer.remaining() ? buffer : ByteBuffer.allocate(totalSize)[ CD ]
Line_9 $$ try (DataOutputBufferFixed out = new DataOutputBufferFixed(hintBuffer)) -->Line_13 $$ Hint.serializer.serialize(hint, out, descriptor.messagingVersion())[ FD ]
Line_3 $$ int hintSize = (int) Hint.serializer.serializedSize(hint, descriptor.messagingVersion())-->Line_10 $$ out.writeInt(hintSize)[ FD ]
Line_2 $$ void append(Hint hint) throws IOException -->Line_17 $$ if (hintBuffer == buffer)[ CD ]
Line_17 $$ if (hintBuffer == buffer)-->Line_20 $$ append((ByteBuffer) hintBuffer.flip())[ CD ]
Line_9 $$ try (DataOutputBufferFixed out = new DataOutputBufferFixed(hintBuffer)) -->Line_15 $$ out.writeInt((int) crc.getValue())[ FD ]
Line_7 $$ ByteBuffer hintBuffer = totalSize <= buffer.remaining() ? buffer : ByteBuffer.allocate(totalSize)-->Line_14 $$ updateChecksum(crc, hintBuffer, hintBuffer.position() - hintSize, hintSize)[ FD ]
Line_2 $$ void append(Hint hint) throws IOException -->Line_4 $$ int totalSize = hintSize + HintsBuffer.ENTRY_OVERHEAD_SIZE[ CD ]
