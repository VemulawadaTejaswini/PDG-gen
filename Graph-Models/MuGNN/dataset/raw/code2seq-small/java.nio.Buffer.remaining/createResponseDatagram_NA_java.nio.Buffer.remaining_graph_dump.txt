Line_2 $$ public static Datagram createResponseDatagram(Datagram requestDatagram, ByteBuffer byteBuffer) -->Line_7 $$ datagram._dataByteBuffer = byteBuffer[ CD ]
Line_2 $$ public static Datagram createResponseDatagram(Datagram requestDatagram, ByteBuffer byteBuffer) -->Line_5 $$ BigEndianCodec.putLong(datagram._headerBufferArray, _INDEX_SEQUENCE_ID, requestDatagram.getSequenceId())[ FD ]
Line_2 $$ public static Datagram createResponseDatagram(Datagram requestDatagram, ByteBuffer byteBuffer) -->Line_7 $$ datagram._dataByteBuffer = byteBuffer[ FD ]
Line_2 $$ public static Datagram createResponseDatagram(Datagram requestDatagram, ByteBuffer byteBuffer) -->Line_3 $$ Datagram datagram = new Datagram()[ CD ]
Line_2 $$ public static Datagram createResponseDatagram(Datagram requestDatagram, ByteBuffer byteBuffer) -->Line_5 $$ BigEndianCodec.putLong(datagram._headerBufferArray, _INDEX_SEQUENCE_ID, requestDatagram.getSequenceId())[ CD ]
Line_2 $$ public static Datagram createResponseDatagram(Datagram requestDatagram, ByteBuffer byteBuffer) -->Line_8 $$ return datagram[ CD ]
Line_2 $$ public static Datagram createResponseDatagram(Datagram requestDatagram, ByteBuffer byteBuffer) -->Line_6 $$ BigEndianCodec.putInt(datagram._headerBufferArray, _INDEX_DATA_SIZE, byteBuffer.remaining())[ CD ]
Line_2 $$ public static Datagram createResponseDatagram(Datagram requestDatagram, ByteBuffer byteBuffer) -->Line_6 $$ BigEndianCodec.putInt(datagram._headerBufferArray, _INDEX_DATA_SIZE, byteBuffer.remaining())[ FD ]
