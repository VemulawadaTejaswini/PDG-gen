Line_16 $$ final int len = outBuffer.remaining()-->Line_19 $$ out.write(tmp, 0, len)[ FD ]
Line_2 $$ private void encrypt() throws IOException -->Line_19 $$ out.write(tmp, 0, len)[ CD ]
Line_2 $$ private void encrypt() throws IOException -->Line_9 $$ encryptor.encrypt(inBuffer, outBuffer)[ CD ]
Line_2 $$ private void encrypt() throws IOException -->Line_18 $$ outBuffer.get(tmp, 0, len)[ CD ]
Line_2 $$ private void encrypt() throws IOException -->Line_7 $$ inBuffer.flip()[ CD ]
Line_2 $$ private void encrypt() throws IOException -->Line_4 $$ if (inBuffer.position() == padding) [ CD ]
Line_2 $$ private void encrypt() throws IOException -->Line_12 $$ if (padding > 0) [ CD ]
Line_4 $$ if (inBuffer.position() == padding) -->Line_5 $$ return[ CD ]
Line_2 $$ private void encrypt() throws IOException -->Line_17 $$ final byte[] tmp = getTmpBuf()[ CD ]
Line_12 $$ if (padding > 0) -->Line_13 $$ outBuffer.position(padding)[ CD ]
Line_21 $$ if (encryptor.isContextReset()) -->Line_22 $$ updateEncryptor()[ CD ]
Line_2 $$ private void encrypt() throws IOException -->Line_8 $$ outBuffer.clear()[ CD ]
Line_2 $$ private void encrypt() throws IOException -->Line_16 $$ final int len = outBuffer.remaining()[ CD ]
Line_17 $$ final byte[] tmp = getTmpBuf()-->Line_19 $$ out.write(tmp, 0, len)[ FD ]
Line_2 $$ private void encrypt() throws IOException -->Line_3 $$ Preconditions.checkState(inBuffer.position() >= padding)[ CD ]
Line_16 $$ final int len = outBuffer.remaining()-->Line_18 $$ outBuffer.get(tmp, 0, len)[ FD ]
Line_2 $$ private void encrypt() throws IOException -->Line_21 $$ if (encryptor.isContextReset()) [ CD ]
Line_17 $$ final byte[] tmp = getTmpBuf()-->Line_18 $$ outBuffer.get(tmp, 0, len)[ FD ]
Line_2 $$ private void encrypt() throws IOException -->Line_11 $$ outBuffer.flip()[ CD ]
Line_2 $$ private void encrypt() throws IOException -->Line_10 $$ inBuffer.clear()[ CD ]
