Line_19 $$ int result = syncState.pageout(page)-->Line_28 $$ result = streamState.packetout(packet)[ FD ]
Line_23 $$ if (result == -1) -->Line_26 $$ streamState.pagein(page)[ CD ]
Line_43 $$ for (int j = 0; j < bout; j++) -->Line_45 $$ if (val > 32767) [ CD ]
Line_4 $$ while (true) -->Line_104 $$ oggInfo.clear()[ CD ]
Line_18 $$ while (!endOfBitStream) -->Line_19 $$ int result = syncState.pageout(page)[ CD ]
Line_18 $$ while (!endOfBitStream) -->Line_23 $$ if (result == -1) [ CD ]
Line_53 $$ if (bigEndian) -->Line_58 $$ convbuffer[ptr + 1] = (byte) (val >>> 8)[ CD ]
Line_82 $$ if (!endOfBitStream) -->Line_85 $$ if (index >= 0) [ CD ]
Line_17 $$ while (!endOfBitStream) -->Line_82 $$ if (!endOfBitStream) [ CD ]
Line_53 $$ if (bigEndian) -->Line_57 $$ convbuffer[ptr] = (byte) (val)[ CD ]
Line_37 $$ while ((samples = dspState.synthesis_pcmout(_pcm, _index)) > 0) -->Line_40 $$ for (int i = 0; i < oggInfo.channels; i++) [ CD ]
Line_28 $$ result = streamState.packetout(packet)-->Line_31 $$ if (result == -1) [ FD ]
Line_23 $$ if (result == -1) -->Line_27 $$ while (true) [ CD ]
Line_82 $$ if (!endOfBitStream) -->Line_84 $$ int index = syncState.buffer(BUFFER_SIZE)[ CD ]
Line_2 $$ private void readPCM() -->Line_4 $$ while (true) [ CD ]
Line_44 $$ int val = (int) (pcm[i][mono + j] * 32767.)-->Line_45 $$ if (val > 32767) [ FD ]
Line_39 $$ int bout = (samples < convsize ? samples : convsize)-->Line_70 $$ dspState.synthesis_read(bout)[ FD ]
Line_17 $$ while (!endOfBitStream) -->Line_18 $$ while (!endOfBitStream) [ CD ]
Line_40 $$ for (int i = 0; i < oggInfo.channels; i++) -->Line_43 $$ for (int j = 0; j < bout; j++) [ CD ]
Line_46 $$ val = 32767-->Line_48 $$ if (val < -32768) [ FD ]
Line_16 $$ int[] _index = new int[oggInfo.channels]-->Line_37 $$ while ((samples = dspState.synthesis_pcmout(_pcm, _index)) > 0) [ FD ]
Line_52 $$ val = val | 0x8000-->Line_51 $$ if (val < 0)[ FD ]
Line_64 $$ if (bytesToWrite > pcmBuffer.remaining()) -->Line_67 $$ pcmBuffer.put(convbuffer, 0, bytesToWrite)[ CD ]
Line_34 $$ if (vorbisBlock.synthesis(packet) == 0) -->Line_35 $$ dspState.synthesis_blockin(vorbisBlock)[ CD ]
Line_49 $$ val = -32768-->Line_48 $$ if (val < -32768) [ FD ]
Line_2 $$ private void readPCM() -->Line_3 $$ boolean wrote = false[ CD ]
Line_44 $$ int val = (int) (pcm[i][mono + j] * 32767.)-->Line_46 $$ val = 32767[ FD ]
Line_53 $$ if (bigEndian) -->Line_54 $$ convbuffer[ptr] = (byte) (val >>> 8)[ CD ]
Line_4 $$ while (true) -->Line_11 $$ if (!inited) [ CD ]
Line_3 $$ boolean wrote = false-->Line_69 $$ wrote = true[ FD ]
Line_37 $$ while ((samples = dspState.synthesis_pcmout(_pcm, _index)) > 0) -->Line_39 $$ int bout = (samples < convsize ? samples : convsize)[ CD ]
Line_44 $$ int val = (int) (pcm[i][mono + j] * 32767.)-->Line_48 $$ if (val < -32768) [ FD ]
Line_4 $$ while (true) -->Line_103 $$ dspState.clear()[ CD ]
Line_18 $$ while (!endOfBitStream) -->Line_20 $$ if (result == 0) [ CD ]
Line_37 $$ while ((samples = dspState.synthesis_pcmout(_pcm, _index)) > 0) -->Line_69 $$ wrote = true[ CD ]
Line_46 $$ val = 32767-->Line_49 $$ val = -32768[ FD ]
Line_52 $$ val = val | 0x8000-->Line_45 $$ if (val > 32767) [ FD ]
Line_4 $$ while (true) -->Line_15 $$ float[][][] _pcm = new float[1][][][ CD ]
Line_27 $$ while (true) -->Line_29 $$ if (result == 0)[ CD ]
Line_11 $$ if (!inited) -->Line_13 $$ return[ CD ]
Line_37 $$ while ((samples = dspState.synthesis_pcmout(_pcm, _index)) > 0) -->Line_38 $$ float[][] pcm = _pcm[0][ CD ]
Line_44 $$ int val = (int) (pcm[i][mono + j] * 32767.)-->Line_51 $$ if (val < 0)[ FD ]
Line_15 $$ float[][][] _pcm = new float[1][][]-->Line_37 $$ while ((samples = dspState.synthesis_pcmout(_pcm, _index)) > 0) [ FD ]
Line_28 $$ result = streamState.packetout(packet)-->Line_29 $$ if (result == 0)[ FD ]
Line_23 $$ if (result == -1) -->Line_77 $$ if ((!endOfBitStream) && (wrote)) [ CD ]
Line_49 $$ val = -32768-->Line_51 $$ if (val < 0)[ FD ]
Line_19 $$ int result = syncState.pageout(page)-->Line_23 $$ if (result == -1) [ FD ]
Line_48 $$ if (val < -32768) -->Line_49 $$ val = -32768[ CD ]
Line_49 $$ val = -32768-->Line_52 $$ val = val | 0x8000[ FD ]
Line_82 $$ if (!endOfBitStream) -->Line_96 $$ if (bytes == 0) [ CD ]
Line_52 $$ val = val | 0x8000-->Line_48 $$ if (val < -32768) [ FD ]
Line_43 $$ for (int j = 0; j < bout; j++) -->Line_48 $$ if (val < -32768) [ CD ]
Line_43 $$ for (int j = 0; j < bout; j++) -->Line_53 $$ if (bigEndian) [ CD ]
Line_23 $$ if (result == -1) -->Line_24 $$ Gdx.app.log("gdx-audio", "Error reading OGG: Corrupt or missing data in bitstream.")[ CD ]
Line_27 $$ while (true) -->Line_31 $$ if (result == -1) [ CD ]
Line_27 $$ while (true) -->Line_28 $$ result = streamState.packetout(packet)[ CD ]
Line_77 $$ if ((!endOfBitStream) && (wrote)) -->Line_78 $$ return[ CD ]
Line_31 $$ if (result == -1) -->Line_37 $$ while ((samples = dspState.synthesis_pcmout(_pcm, _index)) > 0) [ CD ]
Line_43 $$ for (int j = 0; j < bout; j++) -->Line_44 $$ int val = (int) (pcm[i][mono + j] * 32767.)[ CD ]
Line_43 $$ for (int j = 0; j < bout; j++) -->Line_51 $$ if (val < 0)[ CD ]
Line_45 $$ if (val > 32767) -->Line_46 $$ val = 32767[ CD ]
Line_33 $$ int samples-->Line_37 $$ while ((samples = dspState.synthesis_pcmout(_pcm, _index)) > 0) [ FD ]
Line_40 $$ for (int i = 0; i < oggInfo.channels; i++) -->Line_42 $$ int mono = _index[i][ CD ]
Line_37 $$ while ((samples = dspState.synthesis_pcmout(_pcm, _index)) > 0) -->Line_64 $$ if (bytesToWrite > pcmBuffer.remaining()) [ CD ]
Line_5 $$ if (endOfBitStream) -->Line_6 $$ if (!getPageAndPacket()) [ CD ]
Line_4 $$ while (true) -->Line_101 $$ streamState.clear()[ CD ]
Line_31 $$ if (result == -1) -->Line_33 $$ int samples[ CD ]
Line_51 $$ if (val < 0)-->Line_52 $$ val = val | 0x8000[ CD ]
Line_4 $$ while (true) -->Line_17 $$ while (!endOfBitStream) [ CD ]
Line_31 $$ if (result == -1) -->Line_34 $$ if (vorbisBlock.synthesis(packet) == 0) [ CD ]
Line_4 $$ while (true) -->Line_16 $$ int[] _index = new int[oggInfo.channels][ CD ]
Line_23 $$ if (result == -1) -->Line_74 $$ if (page.eos() != 0) [ CD ]
Line_19 $$ int result = syncState.pageout(page)-->Line_20 $$ if (result == 0) [ FD ]
Line_53 $$ if (bigEndian) -->Line_55 $$ convbuffer[ptr + 1] = (byte) (val)[ CD ]
Line_19 $$ int result = syncState.pageout(page)-->Line_29 $$ if (result == 0)[ FD ]
Line_43 $$ for (int j = 0; j < bout; j++) -->Line_60 $$ ptr += 2 * (oggInfo.channels)[ CD ]
Line_82 $$ if (!endOfBitStream) -->Line_95 $$ syncState.wrote(bytes)[ CD ]
Line_41 $$ int ptr = i * 2-->Line_60 $$ ptr += 2 * (oggInfo.channels)[ FD ]
Line_4 $$ while (true) -->Line_102 $$ vorbisBlock.clear()[ CD ]
Line_44 $$ int val = (int) (pcm[i][mono + j] * 32767.)-->Line_49 $$ val = -32768[ FD ]
Line_39 $$ int bout = (samples < convsize ? samples : convsize)-->Line_43 $$ for (int j = 0; j < bout; j++) [ FD ]
Line_46 $$ val = 32767-->Line_45 $$ if (val > 32767) [ FD ]
Line_44 $$ int val = (int) (pcm[i][mono + j] * 32767.)-->Line_52 $$ val = val | 0x8000[ FD ]
Line_19 $$ int result = syncState.pageout(page)-->Line_31 $$ if (result == -1) [ FD ]
Line_46 $$ val = 32767-->Line_52 $$ val = val | 0x8000[ FD ]
Line_49 $$ val = -32768-->Line_45 $$ if (val > 32767) [ FD ]
Line_2 $$ private void readPCM() -->Line_106 $$ syncState.clear()[ CD ]
Line_40 $$ for (int i = 0; i < oggInfo.channels; i++) -->Line_41 $$ int ptr = i * 2[ CD ]
Line_4 $$ while (true) -->Line_5 $$ if (endOfBitStream) [ CD ]
Line_46 $$ val = 32767-->Line_51 $$ if (val < 0)[ FD ]
Line_37 $$ while ((samples = dspState.synthesis_pcmout(_pcm, _index)) > 0) -->Line_70 $$ dspState.synthesis_read(bout)[ CD ]
