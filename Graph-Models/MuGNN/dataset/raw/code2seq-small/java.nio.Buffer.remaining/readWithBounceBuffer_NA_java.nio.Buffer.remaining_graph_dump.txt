Line_2 $$ private synchronized int readWithBounceBuffer(byte[] arr, int off, int len, boolean canSkipChecksum) throws IOException -->Line_9 $$ if (dataBuf.remaining() == 0)[ CD ]
Line_2 $$ private synchronized int readWithBounceBuffer(byte[] arr, int off, int len, boolean canSkipChecksum) throws IOException -->Line_11 $$ int toRead = Math.min(dataBuf.remaining(), len)[ FD ]
Line_4 $$ if (!dataBuf.hasRemaining()) -->Line_5 $$ dataBuf.position(0)[ CD ]
Line_2 $$ private synchronized int readWithBounceBuffer(byte[] arr, int off, int len, boolean canSkipChecksum) throws IOException -->Line_4 $$ if (!dataBuf.hasRemaining()) [ CD ]
Line_4 $$ if (!dataBuf.hasRemaining()) -->Line_6 $$ dataBuf.limit(maxReadaheadLength)[ CD ]
Line_2 $$ private synchronized int readWithBounceBuffer(byte[] arr, int off, int len, boolean canSkipChecksum) throws IOException -->Line_12 $$ dataBuf.get(arr, off, toRead)[ CD ]
Line_2 $$ private synchronized int readWithBounceBuffer(byte[] arr, int off, int len, boolean canSkipChecksum) throws IOException -->Line_7 $$ fillDataBuf(canSkipChecksum)[ FD ]
Line_4 $$ if (!dataBuf.hasRemaining()) -->Line_7 $$ fillDataBuf(canSkipChecksum)[ CD ]
Line_9 $$ if (dataBuf.remaining() == 0)-->Line_10 $$ return -1[ CD ]
Line_2 $$ private synchronized int readWithBounceBuffer(byte[] arr, int off, int len, boolean canSkipChecksum) throws IOException -->Line_13 $$ return toRead[ CD ]
Line_2 $$ private synchronized int readWithBounceBuffer(byte[] arr, int off, int len, boolean canSkipChecksum) throws IOException -->Line_3 $$ createDataBufIfNeeded()[ CD ]
Line_2 $$ private synchronized int readWithBounceBuffer(byte[] arr, int off, int len, boolean canSkipChecksum) throws IOException -->Line_11 $$ int toRead = Math.min(dataBuf.remaining(), len)[ CD ]
Line_11 $$ int toRead = Math.min(dataBuf.remaining(), len)-->Line_12 $$ dataBuf.get(arr, off, toRead)[ FD ]
Line_2 $$ private synchronized int readWithBounceBuffer(byte[] arr, int off, int len, boolean canSkipChecksum) throws IOException -->Line_12 $$ dataBuf.get(arr, off, toRead)[ FD ]
