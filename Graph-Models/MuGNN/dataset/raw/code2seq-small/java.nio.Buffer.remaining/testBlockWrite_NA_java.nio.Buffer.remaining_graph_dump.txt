Line_2 $$ public void testBlockWrite() throws IOException -->Line_11 $$ byte[] unsafeGetByteArray = restrictedByteArrayCacheOutputStream.unsafeGetByteArray()[ CD ]
Line_3 $$ UnsyncByteArrayOutputStream unsyncByteArrayOutputStream = new UnsyncByteArrayOutputStream()-->Line_31 $$ Assert.assertArrayEquals(ArrayUtil.append(bytes, bytes, bytes), unsyncByteArrayOutputStream.toByteArray())[ FD ]
Line_4 $$ RestrictedByteArrayCacheOutputStream restrictedByteArrayCacheOutputStream = new RestrictedByteArrayCacheOutputStream(unsyncByteArrayOutputStream, 9, 19, null)-->Line_30 $$ restrictedByteArrayCacheOutputStream.write(bytes, 0, 0)[ FD ]
Line_5 $$ byte[] bytes = -->Line_10 $$ Assert.assertArrayEquals(bytes, restrictedByteArrayCacheOutputStream.toByteArray())[ FD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_17 $$ Assert.assertEquals(10, byteBuffer.remaining())[ CD ]
Line_4 $$ RestrictedByteArrayCacheOutputStream restrictedByteArrayCacheOutputStream = new RestrictedByteArrayCacheOutputStream(unsyncByteArrayOutputStream, 9, 19, null)-->Line_26 $$ Assert.assertEquals(-1, restrictedByteArrayCacheOutputStream.size())[ FD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_19 $$ for (int i = 0; i < 10; i++) [ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_24 $$ Assert.assertNull(restrictedByteArrayCacheOutputStream.cache)[ CD ]
Line_13 $$ for (int i = 0; i < 10; i++) -->Line_19 $$ for (int i = 0; i < 10; i++) [ FD ]
Line_4 $$ RestrictedByteArrayCacheOutputStream restrictedByteArrayCacheOutputStream = new RestrictedByteArrayCacheOutputStream(unsyncByteArrayOutputStream, 9, 19, null)-->Line_10 $$ Assert.assertArrayEquals(bytes, restrictedByteArrayCacheOutputStream.toByteArray())[ FD ]
Line_19 $$ for (int i = 0; i < 10; i++) -->Line_20 $$ Assert.assertEquals(bytes[i], byteBufferArray[i])[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_10 $$ Assert.assertArrayEquals(bytes, restrictedByteArrayCacheOutputStream.toByteArray())[ CD ]
Line_3 $$ UnsyncByteArrayOutputStream unsyncByteArrayOutputStream = new UnsyncByteArrayOutputStream()-->Line_27 $$ Assert.assertArrayEquals(ArrayUtil.append(bytes, bytes), unsyncByteArrayOutputStream.toByteArray())[ FD ]
Line_5 $$ byte[] bytes = -->Line_22 $$ restrictedByteArrayCacheOutputStream.write(bytes)[ FD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_16 $$ ByteBuffer byteBuffer = restrictedByteArrayCacheOutputStream.unsafeGetByteBuffer()[ CD ]
Line_4 $$ RestrictedByteArrayCacheOutputStream restrictedByteArrayCacheOutputStream = new RestrictedByteArrayCacheOutputStream(unsyncByteArrayOutputStream, 9, 19, null)-->Line_28 $$ restrictedByteArrayCacheOutputStream.write(bytes)[ FD ]
Line_5 $$ byte[] bytes = -->Line_29 $$ Assert.assertArrayEquals(ArrayUtil.append(bytes, bytes, bytes), unsyncByteArrayOutputStream.toByteArray())[ FD ]
Line_5 $$ byte[] bytes = -->Line_28 $$ restrictedByteArrayCacheOutputStream.write(bytes)[ FD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_8 $$ Assert.assertEquals(10, restrictedByteArrayCacheOutputStream.index)[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_22 $$ restrictedByteArrayCacheOutputStream.write(bytes)[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_12 $$ Assert.assertEquals(18, unsafeGetByteArray.length)[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_5 $$ byte[] bytes = [ CD ]
Line_4 $$ RestrictedByteArrayCacheOutputStream restrictedByteArrayCacheOutputStream = new RestrictedByteArrayCacheOutputStream(unsyncByteArrayOutputStream, 9, 19, null)-->Line_23 $$ Assert.assertTrue(restrictedByteArrayCacheOutputStream.isOverflowed())[ FD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_25 $$ Assert.assertEquals(-1, restrictedByteArrayCacheOutputStream.index)[ CD ]
Line_4 $$ RestrictedByteArrayCacheOutputStream restrictedByteArrayCacheOutputStream = new RestrictedByteArrayCacheOutputStream(unsyncByteArrayOutputStream, 9, 19, null)-->Line_6 $$ restrictedByteArrayCacheOutputStream.write(bytes)[ FD ]
Line_4 $$ RestrictedByteArrayCacheOutputStream restrictedByteArrayCacheOutputStream = new RestrictedByteArrayCacheOutputStream(unsyncByteArrayOutputStream, 9, 19, null)-->Line_16 $$ ByteBuffer byteBuffer = restrictedByteArrayCacheOutputStream.unsafeGetByteBuffer()[ FD ]
Line_16 $$ ByteBuffer byteBuffer = restrictedByteArrayCacheOutputStream.unsafeGetByteBuffer()-->Line_18 $$ byte[] byteBufferArray = byteBuffer.array()[ FD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_28 $$ restrictedByteArrayCacheOutputStream.write(bytes)[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_31 $$ Assert.assertArrayEquals(ArrayUtil.append(bytes, bytes, bytes), unsyncByteArrayOutputStream.toByteArray())[ CD ]
Line_4 $$ RestrictedByteArrayCacheOutputStream restrictedByteArrayCacheOutputStream = new RestrictedByteArrayCacheOutputStream(unsyncByteArrayOutputStream, 9, 19, null)-->Line_7 $$ Assert.assertFalse(restrictedByteArrayCacheOutputStream.isOverflowed())[ FD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_3 $$ UnsyncByteArrayOutputStream unsyncByteArrayOutputStream = new UnsyncByteArrayOutputStream()[ CD ]
Line_5 $$ byte[] bytes = -->Line_27 $$ Assert.assertArrayEquals(ArrayUtil.append(bytes, bytes), unsyncByteArrayOutputStream.toByteArray())[ FD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_7 $$ Assert.assertFalse(restrictedByteArrayCacheOutputStream.isOverflowed())[ CD ]
Line_4 $$ RestrictedByteArrayCacheOutputStream restrictedByteArrayCacheOutputStream = new RestrictedByteArrayCacheOutputStream(unsyncByteArrayOutputStream, 9, 19, null)-->Line_9 $$ Assert.assertEquals(10, restrictedByteArrayCacheOutputStream.size())[ FD ]
Line_5 $$ byte[] bytes = -->Line_30 $$ restrictedByteArrayCacheOutputStream.write(bytes, 0, 0)[ FD ]
Line_13 $$ for (int i = 0; i < 10; i++) -->Line_14 $$ Assert.assertEquals(bytes[i], unsafeGetByteArray[i])[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_26 $$ Assert.assertEquals(-1, restrictedByteArrayCacheOutputStream.size())[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_4 $$ RestrictedByteArrayCacheOutputStream restrictedByteArrayCacheOutputStream = new RestrictedByteArrayCacheOutputStream(unsyncByteArrayOutputStream, 9, 19, null)[ CD ]
Line_5 $$ byte[] bytes = -->Line_31 $$ Assert.assertArrayEquals(ArrayUtil.append(bytes, bytes, bytes), unsyncByteArrayOutputStream.toByteArray())[ FD ]
Line_4 $$ RestrictedByteArrayCacheOutputStream restrictedByteArrayCacheOutputStream = new RestrictedByteArrayCacheOutputStream(unsyncByteArrayOutputStream, 9, 19, null)-->Line_11 $$ byte[] unsafeGetByteArray = restrictedByteArrayCacheOutputStream.unsafeGetByteArray()[ FD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_13 $$ for (int i = 0; i < 10; i++) [ CD ]
Line_4 $$ RestrictedByteArrayCacheOutputStream restrictedByteArrayCacheOutputStream = new RestrictedByteArrayCacheOutputStream(unsyncByteArrayOutputStream, 9, 19, null)-->Line_22 $$ restrictedByteArrayCacheOutputStream.write(bytes)[ FD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_27 $$ Assert.assertArrayEquals(ArrayUtil.append(bytes, bytes), unsyncByteArrayOutputStream.toByteArray())[ CD ]
Line_5 $$ byte[] bytes = -->Line_6 $$ restrictedByteArrayCacheOutputStream.write(bytes)[ FD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_6 $$ restrictedByteArrayCacheOutputStream.write(bytes)[ CD ]
Line_16 $$ ByteBuffer byteBuffer = restrictedByteArrayCacheOutputStream.unsafeGetByteBuffer()-->Line_17 $$ Assert.assertEquals(10, byteBuffer.remaining())[ FD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_30 $$ restrictedByteArrayCacheOutputStream.write(bytes, 0, 0)[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_29 $$ Assert.assertArrayEquals(ArrayUtil.append(bytes, bytes, bytes), unsyncByteArrayOutputStream.toByteArray())[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_23 $$ Assert.assertTrue(restrictedByteArrayCacheOutputStream.isOverflowed())[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_18 $$ byte[] byteBufferArray = byteBuffer.array()[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_9 $$ Assert.assertEquals(10, restrictedByteArrayCacheOutputStream.size())[ CD ]
Line_3 $$ UnsyncByteArrayOutputStream unsyncByteArrayOutputStream = new UnsyncByteArrayOutputStream()-->Line_29 $$ Assert.assertArrayEquals(ArrayUtil.append(bytes, bytes, bytes), unsyncByteArrayOutputStream.toByteArray())[ FD ]
