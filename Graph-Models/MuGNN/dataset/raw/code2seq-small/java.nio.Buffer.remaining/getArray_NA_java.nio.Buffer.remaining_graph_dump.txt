Line_4 $$ if (buffer.hasArray()) -->Line_6 $$ return Arrays.copyOfRange(buffer.array(), boff, boff + length)[ CD ]
Line_2 $$ public static byte[] getArray(ByteBuffer buffer) -->Line_8 $$ byte[] bytes = new byte[length][ CD ]
Line_2 $$ public static byte[] getArray(ByteBuffer buffer) -->Line_10 $$ return bytes[ CD ]
Line_4 $$ if (buffer.hasArray()) -->Line_5 $$ int boff = buffer.arrayOffset() + buffer.position()[ CD ]
Line_2 $$ public static byte[] getArray(ByteBuffer buffer) -->Line_3 $$ int length = buffer.remaining()[ FD ]
Line_2 $$ public static byte[] getArray(ByteBuffer buffer) -->Line_9 $$ buffer.duplicate().get(bytes)[ FD ]
Line_2 $$ public static byte[] getArray(ByteBuffer buffer) -->Line_4 $$ if (buffer.hasArray()) [ FD ]
Line_2 $$ public static byte[] getArray(ByteBuffer buffer) -->Line_5 $$ int boff = buffer.arrayOffset() + buffer.position()[ FD ]
Line_2 $$ public static byte[] getArray(ByteBuffer buffer) -->Line_6 $$ return Arrays.copyOfRange(buffer.array(), boff, boff + length)[ FD ]
Line_2 $$ public static byte[] getArray(ByteBuffer buffer) -->Line_9 $$ buffer.duplicate().get(bytes)[ CD ]
Line_5 $$ int boff = buffer.arrayOffset() + buffer.position()-->Line_6 $$ return Arrays.copyOfRange(buffer.array(), boff, boff + length)[ FD ]
Line_8 $$ byte[] bytes = new byte[length]-->Line_9 $$ buffer.duplicate().get(bytes)[ FD ]
Line_2 $$ public static byte[] getArray(ByteBuffer buffer) -->Line_4 $$ if (buffer.hasArray()) [ CD ]
Line_2 $$ public static byte[] getArray(ByteBuffer buffer) -->Line_3 $$ int length = buffer.remaining()[ CD ]
