Line_2 $$ private void reslicePacket(int headerLen, int checksumsLen, int dataLen) -->Line_3 $$ int lenThroughHeader = PacketHeader.PKT_LENGTHS_LEN + headerLen[ CD ]
Line_2 $$ private void reslicePacket(int headerLen, int checksumsLen, int dataLen) -->Line_16 $$ curPacketBuf.limit(lenThroughData)[ CD ]
Line_2 $$ private void reslicePacket(int headerLen, int checksumsLen, int dataLen) -->Line_12 $$ curPacketBuf.position(lenThroughChecksums)[ CD ]
Line_3 $$ int lenThroughHeader = PacketHeader.PKT_LENGTHS_LEN + headerLen-->Line_9 $$ curPacketBuf.position(lenThroughHeader)[ FD ]
Line_2 $$ private void reslicePacket(int headerLen, int checksumsLen, int dataLen) -->Line_4 $$ int lenThroughChecksums = lenThroughHeader + checksumsLen[ CD ]
Line_2 $$ private void reslicePacket(int headerLen, int checksumsLen, int dataLen) -->Line_11 $$ curChecksumSlice = curPacketBuf.slice()[ CD ]
Line_4 $$ int lenThroughChecksums = lenThroughHeader + checksumsLen-->Line_10 $$ curPacketBuf.limit(lenThroughChecksums)[ FD ]
Line_2 $$ private void reslicePacket(int headerLen, int checksumsLen, int dataLen) -->Line_13 $$ curPacketBuf.limit(lenThroughData)[ CD ]
Line_5 $$ int lenThroughData = lenThroughChecksums + dataLen-->Line_13 $$ curPacketBuf.limit(lenThroughData)[ FD ]
Line_2 $$ private void reslicePacket(int headerLen, int checksumsLen, int dataLen) -->Line_10 $$ curPacketBuf.limit(lenThroughChecksums)[ CD ]
Line_5 $$ int lenThroughData = lenThroughChecksums + dataLen-->Line_16 $$ curPacketBuf.limit(lenThroughData)[ FD ]
Line_2 $$ private void reslicePacket(int headerLen, int checksumsLen, int dataLen) -->Line_5 $$ int lenThroughData = lenThroughChecksums + dataLen[ CD ]
Line_2 $$ private void reslicePacket(int headerLen, int checksumsLen, int dataLen) -->Line_15 $$ curPacketBuf.position(0)[ CD ]
Line_2 $$ private void reslicePacket(int headerLen, int checksumsLen, int dataLen) -->Line_14 $$ curDataSlice = curPacketBuf.slice()[ CD ]
Line_4 $$ int lenThroughChecksums = lenThroughHeader + checksumsLen-->Line_12 $$ curPacketBuf.position(lenThroughChecksums)[ FD ]
Line_2 $$ private void reslicePacket(int headerLen, int checksumsLen, int dataLen) -->Line_9 $$ curPacketBuf.position(lenThroughHeader)[ CD ]
