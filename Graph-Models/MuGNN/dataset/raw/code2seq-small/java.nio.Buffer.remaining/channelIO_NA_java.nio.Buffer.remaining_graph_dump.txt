Line_5 $$ int ret = 0-->Line_11 $$ if (ret < ioSize) [ FD ]
Line_2 $$ private static int channelIO(ReadableByteChannel readCh, WritableByteChannel writeCh, ByteBuffer buf) throws IOException -->Line_3 $$ int originalLimit = buf.limit()[ CD ]
Line_2 $$ private static int channelIO(ReadableByteChannel readCh, WritableByteChannel writeCh, ByteBuffer buf) throws IOException -->Line_3 $$ int originalLimit = buf.limit()[ FD ]
Line_2 $$ private static int channelIO(ReadableByteChannel readCh, WritableByteChannel writeCh, ByteBuffer buf) throws IOException -->Line_9 $$ buf.limit(buf.position() + ioSize)[ FD ]
Line_2 $$ private static int channelIO(ReadableByteChannel readCh, WritableByteChannel writeCh, ByteBuffer buf) throws IOException -->Line_18 $$ int nBytes = initialRemaining - buf.remaining()[ FD ]
Line_5 $$ int ret = 0-->Line_10 $$ ret = (readCh == null) ? writeCh.write(buf) : readCh.read(buf)[ FD ]
Line_2 $$ private static int channelIO(ReadableByteChannel readCh, WritableByteChannel writeCh, ByteBuffer buf) throws IOException -->Line_8 $$ int ioSize = Math.min(buf.remaining(), NIO_BUFFER_LIMIT)[ FD ]
Line_2 $$ private static int channelIO(ReadableByteChannel readCh, WritableByteChannel writeCh, ByteBuffer buf) throws IOException -->Line_4 $$ int initialRemaining = buf.remaining()[ FD ]
Line_2 $$ private static int channelIO(ReadableByteChannel readCh, WritableByteChannel writeCh, ByteBuffer buf) throws IOException -->Line_6 $$ while (buf.remaining() > 0) [ FD ]
Line_2 $$ private static int channelIO(ReadableByteChannel readCh, WritableByteChannel writeCh, ByteBuffer buf) throws IOException -->Line_10 $$ ret = (readCh == null) ? writeCh.write(buf) : readCh.read(buf)[ FD ]
Line_2 $$ private static int channelIO(ReadableByteChannel readCh, WritableByteChannel writeCh, ByteBuffer buf) throws IOException -->Line_4 $$ int initialRemaining = buf.remaining()[ CD ]
Line_3 $$ int originalLimit = buf.limit()-->Line_15 $$ buf.limit(originalLimit)[ FD ]
Line_2 $$ private static int channelIO(ReadableByteChannel readCh, WritableByteChannel writeCh, ByteBuffer buf) throws IOException -->Line_6 $$ while (buf.remaining() > 0) [ CD ]
Line_2 $$ private static int channelIO(ReadableByteChannel readCh, WritableByteChannel writeCh, ByteBuffer buf) throws IOException -->Line_19 $$ return (nBytes > 0) ? nBytes : ret[ CD ]
Line_10 $$ ret = (readCh == null) ? writeCh.write(buf) : readCh.read(buf)-->Line_11 $$ if (ret < ioSize) [ FD ]
Line_8 $$ int ioSize = Math.min(buf.remaining(), NIO_BUFFER_LIMIT)-->Line_11 $$ if (ret < ioSize) [ FD ]
Line_2 $$ private static int channelIO(ReadableByteChannel readCh, WritableByteChannel writeCh, ByteBuffer buf) throws IOException -->Line_5 $$ int ret = 0[ CD ]
Line_2 $$ private static int channelIO(ReadableByteChannel readCh, WritableByteChannel writeCh, ByteBuffer buf) throws IOException -->Line_15 $$ buf.limit(originalLimit)[ FD ]
Line_2 $$ private static int channelIO(ReadableByteChannel readCh, WritableByteChannel writeCh, ByteBuffer buf) throws IOException -->Line_18 $$ int nBytes = initialRemaining - buf.remaining()[ CD ]
