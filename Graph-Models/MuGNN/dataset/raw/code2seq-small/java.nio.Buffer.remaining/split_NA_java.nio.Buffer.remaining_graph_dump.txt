Line_7 $$ while (bb.remaining() > 0) -->Line_8 $$ getComparator(i++, bb)[ CD ]
Line_2 $$ public ByteBuffer[] split(ByteBuffer name) -->Line_4 $$ ByteBuffer bb = name.duplicate()[ FD ]
Line_4 $$ ByteBuffer bb = name.duplicate()-->Line_7 $$ while (bb.remaining() > 0) [ FD ]
Line_2 $$ public ByteBuffer[] split(ByteBuffer name) -->Line_6 $$ int i = 0[ CD ]
Line_2 $$ public ByteBuffer[] split(ByteBuffer name) -->Line_5 $$ readIsStatic(bb)[ CD ]
Line_6 $$ int i = 0-->Line_8 $$ getComparator(i++, bb)[ FD ]
Line_7 $$ while (bb.remaining() > 0) -->Line_9 $$ l.add(ByteBufferUtil.readBytesWithShortLength(bb))[ CD ]
Line_4 $$ ByteBuffer bb = name.duplicate()-->Line_9 $$ l.add(ByteBufferUtil.readBytesWithShortLength(bb))[ FD ]
Line_4 $$ ByteBuffer bb = name.duplicate()-->Line_8 $$ getComparator(i++, bb)[ FD ]
Line_4 $$ ByteBuffer bb = name.duplicate()-->Line_10 $$ bb.get()[ FD ]
Line_2 $$ public ByteBuffer[] split(ByteBuffer name) -->Line_7 $$ while (bb.remaining() > 0) [ CD ]
Line_2 $$ public ByteBuffer[] split(ByteBuffer name) -->Line_3 $$ List<ByteBuffer> l = new ArrayList<ByteBuffer>()[ CD ]
Line_7 $$ while (bb.remaining() > 0) -->Line_10 $$ bb.get()[ CD ]
Line_3 $$ List<ByteBuffer> l = new ArrayList<ByteBuffer>()-->Line_12 $$ return l.toArray(new ByteBuffer[l.size()])[ FD ]
Line_2 $$ public ByteBuffer[] split(ByteBuffer name) -->Line_4 $$ ByteBuffer bb = name.duplicate()[ CD ]
Line_3 $$ List<ByteBuffer> l = new ArrayList<ByteBuffer>()-->Line_9 $$ l.add(ByteBufferUtil.readBytesWithShortLength(bb))[ FD ]
Line_4 $$ ByteBuffer bb = name.duplicate()-->Line_5 $$ readIsStatic(bb)[ FD ]
Line_2 $$ public ByteBuffer[] split(ByteBuffer name) -->Line_12 $$ return l.toArray(new ByteBuffer[l.size()])[ CD ]
