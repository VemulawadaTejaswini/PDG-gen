Line_2 $$ private void decrypt(ByteBuffer buf, int n, int start) throws IOException -->Line_4 $$ final int limit = buf.limit()[ FD ]
Line_6 $$ while (len < n) -->Line_7 $$ buf.position(start + len)[ CD ]
Line_14 $$ len += outBuffer.remaining()-->Line_6 $$ while (len < n) [ FD ]
Line_2 $$ private void decrypt(ByteBuffer buf, int n, int start) throws IOException -->Line_20 $$ buf.position(pos)[ CD ]
Line_2 $$ private void decrypt(ByteBuffer buf, int n, int start) throws IOException -->Line_15 $$ buf.put(outBuffer)[ FD ]
Line_2 $$ private void decrypt(ByteBuffer buf, int n, int start) throws IOException -->Line_6 $$ while (len < n) [ CD ]
Line_4 $$ final int limit = buf.limit()-->Line_13 $$ buf.limit(limit)[ FD ]
Line_6 $$ while (len < n) -->Line_8 $$ buf.limit(start + len + Math.min(n - len, inBuffer.remaining()))[ CD ]
Line_2 $$ private void decrypt(ByteBuffer buf, int n, int start) throws IOException -->Line_20 $$ buf.position(pos)[ FD ]
Line_6 $$ while (len < n) -->Line_9 $$ inBuffer.put(buf)[ CD ]
Line_2 $$ private void decrypt(ByteBuffer buf, int n, int start) throws IOException -->Line_12 $$ buf.position(start + len)[ FD ]
Line_5 $$ int len = 0-->Line_14 $$ len += outBuffer.remaining()[ FD ]
Line_2 $$ private void decrypt(ByteBuffer buf, int n, int start) throws IOException -->Line_5 $$ int len = 0[ CD ]
Line_2 $$ private void decrypt(ByteBuffer buf, int n, int start) throws IOException -->Line_3 $$ final int pos = buf.position()[ CD ]
Line_2 $$ private void decrypt(ByteBuffer buf, int n, int start) throws IOException -->Line_6 $$ while (len < n) [ FD ]
Line_2 $$ private void decrypt(ByteBuffer buf, int n, int start) throws IOException -->Line_8 $$ buf.limit(start + len + Math.min(n - len, inBuffer.remaining()))[ FD ]
Line_2 $$ private void decrypt(ByteBuffer buf, int n, int start) throws IOException -->Line_7 $$ buf.position(start + len)[ FD ]
Line_2 $$ private void decrypt(ByteBuffer buf, int n, int start) throws IOException -->Line_3 $$ final int pos = buf.position()[ FD ]
Line_5 $$ int len = 0-->Line_6 $$ while (len < n) [ FD ]
Line_3 $$ final int pos = buf.position()-->Line_20 $$ buf.position(pos)[ FD ]
Line_2 $$ private void decrypt(ByteBuffer buf, int n, int start) throws IOException -->Line_9 $$ inBuffer.put(buf)[ FD ]
Line_2 $$ private void decrypt(ByteBuffer buf, int n, int start) throws IOException -->Line_13 $$ buf.limit(limit)[ FD ]
Line_2 $$ private void decrypt(ByteBuffer buf, int n, int start) throws IOException -->Line_4 $$ final int limit = buf.limit()[ CD ]
