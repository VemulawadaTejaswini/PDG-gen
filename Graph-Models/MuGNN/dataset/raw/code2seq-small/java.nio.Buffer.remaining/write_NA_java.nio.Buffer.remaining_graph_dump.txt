Line_2 $$ public int write(ByteBuffer src) throws IOException -->Line_3 $$ int willActuallyWrite = randomInt(src.remaining())[ CD ]
Line_4 $$ ByteBuffer mockSrc = src.duplicate()-->Line_9 $$ src.position(mockSrc.position())[ FD ]
Line_4 $$ ByteBuffer mockSrc = src.duplicate()-->Line_7 $$ return delegate.write(mockSrc)[ FD ]
Line_2 $$ public int write(ByteBuffer src) throws IOException -->Line_4 $$ ByteBuffer mockSrc = src.duplicate()[ FD ]
Line_2 $$ public int write(ByteBuffer src) throws IOException -->Line_9 $$ src.position(mockSrc.position())[ FD ]
Line_2 $$ public int write(ByteBuffer src) throws IOException -->Line_4 $$ ByteBuffer mockSrc = src.duplicate()[ CD ]
Line_2 $$ public int write(ByteBuffer src) throws IOException -->Line_3 $$ int willActuallyWrite = randomInt(src.remaining())[ FD ]
Line_2 $$ public int write(ByteBuffer src) throws IOException -->Line_5 $$ mockSrc.limit(mockSrc.position() + willActuallyWrite)[ CD ]
Line_4 $$ ByteBuffer mockSrc = src.duplicate()-->Line_5 $$ mockSrc.limit(mockSrc.position() + willActuallyWrite)[ FD ]
