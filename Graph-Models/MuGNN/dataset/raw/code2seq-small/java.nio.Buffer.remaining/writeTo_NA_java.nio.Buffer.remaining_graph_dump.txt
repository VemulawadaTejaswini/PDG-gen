Line_2 $$ public void writeTo(OutputStream os) throws IOException -->Line_3 $$ if (buffer.hasArray()) [ CD ]
Line_3 $$ if (buffer.hasArray()) -->Line_8 $$ while (buf.hasRemaining()) [ CD ]
Line_7 $$ ByteBuffer buf = buffer.duplicate()-->Line_8 $$ while (buf.hasRemaining()) [ FD ]
Line_6 $$ byte[] tmp = new byte[8192]-->Line_9 $$ buf.get(tmp, 0, Math.min(tmp.length, buf.remaining()))[ FD ]
Line_8 $$ while (buf.hasRemaining()) -->Line_10 $$ os.write(tmp)[ CD ]
Line_8 $$ while (buf.hasRemaining()) -->Line_9 $$ buf.get(tmp, 0, Math.min(tmp.length, buf.remaining()))[ CD ]
Line_2 $$ public void writeTo(OutputStream os) throws IOException -->Line_4 $$ os.write(buffer.array(), buffer.arrayOffset() + buffer.position(), buffer.remaining())[ FD ]
Line_3 $$ if (buffer.hasArray()) -->Line_4 $$ os.write(buffer.array(), buffer.arrayOffset() + buffer.position(), buffer.remaining())[ CD ]
Line_3 $$ if (buffer.hasArray()) -->Line_6 $$ byte[] tmp = new byte[8192][ CD ]
Line_7 $$ ByteBuffer buf = buffer.duplicate()-->Line_9 $$ buf.get(tmp, 0, Math.min(tmp.length, buf.remaining()))[ FD ]
Line_3 $$ if (buffer.hasArray()) -->Line_7 $$ ByteBuffer buf = buffer.duplicate()[ CD ]
Line_6 $$ byte[] tmp = new byte[8192]-->Line_10 $$ os.write(tmp)[ FD ]
Line_2 $$ public void writeTo(OutputStream os) throws IOException -->Line_10 $$ os.write(tmp)[ FD ]
