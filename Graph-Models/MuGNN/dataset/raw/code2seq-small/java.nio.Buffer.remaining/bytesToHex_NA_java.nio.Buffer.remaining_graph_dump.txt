Line_2 $$ public static String bytesToHex(ByteBuffer bytes) -->Line_8 $$ final char[] c = new char[size * 2][ CD ]
Line_2 $$ public static String bytesToHex(ByteBuffer bytes) -->Line_10 $$ final int bint = bytes.get(i + offset)[ FD ]
Line_2 $$ public static String bytesToHex(ByteBuffer bytes) -->Line_3 $$ if (bytes.hasArray()) [ CD ]
Line_7 $$ final int size = bytes.remaining()-->Line_9 $$ for (int i = 0; i < size; i++) [ FD ]
Line_2 $$ public static String bytesToHex(ByteBuffer bytes) -->Line_9 $$ for (int i = 0; i < size; i++) [ CD ]
Line_9 $$ for (int i = 0; i < size; i++) -->Line_11 $$ c[i * 2] = Hex.byteToChar[(bint & 0xf0) >> 4][ CD ]
Line_9 $$ for (int i = 0; i < size; i++) -->Line_12 $$ c[1 + i * 2] = Hex.byteToChar[bint & 0x0f][ CD ]
Line_8 $$ final char[] c = new char[size * 2]-->Line_14 $$ return Hex.wrapCharArray(c)[ FD ]
Line_2 $$ public static String bytesToHex(ByteBuffer bytes) -->Line_7 $$ final int size = bytes.remaining()[ FD ]
Line_3 $$ if (bytes.hasArray()) -->Line_4 $$ return Hex.bytesToHex(bytes.array(), bytes.arrayOffset() + bytes.position(), bytes.remaining())[ CD ]
Line_9 $$ for (int i = 0; i < size; i++) -->Line_10 $$ final int bint = bytes.get(i + offset)[ CD ]
Line_2 $$ public static String bytesToHex(ByteBuffer bytes) -->Line_6 $$ final int offset = bytes.position()[ FD ]
Line_2 $$ public static String bytesToHex(ByteBuffer bytes) -->Line_4 $$ return Hex.bytesToHex(bytes.array(), bytes.arrayOffset() + bytes.position(), bytes.remaining())[ FD ]
Line_2 $$ public static String bytesToHex(ByteBuffer bytes) -->Line_3 $$ if (bytes.hasArray()) [ FD ]
Line_2 $$ public static String bytesToHex(ByteBuffer bytes) -->Line_7 $$ final int size = bytes.remaining()[ CD ]
Line_2 $$ public static String bytesToHex(ByteBuffer bytes) -->Line_14 $$ return Hex.wrapCharArray(c)[ CD ]
Line_2 $$ public static String bytesToHex(ByteBuffer bytes) -->Line_6 $$ final int offset = bytes.position()[ CD ]
