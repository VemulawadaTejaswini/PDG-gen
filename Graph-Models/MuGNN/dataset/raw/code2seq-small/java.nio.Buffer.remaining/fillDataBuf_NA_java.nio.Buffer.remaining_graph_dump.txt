Line_7 $$ if (canSkipChecksum) -->Line_9 $$ fillBuffer(dataBuf, canSkipChecksum)[ CD ]
Line_7 $$ if (canSkipChecksum) -->Line_8 $$ dataBuf.position(slop)[ CD ]
Line_2 $$ private synchronized boolean fillDataBuf(boolean canSkipChecksum) throws IOException -->Line_20 $$ return dataBuf.limit() != maxReadaheadLength[ CD ]
Line_4 $$ final int slop = (int) (dataPos % bytesPerChecksum)-->Line_16 $$ dataBuf.position(Math.min(dataBuf.position(), slop))[ FD ]
Line_2 $$ private synchronized boolean fillDataBuf(boolean canSkipChecksum) throws IOException -->Line_3 $$ createDataBufIfNeeded()[ CD ]
Line_2 $$ private synchronized boolean fillDataBuf(boolean canSkipChecksum) throws IOException -->Line_6 $$ dataBuf.limit(maxReadaheadLength)[ CD ]
Line_2 $$ private synchronized boolean fillDataBuf(boolean canSkipChecksum) throws IOException -->Line_4 $$ final int slop = (int) (dataPos % bytesPerChecksum)[ CD ]
Line_2 $$ private synchronized boolean fillDataBuf(boolean canSkipChecksum) throws IOException -->Line_9 $$ fillBuffer(dataBuf, canSkipChecksum)[ FD ]
Line_7 $$ if (canSkipChecksum) -->Line_12 $$ dataBuf.position(0)[ CD ]
Line_7 $$ if (canSkipChecksum) -->Line_13 $$ fillBuffer(dataBuf, canSkipChecksum)[ CD ]
Line_2 $$ private synchronized boolean fillDataBuf(boolean canSkipChecksum) throws IOException -->Line_5 $$ final long oldDataPos = dataPos[ CD ]
Line_4 $$ final int slop = (int) (dataPos % bytesPerChecksum)-->Line_8 $$ dataBuf.position(slop)[ FD ]
Line_2 $$ private synchronized boolean fillDataBuf(boolean canSkipChecksum) throws IOException -->Line_16 $$ dataBuf.position(Math.min(dataBuf.position(), slop))[ CD ]
Line_2 $$ private synchronized boolean fillDataBuf(boolean canSkipChecksum) throws IOException -->Line_15 $$ dataBuf.limit(dataBuf.position())[ CD ]
Line_2 $$ private synchronized boolean fillDataBuf(boolean canSkipChecksum) throws IOException -->Line_7 $$ if (canSkipChecksum) [ CD ]
Line_2 $$ private synchronized boolean fillDataBuf(boolean canSkipChecksum) throws IOException -->Line_17 $$ if (LOG.isTraceEnabled()) [ CD ]
Line_2 $$ private synchronized boolean fillDataBuf(boolean canSkipChecksum) throws IOException -->Line_13 $$ fillBuffer(dataBuf, canSkipChecksum)[ FD ]
Line_17 $$ if (LOG.isTraceEnabled()) -->Line_18 $$ LOG.trace("loaded " + dataBuf.remaining() + " bytes into bounce " + "buffer from offset " + oldDataPos + " of " + block)[ CD ]
