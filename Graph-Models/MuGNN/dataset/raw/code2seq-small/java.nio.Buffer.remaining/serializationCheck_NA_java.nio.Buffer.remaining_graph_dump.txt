Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_3 $$ Assert.assertEquals(0xdeadbeef, input.readUnsignedVInt())[ CD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_22 $$ for (int i = 0; i < withIndex.columnsIndex().size(); i++) Assert.assertEquals(offsets[i], input.readInt())[ CD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_3 $$ Assert.assertEquals(0xdeadbeef, input.readUnsignedVInt())[ FD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_6 $$ Assert.assertEquals(withIndex.deletionTime(), DeletionTime.serializer.deserialize(input))[ CD ]
Line_10 $$ for (int i = 0; i < withIndex.columnsIndex().size(); i++) -->Line_13 $$ IndexHelper.IndexInfo info = indexSerializer.deserialize(input)[ CD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_9 $$ int[] offsets = new int[withIndex.columnsIndex().size()][ FD ]
Line_10 $$ for (int i = 0; i < withIndex.columnsIndex().size(); i++) -->Line_16 $$ Assert.assertEquals(withIndex.columnsIndex().get(i).offset, info.offset)[ CD ]
Line_11 $$ int pos = bb.position()-->Line_12 $$ offsets[i] = pos - offset[ FD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_19 $$ Assert.assertEquals(withIndex.columnsIndex().get(i).firstName, info.firstName)[ FD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_4 $$ Assert.assertEquals(withIndex.promotedSize(indexSerializer), input.readUnsignedVInt())[ FD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_10 $$ for (int i = 0; i < withIndex.columnsIndex().size(); i++) [ CD ]
Line_10 $$ for (int i = 0; i < withIndex.columnsIndex().size(); i++) -->Line_15 $$ Assert.assertEquals(indexSerializer.serializedSize(info), end - pos)[ CD ]
Line_10 $$ for (int i = 0; i < withIndex.columnsIndex().size(); i++) -->Line_16 $$ Assert.assertEquals(withIndex.columnsIndex().get(i).offset, info.offset)[ FD ]
Line_10 $$ for (int i = 0; i < withIndex.columnsIndex().size(); i++) -->Line_19 $$ Assert.assertEquals(withIndex.columnsIndex().get(i).firstName, info.firstName)[ FD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_11 $$ int pos = bb.position()[ FD ]
Line_10 $$ for (int i = 0; i < withIndex.columnsIndex().size(); i++) -->Line_11 $$ int pos = bb.position()[ CD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_22 $$ Assert.assertEquals(offsets[i], input.readInt())[ FD ]
Line_10 $$ for (int i = 0; i < withIndex.columnsIndex().size(); i++) -->Line_19 $$ Assert.assertEquals(withIndex.columnsIndex().get(i).firstName, info.firstName)[ CD ]
Line_10 $$ for (int i = 0; i < withIndex.columnsIndex().size(); i++) -->Line_12 $$ offsets[i] = pos - offset[ CD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_5 $$ Assert.assertEquals(withIndex.headerLength(), input.readUnsignedVInt())[ FD ]
Line_10 $$ for (int i = 0; i < withIndex.columnsIndex().size(); i++) -->Line_22 $$ for (int i = 0; i < withIndex.columnsIndex().size(); i++) Assert.assertEquals(offsets[i], input.readInt())[ FD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_18 $$ Assert.assertEquals(withIndex.columnsIndex().get(i).endOpenMarker, info.endOpenMarker)[ FD ]
Line_10 $$ for (int i = 0; i < withIndex.columnsIndex().size(); i++) -->Line_17 $$ Assert.assertEquals(withIndex.columnsIndex().get(i).width, info.width)[ FD ]
Line_10 $$ for (int i = 0; i < withIndex.columnsIndex().size(); i++) -->Line_20 $$ Assert.assertEquals(withIndex.columnsIndex().get(i).lastName, info.lastName)[ FD ]
Line_10 $$ for (int i = 0; i < withIndex.columnsIndex().size(); i++) -->Line_20 $$ Assert.assertEquals(withIndex.columnsIndex().get(i).lastName, info.lastName)[ CD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_22 $$ for (int i = 0; i < withIndex.columnsIndex().size(); i++) Assert.assertEquals(offsets[i], input.readInt())[ FD ]
Line_8 $$ int offset = bb.position()-->Line_12 $$ offsets[i] = pos - offset[ FD ]
Line_10 $$ for (int i = 0; i < withIndex.columnsIndex().size(); i++) -->Line_18 $$ Assert.assertEquals(withIndex.columnsIndex().get(i).endOpenMarker, info.endOpenMarker)[ CD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_8 $$ int offset = bb.position()[ CD ]
Line_13 $$ IndexHelper.IndexInfo info = indexSerializer.deserialize(input)-->Line_15 $$ Assert.assertEquals(indexSerializer.serializedSize(info), end - pos)[ FD ]
Line_10 $$ for (int i = 0; i < withIndex.columnsIndex().size(); i++) -->Line_17 $$ Assert.assertEquals(withIndex.columnsIndex().get(i).width, info.width)[ CD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_7 $$ Assert.assertEquals(withIndex.columnsIndex().size(), input.readUnsignedVInt())[ FD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_8 $$ int offset = bb.position()[ FD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_5 $$ Assert.assertEquals(withIndex.headerLength(), input.readUnsignedVInt())[ CD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_16 $$ Assert.assertEquals(withIndex.columnsIndex().get(i).offset, info.offset)[ FD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_20 $$ Assert.assertEquals(withIndex.columnsIndex().get(i).lastName, info.lastName)[ FD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_9 $$ int[] offsets = new int[withIndex.columnsIndex().size()][ CD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_4 $$ Assert.assertEquals(withIndex.promotedSize(indexSerializer), input.readUnsignedVInt())[ CD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_15 $$ Assert.assertEquals(indexSerializer.serializedSize(info), end - pos)[ FD ]
Line_10 $$ for (int i = 0; i < withIndex.columnsIndex().size(); i++) -->Line_14 $$ int end = bb.position()[ CD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_17 $$ Assert.assertEquals(withIndex.columnsIndex().get(i).width, info.width)[ FD ]
Line_10 $$ for (int i = 0; i < withIndex.columnsIndex().size(); i++) -->Line_18 $$ Assert.assertEquals(withIndex.columnsIndex().get(i).endOpenMarker, info.endOpenMarker)[ FD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_14 $$ int end = bb.position()[ FD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_6 $$ Assert.assertEquals(withIndex.deletionTime(), DeletionTime.serializer.deserialize(input))[ FD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_7 $$ Assert.assertEquals(withIndex.columnsIndex().size(), input.readUnsignedVInt())[ CD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_13 $$ IndexHelper.IndexInfo info = indexSerializer.deserialize(input)[ FD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_23 $$ Assert.assertEquals(0, bb.remaining())[ CD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_10 $$ for (int i = 0; i < withIndex.columnsIndex().size(); i++) [ FD ]
Line_2 $$ private void serializationCheck(RowIndexEntry<IndexHelper.IndexInfo> withIndex, IndexHelper.IndexInfo.Serializer indexSerializer, ByteBuffer bb, DataInputBuffer input) throws IOException -->Line_23 $$ Assert.assertEquals(0, bb.remaining())[ FD ]
