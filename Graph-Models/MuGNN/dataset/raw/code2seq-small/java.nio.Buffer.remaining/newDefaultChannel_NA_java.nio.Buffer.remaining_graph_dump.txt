Line_3 $$ return new WritableByteChannel() -->Line_5 $$ return true[ CD ]
Line_3 $$ return new WritableByteChannel() -->Line_10 $$ int toWrite = src.remaining()[ CD ]
Line_24 $$ while (totalWritten < toWrite) -->Line_26 $$ ByteBufferUtil.arrayCopy(src, src.position() + totalWritten, buf, 0, toWriteThisTime)[ CD ]
Line_25 $$ int toWriteThisTime = Math.min(buf.length, toWrite - totalWritten)-->Line_27 $$ DataOutputStreamPlus.this.write(buf, 0, toWriteThisTime)[ FD ]
Line_16 $$ if (toWrite < 16) -->Line_19 $$ src.position(src.limit())[ CD ]
Line_3 $$ return new WritableByteChannel() -->Line_11 $$ if (src.hasArray()) [ CD ]
Line_10 $$ int toWrite = src.remaining()-->Line_16 $$ if (toWrite < 16) [ FD ]
Line_28 $$ totalWritten += toWriteThisTime-->Line_24 $$ while (totalWritten < toWrite) [ FD ]
Line_24 $$ while (totalWritten < toWrite) -->Line_28 $$ totalWritten += toWriteThisTime[ CD ]
Line_11 $$ if (src.hasArray()) -->Line_13 $$ src.position(src.limit())[ CD ]
Line_3 $$ return new WritableByteChannel() -->Line_18 $$ DataOutputStreamPlus.this.write(src.get(i + offset))[ FD ]
Line_3 $$ return new WritableByteChannel() -->Line_12 $$ DataOutputStreamPlus.this.write(src.array(), src.arrayOffset() + src.position(), src.remaining())[ FD ]
Line_22 $$ byte[] buf = retrieveTemporaryBuffer(toWrite)-->Line_27 $$ DataOutputStreamPlus.this.write(buf, 0, toWriteThisTime)[ FD ]
Line_11 $$ if (src.hasArray()) -->Line_12 $$ DataOutputStreamPlus.this.write(src.array(), src.arrayOffset() + src.position(), src.remaining())[ CD ]
Line_16 $$ if (toWrite < 16) -->Line_18 $$ for (int i = 0; i < toWrite; i++) DataOutputStreamPlus.this.write(src.get(i + offset))[ CD ]
Line_3 $$ return new WritableByteChannel() -->Line_17 $$ int offset = src.position()[ FD ]
Line_10 $$ int toWrite = src.remaining()-->Line_22 $$ byte[] buf = retrieveTemporaryBuffer(toWrite)[ FD ]
Line_3 $$ return new WritableByteChannel() -->Line_19 $$ src.position(src.limit())[ FD ]
Line_3 $$ return new WritableByteChannel() -->Line_30 $$ src.position(src.limit())[ FD ]
Line_3 $$ return new WritableByteChannel() -->Line_31 $$ return totalWritten[ CD ]
Line_16 $$ if (toWrite < 16) -->Line_17 $$ int offset = src.position()[ CD ]
Line_25 $$ int toWriteThisTime = Math.min(buf.length, toWrite - totalWritten)-->Line_28 $$ totalWritten += toWriteThisTime[ FD ]
Line_3 $$ return new WritableByteChannel() -->Line_11 $$ if (src.hasArray()) [ FD ]
Line_3 $$ return new WritableByteChannel() -->Line_24 $$ while (totalWritten < toWrite) [ CD ]
Line_22 $$ byte[] buf = retrieveTemporaryBuffer(toWrite)-->Line_26 $$ ByteBufferUtil.arrayCopy(src, src.position() + totalWritten, buf, 0, toWriteThisTime)[ FD ]
Line_24 $$ while (totalWritten < toWrite) -->Line_25 $$ int toWriteThisTime = Math.min(buf.length, toWrite - totalWritten)[ CD ]
Line_3 $$ return new WritableByteChannel() -->Line_13 $$ src.position(src.limit())[ FD ]
Line_16 $$ if (toWrite < 16) -->Line_20 $$ return toWrite[ CD ]
Line_25 $$ int toWriteThisTime = Math.min(buf.length, toWrite - totalWritten)-->Line_26 $$ ByteBufferUtil.arrayCopy(src, src.position() + totalWritten, buf, 0, toWriteThisTime)[ FD ]
Line_3 $$ return new WritableByteChannel() -->Line_23 $$ int totalWritten = 0[ CD ]
Line_2 $$ protected WritableByteChannel newDefaultChannel() -->Line_3 $$ return new WritableByteChannel() [ CD ]
Line_3 $$ return new WritableByteChannel() -->Line_10 $$ int toWrite = src.remaining()[ FD ]
Line_10 $$ int toWrite = src.remaining()-->Line_24 $$ while (totalWritten < toWrite) [ FD ]
Line_3 $$ return new WritableByteChannel() -->Line_30 $$ src.position(src.limit())[ CD ]
Line_10 $$ int toWrite = src.remaining()-->Line_18 $$ for (int i = 0; i < toWrite; i++) DataOutputStreamPlus.this.write(src.get(i + offset))[ FD ]
Line_3 $$ return new WritableByteChannel() -->Line_22 $$ byte[] buf = retrieveTemporaryBuffer(toWrite)[ CD ]
Line_3 $$ return new WritableByteChannel() -->Line_26 $$ ByteBufferUtil.arrayCopy(src, src.position() + totalWritten, buf, 0, toWriteThisTime)[ FD ]
Line_11 $$ if (src.hasArray()) -->Line_14 $$ return toWrite[ CD ]
Line_3 $$ return new WritableByteChannel() -->Line_16 $$ if (toWrite < 16) [ CD ]
Line_23 $$ int totalWritten = 0-->Line_28 $$ totalWritten += toWriteThisTime[ FD ]
Line_23 $$ int totalWritten = 0-->Line_24 $$ while (totalWritten < toWrite) [ FD ]
Line_24 $$ while (totalWritten < toWrite) -->Line_27 $$ DataOutputStreamPlus.this.write(buf, 0, toWriteThisTime)[ CD ]
