Line_8 $$ final JavaArchive sar = ShrinkWrap.create(JavaArchive.class, "test-jmx-sar.sar")-->Line_10 $$ sar.addAsManifestResource(ModelControllerMBeanTestCase.class.getPackage(), "jboss-service.xml", "jboss-service.xml")[ FD ]
Line_11 $$ InputStream in = sar.as(ZipExporter.class).exportAsInputStream()-->Line_16 $$ i = in.read()[ FD ]
Line_5 $$ ObjectName testDeploymentModelName = new ObjectName("" + RESOLVED_DOMAIN + ":deployment=test-jmx-sar.sar")-->Line_40 $$ Assert.assertTrue((Boolean) connection.getAttribute(testDeploymentModelName, "enabled"))[ FD ]
Line_14 $$ while (i != -1) -->Line_15 $$ bout.write(i)[ CD ]
Line_13 $$ int i = in.read()-->Line_14 $$ while (i != -1) [ FD ]
Line_26 $$ contentType = (CompositeType) ((ArrayType<CompositeType>) ((OpenMBeanParameterInfo) op.getSignature()[2]).getOpenType()).getElementOpenType()-->Line_31 $$ for (String key : contentType.keySet()) [ FD ]
Line_31 $$ for (String key : contentType.keySet()) -->Line_32 $$ values.put(key, null)[ FD ]
Line_5 $$ ObjectName testDeploymentModelName = new ObjectName("" + RESOLVED_DOMAIN + ":deployment=test-jmx-sar.sar")-->Line_7 $$ assertNoMBean(testDeploymentModelName)[ FD ]
Line_24 $$ for (MBeanOperationInfo op : info.getOperations()) -->Line_26 $$ contentType = (CompositeType) ((ArrayType<CompositeType>) ((OpenMBeanParameterInfo) op.getSignature()[2]).getOpenType()).getElementOpenType()[ FD ]
Line_16 $$ i = in.read()-->Line_15 $$ bout.write(i)[ FD ]
Line_5 $$ ObjectName testDeploymentModelName = new ObjectName("" + RESOLVED_DOMAIN + ":deployment=test-jmx-sar.sar")-->Line_45 $$ Assert.assertFalse((Boolean) connection.getAttribute(testDeploymentModelName, "enabled"))[ FD ]
Line_30 $$ Map<String, Object> values = new HashMap<String, Object>()-->Line_34 $$ values.put("hash", hash)[ FD ]
Line_5 $$ ObjectName testDeploymentModelName = new ObjectName("" + RESOLVED_DOMAIN + ":deployment=test-jmx-sar.sar")-->Line_48 $$ assertNoMBean(testDeploymentModelName)[ FD ]
Line_24 $$ for (MBeanOperationInfo op : info.getOperations()) -->Line_25 $$ if (op.getName().equals("addDeployment")) [ FD ]
Line_23 $$ MBeanInfo info = connection.getMBeanInfo(RESOLVED_ROOT_MODEL_NAME)-->Line_24 $$ for (MBeanOperationInfo op : info.getOperations()) [ FD ]
Line_11 $$ InputStream in = sar.as(ZipExporter.class).exportAsInputStream()-->Line_13 $$ int i = in.read()[ FD ]
Line_16 $$ i = in.read()-->Line_14 $$ while (i != -1) [ FD ]
Line_4 $$ ObjectName testSarMBeanName = new ObjectName("jboss:name=test,type=jmx-sar")-->Line_6 $$ assertNoMBean(testSarMBeanName)[ FD ]
Line_12 $$ ByteArrayOutputStream bout = new ByteArrayOutputStream()-->Line_18 $$ byte[] bytes = bout.toByteArray()[ FD ]
Line_14 $$ while (i != -1) -->Line_16 $$ i = in.read()[ CD ]
Line_12 $$ ByteArrayOutputStream bout = new ByteArrayOutputStream()-->Line_15 $$ bout.write(i)[ FD ]
Line_8 $$ final JavaArchive sar = ShrinkWrap.create(JavaArchive.class, "test-jmx-sar.sar")-->Line_11 $$ InputStream in = sar.as(ZipExporter.class).exportAsInputStream()[ FD ]
Line_13 $$ int i = in.read()-->Line_15 $$ bout.write(i)[ FD ]
Line_8 $$ final JavaArchive sar = ShrinkWrap.create(JavaArchive.class, "test-jmx-sar.sar")-->Line_9 $$ sar.addClasses(org.jboss.as.test.integration.jmx.sar.Test.class, TestMBean.class)[ FD ]
Line_25 $$ if (op.getName().equals("addDeployment")) -->Line_26 $$ contentType = (CompositeType) ((ArrayType<CompositeType>) ((OpenMBeanParameterInfo) op.getSignature()[2]).getOpenType()).getElementOpenType()[ CD ]
Line_30 $$ Map<String, Object> values = new HashMap<String, Object>()-->Line_32 $$ values.put(key, null)[ FD ]
Line_13 $$ int i = in.read()-->Line_16 $$ i = in.read()[ FD ]
