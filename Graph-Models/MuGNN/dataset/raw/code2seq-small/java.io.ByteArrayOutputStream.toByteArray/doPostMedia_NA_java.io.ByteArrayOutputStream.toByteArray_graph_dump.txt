Line_6 $$ if (folderId != 0) -->Line_8 $$ repositoryId = folder.getRepositoryId()[ CD ]
Line_14 $$ ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()-->Line_16 $$ byte[] content = byteArrayOutputStream.toByteArray()[ FD ]
Line_13 $$ String description = atomRequestContext.getHeader("Summary")-->Line_19 $$ FileEntry fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, title, mimeType, title, description, null, contentInputStream, content.length, serviceContext)[ FD ]
Line_7 $$ Folder folder = _dlAppService.getFolder(folderId)-->Line_8 $$ repositoryId = folder.getRepositoryId()[ FD ]
Line_8 $$ repositoryId = folder.getRepositoryId()-->Line_19 $$ FileEntry fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, title, mimeType, title, description, null, contentInputStream, content.length, serviceContext)[ FD ]
Line_5 $$ long repositoryId = 0-->Line_8 $$ repositoryId = folder.getRepositoryId()[ FD ]
Line_5 $$ long repositoryId = 0-->Line_10 $$ repositoryId = atomRequestContext.getLongParameter("repositoryId")[ FD ]
Line_6 $$ if (folderId != 0) -->Line_7 $$ Folder folder = _dlAppService.getFolder(folderId)[ CD ]
Line_4 $$ long folderId = atomRequestContext.getLongParameter("folderId")-->Line_19 $$ FileEntry fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, title, mimeType, title, description, null, contentInputStream, content.length, serviceContext)[ FD ]
Line_12 $$ String title = atomRequestContext.getHeader("Title")-->Line_19 $$ FileEntry fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, title, mimeType, title, description, null, contentInputStream, content.length, serviceContext)[ FD ]
Line_17 $$ ByteArrayInputStream contentInputStream = new ByteArrayInputStream(content)-->Line_19 $$ FileEntry fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, title, mimeType, title, description, null, contentInputStream, content.length, serviceContext)[ FD ]
Line_6 $$ if (folderId != 0) -->Line_10 $$ repositoryId = atomRequestContext.getLongParameter("repositoryId")[ CD ]
Line_4 $$ long folderId = atomRequestContext.getLongParameter("folderId")-->Line_7 $$ Folder folder = _dlAppService.getFolder(folderId)[ FD ]
Line_4 $$ long folderId = atomRequestContext.getLongParameter("folderId")-->Line_6 $$ if (folderId != 0) [ FD ]
Line_8 $$ repositoryId = folder.getRepositoryId()-->Line_10 $$ repositoryId = atomRequestContext.getLongParameter("repositoryId")[ FD ]
Line_10 $$ repositoryId = atomRequestContext.getLongParameter("repositoryId")-->Line_19 $$ FileEntry fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, title, mimeType, title, description, null, contentInputStream, content.length, serviceContext)[ FD ]
Line_18 $$ ServiceContext serviceContext = new ServiceContext()-->Line_19 $$ FileEntry fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, title, mimeType, title, description, null, contentInputStream, content.length, serviceContext)[ FD ]
Line_14 $$ ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()-->Line_15 $$ StreamUtil.transfer(inputStream, byteArrayOutputStream)[ FD ]
Line_5 $$ long repositoryId = 0-->Line_19 $$ FileEntry fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, title, mimeType, title, description, null, contentInputStream, content.length, serviceContext)[ FD ]
