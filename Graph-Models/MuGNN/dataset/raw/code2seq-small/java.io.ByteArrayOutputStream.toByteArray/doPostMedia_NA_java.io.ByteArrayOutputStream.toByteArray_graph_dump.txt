Line_16 $$ ByteArrayInputStream contentInputStream = new ByteArrayInputStream(content)-->Line_18 $$ FileEntry fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, title, mimeType, title, description, null, contentInputStream, content.length, serviceContext)[ FD ]
Line_2 $$ protected FileEntry doPostMedia(String mimeType, String slug, InputStream inputStream, AtomRequestContext atomRequestContext) throws Exception -->Line_12 $$ String description = atomRequestContext.getHeader("Summary")[ FD ]
Line_13 $$ ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()-->Line_15 $$ byte[] content = byteArrayOutputStream.toByteArray()[ FD ]
Line_2 $$ protected FileEntry doPostMedia(String mimeType, String slug, InputStream inputStream, AtomRequestContext atomRequestContext) throws Exception -->Line_11 $$ String title = atomRequestContext.getHeader("Title")[ CD ]
Line_2 $$ protected FileEntry doPostMedia(String mimeType, String slug, InputStream inputStream, AtomRequestContext atomRequestContext) throws Exception -->Line_13 $$ ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()[ CD ]
Line_2 $$ protected FileEntry doPostMedia(String mimeType, String slug, InputStream inputStream, AtomRequestContext atomRequestContext) throws Exception -->Line_14 $$ StreamUtil.transfer(inputStream, byteArrayOutputStream)[ CD ]
Line_13 $$ ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()-->Line_14 $$ StreamUtil.transfer(inputStream, byteArrayOutputStream)[ FD ]
Line_2 $$ protected FileEntry doPostMedia(String mimeType, String slug, InputStream inputStream, AtomRequestContext atomRequestContext) throws Exception -->Line_11 $$ String title = atomRequestContext.getHeader("Title")[ FD ]
Line_11 $$ String title = atomRequestContext.getHeader("Title")-->Line_18 $$ FileEntry fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, title, mimeType, title, description, null, contentInputStream, content.length, serviceContext)[ FD ]
Line_2 $$ protected FileEntry doPostMedia(String mimeType, String slug, InputStream inputStream, AtomRequestContext atomRequestContext) throws Exception -->Line_15 $$ byte[] content = byteArrayOutputStream.toByteArray()[ CD ]
Line_4 $$ long repositoryId = 0-->Line_9 $$ repositoryId = atomRequestContext.getLongParameter("repositoryId")[ FD ]
Line_5 $$ if (folderId != 0) -->Line_6 $$ Folder folder = _dlAppService.getFolder(folderId)[ CD ]
Line_12 $$ String description = atomRequestContext.getHeader("Summary")-->Line_18 $$ FileEntry fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, title, mimeType, title, description, null, contentInputStream, content.length, serviceContext)[ FD ]
Line_2 $$ protected FileEntry doPostMedia(String mimeType, String slug, InputStream inputStream, AtomRequestContext atomRequestContext) throws Exception -->Line_19 $$ return fileEntry[ CD ]
Line_17 $$ ServiceContext serviceContext = new ServiceContext()-->Line_18 $$ FileEntry fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, title, mimeType, title, description, null, contentInputStream, content.length, serviceContext)[ FD ]
Line_2 $$ protected FileEntry doPostMedia(String mimeType, String slug, InputStream inputStream, AtomRequestContext atomRequestContext) throws Exception -->Line_18 $$ FileEntry fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, title, mimeType, title, description, null, contentInputStream, content.length, serviceContext)[ FD ]
Line_4 $$ long repositoryId = 0-->Line_7 $$ repositoryId = folder.getRepositoryId()[ FD ]
Line_5 $$ if (folderId != 0) -->Line_7 $$ repositoryId = folder.getRepositoryId()[ CD ]
Line_7 $$ repositoryId = folder.getRepositoryId()-->Line_18 $$ FileEntry fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, title, mimeType, title, description, null, contentInputStream, content.length, serviceContext)[ FD ]
Line_2 $$ protected FileEntry doPostMedia(String mimeType, String slug, InputStream inputStream, AtomRequestContext atomRequestContext) throws Exception -->Line_3 $$ long folderId = atomRequestContext.getLongParameter("folderId")[ CD ]
Line_2 $$ protected FileEntry doPostMedia(String mimeType, String slug, InputStream inputStream, AtomRequestContext atomRequestContext) throws Exception -->Line_4 $$ long repositoryId = 0[ CD ]
Line_2 $$ protected FileEntry doPostMedia(String mimeType, String slug, InputStream inputStream, AtomRequestContext atomRequestContext) throws Exception -->Line_14 $$ StreamUtil.transfer(inputStream, byteArrayOutputStream)[ FD ]
Line_2 $$ protected FileEntry doPostMedia(String mimeType, String slug, InputStream inputStream, AtomRequestContext atomRequestContext) throws Exception -->Line_5 $$ if (folderId != 0) [ CD ]
Line_7 $$ repositoryId = folder.getRepositoryId()-->Line_9 $$ repositoryId = atomRequestContext.getLongParameter("repositoryId")[ FD ]
Line_3 $$ long folderId = atomRequestContext.getLongParameter("folderId")-->Line_18 $$ FileEntry fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, title, mimeType, title, description, null, contentInputStream, content.length, serviceContext)[ FD ]
Line_5 $$ if (folderId != 0) -->Line_9 $$ repositoryId = atomRequestContext.getLongParameter("repositoryId")[ CD ]
Line_6 $$ Folder folder = _dlAppService.getFolder(folderId)-->Line_7 $$ repositoryId = folder.getRepositoryId()[ FD ]
Line_2 $$ protected FileEntry doPostMedia(String mimeType, String slug, InputStream inputStream, AtomRequestContext atomRequestContext) throws Exception -->Line_9 $$ repositoryId = atomRequestContext.getLongParameter("repositoryId")[ FD ]
Line_2 $$ protected FileEntry doPostMedia(String mimeType, String slug, InputStream inputStream, AtomRequestContext atomRequestContext) throws Exception -->Line_18 $$ FileEntry fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, title, mimeType, title, description, null, contentInputStream, content.length, serviceContext)[ CD ]
Line_3 $$ long folderId = atomRequestContext.getLongParameter("folderId")-->Line_6 $$ Folder folder = _dlAppService.getFolder(folderId)[ FD ]
Line_3 $$ long folderId = atomRequestContext.getLongParameter("folderId")-->Line_5 $$ if (folderId != 0) [ FD ]
Line_2 $$ protected FileEntry doPostMedia(String mimeType, String slug, InputStream inputStream, AtomRequestContext atomRequestContext) throws Exception -->Line_3 $$ long folderId = atomRequestContext.getLongParameter("folderId")[ FD ]
Line_2 $$ protected FileEntry doPostMedia(String mimeType, String slug, InputStream inputStream, AtomRequestContext atomRequestContext) throws Exception -->Line_16 $$ ByteArrayInputStream contentInputStream = new ByteArrayInputStream(content)[ CD ]
Line_9 $$ repositoryId = atomRequestContext.getLongParameter("repositoryId")-->Line_18 $$ FileEntry fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, title, mimeType, title, description, null, contentInputStream, content.length, serviceContext)[ FD ]
Line_2 $$ protected FileEntry doPostMedia(String mimeType, String slug, InputStream inputStream, AtomRequestContext atomRequestContext) throws Exception -->Line_12 $$ String description = atomRequestContext.getHeader("Summary")[ CD ]
Line_2 $$ protected FileEntry doPostMedia(String mimeType, String slug, InputStream inputStream, AtomRequestContext atomRequestContext) throws Exception -->Line_17 $$ ServiceContext serviceContext = new ServiceContext()[ CD ]
Line_4 $$ long repositoryId = 0-->Line_18 $$ FileEntry fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, title, mimeType, title, description, null, contentInputStream, content.length, serviceContext)[ FD ]
