Line_2 $$ public void testTypedValueSerialization() throws Exception -->Line_3 $$ final Type mockType = mock(Type.class)[ CD ]
Line_9 $$ final ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()))-->Line_10 $$ final TypedValue typedValueClone = (TypedValue) ois.readObject()[ FD ]
Line_2 $$ public void testTypedValueSerialization() throws Exception -->Line_10 $$ final TypedValue typedValueClone = (TypedValue) ois.readObject()[ CD ]
Line_2 $$ public void testTypedValueSerialization() throws Exception -->Line_6 $$ final ByteArrayOutputStream baos = new ByteArrayOutputStream()[ CD ]
Line_2 $$ public void testTypedValueSerialization() throws Exception -->Line_9 $$ final ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()))[ CD ]
Line_5 $$ final TypedValue typedValue = new TypedValue(mockType, value)-->Line_13 $$ assertEquals(typedValue.getValue(), typedValueClone.getValue())[ FD ]
Line_10 $$ final TypedValue typedValueClone = (TypedValue) ois.readObject()-->Line_12 $$ assertEquals(typedValue.toString(), typedValueClone.toString())[ FD ]
Line_2 $$ public void testTypedValueSerialization() throws Exception -->Line_7 $$ final ObjectOutputStream oos = new ObjectOutputStream(baos)[ CD ]
Line_2 $$ public void testTypedValueSerialization() throws Exception -->Line_12 $$ assertEquals(typedValue.toString(), typedValueClone.toString())[ CD ]
Line_5 $$ final TypedValue typedValue = new TypedValue(mockType, value)-->Line_8 $$ oos.writeObject(typedValue)[ FD ]
Line_2 $$ public void testTypedValueSerialization() throws Exception -->Line_4 $$ final String value = "foo"[ CD ]
Line_6 $$ final ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_9 $$ final ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()))[ FD ]
Line_5 $$ final TypedValue typedValue = new TypedValue(mockType, value)-->Line_11 $$ assertEquals(typedValue.hashCode(), typedValueClone.hashCode())[ FD ]
Line_7 $$ final ObjectOutputStream oos = new ObjectOutputStream(baos)-->Line_8 $$ oos.writeObject(typedValue)[ FD ]
Line_2 $$ public void testTypedValueSerialization() throws Exception -->Line_8 $$ oos.writeObject(typedValue)[ CD ]
Line_10 $$ final TypedValue typedValueClone = (TypedValue) ois.readObject()-->Line_11 $$ assertEquals(typedValue.hashCode(), typedValueClone.hashCode())[ FD ]
Line_2 $$ public void testTypedValueSerialization() throws Exception -->Line_5 $$ final TypedValue typedValue = new TypedValue(mockType, value)[ CD ]
Line_10 $$ final TypedValue typedValueClone = (TypedValue) ois.readObject()-->Line_13 $$ assertEquals(typedValue.getValue(), typedValueClone.getValue())[ FD ]
Line_2 $$ public void testTypedValueSerialization() throws Exception -->Line_11 $$ assertEquals(typedValue.hashCode(), typedValueClone.hashCode())[ CD ]
Line_5 $$ final TypedValue typedValue = new TypedValue(mockType, value)-->Line_12 $$ assertEquals(typedValue.toString(), typedValueClone.toString())[ FD ]
Line_2 $$ public void testTypedValueSerialization() throws Exception -->Line_13 $$ assertEquals(typedValue.getValue(), typedValueClone.getValue())[ CD ]
