Line_2 $$ public void testRepeat() throws Exception -->Line_3 $$ final Configuration conf = new Configuration()[ CD ]
Line_2 $$ public void testRepeat() throws Exception -->Line_6 $$ Arrays.fill(len, BLOCK)[ CD ]
Line_2 $$ public void testRepeat() throws Exception -->Line_13 $$ final byte[] verif2 = new byte[2 * NFILES * BLOCK][ CD ]
Line_2 $$ public void testRepeat() throws Exception -->Line_5 $$ Arrays.fill(start, 0L)[ CD ]
Line_2 $$ public void testRepeat() throws Exception -->Line_14 $$ System.arraycopy(verif, 0, verif2, 0, verif.length)[ CD ]
Line_13 $$ final byte[] verif2 = new byte[2 * NFILES * BLOCK]-->Line_15 $$ System.arraycopy(verif, 0, verif2, verif.length, verif.length)[ FD ]
Line_10 $$ final byte[] check = new byte[2 * NFILES * BLOCK]-->Line_12 $$ assertArrayEquals(verif, Arrays.copyOf(check, NFILES * BLOCK))[ FD ]
Line_10 $$ final byte[] check = new byte[2 * NFILES * BLOCK]-->Line_11 $$ q.read(check, 0, NFILES * BLOCK)[ FD ]
Line_2 $$ public void testRepeat() throws Exception -->Line_4 $$ Arrays.fill(loc, "")[ CD ]
Line_10 $$ final byte[] check = new byte[2 * NFILES * BLOCK]-->Line_16 $$ q.read(check, 0, 2 * NFILES * BLOCK)[ FD ]
Line_9 $$ final byte[] verif = out.toByteArray()-->Line_12 $$ assertArrayEquals(verif, Arrays.copyOf(check, NFILES * BLOCK))[ FD ]
Line_7 $$ final ByteArrayOutputStream out = fillVerif()-->Line_9 $$ final byte[] verif = out.toByteArray()[ FD ]
Line_2 $$ public void testRepeat() throws Exception -->Line_12 $$ assertArrayEquals(verif, Arrays.copyOf(check, NFILES * BLOCK))[ CD ]
Line_2 $$ public void testRepeat() throws Exception -->Line_17 $$ assertArrayEquals(verif2, check)[ CD ]
Line_13 $$ final byte[] verif2 = new byte[2 * NFILES * BLOCK]-->Line_17 $$ assertArrayEquals(verif2, check)[ FD ]
Line_2 $$ public void testRepeat() throws Exception -->Line_16 $$ q.read(check, 0, 2 * NFILES * BLOCK)[ CD ]
Line_9 $$ final byte[] verif = out.toByteArray()-->Line_14 $$ System.arraycopy(verif, 0, verif2, 0, verif.length)[ FD ]
Line_2 $$ public void testRepeat() throws Exception -->Line_7 $$ final ByteArrayOutputStream out = fillVerif()[ CD ]
Line_9 $$ final byte[] verif = out.toByteArray()-->Line_15 $$ System.arraycopy(verif, 0, verif2, verif.length, verif.length)[ FD ]
Line_8 $$ final FileQueue q = new FileQueue(new CombineFileSplit(paths, start, len, loc), conf)-->Line_11 $$ q.read(check, 0, NFILES * BLOCK)[ FD ]
Line_10 $$ final byte[] check = new byte[2 * NFILES * BLOCK]-->Line_17 $$ assertArrayEquals(verif2, check)[ FD ]
Line_2 $$ public void testRepeat() throws Exception -->Line_8 $$ final FileQueue q = new FileQueue(new CombineFileSplit(paths, start, len, loc), conf)[ CD ]
Line_8 $$ final FileQueue q = new FileQueue(new CombineFileSplit(paths, start, len, loc), conf)-->Line_16 $$ q.read(check, 0, 2 * NFILES * BLOCK)[ FD ]
Line_2 $$ public void testRepeat() throws Exception -->Line_9 $$ final byte[] verif = out.toByteArray()[ CD ]
Line_13 $$ final byte[] verif2 = new byte[2 * NFILES * BLOCK]-->Line_14 $$ System.arraycopy(verif, 0, verif2, 0, verif.length)[ FD ]
Line_2 $$ public void testRepeat() throws Exception -->Line_11 $$ q.read(check, 0, NFILES * BLOCK)[ CD ]
Line_2 $$ public void testRepeat() throws Exception -->Line_10 $$ final byte[] check = new byte[2 * NFILES * BLOCK][ CD ]
Line_2 $$ public void testRepeat() throws Exception -->Line_15 $$ System.arraycopy(verif, 0, verif2, verif.length, verif.length)[ CD ]
