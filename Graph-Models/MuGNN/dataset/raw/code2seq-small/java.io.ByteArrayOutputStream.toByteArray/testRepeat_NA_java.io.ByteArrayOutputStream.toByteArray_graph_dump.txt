Line_8 $$ final ByteArrayOutputStream out = fillVerif()-->Line_10 $$ final byte[] verif = out.toByteArray()[ FD ]
Line_11 $$ final byte[] check = new byte[2 * NFILES * BLOCK]-->Line_17 $$ q.read(check, 0, 2 * NFILES * BLOCK)[ FD ]
Line_9 $$ final FileQueue q = new FileQueue(new CombineFileSplit(paths, start, len, loc), conf)-->Line_17 $$ q.read(check, 0, 2 * NFILES * BLOCK)[ FD ]
Line_14 $$ final byte[] verif2 = new byte[2 * NFILES * BLOCK]-->Line_18 $$ assertArrayEquals(verif2, check)[ FD ]
Line_11 $$ final byte[] check = new byte[2 * NFILES * BLOCK]-->Line_12 $$ q.read(check, 0, NFILES * BLOCK)[ FD ]
Line_14 $$ final byte[] verif2 = new byte[2 * NFILES * BLOCK]-->Line_15 $$ System.arraycopy(verif, 0, verif2, 0, verif.length)[ FD ]
Line_11 $$ final byte[] check = new byte[2 * NFILES * BLOCK]-->Line_13 $$ assertArrayEquals(verif, Arrays.copyOf(check, NFILES * BLOCK))[ FD ]
Line_14 $$ final byte[] verif2 = new byte[2 * NFILES * BLOCK]-->Line_16 $$ System.arraycopy(verif, 0, verif2, verif.length, verif.length)[ FD ]
Line_9 $$ final FileQueue q = new FileQueue(new CombineFileSplit(paths, start, len, loc), conf)-->Line_12 $$ q.read(check, 0, NFILES * BLOCK)[ FD ]
Line_10 $$ final byte[] verif = out.toByteArray()-->Line_16 $$ System.arraycopy(verif, 0, verif2, verif.length, verif.length)[ FD ]
Line_10 $$ final byte[] verif = out.toByteArray()-->Line_13 $$ assertArrayEquals(verif, Arrays.copyOf(check, NFILES * BLOCK))[ FD ]
Line_10 $$ final byte[] verif = out.toByteArray()-->Line_15 $$ System.arraycopy(verif, 0, verif2, 0, verif.length)[ FD ]
Line_11 $$ final byte[] check = new byte[2 * NFILES * BLOCK]-->Line_18 $$ assertArrayEquals(verif2, check)[ FD ]
