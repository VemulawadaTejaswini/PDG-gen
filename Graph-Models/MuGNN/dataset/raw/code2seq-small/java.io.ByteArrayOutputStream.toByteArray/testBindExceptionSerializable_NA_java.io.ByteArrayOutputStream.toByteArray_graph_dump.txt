Line_14 $$ BindException ex2 = (BindException) ois.readObject()-->Line_17 $$ assertTrue(ex2.hasFieldErrors("age"))[ FD ]
Line_14 $$ BindException ex2 = (BindException) ois.readObject()-->Line_19 $$ assertEquals(new Integer(99), ex2.getFieldValue("age"))[ FD ]
Line_14 $$ BindException ex2 = (BindException) ois.readObject()-->Line_18 $$ assertEquals("invalidField", ex2.getFieldError("age").getCode())[ FD ]
Line_2 $$ public void testBindExceptionSerializable() throws Exception -->Line_8 $$ ex.rejectValue("age", "invalidField", "someMessage")[ CD ]
Line_2 $$ public void testBindExceptionSerializable() throws Exception -->Line_3 $$ SerializablePerson tb = new SerializablePerson()[ CD ]
Line_2 $$ public void testBindExceptionSerializable() throws Exception -->Line_13 $$ ObjectInputStream ois = new ObjectInputStream(bais)[ CD ]
Line_14 $$ BindException ex2 = (BindException) ois.readObject()-->Line_15 $$ assertTrue(ex2.hasGlobalErrors())[ FD ]
Line_2 $$ public void testBindExceptionSerializable() throws Exception -->Line_22 $$ assertEquals("invalidField", ex2.getFieldError("name").getCode())[ CD ]
Line_2 $$ public void testBindExceptionSerializable() throws Exception -->Line_5 $$ tb.setAge(99)[ CD ]
Line_2 $$ public void testBindExceptionSerializable() throws Exception -->Line_12 $$ ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray())[ CD ]
Line_2 $$ public void testBindExceptionSerializable() throws Exception -->Line_14 $$ BindException ex2 = (BindException) ois.readObject()[ CD ]
Line_3 $$ SerializablePerson tb = new SerializablePerson()-->Line_4 $$ tb.setName("myName")[ FD ]
Line_2 $$ public void testBindExceptionSerializable() throws Exception -->Line_20 $$ ex2.rejectValue("name", "invalidField", "someMessage")[ CD ]
Line_2 $$ public void testBindExceptionSerializable() throws Exception -->Line_21 $$ assertTrue(ex2.hasFieldErrors("name"))[ CD ]
Line_2 $$ public void testBindExceptionSerializable() throws Exception -->Line_11 $$ oos.writeObject(ex)[ CD ]
Line_2 $$ public void testBindExceptionSerializable() throws Exception -->Line_23 $$ assertEquals("myName", ex2.getFieldValue("name"))[ CD ]
Line_9 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_12 $$ ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray())[ FD ]
Line_2 $$ public void testBindExceptionSerializable() throws Exception -->Line_19 $$ assertEquals(new Integer(99), ex2.getFieldValue("age"))[ CD ]
Line_13 $$ ObjectInputStream ois = new ObjectInputStream(bais)-->Line_14 $$ BindException ex2 = (BindException) ois.readObject()[ FD ]
Line_2 $$ public void testBindExceptionSerializable() throws Exception -->Line_17 $$ assertTrue(ex2.hasFieldErrors("age"))[ CD ]
Line_6 $$ BindException ex = new BindException(tb, "tb")-->Line_7 $$ ex.reject("invalid", "someMessage")[ FD ]
Line_2 $$ public void testBindExceptionSerializable() throws Exception -->Line_16 $$ assertEquals("invalid", ex2.getGlobalError().getCode())[ CD ]
Line_2 $$ public void testBindExceptionSerializable() throws Exception -->Line_10 $$ ObjectOutputStream oos = new ObjectOutputStream(baos)[ CD ]
Line_6 $$ BindException ex = new BindException(tb, "tb")-->Line_11 $$ oos.writeObject(ex)[ FD ]
Line_2 $$ public void testBindExceptionSerializable() throws Exception -->Line_4 $$ tb.setName("myName")[ CD ]
Line_6 $$ BindException ex = new BindException(tb, "tb")-->Line_8 $$ ex.rejectValue("age", "invalidField", "someMessage")[ FD ]
Line_2 $$ public void testBindExceptionSerializable() throws Exception -->Line_18 $$ assertEquals("invalidField", ex2.getFieldError("age").getCode())[ CD ]
Line_14 $$ BindException ex2 = (BindException) ois.readObject()-->Line_20 $$ ex2.rejectValue("name", "invalidField", "someMessage")[ FD ]
Line_14 $$ BindException ex2 = (BindException) ois.readObject()-->Line_22 $$ assertEquals("invalidField", ex2.getFieldError("name").getCode())[ FD ]
Line_3 $$ SerializablePerson tb = new SerializablePerson()-->Line_5 $$ tb.setAge(99)[ FD ]
Line_2 $$ public void testBindExceptionSerializable() throws Exception -->Line_6 $$ BindException ex = new BindException(tb, "tb")[ CD ]
Line_14 $$ BindException ex2 = (BindException) ois.readObject()-->Line_21 $$ assertTrue(ex2.hasFieldErrors("name"))[ FD ]
Line_14 $$ BindException ex2 = (BindException) ois.readObject()-->Line_23 $$ assertEquals("myName", ex2.getFieldValue("name"))[ FD ]
Line_2 $$ public void testBindExceptionSerializable() throws Exception -->Line_9 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()[ CD ]
Line_2 $$ public void testBindExceptionSerializable() throws Exception -->Line_7 $$ ex.reject("invalid", "someMessage")[ CD ]
Line_2 $$ public void testBindExceptionSerializable() throws Exception -->Line_15 $$ assertTrue(ex2.hasGlobalErrors())[ CD ]
Line_14 $$ BindException ex2 = (BindException) ois.readObject()-->Line_16 $$ assertEquals("invalid", ex2.getGlobalError().getCode())[ FD ]
Line_10 $$ ObjectOutputStream oos = new ObjectOutputStream(baos)-->Line_11 $$ oos.writeObject(ex)[ FD ]
