Line_4 $$ EntityManager em = getOrCreateEntityManager()-->Line_7 $$ Query query = em.createQuery("SELECT p FETCH JOIN p.distributors FROM Item p")[ FD ]
Line_4 $$ EntityManager em = getOrCreateEntityManager()-->Line_25 $$ em.close()[ FD ]
Line_17 $$ ObjectInputStream in = new ObjectInputStream(byteIn)-->Line_36 $$ in.close()[ FD ]
Line_11 $$ ObjectOutput out = new ObjectOutputStream(stream)-->Line_12 $$ out.writeObject(e)[ FD ]
Line_10 $$ ByteArrayOutputStream stream = new ByteArrayOutputStream()-->Line_15 $$ stream.close()[ FD ]
Line_11 $$ ObjectOutput out = new ObjectOutputStream(stream)-->Line_29 $$ out.writeObject(e)[ FD ]
Line_16 $$ ByteArrayInputStream byteIn = new ByteArrayInputStream(serialized)-->Line_20 $$ byteIn.close()[ FD ]
Line_17 $$ ObjectInputStream in = new ObjectInputStream(byteIn)-->Line_19 $$ in.close()[ FD ]
Line_7 $$ Query query = em.createQuery("SELECT p FETCH JOIN p.distributors FROM Item p")-->Line_8 $$ query.getSingleResult()[ FD ]
Line_17 $$ ObjectInputStream in = new ObjectInputStream(byteIn)-->Line_18 $$ IllegalArgumentException deserializedException = (IllegalArgumentException) in.readObject()[ FD ]
Line_26 $$ Exception e = new HibernateException("Exception", new NullPointerException("NPE"))-->Line_29 $$ out.writeObject(e)[ FD ]
Line_18 $$ IllegalArgumentException deserializedException = (IllegalArgumentException) in.readObject()-->Line_38 $$ assertNotNull("Arbitrary exceptions nullified", deserializedException.getCause())[ FD ]
Line_10 $$ ByteArrayOutputStream stream = new ByteArrayOutputStream()-->Line_32 $$ stream.close()[ FD ]
Line_17 $$ ObjectInputStream in = new ObjectInputStream(byteIn)-->Line_35 $$ HibernateException deserializedException = (HibernateException) in.readObject()[ FD ]
Line_11 $$ ObjectOutput out = new ObjectOutputStream(stream)-->Line_30 $$ out.close()[ FD ]
Line_4 $$ EntityManager em = getOrCreateEntityManager()-->Line_5 $$ em.getTransaction().begin()[ FD ]
Line_10 $$ ByteArrayOutputStream stream = new ByteArrayOutputStream()-->Line_31 $$ byte[] serialized = stream.toByteArray()[ FD ]
Line_16 $$ ByteArrayInputStream byteIn = new ByteArrayInputStream(serialized)-->Line_37 $$ byteIn.close()[ FD ]
Line_10 $$ ByteArrayOutputStream stream = new ByteArrayOutputStream()-->Line_14 $$ byte[] serialized = stream.toByteArray()[ FD ]
Line_11 $$ ObjectOutput out = new ObjectOutputStream(stream)-->Line_13 $$ out.close()[ FD ]
Line_26 $$ Exception e = new HibernateException("Exception", new NullPointerException("NPE"))-->Line_39 $$ assertNotNull(e.getCause())[ FD ]
Line_18 $$ IllegalArgumentException deserializedException = (IllegalArgumentException) in.readObject()-->Line_21 $$ assertNull(deserializedException.getCause().getCause())[ FD ]
Line_4 $$ EntityManager em = getOrCreateEntityManager()-->Line_24 $$ em.getTransaction().rollback()[ FD ]
