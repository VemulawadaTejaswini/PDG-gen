Line_3 $$ LoadSplit test = getLoadSplit()-->Line_12 $$ assertEquals(test.getOutputBytes()[0], copy.getOutputBytes()[0])[ FD ]
Line_4 $$ ByteArrayOutputStream data = new ByteArrayOutputStream()-->Line_8 $$ copy.readFields(new DataInputStream(new ByteArrayInputStream(data.toByteArray())))[ FD ]
Line_7 $$ LoadSplit copy = new LoadSplit()-->Line_10 $$ assertEquals(test.getMapCount(), copy.getMapCount())[ FD ]
Line_3 $$ LoadSplit test = getLoadSplit()-->Line_9 $$ assertEquals(test.getId(), copy.getId())[ FD ]
Line_7 $$ LoadSplit copy = new LoadSplit()-->Line_16 $$ assertEquals(test.getMapResourceUsageMetrics().getCumulativeCpuUsage(), copy.getMapResourceUsageMetrics().getCumulativeCpuUsage())[ FD ]
Line_3 $$ LoadSplit test = getLoadSplit()-->Line_14 $$ assertEquals(test.getReduceBytes(0), copy.getReduceBytes(0))[ FD ]
Line_2 $$ public void testLoadSplit() throws Exception -->Line_8 $$ copy.readFields(new DataInputStream(new ByteArrayInputStream(data.toByteArray())))[ CD ]
Line_7 $$ LoadSplit copy = new LoadSplit()-->Line_17 $$ assertEquals(test.getReduceResourceUsageMetrics(0).getCumulativeCpuUsage(), copy.getReduceResourceUsageMetrics(0).getCumulativeCpuUsage())[ FD ]
Line_2 $$ public void testLoadSplit() throws Exception -->Line_3 $$ LoadSplit test = getLoadSplit()[ CD ]
Line_3 $$ LoadSplit test = getLoadSplit()-->Line_15 $$ assertEquals(test.getReduceRecords(0), copy.getReduceRecords(0))[ FD ]
Line_2 $$ public void testLoadSplit() throws Exception -->Line_7 $$ LoadSplit copy = new LoadSplit()[ CD ]
Line_3 $$ LoadSplit test = getLoadSplit()-->Line_6 $$ test.write(out)[ FD ]
Line_2 $$ public void testLoadSplit() throws Exception -->Line_10 $$ assertEquals(test.getMapCount(), copy.getMapCount())[ CD ]
Line_7 $$ LoadSplit copy = new LoadSplit()-->Line_12 $$ assertEquals(test.getOutputBytes()[0], copy.getOutputBytes()[0])[ FD ]
Line_2 $$ public void testLoadSplit() throws Exception -->Line_11 $$ assertEquals(test.getInputRecords(), copy.getInputRecords())[ CD ]
Line_2 $$ public void testLoadSplit() throws Exception -->Line_5 $$ DataOutputStream out = new DataOutputStream(data)[ CD ]
Line_2 $$ public void testLoadSplit() throws Exception -->Line_6 $$ test.write(out)[ CD ]
Line_3 $$ LoadSplit test = getLoadSplit()-->Line_10 $$ assertEquals(test.getMapCount(), copy.getMapCount())[ FD ]
Line_7 $$ LoadSplit copy = new LoadSplit()-->Line_13 $$ assertEquals(test.getOutputRecords()[0], copy.getOutputRecords()[0])[ FD ]
Line_2 $$ public void testLoadSplit() throws Exception -->Line_4 $$ ByteArrayOutputStream data = new ByteArrayOutputStream()[ CD ]
Line_2 $$ public void testLoadSplit() throws Exception -->Line_9 $$ assertEquals(test.getId(), copy.getId())[ CD ]
Line_2 $$ public void testLoadSplit() throws Exception -->Line_14 $$ assertEquals(test.getReduceBytes(0), copy.getReduceBytes(0))[ CD ]
Line_3 $$ LoadSplit test = getLoadSplit()-->Line_11 $$ assertEquals(test.getInputRecords(), copy.getInputRecords())[ FD ]
Line_7 $$ LoadSplit copy = new LoadSplit()-->Line_9 $$ assertEquals(test.getId(), copy.getId())[ FD ]
Line_7 $$ LoadSplit copy = new LoadSplit()-->Line_11 $$ assertEquals(test.getInputRecords(), copy.getInputRecords())[ FD ]
Line_2 $$ public void testLoadSplit() throws Exception -->Line_15 $$ assertEquals(test.getReduceRecords(0), copy.getReduceRecords(0))[ CD ]
Line_5 $$ DataOutputStream out = new DataOutputStream(data)-->Line_6 $$ test.write(out)[ FD ]
Line_2 $$ public void testLoadSplit() throws Exception -->Line_17 $$ assertEquals(test.getReduceResourceUsageMetrics(0).getCumulativeCpuUsage(), copy.getReduceResourceUsageMetrics(0).getCumulativeCpuUsage())[ CD ]
Line_7 $$ LoadSplit copy = new LoadSplit()-->Line_8 $$ copy.readFields(new DataInputStream(new ByteArrayInputStream(data.toByteArray())))[ FD ]
Line_3 $$ LoadSplit test = getLoadSplit()-->Line_17 $$ assertEquals(test.getReduceResourceUsageMetrics(0).getCumulativeCpuUsage(), copy.getReduceResourceUsageMetrics(0).getCumulativeCpuUsage())[ FD ]
Line_2 $$ public void testLoadSplit() throws Exception -->Line_16 $$ assertEquals(test.getMapResourceUsageMetrics().getCumulativeCpuUsage(), copy.getMapResourceUsageMetrics().getCumulativeCpuUsage())[ CD ]
Line_7 $$ LoadSplit copy = new LoadSplit()-->Line_14 $$ assertEquals(test.getReduceBytes(0), copy.getReduceBytes(0))[ FD ]
Line_7 $$ LoadSplit copy = new LoadSplit()-->Line_15 $$ assertEquals(test.getReduceRecords(0), copy.getReduceRecords(0))[ FD ]
Line_3 $$ LoadSplit test = getLoadSplit()-->Line_13 $$ assertEquals(test.getOutputRecords()[0], copy.getOutputRecords()[0])[ FD ]
Line_3 $$ LoadSplit test = getLoadSplit()-->Line_16 $$ assertEquals(test.getMapResourceUsageMetrics().getCumulativeCpuUsage(), copy.getMapResourceUsageMetrics().getCumulativeCpuUsage())[ FD ]
Line_2 $$ public void testLoadSplit() throws Exception -->Line_13 $$ assertEquals(test.getOutputRecords()[0], copy.getOutputRecords()[0])[ CD ]
Line_2 $$ public void testLoadSplit() throws Exception -->Line_12 $$ assertEquals(test.getOutputBytes()[0], copy.getOutputBytes()[0])[ CD ]
