Line_26 $$ int bytesRead = 0-->Line_37 $$ bytesRead += amountRead[ FD ]
Line_27 $$ while (true) -->Line_28 $$ int amountRead = inputStream.read(buffer)[ CD ]
Line_12 $$ if (BinaryStream.class.isInstance(inputStream) && Integer.MAX_VALUE > start) -->Line_16 $$ System.arraycopy(data, (int) start, result, 0, size)[ CD ]
Line_15 $$ byte[] result = new byte[size]-->Line_16 $$ System.arraycopy(data, (int) start, result, 0, size)[ FD ]
Line_25 $$ byte[] buffer = new byte[BUFFER_SIZE]-->Line_28 $$ int amountRead = inputStream.read(buffer)[ FD ]
Line_12 $$ if (BinaryStream.class.isInstance(inputStream) && Integer.MAX_VALUE > start) -->Line_13 $$ byte[] data = ((BinaryStream) inputStream).getBytes()[ CD ]
Line_27 $$ while (true) -->Line_32 $$ outputStream.write(buffer, 0, amountRead)[ CD ]
Line_37 $$ bytesRead += amountRead-->Line_38 $$ if (bytesRead >= length) [ FD ]
Line_28 $$ int amountRead = inputStream.read(buffer)-->Line_32 $$ outputStream.write(buffer, 0, amountRead)[ FD ]
Line_25 $$ byte[] buffer = new byte[BUFFER_SIZE]-->Line_32 $$ outputStream.write(buffer, 0, amountRead)[ FD ]
Line_28 $$ int amountRead = inputStream.read(buffer)-->Line_33 $$ if (amountRead < buffer.length) [ FD ]
Line_28 $$ int amountRead = inputStream.read(buffer)-->Line_37 $$ bytesRead += amountRead[ FD ]
Line_12 $$ if (BinaryStream.class.isInstance(inputStream) && Integer.MAX_VALUE > start) -->Line_15 $$ byte[] result = new byte[size][ CD ]
Line_27 $$ while (true) -->Line_37 $$ bytesRead += amountRead[ CD ]
Line_28 $$ int amountRead = inputStream.read(buffer)-->Line_29 $$ if (amountRead == -1) [ FD ]
Line_12 $$ if (BinaryStream.class.isInstance(inputStream) && Integer.MAX_VALUE > start) -->Line_14 $$ int size = Math.min(length, data.length)[ CD ]
Line_27 $$ while (true) -->Line_33 $$ if (amountRead < buffer.length) [ CD ]
Line_26 $$ int bytesRead = 0-->Line_38 $$ if (bytesRead >= length) [ FD ]
Line_27 $$ while (true) -->Line_38 $$ if (bytesRead >= length) [ CD ]
Line_19 $$ ByteArrayOutputStream outputStream = new ByteArrayOutputStream(length)-->Line_45 $$ return outputStream.toByteArray()[ FD ]
Line_21 $$ long skipped = inputStream.skip(start)-->Line_22 $$ if (skipped != start) [ FD ]
Line_19 $$ ByteArrayOutputStream outputStream = new ByteArrayOutputStream(length)-->Line_32 $$ outputStream.write(buffer, 0, amountRead)[ FD ]
Line_14 $$ int size = Math.min(length, data.length)-->Line_16 $$ System.arraycopy(data, (int) start, result, 0, size)[ FD ]
Line_13 $$ byte[] data = ((BinaryStream) inputStream).getBytes()-->Line_16 $$ System.arraycopy(data, (int) start, result, 0, size)[ FD ]
Line_27 $$ while (true) -->Line_29 $$ if (amountRead == -1) [ CD ]
Line_12 $$ if (BinaryStream.class.isInstance(inputStream) && Integer.MAX_VALUE > start) -->Line_17 $$ return result[ CD ]
