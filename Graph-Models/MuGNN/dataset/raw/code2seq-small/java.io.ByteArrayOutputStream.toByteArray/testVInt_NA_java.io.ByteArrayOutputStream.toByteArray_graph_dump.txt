Line_8 $$ for (long v : testValues) -->Line_16 $$ assertEquals(v, in.readVInt())[ FD ]
Line_7 $$ int expectedSize = 0-->Line_14 $$ assertEquals(expectedSize, generated.toByteArray().length)[ FD ]
Line_8 $$ for (long v : testValues) -->Line_10 $$ ndosp.writeVInt(v)[ FD ]
Line_8 $$ for (long v : testValues) -->Line_9 $$ expectedSize += VIntCoding.computeVIntSize(v)[ FD ]
Line_5 $$ long[] testValues = new long[] -->Line_6 $$ testValues = enrich(testValues)[ FD ]
Line_9 $$ expectedSize += VIntCoding.computeVIntSize(v)-->Line_14 $$ assertEquals(expectedSize, generated.toByteArray().length)[ FD ]
Line_7 $$ int expectedSize = 0-->Line_9 $$ expectedSize += VIntCoding.computeVIntSize(v)[ FD ]
Line_13 $$ DataInputBuffer in = new DataInputBuffer(generated.toByteArray())-->Line_16 $$ assertEquals(v, in.readVInt())[ FD ]
