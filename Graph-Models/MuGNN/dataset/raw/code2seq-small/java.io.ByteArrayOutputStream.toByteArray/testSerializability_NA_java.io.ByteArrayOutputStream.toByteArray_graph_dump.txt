Line_3 $$ HttpStatusCodeException ex1 = new HttpClientErrorException(HttpStatus.BAD_REQUEST, null, null, Charset.forName("US-ASCII"))-->Line_8 $$ assertThat(ex2.getResponseBodyAsString(), equalTo(ex1.getResponseBodyAsString()))[ FD ]
Line_2 $$ public void testSerializability() throws IOException, ClassNotFoundException -->Line_7 $$ HttpStatusCodeException ex2 = (HttpStatusCodeException) new ObjectInputStream(in).readObject()[ CD ]
Line_2 $$ public void testSerializability() throws IOException, ClassNotFoundException -->Line_3 $$ HttpStatusCodeException ex1 = new HttpClientErrorException(HttpStatus.BAD_REQUEST, null, null, Charset.forName("US-ASCII"))[ CD ]
Line_7 $$ HttpStatusCodeException ex2 = (HttpStatusCodeException) new ObjectInputStream(in).readObject()-->Line_8 $$ assertThat(ex2.getResponseBodyAsString(), equalTo(ex1.getResponseBodyAsString()))[ FD ]
Line_4 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_6 $$ ByteArrayInputStream in = new ByteArrayInputStream(out.toByteArray())[ FD ]
Line_3 $$ HttpStatusCodeException ex1 = new HttpClientErrorException(HttpStatus.BAD_REQUEST, null, null, Charset.forName("US-ASCII"))-->Line_5 $$ new ObjectOutputStream(out).writeObject(ex1)[ FD ]
Line_2 $$ public void testSerializability() throws IOException, ClassNotFoundException -->Line_6 $$ ByteArrayInputStream in = new ByteArrayInputStream(out.toByteArray())[ CD ]
Line_2 $$ public void testSerializability() throws IOException, ClassNotFoundException -->Line_8 $$ assertThat(ex2.getResponseBodyAsString(), equalTo(ex1.getResponseBodyAsString()))[ CD ]
Line_2 $$ public void testSerializability() throws IOException, ClassNotFoundException -->Line_4 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()[ CD ]
Line_2 $$ public void testSerializability() throws IOException, ClassNotFoundException -->Line_5 $$ new ObjectOutputStream(out).writeObject(ex1)[ CD ]
