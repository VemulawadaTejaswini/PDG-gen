Line_2 $$ private byte[] writeMapOutput(Configuration conf, Map<String, String> keysToValues) throws IOException -->Line_3 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()[ CD ]
Line_2 $$ private byte[] writeMapOutput(Configuration conf, Map<String, String> keysToValues) throws IOException -->Line_5 $$ IFile.Writer<Text, Text> writer = new IFile.Writer<Text, Text>(conf, fsdos, Text.class, Text.class, null, null)[ CD ]
Line_2 $$ private byte[] writeMapOutput(Configuration conf, Map<String, String> keysToValues) throws IOException -->Line_7 $$ String value = keysToValues.get(key)[ FD ]
Line_2 $$ private byte[] writeMapOutput(Configuration conf, Map<String, String> keysToValues) throws IOException -->Line_4 $$ FSDataOutputStream fsdos = new FSDataOutputStream(baos, null)[ CD ]
Line_6 $$ for (String key : keysToValues.keySet()) -->Line_7 $$ String value = keysToValues.get(key)[ FD ]
Line_2 $$ private byte[] writeMapOutput(Configuration conf, Map<String, String> keysToValues) throws IOException -->Line_11 $$ return baos.toByteArray()[ CD ]
Line_5 $$ IFile.Writer<Text, Text> writer = new IFile.Writer<Text, Text>(conf, fsdos, Text.class, Text.class, null, null)-->Line_10 $$ writer.close()[ FD ]
Line_3 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_11 $$ return baos.toByteArray()[ FD ]
Line_2 $$ private byte[] writeMapOutput(Configuration conf, Map<String, String> keysToValues) throws IOException -->Line_6 $$ for (String key : keysToValues.keySet()) [ FD ]
Line_2 $$ private byte[] writeMapOutput(Configuration conf, Map<String, String> keysToValues) throws IOException -->Line_10 $$ writer.close()[ CD ]
Line_5 $$ IFile.Writer<Text, Text> writer = new IFile.Writer<Text, Text>(conf, fsdos, Text.class, Text.class, null, null)-->Line_8 $$ writer.append(new Text(key), new Text(value))[ FD ]
