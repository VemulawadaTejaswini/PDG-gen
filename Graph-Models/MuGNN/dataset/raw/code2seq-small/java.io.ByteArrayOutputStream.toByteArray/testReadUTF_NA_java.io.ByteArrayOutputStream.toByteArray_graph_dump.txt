Line_2 $$ public void testReadUTF() throws Exception -->Line_11 $$ daos.writeUTF(BufferedDataOutputStreamTest.threeByte)[ CD ]
Line_2 $$ public void testReadUTF() throws Exception -->Line_15 $$ assertEquals(BufferedDataOutputStreamTest.twoByte, is.readUTF())[ CD ]
Line_2 $$ public void testReadUTF() throws Exception -->Line_8 $$ assertEquals(4, BufferedDataOutputStreamTest.fourByte.getBytes(Charsets.UTF_8).length)[ CD ]
Line_2 $$ public void testReadUTF() throws Exception -->Line_6 $$ assertEquals(2, BufferedDataOutputStreamTest.twoByte.getBytes(Charsets.UTF_8).length)[ CD ]
Line_2 $$ public void testReadUTF() throws Exception -->Line_14 $$ assertEquals(simple, is.readUTF())[ CD ]
Line_3 $$ final ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_13 $$ NIODataInputStream is = new NIODataInputStream(wrap(baos.toByteArray()), 4096)[ FD ]
Line_2 $$ public void testReadUTF() throws Exception -->Line_17 $$ assertEquals(BufferedDataOutputStreamTest.fourByte, is.readUTF())[ CD ]
Line_4 $$ DataOutputStream daos = new DataOutputStream(baos)-->Line_9 $$ daos.writeUTF(simple)[ FD ]
Line_2 $$ public void testReadUTF() throws Exception -->Line_4 $$ DataOutputStream daos = new DataOutputStream(baos)[ CD ]
Line_2 $$ public void testReadUTF() throws Exception -->Line_5 $$ String simple = "foobar42"[ CD ]
Line_5 $$ String simple = "foobar42"-->Line_14 $$ assertEquals(simple, is.readUTF())[ FD ]
Line_4 $$ DataOutputStream daos = new DataOutputStream(baos)-->Line_12 $$ daos.writeUTF(BufferedDataOutputStreamTest.fourByte)[ FD ]
Line_2 $$ public void testReadUTF() throws Exception -->Line_13 $$ NIODataInputStream is = new NIODataInputStream(wrap(baos.toByteArray()), 4096)[ CD ]
Line_4 $$ DataOutputStream daos = new DataOutputStream(baos)-->Line_11 $$ daos.writeUTF(BufferedDataOutputStreamTest.threeByte)[ FD ]
Line_13 $$ NIODataInputStream is = new NIODataInputStream(wrap(baos.toByteArray()), 4096)-->Line_17 $$ assertEquals(BufferedDataOutputStreamTest.fourByte, is.readUTF())[ FD ]
Line_5 $$ String simple = "foobar42"-->Line_9 $$ daos.writeUTF(simple)[ FD ]
Line_2 $$ public void testReadUTF() throws Exception -->Line_3 $$ final ByteArrayOutputStream baos = new ByteArrayOutputStream()[ CD ]
Line_2 $$ public void testReadUTF() throws Exception -->Line_16 $$ assertEquals(BufferedDataOutputStreamTest.threeByte, is.readUTF())[ CD ]
Line_13 $$ NIODataInputStream is = new NIODataInputStream(wrap(baos.toByteArray()), 4096)-->Line_16 $$ assertEquals(BufferedDataOutputStreamTest.threeByte, is.readUTF())[ FD ]
Line_2 $$ public void testReadUTF() throws Exception -->Line_7 $$ assertEquals(3, BufferedDataOutputStreamTest.threeByte.getBytes(Charsets.UTF_8).length)[ CD ]
Line_13 $$ NIODataInputStream is = new NIODataInputStream(wrap(baos.toByteArray()), 4096)-->Line_15 $$ assertEquals(BufferedDataOutputStreamTest.twoByte, is.readUTF())[ FD ]
Line_2 $$ public void testReadUTF() throws Exception -->Line_12 $$ daos.writeUTF(BufferedDataOutputStreamTest.fourByte)[ CD ]
Line_2 $$ public void testReadUTF() throws Exception -->Line_10 $$ daos.writeUTF(BufferedDataOutputStreamTest.twoByte)[ CD ]
Line_13 $$ NIODataInputStream is = new NIODataInputStream(wrap(baos.toByteArray()), 4096)-->Line_14 $$ assertEquals(simple, is.readUTF())[ FD ]
Line_2 $$ public void testReadUTF() throws Exception -->Line_9 $$ daos.writeUTF(simple)[ CD ]
Line_4 $$ DataOutputStream daos = new DataOutputStream(baos)-->Line_10 $$ daos.writeUTF(BufferedDataOutputStreamTest.twoByte)[ FD ]
