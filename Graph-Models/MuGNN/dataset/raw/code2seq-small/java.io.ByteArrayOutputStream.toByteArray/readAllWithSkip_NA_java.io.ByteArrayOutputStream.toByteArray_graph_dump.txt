Line_26 $$ skipped = skipUntilZero(fsdis2, toGo)-->Line_37 $$ assertEquals(remainder, skipped)[ FD ]
Line_22 $$ for (int i = 0; i <= times; i++) -->Line_23 $$ toGo = (i < times) ? buffer.length : remainder[ CD ]
Line_19 $$ long skipped-->Line_39 $$ assertEquals(0, skipped)[ FD ]
Line_21 $$ int toGo-->Line_23 $$ toGo = (i < times) ? buffer.length : remainder[ FD ]
Line_21 $$ int toGo-->Line_25 $$ fsdis1.readFully(buffer, 0, toGo)[ FD ]
Line_58 $$ if (close) -->Line_60 $$ fsdis2.close()[ CD ]
Line_12 $$ final ByteArrayOutputStream baos = new ByteArrayOutputStream(totalLength)-->Line_48 $$ baos.write(buffer, 0, toGo)[ FD ]
Line_17 $$ final int times = totalLength / buffer.length-->Line_22 $$ for (int i = 0; i <= times; i++) [ FD ]
Line_21 $$ int toGo-->Line_29 $$ skipped = skipUntilZero(fsdis1, toGo)[ FD ]
Line_26 $$ skipped = skipUntilZero(fsdis2, toGo)-->Line_32 $$ assertEquals(buffer.length, skipped)[ FD ]
Line_23 $$ toGo = (i < times) ? buffer.length : remainder-->Line_48 $$ baos.write(buffer, 0, toGo)[ FD ]
Line_24 $$ if (i % 2 == 0) -->Line_25 $$ fsdis1.readFully(buffer, 0, toGo)[ CD ]
Line_23 $$ toGo = (i < times) ? buffer.length : remainder-->Line_28 $$ fsdis2.readFully(buffer, 0, toGo)[ FD ]
Line_26 $$ skipped = skipUntilZero(fsdis2, toGo)-->Line_29 $$ skipped = skipUntilZero(fsdis1, toGo)[ FD ]
Line_22 $$ for (int i = 0; i <= times; i++) -->Line_31 $$ if (i < times) [ CD ]
Line_58 $$ if (close) -->Line_59 $$ fsdis1.close()[ CD ]
Line_20 $$ long expectedPosition-->Line_41 $$ expectedPosition = totalLength[ FD ]
Line_23 $$ toGo = (i < times) ? buffer.length : remainder-->Line_25 $$ fsdis1.readFully(buffer, 0, toGo)[ FD ]
Line_19 $$ long skipped-->Line_37 $$ assertEquals(remainder, skipped)[ FD ]
Line_20 $$ long expectedPosition-->Line_33 $$ expectedPosition = (i + 1) * buffer.length[ FD ]
Line_23 $$ toGo = (i < times) ? buffer.length : remainder-->Line_26 $$ skipped = skipUntilZero(fsdis2, toGo)[ FD ]
Line_31 $$ if (i < times) -->Line_33 $$ expectedPosition = (i + 1) * buffer.length[ CD ]
Line_24 $$ if (i % 2 == 0) -->Line_29 $$ skipped = skipUntilZero(fsdis1, toGo)[ CD ]
Line_22 $$ for (int i = 0; i <= times; i++) -->Line_45 $$ assertEquals(expectedPosition, fsdis2.getPos())[ CD ]
Line_33 $$ expectedPosition = (i + 1) * buffer.length-->Line_45 $$ assertEquals(expectedPosition, fsdis2.getPos())[ FD ]
Line_31 $$ if (i < times) -->Line_32 $$ assertEquals(buffer.length, skipped)[ CD ]
Line_17 $$ final int times = totalLength / buffer.length-->Line_31 $$ if (i < times) [ FD ]
Line_18 $$ final int remainder = totalLength % buffer.length-->Line_37 $$ assertEquals(remainder, skipped)[ FD ]
Line_23 $$ toGo = (i < times) ? buffer.length : remainder-->Line_29 $$ skipped = skipUntilZero(fsdis1, toGo)[ FD ]
Line_29 $$ skipped = skipUntilZero(fsdis1, toGo)-->Line_39 $$ assertEquals(0, skipped)[ FD ]
Line_33 $$ expectedPosition = (i + 1) * buffer.length-->Line_41 $$ expectedPosition = totalLength[ FD ]
Line_21 $$ int toGo-->Line_48 $$ baos.write(buffer, 0, toGo)[ FD ]
Line_19 $$ long skipped-->Line_29 $$ skipped = skipUntilZero(fsdis1, toGo)[ FD ]
Line_21 $$ int toGo-->Line_28 $$ fsdis2.readFully(buffer, 0, toGo)[ FD ]
Line_22 $$ for (int i = 0; i <= times; i++) -->Line_31 $$ if (i < times) [ FD ]
Line_19 $$ long skipped-->Line_26 $$ skipped = skipUntilZero(fsdis2, toGo)[ FD ]
Line_29 $$ skipped = skipUntilZero(fsdis1, toGo)-->Line_32 $$ assertEquals(buffer.length, skipped)[ FD ]
Line_12 $$ final ByteArrayOutputStream baos = new ByteArrayOutputStream(totalLength)-->Line_56 $$ return baos.toByteArray()[ FD ]
Line_24 $$ if (i % 2 == 0) -->Line_28 $$ fsdis2.readFully(buffer, 0, toGo)[ CD ]
Line_24 $$ if (i % 2 == 0) -->Line_26 $$ skipped = skipUntilZero(fsdis2, toGo)[ CD ]
Line_21 $$ int toGo-->Line_26 $$ skipped = skipUntilZero(fsdis2, toGo)[ FD ]
Line_31 $$ if (i < times) -->Line_41 $$ expectedPosition = totalLength[ CD ]
Line_22 $$ for (int i = 0; i <= times; i++) -->Line_24 $$ if (i % 2 == 0) [ CD ]
Line_20 $$ long expectedPosition-->Line_45 $$ assertEquals(expectedPosition, fsdis2.getPos())[ FD ]
Line_29 $$ skipped = skipUntilZero(fsdis1, toGo)-->Line_37 $$ assertEquals(remainder, skipped)[ FD ]
Line_41 $$ expectedPosition = totalLength-->Line_45 $$ assertEquals(expectedPosition, fsdis2.getPos())[ FD ]
Line_19 $$ long skipped-->Line_32 $$ assertEquals(buffer.length, skipped)[ FD ]
Line_26 $$ skipped = skipUntilZero(fsdis2, toGo)-->Line_39 $$ assertEquals(0, skipped)[ FD ]
