Line_2 $$ private static byte[] readAllWithReadFully(int totalLength, FSDataInputStream fsdis, boolean close) throws IOException -->Line_33 $$ assertEquals(totalLength, result.length)[ FD ]
Line_22 $$ position += remainder-->Line_26 $$ fsdis.readFully(position, buffer, 0, 1)[ FD ]
Line_2 $$ private static byte[] readAllWithReadFully(int totalLength, FSDataInputStream fsdis, boolean close) throws IOException -->Line_31 $$ assertEquals(totalLength, position)[ FD ]
Line_3 $$ final ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_23 $$ baos.write(buffer, 0, remainder)[ FD ]
Line_22 $$ position += remainder-->Line_31 $$ assertEquals(totalLength, position)[ FD ]
Line_19 $$ if (remainder > 0) -->Line_23 $$ baos.write(buffer, 0, remainder)[ CD ]
Line_2 $$ private static byte[] readAllWithReadFully(int totalLength, FSDataInputStream fsdis, boolean close) throws IOException -->Line_7 $$ final int remainder = totalLength % buffer.length[ CD ]
Line_2 $$ private static byte[] readAllWithReadFully(int totalLength, FSDataInputStream fsdis, boolean close) throws IOException -->Line_26 $$ fsdis.readFully(position, buffer, 0, 1)[ FD ]
Line_7 $$ final int remainder = totalLength % buffer.length-->Line_19 $$ if (remainder > 0) [ FD ]
Line_2 $$ private static byte[] readAllWithReadFully(int totalLength, FSDataInputStream fsdis, boolean close) throws IOException -->Line_37 $$ fsdis.close()[ FD ]
Line_2 $$ private static byte[] readAllWithReadFully(int totalLength, FSDataInputStream fsdis, boolean close) throws IOException -->Line_3 $$ final ByteArrayOutputStream baos = new ByteArrayOutputStream()[ CD ]
Line_7 $$ final int remainder = totalLength % buffer.length-->Line_22 $$ position += remainder[ FD ]
Line_2 $$ private static byte[] readAllWithReadFully(int totalLength, FSDataInputStream fsdis, boolean close) throws IOException -->Line_15 $$ fsdis.readFully(position, buffer)[ FD ]
Line_2 $$ private static byte[] readAllWithReadFully(int totalLength, FSDataInputStream fsdis, boolean close) throws IOException -->Line_6 $$ final int times = totalLength / buffer.length[ CD ]
Line_16 $$ position += buffer.length-->Line_26 $$ fsdis.readFully(position, buffer, 0, 1)[ FD ]
Line_3 $$ final ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_32 $$ final byte[] result = baos.toByteArray()[ FD ]
Line_19 $$ if (remainder > 0) -->Line_22 $$ position += remainder[ CD ]
Line_36 $$ if (close) -->Line_37 $$ fsdis.close()[ CD ]
Line_16 $$ position += buffer.length-->Line_31 $$ assertEquals(totalLength, position)[ FD ]
Line_16 $$ position += buffer.length-->Line_15 $$ fsdis.readFully(position, buffer)[ FD ]
Line_7 $$ final int remainder = totalLength % buffer.length-->Line_23 $$ baos.write(buffer, 0, remainder)[ FD ]
Line_16 $$ position += buffer.length-->Line_22 $$ position += remainder[ FD ]
Line_3 $$ final ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_17 $$ baos.write(buffer)[ FD ]
