Line_2 $$ public static int writeCompressedByteArray(DataOutput out, byte[] bytes) throws IOException -->Line_19 $$ out.writeInt(-1)[ FD ]
Line_3 $$ if (bytes != null) -->Line_17 $$ return ((bytes.length != 0) ? (100 * buffer.length) / bytes.length : 0)[ CD ]
Line_14 $$ int len = buffer.length-->Line_16 $$ out.write(buffer, 0, len)[ FD ]
Line_5 $$ GZIPOutputStream gzout = new GZIPOutputStream(bos)-->Line_7 $$ gzout.write(bytes, 0, bytes.length)[ FD ]
Line_5 $$ GZIPOutputStream gzout = new GZIPOutputStream(bos)-->Line_8 $$ gzout.close()[ FD ]
Line_3 $$ if (bytes != null) -->Line_20 $$ return -1[ CD ]
Line_2 $$ public static int writeCompressedByteArray(DataOutput out, byte[] bytes) throws IOException -->Line_3 $$ if (bytes != null) [ FD ]
Line_3 $$ if (bytes != null) -->Line_16 $$ out.write(buffer, 0, len)[ CD ]
Line_3 $$ if (bytes != null) -->Line_19 $$ out.writeInt(-1)[ CD ]
Line_3 $$ if (bytes != null) -->Line_4 $$ ByteArrayOutputStream bos = new ByteArrayOutputStream()[ CD ]
Line_5 $$ GZIPOutputStream gzout = new GZIPOutputStream(bos)-->Line_9 $$ gzout = null[ FD ]
Line_2 $$ public static int writeCompressedByteArray(DataOutput out, byte[] bytes) throws IOException -->Line_15 $$ out.writeInt(len)[ FD ]
Line_2 $$ public static int writeCompressedByteArray(DataOutput out, byte[] bytes) throws IOException -->Line_3 $$ if (bytes != null) [ CD ]
Line_14 $$ int len = buffer.length-->Line_15 $$ out.writeInt(len)[ FD ]
Line_5 $$ GZIPOutputStream gzout = new GZIPOutputStream(bos)-->Line_11 $$ IOUtils.closeStream(gzout)[ FD ]
Line_4 $$ ByteArrayOutputStream bos = new ByteArrayOutputStream()-->Line_13 $$ byte[] buffer = bos.toByteArray()[ FD ]
Line_3 $$ if (bytes != null) -->Line_5 $$ GZIPOutputStream gzout = new GZIPOutputStream(bos)[ CD ]
Line_2 $$ public static int writeCompressedByteArray(DataOutput out, byte[] bytes) throws IOException -->Line_16 $$ out.write(buffer, 0, len)[ FD ]
Line_2 $$ public static int writeCompressedByteArray(DataOutput out, byte[] bytes) throws IOException -->Line_7 $$ gzout.write(bytes, 0, bytes.length)[ FD ]
Line_3 $$ if (bytes != null) -->Line_13 $$ byte[] buffer = bos.toByteArray()[ CD ]
Line_9 $$ gzout = null-->Line_11 $$ IOUtils.closeStream(gzout)[ FD ]
Line_13 $$ byte[] buffer = bos.toByteArray()-->Line_16 $$ out.write(buffer, 0, len)[ FD ]
Line_3 $$ if (bytes != null) -->Line_14 $$ int len = buffer.length[ CD ]
Line_3 $$ if (bytes != null) -->Line_15 $$ out.writeInt(len)[ CD ]
