Line_32 $$ TypedBytesWritable value = new TypedBytesWritable()-->Line_35 $$ assertEquals(String.class, value.getValue().getClass())[ FD ]
Line_6 $$ FileSystem fs = cluster.getFileSystem()-->Line_28 $$ assertTrue(fs.exists(file))[ FD ]
Line_27 $$ Path file = new Path(root, "test.seq")-->Line_28 $$ assertTrue(fs.exists(file))[ FD ]
Line_29 $$ SequenceFile.Reader reader = new SequenceFile.Reader(fs, file, conf)-->Line_33 $$ while (reader.next(key, value)) [ FD ]
Line_20 $$ Path root = new Path("/typedbytestest")-->Line_21 $$ assertTrue(fs.mkdirs(root))[ FD ]
Line_6 $$ FileSystem fs = cluster.getFileSystem()-->Line_21 $$ assertTrue(fs.mkdirs(root))[ FD ]
Line_20 $$ Path root = new Path("/typedbytestest")-->Line_22 $$ assertTrue(fs.exists(root))[ FD ]
Line_33 $$ while (reader.next(key, value)) -->Line_34 $$ assertEquals(Long.class, key.getValue().getClass())[ CD ]
Line_6 $$ FileSystem fs = cluster.getFileSystem()-->Line_22 $$ assertTrue(fs.exists(root))[ FD ]
Line_30 $$ int counter = 0-->Line_37 $$ counter++[ FD ]
Line_23 $$ String[] args = new String[1]-->Line_25 $$ int ret = loadtb.run(args)[ FD ]
Line_5 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()-->Line_6 $$ FileSystem fs = cluster.getFileSystem()[ FD ]
Line_6 $$ FileSystem fs = cluster.getFileSystem()-->Line_42 $$ fs.close()[ FD ]
Line_25 $$ int ret = loadtb.run(args)-->Line_26 $$ assertEquals("Return value != 0.", 0, ret)[ FD ]
Line_31 $$ TypedBytesWritable key = new TypedBytesWritable()-->Line_34 $$ assertEquals(Long.class, key.getValue().getClass())[ FD ]
Line_33 $$ while (reader.next(key, value)) -->Line_35 $$ assertEquals(String.class, value.getValue().getClass())[ CD ]
Line_15 $$ InputStream isBackup = System.in-->Line_45 $$ System.setIn(isBackup)[ FD ]
Line_33 $$ while (reader.next(key, value)) -->Line_36 $$ assertTrue("Invalid record.", Integer.parseInt(value.toString()) % 10 == 0)[ CD ]
Line_33 $$ while (reader.next(key, value)) -->Line_37 $$ counter++[ CD ]
Line_5 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()-->Line_46 $$ cluster.shutdown()[ FD ]
Line_31 $$ TypedBytesWritable key = new TypedBytesWritable()-->Line_33 $$ while (reader.next(key, value)) [ FD ]
Line_30 $$ int counter = 0-->Line_39 $$ assertEquals("Wrong number of records.", 100, counter)[ FD ]
Line_32 $$ TypedBytesWritable value = new TypedBytesWritable()-->Line_33 $$ while (reader.next(key, value)) [ FD ]
Line_18 $$ LoadTypedBytes loadtb = new LoadTypedBytes(conf)-->Line_25 $$ int ret = loadtb.run(args)[ FD ]
Line_16 $$ ByteArrayInputStream in = new ByteArrayInputStream(out.toByteArray())-->Line_17 $$ System.setIn(in)[ FD ]
Line_32 $$ TypedBytesWritable value = new TypedBytesWritable()-->Line_36 $$ assertTrue("Invalid record.", Integer.parseInt(value.toString()) % 10 == 0)[ FD ]
Line_7 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_16 $$ ByteArrayInputStream in = new ByteArrayInputStream(out.toByteArray())[ FD ]
