Line_4 $$ ZipEntry entry = new ZipEntry(entryPath)-->Line_11 $$ myOut.putNextEntry(entry)[ FD ]
Line_2 $$ public void zipBytes(String entryPath, ByteArrayOutputStream byteOut) throws IOException -->Line_12 $$ byteOut.writeTo(myOut)[ FD ]
Line_4 $$ ZipEntry entry = new ZipEntry(entryPath)-->Line_9 $$ entry.setCrc(crc.getValue())[ FD ]
Line_2 $$ public void zipBytes(String entryPath, ByteArrayOutputStream byteOut) throws IOException -->Line_13 $$ myOut.closeEntry()[ CD ]
Line_2 $$ public void zipBytes(String entryPath, ByteArrayOutputStream byteOut) throws IOException -->Line_6 $$ entry.setSize(byteOut.size())[ FD ]
Line_7 $$ CRC32 crc = new CRC32()-->Line_8 $$ crc.update(byteOut.toByteArray())[ FD ]
Line_5 $$ if (!isCompressed) -->Line_6 $$ entry.setSize(byteOut.size())[ CD ]
Line_5 $$ if (!isCompressed) -->Line_8 $$ crc.update(byteOut.toByteArray())[ CD ]
Line_2 $$ public void zipBytes(String entryPath, ByteArrayOutputStream byteOut) throws IOException -->Line_12 $$ byteOut.writeTo(myOut)[ CD ]
Line_2 $$ public void zipBytes(String entryPath, ByteArrayOutputStream byteOut) throws IOException -->Line_3 $$ addDirs(entryPath, false)[ FD ]
Line_5 $$ if (!isCompressed) -->Line_9 $$ entry.setCrc(crc.getValue())[ CD ]
Line_2 $$ public void zipBytes(String entryPath, ByteArrayOutputStream byteOut) throws IOException -->Line_3 $$ addDirs(entryPath, false)[ CD ]
Line_7 $$ CRC32 crc = new CRC32()-->Line_9 $$ entry.setCrc(crc.getValue())[ FD ]
Line_2 $$ public void zipBytes(String entryPath, ByteArrayOutputStream byteOut) throws IOException -->Line_11 $$ myOut.putNextEntry(entry)[ CD ]
Line_4 $$ ZipEntry entry = new ZipEntry(entryPath)-->Line_6 $$ entry.setSize(byteOut.size())[ FD ]
Line_5 $$ if (!isCompressed) -->Line_7 $$ CRC32 crc = new CRC32()[ CD ]
Line_2 $$ public void zipBytes(String entryPath, ByteArrayOutputStream byteOut) throws IOException -->Line_8 $$ crc.update(byteOut.toByteArray())[ FD ]
Line_2 $$ public void zipBytes(String entryPath, ByteArrayOutputStream byteOut) throws IOException -->Line_5 $$ if (!isCompressed) [ CD ]
Line_2 $$ public void zipBytes(String entryPath, ByteArrayOutputStream byteOut) throws IOException -->Line_4 $$ ZipEntry entry = new ZipEntry(entryPath)[ CD ]
