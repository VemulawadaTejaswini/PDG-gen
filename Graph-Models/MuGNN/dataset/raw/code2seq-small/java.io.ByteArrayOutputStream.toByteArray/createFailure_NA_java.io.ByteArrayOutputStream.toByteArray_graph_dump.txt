Line_6 $$ final ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_8 $$ builder.setStacktrace(new String(baos.toByteArray()))[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Failure createFailure(String description, @Nullable Throwable ex) -->Line_4 $$ builder.setDescription(description)[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Failure createFailure(String description, @Nullable Throwable ex) -->Line_3 $$ final JavacRemoteProto.Message.Failure.Builder builder = JavacRemoteProto.Message.Failure.newBuilder()[ CD ]
Line_3 $$ final JavacRemoteProto.Message.Failure.Builder builder = JavacRemoteProto.Message.Failure.newBuilder()-->Line_8 $$ builder.setStacktrace(new String(baos.toByteArray()))[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Failure createFailure(String description, @Nullable Throwable ex) -->Line_5 $$ if (ex != null) [ CD ]
Line_2 $$ public static JavacRemoteProto.Message.Failure createFailure(String description, @Nullable Throwable ex) -->Line_5 $$ if (ex != null) [ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Failure createFailure(String description, @Nullable Throwable ex) -->Line_7 $$ ex.printStackTrace(new PrintStream(baos))[ FD ]
Line_5 $$ if (ex != null) -->Line_6 $$ final ByteArrayOutputStream baos = new ByteArrayOutputStream()[ CD ]
Line_2 $$ public static JavacRemoteProto.Message.Failure createFailure(String description, @Nullable Throwable ex) -->Line_10 $$ return builder.build()[ CD ]
Line_5 $$ if (ex != null) -->Line_8 $$ builder.setStacktrace(new String(baos.toByteArray()))[ CD ]
Line_3 $$ final JavacRemoteProto.Message.Failure.Builder builder = JavacRemoteProto.Message.Failure.newBuilder()-->Line_10 $$ return builder.build()[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Failure createFailure(String description, @Nullable Throwable ex) -->Line_4 $$ builder.setDescription(description)[ CD ]
Line_3 $$ final JavacRemoteProto.Message.Failure.Builder builder = JavacRemoteProto.Message.Failure.newBuilder()-->Line_4 $$ builder.setDescription(description)[ FD ]
Line_5 $$ if (ex != null) -->Line_7 $$ ex.printStackTrace(new PrintStream(baos))[ CD ]
