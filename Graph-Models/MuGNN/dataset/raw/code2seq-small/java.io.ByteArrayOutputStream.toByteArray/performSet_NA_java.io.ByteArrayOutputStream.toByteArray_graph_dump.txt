Line_4 $$ Properties p = (Properties) System.getProperties().clone()-->Line_5 $$ assertTrue("The System properties must not be empty", p.size() != 0)[ FD ]
Line_19 $$ String value = new String(buffer.toByteArray())-->Line_21 $$ wrapper.setPropertyValue("properties", value)[ FD ]
Line_12 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream()-->Line_19 $$ String value = new String(buffer.toByteArray())[ FD ]
Line_2 $$ private static void performSet() -->Line_12 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream()[ CD ]
Line_2 $$ private static void performSet() -->Line_4 $$ Properties p = (Properties) System.getProperties().clone()[ CD ]
Line_2 $$ private static void performSet() -->Line_21 $$ wrapper.setPropertyValue("properties", value)[ CD ]
Line_8 $$ if (Math.random() > 0.9) -->Line_9 $$ i.remove()[ CD ]
Line_3 $$ TestBean bean = new TestBean()-->Line_22 $$ assertEquals(p, bean.getProperties())[ FD ]
Line_6 $$ for (Iterator<?> i = p.entrySet().iterator(); i.hasNext(); ) -->Line_9 $$ i.remove()[ FD ]
Line_4 $$ Properties p = (Properties) System.getProperties().clone()-->Line_22 $$ assertEquals(p, bean.getProperties())[ FD ]
Line_4 $$ Properties p = (Properties) System.getProperties().clone()-->Line_6 $$ for (Iterator<?> i = p.entrySet().iterator(); i.hasNext(); ) [ FD ]
Line_2 $$ private static void performSet() -->Line_5 $$ assertTrue("The System properties must not be empty", p.size() != 0)[ CD ]
Line_2 $$ private static void performSet() -->Line_3 $$ TestBean bean = new TestBean()[ CD ]
Line_20 $$ BeanWrapperImpl wrapper = new BeanWrapperImpl(bean)-->Line_21 $$ wrapper.setPropertyValue("properties", value)[ FD ]
Line_2 $$ private static void performSet() -->Line_6 $$ for (Iterator<?> i = p.entrySet().iterator(); i.hasNext(); ) [ CD ]
Line_2 $$ private static void performSet() -->Line_19 $$ String value = new String(buffer.toByteArray())[ CD ]
Line_12 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream()-->Line_14 $$ p.store(buffer, null)[ FD ]
Line_6 $$ for (Iterator<?> i = p.entrySet().iterator(); i.hasNext(); ) -->Line_7 $$ i.next()[ CD ]
Line_6 $$ for (Iterator<?> i = p.entrySet().iterator(); i.hasNext(); ) -->Line_7 $$ i.next()[ FD ]
Line_4 $$ Properties p = (Properties) System.getProperties().clone()-->Line_14 $$ p.store(buffer, null)[ FD ]
Line_2 $$ private static void performSet() -->Line_22 $$ assertEquals(p, bean.getProperties())[ CD ]
Line_2 $$ private static void performSet() -->Line_20 $$ BeanWrapperImpl wrapper = new BeanWrapperImpl(bean)[ CD ]
Line_6 $$ for (Iterator<?> i = p.entrySet().iterator(); i.hasNext(); ) -->Line_8 $$ if (Math.random() > 0.9) [ CD ]
