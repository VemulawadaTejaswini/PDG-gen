Line_7 $$ FileSystem mFs = mock(FileSystem.class, RETURNS_DEEP_STUBS)-->Line_40 $$ verify(mFs).delete(eq(pTmp), eq(false))[ FD ]
Line_24 $$ doAnswer(new Answer<Void>() -->Line_28 $$ return null[ CD ]
Line_8 $$ MapOutputFile mof = mock(MapOutputFile.class)-->Line_9 $$ when(mof.getInputFileForWrite(any(TaskID.class), anyLong())).thenReturn(p)[ FD ]
Line_6 $$ Path pTmp = OnDiskMapOutput.getTempPath(p, FETCHER)-->Line_40 $$ verify(mFs).delete(eq(pTmp), eq(false))[ FD ]
Line_4 $$ final int FETCHER = 7-->Line_6 $$ Path pTmp = OnDiskMapOutput.getTempPath(p, FETCHER)[ FD ]
Line_7 $$ FileSystem mFs = mock(FileSystem.class, RETURNS_DEEP_STUBS)-->Line_39 $$ verify(mFs).create(eq(pTmp))[ FD ]
Line_20 $$ final StuckInputStream in = new StuckInputStream(new ByteArrayInputStream(bout.toByteArray()))-->Line_38 $$ assertTrue(in.wasClosedProperly())[ FD ]
Line_18 $$ ByteArrayOutputStream bout = new ByteArrayOutputStream()-->Line_20 $$ final StuckInputStream in = new StuckInputStream(new ByteArrayInputStream(bout.toByteArray()))[ FD ]
Line_10 $$ OnDiskMapOutput<Text, Text> odmo = spy(new OnDiskMapOutput<Text, Text>(map1ID, id, mm, 100L, job, mof, FETCHER, true, mFs, p))-->Line_41 $$ verify(odmo).abort()[ FD ]
Line_20 $$ final StuckInputStream in = new StuckInputStream(new ByteArrayInputStream(bout.toByteArray()))-->Line_21 $$ when(connection.getInputStream()).thenReturn(in)[ FD ]
Line_6 $$ Path pTmp = OnDiskMapOutput.getTempPath(p, FETCHER)-->Line_39 $$ verify(mFs).create(eq(pTmp))[ FD ]
Line_5 $$ Path p = new Path("file:///tmp/foo")-->Line_6 $$ Path pTmp = OnDiskMapOutput.getTempPath(p, FETCHER)[ FD ]
Line_17 $$ ShuffleHeader header = new ShuffleHeader(map1ID.toString(), 10, 10, 1)-->Line_19 $$ header.write(new DataOutputStream(bout))[ FD ]
Line_24 $$ doAnswer(new Answer<Void>() -->Line_27 $$ in.close()[ CD ]
Line_20 $$ final StuckInputStream in = new StuckInputStream(new ByteArrayInputStream(bout.toByteArray()))-->Line_27 $$ in.close()[ FD ]
Line_14 $$ String replyHash = SecureShuffleUtils.generateHash(encHash.getBytes(), key)-->Line_16 $$ when(connection.getHeaderField(SecureShuffleUtils.HTTP_HEADER_REPLY_URL_HASH)).thenReturn(replyHash)[ FD ]
Line_5 $$ Path p = new Path("file:///tmp/foo")-->Line_9 $$ when(mof.getInputFileForWrite(any(TaskID.class), anyLong())).thenReturn(p)[ FD ]
Line_10 $$ OnDiskMapOutput<Text, Text> odmo = spy(new OnDiskMapOutput<Text, Text>(map1ID, id, mm, 100L, job, mof, FETCHER, true, mFs, p))-->Line_11 $$ when(mm.reserve(any(TaskAttemptID.class), anyLong(), anyInt())).thenReturn(odmo)[ FD ]
