Line_2 $$ public void testJobProfile() throws IOException -->Line_9 $$ profile2.readFields(new DataInputStream(new ByteArrayInputStream(out.toByteArray())))[ CD ]
Line_3 $$ JobProfile profile = new JobProfile("user", "job_001_03", "jobFile", "uri", "name")-->Line_5 $$ assertEquals("default", profile.getQueueName())[ FD ]
Line_2 $$ public void testJobProfile() throws IOException -->Line_12 $$ assertEquals(profile2.queueName, profile.queueName)[ CD ]
Line_2 $$ public void testJobProfile() throws IOException -->Line_7 $$ profile.write(new DataOutputStream(out))[ CD ]
Line_2 $$ public void testJobProfile() throws IOException -->Line_10 $$ assertEquals(profile2.name, profile.name)[ CD ]
Line_2 $$ public void testJobProfile() throws IOException -->Line_6 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()[ CD ]
Line_3 $$ JobProfile profile = new JobProfile("user", "job_001_03", "jobFile", "uri", "name")-->Line_7 $$ profile.write(new DataOutputStream(out))[ FD ]
Line_6 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_9 $$ profile2.readFields(new DataInputStream(new ByteArrayInputStream(out.toByteArray())))[ FD ]
Line_2 $$ public void testJobProfile() throws IOException -->Line_8 $$ JobProfile profile2 = new JobProfile()[ CD ]
Line_8 $$ JobProfile profile2 = new JobProfile()-->Line_9 $$ profile2.readFields(new DataInputStream(new ByteArrayInputStream(out.toByteArray())))[ FD ]
Line_2 $$ public void testJobProfile() throws IOException -->Line_4 $$ assertEquals("job_001_0003", profile.getJobId())[ CD ]
Line_2 $$ public void testJobProfile() throws IOException -->Line_3 $$ JobProfile profile = new JobProfile("user", "job_001_03", "jobFile", "uri", "name")[ CD ]
Line_2 $$ public void testJobProfile() throws IOException -->Line_5 $$ assertEquals("default", profile.getQueueName())[ CD ]
Line_2 $$ public void testJobProfile() throws IOException -->Line_13 $$ assertEquals(profile2.url, profile.url)[ CD ]
Line_2 $$ public void testJobProfile() throws IOException -->Line_11 $$ assertEquals(profile2.jobFile, profile.jobFile)[ CD ]
Line_3 $$ JobProfile profile = new JobProfile("user", "job_001_03", "jobFile", "uri", "name")-->Line_4 $$ assertEquals("job_001_0003", profile.getJobId())[ FD ]
Line_2 $$ public void testJobProfile() throws IOException -->Line_14 $$ assertEquals(profile2.user, profile.user)[ CD ]
