Line_4 $$ try (XContentGenerator generator = xcontentType().xContent().createGenerator(os)) -->Line_6 $$ generator.writeEndObject()[ FD ]
Line_2 $$ public void testBasics() throws IOException -->Line_3 $$ ByteArrayOutputStream os = new ByteArrayOutputStream()[ CD ]
Line_4 $$ try (XContentGenerator generator = xcontentType().xContent().createGenerator(os)) -->Line_5 $$ generator.writeStartObject()[ FD ]
Line_2 $$ public void testBasics() throws IOException -->Line_8 $$ byte[] data = os.toByteArray()[ CD ]
Line_3 $$ ByteArrayOutputStream os = new ByteArrayOutputStream()-->Line_4 $$ try (XContentGenerator generator = xcontentType().xContent().createGenerator(os)) [ FD ]
Line_2 $$ public void testBasics() throws IOException -->Line_9 $$ assertEquals(xcontentType(), XContentFactory.xContentType(data))[ CD ]
Line_3 $$ ByteArrayOutputStream os = new ByteArrayOutputStream()-->Line_8 $$ byte[] data = os.toByteArray()[ FD ]
Line_8 $$ byte[] data = os.toByteArray()-->Line_9 $$ assertEquals(xcontentType(), XContentFactory.xContentType(data))[ FD ]
