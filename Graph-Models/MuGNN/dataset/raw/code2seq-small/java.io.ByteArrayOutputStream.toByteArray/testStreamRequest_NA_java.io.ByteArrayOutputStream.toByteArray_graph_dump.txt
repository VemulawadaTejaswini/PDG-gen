Line_3 $$ for (int i = 0; i < 10; i++) -->Line_8 $$ request.positions(random().nextBoolean())[ CD ]
Line_3 $$ for (int i = 0; i < 10; i++) -->Line_4 $$ TermVectorsRequest request = new TermVectorsRequest("index", "type", "id")[ CD ]
Line_3 $$ for (int i = 0; i < 10; i++) -->Line_16 $$ OutputStreamStreamOutput out = new OutputStreamStreamOutput(outBuffer)[ CD ]
Line_3 $$ for (int i = 0; i < 10; i++) -->Line_23 $$ assertThat(request.offsets(), equalTo(req2.offsets()))[ CD ]
Line_16 $$ OutputStreamStreamOutput out = new OutputStreamStreamOutput(outBuffer)-->Line_17 $$ request.writeTo(out)[ FD ]
Line_4 $$ TermVectorsRequest request = new TermVectorsRequest("index", "type", "id")-->Line_11 $$ request.parent(parent)[ FD ]
Line_21 $$ TermVectorsRequest req2 = new TermVectorsRequest(null, null, null)-->Line_25 $$ assertThat(request.payloads(), equalTo(req2.payloads()))[ FD ]
Line_21 $$ TermVectorsRequest req2 = new TermVectorsRequest(null, null, null)-->Line_24 $$ assertThat(request.fieldStatistics(), equalTo(req2.fieldStatistics()))[ FD ]
Line_4 $$ TermVectorsRequest request = new TermVectorsRequest("index", "type", "id")-->Line_9 $$ request.termStatistics(random().nextBoolean())[ FD ]
Line_3 $$ for (int i = 0; i < 10; i++) -->Line_5 $$ request.offsets(random().nextBoolean())[ CD ]
Line_3 $$ for (int i = 0; i < 10; i++) -->Line_13 $$ request.preference(pref)[ CD ]
Line_4 $$ TermVectorsRequest request = new TermVectorsRequest("index", "type", "id")-->Line_23 $$ assertThat(request.offsets(), equalTo(req2.offsets()))[ FD ]
Line_3 $$ for (int i = 0; i < 10; i++) -->Line_22 $$ req2.readFrom(esBuffer)[ CD ]
Line_3 $$ for (int i = 0; i < 10; i++) -->Line_24 $$ assertThat(request.fieldStatistics(), equalTo(req2.fieldStatistics()))[ CD ]
Line_3 $$ for (int i = 0; i < 10; i++) -->Line_29 $$ assertThat(request.routing(), equalTo(null))[ CD ]
Line_3 $$ for (int i = 0; i < 10; i++) -->Line_6 $$ request.fieldStatistics(random().nextBoolean())[ CD ]
Line_3 $$ for (int i = 0; i < 10; i++) -->Line_9 $$ request.termStatistics(random().nextBoolean())[ CD ]
Line_4 $$ TermVectorsRequest request = new TermVectorsRequest("index", "type", "id")-->Line_27 $$ assertThat(request.termStatistics(), equalTo(req2.termStatistics()))[ FD ]
Line_3 $$ for (int i = 0; i < 10; i++) -->Line_7 $$ request.payloads(random().nextBoolean())[ CD ]
Line_4 $$ TermVectorsRequest request = new TermVectorsRequest("index", "type", "id")-->Line_13 $$ request.preference(pref)[ FD ]
Line_21 $$ TermVectorsRequest req2 = new TermVectorsRequest(null, null, null)-->Line_23 $$ assertThat(request.offsets(), equalTo(req2.offsets()))[ FD ]
Line_4 $$ TermVectorsRequest request = new TermVectorsRequest("index", "type", "id")-->Line_24 $$ assertThat(request.fieldStatistics(), equalTo(req2.fieldStatistics()))[ FD ]
Line_3 $$ for (int i = 0; i < 10; i++) -->Line_25 $$ assertThat(request.payloads(), equalTo(req2.payloads()))[ CD ]
Line_2 $$ public void testStreamRequest() throws IOException -->Line_3 $$ for (int i = 0; i < 10; i++) [ CD ]
Line_3 $$ for (int i = 0; i < 10; i++) -->Line_11 $$ request.parent(parent)[ CD ]
Line_3 $$ for (int i = 0; i < 10; i++) -->Line_27 $$ assertThat(request.termStatistics(), equalTo(req2.termStatistics()))[ CD ]
Line_4 $$ TermVectorsRequest request = new TermVectorsRequest("index", "type", "id")-->Line_28 $$ assertThat(request.preference(), equalTo(pref))[ FD ]
Line_3 $$ for (int i = 0; i < 10; i++) -->Line_28 $$ assertThat(request.preference(), equalTo(pref))[ CD ]
Line_21 $$ TermVectorsRequest req2 = new TermVectorsRequest(null, null, null)-->Line_27 $$ assertThat(request.termStatistics(), equalTo(req2.termStatistics()))[ FD ]
Line_4 $$ TermVectorsRequest request = new TermVectorsRequest("index", "type", "id")-->Line_25 $$ assertThat(request.payloads(), equalTo(req2.payloads()))[ FD ]
Line_3 $$ for (int i = 0; i < 10; i++) -->Line_26 $$ assertThat(request.positions(), equalTo(req2.positions()))[ CD ]
Line_4 $$ TermVectorsRequest request = new TermVectorsRequest("index", "type", "id")-->Line_29 $$ assertThat(request.routing(), equalTo(null))[ FD ]
Line_4 $$ TermVectorsRequest request = new TermVectorsRequest("index", "type", "id")-->Line_17 $$ request.writeTo(out)[ FD ]
Line_4 $$ TermVectorsRequest request = new TermVectorsRequest("index", "type", "id")-->Line_26 $$ assertThat(request.positions(), equalTo(req2.positions()))[ FD ]
Line_21 $$ TermVectorsRequest req2 = new TermVectorsRequest(null, null, null)-->Line_22 $$ req2.readFrom(esBuffer)[ FD ]
Line_3 $$ for (int i = 0; i < 10; i++) -->Line_10 $$ String parent = random().nextBoolean() ? "someParent" : null[ CD ]
Line_4 $$ TermVectorsRequest request = new TermVectorsRequest("index", "type", "id")-->Line_7 $$ request.payloads(random().nextBoolean())[ FD ]
Line_4 $$ TermVectorsRequest request = new TermVectorsRequest("index", "type", "id")-->Line_6 $$ request.fieldStatistics(random().nextBoolean())[ FD ]
Line_10 $$ String parent = random().nextBoolean() ? "someParent" : null-->Line_11 $$ request.parent(parent)[ FD ]
Line_3 $$ for (int i = 0; i < 10; i++) -->Line_17 $$ request.writeTo(out)[ CD ]
Line_3 $$ for (int i = 0; i < 10; i++) -->Line_12 $$ String pref = random().nextBoolean() ? "somePreference" : null[ CD ]
Line_4 $$ TermVectorsRequest request = new TermVectorsRequest("index", "type", "id")-->Line_5 $$ request.offsets(random().nextBoolean())[ FD ]
Line_12 $$ String pref = random().nextBoolean() ? "somePreference" : null-->Line_13 $$ request.preference(pref)[ FD ]
Line_4 $$ TermVectorsRequest request = new TermVectorsRequest("index", "type", "id")-->Line_8 $$ request.positions(random().nextBoolean())[ FD ]
Line_3 $$ for (int i = 0; i < 10; i++) -->Line_20 $$ InputStreamStreamInput esBuffer = new InputStreamStreamInput(esInBuffer)[ CD ]
Line_20 $$ InputStreamStreamInput esBuffer = new InputStreamStreamInput(esInBuffer)-->Line_22 $$ req2.readFrom(esBuffer)[ FD ]
Line_12 $$ String pref = random().nextBoolean() ? "somePreference" : null-->Line_28 $$ assertThat(request.preference(), equalTo(pref))[ FD ]
Line_21 $$ TermVectorsRequest req2 = new TermVectorsRequest(null, null, null)-->Line_26 $$ assertThat(request.positions(), equalTo(req2.positions()))[ FD ]
Line_3 $$ for (int i = 0; i < 10; i++) -->Line_21 $$ TermVectorsRequest req2 = new TermVectorsRequest(null, null, null)[ CD ]
