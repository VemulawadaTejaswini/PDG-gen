Line_2 $$ public void testGridmixSplit() throws Exception -->Line_14 $$ GridmixSplit test = new GridmixSplit(cfSplit, 2, 3, 4L, 5L, 6L, 7L, reduceBytes, reduceRecords, reduceOutputBytes, reduceOutputRecords)[ CD ]
Line_18 $$ GridmixSplit copy = new GridmixSplit()-->Line_22 $$ assertEquals(test.getInputRecords(), copy.getInputRecords())[ FD ]
Line_14 $$ GridmixSplit test = new GridmixSplit(cfSplit, 2, 3, 4L, 5L, 6L, 7L, reduceBytes, reduceRecords, reduceOutputBytes, reduceOutputRecords)-->Line_23 $$ assertEquals(test.getOutputBytes()[0], copy.getOutputBytes()[0])[ FD ]
Line_2 $$ public void testGridmixSplit() throws Exception -->Line_3 $$ Path[] files = [ CD ]
Line_2 $$ public void testGridmixSplit() throws Exception -->Line_5 $$ long[] lengths = [ CD ]
Line_8 $$ ResourceUsageMetrics metrics = new ResourceUsageMetrics()-->Line_9 $$ metrics.setCumulativeCpuUsage(200)[ FD ]
Line_2 $$ public void testGridmixSplit() throws Exception -->Line_19 $$ copy.readFields(new DataInputStream(new ByteArrayInputStream(data.toByteArray())))[ CD ]
Line_14 $$ GridmixSplit test = new GridmixSplit(cfSplit, 2, 3, 4L, 5L, 6L, 7L, reduceBytes, reduceRecords, reduceOutputBytes, reduceOutputRecords)-->Line_22 $$ assertEquals(test.getInputRecords(), copy.getInputRecords())[ FD ]
Line_14 $$ GridmixSplit test = new GridmixSplit(cfSplit, 2, 3, 4L, 5L, 6L, 7L, reduceBytes, reduceRecords, reduceOutputBytes, reduceOutputRecords)-->Line_26 $$ assertEquals(test.getReduceRecords(0), copy.getReduceRecords(0))[ FD ]
Line_2 $$ public void testGridmixSplit() throws Exception -->Line_12 $$ long[] reduceOutputBytes = [ CD ]
Line_2 $$ public void testGridmixSplit() throws Exception -->Line_20 $$ assertEquals(test.getId(), copy.getId())[ CD ]
Line_2 $$ public void testGridmixSplit() throws Exception -->Line_26 $$ assertEquals(test.getReduceRecords(0), copy.getReduceRecords(0))[ CD ]
Line_2 $$ public void testGridmixSplit() throws Exception -->Line_16 $$ DataOutputStream out = new DataOutputStream(data)[ CD ]
Line_14 $$ GridmixSplit test = new GridmixSplit(cfSplit, 2, 3, 4L, 5L, 6L, 7L, reduceBytes, reduceRecords, reduceOutputBytes, reduceOutputRecords)-->Line_21 $$ assertEquals(test.getMapCount(), copy.getMapCount())[ FD ]
Line_14 $$ GridmixSplit test = new GridmixSplit(cfSplit, 2, 3, 4L, 5L, 6L, 7L, reduceBytes, reduceRecords, reduceOutputBytes, reduceOutputRecords)-->Line_24 $$ assertEquals(test.getOutputRecords()[0], copy.getOutputRecords()[0])[ FD ]
Line_15 $$ ByteArrayOutputStream data = new ByteArrayOutputStream()-->Line_19 $$ copy.readFields(new DataInputStream(new ByteArrayInputStream(data.toByteArray())))[ FD ]
Line_2 $$ public void testGridmixSplit() throws Exception -->Line_13 $$ long[] reduceOutputRecords = [ CD ]
Line_2 $$ public void testGridmixSplit() throws Exception -->Line_17 $$ test.write(out)[ CD ]
Line_16 $$ DataOutputStream out = new DataOutputStream(data)-->Line_17 $$ test.write(out)[ FD ]
Line_2 $$ public void testGridmixSplit() throws Exception -->Line_24 $$ assertEquals(test.getOutputRecords()[0], copy.getOutputRecords()[0])[ CD ]
Line_2 $$ public void testGridmixSplit() throws Exception -->Line_4 $$ long[] start = [ CD ]
Line_2 $$ public void testGridmixSplit() throws Exception -->Line_10 $$ double[] reduceBytes = [ CD ]
Line_2 $$ public void testGridmixSplit() throws Exception -->Line_11 $$ double[] reduceRecords = [ CD ]
Line_18 $$ GridmixSplit copy = new GridmixSplit()-->Line_19 $$ copy.readFields(new DataInputStream(new ByteArrayInputStream(data.toByteArray())))[ FD ]
Line_2 $$ public void testGridmixSplit() throws Exception -->Line_8 $$ ResourceUsageMetrics metrics = new ResourceUsageMetrics()[ CD ]
Line_2 $$ public void testGridmixSplit() throws Exception -->Line_22 $$ assertEquals(test.getInputRecords(), copy.getInputRecords())[ CD ]
Line_2 $$ public void testGridmixSplit() throws Exception -->Line_7 $$ CombineFileSplit cfSplit = new CombineFileSplit(files, start, lengths, locations)[ CD ]
Line_18 $$ GridmixSplit copy = new GridmixSplit()-->Line_25 $$ assertEquals(test.getReduceBytes(0), copy.getReduceBytes(0))[ FD ]
Line_18 $$ GridmixSplit copy = new GridmixSplit()-->Line_20 $$ assertEquals(test.getId(), copy.getId())[ FD ]
Line_18 $$ GridmixSplit copy = new GridmixSplit()-->Line_21 $$ assertEquals(test.getMapCount(), copy.getMapCount())[ FD ]
Line_18 $$ GridmixSplit copy = new GridmixSplit()-->Line_24 $$ assertEquals(test.getOutputRecords()[0], copy.getOutputRecords()[0])[ FD ]
Line_18 $$ GridmixSplit copy = new GridmixSplit()-->Line_26 $$ assertEquals(test.getReduceRecords(0), copy.getReduceRecords(0))[ FD ]
Line_2 $$ public void testGridmixSplit() throws Exception -->Line_15 $$ ByteArrayOutputStream data = new ByteArrayOutputStream()[ CD ]
Line_2 $$ public void testGridmixSplit() throws Exception -->Line_18 $$ GridmixSplit copy = new GridmixSplit()[ CD ]
Line_18 $$ GridmixSplit copy = new GridmixSplit()-->Line_23 $$ assertEquals(test.getOutputBytes()[0], copy.getOutputBytes()[0])[ FD ]
Line_14 $$ GridmixSplit test = new GridmixSplit(cfSplit, 2, 3, 4L, 5L, 6L, 7L, reduceBytes, reduceRecords, reduceOutputBytes, reduceOutputRecords)-->Line_17 $$ test.write(out)[ FD ]
Line_14 $$ GridmixSplit test = new GridmixSplit(cfSplit, 2, 3, 4L, 5L, 6L, 7L, reduceBytes, reduceRecords, reduceOutputBytes, reduceOutputRecords)-->Line_20 $$ assertEquals(test.getId(), copy.getId())[ FD ]
Line_2 $$ public void testGridmixSplit() throws Exception -->Line_25 $$ assertEquals(test.getReduceBytes(0), copy.getReduceBytes(0))[ CD ]
Line_2 $$ public void testGridmixSplit() throws Exception -->Line_23 $$ assertEquals(test.getOutputBytes()[0], copy.getOutputBytes()[0])[ CD ]
Line_2 $$ public void testGridmixSplit() throws Exception -->Line_21 $$ assertEquals(test.getMapCount(), copy.getMapCount())[ CD ]
Line_2 $$ public void testGridmixSplit() throws Exception -->Line_9 $$ metrics.setCumulativeCpuUsage(200)[ CD ]
Line_14 $$ GridmixSplit test = new GridmixSplit(cfSplit, 2, 3, 4L, 5L, 6L, 7L, reduceBytes, reduceRecords, reduceOutputBytes, reduceOutputRecords)-->Line_25 $$ assertEquals(test.getReduceBytes(0), copy.getReduceBytes(0))[ FD ]
Line_2 $$ public void testGridmixSplit() throws Exception -->Line_6 $$ String[] locations = [ CD ]
