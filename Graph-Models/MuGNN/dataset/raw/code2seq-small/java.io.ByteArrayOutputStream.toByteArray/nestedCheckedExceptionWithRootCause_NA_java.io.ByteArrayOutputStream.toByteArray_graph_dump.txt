Line_6 $$ Exception rootCause = new Exception(rootCauseMesg)-->Line_10 $$ assertEquals(nex.getCause(), rootCause)[ FD ]
Line_4 $$ String myMessage = "mesg for this exception"-->Line_11 $$ assertTrue(nex.getMessage().indexOf(myMessage) != -1)[ FD ]
Line_15 $$ PrintWriter pw = new PrintWriter(baos)-->Line_17 $$ pw.flush()[ FD ]
Line_18 $$ String stackTrace = new String(baos.toByteArray())-->Line_20 $$ assertFalse(stackTrace.indexOf(rootCauseMesg) == -1)[ FD ]
Line_6 $$ Exception rootCause = new Exception(rootCauseMesg)-->Line_19 $$ assertFalse(stackTrace.indexOf(rootCause.getClass().getName()) == -1)[ FD ]
Line_5 $$ String rootCauseMesg = "this is the obscure message of the root cause"-->Line_12 $$ assertTrue(nex.getMessage().indexOf(rootCauseMesg) != -1)[ FD ]
Line_5 $$ String rootCauseMesg = "this is the obscure message of the root cause"-->Line_20 $$ assertFalse(stackTrace.indexOf(rootCauseMesg) == -1)[ FD ]
Line_15 $$ PrintWriter pw = new PrintWriter(baos)-->Line_16 $$ nex.printStackTrace(pw)[ FD ]
Line_18 $$ String stackTrace = new String(baos.toByteArray())-->Line_19 $$ assertFalse(stackTrace.indexOf(rootCause.getClass().getName()) == -1)[ FD ]
