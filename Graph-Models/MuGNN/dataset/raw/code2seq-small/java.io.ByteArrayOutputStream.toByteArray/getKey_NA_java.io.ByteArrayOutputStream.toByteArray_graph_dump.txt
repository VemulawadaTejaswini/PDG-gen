Line_11 $$ DataInputBuffer result = new DataInputBuffer()-->Line_13 $$ result.reset(b, 0, b.length)[ FD ]
Line_2 $$ public DataInputBuffer getKey() throws IOException -->Line_4 $$ GridmixKey key = new GridmixKey(GridmixKey.REDUCE_SPEC, 10 * counter, 1L)[ CD ]
Line_2 $$ public DataInputBuffer getKey() throws IOException -->Line_9 $$ key.setSpec(spec)[ CD ]
Line_2 $$ public DataInputBuffer getKey() throws IOException -->Line_14 $$ return result[ CD ]
Line_2 $$ public DataInputBuffer getKey() throws IOException -->Line_8 $$ spec.bytes_out = counter * 100[ CD ]
Line_2 $$ public DataInputBuffer getKey() throws IOException -->Line_11 $$ DataInputBuffer result = new DataInputBuffer()[ CD ]
Line_2 $$ public DataInputBuffer getKey() throws IOException -->Line_10 $$ key.write(new DataOutputStream(dt))[ CD ]
Line_2 $$ public DataInputBuffer getKey() throws IOException -->Line_12 $$ byte[] b = dt.toByteArray()[ CD ]
Line_3 $$ ByteArrayOutputStream dt = new ByteArrayOutputStream()-->Line_12 $$ byte[] b = dt.toByteArray()[ FD ]
Line_12 $$ byte[] b = dt.toByteArray()-->Line_13 $$ result.reset(b, 0, b.length)[ FD ]
Line_4 $$ GridmixKey key = new GridmixKey(GridmixKey.REDUCE_SPEC, 10 * counter, 1L)-->Line_10 $$ key.write(new DataOutputStream(dt))[ FD ]
Line_4 $$ GridmixKey key = new GridmixKey(GridmixKey.REDUCE_SPEC, 10 * counter, 1L)-->Line_9 $$ key.setSpec(spec)[ FD ]
Line_2 $$ public DataInputBuffer getKey() throws IOException -->Line_3 $$ ByteArrayOutputStream dt = new ByteArrayOutputStream()[ CD ]
Line_2 $$ public DataInputBuffer getKey() throws IOException -->Line_13 $$ result.reset(b, 0, b.length)[ CD ]
Line_5 $$ Spec spec = new Spec()-->Line_9 $$ key.setSpec(spec)[ FD ]
Line_2 $$ public DataInputBuffer getKey() throws IOException -->Line_5 $$ Spec spec = new Spec()[ CD ]
