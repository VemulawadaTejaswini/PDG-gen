Line_3 $$ final JavaArchive jar = ShrinkWrap.create(JavaArchive.class, EJBUtil.APPLICATION_NAME + ".jar")-->Line_9 $$ jar.addAsManifestResource(Utils.getJBossDeploymentStructure("org.jboss.remoting3", "org.jboss.as.domain-management", "org.jboss.as.controller", "org.jboss.as.core-security"), "jboss-deployment-structure.xml")[ FD ]
Line_3 $$ final JavaArchive jar = ShrinkWrap.create(JavaArchive.class, EJBUtil.APPLICATION_NAME + ".jar")-->Line_13 $$ jar.addAsResource(new ByteArrayAsset(baos.toByteArray()), "jboss-ejb-client.properties")[ FD ]
Line_10 $$ final Properties props = EJBUtil.createEjbClientConfiguration(StringUtils.strip(TestSuiteEnvironment.getServerAddress(), "[]"))-->Line_12 $$ props.store(baos, null)[ FD ]
Line_2 $$ public static JavaArchive createDeployment() throws IOException -->Line_6 $$ jar.addAsManifestResource(new StringAsset(ClientSecurityInterceptor.class.getName()), "services/org.jboss.ejb.client.EJBClientInterceptor")[ CD ]
Line_2 $$ public static JavaArchive createDeployment() throws IOException -->Line_5 $$ jar.addAsManifestResource(SwitchIdentityTestCase.class.getPackage(), "jboss-ejb3.xml", "jboss-ejb3.xml")[ CD ]
Line_2 $$ public static JavaArchive createDeployment() throws IOException -->Line_12 $$ props.store(baos, null)[ CD ]
Line_3 $$ final JavaArchive jar = ShrinkWrap.create(JavaArchive.class, EJBUtil.APPLICATION_NAME + ".jar")-->Line_8 $$ jar.addAsManifestResource(org.jboss.as.test.integration.ejb.container.interceptor.security.api.ClientSecurityInterceptor.class.getPackage(), "permissions.xml", "permissions.xml")[ FD ]
Line_2 $$ public static JavaArchive createDeployment() throws IOException -->Line_9 $$ jar.addAsManifestResource(Utils.getJBossDeploymentStructure("org.jboss.remoting3", "org.jboss.as.domain-management", "org.jboss.as.controller", "org.jboss.as.core-security"), "jboss-deployment-structure.xml")[ CD ]
Line_2 $$ public static JavaArchive createDeployment() throws IOException -->Line_14 $$ return jar[ CD ]
Line_11 $$ final ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_13 $$ jar.addAsResource(new ByteArrayAsset(baos.toByteArray()), "jboss-ejb-client.properties")[ FD ]
Line_3 $$ final JavaArchive jar = ShrinkWrap.create(JavaArchive.class, EJBUtil.APPLICATION_NAME + ".jar")-->Line_6 $$ jar.addAsManifestResource(new StringAsset(ClientSecurityInterceptor.class.getName()), "services/org.jboss.ejb.client.EJBClientInterceptor")[ FD ]
Line_2 $$ public static JavaArchive createDeployment() throws IOException -->Line_7 $$ jar.addAsManifestResource(SwitchIdentityTestCase.class.getPackage(), "jboss-ejb-client.xml", "jboss-ejb-client.xml")[ CD ]
Line_11 $$ final ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_12 $$ props.store(baos, null)[ FD ]
Line_2 $$ public static JavaArchive createDeployment() throws IOException -->Line_11 $$ final ByteArrayOutputStream baos = new ByteArrayOutputStream()[ CD ]
Line_3 $$ final JavaArchive jar = ShrinkWrap.create(JavaArchive.class, EJBUtil.APPLICATION_NAME + ".jar")-->Line_7 $$ jar.addAsManifestResource(SwitchIdentityTestCase.class.getPackage(), "jboss-ejb-client.xml", "jboss-ejb-client.xml")[ FD ]
Line_3 $$ final JavaArchive jar = ShrinkWrap.create(JavaArchive.class, EJBUtil.APPLICATION_NAME + ".jar")-->Line_4 $$ jar.addClasses(GuestDelegationLoginModule.class, EJBUtil.class, Manage.class, BridgeBean.class, TargetBean.class, CurrentUserCredential.class, ServerSecurityInterceptor.class, ClientSecurityInterceptor.class)[ FD ]
Line_2 $$ public static JavaArchive createDeployment() throws IOException -->Line_4 $$ jar.addClasses(GuestDelegationLoginModule.class, EJBUtil.class, Manage.class, BridgeBean.class, TargetBean.class, CurrentUserCredential.class, ServerSecurityInterceptor.class, ClientSecurityInterceptor.class)[ CD ]
Line_2 $$ public static JavaArchive createDeployment() throws IOException -->Line_13 $$ jar.addAsResource(new ByteArrayAsset(baos.toByteArray()), "jboss-ejb-client.properties")[ CD ]
Line_2 $$ public static JavaArchive createDeployment() throws IOException -->Line_10 $$ final Properties props = EJBUtil.createEjbClientConfiguration(StringUtils.strip(TestSuiteEnvironment.getServerAddress(), "[]"))[ CD ]
Line_2 $$ public static JavaArchive createDeployment() throws IOException -->Line_3 $$ final JavaArchive jar = ShrinkWrap.create(JavaArchive.class, EJBUtil.APPLICATION_NAME + ".jar")[ CD ]
Line_2 $$ public static JavaArchive createDeployment() throws IOException -->Line_8 $$ jar.addAsManifestResource(org.jboss.as.test.integration.ejb.container.interceptor.security.api.ClientSecurityInterceptor.class.getPackage(), "permissions.xml", "permissions.xml")[ CD ]
Line_3 $$ final JavaArchive jar = ShrinkWrap.create(JavaArchive.class, EJBUtil.APPLICATION_NAME + ".jar")-->Line_5 $$ jar.addAsManifestResource(SwitchIdentityTestCase.class.getPackage(), "jboss-ejb3.xml", "jboss-ejb3.xml")[ FD ]
