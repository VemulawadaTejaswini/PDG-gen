Line_3 $$ InputStream is = Streams.class.getResourceAsStream(path)-->Line_4 $$ if (is == null) [ FD ]
Line_7 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_12 $$ return out.toByteArray()[ FD ]
Line_3 $$ InputStream is = Streams.class.getResourceAsStream(path)-->Line_10 $$ is.close()[ FD ]
Line_2 $$ private static byte[] unZipData(String path) throws IOException -->Line_10 $$ is.close()[ CD ]
Line_2 $$ private static byte[] unZipData(String path) throws IOException -->Line_8 $$ GZIPInputStream in = new GZIPInputStream(is)[ CD ]
Line_7 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_9 $$ Streams.copy(in, out)[ FD ]
Line_2 $$ private static byte[] unZipData(String path) throws IOException -->Line_3 $$ InputStream is = Streams.class.getResourceAsStream(path)[ CD ]
Line_2 $$ private static byte[] unZipData(String path) throws IOException -->Line_7 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()[ CD ]
Line_2 $$ private static byte[] unZipData(String path) throws IOException -->Line_3 $$ InputStream is = Streams.class.getResourceAsStream(path)[ FD ]
Line_2 $$ private static byte[] unZipData(String path) throws IOException -->Line_4 $$ if (is == null) [ CD ]
Line_7 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_11 $$ out.close()[ FD ]
Line_2 $$ private static byte[] unZipData(String path) throws IOException -->Line_11 $$ out.close()[ CD ]
Line_2 $$ private static byte[] unZipData(String path) throws IOException -->Line_12 $$ return out.toByteArray()[ CD ]
Line_2 $$ private static byte[] unZipData(String path) throws IOException -->Line_9 $$ Streams.copy(in, out)[ CD ]
Line_8 $$ GZIPInputStream in = new GZIPInputStream(is)-->Line_9 $$ Streams.copy(in, out)[ FD ]
