Line_2 $$ private void testfailTask(Configuration conf) throws Exception -->Line_10 $$ runTool(conf, jc, new String[] [ FD ]
Line_2 $$ private void testfailTask(Configuration conf) throws Exception -->Line_5 $$ TaskID tid = new TaskID(job.getJobID(), TaskType.MAP, 0)[ CD ]
Line_2 $$ private void testfailTask(Configuration conf) throws Exception -->Line_8 $$ int exitCode = runTool(conf, jc, new String[] [ FD ]
Line_4 $$ CLI jc = createJobClient()-->Line_8 $$ int exitCode = runTool(conf, jc, new String[] [ FD ]
Line_8 $$ int exitCode = runTool(conf, jc, new String[] -->Line_9 $$ assertEquals("Exit code", -1, exitCode)[ FD ]
Line_2 $$ private void testfailTask(Configuration conf) throws Exception -->Line_11 $$ String answer = new String(out.toByteArray(), "UTF-8")[ CD ]
Line_6 $$ TaskAttemptID taid = new TaskAttemptID(tid, 1)-->Line_10 $$ runTool(conf, jc, new String[] [ FD ]
Line_7 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_8 $$ int exitCode = runTool(conf, jc, new String[] [ FD ]
Line_7 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_10 $$ runTool(conf, jc, new String[] [ FD ]
Line_3 $$ Job job = runJobInBackGround(conf)-->Line_5 $$ TaskID tid = new TaskID(job.getJobID(), TaskType.MAP, 0)[ FD ]
Line_2 $$ private void testfailTask(Configuration conf) throws Exception -->Line_12 $$ Assert.assertTrue(answer.contains("Killed task " + taid + " by failing it"))[ CD ]
Line_2 $$ private void testfailTask(Configuration conf) throws Exception -->Line_3 $$ Job job = runJobInBackGround(conf)[ FD ]
Line_2 $$ private void testfailTask(Configuration conf) throws Exception -->Line_3 $$ Job job = runJobInBackGround(conf)[ CD ]
Line_2 $$ private void testfailTask(Configuration conf) throws Exception -->Line_6 $$ TaskAttemptID taid = new TaskAttemptID(tid, 1)[ CD ]
Line_7 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_11 $$ String answer = new String(out.toByteArray(), "UTF-8")[ FD ]
Line_11 $$ String answer = new String(out.toByteArray(), "UTF-8")-->Line_12 $$ Assert.assertTrue(answer.contains("Killed task " + taid + " by failing it"))[ FD ]
Line_2 $$ private void testfailTask(Configuration conf) throws Exception -->Line_4 $$ CLI jc = createJobClient()[ CD ]
Line_4 $$ CLI jc = createJobClient()-->Line_10 $$ runTool(conf, jc, new String[] [ FD ]
Line_2 $$ private void testfailTask(Configuration conf) throws Exception -->Line_10 $$ runTool(conf, jc, new String[] [ CD ]
Line_2 $$ private void testfailTask(Configuration conf) throws Exception -->Line_7 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()[ CD ]
Line_2 $$ private void testfailTask(Configuration conf) throws Exception -->Line_9 $$ assertEquals("Exit code", -1, exitCode)[ CD ]
Line_2 $$ private void testfailTask(Configuration conf) throws Exception -->Line_8 $$ int exitCode = runTool(conf, jc, new String[] [ CD ]
