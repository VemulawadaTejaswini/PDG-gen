Line_17 $$ do -->Line_20 $$ compressor.finish()[ CD ]
Line_27 $$ len -= bufLen-->Line_17 $$ do [ FD ]
Line_4 $$ int BYTE_SIZE = 1024 * 50-->Line_16 $$ if (BYTE_SIZE > maxSize) [ FD ]
Line_17 $$ do -->Line_19 $$ compressor.setInput(bytes, off, bufLen)[ CD ]
Line_16 $$ if (BYTE_SIZE > maxSize) -->Line_17 $$ do [ CD ]
Line_17 $$ do -->Line_27 $$ len -= bufLen[ CD ]
Line_13 $$ int off = 0-->Line_26 $$ off += bufLen[ FD ]
Line_6 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_30 $$ assertTrue("testSnappyBlockCompression error !!!", out.toByteArray().length > 0)[ FD ]
Line_27 $$ len -= bufLen-->Line_18 $$ int bufLen = Math.min(len, maxSize)[ FD ]
Line_21 $$ while (!compressor.finished()) -->Line_22 $$ compressor.compress(block, 0, block.length)[ CD ]
Line_18 $$ int bufLen = Math.min(len, maxSize)-->Line_27 $$ len -= bufLen[ FD ]
Line_15 $$ int maxSize = BLOCK_SIZE - 18-->Line_18 $$ int bufLen = Math.min(len, maxSize)[ FD ]
Line_17 $$ do -->Line_18 $$ int bufLen = Math.min(len, maxSize)[ CD ]
Line_17 $$ do -->Line_26 $$ off += bufLen[ CD ]
Line_17 $$ do -->Line_25 $$ compressor.reset()[ CD ]
Line_26 $$ off += bufLen-->Line_19 $$ compressor.setInput(bytes, off, bufLen)[ FD ]
Line_14 $$ int len = BYTE_SIZE-->Line_17 $$ do [ FD ]
Line_14 $$ int len = BYTE_SIZE-->Line_27 $$ len -= bufLen[ FD ]
Line_17 $$ do -->Line_21 $$ while (!compressor.finished()) [ CD ]
Line_13 $$ int off = 0-->Line_19 $$ compressor.setInput(bytes, off, bufLen)[ FD ]
Line_18 $$ int bufLen = Math.min(len, maxSize)-->Line_19 $$ compressor.setInput(bytes, off, bufLen)[ FD ]
Line_14 $$ int len = BYTE_SIZE-->Line_18 $$ int bufLen = Math.min(len, maxSize)[ FD ]
Line_21 $$ while (!compressor.finished()) -->Line_23 $$ out.write(block)[ CD ]
Line_4 $$ int BYTE_SIZE = 1024 * 50-->Line_8 $$ byte[] bytes = BytesGenerator.get(BYTE_SIZE)[ FD ]
Line_8 $$ byte[] bytes = BytesGenerator.get(BYTE_SIZE)-->Line_19 $$ compressor.setInput(bytes, off, bufLen)[ FD ]
Line_6 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_23 $$ out.write(block)[ FD ]
Line_7 $$ byte[] block = new byte[BLOCK_SIZE]-->Line_22 $$ compressor.compress(block, 0, block.length)[ FD ]
Line_15 $$ int maxSize = BLOCK_SIZE - 18-->Line_16 $$ if (BYTE_SIZE > maxSize) [ FD ]
Line_7 $$ byte[] block = new byte[BLOCK_SIZE]-->Line_23 $$ out.write(block)[ FD ]
Line_18 $$ int bufLen = Math.min(len, maxSize)-->Line_26 $$ off += bufLen[ FD ]
