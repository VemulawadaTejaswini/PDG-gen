Line_12 $$ int maxSize = BLOCK_SIZE - 18-->Line_13 $$ if (BYTE_SIZE > maxSize) [ FD ]
Line_6 $$ byte[] block = new byte[BLOCK_SIZE]-->Line_19 $$ compressor.compress(block, 0, block.length)[ FD ]
Line_11 $$ int len = BYTE_SIZE-->Line_24 $$ len -= bufLen[ FD ]
Line_14 $$ do -->Line_17 $$ compressor.finish()[ CD ]
Line_14 $$ do -->Line_16 $$ compressor.setInput(bytes, off, bufLen)[ CD ]
Line_11 $$ int len = BYTE_SIZE-->Line_14 $$ do [ FD ]
Line_24 $$ len -= bufLen-->Line_15 $$ int bufLen = Math.min(len, maxSize)[ FD ]
Line_14 $$ do -->Line_18 $$ while (!compressor.finished()) [ CD ]
Line_2 $$ public void testSnappyBlockCompression() -->Line_7 $$ byte[] bytes = BytesGenerator.get(BYTE_SIZE)[ CD ]
Line_18 $$ while (!compressor.finished()) -->Line_20 $$ out.write(block)[ CD ]
Line_2 $$ public void testSnappyBlockCompression() -->Line_5 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()[ CD ]
Line_15 $$ int bufLen = Math.min(len, maxSize)-->Line_23 $$ off += bufLen[ FD ]
Line_9 $$ SnappyCompressor compressor = new SnappyCompressor()-->Line_19 $$ compressor.compress(block, 0, block.length)[ FD ]
Line_11 $$ int len = BYTE_SIZE-->Line_15 $$ int bufLen = Math.min(len, maxSize)[ FD ]
Line_10 $$ int off = 0-->Line_16 $$ compressor.setInput(bytes, off, bufLen)[ FD ]
Line_9 $$ SnappyCompressor compressor = new SnappyCompressor()-->Line_22 $$ compressor.reset()[ FD ]
Line_23 $$ off += bufLen-->Line_16 $$ compressor.setInput(bytes, off, bufLen)[ FD ]
Line_14 $$ do -->Line_23 $$ off += bufLen[ CD ]
Line_2 $$ public void testSnappyBlockCompression() -->Line_6 $$ byte[] block = new byte[BLOCK_SIZE][ CD ]
Line_14 $$ do -->Line_15 $$ int bufLen = Math.min(len, maxSize)[ CD ]
Line_6 $$ byte[] block = new byte[BLOCK_SIZE]-->Line_20 $$ out.write(block)[ FD ]
Line_5 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_27 $$ assertTrue("testSnappyBlockCompression error !!!", out.toByteArray().length > 0)[ FD ]
Line_14 $$ do -->Line_24 $$ len -= bufLen[ CD ]
Line_2 $$ public void testSnappyBlockCompression() -->Line_4 $$ int BLOCK_SIZE = 512[ CD ]
Line_3 $$ int BYTE_SIZE = 1024 * 50-->Line_7 $$ byte[] bytes = BytesGenerator.get(BYTE_SIZE)[ FD ]
Line_3 $$ int BYTE_SIZE = 1024 * 50-->Line_13 $$ if (BYTE_SIZE > maxSize) [ FD ]
Line_9 $$ SnappyCompressor compressor = new SnappyCompressor()-->Line_17 $$ compressor.finish()[ FD ]
Line_5 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_20 $$ out.write(block)[ FD ]
Line_12 $$ int maxSize = BLOCK_SIZE - 18-->Line_15 $$ int bufLen = Math.min(len, maxSize)[ FD ]
Line_9 $$ SnappyCompressor compressor = new SnappyCompressor()-->Line_16 $$ compressor.setInput(bytes, off, bufLen)[ FD ]
Line_15 $$ int bufLen = Math.min(len, maxSize)-->Line_16 $$ compressor.setInput(bytes, off, bufLen)[ FD ]
Line_13 $$ if (BYTE_SIZE > maxSize) -->Line_14 $$ do [ CD ]
Line_7 $$ byte[] bytes = BytesGenerator.get(BYTE_SIZE)-->Line_16 $$ compressor.setInput(bytes, off, bufLen)[ FD ]
Line_10 $$ int off = 0-->Line_23 $$ off += bufLen[ FD ]
Line_15 $$ int bufLen = Math.min(len, maxSize)-->Line_24 $$ len -= bufLen[ FD ]
Line_24 $$ len -= bufLen-->Line_14 $$ do [ FD ]
Line_9 $$ SnappyCompressor compressor = new SnappyCompressor()-->Line_18 $$ while (!compressor.finished()) [ FD ]
Line_14 $$ do -->Line_22 $$ compressor.reset()[ CD ]
Line_2 $$ public void testSnappyBlockCompression() -->Line_3 $$ int BYTE_SIZE = 1024 * 50[ CD ]
Line_18 $$ while (!compressor.finished()) -->Line_19 $$ compressor.compress(block, 0, block.length)[ CD ]
