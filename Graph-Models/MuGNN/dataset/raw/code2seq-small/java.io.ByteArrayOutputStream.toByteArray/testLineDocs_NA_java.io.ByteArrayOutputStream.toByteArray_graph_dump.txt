Line_4 $$ LineFileDocs lineFileDocs = new LineFileDocs(r)-->Line_9 $$ String s = lineFileDocs.nextDoc().get("body")[ FD ]
Line_7 $$ ByteArrayOutputStream bos = new ByteArrayOutputStream()-->Line_10 $$ bos.write(s.getBytes(StandardCharsets.UTF_8))[ FD ]
Line_2 $$ public void testLineDocs() throws IOException -->Line_3 $$ Random r = getRandom()[ CD ]
Line_9 $$ String s = lineFileDocs.nextDoc().get("body")-->Line_10 $$ bos.write(s.getBytes(StandardCharsets.UTF_8))[ FD ]
Line_7 $$ ByteArrayOutputStream bos = new ByteArrayOutputStream()-->Line_12 $$ doTest(bos.toByteArray())[ FD ]
Line_4 $$ LineFileDocs lineFileDocs = new LineFileDocs(r)-->Line_14 $$ lineFileDocs.close()[ FD ]
Line_2 $$ public void testLineDocs() throws IOException -->Line_4 $$ LineFileDocs lineFileDocs = new LineFileDocs(r)[ CD ]
Line_5 $$ for (int i = 0; i < 10; i++) -->Line_12 $$ doTest(bos.toByteArray())[ CD ]
Line_5 $$ for (int i = 0; i < 10; i++) -->Line_6 $$ int numDocs = TestUtil.nextInt(r, 1, 200)[ CD ]
Line_5 $$ for (int i = 0; i < 10; i++) -->Line_7 $$ ByteArrayOutputStream bos = new ByteArrayOutputStream()[ CD ]
Line_8 $$ for (int j = 0; j < numDocs; j++) -->Line_10 $$ bos.write(s.getBytes(StandardCharsets.UTF_8))[ CD ]
Line_5 $$ for (int i = 0; i < 10; i++) -->Line_8 $$ for (int j = 0; j < numDocs; j++) [ CD ]
Line_2 $$ public void testLineDocs() throws IOException -->Line_14 $$ lineFileDocs.close()[ CD ]
Line_6 $$ int numDocs = TestUtil.nextInt(r, 1, 200)-->Line_8 $$ for (int j = 0; j < numDocs; j++) [ FD ]
Line_2 $$ public void testLineDocs() throws IOException -->Line_5 $$ for (int i = 0; i < 10; i++) [ CD ]
Line_3 $$ Random r = getRandom()-->Line_6 $$ int numDocs = TestUtil.nextInt(r, 1, 200)[ FD ]
Line_8 $$ for (int j = 0; j < numDocs; j++) -->Line_9 $$ String s = lineFileDocs.nextDoc().get("body")[ CD ]
