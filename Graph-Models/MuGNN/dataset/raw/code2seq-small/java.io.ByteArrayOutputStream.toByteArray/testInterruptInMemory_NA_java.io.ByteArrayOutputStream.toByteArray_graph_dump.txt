Line_17 $$ final StuckInputStream in = new StuckInputStream(new ByteArrayInputStream(bout.toByteArray()))-->Line_18 $$ when(connection.getInputStream()).thenReturn(in)[ FD ]
Line_14 $$ ShuffleHeader header = new ShuffleHeader(map1ID.toString(), 10, 10, 1)-->Line_16 $$ header.write(new DataOutputStream(bout))[ FD ]
Line_5 $$ InMemoryMapOutput<Text, Text> immo = spy(new InMemoryMapOutput<Text, Text>(job, id, mm, 100, null, true))-->Line_34 $$ verify(immo).abort()[ FD ]
Line_5 $$ InMemoryMapOutput<Text, Text> immo = spy(new InMemoryMapOutput<Text, Text>(job, id, mm, 100, null, true))-->Line_6 $$ when(mm.reserve(any(TaskAttemptID.class), anyLong(), anyInt())).thenReturn(immo)[ FD ]
Line_15 $$ ByteArrayOutputStream bout = new ByteArrayOutputStream()-->Line_17 $$ final StuckInputStream in = new StuckInputStream(new ByteArrayInputStream(bout.toByteArray()))[ FD ]
Line_19 $$ doAnswer(new Answer<Void>() -->Line_22 $$ in.close()[ CD ]
Line_17 $$ final StuckInputStream in = new StuckInputStream(new ByteArrayInputStream(bout.toByteArray()))-->Line_22 $$ in.close()[ FD ]
Line_9 $$ String replyHash = SecureShuffleUtils.generateHash(encHash.getBytes(), key)-->Line_13 $$ when(connection.getHeaderField(SecureShuffleUtils.HTTP_HEADER_REPLY_URL_HASH)).thenReturn(replyHash)[ FD ]
Line_19 $$ doAnswer(new Answer<Void>() -->Line_23 $$ return null[ CD ]
Line_17 $$ final StuckInputStream in = new StuckInputStream(new ByteArrayInputStream(bout.toByteArray()))-->Line_33 $$ assertTrue(in.wasClosedProperly())[ FD ]
