Line_64 $$ newpos += ctrl[0]-->Line_43 $$ while (newpos < newsize) [ FD ]
Line_43 $$ while (newpos < newsize) -->Line_59 $$ for (int i = 0; i < ctrl[0]; i++) [ CD ]
Line_48 $$ if (newpos + ctrl[0] > newsize) -->Line_49 $$ System.err.println("Corrupt patch\n")[ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_81 $$ extraBlockIn.close()[ CD ]
Line_43 $$ while (newpos < newsize) -->Line_70 $$ if (!Util.readFromStream(extraBlockIn, newBuf, newpos, ctrl[1])) [ CD ]
Line_40 $$ newpos = 0-->Line_74 $$ newpos += ctrl[1][ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_21 $$ in = new ByteArrayInputStream(diffData)[ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_22 $$ in.skip(ctrlBlockLen + 32)[ CD ]
Line_65 $$ oldpos += ctrl[0]-->Line_75 $$ oldpos += ctrl[2][ FD ]
Line_3 $$ int oldpos, newpos-->Line_64 $$ newpos += ctrl[0][ FD ]
Line_40 $$ newpos = 0-->Line_70 $$ if (!Util.readFromStream(extraBlockIn, newBuf, newpos, ctrl[1])) [ FD ]
Line_21 $$ in = new ByteArrayInputStream(diffData)-->Line_25 $$ in.skip(diffBlockLen + ctrlBlockLen + 32)[ FD ]
Line_3 $$ int oldpos, newpos-->Line_43 $$ while (newpos < newsize) [ FD ]
Line_43 $$ while (newpos < newsize) -->Line_66 $$ if (newpos + ctrl[1] > newsize) [ CD ]
Line_74 $$ newpos += ctrl[1]-->Line_70 $$ if (!Util.readFromStream(extraBlockIn, newBuf, newpos, ctrl[1])) [ FD ]
Line_43 $$ while (newpos < newsize) -->Line_75 $$ oldpos += ctrl[2][ CD ]
Line_26 $$ GZIPInputStream extraBlockIn = new GZIPInputStream(in)-->Line_70 $$ if (!Util.readFromStream(extraBlockIn, newBuf, newpos, ctrl[1])) [ FD ]
Line_39 $$ oldpos = 0-->Line_75 $$ oldpos += ctrl[2][ FD ]
Line_24 $$ in = new ByteArrayInputStream(diffData)-->Line_25 $$ in.skip(diffBlockLen + ctrlBlockLen + 32)[ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_40 $$ newpos = 0[ CD ]
Line_43 $$ while (newpos < newsize) -->Line_48 $$ if (newpos + ctrl[0] > newsize) [ CD ]
Line_26 $$ GZIPInputStream extraBlockIn = new GZIPInputStream(in)-->Line_81 $$ extraBlockIn.close()[ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_23 $$ GZIPInputStream diffBlockIn = new GZIPInputStream(in)[ CD ]
Line_3 $$ int oldpos, newpos-->Line_39 $$ oldpos = 0[ FD ]
Line_70 $$ if (!Util.readFromStream(extraBlockIn, newBuf, newpos, ctrl[1])) -->Line_71 $$ System.err.println("error reading from extraIn")[ CD ]
Line_40 $$ newpos = 0-->Line_43 $$ while (newpos < newsize) [ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_36 $$ byte[] oldBuf = oldFileByteOut.toByteArray()[ CD ]
Line_44 $$ for (int i = 0; i <= 2; i++) -->Line_45 $$ ctrl[i] = diffIn.readInt()[ CD ]
Line_48 $$ if (newpos + ctrl[0] > newsize) -->Line_50 $$ return[ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_4 $$ byte[] diffData = Utils.readBytes(diffFileIn)[ CD ]
Line_64 $$ newpos += ctrl[0]-->Line_74 $$ newpos += ctrl[1][ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_32 $$ Utils.copyStream(oldFileIn, oldFileByteOut)[ FD ]
Line_44 $$ for (int i = 0; i <= 2; i++) -->Line_59 $$ for (int i = 0; i < ctrl[0]; i++) [ FD ]
Line_21 $$ in = new ByteArrayInputStream(diffData)-->Line_24 $$ in = new ByteArrayInputStream(diffData)[ FD ]
Line_60 $$ if ((oldpos + i >= 0) && (oldpos + i < oldsize)) -->Line_61 $$ newBuf[newpos + i] += oldBuf[oldpos + i][ CD ]
Line_38 $$ byte[] newBuf = new byte[newsize + 1]-->Line_70 $$ if (!Util.readFromStream(extraBlockIn, newBuf, newpos, ctrl[1])) [ FD ]
Line_21 $$ in = new ByteArrayInputStream(diffData)-->Line_22 $$ in.skip(ctrlBlockLen + 32)[ FD ]
Line_64 $$ newpos += ctrl[0]-->Line_70 $$ if (!Util.readFromStream(extraBlockIn, newBuf, newpos, ctrl[1])) [ FD ]
Line_59 $$ for (int i = 0; i < ctrl[0]; i++) -->Line_60 $$ if ((oldpos + i >= 0) && (oldpos + i < oldsize)) [ CD ]
Line_66 $$ if (newpos + ctrl[1] > newsize) -->Line_67 $$ System.err.println("Corrupt patch")[ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_83 $$ newFileOut.write(newBuf, 0, newBuf.length - 1)[ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_41 $$ int[] ctrl = new int[3][ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_26 $$ GZIPInputStream extraBlockIn = new GZIPInputStream(in)[ CD ]
Line_38 $$ byte[] newBuf = new byte[newsize + 1]-->Line_83 $$ newFileOut.write(newBuf, 0, newBuf.length - 1)[ FD ]
Line_3 $$ int oldpos, newpos-->Line_75 $$ oldpos += ctrl[2][ FD ]
Line_66 $$ if (newpos + ctrl[1] > newsize) -->Line_68 $$ return[ CD ]
Line_5 $$ DataInputStream diffIn = new DataInputStream(new ByteArrayInputStream(diffData))-->Line_82 $$ diffIn.close()[ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_43 $$ while (newpos < newsize) [ CD ]
Line_5 $$ DataInputStream diffIn = new DataInputStream(new ByteArrayInputStream(diffData))-->Line_45 $$ ctrl[i] = diffIn.readInt()[ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_38 $$ byte[] newBuf = new byte[newsize + 1][ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_39 $$ oldpos = 0[ CD ]
Line_43 $$ while (newpos < newsize) -->Line_44 $$ for (int i = 0; i <= 2; i++) [ CD ]
Line_40 $$ newpos = 0-->Line_64 $$ newpos += ctrl[0][ FD ]
Line_43 $$ while (newpos < newsize) -->Line_65 $$ oldpos += ctrl[0][ CD ]
Line_43 $$ while (newpos < newsize) -->Line_64 $$ newpos += ctrl[0][ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_3 $$ int oldpos, newpos[ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_37 $$ int oldsize = oldBuf.length[ CD ]
Line_70 $$ if (!Util.readFromStream(extraBlockIn, newBuf, newpos, ctrl[1])) -->Line_72 $$ return[ CD ]
Line_43 $$ while (newpos < newsize) -->Line_74 $$ newpos += ctrl[1][ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_82 $$ diffIn.close()[ CD ]
Line_3 $$ int oldpos, newpos-->Line_65 $$ oldpos += ctrl[0][ FD ]
Line_3 $$ int oldpos, newpos-->Line_74 $$ newpos += ctrl[1][ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_5 $$ DataInputStream diffIn = new DataInputStream(new ByteArrayInputStream(diffData))[ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_83 $$ newFileOut.write(newBuf, 0, newBuf.length - 1)[ CD ]
Line_39 $$ oldpos = 0-->Line_65 $$ oldpos += ctrl[0][ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_25 $$ in.skip(diffBlockLen + ctrlBlockLen + 32)[ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_42 $$ int nbytes[ CD ]
Line_74 $$ newpos += ctrl[1]-->Line_43 $$ while (newpos < newsize) [ FD ]
Line_3 $$ int oldpos, newpos-->Line_40 $$ newpos = 0[ FD ]
Line_3 $$ int oldpos, newpos-->Line_70 $$ if (!Util.readFromStream(extraBlockIn, newBuf, newpos, ctrl[1])) [ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_24 $$ in = new ByteArrayInputStream(diffData)[ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_4 $$ byte[] diffData = Utils.readBytes(diffFileIn)[ FD ]
