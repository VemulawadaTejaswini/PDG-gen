Line_8 $$ if (yarnCluster == null) -->Line_21 $$ yarnClusterConfig.writeXml(bytesOut)[ CD ]
Line_18 $$ Configuration yarnClusterConfig = yarnCluster.getConfig()-->Line_19 $$ yarnClusterConfig.set("yarn.application.classpath", new File(url.getPath()).getParent())[ FD ]
Line_2 $$ public void setup() throws Exception -->Line_27 $$ FileContext fsContext = FileContext.getLocalFSFileContext()[ CD ]
Line_8 $$ if (yarnCluster == null) -->Line_15 $$ if (url == null) [ CD ]
Line_14 $$ URL url = Thread.currentThread().getContextClassLoader().getResource("yarn-site.xml")-->Line_23 $$ OutputStream os = new FileOutputStream(new File(url.getPath()))[ FD ]
Line_14 $$ URL url = Thread.currentThread().getContextClassLoader().getResource("yarn-site.xml")-->Line_19 $$ yarnClusterConfig.set("yarn.application.classpath", new File(url.getPath()).getParent())[ FD ]
Line_2 $$ public void setup() throws Exception -->Line_4 $$ conf.setInt(YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_MB, 128)[ CD ]
Line_8 $$ if (yarnCluster == null) -->Line_12 $$ NodeManager nm = yarnCluster.getNodeManager(0)[ CD ]
Line_8 $$ if (yarnCluster == null) -->Line_10 $$ yarnCluster.init(conf)[ CD ]
Line_20 $$ ByteArrayOutputStream bytesOut = new ByteArrayOutputStream()-->Line_21 $$ yarnClusterConfig.writeXml(bytesOut)[ FD ]
Line_8 $$ if (yarnCluster == null) -->Line_19 $$ yarnClusterConfig.set("yarn.application.classpath", new File(url.getPath()).getParent())[ CD ]
Line_8 $$ if (yarnCluster == null) -->Line_25 $$ os.close()[ CD ]
Line_8 $$ if (yarnCluster == null) -->Line_22 $$ bytesOut.close()[ CD ]
Line_2 $$ public void setup() throws Exception -->Line_6 $$ conf.set("yarn.log.dir", "target")[ CD ]
Line_23 $$ OutputStream os = new FileOutputStream(new File(url.getPath()))-->Line_25 $$ os.close()[ FD ]
Line_8 $$ if (yarnCluster == null) -->Line_23 $$ OutputStream os = new FileOutputStream(new File(url.getPath()))[ CD ]
Line_8 $$ if (yarnCluster == null) -->Line_24 $$ os.write(bytesOut.toByteArray())[ CD ]
Line_27 $$ FileContext fsContext = FileContext.getLocalFSFileContext()-->Line_28 $$ fsContext.delete(new Path(conf.get("yarn.timeline-service.leveldb-timeline-store.path")), true)[ FD ]
Line_2 $$ public void setup() throws Exception -->Line_8 $$ if (yarnCluster == null) [ CD ]
Line_2 $$ public void setup() throws Exception -->Line_5 $$ conf.setClass(YarnConfiguration.RM_SCHEDULER, FifoScheduler.class, ResourceScheduler.class)[ CD ]
Line_12 $$ NodeManager nm = yarnCluster.getNodeManager(0)-->Line_13 $$ waitForNMToRegister(nm)[ FD ]
Line_8 $$ if (yarnCluster == null) -->Line_20 $$ ByteArrayOutputStream bytesOut = new ByteArrayOutputStream()[ CD ]
Line_14 $$ URL url = Thread.currentThread().getContextClassLoader().getResource("yarn-site.xml")-->Line_15 $$ if (url == null) [ FD ]
Line_8 $$ if (yarnCluster == null) -->Line_13 $$ waitForNMToRegister(nm)[ CD ]
Line_18 $$ Configuration yarnClusterConfig = yarnCluster.getConfig()-->Line_21 $$ yarnClusterConfig.writeXml(bytesOut)[ FD ]
Line_23 $$ OutputStream os = new FileOutputStream(new File(url.getPath()))-->Line_24 $$ os.write(bytesOut.toByteArray())[ FD ]
Line_2 $$ public void setup() throws Exception -->Line_3 $$ LOG.info("Starting up YARN cluster")[ CD ]
Line_8 $$ if (yarnCluster == null) -->Line_11 $$ yarnCluster.start()[ CD ]
Line_20 $$ ByteArrayOutputStream bytesOut = new ByteArrayOutputStream()-->Line_22 $$ bytesOut.close()[ FD ]
Line_2 $$ public void setup() throws Exception -->Line_7 $$ conf.setBoolean(YarnConfiguration.TIMELINE_SERVICE_ENABLED, true)[ CD ]
Line_20 $$ ByteArrayOutputStream bytesOut = new ByteArrayOutputStream()-->Line_24 $$ os.write(bytesOut.toByteArray())[ FD ]
Line_2 $$ public void setup() throws Exception -->Line_28 $$ fsContext.delete(new Path(conf.get("yarn.timeline-service.leveldb-timeline-store.path")), true)[ CD ]
Line_8 $$ if (yarnCluster == null) -->Line_14 $$ URL url = Thread.currentThread().getContextClassLoader().getResource("yarn-site.xml")[ CD ]
Line_8 $$ if (yarnCluster == null) -->Line_18 $$ Configuration yarnClusterConfig = yarnCluster.getConfig()[ CD ]
