Line_2 $$ byte[] getBytes() throws IOException -->Line_3 $$ byte[] bytes = this.bytes[ CD ]
Line_9 $$ ByteArrayOutputStream output = new ByteArrayOutputStream()-->Line_17 $$ return output.toByteArray()[ FD ]
Line_2 $$ byte[] getBytes() throws IOException -->Line_6 $$ if (this.object == null)[ CD ]
Line_11 $$ try (SimpleDataOutput data = new SimpleDataOutput(Marshalling.createByteOutput(output))) -->Line_14 $$ marshaller.start(data)[ FD ]
Line_3 $$ byte[] bytes = this.bytes-->Line_4 $$ if (bytes != null)[ FD ]
Line_8 $$ int version = this.context.getCurrentVersion()-->Line_12 $$ IndexExternalizer.VARIABLE.writeData(data, version)[ FD ]
Line_2 $$ byte[] getBytes() throws IOException -->Line_9 $$ ByteArrayOutputStream output = new ByteArrayOutputStream()[ CD ]
Line_13 $$ try (Marshaller marshaller = this.context.createMarshaller(version)) -->Line_15 $$ marshaller.writeObject(this.object)[ FD ]
Line_2 $$ byte[] getBytes() throws IOException -->Line_10 $$ ClassLoader loader = setThreadContextClassLoader(this.context.getClassLoader())[ CD ]
Line_4 $$ if (bytes != null)-->Line_5 $$ return bytes[ CD ]
Line_13 $$ try (Marshaller marshaller = this.context.createMarshaller(version)) -->Line_14 $$ marshaller.start(data)[ FD ]
Line_6 $$ if (this.object == null)-->Line_7 $$ return null[ CD ]
Line_2 $$ byte[] getBytes() throws IOException -->Line_4 $$ if (bytes != null)[ CD ]
Line_8 $$ int version = this.context.getCurrentVersion()-->Line_13 $$ try (Marshaller marshaller = this.context.createMarshaller(version)) [ FD ]
Line_11 $$ try (SimpleDataOutput data = new SimpleDataOutput(Marshalling.createByteOutput(output))) -->Line_12 $$ IndexExternalizer.VARIABLE.writeData(data, version)[ FD ]
Line_10 $$ ClassLoader loader = setThreadContextClassLoader(this.context.getClassLoader())-->Line_20 $$ setThreadContextClassLoader(loader)[ FD ]
Line_9 $$ ByteArrayOutputStream output = new ByteArrayOutputStream()-->Line_11 $$ try (SimpleDataOutput data = new SimpleDataOutput(Marshalling.createByteOutput(output))) [ FD ]
Line_2 $$ byte[] getBytes() throws IOException -->Line_8 $$ int version = this.context.getCurrentVersion()[ CD ]
Line_13 $$ try (Marshaller marshaller = this.context.createMarshaller(version)) -->Line_16 $$ marshaller.finish()[ FD ]
