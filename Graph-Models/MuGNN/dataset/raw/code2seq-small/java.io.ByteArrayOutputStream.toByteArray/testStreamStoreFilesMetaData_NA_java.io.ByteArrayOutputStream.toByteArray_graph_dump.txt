Line_2 $$ public void testStreamStoreFilesMetaData() throws Exception -->Line_8 $$ out.setVersion(targetNodeVersion)[ CD ]
Line_2 $$ public void testStreamStoreFilesMetaData() throws Exception -->Line_3 $$ Store.MetadataSnapshot metadataSnapshot = createMetaDataSnapshot()[ CD ]
Line_2 $$ public void testStreamStoreFilesMetaData() throws Exception -->Line_13 $$ TransportNodesListShardStoreMetaData.StoreFilesMetaData inStoreFileMetaData = TransportNodesListShardStoreMetaData.StoreFilesMetaData.readStoreFilesMetaData(in)[ CD ]
Line_11 $$ InputStreamStreamInput in = new InputStreamStreamInput(inBuffer)-->Line_12 $$ in.setVersion(targetNodeVersion)[ FD ]
Line_2 $$ public void testStreamStoreFilesMetaData() throws Exception -->Line_7 $$ org.elasticsearch.Version targetNodeVersion = randomVersion(random())[ CD ]
Line_5 $$ ByteArrayOutputStream outBuffer = new ByteArrayOutputStream()-->Line_10 $$ ByteArrayInputStream inBuffer = new ByteArrayInputStream(outBuffer.toByteArray())[ FD ]
Line_7 $$ org.elasticsearch.Version targetNodeVersion = randomVersion(random())-->Line_8 $$ out.setVersion(targetNodeVersion)[ FD ]
Line_2 $$ public void testStreamStoreFilesMetaData() throws Exception -->Line_18 $$ assertThat(outStoreFileMetaData.syncId(), equalTo(inStoreFileMetaData.syncId()))[ CD ]
Line_2 $$ public void testStreamStoreFilesMetaData() throws Exception -->Line_10 $$ ByteArrayInputStream inBuffer = new ByteArrayInputStream(outBuffer.toByteArray())[ CD ]
Line_15 $$ for (StoreFileMetaData inFile : inStoreFileMetaData) -->Line_16 $$ assertThat(inFile.name(), equalTo(outFiles.next().name()))[ FD ]
Line_2 $$ public void testStreamStoreFilesMetaData() throws Exception -->Line_9 $$ outStoreFileMetaData.writeTo(out)[ CD ]
Line_2 $$ public void testStreamStoreFilesMetaData() throws Exception -->Line_14 $$ Iterator<StoreFileMetaData> outFiles = outStoreFileMetaData.iterator()[ CD ]
Line_6 $$ OutputStreamStreamOutput out = new OutputStreamStreamOutput(outBuffer)-->Line_9 $$ outStoreFileMetaData.writeTo(out)[ FD ]
Line_4 $$ TransportNodesListShardStoreMetaData.StoreFilesMetaData outStoreFileMetaData = new TransportNodesListShardStoreMetaData.StoreFilesMetaData(randomBoolean(), new ShardId("test", 0), metadataSnapshot)-->Line_9 $$ outStoreFileMetaData.writeTo(out)[ FD ]
Line_4 $$ TransportNodesListShardStoreMetaData.StoreFilesMetaData outStoreFileMetaData = new TransportNodesListShardStoreMetaData.StoreFilesMetaData(randomBoolean(), new ShardId("test", 0), metadataSnapshot)-->Line_14 $$ Iterator<StoreFileMetaData> outFiles = outStoreFileMetaData.iterator()[ FD ]
Line_2 $$ public void testStreamStoreFilesMetaData() throws Exception -->Line_5 $$ ByteArrayOutputStream outBuffer = new ByteArrayOutputStream()[ CD ]
Line_11 $$ InputStreamStreamInput in = new InputStreamStreamInput(inBuffer)-->Line_13 $$ TransportNodesListShardStoreMetaData.StoreFilesMetaData inStoreFileMetaData = TransportNodesListShardStoreMetaData.StoreFilesMetaData.readStoreFilesMetaData(in)[ FD ]
Line_4 $$ TransportNodesListShardStoreMetaData.StoreFilesMetaData outStoreFileMetaData = new TransportNodesListShardStoreMetaData.StoreFilesMetaData(randomBoolean(), new ShardId("test", 0), metadataSnapshot)-->Line_18 $$ assertThat(outStoreFileMetaData.syncId(), equalTo(inStoreFileMetaData.syncId()))[ FD ]
Line_7 $$ org.elasticsearch.Version targetNodeVersion = randomVersion(random())-->Line_12 $$ in.setVersion(targetNodeVersion)[ FD ]
Line_2 $$ public void testStreamStoreFilesMetaData() throws Exception -->Line_11 $$ InputStreamStreamInput in = new InputStreamStreamInput(inBuffer)[ CD ]
Line_13 $$ TransportNodesListShardStoreMetaData.StoreFilesMetaData inStoreFileMetaData = TransportNodesListShardStoreMetaData.StoreFilesMetaData.readStoreFilesMetaData(in)-->Line_18 $$ assertThat(outStoreFileMetaData.syncId(), equalTo(inStoreFileMetaData.syncId()))[ FD ]
Line_2 $$ public void testStreamStoreFilesMetaData() throws Exception -->Line_6 $$ OutputStreamStreamOutput out = new OutputStreamStreamOutput(outBuffer)[ CD ]
Line_2 $$ public void testStreamStoreFilesMetaData() throws Exception -->Line_12 $$ in.setVersion(targetNodeVersion)[ CD ]
Line_14 $$ Iterator<StoreFileMetaData> outFiles = outStoreFileMetaData.iterator()-->Line_16 $$ assertThat(inFile.name(), equalTo(outFiles.next().name()))[ FD ]
Line_6 $$ OutputStreamStreamOutput out = new OutputStreamStreamOutput(outBuffer)-->Line_8 $$ out.setVersion(targetNodeVersion)[ FD ]
Line_2 $$ public void testStreamStoreFilesMetaData() throws Exception -->Line_4 $$ TransportNodesListShardStoreMetaData.StoreFilesMetaData outStoreFileMetaData = new TransportNodesListShardStoreMetaData.StoreFilesMetaData(randomBoolean(), new ShardId("test", 0), metadataSnapshot)[ CD ]
