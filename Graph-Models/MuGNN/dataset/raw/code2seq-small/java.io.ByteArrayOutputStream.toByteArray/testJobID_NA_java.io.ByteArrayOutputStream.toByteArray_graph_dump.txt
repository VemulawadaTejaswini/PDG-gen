Line_3 $$ JobID jid = new JobID("001", 2)-->Line_6 $$ assertEquals(jid, JobID.read(new DataInputStream(new ByteArrayInputStream(out.toByteArray()))))[ FD ]
Line_2 $$ public void testJobID() throws IOException -->Line_7 $$ assertEquals("job_001_0001", JobID.getJobIDsPattern("001", 1))[ CD ]
Line_2 $$ public void testJobID() throws IOException -->Line_6 $$ assertEquals(jid, JobID.read(new DataInputStream(new ByteArrayInputStream(out.toByteArray()))))[ CD ]
Line_2 $$ public void testJobID() throws IOException -->Line_5 $$ jid.write(new DataOutputStream(out))[ CD ]
Line_4 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_6 $$ assertEquals(jid, JobID.read(new DataInputStream(new ByteArrayInputStream(out.toByteArray()))))[ FD ]
Line_2 $$ public void testJobID() throws IOException -->Line_3 $$ JobID jid = new JobID("001", 2)[ CD ]
Line_2 $$ public void testJobID() throws IOException -->Line_4 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()[ CD ]
Line_3 $$ JobID jid = new JobID("001", 2)-->Line_5 $$ jid.write(new DataOutputStream(out))[ FD ]
