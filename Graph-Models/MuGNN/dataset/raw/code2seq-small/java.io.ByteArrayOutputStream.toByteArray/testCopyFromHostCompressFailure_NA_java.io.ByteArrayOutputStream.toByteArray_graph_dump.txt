Line_7 $$ String replyHash = SecureShuffleUtils.generateHash(encHash.getBytes(), key)-->Line_9 $$ when(connection.getHeaderField(SecureShuffleUtils.HTTP_HEADER_REPLY_URL_HASH)).thenReturn(replyHash)[ FD ]
Line_10 $$ ShuffleHeader header = new ShuffleHeader(map1ID.toString(), 10, 10, 1)-->Line_12 $$ header.write(new DataOutputStream(bout))[ FD ]
Line_5 $$ InMemoryMapOutput<Text, Text> immo = mock(InMemoryMapOutput.class)-->Line_17 $$ when(mm.reserve(any(TaskAttemptID.class), anyLong(), anyInt())).thenReturn(immo)[ FD ]
Line_11 $$ ByteArrayOutputStream bout = new ByteArrayOutputStream()-->Line_13 $$ ByteArrayInputStream in = new ByteArrayInputStream(bout.toByteArray())[ FD ]
Line_13 $$ ByteArrayInputStream in = new ByteArrayInputStream(bout.toByteArray())-->Line_14 $$ when(connection.getInputStream()).thenReturn(in)[ FD ]
Line_6 $$ Fetcher<Text, Text> underTest = new FakeFetcher<Text, Text>(job, id, ss, mm, r, metrics, except, key, connection)-->Line_19 $$ underTest.copyFromHost(host)[ FD ]
Line_5 $$ InMemoryMapOutput<Text, Text> immo = mock(InMemoryMapOutput.class)-->Line_18 $$ doThrow(new java.lang.InternalError()).when(immo).shuffle(any(MapHost.class), any(InputStream.class), anyLong(), anyLong(), any(ShuffleClientMetrics.class), any(Reporter.class))[ FD ]
