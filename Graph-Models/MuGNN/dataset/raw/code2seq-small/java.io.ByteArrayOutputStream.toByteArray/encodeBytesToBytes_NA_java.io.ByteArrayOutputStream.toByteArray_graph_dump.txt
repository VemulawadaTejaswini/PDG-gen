Line_39 $$ java.util.zip.GZIPOutputStream gzos = null-->Line_47 $$ gzos.close()[ FD ]
Line_45 $$ gzos = new java.util.zip.GZIPOutputStream(b64os)-->Line_47 $$ gzos.close()[ FD ]
Line_92 $$ for (; d < len2; d += 3, e += 4) -->Line_93 $$ encode3to4(source, d + off, 3, outBuff, e, options)[ CD ]
Line_89 $$ int e = 0-->Line_105 $$ e += 4[ FD ]
Line_87 $$ byte[] outBuff = new byte[encLen]-->Line_93 $$ encode3to4(source, d + off, 3, outBuff, e, options)[ FD ]
Line_87 $$ byte[] outBuff = new byte[encLen]-->Line_115 $$ System.arraycopy(outBuff, 0, finalOut, 0, e)[ FD ]
Line_105 $$ e += 4-->Line_115 $$ System.arraycopy(outBuff, 0, finalOut, 0, e)[ FD ]
Line_92 $$ for (; d < len2; d += 3, e += 4) -->Line_95 $$ if (breakLines && lineLength >= MAX_LINE_LENGTH) [ CD ]
Line_92 $$ for (; d < len2; d += 3, e += 4) -->Line_105 $$ e += 4[ FD ]
Line_89 $$ int e = 0-->Line_104 $$ encode3to4(source, d + off, len - d, outBuff, e, options)[ FD ]
Line_87 $$ byte[] outBuff = new byte[encLen]-->Line_104 $$ encode3to4(source, d + off, len - d, outBuff, e, options)[ FD ]
Line_92 $$ for (; d < len2; d += 3, e += 4) -->Line_94 $$ lineLength += 4[ CD ]
Line_40 $$ Base64.OutputStream b64os = null-->Line_60 $$ b64os.close()[ FD ]
Line_45 $$ gzos = new java.util.zip.GZIPOutputStream(b64os)-->Line_56 $$ gzos.close()[ FD ]
Line_95 $$ if (breakLines && lineLength >= MAX_LINE_LENGTH) -->Line_97 $$ e++[ CD ]
Line_89 $$ int e = 0-->Line_115 $$ System.arraycopy(outBuff, 0, finalOut, 0, e)[ FD ]
Line_39 $$ java.util.zip.GZIPOutputStream gzos = null-->Line_46 $$ gzos.write(source, off, len)[ FD ]
Line_90 $$ int len2 = len - 2-->Line_92 $$ for (; d < len2; d += 3, e += 4) [ FD ]
Line_92 $$ for (; d < len2; d += 3, e += 4) -->Line_93 $$ encode3to4(source, d + off, 3, outBuff, e, options)[ FD ]
Line_91 $$ int lineLength = 0-->Line_98 $$ lineLength = 0[ FD ]
Line_39 $$ java.util.zip.GZIPOutputStream gzos = null-->Line_56 $$ gzos.close()[ FD ]
Line_89 $$ int e = 0-->Line_97 $$ e++[ FD ]
Line_92 $$ for (; d < len2; d += 3, e += 4) -->Line_104 $$ encode3to4(source, d + off, len - d, outBuff, e, options)[ FD ]
Line_38 $$ java.io.ByteArrayOutputStream baos = null-->Line_64 $$ baos.close()[ FD ]
Line_95 $$ if (breakLines && lineLength >= MAX_LINE_LENGTH) -->Line_98 $$ lineLength = 0[ CD ]
Line_39 $$ java.util.zip.GZIPOutputStream gzos = null-->Line_45 $$ gzos = new java.util.zip.GZIPOutputStream(b64os)[ FD ]
Line_88 $$ int d = 0-->Line_92 $$ for (; d < len2; d += 3, e += 4) [ FD ]
Line_73 $$ boolean breakLines = (options & DO_BREAK_LINES) != 0-->Line_95 $$ if (breakLines && lineLength >= MAX_LINE_LENGTH) [ FD ]
Line_91 $$ int lineLength = 0-->Line_94 $$ lineLength += 4[ FD ]
Line_92 $$ for (; d < len2; d += 3, e += 4) -->Line_115 $$ System.arraycopy(outBuff, 0, finalOut, 0, e)[ FD ]
Line_44 $$ b64os = new Base64.OutputStream(baos, ENCODE | options)-->Line_60 $$ b64os.close()[ FD ]
Line_94 $$ lineLength += 4-->Line_98 $$ lineLength = 0[ FD ]
Line_89 $$ int e = 0-->Line_93 $$ encode3to4(source, d + off, 3, outBuff, e, options)[ FD ]
Line_40 $$ Base64.OutputStream b64os = null-->Line_44 $$ b64os = new Base64.OutputStream(baos, ENCODE | options)[ FD ]
Line_92 $$ for (; d < len2; d += 3, e += 4) -->Line_97 $$ e++[ FD ]
Line_89 $$ int e = 0-->Line_92 $$ for (; d < len2; d += 3, e += 4) [ FD ]
Line_45 $$ gzos = new java.util.zip.GZIPOutputStream(b64os)-->Line_46 $$ gzos.write(source, off, len)[ FD ]
