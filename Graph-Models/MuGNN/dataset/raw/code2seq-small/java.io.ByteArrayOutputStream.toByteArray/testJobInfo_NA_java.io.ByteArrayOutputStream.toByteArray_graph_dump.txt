Line_6 $$ JobInfo info = new JobInfo(jid, user, path)-->Line_11 $$ assertEquals(info.getJobID().toString(), copyinfo.getJobID().toString())[ FD ]
Line_6 $$ JobInfo info = new JobInfo(jid, user, path)-->Line_13 $$ assertEquals(info.getUser().toString(), copyinfo.getUser().toString())[ FD ]
Line_2 $$ public void testJobInfo() throws IOException -->Line_8 $$ info.write(new DataOutputStream(out))[ CD ]
Line_2 $$ public void testJobInfo() throws IOException -->Line_13 $$ assertEquals(info.getUser().toString(), copyinfo.getUser().toString())[ CD ]
Line_9 $$ JobInfo copyinfo = new JobInfo()-->Line_11 $$ assertEquals(info.getJobID().toString(), copyinfo.getJobID().toString())[ FD ]
Line_2 $$ public void testJobInfo() throws IOException -->Line_12 $$ assertEquals(info.getJobSubmitDir().getName(), copyinfo.getJobSubmitDir().getName())[ CD ]
Line_9 $$ JobInfo copyinfo = new JobInfo()-->Line_12 $$ assertEquals(info.getJobSubmitDir().getName(), copyinfo.getJobSubmitDir().getName())[ FD ]
Line_2 $$ public void testJobInfo() throws IOException -->Line_9 $$ JobInfo copyinfo = new JobInfo()[ CD ]
Line_2 $$ public void testJobInfo() throws IOException -->Line_4 $$ Text user = new Text("User")[ CD ]
Line_2 $$ public void testJobInfo() throws IOException -->Line_11 $$ assertEquals(info.getJobID().toString(), copyinfo.getJobID().toString())[ CD ]
Line_6 $$ JobInfo info = new JobInfo(jid, user, path)-->Line_12 $$ assertEquals(info.getJobSubmitDir().getName(), copyinfo.getJobSubmitDir().getName())[ FD ]
Line_2 $$ public void testJobInfo() throws IOException -->Line_6 $$ JobInfo info = new JobInfo(jid, user, path)[ CD ]
Line_2 $$ public void testJobInfo() throws IOException -->Line_10 $$ copyinfo.readFields(new DataInputStream(new ByteArrayInputStream(out.toByteArray())))[ CD ]
Line_9 $$ JobInfo copyinfo = new JobInfo()-->Line_10 $$ copyinfo.readFields(new DataInputStream(new ByteArrayInputStream(out.toByteArray())))[ FD ]
Line_9 $$ JobInfo copyinfo = new JobInfo()-->Line_13 $$ assertEquals(info.getUser().toString(), copyinfo.getUser().toString())[ FD ]
Line_2 $$ public void testJobInfo() throws IOException -->Line_3 $$ JobID jid = new JobID("001", 1)[ CD ]
Line_7 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_10 $$ copyinfo.readFields(new DataInputStream(new ByteArrayInputStream(out.toByteArray())))[ FD ]
Line_6 $$ JobInfo info = new JobInfo(jid, user, path)-->Line_8 $$ info.write(new DataOutputStream(out))[ FD ]
Line_2 $$ public void testJobInfo() throws IOException -->Line_5 $$ Path path = new Path("/tmp/test")[ CD ]
Line_2 $$ public void testJobInfo() throws IOException -->Line_7 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()[ CD ]
