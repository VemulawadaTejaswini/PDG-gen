Line_2 $$ public void testMetadataSnapshotStreaming() throws Exception -->Line_7 $$ out.setVersion(targetNodeVersion)[ CD ]
Line_2 $$ public void testMetadataSnapshotStreaming() throws Exception -->Line_9 $$ ByteArrayInputStream inBuffer = new ByteArrayInputStream(outBuffer.toByteArray())[ CD ]
Line_10 $$ InputStreamStreamInput in = new InputStreamStreamInput(inBuffer)-->Line_11 $$ in.setVersion(targetNodeVersion)[ FD ]
Line_5 $$ ByteArrayOutputStream outBuffer = new ByteArrayOutputStream()-->Line_9 $$ ByteArrayInputStream inBuffer = new ByteArrayInputStream(outBuffer.toByteArray())[ FD ]
Line_2 $$ public void testMetadataSnapshotStreaming() throws Exception -->Line_18 $$ assertThat(origEntries.size(), equalTo(0))[ CD ]
Line_12 $$ Store.MetadataSnapshot inMetadataSnapshot = new Store.MetadataSnapshot(in)-->Line_15 $$ for (Map.Entry<String, StoreFileMetaData> entry : inMetadataSnapshot.asMap().entrySet()) [ FD ]
Line_4 $$ org.elasticsearch.Version targetNodeVersion = randomVersion(random())-->Line_7 $$ out.setVersion(targetNodeVersion)[ FD ]
Line_13 $$ Map<String, StoreFileMetaData> origEntries = new HashMap()-->Line_14 $$ origEntries.putAll(outMetadataSnapshot.asMap())[ FD ]
Line_2 $$ public void testMetadataSnapshotStreaming() throws Exception -->Line_6 $$ OutputStreamStreamOutput out = new OutputStreamStreamOutput(outBuffer)[ CD ]
Line_2 $$ public void testMetadataSnapshotStreaming() throws Exception -->Line_11 $$ in.setVersion(targetNodeVersion)[ CD ]
Line_3 $$ Store.MetadataSnapshot outMetadataSnapshot = createMetaDataSnapshot()-->Line_8 $$ outMetadataSnapshot.writeTo(out)[ FD ]
Line_6 $$ OutputStreamStreamOutput out = new OutputStreamStreamOutput(outBuffer)-->Line_7 $$ out.setVersion(targetNodeVersion)[ FD ]
Line_15 $$ for (Map.Entry<String, StoreFileMetaData> entry : inMetadataSnapshot.asMap().entrySet()) -->Line_16 $$ assertThat(entry.getValue().name(), equalTo(origEntries.remove(entry.getKey()).name()))[ FD ]
Line_2 $$ public void testMetadataSnapshotStreaming() throws Exception -->Line_12 $$ Store.MetadataSnapshot inMetadataSnapshot = new Store.MetadataSnapshot(in)[ CD ]
Line_13 $$ Map<String, StoreFileMetaData> origEntries = new HashMap()-->Line_16 $$ assertThat(entry.getValue().name(), equalTo(origEntries.remove(entry.getKey()).name()))[ FD ]
Line_2 $$ public void testMetadataSnapshotStreaming() throws Exception -->Line_19 $$ assertThat(inMetadataSnapshot.getCommitUserData(), equalTo(outMetadataSnapshot.getCommitUserData()))[ CD ]
Line_4 $$ org.elasticsearch.Version targetNodeVersion = randomVersion(random())-->Line_11 $$ in.setVersion(targetNodeVersion)[ FD ]
Line_2 $$ public void testMetadataSnapshotStreaming() throws Exception -->Line_10 $$ InputStreamStreamInput in = new InputStreamStreamInput(inBuffer)[ CD ]
Line_3 $$ Store.MetadataSnapshot outMetadataSnapshot = createMetaDataSnapshot()-->Line_19 $$ assertThat(inMetadataSnapshot.getCommitUserData(), equalTo(outMetadataSnapshot.getCommitUserData()))[ FD ]
Line_2 $$ public void testMetadataSnapshotStreaming() throws Exception -->Line_14 $$ origEntries.putAll(outMetadataSnapshot.asMap())[ CD ]
Line_2 $$ public void testMetadataSnapshotStreaming() throws Exception -->Line_13 $$ Map<String, StoreFileMetaData> origEntries = new HashMap()[ CD ]
Line_2 $$ public void testMetadataSnapshotStreaming() throws Exception -->Line_5 $$ ByteArrayOutputStream outBuffer = new ByteArrayOutputStream()[ CD ]
Line_2 $$ public void testMetadataSnapshotStreaming() throws Exception -->Line_8 $$ outMetadataSnapshot.writeTo(out)[ CD ]
Line_13 $$ Map<String, StoreFileMetaData> origEntries = new HashMap()-->Line_18 $$ assertThat(origEntries.size(), equalTo(0))[ FD ]
Line_3 $$ Store.MetadataSnapshot outMetadataSnapshot = createMetaDataSnapshot()-->Line_14 $$ origEntries.putAll(outMetadataSnapshot.asMap())[ FD ]
Line_6 $$ OutputStreamStreamOutput out = new OutputStreamStreamOutput(outBuffer)-->Line_8 $$ outMetadataSnapshot.writeTo(out)[ FD ]
Line_12 $$ Store.MetadataSnapshot inMetadataSnapshot = new Store.MetadataSnapshot(in)-->Line_19 $$ assertThat(inMetadataSnapshot.getCommitUserData(), equalTo(outMetadataSnapshot.getCommitUserData()))[ FD ]
Line_2 $$ public void testMetadataSnapshotStreaming() throws Exception -->Line_4 $$ org.elasticsearch.Version targetNodeVersion = randomVersion(random())[ CD ]
Line_2 $$ public void testMetadataSnapshotStreaming() throws Exception -->Line_3 $$ Store.MetadataSnapshot outMetadataSnapshot = createMetaDataSnapshot()[ CD ]
