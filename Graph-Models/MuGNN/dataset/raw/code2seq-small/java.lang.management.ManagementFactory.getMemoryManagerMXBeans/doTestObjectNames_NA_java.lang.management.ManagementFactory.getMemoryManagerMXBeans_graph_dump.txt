Line_2 $$ protected void doTestObjectNames(FabricStatus fabricStatus) -->Line_8 $$ assertEquals(ManagementFactory.getMemoryPoolMXBeans(), fabricStatus.getMemoryPoolMXBeans())[ CD ]
Line_2 $$ protected void doTestObjectNames(FabricStatus fabricStatus) -->Line_5 $$ assertEquals(ManagementFactory.getGarbageCollectorMXBeans(), fabricStatus.getGarbageCollectorMXBeans())[ FD ]
Line_2 $$ protected void doTestObjectNames(FabricStatus fabricStatus) -->Line_6 $$ assertEquals(ManagementFactory.getMemoryMXBean(), fabricStatus.getMemoryMXBean())[ CD ]
Line_2 $$ protected void doTestObjectNames(FabricStatus fabricStatus) -->Line_10 $$ assertEquals(ManagementFactory.getPlatformMXBeans(BufferPoolMXBean.class), fabricStatus.getBufferPoolMXBeans())[ CD ]
Line_2 $$ protected void doTestObjectNames(FabricStatus fabricStatus) -->Line_9 $$ assertEquals(ManagementFactory.getOperatingSystemMXBean(), fabricStatus.getAdvancedOperatingSystemMXBean())[ FD ]
Line_2 $$ protected void doTestObjectNames(FabricStatus fabricStatus) -->Line_5 $$ assertEquals(ManagementFactory.getGarbageCollectorMXBeans(), fabricStatus.getGarbageCollectorMXBeans())[ CD ]
Line_2 $$ protected void doTestObjectNames(FabricStatus fabricStatus) -->Line_12 $$ assertEquals(ManagementFactory.getRuntimeMXBean(), fabricStatus.getRuntimeMXBean())[ FD ]
Line_2 $$ protected void doTestObjectNames(FabricStatus fabricStatus) -->Line_11 $$ assertEquals(ManagementFactory.getPlatformMXBean(PlatformLoggingMXBean.class), fabricStatus.getPlatformLoggingMXBean())[ FD ]
Line_2 $$ protected void doTestObjectNames(FabricStatus fabricStatus) -->Line_3 $$ assertEquals(ManagementFactory.getClassLoadingMXBean(), fabricStatus.getClassLoadingMXBean())[ FD ]
Line_2 $$ protected void doTestObjectNames(FabricStatus fabricStatus) -->Line_13 $$ assertEquals(ManagementFactory.getThreadMXBean(), fabricStatus.getThreadMXBean())[ FD ]
Line_2 $$ protected void doTestObjectNames(FabricStatus fabricStatus) -->Line_7 $$ assertEquals(ManagementFactory.getMemoryManagerMXBeans(), fabricStatus.getMemoryManagerMXBeans())[ FD ]
Line_2 $$ protected void doTestObjectNames(FabricStatus fabricStatus) -->Line_11 $$ assertEquals(ManagementFactory.getPlatformMXBean(PlatformLoggingMXBean.class), fabricStatus.getPlatformLoggingMXBean())[ CD ]
Line_2 $$ protected void doTestObjectNames(FabricStatus fabricStatus) -->Line_9 $$ assertEquals(ManagementFactory.getOperatingSystemMXBean(), fabricStatus.getAdvancedOperatingSystemMXBean())[ CD ]
Line_2 $$ protected void doTestObjectNames(FabricStatus fabricStatus) -->Line_3 $$ assertEquals(ManagementFactory.getClassLoadingMXBean(), fabricStatus.getClassLoadingMXBean())[ CD ]
Line_2 $$ protected void doTestObjectNames(FabricStatus fabricStatus) -->Line_10 $$ assertEquals(ManagementFactory.getPlatformMXBeans(BufferPoolMXBean.class), fabricStatus.getBufferPoolMXBeans())[ FD ]
Line_2 $$ protected void doTestObjectNames(FabricStatus fabricStatus) -->Line_6 $$ assertEquals(ManagementFactory.getMemoryMXBean(), fabricStatus.getMemoryMXBean())[ FD ]
Line_2 $$ protected void doTestObjectNames(FabricStatus fabricStatus) -->Line_8 $$ assertEquals(ManagementFactory.getMemoryPoolMXBeans(), fabricStatus.getMemoryPoolMXBeans())[ FD ]
Line_2 $$ protected void doTestObjectNames(FabricStatus fabricStatus) -->Line_12 $$ assertEquals(ManagementFactory.getRuntimeMXBean(), fabricStatus.getRuntimeMXBean())[ CD ]
Line_2 $$ protected void doTestObjectNames(FabricStatus fabricStatus) -->Line_7 $$ assertEquals(ManagementFactory.getMemoryManagerMXBeans(), fabricStatus.getMemoryManagerMXBeans())[ CD ]
Line_2 $$ protected void doTestObjectNames(FabricStatus fabricStatus) -->Line_4 $$ assertEquals(ManagementFactory.getCompilationMXBean(), fabricStatus.getCompilationMXBean())[ CD ]
Line_2 $$ protected void doTestObjectNames(FabricStatus fabricStatus) -->Line_13 $$ assertEquals(ManagementFactory.getThreadMXBean(), fabricStatus.getThreadMXBean())[ CD ]
Line_2 $$ protected void doTestObjectNames(FabricStatus fabricStatus) -->Line_4 $$ assertEquals(ManagementFactory.getCompilationMXBean(), fabricStatus.getCompilationMXBean())[ FD ]
