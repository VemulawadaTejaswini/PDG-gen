Line_2 $$ public static String replaceTokens(String template, Pattern pattern, Map<String, String> replacements) -->Line_3 $$ StringBuffer sb = new StringBuffer()[ CD ]
Line_2 $$ public static String replaceTokens(String template, Pattern pattern, Map<String, String> replacements) -->Line_13 $$ return sb.toString()[ CD ]
Line_5 $$ while (matcher.find()) -->Line_7 $$ if (replacement == null) [ CD ]
Line_3 $$ StringBuffer sb = new StringBuffer()-->Line_10 $$ matcher.appendReplacement(sb, Matcher.quoteReplacement(replacement))[ FD ]
Line_2 $$ public static String replaceTokens(String template, Pattern pattern, Map<String, String> replacements) -->Line_4 $$ Matcher matcher = pattern.matcher(template)[ FD ]
Line_6 $$ String replacement = replacements.get(matcher.group(1))-->Line_7 $$ if (replacement == null) [ FD ]
Line_2 $$ public static String replaceTokens(String template, Pattern pattern, Map<String, String> replacements) -->Line_6 $$ String replacement = replacements.get(matcher.group(1))[ FD ]
Line_4 $$ Matcher matcher = pattern.matcher(template)-->Line_6 $$ String replacement = replacements.get(matcher.group(1))[ FD ]
Line_4 $$ Matcher matcher = pattern.matcher(template)-->Line_12 $$ matcher.appendTail(sb)[ FD ]
Line_3 $$ StringBuffer sb = new StringBuffer()-->Line_12 $$ matcher.appendTail(sb)[ FD ]
Line_3 $$ StringBuffer sb = new StringBuffer()-->Line_13 $$ return sb.toString()[ FD ]
Line_7 $$ if (replacement == null) -->Line_8 $$ replacement = ""[ CD ]
Line_2 $$ public static String replaceTokens(String template, Pattern pattern, Map<String, String> replacements) -->Line_12 $$ matcher.appendTail(sb)[ CD ]
Line_6 $$ String replacement = replacements.get(matcher.group(1))-->Line_10 $$ matcher.appendReplacement(sb, Matcher.quoteReplacement(replacement))[ FD ]
Line_8 $$ replacement = ""-->Line_7 $$ if (replacement == null) [ FD ]
Line_4 $$ Matcher matcher = pattern.matcher(template)-->Line_10 $$ matcher.appendReplacement(sb, Matcher.quoteReplacement(replacement))[ FD ]
Line_5 $$ while (matcher.find()) -->Line_10 $$ matcher.appendReplacement(sb, Matcher.quoteReplacement(replacement))[ CD ]
Line_5 $$ while (matcher.find()) -->Line_6 $$ String replacement = replacements.get(matcher.group(1))[ CD ]
Line_8 $$ replacement = ""-->Line_10 $$ matcher.appendReplacement(sb, Matcher.quoteReplacement(replacement))[ FD ]
Line_2 $$ public static String replaceTokens(String template, Pattern pattern, Map<String, String> replacements) -->Line_4 $$ Matcher matcher = pattern.matcher(template)[ CD ]
Line_2 $$ public static String replaceTokens(String template, Pattern pattern, Map<String, String> replacements) -->Line_5 $$ while (matcher.find()) [ CD ]
Line_6 $$ String replacement = replacements.get(matcher.group(1))-->Line_8 $$ replacement = ""[ FD ]
Line_4 $$ Matcher matcher = pattern.matcher(template)-->Line_5 $$ while (matcher.find()) [ FD ]
