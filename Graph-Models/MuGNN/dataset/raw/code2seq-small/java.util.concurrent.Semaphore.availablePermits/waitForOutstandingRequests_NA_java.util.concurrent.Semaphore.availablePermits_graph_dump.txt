Line_2 $$ private void waitForOutstandingRequests(TimeValue timeOut, Semaphore requestsOutstanding, int maxRequests, String name) -->Line_6 $$ logger.info("[[ FD ]
Line_2 $$ private void waitForOutstandingRequests(TimeValue timeOut, Semaphore requestsOutstanding, int maxRequests, String name) -->Line_3 $$ long start = System.currentTimeMillis()[ CD ]
Line_2 $$ private void waitForOutstandingRequests(TimeValue timeOut, Semaphore requestsOutstanding, int maxRequests, String name) -->Line_4 $$ do [ FD ]
Line_4 $$ do -->Line_5 $$ long msRemaining = timeOut.getMillis() - (System.currentTimeMillis() - start)[ CD ]
Line_2 $$ private void waitForOutstandingRequests(TimeValue timeOut, Semaphore requestsOutstanding, int maxRequests, String name) -->Line_8 $$ requestsOutstanding.tryAcquire(maxRequests, msRemaining, TimeUnit.MILLISECONDS)[ FD ]
Line_2 $$ private void waitForOutstandingRequests(TimeValue timeOut, Semaphore requestsOutstanding, int maxRequests, String name) -->Line_4 $$ do [ CD ]
Line_2 $$ private void waitForOutstandingRequests(TimeValue timeOut, Semaphore requestsOutstanding, int maxRequests, String name) -->Line_5 $$ long msRemaining = timeOut.getMillis() - (System.currentTimeMillis() - start)[ FD ]
Line_5 $$ long msRemaining = timeOut.getMillis() - (System.currentTimeMillis() - start)-->Line_8 $$ requestsOutstanding.tryAcquire(maxRequests, msRemaining, TimeUnit.MILLISECONDS)[ FD ]
Line_5 $$ long msRemaining = timeOut.getMillis() - (System.currentTimeMillis() - start)-->Line_6 $$ logger.info("[[ FD ]
Line_4 $$ do -->Line_6 $$ logger.info("[[ CD ]
