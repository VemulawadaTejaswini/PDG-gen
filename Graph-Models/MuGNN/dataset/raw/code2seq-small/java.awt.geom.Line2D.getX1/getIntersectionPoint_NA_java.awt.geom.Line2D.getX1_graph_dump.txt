Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_7 $$ double secondDeltaX = aSecond.getX2() - aSecond.getX1()[ FD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_5 $$ double kFirst = firstDeltaY / firstDeltaX[ CD ]
Line_31 $$ if (0 == firstDeltaX) -->Line_33 $$ yIntersection = kSecond * xIntersection + bSecond[ CD ]
Line_24 $$ if ((0 == firstDeltaX) && (0 == secondDeltaY)) -->Line_25 $$ xIntersection = aFirst.getX1()[ CD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_26 $$ yIntersection = aSecond.getY1()[ FD ]
Line_3 $$ double firstDeltaX = aFirst.getX2() - aFirst.getX1()-->Line_31 $$ if (0 == firstDeltaX) [ FD ]
Line_27 $$ if ((0 == secondDeltaX) && (0 == firstDeltaY)) -->Line_28 $$ xIntersection = aSecond.getX1()[ CD ]
Line_18 $$ if (firstDeltaX == secondDeltaX && 0 == firstDeltaX) -->Line_19 $$ return null[ CD ]
Line_6 $$ double bFirst = aFirst.getY1() - kFirst * aFirst.getX1()-->Line_36 $$ yIntersection = kFirst * xIntersection + bFirst[ FD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_13 $$ double deltaK = (kFirst - kSecond)[ CD ]
Line_11 $$ double xIntersection = -100000000-->Line_25 $$ xIntersection = aFirst.getX1()[ FD ]
Line_13 $$ double deltaK = (kFirst - kSecond)-->Line_17 $$ if (Double.isInfinite(deltaK) || (0 == deltaK)) [ FD ]
Line_6 $$ double bFirst = aFirst.getY1() - kFirst * aFirst.getX1()-->Line_41 $$ yIntersection = kFirst * xIntersection + bFirst[ FD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_3 $$ double firstDeltaX = aFirst.getX2() - aFirst.getX1()[ CD ]
Line_12 $$ double yIntersection = -100000000-->Line_29 $$ yIntersection = aFirst.getY1()[ FD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_14 $$ if (linesAreAngledAndParallel(kFirst, kSecond)) [ CD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_43 $$ return new Point((int) xIntersection, (int) yIntersection)[ CD ]
Line_25 $$ xIntersection = aFirst.getX1()-->Line_40 $$ xIntersection = (bSecond - bFirst) / deltaK[ FD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_4 $$ double firstDeltaY = aFirst.getY2() - aFirst.getY1()[ FD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_29 $$ yIntersection = aFirst.getY1()[ FD ]
Line_29 $$ yIntersection = aFirst.getY1()-->Line_36 $$ yIntersection = kFirst * xIntersection + bFirst[ FD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_6 $$ double bFirst = aFirst.getY1() - kFirst * aFirst.getX1()[ CD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_12 $$ double yIntersection = -100000000[ CD ]
Line_25 $$ xIntersection = aFirst.getX1()-->Line_35 $$ xIntersection = aSecond.getX1()[ FD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_10 $$ double bSecond = aSecond.getY1() - kSecond * aSecond.getX1()[ CD ]
Line_12 $$ double yIntersection = -100000000-->Line_26 $$ yIntersection = aSecond.getY1()[ FD ]
Line_28 $$ xIntersection = aSecond.getX1()-->Line_35 $$ xIntersection = aSecond.getX1()[ FD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_17 $$ if (Double.isInfinite(deltaK) || (0 == deltaK)) [ CD ]
Line_36 $$ yIntersection = kFirst * xIntersection + bFirst-->Line_41 $$ yIntersection = kFirst * xIntersection + bFirst[ FD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_28 $$ xIntersection = aSecond.getX1()[ FD ]
Line_33 $$ yIntersection = kSecond * xIntersection + bSecond-->Line_36 $$ yIntersection = kFirst * xIntersection + bFirst[ FD ]
Line_31 $$ if (0 == firstDeltaX) -->Line_36 $$ yIntersection = kFirst * xIntersection + bFirst[ CD ]
Line_31 $$ if (0 == firstDeltaX) -->Line_35 $$ xIntersection = aSecond.getX1()[ CD ]
Line_17 $$ if (Double.isInfinite(deltaK) || (0 == deltaK)) -->Line_40 $$ xIntersection = (bSecond - bFirst) / deltaK[ CD ]
Line_12 $$ double yIntersection = -100000000-->Line_41 $$ yIntersection = kFirst * xIntersection + bFirst[ FD ]
Line_5 $$ double kFirst = firstDeltaY / firstDeltaX-->Line_14 $$ if (linesAreAngledAndParallel(kFirst, kSecond)) [ FD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_9 $$ double kSecond = secondDeltaY / secondDeltaX[ CD ]
Line_27 $$ if ((0 == secondDeltaX) && (0 == firstDeltaY)) -->Line_29 $$ yIntersection = aFirst.getY1()[ CD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_8 $$ double secondDeltaY = aSecond.getY2() - aSecond.getY1()[ CD ]
Line_17 $$ if (Double.isInfinite(deltaK) || (0 == deltaK)) -->Line_41 $$ yIntersection = kFirst * xIntersection + bFirst[ CD ]
Line_11 $$ double xIntersection = -100000000-->Line_32 $$ xIntersection = aFirst.getX1()[ FD ]
Line_25 $$ xIntersection = aFirst.getX1()-->Line_32 $$ xIntersection = aFirst.getX1()[ FD ]
Line_10 $$ double bSecond = aSecond.getY1() - kSecond * aSecond.getX1()-->Line_33 $$ yIntersection = kSecond * xIntersection + bSecond[ FD ]
Line_21 $$ if (firstDeltaY == secondDeltaY && 0 == firstDeltaY) -->Line_22 $$ return null[ CD ]
Line_29 $$ yIntersection = aFirst.getY1()-->Line_33 $$ yIntersection = kSecond * xIntersection + bSecond[ FD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_3 $$ double firstDeltaX = aFirst.getX2() - aFirst.getX1()[ FD ]
Line_17 $$ if (Double.isInfinite(deltaK) || (0 == deltaK)) -->Line_18 $$ if (firstDeltaX == secondDeltaX && 0 == firstDeltaX) [ CD ]
Line_9 $$ double kSecond = secondDeltaY / secondDeltaX-->Line_14 $$ if (linesAreAngledAndParallel(kFirst, kSecond)) [ FD ]
Line_33 $$ yIntersection = kSecond * xIntersection + bSecond-->Line_41 $$ yIntersection = kFirst * xIntersection + bFirst[ FD ]
Line_11 $$ double xIntersection = -100000000-->Line_28 $$ xIntersection = aSecond.getX1()[ FD ]
Line_11 $$ double xIntersection = -100000000-->Line_35 $$ xIntersection = aSecond.getX1()[ FD ]
Line_29 $$ yIntersection = aFirst.getY1()-->Line_41 $$ yIntersection = kFirst * xIntersection + bFirst[ FD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_4 $$ double firstDeltaY = aFirst.getY2() - aFirst.getY1()[ CD ]
Line_32 $$ xIntersection = aFirst.getX1()-->Line_35 $$ xIntersection = aSecond.getX1()[ FD ]
Line_32 $$ xIntersection = aFirst.getX1()-->Line_40 $$ xIntersection = (bSecond - bFirst) / deltaK[ FD ]
Line_24 $$ if ((0 == firstDeltaX) && (0 == secondDeltaY)) -->Line_26 $$ yIntersection = aSecond.getY1()[ CD ]
Line_12 $$ double yIntersection = -100000000-->Line_36 $$ yIntersection = kFirst * xIntersection + bFirst[ FD ]
Line_14 $$ if (linesAreAngledAndParallel(kFirst, kSecond)) -->Line_15 $$ return null[ CD ]
Line_26 $$ yIntersection = aSecond.getY1()-->Line_41 $$ yIntersection = kFirst * xIntersection + bFirst[ FD ]
Line_25 $$ xIntersection = aFirst.getX1()-->Line_28 $$ xIntersection = aSecond.getX1()[ FD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_11 $$ double xIntersection = -100000000[ CD ]
Line_28 $$ xIntersection = aSecond.getX1()-->Line_40 $$ xIntersection = (bSecond - bFirst) / deltaK[ FD ]
Line_31 $$ if (0 == firstDeltaX) -->Line_32 $$ xIntersection = aFirst.getX1()[ CD ]
Line_26 $$ yIntersection = aSecond.getY1()-->Line_36 $$ yIntersection = kFirst * xIntersection + bFirst[ FD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_8 $$ double secondDeltaY = aSecond.getY2() - aSecond.getY1()[ FD ]
Line_13 $$ double deltaK = (kFirst - kSecond)-->Line_40 $$ xIntersection = (bSecond - bFirst) / deltaK[ FD ]
Line_12 $$ double yIntersection = -100000000-->Line_33 $$ yIntersection = kSecond * xIntersection + bSecond[ FD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_25 $$ xIntersection = aFirst.getX1()[ FD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_7 $$ double secondDeltaX = aSecond.getX2() - aSecond.getX1()[ CD ]
Line_17 $$ if (Double.isInfinite(deltaK) || (0 == deltaK)) -->Line_24 $$ if ((0 == firstDeltaX) && (0 == secondDeltaY)) [ CD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_10 $$ double bSecond = aSecond.getY1() - kSecond * aSecond.getX1()[ FD ]
Line_27 $$ if ((0 == secondDeltaX) && (0 == firstDeltaY)) -->Line_31 $$ if (0 == firstDeltaX) [ CD ]
Line_17 $$ if (Double.isInfinite(deltaK) || (0 == deltaK)) -->Line_21 $$ if (firstDeltaY == secondDeltaY && 0 == firstDeltaY) [ CD ]
Line_26 $$ yIntersection = aSecond.getY1()-->Line_33 $$ yIntersection = kSecond * xIntersection + bSecond[ FD ]
Line_26 $$ yIntersection = aSecond.getY1()-->Line_29 $$ yIntersection = aFirst.getY1()[ FD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_35 $$ xIntersection = aSecond.getX1()[ FD ]
Line_24 $$ if ((0 == firstDeltaX) && (0 == secondDeltaY)) -->Line_27 $$ if ((0 == secondDeltaX) && (0 == firstDeltaY)) [ CD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_32 $$ xIntersection = aFirst.getX1()[ FD ]
Line_11 $$ double xIntersection = -100000000-->Line_40 $$ xIntersection = (bSecond - bFirst) / deltaK[ FD ]
Line_35 $$ xIntersection = aSecond.getX1()-->Line_40 $$ xIntersection = (bSecond - bFirst) / deltaK[ FD ]
Line_2 $$ public static Point getIntersectionPoint(Line2D aFirst, Line2D aSecond) -->Line_6 $$ double bFirst = aFirst.getY1() - kFirst * aFirst.getX1()[ FD ]
Line_28 $$ xIntersection = aSecond.getX1()-->Line_32 $$ xIntersection = aFirst.getX1()[ FD ]
