Line_4 $$ FileLock fileLock = null-->Line_23 $$ FileUtil.releaseFileLock(fileLock)[ FD ]
Line_2 $$ public static boolean processPathCallable(PathCallable pathCallable) -->Line_18 $$ pathCallable.call()[ FD ]
Line_15 $$ fileLock = FileUtil.getFileLock(fileChannel)-->Line_23 $$ FileUtil.releaseFileLock(fileLock)[ FD ]
Line_15 $$ fileLock = FileUtil.getFileLock(fileChannel)-->Line_17 $$ if (fileLock != null) [ FD ]
Line_3 $$ FileChannel fileChannel = null-->Line_14 $$ fileChannel = FileChannel.open(filePath, StandardOpenOption.READ, StandardOpenOption.WRITE)[ FD ]
Line_6 $$ Path filePath = pathCallable.getPath()-->Line_14 $$ fileChannel = FileChannel.open(filePath, StandardOpenOption.READ, StandardOpenOption.WRITE)[ FD ]
Line_4 $$ FileLock fileLock = null-->Line_15 $$ fileLock = FileUtil.getFileLock(fileChannel)[ FD ]
Line_2 $$ public static boolean processPathCallable(PathCallable pathCallable) -->Line_26 $$ return false[ CD ]
Line_10 $$ if (Files.isDirectory(filePath)) -->Line_15 $$ fileLock = FileUtil.getFileLock(fileChannel)[ CD ]
Line_2 $$ public static boolean processPathCallable(PathCallable pathCallable) -->Line_4 $$ FileLock fileLock = null[ CD ]
Line_3 $$ FileChannel fileChannel = null-->Line_24 $$ StreamUtil.cleanUp(fileChannel)[ FD ]
Line_10 $$ if (Files.isDirectory(filePath)) -->Line_14 $$ fileChannel = FileChannel.open(filePath, StandardOpenOption.READ, StandardOpenOption.WRITE)[ CD ]
Line_4 $$ FileLock fileLock = null-->Line_17 $$ if (fileLock != null) [ FD ]
Line_17 $$ if (fileLock != null) -->Line_19 $$ return true[ CD ]
Line_14 $$ fileChannel = FileChannel.open(filePath, StandardOpenOption.READ, StandardOpenOption.WRITE)-->Line_15 $$ fileLock = FileUtil.getFileLock(fileChannel)[ FD ]
Line_3 $$ FileChannel fileChannel = null-->Line_15 $$ fileLock = FileUtil.getFileLock(fileChannel)[ FD ]
Line_17 $$ if (fileLock != null) -->Line_18 $$ pathCallable.call()[ CD ]
Line_10 $$ if (Files.isDirectory(filePath)) -->Line_12 $$ return true[ CD ]
Line_14 $$ fileChannel = FileChannel.open(filePath, StandardOpenOption.READ, StandardOpenOption.WRITE)-->Line_24 $$ StreamUtil.cleanUp(fileChannel)[ FD ]
Line_2 $$ public static boolean processPathCallable(PathCallable pathCallable) -->Line_6 $$ Path filePath = pathCallable.getPath()[ FD ]
Line_7 $$ if (Files.notExists(filePath)) -->Line_8 $$ return true[ CD ]
Line_6 $$ Path filePath = pathCallable.getPath()-->Line_10 $$ if (Files.isDirectory(filePath)) [ FD ]
Line_10 $$ if (Files.isDirectory(filePath)) -->Line_11 $$ pathCallable.call()[ CD ]
Line_2 $$ public static boolean processPathCallable(PathCallable pathCallable) -->Line_11 $$ pathCallable.call()[ FD ]
Line_6 $$ Path filePath = pathCallable.getPath()-->Line_7 $$ if (Files.notExists(filePath)) [ FD ]
Line_2 $$ public static boolean processPathCallable(PathCallable pathCallable) -->Line_3 $$ FileChannel fileChannel = null[ CD ]
