Line_19 $$ if (descriptor.isCompressed()) -->Line_20 $$ return new CompressedHintsWriter(directory, descriptor, file, channel, fd, crc)[ CD ]
Line_6 $$ FileChannel channel = FileChannel.open(file.toPath(), StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW)-->Line_14 $$ channel.write(descriptorBytes)[ FD ]
Line_12 $$ ByteBuffer descriptorBytes = dob.buffer()-->Line_14 $$ channel.write(descriptorBytes)[ FD ]
Line_19 $$ if (descriptor.isCompressed()) -->Line_22 $$ return new HintsWriter(directory, descriptor, file, channel, fd, crc)[ CD ]
Line_8 $$ CRC32 crc = new CRC32()-->Line_13 $$ updateChecksum(crc, descriptorBytes)[ FD ]
Line_6 $$ FileChannel channel = FileChannel.open(file.toPath(), StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW)-->Line_16 $$ channel.close()[ FD ]
Line_5 $$ File file = new File(directory, descriptor.fileName())-->Line_6 $$ FileChannel channel = FileChannel.open(file.toPath(), StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW)[ FD ]
Line_9 $$ try (DataOutputBuffer dob = new DataOutputBuffer()) -->Line_12 $$ ByteBuffer descriptorBytes = dob.buffer()[ FD ]
Line_12 $$ ByteBuffer descriptorBytes = dob.buffer()-->Line_13 $$ updateChecksum(crc, descriptorBytes)[ FD ]
Line_6 $$ FileChannel channel = FileChannel.open(file.toPath(), StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW)-->Line_7 $$ int fd = CLibrary.getfd(channel)[ FD ]
