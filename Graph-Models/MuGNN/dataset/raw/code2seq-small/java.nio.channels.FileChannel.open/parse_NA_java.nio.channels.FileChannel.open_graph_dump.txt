Line_2 $$ public RestTestSuite parse(String api, Path file) throws IOException, RestTestParseException -->Line_3 $$ if (!Files.isRegularFile(file)) [ FD ]
Line_2 $$ public RestTestSuite parse(String api, Path file) throws IOException, RestTestParseException -->Line_20 $$ XContentParser parser = YamlXContent.yamlXContent.createParser(Files.newInputStream(file))[ CD ]
Line_2 $$ public RestTestSuite parse(String api, Path file) throws IOException, RestTestParseException -->Line_6 $$ String filename = file.getFileName().toString()[ CD ]
Line_2 $$ public RestTestSuite parse(String api, Path file) throws IOException, RestTestParseException -->Line_20 $$ XContentParser parser = YamlXContent.yamlXContent.createParser(Files.newInputStream(file))[ FD ]
Line_22 $$ RestTestSuiteParseContext testParseContext = new RestTestSuiteParseContext(api, filename, parser)-->Line_23 $$ return parse(testParseContext)[ FD ]
Line_9 $$ if (i > 0) -->Line_10 $$ filename = filename.substring(0, i)[ CD ]
Line_6 $$ String filename = file.getFileName().toString()-->Line_10 $$ filename = filename.substring(0, i)[ FD ]
Line_2 $$ public RestTestSuite parse(String api, Path file) throws IOException, RestTestParseException -->Line_4 $$ throw new IllegalArgumentException(file.toAbsolutePath() + " is not a file")[ FD ]
Line_14 $$ ByteBuffer bb = ByteBuffer.wrap(new byte[1])-->Line_16 $$ if (bb.get(0) != 10) [ FD ]
Line_2 $$ public RestTestSuite parse(String api, Path file) throws IOException, RestTestParseException -->Line_9 $$ if (i > 0) [ CD ]
Line_2 $$ public RestTestSuite parse(String api, Path file) throws IOException, RestTestParseException -->Line_3 $$ if (!Files.isRegularFile(file)) [ CD ]
Line_20 $$ XContentParser parser = YamlXContent.yamlXContent.createParser(Files.newInputStream(file))-->Line_27 $$ parser.close()[ FD ]
Line_14 $$ ByteBuffer bb = ByteBuffer.wrap(new byte[1])-->Line_15 $$ channel.read(bb, channel.size() - 1)[ FD ]
Line_2 $$ public RestTestSuite parse(String api, Path file) throws IOException, RestTestParseException -->Line_6 $$ String filename = file.getFileName().toString()[ FD ]
