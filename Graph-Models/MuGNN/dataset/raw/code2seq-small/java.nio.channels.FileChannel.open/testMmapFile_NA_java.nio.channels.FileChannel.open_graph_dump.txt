Line_61 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_67 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_29 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_41 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_28 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_34 $$ buffer.putInt(42)[ FD ]
Line_14 $$ File f2 = File.createTempFile("MmapFileTest2", ".bin")-->Line_45 $$ try (FileChannel channel = FileChannel.open(f2.toPath(), StandardOpenOption.WRITE, StandardOpenOption.READ)) [ FD ]
Line_17 $$ int size = 1024 * 1024-->Line_65 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)[ FD ]
Line_66 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_68 $$ Assert.assertEquals("mapped buffers don't work?", Long.valueOf(1L), mmapCount)[ FD ]
Line_29 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_80 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_8 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_79 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_9 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_80 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_67 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_79 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_15 $$ File f3 = File.createTempFile("MmapFileTest2", ".bin")-->Line_84 $$ Assert.assertTrue(f3.delete())[ FD ]
Line_8 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_10 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_49 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_61 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_28 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_55 $$ buffer.putInt(42)[ FD ]
Line_7 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_78 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_27 $$ try (FileChannel channel = FileChannel.open(f1.toPath(), StandardOpenOption.WRITE, StandardOpenOption.READ)) -->Line_46 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)[ FD ]
Line_28 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_72 $$ buffer.putInt(42)[ FD ]
Line_13 $$ File f1 = File.createTempFile("MmapFileTest1", ".bin")-->Line_87 $$ f1.delete()[ FD ]
Line_66 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_78 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_14 $$ File f2 = File.createTempFile("MmapFileTest2", ".bin")-->Line_88 $$ f2.delete()[ FD ]
Line_8 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_42 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_7 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_49 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_60 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_68 $$ Assert.assertEquals("mapped buffers don't work?", Long.valueOf(1L), mmapCount)[ FD ]
Line_7 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_9 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_42 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_81 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_10 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_49 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_17 $$ int size = 1024 * 1024-->Line_22 $$ raf.setLength(size)[ FD ]
Line_29 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_62 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_10 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_79 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_8 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_61 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_10 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_67 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_7 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_30 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_7 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_61 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_30 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_61 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_9 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_29 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_15 $$ File f3 = File.createTempFile("MmapFileTest2", ".bin")-->Line_64 $$ try (FileChannel channel = FileChannel.open(f3.toPath(), StandardOpenOption.WRITE, StandardOpenOption.READ)) [ FD ]
Line_29 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_68 $$ Assert.assertEquals("mapped buffers don't work?", Long.valueOf(1L), mmapCount)[ FD ]
Line_42 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_67 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_29 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_50 $$ Assert.assertEquals("mapped buffers don't work?", Long.valueOf(1L), mmapCount)[ FD ]
Line_8 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_67 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_61 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_79 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_17 $$ int size = 1024 * 1024-->Line_25 $$ raf.setLength(size)[ FD ]
Line_27 $$ try (FileChannel channel = FileChannel.open(f1.toPath(), StandardOpenOption.WRITE, StandardOpenOption.READ)) -->Line_28 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)[ FD ]
Line_30 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_44 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_28 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_37 $$ buffer.putInt(42)[ FD ]
Line_10 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_12 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_7 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_42 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_42 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_79 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_18 $$ try (RandomAccessFile raf = new RandomAccessFile(f1, "rw")) -->Line_19 $$ raf.setLength(size)[ FD ]
Line_49 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_67 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_41 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_50 $$ Assert.assertEquals("mapped buffers don't work?", Long.valueOf(1L), mmapCount)[ FD ]
Line_28 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_74 $$ buffer.putInt(42)[ FD ]
Line_29 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_66 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_30 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_63 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_9 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_78 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_9 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_41 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_28 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_53 $$ buffer.putInt(42)[ FD ]
Line_8 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_60 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_8 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_49 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_28 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_38 $$ buffer.putInt(42)[ FD ]
Line_41 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_43 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_41 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_68 $$ Assert.assertEquals("mapped buffers don't work?", Long.valueOf(1L), mmapCount)[ FD ]
Line_41 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_80 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_60 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_66 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_42 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_44 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_66 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_80 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_9 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_68 $$ Assert.assertEquals("mapped buffers don't work?", Long.valueOf(1L), mmapCount)[ FD ]
Line_60 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_62 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_42 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_49 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_9 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_50 $$ Assert.assertEquals("mapped buffers don't work?", Long.valueOf(1L), mmapCount)[ FD ]
Line_8 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_9 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_9 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_31 $$ Assert.assertEquals("mapped buffers don't work?", Long.valueOf(1L), mmapCount)[ FD ]
Line_7 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_60 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_61 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_81 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_10 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_44 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_8 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_41 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_18 $$ try (RandomAccessFile raf = new RandomAccessFile(f1, "rw")) -->Line_22 $$ raf.setLength(size)[ FD ]
Line_7 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_67 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_9 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_43 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_7 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_10 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_10 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_30 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_49 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_63 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_60 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_80 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_30 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_49 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_78 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_80 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_67 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_81 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_28 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_33 $$ Assert.assertTrue(buffer.isDirect())[ FD ]
Line_28 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_35 $$ buffer.putInt(42)[ FD ]
Line_61 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_63 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_30 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_42 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_29 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_43 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_29 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_60 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_30 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_79 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_9 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_62 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_30 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_81 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_28 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_73 $$ buffer.putInt(42)[ FD ]
Line_29 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_31 $$ Assert.assertEquals("mapped buffers don't work?", Long.valueOf(1L), mmapCount)[ FD ]
Line_10 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_81 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_79 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_81 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_10 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_61 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_8 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_29 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_30 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_67 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_17 $$ int size = 1024 * 1024-->Line_46 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)[ FD ]
Line_28 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_70 $$ Assert.assertTrue(buffer.isDirect())[ FD ]
Line_28 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_71 $$ buffer.putInt(42)[ FD ]
Line_9 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_60 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_8 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_78 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_28 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_36 $$ buffer.putInt(42)[ FD ]
Line_7 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_41 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_13 $$ File f1 = File.createTempFile("MmapFileTest1", ".bin")-->Line_82 $$ Assert.assertTrue(f1.delete())[ FD ]
Line_14 $$ File f2 = File.createTempFile("MmapFileTest2", ".bin")-->Line_83 $$ Assert.assertTrue(f2.delete())[ FD ]
Line_8 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_30 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_41 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_66 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_49 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_79 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_15 $$ File f3 = File.createTempFile("MmapFileTest2", ".bin")-->Line_89 $$ f3.delete()[ FD ]
Line_7 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_79 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_42 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_63 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_13 $$ File f1 = File.createTempFile("MmapFileTest1", ".bin")-->Line_27 $$ try (FileChannel channel = FileChannel.open(f1.toPath(), StandardOpenOption.WRITE, StandardOpenOption.READ)) [ FD ]
Line_10 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_42 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_10 $$ Long mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_63 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_7 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_66 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_41 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_60 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_49 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_81 $$ Assert.assertEquals("amount of mapped memory should be 0", Long.valueOf(0L), mmapMemoryUsed)[ FD ]
Line_28 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_57 $$ buffer.putInt(42)[ FD ]
Line_28 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_75 $$ buffer.putInt(42)[ FD ]
Line_28 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_56 $$ buffer.putInt(42)[ FD ]
Line_27 $$ try (FileChannel channel = FileChannel.open(f1.toPath(), StandardOpenOption.WRITE, StandardOpenOption.READ)) -->Line_65 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)[ FD ]
Line_8 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_66 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_29 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_78 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_18 $$ try (RandomAccessFile raf = new RandomAccessFile(f1, "rw")) -->Line_25 $$ raf.setLength(size)[ FD ]
Line_9 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_11 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_7 $$ ObjectName bpmName = new ObjectName("java.nio:type=BufferPool,name=mapped")-->Line_29 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_41 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_62 $$ Assert.assertEquals("# of mapped buffers should be 0", Long.valueOf(0L), mmapCount)[ FD ]
Line_60 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_78 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_28 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_54 $$ buffer.putInt(42)[ FD ]
Line_42 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")-->Line_61 $$ mmapMemoryUsed = (Long) mbs.getAttribute(bpmName, "MemoryUsed")[ FD ]
Line_9 $$ Long mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_66 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_28 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)-->Line_52 $$ Assert.assertTrue(buffer.isDirect())[ FD ]
Line_41 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")-->Line_78 $$ mmapCount = (Long) mbs.getAttribute(bpmName, "Count")[ FD ]
Line_17 $$ int size = 1024 * 1024-->Line_28 $$ MappedByteBuffer buffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, size)[ FD ]
Line_17 $$ int size = 1024 * 1024-->Line_19 $$ raf.setLength(size)[ FD ]
