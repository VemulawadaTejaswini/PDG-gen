Line_14 $$ defaultVersion = version-->Line_17 $$ myVersionComboBox.setSelectedItem(defaultVersion)[ FD ]
Line_20 $$ final boolean hasMoreThanOneVersion = versions.size() >= 2-->Line_22 $$ myVersionComboBox.setVisible(hasMoreThanOneVersion)[ FD ]
Line_2 $$ protected void updateAvailableVersions(List<? extends FrameworkVersion> versions) -->Line_6 $$ FrameworkVersion defaultVersion = versions.get(versions.size() - 1)[ FD ]
Line_3 $$ if (versions.size() > 0) -->Line_4 $$ String maxValue = ""[ CD ]
Line_7 $$ for (FrameworkVersion version : versions) -->Line_10 $$ if (fontMetrics.stringWidth(version.getVersionName()) > fontMetrics.stringWidth(maxValue)) [ FD ]
Line_7 $$ for (FrameworkVersion version : versions) -->Line_11 $$ maxValue = version.getVersionName()[ FD ]
Line_2 $$ protected void updateAvailableVersions(List<? extends FrameworkVersion> versions) -->Line_3 $$ if (versions.size() > 0) [ CD ]
Line_13 $$ if (version.isDefault()) -->Line_14 $$ defaultVersion = version[ CD ]
Line_2 $$ protected void updateAvailableVersions(List<? extends FrameworkVersion> versions) -->Line_22 $$ myVersionComboBox.setVisible(hasMoreThanOneVersion)[ CD ]
Line_3 $$ if (versions.size() > 0) -->Line_17 $$ myVersionComboBox.setSelectedItem(defaultVersion)[ CD ]
Line_7 $$ for (FrameworkVersion version : versions) -->Line_14 $$ defaultVersion = version[ FD ]
Line_7 $$ for (FrameworkVersion version : versions) -->Line_8 $$ myVersionComboBox.addItem(version)[ FD ]
Line_2 $$ protected void updateAvailableVersions(List<? extends FrameworkVersion> versions) -->Line_20 $$ final boolean hasMoreThanOneVersion = versions.size() >= 2[ FD ]
Line_2 $$ protected void updateAvailableVersions(List<? extends FrameworkVersion> versions) -->Line_21 $$ myDescriptionLabel.setVisible(hasMoreThanOneVersion)[ CD ]
Line_3 $$ if (versions.size() > 0) -->Line_18 $$ myVersionComboBox.setPrototypeDisplayValue(maxValue + "_")[ CD ]
Line_3 $$ if (versions.size() > 0) -->Line_6 $$ FrameworkVersion defaultVersion = versions.get(versions.size() - 1)[ CD ]
Line_2 $$ protected void updateAvailableVersions(List<? extends FrameworkVersion> versions) -->Line_20 $$ final boolean hasMoreThanOneVersion = versions.size() >= 2[ CD ]
Line_4 $$ String maxValue = ""-->Line_11 $$ maxValue = version.getVersionName()[ FD ]
Line_20 $$ final boolean hasMoreThanOneVersion = versions.size() >= 2-->Line_21 $$ myDescriptionLabel.setVisible(hasMoreThanOneVersion)[ FD ]
Line_10 $$ if (fontMetrics.stringWidth(version.getVersionName()) > fontMetrics.stringWidth(maxValue)) -->Line_11 $$ maxValue = version.getVersionName()[ CD ]
Line_6 $$ FrameworkVersion defaultVersion = versions.get(versions.size() - 1)-->Line_14 $$ defaultVersion = version[ FD ]
Line_2 $$ protected void updateAvailableVersions(List<? extends FrameworkVersion> versions) -->Line_3 $$ if (versions.size() > 0) [ FD ]
Line_7 $$ for (FrameworkVersion version : versions) -->Line_13 $$ if (version.isDefault()) [ FD ]
Line_4 $$ String maxValue = ""-->Line_10 $$ if (fontMetrics.stringWidth(version.getVersionName()) > fontMetrics.stringWidth(maxValue)) [ FD ]
Line_9 $$ FontMetrics fontMetrics = myVersionComboBox.getFontMetrics(myVersionComboBox.getFont())-->Line_10 $$ if (fontMetrics.stringWidth(version.getVersionName()) > fontMetrics.stringWidth(maxValue)) [ FD ]
Line_3 $$ if (versions.size() > 0) -->Line_5 $$ ((DefaultComboBoxModel) myVersionComboBox.getModel()).removeAllElements()[ CD ]
Line_6 $$ FrameworkVersion defaultVersion = versions.get(versions.size() - 1)-->Line_17 $$ myVersionComboBox.setSelectedItem(defaultVersion)[ FD ]
