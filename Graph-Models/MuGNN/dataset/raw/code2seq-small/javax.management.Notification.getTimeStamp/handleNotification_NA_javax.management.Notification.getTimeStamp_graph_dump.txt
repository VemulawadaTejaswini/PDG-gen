Line_2 $$ public void handleNotification(Notification notification, Object handback) -->Line_3 $$ switch(notification.getType()) [ FD ]
Line_2 $$ public void handleNotification(Notification notification, Object handback) -->Line_17 $$ handleConnectionFailed(notification.getTimeStamp(), notification.getMessage())[ FD ]
Line_2 $$ public void handleNotification(Notification notification, Object handback) -->Line_7 $$ Map<String, Integer> progress = (Map<String, Integer>) notification.getUserData()[ FD ]
Line_7 $$ Map<String, Integer> progress = (Map<String, Integer>) notification.getUserData()-->Line_9 $$ ProgressEvent event = new ProgressEvent(ProgressEventType.values()[progress.get("type")], progress.get("progressCount"), progress.get("total"), message)[ FD ]
Line_6 $$ if (this.isInterestedIn(tag)) -->Line_8 $$ String message = notification.getMessage()[ CD ]
Line_6 $$ if (this.isInterestedIn(tag)) -->Line_9 $$ ProgressEvent event = new ProgressEvent(ProgressEventType.values()[progress.get("type")], progress.get("progressCount"), progress.get("total"), message)[ CD ]
Line_2 $$ public void handleNotification(Notification notification, Object handback) -->Line_8 $$ String message = notification.getMessage()[ FD ]
Line_6 $$ if (this.isInterestedIn(tag)) -->Line_10 $$ this.progress(tag, event)[ CD ]
Line_2 $$ public void handleNotification(Notification notification, Object handback) -->Line_14 $$ handleNotificationLost(notification.getTimeStamp(), notification.getMessage())[ FD ]
Line_5 $$ String tag = (String) notification.getSource()-->Line_6 $$ if (this.isInterestedIn(tag)) [ FD ]
Line_9 $$ ProgressEvent event = new ProgressEvent(ProgressEventType.values()[progress.get("type")], progress.get("progressCount"), progress.get("total"), message)-->Line_10 $$ this.progress(tag, event)[ FD ]
Line_2 $$ public void handleNotification(Notification notification, Object handback) -->Line_20 $$ handleConnectionClosed(notification.getTimeStamp(), notification.getMessage())[ FD ]
Line_5 $$ String tag = (String) notification.getSource()-->Line_10 $$ this.progress(tag, event)[ FD ]
Line_2 $$ public void handleNotification(Notification notification, Object handback) -->Line_5 $$ String tag = (String) notification.getSource()[ FD ]
Line_6 $$ if (this.isInterestedIn(tag)) -->Line_7 $$ Map<String, Integer> progress = (Map<String, Integer>) notification.getUserData()[ CD ]
