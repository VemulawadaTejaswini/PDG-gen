Line_4 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream() -->Line_26 $$ wcClient.doGetFileContents(target.getFile(), pegRevision, revision, true, buffer)[ FD ]
Line_2 $$ public byte[] getContent(@NotNull SvnTarget target, @Nullable SVNRevision revision, @Nullable SVNRevision pegRevision) throws VcsException, FileTooBigRuntimeException -->Line_3 $$ final int maxSize = VcsUtil.getMaxVcsLoadedFileSize()[ CD ]
Line_4 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream() -->Line_6 $$ if (size() > maxSize)[ CD ]
Line_4 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream() -->Line_18 $$ super.writeTo(out)[ CD ]
Line_23 $$ if (target.isURL()) -->Line_26 $$ wcClient.doGetFileContents(target.getFile(), pegRevision, revision, true, buffer)[ CD ]
Line_2 $$ public byte[] getContent(@NotNull SvnTarget target, @Nullable SVNRevision revision, @Nullable SVNRevision pegRevision) throws VcsException, FileTooBigRuntimeException -->Line_4 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream() [ CD ]
Line_2 $$ public byte[] getContent(@NotNull SvnTarget target, @Nullable SVNRevision revision, @Nullable SVNRevision pegRevision) throws VcsException, FileTooBigRuntimeException -->Line_23 $$ if (target.isURL()) [ FD ]
Line_2 $$ public byte[] getContent(@NotNull SvnTarget target, @Nullable SVNRevision revision, @Nullable SVNRevision pegRevision) throws VcsException, FileTooBigRuntimeException -->Line_21 $$ SVNWCClient wcClient = myVcs.getSvnKitManager().createWCClient()[ CD ]
Line_2 $$ public byte[] getContent(@NotNull SvnTarget target, @Nullable SVNRevision revision, @Nullable SVNRevision pegRevision) throws VcsException, FileTooBigRuntimeException -->Line_30 $$ ContentRevisionCache.checkContentsSize(target.getPathOrUrlString(), buffer.size())[ FD ]
Line_2 $$ public byte[] getContent(@NotNull SvnTarget target, @Nullable SVNRevision revision, @Nullable SVNRevision pegRevision) throws VcsException, FileTooBigRuntimeException -->Line_24 $$ wcClient.doGetFileContents(target.getURL(), pegRevision, revision, true, buffer)[ FD ]
Line_23 $$ if (target.isURL()) -->Line_24 $$ wcClient.doGetFileContents(target.getURL(), pegRevision, revision, true, buffer)[ CD ]
Line_4 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream() -->Line_13 $$ super.write(b, off, len)[ FD ]
Line_4 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream() -->Line_13 $$ super.write(b, off, len)[ CD ]
Line_2 $$ public byte[] getContent(@NotNull SvnTarget target, @Nullable SVNRevision revision, @Nullable SVNRevision pegRevision) throws VcsException, FileTooBigRuntimeException -->Line_28 $$ ContentRevisionCache.checkContentsSize(target.getPathOrUrlString(), buffer.size())[ FD ]
Line_4 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream() -->Line_8 $$ super.write(b)[ FD ]
Line_4 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream() -->Line_24 $$ wcClient.doGetFileContents(target.getURL(), pegRevision, revision, true, buffer)[ FD ]
Line_4 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream() -->Line_34 $$ return buffer.toByteArray()[ FD ]
Line_4 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream() -->Line_11 $$ if (size() > maxSize)[ CD ]
Line_4 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream() -->Line_16 $$ if (size() > maxSize)[ CD ]
Line_3 $$ final int maxSize = VcsUtil.getMaxVcsLoadedFileSize()-->Line_6 $$ if (size() > maxSize)[ FD ]
Line_3 $$ final int maxSize = VcsUtil.getMaxVcsLoadedFileSize()-->Line_11 $$ if (size() > maxSize)[ FD ]
Line_3 $$ final int maxSize = VcsUtil.getMaxVcsLoadedFileSize()-->Line_16 $$ if (size() > maxSize)[ FD ]
Line_4 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream() -->Line_18 $$ super.writeTo(out)[ FD ]
Line_2 $$ public byte[] getContent(@NotNull SvnTarget target, @Nullable SVNRevision revision, @Nullable SVNRevision pegRevision) throws VcsException, FileTooBigRuntimeException -->Line_34 $$ return buffer.toByteArray()[ CD ]
Line_4 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream() -->Line_30 $$ ContentRevisionCache.checkContentsSize(target.getPathOrUrlString(), buffer.size())[ FD ]
Line_2 $$ public byte[] getContent(@NotNull SvnTarget target, @Nullable SVNRevision revision, @Nullable SVNRevision pegRevision) throws VcsException, FileTooBigRuntimeException -->Line_26 $$ wcClient.doGetFileContents(target.getFile(), pegRevision, revision, true, buffer)[ FD ]
Line_4 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream() -->Line_8 $$ super.write(b)[ CD ]
Line_4 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream() -->Line_28 $$ ContentRevisionCache.checkContentsSize(target.getPathOrUrlString(), buffer.size())[ FD ]
