Line_2 $$ public byte[] readLine() throws IOException -->Line_16 $$ while (myBytesBuffered != -1) [ CD ]
Line_2 $$ public byte[] readLine() throws IOException -->Line_3 $$ if (myBytesBuffered == -1) [ CD ]
Line_4 $$ if (myLastEol != 0) -->Line_6 $$ return getLineArray()[ CD ]
Line_17 $$ for (; myPosition < myBytesBuffered; myPosition++) -->Line_18 $$ final byte c = buffer[myPosition][ CD ]
Line_9 $$ if (myPosition >= myBytesBuffered) -->Line_10 $$ fillBuffer()[ CD ]
Line_9 $$ if (myPosition >= myBytesBuffered) -->Line_11 $$ if (myBytesBuffered == -1) [ CD ]
Line_11 $$ if (myBytesBuffered == -1) -->Line_12 $$ return getLineArray()[ CD ]
Line_3 $$ if (myBytesBuffered == -1) -->Line_8 $$ return null[ CD ]
Line_21 $$ if (myLastEol == '\r') -->Line_22 $$ return getLineArray()[ CD ]
Line_3 $$ if (myBytesBuffered == -1) -->Line_4 $$ if (myLastEol != 0) [ CD ]
Line_35 $$ if (myLastEol != 0) -->Line_38 $$ myOutputStream.write(c)[ CD ]
Line_18 $$ final byte c = buffer[myPosition]-->Line_41 $$ myOutputStream.write(c)[ FD ]
Line_28 $$ if (myLastEol == '\n') -->Line_29 $$ return getLineArray()[ CD ]
Line_35 $$ if (myLastEol != 0) -->Line_37 $$ final byte[] line = getLineArray()[ CD ]
Line_18 $$ final byte c = buffer[myPosition]-->Line_38 $$ myOutputStream.write(c)[ FD ]
Line_16 $$ while (myBytesBuffered != -1) -->Line_17 $$ for (; myPosition < myBytesBuffered; myPosition++) [ CD ]
Line_2 $$ public byte[] readLine() throws IOException -->Line_48 $$ return getLineArray()[ CD ]
Line_2 $$ public byte[] readLine() throws IOException -->Line_15 $$ final byte[] buffer = myBuffer[ CD ]
Line_16 $$ while (myBytesBuffered != -1) -->Line_46 $$ fillBuffer()[ CD ]
Line_3 $$ if (myBytesBuffered == -1) -->Line_9 $$ if (myPosition >= myBytesBuffered) [ CD ]
Line_35 $$ if (myLastEol != 0) -->Line_39 $$ return line[ CD ]
Line_35 $$ if (myLastEol != 0) -->Line_41 $$ myOutputStream.write(c)[ CD ]
