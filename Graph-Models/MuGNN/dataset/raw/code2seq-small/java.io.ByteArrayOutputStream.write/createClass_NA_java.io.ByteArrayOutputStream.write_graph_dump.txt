Line_6 $$ byte[] bytes = new byte[1024]-->Line_9 $$ while ((read = is.read(bytes)) > -1) [ FD ]
Line_8 $$ int read-->Line_10 $$ baos.write(bytes, 0, read)[ FD ]
Line_8 $$ int read-->Line_9 $$ while ((read = is.read(bytes)) > -1) [ FD ]
Line_2 $$ protected Class createClass(String name) throws ClassFormatError, ClassNotFoundException -->Line_3 $$ log.info("createClass(" + name + ")")[ CD ]
Line_7 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream(1024)-->Line_10 $$ baos.write(bytes, 0, read)[ FD ]
Line_9 $$ while ((read = is.read(bytes)) > -1) -->Line_10 $$ baos.write(bytes, 0, read)[ FD ]
Line_7 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream(1024)-->Line_12 $$ bytes = baos.toByteArray()[ FD ]
Line_2 $$ protected Class createClass(String name) throws ClassFormatError, ClassNotFoundException -->Line_5 $$ InputStream is = getResourceAsStream(name.replace('.', '/').concat(".class"))[ FD ]
Line_6 $$ byte[] bytes = new byte[1024]-->Line_12 $$ bytes = baos.toByteArray()[ FD ]
Line_5 $$ InputStream is = getResourceAsStream(name.replace('.', '/').concat(".class"))-->Line_9 $$ while ((read = is.read(bytes)) > -1) [ FD ]
Line_6 $$ byte[] bytes = new byte[1024]-->Line_10 $$ baos.write(bytes, 0, read)[ FD ]
Line_12 $$ bytes = baos.toByteArray()-->Line_13 $$ return this.defineClass(name, bytes, 0, bytes.length)[ FD ]
Line_9 $$ while ((read = is.read(bytes)) > -1) -->Line_10 $$ baos.write(bytes, 0, read)[ CD ]
Line_2 $$ protected Class createClass(String name) throws ClassFormatError, ClassNotFoundException -->Line_13 $$ return this.defineClass(name, bytes, 0, bytes.length)[ FD ]
Line_6 $$ byte[] bytes = new byte[1024]-->Line_13 $$ return this.defineClass(name, bytes, 0, bytes.length)[ FD ]
