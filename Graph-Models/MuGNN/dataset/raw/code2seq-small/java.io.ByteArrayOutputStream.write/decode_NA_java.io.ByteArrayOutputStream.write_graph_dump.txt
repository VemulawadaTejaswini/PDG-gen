Line_14 $$ java.io.ByteArrayOutputStream baos = null-->Line_18 $$ baos = new java.io.ByteArrayOutputStream()[ FD ]
Line_20 $$ gzis = new java.util.zip.GZIPInputStream(bais)-->Line_34 $$ gzis.close()[ FD ]
Line_2 $$ public static byte[] decode(String s, int options) throws java.io.IOException -->Line_3 $$ if (s == null) [ CD ]
Line_2 $$ public static byte[] decode(String s, int options) throws java.io.IOException -->Line_9 $$ if ((bytes != null) && (bytes.length >= 4) && (!dontGunzip)) [ CD ]
Line_20 $$ gzis = new java.util.zip.GZIPInputStream(bais)-->Line_21 $$ while ((length = gzis.read(buffer)) >= 0) [ FD ]
Line_9 $$ if ((bytes != null) && (bytes.length >= 4) && (!dontGunzip)) -->Line_11 $$ if (java.util.zip.GZIPInputStream.GZIP_MAGIC == head) [ CD ]
Line_7 $$ bytes = decode(bytes, 0, bytes.length, options)-->Line_24 $$ bytes = baos.toByteArray()[ FD ]
Line_16 $$ int length = 0-->Line_22 $$ baos.write(buffer, 0, length)[ FD ]
Line_18 $$ baos = new java.io.ByteArrayOutputStream()-->Line_22 $$ baos.write(buffer, 0, length)[ FD ]
Line_2 $$ public static byte[] decode(String s, int options) throws java.io.IOException -->Line_3 $$ if (s == null) [ FD ]
Line_13 $$ java.util.zip.GZIPInputStream gzis = null-->Line_34 $$ gzis.close()[ FD ]
Line_13 $$ java.util.zip.GZIPInputStream gzis = null-->Line_21 $$ while ((length = gzis.read(buffer)) >= 0) [ FD ]
Line_15 $$ byte[] buffer = new byte[2048]-->Line_22 $$ baos.write(buffer, 0, length)[ FD ]
Line_21 $$ while ((length = gzis.read(buffer)) >= 0) -->Line_22 $$ baos.write(buffer, 0, length)[ CD ]
Line_11 $$ if (java.util.zip.GZIPInputStream.GZIP_MAGIC == head) -->Line_16 $$ int length = 0[ CD ]
Line_12 $$ java.io.ByteArrayInputStream bais = null-->Line_19 $$ bais = new java.io.ByteArrayInputStream(bytes)[ FD ]
Line_14 $$ java.io.ByteArrayOutputStream baos = null-->Line_22 $$ baos.write(buffer, 0, length)[ FD ]
Line_8 $$ boolean dontGunzip = (options & DONT_GUNZIP) != 0-->Line_9 $$ if ((bytes != null) && (bytes.length >= 4) && (!dontGunzip)) [ FD ]
Line_21 $$ while ((length = gzis.read(buffer)) >= 0) -->Line_22 $$ baos.write(buffer, 0, length)[ FD ]
Line_12 $$ java.io.ByteArrayInputStream bais = null-->Line_38 $$ bais.close()[ FD ]
Line_2 $$ public static byte[] decode(String s, int options) throws java.io.IOException -->Line_7 $$ bytes = decode(bytes, 0, bytes.length, options)[ FD ]
Line_2 $$ public static byte[] decode(String s, int options) throws java.io.IOException -->Line_6 $$ byte[] bytes = s.getBytes(PREFERRED_ENCODING)[ FD ]
Line_16 $$ int length = 0-->Line_21 $$ while ((length = gzis.read(buffer)) >= 0) [ FD ]
Line_2 $$ public static byte[] decode(String s, int options) throws java.io.IOException -->Line_6 $$ byte[] bytes = s.getBytes(PREFERRED_ENCODING)[ CD ]
Line_11 $$ if (java.util.zip.GZIPInputStream.GZIP_MAGIC == head) -->Line_14 $$ java.io.ByteArrayOutputStream baos = null[ CD ]
Line_6 $$ byte[] bytes = s.getBytes(PREFERRED_ENCODING)-->Line_24 $$ bytes = baos.toByteArray()[ FD ]
Line_2 $$ public static byte[] decode(String s, int options) throws java.io.IOException -->Line_44 $$ return bytes[ CD ]
Line_9 $$ if ((bytes != null) && (bytes.length >= 4) && (!dontGunzip)) -->Line_10 $$ int head = ((int) bytes[0] & 0xff) | ((bytes[1] << 8) & 0xff00)[ CD ]
Line_11 $$ if (java.util.zip.GZIPInputStream.GZIP_MAGIC == head) -->Line_12 $$ java.io.ByteArrayInputStream bais = null[ CD ]
Line_11 $$ if (java.util.zip.GZIPInputStream.GZIP_MAGIC == head) -->Line_13 $$ java.util.zip.GZIPInputStream gzis = null[ CD ]
Line_11 $$ if (java.util.zip.GZIPInputStream.GZIP_MAGIC == head) -->Line_15 $$ byte[] buffer = new byte[2048][ CD ]
Line_15 $$ byte[] buffer = new byte[2048]-->Line_21 $$ while ((length = gzis.read(buffer)) >= 0) [ FD ]
Line_18 $$ baos = new java.io.ByteArrayOutputStream()-->Line_30 $$ baos.close()[ FD ]
Line_19 $$ bais = new java.io.ByteArrayInputStream(bytes)-->Line_38 $$ bais.close()[ FD ]
Line_2 $$ public static byte[] decode(String s, int options) throws java.io.IOException -->Line_8 $$ boolean dontGunzip = (options & DONT_GUNZIP) != 0[ CD ]
Line_14 $$ java.io.ByteArrayOutputStream baos = null-->Line_24 $$ bytes = baos.toByteArray()[ FD ]
Line_6 $$ byte[] bytes = s.getBytes(PREFERRED_ENCODING)-->Line_7 $$ bytes = decode(bytes, 0, bytes.length, options)[ FD ]
Line_18 $$ baos = new java.io.ByteArrayOutputStream()-->Line_24 $$ bytes = baos.toByteArray()[ FD ]
Line_14 $$ java.io.ByteArrayOutputStream baos = null-->Line_30 $$ baos.close()[ FD ]
Line_13 $$ java.util.zip.GZIPInputStream gzis = null-->Line_20 $$ gzis = new java.util.zip.GZIPInputStream(bais)[ FD ]
Line_10 $$ int head = ((int) bytes[0] & 0xff) | ((bytes[1] << 8) & 0xff00)-->Line_11 $$ if (java.util.zip.GZIPInputStream.GZIP_MAGIC == head) [ FD ]
Line_2 $$ public static byte[] decode(String s, int options) throws java.io.IOException -->Line_7 $$ bytes = decode(bytes, 0, bytes.length, options)[ CD ]
