Line_7 $$ for (char c = it.first(); c != CharacterIterator.DONE; c = it.next()) -->Line_8 $$ lowCase = Character.isLowerCase(c)[ CD ]
Line_2 $$ public static boolean isCapitalized(@NotNull String text, @NotNull TextRange range) -->Line_5 $$ CharacterIterator it = new StringCharacterIterator(text, range.getStartOffset() + 1, range.getEndOffset(), range.getStartOffset() + 1)[ CD ]
Line_2 $$ public static boolean isCapitalized(@NotNull String text, @NotNull TextRange range) -->Line_10 $$ return Character.isUpperCase(text.charAt(range.getStartOffset())) && lowCase[ FD ]
Line_2 $$ public static boolean isCapitalized(@NotNull String text, @NotNull TextRange range) -->Line_6 $$ boolean lowCase = true[ CD ]
Line_2 $$ public static boolean isCapitalized(@NotNull String text, @NotNull TextRange range) -->Line_3 $$ if (range.getLength() == 0)[ CD ]
Line_6 $$ boolean lowCase = true-->Line_8 $$ lowCase = Character.isLowerCase(c)[ FD ]
Line_2 $$ public static boolean isCapitalized(@NotNull String text, @NotNull TextRange range) -->Line_3 $$ if (range.getLength() == 0)[ FD ]
Line_3 $$ if (range.getLength() == 0)-->Line_4 $$ return false[ CD ]
Line_5 $$ CharacterIterator it = new StringCharacterIterator(text, range.getStartOffset() + 1, range.getEndOffset(), range.getStartOffset() + 1)-->Line_7 $$ for (char c = it.first(); c != CharacterIterator.DONE; c = it.next()) [ FD ]
Line_2 $$ public static boolean isCapitalized(@NotNull String text, @NotNull TextRange range) -->Line_10 $$ return Character.isUpperCase(text.charAt(range.getStartOffset())) && lowCase[ CD ]
Line_7 $$ for (char c = it.first(); c != CharacterIterator.DONE; c = it.next()) -->Line_8 $$ lowCase = Character.isLowerCase(c)[ FD ]
Line_2 $$ public static boolean isCapitalized(@NotNull String text, @NotNull TextRange range) -->Line_7 $$ for (char c = it.first(); c != CharacterIterator.DONE; c = it.next()) [ CD ]
Line_2 $$ public static boolean isCapitalized(@NotNull String text, @NotNull TextRange range) -->Line_5 $$ CharacterIterator it = new StringCharacterIterator(text, range.getStartOffset() + 1, range.getEndOffset(), range.getStartOffset() + 1)[ FD ]
