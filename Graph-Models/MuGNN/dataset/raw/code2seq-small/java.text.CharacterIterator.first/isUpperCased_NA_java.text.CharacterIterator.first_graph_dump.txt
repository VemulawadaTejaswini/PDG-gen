Line_6 $$ for (char c = it.first(); c != CharacterIterator.DONE; c = it.next()) -->Line_7 $$ if (!Character.isUpperCase(c)) [ CD ]
Line_7 $$ if (!Character.isUpperCase(c)) -->Line_8 $$ return false[ CD ]
Line_5 $$ CharacterIterator it = new StringCharacterIterator(text, range.getStartOffset(), range.getEndOffset(), range.getStartOffset())-->Line_6 $$ for (char c = it.first(); c != CharacterIterator.DONE; c = it.next()) [ FD ]
Line_2 $$ public static boolean isUpperCased(@NotNull String text, @NotNull TextRange range) -->Line_3 $$ if (range.getLength() == 0)[ FD ]
Line_2 $$ public static boolean isUpperCased(@NotNull String text, @NotNull TextRange range) -->Line_5 $$ CharacterIterator it = new StringCharacterIterator(text, range.getStartOffset(), range.getEndOffset(), range.getStartOffset())[ FD ]
Line_2 $$ public static boolean isUpperCased(@NotNull String text, @NotNull TextRange range) -->Line_5 $$ CharacterIterator it = new StringCharacterIterator(text, range.getStartOffset(), range.getEndOffset(), range.getStartOffset())[ CD ]
Line_2 $$ public static boolean isUpperCased(@NotNull String text, @NotNull TextRange range) -->Line_6 $$ for (char c = it.first(); c != CharacterIterator.DONE; c = it.next()) [ CD ]
Line_3 $$ if (range.getLength() == 0)-->Line_4 $$ return false[ CD ]
Line_6 $$ for (char c = it.first(); c != CharacterIterator.DONE; c = it.next()) -->Line_7 $$ if (!Character.isUpperCase(c)) [ FD ]
Line_2 $$ public static boolean isUpperCased(@NotNull String text, @NotNull TextRange range) -->Line_11 $$ return true[ CD ]
Line_2 $$ public static boolean isUpperCased(@NotNull String text, @NotNull TextRange range) -->Line_3 $$ if (range.getLength() == 0)[ CD ]
