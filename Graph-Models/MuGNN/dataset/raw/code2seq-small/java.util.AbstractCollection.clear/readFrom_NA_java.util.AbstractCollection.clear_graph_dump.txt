Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_10 $$ parent = in.readOptionalString()[ FD ]
Line_20 $$ if (numSelectedFields > 0) -->Line_22 $$ for (int i = 0; i < numSelectedFields; i++) [ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_34 $$ versionType = VersionType.fromValue(in.readByte())[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_12 $$ long flags = in.readVLong()[ CD ]
Line_6 $$ if (in.readBoolean()) -->Line_7 $$ doc = in.readBytesReference()[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_26 $$ if (in.readBoolean()) [ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_3 $$ super.readFrom(in)[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_35 $$ version = in.readLong()[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_6 $$ if (in.readBoolean()) [ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_29 $$ if (in.readBoolean()) [ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_11 $$ preference = in.readOptionalString()[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_12 $$ long flags = in.readVLong()[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_3 $$ super.readFrom(in)[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_27 $$ perFieldAnalyzer = readPerFieldAnalyzer(in.readMap())[ FD ]
Line_15 $$ if ((flags & (1 << flag.ordinal())) != 0) -->Line_16 $$ flagsEnum.add(flag)[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_4 $$ type = in.readString()[ FD ]
Line_14 $$ for (Flag flag : Flag.values()) -->Line_16 $$ flagsEnum.add(flag)[ FD ]
Line_14 $$ for (Flag flag : Flag.values()) -->Line_15 $$ if ((flags & (1 << flag.ordinal())) != 0) [ FD ]
Line_26 $$ if (in.readBoolean()) -->Line_27 $$ perFieldAnalyzer = readPerFieldAnalyzer(in.readMap())[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_29 $$ if (in.readBoolean()) [ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_33 $$ realtime = in.readBoolean()[ FD ]
Line_22 $$ for (int i = 0; i < numSelectedFields; i++) -->Line_23 $$ selectedFields.add(in.readString())[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_20 $$ if (numSelectedFields > 0) [ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_13 $$ flagsEnum.clear()[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_5 $$ id = in.readString()[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_23 $$ selectedFields.add(in.readString())[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_31 $$ filterSettings.readFrom(in)[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_10 $$ parent = in.readOptionalString()[ CD ]
Line_19 $$ int numSelectedFields = in.readVInt()-->Line_20 $$ if (numSelectedFields > 0) [ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_34 $$ versionType = VersionType.fromValue(in.readByte())[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_6 $$ if (in.readBoolean()) [ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_9 $$ routing = in.readOptionalString()[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_7 $$ doc = in.readBytesReference()[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_26 $$ if (in.readBoolean()) [ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_35 $$ version = in.readLong()[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_4 $$ type = in.readString()[ CD ]
Line_29 $$ if (in.readBoolean()) -->Line_31 $$ filterSettings.readFrom(in)[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_19 $$ int numSelectedFields = in.readVInt()[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_33 $$ realtime = in.readBoolean()[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_19 $$ int numSelectedFields = in.readVInt()[ FD ]
Line_19 $$ int numSelectedFields = in.readVInt()-->Line_22 $$ for (int i = 0; i < numSelectedFields; i++) [ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_9 $$ routing = in.readOptionalString()[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_11 $$ preference = in.readOptionalString()[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_5 $$ id = in.readString()[ CD ]
