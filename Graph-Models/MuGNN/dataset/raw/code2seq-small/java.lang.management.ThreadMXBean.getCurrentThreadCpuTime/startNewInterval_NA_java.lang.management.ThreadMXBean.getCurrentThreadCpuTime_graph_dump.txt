Line_2 $$ public CpuDuration startNewInterval() -->Line_4 $$ long currentCpuTime = THREAD_MX_BEAN.getCurrentThreadCpuTime()[ CD ]
Line_2 $$ public CpuDuration startNewInterval() -->Line_5 $$ long currentUserTime = THREAD_MX_BEAN.getCurrentThreadUserTime()[ CD ]
Line_5 $$ long currentUserTime = THREAD_MX_BEAN.getCurrentThreadUserTime()-->Line_6 $$ CpuDuration cpuDuration = new CpuDuration(nanosBetween(intervalWallStart, currentWallTime), nanosBetween(intervalCpuStart, currentCpuTime), nanosBetween(intervalUserStart, currentUserTime))[ FD ]
Line_4 $$ long currentCpuTime = THREAD_MX_BEAN.getCurrentThreadCpuTime()-->Line_6 $$ CpuDuration cpuDuration = new CpuDuration(nanosBetween(intervalWallStart, currentWallTime), nanosBetween(intervalCpuStart, currentCpuTime), nanosBetween(intervalUserStart, currentUserTime))[ FD ]
Line_2 $$ public CpuDuration startNewInterval() -->Line_6 $$ CpuDuration cpuDuration = new CpuDuration(nanosBetween(intervalWallStart, currentWallTime), nanosBetween(intervalCpuStart, currentCpuTime), nanosBetween(intervalUserStart, currentUserTime))[ CD ]
Line_2 $$ public CpuDuration startNewInterval() -->Line_10 $$ return cpuDuration[ CD ]
Line_2 $$ public CpuDuration startNewInterval() -->Line_3 $$ long currentWallTime = System.nanoTime()[ CD ]
Line_3 $$ long currentWallTime = System.nanoTime()-->Line_6 $$ CpuDuration cpuDuration = new CpuDuration(nanosBetween(intervalWallStart, currentWallTime), nanosBetween(intervalCpuStart, currentCpuTime), nanosBetween(intervalUserStart, currentUserTime))[ FD ]
