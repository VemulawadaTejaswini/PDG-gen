Line_5 $$ if (isTokenPerNode)-->Line_8 $$ System.out.printf(fmt, "-", "-", "Address", "Load", "Tokens", owns, "Host ID", "Rack")[ CD ]
Line_2 $$ private void printNodesHeader(boolean hasEffectiveOwns, boolean isTokenPerNode) -->Line_5 $$ if (isTokenPerNode)[ CD ]
Line_3 $$ String fmt = getFormat(hasEffectiveOwns, isTokenPerNode)-->Line_8 $$ System.out.printf(fmt, "-", "-", "Address", "Load", "Tokens", owns, "Host ID", "Rack")[ FD ]
Line_5 $$ if (isTokenPerNode)-->Line_6 $$ System.out.printf(fmt, "-", "-", "Address", "Load", owns, "Host ID", "Token", "Rack")[ CD ]
Line_2 $$ private void printNodesHeader(boolean hasEffectiveOwns, boolean isTokenPerNode) -->Line_3 $$ String fmt = getFormat(hasEffectiveOwns, isTokenPerNode)[ CD ]
Line_2 $$ private void printNodesHeader(boolean hasEffectiveOwns, boolean isTokenPerNode) -->Line_4 $$ String owns = hasEffectiveOwns ? "Owns (effective)" : "Owns"[ CD ]
Line_4 $$ String owns = hasEffectiveOwns ? "Owns (effective)" : "Owns"-->Line_8 $$ System.out.printf(fmt, "-", "-", "Address", "Load", "Tokens", owns, "Host ID", "Rack")[ FD ]
Line_4 $$ String owns = hasEffectiveOwns ? "Owns (effective)" : "Owns"-->Line_6 $$ System.out.printf(fmt, "-", "-", "Address", "Load", owns, "Host ID", "Token", "Rack")[ FD ]
Line_2 $$ private void printNodesHeader(boolean hasEffectiveOwns, boolean isTokenPerNode) -->Line_3 $$ String fmt = getFormat(hasEffectiveOwns, isTokenPerNode)[ FD ]
Line_3 $$ String fmt = getFormat(hasEffectiveOwns, isTokenPerNode)-->Line_6 $$ System.out.printf(fmt, "-", "-", "Address", "Load", owns, "Host ID", "Token", "Rack")[ FD ]
