Line_2 $$ private static void testConstrained(double targetFp, int elements, boolean oldBfHashOrder, int staticBitCount, long... staticBits) -->Line_4 $$ try (IFilter bf = getFilter(elements, targetFp, false, oldBfHashOrder)) [ FD ]
Line_5 $$ SequentialHashGenerator gen = new SequentialHashGenerator(staticBitCount, bits)-->Line_13 $$ gen.nextHash(hash)[ FD ]
Line_7 $$ for (int i = 0; i < elements; i++) -->Line_8 $$ gen.nextHash(hash)[ CD ]
Line_12 $$ for (int i = 0; i < elements; i++) -->Line_14 $$ if (bf.isPresent(filterKey(hash[0], hash[1])))[ CD ]
Line_7 $$ for (int i = 0; i < elements; i++) -->Line_9 $$ bf.add(filterKey(hash[0], hash[1]))[ CD ]
Line_6 $$ long[] hash = new long[2]-->Line_8 $$ gen.nextHash(hash)[ FD ]
Line_2 $$ private static void testConstrained(double targetFp, int elements, boolean oldBfHashOrder, int staticBitCount, long... staticBits) -->Line_22 $$ System.out.printf("%d elements, %d static bits, %.2f target\n", elements, staticBitCount, targetFp)[ FD ]
Line_2 $$ private static void testConstrained(double targetFp, int elements, boolean oldBfHashOrder, int staticBitCount, long... staticBits) -->Line_7 $$ for (int i = 0; i < elements; i++) [ FD ]
Line_2 $$ private static void testConstrained(double targetFp, int elements, boolean oldBfHashOrder, int staticBitCount, long... staticBits) -->Line_22 $$ System.out.printf("%d elements, %d static bits, %.2f target\n", elements, staticBitCount, targetFp)[ CD ]
Line_7 $$ for (int i = 0; i < elements; i++) -->Line_12 $$ for (int i = 0; i < elements; i++) [ FD ]
Line_18 $$ double ratio = fp / targetFp-->Line_19 $$ System.out.printf("%.2f, ", ratio)[ FD ]
Line_5 $$ SequentialHashGenerator gen = new SequentialHashGenerator(staticBitCount, bits)-->Line_8 $$ gen.nextHash(hash)[ FD ]
Line_4 $$ try (IFilter bf = getFilter(elements, targetFp, false, oldBfHashOrder)) -->Line_14 $$ if (bf.isPresent(filterKey(hash[0], hash[1])))[ FD ]
Line_6 $$ long[] hash = new long[2]-->Line_13 $$ gen.nextHash(hash)[ FD ]
Line_14 $$ if (bf.isPresent(filterKey(hash[0], hash[1])))-->Line_15 $$ falsePositiveCount++[ CD ]
Line_2 $$ private static void testConstrained(double targetFp, int elements, boolean oldBfHashOrder, int staticBitCount, long... staticBits) -->Line_12 $$ for (int i = 0; i < elements; i++) [ FD ]
Line_12 $$ for (int i = 0; i < elements; i++) -->Line_13 $$ gen.nextHash(hash)[ CD ]
Line_11 $$ int falsePositiveCount = 0-->Line_15 $$ falsePositiveCount++[ FD ]
Line_4 $$ try (IFilter bf = getFilter(elements, targetFp, false, oldBfHashOrder)) -->Line_9 $$ bf.add(filterKey(hash[0], hash[1]))[ FD ]
