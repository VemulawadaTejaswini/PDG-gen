Line_2 $$ public void testPerformance() throws IOException -->Line_24 $$ myEnumerator.close()[ CD ]
Line_3 $$ final IntObjectCache<String> stringCache = new IntObjectCache<String>(2000)-->Line_18 $$ stringCache.cacheObject(myEnumerator.enumerate(string), string)[ FD ]
Line_17 $$ final String string = createRandomString()-->Line_18 $$ stringCache.cacheObject(myEnumerator.enumerate(string), string)[ FD ]
Line_13 $$ PlatformTestUtil.startPerformanceTest("PersistentStringEnumerator performance failed", 2500, new ThrowableRunnable() -->Line_21 $$ stringCache.removeAll()[ CD ]
Line_2 $$ public void testPerformance() throws IOException -->Line_4 $$ final IntObjectCache.DeletedPairsListener listener = new IntObjectCache.DeletedPairsListener() [ CD ]
Line_16 $$ for (int i = 0; i < 100000; ++i) -->Line_18 $$ stringCache.cacheObject(myEnumerator.enumerate(string), string)[ CD ]
Line_13 $$ PlatformTestUtil.startPerformanceTest("PersistentStringEnumerator performance failed", 2500, new ThrowableRunnable() -->Line_16 $$ for (int i = 0; i < 100000; ++i) [ CD ]
Line_16 $$ for (int i = 0; i < 100000; ++i) -->Line_17 $$ final String string = createRandomString()[ CD ]
Line_4 $$ final IntObjectCache.DeletedPairsListener listener = new IntObjectCache.DeletedPairsListener() -->Line_15 $$ stringCache.addDeletedPairsListener(listener)[ FD ]
Line_2 $$ public void testPerformance() throws IOException -->Line_3 $$ final IntObjectCache<String> stringCache = new IntObjectCache<String>(2000)[ CD ]
Line_13 $$ PlatformTestUtil.startPerformanceTest("PersistentStringEnumerator performance failed", 2500, new ThrowableRunnable() -->Line_20 $$ stringCache.removeDeletedPairsListener(listener)[ CD ]
Line_13 $$ PlatformTestUtil.startPerformanceTest("PersistentStringEnumerator performance failed", 2500, new ThrowableRunnable() -->Line_15 $$ stringCache.addDeletedPairsListener(listener)[ CD ]
Line_4 $$ final IntObjectCache.DeletedPairsListener listener = new IntObjectCache.DeletedPairsListener() -->Line_7 $$ assertEquals(myEnumerator.enumerate((String) value), key)[ FD ]
Line_3 $$ final IntObjectCache<String> stringCache = new IntObjectCache<String>(2000)-->Line_21 $$ stringCache.removeAll()[ FD ]
Line_2 $$ public void testPerformance() throws IOException -->Line_13 $$ PlatformTestUtil.startPerformanceTest("PersistentStringEnumerator performance failed", 2500, new ThrowableRunnable() [ CD ]
Line_4 $$ final IntObjectCache.DeletedPairsListener listener = new IntObjectCache.DeletedPairsListener() -->Line_20 $$ stringCache.removeDeletedPairsListener(listener)[ FD ]
Line_3 $$ final IntObjectCache<String> stringCache = new IntObjectCache<String>(2000)-->Line_20 $$ stringCache.removeDeletedPairsListener(listener)[ FD ]
Line_2 $$ public void testPerformance() throws IOException -->Line_25 $$ System.out.printf("File size = %d bytes\n", myFile.length())[ CD ]
Line_3 $$ final IntObjectCache<String> stringCache = new IntObjectCache<String>(2000)-->Line_15 $$ stringCache.addDeletedPairsListener(listener)[ FD ]
