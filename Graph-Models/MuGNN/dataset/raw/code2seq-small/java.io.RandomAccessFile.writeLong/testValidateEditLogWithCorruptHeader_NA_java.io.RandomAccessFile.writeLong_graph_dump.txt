Line_2 $$ public void testValidateEditLogWithCorruptHeader() throws IOException -->Line_3 $$ File testDir = new File(TEST_DIR, "testValidateEditLogWithCorruptHeader")[ CD ]
Line_6 $$ RandomAccessFile rwf = new RandomAccessFile(logFile, "rw")-->Line_11 $$ rwf.close()[ FD ]
Line_13 $$ EditLogValidation validation = EditLogFileInputStream.validateEditLog(logFile)-->Line_14 $$ assertTrue(validation.hasCorruptHeader())[ FD ]
Line_2 $$ public void testValidateEditLogWithCorruptHeader() throws IOException -->Line_5 $$ File logFile = prepareUnfinalizedTestEditLog(testDir, 2, offsetToTxId)[ CD ]
Line_2 $$ public void testValidateEditLogWithCorruptHeader() throws IOException -->Line_6 $$ RandomAccessFile rwf = new RandomAccessFile(logFile, "rw")[ CD ]
Line_5 $$ File logFile = prepareUnfinalizedTestEditLog(testDir, 2, offsetToTxId)-->Line_13 $$ EditLogValidation validation = EditLogFileInputStream.validateEditLog(logFile)[ FD ]
Line_2 $$ public void testValidateEditLogWithCorruptHeader() throws IOException -->Line_14 $$ assertTrue(validation.hasCorruptHeader())[ CD ]
Line_2 $$ public void testValidateEditLogWithCorruptHeader() throws IOException -->Line_13 $$ EditLogValidation validation = EditLogFileInputStream.validateEditLog(logFile)[ CD ]
Line_4 $$ SortedMap<Long, Long> offsetToTxId = Maps.newTreeMap()-->Line_5 $$ File logFile = prepareUnfinalizedTestEditLog(testDir, 2, offsetToTxId)[ FD ]
Line_6 $$ RandomAccessFile rwf = new RandomAccessFile(logFile, "rw")-->Line_8 $$ rwf.seek(0)[ FD ]
Line_3 $$ File testDir = new File(TEST_DIR, "testValidateEditLogWithCorruptHeader")-->Line_5 $$ File logFile = prepareUnfinalizedTestEditLog(testDir, 2, offsetToTxId)[ FD ]
Line_2 $$ public void testValidateEditLogWithCorruptHeader() throws IOException -->Line_4 $$ SortedMap<Long, Long> offsetToTxId = Maps.newTreeMap()[ CD ]
Line_6 $$ RandomAccessFile rwf = new RandomAccessFile(logFile, "rw")-->Line_9 $$ rwf.writeLong(42)[ FD ]
