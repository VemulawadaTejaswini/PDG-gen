Line_9 $$ for (Entry<TaskId, Integer> entry : outputBuffers.getBuffers().entrySet()) -->Line_10 $$ TaskId bufferId = entry.getKey()[ FD ]
Line_24 $$ if (outputBuffers.isNoMoreBufferIds()) -->Line_26 $$ state.compareAndSet(NO_MORE_PAGES, FLUSHING)[ CD ]
Line_2 $$ public synchronized void setOutputBuffers(OutputBuffers newOutputBuffers) -->Line_4 $$ if (state.get().isTerminal() || outputBuffers.getVersion() >= newOutputBuffers.getVersion()) [ CD ]
Line_11 $$ if (!namedBuffers.containsKey(bufferId)) -->Line_21 $$ namedBuffers.add(namedBuffer)[ CD ]
Line_2 $$ public synchronized void setOutputBuffers(OutputBuffers newOutputBuffers) -->Line_4 $$ if (state.get().isTerminal() || outputBuffers.getVersion() >= newOutputBuffers.getVersion()) [ FD ]
Line_11 $$ if (!namedBuffers.containsKey(bufferId)) -->Line_14 $$ PartitionBuffer partitionBuffer = createOrGetPartitionBuffer(partition)[ CD ]
Line_10 $$ TaskId bufferId = entry.getKey()-->Line_16 $$ if (abortedBuffers.contains(bufferId)) [ FD ]
Line_20 $$ Set<NamedBuffer> namedBuffers = partitionToNamedBuffer.computeIfAbsent(partition,  k -> new HashSet())-->Line_21 $$ namedBuffers.add(namedBuffer)[ FD ]
Line_11 $$ if (!namedBuffers.containsKey(bufferId)) -->Line_20 $$ Set<NamedBuffer> namedBuffers = partitionToNamedBuffer.computeIfAbsent(partition,  k -> new HashSet())[ CD ]
Line_24 $$ if (outputBuffers.isNoMoreBufferIds()) -->Line_27 $$ finalOutputBuffers.set(outputBuffers)[ CD ]
Line_10 $$ TaskId bufferId = entry.getKey()-->Line_11 $$ if (!namedBuffers.containsKey(bufferId)) [ FD ]
Line_10 $$ TaskId bufferId = entry.getKey()-->Line_19 $$ namedBuffers.put(bufferId, namedBuffer)[ FD ]
Line_11 $$ if (!namedBuffers.containsKey(bufferId)) -->Line_13 $$ int partition = entry.getValue()[ CD ]
Line_11 $$ if (!namedBuffers.containsKey(bufferId)) -->Line_19 $$ namedBuffers.put(bufferId, namedBuffer)[ CD ]
Line_15 $$ NamedBuffer namedBuffer = new NamedBuffer(bufferId, partitionBuffer)-->Line_17 $$ namedBuffer.abort()[ FD ]
Line_11 $$ if (!namedBuffers.containsKey(bufferId)) -->Line_12 $$ checkState(state.get().canAddBuffers(), "Cannot add buffers to %s", SharedBuffer.class.getSimpleName())[ CD ]
Line_2 $$ public synchronized void setOutputBuffers(OutputBuffers newOutputBuffers) -->Line_7 $$ outputBuffers.checkValidTransition(newOutputBuffers)[ CD ]
Line_9 $$ for (Entry<TaskId, Integer> entry : outputBuffers.getBuffers().entrySet()) -->Line_13 $$ int partition = entry.getValue()[ FD ]
Line_2 $$ public synchronized void setOutputBuffers(OutputBuffers newOutputBuffers) -->Line_3 $$ requireNonNull(newOutputBuffers, "newOutputBuffers is null")[ FD ]
Line_13 $$ int partition = entry.getValue()-->Line_14 $$ PartitionBuffer partitionBuffer = createOrGetPartitionBuffer(partition)[ FD ]
Line_2 $$ public synchronized void setOutputBuffers(OutputBuffers newOutputBuffers) -->Line_24 $$ if (outputBuffers.isNoMoreBufferIds()) [ CD ]
Line_15 $$ NamedBuffer namedBuffer = new NamedBuffer(bufferId, partitionBuffer)-->Line_21 $$ namedBuffers.add(namedBuffer)[ FD ]
Line_2 $$ public synchronized void setOutputBuffers(OutputBuffers newOutputBuffers) -->Line_29 $$ updateState()[ CD ]
Line_11 $$ if (!namedBuffers.containsKey(bufferId)) -->Line_15 $$ NamedBuffer namedBuffer = new NamedBuffer(bufferId, partitionBuffer)[ CD ]
Line_4 $$ if (state.get().isTerminal() || outputBuffers.getVersion() >= newOutputBuffers.getVersion()) -->Line_5 $$ return[ CD ]
Line_15 $$ NamedBuffer namedBuffer = new NamedBuffer(bufferId, partitionBuffer)-->Line_19 $$ namedBuffers.put(bufferId, namedBuffer)[ FD ]
Line_2 $$ public synchronized void setOutputBuffers(OutputBuffers newOutputBuffers) -->Line_3 $$ requireNonNull(newOutputBuffers, "newOutputBuffers is null")[ CD ]
Line_16 $$ if (abortedBuffers.contains(bufferId)) -->Line_17 $$ namedBuffer.abort()[ CD ]
Line_11 $$ if (!namedBuffers.containsKey(bufferId)) -->Line_16 $$ if (abortedBuffers.contains(bufferId)) [ CD ]
Line_13 $$ int partition = entry.getValue()-->Line_20 $$ Set<NamedBuffer> namedBuffers = partitionToNamedBuffer.computeIfAbsent(partition,  k -> new HashSet())[ FD ]
Line_2 $$ public synchronized void setOutputBuffers(OutputBuffers newOutputBuffers) -->Line_7 $$ outputBuffers.checkValidTransition(newOutputBuffers)[ FD ]
Line_24 $$ if (outputBuffers.isNoMoreBufferIds()) -->Line_25 $$ state.compareAndSet(OPEN, NO_MORE_BUFFERS)[ CD ]
