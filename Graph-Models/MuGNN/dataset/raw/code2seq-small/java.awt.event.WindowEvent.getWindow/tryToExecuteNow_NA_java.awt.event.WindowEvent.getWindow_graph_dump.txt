Line_7 $$ AnActionEvent event = new AnActionEvent(inputEvent, context, place != null ? place : ActionPlaces.UNKNOWN, presentation, ActionManagerImpl.this, inputEvent.getModifiersEx())-->Line_23 $$ fireBeforeActionPerformed(action, context, event)[ FD ]
Line_26 $$ if (event.getID() == WindowEvent.WINDOW_OPENED || event.getID() == WindowEvent.WINDOW_ACTIVATED) -->Line_27 $$ if (!result.isProcessed()) [ CD ]
Line_9 $$ if (!event.getPresentation().isEnabled()) -->Line_11 $$ return[ CD ]
Line_28 $$ final WindowEvent we = (WindowEvent) event-->Line_29 $$ IdeFocusManager.findInstanceByComponent(we.getWindow()).doWhenFocusSettlesDown(result.createSetDoneRunnable())[ FD ]
Line_4 $$ IdeFocusManager.findInstanceByContext(getContextBy(contextComponent)).doWhenFocusSettlesDown(new Runnable() -->Line_36 $$ queueActionPerformedEvent(action, context, event)[ CD ]
Line_2 $$ private void tryToExecuteNow(final AnAction action, final InputEvent inputEvent, final Component contextComponent, final String place, final ActionCallback result) -->Line_35 $$ result.setDone()[ FD ]
Line_2 $$ private void tryToExecuteNow(final AnAction action, final InputEvent inputEvent, final Component contextComponent, final String place, final ActionCallback result) -->Line_6 $$ final DataContext context = getContextBy(contextComponent)[ FD ]
Line_4 $$ IdeFocusManager.findInstanceByContext(getContextBy(contextComponent)).doWhenFocusSettlesDown(new Runnable() -->Line_18 $$ Component component = PlatformDataKeys.CONTEXT_COMPONENT.getData(context)[ CD ]
Line_4 $$ IdeFocusManager.findInstanceByContext(getContextBy(contextComponent)).doWhenFocusSettlesDown(new Runnable() -->Line_24 $$ UIUtil.addAwtListener(new AWTEventListener() [ CD ]
Line_4 $$ IdeFocusManager.findInstanceByContext(getContextBy(contextComponent)).doWhenFocusSettlesDown(new Runnable() -->Line_35 $$ result.setDone()[ CD ]
Line_6 $$ final DataContext context = getContextBy(contextComponent)-->Line_36 $$ queueActionPerformedEvent(action, context, event)[ FD ]
Line_7 $$ AnActionEvent event = new AnActionEvent(inputEvent, context, place != null ? place : ActionPlaces.UNKNOWN, presentation, ActionManagerImpl.this, inputEvent.getModifiersEx())-->Line_9 $$ if (!event.getPresentation().isEnabled()) [ FD ]
Line_6 $$ final DataContext context = getContextBy(contextComponent)-->Line_18 $$ Component component = PlatformDataKeys.CONTEXT_COMPONENT.getData(context)[ FD ]
Line_24 $$ UIUtil.addAwtListener(new AWTEventListener() -->Line_26 $$ if (event.getID() == WindowEvent.WINDOW_OPENED || event.getID() == WindowEvent.WINDOW_ACTIVATED) [ CD ]
Line_7 $$ AnActionEvent event = new AnActionEvent(inputEvent, context, place != null ? place : ActionPlaces.UNKNOWN, presentation, ActionManagerImpl.this, inputEvent.getModifiersEx())-->Line_36 $$ queueActionPerformedEvent(action, context, event)[ FD ]
Line_2 $$ private void tryToExecuteNow(final AnAction action, final InputEvent inputEvent, final Component contextComponent, final String place, final ActionCallback result) -->Line_4 $$ IdeFocusManager.findInstanceByContext(getContextBy(contextComponent)).doWhenFocusSettlesDown(new Runnable() [ CD ]
Line_19 $$ if (component != null && !component.isShowing()) -->Line_20 $$ result.setRejected()[ CD ]
Line_2 $$ private void tryToExecuteNow(final AnAction action, final InputEvent inputEvent, final Component contextComponent, final String place, final ActionCallback result) -->Line_10 $$ result.setRejected()[ FD ]
Line_2 $$ private void tryToExecuteNow(final AnAction action, final InputEvent inputEvent, final Component contextComponent, final String place, final ActionCallback result) -->Line_27 $$ if (!result.isProcessed()) [ FD ]
Line_9 $$ if (!event.getPresentation().isEnabled()) -->Line_10 $$ result.setRejected()[ CD ]
Line_4 $$ IdeFocusManager.findInstanceByContext(getContextBy(contextComponent)).doWhenFocusSettlesDown(new Runnable() -->Line_7 $$ AnActionEvent event = new AnActionEvent(inputEvent, context, place != null ? place : ActionPlaces.UNKNOWN, presentation, ActionManagerImpl.this, inputEvent.getModifiersEx())[ CD ]
Line_2 $$ private void tryToExecuteNow(final AnAction action, final InputEvent inputEvent, final Component contextComponent, final String place, final ActionCallback result) -->Line_23 $$ fireBeforeActionPerformed(action, context, event)[ FD ]
Line_2 $$ private void tryToExecuteNow(final AnAction action, final InputEvent inputEvent, final Component contextComponent, final String place, final ActionCallback result) -->Line_8 $$ ActionUtil.performDumbAwareUpdate(action, event, false)[ FD ]
Line_6 $$ final DataContext context = getContextBy(contextComponent)-->Line_23 $$ fireBeforeActionPerformed(action, context, event)[ FD ]
Line_14 $$ if (!event.getPresentation().isEnabled()) -->Line_16 $$ return[ CD ]
Line_4 $$ IdeFocusManager.findInstanceByContext(getContextBy(contextComponent)).doWhenFocusSettlesDown(new Runnable() -->Line_13 $$ ActionUtil.lastUpdateAndCheckDumb(action, event, false)[ CD ]
Line_24 $$ UIUtil.addAwtListener(new AWTEventListener() -->Line_36 $$ queueActionPerformedEvent(action, context, event)[ FD ]
Line_4 $$ IdeFocusManager.findInstanceByContext(getContextBy(contextComponent)).doWhenFocusSettlesDown(new Runnable() -->Line_6 $$ final DataContext context = getContextBy(contextComponent)[ CD ]
Line_24 $$ UIUtil.addAwtListener(new AWTEventListener() -->Line_34 $$ ActionUtil.performActionDumbAware(action, event)[ FD ]
Line_14 $$ if (!event.getPresentation().isEnabled()) -->Line_15 $$ result.setRejected()[ CD ]
Line_2 $$ private void tryToExecuteNow(final AnAction action, final InputEvent inputEvent, final Component contextComponent, final String place, final ActionCallback result) -->Line_34 $$ ActionUtil.performActionDumbAware(action, event)[ FD ]
Line_2 $$ private void tryToExecuteNow(final AnAction action, final InputEvent inputEvent, final Component contextComponent, final String place, final ActionCallback result) -->Line_13 $$ ActionUtil.lastUpdateAndCheckDumb(action, event, false)[ FD ]
Line_4 $$ IdeFocusManager.findInstanceByContext(getContextBy(contextComponent)).doWhenFocusSettlesDown(new Runnable() -->Line_19 $$ if (component != null && !component.isShowing()) [ CD ]
Line_24 $$ UIUtil.addAwtListener(new AWTEventListener() -->Line_26 $$ if (event.getID() == WindowEvent.WINDOW_OPENED || event.getID() == WindowEvent.WINDOW_ACTIVATED) [ FD ]
Line_7 $$ AnActionEvent event = new AnActionEvent(inputEvent, context, place != null ? place : ActionPlaces.UNKNOWN, presentation, ActionManagerImpl.this, inputEvent.getModifiersEx())-->Line_8 $$ ActionUtil.performDumbAwareUpdate(action, event, false)[ FD ]
Line_2 $$ private void tryToExecuteNow(final AnAction action, final InputEvent inputEvent, final Component contextComponent, final String place, final ActionCallback result) -->Line_3 $$ final Presentation presentation = action.getTemplatePresentation().clone()[ CD ]
Line_2 $$ private void tryToExecuteNow(final AnAction action, final InputEvent inputEvent, final Component contextComponent, final String place, final ActionCallback result) -->Line_20 $$ result.setRejected()[ FD ]
Line_7 $$ AnActionEvent event = new AnActionEvent(inputEvent, context, place != null ? place : ActionPlaces.UNKNOWN, presentation, ActionManagerImpl.this, inputEvent.getModifiersEx())-->Line_14 $$ if (!event.getPresentation().isEnabled()) [ FD ]
Line_2 $$ private void tryToExecuteNow(final AnAction action, final InputEvent inputEvent, final Component contextComponent, final String place, final ActionCallback result) -->Line_4 $$ IdeFocusManager.findInstanceByContext(getContextBy(contextComponent)).doWhenFocusSettlesDown(new Runnable() [ FD ]
Line_2 $$ private void tryToExecuteNow(final AnAction action, final InputEvent inputEvent, final Component contextComponent, final String place, final ActionCallback result) -->Line_29 $$ IdeFocusManager.findInstanceByComponent(we.getWindow()).doWhenFocusSettlesDown(result.createSetDoneRunnable())[ FD ]
Line_2 $$ private void tryToExecuteNow(final AnAction action, final InputEvent inputEvent, final Component contextComponent, final String place, final ActionCallback result) -->Line_15 $$ result.setRejected()[ FD ]
Line_4 $$ IdeFocusManager.findInstanceByContext(getContextBy(contextComponent)).doWhenFocusSettlesDown(new Runnable() -->Line_23 $$ fireBeforeActionPerformed(action, context, event)[ CD ]
Line_2 $$ private void tryToExecuteNow(final AnAction action, final InputEvent inputEvent, final Component contextComponent, final String place, final ActionCallback result) -->Line_7 $$ AnActionEvent event = new AnActionEvent(inputEvent, context, place != null ? place : ActionPlaces.UNKNOWN, presentation, ActionManagerImpl.this, inputEvent.getModifiersEx())[ FD ]
Line_4 $$ IdeFocusManager.findInstanceByContext(getContextBy(contextComponent)).doWhenFocusSettlesDown(new Runnable() -->Line_14 $$ if (!event.getPresentation().isEnabled()) [ CD ]
Line_19 $$ if (component != null && !component.isShowing()) -->Line_21 $$ return[ CD ]
Line_27 $$ if (!result.isProcessed()) -->Line_29 $$ IdeFocusManager.findInstanceByComponent(we.getWindow()).doWhenFocusSettlesDown(result.createSetDoneRunnable())[ CD ]
Line_18 $$ Component component = PlatformDataKeys.CONTEXT_COMPONENT.getData(context)-->Line_19 $$ if (component != null && !component.isShowing()) [ FD ]
Line_4 $$ IdeFocusManager.findInstanceByContext(getContextBy(contextComponent)).doWhenFocusSettlesDown(new Runnable() -->Line_9 $$ if (!event.getPresentation().isEnabled()) [ CD ]
Line_7 $$ AnActionEvent event = new AnActionEvent(inputEvent, context, place != null ? place : ActionPlaces.UNKNOWN, presentation, ActionManagerImpl.this, inputEvent.getModifiersEx())-->Line_13 $$ ActionUtil.lastUpdateAndCheckDumb(action, event, false)[ FD ]
Line_2 $$ private void tryToExecuteNow(final AnAction action, final InputEvent inputEvent, final Component contextComponent, final String place, final ActionCallback result) -->Line_3 $$ final Presentation presentation = action.getTemplatePresentation().clone()[ FD ]
Line_4 $$ IdeFocusManager.findInstanceByContext(getContextBy(contextComponent)).doWhenFocusSettlesDown(new Runnable() -->Line_34 $$ ActionUtil.performActionDumbAware(action, event)[ CD ]
Line_2 $$ private void tryToExecuteNow(final AnAction action, final InputEvent inputEvent, final Component contextComponent, final String place, final ActionCallback result) -->Line_36 $$ queueActionPerformedEvent(action, context, event)[ FD ]
Line_7 $$ AnActionEvent event = new AnActionEvent(inputEvent, context, place != null ? place : ActionPlaces.UNKNOWN, presentation, ActionManagerImpl.this, inputEvent.getModifiersEx())-->Line_34 $$ ActionUtil.performActionDumbAware(action, event)[ FD ]
Line_4 $$ IdeFocusManager.findInstanceByContext(getContextBy(contextComponent)).doWhenFocusSettlesDown(new Runnable() -->Line_8 $$ ActionUtil.performDumbAwareUpdate(action, event, false)[ CD ]
Line_7 $$ AnActionEvent event = new AnActionEvent(inputEvent, context, place != null ? place : ActionPlaces.UNKNOWN, presentation, ActionManagerImpl.this, inputEvent.getModifiersEx())-->Line_26 $$ if (event.getID() == WindowEvent.WINDOW_OPENED || event.getID() == WindowEvent.WINDOW_ACTIVATED) [ FD ]
Line_2 $$ private void tryToExecuteNow(final AnAction action, final InputEvent inputEvent, final Component contextComponent, final String place, final ActionCallback result) -->Line_24 $$ UIUtil.addAwtListener(new AWTEventListener() [ FD ]
Line_27 $$ if (!result.isProcessed()) -->Line_28 $$ final WindowEvent we = (WindowEvent) event[ CD ]
