Line_10 $$ DOMResult domResult = new DOMResult()-->Line_11 $$ transformer.transform(logicalMessage.getPayload(), domResult)[ FD ]
Line_2 $$ public boolean handleMessage(LogicalMessageContext logicalMessageContext) -->Line_4 $$ boolean outboundMessage = (boolean) logicalMessageContext.get(MessageContext.MESSAGE_OUTBOUND_PROPERTY)[ FD ]
Line_8 $$ LogicalMessage logicalMessage = logicalMessageContext.getMessage()-->Line_12 $$ logicalMessage.setPayload(new DOMSource(domResult.getNode()))[ FD ]
Line_9 $$ Transformer transformer = _transformerFactory.newTransformer(new StreamSource(_url.openStream()))-->Line_11 $$ transformer.transform(logicalMessage.getPayload(), domResult)[ FD ]
Line_5 $$ if (!outboundMessage) -->Line_6 $$ return true[ CD ]
Line_8 $$ LogicalMessage logicalMessage = logicalMessageContext.getMessage()-->Line_11 $$ transformer.transform(logicalMessage.getPayload(), domResult)[ FD ]
Line_10 $$ DOMResult domResult = new DOMResult()-->Line_12 $$ logicalMessage.setPayload(new DOMSource(domResult.getNode()))[ FD ]
Line_4 $$ boolean outboundMessage = (boolean) logicalMessageContext.get(MessageContext.MESSAGE_OUTBOUND_PROPERTY)-->Line_5 $$ if (!outboundMessage) [ FD ]
Line_2 $$ public boolean handleMessage(LogicalMessageContext logicalMessageContext) -->Line_8 $$ LogicalMessage logicalMessage = logicalMessageContext.getMessage()[ FD ]
