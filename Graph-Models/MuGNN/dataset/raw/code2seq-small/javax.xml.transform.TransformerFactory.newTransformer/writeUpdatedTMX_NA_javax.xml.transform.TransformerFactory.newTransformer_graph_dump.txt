Line_2 $$ private void writeUpdatedTMX(TiledMap tiledMap, FileHandle tmxFileHandle) throws IOException -->Line_20 $$ StreamResult result = new StreamResult(new File(outputDir, tmxFileHandle.name()))[ FD ]
Line_3 $$ Document doc-->Line_8 $$ doc = docBuilder.parse(tmxFileHandle.read())[ FD ]
Line_2 $$ private void writeUpdatedTMX(TiledMap tiledMap, FileHandle tmxFileHandle) throws IOException -->Line_5 $$ DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance()[ CD ]
Line_16 $$ TransformerFactory transformerFactory = TransformerFactory.newInstance()-->Line_17 $$ Transformer transformer = transformerFactory.newTransformer()[ FD ]
Line_18 $$ DOMSource source = new DOMSource(doc)-->Line_21 $$ transformer.transform(source, result)[ FD ]
Line_2 $$ private void writeUpdatedTMX(TiledMap tiledMap, FileHandle tmxFileHandle) throws IOException -->Line_3 $$ Document doc[ CD ]
Line_9 $$ Node map = doc.getFirstChild()-->Line_10 $$ while (map.getNodeType() != Node.ELEMENT_NODE || map.getNodeName() != "map") [ FD ]
Line_10 $$ while (map.getNodeType() != Node.ELEMENT_NODE || map.getNodeName() != "map") -->Line_11 $$ if ((map = map.getNextSibling()) == null) [ CD ]
Line_9 $$ Node map = doc.getFirstChild()-->Line_11 $$ if ((map = map.getNextSibling()) == null) [ FD ]
Line_17 $$ Transformer transformer = transformerFactory.newTransformer()-->Line_21 $$ transformer.transform(source, result)[ FD ]
Line_20 $$ StreamResult result = new StreamResult(new File(outputDir, tmxFileHandle.name()))-->Line_21 $$ transformer.transform(source, result)[ FD ]
Line_11 $$ if ((map = map.getNextSibling()) == null) -->Line_10 $$ while (map.getNodeType() != Node.ELEMENT_NODE || map.getNodeName() != "map") [ FD ]
Line_3 $$ Document doc-->Line_15 $$ setProperty(doc, map, "atlas", settings.tilesetOutputDirectory + "/" + settings.atlasOutputName + ".atlas")[ FD ]
Line_11 $$ if ((map = map.getNextSibling()) == null) -->Line_15 $$ setProperty(doc, map, "atlas", settings.tilesetOutputDirectory + "/" + settings.atlasOutputName + ".atlas")[ FD ]
Line_8 $$ doc = docBuilder.parse(tmxFileHandle.read())-->Line_9 $$ Node map = doc.getFirstChild()[ FD ]
Line_9 $$ Node map = doc.getFirstChild()-->Line_15 $$ setProperty(doc, map, "atlas", settings.tilesetOutputDirectory + "/" + settings.atlasOutputName + ".atlas")[ FD ]
Line_4 $$ DocumentBuilder docBuilder-->Line_7 $$ docBuilder = docFactory.newDocumentBuilder()[ FD ]
Line_4 $$ DocumentBuilder docBuilder-->Line_8 $$ doc = docBuilder.parse(tmxFileHandle.read())[ FD ]
Line_7 $$ docBuilder = docFactory.newDocumentBuilder()-->Line_8 $$ doc = docBuilder.parse(tmxFileHandle.read())[ FD ]
Line_2 $$ private void writeUpdatedTMX(TiledMap tiledMap, FileHandle tmxFileHandle) throws IOException -->Line_4 $$ DocumentBuilder docBuilder[ CD ]
Line_3 $$ Document doc-->Line_9 $$ Node map = doc.getFirstChild()[ FD ]
Line_2 $$ private void writeUpdatedTMX(TiledMap tiledMap, FileHandle tmxFileHandle) throws IOException -->Line_8 $$ doc = docBuilder.parse(tmxFileHandle.read())[ FD ]
Line_8 $$ doc = docBuilder.parse(tmxFileHandle.read())-->Line_15 $$ setProperty(doc, map, "atlas", settings.tilesetOutputDirectory + "/" + settings.atlasOutputName + ".atlas")[ FD ]
Line_5 $$ DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance()-->Line_7 $$ docBuilder = docFactory.newDocumentBuilder()[ FD ]
