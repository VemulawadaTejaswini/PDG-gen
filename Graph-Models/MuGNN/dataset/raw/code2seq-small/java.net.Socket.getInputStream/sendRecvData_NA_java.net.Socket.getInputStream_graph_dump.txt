Line_16 $$ sock = new Socket()-->Line_19 $$ OutputStream out = sock.getOutputStream()[ FD ]
Line_34 $$ String received = StringUtils.byteToHexString(retBuf)-->Line_41 $$ assertEquals(expected, received)[ FD ]
Line_28 $$ if (eofExpected) -->Line_30 $$ return[ CD ]
Line_12 $$ if (testDescription != null) -->Line_13 $$ LOG.info("Testing : " + testDescription)[ CD ]
Line_16 $$ sock = new Socket()-->Line_18 $$ sock.setSoTimeout(HdfsServerConstants.READ_TIMEOUT)[ FD ]
Line_22 $$ DataInputStream in = new DataInputStream(sock.getInputStream())-->Line_26 $$ in.readFully(retBuf)[ FD ]
Line_16 $$ sock = new Socket()-->Line_22 $$ DataInputStream in = new DataInputStream(sock.getInputStream())[ FD ]
Line_35 $$ String expected = StringUtils.byteToHexString(recvBuf.toByteArray())-->Line_41 $$ assertEquals(expected, received)[ FD ]
Line_16 $$ sock = new Socket()-->Line_43 $$ IOUtils.closeSocket(sock)[ FD ]
Line_19 $$ OutputStream out = sock.getOutputStream()-->Line_23 $$ out.write(sendBuf.toByteArray())[ FD ]
Line_28 $$ if (eofExpected) -->Line_29 $$ LOG.info("Got EOF as expected.")[ CD ]
Line_19 $$ OutputStream out = sock.getOutputStream()-->Line_24 $$ out.flush()[ FD ]
Line_2 $$ private void sendRecvData(String testDescription, boolean eofExpected) throws IOException -->Line_12 $$ if (testDescription != null) [ FD ]
Line_16 $$ sock = new Socket()-->Line_17 $$ sock.connect(dnAddr, HdfsServerConstants.READ_TIMEOUT)[ FD ]
