Line_2 $$ private boolean replaySyncSection(FileDataInput reader, int end, CommitLogDescriptor desc, String errorContext, boolean tolerateErrors) throws IOException -->Line_21 $$ claimedSizeChecksum = reader.readLong()[ FD ]
Line_8 $$ int serializedSize-->Line_28 $$ updateChecksumInt(checksum, serializedSize)[ FD ]
Line_15 $$ if (serializedSize < 10) -->Line_17 $$ return false[ CD ]
Line_2 $$ private boolean replaySyncSection(FileDataInput reader, int end, CommitLogDescriptor desc, String errorContext, boolean tolerateErrors) throws IOException -->Line_49 $$ replayMutation(buffer, serializedSize, reader.getFilePointer(), desc)[ FD ]
Line_2 $$ private boolean replaySyncSection(FileDataInput reader, int end, CommitLogDescriptor desc, String errorContext, boolean tolerateErrors) throws IOException -->Line_10 $$ serializedSize = reader.readInt()[ FD ]
Line_3 $$ while (reader.getFilePointer() < end && !reader.isEOF()) -->Line_45 $$ if (claimedCRC32 != checksum.getValue()) [ CD ]
Line_15 $$ if (serializedSize < 10) -->Line_16 $$ handleReplayError(tolerateErrors, "Invalid mutation size %d at %d in %s", serializedSize, mutationStart, errorContext)[ CD ]
Line_3 $$ while (reader.getFilePointer() < end && !reader.isEOF()) -->Line_7 $$ long claimedCRC32[ CD ]
Line_2 $$ private boolean replaySyncSection(FileDataInput reader, int end, CommitLogDescriptor desc, String errorContext, boolean tolerateErrors) throws IOException -->Line_3 $$ while (reader.getFilePointer() < end && !reader.isEOF()) [ CD ]
Line_11 $$ if (serializedSize == LEGACY_END_OF_SEGMENT_MARKER) -->Line_12 $$ logger.trace("Encountered end of segment marker at [ CD ]
Line_2 $$ private boolean replaySyncSection(FileDataInput reader, int end, CommitLogDescriptor desc, String errorContext, boolean tolerateErrors) throws IOException -->Line_39 $$ claimedCRC32 = reader.readInt() & 0xffffffffL[ FD ]
Line_2 $$ private boolean replaySyncSection(FileDataInput reader, int end, CommitLogDescriptor desc, String errorContext, boolean tolerateErrors) throws IOException -->Line_51 $$ return true[ CD ]
Line_5 $$ if (logger.isTraceEnabled())-->Line_6 $$ logger.trace("Reading mutation at [ CD ]
Line_2 $$ private boolean replaySyncSection(FileDataInput reader, int end, CommitLogDescriptor desc, String errorContext, boolean tolerateErrors) throws IOException -->Line_35 $$ reader.readFully(buffer, 0, serializedSize)[ FD ]
Line_4 $$ long mutationStart = reader.getFilePointer()-->Line_16 $$ handleReplayError(tolerateErrors, "Invalid mutation size %d at %d in %s", serializedSize, mutationStart, errorContext)[ FD ]
Line_2 $$ private boolean replaySyncSection(FileDataInput reader, int end, CommitLogDescriptor desc, String errorContext, boolean tolerateErrors) throws IOException -->Line_4 $$ long mutationStart = reader.getFilePointer()[ FD ]
Line_19 $$ long claimedSizeChecksum-->Line_21 $$ claimedSizeChecksum = reader.readLong()[ FD ]
Line_10 $$ serializedSize = reader.readInt()-->Line_11 $$ if (serializedSize == LEGACY_END_OF_SEGMENT_MARKER) [ FD ]
Line_8 $$ int serializedSize-->Line_33 $$ if (serializedSize > buffer.length)[ FD ]
Line_2 $$ private boolean replaySyncSection(FileDataInput reader, int end, CommitLogDescriptor desc, String errorContext, boolean tolerateErrors) throws IOException -->Line_3 $$ while (reader.getFilePointer() < end && !reader.isEOF()) [ FD ]
Line_3 $$ while (reader.getFilePointer() < end && !reader.isEOF()) -->Line_44 $$ checksum.update(buffer, 0, serializedSize)[ CD ]
Line_3 $$ while (reader.getFilePointer() < end && !reader.isEOF()) -->Line_8 $$ int serializedSize[ CD ]
Line_10 $$ serializedSize = reader.readInt()-->Line_16 $$ handleReplayError(tolerateErrors, "Invalid mutation size %d at %d in %s", serializedSize, mutationStart, errorContext)[ FD ]
Line_20 $$ if (desc.version < CommitLogDescriptor.VERSION_21)-->Line_23 $$ claimedSizeChecksum = reader.readInt() & 0xffffffffL[ CD ]
Line_2 $$ private boolean replaySyncSection(FileDataInput reader, int end, CommitLogDescriptor desc, String errorContext, boolean tolerateErrors) throws IOException -->Line_23 $$ claimedSizeChecksum = reader.readInt() & 0xffffffffL[ FD ]
Line_10 $$ serializedSize = reader.readInt()-->Line_35 $$ reader.readFully(buffer, 0, serializedSize)[ FD ]
Line_4 $$ long mutationStart = reader.getFilePointer()-->Line_30 $$ handleReplayError(tolerateErrors, "Mutation size checksum failure at %d in %s", mutationStart, errorContext)[ FD ]
Line_45 $$ if (claimedCRC32 != checksum.getValue()) -->Line_46 $$ handleReplayError(tolerateErrors, "Mutation checksum failure at %d in %s", mutationStart, errorContext)[ CD ]
Line_10 $$ serializedSize = reader.readInt()-->Line_44 $$ checksum.update(buffer, 0, serializedSize)[ FD ]
Line_10 $$ serializedSize = reader.readInt()-->Line_49 $$ replayMutation(buffer, serializedSize, reader.getFilePointer(), desc)[ FD ]
Line_29 $$ if (checksum.getValue() != claimedSizeChecksum) -->Line_30 $$ handleReplayError(tolerateErrors, "Mutation size checksum failure at %d in %s", mutationStart, errorContext)[ CD ]
Line_36 $$ if (desc.version < CommitLogDescriptor.VERSION_21)-->Line_39 $$ claimedCRC32 = reader.readInt() & 0xffffffffL[ CD ]
Line_2 $$ private boolean replaySyncSection(FileDataInput reader, int end, CommitLogDescriptor desc, String errorContext, boolean tolerateErrors) throws IOException -->Line_16 $$ handleReplayError(tolerateErrors, "Invalid mutation size %d at %d in %s", serializedSize, mutationStart, errorContext)[ FD ]
Line_7 $$ long claimedCRC32-->Line_37 $$ claimedCRC32 = reader.readLong()[ FD ]
Line_8 $$ int serializedSize-->Line_15 $$ if (serializedSize < 10) [ FD ]
Line_23 $$ claimedSizeChecksum = reader.readInt() & 0xffffffffL-->Line_29 $$ if (checksum.getValue() != claimedSizeChecksum) [ FD ]
Line_2 $$ private boolean replaySyncSection(FileDataInput reader, int end, CommitLogDescriptor desc, String errorContext, boolean tolerateErrors) throws IOException -->Line_46 $$ handleReplayError(tolerateErrors, "Mutation checksum failure at %d in %s", mutationStart, errorContext)[ FD ]
Line_8 $$ int serializedSize-->Line_44 $$ checksum.update(buffer, 0, serializedSize)[ FD ]
Line_37 $$ claimedCRC32 = reader.readLong()-->Line_45 $$ if (claimedCRC32 != checksum.getValue()) [ FD ]
Line_2 $$ private boolean replaySyncSection(FileDataInput reader, int end, CommitLogDescriptor desc, String errorContext, boolean tolerateErrors) throws IOException -->Line_41 $$ handleReplayError(tolerateErrors, "Unexpected end of segment", mutationStart, errorContext)[ FD ]
Line_10 $$ serializedSize = reader.readInt()-->Line_26 $$ checksum.update(serializedSize)[ FD ]
Line_2 $$ private boolean replaySyncSection(FileDataInput reader, int end, CommitLogDescriptor desc, String errorContext, boolean tolerateErrors) throws IOException -->Line_30 $$ handleReplayError(tolerateErrors, "Mutation size checksum failure at %d in %s", mutationStart, errorContext)[ FD ]
Line_29 $$ if (checksum.getValue() != claimedSizeChecksum) -->Line_31 $$ return false[ CD ]
Line_4 $$ long mutationStart = reader.getFilePointer()-->Line_46 $$ handleReplayError(tolerateErrors, "Mutation checksum failure at %d in %s", mutationStart, errorContext)[ FD ]
Line_8 $$ int serializedSize-->Line_10 $$ serializedSize = reader.readInt()[ FD ]
Line_3 $$ while (reader.getFilePointer() < end && !reader.isEOF()) -->Line_5 $$ if (logger.isTraceEnabled())[ CD ]
Line_8 $$ int serializedSize-->Line_26 $$ checksum.update(serializedSize)[ FD ]
Line_25 $$ if (desc.version < CommitLogDescriptor.VERSION_20)-->Line_26 $$ checksum.update(serializedSize)[ CD ]
Line_4 $$ long mutationStart = reader.getFilePointer()-->Line_6 $$ logger.trace("Reading mutation at [ FD ]
Line_36 $$ if (desc.version < CommitLogDescriptor.VERSION_21)-->Line_37 $$ claimedCRC32 = reader.readLong()[ CD ]
Line_19 $$ long claimedSizeChecksum-->Line_23 $$ claimedSizeChecksum = reader.readInt() & 0xffffffffL[ FD ]
Line_21 $$ claimedSizeChecksum = reader.readLong()-->Line_29 $$ if (checksum.getValue() != claimedSizeChecksum) [ FD ]
Line_20 $$ if (desc.version < CommitLogDescriptor.VERSION_21)-->Line_21 $$ claimedSizeChecksum = reader.readLong()[ CD ]
Line_11 $$ if (serializedSize == LEGACY_END_OF_SEGMENT_MARKER) -->Line_13 $$ return false[ CD ]
Line_39 $$ claimedCRC32 = reader.readInt() & 0xffffffffL-->Line_45 $$ if (claimedCRC32 != checksum.getValue()) [ FD ]
Line_10 $$ serializedSize = reader.readInt()-->Line_15 $$ if (serializedSize < 10) [ FD ]
Line_8 $$ int serializedSize-->Line_11 $$ if (serializedSize == LEGACY_END_OF_SEGMENT_MARKER) [ FD ]
Line_10 $$ serializedSize = reader.readInt()-->Line_33 $$ if (serializedSize > buffer.length)[ FD ]
Line_3 $$ while (reader.getFilePointer() < end && !reader.isEOF()) -->Line_49 $$ replayMutation(buffer, serializedSize, reader.getFilePointer(), desc)[ CD ]
Line_3 $$ while (reader.getFilePointer() < end && !reader.isEOF()) -->Line_4 $$ long mutationStart = reader.getFilePointer()[ CD ]
Line_37 $$ claimedCRC32 = reader.readLong()-->Line_39 $$ claimedCRC32 = reader.readInt() & 0xffffffffL[ FD ]
Line_21 $$ claimedSizeChecksum = reader.readLong()-->Line_23 $$ claimedSizeChecksum = reader.readInt() & 0xffffffffL[ FD ]
Line_8 $$ int serializedSize-->Line_35 $$ reader.readFully(buffer, 0, serializedSize)[ FD ]
Line_7 $$ long claimedCRC32-->Line_39 $$ claimedCRC32 = reader.readInt() & 0xffffffffL[ FD ]
Line_19 $$ long claimedSizeChecksum-->Line_29 $$ if (checksum.getValue() != claimedSizeChecksum) [ FD ]
Line_2 $$ private boolean replaySyncSection(FileDataInput reader, int end, CommitLogDescriptor desc, String errorContext, boolean tolerateErrors) throws IOException -->Line_37 $$ claimedCRC32 = reader.readLong()[ FD ]
Line_7 $$ long claimedCRC32-->Line_45 $$ if (claimedCRC32 != checksum.getValue()) [ FD ]
Line_8 $$ int serializedSize-->Line_49 $$ replayMutation(buffer, serializedSize, reader.getFilePointer(), desc)[ FD ]
Line_25 $$ if (desc.version < CommitLogDescriptor.VERSION_20)-->Line_28 $$ updateChecksumInt(checksum, serializedSize)[ CD ]
Line_8 $$ int serializedSize-->Line_16 $$ handleReplayError(tolerateErrors, "Invalid mutation size %d at %d in %s", serializedSize, mutationStart, errorContext)[ FD ]
Line_10 $$ serializedSize = reader.readInt()-->Line_28 $$ updateChecksumInt(checksum, serializedSize)[ FD ]
Line_4 $$ long mutationStart = reader.getFilePointer()-->Line_41 $$ handleReplayError(tolerateErrors, "Unexpected end of segment", mutationStart, errorContext)[ FD ]
Line_2 $$ private boolean replaySyncSection(FileDataInput reader, int end, CommitLogDescriptor desc, String errorContext, boolean tolerateErrors) throws IOException -->Line_12 $$ logger.trace("Encountered end of segment marker at [ FD ]
