Line_14 $$ int serializedSize-->Line_57 $$ checksum.update(buffer, 0, serializedSize)[ FD ]
Line_40 $$ if (checksum.getValue() != claimedSizeChecksum) -->Line_42 $$ return false[ CD ]
Line_48 $$ if (desc.version < CommitLogDescriptor.VERSION_21)-->Line_51 $$ claimedCRC32 = reader.readInt() & 0xffffffffL[ CD ]
Line_32 $$ claimedSizeChecksum = reader.readLong()-->Line_34 $$ claimedSizeChecksum = reader.readInt() & 0xffffffffL[ FD ]
Line_11 $$ if (logger.isTraceEnabled())-->Line_12 $$ logger.trace("Reading mutation at [ CD ]
Line_13 $$ long claimedCRC32-->Line_49 $$ claimedCRC32 = reader.readLong()[ FD ]
Line_14 $$ int serializedSize-->Line_39 $$ updateChecksumInt(checksum, serializedSize)[ FD ]
Line_10 $$ long mutationStart = reader.getFilePointer()-->Line_12 $$ logger.trace("Reading mutation at [ FD ]
Line_14 $$ int serializedSize-->Line_62 $$ replayMutation(buffer, serializedSize, reader.getFilePointer(), desc)[ FD ]
Line_30 $$ long claimedSizeChecksum-->Line_40 $$ if (checksum.getValue() != claimedSizeChecksum) [ FD ]
Line_14 $$ int serializedSize-->Line_27 $$ handleReplayError(tolerateErrors, "Invalid mutation size %d at %d in %s", serializedSize, mutationStart, errorContext)[ FD ]
Line_18 $$ if (serializedSize == LEGACY_END_OF_SEGMENT_MARKER) -->Line_20 $$ return false[ CD ]
Line_58 $$ if (claimedCRC32 != checksum.getValue()) -->Line_59 $$ handleReplayError(tolerateErrors, "Mutation checksum failure at %d in %s", mutationStart, errorContext)[ CD ]
Line_36 $$ if (desc.version < CommitLogDescriptor.VERSION_20)-->Line_39 $$ updateChecksumInt(checksum, serializedSize)[ CD ]
Line_10 $$ long mutationStart = reader.getFilePointer()-->Line_59 $$ handleReplayError(tolerateErrors, "Mutation checksum failure at %d in %s", mutationStart, errorContext)[ FD ]
Line_36 $$ if (desc.version < CommitLogDescriptor.VERSION_20)-->Line_37 $$ checksum.update(serializedSize)[ CD ]
Line_14 $$ int serializedSize-->Line_37 $$ checksum.update(serializedSize)[ FD ]
Line_32 $$ claimedSizeChecksum = reader.readLong()-->Line_40 $$ if (checksum.getValue() != claimedSizeChecksum) [ FD ]
Line_10 $$ long mutationStart = reader.getFilePointer()-->Line_53 $$ handleReplayError(tolerateErrors, "Unexpected end of segment", mutationStart, errorContext)[ FD ]
Line_48 $$ if (desc.version < CommitLogDescriptor.VERSION_21)-->Line_49 $$ claimedCRC32 = reader.readLong()[ CD ]
Line_31 $$ if (desc.version < CommitLogDescriptor.VERSION_21)-->Line_34 $$ claimedSizeChecksum = reader.readInt() & 0xffffffffL[ CD ]
Line_30 $$ long claimedSizeChecksum-->Line_34 $$ claimedSizeChecksum = reader.readInt() & 0xffffffffL[ FD ]
Line_14 $$ int serializedSize-->Line_18 $$ if (serializedSize == LEGACY_END_OF_SEGMENT_MARKER) [ FD ]
Line_10 $$ long mutationStart = reader.getFilePointer()-->Line_41 $$ handleReplayError(tolerateErrors, "Mutation size checksum failure at %d in %s", mutationStart, errorContext)[ FD ]
Line_13 $$ long claimedCRC32-->Line_51 $$ claimedCRC32 = reader.readInt() & 0xffffffffL[ FD ]
Line_34 $$ claimedSizeChecksum = reader.readInt() & 0xffffffffL-->Line_40 $$ if (checksum.getValue() != claimedSizeChecksum) [ FD ]
Line_49 $$ claimedCRC32 = reader.readLong()-->Line_51 $$ claimedCRC32 = reader.readInt() & 0xffffffffL[ FD ]
Line_30 $$ long claimedSizeChecksum-->Line_32 $$ claimedSizeChecksum = reader.readLong()[ FD ]
Line_10 $$ long mutationStart = reader.getFilePointer()-->Line_27 $$ handleReplayError(tolerateErrors, "Invalid mutation size %d at %d in %s", serializedSize, mutationStart, errorContext)[ FD ]
Line_13 $$ long claimedCRC32-->Line_58 $$ if (claimedCRC32 != checksum.getValue()) [ FD ]
Line_18 $$ if (serializedSize == LEGACY_END_OF_SEGMENT_MARKER) -->Line_19 $$ logger.trace("Encountered end of segment marker at [ CD ]
Line_14 $$ int serializedSize-->Line_47 $$ reader.readFully(buffer, 0, serializedSize)[ FD ]
Line_51 $$ claimedCRC32 = reader.readInt() & 0xffffffffL-->Line_58 $$ if (claimedCRC32 != checksum.getValue()) [ FD ]
Line_49 $$ claimedCRC32 = reader.readLong()-->Line_58 $$ if (claimedCRC32 != checksum.getValue()) [ FD ]
Line_40 $$ if (checksum.getValue() != claimedSizeChecksum) -->Line_41 $$ handleReplayError(tolerateErrors, "Mutation size checksum failure at %d in %s", mutationStart, errorContext)[ CD ]
Line_31 $$ if (desc.version < CommitLogDescriptor.VERSION_21)-->Line_32 $$ claimedSizeChecksum = reader.readLong()[ CD ]
