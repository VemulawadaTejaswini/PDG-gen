Line_2 $$ protected void startVM(String[] args) throws Exception -->Line_5 $$ if (!file.exists()) [ CD ]
Line_5 $$ if (!file.exists()) -->Line_6 $$ if (!file.createNewFile())[ CD ]
Line_14 $$ final PrintStream err = new PrintStream(new ForkedVMWrapper(stream, true))-->Line_16 $$ System.setErr(err)[ FD ]
Line_10 $$ PrintStream oldOut = System.out-->Line_19 $$ System.setOut(oldOut)[ FD ]
Line_14 $$ final PrintStream err = new PrintStream(new ForkedVMWrapper(stream, true))-->Line_17 $$ configureFrameworkAndRun(args, out, err)[ FD ]
Line_11 $$ PrintStream oldErr = System.err-->Line_20 $$ System.setErr(oldErr)[ FD ]
Line_2 $$ protected void startVM(String[] args) throws Exception -->Line_3 $$ final String testOutputPath = args[0][ CD ]
Line_9 $$ final FileOutputStream stream = new FileOutputStream(testOutputPath)-->Line_21 $$ stream.close()[ FD ]
Line_4 $$ final File file = new File(testOutputPath)-->Line_5 $$ if (!file.exists()) [ FD ]
Line_4 $$ final File file = new File(testOutputPath)-->Line_6 $$ if (!file.createNewFile())[ FD ]
Line_6 $$ if (!file.createNewFile())-->Line_7 $$ return[ CD ]
Line_2 $$ protected void startVM(String[] args) throws Exception -->Line_17 $$ configureFrameworkAndRun(args, out, err)[ FD ]
Line_2 $$ protected void startVM(String[] args) throws Exception -->Line_4 $$ final File file = new File(testOutputPath)[ CD ]
Line_2 $$ protected void startVM(String[] args) throws Exception -->Line_9 $$ final FileOutputStream stream = new FileOutputStream(testOutputPath)[ CD ]
Line_13 $$ final PrintStream out = new PrintStream(new ForkedVMWrapper(stream, false))-->Line_15 $$ System.setOut(out)[ FD ]
Line_2 $$ protected void startVM(String[] args) throws Exception -->Line_10 $$ PrintStream oldOut = System.out[ CD ]
Line_2 $$ protected void startVM(String[] args) throws Exception -->Line_11 $$ PrintStream oldErr = System.err[ CD ]
Line_13 $$ final PrintStream out = new PrintStream(new ForkedVMWrapper(stream, false))-->Line_17 $$ configureFrameworkAndRun(args, out, err)[ FD ]
