Line_16 $$ MockRuntimeVaultReader rvr = new MockRuntimeVaultReader()-->Line_18 $$ rvr.createVault("", options)[ FD ]
Line_2 $$ private void doTestVaultTool(boolean testFallbackFromIncorrectPasswordValue) throws Exception -->Line_3 $$ createAndFillKeystore(KEYSTORE_URL_VALUE)[ CD ]
Line_2 $$ private void doTestVaultTool(boolean testFallbackFromIncorrectPasswordValue) throws Exception -->Line_13 $$ String[] outputLines = ouput.split("\n")[ CD ]
Line_19 $$ String retrievedValueFromVault = rvr.retrieveFromVault(vaultSharedKey)-->Line_20 $$ Assert.assertEquals("The value retrieved from vault is not the same as the one initially stored", VALUE_TO_STORE, retrievedValueFromVault)[ FD ]
Line_2 $$ private void doTestVaultTool(boolean testFallbackFromIncorrectPasswordValue) throws Exception -->Line_17 $$ Map<String, Object> options = generateVaultOptionsMap(testFallbackFromIncorrectPasswordValue)[ CD ]
Line_13 $$ String[] outputLines = ouput.split("\n")-->Line_14 $$ String vaultSharedKey = getStoredAttributeSharedKey(outputLines)[ FD ]
Line_16 $$ MockRuntimeVaultReader rvr = new MockRuntimeVaultReader()-->Line_19 $$ String retrievedValueFromVault = rvr.retrieveFromVault(vaultSharedKey)[ FD ]
Line_2 $$ private void doTestVaultTool(boolean testFallbackFromIncorrectPasswordValue) throws Exception -->Line_20 $$ Assert.assertEquals("The value retrieved from vault is not the same as the one initially stored", VALUE_TO_STORE, retrievedValueFromVault)[ CD ]
Line_2 $$ private void doTestVaultTool(boolean testFallbackFromIncorrectPasswordValue) throws Exception -->Line_15 $$ Assert.assertNotNull("VaultTool did not return a line starting with VAULT::", vaultSharedKey)[ CD ]
Line_2 $$ private void doTestVaultTool(boolean testFallbackFromIncorrectPasswordValue) throws Exception -->Line_17 $$ Map<String, Object> options = generateVaultOptionsMap(testFallbackFromIncorrectPasswordValue)[ FD ]
Line_2 $$ private void doTestVaultTool(boolean testFallbackFromIncorrectPasswordValue) throws Exception -->Line_12 $$ String ouput = new String(SYSTEM_OUT.toByteArray())[ CD ]
Line_2 $$ private void doTestVaultTool(boolean testFallbackFromIncorrectPasswordValue) throws Exception -->Line_16 $$ MockRuntimeVaultReader rvr = new MockRuntimeVaultReader()[ CD ]
Line_14 $$ String vaultSharedKey = getStoredAttributeSharedKey(outputLines)-->Line_19 $$ String retrievedValueFromVault = rvr.retrieveFromVault(vaultSharedKey)[ FD ]
Line_14 $$ String vaultSharedKey = getStoredAttributeSharedKey(outputLines)-->Line_15 $$ Assert.assertNotNull("VaultTool did not return a line starting with VAULT::", vaultSharedKey)[ FD ]
Line_6 $$ String[] args = generateArgs()-->Line_7 $$ VaultTool.main(args)[ FD ]
Line_12 $$ String ouput = new String(SYSTEM_OUT.toByteArray())-->Line_13 $$ String[] outputLines = ouput.split("\n")[ FD ]
Line_2 $$ private void doTestVaultTool(boolean testFallbackFromIncorrectPasswordValue) throws Exception -->Line_19 $$ String retrievedValueFromVault = rvr.retrieveFromVault(vaultSharedKey)[ CD ]
Line_2 $$ private void doTestVaultTool(boolean testFallbackFromIncorrectPasswordValue) throws Exception -->Line_18 $$ rvr.createVault("", options)[ CD ]
Line_2 $$ private void doTestVaultTool(boolean testFallbackFromIncorrectPasswordValue) throws Exception -->Line_11 $$ SYSTEM_OUT.flush()[ CD ]
Line_2 $$ private void doTestVaultTool(boolean testFallbackFromIncorrectPasswordValue) throws Exception -->Line_4 $$ System.setOut(new PrintStream(SYSTEM_OUT))[ CD ]
Line_2 $$ private void doTestVaultTool(boolean testFallbackFromIncorrectPasswordValue) throws Exception -->Line_14 $$ String vaultSharedKey = getStoredAttributeSharedKey(outputLines)[ CD ]
Line_17 $$ Map<String, Object> options = generateVaultOptionsMap(testFallbackFromIncorrectPasswordValue)-->Line_18 $$ rvr.createVault("", options)[ FD ]
