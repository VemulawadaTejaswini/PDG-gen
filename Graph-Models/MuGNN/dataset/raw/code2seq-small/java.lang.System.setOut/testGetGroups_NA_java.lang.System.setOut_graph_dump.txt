Line_11 $$ verify(out).println(argThat(new ArgumentMatcher<StringBuilder>() -->Line_13 $$ return ("" + argument).equals("admin : group1 group2")[ CD ]
Line_5 $$ PrintStream out = mock(PrintStream.class)-->Line_6 $$ System.setOut(out)[ FD ]
Line_2 $$ public void testGetGroups() throws Exception -->Line_4 $$ PrintStream origOut = System.out[ CD ]
Line_8 $$ String[] args = -->Line_9 $$ assertEquals(0, rmAdminCLI.run(args))[ FD ]
Line_4 $$ PrintStream origOut = System.out-->Line_17 $$ System.setOut(origOut)[ FD ]
Line_2 $$ public void testGetGroups() throws Exception -->Line_3 $$ when(admin.getGroupsForUser(eq("admin"))).thenReturn(new String[] [ CD ]
Line_2 $$ public void testGetGroups() throws Exception -->Line_5 $$ PrintStream out = mock(PrintStream.class)[ CD ]
Line_5 $$ PrintStream out = mock(PrintStream.class)-->Line_11 $$ verify(out).println(argThat(new ArgumentMatcher<StringBuilder>() [ FD ]
Line_2 $$ public void testGetGroups() throws Exception -->Line_6 $$ System.setOut(out)[ CD ]
