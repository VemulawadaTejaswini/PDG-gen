Line_29 $$ int counter = 0-->Line_36 $$ counter++[ FD ]
Line_23 $$ String[] args = new String[1]-->Line_25 $$ int ret = dumptb.run(args)[ FD ]
Line_4 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()-->Line_5 $$ FileSystem fs = cluster.getFileSystem()[ FD ]
Line_31 $$ while (key != null) -->Line_34 $$ assertEquals(String.class, value.getClass())[ CD ]
Line_2 $$ public void testDumping() throws Exception -->Line_6 $$ PrintStream psBackup = System.out[ CD ]
Line_10 $$ DumpTypedBytes dumptb = new DumpTypedBytes(conf)-->Line_25 $$ int ret = dumptb.run(args)[ FD ]
Line_33 $$ Object value = tbinput.read()-->Line_35 $$ assertTrue("Invalid output.", Integer.parseInt(value.toString()) % 10 == 0)[ FD ]
Line_5 $$ FileSystem fs = cluster.getFileSystem()-->Line_15 $$ OutputStreamWriter writer = new OutputStreamWriter(fs.create(new Path(root, "test.txt")))[ FD ]
Line_31 $$ while (key != null) -->Line_33 $$ Object value = tbinput.read()[ CD ]
Line_31 $$ while (key != null) -->Line_36 $$ counter++[ CD ]
Line_17 $$ for (int i = 0; i < 100; i++) -->Line_18 $$ writer.write("" + (10 * i) + "\n")[ CD ]
Line_5 $$ FileSystem fs = cluster.getFileSystem()-->Line_14 $$ assertTrue(fs.exists(root))[ FD ]
Line_2 $$ public void testDumping() throws Exception -->Line_5 $$ FileSystem fs = cluster.getFileSystem()[ CD ]
Line_25 $$ int ret = dumptb.run(args)-->Line_26 $$ assertEquals("Return value != 0.", 0, ret)[ FD ]
Line_28 $$ TypedBytesInput tbinput = new TypedBytesInput(new DataInputStream(in))-->Line_30 $$ Object key = tbinput.read()[ FD ]
Line_31 $$ while (key != null) -->Line_32 $$ assertEquals(Long.class, key.getClass())[ CD ]
Line_37 $$ key = tbinput.read()-->Line_31 $$ while (key != null) [ FD ]
Line_30 $$ Object key = tbinput.read()-->Line_37 $$ key = tbinput.read()[ FD ]
Line_2 $$ public void testDumping() throws Exception -->Line_10 $$ DumpTypedBytes dumptb = new DumpTypedBytes(conf)[ CD ]
Line_2 $$ public void testDumping() throws Exception -->Line_3 $$ Configuration conf = new Configuration()[ CD ]
Line_30 $$ Object key = tbinput.read()-->Line_31 $$ while (key != null) [ FD ]
Line_5 $$ FileSystem fs = cluster.getFileSystem()-->Line_42 $$ fs.close()[ FD ]
Line_6 $$ PrintStream psBackup = System.out-->Line_45 $$ System.setOut(psBackup)[ FD ]
Line_31 $$ while (key != null) -->Line_35 $$ assertTrue("Invalid output.", Integer.parseInt(value.toString()) % 10 == 0)[ CD ]
Line_28 $$ TypedBytesInput tbinput = new TypedBytesInput(new DataInputStream(in))-->Line_37 $$ key = tbinput.read()[ FD ]
Line_7 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_27 $$ ByteArrayInputStream in = new ByteArrayInputStream(out.toByteArray())[ FD ]
Line_12 $$ Path root = new Path("/typedbytestest")-->Line_13 $$ assertTrue(fs.mkdirs(root))[ FD ]
Line_37 $$ key = tbinput.read()-->Line_32 $$ assertEquals(Long.class, key.getClass())[ FD ]
Line_31 $$ while (key != null) -->Line_37 $$ key = tbinput.read()[ CD ]
Line_2 $$ public void testDumping() throws Exception -->Line_9 $$ System.setOut(psOut)[ CD ]
Line_5 $$ FileSystem fs = cluster.getFileSystem()-->Line_13 $$ assertTrue(fs.mkdirs(root))[ FD ]
Line_2 $$ public void testDumping() throws Exception -->Line_8 $$ PrintStream psOut = new PrintStream(out)[ CD ]
Line_30 $$ Object key = tbinput.read()-->Line_32 $$ assertEquals(Long.class, key.getClass())[ FD ]
Line_29 $$ int counter = 0-->Line_39 $$ assertEquals("Wrong number of outputs.", 100, counter)[ FD ]
Line_15 $$ OutputStreamWriter writer = new OutputStreamWriter(fs.create(new Path(root, "test.txt")))-->Line_21 $$ writer.close()[ FD ]
Line_8 $$ PrintStream psOut = new PrintStream(out)-->Line_9 $$ System.setOut(psOut)[ FD ]
Line_15 $$ OutputStreamWriter writer = new OutputStreamWriter(fs.create(new Path(root, "test.txt")))-->Line_18 $$ writer.write("" + (10 * i) + "\n")[ FD ]
Line_28 $$ TypedBytesInput tbinput = new TypedBytesInput(new DataInputStream(in))-->Line_33 $$ Object value = tbinput.read()[ FD ]
Line_33 $$ Object value = tbinput.read()-->Line_34 $$ assertEquals(String.class, value.getClass())[ FD ]
Line_4 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()-->Line_46 $$ cluster.shutdown()[ FD ]
Line_12 $$ Path root = new Path("/typedbytestest")-->Line_14 $$ assertTrue(fs.exists(root))[ FD ]
Line_2 $$ public void testDumping() throws Exception -->Line_4 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()[ CD ]
Line_2 $$ public void testDumping() throws Exception -->Line_7 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()[ CD ]
