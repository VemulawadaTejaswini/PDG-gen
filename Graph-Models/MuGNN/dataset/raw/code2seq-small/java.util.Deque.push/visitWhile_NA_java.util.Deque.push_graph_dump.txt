Line_2 $$ public Void visitWhile(final WhileContext ctx) -->Line_22 $$ jumps.pop()[ CD ]
Line_11 $$ final BlockContext blockctx = ctx.block()-->Line_16 $$ visit(blockctx)[ FD ]
Line_13 $$ if (blockctx != null) -->Line_16 $$ visit(blockctx)[ CD ]
Line_2 $$ public Void visitWhile(final WhileContext ctx) -->Line_11 $$ final BlockContext blockctx = ctx.block()[ FD ]
Line_12 $$ boolean allexit = false-->Line_15 $$ allexit = blocksmd.allExit[ FD ]
Line_2 $$ public Void visitWhile(final WhileContext ctx) -->Line_3 $$ final ExpressionContext exprctx = ctx.expression()[ FD ]
Line_15 $$ allexit = blocksmd.allExit-->Line_18 $$ if (!allexit) [ FD ]
Line_2 $$ public Void visitWhile(final WhileContext ctx) -->Line_7 $$ branch.fals = branch.end[ CD ]
Line_2 $$ public Void visitWhile(final WhileContext ctx) -->Line_10 $$ visit(exprctx)[ CD ]
Line_2 $$ public Void visitWhile(final WhileContext ctx) -->Line_23 $$ return null[ CD ]
Line_3 $$ final ExpressionContext exprctx = ctx.expression()-->Line_4 $$ final Branch branch = markBranch(ctx, exprctx)[ FD ]
Line_2 $$ public Void visitWhile(final WhileContext ctx) -->Line_3 $$ final ExpressionContext exprctx = ctx.expression()[ CD ]
Line_18 $$ if (!allexit) -->Line_19 $$ execute.goTo(branch.begin)[ CD ]
Line_11 $$ final BlockContext blockctx = ctx.block()-->Line_13 $$ if (blockctx != null) [ FD ]
Line_2 $$ public Void visitWhile(final WhileContext ctx) -->Line_18 $$ if (!allexit) [ CD ]
Line_3 $$ final ExpressionContext exprctx = ctx.expression()-->Line_10 $$ visit(exprctx)[ FD ]
Line_11 $$ final BlockContext blockctx = ctx.block()-->Line_14 $$ StatementMetadata blocksmd = adapter.getStatementMetadata(blockctx)[ FD ]
Line_12 $$ boolean allexit = false-->Line_18 $$ if (!allexit) [ FD ]
Line_2 $$ public Void visitWhile(final WhileContext ctx) -->Line_13 $$ if (blockctx != null) [ CD ]
Line_2 $$ public Void visitWhile(final WhileContext ctx) -->Line_4 $$ final Branch branch = markBranch(ctx, exprctx)[ CD ]
Line_2 $$ public Void visitWhile(final WhileContext ctx) -->Line_8 $$ jumps.push(branch)[ CD ]
Line_2 $$ public Void visitWhile(final WhileContext ctx) -->Line_9 $$ execute.mark(branch.begin)[ CD ]
Line_2 $$ public Void visitWhile(final WhileContext ctx) -->Line_4 $$ final Branch branch = markBranch(ctx, exprctx)[ FD ]
Line_2 $$ public Void visitWhile(final WhileContext ctx) -->Line_12 $$ boolean allexit = false[ CD ]
Line_2 $$ public Void visitWhile(final WhileContext ctx) -->Line_11 $$ final BlockContext blockctx = ctx.block()[ CD ]
Line_4 $$ final Branch branch = markBranch(ctx, exprctx)-->Line_8 $$ jumps.push(branch)[ FD ]
Line_13 $$ if (blockctx != null) -->Line_15 $$ allexit = blocksmd.allExit[ CD ]
Line_13 $$ if (blockctx != null) -->Line_14 $$ StatementMetadata blocksmd = adapter.getStatementMetadata(blockctx)[ CD ]
Line_2 $$ public Void visitWhile(final WhileContext ctx) -->Line_5 $$ branch.begin = new Label()[ CD ]
Line_2 $$ public Void visitWhile(final WhileContext ctx) -->Line_21 $$ execute.mark(branch.end)[ CD ]
Line_2 $$ public Void visitWhile(final WhileContext ctx) -->Line_6 $$ branch.end = new Label()[ CD ]
