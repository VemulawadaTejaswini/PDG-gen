Line_17 $$ final int update = scopes.pop() + 1-->Line_18 $$ scopes.push(update)[ FD ]
Line_2 $$ Variable addVariable(final ParserRuleContext source, final String name, final Type type) -->Line_3 $$ if (getVariable(name) != null) [ FD ]
Line_2 $$ Variable addVariable(final ParserRuleContext source, final String name, final Type type) -->Line_4 $$ if (source == null) [ FD ]
Line_2 $$ Variable addVariable(final ParserRuleContext source, final String name, final Type type) -->Line_11 $$ int slot = 0[ CD ]
Line_2 $$ Variable addVariable(final ParserRuleContext source, final String name, final Type type) -->Line_17 $$ final int update = scopes.pop() + 1[ CD ]
Line_2 $$ Variable addVariable(final ParserRuleContext source, final String name, final Type type) -->Line_3 $$ if (getVariable(name) != null) [ CD ]
Line_15 $$ final Variable variable = new Variable(name, type, slot)-->Line_16 $$ variables.push(variable)[ FD ]
Line_12 $$ if (previous != null) -->Line_13 $$ slot += previous.slot + previous.type.type.getSize()[ CD ]
Line_3 $$ if (getVariable(name) != null) -->Line_4 $$ if (source == null) [ CD ]
Line_2 $$ Variable addVariable(final ParserRuleContext source, final String name, final Type type) -->Line_10 $$ final Variable previous = variables.peekFirst()[ CD ]
Line_2 $$ Variable addVariable(final ParserRuleContext source, final String name, final Type type) -->Line_15 $$ final Variable variable = new Variable(name, type, slot)[ CD ]
Line_11 $$ int slot = 0-->Line_13 $$ slot += previous.slot + previous.type.type.getSize()[ FD ]
Line_2 $$ Variable addVariable(final ParserRuleContext source, final String name, final Type type) -->Line_18 $$ scopes.push(update)[ CD ]
Line_10 $$ final Variable previous = variables.peekFirst()-->Line_12 $$ if (previous != null) [ FD ]
Line_2 $$ Variable addVariable(final ParserRuleContext source, final String name, final Type type) -->Line_16 $$ variables.push(variable)[ CD ]
Line_2 $$ Variable addVariable(final ParserRuleContext source, final String name, final Type type) -->Line_12 $$ if (previous != null) [ CD ]
Line_2 $$ Variable addVariable(final ParserRuleContext source, final String name, final Type type) -->Line_7 $$ throw new IllegalArgumentException(error(source) + "Variable name [" + name + "] already defined within the scope.")[ FD ]
Line_2 $$ Variable addVariable(final ParserRuleContext source, final String name, final Type type) -->Line_19 $$ return variable[ CD ]
