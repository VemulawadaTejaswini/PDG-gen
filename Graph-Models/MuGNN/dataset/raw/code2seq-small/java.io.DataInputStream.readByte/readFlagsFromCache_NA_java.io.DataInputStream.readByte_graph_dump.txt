Line_11 $$ if (stream != null) -->Line_12 $$ stream.close()[ CD ]
Line_2 $$ protected byte readFlagsFromCache(@NotNull VirtualFile file) -->Line_4 $$ boolean wasAutoDetectRun = false[ CD ]
Line_5 $$ byte status = 0-->Line_17 $$ status = BitUtil.set(status, AUTO_DETECT_WAS_RUN_MASK, wasAutoDetectRun)[ FD ]
Line_2 $$ protected byte readFlagsFromCache(@NotNull VirtualFile file) -->Line_3 $$ DataInputStream stream = autoDetectedAttribute.readAttribute(file)[ FD ]
Line_9 $$ wasAutoDetectRun = stream != null-->Line_17 $$ status = BitUtil.set(status, AUTO_DETECT_WAS_RUN_MASK, wasAutoDetectRun)[ FD ]
Line_4 $$ boolean wasAutoDetectRun = false-->Line_9 $$ wasAutoDetectRun = stream != null[ FD ]
Line_3 $$ DataInputStream stream = autoDetectedAttribute.readAttribute(file)-->Line_8 $$ status = stream == null ? 0 : stream.readByte()[ FD ]
Line_2 $$ protected byte readFlagsFromCache(@NotNull VirtualFile file) -->Line_5 $$ byte status = 0[ CD ]
Line_3 $$ DataInputStream stream = autoDetectedAttribute.readAttribute(file)-->Line_11 $$ if (stream != null) [ FD ]
Line_5 $$ byte status = 0-->Line_8 $$ status = stream == null ? 0 : stream.readByte()[ FD ]
Line_2 $$ protected byte readFlagsFromCache(@NotNull VirtualFile file) -->Line_3 $$ DataInputStream stream = autoDetectedAttribute.readAttribute(file)[ CD ]
Line_2 $$ protected byte readFlagsFromCache(@NotNull VirtualFile file) -->Line_17 $$ status = BitUtil.set(status, AUTO_DETECT_WAS_RUN_MASK, wasAutoDetectRun)[ CD ]
Line_2 $$ protected byte readFlagsFromCache(@NotNull VirtualFile file) -->Line_18 $$ return (byte) (status & (AUTO_DETECTED_AS_TEXT_MASK | AUTO_DETECTED_AS_BINARY_MASK | AUTO_DETECT_WAS_RUN_MASK))[ CD ]
Line_8 $$ status = stream == null ? 0 : stream.readByte()-->Line_17 $$ status = BitUtil.set(status, AUTO_DETECT_WAS_RUN_MASK, wasAutoDetectRun)[ FD ]
Line_3 $$ DataInputStream stream = autoDetectedAttribute.readAttribute(file)-->Line_9 $$ wasAutoDetectRun = stream != null[ FD ]
Line_3 $$ DataInputStream stream = autoDetectedAttribute.readAttribute(file)-->Line_12 $$ stream.close()[ FD ]
Line_4 $$ boolean wasAutoDetectRun = false-->Line_17 $$ status = BitUtil.set(status, AUTO_DETECT_WAS_RUN_MASK, wasAutoDetectRun)[ FD ]
