Line_8 $$ byte protocolVersion = inputStream.readByte()-->Line_9 $$ if (protocolVersion != lockInfoSerializer.getVersion()) [ FD ]
Line_3 $$ if (lockFileAccess.length() <= infoRegionPos) -->Line_7 $$ DataInputStream inputStream = new DataInputStream(new BufferedInputStream(new RandomAccessFileInputStream(lockFileAccess)))[ CD ]
Line_8 $$ byte protocolVersion = inputStream.readByte()-->Line_10 $$ throw new IllegalStateException(String.format("Unexpected lock protocol found in lock file. Expected %s, found %s.", lockInfoSerializer.getVersion(), protocolVersion))[ FD ]
Line_3 $$ if (lockFileAccess.length() <= infoRegionPos) -->Line_4 $$ return new LockInfo()[ CD ]
Line_3 $$ if (lockFileAccess.length() <= infoRegionPos) -->Line_6 $$ lockFileAccess.seek(infoRegionPos)[ CD ]
Line_7 $$ DataInputStream inputStream = new DataInputStream(new BufferedInputStream(new RandomAccessFileInputStream(lockFileAccess)))-->Line_12 $$ return lockInfoSerializer.read(inputStream)[ FD ]
Line_3 $$ if (lockFileAccess.length() <= infoRegionPos) -->Line_9 $$ if (protocolVersion != lockInfoSerializer.getVersion()) [ CD ]
Line_7 $$ DataInputStream inputStream = new DataInputStream(new BufferedInputStream(new RandomAccessFileInputStream(lockFileAccess)))-->Line_8 $$ byte protocolVersion = inputStream.readByte()[ FD ]
Line_2 $$ public LockInfo readLockInfo(RandomAccessFile lockFileAccess) throws IOException -->Line_3 $$ if (lockFileAccess.length() <= infoRegionPos) [ FD ]
Line_2 $$ public LockInfo readLockInfo(RandomAccessFile lockFileAccess) throws IOException -->Line_6 $$ lockFileAccess.seek(infoRegionPos)[ FD ]
Line_2 $$ public LockInfo readLockInfo(RandomAccessFile lockFileAccess) throws IOException -->Line_3 $$ if (lockFileAccess.length() <= infoRegionPos) [ CD ]
Line_3 $$ if (lockFileAccess.length() <= infoRegionPos) -->Line_12 $$ return lockInfoSerializer.read(inputStream)[ CD ]
Line_3 $$ if (lockFileAccess.length() <= infoRegionPos) -->Line_8 $$ byte protocolVersion = inputStream.readByte()[ CD ]
