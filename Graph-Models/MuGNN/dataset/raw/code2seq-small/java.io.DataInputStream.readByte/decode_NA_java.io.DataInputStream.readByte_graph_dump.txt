Line_2 $$ private static long decode(byte[] bytes) throws IOException -->Line_4 $$ byte version = dataInput.readByte()[ CD ]
Line_2 $$ private static long decode(byte[] bytes) throws IOException -->Line_8 $$ return dataInput.readLong()[ CD ]
Line_3 $$ DataInputStream dataInput = new DataInputStream(new ByteArrayInputStream(bytes))-->Line_8 $$ return dataInput.readLong()[ FD ]
Line_3 $$ DataInputStream dataInput = new DataInputStream(new ByteArrayInputStream(bytes))-->Line_4 $$ byte version = dataInput.readByte()[ FD ]
Line_4 $$ byte version = dataInput.readByte()-->Line_5 $$ if (version != PROTOCOL_VERSION) [ FD ]
Line_2 $$ private static long decode(byte[] bytes) throws IOException -->Line_5 $$ if (version != PROTOCOL_VERSION) [ CD ]
Line_2 $$ private static long decode(byte[] bytes) throws IOException -->Line_3 $$ DataInputStream dataInput = new DataInputStream(new ByteArrayInputStream(bytes))[ CD ]
Line_4 $$ byte version = dataInput.readByte()-->Line_6 $$ throw new IllegalArgumentException(String.format("Unexpected protocol version %s received in lock contention notification message", version))[ FD ]
