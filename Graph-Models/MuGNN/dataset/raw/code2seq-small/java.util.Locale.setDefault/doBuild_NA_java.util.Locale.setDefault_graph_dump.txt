Line_3 $$ Properties originalSystemProperties = new Properties()-->Line_4 $$ originalSystemProperties.putAll(System.getProperties())[ FD ]
Line_2 $$ protected void doBuild(DaemonCommandExecution execution, Build build) -->Line_21 $$ processEnvironment.maybeSetProcessDir(build.getParameters().getCurrentDir())[ CD ]
Line_2 $$ protected void doBuild(DaemonCommandExecution execution, Build build) -->Line_6 $$ File originalProcessDir = GFileUtils.canonicalise(new File("."))[ CD ]
Line_2 $$ protected void doBuild(DaemonCommandExecution execution, Build build) -->Line_3 $$ Properties originalSystemProperties = new Properties()[ CD ]
Line_7 $$ for (Map.Entry<String, String> entry : build.getParameters().getSystemProperties().entrySet()) -->Line_11 $$ if (SystemProperties.getInstance().getNonStandardImportantProperties().contains(entry.getKey())) [ FD ]
Line_7 $$ for (Map.Entry<String, String> entry : build.getParameters().getSystemProperties().entrySet()) -->Line_17 $$ System.setProperty(entry.getKey(), entry.getValue())[ FD ]
Line_6 $$ File originalProcessDir = GFileUtils.canonicalise(new File("."))-->Line_28 $$ processEnvironment.maybeSetProcessDir(originalProcessDir)[ FD ]
Line_22 $$ Locale locale = Locale.getDefault()-->Line_29 $$ Locale.setDefault(locale)[ FD ]
Line_2 $$ protected void doBuild(DaemonCommandExecution execution, Build build) -->Line_22 $$ Locale locale = Locale.getDefault()[ CD ]
Line_2 $$ protected void doBuild(DaemonCommandExecution execution, Build build) -->Line_20 $$ processEnvironment.maybeSetEnvironment(build.getParameters().getEnvVariables())[ CD ]
Line_7 $$ for (Map.Entry<String, String> entry : build.getParameters().getSystemProperties().entrySet()) -->Line_8 $$ if (SystemProperties.getInstance().getStandardProperties().contains(entry.getKey())) [ FD ]
Line_3 $$ Properties originalSystemProperties = new Properties()-->Line_26 $$ System.setProperties(originalSystemProperties)[ FD ]
Line_2 $$ protected void doBuild(DaemonCommandExecution execution, Build build) -->Line_19 $$ LOGGER.debug("Configuring env variables: [ FD ]
Line_2 $$ protected void doBuild(DaemonCommandExecution execution, Build build) -->Line_5 $$ Map<String, String> originalEnv = new HashMap<String, String>(System.getenv())[ CD ]
Line_2 $$ protected void doBuild(DaemonCommandExecution execution, Build build) -->Line_4 $$ originalSystemProperties.putAll(System.getProperties())[ CD ]
Line_5 $$ Map<String, String> originalEnv = new HashMap<String, String>(System.getenv())-->Line_27 $$ processEnvironment.maybeSetEnvironment(originalEnv)[ FD ]
Line_7 $$ for (Map.Entry<String, String> entry : build.getParameters().getSystemProperties().entrySet()) -->Line_14 $$ if (entry.getKey().startsWith("sun.") || entry.getKey().startsWith("awt.") || entry.getKey().contains(".awt.")) [ FD ]
Line_2 $$ protected void doBuild(DaemonCommandExecution execution, Build build) -->Line_19 $$ LOGGER.debug("Configuring env variables: [ CD ]
Line_2 $$ protected void doBuild(DaemonCommandExecution execution, Build build) -->Line_20 $$ processEnvironment.maybeSetEnvironment(build.getParameters().getEnvVariables())[ FD ]
Line_2 $$ protected void doBuild(DaemonCommandExecution execution, Build build) -->Line_7 $$ for (Map.Entry<String, String> entry : build.getParameters().getSystemProperties().entrySet()) [ FD ]
Line_2 $$ protected void doBuild(DaemonCommandExecution execution, Build build) -->Line_21 $$ processEnvironment.maybeSetProcessDir(build.getParameters().getCurrentDir())[ FD ]
Line_2 $$ protected void doBuild(DaemonCommandExecution execution, Build build) -->Line_24 $$ execution.proceed()[ FD ]
