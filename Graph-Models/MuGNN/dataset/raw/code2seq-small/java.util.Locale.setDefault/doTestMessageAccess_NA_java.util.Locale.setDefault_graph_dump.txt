Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_39 $$ MessageSourceAccessor accessor = new MessageSourceAccessor(ac)[ CD ]
Line_36 $$ if (reloadable) -->Line_37 $$ assertEquals("nachricht2xml", ac.getMessage("code2", null, Locale.GERMANY))[ CD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_69 $$ assertEquals("[ CD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_18 $$ if (!fallbackToSystemLocale) [ CD ]
Line_5 $$ StaticApplicationContext parent = new StaticApplicationContext()-->Line_6 $$ parent.refresh()[ FD ]
Line_13 $$ basenames = new String[] -->Line_15 $$ basenames = new String[] [ FD ]
Line_47 $$ MessageSourceResolvable resolvable = new DefaultMessageSourceResolvable("code3")-->Line_63 $$ assertEquals("default", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_68 $$ assertEquals("Arg1, Arg2", ac.getMessage("hello", new Object[] [ CD ]
Line_24 $$ if (alwaysUseMessageFormat) -->Line_25 $$ pvs.add("alwaysUseMessageFormat", Boolean.TRUE)[ CD ]
Line_9 $$ MutablePropertyValues pvs = new MutablePropertyValues()-->Line_22 $$ pvs.add("useCodeAsDefaultMessage", Boolean.TRUE)[ FD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_35 $$ assertEquals("noochricht2", ac.getMessage("code2", null, new Locale("DE", "at", "oo")))[ FD ]
Line_52 $$ resolvable = new DefaultMessageSourceResolvable(new String[] -->Line_53 $$ assertEquals("message3", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_60 $$ resolvable = new DefaultMessageSourceResolvable(null, null, "default")[ CD ]
Line_49 $$ resolvable = new DefaultMessageSourceResolvable(new String[] -->Line_61 $$ assertEquals("default", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_49 $$ resolvable = new DefaultMessageSourceResolvable(new String[] -->Line_53 $$ assertEquals("message3", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_50 $$ assertEquals("message3", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_64 $$ resolvable = new DefaultMessageSourceResolvable(null, null, "-->Line_65 $$ assertEquals("[ FD ]
Line_49 $$ resolvable = new DefaultMessageSourceResolvable(new String[] -->Line_62 $$ resolvable = new DefaultMessageSourceResolvable(null, args, "default")[ FD ]
Line_9 $$ MutablePropertyValues pvs = new MutablePropertyValues()-->Line_17 $$ pvs.add("basenames", basenames)[ FD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_71 $$ assertEquals("I'm", ac.getMessage("escaped", null, Locale.ENGLISH))[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_10 $$ String basepath = "org/springframework/context/support/"[ CD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_18 $$ if (!fallbackToSystemLocale) [ FD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_58 $$ assertEquals("[ FD ]
Line_52 $$ resolvable = new DefaultMessageSourceResolvable(new String[] -->Line_67 $$ assertEquals("Hello, default", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_9 $$ MutablePropertyValues pvs = new MutablePropertyValues()-->Line_28 $$ ac.registerSingleton("messageSource", clazz, pvs)[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_33 $$ assertEquals("nachricht2", ac.getMessage("code2", null, Locale.GERMAN))[ CD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_56 $$ assertEquals("default", ac.getMessage(null, null, "default", Locale.ENGLISH))[ CD ]
Line_62 $$ resolvable = new DefaultMessageSourceResolvable(null, args, "default")-->Line_64 $$ resolvable = new DefaultMessageSourceResolvable(null, null, "[ FD ]
Line_60 $$ resolvable = new DefaultMessageSourceResolvable(null, null, "default")-->Line_63 $$ assertEquals("default", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_12 $$ if (reloadable) [ CD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_9 $$ MutablePropertyValues pvs = new MutablePropertyValues()[ CD ]
Line_52 $$ resolvable = new DefaultMessageSourceResolvable(new String[] -->Line_65 $$ assertEquals("[ FD ]
Line_52 $$ resolvable = new DefaultMessageSourceResolvable(new String[] -->Line_66 $$ resolvable = new DefaultMessageSourceResolvable(null, args, "[ FD ]
Line_15 $$ basenames = new String[] -->Line_17 $$ pvs.add("basenames", basenames)[ FD ]
Line_82 $$ if (useCodeAsDefaultMessage) -->Line_83 $$ fail("Should have returned code as default message")[ CD ]
Line_78 $$ if (!useCodeAsDefaultMessage) -->Line_79 $$ fail("Should have thrown NoSuchMessageException")[ CD ]
Line_47 $$ MessageSourceResolvable resolvable = new DefaultMessageSourceResolvable("code3")-->Line_60 $$ resolvable = new DefaultMessageSourceResolvable(null, null, "default")[ FD ]
Line_47 $$ MessageSourceResolvable resolvable = new DefaultMessageSourceResolvable("code3")-->Line_53 $$ assertEquals("message3", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_9 $$ MutablePropertyValues pvs = new MutablePropertyValues()-->Line_25 $$ pvs.add("alwaysUseMessageFormat", Boolean.TRUE)[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_57 $$ assertEquals("default", ac.getMessage(null, args, "default", Locale.ENGLISH))[ CD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_50 $$ assertEquals("message3", ac.getMessage(resolvable, Locale.ENGLISH))[ CD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_7 $$ ac.setParent(parent)[ FD ]
Line_52 $$ resolvable = new DefaultMessageSourceResolvable(new String[] -->Line_60 $$ resolvable = new DefaultMessageSourceResolvable(null, null, "default")[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_35 $$ assertEquals("noochricht2", ac.getMessage("code2", null, new Locale("DE", "at", "oo")))[ CD ]
Line_52 $$ resolvable = new DefaultMessageSourceResolvable(new String[] -->Line_63 $$ assertEquals("default", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()[ CD ]
Line_47 $$ MessageSourceResolvable resolvable = new DefaultMessageSourceResolvable("code3")-->Line_49 $$ resolvable = new DefaultMessageSourceResolvable(new String[] [ FD ]
Line_66 $$ resolvable = new DefaultMessageSourceResolvable(null, args, "-->Line_67 $$ assertEquals("Hello, default", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_47 $$ MessageSourceResolvable resolvable = new DefaultMessageSourceResolvable("code3")-->Line_65 $$ assertEquals("[ FD ]
Line_60 $$ resolvable = new DefaultMessageSourceResolvable(null, null, "default")-->Line_62 $$ resolvable = new DefaultMessageSourceResolvable(null, args, "default")[ FD ]
Line_47 $$ MessageSourceResolvable resolvable = new DefaultMessageSourceResolvable("code3")-->Line_67 $$ assertEquals("Hello, default", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_60 $$ resolvable = new DefaultMessageSourceResolvable(null, null, "default")-->Line_66 $$ resolvable = new DefaultMessageSourceResolvable(null, args, "[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_49 $$ resolvable = new DefaultMessageSourceResolvable(new String[] [ CD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_61 $$ assertEquals("default", ac.getMessage(resolvable, Locale.ENGLISH))[ CD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_34 $$ assertEquals("nochricht2", ac.getMessage("code2", null, new Locale("DE", "at")))[ CD ]
Line_49 $$ resolvable = new DefaultMessageSourceResolvable(new String[] -->Line_60 $$ resolvable = new DefaultMessageSourceResolvable(null, null, "default")[ FD ]
Line_62 $$ resolvable = new DefaultMessageSourceResolvable(null, args, "default")-->Line_66 $$ resolvable = new DefaultMessageSourceResolvable(null, args, "[ FD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_51 $$ assertEquals("message3", ac.getMessage("code3", null, Locale.ENGLISH))[ FD ]
Line_47 $$ MessageSourceResolvable resolvable = new DefaultMessageSourceResolvable("code3")-->Line_62 $$ resolvable = new DefaultMessageSourceResolvable(null, args, "default")[ FD ]
Line_54 $$ Object[] args = new Object[] -->Line_57 $$ assertEquals("default", ac.getMessage(null, args, "default", Locale.ENGLISH))[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_31 $$ assertEquals("message1", ac.getMessage("code1", null, Locale.ENGLISH))[ CD ]
Line_54 $$ Object[] args = new Object[] -->Line_59 $$ assertEquals("Hello, default", ac.getMessage(null, args, "[ FD ]
Line_4 $$ if (reloadable) -->Line_6 $$ parent.refresh()[ CD ]
Line_39 $$ MessageSourceAccessor accessor = new MessageSourceAccessor(ac)-->Line_42 $$ assertEquals("nochricht2", accessor.getMessage("code2"))[ FD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_34 $$ assertEquals("nochricht2", ac.getMessage("code2", null, new Locale("DE", "at")))[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_30 $$ Locale.setDefault(expectGermanFallback ? Locale.GERMAN : Locale.CANADA)[ CD ]
Line_47 $$ MessageSourceResolvable resolvable = new DefaultMessageSourceResolvable("code3")-->Line_61 $$ assertEquals("default", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_13 $$ basenames = new String[] -->Line_17 $$ pvs.add("basenames", basenames)[ FD ]
Line_12 $$ if (reloadable) -->Line_13 $$ basenames = new String[] [ CD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_17 $$ pvs.add("basenames", basenames)[ CD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_75 $$ assertEquals("I'm", ac.getMessage("escaped", new Object[] [ FD ]
Line_49 $$ resolvable = new DefaultMessageSourceResolvable(new String[] -->Line_67 $$ assertEquals("Hello, default", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_64 $$ resolvable = new DefaultMessageSourceResolvable(null, null, "[ CD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_53 $$ assertEquals("message3", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_62 $$ resolvable = new DefaultMessageSourceResolvable(null, args, "default")-->Line_67 $$ assertEquals("Hello, default", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_36 $$ if (reloadable) [ CD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_69 $$ assertEquals("[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_75 $$ assertEquals("I'm", ac.getMessage("escaped", new Object[] [ CD ]
Line_47 $$ MessageSourceResolvable resolvable = new DefaultMessageSourceResolvable("code3")-->Line_66 $$ resolvable = new DefaultMessageSourceResolvable(null, args, "[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_46 $$ assertEquals("message3", ac.getMessage("code3", null, Locale.ENGLISH))[ CD ]
Line_11 $$ String[] basenames-->Line_17 $$ pvs.add("basenames", basenames)[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_52 $$ resolvable = new DefaultMessageSourceResolvable(new String[] [ CD ]
Line_11 $$ String[] basenames-->Line_13 $$ basenames = new String[] [ FD ]
Line_70 $$ if (alwaysUseMessageFormat) -->Line_73 $$ assertEquals("I''m", ac.getMessage("escaped", null, Locale.ENGLISH))[ CD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_57 $$ assertEquals("default", ac.getMessage(null, args, "default", Locale.ENGLISH))[ FD ]
Line_4 $$ if (reloadable) -->Line_5 $$ StaticApplicationContext parent = new StaticApplicationContext()[ CD ]
Line_60 $$ resolvable = new DefaultMessageSourceResolvable(null, null, "default")-->Line_61 $$ assertEquals("default", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_49 $$ resolvable = new DefaultMessageSourceResolvable(new String[] -->Line_66 $$ resolvable = new DefaultMessageSourceResolvable(null, args, "[ FD ]
Line_52 $$ resolvable = new DefaultMessageSourceResolvable(new String[] -->Line_62 $$ resolvable = new DefaultMessageSourceResolvable(null, args, "default")[ FD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_68 $$ assertEquals("Arg1, Arg2", ac.getMessage("hello", new Object[] [ FD ]
Line_64 $$ resolvable = new DefaultMessageSourceResolvable(null, null, "-->Line_67 $$ assertEquals("Hello, default", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_77 $$ assertEquals("code4", ac.getMessage("code4", null, Locale.GERMAN))[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_24 $$ if (alwaysUseMessageFormat) [ CD ]
Line_52 $$ resolvable = new DefaultMessageSourceResolvable(new String[] -->Line_64 $$ resolvable = new DefaultMessageSourceResolvable(null, null, "[ FD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_28 $$ ac.registerSingleton("messageSource", clazz, pvs)[ FD ]
Line_49 $$ resolvable = new DefaultMessageSourceResolvable(new String[] -->Line_50 $$ assertEquals("message3", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_27 $$ Class<?> clazz = reloadable ? (Class<?>) ReloadableResourceBundleMessageSource.class : ResourceBundleMessageSource.class[ CD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_55 $$ assertEquals("Hello, message1", ac.getMessage("hello", args, Locale.ENGLISH))[ CD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_56 $$ assertEquals("default", ac.getMessage(null, null, "default", Locale.ENGLISH))[ FD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_33 $$ assertEquals("nachricht2", ac.getMessage("code2", null, Locale.GERMAN))[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_48 $$ assertEquals("message3", ac.getMessage(resolvable, Locale.ENGLISH))[ CD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_59 $$ assertEquals("Hello, default", ac.getMessage(null, args, "[ CD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_61 $$ assertEquals("default", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_49 $$ resolvable = new DefaultMessageSourceResolvable(new String[] -->Line_63 $$ assertEquals("default", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_27 $$ Class<?> clazz = reloadable ? (Class<?>) ReloadableResourceBundleMessageSource.class : ResourceBundleMessageSource.class-->Line_28 $$ ac.registerSingleton("messageSource", clazz, pvs)[ FD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_46 $$ assertEquals("message3", ac.getMessage("code3", null, Locale.ENGLISH))[ FD ]
Line_18 $$ if (!fallbackToSystemLocale) -->Line_19 $$ pvs.add("fallbackToSystemLocale", Boolean.FALSE)[ CD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_67 $$ assertEquals("Hello, default", ac.getMessage(resolvable, Locale.ENGLISH))[ CD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_4 $$ if (reloadable) [ CD ]
Line_64 $$ resolvable = new DefaultMessageSourceResolvable(null, null, "-->Line_66 $$ resolvable = new DefaultMessageSourceResolvable(null, args, "[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_21 $$ if (useCodeAsDefaultMessage) [ CD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_53 $$ assertEquals("message3", ac.getMessage(resolvable, Locale.ENGLISH))[ CD ]
Line_60 $$ resolvable = new DefaultMessageSourceResolvable(null, null, "default")-->Line_65 $$ assertEquals("[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_11 $$ String[] basenames[ CD ]
Line_9 $$ MutablePropertyValues pvs = new MutablePropertyValues()-->Line_19 $$ pvs.add("fallbackToSystemLocale", Boolean.FALSE)[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_40 $$ LocaleContextHolder.setLocale(new Locale("DE", "at"))[ CD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_47 $$ MessageSourceResolvable resolvable = new DefaultMessageSourceResolvable("code3")[ CD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_31 $$ assertEquals("message1", ac.getMessage("code1", null, Locale.ENGLISH))[ FD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_37 $$ assertEquals("nachricht2xml", ac.getMessage("code2", null, Locale.GERMANY))[ FD ]
Line_49 $$ resolvable = new DefaultMessageSourceResolvable(new String[] -->Line_65 $$ assertEquals("[ FD ]
Line_11 $$ String[] basenames-->Line_15 $$ basenames = new String[] [ FD ]
Line_52 $$ resolvable = new DefaultMessageSourceResolvable(new String[] -->Line_61 $$ assertEquals("default", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_78 $$ if (!useCodeAsDefaultMessage) [ FD ]
Line_54 $$ Object[] args = new Object[] -->Line_55 $$ assertEquals("Hello, message1", ac.getMessage("hello", args, Locale.ENGLISH))[ FD ]
Line_4 $$ if (reloadable) -->Line_7 $$ ac.setParent(parent)[ CD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_62 $$ resolvable = new DefaultMessageSourceResolvable(null, args, "default")[ CD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_48 $$ assertEquals("message3", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_60 $$ resolvable = new DefaultMessageSourceResolvable(null, null, "default")-->Line_67 $$ assertEquals("Hello, default", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_29 $$ ac.refresh()[ CD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_51 $$ assertEquals("message3", ac.getMessage("code3", null, Locale.ENGLISH))[ CD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_63 $$ assertEquals("default", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_63 $$ assertEquals("default", ac.getMessage(resolvable, Locale.ENGLISH))[ CD ]
Line_70 $$ if (alwaysUseMessageFormat) -->Line_71 $$ assertEquals("I'm", ac.getMessage("escaped", null, Locale.ENGLISH))[ CD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_32 $$ assertEquals(fallbackToSystemLocale && expectGermanFallback ? "nachricht2" : "message2", ac.getMessage("code2", null, Locale.ENGLISH))[ FD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_67 $$ assertEquals("Hello, default", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_65 $$ assertEquals("[ CD ]
Line_47 $$ MessageSourceResolvable resolvable = new DefaultMessageSourceResolvable("code3")-->Line_50 $$ assertEquals("message3", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_5 $$ StaticApplicationContext parent = new StaticApplicationContext()-->Line_7 $$ ac.setParent(parent)[ FD ]
Line_47 $$ MessageSourceResolvable resolvable = new DefaultMessageSourceResolvable("code3")-->Line_64 $$ resolvable = new DefaultMessageSourceResolvable(null, null, "[ FD ]
Line_49 $$ resolvable = new DefaultMessageSourceResolvable(new String[] -->Line_52 $$ resolvable = new DefaultMessageSourceResolvable(new String[] [ FD ]
Line_21 $$ if (useCodeAsDefaultMessage) -->Line_22 $$ pvs.add("useCodeAsDefaultMessage", Boolean.TRUE)[ CD ]
Line_12 $$ if (reloadable) -->Line_15 $$ basenames = new String[] [ CD ]
Line_47 $$ MessageSourceResolvable resolvable = new DefaultMessageSourceResolvable("code3")-->Line_52 $$ resolvable = new DefaultMessageSourceResolvable(new String[] [ FD ]
Line_49 $$ resolvable = new DefaultMessageSourceResolvable(new String[] -->Line_64 $$ resolvable = new DefaultMessageSourceResolvable(null, null, "[ FD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_29 $$ ac.refresh()[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_28 $$ ac.registerSingleton("messageSource", clazz, pvs)[ CD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_54 $$ Object[] args = new Object[] [ CD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_66 $$ resolvable = new DefaultMessageSourceResolvable(null, args, "[ CD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_70 $$ if (alwaysUseMessageFormat) [ CD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_32 $$ assertEquals(fallbackToSystemLocale && expectGermanFallback ? "nachricht2" : "message2", ac.getMessage("code2", null, Locale.ENGLISH))[ CD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_65 $$ assertEquals("[ FD ]
Line_62 $$ resolvable = new DefaultMessageSourceResolvable(null, args, "default")-->Line_65 $$ assertEquals("[ FD ]
Line_2 $$ protected void doTestMessageAccess(boolean reloadable, boolean fallbackToSystemLocale, boolean expectGermanFallback, boolean useCodeAsDefaultMessage, boolean alwaysUseMessageFormat) -->Line_58 $$ assertEquals("[ CD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_59 $$ assertEquals("Hello, default", ac.getMessage(null, args, "[ FD ]
Line_62 $$ resolvable = new DefaultMessageSourceResolvable(null, args, "default")-->Line_63 $$ assertEquals("default", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_47 $$ MessageSourceResolvable resolvable = new DefaultMessageSourceResolvable("code3")-->Line_48 $$ assertEquals("message3", ac.getMessage(resolvable, Locale.ENGLISH))[ FD ]
Line_60 $$ resolvable = new DefaultMessageSourceResolvable(null, null, "default")-->Line_64 $$ resolvable = new DefaultMessageSourceResolvable(null, null, "[ FD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_73 $$ assertEquals("I''m", ac.getMessage("escaped", null, Locale.ENGLISH))[ FD ]
Line_3 $$ StaticApplicationContext ac = new StaticApplicationContext()-->Line_55 $$ assertEquals("Hello, message1", ac.getMessage("hello", args, Locale.ENGLISH))[ FD ]
