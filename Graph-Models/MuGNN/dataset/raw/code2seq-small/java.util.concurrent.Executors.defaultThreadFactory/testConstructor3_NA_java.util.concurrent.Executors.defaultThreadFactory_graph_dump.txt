Line_2 $$ public void testConstructor3() -->Line_13 $$ Assert.assertSame(threadFactory, threadPoolExecutor.getThreadFactory())[ CD ]
Line_6 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 2, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 3, rejectedExecutionHandler, threadFactory, threadPoolHandler)-->Line_7 $$ Assert.assertEquals(1, threadPoolExecutor.getCorePoolSize())[ FD ]
Line_3 $$ RejectedExecutionHandler rejectedExecutionHandler = new CallerRunsPolicy()-->Line_12 $$ Assert.assertSame(rejectedExecutionHandler, threadPoolExecutor.getRejectedExecutionHandler())[ FD ]
Line_2 $$ public void testConstructor3() -->Line_15 $$ Assert.assertFalse(threadPoolExecutor.isShutdown())[ CD ]
Line_2 $$ public void testConstructor3() -->Line_4 $$ ThreadFactory threadFactory = Executors.defaultThreadFactory()[ CD ]
Line_6 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 2, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 3, rejectedExecutionHandler, threadFactory, threadPoolHandler)-->Line_8 $$ Assert.assertEquals(2, threadPoolExecutor.getMaxPoolSize())[ FD ]
Line_6 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 2, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 3, rejectedExecutionHandler, threadFactory, threadPoolHandler)-->Line_16 $$ Assert.assertFalse(threadPoolExecutor.isTerminating())[ FD ]
Line_6 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 2, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 3, rejectedExecutionHandler, threadFactory, threadPoolHandler)-->Line_13 $$ Assert.assertSame(threadFactory, threadPoolExecutor.getThreadFactory())[ FD ]
Line_4 $$ ThreadFactory threadFactory = Executors.defaultThreadFactory()-->Line_13 $$ Assert.assertSame(threadFactory, threadPoolExecutor.getThreadFactory())[ FD ]
Line_2 $$ public void testConstructor3() -->Line_14 $$ Assert.assertSame(threadPoolHandler, threadPoolExecutor.getThreadPoolHandler())[ CD ]
Line_2 $$ public void testConstructor3() -->Line_10 $$ Assert.assertEquals(true, threadPoolExecutor.isAllowCoreThreadTimeout())[ CD ]
Line_6 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 2, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 3, rejectedExecutionHandler, threadFactory, threadPoolHandler)-->Line_9 $$ Assert.assertEquals(TestUtil.KEEPALIVE_TIME * 1000000, threadPoolExecutor.getKeepAliveTime(TimeUnit.NANOSECONDS))[ FD ]
Line_6 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 2, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 3, rejectedExecutionHandler, threadFactory, threadPoolHandler)-->Line_14 $$ Assert.assertSame(threadPoolHandler, threadPoolExecutor.getThreadPoolHandler())[ FD ]
Line_2 $$ public void testConstructor3() -->Line_16 $$ Assert.assertFalse(threadPoolExecutor.isTerminating())[ CD ]
Line_2 $$ public void testConstructor3() -->Line_9 $$ Assert.assertEquals(TestUtil.KEEPALIVE_TIME * 1000000, threadPoolExecutor.getKeepAliveTime(TimeUnit.NANOSECONDS))[ CD ]
Line_2 $$ public void testConstructor3() -->Line_12 $$ Assert.assertSame(rejectedExecutionHandler, threadPoolExecutor.getRejectedExecutionHandler())[ CD ]
Line_6 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 2, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 3, rejectedExecutionHandler, threadFactory, threadPoolHandler)-->Line_10 $$ Assert.assertEquals(true, threadPoolExecutor.isAllowCoreThreadTimeout())[ FD ]
Line_2 $$ public void testConstructor3() -->Line_5 $$ ThreadPoolHandler threadPoolHandler = new ThreadPoolHandlerAdapter()[ CD ]
Line_2 $$ public void testConstructor3() -->Line_7 $$ Assert.assertEquals(1, threadPoolExecutor.getCorePoolSize())[ CD ]
Line_2 $$ public void testConstructor3() -->Line_3 $$ RejectedExecutionHandler rejectedExecutionHandler = new CallerRunsPolicy()[ CD ]
Line_6 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 2, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 3, rejectedExecutionHandler, threadFactory, threadPoolHandler)-->Line_12 $$ Assert.assertSame(rejectedExecutionHandler, threadPoolExecutor.getRejectedExecutionHandler())[ FD ]
Line_2 $$ public void testConstructor3() -->Line_6 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 2, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 3, rejectedExecutionHandler, threadFactory, threadPoolHandler)[ CD ]
Line_6 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 2, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 3, rejectedExecutionHandler, threadFactory, threadPoolHandler)-->Line_17 $$ Assert.assertFalse(threadPoolExecutor.isTerminated())[ FD ]
Line_6 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 2, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 3, rejectedExecutionHandler, threadFactory, threadPoolHandler)-->Line_11 $$ Assert.assertEquals(3, threadPoolExecutor.getRemainingTaskQueueCapacity())[ FD ]
Line_5 $$ ThreadPoolHandler threadPoolHandler = new ThreadPoolHandlerAdapter()-->Line_14 $$ Assert.assertSame(threadPoolHandler, threadPoolExecutor.getThreadPoolHandler())[ FD ]
Line_2 $$ public void testConstructor3() -->Line_17 $$ Assert.assertFalse(threadPoolExecutor.isTerminated())[ CD ]
Line_6 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 2, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 3, rejectedExecutionHandler, threadFactory, threadPoolHandler)-->Line_15 $$ Assert.assertFalse(threadPoolExecutor.isShutdown())[ FD ]
Line_2 $$ public void testConstructor3() -->Line_8 $$ Assert.assertEquals(2, threadPoolExecutor.getMaxPoolSize())[ CD ]
Line_2 $$ public void testConstructor3() -->Line_11 $$ Assert.assertEquals(3, threadPoolExecutor.getRemainingTaskQueueCapacity())[ CD ]
