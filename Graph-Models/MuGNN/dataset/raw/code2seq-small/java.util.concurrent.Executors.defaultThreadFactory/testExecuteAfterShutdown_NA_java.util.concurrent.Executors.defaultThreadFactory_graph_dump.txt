Line_2 $$ public void testExecuteAfterShutdown() -->Line_5 $$ threadPoolExecutor.shutdown()[ CD ]
Line_2 $$ public void testExecuteAfterShutdown() -->Line_9 $$ List<Runnable> rejectedList = recordRejectedExecutionHandler.getRejectedList()[ CD ]
Line_6 $$ MarkerBlockingJob markerBlockingJob = new MarkerBlockingJob()-->Line_8 $$ Assert.assertFalse(markerBlockingJob.isStarted())[ FD ]
Line_2 $$ public void testExecuteAfterShutdown() -->Line_8 $$ Assert.assertFalse(markerBlockingJob.isStarted())[ CD ]
Line_2 $$ public void testExecuteAfterShutdown() -->Line_6 $$ MarkerBlockingJob markerBlockingJob = new MarkerBlockingJob()[ CD ]
Line_2 $$ public void testExecuteAfterShutdown() -->Line_3 $$ RecordRejectedExecutionHandler recordRejectedExecutionHandler = new RecordRejectedExecutionHandler()[ CD ]
Line_6 $$ MarkerBlockingJob markerBlockingJob = new MarkerBlockingJob()-->Line_7 $$ threadPoolExecutor.execute(markerBlockingJob)[ FD ]
Line_2 $$ public void testExecuteAfterShutdown() -->Line_11 $$ Assert.assertSame(markerBlockingJob, rejectedList.get(0))[ CD ]
Line_2 $$ public void testExecuteAfterShutdown() -->Line_4 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 2, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 3, recordRejectedExecutionHandler, Executors.defaultThreadFactory(), new ThreadPoolHandlerAdapter())[ CD ]
Line_2 $$ public void testExecuteAfterShutdown() -->Line_10 $$ Assert.assertEquals(1, rejectedList.size())[ CD ]
Line_4 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 2, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 3, recordRejectedExecutionHandler, Executors.defaultThreadFactory(), new ThreadPoolHandlerAdapter())-->Line_7 $$ threadPoolExecutor.execute(markerBlockingJob)[ FD ]
Line_3 $$ RecordRejectedExecutionHandler recordRejectedExecutionHandler = new RecordRejectedExecutionHandler()-->Line_9 $$ List<Runnable> rejectedList = recordRejectedExecutionHandler.getRejectedList()[ FD ]
Line_6 $$ MarkerBlockingJob markerBlockingJob = new MarkerBlockingJob()-->Line_11 $$ Assert.assertSame(markerBlockingJob, rejectedList.get(0))[ FD ]
Line_4 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 2, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 3, recordRejectedExecutionHandler, Executors.defaultThreadFactory(), new ThreadPoolHandlerAdapter())-->Line_5 $$ threadPoolExecutor.shutdown()[ FD ]
Line_9 $$ List<Runnable> rejectedList = recordRejectedExecutionHandler.getRejectedList()-->Line_10 $$ Assert.assertEquals(1, rejectedList.size())[ FD ]
Line_2 $$ public void testExecuteAfterShutdown() -->Line_7 $$ threadPoolExecutor.execute(markerBlockingJob)[ CD ]
Line_9 $$ List<Runnable> rejectedList = recordRejectedExecutionHandler.getRejectedList()-->Line_11 $$ Assert.assertSame(markerBlockingJob, rejectedList.get(0))[ FD ]
