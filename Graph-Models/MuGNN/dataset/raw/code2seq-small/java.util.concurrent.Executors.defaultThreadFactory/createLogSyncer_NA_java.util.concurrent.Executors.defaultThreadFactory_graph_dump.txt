Line_2 $$ public static ScheduledExecutorService createLogSyncer() -->Line_13 $$ ShutdownHookManager.get().addShutdownHook(new Runnable() [ CD ]
Line_13 $$ ShutdownHookManager.get().addShutdownHook(new Runnable() -->Line_17 $$ TaskLog.syncLogsShutdown(scheduler)[ CD ]
Line_3 $$ final ScheduledExecutorService scheduler = Executors.newSingleThreadScheduledExecutor(new ThreadFactory() -->Line_7 $$ final Thread t = Executors.defaultThreadFactory().newThread(r)[ FD ]
Line_3 $$ final ScheduledExecutorService scheduler = Executors.newSingleThreadScheduledExecutor(new ThreadFactory() -->Line_8 $$ t.setDaemon(true)[ CD ]
Line_2 $$ public static ScheduledExecutorService createLogSyncer() -->Line_27 $$ return scheduler[ CD ]
Line_2 $$ public static ScheduledExecutorService createLogSyncer() -->Line_3 $$ final ScheduledExecutorService scheduler = Executors.newSingleThreadScheduledExecutor(new ThreadFactory() [ CD ]
Line_3 $$ final ScheduledExecutorService scheduler = Executors.newSingleThreadScheduledExecutor(new ThreadFactory() -->Line_9 $$ t.setName("Thread for syncLogs")[ CD ]
Line_2 $$ public static ScheduledExecutorService createLogSyncer() -->Line_20 $$ scheduler.scheduleWithFixedDelay(new Runnable() [ CD ]
Line_3 $$ final ScheduledExecutorService scheduler = Executors.newSingleThreadScheduledExecutor(new ThreadFactory() -->Line_10 $$ return t[ CD ]
Line_7 $$ final Thread t = Executors.defaultThreadFactory().newThread(r)-->Line_9 $$ t.setName("Thread for syncLogs")[ FD ]
Line_3 $$ final ScheduledExecutorService scheduler = Executors.newSingleThreadScheduledExecutor(new ThreadFactory() -->Line_17 $$ TaskLog.syncLogsShutdown(scheduler)[ FD ]
Line_20 $$ scheduler.scheduleWithFixedDelay(new Runnable() -->Line_24 $$ TaskLog.syncLogs()[ CD ]
Line_3 $$ final ScheduledExecutorService scheduler = Executors.newSingleThreadScheduledExecutor(new ThreadFactory() -->Line_20 $$ scheduler.scheduleWithFixedDelay(new Runnable() [ FD ]
Line_7 $$ final Thread t = Executors.defaultThreadFactory().newThread(r)-->Line_8 $$ t.setDaemon(true)[ FD ]
Line_3 $$ final ScheduledExecutorService scheduler = Executors.newSingleThreadScheduledExecutor(new ThreadFactory() -->Line_7 $$ final Thread t = Executors.defaultThreadFactory().newThread(r)[ CD ]
