Line_4 $$ MarkerThreadPoolHandler markerThreadPoolHandler = new MarkerThreadPoolHandler()-->Line_11 $$ Assert.assertFalse(markerThreadPoolHandler.isAfterExecuteRan())[ FD ]
Line_5 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 2, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 3, new CallerRunsPolicy(), Executors.defaultThreadFactory(), markerThreadPoolHandler)-->Line_8 $$ threadPoolExecutor.execute(markerBlockingJob)[ FD ]
Line_7 $$ MarkerBlockingJob markerBlockingJob = new MarkerBlockingJob()-->Line_9 $$ Assert.assertFalse(markerBlockingJob.isStarted())[ FD ]
Line_7 $$ MarkerBlockingJob markerBlockingJob = new MarkerBlockingJob()-->Line_8 $$ threadPoolExecutor.execute(markerBlockingJob)[ FD ]
Line_4 $$ MarkerThreadPoolHandler markerThreadPoolHandler = new MarkerThreadPoolHandler()-->Line_10 $$ Assert.assertFalse(markerThreadPoolHandler.isBeforeExecuteRan())[ FD ]
Line_5 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 2, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 3, new CallerRunsPolicy(), Executors.defaultThreadFactory(), markerThreadPoolHandler)-->Line_6 $$ threadPoolExecutor.shutdown()[ FD ]
