Line_5 $$ final ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 2, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 3, recordRejectedExecutionHandler, Executors.defaultThreadFactory(), new ThreadPoolHandlerAdapter())-->Line_33 $$ threadPoolExecutor.execute(markerBlockingJob)[ FD ]
Line_7 $$ final CountDownLatch executeLatch = new CountDownLatch(1)-->Line_15 $$ executeLatch.countDown()[ FD ]
Line_5 $$ final ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 2, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 3, recordRejectedExecutionHandler, Executors.defaultThreadFactory(), new ThreadPoolHandlerAdapter())-->Line_21 $$ threadPoolExecutor.shutdown()[ FD ]
Line_4 $$ RecordRejectedExecutionHandler recordRejectedExecutionHandler = new RecordRejectedExecutionHandler()-->Line_34 $$ Assert.assertTrue(recordRejectedExecutionHandler.getRejectedList().isEmpty())[ FD ]
Line_5 $$ final ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 2, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 3, recordRejectedExecutionHandler, Executors.defaultThreadFactory(), new ThreadPoolHandlerAdapter())-->Line_6 $$ final TaskQueue<Runnable> taskQueue = threadPoolExecutor.getTaskQueue()[ FD ]
Line_6 $$ final TaskQueue<Runnable> taskQueue = threadPoolExecutor.getTaskQueue()-->Line_20 $$ Assert.assertNotNull(taskQueue.take())[ FD ]
Line_17 $$ while (!takeLock.hasQueuedThreads()) -->Line_18 $$ Thread.sleep(1)[ CD ]
Line_8 $$ Thread thread = new Thread() -->Line_29 $$ thread.start()[ FD ]
Line_7 $$ final CountDownLatch executeLatch = new CountDownLatch(1)-->Line_30 $$ executeLatch.await()[ FD ]
Line_13 $$ ReentrantLock takeLock = taskQueue.getTakeLock()-->Line_23 $$ takeLock.unlock()[ FD ]
Line_13 $$ ReentrantLock takeLock = taskQueue.getTakeLock()-->Line_14 $$ takeLock.lock()[ FD ]
Line_6 $$ final TaskQueue<Runnable> taskQueue = threadPoolExecutor.getTaskQueue()-->Line_13 $$ ReentrantLock takeLock = taskQueue.getTakeLock()[ FD ]
Line_13 $$ ReentrantLock takeLock = taskQueue.getTakeLock()-->Line_17 $$ while (!takeLock.hasQueuedThreads()) [ FD ]
Line_5 $$ final ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 2, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 3, recordRejectedExecutionHandler, Executors.defaultThreadFactory(), new ThreadPoolHandlerAdapter())-->Line_36 $$ TestUtil.closePool(threadPoolExecutor)[ FD ]
