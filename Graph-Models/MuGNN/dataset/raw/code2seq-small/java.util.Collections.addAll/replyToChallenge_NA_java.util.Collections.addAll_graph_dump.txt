Line_18 $$ final Vector<String> result = myXmlRpcClient.replyToChallenge(myHandlerNo, getUserHostString(), name, instruction, numPrompts, vPrompts, vEcho, myLastError)-->Line_25 $$ return ArrayUtilRt.toStringArray(result)[ FD ]
Line_19 $$ if (result == null) -->Line_23 $$ return rc[ CD ]
Line_19 $$ if (result == null) -->Line_22 $$ Arrays.fill(rc, "")[ CD ]
Line_12 $$ Vector<String> vPrompts = new Vector<String>(prompt.length)-->Line_18 $$ final Vector<String> result = myXmlRpcClient.replyToChallenge(myHandlerNo, getUserHostString(), name, instruction, numPrompts, vPrompts, vEcho, myLastError)[ FD ]
Line_18 $$ final Vector<String> result = myXmlRpcClient.replyToChallenge(myHandlerNo, getUserHostString(), name, instruction, numPrompts, vPrompts, vEcho, myLastError)-->Line_19 $$ if (result == null) [ FD ]
Line_19 $$ if (result == null) -->Line_21 $$ String[] rc = new String[numPrompts][ CD ]
Line_15 $$ for (boolean e : echo) -->Line_16 $$ vEcho.add(e)[ FD ]
Line_19 $$ if (result == null) -->Line_25 $$ return ArrayUtilRt.toStringArray(result)[ CD ]
Line_8 $$ if (numPrompts == 0) -->Line_9 $$ return ArrayUtilRt.EMPTY_STRING_ARRAY[ CD ]
Line_14 $$ Vector<Boolean> vEcho = new Vector<Boolean>(prompt.length)-->Line_16 $$ vEcho.add(e)[ FD ]
Line_12 $$ Vector<String> vPrompts = new Vector<String>(prompt.length)-->Line_13 $$ Collections.addAll(vPrompts, prompt)[ FD ]
Line_21 $$ String[] rc = new String[numPrompts]-->Line_22 $$ Arrays.fill(rc, "")[ FD ]
Line_14 $$ Vector<Boolean> vEcho = new Vector<Boolean>(prompt.length)-->Line_18 $$ final Vector<String> result = myXmlRpcClient.replyToChallenge(myHandlerNo, getUserHostString(), name, instruction, numPrompts, vPrompts, vEcho, myLastError)[ FD ]
