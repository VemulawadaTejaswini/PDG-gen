Line_9 $$ for (int i = 0; i < numRequests; i++) -->Line_13 $$ if (randomBoolean()) [ CD ]
Line_12 $$ PercolateRequest percolateRequest = new PercolateRequest().indices(indicesOrAliases).documentType("type")-->Line_18 $$ multiPercolateRequest.add(percolateRequest)[ FD ]
Line_9 $$ for (int i = 0; i < numRequests; i++) -->Line_12 $$ PercolateRequest percolateRequest = new PercolateRequest().indices(indicesOrAliases).documentType("type")[ CD ]
Line_9 $$ for (int i = 0; i < numRequests; i++) -->Line_10 $$ String[] indicesOrAliases = randomIndicesOrAliases()[ CD ]
Line_2 $$ public void testMultiPercolate() -->Line_21 $$ clearInterceptedActions()[ CD ]
Line_12 $$ PercolateRequest percolateRequest = new PercolateRequest().indices(indicesOrAliases).documentType("type")-->Line_14 $$ percolateRequest.getRequest(new GetRequest("test-get", "type", "1"))[ FD ]
Line_7 $$ List<String> indices = new ArrayList()-->Line_22 $$ assertIndicesSubset(indices, multiPercolateShardAction)[ FD ]
Line_2 $$ public void testMultiPercolate() -->Line_5 $$ client().prepareIndex("test-get", "type", "1").setSource("field", "value").get()[ CD ]
Line_6 $$ MultiPercolateRequest multiPercolateRequest = new MultiPercolateRequest()-->Line_20 $$ internalCluster().clientNodeClient().multiPercolate(multiPercolateRequest).actionGet()[ FD ]
Line_3 $$ String multiPercolateShardAction = MultiPercolateAction.NAME + "[shard][s]"-->Line_22 $$ assertIndicesSubset(indices, multiPercolateShardAction)[ FD ]
Line_2 $$ public void testMultiPercolate() -->Line_7 $$ List<String> indices = new ArrayList()[ CD ]
Line_2 $$ public void testMultiPercolate() -->Line_20 $$ internalCluster().clientNodeClient().multiPercolate(multiPercolateRequest).actionGet()[ CD ]
Line_9 $$ for (int i = 0; i < numRequests; i++) -->Line_11 $$ Collections.addAll(indices, indicesOrAliases)[ CD ]
Line_13 $$ if (randomBoolean()) -->Line_16 $$ percolateRequest.source("\"field\":\"value\"")[ CD ]
Line_6 $$ MultiPercolateRequest multiPercolateRequest = new MultiPercolateRequest()-->Line_18 $$ multiPercolateRequest.add(percolateRequest)[ FD ]
Line_2 $$ public void testMultiPercolate() -->Line_8 $$ int numRequests = iterations(1, 30)[ CD ]
Line_9 $$ for (int i = 0; i < numRequests; i++) -->Line_18 $$ multiPercolateRequest.add(percolateRequest)[ CD ]
Line_12 $$ PercolateRequest percolateRequest = new PercolateRequest().indices(indicesOrAliases).documentType("type")-->Line_16 $$ percolateRequest.source("\"field\":\"value\"")[ FD ]
Line_13 $$ if (randomBoolean()) -->Line_14 $$ percolateRequest.getRequest(new GetRequest("test-get", "type", "1"))[ CD ]
Line_3 $$ String multiPercolateShardAction = MultiPercolateAction.NAME + "[shard][s]"-->Line_4 $$ interceptTransportActions(multiPercolateShardAction)[ FD ]
Line_8 $$ int numRequests = iterations(1, 30)-->Line_9 $$ for (int i = 0; i < numRequests; i++) [ FD ]
Line_10 $$ String[] indicesOrAliases = randomIndicesOrAliases()-->Line_11 $$ Collections.addAll(indices, indicesOrAliases)[ FD ]
Line_10 $$ String[] indicesOrAliases = randomIndicesOrAliases()-->Line_12 $$ PercolateRequest percolateRequest = new PercolateRequest().indices(indicesOrAliases).documentType("type")[ FD ]
Line_2 $$ public void testMultiPercolate() -->Line_6 $$ MultiPercolateRequest multiPercolateRequest = new MultiPercolateRequest()[ CD ]
Line_2 $$ public void testMultiPercolate() -->Line_22 $$ assertIndicesSubset(indices, multiPercolateShardAction)[ CD ]
Line_2 $$ public void testMultiPercolate() -->Line_4 $$ interceptTransportActions(multiPercolateShardAction)[ CD ]
Line_2 $$ public void testMultiPercolate() -->Line_9 $$ for (int i = 0; i < numRequests; i++) [ CD ]
Line_7 $$ List<String> indices = new ArrayList()-->Line_11 $$ Collections.addAll(indices, indicesOrAliases)[ FD ]
Line_2 $$ public void testMultiPercolate() -->Line_3 $$ String multiPercolateShardAction = MultiPercolateAction.NAME + "[shard][s]"[ CD ]
