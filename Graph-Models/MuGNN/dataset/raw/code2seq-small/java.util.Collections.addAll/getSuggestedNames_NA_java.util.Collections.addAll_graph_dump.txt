Line_27 $$ final ArrayList<String> list = new ArrayList<String>(Arrays.asList(strings))-->Line_36 $$ list.add(0, superMethodName)[ FD ]
Line_8 $$ if (info != null) -->Line_9 $$ info = JavaCodeStyleManager.getInstance(element.getProject()).suggestUniqueVariableName(info, element, true, true)[ CD ]
Line_38 $$ if (!list.contains(initialName)) -->Line_42 $$ list.remove(i)[ CD ]
Line_27 $$ final ArrayList<String> list = new ArrayList<String>(Arrays.asList(strings))-->Line_42 $$ list.remove(i)[ FD ]
Line_11 $$ String parameterName = null-->Line_33 $$ list.add(parameterName)[ FD ]
Line_27 $$ final ArrayList<String> list = new ArrayList<String>(Arrays.asList(strings))-->Line_35 $$ if (superMethodName != null && !list.contains(superMethodName)) [ FD ]
Line_22 $$ superMethodName = getSuperMethodName((PsiParameter) nameSuggestionContext, (PsiMethod) parentOfParent)-->Line_36 $$ list.add(0, superMethodName)[ FD ]
Line_6 $$ String initialName = UsageViewUtil.getShortName(element)-->Line_38 $$ if (!list.contains(initialName)) [ FD ]
Line_27 $$ final ArrayList<String> list = new ArrayList<String>(Arrays.asList(strings))-->Line_39 $$ list.add(initialName)[ FD ]
Line_28 $$ final String[] properlyCased = suggestProperlyCasedName(element)-->Line_30 $$ Collections.addAll(list, properlyCased)[ FD ]
Line_22 $$ superMethodName = getSuperMethodName((PsiParameter) nameSuggestionContext, (PsiMethod) parentOfParent)-->Line_35 $$ if (superMethodName != null && !list.contains(superMethodName)) [ FD ]
Line_38 $$ if (!list.contains(initialName)) -->Line_41 $$ int i = list.indexOf(initialName)[ CD ]
Line_6 $$ String initialName = UsageViewUtil.getShortName(element)-->Line_43 $$ list.add(initialName)[ FD ]
Line_41 $$ int i = list.indexOf(initialName)-->Line_42 $$ list.remove(i)[ FD ]
Line_27 $$ final ArrayList<String> list = new ArrayList<String>(Arrays.asList(strings))-->Line_43 $$ list.add(initialName)[ FD ]
Line_27 $$ final ArrayList<String> list = new ArrayList<String>(Arrays.asList(strings))-->Line_46 $$ result.addAll(list)[ FD ]
Line_29 $$ if (properlyCased != null) -->Line_30 $$ Collections.addAll(list, properlyCased)[ CD ]
Line_18 $$ final String propName = PropertyUtil.getPropertyName((PsiMethod) parentOfParent)-->Line_20 $$ parameterName = propName[ FD ]
Line_11 $$ String parameterName = null-->Line_32 $$ if (parameterName != null && !list.contains(parameterName)) [ FD ]
Line_28 $$ final String[] properlyCased = suggestProperlyCasedName(element)-->Line_29 $$ if (properlyCased != null) [ FD ]
Line_27 $$ final ArrayList<String> list = new ArrayList<String>(Arrays.asList(strings))-->Line_33 $$ list.add(parameterName)[ FD ]
Line_27 $$ final ArrayList<String> list = new ArrayList<String>(Arrays.asList(strings))-->Line_38 $$ if (!list.contains(initialName)) [ FD ]
Line_19 $$ if (propName != null) -->Line_20 $$ parameterName = propName[ CD ]
Line_12 $$ String superMethodName = null-->Line_22 $$ superMethodName = getSuperMethodName((PsiParameter) nameSuggestionContext, (PsiMethod) parentOfParent)[ FD ]
Line_35 $$ if (superMethodName != null && !list.contains(superMethodName)) -->Line_36 $$ list.add(0, superMethodName)[ CD ]
Line_14 $$ final PsiElement nameSuggestionContextParent = nameSuggestionContext.getParent()-->Line_16 $$ final PsiElement parentOfParent = nameSuggestionContextParent.getParent()[ FD ]
Line_6 $$ String initialName = UsageViewUtil.getShortName(element)-->Line_39 $$ list.add(initialName)[ FD ]
Line_15 $$ if (nameSuggestionContextParent instanceof PsiParameterList) -->Line_16 $$ final PsiElement parentOfParent = nameSuggestionContextParent.getParent()[ CD ]
Line_7 $$ SuggestedNameInfo info = suggestNamesForElement(element, nameSuggestionContext)-->Line_9 $$ info = JavaCodeStyleManager.getInstance(element.getProject()).suggestUniqueVariableName(info, element, true, true)[ FD ]
Line_20 $$ parameterName = propName-->Line_32 $$ if (parameterName != null && !list.contains(parameterName)) [ FD ]
Line_27 $$ final ArrayList<String> list = new ArrayList<String>(Arrays.asList(strings))-->Line_30 $$ Collections.addAll(list, properlyCased)[ FD ]
Line_38 $$ if (!list.contains(initialName)) -->Line_39 $$ list.add(initialName)[ CD ]
Line_16 $$ final PsiElement parentOfParent = nameSuggestionContextParent.getParent()-->Line_17 $$ if (parentOfParent instanceof PsiMethod) [ FD ]
Line_18 $$ final String propName = PropertyUtil.getPropertyName((PsiMethod) parentOfParent)-->Line_19 $$ if (propName != null) [ FD ]
Line_6 $$ String initialName = UsageViewUtil.getShortName(element)-->Line_41 $$ int i = list.indexOf(initialName)[ FD ]
Line_26 $$ final String[] strings = info != null ? info.names : ArrayUtil.EMPTY_STRING_ARRAY-->Line_27 $$ final ArrayList<String> list = new ArrayList<String>(Arrays.asList(strings))[ FD ]
Line_13 $$ if (nameSuggestionContext instanceof PsiParameter) -->Line_15 $$ if (nameSuggestionContextParent instanceof PsiParameterList) [ CD ]
Line_14 $$ final PsiElement nameSuggestionContextParent = nameSuggestionContext.getParent()-->Line_15 $$ if (nameSuggestionContextParent instanceof PsiParameterList) [ FD ]
Line_11 $$ String parameterName = null-->Line_20 $$ parameterName = propName[ FD ]
Line_15 $$ if (nameSuggestionContextParent instanceof PsiParameterList) -->Line_17 $$ if (parentOfParent instanceof PsiMethod) [ CD ]
Line_12 $$ String superMethodName = null-->Line_36 $$ list.add(0, superMethodName)[ FD ]
Line_17 $$ if (parentOfParent instanceof PsiMethod) -->Line_22 $$ superMethodName = getSuperMethodName((PsiParameter) nameSuggestionContext, (PsiMethod) parentOfParent)[ CD ]
Line_27 $$ final ArrayList<String> list = new ArrayList<String>(Arrays.asList(strings))-->Line_41 $$ int i = list.indexOf(initialName)[ FD ]
Line_38 $$ if (!list.contains(initialName)) -->Line_43 $$ list.add(initialName)[ CD ]
Line_17 $$ if (parentOfParent instanceof PsiMethod) -->Line_19 $$ if (propName != null) [ CD ]
Line_20 $$ parameterName = propName-->Line_33 $$ list.add(parameterName)[ FD ]
Line_4 $$ if (!element.getLanguage().isKindOf(JavaLanguage.INSTANCE))-->Line_5 $$ return null[ CD ]
Line_17 $$ if (parentOfParent instanceof PsiMethod) -->Line_18 $$ final String propName = PropertyUtil.getPropertyName((PsiMethod) parentOfParent)[ CD ]
Line_27 $$ final ArrayList<String> list = new ArrayList<String>(Arrays.asList(strings))-->Line_45 $$ ContainerUtil.removeDuplicates(list)[ FD ]
Line_27 $$ final ArrayList<String> list = new ArrayList<String>(Arrays.asList(strings))-->Line_32 $$ if (parameterName != null && !list.contains(parameterName)) [ FD ]
Line_7 $$ SuggestedNameInfo info = suggestNamesForElement(element, nameSuggestionContext)-->Line_8 $$ if (info != null) [ FD ]
Line_32 $$ if (parameterName != null && !list.contains(parameterName)) -->Line_33 $$ list.add(parameterName)[ CD ]
Line_13 $$ if (nameSuggestionContext instanceof PsiParameter) -->Line_14 $$ final PsiElement nameSuggestionContextParent = nameSuggestionContext.getParent()[ CD ]
Line_12 $$ String superMethodName = null-->Line_35 $$ if (superMethodName != null && !list.contains(superMethodName)) [ FD ]
