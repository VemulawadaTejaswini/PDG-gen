Line_2 $$ private void change(int exit, String owner, String group, String... files) throws Exception -->Line_8 $$ if (owner != null) [ FD ]
Line_2 $$ private void change(int exit, String owner, String group, String... files) throws Exception -->Line_12 $$ chown += ":" + group[ FD ]
Line_12 $$ chown += ":" + group-->Line_17 $$ argv.add(chown)[ FD ]
Line_8 $$ if (owner != null) -->Line_19 $$ argv.add("-chgrp")[ CD ]
Line_7 $$ List<String> argv = new LinkedList<String>()-->Line_22 $$ Collections.addAll(argv, files)[ FD ]
Line_24 $$ for (int i = 0; i < files.length; i++) -->Line_25 $$ FileStatus[] stats = fileSys.globStatus(new Path(files[i]))[ CD ]
Line_2 $$ private void change(int exit, String owner, String group, String... files) throws Exception -->Line_11 $$ if (group != null) [ FD ]
Line_24 $$ for (int i = 0; i < files.length; i++) -->Line_26 $$ if (stats != null) [ CD ]
Line_4 $$ for (int i = 0; i < files.length; i++) -->Line_24 $$ for (int i = 0; i < files.length; i++) [ FD ]
Line_15 $$ group = null-->Line_20 $$ argv.add(group)[ FD ]
Line_2 $$ private void change(int exit, String owner, String group, String... files) throws Exception -->Line_4 $$ for (int i = 0; i < files.length; i++) [ CD ]
Line_10 $$ String chown = owner-->Line_17 $$ argv.add(chown)[ FD ]
Line_4 $$ for (int i = 0; i < files.length; i++) -->Line_5 $$ oldStats[i] = fileSys.globStatus(new Path(files[i]))[ CD ]
Line_2 $$ private void change(int exit, String owner, String group, String... files) throws Exception -->Line_22 $$ Collections.addAll(argv, files)[ CD ]
Line_2 $$ private void change(int exit, String owner, String group, String... files) throws Exception -->Line_15 $$ group = null[ FD ]
Line_10 $$ String chown = owner-->Line_12 $$ chown += ":" + group[ FD ]
Line_8 $$ if (owner != null) -->Line_11 $$ if (group != null) [ CD ]
Line_2 $$ private void change(int exit, String owner, String group, String... files) throws Exception -->Line_23 $$ assertEquals(exit, fsShell.run(argv.toArray(new String[0])))[ FD ]
Line_2 $$ private void change(int exit, String owner, String group, String... files) throws Exception -->Line_20 $$ argv.add(group)[ FD ]
Line_8 $$ if (owner != null) -->Line_9 $$ argv.add("-chown")[ CD ]
Line_7 $$ List<String> argv = new LinkedList<String>()-->Line_23 $$ assertEquals(exit, fsShell.run(argv.toArray(new String[0])))[ FD ]
Line_26 $$ if (stats != null) -->Line_27 $$ for (int j = 0; j < stats.length; j++) [ CD ]
Line_8 $$ if (owner != null) -->Line_10 $$ String chown = owner[ CD ]
Line_2 $$ private void change(int exit, String owner, String group, String... files) throws Exception -->Line_22 $$ Collections.addAll(argv, files)[ FD ]
Line_27 $$ for (int j = 0; j < stats.length; j++) -->Line_29 $$ assertEquals("check group of " + files[i], ((group != null) ? "STUB-" + group : oldStats[i][j].getGroup()), stats[j].getGroup())[ CD ]
Line_25 $$ FileStatus[] stats = fileSys.globStatus(new Path(files[i]))-->Line_26 $$ if (stats != null) [ FD ]
Line_27 $$ for (int j = 0; j < stats.length; j++) -->Line_28 $$ assertEquals("check owner of " + files[i], ((owner != null) ? "STUB-" + owner : oldStats[i][j].getOwner()), stats[j].getOwner())[ CD ]
Line_7 $$ List<String> argv = new LinkedList<String>()-->Line_17 $$ argv.add(chown)[ FD ]
Line_8 $$ if (owner != null) -->Line_20 $$ argv.add(group)[ CD ]
Line_2 $$ private void change(int exit, String owner, String group, String... files) throws Exception -->Line_3 $$ FileStatus[][] oldStats = new FileStatus[files.length][][ CD ]
Line_2 $$ private void change(int exit, String owner, String group, String... files) throws Exception -->Line_8 $$ if (owner != null) [ CD ]
Line_7 $$ List<String> argv = new LinkedList<String>()-->Line_19 $$ argv.add("-chgrp")[ FD ]
Line_2 $$ private void change(int exit, String owner, String group, String... files) throws Exception -->Line_24 $$ for (int i = 0; i < files.length; i++) [ CD ]
Line_7 $$ List<String> argv = new LinkedList<String>()-->Line_9 $$ argv.add("-chown")[ FD ]
Line_2 $$ private void change(int exit, String owner, String group, String... files) throws Exception -->Line_7 $$ List<String> argv = new LinkedList<String>()[ CD ]
Line_7 $$ List<String> argv = new LinkedList<String>()-->Line_20 $$ argv.add(group)[ FD ]
Line_11 $$ if (group != null) -->Line_12 $$ chown += ":" + group[ CD ]
Line_8 $$ if (owner != null) -->Line_17 $$ argv.add(chown)[ CD ]
Line_2 $$ private void change(int exit, String owner, String group, String... files) throws Exception -->Line_23 $$ assertEquals(exit, fsShell.run(argv.toArray(new String[0])))[ CD ]
