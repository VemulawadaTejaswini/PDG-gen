Line_6 $$ HashSet<String> set = new HashSet<String>()-->Line_7 $$ set.addAll(x)[ FD ]
Line_2 $$ public static Set<String> splitAndCombine(Set<String> x, String values) -->Line_3 $$ if (x.isEmpty() && (values == null || values.isEmpty())) [ FD ]
Line_2 $$ public static Set<String> splitAndCombine(Set<String> x, String values) -->Line_11 $$ return set[ CD ]
Line_2 $$ public static Set<String> splitAndCombine(Set<String> x, String values) -->Line_9 $$ Collections.addAll(set, values.split("\\s*,\\s*"))[ FD ]
Line_2 $$ public static Set<String> splitAndCombine(Set<String> x, String values) -->Line_8 $$ if (values != null && !values.isEmpty()) [ FD ]
Line_2 $$ public static Set<String> splitAndCombine(Set<String> x, String values) -->Line_8 $$ if (values != null && !values.isEmpty()) [ CD ]
Line_2 $$ public static Set<String> splitAndCombine(Set<String> x, String values) -->Line_7 $$ set.addAll(x)[ FD ]
Line_8 $$ if (values != null && !values.isEmpty()) -->Line_9 $$ Collections.addAll(set, values.split("\\s*,\\s*"))[ CD ]
Line_6 $$ HashSet<String> set = new HashSet<String>()-->Line_9 $$ Collections.addAll(set, values.split("\\s*,\\s*"))[ FD ]
Line_3 $$ if (x.isEmpty() && (values == null || values.isEmpty())) -->Line_4 $$ return Collections.emptySet()[ CD ]
Line_2 $$ public static Set<String> splitAndCombine(Set<String> x, String values) -->Line_3 $$ if (x.isEmpty() && (values == null || values.isEmpty())) [ CD ]
Line_2 $$ public static Set<String> splitAndCombine(Set<String> x, String values) -->Line_6 $$ HashSet<String> set = new HashSet<String>()[ CD ]
Line_2 $$ public static Set<String> splitAndCombine(Set<String> x, String values) -->Line_7 $$ set.addAll(x)[ CD ]
