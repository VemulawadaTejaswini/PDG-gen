Line_2 $$ public void actionPerformed(AnActionEvent e) -->Line_4 $$ if (control == null) [ CD ]
Line_3 $$ ArrangementGroupingRulesControl control = ArrangementGroupingRulesControl.KEY.getData(e.getDataContext())-->Line_19 $$ control.getSelectionModel().setSelectionInterval(row + 1, row + 1)[ FD ]
Line_15 $$ DefaultTableModel model = control.getModel()-->Line_18 $$ model.insertRow(row + 1, new Object[] [ FD ]
Line_3 $$ ArrangementGroupingRulesControl control = ArrangementGroupingRulesControl.KEY.getData(e.getDataContext())-->Line_7 $$ int[] rows = control.getSelectedRows()[ FD ]
Line_9 $$ if (rows.length != 1 || rows[0] == control.getRowCount() - 1) -->Line_10 $$ return[ CD ]
Line_3 $$ ArrangementGroupingRulesControl control = ArrangementGroupingRulesControl.KEY.getData(e.getDataContext())-->Line_4 $$ if (control == null) [ FD ]
Line_8 $$ int row = rows[0]-->Line_17 $$ model.removeRow(row)[ FD ]
Line_2 $$ public void actionPerformed(AnActionEvent e) -->Line_3 $$ ArrangementGroupingRulesControl control = ArrangementGroupingRulesControl.KEY.getData(e.getDataContext())[ CD ]
Line_15 $$ DefaultTableModel model = control.getModel()-->Line_17 $$ model.removeRow(row)[ FD ]
Line_2 $$ public void actionPerformed(AnActionEvent e) -->Line_9 $$ if (rows.length != 1 || rows[0] == control.getRowCount() - 1) [ CD ]
Line_8 $$ int row = rows[0]-->Line_16 $$ Object value = model.getValueAt(row, 0)[ FD ]
Line_2 $$ public void actionPerformed(AnActionEvent e) -->Line_19 $$ control.getSelectionModel().setSelectionInterval(row + 1, row + 1)[ CD ]
Line_12 $$ if (control.isEditing()) -->Line_13 $$ control.getCellEditor().stopCellEditing()[ CD ]
Line_4 $$ if (control == null) -->Line_5 $$ return[ CD ]
Line_2 $$ public void actionPerformed(AnActionEvent e) -->Line_12 $$ if (control.isEditing()) [ CD ]
Line_3 $$ ArrangementGroupingRulesControl control = ArrangementGroupingRulesControl.KEY.getData(e.getDataContext())-->Line_15 $$ DefaultTableModel model = control.getModel()[ FD ]
Line_3 $$ ArrangementGroupingRulesControl control = ArrangementGroupingRulesControl.KEY.getData(e.getDataContext())-->Line_9 $$ if (rows.length != 1 || rows[0] == control.getRowCount() - 1) [ FD ]
Line_2 $$ public void actionPerformed(AnActionEvent e) -->Line_17 $$ model.removeRow(row)[ CD ]
Line_15 $$ DefaultTableModel model = control.getModel()-->Line_16 $$ Object value = model.getValueAt(row, 0)[ FD ]
Line_2 $$ public void actionPerformed(AnActionEvent e) -->Line_3 $$ ArrangementGroupingRulesControl control = ArrangementGroupingRulesControl.KEY.getData(e.getDataContext())[ FD ]
Line_2 $$ public void actionPerformed(AnActionEvent e) -->Line_8 $$ int row = rows[0][ CD ]
Line_2 $$ public void actionPerformed(AnActionEvent e) -->Line_7 $$ int[] rows = control.getSelectedRows()[ CD ]
Line_3 $$ ArrangementGroupingRulesControl control = ArrangementGroupingRulesControl.KEY.getData(e.getDataContext())-->Line_12 $$ if (control.isEditing()) [ FD ]
Line_3 $$ ArrangementGroupingRulesControl control = ArrangementGroupingRulesControl.KEY.getData(e.getDataContext())-->Line_13 $$ control.getCellEditor().stopCellEditing()[ FD ]
Line_2 $$ public void actionPerformed(AnActionEvent e) -->Line_16 $$ Object value = model.getValueAt(row, 0)[ CD ]
Line_2 $$ public void actionPerformed(AnActionEvent e) -->Line_18 $$ model.insertRow(row + 1, new Object[] [ CD ]
Line_2 $$ public void actionPerformed(AnActionEvent e) -->Line_15 $$ DefaultTableModel model = control.getModel()[ CD ]
