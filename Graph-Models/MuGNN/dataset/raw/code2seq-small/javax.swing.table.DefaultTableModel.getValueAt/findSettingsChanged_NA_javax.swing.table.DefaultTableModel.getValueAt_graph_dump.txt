Line_53 $$ FindInProjectUtil.findUsages(findModel, myProject, new Processor<UsageInfo>() -->Line_56 $$ usage.getPresentation().getIcon()[ CD ]
Line_20 $$ if (myPreviousModel != null && myPreviousModel.getStringToFind().length() < findModel.getStringToFind().length()) -->Line_22 $$ for (int i = 0, len = previousModel.getRowCount(); i < len; ++i) [ CD ]
Line_48 $$ ProgressIndicatorUtils.scheduleWithWriteActionPriority(myResultsPreviewSearchProgress, new ReadTask() -->Line_50 $$ final UsageViewPresentation presentation = FindInProjectUtil.setupViewPresentation(FindSettings.getInstance().isShowResultsInSeparateView(), findModel)[ CD ]
Line_3 $$ if (haveResultsPreview()) -->Line_30 $$ model.addColumn("Usages")[ CD ]
Line_9 $$ final FindModel findModel = myModel.clone()-->Line_20 $$ if (myPreviousModel != null && myPreviousModel.getStringToFind().length() < findModel.getStringToFind().length()) [ FD ]
Line_48 $$ ProgressIndicatorUtils.scheduleWithWriteActionPriority(myResultsPreviewSearchProgress, new ReadTask() -->Line_69 $$ if (succeeded) [ CD ]
Line_32 $$ if (result != null) -->Line_33 $$ myResultsPreviewTable.getEmptyText().setText(UIBundle.message("message.nothingToShow"))[ CD ]
Line_53 $$ FindInProjectUtil.findUsages(findModel, myProject, new Processor<UsageInfo>() -->Line_55 $$ final Usage usage = UsageInfo2UsageAdapter.CONVERTER.fun(info)[ FD ]
Line_14 $$ final DefaultTableModel model = new DefaultTableModel() -->Line_16 $$ return false[ CD ]
Line_53 $$ FindInProjectUtil.findUsages(findModel, myProject, new Processor<UsageInfo>() -->Line_65 $$ return resultsCount.incrementAndGet() < ShowUsagesAction.USAGES_PAGE_SIZE[ CD ]
Line_32 $$ if (result != null) -->Line_35 $$ return[ CD ]
Line_3 $$ if (haveResultsPreview()) -->Line_5 $$ if (state == ModalityState.NON_MODAL)[ CD ]
Line_41 $$ if (component instanceof EditorTextField) -->Line_43 $$ if (document != null) [ CD ]
Line_69 $$ if (succeeded) -->Line_70 $$ return new Continuation(new Runnable() [ CD ]
Line_9 $$ final FindModel findModel = myModel.clone()-->Line_10 $$ applyTo(findModel, false)[ FD ]
Line_3 $$ if (haveResultsPreview()) -->Line_7 $$ finishPreviousPreviewSearch()[ CD ]
Line_3 $$ if (haveResultsPreview()) -->Line_48 $$ ProgressIndicatorUtils.scheduleWithWriteActionPriority(myResultsPreviewSearchProgress, new ReadTask() [ CD ]
Line_3 $$ if (haveResultsPreview()) -->Line_39 $$ myContent.setTitleAt(RESULTS_PREVIEW_TAB_INDEX, PREVIEW_TITLE)[ CD ]
Line_43 $$ if (document != null) -->Line_44 $$ PsiDocumentManager.getInstance(myProject).commitDocument(document)[ CD ]
Line_53 $$ FindInProjectUtil.findUsages(findModel, myProject, new Processor<UsageInfo>() -->Line_57 $$ ApplicationManager.getApplication().invokeLater(new Runnable() [ CD ]
Line_52 $$ final FindUsagesProcessPresentation processPresentation = FindInProjectUtil.setupProcessPresentation(myProject, showPanelIfOnlyOneUsage, presentation)-->Line_53 $$ FindInProjectUtil.findUsages(findModel, myProject, new Processor<UsageInfo>() [ FD ]
Line_74 $$ if (occurrences == 0)-->Line_75 $$ myResultsPreviewTable.getEmptyText().setText(UIBundle.message("message.nothingToShow"))[ CD ]
Line_3 $$ if (haveResultsPreview()) -->Line_40 $$ final Component component = myInputComboBox.getEditor().getEditorComponent()[ CD ]
Line_3 $$ if (haveResultsPreview()) -->Line_4 $$ final ModalityState state = ModalityState.current()[ CD ]
Line_24 $$ final VirtualFile file = usage.getFile()-->Line_25 $$ if (file != null)[ FD ]
Line_51 $$ final boolean showPanelIfOnlyOneUsage = !FindSettings.getInstance().isSkipResultsWithOneUsage()-->Line_52 $$ final FindUsagesProcessPresentation processPresentation = FindInProjectUtil.setupProcessPresentation(myProject, showPanelIfOnlyOneUsage, presentation)[ FD ]
Line_57 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_60 $$ if (model.getRowCount() == 1 && myResultsPreviewTable.getModel() == model && isResultsPreviewTabActive()) [ CD ]
Line_48 $$ ProgressIndicatorUtils.scheduleWithWriteActionPriority(myResultsPreviewSearchProgress, new ReadTask() -->Line_84 $$ if (isShowing() && progressIndicatorWhenSearchStarted == myResultsPreviewSearchProgress) [ CD ]
Line_23 $$ final UsageInfo2UsageAdapter usage = (UsageInfo2UsageAdapter) previousModel.getValueAt(i, 0)-->Line_56 $$ usage.getPresentation().getIcon()[ FD ]
Line_3 $$ if (haveResultsPreview()) -->Line_8 $$ mySearchRescheduleOnCancellationsAlarm.cancelAllRequests()[ CD ]
Line_3 $$ if (haveResultsPreview()) -->Line_10 $$ applyTo(findModel, false)[ CD ]
Line_48 $$ ProgressIndicatorUtils.scheduleWithWriteActionPriority(myResultsPreviewSearchProgress, new ReadTask() -->Line_81 $$ return null[ CD ]
Line_12 $$ final ProgressIndicatorBase progressIndicatorWhenSearchStarted = new ProgressIndicatorBase()-->Line_68 $$ boolean succeeded = !progressIndicatorWhenSearchStarted.isCanceled()[ FD ]
Line_3 $$ if (haveResultsPreview()) -->Line_32 $$ if (result != null) [ CD ]
Line_2 $$ private void findSettingsChanged() -->Line_3 $$ if (haveResultsPreview()) [ CD ]
Line_3 $$ if (haveResultsPreview()) -->Line_41 $$ if (component instanceof EditorTextField) [ CD ]
Line_3 $$ if (haveResultsPreview()) -->Line_14 $$ final DefaultTableModel model = new DefaultTableModel() [ CD ]
Line_48 $$ ProgressIndicatorUtils.scheduleWithWriteActionPriority(myResultsPreviewSearchProgress, new ReadTask() -->Line_52 $$ final FindUsagesProcessPresentation processPresentation = FindInProjectUtil.setupProcessPresentation(myProject, showPanelIfOnlyOneUsage, presentation)[ CD ]
Line_4 $$ final ModalityState state = ModalityState.current()-->Line_5 $$ if (state == ModalityState.NON_MODAL)[ FD ]
Line_72 $$ if (progressIndicatorWhenSearchStarted == myResultsPreviewSearchProgress && !myResultsPreviewSearchProgress.isCanceled()) -->Line_73 $$ int occurrences = resultsCount.get()[ CD ]
Line_24 $$ final VirtualFile file = usage.getFile()-->Line_26 $$ filesToScanInitially.add(file)[ FD ]
Line_32 $$ if (result != null) -->Line_34 $$ myContent.setTitleAt(RESULTS_PREVIEW_TAB_INDEX, PREVIEW_TITLE)[ CD ]
Line_3 $$ if (haveResultsPreview()) -->Line_38 $$ myResultsPreviewTable.getEmptyText().setText("Searching...")[ CD ]
Line_22 $$ for (int i = 0, len = previousModel.getRowCount(); i < len; ++i) -->Line_24 $$ final VirtualFile file = usage.getFile()[ CD ]
Line_5 $$ if (state == ModalityState.NON_MODAL)-->Line_6 $$ return[ CD ]
Line_84 $$ if (isShowing() && progressIndicatorWhenSearchStarted == myResultsPreviewSearchProgress) -->Line_85 $$ scheduleResultsUpdate()[ CD ]
Line_3 $$ if (haveResultsPreview()) -->Line_37 $$ myResultsPreviewTable.getColumnModel().getColumn(0).setCellRenderer(new UsageTableCellRenderer())[ CD ]
Line_57 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_59 $$ model.addRow(new Object[] [ CD ]
Line_73 $$ int occurrences = resultsCount.get()-->Line_76 $$ myContent.setTitleAt(RESULTS_PREVIEW_TAB_INDEX, PREVIEW_TITLE + " (" + (occurrences != ShowUsagesAction.USAGES_PAGE_SIZE ? Integer.valueOf(occurrences) : occurrences + "+") + ")")[ FD ]
Line_9 $$ final FindModel findModel = myModel.clone()-->Line_53 $$ FindInProjectUtil.findUsages(findModel, myProject, new Processor<UsageInfo>() [ FD ]
Line_14 $$ final DefaultTableModel model = new DefaultTableModel() -->Line_30 $$ model.addColumn("Usages")[ FD ]
Line_72 $$ if (progressIndicatorWhenSearchStarted == myResultsPreviewSearchProgress && !myResultsPreviewSearchProgress.isCanceled()) -->Line_76 $$ myContent.setTitleAt(RESULTS_PREVIEW_TAB_INDEX, PREVIEW_TITLE + " (" + (occurrences != ShowUsagesAction.USAGES_PAGE_SIZE ? Integer.valueOf(occurrences) : occurrences + "+") + ")")[ CD ]
Line_50 $$ final UsageViewPresentation presentation = FindInProjectUtil.setupViewPresentation(FindSettings.getInstance().isShowResultsInSeparateView(), findModel)-->Line_52 $$ final FindUsagesProcessPresentation processPresentation = FindInProjectUtil.setupProcessPresentation(myProject, showPanelIfOnlyOneUsage, presentation)[ FD ]
Line_4 $$ final ModalityState state = ModalityState.current()-->Line_57 $$ ApplicationManager.getApplication().invokeLater(new Runnable() [ FD ]
Line_53 $$ FindInProjectUtil.findUsages(findModel, myProject, new Processor<UsageInfo>() -->Line_55 $$ final Usage usage = UsageInfo2UsageAdapter.CONVERTER.fun(info)[ CD ]
Line_14 $$ final DefaultTableModel model = new DefaultTableModel() -->Line_59 $$ model.addRow(new Object[] [ FD ]
Line_72 $$ if (progressIndicatorWhenSearchStarted == myResultsPreviewSearchProgress && !myResultsPreviewSearchProgress.isCanceled()) -->Line_74 $$ if (occurrences == 0)[ CD ]
Line_23 $$ final UsageInfo2UsageAdapter usage = (UsageInfo2UsageAdapter) previousModel.getValueAt(i, 0)-->Line_24 $$ final VirtualFile file = usage.getFile()[ FD ]
Line_70 $$ return new Continuation(new Runnable() -->Line_72 $$ if (progressIndicatorWhenSearchStarted == myResultsPreviewSearchProgress && !myResultsPreviewSearchProgress.isCanceled()) [ CD ]
Line_14 $$ final DefaultTableModel model = new DefaultTableModel() -->Line_60 $$ if (model.getRowCount() == 1 && myResultsPreviewTable.getModel() == model && isResultsPreviewTabActive()) [ FD ]
Line_9 $$ final FindModel findModel = myModel.clone()-->Line_11 $$ ValidationInfo result = getValidationInfo(findModel)[ FD ]
Line_22 $$ for (int i = 0, len = previousModel.getRowCount(); i < len; ++i) -->Line_23 $$ final UsageInfo2UsageAdapter usage = (UsageInfo2UsageAdapter) previousModel.getValueAt(i, 0)[ FD ]
Line_48 $$ ProgressIndicatorUtils.scheduleWithWriteActionPriority(myResultsPreviewSearchProgress, new ReadTask() -->Line_53 $$ FindInProjectUtil.findUsages(findModel, myProject, new Processor<UsageInfo>() [ CD ]
Line_55 $$ final Usage usage = UsageInfo2UsageAdapter.CONVERTER.fun(info)-->Line_56 $$ usage.getPresentation().getIcon()[ FD ]
Line_14 $$ final DefaultTableModel model = new DefaultTableModel() -->Line_31 $$ myResultsPreviewTable.setModel(model)[ FD ]
Line_3 $$ if (haveResultsPreview()) -->Line_11 $$ ValidationInfo result = getValidationInfo(findModel)[ CD ]
Line_25 $$ if (file != null)-->Line_26 $$ filesToScanInitially.add(file)[ CD ]
Line_22 $$ for (int i = 0, len = previousModel.getRowCount(); i < len; ++i) -->Line_25 $$ if (file != null)[ CD ]
Line_60 $$ if (model.getRowCount() == 1 && myResultsPreviewTable.getModel() == model && isResultsPreviewTabActive()) -->Line_61 $$ myResultsPreviewTable.setRowSelectionInterval(0, 0)[ CD ]
Line_11 $$ ValidationInfo result = getValidationInfo(findModel)-->Line_32 $$ if (result != null) [ FD ]
Line_22 $$ for (int i = 0, len = previousModel.getRowCount(); i < len; ++i) -->Line_23 $$ final UsageInfo2UsageAdapter usage = (UsageInfo2UsageAdapter) previousModel.getValueAt(i, 0)[ CD ]
Line_48 $$ ProgressIndicatorUtils.scheduleWithWriteActionPriority(myResultsPreviewSearchProgress, new ReadTask() -->Line_68 $$ boolean succeeded = !progressIndicatorWhenSearchStarted.isCanceled()[ CD ]
Line_9 $$ final FindModel findModel = myModel.clone()-->Line_50 $$ final UsageViewPresentation presentation = FindInProjectUtil.setupViewPresentation(FindSettings.getInstance().isShowResultsInSeparateView(), findModel)[ FD ]
Line_3 $$ if (haveResultsPreview()) -->Line_20 $$ if (myPreviousModel != null && myPreviousModel.getStringToFind().length() < findModel.getStringToFind().length()) [ CD ]
Line_48 $$ ProgressIndicatorUtils.scheduleWithWriteActionPriority(myResultsPreviewSearchProgress, new ReadTask() -->Line_51 $$ final boolean showPanelIfOnlyOneUsage = !FindSettings.getInstance().isSkipResultsWithOneUsage()[ CD ]
Line_3 $$ if (haveResultsPreview()) -->Line_12 $$ final ProgressIndicatorBase progressIndicatorWhenSearchStarted = new ProgressIndicatorBase()[ CD ]
Line_3 $$ if (haveResultsPreview()) -->Line_9 $$ final FindModel findModel = myModel.clone()[ CD ]
Line_73 $$ int occurrences = resultsCount.get()-->Line_74 $$ if (occurrences == 0)[ FD ]
Line_3 $$ if (haveResultsPreview()) -->Line_31 $$ myResultsPreviewTable.setModel(model)[ CD ]
Line_41 $$ if (component instanceof EditorTextField) -->Line_42 $$ final Document document = ((EditorTextField) component).getDocument()[ CD ]
