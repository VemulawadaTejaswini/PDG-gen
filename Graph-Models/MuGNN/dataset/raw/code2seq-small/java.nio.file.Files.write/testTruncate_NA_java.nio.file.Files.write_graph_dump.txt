Line_3 $$ File file = FileUtils.createTempFile("testTruncate", "1")-->Line_5 $$ Files.write(file.toPath(), expected.getBytes())[ FD ]
Line_2 $$ public void testTruncate() throws IOException -->Line_10 $$ b = Files.readAllBytes(file.toPath())[ CD ]
Line_3 $$ File file = FileUtils.createTempFile("testTruncate", "1")-->Line_6 $$ assertTrue(file.exists())[ FD ]
Line_3 $$ File file = FileUtils.createTempFile("testTruncate", "1")-->Line_7 $$ byte[] b = Files.readAllBytes(file.toPath())[ FD ]
Line_7 $$ byte[] b = Files.readAllBytes(file.toPath())-->Line_10 $$ b = Files.readAllBytes(file.toPath())[ FD ]
Line_2 $$ public void testTruncate() throws IOException -->Line_4 $$ final String expected = "The quick brown fox jumps over the lazy dog"[ CD ]
Line_2 $$ public void testTruncate() throws IOException -->Line_5 $$ Files.write(file.toPath(), expected.getBytes())[ CD ]
Line_7 $$ byte[] b = Files.readAllBytes(file.toPath())-->Line_13 $$ b = Files.readAllBytes(file.toPath())[ FD ]
Line_2 $$ public void testTruncate() throws IOException -->Line_8 $$ assertEquals(expected, new String(b, Charset.forName("UTF-8")))[ CD ]
Line_10 $$ b = Files.readAllBytes(file.toPath())-->Line_13 $$ b = Files.readAllBytes(file.toPath())[ FD ]
Line_2 $$ public void testTruncate() throws IOException -->Line_6 $$ assertTrue(file.exists())[ CD ]
Line_2 $$ public void testTruncate() throws IOException -->Line_12 $$ FileUtils.truncate(file.getAbsolutePath(), 0)[ CD ]
Line_3 $$ File file = FileUtils.createTempFile("testTruncate", "1")-->Line_9 $$ FileUtils.truncate(file.getAbsolutePath(), 10)[ FD ]
Line_4 $$ final String expected = "The quick brown fox jumps over the lazy dog"-->Line_8 $$ assertEquals(expected, new String(b, Charset.forName("UTF-8")))[ FD ]
Line_2 $$ public void testTruncate() throws IOException -->Line_13 $$ b = Files.readAllBytes(file.toPath())[ CD ]
Line_2 $$ public void testTruncate() throws IOException -->Line_11 $$ assertEquals("The quick ", new String(b, Charset.forName("UTF-8")))[ CD ]
Line_2 $$ public void testTruncate() throws IOException -->Line_14 $$ assertEquals(0, b.length)[ CD ]
Line_3 $$ File file = FileUtils.createTempFile("testTruncate", "1")-->Line_10 $$ b = Files.readAllBytes(file.toPath())[ FD ]
Line_2 $$ public void testTruncate() throws IOException -->Line_7 $$ byte[] b = Files.readAllBytes(file.toPath())[ CD ]
Line_3 $$ File file = FileUtils.createTempFile("testTruncate", "1")-->Line_12 $$ FileUtils.truncate(file.getAbsolutePath(), 0)[ FD ]
Line_4 $$ final String expected = "The quick brown fox jumps over the lazy dog"-->Line_5 $$ Files.write(file.toPath(), expected.getBytes())[ FD ]
Line_3 $$ File file = FileUtils.createTempFile("testTruncate", "1")-->Line_13 $$ b = Files.readAllBytes(file.toPath())[ FD ]
Line_2 $$ public void testTruncate() throws IOException -->Line_3 $$ File file = FileUtils.createTempFile("testTruncate", "1")[ CD ]
Line_2 $$ public void testTruncate() throws IOException -->Line_9 $$ FileUtils.truncate(file.getAbsolutePath(), 10)[ CD ]
