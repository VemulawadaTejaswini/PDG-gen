Line_4 $$ Path loggingConf = tmpDir.resolve(loggingConfiguration("properties"))-->Line_5 $$ Files.write(loggingConf, "key: value".getBytes(StandardCharsets.UTF_8))[ FD ]
Line_2 $$ public void testResolvePropertiesLoggingConfig() throws Exception -->Line_5 $$ Files.write(loggingConf, "key: value".getBytes(StandardCharsets.UTF_8))[ CD ]
Line_2 $$ public void testResolvePropertiesLoggingConfig() throws Exception -->Line_6 $$ Environment environment = new Environment(Settings.builder().put("path.conf", tmpDir.toAbsolutePath()).put("path.home", createTempDir().toString()).build())[ CD ]
Line_2 $$ public void testResolvePropertiesLoggingConfig() throws Exception -->Line_3 $$ Path tmpDir = createTempDir()[ CD ]
Line_7 $$ Settings.Builder builder = Settings.builder()-->Line_9 $$ Settings logSettings = builder.build()[ FD ]
Line_2 $$ public void testResolvePropertiesLoggingConfig() throws Exception -->Line_4 $$ Path loggingConf = tmpDir.resolve(loggingConfiguration("properties"))[ CD ]
Line_2 $$ public void testResolvePropertiesLoggingConfig() throws Exception -->Line_9 $$ Settings logSettings = builder.build()[ CD ]
Line_3 $$ Path tmpDir = createTempDir()-->Line_6 $$ Environment environment = new Environment(Settings.builder().put("path.conf", tmpDir.toAbsolutePath()).put("path.home", createTempDir().toString()).build())[ FD ]
Line_2 $$ public void testResolvePropertiesLoggingConfig() throws Exception -->Line_8 $$ LogConfigurator.resolveConfig(environment, builder)[ CD ]
Line_6 $$ Environment environment = new Environment(Settings.builder().put("path.conf", tmpDir.toAbsolutePath()).put("path.home", createTempDir().toString()).build())-->Line_8 $$ LogConfigurator.resolveConfig(environment, builder)[ FD ]
Line_2 $$ public void testResolvePropertiesLoggingConfig() throws Exception -->Line_10 $$ assertThat(logSettings.get("key"), is("value"))[ CD ]
Line_3 $$ Path tmpDir = createTempDir()-->Line_4 $$ Path loggingConf = tmpDir.resolve(loggingConfiguration("properties"))[ FD ]
Line_9 $$ Settings logSettings = builder.build()-->Line_10 $$ assertThat(logSettings.get("key"), is("value"))[ FD ]
Line_7 $$ Settings.Builder builder = Settings.builder()-->Line_8 $$ LogConfigurator.resolveConfig(environment, builder)[ FD ]
Line_2 $$ public void testResolvePropertiesLoggingConfig() throws Exception -->Line_7 $$ Settings.Builder builder = Settings.builder()[ CD ]
