Line_2 $$ public void testConfigNotRead() throws Exception -->Line_4 $$ Path loggingConf = tmpDir.resolve(loggingConfiguration("yaml"))[ CD ]
Line_11 $$ Appender appender = logger.getAppender("console")-->Line_12 $$ assertNull(appender)[ FD ]
Line_2 $$ public void testConfigNotRead() throws Exception -->Line_9 $$ assertNotNull(esLogger)[ CD ]
Line_3 $$ Path tmpDir = createTempDir()-->Line_6 $$ Environment environment = InternalSettingsPreparer.prepareEnvironment(Settings.builder().put("path.conf", tmpDir.toAbsolutePath()).put("path.home", createTempDir().toString()).build(), new CliToolTestCase.MockTerminal())[ FD ]
Line_2 $$ public void testConfigNotRead() throws Exception -->Line_11 $$ Appender appender = logger.getAppender("console")[ CD ]
Line_4 $$ Path loggingConf = tmpDir.resolve(loggingConfiguration("yaml"))-->Line_5 $$ Files.write(loggingConf, Arrays.asList("logger.test_config_not_read: INFO, console", "appender.console.type: console"), StandardCharsets.UTF_8)[ FD ]
Line_2 $$ public void testConfigNotRead() throws Exception -->Line_8 $$ ESLogger esLogger = Log4jESLoggerFactory.getLogger("test_config_not_read")[ CD ]
Line_2 $$ public void testConfigNotRead() throws Exception -->Line_10 $$ Logger logger = ((Log4jESLogger) esLogger).logger()[ CD ]
Line_6 $$ Environment environment = InternalSettingsPreparer.prepareEnvironment(Settings.builder().put("path.conf", tmpDir.toAbsolutePath()).put("path.home", createTempDir().toString()).build(), new CliToolTestCase.MockTerminal())-->Line_7 $$ LogConfigurator.configure(environment.settings(), false)[ FD ]
Line_8 $$ ESLogger esLogger = Log4jESLoggerFactory.getLogger("test_config_not_read")-->Line_9 $$ assertNotNull(esLogger)[ FD ]
Line_2 $$ public void testConfigNotRead() throws Exception -->Line_7 $$ LogConfigurator.configure(environment.settings(), false)[ CD ]
Line_2 $$ public void testConfigNotRead() throws Exception -->Line_12 $$ assertNull(appender)[ CD ]
Line_2 $$ public void testConfigNotRead() throws Exception -->Line_3 $$ Path tmpDir = createTempDir()[ CD ]
Line_3 $$ Path tmpDir = createTempDir()-->Line_4 $$ Path loggingConf = tmpDir.resolve(loggingConfiguration("yaml"))[ FD ]
Line_2 $$ public void testConfigNotRead() throws Exception -->Line_6 $$ Environment environment = InternalSettingsPreparer.prepareEnvironment(Settings.builder().put("path.conf", tmpDir.toAbsolutePath()).put("path.home", createTempDir().toString()).build(), new CliToolTestCase.MockTerminal())[ CD ]
Line_10 $$ Logger logger = ((Log4jESLogger) esLogger).logger()-->Line_11 $$ Appender appender = logger.getAppender("console")[ FD ]
Line_2 $$ public void testConfigNotRead() throws Exception -->Line_5 $$ Files.write(loggingConf, Arrays.asList("logger.test_config_not_read: INFO, console", "appender.console.type: console"), StandardCharsets.UTF_8)[ CD ]
