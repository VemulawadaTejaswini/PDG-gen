Line_4 $$ if (LOG.isDebugEnabled()) -->Line_6 $$ LOG.debug(message, sqlException)[ CD ]
Line_9 $$ while (sqlException != null) -->Line_14 $$ sqlException = sqlException.getNextException()[ CD ]
Line_10 $$ if (warnEnabled) -->Line_11 $$ LOG.warn("SQL Error: " + sqlException.getErrorCode() + ", SQLState: " + sqlException.getSQLState())[ CD ]
Line_9 $$ while (sqlException != null) -->Line_10 $$ if (warnEnabled) [ CD ]
Line_14 $$ sqlException = sqlException.getNextException()-->Line_13 $$ LOG.error(sqlException.getMessage())[ FD ]
Line_2 $$ public void logExceptions(SQLException sqlException, String message) -->Line_3 $$ if (LOG.isEnabled(Level.ERROR)) [ CD ]
Line_14 $$ sqlException = sqlException.getNextException()-->Line_9 $$ while (sqlException != null) [ FD ]
Line_3 $$ if (LOG.isEnabled(Level.ERROR)) -->Line_8 $$ final boolean warnEnabled = LOG.isEnabled(Level.WARN)[ CD ]
Line_2 $$ public void logExceptions(SQLException sqlException, String message) -->Line_11 $$ LOG.warn("SQL Error: " + sqlException.getErrorCode() + ", SQLState: " + sqlException.getSQLState())[ FD ]
Line_4 $$ if (LOG.isDebugEnabled()) -->Line_5 $$ message = StringHelper.isNotEmpty(message) ? message : DEFAULT_EXCEPTION_MSG[ CD ]
Line_2 $$ public void logExceptions(SQLException sqlException, String message) -->Line_6 $$ LOG.debug(message, sqlException)[ FD ]
Line_3 $$ if (LOG.isEnabled(Level.ERROR)) -->Line_9 $$ while (sqlException != null) [ CD ]
Line_9 $$ while (sqlException != null) -->Line_13 $$ LOG.error(sqlException.getMessage())[ CD ]
Line_3 $$ if (LOG.isEnabled(Level.ERROR)) -->Line_4 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_2 $$ public void logExceptions(SQLException sqlException, String message) -->Line_5 $$ message = StringHelper.isNotEmpty(message) ? message : DEFAULT_EXCEPTION_MSG[ FD ]
Line_5 $$ message = StringHelper.isNotEmpty(message) ? message : DEFAULT_EXCEPTION_MSG-->Line_6 $$ LOG.debug(message, sqlException)[ FD ]
Line_2 $$ public void logExceptions(SQLException sqlException, String message) -->Line_14 $$ sqlException = sqlException.getNextException()[ FD ]
Line_2 $$ public void logExceptions(SQLException sqlException, String message) -->Line_9 $$ while (sqlException != null) [ FD ]
Line_14 $$ sqlException = sqlException.getNextException()-->Line_11 $$ LOG.warn("SQL Error: " + sqlException.getErrorCode() + ", SQLState: " + sqlException.getSQLState())[ FD ]
Line_2 $$ public void logExceptions(SQLException sqlException, String message) -->Line_13 $$ LOG.error(sqlException.getMessage())[ FD ]
