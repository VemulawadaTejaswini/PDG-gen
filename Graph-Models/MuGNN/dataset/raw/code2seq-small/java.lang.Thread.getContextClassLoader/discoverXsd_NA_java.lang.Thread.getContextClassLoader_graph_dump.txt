Line_13 $$ url = null-->Line_31 $$ url = classLoader.getResource(fileName)[ FD ]
Line_23 $$ final ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_25 $$ url = classLoader.getResource("docs/schema/" + fileName)[ FD ]
Line_29 $$ url = classLoader.getResource("schema/" + fileName)-->Line_32 $$ assertNotNull(xsdName + " not found", url)[ FD ]
Line_25 $$ url = classLoader.getResource("docs/schema/" + fileName)-->Line_30 $$ if (url == null)[ FD ]
Line_10 $$ url = file.toURI().toURL()-->Line_25 $$ url = classLoader.getResource("docs/schema/" + fileName)[ FD ]
Line_15 $$ String fileName = xsdName-->Line_18 $$ index = fileName.lastIndexOf("\\")[ FD ]
Line_2 $$ static URL discoverXsd(final String xsdName) -->Line_17 $$ if (index == -1) [ CD ]
Line_25 $$ url = classLoader.getResource("docs/schema/" + fileName)-->Line_31 $$ url = classLoader.getResource(fileName)[ FD ]
Line_17 $$ if (index == -1) -->Line_18 $$ index = fileName.lastIndexOf("\\")[ CD ]
Line_10 $$ url = file.toURI().toURL()-->Line_13 $$ url = null[ FD ]
Line_13 $$ url = null-->Line_25 $$ url = classLoader.getResource("docs/schema/" + fileName)[ FD ]
Line_10 $$ url = file.toURI().toURL()-->Line_32 $$ assertNotNull(xsdName + " not found", url)[ FD ]
Line_25 $$ url = classLoader.getResource("docs/schema/" + fileName)-->Line_27 $$ url = classLoader.getResource("docs/" + fileName)[ FD ]
Line_13 $$ url = null-->Line_30 $$ if (url == null)[ FD ]
Line_15 $$ String fileName = xsdName-->Line_21 $$ fileName = fileName.substring(index + 1)[ FD ]
Line_10 $$ url = file.toURI().toURL()-->Line_26 $$ if (url == null)[ FD ]
Line_24 $$ if (url == null)-->Line_25 $$ url = classLoader.getResource("docs/schema/" + fileName)[ CD ]
Line_7 $$ URL url = null-->Line_26 $$ if (url == null)[ FD ]
Line_27 $$ url = classLoader.getResource("docs/" + fileName)-->Line_31 $$ url = classLoader.getResource(fileName)[ FD ]
Line_27 $$ url = classLoader.getResource("docs/" + fileName)-->Line_28 $$ if (url == null)[ FD ]
Line_18 $$ index = fileName.lastIndexOf("\\")-->Line_20 $$ if (index != -1) [ FD ]
Line_25 $$ url = classLoader.getResource("docs/schema/" + fileName)-->Line_29 $$ url = classLoader.getResource("schema/" + fileName)[ FD ]
Line_16 $$ int index = fileName.lastIndexOf("/")-->Line_20 $$ if (index != -1) [ FD ]
Line_6 $$ final File file = JBOSS_SCHEMAS_MAP.get(xsdName)-->Line_10 $$ url = file.toURI().toURL()[ FD ]
Line_2 $$ static URL discoverXsd(final String xsdName) -->Line_20 $$ if (index != -1) [ CD ]
Line_2 $$ static URL discoverXsd(final String xsdName) -->Line_4 $$ throw new RuntimeException("Default configs are not in line with most recent schemas " + xsdName + " has been superseded by " + OUTDATED_NAMESPACES.get(xsdName))[ FD ]
Line_7 $$ URL url = null-->Line_31 $$ url = classLoader.getResource(fileName)[ FD ]
Line_27 $$ url = classLoader.getResource("docs/" + fileName)-->Line_29 $$ url = classLoader.getResource("schema/" + fileName)[ FD ]
Line_29 $$ url = classLoader.getResource("schema/" + fileName)-->Line_31 $$ url = classLoader.getResource(fileName)[ FD ]
Line_7 $$ URL url = null-->Line_24 $$ if (url == null)[ FD ]
Line_2 $$ static URL discoverXsd(final String xsdName) -->Line_6 $$ final File file = JBOSS_SCHEMAS_MAP.get(xsdName)[ CD ]
Line_2 $$ static URL discoverXsd(final String xsdName) -->Line_15 $$ String fileName = xsdName[ CD ]
Line_13 $$ url = null-->Line_27 $$ url = classLoader.getResource("docs/" + fileName)[ FD ]
Line_31 $$ url = classLoader.getResource(fileName)-->Line_32 $$ assertNotNull(xsdName + " not found", url)[ FD ]
Line_7 $$ URL url = null-->Line_25 $$ url = classLoader.getResource("docs/schema/" + fileName)[ FD ]
Line_6 $$ final File file = JBOSS_SCHEMAS_MAP.get(xsdName)-->Line_9 $$ if (file != null) [ FD ]
Line_10 $$ url = file.toURI().toURL()-->Line_31 $$ url = classLoader.getResource(fileName)[ FD ]
Line_29 $$ url = classLoader.getResource("schema/" + fileName)-->Line_30 $$ if (url == null)[ FD ]
Line_2 $$ static URL discoverXsd(final String xsdName) -->Line_7 $$ URL url = null[ CD ]
Line_7 $$ URL url = null-->Line_13 $$ url = null[ FD ]
Line_7 $$ URL url = null-->Line_32 $$ assertNotNull(xsdName + " not found", url)[ FD ]
Line_27 $$ url = classLoader.getResource("docs/" + fileName)-->Line_30 $$ if (url == null)[ FD ]
Line_27 $$ url = classLoader.getResource("docs/" + fileName)-->Line_32 $$ assertNotNull(xsdName + " not found", url)[ FD ]
Line_13 $$ url = null-->Line_26 $$ if (url == null)[ FD ]
Line_10 $$ url = file.toURI().toURL()-->Line_27 $$ url = classLoader.getResource("docs/" + fileName)[ FD ]
Line_13 $$ url = null-->Line_24 $$ if (url == null)[ FD ]
Line_25 $$ url = classLoader.getResource("docs/schema/" + fileName)-->Line_32 $$ assertNotNull(xsdName + " not found", url)[ FD ]
Line_10 $$ url = file.toURI().toURL()-->Line_24 $$ if (url == null)[ FD ]
Line_30 $$ if (url == null)-->Line_31 $$ url = classLoader.getResource(fileName)[ CD ]
Line_16 $$ int index = fileName.lastIndexOf("/")-->Line_17 $$ if (index == -1) [ FD ]
Line_10 $$ url = file.toURI().toURL()-->Line_30 $$ if (url == null)[ FD ]
Line_7 $$ URL url = null-->Line_29 $$ url = classLoader.getResource("schema/" + fileName)[ FD ]
Line_25 $$ url = classLoader.getResource("docs/schema/" + fileName)-->Line_28 $$ if (url == null)[ FD ]
Line_2 $$ static URL discoverXsd(final String xsdName) -->Line_32 $$ assertNotNull(xsdName + " not found", url)[ CD ]
Line_7 $$ URL url = null-->Line_28 $$ if (url == null)[ FD ]
Line_15 $$ String fileName = xsdName-->Line_16 $$ int index = fileName.lastIndexOf("/")[ FD ]
Line_10 $$ url = file.toURI().toURL()-->Line_29 $$ url = classLoader.getResource("schema/" + fileName)[ FD ]
Line_23 $$ final ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_31 $$ url = classLoader.getResource(fileName)[ FD ]
Line_23 $$ final ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_27 $$ url = classLoader.getResource("docs/" + fileName)[ FD ]
Line_20 $$ if (index != -1) -->Line_21 $$ fileName = fileName.substring(index + 1)[ CD ]
Line_28 $$ if (url == null)-->Line_29 $$ url = classLoader.getResource("schema/" + fileName)[ CD ]
Line_25 $$ url = classLoader.getResource("docs/schema/" + fileName)-->Line_26 $$ if (url == null)[ FD ]
Line_2 $$ static URL discoverXsd(final String xsdName) -->Line_23 $$ final ClassLoader classLoader = Thread.currentThread().getContextClassLoader()[ CD ]
Line_13 $$ url = null-->Line_28 $$ if (url == null)[ FD ]
Line_2 $$ static URL discoverXsd(final String xsdName) -->Line_16 $$ int index = fileName.lastIndexOf("/")[ CD ]
Line_15 $$ String fileName = xsdName-->Line_31 $$ url = classLoader.getResource(fileName)[ FD ]
Line_2 $$ static URL discoverXsd(final String xsdName) -->Line_28 $$ if (url == null)[ CD ]
Line_2 $$ static URL discoverXsd(final String xsdName) -->Line_33 $$ return url[ CD ]
Line_21 $$ fileName = fileName.substring(index + 1)-->Line_31 $$ url = classLoader.getResource(fileName)[ FD ]
Line_2 $$ static URL discoverXsd(final String xsdName) -->Line_6 $$ final File file = JBOSS_SCHEMAS_MAP.get(xsdName)[ FD ]
Line_9 $$ if (file != null) -->Line_10 $$ url = file.toURI().toURL()[ CD ]
Line_7 $$ URL url = null-->Line_10 $$ url = file.toURI().toURL()[ FD ]
Line_23 $$ final ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_29 $$ url = classLoader.getResource("schema/" + fileName)[ FD ]
Line_26 $$ if (url == null)-->Line_27 $$ url = classLoader.getResource("docs/" + fileName)[ CD ]
Line_16 $$ int index = fileName.lastIndexOf("/")-->Line_18 $$ index = fileName.lastIndexOf("\\")[ FD ]
Line_2 $$ static URL discoverXsd(final String xsdName) -->Line_3 $$ if (OUTDATED_NAMESPACES.containsKey(xsdName)) [ CD ]
Line_2 $$ static URL discoverXsd(final String xsdName) -->Line_26 $$ if (url == null)[ CD ]
Line_13 $$ url = null-->Line_29 $$ url = classLoader.getResource("schema/" + fileName)[ FD ]
Line_2 $$ static URL discoverXsd(final String xsdName) -->Line_3 $$ if (OUTDATED_NAMESPACES.containsKey(xsdName)) [ FD ]
Line_13 $$ url = null-->Line_32 $$ assertNotNull(xsdName + " not found", url)[ FD ]
Line_2 $$ static URL discoverXsd(final String xsdName) -->Line_30 $$ if (url == null)[ CD ]
Line_10 $$ url = file.toURI().toURL()-->Line_28 $$ if (url == null)[ FD ]
Line_7 $$ URL url = null-->Line_27 $$ url = classLoader.getResource("docs/" + fileName)[ FD ]
Line_7 $$ URL url = null-->Line_30 $$ if (url == null)[ FD ]
Line_2 $$ static URL discoverXsd(final String xsdName) -->Line_24 $$ if (url == null)[ CD ]
