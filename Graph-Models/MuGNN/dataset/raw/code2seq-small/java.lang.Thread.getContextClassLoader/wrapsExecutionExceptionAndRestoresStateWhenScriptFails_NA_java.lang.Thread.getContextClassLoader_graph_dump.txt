Line_2 $$ public void wrapsExecutionExceptionAndRestoresStateWhenScriptFails() -->Line_33 $$ assertThat(Thread.currentThread().getContextClassLoader(), sameInstance(originalClassLoader))[ CD ]
Line_4 $$ ScriptRunner<?, Void> scriptRunner = factory.create(compiledScriptMock, scriptSourceDummy, classLoaderDummy)-->Line_27 $$ scriptRunner.run(target, scriptServices)[ FD ]
Line_8 $$ Sequence sequence = context.sequence("seq")-->Line_12 $$ inSequence(sequence)[ FD ]
Line_8 $$ Sequence sequence = context.sequence("seq")-->Line_18 $$ inSequence(sequence)[ FD ]
Line_2 $$ public void wrapsExecutionExceptionAndRestoresStateWhenScriptFails() -->Line_3 $$ final RuntimeException failure = new RuntimeException()[ CD ]
Line_2 $$ public void wrapsExecutionExceptionAndRestoresStateWhenScriptFails() -->Line_5 $$ expectScriptInstantiated()[ CD ]
Line_8 $$ Sequence sequence = context.sequence("seq")-->Line_14 $$ inSequence(sequence)[ FD ]
Line_2 $$ public void wrapsExecutionExceptionAndRestoresStateWhenScriptFails() -->Line_4 $$ ScriptRunner<?, Void> scriptRunner = factory.create(compiledScriptMock, scriptSourceDummy, classLoaderDummy)[ CD ]
Line_8 $$ Sequence sequence = context.sequence("seq")-->Line_16 $$ inSequence(sequence)[ FD ]
Line_2 $$ public void wrapsExecutionExceptionAndRestoresStateWhenScriptFails() -->Line_6 $$ context.checking(new Expectations() [ CD ]
Line_2 $$ public void wrapsExecutionExceptionAndRestoresStateWhenScriptFails() -->Line_24 $$ ClassLoader originalClassLoader = Thread.currentThread().getContextClassLoader()[ CD ]
Line_3 $$ final RuntimeException failure = new RuntimeException()-->Line_19 $$ will(throwException(failure))[ FD ]
Line_24 $$ ClassLoader originalClassLoader = Thread.currentThread().getContextClassLoader()-->Line_25 $$ assertThat(originalClassLoader, not(sameInstance(classLoaderDummy)))[ FD ]
Line_8 $$ Sequence sequence = context.sequence("seq")-->Line_21 $$ inSequence(sequence)[ FD ]
Line_2 $$ public void wrapsExecutionExceptionAndRestoresStateWhenScriptFails() -->Line_25 $$ assertThat(originalClassLoader, not(sameInstance(classLoaderDummy)))[ CD ]
Line_24 $$ ClassLoader originalClassLoader = Thread.currentThread().getContextClassLoader()-->Line_33 $$ assertThat(Thread.currentThread().getContextClassLoader(), sameInstance(originalClassLoader))[ FD ]
