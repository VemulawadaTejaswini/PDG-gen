Line_12 $$ for (int c = reader.read(); c != -1; c = reader.read()) -->Line_13 $$ writer.write(c)[ CD ]
Line_7 $$ BufferedReader reader = null-->Line_18 $$ if (reader != null)[ FD ]
Line_12 $$ for (int c = reader.read(); c != -1; c = reader.read()) -->Line_13 $$ writer.write(c)[ FD ]
Line_2 $$ public String parseSqlIn(String fileName) throws IOException -->Line_7 $$ BufferedReader reader = null[ CD ]
Line_9 $$ reader = new BufferedReader(new InputStreamReader(is, Charset.forName("UTF-8")))-->Line_18 $$ if (reader != null)[ FD ]
Line_9 $$ reader = new BufferedReader(new InputStreamReader(is, Charset.forName("UTF-8")))-->Line_19 $$ reader.close()[ FD ]
Line_11 $$ BufferedWriter writer = new BufferedWriter(sw)-->Line_13 $$ writer.write(c)[ FD ]
Line_7 $$ BufferedReader reader = null-->Line_9 $$ reader = new BufferedReader(new InputStreamReader(is, Charset.forName("UTF-8")))[ FD ]
Line_7 $$ BufferedReader reader = null-->Line_19 $$ reader.close()[ FD ]
Line_11 $$ BufferedWriter writer = new BufferedWriter(sw)-->Line_15 $$ writer.flush()[ FD ]
Line_3 $$ InputStream is = Thread.currentThread().getContextClassLoader().getResourceAsStream(fileName)-->Line_4 $$ if (is == null) [ FD ]
Line_2 $$ public String parseSqlIn(String fileName) throws IOException -->Line_4 $$ if (is == null) [ CD ]
Line_7 $$ BufferedReader reader = null-->Line_12 $$ for (int c = reader.read(); c != -1; c = reader.read()) [ FD ]
Line_18 $$ if (reader != null)-->Line_19 $$ reader.close()[ CD ]
Line_2 $$ public String parseSqlIn(String fileName) throws IOException -->Line_3 $$ InputStream is = Thread.currentThread().getContextClassLoader().getResourceAsStream(fileName)[ CD ]
Line_10 $$ StringWriter sw = new StringWriter()-->Line_16 $$ return sw.toString()[ FD ]
Line_9 $$ reader = new BufferedReader(new InputStreamReader(is, Charset.forName("UTF-8")))-->Line_12 $$ for (int c = reader.read(); c != -1; c = reader.read()) [ FD ]
Line_2 $$ public String parseSqlIn(String fileName) throws IOException -->Line_3 $$ InputStream is = Thread.currentThread().getContextClassLoader().getResourceAsStream(fileName)[ FD ]
Line_3 $$ InputStream is = Thread.currentThread().getContextClassLoader().getResourceAsStream(fileName)-->Line_20 $$ is.close()[ FD ]
