Line_19 $$ if (validatorFactory != null) -->Line_20 $$ emfBuilder.withValidatorFactory(validatorFactory)[ CD ]
Line_6 $$ PhaseOnePersistenceUnitServiceImpl phaseOnePersistenceUnitService = phaseOnePersistenceUnitServiceInjectedValue.getOptionalValue()-->Line_11 $$ if (phaseOnePersistenceUnitService != null) [ FD ]
Line_6 $$ PhaseOnePersistenceUnitServiceImpl phaseOnePersistenceUnitService = phaseOnePersistenceUnitServiceInjectedValue.getOptionalValue()-->Line_15 $$ proxyBeanManager = phaseOnePersistenceUnitService.getBeanManager()[ FD ]
Line_3 $$ ClassLoader old = Thread.currentThread().getContextClassLoader()-->Line_40 $$ Thread.currentThread().setContextClassLoader(old)[ FD ]
Line_11 $$ if (phaseOnePersistenceUnitService != null) -->Line_26 $$ pu.setJtaDataSource(jtaDataSource.getOptionalValue())[ CD ]
Line_11 $$ if (phaseOnePersistenceUnitService != null) -->Line_24 $$ ROOT_LOGGER.startingService("Persistence Unit", pu.getScopedPersistenceUnitName())[ CD ]
Line_6 $$ PhaseOnePersistenceUnitServiceImpl phaseOnePersistenceUnitService = phaseOnePersistenceUnitServiceInjectedValue.getOptionalValue()-->Line_18 $$ EntityManagerFactoryBuilder emfBuilder = phaseOnePersistenceUnitService.getEntityManagerFactoryBuilder()[ FD ]
Line_28 $$ if (beanManagerInjector.getOptionalValue() != null) -->Line_31 $$ properties.getValue().put(CDI_BEAN_MANAGER, proxyBeanManager)[ CD ]
Line_18 $$ EntityManagerFactoryBuilder emfBuilder = phaseOnePersistenceUnitService.getEntityManagerFactoryBuilder()-->Line_22 $$ entityManagerFactory = emfBuilder.build()[ FD ]
Line_2 $$ public Void run() -->Line_44 $$ return null[ CD ]
Line_18 $$ EntityManagerFactoryBuilder emfBuilder = phaseOnePersistenceUnitService.getEntityManagerFactoryBuilder()-->Line_20 $$ emfBuilder.withValidatorFactory(validatorFactory)[ FD ]
Line_11 $$ if (phaseOnePersistenceUnitService != null) -->Line_25 $$ pu.setTempClassLoaderFactory(new TempClassLoaderFactoryImpl(classLoader))[ CD ]
Line_11 $$ if (phaseOnePersistenceUnitService != null) -->Line_14 $$ if (beanManagerInjector.getOptionalValue() != null) [ CD ]
Line_6 $$ PhaseOnePersistenceUnitServiceImpl phaseOnePersistenceUnitService = phaseOnePersistenceUnitServiceInjectedValue.getOptionalValue()-->Line_13 $$ phaseOnePersistenceUnitService.setSecondPhaseStarted(true)[ FD ]
Line_11 $$ if (phaseOnePersistenceUnitService != null) -->Line_13 $$ phaseOnePersistenceUnitService.setSecondPhaseStarted(true)[ CD ]
Line_11 $$ if (phaseOnePersistenceUnitService != null) -->Line_19 $$ if (validatorFactory != null) [ CD ]
Line_14 $$ if (beanManagerInjector.getOptionalValue() != null) -->Line_15 $$ proxyBeanManager = phaseOnePersistenceUnitService.getBeanManager()[ CD ]
Line_11 $$ if (phaseOnePersistenceUnitService != null) -->Line_33 $$ entityManagerFactory = createContainerEntityManagerFactory()[ CD ]
Line_8 $$ if (validatorFactory != null) -->Line_9 $$ properties.getValue().put(VALIDATOR_FACTORY, validatorFactory)[ CD ]
Line_11 $$ if (phaseOnePersistenceUnitService != null) -->Line_22 $$ entityManagerFactory = emfBuilder.build()[ CD ]
Line_2 $$ public Void run() -->Line_4 $$ Thread.currentThread().setContextClassLoader(classLoader)[ CD ]
Line_14 $$ if (beanManagerInjector.getOptionalValue() != null) -->Line_16 $$ proxyBeanManager.setDelegate(beanManagerInjector.getOptionalValue())[ CD ]
Line_2 $$ public Void run() -->Line_3 $$ ClassLoader old = Thread.currentThread().getContextClassLoader()[ CD ]
Line_11 $$ if (phaseOnePersistenceUnitService != null) -->Line_27 $$ pu.setNonJtaDataSource(nonJtaDataSource.getOptionalValue())[ CD ]
Line_11 $$ if (phaseOnePersistenceUnitService != null) -->Line_28 $$ if (beanManagerInjector.getOptionalValue() != null) [ CD ]
Line_11 $$ if (phaseOnePersistenceUnitService != null) -->Line_18 $$ EntityManagerFactoryBuilder emfBuilder = phaseOnePersistenceUnitService.getEntityManagerFactoryBuilder()[ CD ]
Line_28 $$ if (beanManagerInjector.getOptionalValue() != null) -->Line_30 $$ proxyBeanManager.setDelegate(beanManagerInjector.getOptionalValue())[ CD ]
Line_11 $$ if (phaseOnePersistenceUnitService != null) -->Line_12 $$ ROOT_LOGGER.startingPersistenceUnitService(2, pu.getScopedPersistenceUnitName())[ CD ]
