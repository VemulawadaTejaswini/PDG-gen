Line_7 $$ ClassLoader contextClassLoader = currentThread.getContextClassLoader()-->Line_10 $$ aspectClasses[i] = contextClassLoader.loadClass(aspectClassNames[i])[ FD ]
Line_6 $$ Thread currentThread = Thread.currentThread()-->Line_18 $$ currentThread.setContextClassLoader(contextClassLoader)[ FD ]
Line_6 $$ Thread currentThread = Thread.currentThread()-->Line_7 $$ ClassLoader contextClassLoader = currentThread.getContextClassLoader()[ FD ]
Line_6 $$ Thread currentThread = Thread.currentThread()-->Line_13 $$ currentThread.setContextClassLoader(weavingClassLoader)[ FD ]
Line_2 $$ public Serializable call() throws ProcessException -->Line_4 $$ String[] aspectClassNames = StringUtil.split(System.getProperty("aspectClasses"))[ CD ]
Line_2 $$ public Serializable call() throws ProcessException -->Line_6 $$ Thread currentThread = Thread.currentThread()[ CD ]
Line_7 $$ ClassLoader contextClassLoader = currentThread.getContextClassLoader()-->Line_18 $$ currentThread.setContextClassLoader(contextClassLoader)[ FD ]
Line_2 $$ public Serializable call() throws ProcessException -->Line_5 $$ Class<?>[] aspectClasses = new Class<?>[aspectClassNames.length][ CD ]
Line_12 $$ WeavingClassLoader weavingClassLoader = new WeavingClassLoader(ClassPathUtil.getClassPathURLs(ClassPathUtil.getJVMClassPath(true)), aspectClasses, _dumpDir)-->Line_13 $$ currentThread.setContextClassLoader(weavingClassLoader)[ FD ]
Line_2 $$ public Serializable call() throws ProcessException -->Line_3 $$ attachProcess("Attached " + toString())[ CD ]
Line_2 $$ public Serializable call() throws ProcessException -->Line_7 $$ ClassLoader contextClassLoader = currentThread.getContextClassLoader()[ CD ]
Line_9 $$ for (int i = 0; i < aspectClassNames.length; i++) -->Line_10 $$ aspectClasses[i] = contextClassLoader.loadClass(aspectClassNames[i])[ CD ]
Line_12 $$ WeavingClassLoader weavingClassLoader = new WeavingClassLoader(ClassPathUtil.getClassPathURLs(ClassPathUtil.getJVMClassPath(true)), aspectClasses, _dumpDir)-->Line_14 $$ return ReflectionTestUtil.invoke(SerializableUtil.deserialize(_encodedProcessCallable, weavingClassLoader), "call", new Class<?>[0])[ FD ]
