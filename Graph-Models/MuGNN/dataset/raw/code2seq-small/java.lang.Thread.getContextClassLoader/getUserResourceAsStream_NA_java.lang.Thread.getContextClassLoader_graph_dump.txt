Line_2 $$ public static InputStream getUserResourceAsStream(String resource) -->Line_4 $$ String stripped = hasLeadingSlash ? resource.substring(1) : resource[ CD ]
Line_2 $$ public static InputStream getUserResourceAsStream(String resource) -->Line_14 $$ stream = Environment.class.getClassLoader().getResourceAsStream(resource)[ FD ]
Line_5 $$ InputStream stream = null-->Line_13 $$ if (stream == null) [ FD ]
Line_2 $$ public static InputStream getUserResourceAsStream(String resource) -->Line_7 $$ if (classLoader != null) [ CD ]
Line_8 $$ stream = classLoader.getResourceAsStream(resource)-->Line_14 $$ stream = Environment.class.getClassLoader().getResourceAsStream(resource)[ FD ]
Line_2 $$ public static InputStream getUserResourceAsStream(String resource) -->Line_4 $$ String stripped = hasLeadingSlash ? resource.substring(1) : resource[ FD ]
Line_2 $$ public static InputStream getUserResourceAsStream(String resource) -->Line_6 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()[ CD ]
Line_2 $$ public static InputStream getUserResourceAsStream(String resource) -->Line_3 $$ boolean hasLeadingSlash = resource.startsWith("/")[ CD ]
Line_13 $$ if (stream == null) -->Line_14 $$ stream = Environment.class.getClassLoader().getResourceAsStream(resource)[ CD ]
Line_10 $$ stream = classLoader.getResourceAsStream(stripped)-->Line_14 $$ stream = Environment.class.getClassLoader().getResourceAsStream(resource)[ FD ]
Line_10 $$ stream = classLoader.getResourceAsStream(stripped)-->Line_19 $$ if (stream == null) [ FD ]
Line_6 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_10 $$ stream = classLoader.getResourceAsStream(stripped)[ FD ]
Line_8 $$ stream = classLoader.getResourceAsStream(resource)-->Line_10 $$ stream = classLoader.getResourceAsStream(stripped)[ FD ]
Line_5 $$ InputStream stream = null-->Line_17 $$ stream = Environment.class.getClassLoader().getResourceAsStream(stripped)[ FD ]
Line_2 $$ public static InputStream getUserResourceAsStream(String resource) -->Line_19 $$ if (stream == null) [ CD ]
Line_4 $$ String stripped = hasLeadingSlash ? resource.substring(1) : resource-->Line_10 $$ stream = classLoader.getResourceAsStream(stripped)[ FD ]
Line_2 $$ public static InputStream getUserResourceAsStream(String resource) -->Line_5 $$ InputStream stream = null[ CD ]
Line_10 $$ stream = classLoader.getResourceAsStream(stripped)-->Line_13 $$ if (stream == null) [ FD ]
Line_7 $$ if (classLoader != null) -->Line_9 $$ if (stream == null && hasLeadingSlash) [ CD ]
Line_8 $$ stream = classLoader.getResourceAsStream(resource)-->Line_19 $$ if (stream == null) [ FD ]
Line_2 $$ public static InputStream getUserResourceAsStream(String resource) -->Line_22 $$ return stream[ CD ]
Line_5 $$ InputStream stream = null-->Line_10 $$ stream = classLoader.getResourceAsStream(stripped)[ FD ]
Line_3 $$ boolean hasLeadingSlash = resource.startsWith("/")-->Line_9 $$ if (stream == null && hasLeadingSlash) [ FD ]
Line_14 $$ stream = Environment.class.getClassLoader().getResourceAsStream(resource)-->Line_19 $$ if (stream == null) [ FD ]
Line_16 $$ if (stream == null && hasLeadingSlash) -->Line_17 $$ stream = Environment.class.getClassLoader().getResourceAsStream(stripped)[ CD ]
Line_2 $$ public static InputStream getUserResourceAsStream(String resource) -->Line_8 $$ stream = classLoader.getResourceAsStream(resource)[ FD ]
Line_14 $$ stream = Environment.class.getClassLoader().getResourceAsStream(resource)-->Line_17 $$ stream = Environment.class.getClassLoader().getResourceAsStream(stripped)[ FD ]
Line_10 $$ stream = classLoader.getResourceAsStream(stripped)-->Line_17 $$ stream = Environment.class.getClassLoader().getResourceAsStream(stripped)[ FD ]
Line_7 $$ if (classLoader != null) -->Line_8 $$ stream = classLoader.getResourceAsStream(resource)[ CD ]
Line_2 $$ public static InputStream getUserResourceAsStream(String resource) -->Line_3 $$ boolean hasLeadingSlash = resource.startsWith("/")[ FD ]
Line_9 $$ if (stream == null && hasLeadingSlash) -->Line_10 $$ stream = classLoader.getResourceAsStream(stripped)[ CD ]
Line_6 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_7 $$ if (classLoader != null) [ FD ]
Line_5 $$ InputStream stream = null-->Line_14 $$ stream = Environment.class.getClassLoader().getResourceAsStream(resource)[ FD ]
Line_17 $$ stream = Environment.class.getClassLoader().getResourceAsStream(stripped)-->Line_19 $$ if (stream == null) [ FD ]
Line_3 $$ boolean hasLeadingSlash = resource.startsWith("/")-->Line_16 $$ if (stream == null && hasLeadingSlash) [ FD ]
Line_6 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_8 $$ stream = classLoader.getResourceAsStream(resource)[ FD ]
Line_5 $$ InputStream stream = null-->Line_8 $$ stream = classLoader.getResourceAsStream(resource)[ FD ]
Line_8 $$ stream = classLoader.getResourceAsStream(resource)-->Line_17 $$ stream = Environment.class.getClassLoader().getResourceAsStream(stripped)[ FD ]
Line_5 $$ InputStream stream = null-->Line_19 $$ if (stream == null) [ FD ]
Line_8 $$ stream = classLoader.getResourceAsStream(resource)-->Line_13 $$ if (stream == null) [ FD ]
Line_2 $$ public static InputStream getUserResourceAsStream(String resource) -->Line_16 $$ if (stream == null && hasLeadingSlash) [ CD ]
Line_2 $$ public static InputStream getUserResourceAsStream(String resource) -->Line_13 $$ if (stream == null) [ CD ]
Line_4 $$ String stripped = hasLeadingSlash ? resource.substring(1) : resource-->Line_17 $$ stream = Environment.class.getClassLoader().getResourceAsStream(stripped)[ FD ]
