Line_7 $$ Sequence sequence = context.sequence("seq")-->Line_28 $$ inSequence(sequence)[ FD ]
Line_18 $$ will(doAll(new Action() -->Line_20 $$ description.appendValue("check context classloader")[ FD ]
Line_2 $$ public void setsUpAndTearsDownWhenNonEmptyScriptIsRun() -->Line_4 $$ expectScriptInstantiated()[ CD ]
Line_2 $$ public void setsUpAndTearsDownWhenNonEmptyScriptIsRun() -->Line_33 $$ scriptRunner.run(target, scriptServices)[ CD ]
Line_18 $$ will(doAll(new Action() -->Line_24 $$ return null[ CD ]
Line_2 $$ public void setsUpAndTearsDownWhenNonEmptyScriptIsRun() -->Line_31 $$ ClassLoader originalClassLoader = Thread.currentThread().getContextClassLoader()[ CD ]
Line_2 $$ public void setsUpAndTearsDownWhenNonEmptyScriptIsRun() -->Line_5 $$ context.checking(new Expectations() [ CD ]
Line_2 $$ public void setsUpAndTearsDownWhenNonEmptyScriptIsRun() -->Line_34 $$ assertThat(Thread.currentThread().getContextClassLoader(), sameInstance(originalClassLoader))[ CD ]
Line_7 $$ Sequence sequence = context.sequence("seq")-->Line_11 $$ inSequence(sequence)[ FD ]
Line_2 $$ public void setsUpAndTearsDownWhenNonEmptyScriptIsRun() -->Line_3 $$ ScriptRunner<?, Void> scriptRunner = factory.create(compiledScriptMock, scriptSourceDummy, classLoaderDummy)[ CD ]
Line_18 $$ will(doAll(new Action() -->Line_20 $$ description.appendValue("check context classloader")[ CD ]
Line_2 $$ public void setsUpAndTearsDownWhenNonEmptyScriptIsRun() -->Line_32 $$ assertThat(originalClassLoader, not(sameInstance(classLoaderDummy)))[ CD ]
Line_7 $$ Sequence sequence = context.sequence("seq")-->Line_15 $$ inSequence(sequence)[ FD ]
Line_7 $$ Sequence sequence = context.sequence("seq")-->Line_17 $$ inSequence(sequence)[ FD ]
Line_7 $$ Sequence sequence = context.sequence("seq")-->Line_13 $$ inSequence(sequence)[ FD ]
Line_3 $$ ScriptRunner<?, Void> scriptRunner = factory.create(compiledScriptMock, scriptSourceDummy, classLoaderDummy)-->Line_33 $$ scriptRunner.run(target, scriptServices)[ FD ]
Line_18 $$ will(doAll(new Action() -->Line_23 $$ assertThat(Thread.currentThread().getContextClassLoader(), sameInstance(classLoaderDummy))[ CD ]
