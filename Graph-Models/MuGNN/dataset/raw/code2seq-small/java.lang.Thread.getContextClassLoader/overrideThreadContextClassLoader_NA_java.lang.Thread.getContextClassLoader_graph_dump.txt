Line_2 $$ public static ClassLoader overrideThreadContextClassLoader(ClassLoader classLoaderToUse) -->Line_5 $$ if (classLoaderToUse != null && !classLoaderToUse.equals(threadContextClassLoader)) [ CD ]
Line_5 $$ if (classLoaderToUse != null && !classLoaderToUse.equals(threadContextClassLoader)) -->Line_9 $$ return null[ CD ]
Line_2 $$ public static ClassLoader overrideThreadContextClassLoader(ClassLoader classLoaderToUse) -->Line_3 $$ Thread currentThread = Thread.currentThread()[ CD ]
Line_2 $$ public static ClassLoader overrideThreadContextClassLoader(ClassLoader classLoaderToUse) -->Line_5 $$ if (classLoaderToUse != null && !classLoaderToUse.equals(threadContextClassLoader)) [ FD ]
Line_3 $$ Thread currentThread = Thread.currentThread()-->Line_4 $$ ClassLoader threadContextClassLoader = currentThread.getContextClassLoader()[ FD ]
Line_3 $$ Thread currentThread = Thread.currentThread()-->Line_6 $$ currentThread.setContextClassLoader(classLoaderToUse)[ FD ]
Line_5 $$ if (classLoaderToUse != null && !classLoaderToUse.equals(threadContextClassLoader)) -->Line_7 $$ return threadContextClassLoader[ CD ]
Line_2 $$ public static ClassLoader overrideThreadContextClassLoader(ClassLoader classLoaderToUse) -->Line_4 $$ ClassLoader threadContextClassLoader = currentThread.getContextClassLoader()[ CD ]
Line_4 $$ ClassLoader threadContextClassLoader = currentThread.getContextClassLoader()-->Line_5 $$ if (classLoaderToUse != null && !classLoaderToUse.equals(threadContextClassLoader)) [ FD ]
Line_5 $$ if (classLoaderToUse != null && !classLoaderToUse.equals(threadContextClassLoader)) -->Line_6 $$ currentThread.setContextClassLoader(classLoaderToUse)[ CD ]
Line_2 $$ public static ClassLoader overrideThreadContextClassLoader(ClassLoader classLoaderToUse) -->Line_6 $$ currentThread.setContextClassLoader(classLoaderToUse)[ FD ]
