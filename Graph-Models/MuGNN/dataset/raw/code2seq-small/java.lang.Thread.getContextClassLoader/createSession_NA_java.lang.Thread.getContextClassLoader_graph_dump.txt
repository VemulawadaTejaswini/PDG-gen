Line_2 $$ protected Session createSession(Bundle bundle, CMISStoreConfiguration cmisStoreConfiguration, OperationContext operationContext, SessionFactory sessionFactory) -->Line_6 $$ parameters.put(SessionParameter.COMPRESSION, Boolean.TRUE.toString())[ CD ]
Line_2 $$ protected Session createSession(Bundle bundle, CMISStoreConfiguration cmisStoreConfiguration, OperationContext operationContext, SessionFactory sessionFactory) -->Line_8 $$ parameters.put(SessionParameter.LOCALE_ISO3166_COUNTRY, locale.getCountry())[ CD ]
Line_3 $$ Map<String, String> parameters = new HashMap()-->Line_6 $$ parameters.put(SessionParameter.COMPRESSION, Boolean.TRUE.toString())[ FD ]
Line_2 $$ protected Session createSession(Bundle bundle, CMISStoreConfiguration cmisStoreConfiguration, OperationContext operationContext, SessionFactory sessionFactory) -->Line_14 $$ BundleWiring bundleWiring = bundle.adapt(BundleWiring.class)[ FD ]
Line_2 $$ protected Session createSession(Bundle bundle, CMISStoreConfiguration cmisStoreConfiguration, OperationContext operationContext, SessionFactory sessionFactory) -->Line_5 $$ parameters.put(SessionParameter.BINDING_TYPE, BindingType.ATOMPUB.value())[ CD ]
Line_2 $$ protected Session createSession(Bundle bundle, CMISStoreConfiguration cmisStoreConfiguration, OperationContext operationContext, SessionFactory sessionFactory) -->Line_9 $$ parameters.put(SessionParameter.LOCALE_ISO639_LANGUAGE, locale.getLanguage())[ CD ]
Line_3 $$ Map<String, String> parameters = new HashMap()-->Line_10 $$ parameters.put(SessionParameter.PASSWORD, cmisStoreConfiguration.credentialsPassword())[ FD ]
Line_2 $$ protected Session createSession(Bundle bundle, CMISStoreConfiguration cmisStoreConfiguration, OperationContext operationContext, SessionFactory sessionFactory) -->Line_14 $$ BundleWiring bundleWiring = bundle.adapt(BundleWiring.class)[ CD ]
Line_2 $$ protected Session createSession(Bundle bundle, CMISStoreConfiguration cmisStoreConfiguration, OperationContext operationContext, SessionFactory sessionFactory) -->Line_15 $$ ClassLoader bundleClassLoader = bundleWiring.getClassLoader()[ CD ]
Line_2 $$ protected Session createSession(Bundle bundle, CMISStoreConfiguration cmisStoreConfiguration, OperationContext operationContext, SessionFactory sessionFactory) -->Line_18 $$ List<Repository> repositories = sessionFactory.getRepositories(parameters)[ FD ]
Line_3 $$ Map<String, String> parameters = new HashMap()-->Line_5 $$ parameters.put(SessionParameter.BINDING_TYPE, BindingType.ATOMPUB.value())[ FD ]
Line_3 $$ Map<String, String> parameters = new HashMap()-->Line_11 $$ parameters.put(SessionParameter.USER, cmisStoreConfiguration.credentialsUsername())[ FD ]
Line_12 $$ Thread thread = Thread.currentThread()-->Line_24 $$ thread.setContextClassLoader(contextClassLoader)[ FD ]
Line_2 $$ protected Session createSession(Bundle bundle, CMISStoreConfiguration cmisStoreConfiguration, OperationContext operationContext, SessionFactory sessionFactory) -->Line_12 $$ Thread thread = Thread.currentThread()[ CD ]
Line_13 $$ ClassLoader contextClassLoader = thread.getContextClassLoader()-->Line_24 $$ thread.setContextClassLoader(contextClassLoader)[ FD ]
Line_2 $$ protected Session createSession(Bundle bundle, CMISStoreConfiguration cmisStoreConfiguration, OperationContext operationContext, SessionFactory sessionFactory) -->Line_4 $$ parameters.put(SessionParameter.ATOMPUB_URL, cmisStoreConfiguration.repositoryUrl())[ CD ]
Line_2 $$ protected Session createSession(Bundle bundle, CMISStoreConfiguration cmisStoreConfiguration, OperationContext operationContext, SessionFactory sessionFactory) -->Line_10 $$ parameters.put(SessionParameter.PASSWORD, cmisStoreConfiguration.credentialsPassword())[ CD ]
Line_12 $$ Thread thread = Thread.currentThread()-->Line_13 $$ ClassLoader contextClassLoader = thread.getContextClassLoader()[ FD ]
Line_2 $$ protected Session createSession(Bundle bundle, CMISStoreConfiguration cmisStoreConfiguration, OperationContext operationContext, SessionFactory sessionFactory) -->Line_7 $$ Locale locale = LocaleUtil.getDefault()[ CD ]
Line_15 $$ ClassLoader bundleClassLoader = bundleWiring.getClassLoader()-->Line_16 $$ thread.setContextClassLoader(bundleClassLoader)[ FD ]
Line_20 $$ Session session = repository.createSession()-->Line_21 $$ session.setDefaultContext(operationContext)[ FD ]
Line_18 $$ List<Repository> repositories = sessionFactory.getRepositories(parameters)-->Line_19 $$ Repository repository = repositories.get(0)[ FD ]
Line_3 $$ Map<String, String> parameters = new HashMap()-->Line_4 $$ parameters.put(SessionParameter.ATOMPUB_URL, cmisStoreConfiguration.repositoryUrl())[ FD ]
Line_2 $$ protected Session createSession(Bundle bundle, CMISStoreConfiguration cmisStoreConfiguration, OperationContext operationContext, SessionFactory sessionFactory) -->Line_16 $$ thread.setContextClassLoader(bundleClassLoader)[ CD ]
Line_2 $$ protected Session createSession(Bundle bundle, CMISStoreConfiguration cmisStoreConfiguration, OperationContext operationContext, SessionFactory sessionFactory) -->Line_11 $$ parameters.put(SessionParameter.USER, cmisStoreConfiguration.credentialsUsername())[ CD ]
Line_3 $$ Map<String, String> parameters = new HashMap()-->Line_18 $$ List<Repository> repositories = sessionFactory.getRepositories(parameters)[ FD ]
Line_3 $$ Map<String, String> parameters = new HashMap()-->Line_9 $$ parameters.put(SessionParameter.LOCALE_ISO639_LANGUAGE, locale.getLanguage())[ FD ]
Line_7 $$ Locale locale = LocaleUtil.getDefault()-->Line_9 $$ parameters.put(SessionParameter.LOCALE_ISO639_LANGUAGE, locale.getLanguage())[ FD ]
Line_14 $$ BundleWiring bundleWiring = bundle.adapt(BundleWiring.class)-->Line_15 $$ ClassLoader bundleClassLoader = bundleWiring.getClassLoader()[ FD ]
Line_2 $$ protected Session createSession(Bundle bundle, CMISStoreConfiguration cmisStoreConfiguration, OperationContext operationContext, SessionFactory sessionFactory) -->Line_3 $$ Map<String, String> parameters = new HashMap()[ CD ]
Line_2 $$ protected Session createSession(Bundle bundle, CMISStoreConfiguration cmisStoreConfiguration, OperationContext operationContext, SessionFactory sessionFactory) -->Line_21 $$ session.setDefaultContext(operationContext)[ FD ]
Line_12 $$ Thread thread = Thread.currentThread()-->Line_16 $$ thread.setContextClassLoader(bundleClassLoader)[ FD ]
Line_3 $$ Map<String, String> parameters = new HashMap()-->Line_8 $$ parameters.put(SessionParameter.LOCALE_ISO3166_COUNTRY, locale.getCountry())[ FD ]
Line_2 $$ protected Session createSession(Bundle bundle, CMISStoreConfiguration cmisStoreConfiguration, OperationContext operationContext, SessionFactory sessionFactory) -->Line_4 $$ parameters.put(SessionParameter.ATOMPUB_URL, cmisStoreConfiguration.repositoryUrl())[ FD ]
Line_7 $$ Locale locale = LocaleUtil.getDefault()-->Line_8 $$ parameters.put(SessionParameter.LOCALE_ISO3166_COUNTRY, locale.getCountry())[ FD ]
Line_2 $$ protected Session createSession(Bundle bundle, CMISStoreConfiguration cmisStoreConfiguration, OperationContext operationContext, SessionFactory sessionFactory) -->Line_11 $$ parameters.put(SessionParameter.USER, cmisStoreConfiguration.credentialsUsername())[ FD ]
Line_19 $$ Repository repository = repositories.get(0)-->Line_20 $$ Session session = repository.createSession()[ FD ]
Line_2 $$ protected Session createSession(Bundle bundle, CMISStoreConfiguration cmisStoreConfiguration, OperationContext operationContext, SessionFactory sessionFactory) -->Line_10 $$ parameters.put(SessionParameter.PASSWORD, cmisStoreConfiguration.credentialsPassword())[ FD ]
Line_2 $$ protected Session createSession(Bundle bundle, CMISStoreConfiguration cmisStoreConfiguration, OperationContext operationContext, SessionFactory sessionFactory) -->Line_13 $$ ClassLoader contextClassLoader = thread.getContextClassLoader()[ CD ]
