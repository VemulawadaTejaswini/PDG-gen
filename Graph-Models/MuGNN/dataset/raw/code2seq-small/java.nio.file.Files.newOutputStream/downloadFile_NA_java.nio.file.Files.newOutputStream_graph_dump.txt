Line_17 $$ boolean finished = false-->Line_27 $$ if (!finished) [ FD ]
Line_2 $$ private boolean downloadFile() throws FileNotFoundException, IOException -->Line_15 $$ os = Files.newOutputStream(dest)[ CD ]
Line_19 $$ byte[] buffer = new byte[1024 * 100]-->Line_21 $$ while (!isInterrupted() && (length = is.read(buffer)) >= 0) [ FD ]
Line_21 $$ while (!isInterrupted() && (length = is.read(buffer)) >= 0) -->Line_22 $$ os.write(buffer, 0, length)[ CD ]
Line_17 $$ boolean finished = false-->Line_25 $$ finished = !isInterrupted()[ FD ]
Line_25 $$ finished = !isInterrupted()-->Line_27 $$ if (!finished) [ FD ]
Line_2 $$ private boolean downloadFile() throws FileNotFoundException, IOException -->Line_12 $$ if (is == null) [ CD ]
Line_27 $$ if (!finished) -->Line_29 $$ IOUtils.deleteFilesIgnoringExceptions(dest)[ CD ]
Line_2 $$ private boolean downloadFile() throws FileNotFoundException, IOException -->Line_34 $$ progress.endDownload()[ CD ]
Line_2 $$ private boolean downloadFile() throws FileNotFoundException, IOException -->Line_17 $$ boolean finished = false[ CD ]
Line_27 $$ if (!finished) -->Line_31 $$ IOUtils.close(os, is)[ CD ]
Line_27 $$ if (!finished) -->Line_28 $$ IOUtils.closeWhileHandlingException(os, is)[ CD ]
Line_3 $$ IOException lastEx = null-->Line_9 $$ lastEx = ex[ FD ]
Line_20 $$ int length-->Line_22 $$ os.write(buffer, 0, length)[ FD ]
Line_2 $$ private boolean downloadFile() throws FileNotFoundException, IOException -->Line_4 $$ for (int i = 0; i < 3; i++) [ CD ]
Line_2 $$ private boolean downloadFile() throws FileNotFoundException, IOException -->Line_3 $$ IOException lastEx = null[ CD ]
Line_21 $$ while (!isInterrupted() && (length = is.read(buffer)) >= 0) -->Line_22 $$ os.write(buffer, 0, length)[ FD ]
Line_2 $$ private boolean downloadFile() throws FileNotFoundException, IOException -->Line_35 $$ return true[ CD ]
Line_20 $$ int length-->Line_21 $$ while (!isInterrupted() && (length = is.read(buffer)) >= 0) [ FD ]
Line_19 $$ byte[] buffer = new byte[1024 * 100]-->Line_22 $$ os.write(buffer, 0, length)[ FD ]
Line_2 $$ private boolean downloadFile() throws FileNotFoundException, IOException -->Line_16 $$ progress.beginDownload()[ CD ]
Line_21 $$ while (!isInterrupted() && (length = is.read(buffer)) >= 0) -->Line_23 $$ progress.onTick()[ CD ]
