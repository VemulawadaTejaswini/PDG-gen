Line_3 $$ SortedSet<Integer> toCollapse = new TreeSet<Integer>(new Comparator<Integer>() -->Line_5 $$ return o2.compareTo(o1)[ CD ]
Line_3 $$ SortedSet<Integer> toCollapse = new TreeSet<Integer>(new Comparator<Integer>() -->Line_5 $$ return o2.compareTo(o1)[ FD ]
Line_2 $$ private SortedSet<Integer> collectNodesToCollapse(GraphNode node) -->Line_3 $$ SortedSet<Integer> toCollapse = new TreeSet<Integer>(new Comparator<Integer>() [ CD ]
Line_2 $$ private SortedSet<Integer> collectNodesToCollapse(GraphNode node) -->Line_12 $$ return toCollapse[ CD ]
Line_3 $$ SortedSet<Integer> toCollapse = new TreeSet<Integer>(new Comparator<Integer>() -->Line_9 $$ toCollapse.add(f.getParent())[ FD ]
Line_2 $$ private SortedSet<Integer> collectNodesToCollapse(GraphNode node) -->Line_8 $$ for (LinearBekGraphBuilder.MergeFragment f : collectFragmentsToCollapse(node)) [ FD ]
Line_3 $$ SortedSet<Integer> toCollapse = new TreeSet<Integer>(new Comparator<Integer>() -->Line_10 $$ toCollapse.addAll(f.getTailsAndBody())[ FD ]
