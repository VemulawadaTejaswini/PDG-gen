Line_2 $$ private void generateLookups() -->Line_3 $$ TypeOracle typeOracle = context.getTypeOracle()[ CD ]
Line_2 $$ private void generateLookups() -->Line_23 $$ gatherTypes(typeOracle.findType("java.util.HashMap").getErasedType(), types)[ CD ]
Line_3 $$ TypeOracle typeOracle = context.getTypeOracle()-->Line_27 $$ gatherTypes(typeOracle.findType("java.lang.Byte").getErasedType(), types)[ FD ]
Line_3 $$ TypeOracle typeOracle = context.getTypeOracle()-->Line_32 $$ gatherTypes(typeOracle.findType("java.lang.Float").getErasedType(), types)[ FD ]
Line_14 $$ for (String s : prop.getValues()) -->Line_15 $$ JClassType type = typeOracle.findType(s)[ FD ]
Line_2 $$ private void generateLookups() -->Line_35 $$ gatherTypes(typeOracle.findType("java.lang.Object").getErasedType(), types)[ CD ]
Line_3 $$ TypeOracle typeOracle = context.getTypeOracle()-->Line_28 $$ gatherTypes(typeOracle.findType("java.lang.Long").getErasedType(), types)[ FD ]
Line_3 $$ TypeOracle typeOracle = context.getTypeOracle()-->Line_29 $$ gatherTypes(typeOracle.findType("java.lang.Character").getErasedType(), types)[ FD ]
Line_3 $$ TypeOracle typeOracle = context.getTypeOracle()-->Line_26 $$ gatherTypes(typeOracle.findType("java.lang.Boolean").getErasedType(), types)[ FD ]
Line_2 $$ private void generateLookups() -->Line_28 $$ gatherTypes(typeOracle.findType("java.lang.Long").getErasedType(), types)[ CD ]
Line_3 $$ TypeOracle typeOracle = context.getTypeOracle()-->Line_4 $$ JPackage[] packages = typeOracle.getPackages()[ FD ]
Line_3 $$ TypeOracle typeOracle = context.getTypeOracle()-->Line_22 $$ gatherTypes(typeOracle.findType("java.util.ArrayList").getErasedType(), types)[ FD ]
Line_2 $$ private void generateLookups() -->Line_22 $$ gatherTypes(typeOracle.findType("java.util.ArrayList").getErasedType(), types)[ CD ]
Line_2 $$ private void generateLookups() -->Line_31 $$ gatherTypes(typeOracle.findType("java.lang.Integer").getErasedType(), types)[ CD ]
Line_75 $$ if (stubSource.equals(""))-->Line_76 $$ stub.unused = true[ CD ]
Line_3 $$ TypeOracle typeOracle = context.getTypeOracle()-->Line_31 $$ gatherTypes(typeOracle.findType("java.lang.Integer").getErasedType(), types)[ FD ]
Line_15 $$ JClassType type = typeOracle.findType(s)-->Line_16 $$ if (type != null)[ FD ]
Line_3 $$ TypeOracle typeOracle = context.getTypeOracle()-->Line_23 $$ gatherTypes(typeOracle.findType("java.util.HashMap").getErasedType(), types)[ FD ]
Line_2 $$ private void generateLookups() -->Line_33 $$ gatherTypes(typeOracle.findType("java.lang.CharSequence").getErasedType(), types)[ CD ]
Line_7 $$ for (JClassType t : p.getTypes()) -->Line_45 $$ p(createTypeGenerator(t))[ FD ]
Line_2 $$ private void generateLookups() -->Line_30 $$ gatherTypes(typeOracle.findType("java.lang.Short").getErasedType(), types)[ CD ]
Line_3 $$ TypeOracle typeOracle = context.getTypeOracle()-->Line_33 $$ gatherTypes(typeOracle.findType("java.lang.CharSequence").getErasedType(), types)[ FD ]
Line_3 $$ TypeOracle typeOracle = context.getTypeOracle()-->Line_35 $$ gatherTypes(typeOracle.findType("java.lang.Object").getErasedType(), types)[ FD ]
Line_2 $$ private void generateLookups() -->Line_4 $$ JPackage[] packages = typeOracle.getPackages()[ CD ]
Line_2 $$ private void generateLookups() -->Line_27 $$ gatherTypes(typeOracle.findType("java.lang.Byte").getErasedType(), types)[ CD ]
Line_2 $$ private void generateLookups() -->Line_29 $$ gatherTypes(typeOracle.findType("java.lang.Character").getErasedType(), types)[ CD ]
Line_3 $$ TypeOracle typeOracle = context.getTypeOracle()-->Line_21 $$ gatherTypes(typeOracle.findType("java.util.List").getErasedType(), types)[ FD ]
Line_3 $$ TypeOracle typeOracle = context.getTypeOracle()-->Line_15 $$ JClassType type = typeOracle.findType(s)[ FD ]
Line_2 $$ private void generateLookups() -->Line_26 $$ gatherTypes(typeOracle.findType("java.lang.Boolean").getErasedType(), types)[ CD ]
Line_2 $$ private void generateLookups() -->Line_24 $$ gatherTypes(typeOracle.findType("java.util.Map").getErasedType(), types)[ CD ]
Line_13 $$ ConfigurationProperty prop = context.getPropertyOracle().getConfigurationProperty("gdx.reflect.include")-->Line_14 $$ for (String s : prop.getValues()) [ FD ]
Line_2 $$ private void generateLookups() -->Line_79 $$ logger.log(Type.INFO, types.size() + " types reflected")[ CD ]
Line_16 $$ if (type != null)-->Line_17 $$ gatherTypes(type.getErasedType(), types)[ CD ]
Line_2 $$ private void generateLookups() -->Line_34 $$ gatherTypes(typeOracle.findType("java.lang.Double").getErasedType(), types)[ CD ]
Line_2 $$ private void generateLookups() -->Line_25 $$ gatherTypes(typeOracle.findType("java.lang.String").getErasedType(), types)[ CD ]
Line_7 $$ for (JClassType t : p.getTypes()) -->Line_8 $$ gatherTypes(t.getErasedType(), types)[ FD ]
Line_2 $$ private void generateLookups() -->Line_32 $$ gatherTypes(typeOracle.findType("java.lang.Float").getErasedType(), types)[ CD ]
Line_3 $$ TypeOracle typeOracle = context.getTypeOracle()-->Line_25 $$ gatherTypes(typeOracle.findType("java.lang.String").getErasedType(), types)[ FD ]
Line_3 $$ TypeOracle typeOracle = context.getTypeOracle()-->Line_34 $$ gatherTypes(typeOracle.findType("java.lang.Double").getErasedType(), types)[ FD ]
Line_3 $$ TypeOracle typeOracle = context.getTypeOracle()-->Line_24 $$ gatherTypes(typeOracle.findType("java.util.Map").getErasedType(), types)[ FD ]
Line_60 $$ if (stubSource.equals(""))-->Line_61 $$ stub.unused = true[ CD ]
Line_2 $$ private void generateLookups() -->Line_21 $$ gatherTypes(typeOracle.findType("java.util.List").getErasedType(), types)[ CD ]
Line_3 $$ TypeOracle typeOracle = context.getTypeOracle()-->Line_30 $$ gatherTypes(typeOracle.findType("java.lang.Short").getErasedType(), types)[ FD ]
Line_15 $$ JClassType type = typeOracle.findType(s)-->Line_17 $$ gatherTypes(type.getErasedType(), types)[ FD ]
