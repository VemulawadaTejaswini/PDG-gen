Line_2 $$ public ForkJoinWorkerThread newThread(ForkJoinPool pool) -->Line_3 $$ final int n = addThread()[ CD ]
Line_2 $$ public ForkJoinWorkerThread newThread(ForkJoinPool pool) -->Line_4 $$ ForkJoinWorkerThread thread = new ForkJoinWorkerThread(pool) [ CD ]
Line_3 $$ final int n = addThread()-->Line_6 $$ finishThread(n)[ FD ]
Line_4 $$ ForkJoinWorkerThread thread = new ForkJoinWorkerThread(pool) -->Line_6 $$ finishThread(n)[ CD ]
Line_4 $$ ForkJoinWorkerThread thread = new ForkJoinWorkerThread(pool) -->Line_7 $$ super.onTermination(exception)[ FD ]
Line_4 $$ ForkJoinWorkerThread thread = new ForkJoinWorkerThread(pool) -->Line_10 $$ thread.setName("JobScheduler FJ pool " + n + "/" + JobSchedulerImpl.CORES_COUNT)[ FD ]
Line_2 $$ public ForkJoinWorkerThread newThread(ForkJoinPool pool) -->Line_11 $$ return thread[ CD ]
Line_4 $$ ForkJoinWorkerThread thread = new ForkJoinWorkerThread(pool) -->Line_7 $$ super.onTermination(exception)[ CD ]
Line_2 $$ public ForkJoinWorkerThread newThread(ForkJoinPool pool) -->Line_10 $$ thread.setName("JobScheduler FJ pool " + n + "/" + JobSchedulerImpl.CORES_COUNT)[ CD ]
