Line_5 $$ BinaryOutputStream bos = new BinaryOutputStream(os, BinaryConstants.BYTE_ORDER_INTEL)-->Line_91 $$ bos.write(0xff & bit_cache)[ FD ]
Line_63 $$ int row_padding = scanline_size - (bitCount * src.getWidth() + 7) / 8-->Line_72 $$ for (int x = 0; x < row_padding; x++) bos.write(0)[ FD ]
Line_26 $$ if (iconDirEntryWidth > 255 || iconDirEntryHeight > 255) -->Line_28 $$ iconDirEntryHeight = 0[ CD ]
Line_62 $$ int bits_in_cache = 0-->Line_89 $$ if (bits_in_cache > 0) [ FD ]
Line_83 $$ if (bits_in_cache >= 8) -->Line_84 $$ bos.write(0xff & bit_cache)[ CD ]
Line_61 $$ int bit_cache = 0-->Line_79 $$ bit_cache <<= 1[ FD ]
Line_2 $$ private static void writeTransparentIcoImageWithSanselan(BufferedImage src, OutputStream os) throws ImageWriteException, IOException -->Line_63 $$ int row_padding = scanline_size - (bitCount * src.getWidth() + 7) / 8[ FD ]
Line_5 $$ BinaryOutputStream bos = new BinaryOutputStream(os, BinaryConstants.BYTE_ORDER_INTEL)-->Line_70 $$ bos.write(0xff & (argb >> 24))[ FD ]
Line_2 $$ private static void writeTransparentIcoImageWithSanselan(BufferedImage src, OutputStream os) throws ImageWriteException, IOException -->Line_66 $$ int argb = src.getRGB(x, y)[ FD ]
Line_76 $$ for (int x = 0; x < src.getWidth(); x++) -->Line_82 $$ bits_in_cache++[ CD ]
Line_76 $$ for (int x = 0; x < src.getWidth(); x++) -->Line_95 $$ for (int x = 0; x < t_row_padding; x++) bos.write(0)[ FD ]
Line_5 $$ BinaryOutputStream bos = new BinaryOutputStream(os, BinaryConstants.BYTE_ORDER_INTEL)-->Line_69 $$ bos.write(0xff & (argb >> 16))[ FD ]
Line_89 $$ if (bits_in_cache > 0) -->Line_91 $$ bos.write(0xff & bit_cache)[ CD ]
Line_2 $$ private static void writeTransparentIcoImageWithSanselan(BufferedImage src, OutputStream os) throws ImageWriteException, IOException -->Line_7 $$ int scanline_size = (bitCount * src.getWidth() + 7) / 8[ FD ]
Line_75 $$ for (int y = src.getHeight() - 1; y >= 0; y--) -->Line_76 $$ for (int x = 0; x < src.getWidth(); x++) [ CD ]
Line_64 $$ for (int y = src.getHeight() - 1; y >= 0; y--) -->Line_65 $$ for (int x = 0; x < src.getWidth(); x++) [ CD ]
Line_65 $$ for (int x = 0; x < src.getWidth(); x++) -->Line_77 $$ int argb = src.getRGB(x, y)[ FD ]
Line_83 $$ if (bits_in_cache >= 8) -->Line_86 $$ bits_in_cache = 0[ CD ]
Line_2 $$ private static void writeTransparentIcoImageWithSanselan(BufferedImage src, OutputStream os) throws ImageWriteException, IOException -->Line_74 $$ int t_row_padding = t_scanline_size - (src.getWidth() + 7) / 8[ FD ]
Line_79 $$ bit_cache <<= 1-->Line_81 $$ bit_cache |= 1[ FD ]
Line_72 $$ for (int x = 0; x < row_padding; x++) bos.write(0)-->Line_77 $$ int argb = src.getRGB(x, y)[ FD ]
Line_61 $$ int bit_cache = 0-->Line_81 $$ bit_cache |= 1[ FD ]
Line_89 $$ if (bits_in_cache > 0) -->Line_93 $$ bits_in_cache = 0[ CD ]
Line_80 $$ if (alpha == 0)-->Line_81 $$ bit_cache |= 1[ CD ]
Line_2 $$ private static void writeTransparentIcoImageWithSanselan(BufferedImage src, OutputStream os) throws ImageWriteException, IOException -->Line_75 $$ for (int y = src.getHeight() - 1; y >= 0; y--) [ FD ]
Line_85 $$ bit_cache = 0-->Line_90 $$ bit_cache <<= (8 - bits_in_cache)[ FD ]
Line_5 $$ BinaryOutputStream bos = new BinaryOutputStream(os, BinaryConstants.BYTE_ORDER_INTEL)-->Line_38 $$ bos.write4Bytes(imageSize)[ FD ]
Line_81 $$ bit_cache |= 1-->Line_92 $$ bit_cache = 0[ FD ]
Line_28 $$ iconDirEntryHeight = 0-->Line_31 $$ bos.write(iconDirEntryHeight)[ FD ]
Line_2 $$ private static void writeTransparentIcoImageWithSanselan(BufferedImage src, OutputStream os) throws ImageWriteException, IOException -->Line_64 $$ for (int y = src.getHeight() - 1; y >= 0; y--) [ FD ]
Line_5 $$ BinaryOutputStream bos = new BinaryOutputStream(os, BinaryConstants.BYTE_ORDER_INTEL)-->Line_72 $$ bos.write(0)[ FD ]
Line_2 $$ private static void writeTransparentIcoImageWithSanselan(BufferedImage src, OutputStream os) throws ImageWriteException, IOException -->Line_76 $$ for (int x = 0; x < src.getWidth(); x++) [ FD ]
Line_2 $$ private static void writeTransparentIcoImageWithSanselan(BufferedImage src, OutputStream os) throws ImageWriteException, IOException -->Line_77 $$ int argb = src.getRGB(x, y)[ FD ]
Line_2 $$ private static void writeTransparentIcoImageWithSanselan(BufferedImage src, OutputStream os) throws ImageWriteException, IOException -->Line_44 $$ bos.write4Bytes(src.getWidth())[ FD ]
Line_5 $$ BinaryOutputStream bos = new BinaryOutputStream(os, BinaryConstants.BYTE_ORDER_INTEL)-->Line_44 $$ bos.write4Bytes(src.getWidth())[ FD ]
Line_64 $$ for (int y = src.getHeight() - 1; y >= 0; y--) -->Line_75 $$ for (int y = src.getHeight() - 1; y >= 0; y--) [ FD ]
Line_5 $$ BinaryOutputStream bos = new BinaryOutputStream(os, BinaryConstants.BYTE_ORDER_INTEL)-->Line_84 $$ bos.write(0xff & bit_cache)[ FD ]
Line_5 $$ BinaryOutputStream bos = new BinaryOutputStream(os, BinaryConstants.BYTE_ORDER_INTEL)-->Line_67 $$ bos.write(0xff & argb)[ FD ]
Line_89 $$ if (bits_in_cache > 0) -->Line_90 $$ bit_cache <<= (8 - bits_in_cache)[ CD ]
Line_64 $$ for (int y = src.getHeight() - 1; y >= 0; y--) -->Line_66 $$ int argb = src.getRGB(x, y)[ FD ]
Line_72 $$ for (int x = 0; x < row_padding; x++) bos.write(0)-->Line_76 $$ for (int x = 0; x < src.getWidth(); x++) [ FD ]
Line_81 $$ bit_cache |= 1-->Line_85 $$ bit_cache = 0[ FD ]
Line_5 $$ BinaryOutputStream bos = new BinaryOutputStream(os, BinaryConstants.BYTE_ORDER_INTEL)-->Line_45 $$ bos.write4Bytes(2 * src.getHeight())[ FD ]
Line_26 $$ if (iconDirEntryWidth > 255 || iconDirEntryHeight > 255) -->Line_27 $$ iconDirEntryWidth = 0[ CD ]
Line_75 $$ for (int y = src.getHeight() - 1; y >= 0; y--) -->Line_89 $$ if (bits_in_cache > 0) [ CD ]
Line_86 $$ bits_in_cache = 0-->Line_93 $$ bits_in_cache = 0[ FD ]
Line_86 $$ bits_in_cache = 0-->Line_83 $$ if (bits_in_cache >= 8) [ FD ]
Line_64 $$ for (int y = src.getHeight() - 1; y >= 0; y--) -->Line_77 $$ int argb = src.getRGB(x, y)[ FD ]
Line_86 $$ bits_in_cache = 0-->Line_82 $$ bits_in_cache++[ FD ]
Line_62 $$ int bits_in_cache = 0-->Line_83 $$ if (bits_in_cache >= 8) [ FD ]
Line_61 $$ int bit_cache = 0-->Line_92 $$ bit_cache = 0[ FD ]
Line_5 $$ BinaryOutputStream bos = new BinaryOutputStream(os, BinaryConstants.BYTE_ORDER_INTEL)-->Line_95 $$ bos.write(0)[ FD ]
Line_62 $$ int bits_in_cache = 0-->Line_86 $$ bits_in_cache = 0[ FD ]
Line_83 $$ if (bits_in_cache >= 8) -->Line_85 $$ bit_cache = 0[ CD ]
Line_79 $$ bit_cache <<= 1-->Line_90 $$ bit_cache <<= (8 - bits_in_cache)[ FD ]
Line_76 $$ for (int x = 0; x < src.getWidth(); x++) -->Line_77 $$ int argb = src.getRGB(x, y)[ CD ]
Line_62 $$ int bits_in_cache = 0-->Line_82 $$ bits_in_cache++[ FD ]
Line_4 $$ int bitCount = 32-->Line_37 $$ bos.write2Bytes(bitCount)[ FD ]
Line_5 $$ BinaryOutputStream bos = new BinaryOutputStream(os, BinaryConstants.BYTE_ORDER_INTEL)-->Line_48 $$ bos.write2Bytes(bitCount)[ FD ]
Line_65 $$ for (int x = 0; x < src.getWidth(); x++) -->Line_76 $$ for (int x = 0; x < src.getWidth(); x++) [ FD ]
Line_2 $$ private static void writeTransparentIcoImageWithSanselan(BufferedImage src, OutputStream os) throws ImageWriteException, IOException -->Line_3 $$ LOG.assertTrue(BufferedImage.TYPE_INT_ARGB == src.getType() || BufferedImage.TYPE_4BYTE_ABGR == src.getType())[ CD ]
Line_65 $$ for (int x = 0; x < src.getWidth(); x++) -->Line_66 $$ int argb = src.getRGB(x, y)[ FD ]
Line_5 $$ BinaryOutputStream bos = new BinaryOutputStream(os, BinaryConstants.BYTE_ORDER_INTEL)-->Line_68 $$ bos.write(0xff & (argb >> 8))[ FD ]
Line_25 $$ int iconDirEntryHeight = src.getHeight()-->Line_28 $$ iconDirEntryHeight = 0[ FD ]
Line_2 $$ private static void writeTransparentIcoImageWithSanselan(BufferedImage src, OutputStream os) throws ImageWriteException, IOException -->Line_65 $$ for (int x = 0; x < src.getWidth(); x++) [ FD ]
Line_89 $$ if (bits_in_cache > 0) -->Line_92 $$ bit_cache = 0[ CD ]
Line_76 $$ for (int x = 0; x < src.getWidth(); x++) -->Line_78 $$ int alpha = 0xff & (argb >> 24)[ CD ]
Line_61 $$ int bit_cache = 0-->Line_85 $$ bit_cache = 0[ FD ]
Line_90 $$ bit_cache <<= (8 - bits_in_cache)-->Line_92 $$ bit_cache = 0[ FD ]
Line_2 $$ private static void writeTransparentIcoImageWithSanselan(BufferedImage src, OutputStream os) throws ImageWriteException, IOException -->Line_15 $$ int imageSize = 40 + src.getHeight() * scanline_size + src.getHeight() * t_scanline_size[ FD ]
Line_76 $$ for (int x = 0; x < src.getWidth(); x++) -->Line_77 $$ int argb = src.getRGB(x, y)[ FD ]
Line_65 $$ for (int x = 0; x < src.getWidth(); x++) -->Line_66 $$ int argb = src.getRGB(x, y)[ CD ]
Line_79 $$ bit_cache <<= 1-->Line_85 $$ bit_cache = 0[ FD ]
Line_81 $$ bit_cache |= 1-->Line_90 $$ bit_cache <<= (8 - bits_in_cache)[ FD ]
Line_2 $$ private static void writeTransparentIcoImageWithSanselan(BufferedImage src, OutputStream os) throws ImageWriteException, IOException -->Line_45 $$ bos.write4Bytes(2 * src.getHeight())[ FD ]
Line_65 $$ for (int x = 0; x < src.getWidth(); x++) -->Line_67 $$ bos.write(0xff & argb)[ CD ]
Line_79 $$ bit_cache <<= 1-->Line_92 $$ bit_cache = 0[ FD ]
Line_5 $$ BinaryOutputStream bos = new BinaryOutputStream(os, BinaryConstants.BYTE_ORDER_INTEL)-->Line_31 $$ bos.write(iconDirEntryHeight)[ FD ]
Line_76 $$ for (int x = 0; x < src.getWidth(); x++) -->Line_79 $$ bit_cache <<= 1[ CD ]
Line_78 $$ int alpha = 0xff & (argb >> 24)-->Line_80 $$ if (alpha == 0)[ FD ]
Line_85 $$ bit_cache = 0-->Line_92 $$ bit_cache = 0[ FD ]
Line_75 $$ for (int y = src.getHeight() - 1; y >= 0; y--) -->Line_77 $$ int argb = src.getRGB(x, y)[ FD ]
Line_61 $$ int bit_cache = 0-->Line_90 $$ bit_cache <<= (8 - bits_in_cache)[ FD ]
Line_2 $$ private static void writeTransparentIcoImageWithSanselan(BufferedImage src, OutputStream os) throws ImageWriteException, IOException -->Line_4 $$ int bitCount = 32[ CD ]
Line_76 $$ for (int x = 0; x < src.getWidth(); x++) -->Line_80 $$ if (alpha == 0)[ CD ]
Line_2 $$ private static void writeTransparentIcoImageWithSanselan(BufferedImage src, OutputStream os) throws ImageWriteException, IOException -->Line_3 $$ LOG.assertTrue(BufferedImage.TYPE_INT_ARGB == src.getType() || BufferedImage.TYPE_4BYTE_ABGR == src.getType())[ FD ]
Line_5 $$ BinaryOutputStream bos = new BinaryOutputStream(os, BinaryConstants.BYTE_ORDER_INTEL)-->Line_99 $$ bos.close()[ FD ]
Line_2 $$ private static void writeTransparentIcoImageWithSanselan(BufferedImage src, OutputStream os) throws ImageWriteException, IOException -->Line_5 $$ BinaryOutputStream bos = new BinaryOutputStream(os, BinaryConstants.BYTE_ORDER_INTEL)[ CD ]
Line_74 $$ int t_row_padding = t_scanline_size - (src.getWidth() + 7) / 8-->Line_95 $$ for (int x = 0; x < t_row_padding; x++) bos.write(0)[ FD ]
Line_65 $$ for (int x = 0; x < src.getWidth(); x++) -->Line_69 $$ bos.write(0xff & (argb >> 16))[ CD ]
Line_25 $$ int iconDirEntryHeight = src.getHeight()-->Line_31 $$ bos.write(iconDirEntryHeight)[ FD ]
Line_72 $$ for (int x = 0; x < row_padding; x++) bos.write(0)-->Line_95 $$ for (int x = 0; x < t_row_padding; x++) bos.write(0)[ FD ]
Line_65 $$ for (int x = 0; x < src.getWidth(); x++) -->Line_95 $$ for (int x = 0; x < t_row_padding; x++) bos.write(0)[ FD ]
Line_62 $$ int bits_in_cache = 0-->Line_93 $$ bits_in_cache = 0[ FD ]
Line_93 $$ bits_in_cache = 0-->Line_89 $$ if (bits_in_cache > 0) [ FD ]
Line_86 $$ bits_in_cache = 0-->Line_89 $$ if (bits_in_cache > 0) [ FD ]
Line_2 $$ private static void writeTransparentIcoImageWithSanselan(BufferedImage src, OutputStream os) throws ImageWriteException, IOException -->Line_11 $$ int t_scanline_size = (src.getWidth() + 7) / 8[ FD ]
Line_65 $$ for (int x = 0; x < src.getWidth(); x++) -->Line_68 $$ bos.write(0xff & (argb >> 8))[ CD ]
Line_65 $$ for (int x = 0; x < src.getWidth(); x++) -->Line_70 $$ bos.write(0xff & (argb >> 24))[ CD ]
Line_5 $$ BinaryOutputStream bos = new BinaryOutputStream(os, BinaryConstants.BYTE_ORDER_INTEL)-->Line_30 $$ bos.write(iconDirEntryWidth)[ FD ]
Line_15 $$ int imageSize = 40 + src.getHeight() * scanline_size + src.getHeight() * t_scanline_size-->Line_38 $$ bos.write4Bytes(imageSize)[ FD ]
Line_75 $$ for (int y = src.getHeight() - 1; y >= 0; y--) -->Line_95 $$ for (int x = 0; x < t_row_padding; x++) bos.write(0)[ CD ]
Line_2 $$ private static void writeTransparentIcoImageWithSanselan(BufferedImage src, OutputStream os) throws ImageWriteException, IOException -->Line_25 $$ int iconDirEntryHeight = src.getHeight()[ FD ]
Line_5 $$ BinaryOutputStream bos = new BinaryOutputStream(os, BinaryConstants.BYTE_ORDER_INTEL)-->Line_37 $$ bos.write2Bytes(bitCount)[ FD ]
Line_76 $$ for (int x = 0; x < src.getWidth(); x++) -->Line_83 $$ if (bits_in_cache >= 8) [ CD ]
Line_65 $$ for (int x = 0; x < src.getWidth(); x++) -->Line_72 $$ for (int x = 0; x < row_padding; x++) bos.write(0)[ FD ]
Line_27 $$ iconDirEntryWidth = 0-->Line_30 $$ bos.write(iconDirEntryWidth)[ FD ]
Line_5 $$ BinaryOutputStream bos = new BinaryOutputStream(os, BinaryConstants.BYTE_ORDER_INTEL)-->Line_32 $$ bos.write(0)[ FD ]
Line_4 $$ int bitCount = 32-->Line_48 $$ bos.write2Bytes(bitCount)[ FD ]
Line_64 $$ for (int y = src.getHeight() - 1; y >= 0; y--) -->Line_72 $$ for (int x = 0; x < row_padding; x++) bos.write(0)[ CD ]
