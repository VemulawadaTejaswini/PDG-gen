Line_6 $$ while (scanner.findInLine(pattern) != null) -->Line_8 $$ int startOffset = Integer.parseInt(match.group(2))[ CD ]
Line_2 $$ protected static void setupDocument(@NotNull String data) -->Line_3 $$ Scanner scanner = new Scanner(data)[ CD ]
Line_12 $$ if (buffer.length() > 0) -->Line_13 $$ buffer.setLength(buffer.length() - 1)[ CD ]
Line_3 $$ Scanner scanner = new Scanner(data)-->Line_6 $$ while (scanner.findInLine(pattern) != null) [ FD ]
Line_7 $$ final MatchResult match = scanner.match()-->Line_8 $$ int startOffset = Integer.parseInt(match.group(2))[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_13 $$ buffer.setLength(buffer.length() - 1)[ FD ]
Line_6 $$ while (scanner.findInLine(pattern) != null) -->Line_9 $$ int endOffset = Integer.parseInt(match.group(3))[ CD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_15 $$ myEditor.getDocument().setText(buffer.toString())[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_10 $$ buffer.append(StringUtil.repeatSymbol('a', endOffset - startOffset)).append('\n')[ FD ]
Line_2 $$ protected static void setupDocument(@NotNull String data) -->Line_6 $$ while (scanner.findInLine(pattern) != null) [ CD ]
Line_6 $$ while (scanner.findInLine(pattern) != null) -->Line_7 $$ final MatchResult match = scanner.match()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(data)-->Line_7 $$ final MatchResult match = scanner.match()[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_12 $$ if (buffer.length() > 0) [ FD ]
Line_4 $$ Pattern pattern = Pattern.compile("(\\d+)\\s*:\\s*(\\d+)\\s*-\\s*(\\d+)")-->Line_6 $$ while (scanner.findInLine(pattern) != null) [ FD ]
Line_2 $$ protected static void setupDocument(@NotNull String data) -->Line_4 $$ Pattern pattern = Pattern.compile("(\\d+)\\s*:\\s*(\\d+)\\s*-\\s*(\\d+)")[ CD ]
Line_6 $$ while (scanner.findInLine(pattern) != null) -->Line_10 $$ buffer.append(StringUtil.repeatSymbol('a', endOffset - startOffset)).append('\n')[ CD ]
Line_2 $$ protected static void setupDocument(@NotNull String data) -->Line_12 $$ if (buffer.length() > 0) [ CD ]
Line_7 $$ final MatchResult match = scanner.match()-->Line_9 $$ int endOffset = Integer.parseInt(match.group(3))[ FD ]
Line_2 $$ protected static void setupDocument(@NotNull String data) -->Line_5 $$ StringBuilder buffer = new StringBuilder()[ CD ]
Line_2 $$ protected static void setupDocument(@NotNull String data) -->Line_15 $$ myEditor.getDocument().setText(buffer.toString())[ CD ]
