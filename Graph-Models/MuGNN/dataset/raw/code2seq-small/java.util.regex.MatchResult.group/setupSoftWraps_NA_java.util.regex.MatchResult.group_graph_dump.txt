Line_20 $$ int visualLine = Integer.parseInt(generalMatch.group(1))-->Line_52 $$ mapper.rawAdd(visualLine, startOffset, endOffset, startLogicalLine, startLogicalColumn, endLogicalLine, endLogicalColumn, endVisualColumn, foldRegions, tabData)[ FD ]
Line_18 $$ while (scanner.findInLine(generalPattern) != null) -->Line_29 $$ Scanner foldScanner = new Scanner(generalMatch.group(9))[ CD ]
Line_46 $$ while (tabScanner.findInLine(tabPattern) != null) -->Line_49 $$ int widthInColumns = Integer.parseInt(tabMatch.group(2))[ CD ]
Line_25 $$ int startLogicalColumn = Integer.parseInt(generalMatch.group(6))-->Line_52 $$ mapper.rawAdd(visualLine, startOffset, endOffset, startLogicalLine, startLogicalColumn, endLogicalLine, endLogicalColumn, endVisualColumn, foldRegions, tabData)[ FD ]
Line_18 $$ while (scanner.findInLine(generalPattern) != null) -->Line_23 $$ int startLogicalLine = Integer.parseInt(generalMatch.group(4))[ CD ]
Line_36 $$ for (FoldRegion candidate : foldingModel.getAllFoldRegions()) -->Line_37 $$ if (candidate.getStartOffset() == foldStartOffset && candidate.getEndOffset() == foldEndOffset) [ FD ]
Line_15 $$ final CachingSoftWrapDataMapper mapper = softWrapModel.getDataMapper()-->Line_52 $$ mapper.rawAdd(visualLine, startOffset, endOffset, startLogicalLine, startLogicalColumn, endLogicalLine, endLogicalColumn, endVisualColumn, foldRegions, tabData)[ FD ]
Line_47 $$ final MatchResult tabMatch = tabScanner.match()-->Line_49 $$ int widthInColumns = Integer.parseInt(tabMatch.group(2))[ FD ]
Line_22 $$ int endOffset = Integer.parseInt(generalMatch.group(3))-->Line_52 $$ mapper.rawAdd(visualLine, startOffset, endOffset, startLogicalLine, startLogicalColumn, endLogicalLine, endLogicalColumn, endVisualColumn, foldRegions, tabData)[ FD ]
Line_19 $$ final MatchResult generalMatch = scanner.match()-->Line_21 $$ int startOffset = Integer.parseInt(generalMatch.group(2))[ FD ]
Line_19 $$ final MatchResult generalMatch = scanner.match()-->Line_27 $$ int endVisualColumn = Integer.parseInt(generalMatch.group(8))[ FD ]
Line_19 $$ final MatchResult generalMatch = scanner.match()-->Line_24 $$ int endLogicalLine = Integer.parseInt(generalMatch.group(5))[ FD ]
Line_31 $$ final MatchResult foldMatch = foldScanner.match()-->Line_33 $$ int foldStartOffset = Integer.parseInt(foldMatch.group(2))[ FD ]
Line_35 $$ FoldRegion region = null-->Line_38 $$ region = candidate[ FD ]
Line_26 $$ int endLogicalColumn = Integer.parseInt(generalMatch.group(7))-->Line_52 $$ mapper.rawAdd(visualLine, startOffset, endOffset, startLogicalLine, startLogicalColumn, endLogicalLine, endLogicalColumn, endVisualColumn, foldRegions, tabData)[ FD ]
Line_27 $$ int endVisualColumn = Integer.parseInt(generalMatch.group(8))-->Line_52 $$ mapper.rawAdd(visualLine, startOffset, endOffset, startLogicalLine, startLogicalColumn, endLogicalLine, endLogicalColumn, endVisualColumn, foldRegions, tabData)[ FD ]
Line_30 $$ while (foldScanner.findInLine(foldPattern) != null) -->Line_32 $$ int widthInColumns = Integer.parseInt(foldMatch.group(1))[ CD ]
Line_28 $$ List<Pair<Integer, FoldRegion>> foldRegions = new ArrayList()-->Line_52 $$ mapper.rawAdd(visualLine, startOffset, endOffset, startLogicalLine, startLogicalColumn, endLogicalLine, endLogicalColumn, endVisualColumn, foldRegions, tabData)[ FD ]
Line_18 $$ while (scanner.findInLine(generalPattern) != null) -->Line_24 $$ int endLogicalLine = Integer.parseInt(generalMatch.group(5))[ CD ]
Line_13 $$ Pattern tabPattern = Pattern.compile("\\[(\\d+), width: (\\d+)")-->Line_46 $$ while (tabScanner.findInLine(tabPattern) != null) [ FD ]
Line_18 $$ while (scanner.findInLine(generalPattern) != null) -->Line_27 $$ int endVisualColumn = Integer.parseInt(generalMatch.group(8))[ CD ]
Line_29 $$ Scanner foldScanner = new Scanner(generalMatch.group(9))-->Line_31 $$ final MatchResult foldMatch = foldScanner.match()[ FD ]
Line_19 $$ final MatchResult generalMatch = scanner.match()-->Line_20 $$ int visualLine = Integer.parseInt(generalMatch.group(1))[ FD ]
Line_31 $$ final MatchResult foldMatch = foldScanner.match()-->Line_32 $$ int widthInColumns = Integer.parseInt(foldMatch.group(1))[ FD ]
Line_30 $$ while (foldScanner.findInLine(foldPattern) != null) -->Line_42 $$ foldRegions.add(new Pair(widthInColumns, region))[ CD ]
Line_18 $$ while (scanner.findInLine(generalPattern) != null) -->Line_46 $$ while (tabScanner.findInLine(tabPattern) != null) [ CD ]
Line_12 $$ Pattern foldPattern = Pattern.compile("width in columns: (-?\\d+), fold region: FoldRegion [-+]\\((\\d+):(\\d+)")-->Line_30 $$ while (foldScanner.findInLine(foldPattern) != null) [ FD ]
Line_29 $$ Scanner foldScanner = new Scanner(generalMatch.group(9))-->Line_30 $$ while (foldScanner.findInLine(foldPattern) != null) [ FD ]
Line_18 $$ while (scanner.findInLine(generalPattern) != null) -->Line_22 $$ int endOffset = Integer.parseInt(generalMatch.group(3))[ CD ]
Line_10 $$ Scanner scanner = new Scanner(data)-->Line_19 $$ final MatchResult generalMatch = scanner.match()[ FD ]
Line_15 $$ final CachingSoftWrapDataMapper mapper = softWrapModel.getDataMapper()-->Line_16 $$ mapper.release()[ FD ]
Line_18 $$ while (scanner.findInLine(generalPattern) != null) -->Line_19 $$ final MatchResult generalMatch = scanner.match()[ CD ]
Line_14 $$ final SoftWrapModelImpl softWrapModel = (SoftWrapModelImpl) myEditor.getSoftWrapModel()-->Line_15 $$ final CachingSoftWrapDataMapper mapper = softWrapModel.getDataMapper()[ FD ]
Line_18 $$ while (scanner.findInLine(generalPattern) != null) -->Line_25 $$ int startLogicalColumn = Integer.parseInt(generalMatch.group(6))[ CD ]
Line_17 $$ final FoldingModelEx foldingModel = (FoldingModelEx) myEditor.getFoldingModel()-->Line_36 $$ for (FoldRegion candidate : foldingModel.getAllFoldRegions()) [ FD ]
Line_18 $$ while (scanner.findInLine(generalPattern) != null) -->Line_30 $$ while (foldScanner.findInLine(foldPattern) != null) [ CD ]
Line_18 $$ while (scanner.findInLine(generalPattern) != null) -->Line_52 $$ mapper.rawAdd(visualLine, startOffset, endOffset, startLogicalLine, startLogicalColumn, endLogicalLine, endLogicalColumn, endVisualColumn, foldRegions, tabData)[ CD ]
Line_31 $$ final MatchResult foldMatch = foldScanner.match()-->Line_34 $$ int foldEndOffset = Integer.parseInt(foldMatch.group(3))[ FD ]
Line_18 $$ while (scanner.findInLine(generalPattern) != null) -->Line_28 $$ List<Pair<Integer, FoldRegion>> foldRegions = new ArrayList()[ CD ]
Line_36 $$ for (FoldRegion candidate : foldingModel.getAllFoldRegions()) -->Line_38 $$ region = candidate[ FD ]
Line_19 $$ final MatchResult generalMatch = scanner.match()-->Line_25 $$ int startLogicalColumn = Integer.parseInt(generalMatch.group(6))[ FD ]
Line_46 $$ while (tabScanner.findInLine(tabPattern) != null) -->Line_47 $$ final MatchResult tabMatch = tabScanner.match()[ CD ]
Line_10 $$ Scanner scanner = new Scanner(data)-->Line_18 $$ while (scanner.findInLine(generalPattern) != null) [ FD ]
Line_46 $$ while (tabScanner.findInLine(tabPattern) != null) -->Line_48 $$ int offset = Integer.parseInt(tabMatch.group(1))[ CD ]
Line_19 $$ final MatchResult generalMatch = scanner.match()-->Line_45 $$ Scanner tabScanner = new Scanner(generalMatch.group(10))[ FD ]
Line_21 $$ int startOffset = Integer.parseInt(generalMatch.group(2))-->Line_52 $$ mapper.rawAdd(visualLine, startOffset, endOffset, startLogicalLine, startLogicalColumn, endLogicalLine, endLogicalColumn, endVisualColumn, foldRegions, tabData)[ FD ]
Line_18 $$ while (scanner.findInLine(generalPattern) != null) -->Line_26 $$ int endLogicalColumn = Integer.parseInt(generalMatch.group(7))[ CD ]
Line_18 $$ while (scanner.findInLine(generalPattern) != null) -->Line_21 $$ int startOffset = Integer.parseInt(generalMatch.group(2))[ CD ]
Line_11 $$ Pattern generalPattern = Pattern.compile("visual line: (\\d+), offsets: (\\d+)-(\\d+), logical lines: (\\d+)-(\\d+), logical columns: (\\d+)-(\\d+), " + "end visual column: (\\d+), fold regions: \\[([^\\]]*)\\], tab data: \\[([^\\]]*)\\]")-->Line_18 $$ while (scanner.findInLine(generalPattern) != null) [ FD ]
Line_19 $$ final MatchResult generalMatch = scanner.match()-->Line_26 $$ int endLogicalColumn = Integer.parseInt(generalMatch.group(7))[ FD ]
Line_37 $$ if (candidate.getStartOffset() == foldStartOffset && candidate.getEndOffset() == foldEndOffset) -->Line_38 $$ region = candidate[ CD ]
Line_46 $$ while (tabScanner.findInLine(tabPattern) != null) -->Line_50 $$ tabData.add(new Pair(offset, widthInColumns))[ CD ]
Line_47 $$ final MatchResult tabMatch = tabScanner.match()-->Line_48 $$ int offset = Integer.parseInt(tabMatch.group(1))[ FD ]
Line_23 $$ int startLogicalLine = Integer.parseInt(generalMatch.group(4))-->Line_52 $$ mapper.rawAdd(visualLine, startOffset, endOffset, startLogicalLine, startLogicalColumn, endLogicalLine, endLogicalColumn, endVisualColumn, foldRegions, tabData)[ FD ]
Line_28 $$ List<Pair<Integer, FoldRegion>> foldRegions = new ArrayList()-->Line_42 $$ foldRegions.add(new Pair(widthInColumns, region))[ FD ]
Line_19 $$ final MatchResult generalMatch = scanner.match()-->Line_23 $$ int startLogicalLine = Integer.parseInt(generalMatch.group(4))[ FD ]
Line_30 $$ while (foldScanner.findInLine(foldPattern) != null) -->Line_33 $$ int foldStartOffset = Integer.parseInt(foldMatch.group(2))[ CD ]
Line_19 $$ final MatchResult generalMatch = scanner.match()-->Line_22 $$ int endOffset = Integer.parseInt(generalMatch.group(3))[ FD ]
Line_18 $$ while (scanner.findInLine(generalPattern) != null) -->Line_20 $$ int visualLine = Integer.parseInt(generalMatch.group(1))[ CD ]
Line_30 $$ while (foldScanner.findInLine(foldPattern) != null) -->Line_31 $$ final MatchResult foldMatch = foldScanner.match()[ CD ]
Line_24 $$ int endLogicalLine = Integer.parseInt(generalMatch.group(5))-->Line_52 $$ mapper.rawAdd(visualLine, startOffset, endOffset, startLogicalLine, startLogicalColumn, endLogicalLine, endLogicalColumn, endVisualColumn, foldRegions, tabData)[ FD ]
Line_30 $$ while (foldScanner.findInLine(foldPattern) != null) -->Line_34 $$ int foldEndOffset = Integer.parseInt(foldMatch.group(3))[ CD ]
Line_30 $$ while (foldScanner.findInLine(foldPattern) != null) -->Line_35 $$ FoldRegion region = null[ CD ]
Line_19 $$ final MatchResult generalMatch = scanner.match()-->Line_29 $$ Scanner foldScanner = new Scanner(generalMatch.group(9))[ FD ]
