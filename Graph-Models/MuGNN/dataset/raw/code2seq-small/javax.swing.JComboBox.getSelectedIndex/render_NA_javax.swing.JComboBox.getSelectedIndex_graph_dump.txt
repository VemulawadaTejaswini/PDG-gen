Line_2 $$ public void render() -->Line_26 $$ if (!unicodeFont.getEffects().isEmpty() && unicodeFont.loadGlyphs(64)) [ CD ]
Line_26 $$ if (!unicodeFont.getEffects().isEmpty() && unicodeFont.loadGlyphs(64)) -->Line_35 $$ glyphsTotalLabel.setText(String.valueOf(glyphCount))[ CD ]
Line_37 $$ if (sampleTextRadio.isSelected()) -->Line_39 $$ if (offset > 0)[ CD ]
Line_2 $$ public void render() -->Line_72 $$ glDisableClientState(GL_VERTEX_ARRAY)[ CD ]
Line_45 $$ if (index >= 0 && index < pages.size()) -->Line_57 $$ glColor4f(1, 1, 1, 1)[ CD ]
Line_45 $$ if (index >= 0 && index < pages.size()) -->Line_66 $$ glVertex3f(texture.getWidth(), 0, 0)[ CD ]
Line_37 $$ if (sampleTextRadio.isSelected()) -->Line_44 $$ List pages = unicodeFont.getGlyphPages()[ CD ]
Line_5 $$ if (sampleTextRadio.isSelected()) -->Line_9 $$ GL11.glClearColor(1, 1, 1, 1)[ CD ]
Line_2 $$ public void render() -->Line_70 $$ glDisable(GL_TEXTURE_2D)[ CD ]
Line_2 $$ public void render() -->Line_12 $$ String sampleText = sampleTextPane.getText()[ CD ]
Line_45 $$ if (index >= 0 && index < pages.size()) -->Line_51 $$ glVertex3f(0, texture.getHeight(), 0)[ CD ]
Line_45 $$ if (index >= 0 && index < pages.size()) -->Line_50 $$ glVertex3f(0, 0, 0)[ CD ]
Line_2 $$ public void render() -->Line_5 $$ if (sampleTextRadio.isSelected()) [ CD ]
Line_46 $$ Texture texture = ((GlyphPage) pages.get(glyphPageCombo.getSelectedIndex())).getTexture()-->Line_66 $$ glVertex3f(texture.getWidth(), 0, 0)[ FD ]
Line_45 $$ if (index >= 0 && index < pages.size()) -->Line_58 $$ glBegin(GL_QUADS)[ CD ]
Line_26 $$ if (!unicodeFont.getEffects().isEmpty() && unicodeFont.loadGlyphs(64)) -->Line_29 $$ int glyphCount = 0[ CD ]
Line_45 $$ if (index >= 0 && index < pages.size()) -->Line_59 $$ glTexCoord2f(0, 0)[ CD ]
Line_2 $$ public void render() -->Line_18 $$ glViewport(0, 0, width, height)[ CD ]
Line_29 $$ int glyphCount = 0-->Line_35 $$ glyphsTotalLabel.setText(String.valueOf(glyphCount))[ FD ]
Line_44 $$ List pages = unicodeFont.getGlyphPages()-->Line_45 $$ if (index >= 0 && index < pages.size()) [ FD ]
Line_28 $$ int pageCount = unicodeFont.getGlyphPages().size()-->Line_30 $$ for (int i = 0; i < pageCount; i++) [ FD ]
Line_29 $$ int glyphCount = 0-->Line_32 $$ glyphCount += ((GlyphPage) unicodeFont.getGlyphPages().get(i)).getGlyphs().size()[ FD ]
Line_2 $$ public void render() -->Line_24 $$ glLoadIdentity()[ CD ]
Line_2 $$ public void render() -->Line_71 $$ glDisableClientState(GL_TEXTURE_COORD_ARRAY)[ CD ]
Line_28 $$ int pageCount = unicodeFont.getGlyphPages().size()-->Line_34 $$ glyphPagesTotalLabel.setText(String.valueOf(pageCount))[ FD ]
Line_26 $$ if (!unicodeFont.getEffects().isEmpty() && unicodeFont.loadGlyphs(64)) -->Line_27 $$ glyphPageComboModel.removeAllElements()[ CD ]
Line_2 $$ public void render() -->Line_73 $$ if (saveBmFontFile != null) [ CD ]
Line_37 $$ if (sampleTextRadio.isSelected()) -->Line_41 $$ unicodeFont.drawString(10, 12, sampleText, Color.WHITE, 0, sampleText.length())[ CD ]
Line_26 $$ if (!unicodeFont.getEffects().isEmpty() && unicodeFont.loadGlyphs(64)) -->Line_28 $$ int pageCount = unicodeFont.getGlyphPages().size()[ CD ]
Line_12 $$ String sampleText = sampleTextPane.getText()-->Line_25 $$ unicodeFont.addGlyphs(sampleText)[ FD ]
Line_45 $$ if (index >= 0 && index < pages.size()) -->Line_55 $$ glEnable(GL_TEXTURE_2D)[ CD ]
Line_46 $$ Texture texture = ((GlyphPage) pages.get(glyphPageCombo.getSelectedIndex())).getTexture()-->Line_56 $$ texture.bind()[ FD ]
Line_2 $$ public void render() -->Line_20 $$ glMatrixMode(GL_PROJECTION)[ CD ]
Line_2 $$ public void render() -->Line_14 $$ glEnableClientState(GL_TEXTURE_COORD_ARRAY)[ CD ]
Line_46 $$ Texture texture = ((GlyphPage) pages.get(glyphPageCombo.getSelectedIndex())).getTexture()-->Line_52 $$ glVertex3f(texture.getWidth(), texture.getHeight(), 0)[ FD ]
Line_45 $$ if (index >= 0 && index < pages.size()) -->Line_48 $$ glColor4f(renderingBackgroundColor.r, renderingBackgroundColor.g, renderingBackgroundColor.b, renderingBackgroundColor.a)[ CD ]
Line_2 $$ public void render() -->Line_17 $$ glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA)[ CD ]
Line_26 $$ if (!unicodeFont.getEffects().isEmpty() && unicodeFont.loadGlyphs(64)) -->Line_30 $$ for (int i = 0; i < pageCount; i++) [ CD ]
Line_45 $$ if (index >= 0 && index < pages.size()) -->Line_46 $$ Texture texture = ((GlyphPage) pages.get(glyphPageCombo.getSelectedIndex())).getTexture()[ CD ]
Line_32 $$ glyphCount += ((GlyphPage) unicodeFont.getGlyphPages().get(i)).getGlyphs().size()-->Line_35 $$ glyphsTotalLabel.setText(String.valueOf(glyphCount))[ FD ]
Line_45 $$ if (index >= 0 && index < pages.size()) -->Line_56 $$ texture.bind()[ CD ]
Line_46 $$ Texture texture = ((GlyphPage) pages.get(glyphPageCombo.getSelectedIndex())).getTexture()-->Line_53 $$ glVertex3f(texture.getWidth(), 0, 0)[ FD ]
Line_44 $$ List pages = unicodeFont.getGlyphPages()-->Line_46 $$ Texture texture = ((GlyphPage) pages.get(glyphPageCombo.getSelectedIndex())).getTexture()[ FD ]
Line_30 $$ for (int i = 0; i < pageCount; i++) -->Line_32 $$ glyphCount += ((GlyphPage) unicodeFont.getGlyphPages().get(i)).getGlyphs().size()[ FD ]
Line_2 $$ public void render() -->Line_22 $$ glOrtho(0, width, height, 0, 1, -1)[ CD ]
Line_39 $$ if (offset > 0)-->Line_40 $$ offset = 0[ CD ]
Line_46 $$ Texture texture = ((GlyphPage) pages.get(glyphPageCombo.getSelectedIndex())).getTexture()-->Line_62 $$ glVertex3f(0, texture.getHeight(), 0)[ FD ]
Line_45 $$ if (index >= 0 && index < pages.size()) -->Line_61 $$ glTexCoord2f(0, 1)[ CD ]
Line_45 $$ if (index >= 0 && index < pages.size()) -->Line_52 $$ glVertex3f(texture.getWidth(), texture.getHeight(), 0)[ CD ]
Line_2 $$ public void render() -->Line_16 $$ glEnable(GL_BLEND)[ CD ]
Line_45 $$ if (index >= 0 && index < pages.size()) -->Line_60 $$ glVertex3f(0, 0, 0)[ CD ]
Line_45 $$ if (index >= 0 && index < pages.size()) -->Line_65 $$ glTexCoord2f(1, 0)[ CD ]
Line_2 $$ public void render() -->Line_23 $$ glMatrixMode(GL_MODELVIEW)[ CD ]
Line_2 $$ public void render() -->Line_13 $$ glEnable(GL_TEXTURE_2D)[ CD ]
Line_5 $$ if (sampleTextRadio.isSelected()) -->Line_6 $$ GL11.glClearColor(renderingBackgroundColor.r, renderingBackgroundColor.g, renderingBackgroundColor.b, renderingBackgroundColor.a)[ CD ]
Line_2 $$ public void render() -->Line_19 $$ glScissor(0, 0, width, height)[ CD ]
Line_45 $$ if (index >= 0 && index < pages.size()) -->Line_49 $$ glBegin(GL_QUADS)[ CD ]
Line_46 $$ Texture texture = ((GlyphPage) pages.get(glyphPageCombo.getSelectedIndex())).getTexture()-->Line_51 $$ glVertex3f(0, texture.getHeight(), 0)[ FD ]
Line_2 $$ public void render() -->Line_15 $$ glEnableClientState(GL_VERTEX_ARRAY)[ CD ]
Line_5 $$ if (sampleTextRadio.isSelected()) -->Line_10 $$ GL11.glClear(GL11.GL_COLOR_BUFFER_BIT)[ CD ]
Line_30 $$ for (int i = 0; i < pageCount; i++) -->Line_31 $$ glyphPageComboModel.addElement("Page " + (i + 1))[ CD ]
Line_30 $$ for (int i = 0; i < pageCount; i++) -->Line_32 $$ glyphCount += ((GlyphPage) unicodeFont.getGlyphPages().get(i)).getGlyphs().size()[ CD ]
Line_45 $$ if (index >= 0 && index < pages.size()) -->Line_47 $$ glDisable(GL_TEXTURE_2D)[ CD ]
Line_37 $$ if (sampleTextRadio.isSelected()) -->Line_38 $$ int offset = unicodeFont.getYOffset(sampleText)[ CD ]
Line_37 $$ if (sampleTextRadio.isSelected()) -->Line_45 $$ if (index >= 0 && index < pages.size()) [ CD ]
Line_37 $$ if (sampleTextRadio.isSelected()) -->Line_43 $$ int index = glyphPageCombo.getSelectedIndex()[ CD ]
Line_2 $$ public void render() -->Line_4 $$ int viewHeight = Gdx.graphics.getHeight()[ CD ]
Line_2 $$ public void render() -->Line_37 $$ if (sampleTextRadio.isSelected()) [ CD ]
Line_45 $$ if (index >= 0 && index < pages.size()) -->Line_54 $$ glEnd()[ CD ]
Line_45 $$ if (index >= 0 && index < pages.size()) -->Line_53 $$ glVertex3f(texture.getWidth(), 0, 0)[ CD ]
Line_46 $$ Texture texture = ((GlyphPage) pages.get(glyphPageCombo.getSelectedIndex())).getTexture()-->Line_64 $$ glVertex3f(texture.getWidth(), texture.getHeight(), 0)[ FD ]
Line_38 $$ int offset = unicodeFont.getYOffset(sampleText)-->Line_40 $$ offset = 0[ FD ]
Line_12 $$ String sampleText = sampleTextPane.getText()-->Line_38 $$ int offset = unicodeFont.getYOffset(sampleText)[ FD ]
Line_2 $$ public void render() -->Line_3 $$ int viewWidth = Gdx.graphics.getWidth()[ CD ]
Line_26 $$ if (!unicodeFont.getEffects().isEmpty() && unicodeFont.loadGlyphs(64)) -->Line_34 $$ glyphPagesTotalLabel.setText(String.valueOf(pageCount))[ CD ]
Line_2 $$ public void render() -->Line_25 $$ unicodeFont.addGlyphs(sampleText)[ CD ]
Line_45 $$ if (index >= 0 && index < pages.size()) -->Line_62 $$ glVertex3f(0, texture.getHeight(), 0)[ CD ]
Line_12 $$ String sampleText = sampleTextPane.getText()-->Line_41 $$ unicodeFont.drawString(10, 12, sampleText, Color.WHITE, 0, sampleText.length())[ FD ]
Line_5 $$ if (sampleTextRadio.isSelected()) -->Line_7 $$ GL11.glClear(GL11.GL_COLOR_BUFFER_BIT)[ CD ]
Line_75 $$ BMFontUtil bmFont = new BMFontUtil(unicodeFont)-->Line_76 $$ bmFont.save(saveBmFontFile)[ FD ]
Line_45 $$ if (index >= 0 && index < pages.size()) -->Line_67 $$ glEnd()[ CD ]
Line_45 $$ if (index >= 0 && index < pages.size()) -->Line_63 $$ glTexCoord2f(1, 1)[ CD ]
Line_38 $$ int offset = unicodeFont.getYOffset(sampleText)-->Line_39 $$ if (offset > 0)[ FD ]
Line_2 $$ public void render() -->Line_21 $$ glLoadIdentity()[ CD ]
Line_45 $$ if (index >= 0 && index < pages.size()) -->Line_64 $$ glVertex3f(texture.getWidth(), texture.getHeight(), 0)[ CD ]
Line_77 $$ if (batchMode) -->Line_78 $$ exit(0)[ CD ]
