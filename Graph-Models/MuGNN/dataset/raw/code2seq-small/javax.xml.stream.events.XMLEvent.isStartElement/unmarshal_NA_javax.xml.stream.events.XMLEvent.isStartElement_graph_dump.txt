Line_5 $$ event = staxEventReader.peek()-->Line_16 $$ if (!isNamespaced(event.asStartElement())) [ FD ]
Line_5 $$ event = staxEventReader.peek()-->Line_8 $$ event = staxEventReader.peek()[ FD ]
Line_2 $$ private JaxbCfgHibernateConfiguration unmarshal(XMLEventReader staxEventReader, final Origin origin) -->Line_8 $$ event = staxEventReader.peek()[ FD ]
Line_3 $$ XMLEvent event-->Line_16 $$ if (!isNamespaced(event.asStartElement())) [ FD ]
Line_3 $$ XMLEvent event-->Line_6 $$ while (event != null && !event.isStartElement()) [ FD ]
Line_20 $$ final ContextProvidingValidationEventHandler handler = new ContextProvidingValidationEventHandler()-->Line_28 $$ throw new ConfigurationException("Unable to perform unmarshalling at line number " + handler.getLineNumber() + " and column " + handler.getColumnNumber() + " in " + origin.getType().name() + " " + origin.getName() + ". Message: " + handler.getMessage(), e)[ FD ]
Line_2 $$ private JaxbCfgHibernateConfiguration unmarshal(XMLEventReader staxEventReader, final Origin origin) -->Line_26 $$ return (JaxbCfgHibernateConfiguration) unmarshaller.unmarshal(staxEventReader)[ FD ]
Line_2 $$ private JaxbCfgHibernateConfiguration unmarshal(XMLEventReader staxEventReader, final Origin origin) -->Line_13 $$ if (event == null) [ CD ]
Line_8 $$ event = staxEventReader.peek()-->Line_16 $$ if (!isNamespaced(event.asStartElement())) [ FD ]
Line_16 $$ if (!isNamespaced(event.asStartElement())) -->Line_17 $$ log.debug("cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information")[ CD ]
Line_22 $$ JAXBContext jaxbContext = JAXBContext.newInstance(JaxbCfgHibernateConfiguration.class)-->Line_23 $$ Unmarshaller unmarshaller = jaxbContext.createUnmarshaller()[ FD ]
Line_20 $$ final ContextProvidingValidationEventHandler handler = new ContextProvidingValidationEventHandler()-->Line_25 $$ unmarshaller.setEventHandler(handler)[ FD ]
Line_2 $$ private JaxbCfgHibernateConfiguration unmarshal(XMLEventReader staxEventReader, final Origin origin) -->Line_16 $$ if (!isNamespaced(event.asStartElement())) [ CD ]
Line_8 $$ event = staxEventReader.peek()-->Line_13 $$ if (event == null) [ FD ]
Line_2 $$ private JaxbCfgHibernateConfiguration unmarshal(XMLEventReader staxEventReader, final Origin origin) -->Line_3 $$ XMLEvent event[ CD ]
Line_6 $$ while (event != null && !event.isStartElement()) -->Line_8 $$ event = staxEventReader.peek()[ CD ]
Line_2 $$ private JaxbCfgHibernateConfiguration unmarshal(XMLEventReader staxEventReader, final Origin origin) -->Line_7 $$ staxEventReader.nextEvent()[ FD ]
Line_3 $$ XMLEvent event-->Line_8 $$ event = staxEventReader.peek()[ FD ]
Line_2 $$ private JaxbCfgHibernateConfiguration unmarshal(XMLEventReader staxEventReader, final Origin origin) -->Line_18 $$ staxEventReader = new NamespaceAddingEventReader(staxEventReader, HIBERNATE_CONFIGURATION_URI)[ FD ]
Line_5 $$ event = staxEventReader.peek()-->Line_6 $$ while (event != null && !event.isStartElement()) [ FD ]
Line_2 $$ private JaxbCfgHibernateConfiguration unmarshal(XMLEventReader staxEventReader, final Origin origin) -->Line_20 $$ final ContextProvidingValidationEventHandler handler = new ContextProvidingValidationEventHandler()[ CD ]
Line_23 $$ Unmarshaller unmarshaller = jaxbContext.createUnmarshaller()-->Line_24 $$ unmarshaller.setSchema(schema())[ FD ]
Line_8 $$ event = staxEventReader.peek()-->Line_6 $$ while (event != null && !event.isStartElement()) [ FD ]
Line_23 $$ Unmarshaller unmarshaller = jaxbContext.createUnmarshaller()-->Line_25 $$ unmarshaller.setEventHandler(handler)[ FD ]
Line_3 $$ XMLEvent event-->Line_5 $$ event = staxEventReader.peek()[ FD ]
Line_2 $$ private JaxbCfgHibernateConfiguration unmarshal(XMLEventReader staxEventReader, final Origin origin) -->Line_28 $$ throw new ConfigurationException("Unable to perform unmarshalling at line number " + handler.getLineNumber() + " and column " + handler.getColumnNumber() + " in " + origin.getType().name() + " " + origin.getName() + ". Message: " + handler.getMessage(), e)[ FD ]
Line_2 $$ private JaxbCfgHibernateConfiguration unmarshal(XMLEventReader staxEventReader, final Origin origin) -->Line_5 $$ event = staxEventReader.peek()[ FD ]
Line_6 $$ while (event != null && !event.isStartElement()) -->Line_7 $$ staxEventReader.nextEvent()[ CD ]
Line_23 $$ Unmarshaller unmarshaller = jaxbContext.createUnmarshaller()-->Line_26 $$ return (JaxbCfgHibernateConfiguration) unmarshaller.unmarshal(staxEventReader)[ FD ]
Line_18 $$ staxEventReader = new NamespaceAddingEventReader(staxEventReader, HIBERNATE_CONFIGURATION_URI)-->Line_26 $$ return (JaxbCfgHibernateConfiguration) unmarshaller.unmarshal(staxEventReader)[ FD ]
Line_5 $$ event = staxEventReader.peek()-->Line_13 $$ if (event == null) [ FD ]
Line_16 $$ if (!isNamespaced(event.asStartElement())) -->Line_18 $$ staxEventReader = new NamespaceAddingEventReader(staxEventReader, HIBERNATE_CONFIGURATION_URI)[ CD ]
Line_3 $$ XMLEvent event-->Line_13 $$ if (event == null) [ FD ]
