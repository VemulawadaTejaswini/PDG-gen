Line_2 $$ public static Map<String, Preference> createPreferencesMap(String xml) -->Line_3 $$ XMLEventReader xmlEventReader = null[ CD ]
Line_7 $$ xmlEventReader = xmlInputFactory.createXMLEventReader(new UnsyncStringReader(xml))-->Line_9 $$ XMLEvent xmlEvent = xmlEventReader.nextEvent()[ FD ]
Line_9 $$ XMLEvent xmlEvent = xmlEventReader.nextEvent()-->Line_11 $$ StartElement startElement = xmlEvent.asStartElement()[ FD ]
Line_3 $$ XMLEventReader xmlEventReader = null-->Line_14 $$ Preference preference = readPreference(xmlEventReader)[ FD ]
Line_12 $$ String elementName = startElement.getName().getLocalPart()-->Line_13 $$ if (elementName.equals("preference")) [ FD ]
Line_4 $$ Map<String, Preference> preferencesMap = new HashMap()-->Line_15 $$ preferencesMap.put(preference.getName(), preference)[ FD ]
Line_11 $$ StartElement startElement = xmlEvent.asStartElement()-->Line_12 $$ String elementName = startElement.getName().getLocalPart()[ FD ]
Line_2 $$ public static Map<String, Preference> createPreferencesMap(String xml) -->Line_32 $$ return preferencesMap[ CD ]
Line_26 $$ if (_log.isDebugEnabled()) -->Line_27 $$ _log.debug(xse, xse)[ CD ]
Line_3 $$ XMLEventReader xmlEventReader = null-->Line_8 $$ while (xmlEventReader.hasNext()) [ FD ]
Line_2 $$ public static Map<String, Preference> createPreferencesMap(String xml) -->Line_4 $$ Map<String, Preference> preferencesMap = new HashMap()[ CD ]
Line_9 $$ XMLEvent xmlEvent = xmlEventReader.nextEvent()-->Line_10 $$ if (xmlEvent.isStartElement()) [ FD ]
Line_13 $$ if (elementName.equals("preference")) -->Line_15 $$ preferencesMap.put(preference.getName(), preference)[ CD ]
Line_8 $$ while (xmlEventReader.hasNext()) -->Line_10 $$ if (xmlEvent.isStartElement()) [ CD ]
Line_3 $$ XMLEventReader xmlEventReader = null-->Line_7 $$ xmlEventReader = xmlInputFactory.createXMLEventReader(new UnsyncStringReader(xml))[ FD ]
Line_6 $$ XMLInputFactory xmlInputFactory = StAXReaderUtil.getXMLInputFactory()-->Line_7 $$ xmlEventReader = xmlInputFactory.createXMLEventReader(new UnsyncStringReader(xml))[ FD ]
Line_10 $$ if (xmlEvent.isStartElement()) -->Line_12 $$ String elementName = startElement.getName().getLocalPart()[ CD ]
Line_10 $$ if (xmlEvent.isStartElement()) -->Line_13 $$ if (elementName.equals("preference")) [ CD ]
Line_3 $$ XMLEventReader xmlEventReader = null-->Line_24 $$ xmlEventReader.close()[ FD ]
Line_7 $$ xmlEventReader = xmlInputFactory.createXMLEventReader(new UnsyncStringReader(xml))-->Line_14 $$ Preference preference = readPreference(xmlEventReader)[ FD ]
Line_3 $$ XMLEventReader xmlEventReader = null-->Line_9 $$ XMLEvent xmlEvent = xmlEventReader.nextEvent()[ FD ]
Line_7 $$ xmlEventReader = xmlInputFactory.createXMLEventReader(new UnsyncStringReader(xml))-->Line_8 $$ while (xmlEventReader.hasNext()) [ FD ]
Line_13 $$ if (elementName.equals("preference")) -->Line_14 $$ Preference preference = readPreference(xmlEventReader)[ CD ]
Line_14 $$ Preference preference = readPreference(xmlEventReader)-->Line_15 $$ preferencesMap.put(preference.getName(), preference)[ FD ]
Line_8 $$ while (xmlEventReader.hasNext()) -->Line_9 $$ XMLEvent xmlEvent = xmlEventReader.nextEvent()[ CD ]
Line_7 $$ xmlEventReader = xmlInputFactory.createXMLEventReader(new UnsyncStringReader(xml))-->Line_22 $$ if (xmlEventReader != null) [ FD ]
Line_3 $$ XMLEventReader xmlEventReader = null-->Line_22 $$ if (xmlEventReader != null) [ FD ]
Line_7 $$ xmlEventReader = xmlInputFactory.createXMLEventReader(new UnsyncStringReader(xml))-->Line_24 $$ xmlEventReader.close()[ FD ]
Line_10 $$ if (xmlEvent.isStartElement()) -->Line_11 $$ StartElement startElement = xmlEvent.asStartElement()[ CD ]
