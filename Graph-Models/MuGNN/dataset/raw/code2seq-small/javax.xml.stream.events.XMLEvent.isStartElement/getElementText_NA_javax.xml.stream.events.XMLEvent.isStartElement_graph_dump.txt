Line_2 $$ public final String getElementText() throws XMLStreamException -->Line_11 $$ while (!event.isEndDocument()) [ CD ]
Line_3 $$ XMLEvent event = this.previousEvent-->Line_12 $$ switch(event.getEventType()) [ FD ]
Line_2 $$ public final String getElementText() throws XMLStreamException -->Line_10 $$ final StringBuilder text = new StringBuilder()[ CD ]
Line_10 $$ final StringBuilder text = new StringBuilder()-->Line_40 $$ return text.toString()[ FD ]
Line_10 $$ final StringBuilder text = new StringBuilder()-->Line_25 $$ text.append(declaration.getReplacementText())[ FD ]
Line_2 $$ public final String getElementText() throws XMLStreamException -->Line_7 $$ if (!event.isStartElement()) [ CD ]
Line_3 $$ XMLEvent event = this.previousEvent-->Line_11 $$ while (!event.isEndDocument()) [ FD ]
Line_3 $$ XMLEvent event = this.previousEvent-->Line_35 $$ throw new XMLStreamException("Unexpected event type '" + XMLStreamConstantsUtils.getEventName(event.getEventType()) + "' encountered. Found event: " + event, event.getLocation())[ FD ]
Line_2 $$ public final String getElementText() throws XMLStreamException -->Line_3 $$ XMLEvent event = this.previousEvent[ CD ]
Line_10 $$ final StringBuilder text = new StringBuilder()-->Line_18 $$ text.append(characters.getData())[ FD ]
Line_11 $$ while (!event.isEndDocument()) -->Line_38 $$ event = this.nextEvent()[ CD ]
Line_3 $$ XMLEvent event = this.previousEvent-->Line_4 $$ if (event == null) [ FD ]
Line_38 $$ event = this.nextEvent()-->Line_11 $$ while (!event.isEndDocument()) [ FD ]
Line_3 $$ XMLEvent event = this.previousEvent-->Line_38 $$ event = this.nextEvent()[ FD ]
Line_38 $$ event = this.nextEvent()-->Line_17 $$ final Characters characters = event.asCharacters()[ FD ]
Line_38 $$ event = this.nextEvent()-->Line_12 $$ switch(event.getEventType()) [ FD ]
Line_17 $$ final Characters characters = event.asCharacters()-->Line_18 $$ text.append(characters.getData())[ FD ]
Line_24 $$ final EntityDeclaration declaration = entityReference.getDeclaration()-->Line_25 $$ text.append(declaration.getReplacementText())[ FD ]
Line_23 $$ final EntityReference entityReference = (EntityReference) event-->Line_24 $$ final EntityDeclaration declaration = entityReference.getDeclaration()[ FD ]
Line_38 $$ event = this.nextEvent()-->Line_35 $$ throw new XMLStreamException("Unexpected event type '" + XMLStreamConstantsUtils.getEventName(event.getEventType()) + "' encountered. Found event: " + event, event.getLocation())[ FD ]
Line_2 $$ public final String getElementText() throws XMLStreamException -->Line_40 $$ return text.toString()[ CD ]
Line_3 $$ XMLEvent event = this.previousEvent-->Line_7 $$ if (!event.isStartElement()) [ FD ]
Line_3 $$ XMLEvent event = this.previousEvent-->Line_17 $$ final Characters characters = event.asCharacters()[ FD ]
Line_3 $$ XMLEvent event = this.previousEvent-->Line_8 $$ throw new XMLStreamException("Must be on START_ELEMENT to read next text", event.getLocation())[ FD ]
Line_2 $$ public final String getElementText() throws XMLStreamException -->Line_4 $$ if (event == null) [ CD ]
