Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_11 $$ em.getTransaction().begin()[ FD ]
Line_18 $$ Thread t = new Thread(new Runnable() -->Line_31 $$ t.setDaemon(true)[ FD ]
Line_12 $$ lock = em.getReference(Lock.class, lock.getId())-->Line_13 $$ final Integer id = lock.getId()[ FD ]
Line_40 $$ while (expectedToFail != null && !(expectedToFail instanceof javax.persistence.OptimisticLockException)) -->Line_41 $$ expectedToFail = expectedToFail.getCause()[ CD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_46 $$ em.close()[ FD ]
Line_4 $$ final EntityManager em2 = createIsolatedEntityManager()-->Line_26 $$ em2.close()[ FD ]
Line_6 $$ Lock lock = new Lock()-->Line_7 $$ lock.setName("name")[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_12 $$ lock = em.getReference(Lock.class, lock.getId())[ FD ]
Line_6 $$ Lock lock = new Lock()-->Line_9 $$ em.persist(lock)[ FD ]
Line_6 $$ Lock lock = new Lock()-->Line_13 $$ final Integer id = lock.getId()[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_15 $$ em.lock(lock, LockModeType.OPTIMISTIC_FORCE_INCREMENT)[ FD ]
Line_4 $$ final EntityManager em2 = createIsolatedEntityManager()-->Line_21 $$ em2.getTransaction().begin()[ FD ]
Line_22 $$ Lock lock2 = em2.getReference(Lock.class, id)-->Line_23 $$ lock2.setName("renamed")[ FD ]
Line_2 $$ public void testUpgradeReadLockToOptimisticForceIncrement() throws Exception -->Line_3 $$ EntityManager em = getOrCreateEntityManager()[ CD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_10 $$ em.getTransaction().commit()[ FD ]
Line_18 $$ Thread t = new Thread(new Runnable() -->Line_32 $$ t.setName("testUpgradeReadLockToOptimisticForceIncrement tx2")[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_14 $$ em.lock(lock, LockModeType.READ)[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_38 $$ em.getTransaction().commit()[ FD ]
Line_13 $$ final Integer id = lock.getId()-->Line_22 $$ Lock lock2 = em2.getReference(Lock.class, id)[ FD ]
Line_4 $$ final EntityManager em2 = createIsolatedEntityManager()-->Line_25 $$ em2.getTransaction().commit()[ FD ]
Line_17 $$ final CountDownLatch latch = new CountDownLatch(1)-->Line_35 $$ boolean latchSet = latch.await(10, TimeUnit.SECONDS)[ FD ]
Line_18 $$ Thread t = new Thread(new Runnable() -->Line_33 $$ t.start()[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_9 $$ em.persist(lock)[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_8 $$ em.getTransaction().begin()[ FD ]
Line_6 $$ Lock lock = new Lock()-->Line_15 $$ em.lock(lock, LockModeType.OPTIMISTIC_FORCE_INCREMENT)[ FD ]
Line_12 $$ lock = em.getReference(Lock.class, lock.getId())-->Line_15 $$ em.lock(lock, LockModeType.OPTIMISTIC_FORCE_INCREMENT)[ FD ]
Line_6 $$ Lock lock = new Lock()-->Line_16 $$ lock.setName("surname")[ FD ]
Line_12 $$ lock = em.getReference(Lock.class, lock.getId())-->Line_14 $$ em.lock(lock, LockModeType.READ)[ FD ]
Line_12 $$ lock = em.getReference(Lock.class, lock.getId())-->Line_16 $$ lock.setName("surname")[ FD ]
Line_4 $$ final EntityManager em2 = createIsolatedEntityManager()-->Line_22 $$ Lock lock2 = em2.getReference(Lock.class, id)[ FD ]
Line_6 $$ Lock lock = new Lock()-->Line_12 $$ lock = em.getReference(Lock.class, lock.getId())[ FD ]
Line_2 $$ public void testUpgradeReadLockToOptimisticForceIncrement() throws Exception -->Line_4 $$ final EntityManager em2 = createIsolatedEntityManager()[ CD ]
Line_6 $$ Lock lock = new Lock()-->Line_14 $$ em.lock(lock, LockModeType.READ)[ FD ]
Line_17 $$ final CountDownLatch latch = new CountDownLatch(1)-->Line_27 $$ latch.countDown()[ FD ]
