Line_21 $$ for (int i = 0; i < dataBuffer.getSize(); i++) -->Line_22 $$ byte elem = (byte) dataBuffer.getElem(i)[ FD ]
Line_2 $$ protected RenderedImage convert(RenderedImage renderedImage) throws Exception -->Line_71 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)[ FD ]
Line_33 $$ DataBuffer newDataBuffer = new DataBufferByte(data, data.length)-->Line_54 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)[ FD ]
Line_62 $$ if (mod == 0) -->Line_63 $$ tempBytesList.add((byte) 255)[ CD ]
Line_19 $$ if (sampleModel.getNumBands() == 1) -->Line_32 $$ byte[] data = ArrayUtil.toArray(bytesList.toArray(new Byte[bytesList.size()]))[ CD ]
Line_35 $$ if (sampleModel.getNumBands() == 2) -->Line_55 $$ if (colorModel.getTransparency() != Transparency.TRANSLUCENT) [ CD ]
Line_2 $$ protected RenderedImage convert(RenderedImage renderedImage) throws Exception -->Line_9 $$ if (colorModel instanceof IndexColorModel) [ CD ]
Line_41 $$ if (mod == 0) -->Line_42 $$ tempBytesList.add((byte) dataBuffer.getElem(elemPos - 1))[ CD ]
Line_58 $$ for (int i = 0; i < dataBuffer.getSize(); i++) -->Line_62 $$ if (mod == 0) [ CD ]
Line_39 $$ int mod = (i + 1) % 2-->Line_41 $$ if (mod == 0) [ FD ]
Line_3 $$ int height = renderedImage.getHeight()-->Line_71 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)[ FD ]
Line_2 $$ protected RenderedImage convert(RenderedImage renderedImage) throws Exception -->Line_3 $$ int height = renderedImage.getHeight()[ CD ]
Line_2 $$ protected RenderedImage convert(RenderedImage renderedImage) throws Exception -->Line_34 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)[ FD ]
Line_2 $$ protected RenderedImage convert(RenderedImage renderedImage) throws Exception -->Line_54 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)[ FD ]
Line_20 $$ List<Byte> bytesList = new ArrayList(height * width * _NUM_OF_BANDS)-->Line_69 $$ byte[] data = ArrayUtil.toArray(bytesList.toArray(new Byte[bytesList.size()]))[ FD ]
Line_18 $$ renderedImage = LookupDescriptor.create(renderedImage, lookupTableJAI, null)-->Line_34 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)[ FD ]
Line_9 $$ if (colorModel instanceof IndexColorModel) -->Line_18 $$ renderedImage = LookupDescriptor.create(renderedImage, lookupTableJAI, null)[ CD ]
Line_22 $$ byte elem = (byte) dataBuffer.getElem(i)-->Line_30 $$ bytesList.add(elem)[ FD ]
Line_35 $$ if (sampleModel.getNumBands() == 2) -->Line_38 $$ for (int i = 0; i < dataBuffer.getSize(); i++) [ CD ]
Line_8 $$ DataBuffer dataBuffer = raster.getDataBuffer()-->Line_58 $$ for (int i = 0; i < dataBuffer.getSize(); i++) [ FD ]
Line_19 $$ if (sampleModel.getNumBands() == 1) -->Line_20 $$ List<Byte> bytesList = new ArrayList(height * width * _NUM_OF_BANDS)[ CD ]
Line_38 $$ for (int i = 0; i < dataBuffer.getSize(); i++) -->Line_58 $$ for (int i = 0; i < dataBuffer.getSize(); i++) [ FD ]
Line_10 $$ IndexColorModel indexColorModel = (IndexColorModel) colorModel-->Line_15 $$ indexColorModel.getBlues(data[2])[ FD ]
Line_41 $$ if (mod == 0) -->Line_43 $$ tempBytesList.add((byte) dataBuffer.getElem(elemPos - 1))[ CD ]
Line_8 $$ DataBuffer dataBuffer = raster.getDataBuffer()-->Line_38 $$ for (int i = 0; i < dataBuffer.getSize(); i++) [ FD ]
Line_38 $$ for (int i = 0; i < dataBuffer.getSize(); i++) -->Line_40 $$ int elemPos = i[ CD ]
Line_21 $$ for (int i = 0; i < dataBuffer.getSize(); i++) -->Line_28 $$ bytesList.add(elem)[ CD ]
Line_8 $$ DataBuffer dataBuffer = raster.getDataBuffer()-->Line_45 $$ tempBytesList.add((byte) dataBuffer.getElem(elemPos))[ FD ]
Line_37 $$ List<Byte> tempBytesList = new ArrayList(_NUM_OF_BANDS)-->Line_48 $$ bytesList.addAll(tempBytesList)[ FD ]
Line_9 $$ if (colorModel instanceof IndexColorModel) -->Line_11 $$ int mapSize = indexColorModel.getMapSize()[ CD ]
Line_2 $$ protected RenderedImage convert(RenderedImage renderedImage) throws Exception -->Line_7 $$ Raster raster = renderedImage.getData()[ CD ]
Line_39 $$ int mod = (i + 1) % 2-->Line_46 $$ if (mod == 0) [ FD ]
Line_2 $$ protected RenderedImage convert(RenderedImage renderedImage) throws Exception -->Line_18 $$ renderedImage = LookupDescriptor.create(renderedImage, lookupTableJAI, null)[ FD ]
Line_39 $$ int mod = (i + 1) % 2-->Line_62 $$ if (mod == 0) [ FD ]
Line_8 $$ DataBuffer dataBuffer = raster.getDataBuffer()-->Line_43 $$ tempBytesList.add((byte) dataBuffer.getElem(elemPos - 1))[ FD ]
Line_9 $$ if (colorModel instanceof IndexColorModel) -->Line_14 $$ indexColorModel.getGreens(data[1])[ CD ]
Line_9 $$ if (colorModel instanceof IndexColorModel) -->Line_13 $$ indexColorModel.getReds(data[0])[ CD ]
Line_3 $$ int height = renderedImage.getHeight()-->Line_34 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)[ FD ]
Line_21 $$ for (int i = 0; i < dataBuffer.getSize(); i++) -->Line_38 $$ for (int i = 0; i < dataBuffer.getSize(); i++) [ FD ]
Line_2 $$ protected RenderedImage convert(RenderedImage renderedImage) throws Exception -->Line_8 $$ DataBuffer dataBuffer = raster.getDataBuffer()[ CD ]
Line_37 $$ List<Byte> tempBytesList = new ArrayList(_NUM_OF_BANDS)-->Line_64 $$ Collections.reverse(tempBytesList)[ FD ]
Line_40 $$ int elemPos = i-->Line_61 $$ tempBytesList.add((byte) dataBuffer.getElem(elemPos))[ FD ]
Line_2 $$ protected RenderedImage convert(RenderedImage renderedImage) throws Exception -->Line_6 $$ ColorModel colorModel = renderedImage.getColorModel()[ FD ]
Line_34 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)-->Line_71 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)[ FD ]
Line_9 $$ if (colorModel instanceof IndexColorModel) -->Line_19 $$ if (sampleModel.getNumBands() == 1) [ CD ]
Line_19 $$ if (sampleModel.getNumBands() == 1) -->Line_21 $$ for (int i = 0; i < dataBuffer.getSize(); i++) [ CD ]
Line_2 $$ protected RenderedImage convert(RenderedImage renderedImage) throws Exception -->Line_5 $$ SampleModel sampleModel = renderedImage.getSampleModel()[ CD ]
Line_17 $$ LookupTableJAI lookupTableJAI = new LookupTableJAI(data)-->Line_18 $$ renderedImage = LookupDescriptor.create(renderedImage, lookupTableJAI, null)[ FD ]
Line_37 $$ List<Byte> tempBytesList = new ArrayList(_NUM_OF_BANDS)-->Line_42 $$ tempBytesList.add((byte) dataBuffer.getElem(elemPos - 1))[ FD ]
Line_37 $$ List<Byte> tempBytesList = new ArrayList(_NUM_OF_BANDS)-->Line_63 $$ tempBytesList.add((byte) 255)[ FD ]
Line_3 $$ int height = renderedImage.getHeight()-->Line_54 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)[ FD ]
Line_20 $$ List<Byte> bytesList = new ArrayList(height * width * _NUM_OF_BANDS)-->Line_32 $$ byte[] data = ArrayUtil.toArray(bytesList.toArray(new Byte[bytesList.size()]))[ FD ]
Line_34 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)-->Line_54 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)[ FD ]
Line_8 $$ DataBuffer dataBuffer = raster.getDataBuffer()-->Line_61 $$ tempBytesList.add((byte) dataBuffer.getElem(elemPos))[ FD ]
Line_10 $$ IndexColorModel indexColorModel = (IndexColorModel) colorModel-->Line_14 $$ indexColorModel.getGreens(data[1])[ FD ]
Line_2 $$ protected RenderedImage convert(RenderedImage renderedImage) throws Exception -->Line_7 $$ Raster raster = renderedImage.getData()[ FD ]
Line_20 $$ List<Byte> bytesList = new ArrayList(height * width * _NUM_OF_BANDS)-->Line_65 $$ bytesList.addAll(tempBytesList)[ FD ]
Line_37 $$ List<Byte> tempBytesList = new ArrayList(_NUM_OF_BANDS)-->Line_66 $$ tempBytesList.clear()[ FD ]
Line_21 $$ for (int i = 0; i < dataBuffer.getSize(); i++) -->Line_58 $$ for (int i = 0; i < dataBuffer.getSize(); i++) [ FD ]
Line_58 $$ for (int i = 0; i < dataBuffer.getSize(); i++) -->Line_59 $$ int mod = (i + 1) % 3[ CD ]
Line_10 $$ IndexColorModel indexColorModel = (IndexColorModel) colorModel-->Line_16 $$ indexColorModel.getAlphas(data[3])[ FD ]
Line_8 $$ DataBuffer dataBuffer = raster.getDataBuffer()-->Line_21 $$ for (int i = 0; i < dataBuffer.getSize(); i++) [ FD ]
Line_58 $$ for (int i = 0; i < dataBuffer.getSize(); i++) -->Line_61 $$ tempBytesList.add((byte) dataBuffer.getElem(elemPos))[ CD ]
Line_37 $$ List<Byte> tempBytesList = new ArrayList(_NUM_OF_BANDS)-->Line_45 $$ tempBytesList.add((byte) dataBuffer.getElem(elemPos))[ FD ]
Line_37 $$ List<Byte> tempBytesList = new ArrayList(_NUM_OF_BANDS)-->Line_43 $$ tempBytesList.add((byte) dataBuffer.getElem(elemPos - 1))[ FD ]
Line_58 $$ for (int i = 0; i < dataBuffer.getSize(); i++) -->Line_60 $$ int elemPos = i[ CD ]
Line_33 $$ DataBuffer newDataBuffer = new DataBufferByte(data, data.length)-->Line_71 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)[ FD ]
Line_6 $$ ColorModel colorModel = renderedImage.getColorModel()-->Line_9 $$ if (colorModel instanceof IndexColorModel) [ FD ]
Line_18 $$ renderedImage = LookupDescriptor.create(renderedImage, lookupTableJAI, null)-->Line_54 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)[ FD ]
Line_2 $$ protected RenderedImage convert(RenderedImage renderedImage) throws Exception -->Line_6 $$ ColorModel colorModel = renderedImage.getColorModel()[ CD ]
Line_46 $$ if (mod == 0) -->Line_47 $$ Collections.reverse(tempBytesList)[ CD ]
Line_2 $$ protected RenderedImage convert(RenderedImage renderedImage) throws Exception -->Line_4 $$ int width = renderedImage.getWidth()[ FD ]
Line_21 $$ for (int i = 0; i < dataBuffer.getSize(); i++) -->Line_22 $$ byte elem = (byte) dataBuffer.getElem(i)[ CD ]
Line_2 $$ protected RenderedImage convert(RenderedImage renderedImage) throws Exception -->Line_5 $$ SampleModel sampleModel = renderedImage.getSampleModel()[ FD ]
Line_22 $$ byte elem = (byte) dataBuffer.getElem(i)-->Line_23 $$ if (elem == -1) [ FD ]
Line_8 $$ DataBuffer dataBuffer = raster.getDataBuffer()-->Line_22 $$ byte elem = (byte) dataBuffer.getElem(i)[ FD ]
Line_19 $$ if (sampleModel.getNumBands() == 1) -->Line_35 $$ if (sampleModel.getNumBands() == 2) [ CD ]
Line_46 $$ if (mod == 0) -->Line_48 $$ bytesList.addAll(tempBytesList)[ CD ]
Line_21 $$ for (int i = 0; i < dataBuffer.getSize(); i++) -->Line_23 $$ if (elem == -1) [ CD ]
Line_46 $$ if (mod == 0) -->Line_49 $$ tempBytesList.clear()[ CD ]
Line_4 $$ int width = renderedImage.getWidth()-->Line_54 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)[ FD ]
Line_21 $$ for (int i = 0; i < dataBuffer.getSize(); i++) -->Line_30 $$ bytesList.add(elem)[ CD ]
Line_54 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)-->Line_71 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)[ FD ]
Line_23 $$ if (elem == -1) -->Line_26 $$ bytesList.add((byte) 255)[ CD ]
Line_35 $$ if (sampleModel.getNumBands() == 2) -->Line_52 $$ byte[] data = ArrayUtil.toArray(bytesList.toArray(new Byte[bytesList.size()]))[ CD ]
Line_35 $$ if (sampleModel.getNumBands() == 2) -->Line_54 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)[ CD ]
Line_55 $$ if (colorModel.getTransparency() != Transparency.TRANSLUCENT) -->Line_69 $$ byte[] data = ArrayUtil.toArray(bytesList.toArray(new Byte[bytesList.size()]))[ CD ]
Line_37 $$ List<Byte> tempBytesList = new ArrayList(_NUM_OF_BANDS)-->Line_61 $$ tempBytesList.add((byte) dataBuffer.getElem(elemPos))[ FD ]
Line_21 $$ for (int i = 0; i < dataBuffer.getSize(); i++) -->Line_29 $$ bytesList.add(elem)[ CD ]
Line_5 $$ SampleModel sampleModel = renderedImage.getSampleModel()-->Line_35 $$ if (sampleModel.getNumBands() == 2) [ FD ]
Line_20 $$ List<Byte> bytesList = new ArrayList(height * width * _NUM_OF_BANDS)-->Line_48 $$ bytesList.addAll(tempBytesList)[ FD ]
Line_38 $$ for (int i = 0; i < dataBuffer.getSize(); i++) -->Line_46 $$ if (mod == 0) [ CD ]
Line_10 $$ IndexColorModel indexColorModel = (IndexColorModel) colorModel-->Line_11 $$ int mapSize = indexColorModel.getMapSize()[ FD ]
Line_20 $$ List<Byte> bytesList = new ArrayList(height * width * _NUM_OF_BANDS)-->Line_29 $$ bytesList.add(elem)[ FD ]
Line_55 $$ if (colorModel.getTransparency() != Transparency.TRANSLUCENT) -->Line_58 $$ for (int i = 0; i < dataBuffer.getSize(); i++) [ CD ]
Line_62 $$ if (mod == 0) -->Line_65 $$ bytesList.addAll(tempBytesList)[ CD ]
Line_9 $$ if (colorModel instanceof IndexColorModel) -->Line_10 $$ IndexColorModel indexColorModel = (IndexColorModel) colorModel[ CD ]
Line_9 $$ if (colorModel instanceof IndexColorModel) -->Line_16 $$ indexColorModel.getAlphas(data[3])[ CD ]
Line_38 $$ for (int i = 0; i < dataBuffer.getSize(); i++) -->Line_41 $$ if (mod == 0) [ CD ]
Line_4 $$ int width = renderedImage.getWidth()-->Line_34 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)[ FD ]
Line_20 $$ List<Byte> bytesList = new ArrayList(height * width * _NUM_OF_BANDS)-->Line_24 $$ bytesList.add((byte) 0)[ FD ]
Line_33 $$ DataBuffer newDataBuffer = new DataBufferByte(data, data.length)-->Line_34 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)[ FD ]
Line_9 $$ if (colorModel instanceof IndexColorModel) -->Line_17 $$ LookupTableJAI lookupTableJAI = new LookupTableJAI(data)[ CD ]
Line_22 $$ byte elem = (byte) dataBuffer.getElem(i)-->Line_29 $$ bytesList.add(elem)[ FD ]
Line_37 $$ List<Byte> tempBytesList = new ArrayList(_NUM_OF_BANDS)-->Line_47 $$ Collections.reverse(tempBytesList)[ FD ]
Line_59 $$ int mod = (i + 1) % 3-->Line_62 $$ if (mod == 0) [ FD ]
Line_35 $$ if (sampleModel.getNumBands() == 2) -->Line_37 $$ List<Byte> tempBytesList = new ArrayList(_NUM_OF_BANDS)[ CD ]
Line_2 $$ protected RenderedImage convert(RenderedImage renderedImage) throws Exception -->Line_4 $$ int width = renderedImage.getWidth()[ CD ]
Line_37 $$ List<Byte> tempBytesList = new ArrayList(_NUM_OF_BANDS)-->Line_65 $$ bytesList.addAll(tempBytesList)[ FD ]
Line_20 $$ List<Byte> bytesList = new ArrayList(height * width * _NUM_OF_BANDS)-->Line_52 $$ byte[] data = ArrayUtil.toArray(bytesList.toArray(new Byte[bytesList.size()]))[ FD ]
Line_10 $$ IndexColorModel indexColorModel = (IndexColorModel) colorModel-->Line_13 $$ indexColorModel.getReds(data[0])[ FD ]
Line_19 $$ if (sampleModel.getNumBands() == 1) -->Line_34 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)[ CD ]
Line_19 $$ if (sampleModel.getNumBands() == 1) -->Line_33 $$ DataBuffer newDataBuffer = new DataBufferByte(data, data.length)[ CD ]
Line_9 $$ if (colorModel instanceof IndexColorModel) -->Line_12 $$ byte[][] data = new byte[4][mapSize][ CD ]
Line_37 $$ List<Byte> tempBytesList = new ArrayList(_NUM_OF_BANDS)-->Line_49 $$ tempBytesList.clear()[ FD ]
Line_38 $$ for (int i = 0; i < dataBuffer.getSize(); i++) -->Line_39 $$ int mod = (i + 1) % 2[ CD ]
Line_60 $$ int elemPos = i-->Line_61 $$ tempBytesList.add((byte) dataBuffer.getElem(elemPos))[ FD ]
Line_5 $$ SampleModel sampleModel = renderedImage.getSampleModel()-->Line_19 $$ if (sampleModel.getNumBands() == 1) [ FD ]
Line_2 $$ protected RenderedImage convert(RenderedImage renderedImage) throws Exception -->Line_73 $$ return renderedImage[ CD ]
Line_8 $$ DataBuffer dataBuffer = raster.getDataBuffer()-->Line_42 $$ tempBytesList.add((byte) dataBuffer.getElem(elemPos - 1))[ FD ]
Line_22 $$ byte elem = (byte) dataBuffer.getElem(i)-->Line_28 $$ bytesList.add(elem)[ FD ]
Line_4 $$ int width = renderedImage.getWidth()-->Line_71 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)[ FD ]
Line_9 $$ if (colorModel instanceof IndexColorModel) -->Line_15 $$ indexColorModel.getBlues(data[2])[ CD ]
Line_20 $$ List<Byte> bytesList = new ArrayList(height * width * _NUM_OF_BANDS)-->Line_30 $$ bytesList.add(elem)[ FD ]
Line_18 $$ renderedImage = LookupDescriptor.create(renderedImage, lookupTableJAI, null)-->Line_71 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)[ FD ]
Line_2 $$ protected RenderedImage convert(RenderedImage renderedImage) throws Exception -->Line_3 $$ int height = renderedImage.getHeight()[ FD ]
Line_20 $$ List<Byte> bytesList = new ArrayList(height * width * _NUM_OF_BANDS)-->Line_28 $$ bytesList.add(elem)[ FD ]
Line_6 $$ ColorModel colorModel = renderedImage.getColorModel()-->Line_55 $$ if (colorModel.getTransparency() != Transparency.TRANSLUCENT) [ FD ]
Line_55 $$ if (colorModel.getTransparency() != Transparency.TRANSLUCENT) -->Line_71 $$ renderedImage = createRenderedImage(renderedImage, height, width, newDataBuffer)[ CD ]
Line_20 $$ List<Byte> bytesList = new ArrayList(height * width * _NUM_OF_BANDS)-->Line_26 $$ bytesList.add((byte) 255)[ FD ]
Line_23 $$ if (elem == -1) -->Line_24 $$ bytesList.add((byte) 0)[ CD ]
Line_62 $$ if (mod == 0) -->Line_64 $$ Collections.reverse(tempBytesList)[ CD ]
Line_38 $$ for (int i = 0; i < dataBuffer.getSize(); i++) -->Line_45 $$ tempBytesList.add((byte) dataBuffer.getElem(elemPos))[ CD ]
Line_7 $$ Raster raster = renderedImage.getData()-->Line_8 $$ DataBuffer dataBuffer = raster.getDataBuffer()[ FD ]
Line_40 $$ int elemPos = i-->Line_45 $$ tempBytesList.add((byte) dataBuffer.getElem(elemPos))[ FD ]
Line_62 $$ if (mod == 0) -->Line_66 $$ tempBytesList.clear()[ CD ]
