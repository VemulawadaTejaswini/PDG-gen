Line_16 $$ bg = ColorUtil.toAlpha(bg.darker().darker(), 230)-->Line_24 $$ g.setColor(bg)[ FD ]
Line_16 $$ bg = ColorUtil.toAlpha(bg.darker().darker(), 230)-->Line_27 $$ g.setColor(bg)[ FD ]
Line_12 $$ final Rectangle label = SwingUtilities.convertRectangle(myProcessName.getParent(), bounds, this)-->Line_25 $$ g.drawLine(0, (int) label.getMaxY() + 1, getWidth() - 1, (int) label.getMaxY() + 1)[ FD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_8 $$ UISettings.setupAntialiasing(g)[ CD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_10 $$ Color bg = getBackground()[ CD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_3 $$ if (myCompact) [ CD ]
Line_15 $$ if (!UIUtil.isUnderDarcula()) -->Line_18 $$ g.fillRoundRect(0, 0, getWidth() - 1, getHeight() - 1, arc, arc)[ CD ]
Line_23 $$ bg = bg.brighter()-->Line_24 $$ g.setColor(bg)[ FD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_24 $$ g.setColor(bg)[ FD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_14 $$ g.fillRoundRect(0, 0, getWidth() - 1, getHeight() - 1, arc, arc)[ CD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_19 $$ g.setColor(UIUtil.getPanelBackground())[ FD ]
Line_3 $$ if (myCompact) -->Line_5 $$ return[ CD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_17 $$ g.setColor(bg)[ FD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_4 $$ super.paintComponent(g)[ FD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_25 $$ g.drawLine(0, (int) label.getMaxY() + 1, getWidth() - 1, (int) label.getMaxY() + 1)[ FD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_7 $$ final GraphicsConfig c = GraphicsUtil.setupAAPainting(g)[ CD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_14 $$ g.fillRoundRect(0, 0, getWidth() - 1, getHeight() - 1, arc, arc)[ FD ]
Line_16 $$ bg = ColorUtil.toAlpha(bg.darker().darker(), 230)-->Line_23 $$ bg = bg.brighter()[ FD ]
Line_9 $$ int arc = 8-->Line_28 $$ g.drawRoundRect(0, 0, getWidth() - 1, getHeight() - 1, arc, arc)[ FD ]
Line_15 $$ if (!UIUtil.isUnderDarcula()) -->Line_16 $$ bg = ColorUtil.toAlpha(bg.darker().darker(), 230)[ CD ]
Line_10 $$ Color bg = getBackground()-->Line_27 $$ g.setColor(bg)[ FD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_7 $$ final GraphicsConfig c = GraphicsUtil.setupAAPainting(g)[ FD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_9 $$ int arc = 8[ CD ]
Line_10 $$ Color bg = getBackground()-->Line_16 $$ bg = ColorUtil.toAlpha(bg.darker().darker(), 230)[ FD ]
Line_15 $$ if (!UIUtil.isUnderDarcula()) -->Line_19 $$ g.setColor(UIUtil.getPanelBackground())[ CD ]
Line_15 $$ if (!UIUtil.isUnderDarcula()) -->Line_20 $$ g.fillRoundRect(0, getHeight() / 2, getWidth() - 1, getHeight() / 2, arc, arc)[ CD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_13 $$ g.setColor(UIUtil.getPanelBackground())[ CD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_15 $$ if (!UIUtil.isUnderDarcula()) [ CD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_8 $$ UISettings.setupAntialiasing(g)[ FD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_21 $$ g.fillRect(0, (int) label.getMaxY() + 1, getWidth() - 1, getHeight() / 2)[ FD ]
Line_10 $$ Color bg = getBackground()-->Line_24 $$ g.setColor(bg)[ FD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_13 $$ g.setColor(UIUtil.getPanelBackground())[ FD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_18 $$ g.fillRoundRect(0, 0, getWidth() - 1, getHeight() - 1, arc, arc)[ FD ]
Line_15 $$ if (!UIUtil.isUnderDarcula()) -->Line_25 $$ g.drawLine(0, (int) label.getMaxY() + 1, getWidth() - 1, (int) label.getMaxY() + 1)[ CD ]
Line_16 $$ bg = ColorUtil.toAlpha(bg.darker().darker(), 230)-->Line_17 $$ g.setColor(bg)[ FD ]
Line_9 $$ int arc = 8-->Line_18 $$ g.fillRoundRect(0, 0, getWidth() - 1, getHeight() - 1, arc, arc)[ FD ]
Line_23 $$ bg = bg.brighter()-->Line_27 $$ g.setColor(bg)[ FD ]
Line_15 $$ if (!UIUtil.isUnderDarcula()) -->Line_17 $$ g.setColor(bg)[ CD ]
Line_15 $$ if (!UIUtil.isUnderDarcula()) -->Line_23 $$ bg = bg.brighter()[ CD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_28 $$ g.drawRoundRect(0, 0, getWidth() - 1, getHeight() - 1, arc, arc)[ CD ]
Line_15 $$ if (!UIUtil.isUnderDarcula()) -->Line_24 $$ g.setColor(bg)[ CD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_11 $$ final Rectangle bounds = myProcessName.getBounds()[ CD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_28 $$ g.drawRoundRect(0, 0, getWidth() - 1, getHeight() - 1, arc, arc)[ FD ]
Line_10 $$ Color bg = getBackground()-->Line_23 $$ bg = bg.brighter()[ FD ]
Line_3 $$ if (myCompact) -->Line_4 $$ super.paintComponent(g)[ CD ]
Line_10 $$ Color bg = getBackground()-->Line_17 $$ g.setColor(bg)[ FD ]
Line_9 $$ int arc = 8-->Line_14 $$ g.fillRoundRect(0, 0, getWidth() - 1, getHeight() - 1, arc, arc)[ FD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_20 $$ g.fillRoundRect(0, getHeight() / 2, getWidth() - 1, getHeight() / 2, arc, arc)[ FD ]
Line_9 $$ int arc = 8-->Line_20 $$ g.fillRoundRect(0, getHeight() / 2, getWidth() - 1, getHeight() / 2, arc, arc)[ FD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_29 $$ c.restore()[ CD ]
Line_15 $$ if (!UIUtil.isUnderDarcula()) -->Line_21 $$ g.fillRect(0, (int) label.getMaxY() + 1, getWidth() - 1, getHeight() / 2)[ CD ]
Line_7 $$ final GraphicsConfig c = GraphicsUtil.setupAAPainting(g)-->Line_29 $$ c.restore()[ FD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_12 $$ final Rectangle label = SwingUtilities.convertRectangle(myProcessName.getParent(), bounds, this)[ CD ]
Line_12 $$ final Rectangle label = SwingUtilities.convertRectangle(myProcessName.getParent(), bounds, this)-->Line_21 $$ g.fillRect(0, (int) label.getMaxY() + 1, getWidth() - 1, getHeight() / 2)[ FD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_27 $$ g.setColor(bg)[ CD ]
Line_2 $$ protected void paintComponent(final Graphics g) -->Line_27 $$ g.setColor(bg)[ FD ]
Line_11 $$ final Rectangle bounds = myProcessName.getBounds()-->Line_12 $$ final Rectangle label = SwingUtilities.convertRectangle(myProcessName.getParent(), bounds, this)[ FD ]
