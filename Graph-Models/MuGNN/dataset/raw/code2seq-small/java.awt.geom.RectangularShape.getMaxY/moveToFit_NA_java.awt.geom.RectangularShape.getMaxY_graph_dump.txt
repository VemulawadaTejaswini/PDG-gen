Line_2 $$ public static void moveToFit(final Rectangle rectangle, final Rectangle container, @Nullable Insets padding) -->Line_8 $$ if (move.getMinX() < container.getMinX()) [ CD ]
Line_2 $$ public static void moveToFit(final Rectangle rectangle, final Rectangle container, @Nullable Insets padding) -->Line_5 $$ if (move.getMaxX() > container.getMaxX()) [ FD ]
Line_2 $$ public static void moveToFit(final Rectangle rectangle, final Rectangle container, @Nullable Insets padding) -->Line_5 $$ if (move.getMaxX() > container.getMaxX()) [ CD ]
Line_3 $$ Rectangle move = new Rectangle(rectangle)-->Line_4 $$ JBInsets.addTo(move, padding)[ FD ]
Line_3 $$ Rectangle move = new Rectangle(rectangle)-->Line_5 $$ if (move.getMaxX() > container.getMaxX()) [ FD ]
Line_8 $$ if (move.getMinX() < container.getMinX()) -->Line_9 $$ move.x = (int) container.getMinX()[ CD ]
Line_2 $$ public static void moveToFit(final Rectangle rectangle, final Rectangle container, @Nullable Insets padding) -->Line_11 $$ if (move.getMaxY() > container.getMaxY()) [ FD ]
Line_2 $$ public static void moveToFit(final Rectangle rectangle, final Rectangle container, @Nullable Insets padding) -->Line_4 $$ JBInsets.addTo(move, padding)[ FD ]
Line_2 $$ public static void moveToFit(final Rectangle rectangle, final Rectangle container, @Nullable Insets padding) -->Line_15 $$ move.y = (int) container.getMinY()[ FD ]
Line_2 $$ public static void moveToFit(final Rectangle rectangle, final Rectangle container, @Nullable Insets padding) -->Line_14 $$ if (move.getMinY() < container.getMinY()) [ FD ]
Line_2 $$ public static void moveToFit(final Rectangle rectangle, final Rectangle container, @Nullable Insets padding) -->Line_12 $$ move.y = (int) container.getMaxY() - move.height[ FD ]
Line_2 $$ public static void moveToFit(final Rectangle rectangle, final Rectangle container, @Nullable Insets padding) -->Line_6 $$ move.x = (int) container.getMaxX() - move.width[ FD ]
Line_3 $$ Rectangle move = new Rectangle(rectangle)-->Line_17 $$ JBInsets.removeFrom(move, padding)[ FD ]
Line_2 $$ public static void moveToFit(final Rectangle rectangle, final Rectangle container, @Nullable Insets padding) -->Line_18 $$ rectangle.setBounds(move)[ FD ]
Line_2 $$ public static void moveToFit(final Rectangle rectangle, final Rectangle container, @Nullable Insets padding) -->Line_8 $$ if (move.getMinX() < container.getMinX()) [ FD ]
Line_5 $$ if (move.getMaxX() > container.getMaxX()) -->Line_6 $$ move.x = (int) container.getMaxX() - move.width[ CD ]
Line_2 $$ public static void moveToFit(final Rectangle rectangle, final Rectangle container, @Nullable Insets padding) -->Line_4 $$ JBInsets.addTo(move, padding)[ CD ]
Line_2 $$ public static void moveToFit(final Rectangle rectangle, final Rectangle container, @Nullable Insets padding) -->Line_9 $$ move.x = (int) container.getMinX()[ FD ]
Line_2 $$ public static void moveToFit(final Rectangle rectangle, final Rectangle container, @Nullable Insets padding) -->Line_18 $$ rectangle.setBounds(move)[ CD ]
Line_14 $$ if (move.getMinY() < container.getMinY()) -->Line_15 $$ move.y = (int) container.getMinY()[ CD ]
Line_2 $$ public static void moveToFit(final Rectangle rectangle, final Rectangle container, @Nullable Insets padding) -->Line_3 $$ Rectangle move = new Rectangle(rectangle)[ CD ]
Line_3 $$ Rectangle move = new Rectangle(rectangle)-->Line_11 $$ if (move.getMaxY() > container.getMaxY()) [ FD ]
Line_11 $$ if (move.getMaxY() > container.getMaxY()) -->Line_12 $$ move.y = (int) container.getMaxY() - move.height[ CD ]
Line_2 $$ public static void moveToFit(final Rectangle rectangle, final Rectangle container, @Nullable Insets padding) -->Line_11 $$ if (move.getMaxY() > container.getMaxY()) [ CD ]
Line_2 $$ public static void moveToFit(final Rectangle rectangle, final Rectangle container, @Nullable Insets padding) -->Line_17 $$ JBInsets.removeFrom(move, padding)[ CD ]
Line_3 $$ Rectangle move = new Rectangle(rectangle)-->Line_14 $$ if (move.getMinY() < container.getMinY()) [ FD ]
Line_2 $$ public static void moveToFit(final Rectangle rectangle, final Rectangle container, @Nullable Insets padding) -->Line_14 $$ if (move.getMinY() < container.getMinY()) [ CD ]
Line_3 $$ Rectangle move = new Rectangle(rectangle)-->Line_18 $$ rectangle.setBounds(move)[ FD ]
Line_3 $$ Rectangle move = new Rectangle(rectangle)-->Line_8 $$ if (move.getMinX() < container.getMinX()) [ FD ]
Line_2 $$ public static void moveToFit(final Rectangle rectangle, final Rectangle container, @Nullable Insets padding) -->Line_17 $$ JBInsets.removeFrom(move, padding)[ FD ]
