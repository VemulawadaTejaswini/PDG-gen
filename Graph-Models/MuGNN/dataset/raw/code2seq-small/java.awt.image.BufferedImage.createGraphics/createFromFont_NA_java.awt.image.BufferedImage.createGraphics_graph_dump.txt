Line_14 $$ int x = c[0] * CHAR_WIDTH-->Line_15 $$ g.setClip(x, 0, CHAR_WIDTH, CHAR_HEIGHT)[ FD ]
Line_6 $$ Graphics2D g = image.createGraphics()-->Line_15 $$ g.setClip(x, 0, CHAR_WIDTH, CHAR_HEIGHT)[ FD ]
Line_2 $$ public static BitmapFont createFromFont(Font font) -->Line_11 $$ char[] c = new char[1][ CD ]
Line_12 $$ for (c[0] = 0; c[0] < NUM_CHARACTERS; c[0]++) -->Line_13 $$ if (font.canDisplay(c[0])) [ CD ]
Line_2 $$ public static BitmapFont createFromFont(Font font) -->Line_8 $$ g.fillRect(0, 0, imageWidth, CHAR_HEIGHT)[ CD ]
Line_14 $$ int x = c[0] * CHAR_WIDTH-->Line_16 $$ g.drawChars(c, 0, 1, x, CHAR_HEIGHT - CHAR_DESCENT)[ FD ]
Line_2 $$ public static BitmapFont createFromFont(Font font) -->Line_10 $$ g.setFont(font)[ FD ]
Line_6 $$ Graphics2D g = image.createGraphics()-->Line_9 $$ g.setColor(Color.black)[ FD ]
Line_13 $$ if (font.canDisplay(c[0])) -->Line_14 $$ int x = c[0] * CHAR_WIDTH[ CD ]
Line_2 $$ public static BitmapFont createFromFont(Font font) -->Line_9 $$ g.setColor(Color.black)[ CD ]
Line_5 $$ BufferedImage image = new BufferedImage(imageWidth, CHAR_HEIGHT, BufferedImage.TYPE_BYTE_BINARY)-->Line_6 $$ Graphics2D g = image.createGraphics()[ FD ]
Line_2 $$ public static BitmapFont createFromFont(Font font) -->Line_20 $$ return new BitmapFont(image)[ CD ]
Line_2 $$ public static BitmapFont createFromFont(Font font) -->Line_4 $$ int imageWidth = CHAR_WIDTH * NUM_CHARACTERS[ CD ]
Line_2 $$ public static BitmapFont createFromFont(Font font) -->Line_10 $$ g.setFont(font)[ CD ]
Line_3 $$ font = font.deriveFont(FONT_SIZE)-->Line_10 $$ g.setFont(font)[ FD ]
Line_6 $$ Graphics2D g = image.createGraphics()-->Line_19 $$ g.dispose()[ FD ]
Line_2 $$ public static BitmapFont createFromFont(Font font) -->Line_3 $$ font = font.deriveFont(FONT_SIZE)[ FD ]
Line_4 $$ int imageWidth = CHAR_WIDTH * NUM_CHARACTERS-->Line_8 $$ g.fillRect(0, 0, imageWidth, CHAR_HEIGHT)[ FD ]
Line_13 $$ if (font.canDisplay(c[0])) -->Line_15 $$ g.setClip(x, 0, CHAR_WIDTH, CHAR_HEIGHT)[ CD ]
Line_6 $$ Graphics2D g = image.createGraphics()-->Line_7 $$ g.setColor(Color.white)[ FD ]
Line_2 $$ public static BitmapFont createFromFont(Font font) -->Line_3 $$ font = font.deriveFont(FONT_SIZE)[ CD ]
Line_6 $$ Graphics2D g = image.createGraphics()-->Line_10 $$ g.setFont(font)[ FD ]
Line_2 $$ public static BitmapFont createFromFont(Font font) -->Line_19 $$ g.dispose()[ CD ]
Line_2 $$ public static BitmapFont createFromFont(Font font) -->Line_13 $$ if (font.canDisplay(c[0])) [ FD ]
Line_2 $$ public static BitmapFont createFromFont(Font font) -->Line_12 $$ for (c[0] = 0; c[0] < NUM_CHARACTERS; c[0]++) [ CD ]
Line_2 $$ public static BitmapFont createFromFont(Font font) -->Line_5 $$ BufferedImage image = new BufferedImage(imageWidth, CHAR_HEIGHT, BufferedImage.TYPE_BYTE_BINARY)[ CD ]
Line_13 $$ if (font.canDisplay(c[0])) -->Line_16 $$ g.drawChars(c, 0, 1, x, CHAR_HEIGHT - CHAR_DESCENT)[ CD ]
Line_6 $$ Graphics2D g = image.createGraphics()-->Line_16 $$ g.drawChars(c, 0, 1, x, CHAR_HEIGHT - CHAR_DESCENT)[ FD ]
Line_6 $$ Graphics2D g = image.createGraphics()-->Line_8 $$ g.fillRect(0, 0, imageWidth, CHAR_HEIGHT)[ FD ]
Line_2 $$ public static BitmapFont createFromFont(Font font) -->Line_7 $$ g.setColor(Color.white)[ CD ]
Line_2 $$ public static BitmapFont createFromFont(Font font) -->Line_6 $$ Graphics2D g = image.createGraphics()[ CD ]
Line_3 $$ font = font.deriveFont(FONT_SIZE)-->Line_13 $$ if (font.canDisplay(c[0])) [ FD ]
Line_11 $$ char[] c = new char[1]-->Line_16 $$ g.drawChars(c, 0, 1, x, CHAR_HEIGHT - CHAR_DESCENT)[ FD ]
