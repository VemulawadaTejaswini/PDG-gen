Line_2 $$ protected RenderedImage doScale(RenderedImage renderedImage, int scaledHeight, int scaledWidth) -->Line_5 $$ ColorModel originalColorModel = originalBufferedImage.getColorModel()[ CD ]
Line_10 $$ GraphicsConfiguration originalGraphicsConfiguration = originalGraphics2D.getDeviceConfiguration()-->Line_11 $$ BufferedImage scaledBufferedImage = originalGraphicsConfiguration.createCompatibleImage(scaledWidth, scaledHeight, originalBufferedImage.getTransparency())[ FD ]
Line_6 $$ Graphics2D originalGraphics2D = originalBufferedImage.createGraphics()-->Line_8 $$ originalGraphics2D.setComposite(AlphaComposite.Src)[ FD ]
Line_2 $$ protected RenderedImage doScale(RenderedImage renderedImage, int scaledHeight, int scaledWidth) -->Line_15 $$ return scaledBufferedImage[ CD ]
Line_2 $$ protected RenderedImage doScale(RenderedImage renderedImage, int scaledHeight, int scaledWidth) -->Line_10 $$ GraphicsConfiguration originalGraphicsConfiguration = originalGraphics2D.getDeviceConfiguration()[ CD ]
Line_12 $$ Graphics scaledGraphics = scaledBufferedImage.getGraphics()-->Line_13 $$ scaledGraphics.drawImage(originalBufferedImage.getScaledInstance(scaledWidth, scaledHeight, java.awt.Image.SCALE_SMOOTH), 0, 0, null)[ FD ]
Line_6 $$ Graphics2D originalGraphics2D = originalBufferedImage.createGraphics()-->Line_10 $$ GraphicsConfiguration originalGraphicsConfiguration = originalGraphics2D.getDeviceConfiguration()[ FD ]
Line_2 $$ protected RenderedImage doScale(RenderedImage renderedImage, int scaledHeight, int scaledWidth) -->Line_13 $$ scaledGraphics.drawImage(originalBufferedImage.getScaledInstance(scaledWidth, scaledHeight, java.awt.Image.SCALE_SMOOTH), 0, 0, null)[ FD ]
Line_2 $$ protected RenderedImage doScale(RenderedImage renderedImage, int scaledHeight, int scaledWidth) -->Line_14 $$ originalGraphics2D.dispose()[ CD ]
Line_7 $$ if (originalColorModel.hasAlpha()) -->Line_8 $$ originalGraphics2D.setComposite(AlphaComposite.Src)[ CD ]
Line_2 $$ protected RenderedImage doScale(RenderedImage renderedImage, int scaledHeight, int scaledWidth) -->Line_12 $$ Graphics scaledGraphics = scaledBufferedImage.getGraphics()[ CD ]
Line_6 $$ Graphics2D originalGraphics2D = originalBufferedImage.createGraphics()-->Line_14 $$ originalGraphics2D.dispose()[ FD ]
Line_5 $$ ColorModel originalColorModel = originalBufferedImage.getColorModel()-->Line_7 $$ if (originalColorModel.hasAlpha()) [ FD ]
Line_11 $$ BufferedImage scaledBufferedImage = originalGraphicsConfiguration.createCompatibleImage(scaledWidth, scaledHeight, originalBufferedImage.getTransparency())-->Line_12 $$ Graphics scaledGraphics = scaledBufferedImage.getGraphics()[ FD ]
Line_2 $$ protected RenderedImage doScale(RenderedImage renderedImage, int scaledHeight, int scaledWidth) -->Line_6 $$ Graphics2D originalGraphics2D = originalBufferedImage.createGraphics()[ CD ]
Line_2 $$ protected RenderedImage doScale(RenderedImage renderedImage, int scaledHeight, int scaledWidth) -->Line_7 $$ if (originalColorModel.hasAlpha()) [ CD ]
Line_2 $$ protected RenderedImage doScale(RenderedImage renderedImage, int scaledHeight, int scaledWidth) -->Line_13 $$ scaledGraphics.drawImage(originalBufferedImage.getScaledInstance(scaledWidth, scaledHeight, java.awt.Image.SCALE_SMOOTH), 0, 0, null)[ CD ]
Line_2 $$ protected RenderedImage doScale(RenderedImage renderedImage, int scaledHeight, int scaledWidth) -->Line_11 $$ BufferedImage scaledBufferedImage = originalGraphicsConfiguration.createCompatibleImage(scaledWidth, scaledHeight, originalBufferedImage.getTransparency())[ CD ]
Line_2 $$ protected RenderedImage doScale(RenderedImage renderedImage, int scaledHeight, int scaledWidth) -->Line_11 $$ BufferedImage scaledBufferedImage = originalGraphicsConfiguration.createCompatibleImage(scaledWidth, scaledHeight, originalBufferedImage.getTransparency())[ FD ]
