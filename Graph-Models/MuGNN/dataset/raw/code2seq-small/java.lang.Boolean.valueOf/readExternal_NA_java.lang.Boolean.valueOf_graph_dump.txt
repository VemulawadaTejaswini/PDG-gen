Line_2 $$ public void readExternal(Element element) throws InvalidDataException -->Line_6 $$ mySuiteToMergeWith = element.getAttributeValue(COVERAGE_MERGE_SUITE_ATT_NAME)[ CD ]
Line_10 $$ for (int i = 0; i < children.size(); i++) -->Line_13 $$ String val = e.getAttributeValue("value")[ CD ]
Line_2 $$ public void readExternal(Element element) throws InvalidDataException -->Line_3 $$ super.readExternal(element)[ CD ]
Line_2 $$ public void readExternal(Element element) throws InvalidDataException -->Line_7 $$ List<Element> children = element.getChildren(COVERAGE_PATTERN_ELEMENT_NAME)[ FD ]
Line_11 $$ Element e = children.get(i)-->Line_13 $$ String val = e.getAttributeValue("value")[ FD ]
Line_10 $$ for (int i = 0; i < children.size(); i++) -->Line_11 $$ Element e = children.get(i)[ FD ]
Line_2 $$ public void readExternal(Element element) throws InvalidDataException -->Line_7 $$ List<Element> children = element.getChildren(COVERAGE_PATTERN_ELEMENT_NAME)[ CD ]
Line_10 $$ for (int i = 0; i < children.size(); i++) -->Line_12 $$ myCoveragePatterns[i] = createClassFilter(e)[ CD ]
Line_7 $$ List<Element> children = element.getChildren(COVERAGE_PATTERN_ELEMENT_NAME)-->Line_11 $$ Element e = children.get(i)[ FD ]
Line_11 $$ Element e = children.get(i)-->Line_12 $$ myCoveragePatterns[i] = createClassFilter(e)[ FD ]
Line_10 $$ for (int i = 0; i < children.size(); i++) -->Line_14 $$ if (val != null) [ CD ]
Line_2 $$ public void readExternal(Element element) throws InvalidDataException -->Line_8 $$ if (children.size() > 0) [ CD ]
Line_14 $$ if (val != null) -->Line_15 $$ myCoveragePatterns[i].setPattern(val)[ CD ]
Line_7 $$ List<Element> children = element.getChildren(COVERAGE_PATTERN_ELEMENT_NAME)-->Line_9 $$ myCoveragePatterns = new ClassFilter[children.size()][ FD ]
Line_4 $$ final String mergeAttribute = element.getAttributeValue(COVERAGE_MERGE_ATTRIBUTE_NAME)-->Line_5 $$ myIsMergeWithPreviousResults = mergeAttribute != null && Boolean.valueOf(mergeAttribute).booleanValue()[ FD ]
Line_7 $$ List<Element> children = element.getChildren(COVERAGE_PATTERN_ELEMENT_NAME)-->Line_8 $$ if (children.size() > 0) [ FD ]
Line_2 $$ public void readExternal(Element element) throws InvalidDataException -->Line_4 $$ final String mergeAttribute = element.getAttributeValue(COVERAGE_MERGE_ATTRIBUTE_NAME)[ FD ]
Line_13 $$ String val = e.getAttributeValue("value")-->Line_14 $$ if (val != null) [ FD ]
Line_10 $$ for (int i = 0; i < children.size(); i++) -->Line_11 $$ Element e = children.get(i)[ CD ]
Line_2 $$ public void readExternal(Element element) throws InvalidDataException -->Line_3 $$ super.readExternal(element)[ FD ]
Line_7 $$ List<Element> children = element.getChildren(COVERAGE_PATTERN_ELEMENT_NAME)-->Line_10 $$ for (int i = 0; i < children.size(); i++) [ FD ]
Line_13 $$ String val = e.getAttributeValue("value")-->Line_15 $$ myCoveragePatterns[i].setPattern(val)[ FD ]
Line_8 $$ if (children.size() > 0) -->Line_10 $$ for (int i = 0; i < children.size(); i++) [ CD ]
Line_2 $$ public void readExternal(Element element) throws InvalidDataException -->Line_4 $$ final String mergeAttribute = element.getAttributeValue(COVERAGE_MERGE_ATTRIBUTE_NAME)[ CD ]
Line_2 $$ public void readExternal(Element element) throws InvalidDataException -->Line_6 $$ mySuiteToMergeWith = element.getAttributeValue(COVERAGE_MERGE_SUITE_ATT_NAME)[ FD ]
