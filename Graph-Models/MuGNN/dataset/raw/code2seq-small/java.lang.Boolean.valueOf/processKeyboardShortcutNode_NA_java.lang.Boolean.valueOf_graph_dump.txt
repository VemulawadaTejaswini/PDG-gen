Line_14 $$ String secondStrokeString = element.getAttributeValue(SECOND_KEYSTROKE_ATTR_NAME)-->Line_15 $$ if (secondStrokeString != null) [ FD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_32 $$ final String removeOption = element.getAttributeValue(REMOVE_SHORTCUT_ATTR_NAME)[ FD ]
Line_34 $$ final String replaceOption = element.getAttributeValue(REPLACE_SHORTCUT_ATTR_NAME)-->Line_38 $$ if (Boolean.valueOf(replaceOption)) [ FD ]
Line_23 $$ if (keymapName == null || keymapName.trim().isEmpty()) -->Line_25 $$ return[ CD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_24 $$ reportActionError(pluginId, "attribute \"keymap\" should be defined")[ FD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_27 $$ Keymap keymap = myKeymapManager.getKeymap(keymapName)[ CD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_3 $$ String firstStrokeString = element.getAttributeValue(FIRST_KEYSTROKE_ATTR_NAME)[ FD ]
Line_41 $$ if (!Boolean.valueOf(removeOption)) -->Line_42 $$ keymap.addShortcut(actionId, shortcut)[ CD ]
Line_15 $$ if (secondStrokeString != null) -->Line_16 $$ secondKeyStroke = getKeyStroke(secondStrokeString)[ CD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_9 $$ if (firstKeyStroke == null) [ CD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_8 $$ KeyStroke firstKeyStroke = getKeyStroke(firstStrokeString)[ CD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_14 $$ String secondStrokeString = element.getAttributeValue(SECOND_KEYSTROKE_ATTR_NAME)[ FD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_34 $$ final String replaceOption = element.getAttributeValue(REPLACE_SHORTCUT_ATTR_NAME)[ CD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_18 $$ reportActionError(pluginId, "\"second-keystroke\" attribute has invalid value for action with id=" + actionId)[ FD ]
Line_9 $$ if (firstKeyStroke == null) -->Line_11 $$ return[ CD ]
Line_27 $$ Keymap keymap = myKeymapManager.getKeymap(keymapName)-->Line_39 $$ keymap.removeAllActionShortcuts(actionId)[ FD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_15 $$ if (secondStrokeString != null) [ CD ]
Line_35 $$ if (Boolean.valueOf(removeOption)) -->Line_36 $$ keymap.removeShortcut(actionId, shortcut)[ CD ]
Line_4 $$ if (firstStrokeString == null) -->Line_6 $$ return[ CD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_32 $$ final String removeOption = element.getAttributeValue(REMOVE_SHORTCUT_ATTR_NAME)[ CD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_38 $$ if (Boolean.valueOf(replaceOption)) [ CD ]
Line_27 $$ Keymap keymap = myKeymapManager.getKeymap(keymapName)-->Line_28 $$ if (keymap == null) [ FD ]
Line_22 $$ String keymapName = element.getAttributeValue(KEYMAP_ATTR_NAME)-->Line_23 $$ if (keymapName == null || keymapName.trim().isEmpty()) [ FD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_39 $$ keymap.removeAllActionShortcuts(actionId)[ FD ]
Line_27 $$ Keymap keymap = myKeymapManager.getKeymap(keymapName)-->Line_42 $$ keymap.addShortcut(actionId, shortcut)[ FD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_5 $$ reportActionError(pluginId, "\"first-keystroke\" attribute must be specified for action with id=" + actionId)[ FD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_23 $$ if (keymapName == null || keymapName.trim().isEmpty()) [ CD ]
Line_4 $$ if (firstStrokeString == null) -->Line_5 $$ reportActionError(pluginId, "\"first-keystroke\" attribute must be specified for action with id=" + actionId)[ CD ]
Line_17 $$ if (secondKeyStroke == null) -->Line_18 $$ reportActionError(pluginId, "\"second-keystroke\" attribute has invalid value for action with id=" + actionId)[ CD ]
Line_28 $$ if (keymap == null) -->Line_30 $$ return[ CD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_35 $$ if (Boolean.valueOf(removeOption)) [ CD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_22 $$ String keymapName = element.getAttributeValue(KEYMAP_ATTR_NAME)[ CD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_3 $$ String firstStrokeString = element.getAttributeValue(FIRST_KEYSTROKE_ATTR_NAME)[ CD ]
Line_13 $$ KeyStroke secondKeyStroke = null-->Line_17 $$ if (secondKeyStroke == null) [ FD ]
Line_23 $$ if (keymapName == null || keymapName.trim().isEmpty()) -->Line_24 $$ reportActionError(pluginId, "attribute \"keymap\" should be defined")[ CD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_22 $$ String keymapName = element.getAttributeValue(KEYMAP_ATTR_NAME)[ FD ]
Line_8 $$ KeyStroke firstKeyStroke = getKeyStroke(firstStrokeString)-->Line_9 $$ if (firstKeyStroke == null) [ FD ]
Line_32 $$ final String removeOption = element.getAttributeValue(REMOVE_SHORTCUT_ATTR_NAME)-->Line_35 $$ if (Boolean.valueOf(removeOption)) [ FD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_41 $$ if (!Boolean.valueOf(removeOption)) [ CD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_29 $$ reportActionWarning(pluginId, "keymap \"" + keymapName + "\" not found")[ FD ]
Line_14 $$ String secondStrokeString = element.getAttributeValue(SECOND_KEYSTROKE_ATTR_NAME)-->Line_16 $$ secondKeyStroke = getKeyStroke(secondStrokeString)[ FD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_36 $$ keymap.removeShortcut(actionId, shortcut)[ FD ]
Line_33 $$ final KeyboardShortcut shortcut = new KeyboardShortcut(firstKeyStroke, secondKeyStroke)-->Line_42 $$ keymap.addShortcut(actionId, shortcut)[ FD ]
Line_16 $$ secondKeyStroke = getKeyStroke(secondStrokeString)-->Line_17 $$ if (secondKeyStroke == null) [ FD ]
Line_22 $$ String keymapName = element.getAttributeValue(KEYMAP_ATTR_NAME)-->Line_27 $$ Keymap keymap = myKeymapManager.getKeymap(keymapName)[ FD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_13 $$ KeyStroke secondKeyStroke = null[ CD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_10 $$ reportActionError(pluginId, "\"first-keystroke\" attribute has invalid value for action with id=" + actionId)[ FD ]
Line_15 $$ if (secondStrokeString != null) -->Line_17 $$ if (secondKeyStroke == null) [ CD ]
Line_27 $$ Keymap keymap = myKeymapManager.getKeymap(keymapName)-->Line_36 $$ keymap.removeShortcut(actionId, shortcut)[ FD ]
Line_17 $$ if (secondKeyStroke == null) -->Line_19 $$ return[ CD ]
Line_33 $$ final KeyboardShortcut shortcut = new KeyboardShortcut(firstKeyStroke, secondKeyStroke)-->Line_36 $$ keymap.removeShortcut(actionId, shortcut)[ FD ]
Line_38 $$ if (Boolean.valueOf(replaceOption)) -->Line_39 $$ keymap.removeAllActionShortcuts(actionId)[ CD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_33 $$ final KeyboardShortcut shortcut = new KeyboardShortcut(firstKeyStroke, secondKeyStroke)[ CD ]
Line_3 $$ String firstStrokeString = element.getAttributeValue(FIRST_KEYSTROKE_ATTR_NAME)-->Line_8 $$ KeyStroke firstKeyStroke = getKeyStroke(firstStrokeString)[ FD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_34 $$ final String replaceOption = element.getAttributeValue(REPLACE_SHORTCUT_ATTR_NAME)[ FD ]
Line_32 $$ final String removeOption = element.getAttributeValue(REMOVE_SHORTCUT_ATTR_NAME)-->Line_41 $$ if (!Boolean.valueOf(removeOption)) [ FD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_14 $$ String secondStrokeString = element.getAttributeValue(SECOND_KEYSTROKE_ATTR_NAME)[ CD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_42 $$ keymap.addShortcut(actionId, shortcut)[ FD ]
Line_13 $$ KeyStroke secondKeyStroke = null-->Line_16 $$ secondKeyStroke = getKeyStroke(secondStrokeString)[ FD ]
Line_9 $$ if (firstKeyStroke == null) -->Line_10 $$ reportActionError(pluginId, "\"first-keystroke\" attribute has invalid value for action with id=" + actionId)[ CD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_28 $$ if (keymap == null) [ CD ]
Line_28 $$ if (keymap == null) -->Line_29 $$ reportActionWarning(pluginId, "keymap \"" + keymapName + "\" not found")[ CD ]
Line_3 $$ String firstStrokeString = element.getAttributeValue(FIRST_KEYSTROKE_ATTR_NAME)-->Line_4 $$ if (firstStrokeString == null) [ FD ]
Line_2 $$ private void processKeyboardShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_4 $$ if (firstStrokeString == null) [ CD ]
