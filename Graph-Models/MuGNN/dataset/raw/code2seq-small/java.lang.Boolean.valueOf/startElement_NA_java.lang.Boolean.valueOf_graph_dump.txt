Line_2 $$ public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException -->Line_3 $$ if (TestResultsXmlFormatter.ELEM_SUITE.equals(qName)) [ CD ]
Line_7 $$ if (TestResultsXmlFormatter.ELEM_TEST.equals(qName)) -->Line_8 $$ final String name = StringUtil.unescapeXml(attributes.getValue(TestResultsXmlFormatter.ATTR_NAME))[ CD ]
Line_7 $$ if (TestResultsXmlFormatter.ELEM_TEST.equals(qName)) -->Line_11 $$ myStatus = attributes.getValue(TestResultsXmlFormatter.ATTR_STATUS)[ CD ]
Line_2 $$ public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException -->Line_20 $$ myErrorOutput = Comparing.equal(attributes.getValue(TestResultsXmlFormatter.ATTR_OUTPUT_TYPE), "stderr")[ FD ]
Line_3 $$ if (TestResultsXmlFormatter.ELEM_SUITE.equals(qName)) -->Line_7 $$ if (TestResultsXmlFormatter.ELEM_TEST.equals(qName)) [ CD ]
Line_3 $$ if (TestResultsXmlFormatter.ELEM_SUITE.equals(qName)) -->Line_6 $$ mySuites.push(suiteName)[ CD ]
Line_2 $$ public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException -->Line_5 $$ myProcessor.onSuiteStarted(new TestSuiteStartedEvent(suiteName, StringUtil.unescapeXml(attributes.getValue(TestResultsXmlFormatter.ATTR_LOCATION))))[ FD ]
Line_3 $$ if (TestResultsXmlFormatter.ELEM_SUITE.equals(qName)) -->Line_4 $$ final String suiteName = StringUtil.unescapeXml(attributes.getValue(TestResultsXmlFormatter.ATTR_NAME))[ CD ]
Line_2 $$ public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException -->Line_3 $$ if (TestResultsXmlFormatter.ELEM_SUITE.equals(qName)) [ FD ]
Line_22 $$ if (TestResultsXmlFormatter.ROOT_ELEM.equals(qName)) -->Line_23 $$ myProcessor.onRootPresentationAdded(attributes.getValue("name"), attributes.getValue("comment"), attributes.getValue("location"))[ CD ]
Line_7 $$ if (TestResultsXmlFormatter.ELEM_TEST.equals(qName)) -->Line_13 $$ final TestStartedEvent startedEvent = new TestStartedEvent(name, StringUtil.unescapeXml(attributes.getValue(TestResultsXmlFormatter.ATTR_LOCATION)))[ CD ]
Line_2 $$ public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException -->Line_4 $$ final String suiteName = StringUtil.unescapeXml(attributes.getValue(TestResultsXmlFormatter.ATTR_NAME))[ FD ]
Line_7 $$ if (TestResultsXmlFormatter.ELEM_TEST.equals(qName)) -->Line_18 $$ currentValue.setLength(0)[ CD ]
Line_13 $$ final TestStartedEvent startedEvent = new TestStartedEvent(name, StringUtil.unescapeXml(attributes.getValue(TestResultsXmlFormatter.ATTR_LOCATION)))-->Line_17 $$ myProcessor.onTestStarted(startedEvent)[ FD ]
Line_2 $$ public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException -->Line_22 $$ if (TestResultsXmlFormatter.ROOT_ELEM.equals(qName)) [ FD ]
Line_12 $$ final String isConfig = attributes.getValue(TestResultsXmlFormatter.ATTR_CONFIG)-->Line_14 $$ if (isConfig != null && Boolean.valueOf(isConfig)) [ FD ]
Line_2 $$ public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException -->Line_12 $$ final String isConfig = attributes.getValue(TestResultsXmlFormatter.ATTR_CONFIG)[ FD ]
Line_4 $$ final String suiteName = StringUtil.unescapeXml(attributes.getValue(TestResultsXmlFormatter.ATTR_NAME))-->Line_6 $$ mySuites.push(suiteName)[ FD ]
Line_2 $$ public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException -->Line_8 $$ final String name = StringUtil.unescapeXml(attributes.getValue(TestResultsXmlFormatter.ATTR_NAME))[ FD ]
Line_2 $$ public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException -->Line_19 $$ if (TestResultsXmlFormatter.ELEM_OUTPUT.equals(qName)) [ FD ]
Line_2 $$ public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException -->Line_7 $$ if (TestResultsXmlFormatter.ELEM_TEST.equals(qName)) [ FD ]
Line_7 $$ if (TestResultsXmlFormatter.ELEM_TEST.equals(qName)) -->Line_19 $$ if (TestResultsXmlFormatter.ELEM_OUTPUT.equals(qName)) [ CD ]
Line_7 $$ if (TestResultsXmlFormatter.ELEM_TEST.equals(qName)) -->Line_14 $$ if (isConfig != null && Boolean.valueOf(isConfig)) [ CD ]
Line_3 $$ if (TestResultsXmlFormatter.ELEM_SUITE.equals(qName)) -->Line_5 $$ myProcessor.onSuiteStarted(new TestSuiteStartedEvent(suiteName, StringUtil.unescapeXml(attributes.getValue(TestResultsXmlFormatter.ATTR_LOCATION))))[ CD ]
Line_19 $$ if (TestResultsXmlFormatter.ELEM_OUTPUT.equals(qName)) -->Line_22 $$ if (TestResultsXmlFormatter.ROOT_ELEM.equals(qName)) [ CD ]
Line_2 $$ public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException -->Line_11 $$ myStatus = attributes.getValue(TestResultsXmlFormatter.ATTR_STATUS)[ FD ]
Line_7 $$ if (TestResultsXmlFormatter.ELEM_TEST.equals(qName)) -->Line_17 $$ myProcessor.onTestStarted(startedEvent)[ CD ]
Line_13 $$ final TestStartedEvent startedEvent = new TestStartedEvent(name, StringUtil.unescapeXml(attributes.getValue(TestResultsXmlFormatter.ATTR_LOCATION)))-->Line_15 $$ startedEvent.setConfig(true)[ FD ]
Line_7 $$ if (TestResultsXmlFormatter.ELEM_TEST.equals(qName)) -->Line_12 $$ final String isConfig = attributes.getValue(TestResultsXmlFormatter.ATTR_CONFIG)[ CD ]
Line_14 $$ if (isConfig != null && Boolean.valueOf(isConfig)) -->Line_15 $$ startedEvent.setConfig(true)[ CD ]
Line_7 $$ if (TestResultsXmlFormatter.ELEM_TEST.equals(qName)) -->Line_10 $$ myDuration = attributes.getValue(TestResultsXmlFormatter.ATTR_DURATION)[ CD ]
Line_2 $$ public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException -->Line_23 $$ myProcessor.onRootPresentationAdded(attributes.getValue("name"), attributes.getValue("comment"), attributes.getValue("location"))[ FD ]
Line_19 $$ if (TestResultsXmlFormatter.ELEM_OUTPUT.equals(qName)) -->Line_21 $$ currentValue.setLength(0)[ CD ]
Line_2 $$ public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException -->Line_13 $$ final TestStartedEvent startedEvent = new TestStartedEvent(name, StringUtil.unescapeXml(attributes.getValue(TestResultsXmlFormatter.ATTR_LOCATION)))[ FD ]
Line_2 $$ public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException -->Line_10 $$ myDuration = attributes.getValue(TestResultsXmlFormatter.ATTR_DURATION)[ FD ]
Line_19 $$ if (TestResultsXmlFormatter.ELEM_OUTPUT.equals(qName)) -->Line_20 $$ myErrorOutput = Comparing.equal(attributes.getValue(TestResultsXmlFormatter.ATTR_OUTPUT_TYPE), "stderr")[ CD ]
