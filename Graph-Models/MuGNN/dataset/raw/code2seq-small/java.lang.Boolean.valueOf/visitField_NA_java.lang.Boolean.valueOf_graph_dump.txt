Line_15 $$ final boolean read = arrayContentsAreRead(field, containingClass)-->Line_16 $$ if (written == read) [ FD ]
Line_2 $$ public void visitField(@NotNull PsiField field) -->Line_7 $$ if (HighlightUtil.isSerializationImplicitlyUsedField(field)) [ FD ]
Line_10 $$ final PsiClass containingClass = PsiUtil.getTopLevelClass(field)-->Line_15 $$ final boolean read = arrayContentsAreRead(field, containingClass)[ FD ]
Line_2 $$ public void visitField(@NotNull PsiField field) -->Line_16 $$ if (written == read) [ CD ]
Line_2 $$ public void visitField(@NotNull PsiField field) -->Line_15 $$ final boolean read = arrayContentsAreRead(field, containingClass)[ FD ]
Line_10 $$ final PsiClass containingClass = PsiUtil.getTopLevelClass(field)-->Line_11 $$ if (!checkVariable(field, containingClass)) [ FD ]
Line_2 $$ public void visitField(@NotNull PsiField field) -->Line_14 $$ final boolean written = arrayContentsAreWritten(field, containingClass)[ FD ]
Line_4 $$ if (!field.hasModifierProperty(PsiModifier.PRIVATE)) -->Line_5 $$ return[ CD ]
Line_11 $$ if (!checkVariable(field, containingClass)) -->Line_12 $$ return[ CD ]
Line_2 $$ public void visitField(@NotNull PsiField field) -->Line_4 $$ if (!field.hasModifierProperty(PsiModifier.PRIVATE)) [ FD ]
Line_2 $$ public void visitField(@NotNull PsiField field) -->Line_11 $$ if (!checkVariable(field, containingClass)) [ CD ]
Line_2 $$ public void visitField(@NotNull PsiField field) -->Line_3 $$ super.visitField(field)[ FD ]
Line_2 $$ public void visitField(@NotNull PsiField field) -->Line_3 $$ super.visitField(field)[ CD ]
Line_2 $$ public void visitField(@NotNull PsiField field) -->Line_10 $$ final PsiClass containingClass = PsiUtil.getTopLevelClass(field)[ CD ]
Line_2 $$ public void visitField(@NotNull PsiField field) -->Line_19 $$ registerFieldError(field, Boolean.valueOf(written))[ FD ]
Line_2 $$ public void visitField(@NotNull PsiField field) -->Line_7 $$ if (HighlightUtil.isSerializationImplicitlyUsedField(field)) [ CD ]
Line_16 $$ if (written == read) -->Line_17 $$ return[ CD ]
Line_14 $$ final boolean written = arrayContentsAreWritten(field, containingClass)-->Line_16 $$ if (written == read) [ FD ]
Line_2 $$ public void visitField(@NotNull PsiField field) -->Line_15 $$ final boolean read = arrayContentsAreRead(field, containingClass)[ CD ]
Line_2 $$ public void visitField(@NotNull PsiField field) -->Line_11 $$ if (!checkVariable(field, containingClass)) [ FD ]
Line_2 $$ public void visitField(@NotNull PsiField field) -->Line_4 $$ if (!field.hasModifierProperty(PsiModifier.PRIVATE)) [ CD ]
Line_10 $$ final PsiClass containingClass = PsiUtil.getTopLevelClass(field)-->Line_14 $$ final boolean written = arrayContentsAreWritten(field, containingClass)[ FD ]
Line_14 $$ final boolean written = arrayContentsAreWritten(field, containingClass)-->Line_19 $$ registerFieldError(field, Boolean.valueOf(written))[ FD ]
Line_2 $$ public void visitField(@NotNull PsiField field) -->Line_10 $$ final PsiClass containingClass = PsiUtil.getTopLevelClass(field)[ FD ]
Line_2 $$ public void visitField(@NotNull PsiField field) -->Line_14 $$ final boolean written = arrayContentsAreWritten(field, containingClass)[ CD ]
Line_2 $$ public void visitField(@NotNull PsiField field) -->Line_19 $$ registerFieldError(field, Boolean.valueOf(written))[ CD ]
Line_7 $$ if (HighlightUtil.isSerializationImplicitlyUsedField(field)) -->Line_8 $$ return[ CD ]
