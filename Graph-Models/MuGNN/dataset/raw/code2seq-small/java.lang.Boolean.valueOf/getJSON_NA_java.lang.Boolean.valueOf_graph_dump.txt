Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)[ FD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_17 $$ updateDisplayOrder(request)[ FD ]
Line_28 $$ long plid = ParamUtil.getLong(request, "plid")-->Line_30 $$ Layout layout = LayoutLocalServiceUtil.getLayout(plid)[ FD ]
Line_5 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject()-->Line_35 $$ jsonObject.put("originalPriority", layout.getPriority())[ FD ]
Line_30 $$ Layout layout = LayoutLocalServiceUtil.getLayout(plid)-->Line_35 $$ jsonObject.put("originalPriority", layout.getPriority())[ FD ]
Line_5 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject()-->Line_40 $$ return jsonObject.toString()[ FD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)[ CD ]
Line_4 $$ String cmd = ParamUtil.getString(request, Constants.CMD)-->Line_27 $$ jsonObject.put("message", getLayoutTypeExceptionMessage(themeDisplay, lte, cmd))[ FD ]
Line_7 $$ if (cmd.equals("add")) -->Line_9 $$ jsonObject.put("deletable", Boolean.valueOf(array[2]))[ CD ]
Line_18 $$ if (cmd.equals("name")) -->Line_20 $$ if (cmd.equals("parent_layout_id")) [ CD ]
Line_5 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject()-->Line_34 $$ jsonObject.put("originalParentPlid", layout.getParentPlid())[ FD ]
Line_16 $$ if (cmd.equals("display_order")) -->Line_18 $$ if (cmd.equals("name")) [ CD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_28 $$ long plid = ParamUtil.getLong(request, "plid")[ FD ]
Line_28 $$ long plid = ParamUtil.getLong(request, "plid")-->Line_36 $$ jsonObject.put("plid", plid)[ FD ]
Line_4 $$ String cmd = ParamUtil.getString(request, Constants.CMD)-->Line_7 $$ if (cmd.equals("add")) [ FD ]
Line_5 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject()-->Line_11 $$ jsonObject.put("sortable", Boolean.valueOf(array[3]))[ FD ]
Line_5 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject()-->Line_25 $$ jsonObject.put("status", HttpServletResponse.SC_OK)[ FD ]
Line_4 $$ String cmd = ParamUtil.getString(request, Constants.CMD)-->Line_18 $$ if (cmd.equals("name")) [ FD ]
Line_5 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject()-->Line_36 $$ jsonObject.put("plid", plid)[ FD ]
Line_29 $$ if ((lte.getType() == LayoutTypeException.FIRST_LAYOUT) && (plid > 0)) -->Line_32 $$ jsonObject.put("layoutId", layout.getLayoutId())[ CD ]
Line_29 $$ if ((lte.getType() == LayoutTypeException.FIRST_LAYOUT) && (plid > 0)) -->Line_34 $$ jsonObject.put("originalParentPlid", layout.getParentPlid())[ CD ]
Line_5 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject()-->Line_37 $$ jsonObject.put("status", HttpServletResponse.SC_BAD_REQUEST)[ FD ]
Line_7 $$ if (cmd.equals("add")) -->Line_12 $$ jsonObject.put("updateable", Boolean.valueOf(array[4]))[ CD ]
Line_29 $$ if ((lte.getType() == LayoutTypeException.FIRST_LAYOUT) && (plid > 0)) -->Line_30 $$ Layout layout = LayoutLocalServiceUtil.getLayout(plid)[ CD ]
Line_18 $$ if (cmd.equals("name")) -->Line_19 $$ updateName(request)[ CD ]
Line_5 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject()-->Line_9 $$ jsonObject.put("deletable", Boolean.valueOf(array[2]))[ FD ]
Line_7 $$ if (cmd.equals("add")) -->Line_13 $$ jsonObject.put("url", array[1])[ CD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_19 $$ updateName(request)[ FD ]
Line_4 $$ String cmd = ParamUtil.getString(request, Constants.CMD)-->Line_16 $$ if (cmd.equals("display_order")) [ FD ]
Line_4 $$ String cmd = ParamUtil.getString(request, Constants.CMD)-->Line_14 $$ if (cmd.equals("delete")) [ FD ]
Line_20 $$ if (cmd.equals("parent_layout_id")) -->Line_22 $$ if (cmd.equals("priority")) [ CD ]
Line_20 $$ if (cmd.equals("parent_layout_id")) -->Line_21 $$ updateParentLayoutId(request)[ CD ]
Line_4 $$ String cmd = ParamUtil.getString(request, Constants.CMD)-->Line_22 $$ if (cmd.equals("priority")) [ FD ]
Line_30 $$ Layout layout = LayoutLocalServiceUtil.getLayout(plid)-->Line_32 $$ jsonObject.put("layoutId", layout.getLayoutId())[ FD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_23 $$ updatePriority(request)[ FD ]
Line_30 $$ Layout layout = LayoutLocalServiceUtil.getLayout(plid)-->Line_34 $$ jsonObject.put("originalParentPlid", layout.getParentPlid())[ FD ]
Line_29 $$ if ((lte.getType() == LayoutTypeException.FIRST_LAYOUT) && (plid > 0)) -->Line_35 $$ jsonObject.put("originalPriority", layout.getPriority())[ CD ]
Line_7 $$ if (cmd.equals("add")) -->Line_8 $$ String[] array = addPage(themeDisplay, request, response)[ CD ]
Line_29 $$ if ((lte.getType() == LayoutTypeException.FIRST_LAYOUT) && (plid > 0)) -->Line_33 $$ jsonObject.put("originalParentLayoutId", layout.getParentLayoutId())[ CD ]
Line_4 $$ String cmd = ParamUtil.getString(request, Constants.CMD)-->Line_20 $$ if (cmd.equals("parent_layout_id")) [ FD ]
Line_7 $$ if (cmd.equals("add")) -->Line_14 $$ if (cmd.equals("delete")) [ CD ]
Line_5 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject()-->Line_31 $$ jsonObject.put("groupId", layout.getGroupId())[ FD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_15 $$ SitesUtil.deleteLayout(request, response)[ FD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_8 $$ String[] array = addPage(themeDisplay, request, response)[ FD ]
Line_7 $$ if (cmd.equals("add")) -->Line_11 $$ jsonObject.put("sortable", Boolean.valueOf(array[3]))[ CD ]
Line_30 $$ Layout layout = LayoutLocalServiceUtil.getLayout(plid)-->Line_31 $$ jsonObject.put("groupId", layout.getGroupId())[ FD ]
Line_5 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject()-->Line_10 $$ jsonObject.put("layoutId", array[0])[ FD ]
Line_5 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject()-->Line_13 $$ jsonObject.put("url", array[1])[ FD ]
Line_16 $$ if (cmd.equals("display_order")) -->Line_17 $$ updateDisplayOrder(request)[ CD ]
Line_5 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject()-->Line_27 $$ jsonObject.put("message", getLayoutTypeExceptionMessage(themeDisplay, lte, cmd))[ FD ]
Line_29 $$ if ((lte.getType() == LayoutTypeException.FIRST_LAYOUT) && (plid > 0)) -->Line_37 $$ jsonObject.put("status", HttpServletResponse.SC_BAD_REQUEST)[ CD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_40 $$ return jsonObject.toString()[ CD ]
Line_5 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject()-->Line_12 $$ jsonObject.put("updateable", Boolean.valueOf(array[4]))[ FD ]
Line_5 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject()-->Line_32 $$ jsonObject.put("layoutId", layout.getLayoutId())[ FD ]
Line_14 $$ if (cmd.equals("delete")) -->Line_15 $$ SitesUtil.deleteLayout(request, response)[ CD ]
Line_22 $$ if (cmd.equals("priority")) -->Line_23 $$ updatePriority(request)[ CD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_27 $$ jsonObject.put("message", getLayoutTypeExceptionMessage(themeDisplay, lte, cmd))[ FD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_4 $$ String cmd = ParamUtil.getString(request, Constants.CMD)[ CD ]
Line_30 $$ Layout layout = LayoutLocalServiceUtil.getLayout(plid)-->Line_33 $$ jsonObject.put("originalParentLayoutId", layout.getParentLayoutId())[ FD ]
Line_7 $$ if (cmd.equals("add")) -->Line_10 $$ jsonObject.put("layoutId", array[0])[ CD ]
Line_29 $$ if ((lte.getType() == LayoutTypeException.FIRST_LAYOUT) && (plid > 0)) -->Line_36 $$ jsonObject.put("plid", plid)[ CD ]
Line_14 $$ if (cmd.equals("delete")) -->Line_16 $$ if (cmd.equals("display_order")) [ CD ]
Line_29 $$ if ((lte.getType() == LayoutTypeException.FIRST_LAYOUT) && (plid > 0)) -->Line_31 $$ jsonObject.put("groupId", layout.getGroupId())[ CD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_8 $$ String[] array = addPage(themeDisplay, request, response)[ FD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_21 $$ updateParentLayoutId(request)[ FD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_4 $$ String cmd = ParamUtil.getString(request, Constants.CMD)[ FD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_5 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject()[ CD ]
Line_5 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject()-->Line_33 $$ jsonObject.put("originalParentLayoutId", layout.getParentLayoutId())[ FD ]
