Line_2 $$ public void visitForStatement(@NotNull PsiForStatement statement) -->Line_13 $$ registerStatementError(statement, Boolean.valueOf(hasInitializer), Boolean.valueOf(hasCondition), Boolean.valueOf(hasUpdate))[ CD ]
Line_2 $$ public void visitForStatement(@NotNull PsiForStatement statement) -->Line_3 $$ super.visitForStatement(statement)[ CD ]
Line_2 $$ public void visitForStatement(@NotNull PsiForStatement statement) -->Line_6 $$ final boolean hasUpdate = hasUpdate(statement)[ CD ]
Line_10 $$ if (ignoreCollectionLoops && isCollectionLoopStatement(statement)) -->Line_11 $$ return[ CD ]
Line_2 $$ public void visitForStatement(@NotNull PsiForStatement statement) -->Line_5 $$ final boolean hasInitializer = hasInitializer(statement)[ CD ]
Line_7 $$ if (hasCondition && hasInitializer && hasUpdate) -->Line_8 $$ return[ CD ]
Line_2 $$ public void visitForStatement(@NotNull PsiForStatement statement) -->Line_4 $$ final boolean hasCondition = hasCondition(statement)[ FD ]
Line_2 $$ public void visitForStatement(@NotNull PsiForStatement statement) -->Line_6 $$ final boolean hasUpdate = hasUpdate(statement)[ FD ]
Line_4 $$ final boolean hasCondition = hasCondition(statement)-->Line_13 $$ registerStatementError(statement, Boolean.valueOf(hasInitializer), Boolean.valueOf(hasCondition), Boolean.valueOf(hasUpdate))[ FD ]
Line_2 $$ public void visitForStatement(@NotNull PsiForStatement statement) -->Line_13 $$ registerStatementError(statement, Boolean.valueOf(hasInitializer), Boolean.valueOf(hasCondition), Boolean.valueOf(hasUpdate))[ FD ]
Line_6 $$ final boolean hasUpdate = hasUpdate(statement)-->Line_7 $$ if (hasCondition && hasInitializer && hasUpdate) [ FD ]
Line_2 $$ public void visitForStatement(@NotNull PsiForStatement statement) -->Line_3 $$ super.visitForStatement(statement)[ FD ]
Line_5 $$ final boolean hasInitializer = hasInitializer(statement)-->Line_13 $$ registerStatementError(statement, Boolean.valueOf(hasInitializer), Boolean.valueOf(hasCondition), Boolean.valueOf(hasUpdate))[ FD ]
Line_2 $$ public void visitForStatement(@NotNull PsiForStatement statement) -->Line_4 $$ final boolean hasCondition = hasCondition(statement)[ CD ]
Line_6 $$ final boolean hasUpdate = hasUpdate(statement)-->Line_13 $$ registerStatementError(statement, Boolean.valueOf(hasInitializer), Boolean.valueOf(hasCondition), Boolean.valueOf(hasUpdate))[ FD ]
Line_2 $$ public void visitForStatement(@NotNull PsiForStatement statement) -->Line_5 $$ final boolean hasInitializer = hasInitializer(statement)[ FD ]
Line_2 $$ public void visitForStatement(@NotNull PsiForStatement statement) -->Line_7 $$ if (hasCondition && hasInitializer && hasUpdate) [ CD ]
Line_2 $$ public void visitForStatement(@NotNull PsiForStatement statement) -->Line_10 $$ if (ignoreCollectionLoops && isCollectionLoopStatement(statement)) [ CD ]
Line_2 $$ public void visitForStatement(@NotNull PsiForStatement statement) -->Line_10 $$ if (ignoreCollectionLoops && isCollectionLoopStatement(statement)) [ FD ]
