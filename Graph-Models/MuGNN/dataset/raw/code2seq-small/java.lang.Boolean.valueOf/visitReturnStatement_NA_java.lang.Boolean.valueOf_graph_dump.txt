Line_10 $$ if (methodParent instanceof PsiMethod) -->Line_14 $$ if (methodParent instanceof PsiLambdaExpression) [ CD ]
Line_14 $$ if (methodParent instanceof PsiLambdaExpression) -->Line_22 $$ return[ CD ]
Line_7 $$ final PsiElement methodParent = PsiTreeUtil.getParentOfType(statement, PsiMethod.class, PsiLambdaExpression.class)-->Line_10 $$ if (methodParent instanceof PsiMethod) [ FD ]
Line_18 $$ if (lambdaBody instanceof PsiCodeBlock) -->Line_19 $$ codeBlock = (PsiCodeBlock) lambdaBody[ CD ]
Line_14 $$ if (methodParent instanceof PsiLambdaExpression) -->Line_18 $$ if (lambdaBody instanceof PsiCodeBlock) [ CD ]
Line_12 $$ codeBlock = method.getBody()-->Line_19 $$ codeBlock = (PsiCodeBlock) lambdaBody[ FD ]
Line_2 $$ public void visitReturnStatement(@NotNull PsiReturnStatement statement) -->Line_24 $$ if (codeBlock == null) [ CD ]
Line_27 $$ if (!ControlFlowUtils.blockCompletesWithStatement(codeBlock, statement)) -->Line_28 $$ return[ CD ]
Line_8 $$ PsiCodeBlock codeBlock = null-->Line_19 $$ codeBlock = (PsiCodeBlock) lambdaBody[ FD ]
Line_2 $$ public void visitReturnStatement(@NotNull PsiReturnStatement statement) -->Line_4 $$ if (statement.getReturnValue() != null) [ CD ]
Line_2 $$ public void visitReturnStatement(@NotNull PsiReturnStatement statement) -->Line_33 $$ registerStatementError(statement, Boolean.valueOf(constructor))[ CD ]
Line_19 $$ codeBlock = (PsiCodeBlock) lambdaBody-->Line_24 $$ if (codeBlock == null) [ FD ]
Line_2 $$ public void visitReturnStatement(@NotNull PsiReturnStatement statement) -->Line_3 $$ super.visitReturnStatement(statement)[ FD ]
Line_2 $$ public void visitReturnStatement(@NotNull PsiReturnStatement statement) -->Line_30 $$ if (ignoreInThenBranch && isInThenBranch(statement)) [ FD ]
Line_15 $$ constructor = false-->Line_33 $$ registerStatementError(statement, Boolean.valueOf(constructor))[ FD ]
Line_8 $$ PsiCodeBlock codeBlock = null-->Line_27 $$ if (!ControlFlowUtils.blockCompletesWithStatement(codeBlock, statement)) [ FD ]
Line_2 $$ public void visitReturnStatement(@NotNull PsiReturnStatement statement) -->Line_9 $$ final boolean constructor[ CD ]
Line_13 $$ constructor = method.isConstructor()-->Line_15 $$ constructor = false[ FD ]
Line_16 $$ final PsiLambdaExpression lambdaExpression = (PsiLambdaExpression) methodParent-->Line_17 $$ final PsiElement lambdaBody = lambdaExpression.getBody()[ FD ]
Line_12 $$ codeBlock = method.getBody()-->Line_24 $$ if (codeBlock == null) [ FD ]
Line_2 $$ public void visitReturnStatement(@NotNull PsiReturnStatement statement) -->Line_7 $$ final PsiElement methodParent = PsiTreeUtil.getParentOfType(statement, PsiMethod.class, PsiLambdaExpression.class)[ CD ]
Line_2 $$ public void visitReturnStatement(@NotNull PsiReturnStatement statement) -->Line_27 $$ if (!ControlFlowUtils.blockCompletesWithStatement(codeBlock, statement)) [ FD ]
Line_8 $$ PsiCodeBlock codeBlock = null-->Line_24 $$ if (codeBlock == null) [ FD ]
Line_2 $$ public void visitReturnStatement(@NotNull PsiReturnStatement statement) -->Line_27 $$ if (!ControlFlowUtils.blockCompletesWithStatement(codeBlock, statement)) [ CD ]
Line_9 $$ final boolean constructor-->Line_33 $$ registerStatementError(statement, Boolean.valueOf(constructor))[ FD ]
Line_2 $$ public void visitReturnStatement(@NotNull PsiReturnStatement statement) -->Line_33 $$ registerStatementError(statement, Boolean.valueOf(constructor))[ FD ]
Line_19 $$ codeBlock = (PsiCodeBlock) lambdaBody-->Line_27 $$ if (!ControlFlowUtils.blockCompletesWithStatement(codeBlock, statement)) [ FD ]
Line_10 $$ if (methodParent instanceof PsiMethod) -->Line_12 $$ codeBlock = method.getBody()[ CD ]
Line_2 $$ public void visitReturnStatement(@NotNull PsiReturnStatement statement) -->Line_3 $$ super.visitReturnStatement(statement)[ CD ]
Line_7 $$ final PsiElement methodParent = PsiTreeUtil.getParentOfType(statement, PsiMethod.class, PsiLambdaExpression.class)-->Line_14 $$ if (methodParent instanceof PsiLambdaExpression) [ FD ]
Line_4 $$ if (statement.getReturnValue() != null) -->Line_5 $$ return[ CD ]
Line_9 $$ final boolean constructor-->Line_13 $$ constructor = method.isConstructor()[ FD ]
Line_14 $$ if (methodParent instanceof PsiLambdaExpression) -->Line_16 $$ final PsiLambdaExpression lambdaExpression = (PsiLambdaExpression) methodParent[ CD ]
Line_11 $$ final PsiMethod method = (PsiMethod) methodParent-->Line_12 $$ codeBlock = method.getBody()[ FD ]
Line_14 $$ if (methodParent instanceof PsiLambdaExpression) -->Line_15 $$ constructor = false[ CD ]
Line_2 $$ public void visitReturnStatement(@NotNull PsiReturnStatement statement) -->Line_8 $$ PsiCodeBlock codeBlock = null[ CD ]
Line_30 $$ if (ignoreInThenBranch && isInThenBranch(statement)) -->Line_31 $$ return[ CD ]
Line_2 $$ public void visitReturnStatement(@NotNull PsiReturnStatement statement) -->Line_7 $$ final PsiElement methodParent = PsiTreeUtil.getParentOfType(statement, PsiMethod.class, PsiLambdaExpression.class)[ FD ]
Line_24 $$ if (codeBlock == null) -->Line_25 $$ return[ CD ]
Line_10 $$ if (methodParent instanceof PsiMethod) -->Line_13 $$ constructor = method.isConstructor()[ CD ]
Line_14 $$ if (methodParent instanceof PsiLambdaExpression) -->Line_17 $$ final PsiElement lambdaBody = lambdaExpression.getBody()[ CD ]
Line_17 $$ final PsiElement lambdaBody = lambdaExpression.getBody()-->Line_18 $$ if (lambdaBody instanceof PsiCodeBlock) [ FD ]
Line_2 $$ public void visitReturnStatement(@NotNull PsiReturnStatement statement) -->Line_30 $$ if (ignoreInThenBranch && isInThenBranch(statement)) [ CD ]
Line_2 $$ public void visitReturnStatement(@NotNull PsiReturnStatement statement) -->Line_10 $$ if (methodParent instanceof PsiMethod) [ CD ]
Line_10 $$ if (methodParent instanceof PsiMethod) -->Line_11 $$ final PsiMethod method = (PsiMethod) methodParent[ CD ]
Line_12 $$ codeBlock = method.getBody()-->Line_27 $$ if (!ControlFlowUtils.blockCompletesWithStatement(codeBlock, statement)) [ FD ]
Line_11 $$ final PsiMethod method = (PsiMethod) methodParent-->Line_13 $$ constructor = method.isConstructor()[ FD ]
Line_9 $$ final boolean constructor-->Line_15 $$ constructor = false[ FD ]
Line_2 $$ public void visitReturnStatement(@NotNull PsiReturnStatement statement) -->Line_4 $$ if (statement.getReturnValue() != null) [ FD ]
Line_13 $$ constructor = method.isConstructor()-->Line_33 $$ registerStatementError(statement, Boolean.valueOf(constructor))[ FD ]
Line_8 $$ PsiCodeBlock codeBlock = null-->Line_12 $$ codeBlock = method.getBody()[ FD ]
