Line_6 $$ final RefMethod refMethod = (RefMethod) refEntity-->Line_7 $$ final Boolean alreadyProcessed = refMethod.getUserData(ALWAYS_CONSTANT)[ FD ]
Line_28 $$ final List<ProblemDescriptor> out = new ArrayList<ProblemDescriptor>()-->Line_35 $$ out.add(manager.createProblemDescriptor(identifier, InspectionGadgetsBundle.message("method.return.always.constant.problem.descriptor"), false, null, ProblemHighlightType.GENERIC_ERROR_OR_WARNING))[ FD ]
Line_23 $$ final PsiMethod siblingPsiMethod = (PsiMethod) siblingMethod.getElement()-->Line_24 $$ if (method.getBody() != null && !alwaysReturnsConstant(siblingPsiMethod)) [ FD ]
Line_2 $$ public CommonProblemDescriptor[] checkElement(@NotNull RefEntity refEntity, @NotNull AnalysisScope scope, @NotNull InspectionManager manager, @NotNull GlobalInspectionContext globalContext) -->Line_35 $$ out.add(manager.createProblemDescriptor(identifier, InspectionGadgetsBundle.message("method.return.always.constant.problem.descriptor"), false, null, ProblemHighlightType.GENERIC_ERROR_OR_WARNING))[ FD ]
Line_31 $$ final PsiIdentifier identifier = siblingMethod.getNameIdentifier()-->Line_35 $$ out.add(manager.createProblemDescriptor(identifier, InspectionGadgetsBundle.message("method.return.always.constant.problem.descriptor"), false, null, ProblemHighlightType.GENERIC_ERROR_OR_WARNING))[ FD ]
Line_14 $$ final PsiMethod method = (PsiMethod) refMethod.getElement()-->Line_15 $$ if (method.getBody() == null) [ FD ]
Line_2 $$ public CommonProblemDescriptor[] checkElement(@NotNull RefEntity refEntity, @NotNull AnalysisScope scope, @NotNull InspectionManager manager, @NotNull GlobalInspectionContext globalContext) -->Line_3 $$ if (!(refEntity instanceof RefMethod)) [ CD ]
Line_22 $$ for (RefMethod siblingMethod : siblingMethods) -->Line_23 $$ final PsiMethod siblingPsiMethod = (PsiMethod) siblingMethod.getElement()[ FD ]
Line_15 $$ if (method.getBody() == null) -->Line_16 $$ return null[ CD ]
Line_7 $$ final Boolean alreadyProcessed = refMethod.getUserData(ALWAYS_CONSTANT)-->Line_8 $$ if (alreadyProcessed != null && alreadyProcessed.booleanValue()) [ FD ]
Line_2 $$ public CommonProblemDescriptor[] checkElement(@NotNull RefEntity refEntity, @NotNull AnalysisScope scope, @NotNull InspectionManager manager, @NotNull GlobalInspectionContext globalContext) -->Line_28 $$ final List<ProblemDescriptor> out = new ArrayList<ProblemDescriptor>()[ CD ]
Line_29 $$ for (RefMethod siblingRefMethod : siblingMethods) -->Line_36 $$ siblingRefMethod.putUserData(ALWAYS_CONSTANT, Boolean.valueOf(true))[ FD ]
Line_6 $$ final RefMethod refMethod = (RefMethod) refEntity-->Line_21 $$ final Set<RefMethod> siblingMethods = MethodInheritanceUtils.calculateSiblingMethods(refMethod)[ FD ]
Line_18 $$ if (!alwaysReturnsConstant(method)) -->Line_19 $$ return null[ CD ]
Line_24 $$ if (method.getBody() != null && !alwaysReturnsConstant(siblingPsiMethod)) -->Line_25 $$ return null[ CD ]
Line_2 $$ public CommonProblemDescriptor[] checkElement(@NotNull RefEntity refEntity, @NotNull AnalysisScope scope, @NotNull InspectionManager manager, @NotNull GlobalInspectionContext globalContext) -->Line_38 $$ return out.toArray(new ProblemDescriptor[out.size()])[ CD ]
Line_28 $$ final List<ProblemDescriptor> out = new ArrayList<ProblemDescriptor>()-->Line_38 $$ return out.toArray(new ProblemDescriptor[out.size()])[ FD ]
Line_2 $$ public CommonProblemDescriptor[] checkElement(@NotNull RefEntity refEntity, @NotNull AnalysisScope scope, @NotNull InspectionManager manager, @NotNull GlobalInspectionContext globalContext) -->Line_6 $$ final RefMethod refMethod = (RefMethod) refEntity[ CD ]
Line_6 $$ final RefMethod refMethod = (RefMethod) refEntity-->Line_14 $$ final PsiMethod method = (PsiMethod) refMethod.getElement()[ FD ]
Line_31 $$ final PsiIdentifier identifier = siblingMethod.getNameIdentifier()-->Line_32 $$ if (identifier == null) [ FD ]
Line_2 $$ public CommonProblemDescriptor[] checkElement(@NotNull RefEntity refEntity, @NotNull AnalysisScope scope, @NotNull InspectionManager manager, @NotNull GlobalInspectionContext globalContext) -->Line_11 $$ if (!(refMethod.getElement() instanceof PsiMethod)) [ CD ]
Line_2 $$ public CommonProblemDescriptor[] checkElement(@NotNull RefEntity refEntity, @NotNull AnalysisScope scope, @NotNull InspectionManager manager, @NotNull GlobalInspectionContext globalContext) -->Line_14 $$ final PsiMethod method = (PsiMethod) refMethod.getElement()[ CD ]
Line_3 $$ if (!(refEntity instanceof RefMethod)) -->Line_4 $$ return null[ CD ]
Line_2 $$ public CommonProblemDescriptor[] checkElement(@NotNull RefEntity refEntity, @NotNull AnalysisScope scope, @NotNull InspectionManager manager, @NotNull GlobalInspectionContext globalContext) -->Line_8 $$ if (alreadyProcessed != null && alreadyProcessed.booleanValue()) [ CD ]
Line_11 $$ if (!(refMethod.getElement() instanceof PsiMethod)) -->Line_12 $$ return null[ CD ]
Line_29 $$ for (RefMethod siblingRefMethod : siblingMethods) -->Line_30 $$ final PsiMethod siblingMethod = (PsiMethod) siblingRefMethod.getElement()[ FD ]
Line_2 $$ public CommonProblemDescriptor[] checkElement(@NotNull RefEntity refEntity, @NotNull AnalysisScope scope, @NotNull InspectionManager manager, @NotNull GlobalInspectionContext globalContext) -->Line_18 $$ if (!alwaysReturnsConstant(method)) [ CD ]
Line_8 $$ if (alreadyProcessed != null && alreadyProcessed.booleanValue()) -->Line_9 $$ return null[ CD ]
Line_14 $$ final PsiMethod method = (PsiMethod) refMethod.getElement()-->Line_18 $$ if (!alwaysReturnsConstant(method)) [ FD ]
Line_22 $$ for (RefMethod siblingMethod : siblingMethods) -->Line_31 $$ final PsiIdentifier identifier = siblingMethod.getNameIdentifier()[ FD ]
Line_6 $$ final RefMethod refMethod = (RefMethod) refEntity-->Line_11 $$ if (!(refMethod.getElement() instanceof PsiMethod)) [ FD ]
Line_2 $$ public CommonProblemDescriptor[] checkElement(@NotNull RefEntity refEntity, @NotNull AnalysisScope scope, @NotNull InspectionManager manager, @NotNull GlobalInspectionContext globalContext) -->Line_21 $$ final Set<RefMethod> siblingMethods = MethodInheritanceUtils.calculateSiblingMethods(refMethod)[ CD ]
Line_2 $$ public CommonProblemDescriptor[] checkElement(@NotNull RefEntity refEntity, @NotNull AnalysisScope scope, @NotNull InspectionManager manager, @NotNull GlobalInspectionContext globalContext) -->Line_7 $$ final Boolean alreadyProcessed = refMethod.getUserData(ALWAYS_CONSTANT)[ CD ]
Line_2 $$ public CommonProblemDescriptor[] checkElement(@NotNull RefEntity refEntity, @NotNull AnalysisScope scope, @NotNull InspectionManager manager, @NotNull GlobalInspectionContext globalContext) -->Line_15 $$ if (method.getBody() == null) [ CD ]
Line_14 $$ final PsiMethod method = (PsiMethod) refMethod.getElement()-->Line_24 $$ if (method.getBody() != null && !alwaysReturnsConstant(siblingPsiMethod)) [ FD ]
