Line_5 $$ List<PluginId> counters-->Line_9 $$ Collections.sort(counters, new Comparator<PluginId>() [ FD ]
Line_9 $$ Collections.sort(counters, new Comparator<PluginId>() -->Line_11 $$ return myClassCounts.get(o2) - myClassCounts.get(o1)[ CD ]
Line_2 $$ public void dumpPluginClassStatistics() -->Line_9 $$ Collections.sort(counters, new Comparator<PluginId>() [ CD ]
Line_7 $$ counters = new ArrayList(Arrays.asList(myClassCounts.keys()))-->Line_9 $$ Collections.sort(counters, new Comparator<PluginId>() [ FD ]
Line_2 $$ public void dumpPluginClassStatistics() -->Line_5 $$ List<PluginId> counters[ CD ]
Line_3 $$ if (!Boolean.valueOf(System.getProperty("idea.is.internal")).booleanValue())-->Line_4 $$ return[ CD ]
Line_2 $$ public void dumpPluginClassStatistics() -->Line_3 $$ if (!Boolean.valueOf(System.getProperty("idea.is.internal")).booleanValue())[ CD ]
Line_5 $$ List<PluginId> counters-->Line_7 $$ counters = new ArrayList(Arrays.asList(myClassCounts.keys()))[ FD ]
Line_9 $$ Collections.sort(counters, new Comparator<PluginId>() -->Line_11 $$ return myClassCounts.get(o2) - myClassCounts.get(o1)[ FD ]
