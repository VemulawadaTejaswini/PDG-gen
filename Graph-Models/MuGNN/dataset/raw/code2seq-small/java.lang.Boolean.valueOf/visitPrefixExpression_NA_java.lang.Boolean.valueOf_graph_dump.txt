Line_10 $$ Object value = null-->Line_43 $$ value = operandValue instanceof Long ? Long.valueOf(~((Number) operandValue).longValue()) : Integer.valueOf(~((Number) operandValue).intValue())[ FD ]
Line_19 $$ value = new Float(-((Number) operandValue).floatValue())-->Line_27 $$ value = Integer.valueOf(-((Number) operandValue).intValue())[ FD ]
Line_2 $$ public void visitPrefixExpression(PsiPrefixExpression expression) -->Line_9 $$ IElementType tokenType = expression.getOperationTokenType()[ FD ]
Line_2 $$ public void visitPrefixExpression(PsiPrefixExpression expression) -->Line_9 $$ IElementType tokenType = expression.getOperationTokenType()[ CD ]
Line_35 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())-->Line_37 $$ value = operandValue[ FD ]
Line_2 $$ public void visitPrefixExpression(PsiPrefixExpression expression) -->Line_3 $$ PsiExpression operand = expression.getOperand()[ FD ]
Line_4 $$ Object operandValue = getStoredValue(operand)-->Line_15 $$ if (operandValue instanceof Double) [ FD ]
Line_45 $$ if (tokenType == JavaTokenType.EXCL) -->Line_46 $$ if (operandValue instanceof Boolean) [ CD ]
Line_35 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())-->Line_46 $$ if (operandValue instanceof Boolean) [ FD ]
Line_12 $$ if (operandValue instanceof Character)-->Line_13 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())[ CD ]
Line_4 $$ Object operandValue = getStoredValue(operand)-->Line_13 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())[ FD ]
Line_19 $$ value = new Float(-((Number) operandValue).floatValue())-->Line_43 $$ value = operandValue instanceof Long ? Long.valueOf(~((Number) operandValue).longValue()) : Integer.valueOf(~((Number) operandValue).intValue())[ FD ]
Line_16 $$ value = new Double(-((Number) operandValue).doubleValue())-->Line_22 $$ value = Long.valueOf(-((Number) operandValue).longValue())[ FD ]
Line_4 $$ Object operandValue = getStoredValue(operand)-->Line_12 $$ if (operandValue instanceof Character)[ FD ]
Line_13 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())-->Line_14 $$ if (operandValue instanceof Number) [ FD ]
Line_16 $$ value = new Double(-((Number) operandValue).doubleValue())-->Line_19 $$ value = new Float(-((Number) operandValue).floatValue())[ FD ]
Line_21 $$ if (operandValue instanceof Long) -->Line_22 $$ value = Long.valueOf(-((Number) operandValue).longValue())[ CD ]
Line_10 $$ Object value = null-->Line_37 $$ value = operandValue[ FD ]
Line_4 $$ Object operandValue = getStoredValue(operand)-->Line_14 $$ if (operandValue instanceof Number) [ FD ]
Line_10 $$ Object value = null-->Line_22 $$ value = Long.valueOf(-((Number) operandValue).longValue())[ FD ]
Line_10 $$ Object value = null-->Line_16 $$ value = new Double(-((Number) operandValue).doubleValue())[ FD ]
Line_33 $$ if (tokenType == JavaTokenType.PLUS) -->Line_36 $$ if (operandValue instanceof Number) [ CD ]
Line_9 $$ IElementType tokenType = expression.getOperationTokenType()-->Line_45 $$ if (tokenType == JavaTokenType.EXCL) [ FD ]
Line_16 $$ value = new Double(-((Number) operandValue).doubleValue())-->Line_20 $$ checkRealNumberOverflow(value, null, null, expression)[ FD ]
Line_16 $$ value = new Double(-((Number) operandValue).doubleValue())-->Line_47 $$ value = Boolean.valueOf(!((Boolean) operandValue).booleanValue())[ FD ]
Line_27 $$ value = Integer.valueOf(-((Number) operandValue).intValue())-->Line_43 $$ value = operandValue instanceof Long ? Long.valueOf(~((Number) operandValue).longValue()) : Integer.valueOf(~((Number) operandValue).intValue())[ FD ]
Line_19 $$ value = new Float(-((Number) operandValue).floatValue())-->Line_20 $$ checkRealNumberOverflow(value, null, null, expression)[ FD ]
Line_13 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())-->Line_36 $$ if (operandValue instanceof Number) [ FD ]
Line_11 $$ if (tokenType == JavaTokenType.MINUS) -->Line_12 $$ if (operandValue instanceof Character)[ CD ]
Line_36 $$ if (operandValue instanceof Number) -->Line_37 $$ value = operandValue[ CD ]
Line_15 $$ if (operandValue instanceof Double) -->Line_18 $$ if (operandValue instanceof Float) [ CD ]
Line_16 $$ value = new Double(-((Number) operandValue).doubleValue())-->Line_27 $$ value = Integer.valueOf(-((Number) operandValue).intValue())[ FD ]
Line_2 $$ public void visitPrefixExpression(PsiPrefixExpression expression) -->Line_3 $$ PsiExpression operand = expression.getOperand()[ CD ]
Line_46 $$ if (operandValue instanceof Boolean) -->Line_47 $$ value = Boolean.valueOf(!((Boolean) operandValue).booleanValue())[ CD ]
Line_4 $$ Object operandValue = getStoredValue(operand)-->Line_46 $$ if (operandValue instanceof Boolean) [ FD ]
Line_4 $$ Object operandValue = getStoredValue(operand)-->Line_5 $$ if (operandValue == null) [ FD ]
Line_4 $$ Object operandValue = getStoredValue(operand)-->Line_37 $$ value = operandValue[ FD ]
Line_19 $$ value = new Float(-((Number) operandValue).floatValue())-->Line_47 $$ value = Boolean.valueOf(!((Boolean) operandValue).booleanValue())[ FD ]
Line_27 $$ value = Integer.valueOf(-((Number) operandValue).intValue())-->Line_47 $$ value = Boolean.valueOf(!((Boolean) operandValue).booleanValue())[ FD ]
Line_13 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())-->Line_18 $$ if (operandValue instanceof Float) [ FD ]
Line_35 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())-->Line_36 $$ if (operandValue instanceof Number) [ FD ]
Line_13 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())-->Line_42 $$ if (isIntegral(operandValue)) [ FD ]
Line_13 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())-->Line_21 $$ if (operandValue instanceof Long) [ FD ]
Line_11 $$ if (tokenType == JavaTokenType.MINUS) -->Line_14 $$ if (operandValue instanceof Number) [ CD ]
Line_37 $$ value = operandValue-->Line_43 $$ value = operandValue instanceof Long ? Long.valueOf(~((Number) operandValue).longValue()) : Integer.valueOf(~((Number) operandValue).intValue())[ FD ]
Line_10 $$ Object value = null-->Line_47 $$ value = Boolean.valueOf(!((Boolean) operandValue).booleanValue())[ FD ]
Line_22 $$ value = Long.valueOf(-((Number) operandValue).longValue())-->Line_37 $$ value = operandValue[ FD ]
Line_4 $$ Object operandValue = getStoredValue(operand)-->Line_42 $$ if (isIntegral(operandValue)) [ FD ]
Line_13 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())-->Line_35 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())[ FD ]
Line_43 $$ value = operandValue instanceof Long ? Long.valueOf(~((Number) operandValue).longValue()) : Integer.valueOf(~((Number) operandValue).intValue())-->Line_47 $$ value = Boolean.valueOf(!((Boolean) operandValue).booleanValue())[ FD ]
Line_21 $$ if (operandValue instanceof Long) -->Line_23 $$ if (myThrowExceptionOnOverflow && !(operand instanceof PsiLiteralExpression) && ((Number) operandValue).longValue() == Long.MIN_VALUE) [ CD ]
Line_5 $$ if (operandValue == null) -->Line_7 $$ return[ CD ]
Line_3 $$ PsiExpression operand = expression.getOperand()-->Line_4 $$ Object operandValue = getStoredValue(operand)[ FD ]
Line_16 $$ value = new Double(-((Number) operandValue).doubleValue())-->Line_43 $$ value = operandValue instanceof Long ? Long.valueOf(~((Number) operandValue).longValue()) : Integer.valueOf(~((Number) operandValue).intValue())[ FD ]
Line_41 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())-->Line_46 $$ if (operandValue instanceof Boolean) [ FD ]
Line_35 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())-->Line_42 $$ if (isIntegral(operandValue)) [ FD ]
Line_37 $$ value = operandValue-->Line_47 $$ value = Boolean.valueOf(!((Boolean) operandValue).booleanValue())[ FD ]
Line_41 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())-->Line_42 $$ if (isIntegral(operandValue)) [ FD ]
Line_18 $$ if (operandValue instanceof Float) -->Line_20 $$ checkRealNumberOverflow(value, null, null, expression)[ CD ]
Line_10 $$ Object value = null-->Line_27 $$ value = Integer.valueOf(-((Number) operandValue).intValue())[ FD ]
Line_33 $$ if (tokenType == JavaTokenType.PLUS) -->Line_39 $$ if (tokenType == JavaTokenType.TILDE) [ CD ]
Line_22 $$ value = Long.valueOf(-((Number) operandValue).longValue())-->Line_47 $$ value = Boolean.valueOf(!((Boolean) operandValue).booleanValue())[ FD ]
Line_13 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())-->Line_37 $$ value = operandValue[ FD ]
Line_4 $$ Object operandValue = getStoredValue(operand)-->Line_34 $$ if (operandValue instanceof Character)[ FD ]
Line_10 $$ Object value = null-->Line_19 $$ value = new Float(-((Number) operandValue).floatValue())[ FD ]
Line_22 $$ value = Long.valueOf(-((Number) operandValue).longValue())-->Line_27 $$ value = Integer.valueOf(-((Number) operandValue).intValue())[ FD ]
Line_2 $$ public void visitPrefixExpression(PsiPrefixExpression expression) -->Line_20 $$ checkRealNumberOverflow(value, null, null, expression)[ FD ]
Line_13 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())-->Line_46 $$ if (operandValue instanceof Boolean) [ FD ]
Line_16 $$ value = new Double(-((Number) operandValue).doubleValue())-->Line_37 $$ value = operandValue[ FD ]
Line_21 $$ if (operandValue instanceof Long) -->Line_28 $$ if (myThrowExceptionOnOverflow && !(operand instanceof PsiLiteralExpression) && ((Number) operandValue).intValue() == Integer.MIN_VALUE) [ CD ]
Line_4 $$ Object operandValue = getStoredValue(operand)-->Line_35 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())[ FD ]
Line_9 $$ IElementType tokenType = expression.getOperationTokenType()-->Line_39 $$ if (tokenType == JavaTokenType.TILDE) [ FD ]
Line_19 $$ value = new Float(-((Number) operandValue).floatValue())-->Line_37 $$ value = operandValue[ FD ]
Line_35 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())-->Line_40 $$ if (operandValue instanceof Character)[ FD ]
Line_4 $$ Object operandValue = getStoredValue(operand)-->Line_41 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())[ FD ]
Line_2 $$ public void visitPrefixExpression(PsiPrefixExpression expression) -->Line_10 $$ Object value = null[ CD ]
Line_4 $$ Object operandValue = getStoredValue(operand)-->Line_36 $$ if (operandValue instanceof Number) [ FD ]
Line_16 $$ value = new Double(-((Number) operandValue).doubleValue())-->Line_17 $$ checkRealNumberOverflow(value, null, null, expression)[ FD ]
Line_9 $$ IElementType tokenType = expression.getOperationTokenType()-->Line_33 $$ if (tokenType == JavaTokenType.PLUS) [ FD ]
Line_4 $$ Object operandValue = getStoredValue(operand)-->Line_21 $$ if (operandValue instanceof Long) [ FD ]
Line_39 $$ if (tokenType == JavaTokenType.TILDE) -->Line_45 $$ if (tokenType == JavaTokenType.EXCL) [ CD ]
Line_13 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())-->Line_15 $$ if (operandValue instanceof Double) [ FD ]
Line_42 $$ if (isIntegral(operandValue)) -->Line_43 $$ value = operandValue instanceof Long ? Long.valueOf(~((Number) operandValue).longValue()) : Integer.valueOf(~((Number) operandValue).intValue())[ CD ]
Line_34 $$ if (operandValue instanceof Character)-->Line_35 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())[ CD ]
Line_13 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())-->Line_41 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())[ FD ]
Line_22 $$ value = Long.valueOf(-((Number) operandValue).longValue())-->Line_43 $$ value = operandValue instanceof Long ? Long.valueOf(~((Number) operandValue).longValue()) : Integer.valueOf(~((Number) operandValue).intValue())[ FD ]
Line_4 $$ Object operandValue = getStoredValue(operand)-->Line_40 $$ if (operandValue instanceof Character)[ FD ]
Line_40 $$ if (operandValue instanceof Character)-->Line_41 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())[ CD ]
Line_2 $$ public void visitPrefixExpression(PsiPrefixExpression expression) -->Line_17 $$ checkRealNumberOverflow(value, null, null, expression)[ FD ]
Line_39 $$ if (tokenType == JavaTokenType.TILDE) -->Line_40 $$ if (operandValue instanceof Character)[ CD ]
Line_13 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())-->Line_34 $$ if (operandValue instanceof Character)[ FD ]
Line_15 $$ if (operandValue instanceof Double) -->Line_17 $$ checkRealNumberOverflow(value, null, null, expression)[ CD ]
Line_27 $$ value = Integer.valueOf(-((Number) operandValue).intValue())-->Line_37 $$ value = operandValue[ FD ]
Line_10 $$ Object value = null-->Line_20 $$ checkRealNumberOverflow(value, null, null, expression)[ FD ]
Line_4 $$ Object operandValue = getStoredValue(operand)-->Line_18 $$ if (operandValue instanceof Float) [ FD ]
Line_18 $$ if (operandValue instanceof Float) -->Line_19 $$ value = new Float(-((Number) operandValue).floatValue())[ CD ]
Line_2 $$ public void visitPrefixExpression(PsiPrefixExpression expression) -->Line_5 $$ if (operandValue == null) [ CD ]
Line_2 $$ public void visitPrefixExpression(PsiPrefixExpression expression) -->Line_4 $$ Object operandValue = getStoredValue(operand)[ CD ]
Line_13 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())-->Line_40 $$ if (operandValue instanceof Character)[ FD ]
Line_21 $$ if (operandValue instanceof Long) -->Line_27 $$ value = Integer.valueOf(-((Number) operandValue).intValue())[ CD ]
Line_15 $$ if (operandValue instanceof Double) -->Line_16 $$ value = new Double(-((Number) operandValue).doubleValue())[ CD ]
Line_33 $$ if (tokenType == JavaTokenType.PLUS) -->Line_34 $$ if (operandValue instanceof Character)[ CD ]
Line_35 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())-->Line_41 $$ operandValue = Integer.valueOf(((Character) operandValue).charValue())[ FD ]
Line_11 $$ if (tokenType == JavaTokenType.MINUS) -->Line_33 $$ if (tokenType == JavaTokenType.PLUS) [ CD ]
Line_18 $$ if (operandValue instanceof Float) -->Line_21 $$ if (operandValue instanceof Long) [ CD ]
Line_9 $$ IElementType tokenType = expression.getOperationTokenType()-->Line_11 $$ if (tokenType == JavaTokenType.MINUS) [ FD ]
Line_19 $$ value = new Float(-((Number) operandValue).floatValue())-->Line_22 $$ value = Long.valueOf(-((Number) operandValue).longValue())[ FD ]
Line_39 $$ if (tokenType == JavaTokenType.TILDE) -->Line_42 $$ if (isIntegral(operandValue)) [ CD ]
Line_14 $$ if (operandValue instanceof Number) -->Line_15 $$ if (operandValue instanceof Double) [ CD ]
Line_2 $$ public void visitPrefixExpression(PsiPrefixExpression expression) -->Line_11 $$ if (tokenType == JavaTokenType.MINUS) [ CD ]
Line_10 $$ Object value = null-->Line_17 $$ checkRealNumberOverflow(value, null, null, expression)[ FD ]
