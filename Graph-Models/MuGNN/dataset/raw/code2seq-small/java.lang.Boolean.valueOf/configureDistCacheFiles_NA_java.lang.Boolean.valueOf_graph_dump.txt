Line_5 $$ if (files != null) -->Line_11 $$ String user = jobConf.getUser()[ CD ]
Line_5 $$ if (files != null) -->Line_9 $$ String[] timeStamps = jobConf.getStrings(MRJobConfig.CACHE_FILE_TIMESTAMPS)[ CD ]
Line_3 $$ if (shouldEmulateDistCacheLoad()) -->Line_5 $$ if (files != null) [ CD ]
Line_2 $$ void configureDistCacheFiles(Configuration conf, JobConf jobConf) throws IOException -->Line_4 $$ String[] files = jobConf.getStrings(MRJobConfig.CACHE_FILES)[ FD ]
Line_14 $$ if (isLocalDistCacheFile(files[i], user, visibility)) -->Line_21 $$ String mappedPath = mapDistCacheFilePath(files[i], timeStamps[i], visibility, user)[ CD ]
Line_5 $$ if (files != null) -->Line_8 $$ String[] visibilities = jobConf.getStrings(MRJobConfig.CACHE_FILE_VISIBILITIES)[ CD ]
Line_5 $$ if (files != null) -->Line_12 $$ for (int i = 0; i < files.length; i++) [ CD ]
Line_2 $$ void configureDistCacheFiles(Configuration conf, JobConf jobConf) throws IOException -->Line_9 $$ String[] timeStamps = jobConf.getStrings(MRJobConfig.CACHE_FILE_TIMESTAMPS)[ FD ]
Line_17 $$ Path mappedLocalFilePath = PseudoLocalFs.generateFilePath(fileId, fileSize).makeQualified(pseudoLocalFs.getUri(), pseudoLocalFs.getWorkingDirectory())-->Line_18 $$ pseudoLocalFs.create(mappedLocalFilePath)[ FD ]
Line_13 $$ boolean visibility = (visibilities == null) ? true : Boolean.valueOf(visibilities[i])-->Line_14 $$ if (isLocalDistCacheFile(files[i], user, visibility)) [ FD ]
Line_4 $$ String[] files = jobConf.getStrings(MRJobConfig.CACHE_FILES)-->Line_5 $$ if (files != null) [ FD ]
Line_14 $$ if (isLocalDistCacheFile(files[i], user, visibility)) -->Line_22 $$ cacheFiles.add(mappedPath)[ CD ]
Line_6 $$ List<String> cacheFiles = new ArrayList<String>()-->Line_26 $$ conf.setStrings(MRJobConfig.CACHE_FILES, cacheFiles.toArray(new String[cacheFiles.size()]))[ FD ]
Line_2 $$ void configureDistCacheFiles(Configuration conf, JobConf jobConf) throws IOException -->Line_3 $$ if (shouldEmulateDistCacheLoad()) [ CD ]
Line_2 $$ void configureDistCacheFiles(Configuration conf, JobConf jobConf) throws IOException -->Line_11 $$ String user = jobConf.getUser()[ FD ]
Line_11 $$ String user = jobConf.getUser()-->Line_14 $$ if (isLocalDistCacheFile(files[i], user, visibility)) [ FD ]
Line_25 $$ if (cacheFiles.size() > 0) -->Line_26 $$ conf.setStrings(MRJobConfig.CACHE_FILES, cacheFiles.toArray(new String[cacheFiles.size()]))[ CD ]
Line_28 $$ if (localCacheFiles.size() > 0) -->Line_29 $$ conf.setStrings("tmpfiles", localCacheFiles.toArray(new String[localCacheFiles.size()]))[ CD ]
Line_2 $$ void configureDistCacheFiles(Configuration conf, JobConf jobConf) throws IOException -->Line_10 $$ String[] fileSizes = jobConf.getStrings(MRJobConfig.CACHE_FILES_SIZES)[ FD ]
Line_13 $$ boolean visibility = (visibilities == null) ? true : Boolean.valueOf(visibilities[i])-->Line_21 $$ String mappedPath = mapDistCacheFilePath(files[i], timeStamps[i], visibility, user)[ FD ]
Line_5 $$ if (files != null) -->Line_10 $$ String[] fileSizes = jobConf.getStrings(MRJobConfig.CACHE_FILES_SIZES)[ CD ]
Line_3 $$ if (shouldEmulateDistCacheLoad()) -->Line_4 $$ String[] files = jobConf.getStrings(MRJobConfig.CACHE_FILES)[ CD ]
Line_14 $$ if (isLocalDistCacheFile(files[i], user, visibility)) -->Line_15 $$ String fileId = MD5Hash.digest(files[i] + timeStamps[i]).toString()[ CD ]
Line_5 $$ if (files != null) -->Line_7 $$ List<String> localCacheFiles = new ArrayList<String>()[ CD ]
Line_17 $$ Path mappedLocalFilePath = PseudoLocalFs.generateFilePath(fileId, fileSize).makeQualified(pseudoLocalFs.getUri(), pseudoLocalFs.getWorkingDirectory())-->Line_19 $$ localCacheFiles.add(mappedLocalFilePath.toUri().toString())[ FD ]
Line_2 $$ void configureDistCacheFiles(Configuration conf, JobConf jobConf) throws IOException -->Line_26 $$ conf.setStrings(MRJobConfig.CACHE_FILES, cacheFiles.toArray(new String[cacheFiles.size()]))[ FD ]
Line_7 $$ List<String> localCacheFiles = new ArrayList<String>()-->Line_29 $$ conf.setStrings("tmpfiles", localCacheFiles.toArray(new String[localCacheFiles.size()]))[ FD ]
Line_14 $$ if (isLocalDistCacheFile(files[i], user, visibility)) -->Line_17 $$ Path mappedLocalFilePath = PseudoLocalFs.generateFilePath(fileId, fileSize).makeQualified(pseudoLocalFs.getUri(), pseudoLocalFs.getWorkingDirectory())[ CD ]
Line_5 $$ if (files != null) -->Line_28 $$ if (localCacheFiles.size() > 0) [ CD ]
Line_7 $$ List<String> localCacheFiles = new ArrayList<String>()-->Line_28 $$ if (localCacheFiles.size() > 0) [ FD ]
Line_11 $$ String user = jobConf.getUser()-->Line_21 $$ String mappedPath = mapDistCacheFilePath(files[i], timeStamps[i], visibility, user)[ FD ]
Line_14 $$ if (isLocalDistCacheFile(files[i], user, visibility)) -->Line_18 $$ pseudoLocalFs.create(mappedLocalFilePath)[ CD ]
Line_21 $$ String mappedPath = mapDistCacheFilePath(files[i], timeStamps[i], visibility, user)-->Line_22 $$ cacheFiles.add(mappedPath)[ FD ]
Line_14 $$ if (isLocalDistCacheFile(files[i], user, visibility)) -->Line_19 $$ localCacheFiles.add(mappedLocalFilePath.toUri().toString())[ CD ]
Line_5 $$ if (files != null) -->Line_25 $$ if (cacheFiles.size() > 0) [ CD ]
Line_14 $$ if (isLocalDistCacheFile(files[i], user, visibility)) -->Line_16 $$ long fileSize = Long.valueOf(fileSizes[i])[ CD ]
Line_7 $$ List<String> localCacheFiles = new ArrayList<String>()-->Line_19 $$ localCacheFiles.add(mappedLocalFilePath.toUri().toString())[ FD ]
Line_6 $$ List<String> cacheFiles = new ArrayList<String>()-->Line_25 $$ if (cacheFiles.size() > 0) [ FD ]
Line_5 $$ if (files != null) -->Line_6 $$ List<String> cacheFiles = new ArrayList<String>()[ CD ]
Line_2 $$ void configureDistCacheFiles(Configuration conf, JobConf jobConf) throws IOException -->Line_8 $$ String[] visibilities = jobConf.getStrings(MRJobConfig.CACHE_FILE_VISIBILITIES)[ FD ]
Line_15 $$ String fileId = MD5Hash.digest(files[i] + timeStamps[i]).toString()-->Line_17 $$ Path mappedLocalFilePath = PseudoLocalFs.generateFilePath(fileId, fileSize).makeQualified(pseudoLocalFs.getUri(), pseudoLocalFs.getWorkingDirectory())[ FD ]
Line_2 $$ void configureDistCacheFiles(Configuration conf, JobConf jobConf) throws IOException -->Line_29 $$ conf.setStrings("tmpfiles", localCacheFiles.toArray(new String[localCacheFiles.size()]))[ FD ]
Line_12 $$ for (int i = 0; i < files.length; i++) -->Line_14 $$ if (isLocalDistCacheFile(files[i], user, visibility)) [ CD ]
Line_6 $$ List<String> cacheFiles = new ArrayList<String>()-->Line_22 $$ cacheFiles.add(mappedPath)[ FD ]
Line_16 $$ long fileSize = Long.valueOf(fileSizes[i])-->Line_17 $$ Path mappedLocalFilePath = PseudoLocalFs.generateFilePath(fileId, fileSize).makeQualified(pseudoLocalFs.getUri(), pseudoLocalFs.getWorkingDirectory())[ FD ]
Line_12 $$ for (int i = 0; i < files.length; i++) -->Line_13 $$ boolean visibility = (visibilities == null) ? true : Boolean.valueOf(visibilities[i])[ CD ]
