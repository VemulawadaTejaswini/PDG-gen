Line_3 $$ String keystrokeString = element.getAttributeValue(KEYSTROKE_ATTR_NAME)-->Line_4 $$ if (keystrokeString == null || keystrokeString.trim().isEmpty()) [ FD ]
Line_15 $$ String keymapName = element.getAttributeValue(KEYMAP_ATTR_NAME)-->Line_16 $$ if (keymapName == null || keymapName.isEmpty()) [ FD ]
Line_20 $$ Keymap keymap = KeymapManager.getInstance().getKeymap(keymapName)-->Line_29 $$ keymap.addShortcut(actionId, shortcut)[ FD ]
Line_2 $$ private static void processMouseShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_29 $$ keymap.addShortcut(actionId, shortcut)[ FD ]
Line_2 $$ private static void processMouseShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_8 $$ MouseShortcut shortcut[ CD ]
Line_3 $$ String keystrokeString = element.getAttributeValue(KEYSTROKE_ATTR_NAME)-->Line_10 $$ shortcut = KeymapUtil.parseMouseShortcut(keystrokeString)[ FD ]
Line_2 $$ private static void processMouseShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_26 $$ if (Boolean.valueOf(removeOption)) [ CD ]
Line_16 $$ if (keymapName == null || keymapName.isEmpty()) -->Line_18 $$ return[ CD ]
Line_2 $$ private static void processMouseShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_22 $$ reportActionError(pluginId, "keymap \"" + keymapName + "\" not found")[ FD ]
Line_20 $$ Keymap keymap = KeymapManager.getInstance().getKeymap(keymapName)-->Line_21 $$ if (keymap == null) [ FD ]
Line_2 $$ private static void processMouseShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_20 $$ Keymap keymap = KeymapManager.getInstance().getKeymap(keymapName)[ CD ]
Line_21 $$ if (keymap == null) -->Line_22 $$ reportActionError(pluginId, "keymap \"" + keymapName + "\" not found")[ CD ]
Line_26 $$ if (Boolean.valueOf(removeOption)) -->Line_29 $$ keymap.addShortcut(actionId, shortcut)[ CD ]
Line_2 $$ private static void processMouseShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_15 $$ String keymapName = element.getAttributeValue(KEYMAP_ATTR_NAME)[ CD ]
Line_2 $$ private static void processMouseShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_15 $$ String keymapName = element.getAttributeValue(KEYMAP_ATTR_NAME)[ FD ]
Line_2 $$ private static void processMouseShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_3 $$ String keystrokeString = element.getAttributeValue(KEYSTROKE_ATTR_NAME)[ FD ]
Line_8 $$ MouseShortcut shortcut-->Line_27 $$ keymap.removeShortcut(actionId, shortcut)[ FD ]
Line_25 $$ final String removeOption = element.getAttributeValue(REMOVE_SHORTCUT_ATTR_NAME)-->Line_26 $$ if (Boolean.valueOf(removeOption)) [ FD ]
Line_2 $$ private static void processMouseShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_16 $$ if (keymapName == null || keymapName.isEmpty()) [ CD ]
Line_2 $$ private static void processMouseShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_12 $$ reportActionError(pluginId, "\"keystroke\" attribute has invalid value for action with id=" + actionId)[ FD ]
Line_20 $$ Keymap keymap = KeymapManager.getInstance().getKeymap(keymapName)-->Line_27 $$ keymap.removeShortcut(actionId, shortcut)[ FD ]
Line_2 $$ private static void processMouseShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_27 $$ keymap.removeShortcut(actionId, shortcut)[ FD ]
Line_21 $$ if (keymap == null) -->Line_23 $$ return[ CD ]
Line_2 $$ private static void processMouseShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_3 $$ String keystrokeString = element.getAttributeValue(KEYSTROKE_ATTR_NAME)[ CD ]
Line_4 $$ if (keystrokeString == null || keystrokeString.trim().isEmpty()) -->Line_5 $$ reportActionError(pluginId, "\"keystroke\" attribute must be specified for action with id=" + actionId)[ CD ]
Line_26 $$ if (Boolean.valueOf(removeOption)) -->Line_27 $$ keymap.removeShortcut(actionId, shortcut)[ CD ]
Line_16 $$ if (keymapName == null || keymapName.isEmpty()) -->Line_17 $$ reportActionError(pluginId, "attribute \"keymap\" should be defined")[ CD ]
Line_2 $$ private static void processMouseShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_25 $$ final String removeOption = element.getAttributeValue(REMOVE_SHORTCUT_ATTR_NAME)[ CD ]
Line_8 $$ MouseShortcut shortcut-->Line_29 $$ keymap.addShortcut(actionId, shortcut)[ FD ]
Line_4 $$ if (keystrokeString == null || keystrokeString.trim().isEmpty()) -->Line_6 $$ return[ CD ]
Line_2 $$ private static void processMouseShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_5 $$ reportActionError(pluginId, "\"keystroke\" attribute must be specified for action with id=" + actionId)[ FD ]
Line_2 $$ private static void processMouseShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_17 $$ reportActionError(pluginId, "attribute \"keymap\" should be defined")[ FD ]
Line_15 $$ String keymapName = element.getAttributeValue(KEYMAP_ATTR_NAME)-->Line_20 $$ Keymap keymap = KeymapManager.getInstance().getKeymap(keymapName)[ FD ]
Line_2 $$ private static void processMouseShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_4 $$ if (keystrokeString == null || keystrokeString.trim().isEmpty()) [ CD ]
Line_10 $$ shortcut = KeymapUtil.parseMouseShortcut(keystrokeString)-->Line_29 $$ keymap.addShortcut(actionId, shortcut)[ FD ]
Line_10 $$ shortcut = KeymapUtil.parseMouseShortcut(keystrokeString)-->Line_27 $$ keymap.removeShortcut(actionId, shortcut)[ FD ]
Line_2 $$ private static void processMouseShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_21 $$ if (keymap == null) [ CD ]
Line_8 $$ MouseShortcut shortcut-->Line_10 $$ shortcut = KeymapUtil.parseMouseShortcut(keystrokeString)[ FD ]
Line_2 $$ private static void processMouseShortcutNode(Element element, String actionId, PluginId pluginId) -->Line_25 $$ final String removeOption = element.getAttributeValue(REMOVE_SHORTCUT_ATTR_NAME)[ FD ]
