Line_2 $$ public static void main(String[] args) throws Exception -->Line_14 $$ int fileSize = 1000 * blockSize + 100[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_24 $$ for (int i = 0; i < threadCount; i++) [ CD ]
Line_9 $$ int threadCount = Integer.parseInt(args[2])-->Line_43 $$ for (int i = 0; i < threadCount; i++) [ FD ]
Line_10 $$ final Configuration conf = new Configuration()-->Line_11 $$ conf.setBoolean(DFSConfigKeys.DFS_CLIENT_READ_SHORTCIRCUIT_KEY, shortcircuit)[ FD ]
Line_17 $$ final FileSystem fs = FileSystem.get(conf)-->Line_18 $$ FSDataOutputStream stm = createFile(fs, file1, 1)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_20 $$ stm.close()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_43 $$ for (int i = 0; i < threadCount; i++) [ CD ]
Line_24 $$ for (int i = 0; i < threadCount; i++) -->Line_27 $$ for (int i = 0; i < iteration; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_47 $$ System.out.println("Iteration " + iteration + " took " + (end - start))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_23 $$ Thread[] threads = new Thread[threadCount][ CD ]
Line_17 $$ final FileSystem fs = FileSystem.get(conf)-->Line_30 $$ checkFileContent(fs.getUri(), file1, dataToWrite, 0, user, conf, true)[ FD ]
Line_14 $$ int fileSize = 1000 * blockSize + 100-->Line_15 $$ final byte[] dataToWrite = AppendTestUtil.randomBytes(seed, fileSize)[ FD ]
Line_3 $$ if (args.length != 3) -->Line_4 $$ System.out.println("Usage: test shortcircuit checksum threadCount")[ CD ]
Line_24 $$ for (int i = 0; i < threadCount; i++) -->Line_25 $$ threads[i] = new Thread() [ CD ]
Line_29 $$ String user = getCurrentUser()-->Line_30 $$ checkFileContent(fs.getUri(), file1, dataToWrite, 0, user, conf, true)[ FD ]
Line_27 $$ for (int i = 0; i < iteration; i++) -->Line_43 $$ for (int i = 0; i < threadCount; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_46 $$ long end = Time.now()[ CD ]
Line_17 $$ final FileSystem fs = FileSystem.get(conf)-->Line_48 $$ fs.delete(file1, false)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_10 $$ final Configuration conf = new Configuration()[ CD ]
Line_18 $$ FSDataOutputStream stm = createFile(fs, file1, 1)-->Line_20 $$ stm.close()[ FD ]
Line_24 $$ for (int i = 0; i < threadCount; i++) -->Line_43 $$ for (int i = 0; i < threadCount; i++) [ FD ]
Line_15 $$ final byte[] dataToWrite = AppendTestUtil.randomBytes(seed, fileSize)-->Line_30 $$ checkFileContent(fs.getUri(), file1, dataToWrite, 0, user, conf, true)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_19 $$ stm.write(dataToWrite)[ CD ]
Line_43 $$ for (int i = 0; i < threadCount; i++) -->Line_44 $$ threads[i].join()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_13 $$ conf.setBoolean(DFSConfigKeys.DFS_CLIENT_READ_SHORTCIRCUIT_SKIP_CHECKSUM_KEY, checksum)[ CD ]
Line_9 $$ int threadCount = Integer.parseInt(args[2])-->Line_40 $$ for (int i = 0; i < threadCount; i++) [ FD ]
Line_10 $$ final Configuration conf = new Configuration()-->Line_12 $$ conf.set(DFSConfigKeys.DFS_DOMAIN_SOCKET_PATH_KEY, "/tmp/TestShortCircuitLocalRead._PORT")[ FD ]
Line_8 $$ boolean checksum = Boolean.valueOf(args[1])-->Line_13 $$ conf.setBoolean(DFSConfigKeys.DFS_CLIENT_READ_SHORTCIRCUIT_SKIP_CHECKSUM_KEY, checksum)[ FD ]
Line_22 $$ final int iteration = 20-->Line_27 $$ for (int i = 0; i < iteration; i++) [ FD ]
Line_10 $$ final Configuration conf = new Configuration()-->Line_13 $$ conf.setBoolean(DFSConfigKeys.DFS_CLIENT_READ_SHORTCIRCUIT_SKIP_CHECKSUM_KEY, checksum)[ FD ]
Line_10 $$ final Configuration conf = new Configuration()-->Line_17 $$ final FileSystem fs = FileSystem.get(conf)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ boolean checksum = Boolean.valueOf(args[1])[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_12 $$ conf.set(DFSConfigKeys.DFS_DOMAIN_SOCKET_PATH_KEY, "/tmp/TestShortCircuitLocalRead._PORT")[ CD ]
Line_7 $$ boolean shortcircuit = Boolean.valueOf(args[0])-->Line_11 $$ conf.setBoolean(DFSConfigKeys.DFS_CLIENT_READ_SHORTCIRCUIT_KEY, shortcircuit)[ FD ]
Line_40 $$ for (int i = 0; i < threadCount; i++) -->Line_43 $$ for (int i = 0; i < threadCount; i++) [ FD ]
Line_16 $$ final Path file1 = new Path("filelocal.dat")-->Line_30 $$ checkFileContent(fs.getUri(), file1, dataToWrite, 0, user, conf, true)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_15 $$ final byte[] dataToWrite = AppendTestUtil.randomBytes(seed, fileSize)[ CD ]
Line_15 $$ final byte[] dataToWrite = AppendTestUtil.randomBytes(seed, fileSize)-->Line_19 $$ stm.write(dataToWrite)[ FD ]
Line_24 $$ for (int i = 0; i < threadCount; i++) -->Line_40 $$ for (int i = 0; i < threadCount; i++) [ FD ]
Line_10 $$ final Configuration conf = new Configuration()-->Line_30 $$ checkFileContent(fs.getUri(), file1, dataToWrite, 0, user, conf, true)[ FD ]
Line_9 $$ int threadCount = Integer.parseInt(args[2])-->Line_24 $$ for (int i = 0; i < threadCount; i++) [ FD ]
Line_16 $$ final Path file1 = new Path("filelocal.dat")-->Line_18 $$ FSDataOutputStream stm = createFile(fs, file1, 1)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_9 $$ int threadCount = Integer.parseInt(args[2])[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ boolean shortcircuit = Boolean.valueOf(args[0])[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_22 $$ final int iteration = 20[ CD ]
Line_40 $$ for (int i = 0; i < threadCount; i++) -->Line_41 $$ threads[i].start()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_17 $$ final FileSystem fs = FileSystem.get(conf)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ if (args.length != 3) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_48 $$ fs.delete(file1, false)[ CD ]
Line_16 $$ final Path file1 = new Path("filelocal.dat")-->Line_48 $$ fs.delete(file1, false)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_11 $$ conf.setBoolean(DFSConfigKeys.DFS_CLIENT_READ_SHORTCIRCUIT_KEY, shortcircuit)[ CD ]
Line_25 $$ threads[i] = new Thread() -->Line_27 $$ for (int i = 0; i < iteration; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_40 $$ for (int i = 0; i < threadCount; i++) [ CD ]
Line_18 $$ FSDataOutputStream stm = createFile(fs, file1, 1)-->Line_19 $$ stm.write(dataToWrite)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_21 $$ long start = Time.now()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_18 $$ FSDataOutputStream stm = createFile(fs, file1, 1)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_16 $$ final Path file1 = new Path("filelocal.dat")[ CD ]
Line_27 $$ for (int i = 0; i < iteration; i++) -->Line_40 $$ for (int i = 0; i < threadCount; i++) [ FD ]
Line_3 $$ if (args.length != 3) -->Line_5 $$ System.exit(1)[ CD ]
