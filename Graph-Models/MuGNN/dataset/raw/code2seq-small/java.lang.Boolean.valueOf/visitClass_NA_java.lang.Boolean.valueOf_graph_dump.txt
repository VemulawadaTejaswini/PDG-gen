Line_2 $$ public void visitClass(@NotNull PsiClass aClass) -->Line_15 $$ if (!SerializationUtils.isSerializable(aClass)) [ CD ]
Line_2 $$ public void visitClass(@NotNull PsiClass aClass) -->Line_11 $$ final boolean wrongType = !PsiType.LONG.equals(type)[ CD ]
Line_6 $$ final PsiField field = aClass.findFieldByName(HardcodedMethodConstants.SERIAL_VERSION_UID, false)-->Line_12 $$ if (field.hasModifierProperty(PsiModifier.STATIC) && field.hasModifierProperty(PsiModifier.PRIVATE) && field.hasModifierProperty(PsiModifier.FINAL) && !wrongType) [ FD ]
Line_2 $$ public void visitClass(@NotNull PsiClass aClass) -->Line_12 $$ if (field.hasModifierProperty(PsiModifier.STATIC) && field.hasModifierProperty(PsiModifier.PRIVATE) && field.hasModifierProperty(PsiModifier.FINAL) && !wrongType) [ CD ]
Line_2 $$ public void visitClass(@NotNull PsiClass aClass) -->Line_18 $$ registerFieldError(field, Boolean.valueOf(wrongType))[ CD ]
Line_11 $$ final boolean wrongType = !PsiType.LONG.equals(type)-->Line_12 $$ if (field.hasModifierProperty(PsiModifier.STATIC) && field.hasModifierProperty(PsiModifier.PRIVATE) && field.hasModifierProperty(PsiModifier.FINAL) && !wrongType) [ FD ]
Line_2 $$ public void visitClass(@NotNull PsiClass aClass) -->Line_15 $$ if (!SerializationUtils.isSerializable(aClass)) [ FD ]
Line_11 $$ final boolean wrongType = !PsiType.LONG.equals(type)-->Line_18 $$ registerFieldError(field, Boolean.valueOf(wrongType))[ FD ]
Line_2 $$ public void visitClass(@NotNull PsiClass aClass) -->Line_6 $$ final PsiField field = aClass.findFieldByName(HardcodedMethodConstants.SERIAL_VERSION_UID, false)[ CD ]
Line_3 $$ if (aClass.isInterface() || aClass.isAnnotationType()) -->Line_4 $$ return[ CD ]
Line_2 $$ public void visitClass(@NotNull PsiClass aClass) -->Line_3 $$ if (aClass.isInterface() || aClass.isAnnotationType()) [ FD ]
Line_6 $$ final PsiField field = aClass.findFieldByName(HardcodedMethodConstants.SERIAL_VERSION_UID, false)-->Line_18 $$ registerFieldError(field, Boolean.valueOf(wrongType))[ FD ]
Line_2 $$ public void visitClass(@NotNull PsiClass aClass) -->Line_3 $$ if (aClass.isInterface() || aClass.isAnnotationType()) [ CD ]
Line_2 $$ public void visitClass(@NotNull PsiClass aClass) -->Line_7 $$ if (field == null) [ CD ]
Line_2 $$ public void visitClass(@NotNull PsiClass aClass) -->Line_10 $$ final PsiType type = field.getType()[ CD ]
Line_12 $$ if (field.hasModifierProperty(PsiModifier.STATIC) && field.hasModifierProperty(PsiModifier.PRIVATE) && field.hasModifierProperty(PsiModifier.FINAL) && !wrongType) -->Line_13 $$ return[ CD ]
Line_2 $$ public void visitClass(@NotNull PsiClass aClass) -->Line_6 $$ final PsiField field = aClass.findFieldByName(HardcodedMethodConstants.SERIAL_VERSION_UID, false)[ FD ]
Line_6 $$ final PsiField field = aClass.findFieldByName(HardcodedMethodConstants.SERIAL_VERSION_UID, false)-->Line_7 $$ if (field == null) [ FD ]
Line_6 $$ final PsiField field = aClass.findFieldByName(HardcodedMethodConstants.SERIAL_VERSION_UID, false)-->Line_10 $$ final PsiType type = field.getType()[ FD ]
Line_10 $$ final PsiType type = field.getType()-->Line_11 $$ final boolean wrongType = !PsiType.LONG.equals(type)[ FD ]
Line_15 $$ if (!SerializationUtils.isSerializable(aClass)) -->Line_16 $$ return[ CD ]
Line_7 $$ if (field == null) -->Line_8 $$ return[ CD ]
