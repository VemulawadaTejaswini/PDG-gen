Line_9 $$ if (!borderNone) -->Line_29 $$ generator.push((String) null)[ CD ]
Line_4 $$ final StringDescriptor borderTitle = container.getBorderTitle()-->Line_31 $$ pushBorderProperties(container, generator, borderTitle, componentLocal)[ FD ]
Line_33 $$ StringDescriptor borderFactoryValue = (StringDescriptor) container.getDelegeeClientProperties().get(ourBorderFactoryClientProperty)-->Line_36 $$ container.getDelegeeClientProperties().put(ourBorderFactoryClientProperty, borderFactoryValue)[ FD ]
Line_7 $$ if (!borderNone || borderTitle != null) -->Line_33 $$ StringDescriptor borderFactoryValue = (StringDescriptor) container.getDelegeeClientProperties().get(ourBorderFactoryClientProperty)[ CD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_36 $$ container.getDelegeeClientProperties().put(ourBorderFactoryClientProperty, borderFactoryValue)[ FD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_24 $$ generator.invokeStatic(ourBorderFactoryType, new Method(borderFactoryMethodName, ourBorderType, new Type[] [ FD ]
Line_7 $$ if (!borderNone || borderTitle != null) -->Line_32 $$ Type borderFactoryType = ourBorderFactoryType[ CD ]
Line_34 $$ if (borderFactoryValue == null && borderTitle != null && Boolean.valueOf(System.getProperty("idea.is.internal")).booleanValue()) -->Line_35 $$ borderFactoryValue = StringDescriptor.create("com.intellij.ui.IdeBorderFactory$PlainSmallWithIndent")[ CD ]
Line_10 $$ if (borderType.equals(BorderType.LINE)) -->Line_17 $$ generator.invokeStatic(ourBorderFactoryType, new Method(borderFactoryMethodName, ourBorderType, new Type[] [ CD ]
Line_38 $$ if (borderFactoryValue != null && borderFactoryValue.getValue().length() != 0) -->Line_39 $$ borderFactoryType = typeFromClassName(borderFactoryValue.getValue())[ CD ]
Line_33 $$ StringDescriptor borderFactoryValue = (StringDescriptor) container.getDelegeeClientProperties().get(ourBorderFactoryClientProperty)-->Line_39 $$ borderFactoryType = typeFromClassName(borderFactoryValue.getValue())[ FD ]
Line_18 $$ if (borderType.equals(BorderType.EMPTY) && container.getBorderSize() != null) -->Line_22 $$ generator.push(size.bottom)[ CD ]
Line_35 $$ borderFactoryValue = StringDescriptor.create("com.intellij.ui.IdeBorderFactory$PlainSmallWithIndent")-->Line_39 $$ borderFactoryType = typeFromClassName(borderFactoryValue.getValue())[ FD ]
Line_6 $$ final boolean borderNone = borderType.equals(BorderType.NONE)-->Line_9 $$ if (!borderNone) [ FD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_4 $$ final StringDescriptor borderTitle = container.getBorderTitle()[ FD ]
Line_11 $$ if (container.getBorderColor() == null) -->Line_15 $$ pushPropValue(generator, Color.class.getName(), container.getBorderColor())[ CD ]
Line_18 $$ if (borderType.equals(BorderType.EMPTY) && container.getBorderSize() != null) -->Line_23 $$ generator.push(size.right)[ CD ]
Line_18 $$ if (borderType.equals(BorderType.EMPTY) && container.getBorderSize() != null) -->Line_26 $$ generator.invokeStatic(ourBorderFactoryType, new Method(borderFactoryMethodName, ourBorderType, new Type[0]))[ CD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_3 $$ final BorderType borderType = container.getBorderType()[ FD ]
Line_18 $$ if (borderType.equals(BorderType.EMPTY) && container.getBorderSize() != null) -->Line_24 $$ generator.invokeStatic(ourBorderFactoryType, new Method(borderFactoryMethodName, ourBorderType, new Type[] [ CD ]
Line_34 $$ if (borderFactoryValue == null && borderTitle != null && Boolean.valueOf(System.getProperty("idea.is.internal")).booleanValue()) -->Line_36 $$ container.getDelegeeClientProperties().put(ourBorderFactoryClientProperty, borderFactoryValue)[ CD ]
Line_7 $$ if (!borderNone || borderTitle != null) -->Line_38 $$ if (borderFactoryValue != null && borderFactoryValue.getValue().length() != 0) [ CD ]
Line_35 $$ borderFactoryValue = StringDescriptor.create("com.intellij.ui.IdeBorderFactory$PlainSmallWithIndent")-->Line_36 $$ container.getDelegeeClientProperties().put(ourBorderFactoryClientProperty, borderFactoryValue)[ FD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_21 $$ generator.push(size.left)[ FD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_26 $$ generator.invokeStatic(ourBorderFactoryType, new Method(borderFactoryMethodName, ourBorderType, new Type[0]))[ FD ]
Line_3 $$ final BorderType borderType = container.getBorderType()-->Line_10 $$ if (borderType.equals(BorderType.LINE)) [ FD ]
Line_11 $$ if (container.getBorderColor() == null) -->Line_12 $$ Type colorType = Type.getType(Color.class)[ CD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_3 $$ final BorderType borderType = container.getBorderType()[ CD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_15 $$ pushPropValue(generator, Color.class.getName(), container.getBorderColor())[ FD ]
Line_18 $$ if (borderType.equals(BorderType.EMPTY) && container.getBorderSize() != null) -->Line_21 $$ generator.push(size.left)[ CD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_7 $$ if (!borderNone || borderTitle != null) [ CD ]
Line_7 $$ if (!borderNone || borderTitle != null) -->Line_31 $$ pushBorderProperties(container, generator, borderTitle, componentLocal)[ CD ]
Line_7 $$ if (!borderNone || borderTitle != null) -->Line_42 $$ generator.invokeVirtual(Type.getType(JComponent.class), Method.getMethod("void setBorder(javax.swing.border.Border)"))[ CD ]
Line_3 $$ final BorderType borderType = container.getBorderType()-->Line_18 $$ if (borderType.equals(BorderType.EMPTY) && container.getBorderSize() != null) [ FD ]
Line_9 $$ if (!borderNone) -->Line_10 $$ if (borderType.equals(BorderType.LINE)) [ CD ]
Line_12 $$ Type colorType = Type.getType(Color.class)-->Line_13 $$ generator.getStatic(colorType, "black", colorType)[ FD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_11 $$ if (container.getBorderColor() == null) [ FD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_20 $$ generator.push(size.top)[ FD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_22 $$ generator.push(size.bottom)[ FD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_29 $$ generator.push((String) null)[ FD ]
Line_33 $$ StringDescriptor borderFactoryValue = (StringDescriptor) container.getDelegeeClientProperties().get(ourBorderFactoryClientProperty)-->Line_35 $$ borderFactoryValue = StringDescriptor.create("com.intellij.ui.IdeBorderFactory$PlainSmallWithIndent")[ FD ]
Line_7 $$ if (!borderNone || borderTitle != null) -->Line_34 $$ if (borderFactoryValue == null && borderTitle != null && Boolean.valueOf(System.getProperty("idea.is.internal")).booleanValue()) [ CD ]
Line_32 $$ Type borderFactoryType = ourBorderFactoryType-->Line_39 $$ borderFactoryType = typeFromClassName(borderFactoryValue.getValue())[ FD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_31 $$ pushBorderProperties(container, generator, borderTitle, componentLocal)[ FD ]
Line_7 $$ if (!borderNone || borderTitle != null) -->Line_9 $$ if (!borderNone) [ CD ]
Line_11 $$ if (container.getBorderColor() == null) -->Line_13 $$ generator.getStatic(colorType, "black", colorType)[ CD ]
Line_7 $$ if (!borderNone || borderTitle != null) -->Line_8 $$ generator.loadLocal(componentLocal)[ CD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_4 $$ final StringDescriptor borderTitle = container.getBorderTitle()[ CD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_18 $$ if (borderType.equals(BorderType.EMPTY) && container.getBorderSize() != null) [ FD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_41 $$ generator.invokeStatic(borderFactoryType, ourCreateTitledBorderMethod)[ FD ]
Line_10 $$ if (borderType.equals(BorderType.LINE)) -->Line_18 $$ if (borderType.equals(BorderType.EMPTY) && container.getBorderSize() != null) [ CD ]
Line_6 $$ final boolean borderNone = borderType.equals(BorderType.NONE)-->Line_7 $$ if (!borderNone || borderTitle != null) [ FD ]
Line_3 $$ final BorderType borderType = container.getBorderType()-->Line_6 $$ final boolean borderNone = borderType.equals(BorderType.NONE)[ FD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_19 $$ Insets size = container.getBorderSize()[ FD ]
Line_39 $$ borderFactoryType = typeFromClassName(borderFactoryValue.getValue())-->Line_41 $$ generator.invokeStatic(borderFactoryType, ourCreateTitledBorderMethod)[ FD ]
Line_7 $$ if (!borderNone || borderTitle != null) -->Line_41 $$ generator.invokeStatic(borderFactoryType, ourCreateTitledBorderMethod)[ CD ]
Line_33 $$ StringDescriptor borderFactoryValue = (StringDescriptor) container.getDelegeeClientProperties().get(ourBorderFactoryClientProperty)-->Line_38 $$ if (borderFactoryValue != null && borderFactoryValue.getValue().length() != 0) [ FD ]
Line_10 $$ if (borderType.equals(BorderType.LINE)) -->Line_11 $$ if (container.getBorderColor() == null) [ CD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_8 $$ generator.loadLocal(componentLocal)[ FD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_6 $$ final boolean borderNone = borderType.equals(BorderType.NONE)[ CD ]
Line_18 $$ if (borderType.equals(BorderType.EMPTY) && container.getBorderSize() != null) -->Line_19 $$ Insets size = container.getBorderSize()[ CD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_13 $$ generator.getStatic(colorType, "black", colorType)[ FD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_5 $$ final String borderFactoryMethodName = borderType.getBorderFactoryMethodName()[ CD ]
Line_35 $$ borderFactoryValue = StringDescriptor.create("com.intellij.ui.IdeBorderFactory$PlainSmallWithIndent")-->Line_38 $$ if (borderFactoryValue != null && borderFactoryValue.getValue().length() != 0) [ FD ]
Line_3 $$ final BorderType borderType = container.getBorderType()-->Line_5 $$ final String borderFactoryMethodName = borderType.getBorderFactoryMethodName()[ FD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_17 $$ generator.invokeStatic(ourBorderFactoryType, new Method(borderFactoryMethodName, ourBorderType, new Type[] [ FD ]
Line_18 $$ if (borderType.equals(BorderType.EMPTY) && container.getBorderSize() != null) -->Line_20 $$ generator.push(size.top)[ CD ]
Line_32 $$ Type borderFactoryType = ourBorderFactoryType-->Line_41 $$ generator.invokeStatic(borderFactoryType, ourCreateTitledBorderMethod)[ FD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_33 $$ StringDescriptor borderFactoryValue = (StringDescriptor) container.getDelegeeClientProperties().get(ourBorderFactoryClientProperty)[ FD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_23 $$ generator.push(size.right)[ FD ]
Line_2 $$ private void generateBorder(final LwContainer container, final GeneratorAdapter generator, final int componentLocal) -->Line_42 $$ generator.invokeVirtual(Type.getType(JComponent.class), Method.getMethod("void setBorder(javax.swing.border.Border)"))[ FD ]
