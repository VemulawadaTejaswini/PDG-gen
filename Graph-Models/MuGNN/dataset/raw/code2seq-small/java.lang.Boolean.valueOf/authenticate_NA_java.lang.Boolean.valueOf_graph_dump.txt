Line_33 $$ authType = this.configuredAuthMethod != null ? this.configuredAuthMethod : MECHANISM_NAME-->Line_41 $$ sc.authenticationComplete(authenticatedAccount, authType, cache)[ FD ]
Line_38 $$ if (registerObj != null && (registerObj instanceof String)) -->Line_39 $$ cache = Boolean.valueOf((String) registerObj)[ CD ]
Line_27 $$ if (isValid) -->Line_29 $$ authenticatedAccount = createAccount(cachedAccount, jbossSct)[ CD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_8 $$ final JASPICallbackHandler cbh = new JASPICallbackHandler()[ CD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_12 $$ final JASPICSecurityContext jaspicSecurityContext = (JASPICSecurityContext) exchange.getSecurityContext()[ CD ]
Line_16 $$ if (authSession != null) -->Line_18 $$ if (cachedAccount != null) [ CD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_32 $$ if (authType == null)[ CD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_51 $$ ServletRequestContext servletRequestContext = exchange.getAttachment(ServletRequestContext.ATTACHMENT_KEY)[ CD ]
Line_11 $$ Account cachedAccount = null-->Line_17 $$ cachedAccount = authSession.getAccount()[ FD ]
Line_13 $$ final AuthenticatedSessionManager sessionManager = exchange.getAttachment(AuthenticatedSessionManager.ATTACHMENT_KEY)-->Line_14 $$ if (sessionManager != null) [ FD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_11 $$ Account cachedAccount = null[ CD ]
Line_11 $$ Account cachedAccount = null-->Line_18 $$ if (cachedAccount != null) [ FD ]
Line_47 $$ if (wasAuthExceptionThrown(exchange) && !statusIndicatesError(exchange)) -->Line_48 $$ exchange.setResponseCode(DEFAULT_ERROR_CODE)[ CD ]
Line_14 $$ if (sessionManager != null) -->Line_16 $$ if (authSession != null) [ CD ]
Line_34 $$ if (isValid && authenticatedAccount != null) -->Line_41 $$ sc.authenticationComplete(authenticatedAccount, authType, cache)[ CD ]
Line_35 $$ outcome = AuthenticationMechanismOutcome.AUTHENTICATED-->Line_45 $$ outcome = AuthenticationMechanismOutcome.NOT_AUTHENTICATED[ FD ]
Line_4 $$ final ServletRequestContext requestContext = exchange.getAttachment(ServletRequestContext.ATTACHMENT_KEY)-->Line_7 $$ final String applicationIdentifier = buildApplicationIdentifier(requestContext)[ FD ]
Line_18 $$ if (cachedAccount != null) -->Line_19 $$ jaspicSecurityContext.setCachedAuthenticatedAccount(cachedAccount)[ CD ]
Line_17 $$ cachedAccount = authSession.getAccount()-->Line_19 $$ jaspicSecurityContext.setCachedAuthenticatedAccount(cachedAccount)[ FD ]
Line_37 $$ boolean cache = false-->Line_41 $$ sc.authenticationComplete(authenticatedAccount, authType, cache)[ FD ]
Line_5 $$ final JASPIServerAuthenticationManager sam = createJASPIAuthenticationManager()-->Line_25 $$ boolean isValid = sam.isValid(messageInfo, new Subject(), JASPI_HTTP_SERVLET_LAYER, applicationIdentifier, cbh)[ FD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_13 $$ final AuthenticatedSessionManager sessionManager = exchange.getAttachment(AuthenticatedSessionManager.ATTACHMENT_KEY)[ FD ]
Line_17 $$ cachedAccount = authSession.getAccount()-->Line_29 $$ authenticatedAccount = createAccount(cachedAccount, jbossSct)[ FD ]
Line_31 $$ String authType = (String) messageInfo.getMap().get(JASPI_AUTH_TYPE)-->Line_32 $$ if (authType == null)[ FD ]
Line_35 $$ outcome = AuthenticationMechanismOutcome.AUTHENTICATED-->Line_43 $$ outcome = AuthenticationMechanismOutcome.NOT_ATTEMPTED[ FD ]
Line_13 $$ final AuthenticatedSessionManager sessionManager = exchange.getAttachment(AuthenticatedSessionManager.ATTACHMENT_KEY)-->Line_15 $$ AuthenticatedSessionManager.AuthenticatedSession authSession = sessionManager.lookupSession(exchange)[ FD ]
Line_6 $$ final GenericMessageInfo messageInfo = createMessageInfo(exchange, sc)-->Line_53 $$ servletRequestContext.setServletResponse((HttpServletResponse) messageInfo.getResponseMessage())[ FD ]
Line_42 $$ if (isValid && authenticatedAccount == null && !isMandatory(requestContext)) -->Line_45 $$ outcome = AuthenticationMechanismOutcome.NOT_AUTHENTICATED[ CD ]
Line_17 $$ cachedAccount = authSession.getAccount()-->Line_18 $$ if (cachedAccount != null) [ FD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_54 $$ return outcome[ CD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_53 $$ servletRequestContext.setServletResponse((HttpServletResponse) messageInfo.getResponseMessage())[ CD ]
Line_31 $$ String authType = (String) messageInfo.getMap().get(JASPI_AUTH_TYPE)-->Line_41 $$ sc.authenticationComplete(authenticatedAccount, authType, cache)[ FD ]
Line_12 $$ final JASPICSecurityContext jaspicSecurityContext = (JASPICSecurityContext) exchange.getSecurityContext()-->Line_19 $$ jaspicSecurityContext.setCachedAuthenticatedAccount(cachedAccount)[ FD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_24 $$ Account authenticatedAccount = null[ CD ]
Line_23 $$ AuthenticationMechanismOutcome outcome = AuthenticationMechanismOutcome.NOT_AUTHENTICATED-->Line_45 $$ outcome = AuthenticationMechanismOutcome.NOT_AUTHENTICATED[ FD ]
Line_42 $$ if (isValid && authenticatedAccount == null && !isMandatory(requestContext)) -->Line_43 $$ outcome = AuthenticationMechanismOutcome.NOT_ATTEMPTED[ CD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_31 $$ String authType = (String) messageInfo.getMap().get(JASPI_AUTH_TYPE)[ CD ]
Line_11 $$ Account cachedAccount = null-->Line_19 $$ jaspicSecurityContext.setCachedAuthenticatedAccount(cachedAccount)[ FD ]
Line_25 $$ boolean isValid = sam.isValid(messageInfo, new Subject(), JASPI_HTTP_SERVLET_LAYER, applicationIdentifier, cbh)-->Line_34 $$ if (isValid && authenticatedAccount != null) [ FD ]
Line_15 $$ AuthenticatedSessionManager.AuthenticatedSession authSession = sessionManager.lookupSession(exchange)-->Line_16 $$ if (authSession != null) [ FD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_3 $$ exchange.putAttachment(AUTH_RUN, true)[ CD ]
Line_42 $$ if (isValid && authenticatedAccount == null && !isMandatory(requestContext)) -->Line_46 $$ sc.authenticationFailed("JASPIC authentication failed.", authType)[ CD ]
Line_51 $$ ServletRequestContext servletRequestContext = exchange.getAttachment(ServletRequestContext.ATTACHMENT_KEY)-->Line_52 $$ servletRequestContext.setServletRequest((HttpServletRequest) messageInfo.getRequestMessage())[ FD ]
Line_31 $$ String authType = (String) messageInfo.getMap().get(JASPI_AUTH_TYPE)-->Line_33 $$ authType = this.configuredAuthMethod != null ? this.configuredAuthMethod : MECHANISM_NAME[ FD ]
Line_7 $$ final String applicationIdentifier = buildApplicationIdentifier(requestContext)-->Line_25 $$ boolean isValid = sam.isValid(messageInfo, new Subject(), JASPI_HTTP_SERVLET_LAYER, applicationIdentifier, cbh)[ FD ]
Line_33 $$ authType = this.configuredAuthMethod != null ? this.configuredAuthMethod : MECHANISM_NAME-->Line_46 $$ sc.authenticationFailed("JASPIC authentication failed.", authType)[ FD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_6 $$ final GenericMessageInfo messageInfo = createMessageInfo(exchange, sc)[ FD ]
Line_27 $$ if (isValid) -->Line_28 $$ org.jboss.security.SecurityContext jbossSct = SecurityActions.getSecurityContext()[ CD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_15 $$ AuthenticatedSessionManager.AuthenticatedSession authSession = sessionManager.lookupSession(exchange)[ FD ]
Line_12 $$ final JASPICSecurityContext jaspicSecurityContext = (JASPICSecurityContext) exchange.getSecurityContext()-->Line_26 $$ jaspicSecurityContext.setCachedAuthenticatedAccount(null)[ FD ]
Line_34 $$ if (isValid && authenticatedAccount != null) -->Line_36 $$ Object registerObj = messageInfo.getMap().get(JASPI_REGISTER_SESSION)[ CD ]
Line_37 $$ boolean cache = false-->Line_39 $$ cache = Boolean.valueOf((String) registerObj)[ FD ]
Line_6 $$ final GenericMessageInfo messageInfo = createMessageInfo(exchange, sc)-->Line_31 $$ String authType = (String) messageInfo.getMap().get(JASPI_AUTH_TYPE)[ FD ]
Line_29 $$ authenticatedAccount = createAccount(cachedAccount, jbossSct)-->Line_41 $$ sc.authenticationComplete(authenticatedAccount, authType, cache)[ FD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_9 $$ exchange.putAttachment(JASPICContext.ATTACHMENT_KEY, new JASPICContext(messageInfo, sam, cbh))[ FD ]
Line_23 $$ AuthenticationMechanismOutcome outcome = AuthenticationMechanismOutcome.NOT_AUTHENTICATED-->Line_43 $$ outcome = AuthenticationMechanismOutcome.NOT_ATTEMPTED[ FD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_10 $$ UndertowLogger.ROOT_LOGGER.debugf("validateRequest for layer [%s] and applicationContextIdentifier [%s]", JASPI_HTTP_SERVLET_LAYER, applicationIdentifier)[ CD ]
Line_6 $$ final GenericMessageInfo messageInfo = createMessageInfo(exchange, sc)-->Line_52 $$ servletRequestContext.setServletRequest((HttpServletRequest) messageInfo.getRequestMessage())[ FD ]
Line_8 $$ final JASPICallbackHandler cbh = new JASPICallbackHandler()-->Line_25 $$ boolean isValid = sam.isValid(messageInfo, new Subject(), JASPI_HTTP_SERVLET_LAYER, applicationIdentifier, cbh)[ FD ]
Line_24 $$ Account authenticatedAccount = null-->Line_29 $$ authenticatedAccount = createAccount(cachedAccount, jbossSct)[ FD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_5 $$ final JASPIServerAuthenticationManager sam = createJASPIAuthenticationManager()[ CD ]
Line_23 $$ AuthenticationMechanismOutcome outcome = AuthenticationMechanismOutcome.NOT_AUTHENTICATED-->Line_35 $$ outcome = AuthenticationMechanismOutcome.AUTHENTICATED[ FD ]
Line_11 $$ Account cachedAccount = null-->Line_29 $$ authenticatedAccount = createAccount(cachedAccount, jbossSct)[ FD ]
Line_7 $$ final String applicationIdentifier = buildApplicationIdentifier(requestContext)-->Line_10 $$ UndertowLogger.ROOT_LOGGER.debugf("validateRequest for layer [%s] and applicationContextIdentifier [%s]", JASPI_HTTP_SERVLET_LAYER, applicationIdentifier)[ FD ]
Line_16 $$ if (authSession != null) -->Line_17 $$ cachedAccount = authSession.getAccount()[ CD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_47 $$ if (wasAuthExceptionThrown(exchange) && !statusIndicatesError(exchange)) [ FD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_23 $$ AuthenticationMechanismOutcome outcome = AuthenticationMechanismOutcome.NOT_AUTHENTICATED[ CD ]
Line_14 $$ if (sessionManager != null) -->Line_15 $$ AuthenticatedSessionManager.AuthenticatedSession authSession = sessionManager.lookupSession(exchange)[ CD ]
Line_43 $$ outcome = AuthenticationMechanismOutcome.NOT_ATTEMPTED-->Line_45 $$ outcome = AuthenticationMechanismOutcome.NOT_AUTHENTICATED[ FD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_27 $$ if (isValid) [ CD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_6 $$ final GenericMessageInfo messageInfo = createMessageInfo(exchange, sc)[ CD ]
Line_42 $$ if (isValid && authenticatedAccount == null && !isMandatory(requestContext)) -->Line_47 $$ if (wasAuthExceptionThrown(exchange) && !statusIndicatesError(exchange)) [ CD ]
Line_4 $$ final ServletRequestContext requestContext = exchange.getAttachment(ServletRequestContext.ATTACHMENT_KEY)-->Line_42 $$ if (isValid && authenticatedAccount == null && !isMandatory(requestContext)) [ FD ]
Line_24 $$ Account authenticatedAccount = null-->Line_41 $$ sc.authenticationComplete(authenticatedAccount, authType, cache)[ FD ]
Line_31 $$ String authType = (String) messageInfo.getMap().get(JASPI_AUTH_TYPE)-->Line_46 $$ sc.authenticationFailed("JASPIC authentication failed.", authType)[ FD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_4 $$ final ServletRequestContext requestContext = exchange.getAttachment(ServletRequestContext.ATTACHMENT_KEY)[ FD ]
Line_15 $$ AuthenticatedSessionManager.AuthenticatedSession authSession = sessionManager.lookupSession(exchange)-->Line_17 $$ cachedAccount = authSession.getAccount()[ FD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_25 $$ boolean isValid = sam.isValid(messageInfo, new Subject(), JASPI_HTTP_SERVLET_LAYER, applicationIdentifier, cbh)[ CD ]
Line_34 $$ if (isValid && authenticatedAccount != null) -->Line_35 $$ outcome = AuthenticationMechanismOutcome.AUTHENTICATED[ CD ]
Line_39 $$ cache = Boolean.valueOf((String) registerObj)-->Line_41 $$ sc.authenticationComplete(authenticatedAccount, authType, cache)[ FD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_48 $$ exchange.setResponseCode(DEFAULT_ERROR_CODE)[ FD ]
Line_34 $$ if (isValid && authenticatedAccount != null) -->Line_42 $$ if (isValid && authenticatedAccount == null && !isMandatory(requestContext)) [ CD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_13 $$ final AuthenticatedSessionManager sessionManager = exchange.getAttachment(AuthenticatedSessionManager.ATTACHMENT_KEY)[ CD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_46 $$ sc.authenticationFailed("JASPIC authentication failed.", authType)[ FD ]
Line_34 $$ if (isValid && authenticatedAccount != null) -->Line_37 $$ boolean cache = false[ CD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_7 $$ final String applicationIdentifier = buildApplicationIdentifier(requestContext)[ CD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_34 $$ if (isValid && authenticatedAccount != null) [ CD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_41 $$ sc.authenticationComplete(authenticatedAccount, authType, cache)[ FD ]
Line_34 $$ if (isValid && authenticatedAccount != null) -->Line_38 $$ if (registerObj != null && (registerObj instanceof String)) [ CD ]
Line_51 $$ ServletRequestContext servletRequestContext = exchange.getAttachment(ServletRequestContext.ATTACHMENT_KEY)-->Line_53 $$ servletRequestContext.setServletResponse((HttpServletResponse) messageInfo.getResponseMessage())[ FD ]
Line_6 $$ final GenericMessageInfo messageInfo = createMessageInfo(exchange, sc)-->Line_25 $$ boolean isValid = sam.isValid(messageInfo, new Subject(), JASPI_HTTP_SERVLET_LAYER, applicationIdentifier, cbh)[ FD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_14 $$ if (sessionManager != null) [ CD ]
Line_28 $$ org.jboss.security.SecurityContext jbossSct = SecurityActions.getSecurityContext()-->Line_29 $$ authenticatedAccount = createAccount(cachedAccount, jbossSct)[ FD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_4 $$ final ServletRequestContext requestContext = exchange.getAttachment(ServletRequestContext.ATTACHMENT_KEY)[ CD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_12 $$ final JASPICSecurityContext jaspicSecurityContext = (JASPICSecurityContext) exchange.getSecurityContext()[ FD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_26 $$ jaspicSecurityContext.setCachedAuthenticatedAccount(null)[ CD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_51 $$ ServletRequestContext servletRequestContext = exchange.getAttachment(ServletRequestContext.ATTACHMENT_KEY)[ FD ]
Line_6 $$ final GenericMessageInfo messageInfo = createMessageInfo(exchange, sc)-->Line_36 $$ Object registerObj = messageInfo.getMap().get(JASPI_REGISTER_SESSION)[ FD ]
Line_32 $$ if (authType == null)-->Line_33 $$ authType = this.configuredAuthMethod != null ? this.configuredAuthMethod : MECHANISM_NAME[ CD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_3 $$ exchange.putAttachment(AUTH_RUN, true)[ FD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_52 $$ servletRequestContext.setServletRequest((HttpServletRequest) messageInfo.getRequestMessage())[ CD ]
Line_2 $$ public AuthenticationMechanismOutcome authenticate(final HttpServerExchange exchange, final SecurityContext sc) -->Line_9 $$ exchange.putAttachment(JASPICContext.ATTACHMENT_KEY, new JASPICContext(messageInfo, sam, cbh))[ CD ]
