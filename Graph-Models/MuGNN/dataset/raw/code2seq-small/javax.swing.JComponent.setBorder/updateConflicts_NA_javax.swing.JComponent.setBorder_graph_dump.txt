Line_21 $$ if (hasConflicts) -->Line_23 $$ c.gridx = 0[ CD ]
Line_16 $$ boolean hasConflicts = printConflict(c, KeyEvent.VK_UP, QuickAccessSettings.SWITCH_UP)-->Line_19 $$ hasConflicts |= printConflict(c, KeyEvent.VK_RIGHT, QuickAccessSettings.SWITCH_RIGHT)[ FD ]
Line_21 $$ if (hasConflicts) -->Line_28 $$ c.gridy++[ CD ]
Line_14 $$ GridBagConstraints c = new GridBagConstraints()-->Line_19 $$ hasConflicts |= printConflict(c, KeyEvent.VK_RIGHT, QuickAccessSettings.SWITCH_RIGHT)[ FD ]
Line_14 $$ GridBagConstraints c = new GridBagConstraints()-->Line_20 $$ hasConflicts |= printConflict(c, KeyEvent.VK_ENTER, QuickAccessSettings.SWITCH_APPLY)[ FD ]
Line_2 $$ private void updateConflicts() -->Line_21 $$ if (hasConflicts) [ CD ]
Line_18 $$ hasConflicts |= printConflict(c, KeyEvent.VK_LEFT, QuickAccessSettings.SWITCH_LEFT)-->Line_19 $$ hasConflicts |= printConflict(c, KeyEvent.VK_RIGHT, QuickAccessSettings.SWITCH_RIGHT)[ FD ]
Line_16 $$ boolean hasConflicts = printConflict(c, KeyEvent.VK_UP, QuickAccessSettings.SWITCH_UP)-->Line_20 $$ hasConflicts |= printConflict(c, KeyEvent.VK_ENTER, QuickAccessSettings.SWITCH_APPLY)[ FD ]
Line_21 $$ if (hasConflicts) -->Line_29 $$ myConflicts.add(getSmallLabel("These conflicting actions may be not what you use a lot"), c)[ CD ]
Line_21 $$ if (hasConflicts) -->Line_24 $$ c.gridy++[ CD ]
Line_17 $$ hasConflicts |= printConflict(c, KeyEvent.VK_DOWN, QuickAccessSettings.SWITCH_DOWN)-->Line_20 $$ hasConflicts |= printConflict(c, KeyEvent.VK_ENTER, QuickAccessSettings.SWITCH_APPLY)[ FD ]
Line_17 $$ hasConflicts |= printConflict(c, KeyEvent.VK_DOWN, QuickAccessSettings.SWITCH_DOWN)-->Line_19 $$ hasConflicts |= printConflict(c, KeyEvent.VK_RIGHT, QuickAccessSettings.SWITCH_RIGHT)[ FD ]
Line_2 $$ private void updateConflicts() -->Line_5 $$ if (!myQaEnabled) [ CD ]
Line_14 $$ GridBagConstraints c = new GridBagConstraints()-->Line_29 $$ myConflicts.add(getSmallLabel("These conflicting actions may be not what you use a lot"), c)[ FD ]
Line_2 $$ private void updateConflicts() -->Line_14 $$ GridBagConstraints c = new GridBagConstraints()[ CD ]
Line_2 $$ private void updateConflicts() -->Line_13 $$ myConflicts.setLayout(new GridBagLayout())[ CD ]
Line_8 $$ if (myModifiers.size() == 0) -->Line_11 $$ return[ CD ]
Line_2 $$ private void updateConflicts() -->Line_19 $$ hasConflicts |= printConflict(c, KeyEvent.VK_RIGHT, QuickAccessSettings.SWITCH_RIGHT)[ CD ]
Line_19 $$ hasConflicts |= printConflict(c, KeyEvent.VK_RIGHT, QuickAccessSettings.SWITCH_RIGHT)-->Line_20 $$ hasConflicts |= printConflict(c, KeyEvent.VK_ENTER, QuickAccessSettings.SWITCH_APPLY)[ FD ]
Line_2 $$ private void updateConflicts() -->Line_17 $$ hasConflicts |= printConflict(c, KeyEvent.VK_DOWN, QuickAccessSettings.SWITCH_DOWN)[ CD ]
Line_21 $$ if (hasConflicts) -->Line_22 $$ myConflicts.setBorder(IdeBorderFactory.createTitledBorder("Conflicts", true))[ CD ]
Line_2 $$ private void updateConflicts() -->Line_4 $$ myConflicts.setBorder(null)[ CD ]
Line_21 $$ if (hasConflicts) -->Line_26 $$ myConflicts.add(new SeparatorWithText(), c)[ CD ]
Line_2 $$ private void updateConflicts() -->Line_8 $$ if (myModifiers.size() == 0) [ CD ]
Line_16 $$ boolean hasConflicts = printConflict(c, KeyEvent.VK_UP, QuickAccessSettings.SWITCH_UP)-->Line_17 $$ hasConflicts |= printConflict(c, KeyEvent.VK_DOWN, QuickAccessSettings.SWITCH_DOWN)[ FD ]
Line_17 $$ hasConflicts |= printConflict(c, KeyEvent.VK_DOWN, QuickAccessSettings.SWITCH_DOWN)-->Line_18 $$ hasConflicts |= printConflict(c, KeyEvent.VK_LEFT, QuickAccessSettings.SWITCH_LEFT)[ FD ]
Line_2 $$ private void updateConflicts() -->Line_3 $$ myConflicts.removeAll()[ CD ]
Line_8 $$ if (myModifiers.size() == 0) -->Line_9 $$ myConflicts.setLayout(new BorderLayout())[ CD ]
Line_2 $$ private void updateConflicts() -->Line_18 $$ hasConflicts |= printConflict(c, KeyEvent.VK_LEFT, QuickAccessSettings.SWITCH_LEFT)[ CD ]
Line_14 $$ GridBagConstraints c = new GridBagConstraints()-->Line_16 $$ boolean hasConflicts = printConflict(c, KeyEvent.VK_UP, QuickAccessSettings.SWITCH_UP)[ FD ]
Line_14 $$ GridBagConstraints c = new GridBagConstraints()-->Line_17 $$ hasConflicts |= printConflict(c, KeyEvent.VK_DOWN, QuickAccessSettings.SWITCH_DOWN)[ FD ]
Line_16 $$ boolean hasConflicts = printConflict(c, KeyEvent.VK_UP, QuickAccessSettings.SWITCH_UP)-->Line_18 $$ hasConflicts |= printConflict(c, KeyEvent.VK_LEFT, QuickAccessSettings.SWITCH_LEFT)[ FD ]
Line_14 $$ GridBagConstraints c = new GridBagConstraints()-->Line_18 $$ hasConflicts |= printConflict(c, KeyEvent.VK_LEFT, QuickAccessSettings.SWITCH_LEFT)[ FD ]
Line_21 $$ if (hasConflicts) -->Line_25 $$ c.gridwidth = 2[ CD ]
Line_18 $$ hasConflicts |= printConflict(c, KeyEvent.VK_LEFT, QuickAccessSettings.SWITCH_LEFT)-->Line_20 $$ hasConflicts |= printConflict(c, KeyEvent.VK_ENTER, QuickAccessSettings.SWITCH_APPLY)[ FD ]
Line_14 $$ GridBagConstraints c = new GridBagConstraints()-->Line_26 $$ myConflicts.add(new SeparatorWithText(), c)[ FD ]
Line_2 $$ private void updateConflicts() -->Line_15 $$ c.insets = new Insets(0, 4, 0, 4)[ CD ]
Line_5 $$ if (!myQaEnabled) -->Line_6 $$ return[ CD ]
Line_21 $$ if (hasConflicts) -->Line_27 $$ c.gridx = 0[ CD ]
Line_2 $$ private void updateConflicts() -->Line_20 $$ hasConflicts |= printConflict(c, KeyEvent.VK_ENTER, QuickAccessSettings.SWITCH_APPLY)[ CD ]
Line_2 $$ private void updateConflicts() -->Line_16 $$ boolean hasConflicts = printConflict(c, KeyEvent.VK_UP, QuickAccessSettings.SWITCH_UP)[ CD ]
Line_8 $$ if (myModifiers.size() == 0) -->Line_10 $$ myConflicts.add(getSmallLabel("Without assigning modifier keys Quick Access will not function"), BorderLayout.NORTH)[ CD ]
