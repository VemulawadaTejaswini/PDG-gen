Line_9 $$ final Font font = new Font(fontName, Font.PLAIN, fontSize)-->Line_10 $$ String bodyRule = "body [ FD ]
Line_4 $$ final JTextPane taskTextPane = new JTextPane()-->Line_16 $$ taskTextPane.setBorder(new EmptyBorder(15, 20, 0, 100))[ FD ]
Line_4 $$ final JTextPane taskTextPane = new JTextPane()-->Line_11 $$ ((HTMLDocument) taskTextPane.getDocument()).getStyleSheet().addRule(bodyRule)[ FD ]
Line_4 $$ final JTextPane taskTextPane = new JTextPane()-->Line_14 $$ taskTextPane.setBackground(EditorColorsManager.getInstance().getGlobalScheme().getDefaultBackground())[ FD ]
Line_6 $$ final EditorColorsScheme editorColorsScheme = EditorColorsManager.getInstance().getGlobalScheme()-->Line_7 $$ int fontSize = editorColorsScheme.getEditorFontSize()[ FD ]
Line_4 $$ final JTextPane taskTextPane = new JTextPane()-->Line_5 $$ taskTextPane.setContentType(new HTMLEditorKit().getContentType())[ FD ]
Line_10 $$ String bodyRule = "body -->Line_11 $$ ((HTMLDocument) taskTextPane.getDocument()).getStyleSheet().addRule(bodyRule)[ FD ]
Line_6 $$ final EditorColorsScheme editorColorsScheme = EditorColorsManager.getInstance().getGlobalScheme()-->Line_8 $$ final String fontName = editorColorsScheme.getEditorFontName()[ FD ]
Line_4 $$ final JTextPane taskTextPane = new JTextPane()-->Line_12 $$ taskTextPane.setEditable(false)[ FD ]
Line_13 $$ if (!UIUtil.isUnderDarcula()) -->Line_14 $$ taskTextPane.setBackground(EditorColorsManager.getInstance().getGlobalScheme().getDefaultBackground())[ CD ]
