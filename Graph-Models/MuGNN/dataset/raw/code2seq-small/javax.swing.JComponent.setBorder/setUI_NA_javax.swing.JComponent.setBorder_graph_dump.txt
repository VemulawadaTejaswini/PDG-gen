Line_7 $$ Method method = ReflectionUtil.getMethod(uiClass, "createUI", JComponent.class)-->Line_8 $$ if (method != null) [ FD ]
Line_8 $$ if (method != null) -->Line_10 $$ Class<?> borderClass = UIUtil.isUnderIntelliJLaF() ? Class.forName("com.intellij.ide.ui.laf.intellij.MacIntelliJTextBorder") : Class.forName("com.intellij.ide.ui.laf.darcula.ui.DarculaTextBorder")[ CD ]
Line_8 $$ if (method != null) -->Line_12 $$ setOpaque(false)[ CD ]
Line_8 $$ if (method != null) -->Line_11 $$ setBorder((Border) ReflectionUtil.newInstance(borderClass))[ CD ]
Line_10 $$ Class<?> borderClass = UIUtil.isUnderIntelliJLaF() ? Class.forName("com.intellij.ide.ui.laf.intellij.MacIntelliJTextBorder") : Class.forName("com.intellij.ide.ui.laf.darcula.ui.DarculaTextBorder")-->Line_11 $$ setBorder((Border) ReflectionUtil.newInstance(borderClass))[ FD ]
Line_6 $$ Class<?> uiClass = UIUtil.isUnderIntelliJLaF() ? Class.forName("com.intellij.ide.ui.laf.intellij.MacIntelliJTextFieldUI") : Class.forName("com.intellij.ide.ui.laf.darcula.ui.DarculaTextFieldUI")-->Line_9 $$ super.setUI((TextUI) method.invoke(uiClass, this))[ FD ]
Line_6 $$ Class<?> uiClass = UIUtil.isUnderIntelliJLaF() ? Class.forName("com.intellij.ide.ui.laf.intellij.MacIntelliJTextFieldUI") : Class.forName("com.intellij.ide.ui.laf.darcula.ui.DarculaTextFieldUI")-->Line_7 $$ Method method = ReflectionUtil.getMethod(uiClass, "createUI", JComponent.class)[ FD ]
Line_8 $$ if (method != null) -->Line_9 $$ super.setUI((TextUI) method.invoke(uiClass, this))[ CD ]
Line_7 $$ Method method = ReflectionUtil.getMethod(uiClass, "createUI", JComponent.class)-->Line_9 $$ super.setUI((TextUI) method.invoke(uiClass, this))[ FD ]
