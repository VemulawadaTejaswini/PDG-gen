Line_3 $$ final JPanel panel = new JPanel()-->Line_5 $$ panel.setLayout(new GridBagLayout())[ FD ]
Line_3 $$ final JPanel panel = new JPanel()-->Line_41 $$ panel.add(myNonEnglishKeyboardSupportOption, gc)[ FD ]
Line_2 $$ private JPanel createKeymapButtonsPanel() -->Line_29 $$ panel.add(myDeleteButton, gc)[ CD ]
Line_2 $$ private JPanel createKeymapButtonsPanel() -->Line_14 $$ myCopyButton.setMargin(insets)[ CD ]
Line_2 $$ private JPanel createKeymapButtonsPanel() -->Line_19 $$ panel.add(myResetToDefault, gc)[ CD ]
Line_3 $$ final JPanel panel = new JPanel()-->Line_29 $$ panel.add(myDeleteButton, gc)[ FD ]
Line_3 $$ final JPanel panel = new JPanel()-->Line_16 $$ panel.add(myCopyButton, gc)[ FD ]
Line_3 $$ final JPanel panel = new JPanel()-->Line_19 $$ panel.add(myResetToDefault, gc)[ FD ]
Line_2 $$ private JPanel createKeymapButtonsPanel() -->Line_30 $$ IdeFrame ideFrame = IdeFocusManager.getGlobalInstance().getLastFocusedFrame()[ CD ]
Line_6 $$ myCopyButton = new JButton(new AbstractAction(KeyMapBundle.message("copy.keymap.button")) -->Line_10 $$ copyKeymap()[ CD ]
Line_2 $$ private JPanel createKeymapButtonsPanel() -->Line_16 $$ panel.add(myCopyButton, gc)[ CD ]
Line_2 $$ private JPanel createKeymapButtonsPanel() -->Line_31 $$ if (ideFrame != null && KeyboardSettingsExternalizable.isSupportedKeyboardLayout(ideFrame.getComponent())) [ CD ]
Line_2 $$ private JPanel createKeymapButtonsPanel() -->Line_4 $$ panel.setBorder(BorderFactory.createEmptyBorder(0, 8, 0, 0))[ CD ]
Line_31 $$ if (ideFrame != null && KeyboardSettingsExternalizable.isSupportedKeyboardLayout(ideFrame.getComponent())) -->Line_32 $$ String displayLanguage = ideFrame.getComponent().getInputContext().getLocale().getDisplayLanguage()[ CD ]
Line_33 $$ myNonEnglishKeyboardSupportOption = new JCheckBox(new AbstractAction(displayLanguage + " " + KeyMapBundle.message("use.non.english.keyboard.layout.support")) -->Line_37 $$ KeyboardSettingsExternalizable.getInstance().setNonEnglishKeyboardSupportEnabled(myNonEnglishKeyboardSupportOption.isSelected())[ CD ]
Line_2 $$ private JPanel createKeymapButtonsPanel() -->Line_50 $$ return panel[ CD ]
Line_2 $$ private JPanel createKeymapButtonsPanel() -->Line_43 $$ myResetToDefault.addActionListener(new ActionListener() [ CD ]
Line_2 $$ private JPanel createKeymapButtonsPanel() -->Line_18 $$ myResetToDefault.setMargin(insets)[ CD ]
Line_2 $$ private JPanel createKeymapButtonsPanel() -->Line_3 $$ final JPanel panel = new JPanel()[ CD ]
Line_43 $$ myResetToDefault.addActionListener(new ActionListener() -->Line_47 $$ resetKeymap()[ CD ]
Line_2 $$ private JPanel createKeymapButtonsPanel() -->Line_5 $$ panel.setLayout(new GridBagLayout())[ CD ]
Line_3 $$ final JPanel panel = new JPanel()-->Line_4 $$ panel.setBorder(BorderFactory.createEmptyBorder(0, 8, 0, 0))[ FD ]
Line_2 $$ private JPanel createKeymapButtonsPanel() -->Line_28 $$ gc.weightx = 1[ CD ]
Line_20 $$ myDeleteButton = new JButton(new AbstractAction(KeyMapBundle.message("delete.keymap.button")) -->Line_24 $$ deleteKeymap()[ CD ]
Line_31 $$ if (ideFrame != null && KeyboardSettingsExternalizable.isSupportedKeyboardLayout(ideFrame.getComponent())) -->Line_40 $$ myNonEnglishKeyboardSupportOption.setSelected(KeyboardSettingsExternalizable.getInstance().isNonEnglishKeyboardSupportEnabled())[ CD ]
Line_31 $$ if (ideFrame != null && KeyboardSettingsExternalizable.isSupportedKeyboardLayout(ideFrame.getComponent())) -->Line_41 $$ panel.add(myNonEnglishKeyboardSupportOption, gc)[ CD ]
Line_2 $$ private JPanel createKeymapButtonsPanel() -->Line_27 $$ myDeleteButton.setMargin(insets)[ CD ]
