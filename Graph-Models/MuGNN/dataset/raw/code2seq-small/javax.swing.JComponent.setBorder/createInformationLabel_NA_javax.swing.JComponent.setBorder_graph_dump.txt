Line_2 $$ public static JComponent createInformationLabel(@NotNull String text, @Nullable HyperlinkListener hyperlinkListener, @Nullable MouseListener mouseListener, @Nullable Ref<Consumer<String>> updatedTextConsumer) -->Line_6 $$ label.setIcon(null)[ CD ]
Line_2 $$ public static JComponent createInformationLabel(@NotNull String text, @Nullable HyperlinkListener hyperlinkListener, @Nullable MouseListener mouseListener, @Nullable Ref<Consumer<String>> updatedTextConsumer) -->Line_14 $$ if (hyperlinkListener != null) [ FD ]
Line_2 $$ public static JComponent createInformationLabel(@NotNull String text, @Nullable HyperlinkListener hyperlinkListener, @Nullable MouseListener mouseListener, @Nullable Ref<Consumer<String>> updatedTextConsumer) -->Line_17 $$ if (mouseListener != null) [ FD ]
Line_21 $$ updatedTextConsumer.set(new Consumer<String>() -->Line_25 $$ label.myPane.setText(s)[ CD ]
Line_3 $$ HintHint hintHint = getInformationHint()-->Line_7 $$ if (!hintHint.isAwtTooltip()) [ FD ]
Line_4 $$ final HintLabel label = new HintLabel()-->Line_6 $$ label.setIcon(null)[ FD ]
Line_7 $$ if (!hintHint.isAwtTooltip()) -->Line_9 $$ label.setForeground(JBColor.foreground())[ CD ]
Line_2 $$ public static JComponent createInformationLabel(@NotNull String text, @Nullable HyperlinkListener hyperlinkListener, @Nullable MouseListener mouseListener, @Nullable Ref<Consumer<String>> updatedTextConsumer) -->Line_20 $$ if (updatedTextConsumer != null) [ FD ]
Line_2 $$ public static JComponent createInformationLabel(@NotNull String text, @Nullable HyperlinkListener hyperlinkListener, @Nullable MouseListener mouseListener, @Nullable Ref<Consumer<String>> updatedTextConsumer) -->Line_21 $$ updatedTextConsumer.set(new Consumer<String>() [ FD ]
Line_2 $$ public static JComponent createInformationLabel(@NotNull String text, @Nullable HyperlinkListener hyperlinkListener, @Nullable MouseListener mouseListener, @Nullable Ref<Consumer<String>> updatedTextConsumer) -->Line_3 $$ HintHint hintHint = getInformationHint()[ CD ]
Line_4 $$ final HintLabel label = new HintLabel()-->Line_5 $$ label.setText(text, hintHint)[ FD ]
Line_7 $$ if (!hintHint.isAwtTooltip()) -->Line_10 $$ label.setFont(getBoldFont())[ CD ]
Line_17 $$ if (mouseListener != null) -->Line_18 $$ label.myPane.addMouseListener(mouseListener)[ CD ]
Line_2 $$ public static JComponent createInformationLabel(@NotNull String text, @Nullable HyperlinkListener hyperlinkListener, @Nullable MouseListener mouseListener, @Nullable Ref<Consumer<String>> updatedTextConsumer) -->Line_5 $$ label.setText(text, hintHint)[ FD ]
Line_7 $$ if (!hintHint.isAwtTooltip()) -->Line_11 $$ label.setBackground(INFORMATION_COLOR)[ CD ]
Line_4 $$ final HintLabel label = new HintLabel()-->Line_10 $$ label.setFont(getBoldFont())[ FD ]
Line_2 $$ public static JComponent createInformationLabel(@NotNull String text, @Nullable HyperlinkListener hyperlinkListener, @Nullable MouseListener mouseListener, @Nullable Ref<Consumer<String>> updatedTextConsumer) -->Line_18 $$ label.myPane.addMouseListener(mouseListener)[ FD ]
Line_20 $$ if (updatedTextConsumer != null) -->Line_21 $$ updatedTextConsumer.set(new Consumer<String>() [ CD ]
Line_14 $$ if (hyperlinkListener != null) -->Line_15 $$ label.myPane.addHyperlinkListener(hyperlinkListener)[ CD ]
Line_2 $$ public static JComponent createInformationLabel(@NotNull String text, @Nullable HyperlinkListener hyperlinkListener, @Nullable MouseListener mouseListener, @Nullable Ref<Consumer<String>> updatedTextConsumer) -->Line_4 $$ final HintLabel label = new HintLabel()[ CD ]
Line_4 $$ final HintLabel label = new HintLabel()-->Line_12 $$ label.setOpaque(true)[ FD ]
Line_21 $$ updatedTextConsumer.set(new Consumer<String>() -->Line_25 $$ label.myPane.setText(s)[ FD ]
Line_2 $$ public static JComponent createInformationLabel(@NotNull String text, @Nullable HyperlinkListener hyperlinkListener, @Nullable MouseListener mouseListener, @Nullable Ref<Consumer<String>> updatedTextConsumer) -->Line_17 $$ if (mouseListener != null) [ CD ]
Line_4 $$ final HintLabel label = new HintLabel()-->Line_11 $$ label.setBackground(INFORMATION_COLOR)[ FD ]
Line_2 $$ public static JComponent createInformationLabel(@NotNull String text, @Nullable HyperlinkListener hyperlinkListener, @Nullable MouseListener mouseListener, @Nullable Ref<Consumer<String>> updatedTextConsumer) -->Line_7 $$ if (!hintHint.isAwtTooltip()) [ CD ]
Line_4 $$ final HintLabel label = new HintLabel()-->Line_9 $$ label.setForeground(JBColor.foreground())[ FD ]
Line_7 $$ if (!hintHint.isAwtTooltip()) -->Line_8 $$ label.setBorder(createHintBorder())[ CD ]
Line_2 $$ public static JComponent createInformationLabel(@NotNull String text, @Nullable HyperlinkListener hyperlinkListener, @Nullable MouseListener mouseListener, @Nullable Ref<Consumer<String>> updatedTextConsumer) -->Line_14 $$ if (hyperlinkListener != null) [ CD ]
Line_4 $$ final HintLabel label = new HintLabel()-->Line_8 $$ label.setBorder(createHintBorder())[ FD ]
Line_2 $$ public static JComponent createInformationLabel(@NotNull String text, @Nullable HyperlinkListener hyperlinkListener, @Nullable MouseListener mouseListener, @Nullable Ref<Consumer<String>> updatedTextConsumer) -->Line_32 $$ return label[ CD ]
Line_2 $$ public static JComponent createInformationLabel(@NotNull String text, @Nullable HyperlinkListener hyperlinkListener, @Nullable MouseListener mouseListener, @Nullable Ref<Consumer<String>> updatedTextConsumer) -->Line_15 $$ label.myPane.addHyperlinkListener(hyperlinkListener)[ FD ]
Line_3 $$ HintHint hintHint = getInformationHint()-->Line_5 $$ label.setText(text, hintHint)[ FD ]
Line_2 $$ public static JComponent createInformationLabel(@NotNull String text, @Nullable HyperlinkListener hyperlinkListener, @Nullable MouseListener mouseListener, @Nullable Ref<Consumer<String>> updatedTextConsumer) -->Line_20 $$ if (updatedTextConsumer != null) [ CD ]
Line_7 $$ if (!hintHint.isAwtTooltip()) -->Line_12 $$ label.setOpaque(true)[ CD ]
Line_21 $$ updatedTextConsumer.set(new Consumer<String>() -->Line_28 $$ label.myPane.setPreferredSize(null)[ CD ]
Line_2 $$ public static JComponent createInformationLabel(@NotNull String text, @Nullable HyperlinkListener hyperlinkListener, @Nullable MouseListener mouseListener, @Nullable Ref<Consumer<String>> updatedTextConsumer) -->Line_5 $$ label.setText(text, hintHint)[ CD ]
