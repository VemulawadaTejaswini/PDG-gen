Line_6 $$ final JPanel namePanel = new JPanel(new BorderLayout())-->Line_17 $$ wrapper.add(namePanel)[ FD ]
Line_7 $$ final JLabel label = new JLabel("<html><body><b>Project name:</b></body></html>", SwingConstants.LEFT)-->Line_8 $$ namePanel.add(label, BorderLayout.NORTH)[ FD ]
Line_5 $$ if (ProjectUtil.isDirectoryBased(myProject)) -->Line_8 $$ namePanel.add(label, BorderLayout.NORTH)[ CD ]
Line_11 $$ final JPanel nameFieldPanel = new JPanel()-->Line_15 $$ namePanel.add(nameFieldPanel, BorderLayout.CENTER)[ FD ]
Line_34 $$ myProjectJdkConfigurable.addChangeListener(new ActionListener() -->Line_39 $$ LanguageLevelProjectExtensionImpl.getInstanceImpl(myProject).setCurrentLevel(myLanguageLevelCombo.getSelectedLevel())[ CD ]
Line_2 $$ private void init(final ProjectSdksModel model) -->Line_42 $$ myLanguageLevelCombo.addActionListener(new ActionListener() [ CD ]
Line_5 $$ if (ProjectUtil.isDirectoryBased(myProject)) -->Line_7 $$ final JLabel label = new JLabel("<html><body><b>Project name:</b></body></html>", SwingConstants.LEFT)[ CD ]
Line_16 $$ final JPanel wrapper = new JPanel(new FlowLayout(FlowLayout.LEFT, 0, 0))-->Line_19 $$ myPanel.add(wrapper, new GridBagConstraints(0, GridBagConstraints.RELATIVE, 1, 1, 0.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.HORIZONTAL, new Insets(4, 0, 10, 0), 0, 0))[ FD ]
Line_16 $$ final JPanel wrapper = new JPanel(new FlowLayout(FlowLayout.LEFT, 0, 0))-->Line_18 $$ wrapper.setAlignmentX(0)[ FD ]
Line_5 $$ if (ProjectUtil.isDirectoryBased(myProject)) -->Line_14 $$ nameFieldPanel.add(myProjectName)[ CD ]
Line_5 $$ if (ProjectUtil.isDirectoryBased(myProject)) -->Line_11 $$ final JPanel nameFieldPanel = new JPanel()[ CD ]
Line_5 $$ if (ProjectUtil.isDirectoryBased(myProject)) -->Line_16 $$ final JPanel wrapper = new JPanel(new FlowLayout(FlowLayout.LEFT, 0, 0))[ CD ]
Line_11 $$ final JPanel nameFieldPanel = new JPanel()-->Line_12 $$ nameFieldPanel.setLayout(new BoxLayout(nameFieldPanel, BoxLayout.X_AXIS))[ FD ]
Line_11 $$ final JPanel nameFieldPanel = new JPanel()-->Line_14 $$ nameFieldPanel.add(myProjectName)[ FD ]
Line_16 $$ final JPanel wrapper = new JPanel(new FlowLayout(FlowLayout.LEFT, 0, 0))-->Line_17 $$ wrapper.add(namePanel)[ FD ]
Line_29 $$ if (myFreeze)-->Line_30 $$ return[ CD ]
Line_5 $$ if (ProjectUtil.isDirectoryBased(myProject)) -->Line_13 $$ nameFieldPanel.add(Box.createHorizontalStrut(4))[ CD ]
Line_6 $$ final JPanel namePanel = new JPanel(new BorderLayout())-->Line_15 $$ namePanel.add(nameFieldPanel, BorderLayout.CENTER)[ FD ]
Line_2 $$ private void init(final ProjectSdksModel model) -->Line_22 $$ myPanel.add(myProjectJdkConfigurable.createComponent(), new GridBagConstraints(0, GridBagConstraints.RELATIVE, 1, 1, 0.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.HORIZONTAL, new Insets(4, 0, 0, 0), 0, 0))[ CD ]
Line_5 $$ if (ProjectUtil.isDirectoryBased(myProject)) -->Line_12 $$ nameFieldPanel.setLayout(new BoxLayout(nameFieldPanel, BoxLayout.X_AXIS))[ CD ]
Line_11 $$ final JPanel nameFieldPanel = new JPanel()-->Line_13 $$ nameFieldPanel.add(Box.createHorizontalStrut(4))[ FD ]
Line_5 $$ if (ProjectUtil.isDirectoryBased(myProject)) -->Line_19 $$ myPanel.add(wrapper, new GridBagConstraints(0, GridBagConstraints.RELATIVE, 1, 1, 0.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.HORIZONTAL, new Insets(4, 0, 10, 0), 0, 0))[ CD ]
Line_6 $$ final JPanel namePanel = new JPanel(new BorderLayout())-->Line_8 $$ namePanel.add(label, BorderLayout.NORTH)[ FD ]
Line_5 $$ if (ProjectUtil.isDirectoryBased(myProject)) -->Line_18 $$ wrapper.setAlignmentX(0)[ CD ]
Line_2 $$ private void init(final ProjectSdksModel model) -->Line_4 $$ myPanel.setPreferredSize(JBUI.size(700, 500))[ CD ]
Line_34 $$ myProjectJdkConfigurable.addChangeListener(new ActionListener() -->Line_38 $$ myLanguageLevelCombo.sdkUpdated(myProjectJdkConfigurable.getSelectedProjectJdk(), myProject.isDefault())[ CD ]
Line_5 $$ if (ProjectUtil.isDirectoryBased(myProject)) -->Line_6 $$ final JPanel namePanel = new JPanel(new BorderLayout())[ CD ]
Line_5 $$ if (ProjectUtil.isDirectoryBased(myProject)) -->Line_10 $$ myProjectName.setColumns(40)[ CD ]
Line_2 $$ private void init(final ProjectSdksModel model) -->Line_24 $$ myPanel.setBorder(new EmptyBorder(0, 10, 0, 10))[ CD ]
Line_2 $$ private void init(final ProjectSdksModel model) -->Line_5 $$ if (ProjectUtil.isDirectoryBased(myProject)) [ CD ]
Line_25 $$ myProjectCompilerOutput.getTextField().getDocument().addDocumentListener(new DocumentAdapter() -->Line_29 $$ if (myFreeze)[ CD ]
Line_2 $$ private void init(final ProjectSdksModel model) -->Line_23 $$ myPanel.add(myWholePanel, new GridBagConstraints(0, GridBagConstraints.RELATIVE, 1, 1, 1.0, 1.0, GridBagConstraints.NORTHWEST, GridBagConstraints.NONE, new Insets(4, 0, 0, 0), 0, 0))[ CD ]
Line_2 $$ private void init(final ProjectSdksModel model) -->Line_34 $$ myProjectJdkConfigurable.addChangeListener(new ActionListener() [ CD ]
Line_25 $$ myProjectCompilerOutput.getTextField().getDocument().addDocumentListener(new DocumentAdapter() -->Line_31 $$ myModulesConfigurator.processModuleCompilerOutputChanged(getCompilerOutputUrl())[ CD ]
Line_2 $$ private void init(final ProjectSdksModel model) -->Line_25 $$ myProjectCompilerOutput.getTextField().getDocument().addDocumentListener(new DocumentAdapter() [ CD ]
Line_42 $$ myLanguageLevelCombo.addActionListener(new ActionListener() -->Line_46 $$ LanguageLevelProjectExtensionImpl.getInstanceImpl(myProject).setCurrentLevel(myLanguageLevelCombo.getSelectedLevel())[ CD ]
Line_5 $$ if (ProjectUtil.isDirectoryBased(myProject)) -->Line_15 $$ namePanel.add(nameFieldPanel, BorderLayout.CENTER)[ CD ]
Line_5 $$ if (ProjectUtil.isDirectoryBased(myProject)) -->Line_17 $$ wrapper.add(namePanel)[ CD ]
