Line_2 $$ public JComponent createOptionsPanel() -->Line_111 $$ scrollPane.setPreferredSize(new Dimension(panel.getPreferredSize().width + scrollPane.getVerticalScrollBar().getPreferredSize().width, panel.getPreferredSize().height + scrollPane.getHorizontalScrollBar().getPreferredSize().height))[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_54 $$ chkToString.addChangeListener(new ChangeListener() [ CD ]
Line_100 $$ final FieldPanel nonNlsCommentPatternComponent = new FieldPanel(text, CodeInsightBundle.message("inspection.i18n.option.ignore.comment.pattern"), CodeInsightBundle.message("inspection.i18n.option.ignore.comment.title"), null, new Runnable() -->Line_103 $$ cacheNonNlsCommentPattern()[ CD ]
Line_30 $$ classRef.addChangeListener(new ChangeListener() -->Line_32 $$ ignoreForClassReferences = classRef.isSelected()[ CD ]
Line_4 $$ final JPanel panel = new JPanel(layout)-->Line_87 $$ panel.add(propertyRef, gc)[ FD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_110 $$ scrollPane.setBorder(null)[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_36 $$ propertyRef.addChangeListener(new ChangeListener() [ CD ]
Line_79 $$ panel.add(new FieldPanel(specifiedExceptions, null, CodeInsightBundle.message("inspection.i18n.option.ignore.for.specified.exception.constructor.arguments"), openProjects.length == 0 ? null : new ActionListener() -->Line_81 $$ createIgnoreExceptionsConfigurationDialog(openProjects[0], specifiedExceptions).show()[ CD ]
Line_4 $$ final JPanel panel = new JPanel(layout)-->Line_93 $$ panel.add(nonAlpha, gc)[ FD ]
Line_5 $$ final JCheckBox assertStatementsCheckbox = new JCheckBox(CodeInsightBundle.message("inspection.i18n.option.ignore.assert"), ignoreForAssertStatements)-->Line_8 $$ ignoreForAssertStatements = assertStatementsCheckbox.isSelected()[ FD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_86 $$ gc.gridy++[ CD ]
Line_4 $$ final JPanel panel = new JPanel(layout)-->Line_91 $$ panel.add(chkToString, gc)[ FD ]
Line_4 $$ final JPanel panel = new JPanel(layout)-->Line_106 $$ panel.add(nonNlsCommentPatternComponent, gc)[ FD ]
Line_4 $$ final JPanel panel = new JPanel(layout)-->Line_89 $$ panel.add(assignedToConstants, gc)[ FD ]
Line_4 $$ final JPanel panel = new JPanel(layout)-->Line_85 $$ panel.add(classRef, gc)[ FD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_91 $$ panel.add(chkToString, gc)[ CD ]
Line_24 $$ junitAssertCheckbox.addChangeListener(new ChangeListener() -->Line_26 $$ ignoreForJUnitAsserts = junitAssertCheckbox.isSelected()[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_66 $$ gc.fill = GridBagConstraints.HORIZONTAL[ CD ]
Line_5 $$ final JCheckBox assertStatementsCheckbox = new JCheckBox(CodeInsightBundle.message("inspection.i18n.option.ignore.assert"), ignoreForAssertStatements)-->Line_6 $$ assertStatementsCheckbox.addChangeListener(new ChangeListener() [ FD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_70 $$ gc.weightx = 1[ CD ]
Line_54 $$ chkToString.addChangeListener(new ChangeListener() -->Line_56 $$ ignoreToString = chkToString.isSelected()[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_69 $$ gc.gridy = 0[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_6 $$ assertStatementsCheckbox.addChangeListener(new ChangeListener() [ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_95 $$ panel.add(ignoreEnumConstants, gc)[ CD ]
Line_4 $$ final JPanel panel = new JPanel(layout)-->Line_111 $$ scrollPane.setPreferredSize(new Dimension(panel.getPreferredSize().width + scrollPane.getVerticalScrollBar().getPreferredSize().width, panel.getPreferredSize().height + scrollPane.getHorizontalScrollBar().getPreferredSize().height))[ FD ]
Line_4 $$ final JPanel panel = new JPanel(layout)-->Line_72 $$ panel.add(assertStatementsCheckbox, gc)[ FD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_77 $$ gc.gridy++[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_74 $$ panel.add(junitAssertCheckbox, gc)[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_109 $$ scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED)[ CD ]
Line_4 $$ final JPanel panel = new JPanel(layout)-->Line_76 $$ panel.add(exceptionConstructorCheck, gc)[ FD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_78 $$ final Project[] openProjects = ProjectManager.getInstance().getOpenProjects()[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_72 $$ panel.add(assertStatementsCheckbox, gc)[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_106 $$ panel.add(nonNlsCommentPatternComponent, gc)[ CD ]
Line_4 $$ final JPanel panel = new JPanel(layout)-->Line_79 $$ panel.add(new FieldPanel(specifiedExceptions, null, CodeInsightBundle.message("inspection.i18n.option.ignore.for.specified.exception.constructor.arguments"), openProjects.length == 0 ? null : new ActionListener() [ FD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_79 $$ panel.add(new FieldPanel(specifiedExceptions, null, CodeInsightBundle.message("inspection.i18n.option.ignore.for.specified.exception.constructor.arguments"), openProjects.length == 0 ? null : new ActionListener() [ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_30 $$ classRef.addChangeListener(new ChangeListener() [ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_108 $$ scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED)[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_24 $$ junitAssertCheckbox.addChangeListener(new ChangeListener() [ CD ]
Line_4 $$ final JPanel panel = new JPanel(layout)-->Line_107 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(panel)[ FD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_112 $$ return scrollPane[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_75 $$ gc.gridy++[ CD ]
Line_4 $$ final JPanel panel = new JPanel(layout)-->Line_74 $$ panel.add(junitAssertCheckbox, gc)[ FD ]
Line_6 $$ assertStatementsCheckbox.addChangeListener(new ChangeListener() -->Line_8 $$ ignoreForAssertStatements = assertStatementsCheckbox.isSelected()[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_42 $$ nonAlpha.addChangeListener(new ChangeListener() [ CD ]
Line_60 $$ ignoreEnumConstants.addChangeListener(new ChangeListener() -->Line_62 $$ ignoreForEnumConstants = ignoreEnumConstants.isSelected()[ CD ]
Line_36 $$ propertyRef.addChangeListener(new ChangeListener() -->Line_38 $$ ignoreForPropertyKeyReferences = propertyRef.isSelected()[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_89 $$ panel.add(assignedToConstants, gc)[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_96 $$ gc.gridy++[ CD ]
Line_48 $$ assignedToConstants.addChangeListener(new ChangeListener() -->Line_50 $$ ignoreAssignedToConstants = assignedToConstants.isSelected()[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_88 $$ gc.gridy++[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_84 $$ gc.gridy++[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_97 $$ gc.anchor = GridBagConstraints.NORTHWEST[ CD ]
Line_4 $$ final JPanel panel = new JPanel(layout)-->Line_95 $$ panel.add(ignoreEnumConstants, gc)[ FD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_90 $$ gc.gridy++[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_94 $$ gc.gridy++[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_73 $$ gc.gridy++[ CD ]
Line_42 $$ nonAlpha.addChangeListener(new ChangeListener() -->Line_44 $$ ignoreForNonAlpha = nonAlpha.isSelected()[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_76 $$ panel.add(exceptionConstructorCheck, gc)[ CD ]
Line_5 $$ final JCheckBox assertStatementsCheckbox = new JCheckBox(CodeInsightBundle.message("inspection.i18n.option.ignore.assert"), ignoreForAssertStatements)-->Line_72 $$ panel.add(assertStatementsCheckbox, gc)[ FD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_87 $$ panel.add(propertyRef, gc)[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_4 $$ final JPanel panel = new JPanel(layout)[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_92 $$ gc.gridy++[ CD ]
Line_18 $$ specifiedExceptions.getDocument().addDocumentListener(new DocumentAdapter() -->Line_20 $$ ignoreForSpecifiedExceptionConstructors = specifiedExceptions.getText()[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_85 $$ panel.add(classRef, gc)[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_93 $$ panel.add(nonAlpha, gc)[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_60 $$ ignoreEnumConstants.addChangeListener(new ChangeListener() [ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_68 $$ gc.gridx = GridBagConstraints.REMAINDER[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_3 $$ final GridBagLayout layout = new GridBagLayout()[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_18 $$ specifiedExceptions.getDocument().addDocumentListener(new DocumentAdapter() [ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_5 $$ final JCheckBox assertStatementsCheckbox = new JCheckBox(CodeInsightBundle.message("inspection.i18n.option.ignore.assert"), ignoreForAssertStatements)[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_67 $$ gc.insets.bottom = 2[ CD ]
Line_100 $$ final FieldPanel nonNlsCommentPatternComponent = new FieldPanel(text, CodeInsightBundle.message("inspection.i18n.option.ignore.comment.pattern"), CodeInsightBundle.message("inspection.i18n.option.ignore.comment.title"), null, new Runnable() -->Line_102 $$ nonNlsCommentPattern = text.getText()[ CD ]
Line_12 $$ exceptionConstructorCheck.addChangeListener(new ChangeListener() -->Line_14 $$ ignoreForExceptionConstructors = exceptionConstructorCheck.isSelected()[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_48 $$ assignedToConstants.addChangeListener(new ChangeListener() [ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_12 $$ exceptionConstructorCheck.addChangeListener(new ChangeListener() [ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_71 $$ gc.weighty = 0[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_98 $$ gc.weighty = 1[ CD ]
Line_2 $$ public JComponent createOptionsPanel() -->Line_107 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(panel)[ CD ]
