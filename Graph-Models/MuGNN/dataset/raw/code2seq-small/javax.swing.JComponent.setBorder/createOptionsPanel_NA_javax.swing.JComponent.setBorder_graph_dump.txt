Line_5 $$ final JPanel panel = new JPanel(layout)-->Line_95 $$ panel.add(junitAssertCheckbox, gc)[ FD ]
Line_39 $$ classRef.addChangeListener(new ChangeListener() -->Line_43 $$ ignoreForClassReferences = classRef.isSelected()[ CD ]
Line_6 $$ final JCheckBox assertStatementsCheckbox = new JCheckBox(CodeInsightBundle.message("inspection.i18n.option.ignore.assert"), ignoreForAssertStatements)-->Line_11 $$ ignoreForAssertStatements = assertStatementsCheckbox.isSelected()[ FD ]
Line_123 $$ final FieldPanel nonNlsCommentPatternComponent = new FieldPanel(text, CodeInsightBundle.message("inspection.i18n.option.ignore.comment.pattern"), CodeInsightBundle.message("inspection.i18n.option.ignore.comment.title"), null, new Runnable() -->Line_127 $$ nonNlsCommentPattern = text.getText()[ CD ]
Line_5 $$ final JPanel panel = new JPanel(layout)-->Line_108 $$ panel.add(classRef, gc)[ FD ]
Line_79 $$ ignoreEnumConstants.addChangeListener(new ChangeListener() -->Line_83 $$ ignoreForEnumConstants = ignoreEnumConstants.isSelected()[ CD ]
Line_55 $$ nonAlpha.addChangeListener(new ChangeListener() -->Line_59 $$ ignoreForNonAlpha = nonAlpha.isSelected()[ CD ]
Line_5 $$ final JPanel panel = new JPanel(layout)-->Line_93 $$ panel.add(assertStatementsCheckbox, gc)[ FD ]
Line_31 $$ junitAssertCheckbox.addChangeListener(new ChangeListener() -->Line_35 $$ ignoreForJUnitAsserts = junitAssertCheckbox.isSelected()[ CD ]
Line_7 $$ assertStatementsCheckbox.addChangeListener(new ChangeListener() -->Line_11 $$ ignoreForAssertStatements = assertStatementsCheckbox.isSelected()[ CD ]
Line_15 $$ exceptionConstructorCheck.addChangeListener(new ChangeListener() -->Line_19 $$ ignoreForExceptionConstructors = exceptionConstructorCheck.isSelected()[ CD ]
Line_100 $$ panel.add(new FieldPanel(specifiedExceptions, null, CodeInsightBundle.message("inspection.i18n.option.ignore.for.specified.exception.constructor.arguments"), openProjects.length == 0 ? null : new ActionListener() -->Line_104 $$ createIgnoreExceptionsConfigurationDialog(openProjects[0], specifiedExceptions).show()[ CD ]
Line_5 $$ final JPanel panel = new JPanel(layout)-->Line_110 $$ panel.add(propertyRef, gc)[ FD ]
Line_6 $$ final JCheckBox assertStatementsCheckbox = new JCheckBox(CodeInsightBundle.message("inspection.i18n.option.ignore.assert"), ignoreForAssertStatements)-->Line_93 $$ panel.add(assertStatementsCheckbox, gc)[ FD ]
Line_23 $$ specifiedExceptions.getDocument().addDocumentListener(new DocumentAdapter() -->Line_27 $$ ignoreForSpecifiedExceptionConstructors = specifiedExceptions.getText()[ CD ]
Line_71 $$ chkToString.addChangeListener(new ChangeListener() -->Line_75 $$ ignoreToString = chkToString.isSelected()[ CD ]
Line_123 $$ final FieldPanel nonNlsCommentPatternComponent = new FieldPanel(text, CodeInsightBundle.message("inspection.i18n.option.ignore.comment.pattern"), CodeInsightBundle.message("inspection.i18n.option.ignore.comment.title"), null, new Runnable() -->Line_128 $$ cacheNonNlsCommentPattern()[ CD ]
Line_47 $$ propertyRef.addChangeListener(new ChangeListener() -->Line_51 $$ ignoreForPropertyKeyReferences = propertyRef.isSelected()[ CD ]
Line_5 $$ final JPanel panel = new JPanel(layout)-->Line_114 $$ panel.add(chkToString, gc)[ FD ]
Line_5 $$ final JPanel panel = new JPanel(layout)-->Line_112 $$ panel.add(assignedToConstants, gc)[ FD ]
Line_5 $$ final JPanel panel = new JPanel(layout)-->Line_132 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(panel)[ FD ]
Line_5 $$ final JPanel panel = new JPanel(layout)-->Line_118 $$ panel.add(ignoreEnumConstants, gc)[ FD ]
Line_5 $$ final JPanel panel = new JPanel(layout)-->Line_116 $$ panel.add(nonAlpha, gc)[ FD ]
Line_5 $$ final JPanel panel = new JPanel(layout)-->Line_136 $$ scrollPane.setPreferredSize(new Dimension(panel.getPreferredSize().width + scrollPane.getVerticalScrollBar().getPreferredSize().width, panel.getPreferredSize().height + scrollPane.getHorizontalScrollBar().getPreferredSize().height))[ FD ]
Line_63 $$ assignedToConstants.addChangeListener(new ChangeListener() -->Line_67 $$ ignoreAssignedToConstants = assignedToConstants.isSelected()[ CD ]
Line_5 $$ final JPanel panel = new JPanel(layout)-->Line_100 $$ panel.add(new FieldPanel(specifiedExceptions, null, CodeInsightBundle.message("inspection.i18n.option.ignore.for.specified.exception.constructor.arguments"), openProjects.length == 0 ? null : new ActionListener() [ FD ]
Line_5 $$ final JPanel panel = new JPanel(layout)-->Line_131 $$ panel.add(nonNlsCommentPatternComponent, gc)[ FD ]
Line_5 $$ final JPanel panel = new JPanel(layout)-->Line_97 $$ panel.add(exceptionConstructorCheck, gc)[ FD ]
Line_6 $$ final JCheckBox assertStatementsCheckbox = new JCheckBox(CodeInsightBundle.message("inspection.i18n.option.ignore.assert"), ignoreForAssertStatements)-->Line_7 $$ assertStatementsCheckbox.addChangeListener(new ChangeListener() [ FD ]
