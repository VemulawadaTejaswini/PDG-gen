Line_6 $$ if (splitAvailable()) -->Line_16 $$ final JPanel panel = myPanel[ CD ]
Line_25 $$ if (myTabbedPane != null) -->Line_64 $$ splitter.setSecondComponent(res.myPanel)[ CD ]
Line_25 $$ if (myTabbedPane != null) -->Line_27 $$ panel.remove(myTabbedPane.getComponent())[ CD ]
Line_19 $$ if (tabCount != 0) -->Line_22 $$ myPanel.setOpaque(false)[ CD ]
Line_7 $$ if (!forceSplit && inSplitter()) -->Line_9 $$ final EditorWindow target = siblings[0][ CD ]
Line_16 $$ final JPanel panel = myPanel-->Line_65 $$ panel.revalidate()[ FD ]
Line_16 $$ final JPanel panel = myPanel-->Line_62 $$ panel.add(splitter, BorderLayout.CENTER)[ FD ]
Line_16 $$ final JPanel panel = myPanel-->Line_17 $$ panel.setBorder(null)[ FD ]
Line_18 $$ final int tabCount = getTabCount()-->Line_19 $$ if (tabCount != 0) [ FD ]
Line_26 $$ final EditorWithProviderComposite selectedEditor = getSelectedEditor()-->Line_56 $$ res.setSelectedEditor(selectedEditor, true)[ FD ]
Line_6 $$ if (splitAvailable()) -->Line_19 $$ if (tabCount != 0) [ CD ]
Line_25 $$ if (myTabbedPane != null) -->Line_42 $$ if (virtualFile == null) [ CD ]
Line_25 $$ if (myTabbedPane != null) -->Line_29 $$ splitter.setFirstComponent(myPanel)[ CD ]
Line_24 $$ final EditorWindow res = new EditorWindow(myOwner)-->Line_52 $$ final FileEditor[] editors = fileEditorManager.openFileImpl3(res, nextFile, focusNew, null, true).first[ FD ]
Line_43 $$ for (FileEditorAssociateFinder finder : Extensions.getExtensions(FileEditorAssociateFinder.EP_NAME)) -->Line_44 $$ VirtualFile associatedFile = finder.getAssociatedFileToOpen(fileEditorManager.getProject(), file)[ FD ]
Line_25 $$ if (myTabbedPane != null) -->Line_71 $$ syncCaretIfPossible(secondEditors)[ CD ]
Line_26 $$ final EditorWithProviderComposite selectedEditor = getSelectedEditor()-->Line_57 $$ selectedEditor.getComponent().requestFocus()[ FD ]
Line_19 $$ if (tabCount != 0) -->Line_23 $$ final Splitter splitter = new OnePixelSplitter(orientation == JSplitPane.VERTICAL_SPLIT, 0.5f, 0.1f, 0.9f)[ CD ]
Line_24 $$ final EditorWindow res = new EditorWindow(myOwner)-->Line_56 $$ res.setSelectedEditor(selectedEditor, true)[ FD ]
Line_24 $$ final EditorWindow res = new EditorWindow(myOwner)-->Line_54 $$ res.setFilePinned(nextFile, isFilePinned(file))[ FD ]
Line_19 $$ if (tabCount != 0) -->Line_24 $$ final EditorWindow res = new EditorWindow(myOwner)[ CD ]
Line_11 $$ final FileEditor[] editors = fileEditorManager.openFileImpl3(target, virtualFile, focusNew, null, true).first-->Line_53 $$ syncCaretIfPossible(editors)[ FD ]
Line_51 $$ final VirtualFile nextFile = virtualFile == null ? file : virtualFile-->Line_70 $$ final FileEditor[] secondEditors = fileEditorManager.openFileImpl3(res, nextFile, focusNew, null, true).first[ FD ]
Line_25 $$ if (myTabbedPane != null) -->Line_28 $$ panel.add(splitter, BorderLayout.CENTER)[ CD ]
Line_5 $$ final FileEditorManagerImpl fileEditorManager = myOwner.getManager()-->Line_11 $$ final FileEditor[] editors = fileEditorManager.openFileImpl3(target, virtualFile, focusNew, null, true).first[ FD ]
Line_25 $$ if (myTabbedPane != null) -->Line_68 $$ final FileEditor[] firstEditors = fileEditorManager.openFileImpl3(this, firstFile, !focusNew, null, true).first[ CD ]
Line_25 $$ if (myTabbedPane != null) -->Line_31 $$ splitter.setSecondComponent(res.myPanel)[ CD ]
Line_16 $$ final JPanel panel = myPanel-->Line_61 $$ panel.removeAll()[ FD ]
Line_25 $$ if (myTabbedPane != null) -->Line_30 $$ myPanel.add(myTabbedPane.getComponent(), BorderLayout.CENTER)[ CD ]
Line_25 $$ if (myTabbedPane != null) -->Line_54 $$ res.setFilePinned(nextFile, isFilePinned(file))[ CD ]
Line_66 $$ final VirtualFile firstFile = firstEC.getFile()-->Line_68 $$ final FileEditor[] firstEditors = fileEditorManager.openFileImpl3(this, firstFile, !focusNew, null, true).first[ FD ]
Line_9 $$ final EditorWindow target = siblings[0]-->Line_11 $$ final FileEditor[] editors = fileEditorManager.openFileImpl3(target, virtualFile, focusNew, null, true).first[ FD ]
Line_10 $$ if (virtualFile != null) -->Line_12 $$ syncCaretIfPossible(editors)[ CD ]
Line_16 $$ final JPanel panel = myPanel-->Line_28 $$ panel.add(splitter, BorderLayout.CENTER)[ FD ]
Line_5 $$ final FileEditorManagerImpl fileEditorManager = myOwner.getManager()-->Line_52 $$ final FileEditor[] editors = fileEditorManager.openFileImpl3(res, nextFile, focusNew, null, true).first[ FD ]
Line_7 $$ if (!forceSplit && inSplitter()) -->Line_10 $$ if (virtualFile != null) [ CD ]
Line_25 $$ if (myTabbedPane != null) -->Line_55 $$ if (!focusNew) [ CD ]
Line_25 $$ if (myTabbedPane != null) -->Line_69 $$ syncCaretIfPossible(firstEditors)[ CD ]
Line_68 $$ final FileEditor[] firstEditors = fileEditorManager.openFileImpl3(this, firstFile, !focusNew, null, true).first-->Line_69 $$ syncCaretIfPossible(firstEditors)[ FD ]
Line_55 $$ if (!focusNew) -->Line_57 $$ selectedEditor.getComponent().requestFocus()[ CD ]
Line_23 $$ final Splitter splitter = new OnePixelSplitter(orientation == JSplitPane.VERTICAL_SPLIT, 0.5f, 0.1f, 0.9f)-->Line_28 $$ panel.add(splitter, BorderLayout.CENTER)[ FD ]
Line_24 $$ final EditorWindow res = new EditorWindow(myOwner)-->Line_70 $$ final FileEditor[] secondEditors = fileEditorManager.openFileImpl3(res, nextFile, focusNew, null, true).first[ FD ]
Line_25 $$ if (myTabbedPane != null) -->Line_62 $$ panel.add(splitter, BorderLayout.CENTER)[ CD ]
Line_23 $$ final Splitter splitter = new OnePixelSplitter(orientation == JSplitPane.VERTICAL_SPLIT, 0.5f, 0.1f, 0.9f)-->Line_31 $$ splitter.setSecondComponent(res.myPanel)[ FD ]
Line_10 $$ if (virtualFile != null) -->Line_11 $$ final FileEditor[] editors = fileEditorManager.openFileImpl3(target, virtualFile, focusNew, null, true).first[ CD ]
Line_51 $$ final VirtualFile nextFile = virtualFile == null ? file : virtualFile-->Line_54 $$ res.setFilePinned(nextFile, isFilePinned(file))[ FD ]
Line_25 $$ if (myTabbedPane != null) -->Line_26 $$ final EditorWithProviderComposite selectedEditor = getSelectedEditor()[ CD ]
Line_25 $$ if (myTabbedPane != null) -->Line_66 $$ final VirtualFile firstFile = firstEC.getFile()[ CD ]
Line_19 $$ if (tabCount != 0) -->Line_73 $$ return res[ CD ]
Line_23 $$ final Splitter splitter = new OnePixelSplitter(orientation == JSplitPane.VERTICAL_SPLIT, 0.5f, 0.1f, 0.9f)-->Line_62 $$ panel.add(splitter, BorderLayout.CENTER)[ FD ]
Line_51 $$ final VirtualFile nextFile = virtualFile == null ? file : virtualFile-->Line_52 $$ final FileEditor[] editors = fileEditorManager.openFileImpl3(res, nextFile, focusNew, null, true).first[ FD ]
Line_25 $$ if (myTabbedPane != null) -->Line_65 $$ panel.revalidate()[ CD ]
Line_7 $$ if (!forceSplit && inSplitter()) -->Line_14 $$ return target[ CD ]
Line_16 $$ final JPanel panel = myPanel-->Line_27 $$ panel.remove(myTabbedPane.getComponent())[ FD ]
Line_5 $$ final FileEditorManagerImpl fileEditorManager = myOwner.getManager()-->Line_70 $$ final FileEditor[] secondEditors = fileEditorManager.openFileImpl3(res, nextFile, focusNew, null, true).first[ FD ]
Line_11 $$ final FileEditor[] editors = fileEditorManager.openFileImpl3(target, virtualFile, focusNew, null, true).first-->Line_12 $$ syncCaretIfPossible(editors)[ FD ]
Line_23 $$ final Splitter splitter = new OnePixelSplitter(orientation == JSplitPane.VERTICAL_SPLIT, 0.5f, 0.1f, 0.9f)-->Line_64 $$ splitter.setSecondComponent(res.myPanel)[ FD ]
Line_6 $$ if (splitAvailable()) -->Line_18 $$ final int tabCount = getTabCount()[ CD ]
Line_55 $$ if (!focusNew) -->Line_56 $$ res.setSelectedEditor(selectedEditor, true)[ CD ]
Line_5 $$ final FileEditorManagerImpl fileEditorManager = myOwner.getManager()-->Line_44 $$ VirtualFile associatedFile = finder.getAssociatedFileToOpen(fileEditorManager.getProject(), file)[ FD ]
Line_25 $$ if (myTabbedPane != null) -->Line_51 $$ final VirtualFile nextFile = virtualFile == null ? file : virtualFile[ CD ]
Line_25 $$ if (myTabbedPane != null) -->Line_59 $$ panel.revalidate()[ CD ]
Line_5 $$ final FileEditorManagerImpl fileEditorManager = myOwner.getManager()-->Line_68 $$ final FileEditor[] firstEditors = fileEditorManager.openFileImpl3(this, firstFile, !focusNew, null, true).first[ FD ]
Line_23 $$ final Splitter splitter = new OnePixelSplitter(orientation == JSplitPane.VERTICAL_SPLIT, 0.5f, 0.1f, 0.9f)-->Line_63 $$ splitter.setFirstComponent(myPanel)[ FD ]
Line_6 $$ if (splitAvailable()) -->Line_7 $$ if (!forceSplit && inSplitter()) [ CD ]
Line_7 $$ if (!forceSplit && inSplitter()) -->Line_8 $$ final EditorWindow[] siblings = findSiblings()[ CD ]
Line_25 $$ if (myTabbedPane != null) -->Line_63 $$ splitter.setFirstComponent(myPanel)[ CD ]
Line_25 $$ if (myTabbedPane != null) -->Line_70 $$ final FileEditor[] secondEditors = fileEditorManager.openFileImpl3(res, nextFile, focusNew, null, true).first[ CD ]
Line_25 $$ if (myTabbedPane != null) -->Line_61 $$ panel.removeAll()[ CD ]
Line_23 $$ final Splitter splitter = new OnePixelSplitter(orientation == JSplitPane.VERTICAL_SPLIT, 0.5f, 0.1f, 0.9f)-->Line_29 $$ splitter.setFirstComponent(myPanel)[ FD ]
Line_16 $$ final JPanel panel = myPanel-->Line_59 $$ panel.revalidate()[ FD ]
Line_19 $$ if (tabCount != 0) -->Line_20 $$ final EditorWithProviderComposite firstEC = getEditorAt(0)[ CD ]
Line_44 $$ VirtualFile associatedFile = finder.getAssociatedFileToOpen(fileEditorManager.getProject(), file)-->Line_45 $$ if (associatedFile != null) [ FD ]
Line_25 $$ if (myTabbedPane != null) -->Line_53 $$ syncCaretIfPossible(editors)[ CD ]
Line_70 $$ final FileEditor[] secondEditors = fileEditorManager.openFileImpl3(res, nextFile, focusNew, null, true).first-->Line_71 $$ syncCaretIfPossible(secondEditors)[ FD ]
Line_20 $$ final EditorWithProviderComposite firstEC = getEditorAt(0)-->Line_66 $$ final VirtualFile firstFile = firstEC.getFile()[ FD ]
Line_19 $$ if (tabCount != 0) -->Line_25 $$ if (myTabbedPane != null) [ CD ]
Line_6 $$ if (splitAvailable()) -->Line_17 $$ panel.setBorder(null)[ CD ]
