Line_9 $$ for (PsiClass aClass : myThisClassesMap.keySet()) -->Line_10 $$ final String text = RefactoringBundle.message("move.method.this.parameter.label", aClass.getName())[ FD ]
Line_6 $$ if (myThisClassesMap.size() == 0)-->Line_7 $$ return null[ CD ]
Line_8 $$ JPanel panel = new JPanel(new VerticalFlowLayout(VerticalFlowLayout.TOP, 0, 0, true, true))-->Line_11 $$ panel.add(new TitledSeparator(text, null))[ FD ]
Line_9 $$ for (PsiClass aClass : myThisClassesMap.keySet()) -->Line_12 $$ String suggestedName = MoveInstanceMethodHandler.suggestParameterNameForThisClass(aClass)[ FD ]
Line_8 $$ JPanel panel = new JPanel(new VerticalFlowLayout(VerticalFlowLayout.TOP, 0, 0, true, true))-->Line_16 $$ panel.add(field)[ FD ]
Line_13 $$ final EditorTextField field = new EditorTextField(suggestedName, getProject(), StdFileTypes.JAVA)-->Line_15 $$ myOldClassParameterNameFields.put(aClass, field)[ FD ]
Line_13 $$ final EditorTextField field = new EditorTextField(suggestedName, getProject(), StdFileTypes.JAVA)-->Line_14 $$ field.setMinimumSize(new Dimension(field.getPreferredSize()))[ FD ]
Line_8 $$ JPanel panel = new JPanel(new VerticalFlowLayout(VerticalFlowLayout.TOP, 0, 0, true, true))-->Line_18 $$ panel.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0))[ FD ]
Line_9 $$ for (PsiClass aClass : myThisClassesMap.keySet()) -->Line_15 $$ myOldClassParameterNameFields.put(aClass, field)[ FD ]
Line_13 $$ final EditorTextField field = new EditorTextField(suggestedName, getProject(), StdFileTypes.JAVA)-->Line_16 $$ panel.add(field)[ FD ]
