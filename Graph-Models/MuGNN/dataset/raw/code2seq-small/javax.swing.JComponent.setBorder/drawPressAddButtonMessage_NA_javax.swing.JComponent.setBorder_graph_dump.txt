Line_21 $$ JPanel wrapper = new JPanel(new BorderLayout())-->Line_23 $$ wrapper.add(Box.createGlue(), BorderLayout.CENTER)[ FD ]
Line_2 $$ private void drawPressAddButtonMessage(final ConfigurationType configurationType) -->Line_10 $$ panel.add(new JLabel(ExecutionBundle.message("empty.run.configuration.panel.text.label3", configurationTypeDescription)))[ CD ]
Line_21 $$ JPanel wrapper = new JPanel(new BorderLayout())-->Line_22 $$ wrapper.add(settingsPanel, BorderLayout.WEST)[ FD ]
Line_2 $$ private void drawPressAddButtonMessage(final ConfigurationType configurationType) -->Line_14 $$ if (configurationType == null) [ CD ]
Line_14 $$ if (configurationType == null) -->Line_20 $$ settingsPanel.add(createSettingsPanel(), grid.nextLine().next())[ CD ]
Line_2 $$ private void drawPressAddButtonMessage(final ConfigurationType configurationType) -->Line_3 $$ JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEFT, 0, 0))[ CD ]
Line_2 $$ private void drawPressAddButtonMessage(final ConfigurationType configurationType) -->Line_8 $$ panel.add(addIcon)[ CD ]
Line_2 $$ private void drawPressAddButtonMessage(final ConfigurationType configurationType) -->Line_4 $$ panel.setBorder(new EmptyBorder(30, 0, 0, 0))[ CD ]
Line_6 $$ ActionLink addIcon = new ActionLink("", ADD_ICON, myAddAction)-->Line_7 $$ addIcon.setBorder(new EmptyBorder(0, 0, 0, 5))[ FD ]
Line_14 $$ if (configurationType == null) -->Line_15 $$ JPanel settingsPanel = new JPanel(new GridBagLayout())[ CD ]
Line_14 $$ if (configurationType == null) -->Line_24 $$ myRightPanel.add(wrapper, BorderLayout.SOUTH)[ CD ]
Line_15 $$ JPanel settingsPanel = new JPanel(new GridBagLayout())-->Line_22 $$ wrapper.add(settingsPanel, BorderLayout.WEST)[ FD ]
Line_21 $$ JPanel wrapper = new JPanel(new BorderLayout())-->Line_24 $$ myRightPanel.add(wrapper, BorderLayout.SOUTH)[ FD ]
Line_3 $$ JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEFT, 0, 0))-->Line_4 $$ panel.setBorder(new EmptyBorder(30, 0, 0, 0))[ FD ]
Line_3 $$ JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEFT, 0, 0))-->Line_8 $$ panel.add(addIcon)[ FD ]
Line_2 $$ private void drawPressAddButtonMessage(final ConfigurationType configurationType) -->Line_9 $$ final String configurationTypeDescription = configurationType != null ? configurationType.getConfigurationTypeDescription() : ExecutionBundle.message("run.configuration.default.type.description")[ FD ]
Line_11 $$ JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(panel, true)-->Line_13 $$ myRightPanel.add(scrollPane, BorderLayout.CENTER)[ FD ]
Line_2 $$ private void drawPressAddButtonMessage(final ConfigurationType configurationType) -->Line_11 $$ JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(panel, true)[ CD ]
Line_2 $$ private void drawPressAddButtonMessage(final ConfigurationType configurationType) -->Line_13 $$ myRightPanel.add(scrollPane, BorderLayout.CENTER)[ CD ]
Line_15 $$ JPanel settingsPanel = new JPanel(new GridBagLayout())-->Line_18 $$ settingsPanel.add(each.second, grid.nextLine().next())[ FD ]
Line_2 $$ private void drawPressAddButtonMessage(final ConfigurationType configurationType) -->Line_7 $$ addIcon.setBorder(new EmptyBorder(0, 0, 0, 5))[ CD ]
Line_2 $$ private void drawPressAddButtonMessage(final ConfigurationType configurationType) -->Line_9 $$ final String configurationTypeDescription = configurationType != null ? configurationType.getConfigurationTypeDescription() : ExecutionBundle.message("run.configuration.default.type.description")[ CD ]
Line_3 $$ JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEFT, 0, 0))-->Line_10 $$ panel.add(new JLabel(ExecutionBundle.message("empty.run.configuration.panel.text.label3", configurationTypeDescription)))[ FD ]
Line_3 $$ JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEFT, 0, 0))-->Line_11 $$ JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(panel, true)[ FD ]
Line_6 $$ ActionLink addIcon = new ActionLink("", ADD_ICON, myAddAction)-->Line_8 $$ panel.add(addIcon)[ FD ]
Line_14 $$ if (configurationType == null) -->Line_22 $$ wrapper.add(settingsPanel, BorderLayout.WEST)[ CD ]
Line_3 $$ JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEFT, 0, 0))-->Line_5 $$ panel.add(new JLabel("Press the"))[ FD ]
Line_16 $$ GridBag grid = new GridBag().setDefaultAnchor(GridBagConstraints.NORTHWEST)-->Line_20 $$ settingsPanel.add(createSettingsPanel(), grid.nextLine().next())[ FD ]
Line_2 $$ private void drawPressAddButtonMessage(final ConfigurationType configurationType) -->Line_6 $$ ActionLink addIcon = new ActionLink("", ADD_ICON, myAddAction)[ CD ]
Line_2 $$ private void drawPressAddButtonMessage(final ConfigurationType configurationType) -->Line_26 $$ myRightPanel.revalidate()[ CD ]
Line_2 $$ private void drawPressAddButtonMessage(final ConfigurationType configurationType) -->Line_5 $$ panel.add(new JLabel("Press the"))[ CD ]
Line_15 $$ JPanel settingsPanel = new JPanel(new GridBagLayout())-->Line_20 $$ settingsPanel.add(createSettingsPanel(), grid.nextLine().next())[ FD ]
Line_16 $$ GridBag grid = new GridBag().setDefaultAnchor(GridBagConstraints.NORTHWEST)-->Line_18 $$ settingsPanel.add(each.second, grid.nextLine().next())[ FD ]
Line_14 $$ if (configurationType == null) -->Line_23 $$ wrapper.add(Box.createGlue(), BorderLayout.CENTER)[ CD ]
Line_2 $$ private void drawPressAddButtonMessage(final ConfigurationType configurationType) -->Line_12 $$ myRightPanel.removeAll()[ CD ]
Line_14 $$ if (configurationType == null) -->Line_21 $$ JPanel wrapper = new JPanel(new BorderLayout())[ CD ]
Line_14 $$ if (configurationType == null) -->Line_16 $$ GridBag grid = new GridBag().setDefaultAnchor(GridBagConstraints.NORTHWEST)[ CD ]
Line_2 $$ private void drawPressAddButtonMessage(final ConfigurationType configurationType) -->Line_14 $$ if (configurationType == null) [ FD ]
Line_9 $$ final String configurationTypeDescription = configurationType != null ? configurationType.getConfigurationTypeDescription() : ExecutionBundle.message("run.configuration.default.type.description")-->Line_10 $$ panel.add(new JLabel(ExecutionBundle.message("empty.run.configuration.panel.text.label3", configurationTypeDescription)))[ FD ]
Line_2 $$ private void drawPressAddButtonMessage(final ConfigurationType configurationType) -->Line_27 $$ myRightPanel.repaint()[ CD ]
