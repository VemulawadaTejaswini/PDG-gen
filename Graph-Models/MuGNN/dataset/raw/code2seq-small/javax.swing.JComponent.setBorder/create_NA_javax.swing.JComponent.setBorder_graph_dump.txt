Line_11 $$ final JBList list = new JBList(scopes.toArray())-->Line_51 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(list)[ FD ]
Line_13 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_39 $$ list.addListSelectionListener(new ListSelectionListener() [ FD ]
Line_11 $$ final JBList list = new JBList(scopes.toArray())-->Line_13 $$ list.setCellRenderer(new DefaultListCellRenderer() [ FD ]
Line_54 $$ final List<Pair<ActionListener, KeyStroke>> keyboardActions = Collections.singletonList(Pair.<ActionListener, KeyStroke>create(new ActionListener() -->Line_58 $$ final GrParametersOwner ToSearchIn = (GrParametersOwner) list.getSelectedValue()[ CD ]
Line_68 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? ToSearchIn.getParent() : null-->Line_74 $$ callback.fun(ToSearchIn, toSearchFor)[ FD ]
Line_18 $$ final String text-->Line_29 $$ text = "[ FD ]
Line_58 $$ final GrParametersOwner ToSearchIn = (GrParametersOwner) list.getSelectedValue()-->Line_74 $$ callback.fun(ToSearchIn, toSearchFor)[ FD ]
Line_19 $$ if (value instanceof PsiMethod) -->Line_22 $$ final int flags = Iconable.ICON_FLAG_VISIBILITY[ CD ]
Line_8 $$ final JCheckBox superMethod = new JCheckBox(USE_SUPER_METHOD_OF, true)-->Line_10 $$ panel.add(superMethod, BorderLayout.SOUTH)[ FD ]
Line_43 $$ final GrParametersOwner selectedMethod = (GrParametersOwner) list.getSelectedValue()-->Line_44 $$ if (selectedMethod == null)[ FD ]
Line_8 $$ final JCheckBox superMethod = new JCheckBox(USE_SUPER_METHOD_OF, true)-->Line_50 $$ updateView(scopes.get(0), editor, attributes, highlighters, superMethod)[ FD ]
Line_7 $$ final JPanel panel = new JPanel(new BorderLayout())-->Line_10 $$ panel.add(superMethod, BorderLayout.SOUTH)[ FD ]
Line_21 $$ text = PsiFormatUtil.formatMethod(method, PsiSubstitutor.EMPTY, PsiFormatUtilBase.SHOW_CONTAINING_CLASS | PsiFormatUtilBase.SHOW_NAME | PsiFormatUtilBase.SHOW_PARAMETERS, PsiFormatUtilBase.SHOW_TYPE)-->Line_29 $$ text = "[ FD ]
Line_59 $$ final JBPopup popup = popupRef.get()-->Line_61 $$ popup.cancel()[ FD ]
Line_63 $$ final PsiElement toSearchFor-->Line_66 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? method.findDeepestSuperMethod() : method[ FD ]
Line_13 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_17 $$ super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus)[ FD ]
Line_58 $$ final GrParametersOwner ToSearchIn = (GrParametersOwner) list.getSelectedValue()-->Line_64 $$ if (ToSearchIn instanceof GrMethod) [ FD ]
Line_13 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_79 $$ return JBPopupFactory.getInstance().createComponentPopupBuilder(panel, list).setTitle("Introduce parameter to").setMovable(false).setResizable(false).setRequestFocus(true).setKeyboardActions(keyboardActions).addListener(new JBPopupAdapter() [ FD ]
Line_20 $$ final PsiMethod method = (PsiMethod) value-->Line_66 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? method.findDeepestSuperMethod() : method[ FD ]
Line_13 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_31 $$ setText(text)[ CD ]
Line_60 $$ if (popup != null && popup.isVisible()) -->Line_61 $$ popup.cancel()[ CD ]
Line_13 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_17 $$ super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus)[ CD ]
Line_13 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_51 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(list)[ FD ]
Line_39 $$ list.addListSelectionListener(new ListSelectionListener() -->Line_44 $$ if (selectedMethod == null)[ CD ]
Line_19 $$ if (value instanceof PsiMethod) -->Line_28 $$ setIcon(JetgroovyIcons.Groovy.Groovy_16x16)[ CD ]
Line_39 $$ list.addListSelectionListener(new ListSelectionListener() -->Line_43 $$ final GrParametersOwner selectedMethod = (GrParametersOwner) list.getSelectedValue()[ CD ]
Line_54 $$ final List<Pair<ActionListener, KeyStroke>> keyboardActions = Collections.singletonList(Pair.<ActionListener, KeyStroke>create(new ActionListener() -->Line_70 $$ IdeFocusManager.findInstance().doWhenFocusSettlesDown(new Runnable() [ CD ]
Line_63 $$ final PsiElement toSearchFor-->Line_74 $$ callback.fun(ToSearchIn, toSearchFor)[ FD ]
Line_70 $$ IdeFocusManager.findInstance().doWhenFocusSettlesDown(new Runnable() -->Line_74 $$ callback.fun(ToSearchIn, toSearchFor)[ CD ]
Line_65 $$ final GrMethod method = (GrMethod) ToSearchIn-->Line_66 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? method.findDeepestSuperMethod() : method[ FD ]
Line_23 $$ final Icon icon = method.getIcon(flags)-->Line_25 $$ setIcon(icon)[ FD ]
Line_44 $$ if (selectedMethod == null)-->Line_45 $$ return[ CD ]
Line_39 $$ list.addListSelectionListener(new ListSelectionListener() -->Line_47 $$ updateView(selectedMethod, editor, attributes, highlighters, superMethod)[ CD ]
Line_13 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_32 $$ return this[ CD ]
Line_13 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_19 $$ if (value instanceof PsiMethod) [ FD ]
Line_11 $$ final JBList list = new JBList(scopes.toArray())-->Line_17 $$ super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus)[ FD ]
Line_8 $$ final JCheckBox superMethod = new JCheckBox(USE_SUPER_METHOD_OF, true)-->Line_68 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? ToSearchIn.getParent() : null[ FD ]
Line_19 $$ if (value instanceof PsiMethod) -->Line_20 $$ final PsiMethod method = (PsiMethod) value[ CD ]
Line_23 $$ final Icon icon = method.getIcon(flags)-->Line_24 $$ if (icon != null)[ FD ]
Line_11 $$ final JBList list = new JBList(scopes.toArray())-->Line_43 $$ final GrParametersOwner selectedMethod = (GrParametersOwner) list.getSelectedValue()[ FD ]
Line_8 $$ final JCheckBox superMethod = new JCheckBox(USE_SUPER_METHOD_OF, true)-->Line_66 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? method.findDeepestSuperMethod() : method[ FD ]
Line_22 $$ final int flags = Iconable.ICON_FLAG_VISIBILITY-->Line_23 $$ final Icon icon = method.getIcon(flags)[ FD ]
Line_8 $$ final JCheckBox superMethod = new JCheckBox(USE_SUPER_METHOD_OF, true)-->Line_9 $$ superMethod.setMnemonic('U')[ FD ]
Line_66 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? method.findDeepestSuperMethod() : method-->Line_68 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? ToSearchIn.getParent() : null[ FD ]
Line_54 $$ final List<Pair<ActionListener, KeyStroke>> keyboardActions = Collections.singletonList(Pair.<ActionListener, KeyStroke>create(new ActionListener() -->Line_63 $$ final PsiElement toSearchFor[ CD ]
Line_79 $$ return JBPopupFactory.getInstance().createComponentPopupBuilder(panel, list).setTitle("Introduce parameter to").setMovable(false).setResizable(false).setRequestFocus(true).setKeyboardActions(keyboardActions).addListener(new JBPopupAdapter() -->Line_83 $$ dropHighlighters(highlighters)[ CD ]
Line_11 $$ final JBList list = new JBList(scopes.toArray())-->Line_35 $$ list.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION)[ FD ]
Line_39 $$ list.addListSelectionListener(new ListSelectionListener() -->Line_46 $$ dropHighlighters(highlighters)[ CD ]
Line_64 $$ if (ToSearchIn instanceof GrMethod) -->Line_65 $$ final GrMethod method = (GrMethod) ToSearchIn[ CD ]
Line_18 $$ final String text-->Line_31 $$ setText(text)[ FD ]
Line_19 $$ if (value instanceof PsiMethod) -->Line_24 $$ if (icon != null)[ CD ]
Line_18 $$ final String text-->Line_21 $$ text = PsiFormatUtil.formatMethod(method, PsiSubstitutor.EMPTY, PsiFormatUtilBase.SHOW_CONTAINING_CLASS | PsiFormatUtilBase.SHOW_NAME | PsiFormatUtilBase.SHOW_PARAMETERS, PsiFormatUtilBase.SHOW_TYPE)[ FD ]
Line_13 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_35 $$ list.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION)[ FD ]
Line_8 $$ final JCheckBox superMethod = new JCheckBox(USE_SUPER_METHOD_OF, true)-->Line_47 $$ updateView(selectedMethod, editor, attributes, highlighters, superMethod)[ FD ]
Line_64 $$ if (ToSearchIn instanceof GrMethod) -->Line_68 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? ToSearchIn.getParent() : null[ CD ]
Line_13 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_18 $$ final String text[ CD ]
Line_19 $$ if (value instanceof PsiMethod) -->Line_21 $$ text = PsiFormatUtil.formatMethod(method, PsiSubstitutor.EMPTY, PsiFormatUtilBase.SHOW_CONTAINING_CLASS | PsiFormatUtilBase.SHOW_NAME | PsiFormatUtilBase.SHOW_PARAMETERS, PsiFormatUtilBase.SHOW_TYPE)[ CD ]
Line_21 $$ text = PsiFormatUtil.formatMethod(method, PsiSubstitutor.EMPTY, PsiFormatUtilBase.SHOW_CONTAINING_CLASS | PsiFormatUtilBase.SHOW_NAME | PsiFormatUtilBase.SHOW_PARAMETERS, PsiFormatUtilBase.SHOW_TYPE)-->Line_31 $$ setText(text)[ FD ]
Line_13 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_58 $$ final GrParametersOwner ToSearchIn = (GrParametersOwner) list.getSelectedValue()[ FD ]
Line_11 $$ final JBList list = new JBList(scopes.toArray())-->Line_39 $$ list.addListSelectionListener(new ListSelectionListener() [ FD ]
Line_54 $$ final List<Pair<ActionListener, KeyStroke>> keyboardActions = Collections.singletonList(Pair.<ActionListener, KeyStroke>create(new ActionListener() -->Line_60 $$ if (popup != null && popup.isVisible()) [ CD ]
Line_29 $$ text = "-->Line_31 $$ setText(text)[ FD ]
Line_43 $$ final GrParametersOwner selectedMethod = (GrParametersOwner) list.getSelectedValue()-->Line_47 $$ updateView(selectedMethod, editor, attributes, highlighters, superMethod)[ FD ]
Line_64 $$ if (ToSearchIn instanceof GrMethod) -->Line_66 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? method.findDeepestSuperMethod() : method[ CD ]
Line_24 $$ if (icon != null)-->Line_25 $$ setIcon(icon)[ CD ]
Line_54 $$ final List<Pair<ActionListener, KeyStroke>> keyboardActions = Collections.singletonList(Pair.<ActionListener, KeyStroke>create(new ActionListener() -->Line_59 $$ final JBPopup popup = popupRef.get()[ CD ]
Line_11 $$ final JBList list = new JBList(scopes.toArray())-->Line_36 $$ list.setSelectedIndex(0)[ FD ]
Line_7 $$ final JPanel panel = new JPanel(new BorderLayout())-->Line_53 $$ panel.add(scrollPane, BorderLayout.CENTER)[ FD ]
Line_19 $$ if (value instanceof PsiMethod) -->Line_29 $$ text = "[ CD ]
Line_19 $$ if (value instanceof PsiMethod) -->Line_27 $$ LOG.assertTrue(value instanceof GrClosableBlock)[ CD ]
Line_58 $$ final GrParametersOwner ToSearchIn = (GrParametersOwner) list.getSelectedValue()-->Line_68 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? ToSearchIn.getParent() : null[ FD ]
Line_20 $$ final PsiMethod method = (PsiMethod) value-->Line_23 $$ final Icon icon = method.getIcon(flags)[ FD ]
Line_11 $$ final JBList list = new JBList(scopes.toArray())-->Line_12 $$ list.setVisibleRowCount(5)[ FD ]
Line_13 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_43 $$ final GrParametersOwner selectedMethod = (GrParametersOwner) list.getSelectedValue()[ FD ]
Line_11 $$ final JBList list = new JBList(scopes.toArray())-->Line_58 $$ final GrParametersOwner ToSearchIn = (GrParametersOwner) list.getSelectedValue()[ FD ]
Line_20 $$ final PsiMethod method = (PsiMethod) value-->Line_21 $$ text = PsiFormatUtil.formatMethod(method, PsiSubstitutor.EMPTY, PsiFormatUtilBase.SHOW_CONTAINING_CLASS | PsiFormatUtilBase.SHOW_NAME | PsiFormatUtilBase.SHOW_PARAMETERS, PsiFormatUtilBase.SHOW_TYPE)[ FD ]
Line_19 $$ if (value instanceof PsiMethod) -->Line_23 $$ final Icon icon = method.getIcon(flags)[ CD ]
Line_7 $$ final JPanel panel = new JPanel(new BorderLayout())-->Line_79 $$ return JBPopupFactory.getInstance().createComponentPopupBuilder(panel, list).setTitle("Introduce parameter to").setMovable(false).setResizable(false).setRequestFocus(true).setKeyboardActions(keyboardActions).addListener(new JBPopupAdapter() [ FD ]
Line_13 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_36 $$ list.setSelectedIndex(0)[ FD ]
Line_63 $$ final PsiElement toSearchFor-->Line_68 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? ToSearchIn.getParent() : null[ FD ]
Line_66 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? method.findDeepestSuperMethod() : method-->Line_74 $$ callback.fun(ToSearchIn, toSearchFor)[ FD ]
Line_54 $$ final List<Pair<ActionListener, KeyStroke>> keyboardActions = Collections.singletonList(Pair.<ActionListener, KeyStroke>create(new ActionListener() -->Line_64 $$ if (ToSearchIn instanceof GrMethod) [ CD ]
Line_59 $$ final JBPopup popup = popupRef.get()-->Line_60 $$ if (popup != null && popup.isVisible()) [ FD ]
Line_13 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_19 $$ if (value instanceof PsiMethod) [ CD ]
Line_11 $$ final JBList list = new JBList(scopes.toArray())-->Line_79 $$ return JBPopupFactory.getInstance().createComponentPopupBuilder(panel, list).setTitle("Introduce parameter to").setMovable(false).setResizable(false).setRequestFocus(true).setKeyboardActions(keyboardActions).addListener(new JBPopupAdapter() [ FD ]
