Line_24 $$ return new ActiveComponent.Adapter() -->Line_28 $$ return pinToolBar[ CD ]
Line_2 $$ private ActiveComponent createPinButton(@NotNull final FindUsagesHandler handler, @NotNull final UsageViewImpl usageView, @NotNull final FindUsagesOptions options, @NotNull final JBPopup[] popup, @NotNull DefaultActionGroup pinGroup) -->Line_18 $$ pinGroup.add(pinAction)[ FD ]
Line_2 $$ private ActiveComponent createPinButton(@NotNull final FindUsagesHandler handler, @NotNull final UsageViewImpl usageView, @NotNull final FindUsagesOptions options, @NotNull final JBPopup[] popup, @NotNull DefaultActionGroup pinGroup) -->Line_19 $$ final ActionToolbar pinToolbar = ActionManager.getInstance().createActionToolbar(ActionPlaces.USAGE_VIEW_TOOLBAR, pinGroup, true)[ FD ]
Line_2 $$ private ActiveComponent createPinButton(@NotNull final FindUsagesHandler handler, @NotNull final UsageViewImpl usageView, @NotNull final FindUsagesOptions options, @NotNull final JBPopup[] popup, @NotNull DefaultActionGroup pinGroup) -->Line_15 $$ findUsagesManager.findUsages(handler.getPrimaryElements(), handler.getSecondaryElements(), handler, options, FindSettings.getInstance().isSkipResultsWithOneUsage())[ FD ]
Line_2 $$ private ActiveComponent createPinButton(@NotNull final FindUsagesHandler handler, @NotNull final UsageViewImpl usageView, @NotNull final FindUsagesOptions options, @NotNull final JBPopup[] popup, @NotNull DefaultActionGroup pinGroup) -->Line_18 $$ pinGroup.add(pinAction)[ CD ]
Line_2 $$ private ActiveComponent createPinButton(@NotNull final FindUsagesHandler handler, @NotNull final UsageViewImpl usageView, @NotNull final FindUsagesOptions options, @NotNull final JBPopup[] popup, @NotNull DefaultActionGroup pinGroup) -->Line_22 $$ pinToolBar.setBorder(null)[ CD ]
Line_3 $$ final AnAction pinAction = new AnAction("Open Find Usages Toolwindow", "Show all usages in a separate toolwindow", AllIcons.General.AutohideOff) -->Line_14 $$ FindUsagesManager findUsagesManager = ((FindManagerImpl) FindManager.getInstance(usageView.getProject())).getFindUsagesManager()[ CD ]
Line_2 $$ private ActiveComponent createPinButton(@NotNull final FindUsagesHandler handler, @NotNull final UsageViewImpl usageView, @NotNull final FindUsagesOptions options, @NotNull final JBPopup[] popup, @NotNull DefaultActionGroup pinGroup) -->Line_24 $$ return new ActiveComponent.Adapter() [ CD ]
Line_2 $$ private ActiveComponent createPinButton(@NotNull final FindUsagesHandler handler, @NotNull final UsageViewImpl usageView, @NotNull final FindUsagesOptions options, @NotNull final JBPopup[] popup, @NotNull DefaultActionGroup pinGroup) -->Line_19 $$ final ActionToolbar pinToolbar = ActionManager.getInstance().createActionToolbar(ActionPlaces.USAGE_VIEW_TOOLBAR, pinGroup, true)[ CD ]
Line_2 $$ private ActiveComponent createPinButton(@NotNull final FindUsagesHandler handler, @NotNull final UsageViewImpl usageView, @NotNull final FindUsagesOptions options, @NotNull final JBPopup[] popup, @NotNull DefaultActionGroup pinGroup) -->Line_21 $$ final JComponent pinToolBar = pinToolbar.getComponent()[ CD ]
Line_14 $$ FindUsagesManager findUsagesManager = ((FindManagerImpl) FindManager.getInstance(usageView.getProject())).getFindUsagesManager()-->Line_15 $$ findUsagesManager.findUsages(handler.getPrimaryElements(), handler.getSecondaryElements(), handler, options, FindSettings.getInstance().isSkipResultsWithOneUsage())[ FD ]
Line_3 $$ final AnAction pinAction = new AnAction("Open Find Usages Toolwindow", "Show all usages in a separate toolwindow", AllIcons.General.AutohideOff) -->Line_18 $$ pinGroup.add(pinAction)[ FD ]
Line_3 $$ final AnAction pinAction = new AnAction("Open Find Usages Toolwindow", "Show all usages in a separate toolwindow", AllIcons.General.AutohideOff) -->Line_13 $$ cancel(popup)[ CD ]
Line_2 $$ private ActiveComponent createPinButton(@NotNull final FindUsagesHandler handler, @NotNull final UsageViewImpl usageView, @NotNull final FindUsagesOptions options, @NotNull final JBPopup[] popup, @NotNull DefaultActionGroup pinGroup) -->Line_3 $$ final AnAction pinAction = new AnAction("Open Find Usages Toolwindow", "Show all usages in a separate toolwindow", AllIcons.General.AutohideOff) [ CD ]
Line_3 $$ final AnAction pinAction = new AnAction("Open Find Usages Toolwindow", "Show all usages in a separate toolwindow", AllIcons.General.AutohideOff) -->Line_12 $$ hideHints()[ CD ]
Line_3 $$ final AnAction pinAction = new AnAction("Open Find Usages Toolwindow", "Show all usages in a separate toolwindow", AllIcons.General.AutohideOff) -->Line_15 $$ findUsagesManager.findUsages(handler.getPrimaryElements(), handler.getSecondaryElements(), handler, options, FindSettings.getInstance().isSkipResultsWithOneUsage())[ CD ]
Line_2 $$ private ActiveComponent createPinButton(@NotNull final FindUsagesHandler handler, @NotNull final UsageViewImpl usageView, @NotNull final FindUsagesOptions options, @NotNull final JBPopup[] popup, @NotNull DefaultActionGroup pinGroup) -->Line_14 $$ FindUsagesManager findUsagesManager = ((FindManagerImpl) FindManager.getInstance(usageView.getProject())).getFindUsagesManager()[ FD ]
Line_2 $$ private ActiveComponent createPinButton(@NotNull final FindUsagesHandler handler, @NotNull final UsageViewImpl usageView, @NotNull final FindUsagesOptions options, @NotNull final JBPopup[] popup, @NotNull DefaultActionGroup pinGroup) -->Line_13 $$ cancel(popup)[ FD ]
Line_6 $$ AnAction action = ActionManager.getInstance().getAction(IdeActions.ACTION_FIND_USAGES)-->Line_7 $$ setShortcutSet(action.getShortcutSet())[ FD ]
Line_2 $$ private ActiveComponent createPinButton(@NotNull final FindUsagesHandler handler, @NotNull final UsageViewImpl usageView, @NotNull final FindUsagesOptions options, @NotNull final JBPopup[] popup, @NotNull DefaultActionGroup pinGroup) -->Line_20 $$ pinToolbar.setReservePlaceAutoPopupIcon(false)[ CD ]
Line_2 $$ private ActiveComponent createPinButton(@NotNull final FindUsagesHandler handler, @NotNull final UsageViewImpl usageView, @NotNull final FindUsagesOptions options, @NotNull final JBPopup[] popup, @NotNull DefaultActionGroup pinGroup) -->Line_23 $$ pinToolBar.setOpaque(false)[ CD ]
