Line_34 $$ String key = keys.nextElement()-->Line_37 $$ sb.append(HtmlUtil.escape(key))[ FD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_24 $$ sb.append(hostname)[ FD ]
Line_12 $$ if (passed) -->Line_15 $$ sb.append("1")[ CD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_10 $$ sb.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n")[ FD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_60 $$ sb.append("</testsuite>")[ FD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_27 $$ sb.append("\" tests=\"1\" time=\"0.0\" timestamp=\"")[ CD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_30 $$ sb.append("\t<properties>\n")[ FD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_55 $$ sb.append("\n\t\t</failure>\n")[ FD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_4 $$ if (message.startsWith("Passed.")) [ CD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_36 $$ sb.append("\t\t<property name=\"")[ FD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_47 $$ sb.append(" />\n")[ FD ]
Line_49 $$ String failureMessage = HtmlUtil.escape(message.substring(8))-->Line_54 $$ sb.append(failureMessage)[ FD ]
Line_34 $$ String key = keys.nextElement()-->Line_35 $$ String value = properties.getProperty(key)[ FD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_19 $$ sb.append("1")[ FD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_51 $$ sb.append("\t\t<failure message=\"")[ FD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_23 $$ sb.append("\" hostname=\"")[ CD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_26 $$ sb.append(className)[ CD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_56 $$ sb.append("\t</testcase>\n")[ FD ]
Line_46 $$ if (passed) -->Line_56 $$ sb.append("\t</testcase>\n")[ CD ]
Line_8 $$ hostname = StringUtil.toLowerCase(hostname)-->Line_24 $$ sb.append(hostname)[ FD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_3 $$ boolean passed = false[ CD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_54 $$ sb.append(failureMessage)[ FD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_26 $$ sb.append(className)[ FD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_45 $$ sb.append("\" name=\"test\" time=\"0.0\"")[ CD ]
Line_49 $$ String failureMessage = HtmlUtil.escape(message.substring(8))-->Line_52 $$ sb.append(failureMessage)[ FD ]
Line_46 $$ if (passed) -->Line_53 $$ sb.append("\" type=\"junit.framework.AssertionFailedError\">\n")[ CD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_21 $$ sb.append("0")[ FD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_43 $$ sb.append("\t<testcase classname=\"")[ FD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_59 $$ sb.append("\t<system-err><![CDATA[]]></system-err>\n")[ CD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_11 $$ sb.append("<testsuite errors=\"")[ CD ]
Line_46 $$ if (passed) -->Line_51 $$ sb.append("\t\t<failure message=\"")[ CD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_23 $$ sb.append("\" hostname=\"")[ FD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_28 $$ sb.append(System.currentTimeMillis())[ FD ]
Line_33 $$ while (keys.hasMoreElements()) -->Line_39 $$ sb.append(HtmlUtil.escape(value))[ CD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_30 $$ sb.append("\t<properties>\n")[ CD ]
Line_4 $$ if (message.startsWith("Passed.")) -->Line_5 $$ passed = true[ CD ]
Line_7 $$ String hostname = GetterUtil.getString(System.getProperty("env.USERDOMAIN"))-->Line_8 $$ hostname = StringUtil.toLowerCase(hostname)[ FD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_26 $$ sb.append(className)[ FD ]
Line_33 $$ while (keys.hasMoreElements()) -->Line_36 $$ sb.append("\t\t<property name=\"")[ CD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_43 $$ sb.append("\t<testcase classname=\"")[ CD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_27 $$ sb.append("\" tests=\"1\" time=\"0.0\" timestamp=\"")[ FD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_25 $$ sb.append("\" name=\"")[ CD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_7 $$ String hostname = GetterUtil.getString(System.getProperty("env.USERDOMAIN"))[ CD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_24 $$ sb.append(hostname)[ CD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_42 $$ sb.append("\t</properties>\n")[ CD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_37 $$ sb.append(HtmlUtil.escape(key))[ FD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_25 $$ sb.append("\" name=\"")[ FD ]
Line_46 $$ if (passed) -->Line_55 $$ sb.append("\n\t\t</failure>\n")[ CD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_40 $$ sb.append("\" />\n")[ FD ]
Line_46 $$ if (passed) -->Line_47 $$ sb.append(" />\n")[ CD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_38 $$ sb.append("\" value=\"")[ FD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_58 $$ sb.append("\t<system-out><![CDATA[]]></system-out>\n")[ CD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_9 $$ StringBundler sb = new StringBundler()[ CD ]
Line_32 $$ Enumeration<String> keys = (Enumeration<String>) properties.propertyNames()-->Line_34 $$ String key = keys.nextElement()[ FD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_32 $$ Enumeration<String> keys = (Enumeration<String>) properties.propertyNames()[ CD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_17 $$ sb.append("\" failures=\"")[ FD ]
Line_33 $$ while (keys.hasMoreElements()) -->Line_40 $$ sb.append("\" />\n")[ CD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_29 $$ sb.append("\">\n")[ FD ]
Line_33 $$ while (keys.hasMoreElements()) -->Line_37 $$ sb.append(HtmlUtil.escape(key))[ CD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_15 $$ sb.append("1")[ FD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_44 $$ sb.append(className)[ FD ]
Line_46 $$ if (passed) -->Line_49 $$ String failureMessage = HtmlUtil.escape(message.substring(8))[ CD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_61 $$ FileUtil.write(outputDir + "/TEST-" + className + ".xml", sb.toString())[ CD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_53 $$ sb.append("\" type=\"junit.framework.AssertionFailedError\">\n")[ FD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_33 $$ while (keys.hasMoreElements()) [ CD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_28 $$ sb.append(System.currentTimeMillis())[ CD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_58 $$ sb.append("\t<system-out><![CDATA[]]></system-out>\n")[ FD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_49 $$ String failureMessage = HtmlUtil.escape(message.substring(8))[ FD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_13 $$ sb.append("0")[ FD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_59 $$ sb.append("\t<system-err><![CDATA[]]></system-err>\n")[ FD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_18 $$ if (passed) [ CD ]
Line_33 $$ while (keys.hasMoreElements()) -->Line_34 $$ String key = keys.nextElement()[ CD ]
Line_33 $$ while (keys.hasMoreElements()) -->Line_35 $$ String value = properties.getProperty(key)[ CD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_44 $$ sb.append(className)[ CD ]
Line_18 $$ if (passed) -->Line_21 $$ sb.append("0")[ CD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_60 $$ sb.append("</testsuite>")[ CD ]
Line_3 $$ boolean passed = false-->Line_5 $$ passed = true[ FD ]
Line_46 $$ if (passed) -->Line_52 $$ sb.append(failureMessage)[ CD ]
Line_35 $$ String value = properties.getProperty(key)-->Line_39 $$ sb.append(HtmlUtil.escape(value))[ FD ]
Line_33 $$ while (keys.hasMoreElements()) -->Line_38 $$ sb.append("\" value=\"")[ CD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_29 $$ sb.append("\">\n")[ CD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_39 $$ sb.append(HtmlUtil.escape(value))[ FD ]
Line_12 $$ if (passed) -->Line_13 $$ sb.append("0")[ CD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_17 $$ sb.append("\" failures=\"")[ CD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_4 $$ if (message.startsWith("Passed.")) [ FD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_8 $$ hostname = StringUtil.toLowerCase(hostname)[ CD ]
Line_46 $$ if (passed) -->Line_54 $$ sb.append(failureMessage)[ CD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_52 $$ sb.append(failureMessage)[ FD ]
Line_46 $$ if (passed) -->Line_50 $$ sb.append(">\n")[ CD ]
Line_18 $$ if (passed) -->Line_19 $$ sb.append("1")[ CD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_46 $$ if (passed) [ CD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_12 $$ if (passed) [ CD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_50 $$ sb.append(">\n")[ FD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_61 $$ FileUtil.write(outputDir + "/TEST-" + className + ".xml", sb.toString())[ FD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_11 $$ sb.append("<testsuite errors=\"")[ FD ]
Line_31 $$ Properties properties = new SortedProperties(System.getProperties())-->Line_35 $$ String value = properties.getProperty(key)[ FD ]
Line_7 $$ String hostname = GetterUtil.getString(System.getProperty("env.USERDOMAIN"))-->Line_24 $$ sb.append(hostname)[ FD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_42 $$ sb.append("\t</properties>\n")[ FD ]
Line_9 $$ StringBundler sb = new StringBundler()-->Line_45 $$ sb.append("\" name=\"test\" time=\"0.0\"")[ FD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_31 $$ Properties properties = new SortedProperties(System.getProperties())[ CD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_44 $$ sb.append(className)[ FD ]
Line_32 $$ Enumeration<String> keys = (Enumeration<String>) properties.propertyNames()-->Line_33 $$ while (keys.hasMoreElements()) [ FD ]
Line_2 $$ private void _convert(String className, String message, File outputDir) throws Exception -->Line_10 $$ sb.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n")[ CD ]
Line_31 $$ Properties properties = new SortedProperties(System.getProperties())-->Line_32 $$ Enumeration<String> keys = (Enumeration<String>) properties.propertyNames()[ FD ]
