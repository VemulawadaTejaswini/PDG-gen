Line_18 $$ String propertyName = params.getProperty(DynamicParameterizedType.PROPERTY)-->Line_20 $$ Assert.assertEquals(propertyName, xproperty.getName())[ FD ]
Line_23 $$ String tableName = propertyName.toUpperCase().split("_")[0]-->Line_29 $$ Assert.assertEquals(tableName, parameterType.getTable())[ FD ]
Line_24 $$ String columnName = propertyName.toUpperCase().split("_")[1]-->Line_27 $$ Assert.assertEquals(columnName, parameterType.getColumns()[0])[ FD ]
Line_13 $$ Boolean primaryKey = Boolean.valueOf(params.getProperty(DynamicParameterizedType.IS_PRIMARY_KEY))-->Line_14 $$ Assert.assertFalse(primaryKey)[ FD ]
Line_18 $$ String propertyName = params.getProperty(DynamicParameterizedType.PROPERTY)-->Line_24 $$ String columnName = propertyName.toUpperCase().split("_")[1][ FD ]
Line_25 $$ ParameterType parameterType = (ParameterType) params.get(DynamicParameterizedType.PARAMETER_TYPE)-->Line_26 $$ Assert.assertEquals(1, parameterType.getColumns().length)[ FD ]
Line_18 $$ String propertyName = params.getProperty(DynamicParameterizedType.PROPERTY)-->Line_23 $$ String tableName = propertyName.toUpperCase().split("_")[0][ FD ]
Line_11 $$ String returnedClass = params.getProperty(DynamicParameterizedType.RETURNED_CLASS)-->Line_12 $$ Assert.assertEquals(String.class.getName(), returnedClass)[ FD ]
Line_30 $$ String value = tableName + "." + columnName-->Line_32 $$ value += "." + params.getProperty("suffix").toUpperCase()[ FD ]
Line_25 $$ ParameterType parameterType = (ParameterType) params.get(DynamicParameterizedType.PARAMETER_TYPE)-->Line_27 $$ Assert.assertEquals(columnName, parameterType.getColumns()[0])[ FD ]
Line_25 $$ ParameterType parameterType = (ParameterType) params.get(DynamicParameterizedType.PARAMETER_TYPE)-->Line_28 $$ Assert.assertEquals(String.class, parameterType.getReturnedClass())[ FD ]
Line_17 $$ String entity = params.getProperty(DynamicParameterizedType.ENTITY)-->Line_21 $$ Assert.assertEquals(entity, xproperty.getDeclaringClass().getName())[ FD ]
Line_25 $$ ParameterType parameterType = (ParameterType) params.get(DynamicParameterizedType.PARAMETER_TYPE)-->Line_29 $$ Assert.assertEquals(tableName, parameterType.getTable())[ FD ]
Line_31 $$ if (params.containsKey("suffix")) -->Line_32 $$ value += "." + params.getProperty("suffix").toUpperCase()[ CD ]
Line_19 $$ XProperty xproperty = (XProperty) params.get(DynamicParameterizedType.XPROPERTY)-->Line_22 $$ Assert.assertEquals(String.class.getName(), xproperty.getType().getName())[ FD ]
Line_19 $$ XProperty xproperty = (XProperty) params.get(DynamicParameterizedType.XPROPERTY)-->Line_20 $$ Assert.assertEquals(propertyName, xproperty.getName())[ FD ]
Line_9 $$ Boolean dynamic = Boolean.valueOf(params.getProperty(DynamicParameterizedType.IS_DYNAMIC))-->Line_10 $$ Assert.assertTrue(dynamic)[ FD ]
Line_15 $$ String accessType = params.getProperty(DynamicParameterizedType.ACCESS_TYPE)-->Line_16 $$ Assert.assertEquals("field", accessType)[ FD ]
Line_19 $$ XProperty xproperty = (XProperty) params.get(DynamicParameterizedType.XPROPERTY)-->Line_21 $$ Assert.assertEquals(entity, xproperty.getDeclaringClass().getName())[ FD ]
