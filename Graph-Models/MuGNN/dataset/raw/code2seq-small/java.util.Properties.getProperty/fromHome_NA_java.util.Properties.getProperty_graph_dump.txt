Line_2 $$ public static AntInstallation fromHome(String homePath) throws ConfigurationException -->Line_7 $$ checkExists(lib, AntBundle.message("lib.directory.not.found.in.ant.path.error.message", antPath))[ CD ]
Line_6 $$ File lib = new File(antHome, LIB_DIR)-->Line_9 $$ checkExists(antJar, AntBundle.message("ant.jar.not.found.in.directory.error.message", lib.getAbsolutePath()))[ FD ]
Line_3 $$ File antHome = new File(homePath)-->Line_16 $$ HOME_DIR.set(antInstallation.getProperties(), antHome.getAbsolutePath())[ FD ]
Line_3 $$ File antHome = new File(homePath)-->Line_4 $$ String antPath = "'" + antHome.getAbsolutePath() + "'"[ FD ]
Line_8 $$ File antJar = new File(lib, ANT_JAR_FILE)-->Line_9 $$ checkExists(antJar, AntBundle.message("ant.jar.not.found.in.directory.error.message", lib.getAbsolutePath()))[ FD ]
Line_2 $$ public static AntInstallation fromHome(String homePath) throws ConfigurationException -->Line_4 $$ String antPath = "'" + antHome.getAbsolutePath() + "'"[ CD ]
Line_17 $$ final String versionProp = properties.getProperty(PROPERTY_VERSION)-->Line_19 $$ VERSION.set(antInstallation.getProperties(), versionProp)[ FD ]
Line_15 $$ AntInstallation antInstallation = new AntInstallation()-->Line_19 $$ VERSION.set(antInstallation.getProperties(), versionProp)[ FD ]
Line_8 $$ File antJar = new File(lib, ANT_JAR_FILE)-->Line_10 $$ if (antJar.isDirectory()) [ FD ]
Line_6 $$ File lib = new File(antHome, LIB_DIR)-->Line_7 $$ checkExists(lib, AntBundle.message("lib.directory.not.found.in.ant.path.error.message", antPath))[ FD ]
Line_15 $$ AntInstallation antInstallation = new AntInstallation()-->Line_18 $$ NAME.set(antInstallation.getProperties(), AntBundle.message("apache.ant.with.version.string.presentation", versionProp))[ FD ]
Line_2 $$ public static AntInstallation fromHome(String homePath) throws ConfigurationException -->Line_6 $$ File lib = new File(antHome, LIB_DIR)[ CD ]
Line_4 $$ String antPath = "'" + antHome.getAbsolutePath() + "'"-->Line_5 $$ checkExists(antHome, AntBundle.message("path.to.ant.does.not.exist.error.message", antPath))[ FD ]
Line_4 $$ String antPath = "'" + antHome.getAbsolutePath() + "'"-->Line_7 $$ checkExists(lib, AntBundle.message("lib.directory.not.found.in.ant.path.error.message", antPath))[ FD ]
Line_2 $$ public static AntInstallation fromHome(String homePath) throws ConfigurationException -->Line_3 $$ File antHome = new File(homePath)[ CD ]
Line_3 $$ File antHome = new File(homePath)-->Line_5 $$ checkExists(antHome, AntBundle.message("path.to.ant.does.not.exist.error.message", antPath))[ FD ]
Line_14 $$ Properties properties = loadProperties(antJar)-->Line_17 $$ final String versionProp = properties.getProperty(PROPERTY_VERSION)[ FD ]
Line_2 $$ public static AntInstallation fromHome(String homePath) throws ConfigurationException -->Line_8 $$ File antJar = new File(lib, ANT_JAR_FILE)[ CD ]
Line_17 $$ final String versionProp = properties.getProperty(PROPERTY_VERSION)-->Line_18 $$ NAME.set(antInstallation.getProperties(), AntBundle.message("apache.ant.with.version.string.presentation", versionProp))[ FD ]
Line_15 $$ AntInstallation antInstallation = new AntInstallation()-->Line_20 $$ antInstallation.addClasspathEntry(new AllJarsUnderDirEntry(lib))[ FD ]
Line_8 $$ File antJar = new File(lib, ANT_JAR_FILE)-->Line_11 $$ throw new ConfigurationException(AntBundle.message("ant.jar.is.directory.error.message", antJar.getAbsolutePath()))[ FD ]
Line_2 $$ public static AntInstallation fromHome(String homePath) throws ConfigurationException -->Line_9 $$ checkExists(antJar, AntBundle.message("ant.jar.not.found.in.directory.error.message", lib.getAbsolutePath()))[ CD ]
Line_2 $$ public static AntInstallation fromHome(String homePath) throws ConfigurationException -->Line_5 $$ checkExists(antHome, AntBundle.message("path.to.ant.does.not.exist.error.message", antPath))[ CD ]
Line_15 $$ AntInstallation antInstallation = new AntInstallation()-->Line_16 $$ HOME_DIR.set(antInstallation.getProperties(), antHome.getAbsolutePath())[ FD ]
Line_8 $$ File antJar = new File(lib, ANT_JAR_FILE)-->Line_14 $$ Properties properties = loadProperties(antJar)[ FD ]
Line_2 $$ public static AntInstallation fromHome(String homePath) throws ConfigurationException -->Line_10 $$ if (antJar.isDirectory()) [ CD ]
