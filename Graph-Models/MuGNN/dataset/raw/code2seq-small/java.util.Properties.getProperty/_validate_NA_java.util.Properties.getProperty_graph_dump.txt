Line_6 $$ if (_log.isWarnEnabled()) -->Line_8 $$ _log.warn("Auth verifier " + authVerifierClassName + " does not have URLs configured")[ CD ]
Line_3 $$ Properties properties = authVerifierConfiguration.getProperties()-->Line_4 $$ String[] urlsIncludes = StringUtil.split(properties.getProperty("urls.includes"))[ FD ]
Line_2 $$ private boolean _validate(AuthVerifierConfiguration authVerifierConfiguration) -->Line_3 $$ Properties properties = authVerifierConfiguration.getProperties()[ CD ]
Line_2 $$ private boolean _validate(AuthVerifierConfiguration authVerifierConfiguration) -->Line_12 $$ return true[ CD ]
Line_2 $$ private boolean _validate(AuthVerifierConfiguration authVerifierConfiguration) -->Line_3 $$ Properties properties = authVerifierConfiguration.getProperties()[ FD ]
Line_6 $$ if (_log.isWarnEnabled()) -->Line_7 $$ String authVerifierClassName = authVerifierConfiguration.getAuthVerifierClassName()[ CD ]
Line_2 $$ private boolean _validate(AuthVerifierConfiguration authVerifierConfiguration) -->Line_7 $$ String authVerifierClassName = authVerifierConfiguration.getAuthVerifierClassName()[ FD ]
Line_5 $$ if (urlsIncludes.length == 0) -->Line_10 $$ return false[ CD ]
Line_5 $$ if (urlsIncludes.length == 0) -->Line_6 $$ if (_log.isWarnEnabled()) [ CD ]
Line_2 $$ private boolean _validate(AuthVerifierConfiguration authVerifierConfiguration) -->Line_5 $$ if (urlsIncludes.length == 0) [ CD ]
Line_2 $$ private boolean _validate(AuthVerifierConfiguration authVerifierConfiguration) -->Line_4 $$ String[] urlsIncludes = StringUtil.split(properties.getProperty("urls.includes"))[ CD ]
