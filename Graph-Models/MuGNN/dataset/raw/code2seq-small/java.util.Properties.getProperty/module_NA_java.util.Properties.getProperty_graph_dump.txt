Line_3 $$ Set<File> runtimeClasspath = new LinkedHashSet<File>()-->Line_6 $$ runtimeClasspath.add(findDependencyJar(moduleName, jarName))[ FD ]
Line_2 $$ private Module module(String moduleName, Properties properties, Set<File> implementationClasspath) -->Line_9 $$ String projects = properties.getProperty("projects")[ CD ]
Line_2 $$ private Module module(String moduleName, Properties properties, Set<File> implementationClasspath) -->Line_13 $$ return new DefaultModule(moduleName, implementationClasspath, runtimeClasspath, modules)[ CD ]
Line_2 $$ private Module module(String moduleName, Properties properties, Set<File> implementationClasspath) -->Line_6 $$ runtimeClasspath.add(findDependencyJar(moduleName, jarName))[ FD ]
Line_8 $$ Set<Module> modules = new LinkedHashSet<Module>()-->Line_11 $$ modules.add(getModule(project))[ FD ]
Line_4 $$ String runtime = properties.getProperty("runtime")-->Line_5 $$ for (String jarName : split(runtime)) [ FD ]
Line_5 $$ for (String jarName : split(runtime)) -->Line_6 $$ runtimeClasspath.add(findDependencyJar(moduleName, jarName))[ FD ]
Line_2 $$ private Module module(String moduleName, Properties properties, Set<File> implementationClasspath) -->Line_9 $$ String projects = properties.getProperty("projects")[ FD ]
Line_2 $$ private Module module(String moduleName, Properties properties, Set<File> implementationClasspath) -->Line_3 $$ Set<File> runtimeClasspath = new LinkedHashSet<File>()[ CD ]
Line_2 $$ private Module module(String moduleName, Properties properties, Set<File> implementationClasspath) -->Line_8 $$ Set<Module> modules = new LinkedHashSet<Module>()[ CD ]
Line_2 $$ private Module module(String moduleName, Properties properties, Set<File> implementationClasspath) -->Line_4 $$ String runtime = properties.getProperty("runtime")[ CD ]
Line_2 $$ private Module module(String moduleName, Properties properties, Set<File> implementationClasspath) -->Line_4 $$ String runtime = properties.getProperty("runtime")[ FD ]
Line_9 $$ String projects = properties.getProperty("projects")-->Line_10 $$ for (String project : split(projects)) [ FD ]
Line_10 $$ for (String project : split(projects)) -->Line_11 $$ modules.add(getModule(project))[ FD ]
