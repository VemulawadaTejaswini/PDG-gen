Line_12 $$ relengProperties = new Properties()-->Line_43 $$ _writeElement(sb, "supported", relengProperties, 3)[ FD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_45 $$ if (GetterUtil.getBoolean(relengProperties.getProperty("marketplace"))) [ CD ]
Line_10 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_45 $$ if (GetterUtil.getBoolean(relengProperties.getProperty("marketplace"))) [ FD ]
Line_15 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_45 $$ if (GetterUtil.getBoolean(relengProperties.getProperty("marketplace"))) [ FD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_3 $$ int x = fileName.indexOf("WEB-INF")[ CD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_17 $$ _writeElement(sb, "bundle", relengProperties, 3)[ CD ]
Line_15 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_25 $$ _writeElement(sb, "marketplace", relengProperties, 3)[ FD ]
Line_16 $$ StringBundler sb = new StringBundler()-->Line_20 $$ _writeElement(sb, "dependent-apps", relengProperties, 3)[ FD ]
Line_8 $$ if (FileUtil.exists(relengPropertiesFileName)) -->Line_9 $$ String relengPropertiesContent = FileUtil.read(relengPropertiesFileName)[ CD ]
Line_9 $$ String relengPropertiesContent = FileUtil.read(relengPropertiesFileName)-->Line_10 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)[ FD ]
Line_10 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_18 $$ _writeElement(sb, "category", relengProperties, 3)[ FD ]
Line_16 $$ StringBundler sb = new StringBundler()-->Line_24 $$ _writeElement(sb, "labs", relengProperties, 3)[ FD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_7 $$ Properties relengProperties = null[ CD ]
Line_16 $$ StringBundler sb = new StringBundler()-->Line_50 $$ return sb.toString()[ FD ]
Line_44 $$ File relengChangeLogFile = new File(fullWebInfDirName + "liferay-releng.changelog")-->Line_46 $$ _updateRelengChangeLogFile(pluginPackageProperties, relengChangeLogFile, relengProperties)[ FD ]
Line_32 $$ for (String screenshotsFileName : screenshotsFileNames) -->Line_33 $$ if (screenshotsFileName.equals("Thumbs.db") || screenshotsFileName.endsWith(".png")) [ FD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_15 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)[ CD ]
Line_6 $$ String relengPropertiesFileName = fullWebInfDirName + "liferay-releng.properties"-->Line_8 $$ if (FileUtil.exists(relengPropertiesFileName)) [ FD ]
Line_12 $$ relengProperties = new Properties()-->Line_14 $$ String relengPropertiesContent = _updateRelengPropertiesFile(relengPropertiesFileName, relengProperties)[ FD ]
Line_16 $$ StringBundler sb = new StringBundler()-->Line_19 $$ _writeElement(sb, "demo-url", relengProperties, 3)[ FD ]
Line_8 $$ if (FileUtil.exists(relengPropertiesFileName)) -->Line_10 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)[ CD ]
Line_7 $$ Properties relengProperties = null-->Line_17 $$ _writeElement(sb, "bundle", relengProperties, 3)[ FD ]
Line_15 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_43 $$ _writeElement(sb, "supported", relengProperties, 3)[ FD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_8 $$ if (FileUtil.exists(relengPropertiesFileName)) [ CD ]
Line_10 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_26 $$ _writeElement(sb, "public", relengProperties, 3)[ FD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_14 $$ String relengPropertiesContent = _updateRelengPropertiesFile(relengPropertiesFileName, relengProperties)[ CD ]
Line_44 $$ File relengChangeLogFile = new File(fullWebInfDirName + "liferay-releng.changelog")-->Line_48 $$ relengChangeLogFile.delete()[ FD ]
Line_15 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_20 $$ _writeElement(sb, "dependent-apps", relengProperties, 3)[ FD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_44 $$ File relengChangeLogFile = new File(fullWebInfDirName + "liferay-releng.changelog")[ CD ]
Line_12 $$ relengProperties = new Properties()-->Line_15 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)[ FD ]
Line_6 $$ String relengPropertiesFileName = fullWebInfDirName + "liferay-releng.properties"-->Line_14 $$ String relengPropertiesContent = _updateRelengPropertiesFile(relengPropertiesFileName, relengProperties)[ FD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_50 $$ return sb.toString()[ CD ]
Line_15 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_42 $$ _writeElement(sb, "support-url", relengProperties, 3)[ FD ]
Line_7 $$ Properties relengProperties = null-->Line_42 $$ _writeElement(sb, "support-url", relengProperties, 3)[ FD ]
Line_12 $$ relengProperties = new Properties()-->Line_20 $$ _writeElement(sb, "dependent-apps", relengProperties, 3)[ FD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_4 $$ String relativeWebInfDirName = fileName.substring(0, x + 8)[ CD ]
Line_21 $$ if (FileUtil.exists(fullWebInfDirName + "releng/icons/90x90.png")) -->Line_22 $$ _writeElement(sb, "icon", relativeWebInfDirName + "releng/icons/90x90.png", 3)[ CD ]
Line_16 $$ StringBundler sb = new StringBundler()-->Line_43 $$ _writeElement(sb, "supported", relengProperties, 3)[ FD ]
Line_6 $$ String relengPropertiesFileName = fullWebInfDirName + "liferay-releng.properties"-->Line_9 $$ String relengPropertiesContent = FileUtil.read(relengPropertiesFileName)[ FD ]
Line_7 $$ Properties relengProperties = null-->Line_15 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)[ FD ]
Line_7 $$ Properties relengProperties = null-->Line_46 $$ _updateRelengChangeLogFile(pluginPackageProperties, relengChangeLogFile, relengProperties)[ FD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_42 $$ _writeElement(sb, "support-url", relengProperties, 3)[ CD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_29 $$ if (FileUtil.exists(fullScreenshotsDirName)) [ CD ]
Line_27 $$ String fullScreenshotsDirName = fullWebInfDirName + "releng/screenshots/"-->Line_29 $$ if (FileUtil.exists(fullScreenshotsDirName)) [ FD ]
Line_7 $$ Properties relengProperties = null-->Line_43 $$ _writeElement(sb, "supported", relengProperties, 3)[ FD ]
Line_10 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_43 $$ _writeElement(sb, "supported", relengProperties, 3)[ FD ]
Line_10 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_14 $$ String relengPropertiesContent = _updateRelengPropertiesFile(relengPropertiesFileName, relengProperties)[ FD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_26 $$ _writeElement(sb, "public", relengProperties, 3)[ CD ]
Line_12 $$ relengProperties = new Properties()-->Line_24 $$ _writeElement(sb, "labs", relengProperties, 3)[ FD ]
Line_15 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_17 $$ _writeElement(sb, "bundle", relengProperties, 3)[ FD ]
Line_7 $$ Properties relengProperties = null-->Line_18 $$ _writeElement(sb, "category", relengProperties, 3)[ FD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_24 $$ _writeElement(sb, "labs", relengProperties, 3)[ CD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_19 $$ _writeElement(sb, "demo-url", relengProperties, 3)[ CD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_20 $$ _writeElement(sb, "dependent-apps", relengProperties, 3)[ CD ]
Line_10 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_20 $$ _writeElement(sb, "dependent-apps", relengProperties, 3)[ FD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_27 $$ String fullScreenshotsDirName = fullWebInfDirName + "releng/screenshots/"[ CD ]
Line_12 $$ relengProperties = new Properties()-->Line_42 $$ _writeElement(sb, "support-url", relengProperties, 3)[ FD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_46 $$ _updateRelengChangeLogFile(pluginPackageProperties, relengChangeLogFile, relengProperties)[ FD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_28 $$ String relativeScreenshotsDirName = relativeWebInfDirName + "releng/screenshots/"[ CD ]
Line_12 $$ relengProperties = new Properties()-->Line_26 $$ _writeElement(sb, "public", relengProperties, 3)[ FD ]
Line_29 $$ if (FileUtil.exists(fullScreenshotsDirName)) -->Line_30 $$ String[] screenshotsFileNames = FileUtil.listFiles(fullScreenshotsDirName)[ CD ]
Line_16 $$ StringBundler sb = new StringBundler()-->Line_17 $$ _writeElement(sb, "bundle", relengProperties, 3)[ FD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_5 $$ String fullWebInfDirName = _pluginsDir + StringPool.SLASH + relativeWebInfDirName[ CD ]
Line_15 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_19 $$ _writeElement(sb, "demo-url", relengProperties, 3)[ FD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_21 $$ if (FileUtil.exists(fullWebInfDirName + "releng/icons/90x90.png")) [ CD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_43 $$ _writeElement(sb, "supported", relengProperties, 3)[ CD ]
Line_32 $$ for (String screenshotsFileName : screenshotsFileNames) -->Line_36 $$ if (!screenshotsFileName.endsWith(".jpg")) [ FD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_16 $$ StringBundler sb = new StringBundler()[ CD ]
Line_10 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_42 $$ _writeElement(sb, "support-url", relengProperties, 3)[ FD ]
Line_10 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_17 $$ _writeElement(sb, "bundle", relengProperties, 3)[ FD ]
Line_45 $$ if (GetterUtil.getBoolean(relengProperties.getProperty("marketplace"))) -->Line_48 $$ relengChangeLogFile.delete()[ CD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_18 $$ _writeElement(sb, "category", relengProperties, 3)[ CD ]
Line_16 $$ StringBundler sb = new StringBundler()-->Line_22 $$ _writeElement(sb, "icon", relativeWebInfDirName + "releng/icons/90x90.png", 3)[ FD ]
Line_15 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_46 $$ _updateRelengChangeLogFile(pluginPackageProperties, relengChangeLogFile, relengProperties)[ FD ]
Line_16 $$ StringBundler sb = new StringBundler()-->Line_42 $$ _writeElement(sb, "support-url", relengProperties, 3)[ FD ]
Line_12 $$ relengProperties = new Properties()-->Line_45 $$ if (GetterUtil.getBoolean(relengProperties.getProperty("marketplace"))) [ FD ]
Line_8 $$ if (FileUtil.exists(relengPropertiesFileName)) -->Line_12 $$ relengProperties = new Properties()[ CD ]
Line_7 $$ Properties relengProperties = null-->Line_24 $$ _writeElement(sb, "labs", relengProperties, 3)[ FD ]
Line_16 $$ StringBundler sb = new StringBundler()-->Line_25 $$ _writeElement(sb, "marketplace", relengProperties, 3)[ FD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_3 $$ int x = fileName.indexOf("WEB-INF")[ FD ]
Line_15 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_18 $$ _writeElement(sb, "category", relengProperties, 3)[ FD ]
Line_7 $$ Properties relengProperties = null-->Line_25 $$ _writeElement(sb, "marketplace", relengProperties, 3)[ FD ]
Line_16 $$ StringBundler sb = new StringBundler()-->Line_26 $$ _writeElement(sb, "public", relengProperties, 3)[ FD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_6 $$ String relengPropertiesFileName = fullWebInfDirName + "liferay-releng.properties"[ CD ]
Line_7 $$ Properties relengProperties = null-->Line_12 $$ relengProperties = new Properties()[ FD ]
Line_29 $$ if (FileUtil.exists(fullScreenshotsDirName)) -->Line_31 $$ Arrays.sort(screenshotsFileNames)[ CD ]
Line_15 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_26 $$ _writeElement(sb, "public", relengProperties, 3)[ FD ]
Line_10 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_46 $$ _updateRelengChangeLogFile(pluginPackageProperties, relengChangeLogFile, relengProperties)[ FD ]
Line_10 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_15 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)[ FD ]
Line_10 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_19 $$ _writeElement(sb, "demo-url", relengProperties, 3)[ FD ]
Line_12 $$ relengProperties = new Properties()-->Line_19 $$ _writeElement(sb, "demo-url", relengProperties, 3)[ FD ]
Line_7 $$ Properties relengProperties = null-->Line_45 $$ if (GetterUtil.getBoolean(relengProperties.getProperty("marketplace"))) [ FD ]
Line_12 $$ relengProperties = new Properties()-->Line_46 $$ _updateRelengChangeLogFile(pluginPackageProperties, relengChangeLogFile, relengProperties)[ FD ]
Line_16 $$ StringBundler sb = new StringBundler()-->Line_18 $$ _writeElement(sb, "category", relengProperties, 3)[ FD ]
Line_7 $$ Properties relengProperties = null-->Line_26 $$ _writeElement(sb, "public", relengProperties, 3)[ FD ]
Line_7 $$ Properties relengProperties = null-->Line_19 $$ _writeElement(sb, "demo-url", relengProperties, 3)[ FD ]
Line_7 $$ Properties relengProperties = null-->Line_10 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)[ FD ]
Line_15 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_24 $$ _writeElement(sb, "labs", relengProperties, 3)[ FD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_25 $$ _writeElement(sb, "marketplace", relengProperties, 3)[ CD ]
Line_7 $$ Properties relengProperties = null-->Line_14 $$ String relengPropertiesContent = _updateRelengPropertiesFile(relengPropertiesFileName, relengProperties)[ FD ]
Line_9 $$ String relengPropertiesContent = FileUtil.read(relengPropertiesFileName)-->Line_15 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)[ FD ]
Line_12 $$ relengProperties = new Properties()-->Line_25 $$ _writeElement(sb, "marketplace", relengProperties, 3)[ FD ]
Line_10 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_25 $$ _writeElement(sb, "marketplace", relengProperties, 3)[ FD ]
Line_33 $$ if (screenshotsFileName.equals("Thumbs.db") || screenshotsFileName.endsWith(".png")) -->Line_34 $$ FileUtil.delete(fullScreenshotsDirName + screenshotsFileName)[ CD ]
Line_16 $$ StringBundler sb = new StringBundler()-->Line_39 $$ _writeElement(sb, "screenshot", relativeScreenshotsDirName + screenshotsFileName, 3)[ FD ]
Line_10 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_24 $$ _writeElement(sb, "labs", relengProperties, 3)[ FD ]
Line_30 $$ String[] screenshotsFileNames = FileUtil.listFiles(fullScreenshotsDirName)-->Line_31 $$ Arrays.sort(screenshotsFileNames)[ FD ]
Line_10 $$ relengProperties = PropertiesUtil.load(relengPropertiesContent)-->Line_12 $$ relengProperties = new Properties()[ FD ]
Line_7 $$ Properties relengProperties = null-->Line_20 $$ _writeElement(sb, "dependent-apps", relengProperties, 3)[ FD ]
Line_27 $$ String fullScreenshotsDirName = fullWebInfDirName + "releng/screenshots/"-->Line_30 $$ String[] screenshotsFileNames = FileUtil.listFiles(fullScreenshotsDirName)[ FD ]
Line_12 $$ relengProperties = new Properties()-->Line_17 $$ _writeElement(sb, "bundle", relengProperties, 3)[ FD ]
Line_45 $$ if (GetterUtil.getBoolean(relengProperties.getProperty("marketplace"))) -->Line_46 $$ _updateRelengChangeLogFile(pluginPackageProperties, relengChangeLogFile, relengProperties)[ CD ]
Line_12 $$ relengProperties = new Properties()-->Line_18 $$ _writeElement(sb, "category", relengProperties, 3)[ FD ]
Line_2 $$ private String _readReleng(String fileName, Properties pluginPackageProperties) throws Exception -->Line_4 $$ String relativeWebInfDirName = fileName.substring(0, x + 8)[ FD ]
