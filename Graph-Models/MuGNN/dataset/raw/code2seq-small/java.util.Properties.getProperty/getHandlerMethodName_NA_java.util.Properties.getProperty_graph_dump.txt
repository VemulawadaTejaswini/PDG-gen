Line_9 $$ if (WebUtils.hasSubmitParameter(request, candidate)) -->Line_10 $$ methodName = candidate[ CD ]
Line_20 $$ methodName = request.getParameter(this.paramName)-->Line_39 $$ methodName = null[ FD ]
Line_4 $$ String methodName = null-->Line_21 $$ if (methodName != null) [ FD ]
Line_10 $$ methodName = candidate-->Line_41 $$ if (methodName == null) [ FD ]
Line_4 $$ String methodName = null-->Line_41 $$ if (methodName == null) [ FD ]
Line_11 $$ if (logger.isDebugEnabled()) -->Line_12 $$ logger.debug("Determined handler method '" + methodName + "' based on existence of explicit request parameter of same name")[ CD ]
Line_45 $$ if (logger.isDebugEnabled()) -->Line_46 $$ logger.debug("Falling back to default handler method '" + this.defaultMethodName + "'")[ CD ]
Line_27 $$ if (methodName != null && this.logicalMappings != null) -->Line_30 $$ methodName = this.logicalMappings.getProperty(methodName, methodName)[ CD ]
Line_4 $$ String methodName = null-->Line_10 $$ methodName = candidate[ FD ]
Line_30 $$ methodName = this.logicalMappings.getProperty(methodName, methodName)-->Line_39 $$ methodName = null[ FD ]
Line_36 $$ if (logger.isDebugEnabled()) -->Line_37 $$ logger.debug("Method name '" + methodName + "' is empty: treating it as no method name found")[ CD ]
Line_4 $$ String methodName = null-->Line_30 $$ methodName = this.logicalMappings.getProperty(methodName, methodName)[ FD ]
Line_8 $$ for (String candidate : this.methodParamNames) -->Line_9 $$ if (WebUtils.hasSubmitParameter(request, candidate)) [ FD ]
Line_20 $$ methodName = request.getParameter(this.paramName)-->Line_35 $$ if (methodName != null && !StringUtils.hasText(methodName)) [ FD ]
Line_8 $$ for (String candidate : this.methodParamNames) -->Line_10 $$ methodName = candidate[ FD ]
Line_10 $$ methodName = candidate-->Line_21 $$ if (methodName != null) [ FD ]
Line_4 $$ String methodName = null-->Line_20 $$ methodName = request.getParameter(this.paramName)[ FD ]
Line_35 $$ if (methodName != null && !StringUtils.hasText(methodName)) -->Line_39 $$ methodName = null[ CD ]
Line_20 $$ methodName = request.getParameter(this.paramName)-->Line_30 $$ methodName = this.logicalMappings.getProperty(methodName, methodName)[ FD ]
Line_41 $$ if (methodName == null) -->Line_42 $$ if (this.defaultMethodName != null) [ CD ]
Line_30 $$ methodName = this.logicalMappings.getProperty(methodName, methodName)-->Line_35 $$ if (methodName != null && !StringUtils.hasText(methodName)) [ FD ]
Line_27 $$ if (methodName != null && this.logicalMappings != null) -->Line_31 $$ if (logger.isDebugEnabled()) [ CD ]
Line_30 $$ methodName = this.logicalMappings.getProperty(methodName, methodName)-->Line_41 $$ if (methodName == null) [ FD ]
Line_21 $$ if (methodName != null) -->Line_22 $$ if (logger.isDebugEnabled()) [ CD ]
Line_10 $$ methodName = candidate-->Line_30 $$ methodName = this.logicalMappings.getProperty(methodName, methodName)[ FD ]
Line_20 $$ methodName = request.getParameter(this.paramName)-->Line_21 $$ if (methodName != null) [ FD ]
Line_42 $$ if (this.defaultMethodName != null) -->Line_45 $$ if (logger.isDebugEnabled()) [ CD ]
Line_9 $$ if (WebUtils.hasSubmitParameter(request, candidate)) -->Line_11 $$ if (logger.isDebugEnabled()) [ CD ]
Line_10 $$ methodName = candidate-->Line_39 $$ methodName = null[ FD ]
Line_10 $$ methodName = candidate-->Line_20 $$ methodName = request.getParameter(this.paramName)[ FD ]
Line_31 $$ if (logger.isDebugEnabled()) -->Line_32 $$ logger.debug("Resolved method name '" + originalName + "' to handler method '" + methodName + "'")[ CD ]
Line_4 $$ String methodName = null-->Line_39 $$ methodName = null[ FD ]
Line_22 $$ if (logger.isDebugEnabled()) -->Line_23 $$ logger.debug("Determined handler method '" + methodName + "' based on value of request parameter '" + this.paramName + "'")[ CD ]
Line_4 $$ String methodName = null-->Line_35 $$ if (methodName != null && !StringUtils.hasText(methodName)) [ FD ]
Line_20 $$ methodName = request.getParameter(this.paramName)-->Line_41 $$ if (methodName == null) [ FD ]
Line_39 $$ methodName = null-->Line_41 $$ if (methodName == null) [ FD ]
Line_10 $$ methodName = candidate-->Line_35 $$ if (methodName != null && !StringUtils.hasText(methodName)) [ FD ]
Line_35 $$ if (methodName != null && !StringUtils.hasText(methodName)) -->Line_36 $$ if (logger.isDebugEnabled()) [ CD ]
