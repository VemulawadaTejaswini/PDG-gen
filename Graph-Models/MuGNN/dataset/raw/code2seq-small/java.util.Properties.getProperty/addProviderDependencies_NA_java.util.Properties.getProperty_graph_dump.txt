Line_3 $$ final Properties properties = pu.getProperties()-->Line_4 $$ final String sharedCacheMode = properties.getProperty(SHARED_CACHE_MODE)[ FD ]
Line_2 $$ public void addProviderDependencies(PersistenceUnitMetadata pu) -->Line_16 $$ JPA_LOGGER.tracef("second level cache disabled for %s, pu %s property = %s, pu.getSharedCacheMode = %s", pu.getScopedPersistenceUnitName(), SHARED_CACHE_MODE, sharedCacheMode, pu.getSharedCacheMode().toString())[ FD ]
Line_4 $$ final String sharedCacheMode = properties.getProperty(SHARED_CACHE_MODE)-->Line_12 $$ if (!sharedCacheDisabled && Boolean.parseBoolean(properties.getProperty(AvailableSettings.USE_SECOND_LEVEL_CACHE)) || (sharedCacheMode != null && (!NONE.equals(sharedCacheMode))) || (!SharedCacheMode.NONE.equals(pu.getSharedCacheMode()) && (!SharedCacheMode.UNSPECIFIED.equals(pu.getSharedCacheMode())))) [ FD ]
Line_2 $$ public void addProviderDependencies(PersistenceUnitMetadata pu) -->Line_9 $$ pu.setSharedCacheMode(SharedCacheMode.NONE)[ FD ]
Line_2 $$ public void addProviderDependencies(PersistenceUnitMetadata pu) -->Line_5 $$ if (Classification.NONE.equals(platform.defaultCacheClassification())) [ CD ]
Line_11 $$ boolean sharedCacheDisabled = SharedCacheMode.NONE.equals(pu.getSharedCacheMode()) || NONE.equals(sharedCacheMode)-->Line_12 $$ if (!sharedCacheDisabled && Boolean.parseBoolean(properties.getProperty(AvailableSettings.USE_SECOND_LEVEL_CACHE)) || (sharedCacheMode != null && (!NONE.equals(sharedCacheMode))) || (!SharedCacheMode.NONE.equals(pu.getSharedCacheMode()) && (!SharedCacheMode.UNSPECIFIED.equals(pu.getSharedCacheMode())))) [ FD ]
Line_2 $$ public void addProviderDependencies(PersistenceUnitMetadata pu) -->Line_12 $$ if (!sharedCacheDisabled && Boolean.parseBoolean(properties.getProperty(AvailableSettings.USE_SECOND_LEVEL_CACHE)) || (sharedCacheMode != null && (!NONE.equals(sharedCacheMode))) || (!SharedCacheMode.NONE.equals(pu.getSharedCacheMode()) && (!SharedCacheMode.UNSPECIFIED.equals(pu.getSharedCacheMode())))) [ FD ]
Line_5 $$ if (Classification.NONE.equals(platform.defaultCacheClassification())) -->Line_9 $$ pu.setSharedCacheMode(SharedCacheMode.NONE)[ CD ]
Line_3 $$ final Properties properties = pu.getProperties()-->Line_12 $$ if (!sharedCacheDisabled && Boolean.parseBoolean(properties.getProperty(AvailableSettings.USE_SECOND_LEVEL_CACHE)) || (sharedCacheMode != null && (!NONE.equals(sharedCacheMode))) || (!SharedCacheMode.NONE.equals(pu.getSharedCacheMode()) && (!SharedCacheMode.UNSPECIFIED.equals(pu.getSharedCacheMode())))) [ FD ]
Line_2 $$ public void addProviderDependencies(PersistenceUnitMetadata pu) -->Line_3 $$ final Properties properties = pu.getProperties()[ CD ]
Line_2 $$ public void addProviderDependencies(PersistenceUnitMetadata pu) -->Line_12 $$ if (!sharedCacheDisabled && Boolean.parseBoolean(properties.getProperty(AvailableSettings.USE_SECOND_LEVEL_CACHE)) || (sharedCacheMode != null && (!NONE.equals(sharedCacheMode))) || (!SharedCacheMode.NONE.equals(pu.getSharedCacheMode()) && (!SharedCacheMode.UNSPECIFIED.equals(pu.getSharedCacheMode())))) [ CD ]
Line_12 $$ if (!sharedCacheDisabled && Boolean.parseBoolean(properties.getProperty(AvailableSettings.USE_SECOND_LEVEL_CACHE)) || (sharedCacheMode != null && (!NONE.equals(sharedCacheMode))) || (!SharedCacheMode.NONE.equals(pu.getSharedCacheMode()) && (!SharedCacheMode.UNSPECIFIED.equals(pu.getSharedCacheMode())))) -->Line_13 $$ HibernateSecondLevelCache.addSecondLevelCacheDependencies(pu.getProperties(), pu.getScopedPersistenceUnitName())[ CD ]
Line_12 $$ if (!sharedCacheDisabled && Boolean.parseBoolean(properties.getProperty(AvailableSettings.USE_SECOND_LEVEL_CACHE)) || (sharedCacheMode != null && (!NONE.equals(sharedCacheMode))) || (!SharedCacheMode.NONE.equals(pu.getSharedCacheMode()) && (!SharedCacheMode.UNSPECIFIED.equals(pu.getSharedCacheMode())))) -->Line_16 $$ JPA_LOGGER.tracef("second level cache disabled for %s, pu %s property = %s, pu.getSharedCacheMode = %s", pu.getScopedPersistenceUnitName(), SHARED_CACHE_MODE, sharedCacheMode, pu.getSharedCacheMode().toString())[ CD ]
Line_6 $$ if (!SharedCacheMode.NONE.equals(pu.getSharedCacheMode())) -->Line_7 $$ JPA_LOGGER.tracef("second level cache is not supported in platform, ignoring shared cache mode")[ CD ]
Line_2 $$ public void addProviderDependencies(PersistenceUnitMetadata pu) -->Line_11 $$ boolean sharedCacheDisabled = SharedCacheMode.NONE.equals(pu.getSharedCacheMode()) || NONE.equals(sharedCacheMode)[ CD ]
Line_2 $$ public void addProviderDependencies(PersistenceUnitMetadata pu) -->Line_4 $$ final String sharedCacheMode = properties.getProperty(SHARED_CACHE_MODE)[ CD ]
Line_2 $$ public void addProviderDependencies(PersistenceUnitMetadata pu) -->Line_11 $$ boolean sharedCacheDisabled = SharedCacheMode.NONE.equals(pu.getSharedCacheMode()) || NONE.equals(sharedCacheMode)[ FD ]
Line_12 $$ if (!sharedCacheDisabled && Boolean.parseBoolean(properties.getProperty(AvailableSettings.USE_SECOND_LEVEL_CACHE)) || (sharedCacheMode != null && (!NONE.equals(sharedCacheMode))) || (!SharedCacheMode.NONE.equals(pu.getSharedCacheMode()) && (!SharedCacheMode.UNSPECIFIED.equals(pu.getSharedCacheMode())))) -->Line_14 $$ JPA_LOGGER.tracef("second level cache enabled for %s", pu.getScopedPersistenceUnitName())[ CD ]
Line_5 $$ if (Classification.NONE.equals(platform.defaultCacheClassification())) -->Line_6 $$ if (!SharedCacheMode.NONE.equals(pu.getSharedCacheMode())) [ CD ]
Line_2 $$ public void addProviderDependencies(PersistenceUnitMetadata pu) -->Line_13 $$ HibernateSecondLevelCache.addSecondLevelCacheDependencies(pu.getProperties(), pu.getScopedPersistenceUnitName())[ FD ]
Line_2 $$ public void addProviderDependencies(PersistenceUnitMetadata pu) -->Line_3 $$ final Properties properties = pu.getProperties()[ FD ]
Line_2 $$ public void addProviderDependencies(PersistenceUnitMetadata pu) -->Line_6 $$ if (!SharedCacheMode.NONE.equals(pu.getSharedCacheMode())) [ FD ]
Line_4 $$ final String sharedCacheMode = properties.getProperty(SHARED_CACHE_MODE)-->Line_11 $$ boolean sharedCacheDisabled = SharedCacheMode.NONE.equals(pu.getSharedCacheMode()) || NONE.equals(sharedCacheMode)[ FD ]
Line_4 $$ final String sharedCacheMode = properties.getProperty(SHARED_CACHE_MODE)-->Line_16 $$ JPA_LOGGER.tracef("second level cache disabled for %s, pu %s property = %s, pu.getSharedCacheMode = %s", pu.getScopedPersistenceUnitName(), SHARED_CACHE_MODE, sharedCacheMode, pu.getSharedCacheMode().toString())[ FD ]
Line_2 $$ public void addProviderDependencies(PersistenceUnitMetadata pu) -->Line_14 $$ JPA_LOGGER.tracef("second level cache enabled for %s", pu.getScopedPersistenceUnitName())[ FD ]
