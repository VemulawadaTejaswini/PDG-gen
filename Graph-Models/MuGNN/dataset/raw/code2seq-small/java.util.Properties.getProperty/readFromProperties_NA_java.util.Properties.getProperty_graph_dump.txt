Line_31 $$ if (jvm) -->Line_41 $$ if (javaVersionString == null) [ CD ]
Line_32 $$ String esVersionString = props.getProperty("elasticsearch.version")-->Line_33 $$ if (esVersionString == null) [ FD ]
Line_29 $$ boolean isolated = true-->Line_46 $$ isolated = Boolean.parseBoolean(props.getProperty("isolated", "true"))[ FD ]
Line_47 $$ classname = props.getProperty("classname")-->Line_48 $$ if (classname == null) [ FD ]
Line_6 $$ Path descriptor = dir.resolve(ES_PLUGIN_PROPERTIES)-->Line_8 $$ try (InputStream stream = Files.newInputStream(descriptor)) [ FD ]
Line_40 $$ String javaVersionString = props.getProperty("java.version")-->Line_44 $$ JarHell.checkVersionFormat(javaVersionString)[ FD ]
Line_11 $$ String name = props.getProperty("name")-->Line_15 $$ PluginManager.checkForForbiddenName(name)[ FD ]
Line_31 $$ if (jvm) -->Line_45 $$ JarHell.checkJavaVersion(name, javaVersionString)[ CD ]
Line_32 $$ String esVersionString = props.getProperty("elasticsearch.version")-->Line_36 $$ Version esVersion = Version.fromString(esVersionString)[ FD ]
Line_31 $$ if (jvm) -->Line_40 $$ String javaVersionString = props.getProperty("java.version")[ CD ]
Line_11 $$ String name = props.getProperty("name")-->Line_45 $$ JarHell.checkJavaVersion(name, javaVersionString)[ FD ]
Line_7 $$ Properties props = new Properties()-->Line_11 $$ String name = props.getProperty("name")[ FD ]
Line_20 $$ String version = props.getProperty("version")-->Line_21 $$ if (version == null) [ FD ]
Line_36 $$ Version esVersion = Version.fromString(esVersionString)-->Line_37 $$ if (esVersion.equals(Version.CURRENT) == false) [ FD ]
Line_7 $$ Properties props = new Properties()-->Line_9 $$ props.load(stream)[ FD ]
Line_7 $$ Properties props = new Properties()-->Line_24 $$ boolean jvm = Boolean.parseBoolean(props.getProperty("jvm"))[ FD ]
Line_7 $$ Properties props = new Properties()-->Line_47 $$ classname = props.getProperty("classname")[ FD ]
Line_30 $$ String classname = "NA"-->Line_47 $$ classname = props.getProperty("classname")[ FD ]
Line_7 $$ Properties props = new Properties()-->Line_46 $$ isolated = Boolean.parseBoolean(props.getProperty("isolated", "true"))[ FD ]
Line_7 $$ Properties props = new Properties()-->Line_25 $$ boolean site = Boolean.parseBoolean(props.getProperty("site"))[ FD ]
Line_40 $$ String javaVersionString = props.getProperty("java.version")-->Line_45 $$ JarHell.checkJavaVersion(name, javaVersionString)[ FD ]
Line_30 $$ String classname = "NA"-->Line_48 $$ if (classname == null) [ FD ]
Line_31 $$ if (jvm) -->Line_33 $$ if (esVersionString == null) [ CD ]
Line_31 $$ if (jvm) -->Line_36 $$ Version esVersion = Version.fromString(esVersionString)[ CD ]
Line_7 $$ Properties props = new Properties()-->Line_32 $$ String esVersionString = props.getProperty("elasticsearch.version")[ FD ]
Line_7 $$ Properties props = new Properties()-->Line_40 $$ String javaVersionString = props.getProperty("java.version")[ FD ]
Line_8 $$ try (InputStream stream = Files.newInputStream(descriptor)) -->Line_9 $$ props.load(stream)[ FD ]
Line_16 $$ String description = props.getProperty("description")-->Line_17 $$ if (description == null) [ FD ]
Line_31 $$ if (jvm) -->Line_44 $$ JarHell.checkVersionFormat(javaVersionString)[ CD ]
Line_31 $$ if (jvm) -->Line_37 $$ if (esVersion.equals(Version.CURRENT) == false) [ CD ]
Line_7 $$ Properties props = new Properties()-->Line_16 $$ String description = props.getProperty("description")[ FD ]
Line_31 $$ if (jvm) -->Line_32 $$ String esVersionString = props.getProperty("elasticsearch.version")[ CD ]
Line_52 $$ if (site) -->Line_53 $$ if (!Files.exists(dir.resolve("_site"))) [ CD ]
Line_31 $$ if (jvm) -->Line_46 $$ isolated = Boolean.parseBoolean(props.getProperty("isolated", "true"))[ CD ]
Line_7 $$ Properties props = new Properties()-->Line_20 $$ String version = props.getProperty("version")[ FD ]
Line_31 $$ if (jvm) -->Line_47 $$ classname = props.getProperty("classname")[ CD ]
Line_11 $$ String name = props.getProperty("name")-->Line_12 $$ if (name == null || name.isEmpty()) [ FD ]
Line_40 $$ String javaVersionString = props.getProperty("java.version")-->Line_41 $$ if (javaVersionString == null) [ FD ]
Line_31 $$ if (jvm) -->Line_48 $$ if (classname == null) [ CD ]
