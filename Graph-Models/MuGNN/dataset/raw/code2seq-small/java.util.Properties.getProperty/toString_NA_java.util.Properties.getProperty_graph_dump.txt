Line_13 $$ Enumeration<String> enu = (Enumeration<String>) properties.propertyNames()-->Line_15 $$ String key = enu.nextElement()[ FD ]
Line_9 $$ sb = new StringBundler()-->Line_25 $$ return sb.toString()[ FD ]
Line_18 $$ if (safeProperties != null) -->Line_21 $$ sb.append(properties.getProperty(key))[ CD ]
Line_15 $$ String key = enu.nextElement()-->Line_19 $$ sb.append(safeProperties.getEncodedProperty(key))[ FD ]
Line_3 $$ SafeProperties safeProperties = null-->Line_5 $$ safeProperties = (SafeProperties) properties[ FD ]
Line_11 $$ sb = new StringBundler(properties.size() * 4)-->Line_16 $$ sb.append(key)[ FD ]
Line_18 $$ if (safeProperties != null) -->Line_19 $$ sb.append(safeProperties.getEncodedProperty(key))[ CD ]
Line_2 $$ public static String toString(Properties properties) -->Line_14 $$ while (enu.hasMoreElements()) [ CD ]
Line_2 $$ public static String toString(Properties properties) -->Line_11 $$ sb = new StringBundler(properties.size() * 4)[ FD ]
Line_5 $$ safeProperties = (SafeProperties) properties-->Line_19 $$ sb.append(safeProperties.getEncodedProperty(key))[ FD ]
Line_9 $$ sb = new StringBundler()-->Line_21 $$ sb.append(properties.getProperty(key))[ FD ]
Line_14 $$ while (enu.hasMoreElements()) -->Line_23 $$ sb.append(StringPool.NEW_LINE)[ CD ]
Line_11 $$ sb = new StringBundler(properties.size() * 4)-->Line_25 $$ return sb.toString()[ FD ]
Line_9 $$ sb = new StringBundler()-->Line_19 $$ sb.append(safeProperties.getEncodedProperty(key))[ FD ]
Line_3 $$ SafeProperties safeProperties = null-->Line_19 $$ sb.append(safeProperties.getEncodedProperty(key))[ FD ]
Line_11 $$ sb = new StringBundler(properties.size() * 4)-->Line_19 $$ sb.append(safeProperties.getEncodedProperty(key))[ FD ]
Line_2 $$ public static String toString(Properties properties) -->Line_3 $$ SafeProperties safeProperties = null[ CD ]
Line_7 $$ StringBundler sb = null-->Line_16 $$ sb.append(key)[ FD ]
Line_15 $$ String key = enu.nextElement()-->Line_21 $$ sb.append(properties.getProperty(key))[ FD ]
Line_2 $$ public static String toString(Properties properties) -->Line_21 $$ sb.append(properties.getProperty(key))[ FD ]
Line_2 $$ public static String toString(Properties properties) -->Line_8 $$ if (properties.isEmpty()) [ FD ]
Line_7 $$ StringBundler sb = null-->Line_23 $$ sb.append(StringPool.NEW_LINE)[ FD ]
Line_11 $$ sb = new StringBundler(properties.size() * 4)-->Line_23 $$ sb.append(StringPool.NEW_LINE)[ FD ]
Line_13 $$ Enumeration<String> enu = (Enumeration<String>) properties.propertyNames()-->Line_14 $$ while (enu.hasMoreElements()) [ FD ]
Line_5 $$ safeProperties = (SafeProperties) properties-->Line_18 $$ if (safeProperties != null) [ FD ]
Line_7 $$ StringBundler sb = null-->Line_17 $$ sb.append(StringPool.EQUAL)[ FD ]
Line_8 $$ if (properties.isEmpty()) -->Line_11 $$ sb = new StringBundler(properties.size() * 4)[ CD ]
Line_9 $$ sb = new StringBundler()-->Line_17 $$ sb.append(StringPool.EQUAL)[ FD ]
Line_2 $$ public static String toString(Properties properties) -->Line_13 $$ Enumeration<String> enu = (Enumeration<String>) properties.propertyNames()[ CD ]
Line_14 $$ while (enu.hasMoreElements()) -->Line_17 $$ sb.append(StringPool.EQUAL)[ CD ]
Line_2 $$ public static String toString(Properties properties) -->Line_8 $$ if (properties.isEmpty()) [ CD ]
Line_7 $$ StringBundler sb = null-->Line_21 $$ sb.append(properties.getProperty(key))[ FD ]
Line_2 $$ public static String toString(Properties properties) -->Line_13 $$ Enumeration<String> enu = (Enumeration<String>) properties.propertyNames()[ FD ]
Line_3 $$ SafeProperties safeProperties = null-->Line_18 $$ if (safeProperties != null) [ FD ]
Line_7 $$ StringBundler sb = null-->Line_19 $$ sb.append(safeProperties.getEncodedProperty(key))[ FD ]
Line_7 $$ StringBundler sb = null-->Line_9 $$ sb = new StringBundler()[ FD ]
Line_14 $$ while (enu.hasMoreElements()) -->Line_18 $$ if (safeProperties != null) [ CD ]
Line_2 $$ public static String toString(Properties properties) -->Line_4 $$ if (properties instanceof SafeProperties) [ FD ]
Line_8 $$ if (properties.isEmpty()) -->Line_9 $$ sb = new StringBundler()[ CD ]
Line_14 $$ while (enu.hasMoreElements()) -->Line_15 $$ String key = enu.nextElement()[ CD ]
Line_9 $$ sb = new StringBundler()-->Line_23 $$ sb.append(StringPool.NEW_LINE)[ FD ]
Line_11 $$ sb = new StringBundler(properties.size() * 4)-->Line_21 $$ sb.append(properties.getProperty(key))[ FD ]
Line_9 $$ sb = new StringBundler()-->Line_11 $$ sb = new StringBundler(properties.size() * 4)[ FD ]
Line_2 $$ public static String toString(Properties properties) -->Line_7 $$ StringBundler sb = null[ CD ]
Line_7 $$ StringBundler sb = null-->Line_25 $$ return sb.toString()[ FD ]
Line_7 $$ StringBundler sb = null-->Line_11 $$ sb = new StringBundler(properties.size() * 4)[ FD ]
Line_2 $$ public static String toString(Properties properties) -->Line_25 $$ return sb.toString()[ CD ]
Line_4 $$ if (properties instanceof SafeProperties) -->Line_5 $$ safeProperties = (SafeProperties) properties[ CD ]
Line_15 $$ String key = enu.nextElement()-->Line_16 $$ sb.append(key)[ FD ]
Line_9 $$ sb = new StringBundler()-->Line_16 $$ sb.append(key)[ FD ]
Line_14 $$ while (enu.hasMoreElements()) -->Line_16 $$ sb.append(key)[ CD ]
Line_2 $$ public static String toString(Properties properties) -->Line_4 $$ if (properties instanceof SafeProperties) [ CD ]
Line_11 $$ sb = new StringBundler(properties.size() * 4)-->Line_17 $$ sb.append(StringPool.EQUAL)[ FD ]
