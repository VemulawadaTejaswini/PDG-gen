Line_3 $$ String driverClassName = properties.getProperty("driverClassName")-->Line_5 $$ Class.forName(driverClassName)[ FD ]
Line_16 $$ if (!(classLoader instanceof URLClassLoader)) -->Line_17 $$ _log.error("Unable to install JAR because the system class loader " + "is not an instance of URLClassLoader")[ CD ]
Line_2 $$ protected void testDatabaseClass(Properties properties) throws Exception -->Line_3 $$ String driverClassName = properties.getProperty("driverClassName")[ CD ]
Line_10 $$ String url = PropsUtil.get(PropsKeys.SETUP_DATABASE_JAR_URL, new Filter(driverClassName))-->Line_12 $$ if (Validator.isNull(url) || Validator.isNull(name)) [ FD ]
Line_11 $$ String name = PropsUtil.get(PropsKeys.SETUP_DATABASE_JAR_NAME, new Filter(driverClassName))-->Line_12 $$ if (Validator.isNull(url) || Validator.isNull(name)) [ FD ]
Line_16 $$ if (!(classLoader instanceof URLClassLoader)) -->Line_18 $$ return[ CD ]
Line_2 $$ protected void testDatabaseClass(Properties properties) throws Exception -->Line_3 $$ String driverClassName = properties.getProperty("driverClassName")[ FD ]
Line_11 $$ String name = PropsUtil.get(PropsKeys.SETUP_DATABASE_JAR_NAME, new Filter(driverClassName))-->Line_20 $$ JarUtil.downloadAndInstallJar(new URL(url), PropsValues.LIFERAY_LIB_GLOBAL_DIR, name, (URLClassLoader) classLoader)[ FD ]
