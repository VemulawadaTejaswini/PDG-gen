Line_5 $$ if (parent != null) -->Line_12 $$ MetadataTools.addColumns(propMapping, value.getColumnIterator())[ CD ]
Line_23 $$ if (property != null) -->Line_24 $$ typeMapping.addElement("param").addAttribute("name", keyType).setText(property)[ CD ]
Line_7 $$ String typeName = type.getName()-->Line_8 $$ if (typeName == null) [ FD ]
Line_4 $$ if (type instanceof BasicType || type instanceof SerializableToBlobType || "org.hibernate.type.PrimitiveByteArrayBlobType".equals(type.getClass().getName())) -->Line_34 $$ return false[ CD ]
Line_5 $$ if (parent != null) -->Line_7 $$ String typeName = type.getName()[ CD ]
Line_11 $$ final Element propMapping = MetadataTools.addProperty(parent, propertyAuditingData.getName(), addNestedType ? null : typeName, propertyAuditingData.isForceInsertable() || insertable, key)-->Line_12 $$ MetadataTools.addColumns(propMapping, value.getColumnIterator())[ FD ]
Line_5 $$ if (parent != null) -->Line_8 $$ if (typeName == null) [ CD ]
Line_14 $$ final Properties typeParameters = ((SimpleValue) value).getTypeParameters()-->Line_18 $$ mapEnumerationType(typeMapping, type, typeParameters)[ FD ]
Line_5 $$ if (parent != null) -->Line_11 $$ final Element propMapping = MetadataTools.addProperty(parent, propertyAuditingData.getName(), addNestedType ? null : typeName, propertyAuditingData.isForceInsertable() || insertable, key)[ CD ]
Line_2 $$ boolean addBasic(Element parent, PropertyAuditingData propertyAuditingData, Value value, SimpleMapperBuilder mapper, boolean insertable, boolean key) -->Line_36 $$ return true[ CD ]
Line_13 $$ if (addNestedType) -->Line_14 $$ final Properties typeParameters = ((SimpleValue) value).getTypeParameters()[ CD ]
Line_22 $$ final String property = typeParameters.getProperty(keyType)-->Line_24 $$ typeMapping.addElement("param").addAttribute("name", keyType).setText(property)[ FD ]
Line_7 $$ String typeName = type.getName()-->Line_16 $$ typeMapping.addAttribute("name", typeName)[ FD ]
Line_9 $$ typeName = type.getClass().getName()-->Line_17 $$ if ("org.hibernate.type.EnumType".equals(typeName)) [ FD ]
Line_3 $$ final Type type = value.getType()-->Line_9 $$ typeName = type.getClass().getName()[ FD ]
Line_22 $$ final String property = typeParameters.getProperty(keyType)-->Line_23 $$ if (property != null) [ FD ]
Line_2 $$ boolean addBasic(Element parent, PropertyAuditingData propertyAuditingData, Value value, SimpleMapperBuilder mapper, boolean insertable, boolean key) -->Line_3 $$ final Type type = value.getType()[ FD ]
Line_13 $$ if (addNestedType) -->Line_15 $$ final Element typeMapping = propMapping.addElement("type")[ CD ]
Line_5 $$ if (parent != null) -->Line_13 $$ if (addNestedType) [ CD ]
Line_5 $$ if (parent != null) -->Line_6 $$ final boolean addNestedType = (value instanceof SimpleValue) && ((SimpleValue) value).getTypeParameters() != null[ CD ]
Line_14 $$ final Properties typeParameters = ((SimpleValue) value).getTypeParameters()-->Line_22 $$ final String property = typeParameters.getProperty(keyType)[ FD ]
Line_21 $$ final String keyType = (String) object-->Line_24 $$ typeMapping.addElement("param").addAttribute("name", keyType).setText(property)[ FD ]
Line_2 $$ boolean addBasic(Element parent, PropertyAuditingData propertyAuditingData, Value value, SimpleMapperBuilder mapper, boolean insertable, boolean key) -->Line_3 $$ final Type type = value.getType()[ CD ]
Line_7 $$ String typeName = type.getName()-->Line_9 $$ typeName = type.getClass().getName()[ FD ]
Line_30 $$ if (mapper != null) -->Line_31 $$ mapper.add(propertyAuditingData.getPropertyData())[ CD ]
Line_13 $$ if (addNestedType) -->Line_16 $$ typeMapping.addAttribute("name", typeName)[ CD ]
Line_15 $$ final Element typeMapping = propMapping.addElement("type")-->Line_16 $$ typeMapping.addAttribute("name", typeName)[ FD ]
Line_2 $$ boolean addBasic(Element parent, PropertyAuditingData propertyAuditingData, Value value, SimpleMapperBuilder mapper, boolean insertable, boolean key) -->Line_4 $$ if (type instanceof BasicType || type instanceof SerializableToBlobType || "org.hibernate.type.PrimitiveByteArrayBlobType".equals(type.getClass().getName())) [ CD ]
Line_17 $$ if ("org.hibernate.type.EnumType".equals(typeName)) -->Line_18 $$ mapEnumerationType(typeMapping, type, typeParameters)[ CD ]
Line_3 $$ final Type type = value.getType()-->Line_18 $$ mapEnumerationType(typeMapping, type, typeParameters)[ FD ]
Line_9 $$ typeName = type.getClass().getName()-->Line_16 $$ typeMapping.addAttribute("name", typeName)[ FD ]
Line_21 $$ final String keyType = (String) object-->Line_22 $$ final String property = typeParameters.getProperty(keyType)[ FD ]
Line_7 $$ String typeName = type.getName()-->Line_17 $$ if ("org.hibernate.type.EnumType".equals(typeName)) [ FD ]
Line_2 $$ boolean addBasic(Element parent, PropertyAuditingData propertyAuditingData, Value value, SimpleMapperBuilder mapper, boolean insertable, boolean key) -->Line_31 $$ mapper.add(propertyAuditingData.getPropertyData())[ FD ]
Line_11 $$ final Element propMapping = MetadataTools.addProperty(parent, propertyAuditingData.getName(), addNestedType ? null : typeName, propertyAuditingData.isForceInsertable() || insertable, key)-->Line_15 $$ final Element typeMapping = propMapping.addElement("type")[ FD ]
Line_2 $$ boolean addBasic(Element parent, PropertyAuditingData propertyAuditingData, Value value, SimpleMapperBuilder mapper, boolean insertable, boolean key) -->Line_5 $$ if (parent != null) [ FD ]
Line_4 $$ if (type instanceof BasicType || type instanceof SerializableToBlobType || "org.hibernate.type.PrimitiveByteArrayBlobType".equals(type.getClass().getName())) -->Line_30 $$ if (mapper != null) [ CD ]
Line_3 $$ final Type type = value.getType()-->Line_4 $$ if (type instanceof BasicType || type instanceof SerializableToBlobType || "org.hibernate.type.PrimitiveByteArrayBlobType".equals(type.getClass().getName())) [ FD ]
Line_2 $$ boolean addBasic(Element parent, PropertyAuditingData propertyAuditingData, Value value, SimpleMapperBuilder mapper, boolean insertable, boolean key) -->Line_11 $$ final Element propMapping = MetadataTools.addProperty(parent, propertyAuditingData.getName(), addNestedType ? null : typeName, propertyAuditingData.isForceInsertable() || insertable, key)[ FD ]
Line_13 $$ if (addNestedType) -->Line_17 $$ if ("org.hibernate.type.EnumType".equals(typeName)) [ CD ]
Line_15 $$ final Element typeMapping = propMapping.addElement("type")-->Line_24 $$ typeMapping.addElement("param").addAttribute("name", keyType).setText(property)[ FD ]
Line_2 $$ boolean addBasic(Element parent, PropertyAuditingData propertyAuditingData, Value value, SimpleMapperBuilder mapper, boolean insertable, boolean key) -->Line_30 $$ if (mapper != null) [ FD ]
Line_15 $$ final Element typeMapping = propMapping.addElement("type")-->Line_18 $$ mapEnumerationType(typeMapping, type, typeParameters)[ FD ]
Line_8 $$ if (typeName == null) -->Line_9 $$ typeName = type.getClass().getName()[ CD ]
Line_2 $$ boolean addBasic(Element parent, PropertyAuditingData propertyAuditingData, Value value, SimpleMapperBuilder mapper, boolean insertable, boolean key) -->Line_12 $$ MetadataTools.addColumns(propMapping, value.getColumnIterator())[ FD ]
Line_14 $$ final Properties typeParameters = ((SimpleValue) value).getTypeParameters()-->Line_20 $$ for (Object object : typeParameters.keySet()) [ FD ]
Line_3 $$ final Type type = value.getType()-->Line_7 $$ String typeName = type.getName()[ FD ]
Line_4 $$ if (type instanceof BasicType || type instanceof SerializableToBlobType || "org.hibernate.type.PrimitiveByteArrayBlobType".equals(type.getClass().getName())) -->Line_5 $$ if (parent != null) [ CD ]
