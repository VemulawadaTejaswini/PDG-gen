Line_16 $$ SearchControls searchControls = new SearchControls(SearchControls.SUBTREE_SCOPE, 1, 0, null, false, false)-->Line_17 $$ enu = ldapContext.search(groupDN, filter.toString(), searchControls)[ FD ]
Line_17 $$ enu = ldapContext.search(groupDN, filter.toString(), searchControls)-->Line_27 $$ enu.close()[ FD ]
Line_4 $$ NamingEnumeration<SearchResult> enu = null-->Line_26 $$ if (enu != null) [ FD ]
Line_2 $$ public boolean isGroupMember(long ldapServerId, long companyId, String groupDN, String userDN) throws Exception -->Line_9 $$ Properties groupMappings = _ldapSettings.getGroupMappings(ldapServerId, companyId)[ FD ]
Line_10 $$ StringBundler filter = new StringBundler(5)-->Line_17 $$ enu = ldapContext.search(groupDN, filter.toString(), searchControls)[ FD ]
Line_29 $$ if (ldapContext != null) -->Line_30 $$ ldapContext.close()[ CD ]
Line_4 $$ NamingEnumeration<SearchResult> enu = null-->Line_17 $$ enu = ldapContext.search(groupDN, filter.toString(), searchControls)[ FD ]
Line_10 $$ StringBundler filter = new StringBundler(5)-->Line_14 $$ filter.append(userDN)[ FD ]
Line_3 $$ LdapContext ldapContext = getContext(ldapServerId, companyId)-->Line_29 $$ if (ldapContext != null) [ FD ]
Line_4 $$ NamingEnumeration<SearchResult> enu = null-->Line_27 $$ enu.close()[ FD ]
Line_2 $$ public boolean isGroupMember(long ldapServerId, long companyId, String groupDN, String userDN) throws Exception -->Line_17 $$ enu = ldapContext.search(groupDN, filter.toString(), searchControls)[ FD ]
Line_26 $$ if (enu != null) -->Line_27 $$ enu.close()[ CD ]
Line_3 $$ LdapContext ldapContext = getContext(ldapServerId, companyId)-->Line_30 $$ ldapContext.close()[ FD ]
Line_2 $$ public boolean isGroupMember(long ldapServerId, long companyId, String groupDN, String userDN) throws Exception -->Line_33 $$ return false[ CD ]
Line_10 $$ StringBundler filter = new StringBundler(5)-->Line_15 $$ filter.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_9 $$ Properties groupMappings = _ldapSettings.getGroupMappings(ldapServerId, companyId)-->Line_12 $$ filter.append(groupMappings.getProperty("user"))[ FD ]
Line_6 $$ if (ldapContext == null) -->Line_7 $$ return false[ CD ]
Line_4 $$ NamingEnumeration<SearchResult> enu = null-->Line_18 $$ if (enu.hasMoreElements()) [ FD ]
Line_17 $$ enu = ldapContext.search(groupDN, filter.toString(), searchControls)-->Line_18 $$ if (enu.hasMoreElements()) [ FD ]
Line_2 $$ public boolean isGroupMember(long ldapServerId, long companyId, String groupDN, String userDN) throws Exception -->Line_4 $$ NamingEnumeration<SearchResult> enu = null[ CD ]
Line_10 $$ StringBundler filter = new StringBundler(5)-->Line_13 $$ filter.append(StringPool.EQUAL)[ FD ]
Line_3 $$ LdapContext ldapContext = getContext(ldapServerId, companyId)-->Line_17 $$ enu = ldapContext.search(groupDN, filter.toString(), searchControls)[ FD ]
Line_2 $$ public boolean isGroupMember(long ldapServerId, long companyId, String groupDN, String userDN) throws Exception -->Line_14 $$ filter.append(userDN)[ FD ]
Line_2 $$ public boolean isGroupMember(long ldapServerId, long companyId, String groupDN, String userDN) throws Exception -->Line_3 $$ LdapContext ldapContext = getContext(ldapServerId, companyId)[ FD ]
Line_17 $$ enu = ldapContext.search(groupDN, filter.toString(), searchControls)-->Line_26 $$ if (enu != null) [ FD ]
Line_2 $$ public boolean isGroupMember(long ldapServerId, long companyId, String groupDN, String userDN) throws Exception -->Line_3 $$ LdapContext ldapContext = getContext(ldapServerId, companyId)[ CD ]
Line_18 $$ if (enu.hasMoreElements()) -->Line_19 $$ return true[ CD ]
Line_3 $$ LdapContext ldapContext = getContext(ldapServerId, companyId)-->Line_6 $$ if (ldapContext == null) [ FD ]
Line_10 $$ StringBundler filter = new StringBundler(5)-->Line_12 $$ filter.append(groupMappings.getProperty("user"))[ FD ]
Line_22 $$ if (_log.isWarnEnabled()) -->Line_23 $$ _log.warn("Unable to determine if user DN " + userDN + " is a member of group DN " + groupDN, nnfe)[ CD ]
Line_10 $$ StringBundler filter = new StringBundler(5)-->Line_11 $$ filter.append(StringPool.OPEN_PARENTHESIS)[ FD ]
