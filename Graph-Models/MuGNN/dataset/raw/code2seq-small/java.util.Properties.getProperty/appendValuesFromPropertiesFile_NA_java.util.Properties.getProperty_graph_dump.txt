Line_14 $$ if (allowNoNamed) -->Line_15 $$ applicationTag.add(new SimpleTag("fx:argument", propName) [ CD ]
Line_2 $$ private static void appendValuesFromPropertiesFile(final SimpleTag applicationTag, final String paramFile, final String paramTagName, final boolean allowNoNamed) -->Line_3 $$ if (!StringUtil.isEmptyOrSpaces(paramFile)) [ CD ]
Line_10 $$ final String propName = (String) o-->Line_19 $$ buf.append("<").append(getName()).append(">").append(propName).append("</").append(getName()).append(">")[ FD ]
Line_10 $$ final String propName = (String) o-->Line_13 $$ applicationTag.add(new SimpleTag(paramTagName, Couple.of("name", propName), Couple.of("value", propValue)))[ FD ]
Line_4 $$ final Properties properties = new Properties()-->Line_9 $$ for (Object o : properties.keySet()) [ FD ]
Line_6 $$ final FileInputStream paramsInputStream = new FileInputStream(new File(paramFile))-->Line_25 $$ paramsInputStream.close()[ FD ]
Line_10 $$ final String propName = (String) o-->Line_11 $$ final String propValue = properties.getProperty(propName)[ FD ]
Line_3 $$ if (!StringUtil.isEmptyOrSpaces(paramFile)) -->Line_4 $$ final Properties properties = new Properties()[ CD ]
Line_12 $$ if (!StringUtil.isEmptyOrSpaces(propValue)) -->Line_14 $$ if (allowNoNamed) [ CD ]
Line_4 $$ final Properties properties = new Properties()-->Line_11 $$ final String propValue = properties.getProperty(propName)[ FD ]
Line_2 $$ private static void appendValuesFromPropertiesFile(final SimpleTag applicationTag, final String paramFile, final String paramTagName, final boolean allowNoNamed) -->Line_15 $$ applicationTag.add(new SimpleTag("fx:argument", propName) [ FD ]
Line_11 $$ final String propValue = properties.getProperty(propName)-->Line_13 $$ applicationTag.add(new SimpleTag(paramTagName, Couple.of("name", propName), Couple.of("value", propValue)))[ FD ]
Line_6 $$ final FileInputStream paramsInputStream = new FileInputStream(new File(paramFile))-->Line_8 $$ properties.load(paramsInputStream)[ FD ]
Line_11 $$ final String propValue = properties.getProperty(propName)-->Line_12 $$ if (!StringUtil.isEmptyOrSpaces(propValue)) [ FD ]
Line_2 $$ private static void appendValuesFromPropertiesFile(final SimpleTag applicationTag, final String paramFile, final String paramTagName, final boolean allowNoNamed) -->Line_13 $$ applicationTag.add(new SimpleTag(paramTagName, Couple.of("name", propName), Couple.of("value", propValue)))[ FD ]
Line_2 $$ private static void appendValuesFromPropertiesFile(final SimpleTag applicationTag, final String paramFile, final String paramTagName, final boolean allowNoNamed) -->Line_3 $$ if (!StringUtil.isEmptyOrSpaces(paramFile)) [ FD ]
Line_12 $$ if (!StringUtil.isEmptyOrSpaces(propValue)) -->Line_13 $$ applicationTag.add(new SimpleTag(paramTagName, Couple.of("name", propName), Couple.of("value", propValue)))[ CD ]
Line_2 $$ private static void appendValuesFromPropertiesFile(final SimpleTag applicationTag, final String paramFile, final String paramTagName, final boolean allowNoNamed) -->Line_12 $$ if (!StringUtil.isEmptyOrSpaces(propValue)) [ FD ]
Line_15 $$ applicationTag.add(new SimpleTag("fx:argument", propName) -->Line_19 $$ buf.append("<").append(getName()).append(">").append(propName).append("</").append(getName()).append(">")[ FD ]
Line_4 $$ final Properties properties = new Properties()-->Line_8 $$ properties.load(paramsInputStream)[ FD ]
Line_15 $$ applicationTag.add(new SimpleTag("fx:argument", propName) -->Line_19 $$ buf.append("<").append(getName()).append(">").append(propName).append("</").append(getName()).append(">")[ CD ]
