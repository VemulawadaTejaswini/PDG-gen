Line_2 $$ public static RecordReader<?, ?> createRecordReader(Configuration configuration, Path path, long start, long length, Properties schema, List<HiveColumnHandle> columns) -->Line_9 $$ JobConf jobConf = new JobConf(configuration)[ CD ]
Line_8 $$ InputFormat<?, ?> inputFormat = getInputFormat(configuration, schema, true)-->Line_14 $$ inputFormat.getRecordReader(fileSplit, jobConf, Reporter.NULL)[ FD ]
Line_2 $$ public static RecordReader<?, ?> createRecordReader(Configuration configuration, Path path, long start, long length, Properties schema, List<HiveColumnHandle> columns) -->Line_10 $$ FileSplit fileSplit = new FileSplit(path, start, length, (String[]) null)[ CD ]
Line_2 $$ public static RecordReader<?, ?> createRecordReader(Configuration configuration, Path path, long start, long length, Properties schema, List<HiveColumnHandle> columns) -->Line_8 $$ InputFormat<?, ?> inputFormat = getInputFormat(configuration, schema, true)[ CD ]
Line_2 $$ public static RecordReader<?, ?> createRecordReader(Configuration configuration, Path path, long start, long length, Properties schema, List<HiveColumnHandle> columns) -->Line_5 $$ List<Integer> readHiveColumnIndexes = ImmutableList.copyOf(transform(readColumns, HiveColumnHandle::<>getHiveColumnIndex))[ CD ]
Line_9 $$ JobConf jobConf = new JobConf(configuration)-->Line_14 $$ inputFormat.getRecordReader(fileSplit, jobConf, Reporter.NULL)[ FD ]
Line_2 $$ public static RecordReader<?, ?> createRecordReader(Configuration configuration, Path path, long start, long length, Properties schema, List<HiveColumnHandle> columns) -->Line_12 $$ jobConf.set(name, schema.getProperty(name))[ FD ]
Line_10 $$ FileSplit fileSplit = new FileSplit(path, start, length, (String[]) null)-->Line_14 $$ inputFormat.getRecordReader(fileSplit, jobConf, Reporter.NULL)[ FD ]
Line_2 $$ public static RecordReader<?, ?> createRecordReader(Configuration configuration, Path path, long start, long length, Properties schema, List<HiveColumnHandle> columns) -->Line_16 $$ throw new PrestoException(HIVE_CANNOT_OPEN_SPLIT, format("Error opening Hive split %s (offset=%s, length=%s) using %s: %s", path, start, length, getInputFormatName(schema), e.getMessage()), e)[ FD ]
Line_2 $$ public static RecordReader<?, ?> createRecordReader(Configuration configuration, Path path, long start, long length, Properties schema, List<HiveColumnHandle> columns) -->Line_8 $$ InputFormat<?, ?> inputFormat = getInputFormat(configuration, schema, true)[ FD ]
Line_9 $$ JobConf jobConf = new JobConf(configuration)-->Line_12 $$ jobConf.set(name, schema.getProperty(name))[ FD ]
