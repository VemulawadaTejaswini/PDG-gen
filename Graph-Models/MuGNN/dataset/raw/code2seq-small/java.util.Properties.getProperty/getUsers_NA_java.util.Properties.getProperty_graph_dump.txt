Line_2 $$ protected Attribute getUsers(long ldapServerId, long companyId, LdapContext ldapContext, Attributes attributes, UserGroup userGroup, Properties groupMappings) throws Exception -->Line_7 $$ LDAPServerConfiguration ldapServerConfiguration = _ldapServerConfigurationProvider.getConfiguration(companyId, ldapServerId)[ FD ]
Line_2 $$ protected Attribute getUsers(long ldapServerId, long companyId, LdapContext ldapContext, Attributes attributes, UserGroup userGroup, Properties groupMappings) throws Exception -->Line_15 $$ sb.append(groupMappings.getProperty("groupName"))[ CD ]
Line_9 $$ StringBundler sb = new StringBundler(7)-->Line_19 $$ return _portalLDAP.getMultivaluedAttribute(companyId, ldapContext, baseDN, sb.toString(), attribute)[ FD ]
Line_2 $$ protected Attribute getUsers(long ldapServerId, long companyId, LdapContext ldapContext, Attributes attributes, UserGroup userGroup, Properties groupMappings) throws Exception -->Line_8 $$ String baseDN = ldapServerConfiguration.baseDN()[ CD ]
Line_3 $$ Attribute attribute = attributes.get(groupMappings.getProperty("user"))-->Line_4 $$ if (attribute == null) [ FD ]
Line_9 $$ StringBundler sb = new StringBundler(7)-->Line_13 $$ sb.append(groupSearchFilter)[ FD ]
Line_2 $$ protected Attribute getUsers(long ldapServerId, long companyId, LdapContext ldapContext, Attributes attributes, UserGroup userGroup, Properties groupMappings) throws Exception -->Line_18 $$ sb.append("))")[ CD ]
Line_2 $$ protected Attribute getUsers(long ldapServerId, long companyId, LdapContext ldapContext, Attributes attributes, UserGroup userGroup, Properties groupMappings) throws Exception -->Line_17 $$ sb.append(escapeValue(userGroup.getName()))[ CD ]
Line_2 $$ protected Attribute getUsers(long ldapServerId, long companyId, LdapContext ldapContext, Attributes attributes, UserGroup userGroup, Properties groupMappings) throws Exception -->Line_3 $$ Attribute attribute = attributes.get(groupMappings.getProperty("user"))[ FD ]
Line_2 $$ protected Attribute getUsers(long ldapServerId, long companyId, LdapContext ldapContext, Attributes attributes, UserGroup userGroup, Properties groupMappings) throws Exception -->Line_11 $$ String groupSearchFilter = ldapServerConfiguration.groupSearchFilter()[ CD ]
Line_9 $$ StringBundler sb = new StringBundler(7)-->Line_16 $$ sb.append("=")[ FD ]
Line_2 $$ protected Attribute getUsers(long ldapServerId, long companyId, LdapContext ldapContext, Attributes attributes, UserGroup userGroup, Properties groupMappings) throws Exception -->Line_12 $$ LDAPUtil.validateFilter(groupSearchFilter, "LDAPServerConfiguration.groupSearchFilter")[ CD ]
Line_7 $$ LDAPServerConfiguration ldapServerConfiguration = _ldapServerConfigurationProvider.getConfiguration(companyId, ldapServerId)-->Line_11 $$ String groupSearchFilter = ldapServerConfiguration.groupSearchFilter()[ FD ]
Line_2 $$ protected Attribute getUsers(long ldapServerId, long companyId, LdapContext ldapContext, Attributes attributes, UserGroup userGroup, Properties groupMappings) throws Exception -->Line_15 $$ sb.append(groupMappings.getProperty("groupName"))[ FD ]
Line_9 $$ StringBundler sb = new StringBundler(7)-->Line_15 $$ sb.append(groupMappings.getProperty("groupName"))[ FD ]
Line_9 $$ StringBundler sb = new StringBundler(7)-->Line_10 $$ sb.append("(&")[ FD ]
Line_7 $$ LDAPServerConfiguration ldapServerConfiguration = _ldapServerConfigurationProvider.getConfiguration(companyId, ldapServerId)-->Line_8 $$ String baseDN = ldapServerConfiguration.baseDN()[ FD ]
Line_2 $$ protected Attribute getUsers(long ldapServerId, long companyId, LdapContext ldapContext, Attributes attributes, UserGroup userGroup, Properties groupMappings) throws Exception -->Line_19 $$ return _portalLDAP.getMultivaluedAttribute(companyId, ldapContext, baseDN, sb.toString(), attribute)[ CD ]
Line_2 $$ protected Attribute getUsers(long ldapServerId, long companyId, LdapContext ldapContext, Attributes attributes, UserGroup userGroup, Properties groupMappings) throws Exception -->Line_7 $$ LDAPServerConfiguration ldapServerConfiguration = _ldapServerConfigurationProvider.getConfiguration(companyId, ldapServerId)[ CD ]
Line_2 $$ protected Attribute getUsers(long ldapServerId, long companyId, LdapContext ldapContext, Attributes attributes, UserGroup userGroup, Properties groupMappings) throws Exception -->Line_3 $$ Attribute attribute = attributes.get(groupMappings.getProperty("user"))[ CD ]
Line_3 $$ Attribute attribute = attributes.get(groupMappings.getProperty("user"))-->Line_19 $$ return _portalLDAP.getMultivaluedAttribute(companyId, ldapContext, baseDN, sb.toString(), attribute)[ FD ]
Line_2 $$ protected Attribute getUsers(long ldapServerId, long companyId, LdapContext ldapContext, Attributes attributes, UserGroup userGroup, Properties groupMappings) throws Exception -->Line_13 $$ sb.append(groupSearchFilter)[ CD ]
Line_2 $$ protected Attribute getUsers(long ldapServerId, long companyId, LdapContext ldapContext, Attributes attributes, UserGroup userGroup, Properties groupMappings) throws Exception -->Line_16 $$ sb.append("=")[ CD ]
Line_9 $$ StringBundler sb = new StringBundler(7)-->Line_14 $$ sb.append(StringPool.OPEN_PARENTHESIS)[ FD ]
Line_2 $$ protected Attribute getUsers(long ldapServerId, long companyId, LdapContext ldapContext, Attributes attributes, UserGroup userGroup, Properties groupMappings) throws Exception -->Line_9 $$ StringBundler sb = new StringBundler(7)[ CD ]
Line_2 $$ protected Attribute getUsers(long ldapServerId, long companyId, LdapContext ldapContext, Attributes attributes, UserGroup userGroup, Properties groupMappings) throws Exception -->Line_17 $$ sb.append(escapeValue(userGroup.getName()))[ FD ]
Line_2 $$ protected Attribute getUsers(long ldapServerId, long companyId, LdapContext ldapContext, Attributes attributes, UserGroup userGroup, Properties groupMappings) throws Exception -->Line_4 $$ if (attribute == null) [ CD ]
Line_11 $$ String groupSearchFilter = ldapServerConfiguration.groupSearchFilter()-->Line_13 $$ sb.append(groupSearchFilter)[ FD ]
Line_4 $$ if (attribute == null) -->Line_5 $$ return null[ CD ]
Line_9 $$ StringBundler sb = new StringBundler(7)-->Line_17 $$ sb.append(escapeValue(userGroup.getName()))[ FD ]
Line_2 $$ protected Attribute getUsers(long ldapServerId, long companyId, LdapContext ldapContext, Attributes attributes, UserGroup userGroup, Properties groupMappings) throws Exception -->Line_10 $$ sb.append("(&")[ CD ]
Line_8 $$ String baseDN = ldapServerConfiguration.baseDN()-->Line_19 $$ return _portalLDAP.getMultivaluedAttribute(companyId, ldapContext, baseDN, sb.toString(), attribute)[ FD ]
Line_11 $$ String groupSearchFilter = ldapServerConfiguration.groupSearchFilter()-->Line_12 $$ LDAPUtil.validateFilter(groupSearchFilter, "LDAPServerConfiguration.groupSearchFilter")[ FD ]
Line_2 $$ protected Attribute getUsers(long ldapServerId, long companyId, LdapContext ldapContext, Attributes attributes, UserGroup userGroup, Properties groupMappings) throws Exception -->Line_14 $$ sb.append(StringPool.OPEN_PARENTHESIS)[ CD ]
Line_9 $$ StringBundler sb = new StringBundler(7)-->Line_18 $$ sb.append("))")[ FD ]
Line_2 $$ protected Attribute getUsers(long ldapServerId, long companyId, LdapContext ldapContext, Attributes attributes, UserGroup userGroup, Properties groupMappings) throws Exception -->Line_19 $$ return _portalLDAP.getMultivaluedAttribute(companyId, ldapContext, baseDN, sb.toString(), attribute)[ FD ]
