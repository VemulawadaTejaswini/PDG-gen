Line_15 $$ String category = properties.getProperty("category")-->Line_17 $$ App app = _appLocalService.updateApp(0, remoteAppId, title, description, category, iconURL, version, null)[ FD ]
Line_2 $$ protected void doReceive(Message message) throws Exception -->Line_30 $$ _appLocalService.processMarketplaceProperties(properties)[ CD ]
Line_7 $$ Properties properties = PropertiesUtil.load(message.getString("properties"))-->Line_15 $$ String category = properties.getProperty("category")[ FD ]
Line_7 $$ Properties properties = PropertiesUtil.load(message.getString("properties"))-->Line_13 $$ String title = properties.getProperty("title")[ FD ]
Line_2 $$ protected void doReceive(Message message) throws Exception -->Line_16 $$ String iconURL = properties.getProperty("icon-url")[ CD ]
Line_17 $$ App app = _appLocalService.updateApp(0, remoteAppId, title, description, category, iconURL, version, null)-->Line_24 $$ _moduleLocalService.addModule(0, app.getAppId(), bundleSymbolicName, bundleVersion, contextName)[ FD ]
Line_2 $$ protected void doReceive(Message message) throws Exception -->Line_14 $$ String description = properties.getProperty("description")[ CD ]
Line_13 $$ String title = properties.getProperty("title")-->Line_17 $$ App app = _appLocalService.updateApp(0, remoteAppId, title, description, category, iconURL, version, null)[ FD ]
Line_14 $$ String description = properties.getProperty("description")-->Line_17 $$ App app = _appLocalService.updateApp(0, remoteAppId, title, description, category, iconURL, version, null)[ FD ]
Line_2 $$ protected void doReceive(Message message) throws Exception -->Line_8 $$ long remoteAppId = GetterUtil.getLong(properties.getProperty("remote-app-id"))[ CD ]
Line_10 $$ if ((remoteAppId <= 0) || Validator.isNull(version)) -->Line_11 $$ return[ CD ]
Line_19 $$ for (String bundle : bundles) -->Line_20 $$ String[] bundleParts = StringUtil.split(bundle, StringPool.POUND)[ FD ]
Line_16 $$ String iconURL = properties.getProperty("icon-url")-->Line_17 $$ App app = _appLocalService.updateApp(0, remoteAppId, title, description, category, iconURL, version, null)[ FD ]
Line_21 $$ String bundleSymbolicName = bundleParts[0]-->Line_24 $$ _moduleLocalService.addModule(0, app.getAppId(), bundleSymbolicName, bundleVersion, contextName)[ FD ]
Line_7 $$ Properties properties = PropertiesUtil.load(message.getString("properties"))-->Line_30 $$ _appLocalService.processMarketplaceProperties(properties)[ FD ]
Line_17 $$ App app = _appLocalService.updateApp(0, remoteAppId, title, description, category, iconURL, version, null)-->Line_28 $$ _moduleLocalService.addModule(0, app.getAppId(), StringPool.BLANK, StringPool.BLANK, contextName)[ FD ]
Line_2 $$ protected void doReceive(Message message) throws Exception -->Line_17 $$ App app = _appLocalService.updateApp(0, remoteAppId, title, description, category, iconURL, version, null)[ CD ]
Line_9 $$ String version = properties.getProperty("version")-->Line_10 $$ if ((remoteAppId <= 0) || Validator.isNull(version)) [ FD ]
Line_2 $$ protected void doReceive(Message message) throws Exception -->Line_7 $$ Properties properties = PropertiesUtil.load(message.getString("properties"))[ FD ]
Line_2 $$ protected void doReceive(Message message) throws Exception -->Line_26 $$ String[] contextNames = StringUtil.split(properties.getProperty("context-names"))[ CD ]
Line_2 $$ protected void doReceive(Message message) throws Exception -->Line_3 $$ String command = message.getString("command")[ CD ]
Line_3 $$ String command = message.getString("command")-->Line_4 $$ if (!command.equals("deploy")) [ FD ]
Line_2 $$ protected void doReceive(Message message) throws Exception -->Line_18 $$ String[] bundles = StringUtil.split(properties.getProperty("bundles"))[ CD ]
Line_23 $$ String contextName = bundleParts[2]-->Line_28 $$ _moduleLocalService.addModule(0, app.getAppId(), StringPool.BLANK, StringPool.BLANK, contextName)[ FD ]
Line_7 $$ Properties properties = PropertiesUtil.load(message.getString("properties"))-->Line_16 $$ String iconURL = properties.getProperty("icon-url")[ FD ]
Line_23 $$ String contextName = bundleParts[2]-->Line_24 $$ _moduleLocalService.addModule(0, app.getAppId(), bundleSymbolicName, bundleVersion, contextName)[ FD ]
Line_7 $$ Properties properties = PropertiesUtil.load(message.getString("properties"))-->Line_8 $$ long remoteAppId = GetterUtil.getLong(properties.getProperty("remote-app-id"))[ FD ]
Line_2 $$ protected void doReceive(Message message) throws Exception -->Line_15 $$ String category = properties.getProperty("category")[ CD ]
Line_2 $$ protected void doReceive(Message message) throws Exception -->Line_3 $$ String command = message.getString("command")[ FD ]
Line_2 $$ protected void doReceive(Message message) throws Exception -->Line_10 $$ if ((remoteAppId <= 0) || Validator.isNull(version)) [ CD ]
Line_2 $$ protected void doReceive(Message message) throws Exception -->Line_4 $$ if (!command.equals("deploy")) [ CD ]
Line_4 $$ if (!command.equals("deploy")) -->Line_5 $$ return[ CD ]
Line_7 $$ Properties properties = PropertiesUtil.load(message.getString("properties"))-->Line_26 $$ String[] contextNames = StringUtil.split(properties.getProperty("context-names"))[ FD ]
Line_2 $$ protected void doReceive(Message message) throws Exception -->Line_7 $$ Properties properties = PropertiesUtil.load(message.getString("properties"))[ CD ]
Line_2 $$ protected void doReceive(Message message) throws Exception -->Line_9 $$ String version = properties.getProperty("version")[ CD ]
Line_22 $$ String bundleVersion = bundleParts[1]-->Line_24 $$ _moduleLocalService.addModule(0, app.getAppId(), bundleSymbolicName, bundleVersion, contextName)[ FD ]
Line_2 $$ protected void doReceive(Message message) throws Exception -->Line_13 $$ String title = properties.getProperty("title")[ CD ]
Line_7 $$ Properties properties = PropertiesUtil.load(message.getString("properties"))-->Line_14 $$ String description = properties.getProperty("description")[ FD ]
Line_8 $$ long remoteAppId = GetterUtil.getLong(properties.getProperty("remote-app-id"))-->Line_17 $$ App app = _appLocalService.updateApp(0, remoteAppId, title, description, category, iconURL, version, null)[ FD ]
Line_9 $$ String version = properties.getProperty("version")-->Line_17 $$ App app = _appLocalService.updateApp(0, remoteAppId, title, description, category, iconURL, version, null)[ FD ]
Line_7 $$ Properties properties = PropertiesUtil.load(message.getString("properties"))-->Line_18 $$ String[] bundles = StringUtil.split(properties.getProperty("bundles"))[ FD ]
Line_7 $$ Properties properties = PropertiesUtil.load(message.getString("properties"))-->Line_9 $$ String version = properties.getProperty("version")[ FD ]
