Line_3 $$ Properties commitlog_commands = new Properties()-->Line_24 $$ TimeUnit precision = TimeUnit.valueOf(commitlog_commands.getProperty("precision", "MICROSECONDS"))[ FD ]
Line_5 $$ if (stream == null) -->Line_31 $$ return new CommitLogArchiver(archiveCommand, restoreCommand, restoreDirectories, restorePointInTime, precision)[ CD ]
Line_5 $$ if (stream == null) -->Line_24 $$ TimeUnit precision = TimeUnit.valueOf(commitlog_commands.getProperty("precision", "MICROSECONDS"))[ CD ]
Line_3 $$ Properties commitlog_commands = new Properties()-->Line_12 $$ String restoreDirectories = commitlog_commands.getProperty("restore_directories")[ FD ]
Line_5 $$ if (stream == null) -->Line_25 $$ long restorePointInTime[ CD ]
Line_5 $$ if (stream == null) -->Line_6 $$ logger.trace("No commitlog_archiving properties found; archive + pitr will be disabled")[ CD ]
Line_3 $$ Properties commitlog_commands = new Properties()-->Line_11 $$ String restoreCommand = commitlog_commands.getProperty("restore_command")[ FD ]
Line_5 $$ if (stream == null) -->Line_12 $$ String restoreDirectories = commitlog_commands.getProperty("restore_directories")[ CD ]
Line_5 $$ if (stream == null) -->Line_7 $$ return disabled()[ CD ]
Line_12 $$ String restoreDirectories = commitlog_commands.getProperty("restore_directories")-->Line_13 $$ if (restoreDirectories != null && !restoreDirectories.isEmpty()) [ FD ]
Line_23 $$ String targetTime = commitlog_commands.getProperty("restore_point_in_time")-->Line_27 $$ restorePointInTime = Strings.isNullOrEmpty(targetTime) ? Long.MAX_VALUE : format.parse(targetTime).getTime()[ FD ]
Line_3 $$ Properties commitlog_commands = new Properties()-->Line_10 $$ String archiveCommand = commitlog_commands.getProperty("archive_command")[ FD ]
Line_5 $$ if (stream == null) -->Line_13 $$ if (restoreDirectories != null && !restoreDirectories.isEmpty()) [ CD ]
Line_25 $$ long restorePointInTime-->Line_27 $$ restorePointInTime = Strings.isNullOrEmpty(targetTime) ? Long.MAX_VALUE : format.parse(targetTime).getTime()[ FD ]
Line_4 $$ try (InputStream stream = CommitLogArchiver.class.getClassLoader().getResourceAsStream("commitlog_archiving.properties")) -->Line_5 $$ if (stream == null) [ FD ]
Line_3 $$ Properties commitlog_commands = new Properties()-->Line_9 $$ commitlog_commands.load(stream)[ FD ]
Line_5 $$ if (stream == null) -->Line_11 $$ String restoreCommand = commitlog_commands.getProperty("restore_command")[ CD ]
Line_3 $$ Properties commitlog_commands = new Properties()-->Line_23 $$ String targetTime = commitlog_commands.getProperty("restore_point_in_time")[ FD ]
Line_15 $$ File directory = new File(dir)-->Line_17 $$ if (!directory.mkdir()) [ FD ]
Line_5 $$ if (stream == null) -->Line_10 $$ String archiveCommand = commitlog_commands.getProperty("archive_command")[ CD ]
Line_5 $$ if (stream == null) -->Line_9 $$ commitlog_commands.load(stream)[ CD ]
Line_4 $$ try (InputStream stream = CommitLogArchiver.class.getClassLoader().getResourceAsStream("commitlog_archiving.properties")) -->Line_9 $$ commitlog_commands.load(stream)[ FD ]
Line_5 $$ if (stream == null) -->Line_23 $$ String targetTime = commitlog_commands.getProperty("restore_point_in_time")[ CD ]
Line_2 $$ public static CommitLogArchiver construct() -->Line_3 $$ Properties commitlog_commands = new Properties()[ CD ]
Line_15 $$ File directory = new File(dir)-->Line_16 $$ if (!directory.exists()) [ FD ]
Line_12 $$ String restoreDirectories = commitlog_commands.getProperty("restore_directories")-->Line_14 $$ for (String dir : restoreDirectories.split(DELIMITER)) [ FD ]
Line_16 $$ if (!directory.exists()) -->Line_17 $$ if (!directory.mkdir()) [ CD ]
