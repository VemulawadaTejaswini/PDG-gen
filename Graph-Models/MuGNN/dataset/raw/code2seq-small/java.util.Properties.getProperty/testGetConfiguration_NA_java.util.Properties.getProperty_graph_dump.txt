Line_9 $$ Properties p = filter.getConfiguration("random", config)-->Line_10 $$ Assert.assertEquals("xyz/thehost@REALM", p.getProperty("kerberos.principal"))[ FD ]
Line_5 $$ Map<String, String> m = new HashMap<String, String>()-->Line_7 $$ m.put(DFSConfigKeys.DFS_WEB_AUTHENTICATION_KERBEROS_KEYTAB_KEY, "thekeytab")[ FD ]
Line_5 $$ Map<String, String> m = new HashMap<String, String>()-->Line_6 $$ m.put(DFSConfigKeys.DFS_WEB_AUTHENTICATION_KERBEROS_PRINCIPAL_KEY, "xyz/thehost@REALM")[ FD ]
Line_4 $$ AuthFilter filter = new AuthFilter()-->Line_9 $$ Properties p = filter.getConfiguration("random", config)[ FD ]
Line_9 $$ Properties p = filter.getConfiguration("random", config)-->Line_11 $$ Assert.assertEquals("thekeytab", p.getProperty("kerberos.keytab"))[ FD ]
Line_8 $$ FilterConfig config = new DummyFilterConfig(m)-->Line_9 $$ Properties p = filter.getConfiguration("random", config)[ FD ]
Line_9 $$ Properties p = filter.getConfiguration("random", config)-->Line_12 $$ Assert.assertEquals("true", p.getProperty(PseudoAuthenticationHandler.ANONYMOUS_ALLOWED))[ FD ]
