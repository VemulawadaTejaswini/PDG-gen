Line_14 $$ StringBundler sb = new StringBundler(Validator.isNotNull(userSearchFilter) ? 9 : 5)-->Line_33 $$ sb.append(login)[ FD ]
Line_5 $$ NamingEnumeration<SearchResult> enu = null-->Line_40 $$ enu = ldapContext.search(baseDN, sb.toString(), searchControls)[ FD ]
Line_4 $$ LdapContext ldapContext = getContext(ldapServerId, companyId)-->Line_40 $$ enu = ldapContext.search(baseDN, sb.toString(), searchControls)[ FD ]
Line_5 $$ NamingEnumeration<SearchResult> enu = null-->Line_52 $$ if (enu != null) [ FD ]
Line_20 $$ String loginMapping = null-->Line_31 $$ sb.append(loginMapping)[ FD ]
Line_14 $$ StringBundler sb = new StringBundler(Validator.isNotNull(userSearchFilter) ? 9 : 5)-->Line_17 $$ sb.append(StringPool.AMPERSAND)[ FD ]
Line_5 $$ NamingEnumeration<SearchResult> enu = null-->Line_42 $$ return enu.nextElement()[ FD ]
Line_4 $$ LdapContext ldapContext = getContext(ldapServerId, companyId)-->Line_7 $$ if (ldapContext == null) [ FD ]
Line_12 $$ String userSearchFilter = ldapServerConfiguration.userSearchFilter()-->Line_35 $$ if (Validator.isNotNull(userSearchFilter)) [ FD ]
Line_24 $$ if (authType.equals(CompanyConstants.AUTH_TYPE_SN) && !PrefsPropsUtil.getBoolean(companyId, PropsKeys.USERS_SCREEN_NAME_ALWAYS_AUTOGENERATE)) -->Line_26 $$ login = screenName[ CD ]
Line_52 $$ if (enu != null) -->Line_53 $$ enu.close()[ CD ]
Line_23 $$ String authType = PrefsPropsUtil.getString(companyId, PropsKeys.COMPANY_SECURITY_AUTH_TYPE, _companySecurityAuthType)-->Line_24 $$ if (authType.equals(CompanyConstants.AUTH_TYPE_SN) && !PrefsPropsUtil.getBoolean(companyId, PropsKeys.USERS_SCREEN_NAME_ALWAYS_AUTOGENERATE)) [ FD ]
Line_12 $$ String userSearchFilter = ldapServerConfiguration.userSearchFilter()-->Line_36 $$ sb.append(userSearchFilter)[ FD ]
Line_12 $$ String userSearchFilter = ldapServerConfiguration.userSearchFilter()-->Line_14 $$ StringBundler sb = new StringBundler(Validator.isNotNull(userSearchFilter) ? 9 : 5)[ FD ]
Line_21 $$ String login = null-->Line_33 $$ sb.append(login)[ FD ]
Line_39 $$ SearchControls searchControls = new SearchControls(SearchControls.SUBTREE_SCOPE, 1, 0, null, false, false)-->Line_40 $$ enu = ldapContext.search(baseDN, sb.toString(), searchControls)[ FD ]
Line_26 $$ login = screenName-->Line_33 $$ sb.append(login)[ FD ]
Line_22 $$ Properties userMappings = _ldapSettings.getUserMappings(ldapServerId, companyId)-->Line_25 $$ loginMapping = userMappings.getProperty("screenName")[ FD ]
Line_44 $$ if (checkOriginalEmail) -->Line_46 $$ if (Validator.isNotNull(originalEmailAddress) && !emailAddress.equals(originalEmailAddress)) [ CD ]
Line_24 $$ if (authType.equals(CompanyConstants.AUTH_TYPE_SN) && !PrefsPropsUtil.getBoolean(companyId, PropsKeys.USERS_SCREEN_NAME_ALWAYS_AUTOGENERATE)) -->Line_29 $$ login = emailAddress[ CD ]
Line_12 $$ String userSearchFilter = ldapServerConfiguration.userSearchFilter()-->Line_13 $$ LDAPUtil.validateFilter(userSearchFilter, "LDAPServerConfiguration.userSearchFilter")[ FD ]
Line_35 $$ if (Validator.isNotNull(userSearchFilter)) -->Line_37 $$ sb.append(StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_14 $$ StringBundler sb = new StringBundler(Validator.isNotNull(userSearchFilter) ? 9 : 5)-->Line_36 $$ sb.append(userSearchFilter)[ FD ]
Line_5 $$ NamingEnumeration<SearchResult> enu = null-->Line_41 $$ if (enu.hasMoreElements()) [ FD ]
Line_14 $$ StringBundler sb = new StringBundler(Validator.isNotNull(userSearchFilter) ? 9 : 5)-->Line_16 $$ sb.append(StringPool.OPEN_PARENTHESIS)[ FD ]
Line_7 $$ if (ldapContext == null) -->Line_8 $$ return null[ CD ]
Line_10 $$ LDAPServerConfiguration ldapServerConfiguration = _ldapServerConfigurationProvider.getConfiguration(companyId, ldapServerId)-->Line_11 $$ String baseDN = ldapServerConfiguration.baseDN()[ FD ]
Line_24 $$ if (authType.equals(CompanyConstants.AUTH_TYPE_SN) && !PrefsPropsUtil.getBoolean(companyId, PropsKeys.USERS_SCREEN_NAME_ALWAYS_AUTOGENERATE)) -->Line_25 $$ loginMapping = userMappings.getProperty("screenName")[ CD ]
Line_5 $$ NamingEnumeration<SearchResult> enu = null-->Line_53 $$ enu.close()[ FD ]
Line_40 $$ enu = ldapContext.search(baseDN, sb.toString(), searchControls)-->Line_53 $$ enu.close()[ FD ]
Line_25 $$ loginMapping = userMappings.getProperty("screenName")-->Line_31 $$ sb.append(loginMapping)[ FD ]
Line_14 $$ StringBundler sb = new StringBundler(Validator.isNotNull(userSearchFilter) ? 9 : 5)-->Line_19 $$ sb.append(StringPool.OPEN_PARENTHESIS)[ FD ]
Line_10 $$ LDAPServerConfiguration ldapServerConfiguration = _ldapServerConfigurationProvider.getConfiguration(companyId, ldapServerId)-->Line_12 $$ String userSearchFilter = ldapServerConfiguration.userSearchFilter()[ FD ]
Line_22 $$ Properties userMappings = _ldapSettings.getUserMappings(ldapServerId, companyId)-->Line_28 $$ loginMapping = userMappings.getProperty("emailAddress")[ FD ]
Line_45 $$ String originalEmailAddress = UserImportTransactionThreadLocal.getOriginalEmailAddress()-->Line_47 $$ return getUser(ldapServerId, companyId, screenName, originalEmailAddress, false)[ FD ]
Line_4 $$ LdapContext ldapContext = getContext(ldapServerId, companyId)-->Line_55 $$ if (ldapContext != null) [ FD ]
Line_41 $$ if (enu.hasMoreElements()) -->Line_42 $$ return enu.nextElement()[ CD ]
Line_11 $$ String baseDN = ldapServerConfiguration.baseDN()-->Line_40 $$ enu = ldapContext.search(baseDN, sb.toString(), searchControls)[ FD ]
Line_20 $$ String loginMapping = null-->Line_25 $$ loginMapping = userMappings.getProperty("screenName")[ FD ]
Line_24 $$ if (authType.equals(CompanyConstants.AUTH_TYPE_SN) && !PrefsPropsUtil.getBoolean(companyId, PropsKeys.USERS_SCREEN_NAME_ALWAYS_AUTOGENERATE)) -->Line_28 $$ loginMapping = userMappings.getProperty("emailAddress")[ CD ]
Line_28 $$ loginMapping = userMappings.getProperty("emailAddress")-->Line_31 $$ sb.append(loginMapping)[ FD ]
Line_29 $$ login = emailAddress-->Line_33 $$ sb.append(login)[ FD ]
Line_14 $$ StringBundler sb = new StringBundler(Validator.isNotNull(userSearchFilter) ? 9 : 5)-->Line_40 $$ enu = ldapContext.search(baseDN, sb.toString(), searchControls)[ FD ]
Line_15 $$ if (Validator.isNotNull(userSearchFilter)) -->Line_17 $$ sb.append(StringPool.AMPERSAND)[ CD ]
Line_15 $$ if (Validator.isNotNull(userSearchFilter)) -->Line_16 $$ sb.append(StringPool.OPEN_PARENTHESIS)[ CD ]
Line_26 $$ login = screenName-->Line_29 $$ login = emailAddress[ FD ]
Line_40 $$ enu = ldapContext.search(baseDN, sb.toString(), searchControls)-->Line_52 $$ if (enu != null) [ FD ]
Line_20 $$ String loginMapping = null-->Line_28 $$ loginMapping = userMappings.getProperty("emailAddress")[ FD ]
Line_14 $$ StringBundler sb = new StringBundler(Validator.isNotNull(userSearchFilter) ? 9 : 5)-->Line_31 $$ sb.append(loginMapping)[ FD ]
Line_46 $$ if (Validator.isNotNull(originalEmailAddress) && !emailAddress.equals(originalEmailAddress)) -->Line_47 $$ return getUser(ldapServerId, companyId, screenName, originalEmailAddress, false)[ CD ]
Line_4 $$ LdapContext ldapContext = getContext(ldapServerId, companyId)-->Line_56 $$ ldapContext.close()[ FD ]
Line_14 $$ StringBundler sb = new StringBundler(Validator.isNotNull(userSearchFilter) ? 9 : 5)-->Line_32 $$ sb.append(StringPool.EQUAL)[ FD ]
Line_21 $$ String login = null-->Line_29 $$ login = emailAddress[ FD ]
Line_45 $$ String originalEmailAddress = UserImportTransactionThreadLocal.getOriginalEmailAddress()-->Line_46 $$ if (Validator.isNotNull(originalEmailAddress) && !emailAddress.equals(originalEmailAddress)) [ FD ]
Line_12 $$ String userSearchFilter = ldapServerConfiguration.userSearchFilter()-->Line_15 $$ if (Validator.isNotNull(userSearchFilter)) [ FD ]
Line_25 $$ loginMapping = userMappings.getProperty("screenName")-->Line_28 $$ loginMapping = userMappings.getProperty("emailAddress")[ FD ]
Line_35 $$ if (Validator.isNotNull(userSearchFilter)) -->Line_36 $$ sb.append(userSearchFilter)[ CD ]
Line_40 $$ enu = ldapContext.search(baseDN, sb.toString(), searchControls)-->Line_41 $$ if (enu.hasMoreElements()) [ FD ]
Line_44 $$ if (checkOriginalEmail) -->Line_45 $$ String originalEmailAddress = UserImportTransactionThreadLocal.getOriginalEmailAddress()[ CD ]
Line_14 $$ StringBundler sb = new StringBundler(Validator.isNotNull(userSearchFilter) ? 9 : 5)-->Line_34 $$ sb.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_40 $$ enu = ldapContext.search(baseDN, sb.toString(), searchControls)-->Line_42 $$ return enu.nextElement()[ FD ]
Line_14 $$ StringBundler sb = new StringBundler(Validator.isNotNull(userSearchFilter) ? 9 : 5)-->Line_37 $$ sb.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_21 $$ String login = null-->Line_26 $$ login = screenName[ FD ]
Line_55 $$ if (ldapContext != null) -->Line_56 $$ ldapContext.close()[ CD ]
