Line_6 $$ if (rawData.contains(":")) -->Line_7 $$ String[] parameters = rawData.split(":")[ CD ]
Line_4 $$ String rawData = myProperties.getProperty(name)-->Line_5 $$ if (rawData != null && !rawData.trim().isEmpty()) [ FD ]
Line_5 $$ if (rawData != null && !rawData.trim().isEmpty()) -->Line_6 $$ if (rawData.contains(":")) [ CD ]
Line_6 $$ if (rawData.contains(":")) -->Line_8 $$ if (parameters.length == 2) [ CD ]
Line_8 $$ if (parameters.length == 2) -->Line_10 $$ if (parameters.length == 3) [ CD ]
Line_10 $$ if (parameters.length == 3) -->Line_11 $$ boolean indentOptions = "indentOptions".equalsIgnoreCase(parameters[1].trim())[ CD ]
Line_4 $$ String rawData = myProperties.getProperty(name)-->Line_6 $$ if (rawData.contains(":")) [ FD ]
Line_8 $$ if (parameters.length == 2) -->Line_9 $$ return new ImportDescriptor(parameters[0].trim(), parameters[1].trim())[ CD ]
Line_4 $$ String rawData = myProperties.getProperty(name)-->Line_15 $$ return new ImportDescriptor(rawData.trim())[ FD ]
Line_4 $$ String rawData = myProperties.getProperty(name)-->Line_7 $$ String[] parameters = rawData.split(":")[ FD ]
Line_10 $$ if (parameters.length == 3) -->Line_12 $$ return new ImportDescriptor(parameters[0].trim(), parameters[2], indentOptions)[ CD ]
Line_6 $$ if (rawData.contains(":")) -->Line_15 $$ return new ImportDescriptor(rawData.trim())[ CD ]
