Line_3 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_6 $$ bf.setBeanExpressionResolver(beanExpressionResolver)[ FD ]
Line_2 $$ public void testExpressionInStringArray() -->Line_5 $$ when(beanExpressionResolver.evaluate(eq("#[ CD ]
Line_7 $$ RootBeanDefinition rbd = new RootBeanDefinition(PropertiesFactoryBean.class)-->Line_11 $$ bf.registerBeanDefinition("myProperties", rbd)[ FD ]
Line_2 $$ public void testExpressionInStringArray() -->Line_4 $$ BeanExpressionResolver beanExpressionResolver = mock(BeanExpressionResolver.class)[ CD ]
Line_8 $$ MutablePropertyValues pvs = new MutablePropertyValues()-->Line_9 $$ pvs.add("locations", new String[] [ FD ]
Line_3 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_11 $$ bf.registerBeanDefinition("myProperties", rbd)[ FD ]
Line_2 $$ public void testExpressionInStringArray() -->Line_11 $$ bf.registerBeanDefinition("myProperties", rbd)[ CD ]
Line_12 $$ Properties properties = (Properties) bf.getBean("myProperties")-->Line_13 $$ assertEquals("bar", properties.getProperty("foo"))[ FD ]
Line_4 $$ BeanExpressionResolver beanExpressionResolver = mock(BeanExpressionResolver.class)-->Line_6 $$ bf.setBeanExpressionResolver(beanExpressionResolver)[ FD ]
Line_2 $$ public void testExpressionInStringArray() -->Line_12 $$ Properties properties = (Properties) bf.getBean("myProperties")[ CD ]
Line_2 $$ public void testExpressionInStringArray() -->Line_7 $$ RootBeanDefinition rbd = new RootBeanDefinition(PropertiesFactoryBean.class)[ CD ]
Line_8 $$ MutablePropertyValues pvs = new MutablePropertyValues()-->Line_10 $$ rbd.setPropertyValues(pvs)[ FD ]
Line_3 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_12 $$ Properties properties = (Properties) bf.getBean("myProperties")[ FD ]
Line_2 $$ public void testExpressionInStringArray() -->Line_6 $$ bf.setBeanExpressionResolver(beanExpressionResolver)[ CD ]
Line_7 $$ RootBeanDefinition rbd = new RootBeanDefinition(PropertiesFactoryBean.class)-->Line_10 $$ rbd.setPropertyValues(pvs)[ FD ]
Line_2 $$ public void testExpressionInStringArray() -->Line_8 $$ MutablePropertyValues pvs = new MutablePropertyValues()[ CD ]
Line_2 $$ public void testExpressionInStringArray() -->Line_3 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()[ CD ]
Line_2 $$ public void testExpressionInStringArray() -->Line_9 $$ pvs.add("locations", new String[] [ CD ]
Line_2 $$ public void testExpressionInStringArray() -->Line_13 $$ assertEquals("bar", properties.getProperty("foo"))[ CD ]
Line_4 $$ BeanExpressionResolver beanExpressionResolver = mock(BeanExpressionResolver.class)-->Line_5 $$ when(beanExpressionResolver.evaluate(eq("#[ FD ]
Line_2 $$ public void testExpressionInStringArray() -->Line_10 $$ rbd.setPropertyValues(pvs)[ CD ]
