Line_9 $$ MutablePropertyValues pvs = new MutablePropertyValues()-->Line_10 $$ pvs.add("locations", new String[] [ FD ]
Line_4 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_7 $$ bf.setBeanExpressionResolver(beanExpressionResolver)[ FD ]
Line_5 $$ BeanExpressionResolver beanExpressionResolver = mock(BeanExpressionResolver.class)-->Line_6 $$ when(beanExpressionResolver.evaluate(eq("#[ FD ]
Line_8 $$ RootBeanDefinition rbd = new RootBeanDefinition(PropertiesFactoryBean.class)-->Line_11 $$ rbd.setPropertyValues(pvs)[ FD ]
Line_8 $$ RootBeanDefinition rbd = new RootBeanDefinition(PropertiesFactoryBean.class)-->Line_12 $$ bf.registerBeanDefinition("myProperties", rbd)[ FD ]
Line_4 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_13 $$ Properties properties = (Properties) bf.getBean("myProperties")[ FD ]
Line_4 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_12 $$ bf.registerBeanDefinition("myProperties", rbd)[ FD ]
Line_9 $$ MutablePropertyValues pvs = new MutablePropertyValues()-->Line_11 $$ rbd.setPropertyValues(pvs)[ FD ]
Line_13 $$ Properties properties = (Properties) bf.getBean("myProperties")-->Line_14 $$ assertEquals("bar", properties.getProperty("foo"))[ FD ]
Line_5 $$ BeanExpressionResolver beanExpressionResolver = mock(BeanExpressionResolver.class)-->Line_7 $$ bf.setBeanExpressionResolver(beanExpressionResolver)[ FD ]
