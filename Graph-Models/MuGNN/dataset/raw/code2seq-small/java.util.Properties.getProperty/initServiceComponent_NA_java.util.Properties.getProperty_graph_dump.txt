Line_2 $$ protected void initServiceComponent(ServiceComponentConfiguration serviceComponentConfiguration, ClassLoader classLoader) -->Line_18 $$ long buildDate = GetterUtil.getLong(properties.getProperty("build.date"))[ CD ]
Line_2 $$ protected void initServiceComponent(ServiceComponentConfiguration serviceComponentConfiguration, ClassLoader classLoader) -->Line_5 $$ configuration = ConfigurationFactoryUtil.getConfiguration(classLoader, "service")[ FD ]
Line_17 $$ long buildNumber = GetterUtil.getLong(properties.getProperty("build.number"))-->Line_30 $$ _serviceComponentLocalService.initServiceComponent(serviceComponentConfiguration, classLoader, buildNamespace, buildNumber, buildDate, buildAutoUpgrade)[ FD ]
Line_2 $$ protected void initServiceComponent(ServiceComponentConfiguration serviceComponentConfiguration, ClassLoader classLoader) -->Line_3 $$ Configuration configuration = null[ CD ]
Line_7 $$ if (_log.isDebugEnabled()) -->Line_8 $$ _log.debug("Unable to read service.properties")[ CD ]
Line_2 $$ protected void initServiceComponent(ServiceComponentConfiguration serviceComponentConfiguration, ClassLoader classLoader) -->Line_13 $$ if (properties.isEmpty()) [ CD ]
Line_2 $$ protected void initServiceComponent(ServiceComponentConfiguration serviceComponentConfiguration, ClassLoader classLoader) -->Line_17 $$ long buildNumber = GetterUtil.getLong(properties.getProperty("build.number"))[ CD ]
Line_26 $$ if (Validator.isNull(buildNamespace)) -->Line_27 $$ return[ CD ]
Line_3 $$ Configuration configuration = null-->Line_5 $$ configuration = ConfigurationFactoryUtil.getConfiguration(classLoader, "service")[ FD ]
Line_12 $$ Properties properties = configuration.getProperties()-->Line_13 $$ if (properties.isEmpty()) [ FD ]
Line_5 $$ configuration = ConfigurationFactoryUtil.getConfiguration(classLoader, "service")-->Line_12 $$ Properties properties = configuration.getProperties()[ FD ]
Line_2 $$ protected void initServiceComponent(ServiceComponentConfiguration serviceComponentConfiguration, ClassLoader classLoader) -->Line_19 $$ boolean buildAutoUpgrade = GetterUtil.getBoolean(properties.getProperty("build.auto.upgrade"), true)[ CD ]
Line_13 $$ if (properties.isEmpty()) -->Line_14 $$ return[ CD ]
Line_12 $$ Properties properties = configuration.getProperties()-->Line_17 $$ long buildNumber = GetterUtil.getLong(properties.getProperty("build.number"))[ FD ]
Line_12 $$ Properties properties = configuration.getProperties()-->Line_19 $$ boolean buildAutoUpgrade = GetterUtil.getBoolean(properties.getProperty("build.auto.upgrade"), true)[ FD ]
Line_20 $$ if (_log.isDebugEnabled()) -->Line_22 $$ _log.debug("Build number " + buildNumber)[ CD ]
Line_16 $$ String buildNamespace = GetterUtil.getString(properties.getProperty("build.namespace"))-->Line_30 $$ _serviceComponentLocalService.initServiceComponent(serviceComponentConfiguration, classLoader, buildNamespace, buildNumber, buildDate, buildAutoUpgrade)[ FD ]
Line_20 $$ if (_log.isDebugEnabled()) -->Line_24 $$ _log.debug("Build auto upgrade " + buildAutoUpgrade)[ CD ]
Line_18 $$ long buildDate = GetterUtil.getLong(properties.getProperty("build.date"))-->Line_30 $$ _serviceComponentLocalService.initServiceComponent(serviceComponentConfiguration, classLoader, buildNamespace, buildNumber, buildDate, buildAutoUpgrade)[ FD ]
Line_2 $$ protected void initServiceComponent(ServiceComponentConfiguration serviceComponentConfiguration, ClassLoader classLoader) -->Line_26 $$ if (Validator.isNull(buildNamespace)) [ CD ]
Line_12 $$ Properties properties = configuration.getProperties()-->Line_16 $$ String buildNamespace = GetterUtil.getString(properties.getProperty("build.namespace"))[ FD ]
Line_2 $$ protected void initServiceComponent(ServiceComponentConfiguration serviceComponentConfiguration, ClassLoader classLoader) -->Line_12 $$ Properties properties = configuration.getProperties()[ CD ]
Line_2 $$ protected void initServiceComponent(ServiceComponentConfiguration serviceComponentConfiguration, ClassLoader classLoader) -->Line_30 $$ _serviceComponentLocalService.initServiceComponent(serviceComponentConfiguration, classLoader, buildNamespace, buildNumber, buildDate, buildAutoUpgrade)[ FD ]
Line_19 $$ boolean buildAutoUpgrade = GetterUtil.getBoolean(properties.getProperty("build.auto.upgrade"), true)-->Line_30 $$ _serviceComponentLocalService.initServiceComponent(serviceComponentConfiguration, classLoader, buildNamespace, buildNumber, buildDate, buildAutoUpgrade)[ FD ]
Line_20 $$ if (_log.isDebugEnabled()) -->Line_21 $$ _log.debug("Build namespace " + buildNamespace)[ CD ]
Line_20 $$ if (_log.isDebugEnabled()) -->Line_23 $$ _log.debug("Build date " + buildDate)[ CD ]
Line_2 $$ protected void initServiceComponent(ServiceComponentConfiguration serviceComponentConfiguration, ClassLoader classLoader) -->Line_20 $$ if (_log.isDebugEnabled()) [ CD ]
Line_16 $$ String buildNamespace = GetterUtil.getString(properties.getProperty("build.namespace"))-->Line_26 $$ if (Validator.isNull(buildNamespace)) [ FD ]
Line_12 $$ Properties properties = configuration.getProperties()-->Line_18 $$ long buildDate = GetterUtil.getLong(properties.getProperty("build.date"))[ FD ]
Line_3 $$ Configuration configuration = null-->Line_12 $$ Properties properties = configuration.getProperties()[ FD ]
Line_2 $$ protected void initServiceComponent(ServiceComponentConfiguration serviceComponentConfiguration, ClassLoader classLoader) -->Line_16 $$ String buildNamespace = GetterUtil.getString(properties.getProperty("build.namespace"))[ CD ]
