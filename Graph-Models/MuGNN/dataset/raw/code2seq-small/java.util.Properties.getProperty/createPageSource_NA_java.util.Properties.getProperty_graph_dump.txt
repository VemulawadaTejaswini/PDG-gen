Line_31 $$ recordReader = new RCFile.Reader(fileSystem, path, configuration)-->Line_39 $$ recordReader.close()[ FD ]
Line_24 $$ if (name.startsWith("serialization.")) -->Line_25 $$ configuration.set(name, schema.getProperty(name))[ CD ]
Line_10 $$ if (deserializerClassName.equals(LazyBinaryColumnarSerDe.class.getName())) -->Line_11 $$ blockLoader = new RcBinaryBlockLoader()[ CD ]
Line_11 $$ blockLoader = new RcBinaryBlockLoader()-->Line_13 $$ blockLoader = new RcTextBlockLoader(hiveStorageTimeZone)[ FD ]
Line_28 $$ RCFile.Reader recordReader-->Line_31 $$ recordReader = new RCFile.Reader(fileSystem, path, configuration)[ FD ]
Line_28 $$ RCFile.Reader recordReader-->Line_39 $$ recordReader.close()[ FD ]
Line_9 $$ RcFileBlockLoader blockLoader-->Line_11 $$ blockLoader = new RcBinaryBlockLoader()[ FD ]
Line_12 $$ if (deserializerClassName.equals(ColumnarSerDe.class.getName())) -->Line_13 $$ blockLoader = new RcTextBlockLoader(hiveStorageTimeZone)[ CD ]
Line_9 $$ RcFileBlockLoader blockLoader-->Line_13 $$ blockLoader = new RcTextBlockLoader(hiveStorageTimeZone)[ FD ]
Line_8 $$ String deserializerClassName = getDeserializerClassName(schema)-->Line_12 $$ if (deserializerClassName.equals(ColumnarSerDe.class.getName())) [ FD ]
Line_12 $$ if (deserializerClassName.equals(ColumnarSerDe.class.getName())) -->Line_15 $$ return Optional.empty()[ CD ]
Line_10 $$ if (deserializerClassName.equals(LazyBinaryColumnarSerDe.class.getName())) -->Line_12 $$ if (deserializerClassName.equals(ColumnarSerDe.class.getName())) [ CD ]
Line_8 $$ String deserializerClassName = getDeserializerClassName(schema)-->Line_10 $$ if (deserializerClassName.equals(LazyBinaryColumnarSerDe.class.getName())) [ FD ]
