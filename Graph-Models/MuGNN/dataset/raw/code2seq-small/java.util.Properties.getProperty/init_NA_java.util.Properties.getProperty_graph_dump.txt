Line_25 $$ authHandlerClassName = KerberosAuthenticationHandler.class.getName()-->Line_30 $$ Class<?> klass = Thread.currentThread().getContextClassLoader().loadClass(authHandlerClassName)[ FD ]
Line_43 $$ if (secretProvider == null) -->Line_44 $$ String signerSecretProviderClassName = config.getProperty(configPrefix + SIGNER_SECRET_PROVIDER_CLASS, null)[ CD ]
Line_17 $$ String authHandlerName = config.getProperty(AUTH_TYPE, null)-->Line_27 $$ authHandlerClassName = authHandlerName[ FD ]
Line_18 $$ String authHandlerClassName-->Line_23 $$ authHandlerClassName = PseudoAuthenticationHandler.class.getName()[ FD ]
Line_15 $$ configPrefix = (configPrefix != null) ? configPrefix + "." : ""-->Line_16 $$ config = getConfiguration(configPrefix, filterConfig)[ FD ]
Line_22 $$ if (authHandlerName.toLowerCase(Locale.ENGLISH).equals(PseudoAuthenticationHandler.TYPE)) -->Line_23 $$ authHandlerClassName = PseudoAuthenticationHandler.class.getName()[ CD ]
Line_18 $$ String authHandlerClassName-->Line_30 $$ Class<?> klass = Thread.currentThread().getContextClassLoader().loadClass(authHandlerClassName)[ FD ]
Line_22 $$ if (authHandlerName.toLowerCase(Locale.ENGLISH).equals(PseudoAuthenticationHandler.TYPE)) -->Line_24 $$ if (authHandlerName.toLowerCase(Locale.ENGLISH).equals(KerberosAuthenticationHandler.TYPE)) [ CD ]
Line_17 $$ String authHandlerName = config.getProperty(AUTH_TYPE, null)-->Line_24 $$ if (authHandlerName.toLowerCase(Locale.ENGLISH).equals(KerberosAuthenticationHandler.TYPE)) [ FD ]
Line_25 $$ authHandlerClassName = KerberosAuthenticationHandler.class.getName()-->Line_27 $$ authHandlerClassName = authHandlerName[ FD ]
Line_14 $$ String configPrefix = filterConfig.getInitParameter(CONFIG_PREFIX)-->Line_15 $$ configPrefix = (configPrefix != null) ? configPrefix + "." : ""[ FD ]
Line_27 $$ authHandlerClassName = authHandlerName-->Line_30 $$ Class<?> klass = Thread.currentThread().getContextClassLoader().loadClass(authHandlerClassName)[ FD ]
Line_43 $$ if (secretProvider == null) -->Line_45 $$ if (signerSecretProviderClassName == null) [ CD ]
Line_44 $$ String signerSecretProviderClassName = config.getProperty(configPrefix + SIGNER_SECRET_PROVIDER_CLASS, null)-->Line_45 $$ if (signerSecretProviderClassName == null) [ FD ]
Line_23 $$ authHandlerClassName = PseudoAuthenticationHandler.class.getName()-->Line_27 $$ authHandlerClassName = authHandlerName[ FD ]
Line_14 $$ String configPrefix = filterConfig.getInitParameter(CONFIG_PREFIX)-->Line_16 $$ config = getConfiguration(configPrefix, filterConfig)[ FD ]
Line_24 $$ if (authHandlerName.toLowerCase(Locale.ENGLISH).equals(KerberosAuthenticationHandler.TYPE)) -->Line_27 $$ authHandlerClassName = authHandlerName[ CD ]
Line_18 $$ String authHandlerClassName-->Line_25 $$ authHandlerClassName = KerberosAuthenticationHandler.class.getName()[ FD ]
Line_18 $$ String authHandlerClassName-->Line_27 $$ authHandlerClassName = authHandlerName[ FD ]
Line_23 $$ authHandlerClassName = PseudoAuthenticationHandler.class.getName()-->Line_25 $$ authHandlerClassName = KerberosAuthenticationHandler.class.getName()[ FD ]
Line_45 $$ if (signerSecretProviderClassName == null) -->Line_46 $$ String signatureSecret = config.getProperty(configPrefix + SIGNATURE_SECRET, null)[ CD ]
Line_45 $$ if (signerSecretProviderClassName == null) -->Line_47 $$ if (signatureSecret != null) [ CD ]
Line_24 $$ if (authHandlerName.toLowerCase(Locale.ENGLISH).equals(KerberosAuthenticationHandler.TYPE)) -->Line_25 $$ authHandlerClassName = KerberosAuthenticationHandler.class.getName()[ CD ]
Line_30 $$ Class<?> klass = Thread.currentThread().getContextClassLoader().loadClass(authHandlerClassName)-->Line_31 $$ authHandler = (AuthenticationHandler) klass.newInstance()[ FD ]
Line_23 $$ authHandlerClassName = PseudoAuthenticationHandler.class.getName()-->Line_30 $$ Class<?> klass = Thread.currentThread().getContextClassLoader().loadClass(authHandlerClassName)[ FD ]
Line_30 $$ Class<?> klass = Thread.currentThread().getContextClassLoader().loadClass(authHandlerClassName)-->Line_56 $$ secretProvider = (SignerSecretProvider) klass.newInstance()[ FD ]
Line_44 $$ String signerSecretProviderClassName = config.getProperty(configPrefix + SIGNER_SECRET_PROVIDER_CLASS, null)-->Line_55 $$ Class<?> klass = Thread.currentThread().getContextClassLoader().loadClass(signerSecretProviderClassName)[ FD ]
Line_17 $$ String authHandlerName = config.getProperty(AUTH_TYPE, null)-->Line_19 $$ if (authHandlerName == null) [ FD ]
Line_17 $$ String authHandlerName = config.getProperty(AUTH_TYPE, null)-->Line_22 $$ if (authHandlerName.toLowerCase(Locale.ENGLISH).equals(PseudoAuthenticationHandler.TYPE)) [ FD ]
Line_46 $$ String signatureSecret = config.getProperty(configPrefix + SIGNATURE_SECRET, null)-->Line_47 $$ if (signatureSecret != null) [ FD ]
