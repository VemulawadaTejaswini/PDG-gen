Line_2 $$ private OptionMap getOptionMapFromProperties(final Properties properties, final ClassLoader classLoader) -->Line_4 $$ for (final String propertyName : properties.stringPropertyNames()) [ FD ]
Line_2 $$ private OptionMap getOptionMapFromProperties(final Properties properties, final ClassLoader classLoader) -->Line_6 $$ final Option<?> option = Option.fromString(propertyName, classLoader)[ FD ]
Line_4 $$ for (final String propertyName : properties.stringPropertyNames()) -->Line_9 $$ EjbLogger.DEPLOYMENT_LOGGER.failedToCreateOptionForProperty(propertyName, e.getMessage())[ FD ]
Line_4 $$ for (final String propertyName : properties.stringPropertyNames()) -->Line_6 $$ final Option<?> option = Option.fromString(propertyName, classLoader)[ FD ]
Line_6 $$ final Option<?> option = Option.fromString(propertyName, classLoader)-->Line_7 $$ optionMapBuilder.parse(option, properties.getProperty(propertyName), classLoader)[ FD ]
Line_4 $$ for (final String propertyName : properties.stringPropertyNames()) -->Line_7 $$ optionMapBuilder.parse(option, properties.getProperty(propertyName), classLoader)[ FD ]
Line_3 $$ final OptionMap.Builder optionMapBuilder = OptionMap.builder()-->Line_12 $$ return optionMapBuilder.getMap()[ FD ]
Line_3 $$ final OptionMap.Builder optionMapBuilder = OptionMap.builder()-->Line_7 $$ optionMapBuilder.parse(option, properties.getProperty(propertyName), classLoader)[ FD ]
Line_2 $$ private OptionMap getOptionMapFromProperties(final Properties properties, final ClassLoader classLoader) -->Line_7 $$ optionMapBuilder.parse(option, properties.getProperty(propertyName), classLoader)[ FD ]
Line_2 $$ private OptionMap getOptionMapFromProperties(final Properties properties, final ClassLoader classLoader) -->Line_12 $$ return optionMapBuilder.getMap()[ CD ]
Line_2 $$ private OptionMap getOptionMapFromProperties(final Properties properties, final ClassLoader classLoader) -->Line_3 $$ final OptionMap.Builder optionMapBuilder = OptionMap.builder()[ CD ]
