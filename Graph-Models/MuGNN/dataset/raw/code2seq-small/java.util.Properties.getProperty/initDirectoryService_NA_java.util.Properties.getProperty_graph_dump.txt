Line_23 $$ JdbmPartition systemPartition = new JdbmPartition(ds.getSchemaManager())-->Line_24 $$ systemPartition.setId("system")[ FD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_42 $$ indexedAttributes.add(new JdbmIndex<String, Entry>("objectClass", false))[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_28 $$ ds.setSystemPartition(systemPartition)[ CD ]
Line_9 $$ File schemaPartitionDirectory = new File(instanceLayout.getPartitionsDirectory(), "schema")-->Line_18 $$ schemaLdifPartition.setPartitionPath(schemaPartitionDirectory.toURI())[ FD ]
Line_35 $$ JdbmPartition partition = new JdbmPartition(ds.getSchemaManager())-->Line_37 $$ partition.setPartitionPath(new File(ds.getInstanceLayout().getPartitionsDirectory(), orgName).toURI())[ FD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_13 $$ SchemaManager schemaManager = new DefaultSchemaManager(loader)[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_36 $$ partition.setId(orgName)[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_5 $$ CacheService cacheService = new CacheService()[ CD ]
Line_35 $$ JdbmPartition partition = new JdbmPartition(ds.getSchemaManager())-->Line_36 $$ partition.setId(orgName)[ FD ]
Line_35 $$ JdbmPartition partition = new JdbmPartition(ds.getSchemaManager())-->Line_38 $$ partition.setSuffixDn(new Dn("dc=" + orgName + ",dc=" + orgDomain))[ FD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_10 $$ SchemaLdifExtractor extractor = new DefaultSchemaLdifExtractor(instanceLayout.getPartitionsDirectory())[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_37 $$ partition.setPartitionPath(new File(ds.getInstanceLayout().getPartitionsDirectory(), orgName).toURI())[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_38 $$ partition.setSuffixDn(new Dn("dc=" + orgName + ",dc=" + orgDomain))[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_29 $$ ds.getChangeLog().setEnabled(false)[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_35 $$ JdbmPartition partition = new JdbmPartition(ds.getSchemaManager())[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_23 $$ JdbmPartition systemPartition = new JdbmPartition(ds.getSchemaManager())[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_51 $$ Entry entry = ds.newEntry(dn)[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_22 $$ ds.setSchemaPartition(schemaPartition)[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_27 $$ systemPartition.setSchemaManager(ds.getSchemaManager())[ CD ]
Line_35 $$ JdbmPartition partition = new JdbmPartition(ds.getSchemaManager())-->Line_39 $$ ds.addPartition(partition)[ FD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_25 $$ systemPartition.setPartitionPath(new File(ds.getInstanceLayout().getPartitionsDirectory(), systemPartition.getId()).toURI())[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_39 $$ ds.addPartition(partition)[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_18 $$ schemaLdifPartition.setPartitionPath(schemaPartitionDirectory.toURI())[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_15 $$ ds.setSchemaManager(schemaManager)[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_14 $$ schemaManager.loadAllEnabled()[ CD ]
Line_35 $$ JdbmPartition partition = new JdbmPartition(ds.getSchemaManager())-->Line_45 $$ partition.setIndexedAttributes(indexedAttributes)[ FD ]
Line_13 $$ SchemaManager schemaManager = new DefaultSchemaManager(loader)-->Line_15 $$ ds.setSchemaManager(schemaManager)[ FD ]
Line_5 $$ CacheService cacheService = new CacheService()-->Line_6 $$ ds.setCacheService(cacheService)[ FD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_31 $$ ds.addLast(new KeyDerivationInterceptor())[ CD ]
Line_51 $$ Entry entry = ds.newEntry(dn)-->Line_53 $$ entry.add("dc", orgName)[ FD ]
Line_51 $$ Entry entry = ds.newEntry(dn)-->Line_52 $$ entry.add("objectClass", "top", "domain")[ FD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_43 $$ indexedAttributes.add(new JdbmIndex<String, Entry>("dc", false))[ CD ]
Line_23 $$ JdbmPartition systemPartition = new JdbmPartition(ds.getSchemaManager())-->Line_26 $$ systemPartition.setSuffixDn(new Dn(ServerDNConstants.SYSTEM_DN))[ FD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_21 $$ schemaPartition.setWrappedPartition(schemaLdifPartition)[ CD ]
Line_23 $$ JdbmPartition systemPartition = new JdbmPartition(ds.getSchemaManager())-->Line_28 $$ ds.setSystemPartition(systemPartition)[ FD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_4 $$ ds.setInstanceLayout(new InstanceLayout(workDir))[ CD ]
Line_51 $$ Entry entry = ds.newEntry(dn)-->Line_54 $$ ds.getAdminSession().add(entry)[ FD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_6 $$ ds.setCacheService(cacheService)[ CD ]
Line_23 $$ JdbmPartition systemPartition = new JdbmPartition(ds.getSchemaManager())-->Line_27 $$ systemPartition.setSchemaManager(ds.getSchemaManager())[ FD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_44 $$ indexedAttributes.add(new JdbmIndex<String, Entry>("ou", false))[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_30 $$ ds.setDenormalizeOpAttrsEnabled(true)[ CD ]
Line_13 $$ SchemaManager schemaManager = new DefaultSchemaManager(loader)-->Line_14 $$ schemaManager.loadAllEnabled()[ FD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_24 $$ systemPartition.setId("system")[ CD ]
Line_10 $$ SchemaLdifExtractor extractor = new DefaultSchemaLdifExtractor(instanceLayout.getPartitionsDirectory())-->Line_11 $$ extractor.extractOrCopy()[ FD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_54 $$ ds.getAdminSession().add(entry)[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_11 $$ extractor.extractOrCopy()[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_34 $$ String orgDomain = conf.getProperty(ORG_DOMAIN).toLowerCase()[ CD ]
Line_23 $$ JdbmPartition systemPartition = new JdbmPartition(ds.getSchemaManager())-->Line_25 $$ systemPartition.setPartitionPath(new File(ds.getInstanceLayout().getPartitionsDirectory(), systemPartition.getId()).toURI())[ FD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_12 $$ SchemaLoader loader = new LdifSchemaLoader(schemaPartitionDirectory)[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_45 $$ partition.setIndexedAttributes(indexedAttributes)[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_9 $$ File schemaPartitionDirectory = new File(instanceLayout.getPartitionsDirectory(), "schema")[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_26 $$ systemPartition.setSuffixDn(new Dn(ServerDNConstants.SYSTEM_DN))[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_48 $$ ds.startup()[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_53 $$ entry.add("dc", orgName)[ CD ]
Line_2 $$ private void initDirectoryService() throws Exception -->Line_52 $$ entry.add("objectClass", "top", "domain")[ CD ]
