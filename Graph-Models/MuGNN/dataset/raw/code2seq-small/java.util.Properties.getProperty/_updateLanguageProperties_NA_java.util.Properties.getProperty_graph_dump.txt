Line_2 $$ private void _updateLanguageProperties(Document document, String className) throws IOException -->Line_35 $$ if (index != -1) [ CD ]
Line_13 $$ char c = className.charAt(i)-->Line_18 $$ sb.append(Character.toLowerCase(c))[ FD ]
Line_2 $$ private void _updateLanguageProperties(Document document, String className) throws IOException -->Line_31 $$ if ((comment == null) || value.equals(comment)) [ CD ]
Line_30 $$ String comment = rootElement.elementText("comment")-->Line_38 $$ value = comment[ FD ]
Line_10 $$ StringBundler sb = new StringBundler()-->Line_11 $$ sb.append(Character.toLowerCase(className.charAt(0)))[ FD ]
Line_30 $$ String comment = rootElement.elementText("comment")-->Line_36 $$ value = comment.substring(0, index)[ FD ]
Line_12 $$ for (int i = 1; i < index; i++) -->Line_13 $$ char c = className.charAt(i)[ FD ]
Line_6 $$ int index = className.indexOf("ServiceImpl")-->Line_34 $$ index = comment.indexOf("\n\n")[ FD ]
Line_6 $$ int index = className.indexOf("ServiceImpl")-->Line_7 $$ if (index <= 0) [ FD ]
Line_2 $$ private void _updateLanguageProperties(Document document, String className) throws IOException -->Line_24 $$ String key = sb.toString()[ CD ]
Line_34 $$ index = comment.indexOf("\n\n")-->Line_36 $$ value = comment.substring(0, index)[ FD ]
Line_2 $$ private void _updateLanguageProperties(Document document, String className) throws IOException -->Line_40 $$ _updateLanguageProperties(key, value)[ CD ]
Line_6 $$ int index = className.indexOf("ServiceImpl")-->Line_35 $$ if (index != -1) [ FD ]
Line_14 $$ if (Character.isUpperCase(c)) -->Line_15 $$ if (((i + 1) < index) && Character.isLowerCase(className.charAt(i + 1))) [ CD ]
Line_36 $$ value = comment.substring(0, index)-->Line_38 $$ value = comment[ FD ]
Line_13 $$ char c = className.charAt(i)-->Line_14 $$ if (Character.isUpperCase(c)) [ FD ]
Line_2 $$ private void _updateLanguageProperties(Document document, String className) throws IOException -->Line_6 $$ int index = className.indexOf("ServiceImpl")[ CD ]
Line_26 $$ if (value == null) -->Line_27 $$ return[ CD ]
Line_34 $$ index = comment.indexOf("\n\n")-->Line_35 $$ if (index != -1) [ FD ]
Line_2 $$ private void _updateLanguageProperties(Document document, String className) throws IOException -->Line_23 $$ sb.append("-service-help")[ CD ]
Line_2 $$ private void _updateLanguageProperties(Document document, String className) throws IOException -->Line_29 $$ Element rootElement = document.getRootElement()[ CD ]
Line_14 $$ if (Character.isUpperCase(c)) -->Line_20 $$ sb.append(c)[ CD ]
Line_29 $$ Element rootElement = document.getRootElement()-->Line_30 $$ String comment = rootElement.elementText("comment")[ FD ]
Line_2 $$ private void _updateLanguageProperties(Document document, String className) throws IOException -->Line_6 $$ int index = className.indexOf("ServiceImpl")[ FD ]
Line_25 $$ String value = _languageProperties.getProperty(key)-->Line_31 $$ if ((comment == null) || value.equals(comment)) [ FD ]
Line_2 $$ private void _updateLanguageProperties(Document document, String className) throws IOException -->Line_7 $$ if (index <= 0) [ CD ]
Line_2 $$ private void _updateLanguageProperties(Document document, String className) throws IOException -->Line_3 $$ if (_languageProperties == null) [ CD ]
Line_30 $$ String comment = rootElement.elementText("comment")-->Line_34 $$ index = comment.indexOf("\n\n")[ FD ]
Line_2 $$ private void _updateLanguageProperties(Document document, String className) throws IOException -->Line_11 $$ sb.append(Character.toLowerCase(className.charAt(0)))[ FD ]
Line_2 $$ private void _updateLanguageProperties(Document document, String className) throws IOException -->Line_15 $$ if (((i + 1) < index) && Character.isLowerCase(className.charAt(i + 1))) [ FD ]
Line_2 $$ private void _updateLanguageProperties(Document document, String className) throws IOException -->Line_13 $$ char c = className.charAt(i)[ FD ]
Line_24 $$ String key = sb.toString()-->Line_25 $$ String value = _languageProperties.getProperty(key)[ FD ]
Line_2 $$ private void _updateLanguageProperties(Document document, String className) throws IOException -->Line_30 $$ String comment = rootElement.elementText("comment")[ CD ]
Line_10 $$ StringBundler sb = new StringBundler()-->Line_16 $$ sb.append(CharPool.DASH)[ FD ]
Line_10 $$ StringBundler sb = new StringBundler()-->Line_20 $$ sb.append(c)[ FD ]
Line_31 $$ if ((comment == null) || value.equals(comment)) -->Line_32 $$ return[ CD ]
Line_7 $$ if (index <= 0) -->Line_8 $$ return[ CD ]
Line_25 $$ String value = _languageProperties.getProperty(key)-->Line_40 $$ _updateLanguageProperties(key, value)[ FD ]
Line_2 $$ private void _updateLanguageProperties(Document document, String className) throws IOException -->Line_25 $$ String value = _languageProperties.getProperty(key)[ CD ]
Line_30 $$ String comment = rootElement.elementText("comment")-->Line_31 $$ if ((comment == null) || value.equals(comment)) [ FD ]
Line_12 $$ for (int i = 1; i < index; i++) -->Line_14 $$ if (Character.isUpperCase(c)) [ CD ]
Line_12 $$ for (int i = 1; i < index; i++) -->Line_13 $$ char c = className.charAt(i)[ CD ]
Line_15 $$ if (((i + 1) < index) && Character.isLowerCase(className.charAt(i + 1))) -->Line_16 $$ sb.append(CharPool.DASH)[ CD ]
Line_10 $$ StringBundler sb = new StringBundler()-->Line_23 $$ sb.append("-service-help")[ FD ]
Line_25 $$ String value = _languageProperties.getProperty(key)-->Line_38 $$ value = comment[ FD ]
Line_36 $$ value = comment.substring(0, index)-->Line_40 $$ _updateLanguageProperties(key, value)[ FD ]
Line_2 $$ private void _updateLanguageProperties(Document document, String className) throws IOException -->Line_26 $$ if (value == null) [ CD ]
Line_25 $$ String value = _languageProperties.getProperty(key)-->Line_36 $$ value = comment.substring(0, index)[ FD ]
Line_10 $$ StringBundler sb = new StringBundler()-->Line_24 $$ String key = sb.toString()[ FD ]
Line_24 $$ String key = sb.toString()-->Line_40 $$ _updateLanguageProperties(key, value)[ FD ]
Line_25 $$ String value = _languageProperties.getProperty(key)-->Line_26 $$ if (value == null) [ FD ]
Line_35 $$ if (index != -1) -->Line_36 $$ value = comment.substring(0, index)[ CD ]
Line_2 $$ private void _updateLanguageProperties(Document document, String className) throws IOException -->Line_10 $$ StringBundler sb = new StringBundler()[ CD ]
Line_2 $$ private void _updateLanguageProperties(Document document, String className) throws IOException -->Line_29 $$ Element rootElement = document.getRootElement()[ FD ]
Line_3 $$ if (_languageProperties == null) -->Line_4 $$ return[ CD ]
Line_2 $$ private void _updateLanguageProperties(Document document, String className) throws IOException -->Line_12 $$ for (int i = 1; i < index; i++) [ CD ]
Line_14 $$ if (Character.isUpperCase(c)) -->Line_18 $$ sb.append(Character.toLowerCase(c))[ CD ]
Line_10 $$ StringBundler sb = new StringBundler()-->Line_18 $$ sb.append(Character.toLowerCase(c))[ FD ]
Line_6 $$ int index = className.indexOf("ServiceImpl")-->Line_36 $$ value = comment.substring(0, index)[ FD ]
Line_35 $$ if (index != -1) -->Line_38 $$ value = comment[ CD ]
Line_13 $$ char c = className.charAt(i)-->Line_20 $$ sb.append(c)[ FD ]
Line_2 $$ private void _updateLanguageProperties(Document document, String className) throws IOException -->Line_11 $$ sb.append(Character.toLowerCase(className.charAt(0)))[ CD ]
Line_38 $$ value = comment-->Line_40 $$ _updateLanguageProperties(key, value)[ FD ]
Line_2 $$ private void _updateLanguageProperties(Document document, String className) throws IOException -->Line_34 $$ index = comment.indexOf("\n\n")[ CD ]
Line_6 $$ int index = className.indexOf("ServiceImpl")-->Line_12 $$ for (int i = 1; i < index; i++) [ FD ]
