Line_2 $$ private static byte[] createContent(Properties properties) -->Line_4 $$ TreeSet<String> sortedKeys = new TreeSet<String>((Set) properties.keySet())[ CD ]
Line_5 $$ for (String each : sortedKeys) -->Line_8 $$ builder.append(StringUtil.escapeProperty(properties.getProperty(each), false))[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_11 $$ return builder.toString().getBytes()[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_9 $$ builder.append("\n")[ FD ]
Line_2 $$ private static byte[] createContent(Properties properties) -->Line_11 $$ return builder.toString().getBytes()[ CD ]
Line_2 $$ private static byte[] createContent(Properties properties) -->Line_3 $$ StringBuilder builder = new StringBuilder()[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_7 $$ builder.append("=")[ FD ]
Line_2 $$ private static byte[] createContent(Properties properties) -->Line_8 $$ builder.append(StringUtil.escapeProperty(properties.getProperty(each), false))[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_6 $$ builder.append(StringUtil.escapeProperty(each, true))[ FD ]
Line_2 $$ private static byte[] createContent(Properties properties) -->Line_4 $$ TreeSet<String> sortedKeys = new TreeSet<String>((Set) properties.keySet())[ FD ]
Line_5 $$ for (String each : sortedKeys) -->Line_6 $$ builder.append(StringUtil.escapeProperty(each, true))[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_8 $$ builder.append(StringUtil.escapeProperty(properties.getProperty(each), false))[ FD ]
