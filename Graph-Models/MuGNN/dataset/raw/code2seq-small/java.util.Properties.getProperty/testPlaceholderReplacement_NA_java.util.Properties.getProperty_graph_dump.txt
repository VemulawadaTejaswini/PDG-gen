Line_8 $$ str = ConfigurationHelper.getString("my.string.prop", props, "na")-->Line_10 $$ str = ConfigurationHelper.getString("my.string.prop", props, "did.not.exist")[ FD ]
Line_6 $$ str = ConfigurationHelper.getString("my.nonexistent.prop", props, null)-->Line_10 $$ str = ConfigurationHelper.getString("my.string.prop", props, "did.not.exist")[ FD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_30 $$ str = props.getProperty("partial.prop1")[ CD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_4 $$ String str = ConfigurationHelper.getString("my.nonexistent.prop", props, "did.not.exist")[ CD ]
Line_4 $$ String str = ConfigurationHelper.getString("my.nonexistent.prop", props, "did.not.exist")-->Line_31 $$ assertEquals("partial replacement (ends)", "tmp/middle/dir/tmp.txt", str)[ FD ]
Line_30 $$ str = props.getProperty("partial.prop1")-->Line_31 $$ assertEquals("partial replacement (ends)", "tmp/middle/dir/tmp.txt", str)[ FD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_9 $$ assertEquals("replacement did not occur", "string", str)[ CD ]
Line_6 $$ str = ConfigurationHelper.getString("my.nonexistent.prop", props, null)-->Line_33 $$ assertEquals("partial replacement (midst)", "basedir/tmp/myfile.txt", str)[ FD ]
Line_14 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, false)-->Line_21 $$ assertTrue("boolean replacement did not occur", bool)[ FD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_19 $$ assertTrue("boolean replacement did not occur", bool)[ CD ]
Line_4 $$ String str = ConfigurationHelper.getString("my.nonexistent.prop", props, "did.not.exist")-->Line_33 $$ assertEquals("partial replacement (midst)", "basedir/tmp/myfile.txt", str)[ FD ]
Line_10 $$ str = ConfigurationHelper.getString("my.string.prop", props, "did.not.exist")-->Line_33 $$ assertEquals("partial replacement (midst)", "basedir/tmp/myfile.txt", str)[ FD ]
Line_12 $$ boolean bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props)-->Line_16 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, true)[ FD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_31 $$ assertEquals("partial replacement (ends)", "tmp/middle/dir/tmp.txt", str)[ CD ]
Line_6 $$ str = ConfigurationHelper.getString("my.nonexistent.prop", props, null)-->Line_9 $$ assertEquals("replacement did not occur", "string", str)[ FD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_25 $$ assertEquals(1, i)[ CD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_21 $$ assertTrue("boolean replacement did not occur", bool)[ CD ]
Line_22 $$ int i = ConfigurationHelper.getInt("my.nonexistent.prop", props, -1)-->Line_25 $$ assertEquals(1, i)[ FD ]
Line_4 $$ String str = ConfigurationHelper.getString("my.nonexistent.prop", props, "did.not.exist")-->Line_11 $$ assertEquals("replacement did not occur", "string", str)[ FD ]
Line_12 $$ boolean bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props)-->Line_17 $$ assertTrue("non-exists as boolean", bool)[ FD ]
Line_30 $$ str = props.getProperty("partial.prop1")-->Line_32 $$ str = props.getProperty("partial.prop2")[ FD ]
Line_14 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, false)-->Line_16 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, true)[ FD ]
Line_14 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, false)-->Line_19 $$ assertTrue("boolean replacement did not occur", bool)[ FD ]
Line_28 $$ I = ConfigurationHelper.getInteger("my.integer.prop", props)-->Line_29 $$ assertEquals(I, new Integer(1))[ FD ]
Line_6 $$ str = ConfigurationHelper.getString("my.nonexistent.prop", props, null)-->Line_31 $$ assertEquals("partial replacement (ends)", "tmp/middle/dir/tmp.txt", str)[ FD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_32 $$ str = props.getProperty("partial.prop2")[ CD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_33 $$ assertEquals("partial replacement (midst)", "basedir/tmp/myfile.txt", str)[ CD ]
Line_20 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props, false)-->Line_21 $$ assertTrue("boolean replacement did not occur", bool)[ FD ]
Line_4 $$ String str = ConfigurationHelper.getString("my.nonexistent.prop", props, "did.not.exist")-->Line_30 $$ str = props.getProperty("partial.prop1")[ FD ]
Line_16 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, true)-->Line_17 $$ assertTrue("non-exists as boolean", bool)[ FD ]
Line_26 $$ Integer I = ConfigurationHelper.getInteger("my.nonexistent.prop", props)-->Line_27 $$ assertNull(I)[ FD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_24 $$ i = ConfigurationHelper.getInt("my.int.prop", props, 100)[ CD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_26 $$ Integer I = ConfigurationHelper.getInteger("my.nonexistent.prop", props)[ CD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_27 $$ assertNull(I)[ CD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_28 $$ I = ConfigurationHelper.getInteger("my.integer.prop", props)[ CD ]
Line_18 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props)-->Line_21 $$ assertTrue("boolean replacement did not occur", bool)[ FD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_16 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, true)[ CD ]
Line_6 $$ str = ConfigurationHelper.getString("my.nonexistent.prop", props, null)-->Line_8 $$ str = ConfigurationHelper.getString("my.string.prop", props, "na")[ FD ]
Line_24 $$ i = ConfigurationHelper.getInt("my.int.prop", props, 100)-->Line_25 $$ assertEquals(1, i)[ FD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_18 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props)[ CD ]
Line_4 $$ String str = ConfigurationHelper.getString("my.nonexistent.prop", props, "did.not.exist")-->Line_5 $$ assertEquals("did.not.exist", str)[ FD ]
Line_10 $$ str = ConfigurationHelper.getString("my.string.prop", props, "did.not.exist")-->Line_30 $$ str = props.getProperty("partial.prop1")[ FD ]
Line_6 $$ str = ConfigurationHelper.getString("my.nonexistent.prop", props, null)-->Line_7 $$ assertNull(str)[ FD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_23 $$ assertEquals(-1, i)[ CD ]
Line_10 $$ str = ConfigurationHelper.getString("my.string.prop", props, "did.not.exist")-->Line_31 $$ assertEquals("partial replacement (ends)", "tmp/middle/dir/tmp.txt", str)[ FD ]
Line_8 $$ str = ConfigurationHelper.getString("my.string.prop", props, "na")-->Line_32 $$ str = props.getProperty("partial.prop2")[ FD ]
Line_10 $$ str = ConfigurationHelper.getString("my.string.prop", props, "did.not.exist")-->Line_11 $$ assertEquals("replacement did not occur", "string", str)[ FD ]
Line_18 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props)-->Line_19 $$ assertTrue("boolean replacement did not occur", bool)[ FD ]
Line_26 $$ Integer I = ConfigurationHelper.getInteger("my.nonexistent.prop", props)-->Line_28 $$ I = ConfigurationHelper.getInteger("my.integer.prop", props)[ FD ]
Line_4 $$ String str = ConfigurationHelper.getString("my.nonexistent.prop", props, "did.not.exist")-->Line_8 $$ str = ConfigurationHelper.getString("my.string.prop", props, "na")[ FD ]
Line_8 $$ str = ConfigurationHelper.getString("my.string.prop", props, "na")-->Line_33 $$ assertEquals("partial replacement (midst)", "basedir/tmp/myfile.txt", str)[ FD ]
Line_8 $$ str = ConfigurationHelper.getString("my.string.prop", props, "na")-->Line_9 $$ assertEquals("replacement did not occur", "string", str)[ FD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_13 $$ assertFalse("non-exists as boolean", bool)[ CD ]
Line_6 $$ str = ConfigurationHelper.getString("my.nonexistent.prop", props, null)-->Line_32 $$ str = props.getProperty("partial.prop2")[ FD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_6 $$ str = ConfigurationHelper.getString("my.nonexistent.prop", props, null)[ CD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_7 $$ assertNull(str)[ CD ]
Line_12 $$ boolean bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props)-->Line_18 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props)[ FD ]
Line_4 $$ String str = ConfigurationHelper.getString("my.nonexistent.prop", props, "did.not.exist")-->Line_6 $$ str = ConfigurationHelper.getString("my.nonexistent.prop", props, null)[ FD ]
Line_12 $$ boolean bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props)-->Line_14 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, false)[ FD ]
Line_16 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, true)-->Line_18 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props)[ FD ]
Line_4 $$ String str = ConfigurationHelper.getString("my.nonexistent.prop", props, "did.not.exist")-->Line_7 $$ assertNull(str)[ FD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_22 $$ int i = ConfigurationHelper.getInt("my.nonexistent.prop", props, -1)[ CD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_5 $$ assertEquals("did.not.exist", str)[ CD ]
Line_14 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, false)-->Line_20 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props, false)[ FD ]
Line_32 $$ str = props.getProperty("partial.prop2")-->Line_33 $$ assertEquals("partial replacement (midst)", "basedir/tmp/myfile.txt", str)[ FD ]
Line_18 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props)-->Line_20 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props, false)[ FD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_20 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props, false)[ CD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_11 $$ assertEquals("replacement did not occur", "string", str)[ CD ]
Line_14 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, false)-->Line_18 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props)[ FD ]
Line_22 $$ int i = ConfigurationHelper.getInt("my.nonexistent.prop", props, -1)-->Line_24 $$ i = ConfigurationHelper.getInt("my.int.prop", props, 100)[ FD ]
Line_8 $$ str = ConfigurationHelper.getString("my.string.prop", props, "na")-->Line_30 $$ str = props.getProperty("partial.prop1")[ FD ]
Line_14 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, false)-->Line_17 $$ assertTrue("non-exists as boolean", bool)[ FD ]
Line_12 $$ boolean bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props)-->Line_20 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props, false)[ FD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_3 $$ ConfigurationHelper.resolvePlaceHolders(props)[ CD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_8 $$ str = ConfigurationHelper.getString("my.string.prop", props, "na")[ CD ]
Line_22 $$ int i = ConfigurationHelper.getInt("my.nonexistent.prop", props, -1)-->Line_23 $$ assertEquals(-1, i)[ FD ]
Line_30 $$ str = props.getProperty("partial.prop1")-->Line_33 $$ assertEquals("partial replacement (midst)", "basedir/tmp/myfile.txt", str)[ FD ]
Line_12 $$ boolean bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props)-->Line_19 $$ assertTrue("boolean replacement did not occur", bool)[ FD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_15 $$ assertFalse("non-exists as boolean", bool)[ CD ]
Line_4 $$ String str = ConfigurationHelper.getString("my.nonexistent.prop", props, "did.not.exist")-->Line_32 $$ str = props.getProperty("partial.prop2")[ FD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_14 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, false)[ CD ]
Line_12 $$ boolean bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props)-->Line_15 $$ assertFalse("non-exists as boolean", bool)[ FD ]
Line_14 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, false)-->Line_15 $$ assertFalse("non-exists as boolean", bool)[ FD ]
Line_12 $$ boolean bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props)-->Line_13 $$ assertFalse("non-exists as boolean", bool)[ FD ]
Line_4 $$ String str = ConfigurationHelper.getString("my.nonexistent.prop", props, "did.not.exist")-->Line_9 $$ assertEquals("replacement did not occur", "string", str)[ FD ]
Line_8 $$ str = ConfigurationHelper.getString("my.string.prop", props, "na")-->Line_31 $$ assertEquals("partial replacement (ends)", "tmp/middle/dir/tmp.txt", str)[ FD ]
Line_16 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, true)-->Line_19 $$ assertTrue("boolean replacement did not occur", bool)[ FD ]
Line_16 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, true)-->Line_20 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props, false)[ FD ]
Line_16 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, true)-->Line_21 $$ assertTrue("boolean replacement did not occur", bool)[ FD ]
Line_8 $$ str = ConfigurationHelper.getString("my.string.prop", props, "na")-->Line_11 $$ assertEquals("replacement did not occur", "string", str)[ FD ]
Line_12 $$ boolean bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props)-->Line_21 $$ assertTrue("boolean replacement did not occur", bool)[ FD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_29 $$ assertEquals(I, new Integer(1))[ CD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_17 $$ assertTrue("non-exists as boolean", bool)[ CD ]
Line_6 $$ str = ConfigurationHelper.getString("my.nonexistent.prop", props, null)-->Line_11 $$ assertEquals("replacement did not occur", "string", str)[ FD ]
Line_4 $$ String str = ConfigurationHelper.getString("my.nonexistent.prop", props, "did.not.exist")-->Line_10 $$ str = ConfigurationHelper.getString("my.string.prop", props, "did.not.exist")[ FD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_10 $$ str = ConfigurationHelper.getString("my.string.prop", props, "did.not.exist")[ CD ]
Line_10 $$ str = ConfigurationHelper.getString("my.string.prop", props, "did.not.exist")-->Line_32 $$ str = props.getProperty("partial.prop2")[ FD ]
Line_2 $$ public void testPlaceholderReplacement() -->Line_12 $$ boolean bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props)[ CD ]
Line_6 $$ str = ConfigurationHelper.getString("my.nonexistent.prop", props, null)-->Line_30 $$ str = props.getProperty("partial.prop1")[ FD ]
Line_26 $$ Integer I = ConfigurationHelper.getInteger("my.nonexistent.prop", props)-->Line_29 $$ assertEquals(I, new Integer(1))[ FD ]
