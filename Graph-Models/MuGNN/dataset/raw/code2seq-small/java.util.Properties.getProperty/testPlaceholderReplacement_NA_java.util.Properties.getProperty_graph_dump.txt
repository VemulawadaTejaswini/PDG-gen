Line_7 $$ str = ConfigurationHelper.getString("my.nonexistent.prop", props, null)-->Line_9 $$ str = ConfigurationHelper.getString("my.string.prop", props, "na")[ FD ]
Line_17 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, true)-->Line_22 $$ assertTrue("boolean replacement did not occur", bool)[ FD ]
Line_13 $$ boolean bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props)-->Line_22 $$ assertTrue("boolean replacement did not occur", bool)[ FD ]
Line_7 $$ str = ConfigurationHelper.getString("my.nonexistent.prop", props, null)-->Line_31 $$ str = props.getProperty("partial.prop1")[ FD ]
Line_33 $$ str = props.getProperty("partial.prop2")-->Line_34 $$ assertEquals("partial replacement (midst)", "basedir/tmp/myfile.txt", str)[ FD ]
Line_7 $$ str = ConfigurationHelper.getString("my.nonexistent.prop", props, null)-->Line_32 $$ assertEquals("partial replacement (ends)", "tmp/middle/dir/tmp.txt", str)[ FD ]
Line_5 $$ String str = ConfigurationHelper.getString("my.nonexistent.prop", props, "did.not.exist")-->Line_10 $$ assertEquals("replacement did not occur", "string", str)[ FD ]
Line_7 $$ str = ConfigurationHelper.getString("my.nonexistent.prop", props, null)-->Line_34 $$ assertEquals("partial replacement (midst)", "basedir/tmp/myfile.txt", str)[ FD ]
Line_19 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props)-->Line_21 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props, false)[ FD ]
Line_23 $$ int i = ConfigurationHelper.getInt("my.nonexistent.prop", props, -1)-->Line_26 $$ assertEquals(1, i)[ FD ]
Line_9 $$ str = ConfigurationHelper.getString("my.string.prop", props, "na")-->Line_12 $$ assertEquals("replacement did not occur", "string", str)[ FD ]
Line_17 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, true)-->Line_19 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props)[ FD ]
Line_7 $$ str = ConfigurationHelper.getString("my.nonexistent.prop", props, null)-->Line_8 $$ assertNull(str)[ FD ]
Line_5 $$ String str = ConfigurationHelper.getString("my.nonexistent.prop", props, "did.not.exist")-->Line_34 $$ assertEquals("partial replacement (midst)", "basedir/tmp/myfile.txt", str)[ FD ]
Line_5 $$ String str = ConfigurationHelper.getString("my.nonexistent.prop", props, "did.not.exist")-->Line_33 $$ str = props.getProperty("partial.prop2")[ FD ]
Line_17 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, true)-->Line_21 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props, false)[ FD ]
Line_13 $$ boolean bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props)-->Line_19 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props)[ FD ]
Line_25 $$ i = ConfigurationHelper.getInt("my.int.prop", props, 100)-->Line_26 $$ assertEquals(1, i)[ FD ]
Line_15 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, false)-->Line_19 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props)[ FD ]
Line_15 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, false)-->Line_22 $$ assertTrue("boolean replacement did not occur", bool)[ FD ]
Line_19 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props)-->Line_22 $$ assertTrue("boolean replacement did not occur", bool)[ FD ]
Line_7 $$ str = ConfigurationHelper.getString("my.nonexistent.prop", props, null)-->Line_12 $$ assertEquals("replacement did not occur", "string", str)[ FD ]
Line_9 $$ str = ConfigurationHelper.getString("my.string.prop", props, "na")-->Line_32 $$ assertEquals("partial replacement (ends)", "tmp/middle/dir/tmp.txt", str)[ FD ]
Line_11 $$ str = ConfigurationHelper.getString("my.string.prop", props, "did.not.exist")-->Line_31 $$ str = props.getProperty("partial.prop1")[ FD ]
Line_13 $$ boolean bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props)-->Line_14 $$ assertFalse("non-exists as boolean", bool)[ FD ]
Line_5 $$ String str = ConfigurationHelper.getString("my.nonexistent.prop", props, "did.not.exist")-->Line_31 $$ str = props.getProperty("partial.prop1")[ FD ]
Line_9 $$ str = ConfigurationHelper.getString("my.string.prop", props, "na")-->Line_34 $$ assertEquals("partial replacement (midst)", "basedir/tmp/myfile.txt", str)[ FD ]
Line_15 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, false)-->Line_20 $$ assertTrue("boolean replacement did not occur", bool)[ FD ]
Line_13 $$ boolean bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props)-->Line_18 $$ assertTrue("non-exists as boolean", bool)[ FD ]
Line_9 $$ str = ConfigurationHelper.getString("my.string.prop", props, "na")-->Line_33 $$ str = props.getProperty("partial.prop2")[ FD ]
Line_15 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, false)-->Line_17 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, true)[ FD ]
Line_7 $$ str = ConfigurationHelper.getString("my.nonexistent.prop", props, null)-->Line_33 $$ str = props.getProperty("partial.prop2")[ FD ]
Line_27 $$ Integer I = ConfigurationHelper.getInteger("my.nonexistent.prop", props)-->Line_30 $$ assertEquals(I, new Integer(1))[ FD ]
Line_5 $$ String str = ConfigurationHelper.getString("my.nonexistent.prop", props, "did.not.exist")-->Line_7 $$ str = ConfigurationHelper.getString("my.nonexistent.prop", props, null)[ FD ]
Line_7 $$ str = ConfigurationHelper.getString("my.nonexistent.prop", props, null)-->Line_10 $$ assertEquals("replacement did not occur", "string", str)[ FD ]
Line_23 $$ int i = ConfigurationHelper.getInt("my.nonexistent.prop", props, -1)-->Line_24 $$ assertEquals(-1, i)[ FD ]
Line_31 $$ str = props.getProperty("partial.prop1")-->Line_33 $$ str = props.getProperty("partial.prop2")[ FD ]
Line_11 $$ str = ConfigurationHelper.getString("my.string.prop", props, "did.not.exist")-->Line_34 $$ assertEquals("partial replacement (midst)", "basedir/tmp/myfile.txt", str)[ FD ]
Line_9 $$ str = ConfigurationHelper.getString("my.string.prop", props, "na")-->Line_10 $$ assertEquals("replacement did not occur", "string", str)[ FD ]
Line_13 $$ boolean bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props)-->Line_16 $$ assertFalse("non-exists as boolean", bool)[ FD ]
Line_15 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, false)-->Line_18 $$ assertTrue("non-exists as boolean", bool)[ FD ]
Line_15 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, false)-->Line_21 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props, false)[ FD ]
Line_13 $$ boolean bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props)-->Line_20 $$ assertTrue("boolean replacement did not occur", bool)[ FD ]
Line_5 $$ String str = ConfigurationHelper.getString("my.nonexistent.prop", props, "did.not.exist")-->Line_12 $$ assertEquals("replacement did not occur", "string", str)[ FD ]
Line_5 $$ String str = ConfigurationHelper.getString("my.nonexistent.prop", props, "did.not.exist")-->Line_6 $$ assertEquals("did.not.exist", str)[ FD ]
Line_5 $$ String str = ConfigurationHelper.getString("my.nonexistent.prop", props, "did.not.exist")-->Line_11 $$ str = ConfigurationHelper.getString("my.string.prop", props, "did.not.exist")[ FD ]
Line_31 $$ str = props.getProperty("partial.prop1")-->Line_34 $$ assertEquals("partial replacement (midst)", "basedir/tmp/myfile.txt", str)[ FD ]
Line_27 $$ Integer I = ConfigurationHelper.getInteger("my.nonexistent.prop", props)-->Line_29 $$ I = ConfigurationHelper.getInteger("my.integer.prop", props)[ FD ]
Line_13 $$ boolean bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props)-->Line_15 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, false)[ FD ]
Line_11 $$ str = ConfigurationHelper.getString("my.string.prop", props, "did.not.exist")-->Line_32 $$ assertEquals("partial replacement (ends)", "tmp/middle/dir/tmp.txt", str)[ FD ]
Line_11 $$ str = ConfigurationHelper.getString("my.string.prop", props, "did.not.exist")-->Line_33 $$ str = props.getProperty("partial.prop2")[ FD ]
Line_13 $$ boolean bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props)-->Line_17 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, true)[ FD ]
Line_9 $$ str = ConfigurationHelper.getString("my.string.prop", props, "na")-->Line_31 $$ str = props.getProperty("partial.prop1")[ FD ]
Line_27 $$ Integer I = ConfigurationHelper.getInteger("my.nonexistent.prop", props)-->Line_28 $$ assertNull(I)[ FD ]
Line_9 $$ str = ConfigurationHelper.getString("my.string.prop", props, "na")-->Line_11 $$ str = ConfigurationHelper.getString("my.string.prop", props, "did.not.exist")[ FD ]
Line_21 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props, false)-->Line_22 $$ assertTrue("boolean replacement did not occur", bool)[ FD ]
Line_11 $$ str = ConfigurationHelper.getString("my.string.prop", props, "did.not.exist")-->Line_12 $$ assertEquals("replacement did not occur", "string", str)[ FD ]
Line_19 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props)-->Line_20 $$ assertTrue("boolean replacement did not occur", bool)[ FD ]
Line_5 $$ String str = ConfigurationHelper.getString("my.nonexistent.prop", props, "did.not.exist")-->Line_8 $$ assertNull(str)[ FD ]
Line_17 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, true)-->Line_20 $$ assertTrue("boolean replacement did not occur", bool)[ FD ]
Line_15 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, false)-->Line_16 $$ assertFalse("non-exists as boolean", bool)[ FD ]
Line_13 $$ boolean bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props)-->Line_21 $$ bool = ConfigurationHelper.getBoolean("my.boolean.prop", props, false)[ FD ]
Line_23 $$ int i = ConfigurationHelper.getInt("my.nonexistent.prop", props, -1)-->Line_25 $$ i = ConfigurationHelper.getInt("my.int.prop", props, 100)[ FD ]
Line_5 $$ String str = ConfigurationHelper.getString("my.nonexistent.prop", props, "did.not.exist")-->Line_32 $$ assertEquals("partial replacement (ends)", "tmp/middle/dir/tmp.txt", str)[ FD ]
Line_29 $$ I = ConfigurationHelper.getInteger("my.integer.prop", props)-->Line_30 $$ assertEquals(I, new Integer(1))[ FD ]
Line_31 $$ str = props.getProperty("partial.prop1")-->Line_32 $$ assertEquals("partial replacement (ends)", "tmp/middle/dir/tmp.txt", str)[ FD ]
Line_7 $$ str = ConfigurationHelper.getString("my.nonexistent.prop", props, null)-->Line_11 $$ str = ConfigurationHelper.getString("my.string.prop", props, "did.not.exist")[ FD ]
Line_17 $$ bool = ConfigurationHelper.getBoolean("my.nonexistent.prop", props, true)-->Line_18 $$ assertTrue("non-exists as boolean", bool)[ FD ]
Line_5 $$ String str = ConfigurationHelper.getString("my.nonexistent.prop", props, "did.not.exist")-->Line_9 $$ str = ConfigurationHelper.getString("my.string.prop", props, "na")[ FD ]
