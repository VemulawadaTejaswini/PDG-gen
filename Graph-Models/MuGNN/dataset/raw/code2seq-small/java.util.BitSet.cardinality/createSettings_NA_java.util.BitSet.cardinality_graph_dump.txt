Line_34 $$ PsiElement old_cur = cur-->Line_42 $$ if (cur == old_cur)[ FD ]
Line_24 $$ final BitSet prev = writes.get(instruction.num())-->Line_26 $$ writeInstr = flow[prev.nextSetBit(0)][ FD ]
Line_14 $$ GrControlFlowOwner controlFlowOwner-->Line_16 $$ controlFlowOwner = ControlFlowUtils.findControlFlowOwner(cur)[ FD ]
Line_7 $$ Instruction[] flow = null-->Line_47 $$ flow = ControlFlowUtils.findControlFlowOwner(variable).getControlFlow()[ FD ]
Line_19 $$ flow = controlFlowOwner.getControlFlow()-->Line_22 $$ Instruction instruction = ControlFlowUtils.findInstruction(finalCur, flow)[ FD ]
Line_21 $$ final PsiElement finalCur = cur-->Line_22 $$ Instruction instruction = ControlFlowUtils.findInstruction(finalCur, flow)[ FD ]
Line_55 $$ if (initializer == null || writeInstr == null) -->Line_57 $$ CommonRefactoringUtil.showErrorHint(variable.getProject(), editor, message, INLINE_VARIABLE, HelpID.INLINE_VARIABLE)[ CD ]
Line_16 $$ controlFlowOwner = ControlFlowUtils.findControlFlowOwner(cur)-->Line_19 $$ flow = controlFlowOwner.getControlFlow()[ FD ]
Line_3 $$ final String localName = variable.getName()-->Line_64 $$ final String question = GroovyRefactoringBundle.message("inline.local.variable.prompt.0.1", localName)[ FD ]
Line_24 $$ final BitSet prev = writes.get(instruction.num())-->Line_25 $$ if (prev.cardinality() == 1) [ FD ]
Line_8 $$ if (invokedOnReference) -->Line_47 $$ flow = ControlFlowUtils.findControlFlowOwner(variable).getControlFlow()[ CD ]
Line_29 $$ initializer = ((GrVariable) element).getInitializerGroovy()-->Line_48 $$ initializer = variable.getInitializerGroovy()[ FD ]
Line_35 $$ if (controlFlowOwner instanceof GrClosableBlock) -->Line_39 $$ if (parent instanceof GrMember)[ CD ]
Line_5 $$ GrExpression initializer = null-->Line_15 $$ do [ FD ]
Line_28 $$ if (element instanceof GrVariable) -->Line_30 $$ if (element instanceof GrReferenceExpression) [ CD ]
Line_20 $$ final ArrayList<BitSet> writes = ControlFlowUtils.inferWriteAccessMap(flow, variable)-->Line_24 $$ final BitSet prev = writes.get(instruction.num())[ FD ]
Line_15 $$ do -->Line_22 $$ Instruction instruction = ControlFlowUtils.findInstruction(finalCur, flow)[ CD ]
Line_15 $$ do -->Line_19 $$ flow = controlFlowOwner.getControlFlow()[ CD ]
Line_40 $$ cur = ((GrMember) parent).getContainingClass()-->Line_16 $$ controlFlowOwner = ControlFlowUtils.findControlFlowOwner(cur)[ FD ]
Line_6 $$ Instruction writeInstr = null-->Line_27 $$ final PsiElement element = writeInstr.getElement()[ FD ]
Line_2 $$ private static InlineLocalVarSettings createSettings(final GrVariable variable, Editor editor, boolean invokedOnReference) -->Line_66 $$ if (dialog.showAndGet()) [ CD ]
Line_19 $$ flow = controlFlowOwner.getControlFlow()-->Line_20 $$ final ArrayList<BitSet> writes = ControlFlowUtils.inferWriteAccessMap(flow, variable)[ FD ]
Line_15 $$ do -->Line_35 $$ if (controlFlowOwner instanceof GrClosableBlock) [ CD ]
Line_14 $$ GrControlFlowOwner controlFlowOwner-->Line_35 $$ if (controlFlowOwner instanceof GrClosableBlock) [ FD ]
Line_2 $$ private static InlineLocalVarSettings createSettings(final GrVariable variable, Editor editor, boolean invokedOnReference) -->Line_60 $$ int writeInstructionNumber = writeInstr.num()[ CD ]
Line_2 $$ private static InlineLocalVarSettings createSettings(final GrVariable variable, Editor editor, boolean invokedOnReference) -->Line_6 $$ Instruction writeInstr = null[ CD ]
Line_8 $$ if (invokedOnReference) -->Line_48 $$ initializer = variable.getInitializerGroovy()[ CD ]
Line_14 $$ GrControlFlowOwner controlFlowOwner-->Line_17 $$ if (controlFlowOwner == null)[ FD ]
Line_16 $$ controlFlowOwner = ControlFlowUtils.findControlFlowOwner(cur)-->Line_38 $$ PsiElement parent = controlFlowOwner.getParent()[ FD ]
Line_2 $$ private static InlineLocalVarSettings createSettings(final GrVariable variable, Editor editor, boolean invokedOnReference) -->Line_10 $$ final PsiReference ref = TargetElementUtil.findReference(editor)[ FD ]
Line_36 $$ cur = controlFlowOwner-->Line_40 $$ cur = ((GrMember) parent).getContainingClass()[ FD ]
Line_55 $$ if (initializer == null || writeInstr == null) -->Line_56 $$ String message = GroovyRefactoringBundle.message("cannot.find.a.single.definition.to.inline.local.var")[ CD ]
Line_26 $$ writeInstr = flow[prev.nextSetBit(0)]-->Line_60 $$ int writeInstructionNumber = writeInstr.num()[ FD ]
Line_31 $$ initializer = TypeInferenceHelper.getInitializerFor((GrReferenceExpression) element)-->Line_15 $$ do [ FD ]
Line_16 $$ controlFlowOwner = ControlFlowUtils.findControlFlowOwner(cur)-->Line_36 $$ cur = controlFlowOwner[ FD ]
Line_13 $$ if (cur instanceof GrReferenceExpression) -->Line_14 $$ GrControlFlowOwner controlFlowOwner[ CD ]
Line_25 $$ if (prev.cardinality() == 1) -->Line_27 $$ final PsiElement element = writeInstr.getElement()[ CD ]
Line_39 $$ if (parent instanceof GrMember)-->Line_40 $$ cur = ((GrMember) parent).getContainingClass()[ CD ]
Line_8 $$ if (invokedOnReference) -->Line_13 $$ if (cur instanceof GrReferenceExpression) [ CD ]
Line_2 $$ private static InlineLocalVarSettings createSettings(final GrVariable variable, Editor editor, boolean invokedOnReference) -->Line_61 $$ if (ApplicationManager.getApplication().isUnitTestMode()) [ CD ]
Line_27 $$ final PsiElement element = writeInstr.getElement()-->Line_28 $$ if (element instanceof GrVariable) [ FD ]
Line_28 $$ if (element instanceof GrVariable) -->Line_29 $$ initializer = ((GrVariable) element).getInitializerGroovy()[ CD ]
Line_6 $$ Instruction writeInstr = null-->Line_60 $$ int writeInstructionNumber = writeInstr.num()[ FD ]
Line_12 $$ PsiElement cur = ref.getElement()-->Line_40 $$ cur = ((GrMember) parent).getContainingClass()[ FD ]
Line_19 $$ flow = controlFlowOwner.getControlFlow()-->Line_47 $$ flow = ControlFlowUtils.findControlFlowOwner(variable).getControlFlow()[ FD ]
Line_26 $$ writeInstr = flow[prev.nextSetBit(0)]-->Line_49 $$ writeInstr = ContainerUtil.find(flow, new Condition<Instruction>() [ FD ]
Line_47 $$ flow = ControlFlowUtils.findControlFlowOwner(variable).getControlFlow()-->Line_49 $$ writeInstr = ContainerUtil.find(flow, new Condition<Instruction>() [ FD ]
Line_2 $$ private static InlineLocalVarSettings createSettings(final GrVariable variable, Editor editor, boolean invokedOnReference) -->Line_48 $$ initializer = variable.getInitializerGroovy()[ FD ]
Line_36 $$ cur = controlFlowOwner-->Line_42 $$ if (cur == old_cur)[ FD ]
Line_31 $$ initializer = TypeInferenceHelper.getInitializerFor((GrReferenceExpression) element)-->Line_48 $$ initializer = variable.getInitializerGroovy()[ FD ]
Line_66 $$ if (dialog.showAndGet()) -->Line_67 $$ return new InlineLocalVarSettings(initializer, writeInstructionNumber, flow)[ CD ]
Line_15 $$ do -->Line_23 $$ LOG.assertTrue(instruction != null)[ CD ]
Line_14 $$ GrControlFlowOwner controlFlowOwner-->Line_36 $$ cur = controlFlowOwner[ FD ]
Line_2 $$ private static InlineLocalVarSettings createSettings(final GrVariable variable, Editor editor, boolean invokedOnReference) -->Line_3 $$ final String localName = variable.getName()[ CD ]
Line_6 $$ Instruction writeInstr = null-->Line_49 $$ writeInstr = ContainerUtil.find(flow, new Condition<Instruction>() [ FD ]
Line_22 $$ Instruction instruction = ControlFlowUtils.findInstruction(finalCur, flow)-->Line_24 $$ final BitSet prev = writes.get(instruction.num())[ FD ]
Line_16 $$ controlFlowOwner = ControlFlowUtils.findControlFlowOwner(cur)-->Line_17 $$ if (controlFlowOwner == null)[ FD ]
Line_2 $$ private static InlineLocalVarSettings createSettings(final GrVariable variable, Editor editor, boolean invokedOnReference) -->Line_4 $$ final Project project = variable.getProject()[ CD ]
Line_2 $$ private static InlineLocalVarSettings createSettings(final GrVariable variable, Editor editor, boolean invokedOnReference) -->Line_47 $$ flow = ControlFlowUtils.findControlFlowOwner(variable).getControlFlow()[ FD ]
Line_35 $$ if (controlFlowOwner instanceof GrClosableBlock) -->Line_36 $$ cur = controlFlowOwner[ CD ]
Line_15 $$ do -->Line_21 $$ final PsiElement finalCur = cur[ CD ]
Line_35 $$ if (controlFlowOwner instanceof GrClosableBlock) -->Line_38 $$ PsiElement parent = controlFlowOwner.getParent()[ CD ]
Line_2 $$ private static InlineLocalVarSettings createSettings(final GrVariable variable, Editor editor, boolean invokedOnReference) -->Line_7 $$ Instruction[] flow = null[ CD ]
Line_7 $$ Instruction[] flow = null-->Line_49 $$ writeInstr = ContainerUtil.find(flow, new Condition<Instruction>() [ FD ]
Line_10 $$ final PsiReference ref = TargetElementUtil.findReference(editor)-->Line_12 $$ PsiElement cur = ref.getElement()[ FD ]
Line_15 $$ do -->Line_24 $$ final BitSet prev = writes.get(instruction.num())[ CD ]
Line_25 $$ if (prev.cardinality() == 1) -->Line_28 $$ if (element instanceof GrVariable) [ CD ]
Line_15 $$ do -->Line_42 $$ if (cur == old_cur)[ CD ]
Line_7 $$ Instruction[] flow = null-->Line_19 $$ flow = controlFlowOwner.getControlFlow()[ FD ]
Line_19 $$ flow = controlFlowOwner.getControlFlow()-->Line_49 $$ writeInstr = ContainerUtil.find(flow, new Condition<Instruction>() [ FD ]
Line_25 $$ if (prev.cardinality() == 1) -->Line_26 $$ writeInstr = flow[prev.nextSetBit(0)][ CD ]
Line_49 $$ writeInstr = ContainerUtil.find(flow, new Condition<Instruction>() -->Line_51 $$ return instruction.getElement() == variable[ FD ]
Line_8 $$ if (invokedOnReference) -->Line_12 $$ PsiElement cur = ref.getElement()[ CD ]
Line_12 $$ PsiElement cur = ref.getElement()-->Line_36 $$ cur = controlFlowOwner[ FD ]
Line_30 $$ if (element instanceof GrReferenceExpression) -->Line_31 $$ initializer = TypeInferenceHelper.getInitializerFor((GrReferenceExpression) element)[ CD ]
Line_2 $$ private static InlineLocalVarSettings createSettings(final GrVariable variable, Editor editor, boolean invokedOnReference) -->Line_5 $$ GrExpression initializer = null[ CD ]
Line_2 $$ private static InlineLocalVarSettings createSettings(final GrVariable variable, Editor editor, boolean invokedOnReference) -->Line_20 $$ final ArrayList<BitSet> writes = ControlFlowUtils.inferWriteAccessMap(flow, variable)[ FD ]
Line_29 $$ initializer = ((GrVariable) element).getInitializerGroovy()-->Line_15 $$ do [ FD ]
Line_5 $$ GrExpression initializer = null-->Line_48 $$ initializer = variable.getInitializerGroovy()[ FD ]
Line_7 $$ Instruction[] flow = null-->Line_20 $$ final ArrayList<BitSet> writes = ControlFlowUtils.inferWriteAccessMap(flow, variable)[ FD ]
Line_26 $$ writeInstr = flow[prev.nextSetBit(0)]-->Line_27 $$ final PsiElement element = writeInstr.getElement()[ FD ]
Line_7 $$ Instruction[] flow = null-->Line_22 $$ Instruction instruction = ControlFlowUtils.findInstruction(finalCur, flow)[ FD ]
Line_15 $$ do -->Line_34 $$ PsiElement old_cur = cur[ CD ]
Line_15 $$ do -->Line_25 $$ if (prev.cardinality() == 1) [ CD ]
Line_2 $$ private static InlineLocalVarSettings createSettings(final GrVariable variable, Editor editor, boolean invokedOnReference) -->Line_69 $$ return null[ CD ]
Line_2 $$ private static InlineLocalVarSettings createSettings(final GrVariable variable, Editor editor, boolean invokedOnReference) -->Line_4 $$ final Project project = variable.getProject()[ FD ]
Line_49 $$ writeInstr = ContainerUtil.find(flow, new Condition<Instruction>() -->Line_60 $$ int writeInstructionNumber = writeInstr.num()[ FD ]
Line_29 $$ initializer = ((GrVariable) element).getInitializerGroovy()-->Line_31 $$ initializer = TypeInferenceHelper.getInitializerFor((GrReferenceExpression) element)[ FD ]
Line_5 $$ GrExpression initializer = null-->Line_31 $$ initializer = TypeInferenceHelper.getInitializerFor((GrReferenceExpression) element)[ FD ]
Line_14 $$ GrControlFlowOwner controlFlowOwner-->Line_38 $$ PsiElement parent = controlFlowOwner.getParent()[ FD ]
Line_61 $$ if (ApplicationManager.getApplication().isUnitTestMode()) -->Line_62 $$ return new InlineLocalVarSettings(initializer, writeInstructionNumber, flow)[ CD ]
Line_55 $$ if (initializer == null || writeInstr == null) -->Line_58 $$ return null[ CD ]
Line_5 $$ GrExpression initializer = null-->Line_29 $$ initializer = ((GrVariable) element).getInitializerGroovy()[ FD ]
Line_27 $$ final PsiElement element = writeInstr.getElement()-->Line_30 $$ if (element instanceof GrReferenceExpression) [ FD ]
Line_12 $$ PsiElement cur = ref.getElement()-->Line_13 $$ if (cur instanceof GrReferenceExpression) [ FD ]
Line_38 $$ PsiElement parent = controlFlowOwner.getParent()-->Line_39 $$ if (parent instanceof GrMember)[ FD ]
Line_15 $$ do -->Line_16 $$ controlFlowOwner = ControlFlowUtils.findControlFlowOwner(cur)[ CD ]
Line_15 $$ do -->Line_20 $$ final ArrayList<BitSet> writes = ControlFlowUtils.inferWriteAccessMap(flow, variable)[ CD ]
Line_8 $$ if (invokedOnReference) -->Line_11 $$ LOG.assertTrue(ref != null)[ CD ]
Line_2 $$ private static InlineLocalVarSettings createSettings(final GrVariable variable, Editor editor, boolean invokedOnReference) -->Line_64 $$ final String question = GroovyRefactoringBundle.message("inline.local.variable.prompt.0.1", localName)[ CD ]
Line_8 $$ if (invokedOnReference) -->Line_9 $$ LOG.assertTrue(editor != null, "null editor but invokedOnReference==true")[ CD ]
Line_6 $$ Instruction writeInstr = null-->Line_26 $$ writeInstr = flow[prev.nextSetBit(0)][ FD ]
Line_49 $$ writeInstr = ContainerUtil.find(flow, new Condition<Instruction>() -->Line_51 $$ return instruction.getElement() == variable[ CD ]
Line_12 $$ PsiElement cur = ref.getElement()-->Line_42 $$ if (cur == old_cur)[ FD ]
Line_2 $$ private static InlineLocalVarSettings createSettings(final GrVariable variable, Editor editor, boolean invokedOnReference) -->Line_3 $$ final String localName = variable.getName()[ FD ]
Line_12 $$ PsiElement cur = ref.getElement()-->Line_16 $$ controlFlowOwner = ControlFlowUtils.findControlFlowOwner(cur)[ FD ]
Line_16 $$ controlFlowOwner = ControlFlowUtils.findControlFlowOwner(cur)-->Line_35 $$ if (controlFlowOwner instanceof GrClosableBlock) [ FD ]
Line_40 $$ cur = ((GrMember) parent).getContainingClass()-->Line_42 $$ if (cur == old_cur)[ FD ]
Line_2 $$ private static InlineLocalVarSettings createSettings(final GrVariable variable, Editor editor, boolean invokedOnReference) -->Line_57 $$ CommonRefactoringUtil.showErrorHint(variable.getProject(), editor, message, INLINE_VARIABLE, HelpID.INLINE_VARIABLE)[ FD ]
Line_8 $$ if (invokedOnReference) -->Line_10 $$ final PsiReference ref = TargetElementUtil.findReference(editor)[ CD ]
Line_2 $$ private static InlineLocalVarSettings createSettings(final GrVariable variable, Editor editor, boolean invokedOnReference) -->Line_8 $$ if (invokedOnReference) [ CD ]
Line_14 $$ GrControlFlowOwner controlFlowOwner-->Line_19 $$ flow = controlFlowOwner.getControlFlow()[ FD ]
Line_2 $$ private static InlineLocalVarSettings createSettings(final GrVariable variable, Editor editor, boolean invokedOnReference) -->Line_55 $$ if (initializer == null || writeInstr == null) [ CD ]
Line_15 $$ do -->Line_17 $$ if (controlFlowOwner == null)[ CD ]
Line_13 $$ if (cur instanceof GrReferenceExpression) -->Line_15 $$ do [ CD ]
Line_22 $$ Instruction instruction = ControlFlowUtils.findInstruction(finalCur, flow)-->Line_51 $$ return instruction.getElement() == variable[ FD ]
Line_36 $$ cur = controlFlowOwner-->Line_16 $$ controlFlowOwner = ControlFlowUtils.findControlFlowOwner(cur)[ FD ]
Line_8 $$ if (invokedOnReference) -->Line_49 $$ writeInstr = ContainerUtil.find(flow, new Condition<Instruction>() [ CD ]
