Line_6 $$ int n = decode(i)-->Line_7 $$ if (n < 0) [ FD ]
Line_4 $$ int a = 0, b = out.length-->Line_13 $$ reverse(out, 0, a)[ FD ]
Line_3 $$ int[] out = new int[ints.cardinality()]-->Line_14 $$ reverse(out, a, out.length)[ FD ]
Line_4 $$ int a = 0, b = out.length-->Line_10 $$ out[--b] = n[ FD ]
Line_2 $$ int[] toIntArray() -->Line_5 $$ for (int i = -1; (i = ints.nextSetBit(i + 1)) >= 0; ) [ CD ]
Line_7 $$ if (n < 0) -->Line_8 $$ out[a++] = n[ CD ]
Line_3 $$ int[] out = new int[ints.cardinality()]-->Line_13 $$ reverse(out, 0, a)[ FD ]
Line_6 $$ int n = decode(i)-->Line_8 $$ out[a++] = n[ FD ]
Line_2 $$ int[] toIntArray() -->Line_4 $$ int a = 0, b = out.length[ CD ]
Line_5 $$ for (int i = -1; (i = ints.nextSetBit(i + 1)) >= 0; ) -->Line_6 $$ int n = decode(i)[ FD ]
Line_5 $$ for (int i = -1; (i = ints.nextSetBit(i + 1)) >= 0; ) -->Line_7 $$ if (n < 0) [ CD ]
Line_5 $$ for (int i = -1; (i = ints.nextSetBit(i + 1)) >= 0; ) -->Line_6 $$ int n = decode(i)[ CD ]
Line_2 $$ int[] toIntArray() -->Line_14 $$ reverse(out, a, out.length)[ CD ]
Line_2 $$ int[] toIntArray() -->Line_13 $$ reverse(out, 0, a)[ CD ]
Line_2 $$ int[] toIntArray() -->Line_3 $$ int[] out = new int[ints.cardinality()][ CD ]
Line_6 $$ int n = decode(i)-->Line_10 $$ out[--b] = n[ FD ]
Line_4 $$ int a = 0, b = out.length-->Line_14 $$ reverse(out, a, out.length)[ FD ]
Line_4 $$ int a = 0, b = out.length-->Line_8 $$ out[a++] = n[ FD ]
Line_2 $$ int[] toIntArray() -->Line_15 $$ return out[ CD ]
Line_7 $$ if (n < 0) -->Line_10 $$ out[--b] = n[ CD ]
