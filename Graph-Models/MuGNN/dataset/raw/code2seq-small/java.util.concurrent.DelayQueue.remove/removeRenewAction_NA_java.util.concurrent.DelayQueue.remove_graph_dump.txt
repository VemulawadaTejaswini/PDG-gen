Line_2 $$ public <T extends FileSystem & Renewable> void removeRenewAction(final T fs) throws IOException -->Line_3 $$ RenewAction<T> action = new RenewAction<T>(fs)[ CD ]
Line_2 $$ public <T extends FileSystem & Renewable> void removeRenewAction(final T fs) throws IOException -->Line_8 $$ LOG.error("Interrupted while canceling token for " + fs.getUri() + "filesystem")[ FD ]
Line_3 $$ RenewAction<T> action = new RenewAction<T>(fs)-->Line_4 $$ if (queue.remove(action)) [ FD ]
Line_9 $$ if (LOG.isDebugEnabled()) -->Line_10 $$ LOG.debug(ie.getStackTrace())[ CD ]
Line_3 $$ RenewAction<T> action = new RenewAction<T>(fs)-->Line_6 $$ action.cancel()[ FD ]
Line_2 $$ public <T extends FileSystem & Renewable> void removeRenewAction(final T fs) throws IOException -->Line_4 $$ if (queue.remove(action)) [ CD ]
