Line_2 $$ private static Optional<MethodHandle> getInstanceFactory(Method method) throws IllegalAccessException -->Line_4 $$ if (!Modifier.isStatic(method.getModifiers())) [ FD ]
Line_3 $$ Optional<MethodHandle> instanceFactory = Optional.empty()-->Line_6 $$ instanceFactory = Optional.of(lookup().unreflectConstructor(method.getDeclaringClass().getConstructor()))[ FD ]
Line_2 $$ private static Optional<MethodHandle> getInstanceFactory(Method method) throws IllegalAccessException -->Line_3 $$ Optional<MethodHandle> instanceFactory = Optional.empty()[ CD ]
Line_2 $$ private static Optional<MethodHandle> getInstanceFactory(Method method) throws IllegalAccessException -->Line_11 $$ return instanceFactory[ CD ]
Line_2 $$ private static Optional<MethodHandle> getInstanceFactory(Method method) throws IllegalAccessException -->Line_4 $$ if (!Modifier.isStatic(method.getModifiers())) [ CD ]
Line_2 $$ private static Optional<MethodHandle> getInstanceFactory(Method method) throws IllegalAccessException -->Line_6 $$ instanceFactory = Optional.of(lookup().unreflectConstructor(method.getDeclaringClass().getConstructor()))[ FD ]
Line_2 $$ private static Optional<MethodHandle> getInstanceFactory(Method method) throws IllegalAccessException -->Line_8 $$ throw new PrestoException(FUNCTION_IMPLEMENTATION_ERROR, format("%s is non-static, but its declaring class is missing a default constructor", method))[ FD ]
