Line_26 $$ if (myCommitMessageArea != null) -->Line_29 $$ commitPanel.add(separator, BorderLayout.NORTH)[ CD ]
Line_2 $$ public JComponent createCenterPanel() -->Line_3 $$ final JPanel mainPanel = new JPanel()[ CD ]
Line_14 $$ for (int i = 0; i < changesArray.length; i++) -->Line_15 $$ Change change = changesArray[i][ CD ]
Line_3 $$ final JPanel mainPanel = new JPanel()-->Line_4 $$ mainPanel.setLayout(new BorderLayout())[ FD ]
Line_6 $$ myChangesBrowser = new RepositoryChangesBrowser(myProject, Collections.singletonList(myChangeList), new ArrayList<Change>(myChangeList.getChanges()), myChangeList, myToSelect) -->Line_8 $$ super.buildToolBar(toolBarGroup)[ FD ]
Line_6 $$ myChangesBrowser = new RepositoryChangesBrowser(myProject, Collections.singletonList(myChangeList), new ArrayList<Change>(myChangeList.getChanges()), myChangeList, myToSelect) -->Line_9 $$ toolBarGroup.add(ActionManager.getInstance().getAction(VcsActions.ACTION_COPY_REVISION_NUMBER))[ CD ]
Line_26 $$ if (myCommitMessageArea != null) -->Line_28 $$ JComponent separator = SeparatorFactory.createSeparator(VcsBundle.message("label.commit.comment"), myCommitMessageArea)[ CD ]
Line_2 $$ public JComponent createCenterPanel() -->Line_24 $$ myChangesBrowser.setUseCase(myInAir ? CommittedChangesBrowserUseCase.IN_AIR : null)[ CD ]
Line_5 $$ final Splitter splitter = new Splitter(true, 0.8f)-->Line_31 $$ splitter.setSecondComponent(commitPanel)[ FD ]
Line_6 $$ myChangesBrowser = new RepositoryChangesBrowser(myProject, Collections.singletonList(myChangeList), new ArrayList<Change>(myChangeList.getChanges()), myChangeList, myToSelect) -->Line_8 $$ super.buildToolBar(toolBarGroup)[ CD ]
Line_35 $$ if (description != null) -->Line_37 $$ descPanel.add(new JLabel(XmlStringUtil.wrapInHtml(description)))[ CD ]
Line_2 $$ public JComponent createCenterPanel() -->Line_41 $$ return mainPanel[ CD ]
Line_35 $$ if (description != null) -->Line_39 $$ mainPanel.add(descPanel, BorderLayout.NORTH)[ CD ]
Line_35 $$ if (description != null) -->Line_38 $$ descPanel.setBorder(BorderFactory.createEtchedBorder())[ CD ]
Line_6 $$ myChangesBrowser = new RepositoryChangesBrowser(myProject, Collections.singletonList(myChangeList), new ArrayList<Change>(myChangeList.getChanges()), myChangeList, myToSelect) -->Line_12 $$ if (myInAir && (myConvertor != null)) [ CD ]
Line_12 $$ if (myInAir && (myConvertor != null)) -->Line_13 $$ final Change[] convertedChanges = new Change[changesArray.length][ CD ]
Line_13 $$ final Change[] convertedChanges = new Change[changesArray.length]-->Line_18 $$ super.showDiffForChanges(convertedChanges, indexInSelection)[ FD ]
Line_12 $$ if (myInAir && (myConvertor != null)) -->Line_18 $$ super.showDiffForChanges(convertedChanges, indexInSelection)[ CD ]
Line_3 $$ final JPanel mainPanel = new JPanel()-->Line_33 $$ mainPanel.add(splitter, BorderLayout.CENTER)[ FD ]
Line_6 $$ myChangesBrowser = new RepositoryChangesBrowser(myProject, Collections.singletonList(myChangeList), new ArrayList<Change>(myChangeList.getChanges()), myChangeList, myToSelect) -->Line_9 $$ toolBarGroup.add(ActionManager.getInstance().getAction(VcsActions.ACTION_COPY_REVISION_NUMBER))[ FD ]
Line_2 $$ public JComponent createCenterPanel() -->Line_34 $$ final String description = getDescription()[ CD ]
Line_2 $$ public JComponent createCenterPanel() -->Line_5 $$ final Splitter splitter = new Splitter(true, 0.8f)[ CD ]
Line_3 $$ final JPanel mainPanel = new JPanel()-->Line_39 $$ mainPanel.add(descPanel, BorderLayout.NORTH)[ FD ]
Line_2 $$ public JComponent createCenterPanel() -->Line_4 $$ mainPanel.setLayout(new BorderLayout())[ CD ]
Line_6 $$ myChangesBrowser = new RepositoryChangesBrowser(myProject, Collections.singletonList(myChangeList), new ArrayList<Change>(myChangeList.getChanges()), myChangeList, myToSelect) -->Line_18 $$ super.showDiffForChanges(convertedChanges, indexInSelection)[ FD ]
Line_2 $$ public JComponent createCenterPanel() -->Line_26 $$ if (myCommitMessageArea != null) [ CD ]
Line_5 $$ final Splitter splitter = new Splitter(true, 0.8f)-->Line_33 $$ mainPanel.add(splitter, BorderLayout.CENTER)[ FD ]
Line_12 $$ if (myInAir && (myConvertor != null)) -->Line_20 $$ super.showDiffForChanges(changesArray, indexInSelection)[ CD ]
Line_2 $$ public JComponent createCenterPanel() -->Line_33 $$ mainPanel.add(splitter, BorderLayout.CENTER)[ CD ]
Line_6 $$ myChangesBrowser = new RepositoryChangesBrowser(myProject, Collections.singletonList(myChangeList), new ArrayList<Change>(myChangeList.getChanges()), myChangeList, myToSelect) -->Line_20 $$ super.showDiffForChanges(changesArray, indexInSelection)[ FD ]
Line_2 $$ public JComponent createCenterPanel() -->Line_35 $$ if (description != null) [ CD ]
Line_2 $$ public JComponent createCenterPanel() -->Line_25 $$ splitter.setFirstComponent(myChangesBrowser)[ CD ]
Line_14 $$ for (int i = 0; i < changesArray.length; i++) -->Line_16 $$ convertedChanges[i] = myConvertor.fun(change)[ CD ]
Line_5 $$ final Splitter splitter = new Splitter(true, 0.8f)-->Line_25 $$ splitter.setFirstComponent(myChangesBrowser)[ FD ]
Line_26 $$ if (myCommitMessageArea != null) -->Line_30 $$ commitPanel.add(commitMessageScroll, BorderLayout.CENTER)[ CD ]
Line_26 $$ if (myCommitMessageArea != null) -->Line_31 $$ splitter.setSecondComponent(commitPanel)[ CD ]
Line_15 $$ Change change = changesArray[i]-->Line_16 $$ convertedChanges[i] = myConvertor.fun(change)[ FD ]
Line_12 $$ if (myInAir && (myConvertor != null)) -->Line_14 $$ for (int i = 0; i < changesArray.length; i++) [ CD ]
