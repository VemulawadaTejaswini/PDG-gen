Line_4 $$ if (extension != null) -->Line_6 $$ if (path != null) [ CD ]
Line_2 $$ private static void addRootsFromModule(Module module, Collection<String> pythonPathList) -->Line_14 $$ final Facet[] facets = FacetManager.getInstance(module).getAllFacets()[ CD ]
Line_16 $$ if (facet instanceof PythonPathContributingFacet) -->Line_18 $$ if (more_paths != null)[ CD ]
Line_5 $$ final VirtualFile path = extension.getCompilerOutputPath()-->Line_6 $$ if (path != null) [ FD ]
Line_4 $$ if (extension != null) -->Line_9 $$ final VirtualFile pathForTests = extension.getCompilerOutputPathForTests()[ CD ]
Line_15 $$ for (Facet facet : facets) -->Line_16 $$ if (facet instanceof PythonPathContributingFacet) [ FD ]
Line_5 $$ final VirtualFile path = extension.getCompilerOutputPath()-->Line_7 $$ pythonPathList.add(path.getPath())[ FD ]
Line_2 $$ private static void addRootsFromModule(Module module, Collection<String> pythonPathList) -->Line_3 $$ final CompilerModuleExtension extension = CompilerModuleExtension.getInstance(module)[ FD ]
Line_2 $$ private static void addRootsFromModule(Module module, Collection<String> pythonPathList) -->Line_11 $$ pythonPathList.add(pathForTests.getPath())[ FD ]
Line_2 $$ private static void addRootsFromModule(Module module, Collection<String> pythonPathList) -->Line_7 $$ pythonPathList.add(path.getPath())[ FD ]
Line_6 $$ if (path != null) -->Line_7 $$ pythonPathList.add(path.getPath())[ CD ]
Line_18 $$ if (more_paths != null)-->Line_19 $$ pythonPathList.addAll(more_paths)[ CD ]
Line_3 $$ final CompilerModuleExtension extension = CompilerModuleExtension.getInstance(module)-->Line_5 $$ final VirtualFile path = extension.getCompilerOutputPath()[ FD ]
Line_3 $$ final CompilerModuleExtension extension = CompilerModuleExtension.getInstance(module)-->Line_9 $$ final VirtualFile pathForTests = extension.getCompilerOutputPathForTests()[ FD ]
Line_9 $$ final VirtualFile pathForTests = extension.getCompilerOutputPathForTests()-->Line_11 $$ pythonPathList.add(pathForTests.getPath())[ FD ]
Line_10 $$ if (pathForTests != null) -->Line_11 $$ pythonPathList.add(pathForTests.getPath())[ CD ]
Line_9 $$ final VirtualFile pathForTests = extension.getCompilerOutputPathForTests()-->Line_10 $$ if (pathForTests != null) [ FD ]
Line_4 $$ if (extension != null) -->Line_5 $$ final VirtualFile path = extension.getCompilerOutputPath()[ CD ]
Line_17 $$ List<String> more_paths = ((PythonPathContributingFacet) facet).getAdditionalPythonPath()-->Line_19 $$ pythonPathList.addAll(more_paths)[ FD ]
Line_2 $$ private static void addRootsFromModule(Module module, Collection<String> pythonPathList) -->Line_3 $$ final CompilerModuleExtension extension = CompilerModuleExtension.getInstance(module)[ CD ]
Line_2 $$ private static void addRootsFromModule(Module module, Collection<String> pythonPathList) -->Line_14 $$ final Facet[] facets = FacetManager.getInstance(module).getAllFacets()[ FD ]
Line_2 $$ private static void addRootsFromModule(Module module, Collection<String> pythonPathList) -->Line_19 $$ pythonPathList.addAll(more_paths)[ FD ]
Line_16 $$ if (facet instanceof PythonPathContributingFacet) -->Line_17 $$ List<String> more_paths = ((PythonPathContributingFacet) facet).getAdditionalPythonPath()[ CD ]
Line_17 $$ List<String> more_paths = ((PythonPathContributingFacet) facet).getAdditionalPythonPath()-->Line_18 $$ if (more_paths != null)[ FD ]
Line_2 $$ private static void addRootsFromModule(Module module, Collection<String> pythonPathList) -->Line_4 $$ if (extension != null) [ CD ]
Line_4 $$ if (extension != null) -->Line_10 $$ if (pathForTests != null) [ CD ]
Line_3 $$ final CompilerModuleExtension extension = CompilerModuleExtension.getInstance(module)-->Line_4 $$ if (extension != null) [ FD ]
