Line_2 $$ public static Collection<URL> getClassLoaderUrls(Collection<URL> urls) -->Line_3 $$ List<URL> additionalRefs = new ArrayList<URL>()[ CD ]
Line_3 $$ List<URL> additionalRefs = new ArrayList<URL>()-->Line_11 $$ additionalRefs.add(new URL(referencedJar))[ FD ]
Line_18 $$ if (!additionalRefs.isEmpty()) -->Line_21 $$ return result[ CD ]
Line_7 $$ final String[] referencedJars = ClassPath.loadManifestClasspath(file)-->Line_8 $$ if (referencedJars != null) [ FD ]
Line_5 $$ if ("file".equals(url.getProtocol())) -->Line_7 $$ final String[] referencedJars = ClassPath.loadManifestClasspath(file)[ CD ]
Line_4 $$ for (URL url : urls) -->Line_6 $$ File file = new File(decodeUrl(url.getFile()))[ FD ]
Line_2 $$ public static Collection<URL> getClassLoaderUrls(Collection<URL> urls) -->Line_23 $$ return urls[ CD ]
Line_3 $$ List<URL> additionalRefs = new ArrayList<URL>()-->Line_18 $$ if (!additionalRefs.isEmpty()) [ FD ]
Line_2 $$ public static Collection<URL> getClassLoaderUrls(Collection<URL> urls) -->Line_18 $$ if (!additionalRefs.isEmpty()) [ CD ]
Line_5 $$ if ("file".equals(url.getProtocol())) -->Line_6 $$ File file = new File(decodeUrl(url.getFile()))[ CD ]
Line_19 $$ Collection<URL> result = new ArrayList<URL>(urls)-->Line_20 $$ result.addAll(additionalRefs)[ FD ]
Line_5 $$ if ("file".equals(url.getProtocol())) -->Line_8 $$ if (referencedJars != null) [ CD ]
Line_6 $$ File file = new File(decodeUrl(url.getFile()))-->Line_7 $$ final String[] referencedJars = ClassPath.loadManifestClasspath(file)[ FD ]
Line_18 $$ if (!additionalRefs.isEmpty()) -->Line_19 $$ Collection<URL> result = new ArrayList<URL>(urls)[ CD ]
Line_18 $$ if (!additionalRefs.isEmpty()) -->Line_20 $$ result.addAll(additionalRefs)[ CD ]
Line_4 $$ for (URL url : urls) -->Line_5 $$ if ("file".equals(url.getProtocol())) [ FD ]
Line_3 $$ List<URL> additionalRefs = new ArrayList<URL>()-->Line_20 $$ result.addAll(additionalRefs)[ FD ]
