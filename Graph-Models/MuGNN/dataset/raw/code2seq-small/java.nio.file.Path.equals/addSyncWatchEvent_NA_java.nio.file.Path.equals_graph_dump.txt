Line_40 $$ if (fileType.equals(SyncFile.TYPE_FOLDER)) -->Line_45 $$ Watcher watcher = WatcherRegistry.getWatcher(getSyncAccountId())[ CD ]
Line_63 $$ if ((syncFile != null) && fileType.equals(SyncFile.TYPE_FOLDER)) -->Line_69 $$ lastSyncWatchEvent.setEventType(SyncWatchEvent.EVENT_TYPE_MOVE)[ CD ]
Line_63 $$ if ((syncFile != null) && fileType.equals(SyncFile.TYPE_FOLDER)) -->Line_70 $$ lastSyncWatchEvent.setFilePathName(filePathName)[ CD ]
Line_73 $$ if (fileType.equals(SyncFile.TYPE_FOLDER)) -->Line_75 $$ watcher.walkFileTree(Paths.get(filePathName))[ CD ]
Line_4 $$ String filePathName = filePath.toString()-->Line_11 $$ if (filePathName.equals(syncAccount.getFilePathName()) || parentFilePathName.equals(syncAccount.getFilePathName())) [ FD ]
Line_30 $$ SyncWatchEvent lastSyncWatchEvent = SyncWatchEventService.getLastSyncWatchEvent(getSyncAccountId())-->Line_50 $$ SyncWatchEventService.deleteSyncWatchEvent(lastSyncWatchEvent.getSyncWatchEventId())[ FD ]
Line_30 $$ SyncWatchEvent lastSyncWatchEvent = SyncWatchEventService.getLastSyncWatchEvent(getSyncAccountId())-->Line_53 $$ lastSyncWatchEvent.setEventType(SyncWatchEvent.EVENT_TYPE_RENAME)[ FD ]
Line_8 $$ if (isDuplicateEvent(eventType, filePath.toString(), getSyncAccountId())) -->Line_9 $$ return[ CD ]
Line_2 $$ protected synchronized void addSyncWatchEvent(String eventType, Path filePath) -->Line_67 $$ watchEvent(SyncWatchEvent.EVENT_TYPE_DELETE, filePath)[ FD ]
Line_33 $$ previousFilePath = Paths.get(lastSyncWatchEvent.getFilePathName())-->Line_71 $$ lastSyncWatchEvent.setPreviousFilePathName(previousFilePath.toString())[ FD ]
Line_7 $$ SyncAccount syncAccount = SyncAccountService.fetchSyncAccount(getSyncAccountId())-->Line_11 $$ if (filePathName.equals(syncAccount.getFilePathName()) || parentFilePathName.equals(syncAccount.getFilePathName())) [ FD ]
Line_37 $$ if ((lastSyncWatchEvent == null) || !previousEventType.equals(SyncWatchEvent.EVENT_TYPE_RENAME_FROM) || (previousRepositoryId != repositoryId)) -->Line_48 $$ if (parentFilePath.equals(previousFilePath.getParent())) [ CD ]
Line_36 $$ String fileType = getFileType(eventType, filePath)-->Line_40 $$ if (fileType.equals(SyncFile.TYPE_FOLDER)) [ FD ]
Line_4 $$ String filePathName = filePath.toString()-->Line_62 $$ SyncFile syncFile = SyncFileService.fetchSyncFile(filePathName)[ FD ]
Line_4 $$ String filePathName = filePath.toString()-->Line_75 $$ watcher.walkFileTree(Paths.get(filePathName))[ FD ]
Line_48 $$ if (parentFilePath.equals(previousFilePath.getParent())) -->Line_56 $$ SyncWatchEventService.update(lastSyncWatchEvent)[ CD ]
Line_30 $$ SyncWatchEvent lastSyncWatchEvent = SyncWatchEventService.getLastSyncWatchEvent(getSyncAccountId())-->Line_72 $$ SyncWatchEventService.update(lastSyncWatchEvent)[ FD ]
Line_18 $$ SyncSite syncSite = SyncSiteService.fetchSyncSite(repositoryId, getSyncAccountId())-->Line_20 $$ if (!activeSyncSiteIds.contains(syncSite.getSyncSiteId())) [ FD ]
Line_31 $$ if (lastSyncWatchEvent != null) -->Line_32 $$ previousEventType = lastSyncWatchEvent.getEventType()[ CD ]
Line_28 $$ Path previousFilePath = null-->Line_71 $$ lastSyncWatchEvent.setPreviousFilePathName(previousFilePath.toString())[ FD ]
Line_14 $$ long repositoryId = getRepositoryId(filePath)-->Line_15 $$ if (repositoryId <= 0) [ FD ]
Line_42 $$ if (syncFile != null) -->Line_43 $$ FileUtil.fireDeleteEvents(Paths.get(filePathName))[ CD ]
Line_48 $$ if (parentFilePath.equals(previousFilePath.getParent())) -->Line_54 $$ lastSyncWatchEvent.setFilePathName(filePathName)[ CD ]
Line_4 $$ String filePathName = filePath.toString()-->Line_39 $$ SyncWatchEventService.addSyncWatchEvent(eventType, filePathName, getFileType(eventType, filePath), null, getSyncAccountId())[ FD ]
Line_48 $$ if (parentFilePath.equals(previousFilePath.getParent())) -->Line_55 $$ lastSyncWatchEvent.setPreviousFilePathName(previousFilePath.toString())[ CD ]
Line_38 $$ eventType = SyncWatchEvent.EVENT_TYPE_CREATE-->Line_39 $$ SyncWatchEventService.addSyncWatchEvent(eventType, filePathName, getFileType(eventType, filePath), null, getSyncAccountId())[ FD ]
Line_32 $$ previousEventType = lastSyncWatchEvent.getEventType()-->Line_37 $$ if ((lastSyncWatchEvent == null) || !previousEventType.equals(SyncWatchEvent.EVENT_TYPE_RENAME_FROM) || (previousRepositoryId != repositoryId)) [ FD ]
Line_36 $$ String fileType = getFileType(eventType, filePath)-->Line_63 $$ if ((syncFile != null) && fileType.equals(SyncFile.TYPE_FOLDER)) [ FD ]
Line_2 $$ protected synchronized void addSyncWatchEvent(String eventType, Path filePath) -->Line_8 $$ if (isDuplicateEvent(eventType, filePath.toString(), getSyncAccountId())) [ FD ]
Line_11 $$ if (filePathName.equals(syncAccount.getFilePathName()) || parentFilePathName.equals(syncAccount.getFilePathName())) -->Line_12 $$ return[ CD ]
Line_2 $$ protected synchronized void addSyncWatchEvent(String eventType, Path filePath) -->Line_23 $$ if (!eventType.equals(SyncWatchEvent.EVENT_TYPE_RENAME_TO)) [ FD ]
Line_2 $$ protected synchronized void addSyncWatchEvent(String eventType, Path filePath) -->Line_39 $$ SyncWatchEventService.addSyncWatchEvent(eventType, filePathName, getFileType(eventType, filePath), null, getSyncAccountId())[ FD ]
Line_31 $$ if (lastSyncWatchEvent != null) -->Line_34 $$ previousRepositoryId = getRepositoryId(previousFilePath)[ CD ]
Line_33 $$ previousFilePath = Paths.get(lastSyncWatchEvent.getFilePathName())-->Line_55 $$ lastSyncWatchEvent.setPreviousFilePathName(previousFilePath.toString())[ FD ]
Line_4 $$ String filePathName = filePath.toString()-->Line_41 $$ SyncFile syncFile = SyncFileService.fetchSyncFile(filePathName)[ FD ]
Line_4 $$ String filePathName = filePath.toString()-->Line_46 $$ watcher.walkFileTree(Paths.get(filePathName))[ FD ]
Line_36 $$ String fileType = getFileType(eventType, filePath)-->Line_73 $$ if (fileType.equals(SyncFile.TYPE_FOLDER)) [ FD ]
Line_5 $$ Path parentFilePath = filePath.getParent()-->Line_48 $$ if (parentFilePath.equals(previousFilePath.getParent())) [ FD ]
Line_33 $$ previousFilePath = Paths.get(lastSyncWatchEvent.getFilePathName())-->Line_48 $$ if (parentFilePath.equals(previousFilePath.getParent())) [ FD ]
Line_14 $$ long repositoryId = getRepositoryId(filePath)-->Line_18 $$ SyncSite syncSite = SyncSiteService.fetchSyncSite(repositoryId, getSyncAccountId())[ FD ]
Line_30 $$ SyncWatchEvent lastSyncWatchEvent = SyncWatchEventService.getLastSyncWatchEvent(getSyncAccountId())-->Line_33 $$ previousFilePath = Paths.get(lastSyncWatchEvent.getFilePathName())[ FD ]
Line_63 $$ if ((syncFile != null) && fileType.equals(SyncFile.TYPE_FOLDER)) -->Line_73 $$ if (fileType.equals(SyncFile.TYPE_FOLDER)) [ CD ]
Line_4 $$ String filePathName = filePath.toString()-->Line_64 $$ FileUtil.fireDeleteEvents(Paths.get(filePathName))[ FD ]
Line_28 $$ Path previousFilePath = null-->Line_33 $$ previousFilePath = Paths.get(lastSyncWatchEvent.getFilePathName())[ FD ]
Line_15 $$ if (repositoryId <= 0) -->Line_16 $$ return[ CD ]
Line_23 $$ if (!eventType.equals(SyncWatchEvent.EVENT_TYPE_RENAME_TO)) -->Line_24 $$ SyncWatchEventService.addSyncWatchEvent(eventType, filePathName, getFileType(eventType, filePath), null, getSyncAccountId())[ CD ]
Line_2 $$ protected synchronized void addSyncWatchEvent(String eventType, Path filePath) -->Line_49 $$ if (MSOfficeFileUtil.isTempRenamedFile(filePath) && MSOfficeFileUtil.isExcelFile(previousFilePath)) [ FD ]
Line_4 $$ String filePathName = filePath.toString()-->Line_24 $$ SyncWatchEventService.addSyncWatchEvent(eventType, filePathName, getFileType(eventType, filePath), null, getSyncAccountId())[ FD ]
Line_6 $$ String parentFilePathName = parentFilePath.toString()-->Line_11 $$ if (filePathName.equals(syncAccount.getFilePathName()) || parentFilePathName.equals(syncAccount.getFilePathName())) [ FD ]
Line_30 $$ SyncWatchEvent lastSyncWatchEvent = SyncWatchEventService.getLastSyncWatchEvent(getSyncAccountId())-->Line_71 $$ lastSyncWatchEvent.setPreviousFilePathName(previousFilePath.toString())[ FD ]
Line_33 $$ previousFilePath = Paths.get(lastSyncWatchEvent.getFilePathName())-->Line_49 $$ if (MSOfficeFileUtil.isTempRenamedFile(filePath) && MSOfficeFileUtil.isExcelFile(previousFilePath)) [ FD ]
Line_4 $$ String filePathName = filePath.toString()-->Line_43 $$ FileUtil.fireDeleteEvents(Paths.get(filePathName))[ FD ]
Line_28 $$ Path previousFilePath = null-->Line_55 $$ lastSyncWatchEvent.setPreviousFilePathName(previousFilePath.toString())[ FD ]
Line_30 $$ SyncWatchEvent lastSyncWatchEvent = SyncWatchEventService.getLastSyncWatchEvent(getSyncAccountId())-->Line_54 $$ lastSyncWatchEvent.setFilePathName(filePathName)[ FD ]
Line_2 $$ protected synchronized void addSyncWatchEvent(String eventType, Path filePath) -->Line_24 $$ SyncWatchEventService.addSyncWatchEvent(eventType, filePathName, getFileType(eventType, filePath), null, getSyncAccountId())[ FD ]
Line_23 $$ if (!eventType.equals(SyncWatchEvent.EVENT_TYPE_RENAME_TO)) -->Line_25 $$ return[ CD ]
Line_4 $$ String filePathName = filePath.toString()-->Line_66 $$ watcher.walkFileTree(Paths.get(filePathName))[ FD ]
Line_30 $$ SyncWatchEvent lastSyncWatchEvent = SyncWatchEventService.getLastSyncWatchEvent(getSyncAccountId())-->Line_56 $$ SyncWatchEventService.update(lastSyncWatchEvent)[ FD ]
Line_2 $$ protected synchronized void addSyncWatchEvent(String eventType, Path filePath) -->Line_5 $$ Path parentFilePath = filePath.getParent()[ FD ]
Line_19 $$ Set<Long> activeSyncSiteIds = SyncSiteService.getActiveSyncSiteIds(getSyncAccountId())-->Line_20 $$ if (!activeSyncSiteIds.contains(syncSite.getSyncSiteId())) [ FD ]
Line_31 $$ if (lastSyncWatchEvent != null) -->Line_33 $$ previousFilePath = Paths.get(lastSyncWatchEvent.getFilePathName())[ CD ]
Line_30 $$ SyncWatchEvent lastSyncWatchEvent = SyncWatchEventService.getLastSyncWatchEvent(getSyncAccountId())-->Line_55 $$ lastSyncWatchEvent.setPreviousFilePathName(previousFilePath.toString())[ FD ]
Line_27 $$ String previousEventType = null-->Line_37 $$ if ((lastSyncWatchEvent == null) || !previousEventType.equals(SyncWatchEvent.EVENT_TYPE_RENAME_FROM) || (previousRepositoryId != repositoryId)) [ FD ]
Line_37 $$ if ((lastSyncWatchEvent == null) || !previousEventType.equals(SyncWatchEvent.EVENT_TYPE_RENAME_FROM) || (previousRepositoryId != repositoryId)) -->Line_40 $$ if (fileType.equals(SyncFile.TYPE_FOLDER)) [ CD ]
Line_48 $$ if (parentFilePath.equals(previousFilePath.getParent())) -->Line_49 $$ if (MSOfficeFileUtil.isTempRenamedFile(filePath) && MSOfficeFileUtil.isExcelFile(previousFilePath)) [ CD ]
Line_57 $$ if (fileType.equals(SyncFile.TYPE_FOLDER)) -->Line_58 $$ Watcher watcher = WatcherRegistry.getWatcher(getSyncAccountId())[ CD ]
Line_49 $$ if (MSOfficeFileUtil.isTempRenamedFile(filePath) && MSOfficeFileUtil.isExcelFile(previousFilePath)) -->Line_51 $$ return[ CD ]
Line_30 $$ SyncWatchEvent lastSyncWatchEvent = SyncWatchEventService.getLastSyncWatchEvent(getSyncAccountId())-->Line_31 $$ if (lastSyncWatchEvent != null) [ FD ]
Line_30 $$ SyncWatchEvent lastSyncWatchEvent = SyncWatchEventService.getLastSyncWatchEvent(getSyncAccountId())-->Line_32 $$ previousEventType = lastSyncWatchEvent.getEventType()[ FD ]
Line_36 $$ String fileType = getFileType(eventType, filePath)-->Line_57 $$ if (fileType.equals(SyncFile.TYPE_FOLDER)) [ FD ]
Line_30 $$ SyncWatchEvent lastSyncWatchEvent = SyncWatchEventService.getLastSyncWatchEvent(getSyncAccountId())-->Line_70 $$ lastSyncWatchEvent.setFilePathName(filePathName)[ FD ]
Line_4 $$ String filePathName = filePath.toString()-->Line_70 $$ lastSyncWatchEvent.setFilePathName(filePathName)[ FD ]
Line_2 $$ protected synchronized void addSyncWatchEvent(String eventType, Path filePath) -->Line_4 $$ String filePathName = filePath.toString()[ FD ]
Line_45 $$ Watcher watcher = WatcherRegistry.getWatcher(getSyncAccountId())-->Line_46 $$ watcher.walkFileTree(Paths.get(filePathName))[ FD ]
Line_48 $$ if (parentFilePath.equals(previousFilePath.getParent())) -->Line_62 $$ SyncFile syncFile = SyncFileService.fetchSyncFile(filePathName)[ CD ]
Line_2 $$ protected synchronized void addSyncWatchEvent(String eventType, Path filePath) -->Line_36 $$ String fileType = getFileType(eventType, filePath)[ FD ]
Line_48 $$ if (parentFilePath.equals(previousFilePath.getParent())) -->Line_63 $$ if ((syncFile != null) && fileType.equals(SyncFile.TYPE_FOLDER)) [ CD ]
Line_57 $$ if (fileType.equals(SyncFile.TYPE_FOLDER)) -->Line_59 $$ watcher.walkFileTree(Paths.get(filePathName))[ CD ]
Line_33 $$ previousFilePath = Paths.get(lastSyncWatchEvent.getFilePathName())-->Line_34 $$ previousRepositoryId = getRepositoryId(previousFilePath)[ FD ]
Line_27 $$ String previousEventType = null-->Line_32 $$ previousEventType = lastSyncWatchEvent.getEventType()[ FD ]
Line_63 $$ if ((syncFile != null) && fileType.equals(SyncFile.TYPE_FOLDER)) -->Line_66 $$ watcher.walkFileTree(Paths.get(filePathName))[ CD ]
Line_45 $$ Watcher watcher = WatcherRegistry.getWatcher(getSyncAccountId())-->Line_75 $$ watcher.walkFileTree(Paths.get(filePathName))[ FD ]
Line_37 $$ if ((lastSyncWatchEvent == null) || !previousEventType.equals(SyncWatchEvent.EVENT_TYPE_RENAME_FROM) || (previousRepositoryId != repositoryId)) -->Line_39 $$ SyncWatchEventService.addSyncWatchEvent(eventType, filePathName, getFileType(eventType, filePath), null, getSyncAccountId())[ CD ]
Line_73 $$ if (fileType.equals(SyncFile.TYPE_FOLDER)) -->Line_74 $$ Watcher watcher = WatcherRegistry.getWatcher(getSyncAccountId())[ CD ]
Line_40 $$ if (fileType.equals(SyncFile.TYPE_FOLDER)) -->Line_42 $$ if (syncFile != null) [ CD ]
Line_40 $$ if (fileType.equals(SyncFile.TYPE_FOLDER)) -->Line_46 $$ watcher.walkFileTree(Paths.get(filePathName))[ CD ]
Line_40 $$ if (fileType.equals(SyncFile.TYPE_FOLDER)) -->Line_41 $$ SyncFile syncFile = SyncFileService.fetchSyncFile(filePathName)[ CD ]
Line_37 $$ if ((lastSyncWatchEvent == null) || !previousEventType.equals(SyncWatchEvent.EVENT_TYPE_RENAME_FROM) || (previousRepositoryId != repositoryId)) -->Line_38 $$ eventType = SyncWatchEvent.EVENT_TYPE_CREATE[ CD ]
Line_28 $$ Path previousFilePath = null-->Line_48 $$ if (parentFilePath.equals(previousFilePath.getParent())) [ FD ]
Line_63 $$ if ((syncFile != null) && fileType.equals(SyncFile.TYPE_FOLDER)) -->Line_65 $$ Watcher watcher = WatcherRegistry.getWatcher(getSyncAccountId())[ CD ]
Line_2 $$ protected synchronized void addSyncWatchEvent(String eventType, Path filePath) -->Line_38 $$ eventType = SyncWatchEvent.EVENT_TYPE_CREATE[ FD ]
Line_45 $$ Watcher watcher = WatcherRegistry.getWatcher(getSyncAccountId())-->Line_66 $$ watcher.walkFileTree(Paths.get(filePathName))[ FD ]
Line_20 $$ if (!activeSyncSiteIds.contains(syncSite.getSyncSiteId())) -->Line_21 $$ return[ CD ]
Line_63 $$ if ((syncFile != null) && fileType.equals(SyncFile.TYPE_FOLDER)) -->Line_72 $$ SyncWatchEventService.update(lastSyncWatchEvent)[ CD ]
Line_30 $$ SyncWatchEvent lastSyncWatchEvent = SyncWatchEventService.getLastSyncWatchEvent(getSyncAccountId())-->Line_69 $$ lastSyncWatchEvent.setEventType(SyncWatchEvent.EVENT_TYPE_MOVE)[ FD ]
Line_29 $$ long previousRepositoryId = 0-->Line_34 $$ previousRepositoryId = getRepositoryId(previousFilePath)[ FD ]
Line_41 $$ SyncFile syncFile = SyncFileService.fetchSyncFile(filePathName)-->Line_42 $$ if (syncFile != null) [ FD ]
Line_28 $$ Path previousFilePath = null-->Line_49 $$ if (MSOfficeFileUtil.isTempRenamedFile(filePath) && MSOfficeFileUtil.isExcelFile(previousFilePath)) [ FD ]
Line_45 $$ Watcher watcher = WatcherRegistry.getWatcher(getSyncAccountId())-->Line_59 $$ watcher.walkFileTree(Paths.get(filePathName))[ FD ]
Line_28 $$ Path previousFilePath = null-->Line_34 $$ previousRepositoryId = getRepositoryId(previousFilePath)[ FD ]
Line_4 $$ String filePathName = filePath.toString()-->Line_54 $$ lastSyncWatchEvent.setFilePathName(filePathName)[ FD ]
Line_5 $$ Path parentFilePath = filePath.getParent()-->Line_6 $$ String parentFilePathName = parentFilePath.toString()[ FD ]
Line_63 $$ if ((syncFile != null) && fileType.equals(SyncFile.TYPE_FOLDER)) -->Line_71 $$ lastSyncWatchEvent.setPreviousFilePathName(previousFilePath.toString())[ CD ]
Line_48 $$ if (parentFilePath.equals(previousFilePath.getParent())) -->Line_53 $$ lastSyncWatchEvent.setEventType(SyncWatchEvent.EVENT_TYPE_RENAME)[ CD ]
Line_48 $$ if (parentFilePath.equals(previousFilePath.getParent())) -->Line_57 $$ if (fileType.equals(SyncFile.TYPE_FOLDER)) [ CD ]
Line_63 $$ if ((syncFile != null) && fileType.equals(SyncFile.TYPE_FOLDER)) -->Line_64 $$ FileUtil.fireDeleteEvents(Paths.get(filePathName))[ CD ]
Line_49 $$ if (MSOfficeFileUtil.isTempRenamedFile(filePath) && MSOfficeFileUtil.isExcelFile(previousFilePath)) -->Line_50 $$ SyncWatchEventService.deleteSyncWatchEvent(lastSyncWatchEvent.getSyncWatchEventId())[ CD ]
Line_63 $$ if ((syncFile != null) && fileType.equals(SyncFile.TYPE_FOLDER)) -->Line_67 $$ watchEvent(SyncWatchEvent.EVENT_TYPE_DELETE, filePath)[ CD ]
Line_2 $$ protected synchronized void addSyncWatchEvent(String eventType, Path filePath) -->Line_14 $$ long repositoryId = getRepositoryId(filePath)[ FD ]
Line_4 $$ String filePathName = filePath.toString()-->Line_59 $$ watcher.walkFileTree(Paths.get(filePathName))[ FD ]
