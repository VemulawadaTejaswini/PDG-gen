Line_2 $$ static void checkClass(Map<String, Path> clazzes, String clazz, Path jarpath) -->Line_4 $$ if (previous != null) [ CD ]
Line_2 $$ static void checkClass(Map<String, Path> clazzes, String clazz, Path jarpath) -->Line_11 $$ if (clazz.startsWith("org.apache.log4j")) [ FD ]
Line_4 $$ if (previous != null) -->Line_5 $$ if (previous.equals(jarpath)) [ CD ]
Line_3 $$ Path previous = clazzes.put(clazz, jarpath)-->Line_5 $$ if (previous.equals(jarpath)) [ FD ]
Line_2 $$ static void checkClass(Map<String, Path> clazzes, String clazz, Path jarpath) -->Line_5 $$ if (previous.equals(jarpath)) [ FD ]
Line_5 $$ if (previous.equals(jarpath)) -->Line_6 $$ if (clazz.startsWith("org.apache.xmlbeans")) [ CD ]
Line_2 $$ static void checkClass(Map<String, Path> clazzes, String clazz, Path jarpath) -->Line_6 $$ if (clazz.startsWith("org.apache.xmlbeans")) [ FD ]
Line_2 $$ static void checkClass(Map<String, Path> clazzes, String clazz, Path jarpath) -->Line_14 $$ if (clazz.equals("org.joda.time.base.BaseDateTime")) [ FD ]
Line_14 $$ if (clazz.equals("org.joda.time.base.BaseDateTime")) -->Line_15 $$ return[ CD ]
Line_2 $$ static void checkClass(Map<String, Path> clazzes, String clazz, Path jarpath) -->Line_3 $$ Path previous = clazzes.put(clazz, jarpath)[ CD ]
Line_5 $$ if (previous.equals(jarpath)) -->Line_14 $$ if (clazz.equals("org.joda.time.base.BaseDateTime")) [ CD ]
Line_11 $$ if (clazz.startsWith("org.apache.log4j")) -->Line_12 $$ return[ CD ]
Line_6 $$ if (clazz.startsWith("org.apache.xmlbeans")) -->Line_7 $$ return[ CD ]
Line_5 $$ if (previous.equals(jarpath)) -->Line_11 $$ if (clazz.startsWith("org.apache.log4j")) [ CD ]
Line_3 $$ Path previous = clazzes.put(clazz, jarpath)-->Line_4 $$ if (previous != null) [ FD ]
Line_2 $$ static void checkClass(Map<String, Path> clazzes, String clazz, Path jarpath) -->Line_3 $$ Path previous = clazzes.put(clazz, jarpath)[ FD ]
