Line_3 $$ return new Comparator<T>() -->Line_13 $$ if (!o1Last && o2Last) [ CD ]
Line_3 $$ return new Comparator<T>() -->Line_6 $$ boolean o2Last = comparator.compare(o2, lastValue) == 0[ FD ]
Line_6 $$ boolean o2Last = comparator.compare(o2, lastValue) == 0-->Line_7 $$ if (o1Last && o2Last) [ FD ]
Line_6 $$ boolean o2Last = comparator.compare(o2, lastValue) == 0-->Line_13 $$ if (!o1Last && o2Last) [ FD ]
Line_3 $$ return new Comparator<T>() -->Line_16 $$ return comparator.compare(o1, o2)[ FD ]
Line_2 $$ public static <T> Comparator<T> last(final Comparator<? super T> comparator, final T lastValue) -->Line_6 $$ boolean o2Last = comparator.compare(o2, lastValue) == 0[ FD ]
Line_7 $$ if (o1Last && o2Last) -->Line_8 $$ return 0[ CD ]
Line_3 $$ return new Comparator<T>() -->Line_16 $$ return comparator.compare(o1, o2)[ CD ]
Line_3 $$ return new Comparator<T>() -->Line_10 $$ if (o1Last && !o2Last) [ CD ]
Line_3 $$ return new Comparator<T>() -->Line_6 $$ boolean o2Last = comparator.compare(o2, lastValue) == 0[ CD ]
Line_5 $$ boolean o1Last = comparator.compare(o1, lastValue) == 0-->Line_7 $$ if (o1Last && o2Last) [ FD ]
Line_6 $$ boolean o2Last = comparator.compare(o2, lastValue) == 0-->Line_10 $$ if (o1Last && !o2Last) [ FD ]
Line_2 $$ public static <T> Comparator<T> last(final Comparator<? super T> comparator, final T lastValue) -->Line_16 $$ return comparator.compare(o1, o2)[ FD ]
Line_3 $$ return new Comparator<T>() -->Line_5 $$ boolean o1Last = comparator.compare(o1, lastValue) == 0[ CD ]
Line_3 $$ return new Comparator<T>() -->Line_7 $$ if (o1Last && o2Last) [ CD ]
Line_3 $$ return new Comparator<T>() -->Line_5 $$ boolean o1Last = comparator.compare(o1, lastValue) == 0[ FD ]
Line_5 $$ boolean o1Last = comparator.compare(o1, lastValue) == 0-->Line_13 $$ if (!o1Last && o2Last) [ FD ]
Line_2 $$ public static <T> Comparator<T> last(final Comparator<? super T> comparator, final T lastValue) -->Line_3 $$ return new Comparator<T>() [ CD ]
Line_2 $$ public static <T> Comparator<T> last(final Comparator<? super T> comparator, final T lastValue) -->Line_5 $$ boolean o1Last = comparator.compare(o1, lastValue) == 0[ FD ]
Line_5 $$ boolean o1Last = comparator.compare(o1, lastValue) == 0-->Line_10 $$ if (o1Last && !o2Last) [ FD ]
Line_13 $$ if (!o1Last && o2Last) -->Line_14 $$ return -1[ CD ]
Line_10 $$ if (o1Last && !o2Last) -->Line_11 $$ return 1[ CD ]
