Line_2 $$ private <T> int fastMin(T[] items, Comparator<T> comp, int size) -->Line_10 $$ return lowestIdx[ CD ]
Line_5 $$ int comparison = comp.compare(items[i], items[lowestIdx])-->Line_6 $$ if (comparison < 0) [ FD ]
Line_2 $$ private <T> int fastMin(T[] items, Comparator<T> comp, int size) -->Line_4 $$ for (int i = 1; i < size; i++) [ CD ]
Line_6 $$ if (comparison < 0) -->Line_7 $$ lowestIdx = i[ CD ]
Line_4 $$ for (int i = 1; i < size; i++) -->Line_5 $$ int comparison = comp.compare(items[i], items[lowestIdx])[ CD ]
Line_4 $$ for (int i = 1; i < size; i++) -->Line_7 $$ lowestIdx = i[ FD ]
Line_2 $$ private <T> int fastMin(T[] items, Comparator<T> comp, int size) -->Line_4 $$ for (int i = 1; i < size; i++) [ FD ]
Line_2 $$ private <T> int fastMin(T[] items, Comparator<T> comp, int size) -->Line_5 $$ int comparison = comp.compare(items[i], items[lowestIdx])[ FD ]
Line_3 $$ int lowestIdx = 0-->Line_7 $$ lowestIdx = i[ FD ]
Line_4 $$ for (int i = 1; i < size; i++) -->Line_6 $$ if (comparison < 0) [ CD ]
Line_2 $$ private <T> int fastMin(T[] items, Comparator<T> comp, int size) -->Line_3 $$ int lowestIdx = 0[ CD ]
