Line_2 $$ private void autoEnforce() -->Line_3 $$ if (!detected && count > 1) [ CD ]
Line_3 $$ if (!detected && count > 1) -->Line_7 $$ for (int i = 1; i < count; i++) [ CD ]
Line_6 $$ V prev = (V) values[0]-->Line_12 $$ values[prevIdx] = prev = quickResolver.resolve(prev, next)[ FD ]
Line_9 $$ if (comparator.compare(prev, next) != 0)-->Line_11 $$ if (quickResolver != null)[ CD ]
Line_3 $$ if (!detected && count > 1) -->Line_4 $$ sort()[ CD ]
Line_12 $$ values[prevIdx] = prev = quickResolver.resolve(prev, next)-->Line_9 $$ if (comparator.compare(prev, next) != 0)[ FD ]
Line_6 $$ V prev = (V) values[0]-->Line_10 $$ values[++prevIdx] = prev = next[ FD ]
Line_10 $$ values[++prevIdx] = prev = next-->Line_12 $$ values[prevIdx] = prev = quickResolver.resolve(prev, next)[ FD ]
Line_7 $$ for (int i = 1; i < count; i++) -->Line_8 $$ V next = (V) values[i][ CD ]
Line_7 $$ for (int i = 1; i < count; i++) -->Line_9 $$ if (comparator.compare(prev, next) != 0)[ CD ]
Line_10 $$ values[++prevIdx] = prev = next-->Line_9 $$ if (comparator.compare(prev, next) != 0)[ FD ]
Line_3 $$ if (!detected && count > 1) -->Line_6 $$ V prev = (V) values[0][ CD ]
Line_8 $$ V next = (V) values[i]-->Line_10 $$ values[++prevIdx] = prev = next[ FD ]
Line_3 $$ if (!detected && count > 1) -->Line_5 $$ int prevIdx = 0[ CD ]
Line_9 $$ if (comparator.compare(prev, next) != 0)-->Line_10 $$ values[++prevIdx] = prev = next[ CD ]
Line_11 $$ if (quickResolver != null)-->Line_12 $$ values[prevIdx] = prev = quickResolver.resolve(prev, next)[ CD ]
Line_6 $$ V prev = (V) values[0]-->Line_9 $$ if (comparator.compare(prev, next) != 0)[ FD ]
Line_8 $$ V next = (V) values[i]-->Line_12 $$ values[prevIdx] = prev = quickResolver.resolve(prev, next)[ FD ]
Line_5 $$ int prevIdx = 0-->Line_10 $$ values[++prevIdx] = prev = next[ FD ]
Line_8 $$ V next = (V) values[i]-->Line_9 $$ if (comparator.compare(prev, next) != 0)[ FD ]
