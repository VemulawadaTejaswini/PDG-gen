Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_8 $$ assertEquals(0, comparator.compare("/hotels/new", "/hotels/new"))[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_22 $$ assertEquals(1, comparator.compare("/hotels/*", "/hotels/[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_14 $$ assertEquals(0, comparator.compare("/hotels/[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_19 $$ assertEquals(1, comparator.compare("/**", "/hotels/[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_26 $$ assertEquals(2, comparator.compare("/hotels/[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_6 $$ assertEquals(1, comparator.compare(null, "/hotels/new"))[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_16 $$ assertEquals(1, comparator.compare("/hotels/[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_7 $$ assertEquals(-1, comparator.compare("/hotels/new", null))[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_25 $$ assertEquals(-1, comparator.compare("/hotels/new", "/hotels/new.*"))[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_21 $$ assertEquals(-1, comparator.compare("/hotels/[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_23 $$ assertEquals(-1, comparator.compare("/hotels/*", "/hotels/*/**"))[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_24 $$ assertEquals(1, comparator.compare("/hotels/*/**", "/hotels/*"))[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_11 $$ assertEquals(0, comparator.compare("/hotels/*", "/hotels/*"))[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_32 $$ assertEquals(2, comparator.compare("/hotels/**/bookings/**", "/hotels/**"))[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_33 $$ assertEquals(-2, comparator.compare("/hotels/**", "/hotels/**/bookings/**"))[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_30 $$ assertEquals(1, comparator.compare("/hotels/foo/bar/**", "/hotels/[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_9 $$ assertEquals(-1, comparator.compare("/hotels/new", "/hotels/*"))[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_40 $$ assertEquals(1, comparator.compare("*/**", "*"))[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_12 $$ assertEquals(-1, comparator.compare("/hotels/new", "/hotels/[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_5 $$ assertEquals(0, comparator.compare(null, null))[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_10 $$ assertEquals(1, comparator.compare("/hotels/*", "/hotels/new"))[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_20 $$ assertEquals(0, comparator.compare("/**", "/**"))[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_29 $$ assertEquals(1, comparator.compare("/hotels/**", "/hotels/[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_15 $$ assertEquals(-1, comparator.compare("/hotels/[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_31 $$ assertEquals(-1, comparator.compare("/hotels/[ FD ]
Line_4 $$ Comparator<String> comparator = pathMatcher.getPatternComparator("/hotels/new")-->Line_13 $$ assertEquals(1, comparator.compare("/hotels/[ FD ]
