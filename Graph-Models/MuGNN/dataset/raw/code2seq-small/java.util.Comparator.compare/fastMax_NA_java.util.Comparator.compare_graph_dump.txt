Line_4 $$ for (int i = 1; i < size; i++) -->Line_5 $$ int comparison = comp.compare(items[i], items[highestIdx])[ CD ]
Line_4 $$ for (int i = 1; i < size; i++) -->Line_6 $$ if (comparison > 0) [ CD ]
Line_2 $$ private <T> int fastMax(T[] items, Comparator<T> comp, int size) -->Line_4 $$ for (int i = 1; i < size; i++) [ FD ]
Line_3 $$ int highestIdx = 0-->Line_7 $$ highestIdx = i[ FD ]
Line_4 $$ for (int i = 1; i < size; i++) -->Line_7 $$ highestIdx = i[ FD ]
Line_2 $$ private <T> int fastMax(T[] items, Comparator<T> comp, int size) -->Line_3 $$ int highestIdx = 0[ CD ]
Line_5 $$ int comparison = comp.compare(items[i], items[highestIdx])-->Line_6 $$ if (comparison > 0) [ FD ]
Line_2 $$ private <T> int fastMax(T[] items, Comparator<T> comp, int size) -->Line_5 $$ int comparison = comp.compare(items[i], items[highestIdx])[ FD ]
Line_2 $$ private <T> int fastMax(T[] items, Comparator<T> comp, int size) -->Line_4 $$ for (int i = 1; i < size; i++) [ CD ]
Line_2 $$ private <T> int fastMax(T[] items, Comparator<T> comp, int size) -->Line_10 $$ return highestIdx[ CD ]
Line_6 $$ if (comparison > 0) -->Line_7 $$ highestIdx = i[ CD ]
