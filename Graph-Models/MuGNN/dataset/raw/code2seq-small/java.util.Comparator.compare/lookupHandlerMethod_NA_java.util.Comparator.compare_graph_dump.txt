Line_3 $$ List<Match> matches = new ArrayList<Match>()-->Line_15 $$ logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)[ FD ]
Line_3 $$ List<Match> matches = new ArrayList<Match>()-->Line_8 $$ if (matches.isEmpty()) [ FD ]
Line_3 $$ List<Match> matches = new ArrayList<Match>()-->Line_18 $$ if (matches.size() > 1) [ FD ]
Line_3 $$ List<Match> matches = new ArrayList<Match>()-->Line_9 $$ addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)[ FD ]
Line_14 $$ if (logger.isTraceEnabled()) -->Line_15 $$ logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)[ CD ]
Line_11 $$ if (!matches.isEmpty()) -->Line_13 $$ Collections.sort(matches, comparator)[ CD ]
Line_11 $$ if (!matches.isEmpty()) -->Line_12 $$ Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))[ CD ]
Line_11 $$ if (!matches.isEmpty()) -->Line_14 $$ if (logger.isTraceEnabled()) [ CD ]
Line_11 $$ if (!matches.isEmpty()) -->Line_32 $$ return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)[ CD ]
Line_2 $$ protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception -->Line_4 $$ List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)[ FD ]
Line_2 $$ protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception -->Line_11 $$ if (!matches.isEmpty()) [ CD ]
Line_3 $$ List<Match> matches = new ArrayList<Match>()-->Line_17 $$ Match bestMatch = matches.get(0)[ FD ]
Line_22 $$ Match secondBestMatch = matches.get(1)-->Line_23 $$ if (comparator.compare(bestMatch, secondBestMatch) == 0) [ FD ]
Line_2 $$ protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception -->Line_19 $$ if (CorsUtils.isPreFlightRequest(request)) [ FD ]
Line_2 $$ protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception -->Line_32 $$ return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)[ FD ]
Line_2 $$ protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception -->Line_8 $$ if (matches.isEmpty()) [ CD ]
Line_2 $$ protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception -->Line_9 $$ addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)[ FD ]
Line_19 $$ if (CorsUtils.isPreFlightRequest(request)) -->Line_20 $$ return PREFLIGHT_AMBIGUOUS_MATCH[ CD ]
Line_5 $$ if (directPathMatches != null) -->Line_6 $$ addMatchingMappings(directPathMatches, matches, request)[ CD ]
Line_18 $$ if (matches.size() > 1) -->Line_22 $$ Match secondBestMatch = matches.get(1)[ CD ]
Line_4 $$ List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)-->Line_6 $$ addMatchingMappings(directPathMatches, matches, request)[ FD ]
Line_12 $$ Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))-->Line_23 $$ if (comparator.compare(bestMatch, secondBestMatch) == 0) [ FD ]
Line_2 $$ protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception -->Line_4 $$ List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)[ CD ]
Line_8 $$ if (matches.isEmpty()) -->Line_9 $$ addMatchingMappings(this.mappingRegistry.getMappings().keySet(), matches, request)[ CD ]
Line_11 $$ if (!matches.isEmpty()) -->Line_30 $$ return bestMatch.handlerMethod[ CD ]
Line_2 $$ protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception -->Line_29 $$ handleMatch(bestMatch.mapping, lookupPath, request)[ FD ]
Line_23 $$ if (comparator.compare(bestMatch, secondBestMatch) == 0) -->Line_24 $$ Method m1 = bestMatch.handlerMethod.getMethod()[ CD ]
Line_23 $$ if (comparator.compare(bestMatch, secondBestMatch) == 0) -->Line_25 $$ Method m2 = secondBestMatch.handlerMethod.getMethod()[ CD ]
Line_2 $$ protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception -->Line_12 $$ Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))[ FD ]
Line_3 $$ List<Match> matches = new ArrayList<Match>()-->Line_13 $$ Collections.sort(matches, comparator)[ FD ]
Line_2 $$ protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception -->Line_6 $$ addMatchingMappings(directPathMatches, matches, request)[ FD ]
Line_3 $$ List<Match> matches = new ArrayList<Match>()-->Line_22 $$ Match secondBestMatch = matches.get(1)[ FD ]
Line_11 $$ if (!matches.isEmpty()) -->Line_17 $$ Match bestMatch = matches.get(0)[ CD ]
Line_11 $$ if (!matches.isEmpty()) -->Line_18 $$ if (matches.size() > 1) [ CD ]
Line_2 $$ protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception -->Line_3 $$ List<Match> matches = new ArrayList<Match>()[ CD ]
Line_12 $$ Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))-->Line_13 $$ Collections.sort(matches, comparator)[ FD ]
Line_2 $$ protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception -->Line_26 $$ throw new IllegalStateException("Ambiguous handler methods mapped for HTTP path '" + request.getRequestURL() + "': [ FD ]
Line_18 $$ if (matches.size() > 1) -->Line_19 $$ if (CorsUtils.isPreFlightRequest(request)) [ CD ]
Line_3 $$ List<Match> matches = new ArrayList<Match>()-->Line_6 $$ addMatchingMappings(directPathMatches, matches, request)[ FD ]
Line_18 $$ if (matches.size() > 1) -->Line_23 $$ if (comparator.compare(bestMatch, secondBestMatch) == 0) [ CD ]
Line_11 $$ if (!matches.isEmpty()) -->Line_29 $$ handleMatch(bestMatch.mapping, lookupPath, request)[ CD ]
Line_2 $$ protected HandlerMethod lookupHandlerMethod(String lookupPath, HttpServletRequest request) throws Exception -->Line_5 $$ if (directPathMatches != null) [ CD ]
Line_17 $$ Match bestMatch = matches.get(0)-->Line_23 $$ if (comparator.compare(bestMatch, secondBestMatch) == 0) [ FD ]
Line_3 $$ List<Match> matches = new ArrayList<Match>()-->Line_11 $$ if (!matches.isEmpty()) [ FD ]
Line_4 $$ List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)-->Line_5 $$ if (directPathMatches != null) [ FD ]
