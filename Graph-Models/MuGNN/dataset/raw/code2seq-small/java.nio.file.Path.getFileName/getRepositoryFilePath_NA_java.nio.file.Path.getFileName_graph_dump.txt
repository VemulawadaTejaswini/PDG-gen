Line_6 $$ if (index == -1) -->Line_8 $$ sb.append(name)[ CD ]
Line_2 $$ public static Path getRepositoryFilePath(Path repositoryPath, Path remoteFilePath) -->Line_16 $$ sb.append(name.substring(0, index))[ CD ]
Line_7 $$ StringBundler sb = new StringBundler(5)-->Line_18 $$ sb.append(System.currentTimeMillis())[ FD ]
Line_4 $$ String name = fileNamePath.toString()-->Line_21 $$ sb.append(name.substring(index))[ FD ]
Line_7 $$ StringBundler sb = new StringBundler(5)-->Line_22 $$ return repositoryPath.resolve(sb.toString())[ FD ]
Line_5 $$ int index = name.lastIndexOf(CharPool.PERIOD)-->Line_6 $$ if (index == -1) [ FD ]
Line_6 $$ if (index == -1) -->Line_10 $$ sb.append(System.currentTimeMillis())[ CD ]
Line_2 $$ public static Path getRepositoryFilePath(Path repositoryPath, Path remoteFilePath) -->Line_13 $$ return repositoryPath.resolve(sb.toString())[ FD ]
Line_7 $$ StringBundler sb = new StringBundler(5)-->Line_13 $$ return repositoryPath.resolve(sb.toString())[ FD ]
Line_4 $$ String name = fileNamePath.toString()-->Line_5 $$ int index = name.lastIndexOf(CharPool.PERIOD)[ FD ]
Line_2 $$ public static Path getRepositoryFilePath(Path repositoryPath, Path remoteFilePath) -->Line_4 $$ String name = fileNamePath.toString()[ CD ]
Line_6 $$ if (index == -1) -->Line_13 $$ return repositoryPath.resolve(sb.toString())[ CD ]
Line_3 $$ Path fileNamePath = remoteFilePath.getFileName()-->Line_4 $$ String name = fileNamePath.toString()[ FD ]
Line_4 $$ String name = fileNamePath.toString()-->Line_8 $$ sb.append(name)[ FD ]
Line_2 $$ public static Path getRepositoryFilePath(Path repositoryPath, Path remoteFilePath) -->Line_6 $$ if (index == -1) [ CD ]
Line_2 $$ public static Path getRepositoryFilePath(Path repositoryPath, Path remoteFilePath) -->Line_22 $$ return repositoryPath.resolve(sb.toString())[ CD ]
Line_6 $$ if (index == -1) -->Line_12 $$ sb.append(idGenerator.getAndIncrement())[ CD ]
Line_7 $$ StringBundler sb = new StringBundler(5)-->Line_16 $$ sb.append(name.substring(0, index))[ FD ]
Line_5 $$ int index = name.lastIndexOf(CharPool.PERIOD)-->Line_16 $$ sb.append(name.substring(0, index))[ FD ]
Line_2 $$ public static Path getRepositoryFilePath(Path repositoryPath, Path remoteFilePath) -->Line_17 $$ sb.append(StringPool.DASH)[ CD ]
Line_6 $$ if (index == -1) -->Line_9 $$ sb.append(StringPool.DASH)[ CD ]
Line_6 $$ if (index == -1) -->Line_11 $$ sb.append(StringPool.DASH)[ CD ]
Line_7 $$ StringBundler sb = new StringBundler(5)-->Line_12 $$ sb.append(idGenerator.getAndIncrement())[ FD ]
Line_4 $$ String name = fileNamePath.toString()-->Line_16 $$ sb.append(name.substring(0, index))[ FD ]
Line_7 $$ StringBundler sb = new StringBundler(5)-->Line_17 $$ sb.append(StringPool.DASH)[ FD ]
Line_7 $$ StringBundler sb = new StringBundler(5)-->Line_11 $$ sb.append(StringPool.DASH)[ FD ]
Line_2 $$ public static Path getRepositoryFilePath(Path repositoryPath, Path remoteFilePath) -->Line_5 $$ int index = name.lastIndexOf(CharPool.PERIOD)[ CD ]
Line_7 $$ StringBundler sb = new StringBundler(5)-->Line_19 $$ sb.append(StringPool.DASH)[ FD ]
Line_7 $$ StringBundler sb = new StringBundler(5)-->Line_20 $$ sb.append(idGenerator.getAndIncrement())[ FD ]
Line_2 $$ public static Path getRepositoryFilePath(Path repositoryPath, Path remoteFilePath) -->Line_21 $$ sb.append(name.substring(index))[ CD ]
Line_2 $$ public static Path getRepositoryFilePath(Path repositoryPath, Path remoteFilePath) -->Line_18 $$ sb.append(System.currentTimeMillis())[ CD ]
Line_2 $$ public static Path getRepositoryFilePath(Path repositoryPath, Path remoteFilePath) -->Line_20 $$ sb.append(idGenerator.getAndIncrement())[ CD ]
Line_7 $$ StringBundler sb = new StringBundler(5)-->Line_21 $$ sb.append(name.substring(index))[ FD ]
Line_7 $$ StringBundler sb = new StringBundler(5)-->Line_9 $$ sb.append(StringPool.DASH)[ FD ]
Line_7 $$ StringBundler sb = new StringBundler(5)-->Line_10 $$ sb.append(System.currentTimeMillis())[ FD ]
Line_2 $$ public static Path getRepositoryFilePath(Path repositoryPath, Path remoteFilePath) -->Line_3 $$ Path fileNamePath = remoteFilePath.getFileName()[ CD ]
Line_2 $$ public static Path getRepositoryFilePath(Path repositoryPath, Path remoteFilePath) -->Line_22 $$ return repositoryPath.resolve(sb.toString())[ FD ]
Line_2 $$ public static Path getRepositoryFilePath(Path repositoryPath, Path remoteFilePath) -->Line_3 $$ Path fileNamePath = remoteFilePath.getFileName()[ FD ]
Line_7 $$ StringBundler sb = new StringBundler(5)-->Line_8 $$ sb.append(name)[ FD ]
Line_5 $$ int index = name.lastIndexOf(CharPool.PERIOD)-->Line_21 $$ sb.append(name.substring(index))[ FD ]
Line_6 $$ if (index == -1) -->Line_7 $$ StringBundler sb = new StringBundler(5)[ CD ]
Line_2 $$ public static Path getRepositoryFilePath(Path repositoryPath, Path remoteFilePath) -->Line_19 $$ sb.append(StringPool.DASH)[ CD ]
