Line_3 $$ List<RestTestCandidate> testCandidates = new ArrayList()-->Line_16 $$ testCandidates.add(new RestTestCandidate(restTestSuite, testSection))[ FD ]
Line_4 $$ FileSystem fileSystem = getFileSystem()-->Line_7 $$ Map<String, Set<Path>> yamlSuites = FileUtils.findYamlSuites(fileSystem, DEFAULT_TESTS_PATH, paths)[ FD ]
Line_11 $$ for (Path yamlFile : yamlFiles) -->Line_14 $$ RestTestSuite restTestSuite = restTestSuiteParser.parse(api, yamlFile)[ FD ]
Line_7 $$ Map<String, Set<Path>> yamlSuites = FileUtils.findYamlSuites(fileSystem, DEFAULT_TESTS_PATH, paths)-->Line_10 $$ List<Path> yamlFiles = new ArrayList(yamlSuites.get(api))[ FD ]
Line_2 $$ private static List<RestTestCandidate> collectTestCandidates(int id, int count) throws RestTestParseException, IOException -->Line_24 $$ Collections.sort(testCandidates, new Comparator<RestTestCandidate>() [ CD ]
Line_24 $$ Collections.sort(testCandidates, new Comparator<RestTestCandidate>() -->Line_26 $$ return o1.getTestPath().compareTo(o2.getTestPath())[ CD ]
Line_11 $$ for (Path yamlFile : yamlFiles) -->Line_12 $$ String key = api + yamlFile.getFileName().toString()[ FD ]
Line_2 $$ private static List<RestTestCandidate> collectTestCandidates(int id, int count) throws RestTestParseException, IOException -->Line_29 $$ return testCandidates[ CD ]
Line_2 $$ private static List<RestTestCandidate> collectTestCandidates(int id, int count) throws RestTestParseException, IOException -->Line_13 $$ if (mustExecute(key, id, count)) [ FD ]
Line_8 $$ RestTestSuiteParser restTestSuiteParser = new RestTestSuiteParser()-->Line_14 $$ RestTestSuite restTestSuite = restTestSuiteParser.parse(api, yamlFile)[ FD ]
Line_3 $$ List<RestTestCandidate> testCandidates = new ArrayList()-->Line_24 $$ Collections.sort(testCandidates, new Comparator<RestTestCandidate>() [ FD ]
Line_4 $$ FileSystem fileSystem = getFileSystem()-->Line_22 $$ IOUtils.close(fileSystem)[ FD ]
Line_24 $$ Collections.sort(testCandidates, new Comparator<RestTestCandidate>() -->Line_26 $$ return o1.getTestPath().compareTo(o2.getTestPath())[ FD ]
Line_7 $$ Map<String, Set<Path>> yamlSuites = FileUtils.findYamlSuites(fileSystem, DEFAULT_TESTS_PATH, paths)-->Line_9 $$ for (String api : yamlSuites.keySet()) [ FD ]
Line_9 $$ for (String api : yamlSuites.keySet()) -->Line_14 $$ RestTestSuite restTestSuite = restTestSuiteParser.parse(api, yamlFile)[ FD ]
Line_6 $$ String[] paths = resolvePathsProperty(REST_TESTS_SUITE, DEFAULT_TESTS_PATH)-->Line_7 $$ Map<String, Set<Path>> yamlSuites = FileUtils.findYamlSuites(fileSystem, DEFAULT_TESTS_PATH, paths)[ FD ]
Line_14 $$ RestTestSuite restTestSuite = restTestSuiteParser.parse(api, yamlFile)-->Line_15 $$ for (TestSection testSection : restTestSuite.getTestSections()) [ FD ]
Line_9 $$ for (String api : yamlSuites.keySet()) -->Line_10 $$ List<Path> yamlFiles = new ArrayList(yamlSuites.get(api))[ FD ]
Line_2 $$ private static List<RestTestCandidate> collectTestCandidates(int id, int count) throws RestTestParseException, IOException -->Line_4 $$ FileSystem fileSystem = getFileSystem()[ CD ]
Line_12 $$ String key = api + yamlFile.getFileName().toString()-->Line_13 $$ if (mustExecute(key, id, count)) [ FD ]
Line_13 $$ if (mustExecute(key, id, count)) -->Line_14 $$ RestTestSuite restTestSuite = restTestSuiteParser.parse(api, yamlFile)[ CD ]
Line_2 $$ private static List<RestTestCandidate> collectTestCandidates(int id, int count) throws RestTestParseException, IOException -->Line_3 $$ List<RestTestCandidate> testCandidates = new ArrayList()[ CD ]
