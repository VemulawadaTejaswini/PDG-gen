Line_6 $$ Files.walkFileTree(structure, new SimpleFileVisitor<Path>() -->Line_8 $$ stream.putNextEntry(new ZipEntry(structure.relativize(file).toString()))[ CD ]
Line_2 $$ private String createPluginWithBadChecksum(final Path structure, String... properties) throws IOException -->Line_4 $$ Path zip = createTempDir().resolve(structure.getFileName() + ".zip")[ FD ]
Line_2 $$ private String createPluginWithBadChecksum(final Path structure, String... properties) throws IOException -->Line_19 $$ return zip.toUri().toURL().toString()[ CD ]
Line_4 $$ Path zip = createTempDir().resolve(structure.getFileName() + ".zip")-->Line_19 $$ return zip.toUri().toURL().toString()[ FD ]
Line_4 $$ Path zip = createTempDir().resolve(structure.getFileName() + ".zip")-->Line_17 $$ writeMd5(zip, true)[ FD ]
Line_5 $$ try (ZipOutputStream stream = new ZipOutputStream(Files.newOutputStream(zip))) -->Line_9 $$ Files.copy(file, stream)[ FD ]
Line_4 $$ Path zip = createTempDir().resolve(structure.getFileName() + ".zip")-->Line_15 $$ writeSha1(zip, true)[ FD ]
Line_14 $$ if (randomBoolean()) -->Line_17 $$ writeMd5(zip, true)[ CD ]
Line_14 $$ if (randomBoolean()) -->Line_15 $$ writeSha1(zip, true)[ CD ]
Line_2 $$ private String createPluginWithBadChecksum(final Path structure, String... properties) throws IOException -->Line_14 $$ if (randomBoolean()) [ CD ]
Line_2 $$ private String createPluginWithBadChecksum(final Path structure, String... properties) throws IOException -->Line_6 $$ Files.walkFileTree(structure, new SimpleFileVisitor<Path>() [ FD ]
Line_2 $$ private String createPluginWithBadChecksum(final Path structure, String... properties) throws IOException -->Line_8 $$ stream.putNextEntry(new ZipEntry(structure.relativize(file).toString()))[ FD ]
Line_6 $$ Files.walkFileTree(structure, new SimpleFileVisitor<Path>() -->Line_8 $$ stream.putNextEntry(new ZipEntry(structure.relativize(file).toString()))[ FD ]
Line_6 $$ Files.walkFileTree(structure, new SimpleFileVisitor<Path>() -->Line_10 $$ return FileVisitResult.CONTINUE[ CD ]
Line_6 $$ Files.walkFileTree(structure, new SimpleFileVisitor<Path>() -->Line_9 $$ Files.copy(file, stream)[ CD ]
Line_2 $$ private String createPluginWithBadChecksum(final Path structure, String... properties) throws IOException -->Line_4 $$ Path zip = createTempDir().resolve(structure.getFileName() + ".zip")[ CD ]
Line_4 $$ Path zip = createTempDir().resolve(structure.getFileName() + ".zip")-->Line_5 $$ try (ZipOutputStream stream = new ZipOutputStream(Files.newOutputStream(zip))) [ FD ]
Line_2 $$ private String createPluginWithBadChecksum(final Path structure, String... properties) throws IOException -->Line_3 $$ PluginTestUtil.writeProperties(structure, properties)[ CD ]
Line_5 $$ try (ZipOutputStream stream = new ZipOutputStream(Files.newOutputStream(zip))) -->Line_8 $$ stream.putNextEntry(new ZipEntry(structure.relativize(file).toString()))[ FD ]
Line_6 $$ Files.walkFileTree(structure, new SimpleFileVisitor<Path>() -->Line_9 $$ Files.copy(file, stream)[ FD ]
Line_2 $$ private String createPluginWithBadChecksum(final Path structure, String... properties) throws IOException -->Line_3 $$ PluginTestUtil.writeProperties(structure, properties)[ FD ]
