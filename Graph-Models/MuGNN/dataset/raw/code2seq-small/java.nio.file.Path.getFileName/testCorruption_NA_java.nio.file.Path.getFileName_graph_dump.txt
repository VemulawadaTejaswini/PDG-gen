Line_4 $$ for (int i = 0; i < dirs.length; i++) -->Line_5 $$ dirs[i] = createTempDir()[ CD ]
Line_10 $$ int version = between(0, Integer.MAX_VALUE / 2)-->Line_11 $$ format.write(state, version, dirs)[ FD ]
Line_2 $$ public void testCorruption() throws IOException -->Line_7 $$ final long id = addDummyFiles("foo-", dirs)[ CD ]
Line_2 $$ public void testCorruption() throws IOException -->Line_9 $$ DummyState state = new DummyState(randomRealisticUnicodeOfCodepointLengthBetween(1, 1000), randomInt(), randomLong(), randomDouble(), randomBoolean())[ CD ]
Line_2 $$ public void testCorruption() throws IOException -->Line_3 $$ Path[] dirs = new Path[randomIntBetween(1, 5)][ CD ]
Line_8 $$ Format format = new Format(randomFrom(XContentType.values()), "foo-")-->Line_25 $$ format.read(list[0])[ FD ]
Line_8 $$ Format format = new Format(randomFrom(XContentType.values()), "foo-")-->Line_21 $$ DummyState read = format.read(list[0])[ FD ]
Line_2 $$ public void testCorruption() throws IOException -->Line_8 $$ Format format = new Format(randomFrom(XContentType.values()), "foo-")[ CD ]
Line_2 $$ public void testCorruption() throws IOException -->Line_4 $$ for (int i = 0; i < dirs.length; i++) [ CD ]
Line_13 $$ Path[] list = content("*", file)-->Line_18 $$ list = content("foo-*", stateDir)[ FD ]
Line_9 $$ DummyState state = new DummyState(randomRealisticUnicodeOfCodepointLengthBetween(1, 1000), randomInt(), randomLong(), randomDouble(), randomBoolean())-->Line_11 $$ format.write(state, version, dirs)[ FD ]
Line_9 $$ DummyState state = new DummyState(randomRealisticUnicodeOfCodepointLengthBetween(1, 1000), randomInt(), randomLong(), randomDouble(), randomBoolean())-->Line_22 $$ assertThat(read, equalTo(state))[ FD ]
Line_2 $$ public void testCorruption() throws IOException -->Line_11 $$ format.write(state, version, dirs)[ CD ]
Line_16 $$ Path stateDir = list[0]-->Line_18 $$ list = content("foo-*", stateDir)[ FD ]
Line_3 $$ Path[] dirs = new Path[randomIntBetween(1, 5)]-->Line_11 $$ format.write(state, version, dirs)[ FD ]
Line_2 $$ public void testCorruption() throws IOException -->Line_10 $$ int version = between(0, Integer.MAX_VALUE / 2)[ CD ]
Line_8 $$ Format format = new Format(randomFrom(XContentType.values()), "foo-")-->Line_11 $$ format.write(state, version, dirs)[ FD ]
Line_12 $$ for (Path file : dirs) -->Line_13 $$ Path[] list = content("*", file)[ FD ]
Line_3 $$ Path[] dirs = new Path[randomIntBetween(1, 5)]-->Line_7 $$ final long id = addDummyFiles("foo-", dirs)[ FD ]
Line_16 $$ Path stateDir = list[0]-->Line_17 $$ assertThat(Files.isDirectory(stateDir), is(true))[ FD ]
Line_21 $$ DummyState read = format.read(list[0])-->Line_22 $$ assertThat(read, equalTo(state))[ FD ]
