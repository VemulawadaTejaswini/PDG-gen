Line_3 $$ SyncAccount syncAccount = new SyncAccount()-->Line_31 $$ syncSite.setSyncAccountId(syncAccount.getSyncAccountId())[ FD ]
Line_25 $$ String syncSiteName = syncSite.getName()-->Line_27 $$ syncSiteName = String.valueOf(syncSite.getGroupId())[ FD ]
Line_18 $$ Path dataFilePath = Files.createDirectories(filePath.resolve(".data"))-->Line_20 $$ Files.setAttribute(dataFilePath, "dos:hidden", true)[ FD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_12 $$ syncAccount.setPassword(Encryptor.encrypt(password))[ CD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_39 $$ if (syncUser != null) [ CD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_17 $$ Path filePath = Paths.get(filePathName)[ FD ]
Line_3 $$ SyncAccount syncAccount = new SyncAccount()-->Line_8 $$ syncAccount.setOAuthConsumerSecret(oAuthConsumerSecret)[ FD ]
Line_3 $$ SyncAccount syncAccount = new SyncAccount()-->Line_4 $$ syncAccount.setFilePathName(filePathName)[ FD ]
Line_24 $$ for (SyncSite syncSite : syncSites) -->Line_32 $$ SyncSiteService.update(syncSite)[ FD ]
Line_27 $$ syncSiteName = String.valueOf(syncSite.getGroupId())-->Line_29 $$ syncSite.setFilePathName(FileUtil.getFilePathName(syncAccount.getFilePathName(), syncSiteName))[ FD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_17 $$ Path filePath = Paths.get(filePathName)[ CD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_10 $$ syncAccount.setOAuthToken(oAuthToken)[ CD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_40 $$ syncUser.setSyncAccountId(syncAccount.getSyncAccountId())[ FD ]
Line_39 $$ if (syncUser != null) -->Line_40 $$ syncUser.setSyncAccountId(syncAccount.getSyncAccountId())[ CD ]
Line_25 $$ String syncSiteName = syncSite.getName()-->Line_29 $$ syncSite.setFilePathName(FileUtil.getFilePathName(syncAccount.getFilePathName(), syncSiteName))[ FD ]
Line_3 $$ SyncAccount syncAccount = new SyncAccount()-->Line_9 $$ syncAccount.setOAuthEnabled(oAuthEnabled)[ FD ]
Line_24 $$ for (SyncSite syncSite : syncSites) -->Line_31 $$ syncSite.setSyncAccountId(syncAccount.getSyncAccountId())[ FD ]
Line_24 $$ for (SyncSite syncSite : syncSites) -->Line_27 $$ syncSiteName = String.valueOf(syncSite.getGroupId())[ FD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_4 $$ syncAccount.setFilePathName(filePathName)[ FD ]
Line_24 $$ for (SyncSite syncSite : syncSites) -->Line_34 $$ Files.createDirectories(Paths.get(syncSite.getFilePathName()))[ FD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_6 $$ syncAccount.setMaxConnections(maxConnections)[ CD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_23 $$ if (syncSites != null) [ CD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_39 $$ if (syncUser != null) [ FD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_5 $$ syncAccount.setLogin(login)[ FD ]
Line_3 $$ SyncAccount syncAccount = new SyncAccount()-->Line_29 $$ syncSite.setFilePathName(FileUtil.getFilePathName(syncAccount.getFilePathName(), syncSiteName))[ FD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_8 $$ syncAccount.setOAuthConsumerSecret(oAuthConsumerSecret)[ FD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_18 $$ Path dataFilePath = Files.createDirectories(filePath.resolve(".data"))[ CD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_13 $$ syncAccount.setPollInterval(pollInterval)[ FD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_10 $$ syncAccount.setOAuthToken(oAuthToken)[ FD ]
Line_3 $$ SyncAccount syncAccount = new SyncAccount()-->Line_13 $$ syncAccount.setPollInterval(pollInterval)[ FD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_3 $$ SyncAccount syncAccount = new SyncAccount()[ CD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_13 $$ syncAccount.setPollInterval(pollInterval)[ CD ]
Line_19 $$ if (OSDetector.isWindows()) -->Line_20 $$ Files.setAttribute(dataFilePath, "dos:hidden", true)[ CD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_15 $$ syncAccount.setUrl(url)[ FD ]
Line_25 $$ String syncSiteName = syncSite.getName()-->Line_26 $$ if (!FileUtil.isValidFileName(syncSiteName)) [ FD ]
Line_3 $$ SyncAccount syncAccount = new SyncAccount()-->Line_14 $$ syncAccount.setTrustSelfSigned(trustSelfSigned)[ FD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_11 $$ syncAccount.setOAuthTokenSecret(Encryptor.encrypt(oAuthTokenSecret))[ FD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_15 $$ syncAccount.setUrl(url)[ CD ]
Line_3 $$ SyncAccount syncAccount = new SyncAccount()-->Line_40 $$ syncUser.setSyncAccountId(syncAccount.getSyncAccountId())[ FD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_12 $$ syncAccount.setPassword(Encryptor.encrypt(password))[ FD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_9 $$ syncAccount.setOAuthEnabled(oAuthEnabled)[ CD ]
Line_3 $$ SyncAccount syncAccount = new SyncAccount()-->Line_16 $$ _syncAccountPersistence.create(syncAccount)[ FD ]
Line_24 $$ for (SyncSite syncSite : syncSites) -->Line_29 $$ syncSite.setFilePathName(FileUtil.getFilePathName(syncAccount.getFilePathName(), syncSiteName))[ FD ]
Line_3 $$ SyncAccount syncAccount = new SyncAccount()-->Line_12 $$ syncAccount.setPassword(Encryptor.encrypt(password))[ FD ]
Line_3 $$ SyncAccount syncAccount = new SyncAccount()-->Line_10 $$ syncAccount.setOAuthToken(oAuthToken)[ FD ]
Line_33 $$ if (syncSite.isActive() && !Files.exists(Paths.get(syncSite.getFilePathName()))) -->Line_34 $$ Files.createDirectories(Paths.get(syncSite.getFilePathName()))[ CD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_7 $$ syncAccount.setOAuthConsumerKey(oAuthConsumerKey)[ CD ]
Line_17 $$ Path filePath = Paths.get(filePathName)-->Line_18 $$ Path dataFilePath = Files.createDirectories(filePath.resolve(".data"))[ FD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_6 $$ syncAccount.setMaxConnections(maxConnections)[ FD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_7 $$ syncAccount.setOAuthConsumerKey(oAuthConsumerKey)[ FD ]
Line_3 $$ SyncAccount syncAccount = new SyncAccount()-->Line_11 $$ syncAccount.setOAuthTokenSecret(Encryptor.encrypt(oAuthTokenSecret))[ FD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_22 $$ SyncFileService.addSyncFile(null, null, false, null, filePathName, null, String.valueOf(filePath.getFileName()), 0, 0, 0, SyncFile.STATE_SYNCED, syncAccount.getSyncAccountId(), SyncFile.TYPE_SYSTEM)[ FD ]
Line_24 $$ for (SyncSite syncSite : syncSites) -->Line_36 $$ SyncFileService.addSyncFile(null, null, false, null, syncSite.getFilePathName(), null, syncSite.getName(), 0, syncSite.getGroupId(), 0, SyncFile.STATE_SYNCED, syncSite.getSyncAccountId(), SyncFile.TYPE_SYSTEM)[ FD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_14 $$ syncAccount.setTrustSelfSigned(trustSelfSigned)[ FD ]
Line_26 $$ if (!FileUtil.isValidFileName(syncSiteName)) -->Line_27 $$ syncSiteName = String.valueOf(syncSite.getGroupId())[ CD ]
Line_3 $$ SyncAccount syncAccount = new SyncAccount()-->Line_5 $$ syncAccount.setLogin(login)[ FD ]
Line_3 $$ SyncAccount syncAccount = new SyncAccount()-->Line_15 $$ syncAccount.setUrl(url)[ FD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_22 $$ SyncFileService.addSyncFile(null, null, false, null, filePathName, null, String.valueOf(filePath.getFileName()), 0, 0, 0, SyncFile.STATE_SYNCED, syncAccount.getSyncAccountId(), SyncFile.TYPE_SYSTEM)[ CD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_11 $$ syncAccount.setOAuthTokenSecret(Encryptor.encrypt(oAuthTokenSecret))[ CD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_9 $$ syncAccount.setOAuthEnabled(oAuthEnabled)[ FD ]
Line_3 $$ SyncAccount syncAccount = new SyncAccount()-->Line_7 $$ syncAccount.setOAuthConsumerKey(oAuthConsumerKey)[ FD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_5 $$ syncAccount.setLogin(login)[ CD ]
Line_3 $$ SyncAccount syncAccount = new SyncAccount()-->Line_6 $$ syncAccount.setMaxConnections(maxConnections)[ FD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_41 $$ SyncUserService.update(syncUser)[ FD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_43 $$ return syncAccount[ CD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_4 $$ syncAccount.setFilePathName(filePathName)[ CD ]
Line_39 $$ if (syncUser != null) -->Line_41 $$ SyncUserService.update(syncUser)[ CD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_16 $$ _syncAccountPersistence.create(syncAccount)[ CD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_8 $$ syncAccount.setOAuthConsumerSecret(oAuthConsumerSecret)[ CD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_19 $$ if (OSDetector.isWindows()) [ CD ]
Line_17 $$ Path filePath = Paths.get(filePathName)-->Line_22 $$ SyncFileService.addSyncFile(null, null, false, null, filePathName, null, String.valueOf(filePath.getFileName()), 0, 0, 0, SyncFile.STATE_SYNCED, syncAccount.getSyncAccountId(), SyncFile.TYPE_SYSTEM)[ FD ]
Line_24 $$ for (SyncSite syncSite : syncSites) -->Line_30 $$ syncSite.setRemoteSyncTime(-1)[ FD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_14 $$ syncAccount.setTrustSelfSigned(trustSelfSigned)[ CD ]
Line_24 $$ for (SyncSite syncSite : syncSites) -->Line_33 $$ if (syncSite.isActive() && !Files.exists(Paths.get(syncSite.getFilePathName()))) [ FD ]
Line_2 $$ public static SyncAccount addSyncAccount(String filePathName, String login, int maxConnections, String oAuthConsumerKey, String oAuthConsumerSecret, boolean oAuthEnabled, String oAuthToken, String oAuthTokenSecret, String password, int pollInterval, SyncSite[] syncSites, SyncUser syncUser, boolean trustSelfSigned, String url) throws Exception -->Line_23 $$ if (syncSites != null) [ FD ]
Line_24 $$ for (SyncSite syncSite : syncSites) -->Line_25 $$ String syncSiteName = syncSite.getName()[ FD ]
Line_3 $$ SyncAccount syncAccount = new SyncAccount()-->Line_22 $$ SyncFileService.addSyncFile(null, null, false, null, filePathName, null, String.valueOf(filePath.getFileName()), 0, 0, 0, SyncFile.STATE_SYNCED, syncAccount.getSyncAccountId(), SyncFile.TYPE_SYSTEM)[ FD ]
