Line_11 $$ if (last != null) -->Line_13 $$ final String oldSegmentName = IndexFileNames.parseSegmentName(last.getFileName().toString())[ CD ]
Line_5 $$ if (file.getFileName().toString().endsWith(".liv")) -->Line_6 $$ delFiles.add(file)[ CD ]
Line_14 $$ if (newSegmentName.equals(oldSegmentName)) -->Line_15 $$ int oldGen = Integer.parseInt(IndexFileNames.stripExtension(IndexFileNames.stripSegmentName(last.getFileName().toString())).replace("_", ""), Character.MAX_RADIX)[ CD ]
Line_11 $$ if (last != null) -->Line_12 $$ final String newSegmentName = IndexFileNames.parseSegmentName(current.getFileName().toString())[ CD ]
Line_2 $$ private void pruneOldDeleteGenerations(Set<Path> files) -->Line_18 $$ files.remove(last)[ FD ]
Line_15 $$ int oldGen = Integer.parseInt(IndexFileNames.stripExtension(IndexFileNames.stripSegmentName(last.getFileName().toString())).replace("_", ""), Character.MAX_RADIX)-->Line_17 $$ if (newGen > oldGen) [ FD ]
Line_10 $$ for (Path current : delFiles) -->Line_25 $$ last = current[ FD ]
Line_10 $$ for (Path current : delFiles) -->Line_20 $$ files.remove(current)[ FD ]
Line_17 $$ if (newGen > oldGen) -->Line_18 $$ files.remove(last)[ CD ]
Line_9 $$ Path last = null-->Line_15 $$ int oldGen = Integer.parseInt(IndexFileNames.stripExtension(IndexFileNames.stripSegmentName(last.getFileName().toString())).replace("_", ""), Character.MAX_RADIX)[ FD ]
Line_16 $$ int newGen = Integer.parseInt(IndexFileNames.stripExtension(IndexFileNames.stripSegmentName(current.getFileName().toString())).replace("_", ""), Character.MAX_RADIX)-->Line_17 $$ if (newGen > oldGen) [ FD ]
Line_2 $$ private void pruneOldDeleteGenerations(Set<Path> files) -->Line_20 $$ files.remove(current)[ FD ]
Line_10 $$ for (Path current : delFiles) -->Line_12 $$ final String newSegmentName = IndexFileNames.parseSegmentName(current.getFileName().toString())[ FD ]
Line_14 $$ if (newSegmentName.equals(oldSegmentName)) -->Line_17 $$ if (newGen > oldGen) [ CD ]
Line_3 $$ final TreeSet<Path> delFiles = new TreeSet()-->Line_6 $$ delFiles.add(file)[ FD ]
Line_12 $$ final String newSegmentName = IndexFileNames.parseSegmentName(current.getFileName().toString())-->Line_14 $$ if (newSegmentName.equals(oldSegmentName)) [ FD ]
Line_9 $$ Path last = null-->Line_11 $$ if (last != null) [ FD ]
Line_2 $$ private void pruneOldDeleteGenerations(Set<Path> files) -->Line_3 $$ final TreeSet<Path> delFiles = new TreeSet()[ CD ]
Line_2 $$ private void pruneOldDeleteGenerations(Set<Path> files) -->Line_9 $$ Path last = null[ CD ]
Line_4 $$ for (Path file : files) -->Line_6 $$ delFiles.add(file)[ FD ]
Line_9 $$ Path last = null-->Line_13 $$ final String oldSegmentName = IndexFileNames.parseSegmentName(last.getFileName().toString())[ FD ]
Line_11 $$ if (last != null) -->Line_14 $$ if (newSegmentName.equals(oldSegmentName)) [ CD ]
Line_17 $$ if (newGen > oldGen) -->Line_20 $$ files.remove(current)[ CD ]
Line_9 $$ Path last = null-->Line_18 $$ files.remove(last)[ FD ]
Line_9 $$ Path last = null-->Line_25 $$ last = current[ FD ]
Line_10 $$ for (Path current : delFiles) -->Line_16 $$ int newGen = Integer.parseInt(IndexFileNames.stripExtension(IndexFileNames.stripSegmentName(current.getFileName().toString())).replace("_", ""), Character.MAX_RADIX)[ FD ]
Line_14 $$ if (newSegmentName.equals(oldSegmentName)) -->Line_16 $$ int newGen = Integer.parseInt(IndexFileNames.stripExtension(IndexFileNames.stripSegmentName(current.getFileName().toString())).replace("_", ""), Character.MAX_RADIX)[ CD ]
Line_4 $$ for (Path file : files) -->Line_5 $$ if (file.getFileName().toString().endsWith(".liv")) [ FD ]
Line_13 $$ final String oldSegmentName = IndexFileNames.parseSegmentName(last.getFileName().toString())-->Line_14 $$ if (newSegmentName.equals(oldSegmentName)) [ FD ]
