Line_7 $$ String name = String.valueOf(filePath.getFileName())-->Line_12 $$ FileEventUtil.copyFile(sourceSyncFile.getTypePK(), folderId, repositoryId, syncAccountId, name, targetSyncFile)[ FD ]
Line_3 $$ if (Files.notExists(filePath)) -->Line_4 $$ return null[ CD ]
Line_2 $$ public static SyncFile copySyncFile(SyncFile sourceSyncFile, Path filePath, long folderId, long repositoryId, long syncAccountId) throws Exception -->Line_11 $$ IODeltaUtil.copyChecksums(sourceSyncFile, targetSyncFile)[ CD ]
Line_10 $$ SyncFile targetSyncFile = addSyncFile(null, checksum, false, null, filePath.toString(), mimeType, name, folderId, repositoryId, size, SyncFile.STATE_SYNCED, syncAccountId, SyncFile.TYPE_FILE)-->Line_12 $$ FileEventUtil.copyFile(sourceSyncFile.getTypePK(), folderId, repositoryId, syncAccountId, name, targetSyncFile)[ FD ]
Line_2 $$ public static SyncFile copySyncFile(SyncFile sourceSyncFile, Path filePath, long folderId, long repositoryId, long syncAccountId) throws Exception -->Line_3 $$ if (Files.notExists(filePath)) [ FD ]
Line_10 $$ SyncFile targetSyncFile = addSyncFile(null, checksum, false, null, filePath.toString(), mimeType, name, folderId, repositoryId, size, SyncFile.STATE_SYNCED, syncAccountId, SyncFile.TYPE_FILE)-->Line_11 $$ IODeltaUtil.copyChecksums(sourceSyncFile, targetSyncFile)[ FD ]
Line_8 $$ String mimeType = Files.probeContentType(filePath)-->Line_10 $$ SyncFile targetSyncFile = addSyncFile(null, checksum, false, null, filePath.toString(), mimeType, name, folderId, repositoryId, size, SyncFile.STATE_SYNCED, syncAccountId, SyncFile.TYPE_FILE)[ FD ]
Line_2 $$ public static SyncFile copySyncFile(SyncFile sourceSyncFile, Path filePath, long folderId, long repositoryId, long syncAccountId) throws Exception -->Line_8 $$ String mimeType = Files.probeContentType(filePath)[ CD ]
Line_2 $$ public static SyncFile copySyncFile(SyncFile sourceSyncFile, Path filePath, long folderId, long repositoryId, long syncAccountId) throws Exception -->Line_13 $$ return targetSyncFile[ CD ]
Line_2 $$ public static SyncFile copySyncFile(SyncFile sourceSyncFile, Path filePath, long folderId, long repositoryId, long syncAccountId) throws Exception -->Line_12 $$ FileEventUtil.copyFile(sourceSyncFile.getTypePK(), folderId, repositoryId, syncAccountId, name, targetSyncFile)[ FD ]
Line_2 $$ public static SyncFile copySyncFile(SyncFile sourceSyncFile, Path filePath, long folderId, long repositoryId, long syncAccountId) throws Exception -->Line_12 $$ FileEventUtil.copyFile(sourceSyncFile.getTypePK(), folderId, repositoryId, syncAccountId, name, targetSyncFile)[ CD ]
Line_2 $$ public static SyncFile copySyncFile(SyncFile sourceSyncFile, Path filePath, long folderId, long repositoryId, long syncAccountId) throws Exception -->Line_10 $$ SyncFile targetSyncFile = addSyncFile(null, checksum, false, null, filePath.toString(), mimeType, name, folderId, repositoryId, size, SyncFile.STATE_SYNCED, syncAccountId, SyncFile.TYPE_FILE)[ FD ]
Line_2 $$ public static SyncFile copySyncFile(SyncFile sourceSyncFile, Path filePath, long folderId, long repositoryId, long syncAccountId) throws Exception -->Line_6 $$ String checksum = FileUtil.getChecksum(filePath)[ FD ]
Line_6 $$ String checksum = FileUtil.getChecksum(filePath)-->Line_10 $$ SyncFile targetSyncFile = addSyncFile(null, checksum, false, null, filePath.toString(), mimeType, name, folderId, repositoryId, size, SyncFile.STATE_SYNCED, syncAccountId, SyncFile.TYPE_FILE)[ FD ]
Line_2 $$ public static SyncFile copySyncFile(SyncFile sourceSyncFile, Path filePath, long folderId, long repositoryId, long syncAccountId) throws Exception -->Line_7 $$ String name = String.valueOf(filePath.getFileName())[ FD ]
Line_2 $$ public static SyncFile copySyncFile(SyncFile sourceSyncFile, Path filePath, long folderId, long repositoryId, long syncAccountId) throws Exception -->Line_8 $$ String mimeType = Files.probeContentType(filePath)[ FD ]
Line_2 $$ public static SyncFile copySyncFile(SyncFile sourceSyncFile, Path filePath, long folderId, long repositoryId, long syncAccountId) throws Exception -->Line_11 $$ IODeltaUtil.copyChecksums(sourceSyncFile, targetSyncFile)[ FD ]
Line_2 $$ public static SyncFile copySyncFile(SyncFile sourceSyncFile, Path filePath, long folderId, long repositoryId, long syncAccountId) throws Exception -->Line_9 $$ long size = Files.size(filePath)[ CD ]
Line_2 $$ public static SyncFile copySyncFile(SyncFile sourceSyncFile, Path filePath, long folderId, long repositoryId, long syncAccountId) throws Exception -->Line_3 $$ if (Files.notExists(filePath)) [ CD ]
Line_9 $$ long size = Files.size(filePath)-->Line_10 $$ SyncFile targetSyncFile = addSyncFile(null, checksum, false, null, filePath.toString(), mimeType, name, folderId, repositoryId, size, SyncFile.STATE_SYNCED, syncAccountId, SyncFile.TYPE_FILE)[ FD ]
Line_2 $$ public static SyncFile copySyncFile(SyncFile sourceSyncFile, Path filePath, long folderId, long repositoryId, long syncAccountId) throws Exception -->Line_7 $$ String name = String.valueOf(filePath.getFileName())[ CD ]
Line_2 $$ public static SyncFile copySyncFile(SyncFile sourceSyncFile, Path filePath, long folderId, long repositoryId, long syncAccountId) throws Exception -->Line_6 $$ String checksum = FileUtil.getChecksum(filePath)[ CD ]
Line_2 $$ public static SyncFile copySyncFile(SyncFile sourceSyncFile, Path filePath, long folderId, long repositoryId, long syncAccountId) throws Exception -->Line_9 $$ long size = Files.size(filePath)[ FD ]
Line_7 $$ String name = String.valueOf(filePath.getFileName())-->Line_10 $$ SyncFile targetSyncFile = addSyncFile(null, checksum, false, null, filePath.toString(), mimeType, name, folderId, repositoryId, size, SyncFile.STATE_SYNCED, syncAccountId, SyncFile.TYPE_FILE)[ FD ]
Line_2 $$ public static SyncFile copySyncFile(SyncFile sourceSyncFile, Path filePath, long folderId, long repositoryId, long syncAccountId) throws Exception -->Line_10 $$ SyncFile targetSyncFile = addSyncFile(null, checksum, false, null, filePath.toString(), mimeType, name, folderId, repositoryId, size, SyncFile.STATE_SYNCED, syncAccountId, SyncFile.TYPE_FILE)[ CD ]
