Line_2 $$ public Set<ShardId> findAllShardIds(final Index index) throws IOException -->Line_4 $$ if (nodePaths == null || locks == null) [ CD ]
Line_14 $$ for (Path indexPath : indexStream) -->Line_15 $$ if (indexName.equals(indexPath.getFileName().toString())) [ FD ]
Line_2 $$ public Set<ShardId> findAllShardIds(final Index index) throws IOException -->Line_8 $$ final Set<ShardId> shardIds = new HashSet()[ CD ]
Line_2 $$ public Set<ShardId> findAllShardIds(final Index index) throws IOException -->Line_9 $$ String indexName = index.name()[ CD ]
Line_15 $$ if (indexName.equals(indexPath.getFileName().toString())) -->Line_16 $$ shardIds.addAll(findAllShardsForIndex(indexPath))[ CD ]
Line_9 $$ String indexName = index.name()-->Line_15 $$ if (indexName.equals(indexPath.getFileName().toString())) [ FD ]
Line_8 $$ final Set<ShardId> shardIds = new HashSet()-->Line_16 $$ shardIds.addAll(findAllShardsForIndex(indexPath))[ FD ]
Line_2 $$ public Set<ShardId> findAllShardIds(final Index index) throws IOException -->Line_9 $$ String indexName = index.name()[ FD ]
Line_14 $$ for (Path indexPath : indexStream) -->Line_16 $$ shardIds.addAll(findAllShardsForIndex(indexPath))[ FD ]
Line_11 $$ Path location = nodePath.indicesPath-->Line_12 $$ if (Files.isDirectory(location)) [ FD ]
Line_2 $$ public Set<ShardId> findAllShardIds(final Index index) throws IOException -->Line_22 $$ return shardIds[ CD ]
Line_11 $$ Path location = nodePath.indicesPath-->Line_13 $$ try (DirectoryStream<Path> indexStream = Files.newDirectoryStream(location)) [ FD ]
