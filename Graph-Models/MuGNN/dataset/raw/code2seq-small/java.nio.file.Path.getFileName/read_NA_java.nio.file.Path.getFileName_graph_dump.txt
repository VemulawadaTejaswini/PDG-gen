Line_10 $$ long contentSize = indexInput.length() - CodecUtil.footerLength() - filePointer-->Line_11 $$ try (IndexInput slice = indexInput.slice("state_xcontent", filePointer, contentSize)) [ FD ]
Line_3 $$ try (Directory dir = newDirectory(file.getParent())) -->Line_4 $$ try (final IndexInput indexInput = dir.openInput(file.getFileName().toString(), IOContext.DEFAULT)) [ FD ]
Line_4 $$ try (final IndexInput indexInput = dir.openInput(file.getFileName().toString(), IOContext.DEFAULT)) -->Line_10 $$ long contentSize = indexInput.length() - CodecUtil.footerLength() - filePointer[ FD ]
Line_2 $$ public final T read(Path file) throws IOException -->Line_3 $$ try (Directory dir = newDirectory(file.getParent())) [ FD ]
Line_2 $$ public final T read(Path file) throws IOException -->Line_4 $$ try (final IndexInput indexInput = dir.openInput(file.getFileName().toString(), IOContext.DEFAULT)) [ FD ]
Line_4 $$ try (final IndexInput indexInput = dir.openInput(file.getFileName().toString(), IOContext.DEFAULT)) -->Line_9 $$ long filePointer = indexInput.getFilePointer()[ FD ]
Line_7 $$ final XContentType xContentType = XContentType.values()[indexInput.readInt()]-->Line_12 $$ try (XContentParser parser = XContentFactory.xContent(xContentType).createParser(new InputStreamIndexInput(slice, contentSize))) [ FD ]
Line_12 $$ try (XContentParser parser = XContentFactory.xContent(xContentType).createParser(new InputStreamIndexInput(slice, contentSize))) -->Line_13 $$ return fromXContent(parser)[ FD ]
Line_9 $$ long filePointer = indexInput.getFilePointer()-->Line_11 $$ try (IndexInput slice = indexInput.slice("state_xcontent", filePointer, contentSize)) [ FD ]
Line_4 $$ try (final IndexInput indexInput = dir.openInput(file.getFileName().toString(), IOContext.DEFAULT)) -->Line_7 $$ final XContentType xContentType = XContentType.values()[indexInput.readInt()][ FD ]
Line_4 $$ try (final IndexInput indexInput = dir.openInput(file.getFileName().toString(), IOContext.DEFAULT)) -->Line_8 $$ indexInput.readLong()[ FD ]
Line_4 $$ try (final IndexInput indexInput = dir.openInput(file.getFileName().toString(), IOContext.DEFAULT)) -->Line_6 $$ CodecUtil.checkHeader(indexInput, STATE_FILE_CODEC, STATE_FILE_VERSION, STATE_FILE_VERSION)[ FD ]
Line_4 $$ try (final IndexInput indexInput = dir.openInput(file.getFileName().toString(), IOContext.DEFAULT)) -->Line_5 $$ CodecUtil.checksumEntireFile(indexInput)[ FD ]
Line_4 $$ try (final IndexInput indexInput = dir.openInput(file.getFileName().toString(), IOContext.DEFAULT)) -->Line_11 $$ try (IndexInput slice = indexInput.slice("state_xcontent", filePointer, contentSize)) [ FD ]
