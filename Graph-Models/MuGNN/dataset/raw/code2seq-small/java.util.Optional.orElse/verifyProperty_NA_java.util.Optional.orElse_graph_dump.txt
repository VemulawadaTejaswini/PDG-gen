Line_2 $$ private static void verifyProperty(Optional<String> catalog, String name, String value) -->Line_4 $$ checkArgument(!name.isEmpty(), "Session property name is empty")[ FD ]
Line_5 $$ CharsetEncoder charsetEncoder = US_ASCII.newEncoder()-->Line_9 $$ checkArgument(charsetEncoder.canEncode(name), "Session property name is not US_ASCII: %s", name)[ FD ]
Line_2 $$ private static void verifyProperty(Optional<String> catalog, String name, String value) -->Line_6 $$ checkArgument(catalog.orElse("").indexOf('=') < 0, "Session property catalog must not contain '=': %s", name)[ FD ]
Line_2 $$ private static void verifyProperty(Optional<String> catalog, String name, String value) -->Line_9 $$ checkArgument(charsetEncoder.canEncode(name), "Session property name is not US_ASCII: %s", name)[ FD ]
Line_2 $$ private static void verifyProperty(Optional<String> catalog, String name, String value) -->Line_6 $$ checkArgument(catalog.orElse("").indexOf('=') < 0, "Session property catalog must not contain '=': %s", name)[ CD ]
Line_2 $$ private static void verifyProperty(Optional<String> catalog, String name, String value) -->Line_10 $$ checkArgument(charsetEncoder.canEncode(value), "Session property value is not US_ASCII: %s", value)[ FD ]
Line_2 $$ private static void verifyProperty(Optional<String> catalog, String name, String value) -->Line_8 $$ checkArgument(name.indexOf('=') < 0, "Session property name must not contain '=': %s", name)[ CD ]
Line_2 $$ private static void verifyProperty(Optional<String> catalog, String name, String value) -->Line_8 $$ checkArgument(name.indexOf('=') < 0, "Session property name must not contain '=': %s", name)[ FD ]
Line_2 $$ private static void verifyProperty(Optional<String> catalog, String name, String value) -->Line_3 $$ checkArgument(!catalog.isPresent() || !catalog.get().isEmpty(), "Invalid session property: %s.%s:%s", catalog, name, value)[ CD ]
Line_2 $$ private static void verifyProperty(Optional<String> catalog, String name, String value) -->Line_4 $$ checkArgument(!name.isEmpty(), "Session property name is empty")[ CD ]
Line_2 $$ private static void verifyProperty(Optional<String> catalog, String name, String value) -->Line_3 $$ checkArgument(!catalog.isPresent() || !catalog.get().isEmpty(), "Invalid session property: %s.%s:%s", catalog, name, value)[ FD ]
Line_2 $$ private static void verifyProperty(Optional<String> catalog, String name, String value) -->Line_5 $$ CharsetEncoder charsetEncoder = US_ASCII.newEncoder()[ CD ]
Line_2 $$ private static void verifyProperty(Optional<String> catalog, String name, String value) -->Line_10 $$ checkArgument(charsetEncoder.canEncode(value), "Session property value is not US_ASCII: %s", value)[ CD ]
Line_2 $$ private static void verifyProperty(Optional<String> catalog, String name, String value) -->Line_7 $$ checkArgument(charsetEncoder.canEncode(catalog.orElse("")), "Session property catalog is not US_ASCII: %s", name)[ CD ]
Line_2 $$ private static void verifyProperty(Optional<String> catalog, String name, String value) -->Line_7 $$ checkArgument(charsetEncoder.canEncode(catalog.orElse("")), "Session property catalog is not US_ASCII: %s", name)[ FD ]
Line_5 $$ CharsetEncoder charsetEncoder = US_ASCII.newEncoder()-->Line_10 $$ checkArgument(charsetEncoder.canEncode(value), "Session property value is not US_ASCII: %s", value)[ FD ]
Line_2 $$ private static void verifyProperty(Optional<String> catalog, String name, String value) -->Line_9 $$ checkArgument(charsetEncoder.canEncode(name), "Session property name is not US_ASCII: %s", name)[ CD ]
Line_5 $$ CharsetEncoder charsetEncoder = US_ASCII.newEncoder()-->Line_7 $$ checkArgument(charsetEncoder.canEncode(catalog.orElse("")), "Session property catalog is not US_ASCII: %s", name)[ FD ]
