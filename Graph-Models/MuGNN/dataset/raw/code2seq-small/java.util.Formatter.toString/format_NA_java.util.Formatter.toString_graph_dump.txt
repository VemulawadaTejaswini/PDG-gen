Line_16 $$ StringWriter writer = new StringWriter()-->Line_18 $$ fmt.format("Caused by: %s", writer.getBuffer())[ FD ]
Line_2 $$ public static String format(String heading, Collection<Message> errorMessages) -->Line_25 $$ fmt.format("%s errors", errorMessages.size())[ FD ]
Line_7 $$ for (Message errorMessage : errorMessages) -->Line_14 $$ Throwable cause = errorMessage.getCause()[ FD ]
Line_11 $$ Object source = dependencies.get(i)-->Line_12 $$ formatSource(fmt, source)[ FD ]
Line_14 $$ Throwable cause = errorMessage.getCause()-->Line_17 $$ cause.printStackTrace(new PrintWriter(writer))[ FD ]
Line_3 $$ try (Formatter fmt = new Formatter(Locale.ROOT)) -->Line_18 $$ fmt.format("Caused by: %s", writer.getBuffer())[ FD ]
Line_9 $$ List<Object> dependencies = errorMessage.getSources()-->Line_10 $$ for (int i = dependencies.size() - 1; i >= 0; i--) [ FD ]
Line_15 $$ if (displayCauses && cause != null) -->Line_17 $$ cause.printStackTrace(new PrintWriter(writer))[ CD ]
Line_7 $$ for (Message errorMessage : errorMessages) -->Line_9 $$ List<Object> dependencies = errorMessage.getSources()[ FD ]
Line_3 $$ try (Formatter fmt = new Formatter(Locale.ROOT)) -->Line_12 $$ formatSource(fmt, source)[ FD ]
Line_22 $$ if (errorMessages.size() == 1) -->Line_25 $$ fmt.format("%s errors", errorMessages.size())[ CD ]
Line_3 $$ try (Formatter fmt = new Formatter(Locale.ROOT)) -->Line_25 $$ fmt.format("%s errors", errorMessages.size())[ FD ]
Line_5 $$ int index = 1-->Line_8 $$ fmt.format("%s) %s%n", index++, errorMessage.getMessage())[ FD ]
Line_3 $$ try (Formatter fmt = new Formatter(Locale.ROOT)) -->Line_23 $$ fmt.format("1 error")[ FD ]
Line_15 $$ if (displayCauses && cause != null) -->Line_16 $$ StringWriter writer = new StringWriter()[ CD ]
Line_2 $$ public static String format(String heading, Collection<Message> errorMessages) -->Line_6 $$ boolean displayCauses = getOnlyCause(errorMessages) == null[ FD ]
Line_10 $$ for (int i = dependencies.size() - 1; i >= 0; i--) -->Line_11 $$ Object source = dependencies.get(i)[ CD ]
Line_6 $$ boolean displayCauses = getOnlyCause(errorMessages) == null-->Line_15 $$ if (displayCauses && cause != null) [ FD ]
Line_2 $$ public static String format(String heading, Collection<Message> errorMessages) -->Line_22 $$ if (errorMessages.size() == 1) [ FD ]
Line_7 $$ for (Message errorMessage : errorMessages) -->Line_8 $$ fmt.format("%s) %s%n", index++, errorMessage.getMessage())[ FD ]
Line_3 $$ try (Formatter fmt = new Formatter(Locale.ROOT)) -->Line_8 $$ fmt.format("%s) %s%n", index++, errorMessage.getMessage())[ FD ]
Line_3 $$ try (Formatter fmt = new Formatter(Locale.ROOT)) -->Line_27 $$ return fmt.toString()[ FD ]
Line_9 $$ List<Object> dependencies = errorMessage.getSources()-->Line_11 $$ Object source = dependencies.get(i)[ FD ]
Line_22 $$ if (errorMessages.size() == 1) -->Line_23 $$ fmt.format("1 error")[ CD ]
Line_2 $$ public static String format(String heading, Collection<Message> errorMessages) -->Line_4 $$ fmt.format(heading).format(":%n%n")[ FD ]
Line_10 $$ for (int i = dependencies.size() - 1; i >= 0; i--) -->Line_11 $$ Object source = dependencies.get(i)[ FD ]
Line_3 $$ try (Formatter fmt = new Formatter(Locale.ROOT)) -->Line_20 $$ fmt.format("%n")[ FD ]
Line_3 $$ try (Formatter fmt = new Formatter(Locale.ROOT)) -->Line_4 $$ fmt.format(heading).format(":%n%n")[ FD ]
Line_15 $$ if (displayCauses && cause != null) -->Line_18 $$ fmt.format("Caused by: %s", writer.getBuffer())[ CD ]
Line_10 $$ for (int i = dependencies.size() - 1; i >= 0; i--) -->Line_12 $$ formatSource(fmt, source)[ CD ]
