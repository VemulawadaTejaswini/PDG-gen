Line_5 $$ for (int i = 0; i < 4096; ++i) -->Line_8 $$ ((StringBuilder) fmt.out()).setLength(keylen)[ CD ]
Line_2 $$ public void map(NullWritable nk, NullWritable nv, OutputCollector<Text, Text> output, Reporter reporter) throws IOException -->Line_11 $$ val.getBytes()[0] = (byte) id[ CD ]
Line_2 $$ public void map(NullWritable nk, NullWritable nv, OutputCollector<Text, Text> output, Reporter reporter) throws IOException -->Line_14 $$ output.collect(key, val)[ CD ]
Line_2 $$ public void map(NullWritable nk, NullWritable nv, OutputCollector<Text, Text> output, Reporter reporter) throws IOException -->Line_10 $$ val.set(b, 0, getValLen(id, nMaps) - 128)[ CD ]
Line_2 $$ public void map(NullWritable nk, NullWritable nv, OutputCollector<Text, Text> output, Reporter reporter) throws IOException -->Line_18 $$ key.set("B" + fmt.format(tagfmt, id).toString())[ CD ]
Line_2 $$ public void map(NullWritable nk, NullWritable nv, OutputCollector<Text, Text> output, Reporter reporter) throws IOException -->Line_12 $$ ((StringBuilder) fmt.out()).setLength(keylen)[ CD ]
Line_5 $$ for (int i = 0; i < 4096; ++i) -->Line_7 $$ output.collect(key, val)[ CD ]
Line_2 $$ public void map(NullWritable nk, NullWritable nv, OutputCollector<Text, Text> output, Reporter reporter) throws IOException -->Line_14 $$ output.collect(key, val)[ FD ]
Line_2 $$ public void map(NullWritable nk, NullWritable nv, OutputCollector<Text, Text> output, Reporter reporter) throws IOException -->Line_7 $$ output.collect(key, val)[ FD ]
Line_2 $$ public void map(NullWritable nk, NullWritable nv, OutputCollector<Text, Text> output, Reporter reporter) throws IOException -->Line_19 $$ output.collect(key, val)[ FD ]
Line_5 $$ for (int i = 0; i < 4096; ++i) -->Line_6 $$ key.set(fmt.format(tagfmt, i).toString())[ CD ]
Line_2 $$ public void map(NullWritable nk, NullWritable nv, OutputCollector<Text, Text> output, Reporter reporter) throws IOException -->Line_16 $$ val.getBytes()[0] = (byte) id[ CD ]
Line_2 $$ public void map(NullWritable nk, NullWritable nv, OutputCollector<Text, Text> output, Reporter reporter) throws IOException -->Line_13 $$ key.set("A" + fmt.format(tagfmt, id).toString())[ CD ]
Line_2 $$ public void map(NullWritable nk, NullWritable nv, OutputCollector<Text, Text> output, Reporter reporter) throws IOException -->Line_19 $$ output.collect(key, val)[ CD ]
Line_2 $$ public void map(NullWritable nk, NullWritable nv, OutputCollector<Text, Text> output, Reporter reporter) throws IOException -->Line_4 $$ val.getBytes()[0] = (byte) id[ CD ]
Line_2 $$ public void map(NullWritable nk, NullWritable nv, OutputCollector<Text, Text> output, Reporter reporter) throws IOException -->Line_15 $$ val.set(b, 0, getValLen(id, nMaps))[ CD ]
Line_2 $$ public void map(NullWritable nk, NullWritable nv, OutputCollector<Text, Text> output, Reporter reporter) throws IOException -->Line_17 $$ ((StringBuilder) fmt.out()).setLength(keylen)[ CD ]
Line_2 $$ public void map(NullWritable nk, NullWritable nv, OutputCollector<Text, Text> output, Reporter reporter) throws IOException -->Line_3 $$ val.set(b, 0, 1000)[ CD ]
Line_2 $$ public void map(NullWritable nk, NullWritable nv, OutputCollector<Text, Text> output, Reporter reporter) throws IOException -->Line_5 $$ for (int i = 0; i < 4096; ++i) [ CD ]
Line_5 $$ for (int i = 0; i < 4096; ++i) -->Line_6 $$ key.set(fmt.format(tagfmt, i).toString())[ FD ]
