Line_8 $$ JPanel _panel = new JPanel(new BorderLayout())-->Line_12 $$ _panel.add(myNotifyUncaughtCheckBox, BorderLayout.NORTH)[ FD ]
Line_2 $$ public JComponent getComponent() -->Line_38 $$ myNotifyUncaughtCheckBox.addActionListener(listener)[ CD ]
Line_2 $$ public JComponent getComponent() -->Line_10 $$ notificationsBox.add(_panel)[ CD ]
Line_2 $$ public JComponent getComponent() -->Line_21 $$ ActionListener listener = new ActionListener() [ CD ]
Line_21 $$ ActionListener listener = new ActionListener() -->Line_24 $$ Object source = e.getSource()[ FD ]
Line_26 $$ if (myNotifyCaughtCheckBox.equals(source)) -->Line_27 $$ toCheck = myNotifyUncaughtCheckBox[ CD ]
Line_2 $$ public JComponent getComponent() -->Line_17 $$ _panel0.add(Box.createHorizontalStrut(3), BorderLayout.WEST)[ CD ]
Line_2 $$ public JComponent getComponent() -->Line_12 $$ _panel.add(myNotifyUncaughtCheckBox, BorderLayout.NORTH)[ CD ]
Line_2 $$ public JComponent getComponent() -->Line_19 $$ _panel.add(_panel0, BorderLayout.NORTH)[ CD ]
Line_7 $$ Box notificationsBox = Box.createVerticalBox()-->Line_13 $$ notificationsBox.add(_panel)[ FD ]
Line_7 $$ Box notificationsBox = Box.createVerticalBox()-->Line_10 $$ notificationsBox.add(_panel)[ FD ]
Line_11 $$ _panel = new JPanel(new BorderLayout())-->Line_20 $$ _panel.setBorder(IdeBorderFactory.createTitledBorder(DebuggerBundle.message("label.exception.breakpoint.properties.panel.group.notifications"), true))[ FD ]
Line_8 $$ JPanel _panel = new JPanel(new BorderLayout())-->Line_11 $$ _panel = new JPanel(new BorderLayout())[ FD ]
Line_8 $$ JPanel _panel = new JPanel(new BorderLayout())-->Line_10 $$ notificationsBox.add(_panel)[ FD ]
Line_25 $$ JCheckBox toCheck = null-->Line_29 $$ toCheck = myNotifyCaughtCheckBox[ FD ]
Line_2 $$ public JComponent getComponent() -->Line_11 $$ _panel = new JPanel(new BorderLayout())[ CD ]
Line_11 $$ _panel = new JPanel(new BorderLayout())-->Line_12 $$ _panel.add(myNotifyUncaughtCheckBox, BorderLayout.NORTH)[ FD ]
Line_23 $$ if (!myNotifyCaughtCheckBox.isSelected() && !myNotifyUncaughtCheckBox.isSelected()) -->Line_24 $$ Object source = e.getSource()[ CD ]
Line_2 $$ public JComponent getComponent() -->Line_16 $$ _panel0.add(notificationsBox, BorderLayout.CENTER)[ CD ]
Line_27 $$ toCheck = myNotifyUncaughtCheckBox-->Line_29 $$ toCheck = myNotifyCaughtCheckBox[ FD ]
Line_2 $$ public JComponent getComponent() -->Line_18 $$ _panel0.add(Box.createHorizontalStrut(3), BorderLayout.EAST)[ CD ]
Line_27 $$ toCheck = myNotifyUncaughtCheckBox-->Line_32 $$ toCheck.setSelected(true)[ FD ]
Line_14 $$ _panel = new JPanel(new BorderLayout())-->Line_20 $$ _panel.setBorder(IdeBorderFactory.createTitledBorder(DebuggerBundle.message("label.exception.breakpoint.properties.panel.group.notifications"), true))[ FD ]
Line_2 $$ public JComponent getComponent() -->Line_9 $$ _panel.add(myNotifyCaughtCheckBox, BorderLayout.NORTH)[ CD ]
Line_14 $$ _panel = new JPanel(new BorderLayout())-->Line_19 $$ _panel.add(_panel0, BorderLayout.NORTH)[ FD ]
Line_11 $$ _panel = new JPanel(new BorderLayout())-->Line_19 $$ _panel.add(_panel0, BorderLayout.NORTH)[ FD ]
Line_8 $$ JPanel _panel = new JPanel(new BorderLayout())-->Line_19 $$ _panel.add(_panel0, BorderLayout.NORTH)[ FD ]
Line_24 $$ Object source = e.getSource()-->Line_26 $$ if (myNotifyCaughtCheckBox.equals(source)) [ FD ]
Line_15 $$ JPanel _panel0 = new JPanel(new BorderLayout())-->Line_16 $$ _panel0.add(notificationsBox, BorderLayout.CENTER)[ FD ]
Line_2 $$ public JComponent getComponent() -->Line_14 $$ _panel = new JPanel(new BorderLayout())[ CD ]
Line_29 $$ toCheck = myNotifyCaughtCheckBox-->Line_31 $$ if (toCheck != null) [ FD ]
Line_2 $$ public JComponent getComponent() -->Line_37 $$ myNotifyCaughtCheckBox.addActionListener(listener)[ CD ]
Line_23 $$ if (!myNotifyCaughtCheckBox.isSelected() && !myNotifyUncaughtCheckBox.isSelected()) -->Line_26 $$ if (myNotifyCaughtCheckBox.equals(source)) [ CD ]
Line_11 $$ _panel = new JPanel(new BorderLayout())-->Line_14 $$ _panel = new JPanel(new BorderLayout())[ FD ]
Line_26 $$ if (myNotifyCaughtCheckBox.equals(source)) -->Line_28 $$ if (myNotifyUncaughtCheckBox.equals(source)) [ CD ]
Line_8 $$ JPanel _panel = new JPanel(new BorderLayout())-->Line_9 $$ _panel.add(myNotifyCaughtCheckBox, BorderLayout.NORTH)[ FD ]
Line_11 $$ _panel = new JPanel(new BorderLayout())-->Line_13 $$ notificationsBox.add(_panel)[ FD ]
Line_8 $$ JPanel _panel = new JPanel(new BorderLayout())-->Line_13 $$ notificationsBox.add(_panel)[ FD ]
Line_23 $$ if (!myNotifyCaughtCheckBox.isSelected() && !myNotifyUncaughtCheckBox.isSelected()) -->Line_31 $$ if (toCheck != null) [ CD ]
Line_21 $$ ActionListener listener = new ActionListener() -->Line_38 $$ myNotifyUncaughtCheckBox.addActionListener(listener)[ FD ]
Line_28 $$ if (myNotifyUncaughtCheckBox.equals(source)) -->Line_29 $$ toCheck = myNotifyCaughtCheckBox[ CD ]
Line_2 $$ public JComponent getComponent() -->Line_15 $$ JPanel _panel0 = new JPanel(new BorderLayout())[ CD ]
Line_2 $$ public JComponent getComponent() -->Line_13 $$ notificationsBox.add(_panel)[ CD ]
Line_21 $$ ActionListener listener = new ActionListener() -->Line_23 $$ if (!myNotifyCaughtCheckBox.isSelected() && !myNotifyUncaughtCheckBox.isSelected()) [ CD ]
Line_24 $$ Object source = e.getSource()-->Line_28 $$ if (myNotifyUncaughtCheckBox.equals(source)) [ FD ]
Line_15 $$ JPanel _panel0 = new JPanel(new BorderLayout())-->Line_17 $$ _panel0.add(Box.createHorizontalStrut(3), BorderLayout.WEST)[ FD ]
Line_2 $$ public JComponent getComponent() -->Line_8 $$ JPanel _panel = new JPanel(new BorderLayout())[ CD ]
Line_23 $$ if (!myNotifyCaughtCheckBox.isSelected() && !myNotifyUncaughtCheckBox.isSelected()) -->Line_25 $$ JCheckBox toCheck = null[ CD ]
Line_8 $$ JPanel _panel = new JPanel(new BorderLayout())-->Line_20 $$ _panel.setBorder(IdeBorderFactory.createTitledBorder(DebuggerBundle.message("label.exception.breakpoint.properties.panel.group.notifications"), true))[ FD ]
Line_25 $$ JCheckBox toCheck = null-->Line_31 $$ if (toCheck != null) [ FD ]
Line_2 $$ public JComponent getComponent() -->Line_5 $$ DialogUtil.registerMnemonic(myNotifyCaughtCheckBox)[ CD ]
Line_7 $$ Box notificationsBox = Box.createVerticalBox()-->Line_16 $$ _panel0.add(notificationsBox, BorderLayout.CENTER)[ FD ]
Line_21 $$ ActionListener listener = new ActionListener() -->Line_37 $$ myNotifyCaughtCheckBox.addActionListener(listener)[ FD ]
Line_2 $$ public JComponent getComponent() -->Line_39 $$ return _panel[ CD ]
Line_25 $$ JCheckBox toCheck = null-->Line_27 $$ toCheck = myNotifyUncaughtCheckBox[ FD ]
Line_8 $$ JPanel _panel = new JPanel(new BorderLayout())-->Line_14 $$ _panel = new JPanel(new BorderLayout())[ FD ]
Line_15 $$ JPanel _panel0 = new JPanel(new BorderLayout())-->Line_18 $$ _panel0.add(Box.createHorizontalStrut(3), BorderLayout.EAST)[ FD ]
Line_2 $$ public JComponent getComponent() -->Line_6 $$ DialogUtil.registerMnemonic(myNotifyUncaughtCheckBox)[ CD ]
Line_2 $$ public JComponent getComponent() -->Line_20 $$ _panel.setBorder(IdeBorderFactory.createTitledBorder(DebuggerBundle.message("label.exception.breakpoint.properties.panel.group.notifications"), true))[ CD ]
Line_27 $$ toCheck = myNotifyUncaughtCheckBox-->Line_31 $$ if (toCheck != null) [ FD ]
Line_31 $$ if (toCheck != null) -->Line_32 $$ toCheck.setSelected(true)[ CD ]
Line_29 $$ toCheck = myNotifyCaughtCheckBox-->Line_32 $$ toCheck.setSelected(true)[ FD ]
Line_2 $$ public JComponent getComponent() -->Line_7 $$ Box notificationsBox = Box.createVerticalBox()[ CD ]
Line_25 $$ JCheckBox toCheck = null-->Line_32 $$ toCheck.setSelected(true)[ FD ]
Line_15 $$ JPanel _panel0 = new JPanel(new BorderLayout())-->Line_19 $$ _panel.add(_panel0, BorderLayout.NORTH)[ FD ]
