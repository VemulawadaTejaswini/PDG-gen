Line_4 $$ final Font font = JBFont.create(JBUI.Fonts.label().deriveFont(fontSize))-->Line_15 $$ g.setFont(font)[ FD ]
Line_12 $$ g = g.create()-->Line_18 $$ g.dispose()[ FD ]
Line_8 $$ return new Icon() -->Line_29 $$ return height[ CD ]
Line_8 $$ return new Icon() -->Line_12 $$ g = g.create()[ FD ]
Line_8 $$ return new Icon() -->Line_12 $$ g = g.create()[ CD ]
Line_8 $$ return new Icon() -->Line_16 $$ UIUtil.drawStringWithHighlighting(g, text, x + JBUI.scale(2), y + height - JBUI.scale(1), JBColor.foreground(), JBColor.background())[ FD ]
Line_5 $$ FontMetrics metrics = component.getFontMetrics(font)-->Line_7 $$ final int height = metrics.getHeight()[ FD ]
Line_8 $$ return new Icon() -->Line_24 $$ return width[ CD ]
Line_8 $$ return new Icon() -->Line_15 $$ g.setFont(font)[ FD ]
Line_8 $$ return new Icon() -->Line_18 $$ g.dispose()[ FD ]
Line_4 $$ final Font font = JBFont.create(JBUI.Fonts.label().deriveFont(fontSize))-->Line_5 $$ FontMetrics metrics = component.getFontMetrics(font)[ FD ]
Line_8 $$ return new Icon() -->Line_14 $$ GraphicsUtil.setupAntialiasing(g)[ FD ]
Line_12 $$ g = g.create()-->Line_15 $$ g.setFont(font)[ FD ]
Line_5 $$ FontMetrics metrics = component.getFontMetrics(font)-->Line_6 $$ final int width = metrics.stringWidth(text) + JBUI.scale(4)[ FD ]
Line_12 $$ g = g.create()-->Line_16 $$ UIUtil.drawStringWithHighlighting(g, text, x + JBUI.scale(2), y + height - JBUI.scale(1), JBColor.foreground(), JBColor.background())[ FD ]
Line_12 $$ g = g.create()-->Line_14 $$ GraphicsUtil.setupAntialiasing(g)[ FD ]
