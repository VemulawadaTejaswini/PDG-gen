Line_13 $$ for (ASTNode prev = prevIndentNode(myCurrentIndentHolder); prev != null; prev = prevIndentNode(prev)) -->Line_15 $$ for (int i = chars.length() - 1; i >= 0; i--) [ CD ]
Line_8 $$ for (int i = end - 1; i >= 0; i--) -->Line_16 $$ if (chars.charAt(i) == '\n') [ FD ]
Line_8 $$ for (int i = end - 1; i >= 0; i--) -->Line_15 $$ for (int i = chars.length() - 1; i >= 0; i--) [ FD ]
Line_8 $$ for (int i = end - 1; i >= 0; i--) -->Line_9 $$ if (text.charAt(i) == '\n') [ CD ]
Line_13 $$ for (ASTNode prev = prevIndentNode(myCurrentIndentHolder); prev != null; prev = prevIndentNode(prev)) -->Line_14 $$ CharSequence chars = prev.getChars()[ CD ]
Line_6 $$ int end = myLineStartOffset - 1-->Line_10 $$ return text.subSequence(i + 1, end)[ FD ]
Line_7 $$ CharSequence text = myCurrentIndentHolder.getChars()-->Line_10 $$ return text.subSequence(i + 1, end)[ FD ]
Line_14 $$ CharSequence chars = prev.getChars()-->Line_15 $$ for (int i = chars.length() - 1; i >= 0; i--) [ FD ]
Line_2 $$ public CharSequence getPrevLineIndent() -->Line_13 $$ for (ASTNode prev = prevIndentNode(myCurrentIndentHolder); prev != null; prev = prevIndentNode(prev)) [ CD ]
Line_2 $$ public CharSequence getPrevLineIndent() -->Line_7 $$ CharSequence text = myCurrentIndentHolder.getChars()[ CD ]
Line_13 $$ for (ASTNode prev = prevIndentNode(myCurrentIndentHolder); prev != null; prev = prevIndentNode(prev)) -->Line_14 $$ CharSequence chars = prev.getChars()[ FD ]
Line_16 $$ if (chars.charAt(i) == '\n') -->Line_17 $$ return chars.subSequence(i + 1, chars.length())[ CD ]
Line_2 $$ public CharSequence getPrevLineIndent() -->Line_8 $$ for (int i = end - 1; i >= 0; i--) [ CD ]
Line_14 $$ CharSequence chars = prev.getChars()-->Line_16 $$ if (chars.charAt(i) == '\n') [ FD ]
Line_2 $$ public CharSequence getPrevLineIndent() -->Line_22 $$ return null[ CD ]
Line_15 $$ for (int i = chars.length() - 1; i >= 0; i--) -->Line_16 $$ if (chars.charAt(i) == '\n') [ CD ]
Line_7 $$ CharSequence text = myCurrentIndentHolder.getChars()-->Line_9 $$ if (text.charAt(i) == '\n') [ FD ]
Line_15 $$ for (int i = chars.length() - 1; i >= 0; i--) -->Line_16 $$ if (chars.charAt(i) == '\n') [ FD ]
Line_2 $$ public CharSequence getPrevLineIndent() -->Line_6 $$ int end = myLineStartOffset - 1[ CD ]
Line_9 $$ if (text.charAt(i) == '\n') -->Line_10 $$ return text.subSequence(i + 1, end)[ CD ]
Line_3 $$ if (myCurrentIndentHolder == null) -->Line_4 $$ return null[ CD ]
Line_14 $$ CharSequence chars = prev.getChars()-->Line_17 $$ return chars.subSequence(i + 1, chars.length())[ FD ]
Line_8 $$ for (int i = end - 1; i >= 0; i--) -->Line_9 $$ if (text.charAt(i) == '\n') [ FD ]
Line_2 $$ public CharSequence getPrevLineIndent() -->Line_3 $$ if (myCurrentIndentHolder == null) [ CD ]
Line_13 $$ for (ASTNode prev = prevIndentNode(myCurrentIndentHolder); prev != null; prev = prevIndentNode(prev)) -->Line_20 $$ return chars[ CD ]
