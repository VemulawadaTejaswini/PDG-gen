Line_8 $$ while (index < text.length()) -->Line_10 $$ if (StringUtil.startsWith(text, index, XML_PROLOG_END))[ CD ]
Line_7 $$ index += XML_PROLOG_START.length()-->Line_26 $$ while (index < text.length()) [ FD ]
Line_7 $$ index += XML_PROLOG_START.length()-->Line_14 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_8 $$ while (index < text.length()) -->Line_34 $$ index++[ CD ]
Line_3 $$ int index = 0-->Line_27 $$ char c = text.charAt(index)[ FD ]
Line_25 $$ StringBuilder encoding = new StringBuilder()-->Line_30 $$ encoding.append(c)[ FD ]
Line_3 $$ int index = 0-->Line_4 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_3 $$ int index = 0-->Line_9 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_9 $$ index = skipWhiteSpace(index, text)-->Line_24 $$ index++[ FD ]
Line_13 $$ index += ENCODING.length()-->Line_18 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_3 $$ int index = 0-->Line_8 $$ while (index < text.length()) [ FD ]
Line_4 $$ index = skipWhiteSpace(index, text)-->Line_13 $$ index += ENCODING.length()[ FD ]
Line_7 $$ index += XML_PROLOG_START.length()-->Line_10 $$ if (StringUtil.startsWith(text, index, XML_PROLOG_END))[ FD ]
Line_18 $$ index = skipWhiteSpace(index, text)-->Line_12 $$ if (StringUtil.startsWith(text, index, ENCODING)) [ FD ]
Line_4 $$ index = skipWhiteSpace(index, text)-->Line_19 $$ if (index >= text.length())[ FD ]
Line_3 $$ int index = 0-->Line_12 $$ if (StringUtil.startsWith(text, index, ENCODING)) [ FD ]
Line_3 $$ int index = 0-->Line_14 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_26 $$ while (index < text.length()) -->Line_30 $$ encoding.append(c)[ CD ]
Line_14 $$ index = skipWhiteSpace(index, text)-->Line_19 $$ if (index >= text.length())[ FD ]
Line_25 $$ StringBuilder encoding = new StringBuilder()-->Line_29 $$ return encoding.toString()[ FD ]
Line_13 $$ index += ENCODING.length()-->Line_27 $$ char c = text.charAt(index)[ FD ]
Line_26 $$ while (index < text.length()) -->Line_28 $$ if (c == quote)[ CD ]
Line_12 $$ if (StringUtil.startsWith(text, index, ENCODING)) -->Line_21 $$ char quote = text.charAt(index)[ CD ]
Line_13 $$ index += ENCODING.length()-->Line_24 $$ index++[ FD ]
Line_3 $$ int index = 0-->Line_18 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_13 $$ index += ENCODING.length()-->Line_8 $$ while (index < text.length()) [ FD ]
Line_14 $$ index = skipWhiteSpace(index, text)-->Line_27 $$ char c = text.charAt(index)[ FD ]
Line_14 $$ index = skipWhiteSpace(index, text)-->Line_31 $$ index++[ FD ]
Line_3 $$ int index = 0-->Line_19 $$ if (index >= text.length())[ FD ]
Line_14 $$ index = skipWhiteSpace(index, text)-->Line_21 $$ char quote = text.charAt(index)[ FD ]
Line_12 $$ if (StringUtil.startsWith(text, index, ENCODING)) -->Line_17 $$ index++[ CD ]
Line_9 $$ index = skipWhiteSpace(index, text)-->Line_21 $$ char quote = text.charAt(index)[ FD ]
Line_2 $$ public static String extractXmlEncodingFromProlog(@NotNull CharSequence text) -->Line_19 $$ if (index >= text.length())[ FD ]
Line_18 $$ index = skipWhiteSpace(index, text)-->Line_9 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_13 $$ index += ENCODING.length()-->Line_21 $$ char quote = text.charAt(index)[ FD ]
Line_12 $$ if (StringUtil.startsWith(text, index, ENCODING)) -->Line_26 $$ while (index < text.length()) [ CD ]
Line_9 $$ index = skipWhiteSpace(index, text)-->Line_31 $$ index++[ FD ]
Line_27 $$ char c = text.charAt(index)-->Line_30 $$ encoding.append(c)[ FD ]
Line_9 $$ index = skipWhiteSpace(index, text)-->Line_18 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_28 $$ if (c == quote)-->Line_29 $$ return encoding.toString()[ CD ]
Line_2 $$ public static String extractXmlEncodingFromProlog(@NotNull CharSequence text) -->Line_3 $$ int index = 0[ CD ]
Line_3 $$ int index = 0-->Line_7 $$ index += XML_PROLOG_START.length()[ FD ]
Line_4 $$ index = skipWhiteSpace(index, text)-->Line_31 $$ index++[ FD ]
Line_7 $$ index += XML_PROLOG_START.length()-->Line_8 $$ while (index < text.length()) [ FD ]
Line_2 $$ public static String extractXmlEncodingFromProlog(@NotNull CharSequence text) -->Line_18 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_4 $$ index = skipWhiteSpace(index, text)-->Line_27 $$ char c = text.charAt(index)[ FD ]
Line_9 $$ index = skipWhiteSpace(index, text)-->Line_27 $$ char c = text.charAt(index)[ FD ]
Line_12 $$ if (StringUtil.startsWith(text, index, ENCODING)) -->Line_15 $$ if (index >= text.length() || text.charAt(index) != '=')[ CD ]
Line_18 $$ index = skipWhiteSpace(index, text)-->Line_24 $$ index++[ FD ]
Line_2 $$ public static String extractXmlEncodingFromProlog(@NotNull CharSequence text) -->Line_7 $$ index += XML_PROLOG_START.length()[ CD ]
Line_3 $$ int index = 0-->Line_15 $$ if (index >= text.length() || text.charAt(index) != '=')[ FD ]
Line_3 $$ int index = 0-->Line_17 $$ index++[ FD ]
Line_7 $$ index += XML_PROLOG_START.length()-->Line_12 $$ if (StringUtil.startsWith(text, index, ENCODING)) [ FD ]
Line_18 $$ index = skipWhiteSpace(index, text)-->Line_34 $$ index++[ FD ]
Line_4 $$ index = skipWhiteSpace(index, text)-->Line_12 $$ if (StringUtil.startsWith(text, index, ENCODING)) [ FD ]
Line_3 $$ int index = 0-->Line_24 $$ index++[ FD ]
Line_2 $$ public static String extractXmlEncodingFromProlog(@NotNull CharSequence text) -->Line_14 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_12 $$ if (StringUtil.startsWith(text, index, ENCODING)) -->Line_25 $$ StringBuilder encoding = new StringBuilder()[ CD ]
Line_14 $$ index = skipWhiteSpace(index, text)-->Line_8 $$ while (index < text.length()) [ FD ]
Line_2 $$ public static String extractXmlEncodingFromProlog(@NotNull CharSequence text) -->Line_4 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_2 $$ public static String extractXmlEncodingFromProlog(@NotNull CharSequence text) -->Line_8 $$ while (index < text.length()) [ CD ]
Line_14 $$ index = skipWhiteSpace(index, text)-->Line_15 $$ if (index >= text.length() || text.charAt(index) != '=')[ FD ]
Line_7 $$ index += XML_PROLOG_START.length()-->Line_18 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_27 $$ char c = text.charAt(index)-->Line_28 $$ if (c == quote)[ FD ]
Line_13 $$ index += ENCODING.length()-->Line_10 $$ if (StringUtil.startsWith(text, index, XML_PROLOG_END))[ FD ]
Line_7 $$ index += XML_PROLOG_START.length()-->Line_27 $$ char c = text.charAt(index)[ FD ]
Line_4 $$ index = skipWhiteSpace(index, text)-->Line_26 $$ while (index < text.length()) [ FD ]
Line_4 $$ index = skipWhiteSpace(index, text)-->Line_8 $$ while (index < text.length()) [ FD ]
Line_18 $$ index = skipWhiteSpace(index, text)-->Line_31 $$ index++[ FD ]
Line_4 $$ index = skipWhiteSpace(index, text)-->Line_34 $$ index++[ FD ]
Line_9 $$ index = skipWhiteSpace(index, text)-->Line_26 $$ while (index < text.length()) [ FD ]
Line_2 $$ public static String extractXmlEncodingFromProlog(@NotNull CharSequence text) -->Line_4 $$ index = skipWhiteSpace(index, text)[ CD ]
Line_2 $$ public static String extractXmlEncodingFromProlog(@NotNull CharSequence text) -->Line_8 $$ while (index < text.length()) [ FD ]
Line_14 $$ index = skipWhiteSpace(index, text)-->Line_18 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_4 $$ index = skipWhiteSpace(index, text)-->Line_15 $$ if (index >= text.length() || text.charAt(index) != '=')[ FD ]
Line_4 $$ index = skipWhiteSpace(index, text)-->Line_17 $$ index++[ FD ]
Line_4 $$ index = skipWhiteSpace(index, text)-->Line_9 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_8 $$ while (index < text.length()) -->Line_12 $$ if (StringUtil.startsWith(text, index, ENCODING)) [ CD ]
Line_2 $$ public static String extractXmlEncodingFromProlog(@NotNull CharSequence text) -->Line_36 $$ return null[ CD ]
Line_4 $$ index = skipWhiteSpace(index, text)-->Line_5 $$ if (!StringUtil.startsWith(text, index, XML_PROLOG_START))[ FD ]
Line_2 $$ public static String extractXmlEncodingFromProlog(@NotNull CharSequence text) -->Line_10 $$ if (StringUtil.startsWith(text, index, XML_PROLOG_END))[ FD ]
Line_18 $$ index = skipWhiteSpace(index, text)-->Line_15 $$ if (index >= text.length() || text.charAt(index) != '=')[ FD ]
Line_18 $$ index = skipWhiteSpace(index, text)-->Line_14 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_18 $$ index = skipWhiteSpace(index, text)-->Line_10 $$ if (StringUtil.startsWith(text, index, XML_PROLOG_END))[ FD ]
Line_7 $$ index += XML_PROLOG_START.length()-->Line_17 $$ index++[ FD ]
Line_2 $$ public static String extractXmlEncodingFromProlog(@NotNull CharSequence text) -->Line_15 $$ if (index >= text.length() || text.charAt(index) != '=')[ FD ]
Line_3 $$ int index = 0-->Line_21 $$ char quote = text.charAt(index)[ FD ]
Line_12 $$ if (StringUtil.startsWith(text, index, ENCODING)) -->Line_24 $$ index++[ CD ]
Line_2 $$ public static String extractXmlEncodingFromProlog(@NotNull CharSequence text) -->Line_5 $$ if (!StringUtil.startsWith(text, index, XML_PROLOG_START))[ FD ]
Line_7 $$ index += XML_PROLOG_START.length()-->Line_15 $$ if (index >= text.length() || text.charAt(index) != '=')[ FD ]
Line_5 $$ if (!StringUtil.startsWith(text, index, XML_PROLOG_START))-->Line_6 $$ return null[ CD ]
Line_2 $$ public static String extractXmlEncodingFromProlog(@NotNull CharSequence text) -->Line_9 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_12 $$ if (StringUtil.startsWith(text, index, ENCODING)) -->Line_22 $$ if (quote != '\'' && quote != '\"')[ CD ]
Line_13 $$ index += ENCODING.length()-->Line_12 $$ if (StringUtil.startsWith(text, index, ENCODING)) [ FD ]
Line_18 $$ index = skipWhiteSpace(index, text)-->Line_17 $$ index++[ FD ]
Line_2 $$ public static String extractXmlEncodingFromProlog(@NotNull CharSequence text) -->Line_21 $$ char quote = text.charAt(index)[ FD ]
Line_13 $$ index += ENCODING.length()-->Line_15 $$ if (index >= text.length() || text.charAt(index) != '=')[ FD ]
Line_4 $$ index = skipWhiteSpace(index, text)-->Line_10 $$ if (StringUtil.startsWith(text, index, XML_PROLOG_END))[ FD ]
Line_4 $$ index = skipWhiteSpace(index, text)-->Line_18 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_18 $$ index = skipWhiteSpace(index, text)-->Line_19 $$ if (index >= text.length())[ FD ]
Line_12 $$ if (StringUtil.startsWith(text, index, ENCODING)) -->Line_19 $$ if (index >= text.length())[ CD ]
Line_2 $$ public static String extractXmlEncodingFromProlog(@NotNull CharSequence text) -->Line_5 $$ if (!StringUtil.startsWith(text, index, XML_PROLOG_START))[ CD ]
Line_2 $$ public static String extractXmlEncodingFromProlog(@NotNull CharSequence text) -->Line_26 $$ while (index < text.length()) [ FD ]
Line_14 $$ index = skipWhiteSpace(index, text)-->Line_34 $$ index++[ FD ]
Line_14 $$ index = skipWhiteSpace(index, text)-->Line_17 $$ index++[ FD ]
Line_21 $$ char quote = text.charAt(index)-->Line_28 $$ if (c == quote)[ FD ]
Line_12 $$ if (StringUtil.startsWith(text, index, ENCODING)) -->Line_18 $$ index = skipWhiteSpace(index, text)[ CD ]
Line_26 $$ while (index < text.length()) -->Line_27 $$ char c = text.charAt(index)[ CD ]
Line_3 $$ int index = 0-->Line_31 $$ index++[ FD ]
Line_8 $$ while (index < text.length()) -->Line_9 $$ index = skipWhiteSpace(index, text)[ CD ]
Line_2 $$ public static String extractXmlEncodingFromProlog(@NotNull CharSequence text) -->Line_27 $$ char c = text.charAt(index)[ FD ]
Line_18 $$ index = skipWhiteSpace(index, text)-->Line_8 $$ while (index < text.length()) [ FD ]
Line_14 $$ index = skipWhiteSpace(index, text)-->Line_26 $$ while (index < text.length()) [ FD ]
Line_12 $$ if (StringUtil.startsWith(text, index, ENCODING)) -->Line_13 $$ index += ENCODING.length()[ CD ]
Line_9 $$ index = skipWhiteSpace(index, text)-->Line_19 $$ if (index >= text.length())[ FD ]
Line_9 $$ index = skipWhiteSpace(index, text)-->Line_13 $$ index += ENCODING.length()[ FD ]
Line_18 $$ index = skipWhiteSpace(index, text)-->Line_27 $$ char c = text.charAt(index)[ FD ]
Line_3 $$ int index = 0-->Line_34 $$ index++[ FD ]
Line_4 $$ index = skipWhiteSpace(index, text)-->Line_14 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_4 $$ index = skipWhiteSpace(index, text)-->Line_24 $$ index++[ FD ]
Line_3 $$ int index = 0-->Line_5 $$ if (!StringUtil.startsWith(text, index, XML_PROLOG_START))[ FD ]
Line_3 $$ int index = 0-->Line_26 $$ while (index < text.length()) [ FD ]
Line_4 $$ index = skipWhiteSpace(index, text)-->Line_21 $$ char quote = text.charAt(index)[ FD ]
Line_12 $$ if (StringUtil.startsWith(text, index, ENCODING)) -->Line_14 $$ index = skipWhiteSpace(index, text)[ CD ]
Line_13 $$ index += ENCODING.length()-->Line_17 $$ index++[ FD ]
Line_7 $$ index += XML_PROLOG_START.length()-->Line_9 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_7 $$ index += XML_PROLOG_START.length()-->Line_21 $$ char quote = text.charAt(index)[ FD ]
Line_10 $$ if (StringUtil.startsWith(text, index, XML_PROLOG_END))-->Line_11 $$ return null[ CD ]
Line_18 $$ index = skipWhiteSpace(index, text)-->Line_26 $$ while (index < text.length()) [ FD ]
Line_7 $$ index += XML_PROLOG_START.length()-->Line_31 $$ index++[ FD ]
Line_9 $$ index = skipWhiteSpace(index, text)-->Line_17 $$ index++[ FD ]
Line_9 $$ index = skipWhiteSpace(index, text)-->Line_8 $$ while (index < text.length()) [ FD ]
Line_14 $$ index = skipWhiteSpace(index, text)-->Line_24 $$ index++[ FD ]
Line_7 $$ index += XML_PROLOG_START.length()-->Line_34 $$ index++[ FD ]
Line_3 $$ int index = 0-->Line_10 $$ if (StringUtil.startsWith(text, index, XML_PROLOG_END))[ FD ]
Line_13 $$ index += ENCODING.length()-->Line_34 $$ index++[ FD ]
Line_14 $$ index = skipWhiteSpace(index, text)-->Line_10 $$ if (StringUtil.startsWith(text, index, XML_PROLOG_END))[ FD ]
Line_7 $$ index += XML_PROLOG_START.length()-->Line_13 $$ index += ENCODING.length()[ FD ]
Line_13 $$ index += ENCODING.length()-->Line_31 $$ index++[ FD ]
Line_13 $$ index += ENCODING.length()-->Line_14 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_9 $$ index = skipWhiteSpace(index, text)-->Line_14 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_14 $$ index = skipWhiteSpace(index, text)-->Line_12 $$ if (StringUtil.startsWith(text, index, ENCODING)) [ FD ]
Line_7 $$ index += XML_PROLOG_START.length()-->Line_24 $$ index++[ FD ]
Line_13 $$ index += ENCODING.length()-->Line_9 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_4 $$ index = skipWhiteSpace(index, text)-->Line_7 $$ index += XML_PROLOG_START.length()[ FD ]
Line_18 $$ index = skipWhiteSpace(index, text)-->Line_21 $$ char quote = text.charAt(index)[ FD ]
Line_3 $$ int index = 0-->Line_13 $$ index += ENCODING.length()[ FD ]
Line_26 $$ while (index < text.length()) -->Line_31 $$ index++[ CD ]
Line_7 $$ index += XML_PROLOG_START.length()-->Line_19 $$ if (index >= text.length())[ FD ]
Line_13 $$ index += ENCODING.length()-->Line_19 $$ if (index >= text.length())[ FD ]
Line_14 $$ index = skipWhiteSpace(index, text)-->Line_9 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_13 $$ index += ENCODING.length()-->Line_26 $$ while (index < text.length()) [ FD ]
Line_9 $$ index = skipWhiteSpace(index, text)-->Line_15 $$ if (index >= text.length() || text.charAt(index) != '=')[ FD ]
Line_2 $$ public static String extractXmlEncodingFromProlog(@NotNull CharSequence text) -->Line_12 $$ if (StringUtil.startsWith(text, index, ENCODING)) [ FD ]
Line_9 $$ index = skipWhiteSpace(index, text)-->Line_34 $$ index++[ FD ]
Line_9 $$ index = skipWhiteSpace(index, text)-->Line_12 $$ if (StringUtil.startsWith(text, index, ENCODING)) [ FD ]
Line_9 $$ index = skipWhiteSpace(index, text)-->Line_10 $$ if (StringUtil.startsWith(text, index, XML_PROLOG_END))[ FD ]
