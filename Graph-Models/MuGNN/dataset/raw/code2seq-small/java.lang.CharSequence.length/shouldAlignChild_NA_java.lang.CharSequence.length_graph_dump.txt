Line_4 $$ final IElementType nodeType = myNode.getElementType()-->Line_44 $$ if (nodeType == JavaElementType.ASSIGNMENT_EXPRESSION) [ FD ]
Line_3 $$ int role = getChildRole(child)-->Line_31 $$ if (role == ChildRole.MODIFIER_LIST)[ FD ]
Line_4 $$ final IElementType nodeType = myNode.getElementType()-->Line_15 $$ if (nodeType == JavaElementType.THROWS_LIST) [ FD ]
Line_2 $$ private boolean shouldAlignChild(@NotNull final ASTNode child) -->Line_3 $$ int role = getChildRole(child)[ FD ]
Line_51 $$ if (child.getElementType() == JavaTokenType.END_OF_LINE_COMMENT) -->Line_52 $$ ASTNode previous = child.getTreePrev()[ CD ]
Line_2 $$ private boolean shouldAlignChild(@NotNull final ASTNode child) -->Line_52 $$ ASTNode previous = child.getTreePrev()[ FD ]
Line_30 $$ if (nodeType == JavaElementType.METHOD) -->Line_43 $$ return false[ CD ]
Line_20 $$ if (nodeType == JavaElementType.CLASS) -->Line_21 $$ if (role == ChildRole.CLASS_OR_INTERFACE_KEYWORD)[ CD ]
Line_28 $$ if (JavaElementType.FIELD == nodeType) -->Line_30 $$ if (nodeType == JavaElementType.METHOD) [ CD ]
Line_15 $$ if (nodeType == JavaElementType.THROWS_LIST) -->Line_20 $$ if (nodeType == JavaElementType.CLASS) [ CD ]
Line_58 $$ if (nodeType == JavaElementType.MODIFIER_LIST) -->Line_63 $$ return false[ CD ]
Line_3 $$ int role = getChildRole(child)-->Line_33 $$ if (role == ChildRole.TYPE_PARAMETER_LIST)[ FD ]
Line_6 $$ if (role == ChildRole.FOR_INITIALIZATION || role == ChildRole.CONDITION || role == ChildRole.FOR_UPDATE) -->Line_7 $$ return true[ CD ]
Line_31 $$ if (role == ChildRole.MODIFIER_LIST)-->Line_32 $$ return true[ CD ]
Line_11 $$ if (role == ChildRole.REFERENCE_IN_LIST || role == ChildRole.IMPLEMENTS_KEYWORD) -->Line_12 $$ return true[ CD ]
Line_51 $$ if (child.getElementType() == JavaTokenType.END_OF_LINE_COMMENT) -->Line_57 $$ return true[ CD ]
Line_44 $$ if (nodeType == JavaElementType.ASSIGNMENT_EXPRESSION) -->Line_51 $$ if (child.getElementType() == JavaTokenType.END_OF_LINE_COMMENT) [ CD ]
Line_2 $$ private boolean shouldAlignChild(@NotNull final ASTNode child) -->Line_59 $$ ASTNode previous = child.getTreePrev()[ FD ]
Line_58 $$ if (nodeType == JavaElementType.MODIFIER_LIST) -->Line_60 $$ if (previous == null || previous.getTreeParent() != myNode) [ CD ]
Line_21 $$ if (role == ChildRole.CLASS_OR_INTERFACE_KEYWORD)-->Line_22 $$ return true[ CD ]
Line_39 $$ if (role == ChildRole.THROWS_LIST && mySettings.ALIGN_THROWS_KEYWORD)-->Line_40 $$ return true[ CD ]
Line_45 $$ if (role == ChildRole.LOPERAND)-->Line_46 $$ return true[ CD ]
Line_3 $$ int role = getChildRole(child)-->Line_37 $$ if (role == ChildRole.NAME)[ FD ]
Line_44 $$ if (nodeType == JavaElementType.ASSIGNMENT_EXPRESSION) -->Line_47 $$ if (role == ChildRole.ROPERAND && child.getElementType() == JavaElementType.ASSIGNMENT_EXPRESSION) [ CD ]
Line_30 $$ if (nodeType == JavaElementType.METHOD) -->Line_44 $$ if (nodeType == JavaElementType.ASSIGNMENT_EXPRESSION) [ CD ]
Line_25 $$ if (role == ChildRole.MODIFIER_LIST)-->Line_26 $$ return true[ CD ]
Line_2 $$ private boolean shouldAlignChild(@NotNull final ASTNode child) -->Line_29 $$ return shouldAlignFieldInColumns(child)[ FD ]
Line_47 $$ if (role == ChildRole.ROPERAND && child.getElementType() == JavaElementType.ASSIGNMENT_EXPRESSION) -->Line_48 $$ return true[ CD ]
Line_2 $$ private boolean shouldAlignChild(@NotNull final ASTNode child) -->Line_3 $$ int role = getChildRole(child)[ CD ]
Line_4 $$ final IElementType nodeType = myNode.getElementType()-->Line_30 $$ if (nodeType == JavaElementType.METHOD) [ FD ]
Line_15 $$ if (nodeType == JavaElementType.THROWS_LIST) -->Line_19 $$ return false[ CD ]
Line_51 $$ if (child.getElementType() == JavaTokenType.END_OF_LINE_COMMENT) -->Line_58 $$ if (nodeType == JavaElementType.MODIFIER_LIST) [ CD ]
Line_58 $$ if (nodeType == JavaElementType.MODIFIER_LIST) -->Line_59 $$ ASTNode previous = child.getTreePrev()[ CD ]
Line_30 $$ if (nodeType == JavaElementType.METHOD) -->Line_35 $$ if (role == ChildRole.TYPE)[ CD ]
Line_5 $$ if (nodeType == JavaElementType.FOR_STATEMENT) -->Line_9 $$ return false[ CD ]
Line_30 $$ if (nodeType == JavaElementType.METHOD) -->Line_39 $$ if (role == ChildRole.THROWS_LIST && mySettings.ALIGN_THROWS_KEYWORD)[ CD ]
Line_4 $$ final IElementType nodeType = myNode.getElementType()-->Line_5 $$ if (nodeType == JavaElementType.FOR_STATEMENT) [ FD ]
Line_3 $$ int role = getChildRole(child)-->Line_45 $$ if (role == ChildRole.LOPERAND)[ FD ]
Line_10 $$ if (nodeType == JavaElementType.EXTENDS_LIST || nodeType == JavaElementType.IMPLEMENTS_LIST) -->Line_15 $$ if (nodeType == JavaElementType.THROWS_LIST) [ CD ]
Line_3 $$ int role = getChildRole(child)-->Line_16 $$ if (role == ChildRole.REFERENCE_IN_LIST) [ FD ]
Line_30 $$ if (nodeType == JavaElementType.METHOD) -->Line_37 $$ if (role == ChildRole.NAME)[ CD ]
Line_15 $$ if (nodeType == JavaElementType.THROWS_LIST) -->Line_16 $$ if (role == ChildRole.REFERENCE_IN_LIST) [ CD ]
Line_4 $$ final IElementType nodeType = myNode.getElementType()-->Line_28 $$ if (JavaElementType.FIELD == nodeType) [ FD ]
Line_41 $$ if (role == ChildRole.METHOD_BODY)-->Line_42 $$ return !getNode().textContains('\n')[ CD ]
Line_5 $$ if (nodeType == JavaElementType.FOR_STATEMENT) -->Line_6 $$ if (role == ChildRole.FOR_INITIALIZATION || role == ChildRole.CONDITION || role == ChildRole.FOR_UPDATE) [ CD ]
Line_30 $$ if (nodeType == JavaElementType.METHOD) -->Line_33 $$ if (role == ChildRole.TYPE_PARAMETER_LIST)[ CD ]
Line_52 $$ ASTNode previous = child.getTreePrev()-->Line_60 $$ if (previous == null || previous.getTreeParent() != myNode) [ FD ]
Line_33 $$ if (role == ChildRole.TYPE_PARAMETER_LIST)-->Line_34 $$ return true[ CD ]
Line_52 $$ ASTNode previous = child.getTreePrev()-->Line_54 $$ if (previous != null && previous.getElementType() == TokenType.WHITE_SPACE && (prevChars = previous.getChars()).length() > 0 && prevChars.charAt(prevChars.length() - 1) == '\n') [ FD ]
Line_3 $$ int role = getChildRole(child)-->Line_25 $$ if (role == ChildRole.MODIFIER_LIST)[ FD ]
Line_51 $$ if (child.getElementType() == JavaTokenType.END_OF_LINE_COMMENT) -->Line_54 $$ if (previous != null && previous.getElementType() == TokenType.WHITE_SPACE && (prevChars = previous.getChars()).length() > 0 && prevChars.charAt(prevChars.length() - 1) == '\n') [ CD ]
Line_60 $$ if (previous == null || previous.getTreeParent() != myNode) -->Line_61 $$ return true[ CD ]
Line_44 $$ if (nodeType == JavaElementType.ASSIGNMENT_EXPRESSION) -->Line_45 $$ if (role == ChildRole.LOPERAND)[ CD ]
Line_58 $$ if (nodeType == JavaElementType.MODIFIER_LIST) -->Line_65 $$ return true[ CD ]
Line_37 $$ if (role == ChildRole.NAME)-->Line_38 $$ return true[ CD ]
Line_51 $$ if (child.getElementType() == JavaTokenType.END_OF_LINE_COMMENT) -->Line_53 $$ CharSequence prevChars[ CD ]
Line_30 $$ if (nodeType == JavaElementType.METHOD) -->Line_41 $$ if (role == ChildRole.METHOD_BODY)[ CD ]
Line_2 $$ private boolean shouldAlignChild(@NotNull final ASTNode child) -->Line_4 $$ final IElementType nodeType = myNode.getElementType()[ CD ]
Line_3 $$ int role = getChildRole(child)-->Line_41 $$ if (role == ChildRole.METHOD_BODY)[ FD ]
Line_3 $$ int role = getChildRole(child)-->Line_35 $$ if (role == ChildRole.TYPE)[ FD ]
Line_10 $$ if (nodeType == JavaElementType.EXTENDS_LIST || nodeType == JavaElementType.IMPLEMENTS_LIST) -->Line_11 $$ if (role == ChildRole.REFERENCE_IN_LIST || role == ChildRole.IMPLEMENTS_KEYWORD) [ CD ]
Line_20 $$ if (nodeType == JavaElementType.CLASS) -->Line_28 $$ if (JavaElementType.FIELD == nodeType) [ CD ]
Line_4 $$ final IElementType nodeType = myNode.getElementType()-->Line_58 $$ if (nodeType == JavaElementType.MODIFIER_LIST) [ FD ]
Line_35 $$ if (role == ChildRole.TYPE)-->Line_36 $$ return true[ CD ]
Line_44 $$ if (nodeType == JavaElementType.ASSIGNMENT_EXPRESSION) -->Line_50 $$ return false[ CD ]
Line_2 $$ private boolean shouldAlignChild(@NotNull final ASTNode child) -->Line_51 $$ if (child.getElementType() == JavaTokenType.END_OF_LINE_COMMENT) [ FD ]
Line_54 $$ if (previous != null && previous.getElementType() == TokenType.WHITE_SPACE && (prevChars = previous.getChars()).length() > 0 && prevChars.charAt(prevChars.length() - 1) == '\n') -->Line_55 $$ return false[ CD ]
Line_20 $$ if (nodeType == JavaElementType.CLASS) -->Line_27 $$ return false[ CD ]
Line_5 $$ if (nodeType == JavaElementType.FOR_STATEMENT) -->Line_10 $$ if (nodeType == JavaElementType.EXTENDS_LIST || nodeType == JavaElementType.IMPLEMENTS_LIST) [ CD ]
Line_20 $$ if (nodeType == JavaElementType.CLASS) -->Line_25 $$ if (role == ChildRole.MODIFIER_LIST)[ CD ]
Line_2 $$ private boolean shouldAlignChild(@NotNull final ASTNode child) -->Line_47 $$ if (role == ChildRole.ROPERAND && child.getElementType() == JavaElementType.ASSIGNMENT_EXPRESSION) [ FD ]
Line_30 $$ if (nodeType == JavaElementType.METHOD) -->Line_31 $$ if (role == ChildRole.MODIFIER_LIST)[ CD ]
Line_53 $$ CharSequence prevChars-->Line_54 $$ if (previous != null && previous.getElementType() == TokenType.WHITE_SPACE && (prevChars = previous.getChars()).length() > 0 && prevChars.charAt(prevChars.length() - 1) == '\n') [ FD ]
Line_16 $$ if (role == ChildRole.REFERENCE_IN_LIST) -->Line_17 $$ return true[ CD ]
Line_3 $$ int role = getChildRole(child)-->Line_21 $$ if (role == ChildRole.CLASS_OR_INTERFACE_KEYWORD)[ FD ]
Line_10 $$ if (nodeType == JavaElementType.EXTENDS_LIST || nodeType == JavaElementType.IMPLEMENTS_LIST) -->Line_14 $$ return false[ CD ]
Line_2 $$ private boolean shouldAlignChild(@NotNull final ASTNode child) -->Line_5 $$ if (nodeType == JavaElementType.FOR_STATEMENT) [ CD ]
Line_23 $$ if (myIsAfterClassKeyword)-->Line_24 $$ return false[ CD ]
Line_4 $$ final IElementType nodeType = myNode.getElementType()-->Line_20 $$ if (nodeType == JavaElementType.CLASS) [ FD ]
Line_20 $$ if (nodeType == JavaElementType.CLASS) -->Line_23 $$ if (myIsAfterClassKeyword)[ CD ]
Line_28 $$ if (JavaElementType.FIELD == nodeType) -->Line_29 $$ return shouldAlignFieldInColumns(child)[ CD ]
