Line_2 $$ public static Set<String> getAllWords(final PsiElement context, final int offset) -->Line_4 $$ if (StringUtil.isEmpty(CompletionUtil.findJavaIdentifierPrefix(context, offset))) [ CD ]
Line_2 $$ public static Set<String> getAllWords(final PsiElement context, final int offset) -->Line_3 $$ final Set<String> words = new LinkedHashSet<String>()[ CD ]
Line_2 $$ public static Set<String> getAllWords(final PsiElement context, final int offset) -->Line_15 $$ return words[ CD ]
Line_10 $$ if (start > offset || offset > end) -->Line_11 $$ words.add(chars.subSequence(start, end).toString())[ CD ]
Line_3 $$ final Set<String> words = new LinkedHashSet<String>()-->Line_11 $$ words.add(chars.subSequence(start, end).toString())[ FD ]
Line_2 $$ public static Set<String> getAllWords(final PsiElement context, final int offset) -->Line_4 $$ if (StringUtil.isEmpty(CompletionUtil.findJavaIdentifierPrefix(context, offset))) [ FD ]
Line_2 $$ public static Set<String> getAllWords(final PsiElement context, final int offset) -->Line_8 $$ IdTableBuilding.scanWords(new IdTableBuilding.ScanWordProcessor() [ CD ]
Line_4 $$ if (StringUtil.isEmpty(CompletionUtil.findJavaIdentifierPrefix(context, offset))) -->Line_5 $$ return words[ CD ]
Line_2 $$ public static Set<String> getAllWords(final PsiElement context, final int offset) -->Line_7 $$ final CharSequence chars = context.getContainingFile().getViewProvider().getContents()[ FD ]
Line_8 $$ IdTableBuilding.scanWords(new IdTableBuilding.ScanWordProcessor() -->Line_11 $$ words.add(chars.subSequence(start, end).toString())[ FD ]
Line_8 $$ IdTableBuilding.scanWords(new IdTableBuilding.ScanWordProcessor() -->Line_10 $$ if (start > offset || offset > end) [ CD ]
Line_2 $$ public static Set<String> getAllWords(final PsiElement context, final int offset) -->Line_7 $$ final CharSequence chars = context.getContainingFile().getViewProvider().getContents()[ CD ]
Line_7 $$ final CharSequence chars = context.getContainingFile().getViewProvider().getContents()-->Line_11 $$ words.add(chars.subSequence(start, end).toString())[ FD ]
Line_7 $$ final CharSequence chars = context.getContainingFile().getViewProvider().getContents()-->Line_8 $$ IdTableBuilding.scanWords(new IdTableBuilding.ScanWordProcessor() [ FD ]
