Line_10 $$ CharSequence text = node.getChars()-->Line_12 $$ char c = text.charAt(myLineStartOffset)[ FD ]
Line_2 $$ public boolean nextLine() -->Line_3 $$ if (myCurrentIndentHolder == null) [ CD ]
Line_10 $$ CharSequence text = node.getChars()-->Line_13 $$ if (c == '\n' && myLineStartOffset < text.length() - 1) [ FD ]
Line_2 $$ public boolean nextLine() -->Line_6 $$ for (ASTNode node = myHelper.nextLeaf(myCurrentIndentHolder); node != null; node = myHelper.nextLeaf(node)) [ CD ]
Line_13 $$ if (c == '\n' && myLineStartOffset < text.length() - 1) -->Line_16 $$ return true[ CD ]
Line_6 $$ for (ASTNode node = myHelper.nextLeaf(myCurrentIndentHolder); node != null; node = myHelper.nextLeaf(node)) -->Line_10 $$ CharSequence text = node.getChars()[ FD ]
Line_11 $$ for (myLineStartOffset = 0; myLineStartOffset < text.length(); myLineStartOffset++) -->Line_13 $$ if (c == '\n' && myLineStartOffset < text.length() - 1) [ CD ]
Line_6 $$ for (ASTNode node = myHelper.nextLeaf(myCurrentIndentHolder); node != null; node = myHelper.nextLeaf(node)) -->Line_7 $$ if (myCurrentIndentHolder.getTextLength() <= 0) [ CD ]
Line_11 $$ for (myLineStartOffset = 0; myLineStartOffset < text.length(); myLineStartOffset++) -->Line_12 $$ char c = text.charAt(myLineStartOffset)[ CD ]
Line_6 $$ for (ASTNode node = myHelper.nextLeaf(myCurrentIndentHolder); node != null; node = myHelper.nextLeaf(node)) -->Line_10 $$ CharSequence text = node.getChars()[ CD ]
Line_10 $$ CharSequence text = node.getChars()-->Line_11 $$ for (myLineStartOffset = 0; myLineStartOffset < text.length(); myLineStartOffset++) [ FD ]
Line_2 $$ public boolean nextLine() -->Line_21 $$ return false[ CD ]
Line_3 $$ if (myCurrentIndentHolder == null) -->Line_4 $$ return false[ CD ]
Line_6 $$ for (ASTNode node = myHelper.nextLeaf(myCurrentIndentHolder); node != null; node = myHelper.nextLeaf(node)) -->Line_11 $$ for (myLineStartOffset = 0; myLineStartOffset < text.length(); myLineStartOffset++) [ CD ]
