Line_2 $$ public static boolean endsWith(@NotNull CharSequence text, @NotNull CharSequence suffix) -->Line_3 $$ int l1 = text.length()[ FD ]
Line_2 $$ public static boolean endsWith(@NotNull CharSequence text, @NotNull CharSequence suffix) -->Line_4 $$ int l2 = suffix.length()[ CD ]
Line_2 $$ public static boolean endsWith(@NotNull CharSequence text, @NotNull CharSequence suffix) -->Line_11 $$ return true[ CD ]
Line_7 $$ for (int i = l1 - 1; i >= l1 - l2; i--) -->Line_8 $$ if (text.charAt(i) != suffix.charAt(i + l2 - l1))[ FD ]
Line_2 $$ public static boolean endsWith(@NotNull CharSequence text, @NotNull CharSequence suffix) -->Line_8 $$ if (text.charAt(i) != suffix.charAt(i + l2 - l1))[ FD ]
Line_7 $$ for (int i = l1 - 1; i >= l1 - l2; i--) -->Line_8 $$ if (text.charAt(i) != suffix.charAt(i + l2 - l1))[ CD ]
Line_4 $$ int l2 = suffix.length()-->Line_5 $$ if (l1 < l2)[ FD ]
Line_2 $$ public static boolean endsWith(@NotNull CharSequence text, @NotNull CharSequence suffix) -->Line_7 $$ for (int i = l1 - 1; i >= l1 - l2; i--) [ CD ]
Line_5 $$ if (l1 < l2)-->Line_6 $$ return false[ CD ]
Line_2 $$ public static boolean endsWith(@NotNull CharSequence text, @NotNull CharSequence suffix) -->Line_3 $$ int l1 = text.length()[ CD ]
Line_8 $$ if (text.charAt(i) != suffix.charAt(i + l2 - l1))-->Line_9 $$ return false[ CD ]
Line_2 $$ public static boolean endsWith(@NotNull CharSequence text, @NotNull CharSequence suffix) -->Line_4 $$ int l2 = suffix.length()[ FD ]
Line_3 $$ int l1 = text.length()-->Line_5 $$ if (l1 < l2)[ FD ]
Line_2 $$ public static boolean endsWith(@NotNull CharSequence text, @NotNull CharSequence suffix) -->Line_5 $$ if (l1 < l2)[ CD ]
