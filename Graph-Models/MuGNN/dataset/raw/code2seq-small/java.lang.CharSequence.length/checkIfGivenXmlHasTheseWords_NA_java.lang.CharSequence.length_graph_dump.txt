Line_2 $$ private static boolean checkIfGivenXmlHasTheseWords(final String name, final XmlFile tldFileByUri) -->Line_28 $$ final CharSequence contents = tldFileByUri.getViewProvider().getContents()[ FD ]
Line_2 $$ private static boolean checkIfGivenXmlHasTheseWords(final String name, final XmlFile tldFileByUri) -->Line_6 $$ final String[] words = ArrayUtil.toStringArray(list)[ CD ]
Line_15 $$ final String localName = words[i]-->Line_18 $$ for (int j = 0; j < localName.length(); ++j) [ FD ]
Line_18 $$ for (int j = 0; j < localName.length(); ++j) -->Line_19 $$ if (chars.charAt(start + j) != localName.charAt(j))[ CD ]
Line_15 $$ final String localName = words[i]-->Line_16 $$ if (wordsFound[i] || localName.length() != foundWordLen)[ FD ]
Line_2 $$ private static boolean checkIfGivenXmlHasTheseWords(final String name, final XmlFile tldFileByUri) -->Line_5 $$ final List<String> list = StringUtil.getWordsIn(name)[ FD ]
Line_3 $$ if (name == null || name.isEmpty())-->Line_4 $$ return true[ CD ]
Line_5 $$ final List<String> list = StringUtil.getWordsIn(name)-->Line_6 $$ final String[] words = ArrayUtil.toStringArray(list)[ FD ]
Line_2 $$ private static boolean checkIfGivenXmlHasTheseWords(final String name, final XmlFile tldFileByUri) -->Line_3 $$ if (name == null || name.isEmpty())[ FD ]
Line_2 $$ private static boolean checkIfGivenXmlHasTheseWords(final String name, final XmlFile tldFileByUri) -->Line_30 $$ return wordsFoundCount[0] == words.length[ CD ]
Line_2 $$ private static boolean checkIfGivenXmlHasTheseWords(final String name, final XmlFile tldFileByUri) -->Line_29 $$ IdTableBuilding.scanWords(wordProcessor, contents, 0, contents.length())[ CD ]
Line_2 $$ private static boolean checkIfGivenXmlHasTheseWords(final String name, final XmlFile tldFileByUri) -->Line_3 $$ if (name == null || name.isEmpty())[ CD ]
Line_2 $$ private static boolean checkIfGivenXmlHasTheseWords(final String name, final XmlFile tldFileByUri) -->Line_9 $$ IdTableBuilding.ScanWordProcessor wordProcessor = new IdTableBuilding.ScanWordProcessor() [ CD ]
Line_18 $$ for (int j = 0; j < localName.length(); ++j) -->Line_19 $$ if (chars.charAt(start + j) != localName.charAt(j))[ FD ]
Line_9 $$ IdTableBuilding.ScanWordProcessor wordProcessor = new IdTableBuilding.ScanWordProcessor() -->Line_13 $$ final int foundWordLen = end - start[ CD ]
Line_14 $$ for (int i = 0; i < words.length; ++i) -->Line_16 $$ if (wordsFound[i] || localName.length() != foundWordLen)[ CD ]
Line_9 $$ IdTableBuilding.ScanWordProcessor wordProcessor = new IdTableBuilding.ScanWordProcessor() -->Line_19 $$ if (chars.charAt(start + j) != localName.charAt(j))[ FD ]
Line_2 $$ private static boolean checkIfGivenXmlHasTheseWords(final String name, final XmlFile tldFileByUri) -->Line_28 $$ final CharSequence contents = tldFileByUri.getViewProvider().getContents()[ CD ]
Line_2 $$ private static boolean checkIfGivenXmlHasTheseWords(final String name, final XmlFile tldFileByUri) -->Line_8 $$ final int[] wordsFoundCount = new int[1][ CD ]
Line_14 $$ for (int i = 0; i < words.length; ++i) -->Line_22 $$ wordsFound[i] = true[ CD ]
Line_14 $$ for (int i = 0; i < words.length; ++i) -->Line_15 $$ final String localName = words[i][ CD ]
Line_9 $$ IdTableBuilding.ScanWordProcessor wordProcessor = new IdTableBuilding.ScanWordProcessor() -->Line_29 $$ IdTableBuilding.scanWords(wordProcessor, contents, 0, contents.length())[ FD ]
Line_2 $$ private static boolean checkIfGivenXmlHasTheseWords(final String name, final XmlFile tldFileByUri) -->Line_7 $$ final boolean[] wordsFound = new boolean[words.length][ CD ]
Line_14 $$ for (int i = 0; i < words.length; ++i) -->Line_18 $$ for (int j = 0; j < localName.length(); ++j) [ CD ]
Line_2 $$ private static boolean checkIfGivenXmlHasTheseWords(final String name, final XmlFile tldFileByUri) -->Line_5 $$ final List<String> list = StringUtil.getWordsIn(name)[ CD ]
Line_14 $$ for (int i = 0; i < words.length; ++i) -->Line_23 $$ wordsFoundCount[0]++[ CD ]
Line_15 $$ final String localName = words[i]-->Line_19 $$ if (chars.charAt(start + j) != localName.charAt(j))[ FD ]
Line_9 $$ IdTableBuilding.ScanWordProcessor wordProcessor = new IdTableBuilding.ScanWordProcessor() -->Line_11 $$ if (wordsFoundCount[0] == words.length)[ CD ]
Line_11 $$ if (wordsFoundCount[0] == words.length)-->Line_12 $$ return[ CD ]
