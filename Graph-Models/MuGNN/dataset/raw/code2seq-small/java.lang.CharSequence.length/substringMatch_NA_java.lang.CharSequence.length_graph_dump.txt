Line_2 $$ public static boolean substringMatch(CharSequence str, int index, CharSequence substring) -->Line_5 $$ if (i >= str.length() || str.charAt(i) != substring.charAt(j)) [ FD ]
Line_4 $$ int i = index + j-->Line_5 $$ if (i >= str.length() || str.charAt(i) != substring.charAt(j)) [ FD ]
Line_2 $$ public static boolean substringMatch(CharSequence str, int index, CharSequence substring) -->Line_3 $$ for (int j = 0; j < substring.length(); j++) [ FD ]
Line_3 $$ for (int j = 0; j < substring.length(); j++) -->Line_5 $$ if (i >= str.length() || str.charAt(i) != substring.charAt(j)) [ FD ]
Line_3 $$ for (int j = 0; j < substring.length(); j++) -->Line_4 $$ int i = index + j[ CD ]
Line_2 $$ public static boolean substringMatch(CharSequence str, int index, CharSequence substring) -->Line_9 $$ return true[ CD ]
Line_5 $$ if (i >= str.length() || str.charAt(i) != substring.charAt(j)) -->Line_6 $$ return false[ CD ]
Line_3 $$ for (int j = 0; j < substring.length(); j++) -->Line_5 $$ if (i >= str.length() || str.charAt(i) != substring.charAt(j)) [ CD ]
Line_2 $$ public static boolean substringMatch(CharSequence str, int index, CharSequence substring) -->Line_3 $$ for (int j = 0; j < substring.length(); j++) [ CD ]
