Line_2 $$ private static boolean isNewLineAfter(CharSequence text, int offset) -->Line_4 $$ while (i < text.length() && Character.isWhitespace(text.charAt(i))) [ FD ]
Line_3 $$ int i = offset-->Line_5 $$ if (text.charAt(i) == '\n') [ FD ]
Line_2 $$ private static boolean isNewLineAfter(CharSequence text, int offset) -->Line_10 $$ return i == text.length()[ CD ]
Line_5 $$ if (text.charAt(i) == '\n') -->Line_6 $$ return true[ CD ]
Line_2 $$ private static boolean isNewLineAfter(CharSequence text, int offset) -->Line_10 $$ return i == text.length()[ FD ]
Line_4 $$ while (i < text.length() && Character.isWhitespace(text.charAt(i))) -->Line_5 $$ if (text.charAt(i) == '\n') [ CD ]
Line_4 $$ while (i < text.length() && Character.isWhitespace(text.charAt(i))) -->Line_8 $$ i++[ CD ]
Line_3 $$ int i = offset-->Line_4 $$ while (i < text.length() && Character.isWhitespace(text.charAt(i))) [ FD ]
Line_2 $$ private static boolean isNewLineAfter(CharSequence text, int offset) -->Line_3 $$ int i = offset[ CD ]
Line_3 $$ int i = offset-->Line_8 $$ i++[ FD ]
Line_2 $$ private static boolean isNewLineAfter(CharSequence text, int offset) -->Line_5 $$ if (text.charAt(i) == '\n') [ FD ]
Line_2 $$ private static boolean isNewLineAfter(CharSequence text, int offset) -->Line_4 $$ while (i < text.length() && Character.isWhitespace(text.charAt(i))) [ CD ]
