Line_10 $$ final char c = fileTextArray != null ? fileTextArray[index] : fileText.charAt(index)-->Line_24 $$ if (!Character.isJavaIdentifierPart(c) || c == '$')[ FD ]
Line_30 $$ occurrence = new WordOccurrence(fileText, index1, index, null)-->Line_33 $$ processor.process(occurrence)[ FD ]
Line_21 $$ final char c = fileTextArray != null ? fileTextArray[index] : fileText.charAt(index)-->Line_24 $$ if (!Character.isJavaIdentifierPart(c) || c == '$')[ FD ]
Line_2 $$ public void processWords(CharSequence fileText, Processor<WordOccurrence> processor) -->Line_21 $$ final char c = fileTextArray != null ? fileTextArray[index] : fileText.charAt(index)[ FD ]
Line_17 $$ while (true) -->Line_18 $$ index++[ CD ]
Line_3 $$ int index = 0-->Line_8 $$ if (index == fileText.length())[ FD ]
Line_3 $$ int index = 0-->Line_18 $$ index++[ FD ]
Line_7 $$ while (true) -->Line_8 $$ if (index == fileText.length())[ CD ]
Line_4 $$ WordOccurrence occurrence = null-->Line_32 $$ occurrence.init(fileText, index1, index, null)[ FD ]
Line_17 $$ while (true) -->Line_24 $$ if (!Character.isJavaIdentifierPart(c) || c == '$')[ CD ]
Line_29 $$ if (occurrence == null)-->Line_30 $$ occurrence = new WordOccurrence(fileText, index1, index, null)[ CD ]
Line_30 $$ occurrence = new WordOccurrence(fileText, index1, index, null)-->Line_29 $$ if (occurrence == null)[ FD ]
Line_4 $$ WordOccurrence occurrence = null-->Line_29 $$ if (occurrence == null)[ FD ]
Line_2 $$ public void processWords(CharSequence fileText, Processor<WordOccurrence> processor) -->Line_33 $$ processor.process(occurrence)[ FD ]
Line_2 $$ public void processWords(CharSequence fileText, Processor<WordOccurrence> processor) -->Line_3 $$ int index = 0[ CD ]
Line_7 $$ while (true) -->Line_14 $$ index++[ CD ]
Line_10 $$ final char c = fileTextArray != null ? fileTextArray[index] : fileText.charAt(index)-->Line_11 $$ if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || (Character.isJavaIdentifierStart(c) && c != '$')) [ FD ]
Line_7 $$ while (true) -->Line_11 $$ if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || (Character.isJavaIdentifierStart(c) && c != '$')) [ CD ]
Line_17 $$ while (true) -->Line_19 $$ if (index == fileText.length())[ CD ]
Line_6 $$ while (true) -->Line_27 $$ if (index - index1 > 100)[ CD ]
Line_3 $$ int index = 0-->Line_21 $$ final char c = fileTextArray != null ? fileTextArray[index] : fileText.charAt(index)[ FD ]
Line_2 $$ public void processWords(CharSequence fileText, Processor<WordOccurrence> processor) -->Line_19 $$ if (index == fileText.length())[ FD ]
Line_6 $$ while (true) -->Line_29 $$ if (occurrence == null)[ CD ]
Line_17 $$ while (true) -->Line_22 $$ if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9'))[ CD ]
Line_3 $$ int index = 0-->Line_14 $$ index++[ FD ]
Line_2 $$ public void processWords(CharSequence fileText, Processor<WordOccurrence> processor) -->Line_5 $$ final char[] fileTextArray = CharArrayUtil.fromSequenceWithoutCopying(fileText)[ CD ]
Line_3 $$ int index = 0-->Line_10 $$ final char c = fileTextArray != null ? fileTextArray[index] : fileText.charAt(index)[ FD ]
Line_4 $$ WordOccurrence occurrence = null-->Line_33 $$ processor.process(occurrence)[ FD ]
Line_3 $$ int index = 0-->Line_32 $$ occurrence.init(fileText, index1, index, null)[ FD ]
Line_6 $$ while (true) -->Line_33 $$ processor.process(occurrence)[ CD ]
Line_29 $$ if (occurrence == null)-->Line_32 $$ occurrence.init(fileText, index1, index, null)[ CD ]
Line_2 $$ public void processWords(CharSequence fileText, Processor<WordOccurrence> processor) -->Line_10 $$ final char c = fileTextArray != null ? fileTextArray[index] : fileText.charAt(index)[ FD ]
Line_6 $$ while (true) -->Line_17 $$ while (true) [ CD ]
Line_7 $$ while (true) -->Line_10 $$ final char c = fileTextArray != null ? fileTextArray[index] : fileText.charAt(index)[ CD ]
Line_2 $$ public void processWords(CharSequence fileText, Processor<WordOccurrence> processor) -->Line_32 $$ occurrence.init(fileText, index1, index, null)[ FD ]
Line_17 $$ while (true) -->Line_21 $$ final char c = fileTextArray != null ? fileTextArray[index] : fileText.charAt(index)[ CD ]
Line_2 $$ public void processWords(CharSequence fileText, Processor<WordOccurrence> processor) -->Line_4 $$ WordOccurrence occurrence = null[ CD ]
Line_2 $$ public void processWords(CharSequence fileText, Processor<WordOccurrence> processor) -->Line_5 $$ final char[] fileTextArray = CharArrayUtil.fromSequenceWithoutCopying(fileText)[ FD ]
Line_3 $$ int index = 0-->Line_19 $$ if (index == fileText.length())[ FD ]
Line_6 $$ while (true) -->Line_7 $$ while (true) [ CD ]
Line_4 $$ WordOccurrence occurrence = null-->Line_30 $$ occurrence = new WordOccurrence(fileText, index1, index, null)[ FD ]
Line_30 $$ occurrence = new WordOccurrence(fileText, index1, index, null)-->Line_32 $$ occurrence.init(fileText, index1, index, null)[ FD ]
Line_2 $$ public void processWords(CharSequence fileText, Processor<WordOccurrence> processor) -->Line_8 $$ if (index == fileText.length())[ FD ]
