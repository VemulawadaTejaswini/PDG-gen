Line_2 $$ private static List<BidiRun> createFragments(@NotNull EditorView view, @NotNull CharSequence text, @JdkConstants.FontStyle int fontStyle) -->Line_8 $$ char[] chars = CharArrayUtil.fromSequence(text)[ CD ]
Line_8 $$ char[] chars = CharArrayUtil.fromSequence(text)-->Line_12 $$ addFragments(run, chunk, chars, chunk.startOffset, chunk.endOffset, fontStyle, fontPreferences, fontRenderContext, null)[ FD ]
Line_11 $$ for (Chunk chunk : run.getChunks()) -->Line_12 $$ addFragments(run, chunk, chars, chunk.startOffset, chunk.endOffset, fontStyle, fontPreferences, fontRenderContext, null)[ FD ]
Line_2 $$ private static List<BidiRun> createFragments(@NotNull EditorView view, @NotNull CharSequence text, @JdkConstants.FontStyle int fontStyle) -->Line_3 $$ if (text.length() == 0)[ CD ]
Line_10 $$ for (BidiRun run : runs) -->Line_12 $$ addFragments(run, chunk, chars, chunk.startOffset, chunk.endOffset, fontStyle, fontPreferences, fontRenderContext, null)[ FD ]
Line_7 $$ FontPreferences fontPreferences = editor.getColorsScheme().getFontPreferences()-->Line_12 $$ addFragments(run, chunk, chars, chunk.startOffset, chunk.endOffset, fontStyle, fontPreferences, fontRenderContext, null)[ FD ]
Line_2 $$ private static List<BidiRun> createFragments(@NotNull EditorView view, @NotNull CharSequence text, @JdkConstants.FontStyle int fontStyle) -->Line_5 $$ EditorImpl editor = view.getEditor()[ FD ]
Line_3 $$ if (text.length() == 0)-->Line_4 $$ return Collections.emptyList()[ CD ]
Line_2 $$ private static List<BidiRun> createFragments(@NotNull EditorView view, @NotNull CharSequence text, @JdkConstants.FontStyle int fontStyle) -->Line_6 $$ FontRenderContext fontRenderContext = view.getFontRenderContext()[ FD ]
Line_2 $$ private static List<BidiRun> createFragments(@NotNull EditorView view, @NotNull CharSequence text, @JdkConstants.FontStyle int fontStyle) -->Line_9 $$ List<BidiRun> runs = createRuns(editor, chars, -1)[ CD ]
Line_10 $$ for (BidiRun run : runs) -->Line_11 $$ for (Chunk chunk : run.getChunks()) [ FD ]
Line_2 $$ private static List<BidiRun> createFragments(@NotNull EditorView view, @NotNull CharSequence text, @JdkConstants.FontStyle int fontStyle) -->Line_6 $$ FontRenderContext fontRenderContext = view.getFontRenderContext()[ CD ]
Line_5 $$ EditorImpl editor = view.getEditor()-->Line_9 $$ List<BidiRun> runs = createRuns(editor, chars, -1)[ FD ]
Line_2 $$ private static List<BidiRun> createFragments(@NotNull EditorView view, @NotNull CharSequence text, @JdkConstants.FontStyle int fontStyle) -->Line_5 $$ EditorImpl editor = view.getEditor()[ CD ]
Line_8 $$ char[] chars = CharArrayUtil.fromSequence(text)-->Line_9 $$ List<BidiRun> runs = createRuns(editor, chars, -1)[ FD ]
Line_2 $$ private static List<BidiRun> createFragments(@NotNull EditorView view, @NotNull CharSequence text, @JdkConstants.FontStyle int fontStyle) -->Line_3 $$ if (text.length() == 0)[ FD ]
Line_2 $$ private static List<BidiRun> createFragments(@NotNull EditorView view, @NotNull CharSequence text, @JdkConstants.FontStyle int fontStyle) -->Line_7 $$ FontPreferences fontPreferences = editor.getColorsScheme().getFontPreferences()[ CD ]
Line_6 $$ FontRenderContext fontRenderContext = view.getFontRenderContext()-->Line_12 $$ addFragments(run, chunk, chars, chunk.startOffset, chunk.endOffset, fontStyle, fontPreferences, fontRenderContext, null)[ FD ]
Line_2 $$ private static List<BidiRun> createFragments(@NotNull EditorView view, @NotNull CharSequence text, @JdkConstants.FontStyle int fontStyle) -->Line_12 $$ addFragments(run, chunk, chars, chunk.startOffset, chunk.endOffset, fontStyle, fontPreferences, fontRenderContext, null)[ FD ]
Line_2 $$ private static List<BidiRun> createFragments(@NotNull EditorView view, @NotNull CharSequence text, @JdkConstants.FontStyle int fontStyle) -->Line_15 $$ return runs[ CD ]
Line_5 $$ EditorImpl editor = view.getEditor()-->Line_7 $$ FontPreferences fontPreferences = editor.getColorsScheme().getFontPreferences()[ FD ]
Line_2 $$ private static List<BidiRun> createFragments(@NotNull EditorView view, @NotNull CharSequence text, @JdkConstants.FontStyle int fontStyle) -->Line_8 $$ char[] chars = CharArrayUtil.fromSequence(text)[ FD ]
