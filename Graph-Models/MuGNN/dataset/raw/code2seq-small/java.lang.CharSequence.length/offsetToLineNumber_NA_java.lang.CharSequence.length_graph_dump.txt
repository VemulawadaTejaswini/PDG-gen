Line_2 $$ public static int offsetToLineNumber(@NotNull CharSequence text, int offset) -->Line_19 $$ return curLine[ CD ]
Line_5 $$ while (curOffset < offset) -->Line_6 $$ if (curOffset == text.length())[ CD ]
Line_8 $$ char c = text.charAt(curOffset)-->Line_9 $$ if (c == '\n') [ FD ]
Line_5 $$ while (curOffset < offset) -->Line_9 $$ if (c == '\n') [ CD ]
Line_5 $$ while (curOffset < offset) -->Line_8 $$ char c = text.charAt(curOffset)[ CD ]
Line_4 $$ int curOffset = 0-->Line_14 $$ curOffset++[ FD ]
Line_2 $$ public static int offsetToLineNumber(@NotNull CharSequence text, int offset) -->Line_6 $$ if (curOffset == text.length())[ FD ]
Line_3 $$ int curLine = 0-->Line_12 $$ curLine++[ FD ]
Line_2 $$ public static int offsetToLineNumber(@NotNull CharSequence text, int offset) -->Line_5 $$ while (curOffset < offset) [ FD ]
Line_4 $$ int curOffset = 0-->Line_17 $$ curOffset++[ FD ]
Line_9 $$ if (c == '\n') -->Line_10 $$ curLine++[ CD ]
Line_9 $$ if (c == '\n') -->Line_11 $$ if (c == '\r') [ CD ]
Line_11 $$ if (c == '\r') -->Line_13 $$ if (curOffset < text.length() - 1 && text.charAt(curOffset + 1) == '\n') [ CD ]
Line_2 $$ public static int offsetToLineNumber(@NotNull CharSequence text, int offset) -->Line_8 $$ char c = text.charAt(curOffset)[ FD ]
Line_8 $$ char c = text.charAt(curOffset)-->Line_11 $$ if (c == '\r') [ FD ]
Line_13 $$ if (curOffset < text.length() - 1 && text.charAt(curOffset + 1) == '\n') -->Line_14 $$ curOffset++[ CD ]
Line_4 $$ int curOffset = 0-->Line_5 $$ while (curOffset < offset) [ FD ]
Line_5 $$ while (curOffset < offset) -->Line_17 $$ curOffset++[ CD ]
Line_6 $$ if (curOffset == text.length())-->Line_7 $$ return -1[ CD ]
Line_3 $$ int curLine = 0-->Line_10 $$ curLine++[ FD ]
Line_11 $$ if (c == '\r') -->Line_12 $$ curLine++[ CD ]
Line_4 $$ int curOffset = 0-->Line_6 $$ if (curOffset == text.length())[ FD ]
Line_2 $$ public static int offsetToLineNumber(@NotNull CharSequence text, int offset) -->Line_4 $$ int curOffset = 0[ CD ]
Line_2 $$ public static int offsetToLineNumber(@NotNull CharSequence text, int offset) -->Line_13 $$ if (curOffset < text.length() - 1 && text.charAt(curOffset + 1) == '\n') [ FD ]
Line_2 $$ public static int offsetToLineNumber(@NotNull CharSequence text, int offset) -->Line_3 $$ int curLine = 0[ CD ]
Line_2 $$ public static int offsetToLineNumber(@NotNull CharSequence text, int offset) -->Line_5 $$ while (curOffset < offset) [ CD ]
Line_4 $$ int curOffset = 0-->Line_8 $$ char c = text.charAt(curOffset)[ FD ]
