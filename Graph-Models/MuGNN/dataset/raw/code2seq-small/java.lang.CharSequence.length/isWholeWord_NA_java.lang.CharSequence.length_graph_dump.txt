Line_2 $$ private static boolean isWholeWord(CharSequence text, int startOffset, int endOffset) -->Line_5 $$ boolean previousCharacterIsIdentifier = Character.isJavaIdentifierPart(text.charAt(startOffset - 1)) && (startOffset <= 1 || text.charAt(startOffset - 2) != '\\')[ FD ]
Line_13 $$ if (endOffset != text.length()) -->Line_19 $$ isWordEnd = true[ CD ]
Line_12 $$ boolean isWordEnd-->Line_19 $$ isWordEnd = true[ FD ]
Line_2 $$ private static boolean isWholeWord(CharSequence text, int startOffset, int endOffset) -->Line_6 $$ boolean previousCharacterIsSameAsNext = text.charAt(startOffset - 1) == text.charAt(startOffset)[ FD ]
Line_4 $$ if (startOffset != 0) -->Line_8 $$ isWordStart = !firstCharacterIsIdentifier && !previousCharacterIsSameAsNext || firstCharacterIsIdentifier && !previousCharacterIsIdentifier[ CD ]
Line_2 $$ private static boolean isWholeWord(CharSequence text, int startOffset, int endOffset) -->Line_13 $$ if (endOffset != text.length()) [ CD ]
Line_2 $$ private static boolean isWholeWord(CharSequence text, int startOffset, int endOffset) -->Line_21 $$ return isWordStart && isWordEnd[ CD ]
Line_4 $$ if (startOffset != 0) -->Line_6 $$ boolean previousCharacterIsSameAsNext = text.charAt(startOffset - 1) == text.charAt(startOffset)[ CD ]
Line_2 $$ private static boolean isWholeWord(CharSequence text, int startOffset, int endOffset) -->Line_7 $$ boolean firstCharacterIsIdentifier = Character.isJavaIdentifierPart(text.charAt(startOffset))[ FD ]
Line_16 $$ boolean lastSearchedCharacterIsIdentifier = endOffset > 0 && Character.isJavaIdentifierPart(text.charAt(endOffset - 1))-->Line_17 $$ isWordEnd = lastSearchedCharacterIsIdentifier && !nextCharacterIsIdentifier || !lastSearchedCharacterIsIdentifier && !nextCharacterIsSameAsPrevious[ FD ]
Line_15 $$ boolean nextCharacterIsSameAsPrevious = endOffset > 0 && text.charAt(endOffset) == text.charAt(endOffset - 1)-->Line_17 $$ isWordEnd = lastSearchedCharacterIsIdentifier && !nextCharacterIsIdentifier || !lastSearchedCharacterIsIdentifier && !nextCharacterIsSameAsPrevious[ FD ]
Line_2 $$ private static boolean isWholeWord(CharSequence text, int startOffset, int endOffset) -->Line_14 $$ boolean nextCharacterIsIdentifier = Character.isJavaIdentifierPart(text.charAt(endOffset))[ FD ]
Line_2 $$ private static boolean isWholeWord(CharSequence text, int startOffset, int endOffset) -->Line_15 $$ boolean nextCharacterIsSameAsPrevious = endOffset > 0 && text.charAt(endOffset) == text.charAt(endOffset - 1)[ FD ]
Line_13 $$ if (endOffset != text.length()) -->Line_16 $$ boolean lastSearchedCharacterIsIdentifier = endOffset > 0 && Character.isJavaIdentifierPart(text.charAt(endOffset - 1))[ CD ]
Line_8 $$ isWordStart = !firstCharacterIsIdentifier && !previousCharacterIsSameAsNext || firstCharacterIsIdentifier && !previousCharacterIsIdentifier-->Line_10 $$ isWordStart = true[ FD ]
Line_13 $$ if (endOffset != text.length()) -->Line_17 $$ isWordEnd = lastSearchedCharacterIsIdentifier && !nextCharacterIsIdentifier || !lastSearchedCharacterIsIdentifier && !nextCharacterIsSameAsPrevious[ CD ]
Line_2 $$ private static boolean isWholeWord(CharSequence text, int startOffset, int endOffset) -->Line_12 $$ boolean isWordEnd[ CD ]
Line_13 $$ if (endOffset != text.length()) -->Line_15 $$ boolean nextCharacterIsSameAsPrevious = endOffset > 0 && text.charAt(endOffset) == text.charAt(endOffset - 1)[ CD ]
Line_3 $$ boolean isWordStart-->Line_10 $$ isWordStart = true[ FD ]
Line_4 $$ if (startOffset != 0) -->Line_7 $$ boolean firstCharacterIsIdentifier = Character.isJavaIdentifierPart(text.charAt(startOffset))[ CD ]
Line_5 $$ boolean previousCharacterIsIdentifier = Character.isJavaIdentifierPart(text.charAt(startOffset - 1)) && (startOffset <= 1 || text.charAt(startOffset - 2) != '\\')-->Line_8 $$ isWordStart = !firstCharacterIsIdentifier && !previousCharacterIsSameAsNext || firstCharacterIsIdentifier && !previousCharacterIsIdentifier[ FD ]
Line_12 $$ boolean isWordEnd-->Line_17 $$ isWordEnd = lastSearchedCharacterIsIdentifier && !nextCharacterIsIdentifier || !lastSearchedCharacterIsIdentifier && !nextCharacterIsSameAsPrevious[ FD ]
Line_4 $$ if (startOffset != 0) -->Line_5 $$ boolean previousCharacterIsIdentifier = Character.isJavaIdentifierPart(text.charAt(startOffset - 1)) && (startOffset <= 1 || text.charAt(startOffset - 2) != '\\')[ CD ]
Line_2 $$ private static boolean isWholeWord(CharSequence text, int startOffset, int endOffset) -->Line_13 $$ if (endOffset != text.length()) [ FD ]
Line_2 $$ private static boolean isWholeWord(CharSequence text, int startOffset, int endOffset) -->Line_4 $$ if (startOffset != 0) [ FD ]
Line_7 $$ boolean firstCharacterIsIdentifier = Character.isJavaIdentifierPart(text.charAt(startOffset))-->Line_8 $$ isWordStart = !firstCharacterIsIdentifier && !previousCharacterIsSameAsNext || firstCharacterIsIdentifier && !previousCharacterIsIdentifier[ FD ]
Line_13 $$ if (endOffset != text.length()) -->Line_14 $$ boolean nextCharacterIsIdentifier = Character.isJavaIdentifierPart(text.charAt(endOffset))[ CD ]
Line_2 $$ private static boolean isWholeWord(CharSequence text, int startOffset, int endOffset) -->Line_16 $$ boolean lastSearchedCharacterIsIdentifier = endOffset > 0 && Character.isJavaIdentifierPart(text.charAt(endOffset - 1))[ FD ]
Line_3 $$ boolean isWordStart-->Line_8 $$ isWordStart = !firstCharacterIsIdentifier && !previousCharacterIsSameAsNext || firstCharacterIsIdentifier && !previousCharacterIsIdentifier[ FD ]
Line_14 $$ boolean nextCharacterIsIdentifier = Character.isJavaIdentifierPart(text.charAt(endOffset))-->Line_17 $$ isWordEnd = lastSearchedCharacterIsIdentifier && !nextCharacterIsIdentifier || !lastSearchedCharacterIsIdentifier && !nextCharacterIsSameAsPrevious[ FD ]
Line_17 $$ isWordEnd = lastSearchedCharacterIsIdentifier && !nextCharacterIsIdentifier || !lastSearchedCharacterIsIdentifier && !nextCharacterIsSameAsPrevious-->Line_19 $$ isWordEnd = true[ FD ]
Line_4 $$ if (startOffset != 0) -->Line_10 $$ isWordStart = true[ CD ]
Line_2 $$ private static boolean isWholeWord(CharSequence text, int startOffset, int endOffset) -->Line_4 $$ if (startOffset != 0) [ CD ]
Line_2 $$ private static boolean isWholeWord(CharSequence text, int startOffset, int endOffset) -->Line_3 $$ boolean isWordStart[ CD ]
Line_6 $$ boolean previousCharacterIsSameAsNext = text.charAt(startOffset - 1) == text.charAt(startOffset)-->Line_8 $$ isWordStart = !firstCharacterIsIdentifier && !previousCharacterIsSameAsNext || firstCharacterIsIdentifier && !previousCharacterIsIdentifier[ FD ]
