Line_5 $$ int offset = maxOffset-->Line_9 $$ char c = buffer.charAt(offset)[ FD ]
Line_6 $$ while (true) -->Line_15 $$ if (i == chars.length())[ CD ]
Line_6 $$ while (true) -->Line_9 $$ char c = buffer.charAt(offset)[ CD ]
Line_2 $$ public static int shiftBackward(@NotNull CharSequence buffer, int minOffset, int maxOffset, @NotNull String chars) -->Line_11 $$ for (i = 0; i < chars.length(); i++) [ FD ]
Line_6 $$ while (true) -->Line_10 $$ int i[ CD ]
Line_2 $$ public static int shiftBackward(@NotNull CharSequence buffer, int minOffset, int maxOffset, @NotNull String chars) -->Line_3 $$ if (maxOffset >= buffer.length())[ FD ]
Line_3 $$ if (maxOffset >= buffer.length())-->Line_4 $$ return maxOffset[ CD ]
Line_2 $$ public static int shiftBackward(@NotNull CharSequence buffer, int minOffset, int maxOffset, @NotNull String chars) -->Line_7 $$ if (offset < minOffset)[ FD ]
Line_10 $$ int i-->Line_15 $$ if (i == chars.length())[ FD ]
Line_2 $$ public static int shiftBackward(@NotNull CharSequence buffer, int minOffset, int maxOffset, @NotNull String chars) -->Line_5 $$ int offset = maxOffset[ CD ]
Line_11 $$ for (i = 0; i < chars.length(); i++) -->Line_12 $$ if (c == chars.charAt(i))[ CD ]
Line_6 $$ while (true) -->Line_7 $$ if (offset < minOffset)[ CD ]
Line_2 $$ public static int shiftBackward(@NotNull CharSequence buffer, int minOffset, int maxOffset, @NotNull String chars) -->Line_19 $$ return offset[ CD ]
Line_2 $$ public static int shiftBackward(@NotNull CharSequence buffer, int minOffset, int maxOffset, @NotNull String chars) -->Line_6 $$ while (true) [ CD ]
Line_2 $$ public static int shiftBackward(@NotNull CharSequence buffer, int minOffset, int maxOffset, @NotNull String chars) -->Line_9 $$ char c = buffer.charAt(offset)[ FD ]
Line_11 $$ for (i = 0; i < chars.length(); i++) -->Line_12 $$ if (c == chars.charAt(i))[ FD ]
Line_2 $$ public static int shiftBackward(@NotNull CharSequence buffer, int minOffset, int maxOffset, @NotNull String chars) -->Line_3 $$ if (maxOffset >= buffer.length())[ CD ]
Line_9 $$ char c = buffer.charAt(offset)-->Line_12 $$ if (c == chars.charAt(i))[ FD ]
Line_10 $$ int i-->Line_11 $$ for (i = 0; i < chars.length(); i++) [ FD ]
Line_2 $$ public static int shiftBackward(@NotNull CharSequence buffer, int minOffset, int maxOffset, @NotNull String chars) -->Line_15 $$ if (i == chars.length())[ FD ]
Line_5 $$ int offset = maxOffset-->Line_17 $$ offset--[ FD ]
Line_11 $$ for (i = 0; i < chars.length(); i++) -->Line_15 $$ if (i == chars.length())[ FD ]
Line_6 $$ while (true) -->Line_17 $$ offset--[ CD ]
Line_5 $$ int offset = maxOffset-->Line_7 $$ if (offset < minOffset)[ FD ]
Line_10 $$ int i-->Line_12 $$ if (c == chars.charAt(i))[ FD ]
Line_6 $$ while (true) -->Line_11 $$ for (i = 0; i < chars.length(); i++) [ CD ]
Line_2 $$ public static int shiftBackward(@NotNull CharSequence buffer, int minOffset, int maxOffset, @NotNull String chars) -->Line_12 $$ if (c == chars.charAt(i))[ FD ]
