Line_2 $$ public static int commonSuffixLength(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_4 $$ int s2Length = s2.length()[ CD ]
Line_2 $$ public static int commonSuffixLength(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_9 $$ if (s1.charAt(s1Length - i - 1) != s2.charAt(s2Length - i - 1)) [ FD ]
Line_2 $$ public static int commonSuffixLength(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_4 $$ int s2Length = s2.length()[ FD ]
Line_2 $$ public static int commonSuffixLength(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_7 $$ int i[ CD ]
Line_2 $$ public static int commonSuffixLength(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_3 $$ int s1Length = s1.length()[ FD ]
Line_2 $$ public static int commonSuffixLength(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_8 $$ for (i = 0; i < s1Length && i < s2Length; i++) [ CD ]
Line_7 $$ int i-->Line_8 $$ for (i = 0; i < s1Length && i < s2Length; i++) [ FD ]
Line_2 $$ public static int commonSuffixLength(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_13 $$ return i[ CD ]
Line_8 $$ for (i = 0; i < s1Length && i < s2Length; i++) -->Line_9 $$ if (s1.charAt(s1Length - i - 1) != s2.charAt(s2Length - i - 1)) [ CD ]
Line_2 $$ public static int commonSuffixLength(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_5 $$ if (s1Length == 0 || s2Length == 0)[ CD ]
Line_2 $$ public static int commonSuffixLength(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_3 $$ int s1Length = s1.length()[ CD ]
Line_5 $$ if (s1Length == 0 || s2Length == 0)-->Line_6 $$ return 0[ CD ]
