Line_3 $$ int i-->Line_6 $$ if (s1.charAt(i) != s2.charAt(i)) [ FD ]
Line_2 $$ public static int commonPrefixLength(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_5 $$ for (i = 0; i < minLength; i++) [ CD ]
Line_3 $$ int i-->Line_5 $$ for (i = 0; i < minLength; i++) [ FD ]
Line_4 $$ int minLength = min(s1.length(), s2.length())-->Line_5 $$ for (i = 0; i < minLength; i++) [ FD ]
Line_2 $$ public static int commonPrefixLength(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_6 $$ if (s1.charAt(i) != s2.charAt(i)) [ FD ]
Line_5 $$ for (i = 0; i < minLength; i++) -->Line_6 $$ if (s1.charAt(i) != s2.charAt(i)) [ CD ]
Line_2 $$ public static int commonPrefixLength(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_4 $$ int minLength = min(s1.length(), s2.length())[ FD ]
Line_2 $$ public static int commonPrefixLength(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_4 $$ int minLength = min(s1.length(), s2.length())[ CD ]
Line_5 $$ for (i = 0; i < minLength; i++) -->Line_6 $$ if (s1.charAt(i) != s2.charAt(i)) [ FD ]
Line_2 $$ public static int commonPrefixLength(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_3 $$ int i[ CD ]
Line_2 $$ public static int commonPrefixLength(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_10 $$ return i[ CD ]
