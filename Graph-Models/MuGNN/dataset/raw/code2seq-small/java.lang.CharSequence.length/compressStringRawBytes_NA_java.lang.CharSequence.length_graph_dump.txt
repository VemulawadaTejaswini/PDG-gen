Line_4 $$ if (length < STRING_COMPRESSION_THRESHOLD) -->Line_8 $$ return string[ CD ]
Line_14 $$ for (int i = 0; i < length; i++) -->Line_15 $$ char c = string.charAt(i)[ FD ]
Line_12 $$ DataOutput out = new DataOutputStream(bytes)-->Line_13 $$ DataInputOutputUtil.writeINT(out, length)[ FD ]
Line_12 $$ DataOutput out = new DataOutputStream(bytes)-->Line_16 $$ DataInputOutputUtil.writeINT(out, c)[ FD ]
Line_14 $$ for (int i = 0; i < length; i++) -->Line_15 $$ char c = string.charAt(i)[ CD ]
Line_3 $$ int length = string.length()-->Line_13 $$ DataInputOutputUtil.writeINT(out, length)[ FD ]
Line_2 $$ public static Object compressStringRawBytes(@NotNull CharSequence string) -->Line_4 $$ if (length < STRING_COMPRESSION_THRESHOLD) [ CD ]
Line_11 $$ ByteArrayOutputStream bytes = new ByteArrayOutputStream(length)-->Line_18 $$ byte[] compressedBytes = Snappy.compress(bytes.toByteArray())[ FD ]
Line_4 $$ if (length < STRING_COMPRESSION_THRESHOLD) -->Line_5 $$ if (string instanceof CharBuffer && ((CharBuffer) string).capacity() > STRING_COMPRESSION_THRESHOLD) [ CD ]
Line_15 $$ char c = string.charAt(i)-->Line_16 $$ DataInputOutputUtil.writeINT(out, c)[ FD ]
Line_2 $$ public static Object compressStringRawBytes(@NotNull CharSequence string) -->Line_6 $$ string = string.toString()[ FD ]
Line_3 $$ int length = string.length()-->Line_4 $$ if (length < STRING_COMPRESSION_THRESHOLD) [ FD ]
Line_2 $$ public static Object compressStringRawBytes(@NotNull CharSequence string) -->Line_15 $$ char c = string.charAt(i)[ FD ]
Line_2 $$ public static Object compressStringRawBytes(@NotNull CharSequence string) -->Line_3 $$ int length = string.length()[ CD ]
Line_5 $$ if (string instanceof CharBuffer && ((CharBuffer) string).capacity() > STRING_COMPRESSION_THRESHOLD) -->Line_6 $$ string = string.toString()[ CD ]
Line_14 $$ for (int i = 0; i < length; i++) -->Line_16 $$ DataInputOutputUtil.writeINT(out, c)[ CD ]
Line_3 $$ int length = string.length()-->Line_14 $$ for (int i = 0; i < length; i++) [ FD ]
Line_2 $$ public static Object compressStringRawBytes(@NotNull CharSequence string) -->Line_3 $$ int length = string.length()[ FD ]
