Line_2 $$ static void assertCompletionPositionPsiConsistent(CompletionContext newContext, int offset, PsiFile fileCopy, PsiFile originalFile, PsiElement insertedElement) -->Line_10 $$ CharSequence fileCopyText = fileCopy.getViewProvider().getContents()[ FD ]
Line_2 $$ static void assertCompletionPositionPsiConsistent(CompletionContext newContext, int offset, PsiFile fileCopy, PsiFile originalFile, PsiElement insertedElement) -->Line_3 $$ if (insertedElement == null) [ FD ]
Line_2 $$ static void assertCompletionPositionPsiConsistent(CompletionContext newContext, int offset, PsiFile fileCopy, PsiFile originalFile, PsiElement insertedElement) -->Line_3 $$ if (insertedElement == null) [ CD ]
Line_10 $$ CharSequence fileCopyText = fileCopy.getViewProvider().getContents()-->Line_11 $$ if ((range.getEndOffset() > fileCopyText.length()) || !fileCopyText.subSequence(range.getStartOffset(), range.getEndOffset()).toString().equals(insertedElement.getText())) [ FD ]
Line_2 $$ static void assertCompletionPositionPsiConsistent(CompletionContext newContext, int offset, PsiFile fileCopy, PsiFile originalFile, PsiElement insertedElement) -->Line_11 $$ if ((range.getEndOffset() > fileCopyText.length()) || !fileCopyText.subSequence(range.getStartOffset(), range.getEndOffset()).toString().equals(insertedElement.getText())) [ FD ]
Line_2 $$ static void assertCompletionPositionPsiConsistent(CompletionContext newContext, int offset, PsiFile fileCopy, PsiFile originalFile, PsiElement insertedElement) -->Line_12 $$ throw new LogEventException("Inconsistent completion tree", "range=" + range + "\n" + DebugUtil.currentStackTrace(), createFileTextAttachment(fileCopy, originalFile), createAstAttachment(fileCopy, originalFile), new Attachment("Element at caret.txt", insertedElement.getText()))[ FD ]
Line_2 $$ static void assertCompletionPositionPsiConsistent(CompletionContext newContext, int offset, PsiFile fileCopy, PsiFile originalFile, PsiElement insertedElement) -->Line_9 $$ final TextRange range = insertedElement.getTextRange()[ CD ]
Line_2 $$ static void assertCompletionPositionPsiConsistent(CompletionContext newContext, int offset, PsiFile fileCopy, PsiFile originalFile, PsiElement insertedElement) -->Line_10 $$ CharSequence fileCopyText = fileCopy.getViewProvider().getContents()[ CD ]
Line_2 $$ static void assertCompletionPositionPsiConsistent(CompletionContext newContext, int offset, PsiFile fileCopy, PsiFile originalFile, PsiElement insertedElement) -->Line_6 $$ if (fileCopy.findElementAt(offset) != insertedElement) [ CD ]
Line_2 $$ static void assertCompletionPositionPsiConsistent(CompletionContext newContext, int offset, PsiFile fileCopy, PsiFile originalFile, PsiElement insertedElement) -->Line_11 $$ if ((range.getEndOffset() > fileCopyText.length()) || !fileCopyText.subSequence(range.getStartOffset(), range.getEndOffset()).toString().equals(insertedElement.getText())) [ CD ]
Line_9 $$ final TextRange range = insertedElement.getTextRange()-->Line_11 $$ if ((range.getEndOffset() > fileCopyText.length()) || !fileCopyText.subSequence(range.getStartOffset(), range.getEndOffset()).toString().equals(insertedElement.getText())) [ FD ]
Line_2 $$ static void assertCompletionPositionPsiConsistent(CompletionContext newContext, int offset, PsiFile fileCopy, PsiFile originalFile, PsiElement insertedElement) -->Line_4 $$ throw new LogEventException("No element at insertion offset", "offset=" + newContext.getStartOffset() + "\n" + DebugUtil.currentStackTrace(), createFileTextAttachment(fileCopy, originalFile), createAstAttachment(fileCopy, originalFile))[ FD ]
Line_2 $$ static void assertCompletionPositionPsiConsistent(CompletionContext newContext, int offset, PsiFile fileCopy, PsiFile originalFile, PsiElement insertedElement) -->Line_6 $$ if (fileCopy.findElementAt(offset) != insertedElement) [ FD ]
Line_2 $$ static void assertCompletionPositionPsiConsistent(CompletionContext newContext, int offset, PsiFile fileCopy, PsiFile originalFile, PsiElement insertedElement) -->Line_9 $$ final TextRange range = insertedElement.getTextRange()[ FD ]
