Line_2 $$ public boolean contentEquals(CharSequence cs) -->Line_3 $$ if (count != cs.length())[ CD ]
Line_10 $$ int n = count-->Line_22 $$ while (n-- != 0) [ FD ]
Line_5 $$ if (cs instanceof AbstractStringBuilder) -->Line_7 $$ char[] v2 = ((AbstractStringBuilder) cs).getValue()[ CD ]
Line_2 $$ public boolean contentEquals(CharSequence cs) -->Line_5 $$ if (cs instanceof AbstractStringBuilder) [ FD ]
Line_2 $$ public boolean contentEquals(CharSequence cs) -->Line_23 $$ if (v1[i++] != cs.charAt(j++))[ FD ]
Line_5 $$ if (cs instanceof AbstractStringBuilder) -->Line_8 $$ int i = offset[ CD ]
Line_12 $$ if (v1[i++] != v2[j++])-->Line_13 $$ return false[ CD ]
Line_2 $$ public boolean contentEquals(CharSequence cs) -->Line_16 $$ if (cs.equals(this))[ FD ]
Line_5 $$ if (cs instanceof AbstractStringBuilder) -->Line_11 $$ while (n-- != 0) [ CD ]
Line_2 $$ public boolean contentEquals(CharSequence cs) -->Line_26 $$ return true[ CD ]
Line_5 $$ if (cs instanceof AbstractStringBuilder) -->Line_6 $$ char[] v1 = value[ CD ]
Line_22 $$ while (n-- != 0) -->Line_23 $$ if (v1[i++] != cs.charAt(j++))[ CD ]
Line_16 $$ if (cs.equals(this))-->Line_17 $$ return true[ CD ]
Line_2 $$ public boolean contentEquals(CharSequence cs) -->Line_16 $$ if (cs.equals(this))[ CD ]
Line_8 $$ int i = offset-->Line_12 $$ if (v1[i++] != v2[j++])[ FD ]
Line_3 $$ if (count != cs.length())-->Line_4 $$ return false[ CD ]
Line_2 $$ public boolean contentEquals(CharSequence cs) -->Line_3 $$ if (count != cs.length())[ FD ]
Line_23 $$ if (v1[i++] != cs.charAt(j++))-->Line_24 $$ return false[ CD ]
Line_2 $$ public boolean contentEquals(CharSequence cs) -->Line_22 $$ while (n-- != 0) [ CD ]
Line_9 $$ int j = 0-->Line_12 $$ if (v1[i++] != v2[j++])[ FD ]
Line_10 $$ int n = count-->Line_11 $$ while (n-- != 0) [ FD ]
Line_8 $$ int i = offset-->Line_23 $$ if (v1[i++] != cs.charAt(j++))[ FD ]
Line_5 $$ if (cs instanceof AbstractStringBuilder) -->Line_9 $$ int j = 0[ CD ]
Line_5 $$ if (cs instanceof AbstractStringBuilder) -->Line_10 $$ int n = count[ CD ]
Line_2 $$ public boolean contentEquals(CharSequence cs) -->Line_5 $$ if (cs instanceof AbstractStringBuilder) [ CD ]
Line_11 $$ while (n-- != 0) -->Line_12 $$ if (v1[i++] != v2[j++])[ CD ]
Line_9 $$ int j = 0-->Line_23 $$ if (v1[i++] != cs.charAt(j++))[ FD ]
