Line_2 $$ public boolean lookingAt(CharSequence prefix) -->Line_6 $$ if (prefix.charAt(i) != input.charAt(cpos)) [ FD ]
Line_6 $$ if (prefix.charAt(i) != input.charAt(cpos)) -->Line_7 $$ return false[ CD ]
Line_5 $$ while (i < prefix.length() && cpos < input.length()) -->Line_10 $$ cpos++[ CD ]
Line_2 $$ public boolean lookingAt(CharSequence prefix) -->Line_5 $$ while (i < prefix.length() && cpos < input.length()) [ FD ]
Line_4 $$ int cpos = pos-->Line_6 $$ if (prefix.charAt(i) != input.charAt(cpos)) [ FD ]
Line_2 $$ public boolean lookingAt(CharSequence prefix) -->Line_12 $$ return true[ CD ]
Line_2 $$ public boolean lookingAt(CharSequence prefix) -->Line_3 $$ int i = 0[ CD ]
Line_3 $$ int i = 0-->Line_9 $$ i++[ FD ]
Line_2 $$ public boolean lookingAt(CharSequence prefix) -->Line_4 $$ int cpos = pos[ CD ]
Line_4 $$ int cpos = pos-->Line_10 $$ cpos++[ FD ]
Line_5 $$ while (i < prefix.length() && cpos < input.length()) -->Line_9 $$ i++[ CD ]
Line_3 $$ int i = 0-->Line_6 $$ if (prefix.charAt(i) != input.charAt(cpos)) [ FD ]
Line_2 $$ public boolean lookingAt(CharSequence prefix) -->Line_5 $$ while (i < prefix.length() && cpos < input.length()) [ CD ]
Line_5 $$ while (i < prefix.length() && cpos < input.length()) -->Line_6 $$ if (prefix.charAt(i) != input.charAt(cpos)) [ CD ]
