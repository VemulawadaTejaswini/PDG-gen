Line_11 $$ int startOffset = range.getStartOffset() + 1-->Line_16 $$ startOffset++[ FD ]
Line_2 $$ private TextRange calculateChangeHighlightRange(TextRange range) -->Line_14 $$ while (endOffset <= text.length() && StringUtil.equals(text.subSequence(range.getStartOffset(), range.getEndOffset()), text.subSequence(startOffset, endOffset))) [ CD ]
Line_12 $$ int endOffset = range.getEndOffset() + 1-->Line_17 $$ endOffset++[ FD ]
Line_2 $$ private TextRange calculateChangeHighlightRange(TextRange range) -->Line_21 $$ return useSameRange ? range : new TextRange(startOffset, endOffset)[ CD ]
Line_12 $$ int endOffset = range.getEndOffset() + 1-->Line_20 $$ endOffset--[ FD ]
Line_2 $$ private TextRange calculateChangeHighlightRange(TextRange range) -->Line_11 $$ int startOffset = range.getStartOffset() + 1[ FD ]
Line_2 $$ private TextRange calculateChangeHighlightRange(TextRange range) -->Line_19 $$ startOffset--[ CD ]
Line_2 $$ private TextRange calculateChangeHighlightRange(TextRange range) -->Line_12 $$ int endOffset = range.getEndOffset() + 1[ CD ]
Line_2 $$ private TextRange calculateChangeHighlightRange(TextRange range) -->Line_12 $$ int endOffset = range.getEndOffset() + 1[ FD ]
Line_14 $$ while (endOffset <= text.length() && StringUtil.equals(text.subSequence(range.getStartOffset(), range.getEndOffset()), text.subSequence(startOffset, endOffset))) -->Line_16 $$ startOffset++[ CD ]
Line_13 $$ boolean useSameRange = true-->Line_15 $$ useSameRange = false[ FD ]
Line_5 $$ int offset = range.getStartOffset()-->Line_6 $$ while (offset < text.length() && text.charAt(offset) == ' ') [ FD ]
Line_3 $$ CharSequence text = myEditor.getDocument().getCharsSequence()-->Line_14 $$ while (endOffset <= text.length() && StringUtil.equals(text.subSequence(range.getStartOffset(), range.getEndOffset()), text.subSequence(startOffset, endOffset))) [ FD ]
Line_14 $$ while (endOffset <= text.length() && StringUtil.equals(text.subSequence(range.getStartOffset(), range.getEndOffset()), text.subSequence(startOffset, endOffset))) -->Line_15 $$ useSameRange = false[ CD ]
Line_4 $$ if (range.getLength() <= 0) -->Line_5 $$ int offset = range.getStartOffset()[ CD ]
Line_4 $$ if (range.getLength() <= 0) -->Line_6 $$ while (offset < text.length() && text.charAt(offset) == ' ') [ CD ]
Line_2 $$ private TextRange calculateChangeHighlightRange(TextRange range) -->Line_3 $$ CharSequence text = myEditor.getDocument().getCharsSequence()[ CD ]
Line_2 $$ private TextRange calculateChangeHighlightRange(TextRange range) -->Line_14 $$ while (endOffset <= text.length() && StringUtil.equals(text.subSequence(range.getStartOffset(), range.getEndOffset()), text.subSequence(startOffset, endOffset))) [ FD ]
Line_2 $$ private TextRange calculateChangeHighlightRange(TextRange range) -->Line_5 $$ int offset = range.getStartOffset()[ FD ]
Line_5 $$ int offset = range.getStartOffset()-->Line_7 $$ offset++[ FD ]
Line_6 $$ while (offset < text.length() && text.charAt(offset) == ' ') -->Line_7 $$ offset++[ CD ]
Line_2 $$ private TextRange calculateChangeHighlightRange(TextRange range) -->Line_4 $$ if (range.getLength() <= 0) [ FD ]
Line_2 $$ private TextRange calculateChangeHighlightRange(TextRange range) -->Line_13 $$ boolean useSameRange = true[ CD ]
Line_12 $$ int endOffset = range.getEndOffset() + 1-->Line_14 $$ while (endOffset <= text.length() && StringUtil.equals(text.subSequence(range.getStartOffset(), range.getEndOffset()), text.subSequence(startOffset, endOffset))) [ FD ]
Line_3 $$ CharSequence text = myEditor.getDocument().getCharsSequence()-->Line_6 $$ while (offset < text.length() && text.charAt(offset) == ' ') [ FD ]
Line_11 $$ int startOffset = range.getStartOffset() + 1-->Line_19 $$ startOffset--[ FD ]
Line_4 $$ if (range.getLength() <= 0) -->Line_9 $$ return offset > range.getStartOffset() ? new TextRange(offset, offset) : range[ CD ]
Line_2 $$ private TextRange calculateChangeHighlightRange(TextRange range) -->Line_20 $$ endOffset--[ CD ]
Line_14 $$ while (endOffset <= text.length() && StringUtil.equals(text.subSequence(range.getStartOffset(), range.getEndOffset()), text.subSequence(startOffset, endOffset))) -->Line_17 $$ endOffset++[ CD ]
Line_11 $$ int startOffset = range.getStartOffset() + 1-->Line_14 $$ while (endOffset <= text.length() && StringUtil.equals(text.subSequence(range.getStartOffset(), range.getEndOffset()), text.subSequence(startOffset, endOffset))) [ FD ]
Line_2 $$ private TextRange calculateChangeHighlightRange(TextRange range) -->Line_9 $$ return offset > range.getStartOffset() ? new TextRange(offset, offset) : range[ FD ]
Line_2 $$ private TextRange calculateChangeHighlightRange(TextRange range) -->Line_4 $$ if (range.getLength() <= 0) [ CD ]
Line_2 $$ private TextRange calculateChangeHighlightRange(TextRange range) -->Line_11 $$ int startOffset = range.getStartOffset() + 1[ CD ]
