Line_12 $$ start = i + 1-->Line_8 $$ if (i > start) [ FD ]
Line_2 $$ private int getTextSegmentWidth(CharSequence text, int xStart, int fontType) -->Line_4 $$ int x = xStart[ CD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_8 $$ if (i > start) [ FD ]
Line_9 $$ x += charWidth(fontType, text.charAt(j))-->Line_15 $$ x += charWidth(fontType, text.charAt(j))[ FD ]
Line_4 $$ int x = xStart-->Line_11 $$ x = nextTabStop(x)[ FD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_11 $$ x = nextTabStop(x)[ CD ]
Line_4 $$ int x = xStart-->Line_9 $$ x += charWidth(fontType, text.charAt(j))[ FD ]
Line_8 $$ if (i > start) -->Line_9 $$ for (int j = start; j < i; j++) x += charWidth(fontType, text.charAt(j))[ CD ]
Line_2 $$ private int getTextSegmentWidth(CharSequence text, int xStart, int fontType) -->Line_3 $$ int start = 0[ CD ]
Line_3 $$ int start = 0-->Line_14 $$ if (start < text.length()) [ FD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_12 $$ start = i + 1[ CD ]
Line_4 $$ int x = xStart-->Line_15 $$ x += charWidth(fontType, text.charAt(j))[ FD ]
Line_2 $$ private int getTextSegmentWidth(CharSequence text, int xStart, int fontType) -->Line_9 $$ x += charWidth(fontType, text.charAt(j))[ FD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_6 $$ if (text.charAt(i) != '\t')[ FD ]
Line_14 $$ if (start < text.length()) -->Line_15 $$ for (int j = start; j < text.length(); j++) x += charWidth(fontType, text.charAt(j))[ CD ]
Line_3 $$ int start = 0-->Line_8 $$ if (i > start) [ FD ]
Line_2 $$ private int getTextSegmentWidth(CharSequence text, int xStart, int fontType) -->Line_5 $$ for (int i = 0; i < text.length(); i++) [ CD ]
Line_3 $$ int start = 0-->Line_12 $$ start = i + 1[ FD ]
Line_2 $$ private int getTextSegmentWidth(CharSequence text, int xStart, int fontType) -->Line_15 $$ for (int j = start; j < text.length(); j++) x += charWidth(fontType, text.charAt(j))[ FD ]
Line_2 $$ private int getTextSegmentWidth(CharSequence text, int xStart, int fontType) -->Line_15 $$ x += charWidth(fontType, text.charAt(j))[ FD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_12 $$ start = i + 1[ FD ]
Line_2 $$ private int getTextSegmentWidth(CharSequence text, int xStart, int fontType) -->Line_14 $$ if (start < text.length()) [ FD ]
Line_2 $$ private int getTextSegmentWidth(CharSequence text, int xStart, int fontType) -->Line_14 $$ if (start < text.length()) [ CD ]
Line_12 $$ start = i + 1-->Line_14 $$ if (start < text.length()) [ FD ]
Line_2 $$ private int getTextSegmentWidth(CharSequence text, int xStart, int fontType) -->Line_6 $$ if (text.charAt(i) != '\t')[ FD ]
Line_9 $$ for (int j = start; j < i; j++) x += charWidth(fontType, text.charAt(j))-->Line_15 $$ x += charWidth(fontType, text.charAt(j))[ FD ]
Line_11 $$ x = nextTabStop(x)-->Line_15 $$ x += charWidth(fontType, text.charAt(j))[ FD ]
Line_2 $$ private int getTextSegmentWidth(CharSequence text, int xStart, int fontType) -->Line_5 $$ for (int i = 0; i < text.length(); i++) [ FD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_8 $$ if (i > start) [ CD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_9 $$ for (int j = start; j < i; j++) x += charWidth(fontType, text.charAt(j))[ FD ]
Line_9 $$ for (int j = start; j < i; j++) x += charWidth(fontType, text.charAt(j))-->Line_15 $$ for (int j = start; j < text.length(); j++) x += charWidth(fontType, text.charAt(j))[ FD ]
Line_2 $$ private int getTextSegmentWidth(CharSequence text, int xStart, int fontType) -->Line_17 $$ return x - xStart[ CD ]
Line_9 $$ x += charWidth(fontType, text.charAt(j))-->Line_11 $$ x = nextTabStop(x)[ FD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_6 $$ if (text.charAt(i) != '\t')[ CD ]
