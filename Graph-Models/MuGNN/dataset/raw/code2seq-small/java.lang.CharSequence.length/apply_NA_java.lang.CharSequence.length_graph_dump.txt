Line_3 $$ if (psiElement instanceof PsiEnumConstant) -->Line_8 $$ if (probableCommaOffset >= text.length() || text.charAt(probableCommaOffset) != ',') [ CD ]
Line_8 $$ if (probableCommaOffset >= text.length() || text.charAt(probableCommaOffset) != ',') -->Line_9 $$ doc.insertString(insertionOffset, ",")[ CD ]
Line_4 $$ int insertionOffset = psiElement.getTextRange().getEndOffset()-->Line_7 $$ final int probableCommaOffset = CharArrayUtil.shiftForward(text, insertionOffset, " \t")[ FD ]
Line_3 $$ if (psiElement instanceof PsiEnumConstant) -->Line_5 $$ Document doc = editor.getDocument()[ CD ]
Line_2 $$ public void apply(Editor editor, JavaSmartEnterProcessor processor, PsiElement psiElement) throws IncorrectOperationException -->Line_5 $$ Document doc = editor.getDocument()[ FD ]
Line_3 $$ if (psiElement instanceof PsiEnumConstant) -->Line_6 $$ final CharSequence text = doc.getCharsSequence()[ CD ]
Line_6 $$ final CharSequence text = doc.getCharsSequence()-->Line_7 $$ final int probableCommaOffset = CharArrayUtil.shiftForward(text, insertionOffset, " \t")[ FD ]
Line_5 $$ Document doc = editor.getDocument()-->Line_9 $$ doc.insertString(insertionOffset, ",")[ FD ]
Line_6 $$ final CharSequence text = doc.getCharsSequence()-->Line_8 $$ if (probableCommaOffset >= text.length() || text.charAt(probableCommaOffset) != ',') [ FD ]
Line_2 $$ public void apply(Editor editor, JavaSmartEnterProcessor processor, PsiElement psiElement) throws IncorrectOperationException -->Line_3 $$ if (psiElement instanceof PsiEnumConstant) [ FD ]
Line_5 $$ Document doc = editor.getDocument()-->Line_6 $$ final CharSequence text = doc.getCharsSequence()[ FD ]
Line_3 $$ if (psiElement instanceof PsiEnumConstant) -->Line_7 $$ final int probableCommaOffset = CharArrayUtil.shiftForward(text, insertionOffset, " \t")[ CD ]
Line_2 $$ public void apply(Editor editor, JavaSmartEnterProcessor processor, PsiElement psiElement) throws IncorrectOperationException -->Line_3 $$ if (psiElement instanceof PsiEnumConstant) [ CD ]
Line_7 $$ final int probableCommaOffset = CharArrayUtil.shiftForward(text, insertionOffset, " \t")-->Line_8 $$ if (probableCommaOffset >= text.length() || text.charAt(probableCommaOffset) != ',') [ FD ]
Line_3 $$ if (psiElement instanceof PsiEnumConstant) -->Line_4 $$ int insertionOffset = psiElement.getTextRange().getEndOffset()[ CD ]
Line_2 $$ public void apply(Editor editor, JavaSmartEnterProcessor processor, PsiElement psiElement) throws IncorrectOperationException -->Line_4 $$ int insertionOffset = psiElement.getTextRange().getEndOffset()[ FD ]
Line_4 $$ int insertionOffset = psiElement.getTextRange().getEndOffset()-->Line_9 $$ doc.insertString(insertionOffset, ",")[ FD ]
