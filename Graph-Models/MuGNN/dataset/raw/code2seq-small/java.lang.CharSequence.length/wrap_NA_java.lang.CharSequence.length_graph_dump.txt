Line_2 $$ public static CharBuffer wrap(CharSequence chseq, int start, int end) -->Line_12 $$ return result[ CD ]
Line_2 $$ public static CharBuffer wrap(CharSequence chseq, int start, int end) -->Line_3 $$ if (chseq == null) [ CD ]
Line_2 $$ public static CharBuffer wrap(CharSequence chseq, int start, int end) -->Line_9 $$ CharBuffer result = BufferFactory.newCharBuffer(chseq)[ CD ]
Line_2 $$ public static CharBuffer wrap(CharSequence chseq, int start, int end) -->Line_11 $$ result.limit = end[ CD ]
Line_2 $$ public static CharBuffer wrap(CharSequence chseq, int start, int end) -->Line_6 $$ if (start < 0 || end < start || end > chseq.length()) [ FD ]
Line_2 $$ public static CharBuffer wrap(CharSequence chseq, int start, int end) -->Line_11 $$ result.limit = end[ FD ]
Line_2 $$ public static CharBuffer wrap(CharSequence chseq, int start, int end) -->Line_6 $$ if (start < 0 || end < start || end > chseq.length()) [ CD ]
Line_2 $$ public static CharBuffer wrap(CharSequence chseq, int start, int end) -->Line_3 $$ if (chseq == null) [ FD ]
Line_2 $$ public static CharBuffer wrap(CharSequence chseq, int start, int end) -->Line_10 $$ result.position = start[ FD ]
Line_2 $$ public static CharBuffer wrap(CharSequence chseq, int start, int end) -->Line_10 $$ result.position = start[ CD ]
Line_2 $$ public static CharBuffer wrap(CharSequence chseq, int start, int end) -->Line_9 $$ CharBuffer result = BufferFactory.newCharBuffer(chseq)[ FD ]
