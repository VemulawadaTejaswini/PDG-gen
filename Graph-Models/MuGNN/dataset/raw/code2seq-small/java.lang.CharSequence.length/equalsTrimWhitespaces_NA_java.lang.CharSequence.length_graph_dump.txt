Line_8 $$ int end1 = StringUtil.indexOf(s1, '\n', index1) + 1-->Line_11 $$ end1 = s1.length()[ FD ]
Line_8 $$ int end1 = StringUtil.indexOf(s1, '\n', index1) + 1-->Line_10 $$ if (end1 == 0) [ FD ]
Line_5 $$ while (true) -->Line_10 $$ if (end1 == 0) [ CD ]
Line_15 $$ end2 = s2.length()-->Line_21 $$ CharSequence line2 = s2.subSequence(index2, end2)[ FD ]
Line_26 $$ if (lastLine1)-->Line_27 $$ return true[ CD ]
Line_5 $$ while (true) -->Line_14 $$ if (end2 == 0) [ CD ]
Line_15 $$ end2 = s2.length()-->Line_14 $$ if (end2 == 0) [ FD ]
Line_5 $$ while (true) -->Line_8 $$ int end1 = StringUtil.indexOf(s1, '\n', index1) + 1[ CD ]
Line_25 $$ index2 = end2-->Line_21 $$ CharSequence line2 = s2.subSequence(index2, end2)[ FD ]
Line_11 $$ end1 = s1.length()-->Line_20 $$ CharSequence line1 = s1.subSequence(index1, end1)[ FD ]
Line_8 $$ int end1 = StringUtil.indexOf(s1, '\n', index1) + 1-->Line_20 $$ CharSequence line1 = s1.subSequence(index1, end1)[ FD ]
Line_2 $$ private static boolean equalsTrimWhitespaces(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_11 $$ end1 = s1.length()[ FD ]
Line_5 $$ while (true) -->Line_20 $$ CharSequence line1 = s1.subSequence(index1, end1)[ CD ]
Line_3 $$ int index1 = 0-->Line_20 $$ CharSequence line1 = s1.subSequence(index1, end1)[ FD ]
Line_11 $$ end1 = s1.length()-->Line_10 $$ if (end1 == 0) [ FD ]
Line_2 $$ private static boolean equalsTrimWhitespaces(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_8 $$ int end1 = StringUtil.indexOf(s1, '\n', index1) + 1[ FD ]
Line_16 $$ lastLine2 = true-->Line_18 $$ if (lastLine1 ^ lastLine2)[ FD ]
Line_5 $$ while (true) -->Line_7 $$ boolean lastLine2 = false[ CD ]
Line_14 $$ if (end2 == 0) -->Line_15 $$ end2 = s2.length()[ CD ]
Line_9 $$ int end2 = StringUtil.indexOf(s2, '\n', index2) + 1-->Line_15 $$ end2 = s2.length()[ FD ]
Line_5 $$ while (true) -->Line_25 $$ index2 = end2[ CD ]
Line_2 $$ private static boolean equalsTrimWhitespaces(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_4 $$ int index2 = 0[ CD ]
Line_9 $$ int end2 = StringUtil.indexOf(s2, '\n', index2) + 1-->Line_25 $$ index2 = end2[ FD ]
Line_5 $$ while (true) -->Line_21 $$ CharSequence line2 = s2.subSequence(index2, end2)[ CD ]
Line_12 $$ lastLine1 = true-->Line_18 $$ if (lastLine1 ^ lastLine2)[ FD ]
Line_10 $$ if (end1 == 0) -->Line_12 $$ lastLine1 = true[ CD ]
Line_5 $$ while (true) -->Line_18 $$ if (lastLine1 ^ lastLine2)[ CD ]
Line_5 $$ while (true) -->Line_6 $$ boolean lastLine1 = false[ CD ]
Line_24 $$ index1 = end1-->Line_20 $$ CharSequence line1 = s1.subSequence(index1, end1)[ FD ]
Line_10 $$ if (end1 == 0) -->Line_11 $$ end1 = s1.length()[ CD ]
Line_22 $$ if (!StringUtil.equalsTrimWhitespaces(line1, line2))-->Line_23 $$ return false[ CD ]
Line_5 $$ while (true) -->Line_26 $$ if (lastLine1)[ CD ]
Line_24 $$ index1 = end1-->Line_8 $$ int end1 = StringUtil.indexOf(s1, '\n', index1) + 1[ FD ]
Line_21 $$ CharSequence line2 = s2.subSequence(index2, end2)-->Line_22 $$ if (!StringUtil.equalsTrimWhitespaces(line1, line2))[ FD ]
Line_4 $$ int index2 = 0-->Line_25 $$ index2 = end2[ FD ]
Line_4 $$ int index2 = 0-->Line_21 $$ CharSequence line2 = s2.subSequence(index2, end2)[ FD ]
Line_2 $$ private static boolean equalsTrimWhitespaces(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_3 $$ int index1 = 0[ CD ]
Line_11 $$ end1 = s1.length()-->Line_24 $$ index1 = end1[ FD ]
Line_5 $$ while (true) -->Line_24 $$ index1 = end1[ CD ]
Line_2 $$ private static boolean equalsTrimWhitespaces(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_21 $$ CharSequence line2 = s2.subSequence(index2, end2)[ FD ]
Line_3 $$ int index1 = 0-->Line_24 $$ index1 = end1[ FD ]
Line_2 $$ private static boolean equalsTrimWhitespaces(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_5 $$ while (true) [ CD ]
Line_2 $$ private static boolean equalsTrimWhitespaces(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_9 $$ int end2 = StringUtil.indexOf(s2, '\n', index2) + 1[ FD ]
Line_14 $$ if (end2 == 0) -->Line_16 $$ lastLine2 = true[ CD ]
Line_5 $$ while (true) -->Line_22 $$ if (!StringUtil.equalsTrimWhitespaces(line1, line2))[ CD ]
Line_9 $$ int end2 = StringUtil.indexOf(s2, '\n', index2) + 1-->Line_14 $$ if (end2 == 0) [ FD ]
Line_7 $$ boolean lastLine2 = false-->Line_18 $$ if (lastLine1 ^ lastLine2)[ FD ]
Line_7 $$ boolean lastLine2 = false-->Line_16 $$ lastLine2 = true[ FD ]
Line_18 $$ if (lastLine1 ^ lastLine2)-->Line_19 $$ return false[ CD ]
Line_5 $$ while (true) -->Line_9 $$ int end2 = StringUtil.indexOf(s2, '\n', index2) + 1[ CD ]
Line_4 $$ int index2 = 0-->Line_9 $$ int end2 = StringUtil.indexOf(s2, '\n', index2) + 1[ FD ]
Line_2 $$ private static boolean equalsTrimWhitespaces(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_20 $$ CharSequence line1 = s1.subSequence(index1, end1)[ FD ]
Line_15 $$ end2 = s2.length()-->Line_25 $$ index2 = end2[ FD ]
Line_20 $$ CharSequence line1 = s1.subSequence(index1, end1)-->Line_22 $$ if (!StringUtil.equalsTrimWhitespaces(line1, line2))[ FD ]
Line_2 $$ private static boolean equalsTrimWhitespaces(@NotNull CharSequence s1, @NotNull CharSequence s2) -->Line_15 $$ end2 = s2.length()[ FD ]
Line_3 $$ int index1 = 0-->Line_8 $$ int end1 = StringUtil.indexOf(s1, '\n', index1) + 1[ FD ]
Line_6 $$ boolean lastLine1 = false-->Line_12 $$ lastLine1 = true[ FD ]
Line_9 $$ int end2 = StringUtil.indexOf(s2, '\n', index2) + 1-->Line_21 $$ CharSequence line2 = s2.subSequence(index2, end2)[ FD ]
Line_25 $$ index2 = end2-->Line_9 $$ int end2 = StringUtil.indexOf(s2, '\n', index2) + 1[ FD ]
Line_8 $$ int end1 = StringUtil.indexOf(s1, '\n', index1) + 1-->Line_24 $$ index1 = end1[ FD ]
Line_6 $$ boolean lastLine1 = false-->Line_18 $$ if (lastLine1 ^ lastLine2)[ FD ]
