Line_12 $$ while (len-- > 0) -->Line_20 $$ return false[ CD ]
Line_2 $$ public static boolean equal(@Nullable CharSequence s1, @Nullable CharSequence s2, boolean caseSensitive) -->Line_13 $$ char c1 = s1.charAt(to++)[ FD ]
Line_14 $$ char c2 = s2.charAt(po++)-->Line_15 $$ if (c1 == c2) [ FD ]
Line_10 $$ int po = 0-->Line_14 $$ char c2 = s2.charAt(po++)[ FD ]
Line_2 $$ public static boolean equal(@Nullable CharSequence s1, @Nullable CharSequence s2, boolean caseSensitive) -->Line_11 $$ int len = s1.length()[ CD ]
Line_2 $$ public static boolean equal(@Nullable CharSequence s1, @Nullable CharSequence s2, boolean caseSensitive) -->Line_18 $$ if (!caseSensitive && StringUtilRt.charsEqualIgnoreCase(c1, c2))[ FD ]
Line_13 $$ char c1 = s1.charAt(to++)-->Line_18 $$ if (!caseSensitive && StringUtilRt.charsEqualIgnoreCase(c1, c2))[ FD ]
Line_2 $$ public static boolean equal(@Nullable CharSequence s1, @Nullable CharSequence s2, boolean caseSensitive) -->Line_14 $$ char c2 = s2.charAt(po++)[ FD ]
Line_2 $$ public static boolean equal(@Nullable CharSequence s1, @Nullable CharSequence s2, boolean caseSensitive) -->Line_3 $$ if (s1 == s2)[ FD ]
Line_7 $$ if (s1.length() != s2.length())-->Line_8 $$ return false[ CD ]
Line_2 $$ public static boolean equal(@Nullable CharSequence s1, @Nullable CharSequence s2, boolean caseSensitive) -->Line_5 $$ if (s1 == null || s2 == null)[ CD ]
Line_12 $$ while (len-- > 0) -->Line_13 $$ char c1 = s1.charAt(to++)[ CD ]
Line_2 $$ public static boolean equal(@Nullable CharSequence s1, @Nullable CharSequence s2, boolean caseSensitive) -->Line_7 $$ if (s1.length() != s2.length())[ FD ]
Line_13 $$ char c1 = s1.charAt(to++)-->Line_15 $$ if (c1 == c2) [ FD ]
Line_12 $$ while (len-- > 0) -->Line_15 $$ if (c1 == c2) [ CD ]
Line_11 $$ int len = s1.length()-->Line_12 $$ while (len-- > 0) [ FD ]
Line_2 $$ public static boolean equal(@Nullable CharSequence s1, @Nullable CharSequence s2, boolean caseSensitive) -->Line_12 $$ while (len-- > 0) [ CD ]
Line_3 $$ if (s1 == s2)-->Line_4 $$ return true[ CD ]
Line_2 $$ public static boolean equal(@Nullable CharSequence s1, @Nullable CharSequence s2, boolean caseSensitive) -->Line_9 $$ int to = 0[ CD ]
Line_9 $$ int to = 0-->Line_13 $$ char c1 = s1.charAt(to++)[ FD ]
Line_2 $$ public static boolean equal(@Nullable CharSequence s1, @Nullable CharSequence s2, boolean caseSensitive) -->Line_11 $$ int len = s1.length()[ FD ]
Line_2 $$ public static boolean equal(@Nullable CharSequence s1, @Nullable CharSequence s2, boolean caseSensitive) -->Line_10 $$ int po = 0[ CD ]
Line_2 $$ public static boolean equal(@Nullable CharSequence s1, @Nullable CharSequence s2, boolean caseSensitive) -->Line_3 $$ if (s1 == s2)[ CD ]
Line_2 $$ public static boolean equal(@Nullable CharSequence s1, @Nullable CharSequence s2, boolean caseSensitive) -->Line_7 $$ if (s1.length() != s2.length())[ CD ]
Line_2 $$ public static boolean equal(@Nullable CharSequence s1, @Nullable CharSequence s2, boolean caseSensitive) -->Line_22 $$ return true[ CD ]
Line_12 $$ while (len-- > 0) -->Line_18 $$ if (!caseSensitive && StringUtilRt.charsEqualIgnoreCase(c1, c2))[ CD ]
Line_14 $$ char c2 = s2.charAt(po++)-->Line_18 $$ if (!caseSensitive && StringUtilRt.charsEqualIgnoreCase(c1, c2))[ FD ]
Line_12 $$ while (len-- > 0) -->Line_14 $$ char c2 = s2.charAt(po++)[ CD ]
Line_5 $$ if (s1 == null || s2 == null)-->Line_6 $$ return false[ CD ]
