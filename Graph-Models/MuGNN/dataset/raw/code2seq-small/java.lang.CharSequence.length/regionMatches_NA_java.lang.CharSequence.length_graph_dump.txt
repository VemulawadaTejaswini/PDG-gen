Line_7 $$ for (int i = 0; i < s.length(); i++) -->Line_8 $$ if (buffer.charAt(offset + i) != s.charAt(i))[ CD ]
Line_2 $$ public static boolean regionMatches(@NotNull CharSequence buffer, int offset, @NotNull CharSequence s) -->Line_7 $$ for (int i = 0; i < s.length(); i++) [ CD ]
Line_7 $$ for (int i = 0; i < s.length(); i++) -->Line_8 $$ if (buffer.charAt(offset + i) != s.charAt(i))[ FD ]
Line_2 $$ public static boolean regionMatches(@NotNull CharSequence buffer, int offset, @NotNull CharSequence s) -->Line_11 $$ return true[ CD ]
Line_2 $$ public static boolean regionMatches(@NotNull CharSequence buffer, int offset, @NotNull CharSequence s) -->Line_7 $$ for (int i = 0; i < s.length(); i++) [ FD ]
Line_2 $$ public static boolean regionMatches(@NotNull CharSequence buffer, int offset, @NotNull CharSequence s) -->Line_3 $$ if (offset + s.length() > buffer.length())[ FD ]
Line_2 $$ public static boolean regionMatches(@NotNull CharSequence buffer, int offset, @NotNull CharSequence s) -->Line_3 $$ if (offset + s.length() > buffer.length())[ CD ]
Line_2 $$ public static boolean regionMatches(@NotNull CharSequence buffer, int offset, @NotNull CharSequence s) -->Line_5 $$ if (offset < 0)[ CD ]
Line_3 $$ if (offset + s.length() > buffer.length())-->Line_4 $$ return false[ CD ]
Line_5 $$ if (offset < 0)-->Line_6 $$ return false[ CD ]
Line_8 $$ if (buffer.charAt(offset + i) != s.charAt(i))-->Line_9 $$ return false[ CD ]
Line_2 $$ public static boolean regionMatches(@NotNull CharSequence buffer, int offset, @NotNull CharSequence s) -->Line_5 $$ if (offset < 0)[ FD ]
Line_2 $$ public static boolean regionMatches(@NotNull CharSequence buffer, int offset, @NotNull CharSequence s) -->Line_8 $$ if (buffer.charAt(offset + i) != s.charAt(i))[ FD ]
