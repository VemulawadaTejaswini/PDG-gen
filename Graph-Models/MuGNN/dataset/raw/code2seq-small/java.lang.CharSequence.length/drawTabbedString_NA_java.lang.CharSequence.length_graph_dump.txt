Line_32 $$ if (effectType == EffectType.STRIKEOUT) -->Line_36 $$ g.setColor(savedColor)[ CD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_8 $$ if (i > start) [ FD ]
Line_3 $$ int xStart = x-->Line_35 $$ g.drawLine(xStart, y1, xStart + w, y1)[ FD ]
Line_38 $$ if (effectType == EffectType.WAVE_UNDERSCORE) -->Line_41 $$ g.setColor(savedColor)[ CD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_3 $$ int xStart = x[ CD ]
Line_27 $$ if (effectType == EffectType.LINE_UNDERSCORE) -->Line_29 $$ g.drawLine(xStart, y + 1, xStart + w, y + 1)[ CD ]
Line_10 $$ for (int j = start; j < i; j++) -->Line_11 $$ char c = text.charAt(j)[ CD ]
Line_4 $$ int start = 0-->Line_8 $$ if (i > start) [ FD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_46 $$ return x[ CD ]
Line_24 $$ if (effectColor != null) -->Line_26 $$ int w = getTextSegmentWidth(text, xStart, fontType)[ CD ]
Line_10 $$ for (int j = start; j < i; j++) -->Line_12 $$ x += charWidth(fontType, c)[ CD ]
Line_3 $$ int xStart = x-->Line_29 $$ g.drawLine(xStart, y + 1, xStart + w, y + 1)[ FD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_24 $$ if (effectColor != null) [ CD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_18 $$ start = i + 1[ CD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_5 $$ for (int i = 0; i < text.length(); i++) [ FD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_39 $$ g.setColor(effectColor)[ FD ]
Line_27 $$ if (effectType == EffectType.LINE_UNDERSCORE) -->Line_28 $$ g.setColor(effectColor)[ CD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_35 $$ g.drawLine(xStart, y1, xStart + w, y1)[ FD ]
Line_17 $$ x = x1-->Line_21 $$ drawCharsCached(g, text.subSequence(start, text.length()), x, y, fontType, fontColor)[ FD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_25 $$ Color savedColor = g.getColor()[ FD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_16 $$ drawTabPlacer(g, y, x, x1)[ CD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_6 $$ if (text.charAt(i) != '\t')[ FD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_30 $$ g.setColor(savedColor)[ FD ]
Line_25 $$ Color savedColor = g.getColor()-->Line_30 $$ g.setColor(savedColor)[ FD ]
Line_10 $$ for (int j = start; j < i; j++) -->Line_22 $$ for (int j = start; j < text.length(); j++) x += charWidth(fontType, text.charAt(j))[ FD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_16 $$ drawTabPlacer(g, y, x, x1)[ FD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_8 $$ if (i > start) [ CD ]
Line_4 $$ int start = 0-->Line_9 $$ drawCharsCached(g, text.subSequence(start, i), x, y, fontType, fontColor)[ FD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_9 $$ drawCharsCached(g, text.subSequence(start, i), x, y, fontType, fontColor)[ FD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_15 $$ int x1 = nextTabStop(x)[ FD ]
Line_12 $$ x += charWidth(fontType, c)-->Line_22 $$ x += charWidth(fontType, text.charAt(j))[ FD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_22 $$ for (int j = start; j < text.length(); j++) x += charWidth(fontType, text.charAt(j))[ FD ]
Line_4 $$ int start = 0-->Line_18 $$ start = i + 1[ FD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_5 $$ for (int i = 0; i < text.length(); i++) [ CD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_21 $$ drawCharsCached(g, text.subSequence(start, text.length()), x, y, fontType, fontColor)[ FD ]
Line_34 $$ int y1 = y - getCharHeight() / 2-->Line_35 $$ g.drawLine(xStart, y1, xStart + w, y1)[ FD ]
Line_17 $$ x = x1-->Line_15 $$ int x1 = nextTabStop(x)[ FD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_11 $$ char c = text.charAt(j)[ FD ]
Line_24 $$ if (effectColor != null) -->Line_25 $$ Color savedColor = g.getColor()[ CD ]
Line_12 $$ x += charWidth(fontType, c)-->Line_21 $$ drawCharsCached(g, text.subSequence(start, text.length()), x, y, fontType, fontColor)[ FD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_26 $$ int w = getTextSegmentWidth(text, xStart, fontType)[ FD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_12 $$ x += charWidth(fontType, c)[ FD ]
Line_25 $$ Color savedColor = g.getColor()-->Line_41 $$ g.setColor(savedColor)[ FD ]
Line_17 $$ x = x1-->Line_16 $$ drawTabPlacer(g, y, x, x1)[ FD ]
Line_10 $$ for (int j = start; j < i; j++) -->Line_22 $$ x += charWidth(fontType, text.charAt(j))[ FD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_33 $$ g.setColor(effectColor)[ FD ]
Line_24 $$ if (effectColor != null) -->Line_27 $$ if (effectType == EffectType.LINE_UNDERSCORE) [ CD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_28 $$ g.setColor(effectColor)[ FD ]
Line_27 $$ if (effectType == EffectType.LINE_UNDERSCORE) -->Line_32 $$ if (effectType == EffectType.STRIKEOUT) [ CD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_36 $$ g.setColor(savedColor)[ FD ]
Line_12 $$ x += charWidth(fontType, c)-->Line_16 $$ drawTabPlacer(g, y, x, x1)[ FD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_29 $$ g.drawLine(xStart, y + 1, xStart + w, y + 1)[ FD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_38 $$ if (effectType == EffectType.WAVE_UNDERSCORE) [ FD ]
Line_18 $$ start = i + 1-->Line_8 $$ if (i > start) [ FD ]
Line_3 $$ int xStart = x-->Line_40 $$ drawWave(g, xStart, xStart + w, y + 1)[ FD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_9 $$ drawCharsCached(g, text.subSequence(start, i), x, y, fontType, fontColor)[ FD ]
Line_32 $$ if (effectType == EffectType.STRIKEOUT) -->Line_34 $$ int y1 = y - getCharHeight() / 2[ CD ]
Line_12 $$ x += charWidth(fontType, c)-->Line_17 $$ x = x1[ FD ]
Line_38 $$ if (effectType == EffectType.WAVE_UNDERSCORE) -->Line_39 $$ g.setColor(effectColor)[ CD ]
Line_32 $$ if (effectType == EffectType.STRIKEOUT) -->Line_33 $$ g.setColor(effectColor)[ CD ]
Line_8 $$ if (i > start) -->Line_9 $$ drawCharsCached(g, text.subSequence(start, i), x, y, fontType, fontColor)[ CD ]
Line_18 $$ start = i + 1-->Line_21 $$ drawCharsCached(g, text.subSequence(start, text.length()), x, y, fontType, fontColor)[ FD ]
Line_11 $$ char c = text.charAt(j)-->Line_12 $$ x += charWidth(fontType, c)[ FD ]
Line_18 $$ start = i + 1-->Line_9 $$ drawCharsCached(g, text.subSequence(start, i), x, y, fontType, fontColor)[ FD ]
Line_20 $$ if (start < text.length()) -->Line_22 $$ for (int j = start; j < text.length(); j++) x += charWidth(fontType, text.charAt(j))[ CD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_17 $$ x = x1[ FD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_24 $$ if (effectColor != null) [ FD ]
Line_8 $$ if (i > start) -->Line_10 $$ for (int j = start; j < i; j++) [ CD ]
Line_4 $$ int start = 0-->Line_20 $$ if (start < text.length()) [ FD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_20 $$ if (start < text.length()) [ FD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_32 $$ if (effectType == EffectType.STRIKEOUT) [ FD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_40 $$ drawWave(g, xStart, xStart + w, y + 1)[ FD ]
Line_18 $$ start = i + 1-->Line_20 $$ if (start < text.length()) [ FD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_17 $$ x = x1[ CD ]
Line_3 $$ int xStart = x-->Line_26 $$ int w = getTextSegmentWidth(text, xStart, fontType)[ FD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_22 $$ x += charWidth(fontType, text.charAt(j))[ FD ]
Line_27 $$ if (effectType == EffectType.LINE_UNDERSCORE) -->Line_30 $$ g.setColor(savedColor)[ CD ]
Line_10 $$ for (int j = start; j < i; j++) -->Line_11 $$ char c = text.charAt(j)[ FD ]
Line_32 $$ if (effectType == EffectType.STRIKEOUT) -->Line_38 $$ if (effectType == EffectType.WAVE_UNDERSCORE) [ CD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_20 $$ if (start < text.length()) [ CD ]
Line_17 $$ x = x1-->Line_22 $$ x += charWidth(fontType, text.charAt(j))[ FD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_41 $$ g.setColor(savedColor)[ FD ]
Line_20 $$ if (start < text.length()) -->Line_21 $$ drawCharsCached(g, text.subSequence(start, text.length()), x, y, fontType, fontColor)[ CD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_4 $$ int start = 0[ CD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_6 $$ if (text.charAt(i) != '\t')[ FD ]
Line_2 $$ private int drawTabbedString(Graphics g, CharSequence text, int x, int y, Color effectColor, EffectType effectType, int fontType, Color fontColor) -->Line_27 $$ if (effectType == EffectType.LINE_UNDERSCORE) [ FD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_18 $$ start = i + 1[ FD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_15 $$ int x1 = nextTabStop(x)[ CD ]
Line_38 $$ if (effectType == EffectType.WAVE_UNDERSCORE) -->Line_40 $$ drawWave(g, xStart, xStart + w, y + 1)[ CD ]
Line_4 $$ int start = 0-->Line_21 $$ drawCharsCached(g, text.subSequence(start, text.length()), x, y, fontType, fontColor)[ FD ]
Line_12 $$ x += charWidth(fontType, c)-->Line_15 $$ int x1 = nextTabStop(x)[ FD ]
Line_32 $$ if (effectType == EffectType.STRIKEOUT) -->Line_35 $$ g.drawLine(xStart, y1, xStart + w, y1)[ CD ]
Line_17 $$ x = x1-->Line_9 $$ drawCharsCached(g, text.subSequence(start, i), x, y, fontType, fontColor)[ FD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_10 $$ for (int j = start; j < i; j++) [ FD ]
Line_25 $$ Color savedColor = g.getColor()-->Line_36 $$ g.setColor(savedColor)[ FD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_6 $$ if (text.charAt(i) != '\t')[ CD ]
