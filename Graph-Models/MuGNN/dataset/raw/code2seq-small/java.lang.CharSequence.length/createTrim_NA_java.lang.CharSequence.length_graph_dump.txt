Line_2 $$ public static Line createTrim(@NotNull CharSequence text, int startOffset) -->Line_18 $$ int h = calcTrimHash(text, startOffset, offset)[ CD ]
Line_2 $$ public static Line createTrim(@NotNull CharSequence text, int startOffset) -->Line_18 $$ int h = calcTrimHash(text, startOffset, offset)[ FD ]
Line_2 $$ public static Line createTrim(@NotNull CharSequence text, int startOffset) -->Line_7 $$ while (offset < len) [ CD ]
Line_8 $$ char c = text.charAt(offset)-->Line_9 $$ if (c == '\n') [ FD ]
Line_3 $$ int len = text.length()-->Line_7 $$ while (offset < len) [ FD ]
Line_6 $$ int offset = startOffset-->Line_10 $$ offset++[ FD ]
Line_5 $$ boolean newline = false-->Line_11 $$ newline = true[ FD ]
Line_2 $$ public static Line createTrim(@NotNull CharSequence text, int startOffset) -->Line_6 $$ int offset = startOffset[ CD ]
Line_9 $$ if (c == '\n') -->Line_10 $$ offset++[ CD ]
Line_2 $$ public static Line createTrim(@NotNull CharSequence text, int startOffset) -->Line_5 $$ boolean newline = false[ CD ]
Line_8 $$ char c = text.charAt(offset)-->Line_14 $$ if (!isWhiteSpace(c))[ FD ]
Line_4 $$ int nonSpace = 0-->Line_15 $$ nonSpace++[ FD ]
Line_2 $$ public static Line createTrim(@NotNull CharSequence text, int startOffset) -->Line_8 $$ char c = text.charAt(offset)[ FD ]
Line_6 $$ int offset = startOffset-->Line_18 $$ int h = calcTrimHash(text, startOffset, offset)[ FD ]
Line_2 $$ public static Line createTrim(@NotNull CharSequence text, int startOffset) -->Line_3 $$ int len = text.length()[ FD ]
Line_14 $$ if (!isWhiteSpace(c))-->Line_15 $$ nonSpace++[ CD ]
Line_6 $$ int offset = startOffset-->Line_8 $$ char c = text.charAt(offset)[ FD ]
Line_2 $$ public static Line createTrim(@NotNull CharSequence text, int startOffset) -->Line_3 $$ int len = text.length()[ CD ]
Line_7 $$ while (offset < len) -->Line_9 $$ if (c == '\n') [ CD ]
Line_6 $$ int offset = startOffset-->Line_7 $$ while (offset < len) [ FD ]
Line_9 $$ if (c == '\n') -->Line_11 $$ newline = true[ CD ]
Line_7 $$ while (offset < len) -->Line_16 $$ offset++[ CD ]
Line_6 $$ int offset = startOffset-->Line_16 $$ offset++[ FD ]
Line_2 $$ public static Line createTrim(@NotNull CharSequence text, int startOffset) -->Line_19 $$ return new Line(text, startOffset, offset, Mode.TRIM, h, nonSpace, newline)[ CD ]
Line_7 $$ while (offset < len) -->Line_14 $$ if (!isWhiteSpace(c))[ CD ]
Line_2 $$ public static Line createTrim(@NotNull CharSequence text, int startOffset) -->Line_4 $$ int nonSpace = 0[ CD ]
Line_7 $$ while (offset < len) -->Line_8 $$ char c = text.charAt(offset)[ CD ]
