Line_2 $$ private static boolean nodeIsNextAfterAsterisks(@NotNull ASTNode node) -->Line_12 $$ return true[ CD ]
Line_4 $$ if (current == null || current == node)-->Line_5 $$ return false[ CD ]
Line_2 $$ private static boolean nodeIsNextAfterAsterisks(@NotNull ASTNode node) -->Line_6 $$ while (current.getTreeNext() != node) [ CD ]
Line_2 $$ private static boolean nodeIsNextAfterAsterisks(@NotNull ASTNode node) -->Line_6 $$ while (current.getTreeNext() != node) [ FD ]
Line_6 $$ while (current.getTreeNext() != node) -->Line_9 $$ if (CharArrayUtil.shiftForward(currentText, 0, " \t") != currentText.length())[ CD ]
Line_6 $$ while (current.getTreeNext() != node) -->Line_8 $$ CharSequence currentText = current.getChars()[ CD ]
Line_2 $$ private static boolean nodeIsNextAfterAsterisks(@NotNull ASTNode node) -->Line_3 $$ ASTNode current = TreeUtil.findSiblingBackward(node, DOC_COMMENT_LEADING_ASTERISKS)[ CD ]
Line_7 $$ current = current.getTreeNext()-->Line_6 $$ while (current.getTreeNext() != node) [ FD ]
Line_8 $$ CharSequence currentText = current.getChars()-->Line_9 $$ if (CharArrayUtil.shiftForward(currentText, 0, " \t") != currentText.length())[ FD ]
Line_2 $$ private static boolean nodeIsNextAfterAsterisks(@NotNull ASTNode node) -->Line_4 $$ if (current == null || current == node)[ CD ]
Line_3 $$ ASTNode current = TreeUtil.findSiblingBackward(node, DOC_COMMENT_LEADING_ASTERISKS)-->Line_6 $$ while (current.getTreeNext() != node) [ FD ]
Line_3 $$ ASTNode current = TreeUtil.findSiblingBackward(node, DOC_COMMENT_LEADING_ASTERISKS)-->Line_7 $$ current = current.getTreeNext()[ FD ]
Line_9 $$ if (CharArrayUtil.shiftForward(currentText, 0, " \t") != currentText.length())-->Line_10 $$ return false[ CD ]
Line_2 $$ private static boolean nodeIsNextAfterAsterisks(@NotNull ASTNode node) -->Line_3 $$ ASTNode current = TreeUtil.findSiblingBackward(node, DOC_COMMENT_LEADING_ASTERISKS)[ FD ]
Line_6 $$ while (current.getTreeNext() != node) -->Line_7 $$ current = current.getTreeNext()[ CD ]
Line_7 $$ current = current.getTreeNext()-->Line_8 $$ CharSequence currentText = current.getChars()[ FD ]
Line_3 $$ ASTNode current = TreeUtil.findSiblingBackward(node, DOC_COMMENT_LEADING_ASTERISKS)-->Line_8 $$ CharSequence currentText = current.getChars()[ FD ]
