Line_2 $$ private static int getLeafMatchingLength(CharSequence leafText, CharSequence pattern, int patternIndex, int finalPatternIndex, int direction) -->Line_6 $$ while (leafText.charAt(leafIndex) == pattern.charAt(patternIndex)) [ CD ]
Line_6 $$ while (leafText.charAt(leafIndex) == pattern.charAt(patternIndex)) -->Line_12 $$ patternIndex += direction[ CD ]
Line_2 $$ private static int getLeafMatchingLength(CharSequence leafText, CharSequence pattern, int patternIndex, int finalPatternIndex, int direction) -->Line_14 $$ return result[ CD ]
Line_2 $$ private static int getLeafMatchingLength(CharSequence leafText, CharSequence pattern, int patternIndex, int finalPatternIndex, int direction) -->Line_5 $$ int result = 0[ CD ]
Line_2 $$ private static int getLeafMatchingLength(CharSequence leafText, CharSequence pattern, int patternIndex, int finalPatternIndex, int direction) -->Line_4 $$ int finalLeafIndex = direction == 1 ? leafText.length() - 1 : 0[ FD ]
Line_3 $$ int leafIndex = direction == 1 ? 0 : leafText.length() - 1-->Line_6 $$ while (leafText.charAt(leafIndex) == pattern.charAt(patternIndex)) [ FD ]
Line_6 $$ while (leafText.charAt(leafIndex) == pattern.charAt(patternIndex)) -->Line_7 $$ result++[ CD ]
Line_6 $$ while (leafText.charAt(leafIndex) == pattern.charAt(patternIndex)) -->Line_11 $$ leafIndex += direction[ CD ]
Line_2 $$ private static int getLeafMatchingLength(CharSequence leafText, CharSequence pattern, int patternIndex, int finalPatternIndex, int direction) -->Line_6 $$ while (leafText.charAt(leafIndex) == pattern.charAt(patternIndex)) [ FD ]
Line_2 $$ private static int getLeafMatchingLength(CharSequence leafText, CharSequence pattern, int patternIndex, int finalPatternIndex, int direction) -->Line_12 $$ patternIndex += direction[ FD ]
Line_11 $$ leafIndex += direction-->Line_6 $$ while (leafText.charAt(leafIndex) == pattern.charAt(patternIndex)) [ FD ]
Line_5 $$ int result = 0-->Line_7 $$ result++[ FD ]
Line_2 $$ private static int getLeafMatchingLength(CharSequence leafText, CharSequence pattern, int patternIndex, int finalPatternIndex, int direction) -->Line_3 $$ int leafIndex = direction == 1 ? 0 : leafText.length() - 1[ CD ]
Line_2 $$ private static int getLeafMatchingLength(CharSequence leafText, CharSequence pattern, int patternIndex, int finalPatternIndex, int direction) -->Line_4 $$ int finalLeafIndex = direction == 1 ? leafText.length() - 1 : 0[ CD ]
Line_6 $$ while (leafText.charAt(leafIndex) == pattern.charAt(patternIndex)) -->Line_8 $$ if (leafIndex == finalLeafIndex || patternIndex == finalPatternIndex) [ CD ]
Line_12 $$ patternIndex += direction-->Line_6 $$ while (leafText.charAt(leafIndex) == pattern.charAt(patternIndex)) [ FD ]
Line_2 $$ private static int getLeafMatchingLength(CharSequence leafText, CharSequence pattern, int patternIndex, int finalPatternIndex, int direction) -->Line_3 $$ int leafIndex = direction == 1 ? 0 : leafText.length() - 1[ FD ]
Line_3 $$ int leafIndex = direction == 1 ? 0 : leafText.length() - 1-->Line_11 $$ leafIndex += direction[ FD ]
Line_2 $$ private static int getLeafMatchingLength(CharSequence leafText, CharSequence pattern, int patternIndex, int finalPatternIndex, int direction) -->Line_11 $$ leafIndex += direction[ FD ]
