Line_6 $$ if (nextNonWs < seq.length() && seq.charAt(nextNonWs) == '-->Line_7 $$ tailOffset = nextNonWs + 1[ CD ]
Line_3 $$ int startOffset = tailOffset-->Line_11 $$ tailOffset = reformatBrace(editor, tailOffset, startOffset)[ FD ]
Line_7 $$ tailOffset = nextNonWs + 1-->Line_9 $$ tailOffset = insertChar(editor, startOffset, '[ FD ]
Line_2 $$ public int processTail(final Editor editor, int tailOffset) -->Line_13 $$ new EnterHandler(EditorActionManager.getInstance().getActionHandler(IdeActions.ACTION_EDITOR_ENTER)).executeWriteAction(editor, DataManager.getInstance().getDataContext(editor.getContentComponent()))[ FD ]
Line_2 $$ public int processTail(final Editor editor, int tailOffset) -->Line_7 $$ tailOffset = nextNonWs + 1[ FD ]
Line_2 $$ public int processTail(final Editor editor, int tailOffset) -->Line_4 $$ CharSequence seq = editor.getDocument().getCharsSequence()[ CD ]
Line_2 $$ public int processTail(final Editor editor, int tailOffset) -->Line_9 $$ tailOffset = insertChar(editor, startOffset, '[ FD ]
Line_2 $$ public int processTail(final Editor editor, int tailOffset) -->Line_11 $$ tailOffset = reformatBrace(editor, tailOffset, startOffset)[ CD ]
Line_11 $$ tailOffset = reformatBrace(editor, tailOffset, startOffset)-->Line_12 $$ if (EnterAfterUnmatchedBraceHandler.isAfterUnmatchedLBrace(editor, tailOffset, getFileType(editor))) [ FD ]
Line_2 $$ public int processTail(final Editor editor, int tailOffset) -->Line_12 $$ if (EnterAfterUnmatchedBraceHandler.isAfterUnmatchedLBrace(editor, tailOffset, getFileType(editor))) [ FD ]
Line_9 $$ tailOffset = insertChar(editor, startOffset, '-->Line_11 $$ tailOffset = reformatBrace(editor, tailOffset, startOffset)[ FD ]
Line_12 $$ if (EnterAfterUnmatchedBraceHandler.isAfterUnmatchedLBrace(editor, tailOffset, getFileType(editor))) -->Line_13 $$ new EnterHandler(EditorActionManager.getInstance().getActionHandler(IdeActions.ACTION_EDITOR_ENTER)).executeWriteAction(editor, DataManager.getInstance().getDataContext(editor.getContentComponent()))[ CD ]
Line_5 $$ int nextNonWs = CharArrayUtil.shiftForward(seq, tailOffset, " \t")-->Line_6 $$ if (nextNonWs < seq.length() && seq.charAt(nextNonWs) == '[ FD ]
Line_2 $$ public int processTail(final Editor editor, int tailOffset) -->Line_16 $$ return tailOffset[ CD ]
Line_2 $$ public int processTail(final Editor editor, int tailOffset) -->Line_5 $$ int nextNonWs = CharArrayUtil.shiftForward(seq, tailOffset, " \t")[ CD ]
Line_5 $$ int nextNonWs = CharArrayUtil.shiftForward(seq, tailOffset, " \t")-->Line_7 $$ tailOffset = nextNonWs + 1[ FD ]
Line_9 $$ tailOffset = insertChar(editor, startOffset, '-->Line_12 $$ if (EnterAfterUnmatchedBraceHandler.isAfterUnmatchedLBrace(editor, tailOffset, getFileType(editor))) [ FD ]
Line_4 $$ CharSequence seq = editor.getDocument().getCharsSequence()-->Line_5 $$ int nextNonWs = CharArrayUtil.shiftForward(seq, tailOffset, " \t")[ FD ]
Line_7 $$ tailOffset = nextNonWs + 1-->Line_11 $$ tailOffset = reformatBrace(editor, tailOffset, startOffset)[ FD ]
Line_2 $$ public int processTail(final Editor editor, int tailOffset) -->Line_11 $$ tailOffset = reformatBrace(editor, tailOffset, startOffset)[ FD ]
Line_12 $$ if (EnterAfterUnmatchedBraceHandler.isAfterUnmatchedLBrace(editor, tailOffset, getFileType(editor))) -->Line_14 $$ return editor.getCaretModel().getOffset()[ CD ]
Line_2 $$ public int processTail(final Editor editor, int tailOffset) -->Line_5 $$ int nextNonWs = CharArrayUtil.shiftForward(seq, tailOffset, " \t")[ FD ]
Line_2 $$ public int processTail(final Editor editor, int tailOffset) -->Line_14 $$ return editor.getCaretModel().getOffset()[ FD ]
Line_4 $$ CharSequence seq = editor.getDocument().getCharsSequence()-->Line_6 $$ if (nextNonWs < seq.length() && seq.charAt(nextNonWs) == '[ FD ]
Line_2 $$ public int processTail(final Editor editor, int tailOffset) -->Line_4 $$ CharSequence seq = editor.getDocument().getCharsSequence()[ FD ]
Line_2 $$ public int processTail(final Editor editor, int tailOffset) -->Line_6 $$ if (nextNonWs < seq.length() && seq.charAt(nextNonWs) == '[ CD ]
Line_2 $$ public int processTail(final Editor editor, int tailOffset) -->Line_3 $$ int startOffset = tailOffset[ CD ]
Line_7 $$ tailOffset = nextNonWs + 1-->Line_12 $$ if (EnterAfterUnmatchedBraceHandler.isAfterUnmatchedLBrace(editor, tailOffset, getFileType(editor))) [ FD ]
Line_2 $$ public int processTail(final Editor editor, int tailOffset) -->Line_12 $$ if (EnterAfterUnmatchedBraceHandler.isAfterUnmatchedLBrace(editor, tailOffset, getFileType(editor))) [ CD ]
Line_3 $$ int startOffset = tailOffset-->Line_9 $$ tailOffset = insertChar(editor, startOffset, '[ FD ]
Line_6 $$ if (nextNonWs < seq.length() && seq.charAt(nextNonWs) == '-->Line_9 $$ tailOffset = insertChar(editor, startOffset, '[ CD ]
