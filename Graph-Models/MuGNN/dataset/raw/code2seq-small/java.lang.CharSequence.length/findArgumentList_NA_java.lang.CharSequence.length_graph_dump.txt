Line_14 $$ offset = offset1-->Line_26 $$ if (offset == range.getEndOffset() - 1) [ FD ]
Line_22 $$ while (true) -->Line_51 $$ final Set<? extends Class> set = findArgumentListHelper.getArgListStopSearchClasses()[ CD ]
Line_23 $$ if (findArgumentListHelper.getArgumentListClass().isInstance(parent)) -->Line_25 $$ if (!acceptRparenth) [ CD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_6 $$ if (offset >= chars.length())[ CD ]
Line_5 $$ CharSequence chars = file.getViewProvider().getContents()-->Line_8 $$ int offset1 = CharArrayUtil.shiftBackward(chars, offset, " \t\n\r")[ FD ]
Line_13 $$ if (offset1 != offset) -->Line_14 $$ offset = offset1[ CD ]
Line_39 $$ parent = parent.getParent()-->Line_27 $$ PsiElement[] children = parent.getChildren()[ FD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_12 $$ boolean acceptLparenth = false[ CD ]
Line_59 $$ for (Class c : (Set<Class>) findArgumentListHelper.getArgumentListAllowedParentClasses()) -->Line_60 $$ if (c.isInstance(listParent))[ FD ]
Line_23 $$ if (findArgumentListHelper.getArgumentListClass().isInstance(parent)) -->Line_43 $$ if (lbraceOffset >= 0 && range.getStartOffset() != lbraceOffset) [ CD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_58 $$ PsiElement listParent = parent.getParent()[ CD ]
Line_38 $$ if (offset == range.getStartOffset()) -->Line_39 $$ parent = parent.getParent()[ CD ]
Line_14 $$ offset = offset1-->Line_38 $$ if (offset == range.getStartOffset()) [ FD ]
Line_43 $$ if (lbraceOffset >= 0 && range.getStartOffset() != lbraceOffset) -->Line_44 $$ parent = parent.getParent()[ CD ]
Line_24 $$ TextRange range = parent.getTextRange()-->Line_38 $$ if (offset == range.getStartOffset()) [ FD ]
Line_39 $$ parent = parent.getParent()-->Line_23 $$ if (findArgumentListHelper.getArgumentListClass().isInstance(parent)) [ FD ]
Line_39 $$ parent = parent.getParent()-->Line_53 $$ if (aClass.isInstance(parent))[ FD ]
Line_21 $$ PsiElement parent = element.getParent()-->Line_56 $$ parent = parent.getParent()[ FD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_3 $$ if (file == null)[ FD ]
Line_7 $$ offset = chars.length() - 1-->Line_14 $$ offset = offset1[ FD ]
Line_44 $$ parent = parent.getParent()-->Line_24 $$ TextRange range = parent.getTextRange()[ FD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_23 $$ if (findArgumentListHelper.getArgumentListClass().isInstance(parent)) [ FD ]
Line_15 $$ acceptRparenth = false-->Line_25 $$ if (!acceptRparenth) [ FD ]
Line_11 $$ boolean acceptRparenth = true-->Line_15 $$ acceptRparenth = false[ FD ]
Line_56 $$ parent = parent.getParent()-->Line_39 $$ parent = parent.getParent()[ FD ]
Line_37 $$ if (!acceptLparenth) -->Line_38 $$ if (offset == range.getStartOffset()) [ CD ]
Line_12 $$ boolean acceptLparenth = false-->Line_16 $$ acceptLparenth = true[ FD ]
Line_56 $$ parent = parent.getParent()-->Line_23 $$ if (findArgumentListHelper.getArgumentListClass().isInstance(parent)) [ FD ]
Line_44 $$ parent = parent.getParent()-->Line_53 $$ if (aClass.isInstance(parent))[ FD ]
Line_14 $$ offset = offset1-->Line_18 $$ PsiElement element = file.findElementAt(offset)[ FD ]
Line_7 $$ offset = chars.length() - 1-->Line_38 $$ if (offset == range.getStartOffset()) [ FD ]
Line_44 $$ parent = parent.getParent()-->Line_32 $$ parent = parent.getParent()[ FD ]
Line_22 $$ while (true) -->Line_49 $$ if (parent instanceof PsiFile || parent == null)[ CD ]
Line_7 $$ offset = chars.length() - 1-->Line_18 $$ PsiElement element = file.findElementAt(offset)[ FD ]
Line_28 $$ if (children.length == 0)-->Line_29 $$ return null[ CD ]
Line_56 $$ parent = parent.getParent()-->Line_53 $$ if (aClass.isInstance(parent))[ FD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_18 $$ PsiElement element = file.findElementAt(offset)[ FD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_8 $$ int offset1 = CharArrayUtil.shiftBackward(chars, offset, " \t\n\r")[ FD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_26 $$ if (offset == range.getEndOffset() - 1) [ FD ]
Line_32 $$ parent = parent.getParent()-->Line_56 $$ parent = parent.getParent()[ FD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_11 $$ boolean acceptRparenth = true[ CD ]
Line_21 $$ PsiElement parent = element.getParent()-->Line_23 $$ if (findArgumentListHelper.getArgumentListClass().isInstance(parent)) [ FD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_38 $$ if (offset == range.getStartOffset()) [ FD ]
Line_7 $$ offset = chars.length() - 1-->Line_8 $$ int offset1 = CharArrayUtil.shiftBackward(chars, offset, " \t\n\r")[ FD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_3 $$ if (file == null)[ CD ]
Line_21 $$ PsiElement parent = element.getParent()-->Line_32 $$ parent = parent.getParent()[ FD ]
Line_32 $$ parent = parent.getParent()-->Line_44 $$ parent = parent.getParent()[ FD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_18 $$ PsiElement element = file.findElementAt(offset)[ CD ]
Line_56 $$ parent = parent.getParent()-->Line_32 $$ parent = parent.getParent()[ FD ]
Line_56 $$ parent = parent.getParent()-->Line_27 $$ PsiElement[] children = parent.getChildren()[ FD ]
Line_44 $$ parent = parent.getParent()-->Line_56 $$ parent = parent.getParent()[ FD ]
Line_44 $$ parent = parent.getParent()-->Line_39 $$ parent = parent.getParent()[ FD ]
Line_49 $$ if (parent instanceof PsiFile || parent == null)-->Line_50 $$ return null[ CD ]
Line_58 $$ PsiElement listParent = parent.getParent()-->Line_60 $$ if (c.isInstance(listParent))[ FD ]
Line_22 $$ while (true) -->Line_23 $$ if (findArgumentListHelper.getArgumentListClass().isInstance(parent)) [ CD ]
Line_11 $$ boolean acceptRparenth = true-->Line_25 $$ if (!acceptRparenth) [ FD ]
Line_60 $$ if (c.isInstance(listParent))-->Line_61 $$ return (E) parent[ CD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_14 $$ offset = offset1[ FD ]
Line_32 $$ parent = parent.getParent()-->Line_24 $$ TextRange range = parent.getTextRange()[ FD ]
Line_39 $$ parent = parent.getParent()-->Line_56 $$ parent = parent.getParent()[ FD ]
Line_24 $$ TextRange range = parent.getTextRange()-->Line_43 $$ if (lbraceOffset >= 0 && range.getStartOffset() != lbraceOffset) [ FD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_5 $$ CharSequence chars = file.getViewProvider().getContents()[ CD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_13 $$ if (offset1 != offset) [ FD ]
Line_26 $$ if (offset == range.getEndOffset() - 1) -->Line_30 $$ PsiElement last = children[children.length - 1][ CD ]
Line_7 $$ offset = chars.length() - 1-->Line_26 $$ if (offset == range.getEndOffset() - 1) [ FD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_63 $$ return null[ CD ]
Line_26 $$ if (offset == range.getEndOffset() - 1) -->Line_28 $$ if (children.length == 0)[ CD ]
Line_32 $$ parent = parent.getParent()-->Line_58 $$ PsiElement listParent = parent.getParent()[ FD ]
Line_44 $$ parent = parent.getParent()-->Line_27 $$ PsiElement[] children = parent.getChildren()[ FD ]
Line_26 $$ if (offset == range.getEndOffset() - 1) -->Line_27 $$ PsiElement[] children = parent.getChildren()[ CD ]
Line_30 $$ PsiElement last = children[children.length - 1]-->Line_31 $$ if (last.getNode().getElementType() == findArgumentListHelper.getActualParametersRBraceType()) [ FD ]
Line_21 $$ PsiElement parent = element.getParent()-->Line_53 $$ if (aClass.isInstance(parent))[ FD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_9 $$ if (offset1 < 0)[ CD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_7 $$ offset = chars.length() - 1[ FD ]
Line_5 $$ CharSequence chars = file.getViewProvider().getContents()-->Line_7 $$ offset = chars.length() - 1[ FD ]
Line_8 $$ int offset1 = CharArrayUtil.shiftBackward(chars, offset, " \t\n\r")-->Line_9 $$ if (offset1 < 0)[ FD ]
Line_25 $$ if (!acceptRparenth) -->Line_26 $$ if (offset == range.getEndOffset() - 1) [ CD ]
Line_21 $$ PsiElement parent = element.getParent()-->Line_27 $$ PsiElement[] children = parent.getChildren()[ FD ]
Line_32 $$ parent = parent.getParent()-->Line_23 $$ if (findArgumentListHelper.getArgumentListClass().isInstance(parent)) [ FD ]
Line_56 $$ parent = parent.getParent()-->Line_44 $$ parent = parent.getParent()[ FD ]
Line_56 $$ parent = parent.getParent()-->Line_24 $$ TextRange range = parent.getTextRange()[ FD ]
Line_23 $$ if (findArgumentListHelper.getArgumentListClass().isInstance(parent)) -->Line_24 $$ TextRange range = parent.getTextRange()[ CD ]
Line_6 $$ if (offset >= chars.length())-->Line_7 $$ offset = chars.length() - 1[ CD ]
Line_8 $$ int offset1 = CharArrayUtil.shiftBackward(chars, offset, " \t\n\r")-->Line_13 $$ if (offset1 != offset) [ FD ]
Line_21 $$ PsiElement parent = element.getParent()-->Line_44 $$ parent = parent.getParent()[ FD ]
Line_13 $$ if (offset1 != offset) -->Line_16 $$ acceptLparenth = true[ CD ]
Line_56 $$ parent = parent.getParent()-->Line_58 $$ PsiElement listParent = parent.getParent()[ FD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_31 $$ if (last.getNode().getElementType() == findArgumentListHelper.getActualParametersRBraceType()) [ FD ]
Line_39 $$ parent = parent.getParent()-->Line_24 $$ TextRange range = parent.getTextRange()[ FD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_51 $$ final Set<? extends Class> set = findArgumentListHelper.getArgListStopSearchClasses()[ FD ]
Line_32 $$ parent = parent.getParent()-->Line_53 $$ if (aClass.isInstance(parent))[ FD ]
Line_39 $$ parent = parent.getParent()-->Line_58 $$ PsiElement listParent = parent.getParent()[ FD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_22 $$ while (true) [ CD ]
Line_7 $$ offset = chars.length() - 1-->Line_13 $$ if (offset1 != offset) [ FD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_13 $$ if (offset1 != offset) [ CD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_8 $$ int offset1 = CharArrayUtil.shiftBackward(chars, offset, " \t\n\r")[ CD ]
Line_22 $$ while (true) -->Line_56 $$ parent = parent.getParent()[ CD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_59 $$ for (Class c : (Set<Class>) findArgumentListHelper.getArgumentListAllowedParentClasses()) [ FD ]
Line_32 $$ parent = parent.getParent()-->Line_39 $$ parent = parent.getParent()[ FD ]
Line_19 $$ if (element == null)-->Line_20 $$ return null[ CD ]
Line_39 $$ parent = parent.getParent()-->Line_32 $$ parent = parent.getParent()[ FD ]
Line_53 $$ if (aClass.isInstance(parent))-->Line_54 $$ return null[ CD ]
Line_18 $$ PsiElement element = file.findElementAt(offset)-->Line_19 $$ if (element == null)[ FD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_19 $$ if (element == null)[ CD ]
Line_5 $$ CharSequence chars = file.getViewProvider().getContents()-->Line_6 $$ if (offset >= chars.length())[ FD ]
Line_26 $$ if (offset == range.getEndOffset() - 1) -->Line_31 $$ if (last.getNode().getElementType() == findArgumentListHelper.getActualParametersRBraceType()) [ CD ]
Line_44 $$ parent = parent.getParent()-->Line_23 $$ if (findArgumentListHelper.getArgumentListClass().isInstance(parent)) [ FD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_6 $$ if (offset >= chars.length())[ FD ]
Line_21 $$ PsiElement parent = element.getParent()-->Line_24 $$ TextRange range = parent.getTextRange()[ FD ]
Line_13 $$ if (offset1 != offset) -->Line_15 $$ acceptRparenth = false[ CD ]
Line_32 $$ parent = parent.getParent()-->Line_27 $$ PsiElement[] children = parent.getChildren()[ FD ]
Line_23 $$ if (findArgumentListHelper.getArgumentListClass().isInstance(parent)) -->Line_37 $$ if (!acceptLparenth) [ CD ]
Line_21 $$ PsiElement parent = element.getParent()-->Line_58 $$ PsiElement listParent = parent.getParent()[ FD ]
Line_12 $$ boolean acceptLparenth = false-->Line_37 $$ if (!acceptLparenth) [ FD ]
Line_21 $$ PsiElement parent = element.getParent()-->Line_39 $$ parent = parent.getParent()[ FD ]
Line_31 $$ if (last.getNode().getElementType() == findArgumentListHelper.getActualParametersRBraceType()) -->Line_32 $$ parent = parent.getParent()[ CD ]
Line_8 $$ int offset1 = CharArrayUtil.shiftBackward(chars, offset, " \t\n\r")-->Line_14 $$ offset = offset1[ FD ]
Line_24 $$ TextRange range = parent.getTextRange()-->Line_26 $$ if (offset == range.getEndOffset() - 1) [ FD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_21 $$ PsiElement parent = element.getParent()[ CD ]
Line_3 $$ if (file == null)-->Line_4 $$ return null[ CD ]
Line_2 $$ public static <E extends PsiElement> E findArgumentList(PsiFile file, int offset, int lbraceOffset, @NotNull ParameterInfoHandlerWithTabActionSupport findArgumentListHelper) -->Line_5 $$ CharSequence chars = file.getViewProvider().getContents()[ FD ]
Line_39 $$ parent = parent.getParent()-->Line_44 $$ parent = parent.getParent()[ FD ]
Line_44 $$ parent = parent.getParent()-->Line_58 $$ PsiElement listParent = parent.getParent()[ FD ]
Line_16 $$ acceptLparenth = true-->Line_37 $$ if (!acceptLparenth) [ FD ]
Line_18 $$ PsiElement element = file.findElementAt(offset)-->Line_21 $$ PsiElement parent = element.getParent()[ FD ]
Line_9 $$ if (offset1 < 0)-->Line_10 $$ return null[ CD ]
Line_52 $$ for (Class aClass : set) -->Line_53 $$ if (aClass.isInstance(parent))[ FD ]
