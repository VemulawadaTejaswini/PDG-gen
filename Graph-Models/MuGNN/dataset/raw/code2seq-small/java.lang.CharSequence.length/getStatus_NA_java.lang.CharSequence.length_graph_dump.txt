Line_2 $$ String getStatus(CharSequence record) -->Line_15 $$ String status = "HSTR " + StreamUtil.getHost() + " " + numRec_ + ". pos=" + pos + " " + unqualSplit + " Processing record=" + recStr[ CD ]
Line_2 $$ String getStatus(CharSequence record) -->Line_9 $$ if (record.length() > statusMaxRecordChars_) [ FD ]
Line_8 $$ String recStr-->Line_10 $$ recStr = record.subSequence(0, statusMaxRecordChars_) + "..."[ FD ]
Line_2 $$ String getStatus(CharSequence record) -->Line_10 $$ recStr = record.subSequence(0, statusMaxRecordChars_) + "..."[ FD ]
Line_10 $$ recStr = record.subSequence(0, statusMaxRecordChars_) + "..."-->Line_12 $$ recStr = record.toString()[ FD ]
Line_2 $$ String getStatus(CharSequence record) -->Line_12 $$ recStr = record.toString()[ FD ]
Line_2 $$ String getStatus(CharSequence record) -->Line_8 $$ String recStr[ CD ]
Line_2 $$ String getStatus(CharSequence record) -->Line_14 $$ String unqualSplit = split_.getPath().getName() + ":" + split_.getStart() + "+" + split_.getLength()[ CD ]
Line_2 $$ String getStatus(CharSequence record) -->Line_17 $$ return status[ CD ]
Line_2 $$ String getStatus(CharSequence record) -->Line_3 $$ long pos = -1[ CD ]
Line_2 $$ String getStatus(CharSequence record) -->Line_16 $$ status += " " + splitName_[ CD ]
Line_3 $$ long pos = -1-->Line_5 $$ pos = getPos()[ FD ]
Line_15 $$ String status = "HSTR " + StreamUtil.getHost() + " " + numRec_ + ". pos=" + pos + " " + unqualSplit + " Processing record=" + recStr-->Line_16 $$ status += " " + splitName_[ FD ]
Line_9 $$ if (record.length() > statusMaxRecordChars_) -->Line_10 $$ recStr = record.subSequence(0, statusMaxRecordChars_) + "..."[ CD ]
Line_8 $$ String recStr-->Line_12 $$ recStr = record.toString()[ FD ]
Line_2 $$ String getStatus(CharSequence record) -->Line_9 $$ if (record.length() > statusMaxRecordChars_) [ CD ]
Line_9 $$ if (record.length() > statusMaxRecordChars_) -->Line_12 $$ recStr = record.toString()[ CD ]
