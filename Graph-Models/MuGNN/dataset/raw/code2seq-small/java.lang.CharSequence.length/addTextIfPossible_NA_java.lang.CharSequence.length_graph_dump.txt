Line_2 $$ private void addTextIfPossible(int endOffset) -->Line_3 $$ if (endOffset <= myStartOffset) [ CD ]
Line_2 $$ private void addTextIfPossible(int endOffset) -->Line_3 $$ if (endOffset <= myStartOffset) [ FD ]
Line_6 $$ for (int i = myStartOffset; i < endOffset; i++) -->Line_7 $$ char c = myText.charAt(i)[ CD ]
Line_10 $$ if (i + 1 < myText.length() && myText.charAt(i + 1) == '\n') -->Line_15 $$ i++[ CD ]
Line_34 $$ if (myStartOffset < endOffset) -->Line_35 $$ builder.addText(myStartOffset + myOffsetShift, endOffset + myOffsetShift)[ CD ]
Line_3 $$ if (endOffset <= myStartOffset) -->Line_4 $$ return[ CD ]
Line_6 $$ for (int i = myStartOffset; i < endOffset; i++) -->Line_15 $$ i++[ FD ]
Line_2 $$ private void addTextIfPossible(int endOffset) -->Line_34 $$ if (myStartOffset < endOffset) [ FD ]
Line_2 $$ private void addTextIfPossible(int endOffset) -->Line_34 $$ if (myStartOffset < endOffset) [ CD ]
Line_2 $$ private void addTextIfPossible(int endOffset) -->Line_6 $$ for (int i = myStartOffset; i < endOffset; i++) [ CD ]
Line_6 $$ for (int i = myStartOffset; i < endOffset; i++) -->Line_7 $$ char c = myText.charAt(i)[ FD ]
Line_10 $$ if (i + 1 < myText.length() && myText.charAt(i + 1) == '\n') -->Line_12 $$ builder.addText(myStartOffset + myOffsetShift, i + myOffsetShift + 1)[ CD ]
Line_2 $$ private void addTextIfPossible(int endOffset) -->Line_6 $$ for (int i = myStartOffset; i < endOffset; i++) [ FD ]
