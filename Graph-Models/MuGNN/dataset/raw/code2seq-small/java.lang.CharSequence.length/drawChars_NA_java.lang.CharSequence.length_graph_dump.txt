Line_5 $$ Color oldColor = g.getColor()-->Line_15 $$ g.setColor(oldColor)[ FD ]
Line_2 $$ private void drawChars(Graphics g, CharSequence data, int x, int y) -->Line_15 $$ g.setColor(oldColor)[ FD ]
Line_4 $$ if (mySettings.isWhitespacesShown()) -->Line_7 $$ final FontMetrics metrics = g.getFontMetrics()[ CD ]
Line_9 $$ for (int i = 0; i < data.length(); i++) -->Line_10 $$ if (data.charAt(i) == ' ') [ FD ]
Line_4 $$ if (mySettings.isWhitespacesShown()) -->Line_15 $$ g.setColor(oldColor)[ CD ]
Line_2 $$ private void drawChars(Graphics g, CharSequence data, int x, int y) -->Line_3 $$ g.drawString(data.toString(), x, y)[ FD ]
Line_4 $$ if (mySettings.isWhitespacesShown()) -->Line_8 $$ int halfSpaceWidth = metrics.charWidth(' ') / 2[ CD ]
Line_9 $$ for (int i = 0; i < data.length(); i++) -->Line_13 $$ x += metrics.charWidth(data.charAt(i))[ FD ]
Line_2 $$ private void drawChars(Graphics g, CharSequence data, int x, int y) -->Line_10 $$ if (data.charAt(i) == ' ') [ FD ]
Line_2 $$ private void drawChars(Graphics g, CharSequence data, int x, int y) -->Line_11 $$ g.fillRect(x + halfSpaceWidth, y, 1, 1)[ FD ]
Line_2 $$ private void drawChars(Graphics g, CharSequence data, int x, int y) -->Line_6 $$ g.setColor(myScheme.getColor(EditorColors.WHITESPACES_COLOR))[ FD ]
Line_4 $$ if (mySettings.isWhitespacesShown()) -->Line_9 $$ for (int i = 0; i < data.length(); i++) [ CD ]
Line_2 $$ private void drawChars(Graphics g, CharSequence data, int x, int y) -->Line_7 $$ final FontMetrics metrics = g.getFontMetrics()[ FD ]
Line_10 $$ if (data.charAt(i) == ' ') -->Line_11 $$ g.fillRect(x + halfSpaceWidth, y, 1, 1)[ CD ]
Line_2 $$ private void drawChars(Graphics g, CharSequence data, int x, int y) -->Line_13 $$ x += metrics.charWidth(data.charAt(i))[ FD ]
Line_9 $$ for (int i = 0; i < data.length(); i++) -->Line_10 $$ if (data.charAt(i) == ' ') [ CD ]
Line_4 $$ if (mySettings.isWhitespacesShown()) -->Line_6 $$ g.setColor(myScheme.getColor(EditorColors.WHITESPACES_COLOR))[ CD ]
Line_2 $$ private void drawChars(Graphics g, CharSequence data, int x, int y) -->Line_9 $$ for (int i = 0; i < data.length(); i++) [ FD ]
Line_2 $$ private void drawChars(Graphics g, CharSequence data, int x, int y) -->Line_5 $$ Color oldColor = g.getColor()[ FD ]
Line_9 $$ for (int i = 0; i < data.length(); i++) -->Line_13 $$ x += metrics.charWidth(data.charAt(i))[ CD ]
Line_2 $$ private void drawChars(Graphics g, CharSequence data, int x, int y) -->Line_4 $$ if (mySettings.isWhitespacesShown()) [ CD ]
Line_2 $$ private void drawChars(Graphics g, CharSequence data, int x, int y) -->Line_3 $$ g.drawString(data.toString(), x, y)[ CD ]
Line_7 $$ final FontMetrics metrics = g.getFontMetrics()-->Line_8 $$ int halfSpaceWidth = metrics.charWidth(' ') / 2[ FD ]
Line_7 $$ final FontMetrics metrics = g.getFontMetrics()-->Line_13 $$ x += metrics.charWidth(data.charAt(i))[ FD ]
Line_4 $$ if (mySettings.isWhitespacesShown()) -->Line_5 $$ Color oldColor = g.getColor()[ CD ]
