Line_2 $$ private void drawSoftWrap(@NotNull Graphics g, @NotNull SoftWrap softWrap, @NotNull Point position, @JdkConstants.FontStyle int fontType, @Nullable Color backColor, boolean drawCustomBackgroundAtSoftWrapVirtualSpace, @NotNull Color defaultBackground, @NotNull Rectangle clip, @NotNull boolean[] caretRowPainted) -->Line_17 $$ position.y += getLineHeight()[ CD ]
Line_2 $$ private void drawSoftWrap(@NotNull Graphics g, @NotNull SoftWrap softWrap, @NotNull Point position, @JdkConstants.FontStyle int fontType, @Nullable Color backColor, boolean drawCustomBackgroundAtSoftWrapVirtualSpace, @NotNull Color defaultBackground, @NotNull Rectangle clip, @NotNull boolean[] caretRowPainted) -->Line_18 $$ if (drawCustomBackgroundAtSoftWrapVirtualSpace && backColor != null) [ FD ]
Line_5 $$ int afterSoftWrapWidth = clip.x + clip.width - position.x-->Line_10 $$ drawBackground(g, caretRowColor, afterSoftWrapWidth, position, defaultBackground, clip)[ FD ]
Line_2 $$ private void drawSoftWrap(@NotNull Graphics g, @NotNull SoftWrap softWrap, @NotNull Point position, @JdkConstants.FontStyle int fontType, @Nullable Color backColor, boolean drawCustomBackgroundAtSoftWrapVirtualSpace, @NotNull Color defaultBackground, @NotNull Rectangle clip, @NotNull boolean[] caretRowPainted) -->Line_7 $$ drawBackground(g, backColor, afterSoftWrapWidth, position, defaultBackground, clip)[ FD ]
Line_2 $$ private void drawSoftWrap(@NotNull Graphics g, @NotNull SoftWrap softWrap, @NotNull Point position, @JdkConstants.FontStyle int fontType, @Nullable Color backColor, boolean drawCustomBackgroundAtSoftWrapVirtualSpace, @NotNull Color defaultBackground, @NotNull Rectangle clip, @NotNull boolean[] caretRowPainted) -->Line_3 $$ CharSequence softWrapText = softWrap.getText()[ FD ]
Line_2 $$ private void drawSoftWrap(@NotNull Graphics g, @NotNull SoftWrap softWrap, @NotNull Point position, @JdkConstants.FontStyle int fontType, @Nullable Color backColor, boolean drawCustomBackgroundAtSoftWrapVirtualSpace, @NotNull Color defaultBackground, @NotNull Rectangle clip, @NotNull boolean[] caretRowPainted) -->Line_25 $$ paintSelectionOnSecondSoftWrapLineIfNecessary(g, position, clip, defaultBackground, fontType, softWrap)[ FD ]
Line_2 $$ private void drawSoftWrap(@NotNull Graphics g, @NotNull SoftWrap softWrap, @NotNull Point position, @JdkConstants.FontStyle int fontType, @Nullable Color backColor, boolean drawCustomBackgroundAtSoftWrapVirtualSpace, @NotNull Color defaultBackground, @NotNull Rectangle clip, @NotNull boolean[] caretRowPainted) -->Line_25 $$ paintSelectionOnSecondSoftWrapLineIfNecessary(g, position, clip, defaultBackground, fontType, softWrap)[ CD ]
Line_2 $$ private void drawSoftWrap(@NotNull Graphics g, @NotNull SoftWrap softWrap, @NotNull Point position, @JdkConstants.FontStyle int fontType, @Nullable Color backColor, boolean drawCustomBackgroundAtSoftWrapVirtualSpace, @NotNull Color defaultBackground, @NotNull Rectangle clip, @NotNull boolean[] caretRowPainted) -->Line_18 $$ if (drawCustomBackgroundAtSoftWrapVirtualSpace && backColor != null) [ CD ]
Line_3 $$ CharSequence softWrapText = softWrap.getText()-->Line_15 $$ int width = getTextSegmentWidth(softWrapText, i, softWrapText.length(), 0, fontType, clip) + getSoftWrapModel().getMinDrawingWidthInPixels(SoftWrapDrawingType.AFTER_SOFT_WRAP)[ FD ]
Line_2 $$ private void drawSoftWrap(@NotNull Graphics g, @NotNull SoftWrap softWrap, @NotNull Point position, @JdkConstants.FontStyle int fontType, @Nullable Color backColor, boolean drawCustomBackgroundAtSoftWrapVirtualSpace, @NotNull Color defaultBackground, @NotNull Rectangle clip, @NotNull boolean[] caretRowPainted) -->Line_26 $$ position.x = width[ CD ]
Line_2 $$ private void drawSoftWrap(@NotNull Graphics g, @NotNull SoftWrap softWrap, @NotNull Point position, @JdkConstants.FontStyle int fontType, @Nullable Color backColor, boolean drawCustomBackgroundAtSoftWrapVirtualSpace, @NotNull Color defaultBackground, @NotNull Rectangle clip, @NotNull boolean[] caretRowPainted) -->Line_15 $$ int width = getTextSegmentWidth(softWrapText, i, softWrapText.length(), 0, fontType, clip) + getSoftWrapModel().getMinDrawingWidthInPixels(SoftWrapDrawingType.AFTER_SOFT_WRAP)[ FD ]
Line_2 $$ private void drawSoftWrap(@NotNull Graphics g, @NotNull SoftWrap softWrap, @NotNull Point position, @JdkConstants.FontStyle int fontType, @Nullable Color backColor, boolean drawCustomBackgroundAtSoftWrapVirtualSpace, @NotNull Color defaultBackground, @NotNull Rectangle clip, @NotNull boolean[] caretRowPainted) -->Line_5 $$ int afterSoftWrapWidth = clip.x + clip.width - position.x[ CD ]
Line_4 $$ int activeRowY = getCaretModel().getVisualPosition().line * getLineHeight()-->Line_8 $$ if (position.y == activeRowY) [ FD ]
Line_2 $$ private void drawSoftWrap(@NotNull Graphics g, @NotNull SoftWrap softWrap, @NotNull Point position, @JdkConstants.FontStyle int fontType, @Nullable Color backColor, boolean drawCustomBackgroundAtSoftWrapVirtualSpace, @NotNull Color defaultBackground, @NotNull Rectangle clip, @NotNull boolean[] caretRowPainted) -->Line_6 $$ if (drawCustomBackgroundAtSoftWrapVirtualSpace && backColor != null) [ CD ]
Line_2 $$ private void drawSoftWrap(@NotNull Graphics g, @NotNull SoftWrap softWrap, @NotNull Point position, @JdkConstants.FontStyle int fontType, @Nullable Color backColor, boolean drawCustomBackgroundAtSoftWrapVirtualSpace, @NotNull Color defaultBackground, @NotNull Rectangle clip, @NotNull boolean[] caretRowPainted) -->Line_6 $$ if (drawCustomBackgroundAtSoftWrapVirtualSpace && backColor != null) [ FD ]
Line_18 $$ if (drawCustomBackgroundAtSoftWrapVirtualSpace && backColor != null) -->Line_19 $$ drawBackground(g, backColor, width, position, defaultBackground, clip)[ CD ]
Line_6 $$ if (drawCustomBackgroundAtSoftWrapVirtualSpace && backColor != null) -->Line_7 $$ drawBackground(g, backColor, afterSoftWrapWidth, position, defaultBackground, clip)[ CD ]
Line_8 $$ if (position.y == activeRowY) -->Line_11 $$ caretRowPainted[0] = true[ CD ]
Line_3 $$ CharSequence softWrapText = softWrap.getText()-->Line_14 $$ int i = CharArrayUtil.lastIndexOf(softWrapText, "\n", softWrapText.length()) + 1[ FD ]
Line_9 $$ Color caretRowColor = mySettings.isCaretRowShown() ? getColorsScheme().getColor(EditorColors.CARET_ROW_COLOR) : null-->Line_22 $$ drawBackground(g, caretRowColor, width, position, defaultBackground, clip)[ FD ]
Line_4 $$ int activeRowY = getCaretModel().getVisualPosition().line * getLineHeight()-->Line_20 $$ if (position.y == activeRowY) [ FD ]
Line_20 $$ if (position.y == activeRowY) -->Line_22 $$ drawBackground(g, caretRowColor, width, position, defaultBackground, clip)[ CD ]
Line_15 $$ int width = getTextSegmentWidth(softWrapText, i, softWrapText.length(), 0, fontType, clip) + getSoftWrapModel().getMinDrawingWidthInPixels(SoftWrapDrawingType.AFTER_SOFT_WRAP)-->Line_22 $$ drawBackground(g, caretRowColor, width, position, defaultBackground, clip)[ FD ]
Line_2 $$ private void drawSoftWrap(@NotNull Graphics g, @NotNull SoftWrap softWrap, @NotNull Point position, @JdkConstants.FontStyle int fontType, @Nullable Color backColor, boolean drawCustomBackgroundAtSoftWrapVirtualSpace, @NotNull Color defaultBackground, @NotNull Rectangle clip, @NotNull boolean[] caretRowPainted) -->Line_22 $$ drawBackground(g, caretRowColor, width, position, defaultBackground, clip)[ FD ]
Line_2 $$ private void drawSoftWrap(@NotNull Graphics g, @NotNull SoftWrap softWrap, @NotNull Point position, @JdkConstants.FontStyle int fontType, @Nullable Color backColor, boolean drawCustomBackgroundAtSoftWrapVirtualSpace, @NotNull Color defaultBackground, @NotNull Rectangle clip, @NotNull boolean[] caretRowPainted) -->Line_16 $$ position.x = 0[ CD ]
Line_8 $$ if (position.y == activeRowY) -->Line_9 $$ Color caretRowColor = mySettings.isCaretRowShown() ? getColorsScheme().getColor(EditorColors.CARET_ROW_COLOR) : null[ CD ]
Line_15 $$ int width = getTextSegmentWidth(softWrapText, i, softWrapText.length(), 0, fontType, clip) + getSoftWrapModel().getMinDrawingWidthInPixels(SoftWrapDrawingType.AFTER_SOFT_WRAP)-->Line_26 $$ position.x = width[ FD ]
Line_2 $$ private void drawSoftWrap(@NotNull Graphics g, @NotNull SoftWrap softWrap, @NotNull Point position, @JdkConstants.FontStyle int fontType, @Nullable Color backColor, boolean drawCustomBackgroundAtSoftWrapVirtualSpace, @NotNull Color defaultBackground, @NotNull Rectangle clip, @NotNull boolean[] caretRowPainted) -->Line_15 $$ int width = getTextSegmentWidth(softWrapText, i, softWrapText.length(), 0, fontType, clip) + getSoftWrapModel().getMinDrawingWidthInPixels(SoftWrapDrawingType.AFTER_SOFT_WRAP)[ CD ]
Line_2 $$ private void drawSoftWrap(@NotNull Graphics g, @NotNull SoftWrap softWrap, @NotNull Point position, @JdkConstants.FontStyle int fontType, @Nullable Color backColor, boolean drawCustomBackgroundAtSoftWrapVirtualSpace, @NotNull Color defaultBackground, @NotNull Rectangle clip, @NotNull boolean[] caretRowPainted) -->Line_10 $$ drawBackground(g, caretRowColor, afterSoftWrapWidth, position, defaultBackground, clip)[ FD ]
Line_18 $$ if (drawCustomBackgroundAtSoftWrapVirtualSpace && backColor != null) -->Line_20 $$ if (position.y == activeRowY) [ CD ]
Line_2 $$ private void drawSoftWrap(@NotNull Graphics g, @NotNull SoftWrap softWrap, @NotNull Point position, @JdkConstants.FontStyle int fontType, @Nullable Color backColor, boolean drawCustomBackgroundAtSoftWrapVirtualSpace, @NotNull Color defaultBackground, @NotNull Rectangle clip, @NotNull boolean[] caretRowPainted) -->Line_14 $$ int i = CharArrayUtil.lastIndexOf(softWrapText, "\n", softWrapText.length()) + 1[ CD ]
Line_5 $$ int afterSoftWrapWidth = clip.x + clip.width - position.x-->Line_7 $$ drawBackground(g, backColor, afterSoftWrapWidth, position, defaultBackground, clip)[ FD ]
Line_2 $$ private void drawSoftWrap(@NotNull Graphics g, @NotNull SoftWrap softWrap, @NotNull Point position, @JdkConstants.FontStyle int fontType, @Nullable Color backColor, boolean drawCustomBackgroundAtSoftWrapVirtualSpace, @NotNull Color defaultBackground, @NotNull Rectangle clip, @NotNull boolean[] caretRowPainted) -->Line_13 $$ paintSelectionOnFirstSoftWrapLineIfNecessary(g, position, clip, defaultBackground, fontType)[ CD ]
Line_9 $$ Color caretRowColor = mySettings.isCaretRowShown() ? getColorsScheme().getColor(EditorColors.CARET_ROW_COLOR) : null-->Line_10 $$ drawBackground(g, caretRowColor, afterSoftWrapWidth, position, defaultBackground, clip)[ FD ]
Line_2 $$ private void drawSoftWrap(@NotNull Graphics g, @NotNull SoftWrap softWrap, @NotNull Point position, @JdkConstants.FontStyle int fontType, @Nullable Color backColor, boolean drawCustomBackgroundAtSoftWrapVirtualSpace, @NotNull Color defaultBackground, @NotNull Rectangle clip, @NotNull boolean[] caretRowPainted) -->Line_3 $$ CharSequence softWrapText = softWrap.getText()[ CD ]
Line_8 $$ if (position.y == activeRowY) -->Line_10 $$ drawBackground(g, caretRowColor, afterSoftWrapWidth, position, defaultBackground, clip)[ CD ]
Line_6 $$ if (drawCustomBackgroundAtSoftWrapVirtualSpace && backColor != null) -->Line_8 $$ if (position.y == activeRowY) [ CD ]
Line_2 $$ private void drawSoftWrap(@NotNull Graphics g, @NotNull SoftWrap softWrap, @NotNull Point position, @JdkConstants.FontStyle int fontType, @Nullable Color backColor, boolean drawCustomBackgroundAtSoftWrapVirtualSpace, @NotNull Color defaultBackground, @NotNull Rectangle clip, @NotNull boolean[] caretRowPainted) -->Line_4 $$ int activeRowY = getCaretModel().getVisualPosition().line * getLineHeight()[ CD ]
Line_2 $$ private void drawSoftWrap(@NotNull Graphics g, @NotNull SoftWrap softWrap, @NotNull Point position, @JdkConstants.FontStyle int fontType, @Nullable Color backColor, boolean drawCustomBackgroundAtSoftWrapVirtualSpace, @NotNull Color defaultBackground, @NotNull Rectangle clip, @NotNull boolean[] caretRowPainted) -->Line_13 $$ paintSelectionOnFirstSoftWrapLineIfNecessary(g, position, clip, defaultBackground, fontType)[ FD ]
Line_14 $$ int i = CharArrayUtil.lastIndexOf(softWrapText, "\n", softWrapText.length()) + 1-->Line_15 $$ int width = getTextSegmentWidth(softWrapText, i, softWrapText.length(), 0, fontType, clip) + getSoftWrapModel().getMinDrawingWidthInPixels(SoftWrapDrawingType.AFTER_SOFT_WRAP)[ FD ]
Line_2 $$ private void drawSoftWrap(@NotNull Graphics g, @NotNull SoftWrap softWrap, @NotNull Point position, @JdkConstants.FontStyle int fontType, @Nullable Color backColor, boolean drawCustomBackgroundAtSoftWrapVirtualSpace, @NotNull Color defaultBackground, @NotNull Rectangle clip, @NotNull boolean[] caretRowPainted) -->Line_24 $$ position.x = 0[ CD ]
Line_15 $$ int width = getTextSegmentWidth(softWrapText, i, softWrapText.length(), 0, fontType, clip) + getSoftWrapModel().getMinDrawingWidthInPixels(SoftWrapDrawingType.AFTER_SOFT_WRAP)-->Line_19 $$ drawBackground(g, backColor, width, position, defaultBackground, clip)[ FD ]
Line_2 $$ private void drawSoftWrap(@NotNull Graphics g, @NotNull SoftWrap softWrap, @NotNull Point position, @JdkConstants.FontStyle int fontType, @Nullable Color backColor, boolean drawCustomBackgroundAtSoftWrapVirtualSpace, @NotNull Color defaultBackground, @NotNull Rectangle clip, @NotNull boolean[] caretRowPainted) -->Line_19 $$ drawBackground(g, backColor, width, position, defaultBackground, clip)[ FD ]
