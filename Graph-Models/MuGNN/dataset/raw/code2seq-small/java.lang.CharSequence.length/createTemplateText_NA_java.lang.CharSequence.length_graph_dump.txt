Line_6 $$ if (lexer.getTokenType() == myTemplateElementType) -->Line_7 $$ appendCurrentTemplateToken(result, buf, lexer)[ CD ]
Line_3 $$ StringBuilder result = new StringBuilder(buf.length())-->Line_7 $$ appendCurrentTemplateToken(result, buf, lexer)[ FD ]
Line_2 $$ protected CharSequence createTemplateText(CharSequence buf, Lexer lexer) -->Line_4 $$ lexer.start(buf)[ FD ]
Line_2 $$ protected CharSequence createTemplateText(CharSequence buf, Lexer lexer) -->Line_5 $$ while (lexer.getTokenType() != null) [ FD ]
Line_2 $$ protected CharSequence createTemplateText(CharSequence buf, Lexer lexer) -->Line_3 $$ StringBuilder result = new StringBuilder(buf.length())[ FD ]
Line_2 $$ protected CharSequence createTemplateText(CharSequence buf, Lexer lexer) -->Line_7 $$ appendCurrentTemplateToken(result, buf, lexer)[ FD ]
Line_5 $$ while (lexer.getTokenType() != null) -->Line_6 $$ if (lexer.getTokenType() == myTemplateElementType) [ CD ]
Line_2 $$ protected CharSequence createTemplateText(CharSequence buf, Lexer lexer) -->Line_3 $$ StringBuilder result = new StringBuilder(buf.length())[ CD ]
Line_2 $$ protected CharSequence createTemplateText(CharSequence buf, Lexer lexer) -->Line_9 $$ lexer.advance()[ FD ]
Line_5 $$ while (lexer.getTokenType() != null) -->Line_9 $$ lexer.advance()[ CD ]
Line_2 $$ protected CharSequence createTemplateText(CharSequence buf, Lexer lexer) -->Line_5 $$ while (lexer.getTokenType() != null) [ CD ]
Line_2 $$ protected CharSequence createTemplateText(CharSequence buf, Lexer lexer) -->Line_4 $$ lexer.start(buf)[ CD ]
Line_2 $$ protected CharSequence createTemplateText(CharSequence buf, Lexer lexer) -->Line_6 $$ if (lexer.getTokenType() == myTemplateElementType) [ FD ]
Line_2 $$ protected CharSequence createTemplateText(CharSequence buf, Lexer lexer) -->Line_11 $$ return result[ CD ]
