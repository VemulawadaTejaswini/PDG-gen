Line_13 $$ if (element instanceof GrMethod) -->Line_17 $$ TextRange textRange = element.getTextRange()[ CD ]
Line_19 $$ int end = Math.min(documentChars.length(), textRange.getEndOffset())-->Line_20 $$ int crlf = StringUtil.getLineBreakCount(documentChars.subSequence(start, end))[ FD ]
Line_5 $$ if (variables.length == 1 && variables[0] instanceof GrField && variables[0].getInitializerGroovy() instanceof GrClosableBlock) -->Line_6 $$ return 2[ CD ]
Line_3 $$ if (element instanceof GrVariableDeclarationImpl) -->Line_4 $$ GrVariable[] variables = ((GrVariableDeclarationImpl) element).getVariables()[ CD ]
Line_17 $$ TextRange textRange = element.getTextRange()-->Line_18 $$ int start = textRange.getStartOffset()[ FD ]
Line_2 $$ private static int getGroovyCategory(@NotNull PsiElement element, @NotNull CharSequence documentChars) -->Line_17 $$ TextRange textRange = element.getTextRange()[ FD ]
Line_14 $$ if (((GrMethod) element).hasModifierProperty(PsiModifier.ABSTRACT) && !(((GrMethod) element).getBlock() != null && GrTraitUtil.isTrait(((GrMethod) element).getContainingClass()))) -->Line_15 $$ return 1[ CD ]
Line_2 $$ private static int getGroovyCategory(@NotNull PsiElement element, @NotNull CharSequence documentChars) -->Line_23 $$ return 0[ CD ]
Line_3 $$ if (element instanceof GrVariableDeclarationImpl) -->Line_5 $$ if (variables.length == 1 && variables[0] instanceof GrField && variables[0].getInitializerGroovy() instanceof GrClosableBlock) [ CD ]
Line_13 $$ if (element instanceof GrMethod) -->Line_14 $$ if (((GrMethod) element).hasModifierProperty(PsiModifier.ABSTRACT) && !(((GrMethod) element).getBlock() != null && GrTraitUtil.isTrait(((GrMethod) element).getContainingClass()))) [ CD ]
Line_2 $$ private static int getGroovyCategory(@NotNull PsiElement element, @NotNull CharSequence documentChars) -->Line_11 $$ if (element instanceof GrTypeDefinition || element instanceof GrClassInitializer)[ CD ]
Line_9 $$ if (element instanceof GrField || element instanceof GrTypeParameter)-->Line_10 $$ return 1[ CD ]
Line_2 $$ private static int getGroovyCategory(@NotNull PsiElement element, @NotNull CharSequence documentChars) -->Line_20 $$ int crlf = StringUtil.getLineBreakCount(documentChars.subSequence(start, end))[ FD ]
Line_2 $$ private static int getGroovyCategory(@NotNull PsiElement element, @NotNull CharSequence documentChars) -->Line_19 $$ int end = Math.min(documentChars.length(), textRange.getEndOffset())[ FD ]
Line_17 $$ TextRange textRange = element.getTextRange()-->Line_19 $$ int end = Math.min(documentChars.length(), textRange.getEndOffset())[ FD ]
Line_2 $$ private static int getGroovyCategory(@NotNull PsiElement element, @NotNull CharSequence documentChars) -->Line_3 $$ if (element instanceof GrVariableDeclarationImpl) [ CD ]
Line_13 $$ if (element instanceof GrMethod) -->Line_21 $$ return crlf == 0 ? 1 : 2[ CD ]
Line_2 $$ private static int getGroovyCategory(@NotNull PsiElement element, @NotNull CharSequence documentChars) -->Line_3 $$ if (element instanceof GrVariableDeclarationImpl) [ FD ]
Line_2 $$ private static int getGroovyCategory(@NotNull PsiElement element, @NotNull CharSequence documentChars) -->Line_13 $$ if (element instanceof GrMethod) [ FD ]
Line_2 $$ private static int getGroovyCategory(@NotNull PsiElement element, @NotNull CharSequence documentChars) -->Line_13 $$ if (element instanceof GrMethod) [ CD ]
Line_11 $$ if (element instanceof GrTypeDefinition || element instanceof GrClassInitializer)-->Line_12 $$ return 2[ CD ]
Line_18 $$ int start = textRange.getStartOffset()-->Line_20 $$ int crlf = StringUtil.getLineBreakCount(documentChars.subSequence(start, end))[ FD ]
Line_13 $$ if (element instanceof GrMethod) -->Line_20 $$ int crlf = StringUtil.getLineBreakCount(documentChars.subSequence(start, end))[ CD ]
Line_2 $$ private static int getGroovyCategory(@NotNull PsiElement element, @NotNull CharSequence documentChars) -->Line_9 $$ if (element instanceof GrField || element instanceof GrTypeParameter)[ CD ]
Line_13 $$ if (element instanceof GrMethod) -->Line_18 $$ int start = textRange.getStartOffset()[ CD ]
Line_13 $$ if (element instanceof GrMethod) -->Line_19 $$ int end = Math.min(documentChars.length(), textRange.getEndOffset())[ CD ]
