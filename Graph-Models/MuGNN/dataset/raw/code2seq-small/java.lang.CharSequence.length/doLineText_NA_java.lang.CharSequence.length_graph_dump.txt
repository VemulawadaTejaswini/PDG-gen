Line_6 $$ container.redraw(this, new Action<Ansi>() -->Line_8 $$ ColorMap.Color color = colorMap.getColourFor(getStyle())[ CD ]
Line_6 $$ container.redraw(this, new Action<Ansi>() -->Line_9 $$ color.on(ansi)[ CD ]
Line_6 $$ container.redraw(this, new Action<Ansi>() -->Line_9 $$ color.on(ansi)[ FD ]
Line_6 $$ container.redraw(this, new Action<Ansi>() -->Line_17 $$ color.off(ansi)[ FD ]
Line_2 $$ protected void doLineText(final CharSequence text, final boolean terminatesLine) -->Line_3 $$ if (text.length() == 0) [ FD ]
Line_8 $$ ColorMap.Color color = colorMap.getColourFor(getStyle())-->Line_17 $$ color.off(ansi)[ FD ]
Line_6 $$ container.redraw(this, new Action<Ansi>() -->Line_17 $$ color.off(ansi)[ CD ]
Line_3 $$ if (text.length() == 0) -->Line_4 $$ return[ CD ]
Line_10 $$ if (terminatesLine) -->Line_14 $$ width += text.length()[ CD ]
Line_6 $$ container.redraw(this, new Action<Ansi>() -->Line_16 $$ ansi.a(text.toString())[ FD ]
Line_2 $$ protected void doLineText(final CharSequence text, final boolean terminatesLine) -->Line_14 $$ width += text.length()[ FD ]
Line_2 $$ protected void doLineText(final CharSequence text, final boolean terminatesLine) -->Line_6 $$ container.redraw(this, new Action<Ansi>() [ CD ]
Line_6 $$ container.redraw(this, new Action<Ansi>() -->Line_16 $$ ansi.a(text.toString())[ CD ]
Line_6 $$ container.redraw(this, new Action<Ansi>() -->Line_10 $$ if (terminatesLine) [ CD ]
Line_8 $$ ColorMap.Color color = colorMap.getColourFor(getStyle())-->Line_9 $$ color.on(ansi)[ FD ]
Line_2 $$ protected void doLineText(final CharSequence text, final boolean terminatesLine) -->Line_16 $$ ansi.a(text.toString())[ FD ]
Line_2 $$ protected void doLineText(final CharSequence text, final boolean terminatesLine) -->Line_3 $$ if (text.length() == 0) [ CD ]
