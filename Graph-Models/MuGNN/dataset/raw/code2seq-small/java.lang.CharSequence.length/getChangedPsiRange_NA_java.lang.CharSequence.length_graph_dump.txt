Line_2 $$ public static TextRange getChangedPsiRange(@NotNull PsiFile file, @NotNull FileElement treeElement, @NotNull CharSequence newDocumentText) -->Line_4 $$ if (!file.getViewProvider().supportsIncrementalReparse(file.getLanguage())) [ CD ]
Line_2 $$ public static TextRange getChangedPsiRange(@NotNull PsiFile file, @NotNull FileElement treeElement, @NotNull CharSequence newDocumentText) -->Line_11 $$ int commonSuffixLength = Math.min(getMatchingLength(treeElement, newDocumentText, false), psiLength - commonPrefixLength)[ CD ]
Line_4 $$ if (!file.getViewProvider().supportsIncrementalReparse(file.getLanguage())) -->Line_5 $$ return new TextRange(0, psiLength)[ CD ]
Line_2 $$ public static TextRange getChangedPsiRange(@NotNull PsiFile file, @NotNull FileElement treeElement, @NotNull CharSequence newDocumentText) -->Line_3 $$ int psiLength = treeElement.getTextLength()[ CD ]
Line_2 $$ public static TextRange getChangedPsiRange(@NotNull PsiFile file, @NotNull FileElement treeElement, @NotNull CharSequence newDocumentText) -->Line_7 $$ int commonPrefixLength = getMatchingLength(treeElement, newDocumentText, true)[ CD ]
Line_2 $$ public static TextRange getChangedPsiRange(@NotNull PsiFile file, @NotNull FileElement treeElement, @NotNull CharSequence newDocumentText) -->Line_11 $$ int commonSuffixLength = Math.min(getMatchingLength(treeElement, newDocumentText, false), psiLength - commonPrefixLength)[ FD ]
Line_2 $$ public static TextRange getChangedPsiRange(@NotNull PsiFile file, @NotNull FileElement treeElement, @NotNull CharSequence newDocumentText) -->Line_12 $$ return new TextRange(commonPrefixLength, psiLength - commonSuffixLength)[ CD ]
Line_2 $$ public static TextRange getChangedPsiRange(@NotNull PsiFile file, @NotNull FileElement treeElement, @NotNull CharSequence newDocumentText) -->Line_3 $$ int psiLength = treeElement.getTextLength()[ FD ]
Line_2 $$ public static TextRange getChangedPsiRange(@NotNull PsiFile file, @NotNull FileElement treeElement, @NotNull CharSequence newDocumentText) -->Line_8 $$ if (commonPrefixLength == newDocumentText.length() && newDocumentText.length() == psiLength) [ FD ]
Line_2 $$ public static TextRange getChangedPsiRange(@NotNull PsiFile file, @NotNull FileElement treeElement, @NotNull CharSequence newDocumentText) -->Line_4 $$ if (!file.getViewProvider().supportsIncrementalReparse(file.getLanguage())) [ FD ]
Line_8 $$ if (commonPrefixLength == newDocumentText.length() && newDocumentText.length() == psiLength) -->Line_9 $$ return null[ CD ]
Line_2 $$ public static TextRange getChangedPsiRange(@NotNull PsiFile file, @NotNull FileElement treeElement, @NotNull CharSequence newDocumentText) -->Line_7 $$ int commonPrefixLength = getMatchingLength(treeElement, newDocumentText, true)[ FD ]
Line_2 $$ public static TextRange getChangedPsiRange(@NotNull PsiFile file, @NotNull FileElement treeElement, @NotNull CharSequence newDocumentText) -->Line_8 $$ if (commonPrefixLength == newDocumentText.length() && newDocumentText.length() == psiLength) [ CD ]
