Line_2 $$ public static int search(CharSequence text, int offset, int length, CharSequence pattern, int[] nexts) -->Line_21 $$ if (j >= patternLength) [ CD ]
Line_5 $$ int j = 0-->Line_7 $$ if (j == -1) [ FD ]
Line_7 $$ if (j == -1) -->Line_13 $$ if ((c1 == c2) || (c1 == Character.toUpperCase(c2))) [ CD ]
Line_17 $$ j = nexts[j]-->Line_12 $$ char c2 = pattern.charAt(j)[ FD ]
Line_2 $$ public static int search(CharSequence text, int offset, int length, CharSequence pattern, int[] nexts) -->Line_3 $$ int patternLength = pattern.length()[ FD ]
Line_17 $$ j = nexts[j]-->Line_21 $$ if (j >= patternLength) [ FD ]
Line_5 $$ int j = 0-->Line_21 $$ if (j >= patternLength) [ FD ]
Line_7 $$ if (j == -1) -->Line_8 $$ i++[ CD ]
Line_2 $$ public static int search(CharSequence text, int offset, int length, CharSequence pattern, int[] nexts) -->Line_5 $$ int j = 0[ CD ]
Line_7 $$ if (j == -1) -->Line_9 $$ j++[ CD ]
Line_4 $$ int i = 0-->Line_8 $$ i++[ FD ]
Line_5 $$ int j = 0-->Line_15 $$ j++[ FD ]
Line_4 $$ int i = 0-->Line_14 $$ i++[ FD ]
Line_3 $$ int patternLength = pattern.length()-->Line_21 $$ if (j >= patternLength) [ FD ]
Line_7 $$ if (j == -1) -->Line_12 $$ char c2 = pattern.charAt(j)[ CD ]
Line_5 $$ int j = 0-->Line_17 $$ j = nexts[j][ FD ]
Line_2 $$ public static int search(CharSequence text, int offset, int length, CharSequence pattern, int[] nexts) -->Line_12 $$ char c2 = pattern.charAt(j)[ FD ]
Line_2 $$ public static int search(CharSequence text, int offset, int length, CharSequence pattern, int[] nexts) -->Line_6 $$ while ((i < length) && (j < patternLength)) [ CD ]
Line_17 $$ j = nexts[j]-->Line_15 $$ j++[ FD ]
Line_6 $$ while ((i < length) && (j < patternLength)) -->Line_7 $$ if (j == -1) [ CD ]
Line_17 $$ j = nexts[j]-->Line_9 $$ j++[ FD ]
Line_17 $$ j = nexts[j]-->Line_7 $$ if (j == -1) [ FD ]
Line_13 $$ if ((c1 == c2) || (c1 == Character.toUpperCase(c2))) -->Line_14 $$ i++[ CD ]
Line_5 $$ int j = 0-->Line_12 $$ char c2 = pattern.charAt(j)[ FD ]
Line_5 $$ int j = 0-->Line_9 $$ j++[ FD ]
Line_21 $$ if (j >= patternLength) -->Line_22 $$ return i - patternLength + offset[ CD ]
Line_21 $$ if (j >= patternLength) -->Line_24 $$ return -1[ CD ]
Line_2 $$ public static int search(CharSequence text, int offset, int length, CharSequence pattern, int[] nexts) -->Line_4 $$ int i = 0[ CD ]
Line_12 $$ char c2 = pattern.charAt(j)-->Line_13 $$ if ((c1 == c2) || (c1 == Character.toUpperCase(c2))) [ FD ]
Line_13 $$ if ((c1 == c2) || (c1 == Character.toUpperCase(c2))) -->Line_17 $$ j = nexts[j][ CD ]
Line_2 $$ public static int search(CharSequence text, int offset, int length, CharSequence pattern, int[] nexts) -->Line_11 $$ char c1 = text.charAt(i + offset)[ FD ]
Line_2 $$ public static int search(CharSequence text, int offset, int length, CharSequence pattern, int[] nexts) -->Line_3 $$ int patternLength = pattern.length()[ CD ]
Line_7 $$ if (j == -1) -->Line_11 $$ char c1 = text.charAt(i + offset)[ CD ]
Line_13 $$ if ((c1 == c2) || (c1 == Character.toUpperCase(c2))) -->Line_15 $$ j++[ CD ]
