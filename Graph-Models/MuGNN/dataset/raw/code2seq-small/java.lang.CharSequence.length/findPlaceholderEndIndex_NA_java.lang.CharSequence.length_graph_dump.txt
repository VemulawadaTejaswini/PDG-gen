Line_9 $$ index = index + this.placeholderSuffix.length()-->Line_13 $$ if (Strings.substringMatch(buf, index, this.placeholderPrefix)) [ FD ]
Line_2 $$ private int findPlaceholderEndIndex(CharSequence buf, int startIndex) -->Line_20 $$ return -1[ CD ]
Line_13 $$ if (Strings.substringMatch(buf, index, this.placeholderPrefix)) -->Line_15 $$ index = index + this.placeholderPrefix.length()[ CD ]
Line_9 $$ index = index + this.placeholderSuffix.length()-->Line_5 $$ while (index < buf.length()) [ FD ]
Line_15 $$ index = index + this.placeholderPrefix.length()-->Line_17 $$ index++[ FD ]
Line_9 $$ index = index + this.placeholderSuffix.length()-->Line_17 $$ index++[ FD ]
Line_3 $$ int index = startIndex + this.placeholderPrefix.length()-->Line_5 $$ while (index < buf.length()) [ FD ]
Line_7 $$ if (withinNestedPlaceholder > 0) -->Line_9 $$ index = index + this.placeholderSuffix.length()[ CD ]
Line_7 $$ if (withinNestedPlaceholder > 0) -->Line_8 $$ withinNestedPlaceholder--[ CD ]
Line_6 $$ if (Strings.substringMatch(buf, index, this.placeholderSuffix)) -->Line_13 $$ if (Strings.substringMatch(buf, index, this.placeholderPrefix)) [ CD ]
Line_3 $$ int index = startIndex + this.placeholderPrefix.length()-->Line_6 $$ if (Strings.substringMatch(buf, index, this.placeholderSuffix)) [ FD ]
Line_15 $$ index = index + this.placeholderPrefix.length()-->Line_9 $$ index = index + this.placeholderSuffix.length()[ FD ]
Line_3 $$ int index = startIndex + this.placeholderPrefix.length()-->Line_9 $$ index = index + this.placeholderSuffix.length()[ FD ]
Line_2 $$ private int findPlaceholderEndIndex(CharSequence buf, int startIndex) -->Line_5 $$ while (index < buf.length()) [ CD ]
Line_9 $$ index = index + this.placeholderSuffix.length()-->Line_6 $$ if (Strings.substringMatch(buf, index, this.placeholderSuffix)) [ FD ]
Line_15 $$ index = index + this.placeholderPrefix.length()-->Line_6 $$ if (Strings.substringMatch(buf, index, this.placeholderSuffix)) [ FD ]
Line_6 $$ if (Strings.substringMatch(buf, index, this.placeholderSuffix)) -->Line_7 $$ if (withinNestedPlaceholder > 0) [ CD ]
Line_3 $$ int index = startIndex + this.placeholderPrefix.length()-->Line_13 $$ if (Strings.substringMatch(buf, index, this.placeholderPrefix)) [ FD ]
Line_4 $$ int withinNestedPlaceholder = 0-->Line_7 $$ if (withinNestedPlaceholder > 0) [ FD ]
Line_15 $$ index = index + this.placeholderPrefix.length()-->Line_13 $$ if (Strings.substringMatch(buf, index, this.placeholderPrefix)) [ FD ]
Line_4 $$ int withinNestedPlaceholder = 0-->Line_14 $$ withinNestedPlaceholder++[ FD ]
Line_2 $$ private int findPlaceholderEndIndex(CharSequence buf, int startIndex) -->Line_6 $$ if (Strings.substringMatch(buf, index, this.placeholderSuffix)) [ FD ]
Line_2 $$ private int findPlaceholderEndIndex(CharSequence buf, int startIndex) -->Line_13 $$ if (Strings.substringMatch(buf, index, this.placeholderPrefix)) [ FD ]
Line_9 $$ index = index + this.placeholderSuffix.length()-->Line_15 $$ index = index + this.placeholderPrefix.length()[ FD ]
Line_3 $$ int index = startIndex + this.placeholderPrefix.length()-->Line_17 $$ index++[ FD ]
Line_13 $$ if (Strings.substringMatch(buf, index, this.placeholderPrefix)) -->Line_17 $$ index++[ CD ]
Line_3 $$ int index = startIndex + this.placeholderPrefix.length()-->Line_15 $$ index = index + this.placeholderPrefix.length()[ FD ]
Line_5 $$ while (index < buf.length()) -->Line_6 $$ if (Strings.substringMatch(buf, index, this.placeholderSuffix)) [ CD ]
Line_2 $$ private int findPlaceholderEndIndex(CharSequence buf, int startIndex) -->Line_4 $$ int withinNestedPlaceholder = 0[ CD ]
Line_2 $$ private int findPlaceholderEndIndex(CharSequence buf, int startIndex) -->Line_3 $$ int index = startIndex + this.placeholderPrefix.length()[ CD ]
Line_15 $$ index = index + this.placeholderPrefix.length()-->Line_5 $$ while (index < buf.length()) [ FD ]
Line_7 $$ if (withinNestedPlaceholder > 0) -->Line_11 $$ return index[ CD ]
Line_4 $$ int withinNestedPlaceholder = 0-->Line_8 $$ withinNestedPlaceholder--[ FD ]
Line_2 $$ private int findPlaceholderEndIndex(CharSequence buf, int startIndex) -->Line_5 $$ while (index < buf.length()) [ FD ]
Line_13 $$ if (Strings.substringMatch(buf, index, this.placeholderPrefix)) -->Line_14 $$ withinNestedPlaceholder++[ CD ]
