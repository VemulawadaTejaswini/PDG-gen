Line_2 $$ public static CharSequence getLineIndent(@NotNull CharSequence line) -->Line_10 $$ return line.subSequence(0, stop)[ CD ]
Line_3 $$ int stop-->Line_4 $$ for (stop = 0; stop < line.length(); stop++) [ FD ]
Line_4 $$ for (stop = 0; stop < line.length(); stop++) -->Line_6 $$ if (!(c == ' ' || c == '\t')) [ CD ]
Line_2 $$ public static CharSequence getLineIndent(@NotNull CharSequence line) -->Line_4 $$ for (stop = 0; stop < line.length(); stop++) [ CD ]
Line_3 $$ int stop-->Line_5 $$ final char c = line.charAt(stop)[ FD ]
Line_2 $$ public static CharSequence getLineIndent(@NotNull CharSequence line) -->Line_4 $$ for (stop = 0; stop < line.length(); stop++) [ FD ]
Line_4 $$ for (stop = 0; stop < line.length(); stop++) -->Line_5 $$ final char c = line.charAt(stop)[ FD ]
Line_4 $$ for (stop = 0; stop < line.length(); stop++) -->Line_5 $$ final char c = line.charAt(stop)[ CD ]
Line_2 $$ public static CharSequence getLineIndent(@NotNull CharSequence line) -->Line_3 $$ int stop[ CD ]
Line_2 $$ public static CharSequence getLineIndent(@NotNull CharSequence line) -->Line_5 $$ final char c = line.charAt(stop)[ FD ]
Line_3 $$ int stop-->Line_10 $$ return line.subSequence(0, stop)[ FD ]
Line_2 $$ public static CharSequence getLineIndent(@NotNull CharSequence line) -->Line_10 $$ return line.subSequence(0, stop)[ FD ]
Line_4 $$ for (stop = 0; stop < line.length(); stop++) -->Line_10 $$ return line.subSequence(0, stop)[ FD ]
