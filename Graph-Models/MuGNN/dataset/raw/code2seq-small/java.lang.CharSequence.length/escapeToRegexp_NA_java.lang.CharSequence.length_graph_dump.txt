Line_7 $$ if (c == '\n') -->Line_10 $$ builder.append('\\').append(c)[ CD ]
Line_2 $$ public static StringBuilder escapeToRegexp(@NotNull CharSequence text, @NotNull StringBuilder builder) -->Line_4 $$ final char c = text.charAt(i)[ FD ]
Line_7 $$ if (c == '\n') -->Line_8 $$ builder.append("\\n")[ CD ]
Line_4 $$ final char c = text.charAt(i)-->Line_5 $$ if (c == ' ' || Character.isLetter(c) || Character.isDigit(c) || c == '_') [ FD ]
Line_3 $$ for (int i = 0; i < text.length(); i++) -->Line_4 $$ final char c = text.charAt(i)[ CD ]
Line_4 $$ final char c = text.charAt(i)-->Line_7 $$ if (c == '\n') [ FD ]
Line_5 $$ if (c == ' ' || Character.isLetter(c) || Character.isDigit(c) || c == '_') -->Line_7 $$ if (c == '\n') [ CD ]
Line_2 $$ public static StringBuilder escapeToRegexp(@NotNull CharSequence text, @NotNull StringBuilder builder) -->Line_6 $$ builder.append(c)[ FD ]
Line_3 $$ for (int i = 0; i < text.length(); i++) -->Line_5 $$ if (c == ' ' || Character.isLetter(c) || Character.isDigit(c) || c == '_') [ CD ]
Line_4 $$ final char c = text.charAt(i)-->Line_10 $$ builder.append('\\').append(c)[ FD ]
Line_2 $$ public static StringBuilder escapeToRegexp(@NotNull CharSequence text, @NotNull StringBuilder builder) -->Line_10 $$ builder.append('\\').append(c)[ FD ]
Line_2 $$ public static StringBuilder escapeToRegexp(@NotNull CharSequence text, @NotNull StringBuilder builder) -->Line_13 $$ return builder[ CD ]
Line_2 $$ public static StringBuilder escapeToRegexp(@NotNull CharSequence text, @NotNull StringBuilder builder) -->Line_3 $$ for (int i = 0; i < text.length(); i++) [ FD ]
Line_3 $$ for (int i = 0; i < text.length(); i++) -->Line_4 $$ final char c = text.charAt(i)[ FD ]
Line_5 $$ if (c == ' ' || Character.isLetter(c) || Character.isDigit(c) || c == '_') -->Line_6 $$ builder.append(c)[ CD ]
Line_2 $$ public static StringBuilder escapeToRegexp(@NotNull CharSequence text, @NotNull StringBuilder builder) -->Line_8 $$ builder.append("\\n")[ FD ]
Line_2 $$ public static StringBuilder escapeToRegexp(@NotNull CharSequence text, @NotNull StringBuilder builder) -->Line_3 $$ for (int i = 0; i < text.length(); i++) [ CD ]
Line_4 $$ final char c = text.charAt(i)-->Line_6 $$ builder.append(c)[ FD ]
