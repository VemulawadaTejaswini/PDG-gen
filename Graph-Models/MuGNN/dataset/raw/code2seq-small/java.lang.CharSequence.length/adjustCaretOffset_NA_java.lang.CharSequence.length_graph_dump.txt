Line_2 $$ private static int adjustCaretOffset(@NotNull Editor editor) -->Line_7 $$ CharSequence text = editor.getDocument().getCharsSequence()[ FD ]
Line_2 $$ private static int adjustCaretOffset(@NotNull Editor editor) -->Line_15 $$ return caretOffset[ CD ]
Line_3 $$ int caretOffset = editor.getCaretModel().getOffset()-->Line_4 $$ if (caretOffset == 0) [ FD ]
Line_2 $$ private static int adjustCaretOffset(@NotNull Editor editor) -->Line_8 $$ char prev = text.charAt(caretOffset - 1)[ CD ]
Line_8 $$ char prev = text.charAt(caretOffset - 1)-->Line_9 $$ if (caretOffset < text.length() && !Character.isJavaIdentifierPart(text.charAt(caretOffset)) && Character.isJavaIdentifierPart(prev)) [ FD ]
Line_7 $$ CharSequence text = editor.getDocument().getCharsSequence()-->Line_12 $$ if ((caretOffset == text.length() || Character.isWhitespace(text.charAt(caretOffset))) && !Character.isWhitespace(prev)) [ FD ]
Line_7 $$ CharSequence text = editor.getDocument().getCharsSequence()-->Line_8 $$ char prev = text.charAt(caretOffset - 1)[ FD ]
Line_2 $$ private static int adjustCaretOffset(@NotNull Editor editor) -->Line_9 $$ if (caretOffset < text.length() && !Character.isJavaIdentifierPart(text.charAt(caretOffset)) && Character.isJavaIdentifierPart(prev)) [ CD ]
Line_12 $$ if ((caretOffset == text.length() || Character.isWhitespace(text.charAt(caretOffset))) && !Character.isWhitespace(prev)) -->Line_13 $$ return caretOffset - 1[ CD ]
Line_3 $$ int caretOffset = editor.getCaretModel().getOffset()-->Line_12 $$ if ((caretOffset == text.length() || Character.isWhitespace(text.charAt(caretOffset))) && !Character.isWhitespace(prev)) [ FD ]
Line_8 $$ char prev = text.charAt(caretOffset - 1)-->Line_12 $$ if ((caretOffset == text.length() || Character.isWhitespace(text.charAt(caretOffset))) && !Character.isWhitespace(prev)) [ FD ]
Line_2 $$ private static int adjustCaretOffset(@NotNull Editor editor) -->Line_4 $$ if (caretOffset == 0) [ CD ]
Line_3 $$ int caretOffset = editor.getCaretModel().getOffset()-->Line_9 $$ if (caretOffset < text.length() && !Character.isJavaIdentifierPart(text.charAt(caretOffset)) && Character.isJavaIdentifierPart(prev)) [ FD ]
Line_2 $$ private static int adjustCaretOffset(@NotNull Editor editor) -->Line_7 $$ CharSequence text = editor.getDocument().getCharsSequence()[ CD ]
Line_7 $$ CharSequence text = editor.getDocument().getCharsSequence()-->Line_9 $$ if (caretOffset < text.length() && !Character.isJavaIdentifierPart(text.charAt(caretOffset)) && Character.isJavaIdentifierPart(prev)) [ FD ]
Line_2 $$ private static int adjustCaretOffset(@NotNull Editor editor) -->Line_3 $$ int caretOffset = editor.getCaretModel().getOffset()[ FD ]
Line_9 $$ if (caretOffset < text.length() && !Character.isJavaIdentifierPart(text.charAt(caretOffset)) && Character.isJavaIdentifierPart(prev)) -->Line_10 $$ return caretOffset - 1[ CD ]
Line_4 $$ if (caretOffset == 0) -->Line_5 $$ return caretOffset[ CD ]
Line_2 $$ private static int adjustCaretOffset(@NotNull Editor editor) -->Line_3 $$ int caretOffset = editor.getCaretModel().getOffset()[ CD ]
Line_2 $$ private static int adjustCaretOffset(@NotNull Editor editor) -->Line_12 $$ if ((caretOffset == text.length() || Character.isWhitespace(text.charAt(caretOffset))) && !Character.isWhitespace(prev)) [ CD ]
