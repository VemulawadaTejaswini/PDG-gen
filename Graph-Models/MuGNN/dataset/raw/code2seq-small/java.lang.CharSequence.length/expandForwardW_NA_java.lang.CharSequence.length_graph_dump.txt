Line_2 $$ private static int expandForwardW(@NotNull CharOffsets chars1, @NotNull CharOffsets chars2, @NotNull CharSequence text1, @NotNull CharSequence text2, @NotNull Range ch, boolean left) -->Line_6 $$ return start + TrimUtil.expandForwardW(text1, text2, offset1, offset2, text1.length(), text2.length())[ FD ]
Line_4 $$ int offset2 = ch.start2 == 0 ? 0 : chars2.offsets[ch.start2 - 1] + 1-->Line_6 $$ return start + TrimUtil.expandForwardW(text1, text2, offset1, offset2, text1.length(), text2.length())[ FD ]
Line_2 $$ private static int expandForwardW(@NotNull CharOffsets chars1, @NotNull CharOffsets chars2, @NotNull CharSequence text1, @NotNull CharSequence text2, @NotNull Range ch, boolean left) -->Line_6 $$ return start + TrimUtil.expandForwardW(text1, text2, offset1, offset2, text1.length(), text2.length())[ CD ]
Line_2 $$ private static int expandForwardW(@NotNull CharOffsets chars1, @NotNull CharOffsets chars2, @NotNull CharSequence text1, @NotNull CharSequence text2, @NotNull Range ch, boolean left) -->Line_3 $$ int offset1 = ch.start1 == 0 ? 0 : chars1.offsets[ch.start1 - 1] + 1[ CD ]
Line_2 $$ private static int expandForwardW(@NotNull CharOffsets chars1, @NotNull CharOffsets chars2, @NotNull CharSequence text1, @NotNull CharSequence text2, @NotNull Range ch, boolean left) -->Line_5 $$ int start = left ? offset1 : offset2[ CD ]
Line_3 $$ int offset1 = ch.start1 == 0 ? 0 : chars1.offsets[ch.start1 - 1] + 1-->Line_6 $$ return start + TrimUtil.expandForwardW(text1, text2, offset1, offset2, text1.length(), text2.length())[ FD ]
Line_2 $$ private static int expandForwardW(@NotNull CharOffsets chars1, @NotNull CharOffsets chars2, @NotNull CharSequence text1, @NotNull CharSequence text2, @NotNull Range ch, boolean left) -->Line_4 $$ int offset2 = ch.start2 == 0 ? 0 : chars2.offsets[ch.start2 - 1] + 1[ CD ]
