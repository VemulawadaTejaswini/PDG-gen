Line_6 $$ if (endOffset - startOffset > INTERN_THRESHOLD)-->Line_9 $$ result = doIntern(baseText, startOffset, endOffset)[ CD ]
Line_2 $$ public CharSequence intern(@NotNull final CharSequence baseText, final int startOffset, final int endOffset) -->Line_9 $$ result = doIntern(baseText, startOffset, endOffset)[ FD ]
Line_2 $$ public CharSequence intern(@NotNull final CharSequence baseText, final int startOffset, final int endOffset) -->Line_3 $$ CharSequence result[ CD ]
Line_2 $$ public CharSequence intern(@NotNull final CharSequence baseText, final int startOffset, final int endOffset) -->Line_10 $$ return result[ CD ]
Line_3 $$ CharSequence result-->Line_9 $$ result = doIntern(baseText, startOffset, endOffset)[ FD ]
Line_2 $$ public CharSequence intern(@NotNull final CharSequence baseText, final int startOffset, final int endOffset) -->Line_5 $$ result = intern(baseText)[ FD ]
Line_2 $$ public CharSequence intern(@NotNull final CharSequence baseText, final int startOffset, final int endOffset) -->Line_4 $$ if (endOffset - startOffset == baseText.length())[ CD ]
Line_7 $$ result = createSequence(baseText, startOffset, endOffset)-->Line_9 $$ result = doIntern(baseText, startOffset, endOffset)[ FD ]
Line_4 $$ if (endOffset - startOffset == baseText.length())-->Line_6 $$ if (endOffset - startOffset > INTERN_THRESHOLD)[ CD ]
Line_3 $$ CharSequence result-->Line_5 $$ result = intern(baseText)[ FD ]
Line_2 $$ public CharSequence intern(@NotNull final CharSequence baseText, final int startOffset, final int endOffset) -->Line_4 $$ if (endOffset - startOffset == baseText.length())[ FD ]
Line_5 $$ result = intern(baseText)-->Line_7 $$ result = createSequence(baseText, startOffset, endOffset)[ FD ]
Line_2 $$ public CharSequence intern(@NotNull final CharSequence baseText, final int startOffset, final int endOffset) -->Line_7 $$ result = createSequence(baseText, startOffset, endOffset)[ FD ]
Line_5 $$ result = intern(baseText)-->Line_9 $$ result = doIntern(baseText, startOffset, endOffset)[ FD ]
Line_4 $$ if (endOffset - startOffset == baseText.length())-->Line_5 $$ result = intern(baseText)[ CD ]
Line_3 $$ CharSequence result-->Line_7 $$ result = createSequence(baseText, startOffset, endOffset)[ FD ]
Line_6 $$ if (endOffset - startOffset > INTERN_THRESHOLD)-->Line_7 $$ result = createSequence(baseText, startOffset, endOffset)[ CD ]
