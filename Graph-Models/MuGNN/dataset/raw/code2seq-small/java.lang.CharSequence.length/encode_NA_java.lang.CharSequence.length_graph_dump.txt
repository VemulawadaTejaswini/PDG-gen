Line_7 $$ for (int i = 0; i < letters.length(); i++) -->Line_9 $$ int index = alphabet.getIndex(letter, force)[ CD ]
Line_5 $$ int unknownLetters = 0-->Line_18 $$ if (unknownLetters > 0)[ FD ]
Line_2 $$ public UnitBitSet encode(@NotNull CharSequence letters, boolean force) -->Line_7 $$ for (int i = 0; i < letters.length(); i++) [ FD ]
Line_2 $$ public UnitBitSet encode(@NotNull CharSequence letters, boolean force) -->Line_5 $$ int unknownLetters = 0[ CD ]
Line_2 $$ public UnitBitSet encode(@NotNull CharSequence letters, boolean force) -->Line_16 $$ if (unknownLetters == letters.length())[ FD ]
Line_8 $$ char letter = letters.charAt(i)-->Line_9 $$ int index = alphabet.getIndex(letter, force)[ FD ]
Line_10 $$ if (index < 0) -->Line_13 $$ indices[i] = (byte) index[ CD ]
Line_2 $$ public UnitBitSet encode(@NotNull CharSequence letters, boolean force) -->Line_20 $$ return new UnitBitSet(indices, alphabet)[ CD ]
Line_16 $$ if (unknownLetters == letters.length())-->Line_17 $$ return WORD_OF_ENTIRELY_UNKNOWN_LETTERS[ CD ]
Line_9 $$ int index = alphabet.getIndex(letter, force)-->Line_10 $$ if (index < 0) [ FD ]
Line_2 $$ public UnitBitSet encode(@NotNull CharSequence letters, boolean force) -->Line_3 $$ if (UnitBitSet.MAX_CHARS_IN_WORD <= letters.length() + offset)[ CD ]
Line_7 $$ for (int i = 0; i < letters.length(); i++) -->Line_8 $$ char letter = letters.charAt(i)[ CD ]
Line_2 $$ public UnitBitSet encode(@NotNull CharSequence letters, boolean force) -->Line_6 $$ byte[] indices = new byte[letters.length()][ FD ]
Line_2 $$ public UnitBitSet encode(@NotNull CharSequence letters, boolean force) -->Line_8 $$ char letter = letters.charAt(i)[ FD ]
Line_2 $$ public UnitBitSet encode(@NotNull CharSequence letters, boolean force) -->Line_3 $$ if (UnitBitSet.MAX_CHARS_IN_WORD <= letters.length() + offset)[ FD ]
Line_2 $$ public UnitBitSet encode(@NotNull CharSequence letters, boolean force) -->Line_9 $$ int index = alphabet.getIndex(letter, force)[ FD ]
Line_7 $$ for (int i = 0; i < letters.length(); i++) -->Line_8 $$ char letter = letters.charAt(i)[ FD ]
Line_10 $$ if (index < 0) -->Line_11 $$ unknownLetters++[ CD ]
Line_3 $$ if (UnitBitSet.MAX_CHARS_IN_WORD <= letters.length() + offset)-->Line_4 $$ return null[ CD ]
Line_7 $$ for (int i = 0; i < letters.length(); i++) -->Line_10 $$ if (index < 0) [ CD ]
Line_2 $$ public UnitBitSet encode(@NotNull CharSequence letters, boolean force) -->Line_6 $$ byte[] indices = new byte[letters.length()][ CD ]
Line_2 $$ public UnitBitSet encode(@NotNull CharSequence letters, boolean force) -->Line_7 $$ for (int i = 0; i < letters.length(); i++) [ CD ]
Line_5 $$ int unknownLetters = 0-->Line_16 $$ if (unknownLetters == letters.length())[ FD ]
Line_2 $$ public UnitBitSet encode(@NotNull CharSequence letters, boolean force) -->Line_18 $$ if (unknownLetters > 0)[ CD ]
Line_5 $$ int unknownLetters = 0-->Line_11 $$ unknownLetters++[ FD ]
Line_18 $$ if (unknownLetters > 0)-->Line_19 $$ return null[ CD ]
Line_2 $$ public UnitBitSet encode(@NotNull CharSequence letters, boolean force) -->Line_16 $$ if (unknownLetters == letters.length())[ CD ]
