Line_6 $$ while (!lineTokenizer.atEnd()) -->Line_9 $$ lineTokenizer.advance()[ CD ]
Line_4 $$ TByteArrayList flags = new TByteArrayList()-->Line_8 $$ flags.add((byte) (lineTokenizer.getLineSeparatorLength() | (markModified ? MODIFIED_MASK : 0)))[ FD ]
Line_5 $$ LineTokenizer lineTokenizer = new LineTokenizer(text)-->Line_9 $$ lineTokenizer.advance()[ FD ]
Line_2 $$ private static LineSet createLineSet(CharSequence text, boolean markModified) -->Line_5 $$ LineTokenizer lineTokenizer = new LineTokenizer(text)[ CD ]
Line_4 $$ TByteArrayList flags = new TByteArrayList()-->Line_11 $$ return new LineSet(starts.toNativeArray(), flags.toNativeArray(), text.length())[ FD ]
Line_2 $$ private static LineSet createLineSet(CharSequence text, boolean markModified) -->Line_6 $$ while (!lineTokenizer.atEnd()) [ CD ]
Line_6 $$ while (!lineTokenizer.atEnd()) -->Line_8 $$ flags.add((byte) (lineTokenizer.getLineSeparatorLength() | (markModified ? MODIFIED_MASK : 0)))[ CD ]
Line_3 $$ TIntArrayList starts = new TIntArrayList()-->Line_11 $$ return new LineSet(starts.toNativeArray(), flags.toNativeArray(), text.length())[ FD ]
Line_5 $$ LineTokenizer lineTokenizer = new LineTokenizer(text)-->Line_6 $$ while (!lineTokenizer.atEnd()) [ FD ]
Line_5 $$ LineTokenizer lineTokenizer = new LineTokenizer(text)-->Line_8 $$ flags.add((byte) (lineTokenizer.getLineSeparatorLength() | (markModified ? MODIFIED_MASK : 0)))[ FD ]
Line_6 $$ while (!lineTokenizer.atEnd()) -->Line_7 $$ starts.add(lineTokenizer.getOffset())[ CD ]
Line_2 $$ private static LineSet createLineSet(CharSequence text, boolean markModified) -->Line_4 $$ TByteArrayList flags = new TByteArrayList()[ CD ]
Line_5 $$ LineTokenizer lineTokenizer = new LineTokenizer(text)-->Line_7 $$ starts.add(lineTokenizer.getOffset())[ FD ]
Line_2 $$ private static LineSet createLineSet(CharSequence text, boolean markModified) -->Line_11 $$ return new LineSet(starts.toNativeArray(), flags.toNativeArray(), text.length())[ FD ]
Line_3 $$ TIntArrayList starts = new TIntArrayList()-->Line_7 $$ starts.add(lineTokenizer.getOffset())[ FD ]
Line_2 $$ private static LineSet createLineSet(CharSequence text, boolean markModified) -->Line_3 $$ TIntArrayList starts = new TIntArrayList()[ CD ]
Line_2 $$ private static LineSet createLineSet(CharSequence text, boolean markModified) -->Line_11 $$ return new LineSet(starts.toNativeArray(), flags.toNativeArray(), text.length())[ CD ]
