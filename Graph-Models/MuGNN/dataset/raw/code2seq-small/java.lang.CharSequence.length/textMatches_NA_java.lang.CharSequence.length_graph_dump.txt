Line_4 $$ final int len = text.length()-->Line_5 $$ if (end - start != len)[ FD ]
Line_2 $$ public boolean textMatches(@NotNull final CharSequence buf, int start, int end) -->Line_3 $$ final CharSequence text = getChars()[ CD ]
Line_3 $$ final CharSequence text = getChars()-->Line_4 $$ final int len = text.length()[ FD ]
Line_2 $$ public boolean textMatches(@NotNull final CharSequence buf, int start, int end) -->Line_5 $$ if (end - start != len)[ CD ]
Line_13 $$ if (text.charAt(i) != buf.charAt(start + i))-->Line_14 $$ return false[ CD ]
Line_2 $$ public boolean textMatches(@NotNull final CharSequence buf, int start, int end) -->Line_7 $$ if (buf == text)[ FD ]
Line_3 $$ final CharSequence text = getChars()-->Line_7 $$ if (buf == text)[ FD ]
Line_12 $$ for (int i = 0; i < len; i++) -->Line_13 $$ if (text.charAt(i) != buf.charAt(start + i))[ CD ]
Line_2 $$ public boolean textMatches(@NotNull final CharSequence buf, int start, int end) -->Line_4 $$ final int len = text.length()[ CD ]
Line_2 $$ public boolean textMatches(@NotNull final CharSequence buf, int start, int end) -->Line_13 $$ if (text.charAt(i) != buf.charAt(start + i))[ FD ]
Line_2 $$ public boolean textMatches(@NotNull final CharSequence buf, int start, int end) -->Line_7 $$ if (buf == text)[ CD ]
Line_2 $$ public boolean textMatches(@NotNull final CharSequence buf, int start, int end) -->Line_9 $$ if (len > TEXT_MATCHES_THRESHOLD && text instanceof String && buf instanceof String) [ CD ]
Line_2 $$ public boolean textMatches(@NotNull final CharSequence buf, int start, int end) -->Line_16 $$ return true[ CD ]
Line_4 $$ final int len = text.length()-->Line_10 $$ return ((String) text).regionMatches(0, (String) buf, start, len)[ FD ]
Line_9 $$ if (len > TEXT_MATCHES_THRESHOLD && text instanceof String && buf instanceof String) -->Line_10 $$ return ((String) text).regionMatches(0, (String) buf, start, len)[ CD ]
Line_2 $$ public boolean textMatches(@NotNull final CharSequence buf, int start, int end) -->Line_12 $$ for (int i = 0; i < len; i++) [ CD ]
Line_2 $$ public boolean textMatches(@NotNull final CharSequence buf, int start, int end) -->Line_10 $$ return ((String) text).regionMatches(0, (String) buf, start, len)[ FD ]
Line_3 $$ final CharSequence text = getChars()-->Line_13 $$ if (text.charAt(i) != buf.charAt(start + i))[ FD ]
Line_4 $$ final int len = text.length()-->Line_12 $$ for (int i = 0; i < len; i++) [ FD ]
Line_5 $$ if (end - start != len)-->Line_6 $$ return false[ CD ]
Line_12 $$ for (int i = 0; i < len; i++) -->Line_13 $$ if (text.charAt(i) != buf.charAt(start + i))[ FD ]
Line_7 $$ if (buf == text)-->Line_8 $$ return true[ CD ]
