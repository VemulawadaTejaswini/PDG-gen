Line_9 $$ if (c == '\n' || (c != ' ' && c != '\t')) -->Line_10 $$ return text.subSequence(myLineStartOffset, i)[ CD ]
Line_6 $$ CharSequence text = myCurrentIndentHolder.getChars()-->Line_7 $$ for (int i = myLineStartOffset; i < text.length(); i++) [ FD ]
Line_2 $$ public CharSequence getCurrentLineIndent() -->Line_7 $$ for (int i = myLineStartOffset; i < text.length(); i++) [ CD ]
Line_7 $$ for (int i = myLineStartOffset; i < text.length(); i++) -->Line_10 $$ return text.subSequence(myLineStartOffset, i)[ FD ]
Line_2 $$ public CharSequence getCurrentLineIndent() -->Line_13 $$ return text.subSequence(myLineStartOffset, text.length())[ CD ]
Line_2 $$ public CharSequence getCurrentLineIndent() -->Line_3 $$ if (myCurrentIndentHolder == null || myLineStartOffset < 0) [ CD ]
Line_6 $$ CharSequence text = myCurrentIndentHolder.getChars()-->Line_13 $$ return text.subSequence(myLineStartOffset, text.length())[ FD ]
Line_2 $$ public CharSequence getCurrentLineIndent() -->Line_6 $$ CharSequence text = myCurrentIndentHolder.getChars()[ CD ]
Line_7 $$ for (int i = myLineStartOffset; i < text.length(); i++) -->Line_9 $$ if (c == '\n' || (c != ' ' && c != '\t')) [ CD ]
Line_6 $$ CharSequence text = myCurrentIndentHolder.getChars()-->Line_10 $$ return text.subSequence(myLineStartOffset, i)[ FD ]
Line_6 $$ CharSequence text = myCurrentIndentHolder.getChars()-->Line_8 $$ char c = text.charAt(i)[ FD ]
Line_7 $$ for (int i = myLineStartOffset; i < text.length(); i++) -->Line_8 $$ char c = text.charAt(i)[ FD ]
Line_7 $$ for (int i = myLineStartOffset; i < text.length(); i++) -->Line_8 $$ char c = text.charAt(i)[ CD ]
Line_3 $$ if (myCurrentIndentHolder == null || myLineStartOffset < 0) -->Line_4 $$ return ""[ CD ]
