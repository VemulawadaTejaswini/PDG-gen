Line_5 $$ final int end = oldMapping.range.getEndOffset()-->Line_6 $$ if (Comparing.equal(doc.getCharsSequence().subSequence(start, end), tokenText))[ FD ]
Line_4 $$ final int start = oldMapping.range.getStartOffset()-->Line_6 $$ if (Comparing.equal(doc.getCharsSequence().subSequence(start, end), tokenText))[ FD ]
Line_3 $$ CharSequence tokenText = getTokenText(tokenIndex)-->Line_6 $$ if (Comparing.equal(doc.getCharsSequence().subSequence(start, end), tokenText))[ FD ]
Line_2 $$ public void updateMapping(final int tokenIndex, final MappedRange oldMapping) -->Line_6 $$ if (Comparing.equal(doc.getCharsSequence().subSequence(start, end), tokenText))[ CD ]
Line_2 $$ public void updateMapping(final int tokenIndex, final MappedRange oldMapping) -->Line_8 $$ doc.replaceString(start, end, tokenText)[ CD ]
Line_10 $$ if (oldMapping.range.getStartOffset() != start || oldMapping.range.getEndOffset() != newEnd) -->Line_12 $$ oldMapping.range.dispose()[ CD ]
Line_4 $$ final int start = oldMapping.range.getStartOffset()-->Line_13 $$ oldMapping.range = doc.createRangeMarker(start, newEnd)[ FD ]
Line_3 $$ CharSequence tokenText = getTokenText(tokenIndex)-->Line_8 $$ doc.replaceString(start, end, tokenText)[ FD ]
Line_2 $$ public void updateMapping(final int tokenIndex, final MappedRange oldMapping) -->Line_9 $$ final int newEnd = start + tokenText.length()[ CD ]
Line_6 $$ if (Comparing.equal(doc.getCharsSequence().subSequence(start, end), tokenText))-->Line_7 $$ return[ CD ]
Line_5 $$ final int end = oldMapping.range.getEndOffset()-->Line_8 $$ doc.replaceString(start, end, tokenText)[ FD ]
Line_10 $$ if (oldMapping.range.getStartOffset() != start || oldMapping.range.getEndOffset() != newEnd) -->Line_13 $$ oldMapping.range = doc.createRangeMarker(start, newEnd)[ CD ]
Line_2 $$ public void updateMapping(final int tokenIndex, final MappedRange oldMapping) -->Line_3 $$ CharSequence tokenText = getTokenText(tokenIndex)[ FD ]
Line_2 $$ public void updateMapping(final int tokenIndex, final MappedRange oldMapping) -->Line_3 $$ CharSequence tokenText = getTokenText(tokenIndex)[ CD ]
Line_2 $$ public void updateMapping(final int tokenIndex, final MappedRange oldMapping) -->Line_10 $$ if (oldMapping.range.getStartOffset() != start || oldMapping.range.getEndOffset() != newEnd) [ CD ]
Line_2 $$ public void updateMapping(final int tokenIndex, final MappedRange oldMapping) -->Line_4 $$ final int start = oldMapping.range.getStartOffset()[ CD ]
Line_4 $$ final int start = oldMapping.range.getStartOffset()-->Line_8 $$ doc.replaceString(start, end, tokenText)[ FD ]
Line_9 $$ final int newEnd = start + tokenText.length()-->Line_13 $$ oldMapping.range = doc.createRangeMarker(start, newEnd)[ FD ]
Line_3 $$ CharSequence tokenText = getTokenText(tokenIndex)-->Line_9 $$ final int newEnd = start + tokenText.length()[ FD ]
Line_2 $$ public void updateMapping(final int tokenIndex, final MappedRange oldMapping) -->Line_5 $$ final int end = oldMapping.range.getEndOffset()[ CD ]
