Line_11 $$ for (int i = 1; i < word.length(); i++) -->Line_12 $$ if (Character.isLowerCase(word.charAt(i)))[ FD ]
Line_4 $$ final CharSequence chars = editor.getDocument().getCharsSequence()-->Line_8 $$ final CharSequence word = chars.subSequence(iterator.getStart(), iterator.getEnd())[ FD ]
Line_2 $$ public static boolean isClassLikeIdentifier(int offset, Editor editor, HighlighterIterator iterator, final IElementType idType) -->Line_16 $$ return false[ CD ]
Line_8 $$ final CharSequence word = chars.subSequence(iterator.getStart(), iterator.getEnd())-->Line_11 $$ for (int i = 1; i < word.length(); i++) [ FD ]
Line_5 $$ final char startChar = chars.charAt(iterator.getStart())-->Line_6 $$ if (!Character.isUpperCase(startChar))[ FD ]
Line_3 $$ if (iterator.getTokenType() == idType && iterator.getEnd() == offset) -->Line_5 $$ final char startChar = chars.charAt(iterator.getStart())[ CD ]
Line_8 $$ final CharSequence word = chars.subSequence(iterator.getStart(), iterator.getEnd())-->Line_9 $$ if (word.length() == 1)[ FD ]
Line_3 $$ if (iterator.getTokenType() == idType && iterator.getEnd() == offset) -->Line_8 $$ final CharSequence word = chars.subSequence(iterator.getStart(), iterator.getEnd())[ CD ]
Line_3 $$ if (iterator.getTokenType() == idType && iterator.getEnd() == offset) -->Line_6 $$ if (!Character.isUpperCase(startChar))[ CD ]
Line_4 $$ final CharSequence chars = editor.getDocument().getCharsSequence()-->Line_5 $$ final char startChar = chars.charAt(iterator.getStart())[ FD ]
Line_3 $$ if (iterator.getTokenType() == idType && iterator.getEnd() == offset) -->Line_9 $$ if (word.length() == 1)[ CD ]
Line_12 $$ if (Character.isLowerCase(word.charAt(i)))-->Line_13 $$ return true[ CD ]
Line_3 $$ if (iterator.getTokenType() == idType && iterator.getEnd() == offset) -->Line_11 $$ for (int i = 1; i < word.length(); i++) [ CD ]
Line_11 $$ for (int i = 1; i < word.length(); i++) -->Line_12 $$ if (Character.isLowerCase(word.charAt(i)))[ CD ]
Line_2 $$ public static boolean isClassLikeIdentifier(int offset, Editor editor, HighlighterIterator iterator, final IElementType idType) -->Line_3 $$ if (iterator.getTokenType() == idType && iterator.getEnd() == offset) [ FD ]
Line_3 $$ if (iterator.getTokenType() == idType && iterator.getEnd() == offset) -->Line_4 $$ final CharSequence chars = editor.getDocument().getCharsSequence()[ CD ]
Line_2 $$ public static boolean isClassLikeIdentifier(int offset, Editor editor, HighlighterIterator iterator, final IElementType idType) -->Line_3 $$ if (iterator.getTokenType() == idType && iterator.getEnd() == offset) [ CD ]
Line_2 $$ public static boolean isClassLikeIdentifier(int offset, Editor editor, HighlighterIterator iterator, final IElementType idType) -->Line_5 $$ final char startChar = chars.charAt(iterator.getStart())[ FD ]
Line_2 $$ public static boolean isClassLikeIdentifier(int offset, Editor editor, HighlighterIterator iterator, final IElementType idType) -->Line_4 $$ final CharSequence chars = editor.getDocument().getCharsSequence()[ FD ]
Line_8 $$ final CharSequence word = chars.subSequence(iterator.getStart(), iterator.getEnd())-->Line_12 $$ if (Character.isLowerCase(word.charAt(i)))[ FD ]
Line_2 $$ public static boolean isClassLikeIdentifier(int offset, Editor editor, HighlighterIterator iterator, final IElementType idType) -->Line_8 $$ final CharSequence word = chars.subSequence(iterator.getStart(), iterator.getEnd())[ FD ]
Line_9 $$ if (word.length() == 1)-->Line_10 $$ return true[ CD ]
Line_6 $$ if (!Character.isUpperCase(startChar))-->Line_7 $$ return false[ CD ]
