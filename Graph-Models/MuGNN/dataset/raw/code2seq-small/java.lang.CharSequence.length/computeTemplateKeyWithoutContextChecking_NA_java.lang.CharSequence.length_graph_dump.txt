Line_10 $$ if (!provider.isTerminalSymbol(currentChar)) -->Line_11 $$ return null[ CD ]
Line_3 $$ int startOffset = currentOffset-->Line_7 $$ while (startOffset > 0) [ FD ]
Line_9 $$ if (!Character.isJavaIdentifierPart(currentChar)) -->Line_10 $$ if (!provider.isTerminalSymbol(currentChar)) [ CD ]
Line_2 $$ private static String computeTemplateKeyWithoutContextChecking(@NotNull PostfixTemplateProvider provider, @NotNull CharSequence documentContent, int currentOffset) -->Line_10 $$ if (!provider.isTerminalSymbol(currentChar)) [ FD ]
Line_2 $$ private static String computeTemplateKeyWithoutContextChecking(@NotNull PostfixTemplateProvider provider, @NotNull CharSequence documentContent, int currentOffset) -->Line_4 $$ if (documentContent.length() < startOffset) [ CD ]
Line_7 $$ while (startOffset > 0) -->Line_8 $$ char currentChar = documentContent.charAt(startOffset - 1)[ CD ]
Line_7 $$ while (startOffset > 0) -->Line_9 $$ if (!Character.isJavaIdentifierPart(currentChar)) [ CD ]
Line_2 $$ private static String computeTemplateKeyWithoutContextChecking(@NotNull PostfixTemplateProvider provider, @NotNull CharSequence documentContent, int currentOffset) -->Line_4 $$ if (documentContent.length() < startOffset) [ FD ]
Line_7 $$ while (startOffset > 0) -->Line_16 $$ startOffset--[ CD ]
Line_3 $$ int startOffset = currentOffset-->Line_13 $$ startOffset--[ FD ]
Line_8 $$ char currentChar = documentContent.charAt(startOffset - 1)-->Line_9 $$ if (!Character.isJavaIdentifierPart(currentChar)) [ FD ]
Line_3 $$ int startOffset = currentOffset-->Line_16 $$ startOffset--[ FD ]
Line_4 $$ if (documentContent.length() < startOffset) -->Line_5 $$ return null[ CD ]
Line_8 $$ char currentChar = documentContent.charAt(startOffset - 1)-->Line_10 $$ if (!provider.isTerminalSymbol(currentChar)) [ FD ]
Line_2 $$ private static String computeTemplateKeyWithoutContextChecking(@NotNull PostfixTemplateProvider provider, @NotNull CharSequence documentContent, int currentOffset) -->Line_7 $$ while (startOffset > 0) [ CD ]
Line_2 $$ private static String computeTemplateKeyWithoutContextChecking(@NotNull PostfixTemplateProvider provider, @NotNull CharSequence documentContent, int currentOffset) -->Line_18 $$ return String.valueOf(documentContent.subSequence(startOffset, currentOffset))[ CD ]
Line_3 $$ int startOffset = currentOffset-->Line_4 $$ if (documentContent.length() < startOffset) [ FD ]
Line_2 $$ private static String computeTemplateKeyWithoutContextChecking(@NotNull PostfixTemplateProvider provider, @NotNull CharSequence documentContent, int currentOffset) -->Line_18 $$ return String.valueOf(documentContent.subSequence(startOffset, currentOffset))[ FD ]
Line_2 $$ private static String computeTemplateKeyWithoutContextChecking(@NotNull PostfixTemplateProvider provider, @NotNull CharSequence documentContent, int currentOffset) -->Line_3 $$ int startOffset = currentOffset[ CD ]
Line_3 $$ int startOffset = currentOffset-->Line_18 $$ return String.valueOf(documentContent.subSequence(startOffset, currentOffset))[ FD ]
Line_9 $$ if (!Character.isJavaIdentifierPart(currentChar)) -->Line_13 $$ startOffset--[ CD ]
Line_2 $$ private static String computeTemplateKeyWithoutContextChecking(@NotNull PostfixTemplateProvider provider, @NotNull CharSequence documentContent, int currentOffset) -->Line_8 $$ char currentChar = documentContent.charAt(startOffset - 1)[ FD ]
