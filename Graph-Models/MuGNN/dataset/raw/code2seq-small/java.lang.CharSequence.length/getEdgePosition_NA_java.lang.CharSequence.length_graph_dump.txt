Line_2 $$ public int getEdgePosition(List<IElementType> tokens, boolean atStreamEdge, TokenTextGetter getter) -->Line_6 $$ while (pos < tokens.size() && tokens.get(pos) == PyTokenTypes.LINE_BREAK) [ FD ]
Line_6 $$ while (pos < tokens.size() && tokens.get(pos) == PyTokenTypes.LINE_BREAK) -->Line_12 $$ if (pos == tokens.size() || tokens.get(pos) != PyTokenTypes.END_OF_LINE_COMMENT) [ CD ]
Line_6 $$ while (pos < tokens.size() && tokens.get(pos) == PyTokenTypes.LINE_BREAK) -->Line_11 $$ pos++[ CD ]
Line_6 $$ while (pos < tokens.size() && tokens.get(pos) == PyTokenTypes.LINE_BREAK) -->Line_8 $$ if (charSequence.length() == 0 || charSequence.charAt(charSequence.length() - 1) != ' ') [ CD ]
Line_2 $$ public int getEdgePosition(List<IElementType> tokens, boolean atStreamEdge, TokenTextGetter getter) -->Line_3 $$ if (tokens.size() <= 1)[ CD ]
Line_6 $$ while (pos < tokens.size() && tokens.get(pos) == PyTokenTypes.LINE_BREAK) -->Line_7 $$ final CharSequence charSequence = getter.get(pos)[ CD ]
Line_2 $$ public int getEdgePosition(List<IElementType> tokens, boolean atStreamEdge, TokenTextGetter getter) -->Line_17 $$ return pos[ CD ]
Line_2 $$ public int getEdgePosition(List<IElementType> tokens, boolean atStreamEdge, TokenTextGetter getter) -->Line_12 $$ if (pos == tokens.size() || tokens.get(pos) != PyTokenTypes.END_OF_LINE_COMMENT) [ FD ]
Line_2 $$ public int getEdgePosition(List<IElementType> tokens, boolean atStreamEdge, TokenTextGetter getter) -->Line_7 $$ final CharSequence charSequence = getter.get(pos)[ FD ]
Line_5 $$ int pos = 0-->Line_7 $$ final CharSequence charSequence = getter.get(pos)[ FD ]
Line_2 $$ public int getEdgePosition(List<IElementType> tokens, boolean atStreamEdge, TokenTextGetter getter) -->Line_6 $$ while (pos < tokens.size() && tokens.get(pos) == PyTokenTypes.LINE_BREAK) [ CD ]
Line_5 $$ int pos = 0-->Line_6 $$ while (pos < tokens.size() && tokens.get(pos) == PyTokenTypes.LINE_BREAK) [ FD ]
Line_5 $$ int pos = 0-->Line_12 $$ if (pos == tokens.size() || tokens.get(pos) != PyTokenTypes.END_OF_LINE_COMMENT) [ FD ]
Line_5 $$ int pos = 0-->Line_11 $$ pos++[ FD ]
Line_6 $$ while (pos < tokens.size() && tokens.get(pos) == PyTokenTypes.LINE_BREAK) -->Line_15 $$ pos++[ CD ]
Line_7 $$ final CharSequence charSequence = getter.get(pos)-->Line_8 $$ if (charSequence.length() == 0 || charSequence.charAt(charSequence.length() - 1) != ' ') [ FD ]
Line_2 $$ public int getEdgePosition(List<IElementType> tokens, boolean atStreamEdge, TokenTextGetter getter) -->Line_5 $$ int pos = 0[ CD ]
Line_2 $$ public int getEdgePosition(List<IElementType> tokens, boolean atStreamEdge, TokenTextGetter getter) -->Line_3 $$ if (tokens.size() <= 1)[ FD ]
Line_3 $$ if (tokens.size() <= 1)-->Line_4 $$ return 0[ CD ]
Line_5 $$ int pos = 0-->Line_15 $$ pos++[ FD ]
