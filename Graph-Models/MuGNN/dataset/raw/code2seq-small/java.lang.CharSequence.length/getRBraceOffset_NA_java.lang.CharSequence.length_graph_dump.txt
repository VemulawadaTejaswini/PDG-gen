Line_7 $$ offset = calculateOffsetToInsertClosingBrace(file, text, offset).second-->Line_9 $$ return Math.min(offset, fileLength)[ FD ]
Line_2 $$ protected int getRBraceOffset(@NotNull final PsiFile file, @NotNull final Editor editor, int caretOffset) -->Line_7 $$ offset = calculateOffsetToInsertClosingBrace(file, text, offset).second[ FD ]
Line_4 $$ int offset = CharArrayUtil.shiftForward(text, caretOffset, " \t")-->Line_7 $$ offset = calculateOffsetToInsertClosingBrace(file, text, offset).second[ FD ]
Line_4 $$ int offset = CharArrayUtil.shiftForward(text, caretOffset, " \t")-->Line_6 $$ if (offset < fileLength && ")];,%<?".indexOf(text.charAt(offset)) < 0) [ FD ]
Line_3 $$ CharSequence text = editor.getDocument().getCharsSequence()-->Line_6 $$ if (offset < fileLength && ")];,%<?".indexOf(text.charAt(offset)) < 0) [ FD ]
Line_3 $$ CharSequence text = editor.getDocument().getCharsSequence()-->Line_4 $$ int offset = CharArrayUtil.shiftForward(text, caretOffset, " \t")[ FD ]
Line_4 $$ int offset = CharArrayUtil.shiftForward(text, caretOffset, " \t")-->Line_9 $$ return Math.min(offset, fileLength)[ FD ]
Line_6 $$ if (offset < fileLength && ")];,%<?".indexOf(text.charAt(offset)) < 0) -->Line_7 $$ offset = calculateOffsetToInsertClosingBrace(file, text, offset).second[ CD ]
Line_2 $$ protected int getRBraceOffset(@NotNull final PsiFile file, @NotNull final Editor editor, int caretOffset) -->Line_4 $$ int offset = CharArrayUtil.shiftForward(text, caretOffset, " \t")[ FD ]
Line_2 $$ protected int getRBraceOffset(@NotNull final PsiFile file, @NotNull final Editor editor, int caretOffset) -->Line_3 $$ CharSequence text = editor.getDocument().getCharsSequence()[ FD ]
Line_2 $$ protected int getRBraceOffset(@NotNull final PsiFile file, @NotNull final Editor editor, int caretOffset) -->Line_6 $$ if (offset < fileLength && ")];,%<?".indexOf(text.charAt(offset)) < 0) [ CD ]
Line_2 $$ protected int getRBraceOffset(@NotNull final PsiFile file, @NotNull final Editor editor, int caretOffset) -->Line_9 $$ return Math.min(offset, fileLength)[ CD ]
Line_3 $$ CharSequence text = editor.getDocument().getCharsSequence()-->Line_5 $$ final int fileLength = text.length()[ FD ]
Line_3 $$ CharSequence text = editor.getDocument().getCharsSequence()-->Line_7 $$ offset = calculateOffsetToInsertClosingBrace(file, text, offset).second[ FD ]
Line_5 $$ final int fileLength = text.length()-->Line_9 $$ return Math.min(offset, fileLength)[ FD ]
Line_2 $$ protected int getRBraceOffset(@NotNull final PsiFile file, @NotNull final Editor editor, int caretOffset) -->Line_5 $$ final int fileLength = text.length()[ CD ]
Line_2 $$ protected int getRBraceOffset(@NotNull final PsiFile file, @NotNull final Editor editor, int caretOffset) -->Line_3 $$ CharSequence text = editor.getDocument().getCharsSequence()[ CD ]
Line_2 $$ protected int getRBraceOffset(@NotNull final PsiFile file, @NotNull final Editor editor, int caretOffset) -->Line_4 $$ int offset = CharArrayUtil.shiftForward(text, caretOffset, " \t")[ CD ]
