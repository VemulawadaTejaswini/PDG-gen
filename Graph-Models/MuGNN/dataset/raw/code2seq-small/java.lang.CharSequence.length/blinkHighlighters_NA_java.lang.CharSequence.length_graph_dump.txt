Line_26 $$ offsetToScroll = range.getEndOffset() - 1-->Line_38 $$ if (offsetToScroll >= 0 && offsetToScroll < text.length() - 1 && text.charAt(offsetToScroll) != '\n') [ FD ]
Line_12 $$ int offsetToScroll = -1-->Line_21 $$ if (offsetToScroll < 0) [ FD ]
Line_24 $$ offsetToScroll = range.getStartOffset()-->Line_42 $$ myEditor.getScrollingModel().scrollTo(myEditor.offsetToLogicalPosition(offsetToScroll), ScrollType.RELATIVE)[ FD ]
Line_36 $$ offsetToScroll = myPreviewRangesToHighlight.get(0).getStartOffset()-->Line_42 $$ myEditor.getScrollingModel().scrollTo(myEditor.offsetToLogicalPosition(offsetToScroll), ScrollType.RELATIVE)[ FD ]
Line_16 $$ boolean scrollToChange = true-->Line_20 $$ scrollToChange = !rangeVisible[ FD ]
Line_2 $$ private void blinkHighlighters() -->Line_4 $$ if (myShowsPreviewHighlighters) [ CD ]
Line_5 $$ Rectangle visibleArea = myEditor.getScrollingModel().getVisibleArea()-->Line_6 $$ VisualPosition visualStart = myEditor.xyToVisualPosition(visibleArea.getLocation())[ FD ]
Line_12 $$ int offsetToScroll = -1-->Line_42 $$ myEditor.getScrollingModel().scrollTo(myEditor.offsetToLogicalPosition(offsetToScroll), ScrollType.RELATIVE)[ FD ]
Line_24 $$ offsetToScroll = range.getStartOffset()-->Line_38 $$ if (offsetToScroll >= 0 && offsetToScroll < text.length() - 1 && text.charAt(offsetToScroll) != '\n') [ FD ]
Line_13 $$ CharSequence text = myEditor.getDocument().getCharsSequence()-->Line_23 $$ if (text.charAt(range.getStartOffset()) != '\n') [ FD ]
Line_4 $$ if (myShowsPreviewHighlighters) -->Line_6 $$ VisualPosition visualStart = myEditor.xyToVisualPosition(visibleArea.getLocation())[ CD ]
Line_38 $$ if (offsetToScroll >= 0 && offsetToScroll < text.length() - 1 && text.charAt(offsetToScroll) != '\n') -->Line_39 $$ offsetToScroll++[ CD ]
Line_18 $$ if (scrollToChange) -->Line_20 $$ scrollToChange = !rangeVisible[ CD ]
Line_17 $$ for (TextRange range : myPreviewRangesToHighlight) -->Line_26 $$ offsetToScroll = range.getEndOffset() - 1[ FD ]
Line_41 $$ if (offsetToScroll >= 0 && offsetToScroll < myEditor.getDocument().getTextLength()) -->Line_42 $$ myEditor.getScrollingModel().scrollTo(myEditor.offsetToLogicalPosition(offsetToScroll), ScrollType.RELATIVE)[ CD ]
Line_24 $$ offsetToScroll = range.getStartOffset()-->Line_36 $$ offsetToScroll = myPreviewRangesToHighlight.get(0).getStartOffset()[ FD ]
Line_12 $$ int offsetToScroll = -1-->Line_26 $$ offsetToScroll = range.getEndOffset() - 1[ FD ]
Line_34 $$ if (scrollToChange) -->Line_38 $$ if (offsetToScroll >= 0 && offsetToScroll < text.length() - 1 && text.charAt(offsetToScroll) != '\n') [ CD ]
Line_3 $$ MarkupModel markupModel = myEditor.getMarkupModel()-->Line_32 $$ markupModel.addRangeHighlighter(range.getStartOffset(), range.getEndOffset(), HighlighterLayer.SELECTION, attributesToUse, HighlighterTargetArea.EXACT_RANGE)[ FD ]
Line_4 $$ if (myShowsPreviewHighlighters) -->Line_7 $$ VisualPosition visualEnd = myEditor.xyToVisualPosition(new Point(visibleArea.x + visibleArea.width, visibleArea.y + visibleArea.height))[ CD ]
Line_4 $$ if (myShowsPreviewHighlighters) -->Line_34 $$ if (scrollToChange) [ CD ]
Line_18 $$ if (scrollToChange) -->Line_19 $$ boolean rangeVisible = isWithinBounds(myEditor.offsetToVisualPosition(range.getStartOffset()), visualStart, visualEnd) || isWithinBounds(myEditor.offsetToVisualPosition(range.getEndOffset()), visualStart, visualEnd)[ CD ]
Line_34 $$ if (scrollToChange) -->Line_41 $$ if (offsetToScroll >= 0 && offsetToScroll < myEditor.getDocument().getTextLength()) [ CD ]
Line_34 $$ if (scrollToChange) -->Line_35 $$ if (offsetToScroll < 0 && !myPreviewRangesToHighlight.isEmpty()) [ CD ]
Line_6 $$ VisualPosition visualStart = myEditor.xyToVisualPosition(visibleArea.getLocation())-->Line_19 $$ boolean rangeVisible = isWithinBounds(myEditor.offsetToVisualPosition(range.getStartOffset()), visualStart, visualEnd) || isWithinBounds(myEditor.offsetToVisualPosition(range.getEndOffset()), visualStart, visualEnd)[ FD ]
Line_35 $$ if (offsetToScroll < 0 && !myPreviewRangesToHighlight.isEmpty()) -->Line_36 $$ offsetToScroll = myPreviewRangesToHighlight.get(0).getStartOffset()[ CD ]
Line_31 $$ TextAttributes attributesToUse = range.getLength() > 0 ? backgroundAttributes : borderAttributes-->Line_32 $$ markupModel.addRangeHighlighter(range.getStartOffset(), range.getEndOffset(), HighlighterLayer.SELECTION, attributesToUse, HighlighterTargetArea.EXACT_RANGE)[ FD ]
Line_4 $$ if (myShowsPreviewHighlighters) -->Line_46 $$ markupModel.removeAllHighlighters()[ CD ]
Line_4 $$ if (myShowsPreviewHighlighters) -->Line_15 $$ TextAttributes borderAttributes = new TextAttributes(null, null, backgroundAttributes.getBackgroundColor(), EffectType.BOXED, Font.PLAIN)[ CD ]
Line_14 $$ TextAttributes backgroundAttributes = myEditor.getColorsScheme().getAttributes(EditorColors.SEARCH_RESULT_ATTRIBUTES)-->Line_15 $$ TextAttributes borderAttributes = new TextAttributes(null, null, backgroundAttributes.getBackgroundColor(), EffectType.BOXED, Font.PLAIN)[ FD ]
Line_4 $$ if (myShowsPreviewHighlighters) -->Line_8 $$ int endColumnCandidate = visibleArea.width / EditorUtil.getSpaceWidth(Font.PLAIN, myEditor) + visualStart.column[ CD ]
Line_19 $$ boolean rangeVisible = isWithinBounds(myEditor.offsetToVisualPosition(range.getStartOffset()), visualStart, visualEnd) || isWithinBounds(myEditor.offsetToVisualPosition(range.getEndOffset()), visualStart, visualEnd)-->Line_20 $$ scrollToChange = !rangeVisible[ FD ]
Line_21 $$ if (offsetToScroll < 0) -->Line_22 $$ if (offsetToScroll < 0) [ CD ]
Line_23 $$ if (text.charAt(range.getStartOffset()) != '\n') -->Line_24 $$ offsetToScroll = range.getStartOffset()[ CD ]
Line_4 $$ if (myShowsPreviewHighlighters) -->Line_5 $$ Rectangle visibleArea = myEditor.getScrollingModel().getVisibleArea()[ CD ]
Line_17 $$ for (TextRange range : myPreviewRangesToHighlight) -->Line_24 $$ offsetToScroll = range.getStartOffset()[ FD ]
Line_17 $$ for (TextRange range : myPreviewRangesToHighlight) -->Line_25 $$ if (range.getEndOffset() > 0 && text.charAt(range.getEndOffset() - 1) != '\n') [ FD ]
Line_22 $$ if (offsetToScroll < 0) -->Line_23 $$ if (text.charAt(range.getStartOffset()) != '\n') [ CD ]
Line_12 $$ int offsetToScroll = -1-->Line_22 $$ if (offsetToScroll < 0) [ FD ]
Line_17 $$ for (TextRange range : myPreviewRangesToHighlight) -->Line_32 $$ markupModel.addRangeHighlighter(range.getStartOffset(), range.getEndOffset(), HighlighterLayer.SELECTION, attributesToUse, HighlighterTargetArea.EXACT_RANGE)[ FD ]
Line_26 $$ offsetToScroll = range.getEndOffset() - 1-->Line_36 $$ offsetToScroll = myPreviewRangesToHighlight.get(0).getStartOffset()[ FD ]
Line_13 $$ CharSequence text = myEditor.getDocument().getCharsSequence()-->Line_38 $$ if (offsetToScroll >= 0 && offsetToScroll < text.length() - 1 && text.charAt(offsetToScroll) != '\n') [ FD ]
Line_4 $$ if (myShowsPreviewHighlighters) -->Line_16 $$ boolean scrollToChange = true[ CD ]
Line_12 $$ int offsetToScroll = -1-->Line_38 $$ if (offsetToScroll >= 0 && offsetToScroll < text.length() - 1 && text.charAt(offsetToScroll) != '\n') [ FD ]
Line_3 $$ MarkupModel markupModel = myEditor.getMarkupModel()-->Line_46 $$ markupModel.removeAllHighlighters()[ FD ]
Line_24 $$ offsetToScroll = range.getStartOffset()-->Line_26 $$ offsetToScroll = range.getEndOffset() - 1[ FD ]
Line_4 $$ if (myShowsPreviewHighlighters) -->Line_12 $$ int offsetToScroll = -1[ CD ]
Line_12 $$ int offsetToScroll = -1-->Line_36 $$ offsetToScroll = myPreviewRangesToHighlight.get(0).getStartOffset()[ FD ]
Line_24 $$ offsetToScroll = range.getStartOffset()-->Line_39 $$ offsetToScroll++[ FD ]
Line_4 $$ if (myShowsPreviewHighlighters) -->Line_13 $$ CharSequence text = myEditor.getDocument().getCharsSequence()[ CD ]
Line_26 $$ offsetToScroll = range.getEndOffset() - 1-->Line_39 $$ offsetToScroll++[ FD ]
Line_26 $$ offsetToScroll = range.getEndOffset() - 1-->Line_42 $$ myEditor.getScrollingModel().scrollTo(myEditor.offsetToLogicalPosition(offsetToScroll), ScrollType.RELATIVE)[ FD ]
Line_17 $$ for (TextRange range : myPreviewRangesToHighlight) -->Line_31 $$ TextAttributes attributesToUse = range.getLength() > 0 ? backgroundAttributes : borderAttributes[ FD ]
Line_2 $$ private void blinkHighlighters() -->Line_3 $$ MarkupModel markupModel = myEditor.getMarkupModel()[ CD ]
Line_23 $$ if (text.charAt(range.getStartOffset()) != '\n') -->Line_25 $$ if (range.getEndOffset() > 0 && text.charAt(range.getEndOffset() - 1) != '\n') [ CD ]
Line_12 $$ int offsetToScroll = -1-->Line_39 $$ offsetToScroll++[ FD ]
Line_36 $$ offsetToScroll = myPreviewRangesToHighlight.get(0).getStartOffset()-->Line_39 $$ offsetToScroll++[ FD ]
Line_4 $$ if (myShowsPreviewHighlighters) -->Line_9 $$ if (endColumnCandidate > visualEnd.column) [ CD ]
Line_7 $$ VisualPosition visualEnd = myEditor.xyToVisualPosition(new Point(visibleArea.x + visibleArea.width, visibleArea.y + visibleArea.height))-->Line_19 $$ boolean rangeVisible = isWithinBounds(myEditor.offsetToVisualPosition(range.getStartOffset()), visualStart, visualEnd) || isWithinBounds(myEditor.offsetToVisualPosition(range.getEndOffset()), visualStart, visualEnd)[ FD ]
Line_12 $$ int offsetToScroll = -1-->Line_24 $$ offsetToScroll = range.getStartOffset()[ FD ]
Line_25 $$ if (range.getEndOffset() > 0 && text.charAt(range.getEndOffset() - 1) != '\n') -->Line_26 $$ offsetToScroll = range.getEndOffset() - 1[ CD ]
Line_17 $$ for (TextRange range : myPreviewRangesToHighlight) -->Line_19 $$ boolean rangeVisible = isWithinBounds(myEditor.offsetToVisualPosition(range.getStartOffset()), visualStart, visualEnd) || isWithinBounds(myEditor.offsetToVisualPosition(range.getEndOffset()), visualStart, visualEnd)[ FD ]
Line_36 $$ offsetToScroll = myPreviewRangesToHighlight.get(0).getStartOffset()-->Line_38 $$ if (offsetToScroll >= 0 && offsetToScroll < text.length() - 1 && text.charAt(offsetToScroll) != '\n') [ FD ]
Line_7 $$ VisualPosition visualEnd = myEditor.xyToVisualPosition(new Point(visibleArea.x + visibleArea.width, visibleArea.y + visibleArea.height))-->Line_10 $$ visualEnd = new VisualPosition(visualEnd.line, endColumnCandidate)[ FD ]
Line_4 $$ if (myShowsPreviewHighlighters) -->Line_14 $$ TextAttributes backgroundAttributes = myEditor.getColorsScheme().getAttributes(EditorColors.SEARCH_RESULT_ATTRIBUTES)[ CD ]
Line_10 $$ visualEnd = new VisualPosition(visualEnd.line, endColumnCandidate)-->Line_19 $$ boolean rangeVisible = isWithinBounds(myEditor.offsetToVisualPosition(range.getStartOffset()), visualStart, visualEnd) || isWithinBounds(myEditor.offsetToVisualPosition(range.getEndOffset()), visualStart, visualEnd)[ FD ]
Line_17 $$ for (TextRange range : myPreviewRangesToHighlight) -->Line_23 $$ if (text.charAt(range.getStartOffset()) != '\n') [ FD ]
Line_8 $$ int endColumnCandidate = visibleArea.width / EditorUtil.getSpaceWidth(Font.PLAIN, myEditor) + visualStart.column-->Line_9 $$ if (endColumnCandidate > visualEnd.column) [ FD ]
Line_9 $$ if (endColumnCandidate > visualEnd.column) -->Line_10 $$ visualEnd = new VisualPosition(visualEnd.line, endColumnCandidate)[ CD ]
Line_18 $$ if (scrollToChange) -->Line_21 $$ if (offsetToScroll < 0) [ CD ]
Line_13 $$ CharSequence text = myEditor.getDocument().getCharsSequence()-->Line_25 $$ if (range.getEndOffset() > 0 && text.charAt(range.getEndOffset() - 1) != '\n') [ FD ]
