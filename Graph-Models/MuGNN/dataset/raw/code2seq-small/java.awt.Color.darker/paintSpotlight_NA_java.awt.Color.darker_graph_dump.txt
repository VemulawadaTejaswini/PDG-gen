Line_29 $$ Graphics2D g2 = (Graphics2D) clip-->Line_37 $$ g2.draw(mask)[ FD ]
Line_2 $$ public void paintSpotlight(final Graphics g, final JComponent surfaceComponent) -->Line_7 $$ final Point leftPoint = SwingUtilities.convertPoint(myPanel, new Point(visibleRect.x, visibleRect.y), surfaceComponent)[ FD ]
Line_11 $$ final Area area = getComponentArea(surfaceComponent, lightComponent, 1)-->Line_25 $$ mask.subtract(area)[ FD ]
Line_2 $$ public void paintSpotlight(final Graphics g, final JComponent surfaceComponent) -->Line_32 $$ Color background = surfaceComponent.getBackground()[ FD ]
Line_4 $$ if (myLightComponents.size() > 0) -->Line_7 $$ final Point leftPoint = SwingUtilities.convertPoint(myPanel, new Point(visibleRect.x, visibleRect.y), surfaceComponent)[ CD ]
Line_32 $$ Color background = surfaceComponent.getBackground()-->Line_33 $$ g2.setColor(ColorUtil.toAlpha(background == null ? null : background.darker(), 100))[ FD ]
Line_29 $$ Graphics2D g2 = (Graphics2D) clip-->Line_36 $$ g2.setColor(ColorUtil.toAlpha(JBColor.ORANGE, 100))[ FD ]
Line_4 $$ if (myLightComponents.size() > 0) -->Line_8 $$ Area innerPanel = new Area(new Rectangle2D.Double(leftPoint.x, leftPoint.y, visibleRect.width, visibleRect.height))[ CD ]
Line_9 $$ Area mask = new Area(new Rectangle(-stroke, -stroke, 2 * stroke + size.width, 2 * stroke + size.height))-->Line_37 $$ g2.draw(mask)[ FD ]
Line_14 $$ if (lightComponent instanceof JLabel) -->Line_16 $$ final Component labelFor = label.getLabelFor()[ CD ]
Line_29 $$ Graphics2D g2 = (Graphics2D) clip-->Line_35 $$ g2.setStroke(new BasicStroke(stroke))[ FD ]
Line_11 $$ final Area area = getComponentArea(surfaceComponent, lightComponent, 1)-->Line_12 $$ if (area == null)[ FD ]
Line_29 $$ Graphics2D g2 = (Graphics2D) clip-->Line_30 $$ g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON)[ FD ]
Line_2 $$ public void paintSpotlight(final Graphics g, final JComponent surfaceComponent) -->Line_11 $$ final Area area = getComponentArea(surfaceComponent, lightComponent, 1)[ FD ]
Line_16 $$ final Component labelFor = label.getLabelFor()-->Line_17 $$ if (labelFor instanceof JComponent) [ FD ]
Line_29 $$ Graphics2D g2 = (Graphics2D) clip-->Line_34 $$ g2.fill(mask)[ FD ]
Line_2 $$ public void paintSpotlight(final Graphics g, final JComponent surfaceComponent) -->Line_3 $$ Dimension size = surfaceComponent.getSize()[ FD ]
Line_2 $$ public void paintSpotlight(final Graphics g, final JComponent surfaceComponent) -->Line_3 $$ Dimension size = surfaceComponent.getSize()[ CD ]
Line_2 $$ public void paintSpotlight(final Graphics g, final JComponent surfaceComponent) -->Line_18 $$ final Area labelForArea = getComponentArea(surfaceComponent, (JComponent) labelFor, 1)[ FD ]
Line_15 $$ final JLabel label = (JLabel) lightComponent-->Line_16 $$ final Component labelFor = label.getLabelFor()[ FD ]
Line_4 $$ if (myLightComponents.size() > 0) -->Line_27 $$ Graphics clip = g.create(0, 0, size.width, size.height)[ CD ]
Line_4 $$ if (myLightComponents.size() > 0) -->Line_5 $$ int stroke = 2[ CD ]
Line_4 $$ if (myLightComponents.size() > 0) -->Line_9 $$ Area mask = new Area(new Rectangle(-stroke, -stroke, 2 * stroke + size.width, 2 * stroke + size.height))[ CD ]
Line_17 $$ if (labelFor instanceof JComponent) -->Line_19 $$ if (labelForArea != null) [ CD ]
Line_9 $$ Area mask = new Area(new Rectangle(-stroke, -stroke, 2 * stroke + size.width, 2 * stroke + size.height))-->Line_25 $$ mask.subtract(area)[ FD ]
Line_4 $$ if (myLightComponents.size() > 0) -->Line_6 $$ final Rectangle visibleRect = myPanel.getVisibleRect()[ CD ]
Line_11 $$ final Area area = getComponentArea(surfaceComponent, lightComponent, 1)-->Line_20 $$ area.add(labelForArea)[ FD ]
Line_9 $$ Area mask = new Area(new Rectangle(-stroke, -stroke, 2 * stroke + size.width, 2 * stroke + size.height))-->Line_34 $$ g2.fill(mask)[ FD ]
Line_17 $$ if (labelFor instanceof JComponent) -->Line_18 $$ final Area labelForArea = getComponentArea(surfaceComponent, (JComponent) labelFor, 1)[ CD ]
Line_14 $$ if (lightComponent instanceof JLabel) -->Line_17 $$ if (labelFor instanceof JComponent) [ CD ]
Line_10 $$ for (JComponent lightComponent : myLightComponents) -->Line_11 $$ final Area area = getComponentArea(surfaceComponent, lightComponent, 1)[ FD ]
Line_8 $$ Area innerPanel = new Area(new Rectangle2D.Double(leftPoint.x, leftPoint.y, visibleRect.width, visibleRect.height))-->Line_24 $$ area.intersect(innerPanel)[ FD ]
Line_2 $$ public void paintSpotlight(final Graphics g, final JComponent surfaceComponent) -->Line_27 $$ Graphics clip = g.create(0, 0, size.width, size.height)[ FD ]
Line_18 $$ final Area labelForArea = getComponentArea(surfaceComponent, (JComponent) labelFor, 1)-->Line_20 $$ area.add(labelForArea)[ FD ]
Line_10 $$ for (JComponent lightComponent : myLightComponents) -->Line_14 $$ if (lightComponent instanceof JLabel) [ FD ]
Line_29 $$ Graphics2D g2 = (Graphics2D) clip-->Line_33 $$ g2.setColor(ColorUtil.toAlpha(background == null ? null : background.darker(), 100))[ FD ]
Line_5 $$ int stroke = 2-->Line_9 $$ Area mask = new Area(new Rectangle(-stroke, -stroke, 2 * stroke + size.width, 2 * stroke + size.height))[ FD ]
Line_19 $$ if (labelForArea != null) -->Line_20 $$ area.add(labelForArea)[ CD ]
Line_11 $$ final Area area = getComponentArea(surfaceComponent, lightComponent, 1)-->Line_24 $$ area.intersect(innerPanel)[ FD ]
Line_29 $$ Graphics2D g2 = (Graphics2D) clip-->Line_31 $$ g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_NORMALIZE)[ FD ]
Line_2 $$ public void paintSpotlight(final Graphics g, final JComponent surfaceComponent) -->Line_4 $$ if (myLightComponents.size() > 0) [ CD ]
Line_14 $$ if (lightComponent instanceof JLabel) -->Line_15 $$ final JLabel label = (JLabel) lightComponent[ CD ]
Line_18 $$ final Area labelForArea = getComponentArea(surfaceComponent, (JComponent) labelFor, 1)-->Line_19 $$ if (labelForArea != null) [ FD ]
Line_27 $$ Graphics clip = g.create(0, 0, size.width, size.height)-->Line_39 $$ clip.dispose()[ FD ]
