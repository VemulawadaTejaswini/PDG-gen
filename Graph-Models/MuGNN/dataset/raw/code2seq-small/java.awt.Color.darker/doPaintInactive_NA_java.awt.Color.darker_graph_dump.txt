Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_53 $$ shape.quadTo(rightX + 1, topY, rightX + 1, topY + shape.deltaY(arc))[ FD ]
Line_18 $$ final TabInfo prev = myLastLayoutPass.getPreviousFor(myVisibleInfos.get(tabIndex))-->Line_22 $$ firstShowing = myInfo2Label.get(prev).getBounds().width == 0[ FD ]
Line_51 $$ if (lastShowing) -->Line_54 $$ shape.lineTo(rightX + 1, bottomY)[ CD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_76 $$ g2d.setPaint(old)[ CD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_70 $$ g2d.fill(shape.getShape())[ FD ]
Line_79 $$ if (!rightEdge) -->Line_80 $$ g2d.setColor(rightBlockColor)[ CD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_77 $$ g2d.setColor(topBlockColor)[ CD ]
Line_79 $$ if (!rightEdge) -->Line_81 $$ g2d.draw(shape.transformLine(rightX - shape.deltaX(1), topY + shape.deltaY(arc - 1), rightX - shape.deltaX(1), bottomY))[ CD ]
Line_31 $$ int topY = shape.getY() + shape.deltaY(selectionTabVShift)-->Line_42 $$ shape.quadTo(leftX, topY, leftX + shape.deltaX(getEdgeArcSize()), topY)[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_83 $$ g2d.setColor(boundsColor)[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_6 $$ Color rightBlockColor = getRightBlockColor()[ CD ]
Line_31 $$ int topY = shape.getY() + shape.deltaY(selectionTabVShift)-->Line_48 $$ shape.quadTo(rightX, topY, rightX, topY + shape.deltaY(arc))[ FD ]
Line_30 $$ int leftX = firstShowing ? shape.getX() : shape.getX() - shape.deltaX(arc + 1)-->Line_63 $$ shape.lineTo(leftX, bottomY)[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_21 $$ if (!firstShowing && !leftGhostExists) [ CD ]
Line_31 $$ int topY = shape.getY() + shape.deltaY(selectionTabVShift)-->Line_38 $$ shape.quadTo(leftX, topY, leftX + shape.deltaX(arc), topY)[ FD ]
Line_3 $$ int tabIndex = myVisibleInfos.indexOf(label.getInfo())-->Line_18 $$ final TabInfo prev = myLastLayoutPass.getPreviousFor(myVisibleInfos.get(tabIndex))[ FD ]
Line_20 $$ boolean firstShowing = prev == null-->Line_35 $$ if (border.left > 0 || leftGhostExists || !firstShowing) [ FD ]
Line_35 $$ if (border.left > 0 || leftGhostExists || !firstShowing) -->Line_38 $$ shape.quadTo(leftX, topY, leftX + shape.deltaX(arc), topY)[ CD ]
Line_73 $$ final Paint old = g2d.getPaint()-->Line_76 $$ g2d.setPaint(old)[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_77 $$ g2d.setColor(topBlockColor)[ FD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_62 $$ shape.lineTo(leftX, bottomY + shape.deltaY(getArcSize()))[ FD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_37 $$ shape.lineTo(leftX, topY + shape.deltaY(arc))[ FD ]
Line_60 $$ if (!info.isInSelectionRow(label.getInfo())) -->Line_61 $$ shape.lineTo(rightX, bottomY + shape.deltaY(getArcSize()))[ CD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_84 $$ g2d.draw(shape.getShape())[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_46 $$ if (border.right > 0 || rightGhostExists || !lastShowing || !Boolean.TRUE.equals(label.getClientProperty(STRETCHED_BY_WIDTH))) [ CD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)[ CD ]
Line_58 $$ if (!isSingleRow()) -->Line_59 $$ final TablePassInfo info = myTableLayout.myLastTableLayout[ CD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_75 $$ g2d.fill(shape.getShape())[ CD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_84 $$ g2d.draw(shape.getShape())[ FD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_33 $$ int bottomY = shape.getMaxY() + shape.deltaY(1)[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_25 $$ if (!lastShowing) [ CD ]
Line_10 $$ if (tabColor != null) -->Line_11 $$ backgroundColor = tabColor[ CD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_17 $$ final int selectionTabVShift = getSelectionTabVShift()[ CD ]
Line_31 $$ int topY = shape.getY() + shape.deltaY(selectionTabVShift)-->Line_52 $$ shape.lineTo(rightX - shape.deltaX(arc), topY)[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_4 $$ final int arc = getArcSize()[ CD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_67 $$ shape.lineTo(leftX, bottomY)[ FD ]
Line_6 $$ Color rightBlockColor = getRightBlockColor()-->Line_14 $$ rightBlockColor = tabColor[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_45 $$ boolean rightEdge = false[ CD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_9 $$ final Color tabColor = label.getInfo().getTabColor()[ CD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_54 $$ shape.lineTo(rightX + 1, bottomY)[ FD ]
Line_20 $$ boolean firstShowing = prev == null-->Line_21 $$ if (!firstShowing && !leftGhostExists) [ FD ]
Line_4 $$ final int arc = getArcSize()-->Line_38 $$ shape.quadTo(leftX, topY, leftX + shape.deltaX(arc), topY)[ FD ]
Line_30 $$ int leftX = firstShowing ? shape.getX() : shape.getX() - shape.deltaX(arc + 1)-->Line_41 $$ shape.moveTo(leftX, topY + shape.deltaY(getEdgeArcSize()))[ FD ]
Line_60 $$ if (!info.isInSelectionRow(label.getInfo())) -->Line_62 $$ shape.lineTo(leftX, bottomY + shape.deltaY(getArcSize()))[ CD ]
Line_14 $$ rightBlockColor = tabColor-->Line_80 $$ g2d.setColor(rightBlockColor)[ FD ]
Line_9 $$ final Color tabColor = label.getInfo().getTabColor()-->Line_10 $$ if (tabColor != null) [ FD ]
Line_35 $$ if (border.left > 0 || leftGhostExists || !firstShowing) -->Line_40 $$ if (firstShowing) [ CD ]
Line_55 $$ rightEdge = true-->Line_66 $$ if (!rightEdge) [ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_24 $$ boolean lastShowing = next == null[ CD ]
Line_10 $$ if (tabColor != null) -->Line_14 $$ rightBlockColor = tabColor[ CD ]
Line_9 $$ final Color tabColor = label.getInfo().getTabColor()-->Line_11 $$ backgroundColor = tabColor[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_84 $$ g2d.draw(shape.getShape())[ CD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_30 $$ int leftX = firstShowing ? shape.getX() : shape.getX() - shape.deltaX(arc + 1)[ CD ]
Line_33 $$ int bottomY = shape.getMaxY() + shape.deltaY(1)-->Line_49 $$ shape.lineTo(rightX, bottomY)[ FD ]
Line_26 $$ lastShowing = myInfo2Label.get(next).getBounds().width == 0-->Line_32 $$ int rightX = !lastShowing && leftFromSelection ? shape.getMaxX() + shape.deltaX(arc + 1) : shape.getMaxX()[ FD ]
Line_30 $$ int leftX = firstShowing ? shape.getX() : shape.getX() - shape.deltaX(arc + 1)-->Line_36 $$ shape.moveTo(leftX, bottomY)[ FD ]
Line_8 $$ Color backgroundColor = getBackground()-->Line_72 $$ final Paint gp = UIUtil.isUnderDarcula() ? UIUtil.getGradientPaint(gradientLine.x1, gradientLine.y1, shape.transformY1(backgroundColor, backgroundColor), gradientLine.x2, gradientLine.y2, shape.transformY1(backgroundColor, backgroundColor)) : UIUtil.getGradientPaint(gradientLine.x1, gradientLine.y1, shape.transformY1(backgroundColor.brighter().brighter(), backgroundColor), gradientLine.x2, gradientLine.y2, shape.transformY1(backgroundColor, backgroundColor.brighter().brighter()))[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_76 $$ g2d.setPaint(old)[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_80 $$ g2d.setColor(rightBlockColor)[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_58 $$ if (!isSingleRow()) [ CD ]
Line_30 $$ int leftX = firstShowing ? shape.getX() : shape.getX() - shape.deltaX(arc + 1)-->Line_42 $$ shape.quadTo(leftX, topY, leftX + shape.deltaX(getEdgeArcSize()), topY)[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_33 $$ int bottomY = shape.getMaxY() + shape.deltaY(1)[ CD ]
Line_13 $$ topBlockColor = tabColor.brighter().brighter()-->Line_77 $$ g2d.setColor(topBlockColor)[ FD ]
Line_45 $$ boolean rightEdge = false-->Line_55 $$ rightEdge = true[ FD ]
Line_33 $$ int bottomY = shape.getMaxY() + shape.deltaY(1)-->Line_36 $$ shape.moveTo(leftX, bottomY)[ FD ]
Line_59 $$ final TablePassInfo info = myTableLayout.myLastTableLayout-->Line_60 $$ if (!info.isInSelectionRow(label.getInfo())) [ FD ]
Line_7 $$ Color boundsColor = getBoundsColor()-->Line_83 $$ g2d.setColor(boundsColor)[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_78 $$ g2d.draw(shape.transformLine(leftX + shape.deltaX(arc + 1), topY + shape.deltaY(1), rightX - shape.deltaX(arc - 1), topY + shape.deltaY(1)))[ CD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_71 $$ final Line2D.Float gradientLine = shape.transformLine(0, topY, 0, topY + shape.deltaY((int) (shape.getHeight() / 1.5)))[ CD ]
Line_45 $$ boolean rightEdge = false-->Line_66 $$ if (!rightEdge) [ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_75 $$ g2d.fill(shape.getShape())[ FD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_75 $$ g2d.fill(shape.getShape())[ FD ]
Line_9 $$ final Color tabColor = label.getInfo().getTabColor()-->Line_12 $$ boundsColor = tabColor.darker()[ FD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_71 $$ final Line2D.Float gradientLine = shape.transformLine(0, topY, 0, topY + shape.deltaY((int) (shape.getHeight() / 1.5)))[ FD ]
Line_9 $$ final Color tabColor = label.getInfo().getTabColor()-->Line_14 $$ rightBlockColor = tabColor[ FD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_30 $$ int leftX = firstShowing ? shape.getX() : shape.getX() - shape.deltaX(arc + 1)[ FD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_61 $$ shape.lineTo(rightX, bottomY + shape.deltaY(getArcSize()))[ FD ]
Line_8 $$ Color backgroundColor = getBackground()-->Line_69 $$ g2d.setColor(backgroundColor)[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_81 $$ g2d.draw(shape.transformLine(rightX - shape.deltaX(1), topY + shape.deltaY(arc - 1), rightX - shape.deltaX(1), bottomY))[ FD ]
Line_31 $$ int topY = shape.getY() + shape.deltaY(selectionTabVShift)-->Line_71 $$ final Line2D.Float gradientLine = shape.transformLine(0, topY, 0, topY + shape.deltaY((int) (shape.getHeight() / 1.5)))[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_83 $$ g2d.setColor(boundsColor)[ CD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_8 $$ Color backgroundColor = getBackground()[ CD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_19 $$ final TabInfo next = myLastLayoutPass.getNextFor(myVisibleInfos.get(tabIndex))[ CD ]
Line_7 $$ Color boundsColor = getBoundsColor()-->Line_12 $$ boundsColor = tabColor.darker()[ FD ]
Line_35 $$ if (border.left > 0 || leftGhostExists || !firstShowing) -->Line_36 $$ shape.moveTo(leftX, bottomY)[ CD ]
Line_30 $$ int leftX = firstShowing ? shape.getX() : shape.getX() - shape.deltaX(arc + 1)-->Line_62 $$ shape.lineTo(leftX, bottomY + shape.deltaY(getArcSize()))[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_35 $$ if (border.left > 0 || leftGhostExists || !firstShowing) [ CD ]
Line_31 $$ int topY = shape.getY() + shape.deltaY(selectionTabVShift)-->Line_53 $$ shape.quadTo(rightX + 1, topY, rightX + 1, topY + shape.deltaY(arc))[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_66 $$ if (!rightEdge) [ CD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_32 $$ int rightX = !lastShowing && leftFromSelection ? shape.getMaxX() + shape.deltaX(arc + 1) : shape.getMaxX()[ CD ]
Line_46 $$ if (border.right > 0 || rightGhostExists || !lastShowing || !Boolean.TRUE.equals(label.getClientProperty(STRETCHED_BY_WIDTH))) -->Line_47 $$ shape.lineTo(rightX - shape.deltaX(arc), topY)[ CD ]
Line_72 $$ final Paint gp = UIUtil.isUnderDarcula() ? UIUtil.getGradientPaint(gradientLine.x1, gradientLine.y1, shape.transformY1(backgroundColor, backgroundColor), gradientLine.x2, gradientLine.y2, shape.transformY1(backgroundColor, backgroundColor)) : UIUtil.getGradientPaint(gradientLine.x1, gradientLine.y1, shape.transformY1(backgroundColor.brighter().brighter(), backgroundColor), gradientLine.x2, gradientLine.y2, shape.transformY1(backgroundColor, backgroundColor.brighter().brighter()))-->Line_74 $$ g2d.setPaint(gp)[ FD ]
Line_60 $$ if (!info.isInSelectionRow(label.getInfo())) -->Line_63 $$ shape.lineTo(leftX, bottomY)[ CD ]
Line_11 $$ backgroundColor = tabColor-->Line_69 $$ g2d.setColor(backgroundColor)[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_5 $$ Color topBlockColor = getTopBlockColor()[ CD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_74 $$ g2d.setPaint(gp)[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_3 $$ int tabIndex = myVisibleInfos.indexOf(label.getInfo())[ FD ]
Line_9 $$ final Color tabColor = label.getInfo().getTabColor()-->Line_13 $$ topBlockColor = tabColor.brighter().brighter()[ FD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_70 $$ g2d.fill(shape.getShape())[ FD ]
Line_33 $$ int bottomY = shape.getMaxY() + shape.deltaY(1)-->Line_67 $$ shape.lineTo(leftX, bottomY)[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_3 $$ int tabIndex = myVisibleInfos.indexOf(label.getInfo())[ CD ]
Line_8 $$ Color backgroundColor = getBackground()-->Line_11 $$ backgroundColor = tabColor[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_9 $$ final Color tabColor = label.getInfo().getTabColor()[ FD ]
Line_21 $$ if (!firstShowing && !leftGhostExists) -->Line_22 $$ firstShowing = myInfo2Label.get(prev).getBounds().width == 0[ CD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_78 $$ g2d.draw(shape.transformLine(leftX + shape.deltaX(arc + 1), topY + shape.deltaY(1), rightX - shape.deltaX(arc - 1), topY + shape.deltaY(1)))[ FD ]
Line_30 $$ int leftX = firstShowing ? shape.getX() : shape.getX() - shape.deltaX(arc + 1)-->Line_38 $$ shape.quadTo(leftX, topY, leftX + shape.deltaX(arc), topY)[ FD ]
Line_3 $$ int tabIndex = myVisibleInfos.indexOf(label.getInfo())-->Line_19 $$ final TabInfo next = myLastLayoutPass.getNextFor(myVisibleInfos.get(tabIndex))[ FD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_38 $$ shape.quadTo(leftX, topY, leftX + shape.deltaX(arc), topY)[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_70 $$ g2d.fill(shape.getShape())[ CD ]
Line_20 $$ boolean firstShowing = prev == null-->Line_22 $$ firstShowing = myInfo2Label.get(prev).getBounds().width == 0[ FD ]
Line_32 $$ int rightX = !lastShowing && leftFromSelection ? shape.getMaxX() + shape.deltaX(arc + 1) : shape.getMaxX()-->Line_49 $$ shape.lineTo(rightX, bottomY)[ FD ]
Line_4 $$ final int arc = getArcSize()-->Line_37 $$ shape.lineTo(leftX, topY + shape.deltaY(arc))[ FD ]
Line_33 $$ int bottomY = shape.getMaxY() + shape.deltaY(1)-->Line_63 $$ shape.lineTo(leftX, bottomY)[ FD ]
Line_25 $$ if (!lastShowing) -->Line_26 $$ lastShowing = myInfo2Label.get(next).getBounds().width == 0[ CD ]
Line_58 $$ if (!isSingleRow()) -->Line_60 $$ if (!info.isInSelectionRow(label.getInfo())) [ CD ]
Line_24 $$ boolean lastShowing = next == null-->Line_32 $$ int rightX = !lastShowing && leftFromSelection ? shape.getMaxX() + shape.deltaX(arc + 1) : shape.getMaxX()[ FD ]
Line_26 $$ lastShowing = myInfo2Label.get(next).getBounds().width == 0-->Line_46 $$ if (border.right > 0 || rightGhostExists || !lastShowing || !Boolean.TRUE.equals(label.getClientProperty(STRETCHED_BY_WIDTH))) [ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_16 $$ final TabInfo selected = getSelectedInfo()[ CD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_18 $$ final TabInfo prev = myLastLayoutPass.getPreviousFor(myVisibleInfos.get(tabIndex))[ CD ]
Line_51 $$ if (lastShowing) -->Line_55 $$ rightEdge = true[ CD ]
Line_10 $$ if (tabColor != null) -->Line_12 $$ boundsColor = tabColor.darker()[ CD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_28 $$ boolean leftFromSelection = selected != null && tabIndex == myVisibleInfos.indexOf(selected) - 1[ CD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_20 $$ boolean firstShowing = prev == null[ CD ]
Line_24 $$ boolean lastShowing = next == null-->Line_26 $$ lastShowing = myInfo2Label.get(next).getBounds().width == 0[ FD ]
Line_33 $$ int bottomY = shape.getMaxY() + shape.deltaY(1)-->Line_54 $$ shape.lineTo(rightX + 1, bottomY)[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_72 $$ final Paint gp = UIUtil.isUnderDarcula() ? UIUtil.getGradientPaint(gradientLine.x1, gradientLine.y1, shape.transformY1(backgroundColor, backgroundColor), gradientLine.x2, gradientLine.y2, shape.transformY1(backgroundColor, backgroundColor)) : UIUtil.getGradientPaint(gradientLine.x1, gradientLine.y1, shape.transformY1(backgroundColor.brighter().brighter(), backgroundColor), gradientLine.x2, gradientLine.y2, shape.transformY1(backgroundColor, backgroundColor.brighter().brighter()))[ CD ]
Line_12 $$ boundsColor = tabColor.darker()-->Line_83 $$ g2d.setColor(boundsColor)[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_34 $$ Insets border = myBorder.getEffectiveBorder()[ CD ]
Line_4 $$ final int arc = getArcSize()-->Line_48 $$ shape.quadTo(rightX, topY, rightX, topY + shape.deltaY(arc))[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_73 $$ final Paint old = g2d.getPaint()[ CD ]
Line_46 $$ if (border.right > 0 || rightGhostExists || !lastShowing || !Boolean.TRUE.equals(label.getClientProperty(STRETCHED_BY_WIDTH))) -->Line_51 $$ if (lastShowing) [ CD ]
Line_4 $$ final int arc = getArcSize()-->Line_52 $$ shape.lineTo(rightX - shape.deltaX(arc), topY)[ FD ]
Line_24 $$ boolean lastShowing = next == null-->Line_25 $$ if (!lastShowing) [ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_21 $$ if (!firstShowing && !leftGhostExists) [ FD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_32 $$ int rightX = !lastShowing && leftFromSelection ? shape.getMaxX() + shape.deltaX(arc + 1) : shape.getMaxX()[ FD ]
Line_30 $$ int leftX = firstShowing ? shape.getX() : shape.getX() - shape.deltaX(arc + 1)-->Line_37 $$ shape.lineTo(leftX, topY + shape.deltaY(arc))[ FD ]
Line_4 $$ final int arc = getArcSize()-->Line_47 $$ shape.lineTo(rightX - shape.deltaX(arc), topY)[ FD ]
Line_5 $$ Color topBlockColor = getTopBlockColor()-->Line_77 $$ g2d.setColor(topBlockColor)[ FD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_78 $$ g2d.draw(shape.transformLine(leftX + shape.deltaX(arc + 1), topY + shape.deltaY(1), rightX - shape.deltaX(arc - 1), topY + shape.deltaY(1)))[ FD ]
Line_5 $$ Color topBlockColor = getTopBlockColor()-->Line_13 $$ topBlockColor = tabColor.brighter().brighter()[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_73 $$ final Paint old = g2d.getPaint()[ FD ]
Line_4 $$ final int arc = getArcSize()-->Line_53 $$ shape.quadTo(rightX + 1, topY, rightX + 1, topY + shape.deltaY(arc))[ FD ]
Line_31 $$ int topY = shape.getY() + shape.deltaY(selectionTabVShift)-->Line_47 $$ shape.lineTo(rightX - shape.deltaX(arc), topY)[ FD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_81 $$ g2d.draw(shape.transformLine(rightX - shape.deltaX(1), topY + shape.deltaY(arc - 1), rightX - shape.deltaX(1), bottomY))[ FD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_49 $$ shape.lineTo(rightX, bottomY)[ FD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_52 $$ shape.lineTo(rightX - shape.deltaX(arc), topY)[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_31 $$ int topY = shape.getY() + shape.deltaY(selectionTabVShift)[ CD ]
Line_51 $$ if (lastShowing) -->Line_53 $$ shape.quadTo(rightX + 1, topY, rightX + 1, topY + shape.deltaY(arc))[ CD ]
Line_24 $$ boolean lastShowing = next == null-->Line_46 $$ if (border.right > 0 || rightGhostExists || !lastShowing || !Boolean.TRUE.equals(label.getClientProperty(STRETCHED_BY_WIDTH))) [ FD ]
Line_32 $$ int rightX = !lastShowing && leftFromSelection ? shape.getMaxX() + shape.deltaX(arc + 1) : shape.getMaxX()-->Line_48 $$ shape.quadTo(rightX, topY, rightX, topY + shape.deltaY(arc))[ FD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_41 $$ shape.moveTo(leftX, topY + shape.deltaY(getEdgeArcSize()))[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_69 $$ g2d.setColor(backgroundColor)[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_79 $$ if (!rightEdge) [ CD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_7 $$ Color boundsColor = getBoundsColor()[ CD ]
Line_30 $$ int leftX = firstShowing ? shape.getX() : shape.getX() - shape.deltaX(arc + 1)-->Line_67 $$ shape.lineTo(leftX, bottomY)[ FD ]
Line_51 $$ if (lastShowing) -->Line_52 $$ shape.lineTo(rightX - shape.deltaX(arc), topY)[ CD ]
Line_32 $$ int rightX = !lastShowing && leftFromSelection ? shape.getMaxX() + shape.deltaX(arc + 1) : shape.getMaxX()-->Line_61 $$ shape.lineTo(rightX, bottomY + shape.deltaY(getArcSize()))[ FD ]
Line_22 $$ firstShowing = myInfo2Label.get(prev).getBounds().width == 0-->Line_35 $$ if (border.left > 0 || leftGhostExists || !firstShowing) [ FD ]
Line_19 $$ final TabInfo next = myLastLayoutPass.getNextFor(myVisibleInfos.get(tabIndex))-->Line_26 $$ lastShowing = myInfo2Label.get(next).getBounds().width == 0[ FD ]
Line_6 $$ Color rightBlockColor = getRightBlockColor()-->Line_80 $$ g2d.setColor(rightBlockColor)[ FD ]
Line_33 $$ int bottomY = shape.getMaxY() + shape.deltaY(1)-->Line_81 $$ g2d.draw(shape.transformLine(rightX - shape.deltaX(1), topY + shape.deltaY(arc - 1), rightX - shape.deltaX(1), bottomY))[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_69 $$ g2d.setColor(backgroundColor)[ CD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)[ FD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_31 $$ int topY = shape.getY() + shape.deltaY(selectionTabVShift)[ FD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_47 $$ shape.lineTo(rightX - shape.deltaX(arc), topY)[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_46 $$ if (border.right > 0 || rightGhostExists || !lastShowing || !Boolean.TRUE.equals(label.getClientProperty(STRETCHED_BY_WIDTH))) [ FD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_63 $$ shape.lineTo(leftX, bottomY)[ FD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_48 $$ shape.quadTo(rightX, topY, rightX, topY + shape.deltaY(arc))[ FD ]
Line_35 $$ if (border.left > 0 || leftGhostExists || !firstShowing) -->Line_37 $$ shape.lineTo(leftX, topY + shape.deltaY(arc))[ CD ]
Line_46 $$ if (border.right > 0 || rightGhostExists || !lastShowing || !Boolean.TRUE.equals(label.getClientProperty(STRETCHED_BY_WIDTH))) -->Line_49 $$ shape.lineTo(rightX, bottomY)[ CD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_60 $$ if (!info.isInSelectionRow(label.getInfo())) [ FD ]
Line_10 $$ if (tabColor != null) -->Line_13 $$ topBlockColor = tabColor.brighter().brighter()[ CD ]
Line_40 $$ if (firstShowing) -->Line_42 $$ shape.quadTo(leftX, topY, leftX + shape.deltaX(getEdgeArcSize()), topY)[ CD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_42 $$ shape.quadTo(leftX, topY, leftX + shape.deltaX(getEdgeArcSize()), topY)[ FD ]
Line_46 $$ if (border.right > 0 || rightGhostExists || !lastShowing || !Boolean.TRUE.equals(label.getClientProperty(STRETCHED_BY_WIDTH))) -->Line_48 $$ shape.quadTo(rightX, topY, rightX, topY + shape.deltaY(arc))[ CD ]
Line_55 $$ rightEdge = true-->Line_79 $$ if (!rightEdge) [ FD ]
Line_40 $$ if (firstShowing) -->Line_41 $$ shape.moveTo(leftX, topY + shape.deltaY(getEdgeArcSize()))[ CD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_72 $$ final Paint gp = UIUtil.isUnderDarcula() ? UIUtil.getGradientPaint(gradientLine.x1, gradientLine.y1, shape.transformY1(backgroundColor, backgroundColor), gradientLine.x2, gradientLine.y2, shape.transformY1(backgroundColor, backgroundColor)) : UIUtil.getGradientPaint(gradientLine.x1, gradientLine.y1, shape.transformY1(backgroundColor.brighter().brighter(), backgroundColor), gradientLine.x2, gradientLine.y2, shape.transformY1(backgroundColor, backgroundColor.brighter().brighter()))[ FD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_74 $$ g2d.setPaint(gp)[ CD ]
Line_2 $$ protected void doPaintInactive(Graphics2D g2d, boolean leftGhostExists, TabLabel label, Rectangle effectiveBounds, boolean rightGhostExists, int row, int column) -->Line_10 $$ if (tabColor != null) [ CD ]
Line_45 $$ boolean rightEdge = false-->Line_79 $$ if (!rightEdge) [ FD ]
Line_11 $$ backgroundColor = tabColor-->Line_72 $$ final Paint gp = UIUtil.isUnderDarcula() ? UIUtil.getGradientPaint(gradientLine.x1, gradientLine.y1, shape.transformY1(backgroundColor, backgroundColor), gradientLine.x2, gradientLine.y2, shape.transformY1(backgroundColor, backgroundColor)) : UIUtil.getGradientPaint(gradientLine.x1, gradientLine.y1, shape.transformY1(backgroundColor.brighter().brighter(), backgroundColor), gradientLine.x2, gradientLine.y2, shape.transformY1(backgroundColor, backgroundColor.brighter().brighter()))[ FD ]
Line_16 $$ final TabInfo selected = getSelectedInfo()-->Line_28 $$ boolean leftFromSelection = selected != null && tabIndex == myVisibleInfos.indexOf(selected) - 1[ FD ]
Line_29 $$ final ShapeTransform shape = getEffectiveLayout().createShapeTransform(effectiveBounds)-->Line_36 $$ shape.moveTo(leftX, bottomY)[ FD ]
Line_17 $$ final int selectionTabVShift = getSelectionTabVShift()-->Line_31 $$ int topY = shape.getY() + shape.deltaY(selectionTabVShift)[ FD ]
Line_66 $$ if (!rightEdge) -->Line_67 $$ shape.lineTo(leftX, bottomY)[ CD ]
