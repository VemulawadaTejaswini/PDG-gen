Line_8 $$ metrics = metrics.getFont().isPlain() ? metrics : g.getFontMetrics(font)-->Line_19 $$ g.drawString(title, textRect.x - (myNoIconSpace ? 6 : 1), textRect.y + metrics.getAscent() - 1)[ FD ]
Line_4 $$ font = font.isBold() ? font : font.deriveFont(Font.BOLD)-->Line_8 $$ metrics = metrics.getFont().isPlain() ? metrics : g.getFontMetrics(font)[ FD ]
Line_11 $$ if (tabPane.isEnabled() && tabPane.isEnabledAt(tabIndex)) -->Line_12 $$ g.setColor(tabPane.getForegroundAt(tabIndex))[ CD ]
Line_8 $$ metrics = metrics.getFont().isPlain() ? metrics : g.getFontMetrics(font)-->Line_13 $$ g.drawString(title, textRect.x - (myNoIconSpace ? 5 : 0), textRect.y + metrics.getAscent())[ FD ]
Line_7 $$ font = font.isPlain() ? font : font.deriveFont(Font.PLAIN)-->Line_10 $$ g.setFont(font)[ FD ]
Line_5 $$ metrics = metrics.getFont().isBold() ? metrics : g.getFontMetrics(font)-->Line_17 $$ g.drawString(title, textRect.x, textRect.y + metrics.getAscent())[ FD ]
Line_2 $$ protected void paintText(Graphics g, int tabPlacement, Font font, FontMetrics metrics, int tabIndex, String title, Rectangle textRect, boolean isSelected) -->Line_18 $$ g.setColor(tabPane.getBackgroundAt(tabIndex).darker())[ FD ]
Line_4 $$ font = font.isBold() ? font : font.deriveFont(Font.BOLD)-->Line_5 $$ metrics = metrics.getFont().isBold() ? metrics : g.getFontMetrics(font)[ FD ]
Line_5 $$ metrics = metrics.getFont().isBold() ? metrics : g.getFontMetrics(font)-->Line_8 $$ metrics = metrics.getFont().isPlain() ? metrics : g.getFontMetrics(font)[ FD ]
Line_4 $$ font = font.isBold() ? font : font.deriveFont(Font.BOLD)-->Line_10 $$ g.setFont(font)[ FD ]
Line_2 $$ protected void paintText(Graphics g, int tabPlacement, Font font, FontMetrics metrics, int tabIndex, String title, Rectangle textRect, boolean isSelected) -->Line_11 $$ if (tabPane.isEnabled() && tabPane.isEnabledAt(tabIndex)) [ CD ]
Line_2 $$ protected void paintText(Graphics g, int tabPlacement, Font font, FontMetrics metrics, int tabIndex, String title, Rectangle textRect, boolean isSelected) -->Line_7 $$ font = font.isPlain() ? font : font.deriveFont(Font.PLAIN)[ FD ]
Line_11 $$ if (tabPane.isEnabled() && tabPane.isEnabledAt(tabIndex)) -->Line_19 $$ g.drawString(title, textRect.x - (myNoIconSpace ? 6 : 1), textRect.y + metrics.getAscent() - 1)[ CD ]
Line_2 $$ protected void paintText(Graphics g, int tabPlacement, Font font, FontMetrics metrics, int tabIndex, String title, Rectangle textRect, boolean isSelected) -->Line_19 $$ g.drawString(title, textRect.x - (myNoIconSpace ? 6 : 1), textRect.y + metrics.getAscent() - 1)[ FD ]
Line_11 $$ if (tabPane.isEnabled() && tabPane.isEnabledAt(tabIndex)) -->Line_13 $$ g.drawString(title, textRect.x - (myNoIconSpace ? 5 : 0), textRect.y + metrics.getAscent())[ CD ]
Line_2 $$ protected void paintText(Graphics g, int tabPlacement, Font font, FontMetrics metrics, int tabIndex, String title, Rectangle textRect, boolean isSelected) -->Line_17 $$ g.drawString(title, textRect.x, textRect.y + metrics.getAscent())[ FD ]
Line_11 $$ if (tabPane.isEnabled() && tabPane.isEnabledAt(tabIndex)) -->Line_17 $$ g.drawString(title, textRect.x, textRect.y + metrics.getAscent())[ CD ]
Line_2 $$ protected void paintText(Graphics g, int tabPlacement, Font font, FontMetrics metrics, int tabIndex, String title, Rectangle textRect, boolean isSelected) -->Line_4 $$ font = font.isBold() ? font : font.deriveFont(Font.BOLD)[ FD ]
Line_5 $$ metrics = metrics.getFont().isBold() ? metrics : g.getFontMetrics(font)-->Line_19 $$ g.drawString(title, textRect.x - (myNoIconSpace ? 6 : 1), textRect.y + metrics.getAscent() - 1)[ FD ]
Line_2 $$ protected void paintText(Graphics g, int tabPlacement, Font font, FontMetrics metrics, int tabIndex, String title, Rectangle textRect, boolean isSelected) -->Line_13 $$ g.drawString(title, textRect.x - (myNoIconSpace ? 5 : 0), textRect.y + metrics.getAscent())[ FD ]
Line_2 $$ protected void paintText(Graphics g, int tabPlacement, Font font, FontMetrics metrics, int tabIndex, String title, Rectangle textRect, boolean isSelected) -->Line_12 $$ g.setColor(tabPane.getForegroundAt(tabIndex))[ FD ]
Line_11 $$ if (tabPane.isEnabled() && tabPane.isEnabledAt(tabIndex)) -->Line_18 $$ g.setColor(tabPane.getBackgroundAt(tabIndex).darker())[ CD ]
Line_3 $$ if (isSelected) -->Line_8 $$ metrics = metrics.getFont().isPlain() ? metrics : g.getFontMetrics(font)[ CD ]
Line_3 $$ if (isSelected) -->Line_5 $$ metrics = metrics.getFont().isBold() ? metrics : g.getFontMetrics(font)[ CD ]
Line_4 $$ font = font.isBold() ? font : font.deriveFont(Font.BOLD)-->Line_7 $$ font = font.isPlain() ? font : font.deriveFont(Font.PLAIN)[ FD ]
Line_5 $$ metrics = metrics.getFont().isBold() ? metrics : g.getFontMetrics(font)-->Line_13 $$ g.drawString(title, textRect.x - (myNoIconSpace ? 5 : 0), textRect.y + metrics.getAscent())[ FD ]
Line_2 $$ protected void paintText(Graphics g, int tabPlacement, Font font, FontMetrics metrics, int tabIndex, String title, Rectangle textRect, boolean isSelected) -->Line_8 $$ metrics = metrics.getFont().isPlain() ? metrics : g.getFontMetrics(font)[ FD ]
Line_7 $$ font = font.isPlain() ? font : font.deriveFont(Font.PLAIN)-->Line_8 $$ metrics = metrics.getFont().isPlain() ? metrics : g.getFontMetrics(font)[ FD ]
Line_2 $$ protected void paintText(Graphics g, int tabPlacement, Font font, FontMetrics metrics, int tabIndex, String title, Rectangle textRect, boolean isSelected) -->Line_10 $$ g.setFont(font)[ FD ]
Line_2 $$ protected void paintText(Graphics g, int tabPlacement, Font font, FontMetrics metrics, int tabIndex, String title, Rectangle textRect, boolean isSelected) -->Line_11 $$ if (tabPane.isEnabled() && tabPane.isEnabledAt(tabIndex)) [ FD ]
Line_2 $$ protected void paintText(Graphics g, int tabPlacement, Font font, FontMetrics metrics, int tabIndex, String title, Rectangle textRect, boolean isSelected) -->Line_3 $$ if (isSelected) [ CD ]
Line_2 $$ protected void paintText(Graphics g, int tabPlacement, Font font, FontMetrics metrics, int tabIndex, String title, Rectangle textRect, boolean isSelected) -->Line_5 $$ metrics = metrics.getFont().isBold() ? metrics : g.getFontMetrics(font)[ FD ]
Line_8 $$ metrics = metrics.getFont().isPlain() ? metrics : g.getFontMetrics(font)-->Line_17 $$ g.drawString(title, textRect.x, textRect.y + metrics.getAscent())[ FD ]
Line_3 $$ if (isSelected) -->Line_7 $$ font = font.isPlain() ? font : font.deriveFont(Font.PLAIN)[ CD ]
Line_2 $$ protected void paintText(Graphics g, int tabPlacement, Font font, FontMetrics metrics, int tabIndex, String title, Rectangle textRect, boolean isSelected) -->Line_10 $$ g.setFont(font)[ CD ]
Line_3 $$ if (isSelected) -->Line_4 $$ font = font.isBold() ? font : font.deriveFont(Font.BOLD)[ CD ]
