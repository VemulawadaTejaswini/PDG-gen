Line_8 $$ color = ColorUtil.isDark(EditorColorsManager.getInstance().getGlobalScheme().getDefaultBackground()) ? ColorUtil.shift(color, 1.5d) : color.darker()-->Line_9 $$ lineMarkFragment(startLine, endLine, color)[ FD ]
Line_5 $$ Color color = attributes.getBackgroundColor()-->Line_6 $$ if (color == null)[ FD ]
Line_2 $$ public void run() -->Line_6 $$ if (color == null)[ CD ]
Line_6 $$ if (color == null)-->Line_7 $$ return[ CD ]
Line_2 $$ public void run() -->Line_3 $$ if (myProject.isDisposed() || myEditor.isDisposed())[ CD ]
Line_2 $$ public void run() -->Line_8 $$ color = ColorUtil.isDark(EditorColorsManager.getInstance().getGlobalScheme().getDefaultBackground()) ? ColorUtil.shift(color, 1.5d) : color.darker()[ CD ]
Line_5 $$ Color color = attributes.getBackgroundColor()-->Line_9 $$ lineMarkFragment(startLine, endLine, color)[ FD ]
Line_3 $$ if (myProject.isDisposed() || myEditor.isDisposed())-->Line_4 $$ return[ CD ]
Line_5 $$ Color color = attributes.getBackgroundColor()-->Line_8 $$ color = ColorUtil.isDark(EditorColorsManager.getInstance().getGlobalScheme().getDefaultBackground()) ? ColorUtil.shift(color, 1.5d) : color.darker()[ FD ]
Line_2 $$ public void run() -->Line_9 $$ lineMarkFragment(startLine, endLine, color)[ CD ]
Line_2 $$ public void run() -->Line_5 $$ Color color = attributes.getBackgroundColor()[ CD ]
