Line_3 $$ if (isMacOverlayScrollbar() && !alwaysShowTrack()) -->Line_21 $$ g.setColor(getTrackBorderColor())[ CD ]
Line_3 $$ if (isMacOverlayScrollbar() && !alwaysShowTrack()) -->Line_8 $$ final Color end = adjustColor(getTrackBackground().brighter())[ CD ]
Line_3 $$ if (isMacOverlayScrollbar() && !alwaysShowTrack()) -->Line_16 $$ g2d.fillRect(bounds.x, bounds.y, bounds.width, bounds.height)[ CD ]
Line_23 $$ if (isVertical()) -->Line_24 $$ int x = scrollbar.getComponentOrientation().isLeftToRight() ? bounds.x : bounds.x + bounds.width - 1[ CD ]
Line_6 $$ final Paint paint-->Line_15 $$ g2d.setPaint(paint)[ FD ]
Line_3 $$ if (isMacOverlayScrollbar() && !alwaysShowTrack()) -->Line_17 $$ g.setColor(adjustColor(start.darker()))[ CD ]
Line_6 $$ final Paint paint-->Line_10 $$ paint = UIUtil.getGradientPaint(bounds.x + 1, bounds.y, start, bounds.width + 1, bounds.y, end)[ FD ]
Line_24 $$ int x = scrollbar.getComponentOrientation().isLeftToRight() ? bounds.x : bounds.x + bounds.width - 1-->Line_25 $$ g.drawLine(x, bounds.y, x, bounds.y + bounds.height)[ FD ]
Line_2 $$ protected void doPaintTrack(Graphics g, JComponent c, Rectangle bounds) -->Line_21 $$ g.setColor(getTrackBorderColor())[ FD ]
Line_9 $$ if (vertical) -->Line_12 $$ paint = UIUtil.getGradientPaint(bounds.x, bounds.y + 1, start, bounds.x, bounds.height + 1, end)[ CD ]
Line_23 $$ if (isVertical()) -->Line_25 $$ g.drawLine(x, bounds.y, x, bounds.y + bounds.height)[ CD ]
Line_9 $$ if (vertical) -->Line_10 $$ paint = UIUtil.getGradientPaint(bounds.x + 1, bounds.y, start, bounds.width + 1, bounds.y, end)[ CD ]
Line_12 $$ paint = UIUtil.getGradientPaint(bounds.x, bounds.y + 1, start, bounds.x, bounds.height + 1, end)-->Line_15 $$ g2d.setPaint(paint)[ FD ]
Line_3 $$ if (isMacOverlayScrollbar() && !alwaysShowTrack()) -->Line_19 $$ g.setColor(getTrackBackground())[ CD ]
Line_3 $$ if (isMacOverlayScrollbar() && !alwaysShowTrack()) -->Line_20 $$ g.fillRect(bounds.x, bounds.y, bounds.width, bounds.height)[ CD ]
Line_7 $$ final Color start = adjustColor(UIUtil.getSlightlyDarkerColor(getTrackBackground()))-->Line_10 $$ paint = UIUtil.getGradientPaint(bounds.x + 1, bounds.y, start, bounds.width + 1, bounds.y, end)[ FD ]
Line_7 $$ final Color start = adjustColor(UIUtil.getSlightlyDarkerColor(getTrackBackground()))-->Line_17 $$ g.setColor(adjustColor(start.darker()))[ FD ]
Line_2 $$ protected void doPaintTrack(Graphics g, JComponent c, Rectangle bounds) -->Line_29 $$ if (myRepaintCallback != null) [ CD ]
Line_2 $$ protected void doPaintTrack(Graphics g, JComponent c, Rectangle bounds) -->Line_3 $$ if (isMacOverlayScrollbar() && !alwaysShowTrack()) [ CD ]
Line_10 $$ paint = UIUtil.getGradientPaint(bounds.x + 1, bounds.y, start, bounds.width + 1, bounds.y, end)-->Line_15 $$ g2d.setPaint(paint)[ FD ]
Line_10 $$ paint = UIUtil.getGradientPaint(bounds.x + 1, bounds.y, start, bounds.width + 1, bounds.y, end)-->Line_12 $$ paint = UIUtil.getGradientPaint(bounds.x, bounds.y + 1, start, bounds.x, bounds.height + 1, end)[ FD ]
Line_2 $$ protected void doPaintTrack(Graphics g, JComponent c, Rectangle bounds) -->Line_4 $$ bounds = getMacScrollBarBounds(bounds, false)[ FD ]
Line_14 $$ Graphics2D g2d = (Graphics2D) g-->Line_16 $$ g2d.fillRect(bounds.x, bounds.y, bounds.width, bounds.height)[ FD ]
Line_2 $$ protected void doPaintTrack(Graphics g, JComponent c, Rectangle bounds) -->Line_19 $$ g.setColor(getTrackBackground())[ FD ]
Line_2 $$ protected void doPaintTrack(Graphics g, JComponent c, Rectangle bounds) -->Line_23 $$ if (isVertical()) [ CD ]
Line_6 $$ final Paint paint-->Line_12 $$ paint = UIUtil.getGradientPaint(bounds.x, bounds.y + 1, start, bounds.x, bounds.height + 1, end)[ FD ]
Line_2 $$ protected void doPaintTrack(Graphics g, JComponent c, Rectangle bounds) -->Line_30 $$ myRepaintCallback.call(g)[ FD ]
Line_7 $$ final Color start = adjustColor(UIUtil.getSlightlyDarkerColor(getTrackBackground()))-->Line_12 $$ paint = UIUtil.getGradientPaint(bounds.x, bounds.y + 1, start, bounds.x, bounds.height + 1, end)[ FD ]
Line_3 $$ if (isMacOverlayScrollbar() && !alwaysShowTrack()) -->Line_7 $$ final Color start = adjustColor(UIUtil.getSlightlyDarkerColor(getTrackBackground()))[ CD ]
Line_2 $$ protected void doPaintTrack(Graphics g, JComponent c, Rectangle bounds) -->Line_27 $$ g.drawLine(bounds.x, bounds.y, bounds.x + bounds.width, bounds.y)[ FD ]
Line_29 $$ if (myRepaintCallback != null) -->Line_30 $$ myRepaintCallback.call(g)[ CD ]
Line_3 $$ if (isMacOverlayScrollbar() && !alwaysShowTrack()) -->Line_14 $$ Graphics2D g2d = (Graphics2D) g[ CD ]
Line_3 $$ if (isMacOverlayScrollbar() && !alwaysShowTrack()) -->Line_4 $$ bounds = getMacScrollBarBounds(bounds, false)[ CD ]
Line_8 $$ final Color end = adjustColor(getTrackBackground().brighter())-->Line_12 $$ paint = UIUtil.getGradientPaint(bounds.x, bounds.y + 1, start, bounds.x, bounds.height + 1, end)[ FD ]
Line_14 $$ Graphics2D g2d = (Graphics2D) g-->Line_15 $$ g2d.setPaint(paint)[ FD ]
Line_2 $$ protected void doPaintTrack(Graphics g, JComponent c, Rectangle bounds) -->Line_25 $$ g.drawLine(x, bounds.y, x, bounds.y + bounds.height)[ FD ]
Line_23 $$ if (isVertical()) -->Line_27 $$ g.drawLine(bounds.x, bounds.y, bounds.x + bounds.width, bounds.y)[ CD ]
Line_2 $$ protected void doPaintTrack(Graphics g, JComponent c, Rectangle bounds) -->Line_20 $$ g.fillRect(bounds.x, bounds.y, bounds.width, bounds.height)[ FD ]
Line_8 $$ final Color end = adjustColor(getTrackBackground().brighter())-->Line_10 $$ paint = UIUtil.getGradientPaint(bounds.x + 1, bounds.y, start, bounds.width + 1, bounds.y, end)[ FD ]
Line_3 $$ if (isMacOverlayScrollbar() && !alwaysShowTrack()) -->Line_5 $$ boolean vertical = isVertical()[ CD ]
Line_3 $$ if (isMacOverlayScrollbar() && !alwaysShowTrack()) -->Line_15 $$ g2d.setPaint(paint)[ CD ]
Line_3 $$ if (isMacOverlayScrollbar() && !alwaysShowTrack()) -->Line_9 $$ if (vertical) [ CD ]
Line_2 $$ protected void doPaintTrack(Graphics g, JComponent c, Rectangle bounds) -->Line_17 $$ g.setColor(adjustColor(start.darker()))[ FD ]
Line_3 $$ if (isMacOverlayScrollbar() && !alwaysShowTrack()) -->Line_6 $$ final Paint paint[ CD ]
