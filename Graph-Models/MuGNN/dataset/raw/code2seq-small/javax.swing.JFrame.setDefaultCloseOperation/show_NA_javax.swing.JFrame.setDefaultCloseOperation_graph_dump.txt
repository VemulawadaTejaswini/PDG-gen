Line_20 $$ JComponent toFocus = myPreferedFocus-->Line_22 $$ toFocus = fm.getFocusTargetFor(myComponent)[ FD ]
Line_2 $$ public void show(boolean restoreBounds) -->Line_40 $$ if (frame instanceof JFrame) [ CD ]
Line_17 $$ final WindowAdapter focusListener = new WindowAdapter() -->Line_31 $$ frame.addWindowListener(focusListener)[ FD ]
Line_2 $$ public void show(boolean restoreBounds) -->Line_37 $$ if (myCloseOnEsc)[ CD ]
Line_61 $$ if (UIUtil.isUnderAlloyLookAndFeel() && frame instanceof JFrame) -->Line_62 $$ ((JFrame) frame).setMaximizedBounds(null)[ CD ]
Line_2 $$ public void show(boolean restoreBounds) -->Line_45 $$ if (myImageWasChanged) [ CD ]
Line_2 $$ public void show(boolean restoreBounds) -->Line_8 $$ if (myStatusBar != null) [ CD ]
Line_17 $$ final WindowAdapter focusListener = new WindowAdapter() -->Line_19 $$ IdeFocusManager fm = IdeFocusManager.getInstance(myProject)[ CD ]
Line_53 $$ myFocusWatcher = new FocusWatcher() -->Line_55 $$ myFocusTrackback.consume()[ CD ]
Line_19 $$ IdeFocusManager fm = IdeFocusManager.getInstance(myProject)-->Line_22 $$ toFocus = fm.getFocusTargetFor(myComponent)[ FD ]
Line_7 $$ final Window frame = getFrame()-->Line_34 $$ frame.removeWindowListener(focusListener)[ FD ]
Line_12 $$ if (frame instanceof JFrame) -->Line_15 $$ ((JDialog) frame).setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE)[ CD ]
Line_2 $$ public void show(boolean restoreBounds) -->Line_12 $$ if (frame instanceof JFrame) [ CD ]
Line_2 $$ public void show(boolean restoreBounds) -->Line_32 $$ Disposer.register(this, new Disposable() [ CD ]
Line_45 $$ if (myImageWasChanged) -->Line_48 $$ AppUIUtil.updateWindowIcon(myFrame)[ CD ]
Line_7 $$ final Window frame = getFrame()-->Line_12 $$ if (frame instanceof JFrame) [ FD ]
Line_2 $$ public void show(boolean restoreBounds) -->Line_31 $$ frame.addWindowListener(focusListener)[ CD ]
Line_32 $$ Disposer.register(this, new Disposable() -->Line_34 $$ frame.removeWindowListener(focusListener)[ CD ]
Line_2 $$ public void show(boolean restoreBounds) -->Line_17 $$ final WindowAdapter focusListener = new WindowAdapter() [ CD ]
Line_20 $$ JComponent toFocus = myPreferedFocus-->Line_24 $$ if (toFocus != null) [ FD ]
Line_7 $$ final Window frame = getFrame()-->Line_46 $$ frame.setIconImage(myImage)[ FD ]
Line_2 $$ public void show(boolean restoreBounds) -->Line_60 $$ frame.setVisible(true)[ CD ]
Line_19 $$ IdeFocusManager fm = IdeFocusManager.getInstance(myProject)-->Line_25 $$ fm.requestFocus(toFocus, true).notify(myFocusedCallback)[ FD ]
Line_2 $$ public void show(boolean restoreBounds) -->Line_7 $$ final Window frame = getFrame()[ CD ]
Line_22 $$ toFocus = fm.getFocusTargetFor(myComponent)-->Line_25 $$ fm.requestFocus(toFocus, true).notify(myFocusedCallback)[ FD ]
Line_22 $$ toFocus = fm.getFocusTargetFor(myComponent)-->Line_24 $$ if (toFocus != null) [ FD ]
Line_2 $$ public void show(boolean restoreBounds) -->Line_39 $$ ((RootPaneContainer) frame).getContentPane().add(myComponent, BorderLayout.CENTER)[ CD ]
Line_50 $$ if (restoreBounds) -->Line_51 $$ loadFrameState()[ CD ]
Line_17 $$ final WindowAdapter focusListener = new WindowAdapter() -->Line_34 $$ frame.removeWindowListener(focusListener)[ FD ]
Line_40 $$ if (frame instanceof JFrame) -->Line_43 $$ ((JDialog) frame).setTitle(myTitle)[ CD ]
Line_17 $$ final WindowAdapter focusListener = new WindowAdapter() -->Line_24 $$ if (toFocus != null) [ CD ]
Line_2 $$ public void show(boolean restoreBounds) -->Line_58 $$ myFocusWatcher.install(myComponent)[ CD ]
Line_2 $$ public void show(boolean restoreBounds) -->Line_4 $$ if (myProject != null) [ CD ]
Line_12 $$ if (frame instanceof JFrame) -->Line_13 $$ ((JFrame) frame).setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE)[ CD ]
Line_17 $$ final WindowAdapter focusListener = new WindowAdapter() -->Line_20 $$ JComponent toFocus = myPreferedFocus[ CD ]
Line_37 $$ if (myCloseOnEsc)-->Line_38 $$ addCloseOnEsc((RootPaneContainer) frame)[ CD ]
Line_7 $$ final Window frame = getFrame()-->Line_31 $$ frame.addWindowListener(focusListener)[ FD ]
Line_7 $$ final Window frame = getFrame()-->Line_40 $$ if (frame instanceof JFrame) [ FD ]
Line_24 $$ if (toFocus != null) -->Line_27 $$ myFocusedCallback.setRejected()[ CD ]
Line_24 $$ if (toFocus != null) -->Line_25 $$ fm.requestFocus(toFocus, true).notify(myFocusedCallback)[ CD ]
Line_17 $$ final WindowAdapter focusListener = new WindowAdapter() -->Line_21 $$ if (toFocus == null) [ CD ]
Line_20 $$ JComponent toFocus = myPreferedFocus-->Line_25 $$ fm.requestFocus(toFocus, true).notify(myFocusedCallback)[ FD ]
Line_2 $$ public void show(boolean restoreBounds) -->Line_61 $$ if (UIUtil.isUnderAlloyLookAndFeel() && frame instanceof JFrame) [ CD ]
Line_21 $$ if (toFocus == null) -->Line_22 $$ toFocus = fm.getFocusTargetFor(myComponent)[ CD ]
Line_2 $$ public void show(boolean restoreBounds) -->Line_50 $$ if (restoreBounds) [ CD ]
Line_20 $$ JComponent toFocus = myPreferedFocus-->Line_21 $$ if (toFocus == null) [ FD ]
Line_8 $$ if (myStatusBar != null) -->Line_9 $$ myStatusBar.install((IdeFrame) frame)[ CD ]
Line_7 $$ final Window frame = getFrame()-->Line_60 $$ frame.setVisible(true)[ FD ]
Line_40 $$ if (frame instanceof JFrame) -->Line_41 $$ ((JFrame) frame).setTitle(myTitle)[ CD ]
Line_45 $$ if (myImageWasChanged) -->Line_46 $$ frame.setIconImage(myImage)[ CD ]
Line_4 $$ if (myProject != null) -->Line_5 $$ IdeFocusManager.getInstance(myProject).typeAheadUntil(myFocusedCallback)[ CD ]
