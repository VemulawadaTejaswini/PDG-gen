Line_3 $$ final String REGEX = "a.*"-->Line_5 $$ patternEditor.setAsText(REGEX)[ FD ]
Line_2 $$ public void testPatternEditor() -->Line_7 $$ assertEquals(REGEX, patternEditor.getAsText())[ CD ]
Line_2 $$ public void testPatternEditor() -->Line_12 $$ assertEquals("", patternEditor.getAsText())[ CD ]
Line_8 $$ patternEditor = new PatternEditor()-->Line_11 $$ patternEditor.setAsText(null)[ FD ]
Line_2 $$ public void testPatternEditor() -->Line_4 $$ PropertyEditor patternEditor = new PatternEditor()[ CD ]
Line_4 $$ PropertyEditor patternEditor = new PatternEditor()-->Line_10 $$ patternEditor = new PatternEditor()[ FD ]
Line_2 $$ public void testPatternEditor() -->Line_6 $$ assertEquals(Pattern.compile(REGEX).pattern(), ((Pattern) patternEditor.getValue()).pattern())[ CD ]
Line_4 $$ PropertyEditor patternEditor = new PatternEditor()-->Line_12 $$ assertEquals("", patternEditor.getAsText())[ FD ]
Line_4 $$ PropertyEditor patternEditor = new PatternEditor()-->Line_8 $$ patternEditor = new PatternEditor()[ FD ]
Line_2 $$ public void testPatternEditor() -->Line_9 $$ assertEquals("", patternEditor.getAsText())[ CD ]
Line_4 $$ PropertyEditor patternEditor = new PatternEditor()-->Line_6 $$ assertEquals(Pattern.compile(REGEX).pattern(), ((Pattern) patternEditor.getValue()).pattern())[ FD ]
Line_8 $$ patternEditor = new PatternEditor()-->Line_10 $$ patternEditor = new PatternEditor()[ FD ]
Line_10 $$ patternEditor = new PatternEditor()-->Line_12 $$ assertEquals("", patternEditor.getAsText())[ FD ]
Line_4 $$ PropertyEditor patternEditor = new PatternEditor()-->Line_11 $$ patternEditor.setAsText(null)[ FD ]
Line_2 $$ public void testPatternEditor() -->Line_10 $$ patternEditor = new PatternEditor()[ CD ]
Line_10 $$ patternEditor = new PatternEditor()-->Line_11 $$ patternEditor.setAsText(null)[ FD ]
Line_2 $$ public void testPatternEditor() -->Line_5 $$ patternEditor.setAsText(REGEX)[ CD ]
Line_2 $$ public void testPatternEditor() -->Line_8 $$ patternEditor = new PatternEditor()[ CD ]
Line_3 $$ final String REGEX = "a.*"-->Line_7 $$ assertEquals(REGEX, patternEditor.getAsText())[ FD ]
Line_4 $$ PropertyEditor patternEditor = new PatternEditor()-->Line_7 $$ assertEquals(REGEX, patternEditor.getAsText())[ FD ]
Line_3 $$ final String REGEX = "a.*"-->Line_6 $$ assertEquals(Pattern.compile(REGEX).pattern(), ((Pattern) patternEditor.getValue()).pattern())[ FD ]
Line_8 $$ patternEditor = new PatternEditor()-->Line_9 $$ assertEquals("", patternEditor.getAsText())[ FD ]
Line_8 $$ patternEditor = new PatternEditor()-->Line_12 $$ assertEquals("", patternEditor.getAsText())[ FD ]
Line_4 $$ PropertyEditor patternEditor = new PatternEditor()-->Line_9 $$ assertEquals("", patternEditor.getAsText())[ FD ]
Line_2 $$ public void testPatternEditor() -->Line_3 $$ final String REGEX = "a.*"[ CD ]
Line_4 $$ PropertyEditor patternEditor = new PatternEditor()-->Line_5 $$ patternEditor.setAsText(REGEX)[ FD ]
Line_2 $$ public void testPatternEditor() -->Line_11 $$ patternEditor.setAsText(null)[ CD ]
