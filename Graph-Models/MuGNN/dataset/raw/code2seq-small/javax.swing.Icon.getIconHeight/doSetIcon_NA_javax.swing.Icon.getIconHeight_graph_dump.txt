Line_11 $$ if (action != null) -->Line_37 $$ return true[ CD ]
Line_11 $$ if (action != null) -->Line_12 $$ if (StringUtil.isNotEmpty(path)) [ CD ]
Line_19 $$ Icon icon = new File(path).exists() ? IconLoader.getIcon(image) : null-->Line_21 $$ if (icon.getIconWidth() > EmptyIcon.ICON_18.getIconWidth() || icon.getIconHeight() > EmptyIcon.ICON_18.getIconHeight()) [ FD ]
Line_7 $$ String actionId = getActionId(node)-->Line_29 $$ node.setUserObject(Pair.create(actionId, null))[ FD ]
Line_7 $$ String actionId = getActionId(node)-->Line_25 $$ node.setUserObject(Pair.create(actionId, icon))[ FD ]
Line_7 $$ String actionId = getActionId(node)-->Line_8 $$ if (actionId == null)[ FD ]
Line_31 $$ final DefaultMutableTreeNode nodeOnToolbar = findNodeOnToolbar(actionId)-->Line_32 $$ if (nodeOnToolbar != null) [ FD ]
Line_12 $$ if (StringUtil.isNotEmpty(path)) -->Line_19 $$ Icon icon = new File(path).exists() ? IconLoader.getIcon(image) : null[ CD ]
Line_20 $$ if (icon != null) -->Line_26 $$ mySelectedSchema.addIconCustomization(actionId, path)[ CD ]
Line_2 $$ protected boolean doSetIcon(DefaultMutableTreeNode node, @Nullable String path, Component component) -->Line_11 $$ if (action != null) [ CD ]
Line_2 $$ protected boolean doSetIcon(DefaultMutableTreeNode node, @Nullable String path, Component component) -->Line_26 $$ mySelectedSchema.addIconCustomization(actionId, path)[ FD ]
Line_3 $$ if (StringUtil.isNotEmpty(path) && !new File(path).isFile()) -->Line_4 $$ Messages.showErrorDialog(component, IdeBundle.message("error.file.not.found.message", path), IdeBundle.message("title.choose.action.icon"))[ CD ]
Line_7 $$ String actionId = getActionId(node)-->Line_10 $$ final AnAction action = ActionManager.getInstance().getAction(actionId)[ FD ]
Line_2 $$ protected boolean doSetIcon(DefaultMutableTreeNode node, @Nullable String path, Component component) -->Line_10 $$ final AnAction action = ActionManager.getInstance().getAction(actionId)[ CD ]
Line_12 $$ if (StringUtil.isNotEmpty(path)) -->Line_29 $$ node.setUserObject(Pair.create(actionId, null))[ CD ]
Line_2 $$ protected boolean doSetIcon(DefaultMutableTreeNode node, @Nullable String path, Component component) -->Line_34 $$ node.setUserObject(nodeOnToolbar.getUserObject())[ FD ]
Line_12 $$ if (StringUtil.isNotEmpty(path)) -->Line_30 $$ mySelectedSchema.removeIconCustomization(actionId)[ CD ]
Line_32 $$ if (nodeOnToolbar != null) -->Line_33 $$ editToolbarIcon(actionId, nodeOnToolbar)[ CD ]
Line_2 $$ protected boolean doSetIcon(DefaultMutableTreeNode node, @Nullable String path, Component component) -->Line_25 $$ node.setUserObject(Pair.create(actionId, icon))[ FD ]
Line_13 $$ Image image = null-->Line_15 $$ image = ImageLoader.loadFromStream(VfsUtilCore.convertToURL(VfsUtil.pathToUrl(path.replace(File.separatorChar, '/'))).openStream())[ FD ]
Line_12 $$ if (StringUtil.isNotEmpty(path)) -->Line_13 $$ Image image = null[ CD ]
Line_2 $$ protected boolean doSetIcon(DefaultMutableTreeNode node, @Nullable String path, Component component) -->Line_15 $$ image = ImageLoader.loadFromStream(VfsUtilCore.convertToURL(VfsUtil.pathToUrl(path.replace(File.separatorChar, '/'))).openStream())[ FD ]
Line_12 $$ if (StringUtil.isNotEmpty(path)) -->Line_20 $$ if (icon != null) [ CD ]
Line_19 $$ Icon icon = new File(path).exists() ? IconLoader.getIcon(image) : null-->Line_25 $$ node.setUserObject(Pair.create(actionId, icon))[ FD ]
Line_12 $$ if (StringUtil.isNotEmpty(path)) -->Line_32 $$ if (nodeOnToolbar != null) [ CD ]
Line_2 $$ protected boolean doSetIcon(DefaultMutableTreeNode node, @Nullable String path, Component component) -->Line_3 $$ if (StringUtil.isNotEmpty(path) && !new File(path).isFile()) [ FD ]
Line_7 $$ String actionId = getActionId(node)-->Line_30 $$ mySelectedSchema.removeIconCustomization(actionId)[ FD ]
Line_20 $$ if (icon != null) -->Line_25 $$ node.setUserObject(Pair.create(actionId, icon))[ CD ]
Line_3 $$ if (StringUtil.isNotEmpty(path) && !new File(path).isFile()) -->Line_5 $$ return false[ CD ]
Line_7 $$ String actionId = getActionId(node)-->Line_33 $$ editToolbarIcon(actionId, nodeOnToolbar)[ FD ]
Line_13 $$ Image image = null-->Line_19 $$ Icon icon = new File(path).exists() ? IconLoader.getIcon(image) : null[ FD ]
Line_19 $$ Icon icon = new File(path).exists() ? IconLoader.getIcon(image) : null-->Line_20 $$ if (icon != null) [ FD ]
Line_2 $$ protected boolean doSetIcon(DefaultMutableTreeNode node, @Nullable String path, Component component) -->Line_39 $$ return false[ CD ]
Line_7 $$ String actionId = getActionId(node)-->Line_26 $$ mySelectedSchema.addIconCustomization(actionId, path)[ FD ]
Line_10 $$ final AnAction action = ActionManager.getInstance().getAction(actionId)-->Line_11 $$ if (action != null) [ FD ]
Line_31 $$ final DefaultMutableTreeNode nodeOnToolbar = findNodeOnToolbar(actionId)-->Line_34 $$ node.setUserObject(nodeOnToolbar.getUserObject())[ FD ]
Line_32 $$ if (nodeOnToolbar != null) -->Line_34 $$ node.setUserObject(nodeOnToolbar.getUserObject())[ CD ]
Line_2 $$ protected boolean doSetIcon(DefaultMutableTreeNode node, @Nullable String path, Component component) -->Line_8 $$ if (actionId == null)[ CD ]
Line_21 $$ if (icon.getIconWidth() > EmptyIcon.ICON_18.getIconWidth() || icon.getIconHeight() > EmptyIcon.ICON_18.getIconHeight()) -->Line_22 $$ Messages.showErrorDialog(component, IdeBundle.message("custom.icon.validation.message"), IdeBundle.message("title.choose.action.icon"))[ CD ]
Line_31 $$ final DefaultMutableTreeNode nodeOnToolbar = findNodeOnToolbar(actionId)-->Line_33 $$ editToolbarIcon(actionId, nodeOnToolbar)[ FD ]
Line_2 $$ protected boolean doSetIcon(DefaultMutableTreeNode node, @Nullable String path, Component component) -->Line_7 $$ String actionId = getActionId(node)[ CD ]
Line_15 $$ image = ImageLoader.loadFromStream(VfsUtilCore.convertToURL(VfsUtil.pathToUrl(path.replace(File.separatorChar, '/'))).openStream())-->Line_19 $$ Icon icon = new File(path).exists() ? IconLoader.getIcon(image) : null[ FD ]
Line_2 $$ protected boolean doSetIcon(DefaultMutableTreeNode node, @Nullable String path, Component component) -->Line_3 $$ if (StringUtil.isNotEmpty(path) && !new File(path).isFile()) [ CD ]
Line_2 $$ protected boolean doSetIcon(DefaultMutableTreeNode node, @Nullable String path, Component component) -->Line_29 $$ node.setUserObject(Pair.create(actionId, null))[ FD ]
Line_12 $$ if (StringUtil.isNotEmpty(path)) -->Line_31 $$ final DefaultMutableTreeNode nodeOnToolbar = findNodeOnToolbar(actionId)[ CD ]
Line_8 $$ if (actionId == null)-->Line_9 $$ return false[ CD ]
Line_20 $$ if (icon != null) -->Line_21 $$ if (icon.getIconWidth() > EmptyIcon.ICON_18.getIconWidth() || icon.getIconHeight() > EmptyIcon.ICON_18.getIconHeight()) [ CD ]
Line_2 $$ protected boolean doSetIcon(DefaultMutableTreeNode node, @Nullable String path, Component component) -->Line_7 $$ String actionId = getActionId(node)[ FD ]
Line_2 $$ protected boolean doSetIcon(DefaultMutableTreeNode node, @Nullable String path, Component component) -->Line_4 $$ Messages.showErrorDialog(component, IdeBundle.message("error.file.not.found.message", path), IdeBundle.message("title.choose.action.icon"))[ FD ]
Line_2 $$ protected boolean doSetIcon(DefaultMutableTreeNode node, @Nullable String path, Component component) -->Line_22 $$ Messages.showErrorDialog(component, IdeBundle.message("custom.icon.validation.message"), IdeBundle.message("title.choose.action.icon"))[ FD ]
Line_21 $$ if (icon.getIconWidth() > EmptyIcon.ICON_18.getIconWidth() || icon.getIconHeight() > EmptyIcon.ICON_18.getIconHeight()) -->Line_23 $$ return false[ CD ]
Line_7 $$ String actionId = getActionId(node)-->Line_31 $$ final DefaultMutableTreeNode nodeOnToolbar = findNodeOnToolbar(actionId)[ FD ]
Line_2 $$ protected boolean doSetIcon(DefaultMutableTreeNode node, @Nullable String path, Component component) -->Line_12 $$ if (StringUtil.isNotEmpty(path)) [ FD ]
