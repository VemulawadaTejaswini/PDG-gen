Line_6 $$ final Icon B = MacIntelliJIconCache.getIcon("macBorderBottom")-->Line_32 $$ stop = y + height - B.getIconHeight()[ FD ]
Line_34 $$ while (yOffset < stop) -->Line_36 $$ R.paintIcon(c, g, right, yOffset)[ CD ]
Line_11 $$ g = g.create(x, y, width, height)-->Line_35 $$ L.paintIcon(c, g, left, yOffset)[ FD ]
Line_4 $$ final Icon R = MacIntelliJIconCache.getIcon("macBorderRight")-->Line_36 $$ R.paintIcon(c, g, right, yOffset)[ FD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_11 $$ g = g.create(x, y, width, height)[ FD ]
Line_19 $$ int stop = x + width - TR.getIconWidth()-->Line_32 $$ stop = y + height - B.getIconHeight()[ FD ]
Line_11 $$ g = g.create(x, y, width, height)-->Line_15 $$ TR.paintIcon(c, g, x + width - TR.getIconWidth(), y)[ FD ]
Line_26 $$ xOffset += T.getIconWidth()-->Line_24 $$ T.paintIcon(c, g, xOffset, top)[ FD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_21 $$ int bottom = y + height - B.getIconHeight()[ CD ]
Line_5 $$ final Icon T = MacIntelliJIconCache.getIcon("macBorderTop")-->Line_26 $$ xOffset += T.getIconWidth()[ FD ]
Line_3 $$ final Icon L = MacIntelliJIconCache.getIcon("macBorderLeft")-->Line_35 $$ L.paintIcon(c, g, left, yOffset)[ FD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_22 $$ g.setClip(xOffset, y, width - L.getIconWidth() - R.getIconWidth(), height)[ CD ]
Line_10 $$ final Icon BR = MacIntelliJIconCache.getIcon("macBorderBottomRight")-->Line_16 $$ BR.paintIcon(c, g, x + width - BR.getIconWidth(), y + height - BR.getIconHeight())[ FD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_16 $$ BR.paintIcon(c, g, x + width - BR.getIconWidth(), y + height - BR.getIconHeight())[ FD ]
Line_5 $$ final Icon T = MacIntelliJIconCache.getIcon("macBorderTop")-->Line_24 $$ T.paintIcon(c, g, xOffset, top)[ FD ]
Line_5 $$ final Icon T = MacIntelliJIconCache.getIcon("macBorderTop")-->Line_33 $$ g.setClip(x, yOffset, width, height - T.getIconHeight() - B.getIconHeight())[ FD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_35 $$ L.paintIcon(c, g, left, yOffset)[ FD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_33 $$ g.setClip(x, yOffset, width, height - T.getIconHeight() - B.getIconHeight())[ FD ]
Line_26 $$ xOffset += T.getIconWidth()-->Line_25 $$ B.paintIcon(c, g, xOffset, bottom)[ FD ]
Line_23 $$ while (xOffset < stop) -->Line_25 $$ B.paintIcon(c, g, xOffset, bottom)[ CD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_8 $$ final Icon TR = MacIntelliJIconCache.getIcon("macBorderTopRight")[ CD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_15 $$ TR.paintIcon(c, g, x + width - TR.getIconWidth(), y)[ FD ]
Line_9 $$ final Icon BL = MacIntelliJIconCache.getIcon("macBorderBottomLeft")-->Line_14 $$ BL.paintIcon(c, g, x, y + height - BL.getIconHeight())[ FD ]
Line_23 $$ while (xOffset < stop) -->Line_24 $$ T.paintIcon(c, g, xOffset, top)[ CD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_14 $$ BL.paintIcon(c, g, x, y + height - BL.getIconHeight())[ FD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_9 $$ final Icon BL = MacIntelliJIconCache.getIcon("macBorderBottomLeft")[ CD ]
Line_11 $$ g = g.create(x, y, width, height)-->Line_16 $$ BR.paintIcon(c, g, x + width - BR.getIconWidth(), y + height - BR.getIconHeight())[ FD ]
Line_34 $$ while (yOffset < stop) -->Line_35 $$ L.paintIcon(c, g, left, yOffset)[ CD ]
Line_21 $$ int bottom = y + height - B.getIconHeight()-->Line_25 $$ B.paintIcon(c, g, xOffset, bottom)[ FD ]
Line_11 $$ g = g.create(x, y, width, height)-->Line_22 $$ g.setClip(xOffset, y, width - L.getIconWidth() - R.getIconWidth(), height)[ FD ]
Line_8 $$ final Icon TR = MacIntelliJIconCache.getIcon("macBorderTopRight")-->Line_15 $$ TR.paintIcon(c, g, x + width - TR.getIconWidth(), y)[ FD ]
Line_31 $$ int yOffset = y + T.getIconHeight()-->Line_36 $$ R.paintIcon(c, g, right, yOffset)[ FD ]
Line_6 $$ final Icon B = MacIntelliJIconCache.getIcon("macBorderBottom")-->Line_21 $$ int bottom = y + height - B.getIconHeight()[ FD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_23 $$ while (xOffset < stop) [ CD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_30 $$ int right = x + width - R.getIconWidth()[ CD ]
Line_19 $$ int stop = x + width - TR.getIconWidth()-->Line_23 $$ while (xOffset < stop) [ FD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_32 $$ stop = y + height - B.getIconHeight()[ CD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_34 $$ while (yOffset < stop) [ CD ]
Line_11 $$ g = g.create(x, y, width, height)-->Line_25 $$ B.paintIcon(c, g, xOffset, bottom)[ FD ]
Line_3 $$ final Icon L = MacIntelliJIconCache.getIcon("macBorderLeft")-->Line_22 $$ g.setClip(xOffset, y, width - L.getIconWidth() - R.getIconWidth(), height)[ FD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_6 $$ final Icon B = MacIntelliJIconCache.getIcon("macBorderBottom")[ CD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_5 $$ final Icon T = MacIntelliJIconCache.getIcon("macBorderTop")[ CD ]
Line_34 $$ while (yOffset < stop) -->Line_37 $$ yOffset += L.getIconHeight()[ CD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_10 $$ final Icon BR = MacIntelliJIconCache.getIcon("macBorderBottomRight")[ CD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_31 $$ int yOffset = y + T.getIconHeight()[ CD ]
Line_19 $$ int stop = x + width - TR.getIconWidth()-->Line_34 $$ while (yOffset < stop) [ FD ]
Line_31 $$ int yOffset = y + T.getIconHeight()-->Line_33 $$ g.setClip(x, yOffset, width, height - T.getIconHeight() - B.getIconHeight())[ FD ]
Line_11 $$ g = g.create(x, y, width, height)-->Line_14 $$ BL.paintIcon(c, g, x, y + height - BL.getIconHeight())[ FD ]
Line_6 $$ final Icon B = MacIntelliJIconCache.getIcon("macBorderBottom")-->Line_25 $$ B.paintIcon(c, g, xOffset, bottom)[ FD ]
Line_23 $$ while (xOffset < stop) -->Line_26 $$ xOffset += T.getIconWidth()[ CD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_3 $$ final Icon L = MacIntelliJIconCache.getIcon("macBorderLeft")[ CD ]
Line_4 $$ final Icon R = MacIntelliJIconCache.getIcon("macBorderRight")-->Line_22 $$ g.setClip(xOffset, y, width - L.getIconWidth() - R.getIconWidth(), height)[ FD ]
Line_20 $$ int top = y-->Line_24 $$ T.paintIcon(c, g, xOffset, top)[ FD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_15 $$ TR.paintIcon(c, g, x + width - TR.getIconWidth(), y)[ CD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_7 $$ final Icon TL = MacIntelliJIconCache.getIcon("macBorderTopLeft")[ CD ]
Line_30 $$ int right = x + width - R.getIconWidth()-->Line_36 $$ R.paintIcon(c, g, right, yOffset)[ FD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_39 $$ g.dispose()[ FD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_20 $$ int top = y[ CD ]
Line_26 $$ xOffset += T.getIconWidth()-->Line_23 $$ while (xOffset < stop) [ FD ]
Line_3 $$ final Icon L = MacIntelliJIconCache.getIcon("macBorderLeft")-->Line_37 $$ yOffset += L.getIconHeight()[ FD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_16 $$ BR.paintIcon(c, g, x + width - BR.getIconWidth(), y + height - BR.getIconHeight())[ CD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_39 $$ g.dispose()[ CD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_24 $$ T.paintIcon(c, g, xOffset, top)[ FD ]
Line_11 $$ g = g.create(x, y, width, height)-->Line_33 $$ g.setClip(x, yOffset, width, height - T.getIconHeight() - B.getIconHeight())[ FD ]
Line_31 $$ int yOffset = y + T.getIconHeight()-->Line_34 $$ while (yOffset < stop) [ FD ]
Line_31 $$ int yOffset = y + T.getIconHeight()-->Line_37 $$ yOffset += L.getIconHeight()[ FD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_33 $$ g.setClip(x, yOffset, width, height - T.getIconHeight() - B.getIconHeight())[ CD ]
Line_5 $$ final Icon T = MacIntelliJIconCache.getIcon("macBorderTop")-->Line_31 $$ int yOffset = y + T.getIconHeight()[ FD ]
Line_8 $$ final Icon TR = MacIntelliJIconCache.getIcon("macBorderTopRight")-->Line_19 $$ int stop = x + width - TR.getIconWidth()[ FD ]
Line_32 $$ stop = y + height - B.getIconHeight()-->Line_34 $$ while (yOffset < stop) [ FD ]
Line_11 $$ g = g.create(x, y, width, height)-->Line_36 $$ R.paintIcon(c, g, right, yOffset)[ FD ]
Line_6 $$ final Icon B = MacIntelliJIconCache.getIcon("macBorderBottom")-->Line_33 $$ g.setClip(x, yOffset, width, height - T.getIconHeight() - B.getIconHeight())[ FD ]
Line_37 $$ yOffset += L.getIconHeight()-->Line_34 $$ while (yOffset < stop) [ FD ]
Line_37 $$ yOffset += L.getIconHeight()-->Line_35 $$ L.paintIcon(c, g, left, yOffset)[ FD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_19 $$ int stop = x + width - TR.getIconWidth()[ CD ]
Line_37 $$ yOffset += L.getIconHeight()-->Line_36 $$ R.paintIcon(c, g, right, yOffset)[ FD ]
Line_11 $$ g = g.create(x, y, width, height)-->Line_39 $$ g.dispose()[ FD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_11 $$ g = g.create(x, y, width, height)[ CD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_4 $$ final Icon R = MacIntelliJIconCache.getIcon("macBorderRight")[ CD ]
Line_31 $$ int yOffset = y + T.getIconHeight()-->Line_35 $$ L.paintIcon(c, g, left, yOffset)[ FD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_25 $$ B.paintIcon(c, g, xOffset, bottom)[ FD ]
Line_11 $$ g = g.create(x, y, width, height)-->Line_24 $$ T.paintIcon(c, g, xOffset, top)[ FD ]
Line_4 $$ final Icon R = MacIntelliJIconCache.getIcon("macBorderRight")-->Line_30 $$ int right = x + width - R.getIconWidth()[ FD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_14 $$ BL.paintIcon(c, g, x, y + height - BL.getIconHeight())[ CD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_36 $$ R.paintIcon(c, g, right, yOffset)[ FD ]
Line_2 $$ public static void paintBorder(Component c, Graphics g, int x, int y, int width, int height) -->Line_22 $$ g.setClip(xOffset, y, width - L.getIconWidth() - R.getIconWidth(), height)[ FD ]
