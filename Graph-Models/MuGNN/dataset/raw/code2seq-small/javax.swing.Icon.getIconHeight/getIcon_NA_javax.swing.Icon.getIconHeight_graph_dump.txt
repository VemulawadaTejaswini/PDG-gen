Line_2 $$ public Icon getIcon(final Object object) -->Line_28 $$ if (object instanceof LibraryOrderEntry)[ CD ]
Line_7 $$ if (object instanceof Module)-->Line_8 $$ return ModuleType.get(((Module) object)).getIcon()[ CD ]
Line_2 $$ public Icon getIcon(final Object object) -->Line_7 $$ if (object instanceof Module)[ FD ]
Line_2 $$ public Icon getIcon(final Object object) -->Line_10 $$ if (object instanceof PsiElement) [ FD ]
Line_2 $$ public Icon getIcon(final Object object) -->Line_32 $$ return null[ CD ]
Line_10 $$ if (object instanceof PsiElement) -->Line_19 $$ return icon[ CD ]
Line_11 $$ Icon icon = ApplicationManager.getApplication().runReadAction(new Computable<Icon>() -->Line_13 $$ return ((PsiElement) object).isValid() ? ((PsiElement) object).getIcon(0) : null[ CD ]
Line_2 $$ public Icon getIcon(final Object object) -->Line_5 $$ if (object instanceof Project)[ FD ]
Line_2 $$ public Icon getIcon(final Object object) -->Line_24 $$ if (object instanceof JdkOrderEntry) [ CD ]
Line_2 $$ public Icon getIcon(final Object object) -->Line_28 $$ if (object instanceof LibraryOrderEntry)[ FD ]
Line_24 $$ if (object instanceof JdkOrderEntry) -->Line_26 $$ return ((SdkType) sdkType).getIcon()[ CD ]
Line_2 $$ public Icon getIcon(final Object object) -->Line_3 $$ if (!NavBarModel.isValid(object))[ FD ]
Line_10 $$ if (object instanceof PsiElement) -->Line_11 $$ Icon icon = ApplicationManager.getApplication().runReadAction(new Computable<Icon>() [ CD ]
Line_10 $$ if (object instanceof PsiElement) -->Line_16 $$ if (icon != null && (icon.getIconHeight() > 16 * 2 || icon.getIconWidth() > 16 * 2)) [ CD ]
Line_16 $$ if (icon != null && (icon.getIconHeight() > 16 * 2 || icon.getIconWidth() > 16 * 2)) -->Line_17 $$ icon = IconUtil.cropIcon(icon, 16 * 2, 16 * 2)[ CD ]
Line_5 $$ if (object instanceof Project)-->Line_6 $$ return AllIcons.Nodes.Project[ CD ]
Line_2 $$ public Icon getIcon(final Object object) -->Line_7 $$ if (object instanceof Module)[ CD ]
Line_2 $$ public Icon getIcon(final Object object) -->Line_24 $$ if (object instanceof JdkOrderEntry) [ FD ]
Line_2 $$ public Icon getIcon(final Object object) -->Line_30 $$ if (object instanceof ModuleOrderEntry)[ CD ]
Line_28 $$ if (object instanceof LibraryOrderEntry)-->Line_29 $$ return AllIcons.Nodes.PpLibFolder[ CD ]
Line_2 $$ public Icon getIcon(final Object object) -->Line_30 $$ if (object instanceof ModuleOrderEntry)[ FD ]
Line_2 $$ public Icon getIcon(final Object object) -->Line_3 $$ if (!NavBarModel.isValid(object))[ CD ]
Line_2 $$ public Icon getIcon(final Object object) -->Line_5 $$ if (object instanceof Project)[ CD ]
Line_11 $$ Icon icon = ApplicationManager.getApplication().runReadAction(new Computable<Icon>() -->Line_17 $$ icon = IconUtil.cropIcon(icon, 16 * 2, 16 * 2)[ FD ]
Line_11 $$ Icon icon = ApplicationManager.getApplication().runReadAction(new Computable<Icon>() -->Line_16 $$ if (icon != null && (icon.getIconHeight() > 16 * 2 || icon.getIconWidth() > 16 * 2)) [ FD ]
Line_3 $$ if (!NavBarModel.isValid(object))-->Line_4 $$ return null[ CD ]
Line_30 $$ if (object instanceof ModuleOrderEntry)-->Line_31 $$ return ModuleType.get(((ModuleOrderEntry) object).getModule()).getIcon()[ CD ]
Line_24 $$ if (object instanceof JdkOrderEntry) -->Line_25 $$ final SdkTypeId sdkType = ((JdkOrderEntry) object).getJdk().getSdkType()[ CD ]
