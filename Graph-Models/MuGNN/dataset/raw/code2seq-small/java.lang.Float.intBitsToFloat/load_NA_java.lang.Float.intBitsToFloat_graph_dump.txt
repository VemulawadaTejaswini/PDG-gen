Line_9 $$ int batchSize = block.getPositionCount()-->Line_12 $$ for (int i = 0; i < batchSize; i++) [ FD ]
Line_2 $$ public void load(LazyFixedWidthBlock block) -->Line_3 $$ if (loaded) [ CD ]
Line_2 $$ public void load(LazyFixedWidthBlock block) -->Line_25 $$ block.setNullVector(isNull)[ FD ]
Line_13 $$ BytesRefWritable writable = columnBatch.unCheckedGet(i + positionInBatch)-->Line_14 $$ int length = writable.getLength()[ FD ]
Line_7 $$ BytesRefArrayWritable columnBatch = batch.getColumn(fieldId)-->Line_13 $$ BytesRefWritable writable = columnBatch.unCheckedGet(i + positionInBatch)[ FD ]
Line_2 $$ public void load(LazyFixedWidthBlock block) -->Line_9 $$ int batchSize = block.getPositionCount()[ FD ]
Line_15 $$ if (length != 0) -->Line_17 $$ byte[] bytes = writable.getData()[ CD ]
Line_15 $$ if (length != 0) -->Line_16 $$ checkState(length == SIZE_OF_INT, "Float should be 4 bytes")[ CD ]
Line_15 $$ if (length != 0) -->Line_20 $$ vector[i] = (double) Float.intBitsToFloat(Integer.reverseBytes(intBits))[ CD ]
Line_10 $$ boolean[] isNull = new boolean[batchSize]-->Line_25 $$ block.setNullVector(isNull)[ FD ]
Line_18 $$ int start = writable.getStart()-->Line_19 $$ int intBits = ByteArrays.getInt(bytes, start)[ FD ]
Line_14 $$ int length = writable.getLength()-->Line_15 $$ if (length != 0) [ FD ]
Line_13 $$ BytesRefWritable writable = columnBatch.unCheckedGet(i + positionInBatch)-->Line_17 $$ byte[] bytes = writable.getData()[ FD ]
Line_17 $$ byte[] bytes = writable.getData()-->Line_19 $$ int intBits = ByteArrays.getInt(bytes, start)[ FD ]
Line_12 $$ for (int i = 0; i < batchSize; i++) -->Line_14 $$ int length = writable.getLength()[ CD ]
Line_15 $$ if (length != 0) -->Line_18 $$ int start = writable.getStart()[ CD ]
Line_2 $$ public void load(LazyFixedWidthBlock block) -->Line_26 $$ block.setRawSlice(wrappedDoubleArray(vector))[ FD ]
Line_3 $$ if (loaded) -->Line_4 $$ return[ CD ]
Line_19 $$ int intBits = ByteArrays.getInt(bytes, start)-->Line_20 $$ vector[i] = (double) Float.intBitsToFloat(Integer.reverseBytes(intBits))[ FD ]
Line_11 $$ double[] vector = new double[batchSize]-->Line_26 $$ block.setRawSlice(wrappedDoubleArray(vector))[ FD ]
Line_12 $$ for (int i = 0; i < batchSize; i++) -->Line_15 $$ if (length != 0) [ CD ]
Line_15 $$ if (length != 0) -->Line_19 $$ int intBits = ByteArrays.getInt(bytes, start)[ CD ]
Line_15 $$ if (length != 0) -->Line_22 $$ isNull[i] = true[ CD ]
Line_13 $$ BytesRefWritable writable = columnBatch.unCheckedGet(i + positionInBatch)-->Line_18 $$ int start = writable.getStart()[ FD ]
Line_12 $$ for (int i = 0; i < batchSize; i++) -->Line_13 $$ BytesRefWritable writable = columnBatch.unCheckedGet(i + positionInBatch)[ CD ]
