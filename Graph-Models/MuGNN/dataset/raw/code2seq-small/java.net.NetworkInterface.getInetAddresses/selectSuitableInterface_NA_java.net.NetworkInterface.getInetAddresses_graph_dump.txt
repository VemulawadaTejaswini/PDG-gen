Line_19 $$ if (addresses.nextElement() instanceof Inet6Address)-->Line_22 $$ hasIPv4 = true[ CD ]
Line_16 $$ boolean hasIPv6 = false-->Line_20 $$ hasIPv6 = true[ FD ]
Line_9 $$ Enumeration<NetworkInterface> interfaces = NetworkInterface.getNetworkInterfaces()-->Line_11 $$ NetworkInterface intf = interfaces.nextElement()[ FD ]
Line_11 $$ NetworkInterface intf = interfaces.nextElement()-->Line_13 $$ if (intf.isLoopback()) [ FD ]
Line_19 $$ if (addresses.nextElement() instanceof Inet6Address)-->Line_20 $$ hasIPv6 = true[ CD ]
Line_10 $$ while (interfaces.hasMoreElements()) -->Line_11 $$ NetworkInterface intf = interfaces.nextElement()[ CD ]
Line_13 $$ if (intf.isLoopback()) -->Line_25 $$ return[ CD ]
Line_13 $$ if (intf.isLoopback()) -->Line_16 $$ boolean hasIPv6 = false[ CD ]
Line_11 $$ NetworkInterface intf = interfaces.nextElement()-->Line_12 $$ System.out.println("Evaluating " + intf.getName())[ FD ]
Line_17 $$ Enumeration<InetAddress> addresses = suitableInterface.getInetAddresses()-->Line_19 $$ if (addresses.nextElement() instanceof Inet6Address)[ FD ]
Line_17 $$ Enumeration<InetAddress> addresses = suitableInterface.getInetAddresses()-->Line_18 $$ while (addresses.hasMoreElements()) [ FD ]
Line_18 $$ while (addresses.hasMoreElements()) -->Line_19 $$ if (addresses.nextElement() instanceof Inet6Address)[ CD ]
Line_13 $$ if (intf.isLoopback()) -->Line_17 $$ Enumeration<InetAddress> addresses = suitableInterface.getInetAddresses()[ CD ]
Line_13 $$ if (intf.isLoopback()) -->Line_15 $$ boolean hasIPv4 = false[ CD ]
Line_10 $$ while (interfaces.hasMoreElements()) -->Line_12 $$ System.out.println("Evaluating " + intf.getName())[ CD ]
Line_15 $$ boolean hasIPv4 = false-->Line_22 $$ hasIPv4 = true[ FD ]
Line_10 $$ while (interfaces.hasMoreElements()) -->Line_13 $$ if (intf.isLoopback()) [ CD ]
Line_9 $$ Enumeration<NetworkInterface> interfaces = NetworkInterface.getNetworkInterfaces()-->Line_10 $$ while (interfaces.hasMoreElements()) [ FD ]
Line_13 $$ if (intf.isLoopback()) -->Line_18 $$ while (addresses.hasMoreElements()) [ CD ]
