Line_20 $$ result = executeOperation(op)-->Line_30 $$ Assert.assertTrue(result.get(RESPONSE_HEADERS).get(PROCESS_STATE).asString().equals("reload-required"))[ FD ]
Line_20 $$ result = executeOperation(op)-->Line_53 $$ Assert.assertFalse("Removed interface with socket binding bound to it.", SUCCESS.equals(result.get(OUTCOME).asString()))[ FD ]
Line_11 $$ ModelNode result = executeOperation(op)-->Line_30 $$ Assert.assertTrue(result.get(RESPONSE_HEADERS).get(PROCESS_STATE).asString().equals("reload-required"))[ FD ]
Line_20 $$ result = executeOperation(op)-->Line_34 $$ result = executeOperation(op)[ FD ]
Line_41 $$ boolean available = WebUtil.testHttpURL(testUrl)-->Line_42 $$ if (!available)[ FD ]
Line_28 $$ result = executeOperation(op, false)-->Line_57 $$ Assert.assertFalse("Removed socked binding with connector still using it.", SUCCESS.equals(result.get(OUTCOME).asString()))[ FD ]
Line_16 $$ result = executeOperation(op)-->Line_30 $$ Assert.assertTrue(result.get(RESPONSE_HEADERS).get(PROCESS_STATE).asString().equals("reload-required"))[ FD ]
Line_16 $$ result = executeOperation(op)-->Line_28 $$ result = executeOperation(op, false)[ FD ]
Line_16 $$ result = executeOperation(op)-->Line_53 $$ Assert.assertFalse("Removed interface with socket binding bound to it.", SUCCESS.equals(result.get(OUTCOME).asString()))[ FD ]
Line_38 $$ rte.retryTask(new Callable<Boolean>() -->Line_42 $$ if (!available)[ CD ]
Line_28 $$ result = executeOperation(op, false)-->Line_53 $$ Assert.assertFalse("Removed interface with socket binding bound to it.", SUCCESS.equals(result.get(OUTCOME).asString()))[ FD ]
Line_38 $$ rte.retryTask(new Callable<Boolean>() -->Line_44 $$ return available[ CD ]
Line_16 $$ result = executeOperation(op)-->Line_57 $$ Assert.assertFalse("Removed socked binding with connector still using it.", SUCCESS.equals(result.get(OUTCOME).asString()))[ FD ]
Line_11 $$ ModelNode result = executeOperation(op)-->Line_34 $$ result = executeOperation(op)[ FD ]
Line_16 $$ result = executeOperation(op)-->Line_34 $$ result = executeOperation(op)[ FD ]
Line_11 $$ ModelNode result = executeOperation(op)-->Line_28 $$ result = executeOperation(op, false)[ FD ]
Line_34 $$ result = executeOperation(op)-->Line_57 $$ Assert.assertFalse("Removed socked binding with connector still using it.", SUCCESS.equals(result.get(OUTCOME).asString()))[ FD ]
Line_16 $$ result = executeOperation(op)-->Line_20 $$ result = executeOperation(op)[ FD ]
Line_20 $$ result = executeOperation(op)-->Line_28 $$ result = executeOperation(op, false)[ FD ]
Line_11 $$ ModelNode result = executeOperation(op)-->Line_20 $$ result = executeOperation(op)[ FD ]
Line_37 $$ RetryTaskExecutor<Boolean> rte = new RetryTaskExecutor<Boolean>()-->Line_38 $$ rte.retryTask(new Callable<Boolean>() [ FD ]
Line_11 $$ ModelNode result = executeOperation(op)-->Line_57 $$ Assert.assertFalse("Removed socked binding with connector still using it.", SUCCESS.equals(result.get(OUTCOME).asString()))[ FD ]
Line_11 $$ ModelNode result = executeOperation(op)-->Line_16 $$ result = executeOperation(op)[ FD ]
Line_38 $$ rte.retryTask(new Callable<Boolean>() -->Line_41 $$ boolean available = WebUtil.testHttpURL(testUrl)[ CD ]
Line_11 $$ ModelNode result = executeOperation(op)-->Line_53 $$ Assert.assertFalse("Removed interface with socket binding bound to it.", SUCCESS.equals(result.get(OUTCOME).asString()))[ FD ]
Line_28 $$ result = executeOperation(op, false)-->Line_34 $$ result = executeOperation(op)[ FD ]
Line_28 $$ result = executeOperation(op, false)-->Line_30 $$ Assert.assertTrue(result.get(RESPONSE_HEADERS).get(PROCESS_STATE).asString().equals("reload-required"))[ FD ]
Line_20 $$ result = executeOperation(op)-->Line_29 $$ Assert.assertEquals(SUCCESS, result.get(OUTCOME).asString())[ FD ]
Line_20 $$ result = executeOperation(op)-->Line_57 $$ Assert.assertFalse("Removed socked binding with connector still using it.", SUCCESS.equals(result.get(OUTCOME).asString()))[ FD ]
Line_28 $$ result = executeOperation(op, false)-->Line_29 $$ Assert.assertEquals(SUCCESS, result.get(OUTCOME).asString())[ FD ]
Line_4 $$ if (testNic == null) -->Line_6 $$ return[ CD ]
Line_16 $$ result = executeOperation(op)-->Line_29 $$ Assert.assertEquals(SUCCESS, result.get(OUTCOME).asString())[ FD ]
Line_11 $$ ModelNode result = executeOperation(op)-->Line_29 $$ Assert.assertEquals(SUCCESS, result.get(OUTCOME).asString())[ FD ]
Line_34 $$ result = executeOperation(op)-->Line_53 $$ Assert.assertFalse("Removed interface with socket binding bound to it.", SUCCESS.equals(result.get(OUTCOME).asString()))[ FD ]
Line_4 $$ if (testNic == null) -->Line_5 $$ logger.error("Could not look up non-default interface")[ CD ]
