Line_2 $$ public static String regexpEscape(String plain) -->Line_5 $$ int csup = ch.length[ CD ]
Line_3 $$ StringBuffer buf = new StringBuffer()-->Line_8 $$ buf.append("\\")[ FD ]
Line_7 $$ if (regexpSpecials.indexOf(ch[c]) != -1) -->Line_8 $$ buf.append("\\")[ CD ]
Line_2 $$ public static String regexpEscape(String plain) -->Line_4 $$ char[] ch = plain.toCharArray()[ FD ]
Line_2 $$ public static String regexpEscape(String plain) -->Line_4 $$ char[] ch = plain.toCharArray()[ CD ]
Line_6 $$ for (int c = 0; c < csup; c++) -->Line_7 $$ if (regexpSpecials.indexOf(ch[c]) != -1) [ CD ]
Line_3 $$ StringBuffer buf = new StringBuffer()-->Line_10 $$ buf.append(ch[c])[ FD ]
Line_5 $$ int csup = ch.length-->Line_6 $$ for (int c = 0; c < csup; c++) [ FD ]
Line_3 $$ StringBuffer buf = new StringBuffer()-->Line_12 $$ return buf.toString()[ FD ]
Line_2 $$ public static String regexpEscape(String plain) -->Line_3 $$ StringBuffer buf = new StringBuffer()[ CD ]
Line_6 $$ for (int c = 0; c < csup; c++) -->Line_10 $$ buf.append(ch[c])[ CD ]
Line_2 $$ public static String regexpEscape(String plain) -->Line_6 $$ for (int c = 0; c < csup; c++) [ CD ]
Line_2 $$ public static String regexpEscape(String plain) -->Line_12 $$ return buf.toString()[ CD ]
