Line_2 $$ public void run() -->Line_4 $$ if (editor == null) [ CD ]
Line_11 $$ final int line = editor.getCaretModel().getLogicalPosition().line-->Line_14 $$ final int end = editor.getDocument().getLineEndOffset(line)[ FD ]
Line_2 $$ public void run() -->Line_14 $$ final int end = editor.getDocument().getLineEndOffset(line)[ CD ]
Line_2 $$ public void run() -->Line_11 $$ final int line = editor.getCaretModel().getLogicalPosition().line[ CD ]
Line_7 $$ if (editor == null) -->Line_8 $$ result.setRejected("Cannot find editor")[ CD ]
Line_2 $$ public void run() -->Line_16 $$ actualText.append("<caret>").append(editor.getDocument().getText(new TextRange(caret, end)))[ CD ]
Line_17 $$ if (expected.equals(actualText.toString())) -->Line_20 $$ result.setRejected("Expected:" + expected + " but was:" + actualText)[ CD ]
Line_3 $$ Editor editor = CommonDataKeys.EDITOR.getData(DataManager.getInstance().getDataContextFromFocus().getResult())-->Line_15 $$ final StringBuffer actualText = new StringBuffer(editor.getDocument().getText(new TextRange(start, caret)))[ FD ]
Line_2 $$ public void run() -->Line_7 $$ if (editor == null) [ CD ]
Line_3 $$ Editor editor = CommonDataKeys.EDITOR.getData(DataManager.getInstance().getDataContextFromFocus().getResult())-->Line_4 $$ if (editor == null) [ FD ]
Line_3 $$ Editor editor = CommonDataKeys.EDITOR.getData(DataManager.getInstance().getDataContextFromFocus().getResult())-->Line_13 $$ final int start = editor.getDocument().getLineStartOffset(line)[ FD ]
Line_15 $$ final StringBuffer actualText = new StringBuffer(editor.getDocument().getText(new TextRange(start, caret)))-->Line_16 $$ actualText.append("<caret>").append(editor.getDocument().getText(new TextRange(caret, end)))[ FD ]
Line_3 $$ Editor editor = CommonDataKeys.EDITOR.getData(DataManager.getInstance().getDataContextFromFocus().getResult())-->Line_16 $$ actualText.append("<caret>").append(editor.getDocument().getText(new TextRange(caret, end)))[ FD ]
Line_3 $$ Editor editor = CommonDataKeys.EDITOR.getData(DataManager.getInstance().getDataContextFromFocus().getResult())-->Line_14 $$ final int end = editor.getDocument().getLineEndOffset(line)[ FD ]
Line_5 $$ editor = CommonDataKeys.EDITOR_EVEN_IF_INACTIVE.getData(DataManager.getInstance().getDataContextFromFocus().getResult())-->Line_13 $$ final int start = editor.getDocument().getLineStartOffset(line)[ FD ]
Line_15 $$ final StringBuffer actualText = new StringBuffer(editor.getDocument().getText(new TextRange(start, caret)))-->Line_17 $$ if (expected.equals(actualText.toString())) [ FD ]
Line_11 $$ final int line = editor.getCaretModel().getLogicalPosition().line-->Line_13 $$ final int start = editor.getDocument().getLineStartOffset(line)[ FD ]
Line_2 $$ public void run() -->Line_17 $$ if (expected.equals(actualText.toString())) [ CD ]
Line_2 $$ public void run() -->Line_15 $$ final StringBuffer actualText = new StringBuffer(editor.getDocument().getText(new TextRange(start, caret)))[ CD ]
Line_7 $$ if (editor == null) -->Line_9 $$ return[ CD ]
Line_5 $$ editor = CommonDataKeys.EDITOR_EVEN_IF_INACTIVE.getData(DataManager.getInstance().getDataContextFromFocus().getResult())-->Line_11 $$ final int line = editor.getCaretModel().getLogicalPosition().line[ FD ]
Line_3 $$ Editor editor = CommonDataKeys.EDITOR.getData(DataManager.getInstance().getDataContextFromFocus().getResult())-->Line_12 $$ final int caret = editor.getCaretModel().getOffset()[ FD ]
Line_4 $$ if (editor == null) -->Line_5 $$ editor = CommonDataKeys.EDITOR_EVEN_IF_INACTIVE.getData(DataManager.getInstance().getDataContextFromFocus().getResult())[ CD ]
Line_17 $$ if (expected.equals(actualText.toString())) -->Line_18 $$ result.setDone()[ CD ]
Line_5 $$ editor = CommonDataKeys.EDITOR_EVEN_IF_INACTIVE.getData(DataManager.getInstance().getDataContextFromFocus().getResult())-->Line_14 $$ final int end = editor.getDocument().getLineEndOffset(line)[ FD ]
Line_5 $$ editor = CommonDataKeys.EDITOR_EVEN_IF_INACTIVE.getData(DataManager.getInstance().getDataContextFromFocus().getResult())-->Line_7 $$ if (editor == null) [ FD ]
Line_3 $$ Editor editor = CommonDataKeys.EDITOR.getData(DataManager.getInstance().getDataContextFromFocus().getResult())-->Line_5 $$ editor = CommonDataKeys.EDITOR_EVEN_IF_INACTIVE.getData(DataManager.getInstance().getDataContextFromFocus().getResult())[ FD ]
Line_5 $$ editor = CommonDataKeys.EDITOR_EVEN_IF_INACTIVE.getData(DataManager.getInstance().getDataContextFromFocus().getResult())-->Line_15 $$ final StringBuffer actualText = new StringBuffer(editor.getDocument().getText(new TextRange(start, caret)))[ FD ]
Line_3 $$ Editor editor = CommonDataKeys.EDITOR.getData(DataManager.getInstance().getDataContextFromFocus().getResult())-->Line_7 $$ if (editor == null) [ FD ]
Line_3 $$ Editor editor = CommonDataKeys.EDITOR.getData(DataManager.getInstance().getDataContextFromFocus().getResult())-->Line_11 $$ final int line = editor.getCaretModel().getLogicalPosition().line[ FD ]
Line_5 $$ editor = CommonDataKeys.EDITOR_EVEN_IF_INACTIVE.getData(DataManager.getInstance().getDataContextFromFocus().getResult())-->Line_12 $$ final int caret = editor.getCaretModel().getOffset()[ FD ]
Line_5 $$ editor = CommonDataKeys.EDITOR_EVEN_IF_INACTIVE.getData(DataManager.getInstance().getDataContextFromFocus().getResult())-->Line_16 $$ actualText.append("<caret>").append(editor.getDocument().getText(new TextRange(caret, end)))[ FD ]
Line_2 $$ public void run() -->Line_13 $$ final int start = editor.getDocument().getLineStartOffset(line)[ CD ]
Line_2 $$ public void run() -->Line_3 $$ Editor editor = CommonDataKeys.EDITOR.getData(DataManager.getInstance().getDataContextFromFocus().getResult())[ CD ]
Line_2 $$ public void run() -->Line_12 $$ final int caret = editor.getCaretModel().getOffset()[ CD ]
