Line_3 $$ Matcher matcher = _varchar2CharPattern.matcher(line)-->Line_8 $$ matcher.appendTail(sb)[ FD ]
Line_2 $$ protected String[] buildColumnTypeTokens(String line) -->Line_9 $$ String[] template = super.buildColumnTypeTokens(sb.toString())[ CD ]
Line_3 $$ Matcher matcher = _varchar2CharPattern.matcher(line)-->Line_6 $$ matcher.appendReplacement(sb, "VARCHAR2(" + matcher.group(1) + "%20CHAR)")[ FD ]
Line_4 $$ StringBuffer sb = new StringBuffer()-->Line_9 $$ String[] template = super.buildColumnTypeTokens(sb.toString())[ FD ]
Line_2 $$ protected String[] buildColumnTypeTokens(String line) -->Line_10 $$ template[3] = StringUtil.replace(template[3], "%20", StringPool.SPACE)[ CD ]
Line_2 $$ protected String[] buildColumnTypeTokens(String line) -->Line_4 $$ StringBuffer sb = new StringBuffer()[ CD ]
Line_2 $$ protected String[] buildColumnTypeTokens(String line) -->Line_8 $$ matcher.appendTail(sb)[ CD ]
Line_4 $$ StringBuffer sb = new StringBuffer()-->Line_8 $$ matcher.appendTail(sb)[ FD ]
Line_2 $$ protected String[] buildColumnTypeTokens(String line) -->Line_3 $$ Matcher matcher = _varchar2CharPattern.matcher(line)[ FD ]
Line_3 $$ Matcher matcher = _varchar2CharPattern.matcher(line)-->Line_5 $$ while (matcher.find()) [ FD ]
Line_2 $$ protected String[] buildColumnTypeTokens(String line) -->Line_5 $$ while (matcher.find()) [ CD ]
Line_5 $$ while (matcher.find()) -->Line_6 $$ matcher.appendReplacement(sb, "VARCHAR2(" + matcher.group(1) + "%20CHAR)")[ CD ]
Line_2 $$ protected String[] buildColumnTypeTokens(String line) -->Line_11 $$ return template[ CD ]
Line_4 $$ StringBuffer sb = new StringBuffer()-->Line_6 $$ matcher.appendReplacement(sb, "VARCHAR2(" + matcher.group(1) + "%20CHAR)")[ FD ]
Line_2 $$ protected String[] buildColumnTypeTokens(String line) -->Line_3 $$ Matcher matcher = _varchar2CharPattern.matcher(line)[ CD ]
