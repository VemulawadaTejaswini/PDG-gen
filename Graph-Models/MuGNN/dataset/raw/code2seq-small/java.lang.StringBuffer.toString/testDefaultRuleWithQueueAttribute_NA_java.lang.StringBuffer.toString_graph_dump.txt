Line_2 $$ public void testDefaultRuleWithQueueAttribute() throws Exception -->Line_5 $$ sb.append("<queuePlacementPolicy>")[ CD ]
Line_9 $$ QueuePlacementPolicy policy = parse(sb.toString())-->Line_10 $$ assertEquals("root.someDefaultQueue", policy.assignAppToQueue("root.default", "user1"))[ FD ]
Line_4 $$ StringBuffer sb = new StringBuffer()-->Line_8 $$ sb.append("</queuePlacementPolicy>")[ FD ]
Line_4 $$ StringBuffer sb = new StringBuffer()-->Line_9 $$ QueuePlacementPolicy policy = parse(sb.toString())[ FD ]
Line_4 $$ StringBuffer sb = new StringBuffer()-->Line_7 $$ sb.append("  <rule name='default' queue='root.someDefaultQueue'/>")[ FD ]
Line_2 $$ public void testDefaultRuleWithQueueAttribute() throws Exception -->Line_6 $$ sb.append("  <rule name='specified' create='false' />")[ CD ]
Line_2 $$ public void testDefaultRuleWithQueueAttribute() throws Exception -->Line_10 $$ assertEquals("root.someDefaultQueue", policy.assignAppToQueue("root.default", "user1"))[ CD ]
Line_2 $$ public void testDefaultRuleWithQueueAttribute() throws Exception -->Line_8 $$ sb.append("</queuePlacementPolicy>")[ CD ]
Line_2 $$ public void testDefaultRuleWithQueueAttribute() throws Exception -->Line_4 $$ StringBuffer sb = new StringBuffer()[ CD ]
Line_2 $$ public void testDefaultRuleWithQueueAttribute() throws Exception -->Line_3 $$ configuredQueues.get(FSQueueType.LEAF).add("root.someDefaultQueue")[ CD ]
Line_4 $$ StringBuffer sb = new StringBuffer()-->Line_6 $$ sb.append("  <rule name='specified' create='false' />")[ FD ]
Line_4 $$ StringBuffer sb = new StringBuffer()-->Line_5 $$ sb.append("<queuePlacementPolicy>")[ FD ]
Line_2 $$ public void testDefaultRuleWithQueueAttribute() throws Exception -->Line_9 $$ QueuePlacementPolicy policy = parse(sb.toString())[ CD ]
Line_2 $$ public void testDefaultRuleWithQueueAttribute() throws Exception -->Line_7 $$ sb.append("  <rule name='default' queue='root.someDefaultQueue'/>")[ CD ]
