Line_11 $$ StringTokenizer tokens = new StringTokenizer(line, " \t\n\r\f%")-->Line_13 $$ this.filesystem = tokens.nextToken()[ FD ]
Line_5 $$ if (output.size() > 0) -->Line_6 $$ sb.append(": " + output.get(0))[ CD ]
Line_11 $$ StringTokenizer tokens = new StringTokenizer(line, " \t\n\r\f%")-->Line_30 $$ this.mount = tokens.nextToken()[ FD ]
Line_2 $$ protected void parseOutput() throws IOException -->Line_17 $$ if (!tokens.hasMoreTokens()) [ CD ]
Line_18 $$ if (output.size() > 2) -->Line_19 $$ line = output.get(2)[ CD ]
Line_11 $$ StringTokenizer tokens = new StringTokenizer(line, " \t\n\r\f%")-->Line_23 $$ tokens = new StringTokenizer(line, " \t\n\r\f%")[ FD ]
Line_4 $$ StringBuffer sb = new StringBuffer("Fewer lines of output than expected")-->Line_6 $$ sb.append(": " + output.get(0))[ FD ]
Line_3 $$ if (output.size() < 2) -->Line_4 $$ StringBuffer sb = new StringBuffer("Fewer lines of output than expected")[ CD ]
Line_23 $$ tokens = new StringTokenizer(line, " \t\n\r\f%")-->Line_30 $$ this.mount = tokens.nextToken()[ FD ]
Line_2 $$ protected void parseOutput() throws IOException -->Line_10 $$ String line = output.get(1)[ CD ]
Line_2 $$ protected void parseOutput() throws IOException -->Line_11 $$ StringTokenizer tokens = new StringTokenizer(line, " \t\n\r\f%")[ CD ]
Line_10 $$ String line = output.get(1)-->Line_19 $$ line = output.get(2)[ FD ]
Line_11 $$ StringTokenizer tokens = new StringTokenizer(line, " \t\n\r\f%")-->Line_27 $$ Long.parseLong(tokens.nextToken())[ FD ]
Line_11 $$ StringTokenizer tokens = new StringTokenizer(line, " \t\n\r\f%")-->Line_17 $$ if (!tokens.hasMoreTokens()) [ FD ]
Line_4 $$ StringBuffer sb = new StringBuffer("Fewer lines of output than expected")-->Line_8 $$ throw new IOException(sb.toString())[ FD ]
Line_17 $$ if (!tokens.hasMoreTokens()) -->Line_23 $$ tokens = new StringTokenizer(line, " \t\n\r\f%")[ CD ]
Line_17 $$ if (!tokens.hasMoreTokens()) -->Line_18 $$ if (output.size() > 2) [ CD ]
Line_11 $$ StringTokenizer tokens = new StringTokenizer(line, " \t\n\r\f%")-->Line_28 $$ Long.parseLong(tokens.nextToken())[ FD ]
Line_11 $$ StringTokenizer tokens = new StringTokenizer(line, " \t\n\r\f%")-->Line_29 $$ Integer.parseInt(tokens.nextToken())[ FD ]
Line_23 $$ tokens = new StringTokenizer(line, " \t\n\r\f%")-->Line_29 $$ Integer.parseInt(tokens.nextToken())[ FD ]
Line_23 $$ tokens = new StringTokenizer(line, " \t\n\r\f%")-->Line_28 $$ Long.parseLong(tokens.nextToken())[ FD ]
Line_3 $$ if (output.size() < 2) -->Line_5 $$ if (output.size() > 0) [ CD ]
Line_11 $$ StringTokenizer tokens = new StringTokenizer(line, " \t\n\r\f%")-->Line_26 $$ Long.parseLong(tokens.nextToken())[ FD ]
Line_23 $$ tokens = new StringTokenizer(line, " \t\n\r\f%")-->Line_27 $$ Long.parseLong(tokens.nextToken())[ FD ]
Line_23 $$ tokens = new StringTokenizer(line, " \t\n\r\f%")-->Line_26 $$ Long.parseLong(tokens.nextToken())[ FD ]
Line_2 $$ protected void parseOutput() throws IOException -->Line_3 $$ if (output.size() < 2) [ CD ]
