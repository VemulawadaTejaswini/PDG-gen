Line_7 $$ line = line.trim()-->Line_12 $$ if (line.indexOf('[ FD ]
Line_2 $$ private static String getMethodSignature(String template) -->Line_3 $$ String s = after(template, "*/").trim()[ CD ]
Line_7 $$ line = line.trim()-->Line_8 $$ if (line.startsWith("@")) [ FD ]
Line_2 $$ private static String getMethodSignature(String template) -->Line_3 $$ String s = after(template, "*/").trim()[ FD ]
Line_3 $$ String s = after(template, "*/").trim()-->Line_5 $$ String[] lines = s.split("\n")[ FD ]
Line_6 $$ for (String line : lines) -->Line_8 $$ if (line.startsWith("@")) [ FD ]
Line_6 $$ for (String line : lines) -->Line_12 $$ if (line.indexOf('[ FD ]
Line_2 $$ private static String getMethodSignature(String template) -->Line_4 $$ StringBuffer signature = new StringBuffer()[ CD ]
Line_7 $$ line = line.trim()-->Line_11 $$ signature.append(line)[ FD ]
Line_2 $$ private static String getMethodSignature(String template) -->Line_16 $$ String result = signature.toString()[ CD ]
Line_4 $$ StringBuffer signature = new StringBuffer()-->Line_16 $$ String result = signature.toString()[ FD ]
Line_6 $$ for (String line : lines) -->Line_7 $$ line = line.trim()[ FD ]
Line_2 $$ private static String getMethodSignature(String template) -->Line_17 $$ return result.substring(0, result.lastIndexOf("[ CD ]
Line_16 $$ String result = signature.toString()-->Line_17 $$ return result.substring(0, result.lastIndexOf("[ FD ]
Line_6 $$ for (String line : lines) -->Line_11 $$ signature.append(line)[ FD ]
Line_4 $$ StringBuffer signature = new StringBuffer()-->Line_11 $$ signature.append(line)[ FD ]
Line_2 $$ private static String getMethodSignature(String template) -->Line_5 $$ String[] lines = s.split("\n")[ CD ]
