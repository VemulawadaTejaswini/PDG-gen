Line_5 $$ StringBuffer b = new StringBuffer()-->Line_9 $$ b.append("::").append(Util.javaToIDLName(n))[ FD ]
Line_3 $$ if (idlModuleName == null) -->Line_6 $$ while (!"".equals(pkgName)) [ CD ]
Line_4 $$ String pkgName = cls.getPackage().getName()-->Line_8 $$ String n = (idx == -1) ? pkgName : pkgName.substring(0, idx)[ FD ]
Line_6 $$ while (!"".equals(pkgName)) -->Line_7 $$ int idx = pkgName.indexOf('.')[ CD ]
Line_3 $$ if (idlModuleName == null) -->Line_12 $$ idlModuleName = b.toString()[ CD ]
Line_10 $$ pkgName = (idx == -1) ? "" : pkgName.substring(idx + 1)-->Line_6 $$ while (!"".equals(pkgName)) [ FD ]
Line_10 $$ pkgName = (idx == -1) ? "" : pkgName.substring(idx + 1)-->Line_8 $$ String n = (idx == -1) ? pkgName : pkgName.substring(0, idx)[ FD ]
Line_4 $$ String pkgName = cls.getPackage().getName()-->Line_7 $$ int idx = pkgName.indexOf('.')[ FD ]
Line_2 $$ public String getIDLModuleName() -->Line_3 $$ if (idlModuleName == null) [ CD ]
Line_2 $$ public String getIDLModuleName() -->Line_14 $$ return idlModuleName[ CD ]
Line_6 $$ while (!"".equals(pkgName)) -->Line_9 $$ b.append("::").append(Util.javaToIDLName(n))[ CD ]
Line_6 $$ while (!"".equals(pkgName)) -->Line_10 $$ pkgName = (idx == -1) ? "" : pkgName.substring(idx + 1)[ CD ]
Line_5 $$ StringBuffer b = new StringBuffer()-->Line_12 $$ idlModuleName = b.toString()[ FD ]
Line_4 $$ String pkgName = cls.getPackage().getName()-->Line_10 $$ pkgName = (idx == -1) ? "" : pkgName.substring(idx + 1)[ FD ]
Line_4 $$ String pkgName = cls.getPackage().getName()-->Line_6 $$ while (!"".equals(pkgName)) [ FD ]
Line_3 $$ if (idlModuleName == null) -->Line_5 $$ StringBuffer b = new StringBuffer()[ CD ]
Line_7 $$ int idx = pkgName.indexOf('.')-->Line_8 $$ String n = (idx == -1) ? pkgName : pkgName.substring(0, idx)[ FD ]
Line_6 $$ while (!"".equals(pkgName)) -->Line_8 $$ String n = (idx == -1) ? pkgName : pkgName.substring(0, idx)[ CD ]
Line_3 $$ if (idlModuleName == null) -->Line_4 $$ String pkgName = cls.getPackage().getName()[ CD ]
Line_8 $$ String n = (idx == -1) ? pkgName : pkgName.substring(0, idx)-->Line_9 $$ b.append("::").append(Util.javaToIDLName(n))[ FD ]
Line_10 $$ pkgName = (idx == -1) ? "" : pkgName.substring(idx + 1)-->Line_7 $$ int idx = pkgName.indexOf('.')[ FD ]
