Line_2 $$ public PsiElement bindToText(PsiClass containingClass, StringBuffer newText) -->Line_6 $$ PsiElement ref = PsiTreeUtil.getChildOfType(tag, PsiDocMethodOrFieldRef.class)[ CD ]
Line_2 $$ public PsiElement bindToText(PsiClass containingClass, StringBuffer newText) -->Line_3 $$ PsiElementFactory elementFactory = JavaPsiFacade.getInstance(containingClass.getProject()).getElementFactory()[ CD ]
Line_2 $$ public PsiElement bindToText(PsiClass containingClass, StringBuffer newText) -->Line_3 $$ PsiElementFactory elementFactory = JavaPsiFacade.getInstance(containingClass.getProject()).getElementFactory()[ FD ]
Line_2 $$ public PsiElement bindToText(PsiClass containingClass, StringBuffer newText) -->Line_4 $$ PsiComment comment = elementFactory.createCommentFromText(newText.toString(), null)[ FD ]
Line_3 $$ PsiElementFactory elementFactory = JavaPsiFacade.getInstance(containingClass.getProject()).getElementFactory()-->Line_4 $$ PsiComment comment = elementFactory.createCommentFromText(newText.toString(), null)[ FD ]
Line_6 $$ PsiElement ref = PsiTreeUtil.getChildOfType(tag, PsiDocMethodOrFieldRef.class)-->Line_8 $$ return replace(ref)[ FD ]
Line_5 $$ PsiElement tag = PsiTreeUtil.getChildOfType(comment, PsiDocTag.class)-->Line_6 $$ PsiElement ref = PsiTreeUtil.getChildOfType(tag, PsiDocMethodOrFieldRef.class)[ FD ]
Line_2 $$ public PsiElement bindToText(PsiClass containingClass, StringBuffer newText) -->Line_5 $$ PsiElement tag = PsiTreeUtil.getChildOfType(comment, PsiDocTag.class)[ CD ]
Line_4 $$ PsiComment comment = elementFactory.createCommentFromText(newText.toString(), null)-->Line_5 $$ PsiElement tag = PsiTreeUtil.getChildOfType(comment, PsiDocTag.class)[ FD ]
Line_2 $$ public PsiElement bindToText(PsiClass containingClass, StringBuffer newText) -->Line_8 $$ return replace(ref)[ CD ]
Line_2 $$ public PsiElement bindToText(PsiClass containingClass, StringBuffer newText) -->Line_4 $$ PsiComment comment = elementFactory.createCommentFromText(newText.toString(), null)[ CD ]
