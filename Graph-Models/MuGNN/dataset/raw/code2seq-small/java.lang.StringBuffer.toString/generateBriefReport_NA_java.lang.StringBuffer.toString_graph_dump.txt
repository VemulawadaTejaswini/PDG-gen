Line_56 $$ int hits = 0-->Line_86 $$ defaultHits -= hits[ FD ]
Line_22 $$ if (parent instanceof PsiIfStatement) -->Line_23 $$ condition = ((PsiIfStatement) parent).getCondition()[ CD ]
Line_11 $$ String report = extension.generateBriefReport(editor, psiFile, lineNumber, startOffset, endOffset, lineData)-->Line_12 $$ if (report != null) [ FD ]
Line_80 $$ hits += switchHits-->Line_90 $$ hits += defaultHits[ FD ]
Line_20 $$ PsiElement parent = PsiTreeUtil.getParentOfType(psiFile.findElementAt(offset), PsiStatement.class)-->Line_32 $$ if (parent instanceof PsiForeachStatement) [ FD ]
Line_23 $$ condition = ((PsiIfStatement) parent).getCondition()-->Line_37 $$ if (condition != null && PsiTreeUtil.isAncestor(condition, psiFile.findElementAt(offset), false)) [ FD ]
Line_60 $$ if (jumpData.getTrueHits() + jumpData.getFalseHits() > 0) -->Line_61 $$ final PsiExpression expression = expressions.get(idx++)[ CD ]
Line_2 $$ public String generateBriefReport(@NotNull Editor editor, @NotNull PsiFile psiFile, int lineNumber, int startOffset, int endOffset, @Nullable LineData lineData) -->Line_71 $$ if (lineData.getSwitches() != null) [ FD ]
Line_74 $$ final PsiExpression conditionExpression = expressions.get(idx++)-->Line_83 $$ final boolean hasDefaultLabel = hasDefaultLabel(conditionExpression)[ FD ]
Line_80 $$ hits += switchHits-->Line_86 $$ defaultHits -= hits[ FD ]
Line_2 $$ public String generateBriefReport(@NotNull Editor editor, @NotNull PsiFile psiFile, int lineNumber, int startOffset, int endOffset, @Nullable LineData lineData) -->Line_5 $$ if (lineData == null) [ CD ]
Line_59 $$ final JumpData jumpData = (JumpData) o-->Line_60 $$ if (jumpData.getTrueHits() + jumpData.getFalseHits() > 0) [ FD ]
Line_25 $$ condition = ((PsiSwitchStatement) parent).getExpression()-->Line_29 $$ condition = ((PsiForStatement) parent).getCondition()[ FD ]
Line_31 $$ condition = ((PsiWhileStatement) parent).getCondition()-->Line_37 $$ if (condition != null && PsiTreeUtil.isAncestor(condition, psiFile.findElementAt(offset), false)) [ FD ]
Line_53 $$ final String indent = "    "-->Line_79 $$ buf.append(indent).append(indent).append("case ").append(key).append(": ").append(switchHits).append("\n")[ FD ]
Line_2 $$ public String generateBriefReport(@NotNull Editor editor, @NotNull PsiFile psiFile, int lineNumber, int startOffset, int endOffset, @Nullable LineData lineData) -->Line_18 $$ final Project project = editor.getProject()[ CD ]
Line_42 $$ final PsiExpression expression = ((ConditionalBranchingInstruction) instruction).expression-->Line_62 $$ final PsiElement parentExpression = expression.getParent()[ FD ]
Line_23 $$ condition = ((PsiIfStatement) parent).getCondition()-->Line_27 $$ condition = ((PsiDoWhileStatement) parent).getCondition()[ FD ]
Line_19 $$ for (int offset = startOffset; offset < endOffset; offset++) -->Line_22 $$ if (parent instanceof PsiIfStatement) [ CD ]
Line_19 $$ for (int offset = startOffset; offset < endOffset; offset++) -->Line_20 $$ PsiElement parent = PsiTreeUtil.getParentOfType(psiFile.findElementAt(offset), PsiStatement.class)[ FD ]
Line_3 $$ final StringBuffer buf = new StringBuffer()-->Line_64 $$ buf.append(indent).append(expression.getText()).append("\n")[ FD ]
Line_67 $$ hits += jumpData.getTrueHits() + jumpData.getFalseHits()-->Line_90 $$ hits += defaultHits[ FD ]
Line_2 $$ public String generateBriefReport(@NotNull Editor editor, @NotNull PsiFile psiFile, int lineNumber, int startOffset, int endOffset, @Nullable LineData lineData) -->Line_53 $$ final String indent = "    "[ CD ]
Line_67 $$ hits += jumpData.getTrueHits() + jumpData.getFalseHits()-->Line_80 $$ hits += switchHits[ FD ]
Line_3 $$ final StringBuffer buf = new StringBuffer()-->Line_6 $$ buf.append(0)[ FD ]
Line_23 $$ condition = ((PsiIfStatement) parent).getCondition()-->Line_29 $$ condition = ((PsiForStatement) parent).getCondition()[ FD ]
Line_73 $$ final SwitchData switchData = (SwitchData) o-->Line_78 $$ final int switchHits = switchData.getHits()[i++][ FD ]
Line_2 $$ public String generateBriefReport(@NotNull Editor editor, @NotNull PsiFile psiFile, int lineNumber, int startOffset, int endOffset, @Nullable LineData lineData) -->Line_4 $$ buf.append("Hits: ")[ CD ]
Line_34 $$ if (parent instanceof PsiAssertStatement) -->Line_35 $$ condition = ((PsiAssertStatement) parent).getAssertCondition()[ CD ]
Line_25 $$ condition = ((PsiSwitchStatement) parent).getExpression()-->Line_37 $$ if (condition != null && PsiTreeUtil.isAncestor(condition, psiFile.findElementAt(offset), false)) [ FD ]
Line_86 $$ defaultHits -= hits-->Line_89 $$ buf.append(indent).append(indent).append("default: ").append(defaultHits).append("\n")[ FD ]
Line_20 $$ PsiElement parent = PsiTreeUtil.getParentOfType(psiFile.findElementAt(offset), PsiStatement.class)-->Line_28 $$ if (parent instanceof PsiForStatement) [ FD ]
Line_35 $$ condition = ((PsiAssertStatement) parent).getAssertCondition()-->Line_37 $$ if (condition != null && PsiTreeUtil.isAncestor(condition, psiFile.findElementAt(offset), false)) [ FD ]
Line_60 $$ if (jumpData.getTrueHits() + jumpData.getFalseHits() > 0) -->Line_62 $$ final PsiElement parentExpression = expression.getParent()[ CD ]
Line_3 $$ final StringBuffer buf = new StringBuffer()-->Line_49 $$ return buf.toString()[ FD ]
Line_30 $$ if (parent instanceof PsiWhileStatement) -->Line_32 $$ if (parent instanceof PsiForeachStatement) [ CD ]
Line_84 $$ if (hasDefaultLabel || defaultHits > 0) -->Line_88 $$ if (hasDefaultLabel || defaultHits > 0) [ CD ]
Line_28 $$ if (parent instanceof PsiForStatement) -->Line_30 $$ if (parent instanceof PsiWhileStatement) [ CD ]
Line_18 $$ final Project project = editor.getProject()-->Line_39 $$ final ControlFlow controlFlow = ControlFlowFactory.getInstance(project).getControlFlow(parent, AllVariablesControlFlowPolicy.getInstance())[ FD ]
Line_2 $$ public String generateBriefReport(@NotNull Editor editor, @NotNull PsiFile psiFile, int lineNumber, int startOffset, int endOffset, @Nullable LineData lineData) -->Line_72 $$ for (Object o : lineData.getSwitches()) [ FD ]
Line_19 $$ for (int offset = startOffset; offset < endOffset; offset++) -->Line_37 $$ if (condition != null && PsiTreeUtil.isAncestor(condition, psiFile.findElementAt(offset), false)) [ FD ]
Line_24 $$ if (parent instanceof PsiSwitchStatement) -->Line_26 $$ if (parent instanceof PsiDoWhileStatement) [ CD ]
Line_32 $$ if (parent instanceof PsiForeachStatement) -->Line_34 $$ if (parent instanceof PsiAssertStatement) [ CD ]
Line_2 $$ public String generateBriefReport(@NotNull Editor editor, @NotNull PsiFile psiFile, int lineNumber, int startOffset, int endOffset, @Nullable LineData lineData) -->Line_11 $$ String report = extension.generateBriefReport(editor, psiFile, lineNumber, startOffset, endOffset, lineData)[ FD ]
Line_12 $$ if (report != null) -->Line_14 $$ return report[ CD ]
Line_95 $$ if (lineData.getHits() > hits && hits > 0) -->Line_96 $$ buf.append("Unknown outcome: ").append(lineData.getHits() - hits)[ CD ]
Line_60 $$ if (jumpData.getTrueHits() + jumpData.getFalseHits() > 0) -->Line_67 $$ hits += jumpData.getTrueHits() + jumpData.getFalseHits()[ CD ]
Line_53 $$ final String indent = "    "-->Line_75 $$ buf.append(indent).append(conditionExpression.getText()).append("\n")[ FD ]
Line_3 $$ final StringBuffer buf = new StringBuffer()-->Line_102 $$ return buf.toString()[ FD ]
Line_19 $$ for (int offset = startOffset; offset < endOffset; offset++) -->Line_21 $$ PsiElement condition = null[ CD ]
Line_20 $$ PsiElement parent = PsiTreeUtil.getParentOfType(psiFile.findElementAt(offset), PsiStatement.class)-->Line_26 $$ if (parent instanceof PsiDoWhileStatement) [ FD ]
Line_42 $$ final PsiExpression expression = ((ConditionalBranchingInstruction) instruction).expression-->Line_43 $$ if (!expressions.contains(expression)) [ FD ]
Line_17 $$ final List<PsiExpression> expressions = new ArrayList<PsiExpression>()-->Line_74 $$ final PsiExpression conditionExpression = expressions.get(idx++)[ FD ]
Line_2 $$ public String generateBriefReport(@NotNull Editor editor, @NotNull PsiFile psiFile, int lineNumber, int startOffset, int endOffset, @Nullable LineData lineData) -->Line_96 $$ buf.append("Unknown outcome: ").append(lineData.getHits() - hits)[ FD ]
Line_78 $$ final int switchHits = switchData.getHits()[i++]-->Line_79 $$ buf.append(indent).append(indent).append("case ").append(key).append(": ").append(switchHits).append("\n")[ FD ]
Line_82 $$ int defaultHits = switchData.getDefaultHits()-->Line_90 $$ hits += defaultHits[ FD ]
Line_53 $$ final String indent = "    "-->Line_64 $$ buf.append(indent).append(expression.getText()).append("\n")[ FD ]
Line_29 $$ condition = ((PsiForStatement) parent).getCondition()-->Line_35 $$ condition = ((PsiAssertStatement) parent).getAssertCondition()[ FD ]
Line_29 $$ condition = ((PsiForStatement) parent).getCondition()-->Line_33 $$ condition = ((PsiForeachStatement) parent).getIteratedValue()[ FD ]
Line_3 $$ final StringBuffer buf = new StringBuffer()-->Line_75 $$ buf.append(indent).append(conditionExpression.getText()).append("\n")[ FD ]
Line_53 $$ final String indent = "    "-->Line_89 $$ buf.append(indent).append(indent).append("default: ").append(defaultHits).append("\n")[ FD ]
Line_31 $$ condition = ((PsiWhileStatement) parent).getCondition()-->Line_35 $$ condition = ((PsiAssertStatement) parent).getAssertCondition()[ FD ]
Line_33 $$ condition = ((PsiForeachStatement) parent).getIteratedValue()-->Line_37 $$ if (condition != null && PsiTreeUtil.isAncestor(condition, psiFile.findElementAt(offset), false)) [ FD ]
Line_27 $$ condition = ((PsiDoWhileStatement) parent).getCondition()-->Line_29 $$ condition = ((PsiForStatement) parent).getCondition()[ FD ]
Line_76 $$ int i = 0-->Line_78 $$ final int switchHits = switchData.getHits()[i++][ FD ]
Line_3 $$ final StringBuffer buf = new StringBuffer()-->Line_9 $$ buf.append(lineData.getHits()).append("\n")[ FD ]
Line_10 $$ for (JavaCoverageEngineExtension extension : Extensions.getExtensions(JavaCoverageEngineExtension.EP_NAME)) -->Line_11 $$ String report = extension.generateBriefReport(editor, psiFile, lineNumber, startOffset, endOffset, lineData)[ FD ]
Line_33 $$ condition = ((PsiForeachStatement) parent).getIteratedValue()-->Line_35 $$ condition = ((PsiAssertStatement) parent).getAssertCondition()[ FD ]
Line_40 $$ for (Instruction instruction : controlFlow.getInstructions()) -->Line_41 $$ if (instruction instanceof ConditionalBranchingInstruction) [ FD ]
Line_42 $$ final PsiExpression expression = ((ConditionalBranchingInstruction) instruction).expression-->Line_64 $$ buf.append(indent).append(expression.getText()).append("\n")[ FD ]
Line_2 $$ public String generateBriefReport(@NotNull Editor editor, @NotNull PsiFile psiFile, int lineNumber, int startOffset, int endOffset, @Nullable LineData lineData) -->Line_57 $$ if (lineData.getJumps() != null) [ FD ]
Line_19 $$ for (int offset = startOffset; offset < endOffset; offset++) -->Line_37 $$ if (condition != null && PsiTreeUtil.isAncestor(condition, psiFile.findElementAt(offset), false)) [ CD ]
Line_23 $$ condition = ((PsiIfStatement) parent).getCondition()-->Line_25 $$ condition = ((PsiSwitchStatement) parent).getExpression()[ FD ]
Line_83 $$ final boolean hasDefaultLabel = hasDefaultLabel(conditionExpression)-->Line_85 $$ if (!hasDefaultLabel) [ FD ]
Line_20 $$ PsiElement parent = PsiTreeUtil.getParentOfType(psiFile.findElementAt(offset), PsiStatement.class)-->Line_30 $$ if (parent instanceof PsiWhileStatement) [ FD ]
Line_2 $$ public String generateBriefReport(@NotNull Editor editor, @NotNull PsiFile psiFile, int lineNumber, int startOffset, int endOffset, @Nullable LineData lineData) -->Line_20 $$ PsiElement parent = PsiTreeUtil.getParentOfType(psiFile.findElementAt(offset), PsiStatement.class)[ FD ]
Line_20 $$ PsiElement parent = PsiTreeUtil.getParentOfType(psiFile.findElementAt(offset), PsiStatement.class)-->Line_39 $$ final ControlFlow controlFlow = ControlFlowFactory.getInstance(project).getControlFlow(parent, AllVariablesControlFlowPolicy.getInstance())[ FD ]
Line_22 $$ if (parent instanceof PsiIfStatement) -->Line_24 $$ if (parent instanceof PsiSwitchStatement) [ CD ]
Line_88 $$ if (hasDefaultLabel || defaultHits > 0) -->Line_89 $$ buf.append(indent).append(indent).append("default: ").append(defaultHits).append("\n")[ CD ]
Line_3 $$ final StringBuffer buf = new StringBuffer()-->Line_89 $$ buf.append(indent).append(indent).append("default: ").append(defaultHits).append("\n")[ FD ]
Line_55 $$ int idx = 0-->Line_74 $$ final PsiExpression conditionExpression = expressions.get(idx++)[ FD ]
Line_77 $$ for (int key : switchData.getKeys()) -->Line_79 $$ buf.append(indent).append(indent).append("case ").append(key).append(": ").append(switchHits).append("\n")[ FD ]
Line_2 $$ public String generateBriefReport(@NotNull Editor editor, @NotNull PsiFile psiFile, int lineNumber, int startOffset, int endOffset, @Nullable LineData lineData) -->Line_100 $$ return "Hits: " + lineData.getHits()[ FD ]
Line_73 $$ final SwitchData switchData = (SwitchData) o-->Line_77 $$ for (int key : switchData.getKeys()) [ FD ]
Line_27 $$ condition = ((PsiDoWhileStatement) parent).getCondition()-->Line_37 $$ if (condition != null && PsiTreeUtil.isAncestor(condition, psiFile.findElementAt(offset), false)) [ FD ]
Line_27 $$ condition = ((PsiDoWhileStatement) parent).getCondition()-->Line_31 $$ condition = ((PsiWhileStatement) parent).getCondition()[ FD ]
Line_20 $$ PsiElement parent = PsiTreeUtil.getParentOfType(psiFile.findElementAt(offset), PsiStatement.class)-->Line_34 $$ if (parent instanceof PsiAssertStatement) [ FD ]
Line_21 $$ PsiElement condition = null-->Line_37 $$ if (condition != null && PsiTreeUtil.isAncestor(condition, psiFile.findElementAt(offset), false)) [ FD ]
Line_55 $$ int idx = 0-->Line_61 $$ final PsiExpression expression = expressions.get(idx++)[ FD ]
Line_3 $$ final StringBuffer buf = new StringBuffer()-->Line_4 $$ buf.append("Hits: ")[ FD ]
Line_26 $$ if (parent instanceof PsiDoWhileStatement) -->Line_28 $$ if (parent instanceof PsiForStatement) [ CD ]
Line_2 $$ public String generateBriefReport(@NotNull Editor editor, @NotNull PsiFile psiFile, int lineNumber, int startOffset, int endOffset, @Nullable LineData lineData) -->Line_37 $$ if (condition != null && PsiTreeUtil.isAncestor(condition, psiFile.findElementAt(offset), false)) [ FD ]
Line_17 $$ final List<PsiExpression> expressions = new ArrayList<PsiExpression>()-->Line_43 $$ if (!expressions.contains(expression)) [ FD ]
Line_86 $$ defaultHits -= hits-->Line_90 $$ hits += defaultHits[ FD ]
Line_83 $$ final boolean hasDefaultLabel = hasDefaultLabel(conditionExpression)-->Line_84 $$ if (hasDefaultLabel || defaultHits > 0) [ FD ]
Line_23 $$ condition = ((PsiIfStatement) parent).getCondition()-->Line_35 $$ condition = ((PsiAssertStatement) parent).getAssertCondition()[ FD ]
Line_21 $$ PsiElement condition = null-->Line_29 $$ condition = ((PsiForStatement) parent).getCondition()[ FD ]
Line_2 $$ public String generateBriefReport(@NotNull Editor editor, @NotNull PsiFile psiFile, int lineNumber, int startOffset, int endOffset, @Nullable LineData lineData) -->Line_9 $$ buf.append(lineData.getHits()).append("\n")[ CD ]
Line_60 $$ if (jumpData.getTrueHits() + jumpData.getFalseHits() > 0) -->Line_64 $$ buf.append(indent).append(expression.getText()).append("\n")[ CD ]
Line_26 $$ if (parent instanceof PsiDoWhileStatement) -->Line_27 $$ condition = ((PsiDoWhileStatement) parent).getCondition()[ CD ]
Line_19 $$ for (int offset = startOffset; offset < endOffset; offset++) -->Line_20 $$ PsiElement parent = PsiTreeUtil.getParentOfType(psiFile.findElementAt(offset), PsiStatement.class)[ CD ]
Line_21 $$ PsiElement condition = null-->Line_31 $$ condition = ((PsiWhileStatement) parent).getCondition()[ FD ]
Line_3 $$ final StringBuffer buf = new StringBuffer()-->Line_66 $$ buf.append(indent).append(indent).append("false hits: ").append(reverse ? jumpData.getTrueHits() : jumpData.getFalseHits()).append("\n")[ FD ]
Line_25 $$ condition = ((PsiSwitchStatement) parent).getExpression()-->Line_31 $$ condition = ((PsiWhileStatement) parent).getCondition()[ FD ]
Line_74 $$ final PsiExpression conditionExpression = expressions.get(idx++)-->Line_75 $$ buf.append(indent).append(conditionExpression.getText()).append("\n")[ FD ]
Line_32 $$ if (parent instanceof PsiForeachStatement) -->Line_33 $$ condition = ((PsiForeachStatement) parent).getIteratedValue()[ CD ]
Line_2 $$ public String generateBriefReport(@NotNull Editor editor, @NotNull PsiFile psiFile, int lineNumber, int startOffset, int endOffset, @Nullable LineData lineData) -->Line_5 $$ if (lineData == null) [ FD ]
Line_21 $$ PsiElement condition = null-->Line_23 $$ condition = ((PsiIfStatement) parent).getCondition()[ FD ]
Line_11 $$ String report = extension.generateBriefReport(editor, psiFile, lineNumber, startOffset, endOffset, lineData)-->Line_13 $$ buf.append(report)[ FD ]
Line_3 $$ final StringBuffer buf = new StringBuffer()-->Line_65 $$ buf.append(indent).append(indent).append("true hits: ").append(reverse ? jumpData.getFalseHits() : jumpData.getTrueHits()).append("\n")[ FD ]
Line_25 $$ condition = ((PsiSwitchStatement) parent).getExpression()-->Line_35 $$ condition = ((PsiAssertStatement) parent).getAssertCondition()[ FD ]
Line_2 $$ public String generateBriefReport(@NotNull Editor editor, @NotNull PsiFile psiFile, int lineNumber, int startOffset, int endOffset, @Nullable LineData lineData) -->Line_17 $$ final List<PsiExpression> expressions = new ArrayList<PsiExpression>()[ CD ]
Line_31 $$ condition = ((PsiWhileStatement) parent).getCondition()-->Line_33 $$ condition = ((PsiForeachStatement) parent).getIteratedValue()[ FD ]
Line_17 $$ final List<PsiExpression> expressions = new ArrayList<PsiExpression>()-->Line_44 $$ expressions.add(expression)[ FD ]
Line_2 $$ public String generateBriefReport(@NotNull Editor editor, @NotNull PsiFile psiFile, int lineNumber, int startOffset, int endOffset, @Nullable LineData lineData) -->Line_58 $$ for (Object o : lineData.getJumps()) [ FD ]
Line_23 $$ condition = ((PsiIfStatement) parent).getCondition()-->Line_33 $$ condition = ((PsiForeachStatement) parent).getIteratedValue()[ FD ]
Line_2 $$ public String generateBriefReport(@NotNull Editor editor, @NotNull PsiFile psiFile, int lineNumber, int startOffset, int endOffset, @Nullable LineData lineData) -->Line_19 $$ for (int offset = startOffset; offset < endOffset; offset++) [ FD ]
Line_59 $$ final JumpData jumpData = (JumpData) o-->Line_65 $$ buf.append(indent).append(indent).append("true hits: ").append(reverse ? jumpData.getFalseHits() : jumpData.getTrueHits()).append("\n")[ FD ]
Line_82 $$ int defaultHits = switchData.getDefaultHits()-->Line_89 $$ buf.append(indent).append(indent).append("default: ").append(defaultHits).append("\n")[ FD ]
Line_88 $$ if (hasDefaultLabel || defaultHits > 0) -->Line_90 $$ hits += defaultHits[ CD ]
Line_2 $$ public String generateBriefReport(@NotNull Editor editor, @NotNull PsiFile psiFile, int lineNumber, int startOffset, int endOffset, @Nullable LineData lineData) -->Line_19 $$ for (int offset = startOffset; offset < endOffset; offset++) [ CD ]
Line_21 $$ PsiElement condition = null-->Line_27 $$ condition = ((PsiDoWhileStatement) parent).getCondition()[ FD ]
Line_5 $$ if (lineData == null) -->Line_6 $$ buf.append(0)[ CD ]
Line_17 $$ final List<PsiExpression> expressions = new ArrayList<PsiExpression>()-->Line_61 $$ final PsiExpression expression = expressions.get(idx++)[ FD ]
Line_21 $$ PsiElement condition = null-->Line_35 $$ condition = ((PsiAssertStatement) parent).getAssertCondition()[ FD ]
Line_61 $$ final PsiExpression expression = expressions.get(idx++)-->Line_62 $$ final PsiElement parentExpression = expression.getParent()[ FD ]
Line_2 $$ public String generateBriefReport(@NotNull Editor editor, @NotNull PsiFile psiFile, int lineNumber, int startOffset, int endOffset, @Nullable LineData lineData) -->Line_102 $$ return buf.toString()[ CD ]
Line_42 $$ final PsiExpression expression = ((ConditionalBranchingInstruction) instruction).expression-->Line_44 $$ expressions.add(expression)[ FD ]
Line_27 $$ condition = ((PsiDoWhileStatement) parent).getCondition()-->Line_35 $$ condition = ((PsiAssertStatement) parent).getAssertCondition()[ FD ]
Line_41 $$ if (instruction instanceof ConditionalBranchingInstruction) -->Line_42 $$ final PsiExpression expression = ((ConditionalBranchingInstruction) instruction).expression[ CD ]
Line_53 $$ final String indent = "    "-->Line_65 $$ buf.append(indent).append(indent).append("true hits: ").append(reverse ? jumpData.getFalseHits() : jumpData.getTrueHits()).append("\n")[ FD ]
Line_2 $$ public String generateBriefReport(@NotNull Editor editor, @NotNull PsiFile psiFile, int lineNumber, int startOffset, int endOffset, @Nullable LineData lineData) -->Line_95 $$ if (lineData.getHits() > hits && hits > 0) [ FD ]
Line_41 $$ if (instruction instanceof ConditionalBranchingInstruction) -->Line_43 $$ if (!expressions.contains(expression)) [ CD ]
Line_3 $$ final StringBuffer buf = new StringBuffer()-->Line_13 $$ buf.append(report)[ FD ]
Line_73 $$ final SwitchData switchData = (SwitchData) o-->Line_82 $$ int defaultHits = switchData.getDefaultHits()[ FD ]
Line_61 $$ final PsiExpression expression = expressions.get(idx++)-->Line_64 $$ buf.append(indent).append(expression.getText()).append("\n")[ FD ]
Line_20 $$ PsiElement parent = PsiTreeUtil.getParentOfType(psiFile.findElementAt(offset), PsiStatement.class)-->Line_22 $$ if (parent instanceof PsiIfStatement) [ FD ]
Line_29 $$ condition = ((PsiForStatement) parent).getCondition()-->Line_37 $$ if (condition != null && PsiTreeUtil.isAncestor(condition, psiFile.findElementAt(offset), false)) [ FD ]
Line_43 $$ if (!expressions.contains(expression)) -->Line_44 $$ expressions.add(expression)[ CD ]
Line_56 $$ int hits = 0-->Line_80 $$ hits += switchHits[ FD ]
Line_83 $$ final boolean hasDefaultLabel = hasDefaultLabel(conditionExpression)-->Line_88 $$ if (hasDefaultLabel || defaultHits > 0) [ FD ]
Line_78 $$ final int switchHits = switchData.getHits()[i++]-->Line_80 $$ hits += switchHits[ FD ]
Line_24 $$ if (parent instanceof PsiSwitchStatement) -->Line_25 $$ condition = ((PsiSwitchStatement) parent).getExpression()[ CD ]
Line_29 $$ condition = ((PsiForStatement) parent).getCondition()-->Line_31 $$ condition = ((PsiWhileStatement) parent).getCondition()[ FD ]
Line_25 $$ condition = ((PsiSwitchStatement) parent).getExpression()-->Line_33 $$ condition = ((PsiForeachStatement) parent).getIteratedValue()[ FD ]
Line_60 $$ if (jumpData.getTrueHits() + jumpData.getFalseHits() > 0) -->Line_63 $$ boolean reverse = parentExpression instanceof PsiPolyadicExpression && ((PsiPolyadicExpression) parentExpression).getOperationTokenType() == JavaTokenType.OROR || parentExpression instanceof PsiDoWhileStatement || parentExpression instanceof PsiAssertStatement[ CD ]
Line_60 $$ if (jumpData.getTrueHits() + jumpData.getFalseHits() > 0) -->Line_66 $$ buf.append(indent).append(indent).append("false hits: ").append(reverse ? jumpData.getTrueHits() : jumpData.getFalseHits()).append("\n")[ CD ]
Line_3 $$ final StringBuffer buf = new StringBuffer()-->Line_79 $$ buf.append(indent).append(indent).append("case ").append(key).append(": ").append(switchHits).append("\n")[ FD ]
Line_2 $$ public String generateBriefReport(@NotNull Editor editor, @NotNull PsiFile psiFile, int lineNumber, int startOffset, int endOffset, @Nullable LineData lineData) -->Line_3 $$ final StringBuffer buf = new StringBuffer()[ CD ]
Line_25 $$ condition = ((PsiSwitchStatement) parent).getExpression()-->Line_27 $$ condition = ((PsiDoWhileStatement) parent).getCondition()[ FD ]
Line_67 $$ hits += jumpData.getTrueHits() + jumpData.getFalseHits()-->Line_86 $$ defaultHits -= hits[ FD ]
Line_56 $$ int hits = 0-->Line_90 $$ hits += defaultHits[ FD ]
Line_59 $$ final JumpData jumpData = (JumpData) o-->Line_66 $$ buf.append(indent).append(indent).append("false hits: ").append(reverse ? jumpData.getTrueHits() : jumpData.getFalseHits()).append("\n")[ FD ]
Line_84 $$ if (hasDefaultLabel || defaultHits > 0) -->Line_85 $$ if (!hasDefaultLabel) [ CD ]
Line_82 $$ int defaultHits = switchData.getDefaultHits()-->Line_86 $$ defaultHits -= hits[ FD ]
Line_30 $$ if (parent instanceof PsiWhileStatement) -->Line_31 $$ condition = ((PsiWhileStatement) parent).getCondition()[ CD ]
Line_5 $$ if (lineData == null) -->Line_7 $$ return buf.toString()[ CD ]
Line_23 $$ condition = ((PsiIfStatement) parent).getCondition()-->Line_31 $$ condition = ((PsiWhileStatement) parent).getCondition()[ FD ]
Line_39 $$ final ControlFlow controlFlow = ControlFlowFactory.getInstance(project).getControlFlow(parent, AllVariablesControlFlowPolicy.getInstance())-->Line_40 $$ for (Instruction instruction : controlFlow.getInstructions()) [ FD ]
Line_59 $$ final JumpData jumpData = (JumpData) o-->Line_67 $$ hits += jumpData.getTrueHits() + jumpData.getFalseHits()[ FD ]
Line_53 $$ final String indent = "    "-->Line_66 $$ buf.append(indent).append(indent).append("false hits: ").append(reverse ? jumpData.getTrueHits() : jumpData.getFalseHits()).append("\n")[ FD ]
Line_21 $$ PsiElement condition = null-->Line_25 $$ condition = ((PsiSwitchStatement) parent).getExpression()[ FD ]
Line_20 $$ PsiElement parent = PsiTreeUtil.getParentOfType(psiFile.findElementAt(offset), PsiStatement.class)-->Line_24 $$ if (parent instanceof PsiSwitchStatement) [ FD ]
Line_28 $$ if (parent instanceof PsiForStatement) -->Line_29 $$ condition = ((PsiForStatement) parent).getCondition()[ CD ]
Line_56 $$ int hits = 0-->Line_67 $$ hits += jumpData.getTrueHits() + jumpData.getFalseHits()[ FD ]
Line_12 $$ if (report != null) -->Line_13 $$ buf.append(report)[ CD ]
Line_2 $$ public String generateBriefReport(@NotNull Editor editor, @NotNull PsiFile psiFile, int lineNumber, int startOffset, int endOffset, @Nullable LineData lineData) -->Line_9 $$ buf.append(lineData.getHits()).append("\n")[ FD ]
Line_27 $$ condition = ((PsiDoWhileStatement) parent).getCondition()-->Line_33 $$ condition = ((PsiForeachStatement) parent).getIteratedValue()[ FD ]
Line_3 $$ final StringBuffer buf = new StringBuffer()-->Line_7 $$ return buf.toString()[ FD ]
Line_60 $$ if (jumpData.getTrueHits() + jumpData.getFalseHits() > 0) -->Line_65 $$ buf.append(indent).append(indent).append("true hits: ").append(reverse ? jumpData.getFalseHits() : jumpData.getTrueHits()).append("\n")[ CD ]
Line_3 $$ final StringBuffer buf = new StringBuffer()-->Line_96 $$ buf.append("Unknown outcome: ").append(lineData.getHits() - hits)[ FD ]
Line_85 $$ if (!hasDefaultLabel) -->Line_86 $$ defaultHits -= hits[ CD ]
Line_2 $$ public String generateBriefReport(@NotNull Editor editor, @NotNull PsiFile psiFile, int lineNumber, int startOffset, int endOffset, @Nullable LineData lineData) -->Line_18 $$ final Project project = editor.getProject()[ FD ]
Line_21 $$ PsiElement condition = null-->Line_33 $$ condition = ((PsiForeachStatement) parent).getIteratedValue()[ FD ]
