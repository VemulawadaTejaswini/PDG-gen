Line_7 $$ for (String diag : diagList) -->Line_8 $$ b.append(diag)[ FD ]
Line_3 $$ String diagString = ""-->Line_12 $$ WebServicesTestUtils.checkStringMatch("diagnostics", diagString, diagnostics)[ FD ]
Line_2 $$ public void verifyAMJobGenericSecure(Job job, int mapsPending, int mapsRunning, int reducesPending, int reducesRunning, Boolean uberized, String diagnostics, int newReduceAttempts, int runningReduceAttempts, int failedReduceAttempts, int killedReduceAttempts, int successfulReduceAttempts, int newMapAttempts, int runningMapAttempts, int failedMapAttempts, int killedMapAttempts, int successfulMapAttempts) -->Line_5 $$ if (diagList != null && !diagList.isEmpty()) [ CD ]
Line_2 $$ public void verifyAMJobGenericSecure(Job job, int mapsPending, int mapsRunning, int reducesPending, int reducesRunning, Boolean uberized, String diagnostics, int newReduceAttempts, int runningReduceAttempts, int failedReduceAttempts, int killedReduceAttempts, int successfulReduceAttempts, int newMapAttempts, int runningMapAttempts, int failedMapAttempts, int killedMapAttempts, int successfulMapAttempts) -->Line_22 $$ assertTrue("successfulReduceAttempts not >= 0", successfulReduceAttempts >= 0)[ CD ]
Line_2 $$ public void verifyAMJobGenericSecure(Job job, int mapsPending, int mapsRunning, int reducesPending, int reducesRunning, Boolean uberized, String diagnostics, int newReduceAttempts, int runningReduceAttempts, int failedReduceAttempts, int killedReduceAttempts, int successfulReduceAttempts, int newMapAttempts, int runningMapAttempts, int failedMapAttempts, int killedMapAttempts, int successfulMapAttempts) -->Line_4 $$ List<String> diagList = job.getDiagnostics()[ FD ]
Line_2 $$ public void verifyAMJobGenericSecure(Job job, int mapsPending, int mapsRunning, int reducesPending, int reducesRunning, Boolean uberized, String diagnostics, int newReduceAttempts, int runningReduceAttempts, int failedReduceAttempts, int killedReduceAttempts, int successfulReduceAttempts, int newMapAttempts, int runningMapAttempts, int failedMapAttempts, int killedMapAttempts, int successfulMapAttempts) -->Line_4 $$ List<String> diagList = job.getDiagnostics()[ CD ]
Line_2 $$ public void verifyAMJobGenericSecure(Job job, int mapsPending, int mapsRunning, int reducesPending, int reducesRunning, Boolean uberized, String diagnostics, int newReduceAttempts, int runningReduceAttempts, int failedReduceAttempts, int killedReduceAttempts, int successfulReduceAttempts, int newMapAttempts, int runningMapAttempts, int failedMapAttempts, int killedMapAttempts, int successfulMapAttempts) -->Line_12 $$ WebServicesTestUtils.checkStringMatch("diagnostics", diagString, diagnostics)[ FD ]
Line_2 $$ public void verifyAMJobGenericSecure(Job job, int mapsPending, int mapsRunning, int reducesPending, int reducesRunning, Boolean uberized, String diagnostics, int newReduceAttempts, int runningReduceAttempts, int failedReduceAttempts, int killedReduceAttempts, int successfulReduceAttempts, int newMapAttempts, int runningMapAttempts, int failedMapAttempts, int killedMapAttempts, int successfulMapAttempts) -->Line_20 $$ assertTrue("failedReduceAttempts not >= 0", failedReduceAttempts >= 0)[ CD ]
Line_10 $$ diagString = b.toString()-->Line_12 $$ WebServicesTestUtils.checkStringMatch("diagnostics", diagString, diagnostics)[ FD ]
Line_2 $$ public void verifyAMJobGenericSecure(Job job, int mapsPending, int mapsRunning, int reducesPending, int reducesRunning, Boolean uberized, String diagnostics, int newReduceAttempts, int runningReduceAttempts, int failedReduceAttempts, int killedReduceAttempts, int successfulReduceAttempts, int newMapAttempts, int runningMapAttempts, int failedMapAttempts, int killedMapAttempts, int successfulMapAttempts) -->Line_15 $$ assertTrue("mapsRunning not >= 0", mapsRunning >= 0)[ CD ]
Line_2 $$ public void verifyAMJobGenericSecure(Job job, int mapsPending, int mapsRunning, int reducesPending, int reducesRunning, Boolean uberized, String diagnostics, int newReduceAttempts, int runningReduceAttempts, int failedReduceAttempts, int killedReduceAttempts, int successfulReduceAttempts, int newMapAttempts, int runningMapAttempts, int failedMapAttempts, int killedMapAttempts, int successfulMapAttempts) -->Line_19 $$ assertTrue("runningReduceAttempts not >= 0", runningReduceAttempts >= 0)[ CD ]
Line_6 $$ StringBuffer b = new StringBuffer()-->Line_8 $$ b.append(diag)[ FD ]
Line_2 $$ public void verifyAMJobGenericSecure(Job job, int mapsPending, int mapsRunning, int reducesPending, int reducesRunning, Boolean uberized, String diagnostics, int newReduceAttempts, int runningReduceAttempts, int failedReduceAttempts, int killedReduceAttempts, int successfulReduceAttempts, int newMapAttempts, int runningMapAttempts, int failedMapAttempts, int killedMapAttempts, int successfulMapAttempts) -->Line_18 $$ assertTrue("newReduceAttempts not >= 0", newReduceAttempts >= 0)[ CD ]
Line_2 $$ public void verifyAMJobGenericSecure(Job job, int mapsPending, int mapsRunning, int reducesPending, int reducesRunning, Boolean uberized, String diagnostics, int newReduceAttempts, int runningReduceAttempts, int failedReduceAttempts, int killedReduceAttempts, int successfulReduceAttempts, int newMapAttempts, int runningMapAttempts, int failedMapAttempts, int killedMapAttempts, int successfulMapAttempts) -->Line_24 $$ assertTrue("runningMapAttempts not >= 0", runningMapAttempts >= 0)[ CD ]
Line_2 $$ public void verifyAMJobGenericSecure(Job job, int mapsPending, int mapsRunning, int reducesPending, int reducesRunning, Boolean uberized, String diagnostics, int newReduceAttempts, int runningReduceAttempts, int failedReduceAttempts, int killedReduceAttempts, int successfulReduceAttempts, int newMapAttempts, int runningMapAttempts, int failedMapAttempts, int killedMapAttempts, int successfulMapAttempts) -->Line_21 $$ assertTrue("killedReduceAttempts not >= 0", killedReduceAttempts >= 0)[ CD ]
Line_2 $$ public void verifyAMJobGenericSecure(Job job, int mapsPending, int mapsRunning, int reducesPending, int reducesRunning, Boolean uberized, String diagnostics, int newReduceAttempts, int runningReduceAttempts, int failedReduceAttempts, int killedReduceAttempts, int successfulReduceAttempts, int newMapAttempts, int runningMapAttempts, int failedMapAttempts, int killedMapAttempts, int successfulMapAttempts) -->Line_12 $$ WebServicesTestUtils.checkStringMatch("diagnostics", diagString, diagnostics)[ CD ]
Line_2 $$ public void verifyAMJobGenericSecure(Job job, int mapsPending, int mapsRunning, int reducesPending, int reducesRunning, Boolean uberized, String diagnostics, int newReduceAttempts, int runningReduceAttempts, int failedReduceAttempts, int killedReduceAttempts, int successfulReduceAttempts, int newMapAttempts, int runningMapAttempts, int failedMapAttempts, int killedMapAttempts, int successfulMapAttempts) -->Line_14 $$ assertTrue("mapsPending not >= 0", mapsPending >= 0)[ CD ]
Line_4 $$ List<String> diagList = job.getDiagnostics()-->Line_5 $$ if (diagList != null && !diagList.isEmpty()) [ FD ]
Line_2 $$ public void verifyAMJobGenericSecure(Job job, int mapsPending, int mapsRunning, int reducesPending, int reducesRunning, Boolean uberized, String diagnostics, int newReduceAttempts, int runningReduceAttempts, int failedReduceAttempts, int killedReduceAttempts, int successfulReduceAttempts, int newMapAttempts, int runningMapAttempts, int failedMapAttempts, int killedMapAttempts, int successfulMapAttempts) -->Line_26 $$ assertTrue("killedMapAttempts not >= 0", killedMapAttempts >= 0)[ CD ]
Line_3 $$ String diagString = ""-->Line_10 $$ diagString = b.toString()[ FD ]
Line_2 $$ public void verifyAMJobGenericSecure(Job job, int mapsPending, int mapsRunning, int reducesPending, int reducesRunning, Boolean uberized, String diagnostics, int newReduceAttempts, int runningReduceAttempts, int failedReduceAttempts, int killedReduceAttempts, int successfulReduceAttempts, int newMapAttempts, int runningMapAttempts, int failedMapAttempts, int killedMapAttempts, int successfulMapAttempts) -->Line_27 $$ assertTrue("successfulMapAttempts not >= 0", successfulMapAttempts >= 0)[ CD ]
Line_2 $$ public void verifyAMJobGenericSecure(Job job, int mapsPending, int mapsRunning, int reducesPending, int reducesRunning, Boolean uberized, String diagnostics, int newReduceAttempts, int runningReduceAttempts, int failedReduceAttempts, int killedReduceAttempts, int successfulReduceAttempts, int newMapAttempts, int runningMapAttempts, int failedMapAttempts, int killedMapAttempts, int successfulMapAttempts) -->Line_13 $$ assertEquals("isUber incorrect", job.isUber(), uberized)[ FD ]
Line_5 $$ if (diagList != null && !diagList.isEmpty()) -->Line_6 $$ StringBuffer b = new StringBuffer()[ CD ]
Line_5 $$ if (diagList != null && !diagList.isEmpty()) -->Line_10 $$ diagString = b.toString()[ CD ]
Line_2 $$ public void verifyAMJobGenericSecure(Job job, int mapsPending, int mapsRunning, int reducesPending, int reducesRunning, Boolean uberized, String diagnostics, int newReduceAttempts, int runningReduceAttempts, int failedReduceAttempts, int killedReduceAttempts, int successfulReduceAttempts, int newMapAttempts, int runningMapAttempts, int failedMapAttempts, int killedMapAttempts, int successfulMapAttempts) -->Line_25 $$ assertTrue("failedMapAttempts not >= 0", failedMapAttempts >= 0)[ CD ]
Line_2 $$ public void verifyAMJobGenericSecure(Job job, int mapsPending, int mapsRunning, int reducesPending, int reducesRunning, Boolean uberized, String diagnostics, int newReduceAttempts, int runningReduceAttempts, int failedReduceAttempts, int killedReduceAttempts, int successfulReduceAttempts, int newMapAttempts, int runningMapAttempts, int failedMapAttempts, int killedMapAttempts, int successfulMapAttempts) -->Line_16 $$ assertTrue("reducesPending not >= 0", reducesPending >= 0)[ CD ]
Line_2 $$ public void verifyAMJobGenericSecure(Job job, int mapsPending, int mapsRunning, int reducesPending, int reducesRunning, Boolean uberized, String diagnostics, int newReduceAttempts, int runningReduceAttempts, int failedReduceAttempts, int killedReduceAttempts, int successfulReduceAttempts, int newMapAttempts, int runningMapAttempts, int failedMapAttempts, int killedMapAttempts, int successfulMapAttempts) -->Line_23 $$ assertTrue("newMapAttempts not >= 0", newMapAttempts >= 0)[ CD ]
Line_2 $$ public void verifyAMJobGenericSecure(Job job, int mapsPending, int mapsRunning, int reducesPending, int reducesRunning, Boolean uberized, String diagnostics, int newReduceAttempts, int runningReduceAttempts, int failedReduceAttempts, int killedReduceAttempts, int successfulReduceAttempts, int newMapAttempts, int runningMapAttempts, int failedMapAttempts, int killedMapAttempts, int successfulMapAttempts) -->Line_17 $$ assertTrue("reducesRunning not >= 0", reducesRunning >= 0)[ CD ]
Line_2 $$ public void verifyAMJobGenericSecure(Job job, int mapsPending, int mapsRunning, int reducesPending, int reducesRunning, Boolean uberized, String diagnostics, int newReduceAttempts, int runningReduceAttempts, int failedReduceAttempts, int killedReduceAttempts, int successfulReduceAttempts, int newMapAttempts, int runningMapAttempts, int failedMapAttempts, int killedMapAttempts, int successfulMapAttempts) -->Line_3 $$ String diagString = ""[ CD ]
Line_6 $$ StringBuffer b = new StringBuffer()-->Line_10 $$ diagString = b.toString()[ FD ]
Line_2 $$ public void verifyAMJobGenericSecure(Job job, int mapsPending, int mapsRunning, int reducesPending, int reducesRunning, Boolean uberized, String diagnostics, int newReduceAttempts, int runningReduceAttempts, int failedReduceAttempts, int killedReduceAttempts, int successfulReduceAttempts, int newMapAttempts, int runningMapAttempts, int failedMapAttempts, int killedMapAttempts, int successfulMapAttempts) -->Line_13 $$ assertEquals("isUber incorrect", job.isUber(), uberized)[ CD ]
