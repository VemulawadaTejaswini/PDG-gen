Line_2 $$ private static CtConstructor generateConstructor(String className, CtClass cc) throws NotFoundException, CannotCompileException -->Line_5 $$ System.out.println(sb)[ CD ]
Line_3 $$ StringBuffer sb = new StringBuffer()-->Line_5 $$ System.out.println(sb)[ FD ]
Line_3 $$ StringBuffer sb = new StringBuffer()-->Line_4 $$ sb.append("public ").append(getLastComponent(className)).append("(").append(Map.class.getName()).append(" map)").append("[ FD ]
Line_3 $$ StringBuffer sb = new StringBuffer()-->Line_6 $$ return CtNewConstructor.make(sb.toString(), cc)[ FD ]
Line_2 $$ private static CtConstructor generateConstructor(String className, CtClass cc) throws NotFoundException, CannotCompileException -->Line_6 $$ return CtNewConstructor.make(sb.toString(), cc)[ CD ]
Line_2 $$ private static CtConstructor generateConstructor(String className, CtClass cc) throws NotFoundException, CannotCompileException -->Line_3 $$ StringBuffer sb = new StringBuffer()[ CD ]
Line_2 $$ private static CtConstructor generateConstructor(String className, CtClass cc) throws NotFoundException, CannotCompileException -->Line_4 $$ sb.append("public ").append(getLastComponent(className)).append("(").append(Map.class.getName()).append(" map)").append("[ FD ]
Line_2 $$ private static CtConstructor generateConstructor(String className, CtClass cc) throws NotFoundException, CannotCompileException -->Line_4 $$ sb.append("public ").append(getLastComponent(className)).append("(").append(Map.class.getName()).append(" map)").append("[ CD ]
Line_2 $$ private static CtConstructor generateConstructor(String className, CtClass cc) throws NotFoundException, CannotCompileException -->Line_6 $$ return CtNewConstructor.make(sb.toString(), cc)[ FD ]
