Line_2 $$ public static void setInputPaths(JobConf conf, Path... inputPaths) -->Line_5 $$ for (int i = 1; i < inputPaths.length; i++) [ CD ]
Line_7 $$ path = new Path(conf.getWorkingDirectory(), inputPaths[i])-->Line_8 $$ str.append(StringUtils.escapeString(path.toString()))[ FD ]
Line_2 $$ public static void setInputPaths(JobConf conf, Path... inputPaths) -->Line_3 $$ Path path = new Path(conf.getWorkingDirectory(), inputPaths[0])[ FD ]
Line_2 $$ public static void setInputPaths(JobConf conf, Path... inputPaths) -->Line_3 $$ Path path = new Path(conf.getWorkingDirectory(), inputPaths[0])[ CD ]
Line_2 $$ public static void setInputPaths(JobConf conf, Path... inputPaths) -->Line_7 $$ path = new Path(conf.getWorkingDirectory(), inputPaths[i])[ FD ]
Line_3 $$ Path path = new Path(conf.getWorkingDirectory(), inputPaths[0])-->Line_8 $$ str.append(StringUtils.escapeString(path.toString()))[ FD ]
Line_5 $$ for (int i = 1; i < inputPaths.length; i++) -->Line_6 $$ str.append(StringUtils.COMMA_STR)[ CD ]
Line_3 $$ Path path = new Path(conf.getWorkingDirectory(), inputPaths[0])-->Line_7 $$ path = new Path(conf.getWorkingDirectory(), inputPaths[i])[ FD ]
Line_2 $$ public static void setInputPaths(JobConf conf, Path... inputPaths) -->Line_10 $$ conf.set(org.apache.hadoop.mapreduce.lib.input.FileInputFormat.INPUT_DIR, str.toString())[ CD ]
Line_4 $$ StringBuffer str = new StringBuffer(StringUtils.escapeString(path.toString()))-->Line_10 $$ conf.set(org.apache.hadoop.mapreduce.lib.input.FileInputFormat.INPUT_DIR, str.toString())[ FD ]
Line_2 $$ public static void setInputPaths(JobConf conf, Path... inputPaths) -->Line_4 $$ StringBuffer str = new StringBuffer(StringUtils.escapeString(path.toString()))[ CD ]
Line_4 $$ StringBuffer str = new StringBuffer(StringUtils.escapeString(path.toString()))-->Line_8 $$ str.append(StringUtils.escapeString(path.toString()))[ FD ]
Line_5 $$ for (int i = 1; i < inputPaths.length; i++) -->Line_8 $$ str.append(StringUtils.escapeString(path.toString()))[ CD ]
Line_2 $$ public static void setInputPaths(JobConf conf, Path... inputPaths) -->Line_10 $$ conf.set(org.apache.hadoop.mapreduce.lib.input.FileInputFormat.INPUT_DIR, str.toString())[ FD ]
Line_5 $$ for (int i = 1; i < inputPaths.length; i++) -->Line_7 $$ path = new Path(conf.getWorkingDirectory(), inputPaths[i])[ CD ]
Line_4 $$ StringBuffer str = new StringBuffer(StringUtils.escapeString(path.toString()))-->Line_6 $$ str.append(StringUtils.COMMA_STR)[ FD ]
Line_3 $$ Path path = new Path(conf.getWorkingDirectory(), inputPaths[0])-->Line_4 $$ StringBuffer str = new StringBuffer(StringUtils.escapeString(path.toString()))[ FD ]
