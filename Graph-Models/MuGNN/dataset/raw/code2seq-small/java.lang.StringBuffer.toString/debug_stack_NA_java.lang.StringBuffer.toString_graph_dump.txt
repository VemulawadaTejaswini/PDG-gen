Line_9 $$ sb = new StringBuffer("         ")-->Line_6 $$ sb.append(" <state " + s.parse_state + ", sym " + s.sym + ">")[ FD ]
Line_3 $$ StringBuffer sb = new StringBuffer("## STACK:")-->Line_9 $$ sb = new StringBuffer("         ")[ FD ]
Line_3 $$ StringBuffer sb = new StringBuffer("## STACK:")-->Line_6 $$ sb.append(" <state " + s.parse_state + ", sym " + s.sym + ">")[ FD ]
Line_7 $$ if ((i % 3) == 2 || (i == (stack.size() - 1))) -->Line_8 $$ debug_message(sb.toString())[ CD ]
Line_4 $$ for (int i = 0; i < stack.size(); i++) -->Line_6 $$ sb.append(" <state " + s.parse_state + ", sym " + s.sym + ">")[ CD ]
Line_3 $$ StringBuffer sb = new StringBuffer("## STACK:")-->Line_8 $$ debug_message(sb.toString())[ FD ]
Line_7 $$ if ((i % 3) == 2 || (i == (stack.size() - 1))) -->Line_9 $$ sb = new StringBuffer("         ")[ CD ]
Line_9 $$ sb = new StringBuffer("         ")-->Line_8 $$ debug_message(sb.toString())[ FD ]
Line_4 $$ for (int i = 0; i < stack.size(); i++) -->Line_7 $$ if ((i % 3) == 2 || (i == (stack.size() - 1))) [ CD ]
Line_4 $$ for (int i = 0; i < stack.size(); i++) -->Line_5 $$ Symbol s = (Symbol) stack.elementAt(i)[ FD ]
Line_2 $$ public void debug_stack() -->Line_4 $$ for (int i = 0; i < stack.size(); i++) [ CD ]
Line_2 $$ public void debug_stack() -->Line_3 $$ StringBuffer sb = new StringBuffer("## STACK:")[ CD ]
Line_4 $$ for (int i = 0; i < stack.size(); i++) -->Line_5 $$ Symbol s = (Symbol) stack.elementAt(i)[ CD ]
