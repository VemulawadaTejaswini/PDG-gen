Line_4 $$ final Path outDir = new Path("/testing/wc/output")-->Line_6 $$ configureWordCount(fs, conf, input, numMaps, numReduces, inDir, outDir)[ FD ]
Line_4 $$ final Path outDir = new Path("/testing/wc/output")-->Line_11 $$ Path[] fileList = FileUtil.stat2Paths(fs.listStatus(outDir, new Utils.OutputFileUtils.OutputFilesFilter()))[ FD ]
Line_8 $$ StringBuffer result = new StringBuffer()-->Line_23 $$ return result.toString()[ FD ]
Line_4 $$ final Path outDir = new Path("/testing/wc/output")-->Line_10 $$ Path[] parents = FileUtil.stat2Paths(fs.listStatus(outDir.getParent()))[ FD ]
Line_15 $$ while (line != null) -->Line_16 $$ result.append(line)[ CD ]
Line_5 $$ FileSystem fs = FileSystem.get(fileSys, conf)-->Line_11 $$ Path[] fileList = FileUtil.stat2Paths(fs.listStatus(outDir, new Utils.OutputFileUtils.OutputFilesFilter()))[ FD ]
Line_12 $$ for (int i = 0; i < fileList.length; ++i) -->Line_14 $$ String line = file.readLine()[ CD ]
Line_2 $$ static String launchWordCount(URI fileSys, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_5 $$ FileSystem fs = FileSystem.get(fileSys, conf)[ CD ]
Line_12 $$ for (int i = 0; i < fileList.length; ++i) -->Line_13 $$ BufferedReader file = new BufferedReader(new InputStreamReader(fs.open(fileList[i])))[ CD ]
Line_14 $$ String line = file.readLine()-->Line_16 $$ result.append(line)[ FD ]
Line_2 $$ static String launchWordCount(URI fileSys, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_12 $$ for (int i = 0; i < fileList.length; ++i) [ CD ]
Line_5 $$ FileSystem fs = FileSystem.get(fileSys, conf)-->Line_6 $$ configureWordCount(fs, conf, input, numMaps, numReduces, inDir, outDir)[ FD ]
Line_18 $$ line = file.readLine()-->Line_16 $$ result.append(line)[ FD ]
Line_2 $$ static String launchWordCount(URI fileSys, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_11 $$ Path[] fileList = FileUtil.stat2Paths(fs.listStatus(outDir, new Utils.OutputFileUtils.OutputFilesFilter()))[ CD ]
Line_2 $$ static String launchWordCount(URI fileSys, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_7 $$ JobClient.runJob(conf)[ FD ]
Line_2 $$ static String launchWordCount(URI fileSys, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_6 $$ configureWordCount(fs, conf, input, numMaps, numReduces, inDir, outDir)[ FD ]
Line_12 $$ for (int i = 0; i < fileList.length; ++i) -->Line_15 $$ while (line != null) [ CD ]
Line_8 $$ StringBuffer result = new StringBuffer()-->Line_16 $$ result.append(line)[ FD ]
Line_13 $$ BufferedReader file = new BufferedReader(new InputStreamReader(fs.open(fileList[i])))-->Line_18 $$ line = file.readLine()[ FD ]
Line_2 $$ static String launchWordCount(URI fileSys, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_23 $$ return result.toString()[ CD ]
Line_2 $$ static String launchWordCount(URI fileSys, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_10 $$ Path[] parents = FileUtil.stat2Paths(fs.listStatus(outDir.getParent()))[ CD ]
Line_2 $$ static String launchWordCount(URI fileSys, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_5 $$ FileSystem fs = FileSystem.get(fileSys, conf)[ FD ]
Line_15 $$ while (line != null) -->Line_17 $$ result.append("\n")[ CD ]
Line_18 $$ line = file.readLine()-->Line_15 $$ while (line != null) [ FD ]
Line_8 $$ StringBuffer result = new StringBuffer()-->Line_17 $$ result.append("\n")[ FD ]
Line_2 $$ static String launchWordCount(URI fileSys, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_6 $$ configureWordCount(fs, conf, input, numMaps, numReduces, inDir, outDir)[ CD ]
Line_2 $$ static String launchWordCount(URI fileSys, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_4 $$ final Path outDir = new Path("/testing/wc/output")[ CD ]
Line_12 $$ for (int i = 0; i < fileList.length; ++i) -->Line_20 $$ file.close()[ CD ]
Line_5 $$ FileSystem fs = FileSystem.get(fileSys, conf)-->Line_13 $$ BufferedReader file = new BufferedReader(new InputStreamReader(fs.open(fileList[i])))[ FD ]
Line_13 $$ BufferedReader file = new BufferedReader(new InputStreamReader(fs.open(fileList[i])))-->Line_20 $$ file.close()[ FD ]
Line_2 $$ static String launchWordCount(URI fileSys, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_8 $$ StringBuffer result = new StringBuffer()[ CD ]
Line_2 $$ static String launchWordCount(URI fileSys, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_3 $$ final Path inDir = new Path("/testing/wc/input")[ CD ]
Line_5 $$ FileSystem fs = FileSystem.get(fileSys, conf)-->Line_10 $$ Path[] parents = FileUtil.stat2Paths(fs.listStatus(outDir.getParent()))[ FD ]
Line_15 $$ while (line != null) -->Line_18 $$ line = file.readLine()[ CD ]
Line_3 $$ final Path inDir = new Path("/testing/wc/input")-->Line_6 $$ configureWordCount(fs, conf, input, numMaps, numReduces, inDir, outDir)[ FD ]
Line_13 $$ BufferedReader file = new BufferedReader(new InputStreamReader(fs.open(fileList[i])))-->Line_14 $$ String line = file.readLine()[ FD ]
Line_14 $$ String line = file.readLine()-->Line_15 $$ while (line != null) [ FD ]
Line_2 $$ static String launchWordCount(URI fileSys, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_7 $$ JobClient.runJob(conf)[ CD ]
Line_14 $$ String line = file.readLine()-->Line_18 $$ line = file.readLine()[ FD ]
