Line_4 $$ UnsyncBufferedWriter unsyncBufferedWriter = new UnsyncBufferedWriter(stringWriter, 3)-->Line_15 $$ unsyncBufferedWriter.write("efghi".toCharArray())[ FD ]
Line_3 $$ StringWriter stringWriter = new StringWriter()-->Line_13 $$ Assert.assertEquals(3, stringWriter.getBuffer().length())[ FD ]
Line_3 $$ StringWriter stringWriter = new StringWriter()-->Line_9 $$ Assert.assertEquals(0, stringWriter.getBuffer().length())[ FD ]
Line_2 $$ public void testStringWrite() throws IOException -->Line_9 $$ Assert.assertEquals(0, stringWriter.getBuffer().length())[ CD ]
Line_2 $$ public void testStringWrite() throws IOException -->Line_4 $$ UnsyncBufferedWriter unsyncBufferedWriter = new UnsyncBufferedWriter(stringWriter, 3)[ CD ]
Line_3 $$ StringWriter stringWriter = new StringWriter()-->Line_14 $$ Assert.assertEquals("abc", stringWriter.getBuffer().toString())[ FD ]
Line_2 $$ public void testStringWrite() throws IOException -->Line_18 $$ Assert.assertEquals("abcdefghi", stringWriter.getBuffer().toString())[ CD ]
Line_2 $$ public void testStringWrite() throws IOException -->Line_12 $$ Assert.assertEquals('d', unsyncBufferedWriter.buffer[0])[ CD ]
Line_4 $$ UnsyncBufferedWriter unsyncBufferedWriter = new UnsyncBufferedWriter(stringWriter, 3)-->Line_10 $$ unsyncBufferedWriter.write("cd")[ FD ]
Line_3 $$ StringWriter stringWriter = new StringWriter()-->Line_17 $$ Assert.assertEquals(9, stringWriter.getBuffer().length())[ FD ]
Line_2 $$ public void testStringWrite() throws IOException -->Line_13 $$ Assert.assertEquals(3, stringWriter.getBuffer().length())[ CD ]
Line_2 $$ public void testStringWrite() throws IOException -->Line_6 $$ Assert.assertEquals(2, unsyncBufferedWriter.count)[ CD ]
Line_2 $$ public void testStringWrite() throws IOException -->Line_3 $$ StringWriter stringWriter = new StringWriter()[ CD ]
Line_2 $$ public void testStringWrite() throws IOException -->Line_17 $$ Assert.assertEquals(9, stringWriter.getBuffer().length())[ CD ]
Line_2 $$ public void testStringWrite() throws IOException -->Line_15 $$ unsyncBufferedWriter.write("efghi".toCharArray())[ CD ]
Line_2 $$ public void testStringWrite() throws IOException -->Line_8 $$ Assert.assertEquals('b', unsyncBufferedWriter.buffer[1])[ CD ]
Line_2 $$ public void testStringWrite() throws IOException -->Line_14 $$ Assert.assertEquals("abc", stringWriter.getBuffer().toString())[ CD ]
Line_4 $$ UnsyncBufferedWriter unsyncBufferedWriter = new UnsyncBufferedWriter(stringWriter, 3)-->Line_5 $$ unsyncBufferedWriter.write("ab")[ FD ]
Line_3 $$ StringWriter stringWriter = new StringWriter()-->Line_18 $$ Assert.assertEquals("abcdefghi", stringWriter.getBuffer().toString())[ FD ]
Line_2 $$ public void testStringWrite() throws IOException -->Line_7 $$ Assert.assertEquals('a', unsyncBufferedWriter.buffer[0])[ CD ]
Line_2 $$ public void testStringWrite() throws IOException -->Line_11 $$ Assert.assertEquals(1, unsyncBufferedWriter.count)[ CD ]
Line_2 $$ public void testStringWrite() throws IOException -->Line_16 $$ Assert.assertEquals(0, unsyncBufferedWriter.count)[ CD ]
Line_2 $$ public void testStringWrite() throws IOException -->Line_5 $$ unsyncBufferedWriter.write("ab")[ CD ]
Line_2 $$ public void testStringWrite() throws IOException -->Line_10 $$ unsyncBufferedWriter.write("cd")[ CD ]
