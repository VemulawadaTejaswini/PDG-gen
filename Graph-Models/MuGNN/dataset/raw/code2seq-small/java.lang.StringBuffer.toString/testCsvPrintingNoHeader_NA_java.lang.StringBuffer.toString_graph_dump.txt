Line_5 $$ OutputPrinter printer = new CsvPrinter(fieldNames, writer, false)-->Line_6 $$ printer.printRows(rows(row("hello", "world", 123), row("a", null, 4.5)), true)[ FD ]
Line_8 $$ String expected = "" + "\"hello\",\"world\",\"123\"\n" + "\"a\",\"\",\"4.5\"\n"-->Line_9 $$ assertEquals(writer.getBuffer().toString(), expected)[ FD ]
Line_2 $$ public void testCsvPrintingNoHeader() throws Exception -->Line_3 $$ StringWriter writer = new StringWriter()[ CD ]
Line_2 $$ public void testCsvPrintingNoHeader() throws Exception -->Line_5 $$ OutputPrinter printer = new CsvPrinter(fieldNames, writer, false)[ CD ]
Line_3 $$ StringWriter writer = new StringWriter()-->Line_9 $$ assertEquals(writer.getBuffer().toString(), expected)[ FD ]
Line_2 $$ public void testCsvPrintingNoHeader() throws Exception -->Line_9 $$ assertEquals(writer.getBuffer().toString(), expected)[ CD ]
Line_2 $$ public void testCsvPrintingNoHeader() throws Exception -->Line_4 $$ List<String> fieldNames = ImmutableList.of("first", "last", "quantity")[ CD ]
Line_2 $$ public void testCsvPrintingNoHeader() throws Exception -->Line_8 $$ String expected = "" + "\"hello\",\"world\",\"123\"\n" + "\"a\",\"\",\"4.5\"\n"[ CD ]
Line_2 $$ public void testCsvPrintingNoHeader() throws Exception -->Line_6 $$ printer.printRows(rows(row("hello", "world", 123), row("a", null, 4.5)), true)[ CD ]
Line_2 $$ public void testCsvPrintingNoHeader() throws Exception -->Line_7 $$ printer.finish()[ CD ]
Line_5 $$ OutputPrinter printer = new CsvPrinter(fieldNames, writer, false)-->Line_7 $$ printer.finish()[ FD ]
