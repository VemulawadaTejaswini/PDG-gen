Line_8 $$ Writer writer = new OutputStreamWriter(ostream)-->Line_21 $$ writer.close()[ FD ]
Line_12 $$ for (int j = 0; j < recordLen; j++) -->Line_13 $$ sb.append(chars[charRand.nextInt(chars.length)])[ CD ]
Line_10 $$ StringBuffer sb = new StringBuffer()-->Line_13 $$ sb.append(chars[charRand.nextInt(chars.length)])[ FD ]
Line_11 $$ for (int i = 0; i < numRecords; i++) -->Line_16 $$ recordList.add(recordData)[ CD ]
Line_8 $$ Writer writer = new OutputStreamWriter(ostream)-->Line_17 $$ writer.write(recordData)[ FD ]
Line_2 $$ private ArrayList<String> createFile(Path targetFile, CompressionCodec codec, int recordLen, int numRecords) throws IOException -->Line_23 $$ return recordList[ CD ]
Line_10 $$ StringBuffer sb = new StringBuffer()-->Line_15 $$ String recordData = sb.toString()[ FD ]
Line_10 $$ StringBuffer sb = new StringBuffer()-->Line_18 $$ sb.setLength(0)[ FD ]
Line_11 $$ for (int i = 0; i < numRecords; i++) -->Line_18 $$ sb.setLength(0)[ CD ]
Line_5 $$ if (codec != null) -->Line_6 $$ ostream = codec.createOutputStream(ostream)[ CD ]
Line_3 $$ ArrayList<String> recordList = new ArrayList<String>(numRecords)-->Line_16 $$ recordList.add(recordData)[ FD ]
Line_2 $$ private ArrayList<String> createFile(Path targetFile, CompressionCodec codec, int recordLen, int numRecords) throws IOException -->Line_5 $$ if (codec != null) [ CD ]
Line_4 $$ OutputStream ostream = localFs.create(targetFile)-->Line_6 $$ ostream = codec.createOutputStream(ostream)[ FD ]
Line_2 $$ private ArrayList<String> createFile(Path targetFile, CompressionCodec codec, int recordLen, int numRecords) throws IOException -->Line_4 $$ OutputStream ostream = localFs.create(targetFile)[ CD ]
Line_2 $$ private ArrayList<String> createFile(Path targetFile, CompressionCodec codec, int recordLen, int numRecords) throws IOException -->Line_8 $$ Writer writer = new OutputStreamWriter(ostream)[ CD ]
Line_2 $$ private ArrayList<String> createFile(Path targetFile, CompressionCodec codec, int recordLen, int numRecords) throws IOException -->Line_5 $$ if (codec != null) [ FD ]
Line_2 $$ private ArrayList<String> createFile(Path targetFile, CompressionCodec codec, int recordLen, int numRecords) throws IOException -->Line_11 $$ for (int i = 0; i < numRecords; i++) [ FD ]
Line_11 $$ for (int i = 0; i < numRecords; i++) -->Line_17 $$ writer.write(recordData)[ CD ]
Line_2 $$ private ArrayList<String> createFile(Path targetFile, CompressionCodec codec, int recordLen, int numRecords) throws IOException -->Line_3 $$ ArrayList<String> recordList = new ArrayList<String>(numRecords)[ CD ]
Line_11 $$ for (int i = 0; i < numRecords; i++) -->Line_15 $$ String recordData = sb.toString()[ CD ]
Line_11 $$ for (int i = 0; i < numRecords; i++) -->Line_12 $$ for (int j = 0; j < recordLen; j++) [ CD ]
Line_2 $$ private ArrayList<String> createFile(Path targetFile, CompressionCodec codec, int recordLen, int numRecords) throws IOException -->Line_6 $$ ostream = codec.createOutputStream(ostream)[ FD ]
Line_2 $$ private ArrayList<String> createFile(Path targetFile, CompressionCodec codec, int recordLen, int numRecords) throws IOException -->Line_12 $$ for (int j = 0; j < recordLen; j++) [ FD ]
Line_2 $$ private ArrayList<String> createFile(Path targetFile, CompressionCodec codec, int recordLen, int numRecords) throws IOException -->Line_4 $$ OutputStream ostream = localFs.create(targetFile)[ FD ]
