Line_4 $$ final StringBuffer ogcFunction = new StringBuffer("MDSYS.")-->Line_25 $$ ogcFunction.append("OGC_INTERSECTION")[ FD ]
Line_21 $$ geomArgs = new boolean[] -->Line_34 $$ geomArgs = new boolean[] [ FD ]
Line_2 $$ private String getOGCSpatialAnalysisSQL(List args, int spatialAnalysisFunction) -->Line_42 $$ ogcFunction.append("(")[ CD ]
Line_43 $$ for (int i = 0; i < geomArgs.length; i++) -->Line_44 $$ if (i > 0) [ FD ]
Line_43 $$ for (int i = 0; i < geomArgs.length; i++) -->Line_47 $$ if (geomArgs[i]) [ FD ]
Line_17 $$ geomArgs = new boolean[] -->Line_21 $$ geomArgs = new boolean[] [ FD ]
Line_4 $$ final StringBuffer ogcFunction = new StringBuffer("MDSYS.")-->Line_8 $$ ogcFunction.append("OGC_BUFFER")[ FD ]
Line_4 $$ final StringBuffer ogcFunction = new StringBuffer("MDSYS.")-->Line_20 $$ ogcFunction.append("OGC_DISTANCE")[ FD ]
Line_9 $$ geomArgs = new boolean[] -->Line_13 $$ geomArgs = new boolean[] [ FD ]
Line_2 $$ private String getOGCSpatialAnalysisSQL(List args, int spatialAnalysisFunction) -->Line_4 $$ final StringBuffer ogcFunction = new StringBuffer("MDSYS.")[ CD ]
Line_9 $$ geomArgs = new boolean[] -->Line_34 $$ geomArgs = new boolean[] [ FD ]
Line_13 $$ geomArgs = new boolean[] -->Line_21 $$ geomArgs = new boolean[] [ FD ]
Line_3 $$ boolean[] geomArgs-->Line_47 $$ if (geomArgs[i]) [ FD ]
Line_26 $$ geomArgs = new boolean[] -->Line_34 $$ geomArgs = new boolean[] [ FD ]
Line_17 $$ geomArgs = new boolean[] -->Line_30 $$ geomArgs = new boolean[] [ FD ]
Line_2 $$ private String getOGCSpatialAnalysisSQL(List args, int spatialAnalysisFunction) -->Line_43 $$ for (int i = 0; i < geomArgs.length; i++) [ CD ]
Line_34 $$ geomArgs = new boolean[] -->Line_47 $$ if (geomArgs[i]) [ FD ]
Line_2 $$ private String getOGCSpatialAnalysisSQL(List args, int spatialAnalysisFunction) -->Line_48 $$ wrapInSTGeometry((String) args.get(i), ogcFunction)[ FD ]
Line_4 $$ final StringBuffer ogcFunction = new StringBuffer("MDSYS.")-->Line_29 $$ ogcFunction.append("OGC_SYMMETRICDIFFERENCE")[ FD ]
Line_4 $$ final StringBuffer ogcFunction = new StringBuffer("MDSYS.")-->Line_42 $$ ogcFunction.append("(")[ FD ]
Line_3 $$ boolean[] geomArgs-->Line_26 $$ geomArgs = new boolean[] [ FD ]
Line_47 $$ if (geomArgs[i]) -->Line_48 $$ wrapInSTGeometry((String) args.get(i), ogcFunction)[ CD ]
Line_43 $$ for (int i = 0; i < geomArgs.length; i++) -->Line_50 $$ ogcFunction.append(args.get(i))[ FD ]
Line_2 $$ private String getOGCSpatialAnalysisSQL(List args, int spatialAnalysisFunction) -->Line_57 $$ return ogcFunction.toString()[ CD ]
Line_4 $$ final StringBuffer ogcFunction = new StringBuffer("MDSYS.")-->Line_48 $$ wrapInSTGeometry((String) args.get(i), ogcFunction)[ FD ]
Line_4 $$ final StringBuffer ogcFunction = new StringBuffer("MDSYS.")-->Line_57 $$ return ogcFunction.toString()[ FD ]
Line_21 $$ geomArgs = new boolean[] -->Line_47 $$ if (geomArgs[i]) [ FD ]
Line_2 $$ private String getOGCSpatialAnalysisSQL(List args, int spatialAnalysisFunction) -->Line_54 $$ if (isGeomReturn) [ CD ]
Line_13 $$ geomArgs = new boolean[] -->Line_17 $$ geomArgs = new boolean[] [ FD ]
Line_9 $$ geomArgs = new boolean[] -->Line_21 $$ geomArgs = new boolean[] [ FD ]
Line_21 $$ geomArgs = new boolean[] -->Line_30 $$ geomArgs = new boolean[] [ FD ]
Line_30 $$ geomArgs = new boolean[] -->Line_47 $$ if (geomArgs[i]) [ FD ]
Line_2 $$ private String getOGCSpatialAnalysisSQL(List args, int spatialAnalysisFunction) -->Line_5 $$ boolean isGeomReturn = true[ CD ]
Line_47 $$ if (geomArgs[i]) -->Line_50 $$ ogcFunction.append(args.get(i))[ CD ]
Line_3 $$ boolean[] geomArgs-->Line_30 $$ geomArgs = new boolean[] [ FD ]
Line_4 $$ final StringBuffer ogcFunction = new StringBuffer("MDSYS.")-->Line_50 $$ ogcFunction.append(args.get(i))[ FD ]
Line_2 $$ private String getOGCSpatialAnalysisSQL(List args, int spatialAnalysisFunction) -->Line_53 $$ ogcFunction.append(")")[ CD ]
Line_2 $$ private String getOGCSpatialAnalysisSQL(List args, int spatialAnalysisFunction) -->Line_39 $$ if (args.size() < geomArgs.length) [ CD ]
Line_43 $$ for (int i = 0; i < geomArgs.length; i++) -->Line_44 $$ if (i > 0) [ CD ]
Line_4 $$ final StringBuffer ogcFunction = new StringBuffer("MDSYS.")-->Line_12 $$ ogcFunction.append("OGC_CONVEXHULL")[ FD ]
Line_3 $$ boolean[] geomArgs-->Line_13 $$ geomArgs = new boolean[] [ FD ]
Line_3 $$ boolean[] geomArgs-->Line_9 $$ geomArgs = new boolean[] [ FD ]
Line_13 $$ geomArgs = new boolean[] -->Line_30 $$ geomArgs = new boolean[] [ FD ]
Line_43 $$ for (int i = 0; i < geomArgs.length; i++) -->Line_47 $$ if (geomArgs[i]) [ CD ]
Line_13 $$ geomArgs = new boolean[] -->Line_47 $$ if (geomArgs[i]) [ FD ]
Line_54 $$ if (isGeomReturn) -->Line_55 $$ ogcFunction.append(".geom")[ CD ]
Line_26 $$ geomArgs = new boolean[] -->Line_30 $$ geomArgs = new boolean[] [ FD ]
Line_44 $$ if (i > 0) -->Line_45 $$ ogcFunction.append(",")[ CD ]
Line_17 $$ geomArgs = new boolean[] -->Line_26 $$ geomArgs = new boolean[] [ FD ]
Line_17 $$ geomArgs = new boolean[] -->Line_47 $$ if (geomArgs[i]) [ FD ]
Line_9 $$ geomArgs = new boolean[] -->Line_30 $$ geomArgs = new boolean[] [ FD ]
Line_30 $$ geomArgs = new boolean[] -->Line_34 $$ geomArgs = new boolean[] [ FD ]
Line_4 $$ final StringBuffer ogcFunction = new StringBuffer("MDSYS.")-->Line_55 $$ ogcFunction.append(".geom")[ FD ]
Line_4 $$ final StringBuffer ogcFunction = new StringBuffer("MDSYS.")-->Line_45 $$ ogcFunction.append(",")[ FD ]
Line_5 $$ boolean isGeomReturn = true-->Line_22 $$ isGeomReturn = false[ FD ]
Line_13 $$ geomArgs = new boolean[] -->Line_26 $$ geomArgs = new boolean[] [ FD ]
Line_2 $$ private String getOGCSpatialAnalysisSQL(List args, int spatialAnalysisFunction) -->Line_3 $$ boolean[] geomArgs[ CD ]
Line_3 $$ boolean[] geomArgs-->Line_21 $$ geomArgs = new boolean[] [ FD ]
Line_9 $$ geomArgs = new boolean[] -->Line_47 $$ if (geomArgs[i]) [ FD ]
Line_26 $$ geomArgs = new boolean[] -->Line_47 $$ if (geomArgs[i]) [ FD ]
Line_3 $$ boolean[] geomArgs-->Line_17 $$ geomArgs = new boolean[] [ FD ]
Line_4 $$ final StringBuffer ogcFunction = new StringBuffer("MDSYS.")-->Line_16 $$ ogcFunction.append("OGC_DIFFERENCE")[ FD ]
Line_4 $$ final StringBuffer ogcFunction = new StringBuffer("MDSYS.")-->Line_33 $$ ogcFunction.append("OGC_UNION")[ FD ]
Line_43 $$ for (int i = 0; i < geomArgs.length; i++) -->Line_48 $$ wrapInSTGeometry((String) args.get(i), ogcFunction)[ FD ]
Line_2 $$ private String getOGCSpatialAnalysisSQL(List args, int spatialAnalysisFunction) -->Line_50 $$ ogcFunction.append(args.get(i))[ FD ]
Line_17 $$ geomArgs = new boolean[] -->Line_34 $$ geomArgs = new boolean[] [ FD ]
Line_2 $$ private String getOGCSpatialAnalysisSQL(List args, int spatialAnalysisFunction) -->Line_39 $$ if (args.size() < geomArgs.length) [ FD ]
Line_21 $$ geomArgs = new boolean[] -->Line_26 $$ geomArgs = new boolean[] [ FD ]
Line_9 $$ geomArgs = new boolean[] -->Line_26 $$ geomArgs = new boolean[] [ FD ]
Line_3 $$ boolean[] geomArgs-->Line_34 $$ geomArgs = new boolean[] [ FD ]
Line_13 $$ geomArgs = new boolean[] -->Line_34 $$ geomArgs = new boolean[] [ FD ]
Line_4 $$ final StringBuffer ogcFunction = new StringBuffer("MDSYS.")-->Line_53 $$ ogcFunction.append(")")[ FD ]
Line_9 $$ geomArgs = new boolean[] -->Line_17 $$ geomArgs = new boolean[] [ FD ]
