Line_2 $$ public void testBlockWrite() throws IOException -->Line_8 $$ Assert.assertEquals('b', unsyncBufferedWriter.buffer[1])[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_21 $$ Assert.assertEquals(0, unsyncBufferedWriter.count)[ CD ]
Line_3 $$ StringWriter stringWriter = new StringWriter()-->Line_15 $$ Assert.assertEquals("ab", stringWriter.getBuffer().toString())[ FD ]
Line_3 $$ StringWriter stringWriter = new StringWriter()-->Line_9 $$ Assert.assertEquals(0, stringWriter.getBuffer().length())[ FD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_16 $$ unsyncBufferedWriter.write("efg".toCharArray())[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_10 $$ unsyncBufferedWriter.write("cd".toCharArray())[ CD ]
Line_4 $$ UnsyncBufferedWriter unsyncBufferedWriter = new UnsyncBufferedWriter(stringWriter, 3)-->Line_20 $$ unsyncBufferedWriter.write("hij".toCharArray())[ FD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_6 $$ Assert.assertEquals(2, unsyncBufferedWriter.count)[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_3 $$ StringWriter stringWriter = new StringWriter()[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_20 $$ unsyncBufferedWriter.write("hij".toCharArray())[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_13 $$ Assert.assertEquals('d', unsyncBufferedWriter.buffer[1])[ CD ]
Line_3 $$ StringWriter stringWriter = new StringWriter()-->Line_14 $$ Assert.assertEquals(2, stringWriter.getBuffer().length())[ FD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_18 $$ Assert.assertEquals(7, stringWriter.getBuffer().length())[ CD ]
Line_3 $$ StringWriter stringWriter = new StringWriter()-->Line_23 $$ Assert.assertEquals("abcdefghij", stringWriter.getBuffer().toString())[ FD ]
Line_3 $$ StringWriter stringWriter = new StringWriter()-->Line_18 $$ Assert.assertEquals(7, stringWriter.getBuffer().length())[ FD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_7 $$ Assert.assertEquals('a', unsyncBufferedWriter.buffer[0])[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_23 $$ Assert.assertEquals("abcdefghij", stringWriter.getBuffer().toString())[ CD ]
Line_4 $$ UnsyncBufferedWriter unsyncBufferedWriter = new UnsyncBufferedWriter(stringWriter, 3)-->Line_5 $$ unsyncBufferedWriter.write("ab".toCharArray())[ FD ]
Line_3 $$ StringWriter stringWriter = new StringWriter()-->Line_19 $$ Assert.assertEquals("abcdefg", stringWriter.getBuffer().toString())[ FD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_22 $$ Assert.assertEquals(10, stringWriter.getBuffer().length())[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_5 $$ unsyncBufferedWriter.write("ab".toCharArray())[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_4 $$ UnsyncBufferedWriter unsyncBufferedWriter = new UnsyncBufferedWriter(stringWriter, 3)[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_14 $$ Assert.assertEquals(2, stringWriter.getBuffer().length())[ CD ]
Line_3 $$ StringWriter stringWriter = new StringWriter()-->Line_22 $$ Assert.assertEquals(10, stringWriter.getBuffer().length())[ FD ]
Line_4 $$ UnsyncBufferedWriter unsyncBufferedWriter = new UnsyncBufferedWriter(stringWriter, 3)-->Line_16 $$ unsyncBufferedWriter.write("efg".toCharArray())[ FD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_15 $$ Assert.assertEquals("ab", stringWriter.getBuffer().toString())[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_12 $$ Assert.assertEquals('c', unsyncBufferedWriter.buffer[0])[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_9 $$ Assert.assertEquals(0, stringWriter.getBuffer().length())[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_19 $$ Assert.assertEquals("abcdefg", stringWriter.getBuffer().toString())[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_11 $$ Assert.assertEquals(2, unsyncBufferedWriter.count)[ CD ]
Line_2 $$ public void testBlockWrite() throws IOException -->Line_17 $$ Assert.assertEquals(0, unsyncBufferedWriter.count)[ CD ]
Line_4 $$ UnsyncBufferedWriter unsyncBufferedWriter = new UnsyncBufferedWriter(stringWriter, 3)-->Line_10 $$ unsyncBufferedWriter.write("cd".toCharArray())[ FD ]
