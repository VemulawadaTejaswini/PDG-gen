Line_16 $$ for (int i = 0; i < debugMessageBuffer.length(); i++) -->Line_17 $$ char c = debugMessageBuffer.charAt(i)[ CD ]
Line_35 $$ if (reasonBuffer.length() > 255) -->Line_38 $$ reasonBuffer.setCharAt(253, '.')[ CD ]
Line_41 $$ for (int i = 0; i < reasonBuffer.length(); i++) -->Line_54 $$ for (int i = 0; i < messageHandlers.size(); i++) [ FD ]
Line_4 $$ while (true) -->Line_7 $$ if (type == Packets.SSH_MSG_IGNORE)[ CD ]
Line_6 $$ int type = msg[0] & 0xff-->Line_29 $$ if (type == Packets.SSH_MSG_DISCONNECT) [ FD ]
Line_11 $$ TypesReader tr = new TypesReader(msg, 0, msglen)-->Line_31 $$ tr.readByte()[ FD ]
Line_11 $$ TypesReader tr = new TypesReader(msg, 0, msglen)-->Line_15 $$ debugMessageBuffer.append(tr.readString("UTF-8"))[ FD ]
Line_11 $$ TypesReader tr = new TypesReader(msg, 0, msglen)-->Line_12 $$ tr.readByte()[ FD ]
Line_4 $$ while (true) -->Line_29 $$ if (type == Packets.SSH_MSG_DISCONNECT) [ CD ]
Line_16 $$ for (int i = 0; i < debugMessageBuffer.length(); i++) -->Line_18 $$ if ((c >= 32) && (c <= 126))[ CD ]
Line_2 $$ public void receiveLoop() throws IOException -->Line_3 $$ byte[] msg = new byte[35000][ CD ]
Line_41 $$ for (int i = 0; i < reasonBuffer.length(); i++) -->Line_42 $$ char c = reasonBuffer.charAt(i)[ CD ]
Line_41 $$ for (int i = 0; i < reasonBuffer.length(); i++) -->Line_55 $$ HandlerEntry he = (HandlerEntry) messageHandlers.elementAt(i)[ FD ]
Line_2 $$ public void receiveLoop() throws IOException -->Line_4 $$ while (true) [ CD ]
Line_16 $$ for (int i = 0; i < debugMessageBuffer.length(); i++) -->Line_45 $$ reasonBuffer.setCharAt(i, '�')[ FD ]
Line_4 $$ while (true) -->Line_61 $$ if (mh == null)[ CD ]
Line_29 $$ if (type == Packets.SSH_MSG_DISCONNECT) -->Line_32 $$ int reason_code = tr.readUINT32()[ CD ]
Line_3 $$ byte[] msg = new byte[35000]-->Line_50 $$ km.handleMessage(msg, msglen)[ FD ]
Line_10 $$ if (log.isEnabled()) -->Line_22 $$ log.log(50, "DEBUG Message from remote: '" + debugMessageBuffer.toString() + "'")[ CD ]
Line_16 $$ for (int i = 0; i < debugMessageBuffer.length(); i++) -->Line_20 $$ debugMessageBuffer.setCharAt(i, '�')[ FD ]
Line_41 $$ for (int i = 0; i < reasonBuffer.length(); i++) -->Line_45 $$ reasonBuffer.setCharAt(i, '�')[ FD ]
Line_16 $$ for (int i = 0; i < debugMessageBuffer.length(); i++) -->Line_55 $$ HandlerEntry he = (HandlerEntry) messageHandlers.elementAt(i)[ FD ]
Line_3 $$ byte[] msg = new byte[35000]-->Line_5 $$ int msglen = tc.receiveMessage(msg, 0, msg.length)[ FD ]
Line_4 $$ while (true) -->Line_26 $$ if (type == Packets.SSH_MSG_UNIMPLEMENTED) [ CD ]
Line_4 $$ while (true) -->Line_9 $$ if (type == Packets.SSH_MSG_DEBUG) [ CD ]
Line_4 $$ while (true) -->Line_49 $$ if ((type == Packets.SSH_MSG_KEXINIT) || (type == Packets.SSH_MSG_NEWKEYS) || ((type >= 30) && (type <= 49))) [ CD ]
Line_41 $$ for (int i = 0; i < reasonBuffer.length(); i++) -->Line_45 $$ reasonBuffer.setCharAt(i, '�')[ CD ]
Line_35 $$ if (reasonBuffer.length() > 255) -->Line_39 $$ reasonBuffer.setCharAt(252, '.')[ CD ]
Line_10 $$ if (log.isEnabled()) -->Line_12 $$ tr.readByte()[ CD ]
Line_49 $$ if ((type == Packets.SSH_MSG_KEXINIT) || (type == Packets.SSH_MSG_NEWKEYS) || ((type >= 30) && (type <= 49))) -->Line_50 $$ km.handleMessage(msg, msglen)[ CD ]
Line_5 $$ int msglen = tc.receiveMessage(msg, 0, msg.length)-->Line_63 $$ mh.handleMessage(msg, msglen)[ FD ]
Line_4 $$ while (true) -->Line_5 $$ int msglen = tc.receiveMessage(msg, 0, msg.length)[ CD ]
Line_14 $$ StringBuffer debugMessageBuffer = new StringBuffer()-->Line_20 $$ debugMessageBuffer.setCharAt(i, '�')[ FD ]
Line_11 $$ TypesReader tr = new TypesReader(msg, 0, msglen)-->Line_32 $$ int reason_code = tr.readUINT32()[ FD ]
Line_11 $$ TypesReader tr = new TypesReader(msg, 0, msglen)-->Line_34 $$ reasonBuffer.append(tr.readString("UTF-8"))[ FD ]
Line_5 $$ int msglen = tc.receiveMessage(msg, 0, msg.length)-->Line_50 $$ km.handleMessage(msg, msglen)[ FD ]
Line_11 $$ TypesReader tr = new TypesReader(msg, 0, msglen)-->Line_13 $$ tr.readBoolean()[ FD ]
Line_16 $$ for (int i = 0; i < debugMessageBuffer.length(); i++) -->Line_17 $$ char c = debugMessageBuffer.charAt(i)[ FD ]
Line_54 $$ for (int i = 0; i < messageHandlers.size(); i++) -->Line_56 $$ if ((he.low <= type) && (type <= he.high)) [ CD ]
Line_29 $$ if (type == Packets.SSH_MSG_DISCONNECT) -->Line_41 $$ for (int i = 0; i < reasonBuffer.length(); i++) [ CD ]
Line_10 $$ if (log.isEnabled()) -->Line_13 $$ tr.readBoolean()[ CD ]
Line_29 $$ if (type == Packets.SSH_MSG_DISCONNECT) -->Line_35 $$ if (reasonBuffer.length() > 255) [ CD ]
Line_10 $$ if (log.isEnabled()) -->Line_15 $$ debugMessageBuffer.append(tr.readString("UTF-8"))[ CD ]
Line_35 $$ if (reasonBuffer.length() > 255) -->Line_36 $$ reasonBuffer.setLength(255)[ CD ]
Line_10 $$ if (log.isEnabled()) -->Line_14 $$ StringBuffer debugMessageBuffer = new StringBuffer()[ CD ]
Line_41 $$ for (int i = 0; i < reasonBuffer.length(); i++) -->Line_43 $$ if ((c >= 32) && (c <= 126))[ CD ]
Line_14 $$ StringBuffer debugMessageBuffer = new StringBuffer()-->Line_22 $$ log.log(50, "DEBUG Message from remote: '" + debugMessageBuffer.toString() + "'")[ FD ]
Line_16 $$ for (int i = 0; i < debugMessageBuffer.length(); i++) -->Line_41 $$ for (int i = 0; i < reasonBuffer.length(); i++) [ FD ]
Line_4 $$ while (true) -->Line_63 $$ mh.handleMessage(msg, msglen)[ CD ]
Line_16 $$ for (int i = 0; i < debugMessageBuffer.length(); i++) -->Line_20 $$ debugMessageBuffer.setCharAt(i, '�')[ CD ]
Line_14 $$ StringBuffer debugMessageBuffer = new StringBuffer()-->Line_17 $$ char c = debugMessageBuffer.charAt(i)[ FD ]
Line_6 $$ int type = msg[0] & 0xff-->Line_26 $$ if (type == Packets.SSH_MSG_UNIMPLEMENTED) [ FD ]
Line_16 $$ for (int i = 0; i < debugMessageBuffer.length(); i++) -->Line_42 $$ char c = reasonBuffer.charAt(i)[ FD ]
Line_6 $$ int type = msg[0] & 0xff-->Line_9 $$ if (type == Packets.SSH_MSG_DEBUG) [ FD ]
Line_54 $$ for (int i = 0; i < messageHandlers.size(); i++) -->Line_55 $$ HandlerEntry he = (HandlerEntry) messageHandlers.elementAt(i)[ FD ]
Line_14 $$ StringBuffer debugMessageBuffer = new StringBuffer()-->Line_15 $$ debugMessageBuffer.append(tr.readString("UTF-8"))[ FD ]
Line_9 $$ if (type == Packets.SSH_MSG_DEBUG) -->Line_10 $$ if (log.isEnabled()) [ CD ]
Line_29 $$ if (type == Packets.SSH_MSG_DISCONNECT) -->Line_31 $$ tr.readByte()[ CD ]
Line_29 $$ if (type == Packets.SSH_MSG_DISCONNECT) -->Line_34 $$ reasonBuffer.append(tr.readString("UTF-8"))[ CD ]
Line_4 $$ while (true) -->Line_6 $$ int type = msg[0] & 0xff[ CD ]
Line_6 $$ int type = msg[0] & 0xff-->Line_7 $$ if (type == Packets.SSH_MSG_IGNORE)[ FD ]
Line_10 $$ if (log.isEnabled()) -->Line_11 $$ TypesReader tr = new TypesReader(msg, 0, msglen)[ CD ]
Line_10 $$ if (log.isEnabled()) -->Line_16 $$ for (int i = 0; i < debugMessageBuffer.length(); i++) [ CD ]
Line_35 $$ if (reasonBuffer.length() > 255) -->Line_37 $$ reasonBuffer.setCharAt(254, '.')[ CD ]
Line_41 $$ for (int i = 0; i < reasonBuffer.length(); i++) -->Line_42 $$ char c = reasonBuffer.charAt(i)[ FD ]
Line_16 $$ for (int i = 0; i < debugMessageBuffer.length(); i++) -->Line_54 $$ for (int i = 0; i < messageHandlers.size(); i++) [ FD ]
Line_54 $$ for (int i = 0; i < messageHandlers.size(); i++) -->Line_55 $$ HandlerEntry he = (HandlerEntry) messageHandlers.elementAt(i)[ CD ]
Line_3 $$ byte[] msg = new byte[35000]-->Line_63 $$ mh.handleMessage(msg, msglen)[ FD ]
Line_14 $$ StringBuffer debugMessageBuffer = new StringBuffer()-->Line_16 $$ for (int i = 0; i < debugMessageBuffer.length(); i++) [ FD ]
Line_4 $$ while (true) -->Line_54 $$ for (int i = 0; i < messageHandlers.size(); i++) [ CD ]
