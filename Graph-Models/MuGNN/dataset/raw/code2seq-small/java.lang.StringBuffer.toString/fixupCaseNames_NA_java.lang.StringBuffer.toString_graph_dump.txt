Line_28 $$ if (noUpper)-->Line_29 $$ noUpper = false[ CD ]
Line_2 $$ protected void fixupCaseNames() throws RMIIIOPViolationException -->Line_17 $$ for (int i = 0; i < entries.size(); ++i) [ CD ]
Line_6 $$ for (int i = 0; i < entries.size(); ++i) -->Line_17 $$ for (int i = 0; i < entries.size(); ++i) [ FD ]
Line_2 $$ protected void fixupCaseNames() throws RMIIIOPViolationException -->Line_3 $$ ArrayList entries = getContainedEntries()[ CD ]
Line_6 $$ for (int i = 0; i < entries.size(); ++i) -->Line_7 $$ AbstractAnalysis aa = (AbstractAnalysis) entries.get(i)[ FD ]
Line_21 $$ boolean noUpper = true-->Line_29 $$ noUpper = false[ FD ]
Line_11 $$ if (upperNames[i].equals(upperNames[j])) -->Line_12 $$ clash[i] = true[ CD ]
Line_6 $$ for (int i = 0; i < entries.size(); ++i) -->Line_10 $$ for (int j = 0; j < i; ++j) [ CD ]
Line_2 $$ protected void fixupCaseNames() throws RMIIIOPViolationException -->Line_6 $$ for (int i = 0; i < entries.size(); ++i) [ CD ]
Line_3 $$ ArrayList entries = getContainedEntries()-->Line_20 $$ AbstractAnalysis aa = (AbstractAnalysis) entries.get(i)[ FD ]
Line_25 $$ for (int j = 0; j < name.length(); ++j) -->Line_32 $$ b.append(j)[ FD ]
Line_17 $$ for (int i = 0; i < entries.size(); ++i) -->Line_20 $$ AbstractAnalysis aa = (AbstractAnalysis) entries.get(i)[ CD ]
Line_25 $$ for (int j = 0; j < name.length(); ++j) -->Line_26 $$ if (!Character.isUpperCase(name.charAt(j)))[ CD ]
Line_17 $$ for (int i = 0; i < entries.size(); ++i) -->Line_25 $$ for (int j = 0; j < name.length(); ++j) [ CD ]
Line_23 $$ StringBuffer b = new StringBuffer(name)-->Line_24 $$ b.append('_')[ FD ]
Line_3 $$ ArrayList entries = getContainedEntries()-->Line_5 $$ String[] upperNames = new String[entries.size()][ FD ]
Line_20 $$ AbstractAnalysis aa = (AbstractAnalysis) entries.get(i)-->Line_34 $$ aa.setIDLName(b.toString())[ FD ]
Line_25 $$ for (int j = 0; j < name.length(); ++j) -->Line_26 $$ if (!Character.isUpperCase(name.charAt(j)))[ FD ]
Line_6 $$ for (int i = 0; i < entries.size(); ++i) -->Line_20 $$ AbstractAnalysis aa = (AbstractAnalysis) entries.get(i)[ FD ]
Line_11 $$ if (upperNames[i].equals(upperNames[j])) -->Line_13 $$ clash[j] = true[ CD ]
Line_17 $$ for (int i = 0; i < entries.size(); ++i) -->Line_20 $$ AbstractAnalysis aa = (AbstractAnalysis) entries.get(i)[ FD ]
Line_17 $$ for (int i = 0; i < entries.size(); ++i) -->Line_23 $$ StringBuffer b = new StringBuffer(name)[ CD ]
Line_3 $$ ArrayList entries = getContainedEntries()-->Line_17 $$ for (int i = 0; i < entries.size(); ++i) [ FD ]
Line_25 $$ for (int j = 0; j < name.length(); ++j) -->Line_32 $$ b.append(j)[ CD ]
Line_7 $$ AbstractAnalysis aa = (AbstractAnalysis) entries.get(i)-->Line_9 $$ upperNames[i] = aa.getIDLName().toUpperCase(Locale.ENGLISH)[ FD ]
Line_23 $$ StringBuffer b = new StringBuffer(name)-->Line_32 $$ b.append(j)[ FD ]
Line_17 $$ for (int i = 0; i < entries.size(); ++i) -->Line_24 $$ b.append('_')[ CD ]
Line_3 $$ ArrayList entries = getContainedEntries()-->Line_6 $$ for (int i = 0; i < entries.size(); ++i) [ FD ]
Line_6 $$ for (int i = 0; i < entries.size(); ++i) -->Line_9 $$ upperNames[i] = aa.getIDLName().toUpperCase(Locale.ENGLISH)[ CD ]
Line_6 $$ for (int i = 0; i < entries.size(); ++i) -->Line_7 $$ AbstractAnalysis aa = (AbstractAnalysis) entries.get(i)[ CD ]
Line_22 $$ String name = aa.getIDLName()-->Line_26 $$ if (!Character.isUpperCase(name.charAt(j)))[ FD ]
Line_28 $$ if (noUpper)-->Line_31 $$ b.append('_')[ CD ]
Line_17 $$ for (int i = 0; i < entries.size(); ++i) -->Line_18 $$ if (!clash[i])[ CD ]
Line_3 $$ ArrayList entries = getContainedEntries()-->Line_4 $$ boolean[] clash = new boolean[entries.size()][ FD ]
Line_6 $$ for (int i = 0; i < entries.size(); ++i) -->Line_10 $$ for (int j = 0; j < i; ++j) [ FD ]
Line_23 $$ StringBuffer b = new StringBuffer(name)-->Line_31 $$ b.append('_')[ FD ]
Line_3 $$ ArrayList entries = getContainedEntries()-->Line_7 $$ AbstractAnalysis aa = (AbstractAnalysis) entries.get(i)[ FD ]
Line_2 $$ protected void fixupCaseNames() throws RMIIIOPViolationException -->Line_4 $$ boolean[] clash = new boolean[entries.size()][ CD ]
Line_17 $$ for (int i = 0; i < entries.size(); ++i) -->Line_34 $$ aa.setIDLName(b.toString())[ CD ]
Line_10 $$ for (int j = 0; j < i; ++j) -->Line_26 $$ if (!Character.isUpperCase(name.charAt(j)))[ FD ]
Line_10 $$ for (int j = 0; j < i; ++j) -->Line_11 $$ if (upperNames[i].equals(upperNames[j])) [ CD ]
Line_20 $$ AbstractAnalysis aa = (AbstractAnalysis) entries.get(i)-->Line_22 $$ String name = aa.getIDLName()[ FD ]
Line_23 $$ StringBuffer b = new StringBuffer(name)-->Line_34 $$ aa.setIDLName(b.toString())[ FD ]
Line_7 $$ AbstractAnalysis aa = (AbstractAnalysis) entries.get(i)-->Line_22 $$ String name = aa.getIDLName()[ FD ]
Line_6 $$ for (int i = 0; i < entries.size(); ++i) -->Line_8 $$ clash[i] = false[ CD ]
Line_22 $$ String name = aa.getIDLName()-->Line_25 $$ for (int j = 0; j < name.length(); ++j) [ FD ]
Line_10 $$ for (int j = 0; j < i; ++j) -->Line_32 $$ b.append(j)[ FD ]
Line_2 $$ protected void fixupCaseNames() throws RMIIIOPViolationException -->Line_5 $$ String[] upperNames = new String[entries.size()][ CD ]
Line_10 $$ for (int j = 0; j < i; ++j) -->Line_25 $$ for (int j = 0; j < name.length(); ++j) [ FD ]
Line_17 $$ for (int i = 0; i < entries.size(); ++i) -->Line_21 $$ boolean noUpper = true[ CD ]
Line_17 $$ for (int i = 0; i < entries.size(); ++i) -->Line_22 $$ String name = aa.getIDLName()[ CD ]
Line_7 $$ AbstractAnalysis aa = (AbstractAnalysis) entries.get(i)-->Line_34 $$ aa.setIDLName(b.toString())[ FD ]
Line_25 $$ for (int j = 0; j < name.length(); ++j) -->Line_28 $$ if (noUpper)[ CD ]
