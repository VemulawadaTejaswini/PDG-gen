Line_3 $$ Path relPath = new Path(value.path)-->Line_4 $$ int hash = HarFileSystem.getHarHash(relPath)[ FD ]
Line_5 $$ String towrite = null-->Line_12 $$ towrite = encodeName(relPath.toString()) + " dir " + propStr + " 0 0 "[ FD ]
Line_2 $$ public void map(LongWritable key, HarEntry value, OutputCollector<IntWritable, Text> out, Reporter reporter) throws IOException -->Line_19 $$ reporter.progress()[ FD ]
Line_2 $$ public void map(LongWritable key, HarEntry value, OutputCollector<IntWritable, Text> out, Reporter reporter) throws IOException -->Line_3 $$ Path relPath = new Path(value.path)[ CD ]
Line_2 $$ public void map(LongWritable key, HarEntry value, OutputCollector<IntWritable, Text> out, Reporter reporter) throws IOException -->Line_10 $$ String propStr = encodeProperties(srcStatus)[ CD ]
Line_8 $$ FileSystem srcFs = srcPath.getFileSystem(conf)-->Line_21 $$ FSDataInputStream input = srcFs.open(srcStatus.getPath())[ FD ]
Line_5 $$ String towrite = null-->Line_24 $$ towrite = encodeName(relPath.toString()) + " file " + partname + " " + startPos + " " + srcStatus.getLen() + " " + propStr + " "[ FD ]
Line_2 $$ public void map(LongWritable key, HarEntry value, OutputCollector<IntWritable, Text> out, Reporter reporter) throws IOException -->Line_8 $$ FileSystem srcFs = srcPath.getFileSystem(conf)[ CD ]
Line_9 $$ FileStatus srcStatus = srcFs.getFileStatus(srcPath)-->Line_21 $$ FSDataInputStream input = srcFs.open(srcStatus.getPath())[ FD ]
Line_5 $$ String towrite = null-->Line_14 $$ sbuff.append(towrite)[ FD ]
Line_2 $$ public void map(LongWritable key, HarEntry value, OutputCollector<IntWritable, Text> out, Reporter reporter) throws IOException -->Line_4 $$ int hash = HarFileSystem.getHarHash(relPath)[ CD ]
Line_9 $$ FileStatus srcStatus = srcFs.getFileStatus(srcPath)-->Line_22 $$ reporter.setStatus("Copying file " + srcStatus.getPath() + " to archive.")[ FD ]
Line_2 $$ public void map(LongWritable key, HarEntry value, OutputCollector<IntWritable, Text> out, Reporter reporter) throws IOException -->Line_9 $$ FileStatus srcStatus = srcFs.getFileStatus(srcPath)[ CD ]
Line_13 $$ StringBuffer sbuff = new StringBuffer()-->Line_18 $$ towrite = sbuff.toString()[ FD ]
Line_9 $$ FileStatus srcStatus = srcFs.getFileStatus(srcPath)-->Line_10 $$ String propStr = encodeProperties(srcStatus)[ FD ]
Line_8 $$ FileSystem srcFs = srcPath.getFileSystem(conf)-->Line_9 $$ FileStatus srcStatus = srcFs.getFileStatus(srcPath)[ FD ]
Line_21 $$ FSDataInputStream input = srcFs.open(srcStatus.getPath())-->Line_23 $$ copyData(srcStatus.getPath(), input, partStream, reporter)[ FD ]
Line_2 $$ public void map(LongWritable key, HarEntry value, OutputCollector<IntWritable, Text> out, Reporter reporter) throws IOException -->Line_23 $$ copyData(srcStatus.getPath(), input, partStream, reporter)[ FD ]
Line_11 $$ if (value.isDir()) -->Line_21 $$ FSDataInputStream input = srcFs.open(srcStatus.getPath())[ CD ]
Line_11 $$ if (value.isDir()) -->Line_14 $$ sbuff.append(towrite)[ CD ]
Line_11 $$ if (value.isDir()) -->Line_23 $$ copyData(srcStatus.getPath(), input, partStream, reporter)[ CD ]
Line_2 $$ public void map(LongWritable key, HarEntry value, OutputCollector<IntWritable, Text> out, Reporter reporter) throws IOException -->Line_6 $$ Path srcPath = realPath(relPath, rootPath)[ CD ]
Line_2 $$ public void map(LongWritable key, HarEntry value, OutputCollector<IntWritable, Text> out, Reporter reporter) throws IOException -->Line_11 $$ if (value.isDir()) [ FD ]
Line_11 $$ if (value.isDir()) -->Line_18 $$ towrite = sbuff.toString()[ CD ]
Line_2 $$ public void map(LongWritable key, HarEntry value, OutputCollector<IntWritable, Text> out, Reporter reporter) throws IOException -->Line_5 $$ String towrite = null[ CD ]
Line_11 $$ if (value.isDir()) -->Line_24 $$ towrite = encodeName(relPath.toString()) + " file " + partname + " " + startPos + " " + srcStatus.getLen() + " " + propStr + " "[ CD ]
Line_2 $$ public void map(LongWritable key, HarEntry value, OutputCollector<IntWritable, Text> out, Reporter reporter) throws IOException -->Line_7 $$ long startPos = partStream.getPos()[ CD ]
Line_18 $$ towrite = sbuff.toString()-->Line_24 $$ towrite = encodeName(relPath.toString()) + " file " + partname + " " + startPos + " " + srcStatus.getLen() + " " + propStr + " "[ FD ]
Line_11 $$ if (value.isDir()) -->Line_22 $$ reporter.setStatus("Copying file " + srcStatus.getPath() + " to archive.")[ CD ]
Line_2 $$ public void map(LongWritable key, HarEntry value, OutputCollector<IntWritable, Text> out, Reporter reporter) throws IOException -->Line_22 $$ reporter.setStatus("Copying file " + srcStatus.getPath() + " to archive.")[ FD ]
Line_13 $$ StringBuffer sbuff = new StringBuffer()-->Line_16 $$ sbuff.append(encodeName(child) + " ")[ FD ]
Line_9 $$ FileStatus srcStatus = srcFs.getFileStatus(srcPath)-->Line_24 $$ towrite = encodeName(relPath.toString()) + " file " + partname + " " + startPos + " " + srcStatus.getLen() + " " + propStr + " "[ FD ]
Line_12 $$ towrite = encodeName(relPath.toString()) + " dir " + propStr + " 0 0 "-->Line_14 $$ sbuff.append(towrite)[ FD ]
Line_3 $$ Path relPath = new Path(value.path)-->Line_6 $$ Path srcPath = realPath(relPath, rootPath)[ FD ]
Line_2 $$ public void map(LongWritable key, HarEntry value, OutputCollector<IntWritable, Text> out, Reporter reporter) throws IOException -->Line_11 $$ if (value.isDir()) [ CD ]
Line_12 $$ towrite = encodeName(relPath.toString()) + " dir " + propStr + " 0 0 "-->Line_18 $$ towrite = sbuff.toString()[ FD ]
Line_12 $$ towrite = encodeName(relPath.toString()) + " dir " + propStr + " 0 0 "-->Line_24 $$ towrite = encodeName(relPath.toString()) + " file " + partname + " " + startPos + " " + srcStatus.getLen() + " " + propStr + " "[ FD ]
Line_6 $$ Path srcPath = realPath(relPath, rootPath)-->Line_8 $$ FileSystem srcFs = srcPath.getFileSystem(conf)[ FD ]
Line_6 $$ Path srcPath = realPath(relPath, rootPath)-->Line_9 $$ FileStatus srcStatus = srcFs.getFileStatus(srcPath)[ FD ]
Line_3 $$ Path relPath = new Path(value.path)-->Line_12 $$ towrite = encodeName(relPath.toString()) + " dir " + propStr + " 0 0 "[ FD ]
Line_9 $$ FileStatus srcStatus = srcFs.getFileStatus(srcPath)-->Line_23 $$ copyData(srcStatus.getPath(), input, partStream, reporter)[ FD ]
Line_2 $$ public void map(LongWritable key, HarEntry value, OutputCollector<IntWritable, Text> out, Reporter reporter) throws IOException -->Line_26 $$ out.collect(new IntWritable(hash), new Text(towrite))[ CD ]
Line_2 $$ public void map(LongWritable key, HarEntry value, OutputCollector<IntWritable, Text> out, Reporter reporter) throws IOException -->Line_26 $$ out.collect(new IntWritable(hash), new Text(towrite))[ FD ]
Line_3 $$ Path relPath = new Path(value.path)-->Line_24 $$ towrite = encodeName(relPath.toString()) + " file " + partname + " " + startPos + " " + srcStatus.getLen() + " " + propStr + " "[ FD ]
Line_11 $$ if (value.isDir()) -->Line_13 $$ StringBuffer sbuff = new StringBuffer()[ CD ]
Line_13 $$ StringBuffer sbuff = new StringBuffer()-->Line_14 $$ sbuff.append(towrite)[ FD ]
Line_11 $$ if (value.isDir()) -->Line_12 $$ towrite = encodeName(relPath.toString()) + " dir " + propStr + " 0 0 "[ CD ]
Line_15 $$ for (String child : value.children) -->Line_16 $$ sbuff.append(encodeName(child) + " ")[ FD ]
Line_5 $$ String towrite = null-->Line_18 $$ towrite = sbuff.toString()[ FD ]
Line_11 $$ if (value.isDir()) -->Line_19 $$ reporter.progress()[ CD ]
