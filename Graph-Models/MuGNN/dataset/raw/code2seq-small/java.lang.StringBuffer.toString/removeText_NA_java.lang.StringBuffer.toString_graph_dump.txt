Line_5 $$ final PsiElement psiElement = findElementAt(physicalStart)-->Line_29 $$ replaceChild(psiElement.getNode(), e)[ FD ]
Line_41 $$ if (displayStart == 0 && displayEnd == value.length()) -->Line_42 $$ delete()[ CD ]
Line_21 $$ final String newElementText = oldElementText.substring(0, removeStart) + oldElementText.substring(removeEnd)-->Line_27 $$ if (!newElementText.isEmpty()) [ FD ]
Line_6 $$ if (psiElement != null) -->Line_7 $$ final IElementType elementType = psiElement.getNode().getElementType()[ CD ]
Line_11 $$ if (elementDisplayEnd >= displayEnd && elementDisplayStart <= displayStart) -->Line_12 $$ int physicalEnd = physicalStart[ CD ]
Line_2 $$ public void removeText(int displayStart, int displayEnd) throws IncorrectOperationException -->Line_3 $$ final String value = getValue()[ CD ]
Line_5 $$ final PsiElement psiElement = findElementAt(physicalStart)-->Line_7 $$ final IElementType elementType = psiElement.getNode().getElementType()[ FD ]
Line_5 $$ final PsiElement psiElement = findElementAt(physicalStart)-->Line_18 $$ int removeStart = physicalStart - psiElement.getStartOffsetInParent()[ FD ]
Line_19 $$ int removeEnd = physicalEnd - psiElement.getStartOffsetInParent()-->Line_21 $$ final String newElementText = oldElementText.substring(0, removeStart) + oldElementText.substring(removeEnd)[ FD ]
Line_5 $$ final PsiElement psiElement = findElementAt(physicalStart)-->Line_6 $$ if (psiElement != null) [ FD ]
Line_11 $$ if (elementDisplayEnd >= displayEnd && elementDisplayStart <= displayStart) -->Line_22 $$ final PomModel model = PomManager.getModel(getProject())[ CD ]
Line_5 $$ final PsiElement psiElement = findElementAt(physicalStart)-->Line_8 $$ final int elementDisplayEnd = physicalToDisplay(psiElement.getStartOffsetInParent() + psiElement.getTextLength())[ FD ]
Line_18 $$ int removeStart = physicalStart - psiElement.getStartOffsetInParent()-->Line_21 $$ final String newElementText = oldElementText.substring(0, removeStart) + oldElementText.substring(removeEnd)[ FD ]
Line_2 $$ public void removeText(int displayStart, int displayEnd) throws IncorrectOperationException -->Line_5 $$ final PsiElement psiElement = findElementAt(physicalStart)[ CD ]
Line_13 $$ while (physicalEnd < getTextRange().getLength()) -->Line_14 $$ if (physicalToDisplay(physicalEnd) == displayEnd)[ CD ]
Line_2 $$ public void removeText(int displayStart, int displayEnd) throws IncorrectOperationException -->Line_41 $$ if (displayStart == 0 && displayEnd == value.length()) [ CD ]
Line_22 $$ final PomModel model = PomManager.getModel(getProject())-->Line_23 $$ final XmlAspect aspect = model.getModelAspect(XmlAspect.class)[ FD ]
Line_27 $$ if (!newElementText.isEmpty()) -->Line_31 $$ psiElement.delete()[ CD ]
Line_11 $$ if (elementDisplayEnd >= displayEnd && elementDisplayStart <= displayStart) -->Line_37 $$ return[ CD ]
Line_6 $$ if (psiElement != null) -->Line_10 $$ if (elementType == XmlTokenType.XML_DATA_CHARACTERS || elementType == TokenType.WHITE_SPACE) [ CD ]
Line_41 $$ if (displayStart == 0 && displayEnd == value.length()) -->Line_44 $$ setValue(new StringBuffer(getValue()).replace(displayStart, displayEnd, "").toString())[ CD ]
Line_24 $$ model.runTransaction(new PomTransactionBase(this, aspect) -->Line_26 $$ final String oldText = getText()[ CD ]
Line_2 $$ public void removeText(int displayStart, int displayEnd) throws IncorrectOperationException -->Line_44 $$ setValue(new StringBuffer(getValue()).replace(displayStart, displayEnd, "").toString())[ FD ]
Line_2 $$ public void removeText(int displayStart, int displayEnd) throws IncorrectOperationException -->Line_4 $$ final int physicalStart = displayToPhysical(displayStart)[ FD ]
Line_2 $$ public void removeText(int displayStart, int displayEnd) throws IncorrectOperationException -->Line_14 $$ if (physicalToDisplay(physicalEnd) == displayEnd)[ FD ]
Line_24 $$ model.runTransaction(new PomTransactionBase(this, aspect) -->Line_27 $$ if (!newElementText.isEmpty()) [ CD ]
Line_5 $$ final PsiElement psiElement = findElementAt(physicalStart)-->Line_9 $$ final int elementDisplayStart = physicalToDisplay(psiElement.getStartOffsetInParent())[ FD ]
Line_27 $$ if (!newElementText.isEmpty()) -->Line_29 $$ replaceChild(psiElement.getNode(), e)[ CD ]
Line_10 $$ if (elementType == XmlTokenType.XML_DATA_CHARACTERS || elementType == TokenType.WHITE_SPACE) -->Line_11 $$ if (elementDisplayEnd >= displayEnd && elementDisplayStart <= displayStart) [ CD ]
Line_12 $$ int physicalEnd = physicalStart-->Line_13 $$ while (physicalEnd < getTextRange().getLength()) [ FD ]
Line_24 $$ model.runTransaction(new PomTransactionBase(this, aspect) -->Line_34 $$ return XmlTextChangedImpl.createXmlTextChanged(model, XmlTextImpl.this, oldText)[ CD ]
Line_6 $$ if (psiElement != null) -->Line_8 $$ final int elementDisplayEnd = physicalToDisplay(psiElement.getStartOffsetInParent() + psiElement.getTextLength())[ CD ]
Line_5 $$ final PsiElement psiElement = findElementAt(physicalStart)-->Line_31 $$ psiElement.delete()[ FD ]
Line_28 $$ final ASTNode e = getPolicy().encodeXmlTextContents(newElementText, XmlTextImpl.this)-->Line_29 $$ replaceChild(psiElement.getNode(), e)[ FD ]
Line_22 $$ final PomModel model = PomManager.getModel(getProject())-->Line_34 $$ return XmlTextChangedImpl.createXmlTextChanged(model, XmlTextImpl.this, oldText)[ FD ]
Line_22 $$ final PomModel model = PomManager.getModel(getProject())-->Line_24 $$ model.runTransaction(new PomTransactionBase(this, aspect) [ FD ]
Line_12 $$ int physicalEnd = physicalStart-->Line_16 $$ physicalEnd++[ FD ]
Line_27 $$ if (!newElementText.isEmpty()) -->Line_28 $$ final ASTNode e = getPolicy().encodeXmlTextContents(newElementText, XmlTextImpl.this)[ CD ]
Line_5 $$ final PsiElement psiElement = findElementAt(physicalStart)-->Line_20 $$ final String oldElementText = psiElement.getText()[ FD ]
Line_11 $$ if (elementDisplayEnd >= displayEnd && elementDisplayStart <= displayStart) -->Line_18 $$ int removeStart = physicalStart - psiElement.getStartOffsetInParent()[ CD ]
Line_26 $$ final String oldText = getText()-->Line_34 $$ return XmlTextChangedImpl.createXmlTextChanged(model, XmlTextImpl.this, oldText)[ FD ]
Line_4 $$ final int physicalStart = displayToPhysical(displayStart)-->Line_5 $$ final PsiElement psiElement = findElementAt(physicalStart)[ FD ]
Line_11 $$ if (elementDisplayEnd >= displayEnd && elementDisplayStart <= displayStart) -->Line_19 $$ int removeEnd = physicalEnd - psiElement.getStartOffsetInParent()[ CD ]
Line_24 $$ model.runTransaction(new PomTransactionBase(this, aspect) -->Line_33 $$ clearCaches()[ CD ]
Line_12 $$ int physicalEnd = physicalStart-->Line_14 $$ if (physicalToDisplay(physicalEnd) == displayEnd)[ FD ]
Line_11 $$ if (elementDisplayEnd >= displayEnd && elementDisplayStart <= displayStart) -->Line_13 $$ while (physicalEnd < getTextRange().getLength()) [ CD ]
Line_13 $$ while (physicalEnd < getTextRange().getLength()) -->Line_16 $$ physicalEnd++[ CD ]
Line_5 $$ final PsiElement psiElement = findElementAt(physicalStart)-->Line_19 $$ int removeEnd = physicalEnd - psiElement.getStartOffsetInParent()[ FD ]
Line_21 $$ final String newElementText = oldElementText.substring(0, removeStart) + oldElementText.substring(removeEnd)-->Line_28 $$ final ASTNode e = getPolicy().encodeXmlTextContents(newElementText, XmlTextImpl.this)[ FD ]
Line_11 $$ if (elementDisplayEnd >= displayEnd && elementDisplayStart <= displayStart) -->Line_21 $$ final String newElementText = oldElementText.substring(0, removeStart) + oldElementText.substring(removeEnd)[ CD ]
Line_3 $$ final String value = getValue()-->Line_41 $$ if (displayStart == 0 && displayEnd == value.length()) [ FD ]
Line_11 $$ if (elementDisplayEnd >= displayEnd && elementDisplayStart <= displayStart) -->Line_20 $$ final String oldElementText = psiElement.getText()[ CD ]
Line_2 $$ public void removeText(int displayStart, int displayEnd) throws IncorrectOperationException -->Line_4 $$ final int physicalStart = displayToPhysical(displayStart)[ CD ]
Line_2 $$ public void removeText(int displayStart, int displayEnd) throws IncorrectOperationException -->Line_6 $$ if (psiElement != null) [ CD ]
Line_11 $$ if (elementDisplayEnd >= displayEnd && elementDisplayStart <= displayStart) -->Line_24 $$ model.runTransaction(new PomTransactionBase(this, aspect) [ CD ]
Line_6 $$ if (psiElement != null) -->Line_9 $$ final int elementDisplayStart = physicalToDisplay(psiElement.getStartOffsetInParent())[ CD ]
Line_11 $$ if (elementDisplayEnd >= displayEnd && elementDisplayStart <= displayStart) -->Line_23 $$ final XmlAspect aspect = model.getModelAspect(XmlAspect.class)[ CD ]
Line_20 $$ final String oldElementText = psiElement.getText()-->Line_21 $$ final String newElementText = oldElementText.substring(0, removeStart) + oldElementText.substring(removeEnd)[ FD ]
