Line_4 $$ StringBuffer ret = new StringBuffer(op + '(')-->Line_10 $$ return ret.toString()[ FD ]
Line_3 $$ final String infname = inf.getName()-->Line_6 $$ compose(infname, p, ret)[ FD ]
Line_4 $$ StringBuffer ret = new StringBuffer(op + '(')-->Line_7 $$ ret.append(',')[ FD ]
Line_2 $$ public static String compose(String op, Class<? extends InputFormat> inf, String... path) -->Line_9 $$ ret.setCharAt(ret.length() - 1, ')')[ CD ]
Line_4 $$ StringBuffer ret = new StringBuffer(op + '(')-->Line_6 $$ compose(infname, p, ret)[ FD ]
Line_2 $$ public static String compose(String op, Class<? extends InputFormat> inf, String... path) -->Line_10 $$ return ret.toString()[ CD ]
Line_2 $$ public static String compose(String op, Class<? extends InputFormat> inf, String... path) -->Line_3 $$ final String infname = inf.getName()[ FD ]
Line_5 $$ for (String p : path) -->Line_6 $$ compose(infname, p, ret)[ FD ]
Line_4 $$ StringBuffer ret = new StringBuffer(op + '(')-->Line_9 $$ ret.setCharAt(ret.length() - 1, ')')[ FD ]
Line_2 $$ public static String compose(String op, Class<? extends InputFormat> inf, String... path) -->Line_4 $$ StringBuffer ret = new StringBuffer(op + '(')[ CD ]
Line_2 $$ public static String compose(String op, Class<? extends InputFormat> inf, String... path) -->Line_3 $$ final String infname = inf.getName()[ CD ]
