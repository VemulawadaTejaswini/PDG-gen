Line_2 $$ private PsiMethod createMethodSignature(String createMethodName) -->Line_12 $$ return myElementFactory.createMethodFromText("public " + constructor.getName() + " " + createMethodName + "()[ CD ]
Line_2 $$ private PsiMethod createMethodSignature(String createMethodName) -->Line_5 $$ final PsiMethod constructor = getWorkingConstructor()[ CD ]
Line_2 $$ private PsiMethod createMethodSignature(String createMethodName) -->Line_4 $$ final StringBuffer buf = new StringBuffer()[ CD ]
Line_4 $$ final StringBuffer buf = new StringBuffer()-->Line_9 $$ buf.append(", ")[ FD ]
Line_4 $$ final StringBuffer buf = new StringBuffer()-->Line_12 $$ return myElementFactory.createMethodFromText("public " + constructor.getName() + " " + createMethodName + "()[ FD ]
Line_4 $$ final StringBuffer buf = new StringBuffer()-->Line_8 $$ if (buf.length() > 0)[ FD ]
Line_5 $$ final PsiMethod constructor = getWorkingConstructor()-->Line_12 $$ return myElementFactory.createMethodFromText("public " + constructor.getName() + " " + createMethodName + "()[ FD ]
Line_2 $$ private PsiMethod createMethodSignature(String createMethodName) -->Line_3 $$ JavaCodeStyleManager styleManager = JavaCodeStyleManager.getInstance(myProject)[ CD ]
Line_7 $$ final String pureParamName = styleManager.variableNameToPropertyName(parameter.getName(), VariableKind.PARAMETER)-->Line_10 $$ buf.append(myParametersMap.get(pureParamName).getFieldName())[ FD ]
Line_6 $$ for (PsiParameter parameter : constructor.getParameterList().getParameters()) -->Line_7 $$ final String pureParamName = styleManager.variableNameToPropertyName(parameter.getName(), VariableKind.PARAMETER)[ FD ]
Line_3 $$ JavaCodeStyleManager styleManager = JavaCodeStyleManager.getInstance(myProject)-->Line_7 $$ final String pureParamName = styleManager.variableNameToPropertyName(parameter.getName(), VariableKind.PARAMETER)[ FD ]
Line_8 $$ if (buf.length() > 0)-->Line_9 $$ buf.append(", ")[ CD ]
Line_4 $$ final StringBuffer buf = new StringBuffer()-->Line_10 $$ buf.append(myParametersMap.get(pureParamName).getFieldName())[ FD ]
Line_5 $$ final PsiMethod constructor = getWorkingConstructor()-->Line_6 $$ for (PsiParameter parameter : constructor.getParameterList().getParameters()) [ FD ]
