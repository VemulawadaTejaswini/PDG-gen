Line_7 $$ final LinkedList<PsiType> types = myTypeMap.get(info)-->Line_9 $$ if (types != null) [ FD ]
Line_8 $$ final StringBuffer b = new StringBuffer()-->Line_18 $$ t[k++] = b.toString()[ FD ]
Line_4 $$ final String[] t = new String[myTypeMap.size()]-->Line_20 $$ Arrays.sort(t)[ FD ]
Line_11 $$ b.append(StringUtil.join(types, new Function<PsiType, String>() -->Line_13 $$ return psiType.getCanonicalText()[ FD ]
Line_8 $$ final StringBuffer b = new StringBuffer()-->Line_10 $$ b.append(info.getElement()).append(" : ")[ FD ]
Line_2 $$ public String getReport() -->Line_5 $$ int k = 0[ CD ]
Line_9 $$ if (types != null) -->Line_10 $$ b.append(info.getElement()).append(" : ")[ CD ]
Line_9 $$ if (types != null) -->Line_11 $$ b.append(StringUtil.join(types, new Function<PsiType, String>() [ CD ]
Line_8 $$ final StringBuffer b = new StringBuffer()-->Line_11 $$ b.append(StringUtil.join(types, new Function<PsiType, String>() [ FD ]
Line_9 $$ if (types != null) -->Line_16 $$ b.append("\n")[ CD ]
Line_6 $$ for (final TypeMigrationUsageInfo info : myTypeMap.keySet()) -->Line_7 $$ final LinkedList<PsiType> types = myTypeMap.get(info)[ FD ]
Line_7 $$ final LinkedList<PsiType> types = myTypeMap.get(info)-->Line_11 $$ b.append(StringUtil.join(types, new Function<PsiType, String>() [ FD ]
Line_2 $$ public String getReport() -->Line_24 $$ return buffer.toString()[ CD ]
Line_6 $$ for (final TypeMigrationUsageInfo info : myTypeMap.keySet()) -->Line_10 $$ b.append(info.getElement()).append(" : ")[ FD ]
Line_2 $$ public String getReport() -->Line_20 $$ Arrays.sort(t)[ CD ]
Line_8 $$ final StringBuffer b = new StringBuffer()-->Line_16 $$ b.append("\n")[ FD ]
Line_11 $$ b.append(StringUtil.join(types, new Function<PsiType, String>() -->Line_13 $$ return psiType.getCanonicalText()[ CD ]
Line_2 $$ public String getReport() -->Line_3 $$ final StringBuffer buffer = new StringBuffer()[ CD ]
Line_2 $$ public String getReport() -->Line_4 $$ final String[] t = new String[myTypeMap.size()][ CD ]
Line_3 $$ final StringBuffer buffer = new StringBuffer()-->Line_22 $$ buffer.append(aT)[ FD ]
Line_3 $$ final StringBuffer buffer = new StringBuffer()-->Line_24 $$ return buffer.toString()[ FD ]
