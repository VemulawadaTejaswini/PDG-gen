Line_2 $$ public AbstractUrl createUrlByElement(Object element) -->Line_3 $$ if (element instanceof ModuleGroup) [ FD ]
Line_7 $$ for (int i = 0; i < groupPath.length; i++) -->Line_8 $$ String s = groupPath[i][ CD ]
Line_3 $$ if (element instanceof ModuleGroup) -->Line_4 $$ ModuleGroup group = (ModuleGroup) element[ CD ]
Line_3 $$ if (element instanceof ModuleGroup) -->Line_7 $$ for (int i = 0; i < groupPath.length; i++) [ CD ]
Line_6 $$ StringBuffer sb = new StringBuffer()-->Line_9 $$ sb.append(s)[ FD ]
Line_3 $$ if (element instanceof ModuleGroup) -->Line_5 $$ final String[] groupPath = group.getGroupPath()[ CD ]
Line_6 $$ StringBuffer sb = new StringBuffer()-->Line_10 $$ sb.append(";")[ FD ]
Line_3 $$ if (element instanceof ModuleGroup) -->Line_6 $$ StringBuffer sb = new StringBuffer()[ CD ]
Line_8 $$ String s = groupPath[i]-->Line_9 $$ sb.append(s)[ FD ]
Line_7 $$ for (int i = 0; i < groupPath.length; i++) -->Line_9 $$ sb.append(s)[ CD ]
Line_2 $$ public AbstractUrl createUrlByElement(Object element) -->Line_3 $$ if (element instanceof ModuleGroup) [ CD ]
Line_4 $$ ModuleGroup group = (ModuleGroup) element-->Line_5 $$ final String[] groupPath = group.getGroupPath()[ FD ]
Line_6 $$ StringBuffer sb = new StringBuffer()-->Line_12 $$ return new ModuleGroupUrl(sb.toString())[ FD ]
Line_2 $$ public AbstractUrl createUrlByElement(Object element) -->Line_14 $$ return null[ CD ]
Line_7 $$ for (int i = 0; i < groupPath.length; i++) -->Line_10 $$ sb.append(";")[ CD ]
Line_3 $$ if (element instanceof ModuleGroup) -->Line_12 $$ return new ModuleGroupUrl(sb.toString())[ CD ]
