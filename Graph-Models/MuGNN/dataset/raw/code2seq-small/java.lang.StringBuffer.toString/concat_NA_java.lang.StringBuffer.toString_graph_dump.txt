Line_2 $$ private static String concat(String[] strings, int headLimit, int tailLimit) -->Line_12 $$ return buffer.toString()[ CD ]
Line_5 $$ StringBuffer buffer = new StringBuffer()-->Line_8 $$ buffer.append(separator)[ FD ]
Line_7 $$ for (int i = headLimit; i < strings.length - tailLimit; i++) -->Line_9 $$ buffer.append(strings[i])[ CD ]
Line_3 $$ if (strings.length <= headLimit + tailLimit)-->Line_4 $$ return null[ CD ]
Line_6 $$ String separator = ""-->Line_8 $$ buffer.append(separator)[ FD ]
Line_6 $$ String separator = ""-->Line_10 $$ separator = File.separator[ FD ]
Line_7 $$ for (int i = headLimit; i < strings.length - tailLimit; i++) -->Line_8 $$ buffer.append(separator)[ CD ]
Line_5 $$ StringBuffer buffer = new StringBuffer()-->Line_12 $$ return buffer.toString()[ FD ]
Line_5 $$ StringBuffer buffer = new StringBuffer()-->Line_9 $$ buffer.append(strings[i])[ FD ]
Line_2 $$ private static String concat(String[] strings, int headLimit, int tailLimit) -->Line_6 $$ String separator = ""[ CD ]
Line_7 $$ for (int i = headLimit; i < strings.length - tailLimit; i++) -->Line_10 $$ separator = File.separator[ CD ]
Line_10 $$ separator = File.separator-->Line_8 $$ buffer.append(separator)[ FD ]
Line_2 $$ private static String concat(String[] strings, int headLimit, int tailLimit) -->Line_3 $$ if (strings.length <= headLimit + tailLimit)[ CD ]
Line_2 $$ private static String concat(String[] strings, int headLimit, int tailLimit) -->Line_7 $$ for (int i = headLimit; i < strings.length - tailLimit; i++) [ CD ]
Line_2 $$ private static String concat(String[] strings, int headLimit, int tailLimit) -->Line_5 $$ StringBuffer buffer = new StringBuffer()[ CD ]
