Line_6 $$ SerializableMethodReplacerCandidate s = (SerializableMethodReplacerCandidate) xbf.getBean("serializableReplacer")-->Line_9 $$ assertEquals(backwards, s.replaceMe(forwards))[ FD ]
Line_2 $$ public void serializableMethodReplacerAndSuperclass() throws Exception -->Line_3 $$ DefaultListableBeanFactory xbf = new DefaultListableBeanFactory()[ CD ]
Line_2 $$ public void serializableMethodReplacerAndSuperclass() throws Exception -->Line_5 $$ reader.loadBeanDefinitions(DELEGATION_OVERRIDES_CONTEXT)[ CD ]
Line_2 $$ public void serializableMethodReplacerAndSuperclass() throws Exception -->Line_8 $$ String backwards = new StringBuffer(forwards).reverse().toString()[ CD ]
Line_8 $$ String backwards = new StringBuffer(forwards).reverse().toString()-->Line_9 $$ assertEquals(backwards, s.replaceMe(forwards))[ FD ]
Line_7 $$ String forwards = "this is forwards"-->Line_9 $$ assertEquals(backwards, s.replaceMe(forwards))[ FD ]
Line_6 $$ SerializableMethodReplacerCandidate s = (SerializableMethodReplacerCandidate) xbf.getBean("serializableReplacer")-->Line_10 $$ assertFalse("Lookup methods and method replacers are not meant to be serializable.", SerializationTestUtils.isSerializable(s))[ FD ]
Line_2 $$ public void serializableMethodReplacerAndSuperclass() throws Exception -->Line_7 $$ String forwards = "this is forwards"[ CD ]
Line_2 $$ public void serializableMethodReplacerAndSuperclass() throws Exception -->Line_10 $$ assertFalse("Lookup methods and method replacers are not meant to be serializable.", SerializationTestUtils.isSerializable(s))[ CD ]
Line_2 $$ public void serializableMethodReplacerAndSuperclass() throws Exception -->Line_4 $$ XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(xbf)[ CD ]
Line_2 $$ public void serializableMethodReplacerAndSuperclass() throws Exception -->Line_9 $$ assertEquals(backwards, s.replaceMe(forwards))[ CD ]
Line_2 $$ public void serializableMethodReplacerAndSuperclass() throws Exception -->Line_6 $$ SerializableMethodReplacerCandidate s = (SerializableMethodReplacerCandidate) xbf.getBean("serializableReplacer")[ CD ]
Line_3 $$ DefaultListableBeanFactory xbf = new DefaultListableBeanFactory()-->Line_6 $$ SerializableMethodReplacerCandidate s = (SerializableMethodReplacerCandidate) xbf.getBean("serializableReplacer")[ FD ]
Line_4 $$ XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(xbf)-->Line_5 $$ reader.loadBeanDefinitions(DELEGATION_OVERRIDES_CONTEXT)[ FD ]
