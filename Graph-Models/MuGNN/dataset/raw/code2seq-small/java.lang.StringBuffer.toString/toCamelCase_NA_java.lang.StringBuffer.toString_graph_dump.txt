Line_2 $$ private String toCamelCase(String name) -->Line_10 $$ return result.toString()[ CD ]
Line_3 $$ StringBuffer result = new StringBuffer()-->Line_9 $$ matcher.appendTail(result)[ FD ]
Line_5 $$ while (matcher.find()) -->Line_6 $$ matcher.appendReplacement(result, "")[ CD ]
Line_5 $$ while (matcher.find()) -->Line_7 $$ result.append(matcher.group(1).toUpperCase())[ CD ]
Line_2 $$ private String toCamelCase(String name) -->Line_4 $$ Matcher matcher = Pattern.compile("-([^-])").matcher(name)[ CD ]
Line_2 $$ private String toCamelCase(String name) -->Line_3 $$ StringBuffer result = new StringBuffer()[ CD ]
Line_2 $$ private String toCamelCase(String name) -->Line_4 $$ Matcher matcher = Pattern.compile("-([^-])").matcher(name)[ FD ]
Line_3 $$ StringBuffer result = new StringBuffer()-->Line_6 $$ matcher.appendReplacement(result, "")[ FD ]
Line_3 $$ StringBuffer result = new StringBuffer()-->Line_7 $$ result.append(matcher.group(1).toUpperCase())[ FD ]
Line_2 $$ private String toCamelCase(String name) -->Line_9 $$ matcher.appendTail(result)[ CD ]
Line_4 $$ Matcher matcher = Pattern.compile("-([^-])").matcher(name)-->Line_9 $$ matcher.appendTail(result)[ FD ]
Line_3 $$ StringBuffer result = new StringBuffer()-->Line_10 $$ return result.toString()[ FD ]
Line_4 $$ Matcher matcher = Pattern.compile("-([^-])").matcher(name)-->Line_7 $$ result.append(matcher.group(1).toUpperCase())[ FD ]
Line_2 $$ private String toCamelCase(String name) -->Line_5 $$ while (matcher.find()) [ CD ]
Line_4 $$ Matcher matcher = Pattern.compile("-([^-])").matcher(name)-->Line_5 $$ while (matcher.find()) [ FD ]
Line_4 $$ Matcher matcher = Pattern.compile("-([^-])").matcher(name)-->Line_6 $$ matcher.appendReplacement(result, "")[ FD ]
