Line_2 $$ public void testSpecifiedThenReject() throws Exception -->Line_4 $$ sb.append("<queuePlacementPolicy>")[ CD ]
Line_2 $$ public void testSpecifiedThenReject() throws Exception -->Line_9 $$ assertEquals("root.specifiedq", policy.assignAppToQueue("specifiedq", "someuser"))[ CD ]
Line_2 $$ public void testSpecifiedThenReject() throws Exception -->Line_8 $$ QueuePlacementPolicy policy = parse(sb.toString())[ CD ]
Line_3 $$ StringBuffer sb = new StringBuffer()-->Line_6 $$ sb.append("  <rule name='reject' />")[ FD ]
Line_3 $$ StringBuffer sb = new StringBuffer()-->Line_8 $$ QueuePlacementPolicy policy = parse(sb.toString())[ FD ]
Line_2 $$ public void testSpecifiedThenReject() throws Exception -->Line_3 $$ StringBuffer sb = new StringBuffer()[ CD ]
Line_3 $$ StringBuffer sb = new StringBuffer()-->Line_4 $$ sb.append("<queuePlacementPolicy>")[ FD ]
Line_2 $$ public void testSpecifiedThenReject() throws Exception -->Line_5 $$ sb.append("  <rule name='specified' />")[ CD ]
Line_3 $$ StringBuffer sb = new StringBuffer()-->Line_7 $$ sb.append("</queuePlacementPolicy>")[ FD ]
Line_2 $$ public void testSpecifiedThenReject() throws Exception -->Line_6 $$ sb.append("  <rule name='reject' />")[ CD ]
Line_2 $$ public void testSpecifiedThenReject() throws Exception -->Line_7 $$ sb.append("</queuePlacementPolicy>")[ CD ]
Line_8 $$ QueuePlacementPolicy policy = parse(sb.toString())-->Line_10 $$ assertEquals(null, policy.assignAppToQueue("default", "someuser"))[ FD ]
Line_8 $$ QueuePlacementPolicy policy = parse(sb.toString())-->Line_9 $$ assertEquals("root.specifiedq", policy.assignAppToQueue("specifiedq", "someuser"))[ FD ]
Line_2 $$ public void testSpecifiedThenReject() throws Exception -->Line_10 $$ assertEquals(null, policy.assignAppToQueue("default", "someuser"))[ CD ]
Line_3 $$ StringBuffer sb = new StringBuffer()-->Line_5 $$ sb.append("  <rule name='specified' />")[ FD ]
