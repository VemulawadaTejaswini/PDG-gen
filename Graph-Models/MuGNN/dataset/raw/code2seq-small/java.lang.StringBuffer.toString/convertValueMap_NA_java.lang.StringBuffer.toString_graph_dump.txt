Line_6 $$ final StringBuffer buffer = new StringBuffer()-->Line_10 $$ buffer.append(usageDescriptor.getKey())[ FD ]
Line_6 $$ final StringBuffer buffer = new StringBuffer()-->Line_11 $$ buffer.append("=")[ FD ]
Line_7 $$ for (UsageDescriptor usageDescriptor : descriptors) -->Line_10 $$ buffer.append(usageDescriptor.getKey())[ FD ]
Line_6 $$ final StringBuffer buffer = new StringBuffer()-->Line_16 $$ if (buffer.length() == 0)[ FD ]
Line_2 $$ public static String convertValueMap(Set<? extends UsageDescriptor> descriptors) -->Line_19 $$ return buffer.toString()[ CD ]
Line_8 $$ int value = usageDescriptor.getValue()-->Line_12 $$ buffer.append(value)[ FD ]
Line_2 $$ public static String convertValueMap(Set<? extends UsageDescriptor> descriptors) -->Line_4 $$ if (descriptors.isEmpty())[ CD ]
Line_6 $$ final StringBuffer buffer = new StringBuffer()-->Line_12 $$ buffer.append(value)[ FD ]
Line_8 $$ int value = usageDescriptor.getValue()-->Line_9 $$ if (value != 0) [ FD ]
Line_6 $$ final StringBuffer buffer = new StringBuffer()-->Line_19 $$ return buffer.toString()[ FD ]
Line_4 $$ if (descriptors.isEmpty())-->Line_5 $$ return ""[ CD ]
Line_6 $$ final StringBuffer buffer = new StringBuffer()-->Line_13 $$ buffer.append(GROUP_VALUE_SEPARATOR)[ FD ]
Line_2 $$ public static String convertValueMap(Set<? extends UsageDescriptor> descriptors) -->Line_6 $$ final StringBuffer buffer = new StringBuffer()[ CD ]
Line_6 $$ final StringBuffer buffer = new StringBuffer()-->Line_18 $$ buffer.deleteCharAt(buffer.length() - 1)[ FD ]
Line_2 $$ public static String convertValueMap(Set<? extends UsageDescriptor> descriptors) -->Line_16 $$ if (buffer.length() == 0)[ CD ]
Line_7 $$ for (UsageDescriptor usageDescriptor : descriptors) -->Line_8 $$ int value = usageDescriptor.getValue()[ FD ]
Line_2 $$ public static String convertValueMap(Set<? extends UsageDescriptor> descriptors) -->Line_18 $$ buffer.deleteCharAt(buffer.length() - 1)[ CD ]
Line_9 $$ if (value != 0) -->Line_12 $$ buffer.append(value)[ CD ]
Line_9 $$ if (value != 0) -->Line_13 $$ buffer.append(GROUP_VALUE_SEPARATOR)[ CD ]
Line_2 $$ public static String convertValueMap(Set<? extends UsageDescriptor> descriptors) -->Line_4 $$ if (descriptors.isEmpty())[ FD ]
Line_9 $$ if (value != 0) -->Line_10 $$ buffer.append(usageDescriptor.getKey())[ CD ]
Line_9 $$ if (value != 0) -->Line_11 $$ buffer.append("=")[ CD ]
Line_16 $$ if (buffer.length() == 0)-->Line_17 $$ return ""[ CD ]
