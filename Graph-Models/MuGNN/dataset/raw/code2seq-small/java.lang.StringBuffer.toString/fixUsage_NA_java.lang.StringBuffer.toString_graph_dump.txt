Line_3 $$ final PsiCodeBlock body = method.getBody()-->Line_32 $$ body.add(delegationStatement)[ FD ]
Line_2 $$ public void fixUsage() throws IncorrectOperationException -->Line_15 $$ delegation.append(delegate + '.' + methodName + '(')[ CD ]
Line_18 $$ boolean first = true-->Line_20 $$ if (!first) [ FD ]
Line_20 $$ if (!first) -->Line_21 $$ delegation.append(',')[ CD ]
Line_2 $$ public void fixUsage() throws IncorrectOperationException -->Line_3 $$ final PsiCodeBlock body = method.getBody()[ CD ]
Line_2 $$ public void fixUsage() throws IncorrectOperationException -->Line_10 $$ final PsiType returnType = method.getReturnType()[ CD ]
Line_18 $$ boolean first = true-->Line_23 $$ first = false[ FD ]
Line_6 $$ for (PsiStatement statement : statements) -->Line_7 $$ statement.delete()[ FD ]
Line_2 $$ public void fixUsage() throws IncorrectOperationException -->Line_29 $$ final PsiElementFactory factory = JavaPsiFacade.getInstance(manager.getProject()).getElementFactory()[ CD ]
Line_2 $$ public void fixUsage() throws IncorrectOperationException -->Line_31 $$ final PsiStatement delegationStatement = factory.createStatementFromText(delegationText, body)[ CD ]
Line_2 $$ public void fixUsage() throws IncorrectOperationException -->Line_11 $$ if (!PsiType.VOID.equals(returnType)) [ CD ]
Line_2 $$ public void fixUsage() throws IncorrectOperationException -->Line_28 $$ final PsiManager manager = method.getManager()[ CD ]
Line_31 $$ final PsiStatement delegationStatement = factory.createStatementFromText(delegationText, body)-->Line_32 $$ body.add(delegationStatement)[ FD ]
Line_9 $$ final StringBuffer delegation = new StringBuffer()-->Line_25 $$ delegation.append(parameterName)[ FD ]
Line_24 $$ final String parameterName = parameter.getName()-->Line_25 $$ delegation.append(parameterName)[ FD ]
Line_9 $$ final StringBuffer delegation = new StringBuffer()-->Line_30 $$ final String delegationText = delegation.toString()[ FD ]
Line_11 $$ if (!PsiType.VOID.equals(returnType)) -->Line_12 $$ delegation.append("return ")[ CD ]
Line_9 $$ final StringBuffer delegation = new StringBuffer()-->Line_12 $$ delegation.append("return ")[ FD ]
Line_19 $$ for (PsiParameter parameter : parameters) -->Line_24 $$ final String parameterName = parameter.getName()[ FD ]
Line_3 $$ final PsiCodeBlock body = method.getBody()-->Line_31 $$ final PsiStatement delegationStatement = factory.createStatementFromText(delegationText, body)[ FD ]
Line_2 $$ public void fixUsage() throws IncorrectOperationException -->Line_17 $$ final PsiParameter[] parameters = parameterList.getParameters()[ CD ]
Line_10 $$ final PsiType returnType = method.getReturnType()-->Line_11 $$ if (!PsiType.VOID.equals(returnType)) [ FD ]
Line_16 $$ final PsiParameterList parameterList = method.getParameterList()-->Line_17 $$ final PsiParameter[] parameters = parameterList.getParameters()[ FD ]
Line_9 $$ final StringBuffer delegation = new StringBuffer()-->Line_21 $$ delegation.append(',')[ FD ]
Line_2 $$ public void fixUsage() throws IncorrectOperationException -->Line_27 $$ delegation.append(");")[ CD ]
Line_2 $$ public void fixUsage() throws IncorrectOperationException -->Line_30 $$ final String delegationText = delegation.toString()[ CD ]
Line_2 $$ public void fixUsage() throws IncorrectOperationException -->Line_5 $$ final PsiStatement[] statements = body.getStatements()[ CD ]
Line_2 $$ public void fixUsage() throws IncorrectOperationException -->Line_14 $$ final String methodName = method.getName()[ CD ]
Line_29 $$ final PsiElementFactory factory = JavaPsiFacade.getInstance(manager.getProject()).getElementFactory()-->Line_31 $$ final PsiStatement delegationStatement = factory.createStatementFromText(delegationText, body)[ FD ]
Line_28 $$ final PsiManager manager = method.getManager()-->Line_29 $$ final PsiElementFactory factory = JavaPsiFacade.getInstance(manager.getProject()).getElementFactory()[ FD ]
Line_3 $$ final PsiCodeBlock body = method.getBody()-->Line_5 $$ final PsiStatement[] statements = body.getStatements()[ FD ]
Line_9 $$ final StringBuffer delegation = new StringBuffer()-->Line_27 $$ delegation.append(");")[ FD ]
Line_2 $$ public void fixUsage() throws IncorrectOperationException -->Line_16 $$ final PsiParameterList parameterList = method.getParameterList()[ CD ]
Line_2 $$ public void fixUsage() throws IncorrectOperationException -->Line_18 $$ boolean first = true[ CD ]
Line_2 $$ public void fixUsage() throws IncorrectOperationException -->Line_32 $$ body.add(delegationStatement)[ CD ]
Line_9 $$ final StringBuffer delegation = new StringBuffer()-->Line_15 $$ delegation.append(delegate + '.' + methodName + '(')[ FD ]
Line_30 $$ final String delegationText = delegation.toString()-->Line_31 $$ final PsiStatement delegationStatement = factory.createStatementFromText(delegationText, body)[ FD ]
Line_2 $$ public void fixUsage() throws IncorrectOperationException -->Line_9 $$ final StringBuffer delegation = new StringBuffer()[ CD ]
