Line_7 $$ for (int i = 0; i < inputBlock.getPositionCount(); i++) -->Line_11 $$ for (int i = 0; i < outputBlock.getPositionCount(); i += 2) [ FD ]
Line_6 $$ Block inputBlock = inputBlockBuilder.build()-->Line_7 $$ for (int i = 0; i < inputBlock.getPositionCount(); i++) [ FD ]
Line_4 $$ TypedHistogram typedHistogram = new TypedHistogram(BIGINT, 1000)-->Line_8 $$ typedHistogram.add(i, inputBlock, 1)[ FD ]
Line_2 $$ public void testMassive() throws Exception -->Line_5 $$ IntStream.range(1, 2000).flatMap( i -> IntStream.iterate(i, IntUnaryOperator.identity()).limit(i)).forEach( j -> BIGINT.writeLong(inputBlockBuilder, j))[ CD ]
Line_7 $$ for (int i = 0; i < inputBlock.getPositionCount(); i++) -->Line_12 $$ assertEquals(BIGINT.getLong(outputBlock, i + 1), BIGINT.getLong(outputBlock, i))[ FD ]
Line_2 $$ public void testMassive() throws Exception -->Line_10 $$ Block outputBlock = typedHistogram.serialize()[ CD ]
Line_10 $$ Block outputBlock = typedHistogram.serialize()-->Line_11 $$ for (int i = 0; i < outputBlock.getPositionCount(); i += 2) [ FD ]
Line_11 $$ for (int i = 0; i < outputBlock.getPositionCount(); i += 2) -->Line_12 $$ assertEquals(BIGINT.getLong(outputBlock, i + 1), BIGINT.getLong(outputBlock, i))[ FD ]
Line_10 $$ Block outputBlock = typedHistogram.serialize()-->Line_12 $$ assertEquals(BIGINT.getLong(outputBlock, i + 1), BIGINT.getLong(outputBlock, i))[ FD ]
Line_2 $$ public void testMassive() throws Exception -->Line_6 $$ Block inputBlock = inputBlockBuilder.build()[ CD ]
Line_6 $$ Block inputBlock = inputBlockBuilder.build()-->Line_8 $$ typedHistogram.add(i, inputBlock, 1)[ FD ]
Line_7 $$ for (int i = 0; i < inputBlock.getPositionCount(); i++) -->Line_8 $$ typedHistogram.add(i, inputBlock, 1)[ CD ]
Line_2 $$ public void testMassive() throws Exception -->Line_4 $$ TypedHistogram typedHistogram = new TypedHistogram(BIGINT, 1000)[ CD ]
Line_3 $$ BlockBuilder inputBlockBuilder = BIGINT.createBlockBuilder(new BlockBuilderStatus(), 5000)-->Line_6 $$ Block inputBlock = inputBlockBuilder.build()[ FD ]
Line_7 $$ for (int i = 0; i < inputBlock.getPositionCount(); i++) -->Line_8 $$ typedHistogram.add(i, inputBlock, 1)[ FD ]
Line_4 $$ TypedHistogram typedHistogram = new TypedHistogram(BIGINT, 1000)-->Line_10 $$ Block outputBlock = typedHistogram.serialize()[ FD ]
Line_2 $$ public void testMassive() throws Exception -->Line_11 $$ for (int i = 0; i < outputBlock.getPositionCount(); i += 2) [ CD ]
Line_11 $$ for (int i = 0; i < outputBlock.getPositionCount(); i += 2) -->Line_12 $$ assertEquals(BIGINT.getLong(outputBlock, i + 1), BIGINT.getLong(outputBlock, i))[ CD ]
Line_2 $$ public void testMassive() throws Exception -->Line_3 $$ BlockBuilder inputBlockBuilder = BIGINT.createBlockBuilder(new BlockBuilderStatus(), 5000)[ CD ]
Line_3 $$ BlockBuilder inputBlockBuilder = BIGINT.createBlockBuilder(new BlockBuilderStatus(), 5000)-->Line_5 $$ BIGINT.writeLong(inputBlockBuilder, j)[ FD ]
Line_2 $$ public void testMassive() throws Exception -->Line_7 $$ for (int i = 0; i < inputBlock.getPositionCount(); i++) [ CD ]
