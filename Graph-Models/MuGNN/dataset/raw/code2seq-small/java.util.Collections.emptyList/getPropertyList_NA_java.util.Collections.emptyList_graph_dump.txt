Line_8 $$ final SvnRepositoryContentRevision svnRevision = (SvnRepositoryContentRevision) contentRevision-->Line_9 $$ target = SvnTarget.fromURL(SVNURL.parseURIEncoded(svnRevision.getFullPath()), revision)[ FD ]
Line_9 $$ target = SvnTarget.fromURL(SVNURL.parseURIEncoded(svnRevision.getFullPath()), revision)-->Line_12 $$ target = SvnTarget.fromFile(ioFile, revision)[ FD ]
Line_2 $$ private static List<PropertyData> getPropertyList(@NotNull SvnVcs vcs, @Nullable final ContentRevision contentRevision, @Nullable final SVNRevision revision) throws SVNException, VcsException -->Line_3 $$ if (contentRevision == null) [ CD ]
Line_12 $$ target = SvnTarget.fromFile(ioFile, revision)-->Line_14 $$ return getPropertyList(vcs, target, revision)[ FD ]
Line_7 $$ if (contentRevision instanceof SvnRepositoryContentRevision) -->Line_12 $$ target = SvnTarget.fromFile(ioFile, revision)[ CD ]
Line_2 $$ private static List<PropertyData> getPropertyList(@NotNull SvnVcs vcs, @Nullable final ContentRevision contentRevision, @Nullable final SVNRevision revision) throws SVNException, VcsException -->Line_3 $$ if (contentRevision == null) [ FD ]
Line_2 $$ private static List<PropertyData> getPropertyList(@NotNull SvnVcs vcs, @Nullable final ContentRevision contentRevision, @Nullable final SVNRevision revision) throws SVNException, VcsException -->Line_14 $$ return getPropertyList(vcs, target, revision)[ CD ]
Line_2 $$ private static List<PropertyData> getPropertyList(@NotNull SvnVcs vcs, @Nullable final ContentRevision contentRevision, @Nullable final SVNRevision revision) throws SVNException, VcsException -->Line_6 $$ SvnTarget target[ CD ]
Line_2 $$ private static List<PropertyData> getPropertyList(@NotNull SvnVcs vcs, @Nullable final ContentRevision contentRevision, @Nullable final SVNRevision revision) throws SVNException, VcsException -->Line_7 $$ if (contentRevision instanceof SvnRepositoryContentRevision) [ FD ]
Line_6 $$ SvnTarget target-->Line_12 $$ target = SvnTarget.fromFile(ioFile, revision)[ FD ]
Line_11 $$ final File ioFile = contentRevision.getFile().getIOFile()-->Line_12 $$ target = SvnTarget.fromFile(ioFile, revision)[ FD ]
Line_7 $$ if (contentRevision instanceof SvnRepositoryContentRevision) -->Line_9 $$ target = SvnTarget.fromURL(SVNURL.parseURIEncoded(svnRevision.getFullPath()), revision)[ CD ]
Line_9 $$ target = SvnTarget.fromURL(SVNURL.parseURIEncoded(svnRevision.getFullPath()), revision)-->Line_14 $$ return getPropertyList(vcs, target, revision)[ FD ]
Line_2 $$ private static List<PropertyData> getPropertyList(@NotNull SvnVcs vcs, @Nullable final ContentRevision contentRevision, @Nullable final SVNRevision revision) throws SVNException, VcsException -->Line_9 $$ target = SvnTarget.fromURL(SVNURL.parseURIEncoded(svnRevision.getFullPath()), revision)[ FD ]
Line_2 $$ private static List<PropertyData> getPropertyList(@NotNull SvnVcs vcs, @Nullable final ContentRevision contentRevision, @Nullable final SVNRevision revision) throws SVNException, VcsException -->Line_14 $$ return getPropertyList(vcs, target, revision)[ FD ]
Line_3 $$ if (contentRevision == null) -->Line_4 $$ return Collections.emptyList()[ CD ]
Line_6 $$ SvnTarget target-->Line_9 $$ target = SvnTarget.fromURL(SVNURL.parseURIEncoded(svnRevision.getFullPath()), revision)[ FD ]
Line_7 $$ if (contentRevision instanceof SvnRepositoryContentRevision) -->Line_8 $$ final SvnRepositoryContentRevision svnRevision = (SvnRepositoryContentRevision) contentRevision[ CD ]
Line_2 $$ private static List<PropertyData> getPropertyList(@NotNull SvnVcs vcs, @Nullable final ContentRevision contentRevision, @Nullable final SVNRevision revision) throws SVNException, VcsException -->Line_7 $$ if (contentRevision instanceof SvnRepositoryContentRevision) [ CD ]
Line_6 $$ SvnTarget target-->Line_14 $$ return getPropertyList(vcs, target, revision)[ FD ]
Line_7 $$ if (contentRevision instanceof SvnRepositoryContentRevision) -->Line_11 $$ final File ioFile = contentRevision.getFile().getIOFile()[ CD ]
Line_2 $$ private static List<PropertyData> getPropertyList(@NotNull SvnVcs vcs, @Nullable final ContentRevision contentRevision, @Nullable final SVNRevision revision) throws SVNException, VcsException -->Line_12 $$ target = SvnTarget.fromFile(ioFile, revision)[ FD ]
Line_2 $$ private static List<PropertyData> getPropertyList(@NotNull SvnVcs vcs, @Nullable final ContentRevision contentRevision, @Nullable final SVNRevision revision) throws SVNException, VcsException -->Line_11 $$ final File ioFile = contentRevision.getFile().getIOFile()[ FD ]
