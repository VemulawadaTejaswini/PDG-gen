Line_3 $$ StringBuilder builder = new StringBuilder(tag.getLocalName())-->Line_11 $$ builder.append('.')[ FD ]
Line_10 $$ if (!classValues.isEmpty()) -->Line_11 $$ builder.append('.')[ CD ]
Line_10 $$ if (!classValues.isEmpty()) -->Line_12 $$ StringUtil.join(classValues, ".", builder)[ CD ]
Line_2 $$ public static String getTagPresentation(@NotNull final XmlTag tag) -->Line_8 $$ String classValue = tag.getAttributeValue(HtmlUtil.CLASS_ATTRIBUTE_NAME)[ FD ]
Line_2 $$ public static String getTagPresentation(@NotNull final XmlTag tag) -->Line_3 $$ StringBuilder builder = new StringBuilder(tag.getLocalName())[ FD ]
Line_8 $$ String classValue = tag.getAttributeValue(HtmlUtil.CLASS_ATTRIBUTE_NAME)-->Line_9 $$ List<String> classValues = classValue == null ? Collections.<String>emptyList() : StringUtil.split(classValue, " ")[ FD ]
Line_2 $$ public static String getTagPresentation(@NotNull final XmlTag tag) -->Line_14 $$ return builder.toString()[ CD ]
Line_9 $$ List<String> classValues = classValue == null ? Collections.<String>emptyList() : StringUtil.split(classValue, " ")-->Line_10 $$ if (!classValues.isEmpty()) [ FD ]
Line_5 $$ if (id != null) -->Line_6 $$ builder.append('#').append(id)[ CD ]
Line_4 $$ String id = XmlTagTreeElement.toCanonicalForm(tag.getAttributeValue(HtmlUtil.ID_ATTRIBUTE_NAME))-->Line_6 $$ builder.append('#').append(id)[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder(tag.getLocalName())-->Line_14 $$ return builder.toString()[ FD ]
Line_2 $$ public static String getTagPresentation(@NotNull final XmlTag tag) -->Line_5 $$ if (id != null) [ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder(tag.getLocalName())-->Line_12 $$ StringUtil.join(classValues, ".", builder)[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder(tag.getLocalName())-->Line_6 $$ builder.append('#').append(id)[ FD ]
Line_2 $$ public static String getTagPresentation(@NotNull final XmlTag tag) -->Line_4 $$ String id = XmlTagTreeElement.toCanonicalForm(tag.getAttributeValue(HtmlUtil.ID_ATTRIBUTE_NAME))[ FD ]
Line_2 $$ public static String getTagPresentation(@NotNull final XmlTag tag) -->Line_9 $$ List<String> classValues = classValue == null ? Collections.<String>emptyList() : StringUtil.split(classValue, " ")[ CD ]
Line_4 $$ String id = XmlTagTreeElement.toCanonicalForm(tag.getAttributeValue(HtmlUtil.ID_ATTRIBUTE_NAME))-->Line_5 $$ if (id != null) [ FD ]
Line_2 $$ public static String getTagPresentation(@NotNull final XmlTag tag) -->Line_10 $$ if (!classValues.isEmpty()) [ CD ]
Line_9 $$ List<String> classValues = classValue == null ? Collections.<String>emptyList() : StringUtil.split(classValue, " ")-->Line_12 $$ StringUtil.join(classValues, ".", builder)[ FD ]
Line_2 $$ public static String getTagPresentation(@NotNull final XmlTag tag) -->Line_3 $$ StringBuilder builder = new StringBuilder(tag.getLocalName())[ CD ]
Line_2 $$ public static String getTagPresentation(@NotNull final XmlTag tag) -->Line_4 $$ String id = XmlTagTreeElement.toCanonicalForm(tag.getAttributeValue(HtmlUtil.ID_ATTRIBUTE_NAME))[ CD ]
Line_2 $$ public static String getTagPresentation(@NotNull final XmlTag tag) -->Line_8 $$ String classValue = tag.getAttributeValue(HtmlUtil.CLASS_ATTRIBUTE_NAME)[ CD ]
