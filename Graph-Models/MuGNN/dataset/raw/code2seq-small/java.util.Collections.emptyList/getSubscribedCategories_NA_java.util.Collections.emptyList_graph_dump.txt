Line_2 $$ public List<MBCategory> getSubscribedCategories(long groupId, long userId, int start, int end) -->Line_8 $$ return mbCategoryFinder.filterFindC_ByS_G_U_P(groupId, userId, categoryIds, queryDefinition)[ CD ]
Line_2 $$ public List<MBCategory> getSubscribedCategories(long groupId, long userId, int start, int end) -->Line_7 $$ QueryDefinition<MBCategory> queryDefinition = new QueryDefinition(WorkflowConstants.STATUS_ANY, start, end, null)[ CD ]
Line_3 $$ long[] categoryIds = getCategoryIds(groupId, MBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID)-->Line_8 $$ return mbCategoryFinder.filterFindC_ByS_G_U_P(groupId, userId, categoryIds, queryDefinition)[ FD ]
Line_2 $$ public List<MBCategory> getSubscribedCategories(long groupId, long userId, int start, int end) -->Line_3 $$ long[] categoryIds = getCategoryIds(groupId, MBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID)[ CD ]
Line_4 $$ if (categoryIds.length == 0) -->Line_5 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public List<MBCategory> getSubscribedCategories(long groupId, long userId, int start, int end) -->Line_4 $$ if (categoryIds.length == 0) [ CD ]
Line_7 $$ QueryDefinition<MBCategory> queryDefinition = new QueryDefinition(WorkflowConstants.STATUS_ANY, start, end, null)-->Line_8 $$ return mbCategoryFinder.filterFindC_ByS_G_U_P(groupId, userId, categoryIds, queryDefinition)[ FD ]
Line_2 $$ public List<MBCategory> getSubscribedCategories(long groupId, long userId, int start, int end) -->Line_8 $$ return mbCategoryFinder.filterFindC_ByS_G_U_P(groupId, userId, categoryIds, queryDefinition)[ FD ]
Line_2 $$ public List<MBCategory> getSubscribedCategories(long groupId, long userId, int start, int end) -->Line_3 $$ long[] categoryIds = getCategoryIds(groupId, MBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID)[ FD ]
