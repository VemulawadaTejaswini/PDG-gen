Line_103 $$ ArgumentMatcher<ContainerEvent> matchesContainerLoc = new ArgumentMatcher<ContainerEvent>() -->Line_106 $$ return evt.getType() == ContainerEventType.RESOURCE_LOCALIZED && c.getContainerId() == evt.getContainerID()[ CD ]
Line_20 $$ DeletionService delService = spy(delServiceReal)-->Line_21 $$ delService.init(new Configuration())[ FD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_12 $$ EventHandler<ApplicationEvent> applicationBus = mock(EventHandler.class)[ CD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_9 $$ DrainDispatcher dispatcher = new DrainDispatcher()[ CD ]
Line_3 $$ List<Path> localDirs = new ArrayList<Path>()-->Line_6 $$ sDirs[0] = localDirs.get(0).toString()[ FD ]
Line_9 $$ DrainDispatcher dispatcher = new DrainDispatcher()-->Line_13 $$ dispatcher.register(ApplicationEventType.class, applicationBus)[ FD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_4 $$ String[] sDirs = new String[1][ CD ]
Line_12 $$ EventHandler<ApplicationEvent> applicationBus = mock(EventHandler.class)-->Line_42 $$ verify(applicationBus).handle(argThat(matchesAppInit))[ FD ]
Line_12 $$ EventHandler<ApplicationEvent> applicationBus = mock(EventHandler.class)-->Line_13 $$ dispatcher.register(ApplicationEventType.class, applicationBus)[ FD ]
Line_31 $$ final ApplicationId appId = BuilderUtils.newApplicationId(314159265358979L, 3)-->Line_33 $$ when(app.getAppId()).thenReturn(appId)[ FD ]
Line_37 $$ ApplicationEvent evt = (ApplicationEvent) o-->Line_38 $$ return evt.getType() == ApplicationEventType.APPLICATION_INITED && appId == evt.getApplicationID()[ FD ]
Line_103 $$ ArgumentMatcher<ContainerEvent> matchesContainerLoc = new ArgumentMatcher<ContainerEvent>() -->Line_105 $$ ContainerEvent evt = (ContainerEvent) o[ CD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_17 $$ LocalDirsHandlerService dirsHandler = new LocalDirsHandlerService()[ CD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_10 $$ dispatcher.init(conf)[ CD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_25 $$ doReturn(mockServer).when(spyService).createServer()[ CD ]
Line_24 $$ ResourceLocalizationService spyService = spy(rawService)-->Line_25 $$ doReturn(mockServer).when(spyService).createServer()[ FD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_8 $$ conf.set(YarnConfiguration.NM_LOCAL_CACHE_MAX_FILES_PER_DIRECTORY, "37")[ CD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_21 $$ delService.init(new Configuration())[ CD ]
Line_24 $$ ResourceLocalizationService spyService = spy(rawService)-->Line_29 $$ spyService.start()[ FD ]
Line_30 $$ final Application app = mock(Application.class)-->Line_32 $$ when(app.getUser()).thenReturn("user0")[ FD ]
Line_31 $$ final ApplicationId appId = BuilderUtils.newApplicationId(314159265358979L, 3)-->Line_65 $$ String appStr = ConverterUtils.toString(appId)[ FD ]
Line_24 $$ ResourceLocalizationService spyService = spy(rawService)-->Line_91 $$ response = spyService.heartbeat(stat)[ FD ]
Line_9 $$ DrainDispatcher dispatcher = new DrainDispatcher()-->Line_10 $$ dispatcher.init(conf)[ FD ]
Line_20 $$ DeletionService delService = spy(delServiceReal)-->Line_114 $$ delService.stop()[ FD ]
Line_35 $$ ArgumentMatcher<ApplicationEvent> matchesAppInit = new ArgumentMatcher<ApplicationEvent>() -->Line_42 $$ verify(applicationBus).handle(argThat(matchesAppInit))[ FD ]
Line_105 $$ ContainerEvent evt = (ContainerEvent) o-->Line_106 $$ return evt.getType() == ContainerEventType.RESOURCE_LOCALIZED && c.getContainerId() == evt.getContainerID()[ FD ]
Line_4 $$ String[] sDirs = new String[1]-->Line_7 $$ conf.setStrings(YarnConfiguration.NM_LOCAL_DIRS, sDirs)[ FD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_22 $$ delService.start()[ CD ]
Line_30 $$ final Application app = mock(Application.class)-->Line_33 $$ when(app.getAppId()).thenReturn(appId)[ FD ]
Line_16 $$ ContainerExecutor exec = mock(ContainerExecutor.class)-->Line_68 $$ verify(exec).startLocalizer(tokenPathCaptor.capture(), isA(InetSocketAddress.class), eq("user0"), eq(appStr), eq(ctnrStr), isA(List.class), isA(List.class))[ FD ]
Line_24 $$ ResourceLocalizationService spyService = spy(rawService)-->Line_28 $$ spyService.init(conf)[ FD ]
Line_20 $$ DeletionService delService = spy(delServiceReal)-->Line_22 $$ delService.start()[ FD ]
Line_37 $$ ApplicationEvent evt = (ApplicationEvent) o-->Line_106 $$ return evt.getType() == ContainerEventType.RESOURCE_LOCALIZED && c.getContainerId() == evt.getContainerID()[ FD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_24 $$ ResourceLocalizationService spyService = spy(rawService)[ CD ]
Line_24 $$ ResourceLocalizationService spyService = spy(rawService)-->Line_97 $$ response = spyService.heartbeat(stat)[ FD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_18 $$ dirsHandler.init(conf)[ CD ]
Line_9 $$ DrainDispatcher dispatcher = new DrainDispatcher()-->Line_15 $$ dispatcher.register(ContainerEventType.class, containerBus)[ FD ]
Line_35 $$ ArgumentMatcher<ApplicationEvent> matchesAppInit = new ArgumentMatcher<ApplicationEvent>() -->Line_38 $$ return evt.getType() == ApplicationEventType.APPLICATION_INITED && appId == evt.getApplicationID()[ CD ]
Line_24 $$ ResourceLocalizationService spyService = spy(rawService)-->Line_85 $$ LocalizerHeartbeatResponse response = spyService.heartbeat(stat)[ FD ]
Line_24 $$ ResourceLocalizationService spyService = spy(rawService)-->Line_100 $$ response = spyService.heartbeat(stat)[ FD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_11 $$ dispatcher.start()[ CD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_3 $$ List<Path> localDirs = new ArrayList<Path>()[ CD ]
Line_24 $$ ResourceLocalizationService spyService = spy(rawService)-->Line_62 $$ spyService.handle(new ContainerLocalizationRequestEvent(c, rsrcs))[ FD ]
Line_24 $$ ResourceLocalizationService spyService = spy(rawService)-->Line_112 $$ spyService.stop()[ FD ]
Line_9 $$ DrainDispatcher dispatcher = new DrainDispatcher()-->Line_102 $$ dispatcher.await()[ FD ]
Line_14 $$ EventHandler<ContainerEvent> containerBus = mock(EventHandler.class)-->Line_15 $$ dispatcher.register(ContainerEventType.class, containerBus)[ FD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_13 $$ dispatcher.register(ApplicationEventType.class, applicationBus)[ CD ]
Line_23 $$ ResourceLocalizationService rawService = new ResourceLocalizationService(dispatcher, exec, delService, dirsHandler, new NMNullStateStoreService())-->Line_24 $$ ResourceLocalizationService spyService = spy(rawService)[ FD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_23 $$ ResourceLocalizationService rawService = new ResourceLocalizationService(dispatcher, exec, delService, dirsHandler, new NMNullStateStoreService())[ CD ]
Line_17 $$ LocalDirsHandlerService dirsHandler = new LocalDirsHandlerService()-->Line_18 $$ dirsHandler.init(conf)[ FD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_20 $$ DeletionService delService = spy(delServiceReal)[ CD ]
Line_9 $$ DrainDispatcher dispatcher = new DrainDispatcher()-->Line_64 $$ dispatcher.await()[ FD ]
Line_9 $$ DrainDispatcher dispatcher = new DrainDispatcher()-->Line_41 $$ dispatcher.await()[ FD ]
Line_14 $$ EventHandler<ContainerEvent> containerBus = mock(EventHandler.class)-->Line_109 $$ verify(containerBus, times(2)).handle(argThat(matchesContainerLoc))[ FD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_15 $$ dispatcher.register(ContainerEventType.class, containerBus)[ CD ]
Line_3 $$ List<Path> localDirs = new ArrayList<Path>()-->Line_5 $$ localDirs.add(lfs.makeQualified(new Path(basedir, 0 + "")))[ FD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_19 $$ DeletionService delServiceReal = new DeletionService(exec)[ CD ]
Line_9 $$ DrainDispatcher dispatcher = new DrainDispatcher()-->Line_11 $$ dispatcher.start()[ FD ]
Line_24 $$ ResourceLocalizationService spyService = spy(rawService)-->Line_26 $$ doReturn(lfs).when(spyService).getLocalFileContext(isA(Configuration.class))[ FD ]
Line_31 $$ final ApplicationId appId = BuilderUtils.newApplicationId(314159265358979L, 3)-->Line_47 $$ final Container c = getMockContainer(appId, 42, "user0")[ FD ]
Line_20 $$ DeletionService delService = spy(delServiceReal)-->Line_110 $$ verify(delService).delete((String) isNull(), eq(localizationTokenPath))[ FD ]
Line_9 $$ DrainDispatcher dispatcher = new DrainDispatcher()-->Line_113 $$ dispatcher.stop()[ FD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_14 $$ EventHandler<ContainerEvent> containerBus = mock(EventHandler.class)[ CD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_26 $$ doReturn(lfs).when(spyService).getLocalFileContext(isA(Configuration.class))[ CD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_16 $$ ContainerExecutor exec = mock(ContainerExecutor.class)[ CD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_5 $$ localDirs.add(lfs.makeQualified(new Path(basedir, 0 + "")))[ CD ]
Line_52 $$ do -->Line_53 $$ resource2 = getPrivateMockedResource(r)[ CD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_7 $$ conf.setStrings(YarnConfiguration.NM_LOCAL_DIRS, sDirs)[ CD ]
Line_35 $$ ArgumentMatcher<ApplicationEvent> matchesAppInit = new ArgumentMatcher<ApplicationEvent>() -->Line_37 $$ ApplicationEvent evt = (ApplicationEvent) o[ CD ]
Line_24 $$ ResourceLocalizationService spyService = spy(rawService)-->Line_34 $$ spyService.handle(new ApplicationLocalizationEvent(LocalizationEventType.INIT_APPLICATION_RESOURCES, app))[ FD ]
Line_2 $$ public void testLocalizationHeartbeat() throws Exception -->Line_6 $$ sDirs[0] = localDirs.get(0).toString()[ CD ]
Line_19 $$ DeletionService delServiceReal = new DeletionService(exec)-->Line_20 $$ DeletionService delService = spy(delServiceReal)[ FD ]
