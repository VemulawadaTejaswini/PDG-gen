Line_10 $$ int now2 = now1 + 1-->Line_11 $$ Row.Builder updateBuilder = createBuilder(c1, now2, BB1, BB1, BB1)[ FD ]
Line_12 $$ int now3 = now2 + 1-->Line_13 $$ Row.Deletion expectedDeletion = new Row.Deletion(new DeletionTime(secondToTs(now3), now3), false)[ FD ]
Line_13 $$ Row.Deletion expectedDeletion = new Row.Deletion(new DeletionTime(secondToTs(now3), now3), false)-->Line_17 $$ Assert.assertEquals(expectedDeletion, builder.deletionTime)[ FD ]
Line_11 $$ Row.Builder updateBuilder = createBuilder(c1, now2, BB1, BB1, BB1)-->Line_14 $$ updateBuilder.addRowDeletion(expectedDeletion)[ FD ]
Line_13 $$ Row.Deletion expectedDeletion = new Row.Deletion(new DeletionTime(secondToTs(now3), now3), false)-->Line_14 $$ updateBuilder.addRowDeletion(expectedDeletion)[ FD ]
Line_9 $$ Row.Builder existingBuilder = createBuilder(c1, now1, null, null, null)-->Line_16 $$ Rows.merge(existingBuilder.build(), updateBuilder.build(), builder, now3 + 1)[ FD ]
Line_8 $$ int now1 = FBUtilities.nowInSeconds()-->Line_9 $$ Row.Builder existingBuilder = createBuilder(c1, now1, null, null, null)[ FD ]
Line_15 $$ RowBuilder builder = new RowBuilder()-->Line_16 $$ Rows.merge(existingBuilder.build(), updateBuilder.build(), builder, now3 + 1)[ FD ]
Line_11 $$ Row.Builder updateBuilder = createBuilder(c1, now2, BB1, BB1, BB1)-->Line_16 $$ Rows.merge(existingBuilder.build(), updateBuilder.build(), builder, now3 + 1)[ FD ]
