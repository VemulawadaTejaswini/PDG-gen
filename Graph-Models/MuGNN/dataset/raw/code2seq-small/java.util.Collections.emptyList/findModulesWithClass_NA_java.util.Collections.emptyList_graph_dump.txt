Line_19 $$ for (PsiClass aClass : possibleClasses) -->Line_20 $$ VirtualFile classFile = aClass.getContainingFile().getVirtualFile()[ FD ]
Line_20 $$ VirtualFile classFile = aClass.getContainingFile().getVirtualFile()-->Line_21 $$ for (OrderEntry orderEntry : fileIndex.getOrderEntriesForFile(classFile)) [ FD ]
Line_17 $$ Set<Module> relevantModules = ContainerUtil.newLinkedHashSet()-->Line_22 $$ relevantModules.add(orderEntry.getOwnerModule())[ FD ]
Line_18 $$ ProjectFileIndex fileIndex = ProjectRootManager.getInstance(project).getFileIndex()-->Line_21 $$ for (OrderEntry orderEntry : fileIndex.getOrderEntriesForFile(classFile)) [ FD ]
Line_12 $$ JavaPsiFacade facade = JavaPsiFacade.getInstance(project)-->Line_13 $$ PsiClass[] possibleClasses = facade.findClasses(qualifiedName, allScope)[ FD ]
Line_11 $$ GlobalSearchScope allScope = GlobalSearchScope.allScope(project)-->Line_13 $$ PsiClass[] possibleClasses = facade.findClasses(qualifiedName, allScope)[ FD ]
Line_14 $$ if (possibleClasses.length == 0) -->Line_15 $$ return Collections.emptyList()[ CD ]
Line_21 $$ for (OrderEntry orderEntry : fileIndex.getOrderEntriesForFile(classFile)) -->Line_22 $$ relevantModules.add(orderEntry.getOwnerModule())[ FD ]
