Line_9 $$ try (LifecycleTransaction txn = tracker.tryModify(readers.get(0), OperationType.COMPACTION)) -->Line_12 $$ Assert.assertEquals(1, txn.originals().size())[ FD ]
Line_5 $$ Tracker tracker = new Tracker(cfs, false)-->Line_15 $$ try (LifecycleTransaction txn = tracker.tryModify(Collections.<SSTableReader>emptyList(), OperationType.COMPACTION)) [ FD ]
Line_9 $$ try (LifecycleTransaction txn = tracker.tryModify(readers.get(0), OperationType.COMPACTION)) -->Line_17 $$ Assert.assertEquals(0, txn.originals().size())[ FD ]
Line_6 $$ List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, true, cfs), MockSchema.sstable(1, cfs), MockSchema.sstable(2, cfs))-->Line_19 $$ readers.get(0).selfRef().release()[ FD ]
Line_5 $$ Tracker tracker = new Tracker(cfs, false)-->Line_8 $$ Assert.assertNull(tracker.tryModify(ImmutableList.of(MockSchema.sstable(0, cfs)), OperationType.COMPACTION))[ FD ]
Line_6 $$ List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, true, cfs), MockSchema.sstable(1, cfs), MockSchema.sstable(2, cfs))-->Line_13 $$ Assert.assertTrue(txn.originals().contains(readers.get(0)))[ FD ]
Line_9 $$ try (LifecycleTransaction txn = tracker.tryModify(readers.get(0), OperationType.COMPACTION)) -->Line_10 $$ Assert.assertNotNull(txn)[ FD ]
Line_6 $$ List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, true, cfs), MockSchema.sstable(1, cfs), MockSchema.sstable(2, cfs))-->Line_9 $$ try (LifecycleTransaction txn = tracker.tryModify(readers.get(0), OperationType.COMPACTION)) [ FD ]
Line_4 $$ ColumnFamilyStore cfs = MockSchema.newCFS()-->Line_6 $$ List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, true, cfs), MockSchema.sstable(1, cfs), MockSchema.sstable(2, cfs))[ FD ]
Line_5 $$ Tracker tracker = new Tracker(cfs, false)-->Line_7 $$ tracker.addInitialSSTables(copyOf(readers))[ FD ]
Line_6 $$ List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, true, cfs), MockSchema.sstable(1, cfs), MockSchema.sstable(2, cfs))-->Line_7 $$ tracker.addInitialSSTables(copyOf(readers))[ FD ]
Line_5 $$ Tracker tracker = new Tracker(cfs, false)-->Line_9 $$ try (LifecycleTransaction txn = tracker.tryModify(readers.get(0), OperationType.COMPACTION)) [ FD ]
Line_4 $$ ColumnFamilyStore cfs = MockSchema.newCFS()-->Line_8 $$ Assert.assertNull(tracker.tryModify(ImmutableList.of(MockSchema.sstable(0, cfs)), OperationType.COMPACTION))[ FD ]
Line_6 $$ List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, true, cfs), MockSchema.sstable(1, cfs), MockSchema.sstable(2, cfs))-->Line_11 $$ Assert.assertNull(tracker.tryModify(readers.get(0), OperationType.COMPACTION))[ FD ]
Line_9 $$ try (LifecycleTransaction txn = tracker.tryModify(readers.get(0), OperationType.COMPACTION)) -->Line_13 $$ Assert.assertTrue(txn.originals().contains(readers.get(0)))[ FD ]
Line_5 $$ Tracker tracker = new Tracker(cfs, false)-->Line_11 $$ Assert.assertNull(tracker.tryModify(readers.get(0), OperationType.COMPACTION))[ FD ]
Line_9 $$ try (LifecycleTransaction txn = tracker.tryModify(readers.get(0), OperationType.COMPACTION)) -->Line_16 $$ Assert.assertNotNull(txn)[ FD ]
