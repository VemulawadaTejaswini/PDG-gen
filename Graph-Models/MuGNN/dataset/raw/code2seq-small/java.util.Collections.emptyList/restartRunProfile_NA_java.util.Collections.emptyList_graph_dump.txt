Line_2 $$ public void restartRunProfile(@NotNull final ExecutionEnvironment environment) -->Line_20 $$ if (!runningOfTheSameType.isEmpty() && (runningOfTheSameType.size() > 1 || contentToReuse == null || runningOfTheSameType.get(0) != contentToReuse) && !userApprovesStopForSameTypeConfigurations(environment.getProject(), configuration.getName(), runningOfTheSameType.size())) [ FD ]
Line_3 $$ RunnerAndConfigurationSettings configuration = environment.getRunnerAndConfigurationSettings()-->Line_23 $$ if (!runningIncompatible.isEmpty() && !userApprovesStopForIncompatibleConfigurations(myProject, configuration.getName(), runningIncompatible)) [ FD ]
Line_2 $$ public void restartRunProfile(@NotNull final ExecutionEnvironment environment) -->Line_18 $$ if (!runningToStop.isEmpty()) [ CD ]
Line_3 $$ RunnerAndConfigurationSettings configuration = environment.getRunnerAndConfigurationSettings()-->Line_12 $$ if (configuration != null && configuration.isSingleton()) [ FD ]
Line_33 $$ if (DumbService.getInstance(myProject).isDumb() || ExecutorRegistry.getInstance().isStarting(environment)) -->Line_34 $$ awaitingTerminationAlarm.addRequest(this, 100)[ CD ]
Line_4 $$ List<RunContentDescriptor> runningIncompatible-->Line_6 $$ runningIncompatible = Collections.emptyList()[ FD ]
Line_5 $$ if (configuration == null) -->Line_6 $$ runningIncompatible = Collections.emptyList()[ CD ]
Line_4 $$ List<RunContentDescriptor> runningIncompatible-->Line_17 $$ List<RunContentDescriptor> runningToStop = ContainerUtil.concat(runningOfTheSameType, runningIncompatible)[ FD ]
Line_2 $$ public void restartRunProfile(@NotNull final ExecutionEnvironment environment) -->Line_3 $$ RunnerAndConfigurationSettings configuration = environment.getRunnerAndConfigurationSettings()[ CD ]
Line_5 $$ if (configuration == null) -->Line_8 $$ runningIncompatible = getIncompatibleRunningDescriptors(configuration)[ CD ]
Line_14 $$ if (isProcessRunning(contentToReuse)) -->Line_15 $$ runningOfTheSameType.add(contentToReuse)[ CD ]
Line_10 $$ RunContentDescriptor contentToReuse = environment.getContentToReuse()-->Line_15 $$ runningOfTheSameType.add(contentToReuse)[ FD ]
Line_33 $$ if (DumbService.getInstance(myProject).isDumb() || ExecutorRegistry.getInstance().isStarting(environment)) -->Line_35 $$ return[ CD ]
Line_2 $$ public void restartRunProfile(@NotNull final ExecutionEnvironment environment) -->Line_12 $$ if (configuration != null && configuration.isSingleton()) [ CD ]
Line_37 $$ for (RunContentDescriptor descriptor : runningOfTheSameType) -->Line_38 $$ ProcessHandler processHandler = descriptor.getProcessHandler()[ FD ]
Line_8 $$ runningIncompatible = getIncompatibleRunningDescriptors(configuration)-->Line_23 $$ if (!runningIncompatible.isEmpty() && !userApprovesStopForIncompatibleConfigurations(myProject, configuration.getName(), runningIncompatible)) [ FD ]
Line_3 $$ RunnerAndConfigurationSettings configuration = environment.getRunnerAndConfigurationSettings()-->Line_8 $$ runningIncompatible = getIncompatibleRunningDescriptors(configuration)[ FD ]
Line_12 $$ if (configuration != null && configuration.isSingleton()) -->Line_14 $$ if (isProcessRunning(contentToReuse)) [ CD ]
Line_27 $$ for (RunContentDescriptor descriptor : runningToStop) -->Line_28 $$ stop(descriptor)[ FD ]
Line_19 $$ if (configuration != null) -->Line_23 $$ if (!runningIncompatible.isEmpty() && !userApprovesStopForIncompatibleConfigurations(myProject, configuration.getName(), runningIncompatible)) [ CD ]
Line_6 $$ runningIncompatible = Collections.emptyList()-->Line_17 $$ List<RunContentDescriptor> runningToStop = ContainerUtil.concat(runningOfTheSameType, runningIncompatible)[ FD ]
Line_3 $$ RunnerAndConfigurationSettings configuration = environment.getRunnerAndConfigurationSettings()-->Line_19 $$ if (configuration != null) [ FD ]
Line_8 $$ runningIncompatible = getIncompatibleRunningDescriptors(configuration)-->Line_17 $$ List<RunContentDescriptor> runningToStop = ContainerUtil.concat(runningOfTheSameType, runningIncompatible)[ FD ]
Line_27 $$ for (RunContentDescriptor descriptor : runningToStop) -->Line_38 $$ ProcessHandler processHandler = descriptor.getProcessHandler()[ FD ]
Line_2 $$ public void restartRunProfile(@NotNull final ExecutionEnvironment environment) -->Line_31 $$ awaitingTerminationAlarm.addRequest(new Runnable() [ CD ]
Line_6 $$ runningIncompatible = Collections.emptyList()-->Line_8 $$ runningIncompatible = getIncompatibleRunningDescriptors(configuration)[ FD ]
Line_6 $$ runningIncompatible = Collections.emptyList()-->Line_23 $$ if (!runningIncompatible.isEmpty() && !userApprovesStopForIncompatibleConfigurations(myProject, configuration.getName(), runningIncompatible)) [ FD ]
Line_2 $$ public void restartRunProfile(@NotNull final ExecutionEnvironment environment) -->Line_11 $$ final List<RunContentDescriptor> runningOfTheSameType = new SmartList<RunContentDescriptor>()[ CD ]
Line_23 $$ if (!runningIncompatible.isEmpty() && !userApprovesStopForIncompatibleConfigurations(myProject, configuration.getName(), runningIncompatible)) -->Line_24 $$ return[ CD ]
Line_2 $$ public void restartRunProfile(@NotNull final ExecutionEnvironment environment) -->Line_44 $$ start(environment)[ FD ]
Line_39 $$ if (processHandler != null && !processHandler.isProcessTerminated()) -->Line_40 $$ awaitingTerminationAlarm.addRequest(this, 100)[ CD ]
Line_2 $$ public void restartRunProfile(@NotNull final ExecutionEnvironment environment) -->Line_5 $$ if (configuration == null) [ CD ]
Line_31 $$ awaitingTerminationAlarm.addRequest(new Runnable() -->Line_44 $$ start(environment)[ CD ]
Line_2 $$ public void restartRunProfile(@NotNull final ExecutionEnvironment environment) -->Line_33 $$ if (DumbService.getInstance(myProject).isDumb() || ExecutorRegistry.getInstance().isStarting(environment)) [ FD ]
Line_3 $$ RunnerAndConfigurationSettings configuration = environment.getRunnerAndConfigurationSettings()-->Line_5 $$ if (configuration == null) [ FD ]
Line_4 $$ List<RunContentDescriptor> runningIncompatible-->Line_23 $$ if (!runningIncompatible.isEmpty() && !userApprovesStopForIncompatibleConfigurations(myProject, configuration.getName(), runningIncompatible)) [ FD ]
Line_2 $$ public void restartRunProfile(@NotNull final ExecutionEnvironment environment) -->Line_10 $$ RunContentDescriptor contentToReuse = environment.getContentToReuse()[ FD ]
Line_17 $$ List<RunContentDescriptor> runningToStop = ContainerUtil.concat(runningOfTheSameType, runningIncompatible)-->Line_18 $$ if (!runningToStop.isEmpty()) [ FD ]
Line_3 $$ RunnerAndConfigurationSettings configuration = environment.getRunnerAndConfigurationSettings()-->Line_13 $$ runningOfTheSameType.addAll(getRunningDescriptorsOfTheSameConfigType(configuration))[ FD ]
Line_2 $$ public void restartRunProfile(@NotNull final ExecutionEnvironment environment) -->Line_17 $$ List<RunContentDescriptor> runningToStop = ContainerUtil.concat(runningOfTheSameType, runningIncompatible)[ CD ]
Line_12 $$ if (configuration != null && configuration.isSingleton()) -->Line_13 $$ runningOfTheSameType.addAll(getRunningDescriptorsOfTheSameConfigType(configuration))[ CD ]
Line_19 $$ if (configuration != null) -->Line_20 $$ if (!runningOfTheSameType.isEmpty() && (runningOfTheSameType.size() > 1 || contentToReuse == null || runningOfTheSameType.get(0) != contentToReuse) && !userApprovesStopForSameTypeConfigurations(environment.getProject(), configuration.getName(), runningOfTheSameType.size())) [ CD ]
Line_2 $$ public void restartRunProfile(@NotNull final ExecutionEnvironment environment) -->Line_3 $$ RunnerAndConfigurationSettings configuration = environment.getRunnerAndConfigurationSettings()[ FD ]
Line_39 $$ if (processHandler != null && !processHandler.isProcessTerminated()) -->Line_41 $$ return[ CD ]
Line_11 $$ final List<RunContentDescriptor> runningOfTheSameType = new SmartList<RunContentDescriptor>()-->Line_20 $$ if (!runningOfTheSameType.isEmpty() && (runningOfTheSameType.size() > 1 || contentToReuse == null || runningOfTheSameType.get(0) != contentToReuse) && !userApprovesStopForSameTypeConfigurations(environment.getProject(), configuration.getName(), runningOfTheSameType.size())) [ FD ]
Line_31 $$ awaitingTerminationAlarm.addRequest(new Runnable() -->Line_33 $$ if (DumbService.getInstance(myProject).isDumb() || ExecutorRegistry.getInstance().isStarting(environment)) [ CD ]
Line_10 $$ RunContentDescriptor contentToReuse = environment.getContentToReuse()-->Line_14 $$ if (isProcessRunning(contentToReuse)) [ FD ]
Line_11 $$ final List<RunContentDescriptor> runningOfTheSameType = new SmartList<RunContentDescriptor>()-->Line_15 $$ runningOfTheSameType.add(contentToReuse)[ FD ]
Line_18 $$ if (!runningToStop.isEmpty()) -->Line_19 $$ if (configuration != null) [ CD ]
Line_2 $$ public void restartRunProfile(@NotNull final ExecutionEnvironment environment) -->Line_4 $$ List<RunContentDescriptor> runningIncompatible[ CD ]
Line_4 $$ List<RunContentDescriptor> runningIncompatible-->Line_8 $$ runningIncompatible = getIncompatibleRunningDescriptors(configuration)[ FD ]
Line_38 $$ ProcessHandler processHandler = descriptor.getProcessHandler()-->Line_39 $$ if (processHandler != null && !processHandler.isProcessTerminated()) [ FD ]
Line_3 $$ RunnerAndConfigurationSettings configuration = environment.getRunnerAndConfigurationSettings()-->Line_20 $$ if (!runningOfTheSameType.isEmpty() && (runningOfTheSameType.size() > 1 || contentToReuse == null || runningOfTheSameType.get(0) != contentToReuse) && !userApprovesStopForSameTypeConfigurations(environment.getProject(), configuration.getName(), runningOfTheSameType.size())) [ FD ]
Line_2 $$ public void restartRunProfile(@NotNull final ExecutionEnvironment environment) -->Line_10 $$ RunContentDescriptor contentToReuse = environment.getContentToReuse()[ CD ]
Line_20 $$ if (!runningOfTheSameType.isEmpty() && (runningOfTheSameType.size() > 1 || contentToReuse == null || runningOfTheSameType.get(0) != contentToReuse) && !userApprovesStopForSameTypeConfigurations(environment.getProject(), configuration.getName(), runningOfTheSameType.size())) -->Line_21 $$ return[ CD ]
Line_11 $$ final List<RunContentDescriptor> runningOfTheSameType = new SmartList<RunContentDescriptor>()-->Line_13 $$ runningOfTheSameType.addAll(getRunningDescriptorsOfTheSameConfigType(configuration))[ FD ]
Line_11 $$ final List<RunContentDescriptor> runningOfTheSameType = new SmartList<RunContentDescriptor>()-->Line_17 $$ List<RunContentDescriptor> runningToStop = ContainerUtil.concat(runningOfTheSameType, runningIncompatible)[ FD ]
