Line_2 $$ protected List<? extends GenerationInfo> generateMemberPrototypes(PsiClass aClass, ClassMember[] members) throws IncorrectOperationException -->Line_5 $$ final GrMethod method = genMethod(aClass, template)[ CD ]
Line_2 $$ protected List<? extends GenerationInfo> generateMemberPrototypes(PsiClass aClass, ClassMember[] members) throws IncorrectOperationException -->Line_6 $$ return method != null ? Collections.singletonList(new GroovyGenerationInfo<GrMethod>(method, true)) : Collections.<GenerationInfo>emptyList()[ CD ]
Line_2 $$ protected List<? extends GenerationInfo> generateMemberPrototypes(PsiClass aClass, ClassMember[] members) throws IncorrectOperationException -->Line_3 $$ final String templName = JavaTemplateUtil.TEMPLATE_FROM_USAGE_METHOD_BODY[ CD ]
Line_2 $$ protected List<? extends GenerationInfo> generateMemberPrototypes(PsiClass aClass, ClassMember[] members) throws IncorrectOperationException -->Line_4 $$ final FileTemplate template = FileTemplateManager.getInstance(aClass.getProject()).getCodeTemplate(templName)[ CD ]
Line_2 $$ protected List<? extends GenerationInfo> generateMemberPrototypes(PsiClass aClass, ClassMember[] members) throws IncorrectOperationException -->Line_4 $$ final FileTemplate template = FileTemplateManager.getInstance(aClass.getProject()).getCodeTemplate(templName)[ FD ]
Line_2 $$ protected List<? extends GenerationInfo> generateMemberPrototypes(PsiClass aClass, ClassMember[] members) throws IncorrectOperationException -->Line_5 $$ final GrMethod method = genMethod(aClass, template)[ FD ]
Line_3 $$ final String templName = JavaTemplateUtil.TEMPLATE_FROM_USAGE_METHOD_BODY-->Line_4 $$ final FileTemplate template = FileTemplateManager.getInstance(aClass.getProject()).getCodeTemplate(templName)[ FD ]
Line_4 $$ final FileTemplate template = FileTemplateManager.getInstance(aClass.getProject()).getCodeTemplate(templName)-->Line_5 $$ final GrMethod method = genMethod(aClass, template)[ FD ]
