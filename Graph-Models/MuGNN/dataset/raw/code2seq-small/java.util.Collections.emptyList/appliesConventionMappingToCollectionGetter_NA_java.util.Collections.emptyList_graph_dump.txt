Line_2 $$ public void appliesConventionMappingToCollectionGetter() throws Exception -->Line_5 $$ IConventionAware conventionAware = (IConventionAware) bean[ CD ]
Line_8 $$ conventionAware.getConventionMapping().map("prop", new Callable<Object>() -->Line_10 $$ return conventionValue[ CD ]
Line_4 $$ CollectionBean bean = generatedClass.newInstance()-->Line_16 $$ bean.setProp(Collections.<String>emptyList())[ FD ]
Line_2 $$ public void appliesConventionMappingToCollectionGetter() throws Exception -->Line_14 $$ bean.setProp(toList("other"))[ CD ]
Line_4 $$ CollectionBean bean = generatedClass.newInstance()-->Line_13 $$ assertThat(bean.getProp(), sameInstance(conventionValue))[ FD ]
Line_3 $$ Class<? extends CollectionBean> generatedClass = generator.generate(CollectionBean.class)-->Line_4 $$ CollectionBean bean = generatedClass.newInstance()[ FD ]
Line_4 $$ CollectionBean bean = generatedClass.newInstance()-->Line_15 $$ assertThat(bean.getProp(), equalTo(toList("other")))[ FD ]
Line_2 $$ public void appliesConventionMappingToCollectionGetter() throws Exception -->Line_7 $$ assertThat(bean.getProp(), isEmpty())[ CD ]
Line_2 $$ public void appliesConventionMappingToCollectionGetter() throws Exception -->Line_18 $$ bean.setProp(null)[ CD ]
Line_2 $$ public void appliesConventionMappingToCollectionGetter() throws Exception -->Line_19 $$ assertThat(bean.getProp(), nullValue())[ CD ]
Line_2 $$ public void appliesConventionMappingToCollectionGetter() throws Exception -->Line_17 $$ assertThat(bean.getProp(), equalTo(Collections.<String>emptyList()))[ CD ]
Line_2 $$ public void appliesConventionMappingToCollectionGetter() throws Exception -->Line_3 $$ Class<? extends CollectionBean> generatedClass = generator.generate(CollectionBean.class)[ CD ]
Line_2 $$ public void appliesConventionMappingToCollectionGetter() throws Exception -->Line_8 $$ conventionAware.getConventionMapping().map("prop", new Callable<Object>() [ CD ]
Line_4 $$ CollectionBean bean = generatedClass.newInstance()-->Line_19 $$ assertThat(bean.getProp(), nullValue())[ FD ]
Line_2 $$ public void appliesConventionMappingToCollectionGetter() throws Exception -->Line_16 $$ bean.setProp(Collections.<String>emptyList())[ CD ]
Line_2 $$ public void appliesConventionMappingToCollectionGetter() throws Exception -->Line_15 $$ assertThat(bean.getProp(), equalTo(toList("other")))[ CD ]
Line_4 $$ CollectionBean bean = generatedClass.newInstance()-->Line_7 $$ assertThat(bean.getProp(), isEmpty())[ FD ]
Line_4 $$ CollectionBean bean = generatedClass.newInstance()-->Line_18 $$ bean.setProp(null)[ FD ]
Line_5 $$ IConventionAware conventionAware = (IConventionAware) bean-->Line_8 $$ conventionAware.getConventionMapping().map("prop", new Callable<Object>() [ FD ]
Line_2 $$ public void appliesConventionMappingToCollectionGetter() throws Exception -->Line_4 $$ CollectionBean bean = generatedClass.newInstance()[ CD ]
Line_2 $$ public void appliesConventionMappingToCollectionGetter() throws Exception -->Line_6 $$ final List<String> conventionValue = toList("value")[ CD ]
Line_2 $$ public void appliesConventionMappingToCollectionGetter() throws Exception -->Line_13 $$ assertThat(bean.getProp(), sameInstance(conventionValue))[ CD ]
Line_4 $$ CollectionBean bean = generatedClass.newInstance()-->Line_17 $$ assertThat(bean.getProp(), equalTo(Collections.<String>emptyList()))[ FD ]
Line_6 $$ final List<String> conventionValue = toList("value")-->Line_13 $$ assertThat(bean.getProp(), sameInstance(conventionValue))[ FD ]
Line_4 $$ CollectionBean bean = generatedClass.newInstance()-->Line_14 $$ bean.setProp(toList("other"))[ FD ]
