Line_5 $$ CollectionBean bean = generatedClass.newInstance()-->Line_18 $$ bean.setProp(Collections.<String>emptyList())[ FD ]
Line_5 $$ CollectionBean bean = generatedClass.newInstance()-->Line_15 $$ assertThat(bean.getProp(), sameInstance(conventionValue))[ FD ]
Line_5 $$ CollectionBean bean = generatedClass.newInstance()-->Line_19 $$ assertThat(bean.getProp(), equalTo(Collections.<String>emptyList()))[ FD ]
Line_5 $$ CollectionBean bean = generatedClass.newInstance()-->Line_21 $$ assertThat(bean.getProp(), nullValue())[ FD ]
Line_5 $$ CollectionBean bean = generatedClass.newInstance()-->Line_16 $$ bean.setProp(toList("other"))[ FD ]
Line_6 $$ IConventionAware conventionAware = (IConventionAware) bean-->Line_9 $$ conventionAware.getConventionMapping().map("prop", new Callable<Object>() [ FD ]
Line_5 $$ CollectionBean bean = generatedClass.newInstance()-->Line_8 $$ assertThat(bean.getProp(), isEmpty())[ FD ]
Line_9 $$ conventionAware.getConventionMapping().map("prop", new Callable<Object>() -->Line_12 $$ return conventionValue[ CD ]
Line_5 $$ CollectionBean bean = generatedClass.newInstance()-->Line_20 $$ bean.setProp(null)[ FD ]
Line_7 $$ final List<String> conventionValue = toList("value")-->Line_15 $$ assertThat(bean.getProp(), sameInstance(conventionValue))[ FD ]
Line_4 $$ Class<? extends CollectionBean> generatedClass = generator.generate(CollectionBean.class)-->Line_5 $$ CollectionBean bean = generatedClass.newInstance()[ FD ]
Line_5 $$ CollectionBean bean = generatedClass.newInstance()-->Line_17 $$ assertThat(bean.getProp(), equalTo(toList("other")))[ FD ]
