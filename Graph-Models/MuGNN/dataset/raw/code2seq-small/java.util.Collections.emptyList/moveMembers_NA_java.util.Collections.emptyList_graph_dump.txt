Line_2 $$ protected Collection<PyElement> moveMembers(@NotNull final PyClass from, @NotNull final Collection<PyMemberInfo<PyClass>> members, @NotNull final PyClass... to) -->Line_5 $$ PyClassRefactoringUtil.addSuperclasses(from.getProject(), destClass, elements.toArray(new PyClass[members.size()]))[ FD ]
Line_3 $$ final Collection<PyClass> elements = fetchElements(members)-->Line_7 $$ final List<PyExpression> expressionsToDelete = getExpressionsBySuperClass(from, elements)[ FD ]
Line_2 $$ protected Collection<PyElement> moveMembers(@NotNull final PyClass from, @NotNull final Collection<PyMemberInfo<PyClass>> members, @NotNull final PyClass... to) -->Line_11 $$ return Collections.emptyList()[ CD ]
Line_3 $$ final Collection<PyClass> elements = fetchElements(members)-->Line_5 $$ PyClassRefactoringUtil.addSuperclasses(from.getProject(), destClass, elements.toArray(new PyClass[members.size()]))[ FD ]
Line_2 $$ protected Collection<PyElement> moveMembers(@NotNull final PyClass from, @NotNull final Collection<PyMemberInfo<PyClass>> members, @NotNull final PyClass... to) -->Line_7 $$ final List<PyExpression> expressionsToDelete = getExpressionsBySuperClass(from, elements)[ CD ]
Line_4 $$ for (final PyClass destClass : to) -->Line_5 $$ PyClassRefactoringUtil.addSuperclasses(from.getProject(), destClass, elements.toArray(new PyClass[members.size()]))[ FD ]
Line_2 $$ protected Collection<PyElement> moveMembers(@NotNull final PyClass from, @NotNull final Collection<PyMemberInfo<PyClass>> members, @NotNull final PyClass... to) -->Line_3 $$ final Collection<PyClass> elements = fetchElements(members)[ CD ]
Line_2 $$ protected Collection<PyElement> moveMembers(@NotNull final PyClass from, @NotNull final Collection<PyMemberInfo<PyClass>> members, @NotNull final PyClass... to) -->Line_7 $$ final List<PyExpression> expressionsToDelete = getExpressionsBySuperClass(from, elements)[ FD ]
Line_2 $$ protected Collection<PyElement> moveMembers(@NotNull final PyClass from, @NotNull final Collection<PyMemberInfo<PyClass>> members, @NotNull final PyClass... to) -->Line_3 $$ final Collection<PyClass> elements = fetchElements(members)[ FD ]
Line_8 $$ for (final PyExpression expressionToDelete : expressionsToDelete) -->Line_9 $$ expressionToDelete.delete()[ FD ]
