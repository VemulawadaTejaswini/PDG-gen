Line_8 $$ if (!moduleBasedFilter.accept(file)) -->Line_10 $$ result.add(Pair.create(file, moduleAndRoot != null ? moduleAndRoot.target.getModule() : null))[ CD ]
Line_2 $$ private static List<Pair<File, JpsModule>> checkAffectedFilesInCorrectModules(CompileContext context, Collection<File> affected, ModulesBasedFileFilter moduleBasedFilter) -->Line_9 $$ final JavaSourceRootDescriptor moduleAndRoot = context.getProjectDescriptor().getBuildRootIndex().findJavaRootDescriptor(context, file)[ FD ]
Line_7 $$ for (File file : affected) -->Line_9 $$ final JavaSourceRootDescriptor moduleAndRoot = context.getProjectDescriptor().getBuildRootIndex().findJavaRootDescriptor(context, file)[ FD ]
Line_2 $$ private static List<Pair<File, JpsModule>> checkAffectedFilesInCorrectModules(CompileContext context, Collection<File> affected, ModulesBasedFileFilter moduleBasedFilter) -->Line_13 $$ return result[ CD ]
Line_3 $$ if (affected.isEmpty()) -->Line_4 $$ return Collections.emptyList()[ CD ]
Line_6 $$ final List<Pair<File, JpsModule>> result = new ArrayList<Pair<File, JpsModule>>()-->Line_10 $$ result.add(Pair.create(file, moduleAndRoot != null ? moduleAndRoot.target.getModule() : null))[ FD ]
Line_7 $$ for (File file : affected) -->Line_10 $$ result.add(Pair.create(file, moduleAndRoot != null ? moduleAndRoot.target.getModule() : null))[ FD ]
Line_2 $$ private static List<Pair<File, JpsModule>> checkAffectedFilesInCorrectModules(CompileContext context, Collection<File> affected, ModulesBasedFileFilter moduleBasedFilter) -->Line_3 $$ if (affected.isEmpty()) [ FD ]
Line_7 $$ for (File file : affected) -->Line_8 $$ if (!moduleBasedFilter.accept(file)) [ FD ]
Line_8 $$ if (!moduleBasedFilter.accept(file)) -->Line_9 $$ final JavaSourceRootDescriptor moduleAndRoot = context.getProjectDescriptor().getBuildRootIndex().findJavaRootDescriptor(context, file)[ CD ]
Line_2 $$ private static List<Pair<File, JpsModule>> checkAffectedFilesInCorrectModules(CompileContext context, Collection<File> affected, ModulesBasedFileFilter moduleBasedFilter) -->Line_8 $$ if (!moduleBasedFilter.accept(file)) [ FD ]
Line_2 $$ private static List<Pair<File, JpsModule>> checkAffectedFilesInCorrectModules(CompileContext context, Collection<File> affected, ModulesBasedFileFilter moduleBasedFilter) -->Line_6 $$ final List<Pair<File, JpsModule>> result = new ArrayList<Pair<File, JpsModule>>()[ CD ]
Line_2 $$ private static List<Pair<File, JpsModule>> checkAffectedFilesInCorrectModules(CompileContext context, Collection<File> affected, ModulesBasedFileFilter moduleBasedFilter) -->Line_3 $$ if (affected.isEmpty()) [ CD ]
