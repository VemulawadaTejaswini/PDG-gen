Line_14 $$ if (repositories.contains(repository)) -->Line_15 $$ history.put(repository, getUnmergedCommits(repository, unmergedBranch, baseBranch))[ CD ]
Line_10 $$ final Map<GitRepository, List<GitCommit>> history = new HashMap<GitRepository, List<GitCommit>>()-->Line_20 $$ return myUiHandler.showBranchIsNotFullyMergedDialog(myProject, history, unmergedBranch, mergedToBranches, baseBranch)[ FD ]
Line_14 $$ if (repositories.contains(repository)) -->Line_17 $$ history.put(repository, Collections.<GitCommit>emptyList())[ CD ]
Line_9 $$ final List<String> mergedToBranches = getMergedToBranches(unmergedBranch)-->Line_20 $$ return myUiHandler.showBranchIsNotFullyMergedDialog(myProject, history, unmergedBranch, mergedToBranches, baseBranch)[ FD ]
Line_10 $$ final Map<GitRepository, List<GitCommit>> history = new HashMap<GitRepository, List<GitCommit>>()-->Line_17 $$ history.put(repository, Collections.<GitCommit>emptyList())[ FD ]
Line_10 $$ final Map<GitRepository, List<GitCommit>> history = new HashMap<GitRepository, List<GitCommit>>()-->Line_15 $$ history.put(repository, getUnmergedCommits(repository, unmergedBranch, baseBranch))[ FD ]
