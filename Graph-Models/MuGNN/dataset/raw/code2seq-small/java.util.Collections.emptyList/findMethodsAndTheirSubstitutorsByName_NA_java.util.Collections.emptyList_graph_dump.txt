Line_2 $$ public static List<Pair<PsiMethod, PsiSubstitutor>> findMethodsAndTheirSubstitutorsByName(@NotNull PsiClass psiClass, String name, boolean checkBases) -->Line_11 $$ Map<String, List<Pair<PsiMember, PsiSubstitutor>>> map = getMap(psiClass, MemberType.METHOD)[ CD ]
Line_11 $$ Map<String, List<Pair<PsiMember, PsiSubstitutor>>> map = getMap(psiClass, MemberType.METHOD)-->Line_12 $$ List<Pair<PsiMethod, PsiSubstitutor>> list = (List) map.get(name)[ FD ]
Line_2 $$ public static List<Pair<PsiMethod, PsiSubstitutor>> findMethodsAndTheirSubstitutorsByName(@NotNull PsiClass psiClass, String name, boolean checkBases) -->Line_13 $$ return list == null ? Collections.<Pair<PsiMethod, PsiSubstitutor>>emptyList() : Collections.unmodifiableList(list)[ CD ]
Line_6 $$ for (final PsiMethod method : methodsByName) -->Line_7 $$ ret.add(Pair.create(method, PsiSubstitutor.EMPTY))[ FD ]
Line_2 $$ public static List<Pair<PsiMethod, PsiSubstitutor>> findMethodsAndTheirSubstitutorsByName(@NotNull PsiClass psiClass, String name, boolean checkBases) -->Line_11 $$ Map<String, List<Pair<PsiMember, PsiSubstitutor>>> map = getMap(psiClass, MemberType.METHOD)[ FD ]
Line_2 $$ public static List<Pair<PsiMethod, PsiSubstitutor>> findMethodsAndTheirSubstitutorsByName(@NotNull PsiClass psiClass, String name, boolean checkBases) -->Line_12 $$ List<Pair<PsiMethod, PsiSubstitutor>> list = (List) map.get(name)[ FD ]
Line_3 $$ if (!checkBases) -->Line_5 $$ final List<Pair<PsiMethod, PsiSubstitutor>> ret = new ArrayList<Pair<PsiMethod, PsiSubstitutor>>(methodsByName.length)[ CD ]
Line_2 $$ public static List<Pair<PsiMethod, PsiSubstitutor>> findMethodsAndTheirSubstitutorsByName(@NotNull PsiClass psiClass, String name, boolean checkBases) -->Line_3 $$ if (!checkBases) [ FD ]
Line_2 $$ public static List<Pair<PsiMethod, PsiSubstitutor>> findMethodsAndTheirSubstitutorsByName(@NotNull PsiClass psiClass, String name, boolean checkBases) -->Line_12 $$ List<Pair<PsiMethod, PsiSubstitutor>> list = (List) map.get(name)[ CD ]
Line_5 $$ final List<Pair<PsiMethod, PsiSubstitutor>> ret = new ArrayList<Pair<PsiMethod, PsiSubstitutor>>(methodsByName.length)-->Line_7 $$ ret.add(Pair.create(method, PsiSubstitutor.EMPTY))[ FD ]
Line_3 $$ if (!checkBases) -->Line_9 $$ return ret[ CD ]
Line_12 $$ List<Pair<PsiMethod, PsiSubstitutor>> list = (List) map.get(name)-->Line_13 $$ return list == null ? Collections.<Pair<PsiMethod, PsiSubstitutor>>emptyList() : Collections.unmodifiableList(list)[ FD ]
Line_2 $$ public static List<Pair<PsiMethod, PsiSubstitutor>> findMethodsAndTheirSubstitutorsByName(@NotNull PsiClass psiClass, String name, boolean checkBases) -->Line_3 $$ if (!checkBases) [ CD ]
Line_3 $$ if (!checkBases) -->Line_4 $$ final PsiMethod[] methodsByName = psiClass.findMethodsByName(name, false)[ CD ]
Line_2 $$ public static List<Pair<PsiMethod, PsiSubstitutor>> findMethodsAndTheirSubstitutorsByName(@NotNull PsiClass psiClass, String name, boolean checkBases) -->Line_4 $$ final PsiMethod[] methodsByName = psiClass.findMethodsByName(name, false)[ FD ]
