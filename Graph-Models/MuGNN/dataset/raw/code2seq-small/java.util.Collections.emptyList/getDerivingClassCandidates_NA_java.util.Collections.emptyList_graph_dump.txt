Line_2 $$ private static List<PsiClass> getDerivingClassCandidates(PsiClass clazz, GlobalSearchScope scope, boolean includeAnonymous) -->Line_4 $$ if (name == null)[ CD ]
Line_3 $$ final String name = clazz.getName()-->Line_4 $$ if (name == null)[ FD ]
Line_13 $$ if (includeAnonymous) -->Line_14 $$ final Collection<GrAnonymousClassDefinition> classes = StubIndex.getElements(GrAnonymousClassIndex.KEY, name, clazz.getProject(), scope, GrAnonymousClassDefinition.class)[ CD ]
Line_6 $$ final ArrayList<PsiClass> inheritors = new ArrayList<PsiClass>()-->Line_16 $$ inheritors.add(aClass)[ FD ]
Line_2 $$ private static List<PsiClass> getDerivingClassCandidates(PsiClass clazz, GlobalSearchScope scope, boolean includeAnonymous) -->Line_6 $$ final ArrayList<PsiClass> inheritors = new ArrayList<PsiClass>()[ CD ]
Line_2 $$ private static List<PsiClass> getDerivingClassCandidates(PsiClass clazz, GlobalSearchScope scope, boolean includeAnonymous) -->Line_3 $$ final String name = clazz.getName()[ FD ]
Line_6 $$ final ArrayList<PsiClass> inheritors = new ArrayList<PsiClass>()-->Line_10 $$ inheritors.add((PsiClass) parent)[ FD ]
Line_4 $$ if (name == null)-->Line_5 $$ return Collections.emptyList()[ CD ]
Line_2 $$ private static List<PsiClass> getDerivingClassCandidates(PsiClass clazz, GlobalSearchScope scope, boolean includeAnonymous) -->Line_13 $$ if (includeAnonymous) [ CD ]
Line_2 $$ private static List<PsiClass> getDerivingClassCandidates(PsiClass clazz, GlobalSearchScope scope, boolean includeAnonymous) -->Line_19 $$ return inheritors[ CD ]
Line_15 $$ for (GrAnonymousClassDefinition aClass : classes) -->Line_16 $$ inheritors.add(aClass)[ FD ]
Line_3 $$ final String name = clazz.getName()-->Line_7 $$ for (GrReferenceList list : StubIndex.getElements(GrDirectInheritorsIndex.KEY, name, clazz.getProject(), scope, GrReferenceList.class)) [ FD ]
Line_8 $$ final PsiElement parent = list.getParent()-->Line_9 $$ if (parent instanceof GrTypeDefinition) [ FD ]
Line_2 $$ private static List<PsiClass> getDerivingClassCandidates(PsiClass clazz, GlobalSearchScope scope, boolean includeAnonymous) -->Line_14 $$ final Collection<GrAnonymousClassDefinition> classes = StubIndex.getElements(GrAnonymousClassIndex.KEY, name, clazz.getProject(), scope, GrAnonymousClassDefinition.class)[ FD ]
Line_9 $$ if (parent instanceof GrTypeDefinition) -->Line_10 $$ inheritors.add((PsiClass) parent)[ CD ]
Line_3 $$ final String name = clazz.getName()-->Line_14 $$ final Collection<GrAnonymousClassDefinition> classes = StubIndex.getElements(GrAnonymousClassIndex.KEY, name, clazz.getProject(), scope, GrAnonymousClassDefinition.class)[ FD ]
Line_2 $$ private static List<PsiClass> getDerivingClassCandidates(PsiClass clazz, GlobalSearchScope scope, boolean includeAnonymous) -->Line_7 $$ for (GrReferenceList list : StubIndex.getElements(GrDirectInheritorsIndex.KEY, name, clazz.getProject(), scope, GrReferenceList.class)) [ FD ]
Line_2 $$ private static List<PsiClass> getDerivingClassCandidates(PsiClass clazz, GlobalSearchScope scope, boolean includeAnonymous) -->Line_3 $$ final String name = clazz.getName()[ CD ]
Line_7 $$ for (GrReferenceList list : StubIndex.getElements(GrDirectInheritorsIndex.KEY, name, clazz.getProject(), scope, GrReferenceList.class)) -->Line_8 $$ final PsiElement parent = list.getParent()[ FD ]
