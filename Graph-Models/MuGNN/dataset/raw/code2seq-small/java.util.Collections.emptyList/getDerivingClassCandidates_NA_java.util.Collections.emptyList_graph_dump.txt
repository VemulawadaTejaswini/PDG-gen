Line_4 $$ final String name = clazz.getName()-->Line_5 $$ if (name == null)[ FD ]
Line_5 $$ if (name == null)-->Line_6 $$ return Collections.emptyList()[ CD ]
Line_9 $$ final PsiElement parent = list.getParent()-->Line_10 $$ if (parent instanceof GrTypeDefinition) [ FD ]
Line_7 $$ final ArrayList<PsiClass> inheritors = new ArrayList<PsiClass>()-->Line_11 $$ inheritors.add((PsiClass) parent)[ FD ]
Line_4 $$ final String name = clazz.getName()-->Line_15 $$ final Collection<GrAnonymousClassDefinition> classes = StubIndex.getElements(GrAnonymousClassIndex.KEY, name, clazz.getProject(), scope, GrAnonymousClassDefinition.class)[ FD ]
Line_16 $$ for (GrAnonymousClassDefinition aClass : classes) -->Line_17 $$ inheritors.add(aClass)[ FD ]
Line_10 $$ if (parent instanceof GrTypeDefinition) -->Line_11 $$ inheritors.add((PsiClass) parent)[ CD ]
Line_14 $$ if (includeAnonymous) -->Line_15 $$ final Collection<GrAnonymousClassDefinition> classes = StubIndex.getElements(GrAnonymousClassIndex.KEY, name, clazz.getProject(), scope, GrAnonymousClassDefinition.class)[ CD ]
Line_7 $$ final ArrayList<PsiClass> inheritors = new ArrayList<PsiClass>()-->Line_17 $$ inheritors.add(aClass)[ FD ]
Line_4 $$ final String name = clazz.getName()-->Line_8 $$ for (GrReferenceList list : StubIndex.getElements(GrDirectInheritorsIndex.KEY, name, clazz.getProject(), scope, GrReferenceList.class)) [ FD ]
Line_8 $$ for (GrReferenceList list : StubIndex.getElements(GrDirectInheritorsIndex.KEY, name, clazz.getProject(), scope, GrReferenceList.class)) -->Line_9 $$ final PsiElement parent = list.getParent()[ FD ]
