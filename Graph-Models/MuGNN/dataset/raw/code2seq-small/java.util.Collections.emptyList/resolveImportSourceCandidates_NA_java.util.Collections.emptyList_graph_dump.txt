Line_6 $$ if (level > 0) -->Line_7 $$ final PsiDirectory upper = ResolveImportUtil.stepBackFrom(getContainingFile().getOriginalFile(), level)[ CD ]
Line_2 $$ public List<PsiElement> resolveImportSourceCandidates() -->Line_11 $$ return ResolveImportUtil.resolveFromImportStatementSource(this, qName)[ CD ]
Line_2 $$ public List<PsiElement> resolveImportSourceCandidates() -->Line_3 $$ final QualifiedName qName = getImportSourceQName()[ CD ]
Line_3 $$ final QualifiedName qName = getImportSourceQName()-->Line_11 $$ return ResolveImportUtil.resolveFromImportStatementSource(this, qName)[ FD ]
Line_7 $$ final PsiDirectory upper = ResolveImportUtil.stepBackFrom(getContainingFile().getOriginalFile(), level)-->Line_8 $$ return upper == null ? Collections.<PsiElement>emptyList() : Collections.<PsiElement>singletonList(upper)[ FD ]
Line_6 $$ if (level > 0) -->Line_8 $$ return upper == null ? Collections.<PsiElement>emptyList() : Collections.<PsiElement>singletonList(upper)[ CD ]
Line_2 $$ public List<PsiElement> resolveImportSourceCandidates() -->Line_4 $$ if (qName == null) [ CD ]
Line_4 $$ if (qName == null) -->Line_6 $$ if (level > 0) [ CD ]
Line_5 $$ final int level = getRelativeLevel()-->Line_6 $$ if (level > 0) [ FD ]
Line_3 $$ final QualifiedName qName = getImportSourceQName()-->Line_4 $$ if (qName == null) [ FD ]
Line_4 $$ if (qName == null) -->Line_5 $$ final int level = getRelativeLevel()[ CD ]
Line_5 $$ final int level = getRelativeLevel()-->Line_7 $$ final PsiDirectory upper = ResolveImportUtil.stepBackFrom(getContainingFile().getOriginalFile(), level)[ FD ]
