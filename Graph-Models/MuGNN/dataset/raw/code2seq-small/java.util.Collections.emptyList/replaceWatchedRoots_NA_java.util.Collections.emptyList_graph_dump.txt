Line_2 $$ public Set<WatchRequest> replaceWatchedRoots(@NotNull final Collection<WatchRequest> watchRequests, @Nullable final Collection<String> _recursiveRoots, @Nullable final Collection<String> _flatRoots) -->Line_9 $$ final Set<WatchRequest> result = new HashSet<WatchRequest>()[ CD ]
Line_4 $$ final Collection<String> flatRoots = _flatRoots != null ? _flatRoots : Collections.<String>emptyList()-->Line_5 $$ if (recursiveRoots.isEmpty() && flatRoots.isEmpty() || !myWatcher.isOperational()) [ FD ]
Line_2 $$ public Set<WatchRequest> replaceWatchedRoots(@NotNull final Collection<WatchRequest> watchRequests, @Nullable final Collection<String> _recursiveRoots, @Nullable final Collection<String> _flatRoots) -->Line_5 $$ if (recursiveRoots.isEmpty() && flatRoots.isEmpty() || !myWatcher.isOperational()) [ CD ]
Line_9 $$ final Set<WatchRequest> result = new HashSet<WatchRequest>()-->Line_14 $$ boolean update = doAddRootsToWatch(recursiveRoots, flatRoots, result, filesToSync) | doRemoveWatchedRoots(watchRequests)[ FD ]
Line_2 $$ public Set<WatchRequest> replaceWatchedRoots(@NotNull final Collection<WatchRequest> watchRequests, @Nullable final Collection<String> _recursiveRoots, @Nullable final Collection<String> _flatRoots) -->Line_4 $$ final Collection<String> flatRoots = _flatRoots != null ? _flatRoots : Collections.<String>emptyList()[ CD ]
Line_2 $$ public Set<WatchRequest> replaceWatchedRoots(@NotNull final Collection<WatchRequest> watchRequests, @Nullable final Collection<String> _recursiveRoots, @Nullable final Collection<String> _flatRoots) -->Line_11 $$ ApplicationManager.getApplication().runReadAction(new Runnable() [ CD ]
Line_2 $$ public Set<WatchRequest> replaceWatchedRoots(@NotNull final Collection<WatchRequest> watchRequests, @Nullable final Collection<String> _recursiveRoots, @Nullable final Collection<String> _flatRoots) -->Line_6 $$ removeWatchedRoots(watchRequests)[ FD ]
Line_15 $$ if (update) -->Line_17 $$ setUpFileWatcher()[ CD ]
Line_2 $$ public Set<WatchRequest> replaceWatchedRoots(@NotNull final Collection<WatchRequest> watchRequests, @Nullable final Collection<String> _recursiveRoots, @Nullable final Collection<String> _flatRoots) -->Line_22 $$ syncFiles(filesToSync)[ CD ]
Line_10 $$ final Set<VirtualFile> filesToSync = new HashSet<VirtualFile>()-->Line_22 $$ syncFiles(filesToSync)[ FD ]
Line_2 $$ public Set<WatchRequest> replaceWatchedRoots(@NotNull final Collection<WatchRequest> watchRequests, @Nullable final Collection<String> _recursiveRoots, @Nullable final Collection<String> _flatRoots) -->Line_3 $$ final Collection<String> recursiveRoots = _recursiveRoots != null ? _recursiveRoots : Collections.<String>emptyList()[ CD ]
Line_4 $$ final Collection<String> flatRoots = _flatRoots != null ? _flatRoots : Collections.<String>emptyList()-->Line_14 $$ boolean update = doAddRootsToWatch(recursiveRoots, flatRoots, result, filesToSync) | doRemoveWatchedRoots(watchRequests)[ FD ]
Line_2 $$ public Set<WatchRequest> replaceWatchedRoots(@NotNull final Collection<WatchRequest> watchRequests, @Nullable final Collection<String> _recursiveRoots, @Nullable final Collection<String> _flatRoots) -->Line_10 $$ final Set<VirtualFile> filesToSync = new HashSet<VirtualFile>()[ CD ]
Line_5 $$ if (recursiveRoots.isEmpty() && flatRoots.isEmpty() || !myWatcher.isOperational()) -->Line_7 $$ return Collections.emptySet()[ CD ]
Line_10 $$ final Set<VirtualFile> filesToSync = new HashSet<VirtualFile>()-->Line_14 $$ boolean update = doAddRootsToWatch(recursiveRoots, flatRoots, result, filesToSync) | doRemoveWatchedRoots(watchRequests)[ FD ]
Line_2 $$ public Set<WatchRequest> replaceWatchedRoots(@NotNull final Collection<WatchRequest> watchRequests, @Nullable final Collection<String> _recursiveRoots, @Nullable final Collection<String> _flatRoots) -->Line_23 $$ return result[ CD ]
Line_2 $$ public Set<WatchRequest> replaceWatchedRoots(@NotNull final Collection<WatchRequest> watchRequests, @Nullable final Collection<String> _recursiveRoots, @Nullable final Collection<String> _flatRoots) -->Line_14 $$ boolean update = doAddRootsToWatch(recursiveRoots, flatRoots, result, filesToSync) | doRemoveWatchedRoots(watchRequests)[ FD ]
Line_3 $$ final Collection<String> recursiveRoots = _recursiveRoots != null ? _recursiveRoots : Collections.<String>emptyList()-->Line_5 $$ if (recursiveRoots.isEmpty() && flatRoots.isEmpty() || !myWatcher.isOperational()) [ FD ]
Line_5 $$ if (recursiveRoots.isEmpty() && flatRoots.isEmpty() || !myWatcher.isOperational()) -->Line_6 $$ removeWatchedRoots(watchRequests)[ CD ]
Line_3 $$ final Collection<String> recursiveRoots = _recursiveRoots != null ? _recursiveRoots : Collections.<String>emptyList()-->Line_14 $$ boolean update = doAddRootsToWatch(recursiveRoots, flatRoots, result, filesToSync) | doRemoveWatchedRoots(watchRequests)[ FD ]
