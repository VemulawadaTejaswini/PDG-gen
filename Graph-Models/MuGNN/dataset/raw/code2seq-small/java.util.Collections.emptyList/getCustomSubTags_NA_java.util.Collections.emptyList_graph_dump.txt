Line_13 $$ List<? extends DomFixedChildDescription> fixedChildrenDescriptions = info.getFixedChildrenDescriptions()-->Line_14 $$ for (int i = 0, size = fixedChildrenDescriptions.size(); i < size; i++) [ FD ]
Line_14 $$ for (int i = 0, size = fixedChildrenDescriptions.size(); i < size; i++) -->Line_16 $$ usedNames.add(description.getXmlName())[ CD ]
Line_13 $$ List<? extends DomFixedChildDescription> fixedChildrenDescriptions = info.getFixedChildrenDescriptions()-->Line_15 $$ DomFixedChildDescription description = fixedChildrenDescriptions.get(i)[ FD ]
Line_2 $$ public static List<XmlTag> getCustomSubTags(final DomInvocationHandler handler, final XmlTag[] subTags, final XmlFile file) -->Line_13 $$ List<? extends DomFixedChildDescription> fixedChildrenDescriptions = info.getFixedChildrenDescriptions()[ CD ]
Line_18 $$ return ContainerUtil.findAll(subTags, new Condition<XmlTag>() -->Line_23 $$ if (isNameSuitable(name, tag, handler, file)) [ FD ]
Line_2 $$ public static List<XmlTag> getCustomSubTags(final DomInvocationHandler handler, final XmlTag[] subTags, final XmlFile file) -->Line_7 $$ final Set<XmlName> usedNames = new THashSet<XmlName>()[ CD ]
Line_3 $$ if (subTags.length == 0) -->Line_4 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public static List<XmlTag> getCustomSubTags(final DomInvocationHandler handler, final XmlTag[] subTags, final XmlFile file) -->Line_23 $$ if (isNameSuitable(name, tag, handler, file)) [ FD ]
Line_2 $$ public static List<XmlTag> getCustomSubTags(final DomInvocationHandler handler, final XmlTag[] subTags, final XmlFile file) -->Line_14 $$ for (int i = 0, size = fixedChildrenDescriptions.size(); i < size; i++) [ CD ]
Line_18 $$ return ContainerUtil.findAll(subTags, new Condition<XmlTag>() -->Line_27 $$ return true[ CD ]
Line_9 $$ for (int i = 0, size = collectionChildrenDescriptions.size(); i < size; i++) -->Line_14 $$ for (int i = 0, size = fixedChildrenDescriptions.size(); i < size; i++) [ FD ]
Line_2 $$ public static List<XmlTag> getCustomSubTags(final DomInvocationHandler handler, final XmlTag[] subTags, final XmlFile file) -->Line_6 $$ final DomGenericInfoEx info = handler.getGenericInfo()[ FD ]
Line_23 $$ if (isNameSuitable(name, tag, handler, file)) -->Line_24 $$ return false[ CD ]
Line_6 $$ final DomGenericInfoEx info = handler.getGenericInfo()-->Line_8 $$ List<? extends DomCollectionChildDescription> collectionChildrenDescriptions = info.getCollectionChildrenDescriptions()[ FD ]
Line_7 $$ final Set<XmlName> usedNames = new THashSet<XmlName>()-->Line_16 $$ usedNames.add(description.getXmlName())[ FD ]
Line_15 $$ DomFixedChildDescription description = fixedChildrenDescriptions.get(i)-->Line_16 $$ usedNames.add(description.getXmlName())[ FD ]
Line_14 $$ for (int i = 0, size = fixedChildrenDescriptions.size(); i < size; i++) -->Line_15 $$ DomFixedChildDescription description = fixedChildrenDescriptions.get(i)[ CD ]
Line_6 $$ final DomGenericInfoEx info = handler.getGenericInfo()-->Line_13 $$ List<? extends DomFixedChildDescription> fixedChildrenDescriptions = info.getFixedChildrenDescriptions()[ FD ]
Line_10 $$ DomCollectionChildDescription description = collectionChildrenDescriptions.get(i)-->Line_16 $$ usedNames.add(description.getXmlName())[ FD ]
Line_10 $$ DomCollectionChildDescription description = collectionChildrenDescriptions.get(i)-->Line_11 $$ usedNames.add(description.getXmlName())[ FD ]
Line_2 $$ public static List<XmlTag> getCustomSubTags(final DomInvocationHandler handler, final XmlTag[] subTags, final XmlFile file) -->Line_3 $$ if (subTags.length == 0) [ CD ]
Line_8 $$ List<? extends DomCollectionChildDescription> collectionChildrenDescriptions = info.getCollectionChildrenDescriptions()-->Line_9 $$ for (int i = 0, size = collectionChildrenDescriptions.size(); i < size; i++) [ FD ]
Line_2 $$ public static List<XmlTag> getCustomSubTags(final DomInvocationHandler handler, final XmlTag[] subTags, final XmlFile file) -->Line_8 $$ List<? extends DomCollectionChildDescription> collectionChildrenDescriptions = info.getCollectionChildrenDescriptions()[ CD ]
Line_9 $$ for (int i = 0, size = collectionChildrenDescriptions.size(); i < size; i++) -->Line_11 $$ usedNames.add(description.getXmlName())[ CD ]
Line_8 $$ List<? extends DomCollectionChildDescription> collectionChildrenDescriptions = info.getCollectionChildrenDescriptions()-->Line_10 $$ DomCollectionChildDescription description = collectionChildrenDescriptions.get(i)[ FD ]
Line_18 $$ return ContainerUtil.findAll(subTags, new Condition<XmlTag>() -->Line_20 $$ if (StringUtil.isEmpty(tag.getName()))[ FD ]
Line_2 $$ public static List<XmlTag> getCustomSubTags(final DomInvocationHandler handler, final XmlTag[] subTags, final XmlFile file) -->Line_6 $$ final DomGenericInfoEx info = handler.getGenericInfo()[ CD ]
Line_20 $$ if (StringUtil.isEmpty(tag.getName()))-->Line_21 $$ return false[ CD ]
Line_7 $$ final Set<XmlName> usedNames = new THashSet<XmlName>()-->Line_11 $$ usedNames.add(description.getXmlName())[ FD ]
Line_2 $$ public static List<XmlTag> getCustomSubTags(final DomInvocationHandler handler, final XmlTag[] subTags, final XmlFile file) -->Line_18 $$ return ContainerUtil.findAll(subTags, new Condition<XmlTag>() [ CD ]
Line_18 $$ return ContainerUtil.findAll(subTags, new Condition<XmlTag>() -->Line_20 $$ if (StringUtil.isEmpty(tag.getName()))[ CD ]
Line_2 $$ public static List<XmlTag> getCustomSubTags(final DomInvocationHandler handler, final XmlTag[] subTags, final XmlFile file) -->Line_9 $$ for (int i = 0, size = collectionChildrenDescriptions.size(); i < size; i++) [ CD ]
Line_9 $$ for (int i = 0, size = collectionChildrenDescriptions.size(); i < size; i++) -->Line_10 $$ DomCollectionChildDescription description = collectionChildrenDescriptions.get(i)[ FD ]
Line_2 $$ public static List<XmlTag> getCustomSubTags(final DomInvocationHandler handler, final XmlTag[] subTags, final XmlFile file) -->Line_18 $$ return ContainerUtil.findAll(subTags, new Condition<XmlTag>() [ FD ]
Line_9 $$ for (int i = 0, size = collectionChildrenDescriptions.size(); i < size; i++) -->Line_10 $$ DomCollectionChildDescription description = collectionChildrenDescriptions.get(i)[ CD ]
Line_9 $$ for (int i = 0, size = collectionChildrenDescriptions.size(); i < size; i++) -->Line_15 $$ DomFixedChildDescription description = fixedChildrenDescriptions.get(i)[ FD ]
Line_22 $$ for (final XmlName name : usedNames) -->Line_23 $$ if (isNameSuitable(name, tag, handler, file)) [ FD ]
Line_14 $$ for (int i = 0, size = fixedChildrenDescriptions.size(); i < size; i++) -->Line_15 $$ DomFixedChildDescription description = fixedChildrenDescriptions.get(i)[ FD ]
