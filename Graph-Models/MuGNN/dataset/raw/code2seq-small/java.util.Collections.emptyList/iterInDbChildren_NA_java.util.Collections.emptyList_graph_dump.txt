Line_8 $$ final NewVirtualFileSystem delegate = PersistentFS.replaceWithNativeFS(getFileSystem())-->Line_10 $$ findChild(name, false, false, delegate)[ FD ]
Line_2 $$ public Iterable<VirtualFile> iterInDbChildren() -->Line_3 $$ if (!ourPersistence.wereChildrenAccessed(this)) [ CD ]
Line_6 $$ if (!ourPersistence.areChildrenLoaded(this)) -->Line_7 $$ final String[] names = ourPersistence.listPersisted(this)[ CD ]
Line_3 $$ if (!ourPersistence.wereChildrenAccessed(this)) -->Line_4 $$ return Collections.emptyList()[ CD ]
Line_6 $$ if (!ourPersistence.areChildrenLoaded(this)) -->Line_8 $$ final NewVirtualFileSystem delegate = PersistentFS.replaceWithNativeFS(getFileSystem())[ CD ]
Line_2 $$ public Iterable<VirtualFile> iterInDbChildren() -->Line_13 $$ return getCachedChildren()[ CD ]
Line_9 $$ for (String name : names) -->Line_10 $$ findChild(name, false, false, delegate)[ FD ]
Line_2 $$ public Iterable<VirtualFile> iterInDbChildren() -->Line_6 $$ if (!ourPersistence.areChildrenLoaded(this)) [ CD ]
