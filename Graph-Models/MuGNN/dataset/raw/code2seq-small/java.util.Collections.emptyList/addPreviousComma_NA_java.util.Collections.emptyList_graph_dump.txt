Line_2 $$ private static List<TextRange> addPreviousComma(PsiElement e, int cursorOffset) -->Line_5 $$ TextRange offsetRange = null[ CD ]
Line_26 $$ offsetRange = new TextRange(textRange.getStartOffset() - 1, textRange.getEndOffset())-->Line_30 $$ if (offsetRange != null) [ FD ]
Line_10 $$ ASTNode node = prevCommaSibling.getNode()-->Line_24 $$ IElementType commaType = node.getElementType()[ FD ]
Line_5 $$ TextRange offsetRange = null-->Line_15 $$ if (offsetRange.contains(cursorOffset) && offsetRange.getLength() > 1) [ FD ]
Line_31 $$ if (offsetRange.contains(cursorOffset) && offsetRange.getLength() > 1) -->Line_32 $$ return Collections.singletonList(offsetRange)[ CD ]
Line_13 $$ if (commaType == PyTokenTypes.COMMA) -->Line_15 $$ if (offsetRange.contains(cursorOffset) && offsetRange.getLength() > 1) [ CD ]
Line_2 $$ private static List<TextRange> addPreviousComma(PsiElement e, int cursorOffset) -->Line_3 $$ PsiElement prevSibling = e.getPrevSibling()[ CD ]
Line_9 $$ if (prevCommaSibling != null) -->Line_10 $$ ASTNode node = prevCommaSibling.getNode()[ CD ]
Line_7 $$ if (prevSibling instanceof PsiWhiteSpace) -->Line_22 $$ ASTNode node = prevSibling.getNode()[ CD ]
Line_8 $$ PsiElement prevCommaSibling = prevSibling.getPrevSibling()-->Line_10 $$ ASTNode node = prevCommaSibling.getNode()[ FD ]
Line_26 $$ offsetRange = new TextRange(textRange.getStartOffset() - 1, textRange.getEndOffset())-->Line_31 $$ if (offsetRange.contains(cursorOffset) && offsetRange.getLength() > 1) [ FD ]
Line_12 $$ IElementType commaType = node.getElementType()-->Line_13 $$ if (commaType == PyTokenTypes.COMMA) [ FD ]
Line_23 $$ if (node != null) -->Line_24 $$ IElementType commaType = node.getElementType()[ CD ]
Line_7 $$ if (prevSibling instanceof PsiWhiteSpace) -->Line_8 $$ PsiElement prevCommaSibling = prevSibling.getPrevSibling()[ CD ]
Line_2 $$ private static List<TextRange> addPreviousComma(PsiElement e, int cursorOffset) -->Line_31 $$ if (offsetRange.contains(cursorOffset) && offsetRange.getLength() > 1) [ FD ]
Line_26 $$ offsetRange = new TextRange(textRange.getStartOffset() - 1, textRange.getEndOffset())-->Line_32 $$ return Collections.singletonList(offsetRange)[ FD ]
Line_2 $$ private static List<TextRange> addPreviousComma(PsiElement e, int cursorOffset) -->Line_36 $$ return Collections.emptyList()[ CD ]
Line_5 $$ TextRange offsetRange = null-->Line_30 $$ if (offsetRange != null) [ FD ]
Line_15 $$ if (offsetRange.contains(cursorOffset) && offsetRange.getLength() > 1) -->Line_16 $$ return Collections.singletonList(offsetRange)[ CD ]
Line_14 $$ offsetRange = new TextRange(textRange.getStartOffset() - 2, textRange.getEndOffset())-->Line_31 $$ if (offsetRange.contains(cursorOffset) && offsetRange.getLength() > 1) [ FD ]
Line_10 $$ ASTNode node = prevCommaSibling.getNode()-->Line_12 $$ IElementType commaType = node.getElementType()[ FD ]
Line_2 $$ private static List<TextRange> addPreviousComma(PsiElement e, int cursorOffset) -->Line_6 $$ if (prevSibling != null) [ CD ]
Line_11 $$ if (node != null) -->Line_12 $$ IElementType commaType = node.getElementType()[ CD ]
Line_5 $$ TextRange offsetRange = null-->Line_16 $$ return Collections.singletonList(offsetRange)[ FD ]
Line_3 $$ PsiElement prevSibling = e.getPrevSibling()-->Line_22 $$ ASTNode node = prevSibling.getNode()[ FD ]
Line_2 $$ private static List<TextRange> addPreviousComma(PsiElement e, int cursorOffset) -->Line_4 $$ TextRange textRange = e.getTextRange()[ FD ]
Line_3 $$ PsiElement prevSibling = e.getPrevSibling()-->Line_6 $$ if (prevSibling != null) [ FD ]
Line_25 $$ if (commaType == PyTokenTypes.COMMA) -->Line_26 $$ offsetRange = new TextRange(textRange.getStartOffset() - 1, textRange.getEndOffset())[ CD ]
Line_2 $$ private static List<TextRange> addPreviousComma(PsiElement e, int cursorOffset) -->Line_3 $$ PsiElement prevSibling = e.getPrevSibling()[ FD ]
Line_14 $$ offsetRange = new TextRange(textRange.getStartOffset() - 2, textRange.getEndOffset())-->Line_16 $$ return Collections.singletonList(offsetRange)[ FD ]
Line_5 $$ TextRange offsetRange = null-->Line_32 $$ return Collections.singletonList(offsetRange)[ FD ]
Line_23 $$ if (node != null) -->Line_25 $$ if (commaType == PyTokenTypes.COMMA) [ CD ]
Line_14 $$ offsetRange = new TextRange(textRange.getStartOffset() - 2, textRange.getEndOffset())-->Line_30 $$ if (offsetRange != null) [ FD ]
Line_10 $$ ASTNode node = prevCommaSibling.getNode()-->Line_23 $$ if (node != null) [ FD ]
Line_9 $$ if (prevCommaSibling != null) -->Line_11 $$ if (node != null) [ CD ]
Line_6 $$ if (prevSibling != null) -->Line_30 $$ if (offsetRange != null) [ CD ]
Line_14 $$ offsetRange = new TextRange(textRange.getStartOffset() - 2, textRange.getEndOffset())-->Line_15 $$ if (offsetRange.contains(cursorOffset) && offsetRange.getLength() > 1) [ FD ]
Line_7 $$ if (prevSibling instanceof PsiWhiteSpace) -->Line_23 $$ if (node != null) [ CD ]
Line_5 $$ TextRange offsetRange = null-->Line_31 $$ if (offsetRange.contains(cursorOffset) && offsetRange.getLength() > 1) [ FD ]
Line_30 $$ if (offsetRange != null) -->Line_31 $$ if (offsetRange.contains(cursorOffset) && offsetRange.getLength() > 1) [ CD ]
Line_5 $$ TextRange offsetRange = null-->Line_14 $$ offsetRange = new TextRange(textRange.getStartOffset() - 2, textRange.getEndOffset())[ FD ]
Line_3 $$ PsiElement prevSibling = e.getPrevSibling()-->Line_8 $$ PsiElement prevCommaSibling = prevSibling.getPrevSibling()[ FD ]
Line_2 $$ private static List<TextRange> addPreviousComma(PsiElement e, int cursorOffset) -->Line_15 $$ if (offsetRange.contains(cursorOffset) && offsetRange.getLength() > 1) [ FD ]
Line_12 $$ IElementType commaType = node.getElementType()-->Line_25 $$ if (commaType == PyTokenTypes.COMMA) [ FD ]
Line_6 $$ if (prevSibling != null) -->Line_7 $$ if (prevSibling instanceof PsiWhiteSpace) [ CD ]
Line_4 $$ TextRange textRange = e.getTextRange()-->Line_26 $$ offsetRange = new TextRange(textRange.getStartOffset() - 1, textRange.getEndOffset())[ FD ]
Line_14 $$ offsetRange = new TextRange(textRange.getStartOffset() - 2, textRange.getEndOffset())-->Line_26 $$ offsetRange = new TextRange(textRange.getStartOffset() - 1, textRange.getEndOffset())[ FD ]
Line_2 $$ private static List<TextRange> addPreviousComma(PsiElement e, int cursorOffset) -->Line_4 $$ TextRange textRange = e.getTextRange()[ CD ]
Line_3 $$ PsiElement prevSibling = e.getPrevSibling()-->Line_7 $$ if (prevSibling instanceof PsiWhiteSpace) [ FD ]
Line_5 $$ TextRange offsetRange = null-->Line_26 $$ offsetRange = new TextRange(textRange.getStartOffset() - 1, textRange.getEndOffset())[ FD ]
Line_4 $$ TextRange textRange = e.getTextRange()-->Line_14 $$ offsetRange = new TextRange(textRange.getStartOffset() - 2, textRange.getEndOffset())[ FD ]
Line_8 $$ PsiElement prevCommaSibling = prevSibling.getPrevSibling()-->Line_9 $$ if (prevCommaSibling != null) [ FD ]
Line_11 $$ if (node != null) -->Line_13 $$ if (commaType == PyTokenTypes.COMMA) [ CD ]
Line_10 $$ ASTNode node = prevCommaSibling.getNode()-->Line_11 $$ if (node != null) [ FD ]
Line_14 $$ offsetRange = new TextRange(textRange.getStartOffset() - 2, textRange.getEndOffset())-->Line_32 $$ return Collections.singletonList(offsetRange)[ FD ]
Line_7 $$ if (prevSibling instanceof PsiWhiteSpace) -->Line_9 $$ if (prevCommaSibling != null) [ CD ]
Line_13 $$ if (commaType == PyTokenTypes.COMMA) -->Line_14 $$ offsetRange = new TextRange(textRange.getStartOffset() - 2, textRange.getEndOffset())[ CD ]
