Line_7 $$ List<Organization> organizations = user.getOrganizations()-->Line_8 $$ Assert.assertEquals(0, organizations.size())[ FD ]
Line_2 $$ public void testUnassignUserFromRequiredOrganizations() throws Exception -->Line_14 $$ organizations = user.getOrganizations()[ CD ]
Line_11 $$ organizations = user.getOrganizations()-->Line_14 $$ organizations = user.getOrganizations()[ FD ]
Line_9 $$ long[] userOrganizationIds = ArrayUtil.append(standardOrganizationIds, requiredOrganizationIds)-->Line_10 $$ MembershipPolicyTestUtil.updateUser(user, userOrganizationIds, null, null, null, Collections.<UserGroupRole>emptyList())[ FD ]
Line_7 $$ List<Organization> organizations = user.getOrganizations()-->Line_15 $$ Assert.assertEquals(requiredOrganizationIds.length, organizations.size())[ FD ]
Line_11 $$ organizations = user.getOrganizations()-->Line_12 $$ Assert.assertEquals(userOrganizationIds.length, organizations.size())[ FD ]
Line_7 $$ List<Organization> organizations = user.getOrganizations()-->Line_11 $$ organizations = user.getOrganizations()[ FD ]
Line_2 $$ public void testUnassignUserFromRequiredOrganizations() throws Exception -->Line_12 $$ Assert.assertEquals(userOrganizationIds.length, organizations.size())[ CD ]
Line_2 $$ public void testUnassignUserFromRequiredOrganizations() throws Exception -->Line_9 $$ long[] userOrganizationIds = ArrayUtil.append(standardOrganizationIds, requiredOrganizationIds)[ CD ]
Line_6 $$ User user = UserLocalServiceUtil.getUser(userIds[0])-->Line_7 $$ List<Organization> organizations = user.getOrganizations()[ FD ]
Line_2 $$ public void testUnassignUserFromRequiredOrganizations() throws Exception -->Line_4 $$ long[] standardOrganizationIds = addStandardOrganizations()[ CD ]
Line_14 $$ organizations = user.getOrganizations()-->Line_15 $$ Assert.assertEquals(requiredOrganizationIds.length, organizations.size())[ FD ]
Line_6 $$ User user = UserLocalServiceUtil.getUser(userIds[0])-->Line_10 $$ MembershipPolicyTestUtil.updateUser(user, userOrganizationIds, null, null, null, Collections.<UserGroupRole>emptyList())[ FD ]
Line_2 $$ public void testUnassignUserFromRequiredOrganizations() throws Exception -->Line_15 $$ Assert.assertEquals(requiredOrganizationIds.length, organizations.size())[ CD ]
Line_6 $$ User user = UserLocalServiceUtil.getUser(userIds[0])-->Line_11 $$ organizations = user.getOrganizations()[ FD ]
Line_5 $$ long[] requiredOrganizationIds = addRequiredOrganizations()-->Line_9 $$ long[] userOrganizationIds = ArrayUtil.append(standardOrganizationIds, requiredOrganizationIds)[ FD ]
Line_4 $$ long[] standardOrganizationIds = addStandardOrganizations()-->Line_9 $$ long[] userOrganizationIds = ArrayUtil.append(standardOrganizationIds, requiredOrganizationIds)[ FD ]
Line_7 $$ List<Organization> organizations = user.getOrganizations()-->Line_14 $$ organizations = user.getOrganizations()[ FD ]
Line_2 $$ public void testUnassignUserFromRequiredOrganizations() throws Exception -->Line_7 $$ List<Organization> organizations = user.getOrganizations()[ CD ]
Line_2 $$ public void testUnassignUserFromRequiredOrganizations() throws Exception -->Line_11 $$ organizations = user.getOrganizations()[ CD ]
Line_2 $$ public void testUnassignUserFromRequiredOrganizations() throws Exception -->Line_6 $$ User user = UserLocalServiceUtil.getUser(userIds[0])[ CD ]
Line_11 $$ organizations = user.getOrganizations()-->Line_15 $$ Assert.assertEquals(requiredOrganizationIds.length, organizations.size())[ FD ]
Line_2 $$ public void testUnassignUserFromRequiredOrganizations() throws Exception -->Line_5 $$ long[] requiredOrganizationIds = addRequiredOrganizations()[ CD ]
Line_2 $$ public void testUnassignUserFromRequiredOrganizations() throws Exception -->Line_3 $$ long[] userIds = addUsers()[ CD ]
Line_2 $$ public void testUnassignUserFromRequiredOrganizations() throws Exception -->Line_13 $$ MembershipPolicyTestUtil.updateUser(user, requiredOrganizationIds, null, null, null, Collections.<UserGroupRole>emptyList())[ CD ]
Line_5 $$ long[] requiredOrganizationIds = addRequiredOrganizations()-->Line_13 $$ MembershipPolicyTestUtil.updateUser(user, requiredOrganizationIds, null, null, null, Collections.<UserGroupRole>emptyList())[ FD ]
Line_6 $$ User user = UserLocalServiceUtil.getUser(userIds[0])-->Line_13 $$ MembershipPolicyTestUtil.updateUser(user, requiredOrganizationIds, null, null, null, Collections.<UserGroupRole>emptyList())[ FD ]
Line_2 $$ public void testUnassignUserFromRequiredOrganizations() throws Exception -->Line_10 $$ MembershipPolicyTestUtil.updateUser(user, userOrganizationIds, null, null, null, Collections.<UserGroupRole>emptyList())[ CD ]
Line_7 $$ List<Organization> organizations = user.getOrganizations()-->Line_12 $$ Assert.assertEquals(userOrganizationIds.length, organizations.size())[ FD ]
Line_2 $$ public void testUnassignUserFromRequiredOrganizations() throws Exception -->Line_8 $$ Assert.assertEquals(0, organizations.size())[ CD ]
Line_6 $$ User user = UserLocalServiceUtil.getUser(userIds[0])-->Line_14 $$ organizations = user.getOrganizations()[ FD ]
