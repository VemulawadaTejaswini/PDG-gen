Line_26 $$ myLocalesModel = new CollectionListModel<Locale>(locales) -->Line_31 $$ elements = ContainerUtil.filter(elements, new Condition<Locale>() [ FD ]
Line_26 $$ myLocalesModel = new CollectionListModel<Locale>(locales) -->Line_38 $$ super.add(elements)[ CD ]
Line_57 $$ myNewBundleLocalesPanel = ToolbarDecorator.createDecorator(localesToAddList).setAddAction(new AnActionButtonRunnable() -->Line_79 $$ if (rawAddedLocales != null) [ CD ]
Line_88 $$ new ClickListener() -->Line_92 $$ if (clickCount == 1) [ CD ]
Line_26 $$ myLocalesModel = new CollectionListModel<Locale>(locales) -->Line_38 $$ super.add(elements)[ FD ]
Line_79 $$ if (rawAddedLocales != null) -->Line_80 $$ final List<Locale> locales = extractLocalesFromString(rawAddedLocales)[ CD ]
Line_105 $$ projectExistLocalesList.addListSelectionListener(new ListSelectionListener() -->Line_109 $$ final List<Locale> currentItems = myLocalesModel.getItems()[ CD ]
Line_122 $$ new ClickListener() -->Line_126 $$ if (clickCount == 1) [ FD ]
Line_10 $$ final JBList localesToAddList = new JBList()-->Line_41 $$ localesToAddList.setModel(myLocalesModel)[ FD ]
Line_4 $$ final JBList projectExistLocalesList = new JBList()-->Line_7 $$ projectExistLocalesList.setCellRenderer(getLocaleRenderer())[ FD ]
Line_30 $$ final List<Locale> currentItems = getItems()-->Line_112 $$ if (!restrictedLocales.contains(l) && !currentItems.contains(l)) [ FD ]
Line_5 $$ final MyExistLocalesListModel existLocalesListModel = new MyExistLocalesListModel()-->Line_6 $$ projectExistLocalesList.setModel(existLocalesListModel)[ FD ]
Line_12 $$ final List<Locale> restrictedLocales-->Line_35 $$ return !restrictedLocales.contains(locale) && !currentItems.contains(locale)[ FD ]
Line_11 $$ final List<Locale> locales-->Line_82 $$ myLocalesModel.add(locales)[ FD ]
Line_15 $$ restrictedLocales = Collections.emptyList()-->Line_18 $$ restrictedLocales = ContainerUtil.map(myResourceBundle.getPropertiesFiles(), new Function<PropertiesFile, Locale>() [ FD ]
Line_79 $$ if (rawAddedLocales != null) -->Line_82 $$ myLocalesModel.add(locales)[ CD ]
Line_61 $$ final String rawAddedLocales = Messages.showInputDialog(myProject, PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.message"), PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.title"), null, null, new InputValidatorEx() -->Line_71 $$ return extractLocalesFromString(inputString) != null[ CD ]
Line_92 $$ if (clickCount == 1) -->Line_100 $$ return true[ CD ]
Line_122 $$ new ClickListener() -->Line_129 $$ return false[ CD ]
Line_88 $$ new ClickListener() -->Line_102 $$ return false[ CD ]
Line_30 $$ final List<Locale> currentItems = getItems()-->Line_35 $$ return !restrictedLocales.contains(locale) && !currentItems.contains(locale)[ FD ]
Line_17 $$ locales = Collections.emptyList()-->Line_82 $$ myLocalesModel.add(locales)[ FD ]
Line_10 $$ final JBList localesToAddList = new JBList()-->Line_54 $$ localesToAddList.clearSelection()[ FD ]
Line_13 $$ if (myResourceBundle == null) -->Line_14 $$ locales = Collections.singletonList(PropertiesUtil.DEFAULT_LOCALE)[ CD ]
Line_88 $$ new ClickListener() -->Line_126 $$ if (clickCount == 1) [ FD ]
Line_10 $$ final JBList localesToAddList = new JBList()-->Line_43 $$ localesToAddList.addFocusListener(new FocusAdapter() [ FD ]
Line_112 $$ if (!restrictedLocales.contains(l) && !currentItems.contains(l)) -->Line_113 $$ myAddLocaleFromExistButton.setEnabled(true)[ CD ]
Line_31 $$ elements = ContainerUtil.filter(elements, new Condition<Locale>() -->Line_35 $$ return !restrictedLocales.contains(locale) && !currentItems.contains(locale)[ CD ]
Line_50 $$ projectExistLocalesList.addFocusListener(new FocusAdapter() -->Line_54 $$ localesToAddList.clearSelection()[ CD ]
Line_126 $$ if (clickCount == 1) -->Line_127 $$ myLocalesModel.add(existLocalesListModel.getLocales())[ CD ]
Line_4 $$ final JBList projectExistLocalesList = new JBList()-->Line_8 $$ myProjectExistLocalesPanel = ToolbarDecorator.createDecorator(projectExistLocalesList).disableRemoveAction().disableUpDownActions().createPanel()[ FD ]
Line_61 $$ final String rawAddedLocales = Messages.showInputDialog(myProject, PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.message"), PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.title"), null, null, new InputValidatorEx() -->Line_76 $$ return checkInput(inputString)[ CD ]
Line_12 $$ final List<Locale> restrictedLocales-->Line_112 $$ if (!restrictedLocales.contains(l) && !currentItems.contains(l)) [ FD ]
Line_10 $$ final JBList localesToAddList = new JBList()-->Line_42 $$ localesToAddList.setCellRenderer(getLocaleRenderer())[ FD ]
Line_61 $$ final String rawAddedLocales = Messages.showInputDialog(myProject, PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.message"), PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.title"), null, null, new InputValidatorEx() -->Line_66 $$ return checkInput(inputString) ? null : "Invalid locales"[ FD ]
Line_13 $$ if (myResourceBundle == null) -->Line_17 $$ locales = Collections.emptyList()[ CD ]
Line_12 $$ final List<Locale> restrictedLocales-->Line_18 $$ restrictedLocales = ContainerUtil.map(myResourceBundle.getPropertiesFiles(), new Function<PropertiesFile, Locale>() [ FD ]
Line_4 $$ final JBList projectExistLocalesList = new JBList()-->Line_93 $$ myLocalesModel.add(ContainerUtil.map(projectExistLocalesList.getSelectedValues(), new Function<Object, Locale>() [ FD ]
Line_10 $$ final JBList localesToAddList = new JBList()-->Line_57 $$ myNewBundleLocalesPanel = ToolbarDecorator.createDecorator(localesToAddList).setAddAction(new AnActionButtonRunnable() [ FD ]
Line_26 $$ myLocalesModel = new CollectionListModel<Locale>(locales) -->Line_30 $$ final List<Locale> currentItems = getItems()[ CD ]
Line_18 $$ restrictedLocales = ContainerUtil.map(myResourceBundle.getPropertiesFiles(), new Function<PropertiesFile, Locale>() -->Line_112 $$ if (!restrictedLocales.contains(l) && !currentItems.contains(l)) [ FD ]
Line_4 $$ final JBList projectExistLocalesList = new JBList()-->Line_110 $$ for (Object o : projectExistLocalesList.getSelectedValues()) [ FD ]
Line_93 $$ myLocalesModel.add(ContainerUtil.map(projectExistLocalesList.getSelectedValues(), new Function<Object, Locale>() -->Line_97 $$ return (Locale) o[ CD ]
Line_79 $$ if (rawAddedLocales != null) -->Line_81 $$ LOG.assertTrue(locales != null)[ CD ]
Line_61 $$ final String rawAddedLocales = Messages.showInputDialog(myProject, PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.message"), PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.title"), null, null, new InputValidatorEx() -->Line_79 $$ if (rawAddedLocales != null) [ FD ]
Line_92 $$ if (clickCount == 1) -->Line_93 $$ myLocalesModel.add(ContainerUtil.map(projectExistLocalesList.getSelectedValues(), new Function<Object, Locale>() [ CD ]
Line_18 $$ restrictedLocales = ContainerUtil.map(myResourceBundle.getPropertiesFiles(), new Function<PropertiesFile, Locale>() -->Line_35 $$ return !restrictedLocales.contains(locale) && !currentItems.contains(locale)[ FD ]
Line_26 $$ myLocalesModel = new CollectionListModel<Locale>(locales) -->Line_31 $$ elements = ContainerUtil.filter(elements, new Condition<Locale>() [ CD ]
Line_4 $$ final JBList projectExistLocalesList = new JBList()-->Line_105 $$ projectExistLocalesList.addListSelectionListener(new ListSelectionListener() [ FD ]
Line_15 $$ restrictedLocales = Collections.emptyList()-->Line_35 $$ return !restrictedLocales.contains(locale) && !currentItems.contains(locale)[ FD ]
Line_61 $$ final String rawAddedLocales = Messages.showInputDialog(myProject, PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.message"), PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.title"), null, null, new InputValidatorEx() -->Line_80 $$ final List<Locale> locales = extractLocalesFromString(rawAddedLocales)[ FD ]
Line_14 $$ locales = Collections.singletonList(PropertiesUtil.DEFAULT_LOCALE)-->Line_82 $$ myLocalesModel.add(locales)[ FD ]
Line_109 $$ final List<Locale> currentItems = myLocalesModel.getItems()-->Line_112 $$ if (!restrictedLocales.contains(l) && !currentItems.contains(l)) [ FD ]
Line_18 $$ restrictedLocales = ContainerUtil.map(myResourceBundle.getPropertiesFiles(), new Function<PropertiesFile, Locale>() -->Line_22 $$ return propertiesFile.getLocale()[ CD ]
Line_11 $$ final List<Locale> locales-->Line_14 $$ locales = Collections.singletonList(PropertiesUtil.DEFAULT_LOCALE)[ FD ]
Line_14 $$ locales = Collections.singletonList(PropertiesUtil.DEFAULT_LOCALE)-->Line_17 $$ locales = Collections.emptyList()[ FD ]
Line_88 $$ new ClickListener() -->Line_92 $$ if (clickCount == 1) [ FD ]
Line_4 $$ final JBList projectExistLocalesList = new JBList()-->Line_50 $$ projectExistLocalesList.addFocusListener(new FocusAdapter() [ FD ]
Line_61 $$ final String rawAddedLocales = Messages.showInputDialog(myProject, PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.message"), PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.title"), null, null, new InputValidatorEx() -->Line_71 $$ return extractLocalesFromString(inputString) != null[ FD ]
Line_122 $$ new ClickListener() -->Line_126 $$ if (clickCount == 1) [ CD ]
Line_4 $$ final JBList projectExistLocalesList = new JBList()-->Line_6 $$ projectExistLocalesList.setModel(existLocalesListModel)[ FD ]
Line_61 $$ final String rawAddedLocales = Messages.showInputDialog(myProject, PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.message"), PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.title"), null, null, new InputValidatorEx() -->Line_66 $$ return checkInput(inputString) ? null : "Invalid locales"[ CD ]
Line_11 $$ final List<Locale> locales-->Line_17 $$ locales = Collections.emptyList()[ FD ]
Line_105 $$ projectExistLocalesList.addListSelectionListener(new ListSelectionListener() -->Line_117 $$ myAddLocaleFromExistButton.setEnabled(false)[ CD ]
Line_43 $$ localesToAddList.addFocusListener(new FocusAdapter() -->Line_47 $$ projectExistLocalesList.clearSelection()[ CD ]
Line_111 $$ Locale l = (Locale) o-->Line_112 $$ if (!restrictedLocales.contains(l) && !currentItems.contains(l)) [ FD ]
Line_15 $$ restrictedLocales = Collections.emptyList()-->Line_112 $$ if (!restrictedLocales.contains(l) && !currentItems.contains(l)) [ FD ]
Line_18 $$ restrictedLocales = ContainerUtil.map(myResourceBundle.getPropertiesFiles(), new Function<PropertiesFile, Locale>() -->Line_22 $$ return propertiesFile.getLocale()[ FD ]
Line_5 $$ final MyExistLocalesListModel existLocalesListModel = new MyExistLocalesListModel()-->Line_127 $$ myLocalesModel.add(existLocalesListModel.getLocales())[ FD ]
Line_13 $$ if (myResourceBundle == null) -->Line_18 $$ restrictedLocales = ContainerUtil.map(myResourceBundle.getPropertiesFiles(), new Function<PropertiesFile, Locale>() [ CD ]
Line_4 $$ final JBList projectExistLocalesList = new JBList()-->Line_47 $$ projectExistLocalesList.clearSelection()[ FD ]
Line_31 $$ elements = ContainerUtil.filter(elements, new Condition<Locale>() -->Line_35 $$ return !restrictedLocales.contains(locale) && !currentItems.contains(locale)[ FD ]
Line_13 $$ if (myResourceBundle == null) -->Line_15 $$ restrictedLocales = Collections.emptyList()[ CD ]
Line_61 $$ final String rawAddedLocales = Messages.showInputDialog(myProject, PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.message"), PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.title"), null, null, new InputValidatorEx() -->Line_76 $$ return checkInput(inputString)[ FD ]
Line_57 $$ myNewBundleLocalesPanel = ToolbarDecorator.createDecorator(localesToAddList).setAddAction(new AnActionButtonRunnable() -->Line_61 $$ final String rawAddedLocales = Messages.showInputDialog(myProject, PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.message"), PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.title"), null, null, new InputValidatorEx() [ CD ]
Line_12 $$ final List<Locale> restrictedLocales-->Line_15 $$ restrictedLocales = Collections.emptyList()[ FD ]
Line_112 $$ if (!restrictedLocales.contains(l) && !currentItems.contains(l)) -->Line_114 $$ return[ CD ]
