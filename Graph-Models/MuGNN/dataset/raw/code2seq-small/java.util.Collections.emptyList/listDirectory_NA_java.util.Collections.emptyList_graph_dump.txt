Line_15 $$ final ArrayList<FileStatus> files = new ArrayList<FileStatus>()-->Line_60 $$ files.add(objectMetadata)[ FD ]
Line_38 $$ FileStatus stat = getObjectMetadata(correctSwiftPath, newest)-->Line_44 $$ files.add(stat)[ FD ]
Line_20 $$ if (LOG.isDebugEnabled()) -->Line_21 $$ LOG.debug("" + "File/Directory not found " + path)[ CD ]
Line_53 $$ final CollectionType collectionType = JSONUtil.getJsonMapper().getTypeFactory().constructCollectionType(List.class, SwiftObjectFileStatus.class)-->Line_54 $$ final List<SwiftObjectFileStatus> fileStatusList = JSONUtil.toObject(new String(bytes), collectionType)[ FD ]
Line_32 $$ if (SwiftUtils.isRootDir(path)) -->Line_38 $$ FileStatus stat = getObjectMetadata(correctSwiftPath, newest)[ CD ]
Line_32 $$ if (SwiftUtils.isRootDir(path)) -->Line_39 $$ if (stat.isDirectory()) [ CD ]
Line_15 $$ final ArrayList<FileStatus> files = new ArrayList<FileStatus>()-->Line_44 $$ files.add(stat)[ FD ]
Line_58 $$ SwiftFileStatus objectMetadata = getObjectMetadata(correctSwiftPath, newest)-->Line_60 $$ files.add(objectMetadata)[ FD ]
Line_23 $$ if (SwiftUtils.isRootDir(path)) -->Line_24 $$ return Collections.emptyList()[ CD ]
Line_39 $$ if (stat.isDirectory()) -->Line_44 $$ files.add(stat)[ CD ]
Line_58 $$ SwiftFileStatus objectMetadata = getObjectMetadata(correctSwiftPath, newest)-->Line_59 $$ if (objectMetadata.isFile()) [ FD ]
Line_64 $$ for (SwiftObjectFileStatus status : fileStatusList) -->Line_66 $$ files.add(new SwiftFileStatus(status.getBytes(), status.getBytes() == 0, 1, getBlocksize(), status.getLast_modified().getTime(), getCorrectSwiftPath(new Path(status.getName()))))[ FD ]
Line_39 $$ if (stat.isDirectory()) -->Line_41 $$ return Collections.emptyList()[ CD ]
Line_64 $$ for (SwiftObjectFileStatus status : fileStatusList) -->Line_65 $$ if (status.getName() != null) [ FD ]
Line_30 $$ if (e.getStatusCode() == HttpStatus.SC_NO_CONTENT) -->Line_32 $$ if (SwiftUtils.isRootDir(path)) [ CD ]
Line_15 $$ final ArrayList<FileStatus> files = new ArrayList<FileStatus>()-->Line_66 $$ files.add(new SwiftFileStatus(status.getBytes(), status.getBytes() == 0, 1, getBlocksize(), status.getLast_modified().getTime(), getCorrectSwiftPath(new Path(status.getName()))))[ FD ]
Line_65 $$ if (status.getName() != null) -->Line_66 $$ files.add(new SwiftFileStatus(status.getBytes(), status.getBytes() == 0, 1, getBlocksize(), status.getLast_modified().getTime(), getCorrectSwiftPath(new Path(status.getName()))))[ CD ]
Line_38 $$ FileStatus stat = getObjectMetadata(correctSwiftPath, newest)-->Line_39 $$ if (stat.isDirectory()) [ FD ]
Line_16 $$ final Path correctSwiftPath = getCorrectSwiftPath(path)-->Line_38 $$ FileStatus stat = getObjectMetadata(correctSwiftPath, newest)[ FD ]
Line_59 $$ if (objectMetadata.isFile()) -->Line_60 $$ files.add(objectMetadata)[ CD ]
Line_14 $$ final byte[] bytes-->Line_18 $$ bytes = swiftRestClient.listDeepObjectsInDirectory(path, listDeep)[ FD ]
Line_16 $$ final Path correctSwiftPath = getCorrectSwiftPath(path)-->Line_58 $$ SwiftFileStatus objectMetadata = getObjectMetadata(correctSwiftPath, newest)[ FD ]
Line_32 $$ if (SwiftUtils.isRootDir(path)) -->Line_33 $$ return Collections.emptyList()[ CD ]
Line_39 $$ if (stat.isDirectory()) -->Line_45 $$ return files[ CD ]
