Line_8 $$ List<Group> groups = user.getGroups()-->Line_9 $$ Assert.assertEquals(1, groups.size())[ FD ]
Line_5 $$ long[] standardGroupIds = addStandardGroups()-->Line_10 $$ long[] userGroupIds = ArrayUtil.append(standardGroupIds, requiredGroupIds, new long[] [ FD ]
Line_10 $$ long[] userGroupIds = ArrayUtil.append(standardGroupIds, requiredGroupIds, new long[] -->Line_11 $$ MembershipPolicyTestUtil.updateUser(user, null, null, userGroupIds, null, Collections.<UserGroupRole>emptyList())[ FD ]
Line_7 $$ User user = UserLocalServiceUtil.getUser(userIds[0])-->Line_12 $$ groups = user.getGroups()[ FD ]
Line_12 $$ groups = user.getGroups()-->Line_15 $$ groups = user.getGroups()[ FD ]
Line_6 $$ long[] requiredGroupIds = addRequiredGroups()-->Line_10 $$ long[] userGroupIds = ArrayUtil.append(standardGroupIds, requiredGroupIds, new long[] [ FD ]
Line_12 $$ groups = user.getGroups()-->Line_16 $$ Assert.assertEquals(userGroupIds.length - 1, groups.size())[ FD ]
Line_8 $$ List<Group> groups = user.getGroups()-->Line_12 $$ groups = user.getGroups()[ FD ]
Line_8 $$ List<Group> groups = user.getGroups()-->Line_15 $$ groups = user.getGroups()[ FD ]
Line_7 $$ User user = UserLocalServiceUtil.getUser(userIds[0])-->Line_11 $$ MembershipPolicyTestUtil.updateUser(user, null, null, userGroupIds, null, Collections.<UserGroupRole>emptyList())[ FD ]
Line_7 $$ User user = UserLocalServiceUtil.getUser(userIds[0])-->Line_8 $$ List<Group> groups = user.getGroups()[ FD ]
Line_7 $$ User user = UserLocalServiceUtil.getUser(userIds[0])-->Line_14 $$ MembershipPolicyTestUtil.updateUser(user, null, null, standardGroupIds, null, Collections.<UserGroupRole>emptyList())[ FD ]
Line_15 $$ groups = user.getGroups()-->Line_16 $$ Assert.assertEquals(userGroupIds.length - 1, groups.size())[ FD ]
Line_8 $$ List<Group> groups = user.getGroups()-->Line_16 $$ Assert.assertEquals(userGroupIds.length - 1, groups.size())[ FD ]
Line_7 $$ User user = UserLocalServiceUtil.getUser(userIds[0])-->Line_10 $$ long[] userGroupIds = ArrayUtil.append(standardGroupIds, requiredGroupIds, new long[] [ FD ]
Line_8 $$ List<Group> groups = user.getGroups()-->Line_13 $$ Assert.assertEquals(userGroupIds.length, groups.size())[ FD ]
Line_12 $$ groups = user.getGroups()-->Line_13 $$ Assert.assertEquals(userGroupIds.length, groups.size())[ FD ]
Line_5 $$ long[] standardGroupIds = addStandardGroups()-->Line_14 $$ MembershipPolicyTestUtil.updateUser(user, null, null, standardGroupIds, null, Collections.<UserGroupRole>emptyList())[ FD ]
Line_7 $$ User user = UserLocalServiceUtil.getUser(userIds[0])-->Line_15 $$ groups = user.getGroups()[ FD ]
