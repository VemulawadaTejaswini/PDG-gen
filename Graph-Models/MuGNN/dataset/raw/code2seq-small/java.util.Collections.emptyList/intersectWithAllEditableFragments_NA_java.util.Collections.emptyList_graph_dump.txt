Line_7 $$ int count = 0-->Line_14 $$ if (count == 1) [ FD ]
Line_18 $$ if (range.isEmpty()) -->Line_21 $$ if (intersection.isEmpty()) [ CD ]
Line_16 $$ if (count == 2) -->Line_18 $$ if (range.isEmpty()) [ CD ]
Line_7 $$ int count = 0-->Line_22 $$ count = 1[ FD ]
Line_24 $$ List<TextRange> list = new ArrayList<TextRange>()-->Line_25 $$ list.add(range)[ FD ]
Line_7 $$ int count = 0-->Line_20 $$ count = 1[ FD ]
Line_15 $$ result = intersection-->Line_27 $$ result = list[ FD ]
Line_29 $$ if (intersection.isEmpty()) -->Line_32 $$ ((List<TextRange>) result).add(intersection)[ CD ]
Line_21 $$ if (intersection.isEmpty()) -->Line_27 $$ result = list[ CD ]
Line_14 $$ if (count == 1) -->Line_15 $$ result = intersection[ CD ]
Line_8 $$ int offset = 0-->Line_35 $$ offset += shred.getPrefix().length() + shred.getRangeInsideHost().getLength() + shred.getSuffix().length()[ FD ]
Line_11 $$ TextRange intersection = encodedRange.intersection(rangeToEdit)-->Line_12 $$ if (intersection != null) [ FD ]
Line_2 $$ public List<TextRange> intersectWithAllEditableFragments(@NotNull PsiFile injectedPsi, @NotNull TextRange rangeToEdit) -->Line_6 $$ Object result = null[ CD ]
Line_20 $$ count = 1-->Line_30 $$ count--[ FD ]
Line_17 $$ TextRange range = (TextRange) result-->Line_18 $$ if (range.isEmpty()) [ FD ]
Line_6 $$ Object result = null-->Line_15 $$ result = intersection[ FD ]
Line_2 $$ public List<TextRange> intersectWithAllEditableFragments(@NotNull PsiFile injectedPsi, @NotNull TextRange rangeToEdit) -->Line_11 $$ TextRange intersection = encodedRange.intersection(rangeToEdit)[ FD ]
Line_20 $$ count = 1-->Line_22 $$ count = 1[ FD ]
Line_2 $$ public List<TextRange> intersectWithAllEditableFragments(@NotNull PsiFile injectedPsi, @NotNull TextRange rangeToEdit) -->Line_3 $$ Place shreds = InjectedLanguageUtil.getShreds(injectedPsi)[ CD ]
Line_3 $$ Place shreds = InjectedLanguageUtil.getShreds(injectedPsi)-->Line_4 $$ if (shreds == null)[ FD ]
Line_2 $$ public List<TextRange> intersectWithAllEditableFragments(@NotNull PsiFile injectedPsi, @NotNull TextRange rangeToEdit) -->Line_4 $$ if (shreds == null)[ CD ]
Line_21 $$ if (intersection.isEmpty()) -->Line_22 $$ count = 1[ CD ]
Line_16 $$ if (count == 2) -->Line_29 $$ if (intersection.isEmpty()) [ CD ]
Line_19 $$ result = intersection-->Line_27 $$ result = list[ FD ]
Line_29 $$ if (intersection.isEmpty()) -->Line_30 $$ count--[ CD ]
Line_11 $$ TextRange intersection = encodedRange.intersection(rangeToEdit)-->Line_19 $$ result = intersection[ FD ]
Line_24 $$ List<TextRange> list = new ArrayList<TextRange>()-->Line_26 $$ list.add(intersection)[ FD ]
Line_9 $$ for (PsiLanguageInjectionHost.Shred shred : shreds) -->Line_35 $$ offset += shred.getPrefix().length() + shred.getRangeInsideHost().getLength() + shred.getSuffix().length()[ FD ]
Line_18 $$ if (range.isEmpty()) -->Line_20 $$ count = 1[ CD ]
Line_21 $$ if (intersection.isEmpty()) -->Line_25 $$ list.add(range)[ CD ]
Line_16 $$ if (count == 2) -->Line_17 $$ TextRange range = (TextRange) result[ CD ]
Line_10 $$ TextRange encodedRange = TextRange.from(offset + shred.getPrefix().length(), shred.getRangeInsideHost().getLength())-->Line_11 $$ TextRange intersection = encodedRange.intersection(rangeToEdit)[ FD ]
Line_24 $$ List<TextRange> list = new ArrayList<TextRange>()-->Line_27 $$ result = list[ FD ]
Line_6 $$ Object result = null-->Line_27 $$ result = list[ FD ]
Line_7 $$ int count = 0-->Line_16 $$ if (count == 2) [ FD ]
Line_11 $$ TextRange intersection = encodedRange.intersection(rangeToEdit)-->Line_21 $$ if (intersection.isEmpty()) [ FD ]
Line_2 $$ public List<TextRange> intersectWithAllEditableFragments(@NotNull PsiFile injectedPsi, @NotNull TextRange rangeToEdit) -->Line_3 $$ Place shreds = InjectedLanguageUtil.getShreds(injectedPsi)[ FD ]
Line_9 $$ for (PsiLanguageInjectionHost.Shred shred : shreds) -->Line_10 $$ TextRange encodedRange = TextRange.from(offset + shred.getPrefix().length(), shred.getRangeInsideHost().getLength())[ FD ]
Line_22 $$ count = 1-->Line_30 $$ count--[ FD ]
Line_2 $$ public List<TextRange> intersectWithAllEditableFragments(@NotNull PsiFile injectedPsi, @NotNull TextRange rangeToEdit) -->Line_8 $$ int offset = 0[ CD ]
Line_11 $$ TextRange intersection = encodedRange.intersection(rangeToEdit)-->Line_26 $$ list.add(intersection)[ FD ]
Line_12 $$ if (intersection != null) -->Line_14 $$ if (count == 1) [ CD ]
Line_11 $$ TextRange intersection = encodedRange.intersection(rangeToEdit)-->Line_15 $$ result = intersection[ FD ]
Line_2 $$ public List<TextRange> intersectWithAllEditableFragments(@NotNull PsiFile injectedPsi, @NotNull TextRange rangeToEdit) -->Line_7 $$ int count = 0[ CD ]
Line_17 $$ TextRange range = (TextRange) result-->Line_25 $$ list.add(range)[ FD ]
Line_6 $$ Object result = null-->Line_19 $$ result = intersection[ FD ]
Line_12 $$ if (intersection != null) -->Line_13 $$ count++[ CD ]
Line_4 $$ if (shreds == null)-->Line_5 $$ return Collections.emptyList()[ CD ]
Line_7 $$ int count = 0-->Line_30 $$ count--[ FD ]
Line_11 $$ TextRange intersection = encodedRange.intersection(rangeToEdit)-->Line_32 $$ ((List<TextRange>) result).add(intersection)[ FD ]
Line_21 $$ if (intersection.isEmpty()) -->Line_24 $$ List<TextRange> list = new ArrayList<TextRange>()[ CD ]
Line_14 $$ if (count == 1) -->Line_16 $$ if (count == 2) [ CD ]
Line_11 $$ TextRange intersection = encodedRange.intersection(rangeToEdit)-->Line_29 $$ if (intersection.isEmpty()) [ FD ]
Line_2 $$ public List<TextRange> intersectWithAllEditableFragments(@NotNull PsiFile injectedPsi, @NotNull TextRange rangeToEdit) -->Line_37 $$ return count == 0 ? Collections.<TextRange>emptyList() : count == 1 ? Collections.singletonList((TextRange) result) : (List<TextRange>) result[ CD ]
Line_7 $$ int count = 0-->Line_13 $$ count++[ FD ]
Line_21 $$ if (intersection.isEmpty()) -->Line_26 $$ list.add(intersection)[ CD ]
Line_15 $$ result = intersection-->Line_19 $$ result = intersection[ FD ]
Line_18 $$ if (range.isEmpty()) -->Line_19 $$ result = intersection[ CD ]
