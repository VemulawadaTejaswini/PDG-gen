Line_8 $$ List<MethodContract> result = RecursionManager.doPreventingRecursion(method, true, new Computable<List<MethodContract>>() -->Line_10 $$ return new ContractInferenceInterpreter(method).inferContracts()[ CD ]
Line_2 $$ public static List<MethodContract> inferContracts(@NotNull final PsiMethod method) -->Line_15 $$ return Result.create(result, method, PsiModificationTracker.JAVA_STRUCTURE_MODIFICATION_COUNT)[ FD ]
Line_2 $$ public static List<MethodContract> inferContracts(@NotNull final PsiMethod method) -->Line_6 $$ return CachedValuesManager.getCachedValue(method, new CachedValueProvider<List<MethodContract>>() [ FD ]
Line_2 $$ public static List<MethodContract> inferContracts(@NotNull final PsiMethod method) -->Line_6 $$ return CachedValuesManager.getCachedValue(method, new CachedValueProvider<List<MethodContract>>() [ CD ]
Line_6 $$ return CachedValuesManager.getCachedValue(method, new CachedValueProvider<List<MethodContract>>() -->Line_8 $$ List<MethodContract> result = RecursionManager.doPreventingRecursion(method, true, new Computable<List<MethodContract>>() [ CD ]
Line_2 $$ public static List<MethodContract> inferContracts(@NotNull final PsiMethod method) -->Line_8 $$ List<MethodContract> result = RecursionManager.doPreventingRecursion(method, true, new Computable<List<MethodContract>>() [ FD ]
Line_6 $$ return CachedValuesManager.getCachedValue(method, new CachedValueProvider<List<MethodContract>>() -->Line_13 $$ if (result == null)[ CD ]
Line_13 $$ if (result == null)-->Line_14 $$ result = Collections.emptyList()[ CD ]
Line_6 $$ return CachedValuesManager.getCachedValue(method, new CachedValueProvider<List<MethodContract>>() -->Line_15 $$ return Result.create(result, method, PsiModificationTracker.JAVA_STRUCTURE_MODIFICATION_COUNT)[ CD ]
Line_8 $$ List<MethodContract> result = RecursionManager.doPreventingRecursion(method, true, new Computable<List<MethodContract>>() -->Line_13 $$ if (result == null)[ FD ]
Line_8 $$ List<MethodContract> result = RecursionManager.doPreventingRecursion(method, true, new Computable<List<MethodContract>>() -->Line_15 $$ return Result.create(result, method, PsiModificationTracker.JAVA_STRUCTURE_MODIFICATION_COUNT)[ FD ]
Line_2 $$ public static List<MethodContract> inferContracts(@NotNull final PsiMethod method) -->Line_3 $$ if (!InferenceFromSourceUtil.shouldInferFromSource(method)) [ CD ]
Line_2 $$ public static List<MethodContract> inferContracts(@NotNull final PsiMethod method) -->Line_3 $$ if (!InferenceFromSourceUtil.shouldInferFromSource(method)) [ FD ]
Line_3 $$ if (!InferenceFromSourceUtil.shouldInferFromSource(method)) -->Line_4 $$ return Collections.emptyList()[ CD ]
