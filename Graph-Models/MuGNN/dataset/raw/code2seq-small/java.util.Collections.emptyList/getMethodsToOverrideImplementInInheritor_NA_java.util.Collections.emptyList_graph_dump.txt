Line_21 $$ for (int i = 0, resultSize = result.size(); i < resultSize; i++) -->Line_22 $$ Pair<PsiMethod, PsiSubstitutor> pair = result.get(i)[ FD ]
Line_2 $$ public static List<Pair<PsiMethod, PsiSubstitutor>> getMethodsToOverrideImplementInInheritor(PsiClassType classType, boolean toImplement) -->Line_8 $$ List<Pair<PsiMethod, PsiSubstitutor>> over = getMethodsToOverrideImplement(psiClass, false)[ CD ]
Line_13 $$ for (Iterator<Pair<PsiMethod, PsiSubstitutor>> iterator = impl.iterator(); iterator.hasNext(); ) -->Line_16 $$ iterator.remove()[ FD ]
Line_4 $$ final PsiClass psiClass = resolveResult.getElement()-->Line_9 $$ List<Pair<PsiMethod, PsiSubstitutor>> impl = getMethodsToOverrideImplement(psiClass, true)[ FD ]
Line_21 $$ for (int i = 0, resultSize = result.size(); i < resultSize; i++) -->Line_23 $$ result.set(i, Pair.create(pair.first, resolveResult.getSubstitutor().putAll(pair.second)))[ FD ]
Line_13 $$ for (Iterator<Pair<PsiMethod, PsiSubstitutor>> iterator = impl.iterator(); iterator.hasNext(); ) -->Line_15 $$ if (hasTraitImplementation(pair.first)) [ CD ]
Line_2 $$ public static List<Pair<PsiMethod, PsiSubstitutor>> getMethodsToOverrideImplementInInheritor(PsiClassType classType, boolean toImplement) -->Line_25 $$ return result[ CD ]
Line_2 $$ public static List<Pair<PsiMethod, PsiSubstitutor>> getMethodsToOverrideImplementInInheritor(PsiClassType classType, boolean toImplement) -->Line_4 $$ final PsiClass psiClass = resolveResult.getElement()[ CD ]
Line_21 $$ for (int i = 0, resultSize = result.size(); i < resultSize; i++) -->Line_22 $$ Pair<PsiMethod, PsiSubstitutor> pair = result.get(i)[ CD ]
Line_3 $$ final PsiClassType.ClassResolveResult resolveResult = classType.resolveGenerics()-->Line_4 $$ final PsiClass psiClass = resolveResult.getElement()[ FD ]
Line_2 $$ public static List<Pair<PsiMethod, PsiSubstitutor>> getMethodsToOverrideImplementInInheritor(PsiClassType classType, boolean toImplement) -->Line_3 $$ final PsiClassType.ClassResolveResult resolveResult = classType.resolveGenerics()[ FD ]
Line_14 $$ Pair<PsiMethod, PsiSubstitutor> pair = iterator.next()-->Line_17 $$ over.add(pair)[ FD ]
Line_20 $$ final List<Pair<PsiMethod, PsiSubstitutor>> result = toImplement ? impl : over-->Line_23 $$ result.set(i, Pair.create(pair.first, resolveResult.getSubstitutor().putAll(pair.second)))[ FD ]
Line_20 $$ final List<Pair<PsiMethod, PsiSubstitutor>> result = toImplement ? impl : over-->Line_22 $$ Pair<PsiMethod, PsiSubstitutor> pair = result.get(i)[ FD ]
Line_2 $$ public static List<Pair<PsiMethod, PsiSubstitutor>> getMethodsToOverrideImplementInInheritor(PsiClassType classType, boolean toImplement) -->Line_21 $$ for (int i = 0, resultSize = result.size(); i < resultSize; i++) [ CD ]
Line_21 $$ for (int i = 0, resultSize = result.size(); i < resultSize; i++) -->Line_23 $$ result.set(i, Pair.create(pair.first, resolveResult.getSubstitutor().putAll(pair.second)))[ CD ]
Line_2 $$ public static List<Pair<PsiMethod, PsiSubstitutor>> getMethodsToOverrideImplementInInheritor(PsiClassType classType, boolean toImplement) -->Line_5 $$ if (psiClass == null) [ CD ]
Line_15 $$ if (hasTraitImplementation(pair.first)) -->Line_17 $$ over.add(pair)[ CD ]
Line_13 $$ for (Iterator<Pair<PsiMethod, PsiSubstitutor>> iterator = impl.iterator(); iterator.hasNext(); ) -->Line_14 $$ Pair<PsiMethod, PsiSubstitutor> pair = iterator.next()[ CD ]
Line_10 $$ for (PsiMethod method : psiClass.getMethods()) -->Line_11 $$ (method.hasModifierProperty(PsiModifier.ABSTRACT) ? impl : over).add(Pair.create(method, PsiSubstitutor.EMPTY))[ FD ]
Line_3 $$ final PsiClassType.ClassResolveResult resolveResult = classType.resolveGenerics()-->Line_23 $$ result.set(i, Pair.create(pair.first, resolveResult.getSubstitutor().putAll(pair.second)))[ FD ]
Line_4 $$ final PsiClass psiClass = resolveResult.getElement()-->Line_5 $$ if (psiClass == null) [ FD ]
Line_4 $$ final PsiClass psiClass = resolveResult.getElement()-->Line_10 $$ for (PsiMethod method : psiClass.getMethods()) [ FD ]
Line_13 $$ for (Iterator<Pair<PsiMethod, PsiSubstitutor>> iterator = impl.iterator(); iterator.hasNext(); ) -->Line_14 $$ Pair<PsiMethod, PsiSubstitutor> pair = iterator.next()[ FD ]
Line_4 $$ final PsiClass psiClass = resolveResult.getElement()-->Line_8 $$ List<Pair<PsiMethod, PsiSubstitutor>> over = getMethodsToOverrideImplement(psiClass, false)[ FD ]
Line_9 $$ List<Pair<PsiMethod, PsiSubstitutor>> impl = getMethodsToOverrideImplement(psiClass, true)-->Line_13 $$ for (Iterator<Pair<PsiMethod, PsiSubstitutor>> iterator = impl.iterator(); iterator.hasNext(); ) [ FD ]
Line_2 $$ public static List<Pair<PsiMethod, PsiSubstitutor>> getMethodsToOverrideImplementInInheritor(PsiClassType classType, boolean toImplement) -->Line_13 $$ for (Iterator<Pair<PsiMethod, PsiSubstitutor>> iterator = impl.iterator(); iterator.hasNext(); ) [ CD ]
Line_2 $$ public static List<Pair<PsiMethod, PsiSubstitutor>> getMethodsToOverrideImplementInInheritor(PsiClassType classType, boolean toImplement) -->Line_9 $$ List<Pair<PsiMethod, PsiSubstitutor>> impl = getMethodsToOverrideImplement(psiClass, true)[ CD ]
Line_20 $$ final List<Pair<PsiMethod, PsiSubstitutor>> result = toImplement ? impl : over-->Line_21 $$ for (int i = 0, resultSize = result.size(); i < resultSize; i++) [ FD ]
Line_2 $$ public static List<Pair<PsiMethod, PsiSubstitutor>> getMethodsToOverrideImplementInInheritor(PsiClassType classType, boolean toImplement) -->Line_20 $$ final List<Pair<PsiMethod, PsiSubstitutor>> result = toImplement ? impl : over[ CD ]
Line_8 $$ List<Pair<PsiMethod, PsiSubstitutor>> over = getMethodsToOverrideImplement(psiClass, false)-->Line_17 $$ over.add(pair)[ FD ]
Line_2 $$ public static List<Pair<PsiMethod, PsiSubstitutor>> getMethodsToOverrideImplementInInheritor(PsiClassType classType, boolean toImplement) -->Line_3 $$ final PsiClassType.ClassResolveResult resolveResult = classType.resolveGenerics()[ CD ]
Line_15 $$ if (hasTraitImplementation(pair.first)) -->Line_16 $$ iterator.remove()[ CD ]
Line_5 $$ if (psiClass == null) -->Line_6 $$ return Collections.emptyList()[ CD ]
