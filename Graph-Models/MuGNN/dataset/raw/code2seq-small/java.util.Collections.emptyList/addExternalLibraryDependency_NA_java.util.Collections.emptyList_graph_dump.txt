Line_19 $$ Library.ModifiableModel model = library.getModifiableModel()-->Line_21 $$ model.addRoot(url, OrderRootType.CLASSES)[ FD ]
Line_15 $$ new WriteAction() -->Line_23 $$ model.commit()[ CD ]
Line_12 $$ if (modules.size() == 1) -->Line_15 $$ new WriteAction() [ CD ]
Line_15 $$ new WriteAction() -->Line_19 $$ Library.ModifiableModel model = library.getModifiableModel()[ CD ]
Line_24 $$ for (Module module : modules) -->Line_25 $$ ModuleRootModificationUtil.addDependency(module, library, scope, false)[ FD ]
Line_9 $$ if (!classesRoots.isEmpty()) -->Line_12 $$ if (modules.size() == 1) [ CD ]
Line_19 $$ Library.ModifiableModel model = library.getModifiableModel()-->Line_23 $$ model.commit()[ FD ]
Line_8 $$ List<String> classesRoots = dialog.showAndGetResult()-->Line_10 $$ String libraryName = classesRoots.size() > 1 ? descriptor.getPresentableName() : null[ FD ]
Line_15 $$ new WriteAction() -->Line_18 $$ Library library = LibraryUtil.createLibrary(LibraryTablesRegistrar.getInstance().getLibraryTable(myProject), descriptor.getPresentableName())[ CD ]
Line_7 $$ LocateLibraryDialog dialog = new LocateLibraryDialog(firstModule, defaultRoots, descriptor.getPresentableName())-->Line_8 $$ List<String> classesRoots = dialog.showAndGetResult()[ FD ]
Line_18 $$ Library library = LibraryUtil.createLibrary(LibraryTablesRegistrar.getInstance().getLibraryTable(myProject), descriptor.getPresentableName())-->Line_25 $$ ModuleRootModificationUtil.addDependency(module, library, scope, false)[ FD ]
Line_20 $$ for (String url : urls) -->Line_21 $$ model.addRoot(url, OrderRootType.CLASSES)[ FD ]
Line_5 $$ Module firstModule = ContainerUtil.getFirstItem(modules)-->Line_13 $$ ModuleRootModificationUtil.addModuleLibrary(firstModule, libraryName, urls, Collections.<String>emptyList(), scope)[ FD ]
Line_18 $$ Library library = LibraryUtil.createLibrary(LibraryTablesRegistrar.getInstance().getLibraryTable(myProject), descriptor.getPresentableName())-->Line_19 $$ Library.ModifiableModel model = library.getModifiableModel()[ FD ]
Line_12 $$ if (modules.size() == 1) -->Line_13 $$ ModuleRootModificationUtil.addModuleLibrary(firstModule, libraryName, urls, Collections.<String>emptyList(), scope)[ CD ]
Line_11 $$ final List<String> urls = OrderEntryFix.refreshAndConvertToUrls(classesRoots)-->Line_13 $$ ModuleRootModificationUtil.addModuleLibrary(firstModule, libraryName, urls, Collections.<String>emptyList(), scope)[ FD ]
Line_8 $$ List<String> classesRoots = dialog.showAndGetResult()-->Line_9 $$ if (!classesRoots.isEmpty()) [ FD ]
Line_10 $$ String libraryName = classesRoots.size() > 1 ? descriptor.getPresentableName() : null-->Line_13 $$ ModuleRootModificationUtil.addModuleLibrary(firstModule, libraryName, urls, Collections.<String>emptyList(), scope)[ FD ]
Line_8 $$ List<String> classesRoots = dialog.showAndGetResult()-->Line_11 $$ final List<String> urls = OrderEntryFix.refreshAndConvertToUrls(classesRoots)[ FD ]
Line_9 $$ if (!classesRoots.isEmpty()) -->Line_10 $$ String libraryName = classesRoots.size() > 1 ? descriptor.getPresentableName() : null[ CD ]
Line_9 $$ if (!classesRoots.isEmpty()) -->Line_11 $$ final List<String> urls = OrderEntryFix.refreshAndConvertToUrls(classesRoots)[ CD ]
