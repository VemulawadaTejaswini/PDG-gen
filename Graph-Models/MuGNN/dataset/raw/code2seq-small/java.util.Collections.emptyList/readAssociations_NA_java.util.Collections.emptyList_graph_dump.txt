Line_11 $$ String pattern = mapping.getAttributeValue(ATTRIBUTE_PATTERN)-->Line_12 $$ FileNameMatcher matcher = ext != null ? new ExtensionFileNameMatcher(ext) : FileTypeManager.parseFromString(pattern)[ FD ]
Line_5 $$ if (children.isEmpty()) -->Line_6 $$ return Collections.emptyList()[ CD ]
Line_9 $$ for (Element mapping : children) -->Line_11 $$ String pattern = mapping.getAttributeValue(ATTRIBUTE_PATTERN)[ FD ]
Line_12 $$ FileNameMatcher matcher = ext != null ? new ExtensionFileNameMatcher(ext) : FileTypeManager.parseFromString(pattern)-->Line_13 $$ result.add(Pair.create(matcher, mapping.getAttributeValue(ATTRIBUTE_TYPE)))[ FD ]
Line_9 $$ for (Element mapping : children) -->Line_13 $$ result.add(Pair.create(matcher, mapping.getAttributeValue(ATTRIBUTE_TYPE)))[ FD ]
Line_9 $$ for (Element mapping : children) -->Line_10 $$ String ext = mapping.getAttributeValue(ATTRIBUTE_EXT)[ FD ]
Line_4 $$ List<Element> children = element.getChildren(ELEMENT_MAPPING)-->Line_5 $$ if (children.isEmpty()) [ FD ]
Line_8 $$ List<Pair<FileNameMatcher, String>> result = new SmartList<Pair<FileNameMatcher, String>>()-->Line_13 $$ result.add(Pair.create(matcher, mapping.getAttributeValue(ATTRIBUTE_TYPE)))[ FD ]
