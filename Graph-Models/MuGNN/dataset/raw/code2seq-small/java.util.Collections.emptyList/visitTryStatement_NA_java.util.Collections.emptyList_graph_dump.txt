Line_25 $$ for (int j = i + 1; j < catchSections.length; j++) -->Line_49 $$ duplicates[i] = true[ CD ]
Line_45 $$ final PsiJavaToken rParenth = otherSection.getRParenth()-->Line_47 $$ registerErrorAtOffset(otherSection, 0, rParenth.getStartOffsetInParent() + 1, parameter.getType(), Integer.valueOf(i), Integer.valueOf(j))[ FD ]
Line_34 $$ final Match match = finder.isDuplicate(otherCatchBlock, true)-->Line_35 $$ if (match == null || match.getReturnValue() != null) [ FD ]
Line_25 $$ for (int j = i + 1; j < catchSections.length; j++) -->Line_31 $$ if (otherCatchBlock == null) [ CD ]
Line_2 $$ public void visitTryStatement(PsiTryStatement statement) -->Line_8 $$ final PsiParameter[] parameters = statement.getCatchBlockParameters()[ CD ]
Line_14 $$ final PsiCatchSection catchSection = catchSections[i]-->Line_19 $$ final PsiParameter parameter = catchSection.getParameter()[ FD ]
Line_13 $$ for (int i = 0; i < catchSections.length - 1; i++) -->Line_24 $$ final DuplicatesFinder finder = new DuplicatesFinder(new PsiElement[] [ CD ]
Line_13 $$ for (int i = 0; i < catchSections.length - 1; i++) -->Line_20 $$ if (parameter == null) [ CD ]
Line_2 $$ public void visitTryStatement(PsiTryStatement statement) -->Line_4 $$ final PsiCatchSection[] catchSections = statement.getCatchSections()[ CD ]
Line_2 $$ public void visitTryStatement(PsiTryStatement statement) -->Line_12 $$ final boolean[] duplicates = new boolean[catchSections.length][ CD ]
Line_19 $$ final PsiParameter parameter = catchSection.getParameter()-->Line_23 $$ final InputVariables inputVariables = new InputVariables(Collections.singletonList(parameter), statement.getProject(), new LocalSearchScope(catchBlock), false)[ FD ]
Line_13 $$ for (int i = 0; i < catchSections.length - 1; i++) -->Line_25 $$ for (int j = i + 1; j < catchSections.length; j++) [ CD ]
Line_25 $$ for (int j = i + 1; j < catchSections.length; j++) -->Line_26 $$ if (duplicates[j]) [ FD ]
Line_29 $$ final PsiCatchSection otherSection = catchSections[j]-->Line_47 $$ registerErrorAtOffset(otherSection, 0, rParenth.getStartOffsetInParent() + 1, parameter.getType(), Integer.valueOf(i), Integer.valueOf(j))[ FD ]
Line_13 $$ for (int i = 0; i < catchSections.length - 1; i++) -->Line_42 $$ if (j > i ? !canCollapse(parameters, i, j) : !canCollapse(parameters, j, i)) [ FD ]
Line_46 $$ if (rParenth != null) -->Line_47 $$ registerErrorAtOffset(otherSection, 0, rParenth.getStartOffsetInParent() + 1, parameter.getType(), Integer.valueOf(i), Integer.valueOf(j))[ CD ]
Line_25 $$ for (int j = i + 1; j < catchSections.length; j++) -->Line_42 $$ if (j > i ? !canCollapse(parameters, i, j) : !canCollapse(parameters, j, i)) [ CD ]
Line_13 $$ for (int i = 0; i < catchSections.length - 1; i++) -->Line_15 $$ final PsiCodeBlock catchBlock = catchSection.getCatchBlock()[ CD ]
Line_25 $$ for (int j = i + 1; j < catchSections.length; j++) -->Line_29 $$ final PsiCatchSection otherSection = catchSections[j][ CD ]
Line_38 $$ final List<PsiElement> parameterValues = match.getParameterValues(parameter)-->Line_39 $$ if (parameterValues != null && (parameterValues.size() != 1 || !(parameterValues.get(0) instanceof PsiReferenceExpression))) [ FD ]
Line_2 $$ public void visitTryStatement(PsiTryStatement statement) -->Line_23 $$ final InputVariables inputVariables = new InputVariables(Collections.singletonList(parameter), statement.getProject(), new LocalSearchScope(catchBlock), false)[ FD ]
Line_24 $$ final DuplicatesFinder finder = new DuplicatesFinder(new PsiElement[] -->Line_34 $$ final Match match = finder.isDuplicate(otherCatchBlock, true)[ FD ]
Line_25 $$ for (int j = i + 1; j < catchSections.length; j++) -->Line_47 $$ registerErrorAtOffset(otherSection, 0, rParenth.getStartOffsetInParent() + 1, parameter.getType(), Integer.valueOf(i), Integer.valueOf(j))[ FD ]
Line_2 $$ public void visitTryStatement(PsiTryStatement statement) -->Line_3 $$ super.visitTryStatement(statement)[ FD ]
Line_2 $$ public void visitTryStatement(PsiTryStatement statement) -->Line_8 $$ final PsiParameter[] parameters = statement.getCatchBlockParameters()[ FD ]
Line_2 $$ public void visitTryStatement(PsiTryStatement statement) -->Line_13 $$ for (int i = 0; i < catchSections.length - 1; i++) [ CD ]
Line_12 $$ final boolean[] duplicates = new boolean[catchSections.length]-->Line_26 $$ if (duplicates[j]) [ FD ]
Line_15 $$ final PsiCodeBlock catchBlock = catchSection.getCatchBlock()-->Line_16 $$ if (catchBlock == null) [ FD ]
Line_30 $$ final PsiCodeBlock otherCatchBlock = otherSection.getCatchBlock()-->Line_31 $$ if (otherCatchBlock == null) [ FD ]
Line_25 $$ for (int j = i + 1; j < catchSections.length; j++) -->Line_42 $$ if (j > i ? !canCollapse(parameters, i, j) : !canCollapse(parameters, j, i)) [ FD ]
Line_2 $$ public void visitTryStatement(PsiTryStatement statement) -->Line_4 $$ final PsiCatchSection[] catchSections = statement.getCatchSections()[ FD ]
Line_2 $$ public void visitTryStatement(PsiTryStatement statement) -->Line_3 $$ super.visitTryStatement(statement)[ CD ]
Line_13 $$ for (int i = 0; i < catchSections.length - 1; i++) -->Line_19 $$ final PsiParameter parameter = catchSection.getParameter()[ CD ]
Line_25 $$ for (int j = i + 1; j < catchSections.length; j++) -->Line_35 $$ if (match == null || match.getReturnValue() != null) [ CD ]
Line_25 $$ for (int j = i + 1; j < catchSections.length; j++) -->Line_39 $$ if (parameterValues != null && (parameterValues.size() != 1 || !(parameterValues.get(0) instanceof PsiReferenceExpression))) [ CD ]
Line_19 $$ final PsiParameter parameter = catchSection.getParameter()-->Line_38 $$ final List<PsiElement> parameterValues = match.getParameterValues(parameter)[ FD ]
Line_25 $$ for (int j = i + 1; j < catchSections.length; j++) -->Line_45 $$ final PsiJavaToken rParenth = otherSection.getRParenth()[ CD ]
Line_13 $$ for (int i = 0; i < catchSections.length - 1; i++) -->Line_16 $$ if (catchBlock == null) [ CD ]
Line_9 $$ if (catchSections.length != parameters.length) -->Line_10 $$ return[ CD ]
Line_5 $$ if (catchSections.length < 2) -->Line_6 $$ return[ CD ]
Line_25 $$ for (int j = i + 1; j < catchSections.length; j++) -->Line_26 $$ if (duplicates[j]) [ CD ]
Line_25 $$ for (int j = i + 1; j < catchSections.length; j++) -->Line_34 $$ final Match match = finder.isDuplicate(otherCatchBlock, true)[ CD ]
Line_30 $$ final PsiCodeBlock otherCatchBlock = otherSection.getCatchBlock()-->Line_34 $$ final Match match = finder.isDuplicate(otherCatchBlock, true)[ FD ]
Line_45 $$ final PsiJavaToken rParenth = otherSection.getRParenth()-->Line_46 $$ if (rParenth != null) [ FD ]
Line_19 $$ final PsiParameter parameter = catchSection.getParameter()-->Line_20 $$ if (parameter == null) [ FD ]
Line_13 $$ for (int i = 0; i < catchSections.length - 1; i++) -->Line_23 $$ final InputVariables inputVariables = new InputVariables(Collections.singletonList(parameter), statement.getProject(), new LocalSearchScope(catchBlock), false)[ CD ]
Line_8 $$ final PsiParameter[] parameters = statement.getCatchBlockParameters()-->Line_42 $$ if (j > i ? !canCollapse(parameters, i, j) : !canCollapse(parameters, j, i)) [ FD ]
Line_29 $$ final PsiCatchSection otherSection = catchSections[j]-->Line_30 $$ final PsiCodeBlock otherCatchBlock = otherSection.getCatchBlock()[ FD ]
Line_2 $$ public void visitTryStatement(PsiTryStatement statement) -->Line_9 $$ if (catchSections.length != parameters.length) [ CD ]
Line_25 $$ for (int j = i + 1; j < catchSections.length; j++) -->Line_38 $$ final List<PsiElement> parameterValues = match.getParameterValues(parameter)[ CD ]
Line_25 $$ for (int j = i + 1; j < catchSections.length; j++) -->Line_46 $$ if (rParenth != null) [ CD ]
Line_13 $$ for (int i = 0; i < catchSections.length - 1; i++) -->Line_14 $$ final PsiCatchSection catchSection = catchSections[i][ CD ]
Line_14 $$ final PsiCatchSection catchSection = catchSections[i]-->Line_15 $$ final PsiCodeBlock catchBlock = catchSection.getCatchBlock()[ FD ]
Line_34 $$ final Match match = finder.isDuplicate(otherCatchBlock, true)-->Line_38 $$ final List<PsiElement> parameterValues = match.getParameterValues(parameter)[ FD ]
Line_25 $$ for (int j = i + 1; j < catchSections.length; j++) -->Line_50 $$ duplicates[j] = true[ CD ]
Line_13 $$ for (int i = 0; i < catchSections.length - 1; i++) -->Line_47 $$ registerErrorAtOffset(otherSection, 0, rParenth.getStartOffsetInParent() + 1, parameter.getType(), Integer.valueOf(i), Integer.valueOf(j))[ FD ]
Line_29 $$ final PsiCatchSection otherSection = catchSections[j]-->Line_45 $$ final PsiJavaToken rParenth = otherSection.getRParenth()[ FD ]
Line_19 $$ final PsiParameter parameter = catchSection.getParameter()-->Line_47 $$ registerErrorAtOffset(otherSection, 0, rParenth.getStartOffsetInParent() + 1, parameter.getType(), Integer.valueOf(i), Integer.valueOf(j))[ FD ]
Line_25 $$ for (int j = i + 1; j < catchSections.length; j++) -->Line_30 $$ final PsiCodeBlock otherCatchBlock = otherSection.getCatchBlock()[ CD ]
Line_2 $$ public void visitTryStatement(PsiTryStatement statement) -->Line_5 $$ if (catchSections.length < 2) [ CD ]
