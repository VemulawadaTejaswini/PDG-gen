Line_4 $$ if (myContext.getComponents() == null) -->Line_30 $$ myContext.setComponents(components)[ CD ]
Line_5 $$ if (!ArrayUtil.contains(SimpleTransferable.getData(myEvent.getTransferable(), Class.class), myDragTargets)) -->Line_6 $$ myContext.setComponents(Collections.<RadComponent>emptyList())[ CD ]
Line_4 $$ if (myContext.getComponents() == null) -->Line_21 $$ RadComponent parent = null[ CD ]
Line_26 $$ components = Collections.emptyList()-->Line_30 $$ myContext.setComponents(components)[ FD ]
Line_21 $$ RadComponent parent = null-->Line_23 $$ if (parent == null) [ FD ]
Line_4 $$ if (myContext.getComponents() == null) -->Line_5 $$ if (!ArrayUtil.contains(SimpleTransferable.getData(myEvent.getTransferable(), Class.class), myDragTargets)) [ CD ]
Line_11 $$ CreationTool tool = (CreationTool) myToolProvider.getActiveTool()-->Line_13 $$ myContext.setComponents(Collections.singletonList(tool.getFactory().create()))[ FD ]
Line_5 $$ if (!ArrayUtil.contains(SimpleTransferable.getData(myEvent.getTransferable(), Class.class), myDragTargets)) -->Line_7 $$ return[ CD ]
Line_9 $$ if (myToolProvider.getActiveTool() instanceof CreationTool) -->Line_11 $$ CreationTool tool = (CreationTool) myToolProvider.getActiveTool()[ CD ]
Line_9 $$ if (myToolProvider.getActiveTool() instanceof CreationTool) -->Line_18 $$ return[ CD ]
Line_23 $$ if (parent == null) -->Line_25 $$ if (parent != component.getParent()) [ CD ]
Line_4 $$ if (myContext.getComponents() == null) -->Line_20 $$ List<RadComponent> components = RadComponent.getPureSelection(myArea.getSelection())[ CD ]
Line_4 $$ if (myContext.getComponents() == null) -->Line_9 $$ if (myToolProvider.getActiveTool() instanceof CreationTool) [ CD ]
Line_2 $$ private void updateContext() -->Line_4 $$ if (myContext.getComponents() == null) [ CD ]
Line_4 $$ if (myContext.getComponents() == null) -->Line_31 $$ myContext.resetMoveAddEnabled()[ CD ]
Line_24 $$ parent = component.getParent()-->Line_25 $$ if (parent != component.getParent()) [ FD ]
Line_22 $$ for (RadComponent component : components) -->Line_24 $$ parent = component.getParent()[ FD ]
Line_25 $$ if (parent != component.getParent()) -->Line_26 $$ components = Collections.emptyList()[ CD ]
Line_21 $$ RadComponent parent = null-->Line_24 $$ parent = component.getParent()[ FD ]
Line_20 $$ List<RadComponent> components = RadComponent.getPureSelection(myArea.getSelection())-->Line_30 $$ myContext.setComponents(components)[ FD ]
Line_20 $$ List<RadComponent> components = RadComponent.getPureSelection(myArea.getSelection())-->Line_26 $$ components = Collections.emptyList()[ FD ]
Line_21 $$ RadComponent parent = null-->Line_25 $$ if (parent != component.getParent()) [ FD ]
Line_2 $$ private void updateContext() -->Line_3 $$ myContext.setLocation(getLocation())[ CD ]
Line_23 $$ if (parent == null) -->Line_24 $$ parent = component.getParent()[ CD ]
Line_22 $$ for (RadComponent component : components) -->Line_25 $$ if (parent != component.getParent()) [ FD ]
Line_9 $$ if (myToolProvider.getActiveTool() instanceof CreationTool) -->Line_10 $$ myContext.setType(OperationContext.CREATE)[ CD ]
Line_22 $$ for (RadComponent component : components) -->Line_33 $$ component.processDropOperation(myContext)[ FD ]
