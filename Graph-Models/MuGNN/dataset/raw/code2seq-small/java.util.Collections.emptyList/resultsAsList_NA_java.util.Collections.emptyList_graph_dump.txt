Line_37 $$ PsiElement foreign = resolver.resolveImportReference(myQualifiedName, myContext, !myWithoutRoots)-->Line_39 $$ myForeignResults.add(foreign)[ FD ]
Line_14 $$ PsiElement module = resolveModuleAt(dir)-->Line_16 $$ addRoot(module, true)[ FD ]
Line_23 $$ if (cachedResults != null) -->Line_24 $$ mySourceResults.addAll(cachedResults)[ CD ]
Line_28 $$ if (!myWithoutRoots) -->Line_30 $$ if (footholdFile != null) [ CD ]
Line_30 $$ if (footholdFile != null) -->Line_31 $$ addRelativeImportResultsFromSkeletons(footholdFile)[ CD ]
Line_9 $$ if (myRelativeLevel >= 0 && footholdFile != null && !PyUserSkeletonsUtil.isUnderUserSkeletonsDirectory(footholdFile)) -->Line_10 $$ PsiDirectory dir = footholdFile.getContainingDirectory()[ CD ]
Line_19 $$ final PythonPathCache cache = findMyCache()-->Line_22 $$ final List<PsiElement> cachedResults = cache.get(myQualifiedName)[ FD ]
Line_19 $$ final PythonPathCache cache = findMyCache()-->Line_47 $$ cache.put(myQualifiedName, results)[ FD ]
Line_9 $$ if (myRelativeLevel >= 0 && footholdFile != null && !PyUserSkeletonsUtil.isUnderUserSkeletonsDirectory(footholdFile)) -->Line_15 $$ if (module != null) [ CD ]
Line_21 $$ if (mayCache) -->Line_22 $$ final List<PsiElement> cachedResults = cache.get(myQualifiedName)[ CD ]
Line_8 $$ final PsiFile footholdFile = myContext.getFootholdFile()-->Line_12 $$ dir = ResolveImportUtil.stepBackFrom(footholdFile, myRelativeLevel)[ FD ]
Line_35 $$ if (!myWithoutForeign) -->Line_43 $$ myForeignResults.clear()[ CD ]
Line_10 $$ PsiDirectory dir = footholdFile.getContainingDirectory()-->Line_14 $$ PsiElement module = resolveModuleAt(dir)[ FD ]
Line_36 $$ for (PyImportResolver resolver : Extensions.getExtensions(PyImportResolver.EP_NAME)) -->Line_37 $$ PsiElement foreign = resolver.resolveImportReference(myQualifiedName, myContext, !myWithoutRoots)[ FD ]
Line_28 $$ if (!myWithoutRoots) -->Line_29 $$ addResultsFromRoots()[ CD ]
Line_8 $$ final PsiFile footholdFile = myContext.getFootholdFile()-->Line_31 $$ addRelativeImportResultsFromSkeletons(footholdFile)[ FD ]
Line_14 $$ PsiElement module = resolveModuleAt(dir)-->Line_15 $$ if (module != null) [ FD ]
Line_5 $$ if (!myContext.isValid()) -->Line_6 $$ return Collections.emptyList()[ CD ]
Line_45 $$ final ArrayList<PsiElement> results = Lists.newArrayList(mySourceResults)-->Line_47 $$ cache.put(myQualifiedName, results)[ FD ]
Line_35 $$ if (!myWithoutForeign) -->Line_42 $$ mySourceResults.addAll(myForeignResults)[ CD ]
Line_15 $$ if (module != null) -->Line_16 $$ addRoot(module, true)[ CD ]
Line_11 $$ if (myRelativeLevel > 0) -->Line_12 $$ dir = ResolveImportUtil.stepBackFrom(footholdFile, myRelativeLevel)[ CD ]
Line_8 $$ final PsiFile footholdFile = myContext.getFootholdFile()-->Line_10 $$ PsiDirectory dir = footholdFile.getContainingDirectory()[ FD ]
Line_38 $$ if (foreign != null) -->Line_39 $$ myForeignResults.add(foreign)[ CD ]
Line_9 $$ if (myRelativeLevel >= 0 && footholdFile != null && !PyUserSkeletonsUtil.isUnderUserSkeletonsDirectory(footholdFile)) -->Line_11 $$ if (myRelativeLevel > 0) [ CD ]
Line_37 $$ PsiElement foreign = resolver.resolveImportReference(myQualifiedName, myContext, !myWithoutRoots)-->Line_38 $$ if (foreign != null) [ FD ]
Line_22 $$ final List<PsiElement> cachedResults = cache.get(myQualifiedName)-->Line_24 $$ mySourceResults.addAll(cachedResults)[ FD ]
Line_22 $$ final List<PsiElement> cachedResults = cache.get(myQualifiedName)-->Line_23 $$ if (cachedResults != null) [ FD ]
Line_9 $$ if (myRelativeLevel >= 0 && footholdFile != null && !PyUserSkeletonsUtil.isUnderUserSkeletonsDirectory(footholdFile)) -->Line_14 $$ PsiElement module = resolveModuleAt(dir)[ CD ]
Line_12 $$ dir = ResolveImportUtil.stepBackFrom(footholdFile, myRelativeLevel)-->Line_14 $$ PsiElement module = resolveModuleAt(dir)[ FD ]
Line_8 $$ final PsiFile footholdFile = myContext.getFootholdFile()-->Line_9 $$ if (myRelativeLevel >= 0 && footholdFile != null && !PyUserSkeletonsUtil.isUnderUserSkeletonsDirectory(footholdFile)) [ FD ]
Line_23 $$ if (cachedResults != null) -->Line_25 $$ return Lists.newArrayList(mySourceResults)[ CD ]
Line_21 $$ if (mayCache) -->Line_23 $$ if (cachedResults != null) [ CD ]
Line_46 $$ if (mayCache) -->Line_47 $$ cache.put(myQualifiedName, results)[ CD ]
Line_10 $$ PsiDirectory dir = footholdFile.getContainingDirectory()-->Line_12 $$ dir = ResolveImportUtil.stepBackFrom(footholdFile, myRelativeLevel)[ FD ]
Line_8 $$ final PsiFile footholdFile = myContext.getFootholdFile()-->Line_30 $$ if (footholdFile != null) [ FD ]
