Line_14 $$ Map<String, String> props = settings.getMavenProperties()-->Line_15 $$ props.put("interactiveMode", "false")[ FD ]
Line_2 $$ private void generateFromArchetype(final Project project, final VirtualFile pom) -->Line_19 $$ copyGeneratedFiles(workingDir, pom, project)[ FD ]
Line_2 $$ private void generateFromArchetype(final Project project, final VirtualFile pom) -->Line_11 $$ MavenRunnerParameters params = new MavenRunnerParameters(false, workingDir.getPath(), Collections.singletonList("org.apache.maven.plugins:maven-archetype-plugin:RELEASE:generate"), Collections.<String>emptyList())[ CD ]
Line_3 $$ final File workingDir-->Line_11 $$ MavenRunnerParameters params = new MavenRunnerParameters(false, workingDir.getPath(), Collections.singletonList("org.apache.maven.plugins:maven-archetype-plugin:RELEASE:generate"), Collections.<String>emptyList())[ FD ]
Line_13 $$ MavenRunnerSettings settings = runner.getState().clone()-->Line_14 $$ Map<String, String> props = settings.getMavenProperties()[ FD ]
Line_2 $$ private void generateFromArchetype(final Project project, final VirtualFile pom) -->Line_17 $$ runner.run(params, settings, new Runnable() [ CD ]
Line_2 $$ private void generateFromArchetype(final Project project, final VirtualFile pom) -->Line_13 $$ MavenRunnerSettings settings = runner.getState().clone()[ CD ]
Line_12 $$ MavenRunner runner = MavenRunner.getInstance(project)-->Line_17 $$ runner.run(params, settings, new Runnable() [ FD ]
Line_3 $$ final File workingDir-->Line_19 $$ copyGeneratedFiles(workingDir, pom, project)[ FD ]
Line_17 $$ runner.run(params, settings, new Runnable() -->Line_19 $$ copyGeneratedFiles(workingDir, pom, project)[ CD ]
Line_5 $$ workingDir = FileUtil.createTempDirectory("archetype", "tmp")-->Line_11 $$ MavenRunnerParameters params = new MavenRunnerParameters(false, workingDir.getPath(), Collections.singletonList("org.apache.maven.plugins:maven-archetype-plugin:RELEASE:generate"), Collections.<String>emptyList())[ FD ]
Line_3 $$ final File workingDir-->Line_5 $$ workingDir = FileUtil.createTempDirectory("archetype", "tmp")[ FD ]
Line_11 $$ MavenRunnerParameters params = new MavenRunnerParameters(false, workingDir.getPath(), Collections.singletonList("org.apache.maven.plugins:maven-archetype-plugin:RELEASE:generate"), Collections.<String>emptyList())-->Line_17 $$ runner.run(params, settings, new Runnable() [ FD ]
Line_2 $$ private void generateFromArchetype(final Project project, final VirtualFile pom) -->Line_16 $$ props.putAll(myPropertiesToCreateByArtifact)[ CD ]
Line_2 $$ private void generateFromArchetype(final Project project, final VirtualFile pom) -->Line_12 $$ MavenRunner runner = MavenRunner.getInstance(project)[ FD ]
Line_5 $$ workingDir = FileUtil.createTempDirectory("archetype", "tmp")-->Line_6 $$ workingDir.deleteOnExit()[ FD ]
Line_12 $$ MavenRunner runner = MavenRunner.getInstance(project)-->Line_13 $$ MavenRunnerSettings settings = runner.getState().clone()[ FD ]
Line_2 $$ private void generateFromArchetype(final Project project, final VirtualFile pom) -->Line_3 $$ final File workingDir[ CD ]
Line_2 $$ private void generateFromArchetype(final Project project, final VirtualFile pom) -->Line_14 $$ Map<String, String> props = settings.getMavenProperties()[ CD ]
Line_2 $$ private void generateFromArchetype(final Project project, final VirtualFile pom) -->Line_8 $$ showError(project, e)[ FD ]
Line_3 $$ final File workingDir-->Line_6 $$ workingDir.deleteOnExit()[ FD ]
Line_2 $$ private void generateFromArchetype(final Project project, final VirtualFile pom) -->Line_15 $$ props.put("interactiveMode", "false")[ CD ]
Line_13 $$ MavenRunnerSettings settings = runner.getState().clone()-->Line_17 $$ runner.run(params, settings, new Runnable() [ FD ]
Line_5 $$ workingDir = FileUtil.createTempDirectory("archetype", "tmp")-->Line_19 $$ copyGeneratedFiles(workingDir, pom, project)[ FD ]
Line_2 $$ private void generateFromArchetype(final Project project, final VirtualFile pom) -->Line_12 $$ MavenRunner runner = MavenRunner.getInstance(project)[ CD ]
Line_14 $$ Map<String, String> props = settings.getMavenProperties()-->Line_16 $$ props.putAll(myPropertiesToCreateByArtifact)[ FD ]
