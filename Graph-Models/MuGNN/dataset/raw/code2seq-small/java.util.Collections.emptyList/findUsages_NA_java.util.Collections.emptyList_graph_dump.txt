Line_22 $$ int i = 1-->Line_24 $$ usageInfos[i++] = XPathUsageInfo.create(expression)[ FD ]
Line_5 $$ if (!mySettings.isCreateDefault()) -->Line_18 $$ callsToUpdate = Collections.emptyList()[ CD ]
Line_5 $$ if (!mySettings.isCreateDefault()) -->Line_8 $$ callsToUpdate = new ArrayList<PsiElement>(references.size())[ CD ]
Line_4 $$ final List<PsiElement> callsToUpdate-->Line_13 $$ callsToUpdate.add(tag)[ FD ]
Line_2 $$ protected UsageInfo[] findUsages() -->Line_4 $$ final List<PsiElement> callsToUpdate[ CD ]
Line_12 $$ if (tag != null && XsltSupport.isTemplateCall(tag)) -->Line_13 $$ callsToUpdate.add(tag)[ CD ]
Line_11 $$ final XmlTag tag = PsiTreeUtil.getContextOfType(e, XmlTag.class, true)-->Line_12 $$ if (tag != null && XsltSupport.isTemplateCall(tag)) [ FD ]
Line_8 $$ callsToUpdate = new ArrayList<PsiElement>(references.size())-->Line_13 $$ callsToUpdate.add(tag)[ FD ]
Line_23 $$ for (XPathExpression expression : myOtherExpressions) -->Line_24 $$ usageInfos[i++] = XPathUsageInfo.create(expression)[ FD ]
Line_8 $$ callsToUpdate = new ArrayList<PsiElement>(references.size())-->Line_18 $$ callsToUpdate = Collections.emptyList()[ FD ]
Line_4 $$ final List<PsiElement> callsToUpdate-->Line_8 $$ callsToUpdate = new ArrayList<PsiElement>(references.size())[ FD ]
Line_8 $$ callsToUpdate = new ArrayList<PsiElement>(references.size())-->Line_16 $$ usageCount += callsToUpdate.size()[ FD ]
Line_3 $$ int usageCount = myOtherExpressions.size() + 1-->Line_16 $$ usageCount += callsToUpdate.size()[ FD ]
Line_5 $$ if (!mySettings.isCreateDefault()) -->Line_7 $$ final Collection<PsiReference> references = ReferencesSearch.search(myTemplate, myTemplate.getUseScope(), false).findAll()[ CD ]
Line_2 $$ protected UsageInfo[] findUsages() -->Line_20 $$ final UsageInfo[] usageInfos = new UsageInfo[usageCount][ CD ]
Line_9 $$ for (PsiReference reference : references) -->Line_10 $$ final PsiElement e = reference.getElement()[ FD ]
Line_4 $$ final List<PsiElement> callsToUpdate-->Line_16 $$ usageCount += callsToUpdate.size()[ FD ]
Line_2 $$ protected UsageInfo[] findUsages() -->Line_5 $$ if (!mySettings.isCreateDefault()) [ CD ]
Line_2 $$ protected UsageInfo[] findUsages() -->Line_21 $$ usageInfos[0] = XPathUsageInfo.create(myExpression)[ CD ]
Line_7 $$ final Collection<PsiReference> references = ReferencesSearch.search(myTemplate, myTemplate.getUseScope(), false).findAll()-->Line_8 $$ callsToUpdate = new ArrayList<PsiElement>(references.size())[ FD ]
Line_4 $$ final List<PsiElement> callsToUpdate-->Line_18 $$ callsToUpdate = Collections.emptyList()[ FD ]
Line_11 $$ final XmlTag tag = PsiTreeUtil.getContextOfType(e, XmlTag.class, true)-->Line_13 $$ callsToUpdate.add(tag)[ FD ]
Line_22 $$ int i = 1-->Line_27 $$ usageInfos[i++] = new UsageInfo(o, false)[ FD ]
Line_2 $$ protected UsageInfo[] findUsages() -->Line_22 $$ int i = 1[ CD ]
Line_10 $$ final PsiElement e = reference.getElement()-->Line_11 $$ final XmlTag tag = PsiTreeUtil.getContextOfType(e, XmlTag.class, true)[ FD ]
Line_2 $$ protected UsageInfo[] findUsages() -->Line_3 $$ int usageCount = myOtherExpressions.size() + 1[ CD ]
Line_5 $$ if (!mySettings.isCreateDefault()) -->Line_16 $$ usageCount += callsToUpdate.size()[ CD ]
Line_2 $$ protected UsageInfo[] findUsages() -->Line_29 $$ return usageInfos[ CD ]
