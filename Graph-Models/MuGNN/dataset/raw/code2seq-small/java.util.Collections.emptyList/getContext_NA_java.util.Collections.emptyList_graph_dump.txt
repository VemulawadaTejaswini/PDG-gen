Line_3 $$ XmlTag tag = PsiTreeUtil.getParentOfType(element, XmlTag.class)-->Line_8 $$ XmlAttribute base = tag.getAttribute("base", XmlUtil.XML_NAMESPACE_URI)[ FD ]
Line_13 $$ if (reference instanceof PsiPolyVariantReference) -->Line_14 $$ ResolveResult[] results = ((PsiPolyVariantReference) reference).multiResolve(false)[ CD ]
Line_3 $$ XmlTag tag = PsiTreeUtil.getParentOfType(element, XmlTag.class)-->Line_5 $$ tag = tag.getParentTag()[ FD ]
Line_3 $$ XmlTag tag = PsiTreeUtil.getParentOfType(element, XmlTag.class)-->Line_7 $$ while (tag != null) [ FD ]
Line_5 $$ tag = tag.getParentTag()-->Line_7 $$ while (tag != null) [ FD ]
Line_9 $$ if (base != null) -->Line_10 $$ XmlAttributeValue value = base.getValueElement()[ CD ]
Line_12 $$ PsiReference reference = value.getReference()-->Line_13 $$ if (reference instanceof PsiPolyVariantReference) [ FD ]
Line_14 $$ ResolveResult[] results = ((PsiPolyVariantReference) reference).multiResolve(false)-->Line_15 $$ return ContainerUtil.map(results, new Function<ResolveResult, PsiFileSystemItem>() [ FD ]
Line_8 $$ XmlAttribute base = tag.getAttribute("base", XmlUtil.XML_NAMESPACE_URI)-->Line_9 $$ if (base != null) [ FD ]
Line_2 $$ private Collection<PsiFileSystemItem> getContext(PsiElement element, PsiFile file) -->Line_3 $$ XmlTag tag = PsiTreeUtil.getParentOfType(element, XmlTag.class)[ CD ]
Line_2 $$ private Collection<PsiFileSystemItem> getContext(PsiElement element, PsiFile file) -->Line_3 $$ XmlTag tag = PsiTreeUtil.getParentOfType(element, XmlTag.class)[ FD ]
Line_10 $$ XmlAttributeValue value = base.getValueElement()-->Line_11 $$ if (value != null) [ FD ]
Line_2 $$ private Collection<PsiFileSystemItem> getContext(PsiElement element, PsiFile file) -->Line_25 $$ PsiDirectory directory = file.getContainingDirectory()[ CD ]
Line_9 $$ if (base != null) -->Line_11 $$ if (value != null) [ CD ]
Line_4 $$ if (!myAcceptSelf && tag != null) -->Line_5 $$ tag = tag.getParentTag()[ CD ]
Line_7 $$ while (tag != null) -->Line_23 $$ tag = tag.getParentTag()[ CD ]
Line_11 $$ if (value != null) -->Line_13 $$ if (reference instanceof PsiPolyVariantReference) [ CD ]
Line_3 $$ XmlTag tag = PsiTreeUtil.getParentOfType(element, XmlTag.class)-->Line_23 $$ tag = tag.getParentTag()[ FD ]
Line_11 $$ if (value != null) -->Line_12 $$ PsiReference reference = value.getReference()[ CD ]
Line_2 $$ private Collection<PsiFileSystemItem> getContext(PsiElement element, PsiFile file) -->Line_26 $$ return directory == null ? Collections.<PsiFileSystemItem>emptyList() : Collections.<PsiFileSystemItem>singletonList(directory)[ CD ]
Line_2 $$ private Collection<PsiFileSystemItem> getContext(PsiElement element, PsiFile file) -->Line_25 $$ PsiDirectory directory = file.getContainingDirectory()[ FD ]
Line_8 $$ XmlAttribute base = tag.getAttribute("base", XmlUtil.XML_NAMESPACE_URI)-->Line_10 $$ XmlAttributeValue value = base.getValueElement()[ FD ]
Line_10 $$ XmlAttributeValue value = base.getValueElement()-->Line_12 $$ PsiReference reference = value.getReference()[ FD ]
Line_2 $$ private Collection<PsiFileSystemItem> getContext(PsiElement element, PsiFile file) -->Line_7 $$ while (tag != null) [ CD ]
Line_7 $$ while (tag != null) -->Line_9 $$ if (base != null) [ CD ]
Line_5 $$ tag = tag.getParentTag()-->Line_23 $$ tag = tag.getParentTag()[ FD ]
Line_7 $$ while (tag != null) -->Line_8 $$ XmlAttribute base = tag.getAttribute("base", XmlUtil.XML_NAMESPACE_URI)[ CD ]
Line_2 $$ private Collection<PsiFileSystemItem> getContext(PsiElement element, PsiFile file) -->Line_4 $$ if (!myAcceptSelf && tag != null) [ CD ]
Line_15 $$ return ContainerUtil.map(results, new Function<ResolveResult, PsiFileSystemItem>() -->Line_17 $$ return (PsiFileSystemItem) result.getElement()[ FD ]
Line_5 $$ tag = tag.getParentTag()-->Line_8 $$ XmlAttribute base = tag.getAttribute("base", XmlUtil.XML_NAMESPACE_URI)[ FD ]
Line_13 $$ if (reference instanceof PsiPolyVariantReference) -->Line_15 $$ return ContainerUtil.map(results, new Function<ResolveResult, PsiFileSystemItem>() [ CD ]
Line_15 $$ return ContainerUtil.map(results, new Function<ResolveResult, PsiFileSystemItem>() -->Line_17 $$ return (PsiFileSystemItem) result.getElement()[ CD ]
