Line_2 $$ public void testParseUnsupported() throws Exception -->Line_5 $$ assertEqualVersions(parsedVersion, unsupportedVersion)[ CD ]
Line_4 $$ HgVersion parsedVersion = HgVersion.parseVersionAndExtensionInfo(unsupportedVersion.output, Collections.<String>emptyList())-->Line_6 $$ assertFalse(parsedVersion.isSupported())[ FD ]
Line_3 $$ TestHgVersion unsupportedVersion = new TestHgVersion("Mercurial Distributed SCM (version 1.5.1)", 1, 5, 1)-->Line_5 $$ assertEqualVersions(parsedVersion, unsupportedVersion)[ FD ]
Line_2 $$ public void testParseUnsupported() throws Exception -->Line_6 $$ assertFalse(parsedVersion.isSupported())[ CD ]
Line_4 $$ HgVersion parsedVersion = HgVersion.parseVersionAndExtensionInfo(unsupportedVersion.output, Collections.<String>emptyList())-->Line_5 $$ assertEqualVersions(parsedVersion, unsupportedVersion)[ FD ]
Line_2 $$ public void testParseUnsupported() throws Exception -->Line_4 $$ HgVersion parsedVersion = HgVersion.parseVersionAndExtensionInfo(unsupportedVersion.output, Collections.<String>emptyList())[ CD ]
Line_2 $$ public void testParseUnsupported() throws Exception -->Line_3 $$ TestHgVersion unsupportedVersion = new TestHgVersion("Mercurial Distributed SCM (version 1.5.1)", 1, 5, 1)[ CD ]
