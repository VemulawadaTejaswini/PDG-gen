Line_71 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_75 $$ qPos.add(name)[ FD ]
Line_63 $$ if (pagination) -->Line_64 $$ query.append(ExpandoColumnModelImpl.ORDER_BY_JPQL)[ CD ]
Line_2 $$ public List<ExpandoColumn> findByT_N(long tableId, String[] names, int start, int end, OrderByComparator<ExpandoColumn> orderByComparator, boolean retrieveFromCache) -->Line_10 $$ ExpandoColumn expandoColumn = fetchByT_N(tableId, names[0])[ FD ]
Line_23 $$ finderArgs = new Object[] -->Line_88 $$ finderCache.removeResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs)[ FD ]
Line_39 $$ if (list == null) -->Line_43 $$ if (names.length > 0) [ CD ]
Line_21 $$ if ((start == QueryUtil.ALL_POS) && (end == QueryUtil.ALL_POS) && (orderByComparator == null)) -->Line_22 $$ pagination = false[ CD ]
Line_83 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end)-->Line_85 $$ cacheResult(list)[ FD ]
Line_29 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)-->Line_33 $$ list = null[ FD ]
Line_14 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)-->Line_85 $$ cacheResult(list)[ FD ]
Line_78 $$ if (!pagination) -->Line_81 $$ list = Collections.unmodifiableList(list)[ CD ]
Line_14 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)-->Line_33 $$ list = null[ FD ]
Line_14 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)-->Line_29 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)[ FD ]
Line_2 $$ public List<ExpandoColumn> findByT_N(long tableId, String[] names, int start, int end, OrderByComparator<ExpandoColumn> orderByComparator, boolean retrieveFromCache) -->Line_9 $$ if (names.length == 1) [ CD ]
Line_23 $$ finderArgs = new Object[] -->Line_25 $$ finderArgs = new Object[] [ FD ]
Line_43 $$ if (names.length > 0) -->Line_58 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_22 $$ pagination = false-->Line_61 $$ if (orderByComparator != null) [ FD ]
Line_78 $$ if (!pagination) -->Line_83 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end)[ CD ]
Line_2 $$ public List<ExpandoColumn> findByT_N(long tableId, String[] names, int start, int end, OrderByComparator<ExpandoColumn> orderByComparator, boolean retrieveFromCache) -->Line_62 $$ appendOrderByComparator(query, _ORDER_BY_ENTITY_ALIAS, orderByComparator)[ FD ]
Line_6 $$ names = ArrayUtil.distinct(names, NULL_SAFE_STRING_COMPARATOR)-->Line_23 $$ finderArgs = new Object[] [ FD ]
Line_2 $$ public List<ExpandoColumn> findByT_N(long tableId, String[] names, int start, int end, OrderByComparator<ExpandoColumn> orderByComparator, boolean retrieveFromCache) -->Line_32 $$ if ((tableId != expandoColumn.getTableId()) || !ArrayUtil.contains(names, expandoColumn.getName())) [ FD ]
Line_33 $$ list = null-->Line_83 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_29 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)-->Line_83 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_3 $$ if (names == null) -->Line_5 $$ if (names.length > 1) [ CD ]
Line_49 $$ if (name.equals(StringPool.BLANK)) -->Line_50 $$ query.append(_FINDER_COLUMN_T_N_NAME_3)[ CD ]
Line_39 $$ if (list == null) -->Line_60 $$ query.setStringAt(removeConjunction(query.stringAt(query.index() - 1)), query.index() - 1)[ CD ]
Line_2 $$ public List<ExpandoColumn> findByT_N(long tableId, String[] names, int start, int end, OrderByComparator<ExpandoColumn> orderByComparator, boolean retrieveFromCache) -->Line_23 $$ finderArgs = new Object[] [ FD ]
Line_33 $$ list = null-->Line_85 $$ cacheResult(list)[ FD ]
Line_6 $$ names = ArrayUtil.distinct(names, NULL_SAFE_STRING_COMPARATOR)-->Line_7 $$ Arrays.sort(names, NULL_SAFE_STRING_COMPARATOR)[ FD ]
Line_4 $$ names = new String[0]-->Line_23 $$ finderArgs = new Object[] [ FD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_48 $$ query.append(_FINDER_COLUMN_T_N_NAME_1)[ FD ]
Line_33 $$ list = null-->Line_86 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, list)[ FD ]
Line_67 $$ Session session = null-->Line_69 $$ session = openSession()[ FD ]
Line_25 $$ finderArgs = new Object[] -->Line_88 $$ finderCache.removeResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs)[ FD ]
Line_45 $$ for (int i = 0; i < names.length; i++) -->Line_46 $$ String name = names[i][ CD ]
Line_4 $$ names = new String[0]-->Line_25 $$ finderArgs = new Object[] [ FD ]
Line_2 $$ public List<ExpandoColumn> findByT_N(long tableId, String[] names, int start, int end, OrderByComparator<ExpandoColumn> orderByComparator, boolean retrieveFromCache) -->Line_61 $$ if (orderByComparator != null) [ FD ]
Line_39 $$ if (list == null) -->Line_66 $$ String sql = query.toString()[ CD ]
Line_78 $$ if (!pagination) -->Line_79 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end, false)[ CD ]
Line_46 $$ String name = names[i]-->Line_47 $$ if (name == null) [ FD ]
Line_23 $$ finderArgs = new Object[] -->Line_86 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, list)[ FD ]
Line_22 $$ pagination = false-->Line_78 $$ if (!pagination) [ FD ]
Line_45 $$ for (int i = 0; i < names.length; i++) -->Line_47 $$ if (name == null) [ CD ]
Line_21 $$ if ((start == QueryUtil.ALL_POS) && (end == QueryUtil.ALL_POS) && (orderByComparator == null)) -->Line_23 $$ finderArgs = new Object[] [ CD ]
Line_47 $$ if (name == null) -->Line_48 $$ query.append(_FINDER_COLUMN_T_N_NAME_1)[ CD ]
Line_2 $$ public List<ExpandoColumn> findByT_N(long tableId, String[] names, int start, int end, OrderByComparator<ExpandoColumn> orderByComparator, boolean retrieveFromCache) -->Line_6 $$ names = ArrayUtil.distinct(names, NULL_SAFE_STRING_COMPARATOR)[ FD ]
Line_73 $$ for (String name : names) -->Line_75 $$ qPos.add(name)[ FD ]
Line_14 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)-->Line_39 $$ if (list == null) [ FD ]
Line_47 $$ if (name == null) -->Line_49 $$ if (name.equals(StringPool.BLANK)) [ CD ]
Line_29 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)-->Line_85 $$ cacheResult(list)[ FD ]
Line_11 $$ if (expandoColumn == null) -->Line_16 $$ return list[ CD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_50 $$ query.append(_FINDER_COLUMN_T_N_NAME_3)[ FD ]
Line_11 $$ if (expandoColumn == null) -->Line_14 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)[ CD ]
Line_4 $$ names = new String[0]-->Line_6 $$ names = ArrayUtil.distinct(names, NULL_SAFE_STRING_COMPARATOR)[ FD ]
Line_78 $$ if (!pagination) -->Line_80 $$ Collections.sort(list)[ CD ]
Line_79 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end, false)-->Line_80 $$ Collections.sort(list)[ FD ]
Line_66 $$ String sql = query.toString()-->Line_70 $$ Query q = session.createQuery(sql)[ FD ]
Line_39 $$ if (list == null) -->Line_40 $$ StringBundler query = new StringBundler()[ CD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_52 $$ query.append(_FINDER_COLUMN_T_N_NAME_2)[ FD ]
Line_4 $$ names = new String[0]-->Line_32 $$ if ((tableId != expandoColumn.getTableId()) || !ArrayUtil.contains(names, expandoColumn.getName())) [ FD ]
Line_54 $$ if ((i + 1) < names.length) -->Line_55 $$ query.append(WHERE_OR)[ CD ]
Line_79 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end, false)-->Line_86 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, list)[ FD ]
Line_69 $$ session = openSession()-->Line_91 $$ closeSession(session)[ FD ]
Line_2 $$ public List<ExpandoColumn> findByT_N(long tableId, String[] names, int start, int end, OrderByComparator<ExpandoColumn> orderByComparator, boolean retrieveFromCache) -->Line_83 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_45 $$ for (int i = 0; i < names.length; i++) -->Line_54 $$ if ((i + 1) < names.length) [ CD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_41 $$ query.append(_SQL_SELECT_EXPANDOCOLUMN_WHERE)[ FD ]
Line_43 $$ if (names.length > 0) -->Line_45 $$ for (int i = 0; i < names.length; i++) [ CD ]
Line_14 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)-->Line_81 $$ list = Collections.unmodifiableList(list)[ FD ]
Line_11 $$ if (expandoColumn == null) -->Line_12 $$ return Collections.emptyList()[ CD ]
Line_79 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end, false)-->Line_81 $$ list = Collections.unmodifiableList(list)[ FD ]
Line_14 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)-->Line_79 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end, false)[ FD ]
Line_2 $$ public List<ExpandoColumn> findByT_N(long tableId, String[] names, int start, int end, OrderByComparator<ExpandoColumn> orderByComparator, boolean retrieveFromCache) -->Line_25 $$ finderArgs = new Object[] [ FD ]
Line_29 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)-->Line_81 $$ list = Collections.unmodifiableList(list)[ FD ]
Line_20 $$ Object[] finderArgs = null-->Line_86 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, list)[ FD ]
Line_83 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end)-->Line_86 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, list)[ FD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_62 $$ appendOrderByComparator(query, _ORDER_BY_ENTITY_ALIAS, orderByComparator)[ FD ]
Line_29 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)-->Line_80 $$ Collections.sort(list)[ FD ]
Line_70 $$ Query q = session.createQuery(sql)-->Line_71 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_70 $$ Query q = session.createQuery(sql)-->Line_79 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end, false)[ FD ]
Line_61 $$ if (orderByComparator != null) -->Line_63 $$ if (pagination) [ CD ]
Line_49 $$ if (name.equals(StringPool.BLANK)) -->Line_52 $$ query.append(_FINDER_COLUMN_T_N_NAME_2)[ CD ]
Line_10 $$ ExpandoColumn expandoColumn = fetchByT_N(tableId, names[0])-->Line_11 $$ if (expandoColumn == null) [ FD ]
Line_29 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)-->Line_86 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, list)[ FD ]
Line_20 $$ Object[] finderArgs = null-->Line_23 $$ finderArgs = new Object[] [ FD ]
Line_25 $$ finderArgs = new Object[] -->Line_29 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)[ FD ]
Line_81 $$ list = Collections.unmodifiableList(list)-->Line_85 $$ cacheResult(list)[ FD ]
Line_6 $$ names = ArrayUtil.distinct(names, NULL_SAFE_STRING_COMPARATOR)-->Line_32 $$ if ((tableId != expandoColumn.getTableId()) || !ArrayUtil.contains(names, expandoColumn.getName())) [ FD ]
Line_25 $$ finderArgs = new Object[] -->Line_86 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, list)[ FD ]
Line_81 $$ list = Collections.unmodifiableList(list)-->Line_83 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_20 $$ Object[] finderArgs = null-->Line_25 $$ finderArgs = new Object[] [ FD ]
Line_2 $$ public List<ExpandoColumn> findByT_N(long tableId, String[] names, int start, int end, OrderByComparator<ExpandoColumn> orderByComparator, boolean retrieveFromCache) -->Line_21 $$ if ((start == QueryUtil.ALL_POS) && (end == QueryUtil.ALL_POS) && (orderByComparator == null)) [ CD ]
Line_5 $$ if (names.length > 1) -->Line_6 $$ names = ArrayUtil.distinct(names, NULL_SAFE_STRING_COMPARATOR)[ CD ]
Line_14 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)-->Line_83 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_2 $$ public List<ExpandoColumn> findByT_N(long tableId, String[] names, int start, int end, OrderByComparator<ExpandoColumn> orderByComparator, boolean retrieveFromCache) -->Line_20 $$ Object[] finderArgs = null[ CD ]
Line_46 $$ String name = names[i]-->Line_75 $$ qPos.add(name)[ FD ]
Line_33 $$ list = null-->Line_39 $$ if (list == null) [ FD ]
Line_39 $$ if (list == null) -->Line_42 $$ query.append(_FINDER_COLUMN_T_N_TABLEID_2)[ CD ]
Line_67 $$ Session session = null-->Line_70 $$ Query q = session.createQuery(sql)[ FD ]
Line_79 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end, false)-->Line_85 $$ cacheResult(list)[ FD ]
Line_2 $$ public List<ExpandoColumn> findByT_N(long tableId, String[] names, int start, int end, OrderByComparator<ExpandoColumn> orderByComparator, boolean retrieveFromCache) -->Line_19 $$ boolean pagination = true[ CD ]
Line_19 $$ boolean pagination = true-->Line_22 $$ pagination = false[ FD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_58 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_4 $$ names = new String[0]-->Line_7 $$ Arrays.sort(names, NULL_SAFE_STRING_COMPARATOR)[ FD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_64 $$ query.append(ExpandoColumnModelImpl.ORDER_BY_JPQL)[ FD ]
Line_39 $$ if (list == null) -->Line_41 $$ query.append(_SQL_SELECT_EXPANDOCOLUMN_WHERE)[ CD ]
Line_29 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)-->Line_30 $$ if ((list != null) && !list.isEmpty()) [ FD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_66 $$ String sql = query.toString()[ FD ]
Line_74 $$ if ((name != null) && !name.isEmpty()) -->Line_75 $$ qPos.add(name)[ CD ]
Line_2 $$ public List<ExpandoColumn> findByT_N(long tableId, String[] names, int start, int end, OrderByComparator<ExpandoColumn> orderByComparator, boolean retrieveFromCache) -->Line_39 $$ if (list == null) [ CD ]
Line_79 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end, false)-->Line_83 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_9 $$ if (names.length == 1) -->Line_10 $$ ExpandoColumn expandoColumn = fetchByT_N(tableId, names[0])[ CD ]
Line_11 $$ if (expandoColumn == null) -->Line_15 $$ list.add(expandoColumn)[ CD ]
Line_29 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)-->Line_79 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end, false)[ FD ]
Line_3 $$ if (names == null) -->Line_4 $$ names = new String[0][ CD ]
Line_10 $$ ExpandoColumn expandoColumn = fetchByT_N(tableId, names[0])-->Line_32 $$ if ((tableId != expandoColumn.getTableId()) || !ArrayUtil.contains(names, expandoColumn.getName())) [ FD ]
Line_32 $$ if ((tableId != expandoColumn.getTableId()) || !ArrayUtil.contains(names, expandoColumn.getName())) -->Line_33 $$ list = null[ CD ]
Line_2 $$ public List<ExpandoColumn> findByT_N(long tableId, String[] names, int start, int end, OrderByComparator<ExpandoColumn> orderByComparator, boolean retrieveFromCache) -->Line_28 $$ if (retrieveFromCache) [ CD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_42 $$ query.append(_FINDER_COLUMN_T_N_TABLEID_2)[ FD ]
Line_14 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)-->Line_80 $$ Collections.sort(list)[ FD ]
Line_39 $$ if (list == null) -->Line_67 $$ Session session = null[ CD ]
Line_39 $$ if (list == null) -->Line_61 $$ if (orderByComparator != null) [ CD ]
Line_2 $$ public List<ExpandoColumn> findByT_N(long tableId, String[] names, int start, int end, OrderByComparator<ExpandoColumn> orderByComparator, boolean retrieveFromCache) -->Line_4 $$ names = new String[0][ FD ]
Line_46 $$ String name = names[i]-->Line_74 $$ if ((name != null) && !name.isEmpty()) [ FD ]
Line_2 $$ public List<ExpandoColumn> findByT_N(long tableId, String[] names, int start, int end, OrderByComparator<ExpandoColumn> orderByComparator, boolean retrieveFromCache) -->Line_79 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end, false)[ FD ]
Line_2 $$ public List<ExpandoColumn> findByT_N(long tableId, String[] names, int start, int end, OrderByComparator<ExpandoColumn> orderByComparator, boolean retrieveFromCache) -->Line_3 $$ if (names == null) [ FD ]
Line_33 $$ list = null-->Line_80 $$ Collections.sort(list)[ FD ]
Line_23 $$ finderArgs = new Object[] -->Line_29 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)[ FD ]
Line_14 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)-->Line_30 $$ if ((list != null) && !list.isEmpty()) [ FD ]
Line_6 $$ names = ArrayUtil.distinct(names, NULL_SAFE_STRING_COMPARATOR)-->Line_25 $$ finderArgs = new Object[] [ FD ]
Line_67 $$ Session session = null-->Line_91 $$ closeSession(session)[ FD ]
Line_2 $$ public List<ExpandoColumn> findByT_N(long tableId, String[] names, int start, int end, OrderByComparator<ExpandoColumn> orderByComparator, boolean retrieveFromCache) -->Line_72 $$ qPos.add(tableId)[ FD ]
Line_19 $$ boolean pagination = true-->Line_61 $$ if (orderByComparator != null) [ FD ]
Line_2 $$ public List<ExpandoColumn> findByT_N(long tableId, String[] names, int start, int end, OrderByComparator<ExpandoColumn> orderByComparator, boolean retrieveFromCache) -->Line_3 $$ if (names == null) [ CD ]
Line_61 $$ if (orderByComparator != null) -->Line_62 $$ appendOrderByComparator(query, _ORDER_BY_ENTITY_ALIAS, orderByComparator)[ CD ]
Line_81 $$ list = Collections.unmodifiableList(list)-->Line_86 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, list)[ FD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_55 $$ query.append(WHERE_OR)[ FD ]
Line_9 $$ if (names.length == 1) -->Line_11 $$ if (expandoColumn == null) [ CD ]
Line_28 $$ if (retrieveFromCache) -->Line_29 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)[ CD ]
Line_10 $$ ExpandoColumn expandoColumn = fetchByT_N(tableId, names[0])-->Line_15 $$ list.add(expandoColumn)[ FD ]
Line_73 $$ for (String name : names) -->Line_74 $$ if ((name != null) && !name.isEmpty()) [ FD ]
Line_71 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_72 $$ qPos.add(tableId)[ FD ]
Line_5 $$ if (names.length > 1) -->Line_7 $$ Arrays.sort(names, NULL_SAFE_STRING_COMPARATOR)[ CD ]
Line_28 $$ if (retrieveFromCache) -->Line_30 $$ if ((list != null) && !list.isEmpty()) [ CD ]
Line_33 $$ list = null-->Line_79 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end, false)[ FD ]
Line_14 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)-->Line_15 $$ list.add(expandoColumn)[ FD ]
Line_46 $$ String name = names[i]-->Line_49 $$ if (name.equals(StringPool.BLANK)) [ FD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_60 $$ query.setStringAt(removeConjunction(query.stringAt(query.index() - 1)), query.index() - 1)[ FD ]
Line_33 $$ list = null-->Line_81 $$ list = Collections.unmodifiableList(list)[ FD ]
Line_20 $$ Object[] finderArgs = null-->Line_29 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)[ FD ]
Line_14 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)-->Line_86 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, list)[ FD ]
Line_21 $$ if ((start == QueryUtil.ALL_POS) && (end == QueryUtil.ALL_POS) && (orderByComparator == null)) -->Line_25 $$ finderArgs = new Object[] [ CD ]
Line_2 $$ public List<ExpandoColumn> findByT_N(long tableId, String[] names, int start, int end, OrderByComparator<ExpandoColumn> orderByComparator, boolean retrieveFromCache) -->Line_94 $$ return list[ CD ]
Line_43 $$ if (names.length > 0) -->Line_44 $$ query.append(StringPool.OPEN_PARENTHESIS)[ CD ]
Line_70 $$ Query q = session.createQuery(sql)-->Line_83 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_20 $$ Object[] finderArgs = null-->Line_88 $$ finderCache.removeResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs)[ FD ]
Line_29 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)-->Line_39 $$ if (list == null) [ FD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_44 $$ query.append(StringPool.OPEN_PARENTHESIS)[ FD ]
Line_19 $$ boolean pagination = true-->Line_78 $$ if (!pagination) [ FD ]
Line_69 $$ session = openSession()-->Line_70 $$ Query q = session.createQuery(sql)[ FD ]
Line_2 $$ public List<ExpandoColumn> findByT_N(long tableId, String[] names, int start, int end, OrderByComparator<ExpandoColumn> orderByComparator, boolean retrieveFromCache) -->Line_7 $$ Arrays.sort(names, NULL_SAFE_STRING_COMPARATOR)[ FD ]
