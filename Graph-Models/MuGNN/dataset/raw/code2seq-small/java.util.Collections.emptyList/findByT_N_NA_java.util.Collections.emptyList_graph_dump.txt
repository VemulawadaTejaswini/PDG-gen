Line_30 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)-->Line_46 $$ if ((list != null) && !list.isEmpty()) [ FD ]
Line_39 $$ finderArgs = new Object[] -->Line_45 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)[ FD ]
Line_77 $$ if (orderByComparator != null) -->Line_79 $$ if (pagination) [ CD ]
Line_36 $$ Object[] finderArgs = null-->Line_39 $$ finderArgs = new Object[] [ FD ]
Line_56 $$ StringBundler query = new StringBundler()-->Line_57 $$ query.append(_SQL_SELECT_EXPANDOCOLUMN_WHERE)[ FD ]
Line_55 $$ if (list == null) -->Line_76 $$ query.setStringAt(removeConjunction(query.stringAt(query.index() - 1)), query.index() - 1)[ CD ]
Line_56 $$ StringBundler query = new StringBundler()-->Line_76 $$ query.setStringAt(removeConjunction(query.stringAt(query.index() - 1)), query.index() - 1)[ FD ]
Line_36 $$ Object[] finderArgs = null-->Line_41 $$ finderArgs = new Object[] [ FD ]
Line_95 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end, false)-->Line_101 $$ cacheResult(list)[ FD ]
Line_55 $$ if (list == null) -->Line_56 $$ StringBundler query = new StringBundler()[ CD ]
Line_86 $$ Query q = session.createQuery(sql)-->Line_87 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_61 $$ for (int i = 0; i < names.length; i++) -->Line_63 $$ if (name == null) [ CD ]
Line_63 $$ if (name == null) -->Line_64 $$ query.append(_FINDER_COLUMN_T_N_NAME_1)[ CD ]
Line_95 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end, false)-->Line_96 $$ Collections.sort(list)[ FD ]
Line_99 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end)-->Line_101 $$ cacheResult(list)[ FD ]
Line_85 $$ session = openSession()-->Line_107 $$ closeSession(session)[ FD ]
Line_45 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)-->Line_49 $$ list = null[ FD ]
Line_44 $$ if (retrieveFromCache) -->Line_46 $$ if ((list != null) && !list.isEmpty()) [ CD ]
Line_19 $$ if (names == null) -->Line_21 $$ if (names.length > 1) [ CD ]
Line_70 $$ if ((i + 1) < names.length) -->Line_71 $$ query.append(WHERE_OR)[ CD ]
Line_62 $$ String name = names[i]-->Line_65 $$ if (name.equals(StringPool.BLANK)) [ FD ]
Line_56 $$ StringBundler query = new StringBundler()-->Line_58 $$ query.append(_FINDER_COLUMN_T_N_TABLEID_2)[ FD ]
Line_20 $$ names = new String[0]-->Line_23 $$ Arrays.sort(names, NULL_SAFE_STRING_COMPARATOR)[ FD ]
Line_30 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)-->Line_97 $$ list = Collections.unmodifiableList(list)[ FD ]
Line_45 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)-->Line_102 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, list)[ FD ]
Line_45 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)-->Line_99 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_49 $$ list = null-->Line_96 $$ Collections.sort(list)[ FD ]
Line_56 $$ StringBundler query = new StringBundler()-->Line_66 $$ query.append(_FINDER_COLUMN_T_N_NAME_3)[ FD ]
Line_22 $$ names = ArrayUtil.distinct(names, NULL_SAFE_STRING_COMPARATOR)-->Line_39 $$ finderArgs = new Object[] [ FD ]
Line_97 $$ list = Collections.unmodifiableList(list)-->Line_101 $$ cacheResult(list)[ FD ]
Line_27 $$ if (expandoColumn == null) -->Line_28 $$ return Collections.emptyList()[ CD ]
Line_30 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)-->Line_45 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)[ FD ]
Line_55 $$ if (list == null) -->Line_77 $$ if (orderByComparator != null) [ CD ]
Line_99 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end)-->Line_102 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, list)[ FD ]
Line_38 $$ pagination = false-->Line_94 $$ if (!pagination) [ FD ]
Line_83 $$ Session session = null-->Line_85 $$ session = openSession()[ FD ]
Line_55 $$ if (list == null) -->Line_83 $$ Session session = null[ CD ]
Line_37 $$ if ((start == QueryUtil.ALL_POS) && (end == QueryUtil.ALL_POS) && (orderByComparator == null)) -->Line_39 $$ finderArgs = new Object[] [ CD ]
Line_49 $$ list = null-->Line_55 $$ if (list == null) [ FD ]
Line_94 $$ if (!pagination) -->Line_95 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end, false)[ CD ]
Line_56 $$ StringBundler query = new StringBundler()-->Line_78 $$ appendOrderByComparator(query, _ORDER_BY_ENTITY_ALIAS, orderByComparator)[ FD ]
Line_61 $$ for (int i = 0; i < names.length; i++) -->Line_70 $$ if ((i + 1) < names.length) [ CD ]
Line_45 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)-->Line_55 $$ if (list == null) [ FD ]
Line_45 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)-->Line_97 $$ list = Collections.unmodifiableList(list)[ FD ]
Line_20 $$ names = new String[0]-->Line_48 $$ if ((tableId != expandoColumn.getTableId()) || !ArrayUtil.contains(names, expandoColumn.getName())) [ FD ]
Line_20 $$ names = new String[0]-->Line_22 $$ names = ArrayUtil.distinct(names, NULL_SAFE_STRING_COMPARATOR)[ FD ]
Line_27 $$ if (expandoColumn == null) -->Line_30 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)[ CD ]
Line_45 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)-->Line_101 $$ cacheResult(list)[ FD ]
Line_21 $$ if (names.length > 1) -->Line_23 $$ Arrays.sort(names, NULL_SAFE_STRING_COMPARATOR)[ CD ]
Line_45 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)-->Line_96 $$ Collections.sort(list)[ FD ]
Line_49 $$ list = null-->Line_102 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, list)[ FD ]
Line_25 $$ if (names.length == 1) -->Line_27 $$ if (expandoColumn == null) [ CD ]
Line_79 $$ if (pagination) -->Line_80 $$ query.append(ExpandoColumnModelImpl.ORDER_BY_JPQL)[ CD ]
Line_87 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_88 $$ qPos.add(tableId)[ FD ]
Line_65 $$ if (name.equals(StringPool.BLANK)) -->Line_68 $$ query.append(_FINDER_COLUMN_T_N_NAME_2)[ CD ]
Line_30 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)-->Line_102 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, list)[ FD ]
Line_22 $$ names = ArrayUtil.distinct(names, NULL_SAFE_STRING_COMPARATOR)-->Line_41 $$ finderArgs = new Object[] [ FD ]
Line_39 $$ finderArgs = new Object[] -->Line_102 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, list)[ FD ]
Line_56 $$ StringBundler query = new StringBundler()-->Line_82 $$ String sql = query.toString()[ FD ]
Line_95 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end, false)-->Line_102 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, list)[ FD ]
Line_49 $$ list = null-->Line_95 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end, false)[ FD ]
Line_41 $$ finderArgs = new Object[] -->Line_45 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)[ FD ]
Line_59 $$ if (names.length > 0) -->Line_74 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_83 $$ Session session = null-->Line_86 $$ Query q = session.createQuery(sql)[ FD ]
Line_56 $$ StringBundler query = new StringBundler()-->Line_68 $$ query.append(_FINDER_COLUMN_T_N_NAME_2)[ FD ]
Line_30 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)-->Line_101 $$ cacheResult(list)[ FD ]
Line_19 $$ if (names == null) -->Line_20 $$ names = new String[0][ CD ]
Line_95 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end, false)-->Line_97 $$ list = Collections.unmodifiableList(list)[ FD ]
Line_49 $$ list = null-->Line_99 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_56 $$ StringBundler query = new StringBundler()-->Line_80 $$ query.append(ExpandoColumnModelImpl.ORDER_BY_JPQL)[ FD ]
Line_59 $$ if (names.length > 0) -->Line_61 $$ for (int i = 0; i < names.length; i++) [ CD ]
Line_37 $$ if ((start == QueryUtil.ALL_POS) && (end == QueryUtil.ALL_POS) && (orderByComparator == null)) -->Line_41 $$ finderArgs = new Object[] [ CD ]
Line_26 $$ ExpandoColumn expandoColumn = fetchByT_N(tableId, names[0])-->Line_31 $$ list.add(expandoColumn)[ FD ]
Line_45 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)-->Line_46 $$ if ((list != null) && !list.isEmpty()) [ FD ]
Line_85 $$ session = openSession()-->Line_86 $$ Query q = session.createQuery(sql)[ FD ]
Line_39 $$ finderArgs = new Object[] -->Line_41 $$ finderArgs = new Object[] [ FD ]
Line_62 $$ String name = names[i]-->Line_63 $$ if (name == null) [ FD ]
Line_36 $$ Object[] finderArgs = null-->Line_104 $$ finderCache.removeResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs)[ FD ]
Line_61 $$ for (int i = 0; i < names.length; i++) -->Line_62 $$ String name = names[i][ CD ]
Line_82 $$ String sql = query.toString()-->Line_86 $$ Query q = session.createQuery(sql)[ FD ]
Line_62 $$ String name = names[i]-->Line_91 $$ qPos.add(name)[ FD ]
Line_44 $$ if (retrieveFromCache) -->Line_45 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)[ CD ]
Line_49 $$ list = null-->Line_97 $$ list = Collections.unmodifiableList(list)[ FD ]
Line_56 $$ StringBundler query = new StringBundler()-->Line_74 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_62 $$ String name = names[i]-->Line_90 $$ if ((name != null) && !name.isEmpty()) [ FD ]
Line_41 $$ finderArgs = new Object[] -->Line_102 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, list)[ FD ]
Line_56 $$ StringBundler query = new StringBundler()-->Line_64 $$ query.append(_FINDER_COLUMN_T_N_NAME_1)[ FD ]
Line_37 $$ if ((start == QueryUtil.ALL_POS) && (end == QueryUtil.ALL_POS) && (orderByComparator == null)) -->Line_38 $$ pagination = false[ CD ]
Line_26 $$ ExpandoColumn expandoColumn = fetchByT_N(tableId, names[0])-->Line_27 $$ if (expandoColumn == null) [ FD ]
Line_56 $$ StringBundler query = new StringBundler()-->Line_60 $$ query.append(StringPool.OPEN_PARENTHESIS)[ FD ]
Line_41 $$ finderArgs = new Object[] -->Line_104 $$ finderCache.removeResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs)[ FD ]
Line_22 $$ names = ArrayUtil.distinct(names, NULL_SAFE_STRING_COMPARATOR)-->Line_48 $$ if ((tableId != expandoColumn.getTableId()) || !ArrayUtil.contains(names, expandoColumn.getName())) [ FD ]
Line_63 $$ if (name == null) -->Line_65 $$ if (name.equals(StringPool.BLANK)) [ CD ]
Line_30 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)-->Line_31 $$ list.add(expandoColumn)[ FD ]
Line_21 $$ if (names.length > 1) -->Line_22 $$ names = ArrayUtil.distinct(names, NULL_SAFE_STRING_COMPARATOR)[ CD ]
Line_59 $$ if (names.length > 0) -->Line_60 $$ query.append(StringPool.OPEN_PARENTHESIS)[ CD ]
Line_35 $$ boolean pagination = true-->Line_38 $$ pagination = false[ FD ]
Line_38 $$ pagination = false-->Line_77 $$ if (orderByComparator != null) [ FD ]
Line_39 $$ finderArgs = new Object[] -->Line_104 $$ finderCache.removeResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs)[ FD ]
Line_27 $$ if (expandoColumn == null) -->Line_32 $$ return list[ CD ]
Line_49 $$ list = null-->Line_101 $$ cacheResult(list)[ FD ]
Line_30 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)-->Line_55 $$ if (list == null) [ FD ]
Line_36 $$ Object[] finderArgs = null-->Line_102 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, list)[ FD ]
Line_26 $$ ExpandoColumn expandoColumn = fetchByT_N(tableId, names[0])-->Line_48 $$ if ((tableId != expandoColumn.getTableId()) || !ArrayUtil.contains(names, expandoColumn.getName())) [ FD ]
Line_89 $$ for (String name : names) -->Line_90 $$ if ((name != null) && !name.isEmpty()) [ FD ]
Line_30 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)-->Line_96 $$ Collections.sort(list)[ FD ]
Line_65 $$ if (name.equals(StringPool.BLANK)) -->Line_66 $$ query.append(_FINDER_COLUMN_T_N_NAME_3)[ CD ]
Line_83 $$ Session session = null-->Line_107 $$ closeSession(session)[ FD ]
Line_55 $$ if (list == null) -->Line_82 $$ String sql = query.toString()[ CD ]
Line_97 $$ list = Collections.unmodifiableList(list)-->Line_99 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_87 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_91 $$ qPos.add(name)[ FD ]
Line_95 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end, false)-->Line_99 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_25 $$ if (names.length == 1) -->Line_26 $$ ExpandoColumn expandoColumn = fetchByT_N(tableId, names[0])[ CD ]
Line_30 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)-->Line_99 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_36 $$ Object[] finderArgs = null-->Line_45 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)[ FD ]
Line_27 $$ if (expandoColumn == null) -->Line_31 $$ list.add(expandoColumn)[ CD ]
Line_55 $$ if (list == null) -->Line_59 $$ if (names.length > 0) [ CD ]
Line_94 $$ if (!pagination) -->Line_96 $$ Collections.sort(list)[ CD ]
Line_22 $$ names = ArrayUtil.distinct(names, NULL_SAFE_STRING_COMPARATOR)-->Line_23 $$ Arrays.sort(names, NULL_SAFE_STRING_COMPARATOR)[ FD ]
Line_90 $$ if ((name != null) && !name.isEmpty()) -->Line_91 $$ qPos.add(name)[ CD ]
Line_30 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)-->Line_95 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end, false)[ FD ]
Line_55 $$ if (list == null) -->Line_57 $$ query.append(_SQL_SELECT_EXPANDOCOLUMN_WHERE)[ CD ]
Line_55 $$ if (list == null) -->Line_58 $$ query.append(_FINDER_COLUMN_T_N_TABLEID_2)[ CD ]
Line_20 $$ names = new String[0]-->Line_39 $$ finderArgs = new Object[] [ FD ]
Line_77 $$ if (orderByComparator != null) -->Line_78 $$ appendOrderByComparator(query, _ORDER_BY_ENTITY_ALIAS, orderByComparator)[ CD ]
Line_20 $$ names = new String[0]-->Line_41 $$ finderArgs = new Object[] [ FD ]
Line_56 $$ StringBundler query = new StringBundler()-->Line_71 $$ query.append(WHERE_OR)[ FD ]
Line_35 $$ boolean pagination = true-->Line_77 $$ if (orderByComparator != null) [ FD ]
Line_30 $$ List<ExpandoColumn> list = new ArrayList<ExpandoColumn>(1)-->Line_49 $$ list = null[ FD ]
Line_94 $$ if (!pagination) -->Line_97 $$ list = Collections.unmodifiableList(list)[ CD ]
Line_35 $$ boolean pagination = true-->Line_94 $$ if (!pagination) [ FD ]
Line_86 $$ Query q = session.createQuery(sql)-->Line_95 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end, false)[ FD ]
Line_94 $$ if (!pagination) -->Line_99 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end)[ CD ]
Line_97 $$ list = Collections.unmodifiableList(list)-->Line_102 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, list)[ FD ]
Line_45 $$ list = (List<ExpandoColumn>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_T_N, finderArgs, this)-->Line_95 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end, false)[ FD ]
Line_48 $$ if ((tableId != expandoColumn.getTableId()) || !ArrayUtil.contains(names, expandoColumn.getName())) -->Line_49 $$ list = null[ CD ]
Line_89 $$ for (String name : names) -->Line_91 $$ qPos.add(name)[ FD ]
Line_86 $$ Query q = session.createQuery(sql)-->Line_99 $$ list = (List<ExpandoColumn>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
