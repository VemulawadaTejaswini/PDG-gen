Line_5 $$ SpelExpressionParser parser = new SpelExpressionParser()-->Line_6 $$ Expression expression = parser.parseExpression("T(org.springframework.expression.spel.SpelReproTests.GuavaLists).newArrayList(#iterable)")[ FD ]
Line_2 $$ public void SPR12803() throws Exception -->Line_3 $$ StandardEvaluationContext sec = new StandardEvaluationContext()[ CD ]
Line_6 $$ Expression expression = parser.parseExpression("T(org.springframework.expression.spel.SpelReproTests.GuavaLists).newArrayList(#iterable)")-->Line_7 $$ assertTrue(expression.getValue(sec) instanceof ArrayList)[ FD ]
Line_2 $$ public void SPR12803() throws Exception -->Line_4 $$ sec.setVariable("iterable", Collections.emptyList())[ CD ]
Line_3 $$ StandardEvaluationContext sec = new StandardEvaluationContext()-->Line_4 $$ sec.setVariable("iterable", Collections.emptyList())[ FD ]
Line_2 $$ public void SPR12803() throws Exception -->Line_5 $$ SpelExpressionParser parser = new SpelExpressionParser()[ CD ]
Line_2 $$ public void SPR12803() throws Exception -->Line_7 $$ assertTrue(expression.getValue(sec) instanceof ArrayList)[ CD ]
Line_2 $$ public void SPR12803() throws Exception -->Line_6 $$ Expression expression = parser.parseExpression("T(org.springframework.expression.spel.SpelReproTests.GuavaLists).newArrayList(#iterable)")[ CD ]
Line_3 $$ StandardEvaluationContext sec = new StandardEvaluationContext()-->Line_7 $$ assertTrue(expression.getValue(sec) instanceof ArrayList)[ FD ]
