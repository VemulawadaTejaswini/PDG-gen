Line_2 $$ protected List<TemplateVariableDefinition> getAutocompleteTemplateVariableDefinitions(HttpServletRequest request, String language) throws Exception -->Line_27 $$ Template template = TemplateManagerUtil.getTemplate(language, templateResource, false)[ CD ]
Line_11 $$ long classNameId = BeanParamUtil.getLong(ddmTemplate, request, "classNameId")-->Line_16 $$ classNameId = ddmTemplate.getClassNameId()[ FD ]
Line_10 $$ long classPK = BeanParamUtil.getLong(ddmTemplate, request, "classPK")-->Line_12 $$ if (classPK > 0) [ FD ]
Line_9 $$ DDMTemplate ddmTemplate = (DDMTemplate) request.getAttribute(DDMWebKeys.DYNAMIC_DATA_MAPPING_TEMPLATE)-->Line_15 $$ if (ddmTemplate != null) [ FD ]
Line_2 $$ protected List<TemplateVariableDefinition> getAutocompleteTemplateVariableDefinitions(HttpServletRequest request, String language) throws Exception -->Line_36 $$ return new ArrayList(templateVariableDefinitions)[ CD ]
Line_2 $$ protected List<TemplateVariableDefinition> getAutocompleteTemplateVariableDefinitions(HttpServletRequest request, String language) throws Exception -->Line_18 $$ Map<String, TemplateVariableGroup> templateVariableGroups = TemplateContextHelper.getTemplateVariableGroups(classNameId, classPK, language, themeDisplay.getLocale())[ FD ]
Line_13 $$ DDMStructure ddmStructure = DDMStructureServiceUtil.getStructure(classPK)-->Line_14 $$ classNameId = ddmStructure.getClassNameId()[ FD ]
Line_15 $$ if (ddmTemplate != null) -->Line_16 $$ classNameId = ddmTemplate.getClassNameId()[ CD ]
Line_11 $$ long classNameId = BeanParamUtil.getLong(ddmTemplate, request, "classNameId")-->Line_18 $$ Map<String, TemplateVariableGroup> templateVariableGroups = TemplateContextHelper.getTemplateVariableGroups(classNameId, classPK, language, themeDisplay.getLocale())[ FD ]
Line_19 $$ for (TemplateVariableGroup templateVariableGroup : templateVariableGroups.values()) -->Line_23 $$ templateVariableDefinitions.addAll(templateVariableGroup.getTemplateVariableDefinitions())[ FD ]
Line_2 $$ protected List<TemplateVariableDefinition> getAutocompleteTemplateVariableDefinitions(HttpServletRequest request, String language) throws Exception -->Line_6 $$ Set<TemplateVariableDefinition> templateVariableDefinitions = new LinkedHashSet()[ CD ]
Line_2 $$ protected List<TemplateVariableDefinition> getAutocompleteTemplateVariableDefinitions(HttpServletRequest request, String language) throws Exception -->Line_9 $$ DDMTemplate ddmTemplate = (DDMTemplate) request.getAttribute(DDMWebKeys.DYNAMIC_DATA_MAPPING_TEMPLATE)[ CD ]
Line_2 $$ protected List<TemplateVariableDefinition> getAutocompleteTemplateVariableDefinitions(HttpServletRequest request, String language) throws Exception -->Line_12 $$ if (classPK > 0) [ CD ]
Line_2 $$ protected List<TemplateVariableDefinition> getAutocompleteTemplateVariableDefinitions(HttpServletRequest request, String language) throws Exception -->Line_10 $$ long classPK = BeanParamUtil.getLong(ddmTemplate, request, "classPK")[ FD ]
Line_2 $$ protected List<TemplateVariableDefinition> getAutocompleteTemplateVariableDefinitions(HttpServletRequest request, String language) throws Exception -->Line_11 $$ long classNameId = BeanParamUtil.getLong(ddmTemplate, request, "classNameId")[ CD ]
Line_2 $$ protected List<TemplateVariableDefinition> getAutocompleteTemplateVariableDefinitions(HttpServletRequest request, String language) throws Exception -->Line_10 $$ long classPK = BeanParamUtil.getLong(ddmTemplate, request, "classPK")[ CD ]
Line_33 $$ TemplateVariableDefinition variableDefinition = new TemplateVariableDefinition(key, value.getClass(), key, (String) null)-->Line_34 $$ templateVariableDefinitions.add(variableDefinition)[ FD ]
Line_2 $$ protected List<TemplateVariableDefinition> getAutocompleteTemplateVariableDefinitions(HttpServletRequest request, String language) throws Exception -->Line_18 $$ Map<String, TemplateVariableGroup> templateVariableGroups = TemplateContextHelper.getTemplateVariableGroups(classNameId, classPK, language, themeDisplay.getLocale())[ CD ]
Line_2 $$ protected List<TemplateVariableDefinition> getAutocompleteTemplateVariableDefinitions(HttpServletRequest request, String language) throws Exception -->Line_27 $$ Template template = TemplateManagerUtil.getTemplate(language, templateResource, false)[ FD ]
Line_9 $$ DDMTemplate ddmTemplate = (DDMTemplate) request.getAttribute(DDMWebKeys.DYNAMIC_DATA_MAPPING_TEMPLATE)-->Line_10 $$ long classPK = BeanParamUtil.getLong(ddmTemplate, request, "classPK")[ FD ]
Line_12 $$ if (classPK > 0) -->Line_14 $$ classNameId = ddmStructure.getClassNameId()[ CD ]
Line_9 $$ DDMTemplate ddmTemplate = (DDMTemplate) request.getAttribute(DDMWebKeys.DYNAMIC_DATA_MAPPING_TEMPLATE)-->Line_11 $$ long classNameId = BeanParamUtil.getLong(ddmTemplate, request, "classNameId")[ FD ]
Line_28 $$ for (String key : template.getKeys()) -->Line_29 $$ Object value = template.get(key)[ FD ]
Line_2 $$ protected List<TemplateVariableDefinition> getAutocompleteTemplateVariableDefinitions(HttpServletRequest request, String language) throws Exception -->Line_3 $$ if (!isAutocompleteEnabled(language)) [ CD ]
Line_14 $$ classNameId = ddmStructure.getClassNameId()-->Line_18 $$ Map<String, TemplateVariableGroup> templateVariableGroups = TemplateContextHelper.getTemplateVariableGroups(classNameId, classPK, language, themeDisplay.getLocale())[ FD ]
Line_29 $$ Object value = template.get(key)-->Line_30 $$ if (value == null) [ FD ]
Line_3 $$ if (!isAutocompleteEnabled(language)) -->Line_4 $$ return Collections.emptyList()[ CD ]
Line_2 $$ protected List<TemplateVariableDefinition> getAutocompleteTemplateVariableDefinitions(HttpServletRequest request, String language) throws Exception -->Line_3 $$ if (!isAutocompleteEnabled(language)) [ FD ]
Line_29 $$ Object value = template.get(key)-->Line_33 $$ TemplateVariableDefinition variableDefinition = new TemplateVariableDefinition(key, value.getClass(), key, (String) null)[ FD ]
Line_11 $$ long classNameId = BeanParamUtil.getLong(ddmTemplate, request, "classNameId")-->Line_14 $$ classNameId = ddmStructure.getClassNameId()[ FD ]
Line_10 $$ long classPK = BeanParamUtil.getLong(ddmTemplate, request, "classPK")-->Line_18 $$ Map<String, TemplateVariableGroup> templateVariableGroups = TemplateContextHelper.getTemplateVariableGroups(classNameId, classPK, language, themeDisplay.getLocale())[ FD ]
Line_2 $$ protected List<TemplateVariableDefinition> getAutocompleteTemplateVariableDefinitions(HttpServletRequest request, String language) throws Exception -->Line_9 $$ DDMTemplate ddmTemplate = (DDMTemplate) request.getAttribute(DDMWebKeys.DYNAMIC_DATA_MAPPING_TEMPLATE)[ FD ]
Line_27 $$ Template template = TemplateManagerUtil.getTemplate(language, templateResource, false)-->Line_28 $$ for (String key : template.getKeys()) [ FD ]
Line_6 $$ Set<TemplateVariableDefinition> templateVariableDefinitions = new LinkedHashSet()-->Line_34 $$ templateVariableDefinitions.add(variableDefinition)[ FD ]
Line_2 $$ protected List<TemplateVariableDefinition> getAutocompleteTemplateVariableDefinitions(HttpServletRequest request, String language) throws Exception -->Line_11 $$ long classNameId = BeanParamUtil.getLong(ddmTemplate, request, "classNameId")[ FD ]
Line_10 $$ long classPK = BeanParamUtil.getLong(ddmTemplate, request, "classPK")-->Line_13 $$ DDMStructure ddmStructure = DDMStructureServiceUtil.getStructure(classPK)[ FD ]
Line_12 $$ if (classPK > 0) -->Line_15 $$ if (ddmTemplate != null) [ CD ]
Line_12 $$ if (classPK > 0) -->Line_13 $$ DDMStructure ddmStructure = DDMStructureServiceUtil.getStructure(classPK)[ CD ]
Line_18 $$ Map<String, TemplateVariableGroup> templateVariableGroups = TemplateContextHelper.getTemplateVariableGroups(classNameId, classPK, language, themeDisplay.getLocale())-->Line_19 $$ for (TemplateVariableGroup templateVariableGroup : templateVariableGroups.values()) [ FD ]
Line_19 $$ for (TemplateVariableGroup templateVariableGroup : templateVariableGroups.values()) -->Line_20 $$ if (!templateVariableGroup.isAutocompleteEnabled()) [ FD ]
Line_16 $$ classNameId = ddmTemplate.getClassNameId()-->Line_18 $$ Map<String, TemplateVariableGroup> templateVariableGroups = TemplateContextHelper.getTemplateVariableGroups(classNameId, classPK, language, themeDisplay.getLocale())[ FD ]
Line_6 $$ Set<TemplateVariableDefinition> templateVariableDefinitions = new LinkedHashSet()-->Line_23 $$ templateVariableDefinitions.addAll(templateVariableGroup.getTemplateVariableDefinitions())[ FD ]
Line_27 $$ Template template = TemplateManagerUtil.getTemplate(language, templateResource, false)-->Line_29 $$ Object value = template.get(key)[ FD ]
Line_14 $$ classNameId = ddmStructure.getClassNameId()-->Line_16 $$ classNameId = ddmTemplate.getClassNameId()[ FD ]
Line_9 $$ DDMTemplate ddmTemplate = (DDMTemplate) request.getAttribute(DDMWebKeys.DYNAMIC_DATA_MAPPING_TEMPLATE)-->Line_16 $$ classNameId = ddmTemplate.getClassNameId()[ FD ]
