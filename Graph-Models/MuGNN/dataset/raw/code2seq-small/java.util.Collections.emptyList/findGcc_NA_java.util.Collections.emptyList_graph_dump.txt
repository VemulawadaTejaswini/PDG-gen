Line_9 $$ for (int i = 0; i < gppCandidates.size(); i++) -->Line_12 $$ if (version.isAvailable()) [ CD ]
Line_11 $$ GccVersionResult version = versionDeterminer.getGccMetaData(candidate, Collections.<String>emptyList())-->Line_12 $$ if (version.isAvailable()) [ FD ]
Line_3 $$ GccVersionDeterminer versionDeterminer = GccVersionDeterminer.forGcc(new ExecActionFactory() -->Line_5 $$ return new DefaultExecAction(TestFiles.resolver())[ CD ]
Line_9 $$ for (int i = 0; i < gppCandidates.size(); i++) -->Line_10 $$ File candidate = gppCandidates.get(i)[ FD ]
Line_2 $$ private static ToolChainCandidate findGcc() -->Line_20 $$ return new UnavailableToolChain("gcc")[ CD ]
Line_9 $$ for (int i = 0; i < gppCandidates.size(); i++) -->Line_10 $$ File candidate = gppCandidates.get(i)[ CD ]
Line_2 $$ private static ToolChainCandidate findGcc() -->Line_8 $$ List<File> gppCandidates = OperatingSystem.current().findAllInPath("g++")[ CD ]
Line_10 $$ File candidate = gppCandidates.get(i)-->Line_11 $$ GccVersionResult version = versionDeterminer.getGccMetaData(candidate, Collections.<String>emptyList())[ FD ]
Line_2 $$ private static ToolChainCandidate findGcc() -->Line_9 $$ for (int i = 0; i < gppCandidates.size(); i++) [ CD ]
Line_10 $$ File candidate = gppCandidates.get(i)-->Line_15 $$ gcc.inPath(candidate.getParentFile())[ FD ]
Line_2 $$ private static ToolChainCandidate findGcc() -->Line_3 $$ GccVersionDeterminer versionDeterminer = GccVersionDeterminer.forGcc(new ExecActionFactory() [ CD ]
Line_13 $$ InstalledGcc gcc = new InstalledGcc("gcc")-->Line_15 $$ gcc.inPath(candidate.getParentFile())[ FD ]
Line_3 $$ GccVersionDeterminer versionDeterminer = GccVersionDeterminer.forGcc(new ExecActionFactory() -->Line_11 $$ GccVersionResult version = versionDeterminer.getGccMetaData(candidate, Collections.<String>emptyList())[ FD ]
Line_12 $$ if (version.isAvailable()) -->Line_14 $$ if (i > 0) [ CD ]
Line_12 $$ if (version.isAvailable()) -->Line_13 $$ InstalledGcc gcc = new InstalledGcc("gcc")[ CD ]
Line_12 $$ if (version.isAvailable()) -->Line_17 $$ return gcc[ CD ]
Line_9 $$ for (int i = 0; i < gppCandidates.size(); i++) -->Line_11 $$ GccVersionResult version = versionDeterminer.getGccMetaData(candidate, Collections.<String>emptyList())[ CD ]
Line_14 $$ if (i > 0) -->Line_15 $$ gcc.inPath(candidate.getParentFile())[ CD ]
Line_9 $$ for (int i = 0; i < gppCandidates.size(); i++) -->Line_14 $$ if (i > 0) [ FD ]
