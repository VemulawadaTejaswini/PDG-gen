Line_4 $$ if (Iterables.isEmpty(lines)) -->Line_5 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public static List<String> changeIndent(@NotNull Iterable<String> lines, boolean ignoreFirstLine, final String newIndent) -->Line_4 $$ if (Iterables.isEmpty(lines)) [ FD ]
Line_7 $$ final List<String> result = ContainerUtil.map(Iterables.skip(lines, ignoreFirstLine ? 1 : 0), new Function<String, String>() -->Line_9 $$ if (StringUtil.isEmptyOrSpaces(line)) [ CD ]
Line_7 $$ final List<String> result = ContainerUtil.map(Iterables.skip(lines, ignoreFirstLine ? 1 : 0), new Function<String, String>() -->Line_17 $$ return ContainerUtil.prepend(result, Iterables.get(lines, 0))[ FD ]
Line_2 $$ public static List<String> changeIndent(@NotNull Iterable<String> lines, boolean ignoreFirstLine, final String newIndent) -->Line_4 $$ if (Iterables.isEmpty(lines)) [ CD ]
Line_9 $$ if (StringUtil.isEmptyOrSpaces(line)) -->Line_10 $$ return ""[ CD ]
Line_2 $$ public static List<String> changeIndent(@NotNull Iterable<String> lines, boolean ignoreFirstLine, final String newIndent) -->Line_16 $$ if (ignoreFirstLine) [ CD ]
Line_2 $$ public static List<String> changeIndent(@NotNull Iterable<String> lines, boolean ignoreFirstLine, final String newIndent) -->Line_17 $$ return ContainerUtil.prepend(result, Iterables.get(lines, 0))[ FD ]
Line_2 $$ public static List<String> changeIndent(@NotNull Iterable<String> lines, boolean ignoreFirstLine, final String newIndent) -->Line_7 $$ final List<String> result = ContainerUtil.map(Iterables.skip(lines, ignoreFirstLine ? 1 : 0), new Function<String, String>() [ FD ]
Line_2 $$ public static List<String> changeIndent(@NotNull Iterable<String> lines, boolean ignoreFirstLine, final String newIndent) -->Line_7 $$ final List<String> result = ContainerUtil.map(Iterables.skip(lines, ignoreFirstLine ? 1 : 0), new Function<String, String>() [ CD ]
Line_3 $$ final String oldIndent = findCommonIndent(lines, ignoreFirstLine)-->Line_12 $$ return newIndent + line.substring(oldIndent.length())[ FD ]
Line_9 $$ if (StringUtil.isEmptyOrSpaces(line)) -->Line_12 $$ return newIndent + line.substring(oldIndent.length())[ CD ]
Line_2 $$ public static List<String> changeIndent(@NotNull Iterable<String> lines, boolean ignoreFirstLine, final String newIndent) -->Line_3 $$ final String oldIndent = findCommonIndent(lines, ignoreFirstLine)[ FD ]
Line_2 $$ public static List<String> changeIndent(@NotNull Iterable<String> lines, boolean ignoreFirstLine, final String newIndent) -->Line_3 $$ final String oldIndent = findCommonIndent(lines, ignoreFirstLine)[ CD ]
Line_7 $$ final List<String> result = ContainerUtil.map(Iterables.skip(lines, ignoreFirstLine ? 1 : 0), new Function<String, String>() -->Line_9 $$ if (StringUtil.isEmptyOrSpaces(line)) [ FD ]
Line_16 $$ if (ignoreFirstLine) -->Line_17 $$ return ContainerUtil.prepend(result, Iterables.get(lines, 0))[ CD ]
Line_7 $$ final List<String> result = ContainerUtil.map(Iterables.skip(lines, ignoreFirstLine ? 1 : 0), new Function<String, String>() -->Line_12 $$ return newIndent + line.substring(oldIndent.length())[ FD ]
Line_2 $$ public static List<String> changeIndent(@NotNull Iterable<String> lines, boolean ignoreFirstLine, final String newIndent) -->Line_19 $$ return result[ CD ]
