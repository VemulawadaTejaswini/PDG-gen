Line_3 $$ final List<ModuleBasedTarget> targets = myModuleBasedTargets.get(module)-->Line_4 $$ if (targets == null || targets.isEmpty()) [ FD ]
Line_14 $$ if (!target.isTests()) -->Line_15 $$ result.add(target)[ CD ]
Line_8 $$ for (ModuleBasedTarget target : targets) -->Line_19 $$ if (target.isTests()) [ FD ]
Line_7 $$ final List<ModuleBasedTarget<?>> result = new SmartList<ModuleBasedTarget<?>>()-->Line_11 $$ result.add(target)[ FD ]
Line_19 $$ if (target.isTests()) -->Line_20 $$ result.add(target)[ CD ]
Line_2 $$ public Collection<ModuleBasedTarget<?>> getModuleBasedTargets(@NotNull JpsModule module, @NotNull BuildTargetRegistry.ModuleTargetSelector selector) -->Line_3 $$ final List<ModuleBasedTarget> targets = myModuleBasedTargets.get(module)[ FD ]
Line_4 $$ if (targets == null || targets.isEmpty()) -->Line_5 $$ return Collections.emptyList()[ CD ]
Line_7 $$ final List<ModuleBasedTarget<?>> result = new SmartList<ModuleBasedTarget<?>>()-->Line_15 $$ result.add(target)[ FD ]
Line_2 $$ public Collection<ModuleBasedTarget<?>> getModuleBasedTargets(@NotNull JpsModule module, @NotNull BuildTargetRegistry.ModuleTargetSelector selector) -->Line_7 $$ final List<ModuleBasedTarget<?>> result = new SmartList<ModuleBasedTarget<?>>()[ CD ]
Line_2 $$ public Collection<ModuleBasedTarget<?>> getModuleBasedTargets(@NotNull JpsModule module, @NotNull BuildTargetRegistry.ModuleTargetSelector selector) -->Line_24 $$ return result[ CD ]
Line_8 $$ for (ModuleBasedTarget target : targets) -->Line_11 $$ result.add(target)[ FD ]
Line_2 $$ public Collection<ModuleBasedTarget<?>> getModuleBasedTargets(@NotNull JpsModule module, @NotNull BuildTargetRegistry.ModuleTargetSelector selector) -->Line_3 $$ final List<ModuleBasedTarget> targets = myModuleBasedTargets.get(module)[ CD ]
Line_7 $$ final List<ModuleBasedTarget<?>> result = new SmartList<ModuleBasedTarget<?>>()-->Line_20 $$ result.add(target)[ FD ]
Line_2 $$ public Collection<ModuleBasedTarget<?>> getModuleBasedTargets(@NotNull JpsModule module, @NotNull BuildTargetRegistry.ModuleTargetSelector selector) -->Line_4 $$ if (targets == null || targets.isEmpty()) [ CD ]
Line_8 $$ for (ModuleBasedTarget target : targets) -->Line_14 $$ if (!target.isTests()) [ FD ]
Line_8 $$ for (ModuleBasedTarget target : targets) -->Line_20 $$ result.add(target)[ FD ]
Line_8 $$ for (ModuleBasedTarget target : targets) -->Line_15 $$ result.add(target)[ FD ]
