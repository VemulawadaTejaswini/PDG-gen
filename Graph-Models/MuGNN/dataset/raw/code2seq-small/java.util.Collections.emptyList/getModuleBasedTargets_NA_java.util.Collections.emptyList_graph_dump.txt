Line_10 $$ for (ModuleBasedTarget target : targets) -->Line_21 $$ if (target.isTests()) [ FD ]
Line_10 $$ for (ModuleBasedTarget target : targets) -->Line_17 $$ result.add(target)[ FD ]
Line_10 $$ for (ModuleBasedTarget target : targets) -->Line_16 $$ if (!target.isTests()) [ FD ]
Line_9 $$ final List<ModuleBasedTarget<?>> result = new SmartList<ModuleBasedTarget<?>>()-->Line_13 $$ result.add(target)[ FD ]
Line_9 $$ final List<ModuleBasedTarget<?>> result = new SmartList<ModuleBasedTarget<?>>()-->Line_22 $$ result.add(target)[ FD ]
Line_10 $$ for (ModuleBasedTarget target : targets) -->Line_13 $$ result.add(target)[ FD ]
Line_6 $$ if (targets == null || targets.isEmpty()) -->Line_7 $$ return Collections.emptyList()[ CD ]
Line_9 $$ final List<ModuleBasedTarget<?>> result = new SmartList<ModuleBasedTarget<?>>()-->Line_17 $$ result.add(target)[ FD ]
Line_21 $$ if (target.isTests()) -->Line_22 $$ result.add(target)[ CD ]
Line_10 $$ for (ModuleBasedTarget target : targets) -->Line_22 $$ result.add(target)[ FD ]
Line_5 $$ final List<ModuleBasedTarget> targets = myModuleBasedTargets.get(module)-->Line_6 $$ if (targets == null || targets.isEmpty()) [ FD ]
Line_16 $$ if (!target.isTests()) -->Line_17 $$ result.add(target)[ CD ]
