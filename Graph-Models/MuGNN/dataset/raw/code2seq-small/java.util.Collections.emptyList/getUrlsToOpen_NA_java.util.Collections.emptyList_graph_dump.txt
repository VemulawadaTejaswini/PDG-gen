Line_8 $$ for (WebBrowserUrlProvider urlProvider : WebBrowserUrlProvider.EP_NAME.getExtensions()) -->Line_9 $$ if ((!dumbService.isDumb() || DumbService.isDumbAware(urlProvider)) && urlProvider.canHandleElement(request)) [ FD ]
Line_5 $$ boolean isHtmlOrXml = isHtmlOrXmlFile(request.getFile().getViewProvider().getBaseLanguage())-->Line_16 $$ if (!isHtmlOrXml) [ FD ]
Line_9 $$ if ((!dumbService.isDumb() || DumbService.isDumbAware(urlProvider)) && urlProvider.canHandleElement(request)) -->Line_11 $$ if (!urls.isEmpty()) [ CD ]
Line_20 $$ VirtualFile file = request.getVirtualFile()-->Line_21 $$ return file instanceof LightVirtualFile || !request.getFile().getViewProvider().isPhysical() ? Collections.<Url>emptyList() : Collections.singletonList(Urls.newFromVirtualFile(file))[ FD ]
Line_6 $$ if (!preferLocalUrl || !isHtmlOrXml) -->Line_7 $$ DumbService dumbService = DumbService.getInstance(request.getProject())[ CD ]
Line_7 $$ DumbService dumbService = DumbService.getInstance(request.getProject())-->Line_9 $$ if ((!dumbService.isDumb() || DumbService.isDumbAware(urlProvider)) && urlProvider.canHandleElement(request)) [ FD ]
Line_11 $$ if (!urls.isEmpty()) -->Line_12 $$ return urls[ CD ]
Line_9 $$ if ((!dumbService.isDumb() || DumbService.isDumbAware(urlProvider)) && urlProvider.canHandleElement(request)) -->Line_10 $$ Collection<Url> urls = getUrls(urlProvider, request)[ CD ]
Line_10 $$ Collection<Url> urls = getUrls(urlProvider, request)-->Line_11 $$ if (!urls.isEmpty()) [ FD ]
Line_16 $$ if (!isHtmlOrXml) -->Line_17 $$ return Collections.emptyList()[ CD ]
Line_6 $$ if (!preferLocalUrl || !isHtmlOrXml) -->Line_16 $$ if (!isHtmlOrXml) [ CD ]
Line_8 $$ for (WebBrowserUrlProvider urlProvider : WebBrowserUrlProvider.EP_NAME.getExtensions()) -->Line_10 $$ Collection<Url> urls = getUrls(urlProvider, request)[ FD ]
Line_5 $$ boolean isHtmlOrXml = isHtmlOrXmlFile(request.getFile().getViewProvider().getBaseLanguage())-->Line_6 $$ if (!preferLocalUrl || !isHtmlOrXml) [ FD ]
