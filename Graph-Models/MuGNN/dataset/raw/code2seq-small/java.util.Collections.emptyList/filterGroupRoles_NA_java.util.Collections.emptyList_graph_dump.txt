Line_5 $$ Iterator<Role> itr = filteredGroupRoles.iterator()-->Line_10 $$ itr.remove()[ FD ]
Line_5 $$ Iterator<Role> itr = filteredGroupRoles.iterator()-->Line_6 $$ while (itr.hasNext()) [ FD ]
Line_7 $$ Role groupRole = itr.next()-->Line_23 $$ String roleName = groupRole.getName()[ FD ]
Line_23 $$ String roleName = groupRole.getName()-->Line_24 $$ if (roleName.equals(RoleConstants.ORGANIZATION_ADMINISTRATOR) || roleName.equals(RoleConstants.ORGANIZATION_OWNER) || roleName.equals(RoleConstants.SITE_ADMINISTRATOR) || roleName.equals(RoleConstants.SITE_OWNER) || !RolePermissionUtil.contains(permissionChecker, groupId, groupRole.getRoleId(), ActionKeys.ASSIGN_MEMBERS)) [ FD ]
Line_17 $$ if (!GroupPermissionUtil.contains(permissionChecker, group, ActionKeys.ASSIGN_USER_ROLES) && !OrganizationPermissionUtil.contains(permissionChecker, group.getOrganizationId(), ActionKeys.ASSIGN_USER_ROLES)) -->Line_18 $$ return Collections.emptyList()[ CD ]
Line_6 $$ while (itr.hasNext()) -->Line_8 $$ String roleName = groupRole.getName()[ CD ]
Line_21 $$ while (itr.hasNext()) -->Line_22 $$ Role groupRole = itr.next()[ CD ]
Line_6 $$ while (itr.hasNext()) -->Line_9 $$ if (roleName.equals(RoleConstants.ORGANIZATION_USER) || roleName.equals(RoleConstants.SITE_MEMBER)) [ CD ]
Line_5 $$ Iterator<Role> itr = filteredGroupRoles.iterator()-->Line_7 $$ Role groupRole = itr.next()[ FD ]
Line_22 $$ Role groupRole = itr.next()-->Line_24 $$ if (roleName.equals(RoleConstants.ORGANIZATION_ADMINISTRATOR) || roleName.equals(RoleConstants.ORGANIZATION_OWNER) || roleName.equals(RoleConstants.SITE_ADMINISTRATOR) || roleName.equals(RoleConstants.SITE_OWNER) || !RolePermissionUtil.contains(permissionChecker, groupId, groupRole.getRoleId(), ActionKeys.ASSIGN_MEMBERS)) [ FD ]
Line_5 $$ Iterator<Role> itr = filteredGroupRoles.iterator()-->Line_21 $$ while (itr.hasNext()) [ FD ]
Line_5 $$ Iterator<Role> itr = filteredGroupRoles.iterator()-->Line_25 $$ itr.remove()[ FD ]
Line_16 $$ Group group = GroupLocalServiceUtil.getGroup(groupId)-->Line_17 $$ if (!GroupPermissionUtil.contains(permissionChecker, group, ActionKeys.ASSIGN_USER_ROLES) && !OrganizationPermissionUtil.contains(permissionChecker, group.getOrganizationId(), ActionKeys.ASSIGN_USER_ROLES)) [ FD ]
Line_24 $$ if (roleName.equals(RoleConstants.ORGANIZATION_ADMINISTRATOR) || roleName.equals(RoleConstants.ORGANIZATION_OWNER) || roleName.equals(RoleConstants.SITE_ADMINISTRATOR) || roleName.equals(RoleConstants.SITE_OWNER) || !RolePermissionUtil.contains(permissionChecker, groupId, groupRole.getRoleId(), ActionKeys.ASSIGN_MEMBERS)) -->Line_25 $$ itr.remove()[ CD ]
Line_7 $$ Role groupRole = itr.next()-->Line_24 $$ if (roleName.equals(RoleConstants.ORGANIZATION_ADMINISTRATOR) || roleName.equals(RoleConstants.ORGANIZATION_OWNER) || roleName.equals(RoleConstants.SITE_ADMINISTRATOR) || roleName.equals(RoleConstants.SITE_OWNER) || !RolePermissionUtil.contains(permissionChecker, groupId, groupRole.getRoleId(), ActionKeys.ASSIGN_MEMBERS)) [ FD ]
Line_6 $$ while (itr.hasNext()) -->Line_7 $$ Role groupRole = itr.next()[ CD ]
Line_9 $$ if (roleName.equals(RoleConstants.ORGANIZATION_USER) || roleName.equals(RoleConstants.SITE_MEMBER)) -->Line_10 $$ itr.remove()[ CD ]
Line_8 $$ String roleName = groupRole.getName()-->Line_9 $$ if (roleName.equals(RoleConstants.ORGANIZATION_USER) || roleName.equals(RoleConstants.SITE_MEMBER)) [ FD ]
Line_20 $$ itr = filteredGroupRoles.iterator()-->Line_25 $$ itr.remove()[ FD ]
Line_21 $$ while (itr.hasNext()) -->Line_23 $$ String roleName = groupRole.getName()[ CD ]
Line_21 $$ while (itr.hasNext()) -->Line_24 $$ if (roleName.equals(RoleConstants.ORGANIZATION_ADMINISTRATOR) || roleName.equals(RoleConstants.ORGANIZATION_OWNER) || roleName.equals(RoleConstants.SITE_ADMINISTRATOR) || roleName.equals(RoleConstants.SITE_OWNER) || !RolePermissionUtil.contains(permissionChecker, groupId, groupRole.getRoleId(), ActionKeys.ASSIGN_MEMBERS)) [ CD ]
Line_8 $$ String roleName = groupRole.getName()-->Line_24 $$ if (roleName.equals(RoleConstants.ORGANIZATION_ADMINISTRATOR) || roleName.equals(RoleConstants.ORGANIZATION_OWNER) || roleName.equals(RoleConstants.SITE_ADMINISTRATOR) || roleName.equals(RoleConstants.SITE_OWNER) || !RolePermissionUtil.contains(permissionChecker, groupId, groupRole.getRoleId(), ActionKeys.ASSIGN_MEMBERS)) [ FD ]
Line_4 $$ List<Role> filteredGroupRoles = ListUtil.copy(roles)-->Line_20 $$ itr = filteredGroupRoles.iterator()[ FD ]
Line_22 $$ Role groupRole = itr.next()-->Line_23 $$ String roleName = groupRole.getName()[ FD ]
Line_20 $$ itr = filteredGroupRoles.iterator()-->Line_21 $$ while (itr.hasNext()) [ FD ]
Line_5 $$ Iterator<Role> itr = filteredGroupRoles.iterator()-->Line_22 $$ Role groupRole = itr.next()[ FD ]
Line_5 $$ Iterator<Role> itr = filteredGroupRoles.iterator()-->Line_20 $$ itr = filteredGroupRoles.iterator()[ FD ]
Line_4 $$ List<Role> filteredGroupRoles = ListUtil.copy(roles)-->Line_5 $$ Iterator<Role> itr = filteredGroupRoles.iterator()[ FD ]
Line_7 $$ Role groupRole = itr.next()-->Line_8 $$ String roleName = groupRole.getName()[ FD ]
Line_20 $$ itr = filteredGroupRoles.iterator()-->Line_22 $$ Role groupRole = itr.next()[ FD ]
Line_13 $$ if (permissionChecker.isCompanyAdmin() || permissionChecker.isGroupOwner(groupId)) -->Line_14 $$ return filteredGroupRoles[ CD ]
