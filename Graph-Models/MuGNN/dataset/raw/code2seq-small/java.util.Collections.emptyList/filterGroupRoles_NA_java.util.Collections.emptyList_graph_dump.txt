Line_2 $$ public List<Role> filterGroupRoles(PermissionChecker permissionChecker, long groupId, List<Role> roles) throws PortalException -->Line_16 $$ if (!GroupPermissionUtil.contains(permissionChecker, group, ActionKeys.ASSIGN_USER_ROLES) && !OrganizationPermissionUtil.contains(permissionChecker, group.getOrganizationId(), ActionKeys.ASSIGN_USER_ROLES)) [ FD ]
Line_4 $$ Iterator<Role> itr = filteredGroupRoles.iterator()-->Line_5 $$ while (itr.hasNext()) [ FD ]
Line_4 $$ Iterator<Role> itr = filteredGroupRoles.iterator()-->Line_20 $$ while (itr.hasNext()) [ FD ]
Line_6 $$ Role groupRole = itr.next()-->Line_7 $$ String roleName = groupRole.getName()[ FD ]
Line_4 $$ Iterator<Role> itr = filteredGroupRoles.iterator()-->Line_19 $$ itr = filteredGroupRoles.iterator()[ FD ]
Line_7 $$ String roleName = groupRole.getName()-->Line_23 $$ if (roleName.equals(RoleConstants.ORGANIZATION_ADMINISTRATOR) || roleName.equals(RoleConstants.ORGANIZATION_OWNER) || roleName.equals(RoleConstants.SITE_ADMINISTRATOR) || roleName.equals(RoleConstants.SITE_OWNER) || !RolePermissionUtil.contains(permissionChecker, groupId, groupRole.getRoleId(), ActionKeys.ASSIGN_MEMBERS)) [ FD ]
Line_2 $$ public List<Role> filterGroupRoles(PermissionChecker permissionChecker, long groupId, List<Role> roles) throws PortalException -->Line_23 $$ if (roleName.equals(RoleConstants.ORGANIZATION_ADMINISTRATOR) || roleName.equals(RoleConstants.ORGANIZATION_OWNER) || roleName.equals(RoleConstants.SITE_ADMINISTRATOR) || roleName.equals(RoleConstants.SITE_OWNER) || !RolePermissionUtil.contains(permissionChecker, groupId, groupRole.getRoleId(), ActionKeys.ASSIGN_MEMBERS)) [ FD ]
Line_2 $$ public List<Role> filterGroupRoles(PermissionChecker permissionChecker, long groupId, List<Role> roles) throws PortalException -->Line_3 $$ List<Role> filteredGroupRoles = ListUtil.copy(roles)[ CD ]
Line_4 $$ Iterator<Role> itr = filteredGroupRoles.iterator()-->Line_9 $$ itr.remove()[ FD ]
Line_21 $$ Role groupRole = itr.next()-->Line_23 $$ if (roleName.equals(RoleConstants.ORGANIZATION_ADMINISTRATOR) || roleName.equals(RoleConstants.ORGANIZATION_OWNER) || roleName.equals(RoleConstants.SITE_ADMINISTRATOR) || roleName.equals(RoleConstants.SITE_OWNER) || !RolePermissionUtil.contains(permissionChecker, groupId, groupRole.getRoleId(), ActionKeys.ASSIGN_MEMBERS)) [ FD ]
Line_2 $$ public List<Role> filterGroupRoles(PermissionChecker permissionChecker, long groupId, List<Role> roles) throws PortalException -->Line_15 $$ Group group = GroupLocalServiceUtil.getGroup(groupId)[ FD ]
Line_6 $$ Role groupRole = itr.next()-->Line_22 $$ String roleName = groupRole.getName()[ FD ]
Line_2 $$ public List<Role> filterGroupRoles(PermissionChecker permissionChecker, long groupId, List<Role> roles) throws PortalException -->Line_12 $$ if (permissionChecker.isCompanyAdmin() || permissionChecker.isGroupOwner(groupId)) [ CD ]
Line_2 $$ public List<Role> filterGroupRoles(PermissionChecker permissionChecker, long groupId, List<Role> roles) throws PortalException -->Line_20 $$ while (itr.hasNext()) [ CD ]
Line_6 $$ Role groupRole = itr.next()-->Line_23 $$ if (roleName.equals(RoleConstants.ORGANIZATION_ADMINISTRATOR) || roleName.equals(RoleConstants.ORGANIZATION_OWNER) || roleName.equals(RoleConstants.SITE_ADMINISTRATOR) || roleName.equals(RoleConstants.SITE_OWNER) || !RolePermissionUtil.contains(permissionChecker, groupId, groupRole.getRoleId(), ActionKeys.ASSIGN_MEMBERS)) [ FD ]
Line_2 $$ public List<Role> filterGroupRoles(PermissionChecker permissionChecker, long groupId, List<Role> roles) throws PortalException -->Line_5 $$ while (itr.hasNext()) [ CD ]
Line_8 $$ if (roleName.equals(RoleConstants.ORGANIZATION_USER) || roleName.equals(RoleConstants.SITE_MEMBER)) -->Line_9 $$ itr.remove()[ CD ]
Line_20 $$ while (itr.hasNext()) -->Line_23 $$ if (roleName.equals(RoleConstants.ORGANIZATION_ADMINISTRATOR) || roleName.equals(RoleConstants.ORGANIZATION_OWNER) || roleName.equals(RoleConstants.SITE_ADMINISTRATOR) || roleName.equals(RoleConstants.SITE_OWNER) || !RolePermissionUtil.contains(permissionChecker, groupId, groupRole.getRoleId(), ActionKeys.ASSIGN_MEMBERS)) [ CD ]
Line_19 $$ itr = filteredGroupRoles.iterator()-->Line_21 $$ Role groupRole = itr.next()[ FD ]
Line_22 $$ String roleName = groupRole.getName()-->Line_23 $$ if (roleName.equals(RoleConstants.ORGANIZATION_ADMINISTRATOR) || roleName.equals(RoleConstants.ORGANIZATION_OWNER) || roleName.equals(RoleConstants.SITE_ADMINISTRATOR) || roleName.equals(RoleConstants.SITE_OWNER) || !RolePermissionUtil.contains(permissionChecker, groupId, groupRole.getRoleId(), ActionKeys.ASSIGN_MEMBERS)) [ FD ]
Line_20 $$ while (itr.hasNext()) -->Line_21 $$ Role groupRole = itr.next()[ CD ]
Line_2 $$ public List<Role> filterGroupRoles(PermissionChecker permissionChecker, long groupId, List<Role> roles) throws PortalException -->Line_4 $$ Iterator<Role> itr = filteredGroupRoles.iterator()[ CD ]
Line_20 $$ while (itr.hasNext()) -->Line_22 $$ String roleName = groupRole.getName()[ CD ]
Line_23 $$ if (roleName.equals(RoleConstants.ORGANIZATION_ADMINISTRATOR) || roleName.equals(RoleConstants.ORGANIZATION_OWNER) || roleName.equals(RoleConstants.SITE_ADMINISTRATOR) || roleName.equals(RoleConstants.SITE_OWNER) || !RolePermissionUtil.contains(permissionChecker, groupId, groupRole.getRoleId(), ActionKeys.ASSIGN_MEMBERS)) -->Line_24 $$ itr.remove()[ CD ]
Line_3 $$ List<Role> filteredGroupRoles = ListUtil.copy(roles)-->Line_4 $$ Iterator<Role> itr = filteredGroupRoles.iterator()[ FD ]
Line_2 $$ public List<Role> filterGroupRoles(PermissionChecker permissionChecker, long groupId, List<Role> roles) throws PortalException -->Line_27 $$ return filteredGroupRoles[ CD ]
Line_4 $$ Iterator<Role> itr = filteredGroupRoles.iterator()-->Line_24 $$ itr.remove()[ FD ]
Line_2 $$ public List<Role> filterGroupRoles(PermissionChecker permissionChecker, long groupId, List<Role> roles) throws PortalException -->Line_19 $$ itr = filteredGroupRoles.iterator()[ CD ]
Line_2 $$ public List<Role> filterGroupRoles(PermissionChecker permissionChecker, long groupId, List<Role> roles) throws PortalException -->Line_16 $$ if (!GroupPermissionUtil.contains(permissionChecker, group, ActionKeys.ASSIGN_USER_ROLES) && !OrganizationPermissionUtil.contains(permissionChecker, group.getOrganizationId(), ActionKeys.ASSIGN_USER_ROLES)) [ CD ]
Line_12 $$ if (permissionChecker.isCompanyAdmin() || permissionChecker.isGroupOwner(groupId)) -->Line_13 $$ return filteredGroupRoles[ CD ]
Line_7 $$ String roleName = groupRole.getName()-->Line_8 $$ if (roleName.equals(RoleConstants.ORGANIZATION_USER) || roleName.equals(RoleConstants.SITE_MEMBER)) [ FD ]
Line_4 $$ Iterator<Role> itr = filteredGroupRoles.iterator()-->Line_6 $$ Role groupRole = itr.next()[ FD ]
Line_2 $$ public List<Role> filterGroupRoles(PermissionChecker permissionChecker, long groupId, List<Role> roles) throws PortalException -->Line_3 $$ List<Role> filteredGroupRoles = ListUtil.copy(roles)[ FD ]
Line_16 $$ if (!GroupPermissionUtil.contains(permissionChecker, group, ActionKeys.ASSIGN_USER_ROLES) && !OrganizationPermissionUtil.contains(permissionChecker, group.getOrganizationId(), ActionKeys.ASSIGN_USER_ROLES)) -->Line_17 $$ return Collections.emptyList()[ CD ]
Line_3 $$ List<Role> filteredGroupRoles = ListUtil.copy(roles)-->Line_19 $$ itr = filteredGroupRoles.iterator()[ FD ]
Line_5 $$ while (itr.hasNext()) -->Line_6 $$ Role groupRole = itr.next()[ CD ]
Line_2 $$ public List<Role> filterGroupRoles(PermissionChecker permissionChecker, long groupId, List<Role> roles) throws PortalException -->Line_12 $$ if (permissionChecker.isCompanyAdmin() || permissionChecker.isGroupOwner(groupId)) [ FD ]
Line_2 $$ public List<Role> filterGroupRoles(PermissionChecker permissionChecker, long groupId, List<Role> roles) throws PortalException -->Line_15 $$ Group group = GroupLocalServiceUtil.getGroup(groupId)[ CD ]
Line_5 $$ while (itr.hasNext()) -->Line_7 $$ String roleName = groupRole.getName()[ CD ]
Line_19 $$ itr = filteredGroupRoles.iterator()-->Line_20 $$ while (itr.hasNext()) [ FD ]
Line_21 $$ Role groupRole = itr.next()-->Line_22 $$ String roleName = groupRole.getName()[ FD ]
Line_15 $$ Group group = GroupLocalServiceUtil.getGroup(groupId)-->Line_16 $$ if (!GroupPermissionUtil.contains(permissionChecker, group, ActionKeys.ASSIGN_USER_ROLES) && !OrganizationPermissionUtil.contains(permissionChecker, group.getOrganizationId(), ActionKeys.ASSIGN_USER_ROLES)) [ FD ]
Line_19 $$ itr = filteredGroupRoles.iterator()-->Line_24 $$ itr.remove()[ FD ]
Line_5 $$ while (itr.hasNext()) -->Line_8 $$ if (roleName.equals(RoleConstants.ORGANIZATION_USER) || roleName.equals(RoleConstants.SITE_MEMBER)) [ CD ]
Line_4 $$ Iterator<Role> itr = filteredGroupRoles.iterator()-->Line_21 $$ Role groupRole = itr.next()[ FD ]
