Line_2 $$ private ProcessHandler createProcess(Module module) throws ExecutionException -->Line_3 $$ GeneralCommandLine commandLine = createCommandLine(module, Collections.<String>emptyList())[ CD ]
Line_2 $$ private ProcessHandler createProcess(Module module) throws ExecutionException -->Line_3 $$ GeneralCommandLine commandLine = createCommandLine(module, Collections.<String>emptyList())[ FD ]
Line_2 $$ private ProcessHandler createProcess(Module module) throws ExecutionException -->Line_5 $$ ProcessTerminatedListener.attach(handler)[ CD ]
Line_3 $$ GeneralCommandLine commandLine = createCommandLine(module, Collections.<String>emptyList())-->Line_4 $$ ProcessHandler handler = PythonProcessRunner.createProcess(commandLine, false)[ FD ]
Line_4 $$ ProcessHandler handler = PythonProcessRunner.createProcess(commandLine, false)-->Line_5 $$ ProcessTerminatedListener.attach(handler)[ FD ]
Line_2 $$ private ProcessHandler createProcess(Module module) throws ExecutionException -->Line_6 $$ return handler[ CD ]
Line_2 $$ private ProcessHandler createProcess(Module module) throws ExecutionException -->Line_4 $$ ProcessHandler handler = PythonProcessRunner.createProcess(commandLine, false)[ CD ]
