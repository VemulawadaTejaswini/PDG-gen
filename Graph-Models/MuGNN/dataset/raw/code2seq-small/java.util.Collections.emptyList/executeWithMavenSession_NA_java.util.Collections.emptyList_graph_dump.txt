Line_14 $$ for (AbstractMavenLifecycleParticipant listener : getLifecycleParticipants(Collections.<MavenProject>emptyList())) -->Line_15 $$ listener.afterSessionStart(mavenSession)[ FD ]
Line_2 $$ public void executeWithMavenSession(MavenExecutionRequest request, Runnable runnable) -->Line_3 $$ DefaultMaven maven = (DefaultMaven) getComponent(Maven.class)[ CD ]
Line_7 $$ LegacySupport legacySupport = getComponent(LegacySupport.class)-->Line_8 $$ MavenSession oldSession = legacySupport.getSession()[ FD ]
Line_3 $$ DefaultMaven maven = (DefaultMaven) getComponent(Maven.class)-->Line_4 $$ RepositorySystemSession repositorySession = maven.newRepositorySession(request)[ FD ]
Line_2 $$ public void executeWithMavenSession(MavenExecutionRequest request, Runnable runnable) -->Line_6 $$ MavenSession mavenSession = new MavenSession(myContainer, repositorySession, request, new DefaultMavenExecutionResult())[ CD ]
Line_8 $$ MavenSession oldSession = legacySupport.getSession()-->Line_23 $$ legacySupport.setSession(oldSession)[ FD ]
Line_2 $$ public void executeWithMavenSession(MavenExecutionRequest request, Runnable runnable) -->Line_4 $$ RepositorySystemSession repositorySession = maven.newRepositorySession(request)[ CD ]
Line_2 $$ public void executeWithMavenSession(MavenExecutionRequest request, Runnable runnable) -->Line_4 $$ RepositorySystemSession repositorySession = maven.newRepositorySession(request)[ FD ]
Line_6 $$ MavenSession mavenSession = new MavenSession(myContainer, repositorySession, request, new DefaultMavenExecutionResult())-->Line_9 $$ legacySupport.setSession(mavenSession)[ FD ]
Line_2 $$ public void executeWithMavenSession(MavenExecutionRequest request, Runnable runnable) -->Line_21 $$ runnable.run()[ FD ]
Line_7 $$ LegacySupport legacySupport = getComponent(LegacySupport.class)-->Line_23 $$ legacySupport.setSession(oldSession)[ FD ]
Line_4 $$ RepositorySystemSession repositorySession = maven.newRepositorySession(request)-->Line_5 $$ request.getProjectBuildingRequest().setRepositorySession(repositorySession)[ FD ]
Line_2 $$ public void executeWithMavenSession(MavenExecutionRequest request, Runnable runnable) -->Line_8 $$ MavenSession oldSession = legacySupport.getSession()[ CD ]
Line_2 $$ public void executeWithMavenSession(MavenExecutionRequest request, Runnable runnable) -->Line_9 $$ legacySupport.setSession(mavenSession)[ CD ]
Line_2 $$ public void executeWithMavenSession(MavenExecutionRequest request, Runnable runnable) -->Line_7 $$ LegacySupport legacySupport = getComponent(LegacySupport.class)[ CD ]
Line_7 $$ LegacySupport legacySupport = getComponent(LegacySupport.class)-->Line_9 $$ legacySupport.setSession(mavenSession)[ FD ]
Line_2 $$ public void executeWithMavenSession(MavenExecutionRequest request, Runnable runnable) -->Line_5 $$ request.getProjectBuildingRequest().setRepositorySession(repositorySession)[ FD ]
Line_6 $$ MavenSession mavenSession = new MavenSession(myContainer, repositorySession, request, new DefaultMavenExecutionResult())-->Line_15 $$ listener.afterSessionStart(mavenSession)[ FD ]
Line_2 $$ public void executeWithMavenSession(MavenExecutionRequest request, Runnable runnable) -->Line_5 $$ request.getProjectBuildingRequest().setRepositorySession(repositorySession)[ CD ]
