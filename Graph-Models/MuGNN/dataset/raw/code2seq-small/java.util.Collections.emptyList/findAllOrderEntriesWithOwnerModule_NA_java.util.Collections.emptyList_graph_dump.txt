Line_18 $$ int lastIndex = index + 1-->Line_22 $$ return ContainerUtil.newArrayList(entries.subList(firstIndex, lastIndex))[ FD ]
Line_18 $$ int lastIndex = index + 1-->Line_19 $$ while (lastIndex < entries.size() && entries.get(lastIndex).getOwnerModule() == ownerModule) [ FD ]
Line_10 $$ int index = Collections.binarySearch(entries, new FakeOrderEntry(ownerModule), RootIndex.BY_OWNER_MODULE)-->Line_11 $$ if (index < 0) [ FD ]
Line_6 $$ if (entries.size() == 1) -->Line_7 $$ OrderEntry entry = entries.get(0)[ CD ]
Line_14 $$ int firstIndex = index-->Line_16 $$ firstIndex--[ FD ]
Line_7 $$ OrderEntry entry = entries.get(0)-->Line_8 $$ return entry.getOwnerModule() == ownerModule ? ContainerUtil.newArrayList(entries) : Collections.<OrderEntry>emptyList()[ FD ]
Line_15 $$ while (firstIndex - 1 >= 0 && entries.get(firstIndex - 1).getOwnerModule() == ownerModule) -->Line_16 $$ firstIndex--[ CD ]
Line_18 $$ int lastIndex = index + 1-->Line_20 $$ lastIndex++[ FD ]
Line_6 $$ if (entries.size() == 1) -->Line_8 $$ return entry.getOwnerModule() == ownerModule ? ContainerUtil.newArrayList(entries) : Collections.<OrderEntry>emptyList()[ CD ]
Line_11 $$ if (index < 0) -->Line_12 $$ return Collections.emptyList()[ CD ]
Line_19 $$ while (lastIndex < entries.size() && entries.get(lastIndex).getOwnerModule() == ownerModule) -->Line_20 $$ lastIndex++[ CD ]
Line_14 $$ int firstIndex = index-->Line_22 $$ return ContainerUtil.newArrayList(entries.subList(firstIndex, lastIndex))[ FD ]
Line_4 $$ if (entries.size() == 0)-->Line_5 $$ return Collections.emptyList()[ CD ]
