Line_8 $$ if (distutilsCommandDir != null) -->Line_11 $$ if (tasks == null) [ CD ]
Line_10 $$ List<SetupTask> tasks = cache.get(path)-->Line_11 $$ if (tasks == null) [ FD ]
Line_2 $$ private static List<SetupTask> getTaskList(Module module, boolean setuptools) -->Line_5 $$ final PyClass installClass = PyClassNameIndex.findClass(name, module.getProject())[ FD ]
Line_9 $$ final String path = distutilsCommandDir.getVirtualFile().getPath()-->Line_10 $$ List<SetupTask> tasks = cache.get(path)[ FD ]
Line_2 $$ private static List<SetupTask> getTaskList(Module module, boolean setuptools) -->Line_18 $$ return Collections.emptyList()[ CD ]
Line_10 $$ List<SetupTask> tasks = cache.get(path)-->Line_12 $$ tasks = collectTasks(distutilsCommandDir, setuptools)[ FD ]
Line_5 $$ final PyClass installClass = PyClassNameIndex.findClass(name, module.getProject())-->Line_7 $$ final PsiDirectory distutilsCommandDir = installClass.getContainingFile().getParent()[ FD ]
Line_4 $$ final Map<String, List<SetupTask>> cache = setuptools ? ourSetuptoolsTaskCache : ourDistutilsTaskCache-->Line_10 $$ List<SetupTask> tasks = cache.get(path)[ FD ]
Line_6 $$ if (installClass != null) -->Line_7 $$ final PsiDirectory distutilsCommandDir = installClass.getContainingFile().getParent()[ CD ]
Line_8 $$ if (distutilsCommandDir != null) -->Line_9 $$ final String path = distutilsCommandDir.getVirtualFile().getPath()[ CD ]
Line_7 $$ final PsiDirectory distutilsCommandDir = installClass.getContainingFile().getParent()-->Line_12 $$ tasks = collectTasks(distutilsCommandDir, setuptools)[ FD ]
Line_7 $$ final PsiDirectory distutilsCommandDir = installClass.getContainingFile().getParent()-->Line_9 $$ final String path = distutilsCommandDir.getVirtualFile().getPath()[ FD ]
Line_5 $$ final PyClass installClass = PyClassNameIndex.findClass(name, module.getProject())-->Line_6 $$ if (installClass != null) [ FD ]
Line_2 $$ private static List<SetupTask> getTaskList(Module module, boolean setuptools) -->Line_5 $$ final PyClass installClass = PyClassNameIndex.findClass(name, module.getProject())[ CD ]
Line_11 $$ if (tasks == null) -->Line_12 $$ tasks = collectTasks(distutilsCommandDir, setuptools)[ CD ]
Line_9 $$ final String path = distutilsCommandDir.getVirtualFile().getPath()-->Line_13 $$ cache.put(path, tasks)[ FD ]
Line_12 $$ tasks = collectTasks(distutilsCommandDir, setuptools)-->Line_13 $$ cache.put(path, tasks)[ FD ]
Line_2 $$ private static List<SetupTask> getTaskList(Module module, boolean setuptools) -->Line_6 $$ if (installClass != null) [ CD ]
Line_6 $$ if (installClass != null) -->Line_8 $$ if (distutilsCommandDir != null) [ CD ]
Line_3 $$ final String name = (setuptools ? "setuptools" : "distutils") + ".command.install.install"-->Line_5 $$ final PyClass installClass = PyClassNameIndex.findClass(name, module.getProject())[ FD ]
Line_8 $$ if (distutilsCommandDir != null) -->Line_10 $$ List<SetupTask> tasks = cache.get(path)[ CD ]
Line_10 $$ List<SetupTask> tasks = cache.get(path)-->Line_13 $$ cache.put(path, tasks)[ FD ]
Line_8 $$ if (distutilsCommandDir != null) -->Line_15 $$ return tasks[ CD ]
Line_2 $$ private static List<SetupTask> getTaskList(Module module, boolean setuptools) -->Line_12 $$ tasks = collectTasks(distutilsCommandDir, setuptools)[ FD ]
Line_2 $$ private static List<SetupTask> getTaskList(Module module, boolean setuptools) -->Line_3 $$ final String name = (setuptools ? "setuptools" : "distutils") + ".command.install.install"[ CD ]
Line_2 $$ private static List<SetupTask> getTaskList(Module module, boolean setuptools) -->Line_4 $$ final Map<String, List<SetupTask>> cache = setuptools ? ourSetuptoolsTaskCache : ourDistutilsTaskCache[ CD ]
Line_11 $$ if (tasks == null) -->Line_13 $$ cache.put(path, tasks)[ CD ]
Line_4 $$ final Map<String, List<SetupTask>> cache = setuptools ? ourSetuptoolsTaskCache : ourDistutilsTaskCache-->Line_13 $$ cache.put(path, tasks)[ FD ]
Line_7 $$ final PsiDirectory distutilsCommandDir = installClass.getContainingFile().getParent()-->Line_8 $$ if (distutilsCommandDir != null) [ FD ]
