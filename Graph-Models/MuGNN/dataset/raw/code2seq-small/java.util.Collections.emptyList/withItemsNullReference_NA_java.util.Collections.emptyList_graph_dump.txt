Line_7 $$ int result = this.tag.doStartTag()-->Line_8 $$ assertEquals(Tag.SKIP_BODY, result)[ FD ]
Line_2 $$ public void withItemsNullReference() throws Exception -->Line_11 $$ SAXReader reader = new SAXReader()[ CD ]
Line_11 $$ SAXReader reader = new SAXReader()-->Line_12 $$ Document document = reader.read(new StringReader(output))[ FD ]
Line_2 $$ public void withItemsNullReference() throws Exception -->Line_15 $$ assertEquals("Incorrect number of children", 0, children.size())[ CD ]
Line_2 $$ public void withItemsNullReference() throws Exception -->Line_14 $$ List children = rootElement.elements()[ CD ]
Line_2 $$ public void withItemsNullReference() throws Exception -->Line_9 $$ String output = getOutput()[ CD ]
Line_2 $$ public void withItemsNullReference() throws Exception -->Line_10 $$ output = "<doc>" + output + "</doc>"[ CD ]
Line_2 $$ public void withItemsNullReference() throws Exception -->Line_4 $$ this.tag.setItems(Collections.emptyList())[ CD ]
Line_14 $$ List children = rootElement.elements()-->Line_15 $$ assertEquals("Incorrect number of children", 0, children.size())[ FD ]
Line_2 $$ public void withItemsNullReference() throws Exception -->Line_6 $$ this.tag.setItemLabel("name")[ CD ]
Line_2 $$ public void withItemsNullReference() throws Exception -->Line_12 $$ Document document = reader.read(new StringReader(output))[ CD ]
Line_2 $$ public void withItemsNullReference() throws Exception -->Line_5 $$ this.tag.setItemValue("isoCode")[ CD ]
Line_2 $$ public void withItemsNullReference() throws Exception -->Line_13 $$ Element rootElement = document.getRootElement()[ CD ]
Line_2 $$ public void withItemsNullReference() throws Exception -->Line_8 $$ assertEquals(Tag.SKIP_BODY, result)[ CD ]
Line_2 $$ public void withItemsNullReference() throws Exception -->Line_7 $$ int result = this.tag.doStartTag()[ CD ]
Line_2 $$ public void withItemsNullReference() throws Exception -->Line_3 $$ getPageContext().setAttribute(SelectTag.LIST_VALUE_PAGE_ATTRIBUTE, new BindStatus(getRequestContext(), "testBean.country", false))[ CD ]
Line_13 $$ Element rootElement = document.getRootElement()-->Line_14 $$ List children = rootElement.elements()[ FD ]
Line_9 $$ String output = getOutput()-->Line_10 $$ output = "<doc>" + output + "</doc>"[ FD ]
Line_12 $$ Document document = reader.read(new StringReader(output))-->Line_13 $$ Element rootElement = document.getRootElement()[ FD ]
