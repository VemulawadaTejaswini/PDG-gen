Line_14 $$ annotationsToRemove = nullables-->Line_48 $$ annotate(overridingMethod, annotationName, attributes, element, annotationsToRemove)[ FD ]
Line_2 $$ protected void processIntention(@NotNull PsiElement element) -->Line_8 $$ final Project project = element.getProject()[ FD ]
Line_24 $$ if (!(grandParent instanceof PsiMethod)) -->Line_29 $$ final PsiElement greatGrandParent = grandParent.getParent()[ CD ]
Line_2 $$ protected void processIntention(@NotNull PsiElement element) -->Line_23 $$ final int parameterIndex[ CD ]
Line_9 $$ final NullableNotNullManager notNullManager = NullableNotNullManager.getInstance(project)-->Line_10 $$ final List<String> notNulls = notNullManager.getNotNulls()[ FD ]
Line_2 $$ protected void processIntention(@NotNull PsiElement element) -->Line_24 $$ if (!(grandParent instanceof PsiMethod)) [ CD ]
Line_9 $$ final NullableNotNullManager notNullManager = NullableNotNullManager.getInstance(project)-->Line_11 $$ final List<String> nullables = notNullManager.getNullables()[ FD ]
Line_18 $$ annotationsToRemove = Collections.emptyList()-->Line_48 $$ annotate(overridingMethod, annotationName, attributes, element, annotationsToRemove)[ FD ]
Line_2 $$ protected void processIntention(@NotNull PsiElement element) -->Line_4 $$ final String annotationName = annotation.getQualifiedName()[ CD ]
Line_2 $$ protected void processIntention(@NotNull PsiElement element) -->Line_22 $$ final PsiMethod method[ CD ]
Line_24 $$ if (!(grandParent instanceof PsiMethod)) -->Line_34 $$ parameterIndex = parameterList.getParameterIndex(parameter)[ CD ]
Line_12 $$ final List<String> annotationsToRemove-->Line_53 $$ annotate(parameter, annotationName, attributes, element, annotationsToRemove)[ FD ]
Line_22 $$ final PsiMethod method-->Line_44 $$ final Collection<PsiMethod> overridingMethods = OverridingMethodsSearch.search(method, GlobalSearchScope.allScope(project), true).findAll()[ FD ]
Line_2 $$ protected void processIntention(@NotNull PsiElement element) -->Line_48 $$ annotate(overridingMethod, annotationName, attributes, element, annotationsToRemove)[ FD ]
Line_24 $$ if (!(grandParent instanceof PsiMethod)) -->Line_41 $$ parameterIndex = -1[ CD ]
Line_4 $$ final String annotationName = annotation.getQualifiedName()-->Line_5 $$ if (annotationName == null) [ FD ]
Line_16 $$ annotationsToRemove = notNulls-->Line_18 $$ annotationsToRemove = Collections.emptyList()[ FD ]
Line_41 $$ parameterIndex = -1-->Line_47 $$ if (parameterIndex == -1) [ FD ]
Line_2 $$ protected void processIntention(@NotNull PsiElement element) -->Line_10 $$ final List<String> notNulls = notNullManager.getNotNulls()[ CD ]
Line_3 $$ final PsiAnnotation annotation = (PsiAnnotation) element-->Line_20 $$ final PsiElement parent = annotation.getParent()[ FD ]
Line_11 $$ final List<String> nullables = notNullManager.getNullables()-->Line_15 $$ if (nullables.contains(annotationName)) [ FD ]
Line_14 $$ annotationsToRemove = nullables-->Line_53 $$ annotate(parameter, annotationName, attributes, element, annotationsToRemove)[ FD ]
Line_4 $$ final String annotationName = annotation.getQualifiedName()-->Line_15 $$ if (nullables.contains(annotationName)) [ FD ]
Line_2 $$ protected void processIntention(@NotNull PsiElement element) -->Line_11 $$ final List<String> nullables = notNullManager.getNullables()[ CD ]
Line_28 $$ final PsiParameter parameter = (PsiParameter) grandParent-->Line_53 $$ annotate(parameter, annotationName, attributes, element, annotationsToRemove)[ FD ]
Line_36 $$ if (!(greatGreatGrandParent instanceof PsiMethod)) -->Line_37 $$ return[ CD ]
Line_8 $$ final Project project = element.getProject()-->Line_44 $$ final Collection<PsiMethod> overridingMethods = OverridingMethodsSearch.search(method, GlobalSearchScope.allScope(project), true).findAll()[ FD ]
Line_12 $$ final List<String> annotationsToRemove-->Line_18 $$ annotationsToRemove = Collections.emptyList()[ FD ]
Line_2 $$ protected void processIntention(@NotNull PsiElement element) -->Line_21 $$ final PsiElement grandParent = parent.getParent()[ CD ]
Line_2 $$ protected void processIntention(@NotNull PsiElement element) -->Line_12 $$ final List<String> annotationsToRemove[ CD ]
Line_23 $$ final int parameterIndex-->Line_34 $$ parameterIndex = parameterList.getParameterIndex(parameter)[ FD ]
Line_24 $$ if (!(grandParent instanceof PsiMethod)) -->Line_28 $$ final PsiParameter parameter = (PsiParameter) grandParent[ CD ]
Line_2 $$ protected void processIntention(@NotNull PsiElement element) -->Line_20 $$ final PsiElement parent = annotation.getParent()[ CD ]
Line_23 $$ final int parameterIndex-->Line_41 $$ parameterIndex = -1[ FD ]
Line_39 $$ method = (PsiMethod) greatGreatGrandParent-->Line_42 $$ method = (PsiMethod) grandParent[ FD ]
Line_2 $$ protected void processIntention(@NotNull PsiElement element) -->Line_8 $$ final Project project = element.getProject()[ CD ]
Line_47 $$ if (parameterIndex == -1) -->Line_53 $$ annotate(parameter, annotationName, attributes, element, annotationsToRemove)[ CD ]
Line_22 $$ final PsiMethod method-->Line_42 $$ method = (PsiMethod) grandParent[ FD ]
Line_46 $$ for (PsiMethod overridingMethod : overridingMethods) -->Line_50 $$ final PsiParameterList parameterList = overridingMethod.getParameterList()[ FD ]
Line_33 $$ final PsiParameterList parameterList = (PsiParameterList) greatGrandParent-->Line_34 $$ parameterIndex = parameterList.getParameterIndex(parameter)[ FD ]
Line_24 $$ if (!(grandParent instanceof PsiMethod)) -->Line_33 $$ final PsiParameterList parameterList = (PsiParameterList) greatGrandParent[ CD ]
Line_2 $$ protected void processIntention(@NotNull PsiElement element) -->Line_13 $$ if (notNulls.contains(annotationName)) [ CD ]
Line_12 $$ final List<String> annotationsToRemove-->Line_48 $$ annotate(overridingMethod, annotationName, attributes, element, annotationsToRemove)[ FD ]
Line_16 $$ annotationsToRemove = notNulls-->Line_53 $$ annotate(parameter, annotationName, attributes, element, annotationsToRemove)[ FD ]
Line_28 $$ final PsiParameter parameter = (PsiParameter) grandParent-->Line_34 $$ parameterIndex = parameterList.getParameterIndex(parameter)[ FD ]
Line_34 $$ parameterIndex = parameterList.getParameterIndex(parameter)-->Line_41 $$ parameterIndex = -1[ FD ]
Line_5 $$ if (annotationName == null) -->Line_6 $$ return[ CD ]
Line_24 $$ if (!(grandParent instanceof PsiMethod)) -->Line_25 $$ if (!(grandParent instanceof PsiParameter)) [ CD ]
Line_2 $$ protected void processIntention(@NotNull PsiElement element) -->Line_53 $$ annotate(parameter, annotationName, attributes, element, annotationsToRemove)[ FD ]
Line_21 $$ final PsiElement grandParent = parent.getParent()-->Line_29 $$ final PsiElement greatGrandParent = grandParent.getParent()[ FD ]
Line_15 $$ if (nullables.contains(annotationName)) -->Line_18 $$ annotationsToRemove = Collections.emptyList()[ CD ]
Line_46 $$ for (PsiMethod overridingMethod : overridingMethods) -->Line_48 $$ annotate(overridingMethod, annotationName, attributes, element, annotationsToRemove)[ FD ]
Line_47 $$ if (parameterIndex == -1) -->Line_50 $$ final PsiParameterList parameterList = overridingMethod.getParameterList()[ CD ]
Line_12 $$ final List<String> annotationsToRemove-->Line_16 $$ annotationsToRemove = notNulls[ FD ]
Line_4 $$ final String annotationName = annotation.getQualifiedName()-->Line_48 $$ annotate(overridingMethod, annotationName, attributes, element, annotationsToRemove)[ FD ]
Line_24 $$ if (!(grandParent instanceof PsiMethod)) -->Line_39 $$ method = (PsiMethod) greatGreatGrandParent[ CD ]
Line_29 $$ final PsiElement greatGrandParent = grandParent.getParent()-->Line_35 $$ final PsiElement greatGreatGrandParent = greatGrandParent.getParent()[ FD ]
Line_11 $$ final List<String> nullables = notNullManager.getNullables()-->Line_14 $$ annotationsToRemove = nullables[ FD ]
Line_22 $$ final PsiMethod method-->Line_39 $$ method = (PsiMethod) greatGreatGrandParent[ FD ]
Line_2 $$ protected void processIntention(@NotNull PsiElement element) -->Line_9 $$ final NullableNotNullManager notNullManager = NullableNotNullManager.getInstance(project)[ CD ]
Line_12 $$ final List<String> annotationsToRemove-->Line_14 $$ annotationsToRemove = nullables[ FD ]
Line_2 $$ protected void processIntention(@NotNull PsiElement element) -->Line_45 $$ final PsiNameValuePair[] attributes = annotation.getParameterList().getAttributes()[ CD ]
Line_4 $$ final String annotationName = annotation.getQualifiedName()-->Line_53 $$ annotate(parameter, annotationName, attributes, element, annotationsToRemove)[ FD ]
Line_2 $$ protected void processIntention(@NotNull PsiElement element) -->Line_3 $$ final PsiAnnotation annotation = (PsiAnnotation) element[ CD ]
Line_45 $$ final PsiNameValuePair[] attributes = annotation.getParameterList().getAttributes()-->Line_48 $$ annotate(overridingMethod, annotationName, attributes, element, annotationsToRemove)[ FD ]
Line_45 $$ final PsiNameValuePair[] attributes = annotation.getParameterList().getAttributes()-->Line_53 $$ annotate(parameter, annotationName, attributes, element, annotationsToRemove)[ FD ]
Line_34 $$ parameterIndex = parameterList.getParameterIndex(parameter)-->Line_47 $$ if (parameterIndex == -1) [ FD ]
Line_15 $$ if (nullables.contains(annotationName)) -->Line_16 $$ annotationsToRemove = notNulls[ CD ]
Line_13 $$ if (notNulls.contains(annotationName)) -->Line_15 $$ if (nullables.contains(annotationName)) [ CD ]
Line_24 $$ if (!(grandParent instanceof PsiMethod)) -->Line_36 $$ if (!(greatGreatGrandParent instanceof PsiMethod)) [ CD ]
Line_3 $$ final PsiAnnotation annotation = (PsiAnnotation) element-->Line_45 $$ final PsiNameValuePair[] attributes = annotation.getParameterList().getAttributes()[ FD ]
Line_20 $$ final PsiElement parent = annotation.getParent()-->Line_21 $$ final PsiElement grandParent = parent.getParent()[ FD ]
Line_10 $$ final List<String> notNulls = notNullManager.getNotNulls()-->Line_16 $$ annotationsToRemove = notNulls[ FD ]
Line_14 $$ annotationsToRemove = nullables-->Line_18 $$ annotationsToRemove = Collections.emptyList()[ FD ]
Line_33 $$ final PsiParameterList parameterList = (PsiParameterList) greatGrandParent-->Line_51 $$ final PsiParameter[] parameters = parameterList.getParameters()[ FD ]
Line_25 $$ if (!(grandParent instanceof PsiParameter)) -->Line_26 $$ return[ CD ]
Line_24 $$ if (!(grandParent instanceof PsiMethod)) -->Line_42 $$ method = (PsiMethod) grandParent[ CD ]
Line_47 $$ if (parameterIndex == -1) -->Line_51 $$ final PsiParameter[] parameters = parameterList.getParameters()[ CD ]
Line_13 $$ if (notNulls.contains(annotationName)) -->Line_14 $$ annotationsToRemove = nullables[ CD ]
Line_42 $$ method = (PsiMethod) grandParent-->Line_44 $$ final Collection<PsiMethod> overridingMethods = OverridingMethodsSearch.search(method, GlobalSearchScope.allScope(project), true).findAll()[ FD ]
Line_14 $$ annotationsToRemove = nullables-->Line_16 $$ annotationsToRemove = notNulls[ FD ]
Line_39 $$ method = (PsiMethod) greatGreatGrandParent-->Line_44 $$ final Collection<PsiMethod> overridingMethods = OverridingMethodsSearch.search(method, GlobalSearchScope.allScope(project), true).findAll()[ FD ]
Line_30 $$ if (!(greatGrandParent instanceof PsiParameterList)) -->Line_31 $$ return[ CD ]
Line_4 $$ final String annotationName = annotation.getQualifiedName()-->Line_13 $$ if (notNulls.contains(annotationName)) [ FD ]
Line_24 $$ if (!(grandParent instanceof PsiMethod)) -->Line_30 $$ if (!(greatGrandParent instanceof PsiParameterList)) [ CD ]
Line_2 $$ protected void processIntention(@NotNull PsiElement element) -->Line_44 $$ final Collection<PsiMethod> overridingMethods = OverridingMethodsSearch.search(method, GlobalSearchScope.allScope(project), true).findAll()[ CD ]
Line_16 $$ annotationsToRemove = notNulls-->Line_48 $$ annotate(overridingMethod, annotationName, attributes, element, annotationsToRemove)[ FD ]
Line_23 $$ final int parameterIndex-->Line_47 $$ if (parameterIndex == -1) [ FD ]
Line_2 $$ protected void processIntention(@NotNull PsiElement element) -->Line_5 $$ if (annotationName == null) [ CD ]
Line_8 $$ final Project project = element.getProject()-->Line_9 $$ final NullableNotNullManager notNullManager = NullableNotNullManager.getInstance(project)[ FD ]
Line_10 $$ final List<String> notNulls = notNullManager.getNotNulls()-->Line_13 $$ if (notNulls.contains(annotationName)) [ FD ]
Line_3 $$ final PsiAnnotation annotation = (PsiAnnotation) element-->Line_4 $$ final String annotationName = annotation.getQualifiedName()[ FD ]
Line_24 $$ if (!(grandParent instanceof PsiMethod)) -->Line_35 $$ final PsiElement greatGreatGrandParent = greatGrandParent.getParent()[ CD ]
Line_47 $$ if (parameterIndex == -1) -->Line_48 $$ annotate(overridingMethod, annotationName, attributes, element, annotationsToRemove)[ CD ]
Line_18 $$ annotationsToRemove = Collections.emptyList()-->Line_53 $$ annotate(parameter, annotationName, attributes, element, annotationsToRemove)[ FD ]
