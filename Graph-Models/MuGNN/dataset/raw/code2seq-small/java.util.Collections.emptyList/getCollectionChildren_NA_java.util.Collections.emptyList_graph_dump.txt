Line_4 $$ if (description instanceof DomChildDescriptionImpl) -->Line_12 $$ if (description instanceof CustomDomChildrenDescriptionImpl) [ CD ]
Line_7 $$ return ContainerUtil.map(stubs, new Function<DomStub, DomElement>() -->Line_17 $$ EvaluatedXmlName name = new DummyEvaluatedXmlName(stub.getName(), "")[ FD ]
Line_4 $$ if (description instanceof DomChildDescriptionImpl) -->Line_7 $$ return ContainerUtil.map(stubs, new Function<DomStub, DomElement>() [ CD ]
Line_2 $$ public List<? extends DomElement> getCollectionChildren(final AbstractCollectionChildDescription description) -->Line_46 $$ return Collections.unmodifiableList(elements)[ CD ]
Line_16 $$ if (stub instanceof ElementStub && stub.isCustom()) -->Line_17 $$ EvaluatedXmlName name = new DummyEvaluatedXmlName(stub.getName(), "")[ CD ]
Line_29 $$ if (subTags.isEmpty())-->Line_30 $$ return Collections.emptyList()[ CD ]
Line_7 $$ return ContainerUtil.map(stubs, new Function<DomStub, DomElement>() -->Line_9 $$ return stub.getOrCreateHandler((DomChildDescriptionImpl) description, myManager).getProxy()[ CD ]
Line_14 $$ return ContainerUtil.mapNotNull(stubs, new NullableFunction<DomStub, DomElement>() -->Line_16 $$ if (stub instanceof ElementStub && stub.isCustom()) [ FD ]
Line_6 $$ List<DomStub> stubs = myStub.getChildrenByName(xmlName.getLocalName(), xmlName.getNamespaceKey())-->Line_7 $$ return ContainerUtil.map(stubs, new Function<DomStub, DomElement>() [ FD ]
Line_14 $$ return ContainerUtil.mapNotNull(stubs, new NullableFunction<DomStub, DomElement>() -->Line_16 $$ if (stub instanceof ElementStub && stub.isCustom()) [ CD ]
Line_4 $$ if (description instanceof DomChildDescriptionImpl) -->Line_6 $$ List<DomStub> stubs = myStub.getChildrenByName(xmlName.getLocalName(), xmlName.getNamespaceKey())[ CD ]
Line_2 $$ public List<? extends DomElement> getCollectionChildren(final AbstractCollectionChildDescription description) -->Line_28 $$ final List<XmlTag> subTags = getCollectionSubTags(description, tag)[ CD ]
Line_12 $$ if (description instanceof CustomDomChildrenDescriptionImpl) -->Line_14 $$ return ContainerUtil.mapNotNull(stubs, new NullableFunction<DomStub, DomElement>() [ CD ]
Line_2 $$ public List<? extends DomElement> getCollectionChildren(final AbstractCollectionChildDescription description) -->Line_29 $$ if (subTags.isEmpty())[ CD ]
Line_12 $$ if (description instanceof CustomDomChildrenDescriptionImpl) -->Line_13 $$ List<DomStub> stubs = myStub.getChildrenStubs()[ CD ]
Line_4 $$ if (description instanceof DomChildDescriptionImpl) -->Line_5 $$ XmlName xmlName = ((DomChildDescriptionImpl) description).getXmlName()[ CD ]
Line_26 $$ if (tag == null)-->Line_27 $$ return Collections.emptyList()[ CD ]
Line_35 $$ if (semElement == null) -->Line_38 $$ if (anyDom != null) [ CD ]
Line_5 $$ XmlName xmlName = ((DomChildDescriptionImpl) description).getXmlName()-->Line_6 $$ List<DomStub> stubs = myStub.getChildrenByName(xmlName.getLocalName(), xmlName.getNamespaceKey())[ FD ]
Line_7 $$ return ContainerUtil.map(stubs, new Function<DomStub, DomElement>() -->Line_9 $$ return stub.getOrCreateHandler((DomChildDescriptionImpl) description, myManager).getProxy()[ FD ]
Line_2 $$ public List<? extends DomElement> getCollectionChildren(final AbstractCollectionChildDescription description) -->Line_26 $$ if (tag == null)[ CD ]
Line_2 $$ public List<? extends DomElement> getCollectionChildren(final AbstractCollectionChildDescription description) -->Line_4 $$ if (description instanceof DomChildDescriptionImpl) [ FD ]
Line_2 $$ public List<? extends DomElement> getCollectionChildren(final AbstractCollectionChildDescription description) -->Line_28 $$ final List<XmlTag> subTags = getCollectionSubTags(description, tag)[ FD ]
Line_7 $$ return ContainerUtil.map(stubs, new Function<DomStub, DomElement>() -->Line_16 $$ if (stub instanceof ElementStub && stub.isCustom()) [ FD ]
Line_2 $$ public List<? extends DomElement> getCollectionChildren(final AbstractCollectionChildDescription description) -->Line_3 $$ if (myStub != null && description.isStubbed()) [ FD ]
Line_6 $$ List<DomStub> stubs = myStub.getChildrenByName(xmlName.getLocalName(), xmlName.getNamespaceKey())-->Line_14 $$ return ContainerUtil.mapNotNull(stubs, new NullableFunction<DomStub, DomElement>() [ FD ]
Line_14 $$ return ContainerUtil.mapNotNull(stubs, new NullableFunction<DomStub, DomElement>() -->Line_20 $$ return null[ CD ]
Line_2 $$ public List<? extends DomElement> getCollectionChildren(final AbstractCollectionChildDescription description) -->Line_25 $$ XmlTag tag = getXmlTag()[ CD ]
Line_16 $$ if (stub instanceof ElementStub && stub.isCustom()) -->Line_18 $$ return new CollectionElementInvocationHandler(name, (CustomDomChildrenDescriptionImpl) description, myManager, (ElementStub) stub).getProxy()[ CD ]
Line_3 $$ if (myStub != null && description.isStubbed()) -->Line_4 $$ if (description instanceof DomChildDescriptionImpl) [ CD ]
Line_14 $$ return ContainerUtil.mapNotNull(stubs, new NullableFunction<DomStub, DomElement>() -->Line_17 $$ EvaluatedXmlName name = new DummyEvaluatedXmlName(stub.getName(), "")[ FD ]
Line_2 $$ public List<? extends DomElement> getCollectionChildren(final AbstractCollectionChildDescription description) -->Line_3 $$ if (myStub != null && description.isStubbed()) [ CD ]
Line_2 $$ public List<? extends DomElement> getCollectionChildren(final AbstractCollectionChildDescription description) -->Line_12 $$ if (description instanceof CustomDomChildrenDescriptionImpl) [ FD ]
Line_35 $$ if (semElement == null) -->Line_37 $$ DomInvocationHandler anyDom = myManager.getDomHandler(subTag)[ CD ]
Line_35 $$ if (semElement == null) -->Line_43 $$ elements.add(semElement.getProxy())[ CD ]
