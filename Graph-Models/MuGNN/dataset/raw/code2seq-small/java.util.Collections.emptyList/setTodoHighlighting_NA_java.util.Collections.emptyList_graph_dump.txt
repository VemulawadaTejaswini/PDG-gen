Line_2 $$ private void setTodoHighlighting(final Document oldDocument, final Document document) -->Line_3 $$ final ContentRevisionCache cache = ProjectLevelVcsManager.getInstance(myProject).getContentRevisionCache()[ CD ]
Line_4 $$ final List<Pair<TextRange, TextAttributes>> beforeTodoRanges = myBeforeNumber == null ? Collections.<Pair<TextRange, TextAttributes>>emptyList() : new TodoForBaseRevision(myProject, getBeforeFragments(), 1, myFileName, oldDocument.getText(), true, myFileType, new Getter<Object>() -->Line_10 $$ cache.putCustom(myFilePath, myBeforeNumber, items)[ CD ]
Line_2 $$ private void setTodoHighlighting(final Document oldDocument, final Document document) -->Line_15 $$ setAfterTodoRanges(afterTodoRanges)[ CD ]
Line_2 $$ private void setTodoHighlighting(final Document oldDocument, final Document document) -->Line_4 $$ final List<Pair<TextRange, TextAttributes>> beforeTodoRanges = myBeforeNumber == null ? Collections.<Pair<TextRange, TextAttributes>>emptyList() : new TodoForBaseRevision(myProject, getBeforeFragments(), 1, myFileName, oldDocument.getText(), true, myFileType, new Getter<Object>() [ CD ]
Line_3 $$ final ContentRevisionCache cache = ProjectLevelVcsManager.getInstance(myProject).getContentRevisionCache()-->Line_10 $$ cache.putCustom(myFilePath, myBeforeNumber, items)[ FD ]
Line_4 $$ final List<Pair<TextRange, TextAttributes>> beforeTodoRanges = myBeforeNumber == null ? Collections.<Pair<TextRange, TextAttributes>>emptyList() : new TodoForBaseRevision(myProject, getBeforeFragments(), 1, myFileName, oldDocument.getText(), true, myFileType, new Getter<Object>() -->Line_10 $$ cache.putCustom(myFilePath, myBeforeNumber, items)[ FD ]
Line_2 $$ private void setTodoHighlighting(final Document oldDocument, final Document document) -->Line_4 $$ final List<Pair<TextRange, TextAttributes>> beforeTodoRanges = myBeforeNumber == null ? Collections.<Pair<TextRange, TextAttributes>>emptyList() : new TodoForBaseRevision(myProject, getBeforeFragments(), 1, myFileName, oldDocument.getText(), true, myFileType, new Getter<Object>() [ FD ]
Line_2 $$ private void setTodoHighlighting(final Document oldDocument, final Document document) -->Line_13 $$ final List<Pair<TextRange, TextAttributes>> afterTodoRanges = new TodoForExistingFile(myProject, getAfterFragments(), 1, myFileName, document.getText(), false, myFileType, myFile).execute()[ CD ]
Line_2 $$ private void setTodoHighlighting(final Document oldDocument, final Document document) -->Line_14 $$ setBeforeTodoRanges(beforeTodoRanges)[ CD ]
Line_4 $$ final List<Pair<TextRange, TextAttributes>> beforeTodoRanges = myBeforeNumber == null ? Collections.<Pair<TextRange, TextAttributes>>emptyList() : new TodoForBaseRevision(myProject, getBeforeFragments(), 1, myFileName, oldDocument.getText(), true, myFileType, new Getter<Object>() -->Line_6 $$ return cache.getCustom(myFilePath, myBeforeNumber)[ CD ]
Line_4 $$ final List<Pair<TextRange, TextAttributes>> beforeTodoRanges = myBeforeNumber == null ? Collections.<Pair<TextRange, TextAttributes>>emptyList() : new TodoForBaseRevision(myProject, getBeforeFragments(), 1, myFileName, oldDocument.getText(), true, myFileType, new Getter<Object>() -->Line_14 $$ setBeforeTodoRanges(beforeTodoRanges)[ FD ]
Line_2 $$ private void setTodoHighlighting(final Document oldDocument, final Document document) -->Line_13 $$ final List<Pair<TextRange, TextAttributes>> afterTodoRanges = new TodoForExistingFile(myProject, getAfterFragments(), 1, myFileName, document.getText(), false, myFileType, myFile).execute()[ FD ]
Line_3 $$ final ContentRevisionCache cache = ProjectLevelVcsManager.getInstance(myProject).getContentRevisionCache()-->Line_6 $$ return cache.getCustom(myFilePath, myBeforeNumber)[ FD ]
