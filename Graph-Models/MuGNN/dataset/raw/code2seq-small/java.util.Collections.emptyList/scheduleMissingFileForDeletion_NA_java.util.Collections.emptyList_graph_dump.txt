Line_3 $$ for (FilePath file : files) -->Line_4 $$ if (file.isDirectory()) [ FD ]
Line_2 $$ public List<VcsException> scheduleMissingFileForDeletion(List<FilePath> files) -->Line_11 $$ executor.performActionSync(handler, CvsOperationExecutorCallback.EMPTY)[ CD ]
Line_9 $$ final CvsHandler handler = RemoveLocallyFileOrDirectoryAction.getDefaultHandler(myProject, ChangesUtil.filePathsToFiles(files))-->Line_11 $$ executor.performActionSync(handler, CvsOperationExecutorCallback.EMPTY)[ FD ]
Line_10 $$ final CvsOperationExecutor executor = new CvsOperationExecutor(myProject)-->Line_11 $$ executor.performActionSync(handler, CvsOperationExecutorCallback.EMPTY)[ FD ]
Line_2 $$ public List<VcsException> scheduleMissingFileForDeletion(List<FilePath> files) -->Line_10 $$ final CvsOperationExecutor executor = new CvsOperationExecutor(myProject)[ CD ]
Line_2 $$ public List<VcsException> scheduleMissingFileForDeletion(List<FilePath> files) -->Line_9 $$ final CvsHandler handler = RemoveLocallyFileOrDirectoryAction.getDefaultHandler(myProject, ChangesUtil.filePathsToFiles(files))[ FD ]
Line_4 $$ if (file.isDirectory()) -->Line_5 $$ VcsBalloonProblemNotifier.showOverChangesView(myProject, "Locally deleted directories cannot be removed from CVS. To remove a locally " + "deleted directory from CVS, first invoke Rollback and then use " + ApplicationNamesInfo.getInstance().getFullProductName() + "'s Delete.", MessageType.WARNING)[ CD ]
Line_2 $$ public List<VcsException> scheduleMissingFileForDeletion(List<FilePath> files) -->Line_9 $$ final CvsHandler handler = RemoveLocallyFileOrDirectoryAction.getDefaultHandler(myProject, ChangesUtil.filePathsToFiles(files))[ CD ]
Line_2 $$ public List<VcsException> scheduleMissingFileForDeletion(List<FilePath> files) -->Line_12 $$ return Collections.emptyList()[ CD ]
