Line_2 $$ protected Collection<String> getKeyVariants(@NotNull GrExpression qualifier, @Nullable PsiElement resolve) -->Line_6 $$ final Set<String> res = new HashSet<String>()[ CD ]
Line_6 $$ final Set<String> res = new HashSet<String>()-->Line_9 $$ res.add(variant)[ FD ]
Line_2 $$ protected Collection<String> getKeyVariants(@NotNull GrExpression qualifier, @Nullable PsiElement resolve) -->Line_3 $$ Pair<ConfigSlurperSupport.PropertiesProvider, List<String>> info = getInfo(qualifier, resolve)[ FD ]
Line_2 $$ protected Collection<String> getKeyVariants(@NotNull GrExpression qualifier, @Nullable PsiElement resolve) -->Line_4 $$ if (info == null)[ CD ]
Line_3 $$ Pair<ConfigSlurperSupport.PropertiesProvider, List<String>> info = getInfo(qualifier, resolve)-->Line_4 $$ if (info == null)[ FD ]
Line_7 $$ info.first.collectVariants(info.second, new PairConsumer<String, Boolean>() -->Line_9 $$ res.add(variant)[ FD ]
Line_7 $$ info.first.collectVariants(info.second, new PairConsumer<String, Boolean>() -->Line_9 $$ res.add(variant)[ CD ]
Line_4 $$ if (info == null)-->Line_5 $$ return Collections.emptyList()[ CD ]
Line_2 $$ protected Collection<String> getKeyVariants(@NotNull GrExpression qualifier, @Nullable PsiElement resolve) -->Line_12 $$ return res[ CD ]
Line_2 $$ protected Collection<String> getKeyVariants(@NotNull GrExpression qualifier, @Nullable PsiElement resolve) -->Line_7 $$ info.first.collectVariants(info.second, new PairConsumer<String, Boolean>() [ CD ]
Line_2 $$ protected Collection<String> getKeyVariants(@NotNull GrExpression qualifier, @Nullable PsiElement resolve) -->Line_3 $$ Pair<ConfigSlurperSupport.PropertiesProvider, List<String>> info = getInfo(qualifier, resolve)[ CD ]
