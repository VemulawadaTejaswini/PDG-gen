Line_2 $$ public void testSendingNotifications() throws Exception -->Line_6 $$ myTree.setIgnoredFilesPaths(Collections.singletonList(myRoots.get(1).getPath()))[ CD ]
Line_2 $$ public void testSendingNotifications() throws Exception -->Line_4 $$ assertEquals("ignored: m1 ", myLog)[ CD ]
Line_2 $$ public void testSendingNotifications() throws Exception -->Line_13 $$ assertEquals("unignored: m1 ", myLog)[ CD ]
Line_2 $$ public void testSendingNotifications() throws Exception -->Line_7 $$ assertEquals("ignored: m2 unignored: m1 ", myLog)[ CD ]
Line_2 $$ public void testSendingNotifications() throws Exception -->Line_3 $$ myTree.setIgnoredState(Collections.singletonList(myRoots.get(0)), true)[ CD ]
Line_2 $$ public void testSendingNotifications() throws Exception -->Line_9 $$ myTree.setIgnoredFilesPatterns(Collections.singletonList("*"))[ CD ]
Line_2 $$ public void testSendingNotifications() throws Exception -->Line_10 $$ assertEquals("ignored: m1 ", myLog)[ CD ]
Line_2 $$ public void testSendingNotifications() throws Exception -->Line_12 $$ myTree.setIgnoredFilesPatterns(Collections.<String>emptyList())[ CD ]
