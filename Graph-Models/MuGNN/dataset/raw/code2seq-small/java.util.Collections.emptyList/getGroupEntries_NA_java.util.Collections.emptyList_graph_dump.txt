Line_5 $$ if (userId <= 0) -->Line_6 $$ return bookmarksEntryPersistence.filterFindByG_NotS(groupId, WorkflowConstants.STATUS_IN_TRASH, start, end, new EntryModifiedDateComparator())[ CD ]
Line_14 $$ if (userId <= 0) -->Line_15 $$ return bookmarksEntryPersistence.filterFindByG_F_S(groupId, ArrayUtil.toLongArray(folderIds), WorkflowConstants.STATUS_APPROVED, start, end, new EntryModifiedDateComparator())[ CD ]
Line_14 $$ if (userId <= 0) -->Line_17 $$ return bookmarksEntryPersistence.filterFindByG_U_F_S(groupId, userId, ArrayUtil.toLongArray(folderIds), WorkflowConstants.STATUS_APPROVED, start, end, new EntryModifiedDateComparator())[ CD ]
Line_11 $$ List<Long> folderIds = bookmarksFolderService.getFolderIds(groupId, rootFolderId)-->Line_12 $$ if (folderIds.isEmpty()) [ FD ]
Line_11 $$ List<Long> folderIds = bookmarksFolderService.getFolderIds(groupId, rootFolderId)-->Line_17 $$ return bookmarksEntryPersistence.filterFindByG_U_F_S(groupId, userId, ArrayUtil.toLongArray(folderIds), WorkflowConstants.STATUS_APPROVED, start, end, new EntryModifiedDateComparator())[ FD ]
Line_5 $$ if (userId <= 0) -->Line_8 $$ return bookmarksEntryPersistence.filterFindByG_U_NotS(groupId, userId, WorkflowConstants.STATUS_IN_TRASH, start, end, new EntryModifiedDateComparator())[ CD ]
Line_11 $$ List<Long> folderIds = bookmarksFolderService.getFolderIds(groupId, rootFolderId)-->Line_15 $$ return bookmarksEntryPersistence.filterFindByG_F_S(groupId, ArrayUtil.toLongArray(folderIds), WorkflowConstants.STATUS_APPROVED, start, end, new EntryModifiedDateComparator())[ FD ]
Line_4 $$ if (rootFolderId == BookmarksFolderConstants.DEFAULT_PARENT_FOLDER_ID) -->Line_5 $$ if (userId <= 0) [ CD ]
Line_12 $$ if (folderIds.isEmpty()) -->Line_13 $$ return Collections.emptyList()[ CD ]
Line_12 $$ if (folderIds.isEmpty()) -->Line_14 $$ if (userId <= 0) [ CD ]
