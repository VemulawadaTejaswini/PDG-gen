Line_4 $$ if (userId <= 0) -->Line_5 $$ return bookmarksEntryPersistence.filterFindByG_NotS(groupId, WorkflowConstants.STATUS_IN_TRASH, start, end, new EntryModifiedDateComparator())[ CD ]
Line_2 $$ public List<BookmarksEntry> getGroupEntries(long groupId, long userId, long rootFolderId, int start, int end) throws PortalException -->Line_13 $$ if (userId <= 0) [ FD ]
Line_2 $$ public List<BookmarksEntry> getGroupEntries(long groupId, long userId, long rootFolderId, int start, int end) throws PortalException -->Line_14 $$ return bookmarksEntryPersistence.filterFindByG_F_S(groupId, ArrayUtil.toLongArray(folderIds), WorkflowConstants.STATUS_APPROVED, start, end, new EntryModifiedDateComparator())[ FD ]
Line_13 $$ if (userId <= 0) -->Line_16 $$ return bookmarksEntryPersistence.filterFindByG_U_F_S(groupId, userId, ArrayUtil.toLongArray(folderIds), WorkflowConstants.STATUS_APPROVED, start, end, new EntryModifiedDateComparator())[ CD ]
Line_2 $$ public List<BookmarksEntry> getGroupEntries(long groupId, long userId, long rootFolderId, int start, int end) throws PortalException -->Line_16 $$ return bookmarksEntryPersistence.filterFindByG_U_F_S(groupId, userId, ArrayUtil.toLongArray(folderIds), WorkflowConstants.STATUS_APPROVED, start, end, new EntryModifiedDateComparator())[ FD ]
Line_2 $$ public List<BookmarksEntry> getGroupEntries(long groupId, long userId, long rootFolderId, int start, int end) throws PortalException -->Line_10 $$ List<Long> folderIds = bookmarksFolderService.getFolderIds(groupId, rootFolderId)[ CD ]
Line_13 $$ if (userId <= 0) -->Line_14 $$ return bookmarksEntryPersistence.filterFindByG_F_S(groupId, ArrayUtil.toLongArray(folderIds), WorkflowConstants.STATUS_APPROVED, start, end, new EntryModifiedDateComparator())[ CD ]
Line_2 $$ public List<BookmarksEntry> getGroupEntries(long groupId, long userId, long rootFolderId, int start, int end) throws PortalException -->Line_5 $$ return bookmarksEntryPersistence.filterFindByG_NotS(groupId, WorkflowConstants.STATUS_IN_TRASH, start, end, new EntryModifiedDateComparator())[ FD ]
Line_2 $$ public List<BookmarksEntry> getGroupEntries(long groupId, long userId, long rootFolderId, int start, int end) throws PortalException -->Line_3 $$ if (rootFolderId == BookmarksFolderConstants.DEFAULT_PARENT_FOLDER_ID) [ FD ]
Line_2 $$ public List<BookmarksEntry> getGroupEntries(long groupId, long userId, long rootFolderId, int start, int end) throws PortalException -->Line_11 $$ if (folderIds.isEmpty()) [ CD ]
Line_2 $$ public List<BookmarksEntry> getGroupEntries(long groupId, long userId, long rootFolderId, int start, int end) throws PortalException -->Line_3 $$ if (rootFolderId == BookmarksFolderConstants.DEFAULT_PARENT_FOLDER_ID) [ CD ]
Line_3 $$ if (rootFolderId == BookmarksFolderConstants.DEFAULT_PARENT_FOLDER_ID) -->Line_4 $$ if (userId <= 0) [ CD ]
Line_11 $$ if (folderIds.isEmpty()) -->Line_13 $$ if (userId <= 0) [ CD ]
Line_4 $$ if (userId <= 0) -->Line_7 $$ return bookmarksEntryPersistence.filterFindByG_U_NotS(groupId, userId, WorkflowConstants.STATUS_IN_TRASH, start, end, new EntryModifiedDateComparator())[ CD ]
Line_2 $$ public List<BookmarksEntry> getGroupEntries(long groupId, long userId, long rootFolderId, int start, int end) throws PortalException -->Line_7 $$ return bookmarksEntryPersistence.filterFindByG_U_NotS(groupId, userId, WorkflowConstants.STATUS_IN_TRASH, start, end, new EntryModifiedDateComparator())[ FD ]
Line_10 $$ List<Long> folderIds = bookmarksFolderService.getFolderIds(groupId, rootFolderId)-->Line_16 $$ return bookmarksEntryPersistence.filterFindByG_U_F_S(groupId, userId, ArrayUtil.toLongArray(folderIds), WorkflowConstants.STATUS_APPROVED, start, end, new EntryModifiedDateComparator())[ FD ]
Line_10 $$ List<Long> folderIds = bookmarksFolderService.getFolderIds(groupId, rootFolderId)-->Line_11 $$ if (folderIds.isEmpty()) [ FD ]
Line_2 $$ public List<BookmarksEntry> getGroupEntries(long groupId, long userId, long rootFolderId, int start, int end) throws PortalException -->Line_4 $$ if (userId <= 0) [ FD ]
Line_10 $$ List<Long> folderIds = bookmarksFolderService.getFolderIds(groupId, rootFolderId)-->Line_14 $$ return bookmarksEntryPersistence.filterFindByG_F_S(groupId, ArrayUtil.toLongArray(folderIds), WorkflowConstants.STATUS_APPROVED, start, end, new EntryModifiedDateComparator())[ FD ]
Line_11 $$ if (folderIds.isEmpty()) -->Line_12 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public List<BookmarksEntry> getGroupEntries(long groupId, long userId, long rootFolderId, int start, int end) throws PortalException -->Line_10 $$ List<Long> folderIds = bookmarksFolderService.getFolderIds(groupId, rootFolderId)[ FD ]
