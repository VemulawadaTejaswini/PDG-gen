Line_14 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_16 $$ queryMessage.setCustomPayload(reqMap)[ FD ]
Line_11 $$ Map<String, ByteBuffer> reqMap-->Line_27 $$ prepareMessage.setCustomPayload(reqMap)[ FD ]
Line_8 $$ SimpleClient client = new SimpleClient(nativeAddr.getHostAddress(), nativePort, Server.VERSION_3)-->Line_24 $$ client.execute(queryMessage)[ FD ]
Line_2 $$ public void testMessagePayloadVersion3() throws Throwable -->Line_3 $$ QueryHandler queryHandler = (QueryHandler) cqlQueryHandlerField.get(null)[ CD ]
Line_12 $$ QueryMessage queryMessage = new QueryMessage("CREATE TABLE " + KEYSPACE + ".atable (pk int PRIMARY KEY, v text)", QueryOptions.DEFAULT)-->Line_16 $$ queryMessage.setCustomPayload(reqMap)[ FD ]
Line_14 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_49 $$ batchMessage.setCustomPayload(reqMap)[ FD ]
Line_12 $$ QueryMessage queryMessage = new QueryMessage("CREATE TABLE " + KEYSPACE + ".atable (pk int PRIMARY KEY, v text)", QueryOptions.DEFAULT)-->Line_23 $$ queryMessage.setCustomPayload(null)[ FD ]
Line_8 $$ SimpleClient client = new SimpleClient(nativeAddr.getHostAddress(), nativePort, Server.VERSION_3)-->Line_35 $$ ResultMessage.Prepared prepareResponse = (ResultMessage.Prepared) client.execute(prepareMessage)[ FD ]
Line_11 $$ Map<String, ByteBuffer> reqMap-->Line_39 $$ executeMessage.setCustomPayload(reqMap)[ FD ]
Line_8 $$ SimpleClient client = new SimpleClient(nativeAddr.getHostAddress(), nativePort, Server.VERSION_3)-->Line_10 $$ client.connect(false)[ FD ]
Line_2 $$ public void testMessagePayloadVersion3() throws Throwable -->Line_4 $$ cqlQueryHandlerField.set(null, new TestQueryHandler())[ CD ]
Line_14 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_39 $$ executeMessage.setCustomPayload(reqMap)[ FD ]
Line_25 $$ reqMap = Collections.singletonMap("foo", bytes(43))-->Line_47 $$ reqMap = Collections.singletonMap("foo", bytes(45))[ FD ]
Line_11 $$ Map<String, ByteBuffer> reqMap-->Line_47 $$ reqMap = Collections.singletonMap("foo", bytes(45))[ FD ]
Line_8 $$ SimpleClient client = new SimpleClient(nativeAddr.getHostAddress(), nativePort, Server.VERSION_3)-->Line_57 $$ client.close()[ FD ]
Line_37 $$ reqMap = Collections.singletonMap("foo", bytes(44))-->Line_39 $$ executeMessage.setCustomPayload(reqMap)[ FD ]
Line_11 $$ Map<String, ByteBuffer> reqMap-->Line_37 $$ reqMap = Collections.singletonMap("foo", bytes(44))[ FD ]
Line_14 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_37 $$ reqMap = Collections.singletonMap("foo", bytes(44))[ FD ]
Line_8 $$ SimpleClient client = new SimpleClient(nativeAddr.getHostAddress(), nativePort, Server.VERSION_3)-->Line_29 $$ client.execute(prepareMessage)[ FD ]
Line_12 $$ QueryMessage queryMessage = new QueryMessage("CREATE TABLE " + KEYSPACE + ".atable (pk int PRIMARY KEY, v text)", QueryOptions.DEFAULT)-->Line_24 $$ client.execute(queryMessage)[ FD ]
Line_3 $$ QueryHandler queryHandler = (QueryHandler) cqlQueryHandlerField.get(null)-->Line_60 $$ cqlQueryHandlerField.set(null, queryHandler)[ FD ]
Line_25 $$ reqMap = Collections.singletonMap("foo", bytes(43))-->Line_37 $$ reqMap = Collections.singletonMap("foo", bytes(44))[ FD ]
Line_36 $$ ExecuteMessage executeMessage = new ExecuteMessage(prepareResponse.statementId, QueryOptions.DEFAULT)-->Line_39 $$ executeMessage.setCustomPayload(reqMap)[ FD ]
Line_12 $$ QueryMessage queryMessage = new QueryMessage("CREATE TABLE " + KEYSPACE + ".atable (pk int PRIMARY KEY, v text)", QueryOptions.DEFAULT)-->Line_18 $$ client.execute(queryMessage)[ FD ]
Line_25 $$ reqMap = Collections.singletonMap("foo", bytes(43))-->Line_39 $$ executeMessage.setCustomPayload(reqMap)[ FD ]
Line_13 $$ PrepareMessage prepareMessage = new PrepareMessage("SELECT * FROM " + KEYSPACE + ".atable")-->Line_34 $$ prepareMessage.setCustomPayload(null)[ FD ]
Line_11 $$ Map<String, ByteBuffer> reqMap-->Line_49 $$ batchMessage.setCustomPayload(reqMap)[ FD ]
Line_8 $$ SimpleClient client = new SimpleClient(nativeAddr.getHostAddress(), nativePort, Server.VERSION_3)-->Line_18 $$ client.execute(queryMessage)[ FD ]
Line_14 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_25 $$ reqMap = Collections.singletonMap("foo", bytes(43))[ FD ]
Line_8 $$ SimpleClient client = new SimpleClient(nativeAddr.getHostAddress(), nativePort, Server.VERSION_3)-->Line_41 $$ client.execute(executeMessage)[ FD ]
Line_11 $$ Map<String, ByteBuffer> reqMap-->Line_16 $$ queryMessage.setCustomPayload(reqMap)[ FD ]
Line_37 $$ reqMap = Collections.singletonMap("foo", bytes(44))-->Line_49 $$ batchMessage.setCustomPayload(reqMap)[ FD ]
Line_46 $$ BatchMessage batchMessage = new BatchMessage(BatchStatement.Type.UNLOGGED, Collections.<Object>singletonList("INSERT INTO " + KEYSPACE + ".atable (pk,v) VALUES (1, 'foo')"), Collections.singletonList(Collections.<ByteBuffer>emptyList()), QueryOptions.DEFAULT)-->Line_49 $$ batchMessage.setCustomPayload(reqMap)[ FD ]
Line_25 $$ reqMap = Collections.singletonMap("foo", bytes(43))-->Line_49 $$ batchMessage.setCustomPayload(reqMap)[ FD ]
Line_13 $$ PrepareMessage prepareMessage = new PrepareMessage("SELECT * FROM " + KEYSPACE + ".atable")-->Line_35 $$ ResultMessage.Prepared prepareResponse = (ResultMessage.Prepared) client.execute(prepareMessage)[ FD ]
Line_14 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_27 $$ prepareMessage.setCustomPayload(reqMap)[ FD ]
Line_14 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_47 $$ reqMap = Collections.singletonMap("foo", bytes(45))[ FD ]
Line_37 $$ reqMap = Collections.singletonMap("foo", bytes(44))-->Line_47 $$ reqMap = Collections.singletonMap("foo", bytes(45))[ FD ]
Line_13 $$ PrepareMessage prepareMessage = new PrepareMessage("SELECT * FROM " + KEYSPACE + ".atable")-->Line_29 $$ client.execute(prepareMessage)[ FD ]
Line_36 $$ ExecuteMessage executeMessage = new ExecuteMessage(prepareResponse.statementId, QueryOptions.DEFAULT)-->Line_41 $$ client.execute(executeMessage)[ FD ]
Line_46 $$ BatchMessage batchMessage = new BatchMessage(BatchStatement.Type.UNLOGGED, Collections.<Object>singletonList("INSERT INTO " + KEYSPACE + ".atable (pk,v) VALUES (1, 'foo')"), Collections.singletonList(Collections.<ByteBuffer>emptyList()), QueryOptions.DEFAULT)-->Line_51 $$ client.execute(batchMessage)[ FD ]
Line_11 $$ Map<String, ByteBuffer> reqMap-->Line_14 $$ reqMap = Collections.singletonMap("foo", bytes(42))[ FD ]
Line_25 $$ reqMap = Collections.singletonMap("foo", bytes(43))-->Line_27 $$ prepareMessage.setCustomPayload(reqMap)[ FD ]
Line_13 $$ PrepareMessage prepareMessage = new PrepareMessage("SELECT * FROM " + KEYSPACE + ".atable")-->Line_27 $$ prepareMessage.setCustomPayload(reqMap)[ FD ]
Line_47 $$ reqMap = Collections.singletonMap("foo", bytes(45))-->Line_49 $$ batchMessage.setCustomPayload(reqMap)[ FD ]
Line_8 $$ SimpleClient client = new SimpleClient(nativeAddr.getHostAddress(), nativePort, Server.VERSION_3)-->Line_51 $$ client.execute(batchMessage)[ FD ]
Line_11 $$ Map<String, ByteBuffer> reqMap-->Line_25 $$ reqMap = Collections.singletonMap("foo", bytes(43))[ FD ]
