Line_14 $$ final PsiElement resolve = ((PsiReferenceExpression) expression).resolve()-->Line_15 $$ if (resolve instanceof PsiVariable) [ FD ]
Line_6 $$ List<IntentionAction> result = new ArrayList<IntentionAction>()-->Line_16 $$ result.addAll(HighlightUtil.getChangeVariableTypeFixes((PsiVariable) resolve, parameterType))[ FD ]
Line_2 $$ private static List<IntentionAction> getParameterTypeChangeFixes(@NotNull PsiMethod method, @NotNull PsiExpression expression, PsiType parameterType) -->Line_19 $$ return result[ CD ]
Line_2 $$ private static List<IntentionAction> getParameterTypeChangeFixes(@NotNull PsiMethod method, @NotNull PsiExpression expression, PsiType parameterType) -->Line_9 $$ final PsiMethod[] superMethods = method.findDeepestSuperMethods()[ FD ]
Line_2 $$ private static List<IntentionAction> getParameterTypeChangeFixes(@NotNull PsiMethod method, @NotNull PsiExpression expression, PsiType parameterType) -->Line_7 $$ final PsiManager manager = method.getManager()[ FD ]
Line_3 $$ if (!(expression instanceof PsiReferenceExpression)) -->Line_4 $$ return Collections.emptyList()[ CD ]
Line_2 $$ private static List<IntentionAction> getParameterTypeChangeFixes(@NotNull PsiMethod method, @NotNull PsiExpression expression, PsiType parameterType) -->Line_6 $$ List<IntentionAction> result = new ArrayList<IntentionAction>()[ CD ]
Line_2 $$ private static List<IntentionAction> getParameterTypeChangeFixes(@NotNull PsiMethod method, @NotNull PsiExpression expression, PsiType parameterType) -->Line_16 $$ result.addAll(HighlightUtil.getChangeVariableTypeFixes((PsiVariable) resolve, parameterType))[ FD ]
Line_2 $$ private static List<IntentionAction> getParameterTypeChangeFixes(@NotNull PsiMethod method, @NotNull PsiExpression expression, PsiType parameterType) -->Line_8 $$ if (manager.isInProject(method)) [ CD ]
Line_8 $$ if (manager.isInProject(method)) -->Line_15 $$ if (resolve instanceof PsiVariable) [ CD ]
Line_8 $$ if (manager.isInProject(method)) -->Line_14 $$ final PsiElement resolve = ((PsiReferenceExpression) expression).resolve()[ CD ]
Line_11 $$ if (!manager.isInProject(superMethod))-->Line_12 $$ return Collections.emptyList()[ CD ]
Line_7 $$ final PsiManager manager = method.getManager()-->Line_11 $$ if (!manager.isInProject(superMethod))[ FD ]
Line_2 $$ private static List<IntentionAction> getParameterTypeChangeFixes(@NotNull PsiMethod method, @NotNull PsiExpression expression, PsiType parameterType) -->Line_3 $$ if (!(expression instanceof PsiReferenceExpression)) [ CD ]
Line_15 $$ if (resolve instanceof PsiVariable) -->Line_16 $$ result.addAll(HighlightUtil.getChangeVariableTypeFixes((PsiVariable) resolve, parameterType))[ CD ]
Line_7 $$ final PsiManager manager = method.getManager()-->Line_8 $$ if (manager.isInProject(method)) [ FD ]
Line_8 $$ if (manager.isInProject(method)) -->Line_9 $$ final PsiMethod[] superMethods = method.findDeepestSuperMethods()[ CD ]
Line_10 $$ for (PsiMethod superMethod : superMethods) -->Line_11 $$ if (!manager.isInProject(superMethod))[ FD ]
Line_2 $$ private static List<IntentionAction> getParameterTypeChangeFixes(@NotNull PsiMethod method, @NotNull PsiExpression expression, PsiType parameterType) -->Line_8 $$ if (manager.isInProject(method)) [ FD ]
Line_2 $$ private static List<IntentionAction> getParameterTypeChangeFixes(@NotNull PsiMethod method, @NotNull PsiExpression expression, PsiType parameterType) -->Line_7 $$ final PsiManager manager = method.getManager()[ CD ]
