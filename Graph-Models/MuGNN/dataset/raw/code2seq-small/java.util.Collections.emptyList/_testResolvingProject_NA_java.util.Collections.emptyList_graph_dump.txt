Line_2 $$ public void _testResolvingProject() throws Exception -->Line_9 $$ assertNotNull(project)[ CD ]
Line_2 $$ public void _testResolvingProject() throws Exception -->Line_8 $$ MavenModel project = result.projectData.mavenModel[ CD ]
Line_2 $$ public void _testResolvingProject() throws Exception -->Line_10 $$ assertEquals("project", project.getMavenId().getArtifactId())[ CD ]
Line_2 $$ public void _testResolvingProject() throws Exception -->Line_11 $$ assertEquals(1, project.getDependencies().size())[ CD ]
Line_8 $$ MavenModel project = result.projectData.mavenModel-->Line_10 $$ assertEquals("project", project.getMavenId().getArtifactId())[ FD ]
Line_8 $$ MavenModel project = result.projectData.mavenModel-->Line_9 $$ assertNotNull(project)[ FD ]
Line_2 $$ public void _testResolvingProject() throws Exception -->Line_5 $$ MavenServerExecutionResult result = myEmbedder.resolveProject(myProjectPom, Collections.<String>emptyList(), Collections.<String>emptyList())[ CD ]
Line_8 $$ MavenModel project = result.projectData.mavenModel-->Line_11 $$ assertEquals(1, project.getDependencies().size())[ FD ]
Line_2 $$ public void _testResolvingProject() throws Exception -->Line_4 $$ myEmbedder.customizeForResolve(new SoutMavenConsole(), EMPTY_MAVEN_PROCESS)[ CD ]
Line_2 $$ public void _testResolvingProject() throws Exception -->Line_3 $$ createProjectPom("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>" + "<dependencies>" + "  <dependency>" + "    <groupId>junit</groupId>" + "    <artifactId>junit</artifactId>" + "    <version>4.0</version>" + "  </dependency>" + "</dependencies>")[ CD ]
Line_2 $$ public void _testResolvingProject() throws Exception -->Line_7 $$ assertOrderedElementsAreEqual(result.unresolvedArtifacts)[ CD ]
Line_2 $$ public void _testResolvingProject() throws Exception -->Line_6 $$ assertNotNull(result.projectData)[ CD ]
