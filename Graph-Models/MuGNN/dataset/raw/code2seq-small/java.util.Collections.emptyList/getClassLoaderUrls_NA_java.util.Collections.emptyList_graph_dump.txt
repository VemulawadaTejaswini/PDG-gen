Line_2 $$ private static Collection<URL> getClassLoaderUrls() -->Line_3 $$ Collection<URL> urls = null[ CD ]
Line_13 $$ if (urls == null && classLoader instanceof URLClassLoader) -->Line_14 $$ urls = Arrays.asList(((URLClassLoader) classLoader).getURLs())[ CD ]
Line_14 $$ urls = Arrays.asList(((URLClassLoader) classLoader).getURLs())-->Line_16 $$ return urls == null ? Collections.<URL>emptyList() : getClassLoaderUrls(urls)[ FD ]
Line_2 $$ private static Collection<URL> getClassLoaderUrls() -->Line_5 $$ final Class<? extends ClassLoader> aClass = classLoader.getClass()[ CD ]
Line_2 $$ private static Collection<URL> getClassLoaderUrls() -->Line_16 $$ return urls == null ? Collections.<URL>emptyList() : getClassLoaderUrls(urls)[ CD ]
Line_3 $$ Collection<URL> urls = null-->Line_14 $$ urls = Arrays.asList(((URLClassLoader) classLoader).getURLs())[ FD ]
Line_4 $$ final ClassLoader classLoader = PluginManagerCore.class.getClassLoader()-->Line_5 $$ final Class<? extends ClassLoader> aClass = classLoader.getClass()[ FD ]
Line_2 $$ private static Collection<URL> getClassLoaderUrls() -->Line_13 $$ if (urls == null && classLoader instanceof URLClassLoader) [ CD ]
Line_2 $$ private static Collection<URL> getClassLoaderUrls() -->Line_4 $$ final ClassLoader classLoader = PluginManagerCore.class.getClassLoader()[ CD ]
Line_3 $$ Collection<URL> urls = null-->Line_16 $$ return urls == null ? Collections.<URL>emptyList() : getClassLoaderUrls(urls)[ FD ]
