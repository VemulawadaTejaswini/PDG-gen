Line_2 $$ public Iterator iterate(QueryParameters queryParameters, EventSource session) throws HibernateException -->Line_3 $$ checkQuery(queryParameters)[ CD ]
Line_17 $$ if (stats) -->Line_18 $$ final long endTime = System.nanoTime()[ CD ]
Line_6 $$ if (stats) -->Line_7 $$ startTime = System.nanoTime()[ CD ]
Line_17 $$ if (stats) -->Line_20 $$ session.getFactory().getStatisticsImplementor().queryExecuted(getQueryIdentifier(), 0, milliseconds)[ CD ]
Line_5 $$ long startTime = 0-->Line_7 $$ startTime = System.nanoTime()[ FD ]
Line_13 $$ final SqlStatementWrapper wrapper = executeQueryStatement(queryParameters, false, Collections.<AfterLoadAction>emptyList(), session)-->Line_15 $$ final PreparedStatement st = (PreparedStatement) wrapper.getStatement()[ FD ]
Line_2 $$ public Iterator iterate(QueryParameters queryParameters, EventSource session) throws HibernateException -->Line_5 $$ long startTime = 0[ CD ]
Line_2 $$ public Iterator iterate(QueryParameters queryParameters, EventSource session) throws HibernateException -->Line_4 $$ final boolean stats = session.getFactory().getStatistics().isStatisticsEnabled()[ FD ]
Line_2 $$ public Iterator iterate(QueryParameters queryParameters, EventSource session) throws HibernateException -->Line_20 $$ session.getFactory().getStatisticsImplementor().queryExecuted(getQueryIdentifier(), 0, milliseconds)[ FD ]
Line_13 $$ final SqlStatementWrapper wrapper = executeQueryStatement(queryParameters, false, Collections.<AfterLoadAction>emptyList(), session)-->Line_14 $$ final ResultSet rs = wrapper.getResultSet()[ FD ]
Line_17 $$ if (stats) -->Line_19 $$ final long milliseconds = TimeUnit.MILLISECONDS.convert(endTime - startTime, TimeUnit.NANOSECONDS)[ CD ]
Line_2 $$ public Iterator iterate(QueryParameters queryParameters, EventSource session) throws HibernateException -->Line_6 $$ if (stats) [ CD ]
Line_2 $$ public Iterator iterate(QueryParameters queryParameters, EventSource session) throws HibernateException -->Line_13 $$ final SqlStatementWrapper wrapper = executeQueryStatement(queryParameters, false, Collections.<AfterLoadAction>emptyList(), session)[ FD ]
Line_2 $$ public Iterator iterate(QueryParameters queryParameters, EventSource session) throws HibernateException -->Line_10 $$ if (queryParameters.isCallable()) [ FD ]
Line_2 $$ public Iterator iterate(QueryParameters queryParameters, EventSource session) throws HibernateException -->Line_4 $$ final boolean stats = session.getFactory().getStatistics().isStatisticsEnabled()[ CD ]
Line_2 $$ public Iterator iterate(QueryParameters queryParameters, EventSource session) throws HibernateException -->Line_3 $$ checkQuery(queryParameters)[ FD ]
Line_2 $$ public Iterator iterate(QueryParameters queryParameters, EventSource session) throws HibernateException -->Line_16 $$ final Iterator result = new IteratorImpl(rs, st, session, queryParameters.isReadOnly(session), queryReturnTypes, queryTranslator.getColumnNames(), buildHolderInstantiator(queryParameters.getResultTransformer()))[ FD ]
Line_19 $$ final long milliseconds = TimeUnit.MILLISECONDS.convert(endTime - startTime, TimeUnit.NANOSECONDS)-->Line_20 $$ session.getFactory().getStatisticsImplementor().queryExecuted(getQueryIdentifier(), 0, milliseconds)[ FD ]
