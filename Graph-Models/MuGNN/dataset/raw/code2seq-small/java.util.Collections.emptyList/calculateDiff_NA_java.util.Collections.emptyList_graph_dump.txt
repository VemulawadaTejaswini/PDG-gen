Line_14 $$ for (Iterator<LineFragment> iterator = lineFragments.iterator(); iterator.hasNext(); ) -->Line_17 $$ fragment.highlight(fragmentHighlighter)[ CD ]
Line_13 $$ final FragmentHighlighterImpl fragmentHighlighter = new FragmentHighlighterImpl(myOldMarkup, myNewMarkup)-->Line_17 $$ fragment.highlight(fragmentHighlighter)[ FD ]
Line_2 $$ public Collection<TextRange> calculateDiff(@NotNull final Document beforeDocument, @NotNull final Document currentDocument) -->Line_13 $$ final FragmentHighlighterImpl fragmentHighlighter = new FragmentHighlighterImpl(myOldMarkup, myNewMarkup)[ CD ]
Line_14 $$ for (Iterator<LineFragment> iterator = lineFragments.iterator(); iterator.hasNext(); ) -->Line_16 $$ fragmentHighlighter.setIsLast(!iterator.hasNext())[ CD ]
Line_2 $$ public Collection<TextRange> calculateDiff(@NotNull final Document beforeDocument, @NotNull final Document currentDocument) -->Line_8 $$ lineFragments = myCompareProcessor.process(beforeDocument.getText(), currentDocument.getText())[ FD ]
Line_2 $$ public Collection<TextRange> calculateDiff(@NotNull final Document beforeDocument, @NotNull final Document currentDocument) -->Line_3 $$ myNewMarkup.ranges.clear()[ CD ]
Line_6 $$ List<LineFragment> lineFragments-->Line_8 $$ lineFragments = myCompareProcessor.process(beforeDocument.getText(), currentDocument.getText())[ FD ]
Line_13 $$ final FragmentHighlighterImpl fragmentHighlighter = new FragmentHighlighterImpl(myOldMarkup, myNewMarkup)-->Line_16 $$ fragmentHighlighter.setIsLast(!iterator.hasNext())[ FD ]
Line_2 $$ public Collection<TextRange> calculateDiff(@NotNull final Document beforeDocument, @NotNull final Document currentDocument) -->Line_19 $$ return new ArrayList<TextRange>(myNewMarkup.ranges)[ CD ]
Line_8 $$ lineFragments = myCompareProcessor.process(beforeDocument.getText(), currentDocument.getText())-->Line_14 $$ for (Iterator<LineFragment> iterator = lineFragments.iterator(); iterator.hasNext(); ) [ FD ]
Line_14 $$ for (Iterator<LineFragment> iterator = lineFragments.iterator(); iterator.hasNext(); ) -->Line_15 $$ LineFragment fragment = iterator.next()[ FD ]
Line_2 $$ public Collection<TextRange> calculateDiff(@NotNull final Document beforeDocument, @NotNull final Document currentDocument) -->Line_6 $$ List<LineFragment> lineFragments[ CD ]
Line_6 $$ List<LineFragment> lineFragments-->Line_14 $$ for (Iterator<LineFragment> iterator = lineFragments.iterator(); iterator.hasNext(); ) [ FD ]
Line_14 $$ for (Iterator<LineFragment> iterator = lineFragments.iterator(); iterator.hasNext(); ) -->Line_16 $$ fragmentHighlighter.setIsLast(!iterator.hasNext())[ FD ]
Line_14 $$ for (Iterator<LineFragment> iterator = lineFragments.iterator(); iterator.hasNext(); ) -->Line_15 $$ LineFragment fragment = iterator.next()[ CD ]
Line_2 $$ public Collection<TextRange> calculateDiff(@NotNull final Document beforeDocument, @NotNull final Document currentDocument) -->Line_14 $$ for (Iterator<LineFragment> iterator = lineFragments.iterator(); iterator.hasNext(); ) [ CD ]
Line_15 $$ LineFragment fragment = iterator.next()-->Line_17 $$ fragment.highlight(fragmentHighlighter)[ FD ]
