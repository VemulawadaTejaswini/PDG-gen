Line_7 $$ TaskProjectConfiguration state = configuration.getState()-->Line_10 $$ Element element = XmlSerializer.serialize(state)[ FD ]
Line_2 $$ public void testSharedServers() throws Exception -->Line_11 $$ configuration.servers.clear()[ CD ]
Line_10 $$ Element element = XmlSerializer.serialize(state)-->Line_13 $$ configuration.loadState(XmlSerializer.deserialize(element, TaskProjectConfiguration.class))[ FD ]
Line_2 $$ public void testSharedServers() throws Exception -->Line_9 $$ assertEquals(1, state.servers.size())[ CD ]
Line_6 $$ TaskProjectConfiguration configuration = ServiceManager.getService(getProject(), TaskProjectConfiguration.class)-->Line_13 $$ configuration.loadState(XmlSerializer.deserialize(element, TaskProjectConfiguration.class))[ FD ]
Line_2 $$ public void testSharedServers() throws Exception -->Line_14 $$ assertEquals(1, state.servers.size())[ CD ]
Line_3 $$ TaskRepository repository = new YouTrackRepository(new YouTrackRepositoryType())-->Line_5 $$ ((TaskManagerImpl) myTaskManager).setRepositories(Collections.singletonList(repository))[ FD ]
Line_2 $$ public void testSharedServers() throws Exception -->Line_16 $$ TaskRepository[] repositories = myTaskManager.getAllRepositories()[ CD ]
Line_2 $$ public void testSharedServers() throws Exception -->Line_10 $$ Element element = XmlSerializer.serialize(state)[ CD ]
Line_2 $$ public void testSharedServers() throws Exception -->Line_18 $$ assertTrue(repositories[0].isShared())[ CD ]
Line_2 $$ public void testSharedServers() throws Exception -->Line_3 $$ TaskRepository repository = new YouTrackRepository(new YouTrackRepositoryType())[ CD ]
Line_2 $$ public void testSharedServers() throws Exception -->Line_12 $$ ((TaskManagerImpl) myTaskManager).setRepositories(Collections.<TaskRepository>emptyList())[ CD ]
Line_2 $$ public void testSharedServers() throws Exception -->Line_17 $$ assertEquals(1, repositories.length)[ CD ]
Line_3 $$ TaskRepository repository = new YouTrackRepository(new YouTrackRepositoryType())-->Line_4 $$ repository.setShared(true)[ FD ]
Line_2 $$ public void testSharedServers() throws Exception -->Line_15 $$ ((TaskManagerImpl) myTaskManager).projectOpened()[ CD ]
Line_2 $$ public void testSharedServers() throws Exception -->Line_4 $$ repository.setShared(true)[ CD ]
Line_2 $$ public void testSharedServers() throws Exception -->Line_6 $$ TaskProjectConfiguration configuration = ServiceManager.getService(getProject(), TaskProjectConfiguration.class)[ CD ]
Line_2 $$ public void testSharedServers() throws Exception -->Line_13 $$ configuration.loadState(XmlSerializer.deserialize(element, TaskProjectConfiguration.class))[ CD ]
Line_6 $$ TaskProjectConfiguration configuration = ServiceManager.getService(getProject(), TaskProjectConfiguration.class)-->Line_7 $$ TaskProjectConfiguration state = configuration.getState()[ FD ]
Line_2 $$ public void testSharedServers() throws Exception -->Line_8 $$ assertNotNull(state)[ CD ]
Line_2 $$ public void testSharedServers() throws Exception -->Line_5 $$ ((TaskManagerImpl) myTaskManager).setRepositories(Collections.singletonList(repository))[ CD ]
Line_2 $$ public void testSharedServers() throws Exception -->Line_7 $$ TaskProjectConfiguration state = configuration.getState()[ CD ]
Line_7 $$ TaskProjectConfiguration state = configuration.getState()-->Line_8 $$ assertNotNull(state)[ FD ]
