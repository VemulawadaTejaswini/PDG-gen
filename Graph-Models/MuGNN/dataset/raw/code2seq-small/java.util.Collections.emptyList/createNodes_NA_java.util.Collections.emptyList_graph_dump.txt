Line_28 $$ if (pane != null && pane.getSelectedDescriptor() != null && pane.getSelectedDescriptor().getElement() instanceof AbstractTreeNode) -->Line_33 $$ if (abstractTreeNode != null) [ CD ]
Line_31 $$ abstractTreeNode = abstractTreeNode.getParent()-->Line_30 $$ while (abstractTreeNode != null && !(abstractTreeNode.getParent() instanceof AbstractModuleNode)) [ FD ]
Line_16 $$ AbstractProjectViewPane pane = ProjectView.getInstance(project).getProjectViewPaneById(currentViewId)-->Line_29 $$ AbstractTreeNode abstractTreeNode = ((AbstractTreeNode) pane.getSelectedDescriptor().getElement())[ FD ]
Line_45 $$ element = psiManager.findDirectory(vFile)-->Line_46 $$ addPsiElementNode(element, project, result, favoritesConfig)[ FD ]
Line_6 $$ ArrayList<AbstractTreeNode> result = new ArrayList<AbstractTreeNode>()-->Line_69 $$ result.add(new ProjectViewModuleNode(project, module1, favoritesConfig))[ FD ]
Line_9 $$ if (treeNode != null) -->Line_11 $$ return result[ CD ]
Line_30 $$ while (abstractTreeNode != null && !(abstractTreeNode.getParent() instanceof AbstractModuleNode)) -->Line_31 $$ abstractTreeNode = abstractTreeNode.getParent()[ CD ]
Line_42 $$ for (VirtualFile vFile : (VirtualFile[]) object) -->Line_43 $$ PsiElement element = psiManager.findFile(vFile)[ FD ]
Line_6 $$ ArrayList<AbstractTreeNode> result = new ArrayList<AbstractTreeNode>()-->Line_83 $$ result.add(new NamedLibraryElementNode(project, namedLibrary, favoritesConfig))[ FD ]
Line_41 $$ if (object instanceof VirtualFile[]) -->Line_48 $$ return result[ CD ]
Line_14 $$ final PsiManager psiManager = PsiManager.getInstance(project)-->Line_43 $$ PsiElement element = psiManager.findFile(vFile)[ FD ]
Line_29 $$ AbstractTreeNode abstractTreeNode = ((AbstractTreeNode) pane.getSelectedDescriptor().getElement())-->Line_30 $$ while (abstractTreeNode != null && !(abstractTreeNode.getParent() instanceof AbstractModuleNode)) [ FD ]
Line_27 $$ if (inProjectView && ProjectView.getInstance(project).isShowModules(currentViewId)) -->Line_28 $$ if (pane != null && pane.getSelectedDescriptor() != null && pane.getSelectedDescriptor().getElement() instanceof AbstractTreeNode) [ CD ]
Line_43 $$ PsiElement element = psiManager.findFile(vFile)-->Line_44 $$ if (element == null)[ FD ]
Line_67 $$ if (object instanceof Module[]) -->Line_71 $$ return result[ CD ]
Line_6 $$ ArrayList<AbstractTreeNode> result = new ArrayList<AbstractTreeNode>()-->Line_46 $$ addPsiElementNode(element, project, result, favoritesConfig)[ FD ]
Line_6 $$ ArrayList<AbstractTreeNode> result = new ArrayList<AbstractTreeNode>()-->Line_54 $$ addPsiElementNode(psiFile, project, result, favoritesConfig)[ FD ]
Line_19 $$ for (PsiElement psiElement : (PsiElement[]) object) -->Line_20 $$ addPsiElementNode(psiElement, project, result, favoritesConfig)[ FD ]
Line_15 $$ final String currentViewId = ProjectView.getInstance(project).getCurrentViewId()-->Line_27 $$ if (inProjectView && ProjectView.getInstance(project).isShowModules(currentViewId)) [ FD ]
Line_8 $$ final AbstractTreeNode treeNode = provider.createNode(project, object, favoritesConfig)-->Line_9 $$ if (treeNode != null) [ FD ]
Line_6 $$ ArrayList<AbstractTreeNode> result = new ArrayList<AbstractTreeNode>()-->Line_10 $$ result.add(treeNode)[ FD ]
Line_44 $$ if (element == null)-->Line_45 $$ element = psiManager.findDirectory(vFile)[ CD ]
Line_15 $$ final String currentViewId = ProjectView.getInstance(project).getCurrentViewId()-->Line_16 $$ AbstractProjectViewPane pane = ProjectView.getInstance(project).getProjectViewPaneById(currentViewId)[ FD ]
Line_6 $$ ArrayList<AbstractTreeNode> result = new ArrayList<AbstractTreeNode>()-->Line_76 $$ result.add(new LibraryGroupNode(project, libraryGroup, favoritesConfig))[ FD ]
Line_66 $$ object = new Module[] -->Line_67 $$ if (object instanceof Module[]) [ FD ]
Line_14 $$ final PsiManager psiManager = PsiManager.getInstance(project)-->Line_45 $$ element = psiManager.findDirectory(vFile)[ FD ]
Line_9 $$ if (treeNode != null) -->Line_10 $$ result.add(treeNode)[ CD ]
Line_6 $$ ArrayList<AbstractTreeNode> result = new ArrayList<AbstractTreeNode>()-->Line_20 $$ addPsiElementNode(psiElement, project, result, favoritesConfig)[ FD ]
Line_28 $$ if (pane != null && pane.getSelectedDescriptor() != null && pane.getSelectedDescriptor().getElement() instanceof AbstractTreeNode) -->Line_30 $$ while (abstractTreeNode != null && !(abstractTreeNode.getParent() instanceof AbstractModuleNode)) [ CD ]
Line_26 $$ Module containingModule = null-->Line_34 $$ containingModule = ((AbstractModuleNode) abstractTreeNode.getParent()).getValue()[ FD ]
Line_42 $$ for (VirtualFile vFile : (VirtualFile[]) object) -->Line_53 $$ final PsiFile psiFile = psiManager.findFile(vFile)[ FD ]
Line_6 $$ ArrayList<AbstractTreeNode> result = new ArrayList<AbstractTreeNode>()-->Line_60 $$ result.add(new ProjectViewModuleGroupNode(project, moduleGroup, favoritesConfig))[ FD ]
Line_29 $$ AbstractTreeNode abstractTreeNode = ((AbstractTreeNode) pane.getSelectedDescriptor().getElement())-->Line_31 $$ abstractTreeNode = abstractTreeNode.getParent()[ FD ]
Line_29 $$ AbstractTreeNode abstractTreeNode = ((AbstractTreeNode) pane.getSelectedDescriptor().getElement())-->Line_33 $$ if (abstractTreeNode != null) [ FD ]
Line_31 $$ abstractTreeNode = abstractTreeNode.getParent()-->Line_34 $$ containingModule = ((AbstractModuleNode) abstractTreeNode.getParent()).getValue()[ FD ]
Line_7 $$ for (FavoriteNodeProvider provider : Extensions.getExtensions(FavoriteNodeProvider.EP_NAME, project)) -->Line_8 $$ final AbstractTreeNode treeNode = provider.createNode(project, object, favoritesConfig)[ FD ]
Line_28 $$ if (pane != null && pane.getSelectedDescriptor() != null && pane.getSelectedDescriptor().getElement() instanceof AbstractTreeNode) -->Line_29 $$ AbstractTreeNode abstractTreeNode = ((AbstractTreeNode) pane.getSelectedDescriptor().getElement())[ CD ]
Line_8 $$ final AbstractTreeNode treeNode = provider.createNode(project, object, favoritesConfig)-->Line_10 $$ result.add(treeNode)[ FD ]
Line_53 $$ final PsiFile psiFile = psiManager.findFile(vFile)-->Line_54 $$ addPsiElementNode(psiFile, project, result, favoritesConfig)[ FD ]
Line_43 $$ PsiElement element = psiManager.findFile(vFile)-->Line_45 $$ element = psiManager.findDirectory(vFile)[ FD ]
Line_33 $$ if (abstractTreeNode != null) -->Line_34 $$ containingModule = ((AbstractModuleNode) abstractTreeNode.getParent()).getValue()[ CD ]
Line_16 $$ AbstractProjectViewPane pane = ProjectView.getInstance(project).getProjectViewPaneById(currentViewId)-->Line_28 $$ if (pane != null && pane.getSelectedDescriptor() != null && pane.getSelectedDescriptor().getElement() instanceof AbstractTreeNode) [ FD ]
Line_42 $$ for (VirtualFile vFile : (VirtualFile[]) object) -->Line_45 $$ element = psiManager.findDirectory(vFile)[ FD ]
Line_43 $$ PsiElement element = psiManager.findFile(vFile)-->Line_46 $$ addPsiElementNode(element, project, result, favoritesConfig)[ FD ]
Line_14 $$ final PsiManager psiManager = PsiManager.getInstance(project)-->Line_53 $$ final PsiFile psiFile = psiManager.findFile(vFile)[ FD ]
Line_6 $$ ArrayList<AbstractTreeNode> result = new ArrayList<AbstractTreeNode>()-->Line_38 $$ addPsiElementNode((PsiElement) object, project, result, favoritesConfig)[ FD ]
Line_29 $$ AbstractTreeNode abstractTreeNode = ((AbstractTreeNode) pane.getSelectedDescriptor().getElement())-->Line_34 $$ containingModule = ((AbstractModuleNode) abstractTreeNode.getParent()).getValue()[ FD ]
Line_4 $$ if (project == null)-->Line_5 $$ return Collections.emptyList()[ CD ]
Line_31 $$ abstractTreeNode = abstractTreeNode.getParent()-->Line_33 $$ if (abstractTreeNode != null) [ FD ]
