Line_4 $$ String xml = HttpUtil.URLtoString(servletContext.getResource("/WEB-INF/liferay-portlet.xml"))-->Line_9 $$ Document document = UnsecureSAXReaderUtil.read(xml, true)[ FD ]
Line_19 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_29 $$ propertiesList.add(properties)[ FD ]
Line_12 $$ while (iterator.hasNext()) -->Line_23 $$ properties.put("panel.category.key", controlPanelEntryCategory)[ CD ]
Line_2 $$ protected List<Dictionary<String, Object>> getPropertiesList(HotDeployEvent hotDeployEvent) throws DocumentException, IOException -->Line_10 $$ Element rootElement = document.getRootElement()[ CD ]
Line_11 $$ Iterator<Element> iterator = rootElement.elementIterator("portlet")-->Line_12 $$ while (iterator.hasNext()) [ FD ]
Line_2 $$ protected List<Dictionary<String, Object>> getPropertiesList(HotDeployEvent hotDeployEvent) throws DocumentException, IOException -->Line_3 $$ ServletContext servletContext = hotDeployEvent.getServletContext()[ CD ]
Line_2 $$ protected List<Dictionary<String, Object>> getPropertiesList(HotDeployEvent hotDeployEvent) throws DocumentException, IOException -->Line_3 $$ ServletContext servletContext = hotDeployEvent.getServletContext()[ FD ]
Line_19 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_23 $$ properties.put("panel.category.key", controlPanelEntryCategory)[ FD ]
Line_2 $$ protected List<Dictionary<String, Object>> getPropertiesList(HotDeployEvent hotDeployEvent) throws DocumentException, IOException -->Line_8 $$ List<Dictionary<String, Object>> propertiesList = new ArrayList()[ CD ]
Line_11 $$ Iterator<Element> iterator = rootElement.elementIterator("portlet")-->Line_13 $$ Element portletElement = iterator.next()[ FD ]
Line_25 $$ if (Validator.isNotNull(controlPanelEntryWeight)) -->Line_26 $$ int serviceRanking = (int) Math.ceil(GetterUtil.getDouble(controlPanelEntryWeight) * 100)[ CD ]
Line_19 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_27 $$ properties.put("service.ranking", serviceRanking)[ FD ]
Line_25 $$ if (Validator.isNotNull(controlPanelEntryWeight)) -->Line_27 $$ properties.put("service.ranking", serviceRanking)[ CD ]
Line_5 $$ if (xml == null) -->Line_6 $$ return Collections.emptyList()[ CD ]
Line_4 $$ String xml = HttpUtil.URLtoString(servletContext.getResource("/WEB-INF/liferay-portlet.xml"))-->Line_5 $$ if (xml == null) [ FD ]
Line_12 $$ while (iterator.hasNext()) -->Line_18 $$ controlPanelEntryCategory = PortletCategoryUtil.getPortletCategoryKey(controlPanelEntryCategory)[ CD ]
Line_19 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_22 $$ properties.put("panel.app.portlet.id", portletId)[ FD ]
Line_12 $$ while (iterator.hasNext()) -->Line_15 $$ if (Validator.isNull(controlPanelEntryCategory)) [ CD ]
Line_2 $$ protected List<Dictionary<String, Object>> getPropertiesList(HotDeployEvent hotDeployEvent) throws DocumentException, IOException -->Line_21 $$ String portletId = getPortletId(hotDeployEvent.getServletContextName(), portletName)[ FD ]
Line_18 $$ controlPanelEntryCategory = PortletCategoryUtil.getPortletCategoryKey(controlPanelEntryCategory)-->Line_23 $$ properties.put("panel.category.key", controlPanelEntryCategory)[ FD ]
Line_10 $$ Element rootElement = document.getRootElement()-->Line_11 $$ Iterator<Element> iterator = rootElement.elementIterator("portlet")[ FD ]
Line_20 $$ String portletName = portletElement.elementText("portlet-name")-->Line_21 $$ String portletId = getPortletId(hotDeployEvent.getServletContextName(), portletName)[ FD ]
Line_14 $$ String controlPanelEntryCategory = portletElement.elementText("control-panel-entry-category")-->Line_23 $$ properties.put("panel.category.key", controlPanelEntryCategory)[ FD ]
Line_12 $$ while (iterator.hasNext()) -->Line_29 $$ propertiesList.add(properties)[ CD ]
Line_26 $$ int serviceRanking = (int) Math.ceil(GetterUtil.getDouble(controlPanelEntryWeight) * 100)-->Line_27 $$ properties.put("service.ranking", serviceRanking)[ FD ]
Line_12 $$ while (iterator.hasNext()) -->Line_14 $$ String controlPanelEntryCategory = portletElement.elementText("control-panel-entry-category")[ CD ]
Line_14 $$ String controlPanelEntryCategory = portletElement.elementText("control-panel-entry-category")-->Line_18 $$ controlPanelEntryCategory = PortletCategoryUtil.getPortletCategoryKey(controlPanelEntryCategory)[ FD ]
Line_12 $$ while (iterator.hasNext()) -->Line_13 $$ Element portletElement = iterator.next()[ CD ]
Line_2 $$ protected List<Dictionary<String, Object>> getPropertiesList(HotDeployEvent hotDeployEvent) throws DocumentException, IOException -->Line_4 $$ String xml = HttpUtil.URLtoString(servletContext.getResource("/WEB-INF/liferay-portlet.xml"))[ CD ]
Line_12 $$ while (iterator.hasNext()) -->Line_20 $$ String portletName = portletElement.elementText("portlet-name")[ CD ]
Line_2 $$ protected List<Dictionary<String, Object>> getPropertiesList(HotDeployEvent hotDeployEvent) throws DocumentException, IOException -->Line_31 $$ return propertiesList[ CD ]
Line_13 $$ Element portletElement = iterator.next()-->Line_20 $$ String portletName = portletElement.elementText("portlet-name")[ FD ]
Line_12 $$ while (iterator.hasNext()) -->Line_24 $$ String controlPanelEntryWeight = portletElement.elementText("control-panel-entry-weight")[ CD ]
Line_14 $$ String controlPanelEntryCategory = portletElement.elementText("control-panel-entry-category")-->Line_15 $$ if (Validator.isNull(controlPanelEntryCategory)) [ FD ]
Line_18 $$ controlPanelEntryCategory = PortletCategoryUtil.getPortletCategoryKey(controlPanelEntryCategory)-->Line_15 $$ if (Validator.isNull(controlPanelEntryCategory)) [ FD ]
Line_2 $$ protected List<Dictionary<String, Object>> getPropertiesList(HotDeployEvent hotDeployEvent) throws DocumentException, IOException -->Line_5 $$ if (xml == null) [ CD ]
Line_9 $$ Document document = UnsecureSAXReaderUtil.read(xml, true)-->Line_10 $$ Element rootElement = document.getRootElement()[ FD ]
Line_8 $$ List<Dictionary<String, Object>> propertiesList = new ArrayList()-->Line_29 $$ propertiesList.add(properties)[ FD ]
Line_3 $$ ServletContext servletContext = hotDeployEvent.getServletContext()-->Line_4 $$ String xml = HttpUtil.URLtoString(servletContext.getResource("/WEB-INF/liferay-portlet.xml"))[ FD ]
Line_21 $$ String portletId = getPortletId(hotDeployEvent.getServletContextName(), portletName)-->Line_22 $$ properties.put("panel.app.portlet.id", portletId)[ FD ]
Line_2 $$ protected List<Dictionary<String, Object>> getPropertiesList(HotDeployEvent hotDeployEvent) throws DocumentException, IOException -->Line_9 $$ Document document = UnsecureSAXReaderUtil.read(xml, true)[ CD ]
Line_12 $$ while (iterator.hasNext()) -->Line_25 $$ if (Validator.isNotNull(controlPanelEntryWeight)) [ CD ]
Line_12 $$ while (iterator.hasNext()) -->Line_21 $$ String portletId = getPortletId(hotDeployEvent.getServletContextName(), portletName)[ CD ]
Line_24 $$ String controlPanelEntryWeight = portletElement.elementText("control-panel-entry-weight")-->Line_26 $$ int serviceRanking = (int) Math.ceil(GetterUtil.getDouble(controlPanelEntryWeight) * 100)[ FD ]
Line_24 $$ String controlPanelEntryWeight = portletElement.elementText("control-panel-entry-weight")-->Line_25 $$ if (Validator.isNotNull(controlPanelEntryWeight)) [ FD ]
Line_12 $$ while (iterator.hasNext()) -->Line_19 $$ Dictionary<String, Object> properties = new HashMapDictionary()[ CD ]
Line_12 $$ while (iterator.hasNext()) -->Line_22 $$ properties.put("panel.app.portlet.id", portletId)[ CD ]
Line_2 $$ protected List<Dictionary<String, Object>> getPropertiesList(HotDeployEvent hotDeployEvent) throws DocumentException, IOException -->Line_12 $$ while (iterator.hasNext()) [ CD ]
Line_13 $$ Element portletElement = iterator.next()-->Line_24 $$ String controlPanelEntryWeight = portletElement.elementText("control-panel-entry-weight")[ FD ]
Line_13 $$ Element portletElement = iterator.next()-->Line_14 $$ String controlPanelEntryCategory = portletElement.elementText("control-panel-entry-category")[ FD ]
Line_2 $$ protected List<Dictionary<String, Object>> getPropertiesList(HotDeployEvent hotDeployEvent) throws DocumentException, IOException -->Line_11 $$ Iterator<Element> iterator = rootElement.elementIterator("portlet")[ CD ]
