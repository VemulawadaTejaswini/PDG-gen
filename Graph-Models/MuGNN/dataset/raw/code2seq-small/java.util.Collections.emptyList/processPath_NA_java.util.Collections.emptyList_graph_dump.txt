Line_2 $$ protected void processPath(PathData item) throws IOException -->Line_3 $$ out.println("# file: " + item)[ CD ]
Line_2 $$ protected void processPath(PathData item) throws IOException -->Line_5 $$ out.println("# group: " + item.stat.getGroup())[ CD ]
Line_6 $$ FsPermission perm = item.stat.getPermission()-->Line_7 $$ if (perm.getStickyBit()) [ FD ]
Line_2 $$ protected void processPath(PathData item) throws IOException -->Line_10 $$ List<AclEntry> entries = perm.getAclBit() ? item.fs.getAclStatus(item.path).getEntries() : Collections.<AclEntry>emptyList()[ CD ]
Line_2 $$ protected void processPath(PathData item) throws IOException -->Line_12 $$ printAclEntriesForSingleScope(scopedEntries.getAccessEntries())[ CD ]
Line_2 $$ protected void processPath(PathData item) throws IOException -->Line_4 $$ out.println("# owner: " + item.stat.getOwner())[ CD ]
Line_6 $$ FsPermission perm = item.stat.getPermission()-->Line_10 $$ List<AclEntry> entries = perm.getAclBit() ? item.fs.getAclStatus(item.path).getEntries() : Collections.<AclEntry>emptyList()[ FD ]
Line_6 $$ FsPermission perm = item.stat.getPermission()-->Line_11 $$ ScopedAclEntries scopedEntries = new ScopedAclEntries(AclUtil.getAclFromPermAndEntries(perm, entries))[ FD ]
Line_11 $$ ScopedAclEntries scopedEntries = new ScopedAclEntries(AclUtil.getAclFromPermAndEntries(perm, entries))-->Line_13 $$ printAclEntriesForSingleScope(scopedEntries.getDefaultEntries())[ FD ]
Line_2 $$ protected void processPath(PathData item) throws IOException -->Line_7 $$ if (perm.getStickyBit()) [ CD ]
Line_7 $$ if (perm.getStickyBit()) -->Line_8 $$ out.println("# flags: --" + (perm.getOtherAction().implies(FsAction.EXECUTE) ? "t" : "T"))[ CD ]
Line_2 $$ protected void processPath(PathData item) throws IOException -->Line_14 $$ out.println()[ CD ]
Line_2 $$ protected void processPath(PathData item) throws IOException -->Line_6 $$ FsPermission perm = item.stat.getPermission()[ CD ]
Line_2 $$ protected void processPath(PathData item) throws IOException -->Line_13 $$ printAclEntriesForSingleScope(scopedEntries.getDefaultEntries())[ CD ]
Line_10 $$ List<AclEntry> entries = perm.getAclBit() ? item.fs.getAclStatus(item.path).getEntries() : Collections.<AclEntry>emptyList()-->Line_11 $$ ScopedAclEntries scopedEntries = new ScopedAclEntries(AclUtil.getAclFromPermAndEntries(perm, entries))[ FD ]
Line_11 $$ ScopedAclEntries scopedEntries = new ScopedAclEntries(AclUtil.getAclFromPermAndEntries(perm, entries))-->Line_12 $$ printAclEntriesForSingleScope(scopedEntries.getAccessEntries())[ FD ]
Line_6 $$ FsPermission perm = item.stat.getPermission()-->Line_8 $$ out.println("# flags: --" + (perm.getOtherAction().implies(FsAction.EXECUTE) ? "t" : "T"))[ FD ]
Line_2 $$ protected void processPath(PathData item) throws IOException -->Line_11 $$ ScopedAclEntries scopedEntries = new ScopedAclEntries(AclUtil.getAclFromPermAndEntries(perm, entries))[ CD ]
