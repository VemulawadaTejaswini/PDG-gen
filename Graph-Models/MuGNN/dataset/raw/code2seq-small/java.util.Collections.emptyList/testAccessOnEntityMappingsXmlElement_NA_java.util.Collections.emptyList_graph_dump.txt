Line_12 $$ factory = buildSessionFactory(classes, configFiles)-->Line_13 $$ assertAccessType(factory, classUnderTest, AccessType.PROPERTY)[ FD ]
Line_6 $$ List<String> configFiles = Collections.emptyList()-->Line_10 $$ configFiles = new ArrayList<String>()[ FD ]
Line_2 $$ public void testAccessOnEntityMappingsXmlElement() throws Exception -->Line_4 $$ List<Class<?>> classes = new ArrayList<Class<?>>()[ CD ]
Line_6 $$ List<String> configFiles = Collections.emptyList()-->Line_7 $$ SessionFactoryImplementor factory = buildSessionFactory(classes, configFiles)[ FD ]
Line_4 $$ List<Class<?>> classes = new ArrayList<Class<?>>()-->Line_7 $$ SessionFactoryImplementor factory = buildSessionFactory(classes, configFiles)[ FD ]
Line_2 $$ public void testAccessOnEntityMappingsXmlElement() throws Exception -->Line_6 $$ List<String> configFiles = Collections.emptyList()[ CD ]
Line_6 $$ List<String> configFiles = Collections.emptyList()-->Line_11 $$ configFiles.add("org/hibernate/test/annotations/access/xml/Tourist3.xml")[ FD ]
Line_7 $$ SessionFactoryImplementor factory = buildSessionFactory(classes, configFiles)-->Line_12 $$ factory = buildSessionFactory(classes, configFiles)[ FD ]
Line_6 $$ List<String> configFiles = Collections.emptyList()-->Line_12 $$ factory = buildSessionFactory(classes, configFiles)[ FD ]
Line_2 $$ public void testAccessOnEntityMappingsXmlElement() throws Exception -->Line_5 $$ classes.add(classUnderTest)[ CD ]
Line_3 $$ Class<?> classUnderTest = Tourist.class-->Line_5 $$ classes.add(classUnderTest)[ FD ]
Line_4 $$ List<Class<?>> classes = new ArrayList<Class<?>>()-->Line_12 $$ factory = buildSessionFactory(classes, configFiles)[ FD ]
Line_2 $$ public void testAccessOnEntityMappingsXmlElement() throws Exception -->Line_11 $$ configFiles.add("org/hibernate/test/annotations/access/xml/Tourist3.xml")[ CD ]
Line_2 $$ public void testAccessOnEntityMappingsXmlElement() throws Exception -->Line_9 $$ factory.close()[ CD ]
Line_2 $$ public void testAccessOnEntityMappingsXmlElement() throws Exception -->Line_13 $$ assertAccessType(factory, classUnderTest, AccessType.PROPERTY)[ CD ]
Line_12 $$ factory = buildSessionFactory(classes, configFiles)-->Line_14 $$ factory.close()[ FD ]
Line_2 $$ public void testAccessOnEntityMappingsXmlElement() throws Exception -->Line_7 $$ SessionFactoryImplementor factory = buildSessionFactory(classes, configFiles)[ CD ]
Line_3 $$ Class<?> classUnderTest = Tourist.class-->Line_8 $$ assertAccessType(factory, classUnderTest, AccessType.FIELD)[ FD ]
Line_10 $$ configFiles = new ArrayList<String>()-->Line_11 $$ configFiles.add("org/hibernate/test/annotations/access/xml/Tourist3.xml")[ FD ]
Line_7 $$ SessionFactoryImplementor factory = buildSessionFactory(classes, configFiles)-->Line_9 $$ factory.close()[ FD ]
Line_2 $$ public void testAccessOnEntityMappingsXmlElement() throws Exception -->Line_3 $$ Class<?> classUnderTest = Tourist.class[ CD ]
Line_2 $$ public void testAccessOnEntityMappingsXmlElement() throws Exception -->Line_8 $$ assertAccessType(factory, classUnderTest, AccessType.FIELD)[ CD ]
Line_2 $$ public void testAccessOnEntityMappingsXmlElement() throws Exception -->Line_10 $$ configFiles = new ArrayList<String>()[ CD ]
Line_7 $$ SessionFactoryImplementor factory = buildSessionFactory(classes, configFiles)-->Line_8 $$ assertAccessType(factory, classUnderTest, AccessType.FIELD)[ FD ]
Line_7 $$ SessionFactoryImplementor factory = buildSessionFactory(classes, configFiles)-->Line_13 $$ assertAccessType(factory, classUnderTest, AccessType.PROPERTY)[ FD ]
Line_3 $$ Class<?> classUnderTest = Tourist.class-->Line_13 $$ assertAccessType(factory, classUnderTest, AccessType.PROPERTY)[ FD ]
Line_10 $$ configFiles = new ArrayList<String>()-->Line_12 $$ factory = buildSessionFactory(classes, configFiles)[ FD ]
Line_4 $$ List<Class<?>> classes = new ArrayList<Class<?>>()-->Line_5 $$ classes.add(classUnderTest)[ FD ]
Line_2 $$ public void testAccessOnEntityMappingsXmlElement() throws Exception -->Line_14 $$ factory.close()[ CD ]
Line_2 $$ public void testAccessOnEntityMappingsXmlElement() throws Exception -->Line_12 $$ factory = buildSessionFactory(classes, configFiles)[ CD ]
Line_7 $$ SessionFactoryImplementor factory = buildSessionFactory(classes, configFiles)-->Line_14 $$ factory.close()[ FD ]
