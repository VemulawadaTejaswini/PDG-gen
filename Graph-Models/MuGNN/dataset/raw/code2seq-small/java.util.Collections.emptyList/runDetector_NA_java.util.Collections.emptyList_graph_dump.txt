Line_16 $$ if (LOG.isDebugEnabled()) -->Line_17 $$ LOG.debug("Detector '" + detector.getDetectorId() + "': " + acceptedFiles.size() + " accepted files, " + filesToProcess.size() + " files to process")[ CD ]
Line_2 $$ private List<? extends DetectedFrameworkDescription> runDetector(Integer detectorId, FileBasedIndex index, DetectionExcludesConfiguration excludesConfiguration, final boolean processNewFilesOnly) -->Line_10 $$ FrameworkDetector detector = FrameworkDetectorRegistry.getInstance().getDetectorById(detectorId)[ CD ]
Line_10 $$ FrameworkDetector detector = FrameworkDetectorRegistry.getInstance().getDetectorById(detectorId)-->Line_11 $$ if (detector == null) [ FD ]
Line_2 $$ private List<? extends DetectedFrameworkDescription> runDetector(Integer detectorId, FileBasedIndex index, DetectionExcludesConfiguration excludesConfiguration, final boolean processNewFilesOnly) -->Line_15 $$ ((DetectionExcludesConfigurationImpl) excludesConfiguration).removeExcluded(filesToProcess, detector.getFrameworkType())[ CD ]
Line_8 $$ filesToProcess = new ArrayList<VirtualFile>(acceptedFiles)-->Line_21 $$ frameworks = detector.detect(filesToProcess, new FrameworkDetectionContextImpl(myProject))[ FD ]
Line_10 $$ FrameworkDetector detector = FrameworkDetectorRegistry.getInstance().getDetectorById(detectorId)-->Line_15 $$ ((DetectionExcludesConfigurationImpl) excludesConfiguration).removeExcluded(filesToProcess, detector.getFrameworkType())[ FD ]
Line_2 $$ private List<? extends DetectedFrameworkDescription> runDetector(Integer detectorId, FileBasedIndex index, DetectionExcludesConfiguration excludesConfiguration, final boolean processNewFilesOnly) -->Line_5 $$ if (processNewFilesOnly) [ CD ]
Line_2 $$ private List<? extends DetectedFrameworkDescription> runDetector(Integer detectorId, FileBasedIndex index, DetectionExcludesConfiguration excludesConfiguration, final boolean processNewFilesOnly) -->Line_3 $$ Collection<VirtualFile> acceptedFiles = index.getContainingFiles(FrameworkDetectionIndex.NAME, detectorId, GlobalSearchScope.projectScope(myProject))[ FD ]
Line_3 $$ Collection<VirtualFile> acceptedFiles = index.getContainingFiles(FrameworkDetectionIndex.NAME, detectorId, GlobalSearchScope.projectScope(myProject))-->Line_17 $$ LOG.debug("Detector '" + detector.getDetectorId() + "': " + acceptedFiles.size() + " accepted files, " + filesToProcess.size() + " files to process")[ FD ]
Line_6 $$ filesToProcess = myDetectedFrameworksData.retainNewFiles(detectorId, acceptedFiles)-->Line_8 $$ filesToProcess = new ArrayList<VirtualFile>(acceptedFiles)[ FD ]
Line_6 $$ filesToProcess = myDetectedFrameworksData.retainNewFiles(detectorId, acceptedFiles)-->Line_17 $$ LOG.debug("Detector '" + detector.getDetectorId() + "': " + acceptedFiles.size() + " accepted files, " + filesToProcess.size() + " files to process")[ FD ]
Line_20 $$ if (!filesToProcess.isEmpty()) -->Line_23 $$ frameworks = Collections.emptyList()[ CD ]
Line_11 $$ if (detector == null) -->Line_12 $$ LOG.info("Framework detector not found by id " + detectorId)[ CD ]
Line_2 $$ private List<? extends DetectedFrameworkDescription> runDetector(Integer detectorId, FileBasedIndex index, DetectionExcludesConfiguration excludesConfiguration, final boolean processNewFilesOnly) -->Line_10 $$ FrameworkDetector detector = FrameworkDetectorRegistry.getInstance().getDetectorById(detectorId)[ FD ]
Line_2 $$ private List<? extends DetectedFrameworkDescription> runDetector(Integer detectorId, FileBasedIndex index, DetectionExcludesConfiguration excludesConfiguration, final boolean processNewFilesOnly) -->Line_19 $$ final List<? extends DetectedFrameworkDescription> frameworks[ CD ]
Line_6 $$ filesToProcess = myDetectedFrameworksData.retainNewFiles(detectorId, acceptedFiles)-->Line_15 $$ ((DetectionExcludesConfigurationImpl) excludesConfiguration).removeExcluded(filesToProcess, detector.getFrameworkType())[ FD ]
Line_8 $$ filesToProcess = new ArrayList<VirtualFile>(acceptedFiles)-->Line_20 $$ if (!filesToProcess.isEmpty()) [ FD ]
Line_4 $$ final Collection<VirtualFile> filesToProcess-->Line_17 $$ LOG.debug("Detector '" + detector.getDetectorId() + "': " + acceptedFiles.size() + " accepted files, " + filesToProcess.size() + " files to process")[ FD ]
Line_20 $$ if (!filesToProcess.isEmpty()) -->Line_21 $$ frameworks = detector.detect(filesToProcess, new FrameworkDetectionContextImpl(myProject))[ CD ]
Line_6 $$ filesToProcess = myDetectedFrameworksData.retainNewFiles(detectorId, acceptedFiles)-->Line_21 $$ frameworks = detector.detect(filesToProcess, new FrameworkDetectionContextImpl(myProject))[ FD ]
Line_10 $$ FrameworkDetector detector = FrameworkDetectorRegistry.getInstance().getDetectorById(detectorId)-->Line_21 $$ frameworks = detector.detect(filesToProcess, new FrameworkDetectionContextImpl(myProject))[ FD ]
Line_4 $$ final Collection<VirtualFile> filesToProcess-->Line_21 $$ frameworks = detector.detect(filesToProcess, new FrameworkDetectionContextImpl(myProject))[ FD ]
Line_2 $$ private List<? extends DetectedFrameworkDescription> runDetector(Integer detectorId, FileBasedIndex index, DetectionExcludesConfiguration excludesConfiguration, final boolean processNewFilesOnly) -->Line_11 $$ if (detector == null) [ CD ]
Line_6 $$ filesToProcess = myDetectedFrameworksData.retainNewFiles(detectorId, acceptedFiles)-->Line_20 $$ if (!filesToProcess.isEmpty()) [ FD ]
Line_19 $$ final List<? extends DetectedFrameworkDescription> frameworks-->Line_23 $$ frameworks = Collections.emptyList()[ FD ]
Line_19 $$ final List<? extends DetectedFrameworkDescription> frameworks-->Line_21 $$ frameworks = detector.detect(filesToProcess, new FrameworkDetectionContextImpl(myProject))[ FD ]
Line_2 $$ private List<? extends DetectedFrameworkDescription> runDetector(Integer detectorId, FileBasedIndex index, DetectionExcludesConfiguration excludesConfiguration, final boolean processNewFilesOnly) -->Line_3 $$ Collection<VirtualFile> acceptedFiles = index.getContainingFiles(FrameworkDetectionIndex.NAME, detectorId, GlobalSearchScope.projectScope(myProject))[ CD ]
Line_5 $$ if (processNewFilesOnly) -->Line_8 $$ filesToProcess = new ArrayList<VirtualFile>(acceptedFiles)[ CD ]
Line_21 $$ frameworks = detector.detect(filesToProcess, new FrameworkDetectionContextImpl(myProject))-->Line_23 $$ frameworks = Collections.emptyList()[ FD ]
Line_4 $$ final Collection<VirtualFile> filesToProcess-->Line_8 $$ filesToProcess = new ArrayList<VirtualFile>(acceptedFiles)[ FD ]
Line_8 $$ filesToProcess = new ArrayList<VirtualFile>(acceptedFiles)-->Line_15 $$ ((DetectionExcludesConfigurationImpl) excludesConfiguration).removeExcluded(filesToProcess, detector.getFrameworkType())[ FD ]
Line_2 $$ private List<? extends DetectedFrameworkDescription> runDetector(Integer detectorId, FileBasedIndex index, DetectionExcludesConfiguration excludesConfiguration, final boolean processNewFilesOnly) -->Line_4 $$ final Collection<VirtualFile> filesToProcess[ CD ]
Line_2 $$ private List<? extends DetectedFrameworkDescription> runDetector(Integer detectorId, FileBasedIndex index, DetectionExcludesConfiguration excludesConfiguration, final boolean processNewFilesOnly) -->Line_20 $$ if (!filesToProcess.isEmpty()) [ CD ]
Line_5 $$ if (processNewFilesOnly) -->Line_6 $$ filesToProcess = myDetectedFrameworksData.retainNewFiles(detectorId, acceptedFiles)[ CD ]
Line_3 $$ Collection<VirtualFile> acceptedFiles = index.getContainingFiles(FrameworkDetectionIndex.NAME, detectorId, GlobalSearchScope.projectScope(myProject))-->Line_6 $$ filesToProcess = myDetectedFrameworksData.retainNewFiles(detectorId, acceptedFiles)[ FD ]
Line_2 $$ private List<? extends DetectedFrameworkDescription> runDetector(Integer detectorId, FileBasedIndex index, DetectionExcludesConfiguration excludesConfiguration, final boolean processNewFilesOnly) -->Line_6 $$ filesToProcess = myDetectedFrameworksData.retainNewFiles(detectorId, acceptedFiles)[ FD ]
Line_2 $$ private List<? extends DetectedFrameworkDescription> runDetector(Integer detectorId, FileBasedIndex index, DetectionExcludesConfiguration excludesConfiguration, final boolean processNewFilesOnly) -->Line_25 $$ return frameworks[ CD ]
Line_2 $$ private List<? extends DetectedFrameworkDescription> runDetector(Integer detectorId, FileBasedIndex index, DetectionExcludesConfiguration excludesConfiguration, final boolean processNewFilesOnly) -->Line_16 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_4 $$ final Collection<VirtualFile> filesToProcess-->Line_6 $$ filesToProcess = myDetectedFrameworksData.retainNewFiles(detectorId, acceptedFiles)[ FD ]
Line_4 $$ final Collection<VirtualFile> filesToProcess-->Line_20 $$ if (!filesToProcess.isEmpty()) [ FD ]
Line_8 $$ filesToProcess = new ArrayList<VirtualFile>(acceptedFiles)-->Line_17 $$ LOG.debug("Detector '" + detector.getDetectorId() + "': " + acceptedFiles.size() + " accepted files, " + filesToProcess.size() + " files to process")[ FD ]
Line_11 $$ if (detector == null) -->Line_13 $$ return Collections.emptyList()[ CD ]
Line_4 $$ final Collection<VirtualFile> filesToProcess-->Line_15 $$ ((DetectionExcludesConfigurationImpl) excludesConfiguration).removeExcluded(filesToProcess, detector.getFrameworkType())[ FD ]
Line_10 $$ FrameworkDetector detector = FrameworkDetectorRegistry.getInstance().getDetectorById(detectorId)-->Line_17 $$ LOG.debug("Detector '" + detector.getDetectorId() + "': " + acceptedFiles.size() + " accepted files, " + filesToProcess.size() + " files to process")[ FD ]
