Line_5 $$ if (variableOrMethod instanceof PsiVariable) -->Line_7 $$ variableOrMethodType = variable.getType()[ CD ]
Line_9 $$ final PsiMethod method = (PsiMethod) variableOrMethod-->Line_10 $$ variableOrMethodType = method.getReturnType()[ FD ]
Line_62 $$ final PsiElement referenceGrandParent = referenceParent.getParent()-->Line_78 $$ if (referenceGrandParent instanceof PsiMethodCallExpression) [ FD ]
Line_56 $$ PsiElement referenceElement = reference.getElement()-->Line_60 $$ referenceParent = referenceElement.getParent()[ FD ]
Line_65 $$ final PsiType type = methodReferenceExpression.getFunctionalInterfaceType()-->Line_108 $$ type = ((PsiMethod) owner).getReturnType()[ FD ]
Line_144 $$ if (!checkType(type, weakestTypeClasses)) -->Line_145 $$ return Collections.emptyList()[ CD ]
Line_65 $$ final PsiType type = methodReferenceExpression.getFunctionalInterfaceType()-->Line_110 $$ type = LambdaUtil.getFunctionalInterfaceReturnType((PsiLambdaExpression) owner)[ FD ]
Line_28 $$ final PsiClass lowerBoundClass-->Line_44 $$ if (lowerBoundClass == null || variableOrMethodClass.equals(lowerBoundClass)) [ FD ]
Line_117 $$ if (referenceParent instanceof PsiReferenceExpression) -->Line_120 $$ final PsiElement target = referenceExpression.resolve()[ CD ]
Line_175 $$ if (referenceParent instanceof PsiNewExpression) -->Line_178 $$ if (qualifier != null) [ CD ]
Line_59 $$ referenceElement = referenceParent-->Line_96 $$ if (!Comparing.equal(foreachStatement.getIteratedValue(), referenceElement)) [ FD ]
Line_57 $$ PsiElement referenceParent = referenceElement.getParent()-->Line_156 $$ if (referenceParent instanceof PsiSwitchStatement) [ FD ]
Line_108 $$ type = ((PsiMethod) owner).getReturnType()-->Line_152 $$ if (!checkType(type, weakestTypeClasses)) [ FD ]
Line_83 $$ if (referenceParent instanceof PsiAssignmentExpression) -->Line_84 $$ final PsiAssignmentExpression assignmentExpression = (PsiAssignmentExpression) referenceParent[ CD ]
Line_51 $$ for (PsiReference reference : query) -->Line_56 $$ PsiElement referenceElement = reference.getElement()[ FD ]
Line_57 $$ PsiElement referenceParent = referenceElement.getParent()-->Line_175 $$ if (referenceParent instanceof PsiNewExpression) [ FD ]
Line_63 $$ if (reference instanceof PsiMethodReferenceExpression) -->Line_67 $$ if (!PsiType.VOID.equals(returnType) && !checkType(returnType, weakestTypeClasses)) [ CD ]
Line_39 $$ if (!findWeakestType(methodCallExpression, weakestTypeClasses)) -->Line_40 $$ return Collections.emptyList()[ CD ]
Line_57 $$ PsiElement referenceParent = referenceElement.getParent()-->Line_147 $$ if (referenceParent instanceof PsiBinaryExpression) [ FD ]
Line_140 $$ if (referenceElement.equals(condition)) -->Line_141 $$ return Collections.emptyList()[ CD ]
Line_60 $$ referenceParent = referenceElement.getParent()-->Line_159 $$ if (referenceParent instanceof PsiPrefixExpression) [ FD ]
Line_114 $$ if (!checkType(type, weakestTypeClasses)) -->Line_115 $$ return Collections.emptyList()[ CD ]
Line_117 $$ if (referenceParent instanceof PsiReferenceExpression) -->Line_121 $$ if (!(target instanceof PsiField)) [ CD ]
Line_178 $$ if (qualifier != null) -->Line_184 $$ final PsiClass innerClass = classType.resolve()[ CD ]
Line_110 $$ type = LambdaUtil.getFunctionalInterfaceReturnType((PsiLambdaExpression) owner)-->Line_114 $$ if (!checkType(type, weakestTypeClasses)) [ FD ]
Line_60 $$ referenceParent = referenceElement.getParent()-->Line_163 $$ if (referenceParent instanceof PsiPostfixExpression) [ FD ]
Line_83 $$ if (referenceParent instanceof PsiAssignmentExpression) -->Line_88 $$ if (referenceParent instanceof PsiVariable) [ CD ]
Line_56 $$ PsiElement referenceElement = reference.getElement()-->Line_85 $$ if (!findWeakestType(referenceElement, assignmentExpression, useRighthandTypeAsWeakestTypeInAssignments, weakestTypeClasses)) [ FD ]
Line_59 $$ referenceElement = referenceParent-->Line_140 $$ if (referenceElement.equals(condition)) [ FD ]
Line_26 $$ final GlobalSearchScope scope = variableOrMethod.getResolveScope()-->Line_30 $$ lowerBoundClass = facade.findClass(CommonClassNames.JAVA_LANG_AUTO_CLOSEABLE, scope)[ FD ]
Line_25 $$ Set<PsiClass> weakestTypeClasses = new HashSet<PsiClass>()-->Line_152 $$ if (!checkType(type, weakestTypeClasses)) [ FD ]
Line_30 $$ lowerBoundClass = facade.findClass(CommonClassNames.JAVA_LANG_AUTO_CLOSEABLE, scope)-->Line_43 $$ lowerBoundClass = facade.findClass(CommonClassNames.JAVA_LANG_OBJECT, scope)[ FD ]
Line_59 $$ referenceElement = referenceParent-->Line_85 $$ if (!findWeakestType(referenceElement, assignmentExpression, useRighthandTypeAsWeakestTypeInAssignments, weakestTypeClasses)) [ FD ]
Line_29 $$ if (variableOrMethod instanceof PsiResourceVariable) -->Line_47 $$ weakestTypeClasses.add(lowerBoundClass)[ CD ]
Line_176 $$ final PsiNewExpression newExpression = (PsiNewExpression) referenceParent-->Line_179 $$ final PsiType type = newExpression.getType()[ FD ]
Line_57 $$ PsiElement referenceParent = referenceElement.getParent()-->Line_105 $$ final PsiElement owner = PsiTreeUtil.getParentOfType(referenceParent, PsiMethod.class, PsiLambdaExpression.class)[ FD ]
Line_58 $$ if (referenceParent instanceof PsiMethodCallExpression) -->Line_59 $$ referenceElement = referenceParent[ CD ]
Line_57 $$ PsiElement referenceParent = referenceElement.getParent()-->Line_132 $$ if (referenceParent instanceof PsiThrowStatement) [ FD ]
Line_27 $$ final JavaPsiFacade facade = JavaPsiFacade.getInstance(variableOrMethod.getProject())-->Line_38 $$ final PsiMethodCallExpression methodCallExpression = (PsiMethodCallExpression) facade.getElementFactory().createExpressionFromText(methodCallText, resourceVariable.getParent())[ FD ]
Line_57 $$ PsiElement referenceParent = referenceElement.getParent()-->Line_104 $$ if (referenceParent instanceof PsiReturnStatement) [ FD ]
Line_21 $$ final PsiClass variableOrMethodClass = variableOrMethodClassType.resolve()-->Line_194 $$ if (weakestTypeClasses.contains(variableOrMethodClass) || weakestTypeClasses.isEmpty()) [ FD ]
Line_152 $$ if (!checkType(type, weakestTypeClasses)) -->Line_153 $$ return Collections.emptyList()[ CD ]
Line_50 $$ boolean hasUsages = false-->Line_198 $$ if (!hasUsages) [ FD ]
Line_88 $$ if (referenceParent instanceof PsiVariable) -->Line_90 $$ final PsiType type = variable.getType()[ CD ]
Line_60 $$ referenceParent = referenceElement.getParent()-->Line_127 $$ if (referenceParent instanceof PsiArrayInitializerExpression) [ FD ]
Line_25 $$ Set<PsiClass> weakestTypeClasses = new HashSet<PsiClass>()-->Line_144 $$ if (!checkType(type, weakestTypeClasses)) [ FD ]
Line_50 $$ boolean hasUsages = false-->Line_55 $$ hasUsages = true[ FD ]
Line_27 $$ final JavaPsiFacade facade = JavaPsiFacade.getInstance(variableOrMethod.getProject())-->Line_30 $$ lowerBoundClass = facade.findClass(CommonClassNames.JAVA_LANG_AUTO_CLOSEABLE, scope)[ FD ]
Line_138 $$ final PsiConditionalExpression conditionalExpression = (PsiConditionalExpression) referenceParent-->Line_139 $$ final PsiExpression condition = conditionalExpression.getCondition()[ FD ]
Line_60 $$ referenceParent = referenceElement.getParent()-->Line_137 $$ if (referenceParent instanceof PsiConditionalExpression) [ FD ]
Line_27 $$ final JavaPsiFacade facade = JavaPsiFacade.getInstance(variableOrMethod.getProject())-->Line_43 $$ lowerBoundClass = facade.findClass(CommonClassNames.JAVA_LANG_OBJECT, scope)[ FD ]
Line_28 $$ final PsiClass lowerBoundClass-->Line_30 $$ lowerBoundClass = facade.findClass(CommonClassNames.JAVA_LANG_AUTO_CLOSEABLE, scope)[ FD ]
Line_99 $$ final PsiClass javaLangIterableClass = facade.findClass(CommonClassNames.JAVA_LANG_ITERABLE, scope)-->Line_103 $$ checkClass(javaLangIterableClass, weakestTypeClasses)[ FD ]
Line_5 $$ if (variableOrMethod instanceof PsiVariable) -->Line_8 $$ if (variableOrMethod instanceof PsiMethod) [ CD ]
Line_60 $$ referenceParent = referenceElement.getParent()-->Line_171 $$ if (referenceParent instanceof PsiForStatement) [ FD ]
Line_28 $$ final PsiClass lowerBoundClass-->Line_31 $$ if (lowerBoundClass == null || variableOrMethodClass.equals(lowerBoundClass)) [ FD ]
Line_60 $$ referenceParent = referenceElement.getParent()-->Line_62 $$ final PsiElement referenceGrandParent = referenceParent.getParent()[ FD ]
Line_108 $$ type = ((PsiMethod) owner).getReturnType()-->Line_110 $$ type = LambdaUtil.getFunctionalInterfaceReturnType((PsiLambdaExpression) owner)[ FD ]
Line_4 $$ final PsiType variableOrMethodType-->Line_11 $$ if (PsiType.VOID.equals(variableOrMethodType)) [ FD ]
Line_29 $$ if (variableOrMethod instanceof PsiResourceVariable) -->Line_39 $$ if (!findWeakestType(methodCallExpression, weakestTypeClasses)) [ CD ]
Line_38 $$ final PsiMethodCallExpression methodCallExpression = (PsiMethodCallExpression) facade.getElementFactory().createExpressionFromText(methodCallText, resourceVariable.getParent())-->Line_75 $$ if (!findWeakestType(referenceElement, methodCallExpression, useParameterizedTypeForCollectionMethods, weakestTypeClasses)) [ FD ]
Line_94 $$ if (referenceParent instanceof PsiForeachStatement) -->Line_100 $$ if (javaLangIterableClass == null) [ CD ]
Line_7 $$ variableOrMethodType = variable.getType()-->Line_151 $$ if (variableOrMethodType.equals(type)) [ FD ]
Line_110 $$ type = LambdaUtil.getFunctionalInterfaceReturnType((PsiLambdaExpression) owner)-->Line_152 $$ if (!checkType(type, weakestTypeClasses)) [ FD ]
Line_43 $$ lowerBoundClass = facade.findClass(CommonClassNames.JAVA_LANG_OBJECT, scope)-->Line_44 $$ if (lowerBoundClass == null || variableOrMethodClass.equals(lowerBoundClass)) [ FD ]
Line_25 $$ Set<PsiClass> weakestTypeClasses = new HashSet<PsiClass>()-->Line_114 $$ if (!checkType(type, weakestTypeClasses)) [ FD ]
Line_80 $$ if (PsiUtil.skipParenthesizedExprUp(methodCallExpression.getParent()) instanceof PsiTypeCastExpression || !findWeakestType(methodCallExpression, weakestTypeClasses)) -->Line_81 $$ return Collections.emptyList()[ CD ]
Line_108 $$ type = ((PsiMethod) owner).getReturnType()-->Line_114 $$ if (!checkType(type, weakestTypeClasses)) [ FD ]
Line_57 $$ PsiElement referenceParent = referenceElement.getParent()-->Line_70 $$ if (referenceParent instanceof PsiExpressionList) [ FD ]
Line_4 $$ final PsiType variableOrMethodType-->Line_10 $$ variableOrMethodType = method.getReturnType()[ FD ]
Line_163 $$ if (referenceParent instanceof PsiPostfixExpression) -->Line_167 $$ if (referenceParent instanceof PsiIfStatement) [ CD ]
Line_95 $$ final PsiForeachStatement foreachStatement = (PsiForeachStatement) referenceParent-->Line_96 $$ if (!Comparing.equal(foreachStatement.getIteratedValue(), referenceElement)) [ FD ]
Line_17 $$ if (!(variableOrMethodType instanceof PsiClassType)) -->Line_18 $$ return Collections.emptyList()[ CD ]
Line_60 $$ referenceParent = referenceElement.getParent()-->Line_94 $$ if (referenceParent instanceof PsiForeachStatement) [ FD ]
Line_132 $$ if (referenceParent instanceof PsiThrowStatement) -->Line_137 $$ if (referenceParent instanceof PsiConditionalExpression) [ CD ]
Line_8 $$ if (variableOrMethod instanceof PsiMethod) -->Line_10 $$ variableOrMethodType = method.getReturnType()[ CD ]
Line_29 $$ if (variableOrMethod instanceof PsiResourceVariable) -->Line_44 $$ if (lowerBoundClass == null || variableOrMethodClass.equals(lowerBoundClass)) [ CD ]
Line_38 $$ final PsiMethodCallExpression methodCallExpression = (PsiMethodCallExpression) facade.getElementFactory().createExpressionFromText(methodCallText, resourceVariable.getParent())-->Line_39 $$ if (!findWeakestType(methodCallExpression, weakestTypeClasses)) [ FD ]
Line_29 $$ if (variableOrMethod instanceof PsiResourceVariable) -->Line_43 $$ lowerBoundClass = facade.findClass(CommonClassNames.JAVA_LANG_OBJECT, scope)[ CD ]
Line_4 $$ final PsiType variableOrMethodType-->Line_91 $$ if (!type.isAssignableFrom(variableOrMethodType) || !checkType(type, weakestTypeClasses)) [ FD ]
Line_11 $$ if (PsiType.VOID.equals(variableOrMethodType)) -->Line_12 $$ return Collections.emptyList()[ CD ]
Line_109 $$ if (owner instanceof PsiLambdaExpression) -->Line_112 $$ return Collections.emptyList()[ CD ]
Line_8 $$ if (variableOrMethod instanceof PsiMethod) -->Line_11 $$ if (PsiType.VOID.equals(variableOrMethodType)) [ CD ]
Line_5 $$ if (variableOrMethod instanceof PsiVariable) -->Line_6 $$ final PsiVariable variable = (PsiVariable) variableOrMethod[ CD ]
Line_30 $$ lowerBoundClass = facade.findClass(CommonClassNames.JAVA_LANG_AUTO_CLOSEABLE, scope)-->Line_34 $$ weakestTypeClasses.add(lowerBoundClass)[ FD ]
Line_21 $$ final PsiClass variableOrMethodClass = variableOrMethodClassType.resolve()-->Line_201 $$ weakestTypeClasses = filterAccessibleClasses(weakestTypeClasses, variableOrMethodClass, variableOrMethod)[ FD ]
Line_176 $$ final PsiNewExpression newExpression = (PsiNewExpression) referenceParent-->Line_177 $$ final PsiExpression qualifier = newExpression.getQualifier()[ FD ]
Line_121 $$ if (!(target instanceof PsiField)) -->Line_122 $$ return Collections.emptyList()[ CD ]
Line_138 $$ final PsiConditionalExpression conditionalExpression = (PsiConditionalExpression) referenceParent-->Line_143 $$ final PsiType type = ExpectedTypeUtils.findExpectedType(conditionalExpression, true)[ FD ]
Line_147 $$ if (referenceParent instanceof PsiBinaryExpression) -->Line_156 $$ if (referenceParent instanceof PsiSwitchStatement) [ CD ]
Line_7 $$ variableOrMethodType = variable.getType()-->Line_10 $$ variableOrMethodType = method.getReturnType()[ FD ]
Line_57 $$ PsiElement referenceParent = referenceElement.getParent()-->Line_62 $$ final PsiElement referenceGrandParent = referenceParent.getParent()[ FD ]
Line_94 $$ if (referenceParent instanceof PsiForeachStatement) -->Line_99 $$ final PsiClass javaLangIterableClass = facade.findClass(CommonClassNames.JAVA_LANG_ITERABLE, scope)[ CD ]
Line_4 $$ final PsiType variableOrMethodType-->Line_7 $$ variableOrMethodType = variable.getType()[ FD ]
Line_105 $$ final PsiElement owner = PsiTreeUtil.getParentOfType(referenceParent, PsiMethod.class, PsiLambdaExpression.class)-->Line_107 $$ if (owner instanceof PsiMethod) [ FD ]
Line_59 $$ referenceElement = referenceParent-->Line_75 $$ if (!findWeakestType(referenceElement, methodCallExpression, useParameterizedTypeForCollectionMethods, weakestTypeClasses)) [ FD ]
Line_51 $$ for (PsiReference reference : query) -->Line_52 $$ if (reference == null) [ FD ]
Line_6 $$ final PsiVariable variable = (PsiVariable) variableOrMethod-->Line_90 $$ final PsiType type = variable.getType()[ FD ]
Line_124 $$ final PsiField field = (PsiField) target-->Line_125 $$ final PsiClass containingClass = field.getContainingClass()[ FD ]
Line_10 $$ variableOrMethodType = method.getReturnType()-->Line_91 $$ if (!type.isAssignableFrom(variableOrMethodType) || !checkType(type, weakestTypeClasses)) [ FD ]
Line_125 $$ final PsiClass containingClass = field.getContainingClass()-->Line_126 $$ checkClass(containingClass, weakestTypeClasses)[ FD ]
Line_132 $$ if (referenceParent instanceof PsiThrowStatement) -->Line_134 $$ if (!findWeakestType(throwStatement, variableOrMethodClass, weakestTypeClasses)) [ CD ]
Line_57 $$ PsiElement referenceParent = referenceElement.getParent()-->Line_88 $$ if (referenceParent instanceof PsiVariable) [ FD ]
Line_4 $$ final PsiType variableOrMethodType-->Line_151 $$ if (variableOrMethodType.equals(type)) [ FD ]
Line_65 $$ final PsiType type = methodReferenceExpression.getFunctionalInterfaceType()-->Line_114 $$ if (!checkType(type, weakestTypeClasses)) [ FD ]
Line_28 $$ final PsiClass lowerBoundClass-->Line_34 $$ weakestTypeClasses.add(lowerBoundClass)[ FD ]
Line_60 $$ referenceParent = referenceElement.getParent()-->Line_117 $$ if (referenceParent instanceof PsiReferenceExpression) [ FD ]
Line_184 $$ final PsiClass innerClass = classType.resolve()-->Line_188 $$ final PsiClass outerClass = innerClass.getContainingClass()[ FD ]
Line_25 $$ Set<PsiClass> weakestTypeClasses = new HashSet<PsiClass>()-->Line_91 $$ if (!type.isAssignableFrom(variableOrMethodType) || !checkType(type, weakestTypeClasses)) [ FD ]
Line_67 $$ if (!PsiType.VOID.equals(returnType) && !checkType(returnType, weakestTypeClasses)) -->Line_68 $$ return Collections.emptyList()[ CD ]
Line_65 $$ final PsiType type = methodReferenceExpression.getFunctionalInterfaceType()-->Line_91 $$ if (!type.isAssignableFrom(variableOrMethodType) || !checkType(type, weakestTypeClasses)) [ FD ]
Line_57 $$ PsiElement referenceParent = referenceElement.getParent()-->Line_171 $$ if (referenceParent instanceof PsiForStatement) [ FD ]
Line_25 $$ Set<PsiClass> weakestTypeClasses = new HashSet<PsiClass>()-->Line_75 $$ if (!findWeakestType(referenceElement, methodCallExpression, useParameterizedTypeForCollectionMethods, weakestTypeClasses)) [ FD ]
Line_26 $$ final GlobalSearchScope scope = variableOrMethod.getResolveScope()-->Line_99 $$ final PsiClass javaLangIterableClass = facade.findClass(CommonClassNames.JAVA_LANG_ITERABLE, scope)[ FD ]
Line_56 $$ PsiElement referenceElement = reference.getElement()-->Line_140 $$ if (referenceElement.equals(condition)) [ FD ]
Line_57 $$ PsiElement referenceParent = referenceElement.getParent()-->Line_60 $$ referenceParent = referenceElement.getParent()[ FD ]
Line_25 $$ Set<PsiClass> weakestTypeClasses = new HashSet<PsiClass>()-->Line_190 $$ checkClass(outerClass, weakestTypeClasses)[ FD ]
Line_88 $$ if (referenceParent instanceof PsiVariable) -->Line_94 $$ if (referenceParent instanceof PsiForeachStatement) [ CD ]
Line_20 $$ final PsiClassType variableOrMethodClassType = (PsiClassType) variableOrMethodType-->Line_21 $$ final PsiClass variableOrMethodClass = variableOrMethodClassType.resolve()[ FD ]
Line_66 $$ final PsiType returnType = LambdaUtil.getFunctionalInterfaceReturnType(type)-->Line_67 $$ if (!PsiType.VOID.equals(returnType) && !checkType(returnType, weakestTypeClasses)) [ FD ]
Line_29 $$ if (variableOrMethod instanceof PsiResourceVariable) -->Line_35 $$ final PsiResourceVariable resourceVariable = (PsiResourceVariable) variableOrMethod[ CD ]
Line_57 $$ PsiElement referenceParent = referenceElement.getParent()-->Line_94 $$ if (referenceParent instanceof PsiForeachStatement) [ FD ]
Line_129 $$ if (!findWeakestType(arrayInitializerExpression, weakestTypeClasses)) -->Line_130 $$ return Collections.emptyList()[ CD ]
Line_65 $$ final PsiType type = methodReferenceExpression.getFunctionalInterfaceType()-->Line_152 $$ if (!checkType(type, weakestTypeClasses)) [ FD ]
Line_108 $$ type = ((PsiMethod) owner).getReturnType()-->Line_151 $$ if (variableOrMethodType.equals(type)) [ FD ]
Line_178 $$ if (qualifier != null) -->Line_189 $$ if (outerClass != null) [ CD ]
Line_70 $$ if (referenceParent instanceof PsiExpressionList) -->Line_78 $$ if (referenceGrandParent instanceof PsiMethodCallExpression) [ CD ]
Line_27 $$ final JavaPsiFacade facade = JavaPsiFacade.getInstance(variableOrMethod.getProject())-->Line_99 $$ final PsiClass javaLangIterableClass = facade.findClass(CommonClassNames.JAVA_LANG_ITERABLE, scope)[ FD ]
Line_30 $$ lowerBoundClass = facade.findClass(CommonClassNames.JAVA_LANG_AUTO_CLOSEABLE, scope)-->Line_31 $$ if (lowerBoundClass == null || variableOrMethodClass.equals(lowerBoundClass)) [ FD ]
Line_94 $$ if (referenceParent instanceof PsiForeachStatement) -->Line_96 $$ if (!Comparing.equal(foreachStatement.getIteratedValue(), referenceElement)) [ CD ]
Line_25 $$ Set<PsiClass> weakestTypeClasses = new HashSet<PsiClass>()-->Line_34 $$ weakestTypeClasses.add(lowerBoundClass)[ FD ]
Line_57 $$ PsiElement referenceParent = referenceElement.getParent()-->Line_58 $$ if (referenceParent instanceof PsiMethodCallExpression) [ FD ]
Line_105 $$ final PsiElement owner = PsiTreeUtil.getParentOfType(referenceParent, PsiMethod.class, PsiLambdaExpression.class)-->Line_109 $$ if (owner instanceof PsiLambdaExpression) [ FD ]
Line_107 $$ if (owner instanceof PsiMethod) -->Line_108 $$ type = ((PsiMethod) owner).getReturnType()[ CD ]
Line_70 $$ if (referenceParent instanceof PsiExpressionList) -->Line_71 $$ if (!(referenceGrandParent instanceof PsiMethodCallExpression)) [ CD ]
Line_178 $$ if (qualifier != null) -->Line_183 $$ final PsiClassType classType = (PsiClassType) type[ CD ]
Line_60 $$ referenceParent = referenceElement.getParent()-->Line_132 $$ if (referenceParent instanceof PsiThrowStatement) [ FD ]
Line_96 $$ if (!Comparing.equal(foreachStatement.getIteratedValue(), referenceElement)) -->Line_97 $$ return Collections.emptyList()[ CD ]
Line_25 $$ Set<PsiClass> weakestTypeClasses = new HashSet<PsiClass>()-->Line_201 $$ weakestTypeClasses = filterAccessibleClasses(weakestTypeClasses, variableOrMethodClass, variableOrMethod)[ FD ]
Line_78 $$ if (referenceGrandParent instanceof PsiMethodCallExpression) -->Line_80 $$ if (PsiUtil.skipParenthesizedExprUp(methodCallExpression.getParent()) instanceof PsiTypeCastExpression || !findWeakestType(methodCallExpression, weakestTypeClasses)) [ CD ]
Line_167 $$ if (referenceParent instanceof PsiIfStatement) -->Line_171 $$ if (referenceParent instanceof PsiForStatement) [ CD ]
Line_60 $$ referenceParent = referenceElement.getParent()-->Line_104 $$ if (referenceParent instanceof PsiReturnStatement) [ FD ]
Line_60 $$ referenceParent = referenceElement.getParent()-->Line_175 $$ if (referenceParent instanceof PsiNewExpression) [ FD ]
Line_25 $$ Set<PsiClass> weakestTypeClasses = new HashSet<PsiClass>()-->Line_194 $$ if (weakestTypeClasses.contains(variableOrMethodClass) || weakestTypeClasses.isEmpty()) [ FD ]
Line_22 $$ if (variableOrMethodClass == null || variableOrMethodClass instanceof PsiTypeParameter) -->Line_23 $$ return Collections.emptyList()[ CD ]
Line_104 $$ if (referenceParent instanceof PsiReturnStatement) -->Line_107 $$ if (owner instanceof PsiMethod) [ CD ]
Line_108 $$ type = ((PsiMethod) owner).getReturnType()-->Line_144 $$ if (!checkType(type, weakestTypeClasses)) [ FD ]
Line_88 $$ if (referenceParent instanceof PsiVariable) -->Line_91 $$ if (!type.isAssignableFrom(variableOrMethodType) || !checkType(type, weakestTypeClasses)) [ CD ]
Line_56 $$ PsiElement referenceElement = reference.getElement()-->Line_75 $$ if (!findWeakestType(referenceElement, methodCallExpression, useParameterizedTypeForCollectionMethods, weakestTypeClasses)) [ FD ]
Line_110 $$ type = LambdaUtil.getFunctionalInterfaceReturnType((PsiLambdaExpression) owner)-->Line_151 $$ if (variableOrMethodType.equals(type)) [ FD ]
Line_100 $$ if (javaLangIterableClass == null) -->Line_101 $$ return Collections.emptyList()[ CD ]
Line_51 $$ for (PsiReference reference : query) -->Line_63 $$ if (reference instanceof PsiMethodReferenceExpression) [ FD ]
Line_134 $$ if (!findWeakestType(throwStatement, variableOrMethodClass, weakestTypeClasses)) -->Line_135 $$ return Collections.emptyList()[ CD ]
Line_57 $$ PsiElement referenceParent = referenceElement.getParent()-->Line_137 $$ if (referenceParent instanceof PsiConditionalExpression) [ FD ]
Line_94 $$ if (referenceParent instanceof PsiForeachStatement) -->Line_95 $$ final PsiForeachStatement foreachStatement = (PsiForeachStatement) referenceParent[ CD ]
Line_178 $$ if (qualifier != null) -->Line_179 $$ final PsiType type = newExpression.getType()[ CD ]
Line_171 $$ if (referenceParent instanceof PsiForStatement) -->Line_175 $$ if (referenceParent instanceof PsiNewExpression) [ CD ]
Line_38 $$ final PsiMethodCallExpression methodCallExpression = (PsiMethodCallExpression) facade.getElementFactory().createExpressionFromText(methodCallText, resourceVariable.getParent())-->Line_80 $$ if (PsiUtil.skipParenthesizedExprUp(methodCallExpression.getParent()) instanceof PsiTypeCastExpression || !findWeakestType(methodCallExpression, weakestTypeClasses)) [ FD ]
Line_30 $$ lowerBoundClass = facade.findClass(CommonClassNames.JAVA_LANG_AUTO_CLOSEABLE, scope)-->Line_44 $$ if (lowerBoundClass == null || variableOrMethodClass.equals(lowerBoundClass)) [ FD ]
Line_57 $$ PsiElement referenceParent = referenceElement.getParent()-->Line_163 $$ if (referenceParent instanceof PsiPostfixExpression) [ FD ]
Line_178 $$ if (qualifier != null) -->Line_180 $$ if (!(type instanceof PsiClassType)) [ CD ]
Line_85 $$ if (!findWeakestType(referenceElement, assignmentExpression, useRighthandTypeAsWeakestTypeInAssignments, weakestTypeClasses)) -->Line_86 $$ return Collections.emptyList()[ CD ]
Line_59 $$ referenceElement = referenceParent-->Line_60 $$ referenceParent = referenceElement.getParent()[ FD ]
Line_99 $$ final PsiClass javaLangIterableClass = facade.findClass(CommonClassNames.JAVA_LANG_ITERABLE, scope)-->Line_100 $$ if (javaLangIterableClass == null) [ FD ]
Line_156 $$ if (referenceParent instanceof PsiSwitchStatement) -->Line_159 $$ if (referenceParent instanceof PsiPrefixExpression) [ CD ]
Line_127 $$ if (referenceParent instanceof PsiArrayInitializerExpression) -->Line_128 $$ final PsiArrayInitializerExpression arrayInitializerExpression = (PsiArrayInitializerExpression) referenceParent[ CD ]
Line_178 $$ if (qualifier != null) -->Line_185 $$ if (innerClass == null) [ CD ]
Line_117 $$ if (referenceParent instanceof PsiReferenceExpression) -->Line_124 $$ final PsiField field = (PsiField) target[ CD ]
Line_188 $$ final PsiClass outerClass = innerClass.getContainingClass()-->Line_189 $$ if (outerClass != null) [ FD ]
Line_60 $$ referenceParent = referenceElement.getParent()-->Line_105 $$ final PsiElement owner = PsiTreeUtil.getParentOfType(referenceParent, PsiMethod.class, PsiLambdaExpression.class)[ FD ]
Line_137 $$ if (referenceParent instanceof PsiConditionalExpression) -->Line_144 $$ if (!checkType(type, weakestTypeClasses)) [ CD ]
Line_63 $$ if (reference instanceof PsiMethodReferenceExpression) -->Line_64 $$ final PsiMethodReferenceExpression methodReferenceExpression = (PsiMethodReferenceExpression) reference[ CD ]
Line_104 $$ if (referenceParent instanceof PsiReturnStatement) -->Line_117 $$ if (referenceParent instanceof PsiReferenceExpression) [ CD ]
Line_29 $$ if (variableOrMethod instanceof PsiResourceVariable) -->Line_31 $$ if (lowerBoundClass == null || variableOrMethodClass.equals(lowerBoundClass)) [ CD ]
Line_127 $$ if (referenceParent instanceof PsiArrayInitializerExpression) -->Line_129 $$ if (!findWeakestType(arrayInitializerExpression, weakestTypeClasses)) [ CD ]
Line_137 $$ if (referenceParent instanceof PsiConditionalExpression) -->Line_143 $$ final PsiType type = ExpectedTypeUtils.findExpectedType(conditionalExpression, true)[ CD ]
Line_183 $$ final PsiClassType classType = (PsiClassType) type-->Line_184 $$ final PsiClass innerClass = classType.resolve()[ FD ]
Line_75 $$ if (!findWeakestType(referenceElement, methodCallExpression, useParameterizedTypeForCollectionMethods, weakestTypeClasses)) -->Line_76 $$ return Collections.emptyList()[ CD ]
Line_63 $$ if (reference instanceof PsiMethodReferenceExpression) -->Line_65 $$ final PsiType type = methodReferenceExpression.getFunctionalInterfaceType()[ CD ]
Line_21 $$ final PsiClass variableOrMethodClass = variableOrMethodClassType.resolve()-->Line_134 $$ if (!findWeakestType(throwStatement, variableOrMethodClass, weakestTypeClasses)) [ FD ]
Line_139 $$ final PsiExpression condition = conditionalExpression.getCondition()-->Line_140 $$ if (referenceElement.equals(condition)) [ FD ]
Line_10 $$ variableOrMethodType = method.getReturnType()-->Line_11 $$ if (PsiType.VOID.equals(variableOrMethodType)) [ FD ]
Line_30 $$ lowerBoundClass = facade.findClass(CommonClassNames.JAVA_LANG_AUTO_CLOSEABLE, scope)-->Line_47 $$ weakestTypeClasses.add(lowerBoundClass)[ FD ]
Line_137 $$ if (referenceParent instanceof PsiConditionalExpression) -->Line_147 $$ if (referenceParent instanceof PsiBinaryExpression) [ CD ]
Line_109 $$ if (owner instanceof PsiLambdaExpression) -->Line_110 $$ type = LambdaUtil.getFunctionalInterfaceReturnType((PsiLambdaExpression) owner)[ CD ]
Line_25 $$ Set<PsiClass> weakestTypeClasses = new HashSet<PsiClass>()-->Line_67 $$ if (!PsiType.VOID.equals(returnType) && !checkType(returnType, weakestTypeClasses)) [ FD ]
Line_133 $$ final PsiThrowStatement throwStatement = (PsiThrowStatement) referenceParent-->Line_134 $$ if (!findWeakestType(throwStatement, variableOrMethodClass, weakestTypeClasses)) [ FD ]
Line_189 $$ if (outerClass != null) -->Line_190 $$ checkClass(outerClass, weakestTypeClasses)[ CD ]
Line_58 $$ if (referenceParent instanceof PsiMethodCallExpression) -->Line_60 $$ referenceParent = referenceElement.getParent()[ CD ]
Line_60 $$ referenceParent = referenceElement.getParent()-->Line_147 $$ if (referenceParent instanceof PsiBinaryExpression) [ FD ]
Line_21 $$ final PsiClass variableOrMethodClass = variableOrMethodClassType.resolve()-->Line_31 $$ if (lowerBoundClass == null || variableOrMethodClass.equals(lowerBoundClass)) [ FD ]
Line_29 $$ if (variableOrMethod instanceof PsiResourceVariable) -->Line_38 $$ final PsiMethodCallExpression methodCallExpression = (PsiMethodCallExpression) facade.getElementFactory().createExpressionFromText(methodCallText, resourceVariable.getParent())[ CD ]
Line_175 $$ if (referenceParent instanceof PsiNewExpression) -->Line_177 $$ final PsiExpression qualifier = newExpression.getQualifier()[ CD ]
Line_56 $$ PsiElement referenceElement = reference.getElement()-->Line_96 $$ if (!Comparing.equal(foreachStatement.getIteratedValue(), referenceElement)) [ FD ]
Line_104 $$ if (referenceParent instanceof PsiReturnStatement) -->Line_105 $$ final PsiElement owner = PsiTreeUtil.getParentOfType(referenceParent, PsiMethod.class, PsiLambdaExpression.class)[ CD ]
Line_57 $$ PsiElement referenceParent = referenceElement.getParent()-->Line_59 $$ referenceElement = referenceParent[ FD ]
Line_21 $$ final PsiClass variableOrMethodClass = variableOrMethodClassType.resolve()-->Line_44 $$ if (lowerBoundClass == null || variableOrMethodClass.equals(lowerBoundClass)) [ FD ]
Line_57 $$ PsiElement referenceParent = referenceElement.getParent()-->Line_83 $$ if (referenceParent instanceof PsiAssignmentExpression) [ FD ]
Line_29 $$ if (variableOrMethod instanceof PsiResourceVariable) -->Line_34 $$ weakestTypeClasses.add(lowerBoundClass)[ CD ]
Line_57 $$ PsiElement referenceParent = referenceElement.getParent()-->Line_159 $$ if (referenceParent instanceof PsiPrefixExpression) [ FD ]
Line_94 $$ if (referenceParent instanceof PsiForeachStatement) -->Line_104 $$ if (referenceParent instanceof PsiReturnStatement) [ CD ]
Line_185 $$ if (innerClass == null) -->Line_186 $$ return Collections.emptyList()[ CD ]
Line_29 $$ if (variableOrMethod instanceof PsiResourceVariable) -->Line_30 $$ lowerBoundClass = facade.findClass(CommonClassNames.JAVA_LANG_AUTO_CLOSEABLE, scope)[ CD ]
Line_25 $$ Set<PsiClass> weakestTypeClasses = new HashSet<PsiClass>()-->Line_126 $$ checkClass(containingClass, weakestTypeClasses)[ FD ]
Line_25 $$ Set<PsiClass> weakestTypeClasses = new HashSet<PsiClass>()-->Line_103 $$ checkClass(javaLangIterableClass, weakestTypeClasses)[ FD ]
Line_137 $$ if (referenceParent instanceof PsiConditionalExpression) -->Line_140 $$ if (referenceElement.equals(condition)) [ CD ]
Line_60 $$ referenceParent = referenceElement.getParent()-->Line_70 $$ if (referenceParent instanceof PsiExpressionList) [ FD ]
Line_57 $$ PsiElement referenceParent = referenceElement.getParent()-->Line_167 $$ if (referenceParent instanceof PsiIfStatement) [ FD ]
Line_137 $$ if (referenceParent instanceof PsiConditionalExpression) -->Line_138 $$ final PsiConditionalExpression conditionalExpression = (PsiConditionalExpression) referenceParent[ CD ]
Line_71 $$ if (!(referenceGrandParent instanceof PsiMethodCallExpression)) -->Line_72 $$ return Collections.emptyList()[ CD ]
Line_25 $$ Set<PsiClass> weakestTypeClasses = new HashSet<PsiClass>()-->Line_80 $$ if (PsiUtil.skipParenthesizedExprUp(methodCallExpression.getParent()) instanceof PsiTypeCastExpression || !findWeakestType(methodCallExpression, weakestTypeClasses)) [ FD ]
Line_35 $$ final PsiResourceVariable resourceVariable = (PsiResourceVariable) variableOrMethod-->Line_38 $$ final PsiMethodCallExpression methodCallExpression = (PsiMethodCallExpression) facade.getElementFactory().createExpressionFromText(methodCallText, resourceVariable.getParent())[ FD ]
Line_25 $$ Set<PsiClass> weakestTypeClasses = new HashSet<PsiClass>()-->Line_85 $$ if (!findWeakestType(referenceElement, assignmentExpression, useRighthandTypeAsWeakestTypeInAssignments, weakestTypeClasses)) [ FD ]
Line_60 $$ referenceParent = referenceElement.getParent()-->Line_88 $$ if (referenceParent instanceof PsiVariable) [ FD ]
Line_117 $$ if (referenceParent instanceof PsiReferenceExpression) -->Line_127 $$ if (referenceParent instanceof PsiArrayInitializerExpression) [ CD ]
Line_110 $$ type = LambdaUtil.getFunctionalInterfaceReturnType((PsiLambdaExpression) owner)-->Line_144 $$ if (!checkType(type, weakestTypeClasses)) [ FD ]
Line_28 $$ final PsiClass lowerBoundClass-->Line_43 $$ lowerBoundClass = facade.findClass(CommonClassNames.JAVA_LANG_OBJECT, scope)[ FD ]
Line_55 $$ hasUsages = true-->Line_198 $$ if (!hasUsages) [ FD ]
Line_175 $$ if (referenceParent instanceof PsiNewExpression) -->Line_176 $$ final PsiNewExpression newExpression = (PsiNewExpression) referenceParent[ CD ]
Line_177 $$ final PsiExpression qualifier = newExpression.getQualifier()-->Line_178 $$ if (qualifier != null) [ FD ]
Line_56 $$ PsiElement referenceElement = reference.getElement()-->Line_57 $$ PsiElement referenceParent = referenceElement.getParent()[ FD ]
Line_56 $$ PsiElement referenceElement = reference.getElement()-->Line_59 $$ referenceElement = referenceParent[ FD ]
Line_60 $$ referenceParent = referenceElement.getParent()-->Line_83 $$ if (referenceParent instanceof PsiAssignmentExpression) [ FD ]
Line_26 $$ final GlobalSearchScope scope = variableOrMethod.getResolveScope()-->Line_43 $$ lowerBoundClass = facade.findClass(CommonClassNames.JAVA_LANG_OBJECT, scope)[ FD ]
Line_78 $$ if (referenceGrandParent instanceof PsiMethodCallExpression) -->Line_83 $$ if (referenceParent instanceof PsiAssignmentExpression) [ CD ]
Line_25 $$ Set<PsiClass> weakestTypeClasses = new HashSet<PsiClass>()-->Line_47 $$ weakestTypeClasses.add(lowerBoundClass)[ FD ]
Line_147 $$ if (referenceParent instanceof PsiBinaryExpression) -->Line_150 $$ final PsiType type = binaryExpression.getType()[ CD ]
Line_25 $$ Set<PsiClass> weakestTypeClasses = new HashSet<PsiClass>()-->Line_39 $$ if (!findWeakestType(methodCallExpression, weakestTypeClasses)) [ FD ]
Line_117 $$ if (referenceParent instanceof PsiReferenceExpression) -->Line_126 $$ checkClass(containingClass, weakestTypeClasses)[ CD ]
Line_7 $$ variableOrMethodType = variable.getType()-->Line_11 $$ if (PsiType.VOID.equals(variableOrMethodType)) [ FD ]
Line_65 $$ final PsiType type = methodReferenceExpression.getFunctionalInterfaceType()-->Line_144 $$ if (!checkType(type, weakestTypeClasses)) [ FD ]
Line_91 $$ if (!type.isAssignableFrom(variableOrMethodType) || !checkType(type, weakestTypeClasses)) -->Line_92 $$ return Collections.emptyList()[ CD ]
Line_184 $$ final PsiClass innerClass = classType.resolve()-->Line_185 $$ if (innerClass == null) [ FD ]
Line_83 $$ if (referenceParent instanceof PsiAssignmentExpression) -->Line_85 $$ if (!findWeakestType(referenceElement, assignmentExpression, useRighthandTypeAsWeakestTypeInAssignments, weakestTypeClasses)) [ CD ]
Line_188 $$ final PsiClass outerClass = innerClass.getContainingClass()-->Line_190 $$ checkClass(outerClass, weakestTypeClasses)[ FD ]
Line_104 $$ if (referenceParent instanceof PsiReturnStatement) -->Line_114 $$ if (!checkType(type, weakestTypeClasses)) [ CD ]
Line_151 $$ if (variableOrMethodType.equals(type)) -->Line_152 $$ if (!checkType(type, weakestTypeClasses)) [ CD ]
Line_107 $$ if (owner instanceof PsiMethod) -->Line_109 $$ if (owner instanceof PsiLambdaExpression) [ CD ]
Line_84 $$ final PsiAssignmentExpression assignmentExpression = (PsiAssignmentExpression) referenceParent-->Line_85 $$ if (!findWeakestType(referenceElement, assignmentExpression, useRighthandTypeAsWeakestTypeInAssignments, weakestTypeClasses)) [ FD ]
Line_64 $$ final PsiMethodReferenceExpression methodReferenceExpression = (PsiMethodReferenceExpression) reference-->Line_65 $$ final PsiType type = methodReferenceExpression.getFunctionalInterfaceType()[ FD ]
Line_28 $$ final PsiClass lowerBoundClass-->Line_47 $$ weakestTypeClasses.add(lowerBoundClass)[ FD ]
Line_194 $$ if (weakestTypeClasses.contains(variableOrMethodClass) || weakestTypeClasses.isEmpty()) -->Line_195 $$ return Collections.emptyList()[ CD ]
Line_132 $$ if (referenceParent instanceof PsiThrowStatement) -->Line_133 $$ final PsiThrowStatement throwStatement = (PsiThrowStatement) referenceParent[ CD ]
Line_6 $$ final PsiVariable variable = (PsiVariable) variableOrMethod-->Line_7 $$ variableOrMethodType = variable.getType()[ FD ]
Line_70 $$ if (referenceParent instanceof PsiExpressionList) -->Line_75 $$ if (!findWeakestType(referenceElement, methodCallExpression, useParameterizedTypeForCollectionMethods, weakestTypeClasses)) [ CD ]
Line_25 $$ Set<PsiClass> weakestTypeClasses = new HashSet<PsiClass>()-->Line_134 $$ if (!findWeakestType(throwStatement, variableOrMethodClass, weakestTypeClasses)) [ FD ]
Line_60 $$ referenceParent = referenceElement.getParent()-->Line_156 $$ if (referenceParent instanceof PsiSwitchStatement) [ FD ]
Line_127 $$ if (referenceParent instanceof PsiArrayInitializerExpression) -->Line_132 $$ if (referenceParent instanceof PsiThrowStatement) [ CD ]
Line_25 $$ Set<PsiClass> weakestTypeClasses = new HashSet<PsiClass>()-->Line_129 $$ if (!findWeakestType(arrayInitializerExpression, weakestTypeClasses)) [ FD ]
Line_60 $$ referenceParent = referenceElement.getParent()-->Line_167 $$ if (referenceParent instanceof PsiIfStatement) [ FD ]
Line_57 $$ PsiElement referenceParent = referenceElement.getParent()-->Line_117 $$ if (referenceParent instanceof PsiReferenceExpression) [ FD ]
Line_159 $$ if (referenceParent instanceof PsiPrefixExpression) -->Line_163 $$ if (referenceParent instanceof PsiPostfixExpression) [ CD ]
Line_147 $$ if (referenceParent instanceof PsiBinaryExpression) -->Line_151 $$ if (variableOrMethodType.equals(type)) [ CD ]
Line_63 $$ if (reference instanceof PsiMethodReferenceExpression) -->Line_66 $$ final PsiType returnType = LambdaUtil.getFunctionalInterfaceReturnType(type)[ CD ]
Line_43 $$ lowerBoundClass = facade.findClass(CommonClassNames.JAVA_LANG_OBJECT, scope)-->Line_47 $$ weakestTypeClasses.add(lowerBoundClass)[ FD ]
Line_63 $$ if (reference instanceof PsiMethodReferenceExpression) -->Line_70 $$ if (referenceParent instanceof PsiExpressionList) [ CD ]
Line_44 $$ if (lowerBoundClass == null || variableOrMethodClass.equals(lowerBoundClass)) -->Line_45 $$ return Collections.emptyList()[ CD ]
Line_178 $$ if (qualifier != null) -->Line_188 $$ final PsiClass outerClass = innerClass.getContainingClass()[ CD ]
Line_180 $$ if (!(type instanceof PsiClassType)) -->Line_181 $$ return Collections.emptyList()[ CD ]
Line_65 $$ final PsiType type = methodReferenceExpression.getFunctionalInterfaceType()-->Line_151 $$ if (variableOrMethodType.equals(type)) [ FD ]
Line_31 $$ if (lowerBoundClass == null || variableOrMethodClass.equals(lowerBoundClass)) -->Line_32 $$ return Collections.emptyList()[ CD ]
Line_198 $$ if (!hasUsages) -->Line_199 $$ return Collections.emptyList()[ CD ]
Line_8 $$ if (variableOrMethod instanceof PsiMethod) -->Line_9 $$ final PsiMethod method = (PsiMethod) variableOrMethod[ CD ]
Line_94 $$ if (referenceParent instanceof PsiForeachStatement) -->Line_103 $$ checkClass(javaLangIterableClass, weakestTypeClasses)[ CD ]
Line_10 $$ variableOrMethodType = method.getReturnType()-->Line_151 $$ if (variableOrMethodType.equals(type)) [ FD ]
Line_65 $$ final PsiType type = methodReferenceExpression.getFunctionalInterfaceType()-->Line_66 $$ final PsiType returnType = LambdaUtil.getFunctionalInterfaceReturnType(type)[ FD ]
Line_7 $$ variableOrMethodType = variable.getType()-->Line_91 $$ if (!type.isAssignableFrom(variableOrMethodType) || !checkType(type, weakestTypeClasses)) [ FD ]
Line_128 $$ final PsiArrayInitializerExpression arrayInitializerExpression = (PsiArrayInitializerExpression) referenceParent-->Line_129 $$ if (!findWeakestType(arrayInitializerExpression, weakestTypeClasses)) [ FD ]
Line_137 $$ if (referenceParent instanceof PsiConditionalExpression) -->Line_139 $$ final PsiExpression condition = conditionalExpression.getCondition()[ CD ]
Line_117 $$ if (referenceParent instanceof PsiReferenceExpression) -->Line_125 $$ final PsiClass containingClass = field.getContainingClass()[ CD ]
Line_57 $$ PsiElement referenceParent = referenceElement.getParent()-->Line_127 $$ if (referenceParent instanceof PsiArrayInitializerExpression) [ FD ]
