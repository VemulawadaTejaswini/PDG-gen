Line_4 $$ long curPos = 0, blkSize = 0-->Line_20 $$ results.add(createLocatedBlock(blocks[curBlk], curPos, mode))[ FD ]
Line_4 $$ long curPos = 0, blkSize = 0-->Line_21 $$ curPos += blocks[curBlk].getNumBytes()[ FD ]
Line_18 $$ List<LocatedBlock> results = new ArrayList<LocatedBlock>(blocks.length)-->Line_19 $$ do [ FD ]
Line_12 $$ curPos += blkSize-->Line_20 $$ results.add(createLocatedBlock(blocks[curBlk], curPos, mode))[ FD ]
Line_6 $$ for (curBlk = 0; curBlk < nrBlocks; curBlk++) -->Line_22 $$ curBlk++[ FD ]
Line_2 $$ private List<LocatedBlock> createLocatedBlockList(final BlockInfo[] blocks, final long offset, final long length, final int nrBlocksToReturn, final AccessMode mode) throws IOException -->Line_17 $$ long endOff = offset + length[ CD ]
Line_6 $$ for (curBlk = 0; curBlk < nrBlocks; curBlk++) -->Line_7 $$ blkSize = blocks[curBlk].getNumBytes()[ CD ]
Line_2 $$ private List<LocatedBlock> createLocatedBlockList(final BlockInfo[] blocks, final long offset, final long length, final int nrBlocksToReturn, final AccessMode mode) throws IOException -->Line_19 $$ do [ CD ]
Line_3 $$ int curBlk = 0-->Line_6 $$ for (curBlk = 0; curBlk < nrBlocks; curBlk++) [ FD ]
Line_18 $$ List<LocatedBlock> results = new ArrayList<LocatedBlock>(blocks.length)-->Line_20 $$ results.add(createLocatedBlock(blocks[curBlk], curPos, mode))[ FD ]
Line_2 $$ private List<LocatedBlock> createLocatedBlockList(final BlockInfo[] blocks, final long offset, final long length, final int nrBlocksToReturn, final AccessMode mode) throws IOException -->Line_18 $$ List<LocatedBlock> results = new ArrayList<LocatedBlock>(blocks.length)[ CD ]
Line_2 $$ private List<LocatedBlock> createLocatedBlockList(final BlockInfo[] blocks, final long offset, final long length, final int nrBlocksToReturn, final AccessMode mode) throws IOException -->Line_6 $$ for (curBlk = 0; curBlk < nrBlocks; curBlk++) [ CD ]
Line_7 $$ blkSize = blocks[curBlk].getNumBytes()-->Line_12 $$ curPos += blkSize[ FD ]
Line_12 $$ curPos += blkSize-->Line_21 $$ curPos += blocks[curBlk].getNumBytes()[ FD ]
Line_4 $$ long curPos = 0, blkSize = 0-->Line_7 $$ blkSize = blocks[curBlk].getNumBytes()[ FD ]
Line_2 $$ private List<LocatedBlock> createLocatedBlockList(final BlockInfo[] blocks, final long offset, final long length, final int nrBlocksToReturn, final AccessMode mode) throws IOException -->Line_4 $$ long curPos = 0, blkSize = 0[ CD ]
Line_2 $$ private List<LocatedBlock> createLocatedBlockList(final BlockInfo[] blocks, final long offset, final long length, final int nrBlocksToReturn, final AccessMode mode) throws IOException -->Line_24 $$ return results[ CD ]
Line_6 $$ for (curBlk = 0; curBlk < nrBlocks; curBlk++) -->Line_9 $$ if (curPos + blkSize > offset) [ CD ]
Line_19 $$ do -->Line_21 $$ curPos += blocks[curBlk].getNumBytes()[ CD ]
Line_14 $$ if (// offset >= end of file-->Line_16 $$ return Collections.<LocatedBlock>emptyList()[ CD ]
Line_2 $$ private List<LocatedBlock> createLocatedBlockList(final BlockInfo[] blocks, final long offset, final long length, final int nrBlocksToReturn, final AccessMode mode) throws IOException -->Line_20 $$ results.add(createLocatedBlock(blocks[curBlk], curPos, mode))[ FD ]
Line_21 $$ curPos += blocks[curBlk].getNumBytes()-->Line_20 $$ results.add(createLocatedBlock(blocks[curBlk], curPos, mode))[ FD ]
Line_3 $$ int curBlk = 0-->Line_22 $$ curBlk++[ FD ]
Line_2 $$ private List<LocatedBlock> createLocatedBlockList(final BlockInfo[] blocks, final long offset, final long length, final int nrBlocksToReturn, final AccessMode mode) throws IOException -->Line_9 $$ if (curPos + blkSize > offset) [ FD ]
Line_2 $$ private List<LocatedBlock> createLocatedBlockList(final BlockInfo[] blocks, final long offset, final long length, final int nrBlocksToReturn, final AccessMode mode) throws IOException -->Line_3 $$ int curBlk = 0[ CD ]
Line_5 $$ int nrBlocks = (blocks[0].getNumBytes() == 0) ? 0 : blocks.length-->Line_6 $$ for (curBlk = 0; curBlk < nrBlocks; curBlk++) [ FD ]
Line_19 $$ do -->Line_20 $$ results.add(createLocatedBlock(blocks[curBlk], curPos, mode))[ CD ]
Line_2 $$ private List<LocatedBlock> createLocatedBlockList(final BlockInfo[] blocks, final long offset, final long length, final int nrBlocksToReturn, final AccessMode mode) throws IOException -->Line_5 $$ int nrBlocks = (blocks[0].getNumBytes() == 0) ? 0 : blocks.length[ CD ]
Line_6 $$ for (curBlk = 0; curBlk < nrBlocks; curBlk++) -->Line_12 $$ curPos += blkSize[ CD ]
Line_2 $$ private List<LocatedBlock> createLocatedBlockList(final BlockInfo[] blocks, final long offset, final long length, final int nrBlocksToReturn, final AccessMode mode) throws IOException -->Line_14 $$ if (// offset >= end of file[ CD ]
Line_19 $$ do -->Line_22 $$ curBlk++[ CD ]
Line_4 $$ long curPos = 0, blkSize = 0-->Line_12 $$ curPos += blkSize[ FD ]
