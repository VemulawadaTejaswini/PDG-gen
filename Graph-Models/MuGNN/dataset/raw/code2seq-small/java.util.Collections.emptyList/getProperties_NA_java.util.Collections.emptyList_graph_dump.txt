Line_2 $$ public Iterable<PsiVariable> getProperties(final String classQname) -->Line_8 $$ return propertyElement.getPsi(PsiManager.getInstance(myProject), classQname)[ FD ]
Line_2 $$ public Iterable<PsiVariable> getProperties(final String classQname) -->Line_3 $$ DClassElement classElement = getRootElement().getClassElement(classQname)[ CD ]
Line_6 $$ return ContainerUtil.map(classElement.getProperties(), new Function<DPropertyElement, PsiVariable>() -->Line_8 $$ return propertyElement.getPsi(PsiManager.getInstance(myProject), classQname)[ FD ]
Line_2 $$ public Iterable<PsiVariable> getProperties(final String classQname) -->Line_3 $$ DClassElement classElement = getRootElement().getClassElement(classQname)[ FD ]
Line_4 $$ if (classElement == null)-->Line_5 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public Iterable<PsiVariable> getProperties(final String classQname) -->Line_4 $$ if (classElement == null)[ CD ]
Line_2 $$ public Iterable<PsiVariable> getProperties(final String classQname) -->Line_6 $$ return ContainerUtil.map(classElement.getProperties(), new Function<DPropertyElement, PsiVariable>() [ CD ]
Line_6 $$ return ContainerUtil.map(classElement.getProperties(), new Function<DPropertyElement, PsiVariable>() -->Line_8 $$ return propertyElement.getPsi(PsiManager.getInstance(myProject), classQname)[ CD ]
Line_3 $$ DClassElement classElement = getRootElement().getClassElement(classQname)-->Line_6 $$ return ContainerUtil.map(classElement.getProperties(), new Function<DPropertyElement, PsiVariable>() [ FD ]
Line_3 $$ DClassElement classElement = getRootElement().getClassElement(classQname)-->Line_4 $$ if (classElement == null)[ FD ]
