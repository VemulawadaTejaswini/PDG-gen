Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_20 $$ Object[] finderArgs = null[ CD ]
Line_20 $$ Object[] finderArgs = null-->Line_29 $$ list = (List<ResourcePermission>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs, this)[ FD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_83 $$ qPos.add(name)[ FD ]
Line_10 $$ ResourcePermission resourcePermission = fetchByC_N_S_P_R(companyId, name, scope, primKey, roleIds[0])-->Line_11 $$ if (resourcePermission == null) [ FD ]
Line_21 $$ if ((start == QueryUtil.ALL_POS) && (end == QueryUtil.ALL_POS) && (orderByComparator == null)) -->Line_22 $$ pagination = false[ CD ]
Line_92 $$ list = Collections.unmodifiableList(list)-->Line_96 $$ cacheResult(list)[ FD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_41 $$ query.append(_SQL_SELECT_RESOURCEPERMISSION_WHERE)[ FD ]
Line_25 $$ finderArgs = new Object[] -->Line_99 $$ finderCache.removeResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs)[ FD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_71 $$ appendOrderByComparator(query, _ORDER_BY_ENTITY_ALIAS, orderByComparator)[ FD ]
Line_76 $$ Session session = null-->Line_78 $$ session = openSession()[ FD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_105 $$ return list[ CD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_47 $$ query.append(_FINDER_COLUMN_C_N_S_P_R_NAME_3)[ FD ]
Line_90 $$ list = (List<ResourcePermission>) QueryUtil.list(q, getDialect(), start, end, false)-->Line_97 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs, list)[ FD ]
Line_11 $$ if (resourcePermission == null) -->Line_16 $$ return list[ CD ]
Line_76 $$ Session session = null-->Line_102 $$ closeSession(session)[ FD ]
Line_29 $$ list = (List<ResourcePermission>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs, this)-->Line_92 $$ list = Collections.unmodifiableList(list)[ FD ]
Line_23 $$ finderArgs = new Object[] -->Line_25 $$ finderArgs = new Object[] [ FD ]
Line_11 $$ if (resourcePermission == null) -->Line_12 $$ return Collections.emptyList()[ CD ]
Line_92 $$ list = Collections.unmodifiableList(list)-->Line_94 $$ list = (List<ResourcePermission>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_79 $$ Query q = session.createQuery(sql)-->Line_80 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_43 $$ boolean bindName = false-->Line_49 $$ bindName = true[ FD ]
Line_28 $$ if (retrieveFromCache) -->Line_29 $$ list = (List<ResourcePermission>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs, this)[ CD ]
Line_80 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_85 $$ qPos.add(scope)[ FD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_19 $$ boolean pagination = true[ CD ]
Line_11 $$ if (resourcePermission == null) -->Line_14 $$ List<ResourcePermission> list = new ArrayList<ResourcePermission>(1)[ CD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_67 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_22 $$ pagination = false-->Line_70 $$ if (orderByComparator != null) [ FD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_73 $$ query.append(ResourcePermissionModelImpl.ORDER_BY_JPQL)[ FD ]
Line_62 $$ if (roleIds.length > 0) -->Line_63 $$ query.append(StringPool.OPEN_PARENTHESIS)[ CD ]
Line_62 $$ if (roleIds.length > 0) -->Line_66 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_29 $$ list = (List<ResourcePermission>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs, this)-->Line_96 $$ cacheResult(list)[ FD ]
Line_14 $$ List<ResourcePermission> list = new ArrayList<ResourcePermission>(1)-->Line_15 $$ list.add(resourcePermission)[ FD ]
Line_82 $$ if (bindName) -->Line_83 $$ qPos.add(name)[ CD ]
Line_39 $$ if (list == null) -->Line_69 $$ query.setStringAt(removeConjunction(query.stringAt(query.index() - 1)), query.index() - 1)[ CD ]
Line_94 $$ list = (List<ResourcePermission>) QueryUtil.list(q, getDialect(), start, end)-->Line_97 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs, list)[ FD ]
Line_4 $$ roleIds = new long[0]-->Line_32 $$ if ((companyId != resourcePermission.getCompanyId()) || !Validator.equals(name, resourcePermission.getName()) || (scope != resourcePermission.getScope()) || !Validator.equals(primKey, resourcePermission.getPrimKey()) || !ArrayUtil.contains(roleIds, resourcePermission.getRoleId())) [ FD ]
Line_4 $$ roleIds = new long[0]-->Line_6 $$ roleIds = ArrayUtil.unique(roleIds)[ FD ]
Line_33 $$ list = null-->Line_91 $$ Collections.sort(list)[ FD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_23 $$ finderArgs = new Object[] [ FD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_55 $$ query.append(_FINDER_COLUMN_C_N_S_P_R_PRIMKEY_1)[ FD ]
Line_39 $$ if (list == null) -->Line_41 $$ query.append(_SQL_SELECT_RESOURCEPERMISSION_WHERE)[ CD ]
Line_80 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_87 $$ qPos.add(primKey)[ FD ]
Line_14 $$ List<ResourcePermission> list = new ArrayList<ResourcePermission>(1)-->Line_30 $$ if ((list != null) && !list.isEmpty()) [ FD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_75 $$ String sql = query.toString()[ FD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_85 $$ qPos.add(scope)[ FD ]
Line_25 $$ finderArgs = new Object[] -->Line_97 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs, list)[ FD ]
Line_10 $$ ResourcePermission resourcePermission = fetchByC_N_S_P_R(companyId, name, scope, primKey, roleIds[0])-->Line_32 $$ if ((companyId != resourcePermission.getCompanyId()) || !Validator.equals(name, resourcePermission.getName()) || (scope != resourcePermission.getScope()) || !Validator.equals(primKey, resourcePermission.getPrimKey()) || !ArrayUtil.contains(roleIds, resourcePermission.getRoleId())) [ FD ]
Line_21 $$ if ((start == QueryUtil.ALL_POS) && (end == QueryUtil.ALL_POS) && (orderByComparator == null)) -->Line_23 $$ finderArgs = new Object[] [ CD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_21 $$ if ((start == QueryUtil.ALL_POS) && (end == QueryUtil.ALL_POS) && (orderByComparator == null)) [ CD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_66 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_70 $$ if (orderByComparator != null) [ FD ]
Line_29 $$ list = (List<ResourcePermission>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs, this)-->Line_94 $$ list = (List<ResourcePermission>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_54 $$ if (primKey == null) [ FD ]
Line_19 $$ boolean pagination = true-->Line_70 $$ if (orderByComparator != null) [ FD ]
Line_90 $$ list = (List<ResourcePermission>) QueryUtil.list(q, getDialect(), start, end, false)-->Line_92 $$ list = Collections.unmodifiableList(list)[ FD ]
Line_9 $$ if (roleIds.length == 1) -->Line_11 $$ if (resourcePermission == null) [ CD ]
Line_22 $$ pagination = false-->Line_89 $$ if (!pagination) [ FD ]
Line_39 $$ if (list == null) -->Line_44 $$ if (name == null) [ CD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_87 $$ qPos.add(primKey)[ FD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_25 $$ finderArgs = new Object[] [ FD ]
Line_62 $$ if (roleIds.length > 0) -->Line_64 $$ query.append(_FINDER_COLUMN_C_N_S_P_R_ROLEID_7)[ CD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_56 $$ if (primKey.equals(StringPool.BLANK)) [ FD ]
Line_56 $$ if (primKey.equals(StringPool.BLANK)) -->Line_60 $$ query.append(_FINDER_COLUMN_C_N_S_P_R_PRIMKEY_2)[ CD ]
Line_44 $$ if (name == null) -->Line_46 $$ if (name.equals(StringPool.BLANK)) [ CD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_3 $$ if (roleIds == null) [ CD ]
Line_39 $$ if (list == null) -->Line_40 $$ StringBundler query = new StringBundler()[ CD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_81 $$ qPos.add(companyId)[ FD ]
Line_94 $$ list = (List<ResourcePermission>) QueryUtil.list(q, getDialect(), start, end)-->Line_96 $$ cacheResult(list)[ FD ]
Line_53 $$ boolean bindPrimKey = false-->Line_59 $$ bindPrimKey = true[ FD ]
Line_33 $$ list = null-->Line_97 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs, list)[ FD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_60 $$ query.append(_FINDER_COLUMN_C_N_S_P_R_PRIMKEY_2)[ FD ]
Line_14 $$ List<ResourcePermission> list = new ArrayList<ResourcePermission>(1)-->Line_91 $$ Collections.sort(list)[ FD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_45 $$ query.append(_FINDER_COLUMN_C_N_S_P_R_NAME_1)[ FD ]
Line_70 $$ if (orderByComparator != null) -->Line_72 $$ if (pagination) [ CD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_10 $$ ResourcePermission resourcePermission = fetchByC_N_S_P_R(companyId, name, scope, primKey, roleIds[0])[ FD ]
Line_33 $$ list = null-->Line_90 $$ list = (List<ResourcePermission>) QueryUtil.list(q, getDialect(), start, end, false)[ FD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_64 $$ query.append(_FINDER_COLUMN_C_N_S_P_R_ROLEID_7)[ FD ]
Line_39 $$ if (list == null) -->Line_54 $$ if (primKey == null) [ CD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_65 $$ query.append(StringUtil.merge(roleIds))[ FD ]
Line_90 $$ list = (List<ResourcePermission>) QueryUtil.list(q, getDialect(), start, end, false)-->Line_96 $$ cacheResult(list)[ FD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_69 $$ query.setStringAt(removeConjunction(query.stringAt(query.index() - 1)), query.index() - 1)[ FD ]
Line_80 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_83 $$ qPos.add(name)[ FD ]
Line_39 $$ if (list == null) -->Line_53 $$ boolean bindPrimKey = false[ CD ]
Line_29 $$ list = (List<ResourcePermission>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs, this)-->Line_90 $$ list = (List<ResourcePermission>) QueryUtil.list(q, getDialect(), start, end, false)[ FD ]
Line_54 $$ if (primKey == null) -->Line_56 $$ if (primKey.equals(StringPool.BLANK)) [ CD ]
Line_80 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_81 $$ qPos.add(companyId)[ FD ]
Line_39 $$ if (list == null) -->Line_76 $$ Session session = null[ CD ]
Line_54 $$ if (primKey == null) -->Line_55 $$ query.append(_FINDER_COLUMN_C_N_S_P_R_PRIMKEY_1)[ CD ]
Line_14 $$ List<ResourcePermission> list = new ArrayList<ResourcePermission>(1)-->Line_92 $$ list = Collections.unmodifiableList(list)[ FD ]
Line_89 $$ if (!pagination) -->Line_92 $$ list = Collections.unmodifiableList(list)[ CD ]
Line_14 $$ List<ResourcePermission> list = new ArrayList<ResourcePermission>(1)-->Line_90 $$ list = (List<ResourcePermission>) QueryUtil.list(q, getDialect(), start, end, false)[ FD ]
Line_78 $$ session = openSession()-->Line_79 $$ Query q = session.createQuery(sql)[ FD ]
Line_4 $$ roleIds = new long[0]-->Line_65 $$ query.append(StringUtil.merge(roleIds))[ FD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_46 $$ if (name.equals(StringPool.BLANK)) [ FD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_9 $$ if (roleIds.length == 1) [ CD ]
Line_39 $$ if (list == null) -->Line_62 $$ if (roleIds.length > 0) [ CD ]
Line_23 $$ finderArgs = new Object[] -->Line_97 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs, list)[ FD ]
Line_20 $$ Object[] finderArgs = null-->Line_23 $$ finderArgs = new Object[] [ FD ]
Line_29 $$ list = (List<ResourcePermission>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs, this)-->Line_91 $$ Collections.sort(list)[ FD ]
Line_14 $$ List<ResourcePermission> list = new ArrayList<ResourcePermission>(1)-->Line_94 $$ list = (List<ResourcePermission>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_20 $$ Object[] finderArgs = null-->Line_25 $$ finderArgs = new Object[] [ FD ]
Line_70 $$ if (orderByComparator != null) -->Line_71 $$ appendOrderByComparator(query, _ORDER_BY_ENTITY_ALIAS, orderByComparator)[ CD ]
Line_86 $$ if (bindPrimKey) -->Line_87 $$ qPos.add(primKey)[ CD ]
Line_19 $$ boolean pagination = true-->Line_89 $$ if (!pagination) [ FD ]
Line_3 $$ if (roleIds == null) -->Line_5 $$ if (roleIds.length > 1) [ CD ]
Line_6 $$ roleIds = ArrayUtil.unique(roleIds)-->Line_23 $$ finderArgs = new Object[] [ FD ]
Line_6 $$ roleIds = ArrayUtil.unique(roleIds)-->Line_7 $$ Arrays.sort(roleIds)[ FD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_32 $$ if ((companyId != resourcePermission.getCompanyId()) || !Validator.equals(name, resourcePermission.getName()) || (scope != resourcePermission.getScope()) || !Validator.equals(primKey, resourcePermission.getPrimKey()) || !ArrayUtil.contains(roleIds, resourcePermission.getRoleId())) [ FD ]
Line_56 $$ if (primKey.equals(StringPool.BLANK)) -->Line_57 $$ query.append(_FINDER_COLUMN_C_N_S_P_R_PRIMKEY_3)[ CD ]
Line_6 $$ roleIds = ArrayUtil.unique(roleIds)-->Line_65 $$ query.append(StringUtil.merge(roleIds))[ FD ]
Line_25 $$ finderArgs = new Object[] -->Line_29 $$ list = (List<ResourcePermission>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs, this)[ FD ]
Line_62 $$ if (roleIds.length > 0) -->Line_65 $$ query.append(StringUtil.merge(roleIds))[ CD ]
Line_14 $$ List<ResourcePermission> list = new ArrayList<ResourcePermission>(1)-->Line_97 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs, list)[ FD ]
Line_23 $$ finderArgs = new Object[] -->Line_29 $$ list = (List<ResourcePermission>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs, this)[ FD ]
Line_3 $$ if (roleIds == null) -->Line_4 $$ roleIds = new long[0][ CD ]
Line_33 $$ list = null-->Line_39 $$ if (list == null) [ FD ]
Line_20 $$ Object[] finderArgs = null-->Line_97 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs, list)[ FD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_28 $$ if (retrieveFromCache) [ CD ]
Line_39 $$ if (list == null) -->Line_52 $$ query.append(_FINDER_COLUMN_C_N_S_P_R_SCOPE_2)[ CD ]
Line_29 $$ list = (List<ResourcePermission>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs, this)-->Line_33 $$ list = null[ FD ]
Line_14 $$ List<ResourcePermission> list = new ArrayList<ResourcePermission>(1)-->Line_33 $$ list = null[ FD ]
Line_39 $$ if (list == null) -->Line_75 $$ String sql = query.toString()[ CD ]
Line_19 $$ boolean pagination = true-->Line_22 $$ pagination = false[ FD ]
Line_39 $$ if (list == null) -->Line_70 $$ if (orderByComparator != null) [ CD ]
Line_32 $$ if ((companyId != resourcePermission.getCompanyId()) || !Validator.equals(name, resourcePermission.getName()) || (scope != resourcePermission.getScope()) || !Validator.equals(primKey, resourcePermission.getPrimKey()) || !ArrayUtil.contains(roleIds, resourcePermission.getRoleId())) -->Line_33 $$ list = null[ CD ]
Line_4 $$ roleIds = new long[0]-->Line_23 $$ finderArgs = new Object[] [ FD ]
Line_5 $$ if (roleIds.length > 1) -->Line_6 $$ roleIds = ArrayUtil.unique(roleIds)[ CD ]
Line_90 $$ list = (List<ResourcePermission>) QueryUtil.list(q, getDialect(), start, end, false)-->Line_91 $$ Collections.sort(list)[ FD ]
Line_89 $$ if (!pagination) -->Line_91 $$ Collections.sort(list)[ CD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_94 $$ list = (List<ResourcePermission>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_72 $$ if (pagination) -->Line_73 $$ query.append(ResourcePermissionModelImpl.ORDER_BY_JPQL)[ CD ]
Line_14 $$ List<ResourcePermission> list = new ArrayList<ResourcePermission>(1)-->Line_39 $$ if (list == null) [ FD ]
Line_33 $$ list = null-->Line_92 $$ list = Collections.unmodifiableList(list)[ FD ]
Line_29 $$ list = (List<ResourcePermission>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs, this)-->Line_30 $$ if ((list != null) && !list.isEmpty()) [ FD ]
Line_20 $$ Object[] finderArgs = null-->Line_99 $$ finderCache.removeResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs)[ FD ]
Line_79 $$ Query q = session.createQuery(sql)-->Line_90 $$ list = (List<ResourcePermission>) QueryUtil.list(q, getDialect(), start, end, false)[ FD ]
Line_79 $$ Query q = session.createQuery(sql)-->Line_94 $$ list = (List<ResourcePermission>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_39 $$ if (list == null) [ CD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_7 $$ Arrays.sort(roleIds)[ FD ]
Line_39 $$ if (list == null) -->Line_42 $$ query.append(_FINDER_COLUMN_C_N_S_P_R_COMPANYID_2)[ CD ]
Line_39 $$ if (list == null) -->Line_43 $$ boolean bindName = false[ CD ]
Line_46 $$ if (name.equals(StringPool.BLANK)) -->Line_50 $$ query.append(_FINDER_COLUMN_C_N_S_P_R_NAME_2)[ CD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_3 $$ if (roleIds == null) [ FD ]
Line_9 $$ if (roleIds.length == 1) -->Line_10 $$ ResourcePermission resourcePermission = fetchByC_N_S_P_R(companyId, name, scope, primKey, roleIds[0])[ CD ]
Line_14 $$ List<ResourcePermission> list = new ArrayList<ResourcePermission>(1)-->Line_29 $$ list = (List<ResourcePermission>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs, this)[ FD ]
Line_46 $$ if (name.equals(StringPool.BLANK)) -->Line_47 $$ query.append(_FINDER_COLUMN_C_N_S_P_R_NAME_3)[ CD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_57 $$ query.append(_FINDER_COLUMN_C_N_S_P_R_PRIMKEY_3)[ FD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_63 $$ query.append(StringPool.OPEN_PARENTHESIS)[ FD ]
Line_33 $$ list = null-->Line_96 $$ cacheResult(list)[ FD ]
Line_6 $$ roleIds = ArrayUtil.unique(roleIds)-->Line_32 $$ if ((companyId != resourcePermission.getCompanyId()) || !Validator.equals(name, resourcePermission.getName()) || (scope != resourcePermission.getScope()) || !Validator.equals(primKey, resourcePermission.getPrimKey()) || !ArrayUtil.contains(roleIds, resourcePermission.getRoleId())) [ FD ]
Line_33 $$ list = null-->Line_94 $$ list = (List<ResourcePermission>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_29 $$ list = (List<ResourcePermission>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs, this)-->Line_97 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs, list)[ FD ]
Line_89 $$ if (!pagination) -->Line_90 $$ list = (List<ResourcePermission>) QueryUtil.list(q, getDialect(), start, end, false)[ CD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_6 $$ roleIds = ArrayUtil.unique(roleIds)[ FD ]
Line_89 $$ if (!pagination) -->Line_94 $$ list = (List<ResourcePermission>) QueryUtil.list(q, getDialect(), start, end)[ CD ]
Line_78 $$ session = openSession()-->Line_102 $$ closeSession(session)[ FD ]
Line_56 $$ if (primKey.equals(StringPool.BLANK)) -->Line_59 $$ bindPrimKey = true[ CD ]
Line_76 $$ Session session = null-->Line_79 $$ Query q = session.createQuery(sql)[ FD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_50 $$ query.append(_FINDER_COLUMN_C_N_S_P_R_NAME_2)[ FD ]
Line_4 $$ roleIds = new long[0]-->Line_7 $$ Arrays.sort(roleIds)[ FD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_90 $$ list = (List<ResourcePermission>) QueryUtil.list(q, getDialect(), start, end, false)[ FD ]
Line_75 $$ String sql = query.toString()-->Line_79 $$ Query q = session.createQuery(sql)[ FD ]
Line_28 $$ if (retrieveFromCache) -->Line_30 $$ if ((list != null) && !list.isEmpty()) [ CD ]
Line_90 $$ list = (List<ResourcePermission>) QueryUtil.list(q, getDialect(), start, end, false)-->Line_94 $$ list = (List<ResourcePermission>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_65 $$ query.append(StringUtil.merge(roleIds))[ FD ]
Line_92 $$ list = Collections.unmodifiableList(list)-->Line_97 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs, list)[ FD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_44 $$ if (name == null) [ FD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_52 $$ query.append(_FINDER_COLUMN_C_N_S_P_R_SCOPE_2)[ FD ]
Line_5 $$ if (roleIds.length > 1) -->Line_7 $$ Arrays.sort(roleIds)[ CD ]
Line_44 $$ if (name == null) -->Line_45 $$ query.append(_FINDER_COLUMN_C_N_S_P_R_NAME_1)[ CD ]
Line_2 $$ public List<ResourcePermission> findByC_N_S_P_R(long companyId, String name, int scope, String primKey, long[] roleIds, int start, int end, OrderByComparator<ResourcePermission> orderByComparator, boolean retrieveFromCache) -->Line_4 $$ roleIds = new long[0][ FD ]
Line_6 $$ roleIds = ArrayUtil.unique(roleIds)-->Line_25 $$ finderArgs = new Object[] [ FD ]
Line_21 $$ if ((start == QueryUtil.ALL_POS) && (end == QueryUtil.ALL_POS) && (orderByComparator == null)) -->Line_25 $$ finderArgs = new Object[] [ CD ]
Line_62 $$ if (roleIds.length > 0) -->Line_67 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_10 $$ ResourcePermission resourcePermission = fetchByC_N_S_P_R(companyId, name, scope, primKey, roleIds[0])-->Line_15 $$ list.add(resourcePermission)[ FD ]
Line_23 $$ finderArgs = new Object[] -->Line_99 $$ finderCache.removeResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs)[ FD ]
Line_29 $$ list = (List<ResourcePermission>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_N_S_P_R, finderArgs, this)-->Line_39 $$ if (list == null) [ FD ]
Line_14 $$ List<ResourcePermission> list = new ArrayList<ResourcePermission>(1)-->Line_96 $$ cacheResult(list)[ FD ]
Line_11 $$ if (resourcePermission == null) -->Line_15 $$ list.add(resourcePermission)[ CD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_42 $$ query.append(_FINDER_COLUMN_C_N_S_P_R_COMPANYID_2)[ FD ]
Line_40 $$ StringBundler query = new StringBundler()-->Line_71 $$ appendOrderByComparator(query, _ORDER_BY_ENTITY_ALIAS, orderByComparator)[ FD ]
Line_4 $$ roleIds = new long[0]-->Line_25 $$ finderArgs = new Object[] [ FD ]
Line_46 $$ if (name.equals(StringPool.BLANK)) -->Line_49 $$ bindName = true[ CD ]
