Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_6 $$ boolean hasLock = hasFolderLock(userId, folderId)[ FD ]
Line_15 $$ DLFolder dlFolder = dlFolderPersistence.findByPrimaryKey(folderId)-->Line_33 $$ rebuildTree(dlFolder.getCompanyId(), folderId, dlFolder.getTreePath(), true)[ FD ]
Line_7 $$ Lock lock = null-->Line_9 $$ lock = lockFolder(userId, folderId, null, false, DLFolderImpl.LOCK_EXPIRATION_TIME)[ FD ]
Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_3 $$ if ((restrictionType == DLFolderConstants.RESTRICTION_TYPE_FILE_ENTRY_TYPES_AND_WORKFLOW) && fileEntryTypeIds.isEmpty()) [ CD ]
Line_19 $$ if (oldParentFolderId != parentFolderId) -->Line_20 $$ dlFolder.setParentFolderId(parentFolderId)[ CD ]
Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_32 $$ if (oldParentFolderId != parentFolderId) [ FD ]
Line_19 $$ if (oldParentFolderId != parentFolderId) -->Line_21 $$ dlFolder.setTreePath(dlFolder.buildTreePath())[ CD ]
Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_29 $$ if (fileEntryTypeIds != null) [ FD ]
Line_15 $$ DLFolder dlFolder = dlFolderPersistence.findByPrimaryKey(folderId)-->Line_17 $$ validateFolder(folderId, dlFolder.getGroupId(), parentFolderId, name)[ FD ]
Line_16 $$ parentFolderId = getParentFolderId(dlFolder, parentFolderId)-->Line_19 $$ if (oldParentFolderId != parentFolderId) [ FD ]
Line_15 $$ DLFolder dlFolder = dlFolderPersistence.findByPrimaryKey(folderId)-->Line_26 $$ dlFolder.setRestrictionType(restrictionType)[ FD ]
Line_29 $$ if (fileEntryTypeIds != null) -->Line_30 $$ dlFileEntryTypeLocalService.updateFolderFileEntryTypes(dlFolder, fileEntryTypeIds, defaultFileEntryTypeId, serviceContext)[ CD ]
Line_13 $$ fileEntryTypeIds = Collections.emptyList()-->Line_30 $$ dlFileEntryTypeLocalService.updateFolderFileEntryTypes(dlFolder, fileEntryTypeIds, defaultFileEntryTypeId, serviceContext)[ FD ]
Line_15 $$ DLFolder dlFolder = dlFolderPersistence.findByPrimaryKey(folderId)-->Line_27 $$ dlFolder.setDefaultFileEntryTypeId(defaultFileEntryTypeId)[ FD ]
Line_6 $$ boolean hasLock = hasFolderLock(userId, folderId)-->Line_37 $$ if (!hasLock) [ FD ]
Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_3 $$ if ((restrictionType == DLFolderConstants.RESTRICTION_TYPE_FILE_ENTRY_TYPES_AND_WORKFLOW) && fileEntryTypeIds.isEmpty()) [ FD ]
Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_9 $$ lock = lockFolder(userId, folderId, null, false, DLFolderImpl.LOCK_EXPIRATION_TIME)[ FD ]
Line_16 $$ parentFolderId = getParentFolderId(dlFolder, parentFolderId)-->Line_17 $$ validateFolder(folderId, dlFolder.getGroupId(), parentFolderId, name)[ FD ]
Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_15 $$ DLFolder dlFolder = dlFolderPersistence.findByPrimaryKey(folderId)[ FD ]
Line_15 $$ DLFolder dlFolder = dlFolderPersistence.findByPrimaryKey(folderId)-->Line_16 $$ parentFolderId = getParentFolderId(dlFolder, parentFolderId)[ FD ]
Line_15 $$ DLFolder dlFolder = dlFolderPersistence.findByPrimaryKey(folderId)-->Line_25 $$ dlFolder.setExpandoBridgeAttributes(serviceContext)[ FD ]
Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_25 $$ dlFolder.setExpandoBridgeAttributes(serviceContext)[ FD ]
Line_9 $$ lock = lockFolder(userId, folderId, null, false, DLFolderImpl.LOCK_EXPIRATION_TIME)-->Line_38 $$ unlockFolder(folderId, lock.getUuid())[ FD ]
Line_32 $$ if (oldParentFolderId != parentFolderId) -->Line_33 $$ rebuildTree(dlFolder.getCompanyId(), folderId, dlFolder.getTreePath(), true)[ CD ]
Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_12 $$ if (restrictionType == DLFolderConstants.RESTRICTION_TYPE_INHERIT) [ FD ]
Line_13 $$ fileEntryTypeIds = Collections.emptyList()-->Line_29 $$ if (fileEntryTypeIds != null) [ FD ]
Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_17 $$ validateFolder(folderId, dlFolder.getGroupId(), parentFolderId, name)[ FD ]
Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_27 $$ dlFolder.setDefaultFileEntryTypeId(defaultFileEntryTypeId)[ FD ]
Line_7 $$ Lock lock = null-->Line_38 $$ unlockFolder(folderId, lock.getUuid())[ FD ]
Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_38 $$ unlockFolder(folderId, lock.getUuid())[ FD ]
Line_15 $$ DLFolder dlFolder = dlFolderPersistence.findByPrimaryKey(folderId)-->Line_21 $$ dlFolder.setTreePath(dlFolder.buildTreePath())[ FD ]
Line_6 $$ boolean hasLock = hasFolderLock(userId, folderId)-->Line_8 $$ if (!hasLock) [ FD ]
Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_33 $$ rebuildTree(dlFolder.getCompanyId(), folderId, dlFolder.getTreePath(), true)[ FD ]
Line_37 $$ if (!hasLock) -->Line_38 $$ unlockFolder(folderId, lock.getUuid())[ CD ]
Line_15 $$ DLFolder dlFolder = dlFolderPersistence.findByPrimaryKey(folderId)-->Line_23 $$ dlFolder.setName(name)[ FD ]
Line_16 $$ parentFolderId = getParentFolderId(dlFolder, parentFolderId)-->Line_20 $$ dlFolder.setParentFolderId(parentFolderId)[ FD ]
Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_30 $$ dlFileEntryTypeLocalService.updateFolderFileEntryTypes(dlFolder, fileEntryTypeIds, defaultFileEntryTypeId, serviceContext)[ FD ]
Line_12 $$ if (restrictionType == DLFolderConstants.RESTRICTION_TYPE_INHERIT) -->Line_13 $$ fileEntryTypeIds = Collections.emptyList()[ CD ]
Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_19 $$ if (oldParentFolderId != parentFolderId) [ FD ]
Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_23 $$ dlFolder.setName(name)[ FD ]
Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_13 $$ fileEntryTypeIds = Collections.emptyList()[ FD ]
Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_26 $$ dlFolder.setRestrictionType(restrictionType)[ FD ]
Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_8 $$ if (!hasLock) [ CD ]
Line_15 $$ DLFolder dlFolder = dlFolderPersistence.findByPrimaryKey(folderId)-->Line_18 $$ long oldParentFolderId = dlFolder.getParentFolderId()[ FD ]
Line_15 $$ DLFolder dlFolder = dlFolderPersistence.findByPrimaryKey(folderId)-->Line_20 $$ dlFolder.setParentFolderId(parentFolderId)[ FD ]
Line_15 $$ DLFolder dlFolder = dlFolderPersistence.findByPrimaryKey(folderId)-->Line_28 $$ dlFolderPersistence.update(dlFolder)[ FD ]
Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_24 $$ dlFolder.setDescription(description)[ FD ]
Line_18 $$ long oldParentFolderId = dlFolder.getParentFolderId()-->Line_19 $$ if (oldParentFolderId != parentFolderId) [ FD ]
Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_16 $$ parentFolderId = getParentFolderId(dlFolder, parentFolderId)[ FD ]
Line_15 $$ DLFolder dlFolder = dlFolderPersistence.findByPrimaryKey(folderId)-->Line_24 $$ dlFolder.setDescription(description)[ FD ]
Line_8 $$ if (!hasLock) -->Line_9 $$ lock = lockFolder(userId, folderId, null, false, DLFolderImpl.LOCK_EXPIRATION_TIME)[ CD ]
Line_15 $$ DLFolder dlFolder = dlFolderPersistence.findByPrimaryKey(folderId)-->Line_30 $$ dlFileEntryTypeLocalService.updateFolderFileEntryTypes(dlFolder, fileEntryTypeIds, defaultFileEntryTypeId, serviceContext)[ FD ]
Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_6 $$ boolean hasLock = hasFolderLock(userId, folderId)[ CD ]
Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_20 $$ dlFolder.setParentFolderId(parentFolderId)[ FD ]
Line_2 $$ public DLFolder updateFolderAndFileEntryTypes(long userId, long folderId, long parentFolderId, String name, String description, long defaultFileEntryTypeId, List<Long> fileEntryTypeIds, int restrictionType, ServiceContext serviceContext) throws PortalException -->Line_7 $$ Lock lock = null[ CD ]
Line_16 $$ parentFolderId = getParentFolderId(dlFolder, parentFolderId)-->Line_32 $$ if (oldParentFolderId != parentFolderId) [ FD ]
Line_18 $$ long oldParentFolderId = dlFolder.getParentFolderId()-->Line_32 $$ if (oldParentFolderId != parentFolderId) [ FD ]
