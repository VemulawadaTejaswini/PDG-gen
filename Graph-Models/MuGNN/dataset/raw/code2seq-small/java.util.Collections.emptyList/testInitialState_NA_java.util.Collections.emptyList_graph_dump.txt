Line_2 $$ public void testInitialState() throws Exception -->Line_6 $$ assertEquals(JSON.toString(expected), filterJson(respBody))[ CD ]
Line_2 $$ public void testInitialState() throws Exception -->Line_5 $$ Map<String, Object> expected = ImmutableMap.<String, Object>builder().put("percentComplete", 0.0f).put("phases", Arrays.<Object>asList(ImmutableMap.<String, Object>builder().put("name", "LoadingFsImage").put("desc", "Loading fsimage").put("status", "PENDING").put("percentComplete", 0.0f).put("steps", Collections.emptyList()).build(), ImmutableMap.<String, Object>builder().put("name", "LoadingEdits").put("desc", "Loading edits").put("status", "PENDING").put("percentComplete", 0.0f).put("steps", Collections.emptyList()).build(), ImmutableMap.<String, Object>builder().put("name", "SavingCheckpoint").put("desc", "Saving checkpoint").put("status", "PENDING").put("percentComplete", 0.0f).put("steps", Collections.emptyList()).build(), ImmutableMap.<String, Object>builder().put("name", "SafeMode").put("desc", "Safe mode").put("status", "PENDING").put("percentComplete", 0.0f).put("steps", Collections.emptyList()).build())).build()[ CD ]
Line_2 $$ public void testInitialState() throws Exception -->Line_4 $$ assertNotNull(respBody)[ CD ]
Line_3 $$ String respBody = doGetAndReturnResponseBody()-->Line_6 $$ assertEquals(JSON.toString(expected), filterJson(respBody))[ FD ]
Line_3 $$ String respBody = doGetAndReturnResponseBody()-->Line_4 $$ assertNotNull(respBody)[ FD ]
Line_2 $$ public void testInitialState() throws Exception -->Line_3 $$ String respBody = doGetAndReturnResponseBody()[ CD ]
Line_5 $$ Map<String, Object> expected = ImmutableMap.<String, Object>builder().put("percentComplete", 0.0f).put("phases", Arrays.<Object>asList(ImmutableMap.<String, Object>builder().put("name", "LoadingFsImage").put("desc", "Loading fsimage").put("status", "PENDING").put("percentComplete", 0.0f).put("steps", Collections.emptyList()).build(), ImmutableMap.<String, Object>builder().put("name", "LoadingEdits").put("desc", "Loading edits").put("status", "PENDING").put("percentComplete", 0.0f).put("steps", Collections.emptyList()).build(), ImmutableMap.<String, Object>builder().put("name", "SavingCheckpoint").put("desc", "Saving checkpoint").put("status", "PENDING").put("percentComplete", 0.0f).put("steps", Collections.emptyList()).build(), ImmutableMap.<String, Object>builder().put("name", "SafeMode").put("desc", "Safe mode").put("status", "PENDING").put("percentComplete", 0.0f).put("steps", Collections.emptyList()).build())).build()-->Line_6 $$ assertEquals(JSON.toString(expected), filterJson(respBody))[ FD ]
