Line_5 $$ final VirtualFile newDir = createDirInCommand(tree.mySourceDir, "newDir")-->Line_6 $$ final VirtualFile inNewDir = createFileInCommand(newDir, "f.txt", "12345")[ FD ]
Line_5 $$ final VirtualFile newDir = createDirInCommand(tree.mySourceDir, "newDir")-->Line_11 $$ final Change change = assertCreatedChange(newDir)[ FD ]
Line_13 $$ final Change inSourceChange = assertCreatedChange(inSource)-->Line_14 $$ rollbackIMpl(Arrays.asList(change, inSourceChange), Collections.<Change>emptyList())[ FD ]
Line_2 $$ public void testRollbackAdd() throws Exception -->Line_6 $$ final VirtualFile inNewDir = createFileInCommand(newDir, "f.txt", "12345")[ CD ]
Line_2 $$ public void testRollbackAdd() throws Exception -->Line_8 $$ Assert.assertTrue(newDir != null && inNewDir != null && inSource != null)[ CD ]
Line_2 $$ public void testRollbackAdd() throws Exception -->Line_10 $$ myChangeListManager.ensureUpToDate(false)[ CD ]
Line_2 $$ public void testRollbackAdd() throws Exception -->Line_7 $$ final VirtualFile inSource = createFileInCommand(tree.myTargetDir, "newF.txt", "54321")[ CD ]
Line_2 $$ public void testRollbackAdd() throws Exception -->Line_14 $$ rollbackIMpl(Arrays.asList(change, inSourceChange), Collections.<Change>emptyList())[ CD ]
Line_11 $$ final Change change = assertCreatedChange(newDir)-->Line_14 $$ rollbackIMpl(Arrays.asList(change, inSourceChange), Collections.<Change>emptyList())[ FD ]
Line_2 $$ public void testRollbackAdd() throws Exception -->Line_13 $$ final Change inSourceChange = assertCreatedChange(inSource)[ CD ]
Line_2 $$ public void testRollbackAdd() throws Exception -->Line_3 $$ final SubTree tree = new SubTree(myWorkingCopyDir)[ CD ]
Line_2 $$ public void testRollbackAdd() throws Exception -->Line_4 $$ checkin()[ CD ]
Line_2 $$ public void testRollbackAdd() throws Exception -->Line_9 $$ myDirtyScopeManager.markEverythingDirty()[ CD ]
Line_2 $$ public void testRollbackAdd() throws Exception -->Line_5 $$ final VirtualFile newDir = createDirInCommand(tree.mySourceDir, "newDir")[ CD ]
Line_2 $$ public void testRollbackAdd() throws Exception -->Line_12 $$ final Change inNewDirChange = assertCreatedChange(inNewDir)[ CD ]
Line_7 $$ final VirtualFile inSource = createFileInCommand(tree.myTargetDir, "newF.txt", "54321")-->Line_13 $$ final Change inSourceChange = assertCreatedChange(inSource)[ FD ]
Line_2 $$ public void testRollbackAdd() throws Exception -->Line_11 $$ final Change change = assertCreatedChange(newDir)[ CD ]
Line_6 $$ final VirtualFile inNewDir = createFileInCommand(newDir, "f.txt", "12345")-->Line_12 $$ final Change inNewDirChange = assertCreatedChange(inNewDir)[ FD ]
