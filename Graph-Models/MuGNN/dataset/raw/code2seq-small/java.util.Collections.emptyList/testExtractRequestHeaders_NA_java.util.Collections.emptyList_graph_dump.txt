Line_4 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest() -->Line_12 $$ mockHttpServletRequest.addHeader(HttpHeaders.ACCEPT_ENCODING, "x-zip")[ FD ]
Line_2 $$ public void testExtractRequestHeaders() -->Line_14 $$ mockHttpServletRequest.addHeader(nullHeaderName, nullHeaderName)[ CD ]
Line_2 $$ public void testExtractRequestHeaders() -->Line_26 $$ Assert.assertTrue(emptyHeaders.isEmpty())[ CD ]
Line_4 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest() -->Line_21 $$ mockHttpServletRequest.addHeader(headerName, headerValues)[ FD ]
Line_2 $$ public void testExtractRequestHeaders() -->Line_18 $$ mockHttpServletRequest.addHeader(emptyHeaderName, Collections.emptyList())[ CD ]
Line_2 $$ public void testExtractRequestHeaders() -->Line_12 $$ mockHttpServletRequest.addHeader(HttpHeaders.ACCEPT_ENCODING, "x-zip")[ CD ]
Line_3 $$ final String nullHeaderName = "nullHeaderName"-->Line_6 $$ if (nullHeaderName.equals(name)) [ FD ]
Line_4 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest() -->Line_6 $$ if (nullHeaderName.equals(name)) [ CD ]
Line_4 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest() -->Line_15 $$ Map<String, List<String>> headers = SPIAgentSerializable.extractRequestHeaders(mockHttpServletRequest)[ FD ]
Line_2 $$ public void testExtractRequestHeaders() -->Line_29 $$ Assert.assertTrue(headerValues.equals(actualHeaderValues))[ CD ]
Line_4 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest() -->Line_6 $$ if (nullHeaderName.equals(name)) [ FD ]
Line_2 $$ public void testExtractRequestHeaders() -->Line_4 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest() [ CD ]
Line_2 $$ public void testExtractRequestHeaders() -->Line_13 $$ mockHttpServletRequest.addHeader(HttpHeaders.COOKIE, "a=b")[ CD ]
Line_2 $$ public void testExtractRequestHeaders() -->Line_16 $$ Assert.assertTrue(headers.isEmpty())[ CD ]
Line_4 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest() -->Line_13 $$ mockHttpServletRequest.addHeader(HttpHeaders.COOKIE, "a=b")[ FD ]
Line_6 $$ if (nullHeaderName.equals(name)) -->Line_7 $$ return null[ CD ]
Line_2 $$ public void testExtractRequestHeaders() -->Line_23 $$ Assert.assertEquals(2, headers.size())[ CD ]
Line_4 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest() -->Line_18 $$ mockHttpServletRequest.addHeader(emptyHeaderName, Collections.emptyList())[ FD ]
Line_2 $$ public void testExtractRequestHeaders() -->Line_21 $$ mockHttpServletRequest.addHeader(headerName, headerValues)[ CD ]
Line_2 $$ public void testExtractRequestHeaders() -->Line_20 $$ List<String> headerValues = Arrays.asList("header1", "header2")[ CD ]
Line_2 $$ public void testExtractRequestHeaders() -->Line_3 $$ final String nullHeaderName = "nullHeaderName"[ CD ]
Line_2 $$ public void testExtractRequestHeaders() -->Line_15 $$ Map<String, List<String>> headers = SPIAgentSerializable.extractRequestHeaders(mockHttpServletRequest)[ CD ]
Line_4 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest() -->Line_9 $$ return super.getHeaders(name)[ FD ]
Line_2 $$ public void testExtractRequestHeaders() -->Line_28 $$ Assert.assertNotNull(actualHeaderValues)[ CD ]
Line_4 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest() -->Line_9 $$ return super.getHeaders(name)[ CD ]
Line_2 $$ public void testExtractRequestHeaders() -->Line_27 $$ List<String> actualHeaderValues = headers.get(StringUtil.toLowerCase(headerName))[ CD ]
Line_3 $$ final String nullHeaderName = "nullHeaderName"-->Line_14 $$ mockHttpServletRequest.addHeader(nullHeaderName, nullHeaderName)[ FD ]
Line_2 $$ public void testExtractRequestHeaders() -->Line_22 $$ headers = SPIAgentSerializable.extractRequestHeaders(mockHttpServletRequest)[ CD ]
Line_2 $$ public void testExtractRequestHeaders() -->Line_25 $$ Assert.assertNotNull(emptyHeaders)[ CD ]
Line_4 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest() -->Line_22 $$ headers = SPIAgentSerializable.extractRequestHeaders(mockHttpServletRequest)[ FD ]
Line_2 $$ public void testExtractRequestHeaders() -->Line_24 $$ List<String> emptyHeaders = headers.get(StringUtil.toLowerCase(emptyHeaderName))[ CD ]
Line_4 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest() -->Line_14 $$ mockHttpServletRequest.addHeader(nullHeaderName, nullHeaderName)[ FD ]
