Line_21 $$ ResourceLocalizationSpec rsrcC = getMockRsrc(random, LocalResourceVisibility.APPLICATION, appCacheList.get(0))-->Line_26 $$ LocalResource tRsrcC = rsrcC.getResource()[ FD ]
Line_21 $$ ResourceLocalizationSpec rsrcC = getMockRsrc(random, LocalResourceVisibility.APPLICATION, appCacheList.get(0))-->Line_30 $$ doReturn(new FakeDownload(rsrcC.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcC), isA(UserGroupInformation.class))[ FD ]
Line_6 $$ ContainerLocalizer localizer = setupContainerLocalizerForTest()-->Line_28 $$ doReturn(new FakeDownload(rsrcA.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcA), isA(UserGroupInformation.class))[ FD ]
Line_26 $$ LocalResource tRsrcC = rsrcC.getResource()-->Line_30 $$ doReturn(new FakeDownload(rsrcC.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcC), isA(UserGroupInformation.class))[ FD ]
Line_21 $$ ResourceLocalizationSpec rsrcC = getMockRsrc(random, LocalResourceVisibility.APPLICATION, appCacheList.get(0))-->Line_49 $$ verify(nmProxy).heartbeat(argThat(new HBMatches(rsrcC.getResource())))[ FD ]
Line_4 $$ FileContext fs = FileContext.getLocalFSFileContext()-->Line_5 $$ spylfs = spy(fs.getDefaultFileSystem())[ FD ]
Line_21 $$ ResourceLocalizationSpec rsrcC = getMockRsrc(random, LocalResourceVisibility.APPLICATION, appCacheList.get(0))-->Line_23 $$ when(nmProxy.heartbeat(isA(LocalizerStatus.class))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcA))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcB))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcC))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcD))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.<ResourceLocalizationSpec>emptyList())).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.DIE, null))[ FD ]
Line_25 $$ LocalResource tRsrcB = rsrcB.getResource()-->Line_29 $$ doReturn(new FakeDownload(rsrcB.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcB), isA(UserGroupInformation.class))[ FD ]
Line_6 $$ ContainerLocalizer localizer = setupContainerLocalizerForTest()-->Line_29 $$ doReturn(new FakeDownload(rsrcB.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcB), isA(UserGroupInformation.class))[ FD ]
Line_15 $$ Path appcache = new Path(appDir, ContainerLocalizer.FILECACHE)-->Line_16 $$ appCacheList.add(appcache)[ FD ]
Line_20 $$ ResourceLocalizationSpec rsrcB = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))-->Line_23 $$ when(nmProxy.heartbeat(isA(LocalizerStatus.class))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcA))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcB))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcC))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcD))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.<ResourceLocalizationSpec>emptyList())).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.DIE, null))[ FD ]
Line_22 $$ ResourceLocalizationSpec rsrcD = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))-->Line_23 $$ when(nmProxy.heartbeat(isA(LocalizerStatus.class))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcA))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcB))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcC))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcD))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.<ResourceLocalizationSpec>emptyList())).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.DIE, null))[ FD ]
Line_15 $$ Path appcache = new Path(appDir, ContainerLocalizer.FILECACHE)-->Line_42 $$ verify(spylfs).mkdir(eq(appcache), eq(CACHE_DIR_PERM), eq(false))[ FD ]
Line_12 $$ Path privcache = new Path(base, ContainerLocalizer.FILECACHE)-->Line_13 $$ privCacheList.add(privcache)[ FD ]
Line_20 $$ ResourceLocalizationSpec rsrcB = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))-->Line_25 $$ LocalResource tRsrcB = rsrcB.getResource()[ FD ]
Line_27 $$ LocalResource tRsrcD = rsrcD.getResource()-->Line_31 $$ doReturn(new FakeDownload(rsrcD.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcD), isA(UserGroupInformation.class))[ FD ]
Line_22 $$ ResourceLocalizationSpec rsrcD = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))-->Line_50 $$ verify(nmProxy).heartbeat(argThat(new HBMatches(rsrcD.getResource())))[ FD ]
Line_22 $$ ResourceLocalizationSpec rsrcD = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))-->Line_27 $$ LocalResource tRsrcD = rsrcD.getResource()[ FD ]
Line_24 $$ LocalResource tRsrcA = rsrcA.getResource()-->Line_28 $$ doReturn(new FakeDownload(rsrcA.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcA), isA(UserGroupInformation.class))[ FD ]
Line_22 $$ ResourceLocalizationSpec rsrcD = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))-->Line_31 $$ doReturn(new FakeDownload(rsrcD.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcD), isA(UserGroupInformation.class))[ FD ]
Line_20 $$ ResourceLocalizationSpec rsrcB = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))-->Line_48 $$ verify(nmProxy).heartbeat(argThat(new HBMatches(rsrcB.getResource())))[ FD ]
Line_20 $$ ResourceLocalizationSpec rsrcB = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))-->Line_29 $$ doReturn(new FakeDownload(rsrcB.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcB), isA(UserGroupInformation.class))[ FD ]
Line_56 $$ LocalizerStatus status = (LocalizerStatus) o-->Line_57 $$ return !containerId.equals(status.getLocalizerId())[ FD ]
Line_6 $$ ContainerLocalizer localizer = setupContainerLocalizerForTest()-->Line_30 $$ doReturn(new FakeDownload(rsrcC.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcC), isA(UserGroupInformation.class))[ FD ]
Line_9 $$ List<Path> appCacheList = new ArrayList<Path>()-->Line_16 $$ appCacheList.add(appcache)[ FD ]
Line_9 $$ List<Path> appCacheList = new ArrayList<Path>()-->Line_21 $$ ResourceLocalizationSpec rsrcC = getMockRsrc(random, LocalResourceVisibility.APPLICATION, appCacheList.get(0))[ FD ]
Line_6 $$ ContainerLocalizer localizer = setupContainerLocalizerForTest()-->Line_31 $$ doReturn(new FakeDownload(rsrcD.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcD), isA(UserGroupInformation.class))[ FD ]
