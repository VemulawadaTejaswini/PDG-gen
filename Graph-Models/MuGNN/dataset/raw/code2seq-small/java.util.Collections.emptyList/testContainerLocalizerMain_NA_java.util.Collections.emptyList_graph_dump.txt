Line_13 $$ Path appcache = new Path(appDir, ContainerLocalizer.FILECACHE)-->Line_36 $$ verify(spylfs).mkdir(eq(appcache), eq(CACHE_DIR_PERM), eq(false))[ FD ]
Line_16 $$ ResourceLocalizationSpec rsrcA = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))-->Line_21 $$ LocalResource tRsrcA = rsrcA.getResource()[ FD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_16 $$ ResourceLocalizationSpec rsrcA = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))[ CD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_6 $$ List<Path> privCacheList = new ArrayList<Path>()[ CD ]
Line_19 $$ ResourceLocalizationSpec rsrcD = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))-->Line_24 $$ LocalResource tRsrcD = rsrcD.getResource()[ FD ]
Line_5 $$ ContainerLocalizer localizer = setupContainerLocalizerForTest()-->Line_25 $$ doReturn(new FakeDownload(rsrcA.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcA), isA(UserGroupInformation.class))[ FD ]
Line_24 $$ LocalResource tRsrcD = rsrcD.getResource()-->Line_28 $$ doReturn(new FakeDownload(rsrcD.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcD), isA(UserGroupInformation.class))[ FD ]
Line_6 $$ List<Path> privCacheList = new ArrayList<Path>()-->Line_16 $$ ResourceLocalizationSpec rsrcA = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))[ FD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_7 $$ List<Path> appCacheList = new ArrayList<Path>()[ CD ]
Line_6 $$ List<Path> privCacheList = new ArrayList<Path>()-->Line_19 $$ ResourceLocalizationSpec rsrcD = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))[ FD ]
Line_5 $$ ContainerLocalizer localizer = setupContainerLocalizerForTest()-->Line_27 $$ doReturn(new FakeDownload(rsrcC.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcC), isA(UserGroupInformation.class))[ FD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_42 $$ verify(nmProxy).heartbeat(argThat(new HBMatches(rsrcD.getResource())))[ CD ]
Line_16 $$ ResourceLocalizationSpec rsrcA = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))-->Line_25 $$ doReturn(new FakeDownload(rsrcA.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcA), isA(UserGroupInformation.class))[ FD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_18 $$ ResourceLocalizationSpec rsrcC = getMockRsrc(random, LocalResourceVisibility.APPLICATION, appCacheList.get(0))[ CD ]
Line_5 $$ ContainerLocalizer localizer = setupContainerLocalizerForTest()-->Line_29 $$ assertEquals(0, localizer.runLocalization(nmAddr))[ FD ]
Line_7 $$ List<Path> appCacheList = new ArrayList<Path>()-->Line_14 $$ appCacheList.add(appcache)[ FD ]
Line_19 $$ ResourceLocalizationSpec rsrcD = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))-->Line_28 $$ doReturn(new FakeDownload(rsrcD.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcD), isA(UserGroupInformation.class))[ FD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_39 $$ verify(nmProxy).heartbeat(argThat(new HBMatches(rsrcA.getResource())))[ CD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_24 $$ LocalResource tRsrcD = rsrcD.getResource()[ CD ]
Line_43 $$ verify(nmProxy, never()).heartbeat(argThat(new ArgumentMatcher<LocalizerStatus>() -->Line_46 $$ return !containerId.equals(status.getLocalizerId())[ CD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_19 $$ ResourceLocalizationSpec rsrcD = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))[ CD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_17 $$ ResourceLocalizationSpec rsrcB = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))[ CD ]
Line_6 $$ List<Path> privCacheList = new ArrayList<Path>()-->Line_17 $$ ResourceLocalizationSpec rsrcB = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))[ FD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_26 $$ doReturn(new FakeDownload(rsrcB.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcB), isA(UserGroupInformation.class))[ CD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_41 $$ verify(nmProxy).heartbeat(argThat(new HBMatches(rsrcC.getResource())))[ CD ]
Line_45 $$ LocalizerStatus status = (LocalizerStatus) o-->Line_46 $$ return !containerId.equals(status.getLocalizerId())[ FD ]
Line_21 $$ LocalResource tRsrcA = rsrcA.getResource()-->Line_25 $$ doReturn(new FakeDownload(rsrcA.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcA), isA(UserGroupInformation.class))[ FD ]
Line_13 $$ Path appcache = new Path(appDir, ContainerLocalizer.FILECACHE)-->Line_14 $$ appCacheList.add(appcache)[ FD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_29 $$ assertEquals(0, localizer.runLocalization(nmAddr))[ CD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_3 $$ FileContext fs = FileContext.getLocalFSFileContext()[ CD ]
Line_17 $$ ResourceLocalizationSpec rsrcB = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))-->Line_40 $$ verify(nmProxy).heartbeat(argThat(new HBMatches(rsrcB.getResource())))[ FD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_5 $$ ContainerLocalizer localizer = setupContainerLocalizerForTest()[ CD ]
Line_18 $$ ResourceLocalizationSpec rsrcC = getMockRsrc(random, LocalResourceVisibility.APPLICATION, appCacheList.get(0))-->Line_41 $$ verify(nmProxy).heartbeat(argThat(new HBMatches(rsrcC.getResource())))[ FD ]
Line_17 $$ ResourceLocalizationSpec rsrcB = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))-->Line_26 $$ doReturn(new FakeDownload(rsrcB.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcB), isA(UserGroupInformation.class))[ FD ]
Line_18 $$ ResourceLocalizationSpec rsrcC = getMockRsrc(random, LocalResourceVisibility.APPLICATION, appCacheList.get(0))-->Line_27 $$ doReturn(new FakeDownload(rsrcC.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcC), isA(UserGroupInformation.class))[ FD ]
Line_5 $$ ContainerLocalizer localizer = setupContainerLocalizerForTest()-->Line_26 $$ doReturn(new FakeDownload(rsrcB.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcB), isA(UserGroupInformation.class))[ FD ]
Line_18 $$ ResourceLocalizationSpec rsrcC = getMockRsrc(random, LocalResourceVisibility.APPLICATION, appCacheList.get(0))-->Line_23 $$ LocalResource tRsrcC = rsrcC.getResource()[ FD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_4 $$ spylfs = spy(fs.getDefaultFileSystem())[ CD ]
Line_17 $$ ResourceLocalizationSpec rsrcB = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))-->Line_22 $$ LocalResource tRsrcB = rsrcB.getResource()[ FD ]
Line_17 $$ ResourceLocalizationSpec rsrcB = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))-->Line_20 $$ when(nmProxy.heartbeat(isA(LocalizerStatus.class))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcA))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcB))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcC))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcD))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.<ResourceLocalizationSpec>emptyList())).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.DIE, null))[ FD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_21 $$ LocalResource tRsrcA = rsrcA.getResource()[ CD ]
Line_6 $$ List<Path> privCacheList = new ArrayList<Path>()-->Line_11 $$ privCacheList.add(privcache)[ FD ]
Line_3 $$ FileContext fs = FileContext.getLocalFSFileContext()-->Line_4 $$ spylfs = spy(fs.getDefaultFileSystem())[ FD ]
Line_18 $$ ResourceLocalizationSpec rsrcC = getMockRsrc(random, LocalResourceVisibility.APPLICATION, appCacheList.get(0))-->Line_20 $$ when(nmProxy.heartbeat(isA(LocalizerStatus.class))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcA))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcB))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcC))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcD))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.<ResourceLocalizationSpec>emptyList())).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.DIE, null))[ FD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_22 $$ LocalResource tRsrcB = rsrcB.getResource()[ CD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_23 $$ LocalResource tRsrcC = rsrcC.getResource()[ CD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_28 $$ doReturn(new FakeDownload(rsrcD.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcD), isA(UserGroupInformation.class))[ CD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_38 $$ verify(spylfs).open(tokenPath)[ CD ]
Line_23 $$ LocalResource tRsrcC = rsrcC.getResource()-->Line_27 $$ doReturn(new FakeDownload(rsrcC.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcC), isA(UserGroupInformation.class))[ FD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_40 $$ verify(nmProxy).heartbeat(argThat(new HBMatches(rsrcB.getResource())))[ CD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_20 $$ when(nmProxy.heartbeat(isA(LocalizerStatus.class))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcA))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcB))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcC))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcD))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.<ResourceLocalizationSpec>emptyList())).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.DIE, null))[ CD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_43 $$ verify(nmProxy, never()).heartbeat(argThat(new ArgumentMatcher<LocalizerStatus>() [ CD ]
Line_19 $$ ResourceLocalizationSpec rsrcD = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))-->Line_20 $$ when(nmProxy.heartbeat(isA(LocalizerStatus.class))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcA))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcB))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcC))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcD))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.<ResourceLocalizationSpec>emptyList())).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.DIE, null))[ FD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_25 $$ doReturn(new FakeDownload(rsrcA.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcA), isA(UserGroupInformation.class))[ CD ]
Line_43 $$ verify(nmProxy, never()).heartbeat(argThat(new ArgumentMatcher<LocalizerStatus>() -->Line_45 $$ LocalizerStatus status = (LocalizerStatus) o[ CD ]
Line_22 $$ LocalResource tRsrcB = rsrcB.getResource()-->Line_26 $$ doReturn(new FakeDownload(rsrcB.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcB), isA(UserGroupInformation.class))[ FD ]
Line_10 $$ Path privcache = new Path(base, ContainerLocalizer.FILECACHE)-->Line_11 $$ privCacheList.add(privcache)[ FD ]
Line_10 $$ Path privcache = new Path(base, ContainerLocalizer.FILECACHE)-->Line_33 $$ verify(spylfs).mkdir(eq(privcache), eq(CACHE_DIR_PERM), eq(false))[ FD ]
Line_2 $$ public void testContainerLocalizerMain() throws Exception -->Line_27 $$ doReturn(new FakeDownload(rsrcC.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcC), isA(UserGroupInformation.class))[ CD ]
Line_19 $$ ResourceLocalizationSpec rsrcD = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))-->Line_42 $$ verify(nmProxy).heartbeat(argThat(new HBMatches(rsrcD.getResource())))[ FD ]
Line_5 $$ ContainerLocalizer localizer = setupContainerLocalizerForTest()-->Line_28 $$ doReturn(new FakeDownload(rsrcD.getResource().getResource().getFile(), true)).when(localizer).download(isA(Path.class), eq(tRsrcD), isA(UserGroupInformation.class))[ FD ]
Line_16 $$ ResourceLocalizationSpec rsrcA = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))-->Line_39 $$ verify(nmProxy).heartbeat(argThat(new HBMatches(rsrcA.getResource())))[ FD ]
Line_7 $$ List<Path> appCacheList = new ArrayList<Path>()-->Line_18 $$ ResourceLocalizationSpec rsrcC = getMockRsrc(random, LocalResourceVisibility.APPLICATION, appCacheList.get(0))[ FD ]
Line_16 $$ ResourceLocalizationSpec rsrcA = getMockRsrc(random, LocalResourceVisibility.PRIVATE, privCacheList.get(0))-->Line_20 $$ when(nmProxy.heartbeat(isA(LocalizerStatus.class))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcA))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcB))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcC))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.singletonList(rsrcD))).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.LIVE, Collections.<ResourceLocalizationSpec>emptyList())).thenReturn(new MockLocalizerHeartbeatResponse(LocalizerAction.DIE, null))[ FD ]
