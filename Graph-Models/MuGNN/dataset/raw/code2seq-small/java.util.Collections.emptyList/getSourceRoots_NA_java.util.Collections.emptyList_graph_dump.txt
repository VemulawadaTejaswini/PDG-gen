Line_6 $$ ModuleRootModel rootModel = context.getModulesProvider().getRootModel(module)-->Line_7 $$ return rootModel.getSourceRoots(JavaModuleSourceRootTypes.PRODUCTION)[ FD ]
Line_3 $$ Module module = findModule(context)-->Line_4 $$ if (module == null)[ FD ]
Line_2 $$ public Collection<VirtualFile> getSourceRoots(PackagingElementResolvingContext context) -->Line_4 $$ if (module == null)[ CD ]
Line_2 $$ public Collection<VirtualFile> getSourceRoots(PackagingElementResolvingContext context) -->Line_3 $$ Module module = findModule(context)[ FD ]
Line_2 $$ public Collection<VirtualFile> getSourceRoots(PackagingElementResolvingContext context) -->Line_3 $$ Module module = findModule(context)[ CD ]
Line_2 $$ public Collection<VirtualFile> getSourceRoots(PackagingElementResolvingContext context) -->Line_7 $$ return rootModel.getSourceRoots(JavaModuleSourceRootTypes.PRODUCTION)[ CD ]
Line_2 $$ public Collection<VirtualFile> getSourceRoots(PackagingElementResolvingContext context) -->Line_6 $$ ModuleRootModel rootModel = context.getModulesProvider().getRootModel(module)[ CD ]
Line_3 $$ Module module = findModule(context)-->Line_6 $$ ModuleRootModel rootModel = context.getModulesProvider().getRootModel(module)[ FD ]
Line_2 $$ public Collection<VirtualFile> getSourceRoots(PackagingElementResolvingContext context) -->Line_6 $$ ModuleRootModel rootModel = context.getModulesProvider().getRootModel(module)[ FD ]
Line_4 $$ if (module == null)-->Line_5 $$ return Collections.emptyList()[ CD ]
