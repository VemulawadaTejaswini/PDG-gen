Line_7 $$ rootPath = configIOFile.getParentFile()-->Line_10 $$ if (rootPath == null || !rootPath.exists()) [ FD ]
Line_11 $$ if (baseDir != null) -->Line_12 $$ rootPath = new File(baseDir.getPath())[ CD ]
Line_7 $$ rootPath = configIOFile.getParentFile()-->Line_15 $$ if (rootPath != null) [ FD ]
Line_16 $$ final File[] scripts = new File(rootPath, "bin").listFiles(new FilenameFilter() -->Line_23 $$ String ext = FileUtilRt.getExtension(name)[ FD ]
Line_3 $$ File rootPath = null-->Line_15 $$ if (rootPath != null) [ FD ]
Line_23 $$ String ext = FileUtilRt.getExtension(name)-->Line_24 $$ return ext.length() == 0 || FileUtil.namesEqual(ext, "py")[ FD ]
Line_2 $$ public static List<File> getScripts(@Nullable BuildoutFacet buildoutFacet, final VirtualFile baseDir) -->Line_15 $$ if (rootPath != null) [ CD ]
Line_15 $$ if (rootPath != null) -->Line_27 $$ if (scripts != null) [ CD ]
Line_6 $$ if (configIOFile != null) -->Line_7 $$ rootPath = configIOFile.getParentFile()[ CD ]
Line_16 $$ final File[] scripts = new File(rootPath, "bin").listFiles(new FilenameFilter() -->Line_24 $$ return ext.length() == 0 || FileUtil.namesEqual(ext, "py")[ CD ]
Line_3 $$ File rootPath = null-->Line_7 $$ rootPath = configIOFile.getParentFile()[ FD ]
Line_5 $$ final File configIOFile = buildoutFacet.getConfigFile()-->Line_7 $$ rootPath = configIOFile.getParentFile()[ FD ]
Line_12 $$ rootPath = new File(baseDir.getPath())-->Line_15 $$ if (rootPath != null) [ FD ]
Line_3 $$ File rootPath = null-->Line_12 $$ rootPath = new File(baseDir.getPath())[ FD ]
Line_16 $$ final File[] scripts = new File(rootPath, "bin").listFiles(new FilenameFilter() -->Line_21 $$ return name.endsWith("-script.py")[ FD ]
Line_16 $$ final File[] scripts = new File(rootPath, "bin").listFiles(new FilenameFilter() -->Line_20 $$ if (SystemInfo.isWindows) [ CD ]
Line_20 $$ if (SystemInfo.isWindows) -->Line_21 $$ return name.endsWith("-script.py")[ CD ]
Line_5 $$ final File configIOFile = buildoutFacet.getConfigFile()-->Line_6 $$ if (configIOFile != null) [ FD ]
Line_15 $$ if (rootPath != null) -->Line_16 $$ final File[] scripts = new File(rootPath, "bin").listFiles(new FilenameFilter() [ CD ]
Line_2 $$ public static List<File> getScripts(@Nullable BuildoutFacet buildoutFacet, final VirtualFile baseDir) -->Line_31 $$ return Collections.emptyList()[ CD ]
Line_7 $$ rootPath = configIOFile.getParentFile()-->Line_12 $$ rootPath = new File(baseDir.getPath())[ FD ]
Line_2 $$ public static List<File> getScripts(@Nullable BuildoutFacet buildoutFacet, final VirtualFile baseDir) -->Line_5 $$ final File configIOFile = buildoutFacet.getConfigFile()[ FD ]
Line_16 $$ final File[] scripts = new File(rootPath, "bin").listFiles(new FilenameFilter() -->Line_27 $$ if (scripts != null) [ FD ]
Line_4 $$ if (buildoutFacet != null) -->Line_5 $$ final File configIOFile = buildoutFacet.getConfigFile()[ CD ]
Line_16 $$ final File[] scripts = new File(rootPath, "bin").listFiles(new FilenameFilter() -->Line_23 $$ String ext = FileUtilRt.getExtension(name)[ CD ]
Line_2 $$ public static List<File> getScripts(@Nullable BuildoutFacet buildoutFacet, final VirtualFile baseDir) -->Line_4 $$ if (buildoutFacet != null) [ FD ]
Line_10 $$ if (rootPath == null || !rootPath.exists()) -->Line_11 $$ if (baseDir != null) [ CD ]
Line_2 $$ public static List<File> getScripts(@Nullable BuildoutFacet buildoutFacet, final VirtualFile baseDir) -->Line_11 $$ if (baseDir != null) [ FD ]
Line_27 $$ if (scripts != null) -->Line_28 $$ return Arrays.asList(scripts)[ CD ]
Line_2 $$ public static List<File> getScripts(@Nullable BuildoutFacet buildoutFacet, final VirtualFile baseDir) -->Line_4 $$ if (buildoutFacet != null) [ CD ]
Line_2 $$ public static List<File> getScripts(@Nullable BuildoutFacet buildoutFacet, final VirtualFile baseDir) -->Line_3 $$ File rootPath = null[ CD ]
Line_4 $$ if (buildoutFacet != null) -->Line_6 $$ if (configIOFile != null) [ CD ]
Line_2 $$ public static List<File> getScripts(@Nullable BuildoutFacet buildoutFacet, final VirtualFile baseDir) -->Line_12 $$ rootPath = new File(baseDir.getPath())[ FD ]
Line_3 $$ File rootPath = null-->Line_10 $$ if (rootPath == null || !rootPath.exists()) [ FD ]
Line_16 $$ final File[] scripts = new File(rootPath, "bin").listFiles(new FilenameFilter() -->Line_28 $$ return Arrays.asList(scripts)[ FD ]
Line_2 $$ public static List<File> getScripts(@Nullable BuildoutFacet buildoutFacet, final VirtualFile baseDir) -->Line_10 $$ if (rootPath == null || !rootPath.exists()) [ CD ]
