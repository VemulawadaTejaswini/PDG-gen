Line_5 $$ new WriteAction<Object>() -->Line_10 $$ importProject("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>")[ CD ]
Line_2 $$ public void testUpdatingExcludedFoldersAfterExecution() throws Exception -->Line_15 $$ assertExcludes("project", "target")[ CD ]
Line_2 $$ public void testUpdatingExcludedFoldersAfterExecution() throws Exception -->Line_18 $$ SwingUtilities.invokeAndWait(new Runnable() [ CD ]
Line_2 $$ public void testUpdatingExcludedFoldersAfterExecution() throws Exception -->Line_17 $$ execute(params)[ CD ]
Line_2 $$ public void testUpdatingExcludedFoldersAfterExecution() throws Exception -->Line_14 $$ assertModules("project")[ CD ]
Line_2 $$ public void testUpdatingExcludedFoldersAfterExecution() throws Exception -->Line_26 $$ assertExcludes(// output dirs are collected twice for exclusion and for compiler output[ CD ]
Line_2 $$ public void testUpdatingExcludedFoldersAfterExecution() throws Exception -->Line_5 $$ new WriteAction<Object>() [ CD ]
Line_5 $$ new WriteAction<Object>() -->Line_9 $$ createStdProjectFolders()[ CD ]
Line_3 $$ if (!hasMavenInstallation())-->Line_4 $$ return[ CD ]
Line_2 $$ public void testUpdatingExcludedFoldersAfterExecution() throws Exception -->Line_3 $$ if (!hasMavenInstallation())[ CD ]
Line_5 $$ new WriteAction<Object>() -->Line_11 $$ createProjectSubDirs("target/generated-sources/foo", "target/bar")[ CD ]
Line_2 $$ public void testUpdatingExcludedFoldersAfterExecution() throws Exception -->Line_24 $$ assertSources("project", "src/main/java", "target/generated-sources/foo")[ CD ]
Line_2 $$ public void testUpdatingExcludedFoldersAfterExecution() throws Exception -->Line_25 $$ assertResources("project", "src/main/resources")[ CD ]
