Line_3 $$ if (!hasMavenInstallation())-->Line_4 $$ return[ CD ]
Line_2 $$ public void testUpdatingExcludedFoldersAfterExecution() throws Exception -->Line_16 $$ SwingUtilities.invokeAndWait(new Runnable() [ CD ]
Line_2 $$ public void testUpdatingExcludedFoldersAfterExecution() throws Exception -->Line_22 $$ assertExcludes("project", "target/bar", "target/classes", "target/classes")[ CD ]
Line_5 $$ new WriteAction<Object>() -->Line_7 $$ createStdProjectFolders()[ CD ]
Line_5 $$ new WriteAction<Object>() -->Line_8 $$ importProject("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>")[ CD ]
Line_2 $$ public void testUpdatingExcludedFoldersAfterExecution() throws Exception -->Line_12 $$ assertModules("project")[ CD ]
Line_2 $$ public void testUpdatingExcludedFoldersAfterExecution() throws Exception -->Line_5 $$ new WriteAction<Object>() [ CD ]
Line_2 $$ public void testUpdatingExcludedFoldersAfterExecution() throws Exception -->Line_20 $$ assertSources("project", "src/main/java", "target/generated-sources/foo")[ CD ]
Line_2 $$ public void testUpdatingExcludedFoldersAfterExecution() throws Exception -->Line_21 $$ assertResources("project", "src/main/resources")[ CD ]
Line_2 $$ public void testUpdatingExcludedFoldersAfterExecution() throws Exception -->Line_13 $$ assertExcludes("project", "target")[ CD ]
Line_2 $$ public void testUpdatingExcludedFoldersAfterExecution() throws Exception -->Line_15 $$ execute(params)[ CD ]
Line_5 $$ new WriteAction<Object>() -->Line_9 $$ createProjectSubDirs("target/generated-sources/foo", "target/bar")[ CD ]
Line_2 $$ public void testUpdatingExcludedFoldersAfterExecution() throws Exception -->Line_3 $$ if (!hasMavenInstallation())[ CD ]
