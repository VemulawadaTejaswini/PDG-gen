Line_6 $$ VfsUtilCore.visitChildrenRecursively(file, new VirtualFileVisitor() -->Line_11 $$ final PsiFile psiFile = getCachedPsiFile(file)[ FD ]
Line_6 $$ VfsUtilCore.visitChildrenRecursively(file, new VirtualFileVisitor() -->Line_8 $$ if (!ProjectFileIndex.SERVICE.getInstance(myProject).isInContent(file))[ FD ]
Line_2 $$ private List<DomEvent> calcDomChangeEvents(final VirtualFile file) -->Line_11 $$ final PsiFile psiFile = getCachedPsiFile(file)[ FD ]
Line_2 $$ private List<DomEvent> calcDomChangeEvents(final VirtualFile file) -->Line_25 $$ return events[ CD ]
Line_14 $$ if (domElement != null) -->Line_15 $$ events.add(new DomEvent(domElement, false))[ CD ]
Line_8 $$ if (!ProjectFileIndex.SERVICE.getInstance(myProject).isInContent(file))-->Line_9 $$ return false[ CD ]
Line_2 $$ private List<DomEvent> calcDomChangeEvents(final VirtualFile file) -->Line_6 $$ VfsUtilCore.visitChildrenRecursively(file, new VirtualFileVisitor() [ FD ]
Line_6 $$ VfsUtilCore.visitChildrenRecursively(file, new VirtualFileVisitor() -->Line_19 $$ return true[ CD ]
Line_5 $$ final List<DomEvent> events = ContainerUtil.newArrayList()-->Line_15 $$ events.add(new DomEvent(domElement, false))[ FD ]
Line_6 $$ VfsUtilCore.visitChildrenRecursively(file, new VirtualFileVisitor() -->Line_22 $$ return ((NewVirtualFile) file).getCachedChildren()[ CD ]
Line_12 $$ if (psiFile != null && StdFileTypes.XML.equals(psiFile.getFileType()) && psiFile instanceof XmlFile) -->Line_13 $$ final DomFileElementImpl domElement = getCachedFileElement((XmlFile) psiFile)[ CD ]
Line_10 $$ if (!file.isDirectory() && StdFileTypes.XML == file.getFileType()) -->Line_11 $$ final PsiFile psiFile = getCachedPsiFile(file)[ CD ]
Line_2 $$ private List<DomEvent> calcDomChangeEvents(final VirtualFile file) -->Line_5 $$ final List<DomEvent> events = ContainerUtil.newArrayList()[ CD ]
Line_3 $$ if (!(file instanceof NewVirtualFile))-->Line_4 $$ return Collections.emptyList()[ CD ]
Line_2 $$ private List<DomEvent> calcDomChangeEvents(final VirtualFile file) -->Line_10 $$ if (!file.isDirectory() && StdFileTypes.XML == file.getFileType()) [ FD ]
Line_6 $$ VfsUtilCore.visitChildrenRecursively(file, new VirtualFileVisitor() -->Line_10 $$ if (!file.isDirectory() && StdFileTypes.XML == file.getFileType()) [ FD ]
Line_11 $$ final PsiFile psiFile = getCachedPsiFile(file)-->Line_12 $$ if (psiFile != null && StdFileTypes.XML.equals(psiFile.getFileType()) && psiFile instanceof XmlFile) [ FD ]
Line_13 $$ final DomFileElementImpl domElement = getCachedFileElement((XmlFile) psiFile)-->Line_14 $$ if (domElement != null) [ FD ]
Line_2 $$ private List<DomEvent> calcDomChangeEvents(final VirtualFile file) -->Line_8 $$ if (!ProjectFileIndex.SERVICE.getInstance(myProject).isInContent(file))[ FD ]
Line_6 $$ VfsUtilCore.visitChildrenRecursively(file, new VirtualFileVisitor() -->Line_8 $$ if (!ProjectFileIndex.SERVICE.getInstance(myProject).isInContent(file))[ CD ]
Line_2 $$ private List<DomEvent> calcDomChangeEvents(final VirtualFile file) -->Line_3 $$ if (!(file instanceof NewVirtualFile))[ CD ]
Line_6 $$ VfsUtilCore.visitChildrenRecursively(file, new VirtualFileVisitor() -->Line_10 $$ if (!file.isDirectory() && StdFileTypes.XML == file.getFileType()) [ CD ]
Line_2 $$ private List<DomEvent> calcDomChangeEvents(final VirtualFile file) -->Line_6 $$ VfsUtilCore.visitChildrenRecursively(file, new VirtualFileVisitor() [ CD ]
Line_10 $$ if (!file.isDirectory() && StdFileTypes.XML == file.getFileType()) -->Line_12 $$ if (psiFile != null && StdFileTypes.XML.equals(psiFile.getFileType()) && psiFile instanceof XmlFile) [ CD ]
Line_12 $$ if (psiFile != null && StdFileTypes.XML.equals(psiFile.getFileType()) && psiFile instanceof XmlFile) -->Line_14 $$ if (domElement != null) [ CD ]
