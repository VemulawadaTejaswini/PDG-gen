Line_2 $$ public void getAddress() throws UnknownHostException -->Line_10 $$ InetAddress result = this.connector.getAddress()[ CD ]
Line_2 $$ public void getAddress() throws UnknownHostException -->Line_7 $$ InjectedValue<SocketBinding> bindingValue = new InjectedValue<SocketBinding>()[ CD ]
Line_2 $$ public void getAddress() throws UnknownHostException -->Line_6 $$ SocketBinding binding = new SocketBinding("socket", 1, true, null, 0, interfaceBinding, bindingManager, Collections.<ClientMapping>emptyList())[ CD ]
Line_10 $$ InetAddress result = this.connector.getAddress()-->Line_11 $$ assertSame(expected, result)[ FD ]
Line_2 $$ public void getAddress() throws UnknownHostException -->Line_9 $$ when(this.listener.getBinding()).thenReturn(bindingValue)[ CD ]
Line_7 $$ InjectedValue<SocketBinding> bindingValue = new InjectedValue<SocketBinding>()-->Line_8 $$ bindingValue.inject(binding)[ FD ]
Line_2 $$ public void getAddress() throws UnknownHostException -->Line_3 $$ InetAddress expected = InetAddress.getLocalHost()[ CD ]
Line_6 $$ SocketBinding binding = new SocketBinding("socket", 1, true, null, 0, interfaceBinding, bindingManager, Collections.<ClientMapping>emptyList())-->Line_8 $$ bindingValue.inject(binding)[ FD ]
Line_3 $$ InetAddress expected = InetAddress.getLocalHost()-->Line_11 $$ assertSame(expected, result)[ FD ]
Line_2 $$ public void getAddress() throws UnknownHostException -->Line_11 $$ assertSame(expected, result)[ CD ]
Line_2 $$ public void getAddress() throws UnknownHostException -->Line_4 $$ NetworkInterfaceBinding interfaceBinding = new NetworkInterfaceBinding(Collections.<NetworkInterface>emptySet(), expected)[ CD ]
Line_7 $$ InjectedValue<SocketBinding> bindingValue = new InjectedValue<SocketBinding>()-->Line_9 $$ when(this.listener.getBinding()).thenReturn(bindingValue)[ FD ]
Line_2 $$ public void getAddress() throws UnknownHostException -->Line_5 $$ SocketBindingManager bindingManager = mock(SocketBindingManager.class)[ CD ]
Line_2 $$ public void getAddress() throws UnknownHostException -->Line_8 $$ bindingValue.inject(binding)[ CD ]
