Line_4 $$ if (bindings.length == 0)-->Line_5 $$ return Collections.emptyList()[ CD ]
Line_2 $$ List<ProviderBinding.ProviderInfo<ProcessingContext>> getPairsByElement(@NotNull PsiElement element, @NotNull PsiReferenceService.Hints hints) -->Line_6 $$ List<ProviderBinding.ProviderInfo<ProcessingContext>> ret = ContainerUtil.newSmartList()[ CD ]
Line_7 $$ for (ProviderBinding binding : bindings) -->Line_8 $$ binding.addAcceptableReferenceProviders(element, ret, hints)[ FD ]
Line_6 $$ List<ProviderBinding.ProviderInfo<ProcessingContext>> ret = ContainerUtil.newSmartList()-->Line_8 $$ binding.addAcceptableReferenceProviders(element, ret, hints)[ FD ]
Line_2 $$ List<ProviderBinding.ProviderInfo<ProcessingContext>> getPairsByElement(@NotNull PsiElement element, @NotNull PsiReferenceService.Hints hints) -->Line_3 $$ final ProviderBinding[] bindings = myBindingCache.get(element.getClass())[ FD ]
Line_2 $$ List<ProviderBinding.ProviderInfo<ProcessingContext>> getPairsByElement(@NotNull PsiElement element, @NotNull PsiReferenceService.Hints hints) -->Line_4 $$ if (bindings.length == 0)[ CD ]
Line_2 $$ List<ProviderBinding.ProviderInfo<ProcessingContext>> getPairsByElement(@NotNull PsiElement element, @NotNull PsiReferenceService.Hints hints) -->Line_3 $$ final ProviderBinding[] bindings = myBindingCache.get(element.getClass())[ CD ]
Line_2 $$ List<ProviderBinding.ProviderInfo<ProcessingContext>> getPairsByElement(@NotNull PsiElement element, @NotNull PsiReferenceService.Hints hints) -->Line_8 $$ binding.addAcceptableReferenceProviders(element, ret, hints)[ FD ]
Line_2 $$ List<ProviderBinding.ProviderInfo<ProcessingContext>> getPairsByElement(@NotNull PsiElement element, @NotNull PsiReferenceService.Hints hints) -->Line_10 $$ return ret[ CD ]
