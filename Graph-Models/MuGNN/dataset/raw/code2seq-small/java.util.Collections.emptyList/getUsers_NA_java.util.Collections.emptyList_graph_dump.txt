Line_12 $$ LinkedHashMap<String, Object> params = new LinkedHashMap()-->Line_33 $$ params.put("expandoAttributes", searchTerms.getKeywords())[ FD ]
Line_35 $$ if (searchTerms.isAdvancedSearch()) -->Line_36 $$ return _userLocalService.search(themeDisplay.getCompanyId(), searchTerms.getFirstName(), searchTerms.getMiddleName(), searchTerms.getLastName(), searchTerms.getScreenName(), searchTerms.getEmailAddress(), searchTerms.getStatus(), params, searchTerms.isAndOperator(), QueryUtil.ALL_POS, QueryUtil.ALL_POS, (OrderByComparator<User>) null)[ CD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_4 $$ PermissionChecker permissionChecker = themeDisplay.getPermissionChecker()[ FD ]
Line_4 $$ PermissionChecker permissionChecker = themeDisplay.getPermissionChecker()-->Line_6 $$ if (!exportAllUsers && !PortletPermissionUtil.contains(permissionChecker, UsersAdminPortletKeys.USERS_ADMIN, ActionKeys.EXPORT_USER)) [ FD ]
Line_6 $$ if (!exportAllUsers && !PortletPermissionUtil.contains(permissionChecker, UsersAdminPortletKeys.USERS_ADMIN, ActionKeys.EXPORT_USER)) -->Line_7 $$ return Collections.emptyList()[ CD ]
Line_16 $$ if (!exportAllUsers) -->Line_19 $$ if (organizationIds.length > 0) [ CD ]
Line_2 $$ protected List<User> getUsers(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_5 $$ boolean exportAllUsers = PortalPermissionUtil.contains(permissionChecker, ActionKeys.EXPORT_USER)[ CD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_36 $$ return _userLocalService.search(themeDisplay.getCompanyId(), searchTerms.getFirstName(), searchTerms.getMiddleName(), searchTerms.getLastName(), searchTerms.getScreenName(), searchTerms.getEmailAddress(), searchTerms.getStatus(), params, searchTerms.isAndOperator(), QueryUtil.ALL_POS, QueryUtil.ALL_POS, (OrderByComparator<User>) null)[ FD ]
Line_14 $$ if (organizationId > 0) -->Line_16 $$ if (!exportAllUsers) [ CD ]
Line_12 $$ LinkedHashMap<String, Object> params = new LinkedHashMap()-->Line_15 $$ params.put("usersOrgs", Long.valueOf(organizationId))[ FD ]
Line_14 $$ if (organizationId > 0) -->Line_15 $$ params.put("usersOrgs", Long.valueOf(organizationId))[ CD ]
Line_27 $$ long userGroupId = searchTerms.getUserGroupId()-->Line_29 $$ params.put("usersUserGroups", Long.valueOf(userGroupId))[ FD ]
Line_2 $$ protected List<User> getUsers(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_10 $$ UserSearch userSearch = new UserSearch(actionRequest, portletURL)[ CD ]
Line_12 $$ LinkedHashMap<String, Object> params = new LinkedHashMap()-->Line_38 $$ return _userLocalService.search(themeDisplay.getCompanyId(), searchTerms.getKeywords(), searchTerms.getStatus(), params, QueryUtil.ALL_POS, QueryUtil.ALL_POS, (OrderByComparator<User>) null)[ FD ]
Line_2 $$ protected List<User> getUsers(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_14 $$ if (organizationId > 0) [ CD ]
Line_11 $$ UserSearchTerms searchTerms = (UserSearchTerms) userSearch.getSearchTerms()-->Line_36 $$ return _userLocalService.search(themeDisplay.getCompanyId(), searchTerms.getFirstName(), searchTerms.getMiddleName(), searchTerms.getLastName(), searchTerms.getScreenName(), searchTerms.getEmailAddress(), searchTerms.getStatus(), params, searchTerms.isAndOperator(), QueryUtil.ALL_POS, QueryUtil.ALL_POS, (OrderByComparator<User>) null)[ FD ]
Line_28 $$ if (userGroupId > 0) -->Line_29 $$ params.put("usersUserGroups", Long.valueOf(userGroupId))[ CD ]
Line_2 $$ protected List<User> getUsers(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)[ FD ]
Line_5 $$ boolean exportAllUsers = PortalPermissionUtil.contains(permissionChecker, ActionKeys.EXPORT_USER)-->Line_6 $$ if (!exportAllUsers && !PortletPermissionUtil.contains(permissionChecker, UsersAdminPortletKeys.USERS_ADMIN, ActionKeys.EXPORT_USER)) [ FD ]
Line_2 $$ protected List<User> getUsers(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_6 $$ if (!exportAllUsers && !PortletPermissionUtil.contains(permissionChecker, UsersAdminPortletKeys.USERS_ADMIN, ActionKeys.EXPORT_USER)) [ CD ]
Line_35 $$ if (searchTerms.isAdvancedSearch()) -->Line_38 $$ return _userLocalService.search(themeDisplay.getCompanyId(), searchTerms.getKeywords(), searchTerms.getStatus(), params, QueryUtil.ALL_POS, QueryUtil.ALL_POS, (OrderByComparator<User>) null)[ CD ]
Line_19 $$ if (organizationIds.length > 0) -->Line_20 $$ params.put("usersOrgs", organizationIds)[ CD ]
Line_2 $$ protected List<User> getUsers(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_4 $$ PermissionChecker permissionChecker = themeDisplay.getPermissionChecker()[ CD ]
Line_12 $$ LinkedHashMap<String, Object> params = new LinkedHashMap()-->Line_25 $$ params.put("usersRoles", Long.valueOf(roleId))[ FD ]
Line_2 $$ protected List<User> getUsers(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_27 $$ long userGroupId = searchTerms.getUserGroupId()[ CD ]
Line_2 $$ protected List<User> getUsers(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_32 $$ if (indexer.isIndexerEnabled() && PropsValues.USERS_SEARCH_WITH_INDEX) [ CD ]
Line_11 $$ UserSearchTerms searchTerms = (UserSearchTerms) userSearch.getSearchTerms()-->Line_35 $$ if (searchTerms.isAdvancedSearch()) [ FD ]
Line_2 $$ protected List<User> getUsers(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_11 $$ UserSearchTerms searchTerms = (UserSearchTerms) userSearch.getSearchTerms()[ CD ]
Line_5 $$ boolean exportAllUsers = PortalPermissionUtil.contains(permissionChecker, ActionKeys.EXPORT_USER)-->Line_16 $$ if (!exportAllUsers) [ FD ]
Line_16 $$ if (!exportAllUsers) -->Line_18 $$ Long[] organizationIds = ArrayUtil.toArray(user.getOrganizationIds(true))[ CD ]
Line_23 $$ long roleId = searchTerms.getRoleId()-->Line_24 $$ if (roleId > 0) [ FD ]
Line_12 $$ LinkedHashMap<String, Object> params = new LinkedHashMap()-->Line_36 $$ return _userLocalService.search(themeDisplay.getCompanyId(), searchTerms.getFirstName(), searchTerms.getMiddleName(), searchTerms.getLastName(), searchTerms.getScreenName(), searchTerms.getEmailAddress(), searchTerms.getStatus(), params, searchTerms.isAndOperator(), QueryUtil.ALL_POS, QueryUtil.ALL_POS, (OrderByComparator<User>) null)[ FD ]
Line_11 $$ UserSearchTerms searchTerms = (UserSearchTerms) userSearch.getSearchTerms()-->Line_38 $$ return _userLocalService.search(themeDisplay.getCompanyId(), searchTerms.getKeywords(), searchTerms.getStatus(), params, QueryUtil.ALL_POS, QueryUtil.ALL_POS, (OrderByComparator<User>) null)[ FD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_17 $$ User user = themeDisplay.getUser()[ FD ]
Line_13 $$ long organizationId = searchTerms.getOrganizationId()-->Line_15 $$ params.put("usersOrgs", Long.valueOf(organizationId))[ FD ]
Line_2 $$ protected List<User> getUsers(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_23 $$ long roleId = searchTerms.getRoleId()[ CD ]
Line_4 $$ PermissionChecker permissionChecker = themeDisplay.getPermissionChecker()-->Line_5 $$ boolean exportAllUsers = PortalPermissionUtil.contains(permissionChecker, ActionKeys.EXPORT_USER)[ FD ]
Line_2 $$ protected List<User> getUsers(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)[ CD ]
Line_11 $$ UserSearchTerms searchTerms = (UserSearchTerms) userSearch.getSearchTerms()-->Line_33 $$ params.put("expandoAttributes", searchTerms.getKeywords())[ FD ]
Line_12 $$ LinkedHashMap<String, Object> params = new LinkedHashMap()-->Line_20 $$ params.put("usersOrgs", organizationIds)[ FD ]
Line_17 $$ User user = themeDisplay.getUser()-->Line_18 $$ Long[] organizationIds = ArrayUtil.toArray(user.getOrganizationIds(true))[ FD ]
Line_11 $$ UserSearchTerms searchTerms = (UserSearchTerms) userSearch.getSearchTerms()-->Line_23 $$ long roleId = searchTerms.getRoleId()[ FD ]
Line_11 $$ UserSearchTerms searchTerms = (UserSearchTerms) userSearch.getSearchTerms()-->Line_27 $$ long userGroupId = searchTerms.getUserGroupId()[ FD ]
Line_16 $$ if (!exportAllUsers) -->Line_17 $$ User user = themeDisplay.getUser()[ CD ]
Line_31 $$ Indexer<?> indexer = IndexerRegistryUtil.nullSafeGetIndexer(User.class)-->Line_32 $$ if (indexer.isIndexerEnabled() && PropsValues.USERS_SEARCH_WITH_INDEX) [ FD ]
Line_32 $$ if (indexer.isIndexerEnabled() && PropsValues.USERS_SEARCH_WITH_INDEX) -->Line_33 $$ params.put("expandoAttributes", searchTerms.getKeywords())[ CD ]
Line_27 $$ long userGroupId = searchTerms.getUserGroupId()-->Line_28 $$ if (userGroupId > 0) [ FD ]
Line_24 $$ if (roleId > 0) -->Line_25 $$ params.put("usersRoles", Long.valueOf(roleId))[ CD ]
Line_12 $$ LinkedHashMap<String, Object> params = new LinkedHashMap()-->Line_29 $$ params.put("usersUserGroups", Long.valueOf(userGroupId))[ FD ]
Line_2 $$ protected List<User> getUsers(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_9 $$ PortletURL portletURL = ((ActionResponseImpl) actionResponse).createRenderURL(UsersAdminPortletKeys.USERS_ADMIN)[ CD ]
Line_2 $$ protected List<User> getUsers(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_12 $$ LinkedHashMap<String, Object> params = new LinkedHashMap()[ CD ]
Line_2 $$ protected List<User> getUsers(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_35 $$ if (searchTerms.isAdvancedSearch()) [ CD ]
Line_2 $$ protected List<User> getUsers(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_31 $$ Indexer<?> indexer = IndexerRegistryUtil.nullSafeGetIndexer(User.class)[ CD ]
Line_18 $$ Long[] organizationIds = ArrayUtil.toArray(user.getOrganizationIds(true))-->Line_20 $$ params.put("usersOrgs", organizationIds)[ FD ]
Line_2 $$ protected List<User> getUsers(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_13 $$ long organizationId = searchTerms.getOrganizationId()[ CD ]
Line_13 $$ long organizationId = searchTerms.getOrganizationId()-->Line_14 $$ if (organizationId > 0) [ FD ]
Line_2 $$ protected List<User> getUsers(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_24 $$ if (roleId > 0) [ CD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_38 $$ return _userLocalService.search(themeDisplay.getCompanyId(), searchTerms.getKeywords(), searchTerms.getStatus(), params, QueryUtil.ALL_POS, QueryUtil.ALL_POS, (OrderByComparator<User>) null)[ FD ]
Line_10 $$ UserSearch userSearch = new UserSearch(actionRequest, portletURL)-->Line_11 $$ UserSearchTerms searchTerms = (UserSearchTerms) userSearch.getSearchTerms()[ FD ]
Line_2 $$ protected List<User> getUsers(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_28 $$ if (userGroupId > 0) [ CD ]
Line_23 $$ long roleId = searchTerms.getRoleId()-->Line_25 $$ params.put("usersRoles", Long.valueOf(roleId))[ FD ]
Line_11 $$ UserSearchTerms searchTerms = (UserSearchTerms) userSearch.getSearchTerms()-->Line_13 $$ long organizationId = searchTerms.getOrganizationId()[ FD ]
