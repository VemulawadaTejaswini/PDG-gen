Line_4 $$ GitPushTarget target = pushSpec.getTarget()-->Line_11 $$ commits = GitHistoryUtils.history(myProject, repository.getRoot(), source, "--not", "--remotes=" + target.getBranch().getRemote().getName(), "--max-count=" + 1000)[ FD ]
Line_2 $$ public OutgoingResult getOutgoingCommits(@NotNull GitRepository repository, @NotNull PushSpec<GitPushSource, GitPushTarget> pushSpec, boolean initial) -->Line_3 $$ String source = pushSpec.getSource().getBranch().getFullName()[ CD ]
Line_2 $$ public OutgoingResult getOutgoingCommits(@NotNull GitRepository repository, @NotNull PushSpec<GitPushSource, GitPushTarget> pushSpec, boolean initial) -->Line_11 $$ commits = GitHistoryUtils.history(myProject, repository.getRoot(), source, "--not", "--remotes=" + target.getBranch().getRemote().getName(), "--max-count=" + 1000)[ FD ]
Line_2 $$ public OutgoingResult getOutgoingCommits(@NotNull GitRepository repository, @NotNull PushSpec<GitPushSource, GitPushTarget> pushSpec, boolean initial) -->Line_4 $$ GitPushTarget target = pushSpec.getTarget()[ FD ]
Line_2 $$ public OutgoingResult getOutgoingCommits(@NotNull GitRepository repository, @NotNull PushSpec<GitPushSource, GitPushTarget> pushSpec, boolean initial) -->Line_4 $$ GitPushTarget target = pushSpec.getTarget()[ CD ]
Line_7 $$ List<GitCommit> commits-->Line_11 $$ commits = GitHistoryUtils.history(myProject, repository.getRoot(), source, "--not", "--remotes=" + target.getBranch().getRemote().getName(), "--max-count=" + 1000)[ FD ]
Line_2 $$ public OutgoingResult getOutgoingCommits(@NotNull GitRepository repository, @NotNull PushSpec<GitPushSource, GitPushTarget> pushSpec, boolean initial) -->Line_5 $$ String destination = target.getBranch().getFullName()[ CD ]
Line_3 $$ String source = pushSpec.getSource().getBranch().getFullName()-->Line_11 $$ commits = GitHistoryUtils.history(myProject, repository.getRoot(), source, "--not", "--remotes=" + target.getBranch().getRemote().getName(), "--max-count=" + 1000)[ FD ]
Line_8 $$ if (!target.isNewBranchCreated()) -->Line_9 $$ commits = GitHistoryUtils.history(myProject, repository.getRoot(), destination + ".." + source)[ CD ]
Line_9 $$ commits = GitHistoryUtils.history(myProject, repository.getRoot(), destination + ".." + source)-->Line_11 $$ commits = GitHistoryUtils.history(myProject, repository.getRoot(), source, "--not", "--remotes=" + target.getBranch().getRemote().getName(), "--max-count=" + 1000)[ FD ]
Line_8 $$ if (!target.isNewBranchCreated()) -->Line_11 $$ commits = GitHistoryUtils.history(myProject, repository.getRoot(), source, "--not", "--remotes=" + target.getBranch().getRemote().getName(), "--max-count=" + 1000)[ CD ]
Line_7 $$ List<GitCommit> commits-->Line_9 $$ commits = GitHistoryUtils.history(myProject, repository.getRoot(), destination + ".." + source)[ FD ]
Line_2 $$ public OutgoingResult getOutgoingCommits(@NotNull GitRepository repository, @NotNull PushSpec<GitPushSource, GitPushTarget> pushSpec, boolean initial) -->Line_9 $$ commits = GitHistoryUtils.history(myProject, repository.getRoot(), destination + ".." + source)[ FD ]
Line_4 $$ GitPushTarget target = pushSpec.getTarget()-->Line_8 $$ if (!target.isNewBranchCreated()) [ FD ]
Line_2 $$ public OutgoingResult getOutgoingCommits(@NotNull GitRepository repository, @NotNull PushSpec<GitPushSource, GitPushTarget> pushSpec, boolean initial) -->Line_3 $$ String source = pushSpec.getSource().getBranch().getFullName()[ FD ]
Line_4 $$ GitPushTarget target = pushSpec.getTarget()-->Line_5 $$ String destination = target.getBranch().getFullName()[ FD ]
