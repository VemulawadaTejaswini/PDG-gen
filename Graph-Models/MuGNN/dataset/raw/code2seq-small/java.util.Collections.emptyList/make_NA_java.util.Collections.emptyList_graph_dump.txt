Line_48 $$ return new Specifier<T>() -->Line_63 $$ return changed.isEmpty() && added.isEmpty() && removed.isEmpty()[ CD ]
Line_43 $$ if (!diff.no()) -->Line_44 $$ changed.add(Pair.create(x, diff))[ CD ]
Line_2 $$ public static <T> Specifier<T> make(final Set<T> past, final Set<T> now) -->Line_27 $$ removed.removeAll(now)[ FD ]
Line_48 $$ return new Specifier<T>() -->Line_59 $$ return changed[ CD ]
Line_5 $$ return new Specifier<T>() -->Line_12 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public static <T> Specifier<T> make(final Set<T> past, final Set<T> now) -->Line_25 $$ added.removeAll(past)[ FD ]
Line_48 $$ return new Specifier<T>() -->Line_51 $$ return added[ CD ]
Line_2 $$ public static <T> Specifier<T> make(final Set<T> past, final Set<T> now) -->Line_27 $$ removed.removeAll(now)[ CD ]
Line_39 $$ if (x instanceof Proto) -->Line_42 $$ final Difference diff = py.difference(px)[ CD ]
Line_39 $$ if (x instanceof Proto) -->Line_43 $$ if (!diff.no()) [ CD ]
Line_32 $$ if (intersect.contains(s)) -->Line_33 $$ nowMap.put(s, s)[ CD ]
Line_2 $$ public static <T> Specifier<T> make(final Set<T> past, final Set<T> now) -->Line_36 $$ intersect.retainAll(now)[ FD ]
Line_2 $$ public static <T> Specifier<T> make(final Set<T> past, final Set<T> now) -->Line_36 $$ intersect.retainAll(now)[ CD ]
Line_48 $$ return new Specifier<T>() -->Line_55 $$ return removed[ CD ]
Line_2 $$ public static <T> Specifier<T> make(final Set<T> past, final Set<T> now) -->Line_4 $$ final Collection<T> _now = Collections.unmodifiableCollection(now)[ FD ]
Line_5 $$ return new Specifier<T>() -->Line_20 $$ return false[ CD ]
Line_2 $$ public static <T> Specifier<T> make(final Set<T> past, final Set<T> now) -->Line_48 $$ return new Specifier<T>() [ CD ]
Line_2 $$ public static <T> Specifier<T> make(final Set<T> past, final Set<T> now) -->Line_3 $$ if (past == null) [ CD ]
Line_3 $$ if (past == null) -->Line_5 $$ return new Specifier<T>() [ CD ]
Line_2 $$ public static <T> Specifier<T> make(final Set<T> past, final Set<T> now) -->Line_25 $$ added.removeAll(past)[ CD ]
Line_2 $$ public static <T> Specifier<T> make(final Set<T> past, final Set<T> now) -->Line_3 $$ if (past == null) [ FD ]
Line_5 $$ return new Specifier<T>() -->Line_8 $$ return _now[ CD ]
Line_3 $$ if (past == null) -->Line_4 $$ final Collection<T> _now = Collections.unmodifiableCollection(now)[ CD ]
Line_5 $$ return new Specifier<T>() -->Line_16 $$ return Collections.emptyList()[ CD ]
