Line_2 $$ public List<Future<?>> submitBackground(final ColumnFamilyStore cfs) -->Line_18 $$ compactingCF.add(cfs)[ CD ]
Line_2 $$ public List<Future<?>> submitBackground(final ColumnFamilyStore cfs) -->Line_3 $$ if (cfs.isAutoCompactionDisabled()) [ FD ]
Line_8 $$ if (count > 0 && executor.getActiveCount() >= executor.getMaximumPoolSize()) -->Line_9 $$ logger.trace("Background compaction is still running for [ CD ]
Line_2 $$ public List<Future<?>> submitBackground(final ColumnFamilyStore cfs) -->Line_13 $$ List<Future<?>> futures = new ArrayList()[ CD ]
Line_7 $$ int count = compactingCF.count(cfs)-->Line_9 $$ logger.trace("Background compaction is still running for [ FD ]
Line_2 $$ public List<Future<?>> submitBackground(final ColumnFamilyStore cfs) -->Line_7 $$ int count = compactingCF.count(cfs)[ FD ]
Line_2 $$ public List<Future<?>> submitBackground(final ColumnFamilyStore cfs) -->Line_12 $$ logger.trace("Scheduling a background task check for [ CD ]
Line_14 $$ if (executor.isShutdown()) -->Line_16 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public List<Future<?>> submitBackground(final ColumnFamilyStore cfs) -->Line_14 $$ if (executor.isShutdown()) [ CD ]
Line_2 $$ public List<Future<?>> submitBackground(final ColumnFamilyStore cfs) -->Line_8 $$ if (count > 0 && executor.getActiveCount() >= executor.getMaximumPoolSize()) [ CD ]
Line_8 $$ if (count > 0 && executor.getActiveCount() >= executor.getMaximumPoolSize()) -->Line_10 $$ return Collections.emptyList()[ CD ]
Line_3 $$ if (cfs.isAutoCompactionDisabled()) -->Line_4 $$ logger.trace("Autocompaction is disabled")[ CD ]
Line_2 $$ public List<Future<?>> submitBackground(final ColumnFamilyStore cfs) -->Line_20 $$ return futures[ CD ]
Line_13 $$ List<Future<?>> futures = new ArrayList()-->Line_19 $$ futures.add(executor.submit(new BackgroundCompactionCandidate(cfs)))[ FD ]
Line_2 $$ public List<Future<?>> submitBackground(final ColumnFamilyStore cfs) -->Line_18 $$ compactingCF.add(cfs)[ FD ]
Line_2 $$ public List<Future<?>> submitBackground(final ColumnFamilyStore cfs) -->Line_19 $$ futures.add(executor.submit(new BackgroundCompactionCandidate(cfs)))[ CD ]
Line_2 $$ public List<Future<?>> submitBackground(final ColumnFamilyStore cfs) -->Line_7 $$ int count = compactingCF.count(cfs)[ CD ]
Line_2 $$ public List<Future<?>> submitBackground(final ColumnFamilyStore cfs) -->Line_3 $$ if (cfs.isAutoCompactionDisabled()) [ CD ]
Line_14 $$ if (executor.isShutdown()) -->Line_15 $$ logger.info("Executor has shut down, not submitting background task")[ CD ]
Line_3 $$ if (cfs.isAutoCompactionDisabled()) -->Line_5 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public List<Future<?>> submitBackground(final ColumnFamilyStore cfs) -->Line_12 $$ logger.trace("Scheduling a background task check for [ FD ]
