Line_8 $$ for (File root : dirs) -->Line_10 $$ resolver.addArtifactLocation(root.toURI(), "/[artifact](-[classifier]).[ext]")[ FD ]
Line_8 $$ for (File root : dirs) -->Line_9 $$ resolver.addArtifactLocation(root.toURI(), "/[artifact]-[revision](-[classifier]).[ext]")[ FD ]
Line_7 $$ IvyResolver resolver = new IvyResolver(getName(), transportFactory.createTransport("file", getName(), Collections.<Authentication>emptyList()), locallyAvailableResourceFinder, false, resolverStrategy, artifactFileStore)-->Line_10 $$ resolver.addArtifactLocation(root.toURI(), "/[artifact](-[classifier]).[ext]")[ FD ]
Line_2 $$ private IvyResolver createRealResolver() -->Line_12 $$ return resolver[ CD ]
Line_2 $$ private IvyResolver createRealResolver() -->Line_4 $$ if (dirs.isEmpty()) [ CD ]
Line_7 $$ IvyResolver resolver = new IvyResolver(getName(), transportFactory.createTransport("file", getName(), Collections.<Authentication>emptyList()), locallyAvailableResourceFinder, false, resolverStrategy, artifactFileStore)-->Line_9 $$ resolver.addArtifactLocation(root.toURI(), "/[artifact]-[revision](-[classifier]).[ext]")[ FD ]
Line_2 $$ private IvyResolver createRealResolver() -->Line_7 $$ IvyResolver resolver = new IvyResolver(getName(), transportFactory.createTransport("file", getName(), Collections.<Authentication>emptyList()), locallyAvailableResourceFinder, false, resolverStrategy, artifactFileStore)[ CD ]
Line_2 $$ private IvyResolver createRealResolver() -->Line_3 $$ Set<File> dirs = getDirs()[ CD ]
Line_3 $$ Set<File> dirs = getDirs()-->Line_4 $$ if (dirs.isEmpty()) [ FD ]
