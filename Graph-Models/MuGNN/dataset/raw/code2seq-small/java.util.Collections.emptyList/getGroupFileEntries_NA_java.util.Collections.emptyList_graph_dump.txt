Line_13 $$ if (repositoryId == 0) -->Line_14 $$ if (userId <= 0) [ CD ]
Line_5 $$ folderIds = dlFolderLocalService.getRepositoryFolderIds(repositoryId, rootFolderId)-->Line_15 $$ return dlFileEntryFinder.findByG_F(groupId, folderIds, queryDefinition)[ FD ]
Line_20 $$ List<Long> repositoryIds = new ArrayList()-->Line_23 $$ return dlFileEntryFinder.findByG_R_F(groupId, repositoryIds, folderIds, queryDefinition)[ FD ]
Line_3 $$ List<Long> folderIds = null-->Line_23 $$ return dlFileEntryFinder.findByG_R_F(groupId, repositoryIds, folderIds, queryDefinition)[ FD ]
Line_5 $$ folderIds = dlFolderLocalService.getRepositoryFolderIds(repositoryId, rootFolderId)-->Line_23 $$ return dlFileEntryFinder.findByG_R_F(groupId, repositoryIds, folderIds, queryDefinition)[ FD ]
Line_9 $$ if (folderIds.isEmpty()) -->Line_10 $$ return Collections.emptyList()[ CD ]
Line_12 $$ QueryDefinition<DLFileEntry> queryDefinition = new QueryDefinition(WorkflowConstants.STATUS_ANY, start, end, obc)-->Line_17 $$ return dlFileEntryFinder.findByG_U_F(groupId, userId, folderIds, queryDefinition)[ FD ]
Line_5 $$ folderIds = dlFolderLocalService.getRepositoryFolderIds(repositoryId, rootFolderId)-->Line_7 $$ folderIds = dlFolderLocalService.getGroupFolderIds(groupId, rootFolderId)[ FD ]
Line_2 $$ public List<DLFileEntry> getGroupFileEntries(long groupId, long userId, long repositoryId, long rootFolderId, int start, int end, OrderByComparator<DLFileEntry> obc) -->Line_13 $$ if (repositoryId == 0) [ CD ]
Line_14 $$ if (userId <= 0) -->Line_15 $$ return dlFileEntryFinder.findByG_F(groupId, folderIds, queryDefinition)[ CD ]
Line_2 $$ public List<DLFileEntry> getGroupFileEntries(long groupId, long userId, long repositoryId, long rootFolderId, int start, int end, OrderByComparator<DLFileEntry> obc) -->Line_15 $$ return dlFileEntryFinder.findByG_F(groupId, folderIds, queryDefinition)[ FD ]
Line_3 $$ List<Long> folderIds = null-->Line_15 $$ return dlFileEntryFinder.findByG_F(groupId, folderIds, queryDefinition)[ FD ]
Line_12 $$ QueryDefinition<DLFileEntry> queryDefinition = new QueryDefinition(WorkflowConstants.STATUS_ANY, start, end, obc)-->Line_15 $$ return dlFileEntryFinder.findByG_F(groupId, folderIds, queryDefinition)[ FD ]
Line_3 $$ List<Long> folderIds = null-->Line_25 $$ return dlFileEntryFinder.findByG_U_R_F(groupId, userId, repositoryIds, folderIds, queryDefinition)[ FD ]
Line_2 $$ public List<DLFileEntry> getGroupFileEntries(long groupId, long userId, long repositoryId, long rootFolderId, int start, int end, OrderByComparator<DLFileEntry> obc) -->Line_3 $$ List<Long> folderIds = null[ CD ]
Line_7 $$ folderIds = dlFolderLocalService.getGroupFolderIds(groupId, rootFolderId)-->Line_9 $$ if (folderIds.isEmpty()) [ FD ]
Line_2 $$ public List<DLFileEntry> getGroupFileEntries(long groupId, long userId, long repositoryId, long rootFolderId, int start, int end, OrderByComparator<DLFileEntry> obc) -->Line_7 $$ folderIds = dlFolderLocalService.getGroupFolderIds(groupId, rootFolderId)[ FD ]
Line_7 $$ folderIds = dlFolderLocalService.getGroupFolderIds(groupId, rootFolderId)-->Line_23 $$ return dlFileEntryFinder.findByG_R_F(groupId, repositoryIds, folderIds, queryDefinition)[ FD ]
Line_2 $$ public List<DLFileEntry> getGroupFileEntries(long groupId, long userId, long repositoryId, long rootFolderId, int start, int end, OrderByComparator<DLFileEntry> obc) -->Line_12 $$ QueryDefinition<DLFileEntry> queryDefinition = new QueryDefinition(WorkflowConstants.STATUS_ANY, start, end, obc)[ CD ]
Line_2 $$ public List<DLFileEntry> getGroupFileEntries(long groupId, long userId, long repositoryId, long rootFolderId, int start, int end, OrderByComparator<DLFileEntry> obc) -->Line_21 $$ repositoryIds.add(repositoryId)[ FD ]
Line_4 $$ if (repositoryId != 0) -->Line_5 $$ folderIds = dlFolderLocalService.getRepositoryFolderIds(repositoryId, rootFolderId)[ CD ]
Line_20 $$ List<Long> repositoryIds = new ArrayList()-->Line_21 $$ repositoryIds.add(repositoryId)[ FD ]
Line_2 $$ public List<DLFileEntry> getGroupFileEntries(long groupId, long userId, long repositoryId, long rootFolderId, int start, int end, OrderByComparator<DLFileEntry> obc) -->Line_5 $$ folderIds = dlFolderLocalService.getRepositoryFolderIds(repositoryId, rootFolderId)[ FD ]
Line_5 $$ folderIds = dlFolderLocalService.getRepositoryFolderIds(repositoryId, rootFolderId)-->Line_17 $$ return dlFileEntryFinder.findByG_U_F(groupId, userId, folderIds, queryDefinition)[ FD ]
Line_13 $$ if (repositoryId == 0) -->Line_21 $$ repositoryIds.add(repositoryId)[ CD ]
Line_3 $$ List<Long> folderIds = null-->Line_7 $$ folderIds = dlFolderLocalService.getGroupFolderIds(groupId, rootFolderId)[ FD ]
Line_3 $$ List<Long> folderIds = null-->Line_5 $$ folderIds = dlFolderLocalService.getRepositoryFolderIds(repositoryId, rootFolderId)[ FD ]
Line_2 $$ public List<DLFileEntry> getGroupFileEntries(long groupId, long userId, long repositoryId, long rootFolderId, int start, int end, OrderByComparator<DLFileEntry> obc) -->Line_14 $$ if (userId <= 0) [ FD ]
Line_20 $$ List<Long> repositoryIds = new ArrayList()-->Line_25 $$ return dlFileEntryFinder.findByG_U_R_F(groupId, userId, repositoryIds, folderIds, queryDefinition)[ FD ]
Line_2 $$ public List<DLFileEntry> getGroupFileEntries(long groupId, long userId, long repositoryId, long rootFolderId, int start, int end, OrderByComparator<DLFileEntry> obc) -->Line_9 $$ if (folderIds.isEmpty()) [ CD ]
Line_7 $$ folderIds = dlFolderLocalService.getGroupFolderIds(groupId, rootFolderId)-->Line_17 $$ return dlFileEntryFinder.findByG_U_F(groupId, userId, folderIds, queryDefinition)[ FD ]
Line_22 $$ if (userId <= 0) -->Line_23 $$ return dlFileEntryFinder.findByG_R_F(groupId, repositoryIds, folderIds, queryDefinition)[ CD ]
Line_5 $$ folderIds = dlFolderLocalService.getRepositoryFolderIds(repositoryId, rootFolderId)-->Line_9 $$ if (folderIds.isEmpty()) [ FD ]
Line_5 $$ folderIds = dlFolderLocalService.getRepositoryFolderIds(repositoryId, rootFolderId)-->Line_25 $$ return dlFileEntryFinder.findByG_U_R_F(groupId, userId, repositoryIds, folderIds, queryDefinition)[ FD ]
Line_7 $$ folderIds = dlFolderLocalService.getGroupFolderIds(groupId, rootFolderId)-->Line_15 $$ return dlFileEntryFinder.findByG_F(groupId, folderIds, queryDefinition)[ FD ]
Line_14 $$ if (userId <= 0) -->Line_17 $$ return dlFileEntryFinder.findByG_U_F(groupId, userId, folderIds, queryDefinition)[ CD ]
Line_2 $$ public List<DLFileEntry> getGroupFileEntries(long groupId, long userId, long repositoryId, long rootFolderId, int start, int end, OrderByComparator<DLFileEntry> obc) -->Line_25 $$ return dlFileEntryFinder.findByG_U_R_F(groupId, userId, repositoryIds, folderIds, queryDefinition)[ FD ]
Line_2 $$ public List<DLFileEntry> getGroupFileEntries(long groupId, long userId, long repositoryId, long rootFolderId, int start, int end, OrderByComparator<DLFileEntry> obc) -->Line_22 $$ if (userId <= 0) [ FD ]
Line_2 $$ public List<DLFileEntry> getGroupFileEntries(long groupId, long userId, long repositoryId, long rootFolderId, int start, int end, OrderByComparator<DLFileEntry> obc) -->Line_4 $$ if (repositoryId != 0) [ FD ]
Line_4 $$ if (repositoryId != 0) -->Line_7 $$ folderIds = dlFolderLocalService.getGroupFolderIds(groupId, rootFolderId)[ CD ]
Line_12 $$ QueryDefinition<DLFileEntry> queryDefinition = new QueryDefinition(WorkflowConstants.STATUS_ANY, start, end, obc)-->Line_23 $$ return dlFileEntryFinder.findByG_R_F(groupId, repositoryIds, folderIds, queryDefinition)[ FD ]
Line_7 $$ folderIds = dlFolderLocalService.getGroupFolderIds(groupId, rootFolderId)-->Line_25 $$ return dlFileEntryFinder.findByG_U_R_F(groupId, userId, repositoryIds, folderIds, queryDefinition)[ FD ]
Line_3 $$ List<Long> folderIds = null-->Line_9 $$ if (folderIds.isEmpty()) [ FD ]
Line_13 $$ if (repositoryId == 0) -->Line_22 $$ if (userId <= 0) [ CD ]
Line_3 $$ List<Long> folderIds = null-->Line_17 $$ return dlFileEntryFinder.findByG_U_F(groupId, userId, folderIds, queryDefinition)[ FD ]
Line_2 $$ public List<DLFileEntry> getGroupFileEntries(long groupId, long userId, long repositoryId, long rootFolderId, int start, int end, OrderByComparator<DLFileEntry> obc) -->Line_13 $$ if (repositoryId == 0) [ FD ]
Line_2 $$ public List<DLFileEntry> getGroupFileEntries(long groupId, long userId, long repositoryId, long rootFolderId, int start, int end, OrderByComparator<DLFileEntry> obc) -->Line_4 $$ if (repositoryId != 0) [ CD ]
Line_2 $$ public List<DLFileEntry> getGroupFileEntries(long groupId, long userId, long repositoryId, long rootFolderId, int start, int end, OrderByComparator<DLFileEntry> obc) -->Line_23 $$ return dlFileEntryFinder.findByG_R_F(groupId, repositoryIds, folderIds, queryDefinition)[ FD ]
Line_2 $$ public List<DLFileEntry> getGroupFileEntries(long groupId, long userId, long repositoryId, long rootFolderId, int start, int end, OrderByComparator<DLFileEntry> obc) -->Line_17 $$ return dlFileEntryFinder.findByG_U_F(groupId, userId, folderIds, queryDefinition)[ FD ]
Line_22 $$ if (userId <= 0) -->Line_25 $$ return dlFileEntryFinder.findByG_U_R_F(groupId, userId, repositoryIds, folderIds, queryDefinition)[ CD ]
Line_12 $$ QueryDefinition<DLFileEntry> queryDefinition = new QueryDefinition(WorkflowConstants.STATUS_ANY, start, end, obc)-->Line_25 $$ return dlFileEntryFinder.findByG_U_R_F(groupId, userId, repositoryIds, folderIds, queryDefinition)[ FD ]
Line_13 $$ if (repositoryId == 0) -->Line_20 $$ List<Long> repositoryIds = new ArrayList()[ CD ]
