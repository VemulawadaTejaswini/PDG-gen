Line_5 $$ for (ModuleChunk chunk : genOptions.getModuleChunks()) -->Line_11 $$ conflicts.add(chunk.getName())[ FD ]
Line_7 $$ if (customeCompilers.length > 1) -->Line_11 $$ conflicts.add(chunk.getName())[ CD ]
Line_14 $$ if (!conflicts.isEmpty()) -->Line_15 $$ StringBuilder msg = new StringBuilder()[ CD ]
Line_2 $$ private static boolean validateGenOptions(Project project, GenerationOptionsImpl genOptions) -->Line_24 $$ return true[ CD ]
Line_8 $$ if (conflicts == EMPTY) -->Line_9 $$ conflicts = new LinkedList<String>()[ CD ]
Line_19 $$ int rc = Messages.showOkCancelDialog(project, CompilerBundle.message("generate.ant.build.custom.compiler.conflict.message", msg.toString()), CompilerBundle.message("generate.ant.build.custom.compiler.conflict.title"), Messages.getErrorIcon())-->Line_20 $$ if (rc != Messages.OK) [ FD ]
Line_14 $$ if (!conflicts.isEmpty()) -->Line_19 $$ int rc = Messages.showOkCancelDialog(project, CompilerBundle.message("generate.ant.build.custom.compiler.conflict.message", msg.toString()), CompilerBundle.message("generate.ant.build.custom.compiler.conflict.title"), Messages.getErrorIcon())[ CD ]
Line_15 $$ StringBuilder msg = new StringBuilder()-->Line_17 $$ msg.append(CompilerBundle.message("generate.ant.build.custom.compiler.conflict.message.row", conflictingChunk))[ FD ]
Line_20 $$ if (rc != Messages.OK) -->Line_21 $$ return false[ CD ]
Line_5 $$ for (ModuleChunk chunk : genOptions.getModuleChunks()) -->Line_6 $$ final ChunkCustomCompilerExtension[] customeCompilers = chunk.getCustomCompilers()[ FD ]
Line_2 $$ private static boolean validateGenOptions(Project project, GenerationOptionsImpl genOptions) -->Line_14 $$ if (!conflicts.isEmpty()) [ CD ]
Line_4 $$ Collection<String> conflicts = EMPTY-->Line_8 $$ if (conflicts == EMPTY) [ FD ]
Line_4 $$ Collection<String> conflicts = EMPTY-->Line_9 $$ conflicts = new LinkedList<String>()[ FD ]
Line_4 $$ Collection<String> conflicts = EMPTY-->Line_14 $$ if (!conflicts.isEmpty()) [ FD ]
Line_2 $$ private static boolean validateGenOptions(Project project, GenerationOptionsImpl genOptions) -->Line_3 $$ final Collection<String> EMPTY = Collections.emptyList()[ CD ]
Line_2 $$ private static boolean validateGenOptions(Project project, GenerationOptionsImpl genOptions) -->Line_5 $$ for (ModuleChunk chunk : genOptions.getModuleChunks()) [ FD ]
Line_14 $$ if (!conflicts.isEmpty()) -->Line_20 $$ if (rc != Messages.OK) [ CD ]
Line_15 $$ StringBuilder msg = new StringBuilder()-->Line_19 $$ int rc = Messages.showOkCancelDialog(project, CompilerBundle.message("generate.ant.build.custom.compiler.conflict.message", msg.toString()), CompilerBundle.message("generate.ant.build.custom.compiler.conflict.title"), Messages.getErrorIcon())[ FD ]
Line_4 $$ Collection<String> conflicts = EMPTY-->Line_11 $$ conflicts.add(chunk.getName())[ FD ]
Line_2 $$ private static boolean validateGenOptions(Project project, GenerationOptionsImpl genOptions) -->Line_4 $$ Collection<String> conflicts = EMPTY[ CD ]
Line_16 $$ for (String conflictingChunk : conflicts) -->Line_17 $$ msg.append(CompilerBundle.message("generate.ant.build.custom.compiler.conflict.message.row", conflictingChunk))[ FD ]
Line_2 $$ private static boolean validateGenOptions(Project project, GenerationOptionsImpl genOptions) -->Line_19 $$ int rc = Messages.showOkCancelDialog(project, CompilerBundle.message("generate.ant.build.custom.compiler.conflict.message", msg.toString()), CompilerBundle.message("generate.ant.build.custom.compiler.conflict.title"), Messages.getErrorIcon())[ FD ]
Line_7 $$ if (customeCompilers.length > 1) -->Line_8 $$ if (conflicts == EMPTY) [ CD ]
Line_9 $$ conflicts = new LinkedList<String>()-->Line_11 $$ conflicts.add(chunk.getName())[ FD ]
Line_3 $$ final Collection<String> EMPTY = Collections.emptyList()-->Line_8 $$ if (conflicts == EMPTY) [ FD ]
Line_9 $$ conflicts = new LinkedList<String>()-->Line_14 $$ if (!conflicts.isEmpty()) [ FD ]
