Line_16 $$ result = myImplExtensions.get(type)-->Line_17 $$ if (result == null)[ FD ]
Line_5 $$ Collection<StructureViewExtension> result = myImplExtensions.get(type)-->Line_6 $$ if (result == null) [ FD ]
Line_6 $$ if (result == null) -->Line_17 $$ if (result == null)[ CD ]
Line_5 $$ Collection<StructureViewExtension> result = myImplExtensions.get(type)-->Line_16 $$ result = myImplExtensions.get(type)[ FD ]
Line_6 $$ if (result == null) -->Line_7 $$ MultiValuesMap<Class<? extends PsiElement>, StructureViewExtension> map = myExtensions.getValue()[ CD ]
Line_6 $$ if (result == null) -->Line_16 $$ result = myImplExtensions.get(type)[ CD ]
Line_11 $$ for (StructureViewExtension extension : extensions) -->Line_12 $$ myImplExtensions.put(type, extension)[ FD ]
Line_8 $$ for (Class<? extends PsiElement> registeredType : map.keySet()) -->Line_9 $$ if (ReflectionUtil.isAssignable(registeredType, type)) [ FD ]
Line_8 $$ for (Class<? extends PsiElement> registeredType : map.keySet()) -->Line_10 $$ final Collection<StructureViewExtension> extensions = map.get(registeredType)[ FD ]
Line_7 $$ MultiValuesMap<Class<? extends PsiElement>, StructureViewExtension> map = myExtensions.getValue()-->Line_10 $$ final Collection<StructureViewExtension> extensions = map.get(registeredType)[ FD ]
Line_5 $$ Collection<StructureViewExtension> result = myImplExtensions.get(type)-->Line_17 $$ if (result == null)[ FD ]
Line_17 $$ if (result == null)-->Line_18 $$ return Collections.emptyList()[ CD ]
Line_9 $$ if (ReflectionUtil.isAssignable(registeredType, type)) -->Line_10 $$ final Collection<StructureViewExtension> extensions = map.get(registeredType)[ CD ]
Line_7 $$ MultiValuesMap<Class<? extends PsiElement>, StructureViewExtension> map = myExtensions.getValue()-->Line_8 $$ for (Class<? extends PsiElement> registeredType : map.keySet()) [ FD ]
