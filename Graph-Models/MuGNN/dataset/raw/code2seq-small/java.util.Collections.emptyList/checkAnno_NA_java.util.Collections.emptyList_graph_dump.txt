Line_2 $$ private <T extends Annotation> List<DomElementProblemDescriptor> checkAnno(final DomElement element, final DomCustomAnnotationChecker<T> checker, DomElementAnnotationHolder holder) -->Line_4 $$ return annotation != null ? checker.checkForProblems(annotation, element, holder, this) : Collections.<DomElementProblemDescriptor>emptyList()[ CD ]
Line_2 $$ private <T extends Annotation> List<DomElementProblemDescriptor> checkAnno(final DomElement element, final DomCustomAnnotationChecker<T> checker, DomElementAnnotationHolder holder) -->Line_3 $$ final T annotation = element.getAnnotation(checker.getAnnotationClass())[ FD ]
Line_2 $$ private <T extends Annotation> List<DomElementProblemDescriptor> checkAnno(final DomElement element, final DomCustomAnnotationChecker<T> checker, DomElementAnnotationHolder holder) -->Line_3 $$ final T annotation = element.getAnnotation(checker.getAnnotationClass())[ CD ]
Line_3 $$ final T annotation = element.getAnnotation(checker.getAnnotationClass())-->Line_4 $$ return annotation != null ? checker.checkForProblems(annotation, element, holder, this) : Collections.<DomElementProblemDescriptor>emptyList()[ FD ]
Line_2 $$ private <T extends Annotation> List<DomElementProblemDescriptor> checkAnno(final DomElement element, final DomCustomAnnotationChecker<T> checker, DomElementAnnotationHolder holder) -->Line_4 $$ return annotation != null ? checker.checkForProblems(annotation, element, holder, this) : Collections.<DomElementProblemDescriptor>emptyList()[ FD ]
