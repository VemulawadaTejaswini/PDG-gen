Line_26 $$ int updateDayOfMonth = findNextDay(calendar, this.daysOfMonth, dayOfMonth, daysOfWeek, dayOfWeek, resets)-->Line_27 $$ if (dayOfMonth == updateDayOfMonth) [ FD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_15 $$ doNext(calendar, dot)[ FD ]
Line_10 $$ int minute = calendar.get(Calendar.MINUTE)-->Line_12 $$ if (minute == updateMinute) [ FD ]
Line_19 $$ if (hour == updateHour) -->Line_22 $$ doNext(calendar, dot)[ CD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_17 $$ int hour = calendar.get(Calendar.HOUR_OF_DAY)[ FD ]
Line_19 $$ if (hour == updateHour) -->Line_20 $$ resets.add(Calendar.HOUR_OF_DAY)[ CD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_24 $$ int dayOfWeek = calendar.get(Calendar.DAY_OF_WEEK)[ CD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_4 $$ int second = calendar.get(Calendar.SECOND)[ FD ]
Line_11 $$ int updateMinute = findNext(this.minutes, minute, calendar, Calendar.MINUTE, Calendar.HOUR_OF_DAY, resets)-->Line_12 $$ if (minute == updateMinute) [ FD ]
Line_3 $$ List<Integer> resets = new ArrayList<Integer>()-->Line_18 $$ int updateHour = findNext(this.hours, hour, calendar, Calendar.HOUR_OF_DAY, Calendar.DAY_OF_WEEK, resets)[ FD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_5 $$ List<Integer> emptyList = Collections.emptyList()[ CD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_24 $$ int dayOfWeek = calendar.get(Calendar.DAY_OF_WEEK)[ FD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_32 $$ int month = calendar.get(Calendar.MONTH)[ CD ]
Line_32 $$ int month = calendar.get(Calendar.MONTH)-->Line_33 $$ int updateMonth = findNext(this.months, month, calendar, Calendar.MONTH, Calendar.YEAR, resets)[ FD ]
Line_27 $$ if (dayOfMonth == updateDayOfMonth) -->Line_30 $$ doNext(calendar, dot)[ CD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_25 $$ int dayOfMonth = calendar.get(Calendar.DAY_OF_MONTH)[ CD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_7 $$ if (second == updateSecond) [ CD ]
Line_24 $$ int dayOfWeek = calendar.get(Calendar.DAY_OF_WEEK)-->Line_26 $$ int updateDayOfMonth = findNextDay(calendar, this.daysOfMonth, dayOfMonth, daysOfWeek, dayOfWeek, resets)[ FD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_10 $$ int minute = calendar.get(Calendar.MINUTE)[ CD ]
Line_25 $$ int dayOfMonth = calendar.get(Calendar.DAY_OF_MONTH)-->Line_27 $$ if (dayOfMonth == updateDayOfMonth) [ FD ]
Line_34 $$ if (month != updateMonth) -->Line_38 $$ doNext(calendar, dot)[ CD ]
Line_3 $$ List<Integer> resets = new ArrayList<Integer>()-->Line_8 $$ resets.add(Calendar.SECOND)[ FD ]
Line_3 $$ List<Integer> resets = new ArrayList<Integer>()-->Line_13 $$ resets.add(Calendar.MINUTE)[ FD ]
Line_6 $$ int updateSecond = findNext(this.seconds, second, calendar, Calendar.SECOND, Calendar.MINUTE, emptyList)-->Line_7 $$ if (second == updateSecond) [ FD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_11 $$ int updateMinute = findNext(this.minutes, minute, calendar, Calendar.MINUTE, Calendar.HOUR_OF_DAY, resets)[ FD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_10 $$ int minute = calendar.get(Calendar.MINUTE)[ FD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_26 $$ int updateDayOfMonth = findNextDay(calendar, this.daysOfMonth, dayOfMonth, daysOfWeek, dayOfWeek, resets)[ CD ]
Line_3 $$ List<Integer> resets = new ArrayList<Integer>()-->Line_28 $$ resets.add(Calendar.DAY_OF_MONTH)[ FD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_25 $$ int dayOfMonth = calendar.get(Calendar.DAY_OF_MONTH)[ FD ]
Line_17 $$ int hour = calendar.get(Calendar.HOUR_OF_DAY)-->Line_18 $$ int updateHour = findNext(this.hours, hour, calendar, Calendar.HOUR_OF_DAY, Calendar.DAY_OF_WEEK, resets)[ FD ]
Line_5 $$ List<Integer> emptyList = Collections.emptyList()-->Line_6 $$ int updateSecond = findNext(this.seconds, second, calendar, Calendar.SECOND, Calendar.MINUTE, emptyList)[ FD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_6 $$ int updateSecond = findNext(this.seconds, second, calendar, Calendar.SECOND, Calendar.MINUTE, emptyList)[ FD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_38 $$ doNext(calendar, dot)[ FD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_34 $$ if (month != updateMonth) [ CD ]
Line_3 $$ List<Integer> resets = new ArrayList<Integer>()-->Line_11 $$ int updateMinute = findNext(this.minutes, minute, calendar, Calendar.MINUTE, Calendar.HOUR_OF_DAY, resets)[ FD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_33 $$ int updateMonth = findNext(this.months, month, calendar, Calendar.MONTH, Calendar.YEAR, resets)[ FD ]
Line_12 $$ if (minute == updateMinute) -->Line_13 $$ resets.add(Calendar.MINUTE)[ CD ]
Line_3 $$ List<Integer> resets = new ArrayList<Integer>()-->Line_33 $$ int updateMonth = findNext(this.months, month, calendar, Calendar.MONTH, Calendar.YEAR, resets)[ FD ]
Line_4 $$ int second = calendar.get(Calendar.SECOND)-->Line_7 $$ if (second == updateSecond) [ FD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_19 $$ if (hour == updateHour) [ CD ]
Line_17 $$ int hour = calendar.get(Calendar.HOUR_OF_DAY)-->Line_19 $$ if (hour == updateHour) [ FD ]
Line_3 $$ List<Integer> resets = new ArrayList<Integer>()-->Line_26 $$ int updateDayOfMonth = findNextDay(calendar, this.daysOfMonth, dayOfMonth, daysOfWeek, dayOfWeek, resets)[ FD ]
Line_10 $$ int minute = calendar.get(Calendar.MINUTE)-->Line_11 $$ int updateMinute = findNext(this.minutes, minute, calendar, Calendar.MINUTE, Calendar.HOUR_OF_DAY, resets)[ FD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_17 $$ int hour = calendar.get(Calendar.HOUR_OF_DAY)[ CD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_11 $$ int updateMinute = findNext(this.minutes, minute, calendar, Calendar.MINUTE, Calendar.HOUR_OF_DAY, resets)[ CD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_27 $$ if (dayOfMonth == updateDayOfMonth) [ CD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_12 $$ if (minute == updateMinute) [ CD ]
Line_12 $$ if (minute == updateMinute) -->Line_15 $$ doNext(calendar, dot)[ CD ]
Line_33 $$ int updateMonth = findNext(this.months, month, calendar, Calendar.MONTH, Calendar.YEAR, resets)-->Line_34 $$ if (month != updateMonth) [ FD ]
Line_34 $$ if (month != updateMonth) -->Line_35 $$ if (calendar.get(Calendar.YEAR) - dot > 4) [ CD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_18 $$ int updateHour = findNext(this.hours, hour, calendar, Calendar.HOUR_OF_DAY, Calendar.DAY_OF_WEEK, resets)[ FD ]
Line_18 $$ int updateHour = findNext(this.hours, hour, calendar, Calendar.HOUR_OF_DAY, Calendar.DAY_OF_WEEK, resets)-->Line_19 $$ if (hour == updateHour) [ FD ]
Line_27 $$ if (dayOfMonth == updateDayOfMonth) -->Line_28 $$ resets.add(Calendar.DAY_OF_MONTH)[ CD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_6 $$ int updateSecond = findNext(this.seconds, second, calendar, Calendar.SECOND, Calendar.MINUTE, emptyList)[ CD ]
Line_32 $$ int month = calendar.get(Calendar.MONTH)-->Line_34 $$ if (month != updateMonth) [ FD ]
Line_3 $$ List<Integer> resets = new ArrayList<Integer>()-->Line_20 $$ resets.add(Calendar.HOUR_OF_DAY)[ FD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_22 $$ doNext(calendar, dot)[ FD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_26 $$ int updateDayOfMonth = findNextDay(calendar, this.daysOfMonth, dayOfMonth, daysOfWeek, dayOfWeek, resets)[ FD ]
Line_25 $$ int dayOfMonth = calendar.get(Calendar.DAY_OF_MONTH)-->Line_26 $$ int updateDayOfMonth = findNextDay(calendar, this.daysOfMonth, dayOfMonth, daysOfWeek, dayOfWeek, resets)[ FD ]
Line_4 $$ int second = calendar.get(Calendar.SECOND)-->Line_6 $$ int updateSecond = findNext(this.seconds, second, calendar, Calendar.SECOND, Calendar.MINUTE, emptyList)[ FD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_32 $$ int month = calendar.get(Calendar.MONTH)[ FD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_18 $$ int updateHour = findNext(this.hours, hour, calendar, Calendar.HOUR_OF_DAY, Calendar.DAY_OF_WEEK, resets)[ CD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_3 $$ List<Integer> resets = new ArrayList<Integer>()[ CD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_30 $$ doNext(calendar, dot)[ FD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_33 $$ int updateMonth = findNext(this.months, month, calendar, Calendar.MONTH, Calendar.YEAR, resets)[ CD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_4 $$ int second = calendar.get(Calendar.SECOND)[ CD ]
Line_7 $$ if (second == updateSecond) -->Line_8 $$ resets.add(Calendar.SECOND)[ CD ]
Line_2 $$ private void doNext(Calendar calendar, int dot) -->Line_35 $$ if (calendar.get(Calendar.YEAR) - dot > 4) [ FD ]
