Line_7 $$ if (commonBookmarkNames == null) -->Line_8 $$ commonBookmarkNames = names[ CD ]
Line_10 $$ commonBookmarkNames = ContainerUtil.intersection(commonBookmarkNames, names)-->Line_13 $$ if (commonBookmarkNames != null) [ FD ]
Line_13 $$ if (commonBookmarkNames != null) -->Line_18 $$ return Collections.emptyList()[ CD ]
Line_6 $$ Collection<String> names = HgUtil.getSortedNamesWithoutHashes(bookmarksInfo)-->Line_10 $$ commonBookmarkNames = ContainerUtil.intersection(commonBookmarkNames, names)[ FD ]
Line_3 $$ Collection<String> commonBookmarkNames = null-->Line_8 $$ commonBookmarkNames = names[ FD ]
Line_3 $$ Collection<String> commonBookmarkNames = null-->Line_13 $$ if (commonBookmarkNames != null) [ FD ]
Line_7 $$ if (commonBookmarkNames == null) -->Line_10 $$ commonBookmarkNames = ContainerUtil.intersection(commonBookmarkNames, names)[ CD ]
Line_5 $$ Collection<HgNameWithHashInfo> bookmarksInfo = repository.getBookmarks()-->Line_6 $$ Collection<String> names = HgUtil.getSortedNamesWithoutHashes(bookmarksInfo)[ FD ]
Line_8 $$ commonBookmarkNames = names-->Line_13 $$ if (commonBookmarkNames != null) [ FD ]
Line_13 $$ if (commonBookmarkNames != null) -->Line_16 $$ return common[ CD ]
Line_4 $$ for (HgRepository repository : repositories) -->Line_5 $$ Collection<HgNameWithHashInfo> bookmarksInfo = repository.getBookmarks()[ FD ]
Line_6 $$ Collection<String> names = HgUtil.getSortedNamesWithoutHashes(bookmarksInfo)-->Line_8 $$ commonBookmarkNames = names[ FD ]
Line_13 $$ if (commonBookmarkNames != null) -->Line_14 $$ ArrayList<String> common = new ArrayList<String>(commonBookmarkNames)[ CD ]
Line_2 $$ public static List<String> getCommonBookmarks(@NotNull Collection<HgRepository> repositories) -->Line_13 $$ if (commonBookmarkNames != null) [ CD ]
Line_3 $$ Collection<String> commonBookmarkNames = null-->Line_10 $$ commonBookmarkNames = ContainerUtil.intersection(commonBookmarkNames, names)[ FD ]
Line_2 $$ public static List<String> getCommonBookmarks(@NotNull Collection<HgRepository> repositories) -->Line_3 $$ Collection<String> commonBookmarkNames = null[ CD ]
Line_3 $$ Collection<String> commonBookmarkNames = null-->Line_7 $$ if (commonBookmarkNames == null) [ FD ]
Line_13 $$ if (commonBookmarkNames != null) -->Line_15 $$ Collections.sort(common)[ CD ]
Line_14 $$ ArrayList<String> common = new ArrayList<String>(commonBookmarkNames)-->Line_15 $$ Collections.sort(common)[ FD ]
Line_8 $$ commonBookmarkNames = names-->Line_10 $$ commonBookmarkNames = ContainerUtil.intersection(commonBookmarkNames, names)[ FD ]
