Line_39 $$ for (String item : names) -->Line_43 $$ List<String> parts = StringUtil.split(item, POINTER)[ FD ]
Line_44 $$ result.addAll(ContainerUtil.map(parts, new Function<String, String>() -->Line_48 $$ return shortBuffer(s.trim())[ CD ]
Line_36 $$ String refs = decoration.substring(startParentheses + 1, endParentheses)-->Line_37 $$ String[] names = refs.split(", ")[ FD ]
Line_39 $$ for (String item : names) -->Line_42 $$ if (item.contains(POINTER)) [ FD ]
Line_33 $$ final int endParentheses = decoration.indexOf(")")-->Line_36 $$ String refs = decoration.substring(startParentheses + 1, endParentheses)[ FD ]
Line_38 $$ List<String> result = ContainerUtil.newArrayList()-->Line_44 $$ result.addAll(ContainerUtil.map(parts, new Function<String, String>() [ FD ]
Line_43 $$ List<String> parts = StringUtil.split(item, POINTER)-->Line_44 $$ result.addAll(ContainerUtil.map(parts, new Function<String, String>() [ FD ]
Line_42 $$ if (item.contains(POINTER)) -->Line_43 $$ List<String> parts = StringUtil.split(item, POINTER)[ CD ]
Line_42 $$ if (item.contains(POINTER)) -->Line_54 $$ result.add(shortBuffer(colon > 0 ? item.substring(colon + 1).trim() : item))[ CD ]
Line_44 $$ result.addAll(ContainerUtil.map(parts, new Function<String, String>() -->Line_48 $$ return shortBuffer(s.trim())[ FD ]
Line_42 $$ if (item.contains(POINTER)) -->Line_44 $$ result.addAll(ContainerUtil.map(parts, new Function<String, String>() [ CD ]
Line_39 $$ for (String item : names) -->Line_54 $$ result.add(shortBuffer(colon > 0 ? item.substring(colon + 1).trim() : item))[ FD ]
Line_34 $$ if ((startParentheses == -1) || (endParentheses == -1))-->Line_35 $$ return Collections.emptyList()[ CD ]
Line_29 $$ if (decoration == null) -->Line_30 $$ return ContainerUtil.emptyList()[ CD ]
Line_38 $$ List<String> result = ContainerUtil.newArrayList()-->Line_54 $$ result.add(shortBuffer(colon > 0 ? item.substring(colon + 1).trim() : item))[ FD ]
