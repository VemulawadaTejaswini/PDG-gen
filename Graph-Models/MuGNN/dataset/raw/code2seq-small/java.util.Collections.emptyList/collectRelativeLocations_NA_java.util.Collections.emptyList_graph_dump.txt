Line_42 $$ if (!VfsUtilCore.isAncestor(contentRoot, iterator.next().getVirtualFile(), true)) -->Line_43 $$ iterator.remove()[ CD ]
Line_13 $$ if (relativePath != null) -->Line_14 $$ final PsiSearchHelper searchHelper = PsiSearchHelper.SERVICE.getInstance(project)[ CD ]
Line_32 $$ if (resultFiles == null) -->Line_35 $$ resultFiles.retainAll(files)[ CD ]
Line_11 $$ if (contentRoot != null) -->Line_12 $$ final String relativePath = VfsUtilCore.getRelativePath(parent, contentRoot, '/')[ CD ]
Line_13 $$ if (relativePath != null) -->Line_24 $$ final GlobalSearchScope testScope = GlobalSearchScopesCore.projectTestScope(project)[ CD ]
Line_8 $$ if (fileIndex.isInContent(file) && !fileIndex.isInSource(file) && !fileIndex.isInLibraryClasses(file)) -->Line_11 $$ if (contentRoot != null) [ CD ]
Line_10 $$ final VirtualFile contentRoot = fileIndex.getContentRootForFile(file)-->Line_11 $$ if (contentRoot != null) [ FD ]
Line_49 $$ if (resultFile instanceof PsiClassOwner) -->Line_51 $$ if (classes.length > 0) [ CD ]
Line_12 $$ final String relativePath = VfsUtilCore.getRelativePath(parent, contentRoot, '/')-->Line_13 $$ if (relativePath != null) [ FD ]
Line_49 $$ if (resultFile instanceof PsiClassOwner) -->Line_50 $$ final PsiClass[] classes = ((PsiClassOwner) resultFile).getClasses()[ CD ]
Line_7 $$ final ProjectFileIndex fileIndex = ProjectRootManager.getInstance(project).getFileIndex()-->Line_10 $$ final VirtualFile contentRoot = fileIndex.getContentRootForFile(file)[ FD ]
Line_41 $$ for (Iterator<PsiFile> iterator = resultFiles.iterator(); iterator.hasNext(); ) -->Line_43 $$ iterator.remove()[ FD ]
Line_10 $$ final VirtualFile contentRoot = fileIndex.getContentRootForFile(file)-->Line_12 $$ final String relativePath = VfsUtilCore.getRelativePath(parent, contentRoot, '/')[ FD ]
Line_8 $$ if (fileIndex.isInContent(file) && !fileIndex.isInSource(file) && !fileIndex.isInLibraryClasses(file)) -->Line_10 $$ final VirtualFile contentRoot = fileIndex.getContentRootForFile(file)[ CD ]
Line_40 $$ if (resultFiles != null) -->Line_46 $$ final String fileName = file.getName()[ CD ]
Line_11 $$ if (contentRoot != null) -->Line_13 $$ if (relativePath != null) [ CD ]
Line_41 $$ for (Iterator<PsiFile> iterator = resultFiles.iterator(); iterator.hasNext(); ) -->Line_42 $$ if (!VfsUtilCore.isAncestor(contentRoot, iterator.next().getVirtualFile(), true)) [ CD ]
Line_10 $$ final VirtualFile contentRoot = fileIndex.getContentRootForFile(file)-->Line_42 $$ if (!VfsUtilCore.isAncestor(contentRoot, iterator.next().getVirtualFile(), true)) [ FD ]
Line_7 $$ final ProjectFileIndex fileIndex = ProjectRootManager.getInstance(project).getFileIndex()-->Line_8 $$ if (fileIndex.isInContent(file) && !fileIndex.isInSource(file) && !fileIndex.isInLibraryClasses(file)) [ FD ]
Line_9 $$ final VirtualFile parent = file.getParent()-->Line_12 $$ final String relativePath = VfsUtilCore.getRelativePath(parent, contentRoot, '/')[ FD ]
Line_4 $$ if (DumbService.isDumb(project))-->Line_5 $$ return Collections.emptyList()[ CD ]
Line_8 $$ if (fileIndex.isInContent(file) && !fileIndex.isInSource(file) && !fileIndex.isInLibraryClasses(file)) -->Line_9 $$ final VirtualFile parent = file.getParent()[ CD ]
Line_13 $$ if (relativePath != null) -->Line_40 $$ if (resultFiles != null) [ CD ]
Line_40 $$ if (resultFiles != null) -->Line_47 $$ final String nameWithoutExtension = file.getNameWithoutExtension()[ CD ]
Line_14 $$ final PsiSearchHelper searchHelper = PsiSearchHelper.SERVICE.getInstance(project)-->Line_31 $$ searchHelper.processAllFilesWithWordInLiterals(word, testScope, new CommonProcessors.CollectProcessor<PsiFile>(files))[ FD ]
Line_40 $$ if (resultFiles != null) -->Line_41 $$ for (Iterator<PsiFile> iterator = resultFiles.iterator(); iterator.hasNext(); ) [ CD ]
Line_13 $$ if (relativePath != null) -->Line_15 $$ final List<String> words = StringUtil.getWordsIn(relativePath)[ CD ]
Line_6 $$ final List<Location> locations = new ArrayList<Location>()-->Line_52 $$ ContainerUtil.addIfNotNull(locations, getLocation(project, fileName, nameWithoutExtension, classes[0]))[ FD ]
Line_12 $$ final String relativePath = VfsUtilCore.getRelativePath(parent, contentRoot, '/')-->Line_15 $$ final List<String> words = StringUtil.getWordsIn(relativePath)[ FD ]
Line_41 $$ for (Iterator<PsiFile> iterator = resultFiles.iterator(); iterator.hasNext(); ) -->Line_42 $$ if (!VfsUtilCore.isAncestor(contentRoot, iterator.next().getVirtualFile(), true)) [ FD ]
Line_51 $$ if (classes.length > 0) -->Line_52 $$ ContainerUtil.addIfNotNull(locations, getLocation(project, fileName, nameWithoutExtension, classes[0]))[ CD ]
