Line_5 $$ final ArrayList<BaseInjection> injections = collectInjections(host, configuration)-->Line_16 $$ configuration.replaceInjectionsWithUndo(project, newInjections, injections, Collections.<PsiElement>emptyList())[ FD ]
Line_10 $$ final BaseInjection newInjection = injection.copy()-->Line_12 $$ if (InjectorUtils.canBeRemoved(newInjection))[ FD ]
Line_6 $$ if (injections.isEmpty())-->Line_7 $$ return false[ CD ]
Line_2 $$ public boolean removeInjection(PsiElement host) -->Line_17 $$ return true[ CD ]
Line_2 $$ public boolean removeInjection(PsiElement host) -->Line_5 $$ final ArrayList<BaseInjection> injections = collectInjections(host, configuration)[ CD ]
Line_9 $$ for (BaseInjection injection : injections) -->Line_10 $$ final BaseInjection newInjection = injection.copy()[ FD ]
Line_8 $$ final ArrayList<BaseInjection> newInjections = new ArrayList<BaseInjection>()-->Line_14 $$ newInjections.add(newInjection)[ FD ]
Line_2 $$ public boolean removeInjection(PsiElement host) -->Line_8 $$ final ArrayList<BaseInjection> newInjections = new ArrayList<BaseInjection>()[ CD ]
Line_10 $$ final BaseInjection newInjection = injection.copy()-->Line_11 $$ newInjection.setPlaceEnabled(null, false)[ FD ]
Line_2 $$ public boolean removeInjection(PsiElement host) -->Line_3 $$ final Project project = host.getProject()[ FD ]
Line_2 $$ public boolean removeInjection(PsiElement host) -->Line_5 $$ final ArrayList<BaseInjection> injections = collectInjections(host, configuration)[ FD ]
Line_8 $$ final ArrayList<BaseInjection> newInjections = new ArrayList<BaseInjection>()-->Line_16 $$ configuration.replaceInjectionsWithUndo(project, newInjections, injections, Collections.<PsiElement>emptyList())[ FD ]
Line_3 $$ final Project project = host.getProject()-->Line_16 $$ configuration.replaceInjectionsWithUndo(project, newInjections, injections, Collections.<PsiElement>emptyList())[ FD ]
Line_4 $$ final Configuration configuration = Configuration.getProjectInstance(project)-->Line_16 $$ configuration.replaceInjectionsWithUndo(project, newInjections, injections, Collections.<PsiElement>emptyList())[ FD ]
Line_2 $$ public boolean removeInjection(PsiElement host) -->Line_4 $$ final Configuration configuration = Configuration.getProjectInstance(project)[ CD ]
Line_4 $$ final Configuration configuration = Configuration.getProjectInstance(project)-->Line_5 $$ final ArrayList<BaseInjection> injections = collectInjections(host, configuration)[ FD ]
Line_2 $$ public boolean removeInjection(PsiElement host) -->Line_6 $$ if (injections.isEmpty())[ CD ]
Line_10 $$ final BaseInjection newInjection = injection.copy()-->Line_14 $$ newInjections.add(newInjection)[ FD ]
Line_3 $$ final Project project = host.getProject()-->Line_4 $$ final Configuration configuration = Configuration.getProjectInstance(project)[ FD ]
Line_2 $$ public boolean removeInjection(PsiElement host) -->Line_3 $$ final Project project = host.getProject()[ CD ]
Line_2 $$ public boolean removeInjection(PsiElement host) -->Line_16 $$ configuration.replaceInjectionsWithUndo(project, newInjections, injections, Collections.<PsiElement>emptyList())[ CD ]
Line_5 $$ final ArrayList<BaseInjection> injections = collectInjections(host, configuration)-->Line_6 $$ if (injections.isEmpty())[ FD ]
