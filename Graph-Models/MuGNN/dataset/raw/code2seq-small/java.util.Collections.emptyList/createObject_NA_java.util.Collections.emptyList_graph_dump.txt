Line_9 $$ if (value != null) -->Line_10 $$ accessor.set(o, value)[ CD ]
Line_8 $$ Object value = createValue(accessor.getGenericType(), processedTypes, elementTypes)-->Line_10 $$ accessor.set(o, value)[ FD ]
Line_5 $$ for (MutableAccessor accessor : XmlSerializerUtil.getAccessors(aClass)) -->Line_8 $$ Object value = createValue(accessor.getGenericType(), processedTypes, elementTypes)[ FD ]
Line_5 $$ for (MutableAccessor accessor : XmlSerializerUtil.getAccessors(aClass)) -->Line_10 $$ accessor.set(o, value)[ FD ]
Line_4 $$ Object o = ReflectionUtil.newInstance(aClass)-->Line_10 $$ accessor.set(o, value)[ FD ]
Line_7 $$ List<Type> elementTypes = abstractCollection != null ? Arrays.<Type>asList(abstractCollection.elementTypes()) : Collections.<Type>emptyList()-->Line_8 $$ Object value = createValue(accessor.getGenericType(), processedTypes, elementTypes)[ FD ]
Line_6 $$ AbstractCollection abstractCollection = accessor.getAnnotation(AbstractCollection.class)-->Line_7 $$ List<Type> elementTypes = abstractCollection != null ? Arrays.<Type>asList(abstractCollection.elementTypes()) : Collections.<Type>emptyList()[ FD ]
Line_5 $$ for (MutableAccessor accessor : XmlSerializerUtil.getAccessors(aClass)) -->Line_6 $$ AbstractCollection abstractCollection = accessor.getAnnotation(AbstractCollection.class)[ FD ]
Line_8 $$ Object value = createValue(accessor.getGenericType(), processedTypes, elementTypes)-->Line_9 $$ if (value != null) [ FD ]
