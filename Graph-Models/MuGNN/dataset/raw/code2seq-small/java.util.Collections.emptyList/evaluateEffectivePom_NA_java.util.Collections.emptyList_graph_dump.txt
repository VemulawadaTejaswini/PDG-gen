Line_17 $$ XMLWriter writer = new PrettyPrintXMLWriter(new PrintWriter(w), StringUtils.repeat(" ", XmlWriterUtil.DEFAULT_INDENTATION_SIZE), "\n", null, null)-->Line_18 $$ writeHeader(writer)[ FD ]
Line_7 $$ final MavenExecutionRequest request = embedder.createRequest(file, activeProfiles, inactiveProfiles, Collections.<String>emptyList())-->Line_15 $$ ProjectBuildingResult buildingResult = builder.build(new File(file.getPath()), request.getProjectBuildingRequest())[ FD ]
Line_7 $$ final MavenExecutionRequest request = embedder.createRequest(file, activeProfiles, inactiveProfiles, Collections.<String>emptyList())-->Line_8 $$ embedder.executeWithMavenSession(request, new Runnable() [ FD ]
Line_17 $$ XMLWriter writer = new PrettyPrintXMLWriter(new PrintWriter(w), StringUtils.repeat(" ", XmlWriterUtil.DEFAULT_INDENTATION_SIZE), "\n", null, null)-->Line_19 $$ writeEffectivePom(project, writer)[ FD ]
Line_5 $$ final StringWriter w = new StringWriter()-->Line_28 $$ return w.toString()[ FD ]
Line_16 $$ MavenProject project = buildingResult.getProject()-->Line_19 $$ writeEffectivePom(project, writer)[ FD ]
Line_15 $$ ProjectBuildingResult buildingResult = builder.build(new File(file.getPath()), request.getProjectBuildingRequest())-->Line_16 $$ MavenProject project = buildingResult.getProject()[ FD ]
