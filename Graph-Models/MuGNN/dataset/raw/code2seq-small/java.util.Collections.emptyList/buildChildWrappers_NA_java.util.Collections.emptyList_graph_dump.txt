Line_10 $$ DataLanguageBlockWrapper currWrapper = createAndAddBlock(result, child, null)-->Line_13 $$ prevWrapper.setRightHandSpacing(currWrapper, spacing)[ FD ]
Line_4 $$ List<Block> children = parent.getSubBlocks()-->Line_5 $$ if (children.size() == 0)[ FD ]
Line_8 $$ DataLanguageBlockWrapper prevWrapper = null-->Line_12 $$ Spacing spacing = parent.getSpacing(prevWrapper.getOriginal(), currWrapper.getOriginal())[ FD ]
Line_8 $$ DataLanguageBlockWrapper prevWrapper = null-->Line_15 $$ prevWrapper = currWrapper[ FD ]
Line_7 $$ ArrayList<DataLanguageBlockWrapper> result = new ArrayList<DataLanguageBlockWrapper>(children.size())-->Line_10 $$ DataLanguageBlockWrapper currWrapper = createAndAddBlock(result, child, null)[ FD ]
Line_8 $$ DataLanguageBlockWrapper prevWrapper = null-->Line_13 $$ prevWrapper.setRightHandSpacing(currWrapper, spacing)[ FD ]
Line_2 $$ public static List<DataLanguageBlockWrapper> buildChildWrappers(@NotNull final Block parent) -->Line_4 $$ List<Block> children = parent.getSubBlocks()[ CD ]
Line_2 $$ public static List<DataLanguageBlockWrapper> buildChildWrappers(@NotNull final Block parent) -->Line_7 $$ ArrayList<DataLanguageBlockWrapper> result = new ArrayList<DataLanguageBlockWrapper>(children.size())[ CD ]
Line_9 $$ for (Block child : children) -->Line_10 $$ DataLanguageBlockWrapper currWrapper = createAndAddBlock(result, child, null)[ FD ]
Line_4 $$ List<Block> children = parent.getSubBlocks()-->Line_7 $$ ArrayList<DataLanguageBlockWrapper> result = new ArrayList<DataLanguageBlockWrapper>(children.size())[ FD ]
Line_11 $$ if (currWrapper != null && prevWrapper != null) -->Line_12 $$ Spacing spacing = parent.getSpacing(prevWrapper.getOriginal(), currWrapper.getOriginal())[ CD ]
Line_2 $$ public static List<DataLanguageBlockWrapper> buildChildWrappers(@NotNull final Block parent) -->Line_12 $$ Spacing spacing = parent.getSpacing(prevWrapper.getOriginal(), currWrapper.getOriginal())[ FD ]
Line_2 $$ public static List<DataLanguageBlockWrapper> buildChildWrappers(@NotNull final Block parent) -->Line_17 $$ return result[ CD ]
Line_12 $$ Spacing spacing = parent.getSpacing(prevWrapper.getOriginal(), currWrapper.getOriginal())-->Line_13 $$ prevWrapper.setRightHandSpacing(currWrapper, spacing)[ FD ]
Line_5 $$ if (children.size() == 0)-->Line_6 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public static List<DataLanguageBlockWrapper> buildChildWrappers(@NotNull final Block parent) -->Line_3 $$ assert !(parent instanceof DataLanguageBlockWrapper) : parent.getClass()[ FD ]
Line_2 $$ public static List<DataLanguageBlockWrapper> buildChildWrappers(@NotNull final Block parent) -->Line_8 $$ DataLanguageBlockWrapper prevWrapper = null[ CD ]
Line_10 $$ DataLanguageBlockWrapper currWrapper = createAndAddBlock(result, child, null)-->Line_12 $$ Spacing spacing = parent.getSpacing(prevWrapper.getOriginal(), currWrapper.getOriginal())[ FD ]
Line_2 $$ public static List<DataLanguageBlockWrapper> buildChildWrappers(@NotNull final Block parent) -->Line_5 $$ if (children.size() == 0)[ CD ]
Line_10 $$ DataLanguageBlockWrapper currWrapper = createAndAddBlock(result, child, null)-->Line_15 $$ prevWrapper = currWrapper[ FD ]
Line_2 $$ public static List<DataLanguageBlockWrapper> buildChildWrappers(@NotNull final Block parent) -->Line_4 $$ List<Block> children = parent.getSubBlocks()[ FD ]
Line_11 $$ if (currWrapper != null && prevWrapper != null) -->Line_13 $$ prevWrapper.setRightHandSpacing(currWrapper, spacing)[ CD ]
