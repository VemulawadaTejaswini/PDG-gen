Line_7 $$ return it.transform(new Function<PsiReference, TextRange>() -->Line_9 $$ TextRange base = ref.getElement().getTextRange()[ CD ]
Line_7 $$ return it.transform(new Function<PsiReference, TextRange>() -->Line_10 $$ TextRange r = ref.getRangeInElement().shiftRight(base.getStartOffset())[ FD ]
Line_2 $$ public List<TextRange> select(PsiElement e, CharSequence editorText, final int cursorOffset, Editor editor) -->Line_4 $$ if (ref == null)[ CD ]
Line_2 $$ public List<TextRange> select(PsiElement e, CharSequence editorText, final int cursorOffset, Editor editor) -->Line_3 $$ PsiReference ref = e.findReferenceAt(cursorOffset - e.getTextRange().getStartOffset())[ CD ]
Line_2 $$ public List<TextRange> select(PsiElement e, CharSequence editorText, final int cursorOffset, Editor editor) -->Line_3 $$ PsiReference ref = e.findReferenceAt(cursorOffset - e.getTextRange().getStartOffset())[ FD ]
Line_6 $$ JBIterable<PsiReference> it = ref instanceof PsiMultiReference ? JBIterable.of(((PsiMultiReference) ref).getReferences()) : JBIterable.of(ref)-->Line_7 $$ return it.transform(new Function<PsiReference, TextRange>() [ FD ]
Line_2 $$ public List<TextRange> select(PsiElement e, CharSequence editorText, final int cursorOffset, Editor editor) -->Line_6 $$ JBIterable<PsiReference> it = ref instanceof PsiMultiReference ? JBIterable.of(((PsiMultiReference) ref).getReferences()) : JBIterable.of(ref)[ CD ]
Line_3 $$ PsiReference ref = e.findReferenceAt(cursorOffset - e.getTextRange().getStartOffset())-->Line_9 $$ TextRange base = ref.getElement().getTextRange()[ FD ]
Line_3 $$ PsiReference ref = e.findReferenceAt(cursorOffset - e.getTextRange().getStartOffset())-->Line_4 $$ if (ref == null)[ FD ]
Line_4 $$ if (ref == null)-->Line_5 $$ return Collections.emptyList()[ CD ]
Line_7 $$ return it.transform(new Function<PsiReference, TextRange>() -->Line_9 $$ TextRange base = ref.getElement().getTextRange()[ FD ]
Line_2 $$ public List<TextRange> select(PsiElement e, CharSequence editorText, final int cursorOffset, Editor editor) -->Line_11 $$ return r.containsOffset(cursorOffset) ? r : null[ FD ]
Line_7 $$ return it.transform(new Function<PsiReference, TextRange>() -->Line_11 $$ return r.containsOffset(cursorOffset) ? r : null[ CD ]
Line_3 $$ PsiReference ref = e.findReferenceAt(cursorOffset - e.getTextRange().getStartOffset())-->Line_10 $$ TextRange r = ref.getRangeInElement().shiftRight(base.getStartOffset())[ FD ]
Line_3 $$ PsiReference ref = e.findReferenceAt(cursorOffset - e.getTextRange().getStartOffset())-->Line_6 $$ JBIterable<PsiReference> it = ref instanceof PsiMultiReference ? JBIterable.of(((PsiMultiReference) ref).getReferences()) : JBIterable.of(ref)[ FD ]
Line_2 $$ public List<TextRange> select(PsiElement e, CharSequence editorText, final int cursorOffset, Editor editor) -->Line_7 $$ return it.transform(new Function<PsiReference, TextRange>() [ CD ]
Line_9 $$ TextRange base = ref.getElement().getTextRange()-->Line_10 $$ TextRange r = ref.getRangeInElement().shiftRight(base.getStartOffset())[ FD ]
Line_7 $$ return it.transform(new Function<PsiReference, TextRange>() -->Line_10 $$ TextRange r = ref.getRangeInElement().shiftRight(base.getStartOffset())[ CD ]
Line_10 $$ TextRange r = ref.getRangeInElement().shiftRight(base.getStartOffset())-->Line_11 $$ return r.containsOffset(cursorOffset) ? r : null[ FD ]
