Line_14 $$ QueryMessage queryMessage = new QueryMessage("CREATE TABLE " + KEYSPACE + ".atable (pk int PRIMARY KEY, v text)", QueryOptions.DEFAULT)-->Line_19 $$ Message.Response queryResponse = client.execute(queryMessage)[ FD ]
Line_13 $$ Map<String, ByteBuffer> respMap-->Line_34 $$ payloadEquals(respMap, executeResponse.getCustomPayload())[ FD ]
Line_12 $$ Map<String, ByteBuffer> reqMap-->Line_31 $$ executeMessage.setCustomPayload(reqMap)[ FD ]
Line_23 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(43))-->Line_41 $$ payloadEquals(respMap, batchResponse.getCustomPayload())[ FD ]
Line_23 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(43))-->Line_27 $$ payloadEquals(respMap, prepareResponse.getCustomPayload())[ FD ]
Line_13 $$ Map<String, ByteBuffer> respMap-->Line_21 $$ payloadEquals(respMap, queryResponse.getCustomPayload())[ FD ]
Line_9 $$ SimpleClient client = new SimpleClient(nativeAddr.getHostAddress(), nativePort)-->Line_32 $$ Message.Response executeResponse = client.execute(executeMessage)[ FD ]
Line_16 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_31 $$ executeMessage.setCustomPayload(reqMap)[ FD ]
Line_22 $$ reqMap = Collections.singletonMap("foo", bytes(43))-->Line_38 $$ batchMessage.setCustomPayload(reqMap)[ FD ]
Line_30 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(44))-->Line_41 $$ payloadEquals(respMap, batchResponse.getCustomPayload())[ FD ]
Line_17 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(42))-->Line_37 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(45))[ FD ]
Line_16 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_36 $$ reqMap = Collections.singletonMap("foo", bytes(45))[ FD ]
Line_12 $$ Map<String, ByteBuffer> reqMap-->Line_20 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_12 $$ Map<String, ByteBuffer> reqMap-->Line_22 $$ reqMap = Collections.singletonMap("foo", bytes(43))[ FD ]
Line_36 $$ reqMap = Collections.singletonMap("foo", bytes(45))-->Line_38 $$ batchMessage.setCustomPayload(reqMap)[ FD ]
Line_29 $$ reqMap = Collections.singletonMap("foo", bytes(44))-->Line_36 $$ reqMap = Collections.singletonMap("foo", bytes(45))[ FD ]
Line_16 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_18 $$ queryMessage.setCustomPayload(reqMap)[ FD ]
Line_35 $$ BatchMessage batchMessage = new BatchMessage(BatchStatement.Type.UNLOGGED, Collections.<Object>singletonList("INSERT INTO " + KEYSPACE + ".atable (pk,v) VALUES (1, 'foo')"), Collections.singletonList(Collections.<ByteBuffer>emptyList()), QueryOptions.DEFAULT)-->Line_39 $$ Message.Response batchResponse = client.execute(batchMessage)[ FD ]
Line_13 $$ Map<String, ByteBuffer> respMap-->Line_41 $$ payloadEquals(respMap, batchResponse.getCustomPayload())[ FD ]
Line_37 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(45))-->Line_41 $$ payloadEquals(respMap, batchResponse.getCustomPayload())[ FD ]
Line_9 $$ SimpleClient client = new SimpleClient(nativeAddr.getHostAddress(), nativePort)-->Line_11 $$ client.connect(false)[ FD ]
Line_23 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(43))-->Line_34 $$ payloadEquals(respMap, executeResponse.getCustomPayload())[ FD ]
Line_36 $$ reqMap = Collections.singletonMap("foo", bytes(45))-->Line_40 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_12 $$ Map<String, ByteBuffer> reqMap-->Line_33 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_22 $$ reqMap = Collections.singletonMap("foo", bytes(43))-->Line_40 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_9 $$ SimpleClient client = new SimpleClient(nativeAddr.getHostAddress(), nativePort)-->Line_43 $$ client.close()[ FD ]
Line_12 $$ Map<String, ByteBuffer> reqMap-->Line_29 $$ reqMap = Collections.singletonMap("foo", bytes(44))[ FD ]
Line_13 $$ Map<String, ByteBuffer> respMap-->Line_30 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(44))[ FD ]
Line_13 $$ Map<String, ByteBuffer> respMap-->Line_37 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(45))[ FD ]
Line_12 $$ Map<String, ByteBuffer> reqMap-->Line_24 $$ prepareMessage.setCustomPayload(reqMap)[ FD ]
Line_17 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(42))-->Line_41 $$ payloadEquals(respMap, batchResponse.getCustomPayload())[ FD ]
Line_28 $$ ExecuteMessage executeMessage = new ExecuteMessage(prepareResponse.statementId, QueryOptions.DEFAULT)-->Line_31 $$ executeMessage.setCustomPayload(reqMap)[ FD ]
Line_17 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(42))-->Line_27 $$ payloadEquals(respMap, prepareResponse.getCustomPayload())[ FD ]
Line_16 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_22 $$ reqMap = Collections.singletonMap("foo", bytes(43))[ FD ]
Line_22 $$ reqMap = Collections.singletonMap("foo", bytes(43))-->Line_29 $$ reqMap = Collections.singletonMap("foo", bytes(44))[ FD ]
Line_13 $$ Map<String, ByteBuffer> respMap-->Line_17 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(42))[ FD ]
Line_32 $$ Message.Response executeResponse = client.execute(executeMessage)-->Line_34 $$ payloadEquals(respMap, executeResponse.getCustomPayload())[ FD ]
Line_29 $$ reqMap = Collections.singletonMap("foo", bytes(44))-->Line_33 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_15 $$ PrepareMessage prepareMessage = new PrepareMessage("SELECT * FROM " + KEYSPACE + ".atable")-->Line_25 $$ ResultMessage.Prepared prepareResponse = (ResultMessage.Prepared) client.execute(prepareMessage)[ FD ]
Line_12 $$ Map<String, ByteBuffer> reqMap-->Line_18 $$ queryMessage.setCustomPayload(reqMap)[ FD ]
Line_4 $$ QueryHandler queryHandler = (QueryHandler) cqlQueryHandlerField.get(null)-->Line_46 $$ cqlQueryHandlerField.set(null, queryHandler)[ FD ]
Line_39 $$ Message.Response batchResponse = client.execute(batchMessage)-->Line_41 $$ payloadEquals(respMap, batchResponse.getCustomPayload())[ FD ]
Line_30 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(44))-->Line_34 $$ payloadEquals(respMap, executeResponse.getCustomPayload())[ FD ]
Line_9 $$ SimpleClient client = new SimpleClient(nativeAddr.getHostAddress(), nativePort)-->Line_39 $$ Message.Response batchResponse = client.execute(batchMessage)[ FD ]
Line_16 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_26 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_28 $$ ExecuteMessage executeMessage = new ExecuteMessage(prepareResponse.statementId, QueryOptions.DEFAULT)-->Line_32 $$ Message.Response executeResponse = client.execute(executeMessage)[ FD ]
Line_16 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_24 $$ prepareMessage.setCustomPayload(reqMap)[ FD ]
Line_13 $$ Map<String, ByteBuffer> respMap-->Line_27 $$ payloadEquals(respMap, prepareResponse.getCustomPayload())[ FD ]
Line_17 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(42))-->Line_34 $$ payloadEquals(respMap, executeResponse.getCustomPayload())[ FD ]
Line_9 $$ SimpleClient client = new SimpleClient(nativeAddr.getHostAddress(), nativePort)-->Line_25 $$ ResultMessage.Prepared prepareResponse = (ResultMessage.Prepared) client.execute(prepareMessage)[ FD ]
Line_22 $$ reqMap = Collections.singletonMap("foo", bytes(43))-->Line_31 $$ executeMessage.setCustomPayload(reqMap)[ FD ]
Line_30 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(44))-->Line_37 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(45))[ FD ]
Line_35 $$ BatchMessage batchMessage = new BatchMessage(BatchStatement.Type.UNLOGGED, Collections.<Object>singletonList("INSERT INTO " + KEYSPACE + ".atable (pk,v) VALUES (1, 'foo')"), Collections.singletonList(Collections.<ByteBuffer>emptyList()), QueryOptions.DEFAULT)-->Line_38 $$ batchMessage.setCustomPayload(reqMap)[ FD ]
Line_12 $$ Map<String, ByteBuffer> reqMap-->Line_38 $$ batchMessage.setCustomPayload(reqMap)[ FD ]
Line_9 $$ SimpleClient client = new SimpleClient(nativeAddr.getHostAddress(), nativePort)-->Line_19 $$ Message.Response queryResponse = client.execute(queryMessage)[ FD ]
Line_23 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(43))-->Line_37 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(45))[ FD ]
Line_16 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_40 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_12 $$ Map<String, ByteBuffer> reqMap-->Line_16 $$ reqMap = Collections.singletonMap("foo", bytes(42))[ FD ]
Line_14 $$ QueryMessage queryMessage = new QueryMessage("CREATE TABLE " + KEYSPACE + ".atable (pk int PRIMARY KEY, v text)", QueryOptions.DEFAULT)-->Line_18 $$ queryMessage.setCustomPayload(reqMap)[ FD ]
Line_22 $$ reqMap = Collections.singletonMap("foo", bytes(43))-->Line_26 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_23 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(43))-->Line_30 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(44))[ FD ]
Line_17 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(42))-->Line_21 $$ payloadEquals(respMap, queryResponse.getCustomPayload())[ FD ]
Line_16 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_20 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_29 $$ reqMap = Collections.singletonMap("foo", bytes(44))-->Line_40 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_22 $$ reqMap = Collections.singletonMap("foo", bytes(43))-->Line_36 $$ reqMap = Collections.singletonMap("foo", bytes(45))[ FD ]
Line_22 $$ reqMap = Collections.singletonMap("foo", bytes(43))-->Line_24 $$ prepareMessage.setCustomPayload(reqMap)[ FD ]
Line_29 $$ reqMap = Collections.singletonMap("foo", bytes(44))-->Line_38 $$ batchMessage.setCustomPayload(reqMap)[ FD ]
Line_16 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_29 $$ reqMap = Collections.singletonMap("foo", bytes(44))[ FD ]
Line_12 $$ Map<String, ByteBuffer> reqMap-->Line_40 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_19 $$ Message.Response queryResponse = client.execute(queryMessage)-->Line_21 $$ payloadEquals(respMap, queryResponse.getCustomPayload())[ FD ]
Line_16 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_38 $$ batchMessage.setCustomPayload(reqMap)[ FD ]
Line_15 $$ PrepareMessage prepareMessage = new PrepareMessage("SELECT * FROM " + KEYSPACE + ".atable")-->Line_24 $$ prepareMessage.setCustomPayload(reqMap)[ FD ]
Line_29 $$ reqMap = Collections.singletonMap("foo", bytes(44))-->Line_31 $$ executeMessage.setCustomPayload(reqMap)[ FD ]
Line_12 $$ Map<String, ByteBuffer> reqMap-->Line_26 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_12 $$ Map<String, ByteBuffer> reqMap-->Line_36 $$ reqMap = Collections.singletonMap("foo", bytes(45))[ FD ]
Line_17 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(42))-->Line_30 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(44))[ FD ]
Line_25 $$ ResultMessage.Prepared prepareResponse = (ResultMessage.Prepared) client.execute(prepareMessage)-->Line_27 $$ payloadEquals(respMap, prepareResponse.getCustomPayload())[ FD ]
Line_13 $$ Map<String, ByteBuffer> respMap-->Line_23 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(43))[ FD ]
Line_17 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(42))-->Line_23 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(43))[ FD ]
Line_22 $$ reqMap = Collections.singletonMap("foo", bytes(43))-->Line_33 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_16 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_33 $$ payloadEquals(reqMap, requestPayload)[ FD ]
