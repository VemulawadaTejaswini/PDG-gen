Line_31 $$ Message.Response executeResponse = client.execute(executeMessage)-->Line_33 $$ payloadEquals(respMap, executeResponse.getCustomPayload())[ FD ]
Line_15 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_35 $$ reqMap = Collections.singletonMap("foo", bytes(45))[ FD ]
Line_11 $$ Map<String, ByteBuffer> reqMap-->Line_23 $$ prepareMessage.setCustomPayload(reqMap)[ FD ]
Line_15 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_25 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_14 $$ PrepareMessage prepareMessage = new PrepareMessage("SELECT * FROM " + KEYSPACE + ".atable")-->Line_24 $$ ResultMessage.Prepared prepareResponse = (ResultMessage.Prepared) client.execute(prepareMessage)[ FD ]
Line_16 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(42))-->Line_40 $$ payloadEquals(respMap, batchResponse.getCustomPayload())[ FD ]
Line_12 $$ Map<String, ByteBuffer> respMap-->Line_22 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(43))[ FD ]
Line_29 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(44))-->Line_33 $$ payloadEquals(respMap, executeResponse.getCustomPayload())[ FD ]
Line_12 $$ Map<String, ByteBuffer> respMap-->Line_29 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(44))[ FD ]
Line_12 $$ Map<String, ByteBuffer> respMap-->Line_16 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(42))[ FD ]
Line_21 $$ reqMap = Collections.singletonMap("foo", bytes(43))-->Line_37 $$ batchMessage.setCustomPayload(reqMap)[ FD ]
Line_28 $$ reqMap = Collections.singletonMap("foo", bytes(44))-->Line_32 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_8 $$ SimpleClient client = new SimpleClient(nativeAddr.getHostAddress(), nativePort)-->Line_24 $$ ResultMessage.Prepared prepareResponse = (ResultMessage.Prepared) client.execute(prepareMessage)[ FD ]
Line_11 $$ Map<String, ByteBuffer> reqMap-->Line_17 $$ queryMessage.setCustomPayload(reqMap)[ FD ]
Line_2 $$ public void testMessagePayload() throws Throwable -->Line_4 $$ cqlQueryHandlerField.set(null, new TestQueryHandler())[ CD ]
Line_22 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(43))-->Line_36 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(45))[ FD ]
Line_38 $$ Message.Response batchResponse = client.execute(batchMessage)-->Line_40 $$ payloadEquals(respMap, batchResponse.getCustomPayload())[ FD ]
Line_34 $$ BatchMessage batchMessage = new BatchMessage(BatchStatement.Type.UNLOGGED, Collections.<Object>singletonList("INSERT INTO " + KEYSPACE + ".atable (pk,v) VALUES (1, 'foo')"), Collections.singletonList(Collections.<ByteBuffer>emptyList()), QueryOptions.DEFAULT)-->Line_37 $$ batchMessage.setCustomPayload(reqMap)[ FD ]
Line_22 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(43))-->Line_33 $$ payloadEquals(respMap, executeResponse.getCustomPayload())[ FD ]
Line_12 $$ Map<String, ByteBuffer> respMap-->Line_26 $$ payloadEquals(respMap, prepareResponse.getCustomPayload())[ FD ]
Line_11 $$ Map<String, ByteBuffer> reqMap-->Line_30 $$ executeMessage.setCustomPayload(reqMap)[ FD ]
Line_8 $$ SimpleClient client = new SimpleClient(nativeAddr.getHostAddress(), nativePort)-->Line_31 $$ Message.Response executeResponse = client.execute(executeMessage)[ FD ]
Line_21 $$ reqMap = Collections.singletonMap("foo", bytes(43))-->Line_28 $$ reqMap = Collections.singletonMap("foo", bytes(44))[ FD ]
Line_13 $$ QueryMessage queryMessage = new QueryMessage("CREATE TABLE " + KEYSPACE + ".atable (pk int PRIMARY KEY, v text)", QueryOptions.DEFAULT)-->Line_17 $$ queryMessage.setCustomPayload(reqMap)[ FD ]
Line_12 $$ Map<String, ByteBuffer> respMap-->Line_40 $$ payloadEquals(respMap, batchResponse.getCustomPayload())[ FD ]
Line_16 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(42))-->Line_33 $$ payloadEquals(respMap, executeResponse.getCustomPayload())[ FD ]
Line_12 $$ Map<String, ByteBuffer> respMap-->Line_33 $$ payloadEquals(respMap, executeResponse.getCustomPayload())[ FD ]
Line_8 $$ SimpleClient client = new SimpleClient(nativeAddr.getHostAddress(), nativePort)-->Line_18 $$ Message.Response queryResponse = client.execute(queryMessage)[ FD ]
Line_36 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(45))-->Line_40 $$ payloadEquals(respMap, batchResponse.getCustomPayload())[ FD ]
Line_16 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(42))-->Line_29 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(44))[ FD ]
Line_21 $$ reqMap = Collections.singletonMap("foo", bytes(43))-->Line_32 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_11 $$ Map<String, ByteBuffer> reqMap-->Line_19 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_24 $$ ResultMessage.Prepared prepareResponse = (ResultMessage.Prepared) client.execute(prepareMessage)-->Line_26 $$ payloadEquals(respMap, prepareResponse.getCustomPayload())[ FD ]
Line_14 $$ PrepareMessage prepareMessage = new PrepareMessage("SELECT * FROM " + KEYSPACE + ".atable")-->Line_23 $$ prepareMessage.setCustomPayload(reqMap)[ FD ]
Line_22 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(43))-->Line_29 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(44))[ FD ]
Line_15 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_19 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_27 $$ ExecuteMessage executeMessage = new ExecuteMessage(prepareResponse.statementId, QueryOptions.DEFAULT)-->Line_31 $$ Message.Response executeResponse = client.execute(executeMessage)[ FD ]
Line_11 $$ Map<String, ByteBuffer> reqMap-->Line_21 $$ reqMap = Collections.singletonMap("foo", bytes(43))[ FD ]
Line_21 $$ reqMap = Collections.singletonMap("foo", bytes(43))-->Line_35 $$ reqMap = Collections.singletonMap("foo", bytes(45))[ FD ]
Line_16 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(42))-->Line_36 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(45))[ FD ]
Line_2 $$ public void testMessagePayload() throws Throwable -->Line_3 $$ QueryHandler queryHandler = (QueryHandler) cqlQueryHandlerField.get(null)[ CD ]
Line_18 $$ Message.Response queryResponse = client.execute(queryMessage)-->Line_20 $$ payloadEquals(respMap, queryResponse.getCustomPayload())[ FD ]
Line_15 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_30 $$ executeMessage.setCustomPayload(reqMap)[ FD ]
Line_11 $$ Map<String, ByteBuffer> reqMap-->Line_15 $$ reqMap = Collections.singletonMap("foo", bytes(42))[ FD ]
Line_15 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_39 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_11 $$ Map<String, ByteBuffer> reqMap-->Line_28 $$ reqMap = Collections.singletonMap("foo", bytes(44))[ FD ]
Line_29 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(44))-->Line_40 $$ payloadEquals(respMap, batchResponse.getCustomPayload())[ FD ]
Line_15 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_17 $$ queryMessage.setCustomPayload(reqMap)[ FD ]
Line_15 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_28 $$ reqMap = Collections.singletonMap("foo", bytes(44))[ FD ]
Line_11 $$ Map<String, ByteBuffer> reqMap-->Line_37 $$ batchMessage.setCustomPayload(reqMap)[ FD ]
Line_12 $$ Map<String, ByteBuffer> respMap-->Line_36 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(45))[ FD ]
Line_27 $$ ExecuteMessage executeMessage = new ExecuteMessage(prepareResponse.statementId, QueryOptions.DEFAULT)-->Line_30 $$ executeMessage.setCustomPayload(reqMap)[ FD ]
Line_15 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_23 $$ prepareMessage.setCustomPayload(reqMap)[ FD ]
Line_34 $$ BatchMessage batchMessage = new BatchMessage(BatchStatement.Type.UNLOGGED, Collections.<Object>singletonList("INSERT INTO " + KEYSPACE + ".atable (pk,v) VALUES (1, 'foo')"), Collections.singletonList(Collections.<ByteBuffer>emptyList()), QueryOptions.DEFAULT)-->Line_38 $$ Message.Response batchResponse = client.execute(batchMessage)[ FD ]
Line_16 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(42))-->Line_22 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(43))[ FD ]
Line_8 $$ SimpleClient client = new SimpleClient(nativeAddr.getHostAddress(), nativePort)-->Line_10 $$ client.connect(false)[ FD ]
Line_15 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_37 $$ batchMessage.setCustomPayload(reqMap)[ FD ]
Line_13 $$ QueryMessage queryMessage = new QueryMessage("CREATE TABLE " + KEYSPACE + ".atable (pk int PRIMARY KEY, v text)", QueryOptions.DEFAULT)-->Line_18 $$ Message.Response queryResponse = client.execute(queryMessage)[ FD ]
Line_12 $$ Map<String, ByteBuffer> respMap-->Line_20 $$ payloadEquals(respMap, queryResponse.getCustomPayload())[ FD ]
Line_29 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(44))-->Line_36 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(45))[ FD ]
Line_35 $$ reqMap = Collections.singletonMap("foo", bytes(45))-->Line_37 $$ batchMessage.setCustomPayload(reqMap)[ FD ]
Line_21 $$ reqMap = Collections.singletonMap("foo", bytes(43))-->Line_23 $$ prepareMessage.setCustomPayload(reqMap)[ FD ]
Line_16 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(42))-->Line_20 $$ payloadEquals(respMap, queryResponse.getCustomPayload())[ FD ]
Line_28 $$ reqMap = Collections.singletonMap("foo", bytes(44))-->Line_37 $$ batchMessage.setCustomPayload(reqMap)[ FD ]
Line_11 $$ Map<String, ByteBuffer> reqMap-->Line_25 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_35 $$ reqMap = Collections.singletonMap("foo", bytes(45))-->Line_39 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_3 $$ QueryHandler queryHandler = (QueryHandler) cqlQueryHandlerField.get(null)-->Line_45 $$ cqlQueryHandlerField.set(null, queryHandler)[ FD ]
Line_21 $$ reqMap = Collections.singletonMap("foo", bytes(43))-->Line_30 $$ executeMessage.setCustomPayload(reqMap)[ FD ]
Line_15 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_32 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_15 $$ reqMap = Collections.singletonMap("foo", bytes(42))-->Line_21 $$ reqMap = Collections.singletonMap("foo", bytes(43))[ FD ]
Line_21 $$ reqMap = Collections.singletonMap("foo", bytes(43))-->Line_25 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_21 $$ reqMap = Collections.singletonMap("foo", bytes(43))-->Line_39 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_8 $$ SimpleClient client = new SimpleClient(nativeAddr.getHostAddress(), nativePort)-->Line_38 $$ Message.Response batchResponse = client.execute(batchMessage)[ FD ]
Line_11 $$ Map<String, ByteBuffer> reqMap-->Line_35 $$ reqMap = Collections.singletonMap("foo", bytes(45))[ FD ]
Line_8 $$ SimpleClient client = new SimpleClient(nativeAddr.getHostAddress(), nativePort)-->Line_42 $$ client.close()[ FD ]
Line_11 $$ Map<String, ByteBuffer> reqMap-->Line_39 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_16 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(42))-->Line_26 $$ payloadEquals(respMap, prepareResponse.getCustomPayload())[ FD ]
Line_22 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(43))-->Line_40 $$ payloadEquals(respMap, batchResponse.getCustomPayload())[ FD ]
Line_28 $$ reqMap = Collections.singletonMap("foo", bytes(44))-->Line_39 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_28 $$ reqMap = Collections.singletonMap("foo", bytes(44))-->Line_35 $$ reqMap = Collections.singletonMap("foo", bytes(45))[ FD ]
Line_11 $$ Map<String, ByteBuffer> reqMap-->Line_32 $$ payloadEquals(reqMap, requestPayload)[ FD ]
Line_28 $$ reqMap = Collections.singletonMap("foo", bytes(44))-->Line_30 $$ executeMessage.setCustomPayload(reqMap)[ FD ]
Line_22 $$ responsePayload = respMap = Collections.singletonMap("bar", bytes(43))-->Line_26 $$ payloadEquals(respMap, prepareResponse.getCustomPayload())[ FD ]
