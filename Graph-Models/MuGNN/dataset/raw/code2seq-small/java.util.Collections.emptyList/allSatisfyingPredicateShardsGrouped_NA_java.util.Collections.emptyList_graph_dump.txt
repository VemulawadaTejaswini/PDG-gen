Line_15 $$ if (includeRelocationTargets && shardRouting.relocating()) -->Line_16 $$ set.add(new PlainShardIterator(shardRouting.shardId(), Collections.singletonList(shardRouting.buildTargetRelocatingShard())))[ CD ]
Line_12 $$ for (ShardRouting shardRouting : indexShardRoutingTable) -->Line_13 $$ if (predicate.test(shardRouting)) [ FD ]
Line_12 $$ for (ShardRouting shardRouting : indexShardRoutingTable) -->Line_15 $$ if (includeRelocationTargets && shardRouting.relocating()) [ FD ]
Line_2 $$ private GroupShardsIterator allSatisfyingPredicateShardsGrouped(String[] indices, boolean includeEmpty, boolean includeRelocationTargets, Predicate<ShardRouting> predicate) -->Line_13 $$ if (predicate.test(shardRouting)) [ FD ]
Line_5 $$ for (String index : indices) -->Line_6 $$ IndexRoutingTable indexRoutingTable = index(index)[ FD ]
Line_2 $$ private GroupShardsIterator allSatisfyingPredicateShardsGrouped(String[] indices, boolean includeEmpty, boolean includeRelocationTargets, Predicate<ShardRouting> predicate) -->Line_25 $$ return new GroupShardsIterator(set)[ CD ]
Line_13 $$ if (predicate.test(shardRouting)) -->Line_14 $$ set.add(shardRouting.shardsIt())[ CD ]
Line_6 $$ IndexRoutingTable indexRoutingTable = index(index)-->Line_7 $$ if (indexRoutingTable == null) [ FD ]
Line_12 $$ for (ShardRouting shardRouting : indexShardRoutingTable) -->Line_16 $$ set.add(new PlainShardIterator(shardRouting.shardId(), Collections.singletonList(shardRouting.buildTargetRelocatingShard())))[ FD ]
Line_13 $$ if (predicate.test(shardRouting)) -->Line_15 $$ if (includeRelocationTargets && shardRouting.relocating()) [ CD ]
Line_12 $$ for (ShardRouting shardRouting : indexShardRoutingTable) -->Line_14 $$ set.add(shardRouting.shardsIt())[ FD ]
Line_2 $$ private GroupShardsIterator allSatisfyingPredicateShardsGrouped(String[] indices, boolean includeEmpty, boolean includeRelocationTargets, Predicate<ShardRouting> predicate) -->Line_15 $$ if (includeRelocationTargets && shardRouting.relocating()) [ FD ]
Line_13 $$ if (predicate.test(shardRouting)) -->Line_18 $$ if (includeEmpty) [ CD ]
