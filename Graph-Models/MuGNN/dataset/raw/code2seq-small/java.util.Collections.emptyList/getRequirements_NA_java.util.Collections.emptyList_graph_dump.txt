Line_2 $$ public List<PyRequirement> getRequirements(@NotNull Module module) -->Line_24 $$ return null[ CD ]
Line_2 $$ public List<PyRequirement> getRequirements(@NotNull Module module) -->Line_21 $$ if (PyPackageUtil.findSetupPy(module) != null) [ CD ]
Line_2 $$ public List<PyRequirement> getRequirements(@NotNull Module module) -->Line_18 $$ if (!lines.isEmpty()) [ CD ]
Line_2 $$ public List<PyRequirement> getRequirements(@NotNull Module module) -->Line_21 $$ if (PyPackageUtil.findSetupPy(module) != null) [ FD ]
Line_3 $$ List<PyRequirement> requirements = PySdkUtil.getRequirementsFromTxt(module)-->Line_4 $$ if (requirements != null) [ FD ]
Line_9 $$ final PyListLiteralExpression installRequires = PyPackageUtil.findSetupPyRequires(module, name)-->Line_10 $$ if (installRequires != null) [ FD ]
Line_12 $$ if (e instanceof PyStringLiteralExpression) -->Line_13 $$ lines.add(((PyStringLiteralExpression) e).getStringValue())[ CD ]
Line_9 $$ final PyListLiteralExpression installRequires = PyPackageUtil.findSetupPyRequires(module, name)-->Line_11 $$ for (PyExpression e : installRequires.getElements()) [ FD ]
Line_18 $$ if (!lines.isEmpty()) -->Line_19 $$ return PyRequirement.parse(StringUtil.join(lines, "\n"))[ CD ]
Line_7 $$ final List<String> lines = new ArrayList<String>()-->Line_13 $$ lines.add(((PyStringLiteralExpression) e).getStringValue())[ FD ]
Line_2 $$ public List<PyRequirement> getRequirements(@NotNull Module module) -->Line_9 $$ final PyListLiteralExpression installRequires = PyPackageUtil.findSetupPyRequires(module, name)[ FD ]
Line_2 $$ public List<PyRequirement> getRequirements(@NotNull Module module) -->Line_7 $$ final List<String> lines = new ArrayList<String>()[ CD ]
Line_21 $$ if (PyPackageUtil.findSetupPy(module) != null) -->Line_22 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public List<PyRequirement> getRequirements(@NotNull Module module) -->Line_3 $$ List<PyRequirement> requirements = PySdkUtil.getRequirementsFromTxt(module)[ FD ]
Line_2 $$ public List<PyRequirement> getRequirements(@NotNull Module module) -->Line_3 $$ List<PyRequirement> requirements = PySdkUtil.getRequirementsFromTxt(module)[ CD ]
Line_7 $$ final List<String> lines = new ArrayList<String>()-->Line_19 $$ return PyRequirement.parse(StringUtil.join(lines, "\n"))[ FD ]
Line_2 $$ public List<PyRequirement> getRequirements(@NotNull Module module) -->Line_4 $$ if (requirements != null) [ CD ]
Line_11 $$ for (PyExpression e : installRequires.getElements()) -->Line_12 $$ if (e instanceof PyStringLiteralExpression) [ FD ]
Line_7 $$ final List<String> lines = new ArrayList<String>()-->Line_18 $$ if (!lines.isEmpty()) [ FD ]
Line_4 $$ if (requirements != null) -->Line_5 $$ return requirements[ CD ]
Line_8 $$ for (String name : PyPackageUtil.SETUP_PY_REQUIRES_KWARGS_NAMES) -->Line_9 $$ final PyListLiteralExpression installRequires = PyPackageUtil.findSetupPyRequires(module, name)[ FD ]
