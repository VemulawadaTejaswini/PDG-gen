Line_2 $$ public List<String> getAllowedNamespaces(@NotNull String namespaceKey, @NotNull XmlFile file) -->Line_4 $$ if (function instanceof ConstantFunction) [ CD ]
Line_2 $$ public List<String> getAllowedNamespaces(@NotNull String namespaceKey, @NotNull XmlFile file) -->Line_7 $$ if (function != null) [ CD ]
Line_4 $$ if (function instanceof ConstantFunction) -->Line_5 $$ return function.fun(null)[ CD ]
Line_7 $$ if (function != null) -->Line_9 $$ if (document != null) [ CD ]
Line_3 $$ final NotNullFunction<XmlTag, List<String>> function = myNamespacePolicies.get(namespaceKey)-->Line_12 $$ return function.fun(tag)[ FD ]
Line_8 $$ final XmlDocument document = file.getDocument()-->Line_9 $$ if (document != null) [ FD ]
Line_7 $$ if (function != null) -->Line_8 $$ final XmlDocument document = file.getDocument()[ CD ]
Line_8 $$ final XmlDocument document = file.getDocument()-->Line_10 $$ final XmlTag tag = document.getRootTag()[ FD ]
Line_2 $$ public List<String> getAllowedNamespaces(@NotNull String namespaceKey, @NotNull XmlFile file) -->Line_18 $$ return Collections.emptyList()[ CD ]
Line_9 $$ if (document != null) -->Line_11 $$ if (tag != null) [ CD ]
Line_2 $$ public List<String> getAllowedNamespaces(@NotNull String namespaceKey, @NotNull XmlFile file) -->Line_3 $$ final NotNullFunction<XmlTag, List<String>> function = myNamespacePolicies.get(namespaceKey)[ FD ]
Line_2 $$ public List<String> getAllowedNamespaces(@NotNull String namespaceKey, @NotNull XmlFile file) -->Line_3 $$ final NotNullFunction<XmlTag, List<String>> function = myNamespacePolicies.get(namespaceKey)[ CD ]
Line_10 $$ final XmlTag tag = document.getRootTag()-->Line_11 $$ if (tag != null) [ FD ]
Line_3 $$ final NotNullFunction<XmlTag, List<String>> function = myNamespacePolicies.get(namespaceKey)-->Line_7 $$ if (function != null) [ FD ]
Line_3 $$ final NotNullFunction<XmlTag, List<String>> function = myNamespacePolicies.get(namespaceKey)-->Line_5 $$ return function.fun(null)[ FD ]
Line_2 $$ public List<String> getAllowedNamespaces(@NotNull String namespaceKey, @NotNull XmlFile file) -->Line_8 $$ final XmlDocument document = file.getDocument()[ FD ]
Line_10 $$ final XmlTag tag = document.getRootTag()-->Line_12 $$ return function.fun(tag)[ FD ]
Line_7 $$ if (function != null) -->Line_16 $$ return Collections.singletonList(namespaceKey)[ CD ]
Line_2 $$ public List<String> getAllowedNamespaces(@NotNull String namespaceKey, @NotNull XmlFile file) -->Line_16 $$ return Collections.singletonList(namespaceKey)[ FD ]
Line_11 $$ if (tag != null) -->Line_12 $$ return function.fun(tag)[ CD ]
Line_9 $$ if (document != null) -->Line_10 $$ final XmlTag tag = document.getRootTag()[ CD ]
Line_3 $$ final NotNullFunction<XmlTag, List<String>> function = myNamespacePolicies.get(namespaceKey)-->Line_4 $$ if (function instanceof ConstantFunction) [ FD ]
