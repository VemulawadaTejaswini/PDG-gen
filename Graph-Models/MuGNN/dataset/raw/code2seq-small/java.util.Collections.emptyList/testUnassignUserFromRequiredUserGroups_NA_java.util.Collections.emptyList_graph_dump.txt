Line_6 $$ User user = UserLocalServiceUtil.getUser(userIds[0])-->Line_10 $$ MembershipPolicyTestUtil.updateUser(user, null, null, null, userUserGroupIds, Collections.<UserGroupRole>emptyList())[ FD ]
Line_4 $$ long[] standardUserGroupIds = addStandardUserGroups()-->Line_9 $$ long[] userUserGroupIds = ArrayUtil.append(standardUserGroupIds, requiredUserGroupIds)[ FD ]
Line_2 $$ public void testUnassignUserFromRequiredUserGroups() throws Exception -->Line_15 $$ Assert.assertEquals(requiredUserGroupIds.length, userGroups.size())[ CD ]
Line_2 $$ public void testUnassignUserFromRequiredUserGroups() throws Exception -->Line_10 $$ MembershipPolicyTestUtil.updateUser(user, null, null, null, userUserGroupIds, Collections.<UserGroupRole>emptyList())[ CD ]
Line_2 $$ public void testUnassignUserFromRequiredUserGroups() throws Exception -->Line_12 $$ Assert.assertEquals(userUserGroupIds.length, userGroups.size())[ CD ]
Line_2 $$ public void testUnassignUserFromRequiredUserGroups() throws Exception -->Line_4 $$ long[] standardUserGroupIds = addStandardUserGroups()[ CD ]
Line_5 $$ long[] requiredUserGroupIds = addRequiredUserGroups()-->Line_13 $$ MembershipPolicyTestUtil.updateUser(user, null, null, null, requiredUserGroupIds, Collections.<UserGroupRole>emptyList())[ FD ]
Line_11 $$ userGroups = user.getUserGroups()-->Line_15 $$ Assert.assertEquals(requiredUserGroupIds.length, userGroups.size())[ FD ]
Line_11 $$ userGroups = user.getUserGroups()-->Line_12 $$ Assert.assertEquals(userUserGroupIds.length, userGroups.size())[ FD ]
Line_2 $$ public void testUnassignUserFromRequiredUserGroups() throws Exception -->Line_3 $$ long[] userIds = addUsers()[ CD ]
Line_7 $$ List<UserGroup> userGroups = user.getUserGroups()-->Line_14 $$ userGroups = user.getUserGroups()[ FD ]
Line_2 $$ public void testUnassignUserFromRequiredUserGroups() throws Exception -->Line_6 $$ User user = UserLocalServiceUtil.getUser(userIds[0])[ CD ]
Line_6 $$ User user = UserLocalServiceUtil.getUser(userIds[0])-->Line_7 $$ List<UserGroup> userGroups = user.getUserGroups()[ FD ]
Line_6 $$ User user = UserLocalServiceUtil.getUser(userIds[0])-->Line_13 $$ MembershipPolicyTestUtil.updateUser(user, null, null, null, requiredUserGroupIds, Collections.<UserGroupRole>emptyList())[ FD ]
Line_2 $$ public void testUnassignUserFromRequiredUserGroups() throws Exception -->Line_9 $$ long[] userUserGroupIds = ArrayUtil.append(standardUserGroupIds, requiredUserGroupIds)[ CD ]
Line_7 $$ List<UserGroup> userGroups = user.getUserGroups()-->Line_8 $$ Assert.assertEquals(0, userGroups.size())[ FD ]
Line_5 $$ long[] requiredUserGroupIds = addRequiredUserGroups()-->Line_9 $$ long[] userUserGroupIds = ArrayUtil.append(standardUserGroupIds, requiredUserGroupIds)[ FD ]
Line_2 $$ public void testUnassignUserFromRequiredUserGroups() throws Exception -->Line_5 $$ long[] requiredUserGroupIds = addRequiredUserGroups()[ CD ]
Line_6 $$ User user = UserLocalServiceUtil.getUser(userIds[0])-->Line_14 $$ userGroups = user.getUserGroups()[ FD ]
Line_2 $$ public void testUnassignUserFromRequiredUserGroups() throws Exception -->Line_7 $$ List<UserGroup> userGroups = user.getUserGroups()[ CD ]
Line_7 $$ List<UserGroup> userGroups = user.getUserGroups()-->Line_15 $$ Assert.assertEquals(requiredUserGroupIds.length, userGroups.size())[ FD ]
Line_2 $$ public void testUnassignUserFromRequiredUserGroups() throws Exception -->Line_8 $$ Assert.assertEquals(0, userGroups.size())[ CD ]
Line_2 $$ public void testUnassignUserFromRequiredUserGroups() throws Exception -->Line_11 $$ userGroups = user.getUserGroups()[ CD ]
Line_2 $$ public void testUnassignUserFromRequiredUserGroups() throws Exception -->Line_14 $$ userGroups = user.getUserGroups()[ CD ]
Line_9 $$ long[] userUserGroupIds = ArrayUtil.append(standardUserGroupIds, requiredUserGroupIds)-->Line_10 $$ MembershipPolicyTestUtil.updateUser(user, null, null, null, userUserGroupIds, Collections.<UserGroupRole>emptyList())[ FD ]
Line_14 $$ userGroups = user.getUserGroups()-->Line_15 $$ Assert.assertEquals(requiredUserGroupIds.length, userGroups.size())[ FD ]
Line_11 $$ userGroups = user.getUserGroups()-->Line_14 $$ userGroups = user.getUserGroups()[ FD ]
Line_7 $$ List<UserGroup> userGroups = user.getUserGroups()-->Line_11 $$ userGroups = user.getUserGroups()[ FD ]
Line_6 $$ User user = UserLocalServiceUtil.getUser(userIds[0])-->Line_11 $$ userGroups = user.getUserGroups()[ FD ]
Line_2 $$ public void testUnassignUserFromRequiredUserGroups() throws Exception -->Line_13 $$ MembershipPolicyTestUtil.updateUser(user, null, null, null, requiredUserGroupIds, Collections.<UserGroupRole>emptyList())[ CD ]
Line_7 $$ List<UserGroup> userGroups = user.getUserGroups()-->Line_12 $$ Assert.assertEquals(userUserGroupIds.length, userGroups.size())[ FD ]
