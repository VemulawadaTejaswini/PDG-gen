Line_2 $$ private static List<VirtualFile> invokeManualMerging(Collection<String> paths, Project project) -->Line_15 $$ final CvsHandler editHandler = CommandCvsHandler.createEditHandler(VfsUtil.toVirtualFileArray(readOnlyFiles), CvsConfiguration.getInstance(project).RESERVED_EDIT)[ FD ]
Line_2 $$ private static List<VirtualFile> invokeManualMerging(Collection<String> paths, Project project) -->Line_3 $$ final List<VirtualFile> readOnlyFiles = new ArrayList<VirtualFile>()[ CD ]
Line_2 $$ private static List<VirtualFile> invokeManualMerging(Collection<String> paths, Project project) -->Line_26 $$ return AbstractVcsHelper.getInstance(project).showMergeDialog(files, new CvsMergeProvider())[ FD ]
Line_2 $$ private static List<VirtualFile> invokeManualMerging(Collection<String> paths, Project project) -->Line_14 $$ if (readOnlyFiles.size() > 0) [ CD ]
Line_3 $$ final List<VirtualFile> readOnlyFiles = new ArrayList<VirtualFile>()-->Line_14 $$ if (readOnlyFiles.size() > 0) [ FD ]
Line_6 $$ final VirtualFile virtualFile = CvsVfsUtil.findFileByIoFile(new File(path))-->Line_7 $$ if (virtualFile != null) [ FD ]
Line_4 $$ final List<VirtualFile> files = new ArrayList<VirtualFile>()-->Line_25 $$ if (!files.isEmpty()) [ FD ]
Line_2 $$ private static List<VirtualFile> invokeManualMerging(Collection<String> paths, Project project) -->Line_28 $$ return Collections.emptyList()[ CD ]
Line_15 $$ final CvsHandler editHandler = CommandCvsHandler.createEditHandler(VfsUtil.toVirtualFileArray(readOnlyFiles), CvsConfiguration.getInstance(project).RESERVED_EDIT)-->Line_16 $$ new CvsOperationExecutor(true, project, ModalityState.current()).performActionSync(editHandler, CvsOperationExecutorCallback.EMPTY)[ FD ]
Line_14 $$ if (readOnlyFiles.size() > 0) -->Line_17 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() [ CD ]
Line_6 $$ final VirtualFile virtualFile = CvsVfsUtil.findFileByIoFile(new File(path))-->Line_10 $$ readOnlyFiles.add(virtualFile)[ FD ]
Line_4 $$ final List<VirtualFile> files = new ArrayList<VirtualFile>()-->Line_8 $$ files.add(virtualFile)[ FD ]
Line_14 $$ if (readOnlyFiles.size() > 0) -->Line_16 $$ new CvsOperationExecutor(true, project, ModalityState.current()).performActionSync(editHandler, CvsOperationExecutorCallback.EMPTY)[ CD ]
Line_14 $$ if (readOnlyFiles.size() > 0) -->Line_15 $$ final CvsHandler editHandler = CommandCvsHandler.createEditHandler(VfsUtil.toVirtualFileArray(readOnlyFiles), CvsConfiguration.getInstance(project).RESERVED_EDIT)[ CD ]
Line_4 $$ final List<VirtualFile> files = new ArrayList<VirtualFile>()-->Line_26 $$ return AbstractVcsHelper.getInstance(project).showMergeDialog(files, new CvsMergeProvider())[ FD ]
Line_2 $$ private static List<VirtualFile> invokeManualMerging(Collection<String> paths, Project project) -->Line_25 $$ if (!files.isEmpty()) [ CD ]
Line_3 $$ final List<VirtualFile> readOnlyFiles = new ArrayList<VirtualFile>()-->Line_10 $$ readOnlyFiles.add(virtualFile)[ FD ]
Line_19 $$ for (VirtualFile file : readOnlyFiles) -->Line_20 $$ file.refresh(false, false)[ FD ]
Line_25 $$ if (!files.isEmpty()) -->Line_26 $$ return AbstractVcsHelper.getInstance(project).showMergeDialog(files, new CvsMergeProvider())[ CD ]
Line_6 $$ final VirtualFile virtualFile = CvsVfsUtil.findFileByIoFile(new File(path))-->Line_9 $$ if (!virtualFile.isWritable()) [ FD ]
Line_2 $$ private static List<VirtualFile> invokeManualMerging(Collection<String> paths, Project project) -->Line_4 $$ final List<VirtualFile> files = new ArrayList<VirtualFile>()[ CD ]
Line_7 $$ if (virtualFile != null) -->Line_9 $$ if (!virtualFile.isWritable()) [ CD ]
Line_3 $$ final List<VirtualFile> readOnlyFiles = new ArrayList<VirtualFile>()-->Line_15 $$ final CvsHandler editHandler = CommandCvsHandler.createEditHandler(VfsUtil.toVirtualFileArray(readOnlyFiles), CvsConfiguration.getInstance(project).RESERVED_EDIT)[ FD ]
Line_6 $$ final VirtualFile virtualFile = CvsVfsUtil.findFileByIoFile(new File(path))-->Line_8 $$ files.add(virtualFile)[ FD ]
Line_9 $$ if (!virtualFile.isWritable()) -->Line_10 $$ readOnlyFiles.add(virtualFile)[ CD ]
Line_7 $$ if (virtualFile != null) -->Line_8 $$ files.add(virtualFile)[ CD ]
