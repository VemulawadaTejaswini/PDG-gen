Line_12 $$ for (Module module : ModuleManager.getInstance(project).getModules()) -->Line_15 $$ String path = ExternalSystemApiUtil.getExternalRootProjectPath(module)[ FD ]
Line_20 $$ if (!orphanModules.isEmpty()) -->Line_21 $$ projectNode.getGroup().remove(projectNode)[ CD ]
Line_20 $$ if (!orphanModules.isEmpty()) -->Line_22 $$ ProjectDataManager.getInstance().removeData(ProjectKeys.MODULE, orphanModules, Collections.<DataNode<ModuleData>>emptyList(), projectData, project, false)[ CD ]
Line_12 $$ for (Module module : ModuleManager.getInstance(project).getModules()) -->Line_17 $$ orphanModules.add(module)[ FD ]
Line_16 $$ if (projectData.getLinkedExternalProjectPath().equals(path)) -->Line_17 $$ orphanModules.add(module)[ CD ]
Line_5 $$ final ProjectNode projectNode = ExternalSystemDataKeys.SELECTED_PROJECT_NODE.getData(e.getDataContext())-->Line_21 $$ projectNode.getGroup().remove(projectNode)[ FD ]
Line_12 $$ for (Module module : ModuleManager.getInstance(project).getModules()) -->Line_13 $$ if (!ExternalSystemApiUtil.isExternalSystemAwareModule(projectSystemId, module))[ FD ]
Line_15 $$ String path = ExternalSystemApiUtil.getExternalRootProjectPath(module)-->Line_16 $$ if (projectData.getLinkedExternalProjectPath().equals(path)) [ FD ]
