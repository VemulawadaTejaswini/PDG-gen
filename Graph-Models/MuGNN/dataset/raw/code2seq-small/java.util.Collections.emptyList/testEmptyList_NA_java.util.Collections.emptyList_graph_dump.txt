Line_4 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) -->Line_7 $$ assertEquals("some_array", parser.currentName())[ FD ]
Line_2 $$ public void testEmptyList() throws IOException -->Line_3 $$ XContentBuilder builder = XContentFactory.jsonBuilder().startObject().startArray("some_array").endArray().endObject()[ CD ]
Line_4 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) -->Line_5 $$ assertEquals(XContentParser.Token.START_OBJECT, parser.nextToken())[ FD ]
Line_4 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) -->Line_12 $$ assertEquals(Collections.emptyList(), parser.list())[ FD ]
Line_4 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) -->Line_6 $$ assertEquals(XContentParser.Token.FIELD_NAME, parser.nextToken())[ FD ]
Line_3 $$ XContentBuilder builder = XContentFactory.jsonBuilder().startObject().startArray("some_array").endArray().endObject()-->Line_4 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) [ FD ]
