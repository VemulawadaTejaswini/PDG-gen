Line_2 $$ public void testDraftArticles() throws Exception -->Line_3 $$ QueryDefinition<JournalArticle> queryDefinition = new QueryDefinition(WorkflowConstants.STATUS_ANY)[ CD ]
Line_2 $$ public void testDraftArticles() throws Exception -->Line_8 $$ article.setStatus(WorkflowConstants.STATUS_DRAFT)[ CD ]
Line_2 $$ public void testDraftArticles() throws Exception -->Line_10 $$ _articles.add(article)[ CD ]
Line_3 $$ QueryDefinition<JournalArticle> queryDefinition = new QueryDefinition(WorkflowConstants.STATUS_ANY)-->Line_15 $$ queryDefinition.setIncludeOwner(false)[ FD ]
Line_2 $$ public void testDraftArticles() throws Exception -->Line_11 $$ queryDefinition.setIncludeOwner(true)[ CD ]
Line_3 $$ QueryDefinition<JournalArticle> queryDefinition = new QueryDefinition(WorkflowConstants.STATUS_ANY)-->Line_12 $$ queryDefinition.setOwnerUserId(_USER_ID)[ FD ]
Line_3 $$ QueryDefinition<JournalArticle> queryDefinition = new QueryDefinition(WorkflowConstants.STATUS_ANY)-->Line_5 $$ queryDefinition.setOwnerUserId(TestPropsValues.getUserId())[ FD ]
Line_3 $$ QueryDefinition<JournalArticle> queryDefinition = new QueryDefinition(WorkflowConstants.STATUS_ANY)-->Line_14 $$ testQueryByG_C(_group.getGroupId(), Collections.<Long>emptyList(), JournalArticleConstants.CLASSNAME_ID_DEFAULT, queryDefinition, 3)[ FD ]
Line_2 $$ public void testDraftArticles() throws Exception -->Line_15 $$ queryDefinition.setIncludeOwner(false)[ CD ]
Line_2 $$ public void testDraftArticles() throws Exception -->Line_7 $$ article.setUserId(_USER_ID)[ CD ]
Line_2 $$ public void testDraftArticles() throws Exception -->Line_14 $$ testQueryByG_C(_group.getGroupId(), Collections.<Long>emptyList(), JournalArticleConstants.CLASSNAME_ID_DEFAULT, queryDefinition, 3)[ CD ]
Line_6 $$ JournalArticle article = JournalTestUtil.addArticleWithXMLContent(_group.getGroupId(), _folder.getFolderId(), JournalArticleConstants.CLASSNAME_ID_DEFAULT, "<title>Article 1</title>", _basicWebContentDDMStructure.getStructureKey(), _basicWebContentDDMTemplate.getTemplateKey())-->Line_9 $$ JournalArticleLocalServiceUtil.updateJournalArticle(article)[ FD ]
Line_6 $$ JournalArticle article = JournalTestUtil.addArticleWithXMLContent(_group.getGroupId(), _folder.getFolderId(), JournalArticleConstants.CLASSNAME_ID_DEFAULT, "<title>Article 1</title>", _basicWebContentDDMStructure.getStructureKey(), _basicWebContentDDMTemplate.getTemplateKey())-->Line_8 $$ article.setStatus(WorkflowConstants.STATUS_DRAFT)[ FD ]
Line_2 $$ public void testDraftArticles() throws Exception -->Line_4 $$ testQueryByG_C(_group.getGroupId(), Collections.<Long>emptyList(), JournalArticleConstants.CLASSNAME_ID_DEFAULT, queryDefinition, 2)[ CD ]
Line_6 $$ JournalArticle article = JournalTestUtil.addArticleWithXMLContent(_group.getGroupId(), _folder.getFolderId(), JournalArticleConstants.CLASSNAME_ID_DEFAULT, "<title>Article 1</title>", _basicWebContentDDMStructure.getStructureKey(), _basicWebContentDDMTemplate.getTemplateKey())-->Line_7 $$ article.setUserId(_USER_ID)[ FD ]
Line_3 $$ QueryDefinition<JournalArticle> queryDefinition = new QueryDefinition(WorkflowConstants.STATUS_ANY)-->Line_13 $$ queryDefinition.setStatus(WorkflowConstants.STATUS_APPROVED)[ FD ]
Line_6 $$ JournalArticle article = JournalTestUtil.addArticleWithXMLContent(_group.getGroupId(), _folder.getFolderId(), JournalArticleConstants.CLASSNAME_ID_DEFAULT, "<title>Article 1</title>", _basicWebContentDDMStructure.getStructureKey(), _basicWebContentDDMTemplate.getTemplateKey())-->Line_10 $$ _articles.add(article)[ FD ]
Line_2 $$ public void testDraftArticles() throws Exception -->Line_12 $$ queryDefinition.setOwnerUserId(_USER_ID)[ CD ]
Line_3 $$ QueryDefinition<JournalArticle> queryDefinition = new QueryDefinition(WorkflowConstants.STATUS_ANY)-->Line_4 $$ testQueryByG_C(_group.getGroupId(), Collections.<Long>emptyList(), JournalArticleConstants.CLASSNAME_ID_DEFAULT, queryDefinition, 2)[ FD ]
Line_2 $$ public void testDraftArticles() throws Exception -->Line_5 $$ queryDefinition.setOwnerUserId(TestPropsValues.getUserId())[ CD ]
Line_3 $$ QueryDefinition<JournalArticle> queryDefinition = new QueryDefinition(WorkflowConstants.STATUS_ANY)-->Line_16 $$ testQueryByG_C(_group.getGroupId(), Collections.<Long>emptyList(), JournalArticleConstants.CLASSNAME_ID_DEFAULT, queryDefinition, 0)[ FD ]
Line_3 $$ QueryDefinition<JournalArticle> queryDefinition = new QueryDefinition(WorkflowConstants.STATUS_ANY)-->Line_11 $$ queryDefinition.setIncludeOwner(true)[ FD ]
Line_2 $$ public void testDraftArticles() throws Exception -->Line_13 $$ queryDefinition.setStatus(WorkflowConstants.STATUS_APPROVED)[ CD ]
Line_2 $$ public void testDraftArticles() throws Exception -->Line_6 $$ JournalArticle article = JournalTestUtil.addArticleWithXMLContent(_group.getGroupId(), _folder.getFolderId(), JournalArticleConstants.CLASSNAME_ID_DEFAULT, "<title>Article 1</title>", _basicWebContentDDMStructure.getStructureKey(), _basicWebContentDDMTemplate.getTemplateKey())[ CD ]
Line_2 $$ public void testDraftArticles() throws Exception -->Line_9 $$ JournalArticleLocalServiceUtil.updateJournalArticle(article)[ CD ]
Line_2 $$ public void testDraftArticles() throws Exception -->Line_16 $$ testQueryByG_C(_group.getGroupId(), Collections.<Long>emptyList(), JournalArticleConstants.CLASSNAME_ID_DEFAULT, queryDefinition, 0)[ CD ]
