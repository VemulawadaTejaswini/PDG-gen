Line_12 $$ Layout layout = LayoutLocalServiceUtil.getLayoutByUuidAndGroupId(uuid, layoutSet.getGroupId(), layoutSet.isPrivateLayout())-->Line_13 $$ layouts.add(layout)[ FD ]
Line_9 $$ if (Validator.isNotNull(uuids)) -->Line_15 $$ return layouts[ CD ]
Line_7 $$ UnicodeProperties settingsProperties = layoutSet.getSettingsProperties()-->Line_8 $$ String uuids = settingsProperties.getProperty(MERGE_FAIL_FRIENDLY_URL_LAYOUTS)[ FD ]
Line_8 $$ String uuids = settingsProperties.getProperty(MERGE_FAIL_FRIENDLY_URL_LAYOUTS)-->Line_9 $$ if (Validator.isNotNull(uuids)) [ FD ]
Line_10 $$ List<Layout> layouts = new ArrayList()-->Line_13 $$ layouts.add(layout)[ FD ]
Line_8 $$ String uuids = settingsProperties.getProperty(MERGE_FAIL_FRIENDLY_URL_LAYOUTS)-->Line_11 $$ for (String uuid : StringUtil.split(uuids)) [ FD ]
Line_11 $$ for (String uuid : StringUtil.split(uuids)) -->Line_12 $$ Layout layout = LayoutLocalServiceUtil.getLayoutByUuidAndGroupId(uuid, layoutSet.getGroupId(), layoutSet.isPrivateLayout())[ FD ]
Line_9 $$ if (Validator.isNotNull(uuids)) -->Line_10 $$ List<Layout> layouts = new ArrayList()[ CD ]
Line_4 $$ if (layoutSet == null) -->Line_5 $$ return Collections.emptyList()[ CD ]
