Line_2 $$ public List<Future<?>> submitMaximal(final ColumnFamilyStore cfStore, final int gcBefore, boolean splitOutput) -->Line_3 $$ final Collection<AbstractCompactionTask> tasks = cfStore.getCompactionStrategyManager().getMaximalTasks(gcBefore, splitOutput)[ CD ]
Line_3 $$ final Collection<AbstractCompactionTask> tasks = cfStore.getCompactionStrategyManager().getMaximalTasks(gcBefore, splitOutput)-->Line_4 $$ if (tasks == null)[ FD ]
Line_2 $$ public List<Future<?>> submitMaximal(final ColumnFamilyStore cfStore, final int gcBefore, boolean splitOutput) -->Line_4 $$ if (tasks == null)[ CD ]
Line_13 $$ if (executor.isShutdown()) -->Line_14 $$ logger.info("Compaction executor has shut down, not submitting task")[ CD ]
Line_6 $$ List<Future<?>> futures = new ArrayList()-->Line_17 $$ futures.add(executor.submit(runnable))[ FD ]
Line_2 $$ public List<Future<?>> submitMaximal(final ColumnFamilyStore cfStore, final int gcBefore, boolean splitOutput) -->Line_19 $$ return futures[ CD ]
Line_2 $$ public List<Future<?>> submitMaximal(final ColumnFamilyStore cfStore, final int gcBefore, boolean splitOutput) -->Line_6 $$ List<Future<?>> futures = new ArrayList()[ CD ]
Line_4 $$ if (tasks == null)-->Line_5 $$ return Collections.emptyList()[ CD ]
Line_8 $$ Runnable runnable = new WrappedRunnable() -->Line_10 $$ task.execute(metrics)[ CD ]
Line_13 $$ if (executor.isShutdown()) -->Line_15 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public List<Future<?>> submitMaximal(final ColumnFamilyStore cfStore, final int gcBefore, boolean splitOutput) -->Line_3 $$ final Collection<AbstractCompactionTask> tasks = cfStore.getCompactionStrategyManager().getMaximalTasks(gcBefore, splitOutput)[ FD ]
Line_8 $$ Runnable runnable = new WrappedRunnable() -->Line_17 $$ futures.add(executor.submit(runnable))[ FD ]
Line_7 $$ for (final AbstractCompactionTask task : tasks) -->Line_10 $$ task.execute(metrics)[ FD ]
