Line_12 $$ GitCommandResult result = git.diff(repository, parameters, range)-->Line_18 $$ for (StringScanner s = new StringScanner(result.getOutputAsJoinedString()); s.hasMoreData(); ) [ FD ]
Line_19 $$ final String relative = s.line()-->Line_23 $$ final String path = repository.getRoot().getPath() + "/" + unescapePath(relative)[ FD ]
Line_11 $$ String range = beforeRef + ".." + afterRef-->Line_12 $$ GitCommandResult result = git.diff(repository, parameters, range)[ FD ]
Line_18 $$ for (StringScanner s = new StringScanner(result.getOutputAsJoinedString()); s.hasMoreData(); ) -->Line_20 $$ if (StringUtil.isEmptyOrSpaces(relative)) [ CD ]
Line_19 $$ final String relative = s.line()-->Line_20 $$ if (StringUtil.isEmptyOrSpaces(relative)) [ FD ]
Line_18 $$ for (StringScanner s = new StringScanner(result.getOutputAsJoinedString()); s.hasMoreData(); ) -->Line_24 $$ remoteChanges.add(path)[ CD ]
Line_11 $$ String range = beforeRef + ".." + afterRef-->Line_14 $$ LOG.info(String.format("Couldn't get diff in range [%s] for repository [%s]", range, repository.toLogString()))[ FD ]
Line_10 $$ List<String> parameters = Arrays.asList("--name-only", "--pretty=format:")-->Line_12 $$ GitCommandResult result = git.diff(repository, parameters, range)[ FD ]
Line_13 $$ if (!result.success()) -->Line_15 $$ return Collections.emptyList()[ CD ]
Line_18 $$ for (StringScanner s = new StringScanner(result.getOutputAsJoinedString()); s.hasMoreData(); ) -->Line_19 $$ final String relative = s.line()[ FD ]
Line_17 $$ final Collection<String> remoteChanges = new HashSet<String>()-->Line_24 $$ remoteChanges.add(path)[ FD ]
Line_18 $$ for (StringScanner s = new StringScanner(result.getOutputAsJoinedString()); s.hasMoreData(); ) -->Line_19 $$ final String relative = s.line()[ CD ]
Line_13 $$ if (!result.success()) -->Line_14 $$ LOG.info(String.format("Couldn't get diff in range [%s] for repository [%s]", range, repository.toLogString()))[ CD ]
Line_18 $$ for (StringScanner s = new StringScanner(result.getOutputAsJoinedString()); s.hasMoreData(); ) -->Line_23 $$ final String path = repository.getRoot().getPath() + "/" + unescapePath(relative)[ CD ]
Line_12 $$ GitCommandResult result = git.diff(repository, parameters, range)-->Line_13 $$ if (!result.success()) [ FD ]
Line_23 $$ final String path = repository.getRoot().getPath() + "/" + unescapePath(relative)-->Line_24 $$ remoteChanges.add(path)[ FD ]
