Line_8 $$ if (cmd.getVersion() == Connector.Version.V_10) -->Line_11 $$ ResourceAdapter ra1516 = (ResourceAdapter) cmd.getResourceadapter()[ CD ]
Line_40 $$ serviceName = serviceName.replace(':', '_')-->Line_46 $$ ServiceBuilder adminObjectServiceBuilder = serviceTarget.addService(ConnectorServices.RESOURCE_ADAPTER_ACTIVATOR_SERVICE.append(serviceName), activator).addDependency(ConnectorServices.IRONJACAMAR_MDR, AS7MetadataRepository.class, activator.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSITORY_SERVICE, ResourceAdapterRepository.class, activator.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSITORY_SERVICE, ManagementRepository.class, activator.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE, ResourceAdapterDeploymentRegistry.class, activator.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE, TransactionIntegration.class, activator.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE, JcaSubsystemConfiguration.class, activator.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME, SubjectFactory.class, activator.getSubjectFactoryInjector()).addDependency(ConnectorServices.CCM_SERVICE, CachedConnectionManager.class, activator.getCcmInjector()).addDependency(NamingService.SERVICE_NAME).addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER).addDependency(ConnectorServices.BOOTSTRAP_CONTEXT_SERVICE.append("default"))[ FD ]
Line_28 $$ if (key.startsWith("ra.")) -->Line_30 $$ if (key.startsWith("ao.")) [ CD ]
Line_13 $$ for (AdminObject ao : ra1516.getAdminObjects()) -->Line_38 $$ Activation activation = new ActivationImpl(null, null, TransactionSupportEnum.LocalTransaction, Collections.<ConnectionDefinition>emptyList(), Collections.singletonList(ao), null, Collections.<String>emptyList(), null, null)[ FD ]
Line_26 $$ String key = prop.getKey()-->Line_30 $$ if (key.startsWith("ao.")) [ FD ]
Line_26 $$ String key = prop.getKey()-->Line_33 $$ aoConfigProperties.put(key, value)[ FD ]
Line_27 $$ String value = prop.getValue()-->Line_29 $$ raConfigProperties.put(key.substring(3), value)[ FD ]
Line_11 $$ ResourceAdapter ra1516 = (ResourceAdapter) cmd.getResourceadapter()-->Line_12 $$ if (ra1516.getAdminObjects() != null) [ FD ]
Line_15 $$ aoClass = ao.getAdminobjectClass().getValue()-->Line_19 $$ if (aoClass == null || !aoClass.equals(className)) [ FD ]
Line_13 $$ for (AdminObject ao : ra1516.getAdminObjects()) -->Line_14 $$ if (ao.getAdminobjectClass().getValue().equals(className))[ FD ]
Line_14 $$ if (ao.getAdminobjectClass().getValue().equals(className))-->Line_15 $$ aoClass = ao.getAdminobjectClass().getValue()[ CD ]
Line_28 $$ if (key.startsWith("ra.")) -->Line_29 $$ raConfigProperties.put(key.substring(3), value)[ CD ]
Line_27 $$ String value = prop.getValue()-->Line_31 $$ aoConfigProperties.put(key.substring(3), value)[ FD ]
Line_45 $$ ServiceTarget serviceTarget = context.getChildTarget()-->Line_46 $$ ServiceBuilder adminObjectServiceBuilder = serviceTarget.addService(ConnectorServices.RESOURCE_ADAPTER_ACTIVATOR_SERVICE.append(serviceName), activator).addDependency(ConnectorServices.IRONJACAMAR_MDR, AS7MetadataRepository.class, activator.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSITORY_SERVICE, ResourceAdapterRepository.class, activator.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSITORY_SERVICE, ManagementRepository.class, activator.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE, ResourceAdapterDeploymentRegistry.class, activator.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE, TransactionIntegration.class, activator.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE, JcaSubsystemConfiguration.class, activator.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME, SubjectFactory.class, activator.getSubjectFactoryInjector()).addDependency(ConnectorServices.CCM_SERVICE, CachedConnectionManager.class, activator.getCcmInjector()).addDependency(NamingService.SERVICE_NAME).addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER).addDependency(ConnectorServices.BOOTSTRAP_CONTEXT_SERVICE.append("default"))[ FD ]
Line_5 $$ String aoClass = null-->Line_19 $$ if (aoClass == null || !aoClass.equals(className)) [ FD ]
Line_22 $$ Map<String, String> raConfigProperties = new HashMap<String, String>()-->Line_29 $$ raConfigProperties.put(key.substring(3), value)[ FD ]
Line_7 $$ Connector cmd = mdr.getValue().getResourceAdapter(raId)-->Line_8 $$ if (cmd.getVersion() == Connector.Version.V_10) [ FD ]
Line_25 $$ for (Map.Entry<String, String> prop : properties.entrySet()) -->Line_27 $$ String value = prop.getValue()[ FD ]
Line_5 $$ String aoClass = null-->Line_15 $$ aoClass = ao.getAdminobjectClass().getValue()[ FD ]
Line_39 $$ String serviceName = jndiName-->Line_41 $$ serviceName = serviceName.replace('/', '_')[ FD ]
Line_5 $$ String aoClass = null-->Line_20 $$ throw ConnectorLogger.ROOT_LOGGER.invalidAdminObject(aoClass, resourceAdapter, jndiName)[ FD ]
Line_15 $$ aoClass = ao.getAdminobjectClass().getValue()-->Line_20 $$ throw ConnectorLogger.ROOT_LOGGER.invalidAdminObject(aoClass, resourceAdapter, jndiName)[ FD ]
Line_23 $$ Map<String, String> aoConfigProperties = new HashMap<String, String>()-->Line_31 $$ aoConfigProperties.put(key.substring(3), value)[ FD ]
Line_39 $$ String serviceName = jndiName-->Line_40 $$ serviceName = serviceName.replace(':', '_')[ FD ]
Line_42 $$ ResourceAdapterActivatorService activator = new ResourceAdapterActivatorService(cmd, activation, module.getClassLoader(), serviceName)-->Line_44 $$ activator.setBindInfo(bindInfo)[ FD ]
Line_13 $$ for (AdminObject ao : ra1516.getAdminObjects()) -->Line_15 $$ aoClass = ao.getAdminobjectClass().getValue()[ FD ]
Line_30 $$ if (key.startsWith("ao.")) -->Line_33 $$ aoConfigProperties.put(key, value)[ CD ]
Line_40 $$ serviceName = serviceName.replace(':', '_')-->Line_41 $$ serviceName = serviceName.replace('/', '_')[ FD ]
Line_42 $$ ResourceAdapterActivatorService activator = new ResourceAdapterActivatorService(cmd, activation, module.getClassLoader(), serviceName)-->Line_46 $$ ServiceBuilder adminObjectServiceBuilder = serviceTarget.addService(ConnectorServices.RESOURCE_ADAPTER_ACTIVATOR_SERVICE.append(serviceName), activator).addDependency(ConnectorServices.IRONJACAMAR_MDR, AS7MetadataRepository.class, activator.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSITORY_SERVICE, ResourceAdapterRepository.class, activator.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSITORY_SERVICE, ManagementRepository.class, activator.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE, ResourceAdapterDeploymentRegistry.class, activator.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE, TransactionIntegration.class, activator.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE, JcaSubsystemConfiguration.class, activator.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME, SubjectFactory.class, activator.getSubjectFactoryInjector()).addDependency(ConnectorServices.CCM_SERVICE, CachedConnectionManager.class, activator.getCcmInjector()).addDependency(NamingService.SERVICE_NAME).addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER).addDependency(ConnectorServices.BOOTSTRAP_CONTEXT_SERVICE.append("default"))[ FD ]
Line_46 $$ ServiceBuilder adminObjectServiceBuilder = serviceTarget.addService(ConnectorServices.RESOURCE_ADAPTER_ACTIVATOR_SERVICE.append(serviceName), activator).addDependency(ConnectorServices.IRONJACAMAR_MDR, AS7MetadataRepository.class, activator.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSITORY_SERVICE, ResourceAdapterRepository.class, activator.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSITORY_SERVICE, ManagementRepository.class, activator.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE, ResourceAdapterDeploymentRegistry.class, activator.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE, TransactionIntegration.class, activator.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE, JcaSubsystemConfiguration.class, activator.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME, SubjectFactory.class, activator.getSubjectFactoryInjector()).addDependency(ConnectorServices.CCM_SERVICE, CachedConnectionManager.class, activator.getCcmInjector()).addDependency(NamingService.SERVICE_NAME).addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER).addDependency(ConnectorServices.BOOTSTRAP_CONTEXT_SERVICE.append("default"))-->Line_47 $$ adminObjectServiceBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install()[ FD ]
Line_7 $$ Connector cmd = mdr.getValue().getResourceAdapter(raId)-->Line_11 $$ ResourceAdapter ra1516 = (ResourceAdapter) cmd.getResourceadapter()[ FD ]
Line_42 $$ ResourceAdapterActivatorService activator = new ResourceAdapterActivatorService(cmd, activation, module.getClassLoader(), serviceName)-->Line_43 $$ activator.setCreateBinderService(false)[ FD ]
Line_15 $$ aoClass = ao.getAdminobjectClass().getValue()-->Line_37 $$ org.jboss.jca.common.api.metadata.resourceadapter.AdminObject ao = new AdminObjectImpl(aoConfigProperties, aoClass, jndiName, poolName(aoClass, className), Boolean.TRUE, Boolean.TRUE)[ FD ]
Line_11 $$ ResourceAdapter ra1516 = (ResourceAdapter) cmd.getResourceadapter()-->Line_13 $$ for (AdminObject ao : ra1516.getAdminObjects()) [ FD ]
Line_26 $$ String key = prop.getKey()-->Line_28 $$ if (key.startsWith("ra.")) [ FD ]
Line_25 $$ for (Map.Entry<String, String> prop : properties.entrySet()) -->Line_26 $$ String key = prop.getKey()[ FD ]
Line_8 $$ if (cmd.getVersion() == Connector.Version.V_10) -->Line_12 $$ if (ra1516.getAdminObjects() != null) [ CD ]
Line_26 $$ String key = prop.getKey()-->Line_29 $$ raConfigProperties.put(key.substring(3), value)[ FD ]
Line_23 $$ Map<String, String> aoConfigProperties = new HashMap<String, String>()-->Line_33 $$ aoConfigProperties.put(key, value)[ FD ]
Line_41 $$ serviceName = serviceName.replace('/', '_')-->Line_46 $$ ServiceBuilder adminObjectServiceBuilder = serviceTarget.addService(ConnectorServices.RESOURCE_ADAPTER_ACTIVATOR_SERVICE.append(serviceName), activator).addDependency(ConnectorServices.IRONJACAMAR_MDR, AS7MetadataRepository.class, activator.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSITORY_SERVICE, ResourceAdapterRepository.class, activator.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSITORY_SERVICE, ManagementRepository.class, activator.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE, ResourceAdapterDeploymentRegistry.class, activator.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE, TransactionIntegration.class, activator.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE, JcaSubsystemConfiguration.class, activator.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME, SubjectFactory.class, activator.getSubjectFactoryInjector()).addDependency(ConnectorServices.CCM_SERVICE, CachedConnectionManager.class, activator.getCcmInjector()).addDependency(NamingService.SERVICE_NAME).addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER).addDependency(ConnectorServices.BOOTSTRAP_CONTEXT_SERVICE.append("default"))[ FD ]
Line_26 $$ String key = prop.getKey()-->Line_31 $$ aoConfigProperties.put(key.substring(3), value)[ FD ]
Line_30 $$ if (key.startsWith("ao.")) -->Line_31 $$ aoConfigProperties.put(key.substring(3), value)[ CD ]
Line_27 $$ String value = prop.getValue()-->Line_33 $$ aoConfigProperties.put(key, value)[ FD ]
Line_39 $$ String serviceName = jndiName-->Line_46 $$ ServiceBuilder adminObjectServiceBuilder = serviceTarget.addService(ConnectorServices.RESOURCE_ADAPTER_ACTIVATOR_SERVICE.append(serviceName), activator).addDependency(ConnectorServices.IRONJACAMAR_MDR, AS7MetadataRepository.class, activator.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSITORY_SERVICE, ResourceAdapterRepository.class, activator.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSITORY_SERVICE, ManagementRepository.class, activator.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE, ResourceAdapterDeploymentRegistry.class, activator.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE, TransactionIntegration.class, activator.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE, JcaSubsystemConfiguration.class, activator.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME, SubjectFactory.class, activator.getSubjectFactoryInjector()).addDependency(ConnectorServices.CCM_SERVICE, CachedConnectionManager.class, activator.getCcmInjector()).addDependency(NamingService.SERVICE_NAME).addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER).addDependency(ConnectorServices.BOOTSTRAP_CONTEXT_SERVICE.append("default"))[ FD ]
Line_5 $$ String aoClass = null-->Line_37 $$ org.jboss.jca.common.api.metadata.resourceadapter.AdminObject ao = new AdminObjectImpl(aoConfigProperties, aoClass, jndiName, poolName(aoClass, className), Boolean.TRUE, Boolean.TRUE)[ FD ]
