Line_2 $$ public static List<Module> createFromWizard(@Nullable Project project, AbstractProjectWizard wizard) -->Line_7 $$ final ProjectBuilder projectBuilder = wizard.getProjectBuilder()[ CD ]
Line_7 $$ final ProjectBuilder projectBuilder = wizard.getProjectBuilder()-->Line_17 $$ projectBuilder.cleanup()[ FD ]
Line_9 $$ if (wizard.getStepCount() > 0) -->Line_10 $$ Module module = new NewModuleAction().createModuleFromWizard(project, null, wizard)[ CD ]
Line_2 $$ public static List<Module> createFromWizard(@Nullable Project project, AbstractProjectWizard wizard) -->Line_9 $$ if (wizard.getStepCount() > 0) [ FD ]
Line_2 $$ public static List<Module> createFromWizard(@Nullable Project project, AbstractProjectWizard wizard) -->Line_4 $$ Project newProject = NewProjectUtil.createFromWizard(wizard, null)[ FD ]
Line_7 $$ final ProjectBuilder projectBuilder = wizard.getProjectBuilder()-->Line_16 $$ if (projectBuilder != null) [ FD ]
Line_2 $$ public static List<Module> createFromWizard(@Nullable Project project, AbstractProjectWizard wizard) -->Line_3 $$ if (project == null) [ CD ]
Line_10 $$ Module module = new NewModuleAction().createModuleFromWizard(project, null, wizard)-->Line_11 $$ return Collections.singletonList(module)[ FD ]
Line_9 $$ if (wizard.getStepCount() > 0) -->Line_13 $$ return projectBuilder.commit(project)[ CD ]
Line_3 $$ if (project == null) -->Line_4 $$ Project newProject = NewProjectUtil.createFromWizard(wizard, null)[ CD ]
Line_2 $$ public static List<Module> createFromWizard(@Nullable Project project, AbstractProjectWizard wizard) -->Line_3 $$ if (project == null) [ FD ]
Line_4 $$ Project newProject = NewProjectUtil.createFromWizard(wizard, null)-->Line_5 $$ return newProject == null ? Collections.<Module>emptyList() : Arrays.asList(ModuleManager.getInstance(newProject).getModules())[ FD ]
Line_2 $$ public static List<Module> createFromWizard(@Nullable Project project, AbstractProjectWizard wizard) -->Line_7 $$ final ProjectBuilder projectBuilder = wizard.getProjectBuilder()[ FD ]
Line_7 $$ final ProjectBuilder projectBuilder = wizard.getProjectBuilder()-->Line_13 $$ return projectBuilder.commit(project)[ FD ]
Line_2 $$ public static List<Module> createFromWizard(@Nullable Project project, AbstractProjectWizard wizard) -->Line_13 $$ return projectBuilder.commit(project)[ FD ]
Line_3 $$ if (project == null) -->Line_5 $$ return newProject == null ? Collections.<Module>emptyList() : Arrays.asList(ModuleManager.getInstance(newProject).getModules())[ CD ]
Line_9 $$ if (wizard.getStepCount() > 0) -->Line_11 $$ return Collections.singletonList(module)[ CD ]
Line_2 $$ public static List<Module> createFromWizard(@Nullable Project project, AbstractProjectWizard wizard) -->Line_10 $$ Module module = new NewModuleAction().createModuleFromWizard(project, null, wizard)[ FD ]
Line_16 $$ if (projectBuilder != null) -->Line_17 $$ projectBuilder.cleanup()[ CD ]
