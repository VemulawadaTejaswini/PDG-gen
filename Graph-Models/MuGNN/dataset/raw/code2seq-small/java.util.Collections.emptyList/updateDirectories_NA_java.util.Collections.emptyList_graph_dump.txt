Line_7 $$ final ArrayList<VcsException> exceptions = new ArrayList<VcsException>()-->Line_11 $$ AbstractUpdateIntegrateCrawler crawler = createCrawler(eventHandler, totalUpdate, exceptions, updatedFiles)[ FD ]
Line_4 $$ if (context.isNull()) -->Line_5 $$ context.set(new SvnUpdateContext(myVcs, contentRoots))[ CD ]
Line_29 $$ if (updatedRoots.isEmpty()) -->Line_36 $$ return new UpdateSessionAdapter(Collections.<VcsException>emptyList(), true)[ CD ]
Line_8 $$ UpdateEventHandler eventHandler = new UpdateEventHandler(myVcs, progressIndicator, (SvnUpdateContext) context.get())-->Line_9 $$ eventHandler.setUpdatedFiles(updatedFiles)[ FD ]
Line_13 $$ Arrays.sort(contentRoots, new Comparator<FilePath>() -->Line_16 $$ return SystemInfo.isFileSystemCaseSensitive ? o1.getPath().replace("/", "\\").compareTo(o2.getPath().replace("/", "\\")) : o1.getPath().replace("/", "\\").compareToIgnoreCase(o2.getPath().replace("/", "\\"))[ CD ]
Line_30 $$ WaitForProgressToShow.runOrInvokeLaterAboveProgress(new Runnable() -->Line_33 $$ Messages.showErrorDialog(myVcs.getProject(), SvnBundle.message("message.text.update.no.directories.found"), SvnBundle.message("messate.text.update.error"))[ CD ]
Line_10 $$ boolean totalUpdate = true-->Line_11 $$ AbstractUpdateIntegrateCrawler crawler = createCrawler(eventHandler, totalUpdate, exceptions, updatedFiles)[ FD ]
Line_12 $$ Collection<VirtualFile> updatedRoots = new HashSet<VirtualFile>()-->Line_29 $$ if (updatedRoots.isEmpty()) [ FD ]
Line_29 $$ if (updatedRoots.isEmpty()) -->Line_30 $$ WaitForProgressToShow.runOrInvokeLaterAboveProgress(new Runnable() [ CD ]
Line_11 $$ AbstractUpdateIntegrateCrawler crawler = createCrawler(eventHandler, totalUpdate, exceptions, updatedFiles)-->Line_26 $$ Collection<VirtualFile> roots = SvnUtil.crawlWCRoots(myVcs.getProject(), ioRoot, crawler, progressIndicator)[ FD ]
Line_12 $$ Collection<VirtualFile> updatedRoots = new HashSet<VirtualFile>()-->Line_27 $$ updatedRoots.addAll(roots)[ FD ]
Line_13 $$ Arrays.sort(contentRoots, new Comparator<FilePath>() -->Line_16 $$ return SystemInfo.isFileSystemCaseSensitive ? o1.getPath().replace("/", "\\").compareTo(o2.getPath().replace("/", "\\")) : o1.getPath().replace("/", "\\").compareToIgnoreCase(o2.getPath().replace("/", "\\"))[ FD ]
Line_8 $$ UpdateEventHandler eventHandler = new UpdateEventHandler(myVcs, progressIndicator, (SvnUpdateContext) context.get())-->Line_11 $$ AbstractUpdateIntegrateCrawler crawler = createCrawler(eventHandler, totalUpdate, exceptions, updatedFiles)[ FD ]
Line_20 $$ if (progressIndicator != null) -->Line_21 $$ progressIndicator.checkCanceled()[ CD ]
