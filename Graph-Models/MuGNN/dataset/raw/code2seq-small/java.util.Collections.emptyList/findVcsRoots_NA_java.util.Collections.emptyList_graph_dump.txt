Line_2 $$ public static Collection<FilePath> findVcsRoots(FilePath[] files, Project project) -->Line_6 $$ final Collection<FilePath> roots = new HashSet<FilePath>()[ CD ]
Line_3 $$ if (files.length == 0) -->Line_4 $$ return Collections.emptyList()[ CD ]
Line_7 $$ final Set<VirtualFile> seen = new HashSet<VirtualFile>()-->Line_10 $$ if (root == null || !seen.add(root)) [ FD ]
Line_9 $$ final VirtualFile root = ProjectLevelVcsManager.getInstance(project).getVcsRootFor(filePath)-->Line_13 $$ roots.add(VcsContextFactory.SERVICE.getInstance().createFilePathOn(root))[ FD ]
Line_2 $$ public static Collection<FilePath> findVcsRoots(FilePath[] files, Project project) -->Line_3 $$ if (files.length == 0) [ CD ]
Line_9 $$ final VirtualFile root = ProjectLevelVcsManager.getInstance(project).getVcsRootFor(filePath)-->Line_10 $$ if (root == null || !seen.add(root)) [ FD ]
Line_8 $$ for (FilePath filePath : files) -->Line_9 $$ final VirtualFile root = ProjectLevelVcsManager.getInstance(project).getVcsRootFor(filePath)[ FD ]
Line_2 $$ public static Collection<FilePath> findVcsRoots(FilePath[] files, Project project) -->Line_7 $$ final Set<VirtualFile> seen = new HashSet<VirtualFile>()[ CD ]
Line_2 $$ public static Collection<FilePath> findVcsRoots(FilePath[] files, Project project) -->Line_9 $$ final VirtualFile root = ProjectLevelVcsManager.getInstance(project).getVcsRootFor(filePath)[ FD ]
Line_6 $$ final Collection<FilePath> roots = new HashSet<FilePath>()-->Line_13 $$ roots.add(VcsContextFactory.SERVICE.getInstance().createFilePathOn(root))[ FD ]
Line_2 $$ public static Collection<FilePath> findVcsRoots(FilePath[] files, Project project) -->Line_15 $$ return roots[ CD ]
