Line_7 $$ DefaultMutableTreeNode child = (DefaultMutableTreeNode) node.getFirstChild()-->Line_9 $$ if (child instanceof StructureNode) [ FD ]
Line_13 $$ child = child.getNextSibling()-->Line_9 $$ if (child instanceof StructureNode) [ FD ]
Line_7 $$ DefaultMutableTreeNode child = (DefaultMutableTreeNode) node.getFirstChild()-->Line_13 $$ child = child.getNextSibling()[ FD ]
Line_21 $$ child = child.getNextSibling()-->Line_8 $$ while (child != null) [ FD ]
Line_10 $$ final OutputEventQueue.NodeEvent event = (OutputEventQueue.NodeEvent) child.getUserObject()-->Line_11 $$ if (event != null && event.getType() == OutputEventQueue.CHARACTERS) [ FD ]
Line_7 $$ DefaultMutableTreeNode child = (DefaultMutableTreeNode) node.getFirstChild()-->Line_10 $$ final OutputEventQueue.NodeEvent event = (OutputEventQueue.NodeEvent) child.getUserObject()[ FD ]
Line_2 $$ private static List getFilteredChildren(DefaultMutableTreeNode node, boolean checkOnly) -->Line_7 $$ DefaultMutableTreeNode child = (DefaultMutableTreeNode) node.getFirstChild()[ CD ]
Line_6 $$ final List<DefaultMutableTreeNode> nodes = checkOnly ? new SmartList<DefaultMutableTreeNode>() : new ArrayList<DefaultMutableTreeNode>(node.getChildCount())-->Line_18 $$ nodes.add(child)[ FD ]
Line_8 $$ while (child != null) -->Line_21 $$ child = child.getNextSibling()[ CD ]
Line_13 $$ child = child.getNextSibling()-->Line_21 $$ child = child.getNextSibling()[ FD ]
Line_21 $$ child = child.getNextSibling()-->Line_10 $$ final OutputEventQueue.NodeEvent event = (OutputEventQueue.NodeEvent) child.getUserObject()[ FD ]
Line_21 $$ child = child.getNextSibling()-->Line_18 $$ nodes.add(child)[ FD ]
Line_13 $$ child = child.getNextSibling()-->Line_10 $$ final OutputEventQueue.NodeEvent event = (OutputEventQueue.NodeEvent) child.getUserObject()[ FD ]
Line_9 $$ if (child instanceof StructureNode) -->Line_10 $$ final OutputEventQueue.NodeEvent event = (OutputEventQueue.NodeEvent) child.getUserObject()[ CD ]
Line_21 $$ child = child.getNextSibling()-->Line_9 $$ if (child instanceof StructureNode) [ FD ]
Line_2 $$ private static List getFilteredChildren(DefaultMutableTreeNode node, boolean checkOnly) -->Line_7 $$ DefaultMutableTreeNode child = (DefaultMutableTreeNode) node.getFirstChild()[ FD ]
Line_7 $$ DefaultMutableTreeNode child = (DefaultMutableTreeNode) node.getFirstChild()-->Line_8 $$ while (child != null) [ FD ]
Line_13 $$ child = child.getNextSibling()-->Line_8 $$ while (child != null) [ FD ]
Line_3 $$ if (node.getChildCount() == 0) -->Line_4 $$ return Collections.emptyList()[ CD ]
Line_6 $$ final List<DefaultMutableTreeNode> nodes = checkOnly ? new SmartList<DefaultMutableTreeNode>() : new ArrayList<DefaultMutableTreeNode>(node.getChildCount())-->Line_19 $$ if (checkOnly)[ FD ]
Line_19 $$ if (checkOnly)-->Line_20 $$ return nodes[ CD ]
Line_2 $$ private static List getFilteredChildren(DefaultMutableTreeNode node, boolean checkOnly) -->Line_6 $$ final List<DefaultMutableTreeNode> nodes = checkOnly ? new SmartList<DefaultMutableTreeNode>() : new ArrayList<DefaultMutableTreeNode>(node.getChildCount())[ CD ]
Line_8 $$ while (child != null) -->Line_19 $$ if (checkOnly)[ CD ]
Line_12 $$ if (event.getValue().trim().length() == 0) -->Line_13 $$ child = child.getNextSibling()[ CD ]
Line_2 $$ private static List getFilteredChildren(DefaultMutableTreeNode node, boolean checkOnly) -->Line_6 $$ final List<DefaultMutableTreeNode> nodes = checkOnly ? new SmartList<DefaultMutableTreeNode>() : new ArrayList<DefaultMutableTreeNode>(node.getChildCount())[ FD ]
Line_7 $$ DefaultMutableTreeNode child = (DefaultMutableTreeNode) node.getFirstChild()-->Line_21 $$ child = child.getNextSibling()[ FD ]
Line_10 $$ final OutputEventQueue.NodeEvent event = (OutputEventQueue.NodeEvent) child.getUserObject()-->Line_12 $$ if (event.getValue().trim().length() == 0) [ FD ]
Line_9 $$ if (child instanceof StructureNode) -->Line_11 $$ if (event != null && event.getType() == OutputEventQueue.CHARACTERS) [ CD ]
Line_2 $$ private static List getFilteredChildren(DefaultMutableTreeNode node, boolean checkOnly) -->Line_8 $$ while (child != null) [ CD ]
Line_8 $$ while (child != null) -->Line_9 $$ if (child instanceof StructureNode) [ CD ]
Line_2 $$ private static List getFilteredChildren(DefaultMutableTreeNode node, boolean checkOnly) -->Line_23 $$ return nodes[ CD ]
Line_2 $$ private static List getFilteredChildren(DefaultMutableTreeNode node, boolean checkOnly) -->Line_3 $$ if (node.getChildCount() == 0) [ FD ]
Line_21 $$ child = child.getNextSibling()-->Line_13 $$ child = child.getNextSibling()[ FD ]
Line_13 $$ child = child.getNextSibling()-->Line_18 $$ nodes.add(child)[ FD ]
Line_2 $$ private static List getFilteredChildren(DefaultMutableTreeNode node, boolean checkOnly) -->Line_3 $$ if (node.getChildCount() == 0) [ CD ]
Line_11 $$ if (event != null && event.getType() == OutputEventQueue.CHARACTERS) -->Line_12 $$ if (event.getValue().trim().length() == 0) [ CD ]
Line_7 $$ DefaultMutableTreeNode child = (DefaultMutableTreeNode) node.getFirstChild()-->Line_18 $$ nodes.add(child)[ FD ]
Line_8 $$ while (child != null) -->Line_18 $$ nodes.add(child)[ CD ]
