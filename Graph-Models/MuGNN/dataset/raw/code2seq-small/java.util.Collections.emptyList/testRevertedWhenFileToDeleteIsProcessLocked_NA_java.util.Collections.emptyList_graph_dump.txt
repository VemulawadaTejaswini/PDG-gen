Line_6 $$ RandomAccessFile raf = new RandomAccessFile(new File(myOlderDir, "bin/idea.bat"), "rw")-->Line_10 $$ raf.write(b)[ FD ]
Line_2 $$ public void testRevertedWhenFileToDeleteIsProcessLocked() throws Exception -->Line_5 $$ Patch patch = PatchFileCreator.create(myPatchSpec, myFile, TEST_UI)[ CD ]
Line_11 $$ PatchFileCreator.PreparationResult preparationResult = PatchFileCreator.prepareAndValidate(myFile, myOlderDir, TEST_UI)-->Line_14 $$ PatchFileCreator.apply(preparationResult, new HashMap<String, ValidationResult.Option>(), backup, TEST_UI)[ FD ]
Line_3 $$ if (!UtilsTest.mIsWindows)-->Line_4 $$ return[ CD ]
Line_12 $$ Map<String, Long> original = patch.digestFiles(myOlderDir, Collections.<String>emptyList(), false, TEST_UI)-->Line_15 $$ assertEquals(original, patch.digestFiles(myOlderDir, Collections.<String>emptyList(), false, TEST_UI))[ FD ]
Line_5 $$ Patch patch = PatchFileCreator.create(myPatchSpec, myFile, TEST_UI)-->Line_12 $$ Map<String, Long> original = patch.digestFiles(myOlderDir, Collections.<String>emptyList(), false, TEST_UI)[ FD ]
Line_13 $$ File backup = getTempFile("backup")-->Line_14 $$ PatchFileCreator.apply(preparationResult, new HashMap<String, ValidationResult.Option>(), backup, TEST_UI)[ FD ]
Line_6 $$ RandomAccessFile raf = new RandomAccessFile(new File(myOlderDir, "bin/idea.bat"), "rw")-->Line_17 $$ raf.close()[ FD ]
Line_8 $$ int b = raf.read()-->Line_10 $$ raf.write(b)[ FD ]
Line_6 $$ RandomAccessFile raf = new RandomAccessFile(new File(myOlderDir, "bin/idea.bat"), "rw")-->Line_8 $$ int b = raf.read()[ FD ]
Line_2 $$ public void testRevertedWhenFileToDeleteIsProcessLocked() throws Exception -->Line_6 $$ RandomAccessFile raf = new RandomAccessFile(new File(myOlderDir, "bin/idea.bat"), "rw")[ CD ]
Line_2 $$ public void testRevertedWhenFileToDeleteIsProcessLocked() throws Exception -->Line_3 $$ if (!UtilsTest.mIsWindows)[ CD ]
Line_5 $$ Patch patch = PatchFileCreator.create(myPatchSpec, myFile, TEST_UI)-->Line_15 $$ assertEquals(original, patch.digestFiles(myOlderDir, Collections.<String>emptyList(), false, TEST_UI))[ FD ]
Line_6 $$ RandomAccessFile raf = new RandomAccessFile(new File(myOlderDir, "bin/idea.bat"), "rw")-->Line_9 $$ raf.seek(0)[ FD ]
