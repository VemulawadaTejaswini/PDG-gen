Line_9 $$ for (VirtualFile each : files) -->Line_15 $$ if (isProjectFile(each, myProject)) [ FD ]
Line_9 $$ for (VirtualFile each : files) -->Line_20 $$ deniedFiles.add(each)[ FD ]
Line_8 $$ Map<VirtualFile, AccessStatus> statuses = getRegisteredFiles(myProject)-->Line_16 $$ statuses.remove(each)[ FD ]
Line_8 $$ Map<VirtualFile, AccessStatus> statuses = getRegisteredFiles(myProject)-->Line_19 $$ statuses.put(each, AccessStatus.REQUESTED)[ FD ]
Line_24 $$ UnlockOption unlockOption = askToUnlock(deniedFiles)-->Line_25 $$ if (unlockOption == null)[ FD ]
Line_22 $$ if (deniedFiles.isEmpty())-->Line_23 $$ return Collections.emptyList()[ CD ]
Line_7 $$ List<VirtualFile> deniedFiles = new SmartList<VirtualFile>()-->Line_20 $$ deniedFiles.add(each)[ FD ]
Line_8 $$ Map<VirtualFile, AccessStatus> statuses = getRegisteredFiles(myProject)-->Line_30 $$ statuses.put(eachAllowed, AccessStatus.ALLOWED)[ FD ]
Line_7 $$ List<VirtualFile> deniedFiles = new SmartList<VirtualFile>()-->Line_25 $$ if (unlockOption == null)[ FD ]
Line_5 $$ if (allAccessAllowed(myProject))-->Line_6 $$ return Collections.emptyList()[ CD ]
Line_15 $$ if (isProjectFile(each, myProject)) -->Line_16 $$ statuses.remove(each)[ CD ]
Line_9 $$ for (VirtualFile each : files) -->Line_10 $$ if (statuses.get(each) == AccessStatus.ALLOWED)[ FD ]
Line_9 $$ for (VirtualFile each : files) -->Line_16 $$ statuses.remove(each)[ FD ]
Line_9 $$ for (VirtualFile each : files) -->Line_19 $$ statuses.put(each, AccessStatus.REQUESTED)[ FD ]
Line_8 $$ Map<VirtualFile, AccessStatus> statuses = getRegisteredFiles(myProject)-->Line_10 $$ if (statuses.get(each) == AccessStatus.ALLOWED)[ FD ]
Line_7 $$ List<VirtualFile> deniedFiles = new SmartList<VirtualFile>()-->Line_24 $$ UnlockOption unlockOption = askToUnlock(deniedFiles)[ FD ]
Line_29 $$ for (VirtualFile eachAllowed : deniedFiles) -->Line_30 $$ statuses.put(eachAllowed, AccessStatus.ALLOWED)[ FD ]
Line_7 $$ List<VirtualFile> deniedFiles = new SmartList<VirtualFile>()-->Line_22 $$ if (deniedFiles.isEmpty())[ FD ]
Line_25 $$ if (unlockOption == null)-->Line_26 $$ return deniedFiles[ CD ]
