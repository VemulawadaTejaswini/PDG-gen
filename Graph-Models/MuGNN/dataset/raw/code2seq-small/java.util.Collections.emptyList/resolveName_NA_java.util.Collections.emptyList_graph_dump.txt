Line_2 $$ public List<RatedResolveResult> resolveName(@NotNull final PyQualifiedExpression element, @NotNull final List<PsiElement> definers) -->Line_3 $$ if (CCProjectService.getInstance(element.getProject()).getCourse() == null) [ CD ]
Line_3 $$ if (CCProjectService.getInstance(element.getProject()).getCourse() == null) -->Line_4 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public List<RatedResolveResult> resolveName(@NotNull final PyQualifiedExpression element, @NotNull final List<PsiElement> definers) -->Line_6 $$ return PyEduUtils.getResolveResultFromContainingDirectory(element, definers)[ FD ]
Line_2 $$ public List<RatedResolveResult> resolveName(@NotNull final PyQualifiedExpression element, @NotNull final List<PsiElement> definers) -->Line_3 $$ if (CCProjectService.getInstance(element.getProject()).getCourse() == null) [ FD ]
Line_2 $$ public List<RatedResolveResult> resolveName(@NotNull final PyQualifiedExpression element, @NotNull final List<PsiElement> definers) -->Line_6 $$ return PyEduUtils.getResolveResultFromContainingDirectory(element, definers)[ CD ]
