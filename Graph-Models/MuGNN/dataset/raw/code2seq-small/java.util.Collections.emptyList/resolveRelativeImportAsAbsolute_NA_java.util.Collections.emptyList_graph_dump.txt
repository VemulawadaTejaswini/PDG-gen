Line_10 $$ if (containingDirectory != null) -->Line_12 $$ if (containingPath != null && containingPath.getComponentCount() > 0) [ CD ]
Line_2 $$ private static List<PsiElement> resolveRelativeImportAsAbsolute(@NotNull PsiFile foothold, @NotNull QualifiedName qualifiedName) -->Line_14 $$ final QualifiedNameResolver absoluteVisitor = new QualifiedNameResolverImpl(absolutePath).fromElement(foothold)[ FD ]
Line_2 $$ private static List<PsiElement> resolveRelativeImportAsAbsolute(@NotNull PsiFile foothold, @NotNull QualifiedName qualifiedName) -->Line_7 $$ if (inSource)[ CD ]
Line_2 $$ private static List<PsiElement> resolveRelativeImportAsAbsolute(@NotNull PsiFile foothold, @NotNull QualifiedName qualifiedName) -->Line_3 $$ final VirtualFile virtualFile = foothold.getVirtualFile()[ CD ]
Line_3 $$ final VirtualFile virtualFile = foothold.getVirtualFile()-->Line_4 $$ if (virtualFile == null)[ FD ]
Line_2 $$ private static List<PsiElement> resolveRelativeImportAsAbsolute(@NotNull PsiFile foothold, @NotNull QualifiedName qualifiedName) -->Line_18 $$ return Collections.emptyList()[ CD ]
Line_2 $$ private static List<PsiElement> resolveRelativeImportAsAbsolute(@NotNull PsiFile foothold, @NotNull QualifiedName qualifiedName) -->Line_13 $$ final QualifiedName absolutePath = containingPath.append(qualifiedName.toString())[ FD ]
Line_2 $$ private static List<PsiElement> resolveRelativeImportAsAbsolute(@NotNull PsiFile foothold, @NotNull QualifiedName qualifiedName) -->Line_4 $$ if (virtualFile == null)[ CD ]
Line_9 $$ final PsiDirectory containingDirectory = foothold.getContainingDirectory()-->Line_11 $$ final QualifiedName containingPath = QualifiedNameFinder.findCanonicalImportPath(containingDirectory, null)[ FD ]
Line_3 $$ final VirtualFile virtualFile = foothold.getVirtualFile()-->Line_6 $$ final boolean inSource = FileIndexFacade.getInstance(foothold.getProject()).isInContent(virtualFile)[ FD ]
Line_2 $$ private static List<PsiElement> resolveRelativeImportAsAbsolute(@NotNull PsiFile foothold, @NotNull QualifiedName qualifiedName) -->Line_6 $$ final boolean inSource = FileIndexFacade.getInstance(foothold.getProject()).isInContent(virtualFile)[ FD ]
Line_14 $$ final QualifiedNameResolver absoluteVisitor = new QualifiedNameResolverImpl(absolutePath).fromElement(foothold)-->Line_15 $$ return absoluteVisitor.resultsAsList()[ FD ]
Line_12 $$ if (containingPath != null && containingPath.getComponentCount() > 0) -->Line_15 $$ return absoluteVisitor.resultsAsList()[ CD ]
Line_12 $$ if (containingPath != null && containingPath.getComponentCount() > 0) -->Line_14 $$ final QualifiedNameResolver absoluteVisitor = new QualifiedNameResolverImpl(absolutePath).fromElement(foothold)[ CD ]
Line_2 $$ private static List<PsiElement> resolveRelativeImportAsAbsolute(@NotNull PsiFile foothold, @NotNull QualifiedName qualifiedName) -->Line_9 $$ final PsiDirectory containingDirectory = foothold.getContainingDirectory()[ CD ]
Line_2 $$ private static List<PsiElement> resolveRelativeImportAsAbsolute(@NotNull PsiFile foothold, @NotNull QualifiedName qualifiedName) -->Line_6 $$ final boolean inSource = FileIndexFacade.getInstance(foothold.getProject()).isInContent(virtualFile)[ CD ]
Line_11 $$ final QualifiedName containingPath = QualifiedNameFinder.findCanonicalImportPath(containingDirectory, null)-->Line_12 $$ if (containingPath != null && containingPath.getComponentCount() > 0) [ FD ]
Line_2 $$ private static List<PsiElement> resolveRelativeImportAsAbsolute(@NotNull PsiFile foothold, @NotNull QualifiedName qualifiedName) -->Line_10 $$ if (containingDirectory != null) [ CD ]
Line_7 $$ if (inSource)-->Line_8 $$ return Collections.emptyList()[ CD ]
Line_2 $$ private static List<PsiElement> resolveRelativeImportAsAbsolute(@NotNull PsiFile foothold, @NotNull QualifiedName qualifiedName) -->Line_3 $$ final VirtualFile virtualFile = foothold.getVirtualFile()[ FD ]
Line_4 $$ if (virtualFile == null)-->Line_5 $$ return Collections.emptyList()[ CD ]
Line_2 $$ private static List<PsiElement> resolveRelativeImportAsAbsolute(@NotNull PsiFile foothold, @NotNull QualifiedName qualifiedName) -->Line_9 $$ final PsiDirectory containingDirectory = foothold.getContainingDirectory()[ FD ]
Line_10 $$ if (containingDirectory != null) -->Line_11 $$ final QualifiedName containingPath = QualifiedNameFinder.findCanonicalImportPath(containingDirectory, null)[ CD ]
Line_11 $$ final QualifiedName containingPath = QualifiedNameFinder.findCanonicalImportPath(containingDirectory, null)-->Line_13 $$ final QualifiedName absolutePath = containingPath.append(qualifiedName.toString())[ FD ]
Line_9 $$ final PsiDirectory containingDirectory = foothold.getContainingDirectory()-->Line_10 $$ if (containingDirectory != null) [ FD ]
Line_12 $$ if (containingPath != null && containingPath.getComponentCount() > 0) -->Line_13 $$ final QualifiedName absolutePath = containingPath.append(qualifiedName.toString())[ CD ]
