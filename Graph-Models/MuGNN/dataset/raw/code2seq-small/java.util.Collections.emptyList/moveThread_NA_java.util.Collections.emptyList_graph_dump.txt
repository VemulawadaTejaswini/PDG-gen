Line_2 $$ protected void moveThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_4 $$ long categoryId = ParamUtil.getLong(actionRequest, "mbCategoryId")[ FD ]
Line_2 $$ protected void moveThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_19 $$ actionResponse.sendRedirect(portletURL.toString())[ FD ]
Line_4 $$ long categoryId = ParamUtil.getLong(actionRequest, "mbCategoryId")-->Line_7 $$ _mbThreadService.moveThread(categoryId, threadId)[ FD ]
Line_9 $$ if (addExplanationPost) -->Line_11 $$ String body = ParamUtil.getString(actionRequest, "body")[ CD ]
Line_9 $$ if (addExplanationPost) -->Line_14 $$ _mbMessageService.addMessage(thread.getRootMessageId(), subject, body, mbGroupServiceSettings.getMessageFormat(), Collections.<ObjectValuePair<String, InputStream>>emptyList(), false, MBThreadConstants.PRIORITY_NOT_GIVEN, false, serviceContext)[ CD ]
Line_13 $$ ServiceContext serviceContext = ServiceContextFactory.getInstance(MBMessage.class.getName(), actionRequest)-->Line_14 $$ _mbMessageService.addMessage(thread.getRootMessageId(), subject, body, mbGroupServiceSettings.getMessageFormat(), Collections.<ObjectValuePair<String, InputStream>>emptyList(), false, MBThreadConstants.PRIORITY_NOT_GIVEN, false, serviceContext)[ FD ]
Line_16 $$ PortletURL portletURL = ((ActionResponseImpl) actionResponse).createRenderURL()-->Line_18 $$ portletURL.setParameter("messageId", String.valueOf(thread.getRootMessageId()))[ FD ]
Line_2 $$ protected void moveThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_11 $$ String body = ParamUtil.getString(actionRequest, "body")[ FD ]
Line_9 $$ if (addExplanationPost) -->Line_12 $$ MBGroupServiceSettings mbGroupServiceSettings = MBGroupServiceSettings.getInstance(themeDisplay.getScopeGroupId())[ CD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_12 $$ MBGroupServiceSettings mbGroupServiceSettings = MBGroupServiceSettings.getInstance(themeDisplay.getScopeGroupId())[ FD ]
Line_2 $$ protected void moveThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_5 $$ long threadId = ParamUtil.getLong(actionRequest, "threadId")[ FD ]
Line_5 $$ long threadId = ParamUtil.getLong(actionRequest, "threadId")-->Line_6 $$ MBThread thread = _mbThreadLocalService.getThread(threadId)[ FD ]
Line_6 $$ MBThread thread = _mbThreadLocalService.getThread(threadId)-->Line_18 $$ portletURL.setParameter("messageId", String.valueOf(thread.getRootMessageId()))[ FD ]
Line_2 $$ protected void moveThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_8 $$ boolean addExplanationPost = ParamUtil.getBoolean(actionRequest, "addExplanationPost")[ CD ]
Line_2 $$ protected void moveThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_16 $$ PortletURL portletURL = ((ActionResponseImpl) actionResponse).createRenderURL()[ CD ]
Line_9 $$ if (addExplanationPost) -->Line_13 $$ ServiceContext serviceContext = ServiceContextFactory.getInstance(MBMessage.class.getName(), actionRequest)[ CD ]
Line_5 $$ long threadId = ParamUtil.getLong(actionRequest, "threadId")-->Line_7 $$ _mbThreadService.moveThread(categoryId, threadId)[ FD ]
Line_2 $$ protected void moveThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_4 $$ long categoryId = ParamUtil.getLong(actionRequest, "mbCategoryId")[ CD ]
Line_2 $$ protected void moveThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_18 $$ portletURL.setParameter("messageId", String.valueOf(thread.getRootMessageId()))[ CD ]
Line_2 $$ protected void moveThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_19 $$ actionResponse.sendRedirect(portletURL.toString())[ CD ]
Line_12 $$ MBGroupServiceSettings mbGroupServiceSettings = MBGroupServiceSettings.getInstance(themeDisplay.getScopeGroupId())-->Line_14 $$ _mbMessageService.addMessage(thread.getRootMessageId(), subject, body, mbGroupServiceSettings.getMessageFormat(), Collections.<ObjectValuePair<String, InputStream>>emptyList(), false, MBThreadConstants.PRIORITY_NOT_GIVEN, false, serviceContext)[ FD ]
Line_2 $$ protected void moveThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)[ FD ]
Line_2 $$ protected void moveThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_9 $$ if (addExplanationPost) [ CD ]
Line_11 $$ String body = ParamUtil.getString(actionRequest, "body")-->Line_14 $$ _mbMessageService.addMessage(thread.getRootMessageId(), subject, body, mbGroupServiceSettings.getMessageFormat(), Collections.<ObjectValuePair<String, InputStream>>emptyList(), false, MBThreadConstants.PRIORITY_NOT_GIVEN, false, serviceContext)[ FD ]
Line_10 $$ String subject = ParamUtil.getString(actionRequest, "subject")-->Line_14 $$ _mbMessageService.addMessage(thread.getRootMessageId(), subject, body, mbGroupServiceSettings.getMessageFormat(), Collections.<ObjectValuePair<String, InputStream>>emptyList(), false, MBThreadConstants.PRIORITY_NOT_GIVEN, false, serviceContext)[ FD ]
Line_2 $$ protected void moveThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_10 $$ String subject = ParamUtil.getString(actionRequest, "subject")[ FD ]
Line_2 $$ protected void moveThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)[ CD ]
Line_6 $$ MBThread thread = _mbThreadLocalService.getThread(threadId)-->Line_14 $$ _mbMessageService.addMessage(thread.getRootMessageId(), subject, body, mbGroupServiceSettings.getMessageFormat(), Collections.<ObjectValuePair<String, InputStream>>emptyList(), false, MBThreadConstants.PRIORITY_NOT_GIVEN, false, serviceContext)[ FD ]
Line_9 $$ if (addExplanationPost) -->Line_10 $$ String subject = ParamUtil.getString(actionRequest, "subject")[ CD ]
Line_2 $$ protected void moveThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_13 $$ ServiceContext serviceContext = ServiceContextFactory.getInstance(MBMessage.class.getName(), actionRequest)[ FD ]
Line_2 $$ protected void moveThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_5 $$ long threadId = ParamUtil.getLong(actionRequest, "threadId")[ CD ]
Line_16 $$ PortletURL portletURL = ((ActionResponseImpl) actionResponse).createRenderURL()-->Line_17 $$ portletURL.setParameter("mvcRenderCommandName", "/message_boards/view_message")[ FD ]
Line_2 $$ protected void moveThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_6 $$ MBThread thread = _mbThreadLocalService.getThread(threadId)[ CD ]
Line_2 $$ protected void moveThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_8 $$ boolean addExplanationPost = ParamUtil.getBoolean(actionRequest, "addExplanationPost")[ FD ]
Line_2 $$ protected void moveThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_17 $$ portletURL.setParameter("mvcRenderCommandName", "/message_boards/view_message")[ CD ]
Line_16 $$ PortletURL portletURL = ((ActionResponseImpl) actionResponse).createRenderURL()-->Line_19 $$ actionResponse.sendRedirect(portletURL.toString())[ FD ]
Line_2 $$ protected void moveThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_7 $$ _mbThreadService.moveThread(categoryId, threadId)[ CD ]
