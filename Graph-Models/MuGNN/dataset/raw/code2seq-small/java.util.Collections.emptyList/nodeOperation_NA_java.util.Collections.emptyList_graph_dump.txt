Line_11 $$ ShardPath shardPath = null-->Line_20 $$ logger.trace("[ FD ]
Line_8 $$ if (shardStateMetaData != null) -->Line_25 $$ if (indexUUID.equals(shardStateMetaData.indexUUID) == false && IndexMetaData.INDEX_UUID_NA_VALUE.equals(shardStateMetaData.indexUUID) == false) [ CD ]
Line_4 $$ final ShardId shardId = request.getShardId()-->Line_20 $$ logger.trace("[ FD ]
Line_11 $$ ShardPath shardPath = null-->Line_15 $$ if (shardPath == null) [ FD ]
Line_2 $$ protected NodeGatewayStartedShards nodeOperation(NodeRequest request) -->Line_4 $$ final ShardId shardId = request.getShardId()[ FD ]
Line_14 $$ shardPath = ShardPath.loadShardPath(logger, nodeEnv, shardId, indexSettings)-->Line_18 $$ Store.tryOpenIndex(shardPath.resolveIndex())[ FD ]
Line_7 $$ ShardStateMetaData shardStateMetaData = ShardStateMetaData.FORMAT.loadLatestState(logger, nodeEnv.availableShardPaths(request.shardId))-->Line_20 $$ logger.trace("[ FD ]
Line_4 $$ final ShardId shardId = request.getShardId()-->Line_6 $$ logger.trace("[ FD ]
Line_4 $$ final ShardId shardId = request.getShardId()-->Line_14 $$ shardPath = ShardPath.loadShardPath(logger, nodeEnv, shardId, indexSettings)[ FD ]
Line_25 $$ if (indexUUID.equals(shardStateMetaData.indexUUID) == false && IndexMetaData.INDEX_UUID_NA_VALUE.equals(shardStateMetaData.indexUUID) == false) -->Line_28 $$ logger.debug("[ CD ]
Line_4 $$ final ShardId shardId = request.getShardId()-->Line_28 $$ logger.debug("[ FD ]
Line_8 $$ if (shardStateMetaData != null) -->Line_9 $$ final IndexMetaData metaData = clusterService.state().metaData().index(shardId.index().name())[ CD ]
Line_4 $$ final ShardId shardId = request.getShardId()-->Line_9 $$ final IndexMetaData metaData = clusterService.state().metaData().index(shardId.index().name())[ FD ]
Line_13 $$ IndexSettings indexSettings = new IndexSettings(metaData, settings, Collections.emptyList())-->Line_14 $$ shardPath = ShardPath.loadShardPath(logger, nodeEnv, shardId, indexSettings)[ FD ]
Line_2 $$ protected NodeGatewayStartedShards nodeOperation(NodeRequest request) -->Line_5 $$ final String indexUUID = request.getIndexUUID()[ FD ]
Line_11 $$ ShardPath shardPath = null-->Line_18 $$ Store.tryOpenIndex(shardPath.resolveIndex())[ FD ]
Line_10 $$ if (metaData != null) -->Line_11 $$ ShardPath shardPath = null[ CD ]
Line_11 $$ ShardPath shardPath = null-->Line_14 $$ shardPath = ShardPath.loadShardPath(logger, nodeEnv, shardId, indexSettings)[ FD ]
Line_9 $$ final IndexMetaData metaData = clusterService.state().metaData().index(shardId.index().name())-->Line_10 $$ if (metaData != null) [ FD ]
Line_14 $$ shardPath = ShardPath.loadShardPath(logger, nodeEnv, shardId, indexSettings)-->Line_20 $$ logger.trace("[ FD ]
Line_5 $$ final String indexUUID = request.getIndexUUID()-->Line_26 $$ logger.warn("[ FD ]
Line_7 $$ ShardStateMetaData shardStateMetaData = ShardStateMetaData.FORMAT.loadLatestState(logger, nodeEnv.availableShardPaths(request.shardId))-->Line_28 $$ logger.debug("[ FD ]
Line_14 $$ shardPath = ShardPath.loadShardPath(logger, nodeEnv, shardId, indexSettings)-->Line_15 $$ if (shardPath == null) [ FD ]
Line_7 $$ ShardStateMetaData shardStateMetaData = ShardStateMetaData.FORMAT.loadLatestState(logger, nodeEnv.availableShardPaths(request.shardId))-->Line_8 $$ if (shardStateMetaData != null) [ FD ]
Line_25 $$ if (indexUUID.equals(shardStateMetaData.indexUUID) == false && IndexMetaData.INDEX_UUID_NA_VALUE.equals(shardStateMetaData.indexUUID) == false) -->Line_30 $$ return new NodeGatewayStartedShards(clusterService.localNode(), shardStateMetaData.version, allocationId)[ CD ]
Line_4 $$ final ShardId shardId = request.getShardId()-->Line_33 $$ logger.trace("[ FD ]
Line_8 $$ if (shardStateMetaData != null) -->Line_10 $$ if (metaData != null) [ CD ]
Line_25 $$ if (indexUUID.equals(shardStateMetaData.indexUUID) == false && IndexMetaData.INDEX_UUID_NA_VALUE.equals(shardStateMetaData.indexUUID) == false) -->Line_26 $$ logger.warn("[ CD ]
Line_5 $$ final String indexUUID = request.getIndexUUID()-->Line_25 $$ if (indexUUID.equals(shardStateMetaData.indexUUID) == false && IndexMetaData.INDEX_UUID_NA_VALUE.equals(shardStateMetaData.indexUUID) == false) [ FD ]
Line_4 $$ final ShardId shardId = request.getShardId()-->Line_26 $$ logger.warn("[ FD ]
