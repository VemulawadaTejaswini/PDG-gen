Line_10 $$ String methodName = method.getName()-->Line_39 $$ return handleTestFrameworks(paramCount, className, methodName, call)[ FD ]
Line_3 $$ PsiClass owner = method.getContainingClass()-->Line_7 $$ String className = owner.getQualifiedName()[ FD ]
Line_27 $$ if ("requireNonNull".equals(methodName) && paramCount > 0) -->Line_30 $$ return Collections.singletonList(new MethodContract(constraints, THROW_EXCEPTION))[ CD ]
Line_2 $$ public static List<MethodContract> getHardcodedContracts(@NotNull PsiMethod method, @Nullable PsiMethodCallExpression call) -->Line_39 $$ return handleTestFrameworks(paramCount, className, methodName, call)[ FD ]
Line_10 $$ String methodName = method.getName()-->Line_21 $$ if (("checkArgument".equals(methodName) || "checkState".equals(methodName)) && paramCount > 0) [ FD ]
Line_27 $$ if ("requireNonNull".equals(methodName) && paramCount > 0) -->Line_28 $$ MethodContract.ValueConstraint[] constraints = createConstraintArray(paramCount)[ CD ]
Line_6 $$ final int paramCount = method.getParameterList().getParametersCount()-->Line_34 $$ MethodContract.ValueConstraint[] constraints = createConstraintArray(paramCount)[ FD ]
Line_32 $$ if ("org.apache.commons.lang.Validate".equals(className) || "org.apache.commons.lang3.Validate".equals(className) || "org.springframework.util.Assert".equals(className)) -->Line_38 $$ if ("junit.framework.Assert".equals(className) || "org.junit.Assert".equals(className) || "junit.framework.TestCase".equals(className) || "com.google.common.truth.Truth".equals(className) || className.startsWith("org.assertj.core.api.") || "org.testng.Assert".equals(className) || "org.testng.AssertJUnit".equals(className)) [ CD ]
Line_10 $$ String methodName = method.getName()-->Line_27 $$ if ("requireNonNull".equals(methodName) && paramCount > 0) [ FD ]
Line_2 $$ public static List<MethodContract> getHardcodedContracts(@NotNull PsiMethod method, @Nullable PsiMethodCallExpression call) -->Line_8 $$ if (className == null)[ CD ]
Line_15 $$ if ("com.google.common.base.Preconditions".equals(className)) -->Line_16 $$ if ("checkNotNull".equals(methodName) && paramCount > 0) [ CD ]
Line_21 $$ if (("checkArgument".equals(methodName) || "checkState".equals(methodName)) && paramCount > 0) -->Line_22 $$ MethodContract.ValueConstraint[] constraints = createConstraintArray(paramCount)[ CD ]
Line_6 $$ final int paramCount = method.getParameterList().getParametersCount()-->Line_13 $$ return Collections.singletonList(new MethodContract(createConstraintArray(paramCount), THROW_EXCEPTION))[ FD ]
Line_26 $$ if ("java.util.Objects".equals(className)) -->Line_27 $$ if ("requireNonNull".equals(methodName) && paramCount > 0) [ CD ]
Line_33 $$ if ("notNull".equals(methodName) && paramCount > 0) -->Line_34 $$ MethodContract.ValueConstraint[] constraints = createConstraintArray(paramCount)[ CD ]
Line_6 $$ final int paramCount = method.getParameterList().getParametersCount()-->Line_39 $$ return handleTestFrameworks(paramCount, className, methodName, call)[ FD ]
Line_2 $$ public static List<MethodContract> getHardcodedContracts(@NotNull PsiMethod method, @Nullable PsiMethodCallExpression call) -->Line_10 $$ String methodName = method.getName()[ CD ]
Line_7 $$ String className = owner.getQualifiedName()-->Line_11 $$ if ("java.lang.System".equals(className)) [ FD ]
Line_21 $$ if (("checkArgument".equals(methodName) || "checkState".equals(methodName)) && paramCount > 0) -->Line_24 $$ return Collections.singletonList(new MethodContract(constraints, THROW_EXCEPTION))[ CD ]
Line_2 $$ public static List<MethodContract> getHardcodedContracts(@NotNull PsiMethod method, @Nullable PsiMethodCallExpression call) -->Line_10 $$ String methodName = method.getName()[ FD ]
Line_7 $$ String className = owner.getQualifiedName()-->Line_32 $$ if ("org.apache.commons.lang.Validate".equals(className) || "org.apache.commons.lang3.Validate".equals(className) || "org.springframework.util.Assert".equals(className)) [ FD ]
Line_15 $$ if ("com.google.common.base.Preconditions".equals(className)) -->Line_21 $$ if (("checkArgument".equals(methodName) || "checkState".equals(methodName)) && paramCount > 0) [ CD ]
Line_7 $$ String className = owner.getQualifiedName()-->Line_38 $$ if ("junit.framework.Assert".equals(className) || "org.junit.Assert".equals(className) || "junit.framework.TestCase".equals(className) || "com.google.common.truth.Truth".equals(className) || className.startsWith("org.assertj.core.api.") || "org.testng.Assert".equals(className) || "org.testng.AssertJUnit".equals(className)) [ FD ]
Line_38 $$ if ("junit.framework.Assert".equals(className) || "org.junit.Assert".equals(className) || "junit.framework.TestCase".equals(className) || "com.google.common.truth.Truth".equals(className) || className.startsWith("org.assertj.core.api.") || "org.testng.Assert".equals(className) || "org.testng.AssertJUnit".equals(className)) -->Line_39 $$ return handleTestFrameworks(paramCount, className, methodName, call)[ CD ]
Line_4 $$ if (owner == null)-->Line_5 $$ return Collections.emptyList()[ CD ]
Line_11 $$ if ("java.lang.System".equals(className)) -->Line_15 $$ if ("com.google.common.base.Preconditions".equals(className)) [ CD ]
Line_16 $$ if ("checkNotNull".equals(methodName) && paramCount > 0) -->Line_17 $$ MethodContract.ValueConstraint[] constraints = createConstraintArray(paramCount)[ CD ]
Line_32 $$ if ("org.apache.commons.lang.Validate".equals(className) || "org.apache.commons.lang3.Validate".equals(className) || "org.springframework.util.Assert".equals(className)) -->Line_33 $$ if ("notNull".equals(methodName) && paramCount > 0) [ CD ]
Line_16 $$ if ("checkNotNull".equals(methodName) && paramCount > 0) -->Line_19 $$ return Collections.singletonList(new MethodContract(constraints, THROW_EXCEPTION))[ CD ]
Line_2 $$ public static List<MethodContract> getHardcodedContracts(@NotNull PsiMethod method, @Nullable PsiMethodCallExpression call) -->Line_4 $$ if (owner == null)[ CD ]
Line_2 $$ public static List<MethodContract> getHardcodedContracts(@NotNull PsiMethod method, @Nullable PsiMethodCallExpression call) -->Line_11 $$ if ("java.lang.System".equals(className)) [ CD ]
Line_6 $$ final int paramCount = method.getParameterList().getParametersCount()-->Line_28 $$ MethodContract.ValueConstraint[] constraints = createConstraintArray(paramCount)[ FD ]
Line_7 $$ String className = owner.getQualifiedName()-->Line_15 $$ if ("com.google.common.base.Preconditions".equals(className)) [ FD ]
Line_15 $$ if ("com.google.common.base.Preconditions".equals(className)) -->Line_26 $$ if ("java.util.Objects".equals(className)) [ CD ]
Line_6 $$ final int paramCount = method.getParameterList().getParametersCount()-->Line_22 $$ MethodContract.ValueConstraint[] constraints = createConstraintArray(paramCount)[ FD ]
Line_2 $$ public static List<MethodContract> getHardcodedContracts(@NotNull PsiMethod method, @Nullable PsiMethodCallExpression call) -->Line_3 $$ PsiClass owner = method.getContainingClass()[ FD ]
Line_26 $$ if ("java.util.Objects".equals(className)) -->Line_32 $$ if ("org.apache.commons.lang.Validate".equals(className) || "org.apache.commons.lang3.Validate".equals(className) || "org.springframework.util.Assert".equals(className)) [ CD ]
Line_10 $$ String methodName = method.getName()-->Line_33 $$ if ("notNull".equals(methodName) && paramCount > 0) [ FD ]
Line_7 $$ String className = owner.getQualifiedName()-->Line_39 $$ return handleTestFrameworks(paramCount, className, methodName, call)[ FD ]
Line_2 $$ public static List<MethodContract> getHardcodedContracts(@NotNull PsiMethod method, @Nullable PsiMethodCallExpression call) -->Line_7 $$ String className = owner.getQualifiedName()[ CD ]
Line_8 $$ if (className == null)-->Line_9 $$ return Collections.emptyList()[ CD ]
Line_7 $$ String className = owner.getQualifiedName()-->Line_8 $$ if (className == null)[ FD ]
Line_2 $$ public static List<MethodContract> getHardcodedContracts(@NotNull PsiMethod method, @Nullable PsiMethodCallExpression call) -->Line_41 $$ return Collections.emptyList()[ CD ]
Line_12 $$ if ("exit".equals(methodName)) -->Line_13 $$ return Collections.singletonList(new MethodContract(createConstraintArray(paramCount), THROW_EXCEPTION))[ CD ]
Line_6 $$ final int paramCount = method.getParameterList().getParametersCount()-->Line_17 $$ MethodContract.ValueConstraint[] constraints = createConstraintArray(paramCount)[ FD ]
Line_2 $$ public static List<MethodContract> getHardcodedContracts(@NotNull PsiMethod method, @Nullable PsiMethodCallExpression call) -->Line_6 $$ final int paramCount = method.getParameterList().getParametersCount()[ FD ]
Line_10 $$ String methodName = method.getName()-->Line_12 $$ if ("exit".equals(methodName)) [ FD ]
Line_7 $$ String className = owner.getQualifiedName()-->Line_26 $$ if ("java.util.Objects".equals(className)) [ FD ]
Line_33 $$ if ("notNull".equals(methodName) && paramCount > 0) -->Line_36 $$ return Collections.singletonList(new MethodContract(constraints, THROW_EXCEPTION))[ CD ]
Line_2 $$ public static List<MethodContract> getHardcodedContracts(@NotNull PsiMethod method, @Nullable PsiMethodCallExpression call) -->Line_6 $$ final int paramCount = method.getParameterList().getParametersCount()[ CD ]
Line_11 $$ if ("java.lang.System".equals(className)) -->Line_12 $$ if ("exit".equals(methodName)) [ CD ]
Line_3 $$ PsiClass owner = method.getContainingClass()-->Line_4 $$ if (owner == null)[ FD ]
Line_2 $$ public static List<MethodContract> getHardcodedContracts(@NotNull PsiMethod method, @Nullable PsiMethodCallExpression call) -->Line_3 $$ PsiClass owner = method.getContainingClass()[ CD ]
Line_10 $$ String methodName = method.getName()-->Line_16 $$ if ("checkNotNull".equals(methodName) && paramCount > 0) [ FD ]
