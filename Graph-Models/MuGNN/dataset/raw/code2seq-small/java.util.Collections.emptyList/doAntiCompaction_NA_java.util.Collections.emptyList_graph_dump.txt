Line_26 $$ ColumnFamilyStore cfs = columnFamilyStoreEntry.getValue()-->Line_27 $$ futures.add(CompactionManager.instance.submitAntiCompaction(cfs, successfulRanges, sstables, prs.repairedAt))[ FD ]
Line_30 $$ ListenableFuture<List<Object>> allAntiCompactionResults = Futures.successfulAsList(futures)-->Line_31 $$ allAntiCompactionResults.addListener(new Runnable() [ FD ]
Line_12 $$ ParentRepairSession prs = getParentRepairSession(parentRepairSession)-->Line_25 $$ Refs<SSTableReader> sstables = prs.getAndReferenceSSTables(columnFamilyStoreEntry.getKey())[ FD ]
Line_24 $$ for (Map.Entry<UUID, ColumnFamilyStore> columnFamilyStoreEntry : prs.columnFamilyStores.entrySet()) -->Line_25 $$ Refs<SSTableReader> sstables = prs.getAndReferenceSSTables(columnFamilyStoreEntry.getKey())[ FD ]
Line_25 $$ Refs<SSTableReader> sstables = prs.getAndReferenceSSTables(columnFamilyStoreEntry.getKey())-->Line_27 $$ futures.add(CompactionManager.instance.submitAntiCompaction(cfs, successfulRanges, sstables, prs.repairedAt))[ FD ]
Line_21 $$ List<ListenableFuture<?>> futures = new ArrayList()-->Line_30 $$ ListenableFuture<List<Object>> allAntiCompactionResults = Futures.successfulAsList(futures)[ FD ]
Line_21 $$ List<ListenableFuture<?>> futures = new ArrayList()-->Line_27 $$ futures.add(CompactionManager.instance.submitAntiCompaction(cfs, successfulRanges, sstables, prs.repairedAt))[ FD ]
Line_31 $$ allAntiCompactionResults.addListener(new Runnable() -->Line_35 $$ removeParentRepairSession(parentRepairSession)[ CD ]
Line_24 $$ for (Map.Entry<UUID, ColumnFamilyStore> columnFamilyStoreEntry : prs.columnFamilyStores.entrySet()) -->Line_26 $$ ColumnFamilyStore cfs = columnFamilyStoreEntry.getValue()[ FD ]
