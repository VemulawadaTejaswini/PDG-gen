Line_7 $$ IndexService indexService = indicesService.indexService(shardId.index().name())-->Line_9 $$ IndexShard indexShard = indexService.getShardOrNull(shardId.id())[ FD ]
Line_27 $$ if (!storeType.contains("fs")) -->Line_28 $$ return new StoreFilesMetaData(false, shardId, Store.MetadataSnapshot.EMPTY)[ CD ]
Line_2 $$ private StoreFilesMetaData listStoreMetaData(ShardId shardId) throws IOException -->Line_39 $$ logger.debug("[ FD ]
Line_2 $$ private StoreFilesMetaData listStoreMetaData(ShardId shardId) throws IOException -->Line_5 $$ boolean exists = false[ CD ]
Line_5 $$ boolean exists = false-->Line_14 $$ exists = true[ FD ]
Line_9 $$ IndexShard indexShard = indexService.getShardOrNull(shardId.id())-->Line_11 $$ final Store store = indexShard.store()[ FD ]
Line_38 $$ if (exists) -->Line_41 $$ logger.trace("[ CD ]
Line_2 $$ private StoreFilesMetaData listStoreMetaData(ShardId shardId) throws IOException -->Line_9 $$ IndexShard indexShard = indexService.getShardOrNull(shardId.id())[ FD ]
Line_38 $$ if (exists) -->Line_39 $$ logger.debug("[ CD ]
Line_2 $$ private StoreFilesMetaData listStoreMetaData(ShardId shardId) throws IOException -->Line_7 $$ IndexService indexService = indicesService.indexService(shardId.index().name())[ FD ]
Line_32 $$ if (shardPath == null) -->Line_33 $$ return new StoreFilesMetaData(false, shardId, Store.MetadataSnapshot.EMPTY)[ CD ]
Line_10 $$ if (indexShard != null) -->Line_11 $$ final Store store = indexShard.store()[ CD ]
Line_2 $$ private StoreFilesMetaData listStoreMetaData(ShardId shardId) throws IOException -->Line_3 $$ logger.trace("listing store meta data for [ FD ]
Line_8 $$ if (indexService != null) -->Line_9 $$ IndexShard indexShard = indexService.getShardOrNull(shardId.id())[ CD ]
Line_11 $$ final Store store = indexShard.store()-->Line_15 $$ return new StoreFilesMetaData(true, shardId, store.getMetadataOrEmpty())[ FD ]
Line_37 $$ TimeValue took = new TimeValue(System.nanoTime() - startTimeNS, TimeUnit.NANOSECONDS)-->Line_39 $$ logger.debug("[ FD ]
Line_26 $$ String storeType = metaData.getSettings().get(IndexModule.STORE_TYPE, "fs")-->Line_27 $$ if (!storeType.contains("fs")) [ FD ]
Line_31 $$ final ShardPath shardPath = ShardPath.loadShardPath(logger, nodeEnv, shardId, indexSettings)-->Line_35 $$ return new StoreFilesMetaData(false, shardId, Store.readMetadataSnapshot(shardPath.resolveIndex(), logger))[ FD ]
Line_2 $$ private StoreFilesMetaData listStoreMetaData(ShardId shardId) throws IOException -->Line_41 $$ logger.trace("[ FD ]
Line_2 $$ private StoreFilesMetaData listStoreMetaData(ShardId shardId) throws IOException -->Line_3 $$ logger.trace("listing store meta data for [ CD ]
Line_7 $$ IndexService indexService = indicesService.indexService(shardId.index().name())-->Line_30 $$ final IndexSettings indexSettings = indexService != null ? indexService.getIndexSettings() : new IndexSettings(metaData, settings, Collections.emptyList())[ FD ]
Line_2 $$ private StoreFilesMetaData listStoreMetaData(ShardId shardId) throws IOException -->Line_4 $$ long startTimeNS = System.nanoTime()[ CD ]
Line_2 $$ private StoreFilesMetaData listStoreMetaData(ShardId shardId) throws IOException -->Line_31 $$ final ShardPath shardPath = ShardPath.loadShardPath(logger, nodeEnv, shardId, indexSettings)[ FD ]
Line_23 $$ if (metaData == null) -->Line_24 $$ return new StoreFilesMetaData(false, shardId, Store.MetadataSnapshot.EMPTY)[ CD ]
Line_30 $$ final IndexSettings indexSettings = indexService != null ? indexService.getIndexSettings() : new IndexSettings(metaData, settings, Collections.emptyList())-->Line_31 $$ final ShardPath shardPath = ShardPath.loadShardPath(logger, nodeEnv, shardId, indexSettings)[ FD ]
Line_11 $$ final Store store = indexShard.store()-->Line_17 $$ store.decRef()[ FD ]
Line_9 $$ IndexShard indexShard = indexService.getShardOrNull(shardId.id())-->Line_10 $$ if (indexShard != null) [ FD ]
Line_37 $$ TimeValue took = new TimeValue(System.nanoTime() - startTimeNS, TimeUnit.NANOSECONDS)-->Line_41 $$ logger.trace("[ FD ]
Line_8 $$ if (indexService != null) -->Line_10 $$ if (indexShard != null) [ CD ]
Line_11 $$ final Store store = indexShard.store()-->Line_12 $$ store.incRef()[ FD ]
Line_10 $$ if (indexShard != null) -->Line_12 $$ store.incRef()[ CD ]
Line_31 $$ final ShardPath shardPath = ShardPath.loadShardPath(logger, nodeEnv, shardId, indexSettings)-->Line_32 $$ if (shardPath == null) [ FD ]
Line_7 $$ IndexService indexService = indicesService.indexService(shardId.index().name())-->Line_8 $$ if (indexService != null) [ FD ]
