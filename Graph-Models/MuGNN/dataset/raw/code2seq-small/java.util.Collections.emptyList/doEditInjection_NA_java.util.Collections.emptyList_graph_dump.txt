Line_2 $$ private static void doEditInjection(final Project project, final XmlAttributeInjection template) -->Line_3 $$ final Configuration configuration = InjectorUtils.getEditableInstance(project)[ CD ]
Line_2 $$ private static void doEditInjection(final Project project, final XmlAttributeInjection template) -->Line_4 $$ final BaseInjection originalInjection = configuration.findExistingInjection(template)[ FD ]
Line_2 $$ private static void doEditInjection(final Project project, final XmlAttributeInjection template) -->Line_6 $$ configuration.replaceInjectionsWithUndo(project, Collections.singletonList(newInjection), ContainerUtil.createMaybeSingletonList(originalInjection), Collections.<PsiElement>emptyList())[ CD ]
Line_2 $$ private static void doEditInjection(final Project project, final XmlAttributeInjection template) -->Line_6 $$ configuration.replaceInjectionsWithUndo(project, Collections.singletonList(newInjection), ContainerUtil.createMaybeSingletonList(originalInjection), Collections.<PsiElement>emptyList())[ FD ]
Line_5 $$ final BaseInjection newInjection = originalInjection == null ? template : originalInjection.copy()-->Line_6 $$ configuration.replaceInjectionsWithUndo(project, Collections.singletonList(newInjection), ContainerUtil.createMaybeSingletonList(originalInjection), Collections.<PsiElement>emptyList())[ FD ]
Line_3 $$ final Configuration configuration = InjectorUtils.getEditableInstance(project)-->Line_6 $$ configuration.replaceInjectionsWithUndo(project, Collections.singletonList(newInjection), ContainerUtil.createMaybeSingletonList(originalInjection), Collections.<PsiElement>emptyList())[ FD ]
Line_2 $$ private static void doEditInjection(final Project project, final XmlAttributeInjection template) -->Line_5 $$ final BaseInjection newInjection = originalInjection == null ? template : originalInjection.copy()[ CD ]
Line_2 $$ private static void doEditInjection(final Project project, final XmlAttributeInjection template) -->Line_3 $$ final Configuration configuration = InjectorUtils.getEditableInstance(project)[ FD ]
Line_4 $$ final BaseInjection originalInjection = configuration.findExistingInjection(template)-->Line_5 $$ final BaseInjection newInjection = originalInjection == null ? template : originalInjection.copy()[ FD ]
Line_4 $$ final BaseInjection originalInjection = configuration.findExistingInjection(template)-->Line_6 $$ configuration.replaceInjectionsWithUndo(project, Collections.singletonList(newInjection), ContainerUtil.createMaybeSingletonList(originalInjection), Collections.<PsiElement>emptyList())[ FD ]
Line_2 $$ private static void doEditInjection(final Project project, final XmlAttributeInjection template) -->Line_4 $$ final BaseInjection originalInjection = configuration.findExistingInjection(template)[ CD ]
Line_3 $$ final Configuration configuration = InjectorUtils.getEditableInstance(project)-->Line_4 $$ final BaseInjection originalInjection = configuration.findExistingInjection(template)[ FD ]
