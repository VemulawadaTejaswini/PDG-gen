Line_10 $$ final XmlElement xmlElement = child.getXmlElement()-->Line_11 $$ if (xmlElement != null && xmlElement.getTextOffset() >= stopOffset) [ FD ]
Line_8 $$ for (Iterator<AntDomElement> iterator = antDomProject.getAntChildrenIterator(); iterator.hasNext(); ) -->Line_11 $$ if (xmlElement != null && xmlElement.getTextOffset() >= stopOffset) [ CD ]
Line_2 $$ private static Collection<PropertiesFile> getPropertyFiles(@Nullable AntDomProject antDomProject, @NotNull XmlElement stopElement) -->Line_8 $$ for (Iterator<AntDomElement> iterator = antDomProject.getAntChildrenIterator(); iterator.hasNext(); ) [ CD ]
Line_14 $$ if (child instanceof AntDomProperty) -->Line_16 $$ final PropertiesFile file = property.getPropertiesFile()[ CD ]
Line_2 $$ private static Collection<PropertiesFile> getPropertyFiles(@Nullable AntDomProject antDomProject, @NotNull XmlElement stopElement) -->Line_8 $$ for (Iterator<AntDomElement> iterator = antDomProject.getAntChildrenIterator(); iterator.hasNext(); ) [ FD ]
Line_14 $$ if (child instanceof AntDomProperty) -->Line_17 $$ if (file != null) [ CD ]
Line_8 $$ for (Iterator<AntDomElement> iterator = antDomProject.getAntChildrenIterator(); iterator.hasNext(); ) -->Line_9 $$ AntDomElement child = iterator.next()[ CD ]
Line_8 $$ for (Iterator<AntDomElement> iterator = antDomProject.getAntChildrenIterator(); iterator.hasNext(); ) -->Line_10 $$ final XmlElement xmlElement = child.getXmlElement()[ CD ]
Line_2 $$ private static Collection<PropertiesFile> getPropertyFiles(@Nullable AntDomProject antDomProject, @NotNull XmlElement stopElement) -->Line_22 $$ return files[ CD ]
Line_2 $$ private static Collection<PropertiesFile> getPropertyFiles(@Nullable AntDomProject antDomProject, @NotNull XmlElement stopElement) -->Line_3 $$ if (antDomProject == null) [ CD ]
Line_17 $$ if (file != null) -->Line_18 $$ files.add(file)[ CD ]
Line_9 $$ AntDomElement child = iterator.next()-->Line_14 $$ if (child instanceof AntDomProperty) [ FD ]
Line_9 $$ AntDomElement child = iterator.next()-->Line_10 $$ final XmlElement xmlElement = child.getXmlElement()[ FD ]
Line_8 $$ for (Iterator<AntDomElement> iterator = antDomProject.getAntChildrenIterator(); iterator.hasNext(); ) -->Line_9 $$ AntDomElement child = iterator.next()[ FD ]
Line_14 $$ if (child instanceof AntDomProperty) -->Line_15 $$ final AntDomProperty property = (AntDomProperty) child[ CD ]
Line_15 $$ final AntDomProperty property = (AntDomProperty) child-->Line_16 $$ final PropertiesFile file = property.getPropertiesFile()[ FD ]
Line_6 $$ final Set<PropertiesFile> files = new java.util.HashSet<PropertiesFile>()-->Line_18 $$ files.add(file)[ FD ]
Line_2 $$ private static Collection<PropertiesFile> getPropertyFiles(@Nullable AntDomProject antDomProject, @NotNull XmlElement stopElement) -->Line_6 $$ final Set<PropertiesFile> files = new java.util.HashSet<PropertiesFile>()[ CD ]
Line_16 $$ final PropertiesFile file = property.getPropertiesFile()-->Line_17 $$ if (file != null) [ FD ]
Line_16 $$ final PropertiesFile file = property.getPropertiesFile()-->Line_18 $$ files.add(file)[ FD ]
Line_2 $$ private static Collection<PropertiesFile> getPropertyFiles(@Nullable AntDomProject antDomProject, @NotNull XmlElement stopElement) -->Line_7 $$ final int stopOffset = stopElement.getTextOffset()[ CD ]
Line_8 $$ for (Iterator<AntDomElement> iterator = antDomProject.getAntChildrenIterator(); iterator.hasNext(); ) -->Line_14 $$ if (child instanceof AntDomProperty) [ CD ]
Line_2 $$ private static Collection<PropertiesFile> getPropertyFiles(@Nullable AntDomProject antDomProject, @NotNull XmlElement stopElement) -->Line_3 $$ if (antDomProject == null) [ FD ]
Line_2 $$ private static Collection<PropertiesFile> getPropertyFiles(@Nullable AntDomProject antDomProject, @NotNull XmlElement stopElement) -->Line_7 $$ final int stopOffset = stopElement.getTextOffset()[ FD ]
Line_3 $$ if (antDomProject == null) -->Line_4 $$ return Collections.emptyList()[ CD ]
