Line_5 $$ final Project project = host.getProject()-->Line_12 $$ final BaseInjection newInjection = xmlInjection == null ? showDefaultInjectionUI(project, originalInjection.copy()) : showInjectionUI(project, xmlInjection)[ FD ]
Line_12 $$ final BaseInjection newInjection = xmlInjection == null ? showDefaultInjectionUI(project, originalInjection.copy()) : showInjectionUI(project, xmlInjection)-->Line_13 $$ if (newInjection != null) [ FD ]
Line_2 $$ public boolean editInjectionInPlace(final PsiLanguageInjectionHost host) -->Line_11 $$ final BaseInjection xmlInjection = createFrom(originalInjection)[ CD ]
Line_10 $$ final BaseInjection originalInjection = injections.get(0)-->Line_14 $$ configuration.replaceInjectionsWithUndo(project, Collections.singletonList(newInjection), Collections.singletonList(originalInjection), Collections.<PsiElement>emptyList())[ FD ]
Line_2 $$ public boolean editInjectionInPlace(final PsiLanguageInjectionHost host) -->Line_7 $$ final ArrayList<BaseInjection> injections = collectInjections(host, configuration)[ CD ]
Line_2 $$ public boolean editInjectionInPlace(final PsiLanguageInjectionHost host) -->Line_5 $$ final Project project = host.getProject()[ FD ]
Line_2 $$ public boolean editInjectionInPlace(final PsiLanguageInjectionHost host) -->Line_3 $$ if (!isMine(host))[ CD ]
Line_2 $$ public boolean editInjectionInPlace(final PsiLanguageInjectionHost host) -->Line_12 $$ final BaseInjection newInjection = xmlInjection == null ? showDefaultInjectionUI(project, originalInjection.copy()) : showInjectionUI(project, xmlInjection)[ CD ]
Line_2 $$ public boolean editInjectionInPlace(final PsiLanguageInjectionHost host) -->Line_6 $$ final Configuration configuration = Configuration.getProjectInstance(project)[ CD ]
Line_8 $$ if (injections.isEmpty())-->Line_9 $$ return false[ CD ]
Line_2 $$ public boolean editInjectionInPlace(final PsiLanguageInjectionHost host) -->Line_7 $$ final ArrayList<BaseInjection> injections = collectInjections(host, configuration)[ FD ]
Line_10 $$ final BaseInjection originalInjection = injections.get(0)-->Line_12 $$ final BaseInjection newInjection = xmlInjection == null ? showDefaultInjectionUI(project, originalInjection.copy()) : showInjectionUI(project, xmlInjection)[ FD ]
Line_12 $$ final BaseInjection newInjection = xmlInjection == null ? showDefaultInjectionUI(project, originalInjection.copy()) : showInjectionUI(project, xmlInjection)-->Line_14 $$ configuration.replaceInjectionsWithUndo(project, Collections.singletonList(newInjection), Collections.singletonList(originalInjection), Collections.<PsiElement>emptyList())[ FD ]
Line_6 $$ final Configuration configuration = Configuration.getProjectInstance(project)-->Line_7 $$ final ArrayList<BaseInjection> injections = collectInjections(host, configuration)[ FD ]
Line_11 $$ final BaseInjection xmlInjection = createFrom(originalInjection)-->Line_12 $$ final BaseInjection newInjection = xmlInjection == null ? showDefaultInjectionUI(project, originalInjection.copy()) : showInjectionUI(project, xmlInjection)[ FD ]
Line_5 $$ final Project project = host.getProject()-->Line_14 $$ configuration.replaceInjectionsWithUndo(project, Collections.singletonList(newInjection), Collections.singletonList(originalInjection), Collections.<PsiElement>emptyList())[ FD ]
Line_13 $$ if (newInjection != null) -->Line_14 $$ configuration.replaceInjectionsWithUndo(project, Collections.singletonList(newInjection), Collections.singletonList(originalInjection), Collections.<PsiElement>emptyList())[ CD ]
Line_5 $$ final Project project = host.getProject()-->Line_6 $$ final Configuration configuration = Configuration.getProjectInstance(project)[ FD ]
Line_7 $$ final ArrayList<BaseInjection> injections = collectInjections(host, configuration)-->Line_8 $$ if (injections.isEmpty())[ FD ]
Line_2 $$ public boolean editInjectionInPlace(final PsiLanguageInjectionHost host) -->Line_8 $$ if (injections.isEmpty())[ CD ]
Line_2 $$ public boolean editInjectionInPlace(final PsiLanguageInjectionHost host) -->Line_3 $$ if (!isMine(host))[ FD ]
Line_10 $$ final BaseInjection originalInjection = injections.get(0)-->Line_11 $$ final BaseInjection xmlInjection = createFrom(originalInjection)[ FD ]
Line_7 $$ final ArrayList<BaseInjection> injections = collectInjections(host, configuration)-->Line_10 $$ final BaseInjection originalInjection = injections.get(0)[ FD ]
Line_3 $$ if (!isMine(host))-->Line_4 $$ return false[ CD ]
Line_2 $$ public boolean editInjectionInPlace(final PsiLanguageInjectionHost host) -->Line_5 $$ final Project project = host.getProject()[ CD ]
Line_6 $$ final Configuration configuration = Configuration.getProjectInstance(project)-->Line_14 $$ configuration.replaceInjectionsWithUndo(project, Collections.singletonList(newInjection), Collections.singletonList(originalInjection), Collections.<PsiElement>emptyList())[ FD ]
Line_2 $$ public boolean editInjectionInPlace(final PsiLanguageInjectionHost host) -->Line_13 $$ if (newInjection != null) [ CD ]
Line_2 $$ public boolean editInjectionInPlace(final PsiLanguageInjectionHost host) -->Line_10 $$ final BaseInjection originalInjection = injections.get(0)[ CD ]
Line_2 $$ public boolean editInjectionInPlace(final PsiLanguageInjectionHost host) -->Line_16 $$ return true[ CD ]
