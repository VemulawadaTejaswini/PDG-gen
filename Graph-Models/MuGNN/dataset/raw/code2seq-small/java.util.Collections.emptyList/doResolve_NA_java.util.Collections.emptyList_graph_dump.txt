Line_2 $$ private TargetResolver.Result doResolve(@Nullable final String referenceText) -->Line_20 $$ return TargetResolver.resolve(projectToSearchFrom, contextTarget, referenceText == null ? Collections.<String>emptyList() : Collections.singletonList(referenceText))[ FD ]
Line_14 $$ projectToSearchFrom = hostingElement.getContextAntProject()-->Line_17 $$ if (projectToSearchFrom == null) [ FD ]
Line_8 $$ AntDomTarget contextTarget-->Line_15 $$ contextTarget = hostingElement.getParentOfType(AntDomTarget.class, false)[ FD ]
Line_9 $$ if (hostingElement instanceof AntDomAnt) -->Line_14 $$ projectToSearchFrom = hostingElement.getContextAntProject()[ CD ]
Line_2 $$ private TargetResolver.Result doResolve(@Nullable final String referenceText) -->Line_4 $$ if (hostingElement == null) [ CD ]
Line_2 $$ private TargetResolver.Result doResolve(@Nullable final String referenceText) -->Line_17 $$ if (projectToSearchFrom == null) [ CD ]
Line_9 $$ if (hostingElement instanceof AntDomAnt) -->Line_11 $$ projectToSearchFrom = antFile instanceof PsiFile ? AntSupport.getAntDomProjectForceAntFile((PsiFile) antFile) : null[ CD ]
Line_3 $$ final AntDomElement hostingElement = getHostingAntDomElement()-->Line_9 $$ if (hostingElement instanceof AntDomAnt) [ FD ]
Line_9 $$ if (hostingElement instanceof AntDomAnt) -->Line_12 $$ contextTarget = null[ CD ]
Line_17 $$ if (projectToSearchFrom == null) -->Line_18 $$ return null[ CD ]
Line_8 $$ AntDomTarget contextTarget-->Line_12 $$ contextTarget = null[ FD ]
Line_2 $$ private TargetResolver.Result doResolve(@Nullable final String referenceText) -->Line_9 $$ if (hostingElement instanceof AntDomAnt) [ CD ]
Line_4 $$ if (hostingElement == null) -->Line_5 $$ return null[ CD ]
Line_2 $$ private TargetResolver.Result doResolve(@Nullable final String referenceText) -->Line_3 $$ final AntDomElement hostingElement = getHostingAntDomElement()[ CD ]
Line_3 $$ final AntDomElement hostingElement = getHostingAntDomElement()-->Line_15 $$ contextTarget = hostingElement.getParentOfType(AntDomTarget.class, false)[ FD ]
Line_2 $$ private TargetResolver.Result doResolve(@Nullable final String referenceText) -->Line_8 $$ AntDomTarget contextTarget[ CD ]
Line_7 $$ AntDomProject projectToSearchFrom-->Line_14 $$ projectToSearchFrom = hostingElement.getContextAntProject()[ FD ]
Line_9 $$ if (hostingElement instanceof AntDomAnt) -->Line_10 $$ final PsiFileSystemItem antFile = ((AntDomAnt) hostingElement).getAntFilePath().getValue()[ CD ]
Line_12 $$ contextTarget = null-->Line_20 $$ return TargetResolver.resolve(projectToSearchFrom, contextTarget, referenceText == null ? Collections.<String>emptyList() : Collections.singletonList(referenceText))[ FD ]
Line_11 $$ projectToSearchFrom = antFile instanceof PsiFile ? AntSupport.getAntDomProjectForceAntFile((PsiFile) antFile) : null-->Line_14 $$ projectToSearchFrom = hostingElement.getContextAntProject()[ FD ]
Line_3 $$ final AntDomElement hostingElement = getHostingAntDomElement()-->Line_14 $$ projectToSearchFrom = hostingElement.getContextAntProject()[ FD ]
Line_11 $$ projectToSearchFrom = antFile instanceof PsiFile ? AntSupport.getAntDomProjectForceAntFile((PsiFile) antFile) : null-->Line_20 $$ return TargetResolver.resolve(projectToSearchFrom, contextTarget, referenceText == null ? Collections.<String>emptyList() : Collections.singletonList(referenceText))[ FD ]
Line_3 $$ final AntDomElement hostingElement = getHostingAntDomElement()-->Line_4 $$ if (hostingElement == null) [ FD ]
Line_7 $$ AntDomProject projectToSearchFrom-->Line_11 $$ projectToSearchFrom = antFile instanceof PsiFile ? AntSupport.getAntDomProjectForceAntFile((PsiFile) antFile) : null[ FD ]
Line_15 $$ contextTarget = hostingElement.getParentOfType(AntDomTarget.class, false)-->Line_20 $$ return TargetResolver.resolve(projectToSearchFrom, contextTarget, referenceText == null ? Collections.<String>emptyList() : Collections.singletonList(referenceText))[ FD ]
Line_14 $$ projectToSearchFrom = hostingElement.getContextAntProject()-->Line_20 $$ return TargetResolver.resolve(projectToSearchFrom, contextTarget, referenceText == null ? Collections.<String>emptyList() : Collections.singletonList(referenceText))[ FD ]
Line_7 $$ AntDomProject projectToSearchFrom-->Line_17 $$ if (projectToSearchFrom == null) [ FD ]
Line_7 $$ AntDomProject projectToSearchFrom-->Line_20 $$ return TargetResolver.resolve(projectToSearchFrom, contextTarget, referenceText == null ? Collections.<String>emptyList() : Collections.singletonList(referenceText))[ FD ]
Line_12 $$ contextTarget = null-->Line_15 $$ contextTarget = hostingElement.getParentOfType(AntDomTarget.class, false)[ FD ]
Line_8 $$ AntDomTarget contextTarget-->Line_20 $$ return TargetResolver.resolve(projectToSearchFrom, contextTarget, referenceText == null ? Collections.<String>emptyList() : Collections.singletonList(referenceText))[ FD ]
Line_9 $$ if (hostingElement instanceof AntDomAnt) -->Line_15 $$ contextTarget = hostingElement.getParentOfType(AntDomTarget.class, false)[ CD ]
Line_2 $$ private TargetResolver.Result doResolve(@Nullable final String referenceText) -->Line_7 $$ AntDomProject projectToSearchFrom[ CD ]
Line_11 $$ projectToSearchFrom = antFile instanceof PsiFile ? AntSupport.getAntDomProjectForceAntFile((PsiFile) antFile) : null-->Line_17 $$ if (projectToSearchFrom == null) [ FD ]
Line_2 $$ private TargetResolver.Result doResolve(@Nullable final String referenceText) -->Line_20 $$ return TargetResolver.resolve(projectToSearchFrom, contextTarget, referenceText == null ? Collections.<String>emptyList() : Collections.singletonList(referenceText))[ CD ]
