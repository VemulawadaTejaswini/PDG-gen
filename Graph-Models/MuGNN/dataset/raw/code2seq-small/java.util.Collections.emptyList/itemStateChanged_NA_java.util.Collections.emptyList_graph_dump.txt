Line_8 $$ final ForkInfo fork = (ForkInfo) e.getItem()-->Line_12 $$ myPanel.setSelectedBranch(fork.getDefaultBranch())[ FD ]
Line_8 $$ final ForkInfo fork = (ForkInfo) e.getItem()-->Line_11 $$ myPanel.setBranches(fork.getBranches())[ FD ]
Line_18 $$ createRemote = true-->Line_21 $$ createRemote = false[ FD ]
Line_7 $$ if (e.getStateChange() == ItemEvent.SELECTED) -->Line_31 $$ if (fork.getRemoteName() == null) [ CD ]
Line_13 $$ if (fork.getRemoteName() == null && !fork.isProposedToCreateRemote()) -->Line_14 $$ fork.setProposedToCreateRemote(true)[ CD ]
Line_7 $$ if (e.getStateChange() == ItemEvent.SELECTED) -->Line_13 $$ if (fork.getRemoteName() == null && !fork.isProposedToCreateRemote()) [ CD ]
Line_7 $$ if (e.getStateChange() == ItemEvent.SELECTED) -->Line_9 $$ if (fork == null)[ CD ]
Line_15 $$ boolean createRemote = false-->Line_24 $$ createRemote = GithubNotifications.showYesNoDialog(project, "Can't Find Remote", "Configure remote for '" + fork.getPath().getUser() + "'?", ourDoNotAskOption)[ FD ]
Line_31 $$ if (fork.getRemoteName() == null) -->Line_35 $$ myWorker.launchFetchRemote(fork)[ CD ]
Line_15 $$ boolean createRemote = false-->Line_18 $$ createRemote = true[ FD ]
Line_13 $$ if (fork.getRemoteName() == null && !fork.isProposedToCreateRemote()) -->Line_27 $$ if (createRemote) [ CD ]
Line_8 $$ final ForkInfo fork = (ForkInfo) e.getItem()-->Line_13 $$ if (fork.getRemoteName() == null && !fork.isProposedToCreateRemote()) [ FD ]
Line_7 $$ if (e.getStateChange() == ItemEvent.SELECTED) -->Line_8 $$ final ForkInfo fork = (ForkInfo) e.getItem()[ CD ]
Line_8 $$ final ForkInfo fork = (ForkInfo) e.getItem()-->Line_31 $$ if (fork.getRemoteName() == null) [ FD ]
Line_7 $$ if (e.getStateChange() == ItemEvent.SELECTED) -->Line_11 $$ myPanel.setBranches(fork.getBranches())[ CD ]
Line_31 $$ if (fork.getRemoteName() == null) -->Line_32 $$ myPanel.setDiffEnabled(false)[ CD ]
Line_9 $$ if (fork == null)-->Line_10 $$ return[ CD ]
Line_8 $$ final ForkInfo fork = (ForkInfo) e.getItem()-->Line_14 $$ fork.setProposedToCreateRemote(true)[ FD ]
Line_7 $$ if (e.getStateChange() == ItemEvent.SELECTED) -->Line_12 $$ myPanel.setSelectedBranch(fork.getDefaultBranch())[ CD ]
Line_13 $$ if (fork.getRemoteName() == null && !fork.isProposedToCreateRemote()) -->Line_15 $$ boolean createRemote = false[ CD ]
Line_18 $$ createRemote = true-->Line_24 $$ createRemote = GithubNotifications.showYesNoDialog(project, "Can't Find Remote", "Configure remote for '" + fork.getPath().getUser() + "'?", ourDoNotAskOption)[ FD ]
Line_8 $$ final ForkInfo fork = (ForkInfo) e.getItem()-->Line_28 $$ myWorker.configureRemote(fork)[ FD ]
Line_8 $$ final ForkInfo fork = (ForkInfo) e.getItem()-->Line_24 $$ createRemote = GithubNotifications.showYesNoDialog(project, "Can't Find Remote", "Configure remote for '" + fork.getPath().getUser() + "'?", ourDoNotAskOption)[ FD ]
Line_21 $$ createRemote = false-->Line_24 $$ createRemote = GithubNotifications.showYesNoDialog(project, "Can't Find Remote", "Configure remote for '" + fork.getPath().getUser() + "'?", ourDoNotAskOption)[ FD ]
Line_31 $$ if (fork.getRemoteName() == null) -->Line_34 $$ myPanel.setDiffEnabled(true)[ CD ]
Line_15 $$ boolean createRemote = false-->Line_21 $$ createRemote = false[ FD ]
Line_4 $$ if (e.getStateChange() == ItemEvent.DESELECTED) -->Line_5 $$ myPanel.setBranches(Collections.<BranchInfo>emptyList())[ CD ]
Line_8 $$ final ForkInfo fork = (ForkInfo) e.getItem()-->Line_35 $$ myWorker.launchFetchRemote(fork)[ FD ]
Line_27 $$ if (createRemote) -->Line_28 $$ myWorker.configureRemote(fork)[ CD ]
Line_8 $$ final ForkInfo fork = (ForkInfo) e.getItem()-->Line_9 $$ if (fork == null)[ FD ]
