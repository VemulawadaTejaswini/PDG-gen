Line_2 $$ public List<T> getSelectedChanges() -->Line_3 $$ if (myShowFlatten) [ CD ]
Line_4 $$ final List<T> changes = new ArrayList<T>()-->Line_18 $$ return ContainerUtil.newArrayList(changes)[ FD ]
Line_4 $$ final List<T> changes = new ArrayList<T>()-->Line_16 $$ changes.addAll(getSelectedObjects((ChangesBrowserNode) path.getLastPathComponent()))[ FD ]
Line_3 $$ if (myShowFlatten) -->Line_4 $$ final List<T> changes = new ArrayList<T>()[ CD ]
Line_11 $$ if (paths == null) -->Line_18 $$ return ContainerUtil.newArrayList(changes)[ CD ]
Line_11 $$ if (paths == null) -->Line_14 $$ LinkedHashSet<T> changes = ContainerUtil.newLinkedHashSet()[ CD ]
Line_15 $$ for (TreePath path : paths) -->Line_16 $$ changes.addAll(getSelectedObjects((ChangesBrowserNode) path.getLastPathComponent()))[ FD ]
Line_11 $$ if (paths == null) -->Line_12 $$ return Collections.emptyList()[ CD ]
Line_3 $$ if (myShowFlatten) -->Line_11 $$ if (paths == null) [ CD ]
Line_3 $$ if (myShowFlatten) -->Line_8 $$ return changes[ CD ]
Line_3 $$ if (myShowFlatten) -->Line_10 $$ final TreePath[] paths = myTree.getSelectionPaths()[ CD ]
Line_4 $$ final List<T> changes = new ArrayList<T>()-->Line_6 $$ changes.add((T) anO)[ FD ]
Line_10 $$ final TreePath[] paths = myTree.getSelectionPaths()-->Line_11 $$ if (paths == null) [ FD ]
