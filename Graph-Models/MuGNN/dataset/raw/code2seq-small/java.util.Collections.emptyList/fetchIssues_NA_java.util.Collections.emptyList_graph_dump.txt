Line_2 $$ public List<RedmineIssue> fetchIssues(String query, int offset, int limit, boolean withClosed) throws Exception -->Line_10 $$ IssuesWrapper wrapper = client.execute(method, new GsonSingleObjectDeserializer<IssuesWrapper>(GSON, IssuesWrapper.class))[ CD ]
Line_9 $$ HttpGet method = new HttpGet(getIssuesUrl(offset, limit, withClosed))-->Line_10 $$ IssuesWrapper wrapper = client.execute(method, new GsonSingleObjectDeserializer<IssuesWrapper>(GSON, IssuesWrapper.class))[ FD ]
Line_2 $$ public List<RedmineIssue> fetchIssues(String query, int offset, int limit, boolean withClosed) throws Exception -->Line_11 $$ return wrapper == null ? Collections.<RedmineIssue>emptyList() : wrapper.getIssues()[ CD ]
Line_10 $$ IssuesWrapper wrapper = client.execute(method, new GsonSingleObjectDeserializer<IssuesWrapper>(GSON, IssuesWrapper.class))-->Line_11 $$ return wrapper == null ? Collections.<RedmineIssue>emptyList() : wrapper.getIssues()[ FD ]
Line_2 $$ public List<RedmineIssue> fetchIssues(String query, int offset, int limit, boolean withClosed) throws Exception -->Line_3 $$ ensureProjectsDiscovered()[ CD ]
Line_2 $$ public List<RedmineIssue> fetchIssues(String query, int offset, int limit, boolean withClosed) throws Exception -->Line_9 $$ HttpGet method = new HttpGet(getIssuesUrl(offset, limit, withClosed))[ CD ]
Line_2 $$ public List<RedmineIssue> fetchIssues(String query, int offset, int limit, boolean withClosed) throws Exception -->Line_9 $$ HttpGet method = new HttpGet(getIssuesUrl(offset, limit, withClosed))[ FD ]
