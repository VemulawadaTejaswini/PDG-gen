Line_2 $$ public Pair<VcsRevisionNumber, List<CommittedChangeList>> getOutgoingChanges(final VirtualFile vcsRoot, final boolean findRemote) throws VcsException -->Line_12 $$ final List<GitCommittedChangeList> lists = GitUtil.getLocalCommittedChanges(myProject, vcsRoot, new Consumer<GitSimpleHandler>() [ FD ]
Line_2 $$ public Pair<VcsRevisionNumber, List<CommittedChangeList>> getOutgoingChanges(final VirtualFile vcsRoot, final boolean findRemote) throws VcsException -->Line_4 $$ final GitBranchesSearcher searcher = new GitBranchesSearcher(myProject, vcsRoot, findRemote)[ CD ]
Line_8 $$ final GitRevisionNumber base = getMergeBase(myProject, vcsRoot, searcher.getLocal(), searcher.getRemote())-->Line_15 $$ handler.addParameters(base.asString() + "..HEAD")[ FD ]
Line_2 $$ public Pair<VcsRevisionNumber, List<CommittedChangeList>> getOutgoingChanges(final VirtualFile vcsRoot, final boolean findRemote) throws VcsException -->Line_9 $$ if (base == null) [ CD ]
Line_12 $$ final List<GitCommittedChangeList> lists = GitUtil.getLocalCommittedChanges(myProject, vcsRoot, new Consumer<GitSimpleHandler>() -->Line_15 $$ handler.addParameters(base.asString() + "..HEAD")[ FD ]
Line_2 $$ public Pair<VcsRevisionNumber, List<CommittedChangeList>> getOutgoingChanges(final VirtualFile vcsRoot, final boolean findRemote) throws VcsException -->Line_12 $$ final List<GitCommittedChangeList> lists = GitUtil.getLocalCommittedChanges(myProject, vcsRoot, new Consumer<GitSimpleHandler>() [ CD ]
Line_5 $$ if (searcher.getLocal() == null || searcher.getRemote() == null) -->Line_6 $$ return new Pair<VcsRevisionNumber, List<CommittedChangeList>>(null, Collections.<CommittedChangeList>emptyList())[ CD ]
Line_8 $$ final GitRevisionNumber base = getMergeBase(myProject, vcsRoot, searcher.getLocal(), searcher.getRemote())-->Line_9 $$ if (base == null) [ FD ]
Line_18 $$ return new Pair<VcsRevisionNumber, List<CommittedChangeList>>(base, ObjectsConvertor.convert(lists, new Convertor<GitCommittedChangeList, CommittedChangeList>() -->Line_22 $$ return o[ CD ]
Line_9 $$ if (base == null) -->Line_10 $$ return new Pair<VcsRevisionNumber, List<CommittedChangeList>>(null, Collections.<CommittedChangeList>emptyList())[ CD ]
Line_2 $$ public Pair<VcsRevisionNumber, List<CommittedChangeList>> getOutgoingChanges(final VirtualFile vcsRoot, final boolean findRemote) throws VcsException -->Line_8 $$ final GitRevisionNumber base = getMergeBase(myProject, vcsRoot, searcher.getLocal(), searcher.getRemote())[ CD ]
Line_12 $$ final List<GitCommittedChangeList> lists = GitUtil.getLocalCommittedChanges(myProject, vcsRoot, new Consumer<GitSimpleHandler>() -->Line_18 $$ return new Pair<VcsRevisionNumber, List<CommittedChangeList>>(base, ObjectsConvertor.convert(lists, new Convertor<GitCommittedChangeList, CommittedChangeList>() [ FD ]
Line_4 $$ final GitBranchesSearcher searcher = new GitBranchesSearcher(myProject, vcsRoot, findRemote)-->Line_8 $$ final GitRevisionNumber base = getMergeBase(myProject, vcsRoot, searcher.getLocal(), searcher.getRemote())[ FD ]
Line_4 $$ final GitBranchesSearcher searcher = new GitBranchesSearcher(myProject, vcsRoot, findRemote)-->Line_5 $$ if (searcher.getLocal() == null || searcher.getRemote() == null) [ FD ]
Line_2 $$ public Pair<VcsRevisionNumber, List<CommittedChangeList>> getOutgoingChanges(final VirtualFile vcsRoot, final boolean findRemote) throws VcsException -->Line_18 $$ return new Pair<VcsRevisionNumber, List<CommittedChangeList>>(base, ObjectsConvertor.convert(lists, new Convertor<GitCommittedChangeList, CommittedChangeList>() [ CD ]
Line_2 $$ public Pair<VcsRevisionNumber, List<CommittedChangeList>> getOutgoingChanges(final VirtualFile vcsRoot, final boolean findRemote) throws VcsException -->Line_5 $$ if (searcher.getLocal() == null || searcher.getRemote() == null) [ CD ]
Line_2 $$ public Pair<VcsRevisionNumber, List<CommittedChangeList>> getOutgoingChanges(final VirtualFile vcsRoot, final boolean findRemote) throws VcsException -->Line_3 $$ LOG.debug("getOutgoingChanges root: " + vcsRoot.getPath())[ CD ]
Line_2 $$ public Pair<VcsRevisionNumber, List<CommittedChangeList>> getOutgoingChanges(final VirtualFile vcsRoot, final boolean findRemote) throws VcsException -->Line_8 $$ final GitRevisionNumber base = getMergeBase(myProject, vcsRoot, searcher.getLocal(), searcher.getRemote())[ FD ]
Line_2 $$ public Pair<VcsRevisionNumber, List<CommittedChangeList>> getOutgoingChanges(final VirtualFile vcsRoot, final boolean findRemote) throws VcsException -->Line_3 $$ LOG.debug("getOutgoingChanges root: " + vcsRoot.getPath())[ FD ]
Line_12 $$ final List<GitCommittedChangeList> lists = GitUtil.getLocalCommittedChanges(myProject, vcsRoot, new Consumer<GitSimpleHandler>() -->Line_15 $$ handler.addParameters(base.asString() + "..HEAD")[ CD ]
