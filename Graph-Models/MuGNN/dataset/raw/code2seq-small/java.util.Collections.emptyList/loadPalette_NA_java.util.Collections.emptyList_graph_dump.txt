Line_6 $$ if (myDesigner != null && designer != null && myGroups.equals(designer.getPaletteGroups())) -->Line_9 $$ return[ CD ]
Line_2 $$ public void loadPalette(@Nullable DesignerEditorPanel designer) -->Line_6 $$ if (myDesigner != null && designer != null && myGroups.equals(designer.getPaletteGroups())) [ FD ]
Line_2 $$ public void loadPalette(@Nullable DesignerEditorPanel designer) -->Line_6 $$ if (myDesigner != null && designer != null && myGroups.equals(designer.getPaletteGroups())) [ CD ]
Line_26 $$ PaletteGroupComponent groupComponent = new PaletteGroupComponent(group)-->Line_33 $$ myPaletteContainer.add(groupComponent)[ FD ]
Line_11 $$ for (PaletteItemsComponent itemsComponent : myItemsComponents) -->Line_31 $$ itemsComponent.addListSelectionListener(mySelectionListener)[ FD ]
Line_2 $$ public void loadPalette(@Nullable DesignerEditorPanel designer) -->Line_16 $$ if (designer == null) [ CD ]
Line_2 $$ public void loadPalette(@Nullable DesignerEditorPanel designer) -->Line_16 $$ if (designer == null) [ FD ]
Line_6 $$ if (myDesigner != null && designer != null && myGroups.equals(designer.getPaletteGroups())) -->Line_8 $$ restoreSelection()[ CD ]
Line_16 $$ if (designer == null) -->Line_21 $$ myGroups = designer.getPaletteGroups()[ CD ]
Line_2 $$ public void loadPalette(@Nullable DesignerEditorPanel designer) -->Line_37 $$ if (myDesigner != null) [ CD ]
Line_26 $$ PaletteGroupComponent groupComponent = new PaletteGroupComponent(group)-->Line_28 $$ groupComponent.setItemsComponent(itemsComponent)[ FD ]
Line_16 $$ if (designer == null) -->Line_19 $$ myItemsComponents = Collections.emptyList()[ CD ]
Line_11 $$ for (PaletteItemsComponent itemsComponent : myItemsComponents) -->Line_34 $$ myPaletteContainer.add(itemsComponent)[ FD ]
Line_3 $$ if (myDesigner == null && designer == null) -->Line_4 $$ return[ CD ]
Line_11 $$ for (PaletteItemsComponent itemsComponent : myItemsComponents) -->Line_28 $$ groupComponent.setItemsComponent(itemsComponent)[ FD ]
Line_11 $$ for (PaletteItemsComponent itemsComponent : myItemsComponents) -->Line_12 $$ itemsComponent.removeListSelectionListener(mySelectionListener)[ FD ]
Line_2 $$ public void loadPalette(@Nullable DesignerEditorPanel designer) -->Line_21 $$ myGroups = designer.getPaletteGroups()[ FD ]
Line_26 $$ PaletteGroupComponent groupComponent = new PaletteGroupComponent(group)-->Line_29 $$ groupComponent.addFocusListener(myFocusListener)[ FD ]
Line_37 $$ if (myDesigner != null) -->Line_38 $$ restoreSelection()[ CD ]
Line_16 $$ if (designer == null) -->Line_17 $$ myGroups = Collections.emptyList()[ CD ]
Line_2 $$ public void loadPalette(@Nullable DesignerEditorPanel designer) -->Line_3 $$ if (myDesigner == null && designer == null) [ CD ]
Line_26 $$ PaletteGroupComponent groupComponent = new PaletteGroupComponent(group)-->Line_30 $$ myGroupComponents.add(groupComponent)[ FD ]
Line_16 $$ if (designer == null) -->Line_18 $$ myGroupComponents = Collections.emptyList()[ CD ]
Line_2 $$ public void loadPalette(@Nullable DesignerEditorPanel designer) -->Line_36 $$ myPaletteContainer.revalidate()[ CD ]
Line_11 $$ for (PaletteItemsComponent itemsComponent : myItemsComponents) -->Line_32 $$ myItemsComponents.add(itemsComponent)[ FD ]
Line_2 $$ public void loadPalette(@Nullable DesignerEditorPanel designer) -->Line_15 $$ myPaletteContainer.removeAll()[ CD ]
