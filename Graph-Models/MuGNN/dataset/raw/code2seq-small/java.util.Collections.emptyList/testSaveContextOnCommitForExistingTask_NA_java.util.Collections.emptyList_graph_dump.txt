Line_2 $$ public void testSaveContextOnCommitForExistingTask() throws Exception -->Line_3 $$ myTaskManager.getState().saveContextOnCommit = true[ CD ]
Line_2 $$ public void testSaveContextOnCommitForExistingTask() throws Exception -->Line_19 $$ CommitChangeListDialog.commitChanges(getProject(), Collections.<Change>emptyList(), changeList, null, changeList.getName())[ CD ]
Line_2 $$ public void testSaveContextOnCommitForExistingTask() throws Exception -->Line_18 $$ assertNotNull(changeList)[ CD ]
Line_2 $$ public void testSaveContextOnCommitForExistingTask() throws Exception -->Line_17 $$ LocalChangeList changeList = myChangeListManager.getChangeList(info.id)[ CD ]
Line_15 $$ List<ChangeListInfo> changelists = localTask.getChangeLists()-->Line_16 $$ ChangeListInfo info = changelists.get(0)[ FD ]
Line_5 $$ Task task = myRepository.findTask("TEST-001")-->Line_9 $$ activateAndCreateChangelist(task)[ FD ]
Line_2 $$ public void testSaveContextOnCommitForExistingTask() throws Exception -->Line_22 $$ assertEquals(2, myChangeListManager.getChangeListsCopy().size())[ CD ]
Line_12 $$ List<LocalChangeList> copy = myChangeListManager.getChangeListsCopy()-->Line_13 $$ assertEquals(copy.toString(), 2, copy.size())[ FD ]
Line_2 $$ public void testSaveContextOnCommitForExistingTask() throws Exception -->Line_10 $$ myChangeListManager.waitUntilRefreshed()[ CD ]
Line_2 $$ public void testSaveContextOnCommitForExistingTask() throws Exception -->Line_9 $$ activateAndCreateChangelist(task)[ CD ]
Line_2 $$ public void testSaveContextOnCommitForExistingTask() throws Exception -->Line_14 $$ LocalTask localTask = myTaskManager.getActiveTask()[ CD ]
Line_2 $$ public void testSaveContextOnCommitForExistingTask() throws Exception -->Line_6 $$ assertNotNull(task)[ CD ]
Line_17 $$ LocalChangeList changeList = myChangeListManager.getChangeList(info.id)-->Line_18 $$ assertNotNull(changeList)[ FD ]
Line_2 $$ public void testSaveContextOnCommitForExistingTask() throws Exception -->Line_4 $$ assertEquals(1, myTaskManager.getLocalTasks().size())[ CD ]
Line_2 $$ public void testSaveContextOnCommitForExistingTask() throws Exception -->Line_5 $$ Task task = myRepository.findTask("TEST-001")[ CD ]
Line_2 $$ public void testSaveContextOnCommitForExistingTask() throws Exception -->Line_16 $$ ChangeListInfo info = changelists.get(0)[ CD ]
Line_14 $$ LocalTask localTask = myTaskManager.getActiveTask()-->Line_15 $$ List<ChangeListInfo> changelists = localTask.getChangeLists()[ FD ]
Line_5 $$ Task task = myRepository.findTask("TEST-001")-->Line_6 $$ assertNotNull(task)[ FD ]
Line_17 $$ LocalChangeList changeList = myChangeListManager.getChangeList(info.id)-->Line_19 $$ CommitChangeListDialog.commitChanges(getProject(), Collections.<Change>emptyList(), changeList, null, changeList.getName())[ FD ]
Line_2 $$ public void testSaveContextOnCommitForExistingTask() throws Exception -->Line_15 $$ List<ChangeListInfo> changelists = localTask.getChangeLists()[ CD ]
Line_2 $$ public void testSaveContextOnCommitForExistingTask() throws Exception -->Line_12 $$ List<LocalChangeList> copy = myChangeListManager.getChangeListsCopy()[ CD ]
Line_2 $$ public void testSaveContextOnCommitForExistingTask() throws Exception -->Line_11 $$ assertEquals(2, myTaskManager.getLocalTasks().size())[ CD ]
Line_2 $$ public void testSaveContextOnCommitForExistingTask() throws Exception -->Line_13 $$ assertEquals(copy.toString(), 2, copy.size())[ CD ]
