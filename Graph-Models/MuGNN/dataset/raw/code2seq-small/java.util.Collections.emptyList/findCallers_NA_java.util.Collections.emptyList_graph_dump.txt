Line_2 $$ private List<M> findCallers() -->Line_6 $$ if (!ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable() [ CD ]
Line_6 $$ if (!ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable() -->Line_10 $$ ApplicationManager.getApplication().runReadAction(new Runnable() [ CD ]
Line_5 $$ final Ref<List<M>> callers = new Ref<List<M>>()-->Line_22 $$ return callers.get()[ FD ]
Line_2 $$ private List<M> findCallers() -->Line_3 $$ if (myMethod == null)[ CD ]
Line_2 $$ private List<M> findCallers() -->Line_5 $$ final Ref<List<M>> callers = new Ref<List<M>>()[ CD ]
Line_3 $$ if (myMethod == null)-->Line_4 $$ return Collections.emptyList()[ CD ]
Line_10 $$ ApplicationManager.getApplication().runReadAction(new Runnable() -->Line_14 $$ callers.set(ContainerUtil.filter(computeCallers(), getFilter()))[ CD ]
Line_5 $$ final Ref<List<M>> callers = new Ref<List<M>>()-->Line_14 $$ callers.set(ContainerUtil.filter(computeCallers(), getFilter()))[ FD ]
Line_6 $$ if (!ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable() -->Line_19 $$ myCancelCallback.run()[ CD ]
Line_6 $$ if (!ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable() -->Line_20 $$ return Collections.emptyList()[ CD ]
Line_2 $$ private List<M> findCallers() -->Line_22 $$ return callers.get()[ CD ]
