Line_19 $$ if (!expired.isEmpty()) -->Line_20 $$ logger.trace("Including expired sstables: [ CD ]
Line_19 $$ if (!expired.isEmpty()) -->Line_21 $$ compactionCandidates.addAll(expired)[ CD ]
Line_9 $$ Set<SSTableReader> uncompacting = ImmutableSet.copyOf(filter(cfs.getUncompactingSSTables(), sstables::<>contains))-->Line_17 $$ Set<SSTableReader> candidates = Sets.newHashSet(filterSuspectSSTables(uncompacting))[ FD ]
Line_7 $$ if (Iterables.isEmpty(cfs.getSSTables(SSTableSet.LIVE)))-->Line_8 $$ return Collections.emptyList()[ CD ]
Line_10 $$ Set<SSTableReader> expired = Collections.emptySet()-->Line_21 $$ compactionCandidates.addAll(expired)[ FD ]
Line_10 $$ Set<SSTableReader> expired = Collections.emptySet()-->Line_18 $$ List<SSTableReader> compactionCandidates = new ArrayList(getNextNonExpiredSSTables(Sets.difference(candidates, expired), gcBefore))[ FD ]
Line_17 $$ Set<SSTableReader> candidates = Sets.newHashSet(filterSuspectSSTables(uncompacting))-->Line_18 $$ List<SSTableReader> compactionCandidates = new ArrayList(getNextNonExpiredSSTables(Sets.difference(candidates, expired), gcBefore))[ FD ]
Line_10 $$ Set<SSTableReader> expired = Collections.emptySet()-->Line_19 $$ if (!expired.isEmpty()) [ FD ]
Line_18 $$ List<SSTableReader> compactionCandidates = new ArrayList(getNextNonExpiredSSTables(Sets.difference(candidates, expired), gcBefore))-->Line_21 $$ compactionCandidates.addAll(expired)[ FD ]
Line_10 $$ Set<SSTableReader> expired = Collections.emptySet()-->Line_20 $$ logger.trace("Including expired sstables: [ FD ]
