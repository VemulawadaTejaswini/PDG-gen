Line_6 $$ Set<SSTableReader> expired = Collections.emptySet()-->Line_12 $$ List<SSTableReader> compactionCandidates = new ArrayList(getNextNonExpiredSSTables(Sets.difference(candidates, expired), gcBefore))[ FD ]
Line_8 $$ expired = CompactionController.getFullyExpiredSSTables(cfs, uncompacting, cfs.getOverlappingSSTables(SSTableSet.CANONICAL, uncompacting), gcBefore)-->Line_13 $$ if (!expired.isEmpty()) [ FD ]
Line_7 $$ if (System.currentTimeMillis() - lastExpiredCheck > options.expiredSSTableCheckFrequency) -->Line_8 $$ expired = CompactionController.getFullyExpiredSSTables(cfs, uncompacting, cfs.getOverlappingSSTables(SSTableSet.CANONICAL, uncompacting), gcBefore)[ CD ]
Line_5 $$ Set<SSTableReader> uncompacting = ImmutableSet.copyOf(filter(cfs.getUncompactingSSTables(), sstables::<>contains))-->Line_11 $$ Set<SSTableReader> candidates = Sets.newHashSet(filterSuspectSSTables(uncompacting))[ FD ]
Line_12 $$ List<SSTableReader> compactionCandidates = new ArrayList(getNextNonExpiredSSTables(Sets.difference(candidates, expired), gcBefore))-->Line_15 $$ compactionCandidates.addAll(expired)[ FD ]
Line_8 $$ expired = CompactionController.getFullyExpiredSSTables(cfs, uncompacting, cfs.getOverlappingSSTables(SSTableSet.CANONICAL, uncompacting), gcBefore)-->Line_12 $$ List<SSTableReader> compactionCandidates = new ArrayList(getNextNonExpiredSSTables(Sets.difference(candidates, expired), gcBefore))[ FD ]
Line_13 $$ if (!expired.isEmpty()) -->Line_15 $$ compactionCandidates.addAll(expired)[ CD ]
Line_2 $$ private List<SSTableReader> getNextBackgroundSSTables(final int gcBefore) -->Line_12 $$ List<SSTableReader> compactionCandidates = new ArrayList(getNextNonExpiredSSTables(Sets.difference(candidates, expired), gcBefore))[ FD ]
Line_6 $$ Set<SSTableReader> expired = Collections.emptySet()-->Line_13 $$ if (!expired.isEmpty()) [ FD ]
Line_2 $$ private List<SSTableReader> getNextBackgroundSSTables(final int gcBefore) -->Line_6 $$ Set<SSTableReader> expired = Collections.emptySet()[ CD ]
Line_5 $$ Set<SSTableReader> uncompacting = ImmutableSet.copyOf(filter(cfs.getUncompactingSSTables(), sstables::<>contains))-->Line_8 $$ expired = CompactionController.getFullyExpiredSSTables(cfs, uncompacting, cfs.getOverlappingSSTables(SSTableSet.CANONICAL, uncompacting), gcBefore)[ FD ]
Line_11 $$ Set<SSTableReader> candidates = Sets.newHashSet(filterSuspectSSTables(uncompacting))-->Line_12 $$ List<SSTableReader> compactionCandidates = new ArrayList(getNextNonExpiredSSTables(Sets.difference(candidates, expired), gcBefore))[ FD ]
Line_3 $$ if (Iterables.isEmpty(cfs.getSSTables(SSTableSet.LIVE)))-->Line_4 $$ return Collections.emptyList()[ CD ]
Line_2 $$ private List<SSTableReader> getNextBackgroundSSTables(final int gcBefore) -->Line_17 $$ return compactionCandidates[ CD ]
Line_6 $$ Set<SSTableReader> expired = Collections.emptySet()-->Line_14 $$ logger.trace("Including expired sstables: [ FD ]
Line_6 $$ Set<SSTableReader> expired = Collections.emptySet()-->Line_15 $$ compactionCandidates.addAll(expired)[ FD ]
Line_2 $$ private List<SSTableReader> getNextBackgroundSSTables(final int gcBefore) -->Line_13 $$ if (!expired.isEmpty()) [ CD ]
Line_2 $$ private List<SSTableReader> getNextBackgroundSSTables(final int gcBefore) -->Line_3 $$ if (Iterables.isEmpty(cfs.getSSTables(SSTableSet.LIVE)))[ CD ]
Line_7 $$ if (System.currentTimeMillis() - lastExpiredCheck > options.expiredSSTableCheckFrequency) -->Line_9 $$ lastExpiredCheck = System.currentTimeMillis()[ CD ]
Line_6 $$ Set<SSTableReader> expired = Collections.emptySet()-->Line_8 $$ expired = CompactionController.getFullyExpiredSSTables(cfs, uncompacting, cfs.getOverlappingSSTables(SSTableSet.CANONICAL, uncompacting), gcBefore)[ FD ]
Line_2 $$ private List<SSTableReader> getNextBackgroundSSTables(final int gcBefore) -->Line_12 $$ List<SSTableReader> compactionCandidates = new ArrayList(getNextNonExpiredSSTables(Sets.difference(candidates, expired), gcBefore))[ CD ]
Line_2 $$ private List<SSTableReader> getNextBackgroundSSTables(final int gcBefore) -->Line_5 $$ Set<SSTableReader> uncompacting = ImmutableSet.copyOf(filter(cfs.getUncompactingSSTables(), sstables::<>contains))[ CD ]
Line_2 $$ private List<SSTableReader> getNextBackgroundSSTables(final int gcBefore) -->Line_11 $$ Set<SSTableReader> candidates = Sets.newHashSet(filterSuspectSSTables(uncompacting))[ CD ]
Line_2 $$ private List<SSTableReader> getNextBackgroundSSTables(final int gcBefore) -->Line_8 $$ expired = CompactionController.getFullyExpiredSSTables(cfs, uncompacting, cfs.getOverlappingSSTables(SSTableSet.CANONICAL, uncompacting), gcBefore)[ FD ]
Line_2 $$ private List<SSTableReader> getNextBackgroundSSTables(final int gcBefore) -->Line_7 $$ if (System.currentTimeMillis() - lastExpiredCheck > options.expiredSSTableCheckFrequency) [ CD ]
Line_8 $$ expired = CompactionController.getFullyExpiredSSTables(cfs, uncompacting, cfs.getOverlappingSSTables(SSTableSet.CANONICAL, uncompacting), gcBefore)-->Line_15 $$ compactionCandidates.addAll(expired)[ FD ]
Line_13 $$ if (!expired.isEmpty()) -->Line_14 $$ logger.trace("Including expired sstables: [ CD ]
Line_8 $$ expired = CompactionController.getFullyExpiredSSTables(cfs, uncompacting, cfs.getOverlappingSSTables(SSTableSet.CANONICAL, uncompacting), gcBefore)-->Line_14 $$ logger.trace("Including expired sstables: [ FD ]
