Line_2 $$ public Collection<MappingDocument> produceAdditionalMappings(final MetadataImplementor metadata, IndexView jandexIndex, final MappingBinder mappingBinder, final MetadataBuildingContext buildingContext) -->Line_4 $$ final EnversService enversService = serviceRegistry.getService(EnversService.class)[ CD ]
Line_5 $$ if (!enversService.isEnabled()) -->Line_6 $$ return Collections.emptyList()[ CD ]
Line_24 $$ final Binding jaxbBinding = mappingBinder.bind(bis, origin)-->Line_25 $$ final JaxbHbmHibernateMapping jaxbRoot = (JaxbHbmHibernateMapping) jaxbBinding.getRoot()[ FD ]
Line_2 $$ public Collection<MappingDocument> produceAdditionalMappings(final MetadataImplementor metadata, IndexView jandexIndex, final MappingBinder mappingBinder, final MetadataBuildingContext buildingContext) -->Line_8 $$ final ArrayList<MappingDocument> additionalMappingDocuments = new ArrayList<MappingDocument>()[ CD ]
Line_10 $$ final MappingCollector mappingCollector = new MappingCollector() -->Line_12 $$ dump(document)[ FD ]
Line_2 $$ public Collection<MappingDocument> produceAdditionalMappings(final MetadataImplementor metadata, IndexView jandexIndex, final MappingBinder mappingBinder, final MetadataBuildingContext buildingContext) -->Line_5 $$ if (!enversService.isEnabled()) [ CD ]
Line_4 $$ final EnversService enversService = serviceRegistry.getService(EnversService.class)-->Line_5 $$ if (!enversService.isEnabled()) [ FD ]
Line_9 $$ final Origin origin = new Origin(SourceType.OTHER, "envers")-->Line_24 $$ final Binding jaxbBinding = mappingBinder.bind(bis, origin)[ FD ]
Line_14 $$ final Writer w = new PrintWriter(baos)-->Line_18 $$ w.flush()[ FD ]
Line_13 $$ final ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_22 $$ ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray())[ FD ]
Line_23 $$ BufferedInputStream bis = new BufferedInputStream(bais)-->Line_24 $$ final Binding jaxbBinding = mappingBinder.bind(bis, origin)[ FD ]
Line_2 $$ public Collection<MappingDocument> produceAdditionalMappings(final MetadataImplementor metadata, IndexView jandexIndex, final MappingBinder mappingBinder, final MetadataBuildingContext buildingContext) -->Line_10 $$ final MappingCollector mappingCollector = new MappingCollector() [ CD ]
Line_10 $$ final MappingCollector mappingCollector = new MappingCollector() -->Line_26 $$ additionalMappingDocuments.add(new MappingDocument(jaxbRoot, origin, buildingContext))[ CD ]
Line_10 $$ final MappingCollector mappingCollector = new MappingCollector() -->Line_12 $$ dump(document)[ CD ]
Line_10 $$ final MappingCollector mappingCollector = new MappingCollector() -->Line_13 $$ final ByteArrayOutputStream baos = new ByteArrayOutputStream()[ CD ]
Line_10 $$ final MappingCollector mappingCollector = new MappingCollector() -->Line_22 $$ ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray())[ CD ]
Line_2 $$ public Collection<MappingDocument> produceAdditionalMappings(final MetadataImplementor metadata, IndexView jandexIndex, final MappingBinder mappingBinder, final MetadataBuildingContext buildingContext) -->Line_29 $$ enversService.initialize(metadata, mappingCollector)[ FD ]
Line_10 $$ final MappingCollector mappingCollector = new MappingCollector() -->Line_25 $$ final JaxbHbmHibernateMapping jaxbRoot = (JaxbHbmHibernateMapping) jaxbBinding.getRoot()[ CD ]
Line_10 $$ final MappingCollector mappingCollector = new MappingCollector() -->Line_14 $$ final Writer w = new PrintWriter(baos)[ CD ]
Line_2 $$ public Collection<MappingDocument> produceAdditionalMappings(final MetadataImplementor metadata, IndexView jandexIndex, final MappingBinder mappingBinder, final MetadataBuildingContext buildingContext) -->Line_3 $$ final ServiceRegistry serviceRegistry = metadata.getMetadataBuildingOptions().getServiceRegistry()[ CD ]
Line_2 $$ public Collection<MappingDocument> produceAdditionalMappings(final MetadataImplementor metadata, IndexView jandexIndex, final MappingBinder mappingBinder, final MetadataBuildingContext buildingContext) -->Line_30 $$ return additionalMappingDocuments[ CD ]
Line_10 $$ final MappingCollector mappingCollector = new MappingCollector() -->Line_23 $$ BufferedInputStream bis = new BufferedInputStream(bais)[ CD ]
Line_16 $$ final XMLWriter xw = new XMLWriter(w, new OutputFormat(" ", true))-->Line_17 $$ xw.write(document)[ FD ]
Line_10 $$ final MappingCollector mappingCollector = new MappingCollector() -->Line_24 $$ final Binding jaxbBinding = mappingBinder.bind(bis, origin)[ CD ]
Line_10 $$ final MappingCollector mappingCollector = new MappingCollector() -->Line_29 $$ enversService.initialize(metadata, mappingCollector)[ FD ]
Line_8 $$ final ArrayList<MappingDocument> additionalMappingDocuments = new ArrayList<MappingDocument>()-->Line_26 $$ additionalMappingDocuments.add(new MappingDocument(jaxbRoot, origin, buildingContext))[ FD ]
Line_2 $$ public Collection<MappingDocument> produceAdditionalMappings(final MetadataImplementor metadata, IndexView jandexIndex, final MappingBinder mappingBinder, final MetadataBuildingContext buildingContext) -->Line_3 $$ final ServiceRegistry serviceRegistry = metadata.getMetadataBuildingOptions().getServiceRegistry()[ FD ]
Line_2 $$ public Collection<MappingDocument> produceAdditionalMappings(final MetadataImplementor metadata, IndexView jandexIndex, final MappingBinder mappingBinder, final MetadataBuildingContext buildingContext) -->Line_9 $$ final Origin origin = new Origin(SourceType.OTHER, "envers")[ CD ]
Line_3 $$ final ServiceRegistry serviceRegistry = metadata.getMetadataBuildingOptions().getServiceRegistry()-->Line_4 $$ final EnversService enversService = serviceRegistry.getService(EnversService.class)[ FD ]
Line_4 $$ final EnversService enversService = serviceRegistry.getService(EnversService.class)-->Line_29 $$ enversService.initialize(metadata, mappingCollector)[ FD ]
Line_2 $$ public Collection<MappingDocument> produceAdditionalMappings(final MetadataImplementor metadata, IndexView jandexIndex, final MappingBinder mappingBinder, final MetadataBuildingContext buildingContext) -->Line_29 $$ enversService.initialize(metadata, mappingCollector)[ CD ]
Line_10 $$ final MappingCollector mappingCollector = new MappingCollector() -->Line_17 $$ xw.write(document)[ FD ]
Line_2 $$ public Collection<MappingDocument> produceAdditionalMappings(final MetadataImplementor metadata, IndexView jandexIndex, final MappingBinder mappingBinder, final MetadataBuildingContext buildingContext) -->Line_24 $$ final Binding jaxbBinding = mappingBinder.bind(bis, origin)[ FD ]
