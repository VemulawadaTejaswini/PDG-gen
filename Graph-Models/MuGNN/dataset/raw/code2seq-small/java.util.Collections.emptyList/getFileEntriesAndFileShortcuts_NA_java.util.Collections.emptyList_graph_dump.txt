Line_2 $$ public List<Object> getFileEntriesAndFileShortcuts(long groupId, long folderId, int status, int start, int end) throws PortalException -->Line_3 $$ if (!DLFolderPermission.contains(getPermissionChecker(), groupId, folderId, ActionKeys.VIEW)) [ CD ]
Line_3 $$ if (!DLFolderPermission.contains(getPermissionChecker(), groupId, folderId, ActionKeys.VIEW)) -->Line_4 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public List<Object> getFileEntriesAndFileShortcuts(long groupId, long folderId, int status, int start, int end) throws PortalException -->Line_7 $$ return dlFolderFinder.filterFindFE_FS_ByG_F(groupId, folderId, queryDefinition)[ CD ]
Line_2 $$ public List<Object> getFileEntriesAndFileShortcuts(long groupId, long folderId, int status, int start, int end) throws PortalException -->Line_3 $$ if (!DLFolderPermission.contains(getPermissionChecker(), groupId, folderId, ActionKeys.VIEW)) [ FD ]
Line_2 $$ public List<Object> getFileEntriesAndFileShortcuts(long groupId, long folderId, int status, int start, int end) throws PortalException -->Line_6 $$ QueryDefinition<?> queryDefinition = new QueryDefinition(status, start, end, null)[ CD ]
Line_2 $$ public List<Object> getFileEntriesAndFileShortcuts(long groupId, long folderId, int status, int start, int end) throws PortalException -->Line_7 $$ return dlFolderFinder.filterFindFE_FS_ByG_F(groupId, folderId, queryDefinition)[ FD ]
Line_6 $$ QueryDefinition<?> queryDefinition = new QueryDefinition(status, start, end, null)-->Line_7 $$ return dlFolderFinder.filterFindFE_FS_ByG_F(groupId, folderId, queryDefinition)[ FD ]
