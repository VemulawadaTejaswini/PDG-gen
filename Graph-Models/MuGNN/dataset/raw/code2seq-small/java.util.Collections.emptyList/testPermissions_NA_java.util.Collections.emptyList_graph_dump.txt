Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()-->Line_47 $$ permissions.set(0, new JndiPermission("/" + name, Action.LOOKUP))[ FD ]
Line_4 $$ final String name = "a/b"-->Line_36 $$ testActionWithPermission(Action.LOOKUP, permissions, namingContext, name)[ FD ]
Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()-->Line_48 $$ testActionWithPermission(Action.LOOKUP, permissions, namingContext, name)[ FD ]
Line_2 $$ public void testPermissions() throws Exception -->Line_22 $$ permissions.set(0, new JndiPermission("<<ALL BINDINGS>>", Action.LOOKUP))[ CD ]
Line_3 $$ final NamingContext namingContext = new NamingContext(store, null)-->Line_19 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ FD ]
Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()-->Line_42 $$ testActionWithPermission(Action.LOOKUP, permissions, namingContext, name)[ FD ]
Line_3 $$ final NamingContext namingContext = new NamingContext(store, null)-->Line_42 $$ testActionWithPermission(Action.LOOKUP, permissions, namingContext, name)[ FD ]
Line_3 $$ final NamingContext namingContext = new NamingContext(store, null)-->Line_54 $$ testActionWithPermission(Action.LOOKUP, permissions, namingContext, name)[ FD ]
Line_4 $$ final String name = "a/b"-->Line_48 $$ testActionWithPermission(Action.LOOKUP, permissions, namingContext, name)[ FD ]
Line_4 $$ final String name = "a/b"-->Line_23 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ FD ]
Line_4 $$ final String name = "a/b"-->Line_42 $$ testActionWithPermission(Action.LOOKUP, permissions, namingContext, name)[ FD ]
Line_5 $$ final Object value = new Object()-->Line_15 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ FD ]
Line_2 $$ public void testPermissions() throws Exception -->Line_15 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ CD ]
Line_3 $$ final NamingContext namingContext = new NamingContext(store, null)-->Line_25 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, store.getBaseName() + "/" + name))[ FD ]
Line_3 $$ final NamingContext namingContext = new NamingContext(store, null)-->Line_15 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ FD ]
Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()-->Line_14 $$ permissions.set(0, new JndiPermission(store.getBaseName() + "/" + name, Action.LOOKUP))[ FD ]
Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()-->Line_23 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ FD ]
Line_2 $$ public void testPermissions() throws Exception -->Line_4 $$ final String name = "a/b"[ CD ]
Line_5 $$ final Object value = new Object()-->Line_25 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, store.getBaseName() + "/" + name))[ FD ]
Line_2 $$ public void testPermissions() throws Exception -->Line_18 $$ permissions.set(0, new JndiPermission(store.getBaseName() + "/a/*", Action.LOOKUP))[ CD ]
Line_2 $$ public void testPermissions() throws Exception -->Line_23 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ CD ]
Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()-->Line_54 $$ testActionWithPermission(Action.LOOKUP, permissions, namingContext, name)[ FD ]
Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()-->Line_53 $$ permissions.set(0, new JndiPermission("/-", Action.LOOKUP))[ FD ]
Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()-->Line_36 $$ testActionWithPermission(Action.LOOKUP, permissions, namingContext, name)[ FD ]
Line_2 $$ public void testPermissions() throws Exception -->Line_24 $$ permissions.set(0, new JndiPermission(store.getBaseName() + "/" + name, Action.LOOKUP))[ CD ]
Line_2 $$ public void testPermissions() throws Exception -->Line_7 $$ WritableServiceBasedNamingStore.pushOwner(OWNER_FOO)[ CD ]
Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()-->Line_9 $$ permissions.add(new JndiPermission(store.getBaseName() + "/" + name, "bind,list,listBindings"))[ FD ]
Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()-->Line_21 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ FD ]
Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()-->Line_25 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, store.getBaseName() + "/" + name))[ FD ]
Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()-->Line_35 $$ permissions.set(0, new JndiPermission(store.getBaseName() + "/*", Action.LOOKUP))[ FD ]
Line_3 $$ final NamingContext namingContext = new NamingContext(store, null)-->Line_21 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ FD ]
Line_2 $$ public void testPermissions() throws Exception -->Line_17 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ CD ]
Line_2 $$ public void testPermissions() throws Exception -->Line_28 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, aNamingContext, "b"))[ CD ]
Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()-->Line_28 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, aNamingContext, "b"))[ FD ]
Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()-->Line_22 $$ permissions.set(0, new JndiPermission("<<ALL BINDINGS>>", Action.LOOKUP))[ FD ]
Line_4 $$ final String name = "a/b"-->Line_30 $$ testActionWithPermission(Action.LOOKUP, Collections.<JndiPermission>emptyList(), namingContext, name)[ FD ]
Line_2 $$ public void testPermissions() throws Exception -->Line_16 $$ permissions.set(0, new JndiPermission(store.getBaseName() + "/-", Action.LOOKUP))[ CD ]
Line_2 $$ public void testPermissions() throws Exception -->Line_27 $$ permissions.set(0, new JndiPermission(store.getBaseName() + "/" + name, Action.LOOKUP))[ CD ]
Line_2 $$ public void testPermissions() throws Exception -->Line_3 $$ final NamingContext namingContext = new NamingContext(store, null)[ CD ]
Line_2 $$ public void testPermissions() throws Exception -->Line_19 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ CD ]
Line_3 $$ final NamingContext namingContext = new NamingContext(store, null)-->Line_17 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ FD ]
Line_2 $$ public void testPermissions() throws Exception -->Line_21 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ CD ]
Line_5 $$ final Object value = new Object()-->Line_23 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ FD ]
Line_4 $$ final String name = "a/b"-->Line_21 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ FD ]
Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()-->Line_24 $$ permissions.set(0, new JndiPermission(store.getBaseName() + "/" + name, Action.LOOKUP))[ FD ]
Line_3 $$ final NamingContext namingContext = new NamingContext(store, null)-->Line_36 $$ testActionWithPermission(Action.LOOKUP, permissions, namingContext, name)[ FD ]
Line_3 $$ final NamingContext namingContext = new NamingContext(store, null)-->Line_48 $$ testActionWithPermission(Action.LOOKUP, permissions, namingContext, name)[ FD ]
Line_4 $$ final String name = "a/b"-->Line_15 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ FD ]
Line_2 $$ public void testPermissions() throws Exception -->Line_5 $$ final Object value = new Object()[ CD ]
Line_3 $$ final NamingContext namingContext = new NamingContext(store, null)-->Line_26 $$ NamingContext aNamingContext = (NamingContext) namingContext.lookup("a")[ FD ]
Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()-->Line_17 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ FD ]
Line_4 $$ final String name = "a/b"-->Line_19 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ FD ]
Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()-->Line_18 $$ permissions.set(0, new JndiPermission(store.getBaseName() + "/a/*", Action.LOOKUP))[ FD ]
Line_2 $$ public void testPermissions() throws Exception -->Line_14 $$ permissions.set(0, new JndiPermission(store.getBaseName() + "/" + name, Action.LOOKUP))[ CD ]
Line_26 $$ NamingContext aNamingContext = (NamingContext) namingContext.lookup("a")-->Line_28 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, aNamingContext, "b"))[ FD ]
Line_3 $$ final NamingContext namingContext = new NamingContext(store, null)-->Line_23 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ FD ]
Line_2 $$ public void testPermissions() throws Exception -->Line_26 $$ NamingContext aNamingContext = (NamingContext) namingContext.lookup("a")[ CD ]
Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()-->Line_16 $$ permissions.set(0, new JndiPermission(store.getBaseName() + "/-", Action.LOOKUP))[ FD ]
Line_2 $$ public void testPermissions() throws Exception -->Line_20 $$ permissions.set(0, new JndiPermission(store.getBaseName() + "/a/-", Action.LOOKUP))[ CD ]
Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()-->Line_20 $$ permissions.set(0, new JndiPermission(store.getBaseName() + "/a/-", Action.LOOKUP))[ FD ]
Line_5 $$ final Object value = new Object()-->Line_10 $$ store.bind(new CompositeName(name), value)[ FD ]
Line_2 $$ public void testPermissions() throws Exception -->Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()[ CD ]
Line_4 $$ final String name = "a/b"-->Line_17 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ FD ]
Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()-->Line_27 $$ permissions.set(0, new JndiPermission(store.getBaseName() + "/" + name, Action.LOOKUP))[ FD ]
Line_4 $$ final String name = "a/b"-->Line_54 $$ testActionWithPermission(Action.LOOKUP, permissions, namingContext, name)[ FD ]
Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()-->Line_19 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ FD ]
Line_5 $$ final Object value = new Object()-->Line_17 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ FD ]
Line_2 $$ public void testPermissions() throws Exception -->Line_25 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, store.getBaseName() + "/" + name))[ CD ]
Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()-->Line_41 $$ permissions.set(0, new JndiPermission(name, Action.LOOKUP))[ FD ]
Line_5 $$ final Object value = new Object()-->Line_19 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ FD ]
Line_5 $$ final Object value = new Object()-->Line_28 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, aNamingContext, "b"))[ FD ]
Line_3 $$ final NamingContext namingContext = new NamingContext(store, null)-->Line_30 $$ testActionWithPermission(Action.LOOKUP, Collections.<JndiPermission>emptyList(), namingContext, name)[ FD ]
Line_6 $$ ArrayList<JndiPermission> permissions = new ArrayList<JndiPermission>()-->Line_15 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ FD ]
Line_5 $$ final Object value = new Object()-->Line_21 $$ assertEquals(value, testActionWithPermission(Action.LOOKUP, permissions, namingContext, name))[ FD ]
