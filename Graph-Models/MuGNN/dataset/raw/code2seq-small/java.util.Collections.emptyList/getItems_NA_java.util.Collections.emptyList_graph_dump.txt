Line_21 $$ return ContainerUtil.mapNotNull(resourceBundle.getPropertiesFiles(), new NullableFunction<PropertiesFile, GotoRelatedItem>() -->Line_23 $$ final IProperty foundProperty = f.findPropertyByKey(propertyKey)[ FD ]
Line_16 $$ final IProperty property = properties[0]-->Line_18 $$ final PropertiesFile file = PropertiesImplUtil.getPropertiesFile(property.getPsiElement().getContainingFile())[ FD ]
Line_13 $$ if (properties == null || properties.length != 1 || !(properties[0] instanceof Property)) -->Line_14 $$ return Collections.emptyList()[ CD ]
Line_21 $$ return ContainerUtil.mapNotNull(resourceBundle.getPropertiesFiles(), new NullableFunction<PropertiesFile, GotoRelatedItem>() -->Line_23 $$ final IProperty foundProperty = f.findPropertyByKey(propertyKey)[ CD ]
Line_8 $$ final Collection<ResourceBundleEditorViewElement> elements = resourceBundleEditor.getSelectedElements()-->Line_12 $$ final IProperty[] properties = ContainerUtil.getFirstItem(elements).getProperties()[ FD ]
Line_2 $$ public List<? extends GotoRelatedItem> getItems(@NotNull DataContext context) -->Line_3 $$ final FileEditor editor = PlatformDataKeys.FILE_EDITOR.getData(context)[ FD ]
Line_9 $$ if (elements.size() != 1) -->Line_10 $$ return Collections.emptyList()[ CD ]
Line_4 $$ if (!(editor instanceof ResourceBundleEditor)) -->Line_5 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public List<? extends GotoRelatedItem> getItems(@NotNull DataContext context) -->Line_4 $$ if (!(editor instanceof ResourceBundleEditor)) [ CD ]
Line_2 $$ public List<? extends GotoRelatedItem> getItems(@NotNull DataContext context) -->Line_20 $$ final ResourceBundle resourceBundle = file.getResourceBundle()[ CD ]
Line_2 $$ public List<? extends GotoRelatedItem> getItems(@NotNull DataContext context) -->Line_8 $$ final Collection<ResourceBundleEditorViewElement> elements = resourceBundleEditor.getSelectedElements()[ CD ]
Line_2 $$ public List<? extends GotoRelatedItem> getItems(@NotNull DataContext context) -->Line_18 $$ final PropertiesFile file = PropertiesImplUtil.getPropertiesFile(property.getPsiElement().getContainingFile())[ CD ]
Line_2 $$ public List<? extends GotoRelatedItem> getItems(@NotNull DataContext context) -->Line_3 $$ final FileEditor editor = PlatformDataKeys.FILE_EDITOR.getData(context)[ CD ]
Line_8 $$ final Collection<ResourceBundleEditorViewElement> elements = resourceBundleEditor.getSelectedElements()-->Line_9 $$ if (elements.size() != 1) [ FD ]
Line_2 $$ public List<? extends GotoRelatedItem> getItems(@NotNull DataContext context) -->Line_16 $$ final IProperty property = properties[0][ CD ]
Line_16 $$ final IProperty property = properties[0]-->Line_17 $$ final String propertyKey = property.getKey()[ FD ]
Line_20 $$ final ResourceBundle resourceBundle = file.getResourceBundle()-->Line_21 $$ return ContainerUtil.mapNotNull(resourceBundle.getPropertiesFiles(), new NullableFunction<PropertiesFile, GotoRelatedItem>() [ FD ]
Line_2 $$ public List<? extends GotoRelatedItem> getItems(@NotNull DataContext context) -->Line_21 $$ return ContainerUtil.mapNotNull(resourceBundle.getPropertiesFiles(), new NullableFunction<PropertiesFile, GotoRelatedItem>() [ CD ]
Line_2 $$ public List<? extends GotoRelatedItem> getItems(@NotNull DataContext context) -->Line_7 $$ final ResourceBundleEditor resourceBundleEditor = (ResourceBundleEditor) editor[ CD ]
Line_18 $$ final PropertiesFile file = PropertiesImplUtil.getPropertiesFile(property.getPsiElement().getContainingFile())-->Line_20 $$ final ResourceBundle resourceBundle = file.getResourceBundle()[ FD ]
Line_17 $$ final String propertyKey = property.getKey()-->Line_23 $$ final IProperty foundProperty = f.findPropertyByKey(propertyKey)[ FD ]
Line_23 $$ final IProperty foundProperty = f.findPropertyByKey(propertyKey)-->Line_24 $$ return foundProperty == null ? null : new GotoRelatedItem(foundProperty.getPsiElement(), "Property Declarations")[ FD ]
Line_7 $$ final ResourceBundleEditor resourceBundleEditor = (ResourceBundleEditor) editor-->Line_8 $$ final Collection<ResourceBundleEditorViewElement> elements = resourceBundleEditor.getSelectedElements()[ FD ]
Line_2 $$ public List<? extends GotoRelatedItem> getItems(@NotNull DataContext context) -->Line_9 $$ if (elements.size() != 1) [ CD ]
Line_2 $$ public List<? extends GotoRelatedItem> getItems(@NotNull DataContext context) -->Line_17 $$ final String propertyKey = property.getKey()[ CD ]
Line_2 $$ public List<? extends GotoRelatedItem> getItems(@NotNull DataContext context) -->Line_13 $$ if (properties == null || properties.length != 1 || !(properties[0] instanceof Property)) [ CD ]
Line_2 $$ public List<? extends GotoRelatedItem> getItems(@NotNull DataContext context) -->Line_12 $$ final IProperty[] properties = ContainerUtil.getFirstItem(elements).getProperties()[ CD ]
Line_21 $$ return ContainerUtil.mapNotNull(resourceBundle.getPropertiesFiles(), new NullableFunction<PropertiesFile, GotoRelatedItem>() -->Line_24 $$ return foundProperty == null ? null : new GotoRelatedItem(foundProperty.getPsiElement(), "Property Declarations")[ CD ]
