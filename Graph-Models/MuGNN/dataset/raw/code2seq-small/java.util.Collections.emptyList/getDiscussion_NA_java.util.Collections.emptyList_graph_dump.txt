Line_10 $$ List<Long> classPKs = new ArrayList()-->Line_16 $$ ratingsEntries = _ratingsEntryLocalService.getEntries(userId, CommentConstants.getDiscussionClassName(), classPKs)[ FD ]
Line_4 $$ MBMessageDisplay messageDisplay = _mbMessageLocalService.getDiscussionMessageDisplay(userId, groupId, className, classPK, WorkflowConstants.STATUS_ANY, new MessageThreadComparator())-->Line_20 $$ return new MBDiscussionImpl(rootDiscussionComment, messageDisplay.isDiscussionMaxComments())[ FD ]
Line_5 $$ MBTreeWalker treeWalker = messageDisplay.getTreeWalker()-->Line_19 $$ DiscussionComment rootDiscussionComment = new MBDiscussionCommentImpl(treeWalker.getRoot(), treeWalker, ratingsEntries, ratingsStats)[ FD ]
Line_6 $$ List<MBMessage> messages = treeWalker.getMessages()-->Line_9 $$ if (messages.size() > 1) [ FD ]
Line_11 $$ for (MBMessage curMessage : messages) -->Line_13 $$ classPKs.add(curMessage.getMessageId())[ FD ]
Line_9 $$ if (messages.size() > 1) -->Line_16 $$ ratingsEntries = _ratingsEntryLocalService.getEntries(userId, CommentConstants.getDiscussionClassName(), classPKs)[ CD ]
Line_10 $$ List<Long> classPKs = new ArrayList()-->Line_13 $$ classPKs.add(curMessage.getMessageId())[ FD ]
Line_11 $$ for (MBMessage curMessage : messages) -->Line_12 $$ if (!curMessage.isRoot()) [ FD ]
Line_5 $$ MBTreeWalker treeWalker = messageDisplay.getTreeWalker()-->Line_6 $$ List<MBMessage> messages = treeWalker.getMessages()[ FD ]
Line_12 $$ if (!curMessage.isRoot()) -->Line_13 $$ classPKs.add(curMessage.getMessageId())[ CD ]
Line_9 $$ if (messages.size() > 1) -->Line_17 $$ ratingsStats = _ratingsStatsLocalService.getStats(CommentConstants.getDiscussionClassName(), classPKs)[ CD ]
Line_4 $$ MBMessageDisplay messageDisplay = _mbMessageLocalService.getDiscussionMessageDisplay(userId, groupId, className, classPK, WorkflowConstants.STATUS_ANY, new MessageThreadComparator())-->Line_5 $$ MBTreeWalker treeWalker = messageDisplay.getTreeWalker()[ FD ]
Line_7 $$ List<RatingsEntry> ratingsEntries = Collections.emptyList()-->Line_16 $$ ratingsEntries = _ratingsEntryLocalService.getEntries(userId, CommentConstants.getDiscussionClassName(), classPKs)[ FD ]
Line_8 $$ List<RatingsStats> ratingsStats = Collections.emptyList()-->Line_17 $$ ratingsStats = _ratingsStatsLocalService.getStats(CommentConstants.getDiscussionClassName(), classPKs)[ FD ]
Line_9 $$ if (messages.size() > 1) -->Line_10 $$ List<Long> classPKs = new ArrayList()[ CD ]
Line_10 $$ List<Long> classPKs = new ArrayList()-->Line_17 $$ ratingsStats = _ratingsStatsLocalService.getStats(CommentConstants.getDiscussionClassName(), classPKs)[ FD ]
