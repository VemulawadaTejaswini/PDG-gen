Line_7 $$ ZenCodingGenerator generator = ZenCodingTemplate.findApplicableDefaultGenerator(context, false)-->Line_12 $$ ZenCodingTemplate.expand(templatePrefix, callback, generator, Collections.<ZenCodingFilter>emptyList(), expandPrimitiveAbbreviations, 0)[ FD ]
Line_5 $$ CollectCustomTemplateCallback callback = new CollectCustomTemplateCallback(editor, file)-->Line_9 $$ final String templatePrefix = new ZenCodingTemplate().computeTemplateKeyWithoutContextChecking(callback)[ FD ]
Line_5 $$ CollectCustomTemplateCallback callback = new CollectCustomTemplateCallback(editor, file)-->Line_12 $$ ZenCodingTemplate.expand(templatePrefix, callback, generator, Collections.<ZenCodingFilter>emptyList(), expandPrimitiveAbbreviations, 0)[ FD ]
Line_13 $$ TemplateImpl template = callback.getGeneratedTemplate()-->Line_14 $$ String templateText = template != null ? template.getTemplateText() : null[ FD ]
Line_2 $$ public static String calculateTemplateText(@NotNull Editor editor, @NotNull PsiFile file, boolean expandPrimitiveAbbreviations) -->Line_4 $$ PsiDocumentManager.getInstance(file.getProject()).commitDocument(editor.getDocument())[ FD ]
Line_9 $$ final String templatePrefix = new ZenCodingTemplate().computeTemplateKeyWithoutContextChecking(callback)-->Line_10 $$ if (templatePrefix != null) [ FD ]
Line_3 $$ if (file instanceof XmlFile) -->Line_7 $$ ZenCodingGenerator generator = ZenCodingTemplate.findApplicableDefaultGenerator(context, false)[ CD ]
Line_3 $$ if (file instanceof XmlFile) -->Line_6 $$ PsiElement context = callback.getContext()[ CD ]
Line_13 $$ TemplateImpl template = callback.getGeneratedTemplate()-->Line_16 $$ return template.isToReformat() ? reformatTemplateText(file, templateText) : templateText[ FD ]
Line_9 $$ final String templatePrefix = new ZenCodingTemplate().computeTemplateKeyWithoutContextChecking(callback)-->Line_12 $$ ZenCodingTemplate.expand(templatePrefix, callback, generator, Collections.<ZenCodingFilter>emptyList(), expandPrimitiveAbbreviations, 0)[ FD ]
Line_6 $$ PsiElement context = callback.getContext()-->Line_7 $$ ZenCodingGenerator generator = ZenCodingTemplate.findApplicableDefaultGenerator(context, false)[ FD ]
Line_2 $$ public static String calculateTemplateText(@NotNull Editor editor, @NotNull PsiFile file, boolean expandPrimitiveAbbreviations) -->Line_12 $$ ZenCodingTemplate.expand(templatePrefix, callback, generator, Collections.<ZenCodingFilter>emptyList(), expandPrimitiveAbbreviations, 0)[ FD ]
Line_2 $$ public static String calculateTemplateText(@NotNull Editor editor, @NotNull PsiFile file, boolean expandPrimitiveAbbreviations) -->Line_24 $$ return null[ CD ]
Line_15 $$ if (!StringUtil.isEmpty(templateText)) -->Line_16 $$ return template.isToReformat() ? reformatTemplateText(file, templateText) : templateText[ CD ]
Line_2 $$ public static String calculateTemplateText(@NotNull Editor editor, @NotNull PsiFile file, boolean expandPrimitiveAbbreviations) -->Line_3 $$ if (file instanceof XmlFile) [ CD ]
Line_2 $$ public static String calculateTemplateText(@NotNull Editor editor, @NotNull PsiFile file, boolean expandPrimitiveAbbreviations) -->Line_3 $$ if (file instanceof XmlFile) [ FD ]
Line_8 $$ if (generator != null && generator instanceof XmlZenCodingGenerator) -->Line_9 $$ final String templatePrefix = new ZenCodingTemplate().computeTemplateKeyWithoutContextChecking(callback)[ CD ]
Line_3 $$ if (file instanceof XmlFile) -->Line_4 $$ PsiDocumentManager.getInstance(file.getProject()).commitDocument(editor.getDocument())[ CD ]
Line_14 $$ String templateText = template != null ? template.getTemplateText() : null-->Line_15 $$ if (!StringUtil.isEmpty(templateText)) [ FD ]
Line_3 $$ if (file instanceof XmlFile) -->Line_8 $$ if (generator != null && generator instanceof XmlZenCodingGenerator) [ CD ]
Line_5 $$ CollectCustomTemplateCallback callback = new CollectCustomTemplateCallback(editor, file)-->Line_13 $$ TemplateImpl template = callback.getGeneratedTemplate()[ FD ]
Line_5 $$ CollectCustomTemplateCallback callback = new CollectCustomTemplateCallback(editor, file)-->Line_6 $$ PsiElement context = callback.getContext()[ FD ]
Line_3 $$ if (file instanceof XmlFile) -->Line_5 $$ CollectCustomTemplateCallback callback = new CollectCustomTemplateCallback(editor, file)[ CD ]
Line_8 $$ if (generator != null && generator instanceof XmlZenCodingGenerator) -->Line_10 $$ if (templatePrefix != null) [ CD ]
Line_14 $$ String templateText = template != null ? template.getTemplateText() : null-->Line_16 $$ return template.isToReformat() ? reformatTemplateText(file, templateText) : templateText[ FD ]
Line_2 $$ public static String calculateTemplateText(@NotNull Editor editor, @NotNull PsiFile file, boolean expandPrimitiveAbbreviations) -->Line_16 $$ return template.isToReformat() ? reformatTemplateText(file, templateText) : templateText[ FD ]
