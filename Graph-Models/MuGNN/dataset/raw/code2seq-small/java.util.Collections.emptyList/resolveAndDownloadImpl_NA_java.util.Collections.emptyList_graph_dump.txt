Line_2 $$ public static List<OrderRoot> resolveAndDownloadImpl(final Project project, final String coord, boolean attachJavaDoc, boolean attachSources, @Nullable final String copyTo, List<MavenRepositoryInfo> repositories, ProgressIndicator indicator) -->Line_14 $$ final List<OrderRoot> roots = createRoots(artifacts, copyTo)[ FD ]
Line_2 $$ public static List<OrderRoot> resolveAndDownloadImpl(final Project project, final String coord, boolean attachJavaDoc, boolean attachSources, @Nullable final String copyTo, List<MavenRepositoryInfo> repositories, ProgressIndicator indicator) -->Line_3 $$ final SmartList<MavenExtraArtifactType> extraTypes = new SmartList<MavenExtraArtifactType>()[ CD ]
Line_8 $$ final Ref<List<OrderRoot>> result = Ref.create(null)-->Line_23 $$ List<OrderRoot> roots = result.get()[ FD ]
Line_2 $$ public static List<OrderRoot> resolveAndDownloadImpl(final Project project, final String coord, boolean attachJavaDoc, boolean attachSources, @Nullable final String copyTo, List<MavenRepositoryInfo> repositories, ProgressIndicator indicator) -->Line_9 $$ doResolveInner(project, getMavenId(coord), extraTypes, repositories, new Processor<List<MavenArtifact>>() [ CD ]
Line_12 $$ AccessToken accessToken = WriteAction.start()-->Line_17 $$ accessToken.finish()[ FD ]
Line_2 $$ public static List<OrderRoot> resolveAndDownloadImpl(final Project project, final String coord, boolean attachJavaDoc, boolean attachSources, @Nullable final String copyTo, List<MavenRepositoryInfo> repositories, ProgressIndicator indicator) -->Line_6 $$ if (attachJavaDoc)[ CD ]
Line_9 $$ doResolveInner(project, getMavenId(coord), extraTypes, repositories, new Processor<List<MavenArtifact>>() -->Line_14 $$ final List<OrderRoot> roots = createRoots(artifacts, copyTo)[ FD ]
Line_2 $$ public static List<OrderRoot> resolveAndDownloadImpl(final Project project, final String coord, boolean attachJavaDoc, boolean attachSources, @Nullable final String copyTo, List<MavenRepositoryInfo> repositories, ProgressIndicator indicator) -->Line_24 $$ return roots == null ? Collections.<OrderRoot>emptyList() : roots[ CD ]
Line_11 $$ if (!artifacts.isEmpty()) -->Line_12 $$ AccessToken accessToken = WriteAction.start()[ CD ]
Line_9 $$ doResolveInner(project, getMavenId(coord), extraTypes, repositories, new Processor<List<MavenArtifact>>() -->Line_11 $$ if (!artifacts.isEmpty()) [ FD ]
Line_9 $$ doResolveInner(project, getMavenId(coord), extraTypes, repositories, new Processor<List<MavenArtifact>>() -->Line_20 $$ return true[ CD ]
Line_2 $$ public static List<OrderRoot> resolveAndDownloadImpl(final Project project, final String coord, boolean attachJavaDoc, boolean attachSources, @Nullable final String copyTo, List<MavenRepositoryInfo> repositories, ProgressIndicator indicator) -->Line_23 $$ List<OrderRoot> roots = result.get()[ CD ]
Line_3 $$ final SmartList<MavenExtraArtifactType> extraTypes = new SmartList<MavenExtraArtifactType>()-->Line_7 $$ extraTypes.add(MavenExtraArtifactType.DOCS)[ FD ]
Line_3 $$ final SmartList<MavenExtraArtifactType> extraTypes = new SmartList<MavenExtraArtifactType>()-->Line_9 $$ doResolveInner(project, getMavenId(coord), extraTypes, repositories, new Processor<List<MavenArtifact>>() [ FD ]
Line_4 $$ if (attachSources)-->Line_5 $$ extraTypes.add(MavenExtraArtifactType.SOURCES)[ CD ]
Line_2 $$ public static List<OrderRoot> resolveAndDownloadImpl(final Project project, final String coord, boolean attachJavaDoc, boolean attachSources, @Nullable final String copyTo, List<MavenRepositoryInfo> repositories, ProgressIndicator indicator) -->Line_4 $$ if (attachSources)[ CD ]
Line_14 $$ final List<OrderRoot> roots = createRoots(artifacts, copyTo)-->Line_15 $$ result.set(roots)[ FD ]
Line_2 $$ public static List<OrderRoot> resolveAndDownloadImpl(final Project project, final String coord, boolean attachJavaDoc, boolean attachSources, @Nullable final String copyTo, List<MavenRepositoryInfo> repositories, ProgressIndicator indicator) -->Line_9 $$ doResolveInner(project, getMavenId(coord), extraTypes, repositories, new Processor<List<MavenArtifact>>() [ FD ]
Line_2 $$ public static List<OrderRoot> resolveAndDownloadImpl(final Project project, final String coord, boolean attachJavaDoc, boolean attachSources, @Nullable final String copyTo, List<MavenRepositoryInfo> repositories, ProgressIndicator indicator) -->Line_8 $$ final Ref<List<OrderRoot>> result = Ref.create(null)[ CD ]
Line_9 $$ doResolveInner(project, getMavenId(coord), extraTypes, repositories, new Processor<List<MavenArtifact>>() -->Line_11 $$ if (!artifacts.isEmpty()) [ CD ]
Line_8 $$ final Ref<List<OrderRoot>> result = Ref.create(null)-->Line_15 $$ result.set(roots)[ FD ]
Line_6 $$ if (attachJavaDoc)-->Line_7 $$ extraTypes.add(MavenExtraArtifactType.DOCS)[ CD ]
Line_3 $$ final SmartList<MavenExtraArtifactType> extraTypes = new SmartList<MavenExtraArtifactType>()-->Line_5 $$ extraTypes.add(MavenExtraArtifactType.SOURCES)[ FD ]
