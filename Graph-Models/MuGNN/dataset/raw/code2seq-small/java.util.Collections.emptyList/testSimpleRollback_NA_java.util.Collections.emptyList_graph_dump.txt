Line_2 $$ public void testSimpleRollback() throws Exception -->Line_3 $$ final VirtualFile a = createFileInCommand("a.txt", "test")[ CD ]
Line_3 $$ final VirtualFile a = createFileInCommand("a.txt", "test")-->Line_8 $$ final Change change = myChangeListManager.getChange(a)[ FD ]
Line_2 $$ public void testSimpleRollback() throws Exception -->Line_9 $$ Assert.assertNotNull(change)[ CD ]
Line_2 $$ public void testSimpleRollback() throws Exception -->Line_8 $$ final Change change = myChangeListManager.getChange(a)[ CD ]
Line_2 $$ public void testSimpleRollback() throws Exception -->Line_5 $$ VcsTestUtil.editFileInCommand(myProject, a, "tset")[ CD ]
Line_8 $$ final Change change = myChangeListManager.getChange(a)-->Line_9 $$ Assert.assertNotNull(change)[ FD ]
Line_2 $$ public void testSimpleRollback() throws Exception -->Line_7 $$ myChangeListManager.ensureUpToDate(false)[ CD ]
Line_8 $$ final Change change = myChangeListManager.getChange(a)-->Line_10 $$ rollbackIMpl(Collections.singletonList(change), Collections.<Change>emptyList())[ FD ]
Line_3 $$ final VirtualFile a = createFileInCommand("a.txt", "test")-->Line_5 $$ VcsTestUtil.editFileInCommand(myProject, a, "tset")[ FD ]
Line_2 $$ public void testSimpleRollback() throws Exception -->Line_6 $$ myDirtyScopeManager.markEverythingDirty()[ CD ]
Line_2 $$ public void testSimpleRollback() throws Exception -->Line_4 $$ checkin()[ CD ]
Line_2 $$ public void testSimpleRollback() throws Exception -->Line_10 $$ rollbackIMpl(Collections.singletonList(change), Collections.<Change>emptyList())[ CD ]
