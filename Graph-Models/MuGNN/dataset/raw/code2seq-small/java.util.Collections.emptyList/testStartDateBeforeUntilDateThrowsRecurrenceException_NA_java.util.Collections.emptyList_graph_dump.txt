Line_7 $$ long startTime = System.currentTimeMillis()-->Line_8 $$ java.util.Calendar untilJCalendar = CalendarFactoryUtil.getCalendar(startTime)[ FD ]
Line_4 $$ ServiceContext serviceContext = createServiceContext()-->Line_14 $$ CalendarBookingLocalServiceUtil.addCalendarBooking(_user.getUserId(), calendar.getCalendarId(), new long[0], CalendarBookingConstants.PARENT_CALENDAR_BOOKING_ID_DEFAULT, RandomTestUtil.randomLocaleStringMap(), RandomTestUtil.randomLocaleStringMap(), RandomTestUtil.randomString(), startTime, startTime + (Time.HOUR * 10), false, RecurrenceSerializer.serialize(recurrence), 0, null, 0, null, serviceContext)[ FD ]
Line_10 $$ Recurrence recurrence = new Recurrence()-->Line_14 $$ CalendarBookingLocalServiceUtil.addCalendarBooking(_user.getUserId(), calendar.getCalendarId(), new long[0], CalendarBookingConstants.PARENT_CALENDAR_BOOKING_ID_DEFAULT, RandomTestUtil.randomLocaleStringMap(), RandomTestUtil.randomLocaleStringMap(), RandomTestUtil.randomString(), startTime, startTime + (Time.HOUR * 10), false, RecurrenceSerializer.serialize(recurrence), 0, null, 0, null, serviceContext)[ FD ]
Line_8 $$ java.util.Calendar untilJCalendar = CalendarFactoryUtil.getCalendar(startTime)-->Line_9 $$ untilJCalendar.add(java.util.Calendar.DAY_OF_MONTH, -2)[ FD ]
Line_10 $$ Recurrence recurrence = new Recurrence()-->Line_12 $$ recurrence.setUntilJCalendar(untilJCalendar)[ FD ]
Line_4 $$ ServiceContext serviceContext = createServiceContext()-->Line_5 $$ CalendarResource calendarResource = CalendarResourceUtil.getUserCalendarResource(_user.getUserId(), serviceContext)[ FD ]
Line_7 $$ long startTime = System.currentTimeMillis()-->Line_14 $$ CalendarBookingLocalServiceUtil.addCalendarBooking(_user.getUserId(), calendar.getCalendarId(), new long[0], CalendarBookingConstants.PARENT_CALENDAR_BOOKING_ID_DEFAULT, RandomTestUtil.randomLocaleStringMap(), RandomTestUtil.randomLocaleStringMap(), RandomTestUtil.randomString(), startTime, startTime + (Time.HOUR * 10), false, RecurrenceSerializer.serialize(recurrence), 0, null, 0, null, serviceContext)[ FD ]
Line_6 $$ Calendar calendar = calendarResource.getDefaultCalendar()-->Line_14 $$ CalendarBookingLocalServiceUtil.addCalendarBooking(_user.getUserId(), calendar.getCalendarId(), new long[0], CalendarBookingConstants.PARENT_CALENDAR_BOOKING_ID_DEFAULT, RandomTestUtil.randomLocaleStringMap(), RandomTestUtil.randomLocaleStringMap(), RandomTestUtil.randomString(), startTime, startTime + (Time.HOUR * 10), false, RecurrenceSerializer.serialize(recurrence), 0, null, 0, null, serviceContext)[ FD ]
Line_10 $$ Recurrence recurrence = new Recurrence()-->Line_13 $$ recurrence.setPositionalWeekdays(Collections.<PositionalWeekday>emptyList())[ FD ]
Line_5 $$ CalendarResource calendarResource = CalendarResourceUtil.getUserCalendarResource(_user.getUserId(), serviceContext)-->Line_6 $$ Calendar calendar = calendarResource.getDefaultCalendar()[ FD ]
Line_10 $$ Recurrence recurrence = new Recurrence()-->Line_11 $$ recurrence.setFrequency(Frequency.DAILY)[ FD ]
Line_8 $$ java.util.Calendar untilJCalendar = CalendarFactoryUtil.getCalendar(startTime)-->Line_12 $$ recurrence.setUntilJCalendar(untilJCalendar)[ FD ]
