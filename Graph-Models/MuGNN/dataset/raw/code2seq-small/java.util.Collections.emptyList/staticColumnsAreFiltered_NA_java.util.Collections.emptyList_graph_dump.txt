Line_22 $$ cmd = ReadCommand.legacyReadCommandSerializer.deserialize(in, MessagingService.VERSION_21)-->Line_24 $$ UnfilteredPartitionIterator partitionIterator = cmd.executeLocally(ReadExecutionController.empty())[ FD ]
Line_24 $$ UnfilteredPartitionIterator partitionIterator = cmd.executeLocally(ReadExecutionController.empty())-->Line_25 $$ ReadResponse response = ReadResponse.createDataResponse(partitionIterator, cmd.columnFilter())[ FD ]
Line_30 $$ UnfilteredRowIterator partition = partitionIterator.next()-->Line_31 $$ LegacyLayout.LegacyUnfilteredPartition rowIter = LegacyLayout.fromUnfilteredRowIterator(partition)[ FD ]
Line_18 $$ ReadCommand cmd = new SinglePartitionReadCommand(false, MessagingService.VERSION_30, true, cfm, FBUtilities.nowInSeconds(), columnFilter, RowFilter.NONE, DataLimits.NONE, key, sliceFilter)-->Line_19 $$ DataOutputBuffer out = new DataOutputBuffer((int) ReadCommand.legacyReadCommandSerializer.serializedSize(cmd, MessagingService.VERSION_21))[ FD ]
Line_19 $$ DataOutputBuffer out = new DataOutputBuffer((int) ReadCommand.legacyReadCommandSerializer.serializedSize(cmd, MessagingService.VERSION_21))-->Line_21 $$ DataInputPlus in = new DataInputBuffer(out.buffer(), true)[ FD ]
Line_22 $$ cmd = ReadCommand.legacyReadCommandSerializer.deserialize(in, MessagingService.VERSION_21)-->Line_25 $$ ReadResponse response = ReadResponse.createDataResponse(partitionIterator, cmd.columnFilter())[ FD ]
Line_5 $$ UntypedResultSet rows-->Line_13 $$ assert rows.isEmpty()[ FD ]
Line_18 $$ ReadCommand cmd = new SinglePartitionReadCommand(false, MessagingService.VERSION_30, true, cfm, FBUtilities.nowInSeconds(), columnFilter, RowFilter.NONE, DataLimits.NONE, key, sliceFilter)-->Line_25 $$ ReadResponse response = ReadResponse.createDataResponse(partitionIterator, cmd.columnFilter())[ FD ]
Line_22 $$ cmd = ReadCommand.legacyReadCommandSerializer.deserialize(in, MessagingService.VERSION_21)-->Line_23 $$ logger.debug("ReadCommand: [ FD ]
Line_19 $$ DataOutputBuffer out = new DataOutputBuffer((int) ReadCommand.legacyReadCommandSerializer.serializedSize(cmd, MessagingService.VERSION_21))-->Line_20 $$ ReadCommand.legacyReadCommandSerializer.serialize(cmd, out, MessagingService.VERSION_21)[ FD ]
Line_5 $$ UntypedResultSet rows-->Line_9 $$ rows = QueryProcessor.executeInternal("SELECT * FROM ks.tbl WHERE k='k' AND i=0")[ FD ]
Line_24 $$ UnfilteredPartitionIterator partitionIterator = cmd.executeLocally(ReadExecutionController.empty())-->Line_29 $$ assert partitionIterator.hasNext()[ FD ]
Line_9 $$ rows = QueryProcessor.executeInternal("SELECT * FROM ks.tbl WHERE k='k' AND i=0")-->Line_13 $$ assert rows.isEmpty()[ FD ]
Line_15 $$ ByteBuffer zero = ByteBufferUtil.bytes(0)-->Line_16 $$ Slices slices = Slices.with(cfm.comparator, Slice.make(Slice.Bound.inclusiveStartOf(zero), Slice.Bound.inclusiveEndOf(zero)))[ FD ]
Line_24 $$ UnfilteredPartitionIterator partitionIterator = cmd.executeLocally(ReadExecutionController.empty())-->Line_30 $$ UnfilteredRowIterator partition = partitionIterator.next()[ FD ]
Line_10 $$ for (UntypedResultSet.Row row : rows) -->Line_11 $$ logger.debug("Current: k=[ FD ]
Line_18 $$ ReadCommand cmd = new SinglePartitionReadCommand(false, MessagingService.VERSION_30, true, cfm, FBUtilities.nowInSeconds(), columnFilter, RowFilter.NONE, DataLimits.NONE, key, sliceFilter)-->Line_22 $$ cmd = ReadCommand.legacyReadCommandSerializer.deserialize(in, MessagingService.VERSION_21)[ FD ]
Line_21 $$ DataInputPlus in = new DataInputBuffer(out.buffer(), true)-->Line_22 $$ cmd = ReadCommand.legacyReadCommandSerializer.deserialize(in, MessagingService.VERSION_21)[ FD ]
Line_18 $$ ReadCommand cmd = new SinglePartitionReadCommand(false, MessagingService.VERSION_30, true, cfm, FBUtilities.nowInSeconds(), columnFilter, RowFilter.NONE, DataLimits.NONE, key, sliceFilter)-->Line_24 $$ UnfilteredPartitionIterator partitionIterator = cmd.executeLocally(ReadExecutionController.empty())[ FD ]
Line_25 $$ ReadResponse response = ReadResponse.createDataResponse(partitionIterator, cmd.columnFilter())-->Line_26 $$ logger.debug("creating response: [ FD ]
Line_18 $$ ReadCommand cmd = new SinglePartitionReadCommand(false, MessagingService.VERSION_30, true, cfm, FBUtilities.nowInSeconds(), columnFilter, RowFilter.NONE, DataLimits.NONE, key, sliceFilter)-->Line_20 $$ ReadCommand.legacyReadCommandSerializer.serialize(cmd, out, MessagingService.VERSION_21)[ FD ]
Line_18 $$ ReadCommand cmd = new SinglePartitionReadCommand(false, MessagingService.VERSION_30, true, cfm, FBUtilities.nowInSeconds(), columnFilter, RowFilter.NONE, DataLimits.NONE, key, sliceFilter)-->Line_23 $$ logger.debug("ReadCommand: [ FD ]
