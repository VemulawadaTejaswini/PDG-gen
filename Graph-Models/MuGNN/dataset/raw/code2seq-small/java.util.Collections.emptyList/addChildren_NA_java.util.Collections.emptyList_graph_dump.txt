Line_43 $$ final int[] ints = getNodesIndices(myTemporaryMessageChildren)-->Line_47 $$ fireNodesRemoved(ints, removed)[ FD ]
Line_33 $$ newChildren = new SmartList<XValueContainerNode<?>>()-->Line_38 $$ myTopGroups = createGroupNodes(children.getTopGroups(), myTopGroups, newChildren)[ FD ]
Line_13 $$ if (children.size() > 0) -->Line_14 $$ newChildren = new ArrayList<XValueContainerNode<?>>(children.size())[ CD ]
Line_33 $$ newChildren = new SmartList<XValueContainerNode<?>>()-->Line_39 $$ myBottomGroups = createGroupNodes(children.getBottomGroups(), myBottomGroups, newChildren)[ FD ]
Line_6 $$ invokeNodeUpdate(new Runnable() -->Line_39 $$ myBottomGroups = createGroupNodes(children.getBottomGroups(), myBottomGroups, newChildren)[ CD ]
Line_14 $$ newChildren = new ArrayList<XValueContainerNode<?>>(children.size())-->Line_33 $$ newChildren = new SmartList<XValueContainerNode<?>>()[ FD ]
Line_6 $$ invokeNodeUpdate(new Runnable() -->Line_13 $$ if (children.size() > 0) [ CD ]
Line_42 $$ if (last && myTemporaryMessageChildren != null) -->Line_44 $$ final TreeNode[] removed = myTemporaryMessageChildren.toArray(new TreeNode[myTemporaryMessageChildren.size()])[ CD ]
Line_44 $$ final TreeNode[] removed = myTemporaryMessageChildren.toArray(new TreeNode[myTemporaryMessageChildren.size()])-->Line_47 $$ fireNodesRemoved(ints, removed)[ FD ]
Line_14 $$ newChildren = new ArrayList<XValueContainerNode<?>>(children.size())-->Line_38 $$ myTopGroups = createGroupNodes(children.getTopGroups(), myTopGroups, newChildren)[ FD ]
Line_14 $$ newChildren = new ArrayList<XValueContainerNode<?>>(children.size())-->Line_39 $$ myBottomGroups = createGroupNodes(children.getBottomGroups(), myBottomGroups, newChildren)[ FD ]
Line_6 $$ invokeNodeUpdate(new Runnable() -->Line_42 $$ if (last && myTemporaryMessageChildren != null) [ CD ]
Line_12 $$ List<XValueContainerNode<?>> newChildren-->Line_26 $$ newChildren.add(node)[ FD ]
Line_4 $$ if (myObsolete)-->Line_5 $$ return[ CD ]
Line_14 $$ newChildren = new ArrayList<XValueContainerNode<?>>(children.size())-->Line_49 $$ myTree.childrenLoaded(XValueContainerNode.this, newChildren, last)[ FD ]
Line_13 $$ if (children.size() > 0) -->Line_23 $$ for (int i = 0; i < children.size(); i++) [ CD ]
Line_22 $$ final InlineDebuggerHelper inlineHelper = getTree().getEditorsProvider().getInlineDebuggerHelper()-->Line_27 $$ if (Registry.is("ide.debugger.inline") && inlineHelper.shouldEvaluateChildrenByDefault(node) && isUseGetChildrenHack(myTree)) [ FD ]
Line_12 $$ List<XValueContainerNode<?>> newChildren-->Line_33 $$ newChildren = new SmartList<XValueContainerNode<?>>()[ FD ]
Line_6 $$ invokeNodeUpdate(new Runnable() -->Line_38 $$ myTopGroups = createGroupNodes(children.getTopGroups(), myTopGroups, newChildren)[ CD ]
Line_13 $$ if (children.size() > 0) -->Line_22 $$ final InlineDebuggerHelper inlineHelper = getTree().getEditorsProvider().getInlineDebuggerHelper()[ CD ]
Line_13 $$ if (children.size() > 0) -->Line_15 $$ if (myValueChildren == null) [ CD ]
Line_42 $$ if (last && myTemporaryMessageChildren != null) -->Line_47 $$ fireNodesRemoved(ints, removed)[ CD ]
Line_6 $$ invokeNodeUpdate(new Runnable() -->Line_10 $$ if (myObsolete)[ CD ]
Line_12 $$ List<XValueContainerNode<?>> newChildren-->Line_38 $$ myTopGroups = createGroupNodes(children.getTopGroups(), myTopGroups, newChildren)[ FD ]
Line_6 $$ invokeNodeUpdate(new Runnable() -->Line_41 $$ fireNodesInserted(newChildren)[ CD ]
Line_33 $$ newChildren = new SmartList<XValueContainerNode<?>>()-->Line_41 $$ fireNodesInserted(newChildren)[ FD ]
Line_23 $$ for (int i = 0; i < children.size(); i++) -->Line_24 $$ XValueNodeImpl node = new XValueNodeImpl(myTree, XValueContainerNode.this, children.getName(i), children.getValue(i))[ FD ]
Line_12 $$ List<XValueContainerNode<?>> newChildren-->Line_41 $$ fireNodesInserted(newChildren)[ FD ]
Line_13 $$ if (children.size() > 0) -->Line_34 $$ if (myValueChildren == null) [ CD ]
Line_42 $$ if (last && myTemporaryMessageChildren != null) -->Line_43 $$ final int[] ints = getNodesIndices(myTemporaryMessageChildren)[ CD ]
Line_12 $$ List<XValueContainerNode<?>> newChildren-->Line_49 $$ myTree.childrenLoaded(XValueContainerNode.this, newChildren, last)[ FD ]
Line_24 $$ XValueNodeImpl node = new XValueNodeImpl(myTree, XValueContainerNode.this, children.getName(i), children.getValue(i))-->Line_27 $$ if (Registry.is("ide.debugger.inline") && inlineHelper.shouldEvaluateChildrenByDefault(node) && isUseGetChildrenHack(myTree)) [ FD ]
Line_14 $$ newChildren = new ArrayList<XValueContainerNode<?>>(children.size())-->Line_41 $$ fireNodesInserted(newChildren)[ FD ]
Line_23 $$ for (int i = 0; i < children.size(); i++) -->Line_24 $$ XValueNodeImpl node = new XValueNodeImpl(myTree, XValueContainerNode.this, children.getName(i), children.getValue(i))[ CD ]
Line_14 $$ newChildren = new ArrayList<XValueContainerNode<?>>(children.size())-->Line_26 $$ newChildren.add(node)[ FD ]
Line_23 $$ for (int i = 0; i < children.size(); i++) -->Line_26 $$ newChildren.add(node)[ CD ]
Line_24 $$ XValueNodeImpl node = new XValueNodeImpl(myTree, XValueContainerNode.this, children.getName(i), children.getValue(i))-->Line_26 $$ newChildren.add(node)[ FD ]
Line_6 $$ invokeNodeUpdate(new Runnable() -->Line_49 $$ myTree.childrenLoaded(XValueContainerNode.this, newChildren, last)[ CD ]
Line_12 $$ List<XValueContainerNode<?>> newChildren-->Line_39 $$ myBottomGroups = createGroupNodes(children.getBottomGroups(), myBottomGroups, newChildren)[ FD ]
Line_12 $$ List<XValueContainerNode<?>> newChildren-->Line_14 $$ newChildren = new ArrayList<XValueContainerNode<?>>(children.size())[ FD ]
Line_23 $$ for (int i = 0; i < children.size(); i++) -->Line_27 $$ if (Registry.is("ide.debugger.inline") && inlineHelper.shouldEvaluateChildrenByDefault(node) && isUseGetChildrenHack(myTree)) [ CD ]
Line_13 $$ if (children.size() > 0) -->Line_33 $$ newChildren = new SmartList<XValueContainerNode<?>>()[ CD ]
Line_33 $$ newChildren = new SmartList<XValueContainerNode<?>>()-->Line_49 $$ myTree.childrenLoaded(XValueContainerNode.this, newChildren, last)[ FD ]
Line_10 $$ if (myObsolete)-->Line_11 $$ return[ CD ]
Line_6 $$ invokeNodeUpdate(new Runnable() -->Line_12 $$ List<XValueContainerNode<?>> newChildren[ CD ]
Line_24 $$ XValueNodeImpl node = new XValueNodeImpl(myTree, XValueContainerNode.this, children.getName(i), children.getValue(i))-->Line_25 $$ myValueChildren.add(node)[ FD ]
Line_15 $$ if (myValueChildren == null) -->Line_16 $$ if (!myAlreadySorted && XDebuggerSettingsManager.getInstance().getDataViewSettings().isSortValues()) [ CD ]
Line_23 $$ for (int i = 0; i < children.size(); i++) -->Line_25 $$ myValueChildren.add(node)[ CD ]
