Line_2 $$ public List<UpgradeInfo> getUpgradeInfos(String fromVersionString, String toVersionString) -->Line_11 $$ if (upgradeProcessEdges == null) [ CD ]
Line_14 $$ return ListUtil.toList(upgradeProcessEdges, new Function<UpgradeProcessEdge, UpgradeInfo>() -->Line_18 $$ return upgradeProcessEdge.getUpgradeInfo()[ FD ]
Line_2 $$ public List<UpgradeInfo> getUpgradeInfos(String fromVersionString, String toVersionString) -->Line_3 $$ if (!_directedGraph.containsVertex(fromVersionString)) [ FD ]
Line_10 $$ List<UpgradeProcessEdge> upgradeProcessEdges = dijkstraShortestPath.getPathEdgeList()-->Line_14 $$ return ListUtil.toList(upgradeProcessEdges, new Function<UpgradeProcessEdge, UpgradeInfo>() [ FD ]
Line_2 $$ public List<UpgradeInfo> getUpgradeInfos(String fromVersionString, String toVersionString) -->Line_10 $$ List<UpgradeProcessEdge> upgradeProcessEdges = dijkstraShortestPath.getPathEdgeList()[ CD ]
Line_2 $$ public List<UpgradeInfo> getUpgradeInfos(String fromVersionString, String toVersionString) -->Line_14 $$ return ListUtil.toList(upgradeProcessEdges, new Function<UpgradeProcessEdge, UpgradeInfo>() [ CD ]
Line_3 $$ if (!_directedGraph.containsVertex(fromVersionString)) -->Line_4 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public List<UpgradeInfo> getUpgradeInfos(String fromVersionString, String toVersionString) -->Line_3 $$ if (!_directedGraph.containsVertex(fromVersionString)) [ CD ]
Line_6 $$ if (!_directedGraph.containsVertex(toVersionString)) -->Line_7 $$ return Collections.emptyList()[ CD ]
Line_10 $$ List<UpgradeProcessEdge> upgradeProcessEdges = dijkstraShortestPath.getPathEdgeList()-->Line_11 $$ if (upgradeProcessEdges == null) [ FD ]
Line_11 $$ if (upgradeProcessEdges == null) -->Line_12 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public List<UpgradeInfo> getUpgradeInfos(String fromVersionString, String toVersionString) -->Line_6 $$ if (!_directedGraph.containsVertex(toVersionString)) [ FD ]
Line_14 $$ return ListUtil.toList(upgradeProcessEdges, new Function<UpgradeProcessEdge, UpgradeInfo>() -->Line_18 $$ return upgradeProcessEdge.getUpgradeInfo()[ CD ]
Line_2 $$ public List<UpgradeInfo> getUpgradeInfos(String fromVersionString, String toVersionString) -->Line_6 $$ if (!_directedGraph.containsVertex(toVersionString)) [ CD ]
Line_9 $$ DijkstraShortestPath<String, UpgradeProcessEdge> dijkstraShortestPath = new DijkstraShortestPath(_directedGraph, fromVersionString, toVersionString)-->Line_10 $$ List<UpgradeProcessEdge> upgradeProcessEdges = dijkstraShortestPath.getPathEdgeList()[ FD ]
Line_2 $$ public List<UpgradeInfo> getUpgradeInfos(String fromVersionString, String toVersionString) -->Line_9 $$ DijkstraShortestPath<String, UpgradeProcessEdge> dijkstraShortestPath = new DijkstraShortestPath(_directedGraph, fromVersionString, toVersionString)[ CD ]
