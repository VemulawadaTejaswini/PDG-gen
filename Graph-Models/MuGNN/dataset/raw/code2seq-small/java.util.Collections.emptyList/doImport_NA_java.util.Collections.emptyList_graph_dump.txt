Line_3 $$ AddModuleWizard wizard = selectFileAndCreateWizard(project, null)-->Line_7 $$ return createFromWizard(project, wizard)[ FD ]
Line_3 $$ AddModuleWizard wizard = selectFileAndCreateWizard(project, null)-->Line_4 $$ if (wizard == null || wizard.getStepCount() > 0 && !wizard.showAndGet()) [ FD ]
Line_2 $$ public static List<Module> doImport(@Nullable Project project) -->Line_7 $$ return createFromWizard(project, wizard)[ FD ]
Line_2 $$ public static List<Module> doImport(@Nullable Project project) -->Line_4 $$ if (wizard == null || wizard.getStepCount() > 0 && !wizard.showAndGet()) [ CD ]
Line_2 $$ public static List<Module> doImport(@Nullable Project project) -->Line_3 $$ AddModuleWizard wizard = selectFileAndCreateWizard(project, null)[ FD ]
Line_2 $$ public static List<Module> doImport(@Nullable Project project) -->Line_7 $$ return createFromWizard(project, wizard)[ CD ]
Line_4 $$ if (wizard == null || wizard.getStepCount() > 0 && !wizard.showAndGet()) -->Line_5 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public static List<Module> doImport(@Nullable Project project) -->Line_3 $$ AddModuleWizard wizard = selectFileAndCreateWizard(project, null)[ CD ]
