Line_2 $$ public long serializedSize(Slices slices, int version) -->Line_3 $$ long size = TypeSizes.sizeofUnsignedVInt(slices.size())[ CD ]
Line_2 $$ public long serializedSize(Slices slices, int version) -->Line_4 $$ if (slices.size() == 0)[ CD ]
Line_3 $$ long size = TypeSizes.sizeofUnsignedVInt(slices.size())-->Line_7 $$ size += Slice.serializer.serializedSize(slice, version, types)[ FD ]
Line_6 $$ List<AbstractType<?>> types = slices instanceof SelectAllSlices ? Collections.<AbstractType<?>>emptyList() : ((ArrayBackedSlices) slices).comparator.subtypes()-->Line_7 $$ size += Slice.serializer.serializedSize(slice, version, types)[ FD ]
Line_2 $$ public long serializedSize(Slices slices, int version) -->Line_3 $$ long size = TypeSizes.sizeofUnsignedVInt(slices.size())[ FD ]
Line_3 $$ long size = TypeSizes.sizeofUnsignedVInt(slices.size())-->Line_4 $$ if (slices.size() == 0)[ FD ]
Line_2 $$ public long serializedSize(Slices slices, int version) -->Line_8 $$ return size[ CD ]
Line_2 $$ public long serializedSize(Slices slices, int version) -->Line_6 $$ List<AbstractType<?>> types = slices instanceof SelectAllSlices ? Collections.<AbstractType<?>>emptyList() : ((ArrayBackedSlices) slices).comparator.subtypes()[ CD ]
Line_2 $$ public long serializedSize(Slices slices, int version) -->Line_4 $$ if (slices.size() == 0)[ FD ]
Line_2 $$ public long serializedSize(Slices slices, int version) -->Line_7 $$ size += Slice.serializer.serializedSize(slice, version, types)[ FD ]
Line_4 $$ if (slices.size() == 0)-->Line_5 $$ return size[ CD ]
