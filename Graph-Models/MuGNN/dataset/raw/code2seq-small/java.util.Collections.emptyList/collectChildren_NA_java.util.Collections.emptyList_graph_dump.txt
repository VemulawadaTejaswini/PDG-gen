Line_5 $$ int firstDot = subPath.indexOf('.')-->Line_6 $$ if (firstDot == -1) [ FD ]
Line_2 $$ private static List<Element> collectChildren(@Nullable Element container, String subPath) -->Line_11 $$ List<Element> result = new ArrayList<Element>()[ CD ]
Line_2 $$ private static List<Element> collectChildren(@Nullable Element container, String subPath) -->Line_3 $$ if (container == null)[ CD ]
Line_13 $$ Element child = findChildByPath(each, pathInChild)-->Line_14 $$ if (child != null)[ FD ]
Line_2 $$ private static List<Element> collectChildren(@Nullable Element container, String subPath) -->Line_5 $$ int firstDot = subPath.indexOf('.')[ FD ]
Line_14 $$ if (child != null)-->Line_15 $$ result.add(child)[ CD ]
Line_2 $$ private static List<Element> collectChildren(@Nullable Element container, String subPath) -->Line_10 $$ String pathInChild = subPath.substring(firstDot + 1)[ CD ]
Line_6 $$ if (firstDot == -1) -->Line_7 $$ return container.getChildren(subPath)[ CD ]
Line_9 $$ String childName = subPath.substring(0, firstDot)-->Line_12 $$ for (Element each : container.getChildren(childName)) [ FD ]
Line_2 $$ private static List<Element> collectChildren(@Nullable Element container, String subPath) -->Line_6 $$ if (firstDot == -1) [ CD ]
Line_11 $$ List<Element> result = new ArrayList<Element>()-->Line_15 $$ result.add(child)[ FD ]
Line_2 $$ private static List<Element> collectChildren(@Nullable Element container, String subPath) -->Line_12 $$ for (Element each : container.getChildren(childName)) [ FD ]
Line_2 $$ private static List<Element> collectChildren(@Nullable Element container, String subPath) -->Line_5 $$ int firstDot = subPath.indexOf('.')[ CD ]
Line_2 $$ private static List<Element> collectChildren(@Nullable Element container, String subPath) -->Line_9 $$ String childName = subPath.substring(0, firstDot)[ FD ]
Line_5 $$ int firstDot = subPath.indexOf('.')-->Line_9 $$ String childName = subPath.substring(0, firstDot)[ FD ]
Line_2 $$ private static List<Element> collectChildren(@Nullable Element container, String subPath) -->Line_9 $$ String childName = subPath.substring(0, firstDot)[ CD ]
Line_2 $$ private static List<Element> collectChildren(@Nullable Element container, String subPath) -->Line_10 $$ String pathInChild = subPath.substring(firstDot + 1)[ FD ]
Line_12 $$ for (Element each : container.getChildren(childName)) -->Line_13 $$ Element child = findChildByPath(each, pathInChild)[ FD ]
Line_2 $$ private static List<Element> collectChildren(@Nullable Element container, String subPath) -->Line_3 $$ if (container == null)[ FD ]
Line_3 $$ if (container == null)-->Line_4 $$ return Collections.emptyList()[ CD ]
Line_2 $$ private static List<Element> collectChildren(@Nullable Element container, String subPath) -->Line_7 $$ return container.getChildren(subPath)[ FD ]
Line_2 $$ private static List<Element> collectChildren(@Nullable Element container, String subPath) -->Line_17 $$ return result[ CD ]
Line_13 $$ Element child = findChildByPath(each, pathInChild)-->Line_15 $$ result.add(child)[ FD ]
Line_10 $$ String pathInChild = subPath.substring(firstDot + 1)-->Line_13 $$ Element child = findChildByPath(each, pathInChild)[ FD ]
