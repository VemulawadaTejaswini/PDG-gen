Line_8 $$ if (document instanceof DocumentWindow) -->Line_10 $$ TextRange hostRange = window.injectedToHost(new TextRange(0, injectedPsi.getTextLength()))[ CD ]
Line_8 $$ if (document instanceof DocumentWindow) -->Line_9 $$ DocumentWindow window = (DocumentWindow) docManager.getLastCommittedDocument(document)[ CD ]
Line_5 $$ final PsiLanguageInjectionHost.InjectedPsiVisitor visitor = new PsiLanguageInjectionHost.InjectedPsiVisitor() -->Line_23 $$ visitor.visit(injected, Collections.<PsiLanguageInjectionHost.Shred>emptyList())[ FD ]
Line_2 $$ private PsiFile getInjectedFileIn(@NotNull final PsiElement hostContext, @NotNull final PsiFile hostFile, @NotNull final TextRange rangeInHostFile) -->Line_3 $$ final PsiDocumentManagerBase docManager = (PsiDocumentManagerBase) PsiDocumentManager.getInstance(getProject())[ CD ]
Line_8 $$ if (document instanceof DocumentWindow) -->Line_11 $$ if (hostRange.contains(rangeInHostFile)) [ CD ]
Line_7 $$ Document document = docManager.getDocument(injectedPsi)-->Line_8 $$ if (document instanceof DocumentWindow) [ FD ]
Line_2 $$ private PsiFile getInjectedFileIn(@NotNull final PsiElement hostContext, @NotNull final PsiFile hostFile, @NotNull final TextRange rangeInHostFile) -->Line_5 $$ final PsiLanguageInjectionHost.InjectedPsiVisitor visitor = new PsiLanguageInjectionHost.InjectedPsiVisitor() [ CD ]
Line_5 $$ final PsiLanguageInjectionHost.InjectedPsiVisitor visitor = new PsiLanguageInjectionHost.InjectedPsiVisitor() -->Line_8 $$ if (document instanceof DocumentWindow) [ CD ]
Line_3 $$ final PsiDocumentManagerBase docManager = (PsiDocumentManagerBase) PsiDocumentManager.getInstance(getProject())-->Line_7 $$ Document document = docManager.getDocument(injectedPsi)[ FD ]
Line_19 $$ if (document != null && documentManager.isUncommited(document)) -->Line_27 $$ List<Pair<PsiElement, TextRange>> injected = InjectedLanguageManager.getInstance(getProject()).getInjectedPsiFiles(hostContext)[ CD ]
Line_5 $$ final PsiLanguageInjectionHost.InjectedPsiVisitor visitor = new PsiLanguageInjectionHost.InjectedPsiVisitor() -->Line_31 $$ visitor.visit(injectedFile, ContainerUtil.<PsiLanguageInjectionHost.Shred>emptyList())[ FD ]
Line_5 $$ final PsiLanguageInjectionHost.InjectedPsiVisitor visitor = new PsiLanguageInjectionHost.InjectedPsiVisitor() -->Line_10 $$ TextRange hostRange = window.injectedToHost(new TextRange(0, injectedPsi.getTextLength()))[ FD ]
Line_2 $$ private PsiFile getInjectedFileIn(@NotNull final PsiElement hostContext, @NotNull final PsiFile hostFile, @NotNull final TextRange rangeInHostFile) -->Line_17 $$ PsiDocumentManager documentManager = PsiDocumentManager.getInstance(getProject())[ CD ]
Line_22 $$ if (injected != null) -->Line_23 $$ visitor.visit(injected, Collections.<PsiLanguageInjectionHost.Shred>emptyList())[ CD ]
Line_2 $$ private PsiFile getInjectedFileIn(@NotNull final PsiElement hostContext, @NotNull final PsiFile hostFile, @NotNull final TextRange rangeInHostFile) -->Line_18 $$ Document document = documentManager.getDocument(hostFile)[ FD ]
Line_2 $$ private PsiFile getInjectedFileIn(@NotNull final PsiElement hostContext, @NotNull final PsiFile hostFile, @NotNull final TextRange rangeInHostFile) -->Line_11 $$ if (hostRange.contains(rangeInHostFile)) [ FD ]
Line_2 $$ private PsiFile getInjectedFileIn(@NotNull final PsiElement hostContext, @NotNull final PsiFile hostFile, @NotNull final TextRange rangeInHostFile) -->Line_20 $$ for (DocumentWindow documentWindow : InjectedLanguageManager.getInstance(getProject()).getCachedInjectedDocuments(hostFile)) [ FD ]
Line_19 $$ if (document != null && documentManager.isUncommited(document)) -->Line_28 $$ if (injected != null) [ CD ]
Line_2 $$ private PsiFile getInjectedFileIn(@NotNull final PsiElement hostContext, @NotNull final PsiFile hostFile, @NotNull final TextRange rangeInHostFile) -->Line_18 $$ Document document = documentManager.getDocument(hostFile)[ CD ]
Line_2 $$ private PsiFile getInjectedFileIn(@NotNull final PsiElement hostContext, @NotNull final PsiFile hostFile, @NotNull final TextRange rangeInHostFile) -->Line_27 $$ List<Pair<PsiElement, TextRange>> injected = InjectedLanguageManager.getInstance(getProject()).getInjectedPsiFiles(hostContext)[ FD ]
Line_2 $$ private PsiFile getInjectedFileIn(@NotNull final PsiElement hostContext, @NotNull final PsiFile hostFile, @NotNull final TextRange rangeInHostFile) -->Line_35 $$ return result[0][ CD ]
Line_2 $$ private PsiFile getInjectedFileIn(@NotNull final PsiElement hostContext, @NotNull final PsiFile hostFile, @NotNull final TextRange rangeInHostFile) -->Line_19 $$ if (document != null && documentManager.isUncommited(document)) [ CD ]
Line_2 $$ private PsiFile getInjectedFileIn(@NotNull final PsiElement hostContext, @NotNull final PsiFile hostFile, @NotNull final TextRange rangeInHostFile) -->Line_4 $$ final PsiFile[] result = [ CD ]
Line_9 $$ DocumentWindow window = (DocumentWindow) docManager.getLastCommittedDocument(document)-->Line_10 $$ TextRange hostRange = window.injectedToHost(new TextRange(0, injectedPsi.getTextLength()))[ FD ]
Line_3 $$ final PsiDocumentManagerBase docManager = (PsiDocumentManagerBase) PsiDocumentManager.getInstance(getProject())-->Line_9 $$ DocumentWindow window = (DocumentWindow) docManager.getLastCommittedDocument(document)[ FD ]
Line_10 $$ TextRange hostRange = window.injectedToHost(new TextRange(0, injectedPsi.getTextLength()))-->Line_11 $$ if (hostRange.contains(rangeInHostFile)) [ FD ]
Line_7 $$ Document document = docManager.getDocument(injectedPsi)-->Line_19 $$ if (document != null && documentManager.isUncommited(document)) [ FD ]
Line_5 $$ final PsiLanguageInjectionHost.InjectedPsiVisitor visitor = new PsiLanguageInjectionHost.InjectedPsiVisitor() -->Line_7 $$ Document document = docManager.getDocument(injectedPsi)[ CD ]
Line_5 $$ final PsiLanguageInjectionHost.InjectedPsiVisitor visitor = new PsiLanguageInjectionHost.InjectedPsiVisitor() -->Line_7 $$ Document document = docManager.getDocument(injectedPsi)[ FD ]
Line_7 $$ Document document = docManager.getDocument(injectedPsi)-->Line_9 $$ DocumentWindow window = (DocumentWindow) docManager.getLastCommittedDocument(document)[ FD ]
