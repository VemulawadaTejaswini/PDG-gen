Line_12 $$ final File srcFile = new File(path)-->Line_21 $$ Messages.showErrorDialog(myProject, QuickFixBundle.message("add.library.error.cannot.copy", srcFile.getPath(), dstFile.getPath(), e.getMessage()), CommonBundle.getErrorTitle())[ FD ]
Line_2 $$ private List<String> computeResultingPaths() -->Line_3 $$ if (myUseBundledRadioButton.isSelected()) [ CD ]
Line_10 $$ List<String> result = new ArrayList<String>()-->Line_24 $$ result.add(FileUtil.toSystemIndependentName(dstFile.getAbsolutePath()))[ FD ]
Line_17 $$ File dstFile = new File(dstDir, srcFile.getName())-->Line_19 $$ FileUtil.copy(srcFile, dstFile)[ FD ]
Line_12 $$ final File srcFile = new File(path)-->Line_14 $$ Messages.showErrorDialog(myProject, QuickFixBundle.message("add.library.error.not.found", srcFile.getPath()), CommonBundle.getErrorTitle())[ FD ]
Line_3 $$ if (myUseBundledRadioButton.isSelected()) -->Line_4 $$ return myDefaultLibraryPaths[ CD ]
Line_12 $$ final File srcFile = new File(path)-->Line_13 $$ if (!srcFile.exists()) [ FD ]
Line_13 $$ if (!srcFile.exists()) -->Line_15 $$ return Collections.emptyList()[ CD ]
Line_6 $$ final String dstDir = myCopyToDir.getText()-->Line_7 $$ if (dstDir.isEmpty()) [ FD ]
Line_7 $$ if (dstDir.isEmpty()) -->Line_8 $$ return Collections.emptyList()[ CD ]
Line_2 $$ private List<String> computeResultingPaths() -->Line_10 $$ List<String> result = new ArrayList<String>()[ CD ]
Line_2 $$ private List<String> computeResultingPaths() -->Line_7 $$ if (dstDir.isEmpty()) [ CD ]
Line_17 $$ File dstFile = new File(dstDir, srcFile.getName())-->Line_24 $$ result.add(FileUtil.toSystemIndependentName(dstFile.getAbsolutePath()))[ FD ]
Line_12 $$ final File srcFile = new File(path)-->Line_19 $$ FileUtil.copy(srcFile, dstFile)[ FD ]
Line_17 $$ File dstFile = new File(dstDir, srcFile.getName())-->Line_21 $$ Messages.showErrorDialog(myProject, QuickFixBundle.message("add.library.error.cannot.copy", srcFile.getPath(), dstFile.getPath(), e.getMessage()), CommonBundle.getErrorTitle())[ FD ]
Line_2 $$ private List<String> computeResultingPaths() -->Line_6 $$ final String dstDir = myCopyToDir.getText()[ CD ]
Line_12 $$ final File srcFile = new File(path)-->Line_17 $$ File dstFile = new File(dstDir, srcFile.getName())[ FD ]
Line_2 $$ private List<String> computeResultingPaths() -->Line_26 $$ return result[ CD ]
Line_13 $$ if (!srcFile.exists()) -->Line_14 $$ Messages.showErrorDialog(myProject, QuickFixBundle.message("add.library.error.not.found", srcFile.getPath()), CommonBundle.getErrorTitle())[ CD ]
