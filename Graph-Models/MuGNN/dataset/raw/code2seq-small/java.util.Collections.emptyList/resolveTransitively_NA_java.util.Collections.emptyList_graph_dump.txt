Line_2 $$ public List<MavenArtifact> resolveTransitively(@NotNull List<MavenArtifactInfo> artifacts, @NotNull List<MavenRemoteRepository> remoteRepositories) throws RemoteException, MavenServerProcessCanceledException -->Line_18 $$ return Collections.emptyList()[ CD ]
Line_9 $$ Set<Artifact> res = getComponent(ArtifactResolver.class).resolveTransitively(toResolve, project, Collections.EMPTY_MAP, myLocalRepository, convertRepositories(remoteRepositories), getComponent(ArtifactMetadataSource.class)).getArtifacts()-->Line_10 $$ return MavenModelConverter.convertArtifacts(res, new THashMap<Artifact, MavenArtifact>(), getLocalRepositoryFile())[ FD ]
Line_5 $$ for (MavenArtifactInfo each : artifacts) -->Line_6 $$ toResolve.add(createArtifact(each))[ FD ]
Line_8 $$ Artifact project = getComponent(ArtifactFactory.class).createBuildArtifact("temp", "temp", "666", "pom")-->Line_9 $$ Set<Artifact> res = getComponent(ArtifactResolver.class).resolveTransitively(toResolve, project, Collections.EMPTY_MAP, myLocalRepository, convertRepositories(remoteRepositories), getComponent(ArtifactMetadataSource.class)).getArtifacts()[ FD ]
Line_2 $$ public List<MavenArtifact> resolveTransitively(@NotNull List<MavenArtifactInfo> artifacts, @NotNull List<MavenRemoteRepository> remoteRepositories) throws RemoteException, MavenServerProcessCanceledException -->Line_9 $$ Set<Artifact> res = getComponent(ArtifactResolver.class).resolveTransitively(toResolve, project, Collections.EMPTY_MAP, myLocalRepository, convertRepositories(remoteRepositories), getComponent(ArtifactMetadataSource.class)).getArtifacts()[ FD ]
Line_4 $$ Set<Artifact> toResolve = new LinkedHashSet<Artifact>()-->Line_9 $$ Set<Artifact> res = getComponent(ArtifactResolver.class).resolveTransitively(toResolve, project, Collections.EMPTY_MAP, myLocalRepository, convertRepositories(remoteRepositories), getComponent(ArtifactMetadataSource.class)).getArtifacts()[ FD ]
Line_4 $$ Set<Artifact> toResolve = new LinkedHashSet<Artifact>()-->Line_6 $$ toResolve.add(createArtifact(each))[ FD ]
