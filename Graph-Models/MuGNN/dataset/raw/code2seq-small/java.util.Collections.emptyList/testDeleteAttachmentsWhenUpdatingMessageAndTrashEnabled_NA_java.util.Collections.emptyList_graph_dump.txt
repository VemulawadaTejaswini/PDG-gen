Line_7 $$ List<FileEntry> fileEntries = PortletFileRepositoryUtil.getPortletFileEntries(message.getGroupId(), message.getAttachmentsFolderId())-->Line_9 $$ FileEntry fileEntry = fileEntries.get(0)[ FD ]
Line_4 $$ MBMessage message = addMessage(null, true)-->Line_7 $$ List<FileEntry> fileEntries = PortletFileRepositoryUtil.getPortletFileEntries(message.getGroupId(), message.getAttachmentsFolderId())[ FD ]
Line_7 $$ List<FileEntry> fileEntries = PortletFileRepositoryUtil.getPortletFileEntries(message.getGroupId(), message.getAttachmentsFolderId())-->Line_8 $$ Assert.assertEquals(1, fileEntries.size())[ FD ]
Line_5 $$ ServiceContext serviceContext = ServiceContextTestUtil.getServiceContext(_group.getGroupId(), TestPropsValues.getUserId())-->Line_6 $$ MBMessageLocalServiceUtil.updateMessage(TestPropsValues.getUserId(), message.getMessageId(), RandomTestUtil.randomString(), RandomTestUtil.randomString(), Collections.<ObjectValuePair<String, InputStream>>emptyList(), Collections.<String>emptyList(), 0, false, serviceContext)[ FD ]
Line_4 $$ MBMessage message = addMessage(null, true)-->Line_6 $$ MBMessageLocalServiceUtil.updateMessage(TestPropsValues.getUserId(), message.getMessageId(), RandomTestUtil.randomString(), RandomTestUtil.randomString(), Collections.<ObjectValuePair<String, InputStream>>emptyList(), Collections.<String>emptyList(), 0, false, serviceContext)[ FD ]
Line_10 $$ WorkflowCapability workflowCapability = fileEntry.getRepositoryCapability(WorkflowCapability.class)-->Line_11 $$ Assert.assertEquals(WorkflowConstants.STATUS_IN_TRASH, workflowCapability.getStatus(fileEntry))[ FD ]
Line_9 $$ FileEntry fileEntry = fileEntries.get(0)-->Line_11 $$ Assert.assertEquals(WorkflowConstants.STATUS_IN_TRASH, workflowCapability.getStatus(fileEntry))[ FD ]
Line_9 $$ FileEntry fileEntry = fileEntries.get(0)-->Line_10 $$ WorkflowCapability workflowCapability = fileEntry.getRepositoryCapability(WorkflowCapability.class)[ FD ]
