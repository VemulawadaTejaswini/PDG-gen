Line_12 $$ List<ProfileResult> childrenProfileResults = Collections.emptyList()-->Line_14 $$ childrenProfileResults = new ArrayList(children.size())[ FD ]
Line_9 $$ ProfileBreakdown breakdown = timings.get(token)-->Line_10 $$ Map<String, Long> timings = breakdown.toTimingMap()[ FD ]
Line_16 $$ ProfileResult childNode = doGetQueryTree(child)-->Line_17 $$ childrenProfileResults.add(childNode)[ FD ]
Line_14 $$ childrenProfileResults = new ArrayList(children.size())-->Line_17 $$ childrenProfileResults.add(childNode)[ FD ]
Line_11 $$ List<Integer> children = tree.get(token)-->Line_13 $$ if (children != null) [ FD ]
Line_12 $$ List<ProfileResult> childrenProfileResults = Collections.emptyList()-->Line_17 $$ childrenProfileResults.add(childNode)[ FD ]
Line_13 $$ if (children != null) -->Line_14 $$ childrenProfileResults = new ArrayList(children.size())[ CD ]
Line_8 $$ Query query = queries.get(token)-->Line_24 $$ String luceneName = query.toString()[ FD ]
Line_11 $$ List<Integer> children = tree.get(token)-->Line_14 $$ childrenProfileResults = new ArrayList(children.size())[ FD ]
Line_15 $$ for (Integer child : children) -->Line_16 $$ ProfileResult childNode = doGetQueryTree(child)[ FD ]
Line_8 $$ Query query = queries.get(token)-->Line_23 $$ String queryDescription = query.getClass().getSimpleName()[ FD ]
