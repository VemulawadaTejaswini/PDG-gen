Line_3 $$ Query query = queries.get(token)-->Line_17 $$ String luceneName = query.toString()[ FD ]
Line_2 $$ private ProfileResult doGetQueryTree(int token) -->Line_16 $$ String queryDescription = query.getClass().getSimpleName()[ CD ]
Line_4 $$ ProfileBreakdown breakdown = timings.get(token)-->Line_5 $$ Map<String, Long> timings = breakdown.toTimingMap()[ FD ]
Line_2 $$ private ProfileResult doGetQueryTree(int token) -->Line_18 $$ return new ProfileResult(queryDescription, luceneName, timings, childrenProfileResults, nodeTime)[ CD ]
Line_7 $$ List<ProfileResult> childrenProfileResults = Collections.emptyList()-->Line_12 $$ childrenProfileResults.add(childNode)[ FD ]
Line_9 $$ childrenProfileResults = new ArrayList(children.size())-->Line_12 $$ childrenProfileResults.add(childNode)[ FD ]
Line_2 $$ private ProfileResult doGetQueryTree(int token) -->Line_17 $$ String luceneName = query.toString()[ CD ]
Line_2 $$ private ProfileResult doGetQueryTree(int token) -->Line_3 $$ Query query = queries.get(token)[ CD ]
Line_2 $$ private ProfileResult doGetQueryTree(int token) -->Line_6 $$ List<Integer> children = tree.get(token)[ FD ]
Line_7 $$ List<ProfileResult> childrenProfileResults = Collections.emptyList()-->Line_9 $$ childrenProfileResults = new ArrayList(children.size())[ FD ]
Line_6 $$ List<Integer> children = tree.get(token)-->Line_9 $$ childrenProfileResults = new ArrayList(children.size())[ FD ]
Line_2 $$ private ProfileResult doGetQueryTree(int token) -->Line_3 $$ Query query = queries.get(token)[ FD ]
Line_2 $$ private ProfileResult doGetQueryTree(int token) -->Line_7 $$ List<ProfileResult> childrenProfileResults = Collections.emptyList()[ CD ]
Line_5 $$ Map<String, Long> timings = breakdown.toTimingMap()-->Line_15 $$ long nodeTime = getNodeTime(timings, childrenProfileResults)[ FD ]
Line_7 $$ List<ProfileResult> childrenProfileResults = Collections.emptyList()-->Line_15 $$ long nodeTime = getNodeTime(timings, childrenProfileResults)[ FD ]
Line_2 $$ private ProfileResult doGetQueryTree(int token) -->Line_4 $$ ProfileBreakdown breakdown = timings.get(token)[ FD ]
Line_2 $$ private ProfileResult doGetQueryTree(int token) -->Line_8 $$ if (children != null) [ CD ]
Line_3 $$ Query query = queries.get(token)-->Line_16 $$ String queryDescription = query.getClass().getSimpleName()[ FD ]
Line_8 $$ if (children != null) -->Line_9 $$ childrenProfileResults = new ArrayList(children.size())[ CD ]
Line_10 $$ for (Integer child : children) -->Line_11 $$ ProfileResult childNode = doGetQueryTree(child)[ FD ]
Line_6 $$ List<Integer> children = tree.get(token)-->Line_8 $$ if (children != null) [ FD ]
Line_2 $$ private ProfileResult doGetQueryTree(int token) -->Line_6 $$ List<Integer> children = tree.get(token)[ CD ]
Line_2 $$ private ProfileResult doGetQueryTree(int token) -->Line_4 $$ ProfileBreakdown breakdown = timings.get(token)[ CD ]
Line_11 $$ ProfileResult childNode = doGetQueryTree(child)-->Line_12 $$ childrenProfileResults.add(childNode)[ FD ]
Line_9 $$ childrenProfileResults = new ArrayList(children.size())-->Line_15 $$ long nodeTime = getNodeTime(timings, childrenProfileResults)[ FD ]
Line_2 $$ private ProfileResult doGetQueryTree(int token) -->Line_5 $$ Map<String, Long> timings = breakdown.toTimingMap()[ CD ]
Line_2 $$ private ProfileResult doGetQueryTree(int token) -->Line_15 $$ long nodeTime = getNodeTime(timings, childrenProfileResults)[ CD ]
