Line_2 $$ public MavenExecutionResult readProject(@NotNull final File file, @NotNull final List<String> activeProfiles, @NotNull final List<String> inactiveProfiles) -->Line_3 $$ MavenExecutionRequest request = createRequest(file, activeProfiles, inactiveProfiles, Collections.<String>emptyList())[ FD ]
Line_3 $$ MavenExecutionRequest request = createRequest(file, activeProfiles, inactiveProfiles, Collections.<String>emptyList())-->Line_5 $$ request.setRecursive(false)[ FD ]
Line_3 $$ MavenExecutionRequest request = createRequest(file, activeProfiles, inactiveProfiles, Collections.<String>emptyList())-->Line_4 $$ request.getGlobalProfileManager().loadSettingsProfiles(mySettings)[ FD ]
Line_3 $$ MavenExecutionRequest request = createRequest(file, activeProfiles, inactiveProfiles, Collections.<String>emptyList())-->Line_6 $$ return readProject(request)[ FD ]
Line_2 $$ public MavenExecutionResult readProject(@NotNull final File file, @NotNull final List<String> activeProfiles, @NotNull final List<String> inactiveProfiles) -->Line_5 $$ request.setRecursive(false)[ CD ]
Line_2 $$ public MavenExecutionResult readProject(@NotNull final File file, @NotNull final List<String> activeProfiles, @NotNull final List<String> inactiveProfiles) -->Line_3 $$ MavenExecutionRequest request = createRequest(file, activeProfiles, inactiveProfiles, Collections.<String>emptyList())[ CD ]
Line_2 $$ public MavenExecutionResult readProject(@NotNull final File file, @NotNull final List<String> activeProfiles, @NotNull final List<String> inactiveProfiles) -->Line_4 $$ request.getGlobalProfileManager().loadSettingsProfiles(mySettings)[ CD ]
Line_2 $$ public MavenExecutionResult readProject(@NotNull final File file, @NotNull final List<String> activeProfiles, @NotNull final List<String> inactiveProfiles) -->Line_6 $$ return readProject(request)[ CD ]
