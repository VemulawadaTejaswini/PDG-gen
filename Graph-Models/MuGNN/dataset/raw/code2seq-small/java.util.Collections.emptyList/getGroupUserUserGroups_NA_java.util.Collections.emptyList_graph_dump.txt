Line_12 $$ Set<Long> userGroupIds = SetUtil.intersect(groupUserGroupIds, userUserGroupIds)-->Line_16 $$ List<UserGroup> userGroups = new ArrayList(userGroupIds.size())[ FD ]
Line_9 $$ if (userUserGroupIds.length == 0) -->Line_10 $$ return Collections.emptyList()[ CD ]
Line_8 $$ long[] userUserGroupIds = userPersistence.getUserGroupPrimaryKeys(userId)-->Line_12 $$ Set<Long> userGroupIds = SetUtil.intersect(groupUserGroupIds, userUserGroupIds)[ FD ]
Line_13 $$ if (userGroupIds.isEmpty()) -->Line_14 $$ return Collections.emptyList()[ CD ]
Line_5 $$ if (groupUserGroupIds.length == 0) -->Line_6 $$ return Collections.emptyList()[ CD ]
Line_4 $$ long[] groupUserGroupIds = groupPersistence.getUserGroupPrimaryKeys(groupId)-->Line_12 $$ Set<Long> userGroupIds = SetUtil.intersect(groupUserGroupIds, userUserGroupIds)[ FD ]
Line_16 $$ List<UserGroup> userGroups = new ArrayList(userGroupIds.size())-->Line_18 $$ userGroups.add(userGroupPersistence.findByPrimaryKey(userGroupId))[ FD ]
Line_12 $$ Set<Long> userGroupIds = SetUtil.intersect(groupUserGroupIds, userUserGroupIds)-->Line_13 $$ if (userGroupIds.isEmpty()) [ FD ]
Line_17 $$ for (Long userGroupId : userGroupIds) -->Line_18 $$ userGroups.add(userGroupPersistence.findByPrimaryKey(userGroupId))[ FD ]
