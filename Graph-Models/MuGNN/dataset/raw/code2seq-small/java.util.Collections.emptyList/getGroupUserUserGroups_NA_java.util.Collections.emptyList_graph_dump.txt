Line_11 $$ Set<Long> userGroupIds = SetUtil.intersect(groupUserGroupIds, userUserGroupIds)-->Line_12 $$ if (userGroupIds.isEmpty()) [ FD ]
Line_2 $$ public List<UserGroup> getGroupUserUserGroups(long groupId, long userId) throws PortalException -->Line_7 $$ long[] userUserGroupIds = userPersistence.getUserGroupPrimaryKeys(userId)[ CD ]
Line_7 $$ long[] userUserGroupIds = userPersistence.getUserGroupPrimaryKeys(userId)-->Line_11 $$ Set<Long> userGroupIds = SetUtil.intersect(groupUserGroupIds, userUserGroupIds)[ FD ]
Line_2 $$ public List<UserGroup> getGroupUserUserGroups(long groupId, long userId) throws PortalException -->Line_3 $$ long[] groupUserGroupIds = groupPersistence.getUserGroupPrimaryKeys(groupId)[ CD ]
Line_15 $$ List<UserGroup> userGroups = new ArrayList(userGroupIds.size())-->Line_17 $$ userGroups.add(userGroupPersistence.findByPrimaryKey(userGroupId))[ FD ]
Line_16 $$ for (Long userGroupId : userGroupIds) -->Line_17 $$ userGroups.add(userGroupPersistence.findByPrimaryKey(userGroupId))[ FD ]
Line_2 $$ public List<UserGroup> getGroupUserUserGroups(long groupId, long userId) throws PortalException -->Line_7 $$ long[] userUserGroupIds = userPersistence.getUserGroupPrimaryKeys(userId)[ FD ]
Line_2 $$ public List<UserGroup> getGroupUserUserGroups(long groupId, long userId) throws PortalException -->Line_8 $$ if (userUserGroupIds.length == 0) [ CD ]
Line_2 $$ public List<UserGroup> getGroupUserUserGroups(long groupId, long userId) throws PortalException -->Line_19 $$ return userGroups[ CD ]
Line_4 $$ if (groupUserGroupIds.length == 0) -->Line_5 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public List<UserGroup> getGroupUserUserGroups(long groupId, long userId) throws PortalException -->Line_11 $$ Set<Long> userGroupIds = SetUtil.intersect(groupUserGroupIds, userUserGroupIds)[ CD ]
Line_11 $$ Set<Long> userGroupIds = SetUtil.intersect(groupUserGroupIds, userUserGroupIds)-->Line_15 $$ List<UserGroup> userGroups = new ArrayList(userGroupIds.size())[ FD ]
Line_2 $$ public List<UserGroup> getGroupUserUserGroups(long groupId, long userId) throws PortalException -->Line_15 $$ List<UserGroup> userGroups = new ArrayList(userGroupIds.size())[ CD ]
Line_12 $$ if (userGroupIds.isEmpty()) -->Line_13 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public List<UserGroup> getGroupUserUserGroups(long groupId, long userId) throws PortalException -->Line_4 $$ if (groupUserGroupIds.length == 0) [ CD ]
Line_8 $$ if (userUserGroupIds.length == 0) -->Line_9 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public List<UserGroup> getGroupUserUserGroups(long groupId, long userId) throws PortalException -->Line_3 $$ long[] groupUserGroupIds = groupPersistence.getUserGroupPrimaryKeys(groupId)[ FD ]
Line_3 $$ long[] groupUserGroupIds = groupPersistence.getUserGroupPrimaryKeys(groupId)-->Line_11 $$ Set<Long> userGroupIds = SetUtil.intersect(groupUserGroupIds, userUserGroupIds)[ FD ]
Line_2 $$ public List<UserGroup> getGroupUserUserGroups(long groupId, long userId) throws PortalException -->Line_12 $$ if (userGroupIds.isEmpty()) [ CD ]
