Line_62 $$ b = b.substring(remotePrefix.length())-->Line_64 $$ final int idx = b.indexOf("HEAD ->")[ FD ]
Line_60 $$ if (isRemote) -->Line_61 $$ if (!remoteOnly) [ CD ]
Line_35 $$ Collection<String> branches = ContainerUtil.newArrayList()-->Line_69 $$ branches.add(b)[ FD ]
Line_48 $$ for (String b : split) -->Line_54 $$ if (b.startsWith("remotes/")) [ FD ]
Line_54 $$ if (b.startsWith("remotes/")) -->Line_55 $$ remotePrefix = "remotes/"[ CD ]
Line_64 $$ final int idx = b.indexOf("HEAD ->")-->Line_65 $$ if (idx > 0) [ FD ]
Line_11 $$ boolean remoteOnly = false-->Line_61 $$ if (!remoteOnly) [ FD ]
Line_60 $$ if (isRemote) -->Line_65 $$ if (idx > 0) [ CD ]
Line_48 $$ for (String b : split) -->Line_69 $$ branches.add(b)[ FD ]
Line_53 $$ String remotePrefix = null-->Line_55 $$ remotePrefix = "remotes/"[ FD ]
Line_19 $$ if (containingCommit != null) -->Line_20 $$ handler.addParameters("--contains", containingCommit)[ CD ]
Line_60 $$ if (isRemote) -->Line_64 $$ final int idx = b.indexOf("HEAD ->")[ CD ]
Line_62 $$ b = b.substring(remotePrefix.length())-->Line_69 $$ branches.add(b)[ FD ]
Line_48 $$ for (String b : split) -->Line_62 $$ b = b.substring(remotePrefix.length())[ FD ]
Line_48 $$ for (String b : split) -->Line_56 $$ if (b.startsWith(GitBranch.REFS_REMOTES_PREFIX)) [ FD ]
Line_11 $$ boolean remoteOnly = false-->Line_14 $$ remoteOnly = false[ FD ]
Line_15 $$ if (remoteWanted) -->Line_16 $$ handler.addParameters("-r")[ CD ]
Line_28 $$ final String prefix = "ref: refs/heads/"-->Line_29 $$ return head.startsWith(prefix) ? Collections.singletonList(head.substring(prefix.length())) : Collections.<String>emptyList()[ FD ]
Line_12 $$ if (remoteWanted && localWanted) -->Line_15 $$ if (remoteWanted) [ CD ]
Line_14 $$ remoteOnly = false-->Line_17 $$ remoteOnly = true[ FD ]
Line_61 $$ if (!remoteOnly) -->Line_62 $$ b = b.substring(remotePrefix.length())[ CD ]
Line_12 $$ if (remoteWanted && localWanted) -->Line_13 $$ handler.addParameters("-a")[ CD ]
Line_48 $$ for (String b : split) -->Line_49 $$ b = b.substring(2).trim()[ FD ]
Line_53 $$ String remotePrefix = null-->Line_57 $$ remotePrefix = GitBranch.REFS_REMOTES_PREFIX[ FD ]
Line_22 $$ final String output = handler.run()-->Line_23 $$ if (output.trim().length() == 0) [ FD ]
Line_55 $$ remotePrefix = "remotes/"-->Line_57 $$ remotePrefix = GitBranch.REFS_REMOTES_PREFIX[ FD ]
Line_55 $$ remotePrefix = "remotes/"-->Line_62 $$ b = b.substring(remotePrefix.length())[ FD ]
Line_48 $$ for (String b : split) -->Line_64 $$ final int idx = b.indexOf("HEAD ->")[ FD ]
Line_48 $$ for (String b : split) -->Line_50 $$ if (b.equals(NO_BRANCH_NAME)) [ FD ]
Line_15 $$ if (remoteWanted) -->Line_17 $$ remoteOnly = true[ CD ]
Line_49 $$ b = b.substring(2).trim()-->Line_56 $$ if (b.startsWith(GitBranch.REFS_REMOTES_PREFIX)) [ FD ]
Line_17 $$ remoteOnly = true-->Line_61 $$ if (!remoteOnly) [ FD ]
Line_11 $$ boolean remoteOnly = false-->Line_17 $$ remoteOnly = true[ FD ]
Line_49 $$ b = b.substring(2).trim()-->Line_62 $$ b = b.substring(remotePrefix.length())[ FD ]
Line_12 $$ if (remoteWanted && localWanted) -->Line_14 $$ remoteOnly = false[ CD ]
Line_53 $$ String remotePrefix = null-->Line_62 $$ b = b.substring(remotePrefix.length())[ FD ]
Line_49 $$ b = b.substring(2).trim()-->Line_64 $$ final int idx = b.indexOf("HEAD ->")[ FD ]
Line_57 $$ remotePrefix = GitBranch.REFS_REMOTES_PREFIX-->Line_62 $$ b = b.substring(remotePrefix.length())[ FD ]
Line_27 $$ head = FileUtil.loadFile(new File(root.getPath(), GitRepositoryFiles.GIT_HEAD), CharsetToolkit.UTF8_CHARSET).trim()-->Line_29 $$ return head.startsWith(prefix) ? Collections.singletonList(head.substring(prefix.length())) : Collections.<String>emptyList()[ FD ]
Line_54 $$ if (b.startsWith("remotes/")) -->Line_56 $$ if (b.startsWith(GitBranch.REFS_REMOTES_PREFIX)) [ CD ]
Line_56 $$ if (b.startsWith(GitBranch.REFS_REMOTES_PREFIX)) -->Line_57 $$ remotePrefix = GitBranch.REFS_REMOTES_PREFIX[ CD ]
Line_49 $$ b = b.substring(2).trim()-->Line_69 $$ branches.add(b)[ FD ]
Line_49 $$ b = b.substring(2).trim()-->Line_50 $$ if (b.equals(NO_BRANCH_NAME)) [ FD ]
Line_49 $$ b = b.substring(2).trim()-->Line_54 $$ if (b.startsWith("remotes/")) [ FD ]
Line_14 $$ remoteOnly = false-->Line_61 $$ if (!remoteOnly) [ FD ]
