Line_5 $$ if (scopeOwner instanceof PyFile) -->Line_7 $$ if (file.getName().equals("core.py") && file.getParent().getName().equals("distutils")) [ CD ]
Line_3 $$ if ("setup".equals(function.getName())) -->Line_5 $$ if (scopeOwner instanceof PyFile) [ CD ]
Line_5 $$ if (scopeOwner instanceof PyFile) -->Line_6 $$ final PyFile file = (PyFile) scopeOwner[ CD ]
Line_3 $$ if ("setup".equals(function.getName())) -->Line_4 $$ final ScopeOwner scopeOwner = PsiTreeUtil.getParentOfType(function, ScopeOwner.class, true)[ CD ]
Line_8 $$ final List<String> arguments = getSetupPyKeywordArguments(file)-->Line_9 $$ if (arguments != null) [ FD ]
Line_7 $$ if (file.getName().equals("core.py") && file.getParent().getName().equals("distutils")) -->Line_8 $$ final List<String> arguments = getSetupPyKeywordArguments(file)[ CD ]
Line_9 $$ if (arguments != null) -->Line_10 $$ return arguments[ CD ]
Line_6 $$ final PyFile file = (PyFile) scopeOwner-->Line_8 $$ final List<String> arguments = getSetupPyKeywordArguments(file)[ FD ]
Line_7 $$ if (file.getName().equals("core.py") && file.getParent().getName().equals("distutils")) -->Line_9 $$ if (arguments != null) [ CD ]
Line_6 $$ final PyFile file = (PyFile) scopeOwner-->Line_7 $$ if (file.getName().equals("core.py") && file.getParent().getName().equals("distutils")) [ FD ]
Line_2 $$ public List<String> getKeywordArguments(PyFunction function, PyCallExpression callExpr) -->Line_15 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public List<String> getKeywordArguments(PyFunction function, PyCallExpression callExpr) -->Line_3 $$ if ("setup".equals(function.getName())) [ CD ]
Line_2 $$ public List<String> getKeywordArguments(PyFunction function, PyCallExpression callExpr) -->Line_4 $$ final ScopeOwner scopeOwner = PsiTreeUtil.getParentOfType(function, ScopeOwner.class, true)[ FD ]
Line_2 $$ public List<String> getKeywordArguments(PyFunction function, PyCallExpression callExpr) -->Line_3 $$ if ("setup".equals(function.getName())) [ FD ]
Line_4 $$ final ScopeOwner scopeOwner = PsiTreeUtil.getParentOfType(function, ScopeOwner.class, true)-->Line_5 $$ if (scopeOwner instanceof PyFile) [ FD ]
