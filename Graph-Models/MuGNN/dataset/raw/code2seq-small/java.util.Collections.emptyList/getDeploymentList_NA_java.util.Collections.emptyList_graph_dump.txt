Line_2 $$ private List<ModelNode> getDeploymentList(PathAddress address) throws IOException -->Line_7 $$ return result.isDefined() ? result.asList() : Collections.<ModelNode>emptyList()[ CD ]
Line_2 $$ private List<ModelNode> getDeploymentList(PathAddress address) throws IOException -->Line_5 $$ ModelNode response = testSupport.getDomainMasterLifecycleUtil().getDomainClient().execute(op)[ CD ]
Line_2 $$ private List<ModelNode> getDeploymentList(PathAddress address) throws IOException -->Line_4 $$ op.get("child-type").set("deployment")[ CD ]
Line_3 $$ ModelNode op = createEmptyOperation("read-children-names", address)-->Line_4 $$ op.get("child-type").set("deployment")[ FD ]
Line_5 $$ ModelNode response = testSupport.getDomainMasterLifecycleUtil().getDomainClient().execute(op)-->Line_6 $$ ModelNode result = validateResponse(response)[ FD ]
Line_6 $$ ModelNode result = validateResponse(response)-->Line_7 $$ return result.isDefined() ? result.asList() : Collections.<ModelNode>emptyList()[ FD ]
Line_2 $$ private List<ModelNode> getDeploymentList(PathAddress address) throws IOException -->Line_3 $$ ModelNode op = createEmptyOperation("read-children-names", address)[ CD ]
Line_2 $$ private List<ModelNode> getDeploymentList(PathAddress address) throws IOException -->Line_3 $$ ModelNode op = createEmptyOperation("read-children-names", address)[ FD ]
Line_3 $$ ModelNode op = createEmptyOperation("read-children-names", address)-->Line_5 $$ ModelNode response = testSupport.getDomainMasterLifecycleUtil().getDomainClient().execute(op)[ FD ]
Line_2 $$ private List<ModelNode> getDeploymentList(PathAddress address) throws IOException -->Line_6 $$ ModelNode result = validateResponse(response)[ CD ]
