Line_8 $$ final String importFQN = ((PsiImportStatement) importStatement).getQualifiedName()-->Line_37 $$ if (importFQN != null) [ FD ]
Line_29 $$ final String className = ref.getReferenceName()-->Line_34 $$ final PsiImportStatementBase statement = importList.findSingleImportStatement(className)[ FD ]
Line_14 $$ if (classRef != null) -->Line_16 $$ if (importFQN != null) [ CD ]
Line_34 $$ final PsiImportStatementBase statement = importList.findSingleImportStatement(className)-->Line_35 $$ if (statement instanceof PsiImportStatement) [ FD ]
Line_8 $$ final String importFQN = ((PsiImportStatement) importStatement).getQualifiedName()-->Line_38 $$ return Collections.singleton(importFQN)[ FD ]
Line_13 $$ final PsiJavaCodeReferenceElement classRef = ((PsiImportStaticStatementImpl) importStatement).getClassReference()-->Line_15 $$ final String importFQN = classRef.getQualifiedName()[ FD ]
Line_33 $$ if (importList != null) -->Line_35 $$ if (statement instanceof PsiImportStatement) [ CD ]
Line_31 $$ if (className != null && file instanceof PsiJavaFile) -->Line_33 $$ if (importList != null) [ CD ]
Line_35 $$ if (statement instanceof PsiImportStatement) -->Line_41 $$ List<String> res = new ArrayList<String>()[ CD ]
Line_8 $$ final String importFQN = ((PsiImportStatement) importStatement).getQualifiedName()-->Line_17 $$ return Collections.singleton(importFQN)[ FD ]
Line_7 $$ if (importStatement instanceof PsiImportStatement) -->Line_8 $$ final String importFQN = ((PsiImportStatement) importStatement).getQualifiedName()[ CD ]
Line_41 $$ List<String> res = new ArrayList<String>()-->Line_45 $$ res.add(((PsiImportStatement) imp).getQualifiedName() + "." + className)[ FD ]
Line_9 $$ if (importFQN != null && !importFQN.endsWith("*")) -->Line_10 $$ return Collections.singleton(importFQN)[ CD ]
Line_37 $$ if (importFQN != null) -->Line_38 $$ return Collections.singleton(importFQN)[ CD ]
Line_35 $$ if (statement instanceof PsiImportStatement) -->Line_37 $$ if (importFQN != null) [ CD ]
Line_8 $$ final String importFQN = ((PsiImportStatement) importStatement).getQualifiedName()-->Line_10 $$ return Collections.singleton(importFQN)[ FD ]
Line_12 $$ if (importStatement instanceof PsiImportStaticStatementImpl) -->Line_13 $$ final PsiJavaCodeReferenceElement classRef = ((PsiImportStaticStatementImpl) importStatement).getClassReference()[ CD ]
Line_32 $$ final PsiImportList importList = ((PsiJavaFile) file).getImportList()-->Line_33 $$ if (importList != null) [ FD ]
Line_44 $$ if (imp.isOnDemand() && imp instanceof PsiImportStatement) -->Line_45 $$ res.add(((PsiImportStatement) imp).getQualifiedName() + "." + className)[ CD ]
Line_35 $$ if (statement instanceof PsiImportStatement) -->Line_48 $$ return res[ CD ]
Line_8 $$ final String importFQN = ((PsiImportStatement) importStatement).getQualifiedName()-->Line_9 $$ if (importFQN != null && !importFQN.endsWith("*")) [ FD ]
Line_32 $$ final PsiImportList importList = ((PsiJavaFile) file).getImportList()-->Line_34 $$ final PsiImportStatementBase statement = importList.findSingleImportStatement(className)[ FD ]
Line_16 $$ if (importFQN != null) -->Line_17 $$ return Collections.singleton(importFQN)[ CD ]
Line_7 $$ if (importStatement instanceof PsiImportStatement) -->Line_9 $$ if (importFQN != null && !importFQN.endsWith("*")) [ CD ]
Line_8 $$ final String importFQN = ((PsiImportStatement) importStatement).getQualifiedName()-->Line_16 $$ if (importFQN != null) [ FD ]
Line_33 $$ if (importList != null) -->Line_34 $$ final PsiImportStatementBase statement = importList.findSingleImportStatement(className)[ CD ]
Line_31 $$ if (className != null && file instanceof PsiJavaFile) -->Line_32 $$ final PsiImportList importList = ((PsiJavaFile) file).getImportList()[ CD ]
Line_4 $$ final PsiImportStatementBase importStatement = PsiTreeUtil.getParentOfType(ref.getElement(), PsiImportStatementBase.class)-->Line_7 $$ if (importStatement instanceof PsiImportStatement) [ FD ]
Line_4 $$ final PsiImportStatementBase importStatement = PsiTreeUtil.getParentOfType(ref.getElement(), PsiImportStatementBase.class)-->Line_12 $$ if (importStatement instanceof PsiImportStaticStatementImpl) [ FD ]
Line_14 $$ if (classRef != null) -->Line_15 $$ final String importFQN = classRef.getQualifiedName()[ CD ]
Line_23 $$ final PsiElement qualifier = ref.getQualifier()-->Line_24 $$ if (qualifier instanceof PsiQualifiedReference) [ FD ]
Line_12 $$ if (importStatement instanceof PsiImportStaticStatementImpl) -->Line_14 $$ if (classRef != null) [ CD ]
Line_13 $$ final PsiJavaCodeReferenceElement classRef = ((PsiImportStaticStatementImpl) importStatement).getClassReference()-->Line_14 $$ if (classRef != null) [ FD ]
Line_35 $$ if (statement instanceof PsiImportStatement) -->Line_36 $$ final String importFQN = ((PsiImportStatement) statement).getQualifiedName()[ CD ]
Line_7 $$ if (importStatement instanceof PsiImportStatement) -->Line_12 $$ if (importStatement instanceof PsiImportStaticStatementImpl) [ CD ]
