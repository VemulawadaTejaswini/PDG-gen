Line_30 $$ for (GrField field : ((GrTypeDefinition) trait).getCodeFields()) -->Line_31 $$ if (!field.isProperty())[ FD ]
Line_36 $$ GrAccessorMethod setter = field.getSetter()-->Line_38 $$ addCandidate(setter, substitutor)[ FD ]
Line_30 $$ for (GrField field : ((GrTypeDefinition) trait).getCodeFields()) -->Line_33 $$ for (GrAccessorMethod method : field.getGetters()) [ FD ]
Line_25 $$ for (GrMethod method : ((GrTypeDefinition) trait).getCodeMethods()) -->Line_34 $$ addCandidate(method, substitutor)[ FD ]
Line_25 $$ for (GrMethod method : ((GrTypeDefinition) trait).getCodeMethods()) -->Line_43 $$ addCandidate(method, substitutor)[ FD ]
Line_21 $$ List<CandidateInfo> concreteTraitMethods = new TraitProcessor<PsiMethod>(trait, resolveResult.getSubstitutor()) -->Line_24 $$ if (trait instanceof GrTypeDefinition) [ CD ]
Line_26 $$ if (!method.getModifierList().hasExplicitModifier(PsiModifier.ABSTRACT)) -->Line_27 $$ addCandidate(method, substitutor)[ CD ]
Line_10 $$ Set<MethodSignature> existingSignatures = ContainerUtil.newHashSet(ContainerUtil.map(codeMethods, new Function<PsiMethod, MethodSignature>() -->Line_14 $$ return method.getSignature(PsiSubstitutor.EMPTY)[ CD ]
Line_6 $$ final PsiClassType[] types = myDefinition.getImplementsListTypes()-->Line_7 $$ List<PsiClassType.ClassResolveResult> traits = getSuperTraitsByCorrectOrder(types)[ FD ]
Line_21 $$ List<CandidateInfo> concreteTraitMethods = new TraitProcessor<PsiMethod>(trait, resolveResult.getSubstitutor()) -->Line_27 $$ addCandidate(method, substitutor)[ FD ]
Line_37 $$ if (setter != null) -->Line_38 $$ addCandidate(setter, substitutor)[ CD ]
Line_21 $$ List<CandidateInfo> concreteTraitMethods = new TraitProcessor<PsiMethod>(trait, resolveResult.getSubstitutor()) -->Line_34 $$ addCandidate(method, substitutor)[ FD ]
Line_10 $$ Set<MethodSignature> existingSignatures = ContainerUtil.newHashSet(ContainerUtil.map(codeMethods, new Function<PsiMethod, MethodSignature>() -->Line_26 $$ if (!method.getModifierList().hasExplicitModifier(PsiModifier.ABSTRACT)) [ FD ]
Line_21 $$ List<CandidateInfo> concreteTraitMethods = new TraitProcessor<PsiMethod>(trait, resolveResult.getSubstitutor()) -->Line_24 $$ if (trait instanceof GrTypeDefinition) [ FD ]
Line_7 $$ List<PsiClassType.ClassResolveResult> traits = getSuperTraitsByCorrectOrder(types)-->Line_8 $$ if (traits.isEmpty())[ FD ]
Line_36 $$ GrAccessorMethod setter = field.getSetter()-->Line_37 $$ if (setter != null) [ FD ]
Line_10 $$ Set<MethodSignature> existingSignatures = ContainerUtil.newHashSet(ContainerUtil.map(codeMethods, new Function<PsiMethod, MethodSignature>() -->Line_34 $$ addCandidate(method, substitutor)[ FD ]
Line_30 $$ for (GrField field : ((GrTypeDefinition) trait).getCodeFields()) -->Line_36 $$ GrAccessorMethod setter = field.getSetter()[ FD ]
Line_24 $$ if (trait instanceof GrTypeDefinition) -->Line_41 $$ if (trait instanceof ClsClassImpl) [ CD ]
Line_21 $$ List<CandidateInfo> concreteTraitMethods = new TraitProcessor<PsiMethod>(trait, resolveResult.getSubstitutor()) -->Line_43 $$ addCandidate(method, substitutor)[ FD ]
Line_4 $$ if (myDefinition.isInterface() && !myDefinition.isTrait())-->Line_5 $$ return Collections.emptyList()[ CD ]
Line_25 $$ for (GrMethod method : ((GrTypeDefinition) trait).getCodeMethods()) -->Line_26 $$ if (!method.getModifierList().hasExplicitModifier(PsiModifier.ABSTRACT)) [ FD ]
Line_25 $$ for (GrMethod method : ((GrTypeDefinition) trait).getCodeMethods()) -->Line_27 $$ addCandidate(method, substitutor)[ FD ]
Line_21 $$ List<CandidateInfo> concreteTraitMethods = new TraitProcessor<PsiMethod>(trait, resolveResult.getSubstitutor()) -->Line_38 $$ addCandidate(setter, substitutor)[ FD ]
Line_10 $$ Set<MethodSignature> existingSignatures = ContainerUtil.newHashSet(ContainerUtil.map(codeMethods, new Function<PsiMethod, MethodSignature>() -->Line_14 $$ return method.getSignature(PsiSubstitutor.EMPTY)[ FD ]
Line_51 $$ if (existingSignatures.add(impl.getSignature(PsiSubstitutor.EMPTY))) -->Line_52 $$ result.add(impl)[ CD ]
Line_10 $$ Set<MethodSignature> existingSignatures = ContainerUtil.newHashSet(ContainerUtil.map(codeMethods, new Function<PsiMethod, MethodSignature>() -->Line_51 $$ if (existingSignatures.add(impl.getSignature(PsiSubstitutor.EMPTY))) [ FD ]
Line_10 $$ Set<MethodSignature> existingSignatures = ContainerUtil.newHashSet(ContainerUtil.map(codeMethods, new Function<PsiMethod, MethodSignature>() -->Line_27 $$ addCandidate(method, substitutor)[ FD ]
Line_8 $$ if (traits.isEmpty())-->Line_9 $$ return Collections.emptyList()[ CD ]
Line_21 $$ List<CandidateInfo> concreteTraitMethods = new TraitProcessor<PsiMethod>(trait, resolveResult.getSubstitutor()) -->Line_41 $$ if (trait instanceof ClsClassImpl) [ FD ]
Line_10 $$ Set<MethodSignature> existingSignatures = ContainerUtil.newHashSet(ContainerUtil.map(codeMethods, new Function<PsiMethod, MethodSignature>() -->Line_43 $$ addCandidate(method, substitutor)[ FD ]
