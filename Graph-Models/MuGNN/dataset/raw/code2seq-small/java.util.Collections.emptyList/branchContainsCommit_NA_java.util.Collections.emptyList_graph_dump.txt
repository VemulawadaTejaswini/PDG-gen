Line_2 $$ private List<String> branchContainsCommit(@NotNull GitRepository repository, @NotNull String tip, @NotNull String branchName) -->Line_3 $$ GitCommandResult result = myGit.branchContains(repository, tip)[ FD ]
Line_11 $$ if (!s.equals(branchName)) -->Line_12 $$ branches.add(s)[ CD ]
Line_9 $$ s = s.substring(2)-->Line_12 $$ branches.add(s)[ FD ]
Line_2 $$ private List<String> branchContainsCommit(@NotNull GitRepository repository, @NotNull String tip, @NotNull String branchName) -->Line_17 $$ LOG.info("Failed to get [git branch --contains] for hash [" + tip + "]. " + result)[ CD ]
Line_6 $$ for (String s : result.getOutput()) -->Line_9 $$ s = s.substring(2)[ FD ]
Line_5 $$ List<String> branches = new ArrayList<String>()-->Line_12 $$ branches.add(s)[ FD ]
Line_7 $$ s = s.trim()-->Line_8 $$ if (s.startsWith("*")) [ FD ]
Line_8 $$ if (s.startsWith("*")) -->Line_9 $$ s = s.substring(2)[ CD ]
Line_3 $$ GitCommandResult result = myGit.branchContains(repository, tip)-->Line_4 $$ if (result.success()) [ FD ]
Line_2 $$ private List<String> branchContainsCommit(@NotNull GitRepository repository, @NotNull String tip, @NotNull String branchName) -->Line_18 $$ return Collections.emptyList()[ CD ]
Line_6 $$ for (String s : result.getOutput()) -->Line_12 $$ branches.add(s)[ FD ]
Line_6 $$ for (String s : result.getOutput()) -->Line_7 $$ s = s.trim()[ FD ]
Line_7 $$ s = s.trim()-->Line_9 $$ s = s.substring(2)[ FD ]
Line_6 $$ for (String s : result.getOutput()) -->Line_11 $$ if (!s.equals(branchName)) [ FD ]
Line_2 $$ private List<String> branchContainsCommit(@NotNull GitRepository repository, @NotNull String tip, @NotNull String branchName) -->Line_4 $$ if (result.success()) [ CD ]
Line_3 $$ GitCommandResult result = myGit.branchContains(repository, tip)-->Line_6 $$ for (String s : result.getOutput()) [ FD ]
Line_2 $$ private List<String> branchContainsCommit(@NotNull GitRepository repository, @NotNull String tip, @NotNull String branchName) -->Line_11 $$ if (!s.equals(branchName)) [ FD ]
Line_4 $$ if (result.success()) -->Line_5 $$ List<String> branches = new ArrayList<String>()[ CD ]
Line_6 $$ for (String s : result.getOutput()) -->Line_8 $$ if (s.startsWith("*")) [ FD ]
Line_2 $$ private List<String> branchContainsCommit(@NotNull GitRepository repository, @NotNull String tip, @NotNull String branchName) -->Line_3 $$ GitCommandResult result = myGit.branchContains(repository, tip)[ CD ]
Line_7 $$ s = s.trim()-->Line_11 $$ if (!s.equals(branchName)) [ FD ]
Line_4 $$ if (result.success()) -->Line_15 $$ return branches[ CD ]
Line_7 $$ s = s.trim()-->Line_12 $$ branches.add(s)[ FD ]
Line_9 $$ s = s.substring(2)-->Line_11 $$ if (!s.equals(branchName)) [ FD ]
