Line_17 $$ TextRange textRange = e.getTextRange()-->Line_20 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 2)[ FD ]
Line_20 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 2)-->Line_24 $$ if (offsetRange.contains(cursorOffset) && offsetRange.getLength() > 1) [ FD ]
Line_20 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 2)-->Line_25 $$ return Collections.singletonList(offsetRange)[ FD ]
Line_11 $$ ASTNode node = nextCommaSibling.getNode()-->Line_13 $$ IElementType commaType = node.getElementType()[ FD ]
Line_12 $$ if (node != null) -->Line_14 $$ if (commaType == PyTokenTypes.COMMA) [ CD ]
Line_14 $$ if (commaType == PyTokenTypes.COMMA) -->Line_16 $$ if (nextSpaceSibling != null) [ CD ]
Line_19 $$ if (nextSpaceSibling instanceof PsiWhiteSpace) -->Line_22 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 1)[ CD ]
Line_18 $$ TextRange offsetRange-->Line_20 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 2)[ FD ]
Line_13 $$ IElementType commaType = node.getElementType()-->Line_14 $$ if (commaType == PyTokenTypes.COMMA) [ FD ]
Line_11 $$ ASTNode node = nextCommaSibling.getNode()-->Line_12 $$ if (node != null) [ FD ]
Line_16 $$ if (nextSpaceSibling != null) -->Line_17 $$ TextRange textRange = e.getTextRange()[ CD ]
Line_18 $$ TextRange offsetRange-->Line_22 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 1)[ FD ]
Line_22 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 1)-->Line_24 $$ if (offsetRange.contains(cursorOffset) && offsetRange.getLength() > 1) [ FD ]
Line_18 $$ TextRange offsetRange-->Line_24 $$ if (offsetRange.contains(cursorOffset) && offsetRange.getLength() > 1) [ FD ]
Line_16 $$ if (nextSpaceSibling != null) -->Line_19 $$ if (nextSpaceSibling instanceof PsiWhiteSpace) [ CD ]
Line_17 $$ TextRange textRange = e.getTextRange()-->Line_22 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 1)[ FD ]
Line_20 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 2)-->Line_22 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 1)[ FD ]
Line_10 $$ if (nextCommaSibling != null) -->Line_12 $$ if (node != null) [ CD ]
Line_15 $$ PsiElement nextSpaceSibling = nextCommaSibling.getNextSibling()-->Line_19 $$ if (nextSpaceSibling instanceof PsiWhiteSpace) [ FD ]
Line_22 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 1)-->Line_25 $$ return Collections.singletonList(offsetRange)[ FD ]
Line_10 $$ if (nextCommaSibling != null) -->Line_11 $$ ASTNode node = nextCommaSibling.getNode()[ CD ]
Line_15 $$ PsiElement nextSpaceSibling = nextCommaSibling.getNextSibling()-->Line_16 $$ if (nextSpaceSibling != null) [ FD ]
Line_24 $$ if (offsetRange.contains(cursorOffset) && offsetRange.getLength() > 1) -->Line_25 $$ return Collections.singletonList(offsetRange)[ CD ]
Line_9 $$ PsiElement nextCommaSibling = e.getNextSibling()-->Line_15 $$ PsiElement nextSpaceSibling = nextCommaSibling.getNextSibling()[ FD ]
Line_9 $$ PsiElement nextCommaSibling = e.getNextSibling()-->Line_10 $$ if (nextCommaSibling != null) [ FD ]
Line_12 $$ if (node != null) -->Line_13 $$ IElementType commaType = node.getElementType()[ CD ]
Line_19 $$ if (nextSpaceSibling instanceof PsiWhiteSpace) -->Line_20 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 2)[ CD ]
Line_16 $$ if (nextSpaceSibling != null) -->Line_18 $$ TextRange offsetRange[ CD ]
Line_16 $$ if (nextSpaceSibling != null) -->Line_24 $$ if (offsetRange.contains(cursorOffset) && offsetRange.getLength() > 1) [ CD ]
Line_14 $$ if (commaType == PyTokenTypes.COMMA) -->Line_15 $$ PsiElement nextSpaceSibling = nextCommaSibling.getNextSibling()[ CD ]
Line_18 $$ TextRange offsetRange-->Line_25 $$ return Collections.singletonList(offsetRange)[ FD ]
Line_9 $$ PsiElement nextCommaSibling = e.getNextSibling()-->Line_11 $$ ASTNode node = nextCommaSibling.getNode()[ FD ]
