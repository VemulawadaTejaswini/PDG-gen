Line_14 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 2)-->Line_19 $$ return Collections.singletonList(offsetRange)[ FD ]
Line_16 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 1)-->Line_18 $$ if (offsetRange.contains(cursorOffset) && offsetRange.getLength() > 1) [ FD ]
Line_7 $$ IElementType commaType = node.getElementType()-->Line_8 $$ if (commaType == PyTokenTypes.COMMA) [ FD ]
Line_14 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 2)-->Line_18 $$ if (offsetRange.contains(cursorOffset) && offsetRange.getLength() > 1) [ FD ]
Line_4 $$ if (nextCommaSibling != null) -->Line_5 $$ ASTNode node = nextCommaSibling.getNode()[ CD ]
Line_10 $$ if (nextSpaceSibling != null) -->Line_13 $$ if (nextSpaceSibling instanceof PsiWhiteSpace) [ CD ]
Line_2 $$ private static List<TextRange> addNextComma(PsiElement e, int cursorOffset) -->Line_3 $$ PsiElement nextCommaSibling = e.getNextSibling()[ CD ]
Line_3 $$ PsiElement nextCommaSibling = e.getNextSibling()-->Line_4 $$ if (nextCommaSibling != null) [ FD ]
Line_2 $$ private static List<TextRange> addNextComma(PsiElement e, int cursorOffset) -->Line_25 $$ return Collections.emptyList()[ CD ]
Line_3 $$ PsiElement nextCommaSibling = e.getNextSibling()-->Line_9 $$ PsiElement nextSpaceSibling = nextCommaSibling.getNextSibling()[ FD ]
Line_5 $$ ASTNode node = nextCommaSibling.getNode()-->Line_6 $$ if (node != null) [ FD ]
Line_11 $$ TextRange textRange = e.getTextRange()-->Line_16 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 1)[ FD ]
Line_8 $$ if (commaType == PyTokenTypes.COMMA) -->Line_10 $$ if (nextSpaceSibling != null) [ CD ]
Line_3 $$ PsiElement nextCommaSibling = e.getNextSibling()-->Line_5 $$ ASTNode node = nextCommaSibling.getNode()[ FD ]
Line_8 $$ if (commaType == PyTokenTypes.COMMA) -->Line_9 $$ PsiElement nextSpaceSibling = nextCommaSibling.getNextSibling()[ CD ]
Line_2 $$ private static List<TextRange> addNextComma(PsiElement e, int cursorOffset) -->Line_3 $$ PsiElement nextCommaSibling = e.getNextSibling()[ FD ]
Line_14 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 2)-->Line_16 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 1)[ FD ]
Line_2 $$ private static List<TextRange> addNextComma(PsiElement e, int cursorOffset) -->Line_18 $$ if (offsetRange.contains(cursorOffset) && offsetRange.getLength() > 1) [ FD ]
Line_12 $$ TextRange offsetRange-->Line_19 $$ return Collections.singletonList(offsetRange)[ FD ]
Line_13 $$ if (nextSpaceSibling instanceof PsiWhiteSpace) -->Line_14 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 2)[ CD ]
Line_4 $$ if (nextCommaSibling != null) -->Line_6 $$ if (node != null) [ CD ]
Line_5 $$ ASTNode node = nextCommaSibling.getNode()-->Line_7 $$ IElementType commaType = node.getElementType()[ FD ]
Line_2 $$ private static List<TextRange> addNextComma(PsiElement e, int cursorOffset) -->Line_11 $$ TextRange textRange = e.getTextRange()[ FD ]
Line_9 $$ PsiElement nextSpaceSibling = nextCommaSibling.getNextSibling()-->Line_13 $$ if (nextSpaceSibling instanceof PsiWhiteSpace) [ FD ]
Line_12 $$ TextRange offsetRange-->Line_16 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 1)[ FD ]
Line_18 $$ if (offsetRange.contains(cursorOffset) && offsetRange.getLength() > 1) -->Line_19 $$ return Collections.singletonList(offsetRange)[ CD ]
Line_12 $$ TextRange offsetRange-->Line_14 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 2)[ FD ]
Line_12 $$ TextRange offsetRange-->Line_18 $$ if (offsetRange.contains(cursorOffset) && offsetRange.getLength() > 1) [ FD ]
Line_16 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 1)-->Line_19 $$ return Collections.singletonList(offsetRange)[ FD ]
Line_2 $$ private static List<TextRange> addNextComma(PsiElement e, int cursorOffset) -->Line_4 $$ if (nextCommaSibling != null) [ CD ]
Line_10 $$ if (nextSpaceSibling != null) -->Line_12 $$ TextRange offsetRange[ CD ]
Line_6 $$ if (node != null) -->Line_8 $$ if (commaType == PyTokenTypes.COMMA) [ CD ]
Line_9 $$ PsiElement nextSpaceSibling = nextCommaSibling.getNextSibling()-->Line_10 $$ if (nextSpaceSibling != null) [ FD ]
Line_6 $$ if (node != null) -->Line_7 $$ IElementType commaType = node.getElementType()[ CD ]
Line_13 $$ if (nextSpaceSibling instanceof PsiWhiteSpace) -->Line_16 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 1)[ CD ]
Line_11 $$ TextRange textRange = e.getTextRange()-->Line_14 $$ offsetRange = new TextRange(textRange.getStartOffset(), textRange.getEndOffset() + 2)[ FD ]
Line_10 $$ if (nextSpaceSibling != null) -->Line_18 $$ if (offsetRange.contains(cursorOffset) && offsetRange.getLength() > 1) [ CD ]
Line_10 $$ if (nextSpaceSibling != null) -->Line_11 $$ TextRange textRange = e.getTextRange()[ CD ]
