Line_22 $$ embedder.executeWithMavenSession(r, new Runnable() -->Line_26 $$ request.setResourceFetcher(new Maven3ServerIndexFetcher(index.getRepositoryId(), index.getRepositoryUrl(), embedder.getComponent(WagonManager.class), embedder.getComponent(RepositorySystem.class), new WagonTransferListenerAdapter(indicator) [ CD ]
Line_7 $$ if (repository != null) -->Line_19 $$ MavenExecutionRequest r = embedder.createRequest(null, Collections.<String>emptyList(), Collections.<String>emptyList(), Collections.<String>emptyList())[ CD ]
Line_26 $$ request.setResourceFetcher(new Maven3ServerIndexFetcher(index.getRepositoryId(), index.getRepositoryUrl(), embedder.getComponent(WagonManager.class), embedder.getComponent(RepositorySystem.class), new WagonTransferListenerAdapter(indicator) -->Line_40 $$ super.transferCompleted(event)[ CD ]
Line_18 $$ final Maven3ServerEmbedder embedder = createEmbedder(settings)-->Line_26 $$ request.setResourceFetcher(new Maven3ServerIndexFetcher(index.getRepositoryId(), index.getRepositoryUrl(), embedder.getComponent(WagonManager.class), embedder.getComponent(RepositorySystem.class), new WagonTransferListenerAdapter(indicator) [ FD ]
Line_4 $$ final IndexingContext index = getIndex(id)-->Line_6 $$ File repository = index.getRepository()[ FD ]
Line_20 $$ final IndexUpdateRequest request = new IndexUpdateRequest(index)-->Line_49 $$ myUpdater.fetchAndUpdateIndex(request)[ FD ]
Line_4 $$ final IndexingContext index = getIndex(id)-->Line_26 $$ request.setResourceFetcher(new Maven3ServerIndexFetcher(index.getRepositoryId(), index.getRepositoryUrl(), embedder.getComponent(WagonManager.class), embedder.getComponent(RepositorySystem.class), new WagonTransferListenerAdapter(indicator) [ FD ]
Line_18 $$ final Maven3ServerEmbedder embedder = createEmbedder(settings)-->Line_22 $$ embedder.executeWithMavenSession(r, new Runnable() [ FD ]
Line_7 $$ if (repository != null) -->Line_20 $$ final IndexUpdateRequest request = new IndexUpdateRequest(index)[ CD ]
Line_19 $$ MavenExecutionRequest r = embedder.createRequest(null, Collections.<String>emptyList(), Collections.<String>emptyList(), Collections.<String>emptyList())-->Line_22 $$ embedder.executeWithMavenSession(r, new Runnable() [ FD ]
Line_26 $$ request.setResourceFetcher(new Maven3ServerIndexFetcher(index.getRepositoryId(), index.getRepositoryUrl(), embedder.getComponent(WagonManager.class), embedder.getComponent(RepositorySystem.class), new WagonTransferListenerAdapter(indicator) -->Line_30 $$ super.downloadProgress(downloaded, total)[ FD ]
Line_7 $$ if (repository != null) -->Line_18 $$ final Maven3ServerEmbedder embedder = createEmbedder(settings)[ CD ]
Line_18 $$ final Maven3ServerEmbedder embedder = createEmbedder(settings)-->Line_56 $$ embedder.release()[ FD ]
Line_6 $$ File repository = index.getRepository()-->Line_7 $$ if (repository != null) [ FD ]
Line_26 $$ request.setResourceFetcher(new Maven3ServerIndexFetcher(index.getRepositoryId(), index.getRepositoryUrl(), embedder.getComponent(WagonManager.class), embedder.getComponent(RepositorySystem.class), new WagonTransferListenerAdapter(indicator) -->Line_30 $$ super.downloadProgress(downloaded, total)[ CD ]
Line_20 $$ final IndexUpdateRequest request = new IndexUpdateRequest(index)-->Line_26 $$ request.setResourceFetcher(new Maven3ServerIndexFetcher(index.getRepositoryId(), index.getRepositoryUrl(), embedder.getComponent(WagonManager.class), embedder.getComponent(RepositorySystem.class), new WagonTransferListenerAdapter(indicator) [ FD ]
Line_26 $$ request.setResourceFetcher(new Maven3ServerIndexFetcher(index.getRepositoryId(), index.getRepositoryUrl(), embedder.getComponent(WagonManager.class), embedder.getComponent(RepositorySystem.class), new WagonTransferListenerAdapter(indicator) -->Line_40 $$ super.transferCompleted(event)[ FD ]
Line_18 $$ final Maven3ServerEmbedder embedder = createEmbedder(settings)-->Line_19 $$ MavenExecutionRequest r = embedder.createRequest(null, Collections.<String>emptyList(), Collections.<String>emptyList(), Collections.<String>emptyList())[ FD ]
Line_4 $$ final IndexingContext index = getIndex(id)-->Line_12 $$ myIndexer.scan(index, new MyScanningListener(indicator), false)[ FD ]
