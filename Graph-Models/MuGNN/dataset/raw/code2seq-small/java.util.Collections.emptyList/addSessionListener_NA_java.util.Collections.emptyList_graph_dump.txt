Line_7 $$ ArgumentCaptor<HttpSessionEvent> event = ArgumentCaptor.forClass(HttpSessionEvent.class)-->Line_17 $$ assertSame(session, event.getValue().getSession())[ FD ]
Line_7 $$ ArgumentCaptor<HttpSessionEvent> event = ArgumentCaptor.forClass(HttpSessionEvent.class)-->Line_16 $$ verify(listener).sessionDestroyed(event.capture())[ FD ]
Line_3 $$ HttpSessionListener listener = mock(HttpSessionListener.class)-->Line_16 $$ verify(listener).sessionDestroyed(event.capture())[ FD ]
Line_14 $$ event = ArgumentCaptor.forClass(HttpSessionEvent.class)-->Line_17 $$ assertSame(session, event.getValue().getSession())[ FD ]
Line_2 $$ public void addSessionListener() throws ServletException -->Line_3 $$ HttpSessionListener listener = mock(HttpSessionListener.class)[ CD ]
Line_2 $$ public void addSessionListener() throws ServletException -->Line_17 $$ assertSame(session, event.getValue().getSession())[ CD ]
Line_7 $$ ArgumentCaptor<HttpSessionEvent> event = ArgumentCaptor.forClass(HttpSessionEvent.class)-->Line_13 $$ assertSame(session, event.getValue().getSession())[ FD ]
Line_6 $$ ApplicationListeners listeners = new ApplicationListeners(Collections.<ManagedListener>emptyList(), context)-->Line_11 $$ listeners.sessionCreated(session)[ FD ]
Line_6 $$ ApplicationListeners listeners = new ApplicationListeners(Collections.<ManagedListener>emptyList(), context)-->Line_10 $$ listeners.start()[ FD ]
Line_2 $$ public void addSessionListener() throws ServletException -->Line_4 $$ ServletContext context = mock(ServletContext.class)[ CD ]
Line_2 $$ public void addSessionListener() throws ServletException -->Line_7 $$ ArgumentCaptor<HttpSessionEvent> event = ArgumentCaptor.forClass(HttpSessionEvent.class)[ CD ]
Line_5 $$ HttpSession session = mock(HttpSession.class)-->Line_15 $$ listeners.sessionDestroyed(session)[ FD ]
Line_2 $$ public void addSessionListener() throws ServletException -->Line_10 $$ listeners.start()[ CD ]
Line_2 $$ public void addSessionListener() throws ServletException -->Line_9 $$ this.context.addSessionListener(listener)[ CD ]
Line_2 $$ public void addSessionListener() throws ServletException -->Line_11 $$ listeners.sessionCreated(session)[ CD ]
Line_14 $$ event = ArgumentCaptor.forClass(HttpSessionEvent.class)-->Line_16 $$ verify(listener).sessionDestroyed(event.capture())[ FD ]
Line_2 $$ public void addSessionListener() throws ServletException -->Line_6 $$ ApplicationListeners listeners = new ApplicationListeners(Collections.<ManagedListener>emptyList(), context)[ CD ]
Line_2 $$ public void addSessionListener() throws ServletException -->Line_12 $$ verify(listener).sessionCreated(event.capture())[ CD ]
Line_3 $$ HttpSessionListener listener = mock(HttpSessionListener.class)-->Line_9 $$ this.context.addSessionListener(listener)[ FD ]
Line_6 $$ ApplicationListeners listeners = new ApplicationListeners(Collections.<ManagedListener>emptyList(), context)-->Line_8 $$ when(this.deployment.getApplicationListeners()).thenReturn(listeners)[ FD ]
Line_5 $$ HttpSession session = mock(HttpSession.class)-->Line_13 $$ assertSame(session, event.getValue().getSession())[ FD ]
Line_7 $$ ArgumentCaptor<HttpSessionEvent> event = ArgumentCaptor.forClass(HttpSessionEvent.class)-->Line_12 $$ verify(listener).sessionCreated(event.capture())[ FD ]
Line_2 $$ public void addSessionListener() throws ServletException -->Line_8 $$ when(this.deployment.getApplicationListeners()).thenReturn(listeners)[ CD ]
Line_2 $$ public void addSessionListener() throws ServletException -->Line_13 $$ assertSame(session, event.getValue().getSession())[ CD ]
Line_5 $$ HttpSession session = mock(HttpSession.class)-->Line_17 $$ assertSame(session, event.getValue().getSession())[ FD ]
Line_2 $$ public void addSessionListener() throws ServletException -->Line_5 $$ HttpSession session = mock(HttpSession.class)[ CD ]
Line_3 $$ HttpSessionListener listener = mock(HttpSessionListener.class)-->Line_12 $$ verify(listener).sessionCreated(event.capture())[ FD ]
Line_2 $$ public void addSessionListener() throws ServletException -->Line_15 $$ listeners.sessionDestroyed(session)[ CD ]
Line_2 $$ public void addSessionListener() throws ServletException -->Line_14 $$ event = ArgumentCaptor.forClass(HttpSessionEvent.class)[ CD ]
Line_6 $$ ApplicationListeners listeners = new ApplicationListeners(Collections.<ManagedListener>emptyList(), context)-->Line_15 $$ listeners.sessionDestroyed(session)[ FD ]
Line_2 $$ public void addSessionListener() throws ServletException -->Line_16 $$ verify(listener).sessionDestroyed(event.capture())[ CD ]
Line_7 $$ ArgumentCaptor<HttpSessionEvent> event = ArgumentCaptor.forClass(HttpSessionEvent.class)-->Line_14 $$ event = ArgumentCaptor.forClass(HttpSessionEvent.class)[ FD ]
Line_5 $$ HttpSession session = mock(HttpSession.class)-->Line_11 $$ listeners.sessionCreated(session)[ FD ]
