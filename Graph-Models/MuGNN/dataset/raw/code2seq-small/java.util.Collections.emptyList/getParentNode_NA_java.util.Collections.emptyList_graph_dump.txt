Line_5 $$ for (int i = 0; i < myGroupingRules.size(); i++) -->Line_6 $$ XBreakpointGroup group = myGroupingRules.get(i).getGroup(breakpoint.getBreakpoint(), Collections.emptyList())[ FD ]
Line_5 $$ for (int i = 0; i < myGroupingRules.size(); i++) -->Line_7 $$ if (group != null) [ CD ]
Line_7 $$ if (group != null) -->Line_9 $$ if (breakpoint.isEnabled()) [ CD ]
Line_6 $$ XBreakpointGroup group = myGroupingRules.get(i).getGroup(breakpoint.getBreakpoint(), Collections.emptyList())-->Line_7 $$ if (group != null) [ FD ]
Line_7 $$ if (group != null) -->Line_8 $$ parent = getOrCreateGroupNode(parent, group, i)[ CD ]
Line_6 $$ XBreakpointGroup group = myGroupingRules.get(i).getGroup(breakpoint.getBreakpoint(), Collections.emptyList())-->Line_8 $$ parent = getOrCreateGroupNode(parent, group, i)[ FD ]
Line_5 $$ for (int i = 0; i < myGroupingRules.size(); i++) -->Line_8 $$ parent = getOrCreateGroupNode(parent, group, i)[ FD ]
Line_4 $$ CheckedTreeNode parent = myRoot-->Line_10 $$ parent.setChecked(true)[ FD ]
Line_9 $$ if (breakpoint.isEnabled()) -->Line_10 $$ parent.setChecked(true)[ CD ]
Line_5 $$ for (int i = 0; i < myGroupingRules.size(); i++) -->Line_6 $$ XBreakpointGroup group = myGroupingRules.get(i).getGroup(breakpoint.getBreakpoint(), Collections.emptyList())[ CD ]
Line_4 $$ CheckedTreeNode parent = myRoot-->Line_8 $$ parent = getOrCreateGroupNode(parent, group, i)[ FD ]
Line_8 $$ parent = getOrCreateGroupNode(parent, group, i)-->Line_10 $$ parent.setChecked(true)[ FD ]
