Line_6 $$ if (group != null) -->Line_8 $$ if (breakpoint.isEnabled()) [ CD ]
Line_8 $$ if (breakpoint.isEnabled()) -->Line_9 $$ parent.setChecked(true)[ CD ]
Line_3 $$ CheckedTreeNode parent = myRoot-->Line_7 $$ parent = getOrCreateGroupNode(parent, group, i)[ FD ]
Line_5 $$ XBreakpointGroup group = myGroupingRules.get(i).getGroup(breakpoint.getBreakpoint(), Collections.emptyList())-->Line_7 $$ parent = getOrCreateGroupNode(parent, group, i)[ FD ]
Line_2 $$ private CheckedTreeNode getParentNode(final BreakpointItem breakpoint) -->Line_3 $$ CheckedTreeNode parent = myRoot[ CD ]
Line_4 $$ for (int i = 0; i < myGroupingRules.size(); i++) -->Line_5 $$ XBreakpointGroup group = myGroupingRules.get(i).getGroup(breakpoint.getBreakpoint(), Collections.emptyList())[ CD ]
Line_4 $$ for (int i = 0; i < myGroupingRules.size(); i++) -->Line_6 $$ if (group != null) [ CD ]
Line_6 $$ if (group != null) -->Line_7 $$ parent = getOrCreateGroupNode(parent, group, i)[ CD ]
Line_5 $$ XBreakpointGroup group = myGroupingRules.get(i).getGroup(breakpoint.getBreakpoint(), Collections.emptyList())-->Line_6 $$ if (group != null) [ FD ]
Line_4 $$ for (int i = 0; i < myGroupingRules.size(); i++) -->Line_7 $$ parent = getOrCreateGroupNode(parent, group, i)[ FD ]
Line_2 $$ private CheckedTreeNode getParentNode(final BreakpointItem breakpoint) -->Line_8 $$ if (breakpoint.isEnabled()) [ FD ]
Line_2 $$ private CheckedTreeNode getParentNode(final BreakpointItem breakpoint) -->Line_5 $$ XBreakpointGroup group = myGroupingRules.get(i).getGroup(breakpoint.getBreakpoint(), Collections.emptyList())[ FD ]
Line_4 $$ for (int i = 0; i < myGroupingRules.size(); i++) -->Line_5 $$ XBreakpointGroup group = myGroupingRules.get(i).getGroup(breakpoint.getBreakpoint(), Collections.emptyList())[ FD ]
Line_7 $$ parent = getOrCreateGroupNode(parent, group, i)-->Line_9 $$ parent.setChecked(true)[ FD ]
Line_2 $$ private CheckedTreeNode getParentNode(final BreakpointItem breakpoint) -->Line_13 $$ return parent[ CD ]
Line_3 $$ CheckedTreeNode parent = myRoot-->Line_9 $$ parent.setChecked(true)[ FD ]
Line_2 $$ private CheckedTreeNode getParentNode(final BreakpointItem breakpoint) -->Line_4 $$ for (int i = 0; i < myGroupingRules.size(); i++) [ CD ]
