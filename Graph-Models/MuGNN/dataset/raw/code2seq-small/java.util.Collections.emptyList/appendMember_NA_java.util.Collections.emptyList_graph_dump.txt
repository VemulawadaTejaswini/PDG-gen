Line_4 $$ final PsiClass psiClass = psiMember instanceof PsiClass ? ((PsiClass) psiMember) : psiMember.getContainingClass()-->Line_8 $$ results.put(psiClass, psiMethods)[ FD ]
Line_2 $$ private static boolean appendMember(final PsiMember psiMember, final Set<PsiMember> underConsideration, final Map<PsiClass, Map<PsiMethod, List<String>>> results) -->Line_5 $$ Map<PsiMethod, List<String>> psiMethods = results.get(psiClass)[ FD ]
Line_2 $$ private static boolean appendMember(final PsiMember psiMember, final Set<PsiMember> underConsideration, final Map<PsiClass, Map<PsiMethod, List<String>>> results) -->Line_20 $$ return result[ CD ]
Line_2 $$ private static boolean appendMember(final PsiMember psiMember, final Set<PsiMember> underConsideration, final Map<PsiClass, Map<PsiMethod, List<String>>> results) -->Line_4 $$ final PsiClass psiClass = psiMember instanceof PsiClass ? ((PsiClass) psiMember) : psiMember.getContainingClass()[ CD ]
Line_2 $$ private static boolean appendMember(final PsiMember psiMember, final Set<PsiMember> underConsideration, final Map<PsiClass, Map<PsiMethod, List<String>>> results) -->Line_5 $$ Map<PsiMethod, List<String>> psiMethods = results.get(psiClass)[ CD ]
Line_9 $$ if (psiMember instanceof PsiClass) -->Line_10 $$ result = underConsideration.add(psiMember)[ CD ]
Line_5 $$ Map<PsiMethod, List<String>> psiMethods = results.get(psiClass)-->Line_8 $$ results.put(psiClass, psiMethods)[ FD ]
Line_13 $$ if (psiMember instanceof PsiMethod) -->Line_15 $$ if (add) [ CD ]
Line_5 $$ Map<PsiMethod, List<String>> psiMethods = results.get(psiClass)-->Line_14 $$ final boolean add = psiMethods.put((PsiMethod) psiMember, Collections.<String>emptyList()) != null[ FD ]
Line_4 $$ final PsiClass psiClass = psiMember instanceof PsiClass ? ((PsiClass) psiMember) : psiMember.getContainingClass()-->Line_5 $$ Map<PsiMethod, List<String>> psiMethods = results.get(psiClass)[ FD ]
Line_13 $$ if (psiMember instanceof PsiMethod) -->Line_14 $$ final boolean add = psiMethods.put((PsiMethod) psiMember, Collections.<String>emptyList()) != null[ CD ]
Line_5 $$ Map<PsiMethod, List<String>> psiMethods = results.get(psiClass)-->Line_6 $$ if (psiMethods == null) [ FD ]
Line_7 $$ psiMethods = new LinkedHashMap<PsiMethod, List<String>>()-->Line_14 $$ final boolean add = psiMethods.put((PsiMethod) psiMember, Collections.<String>emptyList()) != null[ FD ]
Line_2 $$ private static boolean appendMember(final PsiMember psiMember, final Set<PsiMember> underConsideration, final Map<PsiClass, Map<PsiMethod, List<String>>> results) -->Line_16 $$ return underConsideration.add(psiMember)[ FD ]
Line_2 $$ private static boolean appendMember(final PsiMember psiMember, final Set<PsiMember> underConsideration, final Map<PsiClass, Map<PsiMethod, List<String>>> results) -->Line_4 $$ final PsiClass psiClass = psiMember instanceof PsiClass ? ((PsiClass) psiMember) : psiMember.getContainingClass()[ FD ]
Line_2 $$ private static boolean appendMember(final PsiMember psiMember, final Set<PsiMember> underConsideration, final Map<PsiClass, Map<PsiMethod, List<String>>> results) -->Line_8 $$ results.put(psiClass, psiMethods)[ FD ]
Line_6 $$ if (psiMethods == null) -->Line_7 $$ psiMethods = new LinkedHashMap<PsiMethod, List<String>>()[ CD ]
Line_6 $$ if (psiMethods == null) -->Line_8 $$ results.put(psiClass, psiMethods)[ CD ]
Line_2 $$ private static boolean appendMember(final PsiMember psiMember, final Set<PsiMember> underConsideration, final Map<PsiClass, Map<PsiMethod, List<String>>> results) -->Line_10 $$ result = underConsideration.add(psiMember)[ FD ]
Line_2 $$ private static boolean appendMember(final PsiMember psiMember, final Set<PsiMember> underConsideration, final Map<PsiClass, Map<PsiMethod, List<String>>> results) -->Line_3 $$ boolean result = false[ CD ]
Line_2 $$ private static boolean appendMember(final PsiMember psiMember, final Set<PsiMember> underConsideration, final Map<PsiClass, Map<PsiMethod, List<String>>> results) -->Line_6 $$ if (psiMethods == null) [ CD ]
Line_3 $$ boolean result = false-->Line_10 $$ result = underConsideration.add(psiMember)[ FD ]
Line_2 $$ private static boolean appendMember(final PsiMember psiMember, final Set<PsiMember> underConsideration, final Map<PsiClass, Map<PsiMethod, List<String>>> results) -->Line_13 $$ if (psiMember instanceof PsiMethod) [ CD ]
Line_2 $$ private static boolean appendMember(final PsiMember psiMember, final Set<PsiMember> underConsideration, final Map<PsiClass, Map<PsiMethod, List<String>>> results) -->Line_13 $$ if (psiMember instanceof PsiMethod) [ FD ]
Line_13 $$ if (psiMember instanceof PsiMethod) -->Line_18 $$ return false[ CD ]
Line_15 $$ if (add) -->Line_16 $$ return underConsideration.add(psiMember)[ CD ]
Line_7 $$ psiMethods = new LinkedHashMap<PsiMethod, List<String>>()-->Line_8 $$ results.put(psiClass, psiMethods)[ FD ]
Line_2 $$ private static boolean appendMember(final PsiMember psiMember, final Set<PsiMember> underConsideration, final Map<PsiClass, Map<PsiMethod, List<String>>> results) -->Line_9 $$ if (psiMember instanceof PsiClass) [ FD ]
Line_6 $$ if (psiMethods == null) -->Line_9 $$ if (psiMember instanceof PsiClass) [ CD ]
Line_5 $$ Map<PsiMethod, List<String>> psiMethods = results.get(psiClass)-->Line_7 $$ psiMethods = new LinkedHashMap<PsiMethod, List<String>>()[ FD ]
