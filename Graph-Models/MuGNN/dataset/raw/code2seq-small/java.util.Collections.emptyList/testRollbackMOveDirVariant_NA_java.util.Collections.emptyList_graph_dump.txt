Line_8 $$ final File wasUnversioned = new File(unv.getPath())-->Line_20 $$ Assert.assertTrue(wasUnversioned.exists())[ FD ]
Line_7 $$ final VirtualFile unv = createFileInCommand(tree.mySourceDir, "unv.txt", "***")-->Line_16 $$ Assert.assertTrue(unv.isValid())[ FD ]
Line_14 $$ final Change s2Change = assertMovedChange(tree.myS2File)-->Line_19 $$ rollbackIMpl(Arrays.asList(change, s2Change), Collections.<Change>emptyList())[ FD ]
Line_7 $$ final VirtualFile unv = createFileInCommand(tree.mySourceDir, "unv.txt", "***")-->Line_17 $$ Assert.assertTrue(!FileUtil.filesEqual(new File(unv.getPath()), wasUnversioned))[ FD ]
Line_8 $$ final File wasUnversioned = new File(unv.getPath())-->Line_18 $$ Assert.assertTrue(!wasUnversioned.exists())[ FD ]
Line_12 $$ final Change change = assertMovedChange(tree.mySourceDir)-->Line_19 $$ rollbackIMpl(Arrays.asList(change, s2Change), Collections.<Change>emptyList())[ FD ]
Line_7 $$ final VirtualFile unv = createFileInCommand(tree.mySourceDir, "unv.txt", "***")-->Line_8 $$ final File wasUnversioned = new File(unv.getPath())[ FD ]
Line_8 $$ final File wasUnversioned = new File(unv.getPath())-->Line_17 $$ Assert.assertTrue(!FileUtil.filesEqual(new File(unv.getPath()), wasUnversioned))[ FD ]
