Line_2 $$ private List<String> getMergedToBranches(@NotNull GitRepository repository, @NotNull String branchName) -->Line_7 $$ return branchContainsCommit(repository, tip, branchName)[ FD ]
Line_4 $$ if (tip == null) -->Line_5 $$ return Collections.emptyList()[ CD ]
Line_2 $$ private List<String> getMergedToBranches(@NotNull GitRepository repository, @NotNull String branchName) -->Line_4 $$ if (tip == null) [ CD ]
Line_3 $$ String tip = tip(repository, branchName)-->Line_7 $$ return branchContainsCommit(repository, tip, branchName)[ FD ]
Line_3 $$ String tip = tip(repository, branchName)-->Line_4 $$ if (tip == null) [ FD ]
Line_2 $$ private List<String> getMergedToBranches(@NotNull GitRepository repository, @NotNull String branchName) -->Line_3 $$ String tip = tip(repository, branchName)[ CD ]
Line_2 $$ private List<String> getMergedToBranches(@NotNull GitRepository repository, @NotNull String branchName) -->Line_3 $$ String tip = tip(repository, branchName)[ FD ]
Line_2 $$ private List<String> getMergedToBranches(@NotNull GitRepository repository, @NotNull String branchName) -->Line_7 $$ return branchContainsCommit(repository, tip, branchName)[ CD ]
