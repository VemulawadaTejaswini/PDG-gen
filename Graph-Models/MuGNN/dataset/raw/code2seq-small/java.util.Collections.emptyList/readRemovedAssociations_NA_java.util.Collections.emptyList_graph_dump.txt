Line_2 $$ public static List<Trinity<FileNameMatcher, String, Boolean>> readRemovedAssociations(@NotNull Element element) -->Line_4 $$ List<Element> children = element.getChildren(ELEMENT_REMOVED_MAPPING)[ CD ]
Line_8 $$ for (Element mapping : children) -->Line_11 $$ result.add(Trinity.create(matcher, mapping.getAttributeValue(ATTRIBUTE_TYPE), Boolean.parseBoolean(mapping.getAttributeValue(ATTRIBUTE_APPROVED))))[ FD ]
Line_3 $$ List<Trinity<FileNameMatcher, String, Boolean>> result = new SmartList<Trinity<FileNameMatcher, String, Boolean>>()-->Line_11 $$ result.add(Trinity.create(matcher, mapping.getAttributeValue(ATTRIBUTE_TYPE), Boolean.parseBoolean(mapping.getAttributeValue(ATTRIBUTE_APPROVED))))[ FD ]
Line_2 $$ public static List<Trinity<FileNameMatcher, String, Boolean>> readRemovedAssociations(@NotNull Element element) -->Line_3 $$ List<Trinity<FileNameMatcher, String, Boolean>> result = new SmartList<Trinity<FileNameMatcher, String, Boolean>>()[ CD ]
Line_5 $$ if (children.isEmpty()) -->Line_6 $$ return Collections.emptyList()[ CD ]
Line_10 $$ FileNameMatcher matcher = ext == null ? FileTypeManager.parseFromString(mapping.getAttributeValue(ATTRIBUTE_PATTERN)) : new ExtensionFileNameMatcher(ext)-->Line_11 $$ result.add(Trinity.create(matcher, mapping.getAttributeValue(ATTRIBUTE_TYPE), Boolean.parseBoolean(mapping.getAttributeValue(ATTRIBUTE_APPROVED))))[ FD ]
Line_2 $$ public static List<Trinity<FileNameMatcher, String, Boolean>> readRemovedAssociations(@NotNull Element element) -->Line_13 $$ return result[ CD ]
Line_8 $$ for (Element mapping : children) -->Line_9 $$ String ext = mapping.getAttributeValue(ATTRIBUTE_EXT)[ FD ]
Line_2 $$ public static List<Trinity<FileNameMatcher, String, Boolean>> readRemovedAssociations(@NotNull Element element) -->Line_4 $$ List<Element> children = element.getChildren(ELEMENT_REMOVED_MAPPING)[ FD ]
Line_4 $$ List<Element> children = element.getChildren(ELEMENT_REMOVED_MAPPING)-->Line_5 $$ if (children.isEmpty()) [ FD ]
Line_2 $$ public static List<Trinity<FileNameMatcher, String, Boolean>> readRemovedAssociations(@NotNull Element element) -->Line_5 $$ if (children.isEmpty()) [ CD ]
Line_8 $$ for (Element mapping : children) -->Line_10 $$ FileNameMatcher matcher = ext == null ? FileTypeManager.parseFromString(mapping.getAttributeValue(ATTRIBUTE_PATTERN)) : new ExtensionFileNameMatcher(ext)[ FD ]
