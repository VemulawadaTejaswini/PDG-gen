Line_4 $$ CommandLineParser parser = new CommandLineParser().allowUnknownOptions().allowMixedSubcommandsAndOptions()-->Line_7 $$ ParsedCommandLine parsedCommandLine = parser.parse(arguments == null ? Collections.<String>emptyList() : arguments)[ FD ]
Line_2 $$ public LogLevel getBuildLogLevel() -->Line_7 $$ ParsedCommandLine parsedCommandLine = parser.parse(arguments == null ? Collections.<String>emptyList() : arguments)[ CD ]
Line_3 $$ LoggingCommandLineConverter converter = new LoggingCommandLineConverter()-->Line_8 $$ if (parameters.getVerboseLogging() && !parsedCommandLine.hasAnyOption(converter.getLogLevelOptions())) [ FD ]
Line_8 $$ if (parameters.getVerboseLogging() && !parsedCommandLine.hasAnyOption(converter.getLogLevelOptions())) -->Line_9 $$ return LogLevel.DEBUG[ CD ]
Line_2 $$ public LogLevel getBuildLogLevel() -->Line_3 $$ LoggingCommandLineConverter converter = new LoggingCommandLineConverter()[ CD ]
Line_2 $$ public LogLevel getBuildLogLevel() -->Line_4 $$ CommandLineParser parser = new CommandLineParser().allowUnknownOptions().allowMixedSubcommandsAndOptions()[ CD ]
Line_2 $$ public LogLevel getBuildLogLevel() -->Line_8 $$ if (parameters.getVerboseLogging() && !parsedCommandLine.hasAnyOption(converter.getLogLevelOptions())) [ CD ]
Line_7 $$ ParsedCommandLine parsedCommandLine = parser.parse(arguments == null ? Collections.<String>emptyList() : arguments)-->Line_8 $$ if (parameters.getVerboseLogging() && !parsedCommandLine.hasAnyOption(converter.getLogLevelOptions())) [ FD ]
Line_7 $$ ParsedCommandLine parsedCommandLine = parser.parse(arguments == null ? Collections.<String>emptyList() : arguments)-->Line_11 $$ LoggingConfiguration loggingConfiguration = converter.convert(parsedCommandLine, new LoggingConfiguration())[ FD ]
Line_2 $$ public LogLevel getBuildLogLevel() -->Line_6 $$ List<String> arguments = parameters.getArguments()[ CD ]
Line_2 $$ public LogLevel getBuildLogLevel() -->Line_12 $$ return loggingConfiguration.getLogLevel()[ CD ]
Line_11 $$ LoggingConfiguration loggingConfiguration = converter.convert(parsedCommandLine, new LoggingConfiguration())-->Line_12 $$ return loggingConfiguration.getLogLevel()[ FD ]
Line_3 $$ LoggingCommandLineConverter converter = new LoggingCommandLineConverter()-->Line_11 $$ LoggingConfiguration loggingConfiguration = converter.convert(parsedCommandLine, new LoggingConfiguration())[ FD ]
Line_2 $$ public LogLevel getBuildLogLevel() -->Line_11 $$ LoggingConfiguration loggingConfiguration = converter.convert(parsedCommandLine, new LoggingConfiguration())[ CD ]
Line_3 $$ LoggingCommandLineConverter converter = new LoggingCommandLineConverter()-->Line_5 $$ converter.configure(parser)[ FD ]
Line_4 $$ CommandLineParser parser = new CommandLineParser().allowUnknownOptions().allowMixedSubcommandsAndOptions()-->Line_5 $$ converter.configure(parser)[ FD ]
Line_2 $$ public LogLevel getBuildLogLevel() -->Line_5 $$ converter.configure(parser)[ CD ]
