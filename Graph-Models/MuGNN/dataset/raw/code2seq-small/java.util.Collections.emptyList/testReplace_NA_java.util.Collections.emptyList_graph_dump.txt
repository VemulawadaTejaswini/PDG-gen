Line_2 $$ public void testReplace() -->Line_8 $$ assertTrue(replaced)[ CD ]
Line_4 $$ List<String> xxxList = Collections.singletonList("xxx")-->Line_12 $$ replaced = map.replace(KEY, xxxList, yyyList)[ FD ]
Line_3 $$ ConcurrentMostlySingularMultiMap<String, String> map = new ConcurrentMostlySingularMultiMap<String, String>()-->Line_9 $$ assertEquals(1, map.size())[ FD ]
Line_3 $$ ConcurrentMostlySingularMultiMap<String, String> map = new ConcurrentMostlySingularMultiMap<String, String>()-->Line_14 $$ assertEquals(1, map.size())[ FD ]
Line_5 $$ List<String> empty = Collections.emptyList()-->Line_19 $$ assertEquals(empty, map.get(KEY))[ FD ]
Line_5 $$ List<String> empty = Collections.emptyList()-->Line_16 $$ replaced = map.replace(KEY, yyyList, empty)[ FD ]
Line_3 $$ ConcurrentMostlySingularMultiMap<String, String> map = new ConcurrentMostlySingularMultiMap<String, String>()-->Line_16 $$ replaced = map.replace(KEY, yyyList, empty)[ FD ]
Line_2 $$ public void testReplace() -->Line_3 $$ ConcurrentMostlySingularMultiMap<String, String> map = new ConcurrentMostlySingularMultiMap<String, String>()[ CD ]
Line_2 $$ public void testReplace() -->Line_5 $$ List<String> empty = Collections.emptyList()[ CD ]
Line_2 $$ public void testReplace() -->Line_11 $$ List<String> yyyList = Collections.singletonList("yyy")[ CD ]
Line_16 $$ replaced = map.replace(KEY, yyyList, empty)-->Line_17 $$ assertTrue(replaced)[ FD ]
Line_2 $$ public void testReplace() -->Line_18 $$ assertEquals(0, map.size())[ CD ]
Line_7 $$ boolean replaced = map.replace(KEY, empty, xxxList)-->Line_12 $$ replaced = map.replace(KEY, xxxList, yyyList)[ FD ]
Line_6 $$ String KEY = "key"-->Line_19 $$ assertEquals(empty, map.get(KEY))[ FD ]
Line_2 $$ public void testReplace() -->Line_17 $$ assertTrue(replaced)[ CD ]
Line_6 $$ String KEY = "key"-->Line_15 $$ assertEquals(yyyList, map.get(KEY))[ FD ]
Line_12 $$ replaced = map.replace(KEY, xxxList, yyyList)-->Line_13 $$ assertTrue(replaced)[ FD ]
Line_4 $$ List<String> xxxList = Collections.singletonList("xxx")-->Line_7 $$ boolean replaced = map.replace(KEY, empty, xxxList)[ FD ]
Line_3 $$ ConcurrentMostlySingularMultiMap<String, String> map = new ConcurrentMostlySingularMultiMap<String, String>()-->Line_19 $$ assertEquals(empty, map.get(KEY))[ FD ]
Line_2 $$ public void testReplace() -->Line_9 $$ assertEquals(1, map.size())[ CD ]
Line_2 $$ public void testReplace() -->Line_4 $$ List<String> xxxList = Collections.singletonList("xxx")[ CD ]
Line_6 $$ String KEY = "key"-->Line_10 $$ assertEquals(xxxList, map.get(KEY))[ FD ]
Line_2 $$ public void testReplace() -->Line_10 $$ assertEquals(xxxList, map.get(KEY))[ CD ]
Line_2 $$ public void testReplace() -->Line_15 $$ assertEquals(yyyList, map.get(KEY))[ CD ]
Line_3 $$ ConcurrentMostlySingularMultiMap<String, String> map = new ConcurrentMostlySingularMultiMap<String, String>()-->Line_15 $$ assertEquals(yyyList, map.get(KEY))[ FD ]
Line_11 $$ List<String> yyyList = Collections.singletonList("yyy")-->Line_16 $$ replaced = map.replace(KEY, yyyList, empty)[ FD ]
Line_4 $$ List<String> xxxList = Collections.singletonList("xxx")-->Line_10 $$ assertEquals(xxxList, map.get(KEY))[ FD ]
Line_2 $$ public void testReplace() -->Line_12 $$ replaced = map.replace(KEY, xxxList, yyyList)[ CD ]
Line_7 $$ boolean replaced = map.replace(KEY, empty, xxxList)-->Line_13 $$ assertTrue(replaced)[ FD ]
Line_6 $$ String KEY = "key"-->Line_7 $$ boolean replaced = map.replace(KEY, empty, xxxList)[ FD ]
Line_2 $$ public void testReplace() -->Line_14 $$ assertEquals(1, map.size())[ CD ]
Line_12 $$ replaced = map.replace(KEY, xxxList, yyyList)-->Line_16 $$ replaced = map.replace(KEY, yyyList, empty)[ FD ]
Line_2 $$ public void testReplace() -->Line_6 $$ String KEY = "key"[ CD ]
Line_3 $$ ConcurrentMostlySingularMultiMap<String, String> map = new ConcurrentMostlySingularMultiMap<String, String>()-->Line_12 $$ replaced = map.replace(KEY, xxxList, yyyList)[ FD ]
Line_11 $$ List<String> yyyList = Collections.singletonList("yyy")-->Line_12 $$ replaced = map.replace(KEY, xxxList, yyyList)[ FD ]
Line_2 $$ public void testReplace() -->Line_13 $$ assertTrue(replaced)[ CD ]
Line_5 $$ List<String> empty = Collections.emptyList()-->Line_7 $$ boolean replaced = map.replace(KEY, empty, xxxList)[ FD ]
Line_2 $$ public void testReplace() -->Line_16 $$ replaced = map.replace(KEY, yyyList, empty)[ CD ]
Line_6 $$ String KEY = "key"-->Line_16 $$ replaced = map.replace(KEY, yyyList, empty)[ FD ]
Line_11 $$ List<String> yyyList = Collections.singletonList("yyy")-->Line_15 $$ assertEquals(yyyList, map.get(KEY))[ FD ]
Line_7 $$ boolean replaced = map.replace(KEY, empty, xxxList)-->Line_17 $$ assertTrue(replaced)[ FD ]
Line_3 $$ ConcurrentMostlySingularMultiMap<String, String> map = new ConcurrentMostlySingularMultiMap<String, String>()-->Line_10 $$ assertEquals(xxxList, map.get(KEY))[ FD ]
Line_7 $$ boolean replaced = map.replace(KEY, empty, xxxList)-->Line_8 $$ assertTrue(replaced)[ FD ]
Line_12 $$ replaced = map.replace(KEY, xxxList, yyyList)-->Line_17 $$ assertTrue(replaced)[ FD ]
Line_3 $$ ConcurrentMostlySingularMultiMap<String, String> map = new ConcurrentMostlySingularMultiMap<String, String>()-->Line_18 $$ assertEquals(0, map.size())[ FD ]
Line_6 $$ String KEY = "key"-->Line_12 $$ replaced = map.replace(KEY, xxxList, yyyList)[ FD ]
Line_3 $$ ConcurrentMostlySingularMultiMap<String, String> map = new ConcurrentMostlySingularMultiMap<String, String>()-->Line_7 $$ boolean replaced = map.replace(KEY, empty, xxxList)[ FD ]
Line_2 $$ public void testReplace() -->Line_19 $$ assertEquals(empty, map.get(KEY))[ CD ]
Line_7 $$ boolean replaced = map.replace(KEY, empty, xxxList)-->Line_16 $$ replaced = map.replace(KEY, yyyList, empty)[ FD ]
Line_2 $$ public void testReplace() -->Line_7 $$ boolean replaced = map.replace(KEY, empty, xxxList)[ CD ]
