Line_3 $$ final PyType thisType = context.getType(this)-->Line_4 $$ if (thisType instanceof PyClassLikeType) [ FD ]
Line_4 $$ if (thisType instanceof PyClassLikeType) -->Line_6 $$ final List<PyClassLikeType> ancestorTypes = mroLinearize(thisClassLikeType, false, context, new HashMap<PyClassLikeType, Ref<List<PyClassLikeType>>>())[ CD ]
Line_6 $$ final List<PyClassLikeType> ancestorTypes = mroLinearize(thisClassLikeType, false, context, new HashMap<PyClassLikeType, Ref<List<PyClassLikeType>>>())-->Line_8 $$ ancestorTypes.add(null)[ FD ]
Line_4 $$ if (thisType instanceof PyClassLikeType) -->Line_7 $$ if (isOverriddenMRO(ancestorTypes, context)) [ CD ]
Line_4 $$ if (thisType instanceof PyClassLikeType) -->Line_10 $$ return ancestorTypes[ CD ]
Line_2 $$ private List<PyClassLikeType> getMROAncestorTypes(@NotNull TypeEvalContext context) throws MROException -->Line_6 $$ final List<PyClassLikeType> ancestorTypes = mroLinearize(thisClassLikeType, false, context, new HashMap<PyClassLikeType, Ref<List<PyClassLikeType>>>())[ FD ]
Line_6 $$ final List<PyClassLikeType> ancestorTypes = mroLinearize(thisClassLikeType, false, context, new HashMap<PyClassLikeType, Ref<List<PyClassLikeType>>>())-->Line_7 $$ if (isOverriddenMRO(ancestorTypes, context)) [ FD ]
Line_2 $$ private List<PyClassLikeType> getMROAncestorTypes(@NotNull TypeEvalContext context) throws MROException -->Line_3 $$ final PyType thisType = context.getType(this)[ FD ]
Line_2 $$ private List<PyClassLikeType> getMROAncestorTypes(@NotNull TypeEvalContext context) throws MROException -->Line_7 $$ if (isOverriddenMRO(ancestorTypes, context)) [ FD ]
Line_7 $$ if (isOverriddenMRO(ancestorTypes, context)) -->Line_8 $$ ancestorTypes.add(null)[ CD ]
Line_4 $$ if (thisType instanceof PyClassLikeType) -->Line_5 $$ final PyClassLikeType thisClassLikeType = (PyClassLikeType) thisType[ CD ]
Line_4 $$ if (thisType instanceof PyClassLikeType) -->Line_12 $$ return Collections.emptyList()[ CD ]
Line_5 $$ final PyClassLikeType thisClassLikeType = (PyClassLikeType) thisType-->Line_6 $$ final List<PyClassLikeType> ancestorTypes = mroLinearize(thisClassLikeType, false, context, new HashMap<PyClassLikeType, Ref<List<PyClassLikeType>>>())[ FD ]
Line_2 $$ private List<PyClassLikeType> getMROAncestorTypes(@NotNull TypeEvalContext context) throws MROException -->Line_3 $$ final PyType thisType = context.getType(this)[ CD ]
Line_2 $$ private List<PyClassLikeType> getMROAncestorTypes(@NotNull TypeEvalContext context) throws MROException -->Line_4 $$ if (thisType instanceof PyClassLikeType) [ CD ]
