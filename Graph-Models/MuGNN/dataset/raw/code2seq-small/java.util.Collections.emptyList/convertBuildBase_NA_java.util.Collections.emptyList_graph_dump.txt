Line_2 $$ private static void convertBuildBase(MavenBuildBase result, BuildBase build) -->Line_5 $$ result.setDirectory(build.getDirectory())[ CD ]
Line_2 $$ private static void convertBuildBase(MavenBuildBase result, BuildBase build) -->Line_3 $$ result.setFinalName(build.getFinalName())[ FD ]
Line_2 $$ private static void convertBuildBase(MavenBuildBase result, BuildBase build) -->Line_4 $$ result.setDefaultGoal(build.getDefaultGoal())[ FD ]
Line_2 $$ private static void convertBuildBase(MavenBuildBase result, BuildBase build) -->Line_6 $$ result.setResources(convertResources(build.getResources()))[ CD ]
Line_2 $$ private static void convertBuildBase(MavenBuildBase result, BuildBase build) -->Line_6 $$ result.setResources(convertResources(build.getResources()))[ FD ]
Line_2 $$ private static void convertBuildBase(MavenBuildBase result, BuildBase build) -->Line_8 $$ result.setFilters(build.getFilters() == null ? Collections.<String>emptyList() : build.getFilters())[ FD ]
Line_2 $$ private static void convertBuildBase(MavenBuildBase result, BuildBase build) -->Line_7 $$ result.setTestResources(convertResources(build.getTestResources()))[ FD ]
Line_2 $$ private static void convertBuildBase(MavenBuildBase result, BuildBase build) -->Line_5 $$ result.setDirectory(build.getDirectory())[ FD ]
Line_2 $$ private static void convertBuildBase(MavenBuildBase result, BuildBase build) -->Line_4 $$ result.setDefaultGoal(build.getDefaultGoal())[ CD ]
Line_2 $$ private static void convertBuildBase(MavenBuildBase result, BuildBase build) -->Line_8 $$ result.setFilters(build.getFilters() == null ? Collections.<String>emptyList() : build.getFilters())[ CD ]
Line_2 $$ private static void convertBuildBase(MavenBuildBase result, BuildBase build) -->Line_7 $$ result.setTestResources(convertResources(build.getTestResources()))[ CD ]
Line_2 $$ private static void convertBuildBase(MavenBuildBase result, BuildBase build) -->Line_3 $$ result.setFinalName(build.getFinalName())[ CD ]
