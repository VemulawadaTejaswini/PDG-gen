Line_11 $$ String remoteName-->Line_16 $$ remote = GitUtil.findRemoteByName(remotes, remoteName)[ FD ]
Line_10 $$ GitRemote remote-->Line_19 $$ if (remote == null) [ FD ]
Line_13 $$ do -->Line_14 $$ remoteName = stdName.substring(0, slash)[ CD ]
Line_5 $$ int slash = stdName.indexOf('/')-->Line_17 $$ slash = stdName.indexOf('/', slash + 1)[ FD ]
Line_6 $$ if (slash == -1) -->Line_19 $$ if (remote == null) [ CD ]
Line_5 $$ int slash = stdName.indexOf('/')-->Line_14 $$ remoteName = stdName.substring(0, slash)[ FD ]
Line_6 $$ if (slash == -1) -->Line_11 $$ String remoteName[ CD ]
Line_5 $$ int slash = stdName.indexOf('/')-->Line_6 $$ if (slash == -1) [ FD ]
Line_13 $$ do -->Line_17 $$ slash = stdName.indexOf('/', slash + 1)[ CD ]
Line_16 $$ remote = GitUtil.findRemoteByName(remotes, remoteName)-->Line_19 $$ if (remote == null) [ FD ]
Line_13 $$ do -->Line_15 $$ branchName = stdName.substring(slash + 1)[ CD ]
Line_17 $$ slash = stdName.indexOf('/', slash + 1)-->Line_14 $$ remoteName = stdName.substring(0, slash)[ FD ]
Line_6 $$ if (slash == -1) -->Line_25 $$ return new GitStandardRemoteBranch(remote, branchName)[ CD ]
Line_10 $$ GitRemote remote-->Line_16 $$ remote = GitUtil.findRemoteByName(remotes, remoteName)[ FD ]
Line_6 $$ if (slash == -1) -->Line_10 $$ GitRemote remote[ CD ]
Line_4 $$ String stdName = GitBranchUtil.stripRefsPrefix(fullBranchName)-->Line_17 $$ slash = stdName.indexOf('/', slash + 1)[ FD ]
Line_13 $$ do -->Line_16 $$ remote = GitUtil.findRemoteByName(remotes, remoteName)[ CD ]
Line_6 $$ if (slash == -1) -->Line_12 $$ String branchName[ CD ]
Line_19 $$ if (remote == null) -->Line_22 $$ GitRemote fakeRemote = new GitRemote(remoteName, ContainerUtil.<String>emptyList(), Collections.<String>emptyList(), Collections.<String>emptyList(), Collections.<String>emptyList())[ CD ]
Line_11 $$ String remoteName-->Line_14 $$ remoteName = stdName.substring(0, slash)[ FD ]
Line_14 $$ remoteName = stdName.substring(0, slash)-->Line_16 $$ remote = GitUtil.findRemoteByName(remotes, remoteName)[ FD ]
Line_4 $$ String stdName = GitBranchUtil.stripRefsPrefix(fullBranchName)-->Line_5 $$ int slash = stdName.indexOf('/')[ FD ]
Line_19 $$ if (remote == null) -->Line_23 $$ return new GitStandardRemoteBranch(fakeRemote, branchName)[ CD ]
Line_12 $$ String branchName-->Line_15 $$ branchName = stdName.substring(slash + 1)[ FD ]
Line_6 $$ if (slash == -1) -->Line_13 $$ do [ CD ]
Line_4 $$ String stdName = GitBranchUtil.stripRefsPrefix(fullBranchName)-->Line_15 $$ branchName = stdName.substring(slash + 1)[ FD ]
Line_4 $$ String stdName = GitBranchUtil.stripRefsPrefix(fullBranchName)-->Line_14 $$ remoteName = stdName.substring(0, slash)[ FD ]
