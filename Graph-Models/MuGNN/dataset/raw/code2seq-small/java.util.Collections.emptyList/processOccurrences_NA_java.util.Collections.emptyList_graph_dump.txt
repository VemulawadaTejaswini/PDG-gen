Line_5 $$ final GrExpression expr = myContext.getStringPart().replaceLiteralWithConcatenation(field.getName())-->Line_6 $$ final PsiElement occurrence = replaceOccurrence(field, expr, targetClass)[ FD ]
Line_10 $$ if (mySettings.replaceAllOccurrences()) -->Line_11 $$ GroovyRefactoringUtil.sortOccurrences(myContext.getOccurrences())[ CD ]
Line_10 $$ if (mySettings.replaceAllOccurrences()) -->Line_12 $$ ArrayList<PsiElement> result = ContainerUtil.newArrayList()[ CD ]
Line_6 $$ final PsiElement occurrence = replaceOccurrence(field, expr, targetClass)-->Line_7 $$ updateCaretPosition(occurrence)[ FD ]
Line_20 $$ GrExpression initializer = var.getInitializerGroovy()-->Line_22 $$ return Collections.singletonList(replaceOccurrence(field, initializer, targetClass))[ FD ]
Line_10 $$ if (mySettings.replaceAllOccurrences()) -->Line_16 $$ return result[ CD ]
Line_27 $$ final GrExpression expression = myContext.getExpression()-->Line_29 $$ return Collections.singletonList(replaceOccurrence(field, expression, targetClass))[ FD ]
Line_4 $$ if (myContext.getStringPart() != null) -->Line_5 $$ final GrExpression expr = myContext.getStringPart().replaceLiteralWithConcatenation(field.getName())[ CD ]
Line_18 $$ GrVariable var = myContext.getVar()-->Line_20 $$ GrExpression initializer = var.getInitializerGroovy()[ FD ]
Line_19 $$ if (var != null) -->Line_20 $$ GrExpression initializer = var.getInitializerGroovy()[ CD ]
Line_18 $$ GrVariable var = myContext.getVar()-->Line_19 $$ if (var != null) [ FD ]
Line_20 $$ GrExpression initializer = var.getInitializerGroovy()-->Line_21 $$ if (initializer != null) [ FD ]
Line_19 $$ if (var != null) -->Line_21 $$ if (initializer != null) [ CD ]
Line_12 $$ ArrayList<PsiElement> result = ContainerUtil.newArrayList()-->Line_14 $$ result.add(replaceOccurrence(field, occurrence, targetClass))[ FD ]
Line_4 $$ if (myContext.getStringPart() != null) -->Line_6 $$ final PsiElement occurrence = replaceOccurrence(field, expr, targetClass)[ CD ]
Line_4 $$ if (myContext.getStringPart() != null) -->Line_8 $$ return Collections.singletonList(occurrence)[ CD ]
Line_21 $$ if (initializer != null) -->Line_22 $$ return Collections.singletonList(replaceOccurrence(field, initializer, targetClass))[ CD ]
Line_4 $$ if (myContext.getStringPart() != null) -->Line_7 $$ updateCaretPosition(occurrence)[ CD ]
Line_6 $$ final PsiElement occurrence = replaceOccurrence(field, expr, targetClass)-->Line_8 $$ return Collections.singletonList(occurrence)[ FD ]
Line_21 $$ if (initializer != null) -->Line_24 $$ return Collections.emptyList()[ CD ]
Line_6 $$ final PsiElement occurrence = replaceOccurrence(field, expr, targetClass)-->Line_14 $$ result.add(replaceOccurrence(field, occurrence, targetClass))[ FD ]
