Line_12 $$ WebSocketHandler handler = new TextWebSocketHandler()-->Line_14 $$ this.handshakeHandler.doHandshake(this.request, this.response, handler, attributes)[ FD ]
Line_13 $$ Map<String, Object> attributes = Collections.<String, Object>emptyMap()-->Line_15 $$ verify(this.upgradeStrategy).upgrade(this.request, this.response, "STOMP", Collections.<WebSocketExtension>emptyList(), null, handler, attributes)[ FD ]
Line_6 $$ WebSocketHttpHeaders headers = new WebSocketHttpHeaders(this.request.getHeaders())-->Line_9 $$ headers.setSecWebSocketVersion("13")[ FD ]
Line_2 $$ public void supportedSubProtocols() throws Exception -->Line_11 $$ headers.setSecWebSocketProtocol("STOMP")[ CD ]
Line_2 $$ public void supportedSubProtocols() throws Exception -->Line_8 $$ headers.setConnection("Upgrade")[ CD ]
Line_2 $$ public void supportedSubProtocols() throws Exception -->Line_13 $$ Map<String, Object> attributes = Collections.<String, Object>emptyMap()[ CD ]
Line_13 $$ Map<String, Object> attributes = Collections.<String, Object>emptyMap()-->Line_14 $$ this.handshakeHandler.doHandshake(this.request, this.response, handler, attributes)[ FD ]
Line_2 $$ public void supportedSubProtocols() throws Exception -->Line_4 $$ given(this.upgradeStrategy.getSupportedVersions()).willReturn(new String[] [ CD ]
Line_12 $$ WebSocketHandler handler = new TextWebSocketHandler()-->Line_15 $$ verify(this.upgradeStrategy).upgrade(this.request, this.response, "STOMP", Collections.<WebSocketExtension>emptyList(), null, handler, attributes)[ FD ]
Line_6 $$ WebSocketHttpHeaders headers = new WebSocketHttpHeaders(this.request.getHeaders())-->Line_10 $$ headers.setSecWebSocketKey("82/ZS2YHjEnUN97HLL8tbw==")[ FD ]
Line_2 $$ public void supportedSubProtocols() throws Exception -->Line_12 $$ WebSocketHandler handler = new TextWebSocketHandler()[ CD ]
Line_6 $$ WebSocketHttpHeaders headers = new WebSocketHttpHeaders(this.request.getHeaders())-->Line_7 $$ headers.setUpgrade("WebSocket")[ FD ]
Line_2 $$ public void supportedSubProtocols() throws Exception -->Line_3 $$ this.handshakeHandler.setSupportedProtocols("stomp", "mqtt")[ CD ]
Line_2 $$ public void supportedSubProtocols() throws Exception -->Line_15 $$ verify(this.upgradeStrategy).upgrade(this.request, this.response, "STOMP", Collections.<WebSocketExtension>emptyList(), null, handler, attributes)[ CD ]
Line_2 $$ public void supportedSubProtocols() throws Exception -->Line_14 $$ this.handshakeHandler.doHandshake(this.request, this.response, handler, attributes)[ CD ]
Line_2 $$ public void supportedSubProtocols() throws Exception -->Line_5 $$ this.servletRequest.setMethod("GET")[ CD ]
Line_2 $$ public void supportedSubProtocols() throws Exception -->Line_10 $$ headers.setSecWebSocketKey("82/ZS2YHjEnUN97HLL8tbw==")[ CD ]
Line_2 $$ public void supportedSubProtocols() throws Exception -->Line_7 $$ headers.setUpgrade("WebSocket")[ CD ]
Line_6 $$ WebSocketHttpHeaders headers = new WebSocketHttpHeaders(this.request.getHeaders())-->Line_11 $$ headers.setSecWebSocketProtocol("STOMP")[ FD ]
Line_2 $$ public void supportedSubProtocols() throws Exception -->Line_6 $$ WebSocketHttpHeaders headers = new WebSocketHttpHeaders(this.request.getHeaders())[ CD ]
Line_6 $$ WebSocketHttpHeaders headers = new WebSocketHttpHeaders(this.request.getHeaders())-->Line_8 $$ headers.setConnection("Upgrade")[ FD ]
Line_2 $$ public void supportedSubProtocols() throws Exception -->Line_9 $$ headers.setSecWebSocketVersion("13")[ CD ]
