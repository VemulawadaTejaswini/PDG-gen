Line_2 $$ public List<String> checkHeaders(List<String> requestHeaders) -->Line_6 $$ if (requestHeaders.isEmpty()) [ CD ]
Line_2 $$ public List<String> checkHeaders(List<String> requestHeaders) -->Line_12 $$ boolean allowAnyHeader = this.allowedHeaders.contains(ALL)[ CD ]
Line_12 $$ boolean allowAnyHeader = this.allowedHeaders.contains(ALL)-->Line_18 $$ if (allowAnyHeader || requestHeader.equalsIgnoreCase(allowedHeader)) [ FD ]
Line_14 $$ for (String requestHeader : requestHeaders) -->Line_16 $$ requestHeader = requestHeader.trim()[ FD ]
Line_14 $$ for (String requestHeader : requestHeaders) -->Line_19 $$ result.add(requestHeader)[ FD ]
Line_9 $$ if (ObjectUtils.isEmpty(this.allowedHeaders)) -->Line_10 $$ return null[ CD ]
Line_2 $$ public List<String> checkHeaders(List<String> requestHeaders) -->Line_25 $$ return (result.isEmpty() ? null : result)[ CD ]
Line_2 $$ public List<String> checkHeaders(List<String> requestHeaders) -->Line_13 $$ List<String> result = new ArrayList<String>()[ CD ]
Line_2 $$ public List<String> checkHeaders(List<String> requestHeaders) -->Line_9 $$ if (ObjectUtils.isEmpty(this.allowedHeaders)) [ CD ]
Line_13 $$ List<String> result = new ArrayList<String>()-->Line_19 $$ result.add(requestHeader)[ FD ]
Line_14 $$ for (String requestHeader : requestHeaders) -->Line_15 $$ if (StringUtils.hasText(requestHeader)) [ FD ]
Line_2 $$ public List<String> checkHeaders(List<String> requestHeaders) -->Line_3 $$ if (requestHeaders == null) [ FD ]
Line_2 $$ public List<String> checkHeaders(List<String> requestHeaders) -->Line_6 $$ if (requestHeaders.isEmpty()) [ FD ]
Line_14 $$ for (String requestHeader : requestHeaders) -->Line_18 $$ if (allowAnyHeader || requestHeader.equalsIgnoreCase(allowedHeader)) [ FD ]
Line_2 $$ public List<String> checkHeaders(List<String> requestHeaders) -->Line_3 $$ if (requestHeaders == null) [ CD ]
Line_3 $$ if (requestHeaders == null) -->Line_4 $$ return null[ CD ]
Line_16 $$ requestHeader = requestHeader.trim()-->Line_18 $$ if (allowAnyHeader || requestHeader.equalsIgnoreCase(allowedHeader)) [ FD ]
Line_13 $$ List<String> result = new ArrayList<String>()-->Line_25 $$ return (result.isEmpty() ? null : result)[ FD ]
Line_18 $$ if (allowAnyHeader || requestHeader.equalsIgnoreCase(allowedHeader)) -->Line_19 $$ result.add(requestHeader)[ CD ]
Line_17 $$ for (String allowedHeader : this.allowedHeaders) -->Line_18 $$ if (allowAnyHeader || requestHeader.equalsIgnoreCase(allowedHeader)) [ FD ]
Line_16 $$ requestHeader = requestHeader.trim()-->Line_19 $$ result.add(requestHeader)[ FD ]
Line_6 $$ if (requestHeaders.isEmpty()) -->Line_7 $$ return Collections.emptyList()[ CD ]
Line_15 $$ if (StringUtils.hasText(requestHeader)) -->Line_16 $$ requestHeader = requestHeader.trim()[ CD ]
