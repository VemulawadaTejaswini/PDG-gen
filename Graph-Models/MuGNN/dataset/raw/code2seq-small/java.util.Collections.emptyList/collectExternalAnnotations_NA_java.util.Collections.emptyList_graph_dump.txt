Line_6 $$ List<AnnotationData> cached-->Line_8 $$ cached = (List<AnnotationData>) cache.get(listOwner)[ FD ]
Line_8 $$ cached = (List<AnnotationData>) cache.get(listOwner)-->Line_9 $$ if (cached == NO_DATA || !cached.isEmpty())[ FD ]
Line_7 $$ while (true) -->Line_11 $$ List<AnnotationData> computed = doCollect(listOwner, false)[ CD ]
Line_8 $$ cached = (List<AnnotationData>) cache.get(listOwner)-->Line_12 $$ if (cache.replace(listOwner, cached, computed)) [ FD ]
Line_11 $$ List<AnnotationData> computed = doCollect(listOwner, false)-->Line_13 $$ cached = computed[ FD ]
Line_4 $$ if (!hasAnyAnnotationsRoots())-->Line_5 $$ return Collections.emptyList()[ CD ]
Line_6 $$ List<AnnotationData> cached-->Line_13 $$ cached = computed[ FD ]
Line_13 $$ cached = computed-->Line_9 $$ if (cached == NO_DATA || !cached.isEmpty())[ FD ]
Line_6 $$ List<AnnotationData> cached-->Line_12 $$ if (cache.replace(listOwner, cached, computed)) [ FD ]
Line_13 $$ cached = computed-->Line_12 $$ if (cache.replace(listOwner, cached, computed)) [ FD ]
Line_7 $$ while (true) -->Line_8 $$ cached = (List<AnnotationData>) cache.get(listOwner)[ CD ]
Line_11 $$ List<AnnotationData> computed = doCollect(listOwner, false)-->Line_12 $$ if (cache.replace(listOwner, cached, computed)) [ FD ]
Line_8 $$ cached = (List<AnnotationData>) cache.get(listOwner)-->Line_13 $$ cached = computed[ FD ]
Line_7 $$ while (true) -->Line_12 $$ if (cache.replace(listOwner, cached, computed)) [ CD ]
Line_12 $$ if (cache.replace(listOwner, cached, computed)) -->Line_13 $$ cached = computed[ CD ]
Line_9 $$ if (cached == NO_DATA || !cached.isEmpty())-->Line_10 $$ return cached[ CD ]
Line_6 $$ List<AnnotationData> cached-->Line_9 $$ if (cached == NO_DATA || !cached.isEmpty())[ FD ]
Line_7 $$ while (true) -->Line_9 $$ if (cached == NO_DATA || !cached.isEmpty())[ CD ]
