Line_23 $$ if (level != Math.abs(lineIndents[i])) -->Line_24 $$ descriptors.add(createDescriptor(level, startLine, line, lineIndents))[ CD ]
Line_8 $$ List<IndentGuideDescriptor> descriptors = new ArrayList<IndentGuideDescriptor>()-->Line_24 $$ descriptors.add(createDescriptor(level, startLine, line, lineIndents))[ FD ]
Line_41 $$ if (level > 0) -->Line_42 $$ descriptors.add(createDescriptor(level, startLine, myDocument.getLineCount(), lineIndents))[ CD ]
Line_2 $$ private List<IndentGuideDescriptor> buildDescriptors() -->Line_10 $$ IntStack indents = new IntStack()[ CD ]
Line_14 $$ for (int line = 1; line < lineIndents.length; line++) -->Line_31 $$ int prevIndent = Math.abs(lineIndents[prevLine])[ CD ]
Line_14 $$ for (int line = 1; line < lineIndents.length; line++) -->Line_22 $$ for (int i = startLine; i < line; i++) [ FD ]
Line_7 $$ int[] lineIndents = calculator.lineIndents-->Line_24 $$ descriptors.add(createDescriptor(level, startLine, line, lineIndents))[ FD ]
Line_9 $$ IntStack lines = new IntStack()-->Line_33 $$ lines.push(prevLine)[ FD ]
Line_14 $$ for (int line = 1; line < lineIndents.length; line++) -->Line_24 $$ descriptors.add(createDescriptor(level, startLine, line, lineIndents))[ FD ]
Line_14 $$ for (int line = 1; line < lineIndents.length; line++) -->Line_32 $$ if (curIndent - prevIndent > 1) [ CD ]
Line_9 $$ IntStack lines = new IntStack()-->Line_11 $$ lines.push(0)[ FD ]
Line_2 $$ private List<IndentGuideDescriptor> buildDescriptors() -->Line_5 $$ IndentsCalculator calculator = new IndentsCalculator()[ CD ]
Line_14 $$ for (int line = 1; line < lineIndents.length; line++) -->Line_16 $$ int curIndent = Math.abs(lineIndents[line])[ CD ]
Line_2 $$ private List<IndentGuideDescriptor> buildDescriptors() -->Line_8 $$ List<IndentGuideDescriptor> descriptors = new ArrayList<IndentGuideDescriptor>()[ CD ]
Line_19 $$ final int level = indents.pop()-->Line_24 $$ descriptors.add(createDescriptor(level, startLine, line, lineIndents))[ FD ]
Line_2 $$ private List<IndentGuideDescriptor> buildDescriptors() -->Line_3 $$ if (!myEditor.getSettings().isIndentGuidesShown())[ CD ]
Line_9 $$ IntStack lines = new IntStack()-->Line_20 $$ int startLine = lines.pop()[ FD ]
Line_10 $$ IntStack indents = new IntStack()-->Line_34 $$ indents.push(prevIndent)[ FD ]
Line_37 $$ while (!indents.empty()) -->Line_40 $$ int startLine = lines.pop()[ CD ]
Line_40 $$ int startLine = lines.pop()-->Line_42 $$ descriptors.add(createDescriptor(level, startLine, myDocument.getLineCount(), lineIndents))[ FD ]
Line_10 $$ IntStack indents = new IntStack()-->Line_39 $$ final int level = indents.pop()[ FD ]
Line_17 $$ while (!indents.empty() && curIndent <= indents.peek()) -->Line_18 $$ ProgressManager.checkCanceled()[ CD ]
Line_17 $$ while (!indents.empty() && curIndent <= indents.peek()) -->Line_21 $$ if (level > 0) [ CD ]
Line_2 $$ private List<IndentGuideDescriptor> buildDescriptors() -->Line_11 $$ lines.push(0)[ CD ]
Line_10 $$ IntStack indents = new IntStack()-->Line_12 $$ indents.push(0)[ FD ]
Line_10 $$ IntStack indents = new IntStack()-->Line_37 $$ while (!indents.empty()) [ FD ]
Line_7 $$ int[] lineIndents = calculator.lineIndents-->Line_42 $$ descriptors.add(createDescriptor(level, startLine, myDocument.getLineCount(), lineIndents))[ FD ]
Line_8 $$ List<IndentGuideDescriptor> descriptors = new ArrayList<IndentGuideDescriptor>()-->Line_42 $$ descriptors.add(createDescriptor(level, startLine, myDocument.getLineCount(), lineIndents))[ FD ]
Line_2 $$ private List<IndentGuideDescriptor> buildDescriptors() -->Line_37 $$ while (!indents.empty()) [ CD ]
Line_10 $$ IntStack indents = new IntStack()-->Line_17 $$ while (!indents.empty() && curIndent <= indents.peek()) [ FD ]
Line_5 $$ IndentsCalculator calculator = new IndentsCalculator()-->Line_6 $$ calculator.calculate()[ FD ]
Line_14 $$ for (int line = 1; line < lineIndents.length; line++) -->Line_15 $$ ProgressManager.checkCanceled()[ CD ]
Line_9 $$ IntStack lines = new IntStack()-->Line_40 $$ int startLine = lines.pop()[ FD ]
Line_10 $$ IntStack indents = new IntStack()-->Line_19 $$ final int level = indents.pop()[ FD ]
Line_19 $$ final int level = indents.pop()-->Line_23 $$ if (level != Math.abs(lineIndents[i])) [ FD ]
Line_14 $$ for (int line = 1; line < lineIndents.length; line++) -->Line_17 $$ while (!indents.empty() && curIndent <= indents.peek()) [ CD ]
Line_2 $$ private List<IndentGuideDescriptor> buildDescriptors() -->Line_45 $$ return descriptors[ CD ]
Line_2 $$ private List<IndentGuideDescriptor> buildDescriptors() -->Line_9 $$ IntStack lines = new IntStack()[ CD ]
Line_19 $$ final int level = indents.pop()-->Line_42 $$ descriptors.add(createDescriptor(level, startLine, myDocument.getLineCount(), lineIndents))[ FD ]
Line_19 $$ final int level = indents.pop()-->Line_41 $$ if (level > 0) [ FD ]
Line_20 $$ int startLine = lines.pop()-->Line_24 $$ descriptors.add(createDescriptor(level, startLine, line, lineIndents))[ FD ]
Line_2 $$ private List<IndentGuideDescriptor> buildDescriptors() -->Line_7 $$ int[] lineIndents = calculator.lineIndents[ CD ]
Line_17 $$ while (!indents.empty() && curIndent <= indents.peek()) -->Line_19 $$ final int level = indents.pop()[ CD ]
Line_22 $$ for (int i = startLine; i < line; i++) -->Line_23 $$ if (level != Math.abs(lineIndents[i])) [ CD ]
Line_17 $$ while (!indents.empty() && curIndent <= indents.peek()) -->Line_20 $$ int startLine = lines.pop()[ CD ]
Line_20 $$ int startLine = lines.pop()-->Line_42 $$ descriptors.add(createDescriptor(level, startLine, myDocument.getLineCount(), lineIndents))[ FD ]
Line_19 $$ final int level = indents.pop()-->Line_21 $$ if (level > 0) [ FD ]
Line_37 $$ while (!indents.empty()) -->Line_39 $$ final int level = indents.pop()[ CD ]
Line_37 $$ while (!indents.empty()) -->Line_41 $$ if (level > 0) [ CD ]
Line_32 $$ if (curIndent - prevIndent > 1) -->Line_34 $$ indents.push(prevIndent)[ CD ]
Line_32 $$ if (curIndent - prevIndent > 1) -->Line_33 $$ lines.push(prevLine)[ CD ]
Line_3 $$ if (!myEditor.getSettings().isIndentGuidesShown())-->Line_4 $$ return Collections.emptyList()[ CD ]
Line_39 $$ final int level = indents.pop()-->Line_42 $$ descriptors.add(createDescriptor(level, startLine, myDocument.getLineCount(), lineIndents))[ FD ]
Line_37 $$ while (!indents.empty()) -->Line_38 $$ ProgressManager.checkCanceled()[ CD ]
Line_39 $$ final int level = indents.pop()-->Line_41 $$ if (level > 0) [ FD ]
Line_2 $$ private List<IndentGuideDescriptor> buildDescriptors() -->Line_14 $$ for (int line = 1; line < lineIndents.length; line++) [ CD ]
Line_2 $$ private List<IndentGuideDescriptor> buildDescriptors() -->Line_12 $$ indents.push(0)[ CD ]
Line_2 $$ private List<IndentGuideDescriptor> buildDescriptors() -->Line_6 $$ calculator.calculate()[ CD ]
Line_21 $$ if (level > 0) -->Line_22 $$ for (int i = startLine; i < line; i++) [ CD ]
