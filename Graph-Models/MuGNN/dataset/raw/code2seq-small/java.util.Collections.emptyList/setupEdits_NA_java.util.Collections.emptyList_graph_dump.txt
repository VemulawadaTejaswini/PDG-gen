Line_17 $$ FSEditLog editlog = getFSEditLog(storage)-->Line_46 $$ editlog.close()[ FD ]
Line_17 $$ FSEditLog editlog = getFSEditLog(storage)-->Line_33 $$ editlog.rollEditLog()[ FD ]
Line_17 $$ FSEditLog editlog = getFSEditLog(storage)-->Line_41 $$ editlog.logGenerationStampV2((long) i)[ FD ]
Line_15 $$ NNStorage storage = new NNStorage(new Configuration(), Collections.<URI>emptyList(), editUris)-->Line_17 $$ FSEditLog editlog = getFSEditLog(storage)[ FD ]
Line_17 $$ FSEditLog editlog = getFSEditLog(storage)-->Line_26 $$ editlog.logSync()[ FD ]
Line_23 $$ for (int i = 2; i < TXNS_PER_ROLL; i++) -->Line_24 $$ editlog.logGenerationStampV2((long) 0)[ CD ]
Line_14 $$ List<AbortSpec> aborts = new ArrayList<AbortSpec>(Arrays.asList(abortAtRolls))-->Line_37 $$ AbortSpec spec = aborts.remove(0)[ FD ]
Line_17 $$ FSEditLog editlog = getFSEditLog(storage)-->Line_43 $$ editlog.logSync()[ FD ]
Line_36 $$ while (aborts.size() > 0 && aborts.get(0).roll == (i + 1)) -->Line_38 $$ editlog.getJournals().get(spec.logindex).abort()[ CD ]
Line_14 $$ List<AbortSpec> aborts = new ArrayList<AbortSpec>(Arrays.asList(abortAtRolls))-->Line_36 $$ while (aborts.size() > 0 && aborts.get(0).roll == (i + 1)) [ FD ]
Line_17 $$ FSEditLog editlog = getFSEditLog(storage)-->Line_24 $$ editlog.logGenerationStampV2((long) 0)[ FD ]
Line_15 $$ NNStorage storage = new NNStorage(new Configuration(), Collections.<URI>emptyList(), editUris)-->Line_48 $$ FSImageTestUtil.logStorageContents(LOG, storage)[ FD ]
Line_17 $$ FSEditLog editlog = getFSEditLog(storage)-->Line_34 $$ editlog.logGenerationStampV2((long) i)[ FD ]
Line_17 $$ FSEditLog editlog = getFSEditLog(storage)-->Line_22 $$ editlog.openForWrite()[ FD ]
Line_40 $$ for (int j = 3; j < TXNS_PER_ROLL; j++) -->Line_41 $$ editlog.logGenerationStampV2((long) i)[ CD ]
Line_17 $$ FSEditLog editlog = getFSEditLog(storage)-->Line_35 $$ editlog.logSync()[ FD ]
Line_45 $$ if (closeOnFinish) -->Line_46 $$ editlog.close()[ CD ]
Line_36 $$ while (aborts.size() > 0 && aborts.get(0).roll == (i + 1)) -->Line_37 $$ AbortSpec spec = aborts.remove(0)[ CD ]
Line_17 $$ FSEditLog editlog = getFSEditLog(storage)-->Line_38 $$ editlog.getJournals().get(spec.logindex).abort()[ FD ]
Line_15 $$ NNStorage storage = new NNStorage(new Configuration(), Collections.<URI>emptyList(), editUris)-->Line_16 $$ storage.format(new NamespaceInfo())[ FD ]
