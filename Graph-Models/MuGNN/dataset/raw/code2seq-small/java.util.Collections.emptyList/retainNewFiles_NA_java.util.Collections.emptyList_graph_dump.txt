Line_2 $$ public Collection<VirtualFile> retainNewFiles(@NotNull Integer detectorId, @NotNull Collection<VirtualFile> files) -->Line_14 $$ final ArrayList<VirtualFile> newFiles = new ArrayList<VirtualFile>()[ CD ]
Line_3 $$ TIntHashSet oldSet = myNewFiles.get(detectorId)-->Line_4 $$ if (oldSet == null) [ FD ]
Line_10 $$ existentFilesSet = myExistentFrameworkFiles.get(detectorId)-->Line_18 $$ if (existentFilesSet == null || !existentFilesSet.contains(fileId)) [ FD ]
Line_8 $$ TIntHashSet existentFilesSet = null-->Line_10 $$ existentFilesSet = myExistentFrameworkFiles.get(detectorId)[ FD ]
Line_17 $$ final int fileId = FileBasedIndex.getFileId(file)-->Line_20 $$ newSet.add(fileId)[ FD ]
Line_14 $$ final ArrayList<VirtualFile> newFiles = new ArrayList<VirtualFile>()-->Line_19 $$ newFiles.add(file)[ FD ]
Line_2 $$ public Collection<VirtualFile> retainNewFiles(@NotNull Integer detectorId, @NotNull Collection<VirtualFile> files) -->Line_3 $$ TIntHashSet oldSet = myNewFiles.get(detectorId)[ FD ]
Line_16 $$ for (VirtualFile file : files) -->Line_17 $$ final int fileId = FileBasedIndex.getFileId(file)[ FD ]
Line_2 $$ public Collection<VirtualFile> retainNewFiles(@NotNull Integer detectorId, @NotNull Collection<VirtualFile> files) -->Line_26 $$ myNewFiles.put(detectorId, newSet)[ FD ]
Line_2 $$ public Collection<VirtualFile> retainNewFiles(@NotNull Integer detectorId, @NotNull Collection<VirtualFile> files) -->Line_27 $$ return newFiles[ CD ]
Line_2 $$ public Collection<VirtualFile> retainNewFiles(@NotNull Integer detectorId, @NotNull Collection<VirtualFile> files) -->Line_8 $$ TIntHashSet existentFilesSet = null[ CD ]
Line_2 $$ public Collection<VirtualFile> retainNewFiles(@NotNull Integer detectorId, @NotNull Collection<VirtualFile> files) -->Line_26 $$ myNewFiles.put(detectorId, newSet)[ CD ]
Line_5 $$ oldSet = new TIntHashSet()-->Line_23 $$ if (newSet.equals(oldSet)) [ FD ]
Line_3 $$ TIntHashSet oldSet = myNewFiles.get(detectorId)-->Line_23 $$ if (newSet.equals(oldSet)) [ FD ]
Line_2 $$ public Collection<VirtualFile> retainNewFiles(@NotNull Integer detectorId, @NotNull Collection<VirtualFile> files) -->Line_3 $$ TIntHashSet oldSet = myNewFiles.get(detectorId)[ CD ]
Line_8 $$ TIntHashSet existentFilesSet = null-->Line_18 $$ if (existentFilesSet == null || !existentFilesSet.contains(fileId)) [ FD ]
Line_4 $$ if (oldSet == null) -->Line_6 $$ myNewFiles.put(detectorId, oldSet)[ CD ]
Line_3 $$ TIntHashSet oldSet = myNewFiles.get(detectorId)-->Line_5 $$ oldSet = new TIntHashSet()[ FD ]
Line_2 $$ public Collection<VirtualFile> retainNewFiles(@NotNull Integer detectorId, @NotNull Collection<VirtualFile> files) -->Line_6 $$ myNewFiles.put(detectorId, oldSet)[ FD ]
Line_17 $$ final int fileId = FileBasedIndex.getFileId(file)-->Line_18 $$ if (existentFilesSet == null || !existentFilesSet.contains(fileId)) [ FD ]
Line_4 $$ if (oldSet == null) -->Line_5 $$ oldSet = new TIntHashSet()[ CD ]
Line_2 $$ public Collection<VirtualFile> retainNewFiles(@NotNull Integer detectorId, @NotNull Collection<VirtualFile> files) -->Line_4 $$ if (oldSet == null) [ CD ]
Line_2 $$ public Collection<VirtualFile> retainNewFiles(@NotNull Integer detectorId, @NotNull Collection<VirtualFile> files) -->Line_23 $$ if (newSet.equals(oldSet)) [ CD ]
Line_18 $$ if (existentFilesSet == null || !existentFilesSet.contains(fileId)) -->Line_20 $$ newSet.add(fileId)[ CD ]
Line_23 $$ if (newSet.equals(oldSet)) -->Line_24 $$ return Collections.emptyList()[ CD ]
Line_3 $$ TIntHashSet oldSet = myNewFiles.get(detectorId)-->Line_6 $$ myNewFiles.put(detectorId, oldSet)[ FD ]
Line_15 $$ TIntHashSet newSet = new TIntHashSet()-->Line_20 $$ newSet.add(fileId)[ FD ]
Line_15 $$ TIntHashSet newSet = new TIntHashSet()-->Line_26 $$ myNewFiles.put(detectorId, newSet)[ FD ]
Line_5 $$ oldSet = new TIntHashSet()-->Line_6 $$ myNewFiles.put(detectorId, oldSet)[ FD ]
Line_2 $$ public Collection<VirtualFile> retainNewFiles(@NotNull Integer detectorId, @NotNull Collection<VirtualFile> files) -->Line_15 $$ TIntHashSet newSet = new TIntHashSet()[ CD ]
Line_18 $$ if (existentFilesSet == null || !existentFilesSet.contains(fileId)) -->Line_19 $$ newFiles.add(file)[ CD ]
Line_15 $$ TIntHashSet newSet = new TIntHashSet()-->Line_23 $$ if (newSet.equals(oldSet)) [ FD ]
Line_2 $$ public Collection<VirtualFile> retainNewFiles(@NotNull Integer detectorId, @NotNull Collection<VirtualFile> files) -->Line_10 $$ existentFilesSet = myExistentFrameworkFiles.get(detectorId)[ FD ]
Line_16 $$ for (VirtualFile file : files) -->Line_19 $$ newFiles.add(file)[ FD ]
