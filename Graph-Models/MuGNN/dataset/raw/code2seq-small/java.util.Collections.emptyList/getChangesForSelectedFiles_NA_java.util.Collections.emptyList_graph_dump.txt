Line_25 $$ final FilePath file = change.getAfterRevision().getFile()-->Line_26 $$ addAllChangesUnderPath(changedFiles, changeListManager, changesInFiles, file)[ FD ]
Line_24 $$ if (change.getAfterRevision() != null && change.getAfterRevision().getFile() != null && change.getAfterRevision().getFile().isDirectory()) -->Line_28 $$ changesInFiles.add(change)[ CD ]
Line_14 $$ final FileStatus status = changeListManager.getStatus(vFile)-->Line_15 $$ if (FileStatus.UNKNOWN.equals(status)) [ FD ]
Line_7 $$ final ChangeListManager changeListManager = ChangeListManager.getInstance(project)-->Line_26 $$ addAllChangesUnderPath(changedFiles, changeListManager, changesInFiles, file)[ FD ]
Line_12 $$ Change change = changeListManager.getChange(vFile)-->Line_24 $$ if (change.getAfterRevision() != null && change.getAfterRevision().getFile() != null && change.getAfterRevision().getFile().isDirectory()) [ FD ]
Line_9 $$ if (virtualFiles != null) -->Line_34 $$ return changesInFiles[ CD ]
Line_11 $$ for (VirtualFile vFile : virtualFiles) -->Line_14 $$ final FileStatus status = changeListManager.getStatus(vFile)[ FD ]
Line_10 $$ List<Change> changesInFiles = new ArrayList<Change>()-->Line_28 $$ changesInFiles.add(change)[ FD ]
Line_15 $$ if (FileStatus.UNKNOWN.equals(status)) -->Line_16 $$ unversionedFiles.add(vFile)[ CD ]
Line_11 $$ for (VirtualFile vFile : virtualFiles) -->Line_16 $$ unversionedFiles.add(vFile)[ FD ]
Line_7 $$ final ChangeListManager changeListManager = ChangeListManager.getInstance(project)-->Line_20 $$ addAllChangesUnderPath(changedFiles, changeListManager, changesInFiles, VcsUtil.getFilePath(vFile))[ FD ]
Line_29 $$ if (changedFiles != null) -->Line_30 $$ changedFiles.add(vFile)[ CD ]
Line_12 $$ Change change = changeListManager.getChange(vFile)-->Line_28 $$ changesInFiles.add(change)[ FD ]
Line_11 $$ for (VirtualFile vFile : virtualFiles) -->Line_30 $$ changedFiles.add(vFile)[ FD ]
Line_11 $$ for (VirtualFile vFile : virtualFiles) -->Line_12 $$ Change change = changeListManager.getChange(vFile)[ FD ]
Line_15 $$ if (FileStatus.UNKNOWN.equals(status)) -->Line_19 $$ if (FileStatus.NOT_CHANGED.equals(status) && vFile.isDirectory()) [ CD ]
Line_24 $$ if (change.getAfterRevision() != null && change.getAfterRevision().getFile() != null && change.getAfterRevision().getFile().isDirectory()) -->Line_29 $$ if (changedFiles != null) [ CD ]
Line_7 $$ final ChangeListManager changeListManager = ChangeListManager.getInstance(project)-->Line_12 $$ Change change = changeListManager.getChange(vFile)[ FD ]
Line_19 $$ if (FileStatus.NOT_CHANGED.equals(status) && vFile.isDirectory()) -->Line_20 $$ addAllChangesUnderPath(changedFiles, changeListManager, changesInFiles, VcsUtil.getFilePath(vFile))[ CD ]
Line_4 $$ if (ProjectLevelVcsManager.getInstance(project).getAllActiveVcss().length == 0) -->Line_5 $$ return null[ CD ]
Line_17 $$ if (changedFiles != null)-->Line_18 $$ changedFiles.add(vFile)[ CD ]
Line_24 $$ if (change.getAfterRevision() != null && change.getAfterRevision().getFile() != null && change.getAfterRevision().getFile().isDirectory()) -->Line_26 $$ addAllChangesUnderPath(changedFiles, changeListManager, changesInFiles, file)[ CD ]
Line_9 $$ if (virtualFiles != null) -->Line_10 $$ List<Change> changesInFiles = new ArrayList<Change>()[ CD ]
Line_11 $$ for (VirtualFile vFile : virtualFiles) -->Line_20 $$ addAllChangesUnderPath(changedFiles, changeListManager, changesInFiles, VcsUtil.getFilePath(vFile))[ FD ]
Line_12 $$ Change change = changeListManager.getChange(vFile)-->Line_25 $$ final FilePath file = change.getAfterRevision().getFile()[ FD ]
Line_15 $$ if (FileStatus.UNKNOWN.equals(status)) -->Line_17 $$ if (changedFiles != null)[ CD ]
Line_8 $$ VirtualFile[] virtualFiles = e.getData(CommonDataKeys.VIRTUAL_FILE_ARRAY)-->Line_9 $$ if (virtualFiles != null) [ FD ]
Line_10 $$ List<Change> changesInFiles = new ArrayList<Change>()-->Line_20 $$ addAllChangesUnderPath(changedFiles, changeListManager, changesInFiles, VcsUtil.getFilePath(vFile))[ FD ]
Line_11 $$ for (VirtualFile vFile : virtualFiles) -->Line_19 $$ if (FileStatus.NOT_CHANGED.equals(status) && vFile.isDirectory()) [ FD ]
Line_11 $$ for (VirtualFile vFile : virtualFiles) -->Line_18 $$ changedFiles.add(vFile)[ FD ]
Line_14 $$ final FileStatus status = changeListManager.getStatus(vFile)-->Line_19 $$ if (FileStatus.NOT_CHANGED.equals(status) && vFile.isDirectory()) [ FD ]
Line_13 $$ if (change == null) -->Line_15 $$ if (FileStatus.UNKNOWN.equals(status)) [ CD ]
Line_13 $$ if (change == null) -->Line_14 $$ final FileStatus status = changeListManager.getStatus(vFile)[ CD ]
Line_12 $$ Change change = changeListManager.getChange(vFile)-->Line_13 $$ if (change == null) [ FD ]
Line_24 $$ if (change.getAfterRevision() != null && change.getAfterRevision().getFile() != null && change.getAfterRevision().getFile().isDirectory()) -->Line_25 $$ final FilePath file = change.getAfterRevision().getFile()[ CD ]
Line_7 $$ final ChangeListManager changeListManager = ChangeListManager.getInstance(project)-->Line_14 $$ final FileStatus status = changeListManager.getStatus(vFile)[ FD ]
Line_10 $$ List<Change> changesInFiles = new ArrayList<Change>()-->Line_26 $$ addAllChangesUnderPath(changedFiles, changeListManager, changesInFiles, file)[ FD ]
