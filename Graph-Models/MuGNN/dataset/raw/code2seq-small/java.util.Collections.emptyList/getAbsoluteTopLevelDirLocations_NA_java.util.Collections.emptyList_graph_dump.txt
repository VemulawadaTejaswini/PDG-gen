Line_12 $$ for (FileReferenceHelper helper : FileReferenceHelperRegistrar.getHelpers()) -->Line_13 $$ if (helper.isMine(project, virtualFile)) [ FD ]
Line_13 $$ if (helper.isMine(project, virtualFile)) -->Line_14 $$ if (helper.isFallback() && !list.isEmpty()) [ CD ]
Line_12 $$ for (FileReferenceHelper helper : FileReferenceHelperRegistrar.getHelpers()) -->Line_14 $$ if (helper.isFallback() && !list.isEmpty()) [ FD ]
Line_12 $$ for (FileReferenceHelper helper : FileReferenceHelperRegistrar.getHelpers()) -->Line_17 $$ final Collection<PsiFileSystemItem> roots = helper.getRoots(module)[ FD ]
Line_2 $$ public static Collection<PsiFileSystemItem> getAbsoluteTopLevelDirLocations(@NotNull final PsiFile file) -->Line_4 $$ if (virtualFile == null)[ CD ]
Line_13 $$ if (helper.isMine(project, virtualFile)) -->Line_17 $$ final Collection<PsiFileSystemItem> roots = helper.getRoots(module)[ CD ]
Line_2 $$ public static Collection<PsiFileSystemItem> getAbsoluteTopLevelDirLocations(@NotNull final PsiFile file) -->Line_11 $$ final Project project = file.getProject()[ CD ]
Line_11 $$ final Project project = file.getProject()-->Line_13 $$ if (helper.isMine(project, virtualFile)) [ FD ]
Line_10 $$ final List<PsiFileSystemItem> list = new ArrayList<PsiFileSystemItem>()-->Line_14 $$ if (helper.isFallback() && !list.isEmpty()) [ FD ]
Line_2 $$ public static Collection<PsiFileSystemItem> getAbsoluteTopLevelDirLocations(@NotNull final PsiFile file) -->Line_3 $$ final VirtualFile virtualFile = file.getVirtualFile()[ FD ]
Line_2 $$ public static Collection<PsiFileSystemItem> getAbsoluteTopLevelDirLocations(@NotNull final PsiFile file) -->Line_8 $$ if (module == null)[ CD ]
Line_7 $$ final Module module = ModuleUtilCore.findModuleForPsiElement(parent == null ? file : parent)-->Line_17 $$ final Collection<PsiFileSystemItem> roots = helper.getRoots(module)[ FD ]
Line_3 $$ final VirtualFile virtualFile = file.getVirtualFile()-->Line_13 $$ if (helper.isMine(project, virtualFile)) [ FD ]
Line_7 $$ final Module module = ModuleUtilCore.findModuleForPsiElement(parent == null ? file : parent)-->Line_8 $$ if (module == null)[ FD ]
Line_2 $$ public static Collection<PsiFileSystemItem> getAbsoluteTopLevelDirLocations(@NotNull final PsiFile file) -->Line_3 $$ final VirtualFile virtualFile = file.getVirtualFile()[ CD ]
Line_2 $$ public static Collection<PsiFileSystemItem> getAbsoluteTopLevelDirLocations(@NotNull final PsiFile file) -->Line_10 $$ final List<PsiFileSystemItem> list = new ArrayList<PsiFileSystemItem>()[ CD ]
Line_10 $$ final List<PsiFileSystemItem> list = new ArrayList<PsiFileSystemItem>()-->Line_21 $$ list.addAll(roots)[ FD ]
Line_4 $$ if (virtualFile == null)-->Line_5 $$ return Collections.emptyList()[ CD ]
Line_17 $$ final Collection<PsiFileSystemItem> roots = helper.getRoots(module)-->Line_21 $$ list.addAll(roots)[ FD ]
Line_2 $$ public static Collection<PsiFileSystemItem> getAbsoluteTopLevelDirLocations(@NotNull final PsiFile file) -->Line_11 $$ final Project project = file.getProject()[ FD ]
Line_2 $$ public static Collection<PsiFileSystemItem> getAbsoluteTopLevelDirLocations(@NotNull final PsiFile file) -->Line_6 $$ final PsiDirectory parent = file.getParent()[ FD ]
Line_2 $$ public static Collection<PsiFileSystemItem> getAbsoluteTopLevelDirLocations(@NotNull final PsiFile file) -->Line_7 $$ final Module module = ModuleUtilCore.findModuleForPsiElement(parent == null ? file : parent)[ CD ]
Line_13 $$ if (helper.isMine(project, virtualFile)) -->Line_21 $$ list.addAll(roots)[ CD ]
Line_8 $$ if (module == null)-->Line_9 $$ return Collections.emptyList()[ CD ]
Line_3 $$ final VirtualFile virtualFile = file.getVirtualFile()-->Line_4 $$ if (virtualFile == null)[ FD ]
Line_2 $$ public static Collection<PsiFileSystemItem> getAbsoluteTopLevelDirLocations(@NotNull final PsiFile file) -->Line_6 $$ final PsiDirectory parent = file.getParent()[ CD ]
Line_2 $$ public static Collection<PsiFileSystemItem> getAbsoluteTopLevelDirLocations(@NotNull final PsiFile file) -->Line_24 $$ return list[ CD ]
