Line_11 $$ if (addExplanationPost) -->Line_14 $$ MBGroupServiceSettings mbGroupServiceSettings = MBGroupServiceSettings.getInstance(themeDisplay.getScopeGroupId())[ CD ]
Line_11 $$ if (addExplanationPost) -->Line_18 $$ serviceContext.setAddGroupPermissions(true)[ CD ]
Line_2 $$ protected void splitThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_23 $$ portletURL.setParameter("mvcRenderCommandName", "/message_boards/view_message")[ CD ]
Line_22 $$ PortletURL portletURL = ((ActionResponseImpl) actionResponse).createRenderURL()-->Line_23 $$ portletURL.setParameter("mvcRenderCommandName", "/message_boards/view_message")[ FD ]
Line_2 $$ protected void splitThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_25 $$ actionResponse.sendRedirect(portletURL.toString())[ FD ]
Line_2 $$ protected void splitThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_6 $$ ServiceContext serviceContext = ServiceContextFactory.getInstance(MBThread.class.getName(), actionRequest)[ FD ]
Line_2 $$ protected void splitThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_12 $$ String subject = ParamUtil.getString(actionRequest, "subject")[ FD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_14 $$ MBGroupServiceSettings mbGroupServiceSettings = MBGroupServiceSettings.getInstance(themeDisplay.getScopeGroupId())[ FD ]
Line_2 $$ protected void splitThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_8 $$ long oldParentMessageId = message.getParentMessageId()[ CD ]
Line_13 $$ String body = ParamUtil.getString(actionRequest, "body")-->Line_20 $$ _mbMessageService.addMessage(oldParentMessageId, subject, body, mbGroupServiceSettings.getMessageFormat(), Collections.<ObjectValuePair<String, InputStream>>emptyList(), false, MBThreadConstants.PRIORITY_NOT_GIVEN, message.getAllowPingbacks(), serviceContext)[ FD ]
Line_6 $$ ServiceContext serviceContext = ServiceContextFactory.getInstance(MBThread.class.getName(), actionRequest)-->Line_19 $$ serviceContext.setAddGuestPermissions(true)[ FD ]
Line_4 $$ long messageId = ParamUtil.getLong(actionRequest, "messageId")-->Line_9 $$ MBThread newThread = _mbThreadService.splitThread(messageId, splitThreadSubject, serviceContext)[ FD ]
Line_2 $$ protected void splitThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_4 $$ long messageId = ParamUtil.getLong(actionRequest, "messageId")[ FD ]
Line_13 $$ String body = ParamUtil.getString(actionRequest, "body")-->Line_17 $$ body = StringUtil.replace(body, MBThreadConstants.NEW_THREAD_URL, newThreadURL)[ FD ]
Line_2 $$ protected void splitThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_9 $$ MBThread newThread = _mbThreadService.splitThread(messageId, splitThreadSubject, serviceContext)[ CD ]
Line_9 $$ MBThread newThread = _mbThreadService.splitThread(messageId, splitThreadSubject, serviceContext)-->Line_24 $$ portletURL.setParameter("messageId", String.valueOf(newThread.getRootMessageId()))[ FD ]
Line_11 $$ if (addExplanationPost) -->Line_16 $$ String newThreadURL = layoutFullURL + "/-/message_boards/view_message/" + message.getMessageId()[ CD ]
Line_2 $$ protected void splitThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_10 $$ boolean addExplanationPost = ParamUtil.getBoolean(actionRequest, "addExplanationPost")[ CD ]
Line_22 $$ PortletURL portletURL = ((ActionResponseImpl) actionResponse).createRenderURL()-->Line_25 $$ actionResponse.sendRedirect(portletURL.toString())[ FD ]
Line_22 $$ PortletURL portletURL = ((ActionResponseImpl) actionResponse).createRenderURL()-->Line_24 $$ portletURL.setParameter("messageId", String.valueOf(newThread.getRootMessageId()))[ FD ]
Line_7 $$ MBMessage message = _mbMessageLocalService.getMessage(messageId)-->Line_8 $$ long oldParentMessageId = message.getParentMessageId()[ FD ]
Line_16 $$ String newThreadURL = layoutFullURL + "/-/message_boards/view_message/" + message.getMessageId()-->Line_17 $$ body = StringUtil.replace(body, MBThreadConstants.NEW_THREAD_URL, newThreadURL)[ FD ]
Line_2 $$ protected void splitThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_25 $$ actionResponse.sendRedirect(portletURL.toString())[ CD ]
Line_17 $$ body = StringUtil.replace(body, MBThreadConstants.NEW_THREAD_URL, newThreadURL)-->Line_20 $$ _mbMessageService.addMessage(oldParentMessageId, subject, body, mbGroupServiceSettings.getMessageFormat(), Collections.<ObjectValuePair<String, InputStream>>emptyList(), false, MBThreadConstants.PRIORITY_NOT_GIVEN, message.getAllowPingbacks(), serviceContext)[ FD ]
Line_2 $$ protected void splitThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_24 $$ portletURL.setParameter("messageId", String.valueOf(newThread.getRootMessageId()))[ CD ]
Line_2 $$ protected void splitThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_5 $$ String splitThreadSubject = ParamUtil.getString(actionRequest, "splitThreadSubject")[ FD ]
Line_11 $$ if (addExplanationPost) -->Line_19 $$ serviceContext.setAddGuestPermissions(true)[ CD ]
Line_2 $$ protected void splitThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_13 $$ String body = ParamUtil.getString(actionRequest, "body")[ FD ]
Line_11 $$ if (addExplanationPost) -->Line_20 $$ _mbMessageService.addMessage(oldParentMessageId, subject, body, mbGroupServiceSettings.getMessageFormat(), Collections.<ObjectValuePair<String, InputStream>>emptyList(), false, MBThreadConstants.PRIORITY_NOT_GIVEN, message.getAllowPingbacks(), serviceContext)[ CD ]
Line_2 $$ protected void splitThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_4 $$ long messageId = ParamUtil.getLong(actionRequest, "messageId")[ CD ]
Line_11 $$ if (addExplanationPost) -->Line_15 $$ String layoutFullURL = PortalUtil.getLayoutFullURL(themeDisplay)[ CD ]
Line_2 $$ protected void splitThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_10 $$ boolean addExplanationPost = ParamUtil.getBoolean(actionRequest, "addExplanationPost")[ FD ]
Line_2 $$ protected void splitThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_5 $$ String splitThreadSubject = ParamUtil.getString(actionRequest, "splitThreadSubject")[ CD ]
Line_6 $$ ServiceContext serviceContext = ServiceContextFactory.getInstance(MBThread.class.getName(), actionRequest)-->Line_20 $$ _mbMessageService.addMessage(oldParentMessageId, subject, body, mbGroupServiceSettings.getMessageFormat(), Collections.<ObjectValuePair<String, InputStream>>emptyList(), false, MBThreadConstants.PRIORITY_NOT_GIVEN, message.getAllowPingbacks(), serviceContext)[ FD ]
Line_4 $$ long messageId = ParamUtil.getLong(actionRequest, "messageId")-->Line_7 $$ MBMessage message = _mbMessageLocalService.getMessage(messageId)[ FD ]
Line_5 $$ String splitThreadSubject = ParamUtil.getString(actionRequest, "splitThreadSubject")-->Line_9 $$ MBThread newThread = _mbThreadService.splitThread(messageId, splitThreadSubject, serviceContext)[ FD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_15 $$ String layoutFullURL = PortalUtil.getLayoutFullURL(themeDisplay)[ FD ]
Line_2 $$ protected void splitThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_7 $$ MBMessage message = _mbMessageLocalService.getMessage(messageId)[ CD ]
Line_8 $$ long oldParentMessageId = message.getParentMessageId()-->Line_20 $$ _mbMessageService.addMessage(oldParentMessageId, subject, body, mbGroupServiceSettings.getMessageFormat(), Collections.<ObjectValuePair<String, InputStream>>emptyList(), false, MBThreadConstants.PRIORITY_NOT_GIVEN, message.getAllowPingbacks(), serviceContext)[ FD ]
Line_14 $$ MBGroupServiceSettings mbGroupServiceSettings = MBGroupServiceSettings.getInstance(themeDisplay.getScopeGroupId())-->Line_20 $$ _mbMessageService.addMessage(oldParentMessageId, subject, body, mbGroupServiceSettings.getMessageFormat(), Collections.<ObjectValuePair<String, InputStream>>emptyList(), false, MBThreadConstants.PRIORITY_NOT_GIVEN, message.getAllowPingbacks(), serviceContext)[ FD ]
Line_11 $$ if (addExplanationPost) -->Line_13 $$ String body = ParamUtil.getString(actionRequest, "body")[ CD ]
Line_11 $$ if (addExplanationPost) -->Line_17 $$ body = StringUtil.replace(body, MBThreadConstants.NEW_THREAD_URL, newThreadURL)[ CD ]
Line_6 $$ ServiceContext serviceContext = ServiceContextFactory.getInstance(MBThread.class.getName(), actionRequest)-->Line_18 $$ serviceContext.setAddGroupPermissions(true)[ FD ]
Line_7 $$ MBMessage message = _mbMessageLocalService.getMessage(messageId)-->Line_20 $$ _mbMessageService.addMessage(oldParentMessageId, subject, body, mbGroupServiceSettings.getMessageFormat(), Collections.<ObjectValuePair<String, InputStream>>emptyList(), false, MBThreadConstants.PRIORITY_NOT_GIVEN, message.getAllowPingbacks(), serviceContext)[ FD ]
Line_2 $$ protected void splitThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_22 $$ PortletURL portletURL = ((ActionResponseImpl) actionResponse).createRenderURL()[ CD ]
Line_2 $$ protected void splitThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_6 $$ ServiceContext serviceContext = ServiceContextFactory.getInstance(MBThread.class.getName(), actionRequest)[ CD ]
Line_2 $$ protected void splitThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)[ FD ]
Line_2 $$ protected void splitThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)[ CD ]
Line_7 $$ MBMessage message = _mbMessageLocalService.getMessage(messageId)-->Line_16 $$ String newThreadURL = layoutFullURL + "/-/message_boards/view_message/" + message.getMessageId()[ FD ]
Line_2 $$ protected void splitThread(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_11 $$ if (addExplanationPost) [ CD ]
Line_11 $$ if (addExplanationPost) -->Line_12 $$ String subject = ParamUtil.getString(actionRequest, "subject")[ CD ]
Line_6 $$ ServiceContext serviceContext = ServiceContextFactory.getInstance(MBThread.class.getName(), actionRequest)-->Line_9 $$ MBThread newThread = _mbThreadService.splitThread(messageId, splitThreadSubject, serviceContext)[ FD ]
Line_12 $$ String subject = ParamUtil.getString(actionRequest, "subject")-->Line_20 $$ _mbMessageService.addMessage(oldParentMessageId, subject, body, mbGroupServiceSettings.getMessageFormat(), Collections.<ObjectValuePair<String, InputStream>>emptyList(), false, MBThreadConstants.PRIORITY_NOT_GIVEN, message.getAllowPingbacks(), serviceContext)[ FD ]
