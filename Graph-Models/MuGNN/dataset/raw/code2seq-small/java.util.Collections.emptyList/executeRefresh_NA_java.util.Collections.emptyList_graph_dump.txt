Line_44 $$ if (indexService == null) -->Line_47 $$ removeIndex = true[ CD ]
Line_12 $$ if (task.index == null) -->Line_13 $$ logger.debug("ignoring a mapping task of type [[ CD ]
Line_11 $$ for (RefreshTask task : allTasks) -->Line_13 $$ logger.debug("ignoring a mapping task of type [[ FD ]
Line_53 $$ IndexMetaData.Builder builder = IndexMetaData.builder(indexMetaData)-->Line_55 $$ boolean indexDirty = refreshIndexMapping(indexService, builder)[ FD ]
Line_43 $$ IndexService indexService = indicesService.indexService(index)-->Line_55 $$ boolean indexDirty = refreshIndexMapping(indexService, builder)[ FD ]
Line_21 $$ IndexMetaData indexMetaData = mdBuilder.get(index)-->Line_22 $$ if (indexMetaData == null) [ FD ]
Line_20 $$ String index = entry.getKey()-->Line_35 $$ logger.debug("[[ FD ]
Line_61 $$ if (removeIndex) -->Line_62 $$ indicesService.removeIndex(index, "created for mapping processing")[ CD ]
Line_21 $$ IndexMetaData indexMetaData = mdBuilder.get(index)-->Line_32 $$ if (indexMetaData.isSameUUID(task.indexUUID)) [ FD ]
Line_58 $$ dirty = true-->Line_66 $$ if (!dirty) [ FD ]
Line_20 $$ String index = entry.getKey()-->Line_21 $$ IndexMetaData indexMetaData = mdBuilder.get(index)[ FD ]
Line_32 $$ if (indexMetaData.isSameUUID(task.indexUUID)) -->Line_35 $$ logger.debug("[[ CD ]
Line_20 $$ String index = entry.getKey()-->Line_43 $$ IndexService indexService = indicesService.indexService(index)[ FD ]
Line_18 $$ MetaData.Builder mdBuilder = MetaData.builder(currentState.metaData())-->Line_57 $$ mdBuilder.put(builder)[ FD ]
Line_21 $$ IndexMetaData indexMetaData = mdBuilder.get(index)-->Line_48 $$ for (ObjectCursor<MappingMetaData> metaData : indexMetaData.getMappings().values()) [ FD ]
Line_66 $$ if (!dirty) -->Line_67 $$ return currentState[ CD ]
Line_43 $$ IndexService indexService = indicesService.indexService(index)-->Line_44 $$ if (indexService == null) [ FD ]
Line_21 $$ IndexMetaData indexMetaData = mdBuilder.get(index)-->Line_53 $$ IndexMetaData.Builder builder = IndexMetaData.builder(indexMetaData)[ FD ]
Line_30 $$ boolean hasTaskWithRightUUID = false-->Line_33 $$ hasTaskWithRightUUID = true[ FD ]
Line_20 $$ String index = entry.getKey()-->Line_62 $$ indicesService.removeIndex(index, "created for mapping processing")[ FD ]
Line_19 $$ for (Map.Entry<String, List<RefreshTask>> entry : tasksPerIndex.entrySet()) -->Line_20 $$ String index = entry.getKey()[ FD ]
Line_17 $$ boolean dirty = false-->Line_66 $$ if (!dirty) [ FD ]
Line_32 $$ if (indexMetaData.isSameUUID(task.indexUUID)) -->Line_33 $$ hasTaskWithRightUUID = true[ CD ]
Line_11 $$ for (RefreshTask task : allTasks) -->Line_35 $$ logger.debug("[[ FD ]
Line_56 $$ if (indexDirty) -->Line_57 $$ mdBuilder.put(builder)[ CD ]
Line_30 $$ boolean hasTaskWithRightUUID = false-->Line_38 $$ if (hasTaskWithRightUUID == false) [ FD ]
Line_11 $$ for (RefreshTask task : allTasks) -->Line_15 $$ tasksPerIndex.computeIfAbsent(task.index,  k -> new ArrayList()).add(task)[ FD ]
Line_18 $$ MetaData.Builder mdBuilder = MetaData.builder(currentState.metaData())-->Line_69 $$ return ClusterState.builder(currentState).metaData(mdBuilder).build()[ FD ]
Line_33 $$ hasTaskWithRightUUID = true-->Line_38 $$ if (hasTaskWithRightUUID == false) [ FD ]
Line_18 $$ MetaData.Builder mdBuilder = MetaData.builder(currentState.metaData())-->Line_21 $$ IndexMetaData indexMetaData = mdBuilder.get(index)[ FD ]
Line_53 $$ IndexMetaData.Builder builder = IndexMetaData.builder(indexMetaData)-->Line_57 $$ mdBuilder.put(builder)[ FD ]
Line_56 $$ if (indexDirty) -->Line_58 $$ dirty = true[ CD ]
Line_17 $$ boolean dirty = false-->Line_58 $$ dirty = true[ FD ]
