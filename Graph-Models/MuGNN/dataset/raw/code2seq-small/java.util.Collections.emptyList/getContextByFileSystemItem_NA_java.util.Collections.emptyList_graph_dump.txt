Line_7 $$ final ArrayList<PsiFileSystemItem> list = new ArrayList<PsiFileSystemItem>()-->Line_17 $$ if (!list.isEmpty()) [ FD ]
Line_7 $$ final ArrayList<PsiFileSystemItem> list = new ArrayList<PsiFileSystemItem>()-->Line_11 $$ if (!list.isEmpty() && helper.isFallback()) [ FD ]
Line_5 $$ if (virtualFile != null) -->Line_7 $$ final ArrayList<PsiFileSystemItem> list = new ArrayList<PsiFileSystemItem>()[ CD ]
Line_4 $$ VirtualFile virtualFile = file.getVirtualFile()-->Line_20 $$ final VirtualFile parent = virtualFile.getParent()[ FD ]
Line_23 $$ if (directory != null) -->Line_24 $$ return Collections.<PsiFileSystemItem>singleton(directory)[ CD ]
Line_22 $$ final PsiDirectory directory = file.getManager().findDirectory(parent)-->Line_23 $$ if (directory != null) [ FD ]
Line_21 $$ if (parent != null) -->Line_23 $$ if (directory != null) [ CD ]
Line_4 $$ VirtualFile virtualFile = file.getVirtualFile()-->Line_5 $$ if (virtualFile != null) [ FD ]
Line_5 $$ if (virtualFile != null) -->Line_8 $$ final Project project = file.getProject()[ CD ]
Line_4 $$ VirtualFile virtualFile = file.getVirtualFile()-->Line_10 $$ if (helper.isMine(project, virtualFile)) [ FD ]
Line_8 $$ final Project project = file.getProject()-->Line_14 $$ list.addAll(helper.getContexts(project, virtualFile))[ FD ]
Line_7 $$ final ArrayList<PsiFileSystemItem> list = new ArrayList<PsiFileSystemItem>()-->Line_14 $$ list.addAll(helper.getContexts(project, virtualFile))[ FD ]
Line_5 $$ if (virtualFile != null) -->Line_6 $$ final FileReferenceHelper[] helpers = FileReferenceHelperRegistrar.getHelpers()[ CD ]
Line_8 $$ final Project project = file.getProject()-->Line_10 $$ if (helper.isMine(project, virtualFile)) [ FD ]
Line_5 $$ if (virtualFile != null) -->Line_20 $$ final VirtualFile parent = virtualFile.getParent()[ CD ]
Line_22 $$ final PsiDirectory directory = file.getManager().findDirectory(parent)-->Line_24 $$ return Collections.<PsiFileSystemItem>singleton(directory)[ FD ]
Line_9 $$ for (FileReferenceHelper helper : helpers) -->Line_10 $$ if (helper.isMine(project, virtualFile)) [ FD ]
Line_10 $$ if (helper.isMine(project, virtualFile)) -->Line_14 $$ list.addAll(helper.getContexts(project, virtualFile))[ CD ]
Line_9 $$ for (FileReferenceHelper helper : helpers) -->Line_14 $$ list.addAll(helper.getContexts(project, virtualFile))[ FD ]
Line_5 $$ if (virtualFile != null) -->Line_21 $$ if (parent != null) [ CD ]
Line_20 $$ final VirtualFile parent = virtualFile.getParent()-->Line_21 $$ if (parent != null) [ FD ]
Line_10 $$ if (helper.isMine(project, virtualFile)) -->Line_11 $$ if (!list.isEmpty() && helper.isFallback()) [ CD ]
Line_21 $$ if (parent != null) -->Line_22 $$ final PsiDirectory directory = file.getManager().findDirectory(parent)[ CD ]
Line_17 $$ if (!list.isEmpty()) -->Line_18 $$ return list[ CD ]
Line_5 $$ if (virtualFile != null) -->Line_17 $$ if (!list.isEmpty()) [ CD ]
Line_20 $$ final VirtualFile parent = virtualFile.getParent()-->Line_22 $$ final PsiDirectory directory = file.getManager().findDirectory(parent)[ FD ]
Line_9 $$ for (FileReferenceHelper helper : helpers) -->Line_11 $$ if (!list.isEmpty() && helper.isFallback()) [ FD ]
Line_4 $$ VirtualFile virtualFile = file.getVirtualFile()-->Line_14 $$ list.addAll(helper.getContexts(project, virtualFile))[ FD ]
