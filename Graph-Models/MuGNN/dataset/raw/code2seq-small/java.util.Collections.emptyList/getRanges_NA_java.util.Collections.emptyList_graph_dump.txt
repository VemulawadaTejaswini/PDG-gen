Line_28 $$ if (start == -1) -->Line_29 $$ start = length - end[ CD ]
Line_10 $$ List<Range> ranges = new ArrayList()-->Line_38 $$ ranges.add(range)[ FD ]
Line_2 $$ public static List<Range> getRanges(HttpServletRequest request, HttpServletResponse response, long length) throws IOException -->Line_40 $$ return ranges[ CD ]
Line_32 $$ end = length - 1-->Line_34 $$ if (start > end) [ FD ]
Line_13 $$ StringBundler sb = new StringBundler(8)-->Line_22 $$ throw new IOException(sb.toString())[ FD ]
Line_2 $$ public static List<Range> getRanges(HttpServletRequest request, HttpServletResponse response, long length) throws IOException -->Line_11 $$ String[] rangeFields = StringUtil.split(rangeString.substring(6))[ CD ]
Line_27 $$ long end = GetterUtil.getLong(rangeField.substring(index + 1, rangeField.length()), -1)-->Line_32 $$ end = length - 1[ FD ]
Line_4 $$ if (Validator.isNull(rangeString)) -->Line_5 $$ return Collections.emptyList()[ CD ]
Line_24 $$ for (String rangeField : rangeFields) -->Line_25 $$ int index = rangeField.indexOf(StringPool.DASH)[ FD ]
Line_24 $$ for (String rangeField : rangeFields) -->Line_26 $$ long start = GetterUtil.getLong(rangeField.substring(0, index), -1)[ FD ]
Line_28 $$ if (start == -1) -->Line_31 $$ if ((end == -1) || (end > (length - 1))) [ CD ]
Line_3 $$ String rangeString = request.getHeader(HttpHeaders.RANGE)-->Line_4 $$ if (Validator.isNull(rangeString)) [ FD ]
Line_2 $$ public static List<Range> getRanges(HttpServletRequest request, HttpServletResponse response, long length) throws IOException -->Line_12 $$ if (rangeFields.length > _MAX_RANGE_FIELDS) [ CD ]
Line_37 $$ Range range = new Range(start, end, length)-->Line_38 $$ ranges.add(range)[ FD ]
Line_13 $$ StringBundler sb = new StringBundler(8)-->Line_16 $$ sb.append(" with ")[ FD ]
Line_13 $$ StringBundler sb = new StringBundler(8)-->Line_17 $$ sb.append(rangeFields.length)[ FD ]
Line_12 $$ if (rangeFields.length > _MAX_RANGE_FIELDS) -->Line_19 $$ sb.append("specified by the property \"")[ CD ]
Line_12 $$ if (rangeFields.length > _MAX_RANGE_FIELDS) -->Line_14 $$ sb.append("Request range ")[ CD ]
Line_2 $$ public static List<Range> getRanges(HttpServletRequest request, HttpServletResponse response, long length) throws IOException -->Line_7 $$ if (!rangeString.matches(_RANGE_REGEX)) [ CD ]
Line_27 $$ long end = GetterUtil.getLong(rangeField.substring(index + 1, rangeField.length()), -1)-->Line_34 $$ if (start > end) [ FD ]
Line_12 $$ if (rangeFields.length > _MAX_RANGE_FIELDS) -->Line_20 $$ sb.append(PropsKeys.WEB_SERVER_SERVLET_MAX_RANGE_FIELDS)[ CD ]
Line_2 $$ public static List<Range> getRanges(HttpServletRequest request, HttpServletResponse response, long length) throws IOException -->Line_10 $$ List<Range> ranges = new ArrayList()[ CD ]
Line_12 $$ if (rangeFields.length > _MAX_RANGE_FIELDS) -->Line_18 $$ sb.append(" range fields has exceeded maximum allowance as ")[ CD ]
Line_29 $$ start = length - end-->Line_34 $$ if (start > end) [ FD ]
Line_13 $$ StringBundler sb = new StringBundler(8)-->Line_18 $$ sb.append(" range fields has exceeded maximum allowance as ")[ FD ]
Line_2 $$ public static List<Range> getRanges(HttpServletRequest request, HttpServletResponse response, long length) throws IOException -->Line_29 $$ start = length - end[ FD ]
Line_3 $$ String rangeString = request.getHeader(HttpHeaders.RANGE)-->Line_7 $$ if (!rangeString.matches(_RANGE_REGEX)) [ FD ]
Line_12 $$ if (rangeFields.length > _MAX_RANGE_FIELDS) -->Line_13 $$ StringBundler sb = new StringBundler(8)[ CD ]
Line_26 $$ long start = GetterUtil.getLong(rangeField.substring(0, index), -1)-->Line_28 $$ if (start == -1) [ FD ]
Line_2 $$ public static List<Range> getRanges(HttpServletRequest request, HttpServletResponse response, long length) throws IOException -->Line_30 $$ end = length - 1[ FD ]
Line_24 $$ for (String rangeField : rangeFields) -->Line_27 $$ long end = GetterUtil.getLong(rangeField.substring(index + 1, rangeField.length()), -1)[ FD ]
Line_12 $$ if (rangeFields.length > _MAX_RANGE_FIELDS) -->Line_16 $$ sb.append(" with ")[ CD ]
Line_13 $$ StringBundler sb = new StringBundler(8)-->Line_14 $$ sb.append("Request range ")[ FD ]
Line_27 $$ long end = GetterUtil.getLong(rangeField.substring(index + 1, rangeField.length()), -1)-->Line_29 $$ start = length - end[ FD ]
Line_26 $$ long start = GetterUtil.getLong(rangeField.substring(0, index), -1)-->Line_34 $$ if (start > end) [ FD ]
Line_27 $$ long end = GetterUtil.getLong(rangeField.substring(index + 1, rangeField.length()), -1)-->Line_30 $$ end = length - 1[ FD ]
Line_13 $$ StringBundler sb = new StringBundler(8)-->Line_19 $$ sb.append("specified by the property \"")[ FD ]
Line_25 $$ int index = rangeField.indexOf(StringPool.DASH)-->Line_26 $$ long start = GetterUtil.getLong(rangeField.substring(0, index), -1)[ FD ]
Line_28 $$ if (start == -1) -->Line_30 $$ end = length - 1[ CD ]
Line_26 $$ long start = GetterUtil.getLong(rangeField.substring(0, index), -1)-->Line_29 $$ start = length - end[ FD ]
Line_31 $$ if ((end == -1) || (end > (length - 1))) -->Line_32 $$ end = length - 1[ CD ]
Line_2 $$ public static List<Range> getRanges(HttpServletRequest request, HttpServletResponse response, long length) throws IOException -->Line_32 $$ end = length - 1[ FD ]
Line_30 $$ end = length - 1-->Line_34 $$ if (start > end) [ FD ]
Line_30 $$ end = length - 1-->Line_32 $$ end = length - 1[ FD ]
Line_2 $$ public static List<Range> getRanges(HttpServletRequest request, HttpServletResponse response, long length) throws IOException -->Line_3 $$ String rangeString = request.getHeader(HttpHeaders.RANGE)[ FD ]
Line_12 $$ if (rangeFields.length > _MAX_RANGE_FIELDS) -->Line_21 $$ sb.append("\"")[ CD ]
Line_12 $$ if (rangeFields.length > _MAX_RANGE_FIELDS) -->Line_15 $$ sb.append(rangeString)[ CD ]
Line_3 $$ String rangeString = request.getHeader(HttpHeaders.RANGE)-->Line_11 $$ String[] rangeFields = StringUtil.split(rangeString.substring(6))[ FD ]
Line_3 $$ String rangeString = request.getHeader(HttpHeaders.RANGE)-->Line_15 $$ sb.append(rangeString)[ FD ]
Line_13 $$ StringBundler sb = new StringBundler(8)-->Line_21 $$ sb.append("\"")[ FD ]
Line_2 $$ public static List<Range> getRanges(HttpServletRequest request, HttpServletResponse response, long length) throws IOException -->Line_4 $$ if (Validator.isNull(rangeString)) [ CD ]
Line_13 $$ StringBundler sb = new StringBundler(8)-->Line_15 $$ sb.append(rangeString)[ FD ]
Line_13 $$ StringBundler sb = new StringBundler(8)-->Line_20 $$ sb.append(PropsKeys.WEB_SERVER_SERVLET_MAX_RANGE_FIELDS)[ FD ]
Line_12 $$ if (rangeFields.length > _MAX_RANGE_FIELDS) -->Line_17 $$ sb.append(rangeFields.length)[ CD ]
Line_2 $$ public static List<Range> getRanges(HttpServletRequest request, HttpServletResponse response, long length) throws IOException -->Line_3 $$ String rangeString = request.getHeader(HttpHeaders.RANGE)[ CD ]
