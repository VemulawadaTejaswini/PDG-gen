Line_11 $$ for (String header : headers.keySet()) -->Line_12 $$ if (!specialHeaders.contains(header.toLowerCase())) [ FD ]
Line_6 $$ if (logger.isDebugEnabled()) -->Line_7 $$ logger.debug("Connecting to " + uri)[ CD ]
Line_12 $$ if (!specialHeaders.contains(header.toLowerCase())) -->Line_13 $$ headersToUse.put(header, headers.get(header))[ CD ]
Line_17 $$ List<String> subProtocols = ((headers != null) && (headers.getSecWebSocketProtocol() != null)) ? headers.getSecWebSocketProtocol() : Collections.<String>emptyList()-->Line_19 $$ return doHandshakeInternal(webSocketHandler, headersToUse, uri, subProtocols, extensions, Collections.<String, Object>emptyMap())[ FD ]
Line_18 $$ List<WebSocketExtension> extensions = ((headers != null) && (headers.getSecWebSocketExtensions() != null)) ? headers.getSecWebSocketExtensions() : Collections.<WebSocketExtension>emptyList()-->Line_19 $$ return doHandshakeInternal(webSocketHandler, headersToUse, uri, subProtocols, extensions, Collections.<String, Object>emptyMap())[ FD ]
Line_9 $$ HttpHeaders headersToUse = new HttpHeaders()-->Line_13 $$ headersToUse.put(header, headers.get(header))[ FD ]
Line_9 $$ HttpHeaders headersToUse = new HttpHeaders()-->Line_19 $$ return doHandshakeInternal(webSocketHandler, headersToUse, uri, subProtocols, extensions, Collections.<String, Object>emptyMap())[ FD ]
Line_11 $$ for (String header : headers.keySet()) -->Line_13 $$ headersToUse.put(header, headers.get(header))[ FD ]
