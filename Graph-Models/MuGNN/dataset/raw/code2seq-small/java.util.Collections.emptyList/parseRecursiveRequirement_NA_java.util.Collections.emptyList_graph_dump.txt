Line_5 $$ if (matcher.matches()) -->Line_8 $$ if (dir != null) [ CD ]
Line_9 $$ VirtualFile file = dir.findFileByRelativePath(fileName)-->Line_11 $$ file = LocalFileSystem.getInstance().findFileByPath(fileName)[ FD ]
Line_7 $$ final VirtualFile dir = anchor.getParent()-->Line_8 $$ if (dir != null) [ FD ]
Line_7 $$ final VirtualFile dir = anchor.getParent()-->Line_9 $$ VirtualFile file = dir.findFileByRelativePath(fileName)[ FD ]
Line_6 $$ final String fileName = FileUtil.toSystemIndependentName(matcher.group(1))-->Line_11 $$ file = LocalFileSystem.getInstance().findFileByPath(fileName)[ FD ]
Line_4 $$ final Matcher matcher = RECURSIVE_REQUIREMENT.matcher(line)-->Line_6 $$ final String fileName = FileUtil.toSystemIndependentName(matcher.group(1))[ FD ]
Line_8 $$ if (dir != null) -->Line_13 $$ if (file != null) [ CD ]
Line_4 $$ final Matcher matcher = RECURSIVE_REQUIREMENT.matcher(line)-->Line_5 $$ if (matcher.matches()) [ FD ]
Line_6 $$ final String fileName = FileUtil.toSystemIndependentName(matcher.group(1))-->Line_9 $$ VirtualFile file = dir.findFileByRelativePath(fileName)[ FD ]
Line_8 $$ if (dir != null) -->Line_9 $$ VirtualFile file = dir.findFileByRelativePath(fileName)[ CD ]
Line_9 $$ VirtualFile file = dir.findFileByRelativePath(fileName)-->Line_14 $$ return parse(file, visited)[ FD ]
Line_9 $$ VirtualFile file = dir.findFileByRelativePath(fileName)-->Line_13 $$ if (file != null) [ FD ]
Line_11 $$ file = LocalFileSystem.getInstance().findFileByPath(fileName)-->Line_13 $$ if (file != null) [ FD ]
Line_13 $$ if (file != null) -->Line_14 $$ return parse(file, visited)[ CD ]
Line_8 $$ if (dir != null) -->Line_10 $$ if (file == null) [ CD ]
Line_9 $$ VirtualFile file = dir.findFileByRelativePath(fileName)-->Line_10 $$ if (file == null) [ FD ]
Line_10 $$ if (file == null) -->Line_11 $$ file = LocalFileSystem.getInstance().findFileByPath(fileName)[ CD ]
Line_5 $$ if (matcher.matches()) -->Line_6 $$ final String fileName = FileUtil.toSystemIndependentName(matcher.group(1))[ CD ]
Line_11 $$ file = LocalFileSystem.getInstance().findFileByPath(fileName)-->Line_14 $$ return parse(file, visited)[ FD ]
Line_5 $$ if (matcher.matches()) -->Line_7 $$ final VirtualFile dir = anchor.getParent()[ CD ]
