Line_2 $$ public static List<DomElement> getDefinedChildren(@NotNull final DomElement parent, final boolean tags, final boolean attributes) -->Line_17 $$ if (parent instanceof DomFileElement) [ FD ]
Line_4 $$ final SmartList<DomElement> result = new SmartList<DomElement>()-->Line_34 $$ ContainerUtil.addIfNotNull(element, result)[ FD ]
Line_2 $$ public static List<DomElement> getDefinedChildren(@NotNull final DomElement parent, final boolean tags, final boolean attributes) -->Line_14 $$ ProgressManager.checkCanceled()[ CD ]
Line_17 $$ if (parent instanceof DomFileElement) -->Line_19 $$ return tags ? Arrays.asList(element.getRootElement()) : Collections.<DomElement>emptyList()[ CD ]
Line_2 $$ public static List<DomElement> getDefinedChildren(@NotNull final DomElement parent, final boolean tags, final boolean attributes) -->Line_21 $$ final XmlElement xmlElement = parent.getXmlElement()[ CD ]
Line_5 $$ parent.acceptChildren(new DomElementVisitor() -->Line_33 $$ if (checkHasXml(attribute, element)) [ FD ]
Line_2 $$ public static List<DomElement> getDefinedChildren(@NotNull final DomElement parent, final boolean tags, final boolean attributes) -->Line_21 $$ final XmlElement xmlElement = parent.getXmlElement()[ FD ]
Line_22 $$ if (xmlElement instanceof XmlTag) -->Line_26 $$ if (attributes) [ CD ]
Line_5 $$ parent.acceptChildren(new DomElementVisitor() -->Line_7 $$ if (hasXml(element)) [ CD ]
Line_22 $$ if (xmlElement instanceof XmlTag) -->Line_50 $$ return result[ CD ]
Line_28 $$ if (!attribute.isValid()) -->Line_29 $$ LOG.error("Invalid attr: parent.valid=" + tag.isValid())[ CD ]
Line_3 $$ if (parent instanceof MergedObject) -->Line_12 $$ return result[ CD ]
Line_4 $$ final SmartList<DomElement> result = new SmartList<DomElement>()-->Line_8 $$ result.add(element)[ FD ]
Line_2 $$ public static List<DomElement> getDefinedChildren(@NotNull final DomElement parent, final boolean tags, final boolean attributes) -->Line_52 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public static List<DomElement> getDefinedChildren(@NotNull final DomElement parent, final boolean tags, final boolean attributes) -->Line_15 $$ if (parent instanceof GenericAttributeValue)[ CD ]
Line_5 $$ parent.acceptChildren(new DomElementVisitor() -->Line_8 $$ result.add(element)[ FD ]
Line_5 $$ parent.acceptChildren(new DomElementVisitor() -->Line_45 $$ if (checkHasXml(subTag, element)) [ FD ]
Line_2 $$ public static List<DomElement> getDefinedChildren(@NotNull final DomElement parent, final boolean tags, final boolean attributes) -->Line_22 $$ if (xmlElement instanceof XmlTag) [ CD ]
Line_2 $$ public static List<DomElement> getDefinedChildren(@NotNull final DomElement parent, final boolean tags, final boolean attributes) -->Line_5 $$ parent.acceptChildren(new DomElementVisitor() [ FD ]
Line_15 $$ if (parent instanceof GenericAttributeValue)-->Line_16 $$ return Collections.emptyList()[ CD ]
Line_5 $$ parent.acceptChildren(new DomElementVisitor() -->Line_7 $$ if (hasXml(element)) [ FD ]
Line_40 $$ if (!subTag.isValid()) -->Line_41 $$ LOG.error("Invalid subtag: parent.valid=" + tag.isValid())[ CD ]
Line_22 $$ if (xmlElement instanceof XmlTag) -->Line_24 $$ final DomManager domManager = parent.getManager()[ CD ]
Line_2 $$ public static List<DomElement> getDefinedChildren(@NotNull final DomElement parent, final boolean tags, final boolean attributes) -->Line_3 $$ if (parent instanceof MergedObject) [ CD ]
Line_45 $$ if (checkHasXml(subTag, element)) -->Line_46 $$ ContainerUtil.addIfNotNull(element, result)[ CD ]
Line_3 $$ if (parent instanceof MergedObject) -->Line_5 $$ parent.acceptChildren(new DomElementVisitor() [ CD ]
Line_2 $$ public static List<DomElement> getDefinedChildren(@NotNull final DomElement parent, final boolean tags, final boolean attributes) -->Line_24 $$ final DomManager domManager = parent.getManager()[ FD ]
Line_4 $$ final SmartList<DomElement> result = new SmartList<DomElement>()-->Line_46 $$ ContainerUtil.addIfNotNull(element, result)[ FD ]
Line_5 $$ parent.acceptChildren(new DomElementVisitor() -->Line_19 $$ return tags ? Arrays.asList(element.getRootElement()) : Collections.<DomElement>emptyList()[ FD ]
Line_5 $$ parent.acceptChildren(new DomElementVisitor() -->Line_46 $$ ContainerUtil.addIfNotNull(element, result)[ FD ]
Line_3 $$ if (parent instanceof MergedObject) -->Line_4 $$ final SmartList<DomElement> result = new SmartList<DomElement>()[ CD ]
Line_2 $$ public static List<DomElement> getDefinedChildren(@NotNull final DomElement parent, final boolean tags, final boolean attributes) -->Line_15 $$ if (parent instanceof GenericAttributeValue)[ FD ]
Line_7 $$ if (hasXml(element)) -->Line_8 $$ result.add(element)[ CD ]
Line_33 $$ if (checkHasXml(attribute, element)) -->Line_34 $$ ContainerUtil.addIfNotNull(element, result)[ CD ]
Line_5 $$ parent.acceptChildren(new DomElementVisitor() -->Line_34 $$ ContainerUtil.addIfNotNull(element, result)[ FD ]
Line_2 $$ public static List<DomElement> getDefinedChildren(@NotNull final DomElement parent, final boolean tags, final boolean attributes) -->Line_3 $$ if (parent instanceof MergedObject) [ FD ]
Line_2 $$ public static List<DomElement> getDefinedChildren(@NotNull final DomElement parent, final boolean tags, final boolean attributes) -->Line_17 $$ if (parent instanceof DomFileElement) [ CD ]
Line_22 $$ if (xmlElement instanceof XmlTag) -->Line_38 $$ if (tags) [ CD ]
