Line_8 $$ while (start < end) -->Line_12 $$ if ((fragment.getInnerFragments() == null || !fragment.getInnerFragments().isEmpty()) && !StringUtil.equalsIgnoreWhitespaces(sequence1, sequence2)) [ CD ]
Line_9 $$ LineFragment fragment = fragments.get(start)-->Line_21 $$ if ((fragment.getInnerFragments() == null || !fragment.getInnerFragments().isEmpty()) && !StringUtil.equalsIgnoreWhitespaces(sequence1, sequence2)) [ FD ]
Line_17 $$ while (start < end) -->Line_19 $$ CharSequenceSubSequence sequence1 = new CharSequenceSubSequence(text1, fragment.getStartOffset1(), fragment.getEndOffset1())[ CD ]
Line_5 $$ int end = fragments.size()-->Line_24 $$ end--[ FD ]
Line_8 $$ while (start < end) -->Line_10 $$ CharSequenceSubSequence sequence1 = new CharSequenceSubSequence(text1, fragment.getStartOffset1(), fragment.getEndOffset1())[ CD ]
Line_9 $$ LineFragment fragment = fragments.get(start)-->Line_12 $$ if ((fragment.getInnerFragments() == null || !fragment.getInnerFragments().isEmpty()) && !StringUtil.equalsIgnoreWhitespaces(sequence1, sequence2)) [ FD ]
Line_5 $$ int end = fragments.size()-->Line_30 $$ return Collections.singletonList(doSquash(fragments.subList(start, end)))[ FD ]
Line_18 $$ LineFragment fragment = fragments.get(end - 1)-->Line_21 $$ if ((fragment.getInnerFragments() == null || !fragment.getInnerFragments().isEmpty()) && !StringUtil.equalsIgnoreWhitespaces(sequence1, sequence2)) [ FD ]
Line_5 $$ int end = fragments.size()-->Line_17 $$ while (start < end) [ FD ]
Line_27 $$ if (start == end)-->Line_28 $$ return Collections.emptyList()[ CD ]
Line_9 $$ LineFragment fragment = fragments.get(start)-->Line_19 $$ CharSequenceSubSequence sequence1 = new CharSequenceSubSequence(text1, fragment.getStartOffset1(), fragment.getEndOffset1())[ FD ]
Line_10 $$ CharSequenceSubSequence sequence1 = new CharSequenceSubSequence(text1, fragment.getStartOffset1(), fragment.getEndOffset1())-->Line_12 $$ if ((fragment.getInnerFragments() == null || !fragment.getInnerFragments().isEmpty()) && !StringUtil.equalsIgnoreWhitespaces(sequence1, sequence2)) [ FD ]
Line_17 $$ while (start < end) -->Line_18 $$ LineFragment fragment = fragments.get(end - 1)[ CD ]
Line_5 $$ int end = fragments.size()-->Line_32 $$ return fragments.subList(start, end)[ FD ]
Line_4 $$ int start = 0-->Line_27 $$ if (start == end)[ FD ]
Line_17 $$ while (start < end) -->Line_24 $$ end--[ CD ]
Line_11 $$ CharSequenceSubSequence sequence2 = new CharSequenceSubSequence(text2, fragment.getStartOffset2(), fragment.getEndOffset2())-->Line_21 $$ if ((fragment.getInnerFragments() == null || !fragment.getInnerFragments().isEmpty()) && !StringUtil.equalsIgnoreWhitespaces(sequence1, sequence2)) [ FD ]
Line_19 $$ CharSequenceSubSequence sequence1 = new CharSequenceSubSequence(text1, fragment.getStartOffset1(), fragment.getEndOffset1())-->Line_21 $$ if ((fragment.getInnerFragments() == null || !fragment.getInnerFragments().isEmpty()) && !StringUtil.equalsIgnoreWhitespaces(sequence1, sequence2)) [ FD ]
Line_8 $$ while (start < end) -->Line_11 $$ CharSequenceSubSequence sequence2 = new CharSequenceSubSequence(text2, fragment.getStartOffset2(), fragment.getEndOffset2())[ CD ]
Line_10 $$ CharSequenceSubSequence sequence1 = new CharSequenceSubSequence(text1, fragment.getStartOffset1(), fragment.getEndOffset1())-->Line_21 $$ if ((fragment.getInnerFragments() == null || !fragment.getInnerFragments().isEmpty()) && !StringUtil.equalsIgnoreWhitespaces(sequence1, sequence2)) [ FD ]
Line_18 $$ LineFragment fragment = fragments.get(end - 1)-->Line_20 $$ CharSequenceSubSequence sequence2 = new CharSequenceSubSequence(text2, fragment.getStartOffset2(), fragment.getEndOffset2())[ FD ]
Line_4 $$ int start = 0-->Line_9 $$ LineFragment fragment = fragments.get(start)[ FD ]
Line_8 $$ while (start < end) -->Line_15 $$ start++[ CD ]
Line_18 $$ LineFragment fragment = fragments.get(end - 1)-->Line_19 $$ CharSequenceSubSequence sequence1 = new CharSequenceSubSequence(text1, fragment.getStartOffset1(), fragment.getEndOffset1())[ FD ]
Line_9 $$ LineFragment fragment = fragments.get(start)-->Line_10 $$ CharSequenceSubSequence sequence1 = new CharSequenceSubSequence(text1, fragment.getStartOffset1(), fragment.getEndOffset1())[ FD ]
Line_4 $$ int start = 0-->Line_17 $$ while (start < end) [ FD ]
Line_20 $$ CharSequenceSubSequence sequence2 = new CharSequenceSubSequence(text2, fragment.getStartOffset2(), fragment.getEndOffset2())-->Line_21 $$ if ((fragment.getInnerFragments() == null || !fragment.getInnerFragments().isEmpty()) && !StringUtil.equalsIgnoreWhitespaces(sequence1, sequence2)) [ FD ]
Line_29 $$ if (squash) -->Line_30 $$ return Collections.singletonList(doSquash(fragments.subList(start, end)))[ CD ]
Line_5 $$ int end = fragments.size()-->Line_8 $$ while (start < end) [ FD ]
Line_9 $$ LineFragment fragment = fragments.get(start)-->Line_20 $$ CharSequenceSubSequence sequence2 = new CharSequenceSubSequence(text2, fragment.getStartOffset2(), fragment.getEndOffset2())[ FD ]
Line_4 $$ int start = 0-->Line_30 $$ return Collections.singletonList(doSquash(fragments.subList(start, end)))[ FD ]
Line_4 $$ int start = 0-->Line_8 $$ while (start < end) [ FD ]
Line_4 $$ int start = 0-->Line_15 $$ start++[ FD ]
Line_5 $$ int end = fragments.size()-->Line_27 $$ if (start == end)[ FD ]
Line_17 $$ while (start < end) -->Line_20 $$ CharSequenceSubSequence sequence2 = new CharSequenceSubSequence(text2, fragment.getStartOffset2(), fragment.getEndOffset2())[ CD ]
Line_9 $$ LineFragment fragment = fragments.get(start)-->Line_11 $$ CharSequenceSubSequence sequence2 = new CharSequenceSubSequence(text2, fragment.getStartOffset2(), fragment.getEndOffset2())[ FD ]
Line_4 $$ int start = 0-->Line_32 $$ return fragments.subList(start, end)[ FD ]
Line_11 $$ CharSequenceSubSequence sequence2 = new CharSequenceSubSequence(text2, fragment.getStartOffset2(), fragment.getEndOffset2())-->Line_12 $$ if ((fragment.getInnerFragments() == null || !fragment.getInnerFragments().isEmpty()) && !StringUtil.equalsIgnoreWhitespaces(sequence1, sequence2)) [ FD ]
Line_8 $$ while (start < end) -->Line_9 $$ LineFragment fragment = fragments.get(start)[ CD ]
Line_17 $$ while (start < end) -->Line_21 $$ if ((fragment.getInnerFragments() == null || !fragment.getInnerFragments().isEmpty()) && !StringUtil.equalsIgnoreWhitespaces(sequence1, sequence2)) [ CD ]
