Line_34 $$ if (descriptor.isStatic) -->Line_35 $$ field.getModifierList().addModifier(STATIC_MASK)[ CD ]
Line_7 $$ for (GrField field : myDefinition.getCodeFields()) -->Line_37 $$ field.getModifierList().addModifier(descriptor.isPublic ? PUBLIC_MASK : PRIVATE_MASK)[ FD ]
Line_27 $$ if (traitFieldHelper == null)-->Line_28 $$ return[ CD ]
Line_2 $$ public List<GrField> collectFields() -->Line_5 $$ List<GrField> result = ContainerUtil.newArrayList()[ CD ]
Line_33 $$ final GrLightField field = new GrLightField(trait, descriptor.name, descriptor.typeString)-->Line_37 $$ field.getModifierList().addModifier(descriptor.isPublic ? PUBLIC_MASK : PRIVATE_MASK)[ FD ]
Line_33 $$ final GrLightField field = new GrLightField(trait, descriptor.name, descriptor.typeString)-->Line_38 $$ addCandidate(field, substitutor)[ FD ]
Line_2 $$ public List<GrField> collectFields() -->Line_15 $$ List<PsiClassType.ClassResolveResult> traits = getSuperTraitsByCorrectOrder(types)[ CD ]
Line_16 $$ for (PsiClassType.ClassResolveResult resolveResult : traits) -->Line_19 $$ List<CandidateInfo> traitFields = new TraitProcessor<PsiField>(trait, resolveResult.getSubstitutor()) [ FD ]
Line_26 $$ final PsiClass traitFieldHelper = JavaPsiFacade.getInstance(trait.getProject()).findClass(trait.getQualifiedName() + "$Trait$FieldHelper", trait.getResolveScope())-->Line_27 $$ if (traitFieldHelper == null)[ FD ]
Line_26 $$ final PsiClass traitFieldHelper = JavaPsiFacade.getInstance(trait.getProject()).findClass(trait.getQualifiedName() + "$Trait$FieldHelper", trait.getResolveScope())-->Line_29 $$ final VirtualFile virtualFile = traitFieldHelper.getContainingFile().getVirtualFile()[ FD ]
Line_5 $$ List<GrField> result = ContainerUtil.newArrayList()-->Line_47 $$ result.add(new GrTraitField(((PsiField) candidateInfo.getElement()), myDefinition, candidateInfo.getSubstitutor()))[ FD ]
Line_19 $$ List<CandidateInfo> traitFields = new TraitProcessor<PsiField>(trait, resolveResult.getSubstitutor()) -->Line_21 $$ if (trait instanceof GrTypeDefinition) [ FD ]
Line_2 $$ public List<GrField> collectFields() -->Line_6 $$ if (myDefinition.isTrait()) [ CD ]
Line_25 $$ if (trait instanceof ClsClassImpl) -->Line_26 $$ final PsiClass traitFieldHelper = JavaPsiFacade.getInstance(trait.getProject()).findClass(trait.getQualifiedName() + "$Trait$FieldHelper", trait.getResolveScope())[ CD ]
Line_19 $$ List<CandidateInfo> traitFields = new TraitProcessor<PsiField>(trait, resolveResult.getSubstitutor()) -->Line_38 $$ addCandidate(field, substitutor)[ FD ]
Line_22 $$ for (GrField field : ((GrTypeDefinition) trait).getCodeFields()) -->Line_35 $$ field.getModifierList().addModifier(STATIC_MASK)[ FD ]
Line_5 $$ List<GrField> result = ContainerUtil.newArrayList()-->Line_12 $$ if (clause == null)[ FD ]
Line_2 $$ public List<GrField> collectFields() -->Line_11 $$ GrImplementsClause clause = myDefinition.getImplementsClause()[ CD ]
Line_12 $$ if (clause == null)-->Line_13 $$ return result[ CD ]
Line_17 $$ PsiClass trait = resolveResult.getElement()-->Line_21 $$ if (trait instanceof GrTypeDefinition) [ FD ]
Line_2 $$ public List<GrField> collectFields() -->Line_14 $$ PsiClassType[] types = clause.getReferencedTypes()[ CD ]
Line_19 $$ List<CandidateInfo> traitFields = new TraitProcessor<PsiField>(trait, resolveResult.getSubstitutor()) -->Line_26 $$ final PsiClass traitFieldHelper = JavaPsiFacade.getInstance(trait.getProject()).findClass(trait.getQualifiedName() + "$Trait$FieldHelper", trait.getResolveScope())[ FD ]
Line_32 $$ for (TraitFieldDescriptor descriptor : values) -->Line_34 $$ if (descriptor.isStatic) [ FD ]
Line_17 $$ PsiClass trait = resolveResult.getElement()-->Line_26 $$ final PsiClass traitFieldHelper = JavaPsiFacade.getInstance(trait.getProject()).findClass(trait.getQualifiedName() + "$Trait$FieldHelper", trait.getResolveScope())[ FD ]
Line_3 $$ if (myDefinition.isInterface() && !myDefinition.isTrait())-->Line_4 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public List<GrField> collectFields() -->Line_12 $$ if (clause == null)[ CD ]
Line_25 $$ if (trait instanceof ClsClassImpl) -->Line_30 $$ FileBasedIndex.getInstance().processValues(INDEX_ID, FileBasedIndex.getFileId(virtualFile), virtualFile, new FileBasedIndex.ValueProcessor<Collection<TraitFieldDescriptor>>() [ CD ]
Line_22 $$ for (GrField field : ((GrTypeDefinition) trait).getCodeFields()) -->Line_23 $$ addCandidate(field, substitutor)[ FD ]
Line_25 $$ if (trait instanceof ClsClassImpl) -->Line_29 $$ final VirtualFile virtualFile = traitFieldHelper.getContainingFile().getVirtualFile()[ CD ]
Line_5 $$ List<GrField> result = ContainerUtil.newArrayList()-->Line_8 $$ result.add(new GrTraitField(field, myDefinition, PsiSubstitutor.EMPTY))[ FD ]
Line_17 $$ PsiClass trait = resolveResult.getElement()-->Line_30 $$ FileBasedIndex.getInstance().processValues(INDEX_ID, FileBasedIndex.getFileId(virtualFile), virtualFile, new FileBasedIndex.ValueProcessor<Collection<TraitFieldDescriptor>>() [ FD ]
Line_14 $$ PsiClassType[] types = clause.getReferencedTypes()-->Line_15 $$ List<PsiClassType.ClassResolveResult> traits = getSuperTraitsByCorrectOrder(types)[ FD ]
Line_17 $$ PsiClass trait = resolveResult.getElement()-->Line_25 $$ if (trait instanceof ClsClassImpl) [ FD ]
Line_22 $$ for (GrField field : ((GrTypeDefinition) trait).getCodeFields()) -->Line_37 $$ field.getModifierList().addModifier(descriptor.isPublic ? PUBLIC_MASK : PRIVATE_MASK)[ FD ]
Line_7 $$ for (GrField field : myDefinition.getCodeFields()) -->Line_35 $$ field.getModifierList().addModifier(STATIC_MASK)[ FD ]
Line_21 $$ if (trait instanceof GrTypeDefinition) -->Line_25 $$ if (trait instanceof ClsClassImpl) [ CD ]
Line_19 $$ List<CandidateInfo> traitFields = new TraitProcessor<PsiField>(trait, resolveResult.getSubstitutor()) -->Line_25 $$ if (trait instanceof ClsClassImpl) [ FD ]
Line_22 $$ for (GrField field : ((GrTypeDefinition) trait).getCodeFields()) -->Line_38 $$ addCandidate(field, substitutor)[ FD ]
Line_19 $$ List<CandidateInfo> traitFields = new TraitProcessor<PsiField>(trait, resolveResult.getSubstitutor()) -->Line_23 $$ addCandidate(field, substitutor)[ FD ]
Line_2 $$ public List<GrField> collectFields() -->Line_50 $$ return result[ CD ]
Line_11 $$ GrImplementsClause clause = myDefinition.getImplementsClause()-->Line_14 $$ PsiClassType[] types = clause.getReferencedTypes()[ FD ]
Line_19 $$ List<CandidateInfo> traitFields = new TraitProcessor<PsiField>(trait, resolveResult.getSubstitutor()) -->Line_21 $$ if (trait instanceof GrTypeDefinition) [ CD ]
Line_25 $$ if (trait instanceof ClsClassImpl) -->Line_27 $$ if (traitFieldHelper == null)[ CD ]
Line_29 $$ final VirtualFile virtualFile = traitFieldHelper.getContainingFile().getVirtualFile()-->Line_30 $$ FileBasedIndex.getInstance().processValues(INDEX_ID, FileBasedIndex.getFileId(virtualFile), virtualFile, new FileBasedIndex.ValueProcessor<Collection<TraitFieldDescriptor>>() [ FD ]
Line_16 $$ for (PsiClassType.ClassResolveResult resolveResult : traits) -->Line_17 $$ PsiClass trait = resolveResult.getElement()[ FD ]
Line_19 $$ List<CandidateInfo> traitFields = new TraitProcessor<PsiField>(trait, resolveResult.getSubstitutor()) -->Line_30 $$ FileBasedIndex.getInstance().processValues(INDEX_ID, FileBasedIndex.getFileId(virtualFile), virtualFile, new FileBasedIndex.ValueProcessor<Collection<TraitFieldDescriptor>>() [ FD ]
Line_7 $$ for (GrField field : myDefinition.getCodeFields()) -->Line_23 $$ addCandidate(field, substitutor)[ FD ]
Line_7 $$ for (GrField field : myDefinition.getCodeFields()) -->Line_38 $$ addCandidate(field, substitutor)[ FD ]
Line_30 $$ FileBasedIndex.getInstance().processValues(INDEX_ID, FileBasedIndex.getFileId(virtualFile), virtualFile, new FileBasedIndex.ValueProcessor<Collection<TraitFieldDescriptor>>() -->Line_40 $$ return true[ CD ]
Line_33 $$ final GrLightField field = new GrLightField(trait, descriptor.name, descriptor.typeString)-->Line_35 $$ field.getModifierList().addModifier(STATIC_MASK)[ FD ]
Line_2 $$ public List<GrField> collectFields() -->Line_3 $$ if (myDefinition.isInterface() && !myDefinition.isTrait())[ CD ]
Line_11 $$ GrImplementsClause clause = myDefinition.getImplementsClause()-->Line_12 $$ if (clause == null)[ FD ]
