Line_4 $$ if (o instanceof Module) -->Line_5 $$ return Collections.singletonList((Module) o)[ CD ]
Line_11 $$ final VirtualFile file = (VirtualFile) o-->Line_12 $$ if (file.isValid()) [ FD ]
Line_7 $$ if (o instanceof Project) -->Line_8 $$ return Arrays.asList(ModuleManager.getInstance((Project) o).getModules())[ CD ]
Line_10 $$ if (o instanceof VirtualFile) -->Line_11 $$ final VirtualFile file = (VirtualFile) o[ CD ]
Line_12 $$ if (file.isValid()) -->Line_13 $$ final Module module = ModuleUtilCore.findModuleForFile(file, myProject)[ CD ]
Line_12 $$ if (file.isValid()) -->Line_17 $$ return Collections.singletonList(module)[ CD ]
Line_13 $$ final Module module = ModuleUtilCore.findModuleForFile(file, myProject)-->Line_17 $$ return Collections.singletonList(module)[ FD ]
Line_11 $$ final VirtualFile file = (VirtualFile) o-->Line_13 $$ final Module module = ModuleUtilCore.findModuleForFile(file, myProject)[ FD ]
Line_13 $$ final Module module = ModuleUtilCore.findModuleForFile(file, myProject)-->Line_14 $$ if (module == null) [ FD ]
Line_14 $$ if (module == null) -->Line_15 $$ return Collections.emptyList()[ CD ]
Line_12 $$ if (file.isValid()) -->Line_14 $$ if (module == null) [ CD ]
Line_10 $$ if (o instanceof VirtualFile) -->Line_12 $$ if (file.isValid()) [ CD ]
