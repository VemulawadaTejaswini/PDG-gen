Line_3 $$ int startIndex = getSoftWrapIndex(offset)-->Line_5 $$ startIndex = -startIndex - 1[ FD ]
Line_5 $$ startIndex = -startIndex - 1-->Line_7 $$ if (startIndex >= myWraps.size()) [ FD ]
Line_2 $$ public List<SoftWrapImpl> removeStartingFrom(int offset) -->Line_3 $$ int startIndex = getSoftWrapIndex(offset)[ FD ]
Line_4 $$ if (startIndex < 0) -->Line_5 $$ startIndex = -startIndex - 1[ CD ]
Line_10 $$ List<SoftWrapImpl> tail = myWraps.subList(startIndex, myWraps.size())-->Line_12 $$ tail.clear()[ FD ]
Line_7 $$ if (startIndex >= myWraps.size()) -->Line_8 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public List<SoftWrapImpl> removeStartingFrom(int offset) -->Line_13 $$ return result[ CD ]
Line_3 $$ int startIndex = getSoftWrapIndex(offset)-->Line_10 $$ List<SoftWrapImpl> tail = myWraps.subList(startIndex, myWraps.size())[ FD ]
Line_5 $$ startIndex = -startIndex - 1-->Line_10 $$ List<SoftWrapImpl> tail = myWraps.subList(startIndex, myWraps.size())[ FD ]
Line_2 $$ public List<SoftWrapImpl> removeStartingFrom(int offset) -->Line_11 $$ List<SoftWrapImpl> result = new ArrayList<SoftWrapImpl>(tail)[ CD ]
Line_2 $$ public List<SoftWrapImpl> removeStartingFrom(int offset) -->Line_12 $$ tail.clear()[ CD ]
Line_2 $$ public List<SoftWrapImpl> removeStartingFrom(int offset) -->Line_4 $$ if (startIndex < 0) [ CD ]
Line_2 $$ public List<SoftWrapImpl> removeStartingFrom(int offset) -->Line_7 $$ if (startIndex >= myWraps.size()) [ CD ]
Line_3 $$ int startIndex = getSoftWrapIndex(offset)-->Line_7 $$ if (startIndex >= myWraps.size()) [ FD ]
Line_3 $$ int startIndex = getSoftWrapIndex(offset)-->Line_4 $$ if (startIndex < 0) [ FD ]
Line_2 $$ public List<SoftWrapImpl> removeStartingFrom(int offset) -->Line_3 $$ int startIndex = getSoftWrapIndex(offset)[ CD ]
Line_2 $$ public List<SoftWrapImpl> removeStartingFrom(int offset) -->Line_10 $$ List<SoftWrapImpl> tail = myWraps.subList(startIndex, myWraps.size())[ CD ]
