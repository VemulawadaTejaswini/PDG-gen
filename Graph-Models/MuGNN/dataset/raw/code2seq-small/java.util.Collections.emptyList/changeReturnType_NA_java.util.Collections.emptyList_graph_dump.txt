Line_4 $$ if (methods == null) -->Line_5 $$ return Collections.emptyList()[ CD ]
Line_2 $$ private List<PsiMethod> changeReturnType(final PsiMethod method, @NotNull final PsiType returnType) -->Line_3 $$ final PsiMethod[] methods = getChangeRoots(method, returnType)[ CD ]
Line_8 $$ for (PsiMethod targetMethod : methods) -->Line_9 $$ methodSignatureChangeVisitor.addBase(targetMethod)[ FD ]
Line_8 $$ for (PsiMethod targetMethod : methods) -->Line_10 $$ ChangeSignatureProcessor processor = new UsagesAwareChangeSignatureProcessor(method.getProject(), targetMethod, false, null, myName, returnType, RemoveUnusedParameterFix.getNewParametersInfo(targetMethod, null), methodSignatureChangeVisitor)[ FD ]
Line_7 $$ final MethodSignatureChangeVisitor methodSignatureChangeVisitor = new MethodSignatureChangeVisitor()-->Line_13 $$ return methodSignatureChangeVisitor.getAffectedMethods()[ FD ]
Line_2 $$ private List<PsiMethod> changeReturnType(final PsiMethod method, @NotNull final PsiType returnType) -->Line_10 $$ ChangeSignatureProcessor processor = new UsagesAwareChangeSignatureProcessor(method.getProject(), targetMethod, false, null, myName, returnType, RemoveUnusedParameterFix.getNewParametersInfo(targetMethod, null), methodSignatureChangeVisitor)[ FD ]
Line_2 $$ private List<PsiMethod> changeReturnType(final PsiMethod method, @NotNull final PsiType returnType) -->Line_13 $$ return methodSignatureChangeVisitor.getAffectedMethods()[ CD ]
Line_7 $$ final MethodSignatureChangeVisitor methodSignatureChangeVisitor = new MethodSignatureChangeVisitor()-->Line_9 $$ methodSignatureChangeVisitor.addBase(targetMethod)[ FD ]
Line_2 $$ private List<PsiMethod> changeReturnType(final PsiMethod method, @NotNull final PsiType returnType) -->Line_7 $$ final MethodSignatureChangeVisitor methodSignatureChangeVisitor = new MethodSignatureChangeVisitor()[ CD ]
Line_10 $$ ChangeSignatureProcessor processor = new UsagesAwareChangeSignatureProcessor(method.getProject(), targetMethod, false, null, myName, returnType, RemoveUnusedParameterFix.getNewParametersInfo(targetMethod, null), methodSignatureChangeVisitor)-->Line_11 $$ processor.run()[ FD ]
Line_2 $$ private List<PsiMethod> changeReturnType(final PsiMethod method, @NotNull final PsiType returnType) -->Line_3 $$ final PsiMethod[] methods = getChangeRoots(method, returnType)[ FD ]
Line_2 $$ private List<PsiMethod> changeReturnType(final PsiMethod method, @NotNull final PsiType returnType) -->Line_4 $$ if (methods == null) [ CD ]
Line_3 $$ final PsiMethod[] methods = getChangeRoots(method, returnType)-->Line_4 $$ if (methods == null) [ FD ]
