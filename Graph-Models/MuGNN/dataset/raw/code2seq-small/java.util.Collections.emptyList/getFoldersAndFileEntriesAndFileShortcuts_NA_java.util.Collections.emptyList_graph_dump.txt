Line_3 $$ if (!DLFolderPermission.contains(getPermissionChecker(), groupId, folderId, ActionKeys.VIEW)) -->Line_4 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public List<Object> getFoldersAndFileEntriesAndFileShortcuts(long groupId, long folderId, String[] mimeTypes, boolean includeMountFolders, QueryDefinition<?> queryDefinition) throws PortalException -->Line_6 $$ return dlFolderFinder.filterFindF_FE_FS_ByG_F_M_M(groupId, folderId, mimeTypes, includeMountFolders, queryDefinition)[ FD ]
Line_2 $$ public List<Object> getFoldersAndFileEntriesAndFileShortcuts(long groupId, long folderId, String[] mimeTypes, boolean includeMountFolders, QueryDefinition<?> queryDefinition) throws PortalException -->Line_6 $$ return dlFolderFinder.filterFindF_FE_FS_ByG_F_M_M(groupId, folderId, mimeTypes, includeMountFolders, queryDefinition)[ CD ]
Line_2 $$ public List<Object> getFoldersAndFileEntriesAndFileShortcuts(long groupId, long folderId, String[] mimeTypes, boolean includeMountFolders, QueryDefinition<?> queryDefinition) throws PortalException -->Line_3 $$ if (!DLFolderPermission.contains(getPermissionChecker(), groupId, folderId, ActionKeys.VIEW)) [ CD ]
Line_2 $$ public List<Object> getFoldersAndFileEntriesAndFileShortcuts(long groupId, long folderId, String[] mimeTypes, boolean includeMountFolders, QueryDefinition<?> queryDefinition) throws PortalException -->Line_3 $$ if (!DLFolderPermission.contains(getPermissionChecker(), groupId, folderId, ActionKeys.VIEW)) [ FD ]
