Line_4 $$ byte[] digest = null-->Line_8 $$ in.readFully(digest, 0, digestSize)[ FD ]
Line_3 $$ if (version < MessagingService.VERSION_30) -->Line_10 $$ boolean isDigest = in.readBoolean()[ CD ]
Line_18 $$ if (rowIterator == null)-->Line_19 $$ return new LegacyRemoteDataResponse(Collections.emptyList())[ CD ]
Line_5 $$ int digestSize = in.readInt()-->Line_6 $$ if (digestSize > 0) [ FD ]
Line_17 $$ try (UnfilteredRowIterator rowIterator = LegacyLayout.deserializeLegacyPartition(in, version, SerializationHelper.Flag.FROM_REMOTE, key)) -->Line_20 $$ return new LegacyRemoteDataResponse(Collections.singletonList(ImmutableBTreePartition.create(rowIterator)))[ FD ]
Line_6 $$ if (digestSize > 0) -->Line_8 $$ in.readFully(digest, 0, digestSize)[ CD ]
Line_3 $$ if (version < MessagingService.VERSION_30) -->Line_5 $$ int digestSize = in.readInt()[ CD ]
Line_2 $$ public ReadResponse deserialize(DataInputPlus in, int version) throws IOException -->Line_16 $$ ByteBuffer key = ByteBufferUtil.readWithShortLength(in)[ FD ]
Line_3 $$ if (version < MessagingService.VERSION_30) -->Line_4 $$ byte[] digest = null[ CD ]
Line_3 $$ if (version < MessagingService.VERSION_30) -->Line_16 $$ ByteBuffer key = ByteBufferUtil.readWithShortLength(in)[ CD ]
Line_6 $$ if (digestSize > 0) -->Line_7 $$ digest = new byte[digestSize][ CD ]
Line_2 $$ public ReadResponse deserialize(DataInputPlus in, int version) throws IOException -->Line_17 $$ try (UnfilteredRowIterator rowIterator = LegacyLayout.deserializeLegacyPartition(in, version, SerializationHelper.Flag.FROM_REMOTE, key)) [ FD ]
Line_2 $$ public ReadResponse deserialize(DataInputPlus in, int version) throws IOException -->Line_3 $$ if (version < MessagingService.VERSION_30) [ FD ]
Line_2 $$ public ReadResponse deserialize(DataInputPlus in, int version) throws IOException -->Line_28 $$ return new RemoteDataResponse(data)[ CD ]
Line_2 $$ public ReadResponse deserialize(DataInputPlus in, int version) throws IOException -->Line_23 $$ ByteBuffer digest = ByteBufferUtil.readWithVIntLength(in)[ CD ]
Line_2 $$ public ReadResponse deserialize(DataInputPlus in, int version) throws IOException -->Line_27 $$ ByteBuffer data = ByteBufferUtil.readWithVIntLength(in)[ CD ]
Line_7 $$ digest = new byte[digestSize]-->Line_24 $$ if (digest.hasRemaining())[ FD ]
Line_2 $$ public ReadResponse deserialize(DataInputPlus in, int version) throws IOException -->Line_10 $$ boolean isDigest = in.readBoolean()[ FD ]
Line_12 $$ if (isDigest) -->Line_14 $$ return new DigestResponse(ByteBuffer.wrap(digest))[ CD ]
Line_3 $$ if (version < MessagingService.VERSION_30) -->Line_6 $$ if (digestSize > 0) [ CD ]
Line_2 $$ public ReadResponse deserialize(DataInputPlus in, int version) throws IOException -->Line_24 $$ if (digest.hasRemaining())[ CD ]
Line_4 $$ byte[] digest = null-->Line_7 $$ digest = new byte[digestSize][ FD ]
Line_2 $$ public ReadResponse deserialize(DataInputPlus in, int version) throws IOException -->Line_23 $$ ByteBuffer digest = ByteBufferUtil.readWithVIntLength(in)[ FD ]
Line_3 $$ if (version < MessagingService.VERSION_30) -->Line_12 $$ if (isDigest) [ CD ]
Line_17 $$ try (UnfilteredRowIterator rowIterator = LegacyLayout.deserializeLegacyPartition(in, version, SerializationHelper.Flag.FROM_REMOTE, key)) -->Line_18 $$ if (rowIterator == null)[ FD ]
Line_2 $$ public ReadResponse deserialize(DataInputPlus in, int version) throws IOException -->Line_3 $$ if (version < MessagingService.VERSION_30) [ CD ]
Line_2 $$ public ReadResponse deserialize(DataInputPlus in, int version) throws IOException -->Line_5 $$ int digestSize = in.readInt()[ FD ]
Line_7 $$ digest = new byte[digestSize]-->Line_8 $$ in.readFully(digest, 0, digestSize)[ FD ]
Line_5 $$ int digestSize = in.readInt()-->Line_8 $$ in.readFully(digest, 0, digestSize)[ FD ]
Line_4 $$ byte[] digest = null-->Line_14 $$ return new DigestResponse(ByteBuffer.wrap(digest))[ FD ]
Line_2 $$ public ReadResponse deserialize(DataInputPlus in, int version) throws IOException -->Line_27 $$ ByteBuffer data = ByteBufferUtil.readWithVIntLength(in)[ FD ]
Line_24 $$ if (digest.hasRemaining())-->Line_25 $$ return new DigestResponse(digest)[ CD ]
Line_2 $$ public ReadResponse deserialize(DataInputPlus in, int version) throws IOException -->Line_8 $$ in.readFully(digest, 0, digestSize)[ FD ]
Line_7 $$ digest = new byte[digestSize]-->Line_14 $$ return new DigestResponse(ByteBuffer.wrap(digest))[ FD ]
Line_4 $$ byte[] digest = null-->Line_24 $$ if (digest.hasRemaining())[ FD ]
Line_16 $$ ByteBuffer key = ByteBufferUtil.readWithShortLength(in)-->Line_17 $$ try (UnfilteredRowIterator rowIterator = LegacyLayout.deserializeLegacyPartition(in, version, SerializationHelper.Flag.FROM_REMOTE, key)) [ FD ]
