Line_2 $$ public <R extends BuildRootDescriptor> List<R> getTempTargetRoots(@NotNull BuildTarget<R> target, @NotNull CompileContext context) -->Line_4 $$ final List<R> rootList = contextMap != null ? (List<R>) contextMap.get(target) : null[ FD ]
Line_2 $$ public <R extends BuildRootDescriptor> List<R> getTempTargetRoots(@NotNull BuildTarget<R> target, @NotNull CompileContext context) -->Line_5 $$ return rootList != null ? rootList : Collections.<R>emptyList()[ CD ]
Line_2 $$ public <R extends BuildRootDescriptor> List<R> getTempTargetRoots(@NotNull BuildTarget<R> target, @NotNull CompileContext context) -->Line_3 $$ final Map<BuildTarget<?>, List<? extends BuildRootDescriptor>> contextMap = TEMP_TARGET_ROOTS_MAP.get(context)[ CD ]
Line_3 $$ final Map<BuildTarget<?>, List<? extends BuildRootDescriptor>> contextMap = TEMP_TARGET_ROOTS_MAP.get(context)-->Line_4 $$ final List<R> rootList = contextMap != null ? (List<R>) contextMap.get(target) : null[ FD ]
Line_2 $$ public <R extends BuildRootDescriptor> List<R> getTempTargetRoots(@NotNull BuildTarget<R> target, @NotNull CompileContext context) -->Line_3 $$ final Map<BuildTarget<?>, List<? extends BuildRootDescriptor>> contextMap = TEMP_TARGET_ROOTS_MAP.get(context)[ FD ]
Line_2 $$ public <R extends BuildRootDescriptor> List<R> getTempTargetRoots(@NotNull BuildTarget<R> target, @NotNull CompileContext context) -->Line_4 $$ final List<R> rootList = contextMap != null ? (List<R>) contextMap.get(target) : null[ CD ]
