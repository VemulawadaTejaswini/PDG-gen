Line_7 $$ List<String> errors = null-->Line_13 $$ errors = new ArrayList<String>()[ FD ]
Line_10 $$ final String err = lookupError(entry.getKey())-->Line_11 $$ if (err != null) [ FD ]
Line_2 $$ public List<String> getTypeLoadingErrors(AntDomTypeDef typedef) -->Line_3 $$ final String generalError = myTypeDefErrors.get(typedef)[ CD ]
Line_11 $$ if (err != null) -->Line_12 $$ if (errors == null) [ CD ]
Line_2 $$ public List<String> getTypeLoadingErrors(AntDomTypeDef typedef) -->Line_19 $$ return errors == null ? Collections.<String>emptyList() : errors[ CD ]
Line_13 $$ errors = new ArrayList<String>()-->Line_15 $$ errors.add(err)[ FD ]
Line_8 $$ for (Map.Entry<XmlName, AntDomNamedElement> entry : myDeclarations.entrySet()) -->Line_9 $$ if (typedef.equals(entry.getValue())) [ FD ]
Line_8 $$ for (Map.Entry<XmlName, AntDomNamedElement> entry : myDeclarations.entrySet()) -->Line_10 $$ final String err = lookupError(entry.getKey())[ FD ]
Line_9 $$ if (typedef.equals(entry.getValue())) -->Line_11 $$ if (err != null) [ CD ]
Line_7 $$ List<String> errors = null-->Line_15 $$ errors.add(err)[ FD ]
Line_2 $$ public List<String> getTypeLoadingErrors(AntDomTypeDef typedef) -->Line_7 $$ List<String> errors = null[ CD ]
Line_2 $$ public List<String> getTypeLoadingErrors(AntDomTypeDef typedef) -->Line_3 $$ final String generalError = myTypeDefErrors.get(typedef)[ FD ]
Line_12 $$ if (errors == null) -->Line_13 $$ errors = new ArrayList<String>()[ CD ]
Line_10 $$ final String err = lookupError(entry.getKey())-->Line_15 $$ errors.add(err)[ FD ]
Line_11 $$ if (err != null) -->Line_15 $$ errors.add(err)[ CD ]
Line_2 $$ public List<String> getTypeLoadingErrors(AntDomTypeDef typedef) -->Line_4 $$ if (generalError != null) [ CD ]
Line_2 $$ public List<String> getTypeLoadingErrors(AntDomTypeDef typedef) -->Line_9 $$ if (typedef.equals(entry.getValue())) [ FD ]
Line_7 $$ List<String> errors = null-->Line_12 $$ if (errors == null) [ FD ]
Line_3 $$ final String generalError = myTypeDefErrors.get(typedef)-->Line_4 $$ if (generalError != null) [ FD ]
Line_9 $$ if (typedef.equals(entry.getValue())) -->Line_10 $$ final String err = lookupError(entry.getKey())[ CD ]
Line_4 $$ if (generalError != null) -->Line_5 $$ return Collections.singletonList(generalError)[ CD ]
Line_3 $$ final String generalError = myTypeDefErrors.get(typedef)-->Line_5 $$ return Collections.singletonList(generalError)[ FD ]
