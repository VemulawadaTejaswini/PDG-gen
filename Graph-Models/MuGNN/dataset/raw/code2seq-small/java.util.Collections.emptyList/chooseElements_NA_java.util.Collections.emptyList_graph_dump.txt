Line_11 $$ chooserDescriptor = new FileChooserDescriptor(true, true, true, false, true, false) -->Line_32 $$ final VirtualFile[] files = FileChooser.chooseFiles(chooserDescriptor, myParentComponent, project, project.getBaseDir())[ FD ]
Line_2 $$ public List<Library> chooseElements() -->Line_3 $$ final FileChooserDescriptor chooserDescriptor[ CD ]
Line_13 $$ for (Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor> pair : descriptors) -->Line_14 $$ if (pair.getSecond().isFileSelectable(file)) [ FD ]
Line_43 $$ if (suitableDescriptors.size() == 1) -->Line_45 $$ libraryType = myLibraryTypes.get(rootsComponentDescriptor)[ CD ]
Line_2 $$ public List<Library> chooseElements() -->Line_49 $$ List<OrderRoot> chosenRoots = RootDetectionUtil.detectRoots(Arrays.asList(files), myParentComponent, project, rootsComponentDescriptor)[ CD ]
Line_22 $$ if (pair.getSecond().isFileVisible(file, showHiddenFiles)) -->Line_23 $$ return true[ CD ]
Line_8 $$ if (descriptors.size() == 1) -->Line_11 $$ chooserDescriptor = new FileChooserDescriptor(true, true, true, false, true, false) [ CD ]
Line_2 $$ public List<Library> chooseElements() -->Line_50 $$ final List<OrderRoot> roots = filterAlreadyAdded(chosenRoots)[ CD ]
Line_13 $$ for (Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor> pair : descriptors) -->Line_38 $$ suitableDescriptors.add(pair.getFirst())[ FD ]
Line_59 $$ if (onlyClasses) -->Line_64 $$ addedLibraries.add(createLibraryFromRoots(roots, libraryType))[ CD ]
Line_13 $$ for (Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor> pair : descriptors) -->Line_22 $$ if (pair.getSecond().isFileVisible(file, showHiddenFiles)) [ FD ]
Line_2 $$ public List<Library> chooseElements() -->Line_4 $$ final List<Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor>> descriptors = new ArrayList<Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor>>()[ CD ]
Line_3 $$ final FileChooserDescriptor chooserDescriptor-->Line_30 $$ chooserDescriptor.putUserData(LangDataKeys.MODULE_CONTEXT, myModule)[ FD ]
Line_3 $$ final FileChooserDescriptor chooserDescriptor-->Line_9 $$ chooserDescriptor = descriptors.get(0).getSecond()[ FD ]
Line_4 $$ final List<Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor>> descriptors = new ArrayList<Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor>>()-->Line_9 $$ chooserDescriptor = descriptors.get(0).getSecond()[ FD ]
Line_21 $$ for (Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor> pair : descriptors) -->Line_38 $$ suitableDescriptors.add(pair.getFirst())[ FD ]
Line_11 $$ chooserDescriptor = new FileChooserDescriptor(true, true, true, false, true, false) -->Line_30 $$ chooserDescriptor.putUserData(LangDataKeys.MODULE_CONTEXT, myModule)[ FD ]
Line_13 $$ for (Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor> pair : descriptors) -->Line_37 $$ if (acceptAll(pair.getSecond(), files)) [ FD ]
Line_11 $$ chooserDescriptor = new FileChooserDescriptor(true, true, true, false, true, false) -->Line_26 $$ return false[ CD ]
Line_51 $$ if (roots.isEmpty()) -->Line_52 $$ return Collections.emptyList()[ CD ]
Line_11 $$ chooserDescriptor = new FileChooserDescriptor(true, true, true, false, true, false) -->Line_14 $$ if (pair.getSecond().isFileSelectable(file)) [ FD ]
Line_9 $$ chooserDescriptor = descriptors.get(0).getSecond()-->Line_30 $$ chooserDescriptor.putUserData(LangDataKeys.MODULE_CONTEXT, myModule)[ FD ]
Line_33 $$ if (files.length == 0)-->Line_34 $$ return Collections.emptyList()[ CD ]
Line_43 $$ if (suitableDescriptors.size() == 1) -->Line_44 $$ rootsComponentDescriptor = suitableDescriptors.get(0)[ CD ]
Line_3 $$ final FileChooserDescriptor chooserDescriptor-->Line_11 $$ chooserDescriptor = new FileChooserDescriptor(true, true, true, false, true, false) [ FD ]
Line_21 $$ for (Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor> pair : descriptors) -->Line_37 $$ if (acceptAll(pair.getSecond(), files)) [ FD ]
Line_2 $$ public List<Library> chooseElements() -->Line_32 $$ final VirtualFile[] files = FileChooser.chooseFiles(chooserDescriptor, myParentComponent, project, project.getBaseDir())[ CD ]
Line_5 $$ for (LibraryRootsComponentDescriptor componentDescriptor : myLibraryTypes.keySet()) -->Line_6 $$ descriptors.add(Pair.create(componentDescriptor, componentDescriptor.createAttachFilesChooserDescriptor(null)))[ FD ]
Line_37 $$ if (acceptAll(pair.getSecond(), files)) -->Line_38 $$ suitableDescriptors.add(pair.getFirst())[ CD ]
Line_11 $$ chooserDescriptor = new FileChooserDescriptor(true, true, true, false, true, false) -->Line_18 $$ return false[ CD ]
Line_8 $$ if (descriptors.size() == 1) -->Line_9 $$ chooserDescriptor = descriptors.get(0).getSecond()[ CD ]
Line_2 $$ public List<Library> chooseElements() -->Line_30 $$ chooserDescriptor.putUserData(LangDataKeys.MODULE_CONTEXT, myModule)[ CD ]
Line_2 $$ public List<Library> chooseElements() -->Line_8 $$ if (descriptors.size() == 1) [ CD ]
Line_3 $$ final FileChooserDescriptor chooserDescriptor-->Line_32 $$ final VirtualFile[] files = FileChooser.chooseFiles(chooserDescriptor, myParentComponent, project, project.getBaseDir())[ FD ]
Line_4 $$ final List<Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor>> descriptors = new ArrayList<Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor>>()-->Line_8 $$ if (descriptors.size() == 1) [ FD ]
Line_2 $$ public List<Library> chooseElements() -->Line_59 $$ if (onlyClasses) [ CD ]
Line_4 $$ final List<Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor>> descriptors = new ArrayList<Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor>>()-->Line_6 $$ descriptors.add(Pair.create(componentDescriptor, componentDescriptor.createAttachFilesChooserDescriptor(null)))[ FD ]
Line_11 $$ chooserDescriptor = new FileChooserDescriptor(true, true, true, false, true, false) -->Line_22 $$ if (pair.getSecond().isFileVisible(file, showHiddenFiles)) [ FD ]
Line_2 $$ public List<Library> chooseElements() -->Line_31 $$ final Project project = myModule.getProject()[ CD ]
Line_2 $$ public List<Library> chooseElements() -->Line_51 $$ if (roots.isEmpty()) [ CD ]
Line_14 $$ if (pair.getSecond().isFileSelectable(file)) -->Line_15 $$ return true[ CD ]
Line_2 $$ public List<Library> chooseElements() -->Line_66 $$ return addedLibraries[ CD ]
Line_2 $$ public List<Library> chooseElements() -->Line_43 $$ if (suitableDescriptors.size() == 1) [ CD ]
Line_2 $$ public List<Library> chooseElements() -->Line_33 $$ if (files.length == 0)[ CD ]
Line_9 $$ chooserDescriptor = descriptors.get(0).getSecond()-->Line_32 $$ final VirtualFile[] files = FileChooser.chooseFiles(chooserDescriptor, myParentComponent, project, project.getBaseDir())[ FD ]
Line_9 $$ chooserDescriptor = descriptors.get(0).getSecond()-->Line_11 $$ chooserDescriptor = new FileChooserDescriptor(true, true, true, false, true, false) [ FD ]
Line_21 $$ for (Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor> pair : descriptors) -->Line_22 $$ if (pair.getSecond().isFileVisible(file, showHiddenFiles)) [ FD ]
