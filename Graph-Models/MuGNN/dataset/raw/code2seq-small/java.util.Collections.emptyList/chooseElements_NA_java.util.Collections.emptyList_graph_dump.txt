Line_49 $$ if (suitableDescriptors.size() == 1) -->Line_51 $$ libraryType = myLibraryTypes.get(rootsComponentDescriptor)[ CD ]
Line_17 $$ for (Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor> pair : descriptors) -->Line_18 $$ if (pair.getSecond().isFileSelectable(file)) [ FD ]
Line_13 $$ chooserDescriptor = new FileChooserDescriptor(true, true, true, false, true, false) -->Line_38 $$ final VirtualFile[] files = FileChooser.chooseFiles(chooserDescriptor, myParentComponent, project, project.getBaseDir())[ FD ]
Line_13 $$ chooserDescriptor = new FileChooserDescriptor(true, true, true, false, true, false) -->Line_36 $$ chooserDescriptor.putUserData(LangDataKeys.MODULE_CONTEXT, myModule)[ FD ]
Line_11 $$ chooserDescriptor = descriptors.get(0).getSecond()-->Line_13 $$ chooserDescriptor = new FileChooserDescriptor(true, true, true, false, true, false) [ FD ]
Line_57 $$ if (roots.isEmpty()) -->Line_58 $$ return Collections.emptyList()[ CD ]
Line_17 $$ for (Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor> pair : descriptors) -->Line_28 $$ if (pair.getSecond().isFileVisible(file, showHiddenFiles)) [ FD ]
Line_10 $$ if (descriptors.size() == 1) -->Line_11 $$ chooserDescriptor = descriptors.get(0).getSecond()[ CD ]
Line_17 $$ for (Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor> pair : descriptors) -->Line_44 $$ suitableDescriptors.add(pair.getFirst())[ FD ]
Line_7 $$ for (LibraryRootsComponentDescriptor componentDescriptor : myLibraryTypes.keySet()) -->Line_8 $$ descriptors.add(Pair.create(componentDescriptor, componentDescriptor.createAttachFilesChooserDescriptor(null)))[ FD ]
Line_13 $$ chooserDescriptor = new FileChooserDescriptor(true, true, true, false, true, false) -->Line_22 $$ return false[ CD ]
Line_13 $$ chooserDescriptor = new FileChooserDescriptor(true, true, true, false, true, false) -->Line_28 $$ if (pair.getSecond().isFileVisible(file, showHiddenFiles)) [ FD ]
Line_27 $$ for (Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor> pair : descriptors) -->Line_28 $$ if (pair.getSecond().isFileVisible(file, showHiddenFiles)) [ FD ]
Line_27 $$ for (Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor> pair : descriptors) -->Line_43 $$ if (acceptAll(pair.getSecond(), files)) [ FD ]
Line_5 $$ final FileChooserDescriptor chooserDescriptor-->Line_38 $$ final VirtualFile[] files = FileChooser.chooseFiles(chooserDescriptor, myParentComponent, project, project.getBaseDir())[ FD ]
Line_13 $$ chooserDescriptor = new FileChooserDescriptor(true, true, true, false, true, false) -->Line_32 $$ return false[ CD ]
Line_6 $$ final List<Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor>> descriptors = new ArrayList<Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor>>()-->Line_11 $$ chooserDescriptor = descriptors.get(0).getSecond()[ FD ]
Line_11 $$ chooserDescriptor = descriptors.get(0).getSecond()-->Line_36 $$ chooserDescriptor.putUserData(LangDataKeys.MODULE_CONTEXT, myModule)[ FD ]
Line_5 $$ final FileChooserDescriptor chooserDescriptor-->Line_36 $$ chooserDescriptor.putUserData(LangDataKeys.MODULE_CONTEXT, myModule)[ FD ]
Line_27 $$ for (Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor> pair : descriptors) -->Line_44 $$ suitableDescriptors.add(pair.getFirst())[ FD ]
Line_5 $$ final FileChooserDescriptor chooserDescriptor-->Line_11 $$ chooserDescriptor = descriptors.get(0).getSecond()[ FD ]
Line_43 $$ if (acceptAll(pair.getSecond(), files)) -->Line_44 $$ suitableDescriptors.add(pair.getFirst())[ CD ]
Line_65 $$ if (onlyClasses) -->Line_70 $$ addedLibraries.add(createLibraryFromRoots(roots, libraryType))[ CD ]
Line_6 $$ final List<Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor>> descriptors = new ArrayList<Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor>>()-->Line_8 $$ descriptors.add(Pair.create(componentDescriptor, componentDescriptor.createAttachFilesChooserDescriptor(null)))[ FD ]
Line_17 $$ for (Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor> pair : descriptors) -->Line_43 $$ if (acceptAll(pair.getSecond(), files)) [ FD ]
Line_11 $$ chooserDescriptor = descriptors.get(0).getSecond()-->Line_38 $$ final VirtualFile[] files = FileChooser.chooseFiles(chooserDescriptor, myParentComponent, project, project.getBaseDir())[ FD ]
Line_18 $$ if (pair.getSecond().isFileSelectable(file)) -->Line_19 $$ return true[ CD ]
Line_5 $$ final FileChooserDescriptor chooserDescriptor-->Line_13 $$ chooserDescriptor = new FileChooserDescriptor(true, true, true, false, true, false) [ FD ]
Line_6 $$ final List<Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor>> descriptors = new ArrayList<Pair<LibraryRootsComponentDescriptor, FileChooserDescriptor>>()-->Line_10 $$ if (descriptors.size() == 1) [ FD ]
Line_39 $$ if (files.length == 0)-->Line_40 $$ return Collections.emptyList()[ CD ]
Line_13 $$ chooserDescriptor = new FileChooserDescriptor(true, true, true, false, true, false) -->Line_18 $$ if (pair.getSecond().isFileSelectable(file)) [ FD ]
Line_49 $$ if (suitableDescriptors.size() == 1) -->Line_50 $$ rootsComponentDescriptor = suitableDescriptors.get(0)[ CD ]
Line_28 $$ if (pair.getSecond().isFileVisible(file, showHiddenFiles)) -->Line_29 $$ return true[ CD ]
Line_10 $$ if (descriptors.size() == 1) -->Line_13 $$ chooserDescriptor = new FileChooserDescriptor(true, true, true, false, true, false) [ CD ]
