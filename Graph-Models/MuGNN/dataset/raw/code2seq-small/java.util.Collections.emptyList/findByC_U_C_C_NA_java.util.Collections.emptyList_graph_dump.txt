Line_85 $$ if (!pagination) -->Line_88 $$ list = Collections.unmodifiableList(list)[ CD ]
Line_32 $$ List<Subscription> list = new ArrayList<Subscription>(1)-->Line_88 $$ list = Collections.unmodifiableList(list)[ FD ]
Line_58 $$ StringBundler query = new StringBundler()-->Line_61 $$ query.append(_FINDER_COLUMN_C_U_C_C_USERID_2)[ FD ]
Line_81 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_84 $$ qPos.add(classNameId)[ FD ]
Line_57 $$ if (list == null) -->Line_61 $$ query.append(_FINDER_COLUMN_C_U_C_C_USERID_2)[ CD ]
Line_43 $$ finderArgs = new Object[] -->Line_95 $$ finderCache.removeResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs)[ FD ]
Line_57 $$ if (list == null) -->Line_58 $$ StringBundler query = new StringBundler()[ CD ]
Line_37 $$ boolean pagination = true-->Line_85 $$ if (!pagination) [ FD ]
Line_80 $$ Query q = session.createQuery(sql)-->Line_86 $$ list = (List<Subscription>) QueryUtil.list(q, getDialect(), start, end, false)[ FD ]
Line_21 $$ if (classPKs == null) -->Line_23 $$ if (classPKs.length > 1) [ CD ]
Line_86 $$ list = (List<Subscription>) QueryUtil.list(q, getDialect(), start, end, false)-->Line_87 $$ Collections.sort(list)[ FD ]
Line_47 $$ list = (List<Subscription>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs, this)-->Line_51 $$ list = null[ FD ]
Line_22 $$ classPKs = new long[0]-->Line_25 $$ Arrays.sort(classPKs)[ FD ]
Line_29 $$ if (subscription == null) -->Line_33 $$ list.add(subscription)[ CD ]
Line_32 $$ List<Subscription> list = new ArrayList<Subscription>(1)-->Line_87 $$ Collections.sort(list)[ FD ]
Line_81 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_82 $$ qPos.add(companyId)[ FD ]
Line_51 $$ list = null-->Line_93 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs, list)[ FD ]
Line_71 $$ if (orderByComparator != null) -->Line_72 $$ appendOrderByComparator(query, _ORDER_BY_ENTITY_ALIAS, orderByComparator)[ CD ]
Line_24 $$ classPKs = ArrayUtil.unique(classPKs)-->Line_43 $$ finderArgs = new Object[] [ FD ]
Line_85 $$ if (!pagination) -->Line_86 $$ list = (List<Subscription>) QueryUtil.list(q, getDialect(), start, end, false)[ CD ]
Line_58 $$ StringBundler query = new StringBundler()-->Line_76 $$ String sql = query.toString()[ FD ]
Line_58 $$ StringBundler query = new StringBundler()-->Line_72 $$ appendOrderByComparator(query, _ORDER_BY_ENTITY_ALIAS, orderByComparator)[ FD ]
Line_22 $$ classPKs = new long[0]-->Line_41 $$ finderArgs = new Object[] [ FD ]
Line_39 $$ if ((start == QueryUtil.ALL_POS) && (end == QueryUtil.ALL_POS) && (orderByComparator == null)) -->Line_40 $$ pagination = false[ CD ]
Line_51 $$ list = null-->Line_90 $$ list = (List<Subscription>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_28 $$ Subscription subscription = fetchByC_U_C_C(companyId, userId, classNameId, classPKs[0])-->Line_50 $$ if ((companyId != subscription.getCompanyId()) || (userId != subscription.getUserId()) || (classNameId != subscription.getClassNameId()) || !ArrayUtil.contains(classPKs, subscription.getClassPK())) [ FD ]
Line_51 $$ list = null-->Line_88 $$ list = Collections.unmodifiableList(list)[ FD ]
Line_47 $$ list = (List<Subscription>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs, this)-->Line_92 $$ cacheResult(list)[ FD ]
Line_41 $$ finderArgs = new Object[] -->Line_93 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs, list)[ FD ]
Line_41 $$ finderArgs = new Object[] -->Line_43 $$ finderArgs = new Object[] [ FD ]
Line_58 $$ StringBundler query = new StringBundler()-->Line_66 $$ query.append(StringUtil.merge(classPKs))[ FD ]
Line_77 $$ Session session = null-->Line_79 $$ session = openSession()[ FD ]
Line_32 $$ List<Subscription> list = new ArrayList<Subscription>(1)-->Line_47 $$ list = (List<Subscription>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs, this)[ FD ]
Line_85 $$ if (!pagination) -->Line_87 $$ Collections.sort(list)[ CD ]
Line_27 $$ if (classPKs.length == 1) -->Line_28 $$ Subscription subscription = fetchByC_U_C_C(companyId, userId, classNameId, classPKs[0])[ CD ]
Line_28 $$ Subscription subscription = fetchByC_U_C_C(companyId, userId, classNameId, classPKs[0])-->Line_33 $$ list.add(subscription)[ FD ]
Line_23 $$ if (classPKs.length > 1) -->Line_25 $$ Arrays.sort(classPKs)[ CD ]
Line_57 $$ if (list == null) -->Line_59 $$ query.append(_SQL_SELECT_SUBSCRIPTION_WHERE)[ CD ]
Line_86 $$ list = (List<Subscription>) QueryUtil.list(q, getDialect(), start, end, false)-->Line_90 $$ list = (List<Subscription>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_21 $$ if (classPKs == null) -->Line_22 $$ classPKs = new long[0][ CD ]
Line_58 $$ StringBundler query = new StringBundler()-->Line_70 $$ query.setStringAt(removeConjunction(query.stringAt(query.index() - 1)), query.index() - 1)[ FD ]
Line_29 $$ if (subscription == null) -->Line_32 $$ List<Subscription> list = new ArrayList<Subscription>(1)[ CD ]
Line_32 $$ List<Subscription> list = new ArrayList<Subscription>(1)-->Line_51 $$ list = null[ FD ]
Line_46 $$ if (retrieveFromCache) -->Line_48 $$ if ((list != null) && !list.isEmpty()) [ CD ]
Line_50 $$ if ((companyId != subscription.getCompanyId()) || (userId != subscription.getUserId()) || (classNameId != subscription.getClassNameId()) || !ArrayUtil.contains(classPKs, subscription.getClassPK())) -->Line_51 $$ list = null[ CD ]
Line_58 $$ StringBundler query = new StringBundler()-->Line_64 $$ query.append(StringPool.OPEN_PARENTHESIS)[ FD ]
Line_76 $$ String sql = query.toString()-->Line_80 $$ Query q = session.createQuery(sql)[ FD ]
Line_40 $$ pagination = false-->Line_85 $$ if (!pagination) [ FD ]
Line_63 $$ if (classPKs.length > 0) -->Line_66 $$ query.append(StringUtil.merge(classPKs))[ CD ]
Line_39 $$ if ((start == QueryUtil.ALL_POS) && (end == QueryUtil.ALL_POS) && (orderByComparator == null)) -->Line_43 $$ finderArgs = new Object[] [ CD ]
Line_32 $$ List<Subscription> list = new ArrayList<Subscription>(1)-->Line_90 $$ list = (List<Subscription>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_51 $$ list = null-->Line_92 $$ cacheResult(list)[ FD ]
Line_57 $$ if (list == null) -->Line_62 $$ query.append(_FINDER_COLUMN_C_U_C_C_CLASSNAMEID_2)[ CD ]
Line_88 $$ list = Collections.unmodifiableList(list)-->Line_92 $$ cacheResult(list)[ FD ]
Line_77 $$ Session session = null-->Line_80 $$ Query q = session.createQuery(sql)[ FD ]
Line_47 $$ list = (List<Subscription>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs, this)-->Line_48 $$ if ((list != null) && !list.isEmpty()) [ FD ]
Line_32 $$ List<Subscription> list = new ArrayList<Subscription>(1)-->Line_93 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs, list)[ FD ]
Line_29 $$ if (subscription == null) -->Line_34 $$ return list[ CD ]
Line_32 $$ List<Subscription> list = new ArrayList<Subscription>(1)-->Line_48 $$ if ((list != null) && !list.isEmpty()) [ FD ]
Line_58 $$ StringBundler query = new StringBundler()-->Line_60 $$ query.append(_FINDER_COLUMN_C_U_C_C_COMPANYID_2)[ FD ]
Line_51 $$ list = null-->Line_57 $$ if (list == null) [ FD ]
Line_37 $$ boolean pagination = true-->Line_40 $$ pagination = false[ FD ]
Line_57 $$ if (list == null) -->Line_70 $$ query.setStringAt(removeConjunction(query.stringAt(query.index() - 1)), query.index() - 1)[ CD ]
Line_47 $$ list = (List<Subscription>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs, this)-->Line_87 $$ Collections.sort(list)[ FD ]
Line_63 $$ if (classPKs.length > 0) -->Line_64 $$ query.append(StringPool.OPEN_PARENTHESIS)[ CD ]
Line_41 $$ finderArgs = new Object[] -->Line_47 $$ list = (List<Subscription>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs, this)[ FD ]
Line_47 $$ list = (List<Subscription>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs, this)-->Line_88 $$ list = Collections.unmodifiableList(list)[ FD ]
Line_86 $$ list = (List<Subscription>) QueryUtil.list(q, getDialect(), start, end, false)-->Line_92 $$ cacheResult(list)[ FD ]
Line_57 $$ if (list == null) -->Line_63 $$ if (classPKs.length > 0) [ CD ]
Line_47 $$ list = (List<Subscription>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs, this)-->Line_86 $$ list = (List<Subscription>) QueryUtil.list(q, getDialect(), start, end, false)[ FD ]
Line_73 $$ if (pagination) -->Line_74 $$ query.append(SubscriptionModelImpl.ORDER_BY_JPQL)[ CD ]
Line_24 $$ classPKs = ArrayUtil.unique(classPKs)-->Line_25 $$ Arrays.sort(classPKs)[ FD ]
Line_23 $$ if (classPKs.length > 1) -->Line_24 $$ classPKs = ArrayUtil.unique(classPKs)[ CD ]
Line_63 $$ if (classPKs.length > 0) -->Line_68 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_32 $$ List<Subscription> list = new ArrayList<Subscription>(1)-->Line_92 $$ cacheResult(list)[ FD ]
Line_88 $$ list = Collections.unmodifiableList(list)-->Line_93 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs, list)[ FD ]
Line_77 $$ Session session = null-->Line_98 $$ closeSession(session)[ FD ]
Line_57 $$ if (list == null) -->Line_60 $$ query.append(_FINDER_COLUMN_C_U_C_C_COMPANYID_2)[ CD ]
Line_32 $$ List<Subscription> list = new ArrayList<Subscription>(1)-->Line_33 $$ list.add(subscription)[ FD ]
Line_22 $$ classPKs = new long[0]-->Line_43 $$ finderArgs = new Object[] [ FD ]
Line_27 $$ if (classPKs.length == 1) -->Line_29 $$ if (subscription == null) [ CD ]
Line_57 $$ if (list == null) -->Line_71 $$ if (orderByComparator != null) [ CD ]
Line_43 $$ finderArgs = new Object[] -->Line_47 $$ list = (List<Subscription>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs, this)[ FD ]
Line_71 $$ if (orderByComparator != null) -->Line_73 $$ if (pagination) [ CD ]
Line_22 $$ classPKs = new long[0]-->Line_66 $$ query.append(StringUtil.merge(classPKs))[ FD ]
Line_22 $$ classPKs = new long[0]-->Line_24 $$ classPKs = ArrayUtil.unique(classPKs)[ FD ]
Line_58 $$ StringBundler query = new StringBundler()-->Line_74 $$ query.append(SubscriptionModelImpl.ORDER_BY_JPQL)[ FD ]
Line_80 $$ Query q = session.createQuery(sql)-->Line_90 $$ list = (List<Subscription>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_47 $$ list = (List<Subscription>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs, this)-->Line_93 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs, list)[ FD ]
Line_47 $$ list = (List<Subscription>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs, this)-->Line_57 $$ if (list == null) [ FD ]
Line_38 $$ Object[] finderArgs = null-->Line_95 $$ finderCache.removeResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs)[ FD ]
Line_85 $$ if (!pagination) -->Line_90 $$ list = (List<Subscription>) QueryUtil.list(q, getDialect(), start, end)[ CD ]
Line_24 $$ classPKs = ArrayUtil.unique(classPKs)-->Line_50 $$ if ((companyId != subscription.getCompanyId()) || (userId != subscription.getUserId()) || (classNameId != subscription.getClassNameId()) || !ArrayUtil.contains(classPKs, subscription.getClassPK())) [ FD ]
Line_88 $$ list = Collections.unmodifiableList(list)-->Line_90 $$ list = (List<Subscription>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_32 $$ List<Subscription> list = new ArrayList<Subscription>(1)-->Line_57 $$ if (list == null) [ FD ]
Line_80 $$ Query q = session.createQuery(sql)-->Line_81 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_38 $$ Object[] finderArgs = null-->Line_43 $$ finderArgs = new Object[] [ FD ]
Line_43 $$ finderArgs = new Object[] -->Line_93 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs, list)[ FD ]
Line_63 $$ if (classPKs.length > 0) -->Line_67 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_28 $$ Subscription subscription = fetchByC_U_C_C(companyId, userId, classNameId, classPKs[0])-->Line_29 $$ if (subscription == null) [ FD ]
Line_86 $$ list = (List<Subscription>) QueryUtil.list(q, getDialect(), start, end, false)-->Line_88 $$ list = Collections.unmodifiableList(list)[ FD ]
Line_51 $$ list = null-->Line_86 $$ list = (List<Subscription>) QueryUtil.list(q, getDialect(), start, end, false)[ FD ]
Line_90 $$ list = (List<Subscription>) QueryUtil.list(q, getDialect(), start, end)-->Line_93 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs, list)[ FD ]
Line_41 $$ finderArgs = new Object[] -->Line_95 $$ finderCache.removeResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs)[ FD ]
Line_58 $$ StringBundler query = new StringBundler()-->Line_68 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_29 $$ if (subscription == null) -->Line_30 $$ return Collections.emptyList()[ CD ]
Line_81 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_83 $$ qPos.add(userId)[ FD ]
Line_38 $$ Object[] finderArgs = null-->Line_41 $$ finderArgs = new Object[] [ FD ]
Line_57 $$ if (list == null) -->Line_77 $$ Session session = null[ CD ]
Line_58 $$ StringBundler query = new StringBundler()-->Line_62 $$ query.append(_FINDER_COLUMN_C_U_C_C_CLASSNAMEID_2)[ FD ]
Line_47 $$ list = (List<Subscription>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs, this)-->Line_90 $$ list = (List<Subscription>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_39 $$ if ((start == QueryUtil.ALL_POS) && (end == QueryUtil.ALL_POS) && (orderByComparator == null)) -->Line_41 $$ finderArgs = new Object[] [ CD ]
Line_90 $$ list = (List<Subscription>) QueryUtil.list(q, getDialect(), start, end)-->Line_92 $$ cacheResult(list)[ FD ]
Line_32 $$ List<Subscription> list = new ArrayList<Subscription>(1)-->Line_86 $$ list = (List<Subscription>) QueryUtil.list(q, getDialect(), start, end, false)[ FD ]
Line_24 $$ classPKs = ArrayUtil.unique(classPKs)-->Line_66 $$ query.append(StringUtil.merge(classPKs))[ FD ]
Line_40 $$ pagination = false-->Line_71 $$ if (orderByComparator != null) [ FD ]
Line_38 $$ Object[] finderArgs = null-->Line_93 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs, list)[ FD ]
Line_79 $$ session = openSession()-->Line_98 $$ closeSession(session)[ FD ]
Line_58 $$ StringBundler query = new StringBundler()-->Line_59 $$ query.append(_SQL_SELECT_SUBSCRIPTION_WHERE)[ FD ]
Line_86 $$ list = (List<Subscription>) QueryUtil.list(q, getDialect(), start, end, false)-->Line_93 $$ finderCache.putResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs, list)[ FD ]
Line_57 $$ if (list == null) -->Line_76 $$ String sql = query.toString()[ CD ]
Line_22 $$ classPKs = new long[0]-->Line_50 $$ if ((companyId != subscription.getCompanyId()) || (userId != subscription.getUserId()) || (classNameId != subscription.getClassNameId()) || !ArrayUtil.contains(classPKs, subscription.getClassPK())) [ FD ]
Line_63 $$ if (classPKs.length > 0) -->Line_65 $$ query.append(_FINDER_COLUMN_C_U_C_C_CLASSPK_7)[ CD ]
Line_58 $$ StringBundler query = new StringBundler()-->Line_65 $$ query.append(_FINDER_COLUMN_C_U_C_C_CLASSPK_7)[ FD ]
Line_51 $$ list = null-->Line_87 $$ Collections.sort(list)[ FD ]
Line_37 $$ boolean pagination = true-->Line_71 $$ if (orderByComparator != null) [ FD ]
Line_58 $$ StringBundler query = new StringBundler()-->Line_67 $$ query.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_46 $$ if (retrieveFromCache) -->Line_47 $$ list = (List<Subscription>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs, this)[ CD ]
Line_38 $$ Object[] finderArgs = null-->Line_47 $$ list = (List<Subscription>) finderCache.getResult(FINDER_PATH_WITH_PAGINATION_FIND_BY_C_U_C_C, finderArgs, this)[ FD ]
Line_24 $$ classPKs = ArrayUtil.unique(classPKs)-->Line_41 $$ finderArgs = new Object[] [ FD ]
Line_79 $$ session = openSession()-->Line_80 $$ Query q = session.createQuery(sql)[ FD ]
