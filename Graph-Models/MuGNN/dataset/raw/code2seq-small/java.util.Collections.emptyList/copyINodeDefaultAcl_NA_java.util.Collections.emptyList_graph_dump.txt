Line_34 $$ if (type == AclEntryType.USER && name == null) -->Line_35 $$ permission = entry.getPermission().and(childPerm.getUserAction())[ CD ]
Line_55 $$ if (!AclUtil.isMinimalAcl(accessEntries) || !defaultEntries.isEmpty()) -->Line_58 $$ newPerm = createFsPermissionForExtendedAcl(accessEntries, childPerm)[ CD ]
Line_36 $$ if (type == AclEntryType.GROUP && parentDefaultIsMinimal) -->Line_41 $$ if (type == AclEntryType.MASK) [ CD ]
Line_45 $$ permission = entry.getPermission().and(childPerm.getOtherAction())-->Line_49 $$ builder.setPermission(permission)[ FD ]
Line_44 $$ if (type == AclEntryType.OTHER) -->Line_47 $$ permission = entry.getPermission()[ CD ]
Line_27 $$ for (AclEntry entry : parentDefaultEntries) -->Line_47 $$ permission = entry.getPermission()[ FD ]
Line_30 $$ AclEntry.Builder builder = new AclEntry.Builder().setScope(AclEntryScope.ACCESS).setType(type).setName(name)-->Line_49 $$ builder.setPermission(permission)[ FD ]
Line_30 $$ AclEntry.Builder builder = new AclEntry.Builder().setScope(AclEntryScope.ACCESS).setType(type).setName(name)-->Line_50 $$ accessEntries.add(builder.build())[ FD ]
Line_16 $$ ScopedAclEntries scopedEntries = new ScopedAclEntries(featureEntries)-->Line_17 $$ List<AclEntry> parentDefaultEntries = scopedEntries.getDefaultEntries()[ FD ]
Line_35 $$ permission = entry.getPermission().and(childPerm.getUserAction())-->Line_49 $$ builder.setPermission(permission)[ FD ]
Line_54 $$ final FsPermission newPerm-->Line_63 $$ child.setPermission(newPerm)[ FD ]
Line_27 $$ for (AclEntry entry : parentDefaultEntries) -->Line_28 $$ AclEntryType type = entry.getType()[ FD ]
Line_28 $$ AclEntryType type = entry.getType()-->Line_41 $$ if (type == AclEntryType.MASK) [ FD ]
Line_34 $$ if (type == AclEntryType.USER && name == null) -->Line_36 $$ if (type == AclEntryType.GROUP && parentDefaultIsMinimal) [ CD ]
Line_45 $$ permission = entry.getPermission().and(childPerm.getOtherAction())-->Line_47 $$ permission = entry.getPermission()[ FD ]
Line_27 $$ for (AclEntry entry : parentDefaultEntries) -->Line_45 $$ permission = entry.getPermission().and(childPerm.getOtherAction())[ FD ]
Line_27 $$ for (AclEntry entry : parentDefaultEntries) -->Line_29 $$ String name = entry.getName()[ FD ]
Line_28 $$ AclEntryType type = entry.getType()-->Line_44 $$ if (type == AclEntryType.OTHER) [ FD ]
Line_24 $$ FsPermission childPerm = child.getFsPermission()-->Line_45 $$ permission = entry.getPermission().and(childPerm.getOtherAction())[ FD ]
Line_47 $$ permission = entry.getPermission()-->Line_49 $$ builder.setPermission(permission)[ FD ]
Line_58 $$ newPerm = createFsPermissionForExtendedAcl(accessEntries, childPerm)-->Line_63 $$ child.setPermission(newPerm)[ FD ]
Line_11 $$ if (parentAclFeature == null || !(child.isFile() || child.isDirectory())) -->Line_12 $$ return[ CD ]
Line_24 $$ FsPermission childPerm = child.getFsPermission()-->Line_58 $$ newPerm = createFsPermissionForExtendedAcl(accessEntries, childPerm)[ FD ]
Line_24 $$ FsPermission childPerm = child.getFsPermission()-->Line_35 $$ permission = entry.getPermission().and(childPerm.getUserAction())[ FD ]
Line_35 $$ permission = entry.getPermission().and(childPerm.getUserAction())-->Line_47 $$ permission = entry.getPermission()[ FD ]
Line_28 $$ AclEntryType type = entry.getType()-->Line_30 $$ AclEntry.Builder builder = new AclEntry.Builder().setScope(AclEntryScope.ACCESS).setType(type).setName(name)[ FD ]
Line_27 $$ for (AclEntry entry : parentDefaultEntries) -->Line_35 $$ permission = entry.getPermission().and(childPerm.getUserAction())[ FD ]
Line_9 $$ INodeDirectory parent = child.getParent()-->Line_10 $$ AclFeature parentAclFeature = parent.getAclFeature()[ FD ]
Line_29 $$ String name = entry.getName()-->Line_30 $$ AclEntry.Builder builder = new AclEntry.Builder().setScope(AclEntryScope.ACCESS).setType(type).setName(name)[ FD ]
Line_41 $$ if (type == AclEntryType.MASK) -->Line_44 $$ if (type == AclEntryType.OTHER) [ CD ]
Line_54 $$ final FsPermission newPerm-->Line_58 $$ newPerm = createFsPermissionForExtendedAcl(accessEntries, childPerm)[ FD ]
Line_44 $$ if (type == AclEntryType.OTHER) -->Line_45 $$ permission = entry.getPermission().and(childPerm.getOtherAction())[ CD ]
Line_35 $$ permission = entry.getPermission().and(childPerm.getUserAction())-->Line_45 $$ permission = entry.getPermission().and(childPerm.getOtherAction())[ FD ]
