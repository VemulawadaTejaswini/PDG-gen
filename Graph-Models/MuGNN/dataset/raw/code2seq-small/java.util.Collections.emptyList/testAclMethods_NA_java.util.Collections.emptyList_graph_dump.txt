Line_12 $$ FileSystem viewFs = FileSystem.get(FsConstants.VIEWFS_URI, conf)-->Line_26 $$ viewFs.removeDefaultAcl(viewFsPath1)[ FD ]
Line_9 $$ Configuration conf = ViewFileSystemTestSetup.createConfig()-->Line_12 $$ FileSystem viewFs = FileSystem.get(FsConstants.VIEWFS_URI, conf)[ FD ]
Line_15 $$ Path viewFsPath2 = new Path("/mounts/mockfs2/d/e/f")-->Line_24 $$ viewFs.removeAclEntries(viewFsPath2, entries)[ FD ]
Line_16 $$ Path mockFsPath2 = new Path("/d/e/f")-->Line_41 $$ verify(mockFs2).getAclStatus(mockFsPath2)[ FD ]
Line_11 $$ FileSystem mockFs2 = setupMockFileSystem(conf, new URI("mockfs2:/"))-->Line_37 $$ verify(mockFs2).setAcl(mockFsPath2, entries)[ FD ]
Line_17 $$ List<AclEntry> entries = Collections.emptyList()-->Line_20 $$ viewFs.modifyAclEntries(viewFsPath2, entries)[ FD ]
Line_10 $$ FileSystem mockFs1 = setupMockFileSystem(conf, new URI("mockfs1:/"))-->Line_19 $$ verify(mockFs1).modifyAclEntries(mockFsPath1, entries)[ FD ]
Line_12 $$ FileSystem viewFs = FileSystem.get(FsConstants.VIEWFS_URI, conf)-->Line_30 $$ viewFs.removeAcl(viewFsPath1)[ FD ]
Line_9 $$ Configuration conf = ViewFileSystemTestSetup.createConfig()-->Line_10 $$ FileSystem mockFs1 = setupMockFileSystem(conf, new URI("mockfs1:/"))[ FD ]
Line_15 $$ Path viewFsPath2 = new Path("/mounts/mockfs2/d/e/f")-->Line_40 $$ viewFs.getAclStatus(viewFsPath2)[ FD ]
Line_17 $$ List<AclEntry> entries = Collections.emptyList()-->Line_24 $$ viewFs.removeAclEntries(viewFsPath2, entries)[ FD ]
Line_9 $$ Configuration conf = ViewFileSystemTestSetup.createConfig()-->Line_11 $$ FileSystem mockFs2 = setupMockFileSystem(conf, new URI("mockfs2:/"))[ FD ]
Line_12 $$ FileSystem viewFs = FileSystem.get(FsConstants.VIEWFS_URI, conf)-->Line_38 $$ viewFs.getAclStatus(viewFsPath1)[ FD ]
Line_12 $$ FileSystem viewFs = FileSystem.get(FsConstants.VIEWFS_URI, conf)-->Line_22 $$ viewFs.removeAclEntries(viewFsPath1, entries)[ FD ]
Line_16 $$ Path mockFsPath2 = new Path("/d/e/f")-->Line_25 $$ verify(mockFs2).removeAclEntries(mockFsPath2, entries)[ FD ]
Line_10 $$ FileSystem mockFs1 = setupMockFileSystem(conf, new URI("mockfs1:/"))-->Line_27 $$ verify(mockFs1).removeDefaultAcl(mockFsPath1)[ FD ]
Line_15 $$ Path viewFsPath2 = new Path("/mounts/mockfs2/d/e/f")-->Line_28 $$ viewFs.removeDefaultAcl(viewFsPath2)[ FD ]
Line_14 $$ Path mockFsPath1 = new Path("/a/b/c")-->Line_27 $$ verify(mockFs1).removeDefaultAcl(mockFsPath1)[ FD ]
Line_17 $$ List<AclEntry> entries = Collections.emptyList()-->Line_25 $$ verify(mockFs2).removeAclEntries(mockFsPath2, entries)[ FD ]
Line_11 $$ FileSystem mockFs2 = setupMockFileSystem(conf, new URI("mockfs2:/"))-->Line_25 $$ verify(mockFs2).removeAclEntries(mockFsPath2, entries)[ FD ]
Line_16 $$ Path mockFsPath2 = new Path("/d/e/f")-->Line_29 $$ verify(mockFs2).removeDefaultAcl(mockFsPath2)[ FD ]
Line_14 $$ Path mockFsPath1 = new Path("/a/b/c")-->Line_35 $$ verify(mockFs1).setAcl(mockFsPath1, entries)[ FD ]
Line_12 $$ FileSystem viewFs = FileSystem.get(FsConstants.VIEWFS_URI, conf)-->Line_36 $$ viewFs.setAcl(viewFsPath2, entries)[ FD ]
Line_10 $$ FileSystem mockFs1 = setupMockFileSystem(conf, new URI("mockfs1:/"))-->Line_23 $$ verify(mockFs1).removeAclEntries(mockFsPath1, entries)[ FD ]
Line_17 $$ List<AclEntry> entries = Collections.emptyList()-->Line_21 $$ verify(mockFs2).modifyAclEntries(mockFsPath2, entries)[ FD ]
Line_17 $$ List<AclEntry> entries = Collections.emptyList()-->Line_18 $$ viewFs.modifyAclEntries(viewFsPath1, entries)[ FD ]
Line_17 $$ List<AclEntry> entries = Collections.emptyList()-->Line_35 $$ verify(mockFs1).setAcl(mockFsPath1, entries)[ FD ]
Line_10 $$ FileSystem mockFs1 = setupMockFileSystem(conf, new URI("mockfs1:/"))-->Line_39 $$ verify(mockFs1).getAclStatus(mockFsPath1)[ FD ]
Line_13 $$ Path viewFsPath1 = new Path("/mounts/mockfs1/a/b/c")-->Line_22 $$ viewFs.removeAclEntries(viewFsPath1, entries)[ FD ]
Line_14 $$ Path mockFsPath1 = new Path("/a/b/c")-->Line_31 $$ verify(mockFs1).removeAcl(mockFsPath1)[ FD ]
Line_16 $$ Path mockFsPath2 = new Path("/d/e/f")-->Line_33 $$ verify(mockFs2).removeAcl(mockFsPath2)[ FD ]
Line_15 $$ Path viewFsPath2 = new Path("/mounts/mockfs2/d/e/f")-->Line_20 $$ viewFs.modifyAclEntries(viewFsPath2, entries)[ FD ]
Line_17 $$ List<AclEntry> entries = Collections.emptyList()-->Line_22 $$ viewFs.removeAclEntries(viewFsPath1, entries)[ FD ]
Line_12 $$ FileSystem viewFs = FileSystem.get(FsConstants.VIEWFS_URI, conf)-->Line_28 $$ viewFs.removeDefaultAcl(viewFsPath2)[ FD ]
Line_16 $$ Path mockFsPath2 = new Path("/d/e/f")-->Line_37 $$ verify(mockFs2).setAcl(mockFsPath2, entries)[ FD ]
Line_14 $$ Path mockFsPath1 = new Path("/a/b/c")-->Line_39 $$ verify(mockFs1).getAclStatus(mockFsPath1)[ FD ]
Line_17 $$ List<AclEntry> entries = Collections.emptyList()-->Line_36 $$ viewFs.setAcl(viewFsPath2, entries)[ FD ]
Line_17 $$ List<AclEntry> entries = Collections.emptyList()-->Line_37 $$ verify(mockFs2).setAcl(mockFsPath2, entries)[ FD ]
Line_14 $$ Path mockFsPath1 = new Path("/a/b/c")-->Line_23 $$ verify(mockFs1).removeAclEntries(mockFsPath1, entries)[ FD ]
Line_17 $$ List<AclEntry> entries = Collections.emptyList()-->Line_19 $$ verify(mockFs1).modifyAclEntries(mockFsPath1, entries)[ FD ]
Line_11 $$ FileSystem mockFs2 = setupMockFileSystem(conf, new URI("mockfs2:/"))-->Line_41 $$ verify(mockFs2).getAclStatus(mockFsPath2)[ FD ]
Line_10 $$ FileSystem mockFs1 = setupMockFileSystem(conf, new URI("mockfs1:/"))-->Line_31 $$ verify(mockFs1).removeAcl(mockFsPath1)[ FD ]
Line_15 $$ Path viewFsPath2 = new Path("/mounts/mockfs2/d/e/f")-->Line_36 $$ viewFs.setAcl(viewFsPath2, entries)[ FD ]
Line_13 $$ Path viewFsPath1 = new Path("/mounts/mockfs1/a/b/c")-->Line_34 $$ viewFs.setAcl(viewFsPath1, entries)[ FD ]
Line_13 $$ Path viewFsPath1 = new Path("/mounts/mockfs1/a/b/c")-->Line_38 $$ viewFs.getAclStatus(viewFsPath1)[ FD ]
Line_14 $$ Path mockFsPath1 = new Path("/a/b/c")-->Line_19 $$ verify(mockFs1).modifyAclEntries(mockFsPath1, entries)[ FD ]
Line_13 $$ Path viewFsPath1 = new Path("/mounts/mockfs1/a/b/c")-->Line_26 $$ viewFs.removeDefaultAcl(viewFsPath1)[ FD ]
Line_12 $$ FileSystem viewFs = FileSystem.get(FsConstants.VIEWFS_URI, conf)-->Line_20 $$ viewFs.modifyAclEntries(viewFsPath2, entries)[ FD ]
Line_13 $$ Path viewFsPath1 = new Path("/mounts/mockfs1/a/b/c")-->Line_18 $$ viewFs.modifyAclEntries(viewFsPath1, entries)[ FD ]
Line_12 $$ FileSystem viewFs = FileSystem.get(FsConstants.VIEWFS_URI, conf)-->Line_34 $$ viewFs.setAcl(viewFsPath1, entries)[ FD ]
Line_10 $$ FileSystem mockFs1 = setupMockFileSystem(conf, new URI("mockfs1:/"))-->Line_35 $$ verify(mockFs1).setAcl(mockFsPath1, entries)[ FD ]
Line_11 $$ FileSystem mockFs2 = setupMockFileSystem(conf, new URI("mockfs2:/"))-->Line_29 $$ verify(mockFs2).removeDefaultAcl(mockFsPath2)[ FD ]
Line_17 $$ List<AclEntry> entries = Collections.emptyList()-->Line_34 $$ viewFs.setAcl(viewFsPath1, entries)[ FD ]
Line_11 $$ FileSystem mockFs2 = setupMockFileSystem(conf, new URI("mockfs2:/"))-->Line_21 $$ verify(mockFs2).modifyAclEntries(mockFsPath2, entries)[ FD ]
Line_12 $$ FileSystem viewFs = FileSystem.get(FsConstants.VIEWFS_URI, conf)-->Line_24 $$ viewFs.removeAclEntries(viewFsPath2, entries)[ FD ]
Line_12 $$ FileSystem viewFs = FileSystem.get(FsConstants.VIEWFS_URI, conf)-->Line_40 $$ viewFs.getAclStatus(viewFsPath2)[ FD ]
Line_12 $$ FileSystem viewFs = FileSystem.get(FsConstants.VIEWFS_URI, conf)-->Line_18 $$ viewFs.modifyAclEntries(viewFsPath1, entries)[ FD ]
Line_13 $$ Path viewFsPath1 = new Path("/mounts/mockfs1/a/b/c")-->Line_30 $$ viewFs.removeAcl(viewFsPath1)[ FD ]
Line_11 $$ FileSystem mockFs2 = setupMockFileSystem(conf, new URI("mockfs2:/"))-->Line_33 $$ verify(mockFs2).removeAcl(mockFsPath2)[ FD ]
Line_15 $$ Path viewFsPath2 = new Path("/mounts/mockfs2/d/e/f")-->Line_32 $$ viewFs.removeAcl(viewFsPath2)[ FD ]
Line_12 $$ FileSystem viewFs = FileSystem.get(FsConstants.VIEWFS_URI, conf)-->Line_32 $$ viewFs.removeAcl(viewFsPath2)[ FD ]
Line_16 $$ Path mockFsPath2 = new Path("/d/e/f")-->Line_21 $$ verify(mockFs2).modifyAclEntries(mockFsPath2, entries)[ FD ]
Line_17 $$ List<AclEntry> entries = Collections.emptyList()-->Line_23 $$ verify(mockFs1).removeAclEntries(mockFsPath1, entries)[ FD ]
