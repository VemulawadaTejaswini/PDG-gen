Line_5 $$ Map<Group, SuperTypeGroup> groups = new THashMap<Group, SuperTypeGroup>()-->Line_36 $$ return groups.keySet()[ FD ]
Line_16 $$ if (superMethods.length > 0) -->Line_25 $$ PsiMethod superMethod = superMethods[0][ CD ]
Line_16 $$ if (superMethods.length > 0) -->Line_30 $$ SuperTypeGroup group = getOrCreateGroup(groupClass, ownershipType, groups)[ CD ]
Line_9 $$ PsiMethod method = ((PsiMethodTreeElement) child).getMethod()-->Line_15 $$ PsiMethod[] superMethods = method.findSuperMethods()[ FD ]
Line_16 $$ if (superMethods.length > 0) -->Line_26 $$ method.putUserData(SUPER_METHOD_KEY, new WeakReference<PsiMethod>(superMethod))[ CD ]
Line_29 $$ final SuperTypeGroup.OwnershipType ownershipType = overrides ? SuperTypeGroup.OwnershipType.OVERRIDES : SuperTypeGroup.OwnershipType.IMPLEMENTS-->Line_30 $$ SuperTypeGroup group = getOrCreateGroup(groupClass, ownershipType, groups)[ FD ]
Line_7 $$ if (child instanceof PsiMethodTreeElement) -->Line_9 $$ PsiMethod method = ((PsiMethodTreeElement) child).getMethod()[ CD ]
Line_5 $$ Map<Group, SuperTypeGroup> groups = new THashMap<Group, SuperTypeGroup>()-->Line_30 $$ SuperTypeGroup group = getOrCreateGroup(groupClass, ownershipType, groups)[ FD ]
Line_3 $$ if (isParentGrouped(parent))-->Line_4 $$ return Collections.emptyList()[ CD ]
Line_7 $$ if (child instanceof PsiMethodTreeElement) -->Line_8 $$ final PsiMethodTreeElement element = (PsiMethodTreeElement) child[ CD ]
Line_16 $$ if (superMethods.length > 0) -->Line_31 $$ group.addMethod(child)[ CD ]
Line_17 $$ for (int i = 1; i < superMethods.length; i++) -->Line_19 $$ PsiClass containingClass = superMethod.getContainingClass()[ CD ]
Line_8 $$ final PsiMethodTreeElement element = (PsiMethodTreeElement) child-->Line_10 $$ if (element.isInherited()) [ FD ]
Line_2 $$ public Collection<Group> group(@NotNull final AbstractTreeNode parent, @NotNull Collection<TreeElement> children) -->Line_5 $$ Map<Group, SuperTypeGroup> groups = new THashMap<Group, SuperTypeGroup>()[ CD ]
Line_19 $$ PsiClass containingClass = superMethod.getContainingClass()-->Line_20 $$ if (containingClass != null && containingClass.isInterface()) [ FD ]
Line_17 $$ for (int i = 1; i < superMethods.length; i++) -->Line_21 $$ ArrayUtil.swap(superMethods, 0, i)[ FD ]
Line_9 $$ PsiMethod method = ((PsiMethodTreeElement) child).getMethod()-->Line_28 $$ boolean overrides = methodOverridesSuper(method, superMethod)[ FD ]
Line_11 $$ PsiClass groupClass = method.getContainingClass()-->Line_30 $$ SuperTypeGroup group = getOrCreateGroup(groupClass, ownershipType, groups)[ FD ]
Line_12 $$ final SuperTypeGroup group = getOrCreateGroup(groupClass, SuperTypeGroup.OwnershipType.INHERITS, groups)-->Line_31 $$ group.addMethod(child)[ FD ]
Line_25 $$ PsiMethod superMethod = superMethods[0]-->Line_27 $$ PsiClass groupClass = superMethod.getContainingClass()[ FD ]
Line_16 $$ if (superMethods.length > 0) -->Line_29 $$ final SuperTypeGroup.OwnershipType ownershipType = overrides ? SuperTypeGroup.OwnershipType.OVERRIDES : SuperTypeGroup.OwnershipType.IMPLEMENTS[ CD ]
Line_7 $$ if (child instanceof PsiMethodTreeElement) -->Line_10 $$ if (element.isInherited()) [ CD ]
Line_18 $$ PsiMethod superMethod = superMethods[i]-->Line_27 $$ PsiClass groupClass = superMethod.getContainingClass()[ FD ]
Line_12 $$ final SuperTypeGroup group = getOrCreateGroup(groupClass, SuperTypeGroup.OwnershipType.INHERITS, groups)-->Line_13 $$ group.addMethod(child)[ FD ]
Line_10 $$ if (element.isInherited()) -->Line_15 $$ PsiMethod[] superMethods = method.findSuperMethods()[ CD ]
Line_6 $$ for (TreeElement child : children) -->Line_13 $$ group.addMethod(child)[ FD ]
Line_18 $$ PsiMethod superMethod = superMethods[i]-->Line_28 $$ boolean overrides = methodOverridesSuper(method, superMethod)[ FD ]
Line_9 $$ PsiMethod method = ((PsiMethodTreeElement) child).getMethod()-->Line_11 $$ PsiClass groupClass = method.getContainingClass()[ FD ]
Line_2 $$ public Collection<Group> group(@NotNull final AbstractTreeNode parent, @NotNull Collection<TreeElement> children) -->Line_3 $$ if (isParentGrouped(parent))[ CD ]
Line_6 $$ for (TreeElement child : children) -->Line_31 $$ group.addMethod(child)[ FD ]
Line_15 $$ PsiMethod[] superMethods = method.findSuperMethods()-->Line_21 $$ ArrayUtil.swap(superMethods, 0, i)[ FD ]
Line_18 $$ PsiMethod superMethod = superMethods[i]-->Line_19 $$ PsiClass containingClass = superMethod.getContainingClass()[ FD ]
Line_2 $$ public Collection<Group> group(@NotNull final AbstractTreeNode parent, @NotNull Collection<TreeElement> children) -->Line_36 $$ return groups.keySet()[ CD ]
Line_17 $$ for (int i = 1; i < superMethods.length; i++) -->Line_20 $$ if (containingClass != null && containingClass.isInterface()) [ CD ]
Line_5 $$ Map<Group, SuperTypeGroup> groups = new THashMap<Group, SuperTypeGroup>()-->Line_12 $$ final SuperTypeGroup group = getOrCreateGroup(groupClass, SuperTypeGroup.OwnershipType.INHERITS, groups)[ FD ]
Line_10 $$ if (element.isInherited()) -->Line_11 $$ PsiClass groupClass = method.getContainingClass()[ CD ]
Line_11 $$ PsiClass groupClass = method.getContainingClass()-->Line_12 $$ final SuperTypeGroup group = getOrCreateGroup(groupClass, SuperTypeGroup.OwnershipType.INHERITS, groups)[ FD ]
Line_20 $$ if (containingClass != null && containingClass.isInterface()) -->Line_21 $$ ArrayUtil.swap(superMethods, 0, i)[ CD ]
Line_16 $$ if (superMethods.length > 0) -->Line_17 $$ for (int i = 1; i < superMethods.length; i++) [ CD ]
Line_25 $$ PsiMethod superMethod = superMethods[0]-->Line_28 $$ boolean overrides = methodOverridesSuper(method, superMethod)[ FD ]
Line_10 $$ if (element.isInherited()) -->Line_12 $$ final SuperTypeGroup group = getOrCreateGroup(groupClass, SuperTypeGroup.OwnershipType.INHERITS, groups)[ CD ]
Line_16 $$ if (superMethods.length > 0) -->Line_28 $$ boolean overrides = methodOverridesSuper(method, superMethod)[ CD ]
Line_16 $$ if (superMethods.length > 0) -->Line_27 $$ PsiClass groupClass = superMethod.getContainingClass()[ CD ]
Line_17 $$ for (int i = 1; i < superMethods.length; i++) -->Line_18 $$ PsiMethod superMethod = superMethods[i][ CD ]
Line_10 $$ if (element.isInherited()) -->Line_16 $$ if (superMethods.length > 0) [ CD ]
Line_6 $$ for (TreeElement child : children) -->Line_7 $$ if (child instanceof PsiMethodTreeElement) [ FD ]
Line_2 $$ public Collection<Group> group(@NotNull final AbstractTreeNode parent, @NotNull Collection<TreeElement> children) -->Line_3 $$ if (isParentGrouped(parent))[ FD ]
Line_10 $$ if (element.isInherited()) -->Line_13 $$ group.addMethod(child)[ CD ]
Line_9 $$ PsiMethod method = ((PsiMethodTreeElement) child).getMethod()-->Line_26 $$ method.putUserData(SUPER_METHOD_KEY, new WeakReference<PsiMethod>(superMethod))[ FD ]
