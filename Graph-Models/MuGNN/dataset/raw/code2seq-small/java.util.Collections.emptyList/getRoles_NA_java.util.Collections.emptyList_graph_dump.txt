Line_2 $$ public List<Role> getRoles(long companyId, String name, int scope, String primKey, String actionId) throws PortalException -->Line_4 $$ if (resourcePermissions.isEmpty()) [ CD ]
Line_2 $$ public List<Role> getRoles(long companyId, String name, int scope, String primKey, String actionId) throws PortalException -->Line_18 $$ return roles[ CD ]
Line_9 $$ for (ResourcePermission resourcePermission : resourcePermissions) -->Line_11 $$ rolesIds.add(resourcePermission.getRoleId())[ FD ]
Line_7 $$ ResourceAction resourceAction = resourceActionLocalService.getResourceAction(name, actionId)-->Line_10 $$ if (resourcePermission.hasAction(resourceAction)) [ FD ]
Line_3 $$ List<ResourcePermission> resourcePermissions = resourcePermissionPersistence.findByC_N_S_P(companyId, name, scope, primKey)-->Line_4 $$ if (resourcePermissions.isEmpty()) [ FD ]
Line_2 $$ public List<Role> getRoles(long companyId, String name, int scope, String primKey, String actionId) throws PortalException -->Line_14 $$ List<Role> roles = new ArrayList(rolesIds.size())[ CD ]
Line_2 $$ public List<Role> getRoles(long companyId, String name, int scope, String primKey, String actionId) throws PortalException -->Line_7 $$ ResourceAction resourceAction = resourceActionLocalService.getResourceAction(name, actionId)[ CD ]
Line_9 $$ for (ResourcePermission resourcePermission : resourcePermissions) -->Line_10 $$ if (resourcePermission.hasAction(resourceAction)) [ FD ]
Line_2 $$ public List<Role> getRoles(long companyId, String name, int scope, String primKey, String actionId) throws PortalException -->Line_3 $$ List<ResourcePermission> resourcePermissions = resourcePermissionPersistence.findByC_N_S_P(companyId, name, scope, primKey)[ CD ]
Line_4 $$ if (resourcePermissions.isEmpty()) -->Line_5 $$ return Collections.emptyList()[ CD ]
Line_15 $$ for (long roleId : rolesIds) -->Line_16 $$ roles.add(roleLocalService.getRole(roleId))[ FD ]
Line_14 $$ List<Role> roles = new ArrayList(rolesIds.size())-->Line_16 $$ roles.add(roleLocalService.getRole(roleId))[ FD ]
Line_8 $$ Set<Long> rolesIds = new HashSet()-->Line_14 $$ List<Role> roles = new ArrayList(rolesIds.size())[ FD ]
Line_8 $$ Set<Long> rolesIds = new HashSet()-->Line_11 $$ rolesIds.add(resourcePermission.getRoleId())[ FD ]
Line_2 $$ public List<Role> getRoles(long companyId, String name, int scope, String primKey, String actionId) throws PortalException -->Line_7 $$ ResourceAction resourceAction = resourceActionLocalService.getResourceAction(name, actionId)[ FD ]
Line_2 $$ public List<Role> getRoles(long companyId, String name, int scope, String primKey, String actionId) throws PortalException -->Line_8 $$ Set<Long> rolesIds = new HashSet()[ CD ]
Line_10 $$ if (resourcePermission.hasAction(resourceAction)) -->Line_11 $$ rolesIds.add(resourcePermission.getRoleId())[ CD ]
Line_2 $$ public List<Role> getRoles(long companyId, String name, int scope, String primKey, String actionId) throws PortalException -->Line_3 $$ List<ResourcePermission> resourcePermissions = resourcePermissionPersistence.findByC_N_S_P(companyId, name, scope, primKey)[ FD ]
