Line_5 $$ MockClock clock = new MockClock()-->Line_6 $$ scheduler.setClock(clock)[ FD ]
Line_20 $$ ResourceRequest rackLocalRequest = createResourceRequest(GB, 1, node.getRackName(), priority.getPriority(), 1, true)-->Line_23 $$ ask.add(rackLocalRequest)[ FD ]
Line_36 $$ RMContainer rmContainer = app.getRMContainer(containerId1)-->Line_43 $$ List<ResourceRequest> requests = rmContainer.getResourceRequests()[ FD ]
Line_12 $$ int GB = 1024-->Line_21 $$ ResourceRequest offRackRequest = createResourceRequest(GB, 1, ResourceRequest.ANY, priority.getPriority(), 1, true)[ FD ]
Line_10 $$ Priority priority = Priority.newInstance(20)-->Line_20 $$ ResourceRequest rackLocalRequest = createResourceRequest(GB, 1, node.getRackName(), priority.getPriority(), 1, true)[ FD ]
Line_15 $$ NodeAddedSchedulerEvent nodeEvent = new NodeAddedSchedulerEvent(node)-->Line_16 $$ scheduler.handle(nodeEvent)[ FD ]
Line_12 $$ int GB = 1024-->Line_20 $$ ResourceRequest rackLocalRequest = createResourceRequest(GB, 1, node.getRackName(), priority.getPriority(), 1, true)[ FD ]
Line_12 $$ int GB = 1024-->Line_19 $$ ResourceRequest nodeLocalRequest = createResourceRequest(GB, 1, host, priority.getPriority(), 1, true)[ FD ]
Line_19 $$ ResourceRequest nodeLocalRequest = createResourceRequest(GB, 1, host, priority.getPriority(), 1, true)-->Line_22 $$ ask.add(nodeLocalRequest)[ FD ]
Line_32 $$ FSAppAttempt app = scheduler.getSchedulerApp(appAttemptId)-->Line_47 $$ Assert.assertEquals(1, app.getResourceRequest(priority, request.getResourceName()).getNumContainers())[ FD ]
Line_46 $$ for (ResourceRequest request : requests) -->Line_47 $$ Assert.assertEquals(1, app.getResourceRequest(priority, request.getResourceName()).getNumContainers())[ FD ]
Line_32 $$ FSAppAttempt app = scheduler.getSchedulerApp(appAttemptId)-->Line_36 $$ RMContainer rmContainer = app.getRMContainer(containerId1)[ FD ]
Line_10 $$ Priority priority = Priority.newInstance(20)-->Line_47 $$ Assert.assertEquals(1, app.getResourceRequest(priority, request.getResourceName()).getNumContainers())[ FD ]
Line_10 $$ Priority priority = Priority.newInstance(20)-->Line_19 $$ ResourceRequest nodeLocalRequest = createResourceRequest(GB, 1, host, priority.getPriority(), 1, true)[ FD ]
Line_21 $$ ResourceRequest offRackRequest = createResourceRequest(GB, 1, ResourceRequest.ANY, priority.getPriority(), 1, true)-->Line_24 $$ ask.add(offRackRequest)[ FD ]
Line_11 $$ String host = "127.0.0.1"-->Line_19 $$ ResourceRequest nodeLocalRequest = createResourceRequest(GB, 1, host, priority.getPriority(), 1, true)[ FD ]
Line_10 $$ Priority priority = Priority.newInstance(20)-->Line_21 $$ ResourceRequest offRackRequest = createResourceRequest(GB, 1, ResourceRequest.ANY, priority.getPriority(), 1, true)[ FD ]
Line_35 $$ ContainerId containerId1 = ContainerId.newInstance(appAttemptId, 1)-->Line_36 $$ RMContainer rmContainer = app.getRMContainer(containerId1)[ FD ]
