Line_27 $$ if (allowAccess) -->Line_37 $$ List<ContainerReport> listContainers = new ArrayList<ContainerReport>()[ CD ]
Line_37 $$ List<ContainerReport> listContainers = new ArrayList<ContainerReport>()-->Line_39 $$ listContainers.add(rmContainer.createContainerReport())[ FD ]
Line_28 $$ RMAppAttempt appAttempt = application.getAppAttempts().get(appAttemptId)-->Line_29 $$ if (appAttempt == null) [ FD ]
Line_26 $$ GetContainersResponse response = null-->Line_41 $$ response = GetContainersResponse.newInstance(listContainers)[ FD ]
Line_19 $$ RMApp application = this.rmContext.getRMApps().get(appId)-->Line_28 $$ RMAppAttempt appAttempt = application.getAppAttempts().get(appAttemptId)[ FD ]
Line_11 $$ ApplicationId appId = appAttemptId.getApplicationId()-->Line_19 $$ RMApp application = this.rmContext.getRMApps().get(appId)[ FD ]
Line_32 $$ Collection<RMContainer> rmContainers = Collections.emptyList()-->Line_35 $$ rmContainers = schedulerAppReport.getLiveContainers()[ FD ]
Line_12 $$ UserGroupInformation callerUGI-->Line_25 $$ boolean allowAccess = checkAccess(callerUGI, application.getUser(), ApplicationAccessType.VIEW_APP, application)[ FD ]
Line_10 $$ ApplicationAttemptId appAttemptId = request.getApplicationAttemptId()-->Line_11 $$ ApplicationId appId = appAttemptId.getApplicationId()[ FD ]
Line_27 $$ if (allowAccess) -->Line_29 $$ if (appAttempt == null) [ CD ]
Line_19 $$ RMApp application = this.rmContext.getRMApps().get(appId)-->Line_20 $$ if (application == null) [ FD ]
Line_34 $$ if (schedulerAppReport != null) -->Line_35 $$ rmContainers = schedulerAppReport.getLiveContainers()[ CD ]
Line_14 $$ callerUGI = UserGroupInformation.getCurrentUser()-->Line_43 $$ throw new YarnException("User " + callerUGI.getShortUserName() + " does not have privilage to see this aplication " + appId)[ FD ]
Line_12 $$ UserGroupInformation callerUGI-->Line_43 $$ throw new YarnException("User " + callerUGI.getShortUserName() + " does not have privilage to see this aplication " + appId)[ FD ]
Line_38 $$ for (RMContainer rmContainer : rmContainers) -->Line_39 $$ listContainers.add(rmContainer.createContainerReport())[ FD ]
Line_33 $$ SchedulerAppReport schedulerAppReport = this.rmContext.getScheduler().getSchedulerAppInfo(appAttemptId)-->Line_35 $$ rmContainers = schedulerAppReport.getLiveContainers()[ FD ]
Line_27 $$ if (allowAccess) -->Line_32 $$ Collection<RMContainer> rmContainers = Collections.emptyList()[ CD ]
Line_19 $$ RMApp application = this.rmContext.getRMApps().get(appId)-->Line_25 $$ boolean allowAccess = checkAccess(callerUGI, application.getUser(), ApplicationAccessType.VIEW_APP, application)[ FD ]
Line_14 $$ callerUGI = UserGroupInformation.getCurrentUser()-->Line_25 $$ boolean allowAccess = checkAccess(callerUGI, application.getUser(), ApplicationAccessType.VIEW_APP, application)[ FD ]
Line_27 $$ if (allowAccess) -->Line_34 $$ if (schedulerAppReport != null) [ CD ]
Line_27 $$ if (allowAccess) -->Line_28 $$ RMAppAttempt appAttempt = application.getAppAttempts().get(appAttemptId)[ CD ]
Line_27 $$ if (allowAccess) -->Line_33 $$ SchedulerAppReport schedulerAppReport = this.rmContext.getScheduler().getSchedulerAppInfo(appAttemptId)[ CD ]
Line_33 $$ SchedulerAppReport schedulerAppReport = this.rmContext.getScheduler().getSchedulerAppInfo(appAttemptId)-->Line_34 $$ if (schedulerAppReport != null) [ FD ]
Line_37 $$ List<ContainerReport> listContainers = new ArrayList<ContainerReport>()-->Line_41 $$ response = GetContainersResponse.newInstance(listContainers)[ FD ]
Line_27 $$ if (allowAccess) -->Line_41 $$ response = GetContainersResponse.newInstance(listContainers)[ CD ]
Line_10 $$ ApplicationAttemptId appAttemptId = request.getApplicationAttemptId()-->Line_33 $$ SchedulerAppReport schedulerAppReport = this.rmContext.getScheduler().getSchedulerAppInfo(appAttemptId)[ FD ]
Line_10 $$ ApplicationAttemptId appAttemptId = request.getApplicationAttemptId()-->Line_28 $$ RMAppAttempt appAttempt = application.getAppAttempts().get(appAttemptId)[ FD ]
Line_12 $$ UserGroupInformation callerUGI-->Line_14 $$ callerUGI = UserGroupInformation.getCurrentUser()[ FD ]
