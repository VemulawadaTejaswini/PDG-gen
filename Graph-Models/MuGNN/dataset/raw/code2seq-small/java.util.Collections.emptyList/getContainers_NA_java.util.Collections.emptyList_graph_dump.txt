Line_3 $$ ApplicationAttemptId appAttemptId = request.getApplicationAttemptId()-->Line_4 $$ ApplicationId appId = appAttemptId.getApplicationId()[ FD ]
Line_2 $$ public GetContainersResponse getContainers(GetContainersRequest request) throws YarnException, IOException -->Line_12 $$ RMApp application = this.rmContext.getRMApps().get(appId)[ CD ]
Line_18 $$ if (allowAccess) -->Line_20 $$ if (appAttempt == null) [ CD ]
Line_24 $$ SchedulerAppReport schedulerAppReport = this.rmContext.getScheduler().getSchedulerAppInfo(appAttemptId)-->Line_26 $$ rmContainers = schedulerAppReport.getLiveContainers()[ FD ]
Line_12 $$ RMApp application = this.rmContext.getRMApps().get(appId)-->Line_16 $$ boolean allowAccess = checkAccess(callerUGI, application.getUser(), ApplicationAccessType.VIEW_APP, application)[ FD ]
Line_2 $$ public GetContainersResponse getContainers(GetContainersRequest request) throws YarnException, IOException -->Line_36 $$ return response[ CD ]
Line_2 $$ public GetContainersResponse getContainers(GetContainersRequest request) throws YarnException, IOException -->Line_16 $$ boolean allowAccess = checkAccess(callerUGI, application.getUser(), ApplicationAccessType.VIEW_APP, application)[ CD ]
Line_17 $$ GetContainersResponse response = null-->Line_32 $$ response = GetContainersResponse.newInstance(listContainers)[ FD ]
Line_2 $$ public GetContainersResponse getContainers(GetContainersRequest request) throws YarnException, IOException -->Line_18 $$ if (allowAccess) [ CD ]
Line_5 $$ UserGroupInformation callerUGI-->Line_7 $$ callerUGI = UserGroupInformation.getCurrentUser()[ FD ]
Line_3 $$ ApplicationAttemptId appAttemptId = request.getApplicationAttemptId()-->Line_19 $$ RMAppAttempt appAttempt = application.getAppAttempts().get(appAttemptId)[ FD ]
Line_24 $$ SchedulerAppReport schedulerAppReport = this.rmContext.getScheduler().getSchedulerAppInfo(appAttemptId)-->Line_25 $$ if (schedulerAppReport != null) [ FD ]
Line_2 $$ public GetContainersResponse getContainers(GetContainersRequest request) throws YarnException, IOException -->Line_13 $$ if (application == null) [ CD ]
Line_12 $$ RMApp application = this.rmContext.getRMApps().get(appId)-->Line_19 $$ RMAppAttempt appAttempt = application.getAppAttempts().get(appAttemptId)[ FD ]
Line_18 $$ if (allowAccess) -->Line_24 $$ SchedulerAppReport schedulerAppReport = this.rmContext.getScheduler().getSchedulerAppInfo(appAttemptId)[ CD ]
Line_23 $$ Collection<RMContainer> rmContainers = Collections.emptyList()-->Line_26 $$ rmContainers = schedulerAppReport.getLiveContainers()[ FD ]
Line_2 $$ public GetContainersResponse getContainers(GetContainersRequest request) throws YarnException, IOException -->Line_5 $$ UserGroupInformation callerUGI[ CD ]
Line_25 $$ if (schedulerAppReport != null) -->Line_26 $$ rmContainers = schedulerAppReport.getLiveContainers()[ CD ]
Line_28 $$ List<ContainerReport> listContainers = new ArrayList<ContainerReport>()-->Line_32 $$ response = GetContainersResponse.newInstance(listContainers)[ FD ]
Line_28 $$ List<ContainerReport> listContainers = new ArrayList<ContainerReport>()-->Line_30 $$ listContainers.add(rmContainer.createContainerReport())[ FD ]
Line_12 $$ RMApp application = this.rmContext.getRMApps().get(appId)-->Line_13 $$ if (application == null) [ FD ]
Line_2 $$ public GetContainersResponse getContainers(GetContainersRequest request) throws YarnException, IOException -->Line_3 $$ ApplicationAttemptId appAttemptId = request.getApplicationAttemptId()[ FD ]
Line_7 $$ callerUGI = UserGroupInformation.getCurrentUser()-->Line_34 $$ throw new YarnException("User " + callerUGI.getShortUserName() + " does not have privilage to see this aplication " + appId)[ FD ]
Line_18 $$ if (allowAccess) -->Line_23 $$ Collection<RMContainer> rmContainers = Collections.emptyList()[ CD ]
Line_18 $$ if (allowAccess) -->Line_32 $$ response = GetContainersResponse.newInstance(listContainers)[ CD ]
Line_4 $$ ApplicationId appId = appAttemptId.getApplicationId()-->Line_12 $$ RMApp application = this.rmContext.getRMApps().get(appId)[ FD ]
Line_2 $$ public GetContainersResponse getContainers(GetContainersRequest request) throws YarnException, IOException -->Line_17 $$ GetContainersResponse response = null[ CD ]
Line_3 $$ ApplicationAttemptId appAttemptId = request.getApplicationAttemptId()-->Line_24 $$ SchedulerAppReport schedulerAppReport = this.rmContext.getScheduler().getSchedulerAppInfo(appAttemptId)[ FD ]
Line_7 $$ callerUGI = UserGroupInformation.getCurrentUser()-->Line_16 $$ boolean allowAccess = checkAccess(callerUGI, application.getUser(), ApplicationAccessType.VIEW_APP, application)[ FD ]
Line_2 $$ public GetContainersResponse getContainers(GetContainersRequest request) throws YarnException, IOException -->Line_3 $$ ApplicationAttemptId appAttemptId = request.getApplicationAttemptId()[ CD ]
Line_18 $$ if (allowAccess) -->Line_25 $$ if (schedulerAppReport != null) [ CD ]
Line_5 $$ UserGroupInformation callerUGI-->Line_16 $$ boolean allowAccess = checkAccess(callerUGI, application.getUser(), ApplicationAccessType.VIEW_APP, application)[ FD ]
Line_18 $$ if (allowAccess) -->Line_19 $$ RMAppAttempt appAttempt = application.getAppAttempts().get(appAttemptId)[ CD ]
Line_29 $$ for (RMContainer rmContainer : rmContainers) -->Line_30 $$ listContainers.add(rmContainer.createContainerReport())[ FD ]
Line_18 $$ if (allowAccess) -->Line_28 $$ List<ContainerReport> listContainers = new ArrayList<ContainerReport>()[ CD ]
Line_5 $$ UserGroupInformation callerUGI-->Line_34 $$ throw new YarnException("User " + callerUGI.getShortUserName() + " does not have privilage to see this aplication " + appId)[ FD ]
Line_19 $$ RMAppAttempt appAttempt = application.getAppAttempts().get(appAttemptId)-->Line_20 $$ if (appAttempt == null) [ FD ]
Line_2 $$ public GetContainersResponse getContainers(GetContainersRequest request) throws YarnException, IOException -->Line_4 $$ ApplicationId appId = appAttemptId.getApplicationId()[ CD ]
