Line_2 $$ public void testInitializiationIsConsistent() -->Line_3 $$ long clusterSeed = randomLong()[ CD ]
Line_2 $$ public void testInitializiationIsConsistent() -->Line_13 $$ InternalTestCluster cluster1 = new InternalTestCluster("local", clusterSeed, baseDir, minNumDataNodes, maxNumDataNodes, clusterName, nodeConfigurationSource, numClientNodes, enableHttpPipelining, nodePrefix, Collections.emptyList())[ CD ]
Line_2 $$ public void testInitializiationIsConsistent() -->Line_8 $$ int numClientNodes = randomIntBetween(0, 10)[ CD ]
Line_2 $$ public void testInitializiationIsConsistent() -->Line_11 $$ Path baseDir = createTempDir()[ CD ]
Line_2 $$ public void testInitializiationIsConsistent() -->Line_7 $$ NodeConfigurationSource nodeConfigurationSource = NodeConfigurationSource.EMPTY[ CD ]
Line_4 $$ int minNumDataNodes = randomIntBetween(0, 9)-->Line_5 $$ int maxNumDataNodes = randomIntBetween(minNumDataNodes, 10)[ FD ]
Line_2 $$ public void testInitializiationIsConsistent() -->Line_5 $$ int maxNumDataNodes = randomIntBetween(minNumDataNodes, 10)[ CD ]
Line_2 $$ public void testInitializiationIsConsistent() -->Line_10 $$ String nodePrefix = randomRealisticUnicodeOfCodepointLengthBetween(1, 10)[ CD ]
Line_2 $$ public void testInitializiationIsConsistent() -->Line_4 $$ int minNumDataNodes = randomIntBetween(0, 9)[ CD ]
Line_2 $$ public void testInitializiationIsConsistent() -->Line_9 $$ boolean enableHttpPipelining = randomBoolean()[ CD ]
Line_2 $$ public void testInitializiationIsConsistent() -->Line_12 $$ InternalTestCluster cluster0 = new InternalTestCluster("local", clusterSeed, baseDir, minNumDataNodes, maxNumDataNodes, clusterName, nodeConfigurationSource, numClientNodes, enableHttpPipelining, nodePrefix, Collections.emptyList())[ CD ]
Line_2 $$ public void testInitializiationIsConsistent() -->Line_6 $$ String clusterName = randomRealisticUnicodeOfCodepointLengthBetween(1, 10)[ CD ]
