Line_2 $$ public void updateProblems(@Nullable ProjectStructureProblemsHolderImpl holder) -->Line_3 $$ myErrorPanel.clearError()[ CD ]
Line_13 $$ final ArtifactProblemDescription artifactProblem = (ArtifactProblemDescription) description-->Line_17 $$ showProblemInTree(artifactProblem)[ FD ]
Line_2 $$ public void updateProblems(@Nullable ProjectStructureProblemsHolderImpl holder) -->Line_6 $$ if (holder != null) [ CD ]
Line_9 $$ for (ProjectStructureProblemDescription description : problemDescriptions) -->Line_12 $$ if (description instanceof ArtifactProblemDescription) [ FD ]
Line_14 $$ quickFixes = artifactProblem.getFixes()-->Line_20 $$ myErrorPanel.showError(message, quickFixes)[ FD ]
Line_2 $$ public void updateProblems(@Nullable ProjectStructureProblemsHolderImpl holder) -->Line_24 $$ myArtifactEditor.getLayoutTreeComponent().updateTreeNodesPresentation()[ CD ]
Line_11 $$ List<? extends ConfigurationErrorQuickFix> quickFixes = Collections.emptyList()-->Line_14 $$ quickFixes = artifactProblem.getFixes()[ FD ]
Line_6 $$ if (holder != null) -->Line_8 $$ if (problemDescriptions != null) [ CD ]
Line_15 $$ if (artifactProblem.getPathToPlace() != null) -->Line_16 $$ myProblems.add(artifactProblem)[ CD ]
Line_12 $$ if (description instanceof ArtifactProblemDescription) -->Line_13 $$ final ArtifactProblemDescription artifactProblem = (ArtifactProblemDescription) description[ CD ]
Line_12 $$ if (description instanceof ArtifactProblemDescription) -->Line_14 $$ quickFixes = artifactProblem.getFixes()[ CD ]
Line_2 $$ public void updateProblems(@Nullable ProjectStructureProblemsHolderImpl holder) -->Line_7 $$ final List<ProjectStructureProblemDescription> problemDescriptions = holder.getProblemDescriptions()[ FD ]
Line_2 $$ public void updateProblems(@Nullable ProjectStructureProblemsHolderImpl holder) -->Line_5 $$ myProblems.clear()[ CD ]
Line_13 $$ final ArtifactProblemDescription artifactProblem = (ArtifactProblemDescription) description-->Line_16 $$ myProblems.add(artifactProblem)[ FD ]
Line_6 $$ if (holder != null) -->Line_7 $$ final List<ProjectStructureProblemDescription> problemDescriptions = holder.getProblemDescriptions()[ CD ]
Line_2 $$ public void updateProblems(@Nullable ProjectStructureProblemsHolderImpl holder) -->Line_6 $$ if (holder != null) [ FD ]
Line_2 $$ public void updateProblems(@Nullable ProjectStructureProblemsHolderImpl holder) -->Line_4 $$ myProblemsForNodes.clear()[ CD ]
Line_13 $$ final ArtifactProblemDescription artifactProblem = (ArtifactProblemDescription) description-->Line_14 $$ quickFixes = artifactProblem.getFixes()[ FD ]
Line_13 $$ final ArtifactProblemDescription artifactProblem = (ArtifactProblemDescription) description-->Line_15 $$ if (artifactProblem.getPathToPlace() != null) [ FD ]
Line_9 $$ for (ProjectStructureProblemDescription description : problemDescriptions) -->Line_10 $$ final String message = description.getMessage(false)[ FD ]
Line_7 $$ final List<ProjectStructureProblemDescription> problemDescriptions = holder.getProblemDescriptions()-->Line_8 $$ if (problemDescriptions != null) [ FD ]
Line_12 $$ if (description instanceof ArtifactProblemDescription) -->Line_15 $$ if (artifactProblem.getPathToPlace() != null) [ CD ]
Line_11 $$ List<? extends ConfigurationErrorQuickFix> quickFixes = Collections.emptyList()-->Line_20 $$ myErrorPanel.showError(message, quickFixes)[ FD ]
Line_15 $$ if (artifactProblem.getPathToPlace() != null) -->Line_17 $$ showProblemInTree(artifactProblem)[ CD ]
Line_10 $$ final String message = description.getMessage(false)-->Line_20 $$ myErrorPanel.showError(message, quickFixes)[ FD ]
