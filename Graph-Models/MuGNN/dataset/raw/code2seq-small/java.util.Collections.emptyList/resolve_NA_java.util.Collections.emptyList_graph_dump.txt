Line_54 $$ expression = expression.substring(1)-->Line_25 $$ result.add(expression)[ FD ]
Line_33 $$ result = new HashSet()-->Line_71 $$ if (result == null) [ FD ]
Line_62 $$ if (result != null) -->Line_63 $$ if (add) [ CD ]
Line_102 $$ matches = metaData.getAliasAndIndexLookup().entrySet().stream().filter( e -> Regex.simpleMatch(pattern, e.getKey())).collect(Collectors.toMap(Map.Entry::<>getKey, Map.Entry::<>getValue))-->Line_118 $$ if (matches.isEmpty() && options.allowNoIndices() == false) [ FD ]
Line_4 $$ IndicesOptions options = context.getOptions()-->Line_127 $$ if (result.isEmpty() && !options.allowNoIndices()) [ FD ]
Line_98 $$ matches = metaData.getAliasAndIndexLookup().subMap(fromPrefix, toPrefix)-->Line_102 $$ matches = metaData.getAliasAndIndexLookup().entrySet().stream().filter( e -> Regex.simpleMatch(pattern, e.getKey())).collect(Collectors.toMap(Map.Entry::<>getKey, Map.Entry::<>getValue))[ FD ]
Line_94 $$ String fromPrefix = expression.substring(0, expression.length() - 1)-->Line_95 $$ char[] toPrefixCharArr = fromPrefix.toCharArray()[ FD ]
Line_40 $$ String[] concreteIndices-->Line_42 $$ concreteIndices = metaData.concreteAllIndices()[ FD ]
Line_54 $$ expression = expression.substring(1)-->Line_88 $$ if (Regex.isMatchAllPattern(expression)) [ FD ]
Line_91 $$ if (expression.indexOf("*") == expression.length() - 1) -->Line_94 $$ String fromPrefix = expression.substring(0, expression.length() - 1)[ CD ]
Line_21 $$ for (int i = 0; i < expressions.size(); i++) -->Line_118 $$ if (matches.isEmpty() && options.allowNoIndices() == false) [ CD ]
Line_51 $$ result = new HashSet(Arrays.asList(concreteIndices))-->Line_25 $$ result.add(expression)[ FD ]
Line_22 $$ String expression = expressions.get(i)-->Line_25 $$ result.add(expression)[ FD ]
Line_5 $$ MetaData metaData = context.getState().metaData()-->Line_15 $$ return Arrays.asList(metaData.concreteAllClosedIndices())[ FD ]
Line_42 $$ concreteIndices = metaData.concreteAllIndices()-->Line_49 $$ concreteIndices = Strings.EMPTY_ARRAY[ FD ]
Line_58 $$ IndexNotFoundException infe = new IndexNotFoundException(expression)-->Line_129 $$ infe.setResources("index_or_alias", expressions.toArray(new String[0]))[ FD ]
Line_54 $$ expression = expression.substring(1)-->Line_66 $$ result.remove(expression)[ FD ]
Line_4 $$ IndicesOptions options = context.getOptions()-->Line_10 $$ if (options.expandWildcardsOpen() && options.expandWildcardsClosed()) [ FD ]
Line_36 $$ expression = expression.substring(1)-->Line_30 $$ if (expression.charAt(0) == '+') [ FD ]
Line_41 $$ if (options.expandWildcardsOpen() && options.expandWildcardsClosed()) -->Line_42 $$ concreteIndices = metaData.concreteAllIndices()[ CD ]
Line_76 $$ final IndexMetaData.State excludeState-->Line_82 $$ excludeState = IndexMetaData.State.OPEN[ FD ]
Line_79 $$ if (options.expandWildcardsOpen() && options.expandWildcardsClosed() == false) -->Line_80 $$ excludeState = IndexMetaData.State.CLOSE[ CD ]
Line_23 $$ if (metaData.getAliasAndIndexLookup().containsKey(expression)) -->Line_24 $$ if (result != null) [ CD ]
Line_78 $$ excludeState = null-->Line_82 $$ excludeState = IndexMetaData.State.OPEN[ FD ]
Line_124 $$ if (result == null) -->Line_125 $$ return expressions[ CD ]
Line_12 $$ if (options.expandWildcardsOpen()) -->Line_13 $$ return Arrays.asList(metaData.concreteAllOpenIndices())[ CD ]
Line_20 $$ Set<String> result = null-->Line_24 $$ if (result != null) [ FD ]
Line_44 $$ concreteIndices = metaData.concreteAllOpenIndices()-->Line_46 $$ concreteIndices = metaData.concreteAllClosedIndices()[ FD ]
Line_22 $$ String expression = expressions.get(i)-->Line_56 $$ if (!Regex.isSimpleMatchPattern(expression)) [ FD ]
Line_4 $$ IndicesOptions options = context.getOptions()-->Line_79 $$ if (options.expandWildcardsOpen() && options.expandWildcardsClosed() == false) [ FD ]
Line_79 $$ if (options.expandWildcardsOpen() && options.expandWildcardsClosed() == false) -->Line_81 $$ if (options.expandWildcardsClosed() && options.expandWildcardsOpen() == false) [ CD ]
Line_40 $$ String[] concreteIndices-->Line_51 $$ result = new HashSet(Arrays.asList(concreteIndices))[ FD ]
Line_4 $$ IndicesOptions options = context.getOptions()-->Line_81 $$ if (options.expandWildcardsClosed() && options.expandWildcardsOpen() == false) [ FD ]
Line_91 $$ if (expression.indexOf("*") == expression.length() - 1) -->Line_97 $$ String toPrefix = new String(toPrefixCharArr)[ CD ]
Line_20 $$ Set<String> result = null-->Line_74 $$ result.addAll(expressions.subList(0, i))[ FD ]
Line_94 $$ String fromPrefix = expression.substring(0, expression.length() - 1)-->Line_98 $$ matches = metaData.getAliasAndIndexLookup().subMap(fromPrefix, toPrefix)[ FD ]
Line_57 $$ if (!options.ignoreUnavailable() && !metaData.getAliasAndIndexLookup().containsKey(expression)) -->Line_59 $$ infe.setResources("index_or_alias", expression)[ CD ]
Line_20 $$ Set<String> result = null-->Line_51 $$ result = new HashSet(Arrays.asList(concreteIndices))[ FD ]
Line_36 $$ expression = expression.substring(1)-->Line_57 $$ if (!options.ignoreUnavailable() && !metaData.getAliasAndIndexLookup().containsKey(expression)) [ FD ]
Line_104 $$ for (Map.Entry<String, AliasOrIndex> entry : matches.entrySet()) -->Line_113 $$ result.add(entry.getKey())[ FD ]
Line_118 $$ if (matches.isEmpty() && options.allowNoIndices() == false) -->Line_120 $$ infe.setResources("index_or_alias", expression)[ CD ]
Line_91 $$ if (expression.indexOf("*") == expression.length() - 1) -->Line_98 $$ matches = metaData.getAliasAndIndexLookup().subMap(fromPrefix, toPrefix)[ CD ]
Line_40 $$ String[] concreteIndices-->Line_46 $$ concreteIndices = metaData.concreteAllClosedIndices()[ FD ]
Line_33 $$ result = new HashSet()-->Line_74 $$ result.addAll(expressions.subList(0, i))[ FD ]
Line_5 $$ MetaData metaData = context.getState().metaData()-->Line_13 $$ return Arrays.asList(metaData.concreteAllOpenIndices())[ FD ]
Line_12 $$ if (options.expandWildcardsOpen()) -->Line_14 $$ if (options.expandWildcardsClosed()) [ CD ]
Line_5 $$ MetaData metaData = context.getState().metaData()-->Line_11 $$ return Arrays.asList(metaData.concreteAllIndices())[ FD ]
Line_76 $$ final IndexMetaData.State excludeState-->Line_78 $$ excludeState = null[ FD ]
Line_80 $$ excludeState = IndexMetaData.State.CLOSE-->Line_82 $$ excludeState = IndexMetaData.State.OPEN[ FD ]
Line_127 $$ if (result.isEmpty() && !options.allowNoIndices()) -->Line_128 $$ IndexNotFoundException infe = new IndexNotFoundException((String) null)[ CD ]
Line_51 $$ result = new HashSet(Arrays.asList(concreteIndices))-->Line_71 $$ if (result == null) [ FD ]
Line_21 $$ for (int i = 0; i < expressions.size(); i++) -->Line_71 $$ if (result == null) [ CD ]
Line_21 $$ for (int i = 0; i < expressions.size(); i++) -->Line_87 $$ final Map<String, AliasOrIndex> matches[ CD ]
Line_36 $$ expression = expression.substring(1)-->Line_25 $$ result.add(expression)[ FD ]
Line_36 $$ expression = expression.substring(1)-->Line_94 $$ String fromPrefix = expression.substring(0, expression.length() - 1)[ FD ]
Line_33 $$ result = new HashSet()-->Line_62 $$ if (result != null) [ FD ]
Line_21 $$ for (int i = 0; i < expressions.size(); i++) -->Line_88 $$ if (Regex.isMatchAllPattern(expression)) [ CD ]
Line_77 $$ if (options.expandWildcardsOpen() && options.expandWildcardsClosed()) -->Line_78 $$ excludeState = null[ CD ]
Line_97 $$ String toPrefix = new String(toPrefixCharArr)-->Line_98 $$ matches = metaData.getAliasAndIndexLookup().subMap(fromPrefix, toPrefix)[ FD ]
Line_5 $$ MetaData metaData = context.getState().metaData()-->Line_23 $$ if (metaData.getAliasAndIndexLookup().containsKey(expression)) [ FD ]
Line_51 $$ result = new HashSet(Arrays.asList(concreteIndices))-->Line_115 $$ result.remove(entry.getKey())[ FD ]
Line_21 $$ for (int i = 0; i < expressions.size(); i++) -->Line_76 $$ final IndexMetaData.State excludeState[ CD ]
Line_43 $$ if (options.expandWildcardsOpen()) -->Line_45 $$ if (options.expandWildcardsClosed()) [ CD ]
Line_4 $$ IndicesOptions options = context.getOptions()-->Line_57 $$ if (!options.ignoreUnavailable() && !metaData.getAliasAndIndexLookup().containsKey(expression)) [ FD ]
Line_30 $$ if (expression.charAt(0) == '+') -->Line_36 $$ expression = expression.substring(1)[ CD ]
Line_5 $$ MetaData metaData = context.getState().metaData()-->Line_57 $$ if (!options.ignoreUnavailable() && !metaData.getAliasAndIndexLookup().containsKey(expression)) [ FD ]
Line_49 $$ concreteIndices = Strings.EMPTY_ARRAY-->Line_51 $$ result = new HashSet(Arrays.asList(concreteIndices))[ FD ]
Line_51 $$ result = new HashSet(Arrays.asList(concreteIndices))-->Line_64 $$ result.add(expression)[ FD ]
Line_54 $$ expression = expression.substring(1)-->Line_30 $$ if (expression.charAt(0) == '+') [ FD ]
Line_112 $$ if (add) -->Line_115 $$ result.remove(entry.getKey())[ CD ]
Line_54 $$ expression = expression.substring(1)-->Line_64 $$ result.add(expression)[ FD ]
Line_22 $$ String expression = expressions.get(i)-->Line_94 $$ String fromPrefix = expression.substring(0, expression.length() - 1)[ FD ]
Line_87 $$ final Map<String, AliasOrIndex> matches-->Line_98 $$ matches = metaData.getAliasAndIndexLookup().subMap(fromPrefix, toPrefix)[ FD ]
Line_76 $$ final IndexMetaData.State excludeState-->Line_80 $$ excludeState = IndexMetaData.State.CLOSE[ FD ]
Line_22 $$ String expression = expressions.get(i)-->Line_37 $$ if (expression.charAt(0) == '-') [ FD ]
Line_43 $$ if (options.expandWildcardsOpen()) -->Line_44 $$ concreteIndices = metaData.concreteAllOpenIndices()[ CD ]
Line_106 $$ if (aliasOrIndex.isAlias() == false) -->Line_108 $$ if (excludeState != null && index.getIndex().getState() == excludeState) [ CD ]
Line_51 $$ result = new HashSet(Arrays.asList(concreteIndices))-->Line_74 $$ result.addAll(expressions.subList(0, i))[ FD ]
Line_88 $$ if (Regex.isMatchAllPattern(expression)) -->Line_91 $$ if (expression.indexOf("*") == expression.length() - 1) [ CD ]
Line_21 $$ for (int i = 0; i < expressions.size(); i++) -->Line_22 $$ String expression = expressions.get(i)[ FD ]
Line_78 $$ excludeState = null-->Line_85 $$ excludeState = null[ FD ]
Line_104 $$ for (Map.Entry<String, AliasOrIndex> entry : matches.entrySet()) -->Line_115 $$ result.remove(entry.getKey())[ FD ]
Line_21 $$ for (int i = 0; i < expressions.size(); i++) -->Line_22 $$ String expression = expressions.get(i)[ CD ]
Line_22 $$ String expression = expressions.get(i)-->Line_30 $$ if (expression.charAt(0) == '+') [ FD ]
Line_36 $$ expression = expression.substring(1)-->Line_120 $$ infe.setResources("index_or_alias", expression)[ FD ]
Line_105 $$ AliasOrIndex aliasOrIndex = entry.getValue()-->Line_106 $$ if (aliasOrIndex.isAlias() == false) [ FD ]
Line_4 $$ IndicesOptions options = context.getOptions()-->Line_118 $$ if (matches.isEmpty() && options.allowNoIndices() == false) [ FD ]
Line_35 $$ add = true-->Line_53 $$ add = false[ FD ]
Line_54 $$ expression = expression.substring(1)-->Line_94 $$ String fromPrefix = expression.substring(0, expression.length() - 1)[ FD ]
Line_40 $$ String[] concreteIndices-->Line_44 $$ concreteIndices = metaData.concreteAllOpenIndices()[ FD ]
Line_36 $$ expression = expression.substring(1)-->Line_91 $$ if (expression.indexOf("*") == expression.length() - 1) [ FD ]
Line_91 $$ if (expression.indexOf("*") == expression.length() - 1) -->Line_95 $$ char[] toPrefixCharArr = fromPrefix.toCharArray()[ CD ]
Line_22 $$ String expression = expressions.get(i)-->Line_120 $$ infe.setResources("index_or_alias", expression)[ FD ]
Line_22 $$ String expression = expressions.get(i)-->Line_59 $$ infe.setResources("index_or_alias", expression)[ FD ]
Line_102 $$ matches = metaData.getAliasAndIndexLookup().entrySet().stream().filter( e -> Regex.simpleMatch(pattern, e.getKey())).collect(Collectors.toMap(Map.Entry::<>getKey, Map.Entry::<>getValue))-->Line_104 $$ for (Map.Entry<String, AliasOrIndex> entry : matches.entrySet()) [ FD ]
Line_37 $$ if (expression.charAt(0) == '-') -->Line_53 $$ add = false[ CD ]
Line_51 $$ result = new HashSet(Arrays.asList(concreteIndices))-->Line_124 $$ if (result == null) [ FD ]
Line_98 $$ matches = metaData.getAliasAndIndexLookup().subMap(fromPrefix, toPrefix)-->Line_118 $$ if (matches.isEmpty() && options.allowNoIndices() == false) [ FD ]
Line_22 $$ String expression = expressions.get(i)-->Line_57 $$ if (!options.ignoreUnavailable() && !metaData.getAliasAndIndexLookup().containsKey(expression)) [ FD ]
Line_44 $$ concreteIndices = metaData.concreteAllOpenIndices()-->Line_51 $$ result = new HashSet(Arrays.asList(concreteIndices))[ FD ]
Line_29 $$ boolean add = true-->Line_53 $$ add = false[ FD ]
Line_33 $$ result = new HashSet()-->Line_113 $$ result.add(entry.getKey())[ FD ]
Line_58 $$ IndexNotFoundException infe = new IndexNotFoundException(expression)-->Line_120 $$ infe.setResources("index_or_alias", expression)[ FD ]
Line_30 $$ if (expression.charAt(0) == '+') -->Line_37 $$ if (expression.charAt(0) == '-') [ CD ]
Line_54 $$ expression = expression.substring(1)-->Line_23 $$ if (metaData.getAliasAndIndexLookup().containsKey(expression)) [ FD ]
Line_33 $$ result = new HashSet()-->Line_66 $$ result.remove(expression)[ FD ]
Line_10 $$ if (options.expandWildcardsOpen() && options.expandWildcardsClosed()) -->Line_12 $$ if (options.expandWildcardsOpen()) [ CD ]
Line_33 $$ result = new HashSet()-->Line_25 $$ result.add(expression)[ FD ]
Line_24 $$ if (result != null) -->Line_25 $$ result.add(expression)[ CD ]
Line_30 $$ if (expression.charAt(0) == '+') -->Line_35 $$ add = true[ CD ]
Line_14 $$ if (options.expandWildcardsClosed()) -->Line_17 $$ return Collections.emptyList()[ CD ]
Line_91 $$ if (expression.indexOf("*") == expression.length() - 1) -->Line_102 $$ matches = metaData.getAliasAndIndexLookup().entrySet().stream().filter( e -> Regex.simpleMatch(pattern, e.getKey())).collect(Collectors.toMap(Map.Entry::<>getKey, Map.Entry::<>getValue))[ CD ]
Line_4 $$ IndicesOptions options = context.getOptions()-->Line_14 $$ if (options.expandWildcardsClosed()) [ FD ]
Line_45 $$ if (options.expandWildcardsClosed()) -->Line_49 $$ concreteIndices = Strings.EMPTY_ARRAY[ CD ]
Line_36 $$ expression = expression.substring(1)-->Line_66 $$ result.remove(expression)[ FD ]
Line_81 $$ if (options.expandWildcardsClosed() && options.expandWildcardsOpen() == false) -->Line_85 $$ excludeState = null[ CD ]
Line_41 $$ if (options.expandWildcardsOpen() && options.expandWildcardsClosed()) -->Line_43 $$ if (options.expandWildcardsOpen()) [ CD ]
Line_4 $$ IndicesOptions options = context.getOptions()-->Line_77 $$ if (options.expandWildcardsOpen() && options.expandWildcardsClosed()) [ FD ]
Line_87 $$ final Map<String, AliasOrIndex> matches-->Line_102 $$ matches = metaData.getAliasAndIndexLookup().entrySet().stream().filter( e -> Regex.simpleMatch(pattern, e.getKey())).collect(Collectors.toMap(Map.Entry::<>getKey, Map.Entry::<>getValue))[ FD ]
Line_36 $$ expression = expression.substring(1)-->Line_54 $$ expression = expression.substring(1)[ FD ]
Line_112 $$ if (add) -->Line_113 $$ result.add(entry.getKey())[ CD ]
Line_51 $$ result = new HashSet(Arrays.asList(concreteIndices))-->Line_127 $$ if (result.isEmpty() && !options.allowNoIndices()) [ FD ]
Line_40 $$ String[] concreteIndices-->Line_49 $$ concreteIndices = Strings.EMPTY_ARRAY[ FD ]
Line_20 $$ Set<String> result = null-->Line_33 $$ result = new HashSet()[ FD ]
Line_22 $$ String expression = expressions.get(i)-->Line_66 $$ result.remove(expression)[ FD ]
Line_51 $$ result = new HashSet(Arrays.asList(concreteIndices))-->Line_24 $$ if (result != null) [ FD ]
Line_9 $$ if (expressions.isEmpty() || (expressions.size() == 1 && (MetaData.ALL.equals(expressions.get(0))) || Regex.isMatchAllPattern(expressions.get(0)))) -->Line_10 $$ if (options.expandWildcardsOpen() && options.expandWildcardsClosed()) [ CD ]
Line_54 $$ expression = expression.substring(1)-->Line_36 $$ expression = expression.substring(1)[ FD ]
Line_21 $$ for (int i = 0; i < expressions.size(); i++) -->Line_74 $$ result.addAll(expressions.subList(0, i))[ FD ]
Line_29 $$ boolean add = true-->Line_35 $$ add = true[ FD ]
Line_36 $$ expression = expression.substring(1)-->Line_23 $$ if (metaData.getAliasAndIndexLookup().containsKey(expression)) [ FD ]
Line_104 $$ for (Map.Entry<String, AliasOrIndex> entry : matches.entrySet()) -->Line_105 $$ AliasOrIndex aliasOrIndex = entry.getValue()[ FD ]
Line_36 $$ expression = expression.substring(1)-->Line_56 $$ if (!Regex.isSimpleMatchPattern(expression)) [ FD ]
Line_5 $$ MetaData metaData = context.getState().metaData()-->Line_42 $$ concreteIndices = metaData.concreteAllIndices()[ FD ]
Line_36 $$ expression = expression.substring(1)-->Line_88 $$ if (Regex.isMatchAllPattern(expression)) [ FD ]
Line_87 $$ final Map<String, AliasOrIndex> matches-->Line_118 $$ if (matches.isEmpty() && options.allowNoIndices() == false) [ FD ]
Line_21 $$ for (int i = 0; i < expressions.size(); i++) -->Line_30 $$ if (expression.charAt(0) == '+') [ CD ]
Line_107 $$ AliasOrIndex.Index index = (AliasOrIndex.Index) aliasOrIndex-->Line_108 $$ if (excludeState != null && index.getIndex().getState() == excludeState) [ FD ]
Line_51 $$ result = new HashSet(Arrays.asList(concreteIndices))-->Line_66 $$ result.remove(expression)[ FD ]
Line_56 $$ if (!Regex.isSimpleMatchPattern(expression)) -->Line_57 $$ if (!options.ignoreUnavailable() && !metaData.getAliasAndIndexLookup().containsKey(expression)) [ CD ]
Line_63 $$ if (add) -->Line_66 $$ result.remove(expression)[ CD ]
Line_5 $$ MetaData metaData = context.getState().metaData()-->Line_44 $$ concreteIndices = metaData.concreteAllOpenIndices()[ FD ]
Line_46 $$ concreteIndices = metaData.concreteAllClosedIndices()-->Line_49 $$ concreteIndices = Strings.EMPTY_ARRAY[ FD ]
Line_21 $$ for (int i = 0; i < expressions.size(); i++) -->Line_29 $$ boolean add = true[ CD ]
Line_76 $$ final IndexMetaData.State excludeState-->Line_85 $$ excludeState = null[ FD ]
Line_22 $$ String expression = expressions.get(i)-->Line_91 $$ if (expression.indexOf("*") == expression.length() - 1) [ FD ]
Line_33 $$ result = new HashSet()-->Line_127 $$ if (result.isEmpty() && !options.allowNoIndices()) [ FD ]
Line_4 $$ IndicesOptions options = context.getOptions()-->Line_45 $$ if (options.expandWildcardsClosed()) [ FD ]
Line_45 $$ if (options.expandWildcardsClosed()) -->Line_46 $$ concreteIndices = metaData.concreteAllClosedIndices()[ CD ]
Line_71 $$ if (result == null) -->Line_74 $$ result.addAll(expressions.subList(0, i))[ CD ]
Line_54 $$ expression = expression.substring(1)-->Line_91 $$ if (expression.indexOf("*") == expression.length() - 1) [ FD ]
Line_54 $$ expression = expression.substring(1)-->Line_59 $$ infe.setResources("index_or_alias", expression)[ FD ]
Line_54 $$ expression = expression.substring(1)-->Line_57 $$ if (!options.ignoreUnavailable() && !metaData.getAliasAndIndexLookup().containsKey(expression)) [ FD ]
Line_128 $$ IndexNotFoundException infe = new IndexNotFoundException((String) null)-->Line_129 $$ infe.setResources("index_or_alias", expressions.toArray(new String[0]))[ FD ]
Line_5 $$ MetaData metaData = context.getState().metaData()-->Line_46 $$ concreteIndices = metaData.concreteAllClosedIndices()[ FD ]
Line_6 $$ if (options.expandWildcardsClosed() == false && options.expandWildcardsOpen() == false) -->Line_7 $$ return expressions[ CD ]
Line_33 $$ result = new HashSet()-->Line_64 $$ result.add(expression)[ FD ]
Line_33 $$ result = new HashSet()-->Line_24 $$ if (result != null) [ FD ]
Line_36 $$ expression = expression.substring(1)-->Line_64 $$ result.add(expression)[ FD ]
Line_20 $$ Set<String> result = null-->Line_66 $$ result.remove(expression)[ FD ]
Line_4 $$ IndicesOptions options = context.getOptions()-->Line_12 $$ if (options.expandWildcardsOpen()) [ FD ]
Line_63 $$ if (add) -->Line_64 $$ result.add(expression)[ CD ]
Line_20 $$ Set<String> result = null-->Line_127 $$ if (result.isEmpty() && !options.allowNoIndices()) [ FD ]
Line_42 $$ concreteIndices = metaData.concreteAllIndices()-->Line_44 $$ concreteIndices = metaData.concreteAllOpenIndices()[ FD ]
Line_58 $$ IndexNotFoundException infe = new IndexNotFoundException(expression)-->Line_59 $$ infe.setResources("index_or_alias", expression)[ FD ]
Line_21 $$ for (int i = 0; i < expressions.size(); i++) -->Line_77 $$ if (options.expandWildcardsOpen() && options.expandWildcardsClosed()) [ CD ]
Line_78 $$ excludeState = null-->Line_80 $$ excludeState = IndexMetaData.State.CLOSE[ FD ]
Line_37 $$ if (expression.charAt(0) == '-') -->Line_54 $$ expression = expression.substring(1)[ CD ]
Line_20 $$ Set<String> result = null-->Line_64 $$ result.add(expression)[ FD ]
Line_4 $$ IndicesOptions options = context.getOptions()-->Line_43 $$ if (options.expandWildcardsOpen()) [ FD ]
Line_82 $$ excludeState = IndexMetaData.State.OPEN-->Line_85 $$ excludeState = null[ FD ]
Line_57 $$ if (!options.ignoreUnavailable() && !metaData.getAliasAndIndexLookup().containsKey(expression)) -->Line_58 $$ IndexNotFoundException infe = new IndexNotFoundException(expression)[ CD ]
Line_33 $$ result = new HashSet()-->Line_115 $$ result.remove(entry.getKey())[ FD ]
Line_10 $$ if (options.expandWildcardsOpen() && options.expandWildcardsClosed()) -->Line_11 $$ return Arrays.asList(metaData.concreteAllIndices())[ CD ]
Line_4 $$ IndicesOptions options = context.getOptions()-->Line_41 $$ if (options.expandWildcardsOpen() && options.expandWildcardsClosed()) [ FD ]
Line_20 $$ Set<String> result = null-->Line_113 $$ result.add(entry.getKey())[ FD ]
Line_22 $$ String expression = expressions.get(i)-->Line_23 $$ if (metaData.getAliasAndIndexLookup().containsKey(expression)) [ FD ]
Line_33 $$ result = new HashSet()-->Line_51 $$ result = new HashSet(Arrays.asList(concreteIndices))[ FD ]
Line_51 $$ result = new HashSet(Arrays.asList(concreteIndices))-->Line_113 $$ result.add(entry.getKey())[ FD ]
Line_46 $$ concreteIndices = metaData.concreteAllClosedIndices()-->Line_51 $$ result = new HashSet(Arrays.asList(concreteIndices))[ FD ]
Line_20 $$ Set<String> result = null-->Line_115 $$ result.remove(entry.getKey())[ FD ]
Line_22 $$ String expression = expressions.get(i)-->Line_36 $$ expression = expression.substring(1)[ FD ]
Line_51 $$ result = new HashSet(Arrays.asList(concreteIndices))-->Line_62 $$ if (result != null) [ FD ]
Line_87 $$ final Map<String, AliasOrIndex> matches-->Line_104 $$ for (Map.Entry<String, AliasOrIndex> entry : matches.entrySet()) [ FD ]
Line_98 $$ matches = metaData.getAliasAndIndexLookup().subMap(fromPrefix, toPrefix)-->Line_104 $$ for (Map.Entry<String, AliasOrIndex> entry : matches.entrySet()) [ FD ]
Line_22 $$ String expression = expressions.get(i)-->Line_88 $$ if (Regex.isMatchAllPattern(expression)) [ FD ]
Line_14 $$ if (options.expandWildcardsClosed()) -->Line_15 $$ return Arrays.asList(metaData.concreteAllClosedIndices())[ CD ]
Line_33 $$ result = new HashSet()-->Line_124 $$ if (result == null) [ FD ]
Line_42 $$ concreteIndices = metaData.concreteAllIndices()-->Line_51 $$ result = new HashSet(Arrays.asList(concreteIndices))[ FD ]
Line_127 $$ if (result.isEmpty() && !options.allowNoIndices()) -->Line_129 $$ infe.setResources("index_or_alias", expressions.toArray(new String[0]))[ CD ]
Line_22 $$ String expression = expressions.get(i)-->Line_54 $$ expression = expression.substring(1)[ FD ]
Line_22 $$ String expression = expressions.get(i)-->Line_64 $$ result.add(expression)[ FD ]
Line_20 $$ Set<String> result = null-->Line_62 $$ if (result != null) [ FD ]
Line_4 $$ IndicesOptions options = context.getOptions()-->Line_6 $$ if (options.expandWildcardsClosed() == false && options.expandWildcardsOpen() == false) [ FD ]
Line_36 $$ expression = expression.substring(1)-->Line_37 $$ if (expression.charAt(0) == '-') [ FD ]
Line_20 $$ Set<String> result = null-->Line_25 $$ result.add(expression)[ FD ]
Line_20 $$ Set<String> result = null-->Line_71 $$ if (result == null) [ FD ]
Line_80 $$ excludeState = IndexMetaData.State.CLOSE-->Line_85 $$ excludeState = null[ FD ]
Line_54 $$ expression = expression.substring(1)-->Line_120 $$ infe.setResources("index_or_alias", expression)[ FD ]
Line_106 $$ if (aliasOrIndex.isAlias() == false) -->Line_107 $$ AliasOrIndex.Index index = (AliasOrIndex.Index) aliasOrIndex[ CD ]
Line_44 $$ concreteIndices = metaData.concreteAllOpenIndices()-->Line_49 $$ concreteIndices = Strings.EMPTY_ARRAY[ FD ]
Line_56 $$ if (!Regex.isSimpleMatchPattern(expression)) -->Line_62 $$ if (result != null) [ CD ]
Line_91 $$ if (expression.indexOf("*") == expression.length() - 1) -->Line_96 $$ toPrefixCharArr[toPrefixCharArr.length - 1]++[ CD ]
Line_54 $$ expression = expression.substring(1)-->Line_37 $$ if (expression.charAt(0) == '-') [ FD ]
Line_21 $$ for (int i = 0; i < expressions.size(); i++) -->Line_56 $$ if (!Regex.isSimpleMatchPattern(expression)) [ CD ]
Line_77 $$ if (options.expandWildcardsOpen() && options.expandWildcardsClosed()) -->Line_79 $$ if (options.expandWildcardsOpen() && options.expandWildcardsClosed() == false) [ CD ]
Line_81 $$ if (options.expandWildcardsClosed() && options.expandWildcardsOpen() == false) -->Line_82 $$ excludeState = IndexMetaData.State.OPEN[ CD ]
Line_20 $$ Set<String> result = null-->Line_124 $$ if (result == null) [ FD ]
Line_5 $$ MetaData metaData = context.getState().metaData()-->Line_102 $$ matches = metaData.getAliasAndIndexLookup().entrySet().stream().filter( e -> Regex.simpleMatch(pattern, e.getKey())).collect(Collectors.toMap(Map.Entry::<>getKey, Map.Entry::<>getValue))[ FD ]
Line_21 $$ for (int i = 0; i < expressions.size(); i++) -->Line_23 $$ if (metaData.getAliasAndIndexLookup().containsKey(expression)) [ CD ]
Line_54 $$ expression = expression.substring(1)-->Line_56 $$ if (!Regex.isSimpleMatchPattern(expression)) [ FD ]
Line_5 $$ MetaData metaData = context.getState().metaData()-->Line_98 $$ matches = metaData.getAliasAndIndexLookup().subMap(fromPrefix, toPrefix)[ FD ]
Line_42 $$ concreteIndices = metaData.concreteAllIndices()-->Line_46 $$ concreteIndices = metaData.concreteAllClosedIndices()[ FD ]
Line_36 $$ expression = expression.substring(1)-->Line_59 $$ infe.setResources("index_or_alias", expression)[ FD ]
