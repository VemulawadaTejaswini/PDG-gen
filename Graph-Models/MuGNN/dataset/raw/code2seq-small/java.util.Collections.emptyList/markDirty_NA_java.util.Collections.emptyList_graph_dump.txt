Line_7 $$ for (VirtualFile file : list) -->Line_9 $$ file.getChildren()[ FD ]
Line_2 $$ public static List<VirtualFile> markDirty(boolean recursive, boolean reloadChildren, @NotNull VirtualFile... files) -->Line_4 $$ if (list.isEmpty()) [ CD ]
Line_8 $$ if (reloadChildren) -->Line_9 $$ file.getChildren()[ CD ]
Line_12 $$ if (recursive) -->Line_13 $$ ((NewVirtualFile) file).markDirtyRecursively()[ CD ]
Line_12 $$ if (recursive) -->Line_15 $$ ((NewVirtualFile) file).markDirty()[ CD ]
Line_2 $$ public static List<VirtualFile> markDirty(boolean recursive, boolean reloadChildren, @NotNull VirtualFile... files) -->Line_19 $$ return list[ CD ]
Line_2 $$ public static List<VirtualFile> markDirty(boolean recursive, boolean reloadChildren, @NotNull VirtualFile... files) -->Line_3 $$ List<VirtualFile> list = ContainerUtil.filter(Condition.NOT_NULL, files)[ FD ]
Line_11 $$ if (file instanceof NewVirtualFile) -->Line_12 $$ if (recursive) [ CD ]
Line_3 $$ List<VirtualFile> list = ContainerUtil.filter(Condition.NOT_NULL, files)-->Line_4 $$ if (list.isEmpty()) [ FD ]
Line_7 $$ for (VirtualFile file : list) -->Line_11 $$ if (file instanceof NewVirtualFile) [ FD ]
Line_4 $$ if (list.isEmpty()) -->Line_5 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public static List<VirtualFile> markDirty(boolean recursive, boolean reloadChildren, @NotNull VirtualFile... files) -->Line_3 $$ List<VirtualFile> list = ContainerUtil.filter(Condition.NOT_NULL, files)[ CD ]
