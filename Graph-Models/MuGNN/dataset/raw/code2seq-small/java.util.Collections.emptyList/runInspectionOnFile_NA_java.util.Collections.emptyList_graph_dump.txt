Line_13 $$ final List<ProblemDescriptor> descriptors = new ArrayList<ProblemDescriptor>()-->Line_28 $$ convertToProblemDescriptors(element, commonProblemDescriptors, descriptors)[ FD ]
Line_2 $$ public static List<ProblemDescriptor> runInspectionOnFile(@NotNull final PsiFile file, @NotNull InspectionToolWrapper toolWrapper, @NotNull final GlobalInspectionContext inspectionContext) -->Line_42 $$ CommonProblemDescriptor[] elemDescriptors = globalTool.checkElement(elem, scope, inspectionManager, inspectionContext)[ FD ]
Line_2 $$ public static List<ProblemDescriptor> runInspectionOnFile(@NotNull final PsiFile file, @NotNull InspectionToolWrapper toolWrapper, @NotNull final GlobalInspectionContext inspectionContext) -->Line_11 $$ if (toolWrapper instanceof GlobalInspectionToolWrapper) [ FD ]
Line_5 $$ RefManagerImpl refManager = (RefManagerImpl) inspectionContext.getRefManager()-->Line_6 $$ refManager.inspectionReadActionStarted()[ FD ]
Line_14 $$ if (globalTool instanceof GlobalSimpleInspectionTool) -->Line_17 $$ ProblemDescriptionsProcessor collectProcessor = new ProblemDescriptionsProcessor() [ CD ]
Line_2 $$ public static List<ProblemDescriptor> runInspectionOnFile(@NotNull final PsiFile file, @NotNull InspectionToolWrapper toolWrapper, @NotNull final GlobalInspectionContext inspectionContext) -->Line_34 $$ simpleTool.checkFile(file, inspectionManager, problemsHolder, inspectionContext, collectProcessor)[ FD ]
Line_14 $$ if (globalTool instanceof GlobalSimpleInspectionTool) -->Line_15 $$ GlobalSimpleInspectionTool simpleTool = (GlobalSimpleInspectionTool) globalTool[ CD ]
Line_3 $$ final InspectionManager inspectionManager = InspectionManager.getInstance(file.getProject())-->Line_9 $$ return inspect(Collections.singletonList((LocalInspectionToolWrapper) toolWrapper), file, inspectionManager, false, false, new EmptyProgressIndicator())[ FD ]
Line_11 $$ if (toolWrapper instanceof GlobalInspectionToolWrapper) -->Line_51 $$ return descriptors[ CD ]
Line_11 $$ if (toolWrapper instanceof GlobalInspectionToolWrapper) -->Line_12 $$ final GlobalInspectionTool globalTool = ((GlobalInspectionToolWrapper) toolWrapper).getTool()[ CD ]
Line_40 $$ fileRef.accept(new RefVisitor() -->Line_43 $$ if (elemDescriptors != null) [ CD ]
Line_2 $$ public static List<ProblemDescriptor> runInspectionOnFile(@NotNull final PsiFile file, @NotNull InspectionToolWrapper toolWrapper, @NotNull final GlobalInspectionContext inspectionContext) -->Line_6 $$ refManager.inspectionReadActionStarted()[ CD ]
Line_2 $$ public static List<ProblemDescriptor> runInspectionOnFile(@NotNull final PsiFile file, @NotNull InspectionToolWrapper toolWrapper, @NotNull final GlobalInspectionContext inspectionContext) -->Line_3 $$ final InspectionManager inspectionManager = InspectionManager.getInstance(file.getProject())[ CD ]
Line_17 $$ ProblemDescriptionsProcessor collectProcessor = new ProblemDescriptionsProcessor() -->Line_28 $$ convertToProblemDescriptors(element, commonProblemDescriptors, descriptors)[ FD ]
Line_2 $$ public static List<ProblemDescriptor> runInspectionOnFile(@NotNull final PsiFile file, @NotNull InspectionToolWrapper toolWrapper, @NotNull final GlobalInspectionContext inspectionContext) -->Line_3 $$ final InspectionManager inspectionManager = InspectionManager.getInstance(file.getProject())[ FD ]
Line_3 $$ final InspectionManager inspectionManager = InspectionManager.getInstance(file.getProject())-->Line_34 $$ simpleTool.checkFile(file, inspectionManager, problemsHolder, inspectionContext, collectProcessor)[ FD ]
Line_15 $$ GlobalSimpleInspectionTool simpleTool = (GlobalSimpleInspectionTool) globalTool-->Line_34 $$ simpleTool.checkFile(file, inspectionManager, problemsHolder, inspectionContext, collectProcessor)[ FD ]
Line_12 $$ final GlobalInspectionTool globalTool = ((GlobalInspectionToolWrapper) toolWrapper).getTool()-->Line_42 $$ CommonProblemDescriptor[] elemDescriptors = globalTool.checkElement(elem, scope, inspectionManager, inspectionContext)[ FD ]
Line_12 $$ final GlobalInspectionTool globalTool = ((GlobalInspectionToolWrapper) toolWrapper).getTool()-->Line_14 $$ if (globalTool instanceof GlobalSimpleInspectionTool) [ FD ]
Line_5 $$ RefManagerImpl refManager = (RefManagerImpl) inspectionContext.getRefManager()-->Line_54 $$ refManager.inspectionReadActionFinished()[ FD ]
Line_2 $$ public static List<ProblemDescriptor> runInspectionOnFile(@NotNull final PsiFile file, @NotNull InspectionToolWrapper toolWrapper, @NotNull final GlobalInspectionContext inspectionContext) -->Line_9 $$ return inspect(Collections.singletonList((LocalInspectionToolWrapper) toolWrapper), file, inspectionManager, false, false, new EmptyProgressIndicator())[ FD ]
Line_2 $$ public static List<ProblemDescriptor> runInspectionOnFile(@NotNull final PsiFile file, @NotNull InspectionToolWrapper toolWrapper, @NotNull final GlobalInspectionContext inspectionContext) -->Line_55 $$ toolWrapper.cleanup(file.getProject())[ FD ]
Line_2 $$ public static List<ProblemDescriptor> runInspectionOnFile(@NotNull final PsiFile file, @NotNull InspectionToolWrapper toolWrapper, @NotNull final GlobalInspectionContext inspectionContext) -->Line_56 $$ inspectionContext.cleanup()[ FD ]
Line_17 $$ ProblemDescriptionsProcessor collectProcessor = new ProblemDescriptionsProcessor() -->Line_27 $$ PsiElement element = ((RefElement) refEntity).getElement()[ CD ]
Line_13 $$ final List<ProblemDescriptor> descriptors = new ArrayList<ProblemDescriptor>()-->Line_19 $$ return descriptors.toArray(new CommonProblemDescriptor[descriptors.size()])[ FD ]
Line_2 $$ public static List<ProblemDescriptor> runInspectionOnFile(@NotNull final PsiFile file, @NotNull InspectionToolWrapper toolWrapper, @NotNull final GlobalInspectionContext inspectionContext) -->Line_4 $$ toolWrapper.initialize(inspectionContext)[ FD ]
Line_46 $$ for (RefEntity child : elem.getChildren()) -->Line_47 $$ child.accept(this)[ FD ]
Line_17 $$ ProblemDescriptionsProcessor collectProcessor = new ProblemDescriptionsProcessor() -->Line_34 $$ simpleTool.checkFile(file, inspectionManager, problemsHolder, inspectionContext, collectProcessor)[ FD ]
Line_8 $$ if (toolWrapper instanceof LocalInspectionToolWrapper) -->Line_9 $$ return inspect(Collections.singletonList((LocalInspectionToolWrapper) toolWrapper), file, inspectionManager, false, false, new EmptyProgressIndicator())[ CD ]
Line_42 $$ CommonProblemDescriptor[] elemDescriptors = globalTool.checkElement(elem, scope, inspectionManager, inspectionContext)-->Line_44 $$ convertToProblemDescriptors(file, elemDescriptors, descriptors)[ FD ]
Line_17 $$ ProblemDescriptionsProcessor collectProcessor = new ProblemDescriptionsProcessor() -->Line_28 $$ convertToProblemDescriptors(element, commonProblemDescriptors, descriptors)[ CD ]
Line_2 $$ public static List<ProblemDescriptor> runInspectionOnFile(@NotNull final PsiFile file, @NotNull InspectionToolWrapper toolWrapper, @NotNull final GlobalInspectionContext inspectionContext) -->Line_44 $$ convertToProblemDescriptors(file, elemDescriptors, descriptors)[ FD ]
Line_40 $$ fileRef.accept(new RefVisitor() -->Line_42 $$ CommonProblemDescriptor[] elemDescriptors = globalTool.checkElement(elem, scope, inspectionManager, inspectionContext)[ FD ]
Line_14 $$ if (globalTool instanceof GlobalSimpleInspectionTool) -->Line_34 $$ simpleTool.checkFile(file, inspectionManager, problemsHolder, inspectionContext, collectProcessor)[ CD ]
Line_3 $$ final InspectionManager inspectionManager = InspectionManager.getInstance(file.getProject())-->Line_42 $$ CommonProblemDescriptor[] elemDescriptors = globalTool.checkElement(elem, scope, inspectionManager, inspectionContext)[ FD ]
Line_14 $$ if (globalTool instanceof GlobalSimpleInspectionTool) -->Line_35 $$ return descriptors[ CD ]
Line_40 $$ fileRef.accept(new RefVisitor() -->Line_42 $$ CommonProblemDescriptor[] elemDescriptors = globalTool.checkElement(elem, scope, inspectionManager, inspectionContext)[ CD ]
Line_2 $$ public static List<ProblemDescriptor> runInspectionOnFile(@NotNull final PsiFile file, @NotNull InspectionToolWrapper toolWrapper, @NotNull final GlobalInspectionContext inspectionContext) -->Line_58 $$ return Collections.emptyList()[ CD ]
Line_17 $$ ProblemDescriptionsProcessor collectProcessor = new ProblemDescriptionsProcessor() -->Line_19 $$ return descriptors.toArray(new CommonProblemDescriptor[descriptors.size()])[ CD ]
Line_2 $$ public static List<ProblemDescriptor> runInspectionOnFile(@NotNull final PsiFile file, @NotNull InspectionToolWrapper toolWrapper, @NotNull final GlobalInspectionContext inspectionContext) -->Line_5 $$ RefManagerImpl refManager = (RefManagerImpl) inspectionContext.getRefManager()[ CD ]
Line_11 $$ if (toolWrapper instanceof GlobalInspectionToolWrapper) -->Line_14 $$ if (globalTool instanceof GlobalSimpleInspectionTool) [ CD ]
Line_40 $$ fileRef.accept(new RefVisitor() -->Line_46 $$ for (RefEntity child : elem.getChildren()) [ FD ]
Line_2 $$ public static List<ProblemDescriptor> runInspectionOnFile(@NotNull final PsiFile file, @NotNull InspectionToolWrapper toolWrapper, @NotNull final GlobalInspectionContext inspectionContext) -->Line_37 $$ RefElement fileRef = refManager.getReference(file)[ FD ]
Line_13 $$ final List<ProblemDescriptor> descriptors = new ArrayList<ProblemDescriptor>()-->Line_44 $$ convertToProblemDescriptors(file, elemDescriptors, descriptors)[ FD ]
Line_2 $$ public static List<ProblemDescriptor> runInspectionOnFile(@NotNull final PsiFile file, @NotNull InspectionToolWrapper toolWrapper, @NotNull final GlobalInspectionContext inspectionContext) -->Line_8 $$ if (toolWrapper instanceof LocalInspectionToolWrapper) [ FD ]
Line_17 $$ ProblemDescriptionsProcessor collectProcessor = new ProblemDescriptionsProcessor() -->Line_25 $$ if (!(refEntity instanceof RefElement))[ CD ]
Line_11 $$ if (toolWrapper instanceof GlobalInspectionToolWrapper) -->Line_37 $$ RefElement fileRef = refManager.getReference(file)[ CD ]
Line_11 $$ if (toolWrapper instanceof GlobalInspectionToolWrapper) -->Line_13 $$ final List<ProblemDescriptor> descriptors = new ArrayList<ProblemDescriptor>()[ CD ]
Line_2 $$ public static List<ProblemDescriptor> runInspectionOnFile(@NotNull final PsiFile file, @NotNull InspectionToolWrapper toolWrapper, @NotNull final GlobalInspectionContext inspectionContext) -->Line_4 $$ toolWrapper.initialize(inspectionContext)[ CD ]
Line_11 $$ if (toolWrapper instanceof GlobalInspectionToolWrapper) -->Line_40 $$ fileRef.accept(new RefVisitor() [ CD ]
Line_43 $$ if (elemDescriptors != null) -->Line_44 $$ convertToProblemDescriptors(file, elemDescriptors, descriptors)[ CD ]
Line_42 $$ CommonProblemDescriptor[] elemDescriptors = globalTool.checkElement(elem, scope, inspectionManager, inspectionContext)-->Line_43 $$ if (elemDescriptors != null) [ FD ]
Line_14 $$ if (globalTool instanceof GlobalSimpleInspectionTool) -->Line_16 $$ ProblemsHolder problemsHolder = new ProblemsHolder(inspectionManager, file, false)[ CD ]
Line_27 $$ PsiElement element = ((RefElement) refEntity).getElement()-->Line_28 $$ convertToProblemDescriptors(element, commonProblemDescriptors, descriptors)[ FD ]
Line_5 $$ RefManagerImpl refManager = (RefManagerImpl) inspectionContext.getRefManager()-->Line_37 $$ RefElement fileRef = refManager.getReference(file)[ FD ]
Line_16 $$ ProblemsHolder problemsHolder = new ProblemsHolder(inspectionManager, file, false)-->Line_34 $$ simpleTool.checkFile(file, inspectionManager, problemsHolder, inspectionContext, collectProcessor)[ FD ]
Line_2 $$ public static List<ProblemDescriptor> runInspectionOnFile(@NotNull final PsiFile file, @NotNull InspectionToolWrapper toolWrapper, @NotNull final GlobalInspectionContext inspectionContext) -->Line_5 $$ RefManagerImpl refManager = (RefManagerImpl) inspectionContext.getRefManager()[ FD ]
Line_25 $$ if (!(refEntity instanceof RefElement))-->Line_26 $$ return[ CD ]
