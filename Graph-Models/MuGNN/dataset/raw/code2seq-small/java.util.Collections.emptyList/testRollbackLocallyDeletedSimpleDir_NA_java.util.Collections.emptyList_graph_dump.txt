Line_16 $$ final Set<File> files = new HashSet<File>()-->Line_17 $$ files.add(wasFile)[ FD ]
Line_13 $$ final List<LocallyDeletedChange> deletedFiles = ((ChangeListManagerImpl) myChangeListManager).getDeletedFiles()-->Line_14 $$ Assert.assertNotNull(deletedFiles)[ FD ]
Line_20 $$ for (LocallyDeletedChange file : deletedFiles) -->Line_21 $$ files.remove(file.getPath().getIOFile())[ FD ]
Line_7 $$ final File wasFile = new File(tree.mySourceDir.getPath())-->Line_24 $$ rollbackLocallyDeleted(Collections.<FilePath>singletonList(VcsUtil.getFilePath(wasFile, true)), Collections.<FilePath>emptyList())[ FD ]
Line_16 $$ final Set<File> files = new HashSet<File>()-->Line_23 $$ Assert.assertTrue(files.isEmpty())[ FD ]
Line_16 $$ final Set<File> files = new HashSet<File>()-->Line_18 $$ files.add(wasFileS1)[ FD ]
Line_13 $$ final List<LocallyDeletedChange> deletedFiles = ((ChangeListManagerImpl) myChangeListManager).getDeletedFiles()-->Line_15 $$ Assert.assertTrue(deletedFiles.size() == 3)[ FD ]
Line_9 $$ final File wasFileS2 = new File(tree.myS2File.getPath())-->Line_19 $$ files.add(wasFileS2)[ FD ]
Line_16 $$ final Set<File> files = new HashSet<File>()-->Line_21 $$ files.remove(file.getPath().getIOFile())[ FD ]
Line_7 $$ final File wasFile = new File(tree.mySourceDir.getPath())-->Line_17 $$ files.add(wasFile)[ FD ]
Line_8 $$ final File wasFileS1 = new File(tree.myS1File.getPath())-->Line_18 $$ files.add(wasFileS1)[ FD ]
Line_16 $$ final Set<File> files = new HashSet<File>()-->Line_19 $$ files.add(wasFileS2)[ FD ]
