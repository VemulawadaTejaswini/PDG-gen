Line_17 $$ final File wasFile3 = new File(f2.getPath())-->Line_28 $$ files.add(wasFile3)[ FD ]
Line_16 $$ final File wasFile2 = new File(dir.getPath())-->Line_32 $$ rollbackLocallyDeleted(Arrays.<FilePath>asList(VcsUtil.getFilePath(wasFile2, true), VcsUtil.getFilePath(wasFile1, false)), Collections.<FilePath>emptyList())[ FD ]
Line_7 $$ VirtualFile dir = createDirInCommand(tree.mySourceDir, "dirrr")-->Line_19 $$ VcsTestUtil.deleteFileInCommand(myProject, dir)[ FD ]
Line_6 $$ VirtualFile f1 = createFileInCommand(tree.mySourceDir, "f1", "4")-->Line_18 $$ VcsTestUtil.deleteFileInCommand(myProject, f1)[ FD ]
Line_22 $$ final List<LocallyDeletedChange> deletedFiles = ((ChangeListManagerImpl) myChangeListManager).getDeletedFiles()-->Line_30 $$ Assert.assertTrue(files.contains(deletedFiles.get(1).getPath().getIOFile()))[ FD ]
Line_22 $$ final List<LocallyDeletedChange> deletedFiles = ((ChangeListManagerImpl) myChangeListManager).getDeletedFiles()-->Line_23 $$ Assert.assertNotNull(deletedFiles)[ FD ]
Line_16 $$ final File wasFile2 = new File(dir.getPath())-->Line_27 $$ files.add(wasFile2)[ FD ]
Line_7 $$ VirtualFile dir = createDirInCommand(tree.mySourceDir, "dirrr")-->Line_12 $$ assertCreatedChange(dir)[ FD ]
Line_8 $$ VirtualFile f2 = createFileInCommand(dir, "f2", "411")-->Line_17 $$ final File wasFile3 = new File(f2.getPath())[ FD ]
Line_7 $$ VirtualFile dir = createDirInCommand(tree.mySourceDir, "dirrr")-->Line_16 $$ final File wasFile2 = new File(dir.getPath())[ FD ]
Line_8 $$ VirtualFile f2 = createFileInCommand(dir, "f2", "411")-->Line_13 $$ assertCreatedChange(f2)[ FD ]
Line_22 $$ final List<LocallyDeletedChange> deletedFiles = ((ChangeListManagerImpl) myChangeListManager).getDeletedFiles()-->Line_24 $$ Assert.assertTrue(deletedFiles.size() == 3)[ FD ]
Line_15 $$ final File wasFile1 = new File(f1.getPath())-->Line_32 $$ rollbackLocallyDeleted(Arrays.<FilePath>asList(VcsUtil.getFilePath(wasFile2, true), VcsUtil.getFilePath(wasFile1, false)), Collections.<FilePath>emptyList())[ FD ]
Line_25 $$ final Set<File> files = new HashSet<File>()-->Line_26 $$ files.add(wasFile1)[ FD ]
Line_6 $$ VirtualFile f1 = createFileInCommand(tree.mySourceDir, "f1", "4")-->Line_11 $$ assertCreatedChange(f1)[ FD ]
Line_25 $$ final Set<File> files = new HashSet<File>()-->Line_27 $$ files.add(wasFile2)[ FD ]
Line_25 $$ final Set<File> files = new HashSet<File>()-->Line_31 $$ Assert.assertTrue(files.contains(deletedFiles.get(2).getPath().getIOFile()))[ FD ]
Line_25 $$ final Set<File> files = new HashSet<File>()-->Line_30 $$ Assert.assertTrue(files.contains(deletedFiles.get(1).getPath().getIOFile()))[ FD ]
Line_6 $$ VirtualFile f1 = createFileInCommand(tree.mySourceDir, "f1", "4")-->Line_15 $$ final File wasFile1 = new File(f1.getPath())[ FD ]
Line_22 $$ final List<LocallyDeletedChange> deletedFiles = ((ChangeListManagerImpl) myChangeListManager).getDeletedFiles()-->Line_29 $$ Assert.assertTrue(files.contains(deletedFiles.get(0).getPath().getIOFile()))[ FD ]
Line_15 $$ final File wasFile1 = new File(f1.getPath())-->Line_26 $$ files.add(wasFile1)[ FD ]
Line_7 $$ VirtualFile dir = createDirInCommand(tree.mySourceDir, "dirrr")-->Line_8 $$ VirtualFile f2 = createFileInCommand(dir, "f2", "411")[ FD ]
Line_22 $$ final List<LocallyDeletedChange> deletedFiles = ((ChangeListManagerImpl) myChangeListManager).getDeletedFiles()-->Line_31 $$ Assert.assertTrue(files.contains(deletedFiles.get(2).getPath().getIOFile()))[ FD ]
Line_25 $$ final Set<File> files = new HashSet<File>()-->Line_29 $$ Assert.assertTrue(files.contains(deletedFiles.get(0).getPath().getIOFile()))[ FD ]
Line_25 $$ final Set<File> files = new HashSet<File>()-->Line_28 $$ files.add(wasFile3)[ FD ]
