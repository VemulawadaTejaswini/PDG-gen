Line_2 $$ public void testRemovingPreviousSystemPathForForSystemLibraries() throws Exception -->Line_7 $$ resolveDependenciesAndImport()[ CD ]
Line_2 $$ public void testRemovingPreviousSystemPathForForSystemLibraries() throws Exception -->Line_5 $$ createProjectPom("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>" + "<dependencies>" + "  <dependency>" + "    <groupId>xxx</groupId>" + "    <artifactId>yyy</artifactId>" + "    <version>1</version>" + "    <scope>system</scope>" + "    <systemPath>" + getRoot() + "/foo/xxx.jar</systemPath>" + "  </dependency>" + "</dependencies>")[ CD ]
Line_2 $$ public void testRemovingPreviousSystemPathForForSystemLibraries() throws Exception -->Line_4 $$ assertModuleLibDep("project", "Maven: xxx:yyy:1", Arrays.asList("jar://" + getRoot() + "/foo/bar.jar!/"), Collections.<String>emptyList(), Collections.<String>emptyList())[ CD ]
Line_2 $$ public void testRemovingPreviousSystemPathForForSystemLibraries() throws Exception -->Line_6 $$ scheduleResolveAll()[ CD ]
Line_2 $$ public void testRemovingPreviousSystemPathForForSystemLibraries() throws Exception -->Line_3 $$ importProject("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>" + "<dependencies>" + "  <dependency>" + "    <groupId>xxx</groupId>" + "    <artifactId>yyy</artifactId>" + "    <version>1</version>" + "    <scope>system</scope>" + "    <systemPath>" + getRoot() + "/foo/bar.jar</systemPath>" + "  </dependency>" + "</dependencies>")[ CD ]
Line_2 $$ public void testRemovingPreviousSystemPathForForSystemLibraries() throws Exception -->Line_8 $$ assertModuleLibDep("project", "Maven: xxx:yyy:1", Arrays.asList("jar://" + getRoot() + "/foo/xxx.jar!/"), Collections.<String>emptyList(), Collections.<String>emptyList())[ CD ]
