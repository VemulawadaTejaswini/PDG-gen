Line_2 $$ public static List<String> getChildrenRelativePaths(URL root) throws IOException -->Line_3 $$ final String protocol = root.getProtocol()[ FD ]
Line_2 $$ public static List<String> getChildrenRelativePaths(URL root) throws IOException -->Line_5 $$ return getChildPathsFromJar(root)[ FD ]
Line_2 $$ public static List<String> getChildrenRelativePaths(URL root) throws IOException -->Line_3 $$ final String protocol = root.getProtocol()[ CD ]
Line_3 $$ final String protocol = root.getProtocol()-->Line_7 $$ if (FILE_PROTOCOL.equalsIgnoreCase(protocol)) [ FD ]
Line_7 $$ if (FILE_PROTOCOL.equalsIgnoreCase(protocol)) -->Line_8 $$ return getChildPathsFromFile(root)[ CD ]
Line_2 $$ public static List<String> getChildrenRelativePaths(URL root) throws IOException -->Line_8 $$ return getChildPathsFromFile(root)[ FD ]
Line_4 $$ if ("jar".equalsIgnoreCase(protocol)) -->Line_5 $$ return getChildPathsFromJar(root)[ CD ]
Line_2 $$ public static List<String> getChildrenRelativePaths(URL root) throws IOException -->Line_4 $$ if ("jar".equalsIgnoreCase(protocol)) [ CD ]
Line_2 $$ public static List<String> getChildrenRelativePaths(URL root) throws IOException -->Line_10 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public static List<String> getChildrenRelativePaths(URL root) throws IOException -->Line_7 $$ if (FILE_PROTOCOL.equalsIgnoreCase(protocol)) [ CD ]
Line_3 $$ final String protocol = root.getProtocol()-->Line_4 $$ if ("jar".equalsIgnoreCase(protocol)) [ FD ]
