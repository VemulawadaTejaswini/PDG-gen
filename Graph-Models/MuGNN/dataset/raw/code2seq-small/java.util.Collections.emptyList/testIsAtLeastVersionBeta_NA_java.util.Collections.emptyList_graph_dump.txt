Line_2 $$ public void testIsAtLeastVersionBeta() throws Exception -->Line_9 $$ Assert.assertFalse("Failed to check alpha version", pyPackage.matches(PyRequirement.fromStringGuaranteed("somePackage>=1")))[ CD ]
Line_3 $$ final PyPackage pyPackage = new PyPackage("somePackage", "0.5a3", null, Collections.<PyRequirement>emptyList())-->Line_8 $$ Assert.assertFalse("Failed to check alpha version", pyPackage.matches(PyRequirement.fromStringGuaranteed("somePackage>=0.5.1")))[ FD ]
Line_2 $$ public void testIsAtLeastVersionBeta() throws Exception -->Line_6 $$ Assert.assertTrue("Failed to check alpha version", pyPackage.matches(PyRequirement.fromStringGuaranteed("somePackage>=0.5a")))[ CD ]
Line_3 $$ final PyPackage pyPackage = new PyPackage("somePackage", "0.5a3", null, Collections.<PyRequirement>emptyList())-->Line_5 $$ Assert.assertTrue("Failed to check alpha version", pyPackage.matches(PyRequirement.fromStringGuaranteed("somePackage<=0.5")))[ FD ]
Line_3 $$ final PyPackage pyPackage = new PyPackage("somePackage", "0.5a3", null, Collections.<PyRequirement>emptyList())-->Line_9 $$ Assert.assertFalse("Failed to check alpha version", pyPackage.matches(PyRequirement.fromStringGuaranteed("somePackage>=1")))[ FD ]
Line_2 $$ public void testIsAtLeastVersionBeta() throws Exception -->Line_3 $$ final PyPackage pyPackage = new PyPackage("somePackage", "0.5a3", null, Collections.<PyRequirement>emptyList())[ CD ]
Line_2 $$ public void testIsAtLeastVersionBeta() throws Exception -->Line_7 $$ Assert.assertFalse("Failed to check alpha version", pyPackage.matches(PyRequirement.fromStringGuaranteed("somePackage>=0.6")))[ CD ]
Line_2 $$ public void testIsAtLeastVersionBeta() throws Exception -->Line_4 $$ Assert.assertTrue("Failed to check alpha version", pyPackage.matches(PyRequirement.fromStringGuaranteed("somePackage>=0.4")))[ CD ]
Line_3 $$ final PyPackage pyPackage = new PyPackage("somePackage", "0.5a3", null, Collections.<PyRequirement>emptyList())-->Line_7 $$ Assert.assertFalse("Failed to check alpha version", pyPackage.matches(PyRequirement.fromStringGuaranteed("somePackage>=0.6")))[ FD ]
Line_2 $$ public void testIsAtLeastVersionBeta() throws Exception -->Line_8 $$ Assert.assertFalse("Failed to check alpha version", pyPackage.matches(PyRequirement.fromStringGuaranteed("somePackage>=0.5.1")))[ CD ]
Line_2 $$ public void testIsAtLeastVersionBeta() throws Exception -->Line_5 $$ Assert.assertTrue("Failed to check alpha version", pyPackage.matches(PyRequirement.fromStringGuaranteed("somePackage<=0.5")))[ CD ]
Line_3 $$ final PyPackage pyPackage = new PyPackage("somePackage", "0.5a3", null, Collections.<PyRequirement>emptyList())-->Line_6 $$ Assert.assertTrue("Failed to check alpha version", pyPackage.matches(PyRequirement.fromStringGuaranteed("somePackage>=0.5a")))[ FD ]
Line_3 $$ final PyPackage pyPackage = new PyPackage("somePackage", "0.5a3", null, Collections.<PyRequirement>emptyList())-->Line_4 $$ Assert.assertTrue("Failed to check alpha version", pyPackage.matches(PyRequirement.fromStringGuaranteed("somePackage>=0.4")))[ FD ]
