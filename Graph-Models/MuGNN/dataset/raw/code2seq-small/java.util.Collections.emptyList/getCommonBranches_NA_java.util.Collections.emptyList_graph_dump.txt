Line_9 $$ commonBranches = names-->Line_14 $$ if (commonBranches != null) [ FD ]
Line_14 $$ if (commonBranches != null) -->Line_17 $$ return common[ CD ]
Line_5 $$ for (GitRepository repository : repositories) -->Line_6 $$ GitBranchesCollection branchesCollection = repository.getBranches()[ FD ]
Line_7 $$ Collection<String> names = local ? convertBranchesToNames(branchesCollection.getLocalBranches()) : getBranchNamesWithoutRemoteHead(branchesCollection.getRemoteBranches())-->Line_11 $$ commonBranches = ContainerUtil.intersection(commonBranches, names)[ FD ]
Line_8 $$ if (commonBranches == null) -->Line_9 $$ commonBranches = names[ CD ]
Line_6 $$ GitBranchesCollection branchesCollection = repository.getBranches()-->Line_7 $$ Collection<String> names = local ? convertBranchesToNames(branchesCollection.getLocalBranches()) : getBranchNamesWithoutRemoteHead(branchesCollection.getRemoteBranches())[ FD ]
Line_8 $$ if (commonBranches == null) -->Line_11 $$ commonBranches = ContainerUtil.intersection(commonBranches, names)[ CD ]
Line_4 $$ Collection<String> commonBranches = null-->Line_11 $$ commonBranches = ContainerUtil.intersection(commonBranches, names)[ FD ]
Line_14 $$ if (commonBranches != null) -->Line_15 $$ ArrayList<String> common = new ArrayList<String>(commonBranches)[ CD ]
Line_14 $$ if (commonBranches != null) -->Line_16 $$ Collections.sort(common)[ CD ]
Line_9 $$ commonBranches = names-->Line_11 $$ commonBranches = ContainerUtil.intersection(commonBranches, names)[ FD ]
Line_15 $$ ArrayList<String> common = new ArrayList<String>(commonBranches)-->Line_16 $$ Collections.sort(common)[ FD ]
Line_14 $$ if (commonBranches != null) -->Line_19 $$ return Collections.emptyList()[ CD ]
Line_4 $$ Collection<String> commonBranches = null-->Line_14 $$ if (commonBranches != null) [ FD ]
Line_7 $$ Collection<String> names = local ? convertBranchesToNames(branchesCollection.getLocalBranches()) : getBranchNamesWithoutRemoteHead(branchesCollection.getRemoteBranches())-->Line_9 $$ commonBranches = names[ FD ]
Line_11 $$ commonBranches = ContainerUtil.intersection(commonBranches, names)-->Line_14 $$ if (commonBranches != null) [ FD ]
Line_4 $$ Collection<String> commonBranches = null-->Line_9 $$ commonBranches = names[ FD ]
Line_4 $$ Collection<String> commonBranches = null-->Line_8 $$ if (commonBranches == null) [ FD ]
