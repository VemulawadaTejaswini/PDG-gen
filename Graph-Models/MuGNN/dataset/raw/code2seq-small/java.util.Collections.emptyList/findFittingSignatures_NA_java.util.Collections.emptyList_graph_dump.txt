Line_7 $$ List<PsiType[]> expectedSignatures = ContainerUtil.newArrayList()-->Line_13 $$ return ContainerUtil.findAll(expectedSignatures, new Condition<PsiType[]>() [ FD ]
Line_4 $$ GrCall call = findCall(closure)-->Line_5 $$ if (call == null)[ FD ]
Line_4 $$ GrCall call = findCall(closure)-->Line_10 $$ expectedSignatures.addAll(inferExpectedSignatures(variant, call, closure))[ FD ]
Line_13 $$ return ContainerUtil.findAll(expectedSignatures, new Condition<PsiType[]>() -->Line_17 $$ return types.length == parameters.length[ CD ]
Line_7 $$ List<PsiType[]> expectedSignatures = ContainerUtil.newArrayList()-->Line_10 $$ expectedSignatures.addAll(inferExpectedSignatures(variant, call, closure))[ FD ]
Line_9 $$ for (GroovyResolveResult variant : variants) -->Line_10 $$ expectedSignatures.addAll(inferExpectedSignatures(variant, call, closure))[ FD ]
Line_4 $$ GrCall call = findCall(closure)-->Line_8 $$ GroovyResolveResult[] variants = call.getCallVariants(closure)[ FD ]
Line_5 $$ if (call == null)-->Line_6 $$ return Collections.emptyList()[ CD ]
