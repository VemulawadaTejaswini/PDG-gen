Line_8 $$ final String className = FormsParsing.readBoundClassName(form)-->Line_20 $$ candidates.addAll(findPossibleSourcesForClass(rd, className))[ FD ]
Line_12 $$ for (JavaSourceRootDescriptor rd : targetRoots) -->Line_20 $$ candidates.addAll(findPossibleSourcesForClass(rd, className))[ FD ]
Line_8 $$ final String className = FormsParsing.readBoundClassName(form)-->Line_9 $$ if (className == null) [ FD ]
Line_18 $$ final Set<File> candidates = new THashSet<File>(FileUtil.FILE_HASHING_STRATEGY)-->Line_20 $$ candidates.addAll(findPossibleSourcesForClass(rd, className))[ FD ]
Line_8 $$ final String className = FormsParsing.readBoundClassName(form)-->Line_13 $$ final File boundSource = findSourceForClass(rd, className)[ FD ]
Line_4 $$ final List<JavaSourceRootDescriptor> targetRoots = context.getProjectDescriptor().getBuildRootIndex().getTargetRoots(target, context)-->Line_5 $$ if (targetRoots.isEmpty()) [ FD ]
Line_9 $$ if (className == null) -->Line_10 $$ return Collections.emptyList()[ CD ]
Line_5 $$ if (targetRoots.isEmpty()) -->Line_6 $$ return Collections.emptyList()[ CD ]
Line_13 $$ final File boundSource = findSourceForClass(rd, className)-->Line_15 $$ return Collections.singleton(boundSource)[ FD ]
Line_14 $$ if (boundSource != null) -->Line_15 $$ return Collections.singleton(boundSource)[ CD ]
Line_12 $$ for (JavaSourceRootDescriptor rd : targetRoots) -->Line_13 $$ final File boundSource = findSourceForClass(rd, className)[ FD ]
Line_13 $$ final File boundSource = findSourceForClass(rd, className)-->Line_14 $$ if (boundSource != null) [ FD ]
