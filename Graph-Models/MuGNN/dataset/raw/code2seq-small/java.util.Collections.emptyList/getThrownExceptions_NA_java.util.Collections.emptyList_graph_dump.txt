Line_38 $$ if (element instanceof PsiResourceListElement) -->Line_39 $$ List<PsiClassType> types = ContainerUtil.newArrayList()[ CD ]
Line_24 $$ if (expr == null)-->Line_25 $$ return Collections.emptyList()[ CD ]
Line_23 $$ final PsiExpression expr = ((PsiThrowStatement) element).getException()-->Line_34 $$ addExceptions(classTypes, getThrownExceptions(expr))[ FD ]
Line_7 $$ if (argumentList != null) -->Line_8 $$ return getThrownExceptions(argumentList)[ CD ]
Line_36 $$ if (element instanceof PsiTryStatement) -->Line_37 $$ return getTryExceptions((PsiTryStatement) element)[ CD ]
Line_26 $$ final List<PsiType> types = getPreciseThrowTypes(expr)-->Line_27 $$ List<PsiClassType> classTypes = new ArrayList<PsiClassType>(ContainerUtil.mapNotNull(types, new NullableFunction<PsiType, PsiClassType>() [ FD ]
Line_44 $$ if (initializer != null) -->Line_45 $$ addExceptions(types, getThrownExceptions(initializer))[ CD ]
Line_26 $$ final List<PsiType> types = getPreciseThrowTypes(expr)-->Line_40 $$ addExceptions(types, getCloserExceptions((PsiResourceListElement) element))[ FD ]
Line_22 $$ if (element instanceof PsiThrowStatement) -->Line_24 $$ if (expr == null)[ CD ]
Line_38 $$ if (element instanceof PsiResourceListElement) -->Line_41 $$ if (element instanceof PsiResourceVariable) [ CD ]
Line_19 $$ if (element instanceof PsiNewExpression) -->Line_21 $$ return getExceptionsByMethodAndChildren(element, result)[ CD ]
Line_38 $$ if (element instanceof PsiResourceListElement) -->Line_40 $$ addExceptions(types, getCloserExceptions((PsiResourceListElement) element))[ CD ]
Line_16 $$ PsiReferenceExpression methodRef = ((PsiMethodCallExpression) element).getMethodExpression()-->Line_17 $$ JavaResolveResult result = methodRef.advancedResolve(false)[ FD ]
Line_4 $$ if (element instanceof PsiClass) -->Line_13 $$ if (element instanceof PsiLambdaExpression) [ CD ]
Line_22 $$ if (element instanceof PsiThrowStatement) -->Line_27 $$ List<PsiClassType> classTypes = new ArrayList<PsiClassType>(ContainerUtil.mapNotNull(types, new NullableFunction<PsiType, PsiClassType>() [ CD ]
Line_22 $$ if (element instanceof PsiThrowStatement) -->Line_23 $$ final PsiExpression expr = ((PsiThrowStatement) element).getException()[ CD ]
Line_19 $$ if (element instanceof PsiNewExpression) -->Line_22 $$ if (element instanceof PsiThrowStatement) [ CD ]
Line_5 $$ if (element instanceof PsiAnonymousClass) -->Line_7 $$ if (argumentList != null) [ CD ]
Line_23 $$ final PsiExpression expr = ((PsiThrowStatement) element).getException()-->Line_26 $$ final List<PsiType> types = getPreciseThrowTypes(expr)[ FD ]
Line_15 $$ if (element instanceof PsiMethodCallExpression) -->Line_16 $$ PsiReferenceExpression methodRef = ((PsiMethodCallExpression) element).getMethodExpression()[ CD ]
Line_36 $$ if (element instanceof PsiTryStatement) -->Line_38 $$ if (element instanceof PsiResourceListElement) [ CD ]
Line_26 $$ final List<PsiType> types = getPreciseThrowTypes(expr)-->Line_45 $$ addExceptions(types, getThrownExceptions(initializer))[ FD ]
Line_5 $$ if (element instanceof PsiAnonymousClass) -->Line_6 $$ final PsiExpressionList argumentList = ((PsiAnonymousClass) element).getArgumentList()[ CD ]
Line_23 $$ final PsiExpression expr = ((PsiThrowStatement) element).getException()-->Line_24 $$ if (expr == null)[ FD ]
Line_19 $$ if (element instanceof PsiNewExpression) -->Line_20 $$ JavaResolveResult result = ((PsiNewExpression) element).resolveMethodGenerics()[ CD ]
Line_13 $$ if (element instanceof PsiLambdaExpression) -->Line_15 $$ if (element instanceof PsiMethodCallExpression) [ CD ]
Line_13 $$ if (element instanceof PsiLambdaExpression) -->Line_14 $$ return Collections.emptyList()[ CD ]
Line_22 $$ if (element instanceof PsiThrowStatement) -->Line_35 $$ return classTypes[ CD ]
Line_17 $$ JavaResolveResult result = methodRef.advancedResolve(false)-->Line_18 $$ return getExceptionsByMethodAndChildren(element, result)[ FD ]
Line_41 $$ if (element instanceof PsiResourceVariable) -->Line_44 $$ if (initializer != null) [ CD ]
Line_38 $$ if (element instanceof PsiResourceListElement) -->Line_48 $$ return types[ CD ]
Line_6 $$ final PsiExpressionList argumentList = ((PsiAnonymousClass) element).getArgumentList()-->Line_8 $$ return getThrownExceptions(argumentList)[ FD ]
Line_41 $$ if (element instanceof PsiResourceVariable) -->Line_43 $$ PsiExpression initializer = variable.getInitializer()[ CD ]
Line_27 $$ List<PsiClassType> classTypes = new ArrayList<PsiClassType>(ContainerUtil.mapNotNull(types, new NullableFunction<PsiType, PsiClassType>() -->Line_31 $$ return type instanceof PsiClassType ? (PsiClassType) type : null[ CD ]
Line_4 $$ if (element instanceof PsiClass) -->Line_5 $$ if (element instanceof PsiAnonymousClass) [ CD ]
Line_22 $$ if (element instanceof PsiThrowStatement) -->Line_36 $$ if (element instanceof PsiTryStatement) [ CD ]
Line_6 $$ final PsiExpressionList argumentList = ((PsiAnonymousClass) element).getArgumentList()-->Line_7 $$ if (argumentList != null) [ FD ]
Line_15 $$ if (element instanceof PsiMethodCallExpression) -->Line_17 $$ JavaResolveResult result = methodRef.advancedResolve(false)[ CD ]
Line_17 $$ JavaResolveResult result = methodRef.advancedResolve(false)-->Line_21 $$ return getExceptionsByMethodAndChildren(element, result)[ FD ]
Line_22 $$ if (element instanceof PsiThrowStatement) -->Line_26 $$ final List<PsiType> types = getPreciseThrowTypes(expr)[ CD ]
Line_15 $$ if (element instanceof PsiMethodCallExpression) -->Line_18 $$ return getExceptionsByMethodAndChildren(element, result)[ CD ]
Line_22 $$ if (element instanceof PsiThrowStatement) -->Line_34 $$ addExceptions(classTypes, getThrownExceptions(expr))[ CD ]
Line_27 $$ List<PsiClassType> classTypes = new ArrayList<PsiClassType>(ContainerUtil.mapNotNull(types, new NullableFunction<PsiType, PsiClassType>() -->Line_34 $$ addExceptions(classTypes, getThrownExceptions(expr))[ FD ]
Line_15 $$ if (element instanceof PsiMethodCallExpression) -->Line_19 $$ if (element instanceof PsiNewExpression) [ CD ]
