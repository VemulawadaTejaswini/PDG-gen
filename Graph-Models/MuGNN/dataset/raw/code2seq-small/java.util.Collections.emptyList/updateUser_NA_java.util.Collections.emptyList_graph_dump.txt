Line_109 $$ for (long organizationId : organizationIds) -->Line_111 $$ removeOrganizationIds.remove(organizationId)[ FD ]
Line_124 $$ if (roleIds != null) -->Line_134 $$ if (!addRoleIds.isEmpty() || !removeRoleIds.isEmpty()) [ CD ]
Line_151 $$ List<UserGroupRole> addSiteUserGroupRoles = new ArrayList()-->Line_176 $$ if (!addSiteUserGroupRoles.isEmpty() || !removeSiteUserGroupRoles.isEmpty()) [ FD ]
Line_184 $$ if (userGroupIds != null) -->Line_185 $$ removeUserGroupIds = ListUtil.toList(oldUserGroupIds)[ CD ]
Line_128 $$ if (ArrayUtil.contains(oldRoleIds, roleId)) -->Line_129 $$ removeRoleIds.remove(roleId)[ CD ]
Line_60 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_62 $$ UsersAdminUtil.updateAddresses(Contact.class.getName(), user.getContactId(), addresses)[ FD ]
Line_151 $$ List<UserGroupRole> addSiteUserGroupRoles = new ArrayList()-->Line_209 $$ SiteMembershipPolicyUtil.propagateRoles(addSiteUserGroupRoles, removeSiteUserGroupRoles)[ FD ]
Line_108 $$ organizationIds = checkOrganizations(userId, organizationIds)-->Line_198 $$ user = userLocalService.updateUser(userId, oldPassword, newPassword1, newPassword2, passwordReset, reminderQueryQuestion, reminderQueryAnswer, screenName, emailAddress, facebookId, openId, portrait, portraitBytes, languageId, timeZoneId, greeting, comments, firstName, middleName, lastName, prefixId, suffixId, male, birthdayMonth, birthdayDay, birthdayYear, smsSn, facebookSn, jabberSn, skypeSn, twitterSn, jobTitle, groupIds, organizationIds, roleIds, userGroupRoles, userGroupIds, serviceContext)[ FD ]
Line_61 $$ if (addresses != null) -->Line_62 $$ UsersAdminUtil.updateAddresses(Contact.class.getName(), user.getContactId(), addresses)[ CD ]
Line_88 $$ if (groupIds != null) -->Line_89 $$ removeGroupIds = ListUtil.toList(oldGroupIds)[ CD ]
Line_183 $$ List<Long> removeUserGroupIds = Collections.emptyList()-->Line_185 $$ removeUserGroupIds = ListUtil.toList(oldUserGroupIds)[ FD ]
Line_77 $$ if (curUserId == userId) -->Line_79 $$ if (!StringUtil.equalsIgnoreCase(emailAddress, user.getEmailAddress())) [ CD ]
Line_125 $$ removeRoleIds = ListUtil.toList(oldRoleIds)-->Line_205 $$ if (!addRoleIds.isEmpty() || !removeRoleIds.isEmpty()) [ FD ]
Line_123 $$ List<Long> removeRoleIds = Collections.emptyList()-->Line_125 $$ removeRoleIds = ListUtil.toList(oldRoleIds)[ FD ]
Line_92 $$ if (ArrayUtil.contains(oldGroupIds, groupId)) -->Line_93 $$ removeGroupIds.remove(groupId)[ CD ]
Line_138 $$ List<UserGroupRole> oldOrganizationUserGroupRoles = new ArrayList()-->Line_155 $$ removeOrganizationUserGroupRoles = ListUtil.copy(oldOrganizationUserGroupRoles)[ FD ]
Line_152 $$ List<UserGroupRole> removeSiteUserGroupRoles = Collections.emptyList()-->Line_208 $$ if (!addSiteUserGroupRoles.isEmpty() || !removeSiteUserGroupRoles.isEmpty()) [ FD ]
Line_151 $$ List<UserGroupRole> addSiteUserGroupRoles = new ArrayList()-->Line_177 $$ SiteMembershipPolicyUtil.checkRoles(addSiteUserGroupRoles, removeSiteUserGroupRoles)[ FD ]
Line_150 $$ List<UserGroupRole> removeOrganizationUserGroupRoles = Collections.emptyList()-->Line_212 $$ OrganizationMembershipPolicyUtil.propagateRoles(addOrganizationUserGroupRoles, removeOrganizationUserGroupRoles)[ FD ]
Line_78 $$ emailAddress = StringUtil.toLowerCase(emailAddress.trim())-->Line_80 $$ validateEmailAddress(user, emailAddress)[ FD ]
Line_77 $$ if (curUserId == userId) -->Line_78 $$ emailAddress = StringUtil.toLowerCase(emailAddress.trim())[ CD ]
Line_107 $$ removeOrganizationIds = ListUtil.toList(oldOrganizationIds)-->Line_116 $$ if (!addOrganizationIds.isEmpty() || !removeOrganizationIds.isEmpty()) [ FD ]
Line_142 $$ Role role = oldUserGroupRole.getRole()-->Line_165 $$ if (role.getType() == RoleConstants.TYPE_SITE) [ FD ]
Line_142 $$ Role role = oldUserGroupRole.getRole()-->Line_143 $$ if (role.getType() == RoleConstants.TYPE_ORGANIZATION) [ FD ]
Line_76 $$ long curUserId = getUserId()-->Line_77 $$ if (curUserId == userId) [ FD ]
Line_78 $$ emailAddress = StringUtil.toLowerCase(emailAddress.trim())-->Line_79 $$ if (!StringUtil.equalsIgnoreCase(emailAddress, user.getEmailAddress())) [ FD ]
Line_182 $$ List<Long> addUserGroupIds = new ArrayList()-->Line_194 $$ if (!addUserGroupIds.isEmpty() || !removeUserGroupIds.isEmpty()) [ FD ]
Line_155 $$ removeOrganizationUserGroupRoles = ListUtil.copy(oldOrganizationUserGroupRoles)-->Line_173 $$ if (!addOrganizationUserGroupRoles.isEmpty() || !removeOrganizationUserGroupRoles.isEmpty()) [ FD ]
Line_149 $$ List<UserGroupRole> addOrganizationUserGroupRoles = new ArrayList()-->Line_173 $$ if (!addOrganizationUserGroupRoles.isEmpty() || !removeOrganizationUserGroupRoles.isEmpty()) [ FD ]
Line_86 $$ List<Long> addGroupIds = new ArrayList()-->Line_95 $$ addGroupIds.add(groupId)[ FD ]
Line_110 $$ if (ArrayUtil.contains(oldOrganizationIds, organizationId)) -->Line_111 $$ removeOrganizationIds.remove(organizationId)[ CD ]
Line_125 $$ removeRoleIds = ListUtil.toList(oldRoleIds)-->Line_134 $$ if (!addRoleIds.isEmpty() || !removeRoleIds.isEmpty()) [ FD ]
Line_160 $$ if (oldOrganizationUserGroupRoles.contains(userGroupRole)) -->Line_163 $$ addOrganizationUserGroupRoles.add(userGroupRole)[ CD ]
Line_155 $$ removeOrganizationUserGroupRoles = ListUtil.copy(oldOrganizationUserGroupRoles)-->Line_161 $$ removeOrganizationUserGroupRoles.remove(userGroupRole)[ FD ]
Line_60 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_68 $$ UsersAdminUtil.updatePhones(Contact.class.getName(), user.getContactId(), phones)[ FD ]
Line_156 $$ removeSiteUserGroupRoles = ListUtil.copy(oldSiteUserGroupRoles)-->Line_208 $$ if (!addSiteUserGroupRoles.isEmpty() || !removeSiteUserGroupRoles.isEmpty()) [ FD ]
Line_123 $$ List<Long> removeRoleIds = Collections.emptyList()-->Line_134 $$ if (!addRoleIds.isEmpty() || !removeRoleIds.isEmpty()) [ FD ]
Line_183 $$ List<Long> removeUserGroupIds = Collections.emptyList()-->Line_195 $$ UserGroupMembershipPolicyUtil.checkMembership(new long[] [ FD ]
Line_198 $$ user = userLocalService.updateUser(userId, oldPassword, newPassword1, newPassword2, passwordReset, reminderQueryQuestion, reminderQueryAnswer, screenName, emailAddress, facebookId, openId, portrait, portraitBytes, languageId, timeZoneId, greeting, comments, firstName, middleName, lastName, prefixId, suffixId, male, birthdayMonth, birthdayDay, birthdayYear, smsSn, facebookSn, jabberSn, skypeSn, twitterSn, jobTitle, groupIds, organizationIds, roleIds, userGroupRoles, userGroupIds, serviceContext)-->Line_200 $$ SiteMembershipPolicyUtil.propagateMembership(new long[] [ FD ]
Line_151 $$ List<UserGroupRole> addSiteUserGroupRoles = new ArrayList()-->Line_208 $$ if (!addSiteUserGroupRoles.isEmpty() || !removeSiteUserGroupRoles.isEmpty()) [ FD ]
Line_152 $$ List<UserGroupRole> removeSiteUserGroupRoles = Collections.emptyList()-->Line_209 $$ SiteMembershipPolicyUtil.propagateRoles(addSiteUserGroupRoles, removeSiteUserGroupRoles)[ FD ]
Line_152 $$ List<UserGroupRole> removeSiteUserGroupRoles = Collections.emptyList()-->Line_156 $$ removeSiteUserGroupRoles = ListUtil.copy(oldSiteUserGroupRoles)[ FD ]
Line_89 $$ removeGroupIds = ListUtil.toList(oldGroupIds)-->Line_200 $$ SiteMembershipPolicyUtil.propagateMembership(new long[] [ FD ]
Line_139 $$ List<UserGroupRole> oldSiteUserGroupRoles = new ArrayList()-->Line_156 $$ removeSiteUserGroupRoles = ListUtil.copy(oldSiteUserGroupRoles)[ FD ]
Line_185 $$ removeUserGroupIds = ListUtil.toList(oldUserGroupIds)-->Line_194 $$ if (!addUserGroupIds.isEmpty() || !removeUserGroupIds.isEmpty()) [ FD ]
Line_92 $$ if (ArrayUtil.contains(oldGroupIds, groupId)) -->Line_95 $$ addGroupIds.add(groupId)[ CD ]
Line_176 $$ if (!addSiteUserGroupRoles.isEmpty() || !removeSiteUserGroupRoles.isEmpty()) -->Line_177 $$ SiteMembershipPolicyUtil.checkRoles(addSiteUserGroupRoles, removeSiteUserGroupRoles)[ CD ]
Line_155 $$ removeOrganizationUserGroupRoles = ListUtil.copy(oldOrganizationUserGroupRoles)-->Line_211 $$ if (!addOrganizationUserGroupRoles.isEmpty() || !removeOrganizationUserGroupRoles.isEmpty()) [ FD ]
Line_87 $$ List<Long> removeGroupIds = Collections.emptyList()-->Line_98 $$ if (!addGroupIds.isEmpty() || !removeGroupIds.isEmpty()) [ FD ]
Line_208 $$ if (!addSiteUserGroupRoles.isEmpty() || !removeSiteUserGroupRoles.isEmpty()) -->Line_209 $$ SiteMembershipPolicyUtil.propagateRoles(addSiteUserGroupRoles, removeSiteUserGroupRoles)[ CD ]
Line_124 $$ if (roleIds != null) -->Line_125 $$ removeRoleIds = ListUtil.toList(oldRoleIds)[ CD ]
Line_157 $$ for (UserGroupRole userGroupRole : userGroupRoles) -->Line_166 $$ if (oldSiteUserGroupRoles.contains(userGroupRole)) [ FD ]
Line_60 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_65 $$ UsersAdminUtil.updateEmailAddresses(Contact.class.getName(), user.getContactId(), emailAddresses)[ FD ]
Line_67 $$ if (phones != null) -->Line_68 $$ UsersAdminUtil.updatePhones(Contact.class.getName(), user.getContactId(), phones)[ CD ]
Line_109 $$ for (long organizationId : organizationIds) -->Line_110 $$ if (ArrayUtil.contains(oldOrganizationIds, organizationId)) [ FD ]
Line_141 $$ for (UserGroupRole oldUserGroupRole : oldUserGroupRoles) -->Line_146 $$ oldSiteUserGroupRoles.add(oldUserGroupRole)[ FD ]
Line_60 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_200 $$ SiteMembershipPolicyUtil.propagateMembership(new long[] [ FD ]
Line_157 $$ for (UserGroupRole userGroupRole : userGroupRoles) -->Line_169 $$ addSiteUserGroupRoles.add(userGroupRole)[ FD ]
Line_127 $$ for (long roleId : roleIds) -->Line_131 $$ addRoleIds.add(roleId)[ FD ]
Line_127 $$ for (long roleId : roleIds) -->Line_128 $$ if (ArrayUtil.contains(oldRoleIds, roleId)) [ FD ]
Line_105 $$ List<Long> removeOrganizationIds = Collections.emptyList()-->Line_107 $$ removeOrganizationIds = ListUtil.toList(oldOrganizationIds)[ FD ]
Line_123 $$ List<Long> removeRoleIds = Collections.emptyList()-->Line_129 $$ removeRoleIds.remove(roleId)[ FD ]
Line_157 $$ for (UserGroupRole userGroupRole : userGroupRoles) -->Line_167 $$ removeSiteUserGroupRoles.remove(userGroupRole)[ FD ]
Line_89 $$ removeGroupIds = ListUtil.toList(oldGroupIds)-->Line_93 $$ removeGroupIds.remove(groupId)[ FD ]
Line_87 $$ List<Long> removeGroupIds = Collections.emptyList()-->Line_93 $$ removeGroupIds.remove(groupId)[ FD ]
Line_73 $$ if (announcementsDelivers != null) -->Line_74 $$ updateAnnouncementsDeliveries(user.getUserId(), announcementsDelivers)[ CD ]
Line_70 $$ if (websites != null) -->Line_71 $$ UsersAdminUtil.updateWebsites(Contact.class.getName(), user.getContactId(), websites)[ CD ]
Line_104 $$ List<Long> addOrganizationIds = new ArrayList()-->Line_116 $$ if (!addOrganizationIds.isEmpty() || !removeOrganizationIds.isEmpty()) [ FD ]
Line_88 $$ if (groupIds != null) -->Line_98 $$ if (!addGroupIds.isEmpty() || !removeGroupIds.isEmpty()) [ CD ]
Line_156 $$ removeSiteUserGroupRoles = ListUtil.copy(oldSiteUserGroupRoles)-->Line_167 $$ removeSiteUserGroupRoles.remove(userGroupRole)[ FD ]
Line_187 $$ for (long userGroupId : userGroupIds) -->Line_189 $$ removeUserGroupIds.remove(userGroupId)[ FD ]
Line_87 $$ List<Long> removeGroupIds = Collections.emptyList()-->Line_200 $$ SiteMembershipPolicyUtil.propagateMembership(new long[] [ FD ]
Line_138 $$ List<UserGroupRole> oldOrganizationUserGroupRoles = new ArrayList()-->Line_144 $$ oldOrganizationUserGroupRoles.add(oldUserGroupRole)[ FD ]
Line_153 $$ if (userGroupRoles != null) -->Line_173 $$ if (!addOrganizationUserGroupRoles.isEmpty() || !removeOrganizationUserGroupRoles.isEmpty()) [ CD ]
Line_183 $$ List<Long> removeUserGroupIds = Collections.emptyList()-->Line_214 $$ if (!addUserGroupIds.isEmpty() || !removeUserGroupIds.isEmpty()) [ FD ]
Line_157 $$ for (UserGroupRole userGroupRole : userGroupRoles) -->Line_163 $$ addOrganizationUserGroupRoles.add(userGroupRole)[ FD ]
Line_107 $$ removeOrganizationIds = ListUtil.toList(oldOrganizationIds)-->Line_203 $$ OrganizationMembershipPolicyUtil.propagateMembership(new long[] [ FD ]
Line_123 $$ List<Long> removeRoleIds = Collections.emptyList()-->Line_205 $$ if (!addRoleIds.isEmpty() || !removeRoleIds.isEmpty()) [ FD ]
Line_194 $$ if (!addUserGroupIds.isEmpty() || !removeUserGroupIds.isEmpty()) -->Line_195 $$ UserGroupMembershipPolicyUtil.checkMembership(new long[] [ CD ]
Line_156 $$ removeSiteUserGroupRoles = ListUtil.copy(oldSiteUserGroupRoles)-->Line_177 $$ SiteMembershipPolicyUtil.checkRoles(addSiteUserGroupRoles, removeSiteUserGroupRoles)[ FD ]
Line_157 $$ for (UserGroupRole userGroupRole : userGroupRoles) -->Line_160 $$ if (oldOrganizationUserGroupRoles.contains(userGroupRole)) [ FD ]
Line_153 $$ if (userGroupRoles != null) -->Line_155 $$ removeOrganizationUserGroupRoles = ListUtil.copy(oldOrganizationUserGroupRoles)[ CD ]
Line_86 $$ List<Long> addGroupIds = new ArrayList()-->Line_99 $$ SiteMembershipPolicyUtil.checkMembership(new long[] [ FD ]
Line_156 $$ removeSiteUserGroupRoles = ListUtil.copy(oldSiteUserGroupRoles)-->Line_176 $$ if (!addSiteUserGroupRoles.isEmpty() || !removeSiteUserGroupRoles.isEmpty()) [ FD ]
Line_60 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_74 $$ updateAnnouncementsDeliveries(user.getUserId(), announcementsDelivers)[ FD ]
Line_187 $$ for (long userGroupId : userGroupIds) -->Line_191 $$ addUserGroupIds.add(userGroupId)[ FD ]
Line_166 $$ if (oldSiteUserGroupRoles.contains(userGroupRole)) -->Line_167 $$ removeSiteUserGroupRoles.remove(userGroupRole)[ CD ]
Line_105 $$ List<Long> removeOrganizationIds = Collections.emptyList()-->Line_116 $$ if (!addOrganizationIds.isEmpty() || !removeOrganizationIds.isEmpty()) [ FD ]
Line_122 $$ List<Long> addRoleIds = new ArrayList()-->Line_134 $$ if (!addRoleIds.isEmpty() || !removeRoleIds.isEmpty()) [ FD ]
Line_78 $$ emailAddress = StringUtil.toLowerCase(emailAddress.trim())-->Line_198 $$ user = userLocalService.updateUser(userId, oldPassword, newPassword1, newPassword2, passwordReset, reminderQueryQuestion, reminderQueryAnswer, screenName, emailAddress, facebookId, openId, portrait, portraitBytes, languageId, timeZoneId, greeting, comments, firstName, middleName, lastName, prefixId, suffixId, male, birthdayMonth, birthdayDay, birthdayYear, smsSn, facebookSn, jabberSn, skypeSn, twitterSn, jobTitle, groupIds, organizationIds, roleIds, userGroupRoles, userGroupIds, serviceContext)[ FD ]
Line_155 $$ removeOrganizationUserGroupRoles = ListUtil.copy(oldOrganizationUserGroupRoles)-->Line_212 $$ OrganizationMembershipPolicyUtil.propagateRoles(addOrganizationUserGroupRoles, removeOrganizationUserGroupRoles)[ FD ]
Line_198 $$ user = userLocalService.updateUser(userId, oldPassword, newPassword1, newPassword2, passwordReset, reminderQueryQuestion, reminderQueryAnswer, screenName, emailAddress, facebookId, openId, portrait, portraitBytes, languageId, timeZoneId, greeting, comments, firstName, middleName, lastName, prefixId, suffixId, male, birthdayMonth, birthdayDay, birthdayYear, smsSn, facebookSn, jabberSn, skypeSn, twitterSn, jobTitle, groupIds, organizationIds, roleIds, userGroupRoles, userGroupIds, serviceContext)-->Line_203 $$ OrganizationMembershipPolicyUtil.propagateMembership(new long[] [ FD ]
Line_89 $$ removeGroupIds = ListUtil.toList(oldGroupIds)-->Line_199 $$ if (!addGroupIds.isEmpty() || !removeGroupIds.isEmpty()) [ FD ]
Line_139 $$ List<UserGroupRole> oldSiteUserGroupRoles = new ArrayList()-->Line_146 $$ oldSiteUserGroupRoles.add(oldUserGroupRole)[ FD ]
Line_149 $$ List<UserGroupRole> addOrganizationUserGroupRoles = new ArrayList()-->Line_211 $$ if (!addOrganizationUserGroupRoles.isEmpty() || !removeOrganizationUserGroupRoles.isEmpty()) [ FD ]
Line_149 $$ List<UserGroupRole> addOrganizationUserGroupRoles = new ArrayList()-->Line_163 $$ addOrganizationUserGroupRoles.add(userGroupRole)[ FD ]
Line_60 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_203 $$ OrganizationMembershipPolicyUtil.propagateMembership(new long[] [ FD ]
Line_183 $$ List<Long> removeUserGroupIds = Collections.emptyList()-->Line_194 $$ if (!addUserGroupIds.isEmpty() || !removeUserGroupIds.isEmpty()) [ FD ]
Line_153 $$ if (userGroupRoles != null) -->Line_156 $$ removeSiteUserGroupRoles = ListUtil.copy(oldSiteUserGroupRoles)[ CD ]
Line_150 $$ List<UserGroupRole> removeOrganizationUserGroupRoles = Collections.emptyList()-->Line_173 $$ if (!addOrganizationUserGroupRoles.isEmpty() || !removeOrganizationUserGroupRoles.isEmpty()) [ FD ]
Line_202 $$ if (!addOrganizationIds.isEmpty() || !removeOrganizationIds.isEmpty()) -->Line_203 $$ OrganizationMembershipPolicyUtil.propagateMembership(new long[] [ CD ]
Line_205 $$ if (!addRoleIds.isEmpty() || !removeRoleIds.isEmpty()) -->Line_206 $$ RoleMembershipPolicyUtil.propagateRoles(new long[] [ CD ]
Line_122 $$ List<Long> addRoleIds = new ArrayList()-->Line_135 $$ RoleMembershipPolicyUtil.checkRoles(new long[] [ FD ]
Line_98 $$ if (!addGroupIds.isEmpty() || !removeGroupIds.isEmpty()) -->Line_99 $$ SiteMembershipPolicyUtil.checkMembership(new long[] [ CD ]
Line_157 $$ for (UserGroupRole userGroupRole : userGroupRoles) -->Line_161 $$ removeOrganizationUserGroupRoles.remove(userGroupRole)[ FD ]
Line_106 $$ if (organizationIds != null) -->Line_116 $$ if (!addOrganizationIds.isEmpty() || !removeOrganizationIds.isEmpty()) [ CD ]
Line_165 $$ if (role.getType() == RoleConstants.TYPE_SITE) -->Line_166 $$ if (oldSiteUserGroupRoles.contains(userGroupRole)) [ CD ]
Line_182 $$ List<Long> addUserGroupIds = new ArrayList()-->Line_195 $$ UserGroupMembershipPolicyUtil.checkMembership(new long[] [ FD ]
Line_107 $$ removeOrganizationIds = ListUtil.toList(oldOrganizationIds)-->Line_111 $$ removeOrganizationIds.remove(organizationId)[ FD ]
Line_116 $$ if (!addOrganizationIds.isEmpty() || !removeOrganizationIds.isEmpty()) -->Line_117 $$ OrganizationMembershipPolicyUtil.checkMembership(new long[] [ CD ]
Line_183 $$ List<Long> removeUserGroupIds = Collections.emptyList()-->Line_189 $$ removeUserGroupIds.remove(userGroupId)[ FD ]
Line_110 $$ if (ArrayUtil.contains(oldOrganizationIds, organizationId)) -->Line_113 $$ addOrganizationIds.add(organizationId)[ CD ]
Line_214 $$ if (!addUserGroupIds.isEmpty() || !removeUserGroupIds.isEmpty()) -->Line_215 $$ UserGroupMembershipPolicyUtil.propagateMembership(new long[] [ CD ]
Line_105 $$ List<Long> removeOrganizationIds = Collections.emptyList()-->Line_117 $$ OrganizationMembershipPolicyUtil.checkMembership(new long[] [ FD ]
Line_79 $$ if (!StringUtil.equalsIgnoreCase(emailAddress, user.getEmailAddress())) -->Line_80 $$ validateEmailAddress(user, emailAddress)[ CD ]
Line_138 $$ List<UserGroupRole> oldOrganizationUserGroupRoles = new ArrayList()-->Line_160 $$ if (oldOrganizationUserGroupRoles.contains(userGroupRole)) [ FD ]
Line_127 $$ for (long roleId : roleIds) -->Line_129 $$ removeRoleIds.remove(roleId)[ FD ]
Line_153 $$ if (userGroupRoles != null) -->Line_176 $$ if (!addSiteUserGroupRoles.isEmpty() || !removeSiteUserGroupRoles.isEmpty()) [ CD ]
Line_104 $$ List<Long> addOrganizationIds = new ArrayList()-->Line_113 $$ addOrganizationIds.add(organizationId)[ FD ]
Line_123 $$ List<Long> removeRoleIds = Collections.emptyList()-->Line_206 $$ RoleMembershipPolicyUtil.propagateRoles(new long[] [ FD ]
Line_60 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_215 $$ UserGroupMembershipPolicyUtil.propagateMembership(new long[] [ FD ]
Line_134 $$ if (!addRoleIds.isEmpty() || !removeRoleIds.isEmpty()) -->Line_135 $$ RoleMembershipPolicyUtil.checkRoles(new long[] [ CD ]
Line_124 $$ if (roleIds != null) -->Line_126 $$ roleIds = checkRoles(userId, roleIds)[ CD ]
Line_104 $$ List<Long> addOrganizationIds = new ArrayList()-->Line_117 $$ OrganizationMembershipPolicyUtil.checkMembership(new long[] [ FD ]
Line_150 $$ List<UserGroupRole> removeOrganizationUserGroupRoles = Collections.emptyList()-->Line_174 $$ OrganizationMembershipPolicyUtil.checkRoles(addOrganizationUserGroupRoles, removeOrganizationUserGroupRoles)[ FD ]
Line_125 $$ removeRoleIds = ListUtil.toList(oldRoleIds)-->Line_129 $$ removeRoleIds.remove(roleId)[ FD ]
Line_88 $$ if (groupIds != null) -->Line_90 $$ groupIds = checkGroups(userId, groupIds)[ CD ]
Line_125 $$ removeRoleIds = ListUtil.toList(oldRoleIds)-->Line_135 $$ RoleMembershipPolicyUtil.checkRoles(new long[] [ FD ]
Line_157 $$ for (UserGroupRole userGroupRole : userGroupRoles) -->Line_158 $$ Role role = userGroupRole.getRole()[ FD ]
Line_198 $$ user = userLocalService.updateUser(userId, oldPassword, newPassword1, newPassword2, passwordReset, reminderQueryQuestion, reminderQueryAnswer, screenName, emailAddress, facebookId, openId, portrait, portraitBytes, languageId, timeZoneId, greeting, comments, firstName, middleName, lastName, prefixId, suffixId, male, birthdayMonth, birthdayDay, birthdayYear, smsSn, facebookSn, jabberSn, skypeSn, twitterSn, jobTitle, groupIds, organizationIds, roleIds, userGroupRoles, userGroupIds, serviceContext)-->Line_215 $$ UserGroupMembershipPolicyUtil.propagateMembership(new long[] [ FD ]
Line_143 $$ if (role.getType() == RoleConstants.TYPE_ORGANIZATION) -->Line_144 $$ oldOrganizationUserGroupRoles.add(oldUserGroupRole)[ CD ]
Line_185 $$ removeUserGroupIds = ListUtil.toList(oldUserGroupIds)-->Line_195 $$ UserGroupMembershipPolicyUtil.checkMembership(new long[] [ FD ]
Line_107 $$ removeOrganizationIds = ListUtil.toList(oldOrganizationIds)-->Line_202 $$ if (!addOrganizationIds.isEmpty() || !removeOrganizationIds.isEmpty()) [ FD ]
Line_152 $$ List<UserGroupRole> removeSiteUserGroupRoles = Collections.emptyList()-->Line_176 $$ if (!addSiteUserGroupRoles.isEmpty() || !removeSiteUserGroupRoles.isEmpty()) [ FD ]
Line_126 $$ roleIds = checkRoles(userId, roleIds)-->Line_198 $$ user = userLocalService.updateUser(userId, oldPassword, newPassword1, newPassword2, passwordReset, reminderQueryQuestion, reminderQueryAnswer, screenName, emailAddress, facebookId, openId, portrait, portraitBytes, languageId, timeZoneId, greeting, comments, firstName, middleName, lastName, prefixId, suffixId, male, birthdayMonth, birthdayDay, birthdayYear, smsSn, facebookSn, jabberSn, skypeSn, twitterSn, jobTitle, groupIds, organizationIds, roleIds, userGroupRoles, userGroupIds, serviceContext)[ FD ]
Line_89 $$ removeGroupIds = ListUtil.toList(oldGroupIds)-->Line_99 $$ SiteMembershipPolicyUtil.checkMembership(new long[] [ FD ]
Line_60 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_83 $$ validateUpdatePermission(user, screenName, emailAddress, firstName, middleName, lastName, prefixId, suffixId, birthdayMonth, birthdayDay, birthdayYear, male, jobTitle)[ FD ]
Line_91 $$ for (long groupId : groupIds) -->Line_93 $$ removeGroupIds.remove(groupId)[ FD ]
Line_107 $$ removeOrganizationIds = ListUtil.toList(oldOrganizationIds)-->Line_117 $$ OrganizationMembershipPolicyUtil.checkMembership(new long[] [ FD ]
Line_86 $$ List<Long> addGroupIds = new ArrayList()-->Line_98 $$ if (!addGroupIds.isEmpty() || !removeGroupIds.isEmpty()) [ FD ]
Line_149 $$ List<UserGroupRole> addOrganizationUserGroupRoles = new ArrayList()-->Line_174 $$ OrganizationMembershipPolicyUtil.checkRoles(addOrganizationUserGroupRoles, removeOrganizationUserGroupRoles)[ FD ]
Line_122 $$ List<Long> addRoleIds = new ArrayList()-->Line_206 $$ RoleMembershipPolicyUtil.propagateRoles(new long[] [ FD ]
Line_151 $$ List<UserGroupRole> addSiteUserGroupRoles = new ArrayList()-->Line_169 $$ addSiteUserGroupRoles.add(userGroupRole)[ FD ]
Line_182 $$ List<Long> addUserGroupIds = new ArrayList()-->Line_191 $$ addUserGroupIds.add(userGroupId)[ FD ]
Line_91 $$ for (long groupId : groupIds) -->Line_92 $$ if (ArrayUtil.contains(oldGroupIds, groupId)) [ FD ]
Line_145 $$ if (role.getType() == RoleConstants.TYPE_SITE) -->Line_146 $$ oldSiteUserGroupRoles.add(oldUserGroupRole)[ CD ]
Line_106 $$ if (organizationIds != null) -->Line_108 $$ organizationIds = checkOrganizations(userId, organizationIds)[ CD ]
Line_150 $$ List<UserGroupRole> removeOrganizationUserGroupRoles = Collections.emptyList()-->Line_155 $$ removeOrganizationUserGroupRoles = ListUtil.copy(oldOrganizationUserGroupRoles)[ FD ]
Line_139 $$ List<UserGroupRole> oldSiteUserGroupRoles = new ArrayList()-->Line_166 $$ if (oldSiteUserGroupRoles.contains(userGroupRole)) [ FD ]
Line_89 $$ removeGroupIds = ListUtil.toList(oldGroupIds)-->Line_98 $$ if (!addGroupIds.isEmpty() || !removeGroupIds.isEmpty()) [ FD ]
Line_160 $$ if (oldOrganizationUserGroupRoles.contains(userGroupRole)) -->Line_161 $$ removeOrganizationUserGroupRoles.remove(userGroupRole)[ CD ]
Line_184 $$ if (userGroupIds != null) -->Line_194 $$ if (!addUserGroupIds.isEmpty() || !removeUserGroupIds.isEmpty()) [ CD ]
Line_142 $$ Role role = oldUserGroupRole.getRole()-->Line_159 $$ if (role.getType() == RoleConstants.TYPE_ORGANIZATION) [ FD ]
Line_122 $$ List<Long> addRoleIds = new ArrayList()-->Line_131 $$ addRoleIds.add(roleId)[ FD ]
Line_86 $$ List<Long> addGroupIds = new ArrayList()-->Line_199 $$ if (!addGroupIds.isEmpty() || !removeGroupIds.isEmpty()) [ FD ]
Line_105 $$ List<Long> removeOrganizationIds = Collections.emptyList()-->Line_202 $$ if (!addOrganizationIds.isEmpty() || !removeOrganizationIds.isEmpty()) [ FD ]
Line_106 $$ if (organizationIds != null) -->Line_107 $$ removeOrganizationIds = ListUtil.toList(oldOrganizationIds)[ CD ]
Line_60 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_198 $$ user = userLocalService.updateUser(userId, oldPassword, newPassword1, newPassword2, passwordReset, reminderQueryQuestion, reminderQueryAnswer, screenName, emailAddress, facebookId, openId, portrait, portraitBytes, languageId, timeZoneId, greeting, comments, firstName, middleName, lastName, prefixId, suffixId, male, birthdayMonth, birthdayDay, birthdayYear, smsSn, facebookSn, jabberSn, skypeSn, twitterSn, jobTitle, groupIds, organizationIds, roleIds, userGroupRoles, userGroupIds, serviceContext)[ FD ]
Line_142 $$ Role role = oldUserGroupRole.getRole()-->Line_145 $$ if (role.getType() == RoleConstants.TYPE_SITE) [ FD ]
Line_182 $$ List<Long> addUserGroupIds = new ArrayList()-->Line_215 $$ UserGroupMembershipPolicyUtil.propagateMembership(new long[] [ FD ]
Line_87 $$ List<Long> removeGroupIds = Collections.emptyList()-->Line_89 $$ removeGroupIds = ListUtil.toList(oldGroupIds)[ FD ]
Line_152 $$ List<UserGroupRole> removeSiteUserGroupRoles = Collections.emptyList()-->Line_177 $$ SiteMembershipPolicyUtil.checkRoles(addSiteUserGroupRoles, removeSiteUserGroupRoles)[ FD ]
Line_166 $$ if (oldSiteUserGroupRoles.contains(userGroupRole)) -->Line_169 $$ addSiteUserGroupRoles.add(userGroupRole)[ CD ]
Line_188 $$ if (ArrayUtil.contains(oldUserGroupIds, userGroupId)) -->Line_189 $$ removeUserGroupIds.remove(userGroupId)[ CD ]
Line_78 $$ emailAddress = StringUtil.toLowerCase(emailAddress.trim())-->Line_83 $$ validateUpdatePermission(user, screenName, emailAddress, firstName, middleName, lastName, prefixId, suffixId, birthdayMonth, birthdayDay, birthdayYear, male, jobTitle)[ FD ]
Line_122 $$ List<Long> addRoleIds = new ArrayList()-->Line_205 $$ if (!addRoleIds.isEmpty() || !removeRoleIds.isEmpty()) [ FD ]
Line_60 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_206 $$ RoleMembershipPolicyUtil.propagateRoles(new long[] [ FD ]
Line_188 $$ if (ArrayUtil.contains(oldUserGroupIds, userGroupId)) -->Line_191 $$ addUserGroupIds.add(userGroupId)[ CD ]
Line_91 $$ for (long groupId : groupIds) -->Line_95 $$ addGroupIds.add(groupId)[ FD ]
Line_105 $$ List<Long> removeOrganizationIds = Collections.emptyList()-->Line_203 $$ OrganizationMembershipPolicyUtil.propagateMembership(new long[] [ FD ]
Line_182 $$ List<Long> addUserGroupIds = new ArrayList()-->Line_214 $$ if (!addUserGroupIds.isEmpty() || !removeUserGroupIds.isEmpty()) [ FD ]
Line_87 $$ List<Long> removeGroupIds = Collections.emptyList()-->Line_199 $$ if (!addGroupIds.isEmpty() || !removeGroupIds.isEmpty()) [ FD ]
Line_199 $$ if (!addGroupIds.isEmpty() || !removeGroupIds.isEmpty()) -->Line_200 $$ SiteMembershipPolicyUtil.propagateMembership(new long[] [ CD ]
Line_143 $$ if (role.getType() == RoleConstants.TYPE_ORGANIZATION) -->Line_145 $$ if (role.getType() == RoleConstants.TYPE_SITE) [ CD ]
Line_104 $$ List<Long> addOrganizationIds = new ArrayList()-->Line_202 $$ if (!addOrganizationIds.isEmpty() || !removeOrganizationIds.isEmpty()) [ FD ]
Line_104 $$ List<Long> addOrganizationIds = new ArrayList()-->Line_203 $$ OrganizationMembershipPolicyUtil.propagateMembership(new long[] [ FD ]
Line_154 $$ userGroupRoles = checkUserGroupRoles(userId, userGroupRoles)-->Line_198 $$ user = userLocalService.updateUser(userId, oldPassword, newPassword1, newPassword2, passwordReset, reminderQueryQuestion, reminderQueryAnswer, screenName, emailAddress, facebookId, openId, portrait, portraitBytes, languageId, timeZoneId, greeting, comments, firstName, middleName, lastName, prefixId, suffixId, male, birthdayMonth, birthdayDay, birthdayYear, smsSn, facebookSn, jabberSn, skypeSn, twitterSn, jobTitle, groupIds, organizationIds, roleIds, userGroupRoles, userGroupIds, serviceContext)[ FD ]
Line_109 $$ for (long organizationId : organizationIds) -->Line_113 $$ addOrganizationIds.add(organizationId)[ FD ]
Line_141 $$ for (UserGroupRole oldUserGroupRole : oldUserGroupRoles) -->Line_144 $$ oldOrganizationUserGroupRoles.add(oldUserGroupRole)[ FD ]
Line_86 $$ List<Long> addGroupIds = new ArrayList()-->Line_200 $$ SiteMembershipPolicyUtil.propagateMembership(new long[] [ FD ]
Line_64 $$ if (emailAddresses != null) -->Line_65 $$ UsersAdminUtil.updateEmailAddresses(Contact.class.getName(), user.getContactId(), emailAddresses)[ CD ]
Line_90 $$ groupIds = checkGroups(userId, groupIds)-->Line_198 $$ user = userLocalService.updateUser(userId, oldPassword, newPassword1, newPassword2, passwordReset, reminderQueryQuestion, reminderQueryAnswer, screenName, emailAddress, facebookId, openId, portrait, portraitBytes, languageId, timeZoneId, greeting, comments, firstName, middleName, lastName, prefixId, suffixId, male, birthdayMonth, birthdayDay, birthdayYear, smsSn, facebookSn, jabberSn, skypeSn, twitterSn, jobTitle, groupIds, organizationIds, roleIds, userGroupRoles, userGroupIds, serviceContext)[ FD ]
Line_185 $$ removeUserGroupIds = ListUtil.toList(oldUserGroupIds)-->Line_214 $$ if (!addUserGroupIds.isEmpty() || !removeUserGroupIds.isEmpty()) [ FD ]
Line_60 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_80 $$ validateEmailAddress(user, emailAddress)[ FD ]
Line_183 $$ List<Long> removeUserGroupIds = Collections.emptyList()-->Line_215 $$ UserGroupMembershipPolicyUtil.propagateMembership(new long[] [ FD ]
Line_185 $$ removeUserGroupIds = ListUtil.toList(oldUserGroupIds)-->Line_215 $$ UserGroupMembershipPolicyUtil.propagateMembership(new long[] [ FD ]
Line_184 $$ if (userGroupIds != null) -->Line_186 $$ userGroupIds = checkUserGroupIds(userId, userGroupIds)[ CD ]
Line_150 $$ List<UserGroupRole> removeOrganizationUserGroupRoles = Collections.emptyList()-->Line_161 $$ removeOrganizationUserGroupRoles.remove(userGroupRole)[ FD ]
Line_141 $$ for (UserGroupRole oldUserGroupRole : oldUserGroupRoles) -->Line_142 $$ Role role = oldUserGroupRole.getRole()[ FD ]
Line_159 $$ if (role.getType() == RoleConstants.TYPE_ORGANIZATION) -->Line_160 $$ if (oldOrganizationUserGroupRoles.contains(userGroupRole)) [ CD ]
Line_152 $$ List<UserGroupRole> removeSiteUserGroupRoles = Collections.emptyList()-->Line_167 $$ removeSiteUserGroupRoles.remove(userGroupRole)[ FD ]
Line_185 $$ removeUserGroupIds = ListUtil.toList(oldUserGroupIds)-->Line_189 $$ removeUserGroupIds.remove(userGroupId)[ FD ]
Line_186 $$ userGroupIds = checkUserGroupIds(userId, userGroupIds)-->Line_198 $$ user = userLocalService.updateUser(userId, oldPassword, newPassword1, newPassword2, passwordReset, reminderQueryQuestion, reminderQueryAnswer, screenName, emailAddress, facebookId, openId, portrait, portraitBytes, languageId, timeZoneId, greeting, comments, firstName, middleName, lastName, prefixId, suffixId, male, birthdayMonth, birthdayDay, birthdayYear, smsSn, facebookSn, jabberSn, skypeSn, twitterSn, jobTitle, groupIds, organizationIds, roleIds, userGroupRoles, userGroupIds, serviceContext)[ FD ]
Line_60 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_79 $$ if (!StringUtil.equalsIgnoreCase(emailAddress, user.getEmailAddress())) [ FD ]
Line_155 $$ removeOrganizationUserGroupRoles = ListUtil.copy(oldOrganizationUserGroupRoles)-->Line_174 $$ OrganizationMembershipPolicyUtil.checkRoles(addOrganizationUserGroupRoles, removeOrganizationUserGroupRoles)[ FD ]
Line_187 $$ for (long userGroupId : userGroupIds) -->Line_188 $$ if (ArrayUtil.contains(oldUserGroupIds, userGroupId)) [ FD ]
Line_125 $$ removeRoleIds = ListUtil.toList(oldRoleIds)-->Line_206 $$ RoleMembershipPolicyUtil.propagateRoles(new long[] [ FD ]
Line_156 $$ removeSiteUserGroupRoles = ListUtil.copy(oldSiteUserGroupRoles)-->Line_209 $$ SiteMembershipPolicyUtil.propagateRoles(addSiteUserGroupRoles, removeSiteUserGroupRoles)[ FD ]
Line_211 $$ if (!addOrganizationUserGroupRoles.isEmpty() || !removeOrganizationUserGroupRoles.isEmpty()) -->Line_212 $$ OrganizationMembershipPolicyUtil.propagateRoles(addOrganizationUserGroupRoles, removeOrganizationUserGroupRoles)[ CD ]
Line_173 $$ if (!addOrganizationUserGroupRoles.isEmpty() || !removeOrganizationUserGroupRoles.isEmpty()) -->Line_174 $$ OrganizationMembershipPolicyUtil.checkRoles(addOrganizationUserGroupRoles, removeOrganizationUserGroupRoles)[ CD ]
Line_153 $$ if (userGroupRoles != null) -->Line_154 $$ userGroupRoles = checkUserGroupRoles(userId, userGroupRoles)[ CD ]
Line_105 $$ List<Long> removeOrganizationIds = Collections.emptyList()-->Line_111 $$ removeOrganizationIds.remove(organizationId)[ FD ]
Line_87 $$ List<Long> removeGroupIds = Collections.emptyList()-->Line_99 $$ SiteMembershipPolicyUtil.checkMembership(new long[] [ FD ]
Line_128 $$ if (ArrayUtil.contains(oldRoleIds, roleId)) -->Line_131 $$ addRoleIds.add(roleId)[ CD ]
Line_150 $$ List<UserGroupRole> removeOrganizationUserGroupRoles = Collections.emptyList()-->Line_211 $$ if (!addOrganizationUserGroupRoles.isEmpty() || !removeOrganizationUserGroupRoles.isEmpty()) [ FD ]
Line_60 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_71 $$ UsersAdminUtil.updateWebsites(Contact.class.getName(), user.getContactId(), websites)[ FD ]
Line_198 $$ user = userLocalService.updateUser(userId, oldPassword, newPassword1, newPassword2, passwordReset, reminderQueryQuestion, reminderQueryAnswer, screenName, emailAddress, facebookId, openId, portrait, portraitBytes, languageId, timeZoneId, greeting, comments, firstName, middleName, lastName, prefixId, suffixId, male, birthdayMonth, birthdayDay, birthdayYear, smsSn, facebookSn, jabberSn, skypeSn, twitterSn, jobTitle, groupIds, organizationIds, roleIds, userGroupRoles, userGroupIds, serviceContext)-->Line_206 $$ RoleMembershipPolicyUtil.propagateRoles(new long[] [ FD ]
Line_149 $$ List<UserGroupRole> addOrganizationUserGroupRoles = new ArrayList()-->Line_212 $$ OrganizationMembershipPolicyUtil.propagateRoles(addOrganizationUserGroupRoles, removeOrganizationUserGroupRoles)[ FD ]
Line_159 $$ if (role.getType() == RoleConstants.TYPE_ORGANIZATION) -->Line_165 $$ if (role.getType() == RoleConstants.TYPE_SITE) [ CD ]
Line_123 $$ List<Long> removeRoleIds = Collections.emptyList()-->Line_135 $$ RoleMembershipPolicyUtil.checkRoles(new long[] [ FD ]
