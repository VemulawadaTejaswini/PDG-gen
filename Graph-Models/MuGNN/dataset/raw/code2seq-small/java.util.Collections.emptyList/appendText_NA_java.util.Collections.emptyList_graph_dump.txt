Line_2 $$ public List<FileLink> appendText(String text) -->Line_6 $$ if (indexOfNewline == -1) [ CD ]
Line_2 $$ public List<FileLink> appendText(String text) -->Line_24 $$ return subFileLinks[ CD ]
Line_18 $$ while (iterator.hasNext()) -->Line_20 $$ fileLink.move(lastNewline)[ CD ]
Line_18 $$ while (iterator.hasNext()) -->Line_19 $$ FileLink fileLink = iterator.next()[ CD ]
Line_2 $$ public List<FileLink> appendText(String text) -->Line_22 $$ fileLinks.addAll(subFileLinks)[ CD ]
Line_2 $$ public List<FileLink> appendText(String text) -->Line_5 $$ int indexOfNewline = text.lastIndexOf('\n')[ FD ]
Line_2 $$ public List<FileLink> appendText(String text) -->Line_5 $$ int indexOfNewline = text.lastIndexOf('\n')[ CD ]
Line_5 $$ int indexOfNewline = text.lastIndexOf('\n')-->Line_6 $$ if (indexOfNewline == -1) [ FD ]
Line_2 $$ public List<FileLink> appendText(String text) -->Line_18 $$ while (iterator.hasNext()) [ CD ]
Line_19 $$ FileLink fileLink = iterator.next()-->Line_20 $$ fileLink.move(lastNewline)[ FD ]
Line_2 $$ public List<FileLink> appendText(String text) -->Line_4 $$ totalTextToParse.append(text)[ FD ]
Line_2 $$ public List<FileLink> appendText(String text) -->Line_3 $$ int oldTotalSize = totalTextToParse.length()[ CD ]
Line_2 $$ public List<FileLink> appendText(String text) -->Line_4 $$ totalTextToParse.append(text)[ CD ]
