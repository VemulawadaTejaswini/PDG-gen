Line_13 $$ helpersPath = remoteSdkData.getHelpersPath()-->Line_15 $$ if (!StringUtil.isEmpty(helpersPath)) [ FD ]
Line_15 $$ if (!StringUtil.isEmpty(helpersPath)) -->Line_18 $$ return null[ CD ]
Line_9 $$ if (remoteSdkData.connectionCredentials().getRemoteConnectionType() != CredentialsType.DOCKER) -->Line_13 $$ helpersPath = remoteSdkData.getHelpersPath()[ CD ]
Line_10 $$ final RemoteSdkCredentials remoteSdkCredentials = remoteSdkData.getRemoteSdkCredentials(false)-->Line_11 $$ helpersPath = remoteSdkCredentials.getHelpersPath()[ FD ]
Line_3 $$ final Sdk sdk = getSdk()-->Line_4 $$ final SdkAdditionalData sdkData = sdk.getSdkAdditionalData()[ FD ]
Line_9 $$ if (remoteSdkData.connectionCredentials().getRemoteConnectionType() != CredentialsType.DOCKER) -->Line_10 $$ final RemoteSdkCredentials remoteSdkCredentials = remoteSdkData.getRemoteSdkCredentials(false)[ CD ]
Line_2 $$ protected String getHelperPath(String helper) throws ExecutionException -->Line_3 $$ final Sdk sdk = getSdk()[ CD ]
Line_8 $$ String helpersPath-->Line_15 $$ if (!StringUtil.isEmpty(helpersPath)) [ FD ]
Line_8 $$ String helpersPath-->Line_11 $$ helpersPath = remoteSdkCredentials.getHelpersPath()[ FD ]
Line_2 $$ protected String getHelperPath(String helper) throws ExecutionException -->Line_5 $$ if (sdkData instanceof PyRemoteSdkAdditionalDataBase) [ CD ]
Line_6 $$ final PyRemoteSdkAdditionalDataBase remoteSdkData = (PyRemoteSdkAdditionalDataBase) sdkData-->Line_9 $$ if (remoteSdkData.connectionCredentials().getRemoteConnectionType() != CredentialsType.DOCKER) [ FD ]
Line_8 $$ String helpersPath-->Line_13 $$ helpersPath = remoteSdkData.getHelpersPath()[ FD ]
Line_9 $$ if (remoteSdkData.connectionCredentials().getRemoteConnectionType() != CredentialsType.DOCKER) -->Line_11 $$ helpersPath = remoteSdkCredentials.getHelpersPath()[ CD ]
Line_2 $$ protected String getHelperPath(String helper) throws ExecutionException -->Line_23 $$ throw analyzeException(e, helper, Collections.<String>emptyList())[ FD ]
Line_2 $$ protected String getHelperPath(String helper) throws ExecutionException -->Line_4 $$ final SdkAdditionalData sdkData = sdk.getSdkAdditionalData()[ CD ]
Line_6 $$ final PyRemoteSdkAdditionalDataBase remoteSdkData = (PyRemoteSdkAdditionalDataBase) sdkData-->Line_10 $$ final RemoteSdkCredentials remoteSdkCredentials = remoteSdkData.getRemoteSdkCredentials(false)[ FD ]
Line_11 $$ helpersPath = remoteSdkCredentials.getHelpersPath()-->Line_13 $$ helpersPath = remoteSdkData.getHelpersPath()[ FD ]
Line_11 $$ helpersPath = remoteSdkCredentials.getHelpersPath()-->Line_15 $$ if (!StringUtil.isEmpty(helpersPath)) [ FD ]
Line_6 $$ final PyRemoteSdkAdditionalDataBase remoteSdkData = (PyRemoteSdkAdditionalDataBase) sdkData-->Line_13 $$ helpersPath = remoteSdkData.getHelpersPath()[ FD ]
Line_15 $$ if (!StringUtil.isEmpty(helpersPath)) -->Line_16 $$ return new RemoteFile(helpersPath, helper).getPath()[ CD ]
Line_5 $$ if (sdkData instanceof PyRemoteSdkAdditionalDataBase) -->Line_6 $$ final PyRemoteSdkAdditionalDataBase remoteSdkData = (PyRemoteSdkAdditionalDataBase) sdkData[ CD ]
Line_2 $$ protected String getHelperPath(String helper) throws ExecutionException -->Line_26 $$ return null[ CD ]
Line_4 $$ final SdkAdditionalData sdkData = sdk.getSdkAdditionalData()-->Line_5 $$ if (sdkData instanceof PyRemoteSdkAdditionalDataBase) [ FD ]
