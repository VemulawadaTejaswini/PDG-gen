Line_2 $$ private List<PermissionFactory> parsePermissions(final VirtualFile file, final ModuleLoader loader, final ModuleIdentifier identifier) throws DeploymentUnitProcessingException -->Line_9 $$ return PermissionsParser.parse(xmlReader, loader, identifier)[ FD ]
Line_5 $$ inputStream = file.openStream()-->Line_8 $$ XMLStreamReader xmlReader = inputFactory.createXMLStreamReader(inputStream)[ FD ]
Line_5 $$ inputStream = file.openStream()-->Line_15 $$ inputStream.close()[ FD ]
Line_3 $$ InputStream inputStream = null-->Line_14 $$ if (inputStream != null) [ FD ]
Line_5 $$ inputStream = file.openStream()-->Line_14 $$ if (inputStream != null) [ FD ]
Line_2 $$ private List<PermissionFactory> parsePermissions(final VirtualFile file, final ModuleLoader loader, final ModuleIdentifier identifier) throws DeploymentUnitProcessingException -->Line_3 $$ InputStream inputStream = null[ CD ]
Line_2 $$ private List<PermissionFactory> parsePermissions(final VirtualFile file, final ModuleLoader loader, final ModuleIdentifier identifier) throws DeploymentUnitProcessingException -->Line_5 $$ inputStream = file.openStream()[ FD ]
Line_8 $$ XMLStreamReader xmlReader = inputFactory.createXMLStreamReader(inputStream)-->Line_9 $$ return PermissionsParser.parse(xmlReader, loader, identifier)[ FD ]
Line_3 $$ InputStream inputStream = null-->Line_8 $$ XMLStreamReader xmlReader = inputFactory.createXMLStreamReader(inputStream)[ FD ]
Line_3 $$ InputStream inputStream = null-->Line_15 $$ inputStream.close()[ FD ]
Line_3 $$ InputStream inputStream = null-->Line_5 $$ inputStream = file.openStream()[ FD ]
Line_6 $$ final XMLInputFactory inputFactory = XMLInputFactory.newInstance()-->Line_8 $$ XMLStreamReader xmlReader = inputFactory.createXMLStreamReader(inputStream)[ FD ]
Line_6 $$ final XMLInputFactory inputFactory = XMLInputFactory.newInstance()-->Line_7 $$ inputFactory.setXMLResolver(NoopXMLResolver.create())[ FD ]
Line_14 $$ if (inputStream != null) -->Line_15 $$ inputStream.close()[ CD ]
