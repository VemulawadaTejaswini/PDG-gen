Line_6 $$ final int len1 = dataLen / 4-->Line_8 $$ readAll(in, readData, 0, len1)[ FD ]
Line_15 $$ expectedData = new byte[len1]-->Line_16 $$ System.arraycopy(data, len1, expectedData, 0, len1)[ FD ]
Line_3 $$ OutputStream out = getOutputStream(defaultBufferSize)-->Line_4 $$ writeData(out)[ FD ]
Line_5 $$ InputStream in = getInputStream(defaultBufferSize)-->Line_8 $$ readAll(in, readData, 0, len1)[ FD ]
Line_2 $$ public void testReadFully() throws Exception -->Line_17 $$ Assert.assertArrayEquals(readData, expectedData)[ CD ]
Line_2 $$ public void testReadFully() throws Exception -->Line_14 $$ readAll(in, readData, 0, len1)[ CD ]
Line_13 $$ readData = new byte[len1]-->Line_20 $$ readAll(in, readData, 0, len1)[ FD ]
Line_2 $$ public void testReadFully() throws Exception -->Line_5 $$ InputStream in = getInputStream(defaultBufferSize)[ CD ]
Line_21 $$ expectedData = new byte[len1]-->Line_22 $$ System.arraycopy(data, 2 * len1, expectedData, 0, len1)[ FD ]
Line_19 $$ readData = new byte[len1]-->Line_23 $$ Assert.assertArrayEquals(readData, expectedData)[ FD ]
Line_7 $$ byte[] readData = new byte[len1]-->Line_14 $$ readAll(in, readData, 0, len1)[ FD ]
Line_6 $$ final int len1 = dataLen / 4-->Line_20 $$ readAll(in, readData, 0, len1)[ FD ]
Line_7 $$ byte[] readData = new byte[len1]-->Line_19 $$ readData = new byte[len1][ FD ]
Line_2 $$ public void testReadFully() throws Exception -->Line_22 $$ System.arraycopy(data, 2 * len1, expectedData, 0, len1)[ CD ]
Line_15 $$ expectedData = new byte[len1]-->Line_17 $$ Assert.assertArrayEquals(readData, expectedData)[ FD ]
Line_9 $$ byte[] expectedData = new byte[len1]-->Line_15 $$ expectedData = new byte[len1][ FD ]
Line_5 $$ InputStream in = getInputStream(defaultBufferSize)-->Line_20 $$ readAll(in, readData, 0, len1)[ FD ]
Line_2 $$ public void testReadFully() throws Exception -->Line_21 $$ expectedData = new byte[len1][ CD ]
Line_2 $$ public void testReadFully() throws Exception -->Line_8 $$ readAll(in, readData, 0, len1)[ CD ]
Line_2 $$ public void testReadFully() throws Exception -->Line_4 $$ writeData(out)[ CD ]
Line_2 $$ public void testReadFully() throws Exception -->Line_10 $$ System.arraycopy(data, 0, expectedData, 0, len1)[ CD ]
Line_2 $$ public void testReadFully() throws Exception -->Line_11 $$ Assert.assertArrayEquals(readData, expectedData)[ CD ]
Line_5 $$ InputStream in = getInputStream(defaultBufferSize)-->Line_14 $$ readAll(in, readData, 0, len1)[ FD ]
Line_6 $$ final int len1 = dataLen / 4-->Line_14 $$ readAll(in, readData, 0, len1)[ FD ]
Line_6 $$ final int len1 = dataLen / 4-->Line_16 $$ System.arraycopy(data, len1, expectedData, 0, len1)[ FD ]
Line_2 $$ public void testReadFully() throws Exception -->Line_23 $$ Assert.assertArrayEquals(readData, expectedData)[ CD ]
Line_13 $$ readData = new byte[len1]-->Line_23 $$ Assert.assertArrayEquals(readData, expectedData)[ FD ]
Line_9 $$ byte[] expectedData = new byte[len1]-->Line_16 $$ System.arraycopy(data, len1, expectedData, 0, len1)[ FD ]
Line_5 $$ InputStream in = getInputStream(defaultBufferSize)-->Line_18 $$ readFullyCheck(in, dataLen / 2)[ FD ]
Line_6 $$ final int len1 = dataLen / 4-->Line_22 $$ System.arraycopy(data, 2 * len1, expectedData, 0, len1)[ FD ]
Line_13 $$ readData = new byte[len1]-->Line_17 $$ Assert.assertArrayEquals(readData, expectedData)[ FD ]
Line_13 $$ readData = new byte[len1]-->Line_19 $$ readData = new byte[len1][ FD ]
Line_5 $$ InputStream in = getInputStream(defaultBufferSize)-->Line_24 $$ in.close()[ FD ]
Line_2 $$ public void testReadFully() throws Exception -->Line_13 $$ readData = new byte[len1][ CD ]
Line_2 $$ public void testReadFully() throws Exception -->Line_16 $$ System.arraycopy(data, len1, expectedData, 0, len1)[ CD ]
Line_7 $$ byte[] readData = new byte[len1]-->Line_23 $$ Assert.assertArrayEquals(readData, expectedData)[ FD ]
Line_2 $$ public void testReadFully() throws Exception -->Line_18 $$ readFullyCheck(in, dataLen / 2)[ CD ]
Line_15 $$ expectedData = new byte[len1]-->Line_22 $$ System.arraycopy(data, 2 * len1, expectedData, 0, len1)[ FD ]
Line_2 $$ public void testReadFully() throws Exception -->Line_19 $$ readData = new byte[len1][ CD ]
Line_7 $$ byte[] readData = new byte[len1]-->Line_17 $$ Assert.assertArrayEquals(readData, expectedData)[ FD ]
Line_19 $$ readData = new byte[len1]-->Line_20 $$ readAll(in, readData, 0, len1)[ FD ]
Line_9 $$ byte[] expectedData = new byte[len1]-->Line_21 $$ expectedData = new byte[len1][ FD ]
Line_15 $$ expectedData = new byte[len1]-->Line_21 $$ expectedData = new byte[len1][ FD ]
Line_7 $$ byte[] readData = new byte[len1]-->Line_13 $$ readData = new byte[len1][ FD ]
Line_2 $$ public void testReadFully() throws Exception -->Line_12 $$ readFullyCheck(in, dataLen / 3)[ CD ]
Line_13 $$ readData = new byte[len1]-->Line_14 $$ readAll(in, readData, 0, len1)[ FD ]
Line_2 $$ public void testReadFully() throws Exception -->Line_24 $$ in.close()[ CD ]
Line_9 $$ byte[] expectedData = new byte[len1]-->Line_11 $$ Assert.assertArrayEquals(readData, expectedData)[ FD ]
Line_2 $$ public void testReadFully() throws Exception -->Line_7 $$ byte[] readData = new byte[len1][ CD ]
Line_7 $$ byte[] readData = new byte[len1]-->Line_11 $$ Assert.assertArrayEquals(readData, expectedData)[ FD ]
Line_15 $$ expectedData = new byte[len1]-->Line_23 $$ Assert.assertArrayEquals(readData, expectedData)[ FD ]
Line_9 $$ byte[] expectedData = new byte[len1]-->Line_22 $$ System.arraycopy(data, 2 * len1, expectedData, 0, len1)[ FD ]
Line_2 $$ public void testReadFully() throws Exception -->Line_9 $$ byte[] expectedData = new byte[len1][ CD ]
Line_2 $$ public void testReadFully() throws Exception -->Line_6 $$ final int len1 = dataLen / 4[ CD ]
Line_7 $$ byte[] readData = new byte[len1]-->Line_8 $$ readAll(in, readData, 0, len1)[ FD ]
Line_9 $$ byte[] expectedData = new byte[len1]-->Line_23 $$ Assert.assertArrayEquals(readData, expectedData)[ FD ]
Line_9 $$ byte[] expectedData = new byte[len1]-->Line_17 $$ Assert.assertArrayEquals(readData, expectedData)[ FD ]
Line_9 $$ byte[] expectedData = new byte[len1]-->Line_10 $$ System.arraycopy(data, 0, expectedData, 0, len1)[ FD ]
Line_2 $$ public void testReadFully() throws Exception -->Line_3 $$ OutputStream out = getOutputStream(defaultBufferSize)[ CD ]
Line_21 $$ expectedData = new byte[len1]-->Line_23 $$ Assert.assertArrayEquals(readData, expectedData)[ FD ]
Line_2 $$ public void testReadFully() throws Exception -->Line_20 $$ readAll(in, readData, 0, len1)[ CD ]
Line_5 $$ InputStream in = getInputStream(defaultBufferSize)-->Line_12 $$ readFullyCheck(in, dataLen / 3)[ FD ]
Line_6 $$ final int len1 = dataLen / 4-->Line_10 $$ System.arraycopy(data, 0, expectedData, 0, len1)[ FD ]
Line_2 $$ public void testReadFully() throws Exception -->Line_15 $$ expectedData = new byte[len1][ CD ]
Line_7 $$ byte[] readData = new byte[len1]-->Line_20 $$ readAll(in, readData, 0, len1)[ FD ]
