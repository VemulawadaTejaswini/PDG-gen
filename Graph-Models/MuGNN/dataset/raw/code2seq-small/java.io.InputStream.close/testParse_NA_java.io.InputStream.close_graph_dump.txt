Line_20 $$ if (jBossServiceConfig.getName().equals("jboss.test.service")) -->Line_26 $$ assertEquals("Test Value", arguments[0].getValue())[ CD ]
Line_27 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.second")) -->Line_43 $$ assertEquals("java.lang.String", parameters[0].getType())[ CD ]
Line_14 $$ final JBossServiceXmlDescriptor xmlDescriptor = jBossServiceXmlDescriptorParseResult.getResult()-->Line_15 $$ assertNotNull(xmlDescriptor)[ FD ]
Line_2 $$ public void testParse() throws Exception -->Line_4 $$ final ParseResult<JBossServiceXmlDescriptor> jBossServiceXmlDescriptorParseResult = new ParseResult<JBossServiceXmlDescriptor>()[ CD ]
Line_5 $$ InputStream inputStream = null-->Line_8 $$ final XMLStreamReader reader = inputFactory.createXMLStreamReader(inputStream)[ FD ]
Line_18 $$ for (JBossServiceConfig jBossServiceConfig : serviceConfigs) -->Line_47 $$ final JBossServiceAttributeConfig[] attributeConfigs = jBossServiceConfig.getAttributeConfigs()[ FD ]
Line_27 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.second")) -->Line_31 $$ assertEquals("jboss.test.service", dependencyConfigs[0].getDependencyName())[ CD ]
Line_20 $$ if (jBossServiceConfig.getName().equals("jboss.test.service")) -->Line_21 $$ final JBossServiceConstructorConfig constructorConfig = jBossServiceConfig.getConstructorConfig()[ CD ]
Line_7 $$ inputStream = new FileInputStream(testXmlFile)-->Line_8 $$ final XMLStreamReader reader = inputFactory.createXMLStreamReader(inputStream)[ FD ]
Line_20 $$ if (jBossServiceConfig.getName().equals("jboss.test.service")) -->Line_22 $$ assertNotNull(constructorConfig)[ CD ]
Line_45 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.third")) -->Line_48 $$ assertEquals(2, attributeConfigs.length)[ CD ]
Line_27 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.second")) -->Line_45 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.third")) [ CD ]
Line_20 $$ if (jBossServiceConfig.getName().equals("jboss.test.service")) -->Line_25 $$ assertEquals(String.class.getName(), arguments[0].getType())[ CD ]
Line_2 $$ public void testParse() throws Exception -->Line_17 $$ assertEquals(3, serviceConfigs.size())[ CD ]
Line_51 $$ final JBossServiceAttributeConfig.Inject inject = attributeConfigs[0].getInject()-->Line_54 $$ assertEquals("other", inject.getPropertyName())[ FD ]
Line_5 $$ InputStream inputStream = null-->Line_11 $$ if (inputStream != null)[ FD ]
Line_18 $$ for (JBossServiceConfig jBossServiceConfig : serviceConfigs) -->Line_29 $$ final JBossServiceDependencyConfig[] dependencyConfigs = jBossServiceConfig.getDependencyConfigs()[ FD ]
Line_45 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.third")) -->Line_54 $$ assertEquals("other", inject.getPropertyName())[ CD ]
Line_45 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.third")) -->Line_51 $$ final JBossServiceAttributeConfig.Inject inject = attributeConfigs[0].getInject()[ CD ]
Line_27 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.second")) -->Line_30 $$ assertEquals(1, dependencyConfigs.length)[ CD ]
Line_21 $$ final JBossServiceConstructorConfig constructorConfig = jBossServiceConfig.getConstructorConfig()-->Line_23 $$ final JBossServiceConstructorConfig.Argument[] arguments = constructorConfig.getArguments()[ FD ]
Line_37 $$ final JBossServiceAttributeConfig.ValueFactory valueFactory = attributeConfigs[0].getValueFactory()-->Line_41 $$ final JBossServiceAttributeConfig.ValueFactoryParameter[] parameters = valueFactory.getParameters()[ FD ]
Line_45 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.third")) -->Line_49 $$ assertEquals("other", attributeConfigs[0].getName())[ CD ]
Line_27 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.second")) -->Line_37 $$ final JBossServiceAttributeConfig.ValueFactory valueFactory = attributeConfigs[0].getValueFactory()[ CD ]
Line_45 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.third")) -->Line_53 $$ assertEquals("jboss.test.service.second", inject.getBeanName())[ CD ]
Line_18 $$ for (JBossServiceConfig jBossServiceConfig : serviceConfigs) -->Line_28 $$ assertNull(jBossServiceConfig.getConstructorConfig())[ FD ]
Line_18 $$ for (JBossServiceConfig jBossServiceConfig : serviceConfigs) -->Line_20 $$ if (jBossServiceConfig.getName().equals("jboss.test.service")) [ FD ]
Line_51 $$ final JBossServiceAttributeConfig.Inject inject = attributeConfigs[0].getInject()-->Line_52 $$ assertNotNull(inject)[ FD ]
Line_45 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.third")) -->Line_58 $$ assertEquals("Another test value", attributeConfigs[1].getValue())[ CD ]
Line_2 $$ public void testParse() throws Exception -->Line_16 $$ final List<JBossServiceConfig> serviceConfigs = xmlDescriptor.getServiceConfigs()[ CD ]
Line_37 $$ final JBossServiceAttributeConfig.ValueFactory valueFactory = attributeConfigs[0].getValueFactory()-->Line_38 $$ assertNotNull(valueFactory)[ FD ]
Line_27 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.second")) -->Line_35 $$ assertEquals("somethingElse", attributeConfigs[0].getName())[ CD ]
Line_27 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.second")) -->Line_28 $$ assertNull(jBossServiceConfig.getConstructorConfig())[ CD ]
Line_18 $$ for (JBossServiceConfig jBossServiceConfig : serviceConfigs) -->Line_21 $$ final JBossServiceConstructorConfig constructorConfig = jBossServiceConfig.getConstructorConfig()[ FD ]
Line_45 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.third")) -->Line_46 $$ assertNull(jBossServiceConfig.getConstructorConfig())[ CD ]
Line_7 $$ inputStream = new FileInputStream(testXmlFile)-->Line_12 $$ inputStream.close()[ FD ]
Line_45 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.third")) -->Line_47 $$ final JBossServiceAttributeConfig[] attributeConfigs = jBossServiceConfig.getAttributeConfigs()[ CD ]
Line_45 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.third")) -->Line_50 $$ assertNull(attributeConfigs[0].getValueFactory())[ CD ]
Line_20 $$ if (jBossServiceConfig.getName().equals("jboss.test.service")) -->Line_27 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.second")) [ CD ]
Line_37 $$ final JBossServiceAttributeConfig.ValueFactory valueFactory = attributeConfigs[0].getValueFactory()-->Line_40 $$ assertEquals("appendSomethingElse", valueFactory.getMethodName())[ FD ]
Line_16 $$ final List<JBossServiceConfig> serviceConfigs = xmlDescriptor.getServiceConfigs()-->Line_17 $$ assertEquals(3, serviceConfigs.size())[ FD ]
Line_27 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.second")) -->Line_41 $$ final JBossServiceAttributeConfig.ValueFactoryParameter[] parameters = valueFactory.getParameters()[ CD ]
Line_2 $$ public void testParse() throws Exception -->Line_15 $$ assertNotNull(xmlDescriptor)[ CD ]
Line_18 $$ for (JBossServiceConfig jBossServiceConfig : serviceConfigs) -->Line_45 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.third")) [ FD ]
Line_18 $$ for (JBossServiceConfig jBossServiceConfig : serviceConfigs) -->Line_46 $$ assertNull(jBossServiceConfig.getConstructorConfig())[ FD ]
Line_8 $$ final XMLStreamReader reader = inputFactory.createXMLStreamReader(inputStream)-->Line_9 $$ xmlMapper.parseDocument(jBossServiceXmlDescriptorParseResult, reader)[ FD ]
Line_27 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.second")) -->Line_34 $$ assertEquals(1, attributeConfigs.length)[ CD ]
Line_51 $$ final JBossServiceAttributeConfig.Inject inject = attributeConfigs[0].getInject()-->Line_53 $$ assertEquals("jboss.test.service.second", inject.getBeanName())[ FD ]
Line_5 $$ InputStream inputStream = null-->Line_12 $$ inputStream.close()[ FD ]
Line_27 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.second")) -->Line_42 $$ assertEquals(1, parameters.length)[ CD ]
Line_5 $$ InputStream inputStream = null-->Line_7 $$ inputStream = new FileInputStream(testXmlFile)[ FD ]
Line_18 $$ for (JBossServiceConfig jBossServiceConfig : serviceConfigs) -->Line_27 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.second")) [ FD ]
Line_27 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.second")) -->Line_36 $$ assertNull(attributeConfigs[0].getInject())[ CD ]
Line_18 $$ for (JBossServiceConfig jBossServiceConfig : serviceConfigs) -->Line_33 $$ final JBossServiceAttributeConfig[] attributeConfigs = jBossServiceConfig.getAttributeConfigs()[ FD ]
Line_21 $$ final JBossServiceConstructorConfig constructorConfig = jBossServiceConfig.getConstructorConfig()-->Line_22 $$ assertNotNull(constructorConfig)[ FD ]
Line_20 $$ if (jBossServiceConfig.getName().equals("jboss.test.service")) -->Line_24 $$ assertEquals(1, arguments.length)[ CD ]
Line_27 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.second")) -->Line_40 $$ assertEquals("appendSomethingElse", valueFactory.getMethodName())[ CD ]
Line_27 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.second")) -->Line_33 $$ final JBossServiceAttributeConfig[] attributeConfigs = jBossServiceConfig.getAttributeConfigs()[ CD ]
Line_18 $$ for (JBossServiceConfig jBossServiceConfig : serviceConfigs) -->Line_19 $$ assertEquals("org.jboss.as.service.LegacyService", jBossServiceConfig.getCode())[ FD ]
Line_4 $$ final ParseResult<JBossServiceXmlDescriptor> jBossServiceXmlDescriptorParseResult = new ParseResult<JBossServiceXmlDescriptor>()-->Line_9 $$ xmlMapper.parseDocument(jBossServiceXmlDescriptorParseResult, reader)[ FD ]
Line_45 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.third")) -->Line_57 $$ assertNull(attributeConfigs[1].getInject())[ CD ]
Line_11 $$ if (inputStream != null)-->Line_12 $$ inputStream.close()[ CD ]
Line_27 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.second")) -->Line_38 $$ assertNotNull(valueFactory)[ CD ]
Line_27 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.second")) -->Line_39 $$ assertEquals("jboss.test.service", valueFactory.getBeanName())[ CD ]
Line_4 $$ final ParseResult<JBossServiceXmlDescriptor> jBossServiceXmlDescriptorParseResult = new ParseResult<JBossServiceXmlDescriptor>()-->Line_14 $$ final JBossServiceXmlDescriptor xmlDescriptor = jBossServiceXmlDescriptorParseResult.getResult()[ FD ]
Line_27 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.second")) -->Line_44 $$ assertEquals("more value", parameters[0].getValue())[ CD ]
Line_27 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.second")) -->Line_29 $$ final JBossServiceDependencyConfig[] dependencyConfigs = jBossServiceConfig.getDependencyConfigs()[ CD ]
Line_45 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.third")) -->Line_55 $$ assertEquals("somethingElse", attributeConfigs[1].getName())[ CD ]
Line_45 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.third")) -->Line_52 $$ assertNotNull(inject)[ CD ]
Line_2 $$ public void testParse() throws Exception -->Line_14 $$ final JBossServiceXmlDescriptor xmlDescriptor = jBossServiceXmlDescriptorParseResult.getResult()[ CD ]
Line_7 $$ inputStream = new FileInputStream(testXmlFile)-->Line_11 $$ if (inputStream != null)[ FD ]
Line_14 $$ final JBossServiceXmlDescriptor xmlDescriptor = jBossServiceXmlDescriptorParseResult.getResult()-->Line_16 $$ final List<JBossServiceConfig> serviceConfigs = xmlDescriptor.getServiceConfigs()[ FD ]
Line_45 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.third")) -->Line_56 $$ assertNull(attributeConfigs[1].getValueFactory())[ CD ]
Line_37 $$ final JBossServiceAttributeConfig.ValueFactory valueFactory = attributeConfigs[0].getValueFactory()-->Line_39 $$ assertEquals("jboss.test.service", valueFactory.getBeanName())[ FD ]
Line_2 $$ public void testParse() throws Exception -->Line_3 $$ final File testXmlFile = getResourceFile(JBossServiceXmlDescriptorParserTestCase.class, "/test/serviceXmlDeployment.jar/META-INF/jboss-service.xml")[ CD ]
Line_20 $$ if (jBossServiceConfig.getName().equals("jboss.test.service")) -->Line_23 $$ final JBossServiceConstructorConfig.Argument[] arguments = constructorConfig.getArguments()[ CD ]
Line_2 $$ public void testParse() throws Exception -->Line_5 $$ InputStream inputStream = null[ CD ]
Line_27 $$ if (jBossServiceConfig.getName().equals("jboss.test.service.second")) -->Line_32 $$ assertEquals("other", dependencyConfigs[0].getOptionalAttributeName())[ CD ]
