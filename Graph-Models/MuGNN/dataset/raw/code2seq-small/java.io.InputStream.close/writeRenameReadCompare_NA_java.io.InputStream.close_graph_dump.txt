Line_4 $$ OutputStream out = new BufferedOutputStream(new DigestOutputStream(fs.create(path, false), digest))-->Line_6 $$ out.write('Q')[ FD ]
Line_11 $$ Path copyPath = path.suffix(".copy")-->Line_15 $$ InputStream in = new BufferedInputStream(new DigestInputStream(fs.open(copyPath), digest2))[ FD ]
Line_5 $$ for (long i = 0; i < len; i++) -->Line_6 $$ out.write('Q')[ CD ]
Line_2 $$ protected void writeRenameReadCompare(Path path, long len) throws IOException, NoSuchAlgorithmException -->Line_4 $$ OutputStream out = new BufferedOutputStream(new DigestOutputStream(fs.create(path, false), digest))[ CD ]
Line_2 $$ protected void writeRenameReadCompare(Path path, long len) throws IOException, NoSuchAlgorithmException -->Line_9 $$ out.close()[ CD ]
Line_4 $$ OutputStream out = new BufferedOutputStream(new DigestOutputStream(fs.create(path, false), digest))-->Line_9 $$ out.close()[ FD ]
Line_2 $$ protected void writeRenameReadCompare(Path path, long len) throws IOException, NoSuchAlgorithmException -->Line_12 $$ fs.rename(path, copyPath)[ CD ]
Line_2 $$ protected void writeRenameReadCompare(Path path, long len) throws IOException, NoSuchAlgorithmException -->Line_15 $$ InputStream in = new BufferedInputStream(new DigestInputStream(fs.open(copyPath), digest2))[ CD ]
Line_2 $$ protected void writeRenameReadCompare(Path path, long len) throws IOException, NoSuchAlgorithmException -->Line_21 $$ assertEquals("Copy length matches original", len, copyLen)[ FD ]
Line_15 $$ InputStream in = new BufferedInputStream(new DigestInputStream(fs.open(copyPath), digest2))-->Line_20 $$ in.close()[ FD ]
Line_2 $$ protected void writeRenameReadCompare(Path path, long len) throws IOException, NoSuchAlgorithmException -->Line_12 $$ fs.rename(path, copyPath)[ FD ]
Line_2 $$ protected void writeRenameReadCompare(Path path, long len) throws IOException, NoSuchAlgorithmException -->Line_13 $$ assertTrue("Copy exists", fs.exists(copyPath))[ CD ]
Line_11 $$ Path copyPath = path.suffix(".copy")-->Line_12 $$ fs.rename(path, copyPath)[ FD ]
Line_3 $$ MessageDigest digest = MessageDigest.getInstance("MD5")-->Line_22 $$ assertArrayEquals("Digests match", digest.digest(), digest2.digest())[ FD ]
Line_2 $$ protected void writeRenameReadCompare(Path path, long len) throws IOException, NoSuchAlgorithmException -->Line_10 $$ assertTrue("Exists", fs.exists(path))[ FD ]
Line_11 $$ Path copyPath = path.suffix(".copy")-->Line_13 $$ assertTrue("Copy exists", fs.exists(copyPath))[ FD ]
Line_16 $$ long copyLen = 0-->Line_21 $$ assertEquals("Copy length matches original", len, copyLen)[ FD ]
Line_2 $$ protected void writeRenameReadCompare(Path path, long len) throws IOException, NoSuchAlgorithmException -->Line_3 $$ MessageDigest digest = MessageDigest.getInstance("MD5")[ CD ]
Line_15 $$ InputStream in = new BufferedInputStream(new DigestInputStream(fs.open(copyPath), digest2))-->Line_17 $$ while (in.read() != -1) [ FD ]
Line_4 $$ OutputStream out = new BufferedOutputStream(new DigestOutputStream(fs.create(path, false), digest))-->Line_8 $$ out.flush()[ FD ]
Line_2 $$ protected void writeRenameReadCompare(Path path, long len) throws IOException, NoSuchAlgorithmException -->Line_11 $$ Path copyPath = path.suffix(".copy")[ FD ]
Line_2 $$ protected void writeRenameReadCompare(Path path, long len) throws IOException, NoSuchAlgorithmException -->Line_4 $$ OutputStream out = new BufferedOutputStream(new DigestOutputStream(fs.create(path, false), digest))[ FD ]
Line_2 $$ protected void writeRenameReadCompare(Path path, long len) throws IOException, NoSuchAlgorithmException -->Line_11 $$ Path copyPath = path.suffix(".copy")[ CD ]
Line_2 $$ protected void writeRenameReadCompare(Path path, long len) throws IOException, NoSuchAlgorithmException -->Line_17 $$ while (in.read() != -1) [ CD ]
Line_2 $$ protected void writeRenameReadCompare(Path path, long len) throws IOException, NoSuchAlgorithmException -->Line_22 $$ assertArrayEquals("Digests match", digest.digest(), digest2.digest())[ CD ]
Line_16 $$ long copyLen = 0-->Line_18 $$ copyLen++[ FD ]
Line_2 $$ protected void writeRenameReadCompare(Path path, long len) throws IOException, NoSuchAlgorithmException -->Line_10 $$ assertTrue("Exists", fs.exists(path))[ CD ]
Line_2 $$ protected void writeRenameReadCompare(Path path, long len) throws IOException, NoSuchAlgorithmException -->Line_16 $$ long copyLen = 0[ CD ]
Line_17 $$ while (in.read() != -1) -->Line_18 $$ copyLen++[ CD ]
Line_2 $$ protected void writeRenameReadCompare(Path path, long len) throws IOException, NoSuchAlgorithmException -->Line_5 $$ for (long i = 0; i < len; i++) [ CD ]
Line_2 $$ protected void writeRenameReadCompare(Path path, long len) throws IOException, NoSuchAlgorithmException -->Line_20 $$ in.close()[ CD ]
Line_2 $$ protected void writeRenameReadCompare(Path path, long len) throws IOException, NoSuchAlgorithmException -->Line_14 $$ MessageDigest digest2 = MessageDigest.getInstance("MD5")[ CD ]
Line_2 $$ protected void writeRenameReadCompare(Path path, long len) throws IOException, NoSuchAlgorithmException -->Line_5 $$ for (long i = 0; i < len; i++) [ FD ]
Line_2 $$ protected void writeRenameReadCompare(Path path, long len) throws IOException, NoSuchAlgorithmException -->Line_8 $$ out.flush()[ CD ]
Line_14 $$ MessageDigest digest2 = MessageDigest.getInstance("MD5")-->Line_22 $$ assertArrayEquals("Digests match", digest.digest(), digest2.digest())[ FD ]
Line_2 $$ protected void writeRenameReadCompare(Path path, long len) throws IOException, NoSuchAlgorithmException -->Line_21 $$ assertEquals("Copy length matches original", len, copyLen)[ CD ]
