Line_5 $$ InputStream in = fs.open(p)-->Line_8 $$ in.read(buf, 0, len)[ FD ]
Line_2 $$ public static String slurpHadoop(Path p, FileSystem fs) throws IOException -->Line_6 $$ String contents = null[ CD ]
Line_2 $$ public static String slurpHadoop(Path p, FileSystem fs) throws IOException -->Line_4 $$ byte[] buf = new byte[len][ CD ]
Line_4 $$ byte[] buf = new byte[len]-->Line_8 $$ in.read(buf, 0, len)[ FD ]
Line_2 $$ public static String slurpHadoop(Path p, FileSystem fs) throws IOException -->Line_5 $$ InputStream in = fs.open(p)[ FD ]
Line_5 $$ InputStream in = fs.open(p)-->Line_11 $$ in.close()[ FD ]
Line_2 $$ public static String slurpHadoop(Path p, FileSystem fs) throws IOException -->Line_3 $$ int len = (int) fs.getFileStatus(p).getLen()[ FD ]
Line_3 $$ int len = (int) fs.getFileStatus(p).getLen()-->Line_8 $$ in.read(buf, 0, len)[ FD ]
Line_6 $$ String contents = null-->Line_9 $$ contents = new String(buf, "UTF-8")[ FD ]
Line_2 $$ public static String slurpHadoop(Path p, FileSystem fs) throws IOException -->Line_5 $$ InputStream in = fs.open(p)[ CD ]
Line_2 $$ public static String slurpHadoop(Path p, FileSystem fs) throws IOException -->Line_13 $$ return contents[ CD ]
Line_2 $$ public static String slurpHadoop(Path p, FileSystem fs) throws IOException -->Line_3 $$ int len = (int) fs.getFileStatus(p).getLen()[ CD ]
