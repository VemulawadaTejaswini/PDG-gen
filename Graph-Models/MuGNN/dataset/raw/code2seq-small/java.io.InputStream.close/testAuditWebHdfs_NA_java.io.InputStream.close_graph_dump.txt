Line_3 $$ final Path file = new Path(fnames[0])-->Line_4 $$ fs.setPermission(file, new FsPermission((short) 0644))[ FD ]
Line_2 $$ public void testAuditWebHdfs() throws Exception -->Line_10 $$ istream.close()[ CD ]
Line_2 $$ public void testAuditWebHdfs() throws Exception -->Line_11 $$ verifyAuditLogsRepeat(true, 3)[ CD ]
Line_2 $$ public void testAuditWebHdfs() throws Exception -->Line_12 $$ assertTrue("failed to read from file", val >= 0)[ CD ]
Line_2 $$ public void testAuditWebHdfs() throws Exception -->Line_8 $$ InputStream istream = webfs.open(file)[ CD ]
Line_3 $$ final Path file = new Path(fnames[0])-->Line_5 $$ fs.setOwner(file, "root", null)[ FD ]
Line_8 $$ InputStream istream = webfs.open(file)-->Line_9 $$ int val = istream.read()[ FD ]
Line_2 $$ public void testAuditWebHdfs() throws Exception -->Line_6 $$ setupAuditLogs()[ CD ]
Line_2 $$ public void testAuditWebHdfs() throws Exception -->Line_4 $$ fs.setPermission(file, new FsPermission((short) 0644))[ CD ]
Line_3 $$ final Path file = new Path(fnames[0])-->Line_8 $$ InputStream istream = webfs.open(file)[ FD ]
Line_7 $$ WebHdfsFileSystem webfs = WebHdfsTestUtil.getWebHdfsFileSystemAs(userGroupInfo, conf, WebHdfsFileSystem.SCHEME)-->Line_8 $$ InputStream istream = webfs.open(file)[ FD ]
Line_2 $$ public void testAuditWebHdfs() throws Exception -->Line_5 $$ fs.setOwner(file, "root", null)[ CD ]
Line_2 $$ public void testAuditWebHdfs() throws Exception -->Line_3 $$ final Path file = new Path(fnames[0])[ CD ]
Line_8 $$ InputStream istream = webfs.open(file)-->Line_10 $$ istream.close()[ FD ]
Line_2 $$ public void testAuditWebHdfs() throws Exception -->Line_7 $$ WebHdfsFileSystem webfs = WebHdfsTestUtil.getWebHdfsFileSystemAs(userGroupInfo, conf, WebHdfsFileSystem.SCHEME)[ CD ]
Line_2 $$ public void testAuditWebHdfs() throws Exception -->Line_9 $$ int val = istream.read()[ CD ]
