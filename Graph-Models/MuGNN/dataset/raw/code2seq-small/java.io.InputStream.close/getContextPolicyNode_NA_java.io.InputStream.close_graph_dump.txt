Line_2 $$ private Node getContextPolicyNode(final URL webAppURL, String contextId) throws Exception -->Line_4 $$ LOGGER.info("Testing JACC permissions: " + servletURL)[ CD ]
Line_8 $$ final String xpathBase = "/" + ListJACCPoliciesServlet.ROOT_ELEMENT + "/ActiveContextPolicies/ContextPolicy[@contextID='" + contextId + "']"-->Line_9 $$ final Node contextPolicyNode = document.selectSingleNode(xpathBase)[ FD ]
Line_2 $$ private Node getContextPolicyNode(final URL webAppURL, String contextId) throws Exception -->Line_3 $$ final URL servletURL = new URL(webAppURL.toExternalForm() + ListJACCPoliciesServlet.SERVLET_PATH.substring(1))[ CD ]
Line_9 $$ final Node contextPolicyNode = document.selectSingleNode(xpathBase)-->Line_11 $$ LOGGER.debug(contextPolicyNode.asXML())[ FD ]
Line_5 $$ final InputStream is = servletURL.openStream()-->Line_7 $$ final Document document = new SAXReader().read(is)[ FD ]
Line_5 $$ final InputStream is = servletURL.openStream()-->Line_15 $$ is.close()[ FD ]
Line_7 $$ final Document document = new SAXReader().read(is)-->Line_9 $$ final Node contextPolicyNode = document.selectSingleNode(xpathBase)[ FD ]
Line_2 $$ private Node getContextPolicyNode(final URL webAppURL, String contextId) throws Exception -->Line_3 $$ final URL servletURL = new URL(webAppURL.toExternalForm() + ListJACCPoliciesServlet.SERVLET_PATH.substring(1))[ FD ]
Line_10 $$ if (LOGGER.isDebugEnabled()) -->Line_11 $$ LOGGER.debug(contextPolicyNode.asXML())[ CD ]
Line_2 $$ private Node getContextPolicyNode(final URL webAppURL, String contextId) throws Exception -->Line_5 $$ final InputStream is = servletURL.openStream()[ CD ]
Line_3 $$ final URL servletURL = new URL(webAppURL.toExternalForm() + ListJACCPoliciesServlet.SERVLET_PATH.substring(1))-->Line_5 $$ final InputStream is = servletURL.openStream()[ FD ]
