Line_2 $$ public static boolean isHTMLSourceTextPresent(LiferaySelenium liferaySelenium, String value) throws Exception -->Line_4 $$ InputStream inputStream = url.openStream()[ CD ]
Line_2 $$ public static boolean isHTMLSourceTextPresent(LiferaySelenium liferaySelenium, String value) throws Exception -->Line_5 $$ BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream))[ CD ]
Line_8 $$ Pattern pattern = Pattern.compile(value)-->Line_9 $$ Matcher matcher = pattern.matcher(line)[ FD ]
Line_7 $$ while ((line = bufferedReader.readLine()) != null) -->Line_9 $$ Matcher matcher = pattern.matcher(line)[ FD ]
Line_6 $$ String line = null-->Line_7 $$ while ((line = bufferedReader.readLine()) != null) [ FD ]
Line_2 $$ public static boolean isHTMLSourceTextPresent(LiferaySelenium liferaySelenium, String value) throws Exception -->Line_15 $$ bufferedReader.close()[ CD ]
Line_2 $$ public static boolean isHTMLSourceTextPresent(LiferaySelenium liferaySelenium, String value) throws Exception -->Line_6 $$ String line = null[ CD ]
Line_5 $$ BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream))-->Line_7 $$ while ((line = bufferedReader.readLine()) != null) [ FD ]
Line_7 $$ while ((line = bufferedReader.readLine()) != null) -->Line_10 $$ if (matcher.find()) [ CD ]
Line_2 $$ public static boolean isHTMLSourceTextPresent(LiferaySelenium liferaySelenium, String value) throws Exception -->Line_14 $$ inputStream.close()[ CD ]
Line_6 $$ String line = null-->Line_9 $$ Matcher matcher = pattern.matcher(line)[ FD ]
Line_4 $$ InputStream inputStream = url.openStream()-->Line_14 $$ inputStream.close()[ FD ]
Line_2 $$ public static boolean isHTMLSourceTextPresent(LiferaySelenium liferaySelenium, String value) throws Exception -->Line_7 $$ while ((line = bufferedReader.readLine()) != null) [ CD ]
Line_5 $$ BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream))-->Line_15 $$ bufferedReader.close()[ FD ]
Line_3 $$ URL url = new URL(liferaySelenium.getLocation())-->Line_4 $$ InputStream inputStream = url.openStream()[ FD ]
Line_2 $$ public static boolean isHTMLSourceTextPresent(LiferaySelenium liferaySelenium, String value) throws Exception -->Line_3 $$ URL url = new URL(liferaySelenium.getLocation())[ CD ]
Line_7 $$ while ((line = bufferedReader.readLine()) != null) -->Line_8 $$ Pattern pattern = Pattern.compile(value)[ CD ]
Line_9 $$ Matcher matcher = pattern.matcher(line)-->Line_10 $$ if (matcher.find()) [ FD ]
Line_10 $$ if (matcher.find()) -->Line_11 $$ return true[ CD ]
Line_2 $$ public static boolean isHTMLSourceTextPresent(LiferaySelenium liferaySelenium, String value) throws Exception -->Line_8 $$ Pattern pattern = Pattern.compile(value)[ FD ]
Line_2 $$ public static boolean isHTMLSourceTextPresent(LiferaySelenium liferaySelenium, String value) throws Exception -->Line_16 $$ return false[ CD ]
Line_2 $$ public static boolean isHTMLSourceTextPresent(LiferaySelenium liferaySelenium, String value) throws Exception -->Line_3 $$ URL url = new URL(liferaySelenium.getLocation())[ FD ]
Line_7 $$ while ((line = bufferedReader.readLine()) != null) -->Line_9 $$ Matcher matcher = pattern.matcher(line)[ CD ]
