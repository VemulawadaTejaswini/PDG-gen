Line_3 $$ ClassLoader tempClassLoader = factory.createNewTempClassLoader()-->Line_6 $$ assertTrue(tempClassLoader.getResources(resource).hasMoreElements())[ FD ]
Line_2 $$ public void testLoadResources() throws IOException -->Line_7 $$ InputStream resourceStream = tempClassLoader.getResourceAsStream(resource)[ CD ]
Line_4 $$ String resource = TestEntity.class.getName().replace('.', '/') + ".class"-->Line_5 $$ assertNotNull(tempClassLoader.getResource(resource))[ FD ]
Line_7 $$ InputStream resourceStream = tempClassLoader.getResourceAsStream(resource)-->Line_8 $$ assertNotNull(resourceStream)[ FD ]
Line_2 $$ public void testLoadResources() throws IOException -->Line_5 $$ assertNotNull(tempClassLoader.getResource(resource))[ CD ]
Line_2 $$ public void testLoadResources() throws IOException -->Line_6 $$ assertTrue(tempClassLoader.getResources(resource).hasMoreElements())[ CD ]
Line_3 $$ ClassLoader tempClassLoader = factory.createNewTempClassLoader()-->Line_5 $$ assertNotNull(tempClassLoader.getResource(resource))[ FD ]
Line_4 $$ String resource = TestEntity.class.getName().replace('.', '/') + ".class"-->Line_7 $$ InputStream resourceStream = tempClassLoader.getResourceAsStream(resource)[ FD ]
Line_3 $$ ClassLoader tempClassLoader = factory.createNewTempClassLoader()-->Line_7 $$ InputStream resourceStream = tempClassLoader.getResourceAsStream(resource)[ FD ]
Line_2 $$ public void testLoadResources() throws IOException -->Line_4 $$ String resource = TestEntity.class.getName().replace('.', '/') + ".class"[ CD ]
Line_4 $$ String resource = TestEntity.class.getName().replace('.', '/') + ".class"-->Line_6 $$ assertTrue(tempClassLoader.getResources(resource).hasMoreElements())[ FD ]
Line_7 $$ InputStream resourceStream = tempClassLoader.getResourceAsStream(resource)-->Line_9 $$ resourceStream.close()[ FD ]
Line_2 $$ public void testLoadResources() throws IOException -->Line_3 $$ ClassLoader tempClassLoader = factory.createNewTempClassLoader()[ CD ]
Line_2 $$ public void testLoadResources() throws IOException -->Line_8 $$ assertNotNull(resourceStream)[ CD ]
Line_2 $$ public void testLoadResources() throws IOException -->Line_9 $$ resourceStream.close()[ CD ]
