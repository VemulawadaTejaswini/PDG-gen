Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_75 $$ verify(fs, times(2)).getDelegationToken()[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_76 $$ verify(fs, times(1)).replaceExpiredDelegationToken()[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_126 $$ verify(fs, never()).getDelegationToken(anyString())[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_72 $$ Assert.assertSame(token, token2)[ CD ]
Line_4 $$ UserGroupInformation ugi = UserGroupInformation.createUserForTesting(testUser, new String[] -->Line_106 $$ ugi.addToken(token)[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_20 $$ fs.create(p, (short) 1).close()[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_104 $$ verify(fs, times(1)).cancelDelegationToken(eq(token2))[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_113 $$ fs.getFileStatus(new Path("/"))[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_132 $$ reset(fs)[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_96 $$ Assert.assertEquals(fs.getTokenKind(), token.getKind())[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_28 $$ Assert.assertEquals(fs.getTokenKind(), token.getKind())[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_86 $$ InputStream is = fs.open(p)[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_74 $$ fs.open(p).close()[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_134 $$ for (int i = 0; i < 2; i++) [ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_153 $$ verify(fs, never()).getDelegationToken()[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_71 $$ Assert.assertEquals(fs.getTokenKind(), token.getKind())[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_142 $$ verify(fs, times(1)).getDelegationToken()[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_123 $$ fs.getFileStatus(new Path("/"))[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_53 $$ token2 = fs.getRenewToken()[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_84 $$ reset(fs)[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_89 $$ verify(fs, times(2)).getDelegationToken()[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_120 $$ Assert.assertEquals(fs.getTokenKind(), token.getKind())[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_146 $$ token2 = fs.getRenewToken()[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_41 $$ fs.cancelDelegationToken(token)[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_109 $$ return spy((WebHdfsFileSystem) FileSystem.newInstance(uri, clusterConf))[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_23 $$ verify(fs, times(1)).getDelegationToken(anyString())[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_29 $$ reset(fs)[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_33 $$ verify(fs, never()).getDelegationToken(anyString())[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_133 $$ fs.cancelDelegationToken(token)[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_18 $$ reset(fs)[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_102 $$ verify(fs, never()).getDelegationToken(anyString())[ FD ]
Line_3 $$ final String testUser = "DummyUser"-->Line_97 $$ Assert.assertEquals(testUser, getTokenOwner(token2))[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_152 $$ fs.close()[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_13 $$ fs.cancelDelegationToken(token)[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_77 $$ verify(fs, times(1)).getDelegationToken(null)[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_133 $$ fs.cancelDelegationToken(token)[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_52 $$ verify(fs, never()).setDelegationToken(any(Token.class))[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_38 $$ Assert.assertSame(token, token2)[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_127 $$ verify(fs, never()).setDelegationToken(any(Token.class))[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_92 $$ verify(fs, times(1)).setDelegationToken(any(Token.class))[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_107 $$ fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() [ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_116 $$ verify(fs, never()).getDelegationToken(anyString())[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_123 $$ fs.getFileStatus(new Path("/"))[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_54 $$ Assert.assertNotNull(token2)[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_101 $$ verify(fs, never()).replaceExpiredDelegationToken()[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_10 $$ Assert.assertNull(fs.getRenewToken())[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_105 $$ token = fs.getDelegationToken(null)[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_67 $$ verify(fs, never()).getDelegationToken(anyString())[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_81 $$ Assert.assertNotSame(token, token2)[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_156 $$ verify(fs, never()).setDelegationToken(any(Token.class))[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_117 $$ verify(fs, times(1)).setDelegationToken(eq(token))[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_150 $$ reset(fs)[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_87 $$ is.read()[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_85 $$ fs.cancelDelegationToken(fs.getRenewToken())[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_22 $$ verify(fs, never()).replaceExpiredDelegationToken()[ CD ]
Line_134 $$ for (int i = 0; i < 2; i++) -->Line_144 $$ verify(fs, never()).getDelegationToken(anyString())[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_74 $$ fs.open(p).close()[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_152 $$ fs.close()[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_53 $$ token2 = fs.getRenewToken()[ FD ]
Line_134 $$ for (int i = 0; i < 2; i++) -->Line_147 $$ Assert.assertNotNull(token2)[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_86 $$ InputStream is = fs.open(p)[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_88 $$ is.close()[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_23 $$ verify(fs, times(1)).getDelegationToken(anyString())[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_4 $$ UserGroupInformation ugi = UserGroupInformation.createUserForTesting(testUser, new String[] [ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_79 $$ token2 = fs.getRenewToken()[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_43 $$ fs.renewDelegationToken(token)[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_27 $$ Assert.assertEquals(testUser, getTokenOwner(token))[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_21 $$ verify(fs, times(1)).getDelegationToken()[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_30 $$ fs.getFileStatus(p)[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_128 $$ token2 = fs.getRenewToken()[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_130 $$ Assert.assertEquals(fs.getTokenKind(), token.getKind())[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_91 $$ verify(fs, times(1)).getDelegationToken(null)[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_125 $$ verify(fs, never()).replaceExpiredDelegationToken()[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_84 $$ reset(fs)[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_77 $$ verify(fs, times(1)).getDelegationToken(null)[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_97 $$ Assert.assertEquals(testUser, getTokenOwner(token2))[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_68 $$ verify(fs, never()).setDelegationToken(any(Token.class))[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_25 $$ token = fs.getRenewToken()[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_55 $$ Assert.assertEquals(fs.getTokenKind(), token.getKind())[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_66 $$ verify(fs, never()).replaceExpiredDelegationToken()[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_59 $$ fs.cancelDelegationToken(token)[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_89 $$ verify(fs, times(2)).getDelegationToken()[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_102 $$ verify(fs, never()).getDelegationToken(anyString())[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_121 $$ Assert.assertSame(token, token2)[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_16 $$ verify(fs, never()).setDelegationToken(any(Token.class))[ CD ]
Line_3 $$ final String testUser = "DummyUser"-->Line_27 $$ Assert.assertEquals(testUser, getTokenOwner(token))[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_37 $$ Assert.assertEquals(fs.getTokenKind(), token.getKind())[ FD ]
Line_134 $$ for (int i = 0; i < 2; i++) -->Line_146 $$ token2 = fs.getRenewToken()[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_92 $$ verify(fs, times(1)).setDelegationToken(any(Token.class))[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_10 $$ Assert.assertNull(fs.getRenewToken())[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_116 $$ verify(fs, never()).getDelegationToken(anyString())[ FD ]
Line_134 $$ for (int i = 0; i < 2; i++) -->Line_150 $$ reset(fs)[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_36 $$ Assert.assertNotNull(token2)[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_39 $$ reset(fs)[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_7 $$ return spy((WebHdfsFileSystem) FileSystem.newInstance(uri, clusterConf))[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_3 $$ final String testUser = "DummyUser"[ CD ]
Line_134 $$ for (int i = 0; i < 2; i++) -->Line_145 $$ verify(fs, never()).setDelegationToken(any(Token.class))[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_40 $$ token = fs.getRenewToken()[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_114 $$ verify(fs, times(1)).getDelegationToken()[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_35 $$ Token<?> token2 = fs.getRenewToken()[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_50 $$ verify(fs, never()).replaceExpiredDelegationToken()[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_24 $$ verify(fs, times(1)).setDelegationToken(any(Token.class))[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_68 $$ verify(fs, never()).setDelegationToken(any(Token.class))[ CD ]
Line_4 $$ UserGroupInformation ugi = UserGroupInformation.createUserForTesting(testUser, new String[] -->Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() [ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_103 $$ verify(fs, never()).setDelegationToken(any(Token.class))[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_93 $$ token2 = fs.getRenewToken()[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_79 $$ token2 = fs.getRenewToken()[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_90 $$ verify(fs, times(1)).replaceExpiredDelegationToken()[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_82 $$ Assert.assertEquals(fs.getTokenKind(), token.getKind())[ CD ]
Line_4 $$ UserGroupInformation ugi = UserGroupInformation.createUserForTesting(testUser, new String[] -->Line_107 $$ fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() [ FD ]
Line_134 $$ for (int i = 0; i < 2; i++) -->Line_143 $$ verify(fs, times(1)).replaceExpiredDelegationToken()[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_34 $$ verify(fs, never()).setDelegationToken(any(Token.class))[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_24 $$ verify(fs, times(1)).setDelegationToken(any(Token.class))[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_69 $$ token2 = fs.getRenewToken()[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_115 $$ verify(fs, never()).replaceExpiredDelegationToken()[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_129 $$ Assert.assertNotNull(token2)[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_98 $$ reset(fs)[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_131 $$ Assert.assertSame(token, token2)[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_73 $$ reset(fs)[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_51 $$ verify(fs, never()).getDelegationToken(anyString())[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_130 $$ Assert.assertEquals(fs.getTokenKind(), token.getKind())[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_21 $$ verify(fs, times(1)).getDelegationToken()[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_115 $$ verify(fs, never()).replaceExpiredDelegationToken()[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_117 $$ verify(fs, times(1)).setDelegationToken(eq(token))[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_50 $$ verify(fs, never()).replaceExpiredDelegationToken()[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_29 $$ reset(fs)[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_11 $$ Token<?> token = fs.getDelegationToken(null)[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_69 $$ token2 = fs.getRenewToken()[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_96 $$ Assert.assertEquals(fs.getTokenKind(), token.getKind())[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_144 $$ verify(fs, never()).getDelegationToken(anyString())[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() [ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_73 $$ reset(fs)[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_35 $$ Token<?> token2 = fs.getRenewToken()[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_78 $$ verify(fs, times(1)).setDelegationToken(any(Token.class))[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_55 $$ Assert.assertEquals(fs.getTokenKind(), token.getKind())[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_112 $$ Assert.assertNull(fs.getRenewToken())[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_14 $$ verify(fs, never()).getDelegationToken()[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_70 $$ Assert.assertNotNull(token2)[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_34 $$ verify(fs, never()).setDelegationToken(any(Token.class))[ FD ]
Line_3 $$ final String testUser = "DummyUser"-->Line_83 $$ Assert.assertEquals(testUser, getTokenOwner(token2))[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_100 $$ verify(fs, never()).getDelegationToken()[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_119 $$ Assert.assertNotNull(token2)[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_155 $$ verify(fs, never()).getDelegationToken(anyString())[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_20 $$ fs.create(p, (short) 1).close()[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_76 $$ verify(fs, times(1)).replaceExpiredDelegationToken()[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_37 $$ Assert.assertEquals(fs.getTokenKind(), token.getKind())[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_103 $$ verify(fs, never()).setDelegationToken(any(Token.class))[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_40 $$ token = fs.getRenewToken()[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_28 $$ Assert.assertEquals(fs.getTokenKind(), token.getKind())[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_105 $$ token = fs.getDelegationToken(null)[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_157 $$ verify(fs, never()).cancelDelegationToken(any(Token.class))[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_15 $$ verify(fs, never()).replaceExpiredDelegationToken()[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_18 $$ reset(fs)[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_12 $$ fs.renewDelegationToken(token)[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_52 $$ verify(fs, never()).setDelegationToken(any(Token.class))[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_78 $$ verify(fs, times(1)).setDelegationToken(any(Token.class))[ FD ]
Line_134 $$ for (int i = 0; i < 2; i++) -->Line_148 $$ Assert.assertEquals(fs.getTokenKind(), token.getKind())[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_156 $$ verify(fs, never()).setDelegationToken(any(Token.class))[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_49 $$ verify(fs, never()).getDelegationToken()[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_112 $$ Assert.assertNull(fs.getRenewToken())[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_7 $$ return spy((WebHdfsFileSystem) FileSystem.newInstance(uri, clusterConf))[ CD ]
Line_3 $$ final String testUser = "DummyUser"-->Line_4 $$ UserGroupInformation ugi = UserGroupInformation.createUserForTesting(testUser, new String[] [ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_13 $$ fs.cancelDelegationToken(token)[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_56 $$ Assert.assertSame(token, token2)[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_90 $$ verify(fs, times(1)).replaceExpiredDelegationToken()[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_148 $$ Assert.assertEquals(fs.getTokenKind(), token.getKind())[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_154 $$ verify(fs, never()).replaceExpiredDelegationToken()[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_154 $$ verify(fs, never()).replaceExpiredDelegationToken()[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_122 $$ reset(fs)[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_125 $$ verify(fs, never()).replaceExpiredDelegationToken()[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_80 $$ Assert.assertNotNull(token2)[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_124 $$ verify(fs, times(1)).getDelegationToken()[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_153 $$ verify(fs, never()).getDelegationToken()[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_12 $$ fs.renewDelegationToken(token)[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_71 $$ Assert.assertEquals(fs.getTokenKind(), token.getKind())[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_57 $$ reset(fs)[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_16 $$ verify(fs, never()).setDelegationToken(any(Token.class))[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_67 $$ verify(fs, never()).getDelegationToken(anyString())[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_94 $$ Assert.assertNotNull(token2)[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_95 $$ Assert.assertNotSame(token, token2)[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_114 $$ verify(fs, times(1)).getDelegationToken()[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_118 $$ token2 = fs.getRenewToken()[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_51 $$ verify(fs, never()).getDelegationToken(anyString())[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_106 $$ ugi.addToken(token)[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_101 $$ verify(fs, never()).replaceExpiredDelegationToken()[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_118 $$ token2 = fs.getRenewToken()[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_145 $$ verify(fs, never()).setDelegationToken(any(Token.class))[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_15 $$ verify(fs, never()).replaceExpiredDelegationToken()[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_113 $$ fs.getFileStatus(new Path("/"))[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_25 $$ token = fs.getRenewToken()[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_22 $$ verify(fs, never()).replaceExpiredDelegationToken()[ FD ]
Line_134 $$ for (int i = 0; i < 2; i++) -->Line_142 $$ verify(fs, times(1)).getDelegationToken()[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_99 $$ fs.close()[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_32 $$ verify(fs, never()).replaceExpiredDelegationToken()[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_65 $$ verify(fs, never()).getDelegationToken()[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_157 $$ verify(fs, never()).cancelDelegationToken(any(Token.class))[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_100 $$ verify(fs, never()).getDelegationToken()[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_99 $$ fs.close()[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_49 $$ verify(fs, never()).getDelegationToken()[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_127 $$ verify(fs, never()).setDelegationToken(any(Token.class))[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_132 $$ reset(fs)[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_136 $$ fs.getFileStatus(new Path("/"))[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_26 $$ Assert.assertNotNull(token)[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_32 $$ verify(fs, never()).replaceExpiredDelegationToken()[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_65 $$ verify(fs, never()).getDelegationToken()[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_33 $$ verify(fs, never()).getDelegationToken(anyString())[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_120 $$ Assert.assertEquals(fs.getTokenKind(), token.getKind())[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_124 $$ verify(fs, times(1)).getDelegationToken()[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_30 $$ fs.getFileStatus(p)[ CD ]
Line_134 $$ for (int i = 0; i < 2; i++) -->Line_149 $$ Assert.assertSame(token, token2)[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_31 $$ verify(fs, times(1)).getDelegationToken()[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_57 $$ reset(fs)[ FD ]
Line_107 $$ fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_109 $$ return spy((WebHdfsFileSystem) FileSystem.newInstance(uri, clusterConf))[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_104 $$ verify(fs, times(1)).cancelDelegationToken(eq(token2))[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_128 $$ token2 = fs.getRenewToken()[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_41 $$ fs.cancelDelegationToken(token)[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_143 $$ verify(fs, times(1)).replaceExpiredDelegationToken()[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_98 $$ reset(fs)[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_17 $$ Assert.assertNull(fs.getRenewToken())[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_82 $$ Assert.assertEquals(fs.getTokenKind(), token.getKind())[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_11 $$ Token<?> token = fs.getDelegationToken(null)[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_122 $$ reset(fs)[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_39 $$ reset(fs)[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_31 $$ verify(fs, times(1)).getDelegationToken()[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_85 $$ fs.cancelDelegationToken(fs.getRenewToken())[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_155 $$ verify(fs, never()).getDelegationToken(anyString())[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_66 $$ verify(fs, never()).replaceExpiredDelegationToken()[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_75 $$ verify(fs, times(2)).getDelegationToken()[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_91 $$ verify(fs, times(1)).getDelegationToken(null)[ CD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_17 $$ Assert.assertNull(fs.getRenewToken())[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_93 $$ token2 = fs.getRenewToken()[ FD ]
Line_5 $$ WebHdfsFileSystem fs = ugi.doAs(new PrivilegedExceptionAction<WebHdfsFileSystem>() -->Line_126 $$ verify(fs, never()).getDelegationToken(anyString())[ FD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_14 $$ verify(fs, never()).getDelegationToken()[ CD ]
Line_2 $$ private void validateLazyTokenFetch(final Configuration clusterConf) throws Exception -->Line_83 $$ Assert.assertEquals(testUser, getTokenOwner(token2))[ CD ]
