Line_2 $$ private void parse(final VirtualFile persistence_xml, final List<PersistenceUnitMetadataHolder> listPUHolders, final DeploymentUnit deploymentUnit) throws DeploymentUnitProcessingException -->Line_12 $$ postParseSteps(persistence_xml, puHolder, deploymentUnit)[ FD ]
Line_2 $$ private void parse(final VirtualFile persistence_xml, final List<PersistenceUnitMetadataHolder> listPUHolders, final DeploymentUnit deploymentUnit) throws DeploymentUnitProcessingException -->Line_4 $$ if (persistence_xml.exists() && persistence_xml.isFile()) [ CD ]
Line_2 $$ private void parse(final VirtualFile persistence_xml, final List<PersistenceUnitMetadataHolder> listPUHolders, final DeploymentUnit deploymentUnit) throws DeploymentUnitProcessingException -->Line_13 $$ listPUHolders.add(puHolder)[ FD ]
Line_5 $$ InputStream is = null-->Line_7 $$ is = persistence_xml.openStream()[ FD ]
Line_2 $$ private void parse(final VirtualFile persistence_xml, final List<PersistenceUnitMetadataHolder> listPUHolders, final DeploymentUnit deploymentUnit) throws DeploymentUnitProcessingException -->Line_15 $$ throw new DeploymentUnitProcessingException(JpaLogger.ROOT_LOGGER.failedToParse(persistence_xml), e)[ FD ]
Line_8 $$ final XMLInputFactory inputFactory = XMLInputFactory.newInstance()-->Line_9 $$ inputFactory.setXMLResolver(NoopXMLResolver.create())[ FD ]
Line_8 $$ final XMLInputFactory inputFactory = XMLInputFactory.newInstance()-->Line_10 $$ XMLStreamReader xmlReader = inputFactory.createXMLStreamReader(is)[ FD ]
Line_7 $$ is = persistence_xml.openStream()-->Line_19 $$ is.close()[ FD ]
Line_5 $$ InputStream is = null-->Line_18 $$ if (is != null) [ FD ]
Line_10 $$ XMLStreamReader xmlReader = inputFactory.createXMLStreamReader(is)-->Line_11 $$ PersistenceUnitMetadataHolder puHolder = PersistenceUnitXmlParser.parse(xmlReader, SpecDescriptorPropertyReplacement.propertyReplacer(deploymentUnit))[ FD ]
Line_7 $$ is = persistence_xml.openStream()-->Line_10 $$ XMLStreamReader xmlReader = inputFactory.createXMLStreamReader(is)[ FD ]
Line_2 $$ private void parse(final VirtualFile persistence_xml, final List<PersistenceUnitMetadataHolder> listPUHolders, final DeploymentUnit deploymentUnit) throws DeploymentUnitProcessingException -->Line_3 $$ ROOT_LOGGER.tracef("parse checking if %s exists, result = %b", persistence_xml.toString(), persistence_xml.exists())[ CD ]
Line_4 $$ if (persistence_xml.exists() && persistence_xml.isFile()) -->Line_5 $$ InputStream is = null[ CD ]
Line_2 $$ private void parse(final VirtualFile persistence_xml, final List<PersistenceUnitMetadataHolder> listPUHolders, final DeploymentUnit deploymentUnit) throws DeploymentUnitProcessingException -->Line_3 $$ ROOT_LOGGER.tracef("parse checking if %s exists, result = %b", persistence_xml.toString(), persistence_xml.exists())[ FD ]
Line_18 $$ if (is != null) -->Line_19 $$ is.close()[ CD ]
Line_2 $$ private void parse(final VirtualFile persistence_xml, final List<PersistenceUnitMetadataHolder> listPUHolders, final DeploymentUnit deploymentUnit) throws DeploymentUnitProcessingException -->Line_11 $$ PersistenceUnitMetadataHolder puHolder = PersistenceUnitXmlParser.parse(xmlReader, SpecDescriptorPropertyReplacement.propertyReplacer(deploymentUnit))[ FD ]
Line_2 $$ private void parse(final VirtualFile persistence_xml, final List<PersistenceUnitMetadataHolder> listPUHolders, final DeploymentUnit deploymentUnit) throws DeploymentUnitProcessingException -->Line_4 $$ if (persistence_xml.exists() && persistence_xml.isFile()) [ FD ]
Line_11 $$ PersistenceUnitMetadataHolder puHolder = PersistenceUnitXmlParser.parse(xmlReader, SpecDescriptorPropertyReplacement.propertyReplacer(deploymentUnit))-->Line_12 $$ postParseSteps(persistence_xml, puHolder, deploymentUnit)[ FD ]
Line_5 $$ InputStream is = null-->Line_10 $$ XMLStreamReader xmlReader = inputFactory.createXMLStreamReader(is)[ FD ]
Line_2 $$ private void parse(final VirtualFile persistence_xml, final List<PersistenceUnitMetadataHolder> listPUHolders, final DeploymentUnit deploymentUnit) throws DeploymentUnitProcessingException -->Line_7 $$ is = persistence_xml.openStream()[ FD ]
Line_5 $$ InputStream is = null-->Line_19 $$ is.close()[ FD ]
Line_11 $$ PersistenceUnitMetadataHolder puHolder = PersistenceUnitXmlParser.parse(xmlReader, SpecDescriptorPropertyReplacement.propertyReplacer(deploymentUnit))-->Line_13 $$ listPUHolders.add(puHolder)[ FD ]
Line_7 $$ is = persistence_xml.openStream()-->Line_18 $$ if (is != null) [ FD ]
