Line_8 $$ rootTempDir = rootTempDir.makeQualified(lfs.getUri(), lfs.getWorkingDirectory())-->Line_32 $$ lfs.delete(rootTempDir, true)[ FD ]
Line_2 $$ public void testTraceReader() throws Exception -->Line_5 $$ Path rootInputDir = new Path(System.getProperty("src.test.data"))[ CD ]
Line_19 $$ jsp = dgm.createJobStoryProducer(tempFile.toString(), conf)-->Line_25 $$ jsp = dgm.createJobStoryProducer("-", conf)[ FD ]
Line_29 $$ if (tmpIs != null) -->Line_30 $$ tmpIs.close()[ CD ]
Line_12 $$ InputStream tmpIs = null-->Line_22 $$ tmpIs = lfs.open(tempFile)[ FD ]
Line_15 $$ JobStoryProducer jsp = dgm.createJobStoryProducer(inputFile.toString(), conf)-->Line_21 $$ verifyWordCountJobStory(jsp.getNextJob())[ FD ]
Line_14 $$ DebugGridmix dgm = new DebugGridmix()-->Line_25 $$ jsp = dgm.createJobStoryProducer("-", conf)[ FD ]
Line_10 $$ Path tempFile = new Path(rootTempDir, "gridmix3-wc.json")-->Line_22 $$ tmpIs = lfs.open(tempFile)[ FD ]
Line_2 $$ public void testTraceReader() throws Exception -->Line_6 $$ rootInputDir = rootInputDir.makeQualified(lfs.getUri(), lfs.getWorkingDirectory())[ CD ]
Line_2 $$ public void testTraceReader() throws Exception -->Line_7 $$ Path rootTempDir = new Path(System.getProperty("test.build.data", System.getProperty("java.io.tmpdir")), "testTraceReader")[ CD ]
Line_4 $$ FileSystem lfs = FileSystem.getLocal(conf)-->Line_8 $$ rootTempDir = rootTempDir.makeQualified(lfs.getUri(), lfs.getWorkingDirectory())[ FD ]
Line_19 $$ jsp = dgm.createJobStoryProducer(tempFile.toString(), conf)-->Line_21 $$ verifyWordCountJobStory(jsp.getNextJob())[ FD ]
Line_15 $$ JobStoryProducer jsp = dgm.createJobStoryProducer(inputFile.toString(), conf)-->Line_26 $$ verifyWordCountJobStory(jsp.getNextJob())[ FD ]
Line_4 $$ FileSystem lfs = FileSystem.getLocal(conf)-->Line_22 $$ tmpIs = lfs.open(tempFile)[ FD ]
Line_15 $$ JobStoryProducer jsp = dgm.createJobStoryProducer(inputFile.toString(), conf)-->Line_25 $$ jsp = dgm.createJobStoryProducer("-", conf)[ FD ]
Line_25 $$ jsp = dgm.createJobStoryProducer("-", conf)-->Line_26 $$ verifyWordCountJobStory(jsp.getNextJob())[ FD ]
Line_2 $$ public void testTraceReader() throws Exception -->Line_12 $$ InputStream tmpIs = null[ CD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_4 $$ FileSystem lfs = FileSystem.getLocal(conf)[ FD ]
Line_2 $$ public void testTraceReader() throws Exception -->Line_11 $$ InputStream origStdIn = System.in[ CD ]
Line_12 $$ InputStream tmpIs = null-->Line_30 $$ tmpIs.close()[ FD ]
Line_2 $$ public void testTraceReader() throws Exception -->Line_3 $$ Configuration conf = new Configuration()[ CD ]
Line_15 $$ JobStoryProducer jsp = dgm.createJobStoryProducer(inputFile.toString(), conf)-->Line_17 $$ verifyWordCountJobStory(jsp.getNextJob())[ FD ]
Line_22 $$ tmpIs = lfs.open(tempFile)-->Line_29 $$ if (tmpIs != null) [ FD ]
Line_5 $$ Path rootInputDir = new Path(System.getProperty("src.test.data"))-->Line_6 $$ rootInputDir = rootInputDir.makeQualified(lfs.getUri(), lfs.getWorkingDirectory())[ FD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_25 $$ jsp = dgm.createJobStoryProducer("-", conf)[ FD ]
Line_4 $$ FileSystem lfs = FileSystem.getLocal(conf)-->Line_6 $$ rootInputDir = rootInputDir.makeQualified(lfs.getUri(), lfs.getWorkingDirectory())[ FD ]
Line_2 $$ public void testTraceReader() throws Exception -->Line_10 $$ Path tempFile = new Path(rootTempDir, "gridmix3-wc.json")[ CD ]
Line_15 $$ JobStoryProducer jsp = dgm.createJobStoryProducer(inputFile.toString(), conf)-->Line_19 $$ jsp = dgm.createJobStoryProducer(tempFile.toString(), conf)[ FD ]
Line_2 $$ public void testTraceReader() throws Exception -->Line_4 $$ FileSystem lfs = FileSystem.getLocal(conf)[ CD ]
Line_10 $$ Path tempFile = new Path(rootTempDir, "gridmix3-wc.json")-->Line_19 $$ jsp = dgm.createJobStoryProducer(tempFile.toString(), conf)[ FD ]
Line_7 $$ Path rootTempDir = new Path(System.getProperty("test.build.data", System.getProperty("java.io.tmpdir")), "testTraceReader")-->Line_32 $$ lfs.delete(rootTempDir, true)[ FD ]
Line_2 $$ public void testTraceReader() throws Exception -->Line_9 $$ Path inputFile = new Path(rootInputDir, "wordcount.json.gz")[ CD ]
Line_4 $$ FileSystem lfs = FileSystem.getLocal(conf)-->Line_18 $$ expandGzippedTrace(lfs, inputFile, tempFile)[ FD ]
Line_12 $$ InputStream tmpIs = null-->Line_23 $$ System.setIn(tmpIs)[ FD ]
Line_12 $$ InputStream tmpIs = null-->Line_29 $$ if (tmpIs != null) [ FD ]
Line_11 $$ InputStream origStdIn = System.in-->Line_28 $$ System.setIn(origStdIn)[ FD ]
Line_10 $$ Path tempFile = new Path(rootTempDir, "gridmix3-wc.json")-->Line_18 $$ expandGzippedTrace(lfs, inputFile, tempFile)[ FD ]
Line_14 $$ DebugGridmix dgm = new DebugGridmix()-->Line_19 $$ jsp = dgm.createJobStoryProducer(tempFile.toString(), conf)[ FD ]
Line_22 $$ tmpIs = lfs.open(tempFile)-->Line_23 $$ System.setIn(tmpIs)[ FD ]
Line_7 $$ Path rootTempDir = new Path(System.getProperty("test.build.data", System.getProperty("java.io.tmpdir")), "testTraceReader")-->Line_8 $$ rootTempDir = rootTempDir.makeQualified(lfs.getUri(), lfs.getWorkingDirectory())[ FD ]
Line_9 $$ Path inputFile = new Path(rootInputDir, "wordcount.json.gz")-->Line_18 $$ expandGzippedTrace(lfs, inputFile, tempFile)[ FD ]
Line_2 $$ public void testTraceReader() throws Exception -->Line_8 $$ rootTempDir = rootTempDir.makeQualified(lfs.getUri(), lfs.getWorkingDirectory())[ CD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_19 $$ jsp = dgm.createJobStoryProducer(tempFile.toString(), conf)[ FD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_15 $$ JobStoryProducer jsp = dgm.createJobStoryProducer(inputFile.toString(), conf)[ FD ]
Line_19 $$ jsp = dgm.createJobStoryProducer(tempFile.toString(), conf)-->Line_26 $$ verifyWordCountJobStory(jsp.getNextJob())[ FD ]
Line_22 $$ tmpIs = lfs.open(tempFile)-->Line_30 $$ tmpIs.close()[ FD ]
Line_4 $$ FileSystem lfs = FileSystem.getLocal(conf)-->Line_32 $$ lfs.delete(rootTempDir, true)[ FD ]
Line_14 $$ DebugGridmix dgm = new DebugGridmix()-->Line_15 $$ JobStoryProducer jsp = dgm.createJobStoryProducer(inputFile.toString(), conf)[ FD ]
Line_9 $$ Path inputFile = new Path(rootInputDir, "wordcount.json.gz")-->Line_15 $$ JobStoryProducer jsp = dgm.createJobStoryProducer(inputFile.toString(), conf)[ FD ]
