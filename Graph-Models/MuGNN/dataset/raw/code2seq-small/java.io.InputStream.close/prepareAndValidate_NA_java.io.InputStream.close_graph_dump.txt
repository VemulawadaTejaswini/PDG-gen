Line_2 $$ public static PreparationResult prepareAndValidate(File patchFile, File toDir, UpdaterUI ui) throws IOException, OperationCancelledException -->Line_15 $$ ui.setDescription(patch.getOldBuild(), patch.getNewBuild())[ CD ]
Line_2 $$ public static PreparationResult prepareAndValidate(File patchFile, File toDir, UpdaterUI ui) throws IOException, OperationCancelledException -->Line_4 $$ ZipFile zipFile = new ZipFile(patchFile)[ CD ]
Line_3 $$ Patch patch-->Line_8 $$ patch = new Patch(in)[ FD ]
Line_3 $$ Patch patch-->Line_15 $$ ui.setDescription(patch.getOldBuild(), patch.getNewBuild())[ FD ]
Line_4 $$ ZipFile zipFile = new ZipFile(patchFile)-->Line_6 $$ InputStream in = Utils.getEntryInputStream(zipFile, PATCH_INFO_FILE_NAME)[ FD ]
Line_2 $$ public static PreparationResult prepareAndValidate(File patchFile, File toDir, UpdaterUI ui) throws IOException, OperationCancelledException -->Line_3 $$ Patch patch[ CD ]
Line_4 $$ ZipFile zipFile = new ZipFile(patchFile)-->Line_13 $$ zipFile.close()[ FD ]
Line_2 $$ public static PreparationResult prepareAndValidate(File patchFile, File toDir, UpdaterUI ui) throws IOException, OperationCancelledException -->Line_16 $$ List<ValidationResult> validationResults = patch.validate(toDir, ui)[ FD ]
Line_2 $$ public static PreparationResult prepareAndValidate(File patchFile, File toDir, UpdaterUI ui) throws IOException, OperationCancelledException -->Line_15 $$ ui.setDescription(patch.getOldBuild(), patch.getNewBuild())[ FD ]
Line_2 $$ public static PreparationResult prepareAndValidate(File patchFile, File toDir, UpdaterUI ui) throws IOException, OperationCancelledException -->Line_16 $$ List<ValidationResult> validationResults = patch.validate(toDir, ui)[ CD ]
Line_2 $$ public static PreparationResult prepareAndValidate(File patchFile, File toDir, UpdaterUI ui) throws IOException, OperationCancelledException -->Line_17 $$ return new PreparationResult(patch, patchFile, toDir, validationResults)[ CD ]
Line_3 $$ Patch patch-->Line_16 $$ List<ValidationResult> validationResults = patch.validate(toDir, ui)[ FD ]
Line_8 $$ patch = new Patch(in)-->Line_16 $$ List<ValidationResult> validationResults = patch.validate(toDir, ui)[ FD ]
Line_6 $$ InputStream in = Utils.getEntryInputStream(zipFile, PATCH_INFO_FILE_NAME)-->Line_10 $$ in.close()[ FD ]
Line_8 $$ patch = new Patch(in)-->Line_15 $$ ui.setDescription(patch.getOldBuild(), patch.getNewBuild())[ FD ]
