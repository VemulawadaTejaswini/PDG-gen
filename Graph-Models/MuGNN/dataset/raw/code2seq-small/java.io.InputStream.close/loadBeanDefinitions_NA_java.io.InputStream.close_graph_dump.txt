Line_7 $$ Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get()-->Line_29 $$ currentResources.remove(encodedResource)[ FD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_4 $$ if (logger.isInfoEnabled()) [ CD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_3 $$ Assert.notNull(encodedResource, "EncodedResource must not be null")[ FD ]
Line_8 $$ if (currentResources == null) -->Line_10 $$ this.resourcesCurrentlyBeingLoaded.set(currentResources)[ CD ]
Line_7 $$ Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get()-->Line_8 $$ if (currentResources == null) [ FD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_3 $$ Assert.notNull(encodedResource, "EncodedResource must not be null")[ CD ]
Line_16 $$ InputStream inputStream = encodedResource.getResource().getInputStream()-->Line_24 $$ inputStream.close()[ FD ]
Line_19 $$ if (encodedResource.getEncoding() != null) -->Line_20 $$ inputSource.setEncoding(encodedResource.getEncoding())[ CD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_12 $$ if (!currentResources.add(encodedResource)) [ CD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_29 $$ currentResources.remove(encodedResource)[ FD ]
Line_7 $$ Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get()-->Line_10 $$ this.resourcesCurrentlyBeingLoaded.set(currentResources)[ FD ]
Line_7 $$ Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get()-->Line_9 $$ currentResources = new HashSet<EncodedResource>(4)[ FD ]
Line_9 $$ currentResources = new HashSet<EncodedResource>(4)-->Line_29 $$ currentResources.remove(encodedResource)[ FD ]
Line_30 $$ if (currentResources.isEmpty()) -->Line_31 $$ this.resourcesCurrentlyBeingLoaded.remove()[ CD ]
Line_7 $$ Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get()-->Line_30 $$ if (currentResources.isEmpty()) [ FD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_5 $$ logger.info("Loading XML bean definitions from " + encodedResource.getResource())[ FD ]
Line_18 $$ InputSource inputSource = new InputSource(inputStream)-->Line_20 $$ inputSource.setEncoding(encodedResource.getEncoding())[ FD ]
Line_9 $$ currentResources = new HashSet<EncodedResource>(4)-->Line_12 $$ if (!currentResources.add(encodedResource)) [ FD ]
Line_18 $$ InputSource inputSource = new InputSource(inputStream)-->Line_22 $$ return doLoadBeanDefinitions(inputSource, encodedResource.getResource())[ FD ]
Line_9 $$ currentResources = new HashSet<EncodedResource>(4)-->Line_30 $$ if (currentResources.isEmpty()) [ FD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_20 $$ inputSource.setEncoding(encodedResource.getEncoding())[ FD ]
Line_7 $$ Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get()-->Line_12 $$ if (!currentResources.add(encodedResource)) [ FD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_22 $$ return doLoadBeanDefinitions(inputSource, encodedResource.getResource())[ FD ]
Line_9 $$ currentResources = new HashSet<EncodedResource>(4)-->Line_10 $$ this.resourcesCurrentlyBeingLoaded.set(currentResources)[ FD ]
Line_8 $$ if (currentResources == null) -->Line_9 $$ currentResources = new HashSet<EncodedResource>(4)[ CD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_12 $$ if (!currentResources.add(encodedResource)) [ FD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_8 $$ if (currentResources == null) [ CD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_7 $$ Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get()[ CD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_16 $$ InputStream inputStream = encodedResource.getResource().getInputStream()[ FD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_27 $$ throw new BeanDefinitionStoreException("IOException parsing XML document from " + encodedResource.getResource(), ex)[ FD ]
Line_4 $$ if (logger.isInfoEnabled()) -->Line_5 $$ logger.info("Loading XML bean definitions from " + encodedResource.getResource())[ CD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_19 $$ if (encodedResource.getEncoding() != null) [ FD ]
