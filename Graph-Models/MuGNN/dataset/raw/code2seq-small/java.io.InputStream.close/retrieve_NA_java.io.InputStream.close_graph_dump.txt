Line_3 $$ InputStream in = null-->Line_24 $$ if (in != null) [ FD ]
Line_2 $$ public DataInputStream retrieve(String key, long startByteOffset) throws AzureException -->Line_12 $$ CloudBlockBlobWrapper blob = getBlobReference(key)[ FD ]
Line_2 $$ public DataInputStream retrieve(String key, long startByteOffset) throws AzureException -->Line_4 $$ DataInputStream inDataStream = null[ CD ]
Line_13 $$ in = blob.openInputStream(getDownloadOptions(), getInstrumentedContext(isConcurrentOOBAppendAllowed()))-->Line_25 $$ in.close()[ FD ]
Line_4 $$ DataInputStream inDataStream = null-->Line_15 $$ long skippedBytes = inDataStream.skip(startByteOffset)[ FD ]
Line_2 $$ public DataInputStream retrieve(String key, long startByteOffset) throws AzureException -->Line_16 $$ if (skippedBytes != startByteOffset) [ FD ]
Line_14 $$ inDataStream = new DataInputStream(in)-->Line_21 $$ if (inDataStream != null) [ FD ]
Line_3 $$ InputStream in = null-->Line_13 $$ in = blob.openInputStream(getDownloadOptions(), getInstrumentedContext(isConcurrentOOBAppendAllowed()))[ FD ]
Line_3 $$ InputStream in = null-->Line_25 $$ in.close()[ FD ]
Line_4 $$ DataInputStream inDataStream = null-->Line_21 $$ if (inDataStream != null) [ FD ]
Line_24 $$ if (in != null) -->Line_25 $$ in.close()[ CD ]
Line_12 $$ CloudBlockBlobWrapper blob = getBlobReference(key)-->Line_13 $$ in = blob.openInputStream(getDownloadOptions(), getInstrumentedContext(isConcurrentOOBAppendAllowed()))[ FD ]
Line_2 $$ public DataInputStream retrieve(String key, long startByteOffset) throws AzureException -->Line_3 $$ InputStream in = null[ CD ]
Line_4 $$ DataInputStream inDataStream = null-->Line_22 $$ inDataStream.close()[ FD ]
Line_15 $$ long skippedBytes = inDataStream.skip(startByteOffset)-->Line_16 $$ if (skippedBytes != startByteOffset) [ FD ]
Line_4 $$ DataInputStream inDataStream = null-->Line_14 $$ inDataStream = new DataInputStream(in)[ FD ]
Line_7 $$ if (null == storageInteractionLayer) -->Line_8 $$ final String errMsg = String.format("Storage session expected for URI '%s' but does not exist.", sessionUri)[ CD ]
Line_2 $$ public DataInputStream retrieve(String key, long startByteOffset) throws AzureException -->Line_15 $$ long skippedBytes = inDataStream.skip(startByteOffset)[ FD ]
Line_21 $$ if (inDataStream != null) -->Line_22 $$ inDataStream.close()[ CD ]
Line_14 $$ inDataStream = new DataInputStream(in)-->Line_15 $$ long skippedBytes = inDataStream.skip(startByteOffset)[ FD ]
Line_13 $$ in = blob.openInputStream(getDownloadOptions(), getInstrumentedContext(isConcurrentOOBAppendAllowed()))-->Line_24 $$ if (in != null) [ FD ]
Line_14 $$ inDataStream = new DataInputStream(in)-->Line_22 $$ inDataStream.close()[ FD ]
