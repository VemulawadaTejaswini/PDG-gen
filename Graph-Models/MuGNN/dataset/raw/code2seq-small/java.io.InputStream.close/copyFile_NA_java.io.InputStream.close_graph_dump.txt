Line_2 $$ public static void copyFile(File sourceFile, File targetFile) throws IOException -->Line_11 $$ OutputStream outputStream = null[ CD ]
Line_10 $$ InputStream inputStream = null-->Line_13 $$ inputStream = new BufferedInputStream(new FileInputStream(sourceFile))[ FD ]
Line_10 $$ InputStream inputStream = null-->Line_16 $$ for (int readBytes = inputStream.read(buffer); readBytes > 0; readBytes = inputStream.read(buffer)) [ FD ]
Line_11 $$ OutputStream outputStream = null-->Line_28 $$ outputStream.close()[ FD ]
Line_11 $$ OutputStream outputStream = null-->Line_17 $$ outputStream.write(buffer, 0, readBytes)[ FD ]
Line_6 $$ final File directory = targetFile.getParentFile()-->Line_8 $$ throw new IOException(JavaCvsSrcBundle.message("could.not.create.directory.error.message", directory))[ FD ]
Line_11 $$ OutputStream outputStream = null-->Line_26 $$ if (outputStream != null) [ FD ]
Line_2 $$ public static void copyFile(File sourceFile, File targetFile) throws IOException -->Line_3 $$ if (sourceFile == null || targetFile == null) [ CD ]
Line_14 $$ outputStream = new BufferedOutputStream(new FileOutputStream(targetFile))-->Line_17 $$ outputStream.write(buffer, 0, readBytes)[ FD ]
Line_13 $$ inputStream = new BufferedInputStream(new FileInputStream(sourceFile))-->Line_22 $$ inputStream.close()[ FD ]
Line_2 $$ public static void copyFile(File sourceFile, File targetFile) throws IOException -->Line_6 $$ final File directory = targetFile.getParentFile()[ FD ]
Line_14 $$ outputStream = new BufferedOutputStream(new FileOutputStream(targetFile))-->Line_28 $$ outputStream.close()[ FD ]
Line_11 $$ OutputStream outputStream = null-->Line_14 $$ outputStream = new BufferedOutputStream(new FileOutputStream(targetFile))[ FD ]
Line_2 $$ public static void copyFile(File sourceFile, File targetFile) throws IOException -->Line_7 $$ if (!directory.exists() && !directory.mkdirs()) [ CD ]
Line_2 $$ public static void copyFile(File sourceFile, File targetFile) throws IOException -->Line_6 $$ final File directory = targetFile.getParentFile()[ CD ]
Line_10 $$ InputStream inputStream = null-->Line_22 $$ inputStream.close()[ FD ]
Line_10 $$ InputStream inputStream = null-->Line_20 $$ if (inputStream != null) [ FD ]
Line_15 $$ final byte[] buffer = new byte[32768]-->Line_17 $$ outputStream.write(buffer, 0, readBytes)[ FD ]
Line_13 $$ inputStream = new BufferedInputStream(new FileInputStream(sourceFile))-->Line_20 $$ if (inputStream != null) [ FD ]
Line_16 $$ for (int readBytes = inputStream.read(buffer); readBytes > 0; readBytes = inputStream.read(buffer)) -->Line_17 $$ outputStream.write(buffer, 0, readBytes)[ CD ]
Line_13 $$ inputStream = new BufferedInputStream(new FileInputStream(sourceFile))-->Line_16 $$ for (int readBytes = inputStream.read(buffer); readBytes > 0; readBytes = inputStream.read(buffer)) [ FD ]
Line_15 $$ final byte[] buffer = new byte[32768]-->Line_16 $$ for (int readBytes = inputStream.read(buffer); readBytes > 0; readBytes = inputStream.read(buffer)) [ FD ]
Line_14 $$ outputStream = new BufferedOutputStream(new FileOutputStream(targetFile))-->Line_26 $$ if (outputStream != null) [ FD ]
Line_16 $$ for (int readBytes = inputStream.read(buffer); readBytes > 0; readBytes = inputStream.read(buffer)) -->Line_17 $$ outputStream.write(buffer, 0, readBytes)[ FD ]
Line_6 $$ final File directory = targetFile.getParentFile()-->Line_7 $$ if (!directory.exists() && !directory.mkdirs()) [ FD ]
Line_2 $$ public static void copyFile(File sourceFile, File targetFile) throws IOException -->Line_10 $$ InputStream inputStream = null[ CD ]
