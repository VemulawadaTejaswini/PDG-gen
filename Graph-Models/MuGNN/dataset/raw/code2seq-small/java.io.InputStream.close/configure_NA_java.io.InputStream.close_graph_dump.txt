Line_2 $$ public void configure(File storageDir) -->Line_29 $$ System.setProperty("jna.boot.library.path", tmpDir.getAbsolutePath())[ CD ]
Line_16 $$ FileOutputStream outputStream = new FileOutputStream(libFile)-->Line_18 $$ IOUtils.copy(lib, outputStream)[ FD ]
Line_4 $$ File tmpDir = new File(storageDir, String.format("jna/%s", nativePrefix))-->Line_5 $$ tmpDir.mkdirs()[ FD ]
Line_7 $$ File libFile = new File(tmpDir, jnaLibName)-->Line_26 $$ throw new NativeIntegrationException(String.format("Could not create JNA native library '%s'.", libFile), e)[ FD ]
Line_11 $$ InputStream lib = getClass().getResourceAsStream(resourceName)-->Line_12 $$ if (lib == null) [ FD ]
Line_2 $$ public void configure(File storageDir) -->Line_4 $$ File tmpDir = new File(storageDir, String.format("jna/%s", nativePrefix))[ CD ]
Line_9 $$ String resourceName = "/com/sun/jna/" + nativePrefix + "/" + jnaLibName-->Line_11 $$ InputStream lib = getClass().getResourceAsStream(resourceName)[ FD ]
Line_7 $$ File libFile = new File(tmpDir, jnaLibName)-->Line_8 $$ if (!libFile.exists()) [ FD ]
Line_3 $$ String nativePrefix = OperatingSystem.current().getNativePrefix()-->Line_4 $$ File tmpDir = new File(storageDir, String.format("jna/%s", nativePrefix))[ FD ]
Line_8 $$ if (!libFile.exists()) -->Line_9 $$ String resourceName = "/com/sun/jna/" + nativePrefix + "/" + jnaLibName[ CD ]
Line_11 $$ InputStream lib = getClass().getResourceAsStream(resourceName)-->Line_18 $$ IOUtils.copy(lib, outputStream)[ FD ]
Line_12 $$ if (lib == null) -->Line_13 $$ return[ CD ]
Line_2 $$ public void configure(File storageDir) -->Line_5 $$ tmpDir.mkdirs()[ CD ]
Line_2 $$ public void configure(File storageDir) -->Line_8 $$ if (!libFile.exists()) [ CD ]
Line_11 $$ InputStream lib = getClass().getResourceAsStream(resourceName)-->Line_23 $$ lib.close()[ FD ]
Line_16 $$ FileOutputStream outputStream = new FileOutputStream(libFile)-->Line_20 $$ outputStream.close()[ FD ]
Line_4 $$ File tmpDir = new File(storageDir, String.format("jna/%s", nativePrefix))-->Line_29 $$ System.setProperty("jna.boot.library.path", tmpDir.getAbsolutePath())[ FD ]
Line_2 $$ public void configure(File storageDir) -->Line_7 $$ File libFile = new File(tmpDir, jnaLibName)[ CD ]
Line_2 $$ public void configure(File storageDir) -->Line_3 $$ String nativePrefix = OperatingSystem.current().getNativePrefix()[ CD ]
Line_2 $$ public void configure(File storageDir) -->Line_6 $$ String jnaLibName = OperatingSystem.current().isMacOsX() ? "libjnidispatch.jnilib" : System.mapLibraryName("jnidispatch")[ CD ]
