Line_2 $$ public PseudoClass loadClass(final String name) throws IOException, ClassNotFoundException -->Line_4 $$ final PseudoClass aClass = myLoaded.get(internalName)[ CD ]
Line_3 $$ final String internalName = name.replace('.', '/')-->Line_21 $$ myLoaded.put(internalName, result)[ FD ]
Line_3 $$ final String internalName = name.replace('.', '/')-->Line_8 $$ final InputStream is = aClass == null ? getClassBytesStream(internalName) : null[ FD ]
Line_3 $$ final String internalName = name.replace('.', '/')-->Line_11 $$ myLoaded.put(internalName, PseudoClass.NULL_OBJ)[ FD ]
Line_3 $$ final String internalName = name.replace('.', '/')-->Line_4 $$ final PseudoClass aClass = myLoaded.get(internalName)[ FD ]
Line_2 $$ public PseudoClass loadClass(final String name) throws IOException, ClassNotFoundException -->Line_9 $$ if (is == null) [ CD ]
Line_10 $$ if (aClass == null) -->Line_11 $$ myLoaded.put(internalName, PseudoClass.NULL_OBJ)[ CD ]
Line_8 $$ final InputStream is = aClass == null ? getClassBytesStream(internalName) : null-->Line_24 $$ is.close()[ FD ]
Line_2 $$ public PseudoClass loadClass(final String name) throws IOException, ClassNotFoundException -->Line_5 $$ if (aClass != null && aClass != PseudoClass.NULL_OBJ) [ CD ]
Line_2 $$ public PseudoClass loadClass(final String name) throws IOException, ClassNotFoundException -->Line_3 $$ final String internalName = name.replace('.', '/')[ FD ]
Line_2 $$ public PseudoClass loadClass(final String name) throws IOException, ClassNotFoundException -->Line_8 $$ final InputStream is = aClass == null ? getClassBytesStream(internalName) : null[ CD ]
Line_8 $$ final InputStream is = aClass == null ? getClassBytesStream(internalName) : null-->Line_9 $$ if (is == null) [ FD ]
Line_2 $$ public PseudoClass loadClass(final String name) throws IOException, ClassNotFoundException -->Line_13 $$ throw new ClassNotFoundException("Class not found: " + name.replace('/', '.')) [ FD ]
Line_4 $$ final PseudoClass aClass = myLoaded.get(internalName)-->Line_10 $$ if (aClass == null) [ FD ]
Line_5 $$ if (aClass != null && aClass != PseudoClass.NULL_OBJ) -->Line_6 $$ return aClass[ CD ]
Line_2 $$ public PseudoClass loadClass(final String name) throws IOException, ClassNotFoundException -->Line_3 $$ final String internalName = name.replace('.', '/')[ CD ]
Line_13 $$ throw new ClassNotFoundException("Class not found: " + name.replace('/', '.')) -->Line_15 $$ return this[ CD ]
Line_8 $$ final InputStream is = aClass == null ? getClassBytesStream(internalName) : null-->Line_20 $$ final PseudoClass result = loadPseudoClass(is)[ FD ]
Line_9 $$ if (is == null) -->Line_10 $$ if (aClass == null) [ CD ]
