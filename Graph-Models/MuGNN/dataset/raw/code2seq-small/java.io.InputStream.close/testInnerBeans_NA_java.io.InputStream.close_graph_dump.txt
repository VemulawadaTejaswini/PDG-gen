Line_2 $$ public void testInnerBeans() throws IOException -->Line_24 $$ assertEquals("inner2", inner2.getName())[ CD ]
Line_6 $$ InputStream inputStream = getClass().getResourceAsStream(REFTYPES_CONTEXT.getPath())-->Line_10 $$ inputStream.close()[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_62 $$ assertTrue(innerFactory.getName() == null)[ CD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_31 $$ TestBean inner5 = (TestBean) friends[2][ CD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_3 $$ DefaultListableBeanFactory xbf = new DefaultListableBeanFactory()[ CD ]
Line_42 $$ TestBean innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_58 $$ assertEquals(6, innerForConstructor.getAge())[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_43 $$ assertNotNull(innerForConstructor)[ CD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_44 $$ assertEquals("innerBean#3", innerForConstructor.getBeanName())[ CD ]
Line_42 $$ TestBean innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_52 $$ assertEquals(6, innerForConstructor.getAge())[ FD ]
Line_4 $$ XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(xbf)-->Line_8 $$ reader.loadBeanDefinitions(new InputSource(inputStream))[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_12 $$ xbf.getBean("innerBean")[ CD ]
Line_23 $$ DerivedTestBean inner2 = (DerivedTestBean) friends[0]-->Line_61 $$ assertTrue(inner2.wasDestroyed())[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_47 $$ hasInnerBeansForConstructor = (TestBean) xbf.getBean("hasInnerBeansAsPrototype")[ CD ]
Line_54 $$ innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_55 $$ assertNotNull(innerForConstructor)[ FD ]
Line_48 $$ innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_50 $$ assertEquals("innerBean", innerForConstructor.getBeanName())[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_51 $$ assertEquals("inner1", innerForConstructor.getName())[ CD ]
Line_54 $$ innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_58 $$ assertEquals(6, innerForConstructor.getAge())[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_30 $$ assertEquals(DummyFactory.SINGLETON_NAME, innerFactory.getName())[ CD ]
Line_42 $$ TestBean innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_54 $$ innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_13 $$ TestBean hasInnerBeans = (TestBean) xbf.getBean("hasInnerBeans")[ CD ]
Line_13 $$ TestBean hasInnerBeans = (TestBean) xbf.getBean("hasInnerBeans")-->Line_35 $$ TestBean inner3 = (TestBean) hasInnerBeans.getSomeMap().get("someKey")[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_26 $$ assertFalse(xbf.containsBean("innerBean#1"))[ CD ]
Line_38 $$ TestBean inner4 = (TestBean) hasInnerBeans.getSomeMap().get("someOtherKey")-->Line_40 $$ assertEquals(9, inner4.getAge())[ FD ]
Line_42 $$ TestBean innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_57 $$ assertEquals("inner1", innerForConstructor.getName())[ FD ]
Line_29 $$ TestBean innerFactory = (TestBean) friends[1]-->Line_30 $$ assertEquals(DummyFactory.SINGLETON_NAME, innerFactory.getName())[ FD ]
Line_42 $$ TestBean innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_51 $$ assertEquals("inner1", innerForConstructor.getName())[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_49 $$ assertNotNull(innerForConstructor)[ CD ]
Line_41 $$ TestBean hasInnerBeansForConstructor = (TestBean) xbf.getBean("hasInnerBeansForConstructor")-->Line_47 $$ hasInnerBeansForConstructor = (TestBean) xbf.getBean("hasInnerBeansAsPrototype")[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_40 $$ assertEquals(9, inner4.getAge())[ CD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_63 $$ assertTrue(inner5.wasDestroyed())[ CD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_54 $$ innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()[ CD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_6 $$ InputStream inputStream = getClass().getResourceAsStream(REFTYPES_CONTEXT.getPath())[ CD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_25 $$ assertTrue(inner2.getBeanName().startsWith(DerivedTestBean.class.getName()))[ CD ]
Line_29 $$ TestBean innerFactory = (TestBean) friends[1]-->Line_62 $$ assertTrue(innerFactory.getName() == null)[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_55 $$ assertNotNull(innerForConstructor)[ CD ]
Line_41 $$ TestBean hasInnerBeansForConstructor = (TestBean) xbf.getBean("hasInnerBeansForConstructor")-->Line_53 $$ hasInnerBeansForConstructor = (TestBean) xbf.getBean("hasInnerBeansAsPrototype")[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_20 $$ assertNotNull(hasInnerBeans.getFriends())[ CD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_36 $$ assertEquals("Jenny", inner3.getName())[ CD ]
Line_3 $$ DefaultListableBeanFactory xbf = new DefaultListableBeanFactory()-->Line_26 $$ assertFalse(xbf.containsBean("innerBean#1"))[ FD ]
Line_54 $$ innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_56 $$ assertEquals("innerBean", innerForConstructor.getBeanName())[ FD ]
Line_3 $$ DefaultListableBeanFactory xbf = new DefaultListableBeanFactory()-->Line_59 $$ xbf.destroySingletons()[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_15 $$ TestBean inner1 = (TestBean) hasInnerBeans.getSpouse()[ CD ]
Line_13 $$ TestBean hasInnerBeans = (TestBean) xbf.getBean("hasInnerBeans")-->Line_21 $$ Object[] friends = hasInnerBeans.getFriends().toArray()[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_23 $$ DerivedTestBean inner2 = (DerivedTestBean) friends[0][ CD ]
Line_31 $$ TestBean inner5 = (TestBean) friends[2]-->Line_63 $$ assertTrue(inner5.wasDestroyed())[ FD ]
Line_47 $$ hasInnerBeansForConstructor = (TestBean) xbf.getBean("hasInnerBeansAsPrototype")-->Line_53 $$ hasInnerBeansForConstructor = (TestBean) xbf.getBean("hasInnerBeansAsPrototype")[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_27 $$ assertNotNull(inner2)[ CD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_35 $$ TestBean inner3 = (TestBean) hasInnerBeans.getSomeMap().get("someKey")[ CD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_53 $$ hasInnerBeansForConstructor = (TestBean) xbf.getBean("hasInnerBeansAsPrototype")[ CD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_48 $$ innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()[ CD ]
Line_15 $$ TestBean inner1 = (TestBean) hasInnerBeans.getSpouse()-->Line_16 $$ assertNotNull(inner1)[ FD ]
Line_42 $$ TestBean innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_46 $$ assertEquals(6, innerForConstructor.getAge())[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_14 $$ assertEquals(5, hasInnerBeans.getAge())[ CD ]
Line_48 $$ innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_56 $$ assertEquals("innerBean", innerForConstructor.getBeanName())[ FD ]
Line_47 $$ hasInnerBeansForConstructor = (TestBean) xbf.getBean("hasInnerBeansAsPrototype")-->Line_54 $$ innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()[ FD ]
Line_41 $$ TestBean hasInnerBeansForConstructor = (TestBean) xbf.getBean("hasInnerBeansForConstructor")-->Line_54 $$ innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()[ FD ]
Line_13 $$ TestBean hasInnerBeans = (TestBean) xbf.getBean("hasInnerBeans")-->Line_20 $$ assertNotNull(hasInnerBeans.getFriends())[ FD ]
Line_48 $$ innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_51 $$ assertEquals("inner1", innerForConstructor.getName())[ FD ]
Line_15 $$ TestBean inner1 = (TestBean) hasInnerBeans.getSpouse()-->Line_19 $$ assertEquals(6, inner1.getAge())[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_18 $$ assertEquals("inner1", inner1.getName())[ CD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_58 $$ assertEquals(6, innerForConstructor.getAge())[ CD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_60 $$ assertTrue(inner1.wasDestroyed())[ CD ]
Line_42 $$ TestBean innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_56 $$ assertEquals("innerBean", innerForConstructor.getBeanName())[ FD ]
Line_3 $$ DefaultListableBeanFactory xbf = new DefaultListableBeanFactory()-->Line_13 $$ TestBean hasInnerBeans = (TestBean) xbf.getBean("hasInnerBeans")[ FD ]
Line_15 $$ TestBean inner1 = (TestBean) hasInnerBeans.getSpouse()-->Line_17 $$ assertEquals("innerBean#1", inner1.getBeanName())[ FD ]
Line_35 $$ TestBean inner3 = (TestBean) hasInnerBeans.getSomeMap().get("someKey")-->Line_36 $$ assertEquals("Jenny", inner3.getName())[ FD ]
Line_42 $$ TestBean innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_50 $$ assertEquals("innerBean", innerForConstructor.getBeanName())[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_33 $$ assertNotNull(hasInnerBeans.getSomeMap())[ CD ]
Line_13 $$ TestBean hasInnerBeans = (TestBean) xbf.getBean("hasInnerBeans")-->Line_33 $$ assertNotNull(hasInnerBeans.getSomeMap())[ FD ]
Line_15 $$ TestBean inner1 = (TestBean) hasInnerBeans.getSpouse()-->Line_60 $$ assertTrue(inner1.wasDestroyed())[ FD ]
Line_23 $$ DerivedTestBean inner2 = (DerivedTestBean) friends[0]-->Line_24 $$ assertEquals("inner2", inner2.getName())[ FD ]
Line_23 $$ DerivedTestBean inner2 = (DerivedTestBean) friends[0]-->Line_25 $$ assertTrue(inner2.getBeanName().startsWith(DerivedTestBean.class.getName()))[ FD ]
Line_48 $$ innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_55 $$ assertNotNull(innerForConstructor)[ FD ]
Line_23 $$ DerivedTestBean inner2 = (DerivedTestBean) friends[0]-->Line_27 $$ assertNotNull(inner2)[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_22 $$ assertEquals(3, friends.length)[ CD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_29 $$ TestBean innerFactory = (TestBean) friends[1][ CD ]
Line_48 $$ innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_57 $$ assertEquals("inner1", innerForConstructor.getName())[ FD ]
Line_3 $$ DefaultListableBeanFactory xbf = new DefaultListableBeanFactory()-->Line_41 $$ TestBean hasInnerBeansForConstructor = (TestBean) xbf.getBean("hasInnerBeansForConstructor")[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_21 $$ Object[] friends = hasInnerBeans.getFriends().toArray()[ CD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_61 $$ assertTrue(inner2.wasDestroyed())[ CD ]
Line_13 $$ TestBean hasInnerBeans = (TestBean) xbf.getBean("hasInnerBeans")-->Line_38 $$ TestBean inner4 = (TestBean) hasInnerBeans.getSomeMap().get("someOtherKey")[ FD ]
Line_13 $$ TestBean hasInnerBeans = (TestBean) xbf.getBean("hasInnerBeans")-->Line_15 $$ TestBean inner1 = (TestBean) hasInnerBeans.getSpouse()[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_56 $$ assertEquals("innerBean", innerForConstructor.getBeanName())[ CD ]
Line_38 $$ TestBean inner4 = (TestBean) hasInnerBeans.getSomeMap().get("someOtherKey")-->Line_39 $$ assertEquals("inner4", inner4.getName())[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_52 $$ assertEquals(6, innerForConstructor.getAge())[ CD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_4 $$ XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(xbf)[ CD ]
Line_15 $$ TestBean inner1 = (TestBean) hasInnerBeans.getSpouse()-->Line_18 $$ assertEquals("inner1", inner1.getName())[ FD ]
Line_35 $$ TestBean inner3 = (TestBean) hasInnerBeans.getSomeMap().get("someKey")-->Line_37 $$ assertEquals(30, inner3.getAge())[ FD ]
Line_42 $$ TestBean innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_44 $$ assertEquals("innerBean#3", innerForConstructor.getBeanName())[ FD ]
Line_3 $$ DefaultListableBeanFactory xbf = new DefaultListableBeanFactory()-->Line_12 $$ xbf.getBean("innerBean")[ FD ]
Line_48 $$ innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_54 $$ innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()[ FD ]
Line_53 $$ hasInnerBeansForConstructor = (TestBean) xbf.getBean("hasInnerBeansAsPrototype")-->Line_54 $$ innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()[ FD ]
Line_42 $$ TestBean innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_49 $$ assertNotNull(innerForConstructor)[ FD ]
Line_48 $$ innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_49 $$ assertNotNull(innerForConstructor)[ FD ]
Line_4 $$ XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(xbf)-->Line_5 $$ reader.setValidationMode(XmlBeanDefinitionReader.VALIDATION_NONE)[ FD ]
Line_42 $$ TestBean innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_45 $$ assertEquals("inner1", innerForConstructor.getName())[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_32 $$ assertEquals("innerBean#2", inner5.getBeanName())[ CD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_37 $$ assertEquals(30, inner3.getAge())[ CD ]
Line_3 $$ DefaultListableBeanFactory xbf = new DefaultListableBeanFactory()-->Line_47 $$ hasInnerBeansForConstructor = (TestBean) xbf.getBean("hasInnerBeansAsPrototype")[ FD ]
Line_42 $$ TestBean innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_55 $$ assertNotNull(innerForConstructor)[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_42 $$ TestBean innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()[ CD ]
Line_48 $$ innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_58 $$ assertEquals(6, innerForConstructor.getAge())[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_39 $$ assertEquals("inner4", inner4.getName())[ CD ]
Line_48 $$ innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_52 $$ assertEquals(6, innerForConstructor.getAge())[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_57 $$ assertEquals("inner1", innerForConstructor.getName())[ CD ]
Line_41 $$ TestBean hasInnerBeansForConstructor = (TestBean) xbf.getBean("hasInnerBeansForConstructor")-->Line_48 $$ innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_50 $$ assertEquals("innerBean", innerForConstructor.getBeanName())[ CD ]
Line_23 $$ DerivedTestBean inner2 = (DerivedTestBean) friends[0]-->Line_28 $$ assertEquals(7, inner2.getAge())[ FD ]
Line_41 $$ TestBean hasInnerBeansForConstructor = (TestBean) xbf.getBean("hasInnerBeansForConstructor")-->Line_42 $$ TestBean innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_45 $$ assertEquals("inner1", innerForConstructor.getName())[ CD ]
Line_3 $$ DefaultListableBeanFactory xbf = new DefaultListableBeanFactory()-->Line_53 $$ hasInnerBeansForConstructor = (TestBean) xbf.getBean("hasInnerBeansAsPrototype")[ FD ]
Line_31 $$ TestBean inner5 = (TestBean) friends[2]-->Line_32 $$ assertEquals("innerBean#2", inner5.getBeanName())[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_46 $$ assertEquals(6, innerForConstructor.getAge())[ CD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_5 $$ reader.setValidationMode(XmlBeanDefinitionReader.VALIDATION_NONE)[ CD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_41 $$ TestBean hasInnerBeansForConstructor = (TestBean) xbf.getBean("hasInnerBeansForConstructor")[ CD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_38 $$ TestBean inner4 = (TestBean) hasInnerBeans.getSomeMap().get("someOtherKey")[ CD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_16 $$ assertNotNull(inner1)[ CD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_28 $$ assertEquals(7, inner2.getAge())[ CD ]
Line_13 $$ TestBean hasInnerBeans = (TestBean) xbf.getBean("hasInnerBeans")-->Line_34 $$ assertEquals(2, hasInnerBeans.getSomeMap().size())[ FD ]
Line_13 $$ TestBean hasInnerBeans = (TestBean) xbf.getBean("hasInnerBeans")-->Line_14 $$ assertEquals(5, hasInnerBeans.getAge())[ FD ]
Line_42 $$ TestBean innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_43 $$ assertNotNull(innerForConstructor)[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_34 $$ assertEquals(2, hasInnerBeans.getSomeMap().size())[ CD ]
Line_42 $$ TestBean innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_48 $$ innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()[ FD ]
Line_47 $$ hasInnerBeansForConstructor = (TestBean) xbf.getBean("hasInnerBeansAsPrototype")-->Line_48 $$ innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_19 $$ assertEquals(6, inner1.getAge())[ CD ]
Line_54 $$ innerForConstructor = (TestBean) hasInnerBeansForConstructor.getSpouse()-->Line_57 $$ assertEquals("inner1", innerForConstructor.getName())[ FD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_17 $$ assertEquals("innerBean#1", inner1.getBeanName())[ CD ]
Line_2 $$ public void testInnerBeans() throws IOException -->Line_59 $$ xbf.destroySingletons()[ CD ]
