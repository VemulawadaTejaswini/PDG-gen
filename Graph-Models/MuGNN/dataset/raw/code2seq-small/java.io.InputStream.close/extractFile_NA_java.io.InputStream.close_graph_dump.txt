Line_16 $$ while (true) -->Line_20 $$ output.write(buffer, 0, length)[ CD ]
Line_2 $$ private File extractFile(String sourcePath, String sourceCrc, File extractedFile) throws IOException -->Line_4 $$ if (extractedFile.exists()) [ CD ]
Line_16 $$ while (true) -->Line_17 $$ int length = input.read(buffer)[ CD ]
Line_17 $$ int length = input.read(buffer)-->Line_18 $$ if (length == -1)[ FD ]
Line_12 $$ InputStream input = readFile(sourcePath)-->Line_17 $$ int length = input.read(buffer)[ FD ]
Line_2 $$ private File extractFile(String sourcePath, String sourceCrc, File extractedFile) throws IOException -->Line_28 $$ return extractedFile[ CD ]
Line_12 $$ InputStream input = readFile(sourcePath)-->Line_22 $$ input.close()[ FD ]
Line_17 $$ int length = input.read(buffer)-->Line_20 $$ output.write(buffer, 0, length)[ FD ]
Line_2 $$ private File extractFile(String sourcePath, String sourceCrc, File extractedFile) throws IOException -->Line_3 $$ String extractedCrc = null[ CD ]
Line_2 $$ private File extractFile(String sourcePath, String sourceCrc, File extractedFile) throws IOException -->Line_10 $$ if (extractedCrc == null || !extractedCrc.equals(sourceCrc)) [ CD ]
Line_15 $$ byte[] buffer = new byte[4096]-->Line_17 $$ int length = input.read(buffer)[ FD ]
Line_15 $$ byte[] buffer = new byte[4096]-->Line_20 $$ output.write(buffer, 0, length)[ FD ]
Line_6 $$ extractedCrc = crc(new FileInputStream(extractedFile))-->Line_10 $$ if (extractedCrc == null || !extractedCrc.equals(sourceCrc)) [ FD ]
Line_2 $$ private File extractFile(String sourcePath, String sourceCrc, File extractedFile) throws IOException -->Line_4 $$ if (extractedFile.exists()) [ FD ]
Line_16 $$ while (true) -->Line_18 $$ if (length == -1)[ CD ]
Line_2 $$ private File extractFile(String sourcePath, String sourceCrc, File extractedFile) throws IOException -->Line_13 $$ extractedFile.getParentFile().mkdirs()[ FD ]
Line_14 $$ FileOutputStream output = new FileOutputStream(extractedFile)-->Line_20 $$ output.write(buffer, 0, length)[ FD ]
Line_2 $$ private File extractFile(String sourcePath, String sourceCrc, File extractedFile) throws IOException -->Line_10 $$ if (extractedCrc == null || !extractedCrc.equals(sourceCrc)) [ FD ]
Line_3 $$ String extractedCrc = null-->Line_6 $$ extractedCrc = crc(new FileInputStream(extractedFile))[ FD ]
Line_2 $$ private File extractFile(String sourcePath, String sourceCrc, File extractedFile) throws IOException -->Line_12 $$ InputStream input = readFile(sourcePath)[ FD ]
Line_14 $$ FileOutputStream output = new FileOutputStream(extractedFile)-->Line_23 $$ output.close()[ FD ]
Line_3 $$ String extractedCrc = null-->Line_10 $$ if (extractedCrc == null || !extractedCrc.equals(sourceCrc)) [ FD ]
Line_2 $$ private File extractFile(String sourcePath, String sourceCrc, File extractedFile) throws IOException -->Line_25 $$ throw new GdxRuntimeException("Error extracting file: " + sourcePath + "\nTo: " + extractedFile.getAbsolutePath(), ex)[ FD ]
