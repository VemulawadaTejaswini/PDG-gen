Line_5 $$ messageDigest = createMessageDigest(algorithm)-->Line_13 $$ messageDigest.update(buffer, 0, nread)[ FD ]
Line_2 $$ public static HashValue createHash(InputStream instr, String algorithm) -->Line_5 $$ messageDigest = createMessageDigest(algorithm)[ FD ]
Line_2 $$ public static HashValue createHash(InputStream instr, String algorithm) -->Line_16 $$ instr.close()[ FD ]
Line_8 $$ while (true) -->Line_10 $$ if (nread < 0) [ CD ]
Line_3 $$ MessageDigest messageDigest-->Line_21 $$ return new HashValue(messageDigest.digest())[ FD ]
Line_5 $$ messageDigest = createMessageDigest(algorithm)-->Line_21 $$ return new HashValue(messageDigest.digest())[ FD ]
Line_3 $$ MessageDigest messageDigest-->Line_5 $$ messageDigest = createMessageDigest(algorithm)[ FD ]
Line_8 $$ while (true) -->Line_13 $$ messageDigest.update(buffer, 0, nread)[ CD ]
Line_9 $$ int nread = instr.read(buffer)-->Line_13 $$ messageDigest.update(buffer, 0, nread)[ FD ]
Line_2 $$ public static HashValue createHash(InputStream instr, String algorithm) -->Line_9 $$ int nread = instr.read(buffer)[ FD ]
Line_3 $$ MessageDigest messageDigest-->Line_13 $$ messageDigest.update(buffer, 0, nread)[ FD ]
Line_6 $$ byte[] buffer = new byte[4096]-->Line_9 $$ int nread = instr.read(buffer)[ FD ]
Line_9 $$ int nread = instr.read(buffer)-->Line_10 $$ if (nread < 0) [ FD ]
Line_6 $$ byte[] buffer = new byte[4096]-->Line_13 $$ messageDigest.update(buffer, 0, nread)[ FD ]
Line_8 $$ while (true) -->Line_9 $$ int nread = instr.read(buffer)[ CD ]
Line_2 $$ public static HashValue createHash(InputStream instr, String algorithm) -->Line_21 $$ return new HashValue(messageDigest.digest())[ CD ]
Line_2 $$ public static HashValue createHash(InputStream instr, String algorithm) -->Line_3 $$ MessageDigest messageDigest[ CD ]
