Line_14 $$ encoding = this.fileEncodings.getProperty(filename)-->Line_17 $$ encoding = this.defaultEncoding[ FD ]
Line_2 $$ protected Properties loadProperties(Resource resource, String filename) throws IOException -->Line_8 $$ logger.debug("Loading properties [" + resource.getFilename() + "]")[ FD ]
Line_25 $$ if (logger.isDebugEnabled()) -->Line_26 $$ logger.debug("Loading properties [" + resource.getFilename() + "]")[ CD ]
Line_13 $$ if (this.fileEncodings != null) -->Line_14 $$ encoding = this.fileEncodings.getProperty(filename)[ CD ]
Line_6 $$ if (resource.getFilename().endsWith(XML_SUFFIX)) -->Line_12 $$ String encoding = null[ CD ]
Line_14 $$ encoding = this.fileEncodings.getProperty(filename)-->Line_19 $$ if (encoding != null) [ FD ]
Line_2 $$ protected Properties loadProperties(Resource resource, String filename) throws IOException -->Line_4 $$ Properties props = newProperties()[ CD ]
Line_19 $$ if (encoding != null) -->Line_25 $$ if (logger.isDebugEnabled()) [ CD ]
Line_2 $$ protected Properties loadProperties(Resource resource, String filename) throws IOException -->Line_3 $$ InputStream is = resource.getInputStream()[ FD ]
Line_6 $$ if (resource.getFilename().endsWith(XML_SUFFIX)) -->Line_13 $$ if (this.fileEncodings != null) [ CD ]
Line_12 $$ String encoding = null-->Line_17 $$ encoding = this.defaultEncoding[ FD ]
Line_4 $$ Properties props = newProperties()-->Line_28 $$ this.propertiesPersister.load(props, is)[ FD ]
Line_12 $$ String encoding = null-->Line_14 $$ encoding = this.fileEncodings.getProperty(filename)[ FD ]
Line_2 $$ protected Properties loadProperties(Resource resource, String filename) throws IOException -->Line_26 $$ logger.debug("Loading properties [" + resource.getFilename() + "]")[ FD ]
Line_16 $$ if (encoding == null) -->Line_17 $$ encoding = this.defaultEncoding[ CD ]
Line_4 $$ Properties props = newProperties()-->Line_23 $$ this.propertiesPersister.load(props, new InputStreamReader(is, encoding))[ FD ]
Line_6 $$ if (resource.getFilename().endsWith(XML_SUFFIX)) -->Line_19 $$ if (encoding != null) [ CD ]
Line_12 $$ String encoding = null-->Line_19 $$ if (encoding != null) [ FD ]
Line_7 $$ if (logger.isDebugEnabled()) -->Line_8 $$ logger.debug("Loading properties [" + resource.getFilename() + "]")[ CD ]
Line_19 $$ if (encoding != null) -->Line_28 $$ this.propertiesPersister.load(props, is)[ CD ]
Line_19 $$ if (encoding != null) -->Line_20 $$ if (logger.isDebugEnabled()) [ CD ]
Line_17 $$ encoding = this.defaultEncoding-->Line_19 $$ if (encoding != null) [ FD ]
Line_6 $$ if (resource.getFilename().endsWith(XML_SUFFIX)) -->Line_16 $$ if (encoding == null) [ CD ]
Line_3 $$ InputStream is = resource.getInputStream()-->Line_10 $$ this.propertiesPersister.loadFromXml(props, is)[ FD ]
Line_12 $$ String encoding = null-->Line_16 $$ if (encoding == null) [ FD ]
Line_2 $$ protected Properties loadProperties(Resource resource, String filename) throws IOException -->Line_6 $$ if (resource.getFilename().endsWith(XML_SUFFIX)) [ FD ]
Line_6 $$ if (resource.getFilename().endsWith(XML_SUFFIX)) -->Line_7 $$ if (logger.isDebugEnabled()) [ CD ]
Line_4 $$ Properties props = newProperties()-->Line_10 $$ this.propertiesPersister.loadFromXml(props, is)[ FD ]
Line_3 $$ InputStream is = resource.getInputStream()-->Line_33 $$ is.close()[ FD ]
Line_3 $$ InputStream is = resource.getInputStream()-->Line_28 $$ this.propertiesPersister.load(props, is)[ FD ]
Line_2 $$ protected Properties loadProperties(Resource resource, String filename) throws IOException -->Line_21 $$ logger.debug("Loading properties [" + resource.getFilename() + "] with encoding '" + encoding + "'")[ FD ]
Line_20 $$ if (logger.isDebugEnabled()) -->Line_21 $$ logger.debug("Loading properties [" + resource.getFilename() + "] with encoding '" + encoding + "'")[ CD ]
Line_19 $$ if (encoding != null) -->Line_23 $$ this.propertiesPersister.load(props, new InputStreamReader(is, encoding))[ CD ]
Line_6 $$ if (resource.getFilename().endsWith(XML_SUFFIX)) -->Line_10 $$ this.propertiesPersister.loadFromXml(props, is)[ CD ]
Line_2 $$ protected Properties loadProperties(Resource resource, String filename) throws IOException -->Line_14 $$ encoding = this.fileEncodings.getProperty(filename)[ FD ]
Line_2 $$ protected Properties loadProperties(Resource resource, String filename) throws IOException -->Line_3 $$ InputStream is = resource.getInputStream()[ CD ]
Line_14 $$ encoding = this.fileEncodings.getProperty(filename)-->Line_16 $$ if (encoding == null) [ FD ]
