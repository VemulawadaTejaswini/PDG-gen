Line_3 $$ OutputStream out = getOutputStream(defaultBufferSize)-->Line_4 $$ writeData(out)[ FD ]
Line_2 $$ public void testSeek() throws Exception -->Line_16 $$ Assert.assertEquals(pos, ((Seekable) in).getPos())[ CD ]
Line_2 $$ public void testSeek() throws Exception -->Line_23 $$ Assert.assertEquals(pos, ((Seekable) in).getPos())[ CD ]
Line_2 $$ public void testSeek() throws Exception -->Line_8 $$ seekCheck(in, dataLen / 2)[ CD ]
Line_2 $$ public void testSeek() throws Exception -->Line_24 $$ in.close()[ CD ]
Line_5 $$ InputStream in = getInputStream(defaultBufferSize)-->Line_11 $$ seekCheck(in, -3)[ FD ]
Line_2 $$ public void testSeek() throws Exception -->Line_4 $$ writeData(out)[ CD ]
Line_5 $$ InputStream in = getInputStream(defaultBufferSize)-->Line_24 $$ in.close()[ FD ]
Line_9 $$ final long pos = ((Seekable) in).getPos()-->Line_23 $$ Assert.assertEquals(pos, ((Seekable) in).getPos())[ FD ]
Line_5 $$ InputStream in = getInputStream(defaultBufferSize)-->Line_18 $$ seekCheck(in, dataLen + 3)[ FD ]
Line_9 $$ final long pos = ((Seekable) in).getPos()-->Line_16 $$ Assert.assertEquals(pos, ((Seekable) in).getPos())[ FD ]
Line_2 $$ public void testSeek() throws Exception -->Line_6 $$ seekCheck(in, dataLen / 3)[ CD ]
Line_5 $$ InputStream in = getInputStream(defaultBufferSize)-->Line_8 $$ seekCheck(in, dataLen / 2)[ FD ]
Line_5 $$ InputStream in = getInputStream(defaultBufferSize)-->Line_6 $$ seekCheck(in, dataLen / 3)[ FD ]
Line_2 $$ public void testSeek() throws Exception -->Line_7 $$ seekCheck(in, 0)[ CD ]
Line_5 $$ InputStream in = getInputStream(defaultBufferSize)-->Line_7 $$ seekCheck(in, 0)[ FD ]
Line_2 $$ public void testSeek() throws Exception -->Line_9 $$ final long pos = ((Seekable) in).getPos()[ CD ]
Line_2 $$ public void testSeek() throws Exception -->Line_5 $$ InputStream in = getInputStream(defaultBufferSize)[ CD ]
Line_2 $$ public void testSeek() throws Exception -->Line_3 $$ OutputStream out = getOutputStream(defaultBufferSize)[ CD ]
