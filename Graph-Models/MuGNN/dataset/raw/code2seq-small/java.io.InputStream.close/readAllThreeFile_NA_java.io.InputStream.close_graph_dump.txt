Line_2 $$ private void readAllThreeFile(NativeAzureFileSystem fs, Path testFile) throws IOException -->Line_6 $$ inStream.close()[ CD ]
Line_2 $$ private void readAllThreeFile(NativeAzureFileSystem fs, Path testFile) throws IOException -->Line_4 $$ InputStream inStream = fs.open(testFile)[ CD ]
Line_4 $$ InputStream inStream = fs.open(testFile)-->Line_6 $$ inStream.close()[ FD ]
Line_2 $$ private void readAllThreeFile(NativeAzureFileSystem fs, Path testFile) throws IOException -->Line_3 $$ byte[] buffer = new byte[ALL_THREE_FILE_SIZE][ CD ]
Line_2 $$ private void readAllThreeFile(NativeAzureFileSystem fs, Path testFile) throws IOException -->Line_7 $$ for (int i = 0; i < buffer.length; i++) [ CD ]
Line_7 $$ for (int i = 0; i < buffer.length; i++) -->Line_8 $$ assertEquals(3, buffer[i])[ CD ]
Line_2 $$ private void readAllThreeFile(NativeAzureFileSystem fs, Path testFile) throws IOException -->Line_4 $$ InputStream inStream = fs.open(testFile)[ FD ]
Line_4 $$ InputStream inStream = fs.open(testFile)-->Line_5 $$ assertEquals(buffer.length, inStream.read(buffer, 0, buffer.length))[ FD ]
Line_3 $$ byte[] buffer = new byte[ALL_THREE_FILE_SIZE]-->Line_5 $$ assertEquals(buffer.length, inStream.read(buffer, 0, buffer.length))[ FD ]
Line_2 $$ private void readAllThreeFile(NativeAzureFileSystem fs, Path testFile) throws IOException -->Line_5 $$ assertEquals(buffer.length, inStream.read(buffer, 0, buffer.length))[ CD ]
