Line_11 $$ if (stream != null) -->Line_12 $$ stream.close()[ CD ]
Line_2 $$ public static <T> T processInputStream(@NotNull final VirtualFile file, @NotNull Function<InputStream, T> function) -->Line_6 $$ return function.fun(stream)[ FD ]
Line_5 $$ stream = file.getInputStream()-->Line_12 $$ stream.close()[ FD ]
Line_2 $$ public static <T> T processInputStream(@NotNull final VirtualFile file, @NotNull Function<InputStream, T> function) -->Line_5 $$ stream = file.getInputStream()[ FD ]
Line_3 $$ InputStream stream = null-->Line_5 $$ stream = file.getInputStream()[ FD ]
Line_2 $$ public static <T> T processInputStream(@NotNull final VirtualFile file, @NotNull Function<InputStream, T> function) -->Line_3 $$ InputStream stream = null[ CD ]
Line_3 $$ InputStream stream = null-->Line_6 $$ return function.fun(stream)[ FD ]
Line_2 $$ public static <T> T processInputStream(@NotNull final VirtualFile file, @NotNull Function<InputStream, T> function) -->Line_18 $$ return null[ CD ]
Line_5 $$ stream = file.getInputStream()-->Line_11 $$ if (stream != null) [ FD ]
Line_3 $$ InputStream stream = null-->Line_12 $$ stream.close()[ FD ]
Line_3 $$ InputStream stream = null-->Line_11 $$ if (stream != null) [ FD ]
Line_5 $$ stream = file.getInputStream()-->Line_6 $$ return function.fun(stream)[ FD ]
