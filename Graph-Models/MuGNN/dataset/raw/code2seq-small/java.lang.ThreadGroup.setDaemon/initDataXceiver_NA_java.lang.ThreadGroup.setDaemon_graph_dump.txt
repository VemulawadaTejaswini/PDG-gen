Line_2 $$ private void initDataXceiver(Configuration conf) throws IOException -->Line_16 $$ if (conf.getBoolean(DFSConfigKeys.DFS_CLIENT_READ_SHORTCIRCUIT_KEY, DFSConfigKeys.DFS_CLIENT_READ_SHORTCIRCUIT_DEFAULT) || conf.getBoolean(DFSConfigKeys.DFS_CLIENT_DOMAIN_SOCKET_DATA_TRAFFIC, DFSConfigKeys.DFS_CLIENT_DOMAIN_SOCKET_DATA_TRAFFIC_DEFAULT)) [ CD ]
Line_2 $$ private void initDataXceiver(Configuration conf) throws IOException -->Line_14 $$ this.dataXceiverServer = new Daemon(threadGroup, xserver)[ CD ]
Line_7 $$ tcpPeerServer = new TcpPeerServer(dnConf.socketWriteTimeout, DataNode.getStreamingAddr(conf))-->Line_9 $$ tcpPeerServer.setReceiveBufferSize(HdfsConstants.DEFAULT_DATA_SOCKET_SIZE)[ FD ]
Line_2 $$ private void initDataXceiver(Configuration conf) throws IOException -->Line_16 $$ if (conf.getBoolean(DFSConfigKeys.DFS_CLIENT_READ_SHORTCIRCUIT_KEY, DFSConfigKeys.DFS_CLIENT_READ_SHORTCIRCUIT_DEFAULT) || conf.getBoolean(DFSConfigKeys.DFS_CLIENT_DOMAIN_SOCKET_DATA_TRAFFIC, DFSConfigKeys.DFS_CLIENT_DOMAIN_SOCKET_DATA_TRAFFIC_DEFAULT)) [ FD ]
Line_17 $$ DomainPeerServer domainPeerServer = getDomainPeerServer(conf, streamingAddr.getPort())-->Line_18 $$ if (domainPeerServer != null) [ FD ]
Line_2 $$ private void initDataXceiver(Configuration conf) throws IOException -->Line_12 $$ this.threadGroup = new ThreadGroup("dataXceiverServer")[ CD ]
Line_3 $$ TcpPeerServer tcpPeerServer-->Line_5 $$ tcpPeerServer = new TcpPeerServer(secureResources)[ FD ]
Line_18 $$ if (domainPeerServer != null) -->Line_19 $$ this.localDataXceiverServer = new Daemon(threadGroup, new DataXceiverServer(domainPeerServer, conf, this))[ CD ]
Line_4 $$ if (secureResources != null) -->Line_7 $$ tcpPeerServer = new TcpPeerServer(dnConf.socketWriteTimeout, DataNode.getStreamingAddr(conf))[ CD ]
Line_17 $$ DomainPeerServer domainPeerServer = getDomainPeerServer(conf, streamingAddr.getPort())-->Line_20 $$ LOG.info("Listening on UNIX domain socket: " + domainPeerServer.getBindPath())[ FD ]
Line_4 $$ if (secureResources != null) -->Line_5 $$ tcpPeerServer = new TcpPeerServer(secureResources)[ CD ]
Line_2 $$ private void initDataXceiver(Configuration conf) throws IOException -->Line_4 $$ if (secureResources != null) [ CD ]
Line_3 $$ TcpPeerServer tcpPeerServer-->Line_9 $$ tcpPeerServer.setReceiveBufferSize(HdfsConstants.DEFAULT_DATA_SOCKET_SIZE)[ FD ]
Line_2 $$ private void initDataXceiver(Configuration conf) throws IOException -->Line_17 $$ DomainPeerServer domainPeerServer = getDomainPeerServer(conf, streamingAddr.getPort())[ FD ]
Line_2 $$ private void initDataXceiver(Configuration conf) throws IOException -->Line_7 $$ tcpPeerServer = new TcpPeerServer(dnConf.socketWriteTimeout, DataNode.getStreamingAddr(conf))[ FD ]
Line_16 $$ if (conf.getBoolean(DFSConfigKeys.DFS_CLIENT_READ_SHORTCIRCUIT_KEY, DFSConfigKeys.DFS_CLIENT_READ_SHORTCIRCUIT_DEFAULT) || conf.getBoolean(DFSConfigKeys.DFS_CLIENT_DOMAIN_SOCKET_DATA_TRAFFIC, DFSConfigKeys.DFS_CLIENT_DOMAIN_SOCKET_DATA_TRAFFIC_DEFAULT)) -->Line_18 $$ if (domainPeerServer != null) [ CD ]
Line_2 $$ private void initDataXceiver(Configuration conf) throws IOException -->Line_15 $$ this.threadGroup.setDaemon(true)[ CD ]
Line_7 $$ tcpPeerServer = new TcpPeerServer(dnConf.socketWriteTimeout, DataNode.getStreamingAddr(conf))-->Line_10 $$ streamingAddr = tcpPeerServer.getStreamingAddr()[ FD ]
Line_18 $$ if (domainPeerServer != null) -->Line_20 $$ LOG.info("Listening on UNIX domain socket: " + domainPeerServer.getBindPath())[ CD ]
Line_2 $$ private void initDataXceiver(Configuration conf) throws IOException -->Line_10 $$ streamingAddr = tcpPeerServer.getStreamingAddr()[ CD ]
Line_2 $$ private void initDataXceiver(Configuration conf) throws IOException -->Line_9 $$ tcpPeerServer.setReceiveBufferSize(HdfsConstants.DEFAULT_DATA_SOCKET_SIZE)[ CD ]
Line_2 $$ private void initDataXceiver(Configuration conf) throws IOException -->Line_11 $$ LOG.info("Opened streaming server at " + streamingAddr)[ CD ]
Line_2 $$ private void initDataXceiver(Configuration conf) throws IOException -->Line_23 $$ this.shortCircuitRegistry = new ShortCircuitRegistry(conf)[ CD ]
Line_2 $$ private void initDataXceiver(Configuration conf) throws IOException -->Line_3 $$ TcpPeerServer tcpPeerServer[ CD ]
Line_5 $$ tcpPeerServer = new TcpPeerServer(secureResources)-->Line_7 $$ tcpPeerServer = new TcpPeerServer(dnConf.socketWriteTimeout, DataNode.getStreamingAddr(conf))[ FD ]
Line_3 $$ TcpPeerServer tcpPeerServer-->Line_7 $$ tcpPeerServer = new TcpPeerServer(dnConf.socketWriteTimeout, DataNode.getStreamingAddr(conf))[ FD ]
Line_3 $$ TcpPeerServer tcpPeerServer-->Line_10 $$ streamingAddr = tcpPeerServer.getStreamingAddr()[ FD ]
Line_5 $$ tcpPeerServer = new TcpPeerServer(secureResources)-->Line_9 $$ tcpPeerServer.setReceiveBufferSize(HdfsConstants.DEFAULT_DATA_SOCKET_SIZE)[ FD ]
Line_16 $$ if (conf.getBoolean(DFSConfigKeys.DFS_CLIENT_READ_SHORTCIRCUIT_KEY, DFSConfigKeys.DFS_CLIENT_READ_SHORTCIRCUIT_DEFAULT) || conf.getBoolean(DFSConfigKeys.DFS_CLIENT_DOMAIN_SOCKET_DATA_TRAFFIC, DFSConfigKeys.DFS_CLIENT_DOMAIN_SOCKET_DATA_TRAFFIC_DEFAULT)) -->Line_17 $$ DomainPeerServer domainPeerServer = getDomainPeerServer(conf, streamingAddr.getPort())[ CD ]
Line_5 $$ tcpPeerServer = new TcpPeerServer(secureResources)-->Line_10 $$ streamingAddr = tcpPeerServer.getStreamingAddr()[ FD ]
