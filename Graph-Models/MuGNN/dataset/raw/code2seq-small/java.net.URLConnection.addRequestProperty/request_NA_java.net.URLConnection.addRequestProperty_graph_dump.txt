Line_18 $$ try (InputStream inputStream = httpURLConnection.getInputStream()) -->Line_23 $$ if (inputStream != null) [ FD ]
Line_23 $$ if (inputStream != null) -->Line_24 $$ while (inputStream.read() != -1) [ CD ]
Line_4 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlObject.openConnection()-->Line_27 $$ return new Response(httpURLConnection.getResponseCode(), null, null)[ FD ]
Line_2 $$ public static Response request(String url, Map<String, List<String>> headers) throws IOException -->Line_3 $$ URL urlObject = new URL(url)[ CD ]
Line_2 $$ public static Response request(String url, Map<String, List<String>> headers) throws IOException -->Line_6 $$ httpURLConnection.setInstanceFollowRedirects(true)[ CD ]
Line_4 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlObject.openConnection()-->Line_29 $$ httpURLConnection.disconnect()[ FD ]
Line_11 $$ if (key.equals("Cookie")) -->Line_12 $$ httpURLConnection.addRequestProperty(key, value.split(";", 2)[0])[ CD ]
Line_4 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlObject.openConnection()-->Line_7 $$ httpURLConnection.setReadTimeout(1500 * 1000)[ FD ]
Line_4 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlObject.openConnection()-->Line_14 $$ httpURLConnection.setRequestProperty(key, value)[ FD ]
Line_4 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlObject.openConnection()-->Line_5 $$ httpURLConnection.setConnectTimeout(1500 * 1000)[ FD ]
Line_8 $$ for (Map.Entry<String, List<String>> entry : headers.entrySet()) -->Line_9 $$ String key = entry.getKey()[ FD ]
Line_4 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlObject.openConnection()-->Line_12 $$ httpURLConnection.addRequestProperty(key, value.split(";", 2)[0])[ FD ]
Line_2 $$ public static Response request(String url, Map<String, List<String>> headers) throws IOException -->Line_8 $$ for (Map.Entry<String, List<String>> entry : headers.entrySet()) [ FD ]
Line_9 $$ String key = entry.getKey()-->Line_11 $$ if (key.equals("Cookie")) [ FD ]
Line_9 $$ String key = entry.getKey()-->Line_14 $$ httpURLConnection.setRequestProperty(key, value)[ FD ]
Line_4 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlObject.openConnection()-->Line_20 $$ return new Response(httpURLConnection.getResponseCode(), StringUtil.read(inputStream), headerFields.get("Set-Cookie"))[ FD ]
Line_19 $$ Map<String, List<String>> headerFields = httpURLConnection.getHeaderFields()-->Line_20 $$ return new Response(httpURLConnection.getResponseCode(), StringUtil.read(inputStream), headerFields.get("Set-Cookie"))[ FD ]
Line_8 $$ for (Map.Entry<String, List<String>> entry : headers.entrySet()) -->Line_10 $$ for (String value : entry.getValue()) [ FD ]
Line_18 $$ try (InputStream inputStream = httpURLConnection.getInputStream()) -->Line_24 $$ while (inputStream.read() != -1) [ FD ]
Line_2 $$ public static Response request(String url, Map<String, List<String>> headers) throws IOException -->Line_7 $$ httpURLConnection.setReadTimeout(1500 * 1000)[ CD ]
Line_18 $$ try (InputStream inputStream = httpURLConnection.getInputStream()) -->Line_20 $$ return new Response(httpURLConnection.getResponseCode(), StringUtil.read(inputStream), headerFields.get("Set-Cookie"))[ FD ]
Line_4 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlObject.openConnection()-->Line_18 $$ try (InputStream inputStream = httpURLConnection.getInputStream()) [ FD ]
Line_4 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlObject.openConnection()-->Line_19 $$ Map<String, List<String>> headerFields = httpURLConnection.getHeaderFields()[ FD ]
Line_4 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlObject.openConnection()-->Line_22 $$ try (InputStream inputStream = httpURLConnection.getErrorStream()) [ FD ]
Line_2 $$ public static Response request(String url, Map<String, List<String>> headers) throws IOException -->Line_4 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlObject.openConnection()[ CD ]
Line_3 $$ URL urlObject = new URL(url)-->Line_4 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlObject.openConnection()[ FD ]
Line_11 $$ if (key.equals("Cookie")) -->Line_14 $$ httpURLConnection.setRequestProperty(key, value)[ CD ]
Line_10 $$ for (String value : entry.getValue()) -->Line_14 $$ httpURLConnection.setRequestProperty(key, value)[ FD ]
Line_10 $$ for (String value : entry.getValue()) -->Line_12 $$ httpURLConnection.addRequestProperty(key, value.split(";", 2)[0])[ FD ]
Line_2 $$ public static Response request(String url, Map<String, List<String>> headers) throws IOException -->Line_5 $$ httpURLConnection.setConnectTimeout(1500 * 1000)[ CD ]
Line_4 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlObject.openConnection()-->Line_6 $$ httpURLConnection.setInstanceFollowRedirects(true)[ FD ]
Line_9 $$ String key = entry.getKey()-->Line_12 $$ httpURLConnection.addRequestProperty(key, value.split(";", 2)[0])[ FD ]
