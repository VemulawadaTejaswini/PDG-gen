Line_6 $$ String headerValue = StringUtils.collectionToDelimitedString(entry.getValue(), "; ")-->Line_7 $$ connection.setRequestProperty(headerName, headerValue)[ FD ]
Line_4 $$ String headerName = entry.getKey()-->Line_5 $$ if (HttpHeaders.COOKIE.equalsIgnoreCase(headerName)) [ FD ]
Line_2 $$ static void addHeaders(HttpURLConnection connection, HttpHeaders headers) -->Line_11 $$ connection.addRequestProperty(headerName, actualHeaderValue)[ FD ]
Line_10 $$ String actualHeaderValue = headerValue != null ? headerValue : ""-->Line_11 $$ connection.addRequestProperty(headerName, actualHeaderValue)[ FD ]
Line_2 $$ static void addHeaders(HttpURLConnection connection, HttpHeaders headers) -->Line_7 $$ connection.setRequestProperty(headerName, headerValue)[ FD ]
Line_5 $$ if (HttpHeaders.COOKIE.equalsIgnoreCase(headerName)) -->Line_6 $$ String headerValue = StringUtils.collectionToDelimitedString(entry.getValue(), "; ")[ CD ]
Line_5 $$ if (HttpHeaders.COOKIE.equalsIgnoreCase(headerName)) -->Line_7 $$ connection.setRequestProperty(headerName, headerValue)[ CD ]
Line_3 $$ for (Map.Entry<String, List<String>> entry : headers.entrySet()) -->Line_4 $$ String headerName = entry.getKey()[ FD ]
Line_2 $$ static void addHeaders(HttpURLConnection connection, HttpHeaders headers) -->Line_3 $$ for (Map.Entry<String, List<String>> entry : headers.entrySet()) [ FD ]
Line_3 $$ for (Map.Entry<String, List<String>> entry : headers.entrySet()) -->Line_6 $$ String headerValue = StringUtils.collectionToDelimitedString(entry.getValue(), "; ")[ FD ]
Line_3 $$ for (Map.Entry<String, List<String>> entry : headers.entrySet()) -->Line_9 $$ for (String headerValue : entry.getValue()) [ FD ]
Line_4 $$ String headerName = entry.getKey()-->Line_11 $$ connection.addRequestProperty(headerName, actualHeaderValue)[ FD ]
Line_4 $$ String headerName = entry.getKey()-->Line_7 $$ connection.setRequestProperty(headerName, headerValue)[ FD ]
