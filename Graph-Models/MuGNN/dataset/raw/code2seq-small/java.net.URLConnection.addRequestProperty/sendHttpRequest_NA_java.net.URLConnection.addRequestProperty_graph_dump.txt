Line_9 $$ URL url-->Line_19 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ public void sendHttpRequest(final HttpRequest httpRequest, final HttpResponseListener httpResponseListener) -->Line_3 $$ if (httpRequest.getUrl() == null) [ FD ]
Line_50 $$ if (contentAsStream != null) -->Line_51 $$ OutputStream os = connection.getOutputStream()[ CD ]
Line_19 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_42 $$ OutputStreamWriter writer = new OutputStreamWriter(connection.getOutputStream())[ FD ]
Line_49 $$ InputStream contentAsStream = httpRequest.getContentStream()-->Line_53 $$ StreamUtils.copyStream(contentAsStream, os)[ FD ]
Line_8 $$ final String method = httpRequest.getMethod()-->Line_10 $$ if (method.equalsIgnoreCase(HttpMethods.GET)) [ FD ]
Line_42 $$ OutputStreamWriter writer = new OutputStreamWriter(connection.getOutputStream())-->Line_44 $$ writer.write(contentAsString)[ FD ]
Line_12 $$ String value = httpRequest.getContent()-->Line_14 $$ queryString = "?" + value[ FD ]
Line_2 $$ public void sendHttpRequest(final HttpRequest httpRequest, final HttpResponseListener httpResponseListener) -->Line_86 $$ removeFromConnectionsAndListeners(httpRequest)[ FD ]
Line_2 $$ public void sendHttpRequest(final HttpRequest httpRequest, final HttpResponseListener httpResponseListener) -->Line_49 $$ InputStream contentAsStream = httpRequest.getContentStream()[ FD ]
Line_8 $$ final String method = httpRequest.getMethod()-->Line_24 $$ connection.setRequestMethod(method)[ FD ]
Line_2 $$ public void sendHttpRequest(final HttpRequest httpRequest, final HttpResponseListener httpResponseListener) -->Line_25 $$ HttpURLConnection.setFollowRedirects(httpRequest.getFollowRedirects())[ FD ]
Line_41 $$ if (contentAsString != null) -->Line_49 $$ InputStream contentAsStream = httpRequest.getContentStream()[ CD ]
Line_12 $$ String value = httpRequest.getContent()-->Line_13 $$ if (value != null && !"".equals(value))[ FD ]
Line_2 $$ public void sendHttpRequest(final HttpRequest httpRequest, final HttpResponseListener httpResponseListener) -->Line_63 $$ HttpResponseListener listener = getFromListeners(httpRequest)[ FD ]
Line_2 $$ public void sendHttpRequest(final HttpRequest httpRequest, final HttpResponseListener httpResponseListener) -->Line_76 $$ removeFromConnectionsAndListeners(httpRequest)[ FD ]
Line_10 $$ if (method.equalsIgnoreCase(HttpMethods.GET)) -->Line_15 $$ url = new URL(httpRequest.getUrl() + queryString)[ CD ]
Line_2 $$ public void sendHttpRequest(final HttpRequest httpRequest, final HttpResponseListener httpResponseListener) -->Line_84 $$ httpResponseListener.failed(e)[ FD ]
Line_10 $$ if (method.equalsIgnoreCase(HttpMethods.GET)) -->Line_17 $$ url = new URL(httpRequest.getUrl())[ CD ]
Line_19 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_23 $$ connection.setDoInput(true)[ FD ]
Line_10 $$ if (method.equalsIgnoreCase(HttpMethods.GET)) -->Line_12 $$ String value = httpRequest.getContent()[ CD ]
Line_2 $$ public void sendHttpRequest(final HttpRequest httpRequest, final HttpResponseListener httpResponseListener) -->Line_3 $$ if (httpRequest.getUrl() == null) [ CD ]
Line_41 $$ if (contentAsString != null) -->Line_50 $$ if (contentAsStream != null) [ CD ]
Line_2 $$ public void sendHttpRequest(final HttpRequest httpRequest, final HttpResponseListener httpResponseListener) -->Line_4 $$ httpResponseListener.failed(new GdxRuntimeException("can't process a HTTP request without URL set"))[ FD ]
Line_42 $$ OutputStreamWriter writer = new OutputStreamWriter(connection.getOutputStream())-->Line_46 $$ StreamUtils.closeQuietly(writer)[ FD ]
Line_19 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_69 $$ connection.disconnect()[ FD ]
Line_32 $$ asyncExecutor.submit(new AsyncTask<Void>() -->Line_79 $$ return null[ CD ]
Line_2 $$ public void sendHttpRequest(final HttpRequest httpRequest, final HttpResponseListener httpResponseListener) -->Line_15 $$ url = new URL(httpRequest.getUrl() + queryString)[ FD ]
Line_2 $$ public void sendHttpRequest(final HttpRequest httpRequest, final HttpResponseListener httpResponseListener) -->Line_31 $$ connection.setReadTimeout(httpRequest.getTimeOut())[ FD ]
Line_2 $$ public void sendHttpRequest(final HttpRequest httpRequest, final HttpResponseListener httpResponseListener) -->Line_8 $$ final String method = httpRequest.getMethod()[ FD ]
Line_64 $$ if (listener != null) -->Line_65 $$ listener.handleHttpResponse(clientResponse)[ CD ]
Line_19 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_51 $$ OutputStream os = connection.getOutputStream()[ FD ]
Line_2 $$ public void sendHttpRequest(final HttpRequest httpRequest, final HttpResponseListener httpResponseListener) -->Line_67 $$ removeFromConnectionsAndListeners(httpRequest)[ FD ]
Line_2 $$ public void sendHttpRequest(final HttpRequest httpRequest, final HttpResponseListener httpResponseListener) -->Line_74 $$ httpResponseListener.failed(e)[ FD ]
Line_2 $$ public void sendHttpRequest(final HttpRequest httpRequest, final HttpResponseListener httpResponseListener) -->Line_17 $$ url = new URL(httpRequest.getUrl())[ FD ]
Line_11 $$ String queryString = ""-->Line_14 $$ queryString = "?" + value[ FD ]
Line_63 $$ HttpResponseListener listener = getFromListeners(httpRequest)-->Line_65 $$ listener.handleHttpResponse(clientResponse)[ FD ]
Line_19 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_31 $$ connection.setReadTimeout(httpRequest.getTimeOut())[ FD ]
Line_2 $$ public void sendHttpRequest(final HttpRequest httpRequest, final HttpResponseListener httpResponseListener) -->Line_26 $$ putIntoConnectionsAndListeners(httpRequest, httpResponseListener, connection)[ FD ]
Line_51 $$ OutputStream os = connection.getOutputStream()-->Line_55 $$ StreamUtils.closeQuietly(os)[ FD ]
Line_63 $$ HttpResponseListener listener = getFromListeners(httpRequest)-->Line_64 $$ if (listener != null) [ FD ]
Line_15 $$ url = new URL(httpRequest.getUrl() + queryString)-->Line_17 $$ url = new URL(httpRequest.getUrl())[ FD ]
Line_19 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_22 $$ connection.setDoOutput(doingOutPut)[ FD ]
Line_19 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_72 $$ connection.disconnect()[ FD ]
Line_10 $$ if (method.equalsIgnoreCase(HttpMethods.GET)) -->Line_13 $$ if (value != null && !"".equals(value))[ CD ]
Line_3 $$ if (httpRequest.getUrl() == null) -->Line_4 $$ httpResponseListener.failed(new GdxRuntimeException("can't process a HTTP request without URL set"))[ CD ]
Line_15 $$ url = new URL(httpRequest.getUrl() + queryString)-->Line_19 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_19 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_28 $$ connection.addRequestProperty(header.getKey(), header.getValue())[ FD ]
Line_41 $$ if (contentAsString != null) -->Line_42 $$ OutputStreamWriter writer = new OutputStreamWriter(connection.getOutputStream())[ CD ]
Line_10 $$ if (method.equalsIgnoreCase(HttpMethods.GET)) -->Line_11 $$ String queryString = ""[ CD ]
Line_9 $$ URL url-->Line_15 $$ url = new URL(httpRequest.getUrl() + queryString)[ FD ]
Line_51 $$ OutputStream os = connection.getOutputStream()-->Line_53 $$ StreamUtils.copyStream(contentAsStream, os)[ FD ]
Line_9 $$ URL url-->Line_17 $$ url = new URL(httpRequest.getUrl())[ FD ]
Line_49 $$ InputStream contentAsStream = httpRequest.getContentStream()-->Line_50 $$ if (contentAsStream != null) [ FD ]
Line_3 $$ if (httpRequest.getUrl() == null) -->Line_5 $$ return[ CD ]
Line_17 $$ url = new URL(httpRequest.getUrl())-->Line_19 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ public void sendHttpRequest(final HttpRequest httpRequest, final HttpResponseListener httpResponseListener) -->Line_12 $$ String value = httpRequest.getContent()[ FD ]
Line_19 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_26 $$ putIntoConnectionsAndListeners(httpRequest, httpResponseListener, connection)[ FD ]
Line_19 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_60 $$ connection.connect()[ FD ]
Line_61 $$ final HttpClientResponse clientResponse = new HttpClientResponse(connection)-->Line_65 $$ listener.handleHttpResponse(clientResponse)[ FD ]
Line_13 $$ if (value != null && !"".equals(value))-->Line_14 $$ queryString = "?" + value[ CD ]
Line_19 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_24 $$ connection.setRequestMethod(method)[ FD ]
