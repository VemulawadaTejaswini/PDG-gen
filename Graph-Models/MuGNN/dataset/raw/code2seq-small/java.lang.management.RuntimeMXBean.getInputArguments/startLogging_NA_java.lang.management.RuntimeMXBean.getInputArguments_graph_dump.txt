Line_2 $$ private static void startLogging(final Logger log) -->Line_7 $$ log.info("------------------------------------------------------ IDE SHUTDOWN ------------------------------------------------------")[ FD ]
Line_2 $$ private static void startLogging(final Logger log) -->Line_12 $$ ApplicationNamesInfo namesInfo = ApplicationNamesInfo.getInstance()[ CD ]
Line_2 $$ private static void startLogging(final Logger log) -->Line_15 $$ log.info("OS: " + SystemInfoRt.OS_NAME + " (" + SystemInfoRt.OS_VERSION + ", " + SystemInfo.OS_ARCH + ")")[ CD ]
Line_26 $$ if (content != null && content.length > 0) -->Line_27 $$ log.info("ext: " + dir + ": " + Arrays.toString(content))[ CD ]
Line_2 $$ private static void startLogging(final Logger log) -->Line_11 $$ ApplicationInfo appInfo = ApplicationInfoImpl.getShadowInstance()[ CD ]
Line_2 $$ private static void startLogging(final Logger log) -->Line_3 $$ Runtime.getRuntime().addShutdownHook(new Thread("Shutdown hook - logging") [ CD ]
Line_2 $$ private static void startLogging(final Logger log) -->Line_19 $$ if (arguments != null) [ CD ]
Line_2 $$ private static void startLogging(final Logger log) -->Line_22 $$ String extDirs = System.getProperty("java.ext.dirs")[ CD ]
Line_2 $$ private static void startLogging(final Logger log) -->Line_16 $$ log.info("JRE: " + System.getProperty("java.runtime.version", "-") + " (" + System.getProperty("java.vendor", "-") + ")")[ FD ]
Line_2 $$ private static void startLogging(final Logger log) -->Line_23 $$ if (extDirs != null) [ CD ]
Line_2 $$ private static void startLogging(final Logger log) -->Line_18 $$ List<String> arguments = ManagementFactory.getRuntimeMXBean().getInputArguments()[ CD ]
Line_2 $$ private static void startLogging(final Logger log) -->Line_20 $$ log.info("JVM Args: " + StringUtil.join(arguments, " "))[ FD ]
Line_2 $$ private static void startLogging(final Logger log) -->Line_16 $$ log.info("JRE: " + System.getProperty("java.runtime.version", "-") + " (" + System.getProperty("java.vendor", "-") + ")")[ CD ]
Line_2 $$ private static void startLogging(final Logger log) -->Line_14 $$ log.info("IDE: " + namesInfo.getFullProductName() + " (build #" + appInfo.getBuild().asStringWithAllDetails() + ", " + buildDate + ")")[ FD ]
Line_2 $$ private static void startLogging(final Logger log) -->Line_10 $$ log.info("------------------------------------------------------ IDE STARTED ------------------------------------------------------")[ CD ]
Line_2 $$ private static void startLogging(final Logger log) -->Line_10 $$ log.info("------------------------------------------------------ IDE STARTED ------------------------------------------------------")[ FD ]
Line_3 $$ Runtime.getRuntime().addShutdownHook(new Thread("Shutdown hook - logging") -->Line_7 $$ log.info("------------------------------------------------------ IDE SHUTDOWN ------------------------------------------------------")[ CD ]
Line_2 $$ private static void startLogging(final Logger log) -->Line_17 $$ log.info("JVM: " + System.getProperty("java.vm.version", "-") + " (" + System.getProperty("java.vm.name", "-") + ")")[ CD ]
Line_2 $$ private static void startLogging(final Logger log) -->Line_14 $$ log.info("IDE: " + namesInfo.getFullProductName() + " (build #" + appInfo.getBuild().asStringWithAllDetails() + ", " + buildDate + ")")[ CD ]
Line_19 $$ if (arguments != null) -->Line_20 $$ log.info("JVM Args: " + StringUtil.join(arguments, " "))[ CD ]
Line_2 $$ private static void startLogging(final Logger log) -->Line_13 $$ String buildDate = new SimpleDateFormat("dd MMM yyyy HH:ss", Locale.US).format(appInfo.getBuildDate().getTime())[ CD ]
Line_2 $$ private static void startLogging(final Logger log) -->Line_15 $$ log.info("OS: " + SystemInfoRt.OS_NAME + " (" + SystemInfoRt.OS_VERSION + ", " + SystemInfo.OS_ARCH + ")")[ FD ]
Line_2 $$ private static void startLogging(final Logger log) -->Line_17 $$ log.info("JVM: " + System.getProperty("java.vm.version", "-") + " (" + System.getProperty("java.vm.name", "-") + ")")[ FD ]
Line_2 $$ private static void startLogging(final Logger log) -->Line_27 $$ log.info("ext: " + dir + ": " + Arrays.toString(content))[ FD ]
