Line_4 $$ int index = 0-->Line_12 $$ if (index == table.getColumnCount())[ FD ]
Line_5 $$ final ArrayList<String> columnIndices = new ArrayList<String>()-->Line_10 $$ columnIndices.add(order)[ FD ]
Line_6 $$ while (true) -->Line_10 $$ columnIndices.add(order)[ CD ]
Line_18 $$ if (modelColumnIndex > 0 && modelColumnIndex < columnModel.getColumnCount()) -->Line_19 $$ columnModel.moveColumn(modelColumnIndex, index)[ CD ]
Line_16 $$ for (final String columnIndex : columnIndices) -->Line_17 $$ final int modelColumnIndex = indexbyModelIndex(columnModel, Integer.parseInt(columnIndex))[ FD ]
Line_2 $$ public static void restore(final Storage storage, final JTable table) -->Line_24 $$ final String width = storage.get(widthPropertyName(i))[ FD ]
Line_2 $$ public static void restore(final Storage storage, final JTable table) -->Line_15 $$ index = 0[ CD ]
Line_2 $$ public static void restore(final Storage storage, final JTable table) -->Line_3 $$ final TableColumnModel columnModel = table.getTableHeader().getColumnModel()[ CD ]
Line_24 $$ final String width = storage.get(widthPropertyName(i))-->Line_27 $$ columnModel.getColumn(i).setPreferredWidth(Integer.parseInt(width))[ FD ]
Line_15 $$ index = 0-->Line_21 $$ index++[ FD ]
Line_2 $$ public static void restore(final Storage storage, final JTable table) -->Line_23 $$ for (int i = 0; i < columnIndices.size(); i++) [ CD ]
Line_23 $$ for (int i = 0; i < columnIndices.size(); i++) -->Line_24 $$ final String width = storage.get(widthPropertyName(i))[ FD ]
Line_3 $$ final TableColumnModel columnModel = table.getTableHeader().getColumnModel()-->Line_18 $$ if (modelColumnIndex > 0 && modelColumnIndex < columnModel.getColumnCount()) [ FD ]
Line_2 $$ public static void restore(final Storage storage, final JTable table) -->Line_7 $$ final String order = storage.get(orderPropertyName(index))[ FD ]
Line_5 $$ final ArrayList<String> columnIndices = new ArrayList<String>()-->Line_23 $$ for (int i = 0; i < columnIndices.size(); i++) [ FD ]
Line_2 $$ public static void restore(final Storage storage, final JTable table) -->Line_5 $$ final ArrayList<String> columnIndices = new ArrayList<String>()[ CD ]
Line_2 $$ public static void restore(final Storage storage, final JTable table) -->Line_4 $$ int index = 0[ CD ]
Line_4 $$ int index = 0-->Line_21 $$ index++[ FD ]
Line_3 $$ final TableColumnModel columnModel = table.getTableHeader().getColumnModel()-->Line_27 $$ columnModel.getColumn(i).setPreferredWidth(Integer.parseInt(width))[ FD ]
Line_4 $$ int index = 0-->Line_19 $$ columnModel.moveColumn(modelColumnIndex, index)[ FD ]
Line_2 $$ public static void restore(final Storage storage, final JTable table) -->Line_3 $$ final TableColumnModel columnModel = table.getTableHeader().getColumnModel()[ FD ]
Line_6 $$ while (true) -->Line_12 $$ if (index == table.getColumnCount())[ CD ]
Line_4 $$ int index = 0-->Line_11 $$ index++[ FD ]
Line_24 $$ final String width = storage.get(widthPropertyName(i))-->Line_25 $$ if (width != null && width.length() > 0) [ FD ]
Line_23 $$ for (int i = 0; i < columnIndices.size(); i++) -->Line_27 $$ columnModel.getColumn(i).setPreferredWidth(Integer.parseInt(width))[ FD ]
Line_4 $$ int index = 0-->Line_15 $$ index = 0[ FD ]
Line_6 $$ while (true) -->Line_7 $$ final String order = storage.get(orderPropertyName(index))[ CD ]
Line_23 $$ for (int i = 0; i < columnIndices.size(); i++) -->Line_24 $$ final String width = storage.get(widthPropertyName(i))[ CD ]
Line_5 $$ final ArrayList<String> columnIndices = new ArrayList<String>()-->Line_29 $$ LOG.error("Bad width: " + width + " at column: " + i + " from: " + storage + " actual columns count: " + columnModel.getColumnCount() + " info count: " + columnIndices.size(), e)[ FD ]
Line_7 $$ final String order = storage.get(orderPropertyName(index))-->Line_10 $$ columnIndices.add(order)[ FD ]
Line_3 $$ final TableColumnModel columnModel = table.getTableHeader().getColumnModel()-->Line_29 $$ LOG.error("Bad width: " + width + " at column: " + i + " from: " + storage + " actual columns count: " + columnModel.getColumnCount() + " info count: " + columnIndices.size(), e)[ FD ]
Line_2 $$ public static void restore(final Storage storage, final JTable table) -->Line_6 $$ while (true) [ CD ]
Line_3 $$ final TableColumnModel columnModel = table.getTableHeader().getColumnModel()-->Line_19 $$ columnModel.moveColumn(modelColumnIndex, index)[ FD ]
Line_3 $$ final TableColumnModel columnModel = table.getTableHeader().getColumnModel()-->Line_17 $$ final int modelColumnIndex = indexbyModelIndex(columnModel, Integer.parseInt(columnIndex))[ FD ]
Line_7 $$ final String order = storage.get(orderPropertyName(index))-->Line_8 $$ if (order == null)[ FD ]
Line_6 $$ while (true) -->Line_11 $$ index++[ CD ]
Line_17 $$ final int modelColumnIndex = indexbyModelIndex(columnModel, Integer.parseInt(columnIndex))-->Line_19 $$ columnModel.moveColumn(modelColumnIndex, index)[ FD ]
Line_4 $$ int index = 0-->Line_7 $$ final String order = storage.get(orderPropertyName(index))[ FD ]
Line_6 $$ while (true) -->Line_8 $$ if (order == null)[ CD ]
Line_23 $$ for (int i = 0; i < columnIndices.size(); i++) -->Line_25 $$ if (width != null && width.length() > 0) [ CD ]
Line_15 $$ index = 0-->Line_19 $$ columnModel.moveColumn(modelColumnIndex, index)[ FD ]
Line_2 $$ public static void restore(final Storage storage, final JTable table) -->Line_12 $$ if (index == table.getColumnCount())[ FD ]
