Line_2 $$ protected JComponent createMainComponent() -->Line_58 $$ myExcludedTable.setDefaultRenderer(Boolean.class, new BooleanRenderer())[ CD ]
Line_39 $$ ExcludeEntryDescription description = myExcludeEntryDescriptions.get(row)-->Line_47 $$ description.setIncludeSubdirectories(aValue.equals(Boolean.TRUE))[ FD ]
Line_29 $$ if (c == 0) -->Line_30 $$ return String.class[ CD ]
Line_2 $$ protected JComponent createMainComponent() -->Line_66 $$ myExcludedTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() [ CD ]
Line_2 $$ protected JComponent createMainComponent() -->Line_3 $$ final String[] names = [ CD ]
Line_13 $$ if (col == 0) -->Line_14 $$ return description.getPresentableUrl()[ CD ]
Line_46 $$ if (col == 1) -->Line_47 $$ description.setIncludeSubdirectories(aValue.equals(Boolean.TRUE))[ CD ]
Line_38 $$ if (col == 1) -->Line_39 $$ ExcludeEntryDescription description = myExcludeEntryDescriptions.get(row)[ CD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_16 $$ if (col == 1) [ CD ]
Line_2 $$ protected JComponent createMainComponent() -->Line_64 $$ cbColumn.setMaxWidth(cbWidth)[ CD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_39 $$ ExcludeEntryDescription description = myExcludeEntryDescriptions.get(row)[ FD ]
Line_16 $$ if (col == 1) -->Line_17 $$ if (!description.isFile()) [ CD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_12 $$ ExcludeEntryDescription description = myExcludeEntryDescriptions.get(row)[ FD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_45 $$ ExcludeEntryDescription description = myExcludeEntryDescriptions.get(row)[ FD ]
Line_12 $$ ExcludeEntryDescription description = myExcludeEntryDescriptions.get(row)-->Line_47 $$ description.setIncludeSubdirectories(aValue.equals(Boolean.TRUE))[ FD ]
Line_2 $$ protected JComponent createMainComponent() -->Line_56 $$ myExcludedTable.getEmptyText().setText(CompilerBundle.message("no.excludes"))[ CD ]
Line_2 $$ protected JComponent createMainComponent() -->Line_60 $$ myExcludedTable.getColumn(names[0]).setPreferredWidth(350)[ CD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_45 $$ ExcludeEntryDescription description = myExcludeEntryDescriptions.get(row)[ CD ]
Line_46 $$ if (col == 1) -->Line_49 $$ final String path = (String) aValue[ CD ]
Line_2 $$ protected JComponent createMainComponent() -->Line_62 $$ final TableColumn cbColumn = myExcludedTable.getColumn(names[1])[ CD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_42 $$ return true[ CD ]
Line_2 $$ protected JComponent createMainComponent() -->Line_71 $$ TableCellEditor editor = myExcludedTable.getDefaultEditor(String.class)[ CD ]
Line_75 $$ return ToolbarDecorator.createDecorator(myExcludedTable).disableUpAction().disableDownAction().setAddAction(new AnActionButtonRunnable() -->Line_81 $$ removePaths()[ CD ]
Line_46 $$ if (col == 1) -->Line_50 $$ description.setPresentableUrl(path)[ CD ]
Line_32 $$ if (c == 1) -->Line_33 $$ return Boolean.class[ CD ]
Line_38 $$ if (col == 1) -->Line_40 $$ return !description.isFile()[ CD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_9 $$ return myExcludeEntryDescriptions.size()[ CD ]
Line_2 $$ protected JComponent createMainComponent() -->Line_72 $$ if (editor instanceof DefaultCellEditor) [ CD ]
Line_39 $$ ExcludeEntryDescription description = myExcludeEntryDescriptions.get(row)-->Line_40 $$ return !description.isFile()[ FD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_6 $$ return names.length[ CD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_38 $$ if (col == 1) [ FD ]
Line_72 $$ if (editor instanceof DefaultCellEditor) -->Line_73 $$ ((DefaultCellEditor) editor).setClickCountToStart(1)[ CD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_46 $$ if (col == 1) [ CD ]
Line_17 $$ if (!description.isFile()) -->Line_20 $$ return null[ CD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_16 $$ if (col == 1) [ FD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_47 $$ description.setIncludeSubdirectories(aValue.equals(Boolean.TRUE))[ FD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_26 $$ return names[column][ CD ]
Line_12 $$ ExcludeEntryDescription description = myExcludeEntryDescriptions.get(row)-->Line_18 $$ return description.isIncludeSubdirectories()[ FD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_12 $$ ExcludeEntryDescription description = myExcludeEntryDescriptions.get(row)[ CD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_32 $$ if (c == 1) [ CD ]
Line_2 $$ protected JComponent createMainComponent() -->Line_59 $$ myExcludedTable.setDefaultRenderer(Object.class, new MyObjectRenderer())[ CD ]
Line_2 $$ protected JComponent createMainComponent() -->Line_63 $$ cbColumn.setPreferredWidth(cbWidth)[ CD ]
Line_2 $$ protected JComponent createMainComponent() -->Line_65 $$ myExcludedTable.getSelectionModel().setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION)[ CD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_23 $$ return null[ CD ]
Line_45 $$ ExcludeEntryDescription description = myExcludeEntryDescriptions.get(row)-->Line_50 $$ description.setPresentableUrl(path)[ FD ]
Line_2 $$ protected JComponent createMainComponent() -->Line_55 $$ myExcludedTable.setEnableAntialiasing(true)[ CD ]
Line_2 $$ protected JComponent createMainComponent() -->Line_75 $$ return ToolbarDecorator.createDecorator(myExcludedTable).disableUpAction().disableDownAction().setAddAction(new AnActionButtonRunnable() [ CD ]
Line_12 $$ ExcludeEntryDescription description = myExcludeEntryDescriptions.get(row)-->Line_40 $$ return !description.isFile()[ FD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_29 $$ if (c == 0) [ CD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_13 $$ if (col == 0) [ CD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_29 $$ if (c == 0) [ FD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_38 $$ if (col == 1) [ CD ]
Line_45 $$ ExcludeEntryDescription description = myExcludeEntryDescriptions.get(row)-->Line_47 $$ description.setIncludeSubdirectories(aValue.equals(Boolean.TRUE))[ FD ]
Line_49 $$ final String path = (String) aValue-->Line_50 $$ description.setPresentableUrl(path)[ FD ]
Line_2 $$ protected JComponent createMainComponent() -->Line_4 $$ TableModel dataModel = new AbstractTableModel() [ CD ]
Line_12 $$ ExcludeEntryDescription description = myExcludeEntryDescriptions.get(row)-->Line_17 $$ if (!description.isFile()) [ FD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_13 $$ if (col == 0) [ FD ]
Line_66 $$ myExcludedTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() -->Line_68 $$ myRemoveButton.setEnabled(myExcludedTable.getSelectedRow() >= 0)[ CD ]
Line_17 $$ if (!description.isFile()) -->Line_18 $$ return description.isIncludeSubdirectories()[ CD ]
Line_12 $$ ExcludeEntryDescription description = myExcludeEntryDescriptions.get(row)-->Line_50 $$ description.setPresentableUrl(path)[ FD ]
Line_2 $$ protected JComponent createMainComponent() -->Line_57 $$ myExcludedTable.setPreferredScrollableViewportSize(new Dimension(300, myExcludedTable.getRowHeight() * 6))[ CD ]
Line_12 $$ ExcludeEntryDescription description = myExcludeEntryDescriptions.get(row)-->Line_14 $$ return description.getPresentableUrl()[ FD ]
Line_75 $$ return ToolbarDecorator.createDecorator(myExcludedTable).disableUpAction().disableDownAction().setAddAction(new AnActionButtonRunnable() -->Line_77 $$ addPath(myDescriptor)[ CD ]
Line_39 $$ ExcludeEntryDescription description = myExcludeEntryDescriptions.get(row)-->Line_50 $$ description.setPresentableUrl(path)[ FD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_46 $$ if (col == 1) [ FD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_35 $$ return null[ CD ]
Line_4 $$ TableModel dataModel = new AbstractTableModel() -->Line_32 $$ if (c == 1) [ FD ]
