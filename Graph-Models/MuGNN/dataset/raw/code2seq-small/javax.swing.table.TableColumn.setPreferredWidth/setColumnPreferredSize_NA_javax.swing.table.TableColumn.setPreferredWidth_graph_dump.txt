Line_9 $$ if (i == GraphTableModel.AUTHOR_COLUMN) -->Line_16 $$ column.setWidth(column.getMinWidth())[ CD ]
Line_3 $$ for (int i = 0; i < getColumnCount(); i++) -->Line_17 $$ if (i == GraphTableModel.DATE_COLUMN) [ FD ]
Line_10 $$ int maxRowsToCheck = Math.min(MAX_ROWS_TO_CALC_WIDTH, getRowCount() - MAX_ROWS_TO_CALC_OFFSET)-->Line_12 $$ maxRowsToCheck = getRowCount()[ FD ]
Line_4 $$ TableColumn column = getColumnModel().getColumn(i)-->Line_8 $$ column.setPreferredWidth(Short.MAX_VALUE)[ FD ]
Line_5 $$ if (i == GraphTableModel.ROOT_COLUMN) -->Line_7 $$ if (i == GraphTableModel.COMMIT_COLUMN) [ CD ]
Line_3 $$ for (int i = 0; i < getColumnCount(); i++) -->Line_9 $$ if (i == GraphTableModel.AUTHOR_COLUMN) [ FD ]
Line_4 $$ TableColumn column = getColumnModel().getColumn(i)-->Line_19 $$ column.setMinWidth(getFontMetrics(tableFont).stringWidth("mm" + DateFormatUtil.formatDateTime(new Date())))[ FD ]
Line_4 $$ TableColumn column = getColumnModel().getColumn(i)-->Line_20 $$ column.setWidth(column.getMinWidth())[ FD ]
Line_3 $$ for (int i = 0; i < getColumnCount(); i++) -->Line_5 $$ if (i == GraphTableModel.ROOT_COLUMN) [ FD ]
Line_3 $$ for (int i = 0; i < getColumnCount(); i++) -->Line_5 $$ if (i == GraphTableModel.ROOT_COLUMN) [ CD ]
Line_7 $$ if (i == GraphTableModel.COMMIT_COLUMN) -->Line_9 $$ if (i == GraphTableModel.AUTHOR_COLUMN) [ CD ]
Line_3 $$ for (int i = 0; i < getColumnCount(); i++) -->Line_14 $$ int contentWidth = calcMaxContentColumnWidth(i, maxRowsToCheck)[ FD ]
Line_17 $$ if (i == GraphTableModel.DATE_COLUMN) -->Line_20 $$ column.setWidth(column.getMinWidth())[ CD ]
Line_9 $$ if (i == GraphTableModel.AUTHOR_COLUMN) -->Line_14 $$ int contentWidth = calcMaxContentColumnWidth(i, maxRowsToCheck)[ CD ]
Line_3 $$ for (int i = 0; i < getColumnCount(); i++) -->Line_7 $$ if (i == GraphTableModel.COMMIT_COLUMN) [ FD ]
Line_4 $$ TableColumn column = getColumnModel().getColumn(i)-->Line_16 $$ column.setWidth(column.getMinWidth())[ FD ]
Line_18 $$ Font tableFont = UIManager.getFont("Table.font")-->Line_19 $$ column.setMinWidth(getFontMetrics(tableFont).stringWidth("mm" + DateFormatUtil.formatDateTime(new Date())))[ FD ]
Line_7 $$ if (i == GraphTableModel.COMMIT_COLUMN) -->Line_8 $$ column.setPreferredWidth(Short.MAX_VALUE)[ CD ]
Line_10 $$ int maxRowsToCheck = Math.min(MAX_ROWS_TO_CALC_WIDTH, getRowCount() - MAX_ROWS_TO_CALC_OFFSET)-->Line_11 $$ if (maxRowsToCheck < 0) [ FD ]
Line_4 $$ TableColumn column = getColumnModel().getColumn(i)-->Line_6 $$ setRootColumnSize(column)[ FD ]
Line_11 $$ if (maxRowsToCheck < 0) -->Line_12 $$ maxRowsToCheck = getRowCount()[ CD ]
Line_12 $$ maxRowsToCheck = getRowCount()-->Line_14 $$ int contentWidth = calcMaxContentColumnWidth(i, maxRowsToCheck)[ FD ]
Line_9 $$ if (i == GraphTableModel.AUTHOR_COLUMN) -->Line_17 $$ if (i == GraphTableModel.DATE_COLUMN) [ CD ]
Line_5 $$ if (i == GraphTableModel.ROOT_COLUMN) -->Line_6 $$ setRootColumnSize(column)[ CD ]
Line_12 $$ maxRowsToCheck = getRowCount()-->Line_11 $$ if (maxRowsToCheck < 0) [ FD ]
Line_17 $$ if (i == GraphTableModel.DATE_COLUMN) -->Line_19 $$ column.setMinWidth(getFontMetrics(tableFont).stringWidth("mm" + DateFormatUtil.formatDateTime(new Date())))[ CD ]
Line_14 $$ int contentWidth = calcMaxContentColumnWidth(i, maxRowsToCheck)-->Line_15 $$ column.setMinWidth(Math.min(contentWidth, MAX_DEFAULT_AUTHOR_COLUMN_WIDTH))[ FD ]
Line_9 $$ if (i == GraphTableModel.AUTHOR_COLUMN) -->Line_15 $$ column.setMinWidth(Math.min(contentWidth, MAX_DEFAULT_AUTHOR_COLUMN_WIDTH))[ CD ]
Line_4 $$ TableColumn column = getColumnModel().getColumn(i)-->Line_15 $$ column.setMinWidth(Math.min(contentWidth, MAX_DEFAULT_AUTHOR_COLUMN_WIDTH))[ FD ]
Line_17 $$ if (i == GraphTableModel.DATE_COLUMN) -->Line_18 $$ Font tableFont = UIManager.getFont("Table.font")[ CD ]
Line_9 $$ if (i == GraphTableModel.AUTHOR_COLUMN) -->Line_11 $$ if (maxRowsToCheck < 0) [ CD ]
Line_9 $$ if (i == GraphTableModel.AUTHOR_COLUMN) -->Line_10 $$ int maxRowsToCheck = Math.min(MAX_ROWS_TO_CALC_WIDTH, getRowCount() - MAX_ROWS_TO_CALC_OFFSET)[ CD ]
Line_10 $$ int maxRowsToCheck = Math.min(MAX_ROWS_TO_CALC_WIDTH, getRowCount() - MAX_ROWS_TO_CALC_OFFSET)-->Line_14 $$ int contentWidth = calcMaxContentColumnWidth(i, maxRowsToCheck)[ FD ]
Line_3 $$ for (int i = 0; i < getColumnCount(); i++) -->Line_4 $$ TableColumn column = getColumnModel().getColumn(i)[ CD ]
Line_2 $$ private void setColumnPreferredSize() -->Line_3 $$ for (int i = 0; i < getColumnCount(); i++) [ CD ]
Line_3 $$ for (int i = 0; i < getColumnCount(); i++) -->Line_4 $$ TableColumn column = getColumnModel().getColumn(i)[ FD ]
