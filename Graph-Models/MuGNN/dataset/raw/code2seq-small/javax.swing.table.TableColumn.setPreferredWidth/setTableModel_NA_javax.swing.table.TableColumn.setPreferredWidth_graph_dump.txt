Line_10 $$ for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) -->Line_13 $$ column.setCellRenderer(renderer)[ CD ]
Line_11 $$ TableColumn column = table.getColumnModel().getColumn(i)-->Line_13 $$ column.setCellRenderer(renderer)[ FD ]
Line_2 $$ private static MyModel setTableModel(@NotNull JTable table, @NotNull UsageViewImpl usageView, @NotNull final List<UsageNode> data, @NotNull AtomicInteger outOfScopeUsages, @NotNull SearchScope searchScope) -->Line_4 $$ final int columnCount = calcColumnCount(data)[ FD ]
Line_2 $$ private static MyModel setTableModel(@NotNull JTable table, @NotNull UsageViewImpl usageView, @NotNull final List<UsageNode> data, @NotNull AtomicInteger outOfScopeUsages, @NotNull SearchScope searchScope) -->Line_10 $$ for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) [ FD ]
Line_2 $$ private static MyModel setTableModel(@NotNull JTable table, @NotNull UsageViewImpl usageView, @NotNull final List<UsageNode> data, @NotNull AtomicInteger outOfScopeUsages, @NotNull SearchScope searchScope) -->Line_3 $$ ApplicationManager.getApplication().assertIsDispatchThread()[ CD ]
Line_2 $$ private static MyModel setTableModel(@NotNull JTable table, @NotNull UsageViewImpl usageView, @NotNull final List<UsageNode> data, @NotNull AtomicInteger outOfScopeUsages, @NotNull SearchScope searchScope) -->Line_8 $$ table.setModel(model)[ FD ]
Line_6 $$ if (model == null || model.getColumnCount() != columnCount) -->Line_10 $$ for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) [ CD ]
Line_2 $$ private static MyModel setTableModel(@NotNull JTable table, @NotNull UsageViewImpl usageView, @NotNull final List<UsageNode> data, @NotNull AtomicInteger outOfScopeUsages, @NotNull SearchScope searchScope) -->Line_4 $$ final int columnCount = calcColumnCount(data)[ CD ]
Line_10 $$ for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) -->Line_11 $$ TableColumn column = table.getColumnModel().getColumn(i)[ FD ]
Line_10 $$ for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) -->Line_11 $$ TableColumn column = table.getColumnModel().getColumn(i)[ CD ]
Line_10 $$ for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) -->Line_12 $$ column.setPreferredWidth(0)[ CD ]
Line_2 $$ private static MyModel setTableModel(@NotNull JTable table, @NotNull UsageViewImpl usageView, @NotNull final List<UsageNode> data, @NotNull AtomicInteger outOfScopeUsages, @NotNull SearchScope searchScope) -->Line_5 $$ MyModel model = table.getModel() instanceof MyModel ? (MyModel) table.getModel() : null[ CD ]
Line_6 $$ if (model == null || model.getColumnCount() != columnCount) -->Line_9 $$ ShowUsagesTableCellRenderer renderer = new ShowUsagesTableCellRenderer(usageView, outOfScopeUsages, searchScope)[ CD ]
Line_5 $$ MyModel model = table.getModel() instanceof MyModel ? (MyModel) table.getModel() : null-->Line_7 $$ model = new MyModel(data, columnCount)[ FD ]
Line_6 $$ if (model == null || model.getColumnCount() != columnCount) -->Line_8 $$ table.setModel(model)[ CD ]
Line_5 $$ MyModel model = table.getModel() instanceof MyModel ? (MyModel) table.getModel() : null-->Line_8 $$ table.setModel(model)[ FD ]
Line_5 $$ MyModel model = table.getModel() instanceof MyModel ? (MyModel) table.getModel() : null-->Line_6 $$ if (model == null || model.getColumnCount() != columnCount) [ FD ]
Line_2 $$ private static MyModel setTableModel(@NotNull JTable table, @NotNull UsageViewImpl usageView, @NotNull final List<UsageNode> data, @NotNull AtomicInteger outOfScopeUsages, @NotNull SearchScope searchScope) -->Line_6 $$ if (model == null || model.getColumnCount() != columnCount) [ CD ]
Line_6 $$ if (model == null || model.getColumnCount() != columnCount) -->Line_7 $$ model = new MyModel(data, columnCount)[ CD ]
Line_2 $$ private static MyModel setTableModel(@NotNull JTable table, @NotNull UsageViewImpl usageView, @NotNull final List<UsageNode> data, @NotNull AtomicInteger outOfScopeUsages, @NotNull SearchScope searchScope) -->Line_11 $$ TableColumn column = table.getColumnModel().getColumn(i)[ FD ]
Line_2 $$ private static MyModel setTableModel(@NotNull JTable table, @NotNull UsageViewImpl usageView, @NotNull final List<UsageNode> data, @NotNull AtomicInteger outOfScopeUsages, @NotNull SearchScope searchScope) -->Line_16 $$ return model[ CD ]
Line_11 $$ TableColumn column = table.getColumnModel().getColumn(i)-->Line_12 $$ column.setPreferredWidth(0)[ FD ]
Line_2 $$ private static MyModel setTableModel(@NotNull JTable table, @NotNull UsageViewImpl usageView, @NotNull final List<UsageNode> data, @NotNull AtomicInteger outOfScopeUsages, @NotNull SearchScope searchScope) -->Line_5 $$ MyModel model = table.getModel() instanceof MyModel ? (MyModel) table.getModel() : null[ FD ]
Line_7 $$ model = new MyModel(data, columnCount)-->Line_8 $$ table.setModel(model)[ FD ]
Line_9 $$ ShowUsagesTableCellRenderer renderer = new ShowUsagesTableCellRenderer(usageView, outOfScopeUsages, searchScope)-->Line_13 $$ column.setCellRenderer(renderer)[ FD ]
