Line_4 $$ final IdeTooltip tooltip = new IdeTooltip(c, me.getPoint(), null, c, aText) -->Line_11 $$ if (text == null || text.trim().isEmpty())[ CD ]
Line_2 $$ private void queueShow(final JComponent c, final MouseEvent me, final boolean toCenter, int shift, int posChangeX, int posChangeY) -->Line_3 $$ String aText = String.valueOf(c.getToolTipText(me))[ CD ]
Line_4 $$ final IdeTooltip tooltip = new IdeTooltip(c, me.getPoint(), null, c, aText) -->Line_8 $$ if (!c.isShowing())[ CD ]
Line_2 $$ private void queueShow(final JComponent c, final MouseEvent me, final boolean toCenter, int shift, int posChangeX, int posChangeY) -->Line_10 $$ String text = c.getToolTipText(myCurrentEvent)[ FD ]
Line_2 $$ private void queueShow(final JComponent c, final MouseEvent me, final boolean toCenter, int shift, int posChangeX, int posChangeY) -->Line_13 $$ JLayeredPane layeredPane = IJSwingUtilities.findParentOfType(c, JLayeredPane.class)[ FD ]
Line_2 $$ private void queueShow(final JComponent c, final MouseEvent me, final boolean toCenter, int shift, int posChangeX, int posChangeY) -->Line_8 $$ if (!c.isShowing())[ FD ]
Line_15 $$ final Wrapper wrapper = new Wrapper(pane)-->Line_16 $$ setTipComponent(wrapper)[ FD ]
Line_13 $$ JLayeredPane layeredPane = IJSwingUtilities.findParentOfType(c, JLayeredPane.class)-->Line_14 $$ final JEditorPane pane = initPane(text, new HintHint(me).setAwtTooltip(true), layeredPane)[ FD ]
Line_4 $$ final IdeTooltip tooltip = new IdeTooltip(c, me.getPoint(), null, c, aText) -->Line_17 $$ return true[ CD ]
Line_4 $$ final IdeTooltip tooltip = new IdeTooltip(c, me.getPoint(), null, c, aText) -->Line_16 $$ setTipComponent(wrapper)[ CD ]
Line_2 $$ private void queueShow(final JComponent c, final MouseEvent me, final boolean toCenter, int shift, int posChangeX, int posChangeY) -->Line_4 $$ final IdeTooltip tooltip = new IdeTooltip(c, me.getPoint(), null, c, aText) [ FD ]
Line_4 $$ final IdeTooltip tooltip = new IdeTooltip(c, me.getPoint(), null, c, aText) -->Line_20 $$ show(tooltip, false)[ FD ]
Line_4 $$ final IdeTooltip tooltip = new IdeTooltip(c, me.getPoint(), null, c, aText) -->Line_13 $$ JLayeredPane layeredPane = IJSwingUtilities.findParentOfType(c, JLayeredPane.class)[ CD ]
Line_4 $$ final IdeTooltip tooltip = new IdeTooltip(c, me.getPoint(), null, c, aText) -->Line_10 $$ String text = c.getToolTipText(myCurrentEvent)[ CD ]
Line_10 $$ String text = c.getToolTipText(myCurrentEvent)-->Line_11 $$ if (text == null || text.trim().isEmpty())[ FD ]
Line_2 $$ private void queueShow(final JComponent c, final MouseEvent me, final boolean toCenter, int shift, int posChangeX, int posChangeY) -->Line_3 $$ String aText = String.valueOf(c.getToolTipText(me))[ FD ]
Line_4 $$ final IdeTooltip tooltip = new IdeTooltip(c, me.getPoint(), null, c, aText) -->Line_15 $$ final Wrapper wrapper = new Wrapper(pane)[ CD ]
Line_2 $$ private void queueShow(final JComponent c, final MouseEvent me, final boolean toCenter, int shift, int posChangeX, int posChangeY) -->Line_4 $$ final IdeTooltip tooltip = new IdeTooltip(c, me.getPoint(), null, c, aText) [ CD ]
Line_10 $$ String text = c.getToolTipText(myCurrentEvent)-->Line_14 $$ final JEditorPane pane = initPane(text, new HintHint(me).setAwtTooltip(true), layeredPane)[ FD ]
Line_2 $$ private void queueShow(final JComponent c, final MouseEvent me, final boolean toCenter, int shift, int posChangeX, int posChangeY) -->Line_20 $$ show(tooltip, false)[ CD ]
Line_11 $$ if (text == null || text.trim().isEmpty())-->Line_12 $$ return false[ CD ]
Line_8 $$ if (!c.isShowing())-->Line_9 $$ return false[ CD ]
Line_4 $$ final IdeTooltip tooltip = new IdeTooltip(c, me.getPoint(), null, c, aText) -->Line_14 $$ final JEditorPane pane = initPane(text, new HintHint(me).setAwtTooltip(true), layeredPane)[ CD ]
