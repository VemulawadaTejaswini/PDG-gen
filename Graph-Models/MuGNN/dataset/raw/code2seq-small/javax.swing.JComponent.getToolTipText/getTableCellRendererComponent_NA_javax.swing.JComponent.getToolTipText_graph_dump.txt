Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_9 $$ myTree.setForeground(table.getSelectionForeground())[ FD ]
Line_3 $$ int modelRow = table.convertRowIndexToModel(row)-->Line_17 $$ final boolean expanded = myTree.isExpanded(modelRow)[ FD ]
Line_19 $$ if (component instanceof JComponent) -->Line_20 $$ table.setToolTipText(((JComponent) component).getToolTipText())[ CD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_5 $$ if (myTreeCellRenderer != null)[ CD ]
Line_7 $$ if (isSelected) -->Line_12 $$ myTree.setForeground(table.getForeground())[ CD ]
Line_15 $$ final Object treeObject = myTree.getPathForRow(modelRow).getLastPathComponent()-->Line_18 $$ Component component = myTree.getCellRenderer().getTreeCellRendererComponent(myTree, treeObject, isSelected, expanded, leaf, modelRow, lineHasFocus)[ FD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_16 $$ boolean leaf = myTree.getModel().isLeaf(treeObject)[ CD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_11 $$ myTree.setBackground(table.getBackground())[ FD ]
Line_17 $$ final boolean expanded = myTree.isExpanded(modelRow)-->Line_18 $$ Component component = myTree.getCellRenderer().getTreeCellRendererComponent(myTree, treeObject, isSelected, expanded, leaf, modelRow, lineHasFocus)[ FD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_18 $$ Component component = myTree.getCellRenderer().getTreeCellRendererComponent(myTree, treeObject, isSelected, expanded, leaf, modelRow, lineHasFocus)[ CD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_3 $$ int modelRow = table.convertRowIndexToModel(row)[ CD ]
Line_3 $$ int modelRow = table.convertRowIndexToModel(row)-->Line_15 $$ final Object treeObject = myTree.getPathForRow(modelRow).getLastPathComponent()[ FD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_3 $$ int modelRow = table.convertRowIndexToModel(row)[ FD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_8 $$ myTree.setBackground(lineHasFocus ? table.getSelectionBackground() : UIUtil.getTreeUnfocusedSelectionBackground())[ FD ]
Line_16 $$ boolean leaf = myTree.getModel().isLeaf(treeObject)-->Line_18 $$ Component component = myTree.getCellRenderer().getTreeCellRendererComponent(myTree, treeObject, isSelected, expanded, leaf, modelRow, lineHasFocus)[ FD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_4 $$ final boolean lineHasFocus = table.hasFocus()[ CD ]
Line_3 $$ int modelRow = table.convertRowIndexToModel(row)-->Line_14 $$ myTree.setVisibleRow(modelRow)[ FD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_22 $$ return myTree[ CD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_4 $$ final boolean lineHasFocus = table.hasFocus()[ FD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_17 $$ final boolean expanded = myTree.isExpanded(modelRow)[ CD ]
Line_18 $$ Component component = myTree.getCellRenderer().getTreeCellRendererComponent(myTree, treeObject, isSelected, expanded, leaf, modelRow, lineHasFocus)-->Line_19 $$ if (component instanceof JComponent) [ FD ]
Line_15 $$ final Object treeObject = myTree.getPathForRow(modelRow).getLastPathComponent()-->Line_16 $$ boolean leaf = myTree.getModel().isLeaf(treeObject)[ FD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_7 $$ if (isSelected) [ CD ]
Line_3 $$ int modelRow = table.convertRowIndexToModel(row)-->Line_18 $$ Component component = myTree.getCellRenderer().getTreeCellRendererComponent(myTree, treeObject, isSelected, expanded, leaf, modelRow, lineHasFocus)[ FD ]
Line_7 $$ if (isSelected) -->Line_11 $$ myTree.setBackground(table.getBackground())[ CD ]
Line_4 $$ final boolean lineHasFocus = table.hasFocus()-->Line_18 $$ Component component = myTree.getCellRenderer().getTreeCellRendererComponent(myTree, treeObject, isSelected, expanded, leaf, modelRow, lineHasFocus)[ FD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_12 $$ myTree.setForeground(table.getForeground())[ FD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_20 $$ table.setToolTipText(((JComponent) component).getToolTipText())[ FD ]
Line_5 $$ if (myTreeCellRenderer != null)-->Line_6 $$ myTree.setCellRenderer(myTreeCellRenderer)[ CD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_19 $$ if (component instanceof JComponent) [ CD ]
Line_7 $$ if (isSelected) -->Line_9 $$ myTree.setForeground(table.getSelectionForeground())[ CD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_18 $$ Component component = myTree.getCellRenderer().getTreeCellRendererComponent(myTree, treeObject, isSelected, expanded, leaf, modelRow, lineHasFocus)[ FD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_14 $$ myTree.setVisibleRow(modelRow)[ CD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_15 $$ final Object treeObject = myTree.getPathForRow(modelRow).getLastPathComponent()[ CD ]
Line_7 $$ if (isSelected) -->Line_8 $$ myTree.setBackground(lineHasFocus ? table.getSelectionBackground() : UIUtil.getTreeUnfocusedSelectionBackground())[ CD ]
