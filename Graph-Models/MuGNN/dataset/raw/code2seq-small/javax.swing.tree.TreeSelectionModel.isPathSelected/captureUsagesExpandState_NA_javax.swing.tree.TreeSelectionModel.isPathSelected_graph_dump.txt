Line_10 $$ if (child instanceof UsageNode) -->Line_14 $$ captureUsagesExpandState(pathFrom.pathByAddingChild(child), states)[ CD ]
Line_8 $$ for (int idx = 0; idx < childCount; idx++) -->Line_9 $$ final TreeNode child = node.getChildAt(idx)[ FD ]
Line_2 $$ private void captureUsagesExpandState(TreePath pathFrom, final Collection<UsageState> states) -->Line_6 $$ final DefaultMutableTreeNode node = (DefaultMutableTreeNode) pathFrom.getLastPathComponent()[ CD ]
Line_7 $$ final int childCount = node.getChildCount()-->Line_8 $$ for (int idx = 0; idx < childCount; idx++) [ FD ]
Line_9 $$ final TreeNode child = node.getChildAt(idx)-->Line_10 $$ if (child instanceof UsageNode) [ FD ]
Line_2 $$ private void captureUsagesExpandState(TreePath pathFrom, final Collection<UsageState> states) -->Line_12 $$ states.add(new UsageState(usage, myTree.getSelectionModel().isPathSelected(pathFrom.pathByAddingChild(child))))[ FD ]
Line_10 $$ if (child instanceof UsageNode) -->Line_12 $$ states.add(new UsageState(usage, myTree.getSelectionModel().isPathSelected(pathFrom.pathByAddingChild(child))))[ CD ]
Line_9 $$ final TreeNode child = node.getChildAt(idx)-->Line_14 $$ captureUsagesExpandState(pathFrom.pathByAddingChild(child), states)[ FD ]
Line_2 $$ private void captureUsagesExpandState(TreePath pathFrom, final Collection<UsageState> states) -->Line_6 $$ final DefaultMutableTreeNode node = (DefaultMutableTreeNode) pathFrom.getLastPathComponent()[ FD ]
Line_2 $$ private void captureUsagesExpandState(TreePath pathFrom, final Collection<UsageState> states) -->Line_7 $$ final int childCount = node.getChildCount()[ CD ]
Line_2 $$ private void captureUsagesExpandState(TreePath pathFrom, final Collection<UsageState> states) -->Line_3 $$ if (!myTree.isExpanded(pathFrom)) [ FD ]
Line_10 $$ if (child instanceof UsageNode) -->Line_11 $$ final Usage usage = ((UsageNode) child).getUsage()[ CD ]
Line_8 $$ for (int idx = 0; idx < childCount; idx++) -->Line_9 $$ final TreeNode child = node.getChildAt(idx)[ CD ]
Line_6 $$ final DefaultMutableTreeNode node = (DefaultMutableTreeNode) pathFrom.getLastPathComponent()-->Line_7 $$ final int childCount = node.getChildCount()[ FD ]
Line_3 $$ if (!myTree.isExpanded(pathFrom)) -->Line_4 $$ return[ CD ]
Line_2 $$ private void captureUsagesExpandState(TreePath pathFrom, final Collection<UsageState> states) -->Line_3 $$ if (!myTree.isExpanded(pathFrom)) [ CD ]
Line_9 $$ final TreeNode child = node.getChildAt(idx)-->Line_12 $$ states.add(new UsageState(usage, myTree.getSelectionModel().isPathSelected(pathFrom.pathByAddingChild(child))))[ FD ]
Line_6 $$ final DefaultMutableTreeNode node = (DefaultMutableTreeNode) pathFrom.getLastPathComponent()-->Line_9 $$ final TreeNode child = node.getChildAt(idx)[ FD ]
Line_8 $$ for (int idx = 0; idx < childCount; idx++) -->Line_10 $$ if (child instanceof UsageNode) [ CD ]
Line_2 $$ private void captureUsagesExpandState(TreePath pathFrom, final Collection<UsageState> states) -->Line_14 $$ captureUsagesExpandState(pathFrom.pathByAddingChild(child), states)[ FD ]
Line_2 $$ private void captureUsagesExpandState(TreePath pathFrom, final Collection<UsageState> states) -->Line_8 $$ for (int idx = 0; idx < childCount; idx++) [ CD ]
