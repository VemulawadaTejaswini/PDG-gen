Line_3 $$ DataOutputStream tokenOut = null-->Line_20 $$ credentials.writeTokenStorageToStream(tokenOut)[ FD ]
Line_14 $$ if (UserGroupInformation.isSecurityEnabled()) -->Line_15 $$ credentials = new Credentials(credentials)[ CD ]
Line_7 $$ tokenOut = lfs.create(nmPrivateCTokensPath, EnumSet.of(CREATE, OVERWRITE))-->Line_22 $$ if (tokenOut != null) [ FD ]
Line_17 $$ Token<LocalizerTokenIdentifier> localizerToken = new Token<LocalizerTokenIdentifier>(id, secretManager)-->Line_18 $$ credentials.addToken(id.getKind(), localizerToken)[ FD ]
Line_15 $$ credentials = new Credentials(credentials)-->Line_20 $$ credentials.writeTokenStorageToStream(tokenOut)[ FD ]
Line_3 $$ DataOutputStream tokenOut = null-->Line_22 $$ if (tokenOut != null) [ FD ]
Line_14 $$ if (UserGroupInformation.isSecurityEnabled()) -->Line_17 $$ Token<LocalizerTokenIdentifier> localizerToken = new Token<LocalizerTokenIdentifier>(id, secretManager)[ CD ]
Line_5 $$ Credentials credentials = context.getCredentials()-->Line_15 $$ credentials = new Credentials(credentials)[ FD ]
Line_5 $$ Credentials credentials = context.getCredentials()-->Line_18 $$ credentials.addToken(id.getKind(), localizerToken)[ FD ]
Line_14 $$ if (UserGroupInformation.isSecurityEnabled()) -->Line_18 $$ credentials.addToken(id.getKind(), localizerToken)[ CD ]
Line_10 $$ for (Token<? extends TokenIdentifier> tk : credentials.getAllTokens()) -->Line_11 $$ LOG.debug(tk.getService() + " : " + tk.encodeToUrlString())[ FD ]
Line_7 $$ tokenOut = lfs.create(nmPrivateCTokensPath, EnumSet.of(CREATE, OVERWRITE))-->Line_23 $$ tokenOut.close()[ FD ]
Line_2 $$ private void writeCredentials(Path nmPrivateCTokensPath) throws IOException -->Line_8 $$ LOG.info("Writing credentials to the nmPrivate file " + nmPrivateCTokensPath.toString() + ". Credentials list: ")[ FD ]
Line_16 $$ LocalizerTokenIdentifier id = secretManager.createIdentifier()-->Line_18 $$ credentials.addToken(id.getKind(), localizerToken)[ FD ]
Line_3 $$ DataOutputStream tokenOut = null-->Line_23 $$ tokenOut.close()[ FD ]
Line_6 $$ FileContext lfs = getLocalFileContext(getConfig())-->Line_7 $$ tokenOut = lfs.create(nmPrivateCTokensPath, EnumSet.of(CREATE, OVERWRITE))[ FD ]
Line_14 $$ if (UserGroupInformation.isSecurityEnabled()) -->Line_16 $$ LocalizerTokenIdentifier id = secretManager.createIdentifier()[ CD ]
Line_22 $$ if (tokenOut != null) -->Line_23 $$ tokenOut.close()[ CD ]
Line_5 $$ Credentials credentials = context.getCredentials()-->Line_20 $$ credentials.writeTokenStorageToStream(tokenOut)[ FD ]
Line_2 $$ private void writeCredentials(Path nmPrivateCTokensPath) throws IOException -->Line_3 $$ DataOutputStream tokenOut = null[ CD ]
Line_2 $$ private void writeCredentials(Path nmPrivateCTokensPath) throws IOException -->Line_7 $$ tokenOut = lfs.create(nmPrivateCTokensPath, EnumSet.of(CREATE, OVERWRITE))[ FD ]
Line_3 $$ DataOutputStream tokenOut = null-->Line_7 $$ tokenOut = lfs.create(nmPrivateCTokensPath, EnumSet.of(CREATE, OVERWRITE))[ FD ]
Line_5 $$ Credentials credentials = context.getCredentials()-->Line_10 $$ for (Token<? extends TokenIdentifier> tk : credentials.getAllTokens()) [ FD ]
Line_15 $$ credentials = new Credentials(credentials)-->Line_18 $$ credentials.addToken(id.getKind(), localizerToken)[ FD ]
Line_7 $$ tokenOut = lfs.create(nmPrivateCTokensPath, EnumSet.of(CREATE, OVERWRITE))-->Line_20 $$ credentials.writeTokenStorageToStream(tokenOut)[ FD ]
