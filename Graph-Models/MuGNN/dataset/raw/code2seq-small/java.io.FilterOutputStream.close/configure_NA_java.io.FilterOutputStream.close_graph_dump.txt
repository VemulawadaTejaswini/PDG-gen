Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_16 $$ conf.setReducerClass(reduce)[ CD ]
Line_3 $$ FileSystem inFs = inDir.getFileSystem(conf)-->Line_6 $$ if (!inFs.mkdirs(inDir)) [ FD ]
Line_4 $$ FileSystem outFs = outDir.getFileSystem(conf)-->Line_5 $$ outFs.delete(outDir, true)[ FD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_11 $$ file.writeBytes(input)[ CD ]
Line_3 $$ FileSystem inFs = inDir.getFileSystem(conf)-->Line_10 $$ DataOutputStream file = inFs.create(new Path(inDir, "part-0"))[ FD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_12 $$ file.close()[ CD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_22 $$ conf.set("test.build.data", TEST_ROOT_DIR)[ CD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_4 $$ FileSystem outFs = outDir.getFileSystem(conf)[ CD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_5 $$ outFs.delete(outDir, true)[ CD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_20 $$ FileOutputFormat.setOutputPath(conf, outDir)[ FD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_19 $$ FileInputFormat.setInputPaths(conf, inDir)[ CD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_6 $$ if (!inFs.mkdirs(inDir)) [ CD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_22 $$ conf.set("test.build.data", TEST_ROOT_DIR)[ FD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_7 $$ throw new IOException("Mkdirs failed to create " + inDir.toString())[ FD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_14 $$ conf.setJobName("testmap")[ FD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_17 $$ conf.setNumMapTasks(1)[ FD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_3 $$ FileSystem inFs = inDir.getFileSystem(conf)[ FD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_4 $$ FileSystem outFs = outDir.getFileSystem(conf)[ FD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_18 $$ conf.setNumReduceTasks(0)[ FD ]
Line_10 $$ DataOutputStream file = inFs.create(new Path(inDir, "part-0"))-->Line_12 $$ file.close()[ FD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_5 $$ outFs.delete(outDir, true)[ FD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_16 $$ conf.setReducerClass(reduce)[ FD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_14 $$ conf.setJobName("testmap")[ CD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_21 $$ String TEST_ROOT_DIR = new Path(System.getProperty("test.build.data", "/tmp")).toString().replace(' ', '+')[ CD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_18 $$ conf.setNumReduceTasks(0)[ CD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_15 $$ conf.setMapperClass(map)[ CD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_3 $$ FileSystem inFs = inDir.getFileSystem(conf)[ CD ]
Line_21 $$ String TEST_ROOT_DIR = new Path(System.getProperty("test.build.data", "/tmp")).toString().replace(' ', '+')-->Line_22 $$ conf.set("test.build.data", TEST_ROOT_DIR)[ FD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_10 $$ DataOutputStream file = inFs.create(new Path(inDir, "part-0"))[ CD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_17 $$ conf.setNumMapTasks(1)[ CD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_15 $$ conf.setMapperClass(map)[ FD ]
Line_10 $$ DataOutputStream file = inFs.create(new Path(inDir, "part-0"))-->Line_11 $$ file.writeBytes(input)[ FD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_20 $$ FileOutputFormat.setOutputPath(conf, outDir)[ CD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_6 $$ if (!inFs.mkdirs(inDir)) [ FD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_19 $$ FileInputFormat.setInputPaths(conf, inDir)[ FD ]
Line_2 $$ private void configure(JobConf conf, Path inDir, Path outDir, String input, Class<? extends Mapper> map, Class<? extends Reducer> reduce) throws IOException -->Line_11 $$ file.writeBytes(input)[ FD ]
