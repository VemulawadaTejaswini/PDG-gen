Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_41 $$ return result.toString()[ CD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_16 $$ conf.set(JTConfig.FRAMEWORK_NAME, JTConfig.YARN_FRAMEWORK_NAME)[ CD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_18 $$ conf.setInputFormat(TextInputFormat.class)[ CD ]
Line_29 $$ StringBuffer result = new StringBuffer()-->Line_35 $$ result.append(line)[ FD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_5 $$ FileSystem fs = FileSystem.get(uri, conf)[ FD ]
Line_5 $$ FileSystem fs = FileSystem.get(uri, conf)-->Line_32 $$ BufferedReader file = new BufferedReader(new InputStreamReader(fs.open(fileList[i])))[ FD ]
Line_34 $$ while (line != null) -->Line_35 $$ result.append(line)[ CD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_22 $$ FileOutputFormat.setOutputPath(conf, outDir)[ FD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_21 $$ FileInputFormat.setInputPaths(conf, inDir)[ CD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_27 $$ conf.setJarByClass(TestMiniMRClasspath.class)[ FD ]
Line_34 $$ while (line != null) -->Line_36 $$ line = file.readLine()[ CD ]
Line_33 $$ String line = file.readLine()-->Line_35 $$ result.append(line)[ FD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_18 $$ conf.setInputFormat(TextInputFormat.class)[ FD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_17 $$ conf.setJobName("wordcount")[ FD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_20 $$ conf.set(JobContext.OUTPUT_KEY_CLASS, "testjar.ExternalWritable")[ CD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_24 $$ conf.setNumReduceTasks(numReduces)[ FD ]
Line_11 $$ DataOutputStream file = fs.create(new Path(inDir, "part-0"))-->Line_12 $$ file.writeBytes(input)[ FD ]
Line_33 $$ String line = file.readLine()-->Line_34 $$ while (line != null) [ FD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_16 $$ conf.set(JTConfig.FRAMEWORK_NAME, JTConfig.YARN_FRAMEWORK_NAME)[ FD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_29 $$ StringBuffer result = new StringBuffer()[ CD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_5 $$ FileSystem fs = FileSystem.get(uri, conf)[ CD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_15 $$ FileSystem.setDefaultUri(conf, uri)[ CD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_7 $$ if (!fs.mkdirs(inDir)) [ CD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_22 $$ FileOutputFormat.setOutputPath(conf, outDir)[ CD ]
Line_36 $$ line = file.readLine()-->Line_34 $$ while (line != null) [ FD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_24 $$ conf.setNumReduceTasks(numReduces)[ CD ]
Line_3 $$ final Path inDir = new Path("/testing/ext/input")-->Line_7 $$ if (!fs.mkdirs(inDir)) [ FD ]
Line_31 $$ for (int i = 0; i < fileList.length; ++i) -->Line_34 $$ while (line != null) [ CD ]
Line_31 $$ for (int i = 0; i < fileList.length; ++i) -->Line_33 $$ String line = file.readLine()[ CD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_12 $$ file.writeBytes(input)[ FD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_23 $$ conf.setNumMapTasks(numMaps)[ CD ]
Line_3 $$ final Path inDir = new Path("/testing/ext/input")-->Line_8 $$ throw new IOException("Mkdirs failed to create " + inDir.toString())[ FD ]
Line_4 $$ final Path outDir = new Path("/testing/ext/output")-->Line_6 $$ fs.delete(outDir, true)[ FD ]
Line_5 $$ FileSystem fs = FileSystem.get(uri, conf)-->Line_6 $$ fs.delete(outDir, true)[ FD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_28 $$ JobClient.runJob(conf)[ CD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_26 $$ conf.set("mapred.reducer.class", "testjar.ExternalMapperReducer")[ FD ]
Line_11 $$ DataOutputStream file = fs.create(new Path(inDir, "part-0"))-->Line_36 $$ line = file.readLine()[ FD ]
Line_29 $$ StringBuffer result = new StringBuffer()-->Line_37 $$ result.append("\n")[ FD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_6 $$ fs.delete(outDir, true)[ CD ]
Line_5 $$ FileSystem fs = FileSystem.get(uri, conf)-->Line_7 $$ if (!fs.mkdirs(inDir)) [ FD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_21 $$ FileInputFormat.setInputPaths(conf, inDir)[ FD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_13 $$ file.close()[ CD ]
Line_36 $$ line = file.readLine()-->Line_35 $$ result.append(line)[ FD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_28 $$ JobClient.runJob(conf)[ FD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_17 $$ conf.setJobName("wordcount")[ CD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_30 $$ Path[] fileList = FileUtil.stat2Paths(fs.listStatus(outDir, new Utils.OutputFileUtils.OutputFilesFilter()))[ CD ]
Line_5 $$ FileSystem fs = FileSystem.get(uri, conf)-->Line_11 $$ DataOutputStream file = fs.create(new Path(inDir, "part-0"))[ FD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_25 $$ conf.set("mapred.mapper.class", "testjar.ExternalMapperReducer")[ CD ]
Line_32 $$ BufferedReader file = new BufferedReader(new InputStreamReader(fs.open(fileList[i])))-->Line_39 $$ file.close()[ FD ]
Line_5 $$ FileSystem fs = FileSystem.get(uri, conf)-->Line_30 $$ Path[] fileList = FileUtil.stat2Paths(fs.listStatus(outDir, new Utils.OutputFileUtils.OutputFilesFilter()))[ FD ]
Line_11 $$ DataOutputStream file = fs.create(new Path(inDir, "part-0"))-->Line_33 $$ String line = file.readLine()[ FD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_19 $$ conf.setOutputValueClass(IntWritable.class)[ CD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_11 $$ DataOutputStream file = fs.create(new Path(inDir, "part-0"))[ CD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_15 $$ FileSystem.setDefaultUri(conf, uri)[ FD ]
Line_4 $$ final Path outDir = new Path("/testing/ext/output")-->Line_22 $$ FileOutputFormat.setOutputPath(conf, outDir)[ FD ]
Line_11 $$ DataOutputStream file = fs.create(new Path(inDir, "part-0"))-->Line_13 $$ file.close()[ FD ]
Line_3 $$ final Path inDir = new Path("/testing/ext/input")-->Line_21 $$ FileInputFormat.setInputPaths(conf, inDir)[ FD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_27 $$ conf.setJarByClass(TestMiniMRClasspath.class)[ CD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_20 $$ conf.set(JobContext.OUTPUT_KEY_CLASS, "testjar.ExternalWritable")[ FD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_25 $$ conf.set("mapred.mapper.class", "testjar.ExternalMapperReducer")[ FD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_26 $$ conf.set("mapred.reducer.class", "testjar.ExternalMapperReducer")[ CD ]
Line_32 $$ BufferedReader file = new BufferedReader(new InputStreamReader(fs.open(fileList[i])))-->Line_36 $$ line = file.readLine()[ FD ]
Line_29 $$ StringBuffer result = new StringBuffer()-->Line_41 $$ return result.toString()[ FD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_4 $$ final Path outDir = new Path("/testing/ext/output")[ CD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_31 $$ for (int i = 0; i < fileList.length; ++i) [ CD ]
Line_31 $$ for (int i = 0; i < fileList.length; ++i) -->Line_32 $$ BufferedReader file = new BufferedReader(new InputStreamReader(fs.open(fileList[i])))[ CD ]
Line_11 $$ DataOutputStream file = fs.create(new Path(inDir, "part-0"))-->Line_39 $$ file.close()[ FD ]
Line_4 $$ final Path outDir = new Path("/testing/ext/output")-->Line_30 $$ Path[] fileList = FileUtil.stat2Paths(fs.listStatus(outDir, new Utils.OutputFileUtils.OutputFilesFilter()))[ FD ]
Line_33 $$ String line = file.readLine()-->Line_36 $$ line = file.readLine()[ FD ]
Line_34 $$ while (line != null) -->Line_37 $$ result.append("\n")[ CD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_12 $$ file.writeBytes(input)[ CD ]
Line_32 $$ BufferedReader file = new BufferedReader(new InputStreamReader(fs.open(fileList[i])))-->Line_33 $$ String line = file.readLine()[ FD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_23 $$ conf.setNumMapTasks(numMaps)[ FD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_19 $$ conf.setOutputValueClass(IntWritable.class)[ FD ]
Line_31 $$ for (int i = 0; i < fileList.length; ++i) -->Line_39 $$ file.close()[ CD ]
Line_2 $$ static String launchExternal(URI uri, JobConf conf, String input, int numMaps, int numReduces) throws IOException -->Line_3 $$ final Path inDir = new Path("/testing/ext/input")[ CD ]
