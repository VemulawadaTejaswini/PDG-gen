Line_3 $$ DataOutputStream out = this.writer.prepareAppendKey(-1)-->Line_11 $$ out.close()[ FD ]
Line_3 $$ DataOutputStream out = this.writer.prepareAppendKey(-1)-->Line_8 $$ out.writeUTF(entry.getKey().toString())[ FD ]
Line_7 $$ for (Entry<ApplicationAccessType, String> entry : appAcls.entrySet()) -->Line_8 $$ out.writeUTF(entry.getKey().toString())[ FD ]
Line_2 $$ public void writeApplicationACLs(Map<ApplicationAccessType, String> appAcls) throws IOException -->Line_5 $$ out.close()[ CD ]
Line_6 $$ out = this.writer.prepareAppendValue(-1)-->Line_9 $$ out.writeUTF(entry.getValue())[ FD ]
Line_7 $$ for (Entry<ApplicationAccessType, String> entry : appAcls.entrySet()) -->Line_9 $$ out.writeUTF(entry.getValue())[ FD ]
Line_6 $$ out = this.writer.prepareAppendValue(-1)-->Line_11 $$ out.close()[ FD ]
Line_6 $$ out = this.writer.prepareAppendValue(-1)-->Line_8 $$ out.writeUTF(entry.getKey().toString())[ FD ]
Line_3 $$ DataOutputStream out = this.writer.prepareAppendKey(-1)-->Line_4 $$ APPLICATION_ACL_KEY.write(out)[ FD ]
Line_2 $$ public void writeApplicationACLs(Map<ApplicationAccessType, String> appAcls) throws IOException -->Line_3 $$ DataOutputStream out = this.writer.prepareAppendKey(-1)[ CD ]
Line_2 $$ public void writeApplicationACLs(Map<ApplicationAccessType, String> appAcls) throws IOException -->Line_11 $$ out.close()[ CD ]
Line_3 $$ DataOutputStream out = this.writer.prepareAppendKey(-1)-->Line_5 $$ out.close()[ FD ]
Line_2 $$ public void writeApplicationACLs(Map<ApplicationAccessType, String> appAcls) throws IOException -->Line_6 $$ out = this.writer.prepareAppendValue(-1)[ CD ]
Line_3 $$ DataOutputStream out = this.writer.prepareAppendKey(-1)-->Line_9 $$ out.writeUTF(entry.getValue())[ FD ]
Line_3 $$ DataOutputStream out = this.writer.prepareAppendKey(-1)-->Line_6 $$ out = this.writer.prepareAppendValue(-1)[ FD ]
Line_2 $$ public void writeApplicationACLs(Map<ApplicationAccessType, String> appAcls) throws IOException -->Line_7 $$ for (Entry<ApplicationAccessType, String> entry : appAcls.entrySet()) [ FD ]
Line_2 $$ public void writeApplicationACLs(Map<ApplicationAccessType, String> appAcls) throws IOException -->Line_4 $$ APPLICATION_ACL_KEY.write(out)[ CD ]
