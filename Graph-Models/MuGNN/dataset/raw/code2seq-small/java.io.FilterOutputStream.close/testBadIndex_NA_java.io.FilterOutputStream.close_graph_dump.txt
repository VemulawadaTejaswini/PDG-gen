Line_7 $$ Path f = new Path(p, "badindex")-->Line_23 $$ cache.getIndexInformation("badindex", 7, f, UserGroupInformation.getCurrentUser().getShortUserName())[ FD ]
Line_10 $$ DataOutputStream dout = new DataOutputStream(iout)-->Line_14 $$ dout.writeLong(i)[ FD ]
Line_7 $$ Path f = new Path(p, "badindex")-->Line_8 $$ FSDataOutputStream out = fs.create(f, false)[ FD ]
Line_13 $$ if (0 == (i % 3)) -->Line_16 $$ out.writeLong(i)[ CD ]
Line_2 $$ public void testBadIndex() throws Exception -->Line_3 $$ final int parts = 30[ CD ]
Line_2 $$ public void testBadIndex() throws Exception -->Line_20 $$ out.writeLong(iout.getChecksum().getValue())[ CD ]
Line_2 $$ public void testBadIndex() throws Exception -->Line_4 $$ fs.delete(p, true)[ CD ]
Line_2 $$ public void testBadIndex() throws Exception -->Line_6 $$ IndexCache cache = new IndexCache(conf)[ CD ]
Line_2 $$ public void testBadIndex() throws Exception -->Line_10 $$ DataOutputStream dout = new DataOutputStream(iout)[ CD ]
Line_11 $$ for (int i = 0; i < parts; ++i) -->Line_12 $$ for (int j = 0; j < MapTask.MAP_OUTPUT_INDEX_RECORD_LENGTH / 8; ++j) [ CD ]
Line_6 $$ IndexCache cache = new IndexCache(conf)-->Line_23 $$ cache.getIndexInformation("badindex", 7, f, UserGroupInformation.getCurrentUser().getShortUserName())[ FD ]
Line_2 $$ public void testBadIndex() throws Exception -->Line_7 $$ Path f = new Path(p, "badindex")[ CD ]
Line_13 $$ if (0 == (i % 3)) -->Line_14 $$ dout.writeLong(i)[ CD ]
Line_11 $$ for (int i = 0; i < parts; ++i) -->Line_16 $$ out.writeLong(i)[ FD ]
Line_8 $$ FSDataOutputStream out = fs.create(f, false)-->Line_20 $$ out.writeLong(iout.getChecksum().getValue())[ FD ]
Line_8 $$ FSDataOutputStream out = fs.create(f, false)-->Line_16 $$ out.writeLong(i)[ FD ]
Line_2 $$ public void testBadIndex() throws Exception -->Line_21 $$ dout.close()[ CD ]
Line_2 $$ public void testBadIndex() throws Exception -->Line_11 $$ for (int i = 0; i < parts; ++i) [ CD ]
Line_3 $$ final int parts = 30-->Line_11 $$ for (int i = 0; i < parts; ++i) [ FD ]
Line_2 $$ public void testBadIndex() throws Exception -->Line_9 $$ CheckedOutputStream iout = new CheckedOutputStream(out, new CRC32())[ CD ]
Line_12 $$ for (int j = 0; j < MapTask.MAP_OUTPUT_INDEX_RECORD_LENGTH / 8; ++j) -->Line_13 $$ if (0 == (i % 3)) [ CD ]
Line_2 $$ public void testBadIndex() throws Exception -->Line_8 $$ FSDataOutputStream out = fs.create(f, false)[ CD ]
Line_11 $$ for (int i = 0; i < parts; ++i) -->Line_14 $$ dout.writeLong(i)[ FD ]
Line_2 $$ public void testBadIndex() throws Exception -->Line_5 $$ conf.setInt(TTConfig.TT_INDEX_CACHE, 1)[ CD ]
Line_10 $$ DataOutputStream dout = new DataOutputStream(iout)-->Line_21 $$ dout.close()[ FD ]
Line_9 $$ CheckedOutputStream iout = new CheckedOutputStream(out, new CRC32())-->Line_20 $$ out.writeLong(iout.getChecksum().getValue())[ FD ]
