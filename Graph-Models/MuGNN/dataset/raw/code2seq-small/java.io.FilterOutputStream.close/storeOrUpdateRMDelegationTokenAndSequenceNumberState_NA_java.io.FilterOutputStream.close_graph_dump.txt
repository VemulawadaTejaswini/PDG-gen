Line_2 $$ private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(RMDelegationTokenIdentifier identifier, Long renewDate, int latestSequenceNumber, boolean isUpdate) throws Exception -->Line_5 $$ DataOutputStream fsOut = new DataOutputStream(os)[ CD ]
Line_5 $$ DataOutputStream fsOut = new DataOutputStream(os)-->Line_7 $$ fsOut.writeLong(renewDate)[ FD ]
Line_2 $$ private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(RMDelegationTokenIdentifier identifier, Long renewDate, int latestSequenceNumber, boolean isUpdate) throws Exception -->Line_4 $$ ByteArrayOutputStream os = new ByteArrayOutputStream()[ CD ]
Line_18 $$ if (dtSequenceNumberPath == null) -->Line_19 $$ if (!createFile(latestSequenceNumberPath)) [ CD ]
Line_2 $$ private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(RMDelegationTokenIdentifier identifier, Long renewDate, int latestSequenceNumber, boolean isUpdate) throws Exception -->Line_18 $$ if (dtSequenceNumberPath == null) [ CD ]
Line_2 $$ private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(RMDelegationTokenIdentifier identifier, Long renewDate, int latestSequenceNumber, boolean isUpdate) throws Exception -->Line_6 $$ identifier.write(fsOut)[ FD ]
Line_2 $$ private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(RMDelegationTokenIdentifier identifier, Long renewDate, int latestSequenceNumber, boolean isUpdate) throws Exception -->Line_3 $$ Path nodeCreatePath = getNodePath(rmDTSecretManagerRoot, DELEGATION_TOKEN_PREFIX + identifier.getSequenceNumber())[ CD ]
Line_18 $$ if (dtSequenceNumberPath == null) -->Line_23 $$ if (!renameFile(dtSequenceNumberPath, latestSequenceNumberPath)) [ CD ]
Line_2 $$ private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(RMDelegationTokenIdentifier identifier, Long renewDate, int latestSequenceNumber, boolean isUpdate) throws Exception -->Line_7 $$ fsOut.writeLong(renewDate)[ FD ]
Line_2 $$ private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(RMDelegationTokenIdentifier identifier, Long renewDate, int latestSequenceNumber, boolean isUpdate) throws Exception -->Line_16 $$ Path latestSequenceNumberPath = getNodePath(rmDTSecretManagerRoot, DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX + latestSequenceNumber)[ CD ]
Line_2 $$ private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(RMDelegationTokenIdentifier identifier, Long renewDate, int latestSequenceNumber, boolean isUpdate) throws Exception -->Line_8 $$ if (isUpdate) [ CD ]
Line_2 $$ private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(RMDelegationTokenIdentifier identifier, Long renewDate, int latestSequenceNumber, boolean isUpdate) throws Exception -->Line_6 $$ identifier.write(fsOut)[ CD ]
Line_2 $$ private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(RMDelegationTokenIdentifier identifier, Long renewDate, int latestSequenceNumber, boolean isUpdate) throws Exception -->Line_7 $$ fsOut.writeLong(renewDate)[ CD ]
Line_3 $$ Path nodeCreatePath = getNodePath(rmDTSecretManagerRoot, DELEGATION_TOKEN_PREFIX + identifier.getSequenceNumber())-->Line_13 $$ writeFile(nodeCreatePath, os.toByteArray())[ FD ]
Line_5 $$ DataOutputStream fsOut = new DataOutputStream(os)-->Line_15 $$ fsOut.close()[ FD ]
Line_8 $$ if (isUpdate) -->Line_12 $$ LOG.info("Storing RMDelegationToken_" + identifier.getSequenceNumber())[ CD ]
Line_5 $$ DataOutputStream fsOut = new DataOutputStream(os)-->Line_6 $$ identifier.write(fsOut)[ FD ]
Line_4 $$ ByteArrayOutputStream os = new ByteArrayOutputStream()-->Line_13 $$ writeFile(nodeCreatePath, os.toByteArray())[ FD ]
Line_2 $$ private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(RMDelegationTokenIdentifier identifier, Long renewDate, int latestSequenceNumber, boolean isUpdate) throws Exception -->Line_15 $$ fsOut.close()[ CD ]
Line_3 $$ Path nodeCreatePath = getNodePath(rmDTSecretManagerRoot, DELEGATION_TOKEN_PREFIX + identifier.getSequenceNumber())-->Line_10 $$ updateFile(nodeCreatePath, os.toByteArray())[ FD ]
Line_2 $$ private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(RMDelegationTokenIdentifier identifier, Long renewDate, int latestSequenceNumber, boolean isUpdate) throws Exception -->Line_3 $$ Path nodeCreatePath = getNodePath(rmDTSecretManagerRoot, DELEGATION_TOKEN_PREFIX + identifier.getSequenceNumber())[ FD ]
Line_2 $$ private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(RMDelegationTokenIdentifier identifier, Long renewDate, int latestSequenceNumber, boolean isUpdate) throws Exception -->Line_9 $$ LOG.info("Updating RMDelegationToken_" + identifier.getSequenceNumber())[ FD ]
Line_16 $$ Path latestSequenceNumberPath = getNodePath(rmDTSecretManagerRoot, DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX + latestSequenceNumber)-->Line_19 $$ if (!createFile(latestSequenceNumberPath)) [ FD ]
Line_16 $$ Path latestSequenceNumberPath = getNodePath(rmDTSecretManagerRoot, DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX + latestSequenceNumber)-->Line_23 $$ if (!renameFile(dtSequenceNumberPath, latestSequenceNumberPath)) [ FD ]
Line_8 $$ if (isUpdate) -->Line_9 $$ LOG.info("Updating RMDelegationToken_" + identifier.getSequenceNumber())[ CD ]
Line_2 $$ private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(RMDelegationTokenIdentifier identifier, Long renewDate, int latestSequenceNumber, boolean isUpdate) throws Exception -->Line_12 $$ LOG.info("Storing RMDelegationToken_" + identifier.getSequenceNumber())[ FD ]
Line_8 $$ if (isUpdate) -->Line_13 $$ writeFile(nodeCreatePath, os.toByteArray())[ CD ]
Line_2 $$ private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(RMDelegationTokenIdentifier identifier, Long renewDate, int latestSequenceNumber, boolean isUpdate) throws Exception -->Line_17 $$ LOG.info("Storing " + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX + latestSequenceNumber)[ CD ]
Line_4 $$ ByteArrayOutputStream os = new ByteArrayOutputStream()-->Line_10 $$ updateFile(nodeCreatePath, os.toByteArray())[ FD ]
Line_8 $$ if (isUpdate) -->Line_10 $$ updateFile(nodeCreatePath, os.toByteArray())[ CD ]
