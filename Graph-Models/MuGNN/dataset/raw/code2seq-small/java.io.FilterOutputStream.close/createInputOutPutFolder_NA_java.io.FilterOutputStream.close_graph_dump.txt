Line_3 $$ FileSystem fs = FileSystem.get(conf)-->Line_7 $$ if (!fs.exists(inDir)) [ FD ]
Line_2 $$ static void createInputOutPutFolder(Path inDir, Path outDir, int numMaps) throws Exception -->Line_7 $$ if (!fs.exists(inDir)) [ CD ]
Line_3 $$ FileSystem fs = FileSystem.get(conf)-->Line_12 $$ DataOutputStream file = fs.create(new Path(inDir, "part-" + i))[ FD ]
Line_10 $$ String input = "The quick brown fox\n" + "has many silly\n" + "red fox sox\n"-->Line_13 $$ file.writeBytes(input)[ FD ]
Line_2 $$ static void createInputOutPutFolder(Path inDir, Path outDir, int numMaps) throws Exception -->Line_7 $$ if (!fs.exists(inDir)) [ FD ]
Line_2 $$ static void createInputOutPutFolder(Path inDir, Path outDir, int numMaps) throws Exception -->Line_8 $$ fs.mkdirs(inDir)[ FD ]
Line_2 $$ static void createInputOutPutFolder(Path inDir, Path outDir, int numMaps) throws Exception -->Line_4 $$ if (fs.exists(outDir)) [ CD ]
Line_2 $$ static void createInputOutPutFolder(Path inDir, Path outDir, int numMaps) throws Exception -->Line_4 $$ if (fs.exists(outDir)) [ FD ]
Line_3 $$ FileSystem fs = FileSystem.get(conf)-->Line_8 $$ fs.mkdirs(inDir)[ FD ]
Line_2 $$ static void createInputOutPutFolder(Path inDir, Path outDir, int numMaps) throws Exception -->Line_5 $$ fs.delete(outDir, true)[ FD ]
Line_3 $$ FileSystem fs = FileSystem.get(conf)-->Line_5 $$ fs.delete(outDir, true)[ FD ]
Line_11 $$ for (int i = 0; i < numMaps; ++i) -->Line_13 $$ file.writeBytes(input)[ CD ]
Line_2 $$ static void createInputOutPutFolder(Path inDir, Path outDir, int numMaps) throws Exception -->Line_11 $$ for (int i = 0; i < numMaps; ++i) [ CD ]
Line_3 $$ FileSystem fs = FileSystem.get(conf)-->Line_4 $$ if (fs.exists(outDir)) [ FD ]
Line_12 $$ DataOutputStream file = fs.create(new Path(inDir, "part-" + i))-->Line_14 $$ file.close()[ FD ]
Line_2 $$ static void createInputOutPutFolder(Path inDir, Path outDir, int numMaps) throws Exception -->Line_10 $$ String input = "The quick brown fox\n" + "has many silly\n" + "red fox sox\n"[ CD ]
Line_11 $$ for (int i = 0; i < numMaps; ++i) -->Line_14 $$ file.close()[ CD ]
Line_2 $$ static void createInputOutPutFolder(Path inDir, Path outDir, int numMaps) throws Exception -->Line_11 $$ for (int i = 0; i < numMaps; ++i) [ FD ]
Line_11 $$ for (int i = 0; i < numMaps; ++i) -->Line_12 $$ DataOutputStream file = fs.create(new Path(inDir, "part-" + i))[ CD ]
Line_7 $$ if (!fs.exists(inDir)) -->Line_8 $$ fs.mkdirs(inDir)[ CD ]
Line_2 $$ static void createInputOutPutFolder(Path inDir, Path outDir, int numMaps) throws Exception -->Line_3 $$ FileSystem fs = FileSystem.get(conf)[ CD ]
Line_4 $$ if (fs.exists(outDir)) -->Line_5 $$ fs.delete(outDir, true)[ CD ]
Line_12 $$ DataOutputStream file = fs.create(new Path(inDir, "part-" + i))-->Line_13 $$ file.writeBytes(input)[ FD ]
