Line_5 $$ DataOutputStream compressedDataOut = new DataOutputStream(compressedOut)-->Line_6 $$ compress(compressedDataOut, myNextChunkBuffer)[ FD ]
Line_3 $$ if (myBufferPosition == myNextChunkBuffer.length) -->Line_18 $$ myChunkLengthTable[myChunkTableLength++] = (short) compressedOut.size()[ CD ]
Line_4 $$ BufferExposingByteArrayOutputStream compressedOut = new BufferExposingByteArrayOutputStream()-->Line_18 $$ myChunkLengthTable[myChunkTableLength++] = (short) compressedOut.size()[ FD ]
Line_15 $$ if (myChunkLengthTable.length == myChunkTableLength) -->Line_16 $$ myChunkLengthTable = reallocShortTable(myChunkLengthTable)[ CD ]
Line_3 $$ if (myBufferPosition == myNextChunkBuffer.length) -->Line_7 $$ compressedDataOut.close()[ CD ]
Line_3 $$ if (myBufferPosition == myNextChunkBuffer.length) -->Line_13 $$ if (doDebug)[ CD ]
Line_4 $$ BufferExposingByteArrayOutputStream compressedOut = new BufferExposingByteArrayOutputStream()-->Line_12 $$ myFileLength += compressedOut.size()[ FD ]
Line_19 $$ if (myChunkTableLength / FACTOR > myChunkOffsetTable.length) -->Line_21 $$ System.arraycopy(myChunkOffsetTable, 0, newChunkOffsetTable, 0, myChunkOffsetTable.length)[ CD ]
Line_3 $$ if (myBufferPosition == myNextChunkBuffer.length) -->Line_19 $$ if (myChunkTableLength / FACTOR > myChunkOffsetTable.length) [ CD ]
Line_3 $$ if (myBufferPosition == myNextChunkBuffer.length) -->Line_25 $$ byte[] bytes = new byte[myAppendBufferLength][ CD ]
Line_4 $$ BufferExposingByteArrayOutputStream compressedOut = new BufferExposingByteArrayOutputStream()-->Line_9 $$ saveChunk(compressedOut, myFileLength)[ FD ]
Line_3 $$ if (myBufferPosition == myNextChunkBuffer.length) -->Line_6 $$ compress(compressedDataOut, myNextChunkBuffer)[ CD ]
Line_3 $$ if (myBufferPosition == myNextChunkBuffer.length) -->Line_26 $$ System.arraycopy(myNextChunkBuffer, 0, bytes, 0, myAppendBufferLength)[ CD ]
Line_5 $$ DataOutputStream compressedDataOut = new DataOutputStream(compressedOut)-->Line_8 $$ assert compressedDataOut.size() <= MAX_PAGE_LENGTH[ FD ]
Line_25 $$ byte[] bytes = new byte[myAppendBufferLength]-->Line_27 $$ ourDecompressedCache.put(this, myChunkTableLength - 1, bytes)[ FD ]
Line_25 $$ byte[] bytes = new byte[myAppendBufferLength]-->Line_26 $$ System.arraycopy(myNextChunkBuffer, 0, bytes, 0, myAppendBufferLength)[ FD ]
Line_3 $$ if (myBufferPosition == myNextChunkBuffer.length) -->Line_9 $$ saveChunk(compressedOut, myFileLength)[ CD ]
Line_19 $$ if (myChunkTableLength / FACTOR > myChunkOffsetTable.length) -->Line_20 $$ long[] newChunkOffsetTable = new long[myChunkOffsetTable.length + 1][ CD ]
Line_13 $$ if (doDebug)-->Line_14 $$ myCompressedChunksFileOffsets.add(myFileLength)[ CD ]
Line_3 $$ if (myBufferPosition == myNextChunkBuffer.length) -->Line_15 $$ if (myChunkLengthTable.length == myChunkTableLength) [ CD ]
Line_3 $$ if (myBufferPosition == myNextChunkBuffer.length) -->Line_12 $$ myFileLength += compressedOut.size()[ CD ]
Line_2 $$ private void saveNextChunkIfNeeded() throws IOException -->Line_3 $$ if (myBufferPosition == myNextChunkBuffer.length) [ CD ]
Line_3 $$ if (myBufferPosition == myNextChunkBuffer.length) -->Line_4 $$ BufferExposingByteArrayOutputStream compressedOut = new BufferExposingByteArrayOutputStream()[ CD ]
Line_3 $$ if (myBufferPosition == myNextChunkBuffer.length) -->Line_5 $$ DataOutputStream compressedDataOut = new DataOutputStream(compressedOut)[ CD ]
Line_5 $$ DataOutputStream compressedDataOut = new DataOutputStream(compressedOut)-->Line_7 $$ compressedDataOut.close()[ FD ]
Line_20 $$ long[] newChunkOffsetTable = new long[myChunkOffsetTable.length + 1]-->Line_21 $$ System.arraycopy(myChunkOffsetTable, 0, newChunkOffsetTable, 0, myChunkOffsetTable.length)[ FD ]
Line_3 $$ if (myBufferPosition == myNextChunkBuffer.length) -->Line_27 $$ ourDecompressedCache.put(this, myChunkTableLength - 1, bytes)[ CD ]
Line_3 $$ if (myBufferPosition == myNextChunkBuffer.length) -->Line_11 $$ initChunkLengthTable()[ CD ]
