Line_7 $$ final DataOutputStream out = new DataOutputStream(bytes)-->Line_14 $$ out.close()[ FD ]
Line_6 $$ final BufferExposingByteArrayOutputStream bytes = new BufferExposingByteArrayOutputStream()-->Line_16 $$ saveOnDisk(bytes, file)[ FD ]
Line_4 $$ final File file = new File(dataStorageRoot, FS_STATE_FILE)-->Line_16 $$ saveOnDisk(bytes, file)[ FD ]
Line_3 $$ final ProjectDescriptor pd = myProjectDescriptor-->Line_11 $$ out.writeBoolean(hasWorkToDo(state, pd))[ FD ]
Line_2 $$ private void saveFsState(File dataStorageRoot, BuildFSState state) -->Line_12 $$ state.save(out)[ FD ]
Line_2 $$ private void saveFsState(File dataStorageRoot, BuildFSState state) -->Line_3 $$ final ProjectDescriptor pd = myProjectDescriptor[ CD ]
Line_7 $$ final DataOutputStream out = new DataOutputStream(bytes)-->Line_10 $$ out.writeLong(myLastEventOrdinal)[ FD ]
Line_4 $$ final File file = new File(dataStorageRoot, FS_STATE_FILE)-->Line_19 $$ FileUtil.delete(file)[ FD ]
Line_2 $$ private void saveFsState(File dataStorageRoot, BuildFSState state) -->Line_4 $$ final File file = new File(dataStorageRoot, FS_STATE_FILE)[ CD ]
Line_7 $$ final DataOutputStream out = new DataOutputStream(bytes)-->Line_11 $$ out.writeBoolean(hasWorkToDo(state, pd))[ FD ]
Line_7 $$ final DataOutputStream out = new DataOutputStream(bytes)-->Line_9 $$ out.writeInt(BuildFSState.VERSION)[ FD ]
Line_7 $$ final DataOutputStream out = new DataOutputStream(bytes)-->Line_12 $$ state.save(out)[ FD ]
Line_2 $$ private void saveFsState(File dataStorageRoot, BuildFSState state) -->Line_11 $$ out.writeBoolean(hasWorkToDo(state, pd))[ FD ]
