Line_15 $$ DataOutputStream dataStream = null-->Line_33 $$ dataStream = new DataOutputStream(unchangedPreviousDirectoryStream)[ FD ]
Line_19 $$ unchangedPreviousDirectoryStream = new BufferExposingByteArrayOutputStream()-->Line_64 $$ if (unchangedPreviousDirectoryStream != null) [ FD ]
Line_10 $$ recordId = storage.createNewRecord()-->Line_59 $$ AbstractStorage.StorageDataOutput directoryStream = storage.writeStream(recordId)[ FD ]
Line_64 $$ if (unchangedPreviousDirectoryStream != null) -->Line_65 $$ directoryStream.write(unchangedPreviousDirectoryStream.getInternalBuffer(), 0, unchangedPreviousDirectoryStream.size())[ CD ]
Line_20 $$ dataStream = new DataOutputStream(unchangedPreviousDirectoryStream)-->Line_56 $$ dataStream.close()[ FD ]
Line_9 $$ if (recordId == 0) -->Line_11 $$ setAttributeRecordId(myFileId, recordId)[ CD ]
Line_5 $$ int encodedAttrId = DbConnection.getAttributeId(myAttribute.getId())-->Line_68 $$ DataInputOutputUtil.writeINT(directoryStream, encodedAttrId)[ FD ]
Line_33 $$ dataStream = new DataOutputStream(unchangedPreviousDirectoryStream)-->Line_55 $$ if (dataStream != null)[ FD ]
Line_29 $$ final int attrAddressOrSize = DataInputOutputUtil.readINT(attrRefs)-->Line_36 $$ DataInputOutputUtil.writeINT(dataStream, attrAddressOrSize)[ FD ]
Line_2 $$ protected void rewriteDirectoryRecordWithAttrContent(BufferExposingByteArrayOutputStream _out) throws IOException -->Line_67 $$ if (_out.size() > 0) [ CD ]
Line_21 $$ int attId = DataInputOutputUtil.readINT(attrRefs)-->Line_25 $$ writeRecordHeader(attId, fileId, dataStream)[ FD ]
Line_23 $$ int fileId = DataInputOutputUtil.readINT(attrRefs)-->Line_25 $$ writeRecordHeader(attId, fileId, dataStream)[ FD ]
Line_2 $$ protected void rewriteDirectoryRecordWithAttrContent(BufferExposingByteArrayOutputStream _out) throws IOException -->Line_67 $$ if (_out.size() > 0) [ FD ]
Line_38 $$ byte[] b = new byte[attrAddressOrSize]-->Line_40 $$ dataStream.write(b)[ FD ]
Line_33 $$ dataStream = new DataOutputStream(unchangedPreviousDirectoryStream)-->Line_35 $$ DataInputOutputUtil.writeINT(dataStream, attIdOnPage)[ FD ]
Line_67 $$ if (_out.size() > 0) -->Line_69 $$ DataInputOutputUtil.writeINT(directoryStream, _out.size())[ CD ]
Line_2 $$ protected void rewriteDirectoryRecordWithAttrContent(BufferExposingByteArrayOutputStream _out) throws IOException -->Line_7 $$ BufferExposingByteArrayOutputStream unchangedPreviousDirectoryStream = null[ CD ]
Line_15 $$ DataOutputStream dataStream = null-->Line_25 $$ writeRecordHeader(attId, fileId, dataStream)[ FD ]
Line_7 $$ BufferExposingByteArrayOutputStream unchangedPreviousDirectoryStream = null-->Line_65 $$ directoryStream.write(unchangedPreviousDirectoryStream.getInternalBuffer(), 0, unchangedPreviousDirectoryStream.size())[ FD ]
Line_2 $$ protected void rewriteDirectoryRecordWithAttrContent(BufferExposingByteArrayOutputStream _out) throws IOException -->Line_6 $$ Storage storage = getAttributesStorage()[ CD ]
Line_20 $$ dataStream = new DataOutputStream(unchangedPreviousDirectoryStream)-->Line_25 $$ writeRecordHeader(attId, fileId, dataStream)[ FD ]
Line_15 $$ DataOutputStream dataStream = null-->Line_40 $$ dataStream.write(b)[ FD ]
Line_9 $$ if (recordId == 0) -->Line_12 $$ directoryRecord = true[ CD ]
Line_9 $$ if (recordId == 0) -->Line_15 $$ DataOutputStream dataStream = null[ CD ]
Line_3 $$ int recordId = getAttributeRecordId(myFileId)-->Line_9 $$ if (recordId == 0) [ FD ]
Line_6 $$ Storage storage = getAttributesStorage()-->Line_10 $$ recordId = storage.createNewRecord()[ FD ]
Line_38 $$ byte[] b = new byte[attrAddressOrSize]-->Line_39 $$ attrRefs.readFully(b)[ FD ]
Line_2 $$ protected void rewriteDirectoryRecordWithAttrContent(BufferExposingByteArrayOutputStream _out) throws IOException -->Line_44 $$ if (_out.size() == attrAddressOrSize) [ FD ]
Line_14 $$ DataInputStream attrRefs = storage.readStream(recordId)-->Line_49 $$ attrRefs.skipBytes(attrAddressOrSize)[ FD ]
Line_29 $$ final int attrAddressOrSize = DataInputOutputUtil.readINT(attrRefs)-->Line_49 $$ attrRefs.skipBytes(attrAddressOrSize)[ FD ]
Line_59 $$ AbstractStorage.StorageDataOutput directoryStream = storage.writeStream(recordId)-->Line_72 $$ directoryStream.close()[ FD ]
Line_28 $$ final int attIdOnPage = DataInputOutputUtil.readINT(attrRefs)-->Line_30 $$ if (attIdOnPage != encodedAttrId) [ FD ]
Line_15 $$ DataOutputStream dataStream = null-->Line_55 $$ if (dataStream != null)[ FD ]
Line_2 $$ protected void rewriteDirectoryRecordWithAttrContent(BufferExposingByteArrayOutputStream _out) throws IOException -->Line_3 $$ int recordId = getAttributeRecordId(myFileId)[ CD ]
Line_59 $$ AbstractStorage.StorageDataOutput directoryStream = storage.writeStream(recordId)-->Line_62 $$ writeRecordHeader(DbConnection.RESERVED_ATTR_ID, myFileId, directoryStream)[ FD ]
Line_59 $$ AbstractStorage.StorageDataOutput directoryStream = storage.writeStream(recordId)-->Line_70 $$ directoryStream.write(_out.getInternalBuffer(), 0, _out.size())[ FD ]
Line_59 $$ AbstractStorage.StorageDataOutput directoryStream = storage.writeStream(recordId)-->Line_65 $$ directoryStream.write(unchangedPreviousDirectoryStream.getInternalBuffer(), 0, unchangedPreviousDirectoryStream.size())[ FD ]
Line_2 $$ protected void rewriteDirectoryRecordWithAttrContent(BufferExposingByteArrayOutputStream _out) throws IOException -->Line_8 $$ boolean directoryRecord = false[ CD ]
Line_5 $$ int encodedAttrId = DbConnection.getAttributeId(myAttribute.getId())-->Line_30 $$ if (attIdOnPage != encodedAttrId) [ FD ]
Line_29 $$ final int attrAddressOrSize = DataInputOutputUtil.readINT(attrRefs)-->Line_44 $$ if (_out.size() == attrAddressOrSize) [ FD ]
Line_30 $$ if (attIdOnPage != encodedAttrId) -->Line_35 $$ DataInputOutputUtil.writeINT(dataStream, attIdOnPage)[ CD ]
Line_2 $$ protected void rewriteDirectoryRecordWithAttrContent(BufferExposingByteArrayOutputStream _out) throws IOException -->Line_70 $$ directoryStream.write(_out.getInternalBuffer(), 0, _out.size())[ FD ]
Line_15 $$ DataOutputStream dataStream = null-->Line_31 $$ if (dataStream == null) [ FD ]
Line_2 $$ protected void rewriteDirectoryRecordWithAttrContent(BufferExposingByteArrayOutputStream _out) throws IOException -->Line_5 $$ int encodedAttrId = DbConnection.getAttributeId(myAttribute.getId())[ CD ]
Line_2 $$ protected void rewriteDirectoryRecordWithAttrContent(BufferExposingByteArrayOutputStream _out) throws IOException -->Line_60 $$ if (directoryRecord) [ CD ]
Line_10 $$ recordId = storage.createNewRecord()-->Line_11 $$ setAttributeRecordId(myFileId, recordId)[ FD ]
Line_43 $$ if (attrAddressOrSize < MAX_SMALL_ATTR_SIZE) -->Line_49 $$ attrRefs.skipBytes(attrAddressOrSize)[ CD ]
Line_67 $$ if (_out.size() > 0) -->Line_68 $$ DataInputOutputUtil.writeINT(directoryStream, encodedAttrId)[ CD ]
Line_6 $$ Storage storage = getAttributesStorage()-->Line_14 $$ DataInputStream attrRefs = storage.readStream(recordId)[ FD ]
Line_2 $$ protected void rewriteDirectoryRecordWithAttrContent(BufferExposingByteArrayOutputStream _out) throws IOException -->Line_69 $$ DataInputOutputUtil.writeINT(directoryStream, _out.size())[ FD ]
Line_14 $$ DataInputStream attrRefs = storage.readStream(recordId)-->Line_23 $$ int fileId = DataInputOutputUtil.readINT(attrRefs)[ FD ]
Line_19 $$ unchangedPreviousDirectoryStream = new BufferExposingByteArrayOutputStream()-->Line_32 $$ unchangedPreviousDirectoryStream = new BufferExposingByteArrayOutputStream()[ FD ]
Line_3 $$ int recordId = getAttributeRecordId(myFileId)-->Line_59 $$ AbstractStorage.StorageDataOutput directoryStream = storage.writeStream(recordId)[ FD ]
Line_14 $$ DataInputStream attrRefs = storage.readStream(recordId)-->Line_21 $$ int attId = DataInputOutputUtil.readINT(attrRefs)[ FD ]
Line_3 $$ int recordId = getAttributeRecordId(myFileId)-->Line_10 $$ recordId = storage.createNewRecord()[ FD ]
Line_20 $$ dataStream = new DataOutputStream(unchangedPreviousDirectoryStream)-->Line_55 $$ if (dataStream != null)[ FD ]
Line_14 $$ DataInputStream attrRefs = storage.readStream(recordId)-->Line_29 $$ final int attrAddressOrSize = DataInputOutputUtil.readINT(attrRefs)[ FD ]
Line_27 $$ while (attrRefs.available() > 0) -->Line_29 $$ final int attrAddressOrSize = DataInputOutputUtil.readINT(attrRefs)[ CD ]
Line_8 $$ boolean directoryRecord = false-->Line_12 $$ directoryRecord = true[ FD ]
Line_43 $$ if (attrAddressOrSize < MAX_SMALL_ATTR_SIZE) -->Line_44 $$ if (_out.size() == attrAddressOrSize) [ CD ]
Line_18 $$ if (bulkAttrReadSupport) -->Line_21 $$ int attId = DataInputOutputUtil.readINT(attrRefs)[ CD ]
Line_15 $$ DataOutputStream dataStream = null-->Line_36 $$ DataInputOutputUtil.writeINT(dataStream, attrAddressOrSize)[ FD ]
Line_37 $$ if (attrAddressOrSize < MAX_SMALL_ATTR_SIZE) -->Line_39 $$ attrRefs.readFully(b)[ CD ]
Line_20 $$ dataStream = new DataOutputStream(unchangedPreviousDirectoryStream)-->Line_40 $$ dataStream.write(b)[ FD ]
Line_18 $$ if (bulkAttrReadSupport) -->Line_25 $$ writeRecordHeader(attId, fileId, dataStream)[ CD ]
Line_30 $$ if (attIdOnPage != encodedAttrId) -->Line_31 $$ if (dataStream == null) [ CD ]
Line_27 $$ while (attrRefs.available() > 0) -->Line_28 $$ final int attIdOnPage = DataInputOutputUtil.readINT(attrRefs)[ CD ]
Line_28 $$ final int attIdOnPage = DataInputOutputUtil.readINT(attrRefs)-->Line_35 $$ DataInputOutputUtil.writeINT(dataStream, attIdOnPage)[ FD ]
Line_2 $$ protected void rewriteDirectoryRecordWithAttrContent(BufferExposingByteArrayOutputStream _out) throws IOException -->Line_46 $$ storage.replaceBytes(recordId, remainingAtStart - remaining, new ByteSequence(_out.getInternalBuffer(), 0, _out.size()))[ FD ]
Line_2 $$ protected void rewriteDirectoryRecordWithAttrContent(BufferExposingByteArrayOutputStream _out) throws IOException -->Line_9 $$ if (recordId == 0) [ CD ]
Line_10 $$ recordId = storage.createNewRecord()-->Line_14 $$ DataInputStream attrRefs = storage.readStream(recordId)[ FD ]
Line_14 $$ DataInputStream attrRefs = storage.readStream(recordId)-->Line_45 $$ int remaining = attrRefs.available()[ FD ]
Line_14 $$ DataInputStream attrRefs = storage.readStream(recordId)-->Line_28 $$ final int attIdOnPage = DataInputOutputUtil.readINT(attrRefs)[ FD ]
Line_6 $$ Storage storage = getAttributesStorage()-->Line_59 $$ AbstractStorage.StorageDataOutput directoryStream = storage.writeStream(recordId)[ FD ]
Line_7 $$ BufferExposingByteArrayOutputStream unchangedPreviousDirectoryStream = null-->Line_64 $$ if (unchangedPreviousDirectoryStream != null) [ FD ]
Line_31 $$ if (dataStream == null) -->Line_32 $$ unchangedPreviousDirectoryStream = new BufferExposingByteArrayOutputStream()[ CD ]
Line_30 $$ if (attIdOnPage != encodedAttrId) -->Line_43 $$ if (attrAddressOrSize < MAX_SMALL_ATTR_SIZE) [ CD ]
Line_30 $$ if (attIdOnPage != encodedAttrId) -->Line_37 $$ if (attrAddressOrSize < MAX_SMALL_ATTR_SIZE) [ CD ]
Line_20 $$ dataStream = new DataOutputStream(unchangedPreviousDirectoryStream)-->Line_31 $$ if (dataStream == null) [ FD ]
Line_32 $$ unchangedPreviousDirectoryStream = new BufferExposingByteArrayOutputStream()-->Line_65 $$ directoryStream.write(unchangedPreviousDirectoryStream.getInternalBuffer(), 0, unchangedPreviousDirectoryStream.size())[ FD ]
Line_7 $$ BufferExposingByteArrayOutputStream unchangedPreviousDirectoryStream = null-->Line_19 $$ unchangedPreviousDirectoryStream = new BufferExposingByteArrayOutputStream()[ FD ]
Line_14 $$ DataInputStream attrRefs = storage.readStream(recordId)-->Line_54 $$ attrRefs.close()[ FD ]
Line_15 $$ DataOutputStream dataStream = null-->Line_56 $$ dataStream.close()[ FD ]
Line_33 $$ dataStream = new DataOutputStream(unchangedPreviousDirectoryStream)-->Line_40 $$ dataStream.write(b)[ FD ]
Line_59 $$ AbstractStorage.StorageDataOutput directoryStream = storage.writeStream(recordId)-->Line_68 $$ DataInputOutputUtil.writeINT(directoryStream, encodedAttrId)[ FD ]
Line_9 $$ if (recordId == 0) -->Line_10 $$ recordId = storage.createNewRecord()[ CD ]
Line_15 $$ DataOutputStream dataStream = null-->Line_35 $$ DataInputOutputUtil.writeINT(dataStream, attIdOnPage)[ FD ]
Line_6 $$ Storage storage = getAttributesStorage()-->Line_46 $$ storage.replaceBytes(recordId, remainingAtStart - remaining, new ByteSequence(_out.getInternalBuffer(), 0, _out.size()))[ FD ]
Line_37 $$ if (attrAddressOrSize < MAX_SMALL_ATTR_SIZE) -->Line_38 $$ byte[] b = new byte[attrAddressOrSize][ CD ]
Line_10 $$ recordId = storage.createNewRecord()-->Line_46 $$ storage.replaceBytes(recordId, remainingAtStart - remaining, new ByteSequence(_out.getInternalBuffer(), 0, _out.size()))[ FD ]
Line_14 $$ DataInputStream attrRefs = storage.readStream(recordId)-->Line_27 $$ while (attrRefs.available() > 0) [ FD ]
Line_27 $$ while (attrRefs.available() > 0) -->Line_30 $$ if (attIdOnPage != encodedAttrId) [ CD ]
Line_44 $$ if (_out.size() == attrAddressOrSize) -->Line_47 $$ return[ CD ]
Line_2 $$ protected void rewriteDirectoryRecordWithAttrContent(BufferExposingByteArrayOutputStream _out) throws IOException -->Line_64 $$ if (unchangedPreviousDirectoryStream != null) [ CD ]
Line_18 $$ if (bulkAttrReadSupport) -->Line_23 $$ int fileId = DataInputOutputUtil.readINT(attrRefs)[ CD ]
Line_30 $$ if (attIdOnPage != encodedAttrId) -->Line_36 $$ DataInputOutputUtil.writeINT(dataStream, attrAddressOrSize)[ CD ]
Line_7 $$ BufferExposingByteArrayOutputStream unchangedPreviousDirectoryStream = null-->Line_32 $$ unchangedPreviousDirectoryStream = new BufferExposingByteArrayOutputStream()[ FD ]
Line_18 $$ if (bulkAttrReadSupport) -->Line_19 $$ unchangedPreviousDirectoryStream = new BufferExposingByteArrayOutputStream()[ CD ]
Line_29 $$ final int attrAddressOrSize = DataInputOutputUtil.readINT(attrRefs)-->Line_43 $$ if (attrAddressOrSize < MAX_SMALL_ATTR_SIZE) [ FD ]
Line_37 $$ if (attrAddressOrSize < MAX_SMALL_ATTR_SIZE) -->Line_40 $$ dataStream.write(b)[ CD ]
Line_59 $$ AbstractStorage.StorageDataOutput directoryStream = storage.writeStream(recordId)-->Line_69 $$ DataInputOutputUtil.writeINT(directoryStream, _out.size())[ FD ]
Line_60 $$ if (directoryRecord) -->Line_61 $$ if (bulkAttrReadSupport)[ CD ]
Line_3 $$ int recordId = getAttributeRecordId(myFileId)-->Line_46 $$ storage.replaceBytes(recordId, remainingAtStart - remaining, new ByteSequence(_out.getInternalBuffer(), 0, _out.size()))[ FD ]
Line_3 $$ int recordId = getAttributeRecordId(myFileId)-->Line_11 $$ setAttributeRecordId(myFileId, recordId)[ FD ]
Line_44 $$ if (_out.size() == attrAddressOrSize) -->Line_45 $$ int remaining = attrRefs.available()[ CD ]
Line_15 $$ DataOutputStream dataStream = null-->Line_20 $$ dataStream = new DataOutputStream(unchangedPreviousDirectoryStream)[ FD ]
Line_20 $$ dataStream = new DataOutputStream(unchangedPreviousDirectoryStream)-->Line_33 $$ dataStream = new DataOutputStream(unchangedPreviousDirectoryStream)[ FD ]
Line_9 $$ if (recordId == 0) -->Line_14 $$ DataInputStream attrRefs = storage.readStream(recordId)[ CD ]
Line_33 $$ dataStream = new DataOutputStream(unchangedPreviousDirectoryStream)-->Line_36 $$ DataInputOutputUtil.writeINT(dataStream, attrAddressOrSize)[ FD ]
Line_33 $$ dataStream = new DataOutputStream(unchangedPreviousDirectoryStream)-->Line_31 $$ if (dataStream == null) [ FD ]
Line_2 $$ protected void rewriteDirectoryRecordWithAttrContent(BufferExposingByteArrayOutputStream _out) throws IOException -->Line_59 $$ AbstractStorage.StorageDataOutput directoryStream = storage.writeStream(recordId)[ CD ]
Line_32 $$ unchangedPreviousDirectoryStream = new BufferExposingByteArrayOutputStream()-->Line_64 $$ if (unchangedPreviousDirectoryStream != null) [ FD ]
Line_31 $$ if (dataStream == null) -->Line_33 $$ dataStream = new DataOutputStream(unchangedPreviousDirectoryStream)[ CD ]
Line_20 $$ dataStream = new DataOutputStream(unchangedPreviousDirectoryStream)-->Line_36 $$ DataInputOutputUtil.writeINT(dataStream, attrAddressOrSize)[ FD ]
Line_67 $$ if (_out.size() > 0) -->Line_70 $$ directoryStream.write(_out.getInternalBuffer(), 0, _out.size())[ CD ]
Line_29 $$ final int attrAddressOrSize = DataInputOutputUtil.readINT(attrRefs)-->Line_37 $$ if (attrAddressOrSize < MAX_SMALL_ATTR_SIZE) [ FD ]
Line_2 $$ protected void rewriteDirectoryRecordWithAttrContent(BufferExposingByteArrayOutputStream _out) throws IOException -->Line_72 $$ directoryStream.close()[ CD ]
Line_44 $$ if (_out.size() == attrAddressOrSize) -->Line_46 $$ storage.replaceBytes(recordId, remainingAtStart - remaining, new ByteSequence(_out.getInternalBuffer(), 0, _out.size()))[ CD ]
Line_19 $$ unchangedPreviousDirectoryStream = new BufferExposingByteArrayOutputStream()-->Line_65 $$ directoryStream.write(unchangedPreviousDirectoryStream.getInternalBuffer(), 0, unchangedPreviousDirectoryStream.size())[ FD ]
Line_33 $$ dataStream = new DataOutputStream(unchangedPreviousDirectoryStream)-->Line_56 $$ dataStream.close()[ FD ]
Line_14 $$ DataInputStream attrRefs = storage.readStream(recordId)-->Line_17 $$ final int remainingAtStart = attrRefs.available()[ FD ]
Line_55 $$ if (dataStream != null)-->Line_56 $$ dataStream.close()[ CD ]
Line_3 $$ int recordId = getAttributeRecordId(myFileId)-->Line_14 $$ DataInputStream attrRefs = storage.readStream(recordId)[ FD ]
Line_18 $$ if (bulkAttrReadSupport) -->Line_20 $$ dataStream = new DataOutputStream(unchangedPreviousDirectoryStream)[ CD ]
Line_14 $$ DataInputStream attrRefs = storage.readStream(recordId)-->Line_39 $$ attrRefs.readFully(b)[ FD ]
Line_61 $$ if (bulkAttrReadSupport)-->Line_62 $$ writeRecordHeader(DbConnection.RESERVED_ATTR_ID, myFileId, directoryStream)[ CD ]
Line_20 $$ dataStream = new DataOutputStream(unchangedPreviousDirectoryStream)-->Line_35 $$ DataInputOutputUtil.writeINT(dataStream, attIdOnPage)[ FD ]
